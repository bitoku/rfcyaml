Abstract This document describes an extension to Generalized MPLS (Multi  Protocol Label Switching) signaling to support communication of alarm information.
GMPLS signaling already supports the control of alarm reporting, but not the communication of alarm information.
This document presents both a functional description and GMPLS RSVP specifics of such an extension.
This document also proposes modification of the RSVP ERROR SPEC object.
This document updates RFC 3473, "Generalized Multi Protocol Label Switching (GMPLS)
Signaling Resource ReserVation Protocol Traffic Engineering (RSVP TE) Extensions", through the addition of new, optional protocol elements.
It does not change, and is fully backward compatible with, the procedures specified in RFC 3473.
Introduction GMPLS signaling provides mechanisms that can be used to control the reporting of alarms associated with a label switched path (LSP).
This support is provided via Administrative Status Information [RFC3471] and the Admin Status object [RFC3473].
These mechanisms only control if alarm reporting is inhibited.
No provision is made for communication of alarm information within GMPLS.
The extension described in this document defines how the alarm information associated with a GMPLS LSP may be communicated along the path of the LSP.
Communication both upstream and downstream is supported.
The value in communicating such alarm information is that this information is then available at every node along the LSP for display and diagnostic purposes.
Alarm information may also be useful in certain traffic protection scenarios, but such uses are out of the scope of this document.
Alarm communication is supported via a new object, new error/alarm information TLVs, and a new Administrative Status Information bit.
The communication of alarms, as described in this document, is controllable on a per LSP basis.
Such communication may be useful within network configurations where not all nodes support communication to a user for reporting of alarms and/or communication is needed to support specific applications.
The support of this functionality is optional.
The communication of alarms within GMPLS does not imply any modification in behavior of processing of alarms, or for the communication of alarms outside of GMPLS.
Additionally, the extension described in this document is not intended to replace any (existing) data plane fault propagation techniques.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
Background Problems with data plane state can often be detected by associated data plane hardware components.
Such data plane problems are typically filtered based on elapsed time and local policy.
Problems that pass the filtering process are normally raised as alarms.
These alarms are available for display to operators.
They also may be collected centrally through means that are out of the scope of this document.
Not all data plane problems cause the LSP to be immediately torn down.
Further, there may be a desire, particularly in optical transport networks, to retain an LSP and communicate relevant alarm information even when the data plane state has failed completely.
Although error information can be reported using PathErr, ResvErr, and Notify messages, these messages typically indicate a problem in signaling state and can only report one problem at a time.
This makes it hard to correlate all of the problems that may be associated with a single LSP and to allow an operator examining the status of an LSP to view a full list of current problems.
This situation is exacerbated by the absence of any way to communicate that a problem has been resolved and a corresponding alarm cleared.
The extensions defined in this document allow an operator or a software component to obtain a full list of current alarms associated with all of the resources used to support an LSP.
The extensions also ensure that this list is kept up to date and synchronized with the real alarm status in the network.
Finally, the extensions make the list available at every node traversed by an LSP.
A new object is introduced to carry alarm information details.
The details of alarm information are much like the error information carried in the existing ERROR SPEC objects.
For this reason the communication of alarm information uses a format that is based on the communication of error information.
The new object introduced to carry alarm information details is called an ALARM SPEC object.
This object has the same format as the ERROR SPEC object, but uses a new C Num to avoid the semantics of error processing.
Also, additional TLVs are defined for the IF ID ALARM SPEC objects to support the communication of information related to a specific alarm.
These TLVs may also be useful when included in ERROR SPEC objects, e.g., when the ERROR SPEC object is carried within a Notify message.
While the details of alarm information are like the details of existing error communication, the semantics of processing differ.
Alarm information will typically relate to changes in data plane state, without changes in control state.
Alarm information will always be associated with in place LSPs.
Such information will also typically be most useful to operators and applications other than control plane protocol processing.
Finally, while error information is communicated within PathErr, ResvErr, and Notify messages [RFC3473], alarm information will be carried within Path and Resv messages.
Path messages are used to carry alarm information to downstream nodes, and Resv messages are used to carry alarm information to upstream nodes.
The intent of sending alarm information both upstream and downstream is to provide the same visibility to alarm information at any point along an LSP.
The communication of multiple alarms associated with an LSP is supported.
In this case, multiple ALARM SPEC objects will be carried in the Path or Resv messages.
The addition of alarm information to Path and Resv messages is controlled via a new Administrative Status Information bit.
Administrative Status Information is carried in the Admin Status object.
This section provides the GMPLS RSVP [RFC3473] specification for communication of alarm information.
The communication of alarm information is OPTIONAL.
This section applies to nodes that support communication of alarm information.
The ALARM SPEC objects use the same format as the ERROR SPEC object, but with class number of 198 (assigned by IANA in the form 11bbbbbb, per Section 3.1.4).
(C Type value defined for ERROR SPEC, but is not defined for use with ALARM SPEC.)
(C Type value defined for ERROR SPEC, but is not defined for use with ALARM SPEC.)
IF ID ALARM SPEC object:
Class   198, C Type   3 Definition same as IPv4
IF ID ALARM SPEC object:
Class   198, C Type   4 Definition same as IPv6 IF ID
IF ID ALARM SPEC (and ERROR SPEC)
The following new TLVs are defined for use with the IPv4 and IPv6 IF ID ALARM SPEC objects.
They may also be used with the IPv4 and IPv6 IF ID ERROR SPEC objects.
See [RFC3471] Section 9.1.1 for the original definition of these values.
Note the length provided below is for the total TLV.
All TLVs defined in this section are OPTIONAL.
The defined TLVs MUST follow any interface identifying TLVs.
No rules apply to the relative ordering of the TLVs defined in this section.
The Reference Count TLV has the following format:
The number of times this alarm has been repeated as determined by the reporting node.
This field MUST NOT be set to zero, and TLVs received with this field set to zero MUST be ignored.
Only one Reference Count TLV may be included in an object.
The Severity TLV has the following format:
Reserved: 20 bits This field is reserved.
It MUST be set to zero on generation, MUST be ignored on receipt, and MUST be forwarded unchanged and unexamined by transit nodes.
Impact: 4 bits Indicates the impact of the alarm indicated in the TLV.
See [M.20] for a general discussion on classification of failures.
The following values are defined in this document.
The details of the semantics may be found in [M.20].
Non Service Affecting (Data traffic not interrupted)
8 bits Indicates the impact of the alarm indicated in the TLV.
See [RFC3877] and [M.3100] for more information on severity.
The following values are defined in this document.
The details of the semantics may be found in [RFC3877] and [M.3100]:
Only one Severity TLV may be included in an object.
The Global Timestamp TLV has the following format:
An unsigned fixed point integer that indicates the number of seconds since 00:00:00 UT on 1 January 1970 according to the clock on the node that originates this TLV.
This time MAY include leap seconds if they are used by the local clock and SHOULD contain the same time value as used by the node when the alarm is reported through other systems (such as within the Management Plane) if global time is used in those reports.
Only one Global Timestamp TLV may be included in an object.
The Local Timestamp TLV has the following format:
This number is expected to be meaningful in the context of the originating node.
For example, it may indicate the number of seconds since the node rebooted or may be a local representation of an unsynchronized real time clock.
Only one Local Timestamp TLV may be included in an object.
The Error String TLV has the following format:
Error String: 32 bits minimum (variable)
A string of characters in US ASCII, representing the type of error/alarm.
This string is padded to the next largest 4 byte boundary using null characters.
Null padding is not required when the string is 32 bit aligned.
The contents of error string are implementation dependent.
See the condition types listed in Appendices of [GR833] for a list of example strings.
Multiple Error String TLVs may be included in an object.
This section applies to nodes that support the communication of alarm information.
ALARM SPEC objects are carried in Path and Resv messages.
Multiple ALARM SPEC objects MAY be present.
Nodes that support the extensions defined in this document SHOULD store any alarm information from received ALARM SPEC objects for future use.
All ALARM SPEC objects received in Path messages SHOULD be passed unmodified downstream in the corresponding Path messages.
All ALARM SPEC objects received in Resv messages SHOULD be passed unmodified upstream in the corresponding Resv messages.
ALARM SPEC objects are merged in transmitted Resv messages by including a copy of all ALARM SPEC objects received in corresponding Resv Messages.
To advertise local alarm information, a node generates an ALARM SPEC object for each alarm and adds it to both the Path and Resv messages for the impacted LSP.
In all cases, appropriate Error Node Address, Error Code, and Error Values MUST be set (see below for a discussion on Error Code and Error Values).
As the InPlace and NotGuilty flags only have meaning in ERROR SPEC objects, they SHOULD NOT be set.
TLVs SHOULD be included in the ALARM SPEC object to identify the interface, if any, associated with the alarm.
The TLVs defined in [RFC3471] for identifying interfaces in the IF ID ERROR SPEC object
[RFC3473] SHOULD be used for this purpose, but note that TLVs type 4 and 5 (component interfaces) are deprecated by [RFC4201] and SHOULD NOT be used.
TLVs SHOULD also be included to indicate the severity (Severity TLV), the time (Global Timestamp and/or Local Timestamp TLVs), and a (brief) string (Error String TLV) associated with the alarm.
The reference count TLV MAY also be included to indicate the number of times an alarm has been repeated at the reporting node.
ALARM SPEC objects received from other nodes are not impacted by the addition of local ALARM SPEC objects, i.e., they continue to be processed as described above.
The choice of which alarm or alarms to advertise and which to omit is a local policy matter, and may be configurable by the user.
There are two ways to indicate time.
A global timestamp TLV is used to provide an absolute time reference for the occurrence of an alarm.
The local timestamp TLV is used to provide time reference for the occurrence of an alarm that is relative to other information advertised by the node.
The global timestamp SHOULD be used on nodes that maintain an absolute time reference.
Both timestamp TLVs MAY be used simultaneously.
Note, ALARM SPEC objects SHOULD NOT be added to the Path and Resv states of LSPs that are in "alarm communication inhibited" state.
ALARM SPEC objects MAY be added to the state of LSPs that are in an "administratively down" state.
These states are indicated by the I and A bits of the Admin Status object; see Section 3.2.
To remove local alarm information, a node simply removes the matching locally generated ALARM SPEC objects from the outgoing Path and Resv messages.
A node MAY modify a locally generated ALARM SPEC object.
Normal refresh and trigger message processing applies to Path or Resv messages that contain ALARM SPEC objects.
Note that changes in ALARM SPEC objects from one message to the next may include a modification in the contents of a specific ALARM SPEC object, or a change in the number of ALARM SPEC objects present.
All changes in ALARM SPEC objects SHOULD be processed as trigger messages.
Failure to follow the above directives, in particular the ones labeled "SHOULD" and "SHOULD NOT", may result in the alarm information not being properly or fully communicated.
Error Codes and Values The Error Codes and Values used in ALARM SPEC objects are the same as those used in ERROR SPEC objects.
New Error Code values for use with both ERROR SPEC and ALARM SPEC objects may be assigned to support alarm types defined by other standards.
In this document we define one new Error Code.
The Error Code uses the value 31 and is referred to as "Alarms".
The values used in the Error Values field when the Error Code is "Alarms" are the same as the values defined in the IANAItuProbableCause Textual Convention of IANA ITU ALARM TC MIB in the Alarm MIB [RFC3877].
Note that these values are managed by IANA; see http://www.iana.org.
The support of ALARM SPEC objects is OPTIONAL.
Non supporting nodes will (according to the rules defined in [RFC2205]) pass the objects through the node unmodified, because the ALARM SPEC object has a C Num of the form 11bbbbbb.
This allows alarm information to be collected and examined in a network built from a collection of nodes some of which support the communication of alarm information, and some of which do not.
Controlling Alarm Communication Alarm information communication is controlled via Administrative Status Information as carried in the Admin Status object.
A new bit is defined, called the I bit, that indicates when alarm communication is to be inhibited.
The definition of this bit does not modify the procedures defined in Section 7 of [RFC3473].
1 bit When set, indicates that alarm communication is disabled for the LSP and that nodes SHOULD NOT add local alarm information.
See Section 7.1 of [RFC3473] for the definition of the remaining bits.
The I bit may be set and cleared using the procedures defined in Sections 7.2 and 7.3 of [RFC3473].
A node that receives (or generates) an Admin Status object with the A or I bits set (1), SHOULD remove all locally generated alarm information from the matching LSP's outgoing Path and Resv messages.
When a node receives (or generates) an Admin Status object with the A
and I bits clear (0)
and there is local alarm information present, it SHOULD add the local alarm information to the matching LSP's outgoing Path and Resv messages.
The processing of non locally generated ALARM SPEC objects MUST NOT be impacted by the contents of the Admin Status object; that is, received ALARM SPEC objects MUST be forwarded unchanged regardless of the received or transmitted settings of the I and A bits.
Note that, per [RFC3473], the absence of the Admin Status object is equivalent to receiving an object containing values all set to zero (0).
I bit related processing behavior MAY be overridden locally based on configuration.
When generating Notify messages for LSPs with the
I bit set, the TLVs described in this document
MAY be added to the ERROR SPEC object sent in the Notify message.
This section presents the RSVP message related formats as modified by this document.
The formats specified in [RFC3473] served as the basis of these formats.
The objects are listed in suggested ordering.
The format of a Path message is as follows:
The format of a Resv message is as follows:
> <flow descriptor list> is not modified by this document.
[RFC4208] defines how GMPLS may be used in an overlay model to provide a user to network interface (UNI).
In this model, restrictions may be applied to the information that is signaled between an edge node and a core node.
This restriction allows the core network to limit the information that is visible outside of the core.
This restriction may be made for confidentiality, privacy, or security reasons.
It may also be made for operational reasons, for example, if the information is only applicable within the core network.
The extensions described in this document are candidates for filtering as described in [RFC4208].
In particular, the following observations apply.
An ingress or egress core node MAY filter alarms from the GMPLS core to a client node UNI LSP.
This may be to protect information about the core network, or to indicate that the core network is performing or has completed recovery actions for the GMPLS LSP.
An ingress or egress core node
MAY modify alarms from the GMPLS core when sending to a client node UNI LSP.
This may facilitate the UNI client's ability to understand the failure and its effect on the data plane, and enable the UNI client to take corrective actions in a more appropriate manner.
Similarly, an egress core node MAY choose not to request alarm reporting on Path messages that it sends downstream to the overlay network.
to GMPLS E NNI GMPLS may be used at the external network to network interface (E NNI); see [ASON APPL].
At this interface, restrictions may be applied to the information that is signaled between an egress and an ingress core node.
This restriction allows the ingress core network to limit the information that is visible outside of its core network.
This restriction may be made for confidentiality, privacy, or security reasons.
It may also be made for operational reasons, for example, if the information is only applicable within the core network.
The extensions described in this document are candidates for filtering as described in [ASON APPL].
In particular, the following observations apply.
An ingress or egress core node MAY filter internal core network alarms.
This may be to protect information about the internal network or to indicate that the core network is performing or has completed recovery actions for this LSP.
An ingress or egress core node
MAY modify internal core network alarms.
This may facilitate the peering E NNI (i.e., the egress core node) to understand the failure and its effect on the data plane, and take corrective actions in a more appropriate manner or prolong the generated alarms upstream/downstream as appropriated.
Similarly, an egress/ingress core node MAY choose not to request alarm reporting on Path messages that it sends downstream.
Some operators may consider alarm information as sensitive.
To support environments where this is the case, implementations SHOULD allow the user to disable the generation of ALARM SPEC objects, or to filter or correlate them at domain boundaries.
This document introduces no additional security considerations.
See [RFC3473] for relevant security considerations.
It may be noted that if the security considerations of [RFC3473] are breached, alarm information may be spoofed.
Such spoofing would be at most annoying and cause slight degradation of control plane performance since the details are provided for information only and do not result in protocol actions beyond the exchange of messages to convey the information.
If the protocol security is able to be breached sufficiently to allow spoofing of alarm information then considerably more interesting and exciting damage can be caused by spoofing other elements of the protocol messages.
IANA Considerations IANA administered assignment of new values for namespaces defined in this document and reviewed in this section.
IANA made the following assignments in the "Class Names, Class Numbers, and Class Types" section of the "RSVP PARAMETERS" registry located at http://www.iana.org/assignments/rsvp parameters.
A new class named ALARM SPEC (198) was created in the 11bbbbbb range with following values  Class   198,
(C Type value defined for ERROR SPEC, but is not defined for use with ALARM SPEC.)
(C Type value defined for ERROR SPEC, but is not defined for use with ALARM SPEC.)
IF ID ALARM SPEC object:
RFC 4783 Definition same as IPv4 IF ID ERROR SPEC [RFC3473].
IF ID ALARM SPEC object:
Class   198, C Type   4 RFC 4783 Definition same as IPv6
IF ID ERROR SPEC [RFC3473].
The ALARM SPEC object uses the Error Code and Error Values from the ERROR SPEC object.
New Interface ID Types IANA made the following assignments in the "Interface ID Types" section of the "GMPLS Signaling Parameters" registry located at http://www.iana.org/assignments/gmpls sig parameters.
RFC 4783 514 8 GLOBAL TIMESTAMP    RFC 4783 515 8
New Registry for Admin Status Object Bit Fields IANA created a new section titled "Administrative Status Information Flags" in the "GMPLS Signaling Parameters" registry located at http://www.iana.org/assignments/gmpls sig parameters and made the following assignments:
New RSVP Error Code IANA made the following assignments in the "Error Codes and Values" section of the "RSVP PARAMETERS" registry located at http://www.iana.org/assignments/rsvp parameters.
The Error Value sub codes for this Error Code have values and meanings identical to the values and meanings defined in the IANAItuProbableCause Textual Convention of IANA ITU ALARM TC MIB in the Alarm MIB
Note that these values are already managed the IANA.
Contributors Contributors are listed in alphabetical order:
Deborah Brungard AT&T Labs, Room MT D1 3C22 200 Laurel Avenue Middletown, NJ 07748,
1 408 853 3206 EMail:  dimitri.papadimitriou@alcatel.be
Editor's Address Lou Berger LabN Consulting, L.L.C. Phone:   1 301 468 9228 EMail:  lberger@labn.net
