- title: __initial_text__
  contents:
  - '               Host Identity Protocol (HIP) Architecture

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo describes a snapshot of the reasoning behind a proposed\
    \ new\n   namespace, the Host Identity namespace, and a new protocol layer, the\n\
    \   Host Identity Protocol (HIP), between the internetworking and\n   transport\
    \ layers.  Herein are presented the basics of the current\n   namespaces, their\
    \ strengths and weaknesses, and how a new namespace\n   will add completeness\
    \ to them.  The roles of this new namespace in\n   the protocols are defined.\
    \  The memo describes the thinking of the\n   authors as of Fall 2003.  The architecture\
    \ may have evolved since.\n   This document represents one stable point in that\
    \ evolution of\n   understanding.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n      6.1. Transport Associations and End-points .....................11\n\
    \   7. End-host Mobility and Multi-homing .............................12\n  \
    \    7.1. Rendezvous Mechanism ......................................13\n    \
    \  7.2. Protection against Flooding Attacks .......................13\n   8. HIP\
    \ and IPsec ..................................................14\n   9. HIP and\
    \ NATs ...................................................15\n      9.1. HIP and\
    \ TCP Checksums .....................................15\n   10. Multicast .....................................................16\n\
    \   11. HIP Policies ..................................................16\n  \
    \ 12. Benefits of HIP ...............................................16\n    \
    \  12.1. HIP's Answers to NSRG Questions ..........................17\n   13.\
    \ Security Considerations .......................................19\n      13.1.\
    \ HITs Used in ACLs ........................................21\n      13.2. Non-security\
    \ considerations ..............................21\n   14. Acknowledgements ..............................................22\n\
    \   15. Informative References ........................................22\n"
- title: 1.  Disclaimer
  contents:
  - "1.  Disclaimer\n   The purpose of this memo is to provide a stable reference\
    \ point in\n   the development of the Host Identity Protocol architecture.  This\n\
    \   memo describes the thinking of the authors as of Fall 2003; their\n   thinking\
    \ may have evolved since then.  Occasionally, this memo may be\n   confusing or\
    \ self-contradicting.  That is (partially) intentional,\n   and it reflects the\
    \ snapshot nature of this memo.\n   This RFC is not a candidate for any level\
    \ of Internet Standard.  The\n   IETF disclaims any knowledge of the fitness of\
    \ this RFC for any\n   purpose and notes that the decision to publish is not based\
    \ on IETF\n   review.  However, the ideas put forth in this RFC have generated\n\
    \   significant interest, including the formation of the IETF HIP Working\n  \
    \ Group and the IRTF HIP Research Group.  These groups are expected to\n   generate\
    \ further documents, sharing their findings with the whole\n   Internet community.\n"
- title: 2.  Introduction
  contents:
  - "2.  Introduction\n   The Internet has two important global namespaces: Internet\
    \ Protocol\n   (IP) addresses and Domain Name Service (DNS) names.  These two\n\
    \   namespaces have a set of features and abstractions that have powered\n   the\
    \ Internet to what it is today.  They also have a number of\n   weaknesses.  Basically,\
    \ since they are all we have, we try to do too\n   much with them.  Semantic overloading\
    \ and functionality extensions\n   have greatly complicated these namespaces.\n\
    \   The proposed Host Identity namespace fills an important gap between\n   the\
    \ IP and DNS namespaces.  The Host Identity namespace consists of\n   Host Identifiers\
    \ (HIs).  A Host Identifier is cryptographic in its\n   nature; it is the public\
    \ key of an asymmetric key-pair.  Each host\n   will have at least one Host Identity,\
    \ but it will typically have more\n   than one.  Each Host Identity uniquely identifies\
    \ a single host;\n   i.e., no two hosts have the same Host Identity.  The Host\
    \ Identity,\n   and the corresponding Host Identifier, can be either public (e.g.,\n\
    \   published in the DNS) or unpublished.  Client systems will tend to\n   have\
    \ both public and unpublished Identities.\n   There is a subtle but important\
    \ difference between Host Identities\n   and Host Identifiers.  An Identity refers\
    \ to the abstract entity that\n   is identified.  An Identifier, on the other\
    \ hand, refers to the\n   concrete bit pattern that is used in the identification\
    \ process.\n   Although the Host Identifiers could be used in many authentication\n\
    \   systems, such as the Internet Key Exchange (IKEv2) Protocol [9], the\n   presented\
    \ architecture introduces a new protocol, called the Host\n   Identity Protocol\
    \ (HIP), and a cryptographic exchange, called the HIP\n   base exchange; see also\
    \ Section 8.  The HIP protocols provide for\n   limited forms of trust between\
    \ systems, enhance mobility, multi-\n   homing, and dynamic IP renumbering; aid\
    \ in protocol\n   translation/transition; and reduce certain types of denial-of-service\n\
    \   (DoS) attacks.\n   When HIP is used, the actual payload traffic between two\
    \ HIP hosts is\n   typically, but not necessarily, protected with IPsec.  The\
    \ Host\n   Identities are used to create the needed IPsec Security Associations\n\
    \   (SAs) and to authenticate the hosts.  When IPsec is used, the actual\n   payload\
    \ IP packets do not differ in any way from standard IPsec-\n   protected IP packets.\n"
- title: 3.  Terminology
  contents:
  - '3.  Terminology

    '
- title: 3.1.  Terms Common to Other Documents
  contents:
  - "3.1.  Terms Common to Other Documents\n   +--------------+----------------------------------------------------+\n\
    \   | Term         | Explanation                                        |\n  \
    \ +--------------+----------------------------------------------------+\n   |\
    \ public key   | The public key of an asymmetric cryptographic key  |\n   |  \
    \            | pair.  Used as a publicly known identifier for     |\n   |    \
    \          | cryptographic identity authentication.             |\n   |      \
    \        |                                                    |\n   | Private\
    \ key  | The private or secret key of an asymmetric         |\n   |          \
    \    | cryptographic key pair.  Assumed to be known only  |\n   |            \
    \  | to the party identified by the corresponding       |\n   |              |\
    \ public key. Used by the identified party to        |\n   |              | authenticate\
    \ its identity to other parties.        |\n   |              |               \
    \                                     |\n   | public key   | An asymmetric cryptographic\
    \ key pair consisting of |\n   | pair         | public and private keys.  For\
    \ example,             |\n   |              | Rivest-Shamir-Adelman (RSA) and\
    \ Digital Signature  |\n   |              | Algorithm (DSA) key pairs are such\
    \ key pairs.      |\n   |              |                                     \
    \               |\n   | end-point    | A communicating entity.  For historical\
    \ reasons,   |\n   |              | the term 'computing platform' is used in this\
    \      |\n   |              | document as a (rough) synonym for end-point.   \
    \    |\n   +--------------+----------------------------------------------------+\n"
- title: 3.2.  Terms Specific to This and Other HIP Documents
  contents:
  - "3.2.  Terms Specific to This and Other HIP Documents\n   It should be noted that\
    \ many of the terms defined herein are\n   tautologous, self-referential, or defined\
    \ through circular reference\n   to other terms.  This is due to the succinct\
    \ nature of the\n   definitions.  See the text elsewhere in this document for\
    \ more\n   elaborate explanations.\n   +--------------+----------------------------------------------------+\n\
    \   | Term         | Explanation                                        |\n  \
    \ +--------------+----------------------------------------------------+\n   |\
    \ computing    | An entity capable of communicating and computing,  |\n   | platform\
    \     | for example, a computer.  See the definition of    |\n   |           \
    \   | 'end-point', above.                                |\n   |             \
    \ |                                                    |\n   | HIP base     |\
    \ A cryptographic protocol; see also Section 8.      |\n   | exchange     |  \
    \                                                  |\n   |              |    \
    \                                                |\n   | HIP packet   | An IP\
    \ packet that carries a 'Host Identity         |\n   |              | Protocol'\
    \ message.                                 |\n   |              |            \
    \                                        |\n   | Host         | An abstract concept\
    \ assigned to a 'computing       |\n   | Identity     | platform'.  See 'Host\
    \ Identifier', below.          |\n   |              |                        \
    \                            |\n   | Host         | A namespace formed by all\
    \ possible Host            |\n   | Identity     | Identifiers.               \
    \                        |\n   | namespace    |                              \
    \                      |\n   |              |                                \
    \                    |\n   | Host         | A protocol used to carry and authenticate\
    \ Host     |\n   | Identity     | Identifiers and other information.         \
    \        |\n   | Protocol     |                                              \
    \      |\n   |              |                                                \
    \    |\n   | Host         | A 128-bit datum created by taking a cryptographic\
    \  |\n   | Identity Tag | hash over a Host Identifier.                       |\n\
    \   |              |                                                    |\n  \
    \ | Host         | A public key used as a name for a Host Identity.   |\n   |\
    \ Identifier   |                                                    |\n   |  \
    \            |                                                    |\n   | Local\
    \ Scope  | A 32-bit datum denoting a Host Identity.           |\n   | Identifier\
    \   |                                                    |\n   |             \
    \ |                                                    |\n   | Public Host  |\
    \ A published or publicly known Host Identifier used |\n   | Identifier   | as\
    \ a public name for a Host Identity, and the      |\n   | and Identity | corresponding\
    \ Identity.                            |\n   |              |                \
    \                                    |\n   | Unpublished  | A Host Identifier\
    \ that is not placed in any public |\n   | Host         | directory, and the corresponding\
    \ Host Identity.    |\n   | Identifier   | Unpublished Host Identities are typically\
    \          |\n   | and Identity | shortlived in nature, being often replaced and\
    \     |\n   |              | possibly used just once.                        \
    \   |\n   |              |                                                   \
    \ |\n   | Rendezvous   | A mechanism used to locate mobile hosts based on   |\n\
    \   | Mechanism    | their Host Identity Tag (HIT).                    |\n   +--------------+----------------------------------------------------+\n"
- title: 4.  Background
  contents:
  - "4.  Background\n   The Internet is built from three principal components: computing\n\
    \   platforms (end-points), packet transport (i.e., internetworking)\n   infrastructure,\
    \ and services (applications).  The Internet exists to\n   service two principal\
    \ components: people and robotic services\n   (silicon-based people, if you will).\
    \  All these components need to be\n   named in order to interact in a scalable\
    \ manner.  Here we concentrate\n   on naming computing platforms and packet transport\
    \ elements.\n   There are two principal namespaces in use in the Internet for\
    \ these\n   components: IP numbers and Domain Names.  Domain Names provide\n \
    \  hierarchically assigned names for some computing platforms and some\n   services.\
    \  Each hierarchy is delegated from the level above; there is\n   no anonymity\
    \ in Domain Names.  Email, HTTP, and SIP addresses all\n   reference Domain Names.\n\
    \   IP numbers are a confounding of two namespaces, the names of a host's\n  \
    \ networking interfaces and the names of the locations ('confounding'\n   is a\
    \ term used in statistics to discuss metrics that are merged into\n   one with\
    \ a gain in indexing, but a loss in informational value).  The\n   names of locations\
    \ should be understood as denoting routing direction\n   vectors, i.e., information\
    \ that is used to deliver packets to their\n   destinations.\n   IP numbers name\
    \ networking interfaces, and typically only when the\n   interface is connected\
    \ to the network.  Originally, IP numbers had\n   long-term significance.  Today,\
    \ the vast number of interfaces use\n   ephemeral and/or non-unique IP numbers.\
    \  That is, every time an\n   interface is connected to the network, it is assigned\
    \ an IP number.\n   In the current Internet, the transport layers are coupled\
    \ to the IP\n   addresses.  Neither can evolve separately from the other.  IPng\n\
    \   deliberations were strongly shaped by the decision that a\n   corresponding\
    \ TCPng would not be created.\n   There are three critical deficiencies with the\
    \ current namespaces.\n   First, dynamic readdressing cannot be directly managed.\
    \  Second,\n   anonymity is not provided in a consistent, trustable manner.\n\
    \   Finally, authentication for systems and datagrams is not provided.\n   All\
    \ of these deficiencies arise because computing platforms are not\n   well named\
    \ with the current namespaces.\n"
- title: 4.1.  A Desire for a Namespace for Computing Platforms
  contents:
  - "4.1.  A Desire for a Namespace for Computing Platforms\n   An independent namespace\
    \ for computing platforms could be used in\n   end-to-end operations independent\
    \ of the evolution of the\n   internetworking layer and across the many internetworking\
    \ layers.\n   This could support rapid readdressing of the internetworking layer\n\
    \   because of mobility, rehoming, or renumbering.\n   If the namespace for computing\
    \ platforms is based on public key\n   cryptography, it can also provide authentication\
    \ services.  If this\n   namespace is locally created without requiring registration,\
    \ it can\n   provide anonymity.\n   Such a namespace (for computing platforms)\
    \ and the names in it should\n   have the following characteristics:\n   o  The\
    \ namespace should be applied to the IP 'kernel'.  The IP kernel\n      is the\
    \ 'component' between applications and the packet transport\n      infrastructure.\n\
    \   o  The namespace should fully decouple the internetworking layer from\n  \
    \    the higher layers.  The names should replace all occurrences of IP\n    \
    \  addresses within applications (like in the Transport Control\n      Block,\
    \ TCB).  This may require changes to the current APIs.  In\n      the long run,\
    \ it is probable that some new APIs are needed.\n   o  The introduction of the\
    \ namespace should not mandate any\n      administrative infrastructure.  Deployment\
    \ must come from the\n      bottom up, in a pairwise deployment.\n   o  The names\
    \ should have a fixed-length representation, for easy\n      inclusion in datagram\
    \ headers and existing programming interfaces\n      (e.g., the TCB).\n   o  Using\
    \ the namespace should be affordable when used in protocols.\n      This is primarily\
    \ a packet size issue.  There is also a\n      computational concern in affordability.\n\
    \   o  Name collisions should be avoided as much as possible.  The\n      mathematics\
    \ of the birthday paradox can be used to estimate the\n      chance of a collision\
    \ in a given population and hash space.  In\n      general, for a random hash\
    \ space of size n bits, we would expect\n      to obtain a collision after approximately\
    \ 1.2*sqrt(2**n) hashes\n      were obtained.  For 64 bits, this number is roughly\
    \ 4 billion.  A\n      hash size of 64 bits may be too small to avoid collisions\
    \ in a\n      large population; for example, there is a 1% chance of collision\n\
    \      in a population of 640M. For 100 bits (or more), we would not\n      expect\
    \ a collision until approximately 2**50 (1 quadrillion)\n      hashes were generated.\n\
    \   o  The names should have a localized abstraction that can be used in\n   \
    \   existing protocols and APIs.\n   o  It must be possible to create names locally.\
    \  This can provide\n      anonymity at the cost of making resolvability very\
    \ difficult.\n      *  Sometimes the names may contain a delegation component.\
    \  This\n         is the cost of resolvability.\n   o  The namespace should provide\
    \ authentication services.\n   o  The names should be long-lived, but replaceable\
    \ at any time.  This\n      impacts access control lists; short lifetimes will\
    \ tend to result\n      in tedious list maintenance or require a namespace infrastructure\n\
    \      for central control of access lists.\n   In this document, a new namespace\
    \ approaching these ideas is called\n   the Host Identity namespace.  Using Host\
    \ Identities requires its own\n   protocol layer, the Host Identity Protocol,\
    \ between the\n   internetworking and transport layers.  The names are based on\
    \ public\n   key cryptography to supply authentication services.  Properly\n \
    \  designed, it can deliver all of the above-stated requirements.\n"
- title: 5.  Host Identity Namespace
  contents:
  - "5.  Host Identity Namespace\n   A name in the Host Identity namespace, a Host\
    \ Identifier (HI),\n   represents a statistically globally unique name for naming\
    \ any system\n   with an IP stack.  This identity is normally associated with,\
    \ but not\n   limited to, an IP stack.  A system can have multiple identities,\
    \ some\n   'well known', some unpublished or 'anonymous'.  A system may self-\n\
    \   assert its own identity, or may use a third-party authenticator like\n   DNS\
    \ Security (DNSSEC) [2], Pretty Good Privacy (PGP), or X.509 to\n   'notarize'\
    \ the identity assertion.  It is expected that the Host\n   Identifiers will initially\
    \ be authenticated with DNSSEC and that all\n   implementations will support DNSSEC\
    \ as a minimal baseline.\n   In theory, any name that can claim to be 'statistically\
    \ globally\n   unique' may serve as a Host Identifier.  However, in the authors'\n\
    \   opinion, a public key of a 'public key pair' makes the best Host\n   Identifier.\
    \  As will be specified in the Host Identity Protocol\n   specification, a public-key-based\
    \ HI can authenticate the HIP packets\n   and protect them from man-in-the-middle\
    \ attacks.  Since authenticated\n   datagrams are mandatory to provide much of\
    \ HIP's DoS protection, the\n   Diffie-Hellman exchange in HIP has to be authenticated.\
    \  Thus, only\n   public key HI and authenticated HIP messages are supported in\n\
    \   practice.  In this document, the non-cryptographic forms of HI and\n   HIP\
    \ are presented to complete the theory of HI, but they should not\n   be implemented\
    \ as they could produce worse DoS attacks than the\n   Internet has without Host\
    \ Identity.\n"
- title: 5.1.  Host Identifiers
  contents:
  - "5.1.  Host Identifiers\n   Host Identity adds two main features to Internet protocols.\
    \  The\n   first is a decoupling of the internetworking and transport layers;\n\
    \   see Section 6.  This decoupling will allow for independent evolution\n   of\
    \ the two layers.  In addition, it can provide end-to-end services\n   over multiple\
    \ internetworking realms.  The second feature is host\n   authentication.  Because\
    \ the Host Identifier is a public key, this\n   key can be used for authentication\
    \ in security protocols like IPsec.\n   The only completely defined structure\
    \ of the Host Identity is that of\n   a public/private key pair.  In this case,\
    \ the Host Identity is\n   referred to by its public component, the public key.\
    \  Thus, the name\n   representing a Host Identity in the Host Identity namespace,\
    \ i.e.,\n   the Host Identifier, is the public key.  In a way, the possession\
    \ of\n   the private key defines the Identity itself.  If the private key is\n\
    \   possessed by more than one node, the Identity can be considered to be\n  \
    \ a distributed one.\n   Architecturally, any other Internet naming convention\
    \ might form a\n   usable base for Host Identifiers.  However, non-cryptographic\
    \ names\n   should only be used in situations of high trust / low risk, that is,\n\
    \   any place where host authentication is not needed (no risk of host\n   spoofing\
    \ and no use of IPsec).  However, at least for interconnected\n   networks spanning\
    \ several operational domains, the set of\n   environments where the risk of host\
    \ spoofing allowed by non-\n   cryptographic Host Identifiers is acceptable is\
    \ the null set.  Hence,\n   the current HIP documents do not specify how to use\
    \ any other types\n   of Host Identifiers but public keys.\n   The actual Host\
    \ Identities are never directly used in any Internet\n   protocols.  The corresponding\
    \ Host Identifiers (public keys) may be\n   stored in various DNS or Lightweight\
    \ Directory Access Protocol (LDAP)\n   directories as identified elsewhere in\
    \ this document, and they are\n   passed in the HIP base exchange.  A Host Identity\
    \ Tag (HIT) is used\n   in other protocols to represent the Host Identity.  Another\n\
    \   representation of the Host Identities, the Local Scope Identifier\n   (LSI),\
    \ can also be used in protocols and APIs.\n"
- title: 5.2.  Storing Host Identifiers in DNS
  contents:
  - "5.2.  Storing Host Identifiers in DNS\n   The public Host Identifiers should\
    \ be stored in DNS; the unpublished\n   Host Identifiers should not be stored\
    \ anywhere (besides the\n   communicating hosts themselves).  The (public) HI\
    \ is stored in a new\n   Resource Record (RR) type, to be defined.  This RR type\
    \ is likely to\n   be quite similar to the IPSECKEY RR [6].\n   Alternatively,\
    \ or in addition to storing Host Identifiers in the DNS,\n   they may be stored\
    \ in various kinds of Public Key Infrastructure\n   (PKI).  Such a practice may\
    \ allow them to be used for purposes other\n   than pure host identification.\n"
- title: 5.3.  Host Identity Tag (HIT)
  contents:
  - "5.3.  Host Identity Tag (HIT)\n   A Host Identity Tag is a 128-bit representation\
    \ for a Host Identity.\n   It is created by taking a cryptographic hash over the\
    \ corresponding\n   Host Identifier.  There are two advantages of using a hash\
    \ over using\n   the Host Identifier in protocols.  First, its fixed length makes\
    \ for\n   easier protocol coding and also better manages the packet size cost\n\
    \   of this technology.  Second, it presents the identity in a consistent\n  \
    \ format to the protocol independent of the cryptographic algorithms\n   used.\n\
    \   In the HIP packets, the HITs identify the sender and recipient of a\n   packet.\
    \  Consequently, a HIT should be unique in the whole IP\n   universe as long as\
    \ it is being used.  In the extremely rare case of\n   a single HIT mapping to\
    \ more than one Host Identity, the Host\n   Identifiers (public keys) will make\
    \ the final difference.  If there\n   is more than one public key for a given\
    \ node, the HIT acts as a hint\n   for the correct public key to use.\n"
- title: 5.4.  Local Scope Identifier (LSI)
  contents:
  - "5.4.  Local Scope Identifier (LSI)\n   A Local Scope Identifier (LSI) is a 32-bit\
    \ localized representation\n   for a Host Identity.  The purpose of an LSI is\
    \ to facilitate using\n   Host Identities in existing protocols and APIs.  LSI's\
    \ advantage over\n   HIT is its size; its disadvantage is its local scope.\n \
    \  Examples of how LSIs can be used include: as the address in an FTP\n   command\
    \ and as the address in a socket call.  Thus, LSIs act as a\n   bridge for Host\
    \ Identities into IPv4-based protocols and APIs.\n"
- title: 6.  New Stack Architecture
  contents:
  - "6.  New Stack Architecture\n   One way to characterize Host Identity is to compare\
    \ the proposed new\n   architecture with the current one.  As discussed above,\
    \ the IP\n   addresses can be seen to be a confounding of routing direction\n\
    \   vectors and interface names.  Using the terminology from the IRTF\n   Name\
    \ Space Research Group Report [7] and, e.g., the unpublished\n   Internet Draft\
    \ \"Endpoints and Endpoint Names\" [10] by Noel Chiappa,\n   the IP addresses\
    \ currently embody the dual role of locators and end-\n   point identifiers. \
    \ That is, each IP address names a topological\n   location in the Internet, thereby\
    \ acting as a routing direction\n   vector, or locator.  At the same time, the\
    \ IP address names the\n   physical network interface currently located at the\
    \ point-of-\n   attachment, thereby acting as an end-point name.\n   In the HIP\
    \ architecture, the end-point names and locators are\n   separated from each other.\
    \  IP addresses continue to act as locators.\n   The Host Identifiers take the\
    \ role of end-point identifiers.  It is\n   important to understand that the end-point\
    \ names based on Host\n   Identities are slightly different from interface names;\
    \ a Host\n   Identity can be simultaneously reachable through several interfaces.\n\
    \   The difference between the bindings of the logical entities is\n   illustrated\
    \ in Figure 1.\n   Service ------ Socket                  Service ------ Socket\n\
    \                    |                                      |\n              \
    \      |                                      |\n                    |       \
    \                               |\n                    |                     \
    \                 |\n   End-point        |                    End-point --- Host\
    \ Identity\n            \\       |                                      |\n  \
    \            \\     |                                      |\n               \
    \ \\   |                                      |\n                  \\ |      \
    \                                |\n   Location --- IP address               \
    \ Location --- IP address\n                                 Figure 1\n"
- title: 6.1.  Transport Associations and End-points
  contents:
  - "6.1.  Transport Associations and End-points\n   Architecturally, HIP provides\
    \ for a different binding of transport-\n   layer protocols.  That is, the transport-layer\
    \ associations, i.e.,\n   TCP connections and UDP associations, are no longer\
    \ bound to IP\n   addresses but to Host Identities.\n   It is possible that a\
    \ single physical computer hosts several logical\n   end-points.  With HIP, each\
    \ of these end-points would have a distinct\n   Host Identity.  Furthermore, since\
    \ the transport associations are\n   bound to Host Identities, HIP provides for\
    \ process migration and\n   clustered servers.  That is, if a Host Identity is\
    \ moved from one\n   physical computer to another, it is also possible to simultaneously\n\
    \   move all the transport associations without breaking them.\n   Similarly,\
    \ if it is possible to distribute the processing of a single\n   Host Identity\
    \ over several physical computers, HIP provides for\n   cluster-based services\
    \ without any changes at the client end-point.\n"
- title: 7.  End-host Mobility and Multi-homing
  contents:
  - "7.  End-host Mobility and Multi-homing\n   HIP decouples the transport from the\
    \ internetworking layer, and binds\n   the transport associations to the Host\
    \ Identities (through actually\n   either the HIT or LSI).  Consequently, HIP\
    \ can provide for a degree\n   of internetworking mobility and multi-homing at\
    \ a low infrastructure\n   cost.  HIP mobility includes IP address changes (via\
    \ any method) to\n   either party.  Thus, a system is considered mobile if its\
    \ IP address\n   can change dynamically for any reason like PPP, Dynamic Host\n\
    \   Configuration Protocol (DHCP), IPv6 prefix reassignments, or a\n   Network\
    \ Address Translation (NAT) device remapping its translation.\n   Likewise, a\
    \ system is considered multi-homed if it has more than one\n   globally routable\
    \ IP address at the same time.  HIP links IP\n   addresses together, when multiple\
    \ IP addresses correspond to the same\n   Host Identity, and if one address becomes\
    \ unusable, or a more\n   preferred address becomes available, existing transport\
    \ associations\n   can easily be moved to another address.\n   When a node moves\
    \ while communication is already ongoing, address\n   changes are rather straightforward.\
    \  The peer of the mobile node can\n   just accept a HIP or an integrity protected\
    \ IPsec packet from any\n   address and ignore the source address.  However, as\
    \ discussed in\n   Section 7.2 below, a mobile node must send a HIP readdress\
    \ packet to\n   inform the peer of the new address(es), and the peer must verify\
    \ that\n   the mobile node is reachable through these addresses.  This is\n  \
    \ especially helpful for those situations where the peer node is\n   sending data\
    \ periodically to the mobile node (that is restarting a\n   connection after the\
    \ initial connection).\n"
- title: 7.1.  Rendezvous Mechanism
  contents:
  - "7.1.  Rendezvous Mechanism\n   Making a contact to a mobile node is slightly\
    \ more involved.  In\n   order to start the HIP exchange, the initiator node has\
    \ to know how\n   to reach the mobile node.  Although infrequently moving HIP\
    \ nodes\n   could use Dynamic DNS [1] to update their reachability information\
    \ in\n   the DNS, an alternative to using DNS in this fashion is to use a\n  \
    \ piece of new static infrastructure to facilitate rendezvous between\n   HIP\
    \ nodes.\n   The mobile node keeps the rendezvous infrastructure continuously\n\
    \   updated with its current IP address(es).  The mobile nodes must trust\n  \
    \ the rendezvous mechanism to properly maintain their HIT and IP\n   address mappings.\n\
    \   The rendezvous mechanism is also needed if both of the nodes happen\n   to\
    \ change their address at the same time, either because they are\n   mobile and\
    \ happen to move at the same time, because one of them is\n   off-line for a while,\
    \ or because of some other reason.  In such a\n   case, the HIP readdress packets\
    \ will cross each other in the network\n   and never reach the peer node.\n  \
    \ A separate document will specify the details of the HIP rendezvous\n   mechanism.\n"
- title: 7.2.  Protection against Flooding Attacks
  contents:
  - "7.2.  Protection against Flooding Attacks\n   Although the idea of informing\
    \ about address changes by simply\n   sending packets with a new source address\
    \ appears appealing, it is\n   not secure enough.  That is, even if HIP does not\
    \ rely on the source\n   address for anything (once the base exchange has been\
    \ completed), it\n   appears to be necessary to check a mobile node's reachability\
    \ at the\n   new address before actually sending any larger amounts of traffic\
    \ to\n   the new address.\n   Blindly accepting new addresses would potentially\
    \ lead to flooding\n   DoS attacks against third parties [8].  In a distributed\
    \ flooding\n   attack, an attacker opens high-volume HIP connections with a large\n\
    \   number of hosts (using unpublished HIs), and then claims to all of\n   these\
    \ hosts that it has moved to a target node's IP address.  If the\n   peer hosts\
    \ were to simply accept the move, the result would be a\n   packet flood to the\
    \ target node's address.  To close this attack, HIP\n   includes an address check\
    \ mechanism where the reachability of a node\n   is separately checked at each\
    \ address before using the address for\n   larger amounts of traffic.\n   Whenever\
    \ HIP is used between two hosts that fully trust each other,\n   the hosts may\
    \ optionally decide to skip the address tests.  However,\n   such performance\
    \ optimization must be restricted to peers that are\n   known to be trustworthy\
    \ and capable of protecting themselves from\n   malicious software.\n"
- title: 8.  HIP and IPsec
  contents:
  - "8.  HIP and IPsec\n   The preferred way of implementing HIP is to use IPsec to\
    \ carry the\n   actual data traffic.  As of today, the only completely defined\
    \ method\n   is to use IPsec Encapsulating Security Payload (ESP) to carry the\n\
    \   data packets.  In the future, other ways of transporting payload data\n  \
    \ may be developed, including ones that do not use cryptographic\n   protection.\n\
    \   In practice, the HIP base exchange uses the cryptographic Host\n   Identifiers\
    \ to set up a pair of ESP Security Associations (SAs) to\n   enable ESP in an\
    \ end-to-end manner.  This is implemented in a way\n   that can span addressing\
    \ realms.\n   While it would be possible, at least in theory, to use some existing\n\
    \   cryptographic protocol, such as IKEv2 together with Host Identifiers,\n  \
    \ to establish the needed SAs, HIP defines a new protocol.  There are a\n   number\
    \ of historical reasons for this, and there are also a few\n   architectural reasons.\
    \  First, IKE and IKEv2 were not designed with\n   middle boxes in mind.  As adding\
    \ a new naming layer allows one to\n   potentially add a new forwarding layer\
    \ (see Section 9, below), it is\n   very important that the HIP protocols are\
    \ friendly toward any middle\n   boxes.\n   Second, from a conceptual point of\
    \ view, the IPsec Security Parameter\n   Index (SPI) in ESP provides a simple\
    \ compression of the HITs.  This\n   does require per-HIT-pair SAs (and SPIs),\
    \ and a decrease of policy\n   granularity over other Key Management Protocols,\
    \ such as IKE and\n   IKEv2.  In particular, the current thinking is limited to\
    \ a situation\n   where, conceptually, there is only one pair of SAs between any\
    \ given\n   pair of HITs.  In other words, from an architectural point of view,\n\
    \   HIP only supports host-to-host (or endpoint-to-endpoint) Security\n   Associations.\
    \  If two hosts need more pairs of parallel SAs, they\n   should use separate\
    \ HITs for that.  However, future HIP extensions\n   may provide for more granularity\
    \ and creation of several ESP SAs\n   between a pair of HITs.\n   Since HIP is\
    \ designed for host usage, not for gateways or so-called\n   Bump-in-the-Wire\
    \ (BITW) implementations, only ESP transport mode is\n   supported.  An ESP SA\
    \ pair is indexed by the SPIs and the two HITs\n   (both HITs since a system can\
    \ have more than one HIT).  The SAs need\n   not be bound to IP addresses; all\
    \ internal control of the SA is by\n   the HITs.  Thus, a host can easily change\
    \ its address using Mobile\n   IP, DHCP, PPP, or IPv6 readdressing and still maintain\
    \ the SAs.\n   Since the transports are bound to the SA (via an LSI or a HIT),\
    \ any\n   active transport is also maintained.  Thus, real-world conditions\n\
    \   like loss of a PPP connection and its re-establishment or a mobile\n   handover\
    \ will not require a HIP negotiation or disruption of\n   transport services [12].\n\
    \   Since HIP does not negotiate any SA lifetimes, all lifetimes are\n   local\
    \ policy.  The only lifetimes a HIP implementation must support\n   are sequence\
    \ number rollover (for replay protection) and SA timeout.\n   An SA times out\
    \ if no packets are received using that SA.\n   Implementations may support lifetimes\
    \ for the various ESP transforms.\n"
- title: 9.  HIP and NATs
  contents:
  - "9.  HIP and NATs\n   Passing packets between different IP addressing realms requires\n\
    \   changing IP addresses in the packet header.  This may happen, for\n   example,\
    \ when a packet is passed between the public Internet and a\n   private address\
    \ space, or between IPv4 and IPv6 networks.  The\n   address translation is usually\
    \ implemented as Network Address\n   Translation (NAT) [4] or NAT Protocol Translation\
    \ (NAT-PT) [3].\n   In a network environment where identification is based on\
    \ the IP\n   addresses, identifying the communicating nodes is difficult when\
    \ NAT\n   is used.  With HIP, the transport-layer end-points are bound to the\n\
    \   Host Identities.  Thus, a connection between two hosts can traverse\n   many\
    \ addressing realm boundaries.  The IP addresses are used only for\n   routing\
    \ purposes; they may be changed freely during packet traversal.\n   For a HIP-based\
    \ flow, a HIP-aware NAT or NAT-PT system tracks the\n   mapping of HITs, and the\
    \ corresponding IPsec SPIs, to an IP address.\n   The NAT system has to learn\
    \ mappings both from HITs and from SPIs to\n   IP addresses.  Many HITs (and SPIs)\
    \ can map to a single IP address on\n   a NAT, simplifying connections on address-poor\
    \ NAT interfaces.  The\n   NAT can gain much of its knowledge from the HIP packets\
    \ themselves;\n   however, some NAT configuration may be necessary.\n   NAT systems\
    \ cannot touch the datagrams within the IPsec envelope;\n   thus, application-specific\
    \ address translation must be done in the\n   end systems.  HIP provides for 'Distributed\
    \ NAT', and uses the HIT or\n   the LSI as a placeholder for embedded IP addresses.\n"
- title: 9.1.  HIP and TCP Checksums
  contents:
  - "9.1.  HIP and TCP Checksums\n   There is no way for a host to know if any of\
    \ the IP addresses in an\n   IP header are the addresses used to calculate the\
    \ TCP checksum.  That\n   is, it is not feasible to calculate the TCP checksum\
    \ using the actual\n   IP addresses in the pseudo header; the addresses received\
    \ in the\n   incoming packet are not necessarily the same as they were on the\n\
    \   sending host.  Furthermore, it is not possible to recompute the\n   upper-layer\
    \ checksums in the NAT/NAT-PT system, since the traffic is\n   IPsec protected.\
    \  Consequently, the TCP and UDP checksums are\n   calculated using the HITs in\
    \ the place of the IP addresses in the\n   pseudo header.  Furthermore, only the\
    \ IPv6 pseudo header format is\n   used.  This provides for IPv4/IPv6 protocol\
    \ translation.\n"
- title: 10.  Multicast
  contents:
  - "10.  Multicast\n   Back in the Fall of 2003, there were little if any concrete\
    \ thoughts\n   about how HIP might affect IP-layer or application-layer multicast.\n"
- title: 11.  HIP Policies
  contents:
  - "11.  HIP Policies\n   There are a number of variables that will influence the\
    \ HIP exchanges\n   that each host must support.  All HIP implementations should\
    \ support\n   at least 2 HIs, one to publish in DNS and an unpublished one for\n\
    \   anonymous usage.  Although unpublished HIs will be rarely used as\n   responder\
    \ HIs, they are likely be common for initiators.  Support for\n   multiple HIs\
    \ is recommended.\n   Many initiators would want to use a different HI for different\n\
    \   responders.  The implementations should provide for a policy of\n   initiator\
    \ HIT to responder HIT.  This policy should also include\n   preferred transforms\
    \ and local lifetimes.\n   Responders would need a similar policy, describing\
    \ the hosts allowed\n   to participate in HIP exchanges, and the preferred transforms\
    \ and\n   local lifetimes.\n"
- title: 12.  Benefits of HIP
  contents:
  - "12.  Benefits of HIP\n   In the beginning, the network layer protocol (i.e.,\
    \ IP) had the\n   following four \"classic\" invariants:\n   o  Non-mutable: The\
    \ address sent is the address received.\n   o  Non-mobile: The address does not\
    \ change during the course of an\n      \"association\".\n   o  Reversible: A\
    \ return header can always be formed by reversing the\n      source and destination\
    \ addresses.\n   o  Omniscient: Each host knows what address a partner host can\
    \ use to\n      send packets to it.\n   Actually, the fourth can be inferred from\
    \ 1 and 3, but it is worth\n   mentioning for reasons that will be obvious soon\
    \ if not already.\n   In the current \"post-classic\" world, we are intentionally\
    \ trying to\n   get rid of the second invariant (both for mobility and for multi-\n\
    \   homing), and we have been forced to give up the first and the fourth.\n  \
    \ Realm Specific IP [5] is an attempt to reinstate the fourth invariant\n   without\
    \ the first invariant.  IPv6 is an attempt to reinstate the\n   first invariant.\n\
    \   Few systems on the Internet have DNS names that are meaningful.  That\n  \
    \ is, if they have a Fully Qualified Domain Name (FQDN), that name\n   typically\
    \ belongs to a NAT device or a dial-up server, and does not\n   really identify\
    \ the system itself but its current connectivity.\n   FQDNs (and their extensions\
    \ as email names) are application-layer\n   names, more frequently naming services\
    \ than a particular system.\n   This is why many systems on the Internet are not\
    \ registered in the\n   DNS; they do not have services of interest to other Internet\
    \ hosts.\n   DNS names are references to IP addresses.  This only demonstrates\
    \ the\n   interrelationship of the networking and application layers.  DNS, as\n\
    \   the Internet's only deployed, distributed database, is also the\n   repository\
    \ of other namespaces, due in part to DNSSEC-specific and\n   application-specific\
    \ key records.  Although each namespace can be\n   stretched (IP with v6, DNS\
    \ with KEY records), neither can adequately\n   provide for host authentication\
    \ or act as a separation between\n   internetworking and transport layers.\n \
    \  The Host Identity (HI) namespace fills an important gap between the\n   IP\
    \ and DNS namespaces.  An interesting thing about the HI is that it\n   actually\
    \ allows one to give up all but the 3rd network-layer\n   invariant.  That is\
    \ to say, as long as the source and destination\n   addresses in the network-layer\
    \ protocol are reversible, then things\n   work OK because HIP takes care of host\
    \ identification, and\n   reversibility allows one to get a packet back to one's\
    \ partner host.\n   You do not care if the network-layer address changes in transit\n\
    \   (mutable), and you do not care what network-layer address the partner\n  \
    \ is using (non-omniscient).\n"
- title: 12.1.  HIP's Answers to NSRG Questions
  contents:
  - "12.1.  HIP's Answers to NSRG Questions\n   The IRTF Name Space Research Group\
    \ has posed a number of evaluating\n   questions in its report [7].  In this section,\
    \ we provide answers to\n   these questions.\n   1.  How would a stack name improve\
    \ the overall functionality of the\n       Internet?\n          HIP decouples\
    \ the internetworking layer from the transport\n          layer, allowing each\
    \ to evolve separately.  The decoupling\n          makes end-host mobility and\
    \ multi-homing easier, also across\n          IPv4 and IPv6 networks.  HIs make\
    \ network renumbering easier,\n          and they also make process migration\
    \ and clustered servers\n          easier to implement.  Furthermore, being cryptographic\
    \ in\n          nature, they provide the basis for solving the security\n    \
    \      problems related to end-host mobility and multi-homing.\n   2.  What does\
    \ a stack name look like?\n          A HI is a cryptographic public key.  However,\
    \ instead of using\n          the keys directly, most protocols use a fixed-size\
    \ hash of the\n          public key.\n   3.  What is its lifetime?\n         \
    \ HIP provides both stable and temporary Host Identifiers.\n          Stable HIs\
    \ are typically long-lived, with a lifetime of years\n          or more.  The\
    \ lifetime of temporary HIs depends on how long\n          the upper-layer connections\
    \ and applications need them, and\n          can range from a few seconds to years.\n\
    \   4.  Where does it live in the stack?\n          The HIs live between the transport\
    \ and internetworking layers.\n   5.  How is it used on the end-points?\n    \
    \      The Host Identifiers may be used directly or indirectly (in\n         \
    \ the form of HITs or LSIs) by applications when they access\n          network\
    \ services.  In addition, the Host Identifiers, as\n          public keys, are\
    \ used in the built-in key agreement protocol,\n          called the HIP base\
    \ exchange, to authenticate the hosts to\n          each other.\n   6.  What administrative\
    \ infrastructure is needed to support it?\n          In some environments, it\
    \ is possible to use HIP\n          opportunistically, without any infrastructure.\
    \  However, to\n          gain full benefit from HIP, the HIs must be stored in\
    \ the DNS\n          or a PKI, and a new rendezvous mechanism is needed.  Such\
    \ a\n          new rendezvous mechanism may need new infrastructure to be\n  \
    \        deployed.\n   7.  If we add an additional layer, would it make the address\
    \ list in\n       Stream Control Transmission Protocol (SCTP) unnecessary?\n \
    \         Yes.\n   8.  What additional security benefits would a new naming scheme\n\
    \       offer?\n          HIP reduces dependency on IP addresses, making the so-called\n\
    \          address ownership [11] problems easier to solve.  In practice,\n  \
    \        HIP provides security for end-host mobility and multi-homing.\n     \
    \     Furthermore, since HIP Host Identifiers are public keys,\n          standard\
    \ public key certificate infrastructures can be applied\n          on the top\
    \ of HIP.\n   9.  What would the resolution mechanisms be, or what characteristics\n\
    \       of a resolution mechanisms would be required?\n          For most purposes,\
    \ an approach where DNS names are resolved\n          simultaneously to HIs and\
    \ IP addresses is sufficient.\n          However, if it becomes necessary to resolve\
    \ HIs into IP\n          addresses or back to DNS names, a flat resolution\n \
    \         infrastructure is needed.  Such an infrastructure could be\n       \
    \   based on the ideas of Distributed Hash Tables, but would\n          require\
    \ significant new development and deployment.\n"
- title: 13.  Security Considerations
  contents:
  - "13.  Security Considerations\n   HIP takes advantage of the new Host Identity\
    \ paradigm to provide\n   secure authentication of hosts and to provide a fast\
    \ key exchange for\n   IPsec.  HIP also attempts to limit the exposure of the\
    \ host to\n   various Denial-of-Service (DoS) and Man-in-the-Middle (MitM) attacks.\n\
    \   In so doing, HIP itself is subject to its own DoS and MitM attacks\n   that\
    \ potentially could be more damaging to a host's ability to\n   conduct business\
    \ as usual.\n   Resource-exhausting DoS attacks take advantage of the cost of\
    \ setting\n   up a state for a protocol on the responder compared to the\n   'cheapness'\
    \ on the initiator.  HIP allows a responder to increase the\n   cost of the start\
    \ of state on the initiator and makes an effort to\n   reduce the cost to the\
    \ responder.  This is done by having the\n   responder start the authenticated\
    \ Diffie-Hellman exchange instead of\n   the initiator, making the HIP base exchange\
    \ 4 packets long.  There\n   are more details on this process in the Host Identity\
    \ Protocol.\n   HIP optionally supports opportunistic negotiation.  That is, if\
    \ a\n   host receives a start of transport without a HIP negotiation, it can\n\
    \   attempt to force a HIP exchange before accepting the connection.\n   This\
    \ has the potential for DoS attacks against both hosts.  If the\n   method to\
    \ force the start of HIP is expensive on either host, the\n   attacker need only\
    \ spoof a TCP SYN.  This would put both systems into\n   the expensive operations.\
    \  HIP avoids this attack by having the\n   responder send a simple HIP packet\
    \ that it can pre-build.  Since this\n   packet is fixed and easily replayed,\
    \ the initiator reacts to it only\n   if it has just started a connection to the\
    \ responder.\n   MitM attacks are difficult to defend against, without third-party\n\
    \   authentication.  A skillful MitM could easily handle all parts of the\n  \
    \ HIP base exchange, but HIP indirectly provides the following\n   protection\
    \ from an MitM attack.  If the responder's HI is retrieved\n   from a signed DNS\
    \ zone or secured by some other means, the initiator\n   can use this to authenticate\
    \ the signed HIP packets.  Likewise, if\n   the initiator's HI is in a secure\
    \ DNS zone, the responder can\n   retrieve it and validate the signed HIP packets.\
    \  However, since an\n   initiator may choose to use an unpublished HI, it knowingly\
    \ risks an\n   MitM attack.  The responder may choose not to accept a HIP exchange\n\
    \   with an initiator using an unknown HI.\n   In HIP, the Security Association\
    \ for IPsec is indexed by the SPI; the\n   source address is always ignored, and\
    \ the destination address may be\n   ignored as well.  Therefore, HIP-enabled\
    \ IPsec Encapsulated Security\n   Payload (ESP) is IP address independent.  This\
    \ might seem to make it\n   easier for an attacker, but ESP with replay protection\
    \ is already as\n   well protected as possible, and the removal of the IP address\
    \ as a\n   check should not increase the exposure of IPsec ESP to DoS attacks.\n\
    \   Since not all hosts will ever support HIP, ICMPv4 'Destination\n   Unreachable,\
    \ Protocol Unreachable' and ICMPv6 'Parameter Problem,\n   Unrecognized Next Header'\
    \ messages are to be expected and present a\n   DoS attack.  Against an initiator,\
    \ the attack would look like the\n   responder does not support HIP, but shortly\
    \ after receiving the ICMP\n   message, the initiator would receive a valid HIP\
    \ packet.  Thus, to\n   protect against this attack, an initiator should not react\
    \ to an ICMP\n   message until a reasonable time has passed, allowing it to get\
    \ the\n   real responder's HIP packet.  A similar attack against the responder\n\
    \   is more involved.\n   Another MitM attack is simulating a responder's administrative\n\
    \   rejection of a HIP initiation.  This is a simple ICMP 'Destination\n   Unreachable,\
    \ Administratively Prohibited' message.  A HIP packet is\n   not used because\
    \ it would have to either have unique content, and\n   thus difficult to generate,\
    \ resulting in yet another DoS attack, or\n   be just as spoofable as the ICMP\
    \ message.  Like in the previous case,\n   the defense against this attack is\
    \ for the initiator to wait a\n   reasonable time period to get a valid HIP packet.\
    \  If one does not\n   come, then the initiator has to assume that the ICMP message\
    \ is\n   valid.  Since this is the only point in the HIP base exchange where\n\
    \   this ICMP message is appropriate, it can be ignored at any other\n   point\
    \ in the exchange.\n"
- title: 13.1.  HITs Used in ACLs
  contents:
  - "13.1.  HITs Used in ACLs\n   It is expected that HITs will be used in Access\
    \ Control Lists (ACLs).\n   Future firewalls can use HITs to control egress and\
    \ ingress to\n   networks, with an assurance level difficult to achieve today.\
    \  As\n   discussed above in Section 8, once a HIP session has been\n   established,\
    \ the SPI value in an IPsec packet may be used as an\n   index, indicating the\
    \ HITs.  In practice, firewalls can inspect HIP\n   packets to learn of the bindings\
    \ between HITs, SPI values, and IP\n   addresses.  They can even explicitly control\
    \ IPsec usage, dynamically\n   opening IPsec ESP only for specific SPI values\
    \ and IP addresses.  The\n   signatures in HIP packets allow a capable firewall\
    \ to ensure that the\n   HIP exchange is indeed happening between two known hosts.\
    \  This may\n   increase firewall security.\n   There has been considerable bad\
    \ experience with distributed ACLs that\n   contain public-key-related material,\
    \ for example, with Secure SHell\n   Protocol (SSH).  If the owner of a key needs\
    \ to revoke it for any\n   reason, the task of finding all locations where the\
    \ key is held in an\n   ACL may be impossible.  If the reason for the revocation\
    \ is due to\n   private key theft, this could be a serious issue.\n   A host can\
    \ keep track of all of its partners that might use its HIT\n   in an ACL by logging\
    \ all remote HITs.  It should only be necessary to\n   log responder hosts.  With\
    \ this information, the host can notify the\n   various hosts about the change\
    \ to the HIT.  There has been no attempt\n   to develop a secure method to issue\
    \ the HIT revocation notice.\n   HIP-aware NATs, however, are transparent to the\
    \ HIP-aware systems by\n   design.  Thus, the host may find it difficult to notify\
    \ any NAT that\n   is using a HIT in an ACL.  Since most systems will know of\
    \ the NATs\n   for their network, there should be a process by which they can\
    \ notify\n   these NATs of the change of the HIT.  This is mandatory for systems\n\
    \   that function as responders behind a NAT.  In a similar vein, if a\n   host\
    \ is notified of a change in a HIT of an initiator, it should\n   notify its NAT\
    \ of the change.  In this manner, NATs will get updated\n   with the HIT change.\n"
- title: 13.2.  Non-security considerations
  contents:
  - "13.2.  Non-security considerations\n   The definition of the Host Identifier\
    \ states that the HI need not be\n   a public key.  It implies that the HI could\
    \ be any value; for\n   example, an FQDN.  This document does not describe how\
    \ to support\n   such a non-cryptographic HI.  A non-cryptographic HI would still\n\
    \   offer the services of the HIT or LSI for NAT traversal.  It would be\n   possible\
    \ to carry HITs in HIP packets that had neither privacy nor\n   authentication.\
    \  Since such a mode would offer so little additional\n   functionality for so\
    \ much addition to the IP kernel, it has not been\n   defined.  Given how little\
    \ public key cryptography HIP requires, HIP\n   should only be implemented using\
    \ public key Host Identities.\n   If it is desirable to use HIP in a low-security\
    \ situation where\n   public key computations are considered expensive, HIP can\
    \ be used\n   with very short Diffie-Hellman and Host Identity keys.  Such use\n\
    \   makes the participating hosts vulnerable to MitM and connection\n   hijacking\
    \ attacks.  However, it does not cause flooding dangers,\n   since the address\
    \ check mechanism relies on the routing system and\n   not on cryptographic strength.\n"
- title: 14.  Acknowledgements
  contents:
  - "14.  Acknowledgements\n   For the people historically involved in the early stages\
    \ of HIP, see\n   the Acknowledgements section in the Host Identity Protocol\n\
    \   specification.\n   During the later stages of this document, when the editing\
    \ baton was\n   transfered to Pekka Nikander, the comments from the early\n  \
    \ implementors and others, including Jari Arkko, Tom Henderson, Petri\n   Jokela,\
    \ Miika Komu, Mika Kousa, Andrew McGregor, Jan Melen, Tim\n   Shepard, Jukka Ylitalo,\
    \ and Jorma Wall, were invaluable.  Finally,\n   Lars Eggert, Spencer Dawkins,\
    \ and Dave Crocker provided valuable\n   input during the final stages of publication,\
    \ most of which was\n   incorporated but some of which the authors decided to\
    \ ignore in order\n   to get this document published in the first place.\n"
- title: 15.  Informative References
  contents:
  - "15.  Informative References\n   [1]   Vixie, P., Thomson,  S., Rekhter, Y., and\
    \ J. Bound, \"Dynamic\n         Updates in the Domain Name System (DNS UPDATE)\"\
    , RFC 2136,\n         April 1997.\n   [2]   Arends, R., Austein, R., Larson, M.,\
    \ Massey, D., and S. Rose,\n         \"DNS Security Introduction and Requirements\"\
    , RFC 4033, March\n         2005.\n         Arends, R., Austein, R., Larson, M.,\
    \ Massey, D., and S. Rose,\n         \"Resource Records for the DNS Security Extensions\"\
    , RFC 4034,\n         March 2005.\n         Arends, R., Austein, R., Larson, M.,\
    \ Massey, D., and S. Rose,\n         \"Protocol Modifications for the DNS Security\
    \ Extensions\", RFC\n         4035, March 2005\n   [3]   Tsirtsis, G. and P. Srisuresh,\
    \ \"Network Address Translation -\n         Protocol Translation (NAT-PT)\", RFC\
    \ 2766, February 2000.\n   [4]   Srisuresh, P. and K. Egevang, \"Traditional IP\
    \ Network Address\n         Translator (Traditional NAT)\", RFC 3022, January\
    \ 2001.\n   [5]   Borella, M., Lo, J., Grabelsky, D., and G. Montenegro, \"Realm\n\
    \         Specific IP: Framework\", RFC 3102, October 2001.\n   [6]   Richardson,\
    \ M., \"A Method for Storing IPsec Keying Material in\n         DNS\", RFC 4025,\
    \ March 2005.\n   [7]   Lear, E. and R. Droms, \"What's In A Name: Thoughts from\
    \ the\n         NSRG\", Work in Progress, September 2003.\n   [8]   Nikander,\
    \ P., et al, \"Mobile IP Version 6 Route Optimization\n         Security Design\
    \ Background\", RFC 4225, December 2005.\n   [9]   Kaufman, C., \"Internet Key\
    \ Exchange (IKEv2) Protocol\", RFC\n         4306, December 2005.\n   [10]  Chiappa,\
    \ J., \"Endpoints and Endpoint Names: A Proposed\n         Enhancement to the\
    \ Internet Architecture\", URL\n         http://users.exis.net/~jnc/tech/endpoints.txt,\
    \ 1999.\n   [11]  Nikander, P., \"Denial-of-Service, Address Ownership, and Early\n\
    \         Authentication in the IPv6 World\", in Security Protocols, 9th\n   \
    \      International Workshop, Cambridge, UK, April 25-27 2001, LNCS\n       \
    \  2467, pp. 12-26, Springer, 2002.\n   [12]  Bellovin, S., \"EIDs, IPsec, and\
    \ HostNAT\", in Proceedings of the\n         41st IETF, Los Angeles, CA, March\
    \ 1998.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Robert Moskowitz\n   ICSAlabs, a Division of Cybertrust\
    \ Corporation\n   1000 Bent Creek Blvd, Suite 200\n   Mechanicsburg, PA\n   USA\n\
    \   EMail: rgm@icsalabs.com\n   Pekka Nikander\n   Ericsson Research Nomadic Lab\n\
    \   JORVAS  FIN-02420\n   FINLAND\n   Phone: +358 9 299 1\n   EMail: pekka.nikander@nomadiclab.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
