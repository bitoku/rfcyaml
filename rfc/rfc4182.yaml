- title: __initial_text__
  contents:
  - '        Removing a Restriction on the use of MPLS Explicit NULL

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   The label stack encoding for Multi-protocol Label Switching (MPLS)\n\
    \   defines a reserved label value known as \"IPv4 Explicit NULL\" and a\n   reserved\
    \ label value known as \"IPv6 Explicit NULL\".  Previously,\n   these labels were\
    \ only legal when they occurred at the bottom of the\n   MPLS label stack.  This\
    \ restriction is now removed, so that these\n   label values may legally occur\
    \ anywhere in the stack.\n   This document updates RFC 3032.\n"
- title: Table of Contents
  contents:
  - 'Table of Contents

    '
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   RFC 3032 defines a reserved label value known as \"IPv4\
    \ Explicit NULL\"\n   and a reserved label value known as \"IPv6 Explicit NULL\"\
    \ [RFC3032].\n   It states that these label values are only legal at the bottom\
    \ of the\n   MPLS label stack.  However, no reason is given for this restriction.\n\
    \   It has turned out that in practice there are some situations in which\n  \
    \ it is useful to send MPLS packets that have Explicit NULL occur\n   somewhere\
    \ other than at that bottom of the label stack.  While the\n   intended semantics\
    \ are obvious enough, the fact that such packets are\n   gratuitously declared\
    \ by RFC 3032 to be illegal has made it difficult\n   to handle these situations\
    \ in an interoperable manner.\n   This document updates RFC 3032 by removing the\
    \ unnecessary\n   restriction, so that the two aforementioned label values are\
    \ legal\n   anywhere in the label stack.\n"
- title: 2.  Detail of Change
  contents:
  - "2.  Detail of Change\n   RFC 3032 states on page 4:\n   There are several reserved\
    \ label values:\n       i. A value of 0 represents the \"IPv4 Explicit NULL Label\"\
    .  This\n          label value is only legal at the bottom of the label stack.\n\
    \          It indicates that the label stack must be popped, and the\n       \
    \   forwarding of the packet must then be based on the IPv4\n          header.\n\
    \     iii. A value of 2 represents the \"IPv6 Explicit NULL Label\".  This\n \
    \         label value is only legal at the bottom of the label stack.\n      \
    \    It indicates that the label stack must be popped, and the\n          forwarding\
    \ of the packet must then be based on the IPv6\n          header.\n   Paragraph\
    \ i is hereby changed to read:\n       i. A value of 0 represents the \"IPv4 Explicit\
    \ NULL Label\".\n          An IPv4 Explicit NULL at the top of the label stack\
    \ means that\n          the stack must be popped.\n          If the NULL was not\
    \ the only label on the stack, this will\n          cause the label beneath it\
    \ to rise to the top of the stack.\n          The disposition of the packet is\
    \ based on the label that has\n          now risen to the top.\n          If,\
    \ on the other hand, the NULL was the only label on the\n          stack, then\
    \ the stack is now empty.  The resulting packet is\n          treated as an IPv4\
    \ packet, and its disposition is based on the\n          IPv4 header.\n   Paragraph\
    \ iii is hereby changed to read:\n       iii. A value of 2 represents the \"IPv6\
    \ Explicit NULL Label\".\n          An IPv6 Explicit NULL at the top of the label\
    \ stack means that\n          the stack must be popped.\n          If the NULL\
    \ was not the only label on the stack, this will\n          cause the label beneath\
    \ it to rise to the top of the stack.\n          The disposition of the packet\
    \ is based on the label that has\n          now risen to the top.\n          If,\
    \ on the other hand, the NULL was the only label on the\n          stack, then\
    \ the stack is now empty.  The resulting packet is\n          treated as an IPv6\
    \ packet, and its disposition is based on the\n          IPv6 header.\n"
- title: 3.  Reasons for Change
  contents:
  - "3.  Reasons for Change\n   Restricting Explicit NULL to the bottom of the stack\
    \ has caused some\n   problems in practice.\n   With this restriction in place,\
    \ one should not distribute, to a\n   particular label distribution peer, a binding\
    \ of Explicit NULL to a\n   particular Forwarding Equivalence Class (FEC), unless\
    \ the following\n   condition (call it \"Condition L\") holds: all MPLS packets\
    \ received by\n   that peer with an incoming label corresponding to that FEC contain\n\
    \   only a single label stack entry.  If Explicit NULL is bound to the\n   FEC,\
    \ but Condition L doesn't hold, the peer is being requested to\n   create illegal\
    \ packets.  None of the MPLS specifications say what the\n   peer is actually\
    \ supposed to do in this case.  This situation is made\n   more troublesome by\
    \ the facts that, in practice, Condition L rarely\n   holds, and it is not possible,\
    \ in general, to determine whether it\n   holds or not.\n   Further, if one is\
    \ supporting the Pipe Model of RFC 3270 [RFC3270],\n   there are good reasons\
    \ to create label stacks in which Explicit NULL\n   is at the top of the label\
    \ stack, but a non-null label is at the\n   bottom.\n   RFC 3270 specifies the\
    \ procedures for MPLS support of Differentiated\n   Services.  In particular,\
    \ it defines a \"Pipe Model\" in which (quoting\n   from RFC 3270, Section 2.6.2):\n\
    \    \"tunneled packets must convey two meaningful pieces of Diff-Serv\n    information:\n\
    \     - the Diff-Serv information which is meaningful to intermediate\n      \
    \ nodes along the LSP span including the LSP Egress (which we refer\n       to\
    \ as the 'LSP Diff-Serv Information').  This LSP Diff-Serv\n       Information\
    \ is not meaningful beyond the LSP Egress:  Whether\n       Traffic Conditioning\
    \ at intermediate nodes on the LSP span\n       affects the LSP Diff-Serv information\
    \ or not, this updated Diff-\n       Serv information is not considered meaningful\
    \ beyond the LSP\n       Egress and is ignored.\n     - the Diff-Serv information\
    \ which is meaningful beyond the LSP\n       Egress (which we refer to as the\
    \ 'Tunneled Diff-Serv\n       Information').  This information is to be conveyed\
    \ by the LSP\n       Ingress to the LSP Egress.  This Diff-Serv information is\
    \ not\n       meaningful to the intermediate nodes on the LSP span.\"\n   When\
    \ the Pipe Model is in use, it is common practice for the LSP\n   Egress to bind\
    \ Explicit Null to the tunnel's FEC.  The intention is\n   that the LSP Diff-Serv\
    \ information will be carried in the EXP bits of\n   the Explicit Null label stack\
    \ entry, and the tunneled Diff-Serv\n   information will be carried in whatever\
    \ is \"below\" the Explicit Null\n   label stack entry, i.e., in the IP header\
    \ DS bits or in the EXP bits\n   of the next entry on the MPLS label stack.\n\
    \   Naturally, this practice causes a problem if the Pipe Model LSP is\n   being\
    \ used to tunnel MPLS packets (i.e., if Condition L does not\n   hold).  With\
    \ strict adherence to RFCs 3031 and 3036, this practice\n   results in an MPLS\
    \ packet where Explicit NULL is at the top of the\n   label stack, even though\
    \ it is not the only entry in the label stack.\n   However, RFC 3032 makes this\
    \ packet illegal.\n   Some implementations simply transmit the illegal packet.\
    \  Others try\n   to convert it to a legal packet by stripping off the Explicit\
    \ NULL\n   before transmitting it.  However, that breaks the Pipe Model by\n \
    \  discarding the LSP Diff-Serv information.  It is conceivable that\n   there\
    \ may be an implementation that drops the illegal packet\n   entirely; this would\
    \ also break the Pipe Model, as it would lose not\n   only the LSP Diff-Serv information,\
    \ but the entire packet.\n   Of course the LSP egress is not compelled to bind\
    \ Explicit NULL to\n   the tunnel's FEC; an ordinary label could be used instead.\
    \  However,\n   using Explicit NULL enables the egress to determine immediately\n\
    \   (i.e., without need for lookup in the Label Information Base) that\n   the\
    \ further forwarding of the packet is to be determined by whatever\n   is below\
    \ the label.  Avoiding this lookup can have favorable\n   implications on forwarding\
    \ performance.\n   Removing the restriction that Explicit Null only occur at the\
    \ bottom\n   of the stack is the simplest way to facilitate the proper operation\n\
    \   of the Pipe Model.\n"
- title: 4.  Deployment Considerations
  contents:
  - "4.  Deployment Considerations\n   Implementations that adhere to this specification\
    \ will interoperate\n   correctly, and will correctly support the Pipe Model.\n\
    \   Implementations that do not adhere to this specification may not\n   interoperate.\
    \  In particular, if a router advertises a binding of\n   Explicit NULL, and if\
    \ that router has an upstream LDP peer that will\n   not transmit a packet that\
    \ has multiple label stack entries with\n   Explicit Null at top of the stack,\
    \ then it will not be possible to\n   use Explicit NULL to support the Pipe Model\
    \ until the upstream LDP\n   peer is brought into compliance with this specification.\n\
    \   It is possible that there may be a router implementation, preceding\n   this\
    \ specification, which will discard any received packet with\n   multiple label\
    \ stack entries and a top label value of Explicit Null.\n   It is advisable to\
    \ configure any such routers so that they do not\n   advertise any bindings to\
    \ Explicit Null.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This document updates RFC 3032 by allowing Explicit\
    \ NULL to occur at\n   any position in the label stack.  This modification does\
    \ not impose\n   any new security considerations beyond those discussed in RFC\
    \ 3032.\n"
- title: 6.  Acknowledgments
  contents:
  - "6.  Acknowledgments\n   Thanks to Rahul Aggarwal, Francois LeFaucheur, Yakov\
    \ Rekhter, and Dan\n   Tappan for their helpful comments.\n"
- title: 7.  Normative References
  contents:
  - "7.  Normative References\n   [RFC3032]  Rosen, E., Tappan, D., Fedorkow, G.,\
    \ Rekhter, Y.,\n              Farinacci, D., Li, T., and A. Conta, \"MPLS Label\
    \ Stack\n              Encoding\", RFC 3032, January 2001.\n"
- title: 8.  Informative References
  contents:
  - "8.  Informative References\n   [RFC3270]  Le Faucheur, F., Wu, L., Davie, B.,\
    \ Davari, S., Vaananen,\n              P., Krishnan, R., Cheval, P., and J. Heinanen,\
    \ \"Multi-\n              Protocol Label Switching (MPLS) Support of Differentiated\n\
    \              Services\", RFC 3270, May 2002.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Eric C. Rosen\n   Cisco Systems, Inc.\n   1414 Massachusetts\
    \ Avenue\n   Boxborough, MA 01719\n   EMail: erosen@cisco.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
