- contents:
  - '    Expressing SNMP SMI Datatypes in XML Schema Definition Language

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This memo defines the IETF standard expression of Structure of\n
    \  Management Information (SMI) base datatypes in XML Schema Definition\n   (XSD)
    language.  The primary objective of this memo is to enable the\n   production
    of XML documents that are as faithful to the SMI as\n   possible, using XSD as
    the validation mechanism.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5935.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n
    \  2. Conventions .....................................................4\n   3.
    Requirements ....................................................4\n   4. XSD
    for SMI Base Datatypes ......................................5\n   5. Rationale
    .......................................................8\n      5.1. Numeric Datatypes
    ..........................................8\n      5.2. OctetString ................................................9\n
    \     5.3. Opaque ....................................................10\n      5.4.
    IpAddress .................................................10\n      5.5. ObjectIdentifier
    ..........................................10\n   6. Security Considerations ........................................11\n
    \  7. IANA Considerations ............................................11\n      7.1.
    SMI Base Datatypes Namespace Registration .................12\n      7.2. SMI
    Base Datatypes Schema Registration ....................12\n   8. Acknowledgements
    ...............................................12\n   9. References .....................................................13\n
    \     9.1. Normative References ......................................13\n      9.2.
    Informative References ....................................13\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Numerous use cases exist for expressing the management information\n
    \  described by SMI Management Information Base (MIB) modules in XML\n   [XML].
    \ Potential use cases reside both outside and within the\n   traditional IETF
    network management community.  For example,\n   developers of some XML-based management
    applications may want to\n   incorporate the rich set of data models provided
    by MIB modules.\n   Developers of other XML-based management applications may
    want to\n   access MIB module instrumentation via gateways to SNMP agents.  Such\n
    \  applications benefit from the IETF standard mapping of SMI datatypes\n   to
    XML datatypes via XSD [XMLSchema], [XSDDatatypes].\n   MIB modules use SMIv2 [RFC2578]
    to describe data models.  For legacy\n   MIB modules, SMIv1 [RFC1155] was used.
    \ MIB data conveyed in variable\n   bindings (\"varbinds\") within protocol data
    units (PDUs) of SNMP\n   messages use the primitive, base datatypes defined by
    the SMI.\n   The SMI allows for the creation of derivative datatypes, \"textual\n
    \  conventions\" (\"TCs\") [RFC2579].  A TC has a unique name, has a syntax\n
    \  that either refines or is a base SMI datatype, and has relatively\n   precise
    application-level semantics.  TCs facilitate correct\n   application-level handling
    of MIB data, improve readability of MIB\n   modules by humans, and support appropriate
    renderings of MIB data.\n   Values in varbinds corresponding to MIB objects defined
    with TC\n   syntax are always encoded as the base SMI datatype underlying the
    TC\n   syntax.  Thus, the XSD mappings defined in this memo provide support\n
    \  for values of MIB objects defined with TC syntax as well as for\n   values
    of MIB objects defined with base SMI syntax.  Using the\n   translation of TC
    into base SMI datatypes any MIB module that uses\n   TCs can be mapped into XSD
    using the mappings defined in this memo.\n   For example, for IP addresses (both
    IPv4 and IPv6), MIB objects\n   defined using the InetAddress TC (as per [RFC4001])
    are encoded using\n   the base SMI datatype underlying the InetAddress TC syntax
    rather\n   than the IpAddress base datatype.\n   Various independent schemes have
    been devised for expressing SMI\n   datatypes in XSD.  These schemes exhibit a
    degree of commonality,\n   especially concerning numeric SMI datatypes, but these
    schemes also\n   exhibit sufficient differences, especially concerning the non-numeric\n
    \  SMI datatypes, precluding uniformity of expression and general\n   interoperability.\n
    \  Throughout this memo, the term \"fidelity\" refers to the quality of an\n   accurate,
    consistent representation of SMI data values and the term\n   \"faithful\" refers
    to the quality of reliably reflecting the semantics\n   of SMI data values.  Thus
    defined, the characteristics of fidelity\n   and being faithful are essential
    to uniformity of expression and\n   general interoperability in the XML representation
    of SMI data\n   values.\n   The primary purpose of this memo is to define the
    standard expression\n   of SMI base datatypes in XML documents that is both uniform
    and\n   interoperable.  This standard expression enables Internet operators,\n
    \  management application developers, and users to benefit from a wider\n   range
    of management tools and to benefit from a greater degree of\n   unified management.
    \ Thus, standard expression enables and\n   facilitates improvements to the timeliness,
    accuracy, and utility of\n   management information.\n   The overall objective
    of this memo, and of any related future memos\n   as may be published, is to define
    the XSD equivalent [XSDDatatypes]\n   of SMIv2 (STD 58) and to encourage XML-based
    protocols to carry, and\n   XML-based applications to use, the management information
    defined in\n   SMIv2-compliant MIB modules.  The use of a standard mapping from\n
    \  SMIv2 to XML via XSD validation enables and promotes the efficient\n   reuse
    of existing and future MIB modules and instrumentation by XML-\n   based protocols
    and management applications.\n   Developers of certain XML-based management applications
    will find\n   this specification sufficient for their purposes.  Developers of\n
    \  other XML-based management applications may need to make more\n   complete
    reuse of existing MIB modules, requiring standard XSD\n   documents for TCs [RFC2579]
    and MIB structure [RFC2578].  Memos\n   supporting such requirements are planned,
    but have not been produced\n   at the time of this writing.\n   Finally, it is
    worthwhile to note that the goal of fidelity to the\n   SMIv2 standard (STD 58),
    as specified in the \"Requirements\" section\n   below, is crucial to this effort.
    \ Fidelity leverages the established\n   \"rough consensus\" of the precise SMIv2
    data models contained in MIB\n   modules, and leverages existing instrumentation,
    the \"running code\"\n   implementing SMIv2 data models.  This effort does not
    include any\n   redesign of SMIv2 datatypes, data structures or textual conventions\n
    \  in order to overcome known limitations.  Such work can be pursued by\n   other
    efforts.\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in RFC 2119 [RFC2119].\n"
  title: 2.  Conventions
- contents:
  - "3.  Requirements\n   The following set of requirements is intended to produce
    XML\n   documents that can be validated via the XSD defined in this\n   specification
    to faithfully represent values carried \"on-the-wire\" in\n   SNMP PDUs as defined
    by the SMI:\n   R1.  All SMI base datatypes MUST have a corresponding XSD datatype.\n
    \  R2.  SMIv2 is the normative SMI for this document.  Prior to mapping\n        datatypes
    into XSD, legacy SMIv1 modules MUST be converted (at\n        least logically)
    in accordance with Section 2.1, inclusive, of\n        the \"Coexistence\" RFC
    [RFC3584].\n   R3.  The XSD datatype specified for a given SMI datatype MUST be
    able\n        to represent all valid values for that SMI datatype.\n   R4.  The
    XSD datatype specified for a given SMI datatype MUST\n        represent any special
    encoding rules associated with that SMI\n        datatype.\n   R5.  The XSD datatype
    specified for a given SMI datatype MUST include\n        any restrictions on values
    associated with the SMI datatype.\n   R6.  The XSD datatype specified for a given
    SMI datatype MUST be the\n        most logical XSD datatype, with the fewest necessary\n
    \       restrictions on its set of values, consistent with the foregoing\n        requirements.\n
    \  R7.  The XML output produced as a result of meeting the foregoing\n        requirements
    SHOULD be the most coherent and succinct\n        representation (i.e., avoiding
    superfluous \"decoration\") from\n        the perspective of readability by humans.\n"
  title: 3.  Requirements
- contents:
  - "4.  XSD for SMI Base Datatypes\n   This document provides XSD datatype mappings
    for the SMIv2 base\n   datatypes only -- i.e., the eleven \"ObjectSyntax\" datatypes
    defined\n   in RFC 2578.  These datatypes -- via tag values defined in the SMIv2\n
    \  to identify them in varbinds -- constrain values carried \"on-the-\n   wire\"
    in SNMP PDUs between SNMP management applications and SNMP\n   agents:\n   o  INTEGER,
    Integer32\n   o  Unsigned32, Gauge32\n   o  Counter32\n   o  TimeTicks\n   o  Counter64\n
    \  o  OCTET STRING\n   o  Opaque\n   o  IpAddress\n   o  OBJECT IDENTIFIER\n   The
    \"BITS\" pseudo-type (also referred to as a \"construct\" in RFC\n   2578) is
    treated as a Textual Convention, not a base datatype, for\n   the purpose of this
    document.\n   BEGIN\n   <?xml version=\"1.0\" encoding=\"utf-8\"?>\n   <xs:schema
    xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n   xmlns=\"urn:ietf:params:xml:ns:smi:base:1.0\"\n
    \  targetNamespace=\"urn:ietf:params:xml:ns:smi:base:1.0\"\n   elementFormDefault=\"qualified\"\n
    \  attributeFormDefault=\"unqualified\"\n   xml:lang=\"en\">\n     <xs:annotation>\n
    \      <xs:documentation>\n           Mapping of SMIv2 base datatypes from RFC
    2578\n           Contact:      Mark Ellison\n           Organization: Ellison
    Software Consulting\n           Address:      38 Salem Road\n                         Atkinson,
    NH 03811\n                         USA\n           Telephone:    +1 603-362-9270\n
    \          E-Mail:       ietf@EllisonSoftware.com\n           Contact:      Bob
    Natale\n           Organization: MITRE\n           Address:      300 Sentinel
    Drive\n                         6th Floor\n                         Annapolis
    Junction, MD 20701\n                         USA\n           Telephone:    +1
    301-617-3008\n           E-Mail:       rnatale@mitre.org\n           Last Updated:
    201002260000Z\n           Copyright (c) 2010 IETF Trust and the persons identified
    as\n           authors of the code.  All rights reserved.\n           Redistribution
    and use in source and binary forms, with or\n           without modification,
    is permitted pursuant to, and subject\n           to the license terms contained
    in, the Simplified BSD License\n           set forth in Section 4.c of the IETF
    Trust's Legal Provisions\n           Relating to IETF Documents\n           (http://trustee.ietf.org/license-info).\n
    \          This version of this XML Schema Definition (XSD)\n           document
    is part of RFC 5935; see the RFC itself for\n           full legal notices.\n
    \      </xs:documentation>\n     </xs:annotation>\n     <xs:simpleType name=\"INTEGER\">\n
    \      <xs:restriction base=\"xs:int\"/>\n     </xs:simpleType>\n     <xs:simpleType
    name=\"Integer32\">\n       <xs:restriction base=\"xs:int\"/>\n     </xs:simpleType>\n
    \    <xs:simpleType name=\"Unsigned32\">\n       <xs:restriction base=\"xs:unsignedInt\"/>\n
    \    </xs:simpleType>\n     <xs:simpleType name=\"Gauge32\">\n       <xs:restriction
    base=\"xs:unsignedInt\"/>\n     </xs:simpleType>\n     <xs:simpleType name=\"Counter32\">\n
    \      <xs:restriction base=\"xs:unsignedInt\"/>\n     </xs:simpleType>\n     <xs:simpleType
    name=\"TimeTicks\">\n       <xs:restriction base=\"xs:unsignedInt\"/>\n     </xs:simpleType>\n
    \    <xs:simpleType name=\"Counter64\">\n       <xs:restriction base=\"xs:unsignedLong\"/>\n
    \    </xs:simpleType>\n     <xs:simpleType name=\"OctetString\">\n       <xs:restriction
    base=\"xs:hexBinary\">\n         <xs:maxLength value=\"65535\"/>\n       </xs:restriction>\n
    \    </xs:simpleType>\n     <xs:simpleType name=\"Opaque\">\n       <xs:restriction
    base=\"xs:hexBinary\"/>\n     </xs:simpleType>\n     <xs:simpleType name=\"IpAddress\">\n
    \        <xs:restriction base=\"xs:string\">\n             <xs:pattern value=\n
    \            \"(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}\n                ([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\"/>\n
    \        </xs:restriction>\n     </xs:simpleType>\n     <xs:simpleType name=\"ObjectIdentifier\">\n
    \      <xs:restriction base=\"xs:string\">\n         <xs:pattern value=\n         \"(([0-1](\\.[1-3]?[0-9]))|\n
    \          (2\\.(0|([1-9]\\d*))))\n           (\\.(0|([1-9]\\d*))){0,126}\"/>\n
    \      </xs:restriction>\n     </xs:simpleType>\n   </xs:schema>\n   END\n"
  title: 4.  XSD for SMI Base Datatypes
- contents:
  - "5.  Rationale\n   The XSD datatypes, including any specified restrictions, were
    chosen\n   based on fit with the requirements specified earlier in this\n   document,
    and with attention to simplicity while maintaining fidelity\n   to the SMI.  Also,
    the \"canonical representations\" (i.e., refinements\n   of the \"lexical representations\")
    documented in the W3C XSD\n   specification [XMLSchema], [XSDDatatypes] are assumed.\n"
  - contents:
    - "5.1.  Numeric Datatypes\n   All of the numeric XSD datatypes specified in the
      previous section --\n   INTEGER, Integer32, Unsigned32, Gauge32, Counter32,
      TimeTicks, and\n   Counter64 -- comply with the relevant requirements\n   o
      \ They cover all valid values for the corresponding SMI datatypes.\n   o  They
      comply with the standard encoding rules associated with the\n      corresponding
      SMI datatypes.\n   o  They inherently match the range restrictions associated
      with the\n      corresponding SMI datatypes.\n   o  They are the most direct
      XSD datatypes that exhibit the foregoing\n      characteristics relative to
      the corresponding SMI datatypes (which\n      is why no \"restriction\" statements
      -- other than the \"base\" XSD\n      type -- are required in the XSD).\n   o
      \ The XML output produced from the canonical representation of these\n      XSD
      datatypes is also the most direct from the perspective of\n      readability
      by humans (i.e., no leading \"+\" sign and no leading\n      zeros).\n   Special
      note to application developers: compliance with this schema\n   in an otherwise
      correct translation from raw (\"on-the-wire\"\n   representation) SNMP MIB data
      produces values that are faithful to\n   the original.  However, the Gauge32,
      Counter32, Counter64, and\n   TimeTicks datatypes have special application semantics
      that must be\n   considered when using their raw values for anything other than\n
      \  display, printing, storage, or transmission of the literal value.\n   RFC
      2578 provides the necessary details.\n"
    title: 5.1.  Numeric Datatypes
  - contents:
    - "5.2.  OctetString\n   This XSD datatype corresponds to the SMI \"OCTET STRING\"
      datatype.\n   Several independent schemes for mapping SMI datatypes to XSD have\n
      \  used the XSD \"string\" type to represent \"OCTET STRING\", but this\n   mapping
      does not conform to the requirements specified in this\n   document.  Most notably,
      \"string\" cannot faithfully represent all\n   valid values (0 thru 255) that
      each octet in an \"OCTET STRING\" can\n   have -- or at least cannot do so in
      a way that provides for easy\n   human readability of the resulting XML output.\n
      \  Consequently, the XSD datatype \"hexBinary\" is specified as the\n   standard
      mapping of the SMI \"OCTET STRING\" datatype.  In hexBinary,\n   each octet
      is encoded as two hexadecimal digits; the canonical\n   representation limits
      the set of allowed hexadecimal digits to 0-9\n   and uppercase A-F.\n   The
      hexBinary representation of \"OCTET STRING\" complies with the\n   relevant
      requirements:\n   o  It covers all valid values for the corresponding SMI datatype.\n
      \  o  It complies with the standard encoding rules associated with the\n      corresponding
      SMI datatype.\n   o  With the \"maxLength\" restriction to 65535 octets, the
      XSD datatype\n      specification matches the restrictions associated with the\n
      \     corresponding SMI datatype.\n   o  It is the most direct XSD datatype
      that exhibits the foregoing\n      characteristics relative to the corresponding
      SMI datatype (which\n      must allow for any valid binary octet value).\n   o
      \ The XML output produced from the canonical representation of this\n      XSD
      datatype is not optimal with respect to readability by humans;\n      however,
      that is a consequence of the SMI datatype itself.  Where\n      human readability
      is more of a concern, it is likely that the\n      actual MIB objects in question
      will be represented by textual\n      conventions that limit the set of values
      that will be included in\n      the OctetStrings and will, thus, bypass the
      hexBinary typing.\n"
    title: 5.2.  OctetString
  - contents:
    - "5.3.  Opaque\n   The \"hexBinary\" XSD datatype is specified as the representation
      of\n   the SMI \"Opaque\" datatype generally for the same reasons as\n   \"hexBinary\"
      is specified for the \"OctetString\" datatype:\n   o  It covers all valid values
      for the corresponding SMI datatype.\n   o  It complies with the standard encoding
      rules associated with the\n      corresponding SMI datatype.\n   o  There are
      no restriction issues associated with using \"hexBinary\"\n      for \"Opaque\".\n
      \  o  It is the most direct XSD datatype that exhibits the foregoing\n      characteristics
      relative to the corresponding SMI datatype (which\n      must allow for any
      valid binary octet value).\n   o  The XML output produced from the canonical
      representation of this\n      XSD datatype is not optimal with respect to readability
      by humans;\n      however, that is a consequence of the SMI datatype itself.\n
      \     Unmediated \"Opaque\" data is intended for consumption by\n      applications,
      not humans.\n"
    title: 5.3.  Opaque
  - contents:
    - "5.4.  IpAddress\n   The XSD \"string\" datatype is the natural choice to represent
      an\n   IpAddress as XML output.  The \"pattern\" restriction applied in this\n
      \  case results in a dotted-decimal string of four values between \"0\"\n   and
      \"255\" separated by a period (\".\") character.  This pattern also\n   precludes
      leading zeros.\n   Note that the SMI relies upon Textual Conventions (TCs) to
      specify an\n   IPv6 address.  As such, the representation of an IPv6 address
      as an\n   XSD datatype is beyond the scope of this document.\n"
    title: 5.4.  IpAddress
  - contents:
    - "5.5.  ObjectIdentifier\n   This XSD datatype corresponds to the SMI \"OBJECT
      IDENTIFIER\"\n   datatype.\n   The XSD \"string\" datatype is also the natural
      choice to represent an\n   ObjectIdentifier as XML output, for the same reasons
      as for the\n   IpAddress choice.  The \"pattern\" restriction applied in this
      case\n   results in a dotted-decimal string of up to 128 elements (referred
      to\n   as \"sub-ids\"), each holding an \"Unsigned32\" integer value.\n   Note
      that the first two components of an \"OBJECT IDENTIFIER\" each\n   have a limited
      range of values as indicated in the XSD pattern\n   restriction and as described
      in the ASN1.1/BER standard [ASN.1].\n   There are three values allocated for
      the root node, and at most 39\n   values for nodes subordinate to a root node
      value of 0 or 1.\n   The minimum length of an \"OBJECT IDENTIFIER\" is two sub-ids
      and the\n   representation of a zero-valued \"OBJECT IDENTIFIER\" is \"0.0\".\n
      \  Note that no explicit \"minLength\" restriction, which would be \"3\" to\n
      \  allow for the minimum of two sub-ids and a single separating dot, is\n   required
      since the pattern itself enforces this restriction.\n"
    title: 5.5.  ObjectIdentifier
  title: 5.  Rationale
- contents:
  - "6.  Security Considerations\n   Security considerations for any given SMI MIB
    module will be relevant\n   to any XSD/XML mapping of that MIB module; however,
    the mapping\n   defined in this document does not itself introduce any new security\n
    \  considerations.\n   If and when proxies or gateways are developed to convey
    SNMP\n   management information from SNMP agents to XML-based management\n   applications
    via XSD/XML mapping of MIB modules based on this\n   specification and its planned
    siblings, special care will need to be\n   taken to ensure that all applicable
    SNMP security mechanisms are\n   supported in an appropriate manner yet to be
    determined.\n"
  title: 6.  Security Considerations
- contents:
  - "7.  IANA Considerations\n   In accordance with RFC 3688 [RFC3688], the IANA XML
    registry has been\n   updated with the following namespace and schema registrations\n
    \  associated with this document:\n   o  urn:ietf:params:xml:ns:smi:base:1.0\n
    \  o  urn:ietf:params:xml:schema:base:1.0\n"
  - contents:
    - "7.1.  SMI Base Datatypes Namespace Registration\n   This document registers
      a URI for the SMI Base Datatypes XML\n   namespace in the IETF XML registry.
      \ Following the format in RFC\n   3688, IANA has made the following registration:\n
      \  URI: urn:ietf:params:xml:ns:smi:base:1.0\n   Registration Contact: The IESG.\n
      \  XML: N/A, the requested URI is an XML namespace.\n"
    title: 7.1.  SMI Base Datatypes Namespace Registration
  - contents:
    - "7.2.  SMI Base Datatypes Schema Registration\n   This document registers a
      URI for the SMI Base Datatypes XML schema\n   in the IETF XML registry.  Following
      the format in RFC 3688, IANA has\n   made the following registration:\n   URI:
      urn:ietf:params:xml:schema:smi:base:1.0\n   Registration Contact: The IESG.\n
      \  XML: Section 4 of this document.\n"
    title: 7.2.  SMI Base Datatypes Schema Registration
  title: 7.  IANA Considerations
- contents:
  - "8.  Acknowledgements\n   Dave Harrington provided strategic and technical leadership
    to the\n   team that developed this particular specification.  Yan Li did much\n
    \  of the research into existing approaches that was used as a baseline\n   for
    the recommendations in this particular specification.\n   This document owes much
    to \"Datatypes for Netconf Data Models\"\n   [NETCONF-DATATYPES] and to many other
    sources (including libsmi and\n   group discussions on the NETCONF mailing lists)
    developed by those\n   who have researched and published candidate mappings of
    SMI datatypes\n   to XSD.\n   Individuals who participated in various discussions
    of this topic at\n   IETF meetings and on IETF mailing lists include: Ray Atarashi,\n
    \  Yoshifumi Atarashi, Andy Bierman, Sharon Chisholm, Avri Doria, Rob\n   Ennes,
    Mehmet Ersue, David Harrington, Alfred Hines, Eliot Lear,\n   Chris Lonvick, Faye
    Ly, Randy Presuhn, Juergen Schoenwaelder, Andrea\n   Westerinen, and Bert Wijnen.\n"
  title: 8.  Acknowledgements
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [RFC1155]  Rose, M. and K. McCloghrie, \"Structure
      and identification\n              of management information for TCP/IP-based
      internets\",\n              STD 16, RFC 1155, May 1990.\n   [RFC2119]  Bradner,
      S., \"Key words for use in RFCs to Indicate\n              Requirement Levels\",
      BCP 14, RFC 2119, March 1997.\n   [RFC2578]  McCloghrie, K., Ed., Perkins, D.,
      Ed., and J.\n              Schoenwaelder, Ed., \"Structure of Management Information\n
      \             Version 2 (SMIv2)\", STD 58, RFC 2578, April 1999.\n   [RFC3584]
      \ Frye, R., Levi, D., Routhier, S., and B. Wijnen,\n              \"Coexistence
      between Version 1, Version 2, and Version 3\n              of the Internet-standard
      Network Management Framework\",\n              BCP 74, RFC 3584, August 2003.\n
      \  [XML]      World Wide Web Consortium, \"Extensible Markup Language\n              (XML)
      1.0\", W3C XML, February 1998,\n              <http://www.w3.org/TR/1998/REC-xml-19980210>.\n
      \  [XMLSchema]\n              World Wide Web Consortium, \"XML Schema Part 1:
      Structures\n              Second Edition\", W3C XML Schema, October 2004,\n
      \             <http://www.w3.org/TR/xmlschema-1/>.\n   [XSDDatatypes]\n              World
      Wide Web Consortium, \"XML Schema Part 2: Datatypes\n              Second Edition\",
      W3C XML Schema, October 2004,\n              <http://www.w3.org/TR/xmlschema-2/>.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [ASN.1]    International Organization for
      Standardization,\n              \"Information processing systems - Open Systems\n
      \             Interconnection - Specification of Basic Encoding Rules\n              for
      Abstract Syntax Notation One (ASN.1)\", International\n              Standard
      8825, December 1987.\n   [NETCONF-DATATYPES]\n              Romascanu, D., \"Datatypes
      for Netconf Data Models\", Work\n              in Progress, May 2007.\n   [RFC2579]
      \ McCloghrie, K., Perkins, D., and J. Schoenwaelder,\n              \"Textual
      Conventions for SMIv2\", STD 58, RFC 2579,\n              April 1999.\n   [RFC3688]
      \ Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688,\n              January
      2004.\n   [RFC4001]  Daniele, M., Haberman, B., Routhier, S., and J.\n              Schoenwaelder,
      \"Textual Conventions for Internet Network\n              Addresses\", RFC 4001,
      February 2005.\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - "Authors' Addresses\n   Mark Ellison\n   Ellison Software Consulting\n   38 Salem
    Road\n   Atkinson, NH  03811\n   USA\n   Phone: +1 603-362-9270\n   EMail: ietf@ellisonsoftware.com\n
    \  Bob Natale\n   MITRE\n   300 Sentinel Drive\n   6th Floor\n   Annapolis Junction,
    MD  20701\n   USA\n   Phone: +1 301-617-3008\n   EMail: rnatale@mitre.org\n"
  title: Authors' Addresses
