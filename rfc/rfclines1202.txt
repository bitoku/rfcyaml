The OSI Directory [1] provides a powerful infrastructure for the retrieval of information objects.
This infrastructure can be used to support, e.g., white pages applications, application entity lookup, and so on.
The Directory service is provided to applications through the Directory Access Protocol (DAP), which binds a Directory User Agent (DUA) to a Directory System Agent (DSA).
The DAP is an OSI application layer protocol which uses the rich OSI upper layer infrastructure.
Unfortunately, the coding investment to implement the DAP is significant.
As such, it is difficult to host applications using the Directory on smaller workstations and personal computers.
This memo details a local mechanism which has been successfully used to separate the functionality of the DAP from the complexity of implementing the DAP.
That is, a split DUA model is used: the DAP is implemented on an entity (the "Directory Assistant"), which resides on a capable workstation or mainframe and exports a simpler interface, the "Directory Assistance" (DA) protocol, to other end  systems where the user interface resides, termed the DA client.
Since this mechanism provides assistance to applications wishing to access the Directory, it is termed the "Directory Assistance" (DA) service:
Aside This memo documents an already existing protocol, which was originally used to provide a split DUA model within the same host.
In the absence of detailed historical and implementational understanding, some of the mechanisms described may not appear intuitive.
The DA service operates using two TCP connections: a control connection, and a data connection.
The control connection defines the lifetime of an instance of the DA service; throughout this lifetime, several data connections may be established.
However, at any given instant, between zero and one data connections will be in progress.
The DA service is provided by the "Directory Assistant", which consists of two entities: a DA server, which manages the control connection; and, a DAP listener, which responds to commands on the data connection.
The DA server oversees the behavior of the DAP  listener.
Control Connection Data sent over the control connection consists of a series of transactions.
NVT ASCII is used to express these transactions.
Each transaction consists of the client sending a directive a line of text terminated by CR LF; the DA server returns a response a line of text terminated by CR LF.
All responses from a DA server start with either " OK" or " ERR" depending on whether the transaction was successful.
Initialization A DA server listens on TCP port 411 for incoming connections.
Upon establishing a control connection, the DA server returns a response indicating whether the service has been started.
If successful, the response contains an IP address and a TCP port, expressed in NVT  ASCII, and separated by one or more instances of the space character.
This information corresponds to the TCP endpoint that the DAP  listener will use for the data connection.
Note that the DA server and DAP listener need not reside at the same IP address.
In the future, DA servers may employ a internal protocol for load balancing purposes.
If the DA service can not be started, an error response is returned and the control connection is closed.
All transactions with the DA server consist of a command followed by zero or more arguments, separated by the space character.
The INTR command takes no arguments.
The INTR command is used to interrupt any DAP transaction currently in progress.
The INTR command always returns success.
The STAT command takes no arguments.
The STAT command is used to verify that the DAP listener is available.
The STAT command returns success only if the DAP listener is still active.
The QUIT command takes no arguments.
The QUIT command is used to terminate the DA service.
The QUIT command always returns success.
Data Connection Data sent over a data connection consists of a single DAP  transaction.
NVT ASCII is used to express these transactions.
Each transaction consists of the client sending a command a line of text terminated by the LF character; the DAP listener returns zero or more responses, each with a specific termination sequence.
All responses from a DAP listener start with a single identifying character.
If the character is a digit (0 9), then the termination sequence consists of a closing the data connection; otherwise, if the character is a lower case letter (a z), then the response is interactive and is terminated by the LF character.
All transactions with the DAP listener consist of a command followed by zero or more arguments, separated by the space character.
Double quotes may be used to prevent separation of tokens.
disconnect from the Directory See [2] for a complete list of commands and arguments.
Note that commands and arguments are in lower case, and may abbreviated to any unique prefix.
There are two kinds of responses: numeric responses, which consist of arbitrary text; and, letter responses, which consist of brief text, and expect further interaction from the client.
If the response is '1', then the DAP transaction terminated normally; if the response is '2', then the DAP transaction failed; if the response is '3', then the DAP transaction was a search returning more than one result and one of the  hitone or  list option was selected for the search; if the response is '4', then the DAP transaction terminated normally and the remainder of this line consists of the name of an entry (see the 'd' Response below); if the response is '5', then all children of an entry were found by the DAP transaction.
Once the response is completely sent, the DAP listener closes the data connection.
Note that although numeric responses utilize ASCII, they are not NVT ASCII; in particular, the LF character is used to indicate end  of line, rather than the CR LF line termination sequence of NVT
'm' Response The 'm' response contains a one line message which should be presented to the user.
At this point, the client returns a response consisting of 'm' followed by the LF character.
The client should then continue reading from the existing data connection.
The 'y' response contains a yes/no question which should be presented to the user.
After querying the user, the response (either 'y' or 'n'), followed by the LF character, should be sent to the DAP  listener.
The client should then continue reading from the existing data connection.
'p' Response The 'p' response contains a password prompt which should be presented to the user.
After querying the user, the client returns a response consisting of 'p' followed by the password supplied by the user followed by the LF character.
The client should then continue reading from the existing data connection.
'e' Response The 'e' response is used to ask the user to edit some text.
Following the 'e' character is a decimal number in ASCII followed by the LF character, indicating the number of octets that should be presented to the user for editing (these octets may include LF  characters).
At this point, the client returns a response consisting of a single character followed by a LF character.
If the character is 'e', the edit is aborted (e.g., the text is too large), and the client should then continue reading from the existing data connection.
Otherwise, the DAP listener sends the indicated number of octets corresponding to the buffer that the user is to edit.
After the user edits the buffer, one of two responses should be sent.
If the user aborted the edit, the response sent to the DAP listener is a single character 'e', followed by the LF character.
Otherwise, the response consists of any single character other than indicating the number of octets immediately following that resulted from the user edit.
Regardless of the outcome, the client should then continue reading from the existing data connection.
The 'l' response contains an entry for a selection list to be presented to the user.
The first string is a user friendly name, suitable for display to the user; the second string is a fully qualified Distinguished Name in textual format.
At this point, the client returns a response consisting of 'l' followed by the LF character.
The client should continue to accumulate selection entries until an LF character.
At this point, the user should be asked to select one or more of the selection entries.
After this selection, the client sends back a response consisting of 'L' followed by one or more decimal numbers in ASCII followed by the LF character.
The numbers are separated by spaces, and correspond to the entries selected by the user.
(The entry corresponding to the first 'l' response is numbered 1, etc.)
The client should then continue reading from the existing data connection.
'd' Response The 'd' response contains a name that the client may be interested in.
The first string is a user friendly name, suitable for display to the user; the second string is a fully qualified Distinguished Name in textual format.
At this point, the client returns a response consisting of 'd' followed by the LF character.
The client should then continue reading from the existing data connection.
The 'P' response is used to transmit a picture to the client.
Following the 'P' character is a decimal number in ASCII followed by a name and then the LF character.
The decimal number indicates the size of the picture.
The first string is the name of the attribute corresponding to the picture, in textual format; the second string is a user friendly name, suitable for display to the user; and, the third string is a fully qualified DistingiushedName in textual format.
At this point, the client returns a response consisting of a single character followed by a LF character.
If the character is 'P', the picture will not be sent (e.g., the image is too large), and the client should then continue reading from the existing data connection.
Otherwise, the DAP listener sends the indicated number of octets corresponding to the picture.
The picture is encoded using the PBM format from the PBMPLUS package.
Regardless of the outcome, the client should then continue reading from the existing data connection.
In the text that follows, "S:" refers to the DA server, "L:" refers to the DAP listener, "C:" refers to the client talking to the DA  server, and, "I:"
refers to the client talking to the DAP listener.
<wait for connection on TCP port 411>
C: <open connection to DA server
I: <open connection to DAP listener>
I: bind  simple  user "@c US@cn Manager" L: pc US@cn
Manager   client asks user for password for "c US@cn Manager" I: psecret L: <closes connection, signaling success but no response>   since response was null, client verifies that DAP listener   is still operating...
I: <open connection to DAP listener>
North America$l North America US$c US ...
I: <open connection to DAP listener>
I: fred  ufn rose,psi,us L: 1 <followed by much data
I: <open connection to DAP listener>
I: fred  ufn  list,rose,ps,us L: lHewlett Packard, US$c US@o
l L: lPerformance Systems International, US$c US@o
l L: lRutgers University, US$c US@o Rutgers University
Lps   client presents selection list to user asking to select   matches for 'ps', user selects the 2nd
I: L 2 L: dManager, US$c US@cn
I: <open connection to DAP listener>
I: fred  ufn  list,schoffstall,ps,us L: 33 matches found.
QUIT L: <stop listening for connections
<wait for next connection> 5.
Security Considerations Security considerations are not discussed in this memo.
