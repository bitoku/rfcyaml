- title: __initial_text__
  contents:
  - '             Security Implications of IPv6 on IPv4 Networks

    '
- title: Abstract
  contents:
  - "Abstract\n   This document discusses the security implications of native IPv6\n\
    \   support and IPv6 transition/coexistence technologies on \"IPv4-only\"\n  \
    \ networks and describes possible mitigations for the aforementioned\n   issues.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7123.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n   2.  Security Implications of Native IPv6 Support  . . . .\
    \ . . . .   4\n     2.1.  Filtering Native IPv6 Traffic . . . . . . . . . . .\
    \ . . .   4\n   3.  Security Implications of Tunneling Mechanisms . . . . . .\
    \ . .   5\n     3.1.  Filtering 6in4  . . . . . . . . . . . . . . . . . . . .\
    \ .   6\n     3.2.  Filtering 6over4  . . . . . . . . . . . . . . . . . . . .\
    \   7\n     3.3.  Filtering 6rd . . . . . . . . . . . . . . . . . . . . . .  \
    \ 7\n     3.4.  Filtering 6to4  . . . . . . . . . . . . . . . . . . . . .   8\n\
    \     3.5.  Filtering ISATAP  . . . . . . . . . . . . . . . . . . . .   9\n  \
    \   3.6.  Filtering Teredo  . . . . . . . . . . . . . . . . . . . .   9\n    \
    \ 3.7.  Filtering Tunnel Broker with Tunnel Setup Protocol (TSP)   11\n     3.8.\
    \  Filtering AYIYA . . . . . . . . . . . . . . . . . . . . .  11\n   4.  Additional\
    \ Considerations when Filtering IPv6 Traffic . . . .  12\n   5.  Security Considerations\
    \ . . . . . . . . . . . . . . . . . . .  13\n   6.  Acknowledgements  . . . .\
    \ . . . . . . . . . . . . . . . . . .  13\n   7.  References  . . . . . . . .\
    \ . . . . . . . . . . . . . . . . .  13\n     7.1.  Normative References  . .\
    \ . . . . . . . . . . . . . . . .  13\n     7.2.  Informative References  . .\
    \ . . . . . . . . . . . . . . .  14\n   Appendix A.  Summary of Filtering Rules\
    \ . . . . . . . . . . . . .  18\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Most general-purpose operating systems implement and enable\
    \ native\n   IPv6 [RFC2460] support and a number of transition/coexistence\n \
    \  technologies by default.  Support of IPv6 by all nodes is intended to\n   become\
    \ best current practice [RFC6540].  Some enterprise networks\n   might, however,\
    \ choose to delay active use of IPv6.\n   This document describes operational\
    \ practices to prevent security\n   exposure in enterprise networks resulting\
    \ from unplanned use of IPv6\n   on such networks.  This document is only applicable\
    \ to enterprise\n   networks: networks where the network operator is not providing\
    \ a\n   general-purpose internet, but rather a business-specific network.\n  \
    \ The solutions proposed here are not practical for home networks, nor\n   are\
    \ they appropriate for provider networks such as ISPs, mobile\n   providers, WiFi\
    \ hotspot providers, or any other public internet\n   service.\n   In scenarios\
    \ in which IPv6-enabled devices are deployed on enterprise\n   networks that are\
    \ intended to be IPv4-only, native IPv6 support and/\n   or IPv6 transition/coexistence\
    \ technologies could be leveraged by\n   local or remote attackers for a number\
    \ of (illegitimate) purposes.\n   For example,\n   o  A Network Intrusion Detection\
    \ System (NIDS) might be prepared to\n      detect attack patterns for IPv4 traffic,\
    \ but might be unable to\n      detect the same attack patterns when a transition/coexistence\n\
    \      technology is leveraged for that purpose.\n   o  An IPv4 firewall might\
    \ enforce a specific security policy in IPv4,\n      but might be unable to enforce\
    \ the same policy in IPv6.\n   o  A NIDS or firewall might support both IPv4 and\
    \ IPv6, but might not\n      be configured to enforce on IPv6 traffic the same\
    \ controls/\n      policies it enforces on IPv4 traffic.\n   o  Some transition/coexistence\
    \ mechanisms could cause an internal\n      host with otherwise limited IPv4 connectivity\
    \ to become globally\n      reachable over IPv6, therefore resulting in increased\
    \ (and\n      possibly unexpected) host exposure.\n         NOTE: Some transition/coexistence\
    \ mechanisms (notably Teredo)\n         are designed to traverse Network Address\
    \ Port Translation\n         (NAPT) [RFC2663] devices, allowing incoming IPv6\
    \ connections\n         from the Internet to hosts behind the organizational firewall\n\
    \         or NAPT (which in many deployments provides a minimum level of\n   \
    \      protection by only allowing those instances of communication\n        \
    \ that have been initiated from the internal network).\n   o  IPv6 support could,\
    \ either inadvertently or as a result of a\n      deliberate attack, result in\
    \ Virtual Private Network (VPN) traffic\n      leaks if IPv6-unaware VPN software\
    \ is employed by dual-stacked\n      hosts [VPN-LEAKS].\n   In general, most of\
    \ the aforementioned security implications can be\n   mitigated by enforcing security\
    \ controls on native IPv6 traffic and\n   on IPv4-tunneled IPv6 traffic.  Among\
    \ such controls, is the\n   enforcement of filtering policies to block undesirable\
    \ traffic.\n   While IPv6 widespread/global IPv6 deployment has been slower than\n\
    \   expected, it is nevertheless happening; and thus, filtering IPv6\n   traffic\
    \ (whether native or transition/coexistence) to mitigate IPv6\n   security implications\
    \ on IPv4 networks should (generally) only be\n   considered as a temporary measure\
    \ until IPv6 is deployed.\n      NOTE: The aforementioned security controls should\
    \ contemplate not\n      only network-based solutions, but also host-based solutions\
    \ (such\n      as, e.g., personal firewalls).\n"
- title: 2.  Security Implications of Native IPv6 Support
  contents:
  - "2.  Security Implications of Native IPv6 Support\n   Most popular operating systems\
    \ include IPv6 support that is enabled\n   by default.  This means that even if\
    \ a network is expected to be\n   IPv4-only, much of its infrastructure is nevertheless\
    \ likely to be\n   IPv6-enabled.  For example, hosts are likely to have at least\
    \ link-\n   local IPv6 connectivity, which might be exploited by attackers with\n\
    \   access to the local network.\n   Additionally, unless appropriate measures\
    \ are taken, an attacker with\n   access to an \"IPv4-only\" local network could\
    \ impersonate a local\n   router and cause local hosts to enable their 'non-link-local'\
    \ IPv6\n   connectivity (e.g., by sending Router Advertisement messages),\n  \
    \ possibly circumventing security controls that were enforced only on\n   IPv4\
    \ communications.\n      NOTE: [THC-IPV6] and [IPv6-Toolkit] include tools that\
    \ implement\n      this attack vector (along with many others).  [Waters2011]\n\
    \      provides an example of how this could be achieved using publicly\n    \
    \  available tools.\n   Native IPv6 support could also possibly lead to VPN-traffic\
    \ leakages\n   when hosts employ VPN software that, not only does not support\
    \ IPv6,\n   but does nothing about IPv6 traffic.  [VPN-LEAKS] describes this\n\
    \   issue, along with possible mitigations.\n   In general, networks should enforce\
    \ on native IPv6 traffic the same\n   security policies currently enforced on\
    \ IPv4 traffic.  However, in\n   those networks in which IPv6 has not yet been\
    \ deployed and enforcing\n   the aforementioned policies is deemed as infeasible,\
    \ a network\n   administrator might mitigate IPv6-based attack vectors by means\
    \ of\n   appropriate packet filtering.\n"
- title: 2.1.  Filtering Native IPv6 Traffic
  contents:
  - "2.1.  Filtering Native IPv6 Traffic\n   Some layer-2 devices might have the ability\
    \ to selectively filter\n   packets based on the type of layer-2 payload.  When\
    \ such\n   functionality is available, IPv6 traffic could be blocked at those\n\
    \   layer-2 devices by blocking, for example, Ethernet frames with the\n   Protocol\
    \ Type field set to 0x86dd [IANA-ETHER].  We note, however,\n   that blocking\
    \ IPv6 at layer-2 might create problems that are\n   difficult to diagnose, inclusive\
    \ of intentional or incidental use of\n   link-local addressing (as in Multicast\
    \ DNS/DNS-based Service\n   Discovery [RFC6762] [RFC6763]); sites that enforce\
    \ such a filtering\n   policy should keep that possibility in mind when debugging\
    \ the\n   network.\n   Attacks based on Stateless Address Autoconfiguration (SLAAC)\n\
    \   [RFC3756] can be mitigated with technologies such as Router\n   Advertisement\
    \ Guard (RA-Guard) [RFC6105] [RA-GRD-IMP].  In a similar\n   way, DHCPv6-based\
    \ attacks can be mitigated with technologies such as\n   DHCPv6-Shield [SHIELD].\
    \  However, both RA-Guard and DHCPv6-Shield are\n   incapable of mitigating attack\
    \ vectors that employ IPv6 link-local\n   addresses, since configuration of such\
    \ addresses does not rely on\n   Router Advertisement messages or DHCPv6-server\
    \ messages.\n   Administrators considering the filtering of native IPv6 traffic\
    \ at\n   layer-3 devices are urged to pay attention to the general\n   considerations\
    \ for IPv6 traffic filtering discussed in Section 4.\n      NOTE: If native IPv6\
    \ traffic is filtered at layer-2, local IPv6\n      nodes would only get to configure\
    \ IPv6 link-local addresses.\n   In order to mitigate attacks based on native\
    \ IPv6 traffic, IPv6\n   security controls should be enforced on both IPv4 and\
    \ IPv6 networks.\n   The aforementioned controls might include: deploying IPv6-enabled\n\
    \   NIDS, implementing IPv6 firewalling, etc.\n      NOTE: In some very specific\
    \ scenarios (e.g., military operations\n      networks) in which only IPv4 service\
    \ might be desired, a network\n      administrator might want to disable IPv6\
    \ support in all the\n      communicating devices.\n"
- title: 3.  Security Implications of Tunneling Mechanisms
  contents:
  - "3.  Security Implications of Tunneling Mechanisms\n   Unless properly managed,\
    \ tunneling mechanisms might result in\n   negative security implications.  For\
    \ example, they might increase\n   host exposure, might be leveraged to evade\
    \ security controls, might\n   contain protocol-based vulnerabilities, and/or\
    \ the corresponding code\n   might contain bugs with security implications.\n\
    \      NOTE: [RFC6169] describes the security implications of tunneling\n    \
    \  mechanisms in detail.  Of the plethora of tunneling mechanisms\n      that\
    \ have so far been standardized and widely implemented, the so-\n      called\
    \ \"automatic tunneling\" mechanisms (such as Teredo, Intra-\n      Site Automatic\
    \ Tunnel Addressing Protocol (ISATAP), and 6to4) are\n      of particular interest\
    \ from a security standpoint, since they\n      might be employed without prior\
    \ consent or action of the user or\n      network administrator.\n   Tunneling\
    \ mechanisms should be a concern not only to network\n   administrators that have\
    \ consciously deployed them, but also to those\n   who have not deployed them,\
    \ as these mechanisms might be leveraged to\n   bypass their security policies.\n\
    \      NOTE: [CERT2009] contains some examples of how tunnels can be\n      leveraged\
    \ to bypass firewall rules.\n   The aforementioned issues could be mitigated by\
    \ applying the common\n   security practice of only allowing traffic deemed as\
    \ \"necessary\"\n   (i.e., the so-called \"default deny\" policy).  Thus, when\
    \ such policy\n   is enforced, IPv6 transition/coexistence traffic would be blocked\
    \ by\n   default and would only be allowed as a result of an explicit\n   decision.\n\
    \      NOTE: It should be noted that this type of policy is usually\n      enforced\
    \ on a network that is the target of such traffic (such as\n      an enterprise\
    \ network).  IPv6 transition traffic should generally\n      never be filtered,\
    \ e.g., by an ISP when it is transit traffic.\n   In those scenarios in which\
    \ transition/coexistence traffic is meant\n   to be blocked, it is highly recommended\
    \ that, in addition to the\n   enforcement of filtering policies at the organizational\
    \ perimeter,\n   the corresponding transition/coexistence mechanisms be disabled\
    \ on\n   each node connected to the organizational network.  This would not\n\
    \   only prevent security breaches resulting from accidental use of these\n  \
    \ mechanisms, but would also disable this functionality altogether,\n   possibly\
    \ mitigating vulnerabilities that might be present in the host\n   implementation\
    \ of these transition/coexistence mechanisms.\n   IPv6-in-IPv4 tunneling mechanisms\
    \ (such as 6to4 or configured\n   tunnels) can generally be blocked by dropping\
    \ IPv4 packets that\n   contain a Protocol field set to 41.  Security devices\
    \ such as NIDS\n   might also include signatures that detect such transition/coexistence\n\
    \   traffic.\n   Administrators considering the filtering of transition/coexistence\n\
    \   traffic are urged to pay attention to the general considerations for\n   IPv6\
    \ traffic filtering discussed in Section 4.\n   We note that this document only\
    \ covers standardized IPv6 tunneling\n   mechanisms; it does not aim to cover\
    \ non-standard tunneling\n   mechanisms or tunneling based on IPsec [RFC4301]\
    \ or on SSL/TLS\n   [RFC5246] [RFC6101].\n"
- title: 3.1.  Filtering 6in4
  contents:
  - "3.1.  Filtering 6in4\n   Probably the most basic type of tunnel employed for\
    \ connecting IPv6\n   \"islands\" is the so-called \"6in4\", in which IPv6 packets\
    \ are\n   encapsulated within IPv4 packets.  These tunnels typically result\n\
    \   from manual configuration at the two tunnel endpoints.\n   6in4 tunnels can\
    \ be blocked by blocking IPv4 packets with a Protocol\n   field of 41.\n"
- title: 3.2.  Filtering 6over4
  contents:
  - "3.2.  Filtering 6over4\n   [RFC2529] specifies a mechanism known as 6over4 or\
    \ 'IPv6 over IPv4'\n   (or colloquially as 'virtual Ethernet'), which comprises\
    \ a set of\n   mechanisms and policies to allow isolated IPv6 hosts located on\n\
    \   physical links with no directly connected IPv6 router to become fully\n  \
    \ functional IPv6 hosts by using an IPv4 domain that supports IPv4\n   multicast\
    \ as their virtual local link.\n      NOTE: This transition technology has never\
    \ been widely deployed\n      because of the low level of deployment of multicast\
    \ in most\n      networks.\n   6over4 encapsulates IPv6 packets in IPv4 packets\
    \ with their Protocol\n   field set to 41.  As a result, simply filtering all\
    \ IPv4 packets that\n   have a Protocol field equal to 41 will filter 6over4 (along\
    \ with many\n   other transition technologies).\n   A more selective filtering\
    \ could be enforced such that 6over4 traffic\n   is filtered while other transition\
    \ traffic is still allowed.  Such a\n   filtering policy would block all IPv4\
    \ packets that have their\n   Protocol field set to 41, and that have a Destination\
    \ Address that\n   belongs to the prefix 239.0.0.0/8.\n   This filtering policy\
    \ basically blocks 6over4 Neighbor Discovery\n   traffic directed to multicast\
    \ addresses, thus preventing SLAAC,\n   address resolution, etc.  Additionally,\
    \ it would prevent the 6over4\n   multicast addresses from being leveraged for\
    \ the purpose of network\n   reconnaissance.\n"
- title: 3.3.  Filtering 6rd
  contents:
  - "3.3.  Filtering 6rd\n   6rd builds upon the mechanisms of 6to4 to enable the\
    \ rapid deployment\n   of IPv6 on IPv4 infrastructures, while avoiding some downsides\
    \ of\n   6to4.  Usage of 6rd was originally documented in [RFC5569], and the\n\
    \   mechanism was generalized to other access technologies and formally\n   standardized\
    \ in [RFC5969].\n   6rd can be blocked by blocking IPv4 packets with the Protocol\
    \ field\n   set to 41.\n"
- title: 3.4.  Filtering 6to4
  contents:
  - "3.4.  Filtering 6to4\n   6to4 [RFC3056] is an address assignment and router-to-router,\
    \ host-\n   to-router, and router-to-host automatic tunneling mechanism that is\n\
    \   meant to provide IPv6 connectivity between IPv6 sites and hosts\n   across\
    \ the IPv4 Internet.\n      NOTE: The security considerations for 6to4 are discussed\
    \ in detail\n      in [RFC3964].  [RFC6343] provides advice to network operators\n\
    \      about 6to4 (some of which relates to security mitigations).\n   As discussed\
    \ in Section 3, all IPv6-in-IPv4 traffic, including 6to4,\n   could be easily\
    \ blocked by filtering IPv4 packets that contain their\n   Protocol field set\
    \ to 41.  This is the most effective way of\n   filtering such traffic.\n   If\
    \ 6to4 traffic is meant to be filtered while other IPv6-in-IPv4\n   traffic is\
    \ allowed, then more finer-grained filtering rules could be\n   applied.  For\
    \ example, 6to4 traffic could be filtered by applying\n   filtering rules such\
    \ as:\n   o  Filter outgoing IPv4 packets that have the Destination Address set\n\
    \      to an address that belongs to the prefix 192.88.99.0/24.\n   o  Filter\
    \ incoming IPv4 packets that have the Source Address set to\n      an address\
    \ that belongs to the prefix 192.88.99.0/24.\n         NOTE: These rules assume\
    \ that the corresponding nodes employ\n         the \"Anycast Prefix for 6to4\
    \ Relay Routers\" [RFC3068].  It has\n         been suggested that 6to4 relays\
    \ send their packets with their\n         IPv4 Source Address set to 192.88.99.1.\n\
    \   o  Filter outgoing IPv4 packets that have the Destination Address set\n  \
    \    to the IPv4 address of well-known 6to4 relays.\n   o  Filter incoming IPv4\
    \ packets that have the Source Address set to\n      the IPv4 address of well-known\
    \ 6to4 relays.\n      These last two filtering policies will generally be unnecessary,\n\
    \      and possibly infeasible to enforce (given the number of potential\n   \
    \   6to4 relays, and the fact that many relays might remain unknown to\n     \
    \ the network administrator).  If anything, they should be applied\n      with\
    \ the additional requirement that such IPv4 packets have their\n      Protocol\
    \ field set to 41 to avoid the case where other services\n      available at the\
    \ same IPv4 address as a 6to4 relay are mistakenly\n      made inaccessible.\n\
    \   If the filtering device has capabilities to inspect the payload of\n   IPv4\
    \ packets, then the following filtering rules could be enforced:\n   o  Filter\
    \ outgoing IPv4 packets that have their Protocol field set to\n      41, and that\
    \ have an IPv6 Source Address (embedded in the IPv4\n      payload) that belongs\
    \ to the prefix 2002::/16.\n   o  Filter incoming IPv4 packets that have their\
    \ Protocol field set to\n      41, and that have an IPv6 Destination address (embedded\
    \ in the\n      IPv4 payload) that belongs to the prefix 2002::/16.\n"
- title: 3.5.  Filtering ISATAP
  contents:
  - "3.5.  Filtering ISATAP\n   ISATAP [RFC5214] is an Intra-site tunneling protocol,\
    \ and thus it is\n   generally expected that such traffic will not traverse the\n\
    \   organizational firewall of an IPv4-only network.  Nevertheless,\n   ISATAP\
    \ can be easily blocked by blocking IPv4 packets with a Protocol\n   field of\
    \ 41.\n   The most popular operating system that includes an implementation of\n\
    \   ISATAP in the default installation is Microsoft Windows.  Microsoft\n   Windows\
    \ obtains the ISATAP router address by resolving the domain\n   name isatap.<localdomain>\
    \ to DNS A resource records.  Additionally,\n   it tries to learn the ISATAP router\
    \ address by employing Link-Local\n   Multicast Name Resolution (LLMNR) [RFC4795]\
    \ to resolve the name\n   \"isatap\".  As a result, blocking ISATAP by preventing\
    \ hosts from\n   successfully performing name resolution for the aforementioned\
    \ names\n   and/or by filtering packets with specific IPv4 destination addresses\n\
    \   is both difficult and undesirable.\n"
- title: 3.6.  Filtering Teredo
  contents:
  - "3.6.  Filtering Teredo\n   Teredo [RFC4380] is an address assignment and automatic\
    \ tunneling\n   technology that provides IPv6 connectivity to dual-stack nodes\
    \ that\n   are behind one or more Network Address Port Translation (NAPT)\n  \
    \ [RFC2663] devices, by encapsulating IPv6 packets in IPv4-based UDP\n   datagrams.\
    \  Teredo is meant to be a 'last-resort' IPv6 connectivity\n   technology, to\
    \ be used only when other technologies such as 6to4\n   cannot be deployed (e.g.,\
    \ because the edge device has not been\n   assigned a public IPv4 address).\n\
    \   As noted in [RFC4380], in order for a Teredo client to configure its\n   Teredo\
    \ IPv6 address, it must contact a Teredo server through the\n   Teredo service\
    \ port (UDP port number 3544).\n   To prevent the Teredo initialization process\
    \ from succeeding, and\n   hence prevent the use of Teredo, an organizational\
    \ firewall could\n   filter outgoing UDP packets with a Destination Port of 3544.\n\
    \      NOTE: It is clear that such a filtering policy does not prevent an\n  \
    \    attacker from running its own Teredo server in the public\n      Internet,\
    \ using a non-standard UDP port for the Teredo service\n      port (i.e., a port\
    \ number other than 3544).\n   If the filtering device has capabilities to inspect\
    \ the payload of\n   IPv4 packets, the following (additional) filtering policy\
    \ could be\n   enforced:\n   o  Filter outgoing IPv4/UDP packets that embed an\
    \ IPv6 packet with\n      the \"Version\" field set to 6, and an IPv6 Source Address\
    \ that\n      belongs to the prefix 2001::/32.\n   o  Filter incoming IPv4/UDP\
    \ packets that embed an IPv6 packet with\n      the \"Version\" field set to 6,\
    \ and an IPv6 Destination Address that\n      belongs to the prefix 2001::/32.\n\
    \      NOTE: These two filtering rules could, at least in theory, result\n   \
    \   in false positives.  Additionally, they would generally require\n      the\
    \ filtering device to reassemble fragments prior to enforcing\n      filtering\
    \ rules, since the information required to enforce them\n      might be missing\
    \ in the received fragments (which should be\n      expected if Teredo is being\
    \ employed for malicious purposes).\n   The most popular operating system that\
    \ includes an implementation of\n   Teredo in the default installation is Microsoft\
    \ Windows.  Microsoft\n   Windows obtains the Teredo server addresses (primary\
    \ and secondary)\n   by resolving the domain name teredo.ipv6.microsoft.com into\
    \ DNS A\n   records.  A network administrator might want to prevent Microsoft\n\
    \   Windows hosts from obtaining Teredo service by filtering, at the\n   organizational\
    \ firewall, outgoing UDP datagrams (i.e., IPv4 packets\n   with the Protocol field\
    \ set to 17) that contain in the IPv4\n   Destination Address any of the IPv4\
    \ addresses that the domain name\n   teredo.ipv6.microsoft.com maps to (or the\
    \ IPv4 address of any well-\n   known Teredo server).  Additionally, the firewall\
    \ would filter\n   incoming UDP datagrams from any of the IPv4 addresses to which\
    \ the\n   domain names of well-known Teredo servers (such as\n   teredo.ipv6.microsoft.com)\
    \ resolve.\n      NOTE: As these IPv4 addresses might change over time, an\n \
    \     administrator should obtain these addresses when implementing the\n    \
    \  filtering policy, and should also be prepared to keep this list up\n      to\
    \ date.  The corresponding addresses can be easily obtained from\n      a UNIX\
    \ host by issuing the command 'dig teredo.ipv6.microsoft.com\n      a' (without\
    \ quotes), where dig(1) is a free-software tool (part of\n      the \"dnsutils\"\
    \ package) produced by the Internet Software\n      Consortium (ISC).\n   It should\
    \ be noted that even with all these filtering policies in\n   place, a node in\
    \ the internal network might still be able to\n   communicate with some Teredo\
    \ clients.  That is, it could configure an\n   IPv6 address itself (without even\
    \ contacting a Teredo server), and it\n   might send Teredo traffic to those peers\
    \ for which intervention of\n   the host's Teredo server is not required (e.g.,\
    \ Teredo clients behind\n   a cone NAT).\n"
- title: 3.7.  Filtering Tunnel Broker with Tunnel Setup Protocol (TSP)
  contents:
  - "3.7.  Filtering Tunnel Broker with Tunnel Setup Protocol (TSP)\n   The tunnel\
    \ broker model enables dynamic configuration of tunnels\n   between a tunnel client\
    \ and a tunnel server.  The tunnel broker\n   provides a control channel for creating,\
    \ deleting, or updating a\n   tunnel between the tunnel client and the tunnel\
    \ server.\n   Additionally, the tunnel broker may register the user's IPv6 address\n\
    \   and name in the DNS.  Once the tunnel is configured, data can flow\n   between\
    \ the tunnel client and the tunnel server.  [RFC3053] describes\n   the tunnel\
    \ broker model, while [RFC5572] specifies the Tunnel Setup\n   Protocol (TSP),\
    \ which can be used by clients to communicate with the\n   Tunnel Broker.\n  \
    \ TSP can use either TCP or UDP as the transport protocol.  In both\n   cases,\
    \ TSP uses port number 3653, which has been assigned by the IANA\n   for this\
    \ purpose.  As a result, TSP (the Tunnel Broker control\n   channel) can be blocked\
    \ by blocking TCP and UDP packets originating\n   from the local network and destined\
    \ to UDP port 3653 or TCP port\n   3653.  Additionally, the data channel can be\
    \ blocked by blocking UDP\n   packets originated from the local network and destined\
    \ to UDP port\n   3653, and IPv4 packets with a Protocol field set to 41.\n"
- title: 3.8.  Filtering AYIYA
  contents:
  - "3.8.  Filtering AYIYA\n   AYIYA (\"Anything In Anything\") [AYIYA] allows the\
    \ tunneling of\n   packets across Network Address Port Translation (NAPT) [RFC2663]\n\
    \   devices.  While the specification of this tunneling mechanism was\n   never\
    \ published as an RFC, it is nevertheless widely deployed\n   [SixXS-stats].\n\
    \   AYIYA can be blocked by blocking TCP and UDP packets originating from\n  \
    \ the local network and destined to UDP port 5072 or TCP port 5072.\n"
- title: 4.  Additional Considerations when Filtering IPv6 Traffic
  contents:
  - "4.  Additional Considerations when Filtering IPv6 Traffic\n   IPv6 deployments\
    \ in the Internet are continually increasing, and some\n   hosts default to preferring\
    \ IPv6 connectivity whenever it is\n   available.  This is likely to cause IPv6-capable\
    \ hosts to attempt to\n   reach an ever-increasing number of popular destinations\
    \ via IPv6,\n   even if this IPv6 connectivity relies on a transition technology\
    \ over\n   an \"IPv4-only\" network.\n   A large source of IPv6 brokenness today\
    \ comes from nodes that believe\n   that they have functional IPv6 connectivity,\
    \ but the path to their\n   destination fails somewhere upstream [Anderson2010]\
    \ [Anderson2011]\n   [Huston2010b] [Huston2012].  Upstream filtering of transition\n\
    \   technologies or situations where a misconfigured node attempts to\n   \"provide\"\
    \ native IPv6 service on a given network without proper\n   upstream IPv6 connectivity\
    \ may result in hosts attempting to reach\n   remote nodes via IPv6, and depending\
    \ on the absence or presence and\n   specific implementation details of \"Happy\
    \ Eyeballs\" [RFC6555], there\n   might be a non-trivial timeout period before\
    \ the host falls back to\n   IPv4 [Huston2010a] [Huston2012].\n   For this reason,\
    \ networks attempting to prevent IPv6 traffic from\n   traversing their devices\
    \ should consider configuring their local\n   recursive DNS servers to respond\
    \ to queries for AAAA DNS records with\n   a DNS RCODE of 0 (NOERROR) [RFC1035]\
    \ or to silently ignore such\n   queries, and should even consider filtering AAAA\
    \ records at the\n   network ingress point to prevent the internal hosts from\
    \ attempting\n   their own DNS resolution.  This will ensure that hosts that are\
    \ on an\n   \"IPv4-only\" network will only receive DNS A records, and they will\
    \ be\n   unlikely to attempt to use (likely broken) IPv6 connectivity to reach\n\
    \   their desired destinations.\n   We note that in scenarios where DNSSEC [RFC4033]\
    \ is deployed,\n   stripping AAAA records from DNS responses would lead to DNS\
    \ responses\n   elicited by queries with the DO and CD bits set [RFC4035] to be\n\
    \   considered invalid, and hence discarded.  This situation is similar\n   to\
    \ that of DNS64 [RFC6147] in the presence of DNSSEC and should be\n   considered\
    \ a drawback associated with this approach.\n   Additionally, it should be noted\
    \ that when filtering IPv6 traffic, it\n   is good practice to signal the packet\
    \ drop to the source node, such\n   that it is able to react to the packet drop\
    \ in a more appropriate and\n   timely way.  For example, a firewall could signal\
    \ the packet drop by\n   means of an ICMPv6 error message (or TCP [RFC0793] RST\
    \ segment if\n   appropriate), such that the source node can, e.g., quickly react\
    \ as\n   described in [RFC5461].  For obvious reasons, if the traffic being\n\
    \   filtered is IPv6 transition/coexistence traffic, the signaling packet\n  \
    \ should be sent by means of the corresponding IPv6 transition/\n   coexistence\
    \ technology.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This document discusses the security implications\
    \ of IPv6 on IPv4\n   networks and describes a number of techniques to mitigate\
    \ the\n   aforementioned issues.  In general, the possible mitigations boil\n\
    \   down to enforcing on native IPv6 and IPv6 transition/coexistence\n   traffic\
    \ the same security policies currently enforced for IPv4\n   traffic and/or blocking\
    \ the aforementioned traffic when it is deemed\n   as undesirable.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   The authors would like to thank Wes George, who contributed\
    \ most of\n   the text that comprises Section 4 of this document.\n   The authors\
    \ would like to thank (in alphabetical order) Ran Atkinson,\n   Brian Carpenter,\
    \ Stephen Farrell, Guillermo Gont, Joel Jaeggli, Panos\n   Kampanakis, Warren\
    \ Kumari, Ted Lemon, David Malone, Joseph Salowey,\n   Arturo Servin, Donald Smith,\
    \ Tina Tsou, and Eric Vyncke for providing\n   valuable comments on earlier versions\
    \ of this document.\n   This document is based on the results of the project \"\
    Security\n   Assessment of the Internet Protocol version 6 (IPv6)\" [CPNI-IPv6],\n\
    \   carried out by Fernando Gont on behalf of the UK Centre for the\n   Protection\
    \ of National Infrastructure (CPNI).  Fernando Gont would\n   like to thank the\
    \ UK CPNI for their continued support.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC1035]  Mockapetris, P., \"Domain names - implementation\
    \ and\n              specification\", STD 13, RFC 1035, November 1987.\n   [RFC2460]\
    \  Deering, S. and R. Hinden, \"Internet Protocol, Version 6\n              (IPv6)\
    \ Specification\", RFC 2460, December 1998.\n   [RFC2529]  Carpenter, B. and C.\
    \ Jung, \"Transmission of IPv6 over IPv4\n              Domains without Explicit\
    \ Tunnels\", RFC 2529, March 1999.\n   [RFC3053]  Durand, A., Fasano, P., Guardini,\
    \ I., and D. Lento, \"IPv6\n              Tunnel Broker\", RFC 3053, January 2001.\n\
    \   [RFC3056]  Carpenter, B. and K. Moore, \"Connection of IPv6 Domains\n    \
    \          via IPv4 Clouds\", RFC 3056, February 2001.\n   [RFC3068]  Huitema,\
    \ C., \"An Anycast Prefix for 6to4 Relay Routers\",\n              RFC 3068, June\
    \ 2001.\n   [RFC4033]  Arends, R., Austein, R., Larson, M., Massey, D., and S.\n\
    \              Rose, \"DNS Security Introduction and Requirements\", RFC\n   \
    \           4033, March 2005.\n   [RFC4035]  Arends, R., Austein, R., Larson,\
    \ M., Massey, D., and S.\n              Rose, \"Protocol Modifications for the\
    \ DNS Security\n              Extensions\", RFC 4035, March 2005.\n   [RFC4380]\
    \  Huitema, C., \"Teredo: Tunneling IPv6 over UDP through\n              Network\
    \ Address Translations (NATs)\", RFC 4380, February\n              2006.\n   [RFC4795]\
    \  Aboba, B., Thaler, D., and L. Esibov, \"Link-local\n              Multicast\
    \ Name Resolution (LLMNR)\", RFC 4795, January\n              2007.\n   [RFC5214]\
    \  Templin, F., Gleeson, T., and D. Thaler, \"Intra-Site\n              Automatic\
    \ Tunnel Addressing Protocol (ISATAP)\", RFC 5214,\n              March 2008.\n\
    \   [RFC5569]  Despres, R., \"IPv6 Rapid Deployment on IPv4\n              Infrastructures\
    \ (6rd)\", RFC 5569, January 2010.\n   [RFC5969]  Townsley, W. and O. Troan, \"\
    IPv6 Rapid Deployment on IPv4\n              Infrastructures (6rd) -- Protocol\
    \ Specification\", RFC\n              5969, August 2010.\n   [RFC5572]  Blanchet,\
    \ M. and F. Parent, \"IPv6 Tunnel Broker with the\n              Tunnel Setup\
    \ Protocol (TSP)\", RFC 5572, February 2010.\n   [RFC6147]  Bagnulo, M., Sullivan,\
    \ A., Matthews, P., and I. van\n              Beijnum, \"DNS64: DNS Extensions\
    \ for Network Address\n              Translation from IPv6 Clients to IPv4 Servers\"\
    , RFC 6147,\n              April 2011.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [RFC0793]  Postel, J., \"Transmission Control\
    \ Protocol\", STD 7, RFC\n              793, September 1981.\n   [RFC2663]  Srisuresh,\
    \ P. and M. Holdrege, \"IP Network Address\n              Translator (NAT) Terminology\
    \ and Considerations\", RFC\n              2663, August 1999.\n   [RFC3756]  Nikander,\
    \ P., Kempf, J., and E. Nordmark, \"IPv6 Neighbor\n              Discovery (ND)\
    \ Trust Models and Threats\", RFC 3756, May\n              2004.\n   [RFC3964]\
    \  Savola, P. and C. Patel, \"Security Considerations for\n              6to4\"\
    , RFC 3964, December 2004.\n   [RFC4301]  Kent, S. and K. Seo, \"Security Architecture\
    \ for the\n              Internet Protocol\", RFC 4301, December 2005.\n   [RFC5246]\
    \  Dierks, T. and E. Rescorla, \"The Transport Layer Security\n              (TLS)\
    \ Protocol Version 1.2\", RFC 5246, August 2008.\n   [RFC5461]  Gont, F., \"TCP's\
    \ Reaction to Soft Errors\", RFC 5461,\n              February 2009.\n   [RFC6101]\
    \  Freier, A., Karlton, P., and P. Kocher, \"The Secure\n              Sockets\
    \ Layer (SSL) Protocol Version 3.0\", RFC 6101,\n              August 2011.\n\
    \   [RFC6105]  Levy-Abegnoli, E., Van de Velde, G., Popoviciu, C., and J.\n  \
    \            Mohacsi, \"IPv6 Router Advertisement Guard\", RFC 6105,\n       \
    \       February 2011.\n   [RFC6169]  Krishnan, S., Thaler, D., and J. Hoagland,\
    \ \"Security\n              Concerns with IP Tunneling\", RFC 6169, April 2011.\n\
    \   [RFC6343]  Carpenter, B., \"Advisory Guidelines for 6to4 Deployment\",\n \
    \             RFC 6343, August 2011.\n   [RFC6540]  George, W., Donley, C., Liljenstolpe,\
    \ C., and L. Howard,\n              \"IPv6 Support Required for All IP-Capable\
    \ Nodes\", BCP 177,\n              RFC 6540, April 2012.\n   [RFC6555]  Wing,\
    \ D. and A. Yourtchenko, \"Happy Eyeballs: Success with\n              Dual-Stack\
    \ Hosts\", RFC 6555, April 2012.\n   [RFC6762]  Cheshire, S. and M. Krochmal,\
    \ \"Multicast DNS\", RFC 6762,\n              February 2013.\n   [RFC6763]  Cheshire,\
    \ S. and M. Krochmal, \"DNS-Based Service\n              Discovery\", RFC 6763,\
    \ February 2013.\n   [RA-GRD-IMP]\n              Gont, F., \"Implementation Advice\
    \ for IPv6 Router\n              Advertisement Guard (RA-Guard)\", Work in Progress,\n\
    \              November 2012.\n   [VPN-LEAKS]\n              Gont, F., \"Virtual\
    \ Private Network (VPN) traffic leakages\n              in dual-stack hosts/ networks\"\
    , Work in Progress, August\n              2013.\n   [SHIELD]   Gont, F., Liu,\
    \ W., and G. Van de Velde, \"DHCPv6-Shield:\n              Protecting Against\
    \ Rogue DHCPv6 Servers\", Work in\n              Progress, October 2013.\n   [AYIYA]\
    \    Massar, J., \"AYIYA: Anything In Anything\", Work in\n              Progress,\
    \ July 2004.\n   [IANA-ETHER]\n              IANA, \"Ethernet Numbers\",\n   \
    \           <http://www.iana.org/assignments/ethernet-numbers>.\n   [CERT2009]\
    \ Giobbi, R., \"Bypassing Firewalls with IPv6 Tunnels\", CERT/\n             \
    \ CC Blog, April 2009, <http://www.cert.org/blogs/vuls/2009/\n              04/bypassing_firewalls_with_ipv6.html>.\n\
    \   [Huston2010a]\n              Huston, G., \"IPv6 Measurements\", 2010,\n  \
    \            <http://www.potaroo.net/stats/1x1/>.\n   [Huston2010b]\n        \
    \      Huston, G., \"Flailing IPv6\", The ISP Column: A monthly\n            \
    \  column on things Internet, December 2010,\n              <http://www.potaroo.net/ispcol/2010-12/6to4fail.pdf>.\n\
    \   [Huston2012]\n              Huston, G., \"Bemused Eyeballs: Tailoring Dual\
    \ Stack\n              Applications in a CGN Environment\", The ISP Column: A\n\
    \              monthly column on things Internet, May 2012,\n              <http://www.potaroo.net/ispcol/2012-05/notquite.pdf>.\n\
    \   [Anderson2010]\n              Anderson, T., \"Measuring and combating IPv6\
    \ brokenness\",\n              RIPE 61, Roma, November 2010,\n              <http://ripe61.ripe.net/presentations/162-ripe61.pdf>.\n\
    \   [Anderson2011]\n              Anderson, T., \"IPv6 dual-stack client loss\
    \ in Norway\",\n              2011, <http://www.fud.no/ipv6/>.\n   [CPNI-IPv6]\n\
    \              Gont, F., \"Security Assessment of the Internet Protocol\n    \
    \          version 6 (IPv6)\", UK Centre for the Protection of\n             \
    \ National Infrastructure, (available on request), .\n   [IPv6-Toolkit]\n    \
    \          SI6 Networks, \"SI6 Networks' IPv6 Toolkit\",\n              <http://www.si6networks.com/tools/ipv6toolkit>.\n\
    \   [THC-IPV6] The Hacker's Choice, \"THC-IPV6 - attacking the IPV6\n        \
    \      protocol suite\", December 2013,\n              <http://www.thc.org/thc-ipv6/>.\n\
    \   [Waters2011]\n              Waters, A., \"The SLAAC Attack - using IPv6 as\
    \ a weapon\n              against IPv4\", April 2011,\n              <http://wirewatcher.wordpress.com/2011/04/04/\n\
    \              the-slaac-attack-using-ipv6-as-a-weapon-against-ipv4/>.\n   [SixXS-stats]\n\
    \              SixXS, , \"SixXS - IPv6 Deployment & Tunnel Broker ::\n       \
    \       Statistics\", 2013, <http://www.sixxs.net/misc/usage/>.\n"
- title: Appendix A.  Summary of Filtering Rules
  contents:
  - "Appendix A.  Summary of Filtering Rules\n   +-------------+-----------------------------------------------------+\n\
    \   |  Technology |                   Filtering rules                   |\n  \
    \ +-------------+-----------------------------------------------------+\n   |\
    \ Native IPv6 |                   EtherType 0x86DD                  |\n   +-------------+-----------------------------------------------------+\n\
    \   |     6in4    |                     IP proto 41                     |\n  \
    \ +-------------+-----------------------------------------------------+\n   |\
    \    6over4   |                     IP proto 41                     |\n   +-------------+-----------------------------------------------------+\n\
    \   |     6rd     |                     IP proto 41                     |\n  \
    \ +-------------+-----------------------------------------------------+\n   |\
    \     6to4    |                     IP proto 41                     |\n   +-------------+-----------------------------------------------------+\n\
    \   |    ISATAP   |                     IP proto 41                     |\n  \
    \ +-------------+-----------------------------------------------------+\n   |\
    \    Teredo   |                  UDP Dest Port 3544                 |\n   +-------------+-----------------------------------------------------+\n\
    \   | TB with TSP |   (IP proto 41) || (UDP Dest Port 3653 || TCP Dest  |\n  \
    \ |             |                      Port 3653)                     |\n   +-------------+-----------------------------------------------------+\n\
    \   |    AYIYA    |       UDP Dest Port 5072 || TCP Dest Port 5072      |\n  \
    \ +-------------+-----------------------------------------------------+\n    \
    \                Table 1: Summary of filtering rules\n      NOTE: the table above\
    \ describes general and simple filtering rules\n      for blocking the corresponding\
    \ traffic.  More finer-grained rules\n      might be available in each of the\
    \ corresponding sections of this\n      document.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Fernando Gont\n   SI6 Networks / UTN-FRH\n   Evaristo\
    \ Carriego 2644\n   Haedo, Provincia de Buenos Aires  1706\n   Argentina\n   Phone:\
    \ +54 11 4650 8472\n   EMail: fgont@si6networks.com\n   URI:   http://www.si6networks.com\n\
    \   Will (Shucheng) Liu\n   Huawei Technologies\n   Bantian, Longgang District\n\
    \   Shenzhen  518129\n   P.R. China\n   EMail: liushucheng@huawei.com\n"
