- title: __initial_text__
  contents:
  - '   National and Local Characters for DNS Top Level Domain (TLD) Names

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: IESG Note
  contents:
  - "IESG Note\n   This RFC is not a candidate for any level of Internet Standard.\
    \  The\n   IETF disclaims any knowledge of the fitness of this RFC for any\n \
    \  purpose and notes that the decision to publish is not based on IETF\n   review\
    \ apart from IESG review for conflict with IETF work.  The RFC\n   Editor has\
    \ chosen to publish this document at its discretion.  See\n   RFC 3932 [RFC3932]\
    \ for more information.\n"
- title: Abstract
  contents:
  - "Abstract\n   In the context of work on internationalizing the Domain Name System\n\
    \   (DNS), there have been extensive discussions about \"multilingual\" or\n \
    \  \"internationalized\" top level domain names (TLDs), especially for\n   countries\
    \ whose predominant language is not written in a Roman-based\n   script.  This\
    \ document reviews some of the motivations for such\n   domains, several suggestions\
    \ that have been made to provide needed\n   functionality, and the constraints\
    \ that the DNS imposes.  It then\n   suggests an alternative, local translation,\
    \ that may solve a superset\n   of the problem while avoiding protocol changes,\
    \ serious deployment\n   delays, and other difficulties.  The suggestion utilizes\
    \ a\n   localization technique in applications to permit any TLD to be\n   accessed\
    \ using the vocabulary and characters of any language.  It is\n   not restricted\
    \ to language- or country-specific \"multilingual\" TLDs\n   in the language(s)\
    \ and script(s) of that country.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Terminology ................................................3\n  \
    \    1.2. Background on the \"Multilingual Name\" Problem ..............3\n  \
    \         1.2.1. Approaches to the Requirement .......................3\n    \
    \       1.2.2. Writing the Name of One's Country in its Own\n                \
    \  Characters ..........................................4\n           1.2.3. Countries\
    \ with Multiple Languages and\n                  Countries with Multiple .............................5\n\
    \           1.2.4. Availability of Non-ASCII Characters in Programs ....5\n  \
    \    1.3. Domain Name System Constraints .............................6\n    \
    \       1.3.1. Administrative Hierarchy ............................6\n      \
    \     1.3.2. Aliases .............................................6\n      1.4.\
    \ Internationalization and Localization ......................7\n   2. Client-Side\
    \ Solutions ...........................................7\n      2.1. IDNA and\
    \ the Client ........................................8\n      2.2. Local Translation\
    \ Tables for TLD Names .....................8\n   3. Advantages and Disadvantages\
    \ of Local Translation ...............9\n      3.1. Every TLD Appears in the Local\
    \ Language and Character Set ..9\n      3.2. Unification of Country Code Domains\
    \ .......................10\n      3.3. User Understanding of Local and Global\
    \ References .........11\n      3.4. Limits on Expansion of the Number of TLDs\
    \ .................11\n      3.5. Standardization of the Translations .......................12\n\
    \      3.6. Implications for Future New Domain Names ..................13\n  \
    \    3.7. Mapping for TLDs, Not Domain Names or Keywords ............13\n   4.\
    \ Information Interchange, IDNs, Comparisons, and Translations ...13\n   5. Internationalization\
    \ Considerations ............................15\n   6. Security Considerations\
    \ ........................................15\n   7. Acknowledgements ...............................................16\n\
    \   8. Informative References .........................................17\n"
- title: 1.  Introduction
  contents:
  - '1.  Introduction

    '
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   This document assumes the conventional terminology used\
    \ to discuss\n   the domain name system (DNS) and its hierarchical arrangements.\n\
    \   Terms such as \"top level domain\" (or just \"TLD\"), \"subdomain\",\n   \"\
    subtree\", and \"zone file\" are used without further explanation.  In\n   addition,\
    \ the term \"ccTLD\" is used to denote a \"country code top\n   level domain\"\
    \ and \"gTLD\" is used to denote a \"generic top level\n   domain\" as described\
    \ in [RFC1591] and in common usage.\n"
- title: 1.2.  Background on the "Multilingual Name" Problem
  contents:
  - "1.2.  Background on the \"Multilingual Name\" Problem\n   People who share a\
    \ language usually prefer to communicate in it,\n   using whatever characters\
    \ are normally used to write that language,\n   rather than in some \"foreign\"\
    \ one.  There have been standards for\n   using mutually-agreed characters and\
    \ languages in electronic mail\n   message bodies and selected headers since the\
    \ introduction of MIME in\n   1992 [MIME] and the Web has permitted multilingual\
    \ text since its\n   inception, also using MIME.  Actual use of non-Roman-character\n\
    \   content came even earlier, using private conventions.  However,\n   domain\
    \ names are exposed to users in email addresses and URLs.\n   Corresponding arrangements,\
    \ typically also exposing domain names, are\n   made for other application protocols.\
    \  The combination of exposed\n   domain names with internationalization requirements\
    \ led rapidly to\n   demands to permit domain names in applications that used\
    \ characters\n   other than those of the very restrictive, ASCII-subset, \"hostname\"\
    \n   (or \"letter-digit-hyphen\" (\"LDH\")) conventions recommended in the DNS\n\
    \   specifications [RFC1035].  The effort to do this soon became known as\n  \
    \ \"multilingual domain names\".  That was actually a misnomer, since the\n  \
    \ DNS deals only with characters and identifier strings, and not,\n   except by\
    \ accident or local registration conventions, with what\n   people usually think\
    \ of as \"names\".  There has also been little\n   interest in what would actually\
    \ be a \"multilingual name\", i.e., a\n   name that contains components from more\
    \ than one language.  Instead,\n   interest has focused on the use, in the context\
    \ of the DNS, of\n   strings that conform to specific individual languages.\n"
- title: 1.2.1.  Approaches to the Requirement
  contents:
  - "1.2.1.  Approaches to the Requirement\n   When the requirement was seen, not\
    \ as \"modifying the DNS\", but as\n   \"providing users with access to the DNS\
    \ from a variety of languages\n   and character sets\", three sets of proposals\
    \ emerged in the IETF and\n   elsewhere.  They were:\n   1.  Perform processing\
    \ in client software that recodes a user-visible\n       string into an ASCII-compatible\
    \ form that can safely be passed\n       through the DNS protocols and stored\
    \ in the DNS.  This is the\n       approach used, for example, in the IETF's \"\
    IDNA\" protocol\n       [RFC3490].\n   2.  Modify the DNS to be more hospitable\
    \ to non-ASCII names and\n       strings.  There have been a variety of proposals\
    \ to do this,\n       using several different techniques.  Some of these have\
    \ been\n       implemented on a proprietary basis by various vendors.  None of\n\
    \       them have gained acceptance in the IETF community, primarily\n       because\
    \ they would take a long time to deploy, would leave many\n       problems unsolved,\
    \ and have been shown to cause problems with\n       deployed approaches that\
    \ had not yet been upgraded.\n   3.  Move the problem out of the DNS entirely,\
    \ relying instead on a\n       \"directory\" or \"presentation\" layer to handle\n\
    \       internationalization.  The rationale for this approach is\n       discussed\
    \ in [RFC3467].\n   This document proposes a fourth approach, applicable to the\
    \ top level\n   domains (TLDs) only (see Section 1.3.1 for a discussion of the\n\
    \   special issues that make TLDs both problematic and a special\n   opportunity).\
    \  That approach involves having the user interface of\n   applications map non-ASCII\
    \ names for TLDs to existing TLDs and could\n   be used as an alternate or supplement\
    \ to the strategies summarized\n   above.\n"
- title: 1.2.2.  Writing the Name of One's Country in its Own Characters
  contents:
  - "1.2.2.  Writing the Name of One's Country in its Own Characters\n   An early\
    \ focus of the \"multilingual domain name\" efforts was\n   expressed in statements\
    \ such as \"users in my country, in which ASCII\n   is rarely used, should be\
    \ able to write an entire domain name in\n   their own character set\".  In particular,\
    \ since all top-level domain\n   names, at present, follow the LDH rules, the\
    \ modified naming rules\n   discussed in [RFC1123], and the coding conventions\
    \ specified in\n   [RFC1591], all fully-qualified DNS names were effectively required\
    \ to\n   contain at least one ASCII label (the TLD name).  Some advocates for\n\
    \   internationalized names have considered the presence of any ASCII\n   labels\
    \ inappropriate.  One should, instead, be able to write the name\n   of the ccTLD\
    \ for China in Chinese, the name of the ccTLD for Saudi\n   Arabia in Arabic,\
    \ the name for Spain in Spanish, and so on.\n   That much could be accomplished,\
    \ given updated applications, by using\n   a new TLD name with IDNA encoding.\
    \  Of course, adding such a TLD\n   would raise new questions: what to do about\
    \ gTLDs, how to handle\n   countries with several official languages (perhaps\
    \ even using\n   different scripts), how should name strings be chosen, and whether\n\
    \   there should be an attempt to coordinate the contents of the local-\n   language\
    \ TLD zone and the traditional ISO 3166-coded one.  A few of\n   these issues\
    \ are addressed below.  But, if one examines (or even\n   thinks about) user behavior\
    \ and preferences, it is almost as\n   important that one be able to write the\
    \ name of the ccTLD for China\n   in Arabic and that of Saudi Arabia in Chinese:\
    \ true\n   internationalization implies that, at least to the extent to which\n\
    \   ambiguity and conflicts can be avoided, people should be able to use\n   the\
    \ languages and character sets they prefer.  For the same reasons\n   that one\
    \ would like to have all-Chinese domain names available in\n   China, it is important\
    \ to have the capability to have an apparent\n   Chinese-language TLD for a domain\
    \ whose second level and beyond are\n   Chinese characters, even when the TLD\
    \ itself serves predominantly\n   non-Chinese-speaking registrants and users.\n"
- title: 1.2.3.  Countries with Multiple Languages and Countries with Multiple
  contents:
  - "1.2.3.  Countries with Multiple Languages and Countries with Multiple\n     \
    \   Names\n   From a user interface standpoint, writing ccTLD names in local\n\
    \   characters is a problem.  As discussed below in Section 1.3.2, the\n   DNS\
    \ itself does not easily permit a domain to be referred to by more\n   than one\
    \ name (or spelling or translation of a name).  Countries with\n   more than one\
    \ official language would require that the country name\n   be represented in\
    \ each of those languages.  And, just as it is\n   important that a user in China\
    \ be able to represent the name of the\n   Chinese ccTLD in Chinese characters,\
    \ she should be able to access a\n   Chinese-language site in France using Chinese\
    \ characters.  That would\n   require that she be able to write the name of the\
    \ French ccTLD in\n   Chinese characters rather than in a form based on a Roman\
    \ character\n   set.\n"
- title: 1.2.4.  Availability of Non-ASCII Characters in Programs
  contents:
  - "1.2.4.  Availability of Non-ASCII Characters in Programs\n   Over the years,\
    \ computer users have gotten used to the fact that not\n   every computer has\
    \ a full set of characters available to every\n   program.  An extreme example\
    \ is an Arabic speaker using a public\n   kiosk computer in an airport in the\
    \ United States: there is only a\n   small chance that the web browser there will\
    \ be able to input and\n   render Arabic correctly.  This has a direct effect\
    \ on the\n   multilingual TLD problem in that it is not possible to simply change\n\
    \   a name of the ccTLDs in the DNS to be one of a given country's non-\n   ASCII\
    \ names without possibly preventing people from entering those\n   names throughout\
    \ the world.\n"
- title: 1.3.  Domain Name System Constraints
  contents:
  - '1.3.  Domain Name System Constraints

    '
- title: 1.3.1.  Administrative Hierarchy
  contents:
  - "1.3.1.  Administrative Hierarchy\n   The domain name system is firmly rooted\
    \ in the idea of an\n   \"administrative hierarchy\", with the entity responsible\
    \ for a given\n   node of the hierarchy responsible for policies applicable to\
    \ its\n   subhierarchies (Cf. [RFC1034], [RFC1035], and [RFC1591]).  The model\n\
    \   works quite well for the domain and subdomains of a particular\n   enterprise.\
    \  In an enterprise situation, the hierarchy can be\n   organized to match the\
    \ organizational structure; there are\n   established ways to set policies; and\
    \ there are, at least presumably,\n   shared assumptions about overall goals and\
    \ objectives among all\n   registrants in the domain.  It is more problematic\
    \ when a domain is\n   shared by unrelated entities that lack common policy assumptions\n\
    \   because it is difficult to reach agreement on rules that should apply\n  \
    \ to all of the entities and subdomains of such a domain.  In general,\n   the\
    \ unrelated entities situation always prevails for the labels\n   registered in\
    \ a TLD (second-level names).  Exceptions occur in those\n   TLDs for which the\
    \ second level is structural (e.g., the .CO, .AC,\n   .GOV conventions in many\
    \ ccTLDs or in the historical geographical\n   organization of .US [RFC1480]).\
    \  In those cases, it exists for the\n   labels within that structural level.\n\
    \   TLDs may, but need not, have consistent registration policies for\n   those\
    \ second (or third) level names.  Countries (or ccTLD\n   administrators) have\
    \ often adopted rules about what entities may\n   register in their ccTLDs, and\
    \ what forms the names may take.  RFC\n   1591 outlined registration norms for\
    \ most of the then-extant gTLDs;\n   however, those norms have been largely ignored\
    \ in recent years.  Some\n   recent \"sponsored\" and purpose-specific domains\
    \ are based on quite\n   specific rules about appropriate registrations.  Homogeneous\n\
    \   registration rules for the root are, by contrast, impossible: almost\n   by\
    \ definition, the subdomains registered in the root (TLDs) are\n   diverse, and\
    \ no single policy about types and formats of names\n   applying to all root subdomains\
    \ is feasible.\n"
- title: 1.3.2.  Aliases
  contents:
  - "1.3.2.  Aliases\n   In an environment different from the DNS, a rational way\
    \ to permit\n   assigning local-language names to a country code (or other) domain\n\
    \   would be to set up an alias for the name, or to use some sort of \"see\n \
    \  instead\" reference.  But the DNS does not have facilities for either.\n  \
    \ Instead, it supports a \"CNAME\" record, whose label can refer only to\n   a\
    \ particular label and not to a subtree.  For example, if A.B.C is a\n   fully-qualified\
    \ name, then a CNAME reference in B.C from X to A would\n   make X.B.C appear\
    \ to have the same values as A.B.C. However, a CNAME\n   reference from Y to C\
    \ in the root would not make A.B.Y referenceable\n   (or even defined) at all.\
    \  A second record type, DNAME [RFC2672], can\n   provide an alias for a portion\
    \ of the tree.  But many believe that it\n   is problematic technically.  At a\
    \ minimum, it can cause\n   synchronization issues when references across zones\
    \ occur, and its\n   use has been discouraged within the IETF, except as a means\
    \ of\n   enabling a transition from one domain to another.  Even if the design\n\
    \   of yet another alias-type record type were contemplated, DNS\n   technical\
    \ constraints of query-response integrity and DNSSec zone\n   signing (cf. [RFC4033],\
    \ [RFC4034], and [RFC4035]) make it extremely\n   unlikely that one could be defined\
    \ that would meet the desired\n   requirements for \"see instead\" or true synonym\
    \ references.\n"
- title: 1.4.  Internationalization and Localization
  contents:
  - "1.4.  Internationalization and Localization\n   It has often been observed that,\
    \ while many people talk about\n   \"internationalization\", they often really\
    \ mean, and want,\n   \"localization\".  \"Internationalization\", in this context,\
    \ suggests\n   making something globally accessible while incorporating a broad-\n\
    \   range \"universal\" character set and conventions appropriate to all\n   languages\
    \ and cultures.  \"Localization\", by contrast, involves having\n   things work\
    \ well in a particular locality or for a broad range of\n   localities, although\
    \ aspects of the style of operation might differ\n   for each locality.  Anything\
    \ that actually involves the DNS must be\n   global, and hence internationalized,\
    \ since the DNS cannot\n   meaningfully support different responses or query and\
    \ matching models\n   based, e.g., on the location of the user making a query.\
    \  While the\n   DNS cannot support localization internally, many of the features\n\
    \   discussed earlier in this section are much more easily thought about\n   in\
    \ local terms -- whether localized to a geographical area, users of\n   a language,\
    \ or using some other criteria -- than in global ones.\n"
- title: 2.  Client-Side Solutions
  contents:
  - "2.  Client-Side Solutions\n   Traditionally, the IETF avoided becoming involved\
    \ in standardization\n   for actions that take place strictly on individual hosts\
    \ on the\n   network, instead confining itself to behavior that is observable\
    \ \"on\n   the wire\", i.e., in protocols between network hosts.  Exceptions to\n\
    \   this general principle have been made when different clients were\n   required\
    \ to utilize data or interpret values in compatible ways to\n   preserve interoperability:\
    \ the standards for email and web body\n   formats, and IDNA itself, are examples\
    \ of these exceptions.\n   Regardless of what is required to be standardized,\
    \ it is almost never\n   required, and often unwise, that a user interface present\
    \ \"on the\n   wire\" formats to the user, at least by default (debugging options\n\
    \   that show the wire formats are common and often quite useful).\n   However,\
    \ in most cases when the presentation format and the wire\n   format differ, the\
    \ client program must take precautions to ensure\n   that the wire format can\
    \ be reconstructed from user input, or to keep\n   the wire format, while hidden,\
    \ bound to the presentation mechanism so\n   that it can be reconstructed.  While\
    \ it is rarely a goal in itself,\n   it is often necessary that the user be at\
    \ least vaguely aware that\n   the wire (\"real\") format is different from the\
    \ presentation one and\n   that the wire format be available for debugging.\n\
    \   In fact, the DNS itself is an excellent example of the difference\n   between\
    \ the wire format and the user presentation format.  Most\n   Internet users do\
    \ not realize that the wire format for DNS queries\n   and responses does not\
    \ include the \".\" character.  Instead, each\n   label is represented by a length\
    \ in bytes of the label, followed by\n   the label itself.\n"
- title: 2.1.  IDNA and the Client
  contents:
  - "2.1.  IDNA and the Client\n   As mentioned above, IDNA itself is entirely a client-side\
    \ protocol.\n   It works by performing some mappings and then encoding labels\
    \ to be\n   placed into the DNS in a special format called \"punycode\" [RFC3492].\n\
    \   When labels in that format are encountered, they are transformed, by\n   the\
    \ client, back into internationalized (normally Unicode [ISO10646])\n   characters.\
    \  In the context of this document, the important\n   observation about IDNA is\
    \ that any application program that supports\n   it is already doing considerable\
    \ transformation work in the client;\n   it is not simply presenting the \"on\
    \ the wire\" formats to the user.\n   It is also the case that, if an application\
    \ implementation makes\n   different mappings than those called for by IDNA, it\
    \ is likely to be\n   detected only when, and if, users complain about unexpected\
    \ behavior.\n   As long as the punycode strings sent to it are valid, the server\n\
    \   cannot tell what mappings were applied to develop those strings.\n"
- title: 2.2.  Local Translation Tables for TLD Names
  contents:
  - "2.2.  Local Translation Tables for TLD Names\n   We suggest that, in addition\
    \ to maintaining the code and tables\n   required to support IDNA, authors of\
    \ application programs may want to\n   maintain a table that contains a list of\
    \ TLDs and locally-desirable\n   names for each one.  For ccTLDs, these might\
    \ be the names (or\n   locally-standard abbreviations) by which the relevant countries\
    \ are\n   known locally (whether in ASCII characters or others).  With some\n\
    \   care on the part of the application designer (e.g., to ensure that\n   local\
    \ forms do not conflict with the actual TLD names), a particular\n   TLD name\
    \ input from the user could be either in local or standard\n   form without special\
    \ tagging or problems.  When DNS names are\n   received by these client programs,\
    \ the TLD labels would be mapped to\n   local form before IDNA is applied to the\
    \ rest of the name; when names\n   are received from users, local TLD names would\
    \ be mapped to the\n   global ones before applying IDNA or being used in other\
    \ DNS\n   processing.\n"
- title: 3.  Advantages and Disadvantages of Local Translation
  contents:
  - '3.  Advantages and Disadvantages of Local Translation

    '
- title: 3.1.  Every TLD Appears in the Local Language and Character Set
  contents:
  - "3.1.  Every TLD Appears in the Local Language and Character Set\n   The notion\
    \ of a top-level domain whose name matches, e.g., the name\n   that is used for\
    \ a country in that country or the name of a language\n   in that language as,\
    \ as mentioned above, is immediately appealing.\n   But most of the reasons for\
    \ it argue equally strongly for other TLDs\n   being accessible from that language.\
    \  A user in Korea who can access\n   the national ccTLD in the Korean language\
    \ and character set has every\n   reason to expect that both generic top level\
    \ domains and domains\n   associated with other countries would be similarly accessible,\n\
    \   especially if the second-level domains bear Korean names.  A user\n   native\
    \ to Spain or Portugal, or in Latin America, would presumably\n   have similar\
    \ expectations, but would expect to use Spanish or\n   Portuguese names, not Korean\
    \ ones.\n   That level of local optimization is not realistic -- some would argue\n\
    \   not possible -- with the DNS since it would ultimately require that\n   every\
    \ top level domain be replicated for each of the world's\n   languages.  That\
    \ replication process would involve not just the top\n   level domain itself;\
    \ in principle, all of its subtrees would need to\n   be completely replicated\
    \ as well.  Perhaps in practice, not all\n   subtrees would require replication,\
    \ but only those for which a\n   language variation or translation was significant.\
    \  But, while that\n   restriction would change the scale of the problem, it would\
    \ not alter\n   its basic nature.  The administrative hierarchy characteristics\
    \ of\n   the DNS (see Section 1.3.1) turn the replication process into an\n  \
    \ administrative nightmare: every administrator of a second-level\n   domain in\
    \ the world would be forced to maintain dozens, probably\n   hundreds, of similar\
    \ zone files for the replicates of the domain.\n   Even if only the zones relevant\
    \ to a particular country or language\n   were replicated, the administrative\
    \ and tracking problems to bind\n   these to the appropriate top-level domain\
    \ and keep all of the\n   replicas synchronized would be extremely difficult at\
    \ best.  And many\n   administrators of third- and fourth-level domains, and beyond,\
    \ would\n   be faced with similar problems.\n   By contrast, dealing with the\
    \ names of TLDs as a localization\n   problem, using local translation, is fairly\
    \ simple, although it\n   places some burden of understanding on the user (see\
    \ Section 4).\n   Each function represented by a TLD -- a country, generic\n \
    \  registrations, or purpose-specific registrations -- could be\n   represented\
    \ in the local language and character set as needed.  And,\n   for countries with\
    \ many languages -- or users living, working in, or\n   visiting countries where\
    \ their language is not dominant -- \"local\"\n   could be defined in terms of\
    \ the needs or wishes of each particular\n   user.\n   An additional benefit is\
    \ that, if two countries called themselves by\n   the same name in their local\
    \ languages -- if, e.g., Western Slobbovia\n   and Eastern Slobbovia both called\
    \ themselves \"Slobland\" -- local\n   conventions could be followed as long as\
    \ users understood that only\n   internal forms (in this case, the ISO 3166-based\
    \ ccTLD name) could be\n   exported outside the country (see Section 3.3).\n \
    \  Note that this proposal is to allow mapping of native-language\n   strings\
    \ to existing TLDs.  It would almost certainly be ill-advised\n   to stretch this\
    \ idea too far and try to map strings that local users\n   would be unlikely to\
    \ guess into TLDs.  For example, there are\n   probably no languages in which\
    \ the country known in English as\n   \"Finland\" is called \"FI\".  Thus, one\
    \ would not want to create a\n   mapping from two characters that look or sound\
    \ like a Roman \"F\" and a\n   Roman \"I\" to the ccTLD \".fi\".\n"
- title: 3.2.  Unification of Country Code Domains
  contents:
  - "3.2.  Unification of Country Code Domains\n   It follows from some of the comments\
    \ above that, while there appears\n   to be some immediate appeal from having\
    \ (at least) two domains for\n   each country, one using the ISO 3166-1 code [ISO3166]\
    \ and another one\n   using a name based on the national name in the national\
    \ language,\n   such a situation would create considerable problems for registrants\n\
    \   in both domains.  For registrants maintaining enterprise or\n   organizational\
    \ subdomains, ease of administration of a single family\n   of zone files will\
    \ usually make a registration in a single top-level\n   domain preferable to replicated\
    \ sets of them, at least as long as\n   their functional requirements (such a\
    \ local-language access) are met\n   by the unified structure.  For those registrants\
    \ with no interest in\n   any Internet function or protocols other than use of\
    \ the HTTP/HTTPS-\n   based web, this problem can be dealt with at the applications\
    \ level\n   by the use of redirects but, in the general case, that is not a\n\
    \   feasible solution.\n   For countries with multiple national languages that\
    \ are considered\n   equal and legally equivalent, the advantages of a translation-based\n\
    \   approach, rather than multiple registrations and replicated trees,\n   would\
    \ be even more significant.  Actually installing and maintaining\n   a separate\
    \ TLD for each language would be an administrative\n   nightmare, especially if\
    \ it was intended that the associated zones be\n   kept synchronized.  The oft-suggested\
    \ proposal to adopt an \"exactly\n   one extra domain for each country\" rule\
    \ would essentially require\n   some of the multiple-official-language countries\
    \ to violate their own\n   constitutions.  Conversely, having multiple domains\
    \ for a given\n   country, based on the number of official languages and without\
    \ any\n   expectation of synchronization, would give some countries an\n   additional\
    \ allocation of TLDs that others would certainly consider\n   unfair.\n   Of course,\
    \ having replicated domains might be popular with some\n   registries and registrars,\
    \ since replication would almost inevitably\n   increase the total number of domains\
    \ to be registered.  Helping that\n   group of registries and registrars, while\
    \ hurting Internet users by\n   adding administrative overhead and confusion,\
    \ is not a goal of this\n   document.\n"
- title: 3.3.  User Understanding of Local and Global References
  contents:
  - "3.3.  User Understanding of Local and Global References\n   While the IDNA tables\
    \ (actually Nameprep [RFC3491] and Stringprep\n   [RFC3454]) must be identical\
    \ globally for IDNA to work reliably, the\n   tables for mapping between local\
    \ names and TLD names could be locally\n   determined, and differ from one locale\
    \ to another, as long as users\n   understood that international interchange of\
    \ names required using the\n   standard forms.  That understanding puts some additional\
    \ burden of\n   learning on users, although part of it could be assisted by software\n\
    \   (see Section 4).\n   In any event, at least in the foreseeable future, it\
    \ is likely that\n   DNS names being passed among users in different countries,\
    \ or using\n   different languages, will be forced to be in punycode form to\n\
    \   guarantee compatibility, since those users would not, in general,\n   have\
    \ the ability to read each other's scripts or have appropriate\n   input facilities\
    \ (keyboards, etc.) for then.  So the marginal\n   knowledge or effort needed\
    \ to put TLD names into standard form and\n   transmit them in that way would\
    \ actually be fairly small.\n"
- title: 3.4.  Limits on Expansion of the Number of TLDs
  contents:
  - "3.4.  Limits on Expansion of the Number of TLDs\n   The concept of using local\
    \ translation does have one side effect that\n   some portions of the Internet\
    \ community might consider undesirable.\n   The size and complexity of translation\
    \ tables, and maintaining those\n   tables, will be, to a considerable extent,\
    \ a function of the number\n   of top-level domains of interest, the frequency\
    \ with which new\n   domains are added, and the number of domains added at a time.\
    \  A\n   country or other locale that wished to maintain a complete set of\n \
    \  translations (i.e., so that every TLD had a representation in the\n   local\
    \ language) would presumably find setting up a table for the\n   current collection\
    \ of a few hundred domains to be a task that would\n   take some days.  If the\
    \ number of TLDs were relatively stable, with a\n   relatively small number being\
    \ added at infrequent intervals, the\n   updates could probably be dealt with\
    \ on an ad hoc basis.  But, if\n   large numbers of domains were added frequently,\
    \ or if the total\n   number of TLDs became very large, maintaining the table\
    \ might require\n   dedicated staff if each new TLD is to be accommodated.  Worse,\n\
    \   updating the tables stored on client machines might require update\n   and\
    \ synchronization protocols and all of the complexities that tend\n   to go with\
    \ them (see [RFC3696] for a discussion of some related\n   issues in applications).\n\
    \   In practice, there will be little requirement to translate every TLD\n   into\
    \ a local language.  There are already existing TLDs for which\n   there is no\
    \ obvious translations in many languages (most notably,\n   \".arpa\") or where\
    \ the translation will be far from obvious to typical\n   users (for example,\
    \ \".int\" and \".aero\").  Of course, these could be\n   translated by function:\
    \ \".arpa\" to the local term for\n   \"infrastructure\", \".int\" with \"international\"\
    \ or \"international\n   organization\", \".aero\" with \"aeronautical\" or \"\
    airlines\", and so on;\n   but it is not clear whether doing so would have significant\
    \ value.\n   For almost every language, there are dozens of ccTLDs for which there\n\
    \   are no translations of the country names into the local language that\n  \
    \ would be known by anyone other than geographers.  If new TLDs are\n   added,\
    \ there might not be a strong need (or even capability) to have\n   language-specific\
    \ equivalents for each.\n"
- title: 3.5.  Standardization of the Translations
  contents:
  - "3.5.  Standardization of the Translations\n   An immediate question when proposals\
    \ such as this one are considered\n   is whether the names for the various TLDs\
    \ that do not match the\n   strings that are actually in the DNS should be standardized\
    \ and, if\n   so, by what mechanism.  Standardization would promote communication\n\
    \   within a country or among people sharing a language.  However, it is\n   likely\
    \ to be very difficult to reach appropriate international\n   agreements to which\
    \ wide conformance could be expected.  Exceptions\n   might arise within particular\
    \ countries or language groups but, even\n   then, there might be advantages to\
    \ users being able to specify\n   additional synonymous names that are easy for\
    \ them to remember.  As\n   with IDNA-based IDNs, users who wish to transmit information\
    \ about\n   domain names to people whose exact capabilities and software are\n\
    \   unknown, and to do so with minimal risk of confusion, will probably\n   confine\
    \ themselves to the names that actually appear in the DNS,\n   i.e., the \"punycode\"\
    \ representations.\n   In any event, neither standardization nor uniform use of\
    \ either the\n   system outlined here or of a specific collection of names is\
    \ required\n   to make the system work for those who would find it useful.\n \
    \  Similarly, mechanisms for country-wide coordination, and examination\n   of\
    \ the appropriateness or inappropriateness of such mechanisms, is\n   beyond the\
    \ scope of this document.\n"
- title: 3.6.  Implications for Future New Domain Names
  contents:
  - "3.6.  Implications for Future New Domain Names\n   Applications that implement\
    \ the proposal in this document are likely\n   to make the subsequent creation\
    \ and acceptance of new IDNA-based TLDs\n   significantly more difficult.  If\
    \ this proposal becomes widely\n   adopted, local language names mapped as it\
    \ suggests will be generally\n   expected by users of those languages to mean\
    \ the same as a current\n   TLD.  Creating a new, stand-alone IDNA-based TLD will\
    \ then require\n   more deliberation and care to avoid conflicts and, when executed,\n\
    \   will require all the application software that maps the name to the\n   existing\
    \ TLD to change the mapping tables.\n   For several reasons, this problem may\
    \ not be as serious in practice\n   as it might first appear.  For ccTLDs allocated\
    \ according to the ISO\n   3166-1 list, there will presumably be no problem at\
    \ all: not only are\n   the 3166-1 alpha-2 codes strictly in ASCII, but general\
    \ trends, such\n   as those embodied in ICANN's \"GAC Recommendations\" against\
    \ using\n   country names or codes for any purpose not associated with those\n\
    \   specific countries, make conflicts with internationalized names\n   extremely\
    \ unlikely.  Because the DNS does not currently have a usable\n   aliasing function\
    \ (see Section 1.3.2), it is likely that new IDNA-\n   based TLDs will be allocated\
    \ only after there is considerable\n   opportunity for countries and other individual\
    \ entities to identify\n   any problems they see with proposed new names.\n"
- title: 3.7.  Mapping for TLDs, Not Domain Names or Keywords
  contents:
  - "3.7.  Mapping for TLDs, Not Domain Names or Keywords\n   It should be clear to\
    \ anyone who has read this far that the mapping\n   described in this document\
    \ is limited to TLDs, not full domain names\n   or keywords.  In particular, nothing\
    \ here should be construed as\n   applying to anything other than TLDs, due at\
    \ least in part to the\n   limitations described in Section 3.1.  Further, this\
    \ document is only\n   about the domain name system (DNS), not about any keyword\
    \ system.\n   The interactions between particular keyword systems and the proposals\n\
    \   here are left as a (possibly very difficult) exercise for the reader\n   or\
    \ implementer of such systems.  However, for the subset of such\n   systems whose\
    \ intent is to entirely hide DNS names or URIs from the\n   user, their output\
    \ would presumably be the LDH names that actually\n   appeared in the DNS, i.e.,\
    \ in punycode form for IDNA names and\n   without any application processing of\
    \ the type contemplated here.\n"
- title: 4.  Information Interchange, IDNs, Comparisons, and Translations
  contents:
  - "4.  Information Interchange, IDNs, Comparisons, and Translations\n   This specification\
    \ is based on a pair of fairly explicit assumptions.\n   The first is that the\
    \ greatest and most important impact and value of\n   any internationalization\
    \ or localization technique is to permit users\n   who share a language or culture\
    \ to communicate with others who also\n   share that language or culture.  Communication\
    \ among users from\n   different cultures, using different languages or different\
    \ scripts is\n   inherently more difficult, and still more difficult if they cannot\n\
    \   easily identify languages and scripts in common.  The reason for\n   those\
    \ difficulties are age-old issues in language translation and\n   differences\
    \ among languages and scripts, not problems associated with\n   the DNS or IDNs,\
    \ however they are represented.  That is the second\n   assumption: when communication\
    \ across language or cultural groups is\n   required, the users who need to do\
    \ it -- typically a much smaller\n   number than those communicating within the\
    \ same language and culture\n   -- are going to need to rely on commonly-understood\
    \ languages and\n   scripts and will need to exert somewhat more care and effort\
    \ than\n   within their own groups.\n   As outlined in the sections above, the\
    \ suggestions made in this\n   document could clearly be turned into major problems\
    \ by misuse or\n   misunderstanding.  For example, if two applications on the\
    \ same host\n   used different translation tables, a situation could easily result\n\
    \   that would be very confusing to the user.  However, in some cases,\n   this\
    \ would be only slightly worse than some of the alternatives.  For\n   example,\
    \ if, on a given system, IDNs are expressed in native script,\n   but ASCII TLD\
    \ names are used, cutting and pasting from one\n   application to another may\
    \ not work as expected, unless both\n   applications and the underlying operating\
    \ system are all Unicode-\n   based and use the same encoding model for Unicode.\
    \  Some applications\n   writers have already discovered, even without significant\
    \ use of\n   IDNs, that they need to support separate \"copy string\" and \"copy\
    \ link\n   location\", and the corresponding \"paste\" operations.  Any use of\
    \ IDNs\n   or Internationalized Resource Identifiers (IRIs, see [RFC3987]) may\n\
    \   require similar operations, or extensions to those operations, to\n   force\
    \ strings into internal (\"punycode\" or URI) form on the copy\n   operation and\
    \ to translate them back on paste.  Were that done, the\n   appropriate translations\
    \ could be performed as part of the same\n   process.  If this author's hypothesis\
    \ is correct -- that these\n   operations are likely to be required on many systems\
    \ whether this\n   proposal is adopted or not -- then the additional translation\n\
    \   operations are likely to be invisible to the user.\n   In particular, precisely\
    \ because the translated names proposed here\n   are part of a presentation form,\
    \ rather than the internal form names,\n   they are inappropriate in a number\
    \ of circumstances in which a\n   globally-unique, internal-form name is actually\
    \ required.  It would\n   be a poor, indeed dangerous, idea to use these names\
    \ in security\n   contexts such as names in certificates, access lists, or other\n\
    \   contexts in which accurate comparisons are necessary.\n   A more general issue\
    \ exists when DNS or IRI references are\n   transferred among users whose systems\
    \ may be localized for different\n   languages or conventions.  In general, a\
    \ user in one part of the\n   world will not actually know how another user's\
    \ systems are set up,\n   precisely what software is being used, etc., nor should\
    \ users be\n   expected or forced to learn that information.  But, if the user\n\
    \   transmitting an internationalized reference doesn't know that the\n   receiving\
    \ system supports the same characters and fonts, and that the\n   receiving user\
    \ is prepared to deal with them, the prudent user will\n   transmit the internal\
    \ form of the reference in addition to, or even\n   instead of, the native-character\
    \ form.  And, of course, if the\n   reference is transmitted on paper, on a sign,\
    \ in some coded character\n   set other than Unicode, or even as an image, rather\
    \ than as a Unicode\n   string, the importance of supplementing it with the internal\
    \ form\n   becomes even more important.  The addition of a translation\n   requirement\
    \ for TLD labels makes availability of internal forms in\n   interchange significantly\
    \ more important, but does not actually\n   change the requirement to do so.\n\
    \   It may be helpful to note that, in a different networking model than\n   that\
    \ used in the Internet, both this proposal and IDNA itself are\n   essentially\
    \ \"presentation layer\" approaches rather than constructions\n   that can be\
    \ expected to work well in interchange.\n"
- title: 5.  Internationalization Considerations
  contents:
  - "5.  Internationalization Considerations\n   This entire specification addresses\
    \ issues in internationalization\n   and especially the boundaries between internationalization\
    \ and\n   localization and between network protocols and client/user interface\n\
    \   actions.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   IDNA provides a client-based mechanism for presenting\
    \ Unicode names\n   in applications while passing only ASCII-based names on the\
    \ wire.  As\n   such, it constitutes a major step along the path of introducing\
    \ a\n   client-based presentation layer into the Internet.  Client-based\n   presentation\
    \ layer transformations introduce risks from non-\n   conforming tables that can\
    \ change meaning without external\n   protection.  For example, if a mapping table\
    \ normally maps A onto C,\n   and that table is altered by an attacker so that\
    \ A maps onto D\n   instead, much mischief can be committed.  On the other hand,\
    \ these\n   are not the usual sort of network attacks: they may be thought of\
    \ as\n   falling into the \"users can always cause harm to themselves\"\n   category.\
    \  The local translation model outlined here does not\n   significantly increase\
    \ the risks over those associated with IDNA, but\n   may provide some new avenues\
    \ for exploiting them.\n   Both this approach and IDNA rely on having updated\
    \ programs present\n   information to the user in a very different form than the\
    \ one in\n   which it is transmitted on the wire.  Unless the internal (wire)\
    \ form\n   is always used in interchange, or at least made available when DNS\n\
    \   names are exchanged, there are possibilities for ambiguity and\n   confusion\
    \ about references.  As with IDNA itself, if only the \"wire\"\n   form is presented,\
    \ the user will perceive that nothing of value has\n   been done, i.e., that no\
    \ internationalization or localization has\n   occurred.  So presentation of the\
    \ \"wire\" form to eliminate the\n   potential ambiguities is unlikely to be considered\
    \ an acceptable\n   solution, regardless of its security advantages.\n   If the\
    \ translation tables associated with the technique suggested\n   here are obtained\
    \ from a server, or translations are obtained from a\n   remote machine using\
    \ some protocol, the mechanisms used should ensure\n   that the values received\
    \ are authentic, i.e., that neither they, nor\n   the query for them, have been\
    \ intercepted and tampered with in any\n   way.\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   This document was inspired by a number of conversations\
    \ in ICANN,\n   IETF, MINC, and private contexts about the future evolution and\n\
    \   internationalization of top level domains.  Unknown to the author,\n   but\
    \ unsurprisingly (the general concept should be obvious to anyone\n   even slightly\
    \ skilled in the relevant technologies), the concept has\n   been apparently developed\
    \ independently in other groups but, as far\n   as this author knows, not written\
    \ up for general comment.\n   Discussions within, and about, the ICANN IDN Committee\
    \ were\n   particularly helpful, although several of the participants in that\n\
    \   committee may be surprised about where those discussions led.  Email\n   correspondence\
    \ with several people after the first version of this\n   document was posted,\
    \ notably Richard Hill, Paul Hoffman, Lee\n   XiaoDong, and Soobok Lee, led to\
    \ considerable clarification in the\n   subsequent versions.  The author is particularly\
    \ grateful to Paul\n   Hoffman for extensive comments and additional text for\
    \ the third\n   version and to Patrik Faltstrom, Joel Halpern, Sam Hartman, and\
    \ Russ\n   Housley for suggestions incorporated into the final one.\n   The first\
    \ version of this document was posted on October 21, 2002.\n"
- title: 8.  Informative References
  contents:
  - "8.  Informative References\n   [ISO10646] International Organization for Standardization,\n\
    \              \"Information Technology - Universal Multiple-octet coded\n   \
    \           Character Set (UCS) - Part 1: Architecture and Basic\n           \
    \   Multilingual Plane\", ISO Standard 10646-1, May 1993.\n   [ISO3166]  International\
    \ Organization for Standardization, \"Codes for\n              the representation\
    \ of names of countries and their\n              subdivisions -- Part 1: Country\
    \ codes\", ISO Standard\n              3166-1:1977, 1997.\n   [MIME]     Borenstein,\
    \ N. and N. Freed, \"MIME (Multipurpose Internet\n              Mail Extensions):\
    \ Mechanisms for Specifying and Describing\n              the Format of Internet\
    \ Message Bodies\", RFC 1341, June\n              1992.\n              Updated\
    \ and replaced by Freed, N. and N. Borenstein,\n              \"Multipurpose Internet\
    \ Mail Extensions (MIME) Part One:\n              Format of Internet Message Bodies\"\
    , RFC2045, November\n              1996.  Also, Moore, K., \"Representation of\
    \ Non-ASCII Text\n              in Internet Message Headers\", RFC 1342, June\
    \ 1992.\n              Updated and replaced by Moore, K., \"MIME (Multipurpose\n\
    \              Internet Mail Extensions) Part Three: Message Header\n        \
    \      Extensions for Non-ASCII Text\", RFC 2047, November 1996.\n   [RFC1034]\
    \  Mockapetris, P., \"Domain names - concepts and facilities\",\n            \
    \  STD 13, RFC 1034, November 1987.\n   [RFC1035]  Mockapetris, P., \"Domain names\
    \ - implementation and\n              specification\", STD 13, RFC 1035, November\
    \ 1987.\n   [RFC1123]  Braden, R., \"Requirements for Internet Hosts - Application\n\
    \              and Support\", STD 3, RFC 1123, October 1989.\n   [RFC1480]  Cooper,\
    \ A. and J. Postel, \"The US Domain\", RFC 1480, June\n              1993.\n \
    \  [RFC1591]  Postel, J., \"Domain Name System Structure and Delegation\",\n \
    \             RFC 1591, March 1994.\n   [RFC2672]  Crawford, M., \"Non-Terminal\
    \ DNS Name Redirection\", RFC\n              2672, August 1999.\n   [RFC3454]\
    \  Hoffman, P. and M. Blanchet, \"Preparation of\n              Internationalized\
    \ Strings (\"stringprep\")\", RFC 3454,\n              December 2002.\n   [RFC3467]\
    \  Klensin, J., \"Role of the Domain Name System (DNS)\", RFC\n              3467,\
    \ February 2003.\n   [RFC3490]  Faltstrom, P., Hoffman, P., and A. Costello,\n\
    \              \"Internationalizing Domain Names in Applications (IDNA)\",\n \
    \             RFC 3490, March 2003.\n   [RFC3491]  Hoffman, P. and M. Blanchet,\
    \ \"Nameprep: A Stringprep\n              Profile for Internationalized Domain\
    \ Names (IDN)\", RFC\n              3491, March 2003.\n   [RFC3492]  Costello,\
    \ A., \"Punycode: A Bootstring encoding of Unicode\n              for Internationalized\
    \ Domain Names in Applications\n              (IDNA)\", RFC 3492, March 2003.\n\
    \   [RFC3696]  Klensin, J., \"Application Techniques for Checking and\n      \
    \        Transformation of Names\", RFC 3696, February 2004.\n   [RFC3932]  Alvestrand,\
    \ H., \"The IESG and RFC Editor Documents:\n              Procedures\", BCP 92,\
    \ RFC 3932, October 2004.\n   [RFC3987]  Duerst, M. and M. Suignard, \"Internationalized\
    \ Resource\n              Identifiers (IRIs)\", RFC 3987, January 2005.\n   [RFC4033]\
    \  Arends, R., Austein, R., Larson, M., Massey, D., and S.\n              Rose,\
    \ \"DNS  Security Introduction and Requirements\", RFC\n              4033, March\
    \ 2005.\n   [RFC4034]  Arends, R., Austein, R., Larson, M., Massey, D., and S.\n\
    \              Rose, \"Resource  Records for the DNS Security Extensions\",\n\
    \              RFC 4034, March 2005.\n   [RFC4035]  Arends, R., Austein, R., Larson,\
    \ M., Massey, D., and S.\n              Rose, \"Protocol  Modifications for the\
    \ DNS Security\n              Extensions\", RFC 4035, March 2005.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   John C Klensin\n   1770 Massachusetts Ave, #322\n   Cambridge,\
    \ MA  02140\n   USA\n   Phone: +1 617 491 5735\n   EMail: john-ietf@jck.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
