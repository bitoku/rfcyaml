- title: __initial_text__
  contents:
  - '            General Architectural and Policy Considerations

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2002).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document suggests general architectural and policy questions\n\
    \   that the IETF community has to address when working on new standards\n   and\
    \ protocols.  We note that this document contains questions to be\n   addressed,\
    \ as opposed to guidelines or architectural principles to be\n   followed.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document suggests general architectural and policy\
    \ questions to\n   be addressed in our work in the IETF.  This document contains\n\
    \   questions to be addressed, as opposed to guidelines or architectural\n   principles\
    \ to be followed.  These questions are somewhat similar to\n   the \"Security\
    \ Considerations\" currently required in IETF documents\n   [RFC2316].\n   This\
    \ document is motivated in part by concerns about a growing lack\n   of coherence\
    \ in the overall Internet architecture.  We have moved\n   from a world of a single,\
    \ coherent architecture designed by a small\n   group of people, to a world of\
    \ complex, intricate architecture to\n   address a wide-spread and heterogeneous\
    \ environment.  Because\n   individual pieces of the architecture are often designed\
    \ by\n   sub-communities, with each sub-community having its own set of\n   interests,\
    \ it is necessary to pay increasing attention to how each\n   piece fits into\
    \ the larger picture, and to consider how each piece is\n   chosen.  For example,\
    \ it is unavoidable that each of us is inclined\n   to solve a problem at the\
    \ layer of the protocol stack and using the\n   tools that we understand the best;\
    \  that does not necessarily mean\n   that this is the most appropriate layer\
    \ or set of tools for solving\n   this problem in the long-term.\n   Our assumption\
    \ is that this document will be used as suggestions (but\n   not a checklist!)\
    \ of issues to be addressed by IETF members in\n   chartering new working groups,\
    \ in working in working groups, and in\n   evaluating the output from other working\
    \ groups.  This document is\n   not a primer on how to design protocols and architectures,\
    \ and does\n   not provide answers to anything.\n"
- title: 2.  Relationship to "Architectural Principles of the Internet"
  contents:
  - "2.  Relationship to \"Architectural Principles of the Internet\"\n   RFC 1958\
    \ [RFC1958] outlines some architectural principles of the\n   Internet, as \"\
    guidelines that have been found useful in the past, and\n   that may be useful\
    \ to those designing new protocols or evaluating\n   such designs.\" An example\
    \ guideline is that \"it is also generally\n   felt that end-to-end functions\
    \ can best be realized by end-to-end\n   protocols.\" Similarly, an example design\
    \ issue from [RFC1958] is that\n   \"heterogeneity is inevitable and must be supported\
    \ by design.\"\n   In contrast, this document serves a slightly different purpose,\
    \ by\n   suggesting additional architectural questions to be addressed.  Thus,\n\
    \   one question suggested in this document is the following: \"Is this\n   proposal\
    \ the best long-term solution to the problem?  If not, what\n   are the long-term\
    \ costs of this solution, in terms of restrictions on\n   future development,\
    \ if any?\" This question could be translated to a\n   roughly equivalent architectural\
    \ guideline, as follows: \"Identify\n   whether the proposed protocol is a long-term\
    \ solution or a short-term\n   solution, and identify the long-term costs and\
    \ the exit strategy for\n   any short-term solutions.\"\n   In contrast, other\
    \ questions are more open-ended, such as the\n   question about robustness: \"\
    How robust is the protocol, not just to\n   the failure of nodes, but also to\
    \ compromised or malfunctioning\n   components, imperfect or defective implementations,\
    \ etc?\" As a\n   community, we are still learning about the degree of robustness\
    \ that\n   we are able to build into our protocols, as well as the tools that\n\
    \   are available to ensure this robustness.  Thus, there are not yet\n   clear\
    \ architectural guidelines along the lines of \"Ensure that your\n   protocol\
    \ is robust against X, Y, and Z.\"\n"
- title: 3.  Questions
  contents:
  - "3.  Questions\n   In this section we list some questions to ask in designing\
    \ protocols.\n   Each question is discussed more depth in the rest of this paper.\
    \  We\n   aren't suggesting that all protocol design efforts should be required\n\
    \   to explicitly answer all of these questions; some questions will be\n   more\
    \ relevant to one document than to another.  We also aren't\n   suggesting that\
    \ this is a complete list of architectural concerns.\n   DESIGN QUESTIONS:\n \
    \  Justifying the Solution:\n   * Why are you proposing this solution, instead\
    \ of proposing something\n   else, or instead of using existing protocols and\
    \ procedures?\n   Interactions between Layers:\n   * Why are you proposing a solution\
    \ at this layer of the protocol\n   stack, rather than at another layer?  Are\
    \ there solutions at other\n   layers of the protocol stack as well?\n   * Is\
    \ this an appropriate layer in terms of correctness of function,\n   data integrity,\
    \ performance, ease of deployment, the diagnosability\n   of failures, and other\
    \ concerns?\n   * What are the interactions between layers, if any?\n   Long-term\
    \ vs. Short-term Solutions:\n   * Is this proposal the best long-term solution\
    \ to the problem?\n   * If not, what are the long-term costs of this solution,\
    \ in terms of\n   restrictions on future development, if any?  What are the\n\
    \   requirements for the development of longer-term solutions?\n   The Whole Picture\
    \ vs. Building Blocks:\n   * Have you considered the larger context, while appropriately\n\
    \   restricting your own design efforts to one part of the whole?\n   * Are there\
    \ parts of the overall solution that will have to be\n   provided by other IETF\
    \ Working Groups or by other standards bodies?\n   EVALUATION QUESTIONS:\n   Weighing\
    \ Benefits against Costs:\n   * How do the architectural benefits of a proposed\
    \ new protocol\n   compare against the architectural costs, if any?  Have the\n\
    \   architectural costs been carefully considered?\n   Robustness:\n   * How robust\
    \ is the protocol, not just to the failure of nodes, but\n   also to compromised\
    \ or malfunctioning components, imperfect or\n   defective implementations, etc?\n\
    \   * Does the protocol take into account the realistic conditions of the\n  \
    \ current or future Internet (e.g., packet drops and packet corruption;\n   packet\
    \ reordering; asymmetric routing; etc.)?\n   Tragedy of the Commons:\n   * Is\
    \ performance still robust if everyone is using this protocol?\n   Are there other\
    \ potential impacts of widespread deployment that need\n   to be considered?\n\
    \   Protecting Competing Interests:\n   * Does the protocol protect the interests\
    \ of competing parties (e.g.,\n   not only end-users, but also ISPs, router vendors,\
    \ software vendors,\n   or other parties)?\n   Designing for Choice vs. Avoiding\
    \ Unnecessary Complexity:\n   * Is the protocol designed for choice, to allow\
    \ different players to\n   express their preferences where appropriate?  At the\
    \ other extreme,\n   does the protocol provide so many choices that it threatens\n\
    \   interoperability or introduces other significant problems?\n   Preserving\
    \ Evolvability?\n   * Does the protocol protect the interests of the future, by\n\
    \   preserving the evolvability of the Internet?  Does the protocol\n   enable\
    \ future developments?\n   * If an old protocol is overloaded with new functionality,\
    \ or reused\n   for new purposes, have the possible complexities introduced been\n\
    \   taken carefully into account?\n   * For a protocol that introduces new complexity\
    \ to the Internet\n   architecture, how does the protocol add robustness and preserve\n\
    \   evolvability, and how does it also introduce new fragilities to the\n   system?\n\
    \   Internationalization:\n   * Where protocols require elements in text format,\
    \ have the possibly\n   conflicting requirements of global comprehensibility and\
    \ the ability\n   to represent local text content been properly weighed against\
    \ each\n   other?\n   DEPLOYMENT QUESTIONS:\n   * Is the protocol deployable?\n\
    \   Each of these questions is discussed in more depth in the rest of\n   this\
    \ paper.\n"
- title: 4.  Justifying the Solution
  contents:
  - "4.  Justifying the Solution\n   Question: Why are you proposing this solution,\
    \ instead of proposing\n   something else, or instead of using existing protocols\
    \ and\n   procedures?\n"
- title: '4.1.  Case study: Integrated and Differentiated Services'
  contents:
  - "4.1.  Case study: Integrated and Differentiated Services\n   A good part of the\
    \ work of developing integrated and differentiated\n   services has been to understand\
    \ the problem to be solved, and to come\n   to agreement on the architectural\
    \ framework of the solution, and on\n   the nature of specific services.  Thus,\
    \ when integrated services were\n   being developed, the specification of the\
    \ Controlled Load [RFC2211]\n   and Guaranteed [RFC2212] services each required\
    \ justification of the\n   need for that particular service, of low loss and bounded\
    \ delay\n   respectively.\n   Later, when RFC 2475 on \"An Architecture for Differentiated\
    \ Services\"\n   proposed a scalable, service differentiation architecture that\n\
    \   differs from the previously-defined architecture for integrated\n   services,\
    \ the document also had to clearly justify the requirements\n   for this new architecture,\
    \ and compare the proposed architecture to\n   other possible approaches [RFC2475].\
    \  Similarly, when the Assured\n   Forwarding [RFC2597] and Expedited Forwarding\
    \ [RFC3246] Per-Hop\n   Behaviors of differentiated services were proposed, each\
    \ service\n   required a justification of the need for that service in the\n \
    \  Internet.\n"
- title: 5. Interactions between Layers
  contents:
  - "5. Interactions between Layers\n   Questions: Why are you proposing a solution\
    \ at this layer of the\n   protocol stack, rather than at another layer?  Are\
    \ there solutions at\n   other layers of the protocol stack as well?\n   Is this\
    \ an appropriate layer in terms of correctness of function,\n   data integrity,\
    \ performance, ease of deployment, the diagnosability\n   of failures, and other\
    \ concerns?\n   What are the interactions between layers, if any?\n"
- title: '5.1.  Discussion: The End-to-End Argument'
  contents:
  - "5.1.  Discussion: The End-to-End Argument\n   The classic 1984 paper on \"End-To-End\
    \ Arguments In System Design\"\n   [SRC84] begins a discussion of where to place\
    \ functions among modules\n   by suggesting that \"functions placed at low levels\
    \ of a system may be\n   redundant or of little value when compared with the cost\
    \ of providing\n   them at that low level.  Examples discussed in the paper include\
    \ bit\n   error recovery, security using encryption, duplicate message\n   suppression,\
    \ recovery from system crashes, and delivery\n   acknowledgement.  Low level mechanisms\
    \ to support these functions are\n   justified only as performance enhancements.\"\
    \  The end-to-end\n   principle is one of the key architectural guidelines to\
    \ consider in\n   choosing the appropriate layer for a function.\n"
- title: '5.2.  Case study: Endpoint Congestion Management'
  contents:
  - "5.2.  Case study: Endpoint Congestion Management\n   The goal of the Congestion\
    \ Manager in Endpoint Congestion Management\n   is to allow multiple concurrent\
    \ flows with the same source and\n   destination address to share congestion control\
    \ state [RFC3124].\n   There has been a history of proposals for multiplexing\
    \ flows at\n   different levels of the protocol stack; proposals have included\n\
    \   adding multiplexing at the HTTP (WebMux) and TCP (TCP Control Blocks)\n  \
    \ layers, as well as below TCP (the Congestion Manager) [Multiplexing].\n   However,\
    \ the 1989 article on \"Layered Multiplexing Considered\n   Harmful\" suggests\
    \ that \"the extensive duplication of multiplexing\n   functionality across the\
    \ middle and upper layers is harmful and\n   should be avoided\" [T89].  Thus,\
    \ one of the key issues in providing\n   mechanisms for multiplexing flows is\
    \ to determine which layer or\n   layers of the protocol stack are most appropriate\
    \ for providing this\n   functionality.  The natural tendency of each researcher\
    \ is generally\n   to add functionality at the layer that they know the best;\
    \ this does\n   not necessarily result in the most appropriate overall architecture.\n"
- title: '5.3.  Case study: Layering Applications on Top of HTTP'
  contents:
  - "5.3.  Case study: Layering Applications on Top of HTTP\n   There has been considerable\
    \ interest in layering applications on top\n   of HTTP [RFC3205].  Reasons cited\
    \ include compatibility with widely-\n   deployed browsers, the ability to reuse\
    \ client and server libraries,\n   the ability to use existing security mechanisms,\
    \ and the ability to\n   traverse firewalls.  As RFC 3205 discusses, \"the recent\
    \ interest in\n   layering new protocols over HTTP has raised a number of questions\n\
    \   when such use is appropriate, and the proper way to use HTTP in\n   contexts\
    \ where it is appropriate.\" Thus, RFC 3205 addresses not only\n   the benefits\
    \ of layering applications on top of HTTP, but also\n   evaluates the additional\
    \ complexity and overhead of layering an\n   application on top of HTTP, compared\
    \ to the costs of introducing a\n   special-purpose protocol.\n   The web page\
    \ on \"References on Layering and the Internet\n   Architecture\" has pointers\
    \ to additional papers discussing general\n   layering issues in the Internet\
    \ architecture [Layering].\n"
- title: 6.  Long-term vs. Short-term Solutions
  contents:
  - "6.  Long-term vs. Short-term Solutions\n   Questions: Is this proposal the best\
    \ long-term solution to the\n   problem?\n   If not, what are the long-term costs\
    \ of this solution, in terms of\n   restrictions on future development, if any?\
    \  What are the\n   requirements for the development of longer-term solutions?\n"
- title: '6.1.  Case study: Traversing NATs'
  contents:
  - "6.1.  Case study: Traversing NATs\n   In order to address problems with NAT middleboxes\
    \ altering the\n   external address of endpoints, various proposals have been\
    \ made for\n   mechanisms where an originating process attempts to determine the\n\
    \   address (and port) by which it is known on the other side of a NAT.\n   This\
    \ would allow an originating process to be able to use address\n   data in the\
    \ protocol exchange, or to advertise an external address\n   from which it will\
    \ receive connections.\n   The IAB in [RFC3424] has outlined reasons why these\
    \ proposals can be\n   considered, at best, short-term fixes to specific problems,\
    \ and the\n   specific issues to be carefully evaluated before standardizing such\n\
    \   proposals.  These issues include the identification of the\n   limited-scope\
    \ problem to be fixed, the description of an exit\n   strategy for the short-term\
    \ solution, and the description of the\n   longer-term problems left unsolved\
    \ by the short-term solution.\n"
- title: 7.  Looking at the whole picture vs. making a building block
  contents:
  - "7.  Looking at the whole picture vs. making a building block\n   For a complex\
    \ protocol which interacts with protocols from other\n   standards bodies as well\
    \ as from other IETF working groups, it can be\n   necessary to keep in mind the\
    \ overall picture while, at the same\n   time, breaking out specific parts of\
    \ the problem to be standardized\n   in particular working groups.\n   Question:\
    \ Have you considered the larger context, while restricting\n   your own design\
    \ efforts to one part of the whole?\n   Question: Are there parts of the overall\
    \ solution that will have to\n   be provided by other IETF Working Groups or by\
    \ other standards\n   bodies?\n"
- title: '7.1.  Case Study: The Session Initiation Protocol (SIP)'
  contents:
  - "7.1.  Case Study: The Session Initiation Protocol (SIP)\n   The Session Initiation\
    \ Protocol (SIP) [RFC2543], for managing\n   connected, multimedia sessions, \
    \ is an example of a complex protocol\n   that has been broken into pieces for\
    \ standardization in other working\n   groups.  SIP has also involved interaction\
    \ with other standardization\n   bodies.\n   The basic SIP framework is being\
    \ standardized by the SIP working\n   group.  This working group has focused on\
    \ the core functional\n   features of setting up, managing, and tearing down multimedia\n\
    \   sessions.  Extensions are considered if they relate to these core\n   features.\n\
    \   The task of setting up a multimedia session also requires a\n   description\
    \ of the desired multimedia session.  This is provided by\n   the Session Description\
    \ Protocol (SDP).  SDP is a building block that\n   is supplied by the Multiparty\
    \ Multimedia Session Control (MMUSIC)\n   working group.  It is not standardized\
    \ within the SIP working group.\n   Other working groups are involved in standardizing\
    \ extensions to SIP\n   that fall outside of core functional features or applications.\
    \  The\n   SIPPING working group is analyzing the requirements for SIP applied\n\
    \   to different tasks, and the SIMPLE working group is examining the\n   application\
    \ of SIP to instant messaging and presence.  The IPTEL\n   working group is defining\
    \ a call processing language (CPL) that\n   interacts with SIP in various ways.\
    \  These working groups\n   occasionally feed requirements back into the main\
    \ SIP working group.\n   Finally, outside standardization groups have been very\
    \ active in\n   providing the SIP working group with requirements.  The Distributed\n\
    \   Call Signaling (DCS) group from the PacketCable Consortium, 3GPP, and\n  \
    \ 3GPP2 are all using SIP for various telephony-related applications,\n   and\
    \ members of these groups have been involved in drafting\n   requirements for\
    \ SIP.  In addition, there are extensions of SIP which\n   are under consideration\
    \ in these standardization bodies.  Procedures\n   are under development in the\
    \ IETF to address proposed extensions to\n   SIP, including a category of preliminary,\
    \ private, or proprietary\n   extensions, and to provide for the safe management\
    \ of the SIP\n   namespace [MBMWOR02].\n"
- title: 8.  Weighing architectural benefits against architectural costs
  contents:
  - "8.  Weighing architectural benefits against architectural costs\n   Questions:\
    \ How do the architectural benefits of a proposed new\n   protocol compare against\
    \ the architectural costs, if any?  Have the\n   architectural costs been carefully\
    \ considered?\n"
- title: '8.1.  Case Study: Performance-enhancing proxies (PEPs)'
  contents:
  - "8.1.  Case Study: Performance-enhancing proxies (PEPs)\n   RFC 3135 [RFC3135]\
    \ considers the relative costs and benefits of\n   placing performance-enhancing\
    \ proxies (PEPs) in the middle of a\n   network to address link-related degradations.\
    \  In the case of PEPs,\n   the potential costs include disabling the end-to-end\
    \ use of IP layer\n   security mechanisms; introducing a new possible point of\
    \ failure that\n   is not under the control of the end systems; adding increased\n\
    \   difficulty in diagnosing and dealing with failures; and introducing\n   possible\
    \ complications with asymmetric routing or mobile hosts.  RFC\n   3135 carefully\
    \ considers these possible costs, the mitigations that\n   can be introduced,\
    \ and the cases when the benefits of\n   performance-enhancing proxies to the\
    \ user are likely to outweigh the\n   costs.\n"
- title: '8.2.  Case Study: Open Pluggable Edge Services (OPES)'
  contents:
  - "8.2.  Case Study: Open Pluggable Edge Services (OPES)\n   One of the issues raised\
    \ by middleboxes in the Internet involves the\n   end-to-end integrity of data.\
    \  This is illustrated in the recent\n   question of chartering the Open Pluggable\
    \ Edge Services (OPES)\n   Working Group.  Open Pluggable Edge Services are services\
    \ that would\n   be deployed as application-level intermediaries in the network,\
    \ for\n   example, at a web proxy cache between the origin server and the\n  \
    \ client.  These intermediaries would transform or filter content, with\n   the\
    \ explicit consent of either the content provider or the end user.\n   One of\
    \ the architectural issues that arose in the process of\n   chartering the OPES\
    \ Working Group concerned the end-to-end integrity\n   of data.  As an example,\
    \ it was suggested that \"OPES would reduce\n   both the integrity, and the perception\
    \ of integrity, of\n   communications over the Internet, and would significantly\
    \ increase\n   uncertainly about what might have been done to content as it moved\n\
    \   through the network\", and that therefore the risks of OPES outweighed\n \
    \  the benefits [CDT01].\n   As one consequence of this debate, the IAB wrote\
    \ a document on \"IAB\n   Architectural and Policy Considerations for OPES\",\
    \ considering both\n   the potential architectural benefits and costs of OPES\
    \ [RFC3238].\n   This document did not recommend specific solutions or mandate\n\
    \   specific functional requirements, but instead included\n   recommendations\
    \ of issues such as concerns about data integrity that\n   OPES solutions standardized\
    \ in the IETF should be required to\n   address.\n"
- title: 9.  General Robustness Questions
  contents:
  - "9.  General Robustness Questions\n   Questions: How robust is the protocol, not\
    \ just to the failure of\n   nodes, but also to compromised or malfunctioning\
    \ components,\n   imperfect or defective implementations, etc?\n   Does the protocol\
    \ take into account the realistic conditions of the\n   current or future Internet\
    \ (e.g., packet drops and packet corruption,\n   packet reordering, asymmetric\
    \ routing, etc.)?\n"
- title: '9.1.  Discussion: Designing for Robustness'
  contents:
  - "9.1.  Discussion: Designing for Robustness\n   Robustness has long been cited\
    \ as one of the overriding goals of the\n   Internet architecture [Clark88]. \
    \ The robustness issues discussed in\n   [Clark88] largely referred to the robustness\
    \ of packet delivery even\n   in the presence of failed routers;  today robustness\
    \ concerns have\n   widened to include a goal of robust performance in the presence\
    \ of a\n   wide range of failures, buggy code, and malicious actions.\n   As [ASSW02]\
    \ argues, protocols need to be designed somewhat\n   defensively, to maximize\
    \ robustness against inconsistencies and\n   errors.  [ASSW02] discusses several\
    \ approaches for increasing\n   robustness in protocols, such as verifying information\
    \ whenever\n   possible; designing interfaces that are conceptually simple and\n\
    \   therefore less conducive to error; protecting resources against\n   attack\
    \ or overuse; and identifying and exposing errors so that they\n   can be repaired.\n\
    \   Techniques for verifying information range from verifying that\n   acknowledgements\
    \ in TCP acknowledge data that was actually sent, to\n   providing mechanisms\
    \ for routers to verify information in routing\n   messages.\n   Techniques for\
    \ protecting resources against attack range from\n   preventing \"SYN flood\"\
    \ attacks by designing protocols that don't\n   allocate resources for a single\
    \ SYN packet, to partitioning resources\n   (e.g., preventing one flow or aggregate\
    \ from using all of the link\n   bandwidth).\n"
- title: '9.2.  Case Study: Explicit Congestion Notification (ECN)'
  contents:
  - "9.2.  Case Study: Explicit Congestion Notification (ECN)\n   The Internet is\
    \ based on end-to-end congestion control, and\n   historically the Internet has\
    \ used packet drops as the only method\n   for routers to indicate congestion\
    \ to the end nodes.  ECN [RFC3168]\n   is a recent addition to the IP architecture\
    \ to allow routers to set a\n   bit in the IP packet header to inform end-nodes\
    \ of congestion,\n   instead of dropping the packet.\n   The first, Experimental\
    \ specification of ECN [RFC3168] contained an\n   extensive discussion of the\
    \ dangers of a rogue or broken router\n   \"erasing\" information from the ECN\
    \ field in the IP header, thus\n   preventing indications of congestion from reaching\
    \ the end-nodes.  To\n   add robustness, the standards-track specification [RFC3168]\
    \ specified\n   an additional codepoint in the IP header's ECN field, to use for\
    \ an\n   ECN \"nonce\".  The development of the ECN nonce was motivated by\n \
    \  earlier research on specific robustness issues in TCP [SCWA99].  RFC\n   3168\
    \ explains that the addition of the codepoint \"is motivated\n   primarily by\
    \ the desire to allow mechanisms for the data sender to\n   verify that network\
    \ elements are not erasing the CE codepoint, and\n   that data receivers are properly\
    \ reporting to the sender the receipt\n   of packets with the CE codepoint set,\
    \ as required by the transport\n   protocol.\" Supporting mechanisms for the ECN\
    \ nonce are needed in the\n   transport protocol to ensure robustness of delivery\
    \ of the ECN-based\n   congestion indication.\n   In contrast, a more difficult\
    \ and less clear-cut robustness issue for\n   ECN concerns the differential treatment\
    \ of packets in the network by\n   middleboxes, based on the TCP header's ECN\
    \ flags in a TCP SYN packet\n   [RFC3360].  The issue concerns \"ECN-setup\" SYN\
    \ packets, that is, SYN\n   packets with ECN flags set in the TCP header to negotiate\
    \ the use of\n   ECN between the two TCP end-hosts.  There exist firewalls in\
    \ the\n   network that drop \"ECN-setup\" SYN packets, others that send TCP Reset\n\
    \   messages, and yet others that zero ECN flags in TCP headers.  None of\n  \
    \ this was anticipated by the designers of ECN, and RFC 3168 added\n   optional\
    \ mechanisms to permit the robust operation of TCP in the\n   presence of firewalls\
    \ that drop \"ECN-setup\" SYN packets.  However,\n   ECN is still not robust to\
    \ all possible scenarios of middleboxes\n   zeroing ECN flags in the TCP header.\
    \  Up until now, transport\n   protocols have been standardized independently\
    \ from the mechanisms\n   used by middleboxes to control the use of these protocols,\
    \ and it is\n   still not clear what degree of robustness is required from transport\n\
    \   protocols in the presence of the unauthorized modification of\n   transport\
    \ headers in the network.  These and similar issues are\n   discussed in more\
    \ detail in [RFC3360].\n"
- title: 10.  Avoiding Tragedy of the Commons
  contents:
  - "10.  Avoiding Tragedy of the Commons\n   Question: Is performance still robust\
    \ if everyone is using the new\n   protocol?  Are there other potential impacts\
    \ of widespread deployment\n   that need to be considered?\n"
- title: '10.1.  Case Study: End-to-end Congestion Control'
  contents:
  - "10.1.  Case Study: End-to-end Congestion Control\n   [RFC2914] discusses the\
    \ potential for congestion collapse if flows\n   are not using end-to-end congestion\
    \ control in a time of high\n   congestion.  For example, if a new transport protocol\
    \ was proposed\n   that did not use end-to-end congestion control, it might be\
    \ easy to\n   show that an individual flow using the new transport protocol would\n\
    \   perform quite well as long as all of the competing flows in the\n   network\
    \ were using end-to-end congestion control.  To fully evaluate\n   the new transport\
    \ protocol, it is necessary to look at performance\n   when many flows are competing,\
    \ all using the new transport protocol.\n   If all of the competing flows were\
    \ using the more aggressive\n   transport protocol in a time of high congestion,\
    \ the result could be\n   high steady-state packet drop rates and reduced overall\
    \ throughput,\n   with busy links carrying packets that will only be dropped\n\
    \   downstream.  This can be viewed as a form of tragedy of the commons,\n   when\
    \ a practice that is productive if done by only one person (e.g.,\n   adding a\
    \ few more sheep to the common grazing pasture) is instead\n   counter-productive\
    \ when done by everyone [H68].\n"
- title: 11.  Balancing Competing Interests
  contents:
  - "11.  Balancing Competing Interests\n   Question: Does the protocol protect the\
    \ interests of competing\n   parties (e.g., not only end-users, but also ISPs,\
    \ router vendors,\n   software vendors, or other parties)?\n"
- title: '11.1.  Discussion: balancing competing interests'
  contents:
  - "11.1.  Discussion: balancing competing interests\n   [CWSB02] discusses the role\
    \ that competition between competing\n   interests plays in the evolution of the\
    \ Internet, and takes the\n   position that the role of Internet protocols is\
    \ to design the playing\n   field in this competition, rather than to pick the\
    \ outcome.  The IETF\n   has long taken the position that it can only design the\
    \ protocols,\n   and that often two competing approaches will be developed, with\
    \ the\n   marketplace left to decide between them [A02].  (It has also been\n\
    \   suggested that \"the marketplace\" left entirely to itself does not\n   always\
    \ make the best decisions, and that working to identify and\n   adopt the technically\
    \ best solution is sometimes helpful.  Thus,\n   while the role of the marketplace\
    \ should not be ignored, the\n   decisions of the marketplace should also not\
    \ be held as sacred or\n   infallible.)\n   An example cited in [CWSB02] of modularization\
    \ in support of\n   competing interests is the decision to use codepoints in the\
    \ IP\n   header to select QoS, rather than binding QoS to other properties\n \
    \  such as port numbers.  This separates the structural and economic\n   issues\
    \ related to QoS from technical issues of protocols and port\n   numbers, and\
    \ allows space for a wide range of structural and pricing\n   solutions to emerge.\n\
    \   There have been perceived problems over the years of individuals\n   adding\
    \ unnecessary complexity to IETF protocols, increasing the\n   barrier to other\
    \ implementations of those protocols.  Clearly such\n   action would not be protecting\
    \ the interests of open competition.\n   Underspecified protocols can also serve\
    \ as an unnecessary barrier to\n   open competition.\n"
- title: '12.  Designing for Choice vs. Avoiding Unnecessary Complexity:'
  contents:
  - "12.  Designing for Choice vs. Avoiding Unnecessary Complexity:\n   Is the protocol\
    \ designed for choice, to allow different players to\n   express their preferences\
    \ where appropriate?  At the other extreme,\n   does the protocol provide so many\
    \ choices that it threatens\n   interoperability or introduces other significant\
    \ problems?\n"
- title: '12.1.  Discussion: the importance of choice'
  contents:
  - "12.1.  Discussion: the importance of choice\n   [CWSB02] suggests that \"the\
    \ fundamental design goal of the Internet\n   is to hook computers together, and\
    \ since computers are used for\n   unpredictable and evolving purposes, making\
    \ sure that the users are\n   not constrained in what they can do is doing nothing\
    \ more than\n   preserving the core design tenet of the Internet.  In this context,\n\
    \   user empowerment is a basic building block, and should be embedded\n   into\
    \ all mechanism whenever possible.\"\n   As an example of choice, \"the design\
    \ of the mail system allows the\n   user to select his SMTP server and his POP\
    \ server\" [CWSB02].  More\n   open-ended questions about choice concern the design\
    \ of mechanisms\n   that would enable the user to choose the path at the level\
    \ of\n   providers, or to allow users to choose third-party intermediaries\n \
    \  such as web caches, or providers for Open Pluggable Edge Services\n   (OPES).\
    \  [CWSB02] also notes that the issue of choice itself reflects\n   competing\
    \ interests.  For example, ISPs would generally like to lock\n   in customers,\
    \ while customers would like to preserve their ability to\n   change among providers.\n\
    \   At the same time, we note that excessive choice can lead to \"kitchen\n  \
    \ sink\" protocols that are inefficient and hard to understand, have too\n   much\
    \ negotiation, or have unanticipated interactions between options.\n   For example,\
    \ [P99] notes that excessive choice can lead to difficulty\n   in ensuring interoperability\
    \ between two independent, conformant\n   implementations of the protocol.\n \
    \  The dangers of excessive options are also discussed in [MBMWOR02],\n   which\
    \ gives guidelines for responding to the \"continuous flood\" of\n   suggestions\
    \ for modifications and extensions to SIP (Session\n   Initiation Protocol). \
    \ In particular, the SIP Working Group is\n   concerned that proposed extensions\
    \ have general use, and do not\n   provide efficiency at the expense of simplicity\
    \ or robustness.\n   [MBMWOR02] suggests that other highly extensible protocols\
    \ developed\n   in the IETF might also benefit from more coordination of extensions.\n"
- title: 13.  Preserving evolvability?
  contents:
  - "13.  Preserving evolvability?\n   Does the protocol protect the interests of\
    \ the future, by preserving\n   the evolvability of the Internet?  Does the protocol\
    \ enable future\n   developments?\n   If an old protocol is overloaded with new\
    \ functionality, or reused\n   for new purposes, have the possible complexities\
    \ introduced been\n   taken into account?\n   For a protocol that introduces new\
    \ complexity to the Internet\n   architecture, does the protocol add robustness\
    \ and preserve\n   evolvability?  Does it also introduce unwanted new fragilities\
    \ to the\n   system?\n"
- title: '13.1.  Discussion: evolvability'
  contents:
  - "13.1.  Discussion: evolvability\n   There is an extensive literature and an ongoing\
    \ discussion about the\n   evolvability, or lack of evolvability, of the Internet\n\
    \   infrastructure; the web page on \"Papers on the Evolvability of the\n   Internet\
    \ Infrastructure\" has pointers to some of this literature\n   [Evolvability].\
    \  Issues range from the evolvability and overloading\n   of the DNS; the difficulties\
    \ of the Internet in evolving to\n   incorporate multicast, QoS, or IPv6; the\
    \ difficulties of routing in\n   meeting the demands of a changing and expanding\
    \ Internet; and the\n   role of firewalls and other middleboxes in limiting evolvability.\n\
    \   [CWSB02] suggests that among all of the issues of evolvability,\n   \"keeping\
    \ the net open and transparent for new applications is the\n   most important\
    \ goal.\"  In the beginning, the relative transparency of\n   the infrastructure\
    \ was sufficient to ensure evolvability, where a\n   \"transparent\" network simply\
    \ routes packets from one end-node to\n   another.  However, this transparency\
    \ has become more murky over time,\n   as cataloged in [RFC3234], which discusses\
    \ the ways that middleboxes\n   interact with existing protocols and increase\
    \ the difficulties in\n   diagnosing failures.  [CWSB02] realistically suggests\
    \ the following\n   guideline: \"Failures of transparency will occur - design\
    \ what happens\n   then,\" where examples of failures of transparency include\
    \ firewalls,\n   application filtering, connection redirection, caches, kludges\
    \ to\n   DNS, and the like.  Thus, maintaining evolvability also requires\n  \
    \ mechanisms for allowing evolution in the face of a lack of\n   transparency\
    \ of the infrastructure itself.\n   One of the ways for maintaining evolvability\
    \ is for designers of new\n   mechanisms and protocols to be as clear as possible\
    \ about the\n   assumptions that are being made about the rest of the network.\
    \  New\n   mechanisms that make unwarranted assumptions about the network can\n\
    \   end up placing unreasonable constraints on the future evolution of\n   the\
    \ network.\n"
- title: '13.2.  Discussion: overloading'
  contents:
  - "13.2.  Discussion: overloading\n   There has been a strong tendency in the last\
    \ few years to overload\n   some designs with new functionality, with resulting\
    \ operational\n   complexities.  Extensible protocols could be seen as one of\
    \ the tools\n   for providing evolvability.  However, if protocols and systems\
    \ are\n   stretched beyond their reasonable design parameters, then scaling,\n\
    \   reliability, or security issues could be introduced.  Examples of\n   protocols\
    \ that have been seen as either productively extended, or as\n   dangerously overloaded,\
    \ or both, include DNS [K02,RFC3403], MPLS\n   [A02a], and BGP [B02].  In some\
    \ cases, overloading or extending a\n   protocol may reduce total complexity and\
    \ deployment costs by avoiding\n   the creation of a new protocol; in other cases\
    \ a new protocol might\n   be the simpler solution.\n   We have a number of reusable\
    \ technologies, including component\n   technologies specifically designed for\
    \ re-use.  Examples include\n   SASL, BEEP and APEX.  TCP and UDP can also be\
    \ viewed as reusable\n   transport protocols, used by a range of applications.\
    \  On the other\n   hand, re-use should not go so far as to turn a protocol into\
    \ a Trojan\n   Horse, as has happened with HTTP [RFC3205].\n"
- title: '13.3.  Discussion: complexity, robustness, and fragility'
  contents:
  - "13.3.  Discussion: complexity, robustness, and fragility\n   [WD02] gives a historical\
    \ account of the evolution of the Internet as\n   a complex system, with particular\
    \ attention to the tradeoffs between\n   complexity, robustness, and fragility.\
    \  [WD02] describes the\n   robustness that follows from the simplicity of a connectionless,\n\
    \   layered, datagram infrastructure and a universal logical addressing\n   scheme,\
    \ and, as case studies, describes the increasing complexity of\n   TCP and of\
    \ BGP.  The paper describes a complexity/robustness spiral\n   of an initially\
    \ robust design and the appearance of fragilities,\n   followed by modifications\
    \ for more robustness that themselves\n   introduce new fragilities.  [WD02] conjectures\
    \ that \"the Internet is\n   only now beginning to experience an acceleration\
    \ of this\n   complexity/robustness spiral and, if left unattended, can be fully\n\
    \   expected to experience arcane, irreconcilable, and far-reaching\n   robustness\
    \ problems in the not-too-distant future.\"  Citing [WD02],\n   [BFM02] focuses\
    \ on the ways that complexity increases capital and\n   operational expenditures\
    \ in carrier IP network, and views complexity\n   as the primary mechanism that\
    \ impedes efficient scaling.\n"
- title: 14.  Internationalization
  contents:
  - "14.  Internationalization\n   Where protocols require elements in text format,\
    \ have the possibly\n   conflicting requirements of global comprehensibility and\
    \ the ability\n   to represent local text content been properly weighed against\
    \ each\n   other?\n"
- title: '14.1.  Discussion: internationalization'
  contents:
  - "14.1.  Discussion: internationalization\n   RFC 1958 [RFC1958] included a simple\
    \ statement of the need for a\n   common language:\n   \"Public (i.e. widely visible)\
    \ names should be in case-independent\n   ASCII.  Specifically, this refers to\
    \ DNS names, and to protocol\n   elements that are transmitted in text format.\"\
    \n   The IETF has studied character set issues in general [RFC 2130] and\n   made\
    \ specific recommendations for the use of a standardized approach\n   [RFC 2277].\
    \  The situation is complicated by the fact that some uses\n   of text are hidden\
    \ entirely in protocol elements and need only be\n   read by machines, while other\
    \ uses are intended entirely for human\n   consumption.  Many uses lie between\
    \ these two extremes, which leads\n   to conflicting implementation requirements.\n\
    \   For the specific case of DNS, the Internationalized Domain Name\n   working\
    \ group is considering these issues.  As stated in the charter\n   of that working\
    \ group, \"A fundamental requirement in this work is to\n   not disturb the current\
    \ use and operation of the domain name system,\n   and for the DNS to continue\
    \ to allow any system anywhere to resolve\n   any domain name.\"  This leads to\
    \ some very strong requirements for\n   backwards compatibility with the existing\
    \ ASCII-only DNS.  Yet since\n   the DNS has come to be used as if it was a directory\
    \ service, domain\n   names are also expected to be presented to users in local\
    \ character\n   sets.\n   This document does not attempt to resolve these complex\
    \ and difficult\n   issues, but simply states this as an issue to be addressed\
    \ in our\n   work.  The requirement that names encoded in a text format within\n\
    \   protocol elements be universally decodable (i.e. encoded in a\n   globally\
    \ standard format with no intrinsic ambiguity) does not seem\n   likely to change.\
    \  However, at some point, it is possible that this\n   format will no longer\
    \ be case-independent ASCII.\n"
- title: 15.  Deployability
  contents:
  - "15.  Deployability\n   Question: Is the protocol deployable?\n"
- title: '15.1.  Discussion: deployability'
  contents:
  - "15.1.  Discussion: deployability\n   It has been suggested that the failure to\
    \ understand deployability\n   considerations in the current environment is one\
    \ of the major\n   weakness of the IETF.  As examples of deployment difficulties,\
    \ RFC\n   2990 [RFC2990] discusses deployment difficulties with Quality of\n \
    \  Service (QoS) architectures, various documents of the MBONE\n   Deployment\
    \ Working Group address deployment problems with IP\n   Multicast, and the IPv6\
    \ Working Group discusses a wealth of issues\n   related to the deployment of\
    \ IPv6.  [CN02] discusses how the\n   deployment of Integrated Services has been\
    \ limited by factors such as\n   the failure to take into account administrative\
    \ boundaries.\n   Additional papers on difficulties in the evolution of the Internet\n\
    \   architecture are available from [Evolvability].\n   Issues that can complicate\
    \ deployment include whether the protocol is\n   compatible with pre-existing\
    \ standards, and whether the protocol is\n   compatible with the installed base.\
    \  For example, a transport\n   protocol is more likely to be deployable if it\
    \ performs correctly and\n   reasonably robustly in the presence of dropped, reordered,\n\
    \   duplicated, delayed, and rerouted packets, as all of this can occur\n   in\
    \ the current Internet.\n"
- title: 16.  Conclusions
  contents:
  - "16.  Conclusions\n   This document suggests general architectural and policy\
    \ questions to\n   be addressed when working on new protocols and standards in\
    \ the IETF.\n   The case studies in this document have generally been short\n\
    \   illustrations of how the questions proposed in the document have been\n  \
    \ addressed in working groups in the past.  However, we have generally\n   steered\
    \ away from case studies of more controversial issues, where\n   there is not\
    \ yet a consensus in the IETF community.  Thus, we\n   side-stepped suggestions\
    \ for adding a case study for IKE (Internet\n   Key Exchange) as an possible example\
    \ of a protocol with too much\n   negotiation, or of adding a case study of network\
    \ management\n   protocols as illustrating the possible costs of leaving things\
    \ to the\n   marketplace to decide.  We would encourage others to contribute case\n\
    \   studies of these or any other issues that may shed light on some of\n   the\
    \ questions in this document;  any such case studies could include\n   a careful\
    \ presentation of the architectural reasoning on both sides.\n   we would conjecture\
    \ that there is a lot to be learned, in terms of\n   the range of answers to the\
    \ questions posed in this document, by\n   studying the successes, failures, and\
    \ other struggles of the past.\n   We would welcome feedback on this document\
    \ for future revisions.\n   Feedback could be send to the editor, Sally Floyd,\
    \ at floyd@icir.org.\n"
- title: 17.  Acknowledgements
  contents:
  - "17.  Acknowledgements\n   This document has borrowed text freely from other IETF\
    \ RFCs, and has\n   drawn on ideas from [ASSW02], [CWSB02], [M01] and elsewhere.\
    \  This\n   document has developed from discussions in the IAB, and has drawn\n\
    \   from suggestions made at IAB Plenary sessions and on the ietf general\n  \
    \ discussion mailing list.  The case study on SIP was contributed by\n   James\
    \ Kempf, an early case study on Stresses on DNS was contributed\n   by Karen Sollins,\
    \ and Keith Moore contributed suggestions that were\n   incorporated in a number\
    \ of places in the document.  The discussions\n   on Internationalization and\
    \ on Overloading were based on an earlier\n   document by Brian Carpenter and\
    \ Rob Austein.  We have also benefited\n   from discussions with Noel Chiappa,\
    \ Karen Sollins, John Wroclawski,\n   and others, and from helpful feedback from\
    \ members of the IESG.  We\n   specifically thank Senthilkumar Ayyasamy, John\
    \ Loughney, Keith Moore,\n   Eric Rosen, and Dean Willis and others for feedback\
    \ on various stages\n   of this document.\n"
- title: 18.  Normative References
  contents:
  - '18.  Normative References

    '
- title: 19.  Informative References
  contents:
  - "19.  Informative References\n   [A02]          Harald Alvestrand, \"Re: How many\
    \ standards or\n                  protocols...\", email to the ietf discussion\
    \ mailing\n                  list, Message-id:  <598204031.1018942481@localhost>,\n\
    \                  April 16, 2002.\n   [A02a]         Loa Andersson, \"The Role\
    \ of MPLS in Current IP\n                  Network\", MPLS World News, September\
    \ 16, 2002.  URL\n                  \"http://www.mplsworld.com/archi_drafts/focus/analy-\n\
    \                  andersson.htm\".\n   [ASSW02]       T. Anderson, S. Shenker,\
    \ I. Stoica, and D. Wetherall,\n                  \"Design Guidelines for Robust\
    \ Internet Protocols\",\n                  HotNets-I, October 2002.\n   [BFM02]\
    \        Randy Bush, Tim Griffin, and David Meyer, \"Some\n                  Internet\
    \ Architectural Guidelines and Philosophy\",\n                  Work in Progress.\n\
    \   [B02]          Hamid Ould-Brahim, Bryan Gleeson, Peter Ashwood-Smith,\n  \
    \                Eric C. Rosen, Yakov Rekhter, Luyuan Fang, Jeremy De\n      \
    \            Clercq, Riad Hartani, and Tissa Senevirathne, \"Using\n         \
    \         BGP as an Auto-Discovery Mechanism for Network-based\n             \
    \     VPNs\", Work in Progress.\n   [CDT01]        Policy Concerns Raised by Proposed\
    \ OPES Working Group\n                  Efforts, email to the IESG, from the Center\
    \ for\n                  Democracy & Technology, August 3, 2001.  URL\n      \
    \            \"http://www.imc.org/ietf-openproxy/mail-\n                  archive/msg00828.html\"\
    .\n   [Clark88]      David D. Clark, The Design Philosophy of the DARPA\n    \
    \              Internet Protocols, SIGCOMM 1988.\n   [CN02]         Brian Carpenter,\
    \ Kathleen Nichols, \"Differentiated\n                  Services in the Internet\"\
    , Technical Report, February\n                  2002, URL \"http://www.research.ibm.com/resources/\n\
    \                  paper_search.shtml\".\n   [CWSB02]       Clark, D., Wroslawski,\
    \ J., Sollins, K., and Braden,\n                  R., \"Tussle in Cyberspace:\
    \ Defining Tomorrow's\n                  Internet\", SIGCOMM 2002.  URL\n    \
    \              \"http://www.acm.org/sigcomm/sigcomm2002/papers/\n            \
    \      tussle.html\".\n   [Evolvability] Floyd, S., \"Papers on the Evolvability\
    \ of the Internet\n                  Infrastructure\".  Web Page, URL\n      \
    \            \"http://www.icir.org/floyd/evolution.html\".\n   [H68]         \
    \ Garrett Hardin, \"The Tragedy of the Commons\", Science,\n                 \
    \ V. 162, 1968, pp. 1243-1248.  URL\n                  \"http://dieoff.org/page95.htm\"\
    .\n   [K02]          John C. Klensin, \"Role of the Domain Name System\",\n  \
    \                Work in Progress.\n   [Layering]     Floyd, S., \"References\
    \ on Layering and the Internet\n                  Architecture\", Web Page, URL\n\
    \                  \"http://www.icir.org/floyd/layers.html\".\n   [Multiplexing]\
    \ S. Floyd, \"Multiplexing, TCP, and UDP: Pointers to the\n                  Discussion\"\
    , Web Page, URL\n                  \"http://www.icir.org/floyd/tcp_mux.html\"\
    .\n   [MBMWOR02]     Mankin, A., Bradner, S., Mahy, R., Willis, D., Ott, J.\n\
    \                  and B. Rosen, \"Change Process for the Session\n          \
    \        Initiation Protocol (SIP)\", BCP 67, RFC 3427, November\n           \
    \       2002.\n   [M01]          Tim Moors, A Critical Review of End-to-end Arguments\n\
    \                  in System Design, 2001.  URL\n                  \"http://uluru.poly.edu/~tmoors/\"\
    .\n   [P99]          Radia Perlman, \"Protocol Design Folklore\", in\n       \
    \           Interconnections Second Edition: Bridges, Routers,\n             \
    \     Switches, and Internetworking Protocols, Addison-\n                  Wesley,\
    \ 1999.\n   [RFC1958]      Carpenter, B.,  \"Architectural Principles of the\n\
    \                  Internet\", RFC 1958, June 1996.\n   [RFC2211]      Wroclawski,\
    \ J., \"Specification of the Controlled Load\n                  Quality of Service\"\
    , RFC 2211, September 1997.\n   [RFC2212]      Shenker, S., Partridge, C., and\
    \ R. Guerin,\n                  \"Specification of Guaranteed Quality of Service\"\
    , RFC\n                  2212, September 1997.\n   [RFC2316]      Bellovin, S.,\
    \ \"Report of the IAB Security Architecture\n                  Workshop\", RFC\
    \ 2316, April 1998.\n   [RFC2475]      Blake, S., Black, D., Carlson, M., Davies,\
    \ E., Wang,\n                  Z.  and W. Weiss, \"An Architecture for Differentiated\n\
    \                  Services\", RFC 2475, December 1998.\n   [RFC2543]      Handley,\
    \ M., Schulzrinne, H., Schooler, B. and J.\n                  Rosenberg, \"SIP:\
    \ Session Initiation Protocol\", RFC\n                  25434, March 1999.\n \
    \  [RFC2597]      Heinanen, J., Baker, F., Weiss, W. and J. Wroclawski,\n    \
    \              \"Assured Forwarding PHB Group\", RFC 2597, June 1999.\n   [RFC2990]\
    \      Huston, G., \"Next Steps for the IP QoS Architecture\",\n             \
    \     RFC 2990, November 2000.\n   [RFC3124]      Balakrishnan, H. and S. Seshan,\
    \ \"The Congestion\n                  Manager\", RFC 3124, June 2001.\n   [RFC3135]\
    \      Border, J., Kojo, M., Griner, J., Montenegro, G. and\n                \
    \  Z.  Shelby, \"Performance Enhancing Proxies Intended to\n                 \
    \ Mitigate Link-Related Degradations\", RFC 3135, June\n                  2001.\n\
    \   [RFC3168]      Ramakrishnan, K. K., Floyd, S. and D. Black, \"The\n      \
    \            Addition of Explicit Congestion Notification (ECN) to\n         \
    \         IP\", RFC 3168, September 2001.\n   [RFC3205]      Moore, K., \"On the\
    \ use of HTTP as a Substrate\", BCP\n                  56, RFC 3205, February\
    \ 2002.\n   [RFC3221]      Huston, G., \"Commentary on Inter-Domain Routing in\
    \ the\n                  Internet\", RFC 3221, December 2001.\n   [RFC3234]  \
    \    Carpenter, B. and S. Brim, \"Middleboxes: Taxonomy and\n                \
    \  Issues\", RFC 3234, February 2002.\n   [RFC3238]      Floyd, S. and L. Daigle,\
    \ \"IAB Architectural and Policy\n                  Considerations for Open Pluggable\
    \ Edge Services\", RFC\n                  3238, January 2002.\n   [RFC3246]  \
    \    Davie, B., Charny, A., Bennet, J. C. R., Benson, K.,\n                  Le\
    \ Boudec, J. Y., Courtney, W., Davari, S., Firoiu, V.\n                  and D.\
    \ Stiliadis, \"An Expedited Forwarding PHB (Per-\n                  Hop Behavior)\"\
    , RFC 3246, March 2002.\n   [RFC3360]      Floyd, S., \"Inappropriate TCP Resets\
    \ Considered\n                  Harmful\", BCP 60, RFC 3360, August 2002.\n  \
    \ [RFC3403]      Mealling, M., \"Dynamic Delegation Discovery System\n       \
    \           (DDDS) Part Three: The Domain Name System (DNS)\n                \
    \  Database\", RFC 3403, October 2002.\n   [RFC3424]      Daigle, L., \"IAB Considerations\
    \ for UNilateral Self-\n                  Address Fixing (UNSAF)\", RFC 3424,\
    \ November 2002.\n   [SCWA99]       Stefan Savage, Neal Cardwell, David Wetherall,\
    \ Tom\n                  Anderson, \"TCP Congestion Control with a Misbehaving\n\
    \                  Receiver\", ACM Computer Communications Review, October\n \
    \                 1999.\n   [SRC84]        J. Saltzer, D. Reed, and D. D. Clark,\
    \ \"End-To-End\n                  Arguments In System Design\", ACM Transactions\
    \ on\n                  Computer Systems, V.2, N.4, p.  277-88. 1984.\n   [T89]\
    \          D. Tennenhouse, \"Layered Multiplexing Considered\n               \
    \   Harmful\", Protocols for High-Speed Networks, 1989.\n   [WD02]         Walter\
    \ Willinger and John Doyle, \"Robustness and the\n                  Internet:\
    \ Design and Evolution\", draft, March 2002,\n                  URL \"http://netlab.caltech.edu/internet/\"\
    .\n"
- title: 20.  Security Considerations
  contents:
  - "20.  Security Considerations\n   This document does not propose any new protocols,\
    \ and therefore does\n   not involve any security considerations in that sense.\
    \  However,\n   throughout this document there are discussions of the privacy\
    \ and\n   integrity issues and the architectural requirements created by those\n\
    \   issues.\n"
- title: 21.  IANA Considerations
  contents:
  - "21.  IANA Considerations\n   There are no IANA considerations regarding this\
    \ document.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Internet Architecture Board\n   EMail:  iab@iab.org\n\
    \   IAB Membership at time this document was completed:\n   Harald Alvestrand\n\
    \   Ran Atkinson\n   Rob Austein\n   Fred Baker\n   Leslie Daigle\n   Steve Deering\n\
    \   Sally Floyd\n   Ted Hardie\n   Geoff Huston\n   Charlie Kaufman\n   James\
    \ Kempf\n   Eric Rescorla\n   Mike St. Johns\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2002).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
