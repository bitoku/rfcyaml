- contents:
  - '    Host Identity Protocol (HIP) Domain Name System (DNS) Extension

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This document specifies a resource record (RR) for the Domain Name\n
    \  System (DNS) and how to use it with the Host Identity Protocol (HIP).\n   This
    RR allows a HIP node to store in the DNS its Host Identity (HI),\n   the public
    component of the node public-private key pair; its Host\n   Identity Tag (HIT),
    a truncated hash of its public key (PK); and the\n   domain names of its rendezvous
    servers (RVSs).  This document\n   obsoletes RFC 5205.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc8005.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   2\n   2.  Conventions Used in This Document . . . . . . . . . . .
    . . .   3\n   3.  Usage Scenarios . . . . . . . . . . . . . . . . . . . . . .
    .   3\n     3.1.  Simple Static Single-Homed End Host . . . . . . . . . . .   5\n
    \    3.2.  Mobile End Host . . . . . . . . . . . . . . . . . . . . .   6\n   4.
    \ Overview of Using the DNS with HIP  . . . . . . . . . . . . .   7\n     4.1.
    \ Storing HI, HIT, and RVS in the DNS . . . . . . . . . . .   7\n     4.2.  Initiating
    Connections Based on DNS Names . . . . . . . .   8\n   5.  HIP RR Storage Format
    . . . . . . . . . . . . . . . . . . . .   9\n     5.1.  HIT Length Format . .
    . . . . . . . . . . . . . . . . . .   9\n     5.2.  PK Algorithm Format . . .
    . . . . . . . . . . . . . . . .   9\n     5.3.  PK Length Format  . . . . . .
    . . . . . . . . . . . . . .  10\n     5.4.  HIT Format  . . . . . . . . . . .
    . . . . . . . . . . . .  10\n     5.5.  Public Key Format . . . . . . . . . .
    . . . . . . . . . .  10\n     5.6.  Rendezvous Servers Format . . . . . . . .
    . . . . . . . .  10\n   6.  HIP RR Presentation Format  . . . . . . . . . . .
    . . . . . .  11\n   7.  Examples  . . . . . . . . . . . . . . . . . . . . . .
    . . . .  12\n   8.  Security Considerations . . . . . . . . . . . . . . . . .
    . .  12\n     8.1.  Attacker Tampering with an Insecure HIP RR  . . . . . . .
    \ 13\n     8.2.  Hash and HITs Collisions  . . . . . . . . . . . . . . . .  13\n
    \    8.3.  DNSSEC  . . . . . . . . . . . . . . . . . . . . . . . . .  14\n   9.
    \ IANA Considerations . . . . . . . . . . . . . . . . . . . . .  14\n   10. References
    \ . . . . . . . . . . . . . . . . . . . . . . . . .  15\n     10.1.  Normative
    References . . . . . . . . . . . . . . . . . .  15\n     10.2.  Informative References
    . . . . . . . . . . . . . . . . .  16\n   Appendix A.  Changes from RFC 5205  .
    . . . . . . . . . . . . . .  17\n   Acknowledgments . . . . . . . . . . . . .
    . . . . . . . . . . . .  17\n   Contributors  . . . . . . . . . . . . . . . .
    . . . . . . . . . .  17\n   Author's Address  . . . . . . . . . . . . . . . .
    . . . . . . . .  18\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This document specifies a resource record (RR) for the Domain
    Name\n   System (DNS) [RFC1034] and how to use it with the Host Identity\n   Protocol
    (HIP) [RFC7401].  This RR allows a HIP node to store in the\n   DNS its Host Identity
    (HI), the public component of the node public-\n   private key pair; its Host
    Identity Tag (HIT), a truncated hash of\n   its HI; and the domain names of its
    rendezvous servers (RVSs)\n   [RFC8004].\n   Currently, most of the Internet applications
    that need to communicate\n   with a remote host first translate a domain name
    (often obtained via\n   user input) into one or more IP addresses.  This step
    occurs prior to\n   communication with the remote host and relies on a DNS lookup.\n
    \  With HIP, IP addresses are intended to be used mostly for on-the-wire\n   communication
    between end hosts, while most Upper Layer Protocols\n   (ULPs) and applications
    use HIs or HITs instead (ICMP might be an\n   example of a ULP not using them).
    \ Consequently, we need a means to\n   translate a domain name into an HI.  Using
    the DNS for this\n   translation is pretty straightforward: We define a HIP RR.
    \ Upon\n   query by an application or ULP for a name-to-IP-address lookup, the\n
    \  resolver would then additionally perform a name-to-HI lookup and use\n   it
    to construct the resulting HI-to-IP-address mapping (which is\n   internal to
    the HIP layer).  The HIP layer uses the HI-to-IP-address\n   mapping to translate
    HIs and HITs into IP addresses, and vice versa.\n   The HIP specification [RFC7401]
    specifies the HIP base exchange\n   between a HIP Initiator and a HIP Responder
    based on a four-way\n   handshake involving a total of four HIP packets (I1, R1,
    I2, and R2).\n   Since the HIP packets contain both the Initiator and the Responder\n
    \  HIT, the Initiator needs to have knowledge of the Responder's HI and\n   HIT
    prior to initiating the base exchange by sending an I1 packet.\n   The HIP Rendezvous
    Extension [RFC8004] allows a HIP node to be\n   reached via the IP address(es)
    of a third party, the node's RVS.  An\n   Initiator willing to establish a HIP
    association with a Responder\n   served by an RVS would typically initiate a HIP
    base exchange by\n   sending the I1 packet initiating the exchange towards the
    RVS IP\n   address rather than towards the Responder IP address.  Consequently,\n
    \  we need a means to find the name of an RVS for a given host name.\n   This
    document introduces the HIP DNS RR to store the RVS, HI, and HIT\n   information.\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\",
    \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
    \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described
    in RFC 2119 [RFC2119].\n"
  title: 2.  Conventions Used in This Document
- contents:
  - "3.  Usage Scenarios\n   In this section, we briefly introduce a number of usage
    scenarios\n   where the DNS is useful with HIP.\n   With HIP, most applications
    and ULPs are unaware of the IP addresses\n   used to carry packets on the wire.
    \ Consequently, a HIP node could\n   take advantage of having multiple IP addresses
    for failover,\n   redundancy, mobility, or renumbering, in a manner that is transparent\n
    \  to most ULPs and applications (because they are bound to HIs; hence,\n   they
    are agnostic to these IP address changes).\n   In these situations, for a node
    to be reachable by reference to its\n   Fully Qualified Domain Name (FQDN), the
    following information should\n   be stored in the DNS:\n   o  A set of IP addresses
    via A [RFC1035] and AAAA [RFC3596] Resource\n      Record Sets (RRSets) [RFC2181].\n
    \  o  An HI, a HIT, and possibly a set of RVSs through HIP RRs.\n   The HIP RR
    is class independent.\n   When a HIP node wants to initiate communication with
    another HIP\n   node, it first needs to perform a HIP base exchange to set up
    a HIP\n   association towards its peer.  Although such an exchange can be\n   initiated
    opportunistically, i.e., without prior knowledge of the\n   Responder's HI, by
    doing so both nodes knowingly risk\n   man-in-the-middle (MitM) attacks on the
    HIP exchange.  To prevent\n   these attacks, it is recommended that the Initiator
    first obtains the\n   HI of the Responder and then initiates the exchange.  This
    can be\n   done, for example, through manual configuration or DNS lookups.\n   Hence,
    a HIP RR is introduced.\n   When a HIP node is frequently changing its IP address(es),
    the\n   natural DNS latency for propagating changes may prevent it from\n   publishing
    its new IP address(es) in the DNS.  For solving this\n   problem, the HIP Architecture
    [RFC4423] introduces RVSs [RFC8004].  A\n   HIP host uses an RVS as a rendezvous
    point to maintain reachability\n   with possible HIP Initiators while moving [RFC5206].
    \ Such a HIP node\n   would publish in the DNS its RVS domain name(s) in a HIP
    RR, while\n   keeping its RVS up-to-date with its current set of IP addresses.\n
    \  When a HIP node wants to initiate a HIP exchange with a Responder, it\n   will
    perform a number of DNS lookups.  Depending on the type of\n   implementation,
    the order in which those lookups will be issued may\n   vary.  For instance, implementations
    using HIT in Application\n   Programming Interfaces (APIs) may typically first
    query for HIP RRs\n   at the Responder FQDN, while those using an IP address in
    APIs may\n   typically first query for A and/or AAAA RRs.\n   In the following,
    we assume that the Initiator first queries for HIP\n   RRs at the Responder FQDN.\n
    \  If the query for the HIP type was responded to with a DNS answer with\n   RCODE=3
    (Name Error), then the Responder's information is not present\n   in the DNS,
    and further queries for the same owner name SHOULD NOT be\n   made.\n   In case
    the query for the HIP records returned a DNS answer with\n   RCODE=0 (No Error)
    and an empty answer section, it means that no HIP\n   information is available
    at the Responder name.  In such a case, if\n   the Initiator has been configured
    with a policy to fall back to\n   opportunistic HIP (initiating without knowing
    the Responder's HI) or\n   plain IP, it would send out more queries for A and
    AAAA types at the\n   Responder's FQDN.\n   Depending on the combinations of answers,
    the situations described in\n   Sections 3.1 and 3.2 can occur.\n   Note that
    storing HIP RR information in the DNS at an FQDN that is\n   assigned to a non-HIP
    node might have ill effects on its reachability\n   by HIP nodes.\n"
  - contents:
    - "3.1.  Simple Static Single-Homed End Host\n   In addition to its IP address
      or addresses (IP-R), a HIP node (R)\n   with a single static network attachment
      that wishes to be reachable\n   by reference to its FQDN (www.example.com) to
      act as a Responder\n   would store in the DNS a HIP RR containing its Host Identity
      (HI-R)\n   and Host Identity Tag (HIT-R).\n   An Initiator willing to associate
      with a node would typically issue\n   the following queries:\n   o  Query #1:
      QNAME=www.example.com, QTYPE=HIP\n   (QCLASS=IN is assumed and omitted from
      the examples)\n   Which returns a DNS packet with RCODE=0 and one or more HIP
      RRs with\n   the HIT and HI (e.g., HIT-R and HI-R) of the Responder in the answer\n
      \  section, but no RVS.\n   o  Query #2: QNAME=www.example.com, QTYPE=A\n   o
      \ Query #3: QNAME=www.example.com, QTYPE=AAAA\n   Which would return DNS packets
      with RCODE=0 and, respectively, one or\n   more A or AAAA RRs containing the
      IP address(es) of the Responder\n   (e.g., IP-R) in their answer sections.\n
      \  Caption: In the remainder of this document, for the sake of keeping\n            diagrams
      simple and concise, several DNS queries and answers\n            are represented
      as one single transaction, while in fact\n            there are several queries
      and answers flowing back and\n            forth, as described in the textual
      examples.\n               [HIP? A?        ]\n               [www.example.com]
      \           +-----+\n          +-------------------------------->|     |\n          |
      \                                | DNS |\n          | +-------------------------------|
      \    |\n          | |  [HIP? A?        ]            +-----+\n          | |  [www.example.com]\n
      \         | |  [HIP HIT-R HI-R ]\n          | |  [A IP-R         ]\n          |
      v\n        +-----+                              +-----+\n        |     |--------------I1------------->|
      \    |\n        |  I  |<-------------R1--------------|  R  |\n        |     |--------------I2------------->|
      \    |\n        |     |<-------------R2--------------|     |\n        +-----+
      \                             +-----+\n                         Static Single-Homed
      Host\n   The Initiator would then send an I1 to the Responder's IP addresses\n
      \  (IP-R).\n"
    title: 3.1.  Simple Static Single-Homed End Host
  - contents:
    - "3.2.  Mobile End Host\n   A mobile HIP node (R) wishing to be reachable by
      reference to its\n   FQDN (www.example.com) would store in the DNS, possibly
      in addition\n   to its IP address or addresses (IP-R), its HI (HI-R), its HIT\n
      \  (HIT-R), and the domain name or names of its RVS or servers (e.g.,\n   rvs.example.com)
      in a HIP RR or records.  The mobile HIP node also\n   needs to notify its RVSs
      of any change in its set of IP addresses.\n   An Initiator willing to associate
      with such a mobile node would\n   typically issue the following queries:\n   o
      \ Query #1: QNAME=www.example.com, QTYPE=HIP\n   Which returns a DNS packet
      with RCODE=0 and one or more HIP RRs with\n   the HIT, HI, and RVS domain name
      or names (e.g., HIT-R, HI-R, and\n   rvs.example.com) of the Responder in the
      answer section.\n   o  Query #2: QNAME=rvs.example.com, QTYPE=A\n   o  Query
      #3: QNAME=rvs.example.com, QTYPE=AAAA\n   Which return DNS packets with RCODE=0
      and, respectively, one or more\n   A or AAAA RRs containing an IP address(es)
      of the Responder's RVS\n   (e.g., IP-RVS) in their answer sections.\n              [HIP?
      \          ]\n              [www.example.com]\n              [A?             ]\n
      \             [rvs.example.com]                     +-----+\n         +----------------------------------------->|
      \    |\n         |                                          | DNS |\n         |
      +----------------------------------------|     |\n         | |  [HIP?                          ]
      \     +-----+\n         | |  [www.example.com               ]\n         | |
      \ [HIP HIT-R HI-R rvs.example.com]\n         | |\n         | |  [A?             ]\n
      \        | |  [rvs.example.com]\n         | |  [A IP-RVS       ]\n         |
      |\n         | |                +-----+\n         | | +------I1----->| RVS |-----I1------+\n
      \        | | |              +-----+             |\n         | | |                                  |\n
      \        | | |                                  |\n         | v |                                  v\n
      \       +-----+                              +-----+\n        |     |<---------------R1------------|
      \    |\n        |  I  |----------------I2----------->|  R  |\n        |     |<---------------R2------------|
      \    |\n        +-----+                              +-----+\n                              Mobile
      End Host\n   The Initiator would then send an I1 to the RVS IP address (IP-RVS).\n
      \  Following, the RVS will relay the I1 up to the mobile node's IP\n   address
      (IP-R), which will complete the HIP exchange.\n"
    title: 3.2.  Mobile End Host
  title: 3.  Usage Scenarios
- contents:
  - '4.  Overview of Using the DNS with HIP

    '
  - contents:
    - "4.1.  Storing HI, HIT, and RVS in the DNS\n   For any HIP node, its HI, the
      associated HIT, and the FQDN of its\n   possible RVSs can be stored in a DNS
      HIP RR.  Any conforming\n   implementation may store an HI and its associated
      HIT in a DNS HIP\n   RDATA format.  HI and HIT are defined in Section 3 of the
      HIP\n   specification [RFC7401].\n   Upon return of a HIP RR, a host MUST always
      calculate the\n   HI-derivative HIT to be used in the HIP exchange, as specified
      in\n   Section 3 of the HIP specification [RFC7401], while the HIT included\n
      \  in the HIP RR SHOULD only be used as an optimization (e.g., table\n   lookup).\n
      \  The HIP RR may also contain one or more domain names of one or more\n   RVSs
      towards which HIP I1 packets might be sent to trigger the\n   establishment
      of an association with the entity named by this RR\n   [RFC8004].\n   The Rendezvous
      Server field of the HIP RR stored at a given owner\n   name MAY include the
      owner name itself.  A semantically equivalent\n   situation occurs if no RVS
      is present in the HIP RR stored at that\n   owner name.  Such situations occur
      in two cases:\n   o  The host is mobile, and the A and/or AAAA RR(s) stored
      at its host\n      name contain the IP address(es) of its RVS rather than its
      own\n      one.\n   o  The host is stationary and can be reached directly at
      the IP\n      address(es) contained in the A and/or AAAA RR(s) stored at its\n
      \     host name.  This is a degenerate case of rendezvous service where\n      the
      host somewhat acts as an RVS for itself.\n   An RVS receiving such an I1 would
      then relay it to the appropriate\n   Responder (the owner of the I1 receiver
      HIT).  The Responder will\n   then complete the exchange with the Initiator,
      typically without\n   ongoing help from the RVS.\n"
    title: 4.1.  Storing HI, HIT, and RVS in the DNS
  - contents:
    - "4.2.  Initiating Connections Based on DNS Names\n   On a HIP node, a HIP exchange
      SHOULD be initiated whenever a ULP\n   attempts to communicate with an entity,
      and the DNS lookup returns\n   HIP RRs.\n   HIP RRs have a Time To Live (TTL)
      associated with them.  When the\n   number of seconds that passed since the
      record was retrieved exceeds\n   the record's TTL, the record MUST be considered
      no longer valid and\n   deleted by the entity that retrieved it.  If access
      to the record is\n   necessary to initiate communication with the entity to
      which the\n   record corresponds, a new query MUST be made to retrieve a fresh
      copy\n   of the record.\n   There may be multiple HIP RRs associated with a
      single name.  It is\n   outside the scope of this specification as to how a
      host chooses\n   between multiple RRs when more than one is returned.  The RVS\n
      \  information may be copied and aligned across multiple RRs, or may be\n   different
      for each one; a host MUST check that the RVS used is\n   associated with the
      HI being used, when multiple choices are present.\n"
    title: 4.2.  Initiating Connections Based on DNS Names
  title: 4.  Overview of Using the DNS with HIP
- contents:
  - "5.  HIP RR Storage Format\n   The RDATA for a HIP RR consists of a PK Algorithm
    Type, the HIT\n   length, a HIT, a PK (i.e., an HI), and optionally one or more
    RVSs.\n    0                   1                   2                   3\n    0
    1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  |  HIT length   | PK algorithm  |          PK length            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  |                                                               |\n   ~                           HIT
    \                                ~\n   |                                                               |\n
    \  +                     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |                     |
    \                                        |\n   +-+-+-+-+-+-+-+-+-+-+-+                                         +\n
    \  |                           Public Key                          |\n   ~                                                               ~\n
    \  |                                                               |\n   +                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  |                               |                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    \                              +\n   |                                                               |\n
    \  ~                       Rendezvous Servers                      ~\n   |                                                               |\n
    \  +             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |             |\n
    \  +-+-+-+-+-+-+-+\n   The HIT length, PK algorithm, PK length, HIT, and Public
    Key fields\n   are REQUIRED.  The Rendezvous Server field is OPTIONAL.\n"
  - contents:
    - "5.1.  HIT Length Format\n   The HIT length indicates the length in bytes of
      the HIT field.  This\n   is an 8-bit unsigned integer.\n"
    title: 5.1.  HIT Length Format
  - contents:
    - "5.2.  PK Algorithm Format\n   The PK algorithm field indicates the PK cryptographic
      algorithm and\n   the implied Public Key field format.  This is an 8-bit unsigned\n
      \  integer.  This document reuses the values defined for the 'Algorithm\n   Type'
      of the IPSECKEY RR [RFC4025].\n   Presently defined values are listed in Section
      9 for reference.\n"
    title: 5.2.  PK Algorithm Format
  - contents:
    - "5.3.  PK Length Format\n   The PK length indicates the length in bytes of the
      Public Key field.\n   This is a 16-bit unsigned integer in network byte order.\n"
    title: 5.3.  PK Length Format
  - contents:
    - "5.4.  HIT Format\n   The HIT is stored as a binary value in network byte order.\n"
    title: 5.4.  HIT Format
  - contents:
    - "5.5.  Public Key Format\n   Two of the PK types defined in this document (RSA
      and Digital\n   Signature Algorithm (DSA)) reuse the PK formats defined for
      the\n   IPSECKEY RR [RFC4025].\n   The DSA key format is defined in RFC 2536
      [RFC2536].\n   The RSA key format is defined in RFC 3110 [RFC3110], and the
      RSA key\n   size limit (4096 bits) is relaxed in the IPSECKEY RR [RFC4025]\n
      \  specification.\n   In addition, this document similarly defines the PK format
      of type\n   Elliptic Curve Digital Signature Algorithm (ECDSA) as the algorithm-\n
      \  specific portion of the DNSKEY RR RDATA for ECDSA [RFC6605], i.e, all\n   of
      the DNSKEY RR DATA after the first four octets, corresponding to\n   the same
      portion of the DNSKEY RR that must be specified by documents\n   that define
      a DNSSEC algorithm.\n"
    title: 5.5.  Public Key Format
  - contents:
    - "5.6.  Rendezvous Servers Format\n   The Rendezvous Server field indicates one
      or more variable length\n   wire-encoded domain names of one or more RVSs, concatenated
      and\n   encoded as described in Section 3.3 of RFC 1035 [RFC1035]:\n   \"<domain-name>
      is a domain name represented as a series of labels,\n   and terminated by a
      label with zero length\".  Since the wire-encoded\n   format is self-describing,
      the length of each domain name is\n   implicit: The zero length label termination
      serves as a separator\n   between multiple RVS domain names concatenated in
      the Rendezvous\n   Server field of a same HIP RR.  Since the length of the other
      portion\n   of the RR's RRDATA is known, and the overall length of the RR's
      RDATA\n   is also known (RDLENGTH), all the length information necessary to\n
      \  parse the HIP RR is available.\n   The domain names MUST NOT be compressed.
      \ The RVS or servers are\n   listed in order of preference (i.e., the first
      RVS or servers are\n   preferred), defining an implicit order amongst RVSs of
      a single RR.\n   When multiple HIP RRs are present at the same owner name, this\n
      \  implicit order of RVSs within an RR MUST NOT be used to infer a\n   preference
      order between RVSs stored in different RRs.\n"
    title: 5.6.  Rendezvous Servers Format
  title: 5.  HIP RR Storage Format
- contents:
  - "6.  HIP RR Presentation Format\n   This section specifies the representation
    of the HIP RR in a zone\n   master file.\n   The HIT length field is not represented,
    as it is implicitly known\n   thanks to the HIT field representation.\n   The
    PK algorithm field is represented as unsigned integers.\n   The HIT field is represented
    as the Base16 encoding [RFC4648] (a.k.a.\n   hex or hexadecimal) of the HIT.  The
    encoding MUST NOT contain\n   whitespaces to distinguish it from the Public Key
    field.\n   The Public Key field is represented as the Base64 encoding of the PK,\n
    \  as defined in Section 4 of [RFC4648].  The encoding MUST NOT contain\n   whitespace(s)
    to distinguish it from the Rendezvous Server field.\n   The PK length field is
    not represented, as it is implicitly known\n   thanks to the Public Key field
    representation containing no\n   whitespaces.\n   The Rendezvous Server field
    is represented by one or more domain\n   names separated by whitespace(s).  Such
    whitespace is only used in\n   the HIP RR representation format and is not part
    of the HIP RR wire\n   format.\n   The complete representation of the HIP record
    is:\n   IN  HIP   ( pk-algorithm\n               base16-encoded-hit\n               base64-encoded-public-key\n
    \              rendezvous-server[1]\n                       ...\n               rendezvous-server[n]
    )\n   When no RVSs are present, the representation of the HIP record is:\n   IN
    \ HIP   ( pk-algorithm\n               base16-encoded-hit\n               base64-encoded-public-key
    )\n"
  title: 6.  HIP RR Presentation Format
- contents:
  - "7.  Examples\n   In the examples below, the Public Key field containing no whitespace\n
    \  is wrapped, since it does not fit in a single line of this document.\n   Example
    of a node with an HI and a HIT but no RVS:\n   www.example.com.      IN  HIP (
    2 200100107B1A74DF365639CC39F1D578\n                                   AwEAAbdxyhNuSutc5EMzxTs9LBPCIkOFH8cI\n
    \  vM4p9+LrV4e19WzK00+CI6zBCQTdtWsuxKbWIy87UOoJTwkUs7lBu+Upr1gsNrut79ry\n   ra+bSRGQb1slImA8YVJyuIDsj7kwzG7jnERNqnWxZ48AWkskmdHaVDP4BcelrTI3rMXd\n
    \  XF5D )\n   Example of a node with an HI, a HIT, and one RVS:\n   www.example.com.
    \     IN  HIP ( 2 200100107B1A74DF365639CC39F1D578\n                                   AwEAAbdxyhNuSutc5EMzxTs9LBPCIkOFH8cI\n
    \  vM4p9+LrV4e19WzK00+CI6zBCQTdtWsuxKbWIy87UOoJTwkUs7lBu+Upr1gsNrut79ry\n   ra+bSRGQb1slImA8YVJyuIDsj7kwzG7jnERNqnWxZ48AWkskmdHaVDP4BcelrTI3rMXd\n
    \  XF5D\n                                   rvs.example.com. )\n   Example of
    a node with an HI, a HIT, and two RVSs:\n   www.example.com.      IN  HIP ( 2
    200100107B1A74DF365639CC39F1D578\n                                   AwEAAbdxyhNuSutc5EMzxTs9LBPCIkOFH8cI\n
    \  vM4p9+LrV4e19WzK00+CI6zBCQTdtWsuxKbWIy87UOoJTwkUs7lBu+Upr1gsNrut79ry\n   ra+bSRGQb1slImA8YVJyuIDsj7kwzG7jnERNqnWxZ48AWkskmdHaVDP4BcelrTI3rMXd\n
    \  XF5D\n                                   rvs1.example.com.\n                                   rvs2.example.com.
    )\n"
  title: 7.  Examples
- contents:
  - "8.  Security Considerations\n   This section contains a description of the known
    threats involved\n   with the usage of the HIP DNS Extension.\n   In a manner
    similar to the IPSECKEY RR [RFC4025], the HIP DNS\n   Extension allows for the
    provision of two HIP nodes with the public\n   keying material (HI) of their peer.
    \ These HIs will be subsequently\n   used in a key exchange between the peers.
    \ Hence, the HIP DNS\n   Extension is subject, as the IPSECKEY RR, to threats
    stemming from\n   attacks against unsecured HIP RRs, as described in the remainder
    of\n   this section.\n   A HIP node SHOULD obtain HIP RRs from a trusted party
    through a\n   secure channel ensuring data integrity and authenticity of the RRs.\n
    \  DNSSEC [RFC4033] [RFC4034] [RFC4035] provides such a secure channel.\n   However,
    it should be emphasized that DNSSEC only offers data\n   integrity and authenticity
    guarantees to the channel between the DNS\n   server publishing a zone and the
    HIP node.  DNSSEC does not ensure\n   that the entity publishing the zone is trusted.
    \ Therefore, the RRSIG\n   of the HIP RRSet MUST NOT be misinterpreted as a certificate
    binding\n   the HI and/or the HIT to the owner name.\n   In the absence of a proper
    secure channel, both parties are\n   vulnerable to MitM and Denial-of-Service
    (DoS) attacks, and unrelated\n   parties might be subject to DoS attacks as well.
    \ These threats are\n   described in the following sections.\n"
  - contents:
    - "8.1.  Attacker Tampering with an Insecure HIP RR\n   The HIP RR contains public
      keying material in the form of the named\n   peer's PK (the HI) and its secure
      hash (the HIT).  Both of these are\n   not sensitive to attacks where an adversary
      gains knowledge of them.\n   However, an attacker that is able to mount an active
      attack on the\n   DNS, i.e., tampers with this HIP RR (e.g., using DNS spoofing),
      is\n   able to mount MitM attacks on the cryptographic core of the eventual\n
      \  HIP exchange (Responder's HIP RR rewritten by the attacker).\n   The HIP
      RR may contain an RVS domain name resolved into a destination\n   IP address
      where the named peer is reachable by an I1, as per the HIP\n   Rendezvous Extension
      [RFC8004].  Thus, an attacker that is able to\n   tamper with this RR is able
      to redirect I1 packets sent to the named\n   peer to a chosen IP address for
      DoS or MitM attacks.  Note that this\n   kind of attack is not specific to HIP
      and exists independently of\n   whether or not HIP and the HIP RR are used.
      \ Such an attacker might\n   tamper with A and AAAA RRs as well.\n   An attacker
      might obviously use these two attacks in conjunction: It\n   will replace the
      Responder's HI and RVS IP address by its own in a\n   spoofed DNS packet sent
      to the Initiator HI, and then redirect all\n   exchanged packets to him and
      mount a MitM on HIP.  In this case, HIP\n   won't provide confidentiality nor
      Initiator HI protection from\n   eavesdroppers.\n"
    title: 8.1.  Attacker Tampering with an Insecure HIP RR
  - contents:
    - "8.2.  Hash and HITs Collisions\n   As with many cryptographic algorithms, some
      secure hashes (e.g.,\n   SHA1, used by HIP to generate a HIT from an HI) eventually
      become\n   insecure, because an exploit has been found in which an attacker
      with\n   reasonable computation power breaks one of the security features of\n
      \  the hash (e.g., its supposed collision resistance).  This is why a\n   HIP
      end-node implementation SHOULD NOT authenticate its HIP peers\n   based solely
      on a HIT retrieved from the DNS, but rather SHOULD use\n   HI-based authentication.\n"
    title: 8.2.  Hash and HITs Collisions
  - contents:
    - "8.3.  DNSSEC\n   In the absence of DNSSEC, the HIP RR is subject to the threats\n
      \  described in RFC 3833 [RFC3833].\n"
    title: 8.3.  DNSSEC
  title: 8.  Security Considerations
- contents:
  - "9.  IANA Considerations\n   [RFC5205], obsoleted by this document, made the following
    definition\n   and reservation in the \"Resource Record (RR) TYPEs\" subregistry
    under\n   \"Domain Name System (DNS) Parameters\":\n   Value   Type\n   -----
    \  ----\n   55      HIP\n   In the \"Resource Record (RR) TYPEs\" subregistry
    under \"Domain Name\n   System (DNS) Parameters\", references to [RFC5205] have
    been replaced\n   by references to this document.\n   As [RFC5205], this document
    reuses the Algorithm Types defined by\n   [RFC4025] for the IPSEC KEY RR.  Presently
    defined values are shown\n   here for reference only:\n   Value   Description\n
    \  -----   --------------------------------------------------------\n     1     A
    DSA key is present, in the format defined in [RFC2536]\n     2     A RSA key is
    present, in the format defined in [RFC3110]\n   IANA has made the following assignment
    in the \"Algorithm Type Field\"\n   subregistry under \"IPSECKEY Resource Record
    Parameters\" [RFC4025]:\n   Value   Description\n   -----   -----------\n     3
    \    An ECDSA key is present, in the format defined in [RFC6605]\n"
  title: 9.  IANA Considerations
- contents:
  - '10.  References

    '
  - contents:
    - "10.1.  Normative References\n   [RFC1034]  Mockapetris, P., \"Domain names
      - concepts and facilities\",\n              STD 13, RFC 1034, DOI 10.17487/RFC1034,
      November 1987,\n              <http://www.rfc-editor.org/info/rfc1034>.\n   [RFC1035]
      \ Mockapetris, P., \"Domain names - implementation and\n              specification\",
      STD 13, RFC 1035, DOI 10.17487/RFC1035,\n              November 1987, <http://www.rfc-editor.org/info/rfc1035>.\n
      \  [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement
      Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n
      \             <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC2181]  Elz,
      R. and R. Bush, \"Clarifications to the DNS\n              Specification\",
      RFC 2181, DOI 10.17487/RFC2181, July 1997,\n              <http://www.rfc-editor.org/info/rfc2181>.\n
      \  [RFC3596]  Thomson, S., Huitema, C., Ksinant, V., and M. Souissi,\n              \"DNS
      Extensions to Support IP Version 6\", RFC 3596,\n              DOI 10.17487/RFC3596,
      October 2003,\n              <http://www.rfc-editor.org/info/rfc3596>.\n   [RFC4025]
      \ Richardson, M., \"A Method for Storing IPsec Keying\n              Material
      in DNS\", RFC 4025, DOI 10.17487/RFC4025, March\n              2005, <http://www.rfc-editor.org/info/rfc4025>.\n
      \  [RFC4033]  Arends, R., Austein, R., Larson, M., Massey, D., and S.\n              Rose,
      \"DNS Security Introduction and Requirements\",\n              RFC 4033, DOI
      10.17487/RFC4033, March 2005,\n              <http://www.rfc-editor.org/info/rfc4033>.\n
      \  [RFC4034]  Arends, R., Austein, R., Larson, M., Massey, D., and S.\n              Rose,
      \"Resource Records for the DNS Security Extensions\",\n              RFC 4034,
      DOI 10.17487/RFC4034, March 2005,\n              <http://www.rfc-editor.org/info/rfc4034>.\n
      \  [RFC4035]  Arends, R., Austein, R., Larson, M., Massey, D., and S.\n              Rose,
      \"Protocol Modifications for the DNS Security\n              Extensions\", RFC
      4035, DOI 10.17487/RFC4035, March 2005,\n              <http://www.rfc-editor.org/info/rfc4035>.\n
      \  [RFC4648]  Josefsson, S., \"The Base16, Base32, and Base64 Data\n              Encodings\",
      RFC 4648, DOI 10.17487/RFC4648, October 2006,\n              <http://www.rfc-editor.org/info/rfc4648>.\n
      \  [RFC6605]  Hoffman, P. and W. Wijngaards, \"Elliptic Curve Digital\n              Signature
      Algorithm (DSA) for DNSSEC\", RFC 6605,\n              DOI 10.17487/RFC6605,
      April 2012,\n              <http://www.rfc-editor.org/info/rfc6605>.\n   [RFC7401]
      \ Moskowitz, R., Ed., Heer, T., Jokela, P., and T.\n              Henderson,
      \"Host Identity Protocol Version 2 (HIPv2)\",\n              RFC 7401, DOI 10.17487/RFC7401,
      April 2015,\n              <http://www.rfc-editor.org/info/rfc7401>.\n   [RFC8004]
      \ Laganier, J. and L. Eggert, \"Host Identity Protocol (HIP)\n              Rendezvous
      Extension\", RFC 8004, DOI 10.17487/RFC8004,\n              October 2016, <http://www.rfc-editor.org/info/rfc8004>.\n"
    title: 10.1.  Normative References
  - contents:
    - "10.2.  Informative References\n   [RFC2536]  Eastlake 3rd, D., \"DSA KEYs and
      SIGs in the Domain Name\n              System (DNS)\", RFC 2536, DOI 10.17487/RFC2536,
      March 1999,\n              <http://www.rfc-editor.org/info/rfc2536>.\n   [RFC3110]
      \ Eastlake 3rd, D., \"RSA/SHA-1 SIGs and RSA KEYs in the\n              Domain
      Name System (DNS)\", RFC 3110, DOI 10.17487/RFC3110,\n              May 2001,
      <http://www.rfc-editor.org/info/rfc3110>.\n   [RFC3833]  Atkins, D. and R. Austein,
      \"Threat Analysis of the Domain\n              Name System (DNS)\", RFC 3833,
      DOI 10.17487/RFC3833, August\n              2004, <http://www.rfc-editor.org/info/rfc3833>.\n
      \  [RFC4423]  Moskowitz, R. and P. Nikander, \"Host Identity Protocol\n              (HIP)
      Architecture\", RFC 4423, DOI 10.17487/RFC4423, May\n              2006, <http://www.rfc-editor.org/info/rfc4423>.\n
      \  [RFC5205]  Nikander, P. and J. Laganier, \"Host Identity Protocol\n              (HIP)
      Domain Name System (DNS) Extensions\", RFC 5205,\n              DOI 10.17487/RFC5205,
      April 2008,\n              <http://www.rfc-editor.org/info/rfc5205>.\n   [RFC5206]
      \ Nikander, P., Henderson, T., Ed., Vogt, C., and J. Arkko,\n              \"End-Host
      Mobility and Multihoming with the Host Identity\n              Protocol\", RFC
      5206, DOI 10.17487/RFC5206, April 2008,\n              <http://www.rfc-editor.org/info/rfc5206>.\n"
    title: 10.2.  Informative References
  title: 10.  References
- contents:
  - "Appendix A.  Changes from RFC 5205\n   o  Updated HIP references to revised HIP
    specifications.\n   o  Extended DNS HIP RR to support for Host Identities based
    on ECDSA.\n   o  Clarified that new query must be made when the time that passed\n
    \     since an RR was retrieved exceeds the TTL of the RR.\n   o  Added considerations
    related to multiple HIP RRs being associated\n      with a single name.\n   o
    \ Clarified that the Base64 encoding in use is as per Section 4 of\n      [RFC4648].\n
    \  o  Clarified the wire format when more than one RVS is defined in one\n      RR.\n
    \  o  Clarified that \"whitespace\" is used as the delimiter in the human-\n      readable
    representation of the RR but is not part of the wire\n      format.\n"
  title: Appendix A.  Changes from RFC 5205
- contents:
  - "Acknowledgments\n   As usual in the IETF, this document is the result of a collaboration\n
    \  between many people.  The authors would like to thank the author\n   (Michael
    Richardson), contributors, and reviewers of the IPSECKEY RR\n   [RFC4025] specification,
    after which this document was framed.  The\n   authors would also like to thank
    the following people, who have\n   provided thoughtful and helpful discussions
    and/or suggestions, that\n   have helped improve this document: Jeff Ahrenholz,
    Rob Austein, Hannu\n   Flinck, Olafur Gudmundsson, Tom Henderson, Peter Koch,
    Olaf Kolkman,\n   Miika Komu, Andrew McGregor, Gabriel Montenegro, and Erik Nordmark.\n
    \  Some parts of this document stem from the HIP specification\n   [RFC7401].
    \ Finally, thanks to Sheng Jiang for performing the\n   Internet Area Directorate
    review of this document in the course of\n   the publication process.\n"
  title: Acknowledgments
- contents:
  - "Contributors\n   Pekka Nikander coauthored an earlier, experimental version of
    this\n   specification [RFC5205].\n"
  title: Contributors
- contents:
  - "Author's Address\n   Julien Laganier\n   Luminate Wireless, Inc.\n   Cupertino,
    CA\n   United States of America\n   Email: julien.ietf@gmail.com\n"
  title: Author's Address
