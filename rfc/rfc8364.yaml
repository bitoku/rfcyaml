- title: __initial_text__
  contents:
  - '         PIM Flooding Mechanism (PFM) and Source Discovery (SD)

    '
- title: Abstract
  contents:
  - "Abstract\n   Protocol Independent Multicast - Sparse Mode (PIM-SM) uses a\n \
    \  Rendezvous Point (RP) and shared trees to forward multicast packets\n   from\
    \ new sources.  Once Last-Hop Routers (LHRs) receive packets from\n   a new source,\
    \ they may join the Shortest Path Tree (SPT) for the\n   source for optimal forwarding.\
    \  This document defines a new mechanism\n   that provides a way to support PIM-SM\
    \ without the need for PIM\n   registers, RPs, or shared trees.  Multicast source\
    \ information is\n   flooded throughout the multicast domain using a new generic\
    \ PIM\n   Flooding Mechanism (PFM).  This allows LHRs to learn about new\n   sources\
    \ without receiving initial data packets.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for examination, experimental implementation, and\n   evaluation.\n\
    \   This document defines an Experimental Protocol for the Internet\n   community.\
    \  This document is a product of the Internet Engineering\n   Task Force (IETF).\
    \  It represents the consensus of the IETF\n   community.  It has received public\
    \ review and has been approved for\n   publication by the Internet Engineering\
    \ Steering Group (IESG).  Not\n   all documents approved by the IESG are candidates\
    \ for any level of\n   Internet Standard; see Section 2 of RFC 7841.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8364.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2018 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n     1.1.  Conventions Used in This Document . . . . . . . .\
    \ . . . .   4\n     1.2.  Terminology . . . . . . . . . . . . . . . . . . . .\
    \ . . .   4\n   2.  Testing and Deployment Experiences  . . . . . . . . . . .\
    \ . .   5\n   3.  A Generic PIM Flooding Mechanism  . . . . . . . . . . . . .\
    \ .   5\n     3.1.  PFM Message Format  . . . . . . . . . . . . . . . . . . .\
    \   6\n     3.2.  Administrative Boundaries . . . . . . . . . . . . . . . .  \
    \ 7\n     3.3.  Originating PFM Messages  . . . . . . . . . . . . . . . .   7\n\
    \     3.4.  Processing PFM Messages . . . . . . . . . . . . . . . . .   9\n  \
    \     3.4.1.  Initial Checks  . . . . . . . . . . . . . . . . . . .   9\n    \
    \   3.4.2.  Processing and Forwarding of PFM Messages . . . . . .  10\n   4. \
    \ Distributing SG Mappings  . . . . . . . . . . . . . . . . . .  11\n     4.1.\
    \  Group Source Holdtime TLV . . . . . . . . . . . . . . . .  11\n     4.2.  Originating\
    \ Group Source Holdtime TLVs  . . . . . . . . .  12\n     4.3.  Processing GSH\
    \ TLVs . . . . . . . . . . . . . . . . . . .  13\n     4.4.  The First Packets\
    \ and Bursty Sources  . . . . . . . . . .  13\n     4.5.  Resiliency to Network\
    \ Partitioning  . . . . . . . . . . .  14\n   5.  Configurable Parameters . .\
    \ . . . . . . . . . . . . . . . . .  15\n   6.  Security Considerations . . .\
    \ . . . . . . . . . . . . . . . .  15\n   7.  IANA Considerations . . . . . .\
    \ . . . . . . . . . . . . . . .  16\n   8.  References  . . . . . . . . . . .\
    \ . . . . . . . . . . . . . .  16\n     8.1.  Normative References  . . . . .\
    \ . . . . . . . . . . . . .  16\n     8.2.  Informative References  . . . . .\
    \ . . . . . . . . . . . .  17\n   Acknowledgments . . . . . . . . . . . . . .\
    \ . . . . . . . . . . .  18\n   Authors' Addresses  . . . . . . . . . . . . .\
    \ . . . . . . . . . .  18\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Protocol Independent Multicast - Sparse Mode (PIM-SM) [RFC7761]\
    \ uses\n   a Rendezvous Point (RP) and shared trees to forward multicast packets\n\
    \   to Last-Hop Routers (LHRs).  After the first packet is received by an\n  \
    \ LHR, the source of the multicast stream is learned and the Shortest\n   Path\
    \ Tree (SPT) can be joined.  This document defines a new mechanism\n   that provides\
    \ a way to support PIM-SM without the need for PIM\n   registers, RPs, or shared\
    \ trees.  Multicast source information is\n   flooded throughout the multicast\
    \ domain using a new generic PIM\n   flooding mechanism.  By removing the need\
    \ for RPs and shared trees,\n   the PIM-SM procedures are simplified, thus improving\
    \ router\n   operations and management, and making the protocol more robust.\n\
    \   Also, the data packets are only sent on the SPTs, providing optimal\n   forwarding.\n\
    \   This mechanism has some similarities to Protocol Independent\n   Multicast\
    \ - Dense Mode (PIM-DM) with its State-Refresh signaling\n   [RFC3973], except\
    \ that there is no initial flooding of data packets\n   for new sources.  It provides\
    \ the traffic efficiency of PIM-SM, while\n   being as easy to deploy as PIM-DM.\
    \  The downside is that it cannot\n   provide forwarding of initial packets from\
    \ a new source, see\n   Section 4.4.  PIM-DM is very different from PIM-SM; it's\
    \ not as\n   mature, it is categorized as Experimental not an Internet Standard,\n\
    \   and there are only a few implementations of it.  The solution in this\n  \
    \ document consists of a lightweight source discovery mechanism on top\n   of\
    \ the Source-Specific Multicast (SSM) [RFC4607] parts of PIM-SM.  It\n   is feasible\
    \ to implement only a subset of PIM-SM to provide SSM\n   support and, in addition,\
    \ implement the mechanism in this document to\n   offer a source discovery mechanism\
    \ for applications that do not\n   provide their own source discovery.\n   This\
    \ document defines a generic flooding mechanism for distributing\n   information\
    \ throughout a PIM domain.  While the forwarding rules are\n   largely similar\
    \ to the Bootstrap Router (BSR) mechanism [RFC5059],\n   any router can originate\
    \ information; this allows for flooding of any\n   kind of information.  Each\
    \ message contains one or more pieces of\n   information encoded as TLVs.  This\
    \ document defines one TLV used for\n   distributing information about active\
    \ multicast sources.  Other\n   documents may define additional TLVs.\n   Note\
    \ that this document is an Experimental RFC.  While the flooding\n   mechanism\
    \ is largely similar to BSR, there are some concerns about\n   scale as there\
    \ can be multiple routers distributing information, and\n   potentially a larger\
    \ amount of data that needs to be processed and\n   stored.  Distributing knowledge\
    \ of active sources in this way is new;\n   there are some concerns, mainly regarding\
    \ potentially large amounts\n   of source states that need to be distributed.\
    \  While there has been\n   some testing in the field, we need to learn more about\
    \ the forwarding\n   efficiency, both the amount of processing per router, propagation\n\
    \   delay, and the amount of state that can be distributed.  In\n   particular,\
    \ how many active sources one can support without consuming\n   too many resources.\
    \  There are also parameters, see Section 5, that\n   can be tuned regarding how\
    \ frequently information is distributed.  It\n   is not clear what parameters\
    \ are useful for different types of\n   networks.\n"
- title: 1.1.  Conventions Used in This Document
  contents:
  - "1.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be\
    \ interpreted as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when,\
    \ they appear in all\n   capitals, as shown here.\n"
- title: 1.2.  Terminology
  contents:
  - "1.2.  Terminology\n   RP:  Rendezvous Point\n   BSR:  Bootstrap Router\n   RPF:\
    \  Reverse Path Forwarding\n   SPT:  Shortest Path Tree\n   FHR:  First-Hop Router,\
    \ directly connected to the source\n   LHR:  Last-Hop Router, directly connected\
    \ to the receiver\n   PFM:  PIM Flooding Mechanism\n   PFM-SD:  PFM Source Discovery\n\
    \   SG Mapping:  Multicast source group (SG) mapping\n"
- title: 2.  Testing and Deployment Experiences
  contents:
  - "2.  Testing and Deployment Experiences\n   A prototype of this specification\
    \ has been implemented, and there has\n   been some limited testing in the field.\
    \  The prototype was tested in\n   a network with low-bandwidth radio links. \
    \ The network has frequent\n   topology changes, including frequent link or router\
    \ failures.\n   Previously existing mechanisms were tested (for example, PIM-SM\
    \ and\n   PIM-DM).\n   With PIM-SM, the existing RP election mechanisms were found\
    \ to be too\n   slow.  With PIM-DM, issues were observed with new multicast sources\n\
    \   starving low-bandwidth links even when there were no receivers; in\n   some\
    \ cases, so much so that there was no bandwidth left for prune\n   messages.\n\
    \   For the PFM-SD prototype tests, all routers were configured to send\n   PFM-SD\
    \ for the directly connected source and to cache received\n   announcements. \
    \ Applications such as SIP with multicast subscriber\n   discovery, multicast\
    \ voice conferencing, position tracking, and NTP\n   were successfully tested.\
    \  The tests went quite well.  Packets were\n   rerouted as needed; there was\
    \ no unnecessary forwarding of packets.\n   Ease of configuration was seen as\
    \ a plus.\n"
- title: 3.  A Generic PIM Flooding Mechanism
  contents:
  - "3.  A Generic PIM Flooding Mechanism\n   The Bootstrap Router (BSR) mechanism\
    \ [RFC5059] is a commonly used\n   mechanism for distributing dynamic Group-to-RP\
    \ mappings in PIM.  It\n   is responsible for flooding information about such\
    \ mappings\n   throughout a PIM domain so that all routers in the domain can have\n\
    \   the same information.  BSR, as defined, is only able to distribute\n   Group-to-RP\
    \ mappings.  This document defines a more generic mechanism\n   that can flood\
    \ any kind of information.  Administrative boundaries,\n   see Section 3.2, may\
    \ be configured to limit to which parts of a\n   network the information is flooded.\n\
    \   The forwarding rules are identical to BSR, except that one can\n   control\
    \ whether routers should forward unsupported data types.  For\n   some types of\
    \ information, it is quite useful that it can be\n   distributed without all routers\
    \ having to support the particular\n   type, while there may also be types where\
    \ it is necessary for every\n   single router to support it.  The mechanism includes\
    \ an originator\n   address that is used for RPF checking to restrict the flooding\
    \ and\n   prevent loops, just like BSR.  Like BSR, messages are forwarded hop-\n\
    \   by-hop; the messages are link-local, and each router will process and\n  \
    \ resend the messages.  Note that there is no equivalent to the BSR\n   election\
    \ mechanism; there can be multiple originators.  This\n   mechanism is named the\
    \ PIM Flooding Mechanism (PFM).\n"
- title: 3.1.  PFM Message Format
  contents:
  - "3.1.  PFM Message Format\n       0                   1                   2  \
    \                 3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |PIM Ver| Type  |N|  Reserved   |           Checksum            |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \            Originator Address (Encoded-Unicast format)        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |T|          Type 1             |          Length 1             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                            Value 1                            |\n      |   \
    \                            .                               |\n      |      \
    \                         .                               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                               .                               |\n   \
    \   |                               .                               |\n      |T|\
    \          Type n             |          Length n             |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                            Value n                            |\n   \
    \   |                               .                               |\n      |\
    \                               .                               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   PIM Version, Reserved, and Checksum:  As specified in [RFC7761].\n   Type:\
    \  PIM Message Type.  Value 12 for a PFM message.\n   [N]o-Forward bit:  When\
    \ set, this bit means that the PFM message is\n      not to be forwarded.  This\
    \ bit is defined to prevent Bootstrap\n      message forwarding in [RFC5059].\n\
    \   Originator Address:  The address of the router that originated the\n     \
    \ message.  This can be any address assigned to the originating\n      router,\
    \ but it MUST be routable in the domain to allow successful\n      forwarding.\
    \  The format for this address is given in the Encoded-\n      Unicast address\
    \ in [RFC7761].\n   [T]ransitive bit:  Each TLV in the message includes a bit\
    \ called the\n      \"Transitive\" bit that controls whether the TLV is forwarded\
    \ by\n      routers that do not support the given type.  See Section 3.4.2.\n\
    \   Type 1..n:  A message contains one or more TLVs, in this case n TLVs.\n  \
    \    The Type specifies what kind of information is in the Value.  The\n     \
    \ Type range is from 0 to 32767 (15 bits).\n   Length 1..n:  The length of the\
    \ Value field in octets.\n   Value 1..n:  The value associated with the type and\
    \ of the specified\n      length.\n"
- title: 3.2.  Administrative Boundaries
  contents:
  - "3.2.  Administrative Boundaries\n   PFM messages are generally forwarded hop-by-hop\
    \ to all PIM routers.\n   However, similar to BSR, one may configure administrative\
    \ boundaries\n   to limit the information to certain domains or parts of the network.\n\
    \   Implementations MUST have a way of defining a set of interfaces on a\n   router\
    \ as administrative boundaries for all PFM messages or,\n   optionally, for certain\
    \ TLVs, allowing for different boundaries for\n   different TLVs.  Usually, one\
    \ wants boundaries to be bidirectional,\n   but an implementation MAY also provide\
    \ unidirectional boundaries.\n   When forwarding a message, a router MUST NOT\
    \ send it out on an\n   interface that is an outgoing boundary, including a bidirectional\n\
    \   boundary, for all PFM messages.  If an interface is an outgoing\n   boundary\
    \ for certain TLVs, the message MUST NOT be sent out on the\n   interface if it\
    \ is a boundary for all the TLVs in the message.\n   Otherwise, the router MUST\
    \ remove all the boundary TLVs from the\n   message and send the message with\
    \ the remaining TLVs.  Also, when\n   receiving a PFM message on an interface,\
    \ the message MUST be\n   discarded if the interface is an incoming boundary,\
    \ including a\n   bidirectional boundary, for all PFM messages.  If the interface\
    \ is an\n   incoming boundary for certain TLVs, the router MUST ignore all\n \
    \  boundary TLVs.  If all the TLVs in the message are boundary TLVs,\n   then\
    \ the message is effectively ignored.  Note that when forwarding\n   an incoming\
    \ message, the boundary is applied before forwarding.  If\n   the message was\
    \ discarded or all the TLVs were ignored, then no\n   message is forwarded.  When\
    \ a message is forwarded, it MUST NOT\n   contain any TLVs for which the incoming\
    \ interface is an incoming or\n   bidirectional boundary.\n"
- title: 3.3.  Originating PFM Messages
  contents:
  - "3.3.  Originating PFM Messages\n   A router originates a PFM message when it\
    \ needs to distribute\n   information using a PFM message to other routers in\
    \ the network.\n   When a message is originated depends on what information is\n\
    \   distributed.  For instance, this document defines a TLV to distribute\n  \
    \ information about active sources.  When a router has a new active\n   source,\
    \ a PFM message should be sent as soon as possible.  Hence, a\n   PFM message\
    \ should be sent every time there is a new active source.\n   However, the TLV\
    \ also contains a holdtime and PFM messages need to be\n   sent periodically.\
    \  Generally speaking, a PFM message would typically\n   be sent when there is\
    \ a local state change, causing information to be\n   distributed with the PFM\
    \ to change.  Also, some information may need\n   to be sent periodically.  These\
    \ messages are called \"triggered\" and\n   \"periodic\" messages, respectively.\
    \  Each TLV definition will need to\n   define when a triggered PFM message needs\
    \ to be originated, whether\n   or not to send periodic messages, and how frequently\
    \ to send them.\n   A router MUST NOT originate more than Max_PFM_Message_Rate\
    \ messages\n   per minute.  This document does not mandate how this should be\n\
    \   implemented; some possible ways could be having a minimal time\n   between\
    \ each message, counting the number of messages originated and\n   resetting the\
    \ count every minute, or using a leaky bucket algorithm.\n   One benefit of using\
    \ a leaky bucket algorithm is that it can handle\n   bursts better.  The default\
    \ value of Max_PFM_Message_Rate is 6.  The\n   value MUST be configurable.  Depending\
    \ on the network, one may want\n   to use a larger value of Max_PFM_Message_Rate\
    \ to favor propagation of\n   new information, but with a large number of routers\
    \ and many updates,\n   the total number of messages might become too large and\
    \ require too\n   much processing.\n   There MUST be a minimum of Min_PFM_Message_Gap\
    \ milliseconds between\n   each originated message.  The default value of Min_PFM_Message_Gap\
    \ is\n   1000 (1 second).  The value MUST be configurable.\n   Unless otherwise\
    \ specified by the TLV definitions, there is no\n   relationship between different\
    \ TLVs, and an implementation can choose\n   whether to combine TLVs in one message\
    \ or across separate messages.\n   It is RECOMMENDED to combine multiple TLVs\
    \ in one message to reduce\n   the number of messages, but it is also RECOMMENDED\
    \ that the message\n   be small enough to avoid fragmentation at the IP layer.\
    \  When a\n   triggered PFM message needs to be sent due to a state change, a\n\
    \   router MAY send a message containing only the information that\n   changed.\
    \  If there are many changes occurring at about the same time,\n   it might be\
    \ possible to combine multiple changes in one message.  In\n   the case where\
    \ periodic messages are also needed, an implementation\n   MAY include periodic\
    \ PFM information in a triggered PFM.  For\n   example, if some information needs\
    \ to be sent every 60 seconds and a\n   triggered PFM message is about to be sent\
    \ 20 seconds before the next\n   periodic PFM message was scheduled, the triggered\
    \ PFM message might\n   include the periodic information and the next periodic\
    \ PFM message\n   can then be scheduled 60 seconds after that rather than 20 seconds\n\
    \   later.\n   When a router originates a PFM message, it puts one of its own\n\
    \   addresses in the originator field.  An implementation MUST allow an\n   administrator\
    \ to configure which address is used.  For a message to\n   be received by all\
    \ routers in a domain, all the routers need to have\n   a route for this address\
    \ due to the RPF-based forwarding.  Hence, an\n   administrator needs to be careful\
    \ about which address to choose.\n   When this is not configured, an implementation\
    \ MUST NOT use a link-\n   local address.  It is RECOMMENDED to use an address\
    \ of a virtual\n   interface such that the originator can remain unchanged and\
    \ routable\n   independent of which physical interfaces or links may go down.\n\
    \   The No-Forward bit MUST NOT be set, except for the case when a router\n  \
    \ receives a PIM Hello from a new neighbor or a PIM Hello with a new\n   Generation\
    \ Identifier (GenID), defined in [RFC7761], is received from\n   an existing neighbor.\
    \  In that case, an implementation MAY send PFM\n   messages containing relevant\
    \ information so that the neighbor can\n   quickly get the correct state.  The\
    \ definition of the different PFM\n   message TLVs needs to specify what, if anything,\
    \ needs to be sent in\n   this case.  If such a PFM message is sent, the No-Forward\
    \ bit MUST be\n   set, and the message must be sent within 60 seconds after the\n\
    \   neighbor state change.  The processing rules for PFM messages will\n   ensure\
    \ that any other neighbors on the same link ignore the message.\n   This behavior\
    \ (and the choice of 60 seconds) is similar to what is\n   defined for the No-Forward\
    \ bit in [RFC5059].\n"
- title: 3.4.  Processing PFM Messages
  contents:
  - "3.4.  Processing PFM Messages\n   A router that receives a PFM message MUST perform\
    \ the initial checks\n   specified here.  If the checks fail, the message MUST\
    \ be dropped.  An\n   error MAY be logged; otherwise, the message MUST be dropped\
    \ silently.\n   If the checks pass, the contents are processed according to the\n\
    \   processing rules of the included TLVs.\n"
- title: 3.4.1.  Initial Checks
  contents:
  - "3.4.1.  Initial Checks\n   In order to do further processing, a message MUST\
    \ meet the following\n   requirements.  The message MUST be from a directly connected\
    \ PIM\n   neighbor and the destination address MUST be ALL-PIM-ROUTERS.  Also,\n\
    \   the interface MUST NOT be an incoming, nor a bidirectional,\n   administrative\
    \ boundary for PFM messages, see Section 3.2.  If the\n   No-Forward bit is not\
    \ set, the message MUST be from the RPF neighbor\n   of the originator address.\
    \  If the No-Forward bit is set, this\n   system, the router doing these checks,\
    \ MUST have enabled the PIM\n   protocol within the last 60 seconds.  See Section\
    \ 3.3 for details.\n   In pseudocode, the algorithm is as follows:\n        if\
    \ ((DirectlyConnected(PFM.src_ip_address) == FALSE) OR\n            (PFM.src_ip_address\
    \ is not a PIM neighbor) OR\n            (PFM.dst_ip_address != ALL-PIM-ROUTERS)\
    \ OR\n            (Incoming interface is admin boundary for PFM)) {\n        \
    \    drop the message silently, optionally log error.\n        }\n        if (PFM.no_forward_bit\
    \ == 0) {\n            if (PFM.src_ip_address !=\n                RPF_neighbor(PFM.originator_ip_address))\
    \ {\n                drop the message silently, optionally log error.\n      \
    \      }\n        } else if (more than 60 seconds elapsed since PIM enabled))\
    \ {\n            drop the message silently, optionally log error.\n        }\n\
    \   Note that \"src_ip_address\" is the source address in the IP header of\n \
    \  the PFM message.  \"Originator\" is the originator field inside the PFM\n \
    \  message and is the router that originated the message.  When the\n   message\
    \ is forwarded hop-by-hop, the originator address never\n   changes, while the\
    \ source address will be an address belonging to the\n   router that last forwarded\
    \ the message.\n"
- title: 3.4.2.  Processing and Forwarding of PFM Messages
  contents:
  - "3.4.2.  Processing and Forwarding of PFM Messages\n   When the message is received,\
    \ the initial checks above must be\n   performed.  If it passes the checks, then\
    \ for each included TLV,\n   perform processing according to the specification\
    \ for that TLV.\n   After processing, the message is forwarded.  Some TLVs may\
    \ be omitted\n   or modified in the forwarded message.  This depends on administrative\n\
    \   boundaries (see Section 3.2), the type specification, and the setting\n  \
    \ of the Transitive bit for the TLV.  If a router supports the type,\n   then\
    \ the TLV is forwarded with no changes unless otherwise specified\n   by the type\
    \ specification.  A router not supporting the given type\n   MUST include the\
    \ TLV in the forwarded message if and only if the\n   Transitive bit is set. \
    \ Whether or not a router supports the type,\n   the value of the Transitive bit\
    \ MUST be preserved if the TLV is\n   included in the forwarded message.  The\
    \ message is forwarded out of\n   all interfaces with PIM neighbors (including\
    \ the interface it was\n   received on).  As specified in Section 3.2, if an interface\
    \ is an\n   outgoing boundary for any TLVs, the message MUST NOT be sent out on\n\
    \   the interface if it is an outgoing boundary for all the TLVs in the\n   message.\
    \  Otherwise, the router MUST remove any outgoing boundary\n   TLVs of the interface\
    \ from the message and send the message out that\n   interface with the remaining\
    \ TLVs.\n"
- title: 4.  Distributing SG Mappings
  contents:
  - "4.  Distributing SG Mappings\n   The generic PFM defined in the previous section\
    \ can be used for\n   distributing SG mappings about active multicast sources\
    \ throughout a\n   PIM domain.  A Group Source Holdtime (GSH) TLV is defined for\
    \ this\n   purpose.\n"
- title: 4.1.  Group Source Holdtime TLV
  contents:
  - "4.1.  Group Source Holdtime TLV\n       0                   1               \
    \    2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |1|         Type = 1              |          Length             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \              Group Address (Encoded-Group format)             |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |            Src Count          |        Src Holdtime           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \            Src Address 1 (Encoded-Unicast format)             |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |            Src Address 2 (Encoded-Unicast format)             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                               .                               |\n      |   \
    \                            .                               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |            Src Address m (Encoded-Unicast format)             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   1: \
    \ The Transitive bit is set to 1.  This means that this type will\n      be forwarded\
    \ even if a router does not support it.  See\n      Section 3.4.2.\n   Type: \
    \ This TLV has type 1.\n   Length:  The length of the value in octets.\n   Group\
    \ Address:  The group that sources are to be announced for.  The\n      format\
    \ for this address is given in the Encoded-Group format in\n      [RFC7761].\n\
    \   Src Count:  The number of source addresses that are included.\n   Src Holdtime:\
    \  The holdtime (in seconds) for the included source(s).\n   Src Address:  The\
    \ source address for the corresponding group.  The\n      format for these addresses\
    \ is given in the Encoded-Unicast address\n      in [RFC7761].\n"
- title: 4.2.  Originating Group Source Holdtime TLVs
  contents:
  - "4.2.  Originating Group Source Holdtime TLVs\n   A PFM message MAY contain one\
    \ or more Group Source Holdtime (GSH)\n   TLVs.  This is used to flood information\
    \ about active multicast\n   sources.  Each FHR that is directly connected to\
    \ an active multicast\n   source originates PFM messages containing GSH TLVs.\
    \  How a multicast\n   router discovers the source of the multicast packet, and\
    \ when it\n   considers itself the FHR, follows the same procedures as the\n \
    \  registering process described in [RFC7761].  When an FHR has decided\n   that\
    \ a register needs to be sent per [RFC7761], the SG is not\n   registered via\
    \ the PIM-SM register procedures, but the SG mapping is\n   included in a GSH\
    \ TLV in a PFM message.  Note that only the SG\n   mapping is distributed in the\
    \ message: not the entire packet as would\n   have been done with a PIM register.\n\
    \   The PFM messages containing the GSH TLV are sent periodically for as\n   long\
    \ as the multicast source is active, similar to how PIM registers\n   are sent\
    \ periodically.  This means that as long as the source is\n   active, it is included\
    \ in a PFM message originated every\n   Group_Source_Holdtime_Period seconds,\
    \ within the general PFM timing\n   requirements in Section 3.3.  The default\
    \ value of\n   Group_Source_Holdtime_Period is 60.  The value MUST be configurable.\n\
    \   The holdtime for the source MUST be set to either zero or\n   Group_Source_Holdtime_Holdtime.\
    \  The value of the\n   Group_Source_Holdtime_Holdtime parameter MUST be larger\
    \ than\n   Group_Source_Holdtime_Period.  It is RECOMMENDED to be 3.5 times the\n\
    \   Group_Source_Holdtime_Period.  The default value is 210 (seconds).\n   The\
    \ value MUST be configurable.  A source MAY be announced with a\n   holdtime of\
    \ zero to indicate that the source is no longer active.\n   If an implementation\
    \ supports originating GSH TLVs with different\n   holdtimes for different sources,\
    \ it can (if needed) send multiple\n   TLVs with the same group address.  Due\
    \ to the format, all the sources\n   in the same TLV have the same holdtime.\n\
    \   When a new source is detected, an implementation MAY send a PFM\n   message\
    \ containing just that particular source.  However, it MAY also\n   include information\
    \ about other sources that were just detected,\n   sources that are scheduled\
    \ for periodic announcement later, or other\n   types of information.  See Section\
    \ 3.3 for details.  Note that when a\n   new source is detected, one should trigger\
    \ the sending of a PFM\n   message as soon as possible; whereas if a source becomes\
    \ inactive,\n   there is no reason to trigger a message.  There is no urgency\
    \ in\n   removing state for inactive sources.  Note that the message timing\n\
    \   requirements in Section 3.3 apply.  This means that one cannot always\n  \
    \ send a triggered message immediately when a new source is detected.\n   In order\
    \ to meet the timing requirements, the sending of the message\n   may have to\
    \ be delayed for a small amount of time.\n   When a new PIM neighbor is detected\
    \ or an existing neighbor changes\n   GenID, an implementation MAY send a triggered\
    \ PFM message containing\n   GSH TLVs for any SG mappings it has learned by receiving\
    \ PFM GSH TLVs\n   as well as any active directly connected sources.  See Section\
    \ 3.3\n   for further details.\n"
- title: 4.3.  Processing GSH TLVs
  contents:
  - "4.3.  Processing GSH TLVs\n   A router that receives a PFM message containing\
    \ GSH TLVs MUST parse\n   the GSH TLVs and store each of them as SG mappings with\
    \ an Expiry\n   Timer started with the advertised holdtime, that is, unless the\n\
    \   implementation specifically does not support GSH TLVs, the router is\n   configured\
    \ to ignore GSH TLVs in general, or it is configured to\n   ignore GSH TLVs for\
    \ certain sources or groups.  In particular, an\n   administrator might configure\
    \ a router not to process GSH TLVs if the\n   router is known never to have any\
    \ directly connected receivers.\n   For each group that has directly connected\
    \ receivers, this router\n   SHOULD send PIM (S,G) joins for all the SG mappings\
    \ advertised in the\n   message for the group.  Generally, joins are sent, but\
    \ there could\n   be, for instance, an administrative policy limiting which sources\
    \ and\n   groups to join.  The SG mappings are kept alive for as long as the\n\
    \   Expiry Timer for the source is running.  Once the Expiry Timer\n   expires,\
    \ a PIM router MAY send a PIM (S,G) prune to remove itself\n   from the tree.\
    \  However, when this happens, there should be no more\n   packets sent by the\
    \ source, so it may be desirable to allow the state\n   to time out rather than\
    \ sending a prune.\n   Note that a holdtime of zero has a special meaning.  It\
    \ is to be\n   treated as if the source just expired, and then the state should\
    \ be\n   removed.  Source information MUST NOT be removed due to the source\n\
    \   being omitted in a message.  For instance, if there are a large\n   number\
    \ of sources for a group, there may be multiple PFM messages,\n   each message\
    \ containing a different list of sources for the group.\n"
- title: 4.4.  The First Packets and Bursty Sources
  contents:
  - "4.4.  The First Packets and Bursty Sources\n   The PIM register procedure is\
    \ designed to deliver multicast packets\n   to the RP in the absence of an SPT\
    \ from the RP to the source.  The\n   register packets received on the RP are\
    \ decapsulated and forwarded\n   down the shared tree to the LHRs.  As soon as\
    \ an SPT is built,\n   multicast packets would flow natively over the SPT to the\
    \ RP or LHR\n   and the register process would stop.  The PIM register process\n\
    \   ensures packet delivery until an SPT is in place reaching the FHR.\n   If\
    \ the packets were not unicast encapsulated to the RP, they would be\n   dropped\
    \ by the FHR until the SPT is set up.  This functionality is\n   important for\
    \ applications where the initial packet(s) must be\n   received for the application\
    \ to work correctly.  Another reason would\n   be for bursty sources.  If the\
    \ application sends out a multicast\n   packet every 4 minutes (or longer), the\
    \ SPT is torn down (typically\n   after 3:30 minutes of inactivity) before the\
    \ next packet is forwarded\n   down the tree.  This will prevent multicast packets\
    \ from ever being\n   forwarded.  A well-behaved application should be able to\
    \ deal with\n   packet loss since IP is a best-effort-based packet delivery system.\n\
    \   But in reality, this is not always the case.\n   With the procedures defined\
    \ in this document, the packet(s) received\n   by the FHR will be dropped until\
    \ the LHR has learned about the source\n   and the SPT is built.  For bursty sources\
    \ or applications sensitive\n   for the delivery of the first packet, that means\
    \ this solution would\n   not be very applicable.  This solution is mostly useful\
    \ for\n   applications that don't have a strong dependency on the initial\n  \
    \ packet(s) and have a fairly constant data rate, like video\n   distribution,\
    \ for example.  For applications with strong dependency\n   on the initial packet(s),\
    \ using BIDIR-PIM [RFC5015] or SSM [RFC4607]\n   is recommended.  The protocol\
    \ operations are much simpler compared to\n   PIM-SM; they will cause less churn\
    \ in the network.  Both guarantee\n   best-effort delivery for the initial packet(s).\n"
- title: 4.5.  Resiliency to Network Partitioning
  contents:
  - "4.5.  Resiliency to Network Partitioning\n   In a PIM-SM deployment where the\
    \ network becomes partitioned due to\n   link or node failure, it is possible\
    \ that the RP becomes unreachable\n   to a certain part of the network.  New sources\
    \ that become active in\n   that partition will not be able to register to the\
    \ RP and receivers\n   within that partition will not be able to receive the traffic.\n\
    \   Ideally, having a candidate RP in each partition is desirable, but\n   which\
    \ routers will form a partitioned network is something unknown in\n   advance.\
    \  In order to be fully resilient, each router in the network\n   may end up being\
    \ a candidate RP.  This would increase the operational\n   complexity of the network.\n\
    \   The solution described in this document does not suffer from that\n   problem.\
    \  If a network becomes partitioned and new sources become\n   active, the receivers\
    \ in that partition will receive the SG mappings\n   and join the source tree.\
    \  Each partition works independently of the\n   other partitions and will continue\
    \ to have access to sources within\n   that partition.  Once the network has healed,\
    \ the periodic flooding\n   of SG mappings ensures that they are reflooded into\
    \ the other\n   partitions and then other receivers can join the newly learned\n\
    \   sources.\n"
- title: 5.  Configurable Parameters
  contents:
  - "5.  Configurable Parameters\n   This document contains a number of configurable\
    \ parameters.  These\n   parameters are formally defined in Sections 3.3 and 4.2,\
    \ but they are\n   repeated here for ease of reference.  These parameters all\
    \ have\n   default values as noted below.\n   Max_PFM_Message_Rate:  The maximum\
    \ number of PFM messages a router is\n      allowed to originate per minute; see\
    \ Section 3.3 for details.  The\n      default value is 6.\n   Min_PFM_Message_Gap:\
    \  The minimum amount of time between each PFM\n      message originated by a\
    \ router in milliseconds; see Section 3.3\n      for details.  The default is\
    \ 1000.\n   Group_Source_Holdtime_Period:  The announcement period for Group\n\
    \      Source Holdtime TLVs in seconds; see Section 4.2 for details.  The\n  \
    \    default value is 60.\n   Group_Source_Holdtime_Holdtime:  The holdtime for\
    \ Group Source\n      Holdtime TLVs in seconds; see Section 4.2 for details. \
    \ The\n      default value is 210.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   For general PIM message security, see [RFC7761].\
    \  PFM messages MUST\n   only be accepted from a PIM neighbor, but as discussed\
    \ in [RFC7761],\n   any router can become a PIM neighbor by sending a Hello message.\
    \  To\n   control from where to accept PFM packets, one can limit on which\n \
    \  interfaces PIM is enabled.  Also, one can configure interfaces as\n   administrative\
    \ boundaries for PFM messages, see Section 3.2.  The\n   implications of forged\
    \ PFM messages depend on which TLVs they\n   contain.  Documents defining new\
    \ TLVs will need to discuss the\n   security considerations for the specific TLVs.\
    \  In general though,\n   the PFM messages are flooded within the network; by\
    \ forging a large\n   number of PFM messages, one might stress all the routers\
    \ in the\n   network.\n   If an attacker can forge PFM messages, then such messages\
    \ may contain\n   arbitrary GSH TLVs.  An issue here is that an attacker might\
    \ send\n   such TLVs for a huge amount of sources, potentially causing every\n\
    \   router in the network to store huge amounts of source state.  Also,\n   if\
    \ there is receiver interest for the groups specified in the GSH\n   TLVs, routers\
    \ with directly connected receivers will build SPTs for\n   the announced sources,\
    \ even if the sources are not actually active.\n   Building such trees will consume\
    \ additional resources on routers that\n   the trees pass through.\n   PIM-SM\
    \ link-local messages can be authenticated using IPsec, see\n   Section 6.3 of\
    \ [RFC7761] and [RFC5796].  Since PFM messages are link-\n   local messages sent\
    \ hop-by-hop, a link-local PFM message can be\n   authenticated using IPsec such\
    \ that a router can verify that a\n   message was sent by a trusted neighbor and\
    \ has not been modified.\n   However, to verify that a received message contains\
    \ correct\n   information announced by the originator specified in the message,\
    \ one\n   will have to trust every router on the path from the originator and\n\
    \   that each router has authenticated the received message.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   This document registers a new PIM message type for\
    \ the PIM Flooding\n   Mechanism (PFM) with the name \"PIM Flooding Mechanism\"\
    \ in the \"PIM\n   Message Types\" registry with the value of 12.\n   IANA has\
    \ also created a registry for PFM TLVs called \"PIM Flooding\n   Mechanism Message\
    \ Types\".  Assignments for the registry are to be\n   made according to the policy\
    \ \"IETF Review\" as defined in [RFC8126].\n   The initial content of the registry\
    \ is as follows:\n      Type         Name                  Reference\n      ---------------------------------------------\n\
    \         0        Reserved               [RFC8364]\n         1        Source\
    \ Group Holdtime  [RFC8364]\n      2-32767     Unassigned\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC5059]  Bhaskar, N., Gall, A., Lingard, J., and S. Venaas,\n          \
    \    \"Bootstrap Router (BSR) Mechanism for Protocol Independent\n           \
    \   Multicast (PIM)\", RFC 5059, DOI 10.17487/RFC5059, January\n             \
    \ 2008, <https://www.rfc-editor.org/info/rfc5059>.\n   [RFC5796]  Atwood, W.,\
    \ Islam, S., and M. Siami, \"Authentication and\n              Confidentiality\
    \ in Protocol Independent Multicast Sparse\n              Mode (PIM-SM) Link-Local\
    \ Messages\", RFC 5796,\n              DOI 10.17487/RFC5796, March 2010,\n   \
    \           <https://www.rfc-editor.org/info/rfc5796>.\n   [RFC7761]  Fenner,\
    \ B., Handley, M., Holbrook, H., Kouvelas, I.,\n              Parekh, R., Zhang,\
    \ Z., and L. Zheng, \"Protocol Independent\n              Multicast - Sparse Mode\
    \ (PIM-SM): Protocol Specification\n              (Revised)\", STD 83, RFC 7761,\
    \ DOI 10.17487/RFC7761, March\n              2016, <https://www.rfc-editor.org/info/rfc7761>.\n\
    \   [RFC8126]  Cotton, M., Leiba, B., and T. Narten, \"Guidelines for\n      \
    \        Writing an IANA Considerations Section in RFCs\", BCP 26,\n         \
    \     RFC 8126, DOI 10.17487/RFC8126, June 2017,\n              <https://www.rfc-editor.org/info/rfc8126>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n     \
    \         2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n        \
    \      May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [RFC3973]  Adams, A., Nicholas, J., and W. Siadak,\
    \ \"Protocol\n              Independent Multicast - Dense Mode (PIM-DM): Protocol\n\
    \              Specification (Revised)\", RFC 3973, DOI 10.17487/RFC3973,\n  \
    \            January 2005, <https://www.rfc-editor.org/info/rfc3973>.\n   [RFC4607]\
    \  Holbrook, H. and B. Cain, \"Source-Specific Multicast for\n              IP\"\
    , RFC 4607, DOI 10.17487/RFC4607, August 2006,\n              <https://www.rfc-editor.org/info/rfc4607>.\n\
    \   [RFC5015]  Handley, M., Kouvelas, I., Speakman, T., and L. Vicisano,\n   \
    \           \"Bidirectional Protocol Independent Multicast (BIDIR-\n         \
    \     PIM)\", RFC 5015, DOI 10.17487/RFC5015, October 2007,\n              <https://www.rfc-editor.org/info/rfc5015>.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The authors would like to thank Arjen Boers for contributing\
    \ to the\n   initial idea, and David Black, Stewart Bryant, Yiqun Cai,\n   Papadimitriou\
    \ Dimitri, Toerless Eckert, Dino Farinacci, Alvaro\n   Retana, and Liang Xia for\
    \ their very helpful comments on the\n   document.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   IJsbrand Wijnands\n   Cisco Systems, Inc.\n   De kleetlaan\
    \ 6a\n   Diegem  1831\n   Belgium\n   Email: ice@cisco.com\n   Stig Venaas\n \
    \  Cisco Systems, Inc.\n   Tasman Drive\n   San Jose  CA  95134\n   United States\
    \ of America\n   Email: stig@cisco.com\n   Michael Brig\n   Aegis BMD Program\
    \ Office\n   17211 Avenue D, Suite 160\n   Dahlgren  VA 22448-5148\n   United\
    \ States of America\n   Email: michael.brig@mda.mil\n   Anders Jonasson\n   Swedish\
    \ Defence Material Administration (FMV)\n   Loennvaegen 4\n   Vaexjoe  35243\n\
    \   Sweden\n   Email: anders@jomac.se\n"
