- title: __initial_text__
  contents:
  - '  Session Initiation Protocol (SIP) INFO Method and Package Framework

    '
- title: Abstract
  contents:
  - "Abstract\n   This document defines a method, INFO, for the Session Initiation\n\
    \   Protocol (SIP), and an Info Package mechanism.  This document\n   obsoletes\
    \ RFC 2976.  For backward compatibility, this document also\n   specifies a \"\
    legacy\" mode of usage of the INFO method that is\n   compatible with the usage\
    \ previously defined in RFC 2976, referred to\n   as \"legacy INFO Usage\" in\
    \ this document.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6086.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Conventions Used in This Document ..........................4\n  \
    \ 2. Motivation ......................................................4\n   3.\
    \ Applicability and Backward Compatibility ........................5\n   4. The\
    \ INFO Method .................................................6\n      4.1. General\
    \ ....................................................6\n      4.2. INFO Request\
    \ ...............................................6\n           4.2.1. INFO Request\
    \ Sender .................................6\n           4.2.2. INFO Request Receiver\
    \ ...............................7\n           4.2.3. SIP Proxies .........................................8\n\
    \      4.3. INFO Message Body ..........................................8\n  \
    \         4.3.1. INFO Request Message Body ...........................8\n    \
    \       4.3.2. INFO Response Message Body ..........................9\n      4.4.\
    \ Order of Delivery ..........................................9\n   5. Info Packages\
    \ ...................................................9\n      5.1. General ....................................................9\n\
    \      5.2. User Agent Behavior .......................................10\n  \
    \         5.2.1. General ............................................10\n    \
    \       5.2.2. UA Procedures ......................................10\n      \
    \     5.2.3. Recv-Info Header Field Rules .......................11\n        \
    \   5.2.4. Info Package Fallback Rules ........................12\n      5.3.\
    \ REGISTER Processing .......................................12\n   6. Formal\
    \ INFO Method Definition ..................................13\n      6.1. INFO\
    \ Method ...............................................13\n   7. INFO Header\
    \ Fields .............................................15\n      7.1. General ...................................................15\n\
    \      7.2. Info-Package Header Field .................................15\n  \
    \    7.3. Recv-Info Header Field ....................................16\n   8.\
    \ Info Package Considerations ....................................16\n      8.1.\
    \ General ...................................................16\n      8.2. Appropriateness\
    \ of Info Package Usage .....................16\n      8.3. INFO Request Rate\
    \ and Volume ..............................16\n      8.4. Alternative Mechanisms\
    \ ....................................17\n           8.4.1. Alternative SIP Signaling\
    \ Plane Mechanisms .........17\n           8.4.2. Media Plane Mechanisms .............................18\n\
    \           8.4.3. Non-SIP-Related Mechanisms .........................19\n  \
    \ 9. Syntax .........................................................19\n    \
    \  9.1. General ...................................................19\n      9.2.\
    \ ABNF ......................................................19\n   10. Info Package\
    \ Requirements .....................................20\n      10.1. General ..................................................20\n\
    \      10.2. Overall Description ......................................20\n  \
    \    10.3. Applicability ............................................20\n    \
    \  10.4. Info Package Name ........................................21\n      10.5.\
    \ Info Package Parameters ..................................21\n      10.6. SIP\
    \ Option-Tags ..........................................22\n      10.7. INFO Message\
    \ Body Parts ..................................22\n      10.8. Info Package Usage\
    \ Restrictions ..........................22\n      10.9. Rate of INFO Requests\
    \ ....................................23\n      10.10. Info Package Security Considerations\
    \ ....................23\n      10.11. Implementation Details ..................................23\n\
    \      10.12. Examples ................................................24\n  \
    \ 11. IANA Considerations ...........................................24\n    \
    \  11.1. Update to Registration of SIP INFO Method ................24\n      11.2.\
    \ Registration of the Info-Package Header Field ............24\n      11.3. Registration\
    \ of the Recv-Info Header Field ...............24\n      11.4. Creation of the\
    \ Info Packages Registry ...................25\n      11.5. Registration of the\
    \ Info-Package Content-Disposition .....25\n      11.6. SIP Response Code 469\
    \ Registration .......................26\n   12. Examples ......................................................26\n\
    \      12.1. Indication of Willingness to Receive INFO Requests\n            for\
    \ Info Packages ........................................26\n           12.1.1.\
    \ Initial INVITE Request ............................26\n           12.1.2. Target\
    \ Refresh ....................................27\n      12.2. INFO Request Associated\
    \ with Info Package ................28\n           12.2.1. Single Payload ....................................28\n\
    \           12.2.2. Multipart INFO ....................................28\n  \
    \ 13. Security Considerations .......................................30\n   14.\
    \ References ....................................................31\n      14.1.\
    \ Normative References .....................................31\n      14.2. Informative\
    \ References ...................................32\n   Appendix A.  Acknowledgements\
    \ .....................................35\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document defines a method, INFO, for the Session Initiation\n\
    \   Protocol (SIP) [RFC3261].\n   The purpose of the INFO message is to carry\
    \ application level\n   information between endpoints, using the SIP dialog signaling\
    \ path.\n   Note that the INFO method is not used to update characteristics of\
    \ a\n   SIP dialog or session, but to allow the applications that use the SIP\n\
    \   session to exchange information (which might update the state of\n   those\
    \ applications).\n   Use of the INFO method does not constitute a separate dialog\
    \ usage.\n   INFO messages are always part of, and share the fate of, an invite\n\
    \   dialog usage [RFC5057].  INFO messages cannot be sent as part of\n   other\
    \ dialog usages, or outside an existing dialog.\n   This document also defines\
    \ an Info Package mechanism.  An Info\n   Package specification defines the content\
    \ and semantics of the\n   information carried in an INFO message associated with\
    \ the Info\n   Package.  The Info Package mechanism also provides a way for user\n\
    \   agents (UAs) to indicate for which Info Packages they are willing to\n   receive\
    \ INFO requests, and which Info Package a specific INFO request\n   is associated\
    \ with.\n   A UA uses the Recv-Info header field, on a per-dialog basis, to\n\
    \   indicate for which Info Packages it is willing to receive INFO\n   requests.\
    \  A UA can indicate an initial set of Info Packages during\n   dialog establishment\
    \ and can indicate a new set during the lifetime\n   of the invite dialog usage.\n\
    \      NOTE: A UA can use an empty Recv-Info header field (a header field\n  \
    \    without a value) to indicate that it is not willing to receive\n      INFO\
    \ requests for any Info Package, while still informing other\n      UAs that it\
    \ supports the Info Package mechanism.\n   When a UA sends an INFO request, it\
    \ uses the Info-Package header\n   field to indicate which Info Package is associated\
    \ with the request.\n   One particular INFO request can only be associated with\
    \ a single Info\n   Package.\n"
- title: 1.1.  Conventions Used in This Document
  contents:
  - "1.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 2.  Motivation
  contents:
  - "2.  Motivation\n   A number of applications, standardized and proprietary, make\
    \ use of\n   the INFO method as it was previously defined in RFC 2976 [RFC2976],\n\
    \   here referred to as \"legacy INFO usage\".  These include but are not\n  \
    \ limited to the following:\n   o  RFC 3372 [RFC3372] specifies the encapsulation\
    \ of ISDN User Part\n      (ISUP) in SIP message bodies.  ITU-T and the Third\
    \ Generation\n      Partnership Project (3GPP) have specified similar procedures.\n\
    \   o  [ECMA-355] specifies the encapsulation of \"QSIG\" in SIP message\n   \
    \   bodies.\n   o  RFC 5022 [RFC5022] specifies how INFO is used as a transport\n\
    \      mechanism by the Media Server Control Markup Language (MSCML)\n      protocol.\
    \  MSCML uses an option-tag in the Require header field to\n      ensure that\
    \ the receiver understands the INFO content.\n   o  RFC 5707 [RFC5707] specifies\
    \ how INFO is used as a transport\n      mechanism by the Media Server Markup\
    \ Language (MSML) protocol.\n   o  Companies have been using INFO messages in\
    \ order to request fast\n      video update.  Currently, a standardized mechanism,\
    \ based on the\n      Real-time Transport Control Protocol (RTCP), has been specified\
    \ in\n      RFC 5168 [RFC5168].\n   o  Companies have been using INFO messages\
    \ in order to transport\n      Dual-Tone Multi-Frequency (DTMF) tones.  All mechanisms\
    \ are\n      proprietary and have not been standardized.\n   Some legacy INFO\
    \ usages are also recognized as being shortcuts to\n   more appropriate and flexible\
    \ mechanisms.\n   Furthermore, RFC 2976 did not define mechanisms that would enable\
    \ a\n   SIP UA to indicate (1) the types of applications and contexts in\n   which\
    \ the UA supports the INFO method or (2) the types of\n   applications and contexts\
    \ with which a specific INFO message is\n   associated.\n   Because legacy INFO\
    \ usages do not have associated Info Packages, it\n   is not possible to use the\
    \ Recv-Info and Info-Package header fields\n   with legacy INFO usages.  That\
    \ is, a UA cannot use the Recv-Info\n   header field to indicate for which legacy\
    \ INFO usages it is willing\n   to receive INFO requests, and a UA cannot use\
    \ the Info-Package header\n   field to indicate with which legacy INFO usage an\
    \ INFO request is\n   associated.\n   Due to the problems described above, legacy\
    \ INFO usages often require\n   static configuration to indicate the types of\
    \ applications and\n   contexts for which the UAs support the INFO method, and\
    \ the way they\n   handle application information transported in INFO messages.\
    \  This\n   has caused interoperability problems in the industry.\n   To overcome\
    \ these problems, the SIP Working Group has spent\n   significant discussion time\
    \ over many years coming to agreement on\n   whether it was more appropriate to\
    \ fix INFO (by defining a\n   registration mechanism for the ways in which it\
    \ was used) or to\n   deprecate it altogether (with the usage described in RFC\
    \ 3398\n   [RFC3398] being grandfathered as the sole legitimate usage).\n   Although\
    \ it required substantial consensus building and concessions\n   by those more\
    \ inclined to completely deprecate INFO, the eventual\n   direction of the working\
    \ group was to publish a framework for\n   registration of Info Packages as defined\
    \ in this specification.\n"
- title: 3.  Applicability and Backward Compatibility
  contents:
  - "3.  Applicability and Backward Compatibility\n   This document defines a method,\
    \ INFO, for the Session Initiation\n   Protocol (SIP) [RFC3261], and an Info Package\
    \ mechanism.  This\n   document obsoletes RFC 2976 [RFC2976].  For backward compatibility,\n\
    \   this document also specifies a \"legacy\" mode of usage of the INFO\n   method\
    \ that is compatible with the usage previously defined in\n   RFC 2976, here referred\
    \ to as \"legacy INFO Usage\".\n   For backward compatibility purposes, this document\
    \ does not deprecate\n   legacy INFO usages, and does not mandate users to define\
    \ Info\n   Packages for such usages.  However:\n   1.  A UA MUST NOT insert an\
    \ Info-Package header field in a legacy\n       INFO request (as described in\
    \ Section 4.2.1, an INFO request\n       associated with an Info Package always\
    \ contains an Info-Package\n       header field).\n   2.  Any new usage MUST use\
    \ the Info Package mechanism defined in this\n       specification, since it does\
    \ not share the issues associated with\n       legacy INFO usage, and since Info\
    \ Packages can be registered with\n       IANA.\n   3.  UAs are allowed to enable\
    \ both legacy INFO usages and Info\n       Package usages as part of the same\
    \ invite dialog usage, but UAs\n       SHALL NOT mix legacy INFO usages and Info\
    \ Package usages in order\n       to transport the same application level information.\
    \  If\n       possible, UAs SHALL prefer the usage of an Info Package.\n"
- title: 4.  The INFO Method
  contents:
  - '4.  The INFO Method

    '
- title: 4.1.  General
  contents:
  - "4.1.  General\n   The INFO method provides a mechanism for transporting application\n\
    \   level information that can further enhance a SIP application.\n   Section\
    \ 8 gives more details on the types of applications for which\n   the use of INFO\
    \ is appropriate.\n   This section describes how a UA handles INFO requests and\
    \ responses,\n   as well as the message bodies included in INFO messages.\n"
- title: 4.2.  INFO Request
  contents:
  - '4.2.  INFO Request

    '
- title: 4.2.1.  INFO Request Sender
  contents:
  - "4.2.1.  INFO Request Sender\n   An INFO request can be associated with an Info\
    \ Package (see\n   Section 5), or associated with a legacy INFO usage (see Section\
    \ 2).\n   The construction of the INFO request is the same as any other\n   non-target\
    \ refresh request within an existing invite dialog usage as\n   described in Section\
    \ 12.2 of RFC 3261.\n   When a UA sends an INFO request associated with an Info\
    \ Package, it\n   MUST include an Info-Package header field that indicates which\
    \ Info\n   Package is associated with the request.  A specific INFO request can\n\
    \   be used only for a single Info Package.\n   When a UA sends an INFO request\
    \ associated with a legacy INFO usage,\n   there is no Info Package associated\
    \ with the request, and the UA MUST\n   NOT include an Info-Package header field\
    \ in the request.\n   The INFO request MUST NOT contain a Recv-Info header field.\
    \  A UA can\n   only indicate a set of Info Packages for which it is willing to\n\
    \   receive INFO requests by using the SIP methods (and their responses)\n   listed\
    \ in Section 5.\n   A UA MUST NOT send an INFO request outside an invite dialog\
    \ usage and\n   MUST NOT send an INFO request for an Info Package inside an invite\n\
    \   dialog usage if the remote UA has not indicated willingness to\n   receive\
    \ that Info Package within that dialog.\n   If a UA receives a 469 (Bad Info Package)\
    \ response to an INFO\n   request, based on RFC 5057 [RFC5057], the response represents\
    \ a\n   Transaction Only failure, and the UA MUST NOT terminate the invite\n \
    \  dialog usage.\n   Due to the possibility of forking, the UA that sends the\
    \ initial\n   INVITE request MUST be prepared to receive INFO requests from\n\
    \   multiple remote UAs during the early dialog phase.  In addition, the\n   UA\
    \ MUST be prepared to receive different Recv-Info header field\n   values from\
    \ different remote UAs.\n      NOTE: If the User Agent Server (UAS) (receiver\
    \ of the initial\n      INVITE request) sends an INFO request just after it has\
    \ sent the\n      response that creates the dialog, the UAS needs to be prepared\
    \ for\n      the possibility that the INFO request will reach the User Agent\n\
    \      Client (UAC) before the dialog-creating response, and might\n      therefore\
    \ be rejected by the UAC.  In addition, an INFO request\n      might be rejected\
    \ due to a race condition, if a UA sends the INFO\n      request at the same time\
    \ that the remote UA sends a new set of\n      Info Packages for which it is willing\
    \ to receive INFO requests.\n"
- title: 4.2.2.  INFO Request Receiver
  contents:
  - "4.2.2.  INFO Request Receiver\n   If a UA receives an INFO request associated\
    \ with an Info Package that\n   the UA has not indicated willingness to receive,\
    \ the UA MUST send a\n   469 (Bad Info Package) response (see Section 11.6), which\
    \ contains a\n   Recv-Info header field with Info Packages for which the UA is\
    \ willing\n   to receive INFO requests.  The UA MUST NOT use the response to update\n\
    \   the set of Info Packages, but simply to indicate the current set.  In\n  \
    \ the terminology of multiple dialog usages [RFC5057], this represents\n   a Transaction\
    \ Only failure, and does not terminate the invite dialog\n   usage.\n   If a UA\
    \ receives an INFO request associated with an Info Package, and\n   the message\
    \ body part with Content-Disposition \"Info-Package\" (see\n   Section 4.3.1)\
    \ has a Multipurpose Internet Mail Extensions (MIME)\n   type that the UA supports\
    \ but not in the context of that Info\n   Package, it is RECOMMENDED that the\
    \ UA send a 415 (Unsupported Media\n   Type) response.\n   The UA MAY send other\
    \ error responses, such as Request Failure (4xx),\n   Server Failure (5xx), and\
    \ Global Failure (6xx), in accordance with\n   the error-handling procedures defined\
    \ in RFC 3261.\n   Otherwise, if the INFO request is syntactically correct and\
    \ well\n   structured, the UA MUST send a 200 (OK) response.\n      NOTE: If the\
    \ application needs to reject the information that it\n      received in an INFO\
    \ request, that needs to be done on the\n      application level.  That is, the\
    \ application needs to trigger a\n      new INFO request, which contains information\
    \ that the previously\n      received application data was not accepted.  Individual\
    \ Info\n      Package specifications need to describe the details for such\n \
    \     procedures.\n"
- title: 4.2.3.  SIP Proxies
  contents:
  - "4.2.3.  SIP Proxies\n   Proxies need no additional behavior beyond that described\
    \ in RFC 3261\n   to support INFO.\n"
- title: 4.3.  INFO Message Body
  contents:
  - '4.3.  INFO Message Body

    '
- title: 4.3.1.  INFO Request Message Body
  contents:
  - "4.3.1.  INFO Request Message Body\n   The purpose of the INFO request is to carry\
    \ application level\n   information between SIP UAs.  The application information\
    \ data is\n   carried in the payload of the message body of the INFO request.\n\
    \      NOTE: An INFO request associated with an Info Package can also\n      include\
    \ information associated with the Info Package using\n      Info-Package header\
    \ field parameters.\n   If an INFO request associated with an Info Package contains\
    \ a message\n   body part, the body part is identified by a Content-Disposition\n\
    \   header field \"Info-Package\" value.  The body part can contain a\n   single\
    \ MIME type, or it can be a multipart [RFC5621] that contains\n   other body parts\
    \ associated with the Info Package.\n   UAs MUST support multipart body parts\
    \ in accordance with RFC 5621.\n      NOTE: An INFO request can also contain other\
    \ body parts that are\n      meaningful within the context of an invite dialog\
    \ usage but are\n      not specifically associated with the INFO method and the\n\
    \      application concerned.\n   When a UA supports a specific Info Package,\
    \ the UA MUST also support\n   message body MIME types in accordance with that\
    \ Info Package.\n   However, in accordance with RFC 3261, the UA still indicates\
    \ the\n   supported MIME types using the Accept header.\n"
- title: 4.3.2.  INFO Response Message Body
  contents:
  - "4.3.2.  INFO Response Message Body\n   A UA MUST NOT include a message body associated\
    \ with an Info Package\n   in an INFO response.  Message bodies associated with\
    \ Info Packages\n   MUST only be sent in INFO requests.\n   A UA MAY include a\
    \ message body that is not associated with an Info\n   Package in an INFO response.\n"
- title: 4.4.  Order of Delivery
  contents:
  - "4.4.  Order of Delivery\n   The Info Package mechanism does not define a delivery\
    \ order\n   mechanism.  Info Packages can rely on the CSeq header field [RFC3261]\n\
    \   to detect if an INFO request is received out of order.\n   If specific applications\
    \ need additional mechanisms for order of\n   delivery, those mechanisms, and\
    \ related procedures, are specified as\n   part of the associated Info Package\
    \ (e.g., the use of sequence\n   numbers within the application data).\n"
- title: 5.  Info Packages
  contents:
  - '5.  Info Packages

    '
- title: 5.1.  General
  contents:
  - "5.1.  General\n   An Info Package specification defines the content and semantics\
    \ of\n   the information carried in an INFO message associated with an Info\n\
    \   Package.  The Info Package mechanism provides a way for UAs to\n   indicate\
    \ for which Info Packages they are willing to receive INFO\n   requests, and with\
    \ which Info Package a specific INFO request is\n   associated.\n"
- title: 5.2.  User Agent Behavior
  contents:
  - '5.2.  User Agent Behavior

    '
- title: 5.2.1.  General
  contents:
  - "5.2.1.  General\n   This section describes how a UA handles Info Packages, how\
    \ a UA uses\n   the Recv-Info header field, and how the UA acts in re-INVITE rollback\n\
    \   situations.\n"
- title: 5.2.2.  UA Procedures
  contents:
  - "5.2.2.  UA Procedures\n   A UA that supports the Info Package mechanism MUST\
    \ indicate, using\n   the Recv-Info header field, the set of Info Packages for\
    \ which it is\n   willing to receive INFO requests for a specific session.  A\
    \ UA can\n   list multiple Info Packages in a single Recv-Info header field, and\n\
    \   the UA can use multiple Recv-Info header fields.  A UA can use an\n   empty\
    \ Recv-Info header field, i.e., a header field without any header\n   field values.\n\
    \   A UA provides its set of Info Packages for which it is willing to\n   receive\
    \ INFO requests during the dialog establishment.  A UA can\n   update the set\
    \ of Info Packages during the invite dialog usage.\n   If a UA is not willing\
    \ to receive INFO requests for any Info\n   Packages, during dialog establishment\
    \ or later during the invite\n   dialog usage, the UA MUST indicate this by including\
    \ an empty\n   Recv-Info header field.  This informs other UAs that the UA still\n\
    \   supports the Info Package mechanism.\n   Example: If a UA has previously indicated\
    \ Info Packages \"foo\" and\n   \"bar\" in a Recv-Info header field, and the UA\
    \ during the lifetime of\n   the invite dialog usage wants to indicate that it\
    \ does not want to\n   receive INFO requests for any Info Packages anymore, the\
    \ UA sends a\n   message with an empty Recv-Info header field.\n   Once a UA has\
    \ sent a message with a Recv-Info header field containing\n   a set of Info Packages,\
    \ the set is valid until the UA sends a new\n   Recv-Info header field containing\
    \ a new, or empty, set of Info\n   Packages.\n   Once a UA has indicated that\
    \ it is willing to receive INFO requests\n   for a specific Info Package, and\
    \ a dialog has been established, the\n   UA MUST be prepared to receive INFO requests\
    \ associated with that\n   Info Package until the UA indicates that it is no longer\
    \ willing to\n   receive INFO requests associated with that Info Package.\n  \
    \ For a specific dialog usage, a UA MUST NOT send an INFO request\n   associated\
    \ with an Info Package until it has received an indication\n   that the remote\
    \ UA is willing to receive INFO requests for that Info\n   Package, or after the\
    \ UA has received an indication that the remote\n   UA is no longer willing to\
    \ receive INFO requests associated with that\n   Info Package.\n      NOTE: When\
    \ a UA sends a message that contains a Recv-Info header\n      field with a new\
    \ set of Info Packages for which the UA is willing\n      to receive INFO requests,\
    \ the remote UA might, before it receives\n      the message, send an INFO request\
    \ based on the old set of Info\n      Packages.  In this case, the receiver of\
    \ the INFO requests\n      rejects, and sends a 469 (Bad Info Package) response\
    \ to, the INFO\n      request.\n   If a UA indicates multiple Info Packages that\
    \ provide similar\n   functionality, it is not possible to indicate a priority\
    \ order of the\n   Info Packages, or to indicate that the UA wishes to only receive\
    \ INFO\n   requests for one of the Info Packages.  It is up to the application\n\
    \   logic associated with the Info Packages, and particular Info Package\n   specifications,\
    \ to describe application behavior in such cases.\n   For backward compatibility\
    \ purposes, even if a UA indicates support\n   of the Info Package mechanism,\
    \ it is still allowed to enable legacy\n   INFO usages.  In addition, if a UA\
    \ indicates support of the INFO\n   method using the Allow header field [RFC3261],\
    \ it does not implicitly\n   indicate support of the Info Package mechanism. \
    \ A UA MUST use the\n   Recv-Info header field in order to indicate that it supports\
    \ the Info\n   Package mechanism.  Likewise, even if a UA uses the Recv-Info header\n\
    \   field to indicate that it supports the Info Package mechanism, in\n   addition\
    \ the UA still indicates support of the INFO method using the\n   Allow header.\n\
    \   This document does not define a SIP option-tag [RFC3261] for the Info\n  \
    \ Package mechanism.  However, an Info Package specification can define\n   an\
    \ option-tag associated with the specific Info Package, as described\n   in Section\
    \ 10.6.\n"
- title: 5.2.3.  Recv-Info Header Field Rules
  contents:
  - "5.2.3.  Recv-Info Header Field Rules\n   The text below defines rules on when\
    \ a UA is required to include a\n   Recv-Info header field in SIP messages.  Section\
    \ 7.1 lists the SIP\n   methods for which a UA can insert a Recv-Info header field\
    \ in\n   requests and responses.\n   o  The sender of an initial INVITE request\
    \ MUST include a Recv-Info\n      header field in the initial INVITE request,\
    \ even if the sender is\n      not willing to receive INFO requests associated\
    \ with any Info\n      Package.\n   o  The receiver of a request that contains\
    \ a Recv-Info header field\n      MUST include a Recv-Info header field in a reliable\
    \ 18x/2xx\n      response to the request, even if the request contains an empty\n\
    \      Recv-Info header field, and even if the header field value of the\n   \
    \   receiver has not changed since the previous time it sent a\n      Recv-Info\
    \ header field.\n   o  A UA MUST NOT include a Recv-Info header field in a response\
    \ if\n      the associated request did not contain a Recv-Info header field.\n\
    \      NOTE: In contrast to the rules for generating Session Description\n   \
    \   Protocol (SDP) answers [RFC3264], the receiver of a request is not\n     \
    \ restricted to generating its own set of Info Packages as a subset\n      of\
    \ the Info Package set received in the Info-Package header field\n      of the\
    \ request.\n   As with SDP answers, the receiver can include the same Recv-Info\n\
    \   header field value in multiple responses (18x/2xx) for the same\n   INVITE/re-INVITE\
    \ transaction, but the receiver MUST use the same\n   Recv-Info header field value\
    \ (if included) in all responses for the\n   same transaction.\n"
- title: 5.2.4.  Info Package Fallback Rules
  contents:
  - "5.2.4.  Info Package Fallback Rules\n   If the receiver of a request that contains\
    \ a Recv-Info header field\n   rejects the request, both the sender and receiver\
    \ of the request MUST\n   roll back to the set of Info Packages that was used\
    \ before the\n   request was sent.  This also applies to the case where the receiver\n\
    \   of an INVITE/re-INVITE request has included a Recv-Info header field\n   in\
    \ a provisional response, but later rejects the request.\n      NOTE: The dialog\
    \ state rollback rules for Info Packages might\n      differ from the rules for\
    \ other types of dialog state information\n      (SDP, target, etc.).\n"
- title: 5.3.  REGISTER Processing
  contents:
  - "5.3.  REGISTER Processing\n   This document allows a UA to insert a Recv-Info\
    \ header field in a\n   REGISTER request.  However, a UA SHALL NOT include a header\
    \ value for\n   a specific Info Package unless the particular Info Package\n \
    \  specification describes how the header field value shall be\n   interpreted\
    \ and used by the registrar, e.g., in order to determine\n   request targets.\n\
    \   Rather than using the Recv-Info header field in order to determine\n   request\
    \ targets, it is recommended to use more appropriate\n   mechanisms, e.g., based\
    \ on RFC 3840 [RFC3840].  However, this\n   document does not define a feature\
    \ tag for the Info Package\n   mechanism, or a mechanism to define feature tags\
    \ for specific Info\n   Packages.\n"
- title: 6.  Formal INFO Method Definition
  contents:
  - '6.  Formal INFO Method Definition

    '
- title: 6.1.  INFO Method
  contents:
  - "6.1.  INFO Method\n   This document describes one new SIP method: INFO.  This\
    \ document\n   replaces the definition and registrations found in RFC 2976\n \
    \  [RFC2976].\n   This table expands on Tables 2 and 3 in RFC 3261 [RFC3261].\n\
    \     Header field                 where      INFO\n     --------------------------------------------\n\
    \     Accept                         R         o\n     Accept                \
    \        415        o\n     Accept-Encoding                R         o\n     Accept-Encoding\
    \               2xx        o\n     Accept-Encoding               415        c\n\
    \     Accept-Language                R         o\n     Accept-Language       \
    \        2xx        o\n     Accept-Language               415        o\n     Accept-Resource-Priority\
    \    2xx,417      o\n     Alert-Info                               -\n     Allow\
    \                          R         o\n     Allow                         405\
    \        m\n     Allow                          r         o\n     Authentication-Info\
    \           2xx        o\n     Authorization                  R         o\n  \
    \   Call-ID                        c         m\n     Call-Info               \
    \                 o\n     Contact                                  -\n     Content-Disposition\
    \                      o\n     Content-Encoding                         o\n  \
    \   Content-Language                         o\n     Content-Length          \
    \                 o\n     Content-Type                             *\n     CSeq\
    \                           c         m\n     Date                           \
    \          o\n     Error-Info                  3xx-6xx      o\n     Expires  \
    \                                -\n     From                           c    \
    \     m\n     Geolocation                    R         o\n     Geolocation-Error\
    \              r         o\n     Max-Breadth                    R         -\n\
    \     Max-Forwards                   R         o\n     MIME-Version          \
    \                   o\n     Min-Expires                              -\n     Organization\
    \                             -\n     Priority                       R       \
    \  -\n     Privacy                                  o\n     Proxy-Authenticate\
    \            401        o\n     Proxy-Authenticate            407        m\n \
    \    Proxy-Authorization            R         o\n     Proxy-Require          \
    \        R         o\n     Reason                         R         o\n     Record-Route\
    \                   R         o\n     Record-Route                2xx,18x    \
    \  o\n     Referred-By                    R         o\n     Request-Disposition\
    \            R         o\n     Require                                  o\n  \
    \   Resource-Priority                        o\n     Retry-After             \
    \       R         -\n     Retry-After             404,413,480,486  o\n     Retry-After\
    \                 500,503      o\n     Retry-After                 600,603   \
    \   o\n     Route                          R         o\n     Security-Client \
    \               R         o\n     Security-Server             421,494      o\n\
    \     Security-Verify                R         o\n     Server                \
    \         r         o\n     Subject                        R         o\n     Supported\
    \                      R         o\n     Supported                     2xx   \
    \     o\n     Timestamp                                o\n     To            \
    \                 c         m  (w/ Tag)\n     Unsupported                   420\
    \        o\n     User-Agent                               o\n     Via        \
    \                              m\n     Warning                        r      \
    \   o\n     WWW-Authenticate              401        m\n     WWW-Authenticate\
    \              407        o\n                     Table 1: Summary of Header Fields\n"
- title: 7.  INFO Header Fields
  contents:
  - '7.  INFO Header Fields

    '
- title: 7.1.  General
  contents:
  - "7.1.  General\n   This table expands on Tables 2 and 3 in RFC 3261 [RFC3261].\n\
    \   Header field where   proxy ACK BYE CAN INV OPT REG PRA INF MSG UPD\n   ------------------------------------------------------------------\n\
    \   Info-Package   R            -   -   -   -   -   -   -   m*  -   -\n   Recv-Info\
    \      R            -   -   -   m   -   o   o   -   -   o\n   Recv-Info      2xx\
    \          -   -   -   o** -   -   o***-   -   o***\n   Recv-Info      1xx   \
    \       -   -   -   o** -   -   -   -   -   -\n   Recv-Info      469         \
    \ -   -   -   -   -   -   -   m*  -   -\n   Recv-Info      r            -   -\
    \   -   o   -   -   o   -   -   o\n   Header field where   SUB NOT RFR\n   --------------------------------\n\
    \   Info-Package   R      -   -   -\n   Recv-Info      R      -   -   -\n   Recv-Info\
    \      2xx    -   -   -\n   Recv-Info      1xx    -   -   -\n   Recv-Info    \
    \  469    -   -   -\n   Recv-Info      r      -   -   -\n                    Table\
    \ 2: INFO-Related Header Fields\n   The support and usage of the Info-Package\
    \ and Recv-Info header fields\n   are not applicable to UAs that only support\
    \ legacy INFO usages.\n   *   Not applicable to INFO requests and responses associated\
    \ with\n       legacy INFO usages.\n   **  Mandatory in at least one reliable\
    \ 18x/2xx response, if sent, to\n       the INVITE request, if the associated\
    \ INVITE request contained a\n       Recv-Info header field.\n   *** Mandatory\
    \ if the associated request contained a Recv-Info header\n       field.\n   As\
    \ defined in Section 20 of RFC 3261, a \"mandatory\" header field MUST\n   be\
    \ present in a request, and MUST be understood by the UAS receiving\n   the request.\n"
- title: 7.2.  Info-Package Header Field
  contents:
  - "7.2.  Info-Package Header Field\n   This document adds \"Info-Package\" to the\
    \ definition of the element\n   \"message-header\" in the SIP message grammar\
    \ [RFC3261].  Section 4\n   describes the Info-Package header field usage.\n \
    \  For the purposes of matching Info Package types indicated in\n   Recv-Info\
    \ with those in the Info-Package header field value, one\n   compares the Info-package-name\
    \ portion of the Info-package-type\n   portion of the Info-Package header field\
    \ octet by octet with that of\n   the Recv-Info header field value.  That is,\
    \ the Info Package name is\n   case sensitive.  Info-package-param is not part\
    \ of the comparison-\n   checking algorithm.\n   This document does not define\
    \ values for Info-Package types.\n   Individual Info Package specifications define\
    \ these values.\n"
- title: 7.3.  Recv-Info Header Field
  contents:
  - "7.3.  Recv-Info Header Field\n   This document adds Recv-Info to the definition\
    \ of the element\n   \"message-header\" in the SIP message grammar [RFC3261].\
    \  Section 5\n   describes the Recv-Info header field usage.\n"
- title: 8.  Info Package Considerations
  contents:
  - '8.  Info Package Considerations

    '
- title: 8.1.  General
  contents:
  - "8.1.  General\n   This section covers considerations to take into account when\
    \ deciding\n   whether the usage of an Info Package is appropriate for transporting\n\
    \   application information for a specific use-case.\n"
- title: 8.2.  Appropriateness of Info Package Usage
  contents:
  - "8.2.  Appropriateness of Info Package Usage\n   When designing an Info Package,\
    \ for application level information\n   exchange, it is important to consider:\
    \ is signaling, using INFO\n   requests, within a SIP dialog, an appropriate mechanism\
    \ for the use-\n   case?  Is it because it is the most reasonable and appropriate\n\
    \   choice, or merely because \"it's easy\"?  Choosing an inappropriate\n   mechanism\
    \ for a specific use-case can cause negative effects in SIP\n   networks where\
    \ the mechanism is used.\n"
- title: 8.3.  INFO Request Rate and Volume
  contents:
  - "8.3.  INFO Request Rate and Volume\n   INFO messages differ from many other sorts\
    \ of SIP messages in that\n   they carry application information, and the size\
    \ and rate of INFO\n   messages are directly determined by the application.  This\
    \ can cause\n   application information traffic to interfere with other traffic\
    \ on\n   that infrastructure, or to self-interfere when data rates become too\n\
    \   high.\n   There is no default throttling mechanism for INFO requests.  Apart\n\
    \   from the SIP session establishment, the number of SIP messages\n   exchanged\
    \ during the lifetime of a normal SIP session is rather\n   small.\n   Some applications,\
    \ like those sending Dual-Tone Multi-Frequency\n   (DTMF) tones, can generate\
    \ a burst of up to 20 messages per second.\n   Other applications, like constant\
    \ GPS location updates, could\n   generate a high rate of INFO requests during\
    \ the lifetime of the\n   invite dialog usage.\n   A designer of an Info Package,\
    \ and the application that uses it, need\n   to consider the impact that the size\
    \ and the rate of the INFO\n   messages have on the network and on other traffic,\
    \ since it normally\n   cannot be ensured that INFO messages will be carried over\
    \ a\n   congestion-controlled transport protocol end-to-end.  Even if an INFO\n\
    \   message is sent over such a transport protocol, a downstream SIP\n   entity\
    \ might forward the message over a transport protocol that does\n   not provide\
    \ congestion control.\n   Furthermore, SIP messages tend to be relatively small,\
    \ on the order\n   of 500 Bytes to 32K Bytes.  SIP is a poor mechanism for direct\n\
    \   exchange of bulk data beyond these limits, especially if the headers\n   plus\
    \ body exceed the User Datagram Protocol (UDP) MTU [RFC0768].\n   Appropriate\
    \ mechanisms for such traffic include the Hypertext\n   Transfer Protocol (HTTP)\
    \ [RFC2616], the Message Session Relay\n   Protocol (MSRP) [RFC4975], or other\
    \ media plane data transport\n   mechanisms.\n   RFC 5405 [RFC5405] provides additional\
    \ guidelines for applications\n   using UDP that may be useful background reading.\n"
- title: 8.4.  Alternative Mechanisms
  contents:
  - '8.4.  Alternative Mechanisms

    '
- title: 8.4.1.  Alternative SIP Signaling Plane Mechanisms
  contents:
  - '8.4.1.  Alternative SIP Signaling Plane Mechanisms

    '
- title: 8.4.1.1.  General
  contents:
  - "8.4.1.1.  General\n   This subsection describes some alternative mechanisms for\n\
    \   transporting application information on the SIP signaling plane,\n   using\
    \ SIP messages.\n"
- title: 8.4.1.2.  SUBSCRIBE/NOTIFY
  contents:
  - "8.4.1.2.  SUBSCRIBE/NOTIFY\n   An alternative for application level interaction\
    \ is to use\n   subscription-based events [RFC3265] that use the SIP SUBSCRIBE\
    \ and\n   NOTIFY methods.  Using that mechanism, a UA requests state\n   information,\
    \ such as keypad presses from a device to an application\n   server, or key-map\
    \ images from an application server to a device.\n   Event Packages [RFC3265]\
    \ perform the role of disambiguating the\n   context of a message for subscription-based\
    \ events.  The Info Package\n   mechanism provides similar functionality for application\
    \ information\n   exchange using invite dialog usages [RFC5057].\n   While an\
    \ INFO request is always part of, and shares the fate of, an\n   existing invite\
    \ dialog usage, a SUBSCRIBE request creates a separate\n   dialog usage [RFC5057],\
    \ and is normally sent outside an existing\n   dialog usage.\n   The subscription-based\
    \ mechanism can be used by SIP entities to\n   receive state information about\
    \ SIP dialogs and sessions, without\n   requiring the entities to be part of the\
    \ route set of those dialogs\n   and sessions.\n   As SUBSCRIBE/NOTIFY messages\
    \ traverse through stateful SIP proxies\n   and back-to-back user agents (B2BUAs),\
    \ the resource impact caused by\n   the subscription dialogs needs to be considered.\
    \  The number of\n   subscription dialogs per user also needs to be considered.\n\
    \   As for any other SIP-signaling-plane-based mechanism for transporting\n  \
    \ application information, the SUBSCRIBE/NOTIFY messages can put a\n   significant\
    \ burden on intermediate SIP entities that are part of the\n   dialog route set,\
    \ but do not have any interest in the application\n   information transported\
    \ between the end users.\n"
- title: 8.4.1.3.  MESSAGE
  contents:
  - "8.4.1.3.  MESSAGE\n   The MESSAGE method [RFC3428] defines one-time instant message\n\
    \   exchange, typically for sending MIME contents for rendering to the\n   user.\n"
- title: 8.4.2.  Media Plane Mechanisms
  contents:
  - '8.4.2.  Media Plane Mechanisms

    '
- title: 8.4.2.1.  General
  contents:
  - "8.4.2.1.  General\n   In SIP, media plane channels associated with SIP dialogs\
    \ are\n   established using SIP signaling, but the data exchanged on the media\n\
    \   plane channel does not traverse SIP signaling intermediates, so if\n   there\
    \ will be a lot of information exchanged, and there is no need\n   for the SIP\
    \ signaling intermediaries to examine the information, it\n   is recommended to\
    \ use a media plane mechanism, rather than a SIP-\n   signaling-based mechanism.\n\
    \   A low-latency requirement for the exchange of information is one\n   strong\
    \ indicator for using a media channel.  Exchanging information\n   through the\
    \ SIP routing network can introduce hundreds of\n   milliseconds of latency.\n"
- title: 8.4.2.2.  MRCP
  contents:
  - "8.4.2.2.  MRCP\n   One mechanism for media plane exchange of application data\
    \ is the\n   Media Resource Control Protocol (MRCP) [SPEECHSC-MRCPv2], where a\n\
    \   media plane connection-oriented channel, such as a Transmission\n   Control\
    \ Protocol (TCP) [RFC0793] or Stream Control Transmission\n   Protocol (SCTP)\
    \ [RFC4960] stream is established.\n"
- title: 8.4.2.3.  MSRP
  contents:
  - "8.4.2.3.  MSRP\n   MSRP [RFC4975] defines session-based instant messaging as\
    \ well as\n   bulk file transfer and other such large-volume uses.\n"
- title: 8.4.3.  Non-SIP-Related Mechanisms
  contents:
  - "8.4.3.  Non-SIP-Related Mechanisms\n   Another alternative is to use a SIP-independent\
    \ mechanism, such as\n   HTTP [RFC2616].  In this model, the UA knows about a\
    \ rendezvous point\n   to which it can direct HTTP requests for the transfer of\
    \ information.\n   Examples include encoding of a prompt to retrieve in the SIP\
    \ Request\n   URI [RFC4240] or the encoding of a SUBMIT target in a VoiceXML\n\
    \   [W3C.REC-voicexml21-20070619] script.\n"
- title: 9.  Syntax
  contents:
  - '9.  Syntax

    '
- title: 9.1.  General
  contents:
  - "9.1.  General\n   This section describes the syntax extensions to the ABNF syntax\n\
    \   defined in RFC 3261 required for the INFO method, and adds\n   definitions\
    \ for the Info-Package and Recv-Info header fields.  The\n   previous sections\
    \ describe the semantics.  The ABNF defined in this\n   specification is conformant\
    \ to RFC 5234 [RFC5234].\n"
- title: 9.2.  ABNF
  contents:
  - "9.2.  ABNF\n   INFOm               = %x49.4E.46.4F ; INFO in caps\n   Method\
    \              =/ INFOm\n   message-header      =/ (Info-Package / Recv-Info)\
    \ CRLF\n   Info-Package        =  \"Info-Package\" HCOLON Info-package-type\n\
    \   Recv-Info           =  \"Recv-Info\" HCOLON [Info-package-list]\n   Info-package-list\
    \   =  Info-package-type *( COMMA Info-package-type )\n   Info-package-type  \
    \ =  Info-package-name *( SEMI Info-package-param )\n   Info-package-name   =\
    \  token\n   Info-package-param  =  generic-param\n"
- title: 10.  Info Package Requirements
  contents:
  - '10.  Info Package Requirements

    '
- title: 10.1.  General
  contents:
  - "10.1.  General\n   This section provides guidance on how to define an Info Package,\
    \ and\n   what information needs to exist in an Info Package specification.\n\
    \   If, for an Info Package, there is a need to extend or modify the\n   behavior\
    \ described in this document, that behavior MUST be described\n   in the Info\
    \ Package specification.  It is bad practice for Info\n   Package specifications\
    \ to repeat procedures defined in this document,\n   unless needed for purposes\
    \ of clarification or emphasis.\n   Info Package specifications MUST NOT weaken\
    \ any behavior designated\n   with \"SHOULD\" or \"MUST\" in this specification.\
    \  However, Info Package\n   specifications MAY strengthen \"SHOULD\", \"MAY\"\
    , or \"RECOMMENDED\"\n   requirements to \"MUST\" if applications associated with\
    \ the Info\n   Package require it.\n   Info Package specifications MUST address\
    \ the issues defined in the\n   following subsections, or document why an issue\
    \ is not applicable to\n   the specific Info Package.\n   Section 8.4 describes\
    \ alternative mechanisms, which should be\n   considered as part of the process\
    \ for solving a specific use-case,\n   when there is a need for transporting application\
    \ information.\n"
- title: 10.2.  Overall Description
  contents:
  - "10.2.  Overall Description\n   The Info Package specification MUST contain an\
    \ overall description of\n   the Info Package: what type of information is carried\
    \ in INFO\n   requests associated with the Info Package, and for what types of\n\
    \   applications and functionalities UAs can use the Info Package.\n   If the\
    \ Info Package is defined for a specific application, the Info\n   Package specification\
    \ MUST state which application UAs can use the\n   Info Package with.\n"
- title: 10.3.  Applicability
  contents:
  - "10.3.  Applicability\n   The Info Package specification MUST describe why the\
    \ Info Package\n   mechanism, rather than some other mechanism, has been chosen\
    \ for the\n   specific use-case to transfer application information between SIP\n\
    \   endpoints.  Common reasons can be a requirement for SIP proxies or\n   back-to-back\
    \ user agents (B2BUAs) to see the transported application\n   information (which\
    \ would not be the case if the information was\n   transported on a media path),\
    \ or that it is not seen as feasible to\n   establish separate dialogs (subscription)\
    \ in order to transport the\n   information.\n   Section 8 provides more information\
    \ and describes alternative\n   mechanisms that one should consider for solving\
    \ a specific use-case.\n"
- title: 10.4.  Info Package Name
  contents:
  - "10.4.  Info Package Name\n   The Info Package specification MUST define an Info\
    \ Package name,\n   which UAs use as a header field value (e.g., \"infoX\") to\
    \ identify the\n   Info Package in the Recv-Info and Info-Package header fields.\
    \  The\n   header field value MUST conform to the ABNF defined in Section 9.2.\n\
    \   The Info Package mechanism does not support package versioning.\n   Specific\
    \ Info Package message body payloads can contain version\n   information, which\
    \ is handled by the applications associated with the\n   Info Package.  However,\
    \ such a feature is outside the scope of the\n   generic Info Package mechanism.\n\
    \      NOTE: Even if an Info Package name contains version numbering\n      (e.g.,\
    \ foo_v2), the Info Package mechanism does not distinguish a\n      version number\
    \ from the rest of the Info Package name.\n"
- title: 10.5.  Info Package Parameters
  contents:
  - "10.5.  Info Package Parameters\n   The Info Package specification MAY define\
    \ Info Package parameters,\n   which can be used in the Recv-Info or Info-Package\
    \ header fields,\n   together with the header field value that indicates the Info\
    \ Package\n   name (see Section 10.4).\n   The Info Package specification MUST\
    \ define the syntax and semantics\n   of the defined parameters.  In addition,\
    \ the specification MUST\n   define whether a specific parameter is applicable\
    \ to only the\n   Recv-Info header field, only the Info-Package header field,\
    \ or to\n   both.\n   By default, an Info Package parameter is only applicable\
    \ to the Info\n   Package for which the parameter has been explicitly defined.\n\
    \   Info Package parameters defined for specific Info Packages can share\n   the\
    \ name with parameters defined for other Info Packages, but the\n   parameter\
    \ semantics are specific to the Info Package for which they\n   are defined. \
    \ However, when choosing the name of a parameter, it is\n   RECOMMENDED to not\
    \ use the same name as an existing parameter for\n   another Info Package, if\
    \ the semantics of the parameters are\n   different.\n"
- title: 10.6.  SIP Option-Tags
  contents:
  - "10.6.  SIP Option-Tags\n   The Info Package specification MAY define SIP option-tags,\
    \ which can\n   be used as described in RFC 3261.\n   The registration requirements\
    \ for option-tags are defined in RFC 5727\n   [RFC5727].\n"
- title: 10.7.  INFO Message Body Parts
  contents:
  - "10.7.  INFO Message Body Parts\n   The Info Package specification MUST define\
    \ which message body part\n   MIME types are associated with the Info Package.\
    \  The specification\n   MUST either define those body parts, including the syntax,\
    \ semantics,\n   and MIME type of each body part, or refer to other documents\
    \ that\n   define the body parts.\n   If multiple message body part MIME types\
    \ are associated with an Info\n   Package, the Info Package specification MUST\
    \ define whether UAs need\n   to use multipart body parts, in order to include\
    \ multiple body parts\n   in a single INFO request.\n"
- title: 10.8.  Info Package Usage Restrictions
  contents:
  - "10.8.  Info Package Usage Restrictions\n   If there are restrictions on how UAs\
    \ can use an Info Package, the\n   Info Package specification MUST document such\
    \ restrictions.\n   There can be restrictions related to whether UAs are allowed\
    \ to send\n   overlapping (outstanding) INFO requests associated with the Info\n\
    \   Package, or whether the UA has to wait for the response for a\n   previous\
    \ INFO request associated with the same Info Package.\n   There can also be restrictions\
    \ related to whether UAs need to support\n   and use other SIP extensions and\
    \ capabilities when they use the Info\n   Package, and if there are restrictions\
    \ related to how UAs can use the\n   Info Package together with other Info Packages.\n\
    \   As the SIP stack might not be aware of Info Package specific\n   restrictions,\
    \ it cannot be assumed that overlapping requests would be\n   rejected.  As defined\
    \ in Section 4.2.2, UAs will normally send a 200\n   (OK) response to an INFO\
    \ request.  The application logic associated\n   with the Info Package needs to\
    \ handle situations where UAs do not\n   follow restrictions associated with the\
    \ Info Package.\n"
- title: 10.9.  Rate of INFO Requests
  contents:
  - "10.9.  Rate of INFO Requests\n   If there is a maximum or minimum rate at which\
    \ UAs can send INFO\n   requests associated with the Info Package within a dialog,\
    \ the Info\n   Package specification MUST document the rate values.\n   If the\
    \ rates can vary, the Info Package specification MAY define Info\n   Package parameters\
    \ that UAs can use to indicate or negotiate the\n   rates.  Alternatively, the\
    \ rate information can be part of the\n   application data information associated\
    \ with the Info Package.\n"
- title: 10.10.  Info Package Security Considerations
  contents:
  - "10.10.  Info Package Security Considerations\n   If the application information\
    \ carried in INFO requests associated\n   with the Info Package requires a certain\
    \ level of security, the Info\n   Package specification MUST describe the mechanisms\
    \ that UAs need to\n   use in order to provide the required security.\n   If the\
    \ Info Package specification does not require any additional\n   security, other\
    \ than what the underlying SIP protocol provides, this\n   MUST be stated in the\
    \ Info Package specification.\n      NOTE: In some cases, it may not be sufficient\
    \ to mandate Transport\n      Layer Security (TLS) [RFC5246] in order to secure\
    \ the Info Package\n      payload, since intermediaries will have access to the\
    \ payload, and\n      because beyond the first hop, there is no way to assure\
    \ subsequent\n      hops will not forward the payload in clear text.  The best\
    \ way to\n      ensure secure transport at the application level is to have the\n\
    \      security at the application level.  One way of achieving this is\n    \
    \  to use end-to-end security techniques such as Secure/Multipurpose\n      Internet\
    \ Mail Extensions (S/MIME) [RFC5751].\n"
- title: 10.11.  Implementation Details
  contents:
  - "10.11.  Implementation Details\n   It is strongly RECOMMENDED that the Info Package\
    \ specification define\n   the procedure regarding how implementors shall implement\
    \ and use the\n   Info Package, or refer to other locations where implementors\
    \ can find\n   that information.\n      NOTE: Sometimes an Info Package designer\
    \ might choose to not\n      reveal the details of an Info Package.  However,\
    \ in order to allow\n      multiple implementations to support the Info Package,\
    \ Info Package\n      designers are strongly encouraged to provide the implementation\n\
    \      details.\n"
- title: 10.12.  Examples
  contents:
  - "10.12.  Examples\n   It is RECOMMENDED that the Info Package specification provide\n\
    \   demonstrative message flow diagrams, paired with complete messages\n   and\
    \ message descriptions.\n   Note that example flows are by definition informative,\
    \ and do not\n   replace normative text.\n"
- title: 11.  IANA Considerations
  contents:
  - '11.  IANA Considerations

    '
- title: 11.1.  Update to Registration of SIP INFO Method
  contents:
  - "11.1.  Update to Registration of SIP INFO Method\n   IANA updated the existing\
    \ registration in the \"Methods and Response\n   Codes\" registry under \"Session\
    \ Initiation Protocol (SIP) Parameters\"\n   from:\n   Method:     INFO\n   Reference:\
    \  [RFC2976]\n   to:\n   Method:     INFO\n   Reference:  [RFC6086]\n"
- title: 11.2.  Registration of the Info-Package Header Field
  contents:
  - "11.2.  Registration of the Info-Package Header Field\n   IANA added the following\
    \ new SIP header field in the \"Header Fields\"\n   registry under \"Session Initiation\
    \ Protocol (SIP) Parameters\".\n   Header Name:   Info-Package\n   Compact Form:\
    \  (none)\n   Reference:     [RFC6086]\n"
- title: 11.3.  Registration of the Recv-Info Header Field
  contents:
  - "11.3.  Registration of the Recv-Info Header Field\n   IANA added the following\
    \ new SIP header field in the \"Header Fields\"\n   registry under \"Session Initiation\
    \ Protocol (SIP) Parameters\".\n   Header Name:   Recv-Info\n   Compact Form:\
    \  (none)\n   Reference:     [RFC6086]\n"
- title: 11.4.  Creation of the Info Packages Registry
  contents:
  - "11.4.  Creation of the Info Packages Registry\n   IANA created the following\
    \ registry under \"Session Initiation\n   Protocol (SIP) Parameters\":\n   Info\
    \ Packages\n      Note to the reviewer:\n      The policy for review of Info Packages\
    \ is \"Specification\n      Required\", as defined in [RFC5226].  This policy\
    \ was selected\n      because Info Packages re-use an existing mechanism for transport\n\
    \      of arbitrary session-associated data within SIP; therefore, new\n     \
    \ Info Packages do not require the more extensive review required by\n      specifications\
    \ that make fundamental protocol changes.  However,\n      the reviewer is expected\
    \ to verify that each Info Package\n      registration is in fact consistent with\
    \ this definition.  Changes\n      to the SIP protocol and state machine are outside\
    \ of the allowable\n      scope for an Info Package and are governed by other\
    \ procedures\n      including RFC 5727 and its successors, if any.\n   The following\
    \ data elements populate the Info Packages Registry.\n   o  Info Package Name:\
    \ The Info Package Name is a case-sensitive\n      token.  In addition, IANA shall\
    \ not register multiple Info Package\n      names that have identical case-insensitive\
    \ values.\n   o  Reference: A reference to a specification that describes the\
    \ Info\n      Package.\n   The initial population of this table shall be:\n  \
    \ Name         Reference\n"
- title: 11.5.  Registration of the Info-Package Content-Disposition
  contents:
  - "11.5.  Registration of the Info-Package Content-Disposition\n   IANA added the\
    \ following new header field value to the \"Mail Content\n   Disposition Values\"\
    \ registry under \"Mail Content Disposition Values\n   and Parameters\".\n   Name:\
    \ info-package\n   Description: The body contains information associated with\
    \ an\n                Info Package\n   Reference: RFC6086\n"
- title: 11.6.  SIP Response Code 469 Registration
  contents:
  - "11.6.  SIP Response Code 469 Registration\n   IANA registered the following new\
    \ response code in the \"Session\n   Initiation Protocol (SIP) Parameters\" --\
    \ \"Response Codes\" registry.\n   Response Code: 469\n   Default Reason Phrase:\
    \ Bad Info Package\n   Reference: RFC6086\n"
- title: 12.  Examples
  contents:
  - '12.  Examples

    '
- title: 12.1.  Indication of Willingness to Receive INFO Requests for Info
  contents:
  - "12.1.  Indication of Willingness to Receive INFO Requests for Info\n       Packages\n"
- title: 12.1.1.  Initial INVITE Request
  contents:
  - "12.1.1.  Initial INVITE Request\n   The UAC sends an initial INVITE request,\
    \ where the UAC indicates that\n   it is willing to receive INFO requests for\
    \ Info Packages P and R.\n   INVITE sip:bob@example.com SIP/2.0\n   Via: SIP/2.0/TCP\
    \ pc33.example.com;branch=z9hG4bK776\n   Max-Forwards: 70\n   To: Bob <sip:bob@example.com>\n\
    \   From: Alice <sip:alice@example.com>;tag=1928301774\n   Call-ID: a84b4c76e66710@pc33.example.com\n\
    \   CSeq: 314159 INVITE\n   Recv-Info: P, R\n   Contact: <sip:alice@pc33.example.com>\n\
    \   Content-Type: application/sdp\n   Content-Length: ...\n   ...\n   The UAS\
    \ sends a 200 (OK) response back to the UAC, where the UAS\n   indicates that\
    \ it is willing to receive INFO requests for Info\n   Packages R and T.\n   SIP/2.0\
    \ 200 OK\n   Via: SIP/2.0/TCP pc33.example.com;branch=z9hG4bK776;\n        received=192.0.2.1\n\
    \   To: Bob <sip:bob@example.com>;tag=a6c85cf\n   From: Alice <sip:alice@example.com>;tag=1928301774\n\
    \   Call-ID: a84b4c76e66710@pc33.example.com\n   CSeq: 314159 INVITE\n   Contact:\
    \ <sip:bob@pc33.example.com>\n   Recv-Info: R, T\n   Content-Type: application/sdp\n\
    \   Content-Length: ...\n   ...\n   The UAC sends an ACK request.\n   ACK sip:bob@pc33.example.com\
    \ SIP/2.0\n   Via: SIP/2.0/TCP pc33.example.com;branch=z9hG4bK754\n   Max-Forwards:\
    \ 70\n   To: Bob <sip:bob@example.com>;tag=a6c85cf\n   From: Alice <sip:alice@example.com>;tag=1928301774\n\
    \   Call-ID: a84b4c76e66710@pc33.example.com\n   CSeq: 314159 ACK\n   Content-Length:\
    \ 0\n"
- title: 12.1.2.  Target Refresh
  contents:
  - "12.1.2.  Target Refresh\n   The UAC sends an UPDATE request within the invite\
    \ dialog usage, where\n   the UAC indicates (using an empty Recv-Info header field)\
    \ that it is\n   not willing to receive INFO requests for any Info Packages.\n\
    \   UPDATE sip:bob@pc33.example.com SIP/2.0\n   Via: SIP/2.0/TCP pc33.example.com;branch=z9hG4bK776\n\
    \   Max-Forwards: 70\n   To: Bob <sip:bob@example.com>;tag=a6c85cf\n   From: Alice\
    \ <sip:alice@example.com>;tag=1928301774\n   Call-ID: a84b4c76e66710@pc33.example.com\n\
    \   CSeq: 314163 UPDATE\n   Recv-Info:\n   Contact: <sip:alice@pc33.example.com>\n\
    \   Content-Type: application/sdp\n   Content-Length: ...\n   ...\n   The UAS\
    \ sends a 200 (OK) response back to the UAC, where the UAS\n   indicates that\
    \ it is willing to receive INFO requests for Info\n   Packages R and T.\n   SIP/2.0\
    \ 200 OK\n   Via: SIP/2.0/TCP pc33.example.com;branch=z9hG4bK893;\n        received=192.0.2.1\n\
    \   To: Bob <sip:bob@example.com>;tag=a6c85cf\n   From: Alice <sip:alice@example.com>;tag=1928301774\n\
    \   Call-ID: a84b4c76e66710@pc33.example.com\n   CSeq: 314163 INVITE\n   Contact:\
    \ <sip:alice@pc33.example.com>\n   Recv-Info: R, T\n   Content-Type: application/sdp\n\
    \   Content-Length: ...\n   ...\n"
- title: 12.2.  INFO Request Associated with Info Package
  contents:
  - '12.2.  INFO Request Associated with Info Package

    '
- title: 12.2.1.  Single Payload
  contents:
  - "12.2.1.  Single Payload\n   The UA sends an INFO request associated with Info\
    \ Package \"foo\".\n   INFO sip:alice@pc33.example.com SIP/2.0\n   Via: SIP/2.0/UDP\
    \ 192.0.2.2:5060;branch=z9hG4bKnabcdef\n   To: Bob <sip:bob@example.com>;tag=a6c85cf\n\
    \   From: Alice <sip:alice@example.com>;tag=1928301774\n   Call-Id: a84b4c76e66710@pc33.example.com\n\
    \   CSeq: 314333 INFO\n   Info-Package: foo\n   Content-type: application/foo\n\
    \   Content-Disposition: Info-Package\n   Content-length: 24\n   I am a foo message\
    \ type\n"
- title: 12.2.2.  Multipart INFO
  contents:
  - '12.2.2.  Multipart INFO

    '
- title: 12.2.2.1.  Non-Info Package Body Part
  contents:
  - "12.2.2.1.  Non-Info Package Body Part\n   SIP extensions can sometimes add body\
    \ part payloads into an INFO\n   request, independent of the Info Package.  In\
    \ this case, the Info\n   Package payload gets put into a multipart MIME body,\
    \ with a\n   Content-Disposition header field that indicates which body part is\n\
    \   associated with the Info Package.\n   INFO sip:alice@pc33.example.com SIP/2.0\n\
    \   Via: SIP/2.0/UDP 192.0.2.2:5060;branch=z9hG4bKnabcdef\n   To: Alice <sip:alice@example.net>;tag=1234567\n\
    \   From: Bob <sip:bob@example.com>;tag=abcdefg\n   Call-Id: a84b4c76e66710@pc33.example.com\n\
    \   CSeq: 314400 INFO\n   Info-Package: foo\n   Content-Type: multipart/mixed;boundary=\"\
    theboundary\"\n   Content-Length: ...\n   --theboundary\n   Content-Type: application/mumble\n\
    \   ...\n   <mumble stuff>\n   --theboundary\n   Content-Type: application/foo-x\n\
    \   Content-Disposition: Info-Package\n   Content-length: 59\n   I am a foo-x\
    \ message type, and I belong to Info Package foo\n   --theboundary--\n"
- title: 12.2.2.2.  Info Package with Multiple Body Parts inside Multipart Body
  contents:
  - "12.2.2.2.  Info Package with Multiple Body Parts inside Multipart Body\n    \
    \       Part\n   Multiple body part payloads can be associated with a single Info\n\
    \   Package.  In this case, the body parts are put into a multipart MIME\n   body,\
    \ with a Content-Disposition header field that indicates which\n   body part is\
    \ associated with the Info Package.\n   INFO sip:alice@pc33.example.com SIP/2.0\n\
    \   Via: SIP/2.0/UDP 192.0.2.2:5060;branch=z9hG4bKnabcdef\n   To: Alice <sip:alice@example.net>;tag=1234567\n\
    \   From: Bob <sip:bob@example.com>;tag=abcdefg\n   Call-Id: a84b4c76e66710@pc33.example.com\n\
    \   CSeq: 314423 INFO\n   Info-Package: foo\n   Content-Type: multipart/mixed;boundary=\"\
    theboundary\"\n   Content-Disposition: Info-Package\n   Content-Length: ...\n\
    \   --theboundary\n   Content-Type: application/foo-x\n   Content-length: 59\n\
    \   I am a foo-x message type, and I belong to Info Package foo\n   <mumble stuff>\n\
    \   --theboundary\n   Content-Type: application/foo-y\n   Content-length: 59\n\
    \   I am a foo-y message type, and I belong to Info Package foo\n   --theboundary--\n"
- title: 12.2.2.3.  Info Package with Single Body Part inside Multipart Body Part
  contents:
  - "12.2.2.3.  Info Package with Single Body Part inside Multipart Body Part\n  \
    \ The body part payload associated with the Info Package can have a\n   Content-Disposition\
    \ header field value other than \"Info-Package\".  In\n   this case, the body\
    \ part is put into a multipart MIME body, with a\n   Content-Disposition header\
    \ field that indicates which body part is\n   associated with the Info Package.\n\
    \   INFO sip:alice@pc33.example.com SIP/2.0\n   Via: SIP/2.0/UDP 192.0.2.2:5060;branch=z9hG4bKnabcdef\n\
    \   To: Alice <sip:alice@example.net>;tag=1234567\n   From: Bob <sip:bob@example.com>;tag=abcdefg\n\
    \   Call-Id: a84b4c76e66710@pc33.example.com\n   CSeq: 314423 INFO\n   Info-Package:\
    \ foo\n   Content-Type: multipart/mixed;boundary=\"theboundary\"\n   Content-Disposition:\
    \ Info-Package\n   Content-Length: ...\n   --theboundary\n   Content-Type: application/foo-x\n\
    \   Content-Disposition: icon\n   Content-length: 59\n   I am a foo-x message\
    \ type, and I belong to Info Package foo\n   --theboundary--\n"
- title: 13.  Security Considerations
  contents:
  - "13.  Security Considerations\n   By eliminating multiple usages of INFO messages\
    \ without adequate\n   community review, and by eliminating the possibility of\
    \ rogue SIP UAs\n   confusing another UA by purposely sending unrelated INFO requests,\
    \ we\n   expect this document's clarification of the use of INFO to improve\n\
    \   the security of the Internet.  While rogue UAs can still send\n   unrelated\
    \ INFO requests, this mechanism enables the UAS and other\n   security devices\
    \ to associate INFO requests with Info Packages that\n   have been negotiated\
    \ for a session.\n   If the content of the Info Package payload is private, UAs\
    \ will need\n   to use end-to-end encryption, such as S/MIME, to prevent access\
    \ to\n   the content.  This is particularly important, as transport of INFO is\n\
    \   likely not to be end-to-end, but through SIP proxies and back-to-back\n  \
    \ user agents (B2BUAs), which the user may not trust.\n   The INFO request transports\
    \ application level information.  One\n   implication of this is that INFO messages\
    \ may require a higher level\n   of protection than the underlying SIP dialog\
    \ signaling.  In\n   particular, if one does not protect the SIP signaling from\n\
    \   eavesdropping or authentication and repudiation attacks, for example\n   by\
    \ using TLS transport, then the INFO request and its contents will\n   be vulnerable\
    \ as well.  Even with SIP/TLS, any SIP hop along the path\n   from UAC to UAS\
    \ can view, modify, or intercept INFO requests, as they\n   can with any SIP request.\
    \  This means some applications may require\n   end-to-end encryption of the INFO\
    \ payload, beyond, for example, hop-\n   by-hop protection of the SIP signaling\
    \ itself.  Since the application\n   dictates the level of security required,\
    \ individual Info Packages\n   have to enumerate these requirements.  In any event,\
    \ the Info Package\n   mechanism described by this document provides the tools\
    \ for such\n   secure, end-to-end transport of application data.\n   One interesting\
    \ property of Info Package usage is that one can re-use\n   the same digest-challenge\
    \ mechanism used for INVITE-based\n   authentication for the INFO request.  For\
    \ example, one could use a\n   quality-of-protection (qop) value of authentication\
    \ with integrity\n   (auth-int), to challenge the request and its body, and prevent\n\
    \   intermediate devices from modifying the body.  However, this assumes\n   the\
    \ device that knows the credentials in order to perform the INVITE\n   challenge\
    \ is still in the path for the INFO request, or that the far-\n   end UAS knows\
    \ such credentials.\n"
- title: 14.  References
  contents:
  - '14.  References

    '
- title: 14.1.  Normative References
  contents:
  - "14.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC5226]  Narten, T. and H. Alvestrand, \"Guidelines for Writing\
    \ an\n              IANA Considerations Section in RFCs\", BCP 26, RFC 5226,\n\
    \              May 2008.\n   [RFC5234]  Crocker, D. and P. Overell, \"Augmented\
    \ BNF for Syntax\n              Specifications: ABNF\", STD 68, RFC 5234, January\
    \ 2008.\n   [RFC3261]  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston,\n\
    \              A., Peterson, J., Sparks, R., Handley, M., and E.\n           \
    \   Schooler, \"SIP: Session Initiation Protocol\", RFC 3261,\n              June\
    \ 2002.\n   [RFC5621]  Camarillo, G., \"Message Body Handling in the Session\n\
    \              Initiation Protocol (SIP)\", RFC 5621, September 2009.\n   [RFC5727]\
    \  Peterson, J., Jennings, C., and R. Sparks, \"Change Process\n             \
    \ for the Session Initiation Protocol (SIP) and the Real-\n              time\
    \ Applications and Infrastructure Area\", BCP 67,\n              RFC 5727, March\
    \ 2010.\n"
- title: 14.2.  Informative References
  contents:
  - "14.2.  Informative References\n   [RFC0793]  Postel, J., \"Transmission Control\
    \ Protocol\", STD 7,\n              RFC 793, September 1981.\n   [RFC2976]  Donovan,\
    \ S., \"The SIP INFO Method\", RFC 2976,\n              October 2000.\n   [RFC2616]\
    \  Fielding, R., Gettys, J., Mogul, J., Frystyk, H.,\n              Masinter,\
    \ L., Leach, P., and T. Berners-Lee, \"Hypertext\n              Transfer Protocol\
    \ -- HTTP/1.1\", RFC 2616, June 1999.\n   [RFC0768]  Postel, J., \"User Datagram\
    \ Protocol\", STD 6, RFC 768,\n              August 1980.\n   [RFC3264]  Rosenberg,\
    \ J. and H. Schulzrinne, \"An Offer/Answer Model\n              with Session Description\
    \ Protocol (SDP)\", RFC 3264,\n              June 2002.\n   [RFC3398]  Camarillo,\
    \ G., Roach, A., Peterson, J., and L. Ong,\n              \"Integrated Services\
    \ Digital Network (ISDN) User Part\n              (ISUP) to Session Initiation\
    \ Protocol (SIP) Mapping\",\n              RFC 3398, December 2002.\n   [RFC3840]\
    \  Rosenberg, J., Schulzrinne, H., and P. Kyzivat,\n              \"Indicating\
    \ User Agent Capabilities in the Session\n              Initiation Protocol (SIP)\"\
    , RFC 3840, August 2004.\n   [RFC3372]  Vemuri, A. and J. Peterson, \"Session\
    \ Initiation Protocol\n              for Telephones (SIP-T): Context and Architectures\"\
    ,\n              BCP 63, RFC 3372, September 2002.\n   [RFC3265]  Roach, A., \"\
    Session Initiation Protocol (SIP)-Specific\n              Event Notification\"\
    , RFC 3265, June 2002.\n   [RFC3428]  Campbell, B., Rosenberg, J., Schulzrinne,\
    \ H., Huitema, C.,\n              and D. Gurle, \"Session Initiation Protocol\
    \ (SIP) Extension\n              for Instant Messaging\", RFC 3428, December 2002.\n\
    \   [RFC4240]  Burger, E., Van Dyke, J., and A. Spitzer, \"Basic Network\n   \
    \           Media Services with SIP\", RFC 4240, December 2005.\n   [RFC4960]\
    \  Stewart, R., \"Stream Control Transmission Protocol\",\n              RFC 4960,\
    \ September 2007.\n   [RFC4975]  Campbell, B., Mahy, R., and C. Jennings, \"The\
    \ Message\n              Session Relay Protocol (MSRP)\", RFC 4975, September\
    \ 2007.\n   [RFC5022]  Van Dyke, J., Burger, E., and A. Spitzer, \"Media Server\n\
    \              Control Markup Language (MSCML) and Protocol\", RFC 5022,\n   \
    \           September 2007.\n   [RFC5057]  Sparks, R., \"Multiple Dialog Usages\
    \ in the Session\n              Initiation Protocol\", RFC 5057, November 2007.\n\
    \   [RFC5168]  Levin, O., Even, R., and P. Hagendorf, \"XML Schema for\n     \
    \         Media Control\", RFC 5168, March 2008.\n   [RFC5246]  Dierks, T. and\
    \ E. Rescorla, \"The Transport Layer Security\n              (TLS) Protocol Version\
    \ 1.2\", RFC 5246, August 2008.\n   [RFC5405]  Eggert, L. and G. Fairhurst, \"\
    Unicast UDP Usage Guidelines\n              for Application Designers\", BCP 145,\
    \ RFC 5405,\n              November 2008.\n   [RFC5707]  Saleem, A., Xin, Y.,\
    \ and G. Sharratt, \"Media Server Markup\n              Language (MSML)\", RFC\
    \ 5707, February 2010.\n   [RFC5751]  Ramsdell, B. and S. Turner, \"Secure/Multipurpose\
    \ Internet\n              Mail Extensions (S/MIME) Version 3.2 Message\n     \
    \         Specification\", RFC 5751, January 2010.\n   [W3C.REC-voicexml21-20070619]\n\
    \              Porter, B., Oshry, M., Rehor, K., Auburn, R., Bodell, M.,\n   \
    \           Carter, J., Burke, D., Baggia, P., Candell, E., Burnett,\n       \
    \       D., McGlashan, S., and A. Lee, \"Voice Extensible Markup\n           \
    \   Language (VoiceXML) 2.1\", World Wide Web Consortium\n              Recommendation\
    \ REC-voicexml21-20070619, June 2007,\n              <http://www.w3.org/TR/2007/REC-voicexml21-20070619>.\n\
    \   [SPEECHSC-MRCPv2]\n              Burnett, D. and S. Shanmugham, \"Media Resource\
    \ Control\n              Protocol Version 2 (MRCPv2)\", Work in Progress,\n  \
    \            November 2010.\n   [ECMA-355]\n              \"Standard ECMA-355\
    \ Corporate Telecommunication Networks -\n              Tunnelling of QSIG over\
    \ SIP\", ECMA http://\n              www.ecma-international.org/publications/standards/\n\
    \              Ecma-355.htm, June 2008.\n"
- title: Appendix A.  Acknowledgements
  contents:
  - "Appendix A.  Acknowledgements\n   The work on this document was influenced by\
    \ \"The Session Initiation\n   Protocol (SIP) INFO Considered Harmful\" (26 December\
    \ 2002) written by\n   Jonathan Rosenberg, and by \"Packaging and Negotiation\
    \ of INFO Methods\n   for the Session Initiation Protocol\" (15 January 2003)\
    \ written by\n   Dean Willis.\n   The following individuals have been involved\
    \ in the work, and have\n   provided input and feedback on this document:\n  \
    \    Adam Roach, Anders Kristensen, Andrew Allen, Arun Arunachalam, Ben\n    \
    \  Campbell, Bob Penfield, Bram Verburg, Brian Stucker, Chris\n      Boulton,\
    \ Christian Stredicke, Cullen Jennings, Dale Worley, Dean\n      Willis, Eric\
    \ Rescorla, Frank Miller, Gonzalo Camarillo, Gordon\n      Beith, Henry Sinnreich,\
    \ Inaki Baz Castillo, James Jackson, James\n      Rafferty, Jeroen van Bemmel,\
    \ Joel Halpern, John Elwell, Jonathan\n      Rosenberg, Juha Heinanen, Keith Drage,\
    \ Kevin Attard Compagno,\n      Manpreet Singh, Martin Dolly, Mary Barnes, Michael\
    \ Procter, Paul\n      Kyzivat, Peili Xu, Peter Blatherwick, Raj Jain, Rayees\
    \ Khan,\n      Robert Sparks, Roland Jesske, Roni Even, Salvatore Loreto, Sam\n\
    \      Ganesan, Sanjay Sinha, Spencer Dawkins, Steve Langstaff, Sumit\n      Garg,\
    \ and Xavier Marjoum.\n   John Elwell and Francois Audet helped with QSIG references.\
    \  In\n   addition, Francois Audet provided text for the revised abstract.\n \
    \  Keith Drage provided comments and helped immensely with Table 1.\n   Arun Arunachalam,\
    \ Brett Tate, John Elwell, Keith Drage, and Robert\n   Sparks provided valuable\
    \ feedback during the working group last call\n   process, in order to prepare\
    \ this document for publication.\n   Adam Roach, Dean Willis, John Elwell, and\
    \ Paul Kyzivat provided\n   valuable input in order to sort out the message body\
    \ part usage for\n   Info Packages.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Christer Holmberg\n   Ericsson\n   Hirsalantie 11\n  \
    \ Jorvas,   02420\n   Finland\n   EMail: christer.holmberg@ericsson.com\n   Eric\
    \ W. Burger\n   Georgetown University\n   EMail: eburger@standardstrack.com\n\
    \   URI:   http://www.standardstrack.com\n   Hadriel Kaplan\n   Acme Packet\n\
    \   100 Crosby Drive\n   Bedford, MA  01730\n   USA\n   EMail: hkaplan@acmepacket.com\n"
