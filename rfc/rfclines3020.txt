Abstract This memo defines a Management Information Base (MIB) for monitoring and controlling a UNI/NNI Multilink Frame Relay Function as defined in Frame Relay Forum FRF.16.
This MIB also includes conformance and notification information.
The SNMP Management Framework presently consists of five major components:  An overall architecture, described in RFC 2571
Mechanisms for describing and naming objects and events for the purpose of management.
The first version of this Structure of Management Information (SMI) is called SMIv1 and described in STD 16, RFC 1155
[RFC1155], STD 16, RFC 1212 [RFC1212] and RFC 1215 [RFC1215].
The second version, called SMIv2, is described in STD 58:
RFC 2578 [RFC2578], RFC 2579
Message protocols for transferring management information.
The first version of the SNMP message protocol is called SNMPv1 and described in STD 15, RFC 1157
A second version of the SNMP message protocol, which is not an Internet standards track protocol, is called SNMPv2c and described in RFC 1901
[RFC1901] and RFC 1906 [RFC1906].
The third version of the message protocol is called SNMPv3 and described in RFC 1906
[RFC1906], RFC 2572 [RFC2572] and RFC 2574
Protocol operations for accessing management information.
The first set of protocol operations and associated PDU formats is described in STD 15, RFC 1157 [RFC1157].
A second set of protocol operations and associated PDU formats is described in RFC 1905 [RFC1905].
A set of fundamental applications described in RFC 2573 [RFC2573] and the view based access control mechanism described in RFC 2575
A more detailed introduction to the current SNMP Management Framework can be found in RFC 2570 [RFC2570].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
Objects in the MIB are defined using the mechanisms defined in the SMI.
This memo specifies a MIB module that is compliant to the SMIv2.
A MIB conforming to the SMIv1 can be produced through the appropriate translations.
The resulting translated MIB must be semantically equivalent, except where objects or events are omitted because no translation is possible (use of Counter64).
Some machine readable information in SMIv2 will be converted into textual descriptions in SMIv1 during the translation process.
However, this loss of machine readable information is not considered to change the semantics of the MIB.
This document defines a Management Information Base (MIB) for monitoring and controlling the UNI/NNI Multilink Frame Relay function.
The agreement on which this MIB is based was defined and documented by the Frame Relay Forum in the Frame Relay Forum Document FRF.16 [FRF.16].
Multilink Frame Relay Background Multilink Frame Relay (MFR) for the User to Network Interface (UNI) and the Network to Network Interface (NNI) provides physical interface emulation for frame relay devices.
The emulated physical interface consists of one or more physical links, called "bundle links", aggregated together into a single "bundle" of bandwidth.
This service provides a frame based inverse multiplexing function, sometimes referred to as an "IMUX".
The bundle provides the same order preserving service as a physical layer for frames sent on a data link connection.
In addition, the bundle provides support for all Frame Relay services based on UNI and NNI standards.
A single physical interface that interconnects two devices in a frame relay network (e.g., DS1, DS0, Bearer channel, refer to FRF.14).
The bundle operates as a logical interface function that emulates a single physical interface to the Q.922 data link layer.
A MFR sub component that controls operation of one of the bundle's physical links.
MFR Reference Diagram Note 1: C Plane operation as described in Q.933 [Q.933] and FRF.4 [FRF.4]
Multiple frame acknowledged information transfer mode as described in Q.922 [Q.922]
Core aspects for use with frame relay bearer service as described in Q.922, Annex A [Q.922] 2.2.
The UNI/NNI MFR managed objects consist of two scalar objects and three tables.
This scalar is used to inform the manager of the maximum number of bundles supported by this device.
mfrBundleNextIndex This scalar is used to assist the manager in selecting a value for mfrBundleIndex during row creation.
It can also be used to avoid race conditions with multiple managers trying to create rows in the table
(see RFC 2494 [RFC2494] for one such algorithm).
This table provides a means to configure and monitor bundles.
It is indexed by mfrBundleIndex and contains these columns:
Bundle to ifIndex Mapping Table
This table provides a means to take an ifIndex and find the corresponding
It is indexed by ifIndex and contains these columns:
This table provides a means to configure and monitor bundle links.
It is indexed by ifIndex and contains these columns:
Relationship With Other MIBS and Tables 2.3.1.
Relationship With Interface Table 2.3.1.1.
Each bundle link will appear as an interface in the ifTable.
The ifIndex that appears in the ifTable is used for indexing the bundle link tables in the UNI NNI MFR MIB.
Each bundle will appear as an interface in the ifTable.
There will be corresponding mfrBundleIndex which may be different than the ifIndex of the bundle.
The reason is best summarized in RFC 2494 [RFC2494], which describes frame relay bundle of DS0.
It says: This table is not indexed by ifIndex because the manager has to choose the index in a createable row and the agent must be allowed to select ifIndex values.
The rows in the ifEntry table are not createable as they do not have row status.
[RFC2863] suggests that the ifIndex should be chosen by the agent.
Here is its statement regarding row creation and deletion:
While some interfaces, for example, most physical interfaces, cannot be created via network management, other interfaces such as logical interfaces sometimes can be.
The ifTable contains only generic information about an interface.
Almost all 'create able' interfaces have other, media specific, information through which configuration parameters may be supplied prior to creating such an interface.
Thus, the ifTable does not itself support the creation or deletion of an interface (specifically, it has no RowStatus column).
Rather, if a particular interface type supports the dynamic creation and/or deletion of an interface of that type, then that media specific MIB should include an appropriate RowStatus object (see the ATM LAN Emulation Client MIB [ATMLANE] for an example of a MIB which does this).
Typically, when such a RowStatus object is created/deleted, then the conceptual row in the ifTable appears/disappears as a by product, and an ifIndex value (chosen by the agent) is stored in an appropriate object in the media specific MIB.
The ATM LAN Emulation Client MIB [ATMLANE] uses different indices and so does the IMA MIB [ATMIMA].
Looking at the examples we have, and the statements from RFC, it seems better to have two indices.
This gives the SNMP agent implementor the freedom to manage their ifIndex in the way they like.
Mapping Between ifIndex and mfrBundleIndex
The mfrBundleIfIndexMappingTable is indexed by ifIndex and provides the means to map a given ifIndex into the corresponding
The mfrBundleIfIndexMapping object in the mfrBundleTable (indexed by mfrBundleIndex) provides the reverse mapping of a mfrBundleIndex to the corresponding ifIndex in the ifTable.
The bundle configuration and status table.
There is a one to one correspondence between a bundle and an interface represented in the ifTable.
The following objects of the ifTable have specific meaning for an MFR bundle:
the number of frames received on the bundle ifOutUcastPkts  the number of frames transmitted on the bundle ifInErrors
The following objects of the ifTable have specific meaning for an MFR bundle link:
the bundle link admin status
the bundle link operational status
the bandwidth of the bundle link interface ifInUcastPkts
Relationship With Interface Stack Table
The bundles and bundle links will appear in the ifStackTable defined in RFC 2863
Each bundle link will appear a lower layer to its owner bundle.
The bundle will appear as a higher layer to the bundle links and as a lower layer to a frame relay service or UNI.
Relationship With Frame Relay DTE MIB
The bundle will have a one to one correspondence with a DLCMI or UNI that appear in the DTE MIB tables [RFC2115].
Relationship With Frame Relay Service MIB
There is a one to one relationship between the MFR bundle and the frame relay service logical port defined in RFC1604 [RFC1604].
Example Figure two shows an example of how the various tables are related.
This example shows two bundles composed of 2 T1s each.
The bundles have a mfrBundleIndex of 10 and 20 respectively.
The assignment of the ifTable index values could for example be:
The ifStackTable is then used to show the relationships between the various interfaces.
The mfrBundleIfIndexMappingTable shows the relationship between the ifTable ifIndex and the mfrBundleIndex:
The mfrBundleTable shows the relationship between the mfrBundleIndex and the ifIndex:
The mfrBundleLinkTable shows the relationship between the bundles and bundle links:
Creation Of Bundles and Bundle Links 2.4.1.
A new bundle is created by setting a createAndGo(4) value in the mfrBundleRowStatus RowStatus object.
Optionally, an agent could also support setting a value of createAndWait(5) followed by a set to the value active(1).
When a bundle is created, the agent must create a new interface in the ifTable.
The ifIndex for this new interface is used for the value of mfrBundleIfIndex. 2.4.2.
A new bundle link is created by setting a createAndGo(4) value in the mfrBundleLinkRowStatus RowStatus object.
The bundle link is associated with a specific physical interface and uses the ifIndex of the physical interface.
The mfrBundleLinkEntry row objects may be created after or during creation of the physical interface's ifEntry row objects.
The bundle identified in the object mfrBundleIndex must exist at time of bundle link creation.
The linkUp and linkDown traps are defined in RFC 2223
The following SNMP traps are defined for MFR bundles.
This trap is sent when the ifOperStatus of a bundle transitions from down to up.
This occurs when a sufficient number of links (determined by mfrBundleActivationClass and mfrBundleThreshold) are in the operationally up state.
linkDown This trap is sent when the ifOperStatus of a bundle transitions from up to down.
This occurs when a insufficient number of links (determined by mfrBundleActivationClass and mfrBundleThreshold) are in the operationally up state.
The following SNMP traps are defined for MFR bundle links.
This trap is sent when a mfrBundleLinkState object transitions to the value mfrBundleLinkStateUp.
linkDown This trap is sent when a mfrBundleLinkState object transitions from the value mfrBundleLinkStateUp.
This trap indicates that a bundle link mismatch has been detected.
The following objects are reported:  mfrBundleNearEndName:
configured name of near end bundle  mfrBundleLinkFarEndName:
reported name of far end bundle  mfrBundleLinkFarEndBundleName: currently reported name of far end bundle Note that the configured items may have been configured automatically.
Note also that the mfrBundleLinkMismatch counter is incremented when the trap is sent.
Object Definitions Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
Objects in the MIB are defined using the subset of Abstract Syntax Notation One (ASN.1) defined in the SMI.
In particular, each object type is named by an OBJECT IDENTIFIER, an administratively assigned name.
The object type together with an object instance serves to uniquely identify a specific instantiation of the object.
For human convenience, we often use a textual string, termed the descriptor, to refer to the object type.
FR MFR MIB DEFINITIONS ::
IMPORTS MODULE IDENTITY, OBJECT TYPE, Integer32, Counter32, NOTIFICATION TYPE, transmission FROM SNMPv2 SMI TEXTUAL CONVENTION, TestAndIncr, RowStatus FROM SNMPv2
TC MODULE COMPLIANCE, OBJECT GROUP, NOTIFICATION GROUP FROM SNMPv2
CONF SnmpAdminString FROM SNMP FRAMEWORK MIB InterfaceIndex, ifIndex FROM IF MIB; mfrMib MODULE IDENTITY LAST UPDATED
"200011300000Z" ORGANIZATION "IETF Frame Relay Service MIB
Working Group" CONTACT INFO "
frnetmib request@sunroof.eng.sun.com Email Archive: ftp://ftp.ietf.org/ietf mail archive/frnetmib Chair:
Andy Malis Vivace Networks Email:
Bob Lynch Overture Networks EMail:
This is the MIB used to control and monitor the multilink frame relay (MFR) function described in FRF.16."
"The possible states for a bundle link, as defined in Annex A of FRF.16.
"This object is used to inform the manager of the maximum number of bundles supported by this device."
{ mfrMibScalarObjects 1 } mfrBundleNextIndex OBJECT
"This object is used to assist the manager in selecting a value for mfrBundleIndex during row creation in the mfrBundleTable.
It can also be used to avoid race conditions with multiple managers trying to create rows in the table
(see RFC 2494 [RFC2494] for one such alogrithm).
current DESCRIPTION "The bundle configuration and status table.
There is a one to one correspondence between a bundle and an interface represented in the ifTable.
The following objects of the ifTable have specific meaning for an MFR bundle:
mfrBundleIndex Integer32, mfrBundleIfIndex InterfaceIndex, mfrBundleRowStatus RowStatus, mfrBundleNearEndName SnmpAdminString, mfrBundleFragmentation INTEGER, mfrBundleMaxFragSize Integer32, mfrBundleTimerHello INTEGER, mfrBundleTimerAck INTEGER, mfrBundleCountMaxRetry INTEGER, mfrBundleActivationClass INTEGER,
mfrBundleLinksActive Integer32, mfrBundleBandwidth Integer32, mfrBundleFarEndName SnmpAdminString, mfrBundleResequencingErrors Counter32 }
The index into the table.
While this corresponds to an entry in the ifTable, the value of mfrBundleIndex need not match that of the ifIndex in the ifTable.
A manager can use mfrBundleNextIndex to select a unique mfrBundleIndex for creating a new row."
InterfaceIndex MAX ACCESS  read only STATUS  current DESCRIPTION
"The value must match an entry in the interface table whose ifType must be set to frf16MfrBundle(163).
For example: if the value of mfrBundleIfIndex is 10, then a corresponding entry should be present in the ifTable with an index of 10 and an ifType of 163."
} mfrBundleRowStatus OBJECT TYPE SYNTAX
RowStatus MAX ACCESS  read create
"The mfrBundleRowStatus object allows create, change, and delete operations on bundle entries."
"The configured name of the bundle."
REFERENCE "FRF.16 section 3.4.1" ::
{ mfrBundleEntry 4 } mfrBundleFragmentation OBJECT TYPE SYNTAX
INTEGER { enable  (1), disable (2) }
"Controls whether the bundle performs/accepts fragmentation and re assembly.
The possible values are: enable(1)
Bundle links will fragment frames disable(2)
Bundle links will not fragment frames.
UNITS "Octets" MAX ACCESS  read create
"The maximum fragment size supported.
Note that this is only valid if mfrBundleFragmentation is set to enable(1).
Zero is not a valid fragment size.
A bundle that does not support fragmentation must return this object with a value of  1."
) UNITS "Seconds" MAX ACCESS  read create
"The configured MFR Hello Timer value."
) UNITS "Seconds" MAX ACCESS  read create
"The configured MFR T ACK value.
" REFERENCE "FRF.16 section 4.3.8.2
"The MFR N MAX RETRY value.
} mfrBundleActivationClass OBJECT TYPE SYNTAX
INTEGER { mfrBundleActivationClassA (1), mfrBundleActivationClassB (2), mfrBundleActivationClassC (3), mfrBundleActivationClassD (4) } MAX ACCESS  read create
"Controls the conditions under which the bundle is activated.
The following settings are available:
at least one must link up mfrBundleActivationClassB(2)
all links must be up mfrBundleActivationClassC(3)
a certain number must be up.
Refer to mfrBundleThreshold for the required number.
UNITS "Bundle Links" MAX ACCESS  read
"Specifies the number of links that must be in operational 'up' state before the bundle will transition to an operational up/active state.
If the number of operational 'up' links falls below this value, then the bundle will transition to an inactive state.
Note this is only valid when mfrBundleActivationClass is set to mfrBundleActivationClassC or, depending upon the implementation, to mfrBundleActivationClassD.
A bundle that is not set to one of these must return this object with a value of  1.
UNITS "Milliseconds" MAX ACCESS  read create
"The maximum delay difference between the bundle links.
"Controls whether the standard FRF.12 12 bit sequence number is used or the optional 24 bit sequence number.
UNITS "Bundle Links" MAX ACCESS  read only STATUS  current DESCRIPTION
UNITS "Bundle Links" MAX ACCESS  read only STATUS  current DESCRIPTION
"The number of links configured for the bundle."
UNITS "Bundle Links" MAX ACCESS  read only STATUS  current DESCRIPTION
read only STATUS  current DESCRIPTION
} mfrBundleFarEndName OBJECT TYPE SYNTAX
current DESCRIPTION "Name of the bundle received from the far end.
UNITS "Error Events" MAX ACCESS  read only STATUS  current DESCRIPTION
"A count of the number of resequencing errors.
Each event may correspond to multiple lost frames.
: Say sequence number 56, 59 and 60 is received for DLCI 100.
It is decided by some means that sequence 57 and 58 is lost.
This counter should then be incremented by ONE, even though two frames were lost."
SEQUENCE OF MfrBundleIfIndexMappingEntry MAX ACCESS
A table mapping the values of ifIndex to the mfrBundleIndex.
This is required in order to find the mfrBundleIndex given an ifIndex.
"Each row describes one ifIndex to mfrBundleIndex mapping.
MAX ACCESS  read only STATUS  current DESCRIPTION
"The mfrBundleIndex of the given ifIndex."
"The bundle link configuration and status table.
There is a one to one correspondence between a bundle link and a physical interface represented in the ifTable.
The ifIndex of the physical interface is used to index the bundle link table, and to create rows.
The following objects of the ifTable have specific meaning for an MFR bundle link:
ifAdminStatus  the bundle link admin status ifOperStatus
the bundle link operational status
the bandwidth of the bundle link interface ifInUcastPkts
An entry in the bundle link table."
SEQUENCE { mfrBundleLinkRowStatus RowStatus, mfrBundleLinkConfigBundleIndex Integer32, mfrBundleLinkNearEndName SnmpAdminString,
mfrBundleLinkState MfrBundleLinkState, mfrBundleLinkFarEndName SnmpAdminString, mfrBundleLinkFarEndBundleName SnmpAdminString,
, mfrBundleLinkFramesControlTx Counter32, mfrBundleLinkFramesControlRx Counter32, mfrBundleLinkFramesControlInvalid Counter32, mfrBundleLinkTimerExpiredCount Counter32, mfrBundleLinkLoopbackSuspected Counter32, mfrBundleLinkUnexpectedSequence Counter32
, mfrBundleLinkMismatch Counter32 } mfrBundleLinkRowStatus
RowStatus MAX ACCESS  read create
"The mfrBundleLinkRowStatus object allows create, change, and delete operations on mfrBundleLink entries.
The create operation must fail if no physical interface is associated with the bundle link."
"The mfrBundleLinkConfigBundleIndex object allows the manager to control the bundle to which the bundle link is assigned.
If no value were in this field, then the bundle would remain in NOT READY rowStatus and be unable to go to active.
With an appropriate mfrBundleIndex in this field, then we could put the mfrBundleLink row in NOT IN SERVICE or ACTIVE rowStatus."
"The configured bundle link name that is sent to the far end."
{ mfrBundleLinkEntry 3 } mfrBundleLinkState OBJECT TYPE SYNTAX
read only STATUS  current DESCRIPTION
"Current bundle link state as defined by the MFR protocol described in Annex A of FRF.16."
current DESCRIPTION "Name of bundle link received from far end."
5 } mfrBundleLinkFarEndBundleName OBJECT TYPE SYNTAX
read only STATUS  current DESCRIPTION "Name of far end bundle for this link received from far end.
UNITS "Milliseconds" MAX ACCESS  read only STATUS  current DESCRIPTION
"Current round trip delay for this bundle link.
The value  1 is returned when an implementation does not support measurement of the bundle link delay.
UNITS "Frames" MAX ACCESS  read only STATUS
current DESCRIPTION "Number of MFR control frames sent.
UNITS "Frames" MAX ACCESS  read only STATUS  current DESCRIPTION "Number of valid MFR control frames received.
UNITS "Frames" MAX ACCESS  read only STATUS  current DESCRIPTION
"The number of invalid MFR control frames received."
UNITS "Timer Expiration Events" MAX ACCESS  read only STATUS
current DESCRIPTION "Number of times
the T HELLO or T ACK timers expired.
UNITS "Loopback Suspected Events" MAX ACCESS  read only STATUS  current DESCRIPTION
"The number of times a loopback has been suspected (based upon the use of magic numbers).
UNITS "Frames" MAX ACCESS  read only STATUS  current DESCRIPTION
"The number of data MFR frames discarded because the sequence number of the frame for a DLCI was less than (delayed frame) or equal to (duplicate frame) the one expected for that DLCI.
Example: Say frames with sequence numbers 56, 58, 59 is received for DLCI 100.
While waiting for sequence number 57 another frame with sequence number 58 arrives.
Frame 58 is discarded and the counter is incremented.
UNITS "Bundle Name Mismatch Events" MAX ACCESS  read only STATUS  current DESCRIPTION
"This trap indicates that a bundle link mismatch has been detected.
The following objects are reported:
configured name of near end bundle mfrBundleFarEndName:
previously reported name of far end bundle mfrBundleLinkNearEndName: configured name of near end bundle mfrBundleLinkFarEndName:
reported name of far end bundle mfrBundleLinkFarEndBundleName:
currently reported name of far end bundle Note: that the configured items may have been configured automatically.
The mfrBundleLinkMismatch counter is incremented when the trap is sent.
"The compliance statement for equipment that implements the FRF16 MIB.
All of the current groups are mandatory, but a number of objects may be read only if the implementation does not allow configuration."
this module MANDATORY GROUPS { mfrMibBundleGroup, mfrMibBundleLinkGroup, mfrMibTrapGroup }
MIN ACCESS read only DESCRIPTION
"Write access is not required, but the value used must be reported."
MIN ACCESS read only DESCRIPTION
"Write access is not required, but the value used must be reported.
A value of  1 indicates that the value is not applicable."
MIN ACCESS read only DESCRIPTION
"Write access is not required, but the value used must be reported.
A value of  1 indicates that the value is not applicable."
MIN ACCESS read only DESCRIPTION
"Write access is not required, but the value used must be reported."
MIN ACCESS read only DESCRIPTION "Write access is not required, but the value used must be reported.
A value of  1 indicates that the value is not applicable."
mfrBundleIfIndexMappingIndex } STATUS current DESCRIPTION "Group of objects describing bundles."
There are a number of management objects defined in this MIB that have a MAX ACCESS clause of read write and/or read create.
Such objects may be considered sensitive or vulnerable in some network environments.
The support for SET operations in a non secure environment without proper protection can have a negative effect on network operations.
No managed objects in this MIB contain sensitive information.
by itself is not a secure environment.
Even if the network itself is secure (for example by using IPSec), even then, there is no control as to who on the secure network is allowed to access and
the objects in this MIB.
It is recommended that the implementers consider the security features as provided by the SNMPv3 framework.
Specifically, the use of the User based Security Model RFC 2574
[RFC2574] and the View  based Access Control Model RFC 2575
It is then a customer/user responsibility to ensure that the SNMP entity giving access to an instance of this MIB, is properly configured to give access to the objects only to those principals (users) that have legitimate rights to indeed GET or SET
