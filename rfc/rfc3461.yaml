- contents:
  - "         Simple Mail Transfer Protocol (SMTP) Service Extension\n                for
    Delivery Status Notifications (DSNs)\n"
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This memo defines an extension to the Simple Mail Transfer Protocol\n
    \  (SMTP) service, which allows an SMTP client to specify (a) that\n   Delivery
    Status Notifications (DSNs) should be generated under\n   certain conditions,
    (b) whether such notifications should return the\n   contents of the message,
    and (c) additional information, to be\n   returned with a DSN, that allows the
    sender to identify both the\n   recipient(s) for which the DSN was issued, and
    the transaction in\n   which the original message was sent.\n"
  title: Abstract
- contents:
  - "Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in BCP 14, RFC 2119 [7].\n"
  title: Terminology
- contents:
  - "Table of Contents\n   1. Introduction . . . . . . . . . . . . . . . . . . . .
    . . . . .  3\n   2. Framework for the Delivery Status Notification Extension .
    . .  4\n   3. The Delivery Status Notification service extension . . . . . .  5\n
    \  4. Additional parameters for RCPT and MAIL commands . . . . . . .  6\n   4.1
    The NOTIFY parameter of the ESMTP RCPT command. . . . . . . .  7\n   4.2 The ORCPT
    parameter to the ESMTP RCPT command . . . . . . . .  8\n   4.3 The RET parameter
    of the ESMTP MAIL command . . . . . . . . .  9\n   4.4 The ENVID parameter to
    the ESMTP MAIL command . . . . . . . .  9\n   4.5 Restrictions on the use of Delivery
    Status Notification\n       parameters. . . . . . . . . . . . . . . . . . . .
    . . . . . . 10\n   5. Conformance requirements . . . . . . . . . . . . . . . .
    . . . 10\n   5.1 SMTP protocol interactions. . . . . . . . . . . . . . . . . .
    11\n   5.2 Handling of messages received via SMTP. . . . . . . . . . . . 11\n
    \  5.2.1 Relay of messages to other conforming SMTP servers. . . . . 12\n   5.2.2
    Relay of messages to non-conforming SMTP servers. . . . . . 13\n   5.2.3 Local
    delivery of messages. . . . . . . . . . . . . . . . . 14\n   5.2.4 Gatewaying
    a message into a foreign environment . . . . . . 14\n   5.2.5 Delays in delivery.
    . . . . . . . . . . . . . . . . . . . . 15\n   5.2.6 Failure of a conforming MTA
    to deliver a message. . . . . . 16\n   5.2.7 Forwarding, aliases, and mailing
    lists. . . . . . . . . . . 16\n   5.2.7.1 mailing lists . . . . . . . . . . .
    . . . . . . . . . . . 17\n   5.2.7.2 single-recipient aliases. . . . . . . . .
    . . . . . . . . 18\n   5.2.7.3 multiple-recipient aliases. . . . . . . . . . .
    . . . . . 18\n   5.2.7.4 confidential forwarding addresses . . . . . . . . . .
    . . 18\n   5.2.8 DSNs describing delivery to multiple recipients . . . . . . 19\n
    \  5.3 Handling of messages from other sources . . . . . . . . . . . 19\n   5.4
    Implementation limits . . . . . . . . . . . . . . . . . . . . 19\n   6. Format
    of delivery notifications . . . . . . . . . . . . . . . 20\n   6.1 SMTP Envelope
    to be used with delivery status\n       notifications . . . . . . . . . . . .
    . . . . . . . . . . . . 20\n   6.2 Contents of the DSN . . . . . . . . . . . .
    . . . . . . . . . 20\n   6.3 Message/delivery-status fields. . . . . . . . . .
    . . . . . . 21\n   7. Acknowledgments. . . . . . . . . . . . . . . . . . . . .
    . . . 22\n   8. Security Considerations. . . . . . . . . . . . . . . . . . . .
    22\n   9. Appendix - Type-Name Definitions . . . . . . . . . . . . . . . 24\n
    \  9.1 \"rfc822\" address-type . . . . . . . . . . . . . . . . . . . . 24\n   9.2
    \"smtp\" diagnostic-type. . . . . . . . . . . . . . . . . . . . 24\n   9.3 \"dns\"
    MTA-name-type . . . . . . . . . . . . . . . . . . . . . 25\n   10. Appendix -
    Example. . . . . . . . . . . . . . . . . . . . . . 26\n   10.1 Submission . .
    . . . . . . . . . . . . . . . . . . . . . . . 27\n   10.2 Relay to Example.COM
    . . . . . . . . . . . . . . . . . . . . 28\n   10.3 Relay to Ivory.EDU . . . .
    . . . . . . . . . . . . . . . . . 29\n   10.4 Relay to Bombs.AF.MIL. . . . . .
    . . . . . . . . . . . . . . 30\n   10.5 Forward from George@Tax-ME.GOV to Sam@Boondoggle.GOV
    . . . . 31\n   10.6 \"Delivered\" DSN for Bob@Example.COM. . . . . . . . . . .
    . . 32\n   10.7 Failed DSN for Carol@Ivory.EDU . . . . . . . . . . . . . . . 33\n
    \  10.8 Relayed DSN For Dana@Ivory.EDU . . . . . . . . . . . . . . . 34\n   10.9
    Failure notification for Sam@Boondoggle.GOV. . . . . . . . . 35\n   11. Appendix
    - Changes since RFC 1891 . . . . . . . . . . . . . . 35\n   12. References. .
    . . . . . . . . . . . . . . . . . . . . . . . . 36\n   12.1 Normative References
    . . . . . . . . . . . . . . . . . . . . 36\n   12.2 Informative References . .
    . . . . . . . . . . . . . . . . . 36\n   13. Author's Address. . . . . . . . .
    . . . . . . . . . . . . . . 37\n   14. Full Copyright Statement. . . . . . . .
    . . . . . . . . . . . 38\n"
  title: Table of Contents
- contents:
  - "1. Introduction\n   The SMTP protocol [1] requires that an SMTP server provide\n
    \  notification of delivery failure, if it determines that a message\n   cannot
    be delivered to one or more recipients.  Traditionally, such\n   notification
    consists of an ordinary Internet mail message (format\n   defined by [2]), sent
    to the envelope sender address (the argument of\n   the SMTP MAIL command), containing
    an explanation of the error and at\n   least the headers of the failed message.\n
    \  Experience with large mail distribution lists [8] indicates that such\n   messages
    are often insufficient to diagnose problems, or even to\n   determine at which
    host or for which recipients a problem occurred.\n   In addition, the lack of
    a standardized format for delivery\n   notifications in Internet mail makes it
    difficult to exchange such\n   notifications with other message handling systems.\n
    \  Such experience has demonstrated a need for a delivery status\n   notification
    service for Internet electronic mail, which:\n   (a)  is reliable, in the sense
    that any DSN request will either be\n        honored at the time of final delivery,
    or result in a response\n        that indicates that the request cannot be honored,\n
    \  (b)  when both success and failure notifications are requested,\n        provides
    an unambiguous and nonconflicting indication of whether\n        delivery of a
    message to a recipient succeeded or failed,\n   (c)  is stable, in that a failed
    attempt to deliver a DSN should\n        never result in the transmission of another
    DSN over the\n        network,\n   (d)  preserves sufficient information to allow
    the sender to identify\n        both the mail transaction and the recipient address
    which caused\n        the notification, even when mail is forwarded or gatewayed
    to\n        foreign environments, and\n   (e)  interfaces acceptably with non-SMTP
    and non-822-based mail\n        systems, both so that notifications returned from
    foreign mail\n        systems may be useful to Internet users, and so that the\n
    \       notification requests from foreign environments may be honored.\n        Among
    the requirements implied by this goal are the ability to\n        request non-return-of-content,
    and the ability to specify\n        whether positive delivery notifications, negative
    delivery\n        notifications, both, or neither, should be issued.\n   In an
    attempt to provide such a service, this memo uses the mechanism\n   defined in
    [1] to define an extension to the SMTP protocol.  Using\n   this mechanism, an
    SMTP client may request that an SMTP server issue\n   or not issue a Delivery
    Status Notification (DSN) under certain\n   conditions.  The format of a DSN is
    defined in [3].\n"
  title: 1. Introduction
- contents:
  - "2. Framework for the Delivery Status Notification Extension\n   The following
    service extension is therefore defined:\n   (1)  The name of the SMTP service
    extension is \"Delivery Status\n        Notification\";\n   (2)  the EHLO keyword
    value associated with this extension is \"DSN\",\n        the meaning of which
    is defined in section 3 of this memo;\n   (3)  no parameters are allowed with
    this EHLO keyword value;\n   (4)  two optional parameters are added to the RCPT
    command, and two\n        optional parameters are added to the MAIL command:\n
    \       An optional parameter for the RCPT command, using the\n        esmtp-keyword
    \"NOTIFY\", (to specify the conditions under which a\n        Delivery Status
    Notification should be generated), is defined in\n        section 5.1,\n        An
    optional parameter for the RCPT command, using the\n        esmtp-keyword \"ORCPT\",
    (used to convey the \"original\"\n        (sender-specified) recipient address),
    is defined in section\n        5.2, and\n        An optional parameter for the
    MAIL command, using the\n        esmtp-keyword \"RET\", (to request that DSNs
    containing an\n        indication of delivery failure either return the entire
    contents\n        of a message or only the message headers), is defined in section\n
    \       5.3,\n        An optional parameter for the MAIL command, using the\n
    \       esmtp-keyword \"ENVID\", (used to propagate an identifier for this\n        message
    transmission envelope, which is also known to the sender\n        and will, if
    present, be returned in any DSNs issued for this\n        transmission), is defined
    in section 4.4;\n   (5)  no additional SMTP verbs are defined by this extension.\n
    \  The remainder of this memo specifies how support for the extension\n   affects
    the behavior of a message transfer agent.\n"
  title: 2. Framework for the Delivery Status Notification Extension
- contents:
  - "3. The Delivery Status Notification service extension\n   An SMTP client wishing
    to request a DSN for a message may issue the\n   EHLO command to start an SMTP
    session, to determine if the server\n   supports any of several service extensions.
    \ If the server responds\n   with code 250 to the EHLO command, and the response
    includes the EHLO\n   keyword DSN, then the Delivery Status Notification extension
    (as\n   described in this memo) is supported.\n   Ordinarily, when an SMTP server
    returns a positive (2xx) reply code\n   in response to a RCPT command, it agrees
    to accept responsibility for\n   either delivering the message to the named recipient,
    or sending a\n   notification to the sender of the message indicating that delivery\n
    \  has failed.  However, an extended SMTP (\"ESMTP\") server which\n   implements
    this service extension will accept an optional NOTIFY\n   parameter with the RCPT
    command.  If present, the NOTIFY parameter\n   alters the conditions for generation
    of Delivery Status Notifications\n   from the default (issue notifications only
    on failure) specified in\n   [1].  The ESMTP client may also request (via the
    RET parameter)\n   whether the entire contents of the original message should
    be\n   returned (as opposed to just the headers of that message), along with\n
    \  the DSN.\n   In general, an ESMTP server which implements this service extension\n
    \  will propagate Delivery Status Notification requests when relaying\n   mail
    to other SMTP-based MTAs which also support this extension, and\n   make a \"best
    effort\" to ensure that such requests are honored when\n   messages are passed
    into other environments.\n   In order for Delivery Status Notifications to be
    meaningful to the\n   sender, ESMTP servers, which support this extension, should
    propagate\n   the following information for use in generating DSNs to any other\n
    \  MTAs that are used to relay the message:\n   (a)  for each recipient, a copy
    of the original recipient address, as\n        used by the sender of the message.\n
    \       This address need not be the same as the mailbox specified in\n        the
    RCPT command.  For example, if a message was originally\n        addressed to
    A@B.C and later forwarded to A@D.E, after such\n        forwarding has taken place,
    the RCPT command will specify a\n        mailbox of A@D.E.  However, the original
    recipient address\n        remains A@B.C.\n        Also, if the message originated
    from an environment which does\n        not use Internet-style user@domain addresses,
    and was gatewayed\n        into SMTP, the original recipient address will preserve
    the\n        original form of the recipient address.\n   (b)  for the entire SMTP
    transaction, an envelope identification\n        string, which may be used by
    the sender to associate any\n        delivery status notifications with the transaction
    used to send\n        the original message.\n"
  title: 3. The Delivery Status Notification service extension
- contents:
  - "4. Additional parameters for RCPT and MAIL commands\n   The extended RCPT and
    MAIL commands are issued by a client when it\n   wishes to request a DSN from
    the server, under certain conditions,\n   for a particular recipient.  The extended
    RCPT and MAIL commands are\n   identical to the RCPT and MAIL commands defined
    in [1], except that\n   one or more of the following parameters appear after the
    sender or\n   recipient address, respectively.  The general syntax for extended\n
    \  SMTP commands is defined in [1].\n   NOTE: Although RFC 822 ABNF is used to
    describe the syntax of these\n   parameters, they are not, in the language of
    that document,\n   \"structured field bodies\".  Therefore, while parentheses
    MAY appear\n   within an emstp-value, they are not recognized as comment delimiters.\n
    \  The syntax for \"esmtp-value\" in [1] does not allow SP, \"=\", control\n   characters,
    or characters outside the traditional ASCII range of\n   1-127 decimal to be transmitted
    in an esmtp-value.  Because the ENVID\n   and ORCPT parameters may need to convey
    values outside this range,\n   the esmtp-values for these parameters are encoded
    as \"xtext\".\n   \"xtext\" is formally defined as follows:\n      xtext = *(
    xchar / hexchar )\n      xchar = any ASCII CHAR between \"!\" (33) and \"~\" (126)
    inclusive,\n              except for \"+\" and \"=\".\n      ; \"hexchar\"s are
    intended to encode octets that cannot appear\n      ; as ASCII characters within
    an esmtp-value.\n      hexchar = ASCII \"+\" immediately followed by two upper
    case\n                hexadecimal digits\n   When encoding an octet sequence as
    xtext:\n   +  Any ASCII CHAR between \"!\" and \"~\" inclusive, except for \"+\"
    and\n      \"=\", MAY be encoded as itself.  (A CHAR in this range MAY instead\n
    \     be encoded as a \"hexchar\", at the implementor's discretion.)\n   +  ASCII
    CHARs that fall outside the range above must be encoded as\n      \"hexchar\".\n"
  - contents:
    - "4.1 The NOTIFY parameter of the ESMTP RCPT command\n   A RCPT command issued
      by a client may contain the optional\n   esmtp-keyword \"NOTIFY\", to specify
      the conditions under which the\n   SMTP server should generate DSNs for that
      recipient.  If the NOTIFY\n   esmtp-keyword is used, it MUST have an associated
      esmtp-value,\n   formatted according to the following rules, using the ABNF
      of RFC\n   822:\n      notify-esmtp-value = \"NEVER\" / 1#notify-list-element\n
      \     notify-list-element = \"SUCCESS\" / \"FAILURE\" / \"DELAY\"\n   Notes:\n
      \  a. Multiple notify-list-elements, separated by commas, MAY appear in\n      a
      NOTIFY parameter; however, the NEVER keyword MUST appear by\n      itself.\n
      \  b. Any of the keywords NEVER, SUCCESS, FAILURE, or DELAY may be\n      spelled
      in any combination of upper and lower case letters.\n   The meaning of the NOTIFY
      parameter values is generally as follows:\n   +  A NOTIFY parameter value of
      \"NEVER\" requests that a DSN not be\n      returned to the sender under any
      conditions.\n   +  A NOTIFY parameter value containing the \"SUCCESS\" or \"FAILURE\"\n
      \     keywords requests that a DSN be issued on successful delivery or\n      delivery
      failure, respectively.\n   +  A NOTIFY parameter value containing the keyword
      \"DELAY\" indicates\n      the sender's willingness to receive \"delayed\" DSNs.
      \ Delayed DSNs\n      may be issued if delivery of a message has been delayed
      for an\n      unusual amount of time (as determined by the MTA at which the\n
      \     message is delayed), but the final delivery status (whether\n      successful
      or failure) cannot be determined.  The absence of the\n      DELAY keyword in
      a NOTIFY parameter requests that a \"delayed\" DSN\n      NOT be issued under
      any conditions.\n   The actual rules governing interpretation of the NOTIFY
      parameter are\n   given in section 6.\n   For compatibility with SMTP clients
      that do not use the NOTIFY\n   facility, the absence of a NOTIFY parameter in
      a RCPT command may be\n   interpreted as either NOTIFY=FAILURE or NOTIFY=FAILURE,DELAY.\n"
    title: 4.1 The NOTIFY parameter of the ESMTP RCPT command
  - contents:
    - "4.2 The ORCPT parameter to the ESMTP RCPT command\n   The ORCPT esmtp-keyword
      of the RCPT command is used to specify an\n   \"original\" recipient address
      that corresponds to the actual recipient\n   to which the message is to be delivered.
      \ If the ORCPT esmtp-keyword\n   is used, it MUST have an associated esmtp-value,
      which consists of\n   the original recipient address, encoded according to the
      rules below.\n   The ABNF for the ORCPT parameter is:\n      orcpt-parameter
      = \"ORCPT=\" original-recipient-address\n      original-recipient-address =
      addr-type \";\" xtext\n      addr-type = atom\n   The \"addr-type\" portion
      MUST be an IANA-registered electronic mail\n   address-type (as defined in [3]),
      while the \"xtext\" portion contains\n   an encoded representation of the original
      recipient address using the\n   rules in section 5 of this document.  The entire
      ORCPT parameter MAY\n   be up to 500 characters in length.\n   When initially
      submitting a message via SMTP, if the ORCPT parameter\n   is used, it MUST contain
      the same address as the RCPT TO address\n   (unlike the RCPT TO address, the
      ORCPT parameter will be encoded as\n   xtext).  Likewise, when a mailing list
      submits a message via SMTP to\n   be distributed to the list subscribers, if
      ORCPT is used, the ORCPT\n   parameter MUST match the new RCPT TO address of
      each recipient, not\n   the address specified by the original sender of the
      message.)\n   The \"addr-type\" portion of the original-recipient-address is
      used to\n   indicate the \"type\" of the address which appears in the ORCPT\n
      \  parameter value.  However, the address associated with the ORCPT\n   keyword
      is NOT constrained to conform to the syntax rules for that\n   \"addr-type\".\n
      \  Ideally, the \"xtext\" portion of the original-recipient-address should\n
      \  contain, in encoded form, the same sequence of characters that the\n   sender
      used to specify the recipient.  However, for a message\n   gatewayed from an
      environment (such as X.400) in which a recipient\n   address is not a simple
      string of printable characters, the\n   representation of recipient address
      must be defined by a\n   specification for gatewaying between DSNs and that
      environment.\n   Due to limitations in the Delivery Status Notification format,
      the\n   value of the original recipient address prior to encoding as \"xtext\"\n
      \  MUST consist entirely of printable (graphic and white space)\n   characters
      from the US-ASCII [4] repertoire.  If an addr-type is\n   defined for addresses
      which use characters outside of this\n   repertoire, the specification for that
      addr-type MUST define the\n   means of encoding those addresses in printable
      US-ASCII characters\n   when are then encoded as xtext.\n"
    title: 4.2 The ORCPT parameter to the ESMTP RCPT command
  - contents:
    - "4.3 The RET parameter of the ESMTP MAIL command\n   The RET esmtp-keyword on
      the extended MAIL command specifies whether\n   or not the message should be
      included in any failed DSN issued for\n   this message transmission.  If the
      RET esmtp-keyword is used, it MUST\n   have an associated esmtp-value, which
      is one of the following\n   keywords:\n   FULL requests that the entire message
      be returned in any \"failed\"\n        Delivery Status Notification issued for
      this recipient.\n   HDRS requests that only the headers of the message be returned.\n
      \  The FULL and HDRS keywords may be spelled in any combination of upper\n   and
      lower case letters.\n   If no RET parameter is supplied, the MTA MAY return
      either the\n   headers of the message or the entire message for any DSN containing\n
      \  indication of failed deliveries.\n   Note that the RET parameter only applies
      to DSNs that indicate\n   delivery failure for at least one recipient.  If a
      DSN contains no\n   indications of delivery failure, only the headers of the
      message\n   should be returned.\n"
    title: 4.3 The RET parameter of the ESMTP MAIL command
  - contents:
    - "4.4 The ENVID parameter to the ESMTP MAIL command\n   The ENVID esmtp-keyword
      of the SMTP MAIL command is used to specify\n   an \"envelope identifier\" to
      be transmitted along with the message and\n   included in any DSNs issued for
      any of the recipients named in this\n   SMTP transaction.  The purpose of the
      envelope identifier is to allow\n   the sender of a message to identify the
      transaction for which the DSN\n   was issued.\n   The ABNF for the ENVID parameter
      is:\n      envid-parameter = \"ENVID=\" xtext\n   The ENVID esmtp-keyword MUST
      have an associated esmtp-value.  No\n   meaning is assigned by the mail system
      to the presence or absence of\n   this parameter or to any esmtp-value associated
      with this parameter;\n   the information is used only by the sender or his user
      agent.  The\n   ENVID parameter MAY be up to 100 characters in length.\n   Due
      to limitations in the Delivery Status Notification format, the\n   value of
      the ENVID parameter prior to encoding as \"xtext\" MUST\n   consist entirely
      of printable (graphic and white space) characters\n   from the US-ASCII [4]
      repertoire.\n"
    title: 4.4 The ENVID parameter to the ESMTP MAIL command
  - contents:
    - "4.5 Restrictions on the use of Delivery Status Notification parameters\n   The
      RET and ENVID parameters MUST NOT appear more than once each in\n   any single
      MAIL command.  If more than one of either of these\n   parameters appears in
      a MAIL command, the ESMTP server SHOULD respond\n   with \"501 syntax error
      in parameters or arguments\".\n   The NOTIFY and ORCPT parameters MUST NOT appear
      more than once in any\n   RCPT command.  If more than one of either of these
      parameters appears\n   in a RCPT command, the ESMTP server SHOULD respond with
      \"501 syntax\n   error in parameters or arguments\".\n"
    title: 4.5 Restrictions on the use of Delivery Status Notification parameters
  title: 4. Additional parameters for RCPT and MAIL commands
- contents:
  - "5. Conformance requirements\n   The Simple Mail Transfer Protocol (SMTP) is used
    by Message Transfer\n   Agents (MTAs) when accepting, relaying, or gatewaying
    mail, as well\n   as User Agents (UAs) when submitting mail to the mail transport\n
    \  system.  The DSN extension to SMTP may be used to allow UAs to convey\n   the
    sender's requests as to when DSNs should be issued.  A UA which\n   claims to
    conform to this specification must meet certain\n   requirements as described
    below.\n   Typically, a message transfer agent (MTA) which supports SMTP will\n
    \  assume, at different times, both the role of a SMTP client and an\n   SMTP
    server, and may also provide local delivery, gatewaying to\n   foreign environments,
    forwarding, and mailing list expansion.  An MTA\n   which, when acting as an SMTP
    server, issues the DSN keyword in\n   response to the EHLO command, MUST obey
    the rules below for a\n   \"conforming SMTP client\" when acting as a client,
    and a \"conforming\n   SMTP server\" when acting as a server.  The term \"conforming
    MTA\"\n   refers to an MTA which conforms to this specification, independent of\n
    \  its role of client or server.\n"
  - contents:
    - "5.1 SMTP protocol interactions\n   The following rules apply to SMTP transactions
      in which any of the\n   ENVID, NOTIFY, RET, or ORCPT keywords are used:\n   (a)
      If an SMTP client issues a MAIL command containing a valid ENVID\n       parameter
      and associated esmtp-value and/or a valid RET parameter\n       and associated
      esmtp-value, a conforming SMTP server MUST return\n       the same reply-code
      as it would to the same MAIL command without\n       the ENVID and/or RET parameters.
      \ A conforming SMTP server MUST\n       NOT refuse a MAIL command based on the
      absence or presence of\n       valid ENVID or RET parameters, or on their associated\n
      \      esmtp-values.\n       However, if the associated esmtp-value is not valid
      (i.e.,\n       contains illegal characters), or if there is more than one ENVID\n
      \      or RET parameter in a particular MAIL command, the server MUST\n       issue
      the reply-code 501 with an appropriate message (e.g.,\n       \"syntax error
      in parameter\").\n   (b) If an SMTP client issues a RCPT command containing
      any valid\n       NOTIFY and/or ORCPT parameters, a conforming SMTP server MUST\n
      \      return the same response as it would to the same RCPT command\n       without
      those NOTIFY and/or ORCPT parameters.  A conforming SMTP\n       server MUST
      NOT refuse a RCPT command based on the presence or\n       absence of any of
      these parameters.\n       However, if any of the associated esmtp-values are
      not valid, or\n       if there is more than one of any of these parameters in
      a\n       particular RCPT command, the server SHOULD issue the response\n       \"501
      syntax error in parameter\".\n"
    title: 5.1 SMTP protocol interactions
  - contents:
    - "5.2 Handling of messages received via SMTP\n   This section describes how a
      conforming MTA should handle any\n   messages received via SMTP.\n   NOTE: A
      DSN MUST NOT be returned to the sender for any message for\n   which the return
      address from the SMTP MAIL command was NULL (\"<>\"),\n   even if the sender's
      address is available from other sources (e.g.,\n   the message header).  However,
      the MTA which would otherwise issue a\n   DSN SHOULD inform the local postmaster
      of delivery failures through\n   some appropriate mechanism that will not itself
      result in the\n   generation of DSNs.\n   DISCUSSION: RFC 1123, section 2.3.3
      requires error notifications to\n   be sent with a NULL return address (\"reverse-path\").
      \ This creates an\n   interesting situation when a message arrives with one
      or more\n   nonfunctional recipient addresses in addition to a nonfunctional\n
      \  return address.  When delivery to one of the recipient addresses\n   fails,
      the MTA will attempt to send a nondelivery notification to the\n   return address,
      setting the return address on the notification to\n   NULL.  When the delivery
      of this notification fails, the MTA\n   attempting delivery of that notification
      sees a NULL return address.\n   If that MTA were not to inform anyone of the
      situation, the original\n   message would be silently lost.  Furthermore, a
      nonfunctional return\n   address is often indicative of a configuration problem
      in the\n   sender's MTA.  Reporting the condition to the local postmaster may\n
      \  help to speed correction of such errors.\n"
    - contents:
      - "5.2.1 Relay of messages to other conforming SMTP servers\n   The following
        rules govern the behavior of a conforming MTA, when\n   relaying a message
        which was received via the SMTP protocol, to an\n   SMTP server that supports
        the Delivery Status Notification service\n   extension:\n   (a) Any ENVID
        parameter included in the MAIL command when a message\n       was received,
        MUST also appear on the MAIL command with which the\n       message is relayed,
        with the same associated esmtp-value.  If no\n       ENVID parameter was included
        in the MAIL command when the message\n       was received, the ENVID parameter
        MUST NOT be supplied when the\n       message is relayed.\n   (b) Any RET
        parameter included in the MAIL command when a message was\n       received,
        MUST also appear on the MAIL command with which the\n       message is relayed,
        with the same associated esmtp-value.  If no\n       RET parameter was included
        in the MAIL command when the message\n       was received, the RET parameter
        MUST NOT supplied when the\n       message is relayed.\n   (c) If the NOTIFY
        parameter was supplied for a recipient when the\n       message was received,
        the RCPT command issued when the message is\n       relayed MUST also contain
        the NOTIFY parameter along with its\n       associated esmtp-value.  If the
        NOTIFY parameter was not supplied\n       for a recipient when the message
        was received, the NOTIFY\n       parameter MUST NOT be supplied for that recipient
        when the\n       message is relayed.\n   (d) If any ORCPT parameter was present
        in the RCPT command for a\n       recipient when the message was received,
        an ORCPT parameter with\n       the identical original-recipient-address MUST
        appear in the RCPT\n       command issued for that recipient when relaying
        the message.\n       (For example, the MTA therefore MUST NOT change the case
        of any\n       alphabetic characters in an ORCPT parameter.)\n       If no
        ORCPT parameter was present in the RCPT command when the\n       message was
        received, an ORCPT parameter MAY be added to the RCPT\n       command when
        the message is relayed.  If an ORCPT parameter is\n       added by the relaying
        MTA, it MUST contain the recipient address\n       from the RCPT command used
        when the message was received by that\n       MTA.\n"
      title: 5.2.1 Relay of messages to other conforming SMTP servers
    - contents:
      - "5.2.2 Relay of messages to non-conforming SMTP servers\n   The following
        rules govern the behavior of a conforming MTA (in the\n   role of client),
        when relaying a message which was received via the\n   SMTP protocol, to an
        SMTP server that does not support the Delivery\n   Status Notification service
        extension:\n   (a) ENVID, NOTIFY, RET, or ORCPT parameters MUST NOT be issued
        when\n       relaying the message.\n   (b) If the NOTIFY parameter was supplied
        for a recipient, with an\n       esmtp-value containing the keyword SUCCESS,
        and the SMTP server\n       returns a success (2xx) reply-code in response
        to the RCPT\n       command, the client MUST issue a \"relayed\" DSN for that\n
        \      recipient.\n   (c) If the NOTIFY parameter was supplied for a recipient
        with an\n       esmtp-value containing the keyword FAILURE, and the SMTP server\n
        \      returns a permanent failure (5xx) reply-code in response to the\n       RCPT
        command, the client MUST issue a \"failed\" DSN for that\n       recipient.\n
        \  (d) If the NOTIFY parameter was supplied for a recipient with an\n       esmtp-value
        of NEVER, the client MUST NOT issue a DSN for that\n       recipient, regardless
        of the reply-code returned by the SMTP\n       server.  However, if the server
        returned a failure (5xx)\n       reply-code, the client MAY inform the local
        postmaster of the\n       delivery failure via an appropriate mechanism that
        will not\n       itself result in the generation of DSNs.\n       When attempting
        to relay a message to an SMTP server that does\n       not support this extension,
        and if NOTIFY=NEVER was specified for\n       some recipients of that message,
        a conforming SMTP client MAY\n       relay the message for those recipients
        in a separate SMTP\n       transaction, using an empty reverse-path in the
        MAIL command.\n       This will prevent DSNs from being issued for those recipients
        by\n       MTAs that conform to [1].\n   (e) If a NOTIFY parameter was not
        supplied for a recipient, and the\n       SMTP server returns a success (2xx)
        reply-code in response to a\n       RCPT command, the client MUST NOT issue
        any DSN for that\n       recipient.\n   (f) If a NOTIFY parameter was not
        supplied for a recipient, and the\n       SMTP server returns a permanent
        failure (5xx) reply-code in\n       response to a RCPT command, the client
        MUST issue a \"failed\" DSN\n       for that recipient.\n"
      title: 5.2.2 Relay of messages to non-conforming SMTP servers
    - contents:
      - "5.2.3 Local delivery of messages\n   The following rules govern the behavior
        of a conforming MTA upon\n   successful delivery of a message that was received
        via the SMTP\n   protocol, to a local recipient's mailbox:\n   \"Delivery\"
        means that the message has been placed in the recipient's\n   mailbox.  For
        messages which are transmitted to a mailbox for later\n   retrieval via IMAP
        [9], POP [10] or a similar message access\n   protocol, \"delivery\" occurs
        when the message is made available to the\n   IMAP (POP, etc.) service, rather
        than when the message is retrieved\n   by the recipient's user agent.\n   Similarly,
        for a recipient address which corresponds to a mailing\n   list exploder,
        \"delivery\" occurs when the message is made available\n   to that list exploder,
        even though the list exploder might refuse to\n   deliver that message to
        the list recipients.\n   (a) If the NOTIFY parameter was supplied for that
        recipient, with an\n       esmtp-value containing the SUCCESS keyword, the
        MTA MUST issue a\n       \"delivered\" DSN for that recipient.\n   (b) If
        the NOTIFY parameter was supplied for that recipient which did\n       not
        contain the SUCCESS keyword, the MTA MUST NOT issue a DSN for\n       that
        recipient.\n   (c) If the NOTIFY parameter was not supplied for that recipient,
        the\n       MTA MUST NOT issue a DSN.\n"
      title: 5.2.3 Local delivery of messages
    - contents:
      - "5.2.4 Gatewaying a message into a foreign environment\n   The following rules
        govern the behavior of a conforming MTA, when\n   gatewaying a message that
        was received via the SMTP protocol, into a\n   foreign (non-SMTP) environment:\n
        \  (a) If the the foreign environment is capable of issuing appropriate\n
        \      notifications under the conditions requested by the NOTIFY\n       parameter,
        and the conforming MTA can ensure that any\n       notification thus issued
        will be translated into a DSN and\n       delivered to the original sender,
        then the MTA SHOULD gateway the\n       message into the foreign environment,
        requesting notification\n       under the desired conditions, without itself
        issuing a DSN.\n   (b) If a NOTIFY parameter was supplied with the SUCCESS
        keyword, but\n       the destination environment cannot return an appropriate\n
        \      notification on successful delivery, the MTA SHOULD issue a\n       \"relayed\"
        DSN for that recipient.\n   (c) If a NOTIFY parameter was supplied with an
        esmtp-keyword of\n       NEVER, a DSN MUST NOT be issued.  If possible, the
        MTA SHOULD\n       direct the destination environment to not issue delivery\n
        \      notifications for that recipient.\n   (d) If the NOTIFY parameter was
        not supplied for a particular\n       recipient, a DSN SHOULD NOT be issued
        by the gateway.  The\n       gateway SHOULD attempt to ensure that appropriate
        notification\n       will be provided by the foreign mail environment if eventual\n
        \      delivery failure occurs, and that no notification will be issued\n
        \      on successful delivery.\n   (e) When gatewaying a message into a foreign
        environment, the\n       return-of-content conditions specified by any RET
        parameter are\n       nonbinding; however, the MTA SHOULD attempt to honor
        the request\n       using whatever mechanisms exist in the foreign environment.\n"
      title: 5.2.4 Gatewaying a message into a foreign environment
    - contents:
      - "5.2.5 Delays in delivery\n   If a conforming MTA receives a message via the
        SMTP protocol, and is\n   unable to deliver or relay the message to one or
        more recipients for\n   an extended length of time (to be determined by the
        MTA), it MAY\n   issue a \"delayed\" DSN for those recipients, subject to
        the following\n   conditions:\n   (a)  If the NOTIFY parameter was supplied
        for a recipient and its\n        value included the DELAY keyword, a \"delayed\"
        DSN MAY be issued.\n   (b)  If the NOTIFY parameter was not supplied for a
        recipient, a\n        \"delayed\" DSN MAY be issued.\n   (c)  If the NOTIFY
        parameter was supplied which did not contain the\n        DELAY keyword, a
        \"delayed\" DSN MUST NOT be issued.\n   NOTE: Although delay notifications
        are common in present-day\n   electronic mail, a conforming MTA is never required
        to issue\n   \"delayed\" DSNs.  The DELAY keyword of the NOTIFY parameter
        is\n   provided to allow the SMTP client to specifically request (by\n   omitting
        the DELAY parameter) that \"delayed\" DSNs NOT be issued.\n"
      title: 5.2.5 Delays in delivery
    - contents:
      - "5.2.6 Failure of a conforming MTA to deliver a message\n   The following
        rules govern the behavior of a conforming MTA which\n   received a message
        via the SMTP protocol, and is unable to deliver a\n   message to a recipient
        specified in the SMTP transaction:\n   (a)  If a NOTIFY parameter was supplied
        for the recipient with an\n        esmtp-keyword containing the value FAILURE,
        a \"failed\" DSN MUST\n        be issued by the MTA.\n   (b)  If a NOTIFY
        parameter was supplied for the recipient which did\n        not contain the
        value FAILURE, a DSN MUST NOT be issued for that\n        recipient.  However,
        the MTA MAY inform the local postmaster of\n        the delivery failure via
        some appropriate mechanism which does\n        not itself result in the generation
        of DSNs.\n   (c)  If no NOTIFY parameter was supplied for the recipient, a\n
        \       \"failed\" DSN MUST be issued.\n   NOTE: Some MTAs are known to forward
        undeliverable messages to the\n   local postmaster or \"dead letter\" mailbox.
        \ This is still considered\n   delivery failure, and does not diminish the
        requirement to issue a\n   \"failed\" DSN under the conditions defined elsewhere
        in this memo.  If\n   a DSN is issued for such a recipient, the Action value
        MUST be\n   \"failed\".\n"
      title: 5.2.6 Failure of a conforming MTA to deliver a message
    - contents:
      - "5.2.7 Forwarding, aliases, and mailing lists\n   Delivery of a message to
        a local email address usually causes the\n   message to be stored in the recipient's
        mailbox.  However, MTAs\n   commonly provide a facility where a local email
        address can be\n   designated as an \"alias\" or \"mailing list\"; delivery
        to that address\n   then causes the message to be forwarded to each of the
        (local or\n   remote) recipient addresses associated with the alias or list.
        \ It is\n   also common to allow a user to optionally \"forward\" her mail
        to one\n   or more alternate addresses.  If this feature is enabled, her mail
        is\n   redistributed to those addresses instead of being deposited in her\n
        \  mailbox.\n   Following the example of [11] (section 5.3.6), this document
        defines\n   the difference between an \"alias\" and \"mailing list\" as follows:
        When\n   forwarding a message to the addresses associated with an \"alias\",
        the\n   envelope return address (e.g., SMTP MAIL FROM) remains intact.\n   However,
        when forwarding a message to the addresses associated with a\n   \"mailing
        list\", the envelope return address is changed to that of the\n   administrator
        of the mailing list.  This causes DSNs and other\n   nondelivery reports resulting
        from delivery to the list members to be\n   sent to the list administrator
        rather than the sender of the original\n   message.\n   The DSN processing
        for aliases and mailing lists is as follows:\n"
      - contents:
        - "5.2.7.1 mailing lists\n   When a message is delivered to a list submission
          address (i.e.,\n   placed in the list's mailbox for incoming mail, or accepted
          by the\n   process that redistributes the message to the list subscribers),
          this\n   is considered final delivery for the original message.  If the
          NOTIFY\n   parameter for the list submission address contained the SUCCESS\n
          \  keyword, a \"delivered\" DSN MUST be returned to the sender of the\n
          \  original message.\n   NOTE: Some mailing lists are able to reject message
          submissions,\n   based on the content of the message, the sender's address,
          or some\n   other criteria.  While the interface between such a mailing
          list and\n   its MTA is not well-defined, it is important that DSNs NOT
          be issued\n   by both the MTA (to report successful delivery to the list),
          and the\n   list (to report message rejection using a \"failure\" DSN.)\n
          \  However, even if a \"delivered\" DSN was issued by the MTA, a mailing\n
          \  list which rejects a message submission MAY notify the sender that\n
          \  the message was rejected using an ordinary message instead of a DSN.\n
          \  Whenever a message is redistributed to an mailing list,\n   (a)  The
          envelope return address is rewritten to point to the list\n        maintainer.
          \ This address MAY be that of a process that\n        recognizes DSNs and
          processes them automatically, but it MUST\n        forward unrecognized
          messages to the human responsible for the\n        list.\n   (b)  The ENVID,
          NOTIFY, RET, and ORCPT parameters which accompany the\n        redistributed
          message MUST NOT be derived from those of the\n        original message.\n
          \  (c)  The NOTIFY and RET parameters MAY be specified by the local\n        postmaster
          or the list administrator.  If ORCPT parameters are\n        supplied during
          redistribution to the list subscribers, they\n        SHOULD contain the
          addresses of the list subscribers in the\n        format used by the mailing
          list.\n"
        title: 5.2.7.1 mailing lists
      - contents:
        - "5.2.7.2 single-recipient aliases\n   Under normal circumstances, when a
          message arrives for an \"alias\"\n   which has a single forwarding address,
          a DSN SHOULD NOT be issued.\n   Any ENVID, NOTIFY, RET, or ORCPT parameters
          SHOULD be propagated with\n   the message as it is redistributed to the
          forwarding address.\n"
        title: 5.2.7.2 single-recipient aliases
      - contents:
        - "5.2.7.3 multiple-recipient aliases\n   An \"alias\" with multiple recipient
          addresses may be handled in any of\n   the following ways:\n   (a)  Any
          ENVID, NOTIFY, RET, or ORCPT parameters are NOT propagated\n        when
          relaying the message to any of the forwarding addresses.\n        If the
          NOTIFY parameter for the alias contained the SUCCESS\n        keyword, the
          MTA issues a \"relayed\" DSN.  (In effect, the MTA\n        treats the message
          as if it were being relayed into an\n        environment that does not support
          DSNs.)\n   (b)  Any ENVID, NOTIFY, RET, or ORCPT parameters (or the equivalent\n
          \       requests if the message is gatewayed) are propagated to EXACTLY\n
          \       one of the forwarding addresses.  No DSN is issued.  (This is\n
          \       appropriate when aliasing is used to forward a message to a\n        \"vacation\"
          auto-responder program in addition to the local\n        mailbox.)\n   (c)
          \ Any ENVID, RET, or ORCPT parameters are propagated to all\n        forwarding
          addresses associated with that alias.  The NOTIFY\n        parameter is
          propagated to the forwarding addresses, except that\n        it any SUCCESS
          keyword is removed.  If the original NOTIFY\n        parameter for the alias
          contained the SUCCESS keyword, an\n        \"expanded\" DSN is issued for
          the alias.  If the NOTIFY parameter\n        for the alias did not contain
          the SUCCESS keyword, no DSN is\n        issued for the alias.\n"
        title: 5.2.7.3 multiple-recipient aliases
      - contents:
        - "5.2.7.4 confidential forwarding addresses\n   If it is desired to maintain
          the confidentiality of a recipient's\n   forwarding address, the forwarding
          may be treated as if it were a\n   mailing list.  A DSN will be issued,
          if appropriate, upon \"delivery\"\n   to the recipient address specified
          by the sender.  When the message\n   is forwarded it will have a new envelope
          return address.  Any DSNs\n   which result from delivery failure of the
          forwarded message will not\n   be returned to the original sender of the
          message and thus not expose\n   the recipient's forwarding address.\n"
        title: 5.2.7.4 confidential forwarding addresses
      title: 5.2.7 Forwarding, aliases, and mailing lists
    - contents:
      - "5.2.8 DSNs describing delivery to multiple recipients\n   A single DSN may
        describe attempts to deliver a message to multiple\n   recipients of that
        message.  If a DSN is issued for some recipients\n   in an SMTP transaction
        and not for others according to the rules\n   above, the DSN SHOULD NOT contain
        information for recipients for whom\n   DSNs would not otherwise have been
        issued.\n"
      title: 5.2.8 DSNs describing delivery to multiple recipients
    title: 5.2 Handling of messages received via SMTP
  - contents:
    - "5.3 Handling of messages from other sources\n   For messages which originated
      from \"local\" users (whatever that\n   means), the specifications under which
      DSNs should be generated can\n   be communicated to the MTA via any protocol
      agreed on between the\n   sender's mail composer (user agent) and the MTA.  The
      local MTA can\n   then either relay the message, or issue appropriate delivery
      status\n   notifications.  However, if such requests are transmitted within
      the\n   message itself (for example in the message headers), the requests\n
      \  MUST be removed from the message before it is transmitted via SMTP.\n   For
      messages gatewayed from non-SMTP sources and further relayed by\n   SMTP, the
      gateway SHOULD, using the SMTP extensions described here,\n   attempt to provide
      the delivery reporting conditions expected by the\n   source mail environment.
      \ If appropriate, any DSNs returned to the\n   source environment SHOULD be
      translated into the format expected in\n   that environment.\n"
    title: 5.3 Handling of messages from other sources
  - contents:
    - "5.4 Implementation limits\n   A conforming MTA MUST accept ESMTP parameters
      of at least the\n   following sizes:\n   (a)  ENVID parameter: 100 characters.\n
      \  (b)  NOTIFY parameter: 28 characters.\n   (c)  ORCPT parameter: 500 characters.\n
      \  (d)  RET parameter: 8 characters.\n   The maximum sizes for the ENVID and
      ORCPT parameters are intended to\n   be adequate for the transmission of \"foreign\"
      envelope identifier and\n   original recipient addresses.  However, user agents
      which use SMTP as\n   a message submission protocol SHOULD NOT generate ENVID
      parameters\n   which are longer than 38 characters in length.\n   A conforming
      MTA MUST be able to accept SMTP command-lines which are\n   at least 1036 characters
      long (530 characters for the ORCPT and\n   NOTIFY parameters of the RCPT command,
      in addition to the 512\n   characters required by [1]).  If other SMTP extensions
      are supported\n   by the MTA, the MTA MUST be able to accept a command-line
      large\n   enough for each SMTP command and any combination of ESMTP parameters\n
      \  which may be used with that command.\n"
    title: 5.4 Implementation limits
  title: 5. Conformance requirements
- contents:
  - "6. Format of delivery notifications\n   The format of Delivery Status Notifications
    is defined in [3], which\n   uses the framework defined in [5].  Delivery Status
    Notifications are\n   to be returned to the sender of the original message as
    outlined\n   below.\n"
  - contents:
    - "6.1 SMTP Envelope to be used with Delivery Status Notifications\n   The DSN
      sender address (in the SMTP MAIL command) MUST be a null\n   reverse-path (\"<>\"),
      as required by section 5.3.3 of [11].  The DSN\n   recipient address (in the
      RCPT command) is copied from the MAIL\n   command which accompanied the message
      for which the DSN is being\n   issued.  When transmitting a DSN via SMTP, the
      RET parameter MUST NOT\n   be used.  The NOTIFY parameter MAY be used, but its
      value MUST be\n   NEVER.  The ENVID parameter (with a newly generated envelope-id)\n
      \  and/or ORCPT parameter MAY be used.\n"
    title: 6.1 SMTP Envelope to be used with Delivery Status Notifications
  - contents:
    - "6.2 Contents of the DSN\n   A DSN is transmitted as a MIME message with a top-level
      content-type\n   of multipart/report (as defined in [3]).\n   The multipart/report
      content-type may be used for any of several\n   kinds of reports generated by
      the mail system.  When multipart/report\n   is used to convey a DSN, the report-type
      parameter of the\n   multipart/report content-type is \"delivery-status\".\n
      \  As described in [5], the first component of a multipart/report\n   content-type
      is a human readable explanation of the report.  For a\n   DSN, the second component
      of the multipart/report is of content-type\n   message/delivery-status (defined
      in [3]).  The third component of the\n   multipart/report consists of the original
      message or some portion\n   thereof.  When the value of the RET parameter is
      FULL, the full\n   message SHOULD be returned for any DSN which conveys notification
      of\n   delivery failure.  (However, if the length of the message is greater\n
      \  than some implementation-specified length, the MTA MAY return only\n   the
      headers even if the RET parameter specified FULL.)  If a DSN\n   contains no
      notifications of delivery failure, the MTA SHOULD return\n   only the headers.\n
      \  The third component must have an appropriate content-type label.\n   Issues
      concerning selection of the content-type are discussed in [5].\n"
    title: 6.2 Contents of the DSN
  - contents:
    - "6.3 Message/delivery-status fields\n   The message/delivery-status content-type
      defines a number of fields,\n   with general specifications for their contents.
      \ The following\n   requirements for any DSNs generated in response to a message
      received\n   by the SMTP protocol by a conforming SMTP server, are in addition
      to\n   the requirements defined in [3] for the message/delivery-status type.\n
      \  When generating a DSN for a message which was received via the SMTP\n   protocol,
      a conforming MTA will generate the following fields of the\n   message/delivery-status
      body part:\n   (a)  if an ENVID parameter was present on the MAIL command, an\n
      \       Original-Envelope-ID field MUST be supplied, and the value\n        associated
      with the ENVID parameter must appear in that field.\n        If the message
      was received via SMTP with no ENVID parameter,\n        the Original-Envelope-ID
      field MUST NOT be supplied.\n        Since the ENVID parameter is encoded as
      xtext, but the\n        Original-Envelope-ID header is NOT encoded as xtext,
      the MTA\n        must decode the xtext encoding when copying the ENVID value
      to\n        the Original-Envelope-ID field.\n   (b)  The Reporting-MTA field
      MUST be supplied.  If Reporting MTA can\n        determine its fully-qualified
      Internet domain name, the MTA-\n        name-type subfield MUST be \"dns\",
      and the field MUST contain the\n        fully-qualified domain name of the Reporting
      MTA.  If the\n        fully-qualified Internet domain name of the Reporting
      MTA is not\n        known (for example, for an SMTP server which is not directly\n
      \       connected to the Internet), the Reporting-MTA field may contain\n        any
      string identifying the MTA, however, in this case the MTA-\n        name-type
      subfield MUST NOT be \"dns\".  A MTA-name-type subfield\n        value of \"x-local-hostname\"
      is suggested.\n   (c)  Other per-message fields as defined in [3] MAY be supplied
      as\n        appropriate.\n   (d)  If the ORCPT parameter was provided for this
      recipient, the\n        Original-Recipient field MUST be supplied, with its
      value taken\n        from the ORCPT parameter.  If no ORCPT parameter was provided\n
      \       for this recipient, the Original-Recipient field MUST NOT\n        appear.\n
      \  (e)  The Final-Recipient field MUST be supplied.  It MUST contain the\n        recipient
      address from the message envelope.  If the message was\n        received via
      SMTP, the address-type will be \"rfc822\".\n   (f)  The Action field MUST be
      supplied.\n   (g)  The Status field MUST be supplied, using a status-code from
      [6].\n        If there is no specific code which suitably describes a delivery\n
      \       failure, either 4.0.0 (temporary failure), or 5.0.0 (permanent\n        failure)
      MUST be used.\n   (h)  For DSNs resulting from attempts to relay a message to
      one or\n        more recipients via SMTP, the Remote-MTA field MUST be supplied\n
      \       for each of those recipients.  The mta-name-type subfields of\n        those
      Remote-MTA fields will be \"dns\".\n   (i)  For DSNs resulting from attempts
      to relay a message to one or\n        more recipients via SMTP, the Diagnostic-Code
      MUST be supplied\n        for each of those recipients.  The diagnostic-type
      subfield will\n        be \"smtp\".  See section 9.2 of this document for a
      description\n        of the \"smtp\" diagnostic-code.\n   (j)  For DSNs resulting
      from attempts to relay a message to one or\n        more recipients via SMTP,
      an SMTP-Remote-Recipient extension\n        field MAY be supplied for each recipient,
      which contains the\n        address of that recipient which was presented to
      the remote SMTP\n        server.\n   (k)  Other per-recipient fields defined
      in [3] MAY appear, as\n        appropriate.\n"
    title: 6.3 Message/delivery-status fields
  title: 6. Format of delivery notifications
- contents:
  - "7. Acknowledgments\n   The author wishes to thank Eric Allman, Harald Alvestrand,
    Jim\n   Conklin, Bryan Costales, Peter Cowen, Dave Crocker, Roger Fajman, Ned\n
    \  Freed, Marko Kaittola, Steve Kille, John Klensin, Anastasios\n   Kotsikonas,
    John Gardiner Myers, Julian Onions, Jacob Palme, Marshall\n   Rose, Greg Vaudreuil,
    and Klaus Weide for their suggestions for\n   improvement of this document.\n"
  title: 7. Acknowledgments
- contents:
  - "8. Security Considerations\n   The SMTP extension described in this document
    does not change the\n   fundamental nature of the SMTP service and hence does
    not create any\n   new security exposures in and of itself.  It necessarily adds\n
    \  complexity to implementations, however, and with added complexity\n   comes
    an increased risk of implementation errors.\n   Previous ad-hoc delivery notification
    mechanisms sometimes produced a\n   storm of receipts due to unanticipated interactions
    with mailing list\n   expansion software.  In this specification notification
    of successful\n   delivery is carefully designed so, if properly implemented,
    it cannot\n   interact with a list expander in this way.\n   The security considerations
    section in [5] describes security issues\n   associated with multipart/report
    objects in general and the security\n   considerations section in [3] describes
    security issues with DSNs in\n   particular.\n"
  title: 8. Security Considerations
- contents:
  - "9. Appendix - Type-Name Definitions\n   The following type names are defined
    for use in DSN fields generated\n   by conforming SMTP-based MTAs:\n"
  - contents:
    - "9.1 \"rfc822\" address-type\n   The \"rfc822\" address-type is to be used when
      reporting Internet\n   electronic mail address in the Original-Recipient and
      Final-Recipient\n   DSN fields.\n   (a)  address-type name: rfc822\n   (b)  syntax
      for mailbox addresses\n        RFC822 mailbox addresses are generally expected
      to be of the\n        form\n                [route] addr-spec\n        where
      \"route\" and \"addr-spec\" are defined in [2], and the\n        \"domain\"
      portions of both \"route\" and \"addr-spec\" are fully-\n        qualified domain
      names that are registered in the DNS.  However,\n        an MTA MUST NOT modify
      an address obtained from the message\n        envelope to force it to conform
      to syntax rules.\n   (c)  If addresses of this type are not composed entirely
      of graphic\n        characters from the US-ASCII repertoire, a specification
      for how\n        they are to be encoded as graphic US-ASCII characters in a
      DSN\n        Original-Recipient or Final-Recipient DSN field.\n        RFC822
      addresses consist entirely of graphic characters from the\n        US-ASCII
      repertoire, so no translation is necessary.\n"
    title: 9.1 "rfc822" address-type
  - contents:
    - "9.2 \"smtp\" diagnostic-type\n   The \"smtp\" diagnostic-type is to be used
      when reporting SMTP reply-\n   codes in Diagnostic-Code DSN fields.\n   (a)
      \ diagnostic-type name: SMTP\n   (b)  A description of the syntax to be used
      for expressing diagnostic\n        codes of this type as graphic characters
      from the US-ASCII\n        repertoire.\n        An SMTP diagnostic-code is of
      the form\n                *( 3*DIGIT \"-\" *text ) 3*DIGIT SPACE *text\n        For
      a single-line SMTP reply to an SMTP command, the\n        diagnostic-code SHOULD
      be an exact transcription of the reply.\n        For multi-line SMTP replies,
      it is necessary to insert a SPACE\n        before each line after the first.
      \ For example, an SMTP reply\n        of:\n                550-mailbox unavailable\n
      \               550 user has moved with no forwarding address\n        could
      appear as follows in a Diagnostic-Code DSN field:\n                Diagnostic-Code:
      smtp ; 550-mailbox unavailable\n                 550 user has moved with no
      forwarding address\n   (c)  A list of valid diagnostic codes of this type and
      the meaning of\n        each code.\n        SMTP reply-codes are currently defined
      in [1] and [11].\n        Additional codes may be defined by other RFCs.\n"
    title: 9.2 "smtp" diagnostic-type
  - contents:
    - "9.3 \"dns\" MTA-name-type\n   The \"dns\" MTA-name-type should be used in the
      Reporting-MTA field.\n   An MTA-name of type \"dns\" is a fully-qualified domain
      name.  The name\n   must be registered in the DNS, and the address Postmaster@{mta-name}\n
      \  must be valid.\n   (a)  MTA-name-type name: dns\n   (b)  A description of
      the syntax of MTA names of this type, using\n        BNF, regular expressions,
      ASN.1, or other non-ambiguous\n        language.\n        MTA names of type
      \"dns\" SHOULD be valid Internet domain names.\n        If such domain names
      are not available, a domain-literal\n        containing the internet protocol
      address is acceptable.  Such\n        domain names generally conform to the
      following syntax:\n                domain = real-domain / domain-literal\n                real-domain
      = sub-domain *(\".\" sub-domain)\n                sub-domain = atom\n                domain-literal
      = \"[\" 1*3DIGIT 3(\".\" 1*3DIGIT) \"]\"\n        where \"atom\" and \"DIGIT\"
      are defined in [2].\n   (c)  If MTA names of this type do not consist entirely
      of graphic\n        characters from the US-ASCII repertoire, a specification
      for how\n        an MTA name of this type should be expressed as a sequence
      of\n        graphic US-ASCII characters.\n        MTA names of type \"dns\"
      consist entirely of graphic US-ASCII\n        characters, so no translation
      is needed.\n"
    title: 9.3 "dns" MTA-name-type
  title: 9. Appendix - Type-Name Definitions
- contents:
  - "10. Appendix - Example\n   This example traces the flow of a single message addressed
    to\n   multiple recipients.  The message is sent by Alice@Example.ORG to\n   Bob@Example.COM,
    Carol@Ivory.EDU, Dana@Ivory.EDU, Eric@Bombs.AF.MIL,\n   Fred@Bombs.AF.MIL, and
    George@Tax-ME.GOV, with a variety of per-\n   recipient options.  The message
    is successfully delivered to Bob,\n   Dana (via a gateway), Eric, and Fred.  Delivery
    fails for Carol and\n   George.\n   NOTE: Formatting rules for RFCs require that
    no line be longer than\n   72 characters.  Therefore, in the following examples,
    some SMTP\n   commands longer than 72 characters are printed on two lines, with
    the\n   first line ending in \"\\\".  In an actual SMTP transaction, such a\n
    \  command would be sent as a single line (i.e., with no embedded\n   CRLFs),
    and without the \"\\\" character that appears in these examples.\n"
  - contents:
    - "10.1 Submission\n   Alice's user agent sends the message to the SMTP server
      at\n   Example.ORG.  Note that while this example uses SMTP as a mail\n   submission
      protocol, other protocols could also be used.\n      <<< 220 Example.ORG SMTP
      server here\n      >>> EHLO Example.ORG\n      <<< 250-Example.ORG\n      <<<
      250-DSN\n      <<< 250-EXPN\n      <<< 250 SIZE\n      >>> MAIL FROM:<Alice@Example.ORG>
      RET=HDRS ENVID=QQ314159\n      <<< 250 <Alice@Example.ORG> sender ok\n      >>>
      RCPT TO:<Bob@Example.COM> NOTIFY=SUCCESS \\\n          ORCPT=rfc822;Bob@Example.COM\n
      \     <<< 250 <Bob@Example.COM> recipient ok\n      >>> RCPT TO:<Carol@Ivory.EDU>
      NOTIFY=FAILURE \\\n          ORCPT=rfc822;Carol@Ivory.EDU\n      <<< 250 <Carol@Ivory.EDU>
      recipient ok\n      >>> RCPT TO:<Dana@Ivory.EDU> NOTIFY=SUCCESS,FAILURE \\\n
      \         ORCPT=rfc822;Dana@Ivory.EDU\n      <<< 250 <Dana@Ivory.EDU> recipient
      ok\n      >>> RCPT TO:<Eric@Bombs.AF.MIL> NOTIFY=FAILURE \\\n          ORCPT=rfc822;Eric@Bombs.AF.MIL\n
      \     <<< 250 <Eric@Bombs.AF.MIL> recipient ok\n      >>> RCPT TO:<Fred@Bombs.AF.MIL>
      NOTIFY=NEVER\n      <<< 250 <Fred@Bombs.AF.MIL> recipient ok\n      >>> RCPT
      TO:<George@Tax-ME.GOV> NOTIFY=FAILURE \\\n          ORCPT=rfc822;George@Tax-ME.GOV\n
      \     <<< 250 <George@Tax-ME.GOV> recipient ok\n      >>> DATA\n      <<< 354
      okay, send message\n      >>> (message goes here)\n      >>> .\n      <<< 250
      message accepted\n      >>> QUIT\n      <<< 221 goodbye\n"
    title: 10.1 Submission
  - contents:
    - "10.2 Relay to Example.COM\n   The SMTP at Example.ORG then relays the message
      to Example.COM.  (For\n   the purpose of this example, mail.Example.COM is the
      primary mail\n   exchanger for Example.COM).\n      <<< 220 mail.Example.COM
      says hello\n      >>> EHLO Example.ORG\n      <<< 250-mail.Example.COM\n      <<<
      250 DSN\n      >>> MAIL FROM:<Alice@Example.ORG> RET=HDRS ENVID=QQ314159\n      <<<
      250 sender okay\n      >>> RCPT TO:<Bob@Example.COM> NOTIFY=SUCCESS \\\n          ORCPT=rfc822;Bob@Example.COM\n
      \     <<< 250 recipient okay\n      >>> DATA\n      <<< 354 send message\n      >>>
      (message goes here)\n      >>> .\n      <<< 250 message received\n      >>>
      QUIT\n      <<< 221 bcnu\n"
    title: 10.2 Relay to Example.COM
  - contents:
    - "10.3 Relay to Ivory.EDU\n   The SMTP at Example.ORG relays the message to Ivory.EDU,
      which (as it\n   happens) is a gateway to a LAN-based mail system that accepts
      SMTP\n   mail and supports the DSN extension.\n      <<< 220 Ivory.EDU gateway
      to FooMail(tm) here\n      >>> EHLO Example.ORG\n      <<< 250-Ivory.EDU\n      <<<
      250 DSN\n      >>> MAIL FROM:<Alice@Example.ORG> RET=HDRS ENVID=QQ314159\n      <<<
      250 ok\n      >>> RCPT TO:<Carol@Ivory.EDU> NOTIFY=FAILURE \\\n          ORCPT=rfc822;Carol@Ivory.EDU\n
      \     <<< 550 error - no such recipient\n      >>> RCPT TO:<Dana@Ivory.EDU>
      NOTIFY=SUCCESS,FAILURE \\\n          ORCPT=rfc822;Dana@Ivory.EDU\n      <<<
      250 recipient ok\n      >>> DATA\n      <<< 354 send message, end with '.'\n
      \     >>> (message goes here)\n      >>> .\n      <<< 250 message received\n
      \     >>> QUIT\n      <<< 221 bye\n   Note that since the Ivory.EDU refused
      to accept mail for\n   Carol@Ivory.EDU, and the sender specified NOTIFY=FAILURE,
      the\n   sender-SMTP (in this case Example.ORG) must generate a DSN.\n"
    title: 10.3 Relay to Ivory.EDU
  - contents:
    - "10.4 Relay to Bombs.AF.MIL\n   The SMTP at Example.ORG relays the message to
      Bombs.AF.MIL, which\n   does not support the SMTP extension.  Because the sender
      specified\n   NOTIFY=NEVER for recipient Fred@Bombs.AF.MIL, the SMTP at Example.ORG\n
      \  chooses to send the message for that recipient in a separate\n   transaction
      with a reverse-path of <>.\n      <<< 220-Bombs.AF.MIL reporting for duty.\n
      \     <<< 220 Electronic mail is to be used for official business only.\n      >>>
      EHLO Example.ORG\n      <<< 502 command not implemented\n      >>> RSET\n      <<<
      250 reset\n      >>> HELO Example.ORG\n      <<< 250 Bombs.AF.MIL\n      >>>
      MAIL FROM:<Alice@Example.ORG>\n      <<< 250 ok\n      >>> RCPT TO:<Eric@Bombs.AF.MIL>\n
      \     <<< 250 ok\n      >>> DATA\n      <<< 354 send message\n      >>> (message
      goes here)\n      >>> .\n      <<< 250 message accepted\n      >>> MAIL FROM:<>\n
      \     <<< 250 ok\n      >>> RCPT TO:<Fred@Bombs.AF.MIL>\n      <<< 250 ok\n
      \     >>> DATA\n      <<< 354 send message\n      >>> (message goes here)\n
      \     >>> .\n      <<< 250 message accepted\n      >>> QUIT\n      <<< 221 Bombs.AF.MIL
      closing connection\n"
    title: 10.4 Relay to Bombs.AF.MIL
  - contents:
    - "10.5 Forward from George@Tax-ME.GOV to Sam@Boondoggle.GOV\n   The SMTP at Example.ORG
      relays the message to Tax-ME.GOV.  (this step\n   is not shown).  MTA Tax-ME.GOV
      then forwards the message to\n   Sam@Boondoggle.GOV (shown below).  Both Tax-ME.GOV
      and Example.ORG\n   support the SMTP DSN extension.  Note that RET, ENVID, and
      ORCPT all\n   retain their original values.\n      <<< 220 BoonDoggle.GOV says
      hello\n      >>> EHLO Example.ORG\n      <<< 250-mail.Example.COM\n      <<<
      250 DSN\n      >>> MAIL FROM:<Alice@Example.ORG> RET=HDRS ENVID=QQ314159\n      <<<
      250 sender okay\n      >>> RCPT TO:<Sam@Boondoggle.GOV> NOTIFY=SUCCESS \\\n
      \         ORCPT=rfc822;George@Tax-ME.GOV\n      <<< 250 recipient okay\n      >>>
      DATA\n      <<< 354 send message\n      >>> (message goes here)\n      >>> .\n
      \     <<< 250 message received\n      >>> QUIT\n      <<< 221 bcnu\n"
    title: 10.5 Forward from George@Tax-ME.GOV to Sam@Boondoggle.GOV
  - contents:
    - "10.6 \"Delivered\" DSN for Bob@Example.COM\n   MTA mail.Example.COM successfully
      delivers the message to\n   Bob@Example.COM.  Because the sender specified NOTIFY=SUCCESS,\n
      \  mail.Example.COM issues the following DSN, and sends it to\n   Alice@Example.ORG.\n
      \     To: Alice@Example.ORG\n      From: postmaster@mail.Example.COM\n      Subject:
      Delivery Notification (success) for Bob@Example.COM\n      Content-Type: multipart/report;
      report-type=delivery-status;\n          boundary=abcde\n      MIME-Version:
      1.0\n      --abcde\n      Content-type: text/plain; charset=us-ascii\n      Your
      message (id QQ314159) was successfully delivered to\n      Bob@Example.COM.\n
      \     --abcde\n      Content-type: message/delivery-status\n      Reporting-MTA:
      dns; mail.Example.COM\n      Original-Envelope-ID: QQ314159\n      Original-Recipient:
      rfc822;Bob@Example.COM\n      Final-Recipient: rfc822;Bob@Example.COM\n      Action:
      delivered\n      Status: 2.0.0\n      --abcde\n      Content-type: message/rfc822\n
      \     (headers of returned message go here)\n      --abcde--\n"
    title: 10.6 "Delivered" DSN for Bob@Example.COM
  - contents:
    - "10.7 Failed DSN for Carol@Ivory.EDU\n   Because delivery to Carol failed and
      the sender specified\n   NOTIFY=FAILURE for Carol@Ivory.EDU, MTA Example.ORG
      (the SMTP client\n   to which the failure was reported via SMTP) issues the
      following DSN.\n      To: Alice@Example.ORG\n      From: postmaster@Example.ORG\n
      \     Subject: Delivery Notification (failure) for Carol@Ivory.EDU\n      Content-Type:
      multipart/report; report-type=delivery-status;\n                    boundary=bcdef\n
      \     MIME-Version: 1.0\n      --bcdef\n      Content-type: text/plain; charset=us-ascii\n
      \     Your message (id QQ314159) could not be delivered to\n      Carol@Ivory.EDU.\n
      \     A transcript of the session follows:\n      (while talking to Ivory.EDU)\n
      \     >>> RCPT TO:<Carol@Ivory.EDU> NOTIFY=FAILURE\n      <<< 550 error - no
      such recipient\n      --bcdef\n      Content-type: message/delivery-status\n
      \     Reporting-MTA: dns; Example.ORG\n      Original-Envelope-ID: QQ314159\n
      \     Original-Recipient: rfc822;Carol@Ivory.EDU\n      Final-Recipient: rfc822;Carol@Ivory.EDU\n
      \     SMTP-Remote-Recipient: Carol@Ivory.EDU\n      Diagnostic-Code: smtp; 550
      error - no such recipient\n      Action: failed\n      Status: 5.0.0\n      --bcdef\n
      \     Content-type: message/rfc822\n      (headers of returned message go here)\n
      \     --bcdef--\n"
    title: 10.7 Failed DSN for Carol@Ivory.EDU
  - contents:
    - "10.8 Relayed DSN For Dana@Ivory.EDU\n   Although the mail gateway Ivory.EDU
      supports the DSN SMTP extension,\n   the LAN mail system attached to its other
      side does not generate\n   positive delivery confirmations.  So Ivory.EDU issues
      a \"relayed\"\n   DSN:\n      To: Alice@Example.ORG\n      From: postmaster@Ivory.EDU\n
      \     Subject: mail relayed for Dana@Ivory.EDU\n      Content-Type: multipart/report;
      report-type=delivery-status;\n          boundary=cdefg\n      MIME-Version:
      1.0\n      --cdefg\n      Content-type: text/plain; charset=us-ascii\n      Your
      message (addressed to Dana@Ivory.EDU) was successfully\n      relayed to:\n
      \     ymail!Dana\n      by the FooMail gateway at Ivory.EDU.\n      Unfortunately,
      the remote mail system does not support\n      confirmation of actual delivery.
      \ Unless delivery to ymail!Dana\n      fails, this will be the only Delivery
      Status Notification sent.\n      --cdefg\n      Content-type: message/delivery-status\n
      \     Reporting-MTA: dns; Ivory.EDU\n      Original-Envelope-ID: QQ314159\n
      \     Original-Recipient: rfc822;Dana@Ivory.EDU\n      Final-Recipient: rfc822;Dana@Ivory.EDU\n
      \     Action: relayed\n      Status: 2.0.0\n      --cdefg\n      Content-type:
      message/rfc822\n      (headers of returned message go here)\n      --cdefg--\n"
    title: 10.8 Relayed DSN For Dana@Ivory.EDU
  - contents:
    - "10.9 Failure notification for Sam@Boondoggle.GOV\n   The message originally
      addressed to George@Tax-ME.GOV was forwarded\n   to Sam@Boondoggle.GOV, but
      the MTA for Boondoggle.GOV was unable to\n   deliver the message due to a lack
      of disk space in Sam's mailbox.\n   After trying for several days, Boondoggle.GOV
      returned the following\n   DSN:\n      To: Alice@Example.ORG\n      From: Postmaster@Boondoggle.GOV\n
      \     Subject: Delivery failure for Sam@Boondoggle.GOV\n      Content-Type:
      multipart/report; report-type=delivery-status;\n                    boundary=defgh\n
      \     MIME-Version: 1.0\n      --defgh\n      Your message, originally addressed
      to George@Tax-ME.GOV, and\n      forwarded from there to Sam@Boondoggle.GOV
      could not be delivered,\n      for the following reason:\n      write error
      to mailbox, disk quota exceeded\n      --defgh\n      Content-type: message/delivery-status\n
      \     Reporting-MTA: Boondoggle.GOV\n      Original-Envelope-ID: QQ314159\n
      \     Original-Recipient: rfc822;George@Tax-ME.GOV\n      Final-Recipient: rfc822;Sam@Boondoggle.GOV\n
      \     Action: failed\n      Status: 4.2.2 (disk quota exceeded)\n      --defgh\n
      \     Content-type: message/rfc822\n      (headers of returned message go here)\n
      \     --defgh--\n"
    title: 10.9 Failure notification for Sam@Boondoggle.GOV
  title: 10. Appendix - Example
- contents:
  - "11. Appendix - Changes since RFC 1891\n      -    updated author's address\n
    \     -    In examples, changed Pure-Heart.ORG and Big-Bucks.COM to\n           Example.ORG
    and Example.COM, respectively.  Since publication\n           of RFC 1891, the
    former two domains have been registered.\n      -    Clarified that ENVID and
    ORCPT parameters must consist\n           entirely of US-ASCII characters prior
    to encoding as xtext.\n      -    A Security Considerations section was added.\n"
  title: 11. Appendix - Changes since RFC 1891
- contents:
  - '12. References

    '
  - contents:
    - "12.1 Normative References\n   [1]  Postel, J., \"Simple Mail Transfer Protocol\",
      STD 10, RFC 821,\n        August 1982.\n   [2]  Crocker, D., \"Standard for
      the format of ARPA Internet Text\n        Messages\", STD 11, RFC 822, August
      1982.\n   [3]  Moore, K., and G. Vaudreuil, \"An Extensible Message Format for\n
      \       Delivery Status Notifications\", RFC 3464, January 2003.\n   [4]  Coded
      Character Set - 7-Bit American Standard Code for\n        Information Interchange,
      ANSI X3.4-1986.\n   [5]  Vaudreuil, G., \"The Multipart/Report Content Type
      for the\n        Reporting of Mail System Administrative Messages\", RFC 3462,\n
      \       January 2003.\n   [6]  Vaudreuil, G., \"Enhanced Mail System Status
      Codes\", RFC 3463,\n        January 2003.\n   [7]  Bradner, S., \"Key words
      for use in RFCs to Indicate Requirement\n        Levels\", BCP 14, RFC 2119,
      March 1997.\n"
    title: 12.1 Normative References
  - contents:
    - "12.2 Informative References\n   [8]  Westine, A. and J. Postel, \"Problems
      with the Maintenance of\n        Large Mailing Lists.\", RFC 1211, March 1991.\n
      \  [9]  Crispin, M., \"Internet Message Access Protocol - Version 4rev1\",\n
      \       RFC 2060, December 1996.\n   [10] Myers, J. and M. Rose, \"Post Office
      Protocol - Version 3\", STD\n        53, RFC 1939, May 1996.\n   [11] Braden,
      R., Ed., \"Requirements for Internet Hosts - Application\n        and Support\",
      STD 3, RFC 1123, October 1989.\n"
    title: 12.2 Informative References
  title: 12. References
- contents:
  - "13. Author's Address\n   Keith Moore\n   University of Tennessee\n   1122 Volunteer
    Blvd, Suite 203\n   Knoxville, TN 37996-3450\n   USA\n   EMail: moore@cs.utk.edu\n"
  title: 13. Author's Address
- contents:
  - "14. Full Copyright Statement\n   Copyright (C) The Internet Society (2003).  All
    Rights Reserved.\n   This document and translations of it may be copied and furnished
    to\n   others, and derivative works that comment on or otherwise explain it\n
    \  or assist in its implementation may be prepared, copied, published\n   and
    distributed, in whole or in part, without restriction of any\n   kind, provided
    that the above copyright notice and this paragraph are\n   included on all such
    copies and derivative works.  However, this\n   document itself may not be modified
    in any way, such as by removing\n   the copyright notice or references to the
    Internet Society or other\n   Internet organizations, except as needed for the
    purpose of\n   developing Internet standards in which case the procedures for\n
    \  copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: 14. Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
