- contents:
  - '           Handling of Unknown DNS Resource Record (RR) Types

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   Extending the Domain Name System (DNS) with new Resource Record
    (RR)\n   types currently requires changes to name server software.  This\n   document
    specifies the changes necessary to allow future DNS\n   implementations to handle
    new RR types transparently.\n"
  title: Abstract
- contents:
  - "1.  Introduction\n   The DNS is designed to be extensible to support new services
    through\n   the introduction of new resource record (RR) types.  In practice,\n
    \  deploying a new RR type currently requires changes to the name server\n   software
    not only at the authoritative DNS server that is providing\n   the new information
    and the client making use of it, but also at all\n   slave servers for the zone
    containing it, and in some cases also at\n   caching name servers and forwarders
    used by the client.\n   Because the deployment of new server software is slow
    and expensive,\n   the potential of the DNS in supporting new services has never
    been\n   fully realized.  This memo proposes changes to name servers and to\n
    \  procedures for defining new RR types aimed at simplifying the future\n   deployment
    of new RR types.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in [RFC 2119].\n"
  title: 1.  Introduction
- contents:
  - "2.  Definition\n   An \"RR of unknown type\" is an RR whose RDATA format is not
    known to\n   the DNS implementation at hand, and whose type is not an assigned\n
    \  QTYPE or Meta-TYPE as specified in [RFC 2929] (section 3.1) nor\n   within
    the range reserved in that section for assignment only to\n   QTYPEs and Meta-TYPEs.
    \ Such an RR cannot be converted to a type-\n   specific text format, compressed,
    or otherwise handled in a type-\n   specific way.\n   In the case of a type whose
    RDATA format is class specific, an RR is\n   considered to be of unknown type
    when the RDATA format for that\n   combination of type and class is not known.\n"
  title: 2.  Definition
- contents:
  - "3.  Transparency\n   To enable new RR types to be deployed without server changes,
    name\n   servers and resolvers MUST handle RRs of unknown type transparently.\n
    \  That is, they must treat the RDATA section of such RRs as\n   unstructured
    binary data, storing and transmitting it without change\n   [RFC1123].\n   To
    ensure the correct operation of equality comparison (section 6)\n   and of the
    DNSSEC canonical form (section 7) when an RR type is known\n   to some but not
    all of the servers involved, servers MUST also\n   exactly preserve the RDATA
    of RRs of known type, except for changes\n   due to compression or decompression
    where allowed by section 4 of\n   this memo.  In particular, the character case
    of domain names that\n   are not subject to compression MUST be preserved.\n"
  title: 3.  Transparency
- contents:
  - "4.  Domain Name Compression\n   RRs containing compression pointers in the RDATA
    part cannot be\n   treated transparently, as the compression pointers are only\n
    \  meaningful within the context of a DNS message.  Transparently\n   copying
    the RDATA into a new DNS message would cause the compression\n   pointers to point
    at the corresponding location in the new message,\n   which now contains unrelated
    data.  This would cause the compressed\n   name to be corrupted.\n   To avoid
    such corruption, servers MUST NOT compress domain names\n   embedded in the RDATA
    of types that are class-specific or not well-\n   known.  This requirement was
    stated in [RFC1123] without defining the\n   term \"well-known\"; it is hereby
    specified that only the RR types\n   defined in [RFC1035] are to be considered
    \"well-known\".\n   The specifications of a few existing RR types have explicitly
    allowed\n   compression contrary to this specification: [RFC2163] specified that\n
    \  compression applies to the PX RR, and [RFC2535] allowed compression\n   in
    SIG RRs and NXT RRs records.  Since this specification disallows\n   compression
    in these cases, it is an update to [RFC2163] (section 4)\n   and [RFC2535] (sections
    4.1.7 and 5.2).\n   Receiving servers MUST decompress domain names in RRs of well-known\n
    \  type, and SHOULD also decompress RRs of type RP, AFSDB, RT, SIG, PX,\n   NXT,
    NAPTR, and SRV (although the current specification of the SRV RR\n   in [RFC2782]
    prohibits compression, [RFC2052] mandated it, and some\n   servers following that
    earlier specification are still in use).\n   Future specifications for new RR
    types that contain domain names\n   within their RDATA MUST NOT allow the use
    of name compression for\n   those names, and SHOULD explicitly state that the
    embedded domain\n   names MUST NOT be compressed.\n   As noted in [RFC1123], the
    owner name of an RR is always eligible for\n   compression.\n"
  title: 4.  Domain Name Compression
- contents:
  - "5.  Text Representation\n   In the \"type\" field of a master file line, an unknown
    RR type is\n   represented by the word \"TYPE\" immediately followed by the decimal
    RR\n   type number, with no intervening whitespace.  In the \"class\" field,\n
    \  an unknown class is similarly represented as the word \"CLASS\"\n   immediately
    followed by the decimal class number.\n   This convention allows types and classes
    to be distinguished from\n   each other and from TTL values, allowing the \"[<TTL>]
    [<class>]\n   <type> <RDATA>\" and \"[<class>] [<TTL>] <type> <RDATA>\" forms
    of\n   [RFC1035] to both be unambiguously parsed.\n   The RDATA section of an
    RR of unknown type is represented as a\n   sequence of white space separated words
    as follows:\n      The special token \\# (a backslash immediately followed by
    a hash\n      sign), which identifies the RDATA as having the generic encoding\n
    \     defined herein rather than a traditional type-specific encoding.\n      An
    unsigned decimal integer specifying the RDATA length in octets.\n      Zero or
    more words of hexadecimal data encoding the actual RDATA\n      field, each containing
    an even number of hexadecimal digits.\n   If the RDATA is of zero length, the
    text representation contains only\n   the \\# token and the single zero representing
    the length.\n   An implementation MAY also choose to represent some RRs of known
    type\n   using the above generic representations for the type, class and/or\n
    \  RDATA, which carries the benefit of making the resulting master file\n   portable
    to servers where these types are unknown.  Using the generic\n   representation
    for the RDATA of an RR of known type can also be\n   useful in the case of an
    RR type where the text format varies\n   depending on a version, protocol, or
    similar field (or several)\n   embedded in the RDATA when such a field has a value
    for which no text\n   format is known, e.g., a LOC RR [RFC1876] with a VERSION
    other than\n   0.\n   Even though an RR of known type represented in the \\# format
    is\n   effectively treated as an unknown type for the purpose of parsing the\n
    \  RDATA text representation, all further processing by the server MUST\n   treat
    it as a known type and take into account any applicable type-\n   specific rules
    regarding compression, canonicalization, etc.\n   The following are examples of
    RRs represented in this manner,\n   illustrating various combinations of generic
    and type-specific\n   encodings for the different fields of the master file format:\n
    \     a.example.   CLASS32     TYPE731         \\# 6 abcd (\n                                               ef
    01 23 45 )\n      b.example.   HS          TYPE62347       \\# 0\n      e.example.
    \  IN          A               \\# 4 0A000001\n      e.example.   CLASS1      TYPE1
    \          10.0.0.2\n"
  title: 5.  Text Representation
- contents:
  - "6.  Equality Comparison\n   Certain DNS protocols, notably Dynamic Update [RFC2136],
    require RRs\n   to be compared for equality.  Two RRs of the same unknown type
    are\n   considered equal when their RDATA is bitwise equal.  To ensure that\n
    \  the outcome of the comparison is identical whether the RR is known to\n   the
    server or not, specifications for new RR types MUST NOT specify\n   type-specific
    comparison rules.\n   This implies that embedded domain names, being included
    in the\n   overall bitwise comparison, are compared in a case-sensitive manner.\n
    \  As a result, when a new RR type contains one or more embedded domain\n   names,
    it is possible to have multiple RRs owned by the same name\n   that differ only
    in the character case of the embedded domain\n   name(s).  This is similar to
    the existing possibility of multiple TXT\n   records differing only in character
    case, and not expected to cause\n   any problems in practice.\n"
  title: 6.  Equality Comparison
- contents:
  - "7.  DNSSEC Canonical Form and Ordering\n   DNSSEC defines a canonical form and
    ordering for RRs [RFC2535]\n   (section 8.1).  In that canonical form, domain
    names embedded in the\n   RDATA are converted to lower case.\n   The downcasing
    is necessary to ensure the correctness of DNSSEC\n   signatures when case distinctions
    in domain names are lost due to\n   compression, but since it requires knowledge
    of the presence and\n   position of embedded domain names, it cannot be applied
    to unknown\n   types.\n   To ensure continued consistency of the canonical form
    of RR types\n   where compression is allowed, and for continued interoperability
    with\n   existing implementations that already implement the [RFC2535]\n   canonical
    form and apply it to their known RR types, the canonical\n   form remains unchanged
    for all RR types whose whose initial\n   publication as an RFC was prior to the
    initial publication of this\n   specification as an RFC (RFC 3597).\n   As a courtesy
    to implementors, it is hereby noted that the complete\n   set of such previously
    published RR types that contain embedded\n   domain names, and whose DNSSEC canonical
    form therefore involves\n   downcasing according to the DNS rules for character
    comparisons,\n   consists of the RR types NS, MD, MF, CNAME, SOA, MB, MG, MR,
    PTR,\n   HINFO, MINFO, MX, HINFO, RP, AFSDB, RT, SIG, PX, NXT, NAPTR, KX, SRV,\n
    \  DNAME, and A6.\n   This document specifies that for all other RR types (whether
    treated\n   as unknown types or treated as known types according to an RR type\n
    \  definition RFC more recent than RFC 3597), the canonical form is such\n   that
    no downcasing of embedded domain names takes place, and\n   otherwise identical
    to the canonical form specified in [RFC2535]\n   section 8.1.\n   Note that the
    owner name is always set to lower case according to the\n   DNS rules for character
    comparisons, regardless of the RR type.\n   The DNSSEC canonical RR ordering is
    as specified in [RFC2535] section\n   8.3, where the octet sequence is the canonical
    form as revised by\n   this specification.\n"
  title: 7.  DNSSEC Canonical Form and Ordering
- contents:
  - "8.  Additional Section Processing\n   Unknown RR types cause no additional section
    processing.  Future RR\n   type specifications MAY specify type-specific additional
    section\n   processing rules, but any such processing MUST be optional as it can\n
    \  only be performed by servers for which the RR type in case is known.\n"
  title: 8.  Additional Section Processing
- contents:
  - "9.  IANA Considerations\n   This document does not require any IANA actions.\n"
  title: 9.  IANA Considerations
- contents:
  - "10.  Security Considerations\n   This specification is not believed to cause
    any new security\n   problems, nor to solve any existing ones.\n"
  title: 10.  Security Considerations
- contents:
  - "11.  Normative References\n   [RFC1034]   Mockapetris, P., \"Domain Names - Concepts
    and\n               Facilities\", STD 13, RFC 1034, November 1987.\n   [RFC1035]
    \  Mockapetris, P., \"Domain Names - Implementation and\n               Specifications\",
    STD 13, RFC 1035, November 1987.\n   [RFC1123]   Braden, R., Ed., \"Requirements
    for Internet Hosts --\n               Application and Support\", STD 3, RFC 1123,
    October 1989.\n   [RFC2119]   Bradner, S., \"Key words for use in RFCs to Indicate\n
    \              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2535]
    \  Eastlake, D., \"Domain Name System Security Extensions\",\n               RFC
    2535, March 1999.\n   [RFC2163]   Allocchio, C., \"Using the Internet DNS to Distribute\n
    \              MIXER Conformant Global Address Mapping (MCGAM)\", RFC\n               2163,
    January 1998.\n   [RFC2929]   Eastlake, D., Brunner-Williams, E. and B. Manning,\n
    \              \"Domain Name System (DNS) IANA Considerations\", BCP 42,\n               RFC
    2929, September 2000.\n"
  title: 11.  Normative References
- contents:
  - "12.  Informative References\n   [RFC1876]   Davis, C., Vixie, P., Goodwin, T.
    and I. Dickinson, \"A\n               Means for Expressing Location Information
    in the Domain\n               Name System\", RFC 1876, January 1996.\n   [RFC2052]
    \  Gulbrandsen, A. and P. Vixie, \"A DNS RR for specifying\n               the
    location of services (DNS SRV)\", RFC 2052, October\n               1996.\n   [RFC2136]
    \  Vixie, P., Ed., Thomson, S., Rekhter, Y. and J. Bound,\n               \"Dynamic
    Updates in the Domain Name System (DNS UPDATE)\",\n               RFC 2136, April
    1997.\n   [RFC2782]   Gulbrandsen, A., Vixie, P. and L. Esibov, \"A DNS RR for\n
    \              specifying the location of services (DNS SRV)\", RFC 2782,\n               February
    2000.\n"
  title: 12.  Informative References
- contents:
  - "13.  Intellectual Property Statement\n   The IETF takes no position regarding
    the validity or scope of any\n   intellectual property or other rights that might
    be claimed to\n   pertain to the implementation or use of the technology described
    in\n   this document or the extent to which any license under such rights\n   might
    or might not be available; neither does it represent that it\n   has made any
    effort to identify any such rights.  Information on the\n   IETF's procedures
    with respect to rights in standards-track and\n   standards-related documentation
    can be found in BCP-11.  Copies of\n   claims of rights made available for publication
    and any assurances of\n   licenses to be made available, or the result of an attempt
    made to\n   obtain a general license or permission for the use of such\n   proprietary
    rights by implementors or users of this specification can\n   be obtained from
    the IETF Secretariat.\n   The IETF invites any interested party to bring to its
    attention any\n   copyrights, patents or patent applications, or other proprietary\n
    \  rights which may cover technology that may be required to practice\n   this
    standard.  Please address the information to the IETF Executive\n   Director.\n"
  title: 13.  Intellectual Property Statement
- contents:
  - "14.  Author's Address\n   Andreas Gustafsson\n   Nominum, Inc.\n   2385 Bay Rd\n
    \  Redwood City, CA 94063\n   USA\n   Phone: +1 650 381 6004\n   EMail: gson@nominum.com\n"
  title: 14.  Author's Address
- contents:
  - "15.  Full Copyright Statement\n   Copyright (C) The Internet Society (2003).
    \ All Rights Reserved.\n   This document and translations of it may be copied
    and furnished to\n   others, and derivative works that comment on or otherwise
    explain it\n   or assist in its implementation may be prepared, copied, published\n
    \  and distributed, in whole or in part, without restriction of any\n   kind,
    provided that the above copyright notice and this paragraph are\n   included on
    all such copies and derivative works.  However, this\n   document itself may not
    be modified in any way, such as by removing\n   the copyright notice or references
    to the Internet Society or other\n   Internet organizations, except as needed
    for the purpose of\n   developing Internet standards in which case the procedures
    for\n   copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assignees.\n   This document and the
    information contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET
    SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES,
    EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE
    OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: 15.  Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
