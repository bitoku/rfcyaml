- title: __initial_text__
  contents:
  - '     Requirements for Configuration Management of IP-based Networks

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2001).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo discusses different approaches to configure networks and\n\
    \   identifies a set of configuration management requirements for IP-\n   based\
    \ networks.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.0  Introduction  . . . . . . . . . . . . . . . . . .\
    \ . . . . . . 2\n       1.1 Motivation, Scope and Goals of this document . . .\
    \ . . . . 2\n       1.2 Requirements Terminology . . . . . . . . . . . . . . .\
    \ . . 3\n       1.3 Audience . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ 3\n       1.4 Definition of Technical Terms. . . . . . . . . . . . . . . 3\n\
    \   2.0 Statement of the Problem  . . . . . . . . . . . . . . . . . .  4\n   3.0\
    \ Requirements for an IP-based Configuration Management System . 7\n   4.0 Security\
    \ Considerations . . . . . . . . . . . . . . . . . . .  9\n   Acknowledgments\
    \ . . . . . . . . . . . . . . . . . . . . . . . . .  9\n   References. . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . .  9\n   Authors' Addresses. . .\
    \ . . . . . . . . . . . . . . . . . . . . . 10\n   Full Copyright Statement. .\
    \ . . . . . . . . . . . . . . . . . . . 11\n"
- title: 1.0 Introduction
  contents:
  - '1.0 Introduction

    '
- title: 1.1 Motivation, Scope and Goals of this document
  contents:
  - "1.1 Motivation, Scope and Goals of this document\n   A number of IETF working\
    \ groups have introduced new technologies\n   which offer integrated and differentiated\
    \ services.  To support these\n   new technologies, working group members found\
    \ that they had new\n   requirements for configuration of these technologies.\
    \ One of these\n   new requirements was for the provisioning (configuration) of\
    \ behavior\n   at the network level.\n   An example of this type of configuration\
    \ would be instructing all\n   routers in a network to provide 'gold' service\
    \ to a particular set of\n   customers.  Depending on the specific network equipment\
    \ and\n   definition of 'gold' service, this configuration request might\n   translate\
    \ to different configuration parameters on different vendors\n   equipment and\
    \ many individual configuration commands at the router.\n   This higher level\
    \ of configuration management has come to commonly be\n   known as policy based\
    \ management.\n   Working groups associated with these new technologies believed\
    \ that\n   the existing SNMP based management framework, while adequate for\n\
    \   fault, configuration management at the individual instance (e.g.,\n   interface)\
    \ level, performance and other management functions commonly\n   associated with\
    \ it, was not able to meet these new needs.  As a\n   result they began working\
    \ on new solutions and approaches.\n   COPS [COPS] for RSVP [RSVP] provides routers\
    \ with the opportunity to\n   ask their Policy Server for an admit/reject decision\
    \ for a particular\n   RSVP session.  This model allows routers to outsource their\
    \ resource\n   allocation decisions to some other entity.  However, this model\
    \ does\n   not work with DiffServ [DSARCH] where there is no signalling\n   protocol.\
    \  Therefore, the policies that affect resource allocation\n   decisions must\
    \ be provisioned to the routers.  It became evident that\n   there was a need\
    \ for coordinating both RSVP-based and DiffServ-based\n   policies to provide\
    \ end2end QoS.  Working groups began to extend and\n   leverage approaches such\
    \ as COPS for RSVP to support Diffserv\n   policies.  This gave birth to COPS-PR\
    \ [COPS-PR].\n   These extensions caused concern that the IETF was about to develop\
    \ a\n   set of fragmented solutions which were locally optimized for specific\n\
    \   technologies and not well integrated in the existing Internet\n   Management\
    \ Framework.  The concern prompted some of the Area\n   Directors associated with\
    \ the Operations and Management, Transport\n   and General areas, and some IAB\
    \ members to organize a two day meeting\n   in mid September 1999.  The primary\
    \ purpose of the meeting was to\n   examine the requirements for configuration\
    \ management and evaluate\n   the COPS/PIB and SNMP/MIB approaches in light of\
    \ these requirements.\n   At the end of the two day meeting there was no consensus\
    \ on several\n   issues and as a result a number of 'design teams' were created.\
    \  This\n   document is the output of the design team chartered with the\n   identification\
    \ of a global set of configuration management\n   requirements.  This document\
    \ has benefited from feedback received\n   during the Configuration Management\
    \ BOF that took place on November\n   11, 1999 during the 46th IETF in Washington\
    \ DC, USA.  The document\n   has also benefited from comments sent to the confmgt@ops.ietf.org\n\
    \   mailing list.\n"
- title: 1.2 Requirements Terminology
  contents:
  - "1.2 Requirements Terminology\n   Keywords \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHOULD\", \"SHOULD NOT\" and\n   \"MAY\" that appear in this document are\
    \ to be interpreted as described\n   in RFC 2119 [Bra97].\n"
- title: 1.3 Audience
  contents:
  - "1.3 Audience\n   The target audience for this document includes system designers,\n\
    \   implementers of network configuration and management technology and\n   others\
    \ interested in gaining a general background understanding of\n   the issues related\
    \ to configuration management in general, and in the\n   Internet in particular\
    \ along with associated requirements.  This\n   document assumes that the reader\
    \ is familiar with the Internet\n   Protocol, related networking technology, and\
    \ general network\n   management terms and concepts.\n"
- title: 1.4 Definition of Terms
  contents:
  - "1.4 Definition of Terms\n   Device-Local Configuration\n   Configuration data\
    \ that is specific to a particular network device.\n   This is the finest level\
    \ of granularity for configuring network\n   devices.\n   Network-Wide Configuration\n\
    \   Configuration data that is not specific to any particular network\n   device\
    \ and from which multiple device-local configurations can be\n   derived.  Network-wide\
    \ configuration provides a level of abstraction\n   above device-local configurations.\n\
    \   Configuration Data Translator\n   A function that transforms Configuration\
    \ Management Data (high-level\n   policies) or Network-wide configuration data\
    \ (middle-level policies)\n   into device local configurations (low-level policies)\
    \ based on the\n   generic capabilities of network devices.  This function can\
    \ be\n   performed either by devices themselves or by some intermediate\n   entity.\n"
- title: 2.0 Statement of the Problem
  contents:
  - "2.0 Statement of the Problem\n   Configuring large networks is becoming an increasingly\
    \ difficult\n   task.  The problem intensifies as networks increase their size,\
    \ not\n   only in terms of number of devices, but also with a greater variety\n\
    \   of devices, with each device having increasing functionality and\n   complexity.\
    \  That is, networks are getting more complex in multiple\n   dimensions simultaneously\
    \ (number of devices, time scales for\n   configuration, etc.)  making the task\
    \ of configuring these more\n   complex.\n   In the past, configuring a network\
    \ device has been a three step\n   process.  The network operator, engineer or\
    \ entity responsible for\n   the network created a model of the network and its\
    \ expected behavior.\n   Next, this (model + expected behavior) was formalized\
    \ and recorded in\n   the form of high-level policies.  Finally, these policies\
    \ were then\n   translated into device-local configurations and provisioned into\
    \ each\n   network device for enforcement.\n   Any high-level policy changes (changes\
    \ in the network topology and/or\n   its expected behavior) needed to be translated\
    \ and provisioned to all\n   network devices affected by the change.  Figure 1\
    \ depicts this model\n   and shows how high-level policies for a network could\
    \ be translated\n   into four device-local configurations.  In this model, network\n\
    \   operators or engineers functioned as configuration data translators;\n   they\
    \ translated the high-level policies to device-local configuration\n   data.\n\
    \   A configuration data translator could take the topology independent\n   behavior\
    \ description such as high-level policies (first input source)\n   combine it\
    \ with topology information (second input source) as well as\n   status/performance/monitoring\
    \ information (third input source) to\n   derive device-local configurations.\
    \  Note that there could be several\n   configuration data translators operating\
    \ in tandem on a set of\n   devices.  However, there could be only one configuration\
    \ data\n   translator operating at a particular device at any given instance.\n\
    \                Configuration Management\n               Data (High-level Policies)\n\
    \                           |\n                           |\n                \
    \           |\n                           |\n   Network                 V    \
    \            Network\n   Topology ----->   Configuration    <---- Status/performance\n\
    \   Information     Data Translator(s)       Information\n                   \
    \        |\n                           |\n                           |\n     \
    \                      |\n     -------------------------------------------------\n\
    \     |               |               |               |\n   Device          Device\
    \          Device          Device\n   Local           Local           Local  \
    \         Local\n   Conf(1)         Conf(2)         Conf(3)         Conf(4)\n\
    \   Figure 1. Current model for configuring network devices.\n   Historically,\
    \ network operators and engineers used protocols and\n   mechanisms such as SNMP\
    \ and CLI applications to provision or\n   configure network devices.  In their\
    \ current versions, these\n   mechanisms have proven to be difficult to use because\
    \ of their low-\n   level of granularity and their device-specific nature.  This\
    \ problem\n   is worse when provisioning multiple network devices requiring large\n\
    \   amounts of configuration data.\n   It is evident that network administrators\
    \ and existing configuration\n   management software can not keep up with the\
    \ growth in complexity of\n   networks and that an efficient, integrated configuration\
    \ management\n   solution is needed.  Several IETF Working Groups working on this\n\
    \   problem converged into adding a layer of abstraction to the\n   traditional\
    \ configuration management process described in figure 1.\n   Figure 2 depicts\
    \ this process after the layer of abstraction is\n   added.  As in the previous\
    \ figure, first the network operator,\n   engineer or entity responsible for the\
    \ network creates a model of the\n   network and its expected behavior.  This\
    \ is formalized and recorded\n   in the form of high-level policies.\n   These\
    \ policies are combined with topology information as well as\n   status/performance\
    \ information to generate network-wide configuration\n   data.  These middle level-policies\
    \ are simpler to manage and\n   represent behaviors shared by multiple network\
    \ devices.\n                  Configuration Management\n                 Data\
    \ (High-level Policies)\n                            |\n                     \
    \       |\n                            |\n                            |\n   Network\
    \                  V                 Network\n   Topology ----->     Network-Wide\
    \     <---- Status/performance\n   Information        Configuration          \
    \ Information\n                           Data\n                            |\n\
    \                            |\n                            |\n              \
    \              |\n                            V\n                     Configuration\n\
    \                    Data Translator(s)\n                            |\n     \
    \                       |\n                            |\n                   \
    \         |\n     -------------------------------------------------\n     |  \
    \             |               |               |\n   Device          Device   \
    \       Device          Device\n   Local           Local           Local     \
    \      Local\n   Conf(1)         Conf(2)         Conf(3)         Conf(4)\n   Figure\
    \ 2. Proposed model for configuring network devices.\n   Device local configurations\
    \ are generated by automated configuration\n   data translators and are supplied\
    \ to each network device for\n   enforcement.  Note how this model only describes\
    \ the function of the\n   configuration data translators and it does not dictate\
    \ its functional\n   location.  This is to say that translators may reside outside\
    \ of the\n   devices (as it was the case in figure 1 since they were humans) or\n\
    \   may be possibly collocated with each device.\n   As in the previous model,\
    \ any high-level policy changes (changes in\n   the network topology and/or its\
    \ expected behavior) needs to be\n   propagated to all network devices affected\
    \ by the change.  However,\n   in the configuration model depicted in figure 2\
    \ network operators and\n   engineers can specify the behavior of the network\
    \ in a simplified\n   manner reducing the amount of device specific knowledge\
    \ needed.\n   One should keep in mind that in some cases per instance device local\n\
    \   configuration is needed in network devices.  An integrated solution\n   MUST\
    \ allow room for this.  Also, the introduction of automated\n   configuration\
    \ data translators assumes that all information needed to\n   make an error free\
    \ conversion of network-wide configuration data into\n   device-local configuration\
    \ data is available.  In the event that such\n   data is not available the solution\
    \ MUST detect this and act\n   accordingly.\n"
- title: 3.0 Requirements for an IP-based Configuration Management System
  contents:
  - "3.0 Requirements for an IP-based Configuration Management System\n   All IETF\
    \ WGs active in this area agrees upon the following\n   requirements for configuration\
    \ management.  An integrated\n   configuration management solution MUST:\n   1)\
    \   provide means by which the behavior of the network can be\n         specified\
    \ at a level of abstraction (network-wide\n         configuration) higher than\
    \ a set of configuration information\n         specific to individual devices,\n\
    \   2)    be capable of translating network-wide configurations into\n       \
    \  device-local configuration.  The identification of the relevant\n         subset\
    \ of the network-wide policies to be down-loaded is\n         according to the\
    \ capabilities of each device,\n   3)    be able to interpret device-local configuration,\
    \ status and\n         monitoring information within the context of network-wide\n\
    \         configurations,\n   4)    be capable of provisioning (e.g., adding,\
    \ modifying, deleting,\n         dumping, restoring) complete or partial configuration\
    \ data to\n         network devices simultaneously or in a synchronized fashion\
    \ as\n         necessary,\n         4a)   be able to provision multiple device-local\
    \ configurations\n               to support fast switch-overs without the need\
    \ to down-\n               load potentially large configuration changes to many\n\
    \               devices,\n   5)    provide means by which network devices can\
    \ send feedback\n         information (configuration data confirmation, network\
    \ status\n         and monitoring information, specific events, etc.) to the\n\
    \         management system,\n   6)    be capable of provisioning complete or\
    \ partial configuration\n         data to network devices dynamically as a result\
    \ of network\n         specific or network-wide events,\n   7)    provide efficient\
    \ and reliable means compared to current\n         versions of today's mechanisms\
    \ (CLI, SNMP) to provision large\n         amounts of configuration data,\n  \
    \ 8)    provide secure means to provision configuration data.  The\n         system\
    \ must provide support for access control, authentication,\n         integrity-checking,\
    \ replay- protection and/or privacy security\n         services.  The minimum\
    \ level of granularity for access control\n         and authentication is host\
    \ based.  The system SHOULD support\n         user/role based access control and\
    \ authentication for users in\n         different roles with different access\
    \ privileges,\n   9)    provide expiration time and effective time capabilities\
    \ to\n         configuration data.  It is required that some configuration\n \
    \        data items be set to expire, and other items be set to never\n      \
    \   expire,\n   10)   provide error detection (including data-specific errors)\
    \ and\n         failure recovery mechanisms (including prevention of\n       \
    \  inappropriately partial configurations when needed) for the\n         provisioning\
    \ of configuration data,\n   11)   eliminate the potential for mis-configuration\
    \ occurring through\n         concurrent shared write access to the device's configuration\n\
    \         data,\n   12)   provide facilities (with host and user-based authentication\n\
    \         granularity) to help in tracing back configuration changes,\n   13)\
    \   allow for the use of redundant components, both network\n         elements\
    \ and configuration application platforms, and for the\n         configuration\
    \ of redundant network elements.\n   14)   be flexible and extensible to accommodate\
    \ future needs.\n         Configuration management data models are not fixed for\
    \ all time\n         and are subject to evolution like any other management data\n\
    \         model.  It is therefore necessary to anticipate that changes\n     \
    \    will be needed, but it is not possible to anticipate what those\n       \
    \  changes might be.  Such changes could be to the configuration\n         data\
    \ model, supporting message types, data types, etc., and to\n         provide\
    \ mechanisms that can deal with these changes effectively\n         without causing\
    \ inter-operability problems or having to\n         replace/update large amounts\
    \ of fielded networking devices,\n   15)   leverage knowledge of the existing\
    \ SNMP management\n         infrastructure.  The system MUST leverage knowledge\
    \ of and\n         experience with MIBs and SMI.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   This document reflects the current requirements that\
    \ the IETF\n   believes configuration management systems MUST have to properly\n\
    \   support IP-based networks.  The authors believe that a configuration\n   management\
    \ system MUST provide mechanisms by which one can ascertain\n   the integrity\
    \ and authenticity of the configuration data at all\n   times.  In some cases\
    \ the privacy of the data is important therefore\n   configuration management\
    \ system MUST provide facilities to support\n   this services as required not\
    \ only while the data is stored but also\n   during provisioning or reception.\
    \  Requirements eight and twelve\n   capture the required security services.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The authors thank Juergen Schoenwaelder for his contributions\
    \ to this\n   document.  The authors also thank Walter Weiss and Andrew Smith\
    \ for\n   providing feedback to early versions of this document.  Finally, the\n\
    \   authors thank the IESG for motivating and supporting this work.\n"
- title: References
  contents:
  - "References\n   [Bra97]     Bradner, S., \"Key Words for use in RFCs to indicate\n\
    \               Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [COPS]\
    \      Boyle, J., Cohen, R., Durham, D., Herzog, S., Rajan, R.\n             \
    \  and A. Sastry, \"The COPS (Common Open Policy Service)\n               Protocol\"\
    , RFC 2748, August 1999.\n   [RSVP]      Braden, R., Editor, et al., \"Resource\
    \ ReSerVation\n               Protocol (RSVP) Version 1 - Functional Specification\"\
    ,\n               RFC 2205, September 1997.\n   [COPS-RSVP] Boyle, J., Cohen,\
    \ R., Durham, D., Herzog, S., Rajan, R.\n               and A. Sastry, \"COPS\
    \ usage for RSVP\", RFC 2749, June\n               1999.\n   [COPS-PROV] Chan,\
    \ K., Seligson, J., Durham, D., Gai, S., McCloghrie,\n               K., Herzog,\
    \ S., Reichmeyer, F., Yavatkar, R. and A.\n               Smith, \"COPS Usage\
    \ for Policy Provisioning (COPS-PR)\",\n               RFC 3084, March 2001.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Keith McCloghrie\n   Cisco Systems, Inc.\n   170 West\
    \ Tasman Drive\n   San Jose, CA  95134-1706\n   USA\n   Phone: +1 (408) 526-5260\n\
    \   EMail: kzm@cisco.com\n   Luis A. Sanchez\n   Megisto Systems\n   20251 Century\
    \ Boulevard\n   Germantown, MD  02138\n   USA\n   Phone: +1 (301) 444-1747\n \
    \  EMail: lsanchez@megisto.com\n   Jon Saperia\n   JDS Consulting, Inc.\n   174\
    \ Chapman Street\n   Watertown, MA 02472\n   USA\n   Phone: +1 (617) 744-1079\n\
    \   EMail: saperia@jdscons.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2001).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
