- title: __initial_text__
  contents:
  - "                    Curve25519 and Curve448 for the\n     Internet Key Exchange\
    \ Protocol Version 2 (IKEv2) Key Agreement\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes the use of Curve25519 and Curve448 for\n\
    \   ephemeral key exchange in the Internet Key Exchange Protocol Version\n   2\
    \ (IKEv2).\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc8031.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n     1.1.  Conventions Used in This Document . . . . . . . .\
    \ . . . .   2\n   2.  Curve25519 and Curve448 . . . . . . . . . . . . . . . .\
    \ . . .   3\n   3.  Use and Negotiation in IKEv2  . . . . . . . . . . . . . .\
    \ . .   3\n     3.1.  Key Exchange Payload  . . . . . . . . . . . . . . . . .\
    \ .   4\n     3.2.  Recipient Tests . . . . . . . . . . . . . . . . . . . . .\
    \   4\n   4.  Security Considerations . . . . . . . . . . . . . . . . . . .  \
    \ 4\n   5.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   5\n\
    \   6.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   5\n  \
    \   6.1.  Normative References  . . . . . . . . . . . . . . . . . .   5\n    \
    \ 6.2.  Informative References  . . . . . . . . . . . . . . . . .   6\n   Appendix\
    \ A.  Numerical Example for Curve25519 . . . . . . . . . .   7\n   Acknowledgements\
    \  . . . . . . . . . . . . . . . . . . . . . . . .   8\n   Authors' Addresses\
    \  . . . . . . . . . . . . . . . . . . . . . . .   8\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The \"Elliptic Curves for Security\" document [RFC7748]\
    \ describes two\n   elliptic curves, Curve25519 and Curve448, as well as the X25519\
    \ and\n   X448 functions for performing key agreement using Diffie-Hellman\n \
    \  operations with these curves.  The curves and functions are designed\n   for\
    \ both performance and security.\n   Elliptic curve Diffie-Hellman [RFC5903] has\
    \ been specified for the\n   Internet Key Exchange Protocol Version 2 (IKEv2)\
    \ [RFC7296] for almost\n   ten years.  RFC 5903 and its predecessor specified\
    \ the so-called NIST\n   curves.  The state of the art has advanced since then.\
    \  More modern\n   curves allow faster implementations while making it much easier\
    \ to\n   write constant-time implementations that are resilient to time-based\n\
    \   side-channel attacks.  This document defines two such curves for use\n   in\
    \ IKEv2.  See [Curve25519] for details about the speed and security\n   of the\
    \ Curve25519 function.\n"
- title: 1.1.  Conventions Used in This Document
  contents:
  - "1.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 2.  Curve25519 and Curve448
  contents:
  - "2.  Curve25519 and Curve448\n   Implementations of Curve25519 and Curve448 in\
    \ IKEv2 SHALL follow the\n   steps described in this section.  All cryptographic\
    \ computations are\n   done using the X25519 and X448 functions defined in [RFC7748].\
    \  All\n   related parameters (for example, the base point) and the encoding (in\n\
    \   particular, pruning the least/most significant bits and using little-\n  \
    \ endian encoding) are compliant with [RFC7748].\n   An ephemeral Diffie-Hellman\
    \ key exchange using Curve25519 or Curve448\n   is performed as follows: each\
    \ party picks a secret key d uniformly at\n   random and computes the corresponding\
    \ public key.  \"X\" is used below\n   to denote either X25519 or X448, and \"\
    G\" is used to denote the\n   corresponding base point:\n      pub_mine = X(d,\
    \ G)\n   Parties exchange their public keys (see Section 3.1) and compute a\n\
    \   shared secret:\n         SHARED_SECRET = X(d, pub_peer)\n   This shared secret\
    \ is used directly as the value denoted g^ir in\n   Section 2.14 of RFC 7296.\
    \  It is 32 octets when Curve25519 is used\n   and 56 octets when Curve448 is\
    \ used.\n"
- title: 3.  Use and Negotiation in IKEv2
  contents:
  - "3.  Use and Negotiation in IKEv2\n   The use of Curve25519 and Curve448 in IKEv2\
    \ is negotiated using a\n   Transform Type 4 (Diffie-Hellman group) in the Security\
    \ Association\n   (SA) payload of either an IKE_SA_INIT or a CREATE_CHILD_SA exchange.\n\
    \   The value 31 is used for the group defined by Curve25519 and the\n   value\
    \ 32 is used for the group defined by Curve448.\n"
- title: 3.1.  Key Exchange Payload
  contents:
  - "3.1.  Key Exchange Payload\n   The diagram for the Key Exchange payload from\
    \ Section 3.4 of RFC 7296\n   is copied below for convenience:\n             \
    \              1                   2                   3\n       0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      | Next Payload  |C|  RESERVED   |         Payload Length        |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \   Diffie-Hellman Group Num    |           RESERVED            |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                                                               |\n   \
    \   ~                       Key Exchange Data                       ~\n      |\
    \                                                               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   o  Payload Length - For Curve25519, the public key is 32 octets, so\n    \
    \  the Payload Length field will be 40.  For Curve448, the public key\n      is\
    \ 56 octets, so the Payload Length field will be 64.\n   o  The Diffie-Hellman\
    \ Group Num is 31 for Curve25519 or 32 for\n      Curve448.\n   o  The Key Exchange\
    \ Data is the 32 or 56 octets as described in\n      Section 6 of [RFC7748].\n"
- title: 3.2.  Recipient Tests
  contents:
  - "3.2.  Recipient Tests\n   Receiving and handling of incompatible point formats\
    \ MUST follow the\n   considerations described in Section 5 of [RFC7748].  In\
    \ particular,\n   receiving entities MUST mask the most-significant bit in the\
    \ final\n   byte for X25519 (but not X448), and implementations MUST accept non-\n\
    \   canonical values.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   Curve25519 and Curve448 are designed to facilitate\
    \ the production of\n   high-performance constant-time implementations.  Implementors\
    \ are\n   encouraged to use a constant-time implementation of the functions.\n\
    \   This point is of crucial importance, especially if the implementation\n  \
    \ chooses to reuse its ephemeral key pair in many key exchanges for\n   performance\
    \ reasons.\n   Curve25519 is intended for the ~128-bit security level, comparable\
    \ to\n   the 256-bit random ECP Groups (group 19) defined in RFC 5903, also\n\
    \   known as NIST P-256 or secp256r1.  Curve448 is intended for the\n   ~224-bit\
    \ security level.\n   While the NIST curves are advertised as being chosen verifiably\
    \ at\n   random, there is no explanation for the seeds used to generate them.\n\
    \   In contrast, the process used to pick Curve25519 and Curve448 is\n   fully\
    \ documented and rigid enough so that independent verification\n   can and has\
    \ been done.  This is widely seen as a security advantage\n   because it prevents\
    \ the generating party from maliciously\n   manipulating the parameters.\n   Another\
    \ family of curves available in IKE that were generated in a\n   fully verifiable\
    \ way is the Brainpool curves [RFC6954].  For example,\n   brainpoolP256 (group\
    \ 28) is expected to provide a level of security\n   comparable to Curve25519\
    \ and NIST P-256.  However, due to the use of\n   pseudorandom prime, it is significantly\
    \ slower than NIST P-256, which\n   is itself slower than Curve25519.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   IANA has assigned two values for the names \"Curve25519\"\
    \ and\n   \"Curve448\" in the IKEv2 \"Transform Type 4 - Diffie-Hellman Group\n\
    \   Transform IDs\" and has listed this document as the reference.  The\n   Recipient\
    \ Tests field should also point to this document:\n        +--------+------------+-----------------------+-----------+\n\
    \        | Number |    Name    |    Recipient Tests    | Reference |\n       \
    \ +--------+------------+-----------------------+-----------+\n        |   31\
    \   | Curve25519 | RFC 8031, Section 3.2 |  RFC 8031 |\n        |   32   |  Curve448\
    \  | RFC 8031, Section 3.2 |  RFC 8031 |\n        +--------+------------+-----------------------+-----------+\n\
    \                   Table 1: New Transform Type 4 Values\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC7296]  Kaufman, C., Hoffman, P., Nir, Y., Eronen, P., and T.\n       \
    \       Kivinen, \"Internet Key Exchange Protocol Version 2\n              (IKEv2)\"\
    , STD 79, RFC 7296, DOI 10.17487/RFC7296, October\n              2014, <http://www.rfc-editor.org/info/rfc7296>.\n\
    \   [RFC7748]  Langley, A., Hamburg, M., and S. Turner, \"Elliptic Curves\n  \
    \            for Security\", RFC 7748, DOI 10.17487/RFC7748, January\n       \
    \       2016, <http://www.rfc-editor.org/info/rfc7748>.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [Curve25519]\n              Bernstein, J., \"\
    Curve25519: New Diffie-Hellman Speed\n              Records\", Public Key Cryptography\
    \ - PKC 2006, Lecture\n              Notes in Computer Science (LNCS), Vol. 3958,\
    \ pp. 207-228,\n              DOI 10.1007/11745853_14, February 2006,\n      \
    \        <http://dx.doi.org/10.1007/11745853_14>.\n   [RFC5903]  Fu, D. and J.\
    \ Solinas, \"Elliptic Curve Groups modulo a\n              Prime (ECP Groups)\
    \ for IKE and IKEv2\", RFC 5903,\n              DOI 10.17487/RFC5903, June 2010,\n\
    \              <http://www.rfc-editor.org/info/rfc5903>.\n   [RFC6954]  Merkle,\
    \ J. and M. Lochter, \"Using the Elliptic Curve\n              Cryptography (ECC)\
    \ Brainpool Curves for the Internet Key\n              Exchange Protocol Version\
    \ 2 (IKEv2)\", RFC 6954,\n              DOI 10.17487/RFC6954, July 2013,\n   \
    \           <http://www.rfc-editor.org/info/rfc6954>.\n"
- title: Appendix A.  Numerical Example for Curve25519
  contents:
  - "Appendix A.  Numerical Example for Curve25519\n   Suppose we have both the initiator\
    \ and the responder generating\n   private keys by generating 32 random octets.\
    \  As usual in IKEv2 and\n   its extension, we will denote Initiator values with\
    \ the suffix _i and\n   responder values with the suffix _r:\n     random_i =\
    \ 75 1f b4 30 86 55 b4 76 b6 78 9b 73 25 f9 ea 8c\n                dd d1 6a 58\
    \ 53 3f f6 d9 e6 00 09 46 4a 5f 9d 94\n     random_r = 0a 54 64 52 53 29 0d 60\
    \ dd ad d0 e0 30 ba cd 9e\n                55 01 ef dc 22 07 55 a1 e9 78 f1 b8\
    \ 39 a0 56 88\n   These numbers need to be fixed by unsetting some bits as described\
    \ in\n   Section 5 of RFC 7748.  This affects only the first and last octets\n\
    \   of each value:\n     fixed_i =  70 1f b4 30 86 55 b4 76 b6 78 9b 73 25 f9\
    \ ea 8c\n                dd d1 6a 58 53 3f f6 d9 e6 00 09 46 4a 5f 9d 54\n   \
    \  fixed_r =  08 54 64 52 53 29 0d 60 dd ad d0 e0 30 ba cd 9e\n              \
    \  55 01 ef dc 22 07 55 a1 e9 78 f1 b8 39 a0 56 48\n   The actual private keys\
    \ are considered to be encoded in little-endian\n   format:\n  d_i = 549D5F4A460900E6D9F63F53586AD1DD8CEAF925739B78B676B4558630B41F70\n\
    \  d_r = 4856A039B8F178E9A1550722DCEF01559ECDBA30E0D0ADDD600D295352645408\n  \
    \ The public keys are generated from this using the formula in\n   Section 2:\n\
    \   pub_i = X25519(d_i, G) =\n                48 d5 dd d4 06 12 57 ba 16 6f a3\
    \ f9 bb db 74 f1\n                a4 e8 1c 08 93 84 fa 77 f7 90 70 9f 0d fb c7\
    \ 66\n   pub_r = X25519(d_r, G) =\n                0b e7 c1 f5 aa d8 7d 7e 44\
    \ 86 62 67 32 98 a4 43\n                47 8b 85 97 45 17 9e af 56 4c 79 c0 ef\
    \ 6e ee 25\n   And this is the value of the Key Exchange Data field in the Key\n\
    \   Exchange payload described in Section 3.1.  The shared value is\n   calculated\
    \ as in Section 2:\n   SHARED_SECRET = X25519(d_i, pub_r) = X25519(d_r, pub_i)\
    \ =\n                c7 49 50 60 7a 12 32 7f-32 04 d9 4b 68 25 bf b0\n       \
    \         68 b7 f8 31 9a 9e 37 08-ed 3d 43 ce 81 30 c9 50\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Curve25519 was designed by D. J. Bernstein and the parameters\
    \ for\n   Curve448 (\"Goldilocks\") were defined by Mike Hamburg.  The\n   specification\
    \ of algorithms, wire format, and other considerations\n   are documented in RFC\
    \ 7748 by Adam Langley, Mike Hamburg, and Sean\n   Turner.\n   The example in\
    \ Appendix A was calculated using the master version of\n   OpenSSL, retrieved\
    \ on August 4th, 2016.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Yoav Nir\n   Check Point Software Technologies Ltd.\n\
    \   5 Hasolelim st.\n   Tel Aviv  6789735\n   Israel\n   Email: ynir.ietf@gmail.com\n\
    \   Simon Josefsson\n   SJD AB\n   Email: simon@josefsson.org\n"
