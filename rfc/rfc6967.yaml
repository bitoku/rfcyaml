- title: __initial_text__
  contents:
  - "            Analysis of Potential Solutions for Revealing a\n        Host Identifier\
    \ (HOST_ID) in Shared Address Deployments\n"
- title: Abstract
  contents:
  - "Abstract\n   This document is a collection of potential solutions for revealing\
    \ a\n   host identifier (denoted as HOST_ID) when a Carrier Grade NAT (CGN)\n\
    \   or application proxies are involved in the path.  This host\n   identifier\
    \ could be used by a remote server to sort packets according\n   to the sending\
    \ host.  The host identifier must be unique to each host\n   under the same shared\
    \ IP address.\n   This document analyzes a set of potential solutions for revealing\
    \ a\n   host identifier and does not recommend a particular solution,\n   although\
    \ it does highlight the hazards of some approaches.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6967.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   4\n   2.  On HOST_ID  . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   5\n   3.  HOST_ID and Privacy . . . . . . . . . . . . . . . . . .\
    \ . . .   6\n   4.  Detailed Solutions Analysis . . . . . . . . . . . . . . .\
    \ . .   8\n     4.1.  Use the Identification Field of the IPv4 Header (IP-ID)\
    \ .   8\n       4.1.1.  Description . . . . . . . . . . . . . . . . . . . . .\
    \   8\n       4.1.2.  Analysis  . . . . . . . . . . . . . . . . . . . . . .  \
    \ 8\n     4.2.  Define an IP Option . . . . . . . . . . . . . . . . . . .   9\n\
    \       4.2.1.  Description . . . . . . . . . . . . . . . . . . . . .   9\n  \
    \     4.2.2.  Analysis  . . . . . . . . . . . . . . . . . . . . . .   9\n    \
    \ 4.3.  Define a TCP Option . . . . . . . . . . . . . . . . . . .   9\n      \
    \ 4.3.1.  Description . . . . . . . . . . . . . . . . . . . . .   9\n       4.3.2.\
    \  Analysis  . . . . . . . . . . . . . . . . . . . . . .  10\n     4.4.  Inject\
    \ Application Protocol Message Headers . . . . . . .  11\n       4.4.1.  Description\
    \ . . . . . . . . . . . . . . . . . . . . .  11\n       4.4.2.  Analysis  . .\
    \ . . . . . . . . . . . . . . . . . . . .  12\n     4.5.  PROXY Protocol  . .\
    \ . . . . . . . . . . . . . . . . . . .  13\n       4.5.1.  Description . . .\
    \ . . . . . . . . . . . . . . . . . .  13\n       4.5.2.  Analysis  . . . . .\
    \ . . . . . . . . . . . . . . . . .  13\n     4.6.  Assign Port Sets  . . . .\
    \ . . . . . . . . . . . . . . . .  14\n       4.6.1.  Description . . . . . .\
    \ . . . . . . . . . . . . . . .  14\n       4.6.2.  Analysis  . . . . . . . .\
    \ . . . . . . . . . . . . . .  14\n     4.7.  Host Identity Protocol (HIP)  .\
    \ . . . . . . . . . . . . .  14\n       4.7.1.  Description . . . . . . . . .\
    \ . . . . . . . . . . . .  14\n       4.7.2.  Analysis  . . . . . . . . . . .\
    \ . . . . . . . . . . .  14\n     4.8.  Use of a Notification Channel (e.g., ICMP)\
    \  . . . . . . .  15\n       4.8.1.  Description . . . . . . . . . . . . . . .\
    \ . . . . . .  15\n       4.8.2.  Analysis  . . . . . . . . . . . . . . . . .\
    \ . . . . .  15\n     4.9.  Use Out-of-Band Mechanisms (e.g., Ident)  . . . .\
    \ . . . .  16\n       4.9.1.  Description . . . . . . . . . . . . . . . . . .\
    \ . . .  16\n       4.9.2.  Analysis  . . . . . . . . . . . . . . . . . . . .\
    \ . .  17\n   5.  Solutions Analysis: Synthesis . . . . . . . . . . . . . . .\
    \ .  18\n   6.  Security Considerations . . . . . . . . . . . . . . . . . . .\
    \  20\n   7.  Acknowledgments . . . . . . . . . . . . . . . . . . . . . . .  20\n\
    \   8.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  21\n  \
    \   8.1.  Normative References  . . . . . . . . . . . . . . . . . .  21\n    \
    \ 8.2.  Informative References  . . . . . . . . . . . . . . . . .  21\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   As reported in [RFC6269], several issues are encountered\
    \ when an IP\n   address is shared among several subscribers.  These issues are\n\
    \   encountered in various deployment contexts, e.g., Carrier-Grade NAT\n   (CGN),\
    \ application proxies, or Address plus Port (A+P) [RFC6346].\n   Examples of such\
    \ issues are: implicit identification (Section 13.2 of\n   [RFC6269]), spam (Section\
    \ 13.3 of [RFC6269]), blacklisting a\n   misbehaving host (Section 13.1 of [RFC6269]),\
    \ or redirecting users\n   with infected machines to a dedicated portal (Section\
    \ 5.1 of\n   [RFC6269]).\n   In particular, some servers use the source IPv4 address\
    \ as an\n   identifier to treat some incoming connections differently.  Due to\n\
    \   the deployment of CGNs (e.g., NAT44 [RFC3022], NAT64 [RFC6146]), that\n  \
    \ address will be shared.  In particular, when a server receives\n   packets from\
    \ the same source address, because this address is shared,\n   the server does\
    \ not know which host is the sending host [RFC6269].\n   The sole use of the IPv4\
    \ address is not sufficient to uniquely\n   distinguish a host.  As a mitigation,\
    \ it is tempting to investigate\n   ways that would disclose information to be\
    \ used by the remote server\n   as a means of uniquely disambiguating packets\
    \ sent from hosts using\n   the same IPv4 address.\n   The risk of not mitigating\
    \ these issues include: OPEX (Operational\n   Expenditure) increase for IP connectivity\
    \ service providers (costs\n   induced by calls to a hotline), revenue loss for\
    \ content providers\n   (loss of users' audience), and customers' dissatisfaction\
    \ (low\n   quality of experience, service segregation, etc.).\n   The purpose\
    \ of this document is to analyze a set of alternative\n   channels to convey a\
    \ host identifier and to assess to what extent the\n   alternatives solve the\
    \ problem described in Section 2.  The\n   evaluation is intended to be comprehensive,\
    \ regardless of the\n   maturity or validity of any currently known or proposed\
    \ solution.\n   The alternatives analyzed in the document are listed below:\n\
    \   o  Use the Identification field of the IP header (denoted as IP-ID,\n    \
    \  Section 4.1).\n   o  Define a new IP option (Section 4.2).\n   o  Define a\
    \ new TCP option (Section 4.3).\n   o  Inject application headers (Section 4.4).\n\
    \   o  Enable Proxy Protocol (Section 4.5).\n   o  Assign port sets (Section 4.6).\n\
    \   o  Activate HIP (Host Identity Protocol) (Section 4.7).\n   o  Use a notification\
    \ channel (Section 4.8).\n   o  Use an out-of-band mechanism (Section 4.9).\n\
    \   A synthesis is provided in Section 5, while the detailed analysis is\n   elaborated\
    \ in Section 4.\n   Section 3 discusses privacy issues common to all proposed\
    \ solutions.\n   It is out of scope of this document to elaborate on privacy issues\n\
    \   specific to each solution.\n   This document does not include any recommendations\
    \ because the\n   working group felt that it was too premature to include one.\n"
- title: 2.  On HOST_ID
  contents:
  - "2.  On HOST_ID\n   Policies that rely on source IP addresses and that are enforced\
    \ by\n   some servers will be applied to all hosts sharing the same IP\n   address.\
    \  For example, blacklisting the IP address of a spammer host\n   will result\
    \ in all other hosts that share that address having their\n   access to the requested\
    \ service restricted.  [RFC6269] describes the\n   issues in detail.  Therefore,\
    \ due to address sharing, servers need\n   extra information beyond the source\
    \ IP address to differentiate the\n   sending host.  We call this information\
    \ the HOST_ID.\n   The HOST_ID identifies a host under a shared IP address.  Privacy-\n\
    \   related considerations are discussed in Section 3.\n   Within this document,\
    \ a host can be any computer located behind a\n   Home Gateway or directly connected\
    \ to an address-sharing function\n   located in the network provider's domain\
    \ (typically this would be the\n   Home Gateway itself).\n   Because the HOST_ID\
    \ is used by a remote server to sort out the\n   packets by sending host, the\
    \ HOST_ID must be unique to each host\n   under the same shared IP address, where\
    \ possible.  In the case where\n   only the Home Gateway is revealed to the operator\
    \ side of the\n   translation function, the HOST_ID need only be unique to the\
    \ Home\n   Gateway.  The HOST_ID does not need to be globally unique.  Of\n  \
    \ course, the combination of the (public) IP source address and the\n   identifier\
    \ (i.e., HOST_ID) ends up being unique.\n   If the HOST_ID is conveyed at the\
    \ IP level, all packets will have to\n   bear the identifier.  If it is conveyed\
    \ at a higher connection-\n   oriented level, the identifier is only needed once\
    \ in the session\n   establishment phase (for instance, a TCP three-way handshake),\
    \ then\n   all packets received in this session will be attributed to the\n  \
    \ HOST_ID designated during the session opening.\n   Within this document, we\
    \ assume the operator-side address-sharing\n   function injects the HOST_ID. \
    \ Another deployment option to avoid\n   potential performance degradation is\
    \ to let the host or Home Gateway\n   inject its HOST_ID, but the address-sharing\
    \ function will check its\n   content (just like an IP anti-spoofing function).\
    \  For some\n   proposals, the HOST_ID is retrieved using an out-of-band mechanism\
    \ or\n   signaled in a dedicated notification channel.\n   For A+P [RFC6346] and\
    \ its variants, port set announcements may be\n   needed as discussed in Section\
    \ 4.6.\n   Security considerations are common to all analyzed solutions (see\n\
    \   Section 6).  Privacy-related aspects are discussed in Section 3.\n   The HOST_ID\
    \ can be ambiguous for hosts with multiple interfaces or\n   multiple addresses\
    \ assigned to a single interface.  HOST_IDs that are\n   the same may be used\
    \ to imply or infer the same end system, but\n   HOST_IDs that are different should\
    \ not be used to imply or infer\n   whether the end systems are the same or different.\n"
- title: 3.  HOST_ID and Privacy
  contents:
  - "3.  HOST_ID and Privacy\n   IP address sharing is motivated by a number of different\
    \ factors.\n   For years, many network operators have conserved public IPv4\n\
    \   addresses by making use of Customer Premises Equipment (CPE) that\n   assigns\
    \ a single public IPv4 address to all hosts within the\n   customer's local area\
    \ network and uses NAT [RFC3022] to translate\n   between locally unique private\
    \ IPv4 addresses and the CPE's public\n   address.  With the exhaustion of IPv4\
    \ address space, address sharing\n   between customers on a much larger scale\
    \ is likely to become much\n   more prevalent.  While many individual users are\
    \ unaware of and\n   uninvolved in decisions about whether their unique IPv4 addresses\
    \ get\n   revealed when they send data via IP, some users realize privacy\n  \
    \ benefits associated with IP address sharing, and some may even take\n   steps\
    \ to ensure that NAT functionality sits between them and the\n   public Internet.\
    \  IP address sharing makes the actions of all users\n   behind the NAT function\
    \ unattributable to any single host, creating\n   room for abuse but also providing\
    \ some identity protection for\n   non-abusive users who wish to transmit data\
    \ with reduced risk of\n   being uniquely identified.\n   The proposals considered\
    \ in this document help differentiate between\n   hosts that share a public IP\
    \ address.  The extent of that\n   differentiation depends on what information\
    \ is included in the\n   HOST_ID.\n   The volatility of the HOST_ID information\
    \ is similar to that of the\n   internal IP address: a distinct HOST_ID may be\
    \ used by the address-\n   sharing function when the host reboots or gets a new\
    \ internal IP\n   address.  As with persistent IP addresses, persistent HOST_IDs\n\
    \   facilitate user tracking over time.\n   As a general matter, the HOST_ID proposals\
    \ do not seek to make hosts\n   any more identifiable than they would be if they\
    \ were using a public,\n   non-shared IP address.  However, depending on the solution\
    \ proposal,\n   the addition of HOST_ID information may allow a device to be\n\
    \   fingerprinted more easily than it otherwise would be.  To prevent\n   this,\
    \ the following design considerations are to be taken into\n   account:\n   o\
    \  It is recommended that HOST_IDs be limited to providing local\n      uniqueness\
    \ rather than global uniqueness.\n   o  The address-sharing function should not\
    \ use permanent HOST_ID\n      values.\n   Should multiple solutions be combined\
    \ (e.g., TCP option and Forwarded\n   header) that include different pieces of\
    \ information in the HOST_ID,\n   fingerprinting may become even easier.  To prevent\
    \ this, an address-\n   sharing function that is able to inject HOST_IDs in several\
    \ layers\n   should reveal the same subsets of information at each layer.  For\n\
    \   example, if one layer references the lower 16 bits of an IPv4\n   address,\
    \ the other layer should reference these 16 bits too.\n   A HOST_ID can be spoofed,\
    \ as this is also the case for spoofing an IP\n   address.  Furthermore, users\
    \ of network-based anonymity services\n   (like Tor [TOR]) may be capable of stripping\
    \ HOST_ID information\n   before it reaches its destination.\n   In order to control\
    \ the information revealed to external parties, an\n   address-sharing function\
    \ should be able to strip, rewrite, and add\n   HOST_ID fields.\n   An address-sharing\
    \ function may be configured to enforce different\n   end-user preferences with\
    \ regards to HOST_ID injection.  For example,\n   HOST_ID injection can be disabled\
    \ for some users.  This feature is\n   policy based and deployment specific.\n\
    \   HOST_ID specification document(s) should explain the privacy impact\n   of\
    \ the solutions they specify, including the extent of HOST_ID\n   uniqueness and\
    \ persistence, assumptions made about the lifetime of\n   the HOST_ID, whether\
    \ and how the HOST_ID can be obfuscated or\n   recycled, whether location information\
    \ can be exposed, and the impact\n   of the use of the HOST_ID on device or implementation\
    \ fingerprinting.\n   [IAB-PRIVACY] provides further guidance.\n   For more discussion\
    \ about privacy, refer to [RFC6462].\n"
- title: 4.  Detailed Solutions Analysis
  contents:
  - '4.  Detailed Solutions Analysis

    '
- title: 4.1.  Use the Identification Field of the IPv4 Header (IP-ID)
  contents:
  - '4.1.  Use the Identification Field of the IPv4 Header (IP-ID)

    '
- title: 4.1.1.  Description
  contents:
  - "4.1.1.  Description\n   The IPv4 ID (Identification field of IP header, i.e.,\
    \ IP-ID) can be\n   used to insert information that uniquely distinguishes a host\
    \ among\n   those sharing the same IPv4 address.  Use of the IP-ID as a channel\n\
    \   to convey the HOST_ID is a theoretical construct (i.e., it is an\n   undocumented\
    \ proposal).\n   An address-sharing function can rewrite the IP-ID field to insert\
    \ a\n   value that is unique to the host (16 bits are sufficient to uniquely\n\
    \   disambiguate hosts sharing the same IP address).  The address-sharing\n  \
    \ function injecting the HOST_ID must follow the rules defined in\n   [RFC6864];\
    \ in particular, the same HOST_ID is not reassigned to\n   another host sharing\
    \ the same IP address during a given time\n   interval.\n   A variant of this\
    \ approach relies upon the format of certain packets,\n   such as TCP SYN, where\
    \ the IP-ID can be modified to contain a 16-bit\n   HOST_ID.\n   Address-sharing\
    \ devices using this solution would be required to\n   indicate that they do so,\
    \ possibly using a special DNS record.\n"
- title: 4.1.2.  Analysis
  contents:
  - "4.1.2.  Analysis\n   This usage is not consistent with the fragment reassembly\
    \ use of the\n   Identification field [RFC0791] or the updated handling rules\
    \ for the\n   Identification field [RFC6864].\n   Complications may arise if the\
    \ packet is fragmented before reaching\n   the device that is injecting the HOST_ID.\
    \  To appropriately handle\n   those packet fragments, the address-sharing function\
    \ will need to\n   maintain a lot of state.\n   Another complication to be encountered\
    \ is where translation is\n   balanced among several NATs; setting the appropriate\
    \ HOST_ID by a\n   given NAT would alter the coordination between those NATs.\
    \  Of\n   course, one can argue that this coordinated NAT scenario is not a\n\
    \   typical deployment scenario; regardless, using the IP-ID as a channel\n  \
    \ to convey a HOST_ID is ill-advised.\n"
- title: 4.2.  Define an IP Option
  contents:
  - '4.2.  Define an IP Option

    '
- title: 4.2.1.  Description
  contents:
  - "4.2.1.  Description\n   An alternate way to convey the HOST_ID is to define an\
    \ IP option\n   [RFC0791].  A HOST_ID IP option can be inserted by the address-\n\
    \   sharing function to uniquely distinguish a host among those sharing\n   the\
    \ same IP address.  An example of such an option is documented in\n   [REVEAL-IP].\
    \  This IP option allows the conveyance of an IPv4\n   address, an IPv6 prefix,\
    \ a Generic Routing Encapsulation (GRE) key,\n   an IPv6 Flow Label, etc.\n  \
    \ An IP option may also be used as described in Section 4.6 of\n   [RFC3022].\n"
- title: 4.2.2.  Analysis
  contents:
  - "4.2.2.  Analysis\n   This proposal can apply to any transport protocol.  However,\
    \ it is\n   widely known that routers and other middleboxes filter IP options\n\
    \   (e.g., drop IP packets with unknown IP options, strip unknown IP\n   options,\
    \ etc.).\n   Injecting the HOST_ID IP option introduces some implementation\n\
    \   complexity in the following cases:\n   o  The packet is at or close to the\
    \ MTU size.\n   o  The options space is exhausted.\n   Previous studies demonstrated\
    \ that \"IP Options are not an option\"\n   (refer to [Not_An_Option] and [Options]).\n\
    \   In conclusion, using an IP option to convey a HOST_ID is not viable.\n"
- title: 4.3.  Define a TCP Option
  contents:
  - '4.3.  Define a TCP Option

    '
- title: 4.3.1.  Description
  contents:
  - "4.3.1.  Description\n   The HOST_ID may be conveyed in a dedicated TCP option.\
    \  An example is\n   specified in [REVEAL-TCP].  This option encloses the TCP\
    \ client's\n   identifier (e.g., the lower 16 bits of its IPv4 address, its VLAN\
    \ ID,\n   VRF ID, or subscriber ID).  The address-sharing device inserts this\n\
    \   TCP option into the TCP SYN packet.\n"
- title: 4.3.2.  Analysis
  contents:
  - "4.3.2.  Analysis\n   Using a new TCP option to convey the HOST_ID does not require\
    \ any\n   modification to the applications, but it is applicable only for\n  \
    \ TCP-based applications.  Applications relying on other transport\n   protocols\
    \ are therefore left unsolved.\n   [REVEAL-TCP] discusses the interference with\
    \ other TCP options.\n   The risk of session failure due to handling a new TCP\
    \ option is low\n   as measured in [Options].  [REVEAL-TCP-EXP] provides a detailed\n\
    \   implementation and experimentation report of a HOST_ID TCP option.\n   This\
    \ document provides an in-depth investigation of the impact of\n   implementing\
    \ HOST_ID on the host, the address-sharing function, and\n   the enforcement of\
    \ policies at the server side.  It also reports a\n   failure ratio of 0.103%\
    \ among the top 100,000 websites.\n   Some downsides have been identified with\
    \ defining a TCP option to\n   reveal a host identity:\n   o  Conveying an IP\
    \ address in a TCP option may be seen as a violation\n      of OSI layers, but\
    \ since IP addresses are already used for the\n      checksum computation, this\
    \ is not seen as a blocking point.\n      Moreover, the updated version of [REVEAL-TCP]\
    \ no longer allows\n      conveyance of a full IP address because the HOST_ID\
    \ is encoded in\n      16 bits.\n   o  TCP option space is limited and might be\
    \ consumed by the TCP\n      client.  [REVEAL-TCP-EXP] discusses two approaches\
    \ to sending the\n      HOST_ID: sending the HOST_ID in the TCP SYN (which consumes\
    \ more\n      bytes in the TCP header of the TCP SYN) and sending the HOST_ID\
    \ in\n      a TCP ACK (which consumes only two bytes in the TCP SYN).\n   o  Content\
    \ providers may find it more desirable to receive the\n      HOST_ID in the TCP\
    \ SYN, as that more closely preserves the HOST_ID\n      received in the source\
    \ IP address as per current practices.\n      Moreover, sending the HOST_ID in\
    \ the TCP SYN does not interfere\n      with [FASTOPEN].  In the ACK mode, if\
    \ the server is configured to\n      deliver different data based on HOST_ID,\
    \ then it would have to\n      wait for the ACK before transmitting data.\n  \
    \ o  HOST_ID mechanisms need to be aware of end-to-end (E2E) issues and\n    \
    \  avoid interfering with them.  One example of such interference\n      would\
    \ be injecting or removing TCP options of transited packets;\n      another such\
    \ interference involves terminating and re-originating\n      TCP connections\
    \ not belonging to the transit device.  The HOST_ID\n      TCP option handled\
    \ by the source node avoids this issue.\n   o  Injecting the HOST_ID TCP option\
    \ introduces some implementation\n      complexity if the options space is exhausted.\
    \  Specification\n      document(s) should specify the behavior of the address-sharing\n\
    \      function in detail in such a case.\n   o  It is more complicated to implement\
    \ sending the HOST_ID in a TCP\n      ACK, as it can introduce MTU issues if the\
    \ ACK packet also\n      contains TCP data or if a TCP segment is lost.  Note\
    \ that MTU\n      complications can be experienced if user data is included in\
    \ a SYN\n      packet (e.g., [FASTOPEN]).\n   o  When there are several NATs in\
    \ the path, the original HOST_ID may\n      be lost.  The loss of the original\
    \ HOST_ID may not be a problem,\n      as the target usage is between proxies\
    \ or between a CGN and\n      server.  Only the information leaked in the last\
    \ communication leg\n      (i.e., between the last address-sharing function and\
    \ the server)\n      is likely to be useful.\n   o  Interference with usages such\
    \ as a Forwarded HTTP header (see\n      Section 4.4) should be elaborated to\
    \ specify the behavior of\n      servers when both options are used; in particular,\
    \ specify which\n      information to use: the content of the TCP option or what\
    \ is\n      conveyed in the application headers.\n   o  When load balancers or\
    \ proxies are in the path, this option does\n      not allow the preservation\
    \ of the original source IP address and\n      source port.  Preserving such information\
    \ is required for logging\n      purposes (e.g., [RFC6302]).  [REVEAL-TCP-EXP]\
    \ defines a TCP option\n      that allows various combinations of source information\
    \ (e.g.,\n      source port, source port and source IP address, source IPv6\n\
    \      prefix, etc.) to be revealed.\n   More discussion about issues raised when\
    \ extending TCP can be found\n   at [ExtendTCP].\n"
- title: 4.4.  Inject Application Protocol Message Headers
  contents:
  - '4.4.  Inject Application Protocol Message Headers

    '
- title: 4.4.1.  Description
  contents:
  - "4.4.1.  Description\n   Another option is to not require any change within the\
    \ transport or\n   the IP levels but to convey the required information that will\
    \ be\n   used to disambiguate hosts at the application payload.  The format of\n\
    \   the conveyed information and the related semantics depend on its\n   application\
    \ (e.g., HTTP, SIP, SMTP, etc.).\n   Related mechanisms could be developed for\
    \ other application-layer\n   protocols, but the discussion in this document is\
    \ limited to HTTP and\n   similar protocols.\n   For HTTP, the Forwarded header\
    \ [HTTP-FRWD] can be used to display the\n   original IP address when an address-sharing\
    \ device is involved.\n   Service providers operating address-sharing devices\
    \ can enable the\n   feature of injecting the Forwarded header, which will enclose\
    \ the\n   original IPv4 address or the IPv6 prefix part (see the example shown\n\
    \   in Figure 1).  The address-sharing device has to strip all included\n   Forwarded\
    \ headers before injecting its own.  Servers may rely on the\n   contents of this\
    \ field to enforce some policies such as blacklisting\n   misbehaving users.\n\
    \   Note that [HTTP-FRWD] standardizes the Forwarded header field, to\n   replace\
    \ the de facto (and not standard) X-Forwarded-For (XFF) header.\n            \
    \      Forwarded: for=192.0.2.1,for=[2001:db8::1]\n                  Forwarded:\
    \ proto=https;by=192.0.2.15\n                    Figure 1: Example of Forwarded-For\n"
- title: 4.4.2.  Analysis
  contents:
  - "4.4.2.  Analysis\n   Not all applications impacted by address sharing can support\
    \ the\n   ability to disclose the original IP address.  Only a subset of\n   protocols\
    \ (e.g., HTTP) can rely on this solution.\n   For the HTTP case, to prevent users\
    \ from injecting invalid HOST_IDs,\n   an initiative has been launched by Wikimedia\
    \ to maintain a list of\n   trusted ISPs (Internet Service Providers) using XFF\
    \ (see the list\n   available at [Trusted_ISPs]).  If an address-sharing device\
    \ is on the\n   list of trusted XFF ISPs, users editing Wikimedia located behind\
    \ the\n   address-sharing device will appear to be editing from their\n   \"original\"\
    \ IP address and not from the NATed IP address.  If an\n   offending activity\
    \ is detected, individual hosts can be blacklisted\n   instead of blacklisting\
    \ all hosts sharing the same IP address.\n   XFF header injection is a common\
    \ practice of load balancers.  When a\n   load balancer is in the path, the original\
    \ content of any included\n   XFF header should not be stripped.  Otherwise, the\
    \ information about\n   the \"origin\" IP address will be lost.\n   When several\
    \ address-sharing devices are crossed, the Forwarded\n   header can convey the\
    \ list of IP addresses (e.g., Figure 1).  The\n   origin HOST_ID can be exposed\
    \ to the target server.\n   Injecting the Forwarded header also introduces some\
    \ implementation\n   complexity if the HTTP message is at or close to the MTU\
    \ size.\n   It has been reported that some HTTP proxy implementations may\n  \
    \ encounter parsing issues when injecting an XFF header.\n   Injecting the Forwarded\
    \ header for all HTTPS traffic is infeasible.\n   This may be problematic given\
    \ the current HTTPS usage trends.\n"
- title: 4.5.  PROXY Protocol
  contents:
  - '4.5.  PROXY Protocol

    '
- title: 4.5.1.  Description
  contents:
  - "4.5.1.  Description\n   The solution, referred to as the Proxy Protocol [Proxy],\
    \ does not\n   require any application-specific knowledge.  The proposed solution\n\
    \   (Proxy Protocol Version 1) would insert identification data directly\n   into\
    \ the application-data stream prior to the actual protocol data\n   being sent,\
    \ regardless of the protocol.  Every application protocol\n   would begin with\
    \ a textual string of \"PROXY\", followed by some\n   textual identification data,\
    \ and with a CRLF; only then would the\n   application data be inserted.  Figure\
    \ 2 shows an example of a line of\n   data used for this purpose, in this case,\
    \ for a TCP-over-IPv4\n   connection received from 192.0.2.1:56324 and destined\
    \ to\n   192.0.2.15:443.\n                 PROXY TCP4 192.0.2.1 192.0.2.15 56324\
    \ 443\\r\\n\n               Figure 2: Example of PROXY Connection Report\n   Upon\
    \ receipt of a message conveying this line, the server removes the\n   line from\
    \ the incoming stream.  The line is parsed to retrieve the\n   transported protocol.\
    \  The content of this line is recorded in logs\n   and used to enforce policies.\n\
    \   Proxy Protocol Version 2 is designed to accommodate IPv4/IPv6 and\n   also\
    \ non-TCP protocols (see [Proxy] for more details).\n"
- title: 4.5.2.  Analysis
  contents:
  - "4.5.2.  Analysis\n   This solution can be deployed in a controlled environment,\
    \ but it\n   cannot be deployed to all access services available in the Internet.\n\
    \   If the remote server does not support the Proxy Protocol, the session\n  \
    \ will fail.  Other complications will arise due to the presence of\n   firewalls,\
    \ for instance.\n   As a consequence, this solution is infeasible and cannot be\n\
    \   recommended.\n"
- title: 4.6.  Assign Port Sets
  contents:
  - '4.6.  Assign Port Sets

    '
- title: 4.6.1.  Description
  contents:
  - "4.6.1.  Description\n   This solution does not require any action from the address-sharing\n\
    \   function to disclose a host identifier.  Instead of assuming that all\n  \
    \ transport ports are associated with one single host, each host under\n   the\
    \ same external IP address is assigned a restricted port set.\n   These port sets\
    \ are then advertised to remote servers using offline\n   means.  This announcement\
    \ is not required for the delivery of\n   internal services (i.e., offered by\
    \ the service provider deploying\n   the address-sharing function) relying on\
    \ implicit identification.\n   Port sets assigned to hosts may be static or dynamic.\n\
    \   Port set announcements to remote servers are not required to reveal\n   the\
    \ identity of individual hosts; they are used to advertise the\n   enforced policy\
    \ to generate non-overlapping port sets (e.g., the\n   transport space associated\
    \ with an IP address is fragmented to\n   contiguous blocks of 2048 port numbers).\n\
    \   Examples of such an approach are documented in [RFC6346] and\n   [DETERMCGN].\n"
- title: 4.6.2.  Analysis
  contents:
  - "4.6.2.  Analysis\n   The solution does not require defining new fields or options;\
    \ it is\n   policy based.\n   The solution may contradict the port randomization\
    \ [RFC6056] as\n   identified in [RFC6269].  A mitigation would be to avoid assigning\n\
    \   static port sets to individual hosts.\n   The method is convenient for the\
    \ delivery of services offered by the\n   service provider that is also offering\
    \ the Internet access service.\n"
- title: 4.7.  Host Identity Protocol (HIP)
  contents:
  - '4.7.  Host Identity Protocol (HIP)

    '
- title: 4.7.1.  Description
  contents:
  - "4.7.1.  Description\n   [RFC5201] specifies an architecture that introduces a\
    \ new namespace\n   to convey identity information.\n"
- title: 4.7.2.  Analysis
  contents:
  - "4.7.2.  Analysis\n   This solution requires both the client and the server to\
    \ support HIP\n   [RFC5201].  Additional architectural considerations are to be\
    \ taken\n   into account, such as the key exchanges.\n   An alternative deployment\
    \ model that does not require the client to\n   be HIP-enabled is having the address-sharing\
    \ function behave as a\n   UDP/TCP-HIP relay.  This model is also not viable as\
    \ it assumes all\n   servers are HIP-enabled.\n   This solution is a theoretical\
    \ construct (i.e., the proposal is not\n   documented).\n"
- title: 4.8.  Use of a Notification Channel (e.g., ICMP)
  contents:
  - '4.8.  Use of a Notification Channel (e.g., ICMP)

    '
- title: 4.8.1.  Description
  contents:
  - "4.8.1.  Description\n   Another alternative is to convey the HOST_ID using a\
    \ separate\n   notification channel than the one the packets issued to invoke\
    \ the\n   service.\n   This solution relies on a mechanism where the address-sharing\n\
    \   function encapsulates the necessary host-identifying information into\n  \
    \ an ICMP Echo Request packet that it sends in parallel with the\n   initial session\
    \ creation (e.g., SYN).  The information included in\n   the ICMP Request Data\
    \ portion describes the five-tuples as seen on\n   both sides of the address-sharing\
    \ function.  An implementation\n   example is defined in [REVEAL-ICMP].\n"
- title: 4.8.2.  Analysis
  contents:
  - "4.8.2.  Analysis\n   o  This ICMP proposal is valid for any transport protocol\
    \ that uses a\n      port number.  The address-sharing function may be configured\
    \ with\n      the transport protocols that will trigger issuing those ICMP\n \
    \     messages.\n   o  A hint should be provided to the ultimate server (or intermediate\n\
    \      nodes) that the ICMP Echo Request conveys a HOST_ID.  This may be\n   \
    \   implemented using magic numbers (a magic number is a self-selected\n     \
    \ codepoint whose primary value is its unlikely collision with\n      values selected\
    \ by others).\n   o  Even if ICMP packets are blocked in the communication path,\
    \ the\n      user connection does not have to be impacted.\n   o  Implementations\
    \ requiring a session establishment to be delayed\n      until receipt of the\
    \ companion ICMP Echo Request may lead to some\n      user-experience degradation.\n\
    \   o  Because of the presence of load balancers in the path, the\n      ultimate\
    \ server receiving the SYN packet may not be the one that\n      receives the\
    \ ICMP message conveying the HOST_ID.\n   o  Because of the presence of load balancers\
    \ in the path, the port\n      number assigned by address sharing may be lost.\
    \  Therefore, the\n      mapping information conveyed in the ICMP may not be sufficient\
    \ to\n      associate a SYN packet with a received ICMP.\n   o  The proposal is\
    \ not compatible with the presence of cascaded NAT.\n      The main reason is\
    \ that each NAT in the path will generate an ICMP\n      message to reveal the\
    \ internal host identifier.  Because these\n      messages will be translated\
    \ by the downstream address-sharing\n      devices, the remote server will receive\
    \ multiple ICMP messages and\n      will need to decide which host identifier\
    \ to use.\n   o  The ICMP proposal will add traffic overhead for both the server\n\
    \      and the address-sharing device.\n   o  The ICMP proposal is similar to\
    \ other mechanisms (e.g., IPFIX\n      [IPFIX-NAT] and Syslog [SYSLOG-NAT]) for\
    \ reporting dynamic\n      mappings to a mediation platform (mainly for legal\
    \ traceability\n      purposes).  Performance degradation is likely to be experienced\
    \ by\n      address-sharing functions because ICMP messages are sent for each\n\
    \      new instantiated mapping (even if the mapping exists).\n   o  In some scenarios\
    \ (e.g., Section 3 of [REVEAL-PCP]), the HOST_ID\n      should be interpreted\
    \ by intermediate devices that embed Policy\n      Enforcement Points (PEP) [RFC2753]\
    \ responsible for granting access\n      to some services.  These PEPs need to\
    \ inspect all received packets\n      in order to find the companion (traffic)\
    \ messages to be correlated\n      with ICMP messages conveying HOST_IDs.  This\
    \ induces more\n      complexity to these intermediate devices.\n"
- title: 4.9.  Use Out-of-Band Mechanisms (e.g., Ident)
  contents:
  - '4.9.  Use Out-of-Band Mechanisms (e.g., Ident)

    '
- title: 4.9.1.  Description
  contents:
  - "4.9.1.  Description\n   Another alternative is to retrieve the HOST_ID using\
    \ a dedicated\n   query channel.\n   An implementation example may rely on the\
    \ Identification Protocol\n   (Ident) [RFC1413].  This solution assumes that the\
    \ address-sharing\n   function implements the server part of IDENT, while remote\
    \ servers\n   implement the client part of the protocol.  IDENT needs to be updated\n\
    \   to be able to return a host identifier instead of the user-id as\n   defined\
    \ in [RFC1413].  The IDENT response syntax uses the same USERID\n   field described\
    \ in [RFC1413], but rather than returning a username, a\n   host identifier (e.g.,\
    \ a 16-bit value) is returned.  For any new\n   incoming connection, the server\
    \ contacts the IDENT server to retrieve\n   the associated identifier.  During\
    \ that phase, the connection may be\n   delayed.\n"
- title: 4.9.2.  Analysis
  contents:
  - "4.9.2.  Analysis\n   o  IDENT is specific to TCP.  Alternative out-of-band mechanisms\
    \ may\n      be designed to cover other transport protocols such as UDP.\n   o\
    \  This solution requires the address-sharing function to embed an\n      IDENT\
    \ server.\n   o  A hint should be provided to the ultimate server (or intermediate\n\
    \      nodes) that the address-sharing function implements the IDENT\n      protocol,\
    \ for example, publishing this capability using DNS (other\n      solutions can\
    \ be envisaged).\n   o  An out-of-band mechanism may require some administrative\
    \ setup\n      (e.g., contract agreement) between the entity managing the\n  \
    \    address-sharing function and the entity managing the remote\n      server.\
    \  Such a deployment is not feasible in the Internet at\n      large because establishing\
    \ and maintaining agreements between ISPs\n      and all service actors is burdensome\
    \ and not scalable.\n   o  Implementations requiring delay of the establishment\
    \ of a session\n      until receipt of the companion IDENT response may lead to\
    \ some\n      user-experience degradation.\n   o  The IDENT proposal will add\
    \ traffic overhead for both the server\n      and the address-sharing device.\n\
    \   o  Performance degradation is likely to be experienced by address-\n     \
    \ sharing functions embedding the IDENT server.  This is further\n      exacerbated\
    \ if the address-sharing function has to handle an IDENT\n      query for each\
    \ new instantiated mapping (even if the mapping\n      exists).\n   o  In some\
    \ scenarios (e.g., Section 3 of [REVEAL-PCP]), the HOST_ID\n      should be interpreted\
    \ by intermediate devices that embed Policy\n      Enforcement Points (PEP) [RFC2753]\
    \ responsible for granting access\n      to some services.  These PEPs need to\
    \ inspect all received packets\n      in order to generate the companion IDENT\
    \ queries.  This may induce\n      more complexity to these intermediate devices.\n\
    \   o  IDENT queries may be generated by illegitimate TCP servers.  This\n   \
    \   would require the address-sharing function to enforce some\n      policies\
    \ (e.g., rate-limit queries, filter based on the source IP\n      address, etc.).\n"
- title: '5.  Solutions Analysis: Synthesis'
  contents:
  - "5.  Solutions Analysis: Synthesis\n   Table 1 summarizes the approaches analyzed\
    \ in this document.\n              +-----+------+------+------+-----+-----+-----+-----+-----+\n\
    \              |IP-ID| IP   | TCP  |HTTP  |PROXY|Port | HIP |ICMP |IDENT|\n  \
    \            |     |Option|Option|Header|     | Set |     |     |     |\n    ----------+-----+------+------+------+-----+-----+-----+-----+-----+\n\
    \    UDP       | Yes | Yes  | No   | No   | No  | Yes |     | Yes | No  |\n  \
    \  ----------+-----+------+------+------+-----+-----+-----+-----+-----+\n    TCP\
    \       | Yes | Yes  | Yes  | No   | Yes | Yes |     | Yes | Yes |\n    ----------+-----+------+------+------+-----+-----+-----+-----+-----+\n\
    \    HTTP      | Yes | Yes  | Yes  | Yes  | Yes | Yes |     | Yes | Yes |\n  \
    \  ----------+-----+------+------+------+-----+-----+-----+-----+-----+\n    Encrypted\
    \ | Yes | Yes  | Yes  | No   | Yes | Yes |     | Yes | Yes |\n    Traffic   |\
    \     |      |      |      |     |     |     |     |     |\n    ----------+-----+------+------+------+-----+-----+-----+-----+-----+\n\
    \    Success   | High| Low  | High | High | Low | 100%|Low  |High |High |\n  \
    \  Ratio     |     |      |      |      |     |     |     |     |     |\n    ----------+-----+------+------+------+-----+-----+-----+-----+-----+\n\
    \    Possible  | Low | High | Low  |  Med | High| No  | N/A | High|High |\n  \
    \  Perf      |  to |      |  to  |   to |     |     |     |     |     |\n    Impact\
    \    | Med |      | Med  | High |     |     |     |     |     |\n    ----------+-----+------+------+------+-----+-----+-----+-----+-----+\n\
    \    OS TCP/IP | Yes | Yes  | Yes  | No   | No  | No  |     | Yes | Yes |\n  \
    \  Modif     |     |      |      |      |     |     |     |     |     |\n    ----------+-----+------+------+------+-----+-----+-----+-----+-----+\n\
    \    Deployable| Yes | Yes  | Yes  | Yes  | No  | Yes | No  | Yes | Yes |\n  \
    \  Today     |     |      |      |      |     |     |     |     |     |\n    ----------+-----+------+------+------+-----+-----+-----+-----+-----+\n\
    \    Notes     | (1) |  (8) | (8)  |  (2) | (8) | (1) | (4) | (6) | (1) |\n  \
    \            | (7) |      |      |      |     | (3) | (7) | (8) | (6) |\n    \
    \          |     |      |      |      |     |     |     |     | (8) |\n    ----------+-----+------+------+------+-----+-----+-----+-----+-----+\n\
    \                  Table 1: Summary of Analyzed Solutions\n   o  \"Encrypted Traffic\"\
    \ refers to TLS.  The use of IPsec and its\n      complications traversing NATs\
    \ are discussed in Section 2.2 of\n      [RFC6889].  Similar to what is suggested\
    \ in Section 13.5 of\n      [RFC6269], HOST_ID specification document(s) should\
    \ analyze the\n      compatibility of each IPsec mode in detail.\n   o  \"Success\
    \ ratio\" indicates the ratio of successful communications\n      with remote\
    \ servers when the HOST_ID is injected using a proposed\n      solution.  More\
    \ details are provided below to explain how the\n      success ratio is computed\
    \ for each proposed solution.\n   o  \"Possible Perf Impact\" indicates the level\
    \ of expected performance\n      degradation.  The indicated degradation is an\
    \ estimate based on\n      the need for processing at the IP layer.\n   o  \"\
    OS TCP/IP Modif\" indicates whether a modification of the OS\n      TCP/IP stack\
    \ is required at the server side.\n   o  \"Deployable today\" indicates if the\
    \ solution can be generalized\n      without any constraint on current architectures\
    \ and practices.\n   Notes:\n   (1)  Requires mechanism to advertise that NAT\
    \ is participating in\n        this scheme (e.g., DNS PTR record).\n   (2)  This\
    \ solution is widely deployed (e.g., HTTP severs, load\n        balancers, etc.).\n\
    \   (3)  When the port set is not advertised, the solution is less\n        efficient\
    \ for third-party services.\n   (4)  Requires that the client and the server to\
    \ be HIP-compliant and\n        that HIP infrastructure be deployed.  If the client\
    \ and the\n        server are HIP-enabled, the address-sharing function does not\n\
    \        need to insert an identifier.  If the client is not HIP-enabled,\n  \
    \      designing the device that performs address sharing to act as a\n      \
    \  UDP/TCP-HIP relay is not viable.\n   (6)  The solution is inefficient in some\
    \ scenarios (see Section 5).\n   (7)  The solution is a theoretical construct\
    \ (i.e., the solution is\n        not documented).\n   (8)  The solution is a\
    \ documented proposal.\n   Provided success ratio figures for TCP and IP options\
    \ are based on\n   the results documented in [Options] and [REVEAL-TCP-EXP].\n\
    \   The provided success ratio for the IP-ID is theoretical; it assumes\n   the\
    \ address-sharing function follows the rules (see [RFC6864])to\n   rewrite the\
    \ IP Identification field.\n   Since PROXY and HIP are not widely deployed, the\
    \ success ratio for\n   establishing communication with remote servers using these\
    \ protocols\n   is low.\n   The success ratio for the ICMP-based solution is implementation\n\
    \   specific, but it is likely to be close to 100%.  The success ratio\n   depends\
    \ on how efficiently the solution is implemented on the server\n   side.  A remote\
    \ server that does not support the ICMP-based solution\n   will ignore received\
    \ companion ICMP messages.  An upgraded server\n   will need to delay the acceptance\
    \ of a session until it receives the\n   companion ICMP message.\n   The success\
    \ ratio for the IDENT solution is implementation specific\n   but it is likely\
    \ to be close to 100%.  The success ratio depends on\n   how efficient the solution\
    \ is implemented on the server side.  A\n   remote server that does not support\
    \ IDENT will accept a session\n   establishment request following its normal operation.\
    \  An upgraded\n   server will need to delay the acceptance of a session until\
    \ it\n   receives a response to the IDENT request it will send to the host.\n\
    \   The provided success ratio for the Port Set and HTTP header solutions\n  \
    \ is 100% because no additional Layer 3 or Layer 4 field is needed to\n   convey\
    \ HOST_ID for these solutions.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   If the server trusts the content of the HOST_ID\
    \ field, a third-party\n   user can be impacted by a misbehaving user revealing\
    \ a \"faked\"\n   HOST_ID (e.g., original IP address).  This same security concern\n\
    \   applies for the injection of an IP option, TCP option, and\n   application-related\
    \ content (e.g., the Forwarded HTTP header) by the\n   address-sharing device.\n\
    \   The HOST_ID may be used to leak information about the internal\n   structure\
    \ of a network behind an address-sharing function.  If this\n   behavior is undesired\
    \ for the network administrator, the address-\n   sharing function can be configured\
    \ to strip any existing HOST_ID in\n   received packets from internal hosts.\n\
    \   HOST_ID specification documents should elaborate further on threats\n   inherent\
    \ to each individual solution used to convey the HOST_ID\n   (e.g., use of the\
    \ IP-ID field to count hosts behind a NAT [Count]).\n   For more discussion of\
    \ privacy issues related to the HOST_ID, see\n   Section 3.\n"
- title: 7.  Acknowledgments
  contents:
  - "7.  Acknowledgments\n   Many thanks to D. Wing, C. Jacquenet, J. Halpern, B.\
    \ Haberman, and\n   P. Yee for their review, comments, and inputs.\n   Thanks\
    \ also to P McCann, T. Tsou, Z. Dong, B. Briscoe, T. Taylor, M.\n   Blanchet,\
    \ D. Wing, and A. Yourtchenko for the discussions in Prague.\n   Some of the issues\
    \ related to defining a new TCP option have been\n   raised by L. Eggert.\n  \
    \ The privacy text was provided by A. Cooper.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC0791]    Postel, J., \"Internet Protocol\"\
    , STD 5, RFC 791,\n                September 1981.\n   [RFC3022]    Srisuresh,\
    \ P. and K. Egevang, \"Traditional IP Network\n                Address Translator\
    \ (Traditional NAT)\", RFC 3022, January\n                2001.\n   [RFC6056]\
    \    Larsen, M. and F. Gont, \"Recommendations for Transport-\n              \
    \  Protocol Port Randomization\", BCP 156, RFC 6056, January\n               \
    \ 2011.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [Count]      Belloven, S., \"A Technique for\
    \ Counting NATted Hosts\",\n                <http://www.cs.columbia.edu/~smb/papers/fnat.pdf>.\n\
    \   [DETERMCGN]  Donley, C., Grundemann, C., Sarawat, V., Sundaresan, K.,\n  \
    \              and O. Vautrin, \"Deterministic Address Mapping to Reduce\n   \
    \             Logging in Carrier Grade NAT Deployments\", Work in\n          \
    \      Progress, January 2013.\n   [ExtendTCP]  Honda, M., Nishida, Y., Raiciu,\
    \ C., Greenhalgh, A.,\n                Handley, M. and H. Tokuda,, \"Is It Still\
    \ Possible to\n                Extend TCP?\", November 2011,\n               \
    \ <http://nrg.cs.ucl.ac.uk/mjh/tmp/mboxes.pdf>.\n   [FASTOPEN]   Cheng, Y., Chu,\
    \ J., Radhakrishnan, S., and A. Jain, \"TCP\n                Fast Open\", Work\
    \ in Progress, February 2013.\n   [HTTP-FRWD]  Petersson, A. and M. Nilsson, \"\
    Forwarded HTTP\n                Extension\", Work in Progress, October 2012.\n\
    \   [IAB-PRIVACY]\n                Cooper, A., Tschofenig, H., Aboba, B., Peterson,\
    \ J.,\n                Morris, J., Hansen, M., and R. Smith, \"Privacy\n     \
    \           Considerations for Internet Protocols\", Work in\n               \
    \ Progress, July 2012.\n   [IPFIX-NAT]  Sivakumar, S. and R. Penno, \"IPFIX Information\
    \ Elements\n                for Logging NAT Events\", Work in Progress, March\
    \ 2013.\n   [Not_An_Option]\n                R. Fonseca, G. Porter, R. Katz, S.\
    \ Shenker, and I.\n                Stoica,, \"IP Options Are Not An Option\",\
    \ 2005,\n                <http://www.eecs.berkeley.edu/Pubs/TechRpts/2005/\n \
    \               EECS-2005-24.html>.\n   [Options]    Medina, A, Allman, M. and\
    \ S. Floyd, \"Measuring\n                Interactions Between Transport Protocols\
    \ and\n                Middleboxes\", 2005,\n                <http://conferences.sigcomm.org/imc/2004/papers/\n\
    \                p336-medina.pdf>.\n   [Proxy]      Tarreau, W., \"The PROXY protocol\"\
    , November 2010,\n                <http://haproxy.1wt.eu/download/1.5/doc/\n \
    \               proxy-protocol.txt>.\n   [REVEAL-ICMP]\n                Yourtchenko,\
    \ A., \"Revealing Hosts Sharing An IP Address\n                Using ICMP Echo\
    \ Request\", Work in Progress, March 2012.\n   [REVEAL-IP]  Wu, Y., Ji, H., Chen,\
    \ Q., and T. ZOU), \"IPv4 Header\n                Option For User Identification\
    \ In CGN Scenario\", Work in\n                Progress, March 2011.\n   [REVEAL-PCP]\
    \ Boucadair, M., Reddy, T., Patil, P., and D. Wing, \"Using\n                PCP\
    \ to Reveal a Host behind NAT\", Work in Progress,\n                November 2012.\n\
    \   [REVEAL-TCP-EXP]\n                Abdo, E., Boucadair, M., and J. Queiroz,\
    \ \"HOST_ID TCP\n                Options: Implementation & Preliminary Test Results\"\
    ,\n                Work in Progress, July 2012.\n   [REVEAL-TCP] Yourtchenko,\
    \ A. and D. Wing, \"Revealing Hosts Sharing An\n                IP Address Using\
    \ TCP Option\", Work in Progress, December\n                2011.\n   [RFC1413]\
    \    St. Johns, M., \"Identification Protocol\", RFC 1413,\n                February\
    \ 1993.\n   [RFC2753]    Yavatkar, R., Pendarakis, D., and R. Guerin, \"A\n  \
    \              Framework for Policy-based Admission Control\", RFC 2753,\n   \
    \             January 2000.\n   [RFC5201]    Moskowitz, R., Nikander, P., Jokela,\
    \ P., and T.\n                Henderson, \"Host Identity Protocol\", RFC 5201,\
    \ April\n                2008.\n   [RFC6146]    Bagnulo, M., Matthews, P., and\
    \ I. van Beijnum, \"Stateful\n                NAT64: Network Address and Protocol\
    \ Translation from\n                IPv6 Clients to IPv4 Servers\", RFC 6146,\
    \ April 2011.\n   [RFC6269]    Ford, M., Boucadair, M., Durand, A., Levis, P.,\
    \ and P.\n                Roberts, \"Issues with IP Address Sharing\", RFC 6269,\n\
    \                June 2011.\n   [RFC6302]    Durand, A., Gashinsky, I., Lee, D.,\
    \ and S. Sheppard,\n                \"Logging Recommendations for Internet-Facing\
    \ Servers\",\n                BCP 162, RFC 6302, June 2011.\n   [RFC6346]    Bush,\
    \ R., \"The Address plus Port (A+P) Approach to the\n                IPv4 Address\
    \ Shortage\", RFC 6346, August 2011.\n   [RFC6462]    Cooper, A., \"Report from\
    \ the Internet Privacy Workshop\",\n                RFC 6462, January 2012.\n\
    \   [RFC6864]    Touch, J., \"Updated Specification of the IPv4 ID Field\",\n\
    \                RFC 6864, February 2013.\n   [RFC6889]    Penno, R., Saxena,\
    \ T., Boucadair, M., and S. Sivakumar,\n                \"Analysis of Stateful\
    \ 64 Translation\", RFC 6889, April\n                2013.\n   [SYSLOG-NAT] Chen,\
    \ Z., Zhou, C., Tsou, T., and T. Taylor, \"Syslog\n                Format for\
    \ NAT Logging\", Work in Progress, May 2013.\n   [TOR]        Dingledine, R.,\
    \ Mathewson, N., and P. Syverson, \"Tor:\n                The secondgeneration\
    \ onion router\", In Proceedings of\n                the 13th USENIX Security\
    \ Symposium, August 2004.\n   [Trusted_ISPs]\n                Wikimedia, \"Trusted\
    \ XFF List\", May 2013,\n                <http://meta.wikimedia.org/w/\n     \
    \           index.php?title=XFF_project&oldid=5507690>.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Mohamed Boucadair\n   France Telecom\n   Rennes  35000\n\
    \   France\n   EMail: mohamed.boucadair@orange.com\n   Joe Touch\n   USC/ISI\n\
    \   4676 Admiralty Way\n   Marina del Rey, CA  90292-6695\n   United States\n\
    \   Phone: +1 (310) 448-9151\n   EMail: touch@isi.edu\n   Pierre Levis\n   France\
    \ Telecom\n   Caen  14000\n   France\n   EMail: pierre.levis@orange.com\n   Reinaldo\
    \ Penno\n   Cisco\n   United States\n   EMail: repenno@cisco.com\n"
