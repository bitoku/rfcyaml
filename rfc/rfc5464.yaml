- title: __initial_text__
  contents:
  - '                      The IMAP METADATA Extension

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   The METADATA extension to the Internet Message Access Protocol\n\
    \   permits clients and servers to maintain \"annotations\" or \"metadata\"\n\
    \   on IMAP servers.  It is possible to have annotations on a per-mailbox\n  \
    \ basis or on the server as a whole.  For example, this would allow\n   comments\
    \ about the purpose of a particular mailbox to be \"attached\"\n   to that mailbox,\
    \ or a \"message of the day\" containing server status\n   information to be made\
    \ available to anyone logging in to the server.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction and Overview  . . . . . . . . . . . .\
    \ . . . . . .  3\n   2.  Conventions Used in This Document  . . . . . . . . .\
    \ . . . . .  3\n   3.  Data Model . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .  4\n     3.1.  Overview . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .  4\n     3.2.  Namespace of Entries . . . . . . . . . . . . . . . . .\
    \ . .  4\n       3.2.1.  Entry Names  . . . . . . . . . . . . . . . . . . . .\
    \ .  5\n     3.3.  Private versus Shared and Access Control . . . . . . . . .\
    \  6\n   4.  IMAP Protocol Changes  . . . . . . . . . . . . . . . . . . . .  7\n\
    \     4.1.  General Considerations . . . . . . . . . . . . . . . . . .  7\n  \
    \   4.2.  GETMETADATA Command  . . . . . . . . . . . . . . . . . . .  8\n    \
    \   4.2.1.  MAXSIZE GETMETADATA Command Option . . . . . . . . . .  9\n      \
    \ 4.2.2.  DEPTH GETMETADATA Command Option . . . . . . . . . . . 10\n     4.3.\
    \  SETMETADATA Command  . . . . . . . . . . . . . . . . . . . 10\n     4.4.  METADATA\
    \ Response  . . . . . . . . . . . . . . . . . . . . 12\n       4.4.1.  METADATA\
    \ Response with Values  . . . . . . . . . . . . 13\n       4.4.2.  Unsolicited\
    \ METADATA Response without Values . . . . . 13\n   5.  Formal Syntax  . . . .\
    \ . . . . . . . . . . . . . . . . . . . . 14\n   6.  IANA Considerations  . .\
    \ . . . . . . . . . . . . . . . . . . . 16\n     6.1.  Entry and Attribute Registration\
    \ Template  . . . . . . . . 16\n     6.2.  Server Entry Registrations . . . .\
    \ . . . . . . . . . . . . 16\n       6.2.1.  /shared/comment  . . . . . . . .\
    \ . . . . . . . . . . . 17\n       6.2.2.  /shared/admin  . . . . . . . . . .\
    \ . . . . . . . . . . 17\n     6.3.  Mailbox Entry Registrations  . . . . . .\
    \ . . . . . . . . . 17\n       6.3.1.  /shared/comment  . . . . . . . . . . .\
    \ . . . . . . . . 18\n       6.3.2.  /private/comment . . . . . . . . . . . .\
    \ . . . . . . . 18\n   7.  Security Considerations  . . . . . . . . . . . . .\
    \ . . . . . . 18\n   8.  Normative References . . . . . . . . . . . . . . . .\
    \ . . . . . 19\n   Appendix A.  Acknowledgments . . . . . . . . . . . . . . .\
    \ . . . . 19\n"
- title: 1.  Introduction and Overview
  contents:
  - "1.  Introduction and Overview\n   The goal of the METADATA extension is to provide\
    \ a means for clients\n   to set and retrieve \"annotations\" or \"metadata\"\
    \ on an IMAP server.\n   The annotations can be associated with specific mailboxes\
    \ or the\n   server as a whole.  The server can choose to support only server\n\
    \   annotations or both server and mailbox annotations.\n   A server that supports\
    \ both server and mailbox annotations indicates\n   the presence of this extension\
    \ by returning \"METADATA\" as one of the\n   supported capabilities in the CAPABILITY\
    \ command response.\n   A server that supports only server annotations indicates\
    \ the presence\n   of this extension by returning \"METADATA-SERVER\" as one of\
    \ the\n   supported capabilities in the CAPABILITY command response.\n   A server\
    \ that supports unsolicited annotation change responses MUST\n   support the \"\
    ENABLE\" [RFC5161] extension to allow clients to turn\n   that feature on.\n \
    \  The METADATA extension adds two new commands and one new untagged\n   response\
    \ to the IMAP base protocol.\n   This extension makes the following changes to\
    \ the IMAP protocol:\n   o  adds a new SETMETADATA command\n   o  adds a new GETMETADATA\
    \ command\n   o  adds a new METADATA untagged response\n   o  adds a new METADATA\
    \ response code\n   The rest of this document describes the data model and protocol\n\
    \   changes more rigorously.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   In examples, \"C:\" and \"S:\" indicate\
    \ lines sent by the client and\n   server, respectively.\n   The key words \"\
    MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\",\
    \ \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document\
    \ are to be interpreted as described in [RFC2119].\n   Whitespace and line breaks\
    \ have been added to the examples in this\n   document to promote readability.\n"
- title: 3.  Data Model
  contents:
  - '3.  Data Model

    '
- title: 3.1.  Overview
  contents:
  - "3.1.  Overview\n   Mailboxes or the server as a whole may have zero or more annotations\n\
    \   associated with them.  An annotation contains a uniquely named entry,\n  \
    \ which has a value.  Annotations can be added to mailboxes when a\n   mailbox\
    \ name is provided as the first argument to the SETMETADATA\n   command, or to\
    \ the server as a whole when the empty string is\n   provided as the first argument\
    \ to the command.\n   For example, a general comment being added to a mailbox\
    \ may have an\n   entry name of \"/comment\" and a value of \"Really useful mailbox\"\
    .\n   The protocol changes to IMAP described below allow a client to access\n\
    \   or change the values of any annotation entry, assuming it has\n   sufficient\
    \ access rights to do so.\n"
- title: 3.2.  Namespace of Entries
  contents:
  - "3.2.  Namespace of Entries\n   Each annotation is an entry that has a hierarchical\
    \ name, with each\n   component of the name separated by a slash (\"/\").  An\
    \ entry name MUST\n   NOT contain two consecutive \"/\" characters and MUST NOT\
    \ end with a\n   \"/\" character.\n   The value of an entry is NIL (has no value),\
    \ or a string or binary\n   data of zero or more octets.  A string MAY contain\
    \ multiple lines of\n   text.  Clients MUST use the CRLF (0x0D 0x0A) character\
    \ octet sequence\n   to represent line ends in a multi-line string value.\n  \
    \ Entry names MUST NOT contain asterisk (\"*\") or percent (\"%\")\n   characters\
    \ and MUST NOT contain non-ASCII characters or characters\n   with octet values\
    \ in the range 0x00 to 0x19.  Invalid entry names\n   result in a BAD response\
    \ in any IMAP command in which they are used.\n   Entry names are case-insensitive.\n\
    \   Use of control or punctuation characters in entry names is strongly\n   discouraged.\n\
    \   This specification defines an initial set of entry names available\n   for\
    \ use with mailbox and server annotations.  In addition, an\n   extension mechanism\
    \ is described to allow additional names to be\n   added for extensibility.\n\
    \   The first component in entry names defines the scope of the\n   annotation.\
    \  Currently, only the prefixes \"/private\" or \"/shared\" are\n   defined. \
    \ These prefixes are used to indicate whether an annotation\n   is stored on a\
    \ per-user basis (\"/private\") and not visible to other\n   users, or whether\
    \ an annotation is shared between authorized users\n   (\"/shared\") with a single\
    \ value that can be read and changed by\n   authorized users with appropriate\
    \ access.  See Section 3.3 for\n   details.\n   Entry names can have any number\
    \ of components starting at 2, unless\n   they fall under the vendor namespaces\
    \ (i.e., have a /shared/vendor/\n   <vendor-token> or /private/vendor/<vendor-token>\
    \ prefix as described\n   below), in which case they have at least 4 components.\n"
- title: 3.2.1.  Entry Names
  contents:
  - "3.2.1.  Entry Names\n   Entry names MUST be specified in a Standards Track or\
    \ IESG-approved\n   Experimental RFC, or fall under the vendor namespace.  See\n\
    \   Section 6.1 for the registration template.\n"
- title: 3.2.1.1.  Server Entries
  contents:
  - "3.2.1.1.  Server Entries\n   These entries are set or retrieved when the mailbox\
    \ name argument to\n   the new SETMETADATA or GETMETADATA command is the empty\
    \ string.\n   /shared/comment\n      Defines a comment or note that is associated\
    \ with the server and\n      that is shared with authorized users of the server.\n\
    \   /shared/admin\n      Indicates a method for contacting the server administrator.\
    \  The\n      value MUST be a URI (e.g., a mailto: or tel: URL).  This entry is\n\
    \      always read-only -- clients cannot change it.  It is visible to\n     \
    \ authorized users of the system.\n   /shared/vendor/<vendor-token>\n      Defines\
    \ the top level of shared entries associated with the\n      server, as created\
    \ by a particular product of some vendor.  This\n      entry can be used by vendors\
    \ to provide server- or client-specific\n      annotations.  The vendor-token\
    \ MUST be registered with IANA, using\n      the Application Configuration Access\
    \ Protocol (ACAP) [RFC2244]\n      vendor subtree registry.\n   /private/vendor/<vendor-token>\n\
    \      Defines the top level of private entries associated with the\n      server,\
    \ as created by a particular product of some vendor.  This\n      entry can be\
    \ used by vendors to provide server- or client-specific\n      annotations.  The\
    \ vendor-token MUST be registered with IANA, using\n      the ACAP [RFC2244] vendor\
    \ subtree registry.\n"
- title: 3.2.1.2.  Mailbox Entries
  contents:
  - "3.2.1.2.  Mailbox Entries\n   These entries are set or retrieved when the mailbox\
    \ name argument to\n   the new SETMETADATA or GETMETADATA command is not the empty\
    \ string.\n   /shared/comment\n      Defines a shared comment or note associated\
    \ with a mailbox.\n   /private/comment\n      Defines a private (per-user) comment\
    \ or note associated with a\n      mailbox.\n   /shared/vendor/<vendor-token>\n\
    \      Defines the top level of shared entries associated with a specific\n  \
    \    mailbox, as created by a particular product of some vendor.  This\n     \
    \ entry can be used by vendors to provide client-specific\n      annotations.\
    \  The vendor-token MUST be registered with IANA, using\n      the ACAP [RFC2244]\
    \ vendor subtree registry.\n   /private/vendor/<vendor-token>\n      Defines the\
    \ top level of private entries associated with a\n      specific mailbox, as created\
    \ by a particular product of some\n      vendor.  This entry can be used by vendors\
    \ to provide client-\n      specific annotations.  The vendor-token MUST be registered\
    \ with\n      IANA, using the ACAP [RFC2244] vendor subtree registry.\n"
- title: 3.3.  Private versus Shared and Access Control
  contents:
  - "3.3.  Private versus Shared and Access Control\n   In the absence of the ACL\
    \ (Access Control List) extension [RFC4314],\n   users can only set and retrieve\
    \ private or shared mailbox annotations\n   on a mailbox that exists and is returned\
    \ to them via a LIST or LSUB\n   command, and on which they have either read or\
    \ write access to the\n   actual message content of the mailbox (as determined\
    \ by the READ-ONLY\n   and READ-WRITE response codes as described in Section 5.2\
    \ of\n   [RFC4314]).\n   When the ACL extension [RFC4314] is present, users can\
    \ only set and\n   retrieve private or shared mailbox annotations on a mailbox\
    \ on which\n   they have the \"l\" right and any one of the \"r\", \"s\", \"w\"\
    , \"i\", or \"p\"\n   rights.\n   If a client attempts to set or retrieve annotations\
    \ on mailboxes that\n   do not satisfy the conditions above, the server MUST respond\
    \ with a\n   NO response.\n   Users can always retrieve private or shared server\
    \ annotations if\n   they exist.  Servers MAY restrict the creation of private\
    \ or shared\n   server annotations as appropriate.  When restricted, the server\
    \ MUST\n   return a NO response when the SETMETADATA command is used to try to\n\
    \   create a server annotation.\n   If the METADATA extension is present, support\
    \ for shared annotations\n   is REQUIRED, whilst support for private annotations\
    \ is OPTIONAL.\n   This recognizes the fact that support for private annotations\
    \ may\n   introduce significantly more complexity to a server in terms of\n  \
    \ tracking ownership of the annotations, how quota is determined for\n   users\
    \ based on their own annotations, etc.\n"
- title: 4.  IMAP Protocol Changes
  contents:
  - '4.  IMAP Protocol Changes

    '
- title: 4.1.  General Considerations
  contents:
  - "4.1.  General Considerations\n   The new SETMETADATA command and the METADATA\
    \ response each have a\n   mailbox name argument.  An empty string is used for\
    \ the mailbox name\n   to signify server annotations.  A non-empty string is used\
    \ to signify\n   mailbox annotations attached to the corresponding mailbox.\n\
    \   Servers SHOULD ensure that mailbox annotations are automatically\n   moved\
    \ when the mailbox they refer to is renamed, i.e., the\n   annotations follow\
    \ the mailbox.  This applies to a rename of the\n   INBOX, with the additional\
    \ behavior that the annotations are copied\n   from the original INBOX to the\
    \ renamed mailbox, i.e., mailbox\n   annotations are preserved on the INBOX when\
    \ it is renamed.\n   Servers SHOULD delete annotations for a mailbox when the\
    \ mailbox is\n   deleted, so that a mailbox created with the same name as a previously\n\
    \   existing mailbox does not inherit the old mailbox annotations.\n   Servers\
    \ SHOULD allow annotations on all 'types' of mailboxes,\n   including ones reporting\
    \ \\Noselect for their LIST response.  Servers\n   can implicitly remove \\Noselect\
    \ mailboxes when all child mailboxes\n   are removed, and, at that time any annotations\
    \ associated with the\n   \\Noselect mailbox SHOULD be removed.\n   The server\
    \ is allowed to impose limitations on the size of any one\n   annotation or the\
    \ total number of annotations for a single mailbox or\n   for the server as a\
    \ whole.  However, the server MUST accept an\n   annotation data size of at least\
    \ 1024 bytes, and an annotation count\n   per server or mailbox of at least 10.\n\
    \   Some annotations may be \"read-only\" -- i.e., they are set by the\n   server\
    \ and cannot be changed by the client.  Also, such annotations\n   may be \"computed\"\
    \ -- i.e., the value changes based on underlying\n   properties of the mailbox\
    \ or server.  For example, an annotation\n   reporting the total size of all messages\
    \ in the mailbox would change\n   as messages are added or removed.  Or, an annotation\
    \ containing an\n   IMAP URL for the mailbox would change if the mailbox was renamed.\n\
    \   Servers MAY support sending unsolicited responses for use when\n   annotations\
    \ are changed by some \"third-party\" (see Section 4.4).  In\n   order to do so,\
    \ servers MUST support the ENABLE command [RFC5161] and\n   MUST only send unsolicited\
    \ responses if the client used the ENABLE\n   command [RFC5161] extension with\
    \ the capability string \"METADATA\" or\n   \"METADATA-SERVER\" earlier in the\
    \ session, depending on which of those\n   capabilities is supported by the server.\n"
- title: 4.2.  GETMETADATA Command
  contents:
  - "4.2.  GETMETADATA Command\n   This extension adds the GETMETADATA command.  This\
    \ allows clients to\n   retrieve server or mailbox annotations.\n   This command\
    \ is only available in authenticated or selected state\n   [RFC3501].\n      \
    \ Arguments:  mailbox-name\n                   options\n                   entry-specifier\n\
    \       Responses:  required METADATA response\n       Result:     OK - command\
    \ completed\n                   NO - command failure: can't access annotations\
    \ on\n                        the server\n                   BAD - command unknown\
    \ or arguments invalid\n   When the mailbox name is the empty string, this command\
    \ retrieves\n   server annotations.  When the mailbox name is not empty, this\
    \ command\n   retrieves annotations on the specified mailbox.\n   Options MAY\
    \ be included with this command and are defined below.\n   Example:\n        \
    \   C: a GETMETADATA \"\" /shared/comment\n           S: * METADATA \"\" (/shared/comment\
    \ \"Shared comment\")\n           S: a OK GETMETADATA complete\n      In the above\
    \ example, the contents of the value of the \"/shared/\n      comment\" server\
    \ entry is requested by the client and returned by\n      the server.\n   Example:\n\
    \           C: a GETMETADATA \"INBOX\" /private/comment\n           S: * METADATA\
    \ \"INBOX\" (/private/comment \"My own comment\")\n           S: a OK GETMETADATA\
    \ complete\n      In the above example, the contents of the value of the \"/private/\n\
    \      comment\" mailbox entry for the mailbox \"INBOX\" is requested by the\n\
    \      client and returned by the server.\n   Entry specifiers can be lists of\
    \ atomic specifiers, so that multiple\n   annotations may be returned in a single\
    \ GETMETADATA command.\n   Example:\n           C: a GETMETADATA \"INBOX\" (/shared/comment\
    \ /private/comment)\n           S: * METADATA \"INBOX\" (/shared/comment \"Shared\
    \ comment\"\n                                  /private/comment \"My own comment\"\
    )\n           S: a OK GETMETADATA complete\n      In the above example, the values\
    \ of the two server entries\n      \"/shared/comment\" and \"/private/comment\"\
    \ on the mailbox \"INBOX\"\n      are requested by the client and returned by\
    \ the server.\n"
- title: 4.2.1.  MAXSIZE GETMETADATA Command Option
  contents:
  - "4.2.1.  MAXSIZE GETMETADATA Command Option\n   When the MAXSIZE option is specified\
    \ with the GETMETADATA command, it\n   restricts which entry values are returned\
    \ by the server.  Only entry\n   values that are less than or equal in octet size\
    \ to the specified\n   MAXSIZE limit are returned.  If there are any entries with\
    \ values\n   larger than the MAXSIZE limit, the server MUST include the METADATA\n\
    \   LONGENTRIES response code in the tagged OK response for the\n   GETMETADATA\
    \ command.  The METADATA LONGENTRIES response code returns\n   the size of the\
    \ biggest entry value requested by the client that\n   exceeded the MAXSIZE limit.\n\
    \   Example:\n           C: a GETMETADATA \"INBOX\" (MAXSIZE 1024)\n         \
    \                           (/shared/comment /private/comment)\n           S:\
    \ * METADATA \"INBOX\" (/private/comment \"My own comment\")\n           S: a\
    \ OK [METADATA LONGENTRIES 2199] GETMETADATA complete\n      In the above example,\
    \ the values of the two server entries\n      \"/shared/comment\" and \"/private/comment\"\
    \ on the mailbox \"INBOX\"\n      are requested by the client, which wants to\
    \ restrict the size of\n      returned values to 1024 octets.  In this case, the\
    \ \"/shared/\n      comment\" entry value is 2199 octets and is not returned.\n"
- title: 4.2.2.  DEPTH GETMETADATA Command Option
  contents:
  - "4.2.2.  DEPTH GETMETADATA Command Option\n   When the DEPTH option is specified\
    \ with the GETMETADATA command, it\n   extends the list of entry values returned\
    \ by the server.  For each\n   entry name specified in the GETMETADATA command,\
    \ the server returns\n   the value of the specified entry name (if it exists),\
    \ plus all\n   entries below the entry name up to the specified DEPTH.  Three\
    \ values\n   are allowed for DEPTH:\n   \"0\" - no entries below the specified\
    \ entry are returned\n   \"1\" - only entries immediately below the specified\
    \ entry are returned\n   \"infinity\" -  all entries below the specified entry\
    \ are returned\n   Thus, \"depth 1\" for an entry \"/a\" will match \"/a\" as\
    \ well as its\n   children entries (e.g., \"/a/b\"), but will not match grandchildren\n\
    \   entries (e.g., \"/a/b/c\").\n   If the DEPTH option is not specified, this\
    \ is the same as specifying\n   \"DEPTH 0\".\n   Example:\n           C: a GETMETADATA\
    \ \"INBOX\" (DEPTH 1)\n                                   (/private/filters/values)\n\
    \           S: * METADATA \"INBOX\" (/private/filters/values/small\n         \
    \       \"SMALLER 5000\" /private/filters/values/boss\n                \"FROM\
    \ \\\"boss@example.com\\\"\")\n           S: a OK GETMETADATA complete\n     \
    \ In the above example, 2 entries below the /private/filters/values\n      entry\
    \ exist on the mailbox \"INBOX\": \"/private/filters/values/\n      small\" and\
    \ \"/private/filters/values/boss\".\n"
- title: 4.3.  SETMETADATA Command
  contents:
  - "4.3.  SETMETADATA Command\n   This extension adds the SETMETADATA command.  This\
    \ allows clients to\n   set annotations.\n   This command is only available in\
    \ authenticated or selected state\n   [RFC3501].\n       Arguments:  mailbox-name\n\
    \                   entry\n                   value\n                   list of\
    \ entry, values\n       Responses:  no specific responses for this command\n \
    \      Result:     OK - command completed\n                   NO - command failure:\
    \ can't set annotations,\n                        or annotation too big or too\
    \ many\n                   BAD - command unknown or arguments invalid\n   This\
    \ command sets the specified list of entries by adding or\n   replacing the specified\
    \ values provided, on the specified existing\n   mailboxes or on the server (if\
    \ the mailbox argument is the empty\n   string).  Clients can use NIL for the\
    \ value of entries it wants to\n   remove.  The server SHOULD NOT return a METADATA\
    \ response containing\n   the updated annotation data.  Clients MUST NOT assume\
    \ that a METADATA\n   response will be sent, and MUST assume that if the command\
    \ succeeds,\n   then the annotation has been changed.\n   If the server is unable\
    \ to set an annotation because the size of its\n   value is too large, the server\
    \ MUST return a tagged NO response with\n   a \"[METADATA MAXSIZE NNN]\" response\
    \ code when NNN is the maximum\n   octet count that it is willing to accept.\n\
    \   If the server is unable to set a new annotation because the maximum\n   number\
    \ of allowed annotations has already been reached, the server\n   MUST return\
    \ a tagged NO response with a \"[METADATA TOOMANY]\" response\n   code.\n   If\
    \ the server is unable to set a new annotation because it does not\n   support\
    \ private annotations on one of the specified mailboxes, the\n   server MUST return\
    \ a tagged NO response with a \"[METADATA NOPRIVATE]\"\n   response code.\n  \
    \ When any one annotation fails to be set, resulting in a tagged NO\n   response\
    \ from the server, then the server MUST NOT change the values\n   for other annotations\
    \ specified in the SETMETADATA command.\n   Example:\n           C: a SETMETADATA\
    \ INBOX (/private/comment {33}\n           S: + ready for data\n           My\
    \ new comment across\n           two lines.\n           )\n           S: a OK\
    \ SETMETADATA complete\n      In the above example, the entry \"/private/comment\"\
    \ for the mailbox\n      \"INBOX\" is created (if not already present) and the\
    \ value set to a\n      multi-line string.\n   Example:\n           C: a SETMETADATA\
    \ INBOX (/private/comment NIL)\n           S: a OK SETMETADATA complete\n    \
    \  In the above example, the entry \"/private/comment\" is removed from\n    \
    \  the mailbox \"INBOX\".\n   Multiple entries can be set in a single SETMETADATA\
    \ command by\n   listing entry-value pairs in the list.\n   Example:\n       \
    \    C: a SETMETADATA INBOX (/private/comment \"My new comment\"\n           \
    \                    /shared/comment \"This one is for you!\")\n           S:\
    \ a OK SETMETADATA complete\n      In the above example, the entries \"/private/comment\"\
    \ and \"/shared/\n      comment\" for the mailbox \"INBOX\" are created (if not\
    \ already\n      present) and the values set as specified.\n   Example:\n    \
    \       C: a SETMETADATA INBOX (/private/comment \"My new comment\")\n       \
    \    S: a NO [METADATA TOOMANY] SETMETADATA failed\n      In the above example,\
    \ the server is unable to set the requested\n      (new) annotation as it has\
    \ reached the limit on the number of\n      annotations it can support on the\
    \ specified mailbox.\n"
- title: 4.4.  METADATA Response
  contents:
  - "4.4.  METADATA Response\n   The METADATA response displays results of a GETMETADATA\
    \ command, or\n   can be returned as an unsolicited response at any time by the\
    \ server\n   in response to a change in a server or mailbox annotation.\n   When\
    \ unsolicited responses are activated by the ENABLE [RFC5161]\n   command for\
    \ this extension, servers MUST send unsolicited METADATA\n   responses if server\
    \ or mailbox annotations are changed by a third-\n   party, allowing servers to\
    \ keep clients updated with changes.\n   Unsolicited METADATA responses MUST only\
    \ contain entry names, not the\n   values.  If the client wants to update any\
    \ cached values, it must\n   explicitly retrieve those using a GETMETADATA command.\n\
    \   The METADATA response can contain multiple entries in a single\n   response,\
    \ but the server is free to return multiple responses for\n   each entry or group\
    \ of entries, if it desires.\n   This response is only available in authenticated\
    \ or selected state\n   [RFC3501].\n"
- title: 4.4.1.  METADATA Response with Values
  contents:
  - "4.4.1.  METADATA Response with Values\n   The response consists of a list of\
    \ entry-value pairs.\n   Example:\n           C: a GETMETADATA \"\" /shared/comment\n\
    \           S: * METADATA \"\" (/shared/comment \"My comment\")\n           S:\
    \ a OK GETMETADATA complete\n      In the above example, a single entry with its\
    \ value is returned by\n      the server.\n   Example:\n           C: a GETMETADATA\
    \ \"INBOX\" /private/comment /shared/comment\n           S: * METADATA \"INBOX\"\
    \ (/private/comment \"My comment\"\n                                  /shared/comment\
    \ \"Its sunny outside!\")\n           S: a OK GETMETADATA complete\n      In the\
    \ above example, two entries and their values are returned by\n      the server.\n\
    \   Example:\n           C: a GETMETADATA \"INBOX\" /private/comment /shared/comment\n\
    \           S: * METADATA \"INBOX\" (/private/comment \"My comment\")\n      \
    \     S: * METADATA \"INBOX\" (/shared/comment \"Its sunny outside!\")\n     \
    \      S: a OK GETMETADATA complete\n      In the above example, the server returns\
    \ two separate responses\n      for each of the two entries requested.\n"
- title: 4.4.2.  Unsolicited METADATA Response without Values
  contents:
  - "4.4.2.  Unsolicited METADATA Response without Values\n   The response consists\
    \ of a list of entries, each of which have\n   changed on the server or mailbox.\n\
    \   Example:\n           C: a NOOP\n           S: * METADATA \"\" /shared/comment\n\
    \           S: a OK NOOP complete\n      In the above example, the server indicates\
    \ that the \"/shared/\n      comment\" server entry has been changed.\n   Example:\n\
    \           C: a NOOP\n           S: * METADATA \"INBOX\" /shared/comment /private/comment\n\
    \           S: a OK NOOP complete\n      In the above example, the server indicates\
    \ a change to two mailbox\n      entries.\n"
- title: 5.  Formal Syntax
  contents:
  - "5.  Formal Syntax\n   The following syntax specification uses the Augmented Backus-Naur\n\
    \   Form (ABNF) notation as specified in [RFC5234].\n   Non-terminals referenced\
    \ but not defined below are as defined by\n   [RFC3501], with the new definitions\
    \ in [RFC4466] superseding those in\n   [RFC3501].\n   Except as noted otherwise,\
    \ all alphabetic characters are case-\n   insensitive.  The use of upper or lower\
    \ case characters to define\n   token strings is for editorial clarity only. \
    \ Implementations MUST\n   accept these strings in a case-insensitive fashion.\n\
    \      capability        =/ \"METADATA\" / \"METADATA-SERVER\"\n             \
    \             ; defines the capabilities for this extension.\n      command-auth\
    \      =/ setmetadata / getmetadata\n                          ; adds to original\
    \ IMAP command\n      entries           = entry /\n                          \"\
    (\" entry *(SP entry) \")\"\n                          ; entry specifiers\n  \
    \    entry             = astring\n                          ; slash-separated\
    \ path to entry\n                          ; MUST NOT contain \"*\" or \"%\"\n\
    \      entry-value       = entry SP value\n      entry-values      = \"(\" entry-value\
    \ *(SP entry-value) \")\"\n      entry-list        = entry *(SP entry)\n     \
    \                     ; list of entries used in unsolicited\n                \
    \          ; METADATA response\n      getmetadata       = \"GETMETADATA\" [SP\
    \ getmetadata-options]\n                                        SP mailbox SP\
    \ entries\n                          ; empty string for mailbox implies\n    \
    \                      ; server annotation.\n      getmetadata-options = \"(\"\
    \ getmetadata-option\n                                *(SP getmetadata-option)\
    \ \")\"\n      getmetadata-option = tagged-ext-label [SP tagged-ext-val]\n   \
    \                       ; tagged-ext-label and tagged-ext-val\n              \
    \            ; are defined in [RFC4466].\n      maxsize-opt       = \"MAXSIZE\"\
    \ SP number\n                          ; Used as a getmetadata-option\n      metadata-resp\
    \     = \"METADATA\" SP mailbox SP\n                          (entry-values /\
    \ entry-list)\n                          ; empty string for mailbox implies\n\
    \                          ; server annotation.\n      response-payload  =/ metadata-resp\n\
    \                          ; adds to original IMAP data responses\n      resp-text-code\
    \    =/ \"METADATA\" SP \"LONGENTRIES\" SP number\n                          \
    \   ; new response codes for GETMETADATA\n      resp-text-code    =/ \"METADATA\"\
    \ SP (\"MAXSIZE\" SP number /\n                                          \"TOOMANY\"\
    \ / \"NOPRIVATE\")\n                          ; new response codes for SETMETADATA\n\
    \                          ; failures\n      scope-opt         =  \"DEPTH\" SP\
    \ (\"0\" / \"1\" / \"infinity\")\n                          ; Used as a getmetadata-option\n\
    \      setmetadata       = \"SETMETADATA\" SP mailbox\n                      \
    \                  SP entry-values\n                          ; empty string for\
    \ mailbox implies\n                          ; server annotation.\n      value\
    \             = nstring / literal8\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   All entries MUST have either \"/shared\" or \"/private\"\
    \ as a prefix.\n   Entry names MUST be specified in a Standards Track or IESG-approved\n\
    \   Experimental RFC, or fall under the vendor namespace (i.e., use\n   /shared/vendor/<vendor-token>\
    \ or /private/vendor/<vendor-token> as\n   the prefix).\n   Each entry registration\
    \ MUST include a content-type that is used to\n   indicate the nature of the annotation\
    \ value.  Where applicable, a\n   charset parameter MUST be included with the\
    \ content-type.\n"
- title: 6.1.  Entry and Attribute Registration Template
  contents:
  - "6.1.  Entry and Attribute Registration Template\n       To: iana@iana.org\n \
    \      Subject: IMAP METADATA Entry Registration\n       Type:         [Either\
    \ \"Mailbox\" or \"Server\"]\n       Name:         [the name of the entry]\n \
    \      Description:  [a description of what the entry is for]\n       Content-type:\
    \ [MIME Content-Type and charset for the entry value]\n       RFC Number:   [for\
    \ entries published as RFCs]\n       Contact:      [email and/or physical address\
    \ to contact for\n                      additional information]\n"
- title: 6.2.  Server Entry Registrations
  contents:
  - "6.2.  Server Entry Registrations\n   The following templates specify the IANA\
    \ registrations of annotation\n   entries specified in this document.\n"
- title: 6.2.1.  /shared/comment
  contents:
  - "6.2.1.  /shared/comment\n       To: iana@iana.org\n       Subject: IMAP METADATA\
    \ Entry Registration\n       Type:         Server\n       Name:         /shared/comment\n\
    \       Description:  Defines a comment or note that is associated\n         \
    \            with the server and that is shared with\n                     authorized\
    \ users of the server.\n       Content-type: text/plain; charset=utf-8\n     \
    \  RFC Number:   RFC 5464\n       Contact:      IMAP Extensions mailto:ietf-imapext@imc.org\n"
- title: 6.2.2.  /shared/admin
  contents:
  - "6.2.2.  /shared/admin\n     To: iana@iana.org\n     Subject: IMAP METADATA Entry\
    \ Registration\n     Type:         Server\n     Name:         /shared/admin\n\
    \     Description:  Indicates a method for contacting the server\n           \
    \        administrator.  The value MUST be a URI (e.g., a\n                  \
    \ mailto: or tel: URL).  This entry is always\n                   read-only --\
    \ clients cannot change it.  It is visible\n                   to authorized users\
    \ of the system.\n     Content-type: text/plain; charset=utf-8\n     RFC Number:\
    \   RFC 5464\n     Contact:      IMAP Extensions mailto:ietf-imapext@imc.org\n"
- title: 6.3.  Mailbox Entry Registrations
  contents:
  - "6.3.  Mailbox Entry Registrations\n   The following templates specify the IANA\
    \ registrations of annotation\n   entries specified in this document.\n"
- title: 6.3.1.  /shared/comment
  contents:
  - "6.3.1.  /shared/comment\n       To: iana@iana.org\n       Subject: IMAP METADATA\
    \ Entry Registration\n       Type:         Mailbox\n       Name:         /shared/comment\n\
    \       Description:  Defines a shared comment or note associated with a\n   \
    \                  mailbox.\n       Content-type: text/plain; charset=utf-8\n\
    \       RFC Number:   RFC 5464\n       Contact:      IMAP Extensions mailto:ietf-imapext@imc.org\n"
- title: 6.3.2.  /private/comment
  contents:
  - "6.3.2.  /private/comment\n       To: iana@iana.org\n       Subject: IMAP METADATA\
    \ Entry Registration\n       Type:         Mailbox\n       Name:         /private/comment\n\
    \       Description:  Defines a private comment or note associated with a\n  \
    \                   mailbox.\n       Content-type: text/plain; charset=utf-8\n\
    \       RFC Number:   RFC 5464\n       Contact:      IMAP Extensions mailto:ietf-imapext@imc.org\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   The security considerations in Section 11 of\
    \ [RFC3501] apply here\n   with respect to protecting annotations from snooping.\
    \  Servers MAY\n   choose to only support the METADATA and/or METADATA-SERVER\
    \ extensions\n   after a privacy layer has been negotiated by the client.\n  \
    \ Annotations can contain arbitrary data of varying size.  As such,\n   servers\
    \ MUST ensure that size limits are enforced to prevent a user\n   from using up\
    \ all available space on a server and preventing use by\n   others.  Clients MUST\
    \ treat annotation data values as an \"untrusted\"\n   source of data as it is\
    \ possible for it to contain malicious content.\n   Annotations whose values are\
    \ intended to remain private MUST be\n   stored only in entries that have the\
    \ \"/private\" prefix on the entry\n   name.\n   Excluding the above issues, the\
    \ METADATA extension does not raise any\n   security considerations that are not\
    \ present in the base IMAP\n   protocol, and these issues are discussed in [RFC3501].\n"
- title: 8.  Normative References
  contents:
  - "8.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs\
    \ to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [RFC2244]  Newman, C. and J. Myers, \"ACAP -- Application\n              Configuration\
    \ Access Protocol\", RFC 2244, November 1997.\n   [RFC3501]  Crispin, M., \"INTERNET\
    \ MESSAGE ACCESS PROTOCOL - VERSION\n              4rev1\", RFC 3501, March 2003.\n\
    \   [RFC4314]  Melnikov, A., \"IMAP4 Access Control List (ACL) Extension\",\n\
    \              RFC 4314, December 2005.\n   [RFC4466]  Melnikov, A. and C. Daboo,\
    \ \"Collected Extensions to IMAP4\n              ABNF\", RFC 4466, April 2006.\n\
    \   [RFC5161]  Gulbrandsen, A. and A. Melnikov, \"The IMAP ENABLE\n          \
    \    Extension\", RFC 5161, March 2008.\n   [RFC5234]  Crocker, D. and P. Overell,\
    \ \"Augmented BNF for Syntax\n              Specifications: ABNF\", STD 68, RFC\
    \ 5234, January 2008.\n"
- title: Appendix A.  Acknowledgments
  contents:
  - "Appendix A.  Acknowledgments\n   The ideas expressed in this document are based\
    \ on the message\n   annotation document that was co-authored by Randall Gellens.\
    \  The\n   author would like to thank the following individuals for contributing\n\
    \   their ideas and support for writing this specification: Dave\n   Cridland,\
    \ Arnt Gulbrandsen, Dan Karp, Alexey Melnikov, Ken Murchison,\n   Chris Newman,\
    \ and Michael Wener.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Cyrus Daboo\n   Apple Inc.\n   1 Infinite Loop\n   Cupertino,\
    \ CA  95014\n   USA\n   EMail: cyrus@daboo.name\n   URI:   http://www.apple.com/\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2009).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
