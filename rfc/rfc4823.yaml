- title: __initial_text__
  contents:
  - "                 FTP Transport for Secure Peer-to-Peer\n              Business\
    \ Data Interchange over the Internet\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2007).\n"
- title: Abstract
  contents:
  - "Abstract\n   This Applicability Statement (AS) describes how to exchange\n  \
    \ structured business data securely using the File Transfer Protocol\n   (FTP)\
    \ for XML, Binary, Electronic Data Interchange (EDI - ANSI X12 or\n   UN/EDIFACT),\
    \ or other data used for business-to-business data\n   interchange for which MIME\
    \ packaging can be accomplished using\n   standard MIME content types.  Authentication\
    \ and data confidentiality\n   are obtained by using Cryptographic Message Syntax\
    \ (S/MIME) security\n   body parts.  Authenticated acknowledgements employ multipart/signed\n\
    \   replies to the original message.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \   2. Overview ........................................................4\n  \
    \    2.1. Overall Operations .........................................4\n    \
    \  2.2. Purpose of a Security Guideline for MIME EDI ...............5\n      2.3.\
    \ Definitions ................................................5\n           2.3.1.\
    \ Terms ...............................................5\n           2.3.2. The\
    \ Secure Transmission Loop ........................6\n           2.3.3. Definition\
    \ of Receipts ..............................7\n      2.4. Operational Assumptions\
    \ and Options ........................8\n           2.4.1. EDI/EC Process Assumptions\
    \ ..........................8\n           2.4.2. Process Options .....................................8\n\
    \                  2.4.2.1. Security Options ...........................8\n  \
    \                2.4.2.2. Compression Options .......................10\n   3.\
    \ Referenced RFCs and Their Contribution .........................10\n      3.1.\
    \ RFC 959: File Transfer Protocol [3] .......................10\n      3.2. RFC\
    \ 2228: FTP Security Extensions [4] .....................10\n      3.3. RFC 1847:\
    \ MIME Security Multiparts [7] ....................10\n      3.4. RFC 3462: Multipart/Report\
    \ [12] ...........................11\n      3.5. RFC 1767: EDI Content [2] .................................11\n\
    \      3.6. RFCs 2045, 2046, and 2049: MIME [1] .......................11\n  \
    \    3.7. RFC 3798: Message Disposition Notification [6] ............11\n    \
    \  3.8. RFC 3852: CMS [9] and RFC 3851: S/MIME Version 3.1\n           Message\
    \ Specification [10] ................................11\n      3.9. RFC 3850:\
    \ S/MIME Version 3.1 Certificate Handling [11] ....11\n      3.10. RFC 3274: Compressed\
    \ Data Content Type for\n            Cryptographic Message Syntax (CMS) [17] ..................11\n\
    \      3.11. RFC 3023: XML Media Types [16] ...........................12\n  \
    \ 4. Structure of an AS3 Message ....................................12\n    \
    \  4.1. Introduction ..............................................12\n      4.2.\
    \ Structure of an Internet EDI MIME Message .................12\n   5. AS3-Specific\
    \ Headers ...........................................13\n      5.1. AS3-From and\
    \ AS3-To Headers ...............................13\n      5.2. AS3-Version Header\
    \ ........................................14\n   6. FTP Considerations .............................................15\n\
    \      6.1. FTP Security Requirements .................................15\n  \
    \    6.2. Large File Transfers ......................................15\n    \
    \  6.3. MIME Considerations for FTP ...............................15\n      \
    \     6.3.1. Required/Optional Headers ..........................15\n        \
    \   6.3.2. Content-Transfer-Encoding ..........................16\n          \
    \ 6.3.3. Epilogue Must Be Empty .............................16\n           6.3.4.\
    \ Message-Id and Original-Message-Id .................16\n   7. Structure and\
    \ Processing of an MDN Message .....................17\n      7.1. Introduction\
    \ ..............................................17\n      7.2. Message Disposition\
    \ Notifications (MDN) ...................19\n      7.3. Requesting a Signed Receipt\
    \ ...............................19\n           7.3.1. Signed Receipt Considerations\
    \ ......................22\n      7.4. MDN Format and Value ......................................23\n\
    \           7.4.1. AS3-MDN General Formats ............................23\n  \
    \         7.4.2. AS3-MDN Construction ...............................24\n    \
    \       7.4.3. AS3-MDN Fields .....................................25\n      \
    \     7.4.4. Additional AS3-MDN Programming Notes ...............26\n      7.5.\
    \ Disposition Mode, Type, and Modifier ......................29\n           7.5.1.\
    \ Disposition Mode Overview ..........................29\n           7.5.2. Successful\
    \ Processing Status Indication ............29\n           7.5.3. Unsuccessful\
    \ Processed Content .....................29\n           7.5.4. Unsuccessful Non-Content\
    \ Processing ................30\n           7.5.5. Processing Warnings ................................31\n\
    \   8. Public Key Certificate Handling ................................32\n  \
    \ 9. Security Considerations ........................................33\n   10.\
    \ References ....................................................34\n      10.1.\
    \ Normative References .....................................34\n      10.2. Informative\
    \ References ...................................36\n   Appendix A. Message Examples\
    \ ......................................37\n      A.1. Signed Message Requesting\
    \ a Signed Receipt ................37\n      A.2. MDN for Message A.1 Above .................................37\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Previous work on Internet EDI focused on specifying MIME\
    \ content\n   types for EDI data [2] and extending this work to support secure\n\
    \   EC/EDI transport over SMTP [5].  This document expands on RFC 1767 to\n  \
    \ specify a comprehensive set of data security features, specifically,\n   data\
    \ privacy, data integrity, authenticity, non-repudiation of\n   origin, and non-repudiation\
    \ of receipt over FTP.  This document also\n   recognizes contemporary RFCs and\
    \ is attempting to \"re-invent\" as\n   little as possible.  While this document\
    \ focuses on EDI data, any\n   other data type describable in a MIME format is\
    \ also supported.\n   Internet MIME-based EDI can be accomplished by using and\
    \ complying\n   with the following documents:\n         - RFC 959: File Transfer\
    \ Protocol\n         - RFC 2228: FTP Security Extensions\n         - RFC 1767:\
    \ EDI Content Type\n         - RFC 3023: XML Media Types\n         - RFC 1847:\
    \ Security Multiparts for MIME\n         - RFC 3462: Multipart/Report\n      \
    \   - RFCs 2045 to 2049: MIME\n         - RFC 3798: Message Disposition Notification\n\
    \         - RFCs 3850, 3851, and 3852: S/MIME v3.1 Specifications\n         -\
    \ RFC 3274: Compressed Data Content for Cryptographic Message\n           Syntax\n\
    \         - RFC 4217: Securing FTP with TLS\n         - \"Compressed Data for\
    \ EDIINT\" by T. Harding\n   Our intent here is to define clearly and precisely\
    \ how these are used\n   together, and what is required by user agents to be compliant\
    \ with\n   this document.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and  \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [19].\n"
- title: 2.  Overview
  contents:
  - '2.  Overview

    '
- title: 2.1.  Overall Operations
  contents:
  - "2.1.  Overall Operations\n   An FTP upload operation is used to send appropriately\
    \ packaged EDI,\n   XML, or other business data.  The receiving application will\
    \ poll the\n   FTP server for inbound messages, unpackage and handle the message\n\
    \   data, and generate a reply for the originator that contains a message\n  \
    \ disposition acknowledgement within a multipart/report that is signed\n   or\
    \ unsigned.  This request/reply transactional interchange provides\n   secure,\
    \ reliable, and authenticated transport for EDI or other\n   business data using\
    \ FTP.  The security protocols and structures used\n   also support auditable\
    \ records of these transmissions.\n"
- title: 2.2.  Purpose of a Security Guideline for MIME EDI
  contents:
  - "2.2.  Purpose of a Security Guideline for MIME EDI\n   The purpose of these specifications\
    \ is to ensure interoperability\n   between B2B Electronic Commerce user agents,\
    \ invoking some or all of\n   the commonly expected security features.  This document\
    \ is also NOT\n   limited to strict EDI use, but applies to any electronic commerce\n\
    \   application where business data needs to be exchanged over the\n   Internet\
    \ in a secure manner.\n"
- title: 2.3.  Definitions
  contents:
  - '2.3.  Definitions

    '
- title: 2.3.1.  Terms
  contents:
  - "2.3.1.  Terms\n   AS3                  Applicability Statement 3.  This is the\
    \ third\n                        applicability statement produced by the IETF\n\
    \                        EDIINT working group.\n   EDI                  Electronic\
    \ Data Interchange\n   EC                   Business-to-Business Electronic Commerce\n\
    \   B2B                  Business to Business\n   Receipt              The functional\
    \ message that is sent from a\n                        receiver to a sender to\
    \ acknowledge receipt of\n                        an EDI/EC interchange.\n   Signed\
    \ Receipt       A receipt containing a digital signature.\n   Message Disposition\
    \  The Internet messaging format used to convey a\n   Notification (MDN)   receipt.\
    \  This term is used interchangeably with\n                        receipt.  An\
    \ MDN is a receipt.\n   Non-repudiation of NRR is a \"legal event\" that occurs\
    \ when the\n   receipt (NRR)        original sender of an EDI/EC interchange has\n\
    \                        verified the signed receipt coming back from the\n  \
    \                      receiver.  NRR IS NOT a functional or a\n             \
    \           technical message.\n   S/MIME               A format and protocol\
    \ for adding Cryptographic\n                        signature and/or encryption\
    \ services to Internet\n                        MIME messages.\n             \
    \           NOTE: While the S/MIME specification describes\n                 \
    \             more than one format for a signed message,\n                   \
    \           all signed messages or receipts used with\n                      \
    \        AS3 MUST utilize the multipart/signed\n                             \
    \ format.\n   SHA-1                A secure, one-way hash algorithm used in\n\
    \                        conjunction with digital signature.  SHA-1 is\n     \
    \                   the recommend algorithm for AS3.\n   MD5                 \
    \ A secure, one-way hash algorithm used in\n                        conjunction\
    \ with digital signature.  This\n                        algorithm is acceptable\
    \ but not recommended due\n                        to its short key length and\
    \ known weaknesses.\n   MIC                  The message integrity check (MIC)\
    \ is a\n                        representation of the message digest, which\n\
    \                        results from the application of the selected\n      \
    \                  hash algorithm to the content to be signed.  Of\n         \
    \               particular interest is the digital signature,\n              \
    \          which includes an encrypted copy of the digest.\n                 \
    \       Additionally, an MDN containing a Received-\n                        content-MIC\
    \ header will also contain (as that\n                        header's value) a\
    \ base-64-encoded representation\n                        of the digest.\n   User\
    \ Agent (UA)      The application that handles and processes the\n           \
    \             AS3 request.\n   STL                  Secure Transmission Loop,\
    \ described in the next\n                        section.\n"
- title: 2.3.2.  The Secure Transmission Loop
  contents:
  - "2.3.2.  The Secure Transmission Loop\n   This document's focus is on the formats\
    \ and protocols for exchanging\n   EDI/EC content to which security services have\
    \ been applied using the\n   File Transmission Protocol (FTP) as the transport.\n\
    \   The \"Secure Transmission Loop\" (STL) comprises the following two\n   steps:\n\
    \   a) The originator sends a signed and encrypted document with a\n      request\
    \ for a signed receipt.\n   b) The recipient decrypts the document, verifies the\
    \ signature, and\n      returns a signed receipt to the sender.\n   In other words,\
    \ the following events occur during the execution of\n   the STL:\n   - The organization\
    \ sending EDI/EC data signs and encrypts the data\n     using S/MIME.  In addition,\
    \ the message will request a signed\n     receipt to be returned to the sender\
    \ of the message.\n   - The receiving organization decrypts the message and verifies\
    \ the\n     signature, resulting in verified integrity of the data and\n     authenticity\
    \ of the sender.\n   - The receiving organization then returns a signed receipt,\
    \ as\n     requested to the sending organization in the form of a message\n  \
    \   disposition notification.  This signed receipt will contain the\n     hash\
    \ of the signature from the received message, indicating to the\n     sender that\
    \ the received message was verified and/or decrypted\n     properly.\n   The above\
    \ describes functionality that, if implemented, will satisfy\n   all security\
    \ requirements and provide non-repudiation of receipt for\n   the exchange.  While\
    \ trading partners will usually want to utilize\n   the STL, this specification\
    \ does not require it.\n"
- title: 2.3.3.  Definition of Receipts
  contents:
  - "2.3.3.  Definition of Receipts\n   The term used for both the functional activity\
    \ and the message for\n   acknowledging delivery of an EDI/EC interchange is \"\
    receipt\" or\n   \"signed receipt\".  The term receipt is used if the acknowledgment\
    \ is\n   for an interchange resulting in a receipt that is NOT signed.  The\n\
    \   term signed receipt is used if the acknowledgment is for an\n   interchange\
    \ resulting in a receipt that IS signed.  A term often used\n   in combination\
    \ with receipts is non-repudiation of receipt.  NRR\n   refers to a legal event\
    \ that occurs only when the original sender of\n   an interchange has verified\
    \ the signed receipt coming back from the\n   recipient of the message.  Note\
    \ that NRR is not possible without\n   signatures.\n   For additional information\
    \ on formatting and processing receipts in\n   AS3, refer to Section 7.\n"
- title: 2.4.  Operational Assumptions and Options
  contents:
  - '2.4.  Operational Assumptions and Options

    '
- title: 2.4.1.  EDI/EC Process Assumptions
  contents:
  - "2.4.1.  EDI/EC Process Assumptions\n   - Encrypted object is an EDI/EC Interchange.\n\
    \     This specification assumes that a typical EDI/EC interchange is the\n  \
    \   lowest level object that will be subject to the application of\n     security\
    \ services.\n     Specifically, for EDI ANSI X12, the entire document (including\
    \ the\n     ISA and IEA segments) is the atom to which security is applied.\n\
    \     For EDIFACT, the corresponding definition includes the segments\n     UNA/UNB\
    \ and UNZ.  In other words, EDI/EC interchanges including\n     envelope segments\
    \ remain intact and unreadable during secure\n     transport.\n   - EDI envelope\
    \ headers are encrypted.\n     Congruent with the above statement, EDI envelope\
    \ headers are NOT\n     visible in the MIME package.  In order to optimize routing\
    \ from\n     existing commercial EDI networks (called Value Added Networks or\n\
    \     VANs) to the Internet, work may need to be done in the future to\n     define\
    \ ways to extract some elements of the envelope to make them\n     visible; however,\
    \ that is beyond the scope of this specification.\n   - X12.58 and UN/EDIFACT\
    \ security considerations\n     The most common EDI standards bodies, ANSI X12\
    \ and EDIFACT, have\n     defined internal provisions for security.  X12.58 is\
    \ the security\n     mechanism for ANSI X12, and AUTACK provides security for\
    \ EDIFACT.\n     This specification DOES NOT dictate use or non-use of these\n\
    \     security standards.  They are both fully compatible, though\n     possibly\
    \ redundant, with this specification.\n"
- title: 2.4.2.  Process Options
  contents:
  - '2.4.2.  Process Options

    '
- title: 2.4.2.1.  Security Options
  contents:
  - "2.4.2.1.  Security Options\n   - Encrypted or un-encrypted data\n     This specification\
    \ allows for EDI/EC message exchange where the\n     EDI/EC data can be either\
    \ un-protected or protected by means of\n     encryption.\n   - Signed or unsigned\
    \ data\n     This specification allows for EDI/EC message exchange with or\n \
    \    without digital signature of the original EDI transmission.\n   - Use of\
    \ receipt or not\n     This specification allows for EDI/EC message transmission\
    \ with or\n     without a request for receipt notification.  If a signed receipt\n\
    \     notification is requested, however, a MIC value is REQUIRED as part\n  \
    \   of the returned receipt, unless an error condition occurs that\n     results\
    \ in the inability to compute a valid digest.  (Such a case\n     would result,\
    \ for instance, if an encrypted message could not be\n     decrypted.) Under such\
    \ circumstances, an unsigned receipt (MDN)\n     SHOULD be returned with the correct\
    \ \"disposition modifier\" error\n     value.\n   - Security formatting\n    \
    \ This specification relies on the guidelines set forth in RFCs 3852\n     [9]\
    \ and 3851 [10].  The first of these RFCs describes the\n     Cryptographic Message\
    \ Syntax (CMS), and the second contains the\n     S/MIME Version 3.1 Message Specification\
    \ describing a MIME\n     container for CMS objects.  Whenever the term S/MIME\
    \ is used in\n     this document, it refers to Version 3.1 as described therein.\n\
    \   - Hash function, message digest choices\n     When a signature is used, it\
    \ is RECOMMENDED that the SHA-1 hash\n     algorithm be used for all outgoing\
    \ messages; however, both MD5 and\n     SHA-1 MUST be supported for incoming messages.\n\
    \   - Permutation summary\n     In summary, the following twelve security permutations\
    \ are possible\n     in any given trading relationship:\n     1.  Sender sends\
    \ un-encrypted data, does NOT request a receipt.\n     2.  Sender sends un-encrypted\
    \ data, requests an unsigned receipt.\n         The receiver sends back the unsigned\
    \ receipt.\n     3.  Sender sends un-encrypted data, requests a signed receipt.\
    \  The\n         receiver sends back the signed receipt.\n     4.  Sender sends\
    \ encrypted data, does NOT request a receipt.\n     5.  Sender sends encrypted\
    \ data, requests an unsigned receipt.  The\n         receiver sends back the unsigned\
    \ receipt.\n     6.  Sender sends encrypted data, requests a signed receipt. \
    \ The\n         receiver sends back the signed receipt.\n     7.  Sender sends\
    \ signed data, does NOT request a receipt.\n     8.  Sender sends signed data,\
    \ requests an unsigned receipt.\n         Receiver sends back the unsigned receipt.\n\
    \     9.  Sender sends signed data, requests a signed receipt.  Receiver\n   \
    \      sends back the signed receipt.\n     10. Sender sends encrypted and signed\
    \ data, does NOT request a\n         receipt.\n     11. Sender sends encrypted\
    \ and signed data, requests an unsigned\n         receipt.  Receiver sends back\
    \ the unsigned receipt.\n     12. Sender sends encrypted and signed data, requests\
    \ a signed\n         receipt.  Receiver sends back the signed receipt.  This case\n\
    \         represents the Secure Transmission Loop described above.\n"
- title: 2.4.2.2.  Compression Options
  contents:
  - "2.4.2.2.  Compression Options\n   The AS3 specification supports compression\
    \ of transmitted data\n   directly through the application of RFC 3274.  Implementation\
    \ details\n   may be found in that RFC and in Harding's document, \"Compressed\
    \ Data\n   for EDIINT\".\n"
- title: 3.  Referenced RFCs and Their Contribution
  contents:
  - '3.  Referenced RFCs and Their Contribution

    '
- title: '3.1.  RFC 959: File Transfer Protocol [3]'
  contents:
  - "3.1.  RFC 959: File Transfer Protocol [3]\n   RFC 959 specifies how data is transferred\
    \ using the File Transfer\n   Protocol (FTP)\n"
- title: '3.2.  RFC 2228: FTP Security Extensions [4]'
  contents:
  - "3.2.  RFC 2228: FTP Security Extensions [4]\n   This RFC describes a framework\
    \ for providing security services to\n   FTP.\n"
- title: '3.3.  RFC 1847: MIME Security Multiparts [7]'
  contents:
  - "3.3.  RFC 1847: MIME Security Multiparts [7]\n   This document defines security\
    \ multiparts for MIME:\n   multipart/encrypted and multipart/signed.\n"
- title: '3.4.  RFC 3462: Multipart/Report [12]'
  contents:
  - "3.4.  RFC 3462: Multipart/Report [12]\n   RFC 3462 defines the use of the multipart/report\
    \ content type, upon\n   which RFC 3798 builds to define the Message Disposition\
    \ Notification.\n"
- title: '3.5.  RFC 1767: EDI Content [2]'
  contents:
  - "3.5.  RFC 1767: EDI Content [2]\n   This RFC defines the use of content type\
    \ \"application\" for ANSI X12\n   (application/EDI-X12), EDIFACT (application/EDIFACT),\
    \ and mutually\n   defined EDI (application/EDI-Consent).\n"
- title: '3.6.  RFCs 2045, 2046, and 2049: MIME [1]'
  contents:
  - "3.6.  RFCs 2045, 2046, and 2049: MIME [1]\n   These are the basic MIME standards,\
    \ upon which all MIME-related RFCs\n   build, including this one.  Key contributions\
    \ include definitions of\n   \"content type\", \"sub-type\", and \"multipart\"\
    , as well as encoding\n   guidelines, which establish 7-bit US-ASCII as the canonical\
    \ character\n   set to be used in Internet messaging.\n"
- title: '3.7.  RFC 3798: Message Disposition Notification [6]'
  contents:
  - "3.7.  RFC 3798: Message Disposition Notification [6]\n   This Internet RFC defines\
    \ how a Message Disposition Notification\n   (MDN)is requested, as well as the\
    \ format and syntax of the MDN.  The\n   MDN is the vehicle used by this specification\
    \ to provide both signed\n   and unsigned receipts.\n"
- title: '3.8.  RFC 3852: CMS [9] and RFC 3851: S/MIME Version 3.1 Message'
  contents:
  - "3.8.  RFC 3852: CMS [9] and RFC 3851: S/MIME Version 3.1 Message\n      Specification\
    \ [10]\n   This specification describes how MIME shall carry Cryptographic\n \
    \  Message Syntax (CMS) Objects.\n"
- title: '3.9.  RFC 3850: S/MIME Version 3.1 Certificate Handling [11]'
  contents:
  - "3.9.  RFC 3850: S/MIME Version 3.1 Certificate Handling [11]\n   RFC 3850 describes\
    \ certificate handling in the context of CMS and\n   S/MIME.\n"
- title: '3.10.  RFC 3274: Compressed Data Content Type for Cryptographic Message'
  contents:
  - "3.10.  RFC 3274: Compressed Data Content Type for Cryptographic Message\n   \
    \    Syntax (CMS) [17]\n   This specification provides a mechanism to wrap compressed\
    \ data\n   within a CMS object.\n"
- title: '3.11.  RFC 3023: XML Media Types [16]'
  contents:
  - "3.11.  RFC 3023: XML Media Types [16]\n   This RFC defines the use of content\
    \ type \"application\" for XML.  Note\n   that while conforming implementations\
    \ SHOULD support the expanded\n   syntax that RFC 3023 introduces for the \"+xml\"\
    \ suffix, no support for\n   external parsed entity types is anticipated (as it\
    \ adds significant\n   complexity to signature processing).\n"
- title: 4.  Structure of an AS3 Message
  contents:
  - '4.  Structure of an AS3 Message

    '
- title: 4.1.  Introduction
  contents:
  - "4.1.  Introduction\n   The basic structure of AS3 messages comprises MIME encapsulated\
    \ data\n   with both customary MIME headers and a few additional AS3-specific\n\
    \   outer headers.  The structures below are described hierarchically in\n   terms\
    \ of which RFCs have been applied to form the specific structure.\n   The reader\
    \ is referred directly to the referenced RFCs for\n   implementation details.\n\
    \   Any additional restrictions imposed by this AS are specifically\n   discussed\
    \ in the sections that follow.\n"
- title: 4.2.  Structure of an Internet EDI MIME Message
  contents:
  - "4.2.  Structure of an Internet EDI MIME Message\n   No encryption, no signature\n\
    \     -RFC822/2045\n       -RFC1767/RFC2376 (application/EDIxxxx or /xml)\n  \
    \ No encryption, signature\n     -RFC822/2045\n       -RFC1847 (multipart/signed)\n\
    \         -RFC1767/RFC2376 (application/EDIxxxx or /xml)\n         -RFC3851 (application/pkcs7-signature)\n\
    \   Encryption, no signature\n     -RFC822/2045\n       -RFC3851 (application/pkcs7-mime)\n\
    \         -RFC1767/RFC2376  (application/EDIxxxx or /xml)(encrypted)\n   Encryption,\
    \ signature\n     -RFC822/2045\n       -RFC3851 (application/pkcs7-mime)\n   \
    \      -RFC1847 (multipart/signed)(encrypted)\n           -RFC1767/RFC2376  (application/EDIxxxx\
    \ or /xml)(encrypted)\n           -RFC3851 (application/pkcs7-signature)(encrypted)\n\
    \   MDN, no signature\n     -RFC822/2045\n       -RFC3798 (message/disposition-notification)\n\
    \   MDN, signature\n     -RFC822/2045\n       -RFC1847 (multipart/signed)\n  \
    \       -RFC3798 (message/disposition-notification)\n         -RFC3851 (application/pkcs7-signature)\n\
    \   While all MIME content types SHOULD be supported,\n   the following MIME content\
    \ types MUST be supported:\n     Content-Type: multipart/signed\n     Content-Type:\
    \ multipart/report\n     Content-type: message/disposition-notification\n    \
    \ Content-Type: application/PKCS7-signature\n     Content-Type: application/PKCS7-mime\n\
    \     Content-Type: application/EDI-X12\n     Content-Type: application/EDIFACT\n\
    \     Content-Type: application/edi-consent\n     Content-Type: application/XML\n"
- title: 5.  AS3-Specific Headers
  contents:
  - '5.  AS3-Specific Headers

    '
- title: 5.1.  AS3-From and AS3-To Headers
  contents:
  - "5.1.  AS3-From and AS3-To Headers\n   The AS3-From and AS3-To headers have been\
    \ provided to assist the\n   sender and the recipient of an EC document to identify\
    \ each other:\n      AS3-From: < AS3-name >\n      AS3-To:   < AS3-name >\n  \
    \ These headers contain textual values, described by the ABNF [22]\n   below,\
    \ identifying the sender/receiver of a data exchange.  A value\n   may be company\
    \ specific (e.g., a Data Universal Numbering System\n   (DUNS) number), or it\
    \ may be simply some string mutually acceptable\n   to both trading partners used\
    \ to identify each to the other.\n    AS3-text = \"!\" /           ; printable\
    \ ASCII characters\n               %d35-91 /       ; except double-quote (%d34)\n\
    \               %d93-126        ; or backslash (%d92)\n    AS3-qtext = AS3-text\
    \ / SP  ; allow space only in quoted text\n    AS3-quoted-pair = \"\\\" DQUOTE\
    \ /  ; \\\" or\n                      \"\\\" \"\\\"       ; \\\\\n    AS3-quoted-name\
    \ = DQUOTE 1*128( AS3-qtext /\n                      AS3-quoted-pair) DQUOTE\n\
    \    AS3-atomic-name = 1*128AS3-text\n    AS3-name = AS3-atomic-name / AS3-quoted-name\n\
    \    Note: SP and DQUOTE are defined in [ABNF]RFC 4234.\n   The AS3-From header\
    \ value and the AS3-To header value MUST each be an\n   AS3-name comprising 1\
    \ to 128 printable ASCII characters.  The header\n   MUST NOT be folded, and the\
    \ value for each of these headers is case-\n   sensitive.\n   The AS3-quoted-name\
    \ SHOULD be used only if the AS3-name does not\n   conform to AS3-atomic-name.\n\
    \   The AS3-To and AS3-From header fields MUST be present in all AS3\n   messages\
    \ and AS3 MDNs.\n   Implementations that map entities such as EDI identifiers/qualifiers\n\
    \   to AS3 identifiers may choose to constrain the set of AS3-To/AS3-From\n  \
    \ text values to a subset of the full set defined above, but they may\n   not\
    \ extend that set.\n   If the AS3-From or the AS3-To or the association of the\
    \ two header\n   values is determined to be invalid or unknown to the receiving\n\
    \   system, the receiving system MAY respond with an unsigned MDN\n   containing\
    \ an explanation of the error if the sending system\n   requested an MDN, but\
    \ it is not required to return an MDN under those\n   circumstances.\n"
- title: 5.2.  AS3-Version Header
  contents:
  - "5.2.  AS3-Version Header\n   The AS3-Version header is a header that is required\
    \ only if the value\n   of the header is not \"1.0\".  Its purpose is to allow\
    \ systems to\n   determine which version of this specification (should the\n \
    \  specification evolve over time) the sender of a document has used to\n   package\
    \ the document.  A user agent MUST NOT reject a message if the\n   version header\
    \ is missing.\n   AS3-Version: 1*DIGIT . 1*DIGIT\n   A version header value of\
    \ \"1.1\" indicates an implementation can\n   support EDIINT data compression\
    \ [20].  A user agent MUST NOT send\n   compressed messages to trading partners\
    \ who do not use a version\n   header of \"1.1\" or greater.\n"
- title: 6.  FTP Considerations
  contents:
  - '6.  FTP Considerations

    '
- title: 6.1.  FTP Security Requirements
  contents:
  - "6.1.  FTP Security Requirements\n   FTP has long been viewed as an insecure protocol\
    \ primarily because of\n   its use of cleartext authentication [3].  This is addressed\
    \ by RFC\n   2228 [4], and the use of one of the security mechanisms described\n\
    \   therein is strongly encouraged.  Specifically, conforming\n   implementations\
    \ of AS3 SHALL employ FTP client/servers that support\n   the AUTH command described\
    \ within [4].  While any authentication\n   mechanism based upon [4] MAY be utilized,\
    \ AUTH TLS (as described in\n   [18]) MUST be supported. (Note that [18] relies\
    \ on TLS Version 1.0\n   [13], not Version 1.1 [23].)\n"
- title: 6.2.  Large File Transfers
  contents:
  - "6.2.  Large File Transfers\n   Large files are handled correctly by the TCP layer.\
    \  However, the\n   mechanism for compressing data, referenced in Section 2.4.2.2,\n\
    \   efficiently reduces transmission requirements for many data types\n   (including\
    \ both XML and traditional EDI data).  Additionally, some\n   FTP implementations\
    \ support compression as well.\n"
- title: 6.3.  MIME Considerations for FTP
  contents:
  - '6.3.  MIME Considerations for FTP

    '
- title: 6.3.1.  Required/Optional Headers
  contents:
  - "6.3.1.  Required/Optional Headers\n   An AS3 message MUST contain the following\
    \ outer headers:\n        AS3-To\n        AS3-From\n        Date\n        Message-ID\n\
    \        Content-Type\n   An AS3 message OPTIONALLY MAY contain the following\
    \ outer headers:\n        Subject\n        AS3-Version (assumed to be 1.0 if not\
    \ present)\n        Content-Length\n   An AS3 message requesting a receipt MUST\
    \ contain a Disposition-\n   Notification-To header and MAY contain a Disposition-Notification-\n\
    \   Options header (if the receipt is to be signed).\n   Additional headers MAY\
    \ be present but are ignored.\n"
- title: 6.3.2.  Content-Transfer-Encoding
  contents:
  - "6.3.2.  Content-Transfer-Encoding\n   FTP defines several data structures and\
    \ character encodings via the\n   STRU[cture] and TYPE commands.  AS3 requires\
    \ the file-structure\n   (default) and the image type.  The Content-Transfer-Encoding\
    \ header\n   SHOULD NOT be used; if the header is present, it SHOULD have a value\n\
    \   of binary or 8-bit.  The absence of this header or the use of\n   alternate\
    \ values such as \"base64\" or \"quoted-printable\" MUST NOT\n   result in transaction\
    \ failure.  Content transfer encoding of MIME\n   parts within the AS3 message\
    \ are similarly constrained.\n"
- title: 6.3.3.  Epilogue Must Be Empty
  contents:
  - "6.3.3.  Epilogue Must Be Empty\n   A MIME message containing an epilogue [1]\
    \ SHALL NOT be used.\n"
- title: 6.3.4.  Message-Id and Original-Message-Id
  contents:
  - "6.3.4.  Message-Id and Original-Message-Id\n   Message-Id and Original-Message-Id\
    \ are formatted as defined in\n   Section 3.6.4 of RFC 2822 [15]: \"<\" id-left\
    \ \"@\" id-right \">\".\n   Message-Id length is a maximum of 998 characters.\
    \  Message-Id SHOULD\n   be globally unique; id-right should be something unique\
    \ to the\n   sending host environment (e.g., a host name).  When sending a\n \
    \  message, always include the angle brackets.  Angle brackets are not\n   part\
    \ of the Message-Id value.\n   NOTE: When creating the Original-Message-Id header\
    \ in an MDN, always\n         use the exact syntax contained in the original message:\
    \ do not\n         strip or add \"angle brackets\".\n"
- title: 7.  Structure and Processing of an MDN Message
  contents:
  - '7.  Structure and Processing of an MDN Message

    '
- title: 7.1.  Introduction
  contents:
  - "7.1.  Introduction\n   In order to support non-repudiation of receipt, a signed\
    \ receipt,\n   based on digitally signing a message disposition notification,\
    \ is to\n   be implemented by a receiving trading partner's UA.  The message\n\
    \   disposition notification specified by RFC 3798 is digitally signed by\n  \
    \ a receiving trading partner as part of a multipart/signed MIME\n   message.\n\
    \   The following support for signed receipts is REQUIRED:\n   1) The ability\
    \ to create a multipart/report; where the report-type =\n      disposition-notification.\n\
    \   2) The ability to calculate a message integrity check (MIC) on the\n     \
    \ received message.  The calculated MIC value will be returned to\n      the sender\
    \ of the message inside the signed receipt.\n   3) The ability to create a multipart/signed\
    \ content with the message\n      disposition notification as the first body part,\
    \ and the signature\n      as the second body part.\n   4) The ability to return\
    \ the signed receipt to the sending trading\n      partner.\n   The signed receipt\
    \ is used to notify a sending trading partner that\n   requested the signed receipt\
    \ that:\n   1) The receiving trading partner acknowledges receipt of the sent\
    \ EC\n      Interchange.\n   2) If the sent message was signed, then the receiving\
    \ trading partner\n      has authenticated the sender of the EC Interchange.\n\
    \   3) If the sent message was signed, then the receiving trading partner\n  \
    \    has verified the integrity of the sent EC Interchange.\n   Regardless of\
    \ whether the EDI/EC Interchange was sent in S/MIME\n   format or not, the receiving\
    \ trading partner's UA MUST provide the\n   following basic processing:\n   1)\
    \ If the sent EDI/EC Interchange is encrypted, then the encrypted\n      symmetric\
    \ key, and initialization vector (if applicable) is\n      decrypted using the\
    \ receiver's private key.\n   2) The decrypted symmetric encryption key is then\
    \ used to decrypt the\n      EDI/EC Interchange.\n   3) The receiving trading\
    \ partner authenticates signatures in a\n      message using the sender's public\
    \ key.\n      The authentication algorithm performs the following:\n      a) The\
    \ message integrity check (MIC or Message Digest) is\n         decrypted using\
    \ the sender's public key.\n      b) A MIC on the signed contents (the MIME header\
    \ and encoded EDI\n         object, as per RFC 1767) in the message received is\
    \ calculated\n         using the same one-way hash function that the sending trading\n\
    \         partner used.\n      c) The MIC extracted from the message that was\
    \ sent and the MIC\n         calculated using the same one-way hash function that\
    \ the\n         sending trading partner used are compared for equality.\n   4)\
    \ The receiving trading partner formats the MDN and sets the\n      calculated\
    \ MIC into the \"Received-content-MIC\" extension field.\n   5) The receiving\
    \ trading partner creates a multipart/signed MIME\n      message according to\
    \ RFC 1847.\n   6) The MDN is the first part of the multipart/signed message,\
    \ and the\n      digital signature is created over this MDN, including its MIME\n\
    \      headers.\n   7) The second part of the multipart/signed message contains\
    \ the\n      digital signature.  The \"protocol\" option specified in the second\n\
    \      part of the multipart/signed is as follows: S/MIME: protocol =\n      \"\
    application/pkcs7-signature\".\n   8) The signature information is formatted according\
    \ to S/MIME\n      specifications.  The EC Interchange and the RFC 1767 MIME EDI\n\
    \      content header can actually be part of a multipart MIME content\n     \
    \ type.  When the EDI Interchange is part of a multipart MIME\n      content type,\
    \ the MIC MUST be calculated across the entire\n      multipart content, including\
    \ the MIME headers.\n   The signed MDN, when received by the sender of the EDI\
    \ Interchange\n   can be used by the sender:\n   1) As an acknowledgment that\
    \ the EDI Interchange was sent, and then\n      was delivered and acknowledged\
    \ by the receiving trading partner.\n      The receiver does this by returning\
    \ the original-message-id of the\n      sent message in the MDN portion of the\
    \ signed receipt.\n   2) As an acknowledgment that the integrity of the EDI Interchange\
    \ was\n      verified by the receiving trading partner.  The receiver does this\n\
    \      by returning the calculated MIC of the received EC Interchange\n      (and\
    \ 1767 MIME headers) in the \"Received-content-MIC\" field of the\n      signed\
    \ MDN.\n   3) As an acknowledgment that the receiving trading partner has\n  \
    \    authenticated the sender of the EDI Interchange.\n   4) As a non-repudiation\
    \ of receipt when the signed MDN is\n      successfully verified by the sender\
    \ with the receiving trading\n      partner's public key and the returned MIC\
    \ value inside the MDN is\n      the same as the digest of the original message.\n"
- title: 7.2.  Message Disposition Notifications (MDN)
  contents:
  - "7.2.  Message Disposition Notifications (MDN)\n   The AS3-MDNs are returned on\
    \ a separate FTP TCP/IP connection and are\n   a response to an AS3 message.\n\
    \   The following diagram illustrates the delivery of an AS3-MDN\n   delivery:\n\
    \          AS3-MDN\n         [S] ----( connect )----> [R]   [FTP Server]\n   \
    \      [S] ----( send )-------> [R]   [AS3-Message]\n         [S] ----( disconnect\
    \ )-> [R]   [FTP Server]\n         [S] <---( connect )----- [R]   [FTP Server]\n\
    \         [S] <---( send )-------- [R]   [AS3-MDN]]\n         [S] <---( disconnect\
    \ )-- [R]   [FTP Server]\n         Note: Refer to Section 7.4.4 for additional\n\
    \               programming notes.\n"
- title: 7.3.  Requesting a Signed Receipt
  contents:
  - "7.3.  Requesting a Signed Receipt\n   Message Disposition Notifications are requested\
    \ as per RFC 3798.  A\n   request that the receiving user agent issue a message\
    \ disposition\n   notification is made by placing the following header into the\
    \ message\n   to be sent:\n   MDN-request-header = \"Disposition-notification-to\"\
    \ \":\" ftpurl\n   This syntax is a residual of the use of MDN's in an SMTP transfer.\n\
    \   Since this specification is adjusting the functionality from SMTP to\n   FTP\
    \ and retaining as much as possible from the [5] functionality, the\n   ftpurl\
    \ must be present.\n   The ftpurl field is specified as an RFC 1738 <URL:\"ftp://\"\
    \ login [\n   \"/\" fpath [ \";type=\" ftptype ]]>, and while it MUST be present,\
    \ it\n   may be ignored if the ftpurl points to an unknown location.  If the\n\
    \   ftpurl points to an unknown location, it is RECOMMENDED that the mdn\n   is\
    \ returned back to a known ftpurl for the sender of the received\n   message.\n\
    \   For requesting MDN-based receipts, the originator supplies the\n   required\
    \ extension headers that precede the message body.\n   The header \"tags\" are\
    \ as follows:\n   A Disposition-notification-to header is added to indicate that\
    \ a\n   message disposition notification is requested.  This header is\n   specified\
    \ in [6].\n   A Message-ID header is added to support message reconciliation,\
    \ so\n   that an Original-Message-Id value can be returned in the body part of\n\
    \   the MDN.\n   Other headers, especially \"Date\", SHOULD be supplied; the values\
    \ of\n   these headers are often mentioned in the human-readable section of an\n\
    \   MDN to aid in identifying the original message.\n   Disposition-notification-options\
    \ identifies characteristics of the\n   message.\n   The following Disposition\
    \ notification is in accordance with [6].\n       EXAMPLE:\n         Disposition-notification-to:\
    \       // Requests the MDN\n           ftp://host:port/inbox            // Location\
    \ to return MDN\n         Disposition-notification-options:  // The signing options\
    \ for\n                                               MDN\n           signed-receipt-protocol=optional,\
    \ pkcs7-signature;\n           signed-receipt-micalg=optional, sha1, md5\n   Disposition-notification-options\
    \ syntax:\n   Disposition-notification-options =\n          \"Disposition-Notification-Options:\"\
    \n           disposition-notification-parameters\n   disposition-notification-parameters\
    \ =\n               parameter *(\";\" parameter)\n   parameter = attribute \"\
    =\" importance \", \" value *(\",\" value)\n   importance = \"required\" / \"\
    optional\"\n   attribute = \"signed-receipt-protocol\" / \"signed-receipt-micalg\"\
    \n   So the Disposition-notification-options string could be:\n     signed-receipt-protocol=optional,\
    \ <protocol symbol>;\n     signed-receipt-micalg=optional, <micalg1>, <micalg2>,...;\n\
    \   The currently supported value for <protocol symbol> is \"pkcs7-\n   signature\"\
    \ for the S/MIME detached signature format.\n   The currently supported values\
    \ for MIC algorithm <micalg> values are:\n          Algorithm   Value\n      \
    \     Used\n        --------   -------\n           MD5         md5\n         \
    \  SHA-1       sha1\n   Receiving agents SHOULD be able to recover gracefully\
    \ from a <micalg>\n   parameter value that they do not recognize.\n   The semantics\
    \ of the \"signed-receipt-protocol\" parameter is as\n   follows:\n   1) The \"\
    signed-receipt-protocol\" parameter is used to request a\n      signed receipt\
    \ from the recipient trading partner.  The \"signed-\n      receipt-protocol\"\
    \ parameter also specifies the format in which the\n      signed receipt should\
    \ be returned to the requester.\n      The \"signed-receipt-micalg\" parameter\
    \ is a list of MIC algorithms\n      preferred by the requester for use in signing\
    \ the returned receipt\n      and calculating the micalg in the Received-content-MIC\
    \ header.\n      The list of MIC algorithms should be honored by the recipient\
    \ from\n      left to right.  Both the \"signed-receipt-protocol\" and the\n \
    \     \"signed-receipt-micalg\" option parameters are REQUIRED when\n      requesting\
    \ a signed receipt.\n   2) The \"importance\" attribute of \"Optional\" is defined\
    \ in RFC 3798,\n      Section 2.2, and has the following meaning:\n      Parameters\
    \ with an importance of \"Optional\" permit a UA that does\n      not understand\
    \ the particular options parameter to still generate\n      an MDN in response\
    \ to a request for an MDN.  A UA that does not\n      understand the \"signed-receipt-protocol\"\
    \ parameter, or the\n      \"signed-receipt-micalg\" parameter, will obviously\
    \ not return a\n      signed receipt.\n      The importance of \"Optional\" is\
    \ used for the signed receipt\n      parameters because it is RECOMMENDED that\
    \ an MDN be returned to\n      the requesting trading partner even if the recipient\
    \ could not\n      sign it.\n      The returned MDN will contain information on\
    \ the disposition of\n      the message as well as on why the MDN could not be\
    \ signed.  See\n      the Disposition field in Section 7.5 for more information.\n\
    \   Within an EDI trading relationship, if a signed receipt is expected\n   and\
    \ is not returned, then the validity of the transaction must be\n   determined\
    \ by the trading partners.  Typically, if a signed receipt\n   is required by\
    \ the trading relationship and is not received, the\n   transaction will likely\
    \ not be considered valid.\n"
- title: 7.3.1.  Signed Receipt Considerations
  contents:
  - "7.3.1.  Signed Receipt Considerations\n   The method used to request a receipt\
    \ or a signed receipt is defined\n   in RFC 3798, \"An Extensible Message Format\
    \ for Message Disposition\n   Notifications\".\n   The \"rules\" for processing\
    \ a receipt-request follow:\n   1) When a receipt is requested, explicitly specifying\
    \ that the\n      receipt be signed, then the receipt MUST be returned with a\n\
    \      signature unless conditions (2) or (3) below are applicable.\n   2) When\
    \ a receipt is requested, explicitly specifying that the\n      receipt be signed,\
    \ but the recipient cannot support either the\n      requested protocol format,\
    \ or requested MIC algorithms, then\n      either a signed or unsigned receipt\
    \ SHOULD be returned.\n   3) When a receipt is requested, explicitly specifying\
    \ that the\n      receipt be signed, but the recipient is unable to compute the\n\
    \      digest (e.g., message was encrypted, and recipient unable to\n      decrypt),\
    \ then the recipient SHOULD NOT return \"Received-content-\n      MIC\" in the\
    \ MDN to the requestor.  If the MDN sets the disposition\n      (e.g., \"processed/error:\
    \ decryption-failed\") appropriately, then\n      the \"Received-content-MIC\"\
    \ may be returned, but the value must be\n      discarded.\n   4) When a signature\
    \ is not explicitly requested, or if the signed\n      receipt request parameter\
    \ is not recognized by the UA, then no\n      receipt, an unsigned receipt, or\
    \ a signed receipt MAY be returned\n      by the recipient.\n   5) If a message\
    \ is received without a request for a receipt, then a\n      receipt (signed or\
    \ unsigned) MAY be returned.\n      The \"Received-content-MIC\" MUST be calculated\
    \ as follows:\n      - For any signed messages, the MIC to be returned is calculated\
    \ on\n        the RFC 1767 MIME header and content.  Canonicalization as\n   \
    \     specified in RFC 1848 MUST be performed before the MIC is\n        calculated,\
    \ since the sender requesting the signed receipt was\n        also REQUIRED to\
    \ canonicalize.\n      - For encrypted, unsigned messages, the MIC to be returned\
    \ is\n        calculated on the decrypted RFC 1767 MIME header and content.\n\
    \        The content after decryption MUST be canonicalized before the\n     \
    \   MIC is calculated.\n      - For unsigned, un-encrypted messages, the MIC MUST\
    \ be calculated\n        over the message contents prior to Content-Transfer-Encoding\
    \ and\n        without the MIME or any other RFC 822 [14] headers, since these\n\
    \        are sometimes altered or reordered by message transfer agents\n     \
    \   (MTAs).\n"
- title: 7.4.  MDN Format and Value
  contents:
  - "7.4.  MDN Format and Value\n   This section defines the format of the AS3 Message\
    \ Disposition\n   Notification (AS3-MDN).\n"
- title: 7.4.1.  AS3-MDN General Formats
  contents:
  - "7.4.1.  AS3-MDN General Formats\n   The AS3-MDN follows the MDN specification\
    \ [6] except where noted in\n   this section.  The modified entity definitions\
    \ in this document use\n   the vertical-bar character, '|', to denote a logical\
    \ \"OR\"\n   construction.  Refer to RFC 2045 for the format of MIME-message-\n\
    \   headers.\n     The format of the AS3-MDN is\n     MDN, no signature\n    \
    \   -RFC822/2045\n         -RFC3798 (message/disposition-notification)\n     MDN,\
    \ signature\n       -RFC822/2045\n         -RFC1847 (multipart/signed)\n     \
    \      -RFC3798 (message/disposition-notification)\n           -RFC3851 (application/pkcs7-signature)\n"
- title: 7.4.2.  AS3-MDN Construction
  contents:
  - "7.4.2.  AS3-MDN Construction\n   The AS3-MDN-body is formatted as a MIME multipart/report\
    \ with a\n   report-type of \"disposition-notification\".\n   When unsigned, the\
    \ transfer-layer (\"outermost\") entity-headers of the\n   AS3-MDN contain the\
    \ Content-Type header that specifies a content type\n   of \"multipart/report\"\
    , parameters indicating the report-type, and the\n   value of the outermost multipart\
    \ boundary.\n   When the AS3-MDN is signed, the transfer-layer (\"outermost\"\
    ) entity-\n   headers of the AS3-MDN contain a Content-Type header that specifies\
    \ a\n   content type of \"multipart/signed\", parameters indicating the\n   algorithm\
    \ used to compute the message digest, the signature\n   formatting protocol (e.g.,\
    \ pkcs7-signature), and the value of the\n   outermost multipart boundary.  The\
    \ first part of the MIME\n   multipart/signed message is an imbedded MIME multipart/report\
    \ of type\n   \"disposition-notification\".  The second part of the multipart/signed\n\
    \   message contains a MIME application/pkcs7-signature message.\n   The first\
    \ part of the MIME multipart/report is a \"human-readable\"\n   portion that contains\
    \ a general description of the message\n   disposition.  The second part of the\
    \ MIME multipart/report is a\n   \"machine-readable\" portion that is defined\
    \ as\n     AS3-disposition-notification-content =\n               [ reporting-ua-field\
    \ CRLF ]\n               [ mdn-gateway-field CRLF ]\n               [ original-recipient-field\
    \ CRLF ]\n               final-recipient-field CRLF\n               [ original-message-id-field\
    \ CRLF ]\n               AS3-disposition-field CRLF\n               *( failure-field\
    \ CRLF )\n               *( error-field CRLF )\n               *( warning-field\
    \ CRLF )\n               *( extension-field CRLF )\n               [ AS3-received-content-MIC-field\
    \ CRLF ]\n   It is noted that several of the optional fields defined by RFC 3798\n\
    \   and shown above are not relevant to a point-to-point transport such\n   as\
    \ FTP and would not normally appear in an AS3 MDN.\n"
- title: 7.4.3.  AS3-MDN Fields
  contents:
  - "7.4.3.  AS3-MDN Fields\n   The rules for constructing the AS3-disposition-notification-content\n\
    \   are identical to the rules for constructing the disposition-\n   notification-content\
    \ as defined in Section 7 of RFC 3798 [6] except\n   that the RFC 3798 disposition-field\
    \ has been replaced with the AS3-\n   disposition-field and that the AS3-received-content-MIC\
    \ field has\n   been added.  The differences between the RFC 3798 disposition-field\n\
    \   and the AS3-disposition-field are described below.  Where there are\n   differences\
    \ between this document and RFC 3798, those entity names\n   have been changed\
    \ by prepending \"AS3-\".  Entities below that do not\n   differ from RFC 3798\
    \ are not necessarily further defined in this\n   document.\n   Refer to RFC 3798\
    \ [6] and RFC 4234 [22] for entities that are not\n   further defined in this\
    \ document.\n     AS3-disposition-field = \"Disposition:\" disposition-mode \"\
    ;\"\n                    AS3-disposition-type [ \"/\" AS3-disposition-modifier]\n\
    \     disposition-mode = action-mode \"/\" sending-mode\n     action-mode = \"\
    manual-action\" / \"automatic-action\"\n     sending-mode = \"MDN-sent-manually\"\
    \ / \"MDN-sent-automatically\"\n     AS3-disposition-type = \"processed\" / \"\
    failed\"\n     AS3-disposition-modifier = ( \"error\" / \"warning\" ) /\n    \
    \                            AS3-disposition-modifier-extension\n     AS3-disposition-modifier-extension\
    \ =\n                \"error: authentication-failed\" /\n                \"error:\
    \ decompression-failed\" /\n                \"error: decryption-failed\" /\n \
    \               \"error: insufficient-message-security\" /\n                \"\
    error: integrity-check-failed\" /\n                \"error: unexpected-processing-error\"\
    \ /\n                \"warning: \" AS3-MDN-warning-description /\n           \
    \     \"failure: \" AS3-MDN-failure-description\n     AS3-MDN-warning-description\
    \ = *( TEXT )\n     AS3-MDN-failure-description = *( TEXT )\n     AS3-received-content-MIC-field\
    \ =\n                 \"Received-content-MIC:\" encoded-message-digest\n     \
    \            \",\" digest-alg-id CRLF\n     encoded-message-digest =\n       \
    \         1*( ALPHA / DIGIT / \"/\" / \"+\" ) *3\"=\"\n                ;( i.e.\
    \ base64( message-digest ) )\n     digest-alg-id = \"sha1\" / \"md5\"\n   The\
    \ \"Received-content-MIC\" extension field is set after the integrity\n   of the\
    \ received message is verified.  The MIC is the base64-encoded\n   message-digest\
    \ computed over the received message with a hash\n   function.  This field is\
    \ required for signed receipts but optional\n   for unsigned receipts.  For details\
    \ defining the specific content\n   over which the message-digest is to be computed,\
    \ see Section 7.3.1 of\n   this document.\n   The algorithm used to calculate\
    \ the message digest MUST be the same\n   as the \"micalg\" value used by the\
    \ sender in the multipart/signed\n   message.  When no signature is received,\
    \ the message-digest MUST be\n   calculated using the algorithm specified by the\
    \ \"micalg\" value in the\n   Disposition-Notification-Options header.  When no\
    \ signature is\n   received and no micalg parameter is provided, then the SHA-1\n\
    \   algorithm MUST be used to calculate the digest.  This field is set\n   only\
    \ when the contents of the message are processed successfully.\n   This field\
    \ is used in conjunction with the recipient's signature on\n   the MDN in order\
    \ for the sender to verify non-repudiation of receipt.\n   AS3-MDN field names\
    \ (e.g., \"Disposition:\", \"Final-Recipient:\") are\n   case-insensitive (cf.\
    \ RFC 3798, Section 3.1.1).\n   AS3-MDN action-modes, sending-modes, AS3-disposition-types,\
    \ and AS3-\n   disposition-modifier values that are defined above, and user-supplied\n\
    \   *( TEXT ) values are also case-insensitive.  AS3 implementations MUST\n  \
    \ NOT make assumptions regarding the values supplied for AS3-MDN-\n   warning-description\
    \ or AS3-MDN-failure-description or for the values\n   of any (optional) error,\
    \ warning, or failure fields.\n"
- title: 7.4.4.  Additional AS3-MDN Programming Notes
  contents:
  - "7.4.4.  Additional AS3-MDN Programming Notes\n   1.  Unlike SMTP, for FTP transactions,\
    \ Original-Recipient and Final\n       Recipient SHOULD NOT be different.  The\
    \ value in Original-\n       Message-ID MUST match the original Message-ID header\
    \ value.\n   2.  Refer to RFC 3462 and RFC 3798 for the formatting of the\n  \
    \     Content-Type entity-headers for the MDN.\n   3.  Use an action-mode of \"\
    automatic-action\" when the disposition\n       described by the disposition type\
    \ was a result of an automatic\n       action, rather than an explicit instruction\
    \ by the user for this\n       message.\n   4.  Use an action-mode of \"manual-action\"\
    \ when the disposition\n       described by the disposition type was a result\
    \ of an explicit\n       instruction by the user rather than some sort of automatically\n\
    \       performed action.\n   5.  Use a sending-mode of \"MDN-sent-automatically\"\
    \ when the MDN is\n       sent because the UA had previously been configured to\
    \ do so.\n   6.  Use a sending-mode of \"MDN-sent-manually\" when the user\n \
    \      explicitly gave permission for this particular MDN to be sent.\n   7. \
    \ The sending-mode \"MDN-sent-manually\" is ONLY meaningful with\n       \"manual-action\"\
    , not with \"automatic-action\".\n   8.  The \"failed\" disposition type MAY NOT\
    \ be used for the situation\n       in which there is some problem in processing\
    \ the message other\n       than interpreting the request for an MDN.  The \"\
    processed\" or\n       other disposition type with appropriate disposition modifiers\
    \ is\n       to be used in such situations.\n   9.  An AS3 implementation MUST\
    \ present to its trading partners an\n       FTP-compliant server interface where\
    \ inbound documents and MDNs\n       are received.\n   10. An AS3 implementation\
    \ MUST be able to retrieve inbound messages\n       from its currently configured\
    \ FTP server interface.\n   Note: Programming Notes 9 and 10 do not imply any\
    \ specific method for\n         supplying the FTP server interface.  But, they\
    \ do allow for\n         several different types of implementations.  Some vendors\
    \ may\n         choose to imbed an FTP-compliant server interface within their\n\
    \         product, and others may choose to utilize off-the-shelf FTP\n      \
    \   servers to supply the required FTP server interface.  Some may\n         choose\
    \ to utilize hosting services provided by their trading\n         partner or by\
    \ a third-party hosting service.  Whichever method\n         is utilized, an AS3\
    \ implementation MUST support rules 9 and 10.\n   11. AS3 implementations MAY\
    \ imbed an FTP server interface within\n       their product.\n   12. AS3 implementations\
    \ MUST be configurable to allow the use of an\n       external FTP hosting service.\n\
    \   Note: An external FTP hosting service may be hosted by a third-party\n   \
    \      or possibly hosted by your trading partner.\n   13. An AS3 implementation\
    \ MUST be able to send business documents and\n       MDNs to a trading partner's\
    \ currently configured FTP server\n       interface.\n   14. An AS3 implementation\
    \ may imbed FTP client code into their\n       product or use a third-party FTP\
    \ client.\n   15. Example Configurations\n       1. Peer to Peer\n          Trading\
    \ Partner A (TPA) is using a local FTP server, and\n          Trading Partner\
    \ B (TPB) is using an imbedded FTP server.\n       [A Client] ----( connect )---->\
    \ [B Server]\n       [A Client] ----( send )-------> [B Server] [AS3-Message]\n\
    \       [A Client] ----( disconnect )-> [B Server]\n       [A Server] <---( connect\
    \ )----- [B Client]\n       [A Server] <---( send )-------- [B Client] [AS3-MDN]]\n\
    \       [A Server] <---( disconnect )-- [B Server]\n       [A Client] <---( GET\
    \ )--------- [A Server]\n       2. Third-Party Hosting\n          Both parties\
    \ are using the same third-party-hosted FTP server.\n       [A Client] ----( connect\
    \ )----> [Hosted Server]\n       [A Client] ----( send )-------> [Hosted Server]\
    \ [AS3-Message]\n       [A Client] ----( disconnect )-> [Hosted Server]\n    \
    \   [Hosted Server]( GET )--------> [B Client]\n       [Hosted Server] <---( connect\
    \ )----- [B Client]\n       [Hosted Server] <---( send )-------- [B Client] [AS3-MDN]]\n\
    \       [Hosted Server] <---( disconnect )-- [B Client]\n       [A Client]   \
    \   <---( GET )--------- [Hosted Server]\n       3. Trading Partner Hosting\n\
    \          TPA is using the imbedded FTP server hosted by TPB.\n       [A Client]\
    \ ----( connect )----> [B Server]\n       [A Client] ----( send )-------> [B Server]\
    \ [AS3-Message]\n       [A Client] ----( disconnect )-> [B Server]\n       [B\
    \ Server] <---( connect )----- [B Client]\n       [B Server] <---( send )--------\
    \ [B Client] [AS3-MDN]]\n       [B Server] <---( disconnect )-- [B Client]\n \
    \      [A Client] <---( GET )--------- [B Server]\n"
- title: 7.5.  Disposition Mode, Type, and Modifier
  contents:
  - '7.5.  Disposition Mode, Type, and Modifier

    '
- title: 7.5.1.  Disposition Mode Overview
  contents:
  - "7.5.1.  Disposition Mode Overview\n   This section will provide a brief overview\
    \ of how processed, error,\n   failure, or warning notifications are used.\n"
- title: 7.5.2.  Successful Processing Status Indication
  contents:
  - "7.5.2.  Successful Processing Status Indication\n   When a receipt or signed\
    \ receipt is requested, and the received\n   message contents are successfully\
    \ processed by the receiving EDI UA,\n   a receipt or MDN SHOULD be returned with\
    \ the \"disposition-type\" set\n   to \"processed\".  When the MDN is sent automatically\
    \ by the EDI UA,\n   and there is no explicit way for a user to control the sending\
    \ of the\n   MDN, then the first part of the \"disposition-mode\" should be set\
    \ to\n   \"automatic-action\".\n   When the MDN is being sent under user-configurable\
    \ control, then the\n   first part of the \"disposition-mode\" should be set to\
    \ \"manual-\n   action\".  Since a request for a signed receipt should always\
    \ be\n   honored, the user MUST not be allowed to configure the UA not to send\n\
    \   a signed receipt when the sender requests one.\n   The second part of the\
    \ \"disposition-mode\" is set to \"MDN-sent-\n   manually\" if the user gave explicit\
    \ permission for the MDN to be\n   sent.  Again, the user MUST not be allowed\
    \ to explicitly refuse to\n   send a signed receipt when the sender requests one.\
    \  The second part\n   of the \"disposition-mode\" is set to \"MDN-sent-automatically\"\
    \ whenever\n   the EDI UA sends the MDN automatically, regardless of whether the\n\
    \   sending was under a user's, an administrator's, or software control.\n   Since\
    \ EDI content is generally handled automatically by the EDI UA, a\n   request\
    \ for a receipt or signed receipt will generally return the\n   following in the\
    \ \"disposition-field\":\n   Disposition: automatic-action/MDN-sent-automatically;\
    \ processed\n   Note this specification does not restrict the use of the\n   \"\
    disposition-mode\" to just automatic actions.  Manual actions are\n   valid as\
    \ long as it is kept in mind that a request for a signed\n   receipt MUST be honored.\n"
- title: 7.5.3.  Unsuccessful Processed Content
  contents:
  - "7.5.3.  Unsuccessful Processed Content\n   The request for a signed receipt requires\
    \ the use of two\n   \"disposition-notification-options\", which specify the protocol\
    \ format\n   of the returned signed receipt, and the MIC algorithm used to\n \
    \  calculate the MIC over the message contents.  The \"disposition-field\"\n \
    \  values that should be used in the case where the message content is\n   being\
    \ rejected or ignored should be specified in the MDN\n   \"disposition-field\"\
    \ as below.  (An example of this case is when the\n   EDI UA determines that a\
    \ signed receipt cannot be returned because it\n   does not support the requested\
    \ protocol format, so the EDI UA chooses\n   not to process the message contents\
    \ itself.)\n   Disposition: \"disposition-mode\"; failed/Failure: unsupported\
    \ Format\n   The \"failed\" AS3-disposition-type should be used when a failure\n\
    \   occurs that prevents the proper generation of an MDN.\n   For example, this\
    \ disposition-type would apply if the sender of the\n   message requested the\
    \ application of an unsupported message-\n   integrity-check (MIC) algorithm.\n\
    \   The \"failure:\" AS3-disposition-modifier-extension should be used with\n\
    \   an implementation-defined description of the failure.\n   Further information\
    \ about the failure may be contained in a failure-\n   field.  The syntax of the\
    \ \"failed\" \"disposition-type\" is general,\n   allowing the sending of any\
    \ textual information along with the\n   \"failed\"  \"disposition-type\".  Implementations\
    \ WILL support any\n   printable textual characters after the Failure disposition-type.\n\
    \   For use in Internet EDI, the following \"failed\" values are pre-\n   defined\
    \ and MUST be supported:\n        \"Failure: unsupported format\"\n        \"\
    Failure: unsupported MIC-algorithms\"\n"
- title: 7.5.4.  Unsuccessful Non-Content Processing
  contents:
  - "7.5.4.  Unsuccessful Non-Content Processing\n   When errors occur in processing\
    \ the received message, other than\n   content, the \"disposition-field\" should\
    \ be set to the \"processed\"\n   \"disposition-type\" value and the \"error\"\
    \ \"disposition-modifier\"\n   value.\n   The \"error\" AS3-disposition-modifier\
    \ with the \"processed\"\n   disposition-type should be used to indicate that\
    \ an error of some\n   sort occurred that prevented successful processing of the\
    \ message.\n   Further information may be contained in an error-field.\n   An\
    \ \"error:\" AS3-disposition-modifier-extension should be used to\n   combine\
    \ the indication of an error with a pre-defined description of\n   a specific,\
    \ well-known error.  Further information about the error\n   may be contained\
    \ in an error-field.\n   For use in Internet EDI, the following \"error\" \"disposition-modifier\"\
    \n   values are defined:\n   \"Error: decryption-failed\"\n      The receiver\
    \ could not decrypt the message contents.\n   \"Error: authentication-failed\"\
    \n      The receiver could not authenticate the sender.\n   \"Error: integrity-check-failed\"\
    \n      The receiver could not verify content integrity.\n   \"Error: insufficient-message-security\"\
    \n      The security level of the message did not match the agreed level\n   \
    \   between TPs.\n   \"Error: decompression-failed\"\n      The receiver could\
    \ not decompress the message contents.\n   \"Error: unexpected-processing-error\"\
    \n      A catch-all for any additional processing errors.\n   An example of how\
    \ the \"disposition-field\" would look when processing\n   errors, other than\
    \ content, are detected is as follows:\n   EXAMPLE\n        Disposition: \"disposition-mode\"\
    ;\n          processed/Error: decryption-failed\n"
- title: 7.5.5.  Processing Warnings
  contents:
  - "7.5.5.  Processing Warnings\n   Situations arise in EDI where even if a trading\
    \ partner cannot be\n   authenticated correctly, the trading partners still agree\
    \ to continue\n   processing the EDI transactions.  Transaction reconciliation\
    \ is done\n   between the trading partners at a later time.  In the content\n\
    \   processing warning situations described above, the \"disposition-\n   field\"\
    \ SHOULD be set to the \"processed\" \"disposition-type\" value, and\n   the \"\
    warning\" \"disposition-modifier\" value.\n   The \"warning\" AS3-disposition-modifier\
    \ should be used with the\n   \"processed\" disposition-type to indicate that\
    \ the message was\n   successfully processed but that an exceptional condition\
    \ occurred.\n   Further information may be contained in a warning-field.\n   A\
    \ \"warning:\" AS3-disposition-modifier-extension should be used to\n   combine\
    \ the indication of a warning with an implementation-defined\n   description of\
    \ the warning.  Further information about the warning\n   may be contained in\
    \ a warning-field.\n   For use in Internet EDI, the following \"warning\" \"disposition-\n\
    \   modifier\" values are defined:\n   \"Warning: authentication-failed, processing\
    \ continued\"\n   An example of how the \"disposition-field\" would look when\
    \ processing\n   warnings, other than content, are detected is as follows:\n \
    \  EXAMPLE\n       Disposition: \"disposition-mode\"; processed/Warning:\n   \
    \      authentication-failed, processing continued\n"
- title: 8.  Public Key Certificate Handling
  contents:
  - "8.  Public Key Certificate Handling\n   In the near term, the exchange of public\
    \ keys and certification of\n   these keys must be handled as part of the process\
    \ of establishing a\n   trading partnership.  The UA and/or EDI application interface\
    \ must\n   maintain a database of public keys used for encryption or signatures,\n\
    \   in addition to the mapping between EDI trading partner ID and FTP\n   URL/URI.\
    \  The procedures for establishing a trading partnership and\n   configuring the\
    \ secure EDI messaging system might vary among trading\n   partners and software\
    \ packages.\n   X.509 certificates are REQUIRED.  It is RECOMMENDED that trading\n\
    \   partners self-certify each other if an agreed-upon certification\n   authority\
    \ is not used.  This applicability statement does NOT require\n   the use of a\
    \ certification authority.\n   The use of a certification authority is therefore\
    \ OPTIONAL.\n   Certificates may be self-signed.  It is RECOMMENDED that when\
    \ trading\n   partners are using S/MIME, that they also exchange public key\n\
    \   certificates using the recommendations specified in the S/MIME\n   Version\
    \ 3.1 Message Specification.\n   The message formats and S/MIME conformance requirements\
    \ for\n   certificate exchange are specified in this document.  In the long\n\
    \   term, additional Internet-EDI standards may be developed to simplify\n   the\
    \ process of establishing a trading partnership, including the\n   third-party\
    \ authentication of trading partners, as well as attributes\n   of the trading\
    \ relationship.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   This entire document is concerned with secure\
    \ transport of business-\n   to-business data, and it considers both privacy and\
    \ authentication\n   issues.\n   Extracted from S/MIME Version 2 Message Specification\
    \ [21]:\n      40-bit encryption is considered weak by most cryptographers.\n\
    \      Using weak cryptography in S/MIME offers little actual security\n     \
    \ over sending plaintext.  However, other features of S/MIME, such\n      as the\
    \ specification of tripleDES and the ability to announce\n      stronger cryptographic\
    \ capabilities to parties with whom you\n      communicate, allow senders to create\
    \ messages that use strong\n      encryption.  Using weak cryptography is never\
    \ recommended unless\n      the only alternative is no cryptography.  When feasible,\
    \ sending\n      and receiving agents should inform senders and recipients the\n\
    \      relative cryptographic strength of messages.\n   Extracted from S/MIME\
    \ Version 3.1 Certificate Handling [11]:\n      When processing certificates,\
    \ there are many situations where the\n      processing might fail.  Because the\
    \ processing may be done by a\n      user agent, a security gateway, or other\
    \ program, there is no\n      single way to handle such failures.  Just because\
    \ the methods to\n      handle the failures has not been listed, however, the\
    \ reader\n      should not assume that they are not important.  The opposite is\n\
    \      true: if a certificate is not provably valid and associated with\n    \
    \  the message, the processing software should take immediate and\n      noticeable\
    \ steps to inform the end user about it.\n      Some of the many places where\
    \ signature and certificate checking\n      might fail include:\n      -  no Internet\
    \ mail addresses in a certificate matches the sender\n         of a message, if\
    \ the certificate contains at least one mail\n         address\n      -  no certificate\
    \ chain leads to a trusted CA\n      -  no ability to check the Certificate Revocation\
    \ List (CRL) for a\n         certificate\n      -  an invalid CRL was received\n\
    \      -  the CRL being checked is expired\n      -  the certificate is expired\n\
    \      -  the certificate has been revoked\n      There are certainly other instances\
    \ where a certificate may be\n      invalid, and it is the responsibility of the\
    \ processing software\n      to check them all thoroughly, and to decide what\
    \ to do if the\n      check fails.\n   The following certificate types MUST be\
    \ supported.\n          With URL\n          Without URL\n          Self Certified\n\
    \          Certification Authority Certified\n   The complete certification chain\
    \ MUST be included in all\n   certificates.  All certificate verifications MUST\
    \ \"chain to root\".\n   Additionally, the certificate hash should match the hash\
    \ recomputed\n   by the receiver.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [1]   Freed, N. and N. Borenstein, \"Multipurpose\
    \ Internet Mail\n         Extensions (MIME) Part One: Format of Internet Message\
    \ Bodies\",\n         RFC 2045, November 1996.\n         Freed, N. and N. Borenstein,\
    \ \"Multipurpose Internet Mail\n         Extensions (MIME) Part Two: Media Types\"\
    , RFC 2046, November\n         1996.\n         Freed, N. and N. Borenstein, \"\
    Multipurpose Internet Mail\n         Extensions (MIME) Part Five: Conformance\
    \ Criteria and\n         Examples\", RFC 2049, November 1996.\n   [2]   Crocker,\
    \ D., \"MIME Encapsulation of EDI Objects\", RFC 1767,\n         March 1995.\n\
    \   [3]   Postel, J. and J. Reynolds, \"File Transfer Protocol\", STD 9,\n   \
    \      RFC 959, October 1985.\n   [4]   Horowitz, M. and S. Lunt, \"FTP Security\
    \ Extensions\", RFC 2228,\n         October 1997.\n   [5]   Harding, T., Drummond,\
    \ R., and C. Shih, \"MIME-based Secure\n         Peer-to-Peer Business Data Interchange\
    \ over the Internet\", RFC\n         3335, September 2002.\n   [6]   Hansen, T.\
    \ and G. Vaudreuil, \"Message Disposition\n         Notification\", RFC 3798,\
    \ May 2004.\n   [7]   Galvin, J., Murphy, S., Crocker, S., and N. Freed, \"Security\n\
    \         Multiparts for MIME: Multipart/Signed and Multipart/Encrypted\",\n \
    \        RFC 1847, October 1995.\n   [8]   Klensin, J., \"Simple Mail Transfer\
    \ Protocol\", RFC 2821, April\n         2001.\n   [9]   Housley, R., \"Cryptographic\
    \ Message Syntax (CMS)\", RFC 3852,\n         July 2004.\n   [10]  Ramsdell, B.,\
    \ \"Secure/Multipurpose Internet Mail Extensions\n         (S/MIME) Version 3.1\
    \ Message Specification\", RFC 3851, July\n         2004.\n   [11]  Ramsdell,\
    \ B., \"Secure/Multipurpose Internet Mail Extensions\n         (S/MIME) Version\
    \ 3.1 Certificate Handling\", RFC 3850, July\n         2004.\n   [12]  Vaudreuil,\
    \ G., \"The Multipart/Report Content Type for the\n         Reporting of Mail\
    \ System Administrative Messages\", RFC 3462,\n         January 2003.\n   [13]\
    \  Dierks, T. and C. Allen, \"The TLS Protocol Version 1.0\", RFC\n         2246,\
    \ January 1999.\n   [14]  Crocker, D., \"STANDARD FOR THE FORMAT OF ARPA INTERNET\
    \ TEXT\n         MESSAGES\", STD 11, RFC 822, August 1982.\n   [15]  Resnick,\
    \ P., \"Internet Message Format\", RFC 2822, April 2001.\n   [16]  Murata, M.,\
    \ St. Laurent, S., and D. Kohn, \"XML Media Types\",\n         RFC 3023, January\
    \ 2001.\n   [17]  Gutmann, P., \"Compressed Data Content Type for Cryptographic\n\
    \         Message Syntax (CMS)\", RFC 3274, June 2002.\n   [18]  Ford-Hutchinson,\
    \ P., \"Securing FTP with TLS\", RFC 4217, October\n         2005.\n   [19]  Bradner,\
    \ S., \"Key words for use in RFCs to Indicate Requirement\n         Levels\",\
    \ BCP 14, RFC 2119, March 1997.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [20]  Harding, T., \"Compressed Data for EDIINT\"\
    , Work in Progress,\n         January 2007.\n   [21]  Dusse, S., Hoffman, P.,\
    \ Ramsdell, B., Lundblade, L., and L.\n         Repka, \"S/MIME Version 2 Message\
    \ Specification\", RFC 2311,\n         March 1998.\n   [22]  Crocker, D. and P.\
    \ Overell, \"Augmented BNF for Syntax\n         Specifications: ABNF\", RFC 4234,\
    \ October 2005.\n   [23]  Dierks, T. and E. Rescorla, \"The Transport Layer Security\
    \ (TLS)\n         Protocol Version 1.1\", RFC 4346, April 2006.\n"
- title: Appendix A.  Message Examples
  contents:
  - "Appendix A.  Message Examples\n   NOTE: All examples are provided as an illustration\
    \ only, and are not\n         considered part of the protocol specification. \
    \ If an example\n         conflicts with the protocol definitions specified above\
    \ or with\n         that of a referenced RFC, the example is wrong.\n"
- title: A.1.  Signed Message Requesting a Signed Receipt
  contents:
  - "A.1.  Signed Message Requesting a Signed Receipt\n   Date: Wed, 31 Jul 2002 13:34:50\
    \ GMT\n   AS3-Version: 1.0\n   AS3-From:  cyclone\n   AS3-To: \"trading partner\"\
    \n   Message-Id: <200207310834482A70BF63@host.com>\n   Disposition-Notification-To:\
    \ ftp://host:port/mdnbox\n   Disposition-Notification-Options: signed-receipt-\n\
    \     protocol=optional,pkcs7-signature;\n     signed-receipt-micalg=optional,sha1\n\
    \   Content-Type: multipart/signed; boundary=\"as3BouNdary1as3\";\n      protocol=\"\
    application/pkcs7-signature\"; micalg=sha1\n   Content-Length: 3075\n   --as3BouNdary1as3\n\
    \   Content-Type: application/edi-x12\n   Content-Disposition: Attachment; filename=rfc1767.dat\n\
    \   [ISA ...EDI transaction data...IEA...]\n   --as3BouNdary1as3\n   Content-Type:\
    \ application/pkcs7-signature\n     [omitted binary pkcs7 signature data]\n  \
    \ --as3BouNdary1as3--\n"
- title: A.2.  MDN for Message A.1 Above
  contents:
  - "A.2.  MDN for Message A.1 Above\n   Date: Wed, 31 Jul 2002 13:34:50 GMT\n   AS3-From:\
    \ \"trading partner\"\n   AS3-To: cyclone\n   AS3-Version: 1.0\n   Message-ID:\
    \ <709700825.1028122454671.JavaMail@ediXchange>\n   Content-Type: multipart/signed;\
    \ micalg=sha1;\n     protocol=\"application/pkcs7-signature\";\n     boundary=\"\
    ----=_Part_57_648441049.1028122454671\"\n   Content-Length: 1024\n   ------=_Part_57_648441049.1028122454671\n\
    \   & Content-Type: multipart/report;\n   &   Report-Type=disposition-notification;\n\
    \   &   boundary=\"----=_Part_56_1672293592.1028122454656\"\n   &\n   &------=_Part_56_1672293592.1028122454656\n\
    \   &Content-Type: text/plain\n   &Content-Transfer-Encoding: 7bit\n   &\n   &MDN\
    \ for -\n   & Message ID: <200207310834482A70BF63@host.com>\n   &  From: cyclone\n\
    \   &  To: \"trading partner\"\n   &  Received on: 2002-07-31 at 09:34:14 (EDT)\n\
    \   &  Status: processed\n   &  Comment: This is not a guarantee that the message\
    \ has been\n   &  completely processed or understood by the receiving translator\n\
    \   &\n   &------=_Part_56_1672293592.1028122454656\n   &   Content-Type: message/disposition-notification\n\
    \   &   Content-Transfer-Encoding: 7bit\n   &\n   &   Reporting-UA: AS3 Server\n\
    \   &   Original-Recipient: rfc822; \"trading partner\"\n   &   Final-Recipient:\
    \ rfc822; \"trading partner\"\n   &   Original-Message-ID: <200207310834482A70BF63@host.com>\n\
    \   &   Received-content-MIC: 7v7F++fQaNB1sVLFtMRp+dF+eG4=, sha1\n   &   Disposition:\
    \ automatic-action/MDN-sent-automatically; processed\n   &\n   &------=_Part_56_1672293592.1028122454656--\n\
    \    ------=_Part_57_648441049.1028122454671\n   Content-Type: application/pkcs7-signature;\
    \ name=smime.p7s\n   Content-Transfer-Encoding: base64\n   Content-Disposition:\
    \ attachment; filename=smime.p7s\n   MIAGCSqGSIb3DQEHAqCAMIACAQExCzAJBgUrDgMCGgUAMIAGCSqGSIb3DQ\n\
    \   cp24hMJNbxDKHnlB9jTiQzLwSwo+/90Pc87x+Sc6EpFSUYWGAAAAAAAA\n   ------=_Part_57_648441049.1028122454671--\n\
    \   Notes:\n      1. The lines proceeded with \"&\" are what the signature is\n\
    \         calculated over.\n      2. For details on how to prepare the multipart/signed\
    \ with\n         protocol=\"application/pkcs7-signature\", see RFC 3851 [10],\n\
    \         \"Secure/Multipurpose Internet Mail Extensions (S/MIME) Version\n  \
    \       3.1 Message Specification\".\n      3. Note that the textual first body\
    \ part of the multipart/report\n         can be used to include a more detailed\
    \ explanation of the error\n         conditions reported by the disposition headers.\
    \  The first body\n         part of the multipart/report, when used in this way,\
    \ allows a\n         person to better diagnose a problem in detail.\n      4.\
    \ As specified by RFC 3462 [12], returning the original or\n         portions\
    \ of the original message in the third body part of the\n         multipart/report\
    \ is not required.  This is an optional body\n         part.  However, it is RECOMMENDED\
    \ that this body part be\n         omitted or left blank.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Terry Harding\n   Axway\n   8388 E. Hartford Drive, Suite\
    \ 100\n   Scottsdale, AZ  85255 USA\n   EMail: tharding@us.axway.com\n   Richard\
    \ Scott\n   Axway\n   8388 E. Hartford Drive, Suite 100\n   Scottsdale, AZ  85255\
    \ USA\n   EMail: rscott@us.axway.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
