- title: __initial_text__
  contents:
  - '         Enhanced Feasible-Path Unicast Reverse Path Forwarding

    '
- title: Abstract
  contents:
  - "Abstract\n   This document identifies a need for and proposes improvement of\
    \ the\n   unicast Reverse Path Forwarding (uRPF) techniques (see RFC 3704) for\n\
    \   detection and mitigation of source address spoofing (see BCP 38).\n   Strict\
    \ uRPF is inflexible about directionality, the loose uRPF is\n   oblivious to\
    \ directionality, and the current feasible-path uRPF\n   attempts to strike a\
    \ balance between the two (see RFC 3704).\n   However, as shown in this document,\
    \ the existing feasible-path uRPF\n   still has shortcomings.  This document describes\
    \ enhanced feasible-\n   path uRPF (EFP-uRPF) techniques that are more flexible\
    \ (in a\n   meaningful way) about directionality than the feasible-path uRPF (RFC\n\
    \   3704).  The proposed EFP-uRPF methods aim to significantly reduce\n   false\
    \ positives regarding invalid detection in source address\n   validation (SAV).\
    \  Hence, they can potentially alleviate ISPs'\n   concerns about the possibility\
    \ of disrupting service for their\n   customers and encourage greater deployment\
    \ of uRPF techniques.  This\n   document updates RFC 3704.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo documents an Internet Best Current Practice.\n\
    \   This document is a product of the Internet Engineering Task Force\n   (IETF).\
    \  It represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   BCPs is available in Section\
    \ 2 of RFC 7841.\n   Information about the current status of this document, any\
    \ errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8704.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2020 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction\n     1.1.  Terminology\n     1.2.  Requirements\
    \ Language\n   2.  Review of Existing Source Address Validation Techniques\n \
    \    2.1.  SAV Using Access Control List\n     2.2.  SAV Using Strict Unicast\
    \ Reverse Path Forwarding\n     2.3.  SAV Using Feasible-Path Unicast Reverse\
    \ Path Forwarding\n     2.4.  SAV Using Loose Unicast Reverse Path Forwarding\n\
    \     2.5.  SAV Using VRF Table\n   3.  SAV Using Enhanced Feasible-Path uRPF\n\
    \     3.1.  Description of the Method\n       3.1.1.  Algorithm A: Enhanced Feasible-Path\
    \ uRPF\n     3.2.  Operational Recommendations\n     3.3.  A Challenging Scenario\n\
    \     3.4.  Algorithm B: Enhanced Feasible-Path uRPF with Additional\n       \
    \    Flexibility across Customer Cone\n     3.5.  Augmenting RPF Lists with ROA\
    \ and IRR Data\n     3.6.  Implementation and Operations Considerations\n    \
    \   3.6.1.  Impact on FIB Memory Size Requirement\n       3.6.2.  Coping with\
    \ BGP's Transient Behavior\n     3.7.  Summary of Recommendations\n       3.7.1.\
    \  Applicability of the EFP-uRPF Method with Algorithm A\n   4.  Security Considerations\n\
    \   5.  IANA Considerations\n   6.  References\n     6.1.  Normative References\n\
    \     6.2.  Informative References\n   Acknowledgements\n   Authors' Addresses\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Source address validation (SAV) refers to the detection\
    \ and\n   mitigation of source address (SA) spoofing [RFC2827].  This document\n\
    \   identifies a need for and proposes improvement of the unicast Reverse\n  \
    \ Path Forwarding (uRPF) techniques [RFC3704] for SAV.  Strict uRPF is\n   inflexible\
    \ about directionality (see [RFC3704] for definitions), the\n   loose uRPF is\
    \ oblivious to directionality, and the current feasible-\n   path uRPF attempts\
    \ to strike a balance between the two [RFC3704].\n   However, as shown in this\
    \ document, the existing feasible-path uRPF\n   still has shortcomings.  Even\
    \ with the feasible-path uRPF, ISPs are\n   often apprehensive that they may be\
    \ dropping customers' data packets\n   with legitimate source addresses.\n   This\
    \ document describes enhanced feasible-path uRPF (EFP-uRPF)\n   techniques that\
    \ aim to be more flexible (in a meaningful way) about\n   directionality than\
    \ the feasible-path uRPF.  It is based on the\n   principle that if BGP updates\
    \ for multiple prefixes with the same\n   origin AS were received on different\
    \ interfaces (at border routers),\n   then incoming data packets with source addresses\
    \ in any of those\n   prefixes should be accepted on any of those interfaces (presented\
    \ in\n   Section 3).  For some challenging ISP-customer scenarios (see\n   Section\
    \ 3.3), this document also describes a more relaxed version of\n   the enhanced\
    \ feasible-path uRPF technique (presented in Section 3.4).\n   Implementation\
    \ and operations considerations are discussed in\n   Section 3.6.\n   Throughout\
    \ this document, the routes under consideration are assumed\n   to have been vetted\
    \ based on prefix filtering [RFC7454] and possibly\n   origin validation [RFC6811].\n\
    \   The EFP-uRPF methods aim to significantly reduce false positives\n   regarding\
    \ invalid detection in SAV.  They are expected to add greater\n   operational\
    \ robustness and efficacy to uRPF while minimizing ISPs'\n   concerns about accidental\
    \ service disruption for their customers.  It\n   is expected that this will encourage\
    \ more deployment of uRPF to help\n   realize its Denial of Service (DoS) and\
    \ Distributed DoS (DDoS)\n   prevention benefits network wide.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   The Reverse Path Forwarding (RPF) list is the list of permissible\n\
    \   source-address prefixes for incoming data packets on a given\n   interface.\n\
    \   Peering relationships considered in this document are provider-to-\n   customer\
    \ (P2C), customer-to-provider (C2P), and peer-to-peer (P2P).\n   Here, \"provider\"\
    \ refers to a transit provider.  The first two are\n   transit relationships.\
    \  A peer connected via a P2P link is known as a\n   lateral peer (non-transit).\n\
    \   AS A's customer cone is A plus all the ASes that can be reached from\n   A\
    \ following only P2C links [Luckie].\n   A stub AS is an AS that does not have\
    \ any customers or lateral peers.\n   In this document, a single-homed stub AS\
    \ is one that has a single\n   transit provider and a multihomed stub AS is one\
    \ that has multiple\n   (two or more) transit providers.\n"
- title: 1.2.  Requirements Language
  contents:
  - "1.2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n"
- title: 2.  Review of Existing Source Address Validation Techniques
  contents:
  - "2.  Review of Existing Source Address Validation Techniques\n   There are various\
    \ existing techniques for the mitigation of DoS/DDoS\n   attacks with spoofed\
    \ addresses [RFC2827] [RFC3704].  SAV is performed\n   in network edge devices,\
    \ such as border routers, Cable Modem\n   Termination Systems (CMTS) [RFC4036],\
    \ and Packet Data Network\n   Gateways (PDN-GWs) in mobile networks [Firmin].\
    \  Ingress Access\n   Control List (ACL) and uRPF are techniques employed for\
    \ implementing\n   SAV [RFC2827] [RFC3704] [ISOC].\n"
- title: 2.1.  SAV Using Access Control List
  contents:
  - "2.1.  SAV Using Access Control List\n   Ingress/egress ACLs are maintained to\
    \ list acceptable (or\n   alternatively, unacceptable) prefixes for the source\
    \ addresses in the\n   incoming/outgoing Internet Protocol (IP) packets.  Any\
    \ packet with a\n   source address that fails the filtering criteria is dropped.\
    \  The\n   ACLs for the ingress/egress filters need to be maintained to keep\n\
    \   them up to date.  Updating the ACLs is an operator-driven manual\n   process;\
    \ hence, it is operationally difficult or infeasible.\n   Typically, the egress\
    \ ACLs in access aggregation devices (e.g., CMTS,\n   PDN-GW) permit source addresses\
    \ only from the address spaces\n   (prefixes) that are associated with the interface\
    \ on which the\n   customer network is connected.  Ingress ACLs are typically\
    \ deployed\n   on border routers and drop ingress packets when the source address\
    \ is\n   spoofed (e.g., belongs to obviously disallowed prefix blocks, IANA\n\
    \   special-purpose prefixes [SPAR-v4][SPAR-v6], provider's own prefixes,\n  \
    \ etc.).\n"
- title: 2.2.  SAV Using Strict Unicast Reverse Path Forwarding
  contents:
  - "2.2.  SAV Using Strict Unicast Reverse Path Forwarding\n   Note: In the figures\
    \ (scenarios) in this section and the subsequent\n   sections, the following terminology\
    \ is used:\n   *  \"fails\" means drops packets with legitimate source addresses.\n\
    \   *  \"works (but not desirable)\" means passes all packets with\n      legitimate\
    \ source addresses but is oblivious to directionality.\n   *  \"works best\" means\
    \ passes all packets with legitimate source\n      addresses with no (or minimal)\
    \ compromise of directionality.\n   *  The notation Pi[ASn ASm ...] denotes a\
    \ BGP update with prefix Pi\n      and an AS_PATH as shown in the square brackets.\n\
    \   In the strict uRPF method, an ingress packet at a border router is\n   accepted\
    \ only if the Forwarding Information Base (FIB) contains a\n   prefix that encompasses\
    \ the source address and forwarding information\n   for that prefix points back\
    \ to the interface over which the packet\n   was received.  In other words, the\
    \ reverse path for routing to the\n   source address (if it were used as a destination\
    \ address) should use\n   the same interface over which the packet was received.\
    \  It is well\n   known that this method has limitations when networks are multihomed,\n\
    \   routes are not symmetrically announced to all transit providers, and\n   there\
    \ is asymmetric routing of data packets.  Asymmetric routing\n   occurs (see Figure\
    \ 1) when a customer AS announces one prefix (P1) to\n   one transit provider\
    \ (ISP-a) and a different prefix (P2) to another\n   transit provider (ISP-b)\
    \ but routes data packets with source\n   addresses in the second prefix (P2)\
    \ to the first transit provider\n   (ISP-a) or vice versa.  Then, data packets\
    \ with a source address in\n   prefix P2 that are received at AS2 directly from\
    \ AS1 will get\n   dropped.  Further, data packets with a source address in prefix\
    \ P1\n   that originate from AS1 and traverse via AS3 to AS2 will also get\n \
    \  dropped at AS2.\n              | AS2(ISP-a) | <----P2[AS3 AS1] ---- | AS3(ISP-b)\
    \ |\n                    P1[AS1]\\                       /P2[AS1]\n          \
    \                   P1, P2 (prefixes originated)\n             Consider data packets\
    \ received at AS2\n             (1) from AS1 with a source address (SA) in P2,\
    \ or\n             (2) from AS3 that originated from AS1 with a SA in P1:\n  \
    \                     * Strict uRPF fails\n                       * Feasible-path\
    \ uRPF fails\n                       * Loose uRPF works (but not desirable)\n\
    \                       * Enhanced feasible-path uRPF works best\n     Figure\
    \ 1: Scenario 1 for Illustration of Efficacy of uRPF Schemes\n"
- title: 2.3.  SAV Using Feasible-Path Unicast Reverse Path Forwarding
  contents:
  - "2.3.  SAV Using Feasible-Path Unicast Reverse Path Forwarding\n   The feasible-path\
    \ uRPF technique helps partially overcome the problem\n   identified with the\
    \ strict uRPF in the multihoming case.  The\n   feasible-path uRPF is similar\
    \ to the strict uRPF, but in addition to\n   inserting the best-path prefix, additional\
    \ prefixes from alternative\n   announced routes are also included in the RPF\
    \ list.  This method\n   relies on either (a) announcements for the same prefixes\
    \ (albeit some\n   may be prepended to effect lower preference) propagating to\
    \ all\n   transit providers performing feasible-path uRPF checks or (b)\n   announcement\
    \ of an aggregate less-specific prefix to all transit\n   providers while announcing\
    \ more-specific prefixes (covered by the\n   less-specific prefix) to different\
    \ transit providers as needed for\n   traffic engineering.\n   As an example,\
    \ in the multihoming scenario (see Scenario 2 in\n   Figure 2), if the customer\
    \ AS announces routes for both prefixes (P1,\n   P2) to both transit providers\
    \ (with suitable prepends if needed for\n   traffic engineering), then the feasible-path\
    \ uRPF method works.  It\n   should be mentioned that the feasible-path uRPF works\
    \ in this\n   scenario only if customer routes are preferred at AS2 and AS3 over\
    \ a\n   shorter non-customer route.  However, the feasible-path uRPF method\n\
    \   has limitations as well.  One form of limitation naturally occurs\n   when\
    \ the recommendation (a) or (b) mentioned above regarding\n   propagation of prefixes\
    \ is not followed.\n   Another form of limitation can be described as follows.\
    \  In Scenario\n   2 (described here, illustrated in Figure 2), it is possible\
    \ that the\n   second transit provider (ISP-b or AS3) does not propagate the\n\
    \   prepended route for prefix P1 to the first transit provider (ISP-a or\n  \
    \ AS2).  This is because AS3's decision policy permits giving priority\n   to\
    \ a shorter route to prefix P1 via a lateral peer (AS2) over a\n   longer route\
    \ learned directly from the customer (AS1).  In such a\n   scenario, AS3 would\
    \ not send any route announcement for prefix P1 to\n   AS2 (over the P2P link).\
    \  Then, a data packet with a source address\n   in prefix P1 that originates\
    \ from AS1 and traverses via AS3 to AS2\n   will get dropped at AS2.\n       \
    \      +------------+  routes for P1, P2   +------------+\n             | AS2(ISP-a)\
    \ |<-------------------->| AS3(ISP-b) |\n                  P1[AS1]\\         \
    \                 /P2[AS1]\n            P2[AS1 AS1 AS1]\\                    \
    \  /P1[AS1 AS1 AS1]\n                             P1, P2 (prefixes originated)\n\
    \           Consider data packets received at AS2 via AS3\n           that originated\
    \ from AS1 and have a source address in P1:\n           * Feasible-path uRPF works\
    \ (if the customer route to P1\n             is preferred at AS3 over the shorter\
    \ path)\n           * Feasible-path uRPF fails (if the shorter path to P1\n  \
    \           is preferred at AS3 over the customer route)\n           * Loose uRPF\
    \ works (but not desirable)\n           * Enhanced feasible-path uRPF works best\n\
    \     Figure 2: Scenario 2 for Illustration of Efficacy of uRPF Schemes\n"
- title: 2.4.  SAV Using Loose Unicast Reverse Path Forwarding
  contents:
  - "2.4.  SAV Using Loose Unicast Reverse Path Forwarding\n   In the loose uRPF method,\
    \ an ingress packet at the border router is\n   accepted only if the FIB has one\
    \ or more prefixes that encompass the\n   source address.  That is, a packet is\
    \ dropped if no route exists in\n   the FIB for the source address.  Loose uRPF\
    \ sacrifices\n   directionality.  It only drops packets if the source address\
    \ is\n   unreachable in the current FIB (e.g., IANA special-purpose prefixes\n\
    \   [SPAR-v4][SPAR-v6], unallocated, allocated but currently not routed).\n"
- title: 2.5.  SAV Using VRF Table
  contents:
  - "2.5.  SAV Using VRF Table\n   The Virtual Routing and Forwarding (VRF) technology\
    \ [RFC4364]\n   [Juniper] allows a router to maintain multiple routing table\n\
    \   instances separate from the global Routing Information Base (RIB).\n   External\
    \ BGP (eBGP) peering sessions send specific routes to be\n   stored in a dedicated\
    \ VRF table.  The uRPF process queries the VRF\n   table (instead of the FIB)\
    \ for source address validation.  A VRF\n   table can be dedicated per eBGP peer\
    \ and used for uRPF for only that\n   peer, resulting in strict mode operation.\
    \  For implementing loose\n   uRPF on an interface, the corresponding VRF table\
    \ would be global,\n   i.e., contains the same routes as in the FIB.\n"
- title: 3.  SAV Using Enhanced Feasible-Path uRPF
  contents:
  - '3.  SAV Using Enhanced Feasible-Path uRPF

    '
- title: 3.1.  Description of the Method
  contents:
  - "3.1.  Description of the Method\n   The enhanced feasible-path uRPF (EFP-uRPF)\
    \ method adds greater\n   operational robustness and efficacy to existing uRPF\
    \ methods\n   discussed in Section 2.  That is because it avoids dropping\n  \
    \ legitimate data packets and compromising directionality.  The method\n   is\
    \ based on the principle that if BGP updates for multiple prefixes\n   with the\
    \ same origin AS were received on different interfaces (at\n   border routers),\
    \ then incoming data packets with source addresses in\n   any of those prefixes\
    \ should be accepted on any of those interfaces.\n   The EFP-uRPF method can be\
    \ best explained with an example, as\n   follows:\n   Let us say, in its Adj-RIBs-In\
    \ [RFC4271], a border router of ISP-A\n   has the set of prefixes {Q1, Q2, Q3},\
    \ each of which has AS-x as its\n   origin and AS-x is in ISP-A's customer cone.\
    \  In this set, the border\n   router received the route for prefix Q1 over a\
    \ customer-facing\n   interface while it learned the routes for prefixes Q2 and\
    \ Q3 from a\n   lateral peer and an upstream transit provider, respectively. \
    \ In this\n   example scenario, the enhanced feasible-path uRPF method requires\
    \ Q1,\n   Q2, and Q3 be included in the RPF list for the customer interface\n\
    \   under consideration.\n   Thus, the EFP-uRPF method gathers feasible paths\
    \ for customer\n   interfaces in a more precise way (as compared to the feasible-path\n\
    \   uRPF) so that all legitimate packets are accepted while the\n   directionality\
    \ property is not compromised.\n   The above-described EFP-uRPF method is recommended\
    \ to be applied on\n   customer interfaces.  It can also be extended to create\
    \ the RPF lists\n   for lateral peer interfaces.  That is, the EFP-uRPF method\
    \ can be\n   applied (and loose uRPF avoided) on lateral peer interfaces.  That\n\
    \   will help to avoid compromising directionality for lateral peer\n   interfaces\
    \ (which is inevitable with loose uRPF; see Section 2.4).\n   Looking back at\
    \ Scenarios 1 and 2 (Figures 1 and 2), the EFP-uRPF\n   method works better than\
    \ the other uRPF methods.  Scenario 3\n   (Figure 3) further illustrates the enhanced\
    \ feasible-path uRPF method\n   with a more concrete example.  In this scenario,\
    \ the focus is on\n   operation of the EFP-uRPF at ISP4 (AS4).  ISP4 learns a\
    \ route for\n   prefix P1 via a C2P interface from customer ISP2 (AS2).  This\
    \ route\n   for P1 has origin AS1.  ISP4 also learns a route for P2 via another\n\
    \   C2P interface from customer ISP3 (AS3).  Additionally, AS4 learns a\n   route\
    \ for P3 via a lateral P2P interface from ISP5 (AS5).  Routes for\n   all three\
    \ prefixes have the same origin AS (i.e., AS1).  Using the\n   enhanced feasible-path\
    \ uRPF scheme and given the commonality of the\n   origin AS across the routes\
    \ for P1, P2, and P3, AS4 includes all of\n   these prefixes in the RPF list for\
    \ the customer interfaces (from AS2\n   and AS3).\n                    | AS4(ISP4)|<---------------|\
    \  AS5(ISP5) |\n            P1[AS2 AS1]/       \\P2[AS3 AS1]           /\n   \
    \              (C2P)/         \\(C2P)               /\n              | AS2(ISP2)|\
    \    | AS3(ISP3)|        /\n                  P1[AS1]\\         /P2[AS1]   /P3[AS1]\n\
    \                     (C2P)\\       /(C2P)     /(C2P)\n                      \
    \  |  AS1(customer) |/\n                             P1, P2, P3 (prefixes originated)\n\
    \            Consider that data packets (sourced from AS1)\n            may be\
    \ received at AS4 with a source address\n            in P1, P2, or P3 via any\
    \ of the neighbors (AS2, AS3, AS5):\n            * Feasible-path uRPF fails\n\
    \            * Loose uRPF works (but not desirable)\n            * Enhanced feasible-path\
    \ uRPF works best\n     Figure 3: Scenario 3 for Illustration of Efficacy of uRPF\
    \ Schemes\n"
- title: '3.1.1.  Algorithm A: Enhanced Feasible-Path uRPF'
  contents:
  - "3.1.1.  Algorithm A: Enhanced Feasible-Path uRPF\n   The underlying algorithm\
    \ in the solution method described above\n   (Section 3.1) can be specified as\
    \ follows (to be implemented in a\n   transit AS):\n   1.  Create the set of unique\
    \ origin ASes considering only the routes\n       in the Adj-RIBs-In of customer\
    \ interfaces.  Call it Set A = {AS1,\n       AS2, ..., ASn}.\n   2.  Considering\
    \ all routes in Adj-RIBs-In for all interfaces\n       (customer, lateral peer,\
    \ and transit provider), form the set of\n       unique prefixes that have a common\
    \ origin AS1.  Call it Set X1.\n   3.  Include Set X1 in the RPF list on all customer\
    \ interfaces on\n       which one or more of the prefixes in Set X1 were received.\n\
    \   4.  Repeat Steps 2 and 3 for each of the remaining ASes in Set A\n       (i.e.,\
    \ for ASi, where i = 2, ..., n).\n   The above algorithm can also be extended\
    \ to apply the EFP-uRPF method\n   to lateral peer interfaces.  However, it is\
    \ left up to the operator\n   to decide whether they should apply the EFP-uRPF\
    \ or loose uRPF method\n   on lateral peer interfaces.  The loose uRPF method\
    \ is recommended to\n   be applied on transit provider interfaces.\n"
- title: 3.2.  Operational Recommendations
  contents:
  - "3.2.  Operational Recommendations\n   The following operational recommendations\
    \ will make the operation of\n   the enhanced feasible-path uRPF robust:\n   For\
    \ multihomed stub AS:\n   *  A multihomed stub AS should announce at least one\
    \ of the prefixes\n      it originates to each of its transit provider ASes. \
    \ (It is\n      understood that a single-homed stub AS would announce all prefixes\n\
    \      it originates to its sole transit provider AS.)\n   For non-stub AS:\n\
    \   *  A non-stub AS should also announce at least one of the prefixes it\n  \
    \    originates to each of its transit provider ASes.\n   *  Additionally, from\
    \ the routes it has learned from customers, a\n      non-stub AS SHOULD announce\
    \ at least one route per origin AS to\n      each of its transit provider ASes.\n"
- title: 3.3.  A Challenging Scenario
  contents:
  - "3.3.  A Challenging Scenario\n   It should be observed that in the absence of\
    \ ASes adhering to above\n   recommendations, the following example scenario,\
    \ which poses a\n   challenge for the enhanced feasible-path uRPF (as well as\
    \ for\n   traditional feasible-path uRPF), may be constructed.  In the scenario\n\
    \   illustrated in Figure 4, since routes for neither P1 nor P2 are\n   propagated\
    \ on the AS2-AS4 interface (due to the presence of NO_EXPORT\n   Community), the\
    \ enhanced feasible-path uRPF at AS4 will reject data\n   packets received on\
    \ that interface with source addresses in P1 or P2.\n   (For a little more complex\
    \ example scenario, see slide #10 in\n   [Sriram-URPF].)\n                   \
    \ | AS4(ISP4)|\n         P1 and P2 not /       \\ P2[AS3 AS1]\n           propagated\
    \ /         \\ (C2P)\n             (C2P)   /           \\\n              | AS2(ISP2)|\
    \    | AS3(ISP3)|\n       P1[AS1] NO_EXPORT \\         / P2[AS1]\n       P2[AS1]\
    \ NO_EXPORT  \\       / (C2P)\n                    (C2P)  \\     /\n         \
    \               |  AS1(customer) |\n                             P1, P2 (prefixes\
    \ originated)\n          Consider that data packets (sourced from AS1)\n     \
    \     may be received at AS4 with a source address\n          in P1 or P2 via\
    \ AS2:\n          * Feasible-path uRPF fails\n          * Loose uRPF works (but\
    \ not desirable)\n          * Enhanced feasible-path uRPF with Algorithm A fails\n\
    \          * Enhanced feasible-path uRPF with Algorithm B works best\n       \
    \       Figure 4: Illustration of a Challenging Scenario\n"
- title: '3.4.  Algorithm B: Enhanced Feasible-Path uRPF with Additional'
  contents:
  - "3.4.  Algorithm B: Enhanced Feasible-Path uRPF with Additional\n      Flexibility\
    \ across Customer Cone\n   Adding further flexibility to the enhanced feasible-path\
    \ uRPF method\n   can help address the potential limitation identified above using\
    \ the\n   scenario in Figure 4 (Section 3.3).  In the following, \"route\" refers\n\
    \   to a route currently existing in the Adj-RIBs-In.  Including the\n   additional\
    \ degree of flexibility, the modified algorithm called\n   Algorithm B (implemented\
    \ in a transit AS) can be described as\n   follows:\n   1.  Create the set of\
    \ all directly connected customer interfaces.\n       Call it Set I = {I1, I2,\
    \ ..., Ik}.\n   2.  Create the set of all unique prefixes for which routes exist\
    \ in\n       Adj-RIBs-In for the interfaces in Set I.  Call it Set P = {P1,\n\
    \       P2, ..., Pm}.\n   3.  Create the set of all unique origin ASes seen in\
    \ the routes that\n       exist in Adj-RIBs-In for the interfaces in Set I.  Call\
    \ it Set A\n       = {AS1, AS2, ..., ASn}.\n   4.  Create the set of all unique\
    \ prefixes for which routes exist in\n       Adj-RIBs-In of all lateral peer and\
    \ transit provider interfaces\n       such that each of the routes has its origin\
    \ AS belonging in Set\n       A.  Call it Set Q = {Q1, Q2, ..., Qj}.\n   5.  Then,\
    \ Set Z = Union(P,Q) is the RPF list that is applied for\n       every customer\
    \ interface in Set I.\n   When Algorithm B (which is more flexible than Algorithm\
    \ A) is\n   employed on customer interfaces, the type of limitation identified\
    \ in\n   Figure 4 (Section 3.3) is overcome and the method works.  The\n   directionality\
    \ property is minimally compromised, but the proposed\n   EFP-uRPF method with\
    \ Algorithm B is still a much better choice (for\n   the scenario under consideration)\
    \ than applying the loose uRPF\n   method, which is oblivious to directionality.\n\
    \   So, applying the EFP-uRPF method with Algorithm B is recommended on\n   customer\
    \ interfaces for the challenging scenarios, such as those\n   described in Section\
    \ 3.3.\n"
- title: 3.5.  Augmenting RPF Lists with ROA and IRR Data
  contents:
  - "3.5.  Augmenting RPF Lists with ROA and IRR Data\n   It is worth emphasizing\
    \ that an indirect part of the proposal in this\n   document is that RPF filters\
    \ may be augmented from secondary sources.\n   Hence, the construction of RPF\
    \ lists using a method proposed in this\n   document (Algorithm A or B) can be\
    \ augmented with data from Route\n   Origin Authorization (ROA) [RFC6482], as\
    \ well as Internet Routing\n   Registry (IRR) data.  Special care should be exercised\
    \ when using IRR\n   data because it is not always accurate or trusted.  In the\
    \ EFP-uRPF\n   method with Algorithm A (see Section 3.1.1), if a ROA includes\
    \ prefix\n   Pi and ASj, then augment the RPF list of each customer interface\
    \ on\n   which at least one route with origin ASj was received with prefix Pi.\n\
    \   In the EFP-uRPF method with Algorithm B, if ASj belongs in Set A (see\n  \
    \ Step #3 Section 3.4) and if a ROA includes prefix Pi and ASj, then\n   augment\
    \ the RPF list Z in Step 5 of Algorithm B with prefix Pi.\n   Similar procedures\
    \ can be followed with reliable IRR data as well.\n   This will help make the\
    \ RPF lists more robust about source addresses\n   that may be legitimately used\
    \ by customers of the ISP.\n"
- title: 3.6.  Implementation and Operations Considerations
  contents:
  - '3.6.  Implementation and Operations Considerations

    '
- title: 3.6.1.  Impact on FIB Memory Size Requirement
  contents:
  - "3.6.1.  Impact on FIB Memory Size Requirement\n   The existing RPF checks in\
    \ edge routers take advantage of existing\n   line card implementations to perform\
    \ the RPF functions.  For\n   implementation of the enhanced feasible-path uRPF,\
    \ the general\n   necessary feature would be to extend the line cards to take\
    \ arbitrary\n   RPF lists that are not necessarily the same as the existing FIB\n\
    \   contents.  In the algorithms (Sections 3.1.1 and 3.4) described here,\n  \
    \ the RPF lists are constructed by applying a set of rules to all\n   received\
    \ BGP routes (not just those selected as best path and\n   installed in the FIB).\
    \  The concept of uRPF querying an RPF list\n   (instead of the FIB) is similar\
    \ to uRPF querying a VRF table (see\n   Section 2.5).\n   The techniques described\
    \ in this document require that there should\n   be additional memory (i.e., ternary\
    \ content-addressable memory\n   (TCAM)) available to store the RPF lists in line\
    \ cards.  For an ISP's\n   AS, the RPF list size for each line card will roughly\
    \ equal the total\n   number of originated prefixes from ASes in its customer\
    \ cone\n   (assuming Algorithm B in Section 3.4 is used).  (Note: EFP-uRPF with\n\
    \   Algorithm A (see Section 3.1.1) requires much less memory than EFP-\n   uRPF\
    \ with Algorithm B.)\n   The following table shows the measured customer cone\
    \ sizes in number\n   of prefixes originated (from all ASes in the customer cone)\
    \ for\n   various types of ISPs [Sriram-RIPE63]:\n          | Type of    | Measured\
    \ Customer Cone Size in #      |\n          | ISP        | Prefixes (in turn this\
    \ is an estimate |\n          |            | for RPF list size on the line card)\
    \   |\n          | Very Large | 32393                                 |\n    \
    \      | Global ISP |                                       |\n          | #1\
    \         |                                       |\n          | Very Large |\
    \ 29528                                 |\n          | Global ISP |          \
    \                             |\n          | #2         |                    \
    \                   |\n          | Large      | 20038                        \
    \         |\n          | Global ISP |                                       |\n\
    \          | Mid-size   | 8661                                  |\n          |\
    \ Global ISP |                                       |\n          | Regional \
    \  | 1101                                  |\n          | ISP (in    |       \
    \                                |\n          | Asia)      |                 \
    \                      |\n              Table 1: Customer Cone Sizes (# Prefixes)\
    \ for\n                          Various Types of ISPs\n   For some super large\
    \ global ISPs that are at the core of the\n   Internet, the customer cone size\
    \ (# prefixes) can be as high as a few\n   hundred thousand [CAIDA], but uRPF\
    \ is most effective when deployed at\n   ASes at the edges of the Internet where\
    \ the customer cone sizes are\n   smaller, as shown in Table 1.\n   A very large\
    \ global ISP's router line card is likely to have a FIB\n   size large enough\
    \ to accommodate 2 million routes [Cisco1].\n   Similarly, the line cards in routers\
    \ corresponding to a large global\n   ISP, a midsize global ISP, and a regional\
    \ ISP are likely to have FIB\n   sizes large enough to accommodate about 1 million,\
    \ 0.5 million, and\n   100k routes, respectively [Cisco2].  Comparing these FIB\
    \ size numbers\n   with the corresponding RPF list size numbers in Table 1, it\
    \ can be\n   surmised that the conservatively estimated RPF list size is only\
    \ a\n   small fraction of the anticipated FIB memory size under relevant ISP\n\
    \   scenarios.  What is meant here by relevant ISP scenarios is that only\n  \
    \ smaller ISPs (and possibly some midsize and regional ISPs) are\n   expected\
    \ to implement the proposed EFP-uRPF method since it is most\n   effective closer\
    \ to the edges of the Internet.\n"
- title: 3.6.2.  Coping with BGP's Transient Behavior
  contents:
  - "3.6.2.  Coping with BGP's Transient Behavior\n   BGP routing announcements can\
    \ exhibit transient behavior.  Routes may\n   be withdrawn temporarily and then\
    \ reannounced due to transient\n   conditions, such as BGP session reset or link\
    \ failure recovery.  To\n   cope with this, hysteresis should be introduced in\
    \ the maintenance of\n   the RPF lists.  Deleting entries from the RPF lists SHOULD\
    \ be delayed\n   by a predetermined amount (the value based on operational experience)\n\
    \   when responding to route withdrawals.  This should help suppress the\n   effects\
    \ due to the transients in BGP.\n"
- title: 3.7.  Summary of Recommendations
  contents:
  - "3.7.  Summary of Recommendations\n   Depending on the scenario, an ISP or enterprise\
    \ AS operator should\n   follow one of the following recommendations concerning\
    \ uRPF/SAV:\n   1.  For directly connected networks, i.e., subnets directly connected\n\
    \       to the AS, the AS under consideration SHOULD perform ACL-based\n     \
    \  SAV.\n   2.  For a directly connected single-homed stub AS (customer), the\
    \ AS\n       under consideration SHOULD perform SAV based on the strict uRPF\n\
    \       method.\n   3.  For all other scenarios:\n       *  The EFP-uRPF method\
    \ with Algorithm B (see Section 3.4) SHOULD\n          be applied on customer\
    \ interfaces.\n       *  The loose uRPF method SHOULD be applied on lateral peer\
    \ and\n          transit provider interfaces.\n   It is also recommended that\
    \ prefixes from registered ROAs and IRR\n   route objects that include ASes in\
    \ an ISP's customer cone SHOULD be\n   used to augment the pertaining RPF lists\
    \ (see Section 3.5 for\n   details).\n"
- title: 3.7.1.  Applicability of the EFP-uRPF Method with Algorithm A
  contents:
  - "3.7.1.  Applicability of the EFP-uRPF Method with Algorithm A\n   The EFP-uRPF\
    \ method with Algorithm A is not mentioned in the above\n   set of recommendations.\
    \  It is an alternative to EFP-uRPF with\n   Algorithm B and can be used in limited\
    \ circumstances.  The EFP-uRPF\n   method with Algorithm A is expected to work\
    \ fine if an ISP deploying\n   it has only multihomed stub customers.  It is trivially\
    \ equivalent to\n   strict uRPF if an ISP deploys it for a single-homed stub customer.\n\
    \   More generally, it is also expected to work fine when there is\n   absence\
    \ of limitations, such as those described in Section 3.3.\n   However, caution\
    \ is required for use of EFP-uRPF with Algorithm A\n   because even if the limitations\
    \ are not expected at the time of\n   deployment, the vulnerability to change\
    \ in conditions exists.  It may\n   be difficult for an ISP to know or track the\
    \ extent of use of\n   NO_EXPORT (see Section 3.3) on routes within its customer\
    \ cone.  If\n   an ISP decides to use EFP-uRPF with Algorithm A, it should make\
    \ its\n   direct customers aware of the operational recommendations in\n   Section\
    \ 3.2.  This means that the ISP notifies direct customers that\n   at least one\
    \ prefix originated by each AS in the direct customer's\n   customer cone must\
    \ propagate to the ISP.\n   On a lateral peer interface, an ISP may choose to\
    \ apply the EFP-uRPF\n   method with Algorithm A (with appropriate modification\
    \ of the\n   algorithm).  This is because stricter forms of uRPF (than the loose\n\
    \   uRPF) may be considered applicable by some ISPs on interfaces with\n   lateral\
    \ peers.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   The security considerations in BCP 38 [RFC2827]\
    \ and RFC 3704\n   [RFC3704] apply for this document as well.  In addition, if\n\
    \   considering using the EFP-uRPF method with Algorithm A, an ISP or AS\n   operator\
    \ should be aware of the applicability considerations and\n   potential vulnerabilities\
    \ discussed in Section 3.7.1.\n   In augmenting RPF lists with ROA (and possibly\
    \ reliable IRR)\n   information (see Section 3.5), a trade-off is made in favor\
    \ of\n   reducing false positives (regarding invalid detection in SAV) at the\n\
    \   expense of another slight risk.  The other risk being that a\n   malicious\
    \ actor at another AS in the neighborhood within the customer\n   cone might take\
    \ advantage (of the augmented prefix) to some extent.\n   This risk also exists\
    \ even with normal announced prefixes (i.e.,\n   without ROA augmentation) for\
    \ any uRPF method other than the strict\n   uRPF.  However, the risk is mitigated\
    \ if the transit provider of the\n   other AS in question is performing SAV.\n\
    \   Though not within the scope of this document, security hardening of\n   routers\
    \ and other supporting systems (e.g., Resource PKI (RPKI) and\n   ROA management\
    \ systems) against compromise is extremely important.\n   The compromise of those\
    \ systems can affect the operation and\n   performance of the SAV methods described\
    \ in this document.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This document has no IANA actions.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC2827]  Ferguson, P. and D. Senie, \"Network Ingress Filtering:\n     \
    \         Defeating Denial of Service Attacks which employ IP Source\n       \
    \       Address Spoofing\", BCP 38, RFC 2827, DOI 10.17487/RFC2827,\n        \
    \      May 2000, <https://www.rfc-editor.org/info/rfc2827>.\n   [RFC3704]  Baker,\
    \ F. and P. Savola, \"Ingress Filtering for Multihomed\n              Networks\"\
    , BCP 84, RFC 3704, DOI 10.17487/RFC3704, March\n              2004, <https://www.rfc-editor.org/info/rfc3704>.\n\
    \   [RFC4271]  Rekhter, Y., Ed., Li, T., Ed., and S. Hares, Ed., \"A\n       \
    \       Border Gateway Protocol 4 (BGP-4)\", RFC 4271,\n              DOI 10.17487/RFC4271,\
    \ January 2006,\n              <https://www.rfc-editor.org/info/rfc4271>.\n  \
    \ [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n       \
    \       2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n          \
    \    May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [CAIDA]    CAIDA, \"Information for AS 174 (COGENT-174)\"\
    , October\n              2019, <https://spoofer.caida.org/as.php?asn=174>.\n \
    \  [Cisco1]   Cisco, \"Internet Routing Table Growth Causes %ROUTING-FIB-\n  \
    \            4-RSRC_LOW Message on Trident-Based Line Cards\", January\n     \
    \         2014, <https://www.cisco.com/c/en/us/support/docs/routers/\n       \
    \       asr-9000-series-aggregation-services-routers/116999-\n              problem-line-card-00.html>.\n\
    \   [Cisco2]   Cisco, \"Cisco Nexus 7000 Series NX-OS Unicast Routing\n      \
    \        Configuration Guide, Release 5.x (Chapter 15: 'Managing\n           \
    \   the Unicast RIB and FIB')\", March 2018,\n              <https://www.cisco.com/c/en/us/td/docs/switches/\n\
    \              datacenter/sw/5_x/nx-\n              os/unicast/configuration/guide/l3_cli_nxos/\n\
    \              l3_NewChange.html>.\n   [Firmin]   Firmin, F., \"The Evolved Packet\
    \ Core\",\n              <https://www.3gpp.org/technologies/keywords-acronyms/100-\n\
    \              the-evolved-packet-core>.\n   [ISOC]     Internet Society, \"Addressing\
    \ the challenge of IP\n              spoofing\", September 2015,\n           \
    \   <https://www.internetsociety.org/resources/doc/2015/\n              addressing-the-challenge-of-ip-spoofing/>.\n\
    \   [Juniper]  Juniper Networks, \"Creating Unique VPN Routes Using VRF\n    \
    \          Tables\", May 2019,\n              <https://www.juniper.net/documentation/en_US/junos/topics/\n\
    \              topic-map/l3-vpns-routes-vrf-tables.html#id-understanding-\n  \
    \            virtual-routing-and-forwarding-tables>.\n   [Luckie]   Luckie, M.,\
    \ Huffaker, B., Dhamdhere, A., Giotsas, V., and\n              kc. claffy, \"\
    AS Relationships, customer cones, and\n              validation\", In Proceedings\
    \ of the 2013 Internet\n              Measurement Conference, DOI 10.1145/2504730.2504735,\n\
    \              October 2013,\n              <https://dl.acm.org/doi/10.1145/2504730.2504735>.\n\
    \   [RFC4036]  Sawyer, W., \"Management Information Base for Data Over\n     \
    \         Cable Service Interface Specification (DOCSIS) Cable Modem\n       \
    \       Termination Systems for Subscriber Management\", RFC 4036,\n         \
    \     DOI 10.17487/RFC4036, April 2005,\n              <https://www.rfc-editor.org/info/rfc4036>.\n\
    \   [RFC4364]  Rosen, E. and Y. Rekhter, \"BGP/MPLS IP Virtual Private\n     \
    \         Networks (VPNs)\", RFC 4364, DOI 10.17487/RFC4364, February\n      \
    \        2006, <https://www.rfc-editor.org/info/rfc4364>.\n   [RFC6482]  Lepinski,\
    \ M., Kent, S., and D. Kong, \"A Profile for Route\n              Origin Authorizations\
    \ (ROAs)\", RFC 6482,\n              DOI 10.17487/RFC6482, February 2012,\n  \
    \            <https://www.rfc-editor.org/info/rfc6482>.\n   [RFC6811]  Mohapatra,\
    \ P., Scudder, J., Ward, D., Bush, R., and R.\n              Austein, \"BGP Prefix\
    \ Origin Validation\", RFC 6811,\n              DOI 10.17487/RFC6811, January\
    \ 2013,\n              <https://www.rfc-editor.org/info/rfc6811>.\n   [RFC7454]\
    \  Durand, J., Pepelnjak, I., and G. Doering, \"BGP Operations\n             \
    \ and Security\", BCP 194, RFC 7454, DOI 10.17487/RFC7454,\n              February\
    \ 2015, <https://www.rfc-editor.org/info/rfc7454>.\n   [SPAR-v4]  IANA, \"IANA\
    \ IPv4 Special-Purpose Address Registry\",\n              <https://www.iana.org/assignments/iana-ipv4-special-\n\
    \              registry/>.\n   [SPAR-v6]  IANA, \"IANA IPv6 Special-Purpose Address\
    \ Registry\",\n              <https://www.iana.org/assignments/iana-ipv6-special-\n\
    \              registry/>.\n   [Sriram-RIPE63]\n              Sriram, K. and R.\
    \ Bush, \"Estimating CPU Cost of BGPSEC on\n              a Router\", Presented\
    \ at RIPE 63 and at the SIDR WG meeting\n              at IETF 83, March 2012,\n\
    \              <http://www.ietf.org/proceedings/83/slides/slides-83-sidr-\n  \
    \            7.pdf>.\n   [Sriram-URPF]\n              Sriram, K., Montgomery,\
    \ D., and J. Haas, \"Enhanced\n              Feasible-Path Unicast Reverse Path\
    \ Filtering\", Presented\n              at the OPSEC WG meeting at IETF 101, March\
    \ 2018,\n              <https://datatracker.ietf.org/meeting/101/materials/\n\
    \              slides-101-opsec-draft-sriram-opsec-urpf-improvements-00>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors would like to thank Sandy Murphy, Alvaro Retana,\
    \ Job\n   Snijders, Marco Marzetti, Marco d'Itri, Nick Hilliard, Gert Doering,\n\
    \   Fred Baker, Igor Gashinsky, Igor Lubashev, Andrei Robachevsky, Barry\n   Greene,\
    \ Amir Herzberg, Ruediger Volk, Jared Mauch, Oliver Borchert,\n   Mehmet Adalier,\
    \ and Joel Jaeggli for comments and suggestions.  The\n   comments and suggestions\
    \ received from the IESG reviewers are also\n   much appreciated.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Kotikalapudi Sriram\n   USA National Institute of Standards\
    \ and Technology\n   100 Bureau Drive\n   Gaithersburg, MD 20899\n   United States\
    \ of America\n   Email: ksriram@nist.gov\n   Doug Montgomery\n   USA National\
    \ Institute of Standards and Technology\n   100 Bureau Drive\n   Gaithersburg,\
    \ MD 20899\n   United States of America\n   Email: dougm@nist.gov\n   Jeffrey\
    \ Haas\n   Juniper Networks, Inc.\n   1133 Innovation Way\n   Sunnyvale, CA 94089\n"
