- title: __initial_text__
  contents:
  - "                         RTP Payload Format for\n       Society of Motion Picture\
    \ and Television Engineers (SMPTE)\n                          ST 336 Encoded Data\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies the payload format for packetization of\
    \ KLV\n   (Key-Length-Value) Encoded Data, as defined by the Society of Motion\n\
    \   Picture and Television Engineers (SMPTE) in SMPTE ST 336, into the\n   Real-time\
    \ Transport Protocol (RTP).\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6597.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Conventions, Definitions, and Acronyms ..........................3\n  \
    \ 3. Media Format Background .........................................3\n   4.\
    \ Payload Format ..................................................4\n      4.1.\
    \ RTP Header Usage ...........................................5\n      4.2. Payload\
    \ Data ...............................................5\n           4.2.1. The\
    \ KLVunit .........................................5\n           4.2.2. KLVunit\
    \ Mapping to RTP Packet Payload ...............6\n      4.3. Implementation Considerations\
    \ ..............................6\n           4.3.1. Loss of Data ........................................6\n\
    \                  4.3.1.1. Damaged KLVunits ...........................7\n  \
    \                4.3.1.2. Treatment of Damaged KLVunits ..............9\n   5.\
    \ Congestion Control ..............................................9\n   6. Payload\
    \ Format Parameters .......................................9\n      6.1. Media\
    \ Type Definition ......................................9\n      6.2. Mapping\
    \ to SDP ............................................10\n           6.2.1. Offer/Answer\
    \ Model and Declarative Considerations ..10\n   7. IANA Considerations ............................................11\n\
    \   8. Security Considerations ........................................11\n  \
    \ 9. References .....................................................12\n    \
    \  9.1. Normative References ......................................12\n      9.2.\
    \ Informative References ....................................12\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document specifies the payload format for packetization\
    \ of KLV\n   (Key-Length-Value) Encoded Data, as defined by the Society of Motion\n\
    \   Picture and Television Engineers (SMPTE) in [SMPTE-ST336], into the\n   Real-time\
    \ Transport Protocol (RTP) [RFC3550].\n   The payload format is defined in such\
    \ a way that arbitrary KLV data\n   can be carried.  No restrictions are placed\
    \ on which KLV data keys\n   can be used.\n   A brief description of SMPTE ST\
    \ 336, \"Data Encoding Protocol Using\n   Key-Length-Value\", is given.  The payload\
    \ format itself, including\n   use of the RTP header fields, is specified in Section\
    \ 4.  The media\n   type and IANA considerations are also described.  This document\n\
    \   concludes with security considerations relevant to this payload\n   format.\n"
- title: 2.  Conventions, Definitions, and Acronyms
  contents:
  - "2.  Conventions, Definitions, and Acronyms\n   The term \"Universal Label Key\"\
    \ is used in this document to refer to a\n   fixed-length, 16-byte SMPTE-administered\
    \ Universal Label (see\n   [SMPTE-ST298]) that is used as an identifying key in\
    \ a KLV item.\n   The term \"KLV item\" is used in this document to refer to one\
    \ single\n   Universal Label Key, length, and value triplet encoded as described\n\
    \   in [SMPTE-ST336].\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",\
    \ \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 3.  Media Format Background
  contents:
  - "3.  Media Format Background\n   [SMPTE-ST336], \"Data Encoding Protocol Using\
    \ Key-Length-Value\",\n   defines a byte-level data encoding protocol for representing\
    \ data\n   items and data groups.  This encoding protocol definition is\n   independent\
    \ of the application or transportation method used.\n   SMPTE ST 336 data encoding\
    \ can be applied to a wide variety of binary\n   data.  This encoding has been\
    \ used to provide diverse and rich\n   metadata sets that describe or enhance\
    \ associated video\n   presentations.  Use of SMPTE ST 336 encoded metadata in\
    \ conjunction\n   with video has enabled improvements in multimedia presentations,\n\
    \   content management and distribution, archival and retrieval, and\n   production\
    \ workflow.\n   The SMPTE ST 336 standard defines a KLV triplet as a data interchange\n\
    \   protocol for data items or data groups where the Key identifies the\n   data,\
    \ the Length specifies the length of the data, and the Value is\n   the data itself.\
    \  The KLV protocol provides a common interchange\n   point for all compliant\
    \ applications irrespective of the method of\n   implementation or transport.\n\
    \   The Key of a KLV triplet (a Universal Label Key) is coded using a\n   fixed-length\
    \ 16-byte SMPTE-administered Universal Label.\n   [SMPTE-ST298] further details\
    \ the structure of 16-byte SMPTE-\n   administered Universal Labels.  Universal\
    \ Label Keys are maintained\n   in registries published by SMPTE (see, for example,\
    \ [SMPTE-ST335] and\n   [SMPTE-RP210]).\n   The standard also provides methods\
    \ for combining associated KLV\n   triplets in data sets where the set of KLV\
    \ triplets is itself coded\n   with the KLV data coding protocol.  Such sets can\
    \ be coded in either\n   full form (Universal Sets) or one of four increasingly\
    \ bit-efficient\n   forms (Global Sets, Local Sets, Variable Length Packs, and\
    \ Defined\n   Length Packs).  The standard provides a definition of each of these\n\
    \   data constructs.\n   Additionally, the standard defines the use of KLV coding\
    \ to provide a\n   means to carry information that is registered with a non-SMPTE\n\
    \   external agency.\n"
- title: 4.  Payload Format
  contents:
  - "4.  Payload Format\n   The main goal of the payload format design for SMPTE ST\
    \ 336 data is\n   to provide carriage of SMPTE ST 336 data over RTP in a simple,\
    \ yet\n   robust manner.  All forms of SMPTE ST 336 data can be carried by the\n\
    \   payload format.  The payload format maintains simplicity by using\n   only\
    \ the standard RTP headers and not defining any payload headers.\n   SMPTE ST\
    \ 336 KLV data is broken into KLVunits.  A KLVunit is simply a\n   logical grouping\
    \ of otherwise unframed KLV data, grouped based on\n   source data timing (see\
    \ Section 4.2.1).  Each KLVunit is then placed\n   into one or more RTP packet\
    \ payloads.  The RTP header marker bit is\n   used to assist receivers in locating\
    \ the boundaries of KLVunits.\n"
- title: 4.1.  RTP Header Usage
  contents:
  - "4.1.  RTP Header Usage\n   This payload format uses the RTP packet header fields\
    \ as described in\n   the table below:\n   +-----------+-------------------------------------------------------+\n\
    \   | Field     | Usage                                                 |\n  \
    \ +-----------+-------------------------------------------------------+\n   |\
    \ Timestamp | The RTP Timestamp encodes the instant along a         |\n   |  \
    \         | presentation timeline that the entire KLVunit encoded |\n   |    \
    \       | in the packet payload is to be presented.  When one   |\n   |      \
    \     | KLVunit is placed in multiple RTP packets, the RTP    |\n   |        \
    \   | timestamp of all packets comprising that KLVunit MUST |\n   |          \
    \ | be the same.  The timestamp clock frequency is        |\n   |           |\
    \ defined as a parameter to the payload format          |\n   |           | (Section\
    \ 6).                                          |\n   |           |           \
    \                                            |\n   | M-bit     | The RTP header\
    \ marker bit (M) is used to demarcate    |\n   |           | KLVunits.  Senders\
    \ MUST set the marker bit to '1' for |\n   |           | any RTP packet that contains\
    \ the final byte of a      |\n   |           | KLVunit.  For all other packets,\
    \ senders MUST set the |\n   |           | RTP header marker bit to '0'.  This\
    \ allows receivers  |\n   |           | to pass a KLVunit for parsing/decoding\
    \ immediately    |\n   |           | upon receipt of the last RTP packet comprising\
    \ the    |\n   |           | KLVunit.  Without this, a receiver would need to\
    \ wait |\n   |           | for the next RTP packet with a different timestamp\
    \ to |\n   |           | arrive, thus signaling the end of one KLVunit and the\
    \ |\n   |           | start of another.                                     |\n\
    \   +-----------+-------------------------------------------------------+\n  \
    \ The remaining RTP header fields are used as specified in [RFC3550].\n"
- title: 4.2.  Payload Data
  contents:
  - '4.2.  Payload Data

    '
- title: 4.2.1.  The KLVunit
  contents:
  - "4.2.1.  The KLVunit\n   A KLVunit is a logical collection of all KLV items that\
    \ are to be\n   presented at a specific time.  A KLVunit is comprised of one or\
    \ more\n   KLV items.  Compound items (sets, packs) are allowed as per\n   [SMPTE-ST336],\
    \ but the contents of a compound item MUST NOT be split\n   across two KLVunits.\
    \  Multiple KLV items in a KLVunit occur one after\n   another with no padding\
    \ or stuffing between items.\n"
- title: 4.2.2.  KLVunit Mapping to RTP Packet Payload
  contents:
  - "4.2.2.  KLVunit Mapping to RTP Packet Payload\n   An RTP packet payload SHALL\
    \ contain one, and only one, KLVunit or a\n   fragment thereof.  KLVunits small\
    \ enough to fit into a single RTP\n   packet (RTP packet size is up to the implementation\
    \ but should\n   consider underlying transport/network factors such as MTU\n \
    \  limitations) are placed directly into the payload of the RTP packet,\n   with\
    \ the first byte of the KLVunit (which is the first byte of a KLV\n   Universal\
    \ Label Key) being the first byte of the RTP packet payload.\n   KLVunits too\
    \ large to fit into a single RTP packet payload MAY span\n   multiple RTP packet\
    \ payloads.  When this is done, the KLVunit data\n   MUST be sent in sequential\
    \ byte order, such that when all RTP packets\n   comprising the KLVunit are arranged\
    \ in sequence number order,\n   concatenating the payload data together exactly\
    \ reproduces the\n   original KLVunit.\n   Additionally, when a KLVunit is fragmented\
    \ across multiple RTP\n   packets, all RTP packets transporting the fragments\
    \ of a KLVunit MUST\n   have the same timestamp.\n   KLVunits are bounded with\
    \ changes in RTP packet timestamps.  The\n   marker (M) bit in the RTP packet\
    \ headers marks the last RTP packet\n   comprising a KLVunit (see Section 4.1).\n"
- title: 4.3.  Implementation Considerations
  contents:
  - '4.3.  Implementation Considerations

    '
- title: 4.3.1.  Loss of Data
  contents:
  - "4.3.1.  Loss of Data\n   RTP is generally deployed in network environments where\
    \ packet loss\n   might occur.  RTP header fields enable detection of lost packets,\
    \ as\n   described in [RFC3550].  When transmitting payload data described by\n\
    \   this payload format, packet loss can cause the loss of whole KLVunits\n  \
    \ or portions thereof.\n"
- title: 4.3.1.1.  Damaged KLVunits
  contents:
  - "4.3.1.1.  Damaged KLVunits\n   A damaged KLVunit is any KLVunit that was carried\
    \ in one or more RTP\n   packets that have been lost.  When a lost packet is detected\
    \ (through\n   use of the sequence number header field), the receiver\n   o  MUST\
    \ consider the KLVunit partially received before a lost packet\n      as damaged.\
    \  This damaged KLVunit includes all packets prior to\n      the lost one (in\
    \ sequence number order) back to, but not\n      including, the most recent packet\
    \ in which the M-bit in the RTP\n      header was set to '1'.\n   o  MUST consider\
    \ the first KLVunit received after a lost packet as\n      damaged.  This damaged\
    \ KLVunit includes the first packet after the\n      lost one (in sequence number\
    \ order) and, if the first packet has\n      its M-bit in the RTP header set to\
    \ '0', all subsequent packets up\n      to and including the next one with the\
    \ M-bit in the RTP header set\n      to '1'.\n   The above applies, regardless\
    \ of the M-bit value in the RTP header of\n   the lost packet itself.  This enables\
    \ very basic receivers to look\n   solely at the M-bit to determine the outer\
    \ boundaries of damaged\n   KLVunits.  For example, when a packet with the M-bit\
    \ set to '1' is\n   lost, the KLVunit that the lost packet would have terminated\
    \ is\n   considered damaged, as is the KLVunit comprised of packets received\n\
    \   subsequent to the lost packet (up to and including the next received\n   packet\
    \ with the M-bit set to '1').\n   The example below illustrates how a receiver\
    \ would handle a lost\n   packet in another possible packet sequence:\n      \
    \    +---------+-------------+    +--------------+\n          | RTP Hdr | Data\
    \        |    |              |\n          +---------+-------------+    +--------------+\n\
    \     .... | ts = 30 | KLV KLV ... |    |              |  >---+\n          | M\
    \ = 1   |             |    |              |      |\n          | seq = 5 | ...\
    \ KLV KLV |    |              |      |\n          +---------+-------------+  \
    \  +--------------+      |\n           Last RTP pkt for time 30      Lost RTP\
    \ Pkt        |\n                                           (seq = 6)         |\n\
    \                                                             |\n    +--------------------------------------------------------+\n\
    \    |\n    |     +---------+-------------+    +---------+-------------+\n   \
    \ |     | RTP Hdr |     Data    |    | RTP Hdr |     Data    |\n    |     +---------+-------------+\
    \    +---------+-------------+\n    +-->  | ts = 45 | KLV KLV ... |    | ts =\
    \ 45 | ... KLV ... | >---+\n          | M = 0   |             |    | M = 1   |\
    \             |     |\n          | seq = 7 | ... KLV ... |    | seq = 8 | ...\
    \ KLV KLV |     |\n          +---------+-------------+    +---------+-------------+\
    \     |\n             RTP pkt for time 45        Last RTP pkt for time 45    \
    \ |\n              KLVunit carried in these two packets is \"damaged\"      |\n\
    \                                                                     |\n    +----------------------------------------------------------------+\n\
    \    |\n    |     +---------+-------------+\n    |     | RTP Hdr |     Data  \
    \  |\n    |     +---------+-------------+\n    +-->  | ts = 55 | KLV KLV ... |\
    \   ....\n          | M = 1   |             |\n          | seq = 9 | ... KLV ...\
    \ |\n          +---------+-------------+\n           Last and only RTP pkt\n \
    \              for time 55\n   In this example, the packets with sequence numbers\
    \ 7 and 8 contain\n   portions of a KLVunit with a timestamp of 45.  This KLVunit\
    \ is\n   considered \"damaged\" due to the missing RTP packet with sequence\n\
    \   number 6, which might have been part of this KLVunit.  The KLVunit\n   for\
    \ timestamp 30 (ended in packet with sequence number 5) is\n   unaffected by the\
    \ missing packet.  The KLVunit for timestamp 55,\n   carried in the packet with\
    \ sequence number 9, is also unaffected by\n   the missing packet and is considered\
    \ complete and intact.\n"
- title: 4.3.1.2.  Treatment of Damaged KLVunits
  contents:
  - "4.3.1.2.  Treatment of Damaged KLVunits\n   SMPTE ST 336 KLV data streams are\
    \ built in such a way that it is\n   possible to partially recover from errors\
    \ or missing data in a\n   stream.  Exact specifics of how damaged KLVunits are\
    \ handled are left\n   to each implementation, as different implementations can\
    \ have\n   differing capabilities and robustness in their downstream KLV payload\n\
    \   processing.  Because some implementations can be particularly limited\n  \
    \ in their capacity to handle damaged KLVunits, receivers MAY drop\n   damaged\
    \ KLVunits entirely.\n"
- title: 5.  Congestion Control
  contents:
  - "5.  Congestion Control\n   The general congestion control considerations for\
    \ transporting RTP\n   data apply; see RTP [RFC3550] and any applicable RTP profile,\
    \ like\n   AVP [RFC3551].\n   Further, SMPTE ST 336 data can be encoded in different\
    \ schemes that\n   reduce the overhead associated with individual data items within\
    \ the\n   overall stream.  SMPTE ST 336 grouping constructs, such as local sets\n\
    \   and data packs, provide a mechanism to reduce bandwidth requirements.\n"
- title: 6.  Payload Format Parameters
  contents:
  - "6.  Payload Format Parameters\n   This RTP payload format is identified using\
    \ the application/smpte336m\n   media type, which is registered in accordance\
    \ with [RFC4855], and\n   using the template of [RFC4288].\n"
- title: 6.1.  Media Type Definition
  contents:
  - "6.1.  Media Type Definition\n   Type name: application\n   Subtype name: smpte336m\n\
    \   Required parameters:\n      rate: RTP timestamp clock rate.  Typically chosen\
    \ based on\n         sampling rate of metadata being transmitted, but other rates\n\
    \         can be specified.\n   Optional parameters: None\n   Encoding considerations:\
    \ This media type is framed and binary; see\n      Section 4.8 of [RFC4288].\n\
    \   Security considerations: See Section 8 of RFC 6597.\n   Interoperability considerations:\
    \ Data items in smpte336m can be very\n      diverse.  Receivers might only be\
    \ capable of interpreting a subset\n      of the possible data items; unrecognized\
    \ items are skipped.\n      Agreement on data items to be used out of band, via\
    \ application\n      profile or similar, is typical.\n   Published specification:\
    \ RFC 6597\n   Applications that use this media type: Streaming of metadata\n\
    \      associated with simultaneously streamed video and transmission of\n   \
    \   [SMPTE-ST336]-based media formats (e.g., Material Exchange Format\n      (MXF)\
    \ [SMPTE-ST377]).\n   Additional Information: none\n   Person & email address\
    \ to contact for further information: J. Downs\n      <jeff_downs@partech.com>;\
    \ IETF Payload Working Group\n      <payload@ietf.org>\n   Intended usage: COMMON\n\
    \   Restrictions on usage: This media type depends on RTP framing, and\n     \
    \ hence is only defined for transfer via RTP ([RFC3550]).  Transport\n      within\
    \ other framing protocols is not defined at this time.\n   Author:\n      J. Downs\
    \ <jeff_downs@partech.com>\n      J. Arbeiter <jimsgti@gmail.com>\n   Change controller:\
    \ IETF Payload working group delegated from the\n      IESG.\n"
- title: 6.2.  Mapping to SDP
  contents:
  - "6.2.  Mapping to SDP\n   The mapping of the above defined payload format media\
    \ type and its\n   parameters SHALL be done according to Section 3 of [RFC4855].\n"
- title: 6.2.1.  Offer/Answer Model and Declarative Considerations
  contents:
  - "6.2.1.  Offer/Answer Model and Declarative Considerations\n   This payload format\
    \ has no configuration or optional format\n   parameters.  Thus, when offering\
    \ SMPTE ST 336 Encoded Data over RTP\n   using the Session Description Protocol\
    \ (SDP) in an Offer/Answer model\n   [RFC3264] or in a declarative manner (e.g.,\
    \ SDP in the Real-Time\n   Streaming Protocol (RTSP) [RFC2326] or the Session\
    \ Announcement\n   Protocol (SAP) [RFC2974]), there are no specific considerations.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   IANA has registered application/smpte336m as specified\
    \ in\n   Section 6.1.  The media type has been added to the IANA registry for\n\
    \   \"RTP Payload Format media types\"\n   (http://www.iana.org/assignments/rtp-parameters).\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   RTP packets using the payload format defined\
    \ in this specification\n   are subject to the security considerations discussed\
    \ in the RTP\n   specification [RFC3550], and in any applicable RTP profile. \
    \ The main\n   security considerations for the RTP packet carrying the RTP payload\n\
    \   format defined within this memo are confidentiality, integrity, and\n   source\
    \ authenticity.  Confidentiality is achieved by encryption of\n   the RTP payload.\
    \  Integrity of the RTP packets is achieved through a\n   suitable cryptographic\
    \ integrity protection mechanism.  Cryptographic\n   systems may also allow the\
    \ authentication of the source of the\n   payload.  A suitable security mechanism\
    \ for this RTP payload format\n   should provide confidentiality, integrity protection,\
    \ and at least\n   source authentication capable of determining whether or not\
    \ an RTP\n   packet is from a member of the RTP session.\n   Note that the appropriate\
    \ mechanism to provide security to RTP and\n   payloads following this memo may\
    \ vary.  It is dependent on the\n   application, the transport, and the signaling\
    \ protocol employed.\n   Therefore, a single mechanism is not sufficient, although\
    \ if suitable\n   the usage of the Secure Real-time Transport Protocol (SRTP)\
    \ [RFC3711]\n   is recommended.  Other mechanisms that may be used are IPsec\n\
    \   [RFC4301] and Transport Layer Security (TLS) [RFC5246] (RTP over\n   TCP),\
    \ but other alternatives may exist as well.\n   This RTP payload format presents\
    \ the possibility for significant\n   non-uniformity in the receiver-side computational\
    \ complexity during\n   processing of SMPTE ST 336 payload data.  Because the\
    \ length of SMPTE\n   ST 336 encoded data items is essentially unbounded, receivers\
    \ must\n   take care when allocating resources used in processing.  It is easy\n\
    \   to construct pathological data that would cause a naive decoder to\n   allocate\
    \ large amounts of resources, resulting in denial-of-service\n   threats.  Receivers\
    \ SHOULD place limits on resource allocation that\n   are within the bounds set\
    \ forth by any application profile in use.\n   This RTP payload format does not\
    \ contain any inherently active\n   content.  However, individual SMPTE ST 336\
    \ KLV items could be defined\n   to convey active content in a particular application.\
    \  Therefore,\n   receivers capable of decoding and interpreting such data items\
    \ should\n   use appropriate caution and security practices.  In particular,\n\
    \   accepting active content from streams that lack authenticity or\n   integrity\
    \ protection mechanisms places a receiver at risk of attacks\n   using spoofed\
    \ packets.  Receivers not capable of decoding such data\n   items are not at risk;\
    \ unknown data items are skipped over and\n   discarded according to SMPTE ST\
    \ 336 processing rules.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC2119]      Bradner, S., \"Key words for use\
    \ in RFCs to Indicate\n                  Requirement Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   [RFC3550]      Schulzrinne, H., Casner, S., Frederick, R., and\
    \ V.\n                  Jacobson, \"RTP: A Transport Protocol for Real-Time\n\
    \                  Applications\", STD 64, RFC 3550, July 2003.\n   [RFC3551]\
    \      Schulzrinne, H. and S. Casner, \"RTP Profile for Audio\n              \
    \    and Video Conferences with Minimal Control\", STD 65,\n                 \
    \ RFC 3551, July 2003.\n   [RFC4288]      Freed, N. and J. Klensin, \"Media Type\
    \ Specifications\n                  and Registration Procedures\", BCP 13, RFC\
    \ 4288,\n                  December 2005.\n   [RFC4855]      Casner, S., \"Media\
    \ Type Registration of RTP Payload\n                  Formats\", RFC 4855, February\
    \ 2007.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [RFC2326]      Schulzrinne, H., Rao, A., and\
    \ R. Lanphier, \"Real Time\n                  Streaming Protocol (RTSP)\", RFC\
    \ 2326, April 1998.\n   [RFC2974]      Handley, M., Perkins, C., and E. Whelan,\
    \ \"Session\n                  Announcement Protocol\", RFC 2974, October 2000.\n\
    \   [RFC3264]      Rosenberg, J. and H. Schulzrinne, \"An Offer/Answer\n     \
    \             Model with Session Description Protocol (SDP)\",\n             \
    \     RFC 3264, June 2002.\n   [RFC3711]      Baugher, M., McGrew, D., Naslund,\
    \ M., Carrara, E., and\n                  K. Norrman, \"The Secure Real-time Transport\
    \ Protocol\n                  (SRTP)\", RFC 3711, March 2004.\n   [RFC4301]  \
    \    Kent, S. and K. Seo, \"Security Architecture for the\n                  Internet\
    \ Protocol\", RFC 4301, December 2005.\n   [RFC5246]      Dierks, T. and E. Rescorla,\
    \ \"The Transport Layer\n                  Security (TLS) Protocol Version 1.2\"\
    , RFC 5246,\n                  August 2008.\n   [SMPTE-RP210]  Society of Motion\
    \ Picture and Television Engineers,\n                  \"SMPTE RP 210v12:2010\
    \ Data Element Dictionary\", 2010,\n                  <http://www.smpte-ra.org/mdd/>.\n\
    \   [SMPTE-ST298]  Society of Motion Picture and Television Engineers,\n     \
    \             \"SMPTE ST 298:2009 Universal Labels for Unique\n              \
    \    Identification of Digital Data\", 2009,\n                  <http://www.smpte.org>.\n\
    \   [SMPTE-ST335]  Society of Motion Picture and Television Engineers,\n     \
    \             \"SMPTE ST 335:2012 Metadata Element Dictionary\n              \
    \    Structure\", 2012, <http://www.smpte.org>.\n   [SMPTE-ST336]  Society of\
    \ Motion Picture and Television Engineers,\n                  \"SMPTE ST 336:2007\
    \ Data Encoding Protocol Using Key-\n                  Length-Value\", 2007, <http://www.smpte.org>.\n\
    \   [SMPTE-ST377]  Society of Motion Picture and Television Engineers,\n     \
    \             \"SMPTE ST 377-1:2011 Material Exchange Format (MXF) -\n       \
    \           File Format Specification\", 2011,\n                  <http://www.smpte.org>.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   J. Downs (editor)\n   PAR Government Systems Corp.\n \
    \  US\n   EMail: jeff_downs@partech.com\n   J. Arbeiter (editor)\n   US\n   EMail:\
    \ jimsgti@gmail.com\n"
