- title: __initial_text__
  contents:
  - "        IP Flow Information Export (IPFIX) Information Elements\n           \
    \              for Logging NAT Events\n"
- title: Abstract
  contents:
  - "Abstract\n   Network operators require NAT devices to log events like creation\
    \ and\n   deletion of translations and information about the resources that the\n\
    \   NAT device is managing.  In many cases, the logs are essential to\n   identify\
    \ an attacker or a host that was used to launch malicious\n   attacks and for\
    \ various other purposes of accounting.  Since there is\n   no standard way of\
    \ logging this information, different NAT devices\n   use proprietary formats;\
    \ hence, it is difficult to expect consistent\n   behavior.  This lack of standardization\
    \ makes it difficult to write\n   the Collector applications that would receive\
    \ this data and process\n   it to present useful information.  This document describes\
    \ the\n   formats for logging NAT events.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8158.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   4\n     1.1.  Terminology . . . . . . . . . . . . . . . . . . .\
    \ . . . .   4\n     1.2.  Requirements Language . . . . . . . . . . . . . . .\
    \ . . .   5\n   2.  Scope . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .   5\n   3.  Deployment  . . . . . . . . . . . . . . . . . . . . . . . .\
    \ .   5\n   4.  Event-Based Logging . . . . . . . . . . . . . . . . . . . . .\
    \   6\n     4.1.  Logging Destination Information . . . . . . . . . . . . .  \
    \ 6\n     4.2.  Information Elements  . . . . . . . . . . . . . . . . . .   7\n\
    \     4.3.  Definition of NAT Events  . . . . . . . . . . . . . . . .  11\n  \
    \   4.4.  Quota Exceeded Event Types  . . . . . . . . . . . . . . .  12\n    \
    \ 4.5.  Threshold Reached Event Types . . . . . . . . . . . . . .  13\n     4.6.\
    \  Templates for NAT Events  . . . . . . . . . . . . . . . .  14\n       4.6.1.\
    \  NAT44 Session Create and Delete Events  . . . . . . .  14\n       4.6.2.  NAT64\
    \ Session Create and Delete Events  . . . . . . .  15\n       4.6.3.  NAT44 BIB\
    \ Create and Delete Events  . . . . . . . . .  16\n       4.6.4.  NAT64 BIB Create\
    \ and Delete Events  . . . . . . . . .  16\n       4.6.5.  Addresses Exhausted\
    \ Event . . . . . . . . . . . . . .  17\n       4.6.6.  Ports Exhausted Event\
    \ . . . . . . . . . . . . . . . .  17\n       4.6.7.  Quota Exceeded Events .\
    \ . . . . . . . . . . . . . . .  18\n         4.6.7.1.  Maximum Session Entries\
    \ Exceeded  . . . . . . . .  18\n         4.6.7.2.  Maximum BIB Entries Exceeded\
    \  . . . . . . . . . .  18\n         4.6.7.3.  Maximum Entries per User Exceeded\
    \ . . . . . . . .  19\n         4.6.7.4.  Maximum Active Hosts or Subscribers\
    \ Exceeded  . .  19\n         4.6.7.5.  Maximum Fragments Pending Reassembly Exceeded\
    \ . .  19\n       4.6.8.  Threshold Reached Events  . . . . . . . . . . . . .\
    \ .  20\n         4.6.8.1.  Address Pool High or Low Threshold Reached  . . .\
    \  20\n         4.6.8.2.  Address and Port Mapping High Threshold Reached .  21\n\
    \         4.6.8.3.  Address and Port Mapping per User High Threshold\n       \
    \            Reached . . . . . . . . . . . . . . . . . . . . .  21\n         4.6.8.4.\
    \  Global Address Mapping High Threshold Reached . .  22\n       4.6.9.  Address\
    \ Binding Create and Delete Events  . . . . . .  22\n       4.6.10. Port Block\
    \ Allocation and De-allocation . . . . . . .  22\n   5.  Management Considerations\
    \ . . . . . . . . . . . . . . . . . .  23\n     5.1.  Ability to Collect Events\
    \ from Multiple NAT Devices . . .  23\n     5.2.  Ability to Suppress Events \
    \ . . . . . . . . . . . . . . .  24\n   6.  IANA Considerations . . . . . . .\
    \ . . . . . . . . . . . . . .  24\n     6.1.  Information Elements  . . . . .\
    \ . . . . . . . . . . . . .  24\n       6.1.1.  natInstanceID . . . . . . . .\
    \ . . . . . . . . . . . .  24\n       6.1.2.  internalAddressRealm  . . . . .\
    \ . . . . . . . . . . .  24\n       6.1.3.  externalAddressRealm  . . . . . .\
    \ . . . . . . . . . .  25\n       6.1.4.  natQuotaExceededEvent . . . . . . .\
    \ . . . . . . . . .  25\n       6.1.5.  natThresholdEvent . . . . . . . . . .\
    \ . . . . . . . .  26\n       6.1.6.  natEvent  . . . . . . . . . . . . . . .\
    \ . . . . . . .  27\n       6.1.7.  maxSessionEntries . . . . . . . . . . . .\
    \ . . . . . .  27\n       6.1.8.  maxBIBEntries . . . . . . . . . . . . . . .\
    \ . . . . .  28\n       6.1.9.  maxEntriesPerUser . . . . . . . . . . . . . .\
    \ . . . .  28\n       6.1.10. maxSubscribers  . . . . . . . . . . . . . . . .\
    \ . . .  28\n       6.1.11. maxFragmentsPendingReassembly . . . . . . . . . .\
    \ . .  29\n       6.1.12. addressPoolHighThreshold  . . . . . . . . . . . . .\
    \ .  29\n       6.1.13. addressPoolLowThreshold . . . . . . . . . . . . . . .\
    \  29\n       6.1.14. addressPortMappingHighThreshold . . . . . . . . . . .  30\n\
    \       6.1.15. addressPortMappingLowThreshold  . . . . . . . . . . .  30\n  \
    \     6.1.16. addressPortMappingPerUserHighThreshold  . . . . . . .  30\n    \
    \   6.1.17. globalAddressMappingHighThreshold . . . . . . . . . .  31\n   7. \
    \ Security Considerations . . . . . . . . . . . . . . . . . . .  31\n   8.  References\
    \  . . . . . . . . . . . . . . . . . . . . . . . . .  32\n     8.1.  Normative\
    \ References  . . . . . . . . . . . . . . . . . .  32\n     8.2.  Informative\
    \ References  . . . . . . . . . . . . . . . . .  33\n   Acknowledgements  . .\
    \ . . . . . . . . . . . . . . . . . . . . . .  34\n   Authors' Addresses  . .\
    \ . . . . . . . . . . . . . . . . . . . . .  34\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The IP Flow Information Export (IPFIX) Protocol [RFC7011]\
    \ defines a\n   generic push mechanism for exporting information and events. \
    \ The\n   IPFIX Information Model [IPFIX-IANA] defines a set of standard\n   Information\
    \ Elements (IEs) that can be carried by the IPFIX protocol.\n   This document\
    \ details the IPFIX IEs that MUST be logged by a NAT\n   device that supports\
    \ NAT logging using IPFIX and all the optional\n   fields.  The fields specified\
    \ in this document are gleaned from\n   [RFC4787] and [RFC5382].\n   This document\
    \ and [NAT-LOG] are written in order to standardize the\n   events and parameters\
    \ to be recorded using IPFIX [RFC7011] and SYSLOG\n   [RFC5424], respectively.\
    \  This document uses IPFIX as the encoding\n   mechanism to describe the logging\
    \ of NAT events.  However, the\n   information that is logged should be the same\
    \ irrespective of what\n   kind of encoding scheme is used.  IPFIX is chosen because\
    \ it is an\n   IETF standard that meets all the needs for a reliable logging\n\
    \   mechanism.  IPFIX provides the flexibility to the logging device to\n   define\
    \ the datasets that it is logging.  The IEs specified for\n   logging must be\
    \ the same irrespective of the encoding mechanism used.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   The term \"NAT device\" in this document refers to any\
    \ NAT44 or NAT64\n   device.  The term \"Collector\" refers to any device that\
    \ receives\n   binary data from a NAT device and converts it into meaningful\n\
    \   information.  This document uses the term \"session\" as defined in\n   [RFC2663],\
    \ and the term \"Binding Information Base\" (BIB) as defined\n   in [RFC6146].\
    \  The term \"Information Element\" or \"IE\" is defined in\n   [RFC7011].  The\
    \ term \"Carrier-Grade NAT\" refers to a large-scale NAT\n   device as described\
    \ in [RFC6888]\n   The IPFIX IEs that are NAT specific are created with NAT terminology.\n\
    \   In order to avoid creating duplicates, IEs are reused if they convey\n   the\
    \ same meaning.  This document uses the term \"timestamp\" for the\n   IE, which\
    \ defines the time when an event is logged; this is the same\n   as the IPFIX\
    \ term \"observationTimeMilliseconds\" as described in\n   [IPFIX-IANA].  Since\
    \ observationTimeMilliseconds is not self-\n   explanatory for NAT implementors,\
    \ the term \"timeStamp\" is used.\n   Event templates, which refer to IPFIX Template\
    \ Records, as well as\n   log events, which refer to IPFIX Flow Records, are also\
    \ used in this\n   document.\n"
- title: 1.2.  Requirements Language
  contents:
  - "1.2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n"
- title: 2.  Scope
  contents:
  - "2.  Scope\n   This document provides the information model to be used for logging\n\
    \   the NAT events, including Carrier-Grade NAT (CGN) events.  [RFC7011]\n   provides\
    \ guidance on the choices of the transport protocols used for\n   IPFIX and their\
    \ effects.  This document does not provide guidance on\n   transport protocols\
    \ like TCP, UDP, or Stream Control Transmission\n   Protocol (SCTP), which are\
    \ to be used to log NAT events.  The logs\n   SHOULD be reliably sent to the Collector\
    \ to ensure that the log\n   events are not lost.  The choice of the actual transport\
    \ protocol is\n   beyond the scope of this document.\n   This document uses the\
    \ allocated IPFIX IEs in the IANA \"IPFIX\n   Information Elements\" registry\
    \ [IPFIX-IANA] and registers some new\n   ones.\n   This document assumes that\
    \ the NAT device will use the existing IPFIX\n   framework to send the log events\
    \ to the Collector.  This would mean\n   that the NAT device will specify the\
    \ template that it is going to use\n   for each of the events.  The templates\
    \ can be of varying length, and\n   there could be multiple templates that a NAT\
    \ device could use to log\n   the events.\n   The implementation details of the\
    \ Collector application are beyond\n   the scope of this document.\n   The optimization\
    \ of logging the NAT events is left to the\n   implementation and is beyond the\
    \ scope of this document.\n"
- title: 3.  Deployment
  contents:
  - "3.  Deployment\n   NAT logging based on IPFIX uses binary encoding; hence, it\
    \ is very\n   efficient.  IPFIX-based logging is recommended for environments\
    \ where\n   a high volume of logging is required, for example, where per-flow\n\
    \   logging is needed or in case of Carrier-Grade NAT.  However, IPFIX-\n   based\
    \ logging requires a Collector that processes the binary data and\n   requires\
    \ a network management application that converts this binary\n   data to a human-readable\
    \ format.\n   A Collector may receive NAT events from multiple CGN devices.  The\n\
    \   Collector distinguishes between the devices using the source IP\n   address,\
    \ source port, and Observation Domain ID in the IPFIX header.\n   The Collector\
    \ can decide to store the information based on the\n   administrative policies\
    \ that are in line with the operator and the\n   local jurisdiction.  The retention\
    \ policy is not dictated by the\n   Exporter and is left to the policies that\
    \ are defined at the\n   Collector.\n   A Collector may have scale issues if it\
    \ is overloaded by a large\n   number of simultaneous events.  An appropriate\
    \ throttling mechanism\n   may be used to handle the oversubscription.\n   The\
    \ logs that are exported can be used for a variety of reasons.  An\n   example\
    \ use case is to do accounting based on when the users logged\n   on and off.\
    \  The translation will be installed when the user logs on\n   and removed when\
    \ the user logs off.  These events create log records.\n   Another use case is\
    \ to identify an attacker or a host in a provider\n   network.  The network administrators\
    \ can use these logs to identify\n   the usage patterns, the need for additional\
    \ IP addresses, and etc.\n   The deployment of NAT logging is not limited to just\
    \ these cases.\n"
- title: 4.  Event-Based Logging
  contents:
  - "4.  Event-Based Logging\n   An event in a NAT device can be viewed as a state\
    \ transition because\n   it relates to the management of NAT resources.  The creation\
    \ and\n   deletion of NAT sessions and bindings are examples of events, as they\n\
    \   result in resources (addresses and ports) being allocated or freed.\n   The\
    \ events can happen through the processing of data packets flowing\n   through\
    \ the NAT device, through an external entity installing\n   policies on the NAT\
    \ router, or as a result of an asynchronous event\n   like a timer.  The list\
    \ of events is provided in Table 2.  Each of\n   these events SHOULD be logged,\
    \ unless this is administratively\n   prohibited.  A NAT device MAY log these\
    \ events to multiple Collectors\n   if redundancy is required.  The network administrator\
    \ will specify\n   the Collectors to which the log records are to be sent.  It\
    \ is\n   necessary to preserve the list of Collectors and its associated\n   information\
    \ like the IPv4/IPv6 address, port, and protocol across\n   reboots so that the\
    \ configuration information is not lost when the\n   device is restarted.  The\
    \ NAT device implementing the IPFIX logging\n   MUST follow the IPFIX specification\
    \ in [RFC7011].\n"
- title: 4.1.  Logging Destination Information
  contents:
  - "4.1.  Logging Destination Information\n   Logging destination information in\
    \ a NAT event is discussed in\n   [RFC6302] and [RFC6888].  Logging destination\
    \ information increases\n   the size of each record and increases the need for\
    \ storage\n   considerably.  It increases the number of log events generated\n\
    \   because when the same user connects to a different destination, it\n   results\
    \ in a log record per destination address.  Logging the source\n   and destination\
    \ addresses results in loss of privacy.  Logging of\n   destination addresses\
    \ and ports, pre- or post-NAT, SHOULD NOT be done\n   [RFC6888].  However, this\
    \ document provides the necessary fields to\n   log the destination information\
    \ in cases where they must be logged.\n"
- title: 4.2.  Information Elements
  contents:
  - "4.2.  Information Elements\n   The templates could contain a subset of the IEs\
    \ shown in Table 1,\n   depending upon the event being logged.  For example, a\
    \ NAT44 session\n   creation template record will contain:\n   {sourceIPv4Address,\
    \ postNATSourceIPv4Address, destinationIPv4Address,\n   postNATDestinationIPv4Address,\
    \ sourceTransportPort,\n   postNAPTSourceTransportPort, destinationTransportPort,\n\
    \   postNAPTDestinationTransportPort, internalAddressRealm, natEvent,\n   timeStamp}\n\
    \   An example of the actual event data record is shown below in a human-\n  \
    \ readable form:\n   {192.0.2.1, 203.0.113.100, 192.0.2.104, 192.0.2.104, 14800,\
    \ 1024, 80,\n   80, 0, 1, 09:20:10:789}\n   A single NAT device could be exporting\
    \ multiple templates, and the\n   Collector MUST support receiving multiple templates\
    \ from the same\n   source.\n   The following table includes all the IEs that\
    \ a NAT device would need\n   to export the events.  The formats of the IEs and\
    \ the IPFIX IDs are\n   listed.  Detailed descriptions of the fields natInstanceID,\n\
    \   internalAddressRealm, externalAddressRealm, natQuotaExceededEvent,\n   and\
    \ natThresholdEvent are included in the IANA Considerations\n   section.\n   +-----------------------------------+--------+-------+--------------+\n\
    \   | Field Name                        |  Size  |  IANA | Description  |\n  \
    \ |                                   | (bits) | IPFIX |              |\n   |\
    \                                   |        |   ID  |              |\n   +-----------------------------------+--------+-------+--------------+\n\
    \   | timeStamp                         |   64   |  323  | System Time  |\n  \
    \ |                                   |        |       | when the     |\n   |\
    \                                   |        |       | event        |\n   |  \
    \                                 |        |       | occurred     |\n   |    \
    \                               |        |       |              |\n   | natInstanceID\
    \                     |   32   |  463  | NAT Instance |\n   |                \
    \                   |        |       | Identifier   |\n   |                  \
    \                 |        |       |              |\n   | vlanId             \
    \               |   16   |   58  | VLAN ID in   |\n   |                      \
    \             |        |       | case of      |\n   |                        \
    \           |        |       | overlapping  |\n   |                          \
    \         |        |       | networks     |\n   |                            \
    \       |        |       |              |\n   | ingressVRFID                 \
    \     |   32   |  234  | VRF ID in    |\n   |                                \
    \   |        |       | case of      |\n   |                                  \
    \ |        |       | overlapping  |\n   |                                   |\
    \        |       | networks     |\n   |                                   |  \
    \      |       |              |\n   | sourceIPv4Address                 |   32\
    \   |   8   | Source IPv4  |\n   |                                   |       \
    \ |       | Address      |\n   |                                   |        |\
    \       |              |\n   | postNATSourceIPv4Address          |   32   |  225\
    \  | Translated   |\n   |                                   |        |       |\
    \ Source IPv4  |\n   |                                   |        |       | Address\
    \      |\n   |                                   |        |       |          \
    \    |\n   | protocolIdentifier                |   8    |   4   | Transport  \
    \  |\n   |                                   |        |       | protocol     |\n\
    \   |                                   |        |       |              |\n  \
    \ | sourceTransportPort               |   16   |   7   | Source Port  |\n   |\
    \                                   |        |       |              |\n   | postNAPTSourceTransportPort\
    \       |   16   |  227  | Translated   |\n   |                              \
    \     |        |       | Source port  |\n   |                                \
    \   |        |       |              |\n   | destinationIPv4Address           \
    \ |   32   |   12  | Destination  |\n   |                                   |\
    \        |       | IPv4 Address |\n   |                                   |  \
    \      |       |              |\n   | postNATDestinationIPv4Address     |   32\
    \   |  226  | Translated   |\n   |                                   |       \
    \ |       | IPv4         |\n   |                                   |        |\
    \       | destination  |\n   |                                   |        |  \
    \     | address      |\n   |                                   |        |    \
    \   |              |\n   | destinationTransportPort          |   16   |   11 \
    \ | Destination  |\n   |                                   |        |       |\
    \ port         |\n   |                                   |        |       |  \
    \            |\n   | postNAPTDestinationTransportPort  |   16   |  228  | Translated\
    \   |\n   |                                   |        |       | Destination \
    \ |\n   |                                   |        |       | port         |\n\
    \   |                                   |        |       |              |\n  \
    \ | sourceIPv6Address                 |  128   |   27  | Source IPv6  |\n   |\
    \                                   |        |       | address      |\n   |  \
    \                                 |        |       |              |\n   | destinationIPv6Address\
    \            |  128   |   28  | Destination  |\n   |                         \
    \          |        |       | IPv6 address |\n   |                           \
    \        |        |       |              |\n   | postNATSourceIPv6Address    \
    \      |  128   |  281  | Translated   |\n   |                               \
    \    |        |       | source IPv6  |\n   |                                 \
    \  |        |       | address      |\n   |                                   |\
    \        |       |              |\n   | postNATDestinationIPv6Address     |  128\
    \   |  282  | Translated   |\n   |                                   |       \
    \ |       | Destination  |\n   |                                   |        |\
    \       | IPv6 address |\n   |                                   |        |  \
    \     |              |\n   | internalAddressRealm              |  (*)   |  464\
    \  | Source       |\n   |                                   |        |       |\
    \ Address      |\n   |                                   |        |       | Realm\
    \        |\n   |                                   |        |       |        \
    \      |\n   | externalAddressRealm              |  (*)   |  465  | Destination\
    \  |\n   |                                   |        |       | Address      |\n\
    \   |                                   |        |       | Realm        |\n  \
    \ |                                   |        |       |              |\n   |\
    \ natEvent                          |   8    |  230  | Type of      |\n   |  \
    \                                 |        |       | Event        |\n   |    \
    \                               |        |       |              |\n   | portRangeStart\
    \                    |   16   |  361  | Allocated    |\n   |                 \
    \                  |        |       | port block   |\n   |                   \
    \                |        |       | start        |\n   |                     \
    \              |        |       |              |\n   | portRangeEnd          \
    \            |   16   |  362  | Allocated    |\n   |                         \
    \          |        |       | Port block   |\n   |                           \
    \        |        |       | end          |\n   |                             \
    \      |        |       |              |\n   | natPoolId                     \
    \    |   32   |  283  | NAT pool     |\n   |                                 \
    \  |        |       | Identifier   |\n   |                                   |\
    \        |       |              |\n   | natQuotaExceededEvent             |  \
    \ 32   |  466  | Limit event  |\n   |                                   |    \
    \    |       | identifier   |\n   |                                   |      \
    \  |       |              |\n   | natThresholdEvent                 |   32   |\
    \  467  | Threshold    |\n   |                                   |        |  \
    \     | event        |\n   |                                   |        |    \
    \   | identifier   |\n   |                                   |        |      \
    \ |              |\n   | maxSessionEntries                 |   32   |  471  |\
    \ Maximum      |\n   |                                   |        |       | session\
    \      |\n   |                                   |        |       | entries  \
    \    |\n   |                                   |        |       |            \
    \  |\n   | maxBIBEntries                     |   32   |  472  | Maximum bind |\n\
    \   |                                   |        |       | entries      |\n  \
    \ |                                   |        |       |              |\n   |\
    \ maxEntriesPerUser                 |   32   |  473  | Maximum      |\n   |  \
    \                                 |        |       | entries per- |\n   |    \
    \                               |        |       | user         |\n   |      \
    \                             |        |       |              |\n   | maxSubscribers\
    \                    |   32   |  474  | Maximum      |\n   |                 \
    \                  |        |       | subscribers  |\n   |                   \
    \                |        |       |              |\n   | maxFragmentsPendingReassembly\
    \     |   32   |  475  | Maximum      |\n   |                                \
    \   |        |       | fragments    |\n   |                                  \
    \ |        |       | for          |\n   |                                   |\
    \        |       | ressembly    |\n   |                                   |  \
    \      |       |              |\n   | addressPoolHighThreshold          |   32\
    \   |  476  | High         |\n   |                                   |       \
    \ |       | threshold    |\n   |                                   |        |\
    \       | for address  |\n   |                                   |        |  \
    \     | pool         |\n   |                                   |        |    \
    \   |              |\n   | addressPoolLowThreshold           |   32   |  477 \
    \ | Low          |\n   |                                   |        |       |\
    \ threshold    |\n   |                                   |        |       | for\
    \ address  |\n   |                                   |        |       | pool \
    \        |\n   |                                   |        |       |        \
    \      |\n   | addressPortMappingHighThreshold   |   32   |  478  | High     \
    \    |\n   |                                   |        |       | threshold  \
    \  |\n   |                                   |        |       | for          |\n\
    \   |                                   |        |       | address/port |\n  \
    \ |                                   |        |       | mapping      |\n   |\
    \                                   |        |       |              |\n   | addressPortMappingLowThreshold\
    \    |   32   |  479  | Low          |\n   |                                 \
    \  |        |       | threshold    |\n   |                                   |\
    \        |       | for          |\n   |                                   |  \
    \      |       | address/port |\n   |                                   |    \
    \    |       | mapping      |\n   |                                   |      \
    \  |       |              |\n   | addressPortMappingPerUserHighThre |   32   |\
    \  480  | High         |\n   | shold                             |        |  \
    \     | threshold    |\n   |                                   |        |    \
    \   | for per-user |\n   |                                   |        |      \
    \ | address/port |\n   |                                   |        |       |\
    \ mapping      |\n   |                                   |        |       |  \
    \            |\n   | globalAddressMappingHighThreshold |   32   |  481  | High\
    \         |\n   |                                   |        |       | threshold\
    \    |\n   |                                   |        |       | for global \
    \  |\n   |                                   |        |       | address      |\n\
    \   |                                   |        |       | mapping      |\n  \
    \ +-----------------------------------+--------+-------+--------------+\n    \
    \                  Note: (*) indicates octetArray\n                          \
    \ Table 1: NAT IE List\n"
- title: 4.3.  Definition of NAT Events
  contents:
  - "4.3.  Definition of NAT Events\n   The following is the complete list of NAT\
    \ events and the proposed\n   event type values.  The natEvent IE is defined in\
    \ the \"IPFIX\n   Information Elements\" registry [IPFIX-IANA];.  The list can\
    \ be\n   expanded in the future as necessary.  The data record will have the\n\
    \   corresponding natEvent value to indicate the event that is being\n   logged.\n\
    \   Note that the first two events are marked \"Historic\" and are listed\n  \
    \ here for the sole purpose of completeness.  Any compliant\n   implementation\
    \ SHOULD NOT use the events that are marked \"Historic\".\n   These values were\
    \ defined prior to the existence of this document and\n   outside the IETF.  These\
    \ events are not standalone and require more\n   information to be conveyed to\
    \ qualify the event.  For example, the\n   NAT translation create event does not\
    \ specify if it is NAT44 or\n   NAT64.  As a result, the Behave working group\
    \ decided to have an\n   explicit definition for each one of the unique events.\n\
    \              +-------+------------------------------------+\n              |\
    \ Value | Event Name                         |\n              +-------+------------------------------------+\n\
    \              | 0     | Reserved                           |\n              |\
    \ 1     | NAT translation create (Historic)  |\n              | 2     | NAT translation\
    \ delete (Historic)  |\n              | 3     | NAT Addresses exhausted      \
    \      |\n              | 4     | NAT44 session create               |\n     \
    \         | 5     | NAT44 session delete               |\n              | 6  \
    \   | NAT64 session create               |\n              | 7     | NAT64 session\
    \ delete               |\n              | 8     | NAT44 BIB create           \
    \        |\n              | 9     | NAT44 BIB delete                   |\n   \
    \           | 10    | NAT64 BIB create                   |\n              | 11\
    \    | NAT64 BIB delete                   |\n              | 12    | NAT ports\
    \ exhausted                |\n              | 13    | Quota Exceeded         \
    \            |\n              | 14    | Address binding create             |\n\
    \              | 15    | Address binding delete             |\n              |\
    \ 16    | Port block allocation              |\n              | 17    | Port block\
    \ de-allocation           |\n              | 18    | Threshold Reached       \
    \           |\n              +-------+------------------------------------+\n\
    \                           Table 2: NAT Event ID\n"
- title: 4.4.  Quota Exceeded Event Types
  contents:
  - "4.4.  Quota Exceeded Event Types\n   The Quota Exceeded event is a natEvent IE\
    \ described in Table 2.  The\n   Quota Exceeded events are generated when the\
    \ hard limits set by the\n   administrator have been reached or exceeded.  The\
    \ following table\n   shows the sub-event types for the Quota Exceeded event.\
    \  The events\n   that can be reported are the maximum session entries limit reached,\n\
    \   maximum BIB entries limit reached, maximum (session/BIB) entries per\n   user\
    \ limit reached, maximum active hosts or subscribers limit\n   reached, and maximum\
    \ Fragments pending reassembly limit reached.\n             +-------+---------------------------------------+\n\
    \             | Value | Quota Exceeded Event Name             |\n            \
    \ +-------+---------------------------------------+\n             | 0     | Reserved\
    \                              |\n             | 1     | Maximum session entries\
    \               |\n             | 2     | Maximum BIB entries                \
    \   |\n             | 3     | Maximum entries per user              |\n      \
    \       | 4     | Maximum active hosts or subscribers   |\n             | 5  \
    \   | Maximum fragments pending reassembly  |\n             +-------+---------------------------------------+\n\
    \                       Table 3: Quota Exceeded Event\n"
- title: 4.5.  Threshold Reached Event Types
  contents:
  - "4.5.  Threshold Reached Event Types\n   The following table shows the sub-event\
    \ types for the Threshold\n   Reached event.  The administrator can configure\
    \ the thresholds, and\n   whenever the threshold is reached or exceeded, the corresponding\n\
    \   events are generated.  The main difference between the Quota Exceeded\n  \
    \ and Threshold Reached events is that, once the Quota Exceeded events\n   are\
    \ hit, the packets are dropped or mappings will not be created,\n   whereas the\
    \ Threshold Reached events will provide the operator a\n   chance to take action\
    \ before the traffic disruptions can happen.  A\n   NAT device can choose to implement\
    \ one or the other, or both.\n   The address pool high threshold event will be\
    \ reported when the\n   address pool reaches a high-water mark as defined by the\
    \ operator.\n   This will serve as an indication that either the operator might\
    \ have\n   to add more addresses to the pool or the subsequent users may be\n\
    \   denied NAT translation mappings.\n   The address pool low threshold event\
    \ will be reported when the\n   address pool reaches a low-water mark as defined\
    \ by the operator.\n   This will serve as an indication that the operator can\
    \ reclaim some\n   of the global IPv4 addresses in the pool.\n   The address and\
    \ port mapping high threshold event is generated when\n   the number of ports\
    \ in the configured address pool has reached a\n   configured threshold.\n   The\
    \ per-user address and port mapping high threshold is generated\n   when a single\
    \ user utilizes more address and port mapping than a\n   configured threshold.\
    \  We don't track the low threshold for per-user\n   address and port mappings\
    \ because, as the ports are freed, the\n   address will become available.  The\
    \ address pool low threshold event\n   will then be triggered so that the global\
    \ IPv4 address can be\n   reclaimed.\n   The global address mapping high threshold\
    \ event is generated when the\n   maximum number of mappings per user is reached\
    \ for a NAT device doing\n   paired-address pooling.\n    +-------+---------------------------------------------------------+\n\
    \    | Value | Threshold Exceeded Event Name                           |\n   \
    \ +-------+---------------------------------------------------------+\n    | 0\
    \     | Reserved                                                |\n    | 1   \
    \  | Address pool high threshold event                       |\n    | 2     |\
    \ Address pool low threshold event                        |\n    | 3     | Address\
    \ and port mapping high threshold event           |\n    | 4     | Address and\
    \ port mapping per user high threshold event  |\n    | 5     | Global address\
    \ mapping high threshold event             |\n    +-------+---------------------------------------------------------+\n\
    \                         Table 4: Threshold Event\n"
- title: 4.6.  Templates for NAT Events
  contents:
  - "4.6.  Templates for NAT Events\n   The following is the template of events that\
    \ will be logged.  The\n   events below are identified at the time of this writing,\
    \ but the set\n   of events is extensible.  A NAT device that implements a given\
    \ NAT\n   event MUST support the mandatory IEs in the templates.  Depending on\n\
    \   the implementation and configuration, various IEs that are not\n   mandatory\
    \ can be included or ignored.\n"
- title: 4.6.1.  NAT44 Session Create and Delete Events
  contents:
  - "4.6.1.  NAT44 Session Create and Delete Events\n   These events will be generated\
    \ when a NAT44 session is created or\n   deleted.  The template will be the same;\
    \ the natEvent will indicate\n   whether it is a create or a delete event.  The\
    \ following is a\n   template of the event.\n   The destination address and port\
    \ information is optional as required\n   by [RFC6888].  However, when the destination\
    \ information is\n   suppressed, the session log event contains the same information\
    \ as\n   the BIB event.  In such cases, the NAT device SHOULD NOT send both\n\
    \   BIB and session events.\n      +----------------------------------+-------------+-----------+\n\
    \      | Field Name                       | Size (bits) | Mandatory |\n      +----------------------------------+-------------+-----------+\n\
    \      | timeStamp                        |      64     |    Yes    |\n      |\
    \ natEvent                         |      8      |    Yes    |\n      | sourceIPv4Address\
    \                |      32     |    Yes    |\n      | postNATSourceIPv4Address\
    \         |      32     |    Yes    |\n      | protocolIdentifier            \
    \   |      8      |    Yes    |\n      | sourceTransportPort              |  \
    \    16     |    Yes    |\n      | postNAPTSourceTransportPort      |      16\
    \     |    Yes    |\n      | destinationIPv4Address           |      32     |\
    \     No    |\n      | postNATDestinationIPv4Address    |      32     |     No\
    \    |\n      | destinationTransportPort         |      16     |     No    |\n\
    \      | postNAPTDestinationTransportPort |      16     |     No    |\n      |\
    \ natInstanceID                    |      32     |     No    |\n      | vlanID/ingressVRFID\
    \              |    16/32    |     No    |\n      | internalAddressRealm     \
    \        |  octetArray |     No    |\n      | externalAddressRealm           \
    \  |  octetArray |     No    |\n      +----------------------------------+-------------+-----------+\n\
    \               Table 5: NAT44 Session Delete/Create Template\n"
- title: 4.6.2.  NAT64 Session Create and Delete Events
  contents:
  - "4.6.2.  NAT64 Session Create and Delete Events\n   These events will be generated\
    \ when a NAT64 session is created or\n   deleted.  The following is a template\
    \ of the event.\n      +----------------------------------+-------------+-----------+\n\
    \      | Field Name                       | Size (bits) | Mandatory |\n      +----------------------------------+-------------+-----------+\n\
    \      | timeStamp                        |      64     |    Yes    |\n      |\
    \ natEvent                         |      8      |    Yes    |\n      | sourceIPv6Address\
    \                |     128     |    Yes    |\n      | postNATSourceIPv4Address\
    \         |      32     |    Yes    |\n      | protocolIdentifier            \
    \   |      8      |    Yes    |\n      | sourceTransportPort              |  \
    \    16     |    Yes    |\n      | postNAPTSourceTransportPort      |      16\
    \     |    Yes    |\n      | destinationIPv6Address           |     128     |\
    \     No    |\n      | postNATDestinationIPv4Address    |      32     |     No\
    \    |\n      | destinationTransportPort         |      16     |     No    |\n\
    \      | postNAPTDestinationTransportPort |      16     |     No    |\n      |\
    \ natInstanceID                    |      32     |     No    |\n      | vlanID/ingressVRFID\
    \              |    16/32    |     No    |\n      | internalAddressRealm     \
    \        |  octetArray |     No    |\n      | externalAddressRealm           \
    \  |  octetArray |     No    |\n      +----------------------------------+-------------+-----------+\n\
    \            Table 6: NAT64 Session Create/Delete Event Template\n"
- title: 4.6.3.  NAT44 BIB Create and Delete Events
  contents:
  - "4.6.3.  NAT44 BIB Create and Delete Events\n   These events will be generated\
    \ when a NAT44 Bind entry is created or\n   deleted.  The following is a template\
    \ of the event.\n         +-----------------------------+-------------+-----------+\n\
    \         | Field Name                  | Size (bits) | Mandatory |\n        \
    \ +-----------------------------+-------------+-----------+\n         | timeStamp\
    \                   |      64     |    Yes    |\n         | natEvent         \
    \           |      8      |    Yes    |\n         | sourceIPv4Address        \
    \   |      32     |    Yes    |\n         | postNATSourceIPv4Address    |    \
    \  32     |    Yes    |\n         | protocolIdentifier          |      8     \
    \ |     No    |\n         | sourceTransportPort         |      16     |     No\
    \    |\n         | postNAPTSourceTransportPort |      16     |     No    |\n \
    \        | natInstanceID               |      32     |     No    |\n         |\
    \ vlanID/ingressVRFID         |    16/32    |     No    |\n         | internalAddressRealm\
    \        |  octetArray |     No    |\n         | externalAddressRealm        |\
    \  octetArray |     No    |\n         +-----------------------------+-------------+-----------+\n\
    \              Table 7: NAT44 BIB Create/Delete Event Template\n"
- title: 4.6.4.  NAT64 BIB Create and Delete Events
  contents:
  - "4.6.4.  NAT64 BIB Create and Delete Events\n   These events will be generated\
    \ when a NAT64 Bind entry is created or\n   deleted.  The following is a template\
    \ of the event.\n         +-----------------------------+-------------+-----------+\n\
    \         | Field Name                  | Size (bits) | Mandatory |\n        \
    \ +-----------------------------+-------------+-----------+\n         | timeStamp\
    \                   |      64     |    Yes    |\n         | natEvent         \
    \           |      8      |    Yes    |\n         | sourceIPv6Address        \
    \   |     128     |    Yes    |\n         | postNATSourceIPv4Address    |    \
    \  32     |    Yes    |\n         | protocolIdentifier          |      8     \
    \ |     No    |\n         | sourceTransportPort         |      16     |     No\
    \    |\n         | postNAPTSourceTransportPort |      16     |     No    |\n \
    \        | natInstanceID               |      32     |     No    |\n         |\
    \ vlanID/ingressVRFID         |    16/32    |     No    |\n         | internalAddressRealm\
    \        |  octetArray |     No    |\n         | externalAddressRealm        |\
    \  octetArray |     No    |\n         +-----------------------------+-------------+-----------+\n\
    \              Table 8: NAT64 BIB Create/Delete Event Template\n"
- title: 4.6.5.  Addresses Exhausted Event
  contents:
  - "4.6.5.  Addresses Exhausted Event\n   This event will be generated when a NAT\
    \ device runs out of global\n   IPv4 addresses in a given pool of addresses. \
    \ Typically, this event\n   would mean that the NAT device won't be able to create\
    \ any new\n   translations until some addresses/ports are freed.  This event SHOULD\n\
    \   be rate-limited, as many packets hitting the device at the same time\n   will\
    \ trigger a burst of addresses exhausted events.\n   The following is a template\
    \ of the event.\n                +---------------+-------------+-----------+\n\
    \                | Field Name    | Size (bits) | Mandatory |\n               \
    \ +---------------+-------------+-----------+\n                | timeStamp   \
    \  |      64     |    Yes    |\n                | natEvent      |      8     \
    \ |    Yes    |\n                | natPoolID     |      32     |    Yes    |\n\
    \                | natInstanceID |      32     |     No    |\n               \
    \ +---------------+-------------+-----------+\n                Table 9: Addresses\
    \ Exhausted Event Template\n"
- title: 4.6.6.  Ports Exhausted Event
  contents:
  - "4.6.6.  Ports Exhausted Event\n   This event will be generated when a NAT device\
    \ runs out of ports for\n   a global IPv4 address.  Port exhaustion shall be reported\
    \ per\n   protocol (UDP, TCP, etc.).  This event SHOULD be rate-limited, as\n\
    \   many packets hitting the device at the same time will trigger a burst\n  \
    \ of port exhausted events.\n   The following is a template of the event.\n  \
    \        +--------------------------+-------------+-----------+\n          | Field\
    \ Name               | Size (bits) | Mandatory |\n          +--------------------------+-------------+-----------+\n\
    \          | timeStamp                |      64     |    Yes    |\n          |\
    \ natEvent                 |      8      |    Yes    |\n          | postNATSourceIPv4Address\
    \ |      32     |    Yes    |\n          | protocolIdentifier       |      8 \
    \     |    Yes    |\n          | natInstanceID            |      32     |    \
    \ No    |\n          +--------------------------+-------------+-----------+\n\
    \                 Table 10: Ports Exhausted Event Template\n"
- title: 4.6.7.  Quota Exceeded Events
  contents:
  - "4.6.7.  Quota Exceeded Events\n   This event will be generated when a NAT device\
    \ cannot allocate\n   resources as a result of an administratively defined policy.\
    \  The\n   Quota Exceeded event templates are described below.\n"
- title: 4.6.7.1.  Maximum Session Entries Exceeded
  contents:
  - "4.6.7.1.  Maximum Session Entries Exceeded\n   The maximum session entries exceeded\
    \ event is generated when the\n   administratively configured NAT session limit\
    \ is reached.  The\n   following is the template of the event.\n            +-----------------------+-------------+-----------+\n\
    \            | Field Name            | Size (bits) | Mandatory |\n           \
    \ +-----------------------+-------------+-----------+\n            | timeStamp\
    \             |      64     |    Yes    |\n            | natEvent            \
    \  |      8      |    Yes    |\n            | natQuotaExceededEvent |      32\
    \     |    Yes    |\n            | maxSessionEntries     |      32     |    Yes\
    \    |\n            | natInstanceID         |      32     |     No    |\n    \
    \        +-----------------------+-------------+-----------+\n             Table\
    \ 11: Session Entries Exceeded Event Template\n"
- title: 4.6.7.2.  Maximum BIB Entries Exceeded
  contents:
  - "4.6.7.2.  Maximum BIB Entries Exceeded\n   The maximum BIB entries exceeded event\
    \ is generated when the\n   administratively configured BIB entry limit is reached.\
    \  The\n   following is the template of the event.\n            +-----------------------+-------------+-----------+\n\
    \            | Field Name            | Size (bits) | Mandatory |\n           \
    \ +-----------------------+-------------+-----------+\n            | timeStamp\
    \             |      64     |    Yes    |\n            | natEvent            \
    \  |      8      |    Yes    |\n            | natQuotaExceededEvent |      32\
    \     |    Yes    |\n            | maxBIBEntries         |      32     |    Yes\
    \    |\n            | natInstanceID         |      32     |     No    |\n    \
    \        +-----------------------+-------------+-----------+\n               Table\
    \ 12: BIB Entries Exceeded Event Template\n"
- title: 4.6.7.3.  Maximum Entries per User Exceeded
  contents:
  - "4.6.7.3.  Maximum Entries per User Exceeded\n   This event is generated when\
    \ a single user reaches the\n   administratively configured NAT translation limit.\
    \  The following is\n   the template of the event.\n          +-----------------------+-------------+---------------+\n\
    \          | Field Name            | Size (bits) |   Mandatory   |\n         \
    \ +-----------------------+-------------+---------------+\n          | timeStamp\
    \             |      64     |      Yes      |\n          | natEvent          \
    \    |      8      |      Yes      |\n          | natQuotaExceededEvent |    \
    \  32     |      Yes      |\n          | maxEntriesPerUser     |      32     |\
    \      Yes      |\n          | sourceIPv4Address     |      32     | Yes for NAT44\
    \ |\n          | sourceIPv6Address     |     128     | Yes for NAT64 |\n     \
    \     | natInstanceID         |      32     |       No      |\n          | vlanID/ingressVRFID\
    \   |    16/32    |       No      |\n          +-----------------------+-------------+---------------+\n\
    \            Table 13: Per-User Entries Exceeded Event Template\n"
- title: 4.6.7.4.  Maximum Active Hosts or Subscribers Exceeded
  contents:
  - "4.6.7.4.  Maximum Active Hosts or Subscribers Exceeded\n   This event is generated\
    \ when the number of allowed hosts or\n   subscribers reaches the administratively\
    \ configured limit.  The\n   following is the template of the event.\n       \
    \     +-----------------------+-------------+-----------+\n            | Field\
    \ Name            | Size (bits) | Mandatory |\n            +-----------------------+-------------+-----------+\n\
    \            | timeStamp             |      64     |    Yes    |\n           \
    \ | natEvent              |      8      |    Yes    |\n            | natQuotaExceededEvent\
    \ |      32     |    Yes    |\n            | maxSubscribers        |      32 \
    \    |    Yes    |\n            | natInstanceID         |      32     |     No\
    \    |\n            +-----------------------+-------------+-----------+\n    \
    \    Table 14: Maximum Hosts/Subscribers Exceeded Event Template\n"
- title: 4.6.7.5.  Maximum Fragments Pending Reassembly Exceeded
  contents:
  - "4.6.7.5.  Maximum Fragments Pending Reassembly Exceeded\n   This event is generated\
    \ when the number of fragments pending\n   reassembly reaches the administratively\
    \ configured limit.  Note that\n   in the case of NAT64, when this condition is\
    \ detected in the IPv6-to-\n   IPv4 direction, the IPv6 source address is mandatory\
    \ in the template.\n   Similarly, when this condition is detected in IPv4-to-IPv6\
    \ direction,\n   the source IPv4 address is mandatory in the template below. \
    \ The\n   following is the template of the event.\n     +-------------------------------+-------------+----------------+\n\
    \     | Field Name                    | Size (bits) |   Mandatory    |\n     +-------------------------------+-------------+----------------+\n\
    \     | timeStamp                     |      64     |      Yes       |\n     |\
    \ natEvent                      |      8      |      Yes       |\n     | natQuotaExceededEvent\
    \         |      32     |      Yes       |\n     | maxFragmentsPendingReassembly\
    \ |      32     |      Yes       |\n     | sourceIPv4Address             |   \
    \   32     | Yes for NAT44  |\n     | sourceIPv6Address             |     128\
    \     | Yes for NAT64  |\n     | natInstanceID                 |      32     |\
    \       No       |\n     | vlanID/ingressVRFID           |    16/32    |     \
    \  No       |\n     | internalAddressRealm          |  octetArray |       No \
    \      |\n     +-------------------------------+-------------+----------------+\n\
    \       Table 15: Maximum Fragments Pending Reassembly Exceeded Event\n      \
    \                           Template\n"
- title: 4.6.8.  Threshold Reached Events
  contents:
  - "4.6.8.  Threshold Reached Events\n   This event will be generated when a NAT\
    \ device reaches an operator-\n   configured threshold when allocating resources.\
    \  The Threshold\n   Reached events are described in the section above.  The following\
    \ is\n   a template of the individual events.\n"
- title: 4.6.8.1.  Address Pool High or Low Threshold Reached
  contents:
  - "4.6.8.1.  Address Pool High or Low Threshold Reached\n   This event is generated\
    \ when the high or low threshold is reached for\n   the address pool.  The template\
    \ is the same for both high and low\n   threshold events\n   +----------------------------------------------+--------+-----------+\n\
    \   | Field Name                                   |  Size  | Mandatory |\n  \
    \ |                                              | (bits) |           |\n   +----------------------------------------------+--------+-----------+\n\
    \   | timeStamp                                    |   64   |    Yes    |\n  \
    \ | natEvent                                     |   8    |    Yes    |\n   |\
    \ natThresholdEvent                            |   32   |    Yes    |\n   | natPoolID\
    \                                    |   32   |    Yes    |\n   | addressPoolHighThreshold/\
    \                    |   32   |    Yes    |\n   | addressPoolLowThreshold    \
    \                  |        |           |\n   | natInstanceID                \
    \                |   32   |     No    |\n   +----------------------------------------------+--------+-----------+\n\
    \     Table 16: Address Pool High/Low Threshold Reached Event Template\n"
- title: 4.6.8.2.  Address and Port Mapping High Threshold Reached
  contents:
  - "4.6.8.2.  Address and Port Mapping High Threshold Reached\n   This event is generated\
    \ when the high threshold is reached for the\n   address pool and ports.\n   +----------------------------------------------+--------+-----------+\n\
    \   | Field Name                                   |  Size  | Mandatory |\n  \
    \ |                                              | (bits) |           |\n   +----------------------------------------------+--------+-----------+\n\
    \   | timeStamp                                    |   64   |    Yes    |\n  \
    \ | natEvent                                     |   8    |    Yes    |\n   |\
    \ natThresholdEvent                            |   32   |    Yes    |\n   | addressPortMappingHighThreshold/\
    \             |   32   |    Yes    |\n   | addressPortMappingLowThreshold    \
    \           |        |           |\n   | natInstanceID                       \
    \         |   32   |     No    |\n   +----------------------------------------------+--------+-----------+\n\
    \       Table 17: Address Port High Threshold Reached Event Template\n"
- title: 4.6.8.3.  Address and Port Mapping per User High Threshold Reached
  contents:
  - "4.6.8.3.  Address and Port Mapping per User High Threshold Reached\n   This event\
    \ is generated when the high threshold is reached for the\n   per-user address\
    \ pool and ports.\n   +----------------------------------------------+--------+-----------+\n\
    \   | Field Name                                   |  Size  | Mandatory |\n  \
    \ |                                              | (bits) |           |\n   +----------------------------------------------+--------+-----------+\n\
    \   | timeStamp                                    |   64   |    Yes    |\n  \
    \ | natEvent                                     |   8    |    Yes    |\n   |\
    \ natThresholdEvent                            |   32   |    Yes    |\n   | addressPortMappingHighThreshold/\
    \             |   32   |    Yes    |\n   | addressPortMappingLowThreshold    \
    \           |        |           |\n   | sourceIPv4Address                   \
    \         |   32   |  Yes for  |\n   |                                       \
    \       |        |   NAT44   |\n   | sourceIPv6Address                       \
    \     |  128   |  Yes for  |\n   |                                           \
    \   |        |   NAT64   |\n   | natInstanceID                               \
    \ |   32   |     No    |\n   | vlanID/ingressVRFID                          |\
    \ 16/32  |     No    |\n   +----------------------------------------------+--------+-----------+\n\
    \    Table 18: Address and Port Mapping per User High Threshold Reached\n    \
    \                          Event Template\n"
- title: 4.6.8.4.  Global Address Mapping High Threshold Reached
  contents:
  - "4.6.8.4.  Global Address Mapping High Threshold Reached\n   This event is generated\
    \ when the high threshold is reached for the\n   per-user address pool and ports.\
    \  This is generated only by NAT\n   devices that use a paired-address-pooling\
    \ behavior.\n      +-----------------------------------+-------------+-----------+\n\
    \      | Field Name                        | Size (bits) | Mandatory |\n     \
    \ +-----------------------------------+-------------+-----------+\n      | timeStamp\
    \                         |      64     |    Yes    |\n      | natEvent      \
    \                    |      8      |    Yes    |\n      | natThresholdEvent  \
    \               |      32     |    Yes    |\n      | globalAddressMappingHighThreshold\
    \ |      32     |    Yes    |\n      | natInstanceID                     |   \
    \   32     |     No    |\n      | vlanID/ingressVRFID               |    16/32\
    \    |     No    |\n      +-----------------------------------+-------------+-----------+\n\
    \       Table 19: Global Address Mapping High Threshold Reached Event\n      \
    \                           Template\n"
- title: 4.6.9.  Address Binding Create and Delete Events
  contents:
  - "4.6.9.  Address Binding Create and Delete Events\n   These events will be generated\
    \ when a NAT device binds a local\n   address with a global address and when the\
    \ global address is freed.\n   A NAT device will generate the binding events when\
    \ it receives the\n   first packet of the first flow from a host in the private\
    \ realm.\n        +--------------------------+-------------+---------------+\n\
    \        | Field Name               | Size (bits) |   Mandatory   |\n        +--------------------------+-------------+---------------+\n\
    \        | timeStamp                |      64     |      Yes      |\n        |\
    \ natEvent                 |      8      |      Yes      |\n        | sourceIPv4Address\
    \        |      32     | Yes for NAT44 |\n        | sourceIPv6Address        |\
    \     128     | Yes for NAT64 |\n        | postNATSourceIPv4Address |      32\
    \     |      Yes      |\n        | natInstanceID            |      32     |  \
    \     No      |\n        +--------------------------+-------------+---------------+\n\
    \                  Table 20: NAT Address Binding Template\n"
- title: 4.6.10.  Port Block Allocation and De-allocation
  contents:
  - "4.6.10.  Port Block Allocation and De-allocation\n   This event will be generated\
    \ when a NAT device allocates/de-allocates\n   ports in a bulk fashion, as opposed\
    \ to allocating a port on a per-\n   flow basis.\n   portRangeStart represents\
    \ the starting value of the range.\n   portRangeEnd represents the ending value\
    \ of the range.\n   NAT devices would do this in order to reduce logs and to potentially\n\
    \   limit the number of connections a subscriber is allowed to use.  In\n   the\
    \ following Port Block allocation template, the portRangeStart and\n   portRangeEnd\
    \ MUST be specified.\n   It is up to the implementation to choose to consolidate\
    \ log records\n   in case two consecutive port ranges for the same user are allocated\n\
    \   or freed.\n        +--------------------------+-------------+---------------+\n\
    \        | Field Name               | Size (bits) |   Mandatory   |\n        +--------------------------+-------------+---------------+\n\
    \        | timeStamp                |      64     |      Yes      |\n        |\
    \ natEvent                 |      8      |      Yes      |\n        | sourceIPv4Address\
    \        |      32     | Yes for NAT44 |\n        | sourceIPv6Address        |\
    \     128     | Yes for NAT64 |\n        | postNATSourceIPv4Address |      32\
    \     |      Yes      |\n        | portRangeStart           |      16     |  \
    \    Yes      |\n        | portRangeEnd             |      16     |       No \
    \     |\n        | natInstanceID            |      32     |       No      |\n\
    \        +--------------------------+-------------+---------------+\n        \
    \    Table 21: NAT Port Block Allocation Event Template\n"
- title: 5.  Management Considerations
  contents:
  - "5.  Management Considerations\n   This section considers requirements for management\
    \ of the log system\n   to support logging of the events described above.  It\
    \ first covers\n   requirements applicable to log management in general.  Any\
    \ additional\n   standardization required to fulfill these requirements is out\
    \ of\n   scope of the present document.  Some management considerations are\n\
    \   covered in [NAT-LOG].  This document covers the additional\n   considerations.\n"
- title: 5.1.  Ability to Collect Events from Multiple NAT Devices
  contents:
  - "5.1.  Ability to Collect Events from Multiple NAT Devices\n   An IPFIX Collector\
    \ MUST be able to collect events from multiple NAT\n   devices and decipher events\
    \ based on the Observation Domain ID in the\n   IPFIX header.\n"
- title: 5.2.  Ability to Suppress Events
  contents:
  - "5.2.  Ability to Suppress Events\n   The exhaustion events can be overwhelming\
    \ during traffic bursts;\n   hence, they SHOULD be handled by the NAT devices\
    \ to rate-limit them\n   before sending them to the Collectors.  For example,\
    \ when the port\n   exhaustion happens during bursty conditions, instead of sending\
    \ a\n   port exhaustion event for every packet, the exhaustion events SHOULD\n\
    \   be rate-limited by the NAT device.\n"
- title: 6.  IANA Considerations
  contents:
  - '6.  IANA Considerations

    '
- title: 6.1.  Information Elements
  contents:
  - "6.1.  Information Elements\n   IANA has registered the following IEs in the \"\
    IPFIX Information\n   Elements\" registry at [IPFIX-IANA].\n"
- title: 6.1.1.  natInstanceID
  contents:
  - "6.1.1.  natInstanceID\n   ElementID: 463\n   Name: natInstanceID\n   Description:\
    \ This Information Element uniquely identifies an Instance\n   of the NAT that\
    \ runs on a NAT middlebox function after the packet\n   passes the Observation\
    \ Point. natInstanceID is defined in [RFC7659].\n   Abstract Data Type: unsigned32\n\
    \   Data Type Semantics: identifier\n   Reference: See [RFC791] for the definition\
    \ of the IPv4 source address\n   field.  See [RFC3022] for the definition of NAT.\
    \  See [RFC3234] for\n   the definition of middleboxes.\n"
- title: 6.1.2.  internalAddressRealm
  contents:
  - "6.1.2.  internalAddressRealm\n   ElementID: 464\n   Name: internalAddressRealm\n\
    \   Description: This Information Element represents the internal address\n  \
    \ realm where the packet is originated from or destined to.  By\n   definition,\
    \ a NAT mapping can be created from two address realms, one\n   from internal\
    \ and one from external.  Realms are implementation\n   dependent and can represent\
    \ a Virtual Routing and Forwarding (VRF)\n   ID, a VLAN ID, or some unique identifier.\
    \  Realms are optional and,\n   when left unspecified, would mean that the external\
    \ and internal\n   realms are the same.\n   Abstract Data Type: octetArray\n \
    \  Data Type Semantics: identifier\n   Reference: See [RFC791] for the definition\
    \ of the IPv4 source address\n   field.  See [RFC3022] for the definition of NAT.\
    \  See [RFC3234] for\n   the definition of middleboxes.\n"
- title: 6.1.3.  externalAddressRealm
  contents:
  - "6.1.3.  externalAddressRealm\n   ElementID: 465\n   Name: externalAddressRealm\n\
    \   Description: This Information Element represents the external address\n  \
    \ realm where the packet is originated from or destined to.  The\n   detailed\
    \ definition is in the internal address realm as specified\n   above.\n   Abstract\
    \ Data Type: octetArray\n   Data Type Semantics: identifier\n   Reference: See\
    \ [RFC791] for the definition of the IPv4 source address\n   field.  See [RFC3022]\
    \ for the definition of NAT.  See [RFC3234] for\n   the definition of middleboxes.\n"
- title: 6.1.4.  natQuotaExceededEvent
  contents:
  - "6.1.4.  natQuotaExceededEvent\n   ElementID: 466\n   Name: natQuotaExceededEvent\n\
    \   Description: This Information Element identifies the type of a NAT\n   Quota\
    \ Exceeded event.  Values for this Information Element are listed\n   in the \"\
    NAT Quota Exceeded Event Type\" registry, see [IPFIX-IANA].\n   Initial values\
    \ in the registry are defined by the table below.  New\n   assignments of values\
    \ will be administered by IANA and are subject to\n   Expert Review [RFC8126].\
    \  Experts need to check definitions of new\n   values for completeness, accuracy,\
    \ and redundancy.\n              +--------+---------------------------------------+\n\
    \              | Value  | Quota Exceeded Event Name             |\n          \
    \    +--------+---------------------------------------+\n              | 0   \
    \   | Reserved                              |\n              | 1      | Maximum\
    \ session entries               |\n              | 2      | Maximum BIB entries\
    \                   |\n              | 3      | Maximum entries per user     \
    \         |\n              | 4      | Maximum active hosts or subscribers   |\n\
    \              | 5      | Maximum fragments pending reassembly  |\n          \
    \    +--------+---------------------------------------+\n                    Note:\
    \ This is the same as Table 3.\n   Abstract Data Type: unsigned32\n   Data Type\
    \ Semantics: identifier\n   Reference: See [RFC791] for the definition of the\
    \ IPv4 source address\n   field.  See [RFC3022] for the definition of NAT.  See\
    \ [RFC3234] for\n   the definition of middleboxes.\n"
- title: 6.1.5.  natThresholdEvent
  contents:
  - "6.1.5.  natThresholdEvent\n   ElementID: 467\n   Name: natThresholdEvent\n  \
    \ Description: This Information Element identifies a type of a NAT\n   Threshold\
    \ event.  Values for this Information Element are listed in\n   the \"NAT Threshold\
    \ Event Type\" registry, see [IPFIX-IANA].  Initial\n   values in the registry\
    \ are defined by the table below.  New\n   assignments of values will be administered\
    \ by IANA and are subject to\n   Expert Review [RFC8126].  Experts need to check\
    \ definitions of new\n   values for completeness, accuracy, and redundancy.\n\
    \   +--------+---------------------------------------------------------+\n   |\
    \ Value  | Threshold Exceeded Event Name                           |\n   +--------+---------------------------------------------------------+\n\
    \   | 0      | Reserved                                                |\n   |\
    \ 1      | Address pool high threshold event                       |\n   | 2 \
    \     | Address pool low threshold event                        |\n   | 3    \
    \  | Address and port mapping high threshold event           |\n   | 4      |\
    \ Address and port mapping per user high threshold event  |\n   | 5      | Global\
    \ address mapping high threshold event             |\n   +--------+---------------------------------------------------------+\n\
    \                    Note: This is the same as Table 4.\n   Abstract Data Type:\
    \ unsigned32\n   Data Type Semantics: identifier\n   Reference: See [RFC791] for\
    \ the definition of the IPv4 source address\n   field.  See [RFC3022] for the\
    \ definition of NAT.  See [RFC3234] for\n   the definition of middleboxes.\n"
- title: 6.1.6.  natEvent
  contents:
  - "6.1.6.  natEvent\n   The original definition of this Information Element specified\
    \ only\n   three values: 1, 2, and 3.  This definition has been replaced by a\n\
    \   registry, to which new values can be added.  The semantics of the\n   three\
    \ originally defined values remain unchanged.  IANA maintains the\n   \"NAT Event\
    \ Type (Value 230)\" registry for values of this Information\n   Element at [IPFIX-IANA].\n\
    \   ElementID: 230\n   Name: natEvent\n   Description: This Information Element\
    \ identifies a NAT event.  This\n   IE identifies the type of a NAT event.  Examples\
    \ of NAT events\n   include, but are not limited to, NAT translation create, NAT\n\
    \   translation delete, Threshold Reached, or Threshold Exceeded, etc.\n   Values\
    \ for this Information Element are listed in the \"NAT Event\n   Type\" registry,\
    \ see [IPFIX-IANA].  The NAT event values in the\n   registry are defined by Table\
    \ 2 in Section 4.3.  New assignments of\n   values will be administered by IANA\
    \ and are subject to Expert Review\n   [RFC8126].  Experts need to check definitions\
    \ of new values for\n   completeness, accuracy, and redundancy.\n   Abstract Data\
    \ Type: unsigned8\n   Data Type Semantics: identifier\n   Reference: See [RFC3022]\
    \ for the definition of NAT.  See [RFC3234]\n   for the definition of middleboxes.\
    \  See RFC 8158 for the definitions\n   of values 4-16.\n"
- title: 6.1.7.  maxSessionEntries
  contents:
  - "6.1.7.  maxSessionEntries\n   ElementID: 471\n   Name: maxSessionEntries\n  \
    \ Description: This element represents the maximum session entries that\n   can\
    \ be created by the NAT device.\n   Abstract Data Type: unsigned32\n   Data Type\
    \ Semantics: identifier\n   Reference: See [RFC3022] for the definition of NAT.\
    \  See [RFC3234]\n   for the definition of middleboxes.\n"
- title: 6.1.8.  maxBIBEntries
  contents:
  - "6.1.8.  maxBIBEntries\n   ElementID: 472\n   Name: maxBIBEntries\n   Description:\
    \ This element represents the maximum BIB entries that can\n   be created by the\
    \ NAT device.\n   Abstract Data Type: unsigned32\n   Data Type Semantics: identifier\n\
    \   Reference: See [RFC3022] for the definition of NAT.  See [RFC3234]\n   for\
    \ the definition of middleboxes.\n"
- title: 6.1.9.  maxEntriesPerUser
  contents:
  - "6.1.9.  maxEntriesPerUser\n   ElementID: 473\n   Name: maxEntriesPerUser\n  \
    \ Description: This element represents the maximum NAT entries that can\n   be\
    \ created per user by the NAT device.\n   Abstract Data Type: unsigned32\n   Data\
    \ Type Semantics: identifier\n   Reference: See [RFC3022] for the definition of\
    \ NAT.  See [RFC3234]\n   for the definition of middleboxes.\n"
- title: 6.1.10.  maxSubscribers
  contents:
  - "6.1.10.  maxSubscribers\n   ElementID: 474\n   Name: maxSubscribers\n   Description:\
    \ This element represents the maximum subscribers or\n   maximum hosts that are\
    \ allowed by the NAT device.\n   Abstract Data Type: unsigned32\n   Data Type\
    \ Semantics: identifier\n   Reference: See [RFC3022] for the definition of NAT.\
    \  See [RFC3234]\n   for the definition of middleboxes.\n"
- title: 6.1.11.  maxFragmentsPendingReassembly
  contents:
  - "6.1.11.  maxFragmentsPendingReassembly\n   ElementID: 475\n   Name: maxFragmentsPendingReassembly\n\
    \   Description: This element represents the maximum fragments that the\n   NAT\
    \ device can store for reassembling the packet.\n   Abstract Data Type: unsigned32\n\
    \   Data Type Semantics: identifier\n   Reference: See [RFC3022] for the definition\
    \ of NAT.  See [RFC3234]\n   for the definition of middleboxes.\n"
- title: 6.1.12.  addressPoolHighThreshold
  contents:
  - "6.1.12.  addressPoolHighThreshold\n   ElementID: 476\n   Name: addressPoolHighThreshold\n\
    \   Description: This element represents the high threshold value of the\n   number\
    \ of public IP addresses in the address pool.\n   Abstract Data Type: unsigned32\n\
    \   Data Type Semantics: identifier\n   Reference: See [RFC3022] for the definition\
    \ of NAT.  See [RFC3234]\n   for the definition of middleboxes.\n"
- title: 6.1.13.  addressPoolLowThreshold
  contents:
  - "6.1.13.  addressPoolLowThreshold\n   ElementID: 477\n   Name: addressPoolLowThreshold\n\
    \   Description: This element represents the low threshold value of the\n   number\
    \ of public IP addresses in the address pool.\n   Abstract Data Type: unsigned32\n\
    \   Data Type Semantics: identifier\n   Reference: See [RFC3022] for the definition\
    \ of NAT.  See [RFC3234]\n   for the definition of middleboxes.\n"
- title: 6.1.14.  addressPortMappingHighThreshold
  contents:
  - "6.1.14.  addressPortMappingHighThreshold\n   ElementID: 478\n   Name: addressPortMappingHighThreshold\n\
    \   Description: This element represents the high threshold value of the\n   number\
    \ of address and port mappings.\n   Abstract Data Type: unsigned32\n   Data Type\
    \ Semantics: identifier\n   Reference: See [RFC3022] for the definition of NAT.\
    \  See [RFC3234]\n   for the definition of middleboxes.\n"
- title: 6.1.15.  addressPortMappingLowThreshold
  contents:
  - "6.1.15.  addressPortMappingLowThreshold\n   ElementID: 479\n   Name: addressPortMappingLowThreshold\n\
    \   Description: This element represents the low threshold value of the\n   number\
    \ of address and port mappings.\n   Abstract Data Type: unsigned32\n   Data Type\
    \ Semantics: identifier\n   Reference: See [RFC3022] for the definition of NAT.\
    \  See [RFC3234]\n   for the definition of middleboxes.\n"
- title: 6.1.16.  addressPortMappingPerUserHighThreshold
  contents:
  - "6.1.16.  addressPortMappingPerUserHighThreshold\n   ElementID: 480\n   Name:\
    \ addressPortMappingPerUserHighThreshold\n   Description: This element represents\
    \ the high threshold value of the\n   number of address and port mappings that\
    \ a single user is allowed to\n   create on a NAT device.\n   Abstract Data Type:\
    \ unsigned32\n   Data Type Semantics: identifier\n   Reference: See [RFC3022]\
    \ for the definition of NAT.  See [RFC3234]\n   for the definition of middleboxes.\n"
- title: 6.1.17.  globalAddressMappingHighThreshold
  contents:
  - "6.1.17.  globalAddressMappingHighThreshold\n   ElementID: 481\n   Name: globalAddressMappingHighThreshold\n\
    \   Description: This element represents the high threshold value of the\n   number\
    \ of address and port mappings that a single user is allowed to\n   create on\
    \ a NAT device in a paired address pooling behavior.\n   Abstract Data Type: unsigned32\n\
    \   Data Type Semantics: identifier\n   Reference: See [RFC3022] for the definition\
    \ of NAT.  See [RFC3234]\n   for the definition of middleboxes.  See [RFC4787]\
    \ for the definition\n   of paired address pooling behavior.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   The security considerations listed in detail\
    \ for IPFIX in [RFC7011]\n   apply to this document as well.  As described in\
    \ [RFC7011], the\n   messages exchanged between the NAT device and the Collector\
    \ MUST be\n   protected to provide confidentiality, integrity, and authenticity.\n\
    \   Without those characteristics, the messages are subject to various\n   kinds\
    \ of attacks.  These attacks are described in great detail in\n   [RFC7011].\n\
    \   This document re-emphasizes the use of Transport Layer Security (TLS)\n  \
    \ or Datagram Transport Layer Security (DTLS) for exchanging the log\n   messages\
    \ between the NAT device and the Collector.  The log events\n   sent in cleartext\
    \ can result in confidential data being exposed to\n   attackers, who could then\
    \ spoof log events based on the information\n   in cleartext messages.  Hence,\
    \ the log events SHOULD NOT be sent in\n   cleartext.\n   The logging of NAT events\
    \ can result in privacy concerns as a result\n   of exporting information such\
    \ as the source address and port\n   information.  The logging of destination\
    \ information can also cause\n   privacy concerns, but it has been well documented\
    \ in [RFC6888].  A\n   NAT device can choose to operate in various logging modes\
    \ if it wants\n   to avoid logging of private information.  The Collector that\
    \ receives\n   the information can also choose to mask the private information\
    \ but\n   generate reports based on abstract data.  It is outside the scope of\n\
    \   this document to address the implementation of logging modes for\n   privacy\
    \ considerations.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC4787]  Audet, F., Ed. and C. Jennings, \"Network Address\n           \
    \   Translation (NAT) Behavioral Requirements for Unicast\n              UDP\"\
    , BCP 127, RFC 4787, DOI 10.17487/RFC4787, January\n              2007, <https://www.rfc-editor.org/info/rfc4787>.\n\
    \   [RFC5382]  Guha, S., Ed., Biswas, K., Ford, B., Sivakumar, S., and P.\n  \
    \            Srisuresh, \"NAT Behavioral Requirements for TCP\", BCP 142,\n  \
    \            RFC 5382, DOI 10.17487/RFC5382, October 2008,\n              <https://www.rfc-editor.org/info/rfc5382>.\n\
    \   [RFC6146]  Bagnulo, M., Matthews, P., and I. van Beijnum, \"Stateful\n   \
    \           NAT64: Network Address and Protocol Translation from IPv6\n      \
    \        Clients to IPv4 Servers\", RFC 6146, DOI 10.17487/RFC6146,\n        \
    \      April 2011, <https://www.rfc-editor.org/info/rfc6146>.\n   [RFC6302]  Durand,\
    \ A., Gashinsky, I., Lee, D., and S. Sheppard,\n              \"Logging Recommendations\
    \ for Internet-Facing Servers\",\n              BCP 162, RFC 6302, DOI 10.17487/RFC6302,\
    \ June 2011,\n              <https://www.rfc-editor.org/info/rfc6302>.\n   [RFC6888]\
    \  Perreault, S., Ed., Yamagata, I., Miyakawa, S., Nakagawa,\n              A.,\
    \ and H. Ashida, \"Common Requirements for Carrier-Grade\n              NATs (CGNs)\"\
    , BCP 127, RFC 6888, DOI 10.17487/RFC6888,\n              April 2013, <https://www.rfc-editor.org/info/rfc6888>.\n\
    \   [RFC7011]  Claise, B., Ed., Trammell, B., Ed., and P. Aitken,\n          \
    \    \"Specification of the IP Flow Information Export (IPFIX)\n             \
    \ Protocol for the Exchange of Flow Information\", STD 77,\n              RFC\
    \ 7011, DOI 10.17487/RFC7011, September 2013,\n              <https://www.rfc-editor.org/info/rfc7011>.\n\
    \   [RFC7659]  Perreault, S., Tsou, T., Sivakumar, S., and T. Taylor,\n      \
    \        \"Definitions of Managed Objects for Network Address\n              Translators\
    \ (NATs)\", RFC 7659, DOI 10.17487/RFC7659,\n              October 2015, <https://www.rfc-editor.org/info/rfc7659>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n     \
    \         2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n        \
    \      May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [IPFIX-IANA]\n              IANA, \"IPFIX Information\
    \ Elements\",\n              <http://www.iana.org/assignments/ipfix>.\n   [NAT-LOG]\
    \  Chen, Z., Zhou, C., Tsou, T., and T. Taylor, Ed., \"Syslog\n              Format\
    \ for NAT Logging\", Work in Progress, draft-ietf-\n              behave-syslog-nat-logging-06,\
    \ January 2014.\n   [RFC791]   Postel, J., \"Internet Protocol\", STD 5, RFC 791,\n\
    \              DOI 10.17487/RFC0791, September 1981,\n              <https://www.rfc-editor.org/info/rfc791>.\n\
    \   [RFC2663]  Srisuresh, P. and M. Holdrege, \"IP Network Address\n         \
    \     Translator (NAT) Terminology and Considerations\",\n              RFC 2663,\
    \ DOI 10.17487/RFC2663, August 1999,\n              <https://www.rfc-editor.org/info/rfc2663>.\n\
    \   [RFC3022]  Srisuresh, P. and K. Egevang, \"Traditional IP Network\n      \
    \        Address Translator (Traditional NAT)\", RFC 3022,\n              DOI\
    \ 10.17487/RFC3022, January 2001,\n              <https://www.rfc-editor.org/info/rfc3022>.\n\
    \   [RFC3234]  Carpenter, B. and S. Brim, \"Middleboxes: Taxonomy and\n      \
    \        Issues\", RFC 3234, DOI 10.17487/RFC3234, February 2002,\n          \
    \    <https://www.rfc-editor.org/info/rfc3234>.\n   [RFC5424]  Gerhards, R., \"\
    The Syslog Protocol\", RFC 5424,\n              DOI 10.17487/RFC5424, March 2009,\n\
    \              <https://www.rfc-editor.org/info/rfc5424>.\n   [RFC8126]  Cotton,\
    \ M., Leiba, B., and T. Narten, \"Guidelines for\n              Writing an IANA\
    \ Considerations Section in RFCs\", BCP 26,\n              RFC 8126, DOI 10.17487/RFC8126,\
    \ June 2017,\n              <https://www.rfc-editor.org/info/rfc8126>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Thanks to Dan Wing, Selvi Shanmugam, Mohamed Boucadir, Jacni\
    \ Qin,\n   Ramji Vaithianathan, Simon Perreault, Jean-Francois Tremblay, Paul\n\
    \   Aitken, Julia Renouard, Spencer Dawkins, and Brian Trammell for their\n  \
    \ review and comments.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Senthil Sivakumar\n   Cisco Systems\n   7100-8 Kit Creek\
    \ Road\n   Research Triangle Park, NC  27709\n   United States of America\n  \
    \ Phone: +1 919 392 5158\n   Email: ssenthil@cisco.com\n   Reinaldo Penno\n  \
    \ Cisco Systems\n   170 W Tasman Drive\n   San Jose, CA  95035\n   United States\
    \ of America\n   Email: repenno@cisco.com\n"
