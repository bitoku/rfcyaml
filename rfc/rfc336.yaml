- title: __initial_text__
  contents:
  - ''
- title: Level 0 Graphic Input Protocol                          5 May 1972
  contents:
  - "Level 0 Graphic Input Protocol                          5 May 1972\n        Level\
    \ 0 Graphic Input Protocol\n           At its meeting on April 16-18 the network\
    \ Graphics working\n           group began to consider the definition of levels\
    \ of protocol\n           for graphic Input Protocol.  The following describes\
    \ the\n           Level 0 graphics input protocol.\n           The philosophy\
    \ guiding the establishment of this protocol is\n           the same as suggested\
    \ in RFC #178, \"Network Graphic Attention\n           Handling.\" Briefly, all\
    \ input will be described by type,\n           origin, and length, followed by\
    \ the actual data.\n           Only two types of input are defined at Level 0:\
    \ text and\n           simple position.\n              Text Input\n          \
    \        Text input will be conveyed in the following format:\n              \
    \     TEXTIN : DEVICE : COUNT: Text String\n                 TEXTIN is a protocol\
    \ code indicating the nature of this\n                 input string.  For the\
    \ present this code is defined to\n                 be 1.\n                 DEVICE\
    \ is a code indicating the device from which the\n                 input originated.\
    \  The following codes are presently\n                 defined:\n            \
    \          0 - unspecified device\n                      1 - primary keyboard\n\
    \                      2 - tablet\n                      3 - mouse\n         \
    \             4 - joystick\n                      5 - lightpen\n             \
    \         6 - cursor\n                      7 - keyset\n                     \
    \ 8 - mouse & keyset\n"
- title: Level 0 Graphic Input Protocol
  contents:
  - "Level 0 Graphic Input Protocol\n                 Count is an integer number indicating\
    \ the number of\n                 characters (bytes) which follow.\n         \
    \        Text String is a string of \"Count\" bytes of characters\n          \
    \       in network ASCII.\n              Position Input\n                   Simple\
    \ position data will be conveyed in the\n              following format:\n   \
    \                POSIT : DEVICE : COUNT : x : y\n                 POSIT is a protocol\
    \ code indicating that this string\n                 contains position data. \
    \ For the present this code is\n                 defined to be 2.\n          \
    \       DEVICE is a code indicating the input device on which\n              \
    \   this data was generated.  The codes are as defined\n                 above.\n\
    \                 COUNT is an integer number indicating the number of\n      \
    \           bytes of data which follow.  This includes data for\n            \
    \     both x and y coordinates.  Thus, the number of bytes of\n              \
    \   x coordinate data is COUNT divided by 2.  At level 0,\n                 COUNT\
    \ should always be 4, since at this level all\n                 coordinates are\
    \ expressed in 2 bytes of data.\n                 x and y coordinate data are\
    \ represented as signed\n                 fractions in the same fashion that position\
    \ data is\n                 represented in the Level 0 graphic output protocol.\n\
    \           It should be emphasized that input data from a level 0\n         \
    \  graphics user which is not in a format described above should\n           be\
    \ sent on a different link than the graphics input link.\n           This may\
    \ be desirable for certain applications to avoid the\n           overhead of the\
    \ protocol.\n       [ This RFC was put into machine readable form for entry ]\n\
    \       [ into the online RFC archives by BBN Corp. under the   ]\n       [ direction\
    \ of Alex McKenzie.                   12/96   ]\n"
