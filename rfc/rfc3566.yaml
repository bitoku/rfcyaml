- title: __initial_text__
  contents:
  - '          The AES-XCBC-MAC-96 Algorithm and Its Use With IPsec

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   A Message Authentication Code (MAC) is a key-dependent one way hash\n\
    \   function.  One popular way to construct a MAC algorithm is to use a\n   block\
    \ cipher in conjunction with the Cipher-Block-Chaining (CBC) mode\n   of operation.\
    \  The classic CBC-MAC algorithm, while secure for\n   messages of a pre-selected\
    \ fixed length, has been shown to be\n   insecure across messages of varying lengths\
    \ such as the type found in\n   typical IP datagrams.  This memo specifies the\
    \ use of AES in CBC mode\n   with a set of extensions to overcome this limitation.\
    \  This new\n   algorithm is named AES-XCBC-MAC-96.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . .   2\n   2.  Specification of Requirements  . . . . . . . . . . . . .\
    \ .   2\n   3.  Basic CBC-MAC with Obligatory 10* Padding  . . . . . . . .   3\n\
    \   4.  AES-XCBC-MAC-96  . . . . . . . . . . . . . . . . . . . . .   3\n     \
    \  4.1.  Keying Material. . . . . . . . . . . . . . . . . . .   5\n       4.2.\
    \  Padding  . . . . . . . . . . . . . . . . . . . . . .   6\n       4.3.  Truncation\
    \ . . . . . . . . . . . . . . . . . . . . .   6\n       4.4.  Interaction with\
    \ the ESP Cipher Mechanism. . . . . .   6\n       4.5.  Performance. . . . . .\
    \ . . . . . . . . . . . . . . .   6\n       4.6.  Test Vectors . . . . . . . .\
    \ . . . . . . . . . . . .   7\n   5.  Security Considerations  . . . . . . . .\
    \ . . . . . . . . .   8\n   6.  IANA Considerations  . . . . . . . . . . . . .\
    \ . . . . . .   8\n   7.  Intellectual Property Rights Statement . . . . . . .\
    \ . . .   8\n   8.  Acknowledgments  . . . . . . . . . . . . . . . . . . . . .\
    \   8\n   9.  References . . . . . . . . . . . . . . . . . . . . . . . .   9\n\
    \       9.1.  Normative References . . . . . . . . . . . . . . . .   9\n     \
    \  9.2.  Informative References . . . . . . . . . . . . . . .   9\n   10. Authors'\
    \ Addresses . . . . . . . . . . . . . . . . . . . .  10\n   11. Full Copyright\
    \ Statement . . . . . . . . . . . . . . . . .  11\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Message authentication provides data integrity and data\
    \ origin\n   authentication with respect to the original message source.  A\n\
    \   Message Authentication Code (MAC) is a key-dependent one way hash\n   function.\
    \  One popular way to construct a MAC algorithm is to use a\n   block cipher in\
    \ conjunction with the Cipher-Block-Chaining (CBC) mode\n   of operation.  The\
    \ classic CBC-MAC algorithm, while secure for\n   messages of a pre-selected fixed\
    \ length [CBC-MAC-2], has been shown\n   to be insecure across messages of varying\
    \ lengths such as the type\n   found in typical IP datagrams [CBC-MAC-2, section\
    \ 5].  In fact, it is\n   trivial to produce forgeries for a second message given\
    \ the MAC of a\n   prior message.  [HANDBOOK, section 9.62, p. 354]\n   This memo\
    \ specifies the use of AES [AES] in CBC mode [MODES] with a\n   set of extensions\
    \ [XCBC-MAC-1] to overcome this limitation.  This new\n   algorithm is named AES-XCBC-MAC-96.\
    \  Using the AES block cipher, with\n   its increased block size (128 bits) and\
    \ increased key length (128\n   bits), provides the new algorithm with the ability\
    \ to withstand\n   continuing advances in crypto-analytic techniques and computational\n\
    \   capability.  AES-XCBC-MAC-96 is used as an authentication mechanism\n   within\
    \ the context of the IPsec Encapsulating Security Payload (ESP)\n   and the Authentication\
    \ Header (AH) protocols.  For further\n   information on ESP, refer to [ESP] and\
    \ [ROADMAP].  For further\n   information on AH, refer to [AH] and [ROADMAP].\n\
    \   The goal of AES-XCBC-MAC-96 is to ensure that the datagram is\n   authentic\
    \ and cannot be modified in transit.  Data integrity and data\n   origin authentication\
    \ as provided by AES-XCBC-MAC-96 are dependent\n   upon the scope of the distribution\
    \ of the secret key.  If the key is\n   known only by the source and destination,\
    \ this algorithm will provide\n   both data origin authentication and data integrity\
    \ for datagrams sent\n   between the two parties.  In addition, only a party with\
    \ the\n   identical key can verify the hash.\n"
- title: 2.  Specification of Requirements
  contents:
  - "2.  Specification of Requirements\n   The keywords \"MUST\", \"MUST NOT\", \"\
    REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" that\n   appear in this document are to be interpreted\
    \ as described in BCP 14,\n   RFC 2119 [RFC-2119].\n"
- title: 3.  Basic CBC-MAC with Obligatory 10* Padding
  contents:
  - "3.  Basic CBC-MAC with Obligatory 10* Padding\n   CBC-MAC uses a block cipher\
    \ for encryption; the block cipher\n   transforms b bits of plaintext to b bits\
    \ of ciphertext.  The basic\n   CBC-MAC [CBC-MAC-1, CBC-MAC-2] with Obligatory\
    \ 10* Padding over a\n   b-bit block cipher is calculated as follows for a message\
    \ M:\n   (1)  Append a single 1 bit to M.  Then append the minimum number of 0\n\
    \        bits to M such that the length of M is a multiple of b.\n        [NOTE:\
    \ This is 1 of several padding schemes that can be used for\n        CBC-MAC.\
    \  Several others are described in [MODES].]\n   (2)  Break M into n blocks, M[1]\
    \ ... M[n], where the blocksize of\n        blocks M[1] ... M[n] is b bits\n \
    \  (3)  Define E[0] = 0x00000000000000000000000000000000\n   (4)  For each block\
    \ M[i], where i = 1 ... n:\n        XOR M[i] with E[i-1], then encrypt the result\
    \ with Key K,\n        yielding E[i].\n   (5)  E[n] is the b-bit authenticator.\n\
    \   Basic CBC-MAC with obligatory 10* padding has been shown to be secure\n  \
    \ for messages up to (but not including) a pre-selected fixed length,\n   in which\
    \ the length is a multiple of the blocksize.  This algorithm\n   is not suitable\
    \ for IPsec for the following reasons:\n   +    Any IPsec authenticator must be\
    \ able to handle messages of\n        arbitrary length.  However, the basic CBC-MAC\
    \ cannot securely\n        handle messages that exceed the pre-selected fixed\
    \ length.\n   +    For messages shorter than the pre-selected fixed length, padding\n\
    \        the message to the pre-selected fixed length may necessitate\n      \
    \  additional encryption operations, adding an unacceptable\n        computational\
    \ penalty.\n"
- title: 4.  AES-XCBC-MAC-96
  contents:
  - "4.  AES-XCBC-MAC-96\n   [AES] describes the underlying AES algorithm, while [CBC-MAC-1]\
    \ and\n   [XCBC-MAC-1] describe the AES-XCBC-MAC algorithm.\n   The AES-XCBC-MAC-96\
    \ algorithm is a variant of the basic CBC-MAC with\n   obligatory 10* padding;\
    \ however, AES-XCBC-MAC-96 is secure for\n   messages of arbitrary length.  The\
    \ AES-XCBC-MAC-96 calculations\n   require numerous encryption operations; this\
    \ encryption MUST be\n   accomplished using AES with a 128-bit key.  Given a 128-bit\
    \ secret\n   key K, AES-XCBC-MAC-96 is calculated as follows for a message M that\n\
    \   consists of n blocks, M[1] ... M[n], in which the blocksize of blocks\n  \
    \ M[1] ... M[n-1] is 128 bits and the blocksize of block M[n] is\n   between 1\
    \ and 128 bits:\n   (1)  Derive 3 128-bit keys (K1, K2 and K3) from the 128-bit\
    \ secret\n        key K, as follows:\n        K1 = 0x01010101010101010101010101010101\
    \ encrypted with Key K\n        K2 = 0x02020202020202020202020202020202 encrypted\
    \ with Key K\n        K3 = 0x03030303030303030303030303030303 encrypted with Key\
    \ K\n   (2)  Define E[0] = 0x00000000000000000000000000000000\n   (3)  For each\
    \ block M[i], where i = 1 ... n-1:\n        XOR M[i] with E[i-1], then encrypt\
    \ the result with Key K1,\n        yielding E[i].\n   (4)  For block M[n]:\n \
    \     a)  If the blocksize of M[n] is 128 bits:\n          XOR M[n] with E[n-1]\
    \ and Key K2, then encrypt the result with\n          Key K1, yielding E[n].\n\
    \      b)  If the blocksize of M[n] is less than 128 bits:\n         i)  Pad M[n]\
    \ with a single \"1\" bit, followed by the number of\n             \"0\" bits\
    \ (possibly none) required to increase M[n]'s\n             blocksize to 128 bits.\n\
    \         ii) XOR M[n] with E[n-1] and Key K3, then encrypt the result\n     \
    \        with Key K1, yielding E[n].\n   (5)  The authenticator value is the leftmost\
    \ 96 bits of the 128-bit\n        E[n].\n   NOTE1: If M is the empty string, pad\
    \ and encrypt as in (4)(b) to\n   create M[1] and E[1].  This will never be the\
    \ case for ESP or AH, but\n   is included for completeness sake.\n   NOTE2: [CBC-MAC-1]\
    \ defines K1 as follows:\n                  K1 = Constant1A encrypted with Key\
    \ K |\n                     Constant1B encrypted with Key K.\n          However,\
    \ the second encryption operation is only needed for\n          AES-XCBC-MAC with\
    \ keys greater than 128 bits; thus, it is not\n          included in the definition\
    \ of AES-XCBC-MAC-96.\n   AES-XCBC-MAC-96 verification is performed as follows:\n\
    \          Upon receipt of the AES-XCBC-MAC-96 authenticator, the entire\n   \
    \       128-bit value is computed and the first 96 bits are compared to\n    \
    \      the value stored in the authenticator field.\n"
- title: 4.1.  Keying Material
  contents:
  - "4.1.  Keying Material\n   AES-XCBC-MAC-96 is a secret key algorithm.  For use\
    \ with either ESP or\n   AH a fixed key length of 128-bits MUST be supported.\
    \  Key lengths\n   other than 128-bits MUST NOT be supported (i.e., only 128-bit\
    \ keys are\n   to be used by AES-XCBC-MAC-96).\n   AES-XCBC-MAC-96 actually requires\
    \ 384 bits of keying material (128\n   bits for the AES keysize + 2 times the\
    \ blocksize).  This keying\n   material can either be provided through the key\
    \ generation mechanism\n   or it can be generated from a single 128-bit key. \
    \ The latter approach\n   has been selected for AES-XCBC-MAC-96, since it is analogous\
    \ to other\n   authenticators used within IPsec.  The reason AES-XCBC-MAC-96 uses\
    \ 3\n   keys is so the length of the input stream does not need to be known\n\
    \   in advance.  This may be useful for systems that do one-pass assembly\n  \
    \ of large packets.\n   A strong pseudo-random function MUST be used to generate\
    \ the required\n   128-bit key.  This key, along with the 3 derived keys (K1,\
    \ K2 and K3),\n   should be used for no purposes other than those specified in\
    \ the\n   algorithm.  In particular, they should not be used as keys in another\n\
    \   cryptographic setting.  Such abuses will invalidate the security of\n   the\
    \ authentication algorithm.\n   At the time of this writing there are no specified\
    \ weak keys for use\n   with AES-XCBC-MAC-96.  This does not mean to imply that\
    \ weak keys do\n   not exist.  If, at some point, a set of weak keys for AES-XCBC-MAC-96\n\
    \   are identified, the use of these weak keys MUST be rejected followed\n   by\
    \ a request for replacement keys or a newly negotiated Security\n   Association.\n\
    \   [ARCH] describes the general mechanism for obtaining keying material\n   when\
    \ multiple keys are required for a single SA (e.g., when an ESP SA\n   requires\
    \ a key for confidentiality and a key for authentication).\n   In order to provide\
    \ data origin authentication, the key distribution\n   mechanism must ensure that\
    \ unique keys are allocated and that they\n   are distributed only to the parties\
    \ participating in the\n   communication.\n   Current attacks do not necessitate\
    \ a specific recommended frequency\n   for key changes.  However, periodic key\
    \ refreshment is a fundamental\n   security practice that helps against potential\
    \ weaknesses of the\n   function and the keys, reduces the information available\
    \ to a\n   cryptanalyst, and limits the damage resulting from a compromised key.\n"
- title: 4.2.  Padding
  contents:
  - "4.2.  Padding\n   AES-XCBC-MAC-96 operates on 128-bit blocks of data.  Padding\n\
    \   requirements are specified in [CBC-MAC-1] and are part of the XCBC\n   algorithm.\
    \  If you build AES-XCBC-MAC-96 according to [CBC-MAC-1] you\n   do not need to\
    \ add any additional padding as far as AES-XCBC-MAC-96\n   is concerned.  With\
    \ regard to \"implicit packet padding\" as defined in\n   [AH], no implicit packet\
    \ padding is required.\n"
- title: 4.3.  Truncation
  contents:
  - "4.3.  Truncation\n   AES-XCBC-MAC produces a 128-bit authenticator value.  AES-XCBC-MAC-96\n\
    \   is derived by truncating this 128-bit value as described in [HMAC]\n   and\
    \ verified in [XCBC-MAC-2].  For use with either ESP or AH, a\n   truncated value\
    \ using the first 96 bits MUST be supported.  Upon\n   sending, the truncated\
    \ value is stored within the authenticator\n   field.  Upon receipt, the entire\
    \ 128-bit value is computed and the\n   first 96 bits are compared to the value\
    \ stored in the authenticator\n   field.  No other authenticator value lengths\
    \ are supported by\n   AES-XCBC-MAC-96.\n   The length of 96 bits was selected\
    \ because it is the default\n   authenticator length as specified in [AH] and\
    \ meets the security\n   requirements described in [XCBC-MAC-2].\n"
- title: 4.4.  Interaction with the ESP Cipher Mechanism
  contents:
  - "4.4.  Interaction with the ESP Cipher Mechanism\n   As of this writing, there\
    \ are no known issues which preclude the use\n   of AES-XCBC-MAC-96 with any specific\
    \ cipher algorithm.\n"
- title: 4.5.  Performance
  contents:
  - "4.5.  Performance\n   For any CBC MAC variant, the major computational effort\
    \ is expended\n   in computing the underlying block cipher.  This algorithm uses\
    \ a\n   minimum number of AES invocations, one for each block of the message\n\
    \   or fraction thereof, resulting in performance equivalent to classic\n   CBC-MAC.\n\
    \   The key expansion requires 3 additional AES encryption operations,\n   but\
    \ these can be performed once in advance for each secret key.\n"
- title: 4.6.  Test Vectors
  contents:
  - "4.6.  Test Vectors\n   These test cases were provided by John Black, co-author\
    \ of the\n   XCBC-MAC algorithm, who verified them with 2 independent\n   implementations.\
    \  All values are hexadecimal numbers.\n   Test Case #1   : AES-XCBC-MAC-96 with\
    \ 0-byte input\n   Key (K)        : 000102030405060708090a0b0c0d0e0f\n   Message\
    \ (M)    : <empty string>\n   AES-XCBC-MAC   : 75f0251d528ac01c4573dfd584d79f29\n\
    \   AES-XCBC-MAC-96: 75f0251d528ac01c4573dfd5\n   Test Case #2   : AES-XCBC-MAC-96\
    \ with 3-byte input\n   Key (K)        : 000102030405060708090a0b0c0d0e0f\n  \
    \ Message (M)    : 000102\n   AES-XCBC-MAC   : 5b376580ae2f19afe7219ceef172756f\n\
    \   AES-XCBC-MAC-96: 5b376580ae2f19afe7219cee\n   Test Case #3   : AES-XCBC-MAC-96\
    \ with 16-byte input\n   Key (K)        : 000102030405060708090a0b0c0d0e0f\n \
    \  Message (M)    : 000102030405060708090a0b0c0d0e0f\n   AES-XCBC-MAC   : d2a246fa349b68a79998a4394ff7a263\n\
    \   AES-XCBC-MAC-96: d2a246fa349b68a79998a439\n   Test Case #4   : AES-XCBC-MAC-96\
    \ with 20-byte input\n   Key (K)        : 000102030405060708090a0b0c0d0e0f\n \
    \  Message (M)    : 000102030405060708090a0b0c0d0e0f10111213\n   AES-XCBC-MAC\
    \   : 47f51b4564966215b8985c63055ed308\n   AES-XCBC-MAC-96: 47f51b4564966215b8985c63\n\
    \   Test Case #5   : AES-XCBC-MAC-96 with 32-byte input\n   Key (K)        : 000102030405060708090a0b0c0d0e0f\n\
    \   Message (M)    : 000102030405060708090a0b0c0d0e0f10111213141516171819\n  \
    \                  1a1b1c1d1e1f\n   AES-XCBC-MAC   : f54f0ec8d2b9f3d36807734bd5283fd4\n\
    \   AES-XCBC-MAC-96: f54f0ec8d2b9f3d36807734b\n   Test Case #6   : AES-XCBC-MAC-96\
    \ with 34-byte input\n   Key (K)        : 000102030405060708090a0b0c0d0e0f\n \
    \  Message (M)    : 000102030405060708090a0b0c0d0e0f10111213141516171819\n   \
    \                 1a1b1c1d1e1f2021\n   AES-XCBC-MAC   : becbb3bccdb518a30677d5481fb6b4d8\n\
    \   AES-XCBC-MAC-96: becbb3bccdb518a30677d548\n   Test Case #7   : AES-XCBC-MAC-96\
    \ with 1000-byte input\n   Key (K)        : 000102030405060708090a0b0c0d0e0f\n\
    \   Message (M)    : 00000000000000000000 ... 00000000000000000000\n         \
    \           [1000 bytes]\n   AES-XCBC-MAC   : f0dafee895db30253761103b5d84528f\n\
    \   AES-XCBC-MAC-96: f0dafee895db30253761103b\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   The security provided by AES-XCBC-MAC-96 is based\
    \ upon the strength\n   of AES.  At the time of this writing there are no practical\n\
    \   cryptographic attacks against AES or AES-XCBC-MAC-96.\n   As is true with\
    \ any cryptographic algorithm, part of its strength\n   lies in the correctness\
    \ of the algorithm implementation, the security\n   of the key management mechanism\
    \ and its implementation, the strength\n   of the associated secret key, and upon\
    \ the correctness of the\n   implementation in all of the participating systems.\
    \  This document\n   contains test vectors to assist in verifying the correctness\
    \ of\n   AES-XCBC-MAC-96 code.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   IANA has assigned AH Transform Identifier 9 to AH_AES-XCBC-MAC.\
    \  IANA\n   has assigned AH/ESP Authentication Algorithm Value 9 to AES-XCBC-MAC.\n"
- title: 7.  Intellectual Property Rights Statement
  contents:
  - "7.  Intellectual Property Rights Statement\n   The IETF takes no position regarding\
    \ the validity or scope of any\n   intellectual property or other rights that\
    \ might be claimed to\n   pertain to the implementation or use of the technology\
    \ described in\n   this document or the extent to which any license under such\
    \ rights\n   might or might not be available; neither does it represent that it\n\
    \   has made any effort to identify any such rights.  Information on the\n   IETF's\
    \ procedures with respect to rights in standards-track and\n   standards-related\
    \ documentation can be found in BCP-11.  Copies of\n   claims of rights made available\
    \ for publication and any assurances of\n   licenses to be made available, or\
    \ the result of an attempt made to\n   obtain a general license or permission\
    \ for the use of such\n   proprietary rights by implementers or users of this\
    \ specification can\n   be obtained from the IETF Secretariat.\n"
- title: 8.  Acknowledgments
  contents:
  - "8.  Acknowledgments\n   Portions of this text were unabashedly borrowed from\
    \ [HMAC-SHA].\n   Thanks to the XCBC-MAC authors for their expert advice and rapid\n\
    \   response to our queries: to Phil Rogaway for providing values for the\n  \
    \ XCBC-MAC constants; and to John Black for detailed corrections to the\n   algorithm\
    \ specifications and for providing the test cases.  Thanks\n   also to Andrew\
    \ Krywaniuk for insisting on (and providing wording for)\n   a rationale for the\
    \ 3-key approach.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [AES]         NIST, FIPS PUB 197, \"Advanced Encryption\
    \ Standard\n                 (AES),\" November 2001.\n                 http://csrc.nist.gov/publications/fips/fips197/\n\
    \                 fips-197.{ps,pdf}\n   [AH]          Kent, S. and R. Atkinson,\
    \ \"IP Authentication Header\",\n                 RFC 2402, November 1998.\n \
    \  [CBC-MAC-1]   Black, J. and P. Rogaway, \"CBC MACs for\n                 Arbitrary-Length\
    \ Messages: The Three-Key\n                 Constructions,\" in M. Bellare, editor,\
    \ Advances in\n                 Cryptology -- CRYPTO '00, volume 1880 of Lecture\
    \ Notes\n                 in Computer Science, p.  0197, August 2000,\n      \
    \           Springer-Verlag.\n                 http://www.cs.ucdavis.edu/~rogaway/papers/3k.ps\n\
    \   [ESP]         Kent, S. and R. Atkinson, \"IP Encapsulating Security\n    \
    \             Payload (ESP)\", RFC 2406, November 1998.\n   [RFC-2119]    Bradner,\
    \ S., \"Key words for use in RFCs to Indicate\n                 Requirement Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [XCBC-MAC-1]  Black, J. and P. Rogaway, \"\
    A Suggestion for Handling\n                 Arbitrary-Length Messages with the\
    \ CBC MAC,\" NIST\n                 Second Modes of Operation Workshop, August\
    \ 2001.\n                 http://csrc.nist.gov/encryption/modes/proposedmodes/\n\
    \                 xcbc-mac/xcbc-mac-spec.pdf\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [ARCH]       Kent, S. and R. Atkinson, \"Security\
    \ Architecture for the\n                Internet Protocol\", RFC 2401, November\
    \ 1998.\n   [CBC-MAC-2]  Bellare, M., J. Kilian and P. Rogaway, \"The Security\
    \ of\n                the Cipher Block Chaining Message Authentication Code,\"\
    \n                Journal of Computer and System Sciences (JCSS), Vol.\n     \
    \           61, No. 3, December 2000, pp. 362-399.\n                http://www.cse.ucsd.edu/users/mihir/papers/cbc.{ps,pdf}\n\
    \   [HMAC]       Krawczyk, H., Bellare, M. and R. Canetti, \"HMAC:\n         \
    \       Keyed-Hashing for Message Authentication\", RFC 2104,\n              \
    \  February 1997.\n   [HMAC-SHA]   Madson, C. and R. Glenn, \"The Use of HMAC-SHA-1-96\n\
    \                within ESP and AH\", RFC 2404, November 1998.\n   [HANDBOOK]\
    \   Menezes, A., P. Van Oorschot and S. Vanstone, \"Handbook\n               \
    \ of Applied Cryptography\", CRC Press, 1997.\n   [MODES]      Dworkin, M., \"\
    Recommendation for Block Cipher Modes of\n                Operation: Methods and\
    \ Techniques,\" NIST Special\n                Publication 800-38A, December 2001.\n\
    \                http://csrc.nist.gov/publications/nistpubs/800-38a\n        \
    \        /sp800-38a.pdf\n   [RFC-2026]   Bradner, S., \"The Internet Standards\
    \ Process -- Revision\n                3\", BCP 9, RFC 2026, October 1996.\n \
    \  [ROADMAP]    Thayer, R., N. Doraswamy, and R. Glenn, \"IP Security\n      \
    \          Document Roadmap\", RFC 2411, November 1998.\n   [XCBC-MAC-2] Rogaway,\
    \ Phil, email communications, October 2001.\n"
- title: 10.  Authors' Addresses
  contents:
  - "10.  Authors' Addresses\n   Sheila Frankel\n   NIST - National Institute of Standards\
    \ and Technology\n   820 West Diamond Ave.\n   Room 677\n   Gaithersburg, MD 20899\n\
    \   Phone: +1 (301) 975-3297\n   EMail: sheila.frankel@nist.gov\n   Howard C.\
    \ Herbert\n   Intel Corporation\n   Lan Access Division\n   5000 West Chandler\
    \ Blvd.\n   MS-CH7-404\n   Chandler, Arizona 85226\n   Phone: +1 (480) 554-3116\n\
    \   EMail: howard.c.herbert@intel.com\n"
- title: 11.  Full Copyright Statement
  contents:
  - "11.  Full Copyright Statement\n   Copyright (C) The Internet Society (2003).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
