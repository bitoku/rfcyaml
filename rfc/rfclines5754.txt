Abstract This document describes the conventions for using the Secure Hash Algorithm (SHA) message digest algorithms (SHA 224, SHA 256, SHA 384, SHA 512) with the Cryptographic Message Syntax (CMS).
It also describes the conventions for using these algorithms with the CMS and the Digital Signature Algorithm (DSA), Rivest Shamir Adleman (RSA), and Elliptic Curve DSA (ECDSA) signature algorithms.
Further, it provides SMIMECapabilities attribute values for each algorithm.
This document specifies the algorithm identifiers and specifies parameters for the message digest algorithms SHA 224, SHA 256, SHA 384, and SHA 512 for use with the Cryptographic Message Syntax (CMS) [RFC5652].
The message digest algorithms are defined in [SHS] and reference code is provided in [RFC4634].
This document also specifies the algorithm identifiers and parameters for use of SHA 224, SHA 256, SHA 384, and SHA 512 with DSA [DSS], RSA (RSASSA PKCS1 v1 5)
This document does not define new identifiers; they are taken from [RFC3874], [RFC4055], and [RFC5758].
Additionally, the parameters follow the conventions specified therein.
Therefore, there is no Abstract Syntax Notation One (ASN.1) module included in this document.
Note that [RFC4231] specifies the conventions for the message authentication code (MAC) algorithms:
Hashed MAC (HMAC) with SHA 224, HMAC with SHA 256, HMAC with SHA 384, and HMAC with SHA 512.
This document also specifies the SMIMECapabilities attribute values [RFC5751] for each algorithm.
Conventions Used in This Document
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "
SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
Message Digest Algorithms Digest algorithm identifiers are located in the SignedData digestAlgorithms field, the SignerInfo digestAlgorithm field, the DigestedData digestAlgorithm field, and the AuthenticatedData digestAlgorithm field.
The object identifiers are taken from [RFC4055].
Digest values are located in the DigestedData digest field and the Message Digest authenticated attribute.
In addition, digest values are input to signature algorithms.
The digest algorithm identifiers use the AlgorithmIdentifier syntax elaborated upon in Section 1.
The algorithm field and SMIMECapabilities attribute are discussed in Sections 2.1 2.4 for each message digest algorithm.
Section 3 provides some signatures that use SHA2 algorithms.
Consult the signature algorithm definitions for the procedures to compute the digest values (i.e., DigestInfo).
The AlgorithmIdentifier parameters field is OPTIONAL.
Implementations MUST accept SHA2 AlgorithmIdentifiers with absent parameters.
Implementations MUST accept SHA2 AlgorithmIdentifiers with NULL parameters.
Implementations MUST generate SHA2 AlgorithmIdentifiers with absent parameters.
There are two possible encodings for the AlgorithmIdentifier parameters field associated with these object identifiers.
The two alternatives arise from the loss of the OPTIONAL associated with the algorithm identifier parameters when the 1988 syntax for AlgorithmIdentifier was translated into the 1997 syntax.
Later, the OPTIONAL was recovered via a defect report, but by then many people thought that algorithm parameters were mandatory.
Because of this history, some implementations encode parameters as a NULL element while others omit them entirely.
The correct encoding is to omit the parameters field; however, when some uses of these algorithms were defined, it was done using the NULL parameters rather than absent parameters.
For example, PKCS#1 [RFC3447] requires that the padding used for RSA signatures (EMSA PKCS1 v1 5) MUST use SHA2 AlgorithmIdentifiers with NULL parameters (to clarify, the requirement "MUST generate SHA2 AlgorithmIdentifiers with absent parameters" in the previous paragraph does not apply to this padding).
The SHA 224 message digest algorithm is defined in [SHS].
} The parameters are as specified in the beginning of Section 2.
The SMIMECapabilities attribute value indicates support for SHA 224 in a SEQUENCE with the capabilityID field containing the object identifier id sha224 with absent parameters.
The DER encoding for this SMIMECapability is: id
sha224: 30 0b 06 09 60 86 48 01
The SHA 256 message digest algorithm is defined in [SHS].
The algorithm identifier for SHA 256 is:
} The parameters are as specified in the beginning of Section 2.
The SMIMECapabilities attribute value indicates support for SHA 256 in a SEQUENCE with the capabilityID field containing the object identifier
id sha256 with absent parameters.
The DER encoding for this SMIMECapability value is:
id sha256: 30 0b 06 09 60 86 48 01 65 03 04 02 01 2.3.
The SHA 384 message digest algorithm is defined in [SHS].
The algorithm identifier for SHA 384 is:
} The parameters are as specified in the beginning of Section 2.
The SMIMECapabilities attribute value indicates support for SHA 384 in a SEQUENCE with the capabilityID field containing the object identifier id sha384 with absent parameters.
The DER encoding for this SMIMECapability value is:
30 0b 06 09 60 86 48 01 65 03 04 02 02 2.4.
The SHA 512 message digest algorithm is defined in [SHS].
The algorithm identifier for SHA 512 is:
} The parameters are as specified in the beginning of Section 2.
The SMIMECapabilities attribute value indicates support for SHA 384 in a SEQUENCE with the capabilityID field containing the object identifier id sha384 with absent parameters.
The DER encoding for this SMIMECapability value is:
30 0b 06 09 60 86 48 01 65 03 04 02 03 3.
This section specifies the conventions employed by CMS implementations that support DSA, RSA, and ECDSA with SHA2 algorithms.
Signature algorithm identifiers are located in the SignerInfo signatureAlgorithm field of SignedData.
Also, signature algorithm identifiers are located in the SignerInfo signatureAlgorithm field of countersignature attributes.
Signature values are located in the SignerInfo signature field of SignedData.
Also, signature values are located in the SignerInfo signature field of countersignature attributes.
DSA [RFC3370], Section 3.1, specifies the conventions for DSA with SHA 1 public key algorithm identifiers, parameters, public keys, and signature values.
DSA with SHA2 algorithms uses the same conventions for these public key algorithm identifiers, parameters, public keys, and signature values.
DSA MAY be used with SHA 224 and SHA 256.
The object identifiers are taken from [RFC5758].
DSA has not been specified with SHA 384 and SHA 512.
SHA 384 and SHA 512 are not supported because the maximum bit length of p (specified as L) is 3072 for DSA.
For consistent cryptographic strength, SHA 384 would be used with DSA where L is 7680, and SHA 512 would be used with DSA where L is 15360.
The algorithm identifier for DSA with SHA 224 signature values is:
1 } The algorithm identifier for DSA with SHA 256 signature values is: id dsa with
id dsa with sha2(3) 2 } When either of these algorithm identifiers is used, the AlgorithmIdentifier parameters field MUST be absent.
The SMIMECapabilities attribute value indicates support for one of the DSA signature algorithms in a SEQUENCE with the capabilityID field containing the object identifier id dsa with sha
(where   is 224 or 256) with absent parameters.
The DER encodings for these SMIMECapability values are:
id dsa with sha224: 30 0b 06 09 60 86 48 01 65 03 04 03 01
: 30 0b 06 09 60 86 48 01 65 03 04 03 02 3.2.
RSA [RFC3370], Section 3.2, specifies the conventions for RSA with SHA 1 (RSASSA PKCS1 v1 5) public key algorithm identifiers, parameters, public keys, and signature values.
RSA with SHA2 algorithms uses the same conventions for these public key algorithm identifiers, parameters, public keys, and signature values.
RSA (RSASSA PKCS1 v1 5)
[RFC3447] MAY be used with SHA 224, SHA 256, SHA 384, or SHA 512.
The object identifiers are taken from [RFC4055].
The object identifier for RSA with SHA 224 signature values is:
} The object identifier for RSA with SHA 256 signature values is: sha256WithRSAEncryption  OBJECT
) rsadsi(113549) pkcs(1) pkcs 1(1)
} The object identifier for RSA with SHA 384 signature values is: sha384WithRSAEncryption  OBJECT
) rsadsi(113549) pkcs(1) pkcs 1(1)
The object identifier for RSA with SHA 512 signature values is: sha512WithRSAEncryption  OBJECT
) rsadsi(113549) pkcs(1) pkcs 1(1) 13 }
When any of these four object identifiers appears within an AlgorithmIdentifier, the parameters MUST be NULL.
Implementations MUST accept the parameters being absent as well as present.
The SMIMECapabilities attribute value indicates support for one of the DSA signature algorithms in a SEQUENCE with the capabilityID field containing the object identifier sha WithRSAEncryption (where   is 224, 256, 384, or 512) with NULL parameters.
The DER encodings for these SMIMECapability values are: sha224WithRSAEncryption: 30 0d 06 09 2a 86 48 86 f7 0d 01
sha256WithRSAEncryption: 30 0d 06 09 2a 86
sha384WithRSAEncryption: 30 0d 06 09 2a 86 48 86 f7 0d 01
sha512WithRSAEncryption: 30 0d 06 09 2a 86 48 86 f7 0d 01 01 0d 05 00 3.3.
ECDSA [RFC5753], Section 2.1, specifies the conventions for ECDSA with SHA
(where   is 1, 224, 256, 384, or 512)
public key algorithm identifiers, parameters, public keys, and signature values.
The object identifiers, which are included below for convenience, are taken from [RFC5758].
The algorithm identifier for ECDSA with SHA 224 signature values is: ecdsa with SHA224
The algorithm identifier for ECDSA with SHA 512 signature values is: ecdsa with SHA512 OBJECT
4 } When any of these four object identifiers appears within an AlgorithmIdentifier, the parameters field MUST be absent.
That is, the AlgorithmIdentifier SHALL be a SEQUENCE of one component: the OID ecdsa with SHA224, ecdsa with SHA256, ecdsa with SHA384, or ecdsa  with SHA512.
The SMIMECapabilities attribute value indicates support for one of the ECDSA signature algorithms in a SEQUENCE with the capabilityID field containing the object identifier ecdsa with SHA1  (where   is 224, 256, 384, or 512) with absent parameters.
The DER encodings for these SMIMECapability values are: ecdsa with SHA224:
30 0a 06 08 2a 86 48 ce 3d 04 03 01 ecdsa with SHA256:
30 0a 06 08 2a 86 48 ce 3d 04 03 02 ecdsa with SHA384: 30 0a 06 08 2a 86 48
ce 3d 04 03 03 ecdsa with SHA512: 30 0a 06 08 2a 86 48
ce 3d 04 03 04 4.
The security considerations in [RFC3370], [RFC3874], [RFC4055], [RFC5753], and [RFC5758] apply.
No new security considerations are introduced as a result of this specification.
