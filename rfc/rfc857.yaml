- title: __initial_text__
  contents:
  - '                           TELNET ECHO OPTION

    '
- title: This RFC specifies a standard for the ARPA Internet community.  Hosts on
  contents:
  - 'This RFC specifies a standard for the ARPA Internet community.  Hosts on

    '
- title: the ARPA Internet are expected to adopt and implement this standard.
  contents:
  - 'the ARPA Internet are expected to adopt and implement this standard.

    '
- title: 1. Command Name and Code
  contents:
  - "1. Command Name and Code\n   ECHO       1\n"
- title: 2. Command Meanings
  contents:
  - "2. Command Meanings\n   IAC WILL ECHO\n      The sender of this command REQUESTS\
    \ to begin, or confirms that it\n      will now begin, echoing data characters\
    \ it receives over the\n      TELNET connection back to the sender of the data\
    \ characters.\n   IAC WON'T ECHO\n      The sender of this command DEMANDS to\
    \ stop, or refuses to start,\n      echoing the data characters it receives over\
    \ the TELNET connection\n      back to the sender of the data characters.\n  \
    \ IAC DO ECHO\n      The sender of this command REQUESTS that the receiver of\
    \ this\n      command begin echoing, or confirms that the receiver of this\n \
    \     command is expected to echo, data characters it receives over the\n    \
    \  TELNET connection back to the sender.\n   IAC DON'T ECHO\n      The sender\
    \ of this command DEMANDS the receiver of this command\n      stop, or not start,\
    \ echoing data characters it receives over the\n      TELNET connection.\n"
- title: 3. Default
  contents:
  - "3. Default\n   WON'T ECHO\n   DON'T ECHO\n      No echoing is done over the TELNET\
    \ connection.\n"
- title: 4. Motivation for the Option
  contents:
  - '4. Motivation for the Option

    '
- title: RFC 857                                                         May 1983
  contents:
  - "RFC 857                                                         May 1983\n  \
    \ The NVT has a printer and a keyboard which are nominally\n   interconnected\
    \ so that \"echoes\" need never traverse the network; that\n   is to say, the\
    \ NVT nominally operates in a mode where characters\n   typed on the keyboard\
    \ are (by some means) locally turned around and\n   printed on the printer.  In\
    \ highly interactive situations it is\n   appropriate for the remote process (command\
    \ language interpreter,\n   etc.) to which the characters are being sent to control\
    \ the way they\n   are echoed on the printer.  In order to support such interactive\n\
    \   situations, it is necessary that there be a TELNET option to allow\n   the\
    \ parties at the two ends of the TELNET connection to agree that\n   characters\
    \ typed on an NVT keyboard are to be echoed by the party at\n   the other end\
    \ of the TELNET connection.\n"
- title: 5. Description of the Option
  contents:
  - "5. Description of the Option\n   When the echoing option is in effect, the party\
    \ at the end performing\n   the echoing is expected to transmit (echo) data characters\
    \ it\n   receives back to the sender of the data characters.  The option does\n\
    \   not require that the characters echoed be exactly the characters\n   received\
    \ (for example, a number of systems echo the ASCII ESC\n   character with something\
    \ other than the ESC character).  When the\n   echoing option is not in effect,\
    \ the receiver of data characters\n   should not echo them back to the sender;\
    \ this, of course, does not\n   prevent the receiver from responding to data characters\
    \ received.\n   The normal TELNET connection is two way.  That is, data flows\
    \ in each\n   direction on the connection independently; and neither, either,\
    \ or\n   both directions may be operating simultaneously in echo mode.  There\n\
    \   are five reasonable modes of operation for echoing on a connection\n   pair:\n\
    \                <----------------\n      Process 1                   Process\
    \ 2\n                ---------------->\n                 Neither end echoes\n\
    \                <----------------\n                   \\\n      Process 1   \
    \ /              Process 2\n                ---------------->\n             One\
    \ end echoes for itself\n"
- title: RFC 857                                                         May 1983
  contents:
  - "RFC 857                                                         May 1983\n  \
    \              <----------------\n                             \\\n      Process\
    \ 1              /    Process 2\n                ---------------->\n         \
    \ One end echoes for the other\n                <----------------\n          \
    \         \\         /\n      Process 1    /         \\    Process 2\n       \
    \         ---------------->\n          Both ends echo for themselves\n       \
    \         <----------------\n                   \\ /\n      Process 1    / \\\
    \            Process 2\n                ---------------->\n           One end\
    \ echoes for both ends\n   This option provides the capability to decide on whether\
    \ or not\n   either end will echo for the other.  It does not, however, provide\n\
    \   any control over whether or not an end echoes for itself;  this\n   decision\
    \ must be left to the sole discretion of the systems at each\n   end (although\
    \ they may use information regarding the state of\n   \"remote\" echoing negotiations\
    \ in making this decision).\n   It should be noted that if BOTH hosts enter the\
    \ mode of echoing\n   characters transmitted by the other host, then any character\n\
    \   transmitted in either direction will be \"echoed\" back and forth\n   indefinitely.\
    \  Therefore, care should be taken in each implementation\n   that if one site\
    \ is echoing, echoing is not permitted to be turned on\n   at the other.\n   As\
    \ discussed in the TELNET Protocol Specification, both parties to a\n   full-duplex\
    \ TELNET connection initially assume each direction of the\n   connection is being\
    \ operated in the default mode which is non-echo\n   (non-echo is not using this\
    \ option, and the same as DON'T ECHO, WON'T\n   ECHO).\n   If either party desires\
    \ himself to echo characters to the other party\n   or for the other party to\
    \ echo characters to him, that party gives\n   the appropriate command (WILL ECHO\
    \ or DO ECHO) and waits (and hopes)\n   for acceptance of the option.  If the\
    \ request to operate the\n   connection in echo mode is refused, then the connection\
    \ continues to\n   operate in non-echo mode.  If the request to operate the connection\n\
    \   in echo mode is accepted, the connection is operated in echo mode.\n"
- title: RFC 857                                                         May 1983
  contents:
  - "RFC 857                                                         May 1983\n  \
    \ After a connection has been changed to echo mode, either party may\n   demand\
    \ that it revert to non-echo mode by giving the appropriate\n   DON'T ECHO or\
    \ WON'T ECHO command (which the other party must confirm\n   thereby allowing\
    \ the connection to operate in non-echo mode).  Just\n   as each direction of\
    \ the TELNET connection may be put in remote\n   echoing mode independently, each\
    \ direction of the TELNET connection\n   must be removed from remote echoing mode\
    \ separately.\n   Implementations of the echo option, as implementations of all\
    \ other\n   TELNET options, must follow the loop preventing rules given in the\n\
    \   General Considerations section of the TELNET Protocol Specification.\n   Also,\
    \ so that switches between echo and non-echo mode can be made\n   with minimal\
    \ confusion (momentary double echoing, etc.), switches in\n   mode of operation\
    \ should be made at times precisely coordinated with\n   the reception and transmission\
    \ of echo requests and demands.  For\n   instance, if one party responds to a\
    \ DO ECHO with a WILL ECHO, all\n   data characters received after the DO ECHO\
    \ should be echoed and the\n   WILL ECHO should immediately precede the first\
    \ of the echoed\n   characters.\n   The echoing option alone will normally not\
    \ be sufficient to effect\n   what is commonly understood to be remote computer\
    \ echoing of\n   characters typed on a terminal keyboard--the SUPPRESS-GO AHEAD\
    \ option\n   will normally have to be invoked in conjunction with the ECHO option\n\
    \   to effect character-at-a-time remote echoing.\n"
- title: 6. A Sample Implementation of the Option
  contents:
  - "6. A Sample Implementation of the Option\n   The following is a description of\
    \ a possible implementation for a\n   simple user system called \"UHOST\".\n \
    \  A possible implementation could be that for each user terminal, the\n   UHOST\
    \ would keep three state bits: whether the terminal echoes for\n   itself (UHOST\
    \ ECHO always) or not (ECHO mode possible), whether the\n   (human) user prefers\
    \ to operate in ECHO mode or in non-ECHO mode, and\n   whether the connection\
    \ from this terminal to the server is in ECHO or\n   non-ECHO mode.  We will call\
    \ these three bits P(hysical), D(esired),\n   and A(ctual).\n   When a terminal\
    \ dials up the UHOST the P-bit is set appropriately,\n   the D-bit is set equal\
    \ to it, and the A-bit is set to non-ECHO.  The\n   P-bit and D-bit may be manually\
    \ reset by direct commands if the user\n   so desires.  For example, a user in\
    \ Hawaii on a \"full-duplex\"\n   terminal, would choose not to operate in ECHO\
    \ mode, regardless of the\n   preference of a mainland server.  He should direct\
    \ the UHOST to\n   change his D-bit from ECHO to non-ECHO.\n   When a connection\
    \ is opened from the UHOST terminal to a server, the\n"
- title: RFC 857                                                         May 1983
  contents:
  - "RFC 857                                                         May 1983\n  \
    \ UHOST would send the server a DO ECHO command if the MIN (with\n   non-ECHO\
    \ less than ECHO) of the P- and D-bits is different from the\n   A-bit.  If a\
    \ WON'T ECHO or WILL ECHO arrives from the server, the\n   UHOST will set the\
    \ A-bit to the MIN of the received request, the\n   P-bit, and the D-bit.  If\
    \ this changes the state of the A-bit, the\n   UHOST will send off the appropriate\
    \ acknowledgment; if it does not,\n   then the UHOST will send off the appropriate\
    \ refusal if not changing\n   meant that it had to deny the request (i.e., the\
    \ MIN of the P-and\n   D-bits was less than the received A-request).\n   If while\
    \ a connection is open, the UHOST terminal user changes either\n   the P-bit or\
    \ D-bit, the UHOST will repeat the above tests and send\n   off a DO ECHO or DON'T\
    \ ECHO, if necessary.  When the connection is\n   closed, the UHOST would reset\
    \ the A-bit to indicate UHOST echoing.\n   While the UHOST's implementation would\
    \ not involve DO ECHO or DON'T\n   ECHO commands being sent to the server except\
    \ when the connection is\n   opened or the user explicitly changes his echoing\
    \ mode, bigger hosts\n   might invoke such mode switches quite frequently.  For\
    \ instance,\n   while a line-at-a-time system were running, the server might attempt\n\
    \   to put the user in local echo mode by sending the WON'T ECHO command\n   to\
    \ the user; but while a character-at-a-time system were running, the\n   server\
    \ might attempt to invoke remote echoing for the user by sending\n   the WILL\
    \ ECHO command to the user.  Furthermore, while the UHOST will\n   never send\
    \ a WILL ECHO command and will only send a WON'T ECHO to\n   refuse a server sent\
    \ DO ECHO command, a server host might often send\n   the WILL and WON'T ECHO\
    \ commands.\n"
