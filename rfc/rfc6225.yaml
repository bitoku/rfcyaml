- title: __initial_text__
  contents:
  - "            Dynamic Host Configuration Protocol Options for\n          Coordinate-Based\
    \ Location Configuration Information\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies Dynamic Host Configuration Protocol options\n\
    \   (both DHCPv4 and DHCPv6) for the coordinate-based geographic location\n  \
    \ of the client.  The Location Configuration Information (LCI) includes\n   Latitude,\
    \ Longitude, and Altitude, with resolution or uncertainty\n   indicators for each.\
    \  Separate parameters indicate the reference\n   datum for each of these values.\
    \  This document obsoletes RFC 3825.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6225.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Conventions Used in This Document ..........................4\n  \
    \    1.2. Resolution and Uncertainty .................................4\n   2.\
    \ DHCP Option Formats .............................................6\n      2.1.\
    \ DHCPv6 GeoLoc Option .......................................6\n      2.2. DHCPv4\
    \ Options .............................................8\n      2.3. Latitude\
    \ and Longitude Fields .............................11\n      2.4. Altitude ..................................................14\n\
    \      2.5. Datum .....................................................16\n  \
    \ 3. Security Considerations ........................................17\n   4.\
    \ IANA Considerations ............................................17\n      4.1.\
    \ DHCP Options ..............................................17\n      4.2. Altitude\
    \ Type Registry ....................................18\n      4.3. Datum Registry\
    \ ............................................18\n      4.4. GeoLoc Option Version\
    \ Registry ............................19\n   5. Acknowledgments ................................................20\n\
    \   6. References .....................................................20\n  \
    \    6.1. Normative References ......................................20\n    \
    \  6.2. Informative References ....................................21\n   Appendix\
    \ A. GML Mapping ...........................................23\n       A.1. GML\
    \ Templates ............................................23\n   Appendix B. Calculations\
    \ of Resolution ............................27\n       B.1. Location Configuration\
    \ Information of \"White House\"\n            (Example 1) ..............................................27\n\
    \       B.2. Location Configuration Information of \"Sears Tower\"\n         \
    \   (Example 2) ..............................................29\n   Appendix\
    \ C. Calculations of Uncertainty ...........................30\n       C.1. Location\
    \ Configuration Information of \"Sydney Opera\n            House\" (Example 3)\
    \ .......................................30\n   Appendix D. Changes from RFC 3825\
    \ .................................34\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The physical location of a network device has a range of\n\
    \   applications.  In particular, emergency telephony applications rely\n   on\
    \ knowing the location of a caller in order to determine the correct\n   emergency\
    \ center.\n   The location of a device can be represented either in terms of\n\
    \   geospatial (or geodetic) coordinates, or as a civic address.\n   Different\
    \ applications may be more suited to one form of location\n   information; therefore,\
    \ both the geodetic and civic forms may be used\n   simultaneously.\n   This document\
    \ specifies Dynamic Host Configuration Protocol v4\n   (DHCPv4) [RFC2131] and\
    \ DHCPv6 [RFC3315] options for the coordinate-\n   based geographic location of\
    \ the client, to be provided by the\n   server.  \"Dynamic Host Configuration\
    \ Protocol (DHCPv4 and DHCPv6)\n   Option for Civic Addresses Configuration Information\"\
    \ [RFC4776]\n   specifies DHCP options for civic addresses.\n   The geodetic coordinate\
    \ options defined in this document and the\n   civic address options defined in\
    \ RFC 4776 [RFC4776] enable a DHCP\n   client to obtain its location.  For example,\
    \ a wired Ethernet host\n   might use these options for location determination.\
    \  In this case,\n   the location information could be derived from a wiremap\
    \ by the DHCP\n   server, using the Circuit ID Relay Agent Information Option\
    \ (RAIO)\n   defined (as Sub-Option 1) in RFC 3046 [RFC3046].  The DHCP server\n\
    \   could correlate the Circuit ID with the geographic location where the\n  \
    \ identified circuit terminates (such as the location of the wall\n   jack).\n\
    \   The mechanism defined here may also be utilized to provide location\n   to\
    \ wireless hosts.  DHCP relay agent sub-options (RAIO) [RFC3046]\n   provide one\
    \ method a DHCP server might use to perform host location\n   determination. \
    \ Currently, the relay agent sub-options do not include\n   data sets required\
    \ for device-level location determination of\n   wireless hosts.  In cases where\
    \ the DHCP server uses RAIO for\n   location determination, a wireless host can\
    \ use this mechanism to\n   discover the location of the radio access point, or\
    \ the area of\n   coverage for the radio access point.\n   An important feature\
    \ of this specification is that after the relevant\n   DHCP exchanges have taken\
    \ place, the location information is stored\n   on the end device rather than\
    \ somewhere else, where retrieving it\n   might be difficult in practice.\n"
- title: 1.1.  Conventions Used in This Document
  contents:
  - "1.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 1.2.  Resolution and Uncertainty
  contents:
  - "1.2.  Resolution and Uncertainty\n   The DHCP options defined in this document\
    \ include fields quantifying\n   the resolution or uncertainty associated with\
    \ a target location.  No\n   inferences relating to privacy policies can be drawn\
    \ from either\n   uncertainty or resolution values.\n   As utilized in this document,\
    \ resolution refers to the accuracy of a\n   reported location, as expressed by\
    \ the number of valid bits in each\n   of the Latitude, Longitude, and Altitude\
    \ fields.\n   The Latitude (LaRes), Longitude (LoRes), and Altitude (AltRes)\n\
    \   Resolution fields are encoded as 6-bit, unsigned integer values.  In\n   the\
    \ DHCPv4 GeoConf Option 123, the LaRes, LoRes, and AltRes fields\n   are used\
    \ to encode the number of bits of resolution.  The resolution\n   sub-fields accommodate\
    \ the desire to easily adjust the precision of a\n   reported location.  Contents\
    \ beyond the claimed resolution MAY be\n   randomized to obscure greater precision\
    \ that might be available.\n   In the context of location technology, uncertainty\
    \ is a\n   quantification of errors.  Any method for determining location is\n\
    \   subject to some sources of error; uncertainty describes the amount of\n  \
    \ error that is present.  Uncertainty might be the coverage area of a\n   wireless\
    \ transmitter, the extent of a building, or a single room.\n   Uncertainty is\
    \ usually represented as an area within which the target\n   is located.  In this\
    \ document, each of the three axes can be assigned\n   an uncertainty value. \
    \ In effect, this describes a rectangular prism,\n   which may be used as a coarse\
    \ representation of a more complex shape\n   that fits within it.  See Section\
    \ 2.3.2 for more detail on the\n   correspondence between shapes and uncertainty.\n\
    \   When representing locations from sources that can quantify\n   uncertainty,\
    \ the goal is to find the smallest possible rectangular\n   prism that this format\
    \ can describe.  This is achieved by taking the\n   minimum and maximum values\
    \ on each axis and ensuring that the final\n   encoding covers these points. \
    \ This increases the region of\n   uncertainty, but ensures that the region that\
    \ is described\n   encompasses the target location.\n   The DHCPv4 option formats\
    \ defined in this document support resolution\n   and uncertainty parameters.\
    \  The DHCPv4 GeoConf Option 123 includes a\n   resolution parameter for each\
    \ of the dimensions of location.  Since\n   this resolution parameter need not\
    \ apply to all dimensions equally, a\n   resolution value is included for each\
    \ of the three location elements.\n   The DHCPv4 GeoLoc Option 144 as well as\
    \ the DHCPv6 GeoLoc Option 63\n   format utilize an uncertainty parameter.\n \
    \  Appendix A describes the mapping of DHCP option values to the\n   Geography\
    \ Markup Language (GML).  Appendix B of this document\n   provides examples showing\
    \ the calculation of resolution values.\n   Appendix C provides an example demonstrating\
    \ calculation of\n   uncertainty values.\n   Since the Presence Information Data\
    \ Format Location Object (PIDF-LO)\n   [RFC4119] [RFC5491] is used to convey location\
    \ and the associated\n   uncertainty within an emergency call [Convey], a mechanism\
    \ is needed\n   to convert the information contained within the DHCPv4 and DHCPv6\n\
    \   options to PIDF-LO.  This document describes the following\n   conversions:\n\
    \   o  DHCPv4 GeoConf Option 123 to PIDF-LO\n   o  DHCPv4 GeoLoc Option 144 and\
    \ DHCPv6 GeoLoc Option 63 to PIDF-LO\n   o  PIDF-LO to DHCP GeoLoc Option 144\
    \ and DHCPv6 GeoLoc Option 63\n   Conversion to PIDF-LO does not increase uncertainty;\
    \ conversion from\n   PIDF-LO to the DHCPv4 GeoLoc Option 144 and the DHCPv6 GeoLoc\
    \ Option\n   63 increases uncertainty by less than a factor of 2 in each\n   dimension.\
    \  Since it is not possible to translate an arbitrary\n   PIDF-LO to the DHCP\
    \ GeoConf Option 123 with a bounded increase in\n   uncertainty, the conversion\
    \ is not specified.\n"
- title: 2.  DHCP Option Formats
  contents:
  - "2.  DHCP Option Formats\n   This section defines the format for the DHCPv4 and\
    \ DHCPv6 options.\n   These options utilize a similar format, differing primarily\
    \ in the\n   option code.\n"
- title: 2.1.  DHCPv6 GeoLoc Option
  contents:
  - "2.1.  DHCPv6 GeoLoc Option\n   The format of the DHCPv6 [RFC3315] GeoLoc Option\
    \ is as follows:\n     0                   1                   2             \
    \      3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    |\
    \       Option Code (63)        |            OptLen             |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |  LatUnc   |                  Latitude                         +\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    | Lat (cont'd)  |  LongUnc  |               Longitude           +\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |    Longitude (cont'd)         | AType |   AltUnc  |  Altitude +\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |               Altitude (cont'd)               |Ver| Res |Datum|\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    Code:      16 bits.  The code for the DHCP Option Code (63).\n    OptLen:\
    \    Option Length.  For version 1, the option length is 16.\n    LatUnc:    6\
    \ bits.  When the Ver field = 1, this field represents\n               latitude\
    \ uncertainty.  The contents of this field are\n               undefined for other\
    \ values of the Ver field.\n    Latitude:  A 34-bit fixed-point value consisting\
    \ of 9 bits of\n               integer and 25 bits of fraction, interpreted as\
    \ described\n               in Section 2.3.\n    LongUnc:   6 bits.  When the\
    \ Ver field = 1, this field represents\n               longitude uncertainty.\
    \  The contents of this field are\n               undefined for other values of\
    \ the Ver field.\n    Longitude: A 34-bit fixed-point value consisting of 9 bits\
    \ of\n               integer and 25 bits of fraction, interpreted as described\n\
    \               in Section 2.3.\n    AType:     4 bits.  Altitude Type, defined\
    \ in Section 2.4.\n    AltUnc:    6 bits.  When the Ver field = 1, this field\
    \ represents\n               altitude uncertainty.  The contents of this field\
    \ are\n               undefined for other values of the Ver field.\n    Altitude:\
    \  A 30-bit value defined by the AType field, described in\n               Section\
    \ 2.4.\n    Ver:       The Ver field is 2 bits, providing for four potential\n\
    \               versions.  This specification defines the behavior of\n      \
    \         version 1.  The Ver field is always located at the same\n          \
    \     offset from the beginning of the option, regardless of\n               the\
    \ version in use.  DHCPv6 clients implementing this\n               specification\
    \ MUST support receiving version 1 responses.\n               DHCPv6 servers implementing\
    \ this specification MUST send\n               version 1 responses.\n    Res:\
    \       3 bits.  The Res field is reserved.  These bits have been\n          \
    \     used by [IEEE-802.11y], but are not defined within this\n              \
    \ specification.\n    Datum:     3 bits.  The Map Datum used for the coordinates\
    \ given in\n               this option.\n"
- title: 2.2.  DHCPv4 Options
  contents:
  - '2.2.  DHCPv4 Options

    '
- title: 2.2.1.  DHCPv4 GeoConf Option
  contents:
  - "2.2.1.  DHCPv4 GeoConf Option\n   The format of the DHCPv4 GeoConf Option is\
    \ as follows:\n     0                   1                   2                \
    \   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    |\
    \   Code 123    |    Length     |   LaRes   |     Latitude      +\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                Latitude (cont'd)              |   LoRes   |   +\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                             Longitude                         |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    | AType |   AltRes  |                Altitude                   +\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    | Alt.(cont'd)  |    Res  |Datum|\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    Code:      8 bits.  The code for the DHCPv4 GeoConf Option (123).\n    Length:\
    \    8 bits.  The length of the option, in octets.\n               The option\
    \ length is 16.\n    LaRes:     6 bits.  This field represents latitude resolution.\n\
    \    Latitude:  A 34-bit fixed-point value consisting of 9 bits of signed\n  \
    \             integer and 25 bits of fraction, interpreted as described\n    \
    \           in Section 2.3.\n    LoRes:     6 bits.  This field represents longitude\
    \ resolution.\n    Longitude: A 34-bit fixed-point value consisting of 9 bits\
    \ of signed\n               integer and 25 bits of fraction, interpreted as described\n\
    \               in Section 2.3.\n    AType:     4 bits.  Altitude Type, defined\
    \ in Section 2.4.\n    AltRes:    6 bits.  This field represents altitude resolution.\n\
    \    Altitude:  A 30-bit value defined by the AType field, described in\n    \
    \           Section 2.4.\n    Res:       5 bits.  The Res field is reserved. \
    \ These bits have been\n               used by IEEE 802.11y [IEEE-802.11y], but\
    \ are not defined\n               within this specification.\n    Datum:     3\
    \ bits.  The Map Datum used for the coordinates given in\n               this\
    \ option.\n"
- title: 2.2.2.  DHCPv4 GeoLoc Option
  contents:
  - "2.2.2.  DHCPv4 GeoLoc Option\n   The format of the DHCPv4 GeoLoc Option is as\
    \ follows:\n     0                   1                   2                   3\n\
    \     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |   Code 144    |    Length     |   LatUnc  |     Latitude      +\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                Latitude (cont'd)              |  LongUnc  |   +\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                             Longitude                         |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    | AType |   AltUnc  |                Altitude                   +\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    | Alt.(cont'd)  |Ver| Res |Datum|\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    Code:      8 bits.  The code for the DHCPv4 GeoLoc Option (144).\n    Length:\
    \    8 bits.  The length of the option, in octets.\n               For version\
    \ 1, the option length is 16.\n    LatUnc:    6 bits.  When the Ver field = 1,\
    \ this field represents\n               latitude uncertainty.  The contents of\
    \ this field are\n               undefined for other values of the Ver field.\n\
    \    Latitude:  A 34-bit fixed-point value consisting of 9 bits of\n         \
    \      integer and 25 bits of fraction, interpreted as described\n           \
    \    in Section 2.3.\n    LongUnc:   6 bits.  When the Ver field = 1, this field\
    \ represents\n               longitude uncertainty.  The contents of this field\
    \ are\n               undefined for other values of the Ver field.\n    Longitude:\
    \ A 34-bit fixed-point value consisting of 9 bits of\n               integer and\
    \ 25 bits of fraction, interpreted as described\n               in Section 2.3.\n\
    \    AType:     4 bits.  Altitude Type, defined in Section 2.4.\n    AltUnc: \
    \   6 bits.  When the Ver field = 1, this field represents\n               altitude\
    \ uncertainty.  The contents of this field are\n               undefined for other\
    \ values of the Ver field.\n    Altitude:  A 30-bit value defined by the AType\
    \ field, described in\n               Section 2.4.\n    Ver:       The Ver field\
    \ is 2 bits, providing for four potential\n               versions.  This specification\
    \ defines the behavior of\n               version 1.  The Ver field is always\
    \ located at the same\n               offset from the beginning of the option,\
    \ regardless of\n               the version in use.\n    Res:       3 bits.  The\
    \ Res field is reserved.  These bits have been\n               used by [IEEE-802.11y],\
    \ but are not defined within this\n               specification.\n    Datum: \
    \    3 bits.  The Map Datum used for the coordinates given in\n              \
    \ this option.\n"
- title: 2.2.3.  Option Support
  contents:
  - '2.2.3.  Option Support

    '
- title: 2.2.3.1.  Client Support
  contents:
  - "2.2.3.1.  Client Support\n   DHCPv4 clients implementing this specification MUST\
    \ support receiving\n   the DHCPv4 GeoLoc Option 144 (version 1), and MAY support\
    \ receiving\n   the DHCPv4 GeoConf Option 123 (originally defined in RFC 3825\n\
    \   [RFC3825]).\n   DHCPv4 clients request the DHCPv4 server to send GeoConf Option\
    \ 123,\n   GeoLoc Option 144, or both via inclusion of the Parameter Request\n\
    \   List option.  As noted in Section 9.8 of RFC 2132 [RFC2132]:\n      This option\
    \ is used by a DHCP client to request values for\n      specified configuration\
    \ parameters.  The list of requested\n      parameters is specified as n octets,\
    \ where each octet is a valid\n      DHCP option code as defined in this document.\n\
    \      The client MAY list the options in order of preference.  The DHCP\n   \
    \   server is not required to return the options in the requested\n      order,\
    \ but MUST try to insert the requested options in the order\n      requested by\
    \ the client.\n   When DHCPv4 and DHCPv6 clients implementing this specification\
    \ do not\n   understand a datum value, they MUST assume a World Geodetic System\n\
    \   1984 (WGS84) [WGS84] datum (European Petroleum Survey Group (EPSG)\n   [EPSG]\
    \ 4326 or 4979, depending on whether there is an altitude value\n   present) and\
    \ proceed accordingly.  Assuming that a less accurate\n   location value is better\
    \ than none, this ensures that some (perhaps\n   less accurate) location is available\
    \ to the client.\n"
- title: 2.2.3.2.  Server Option Selection
  contents:
  - "2.2.3.2.  Server Option Selection\n   A DHCPv4 server implementing this specification\
    \ MUST support sending\n   GeoLoc Option 144 version 1 and SHOULD support sending\
    \ GeoConf Option\n   123 in responses.\n   A DHCPv4 server that provides location\
    \ information SHOULD honor the\n   Parameter Request List included by the DHCPv4\
    \ client in order to\n   decide whether to send GeoConf Option 123, GeoLoc Option\
    \ 144, or both\n   in the Response.\n"
- title: 2.3.  Latitude and Longitude Fields
  contents:
  - "2.3.  Latitude and Longitude Fields\n   The latitude and longitude values in\
    \ this specification are encoded\n   as 34-bit, two's complement, fixed-point\
    \ values with 9 integer bits\n   and 25 fractional bits.  The exact meaning of\
    \ these values is\n   determined by the datum; the description in this section\
    \ applies to\n   the datums defined in this document.  This document uses the\
    \ same\n   definition for all datums it specifies.\n   When encoding, latitude\
    \ and longitude values are rounded to the\n   nearest 34-bit binary representation.\
    \  This imprecision is considered\n   acceptable for the purposes to which this\
    \ form is intended to be\n   applied and is ignored when decoding.\n   Positive\
    \ latitudes are north of the equator, and negative latitudes\n   are south of\
    \ the equator.  Positive longitudes are east of the Prime\n   Meridian, and negative\
    \ (two's complement) longitudes are west of the\n   Prime Meridian.\n   Within\
    \ the coordinate reference systems defined in this document\n   (Datum values\
    \ 1-3), longitude values outside the range of -180 to 180\n   decimal degrees\
    \ or latitude values outside the range of -90 to 90\n   degrees MUST be considered\
    \ invalid.  Server implementations SHOULD\n   prevent the entry of invalid values\
    \ within the selected coordinate\n   reference system.  Location consumers MUST\
    \ ignore invalid location\n   coordinates and SHOULD log errors related to invalid\
    \ location.\n"
- title: 2.3.1.  Latitude and Longitude Resolution
  contents:
  - "2.3.1.  Latitude and Longitude Resolution\n   In the DHCPv4 GeoConf Option 123,\
    \ the LaRes value encodes the number\n   of high-order latitude bits that MUST\
    \ be considered valid.  Any bits\n   entered to the right of this limit MUST NOT\
    \ be considered valid and\n   might be purposely false, or zeroed by the sender.\
    \  The examples in\n   Appendix B illustrate that a smaller value in the resolution\
    \ field\n   increases the area within which the device is located.  A value of\
    \ 2\n   in the LaRes field indicates a precision of no greater than 1/6th\n  \
    \ that of the globe (see the first example of Appendix B).  A value of\n   34\
    \ in the LaRes field indicates a precision of about 3.11 mm in\n   latitude at\
    \ the equator.\n   In the DHCPv4 GeoConf Option 123, the LoRes value encodes the\
    \ number\n   of high-order longitude bits that MUST be considered valid.  Any\
    \ bits\n   entered to the right of this limit MUST NOT be considered valid and\n\
    \   might be purposely false, or zeroed by the sender.  A value of 2 in\n   the\
    \ LoRes field indicates precision of no greater than 1/6th that of\n   the globe\
    \ (see the first example of Appendix B).  A value of 34 in\n   the LoRes field\
    \ indicates a precision of about 2.42 mm in longitude\n   (at the equator).  Because\
    \ lines of longitude converge at the poles,\n   the distance is smaller (better\
    \ precision) for locations away from\n   the equator.\n"
- title: 2.3.2.  Latitude and Longitude Uncertainty
  contents:
  - "2.3.2.  Latitude and Longitude Uncertainty\n   In the DHCPv6 GeoLoc Option 63\
    \ and the DHCPv4 GeoLoc Option 144, the\n   Latitude and Longitude Uncertainty\
    \ fields (LatUnc and LongUnc)\n   quantify the amount of uncertainty in each of\
    \ the latitude and\n   longitude values, respectively.  A value of 0 is reserved\
    \ to indicate\n   that the uncertainty is unknown; values greater than 34 are\
    \ reserved.\n   A point within the region of uncertainty is selected to be the\n\
    \   encoded point; the centroid of the region is often an appropriate\n   choice.\
    \  The value for uncertainty is taken as the distance from the\n   selected point\
    \ to the furthest extreme of the region of uncertainty\n   on that axis.  This\
    \ is demonstrated in the figure below, which shows\n   a two-dimensional polygon\
    \ that is projected on each axis.  In the\n   figure, \"X\" marks the point that\
    \ is selected; the ranges marked with\n   \"U\" indicate the uncertainty.\n  \
    \         ___          ___________\n           ^ |         /           |\n   \
    \        | |        /            |\n           | |       /             |\n   \
    \        U |      /              |\n           | |     (               |\n   \
    \        V |     |               |\n           --X     |         X     |\n   \
    \          |     |               `---------.\n             |     |           \
    \              |\n             |     |                         |\n           \
    \  |     |                         |\n             -     `-------------------------'\n\
    \                   |---------X---------------|\n                            \
    \ |<------U------>|\n      Key\n      ---\n      V, ^ = vertical arrows, delimiting\
    \ the vertical uncertainty range.\n      <>   = horizontal arrows, delimiting\
    \ the horizontal uncertainty\n             range.\n   Uncertainty applies to each\
    \ axis independently.\n   The amount of uncertainty can be determined from the\
    \ encoding by\n   taking 2 to the power of 8, less the encoded value, as is shown\
    \ in\n   the following formula, where \"x\" is the encoded integer value:\n  \
    \    uncertainty = 2 ^ ( 8 - x )\n   The result of this formula is expressed in\
    \ degrees of latitude or\n   longitude.  The uncertainty is added to the base\
    \ latitude or\n   longitude value to determine the maximum value in the uncertainty\n\
    \   range; similarly, the uncertainty is subtracted from the base value\n   to\
    \ determine the minimum value.  Note that because lines of longitude\n   converge\
    \ at the poles, the actual distance represented by this\n   uncertainty changes\
    \ with the distance from the equator.\n   If the maximum or minimum latitude values\
    \ derived from applying\n   uncertainty are outside the range of -90 to +90, these\
    \ values are\n   trimmed to within this range.  If the maximum or minimum longitude\n\
    \   values derived from applying uncertainty are outside the range of\n   -180\
    \ to +180, then these values are normalized to this range by\n   adding or subtracting\
    \ 360 as necessary.\n   The encoded value is determined by subtracting the next\
    \ highest whole\n   integer value for the base 2 logarithm of uncertainty from\
    \ 8, as is\n   shown by the following formula, where uncertainty is the midpoint\
    \ of\n   the known range less the lower bound of that range:\n      x = 8 - ceil(\
    \ log2( uncertainty ) )\n   Note that the result of encoding this value increases\
    \ the range of\n   uncertainty to the next available power of two; subsequent\
    \ repeated\n   encodings and decodings do not change the value.  Only increasing\n\
    \   uncertainty means that the associated confidence does not have to\n   decrease.\n"
- title: 2.4.  Altitude
  contents:
  - "2.4.  Altitude\n   How the altitude value is interpreted depends on the Altitude\
    \ Type\n   (AType) value and the selected datum.  Three Altitude Type values are\n\
    \   defined in this document: unknown (0), meters (1), and floors (2).\n"
- title: 2.4.1.  No Known Altitude (AType = 0)
  contents:
  - "2.4.1.  No Known Altitude (AType = 0)\n   In some cases, the altitude of the\
    \ location might not be provided.\n   An Altitude Type value of zero indicates\
    \ that the altitude is not\n   given to the client.  In this case, the Altitude\
    \ and Altitude\n   Uncertainty fields can contain any value and MUST be ignored.\n"
- title: 2.4.2.  Altitude in Meters (AType = 1)
  contents:
  - "2.4.2.  Altitude in Meters (AType = 1)\n   If the Altitude Type has a value of\
    \ one, altitude is measured in\n   meters, in relation to the zero set by the\
    \ vertical datum.  For AType\n   = 1, the altitude value is expressed as a 30-bit,\
    \ fixed-point, two's\n   complement integer with 22 integer bits and 8 fractional\
    \ bits.\n"
- title: 2.4.3.  Altitude in Floors (AType = 2)
  contents:
  - "2.4.3.  Altitude in Floors (AType = 2)\n   A value of two for Altitude Type indicates\
    \ that the altitude value is\n   measured in floors.  Since altitude in meters\
    \ may not be known within\n   a building, a floor indication may be more useful.\
    \  For AType = 2,\n   the altitude value is expressed as a 30-bit, fixed-point,\
    \ two's\n   complement integer with 22 integer bits and 8 fractional bits.\n \
    \  This value is relevant only in relation to a building; the value is\n   relative\
    \ to the ground level of the building.  Floors located below\n   ground level\
    \ are represented by negative values.  In some buildings,\n   it might not be\
    \ clear which floor is at ground level, or an\n   intermediate floor might be\
    \ hard to identify as such.  Determining\n   what floor is at ground level and\
    \ what constitutes a sub-floor as\n   opposed to a naturally numbered floor is\
    \ left to local\n   interpretation.\n   Larger values represent floors that are\
    \ farther away from floor 0\n   such that:\n      - if positive, the floor value\
    \ is farther above the ground floor.\n      - if negative, the floor value is\
    \ farther below the ground floor.\n   Non-integer values can be used to represent\
    \ intermediate or\n   sub-floors, such as mezzanine levels.  Example: a mezzanine\
    \ between\n   floor 1 and floor 2 could be represented as a value of 1.25.\n \
    \  Example: mezzanines between floor 4 and floor 5 could be represented\n   as\
    \ values of 4.5 and 4.75.\n"
- title: 2.4.4.  Altitude Resolution
  contents:
  - "2.4.4.  Altitude Resolution\n   In the DHCPv4 GeoConf Option 123, the altitude\
    \ resolution (AltRes)\n   value encodes the number of high-order altitude bits\
    \ that should be\n   considered valid.  Values above 30 (decimal) are undefined\
    \ and\n   reserved.\n   If the Altitude Type value is one (AType = 1), an AltRes\
    \ value of 0.0\n   would indicate an unknown altitude.  The most precise altitude\
    \ would\n   have an AltRes value of 30.  Many values of AltRes would obscure any\n\
    \   variation due to vertical datum differences.\n   The AltRes field SHOULD be\
    \ set to maximum precision when AType = 2\n   (floors) when a floor value is included\
    \ in the DHCP Reply, or when\n   AType = 0, to denote that the floor isn't known.\
    \  An altitude coded\n   as AType = 2, AltRes = 30, and Altitude = 0.0 is meaningful\
    \ even\n   outside a building, and represents ground level at the given latitude\n\
    \   and longitude.\n"
- title: 2.4.5.  Altitude Uncertainty
  contents:
  - "2.4.5.  Altitude Uncertainty\n   In the DHCPv6 GeoLoc Option 63 or the DHCPv4\
    \ GeoLoc Option 144, the\n   AltUnc value quantifies the amount of uncertainty\
    \ in the altitude\n   value.  As with LatUnc and LongUnc, a value of 0 for AltUnc\
    \ is\n   reserved to indicate that altitude uncertainty is not known; values\n\
    \   above 30 are also reserved.  Altitude uncertainty only applies to\n   Altitude\
    \ Type 1.\n   The amount of altitude uncertainty can be determined by the following\n\
    \   formula, where x is the encoded integer value:\n      Uncertainty = 2 ^ (\
    \ 21 - x )\n   This value uses the same units as the associated altitude.\n  \
    \ Similarly, a value for the encoded integer value can be derived by\n   the following\
    \ formula:\n      x = 21 - ceil( log2( uncertainty ) )\n"
- title: 2.5.  Datum
  contents:
  - "2.5.  Datum\n   The Datum field determines how coordinates are organized and\
    \ related\n   to the real world.  Three datums are defined in this document, based\n\
    \   on the definitions in [OGP.Geodesy]:\n   1: WGS84 (Latitude, Longitude, Altitude):\
    \ The World Geodetic System\n      1984 [WGS84] coordinate reference system.\n\
    \      This datum is identified by the European Petroleum Survey Group\n     \
    \ (EPSG)/International Association of Oil & Gas Producers (OGP) with\n      the\
    \ code 4979, or by the URN \"urn:ogc:def:crs:EPSG::4979\".\n      Without altitude,\
    \ this datum is identified by the EPSG/OGP code\n      4326 and the URN \"urn:ogc:def:crs:EPSG::4326\"\
    .\n   2: NAD83 (Latitude, Longitude) + NAVD88: This datum uses a\n      combination\
    \ of the North American Datum 1983 (NAD83) for\n      horizontal (Latitude and\
    \ Longitude) values, plus the North\n      American Vertical Datum of 1988 (NAVD88)\
    \ vertical datum.\n      This datum is used for referencing location on land (not\
    \ near\n      tidal water) within North America.\n      NAD83 is identified by\
    \ the EPSG/OGP code of 4269, or the URN\n      \"urn:ogc:def:crs:EPSG::4269\"\
    .  NAVD88 is identified by the EPSG/\n      OGP code of 5703, or the URN \"urn:ogc:def:crs:EPSG::5703\"\
    .\n   3: NAD83 (Latitude, Longitude) + MLLW: This datum uses a combination\n \
    \     of the North American Datum 1983 (NAD83) for horizontal (Latitude\n    \
    \  and Longitude) values, plus the Mean Lower Low Water (MLLW)\n      vertical\
    \ datum.\n      This datum is used for referencing location on or near tidal water\n\
    \      within North America.\n      NAD83 is identified by the EPSG/OGP code of\
    \ 4269, or the URN\n      \"urn:ogc:def:crs:EPSG::4269\".  MLLW does not have\
    \ a specific code\n      or URN.\n   All hosts MUST support the WGS84 datum (Datum\
    \ 1).\n"
- title: 3.  Security Considerations
  contents:
  - "3.  Security Considerations\n   Geopriv requirements (including security requirements)\
    \ are discussed\n   in \"Geopriv Requirements\" [RFC3693].  A threat analysis\
    \ is provided\n   in \"Threat Analysis of the Geopriv Protocol\" [RFC3694].\n\
    \   Since there is no privacy protection for DHCP messages, an\n   eavesdropper\
    \ who can monitor the link between the DHCP server and\n   requesting client can\
    \ discover this LCI.\n   To minimize the unintended exposure of location information,\
    \ the LCI\n   option SHOULD be returned by DHCP servers only when the DHCP client\n\
    \   has included this option in its 'parameter request list' (Section 3.5\n  \
    \ of [RFC2131], Section 9.8 of [RFC2132]).\n   Where critical decisions might\
    \ be based on the value of this option,\n   DHCP authentication as defined in\
    \ \"Authentication for DHCP Messages\"\n   [RFC3118] and \"Dynamic Host Configuration\
    \ Protocol for IPv6 (DHCPv6)\"\n   [RFC3315] SHOULD be used to protect the integrity\
    \ of the DHCP\n   options.\n   Link-layer confidentiality and integrity protection\
    \ may also be\n   employed to reduce the risk of location disclosure and tampering.\n"
- title: 4.  IANA Considerations
  contents:
  - '4.  IANA Considerations

    '
- title: 4.1.  DHCP Options
  contents:
  - "4.1.  DHCP Options\n   This document defines the DHCPv6 GeoLoc Option (see Section\
    \ 2.1),\n   which has been assigned a DHCPv6 option code of 63 per [RFC3315]:\n\
    \      Value   Description          Reference\n      ----    ------------------\
    \   ----------\n      63      OPTION_GEOLOCATION   RFC 6225\n   This document\
    \ defines the DHCPv4 GeoConf Option (see Section 2.2.1),\n   which has been assigned\
    \ a DHCPv4 option code of 123 from the DHCP\n   Option space.\n   This document\
    \ also defines the DHCPv4 GeoLoc Option (see\n   Section 2.2.2), which has been\
    \ assigned a DHCPv4 option code of 144\n   per [RFC2132] [RFC2939]:\n        \
    \             Data\n      Tag    Name    Length   Meaning              Reference\n\
    \      ----   ----    ------   -------              ---------\n      144    GeoLoc\
    \   16      Geospatial Location  RFC 6225\n                              with\
    \ Uncertainty\n"
- title: 4.2.  Altitude Type Registry
  contents:
  - "4.2.  Altitude Type Registry\n   IANA has created and now maintains the Altitude\
    \ Type registry\n   following the guidelines below.\n   The registry consists\
    \ of three values: Altitude Type, Description,\n   and Reference.  These are described\
    \ below.\n   Altitude Type: An integer, refers to the value used in the DHCPv4\n\
    \      GeoConf and the DHCPv4 and DHCPv6 GeoLoc options described in this\n  \
    \    document.  Values 0 - 2 are assigned.  Values 3 - 15 are\n      Unassigned\
    \ [RFC5226].\n   Description: The description of the altitude described by this\
    \ code.\n   Reference: The reference to the document that describes the altitude\n\
    \      code.  This reference MUST define the way that the 30-bit altitude\n  \
    \    values and the associated 6-bit uncertainty are interpreted.\n   Initial\
    \ values are given below; new assignments are to be made\n   following the \"\
    Standards Action\" policies [RFC5226].\n      +------+---------------------+--------------+\n\
    \      |  #   |  Description        |  Reference   |\n      +------+---------------------+--------------+\n\
    \      |  0   | No known altitude   |  RFC 6225    |\n      |  1   | Altitude\
    \ in meters  |  RFC 6225    |\n      |  2   | Altitude in floors  |  RFC 6225\
    \    |\n      | 3-15 | Unassigned          |              |\n      +------+---------------------+--------------+\n"
- title: 4.3.  Datum Registry
  contents:
  - "4.3.  Datum Registry\n   IANA has created and now maintains the Datum registry\
    \ following the\n   guidelines below.\n   The registry consists of three values:\
    \ Datum, Description, and\n   Reference.  These are described below.\n   Datum:\
    \ An integer, refers to the value used in the DHCPv4 GeoConf and\n      the DHCPv4\
    \ and DHCPv6 GeoLoc options described in this document.\n      Value 0 is Reserved.\
    \  Values 1 - 3 are assigned.  Values 4 - 7 are\n      Unassigned [RFC5226].\n\
    \   Description: The description of the altitude described by this code.\n   Reference:\
    \ The reference to the document that describes the Datum\n      code.  This reference\
    \ MUST include specification of both the\n      horizontal and vertical datum,\
    \ and MUST define the way that the\n      34-bit values and the respective 6-bit\
    \ uncertainties are\n      interpreted.\n   Initial values are given below; new\
    \ assignments are to be made\n   following the \"Standards Action\" policies [RFC5226].\n\
    \      +------+----------------------------------------+--------------+\n    \
    \  |  #   |  Description                           |  Reference   |\n      +------+----------------------------------------+--------------+\n\
    \      |  0   | Reserved                               |  RFC 6225    |\n    \
    \  +------+----------------------------------------+--------------+\n      | \
    \ 1   | Vertical datum WGS 84 defined by EPSG  |  RFC 6225    |\n      |     \
    \ | CRS Code 4327                          |              |\n      +------+----------------------------------------+--------------+\n\
    \      |  2   | Vertical datum NAD83 defined by EPSG   |  RFC 6225    |\n    \
    \  |      | CRS Code 4269 with North American      |              |\n      | \
    \     | Vertical Datum of 1988 (NAVD88)        |              |\n      +------+----------------------------------------+--------------+\n\
    \      |  3   | Vertical datum NAD83 defined by EPSG   |  RFC 6225    |\n    \
    \  |      | CRS Code 4269 with Mean Lower Low Water|              |\n      | \
    \     | (MLLW) as associated vertical datum    |              |\n      +------+----------------------------------------+--------------+\n\
    \      | 4-7  | Unassigned                             |              |\n    \
    \  +------+----------------------------------------+--------------+\n"
- title: 4.4.  GeoLoc Option Version Registry
  contents:
  - "4.4.  GeoLoc Option Version Registry\n   IANA has created and now maintains the\
    \ GeoLoc Option Version registry\n   following the guidelines below.\n   The registry\
    \ consists of three values: GeoLoc Option Version,\n   Description, and Reference.\
    \  These are described below.\n   GeoLoc Option Version: An integer; refers to\
    \ the version used in the\n      DHCPv4 and DHCPv6 GeoLoc options described in\
    \ this document.\n      Value 0 is Reserved.  Value 1 has been assigned.  Values\
    \ 2 - 3 are\n      Unassigned [RFC5226].\n   Description: The description of the\
    \ version described by this code.\n   Reference: The reference to the document\
    \ that describes the Version\n      code.\n   Initial values are given below;\
    \ new assignments are to be made\n   following the \"Standards Action\" policies\
    \ [RFC5226].\n      +------+---------------------------------------+--------------+\n\
    \      |  #   |  Description                          |  Reference   |\n     \
    \ +------+---------------------------------------+--------------+\n      |  0\
    \   | Reserved                              |  RFC 6225    |\n      +------+---------------------------------------+--------------+\n\
    \      |  1   | Implementations utilizing uncertainty |  RFC 6225    |\n     \
    \ |      | parameters for both DHCPv4 and DHCPv6 |              |\n      |   \
    \   | GeoLoc options                        |              |\n      +------+---------------------------------------+--------------+\n\
    \      | 2-3  | Unassigned                            |              |\n     \
    \ +------+---------------------------------------+--------------+\n"
- title: 5.  Acknowledgments
  contents:
  - "5.  Acknowledgments\n   The authors would like to thank Randall Gellens, Patrik\
    \ Falstrom,\n   Ralph Droms, Ted Hardie, Jon Peterson, Robert Sparks, Nadine Abbott,\n\
    \   and Mykyta Yevstifeyev for their inputs and constructive comments\n   regarding\
    \ this document.  Additionally, the authors would like to\n   thank Greg Troxel\
    \ for the education on vertical datums, as well as\n   Carl Reed.  Thanks to Richard\
    \ Barnes for his contribution on GML\n   mapping for resolution.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [EPSG]         European Petroleum Survey Group,\n\
    \                  <http://www.epsg.org/> and\n                  <http://www.epsg-registry.org/>.\n\
    \   [RFC2119]      Bradner, S., \"Key words for use in RFCs to Indicate\n    \
    \              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2131]\
    \      Droms, R., \"Dynamic Host Configuration Protocol\",\n                 \
    \ RFC 2131, March 1997.\n   [RFC2132]      Alexander, S. and R. Droms, \"DHCP\
    \ Options and BOOTP\n                  Vendor Extensions\", RFC 2132, March 1997.\n\
    \   [RFC2939]      Droms, R., \"Procedures and IANA Guidelines for\n         \
    \         Definition of New DHCP Options and Message Types\",\n              \
    \    BCP 43, RFC 2939, September 2000.\n   [RFC3118]      Droms, R., Ed., and\
    \ W. Arbaugh, Ed., \"Authentication\n                  for DHCP Messages\", RFC\
    \ 3118, June 2001.\n   [RFC3315]      Droms, R., Ed., Bound, J., Volz, B., Lemon,\
    \ T.,\n                  Perkins, C., and M. Carney, \"Dynamic Host\n        \
    \          Configuration Protocol for IPv6 (DHCPv6)\", RFC 3315,\n           \
    \       July 2003.\n   [RFC5226]      Narten, T. and H. Alvestrand, \"Guidelines\
    \ for Writing\n                  an IANA Considerations Section in RFCs\", BCP\
    \ 26, RFC\n                  5226, May 2008.\n   [WGS84]        US National Imagery\
    \ and Mapping Agency, \"Department of\n                  Defense (DoD) World Geodetic\
    \ System 1984 (WGS 84),\n                  Third Edition\", NIMA TR8350.2, January\
    \ 2000,\n                  <https://www1.nga.mil/PRODUCTSSERVICES/\n         \
    \         GEODESYGEOPHYSICS/WORLDGEODETICSYSTEM/\n                  Pages/default.aspx>\
    \ and\n                  <http://www.ngs.noaa.gov/faq.shtml#WGS84>.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [Convey]       Polk, J., Rosen, B., and J. Peterson,\
    \ \"Location\n                  Conveyance for the Session Initiation Protocol\"\
    , Work\n                  in Progress, May 2011.\n   [GeoShape]     Thomson, M.\
    \ and C. Reed, \"GML 3.1.1 PIDF-LO Shape\n                  Application Schema\
    \ for use by the Internet Engineering\n                  Task Force (IETF)\",\
    \ Candidate OpenGIS Implementation\n                  Specification 06-142, Version:\
    \ 0.0.9, December 2006.\n   [IEEE-802.11y] IEEE Standard for Information technology\
    \ -\n                  Telecommunications and information exchange between\n \
    \                 systems - Local and metropolitan area networks -\n         \
    \         Specific requirements - Part 11: Wireless LAN Medium\n             \
    \     Access Control (MAC) and Physical Layer (PHY)\n                  specifications\
    \ Amendment 3: 3650-3700 MHz Operation in\n                  USA, November 2008.\n\
    \   [NENA]         National Emergency Number Association (NENA), NENA\n      \
    \            Technical Information Document on Model Legislation\n           \
    \       Enhanced 911 for Multi-Line Telephone Systems,\n                  <www.nena.org>.\n\
    \   [OGC-GML3.1.1] Portele, C., Cox, S., Daisy, P., Lake, R., and A.\n       \
    \           Whiteside, \"Geography Markup Language (GML) 3.1.1\",\n          \
    \        OGC 03-105r1, July 2003.\n   [OGP.Geodesy]  International Association\
    \ of Oil & Gas Producers (OGP)\n                  Geodesy Resources, Geomatics\
    \ Committee,\n                  <http://info.ogp.org.uk/geodesy/>.\n   [RFC3046]\
    \      Patrick, M., \"DHCP Relay Agent Information Option\",\n               \
    \   RFC 3046, January 2001.\n   [RFC3693]      Cuellar, J., Morris, J., Mulligan,\
    \ D., Peterson, J.,\n                  and J. Polk, \"Geopriv Requirements\",\
    \ RFC 3693,\n                  February 2004.\n   [RFC3694]      Danley, M., Mulligan,\
    \ D., Morris, J., and J. Peterson,\n                  \"Threat Analysis of the\
    \ Geopriv Protocol\", RFC 3694,\n                  February 2004.\n   [RFC3825]\
    \      Polk, J., Schnizlein, J., and M. Linsner, \"Dynamic\n                 \
    \ Host Configuration Protocol Option for Coordinate-\n                  based\
    \ Location Configuration Information\", RFC 3825,\n                  July 2004.\n\
    \   [RFC4119]      Peterson, J., \"A Presence-based GEOPRIV Location\n       \
    \           Object Format\", RFC 4119, December 2005.\n   [RFC4776]      Schulzrinne,\
    \ H., \"Dynamic Host Configuration Protocol\n                  (DHCPv4 and DHCPv6)\
    \ Option for Civic Addresses\n                  Configuration Information\", RFC\
    \ 4776, November 2006.\n   [RFC5139]      Thomson, M. and J. Winterbottom, \"\
    Revised Civic\n                  Location Format for Presence Information Data\
    \ Format\n                  Location Object (PIDF-LO)\", RFC 5139, February 2008.\n\
    \   [RFC5491]      Winterbottom, J., Thomson, M., and H. Tschofenig,\n       \
    \           \"GEOPRIV Presence Information Data Format Location\n            \
    \      Object (PIDF-LO) Usage Clarification, Considerations,\n               \
    \   and Recommendations\", RFC 5491, March 2009.\n"
- title: Appendix A.  GML Mapping
  contents:
  - "Appendix A.  GML Mapping\n   The GML representation of a decoded DHCP option\
    \ depends on what\n   fields are specified.  The DHCP format for location logically\n\
    \   describes a geodetic prism, rectangle, or point, depending on whether\n  \
    \ altitude and uncertainty values are provided.  In the absence of\n   uncertainty\
    \ information, the value decoded from the DHCP form can be\n   expressed as a\
    \ single point; this is true regardless of whether the\n   version 0 or version\
    \ 1 interpretations of the uncertainty fields are\n   used.  If the point includes\
    \ altitude, it uses a three-dimensional\n   Coordinate Reference System (CRS);\
    \ otherwise, it uses a two-\n   dimensional CRS.  If all fields are included along\
    \ with uncertainty,\n   the shape described is a rectangular prism.  Note that\
    \ this is\n   necessary given that uncertainty for each axis is provided\n   independently.\n\
    \   If altitude or altitude uncertainty (AltUnc) is not specified, the\n   shape\
    \ is described as a rectangle using the \"gml:Polygon\" shape.  If\n   altitude\
    \ is available, a three-dimensional CRS is used; otherwise, a\n   two-dimensional\
    \ CRS is used.\n   For Datum values of 2 or 3 (NAD83), there is no available CRS\
    \ URN\n   that covers three-dimensional coordinates.  By necessity, locations\n\
    \   described in these datums can be represented by two-dimensional\n   shapes\
    \ only; that is, either a two-dimensional point or a polygon.\n   If the Altitude\
    \ Type is 2 (floors), then this value can be\n   represented using a civic address\
    \ object [RFC5139] that is presented\n   alongside the geodetic object.\n   This\
    \ Appendix describes how the location value encoded in DHCP format\n   for geodetic\
    \ location can be expressed in GML.  The mapping is valid\n   for the DHCPv6 GeoLoc\
    \ Option as well as both of the DHCPv4 GeoConf\n   and GeoLoc options, and for\
    \ the currently defined datum values (1, 2,\n   and 3).  Further version or datum\
    \ definitions should provide similar\n   mappings.\n   These shapes can be mapped\
    \ to GML by first computing the bounds that\n   are described using the coordinate\
    \ and uncertainty fields, then\n   encoding the result in a GML Polygon or Prism\
    \ shape.\n"
- title: A.1.  GML Templates
  contents:
  - "A.1.  GML Templates\n   If altitude is provided in meters (AType 1) and the datum\
    \ value is\n   WGS84 (value 1), then the proper GML shape is a Prism, with the\n\
    \   following form (where $value$ indicates a value computed from the\n   DHCP\
    \ option as described below):\n      <gs:Prism srsName=\"urn:ogc:def:crs:EPSG::4979\"\
    \n                xmlns:gs=\"http://www.opengis.net/pidflo/1.0\"\n           \
    \     xmlns:gml=\"http://www.opengis.net/gml\">\n        <gs:base>\n         \
    \ <gml:Polygon>\n            <gml:exterior>\n              <gml:LinearRing>\n\
    \                <gml:posList>\n                  $lowLatitude$ $lowLongitude$\
    \ $lowAltitude$\n                  $lowLatitude$ $highLongitude$ $lowAltitude$\n\
    \                  $highLatitude$ $highLongitude$ $lowAltitude$\n            \
    \      $highLatitude$ $lowLongitude$ $lowAltitude$\n                  $lowLatitude$\
    \ $lowLongitude$ $lowAltitude$\n                </gml:posList>\n             \
    \ </gml:LinearRing>\n            </gml:exterior>\n          </gml:Polygon>\n \
    \       </gs:base>\n        <gs:height uom=\"urn:ogc:def:uom:EPSG::9001\">\n \
    \         $highAltitude - lowAltitude$\n        </gs:height>\n      </gs:Prism>\n\
    \   The Polygon shape is used if altitude is omitted or specified in\n   floors,\
    \ or if either NAD83 datum is used (value 2 or 3).  The\n   corresponding GML\
    \ Polygon has the following form:\n      <gml:Polygon srsName=\"$2D-CRS-URN$\"\
    \n                   xmlns:gml=\"http://www.opengis.net/gml\">>\n        <gml:exterior>\n\
    \          <gml:LinearRing>\n            <gml:posList>\n              $lowLatitude$\
    \ $lowLongitude$\n              $lowLatitude$ $highLongitude$\n              $highLatitude$\
    \ $highLongitude$\n              $highLatitude$ $lowLongitude$\n             \
    \ $lowLatitude$ $lowLongitude$\n            </gml:posList>\n          </gml:LinearRing>\n\
    \        </gml:exterior>\n      </gml:Polygon>\n   The value \"2D-CRS-URN\" is\
    \ defined by the datum value: If the datum is\n   WGS84 (value 1), then the 2D-CRS-URN\
    \ is \"urn:ogc:def:crs:EPSG::4326\".\n   If the datum is NAD83 (value 2 or 3),\
    \ then the 2D-CRS-URN is\n   \"urn:ogc:def:crs:EPSG::4269\".\n   A Polygon shape\
    \ with the WGS84 three-dimensional CRS is used if the\n   datum is WGS84 (value\
    \ 1) and the altitude is specified in meters\n   (Altitude Type 1), but no altitude\
    \ uncertainty is specified (that is,\n   AltUnc is 0).  In this case, the value\
    \ of the Altitude field is added\n   after each of the points above, and the srsName\
    \ attribute is set to\n   the three-dimensional WGS84 CRS, namely \"urn:ogc:def:crs:EPSG::4979\"\
    .\n   A simple point shape is used if either latitude uncertainty (LatUnc)\n \
    \  or longitude uncertainty (LongUnc) is not specified.  With altitude,\n   this\
    \ uses a three-dimensional CRS; otherwise, it uses a two-\n   dimensional CRS.\n\
    \      <gml:Point srsName=\"$CRS-URN$\"\n                 xmlns:gml=\"http://www.opengis.net/gml\"\
    >\n        <gml:pos>$Latitude$ $Longitude$ $[Altitude]$</gml:pos>\n      </gml:Point>\n"
- title: A.1.1.  Finding Low and High Values Using Uncertainty Fields
  contents:
  - "A.1.1.  Finding Low and High Values Using Uncertainty Fields\n   For the DHCPv4\
    \ GeoConf Option 123, resolution fields are used (LaRes,\n   LoRes, AltRes), indicating\
    \ how many bits of a value contain\n   information.  Any bits beyond those indicated\
    \ can be either zero or\n   one.\n   For the DHCPv6 GeoLoc Option 63 and DHCPv4\
    \ GeoLoc Option 144, the\n   LatUnc, LongUnc, and AltUnc fields indicate uncertainty\
    \ distances,\n   denoting the bounds of the location region described by the DHCP\n\
    \   location object.\n   The two sections below describe how to compute the latitude,\n\
    \   longitude, and altitude bounds (e.g., $lowLatitude$, $highAltitude$)\n   in\
    \ the templates above.  The first section describes how these bounds\n   are computed\
    \ in the \"resolution encoding\" (DHCPv4 GeoConf\n   Option 123), while the second\
    \ section addresses the \"uncertainty\n   encoding\" (DHCPv6 GeoLoc Option 63\
    \ and DHCPv4 GeoLoc Option 144).\n"
- title: A.1.1.1.  Resolution Encoding
  contents:
  - "A.1.1.1.  Resolution Encoding\n   Given a number of resolution bits (i.e., the\
    \ value of a resolution\n   field), if all bits beyond those bits are set to zero,\
    \ this gives the\n   lowest possible value.  The highest possible value can be\
    \ found\n   setting all bits to one.\n   If the encoded value of latitude/longitude\
    \ and resolution (LaRes,\n   LoRes) are treated as 34-bit unsigned integers, the\
    \ following can be\n   used (where \">>\" is a bitwise right shift, \"&\" is a\
    \ bitwise AND, \"~\"\n   is a bitwise negation, and \"|\" is a bitwise OR).\n\
    \      mask = 0x3ffffffff >> resolution\n      lowvalue = value & ~mask\n    \
    \  highvalue = value | mask + 1\n   Once these values are determined, the corresponding\
    \ floating-point\n   numbers can be computed by dividing the values by 2^25 (since\
    \ there\n   are 25 bits of fraction in the fixed-point representation).\n   Alternatively,\
    \ the lowest possible value can be found by using\n   resolution to determine\
    \ the size of the range.  This method has the\n   advantage that it operates on\
    \ the decoded floating-point values.  It\n   is equivalent to the first mechanism,\
    \ to a possible error of 2^-25\n   (2^-8 for altitude).\n      scale = 2 ^ ( 9\
    \ - resolution )\n      lowvalue = floor( value / scale ) * scale\n      highvalue\
    \ = lowvalue + scale\n   Altitude resolution (AltRes) uses the same process with\
    \ different\n   constants.  There are 22 whole bits in the altitude encoding (instead\n\
    \   of 9) and 30 bits in total (instead of 34).\n"
- title: A.1.1.2.  Uncertainty Encoding
  contents:
  - "A.1.1.2.  Uncertainty Encoding\n   In the uncertainty encoding, the uncertainty\
    \ fields (LongUnc/LatUnc)\n   directly represent the logarithms of uncertainty\
    \ distances.  So the\n   low and high bounds are computed by first computing the\
    \ uncertainty\n   distances, then adding and subtracting these from the value\
    \ provided.\n   If \"uncertainty\" is the unsigned integer value of the uncertainty\n\
    \   field and \"value\" is the value of the coordinate field:\n      distance\
    \ = 2 ^ (8 - uncertainty)\n      lowvalue = value - distance\n      highvalue\
    \ = value + distance\n   Altitude uncertainty (AltUnc in version 1) uses the same\
    \ process with\n   different constants:\n      distance = 2 ^ (21 - uncertainty)\n\
    \      lowvalue = value - distance\n"
- title: Appendix B.  Calculations of Resolution
  contents:
  - "Appendix B.  Calculations of Resolution\n   The following examples for two different\
    \ locations demonstrate how\n   the resolution values for latitude, longitude,\
    \ and altitude (used in\n   DHCPv4 GeoConf Option 123) can be calculated.  In\
    \ both examples, the\n   geo-location values were derived from maps using the\
    \ WGS84 map datum;\n   therefore, in these examples, the Datum field would have\
    \ a value = 1\n   (00000001, or 0x01).\n"
- title: B.1.  Location Configuration Information of "White House" (Example 1)
  contents:
  - "B.1.  Location Configuration Information of \"White House\" (Example 1)\n   The\
    \ grounds of the White House in Washington D.C. (1600 Pennsylvania\n   Ave. NW,\
    \ Washington, DC  20006) can be found between 38.895375 and\n   38.898653 degrees\
    \ North and 77.037911 and 77.035116 degrees West.  In\n   this example, we assume\
    \ that we are standing on the sidewalk on the\n   north side of the White House,\
    \ between driveways.  Since we are not\n   inside a structure, we assume an altitude\
    \ value of 15 meters,\n   interpolated from the US Geological survey map, Washington,\n\
    \   Washington West quadrangle.\n   The address was NOT picked for any political\
    \ reason and can easily be\n   found on the Internet or mapping software, but\
    \ was picked as an\n   easily identifiable location on our planet.\n   In this\
    \ example, the requirement of emergency responders in North\n   America via their\
    \ National Emergency Number Association (NENA) Model\n   Legislation [NENA] could\
    \ be met by a LaRes value of 21 and a LoRes\n   value of 20.  This would yield\
    \ a geo-location that is latitude\n   38.8984375 north to latitude 38.8988616\
    \ north and longitude\n   -77.0371094 to longitude -77.0375977.  This is an area\
    \ of\n   approximately 89 feet by 75 feet or 6669 square feet, which is very\n\
    \   close to the 7000 square feet requested by NENA.  In this example, a\n   service\
    \ provider could enforce that a device send location\n   configuration information\
    \ with this minimum amount of resolution for\n   this particular location when\
    \ calling emergency services.\n   An approximate representation of this location\
    \ might be provided\n   using the DHCPv4 GeoConf Option 123 encoding as follows:\n\
    \      0                   1                   2                   3\n      0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |   Code (123)  |  OptLen (16)  |   LaRes   |     Latitude      .\n    \
    \ |0 1 1 1 1 0 1 1|0 0 0 1 0 0 0 0|0 1 0 0 1 0|0 0 0 1 0 0 1 1 0 1.\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     .                Latitude (cont'd)              |   LoRes   |   .\n    \
    \ .1 1 0 0 1 0 1 1 1 0 0 1 1 0 0 0 0 1 1 0 0 0 1 1|0 1 0 0 0 1|1 1.\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     .                       Longitude (cont'd)                      |\n    \
    \ .0 1 1 0 0 1 0 1 1 1 1 0 1 1 0 1 0 1 0 0 0 0 1 0 1 1 0 0 0 1 0 0|\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     | AType |   AltRes  |                Altitude                   .\n    \
    \ |0 0 0 1|0 1 0 0 0 1|0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1.\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     .  Alt (cont'd) |   Res   |Datum|\n     .0 0 0 0 0 0 0 0|0 0 0 0 0|0 0 1|\n\
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   In hexadecimal, this is 7B10484D CB986347\
    \ 65ED42C4 1440000F 0001.\n"
- title: B.1.1.  Decoding Location Configuration Information with Resolution
  contents:
  - "B.1.1.  Decoding Location Configuration Information with Resolution\n   Decoding\
    \ this option gives a latitude of 38.897647 (to 7 decimal\n   places) with 18\
    \ bits of resolution, a longitude of -77.0366000 with\n   17 bits of resolution,\
    \ an Altitude Type of meters with a value of 15\n   and 17 bits of resolution,\
    \ version 0 (resolution), and the WGS84\n   datum.\n   For the latitude value,\
    \ 18 bits of resolution allow for values in the\n   range from 38.8964844 to 38.8984375.\
    \  For the longitude value, 17\n   bits of resolution allow for values in the\
    \ range from -77.0390625 to\n   -77.0351563.  Having 17 bits of resolution in\
    \ the altitude allows for\n   values in the range from 0 to 32 meters.\n"
- title: B.1.2.  GML Representation of Decoded Location Configuration Information
  contents:
  - "B.1.2.  GML Representation of Decoded Location Configuration Information\n  \
    \ The following GML shows the value decoded in the previous example as\n   a point\
    \ in a three-dimensional CRS:\n      <gml:Point srsName=\"urn:ogc:def:crs:EPSG::4979\"\
    \n                 xmlns:gml=\"http://www.opengis.net/gml\">\n        <gml:pos>38.897647\
    \ -77.0366 15</gml:pos>\n      </gml:Point>\n   This representation ignores the\
    \ values included in the resolution\n   parameters.  If resolution values are\
    \ provided, a rectangular prism\n   can be used to represent the location.\n \
    \  The following example uses all of the decoded information from the\n   previous\
    \ example:\n      <gs:Prism srsName=\"urn:ogc:def:crs:EPSG::4979\"\n         \
    \ xmlns:gs=\"http://www.opengis.net/pidflo/1.0\"\n          xmlns:gml=\"http://www.opengis.net/gml\"\
    >\n        <gs:base>\n          <gml:Polygon>\n           <gml:exterior>\n   \
    \           <gml:LinearRing>\n               <gml:posList>\n                 \
    \ 38.8964844 -77.0390625 0\n                  38.8964844 -77.0351563 0\n     \
    \             38.8984375 -77.0351563 0\n                  38.8984375 -77.0390625\
    \ 0\n                  38.8964844 -77.0390625 0\n                </gml:posList>\n\
    \              </gml:LinearRing>\n            </gml:exterior>\n          </gml:Polygon>\n\
    \        </gs:base>\n        <gs:height uom=\"urn:ogc:def:uom:EPSG::9001\">\n\
    \          32\n        </gs:height>\n      </gs:Prism>\n"
- title: B.2.  Location Configuration Information of "Sears Tower" (Example 2)
  contents:
  - "B.2.  Location Configuration Information of \"Sears Tower\" (Example 2)\n   Postal\
    \ Address:\n      Sears Tower\n      103rd Floor\n      233 S. Wacker Dr.\n  \
    \    Chicago, IL  60606\n   Viewing the Chicago area from the Observation Deck\
    \ of the Sears\n   Tower:\n      Latitude 41.87884 degrees North (or +41.87884\
    \ degrees)\n      Using two's complement, 34-bit fixed point, 25 bits of fraction\n\
    \      Latitude = 0x053c1f751,\n      Latitude = 0001010011110000011111011101010001\n\
    \      Longitude 87.63602 degrees West (or -87.63602 degrees)\n      Using two's\
    \ complement, 34-bit fixed point, 25 bits of fraction\n      Longitude = 0xf50ba5b97,\n\
    \      Longitude = 1101010000101110100101101110010111\n      Altitude 103\n  \
    \ In this example, we are inside a structure; therefore, we will assume\n   an\
    \ altitude value of 103 to indicate the floor we are on.  The\n   Altitude Type\
    \ value is 2, indicating floors.  The AltRes field would\n   indicate that all\
    \ bits in the Altitude field are true, as we want to\n   accurately represent\
    \ the floor of the structure where we are located.\n      AltRes = 30, 0x1e, 011110\n\
    \      AType = 2, 0x02, 000010\n      Altitude = 103, 0x00006700, 000000000000000110011100000000\n\
    \   For the accuracy of the latitude and longitude, the best information\n   available\
    \ to us was supplied by a generic mapping service that shows\n   a single geo-loc\
    \ for all of the Sears Tower.  Therefore, we are going\n   to show LaRes as value\
    \ 18 (0x12 or 010010) and LoRes as value 18\n   (0x12 or 010010).  This would\
    \ be describing a geo-location area that\n   is latitude 41.8769531 to latitude\
    \ 41.8789062 and extends from\n   -87.6367188 degrees to -87.6347657 degrees longitude.\
    \  This is an\n   area of approximately 373412 square feet (713.3 ft. x 523.5\
    \ ft.).\n"
- title: Appendix C.  Calculations of Uncertainty
  contents:
  - "Appendix C.  Calculations of Uncertainty\n   The following example demonstrates\
    \ how uncertainty values for\n   latitude, longitude, and altitude (LatUnc, LongUnc,\
    \ and AltUnc used\n   in the DHCPv6 GeoLoc Option 63 as well as DHCPv4 GeoLoc\
    \ Option 144)\n   can be calculated.\n"
- title: C.1.  Location Configuration Information of "Sydney Opera House"
  contents:
  - "C.1.  Location Configuration Information of \"Sydney Opera House\"\n      (Example\
    \ 3)\n   This section describes an example of encoding and decoding the\n   geodetic\
    \ DHCP Option.  The textual results are expressed in GML\n   [OGC-GML3.1.1] form,\
    \ suitable for inclusion in PIDF-LO [RFC4119].\n   These examples all assume a\
    \ datum of WGS84 (datum = 1) and an\n   Altitude Type of meters (AType = 1).\n"
- title: C.1.1.  Encoding a Location into DHCP Geodetic Form
  contents:
  - "C.1.1.  Encoding a Location into DHCP Geodetic Form\n   This example draws a\
    \ rough polygon around the Sydney Opera House.\n   This polygon consists of the\
    \ following six points:\n      33.856625 S, 151.215906 E\n      33.856299 S, 151.215343\
    \ E\n      33.856326 S, 151.214731 E\n      33.857533 S, 151.214495 E\n      33.857720\
    \ S, 151.214613 E\n      33.857369 S, 151.215375 E\n   The top of the building\
    \ is 67.4 meters above sea level, and a\n   starting altitude of 0 meters above\
    \ the WGS84 geoid is assumed.\n   The first step is to determine the range of\
    \ latitude and longitude\n   values.  Latitude ranges from -33.857720 to -33.856299;\
    \ longitude\n   ranges from 151.214495 to 151.215906.\n   For this example, the\
    \ point that is encoded is chosen by finding the\n   middle of each range, that\
    \ is (-33.8570095, 151.2152005).  This is\n   encoded as (1110111100010010010011011000001101,\n\
    \   0100101110011011100010111011000011) in binary, or (3BC49360D,\n   12E6E2EC3)\
    \ in hexadecimal notation (with an extra 2 bits of leading\n   padding on each).\
    \  Altitude is set at 33.7 meters, which is\n   000000000000000010000110110011\
    \ (binary) or 000021B3 (hexadecimal).\n   The latitude uncertainty (LatUnc) is\
    \ given by inserting the\n   difference between the center value and the outer\
    \ value into the\n   formula from Section 2.3.2.  This gives:\n      x = 8 - ceil(\
    \ log2( -33.8570095 - -33.857720 ) )\n   The result of this equation is 18; therefore,\
    \ the uncertainty is\n   encoded as 010010 in binary.\n   Similarly, longitude\
    \ uncertainty (LongUnc) is given by the formula:\n      x = 8 - ceil( log2( 151.2152005\
    \ - 151.214495 ) )\n   The result of this equation is also 18, or 010010 in binary.\n\
    \   Altitude uncertainty (AltUnc) uses the formula from Section 2.4.5:\n     \
    \ x = 21 - ceil( log2( 33.7 - 0 ) )\n   The result of this equation is 15, which\
    \ is encoded as 001111 in\n   binary.\n   Adding an Altitude Type of 1 (meters)\
    \ and a Datum of 1 (WGS84), this\n   gives the following DHCPv4 GeoLoc Option\
    \ 144 form:\n      0                   1                   2                 \
    \  3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \ |   Code (144)  |  OptLen (16)  |  LatUnc   |     Latitude      .\n     |0 1\
    \ 1 1 1 0 1 1|0 0 0 1 0 0 0 0|0 1 0 0 1 0|1 1 1 0 1 1 1 1 0 0.\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     .                Latitude (cont'd)              |  LongUnc  |   .\n    \
    \ .0 1 0 0 1 0 0 1 0 0 1 1 0 1 1 0 0 0 0 0 1 1 0 1|0 1 0 0 1 0|0 1.\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     .                       Longitude (cont'd)                      |\n    \
    \ .0 0 1 0 1 1 1 0 0 1 1 0 1 1 1 0 0 0 1 0 1 1 1 0 1 1 0 0 0 0 1 1|\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     | AType |   AltUnc  |                Altitude                   .\n    \
    \ |0 0 0 1|0 0 1 1 1 1|0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1.\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     .  Alt (cont'd) |Ver| Res |Datum|\n     .1 0 1 1 0 0 1 1|0 1|0 0 0|0 0 1|\n\
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   In hexadecimal, this is 7B104BBC 49360D49\
    \ 2E6E2EC3 13C00021 B341.\n   The DHCPv6 form only differs in the code and option\
    \ length portion.\n"
- title: C.1.2.  Decoding a Location from DHCP Geodetic Form
  contents:
  - "C.1.2.  Decoding a Location from DHCP Geodetic Form\n   If receiving the binary\
    \ form created in the previous section, this\n   section describes how that would\
    \ be interpreted.  The result is then\n   represented as a GML object, as defined\
    \ in [GeoShape].\n   A latitude value of 1110111100010010010011011000001101 decodes\
    \ to a\n   value of -33.8570095003 (to 10 decimal places).  The longitude value\n\
    \   of 0100101110011011100010111011000011 decodes to 151.2152005136.\n   Decoding\
    \ Tip: If the raw values of latitude and longitude are placed\n   in integer variables,\
    \ the actual value can be derived by the\n   following process:\n   1. If the\
    \ highest order bit is set (i.e., the number is a two's\n      complement negative),\
    \ then subtract 2 to the power of 34 (the\n      total number of bits).\n   2.\
    \ Divide the result by 2 to the power of 25 (the number of\n      fractional bits)\
    \ to determine the final value.\n      The same principle can be applied when\
    \ decoding altitude values,\n      except with different powers of 2 (30 and 8,\
    \ respectively).\n   The latitude and longitude uncertainty are both 18, which\
    \ gives an\n   uncertainty value of 0.0009765625 using the formula from\n   Section\
    \ 2.3.2.  Therefore, the decoded latitude is -33.8570095003 +/-\n   0.0009765625\
    \ (or the range from -33.8579860628 to -33.8560329378) and\n   the decoded longitude\
    \ is 151.2152005136 +/- 0.0009765625 (or the\n   range from 151.2142239511 to\
    \ 151.2161770761).\n   The encoded altitude of 000000000000000010000110110011\
    \ decodes to\n   33.69921875.  The encoded uncertainty of 15 gives a value of\
    \ 64;\n   therefore, the final uncertainty is 33.69921875 +/- 64 (or the range\n\
    \   from -30.30078125 to 97.69921875).\n"
- title: C.1.2.1.  GML Representation of Decoded Locations
  contents:
  - "C.1.2.1.  GML Representation of Decoded Locations\n   The following GML shows\
    \ the value decoded in the previous example as\n   a point in a three-dimensional\
    \ CRS:\n      <gml:Point srsName=\"urn:ogc:def:crs:EPSG::4979\"\n            \
    \     xmlns:gml=\"http://www.opengis.net/gml\">\n        <gml:pos>-33.8570095003\
    \ 151.2152005136 33.69921875</gml:pos>\n      </gml:Point>\n   The following example\
    \ uses all of the decoded information from the\n   previous example:\n      <gs:Prism\
    \ srsName=\"urn:ogc:def:crs:EPSG::4979\"\n          xmlns:gs=\"http://www.opengis.net/pidflo/1.0\"\
    \n          xmlns:gml=\"http://www.opengis.net/gml\">\n        <gs:base>\n   \
    \       <gml:Polygon>\n            <gml:exterior>\n              <gml:LinearRing>\n\
    \                <gml:posList>\n                  -33.8579860628 151.2142239511\
    \ -30.30078125\n                  -33.8579860628 151.2161770761 -30.30078125\n\
    \                  -33.8560329378 151.2161770761 -30.30078125\n              \
    \    -33.8560329378 151.2142239511 -30.30078125\n                  -33.8579860628\
    \ 151.2142239511 -30.30078125\n                </gml:posList>\n              </gml:LinearRing>\n\
    \            </gml:exterior>\n          </gml:Polygon>\n        </gs:base>\n \
    \       <gs:height uom=\"urn:ogc:def:uom:EPSG::9001\">\n          128\n      \
    \  </gs:height>\n      </gs:Prism>\n   Note that this representation is only appropriate\
    \ if the uncertainty\n   is sufficiently small.  [GeoShape] recommends that distances\
    \ between\n   polygon vertices be kept short.  A GML representation like this\
    \ one\n   is only appropriate where uncertainty is less than 1 degree (an\n  \
    \ encoded value of 9 or greater).\n"
- title: Appendix D.  Changes from RFC 3825
  contents:
  - "Appendix D.  Changes from RFC 3825\n   This section lists the major changes between\
    \ RFC 3825 and this\n   document.  Minor changes, including style, grammar, spelling,\
    \ and\n   editorial changes, are not mentioned here.\n   o  Section 1 now includes\
    \ clarifications on wired and wireless uses.\n   o  The former Sections 1.2 and\
    \ 1.3 have been removed.  Section 1.2\n      now defines the concepts of uncertainty\
    \ and resolution, as well as\n      conversion between the DHCP option formats\
    \ and PIDF-LO.\n   o  A DHCPv6 GeoLoc Option is now defined (Section 2.1) as well\
    \ as a\n      new DHCPv4 GeoLoc Option (Section 2.2.2).\n   o  The former Datum\
    \ field has been split into three fields: Ver, Res,\n      and Datum.  These fields\
    \ are used in both the DHCPv4 GeoLoc Option\n      and the DHCPv6 GeoLoc Option.\n\
    \   o  Section 2.2.3 has been added, describing option support\n      requirements\
    \ on DHCP clients and servers.\n   o  Section 2.3 has been added, describing the\
    \ Latitude and Longitude\n      fields.\n   o  Section 2.3.1 has been added, covering\
    \ latitude and longitude\n      resolution.\n   o  Section 2.3.2 has been added,\
    \ covering latitude and longitude\n      uncertainty.\n   o  Section 2.4 has been\
    \ added, covering values of the Altitude field\n      (Sections 2.4.1, 2.4.2,\
    \ and 2.4.3), altitude resolution\n      (Section 2.4.4), and altitude uncertainty\
    \ (Section 2.4.5).\n   o  Section 2.5 has been added, covering the Datum field.\n\
    \   o  Section 3 (Security Considerations) has added a recommendation on\n   \
    \   link-layer confidentiality.\n   o  Section 4 (IANA Considerations) has consolidated\
    \ material relating\n      to parameter allocation for both the DHCPv4 and DHCPv6\
    \ option\n      parameters, and has been rewritten to conform to the practices\n\
    \      recommended in RFC 5226.\n   o  The material formerly in Appendix A has\
    \ been updated and shortened\n      and has been moved to Appendix B.\n   o  An\
    \ Appendix A on GML mapping has been added.\n   o  Appendix C has been added,\
    \ providing an example of uncertainty\n      encoding.\n   o  Appendix D has been\
    \ added, detailing the changes from RFC 3825.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   James M. Polk\n   Cisco Systems\n   2200 East President\
    \ George Bush Turnpike\n   Richardson, TX  75082\n   USA\n   EMail: jmpolk@cisco.com\n\
    \   Marc Linsner\n   Cisco Systems\n   Marco Island, FL  34145\n   USA\n   EMail:\
    \ marc.linsner@cisco.com\n   Martin Thomson\n   Andrew Corporation\n   PO Box\
    \ U40\n   Wollongong University Campus, NSW  2500\n   AU\n   EMail: martin.thomson@andrew.com\n\
    \   Bernard Aboba (editor)\n   Microsoft Corporation\n   One Microsoft Way\n \
    \  Redmond, WA  98052\n   USA\n   EMail: bernard_aboba@hotmail.com\n"
