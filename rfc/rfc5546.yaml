- title: __initial_text__
  contents:
  - '    iCalendar Transport-Independent Interoperability Protocol (iTIP)

    '
- title: Abstract
  contents:
  - "Abstract\n   This document specifies a protocol that uses the iCalendar object\n\
    \   specification to provide scheduling interoperability between\n   different\
    \ calendaring systems.  This is done without reference to a\n   specific transport\
    \ protocol so as to allow multiple methods of\n   communication between systems.\
    \  Subsequent documents will define\n   profiles of this protocol that use specific,\
    \ interoperable methods of\n   communication between systems.\n   The iCalendar\
    \ Transport-Independent Interoperability Protocol (iTIP)\n   complements the iCalendar\
    \ object specification by adding semantics\n   for group scheduling methods commonly\
    \ available in current\n   calendaring systems.  These scheduling methods permit\
    \ two or more\n   calendaring systems to perform transactions such as publishing,\n\
    \   scheduling, rescheduling, responding to scheduling requests,\n   negotiating\
    \ changes, or canceling.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the BSD License.\n   This document may\
    \ contain material from IETF Documents or IETF\n   Contributions published or\
    \ made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction and Overview .......................................5\n\
    \      1.1. Formatting Conventions .....................................5\n  \
    \    1.2. Related Documents ..........................................6\n    \
    \  1.3. Roles ......................................................6\n      1.4.\
    \ Methods ....................................................7\n   2. Interoperability\
    \ Models .........................................9\n      2.1. Application Protocol\
    \ ......................................10\n           2.1.1. Scheduling State\
    \ ...................................10\n           2.1.2. Delegation .........................................10\n\
    \           2.1.3. Acting on Behalf of Other Calendar Users ...........11\n  \
    \         2.1.4. Component Revisions ................................11\n    \
    \       2.1.5. Message Sequencing .................................12\n   3. Application\
    \ Protocol Elements ..................................13\n      3.1. Common Component\
    \ Restriction Tables .......................15\n           3.1.1. VCALENDAR ..........................................15\n\
    \           3.1.2. VTIMEZONE ..........................................15\n  \
    \         3.1.3. VALARM .............................................17\n    \
    \  3.2. Methods for VEVENT Calendar Components ....................17\n      \
    \     3.2.1. PUBLISH ............................................18\n        \
    \   3.2.2. REQUEST ............................................20\n          \
    \ 3.2.3. REPLY ..............................................25\n           3.2.4.\
    \ ADD ................................................27\n           3.2.5. CANCEL\
    \ .............................................29\n           3.2.6. REFRESH ............................................31\n\
    \           3.2.7. COUNTER ............................................33\n  \
    \         3.2.8. DECLINECOUNTER .....................................35\n    \
    \  3.3. Methods for VFREEBUSY Components ..........................37\n      \
    \     3.3.1. PUBLISH ............................................37\n        \
    \   3.3.2. REQUEST ............................................40\n          \
    \ 3.3.3. REPLY ..............................................42\n      3.4. Methods\
    \ for VTODO Components ..............................44\n           3.4.1. PUBLISH\
    \ ............................................44\n           3.4.2. REQUEST ............................................46\n\
    \           3.4.3. REPLY ..............................................51\n  \
    \         3.4.4. ADD ................................................53\n    \
    \       3.4.5. CANCEL .............................................55\n      \
    \     3.4.6. REFRESH ............................................57\n        \
    \   3.4.7. COUNTER ............................................59\n          \
    \ 3.4.8. DECLINECOUNTER .....................................61\n      3.5. Methods\
    \ for VJOURNAL Components ...........................62\n           3.5.1. PUBLISH\
    \ ............................................63\n           3.5.2. ADD ................................................64\n\
    \           3.5.3. CANCEL .............................................66\n  \
    \    3.6. Status Replies ............................................68\n    \
    \  3.7. Implementation Considerations .............................77\n      \
    \     3.7.1. Working With Recurrence Instances ..................77\n        \
    \   3.7.2. Attendee Property Considerations ...................78\n          \
    \ 3.7.3. Extension Tokens ...................................79\n   4. Examples\
    \ .......................................................79\n      4.1. Published\
    \ Event Examples ..................................79\n           4.1.1. A Minimal\
    \ Published Event ..........................80\n           4.1.2. Changing a Published\
    \ Event .........................80\n           4.1.3. Canceling a Published Event\
    \ ........................81\n           4.1.4. A Rich Published Event .............................81\n\
    \           4.1.5. Anniversaries or Events Attached to Entire Days ....83\n  \
    \    4.2. Group Event Examples ......................................83\n    \
    \       4.2.1. A Group Event Request ..............................84\n      \
    \     4.2.2. Reply to a Group Event Request .....................85\n        \
    \   4.2.3. Update an Event ....................................85\n          \
    \ 4.2.4. Countering an Event Proposal .......................86\n           4.2.5.\
    \ Delegating an Event ................................88\n           4.2.6. Delegate\
    \ Accepts the Meeting .......................90\n           4.2.7. Delegate Declines\
    \ the Meeting ......................91\n           4.2.8. Forwarding an Event\
    \ Request ........................92\n           4.2.9. Cancel a Group Event ...............................92\n\
    \           4.2.10. Removing Attendees ................................93\n  \
    \         4.2.11. Replacing the Organizer ...........................95\n    \
    \  4.3. Busy Time Examples ........................................96\n      \
    \     4.3.1. Publish Busy Time ..................................96\n        \
    \   4.3.2. Request Busy Time ..................................96\n          \
    \ 4.3.3. Reply to a Busy Time Request .......................97\n      4.4. Recurring\
    \ Event and Time Zone Examples ....................98\n           4.4.1. A Recurring\
    \ Event Spanning Time Zones ..............98\n           4.4.2. Modify a Recurring\
    \ Instance ........................99\n           4.4.3. Cancel an Instance ................................101\n\
    \           4.4.4. Cancel a Recurring Event ..........................101\n  \
    \         4.4.5. Change All Future Instances .......................102\n    \
    \       4.4.6. Add a New Instance to a Recurring Event ...........102\n      \
    \     4.4.7. Add a New Series of Instances to a\n                  Recurring Event\
    \ ...................................103\n           4.4.8. Refreshing a Recurring\
    \ Event ......................104\n           4.4.9. Counter an Instance of a\
    \ Recurring Event ..........106\n           4.4.10. Error Reply to a Request .........................107\n\
    \      4.5. Group To-Do Examples .....................................108\n  \
    \         4.5.1. A VTODO Request ...................................109\n    \
    \       4.5.2. A VTODO Reply .....................................110\n      \
    \     4.5.3. A VTODO Request for Updated Status ................110\n        \
    \   4.5.4. A Reply: Percent-Complete .........................111\n          \
    \ 4.5.5. A Reply: Completed ................................111\n           4.5.6.\
    \ An Updated VTODO Request ..........................112\n           4.5.7. Recurring\
    \ VTODOs ..................................112\n      4.6. Journal Examples .........................................113\n\
    \      4.7. Other Examples ...........................................114\n  \
    \         4.7.1. Event Refresh .....................................114\n    \
    \       4.7.2. Bad RECURRENCE-ID .................................114\n   5. Application\
    \ Protocol Fallbacks ................................116\n      5.1. Partial Implementation\
    \ ...................................116\n           5.1.1. Event-Related Fallbacks\
    \ ...........................117\n           5.1.2. Free/Busy-Related Fallbacks\
    \ .......................119\n           5.1.3. To-Do-Related Fallbacks ...........................120\n\
    \           5.1.4. Journal-Related Fallbacks .........................122\n  \
    \    5.2. Latency Issues ...........................................123\n    \
    \       5.2.1. Cancellation of an Unknown Calendar Component .....123\n      \
    \     5.2.2. Unexpected Reply from an Unknown Delegate .........124\n      5.3.\
    \ Sequence Number ..........................................124\n   6. Security\
    \ Considerations .......................................124\n      6.1. Security\
    \ Threats .........................................124\n           6.1.1. Spoofing\
    \ the Organizer ............................124\n           6.1.2. Spoofing the\
    \ Attendee .............................124\n           6.1.3. Unauthorized Replacement\
    \ of the Organizer .........125\n           6.1.4. Eavesdropping and Data Integrity\
    \ ..................125\n           6.1.5. Flooding a Calendar ...............................125\n\
    \           6.1.6. Unauthorized REFRESH Requests .....................125\n  \
    \    6.2. Recommendations ..........................................125\n    \
    \       6.2.1. Securing iTIP transactions ........................125\n      \
    \     6.2.2. Implementation Controls ...........................126\n        \
    \   6.2.3. Access Controls and Filtering .....................126\n      6.3.\
    \ Privacy Issues ...........................................126\n   7. IANA Considerations\
    \ ...........................................127\n      7.1. Registration Template\
    \ for REQUEST-STATUS Values ..........127\n      7.2. Additions to iCalendar METHOD\
    \ Registry ...................127\n      7.3. REQUEST-STATUS Value Registry ............................129\n\
    \   8. Acknowledgments ...............................................130\n  \
    \ 9. References ....................................................131\n    \
    \  9.1. Normative References .....................................131\n      9.2.\
    \ Informative References ...................................131\n   Appendix A.\
    \  Differences from RFC 2446 ...........................132\n     A.1.  Changed\
    \ Restrictions .....................................132\n     A.2.  Deprecated\
    \ Features ......................................133\n"
- title: 1.  Introduction and Overview
  contents:
  - "1.  Introduction and Overview\n   This document specifies how calendaring systems\
    \ use iCalendar\n   [RFC5545] objects to interoperate with other calendaring systems.\
    \  In\n   particular, it specifies how to schedule events, to-dos, or daily\n\
    \   journal entries.  It further specifies how to search for available\n   busy\
    \ time information.  It does so in a general way, without\n   specifying how communication\
    \ between different systems actually takes\n   place.  Subsequent documents will\
    \ specify transport bindings between\n   systems that use this protocol.\n   This\
    \ protocol is based on messages sent from an originator to one or\n   more recipients.\
    \  For certain types of messages, a recipient may\n   reply in order to update\
    \ their status and may also return\n   transaction/request status information.\
    \  The protocol supports the\n   ability for the message originator to modify\
    \ or cancel the original\n   message.  The protocol also supports the ability\
    \ for recipients to\n   suggest changes to the originator of a message.  The elements\
    \ of the\n   protocol also define the user roles for its transactions.\n   This\
    \ specification obsoletes RFC 2446 - a list of important changes\n   is provided\
    \ in Appendix A.\n"
- title: 1.1.  Formatting Conventions
  contents:
  - "1.1.  Formatting Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n   Calendaring and scheduling roles are referred to in quoted-strings\
    \ of\n   text with the first character of each word in upper case.  For\n   example,\
    \ \"Organizer\" refers to a role of a \"Calendar User\" (CU)\n   within the scheduling\
    \ protocol.\n   Calendar components defined by [RFC5545] are referred to with\n\
    \   capitalized, quoted-strings of text.  All calendar components start\n   with\
    \ the letter \"V\".  For example, \"VEVENT\" refers to the event\n   calendar\
    \ component, \"VTODO\" refers to the to-do calendar component,\n   and \"VJOURNAL\"\
    \ refers to the daily journal calendar component.\n   Scheduling methods are referred\
    \ to with capitalized, quoted-strings\n   of text.  For example, \"REQUEST\" refers\
    \ to the method for requesting\n   a scheduling calendar component be created\
    \ or modified; \"REPLY\"\n   refers to the method a recipient of a request uses\
    \ to update their\n   status with the \"Organizer\" of the calendar component.\n\
    \   Properties defined by [RFC5545] are referred to with capitalized,\n   quoted-strings\
    \ of text, followed by the word \"property\".  For\n   example, \"ATTENDEE\" property\
    \ refers to the iCalendar property used to\n   convey the calendar address of\
    \ a \"Calendar User\".\n   Property parameters defined by this specification are\
    \ referred to\n   with capitalized, quoted-strings of text, followed by the word\n\
    \   \"parameter\".  For example, \"VALUE\" parameter refers to the iCalendar\n\
    \   property parameter used to override the default data type for a\n   property\
    \ value.\n   Enumerated values defined by this specification are referred to with\n\
    \   capitalized text, either alone or followed by the word \"value\".\n   In tables,\
    \ the quoted-string text is specified without quotes in\n   order to minimize\
    \ the table length.\n"
- title: 1.2.  Related Documents
  contents:
  - "1.2.  Related Documents\n   Implementers will need to be familiar with several\
    \ other\n   specifications that, along with this one, describe the Internet\n\
    \   calendaring and scheduling standards.  The related documents are:\n      [RFC5545]\
    \ - specifies the objects, data types, properties, and\n      property parameters\
    \ used in the protocols, along with the methods\n      for representing and encoding\
    \ them.\n      [iMIP] - specifies an Internet email binding for iTIP.\n   This\
    \ specification does not attempt to repeat the concepts or\n   definitions from\
    \ these other specifications.  Where possible,\n   explicit references are made\
    \ to the other specifications.\n"
- title: 1.3.  Roles
  contents:
  - "1.3.  Roles\n   Exchanges of iCalendar objects for the purposes of group calendaring\n\
    \   and scheduling occur between \"Calendar Users\" (CUs).  CUs take on\n   several\
    \ roles in iTIP:\n   +-----------+-------------------------------------------------------+\n\
    \   | Role      | Description                                           |\n  \
    \ +-----------+-------------------------------------------------------+\n   |\
    \ Organizer | The CU who initiates an exchange takes on the role of |\n   |  \
    \         | Organizer.  For example, the CU who proposes a group  |\n   |    \
    \       | meeting is the Organizer.                             |\n   |      \
    \     |                                                       |\n   | Attendee\
    \  | CUs who are included in the scheduling message as     |\n   |           |\
    \ possible recipients of that scheduling message.  For  |\n   |           | example,\
    \ the CUs asked to participate in a group      |\n   |           | meeting by\
    \ the Organizer take on the role of          |\n   |           | Attendee.   \
    \                                          |\n   |           |               \
    \                                        |\n   | Other CU  | A CU that is not\
    \ explicitly included in a scheduling  |\n   |           | message, i.e., not\
    \ the Organizer or an Attendee.      |\n   +-----------+-------------------------------------------------------+\n\
    \   Note that \"ROLE\" is also a descriptive parameter to the iCalendar\n   \"\
    ATTENDEE\" property.  Its use is to convey descriptive context about\n   an \"\
    Attendee\" -- such as \"chair\", \"required participant\", or \"non-\n   required\
    \ participant\" -- and has nothing to do with the calendaring\n   workflow.\n"
- title: 1.4.  Methods
  contents:
  - "1.4.  Methods\n   The iTIP methods are listed below and their usage and semantics\
    \ are\n   defined in Section 3 of this document.\n   +----------------+--------------------------------------------------+\n\
    \   | Method         | Description                                      |\n  \
    \ +----------------+--------------------------------------------------+\n   |\
    \ PUBLISH        | Used to publish an iCalendar object to one or    |\n   |  \
    \              | more \"Calendar Users\".  There is no              |\n   |  \
    \              | interactivity between the publisher and any      |\n   |    \
    \            | other \"Calendar User\".  An example might include |\n   |    \
    \            | a baseball team publishing its schedule to the   |\n   |      \
    \          | public.                                          |\n   |        \
    \        |                                                  |\n   | REQUEST  \
    \      | Used to schedule an iCalendar object with other  |\n   |            \
    \    | \"Calendar Users\".  Requests are interactive in   |\n   |            \
    \    | that they require the receiver to respond using  |\n   |              \
    \  | the reply methods.  Meeting requests, busy-time  |\n   |                |\
    \ requests, and the assignment of tasks to other   |\n   |                | \"\
    Calendar Users\" are all examples.  Requests are |\n   |                | also\
    \ used by the Organizer to update the status  |\n   |                | of an iCalendar\
    \ object.                          |\n   |                |                  \
    \                                |\n   | REPLY          | A reply is used in response\
    \ to a request to      |\n   |                | convey Attendee status to the\
    \ Organizer.         |\n   |                | Replies are commonly used to respond\
    \ to meeting  |\n   |                | and task requests.                    \
    \           |\n   |                |                                         \
    \         |\n   | ADD            | Add one or more new instances to an existing\
    \     |\n   |                | recurring iCalendar object.                   \
    \   |\n   |                |                                                 \
    \ |\n   | CANCEL         | Cancel one or more instances of an existing      |\n\
    \   |                | iCalendar object.                                |\n  \
    \ |                |                                                  |\n   |\
    \ REFRESH        | Used by an Attendee to request the latest        |\n   |  \
    \              | version of an iCalendar object.                  |\n   |    \
    \            |                                                  |\n   | COUNTER\
    \        | Used by an Attendee to negotiate a change in an  |\n   |          \
    \      | iCalendar object.  Examples include the request  |\n   |            \
    \    | to change a proposed event time or change the    |\n   |              \
    \  | due date for a task.                             |\n   |                |\
    \                                                  |\n   | DECLINECOUNTER | Used\
    \ by the Organizer to decline the proposed    |\n   |                | counter\
    \ proposal.                                |\n   +----------------+--------------------------------------------------+\n\
    \   Group scheduling in iTIP is accomplished using the set of \"request\"\n  \
    \ and \"response\" methods described above.  The following table shows\n   the\
    \ methods broken down by who can send them.\n   +------------+------------------------------------------------------+\n\
    \   | Originator | Methods                                              |\n  \
    \ +------------+------------------------------------------------------+\n   |\
    \ Organizer  | PUBLISH, REQUEST, ADD, CANCEL, DECLINECOUNTER        |\n   |  \
    \          |                                                      |\n   | Attendee\
    \   | REPLY, REFRESH, COUNTER, REQUEST (only when          |\n   |           \
    \ | delegating)                                          |\n   +------------+------------------------------------------------------+\n\
    \   Note that for some calendar component types, the allowable methods\n   are\
    \ a subset of the above set.  In addition, apart from \"VTIMEZONE\"\n   iCalendar\
    \ components, only one component type is allowed in a single\n   iTIP message.\n"
- title: 2.  Interoperability Models
  contents:
  - "2.  Interoperability Models\n   There are two distinct protocols relevant to\
    \ interoperability: an\n   \"application protocol\" and a \"transport protocol\"\
    .  The application\n   protocol defines the content of the iCalendar objects sent\
    \ between\n   sender and receiver to accomplish the scheduling transactions listed\n\
    \   above.  The transport protocol defines how the iCalendar objects are\n   sent\
    \ between the sender and receiver.  This document focuses on the\n   application\
    \ protocol.  Binding documents such as [iMIP] focus on the\n   transport protocol.\n\
    \   The connection between sender and receiver in the diagram below\n   refers\
    \ to the application protocol.  The iCalendar objects passed\n   from the sender\
    \ to the receiver are presented in Section 3,\n   \"Application Protocol Elements\"\
    .\n           +----------+                +----------+\n           |         \
    \ |      iTIP      |          |\n           |  Sender  |<-------------->| Receiver\
    \ |\n           |          |                |          |\n           +----------+\
    \                +----------+\n   There are several variations of this diagram\
    \ in which the sender and\n   receiver take on various roles of a \"Calendar User\
    \ Agent\" (CUA) or a\n   \"Calendar Service\" (CS).\n   The architecture of iTIP\
    \ is depicted in the diagram below.  An\n   application written to this specification\
    \ may work with bindings for\n   the store-and-forward transport, the real-time\
    \ transport, or both.\n   Also note that iTIP could be bound to other transports.\n\
    \      +--------------------------------------------------------+\n      |   \
    \                  iTIP Protocol                      |\n      +--------------------------------------------------------+\n\
    \      |                       Transport                        |\n      +  -\
    \  -  -  -  -  +  -  -  -  -  -  -  +  -  -  -  -  -  +\n      | Real-Time   \
    \    | Store-and-Forward  | Others          |\n      +-----------------+--------------------+-----------------+\n"
- title: 2.1.  Application Protocol
  contents:
  - "2.1.  Application Protocol\n   In the iTIP model, an iCalendar object is created\
    \ and managed by an\n   \"Organizer\".  The \"Organizer\" interacts with other\
    \ CUs by sending one\n   or more of the iTIP messages listed above.  \"Attendees\"\
    \ use the\n   \"REPLY\" method to communicate their status.  \"Attendees\" do\
    \ not make\n   direct changes to the master iCalendar object.  They can, however,\n\
    \   use the \"COUNTER\" method to suggest changes to the \"Organizer\".  In\n\
    \   any case, the \"Organizer\" has complete control over the master\n   iCalendar\
    \ object.\n"
- title: 2.1.1.  Scheduling State
  contents:
  - "2.1.1.  Scheduling State\n   There are two distinct states relevant to iCalendar\
    \ objects used in\n   scheduling: the overall state of the iCalendar object and\
    \ the state\n   associated with an \"Attendee\" in that iCalendar object.\n  \
    \ The state of an iCalendar object is defined by the \"STATUS\" property\n   and\
    \ is controlled by the \"Organizer.\"  There is no default value for\n   the \"\
    STATUS\" property.  The \"Organizer\" sets the \"STATUS\" property to\n   the\
    \ appropriate value for each iCalendar object.\n   The state of a particular \"\
    Attendee\" relative to an iCalendar object\n   used for scheduling is defined\
    \ by the \"PARTSTAT\" parameter in the\n   \"ATTENDEE\" property for each \"Attendee\"\
    .  When an \"Organizer\" issues\n   the initial iCalendar object, \"Attendee\"\
    \ status is typically unknown.\n   The \"Organizer\" specifies this by setting\
    \ the \"PARTSTAT\" parameter to\n   \"NEEDS-ACTION\".  Each \"Attendee\" modifies\
    \ their \"ATTENDEE\" property\n   \"PARTSTAT\" parameter to an appropriate value\
    \ as part of a \"REPLY\"\n   message sent back to the \"Organizer\".\n"
- title: 2.1.2.  Delegation
  contents:
  - "2.1.2.  Delegation\n   Delegation is defined as the process by which an \"Attendee\"\
    \ grants\n   another CU (or several CUs) the right to attend on their behalf.\
    \  The\n   \"Organizer\" is made aware of this change because the delegating\n\
    \   \"Attendee\" informs the \"Organizer\".  These steps are detailed in the\n\
    \   \"REQUEST\" method sections for the appropriate components.\n"
- title: 2.1.3.  Acting on Behalf of Other Calendar Users
  contents:
  - "2.1.3.  Acting on Behalf of Other Calendar Users\n   In many organizations, one\
    \ user will act on behalf of another to\n   organize and/or respond to meeting\
    \ requests. iTIP provides two\n   mechanisms that support these activities.\n\
    \   First, the \"Organizer\" is treated as a special entity, separate from\n \
    \  \"Attendees\".  All responses from \"Attendees\" flow to the \"Organizer\"\
    ,\n   making it easy to separate a \"Calendar User\" organizing a meeting\n  \
    \ from \"Calendar Users\" attending the meeting.  Additionally, iCalendar\n  \
    \ provides descriptive roles for each \"Attendee\".  For instance, a role\n  \
    \ of \"chair\" may be ascribed to one or more \"Attendees\".  The \"chair\"\n\
    \   and the \"Organizer\" may or may not be the same \"Calendar User\".  This\n\
    \   maps well to scenarios where an assistant may manage meeting\n   logistics\
    \ for another individual who chairs a meeting.\n   Second, a \"SENT-BY\" parameter\
    \ may be specified in either the\n   \"Organizer\" or \"Attendee\" properties.\
    \  When specified, the \"SENT-BY\"\n   parameter indicates that the responding\
    \ CU acted on behalf of the\n   specified \"Attendee\" or \"Organizer\".\n"
- title: 2.1.4.  Component Revisions
  contents:
  - "2.1.4.  Component Revisions\n   The \"SEQUENCE\" property is used by the \"Organizer\"\
    \ to indicate\n   revisions to the calendar component.  When the \"Organizer\"\
    \ makes\n   changes to one of the following properties, the sequence number MUST\n\
    \   be incremented:\n   o  \"DTSTART\"\n   o  \"DTEND\"\n   o  \"DURATION\"\n\
    \   o  \"DUE\"\n   o  \"RRULE\"\n   o  \"RDATE\"\n   o  \"EXDATE\"\n   o  \"STATUS\"\
    \n   In addition, changes made by the \"Organizer\" to other properties MAY\n\
    \   also require the sequence number to be incremented.  The \"Organizer\"\n \
    \  CUA MUST increment the sequence number whenever it makes changes to\n   properties\
    \ in the calendar component that the \"Organizer\" deems will\n   jeopardize the\
    \ validity of the participation status of the\n   \"Attendees\".  For example,\
    \ changing the location of a meeting from\n   one location to another distant\
    \ location could effectively impact the\n   participation status of the \"Attendees\"\
    .\n   Depending on the \"METHOD\", the \"SEQUENCE\" property MUST follow these\n\
    \   rules in the context of iTIP:\n   o  For the \"PUBLISH\" and \"REQUEST\" methods,\
    \ the \"SEQUENCE\" property\n      value is incremented according to the rules\
    \ stated above.\n   o  The \"SEQUENCE\" property value MUST be incremented each\
    \ time the\n      \"Organizer\" uses the \"ADD\" or \"CANCEL\" methods.\n   o\
    \  The \"SEQUENCE\" property value MUST NOT be incremented when using\n      \"\
    REPLY\", \"REFRESH\", \"COUNTER\", \"DECLINECOUNTER\", or when sending a\n   \
    \   delegation \"REQUEST\".\n   In some circumstances, the \"Organizer\" may not\
    \ have received\n   responses to the final revision sent out.  In this situation,\
    \ the\n   \"Organizer\" may wish to send an update \"REQUEST\" and set \"RSVP=TRUE\"\
    \n   for all \"Attendees\" so that current responses can be collected.\n   The\
    \ value of the \"SEQUENCE\" property contained in a response from an\n   \"Attendee\"\
    \ may not always match the \"Organizer's\" revision.\n   Implementations may choose\
    \ to have the CUA indicate to the CU that\n   the response is to an iCalendar\
    \ object that has been revised, and\n   allow the CU to decide whether or not\
    \ to accept the response.\n   Whilst a change in sequence number is indicative\
    \ of a significant\n   change to a previously scheduled item, \"Attendee\" CUAs\
    \ SHOULD NOT\n   rely solely on a change in sequence number as a means of detecting\
    \ a\n   significant change.  Instead, CUAs SHOULD compare the old and new\n  \
    \ versions of the calendar components, determine the exact nature of\n   the changes,\
    \ and make decisions -- possibly based on \"Calendar User\"\n   preferences --\
    \ as to whether the user needs to be explicitly informed\n   of the change.\n"
- title: 2.1.5.  Message Sequencing
  contents:
  - "2.1.5.  Message Sequencing\n   CUAs that handle the iTIP application protocol\
    \ must often correlate a\n   component in a calendar store with a component received\
    \ in the iTIP\n   message.  For example, an event may be updated with a later\
    \ revision\n   of the same event.  To accomplish this, a CUA must correlate the\n\
    \   version of the event already in its calendar store with the version\n   sent\
    \ in the iTIP message.  In addition to this correlation, there are\n   several\
    \ factors that can cause iTIP messages to arrive in an\n   unexpected order. \
    \ That is, an \"Organizer\" could receive a reply to\n   an earlier revision of\
    \ a component after receiving a reply to a later\n   revision.\n   To maximize\
    \ interoperability and to handle messages that arrive in an\n   unexpected order,\
    \ use the following rules:\n   1.  The primary key for referencing a particular\
    \ iCalendar component\n       is the \"UID\" property value.  To reference an\
    \ instance of a\n       recurring component, the primary key is composed of the\
    \ \"UID\" and\n       the \"RECURRENCE-ID\" properties.\n   2.  The secondary\
    \ key for referencing a component is the \"SEQUENCE\"\n       property value.\
    \  For components where the \"UID\" and\n       \"RECURRENCE-ID\" property values\
    \ are the same, the component with\n       the highest numeric value for the \"\
    SEQUENCE\" property obsoletes\n       all other revisions of the component with\
    \ lower values.\n   3.  \"Attendees\" send \"REPLY\" messages to the \"Organizer\"\
    .  For\n       replies where the \"UID\" and \"RECURRENCE-ID\" property values\
    \ are\n       the same, the value of the \"SEQUENCE\" property indicates the\n\
    \       revision of the component to which the \"Attendee\" is replying.\n   \
    \    The reply with the highest numeric value for the \"SEQUENCE\"\n       property\
    \ obsoletes all other replies with lower values.\n   4.  In situations where the\
    \ \"UID\", \"RECURRENCE-ID\", and \"SEQUENCE\"\n       property values match,\
    \ the \"DTSTAMP\" property is used as the tie-\n       breaker.  The component\
    \ with the latest \"DTSTAMP\" overrides all\n       others.  Similarly, for \"\
    Attendee\" responses where the \"UID\",\n       \"RECURRENCE-ID\", and \"SEQUENCE\"\
    \ property values match, the\n       response with the latest \"DTSTAMP\" overrides\
    \ all others.\n   Hence, CUAs will need to persist the following component properties\n\
    \   in order to correctly process iTIP messages: \"UID\", \"RECURRENCE-ID\",\n\
    \   \"SEQUENCE\", and \"DTSTAMP\".  Furthermore, for each \"ATTENDEE\" property\n\
    \   of a component, \"Organizer\" CUAs will need to persist the \"SEQUENCE\"\n\
    \   and \"DTSTAMP\" property values associated with the \"Attendee's\" last\n\
    \   response, so that any earlier responses from an \"Attendee\" that are\n  \
    \ received out of order (e.g., due to a delay in the transport) can be\n   correctly\
    \ discarded.\n"
- title: 3.  Application Protocol Elements
  contents:
  - "3.  Application Protocol Elements\n   iTIP messages are \"text/calendar\" MIME\
    \ entities that contain\n   calendaring and scheduling information.  The particular\
    \ type of\n   iCalendar message is referred to as the \"method type\".  Each method\n\
    \   type is identified by a \"METHOD\" property specified as part of the\n   \"\
    text/calendar\" content type.  The table below shows various\n   combinations\
    \ of calendar components and the method types that this\n   specification supports.\n\
    \        +----------------+--------+-------+----------+-----------+\n        |\
    \                | VEVENT | VTODO | VJOURNAL | VFREEBUSY |\n        +----------------+--------+-------+----------+-----------+\n\
    \        | PUBLISH        | Yes    | Yes   | Yes      | Yes       |\n        |\
    \ REQUEST        | Yes    | Yes   | No       | Yes       |\n        | REFRESH\
    \        | Yes    | Yes   | No       | No        |\n        | CANCEL         |\
    \ Yes    | Yes   | Yes      | No        |\n        | ADD            | Yes    |\
    \ Yes   | Yes      | No        |\n        | REPLY          | Yes    | Yes   |\
    \ No       | Yes       |\n        | COUNTER        | Yes    | Yes   | No     \
    \  | No        |\n        | DECLINECOUNTER | Yes    | Yes   | No       | No  \
    \      |\n        +----------------+--------+-------+----------+-----------+\n\
    \   Each method type is defined in terms of its associated components and\n  \
    \ properties.  Some components and properties are required, some are\n   optional,\
    \ and others are excluded.  The restrictions are expressed in\n   this document\
    \ using a simple \"restriction table\".  The first column\n   indicates the name\
    \ of a component or property.  Properties of the\n   iCalendar object are not\
    \ indented.  Properties of a component are\n   indented.  The second column (the\
    \ \"Presence\" column) indicates\n   whether or not a component or property should\
    \ be present and, if\n   present, how many times it can occur.  The third column\
    \ contains\n   comments for further clarification.\n   The presence column uses\
    \ the following values to assert whether a\n   property is required or optional,\
    \ and the number of times it may\n   appear in the iCalendar object.\n   +----------------+--------------------------------------------------+\n\
    \   | Presence Value | Description                                      |\n  \
    \ +----------------+--------------------------------------------------+\n   |\
    \ 1              | One instance MUST be present.                    |\n   | 1+\
    \             | At least one instance MUST be present.           |\n   | 0   \
    \           | Instances of this property MUST NOT be present.  |\n   | 0+    \
    \         | Multiple instances MAY be present.               |\n   | 0 or 1  \
    \       | Up to 1 instance of this property MAY be         |\n   |           \
    \     | present.                                         |\n   +----------------+--------------------------------------------------+\n\
    \   The tables also call out \"IANA-PROPERTY\", \"X-PROPERTY\", \"IANA-\n   COMPONENT\"\
    , and \"X-COMPONENT\" to show where registered and\n   experimental property and\
    \ component extensions can appear.  The\n   tables do not lay out the restrictions\
    \ of property parameters.  Those\n   restrictions are defined in [RFC5545].\n"
- title: 3.1.  Common Component Restriction Tables
  contents:
  - '3.1.  Common Component Restriction Tables

    '
- title: 3.1.1.  VCALENDAR
  contents:
  - "3.1.1.  VCALENDAR\n   The restriction table below applies to properties of the\
    \ iCalendar\n   object.  That is, the properties at the outermost scope.\n   \
    \       +-----------------------------------------------------+\n          | Constraints\
    \ for Properties in a VCALENDAR Component |\n          +-----------------------------------------------------+\n\
    \          +--------------------+----------+--------------------+\n          |\
    \ Component/Property | Presence | Comment            |\n          +--------------------+----------+--------------------+\n\
    \          | CALSCALE           | 0 or 1   |                    |\n          |\
    \ PRODID             | 1        |                    |\n          | VERSION  \
    \          | 1        | Value MUST be 2.0. |\n          | IANA-PROPERTY      |\
    \ 0+       |                    |\n          | X-PROPERTY         | 0+       |\
    \                    |\n          +--------------------+----------+--------------------+\n"
- title: 3.1.2.  VTIMEZONE
  contents:
  - "3.1.2.  VTIMEZONE\n   \"VTIMEZONE\" components may be referred to by other components\
    \ via a\n   \"TZID\" parameter on a \"DATETIME\" value type.  The property\n \
    \  restrictions in the table below apply to any \"VTIMEZONE\" component in\n \
    \  an iTIP message.\n                 +--------------------------------------+\n\
    \                 | Constraints for VTIMEZONE Components |\n                 +--------------------------------------+\n\
    \   +--------------------+----------+-----------------------------------+\n  \
    \ | Component/Property | Presence | Comment                           |\n   +--------------------+----------+-----------------------------------+\n\
    \   | VTIMEZONE          | 0+       | MUST be present if any date/time  |\n  \
    \ |                    |          | refers to timezone.               |\n   |\
    \   DAYLIGHT         | 0+       | MUST be one or more of either     |\n   |  \
    \                  |          | STANDARD or DAYLIGHT.             |\n   |    \
    \ COMMENT        | 0+       |                                   |\n   |     DTSTART\
    \        | 1        | MUST be local time format.        |\n   |     RDATE    \
    \      | 0+       |                                   |\n   |     RRULE      \
    \    | 0 or 1   |                                   |\n   |     TZNAME       \
    \  | 0+       |                                   |\n   |     TZOFFSETFROM   |\
    \ 1        |                                   |\n   |     TZOFFSETTO     | 1\
    \        |                                   |\n   |     IANA-PROPERTY  | 0+ \
    \      |                                   |\n   |     X-PROPERTY     | 0+   \
    \    |                                   |\n   |   LAST-MODIFIED    | 0 or 1 \
    \  |                                   |\n   |   STANDARD         | 0+       |\
    \ MUST be one or more of either     |\n   |                    |          | STANDARD\
    \ or DAYLIGHT.             |\n   |     COMMENT        | 0+       |           \
    \                        |\n   |     DTSTART        | 1        | MUST be local\
    \ time format.        |\n   |     RDATE          | 0+       | If present, RRULE\
    \ MUST NOT be     |\n   |                    |          | present.           \
    \               |\n   |     RRULE          | 0 or 1   | If present, RDATE MUST\
    \ NOT be     |\n   |                    |          | present.                \
    \          |\n   |     TZNAME         | 0+       |                           \
    \        |\n   |     TZOFFSETFROM   | 1        |                             \
    \      |\n   |     TZOFFSETTO     | 1        |                               \
    \    |\n   |     IANA-PROPERTY  | 0+       |                                 \
    \  |\n   |     X-PROPERTY     | 0+       |                                   |\n\
    \   |   TZID             | 1        |                                   |\n  \
    \ |   TZURL            | 0 or 1   |                                   |\n   |\
    \   IANA-PROPERTY    | 0+       |                                   |\n   |  \
    \ X-PROPERTY       | 0+       |                                   |\n   +--------------------+----------+-----------------------------------+\n"
- title: 3.1.3.  VALARM
  contents:
  - "3.1.3.  VALARM\n   The property restrictions in the table below apply to any\
    \ \"VALARM\"\n   component in an iTIP message.\n                   +-----------------------------------+\n\
    \                   | Constraints for VALARM Components |\n                  \
    \ +-----------------------------------+\n   +--------------------+----------+-----------------------------------+\n\
    \   | Component/Property | Presence | Comment                           |\n  \
    \ +--------------------+----------+-----------------------------------+\n   |\
    \ VALARM             | 0+       |                                   |\n   |  \
    \ ACTION           | 1        |                                   |\n   |   ATTACH\
    \           | 0+       |                                   |\n   |   ATTENDEE\
    \         | 0+       |                                   |\n   |   DESCRIPTION\
    \      | 0 or 1   |                                   |\n   |   DURATION     \
    \    | 0 or 1   | If present, REPEAT MUST be        |\n   |                  \
    \  |          | present.                          |\n   |   REPEAT           |\
    \ 0 or 1   | If present, DURATION MUST be      |\n   |                    |  \
    \        | present.                          |\n   |   SUMMARY          | 0 or\
    \ 1   |                                   |\n   |   TRIGGER          | 1     \
    \   |                                   |\n   |   IANA-PROPERTY    | 0+      \
    \ |                                   |\n   |   X-PROPERTY       | 0+       |\
    \                                   |\n   +--------------------+----------+-----------------------------------+\n"
- title: 3.2.  Methods for VEVENT Calendar Components
  contents:
  - "3.2.  Methods for VEVENT Calendar Components\n   This section defines the property\
    \ set restrictions for the method\n   types that are applicable to the \"VEVENT\"\
    \ calendar component.  Each\n   method is defined using a table that clarifies\
    \ the property\n   constraints that define the particular method.\n   The following\
    \ summarizes the methods that are defined for the\n   \"VEVENT\" calendar component.\n\
    \   +----------------+--------------------------------------------------+\n  \
    \ | Method         | Description                                      |\n   +----------------+--------------------------------------------------+\n\
    \   | PUBLISH        | Post notification of an event.  Used primarily   |\n  \
    \ |                | as a method of advertising the existence of an   |\n   |\
    \                | event.                                           |\n   |  \
    \              |                                                  |\n   | REQUEST\
    \        | Make a request for an event.  This is an         |\n   |          \
    \      | explicit invitation to one or more Attendees.    |\n   |            \
    \    | Event requests are also used to update or change |\n   |              \
    \  | an existing event.  Clients that cannot handle   |\n   |                |\
    \ REQUEST MAY degrade the event to view it as a    |\n   |                | PUBLISH.\
    \                                         |\n   |                |           \
    \                                       |\n   | REPLY          | Reply to an event\
    \ request.  Clients may set      |\n   |                | their status (PARTSTAT)\
    \ to ACCEPTED, DECLINED,   |\n   |                | TENTATIVE, or DELEGATED. \
    \                        |\n   |                |                            \
    \                      |\n   | ADD            | Add one or more instances to an\
    \ existing event.  |\n   |                |                                  \
    \                |\n   | CANCEL         | Cancel one or more instances of an existing\
    \      |\n   |                | event.                                       \
    \    |\n   |                |                                                \
    \  |\n   | REFRESH        | A request is sent to an Organizer by an Attendee |\n\
    \   |                | asking for the latest version of an event to be  |\n  \
    \ |                | resent to the requester.                         |\n   |\
    \                |                                                  |\n   | COUNTER\
    \        | Counter a REQUEST with an alternative proposal.  |\n   |          \
    \      | Sent by an Attendee to the Organizer.            |\n   |            \
    \    |                                                  |\n   | DECLINECOUNTER\
    \ | Decline a counter proposal.  Sent to an Attendee |\n   |                |\
    \ by the Organizer.                                |\n   +----------------+--------------------------------------------------+\n"
- title: 3.2.1.  PUBLISH
  contents:
  - "3.2.1.  PUBLISH\n   The \"PUBLISH\" method in a \"VEVENT\" calendar component\
    \ is an\n   unsolicited posting of an iCalendar object.  Any CU may add published\n\
    \   components to their calendar.  The \"Organizer\" MUST be present in a\n  \
    \ published iCalendar component.  \"Attendees\" MUST NOT be present.  Its\n  \
    \ expected usage is for encapsulating an arbitrary event as an\n   iCalendar object.\
    \  The \"Organizer\" may subsequently update (with\n   another \"PUBLISH\" method),\
    \ add instances to (with an \"ADD\" method),\n   or cancel (with a \"CANCEL\"\
    \ method) a previously published \"VEVENT\"\n   calendar component.\n   This method\
    \ type is an iCalendar object that conforms to the\n   following property constraints:\n\
    \             +----------------------------------------------+\n             |\
    \ Constraints for a METHOD:PUBLISH of a VEVENT |\n             +----------------------------------------------+\n\
    \   +--------------------+----------+-----------------------------------+\n  \
    \ | Component/Property | Presence | Comment                           |\n   +--------------------+----------+-----------------------------------+\n\
    \   | METHOD             | 1        | MUST equal PUBLISH.               |\n  \
    \ |                    |          |                                   |\n   |\
    \ VEVENT             | 1+       |                                   |\n   |  \
    \ DTSTAMP          | 1        |                                   |\n   |   DTSTART\
    \          | 1        |                                   |\n   |   ORGANIZER\
    \        | 1        |                                   |\n   |   SUMMARY    \
    \      | 1        | Can be null.                      |\n   |   UID          \
    \    | 1        |                                   |\n   |   RECURRENCE-ID  \
    \  | 0 or 1   | Only if referring to an instance  |\n   |                    |\
    \          | of a recurring calendar           |\n   |                    |  \
    \        | component.  Otherwise, it MUST    |\n   |                    |    \
    \      | NOT be present.                   |\n   |   SEQUENCE         | 0 or 1\
    \   | MUST be present if value is       |\n   |                    |         \
    \ | greater than 0; MAY be present if |\n   |                    |          |\
    \ 0.                                |\n   |   ATTACH           | 0+       |  \
    \                                 |\n   |   CATEGORIES       | 0+       |    \
    \                               |\n   |   CLASS            | 0 or 1   |      \
    \                             |\n   |   COMMENT          | 0+       |        \
    \                           |\n   |   CONTACT          | 0 or 1   |          \
    \                         |\n   |   CREATED          | 0 or 1   |            \
    \                       |\n   |   DESCRIPTION      | 0 or 1   | Can be null. \
    \                     |\n   |   DTEND            | 0 or 1   | If present, DURATION\
    \ MUST NOT be  |\n   |                    |          | present.              \
    \            |\n   |   DURATION         | 0 or 1   | If present, DTEND MUST NOT\
    \ be     |\n   |                    |          | present.                    \
    \      |\n   |   EXDATE           | 0+       |                               \
    \    |\n   |   GEO              | 0 or 1   |                                 \
    \  |\n   |   LAST-MODIFIED    | 0 or 1   |                                   |\n\
    \   |   LOCATION         | 0 or 1   |                                   |\n  \
    \ |   PRIORITY         | 0 or 1   |                                   |\n   |\
    \   RDATE            | 0+       |                                   |\n   |  \
    \ RELATED-TO       | 0+       |                                   |\n   |   RESOURCES\
    \        | 0+       |                                   |\n   |   RRULE      \
    \      | 0 or 1   |                                   |\n   |   STATUS       \
    \    | 0 or 1   | MAY be one of                     |\n   |                  \
    \  |          | TENTATIVE/CONFIRMED/CANCELLED.    |\n   |   TRANSP           |\
    \ 0 or 1   |                                   |\n   |   URL              | 0\
    \ or 1   |                                   |\n   |   IANA-PROPERTY    | 0+ \
    \      |                                   |\n   |   X-PROPERTY       | 0+   \
    \    |                                   |\n   |   ATTENDEE         | 0      \
    \  |                                   |\n   |   REQUEST-STATUS   | 0        |\
    \                                   |\n   |                    |          |  \
    \                                 |\n   |   VALARM           | 0+       |    \
    \                               |\n   |                    |          |      \
    \                             |\n   | VFREEBUSY          | 0        |        \
    \                           |\n   |                    |          |          \
    \                         |\n   | VJOURNAL           | 0        |            \
    \                       |\n   |                    |          |              \
    \                     |\n   | VTODO              | 0        |                \
    \                   |\n   |                    |          |                  \
    \                 |\n   | VTIMEZONE          | 0+       | MUST be present if any\
    \ date/time  |\n   |                    |          | refers to a timezone.   \
    \          |\n   |                    |          |                           \
    \        |\n   | IANA-COMPONENT     | 0+       |                             \
    \      |\n   | X-COMPONENT        | 0+       |                               \
    \    |\n   +--------------------+----------+-----------------------------------+\n"
- title: 3.2.2.  REQUEST
  contents:
  - "3.2.2.  REQUEST\n   The \"REQUEST\" method in a \"VEVENT\" component provides\
    \ the following\n   scheduling functions:\n   o  Invite \"Attendees\" to an event.\n\
    \   o  Reschedule an existing event.\n   o  Response to a \"REFRESH\" request.\n\
    \   o  Update the details of an existing event, without rescheduling it.\n   o\
    \  Update the status of \"Attendees\" of an existing event, without\n      rescheduling\
    \ it.\n   o  Reconfirm an existing event, without rescheduling it.\n   o  Forward\
    \ a \"VEVENT\" to another uninvited CU.\n   o  For an existing \"VEVENT\" calendar\
    \ component, delegate the role of\n      \"Attendee\" to another CU.\n   o  For\
    \ an existing \"VEVENT\" calendar component, change the role of\n      \"Organizer\"\
    \ to another CU.\n   The \"Organizer\" originates the \"REQUEST\".  The recipients\
    \ of the\n   \"REQUEST\" method are the CUs invited to the event, the \"Attendees\"\
    .\n   \"Attendees\" use the \"REPLY\" method to convey attendance status to the\n\
    \   \"Organizer\".\n   The \"UID\" and \"SEQUENCE\" properties are used to distinguish\
    \ the\n   various uses of the \"REQUEST\" method.  If the \"UID\" property value\
    \ in\n   the \"REQUEST\" is not found on the recipient's calendar, then the\n\
    \   \"REQUEST\" is for a new \"VEVENT\" calendar component.  If the \"UID\"\n\
    \   property value is found on the recipient's calendar, then the\n   \"REQUEST\"\
    \ is for a rescheduling, an update, or a reconfirmation of\n   the \"VEVENT\"\
    \ calendar component.\n   For the \"REQUEST\" method, multiple \"VEVENT\" components\
    \ in a single\n   iCalendar object are only permitted for components with the\
    \ same\n   \"UID\" property.  That is, a series of recurring events may have\n\
    \   instance-specific information.  In this case, multiple \"VEVENT\"\n   components\
    \ are needed to express the entire series.\n   This method type is an iCalendar\
    \ object that conforms to the\n   following property constraints:\n          \
    \   +----------------------------------------------+\n             | Constraints\
    \ for a METHOD:REQUEST of a VEVENT |\n             +----------------------------------------------+\n\
    \   +--------------------+----------+-----------------------------------+\n  \
    \ | Component/Property | Presence | Comment                           |\n   +--------------------+----------+-----------------------------------+\n\
    \   | METHOD             | 1        | MUST be REQUEST.                  |\n  \
    \ |                    |          |                                   |\n   |\
    \ VEVENT             | 1+       | All components MUST have the same |\n   |  \
    \                  |          | UID.                              |\n   |   ATTENDEE\
    \         | 1+       |                                   |\n   |   DTSTAMP   \
    \       | 1        |                                   |\n   |   DTSTART     \
    \     | 1        |                                   |\n   |   ORGANIZER     \
    \   | 1        |                                   |\n   |   SEQUENCE        \
    \ | 0 or 1   | MUST be present if value is       |\n   |                    |\
    \          | greater than 0; MAY be present if |\n   |                    |  \
    \        | 0.                                |\n   |   SUMMARY          | 1  \
    \      | Can be null.                      |\n   |   UID              | 1    \
    \    |                                   |\n   |   ATTACH           | 0+     \
    \  |                                   |\n   |   CATEGORIES       | 0+       |\
    \                                   |\n   |   CLASS            | 0 or 1   |  \
    \                                 |\n   |   COMMENT          | 0+       |    \
    \                               |\n   |   CONTACT          | 0+       |      \
    \                             |\n   |   CREATED          | 0 or 1   |        \
    \                           |\n   |   DESCRIPTION      | 0 or 1   | Can be null.\
    \                      |\n   |   DTEND            | 0 or 1   | If present, DURATION\
    \ MUST NOT be  |\n   |                    |          | present.              \
    \            |\n   |   DURATION         | 0 or 1   | If present, DTEND MUST NOT\
    \ be     |\n   |                    |          | present.                    \
    \      |\n   |   EXDATE           | 0+       |                               \
    \    |\n   |   GEO              | 0 or 1   |                                 \
    \  |\n   |   LAST-MODIFIED    | 0 or 1   |                                   |\n\
    \   |   LOCATION         | 0 or 1   |                                   |\n  \
    \ |   PRIORITY         | 0 or 1   |                                   |\n   |\
    \   RDATE            | 0+       |                                   |\n   |  \
    \ RECURRENCE-ID    | 0 or 1   | Only if referring to an instance  |\n   |    \
    \                |          | of a recurring calendar           |\n   |      \
    \              |          | component.  Otherwise, it MUST    |\n   |        \
    \            |          | NOT be present.                   |\n   |   RELATED-TO\
    \       | 0+       |                                   |\n   |   REQUEST-STATUS\
    \   | 0        |                                   |\n   |   RESOURCES       \
    \ | 0+       |                                   |\n   |   RRULE            |\
    \ 0 or 1   |                                   |\n   |   STATUS           | 0\
    \ or 1   | MAY be one of                     |\n   |                    |    \
    \      | TENTATIVE/CONFIRMED.              |\n   |   TRANSP           | 0 or 1\
    \   |                                   |\n   |   URL              | 0 or 1  \
    \ |                                   |\n   |   IANA-PROPERTY    | 0+       |\
    \                                   |\n   |   X-PROPERTY       | 0+       |  \
    \                                 |\n   |                    |          |    \
    \                               |\n   |   VALARM           | 0+       |      \
    \                             |\n   |                    |          |        \
    \                           |\n   | VTIMEZONE          | 0+       | MUST be present\
    \ if any date/time  |\n   |                    |          | refers to a timezone.\
    \             |\n   |                    |          |                        \
    \           |\n   | IANA-COMPONENT     | 0+       |                          \
    \         |\n   | X-COMPONENT        | 0+       |                            \
    \       |\n   |                    |          |                              \
    \     |\n   | VFREEBUSY          | 0        |                                \
    \   |\n   |                    |          |                                  \
    \ |\n   | VJOURNAL           | 0        |                                   |\n\
    \   |                    |          |                                   |\n  \
    \ | VTODO              | 0        |                                   |\n   +--------------------+----------+-----------------------------------+\n"
- title: 3.2.2.1.  Rescheduling an Event
  contents:
  - "3.2.2.1.  Rescheduling an Event\n   The \"REQUEST\" method may be used to reschedule\
    \ an event.  A\n   rescheduled event involves a change to the existing event in\
    \ terms of\n   its time or recurrence intervals and possibly the location or\n\
    \   description.  If the recipient CUA of a \"REQUEST\" method finds that\n  \
    \ the \"UID\" property value already exists on the calendar but that the\n   \"\
    SEQUENCE\" (or \"DTSTAMP\") property value in the \"REQUEST\" method is\n   greater\
    \ than the value for the existing event, then the \"REQUEST\"\n   method describes\
    \ a rescheduling of the event.\n"
- title: 3.2.2.2.  Updating or Reconfirmation of an Event
  contents:
  - "3.2.2.2.  Updating or Reconfirmation of an Event\n   The \"REQUEST\" method may\
    \ be used to update or reconfirm an event.  An\n   update to an existing event\
    \ does not involve changes to the time or\n   recurrence intervals, and might\
    \ not involve a change to the location\n   or description for the event.  If the\
    \ recipient CUA of a \"REQUEST\"\n   method finds that the \"UID\" property value\
    \ already exists on the\n   calendar and that the \"SEQUENCE\" property value\
    \ in the \"REQUEST\" is\n   the same as the value for the existing event, then\
    \ the \"REQUEST\"\n   method describes an update of the event details, but not\
    \ a\n   rescheduling of the event.\n   The update \"REQUEST\" method is the appropriate\
    \ response to a\n   \"REFRESH\" method sent from an \"Attendee\" to the \"Organizer\"\
    \ of an\n   event.\n   The \"Organizer\" of an event may also send unsolicited\
    \ \"REQUEST\"\n   methods.  The unsolicited \"REQUEST\" methods may be used to\
    \ update the\n   details of the event without rescheduling it, to update the\n\
    \   \"PARTSTAT\" parameter of \"Attendees\", or to reconfirm the event.\n"
- title: 3.2.2.3.  Delegating an Event to Another CU
  contents:
  - "3.2.2.3.  Delegating an Event to Another CU\n   Some calendar and scheduling\
    \ systems allow \"Attendees\" to delegate\n   their presence at an event to another\
    \ \"Calendar User\". iTIP supports\n   this concept using the following workflow.\
    \  Any \"Attendee\" may\n   delegate their right to participate in a calendar\
    \ \"VEVENT\" to another\n   CU.  The implication is that the delegate participates\
    \ in lieu of the\n   original \"Attendee\", NOT in addition to the \"Attendee\"\
    .  The\n   delegator MUST notify the \"Organizer\" of this action using the steps\n\
    \   outlined below.  Implementations may support or restrict delegation\n   as\
    \ they see fit.  For instance, some implementations may restrict a\n   delegate\
    \ from delegating a \"REQUEST\" to another CU.\n   The \"Delegator\" of an event\
    \ forwards the existing \"REQUEST\" to the\n   \"Delegate\".  The \"REQUEST\"\
    \ method MUST include an \"ATTENDEE\" property\n   with the calendar address of\
    \ the \"Delegate\".  The \"Delegator\" MUST\n   also send a \"REPLY\" method to\
    \ the \"Organizer\" with the \"Delegator's\"\n   \"ATTENDEE\" property \"PARTSTAT\"\
    \ parameter value set to \"DELEGATED\".\n   In addition, the \"DELEGATED-TO\"\
    \ parameter MUST be included with the\n   calendar address of the \"Delegate\"\
    .  Also, a new \"ATTENDEE\" property\n   for the \"Delegate\" MUST be included\
    \ and must specify the calendar\n   user address set in the \"DELEGATED-TO\" parameter,\
    \ as above.\n   In response to the request, the \"Delegate\" MUST send a \"REPLY\"\
    \ method\n   to the \"Organizer\", and optionally to the \"Delegator\".  The \"\
    REPLY\"\n   method SHOULD include the \"ATTENDEE\" property with the \"DELEGATED-\n\
    \   FROM\" parameter value of the \"Delegator's\" calendar address.\n   The \"\
    Delegator\" may continue to receive updates to the event even\n   though they\
    \ will not be attending.  This is accomplished by the\n   \"Delegator\" setting\
    \ their \"role\" attribute to \"NON-PARTICIPANT\" in\n   the \"REPLY\" to the\
    \ \"Organizer\".\n"
- title: 3.2.2.4.  Changing the Organizer
  contents:
  - "3.2.2.4.  Changing the Organizer\n   The situation may arise where the \"Organizer\"\
    \ of a \"VEVENT\" is no\n   longer able to perform the \"Organizer\" role and\
    \ abdicates without\n   passing on the \"Organizer\" role to someone else.  When\
    \ this occurs,\n   the \"Attendees\" of the \"VEVENT\" may use out-of-band mechanisms\
    \ to\n   communicate the situation and agree upon a new \"Organizer\".  The new\n\
    \   \"Organizer\" should then send out a new \"REQUEST\" with a modified\n   version\
    \ of the \"VEVENT\" in which the \"SEQUENCE\" number has been\n   incremented\
    \ and the \"ORGANIZER\" property has been changed to the new\n   \"Organizer\"\
    .\n"
- title: 3.2.2.5.  Sending on Behalf of the Organizer
  contents:
  - "3.2.2.5.  Sending on Behalf of the Organizer\n   There are a number of scenarios\
    \ that support the need for a \"Calendar\n   User\" to act on behalf of the \"\
    Organizer\" without explicit role\n   changing.  This might be the case if the\
    \ CU designated as \"Organizer\"\n   is sick or unable to perform duties associated\
    \ with that function.\n   In these cases, iTIP supports the notion of one CU acting\
    \ on behalf\n   of another.  Using the \"SENT-BY\" parameter, a \"Calendar User\"\
    \ could\n   send an updated \"VEVENT\" \"REQUEST\".  In the case where one CU\
    \ sends\n   on behalf of another CU, the \"Attendee\" responses are still directed\n\
    \   back towards the CU designated as \"Organizer\".\n"
- title: 3.2.2.6.  Forwarding to an Uninvited CU
  contents:
  - "3.2.2.6.  Forwarding to an Uninvited CU\n   An \"Attendee\" invited to a \"VEVENT\"\
    \ calendar component may send the\n   \"VEVENT\" calendar component to another\
    \ new CU not previously\n   associated with the \"VEVENT\" calendar component.\
    \  The current\n   \"Attendee\" invited to the \"VEVENT\" calendar component does\
    \ this by\n   forwarding the original \"REQUEST\" method to the new CU.  The new\
    \ CU\n   can send a \"REPLY\" to the \"Organizer\" of the \"VEVENT\" calendar\n\
    \   component.  The reply contains an \"ATTENDEE\" property for the new CU.\n\
    \   The \"Organizer\" ultimately decides whether or not the new CU becomes\n \
    \  part of the event and is not obligated to do anything with a \"REPLY\"\n  \
    \ from a new (uninvited) CU.  If the \"Organizer\" does not want the new\n   CU\
    \ to be part of the event, the new \"ATTENDEE\" property is not added\n   to the\
    \ \"VEVENT\" calendar component.  The \"Organizer\" MAY send the CU\n   a \"CANCEL\"\
    \ message to indicate that they will not be added to the\n   event.  If the \"\
    Organizer\" decides to add the new CU, the new\n   \"ATTENDEE\" property is added\
    \ to the \"VEVENT\" calendar component.\n   Furthermore, the \"Organizer\" is\
    \ free to change any \"ATTENDEE\"\n   property parameter from the values supplied\
    \ by the new CU to\n   something the \"Organizer\" considers appropriate.  The\
    \ \"Organizer\"\n   SHOULD send the new CU a \"REQUEST\" message to inform them\
    \ that they\n   have been added.\n   When forwarding a \"REQUEST\" to another\
    \ CU, the forwarding \"Attendee\"\n   MUST NOT make changes to the original message.\n"
- title: 3.2.2.7.  Updating Attendee Status
  contents:
  - "3.2.2.7.  Updating Attendee Status\n   The \"Organizer\" of an event may also\
    \ request updated status from one\n   or more \"Attendees\".  The \"Organizer\"\
    \ sends a \"REQUEST\" method to the\n   \"Attendee\" and sets the \"ATTENDEE;RSVP=TRUE\"\
    \ property parameter.  The\n   \"SEQUENCE\" property for the event is not changed\
    \ from its previous\n   value.  A recipient will determine that the only change\
    \ in the\n   \"REQUEST\" is that their \"RSVP\" property parameter indicates a\
    \ request\n   for updated status.  The recipient SHOULD respond with a \"REPLY\"\
    \n   method indicating their current status with respect to the \"REQUEST\".\n"
- title: 3.2.3.  REPLY
  contents:
  - "3.2.3.  REPLY\n   The \"REPLY\" method in a \"VEVENT\" calendar component is\
    \ used to\n   respond (e.g., accept or decline) to a \"REQUEST\" or to reply to\
    \ a\n   delegation \"REQUEST\".  When used to provide a delegation response,\n\
    \   the \"Delegator\" SHOULD include the calendar address of the \"Delegate\"\n\
    \   on the \"DELEGATED-TO\" property parameter of the \"Delegator's\"\n   \"ATTENDEE\"\
    \ property.  The \"Delegate\" SHOULD include the calendar\n   address of the \"\
    Delegator\" on the \"DELEGATED-FROM\" property parameter\n   of the \"Delegate's\"\
    \ \"ATTENDEE\" property.\n   The \"REPLY\" method is also used when processing\
    \ of a \"REQUEST\" fails.\n   Depending on the value of the \"REQUEST-STATUS\"\
    \ property, no\n   scheduling action may have been performed.\n   The \"Organizer\"\
    \ of an event may receive the \"REPLY\" method from a CU\n   not in the original\
    \ \"REQUEST\".  For example, a \"REPLY\" may be\n   received from a \"Delegate\"\
    \ to an event.  In addition, the \"REPLY\"\n   method may be received from an\
    \ unknown CU (a \"Party Crasher\").  This\n   uninvited \"Attendee\" may be accepted,\
    \ or the \"Organizer\" may cancel\n   the event for the uninvited \"Attendee\"\
    \ by sending a \"CANCEL\" method\n   to the uninvited \"Attendee\".\n   An \"\
    Attendee\" MAY include a message to the \"Organizer\" using the\n   \"COMMENT\"\
    \ property.  For example, if the user indicates tentative\n   acceptance and wants\
    \ to let the \"Organizer\" know why, the reason can\n   be expressed in the \"\
    COMMENT\" property value.\n   The \"Organizer\" may also receive a \"REPLY\" from\
    \ one CU on behalf of\n   another.  Like the scenario enumerated above for the\
    \ \"Organizer\",\n   \"Attendees\" may have another CU respond on their behalf.\
    \  This is\n   done using the \"SENT-BY\" parameter.\n   The optional properties\
    \ listed in the table below (those listed as\n   \"0+\" or \"0 or 1\") MUST NOT\
    \ be changed from those of the original\n   request.  If property changes are\
    \ desired, the \"COUNTER\" message must\n   be used.\n   This method type is an\
    \ iCalendar object that conforms to the\n   following property constraints:\n\
    \              +--------------------------------------------+\n              |\
    \ Constraints for a METHOD:REPLY of a VEVENT |\n              +--------------------------------------------+\n\
    \   +--------------------+----------+-----------------------------------+\n  \
    \ | Component/Property | Presence | Comment                           |\n   +--------------------+----------+-----------------------------------+\n\
    \   | METHOD             | 1        | MUST be REPLY.                    |\n  \
    \ |                    |          |                                   |\n   |\
    \ VEVENT             | 1+       | All components MUST have the same |\n   |  \
    \                  |          | UID.                              |\n   |   ATTENDEE\
    \         | 1        | MUST be the address of the        |\n   |             \
    \       |          | Attendee replying.                |\n   |   DTSTAMP     \
    \     | 1        |                                   |\n   |   ORGANIZER     \
    \   | 1        |                                   |\n   |   RECURRENCE-ID   \
    \ | 0 or 1   | Only if referring to an instance  |\n   |                    |\
    \          | of a recurring calendar           |\n   |                    |  \
    \        | component.  Otherwise, it MUST    |\n   |                    |    \
    \      | NOT be present.                   |\n   |   UID              | 1    \
    \    | MUST be the UID of the original   |\n   |                    |        \
    \  | REQUEST.                          |\n   |   SEQUENCE         | 0 or 1   |\
    \ If non-zero, MUST be the sequence |\n   |                    |          | number\
    \ of the original REQUEST.   |\n   |                    |          | MAY be present\
    \ if 0.              |\n   |   ATTACH           | 0+       |                 \
    \                  |\n   |   CATEGORIES       | 0+       |                   \
    \                |\n   |   CLASS            | 0 or 1   |                     \
    \              |\n   |   COMMENT          | 0+       |                       \
    \            |\n   |   CONTACT          | 0+       |                         \
    \          |\n   |   CREATED          | 0 or 1   |                           \
    \        |\n   |   DESCRIPTION      | 0 or 1   |                             \
    \      |\n   |   DTEND            | 0 or 1   | If present, DURATION MUST NOT be\
    \  |\n   |                    |          | present.                          |\n\
    \   |   DTSTART          | 0 or 1   |                                   |\n  \
    \ |   DURATION         | 0 or 1   | If present, DTEND MUST NOT be     |\n   |\
    \                    |          | present.                          |\n   |  \
    \ EXDATE           | 0+       |                                   |\n   |   GEO\
    \              | 0 or 1   |                                   |\n   |   LAST-MODIFIED\
    \    | 0 or 1   |                                   |\n   |   LOCATION       \
    \  | 0 or 1   |                                   |\n   |   PRIORITY         |\
    \ 0 or 1   |                                   |\n   |   RDATE            | 0+\
    \       |                                   |\n   |   RELATED-TO       | 0+  \
    \     |                                   |\n   |   RESOURCES        | 0+    \
    \   |                                   |\n   |   REQUEST-STATUS   | 0+      \
    \ |                                   |\n   |   RRULE            | 0 or 1   |\
    \                                   |\n   |   STATUS           | 0 or 1   |  \
    \                                 |\n   |   SUMMARY          | 0 or 1   |    \
    \                               |\n   |   TRANSP           | 0 or 1   |      \
    \                             |\n   |   URL              | 0 or 1   |        \
    \                           |\n   |   IANA-PROPERTY    | 0+       |          \
    \                         |\n   |   X-PROPERTY       | 0+       |            \
    \                       |\n   |                    |          |              \
    \                     |\n   |   VALARM           | 0        |                \
    \                   |\n   |                    |          |                  \
    \                 |\n   | VTIMEZONE          | 0 or 1   | MUST be present if any\
    \ date/time  |\n   |                    |          | refers to a timezone.   \
    \          |\n   |                    |          |                           \
    \        |\n   | IANA-COMPONENT     | 0+       |                             \
    \      |\n   | X-COMPONENT        | 0+       |                               \
    \    |\n   |                    |          |                                 \
    \  |\n   | VFREEBUSY          | 0        |                                   |\n\
    \   |                    |          |                                   |\n  \
    \ | VJOURNAL           | 0        |                                   |\n   |\
    \                    |          |                                   |\n   | VTODO\
    \              | 0        |                                   |\n   +--------------------+----------+-----------------------------------+\n"
- title: 3.2.4.  ADD
  contents:
  - "3.2.4.  ADD\n   The \"ADD\" method allows the \"Organizer\" to add one or more\
    \ new\n   instances to an existing \"VEVENT\" using a single iTIP message without\n\
    \   having to send the entire \"VEVENT\" with all the existing instance\n   data,\
    \ as it would have to do if the \"REQUEST\" method were used.\n   The \"UID\"\
    \ must be that of the existing event.  If the \"UID\" property\n   value in the\
    \ \"ADD\" is not found on the recipient's calendar, then the\n   recipient SHOULD\
    \ send a \"REFRESH\" to the \"Organizer\" in order to be\n   updated with the\
    \ latest version of the \"VEVENT\".  If an \"Attendee\"\n   implementation does\
    \ not support the \"ADD\" method, it should respond\n   with a \"REQUEST-STATUS\"\
    \ value of 3.14 and ask for a \"REFRESH\".\n   When handling an \"ADD\" message,\
    \ the \"Attendee\" treats each component\n   in the \"ADD\" message as if it were\
    \ referenced via an \"RDATE\" in the\n   main component.\n   This method type\
    \ is an iCalendar object that conforms to the\n   following property constraints:\n\
    \               +------------------------------------------+\n               |\
    \ Constraints for a METHOD:ADD of a VEVENT |\n               +------------------------------------------+\n\
    \   +--------------------+----------+-----------------------------------+\n  \
    \ | Component/Property | Presence | Comment                           |\n   +--------------------+----------+-----------------------------------+\n\
    \   | METHOD             | 1        | MUST be ADD.                      |\n  \
    \ |                    |          |                                   |\n   |\
    \ VEVENT             | 1        |                                   |\n   |  \
    \ DTSTAMP          | 1        |                                   |\n   |   DTSTART\
    \          | 1        |                                   |\n   |   ORGANIZER\
    \        | 1        |                                   |\n   |   SEQUENCE   \
    \      | 1        | MUST be greater than 0.           |\n   |   SUMMARY      \
    \    | 1        | Can be null.                      |\n   |   UID            \
    \  | 1        | MUST match that of the original   |\n   |                    |\
    \          | event.                            |\n   |   ATTACH           | 0+\
    \       |                                   |\n   |   ATTENDEE         | 0+  \
    \     |                                   |\n   |   CATEGORIES       | 0+    \
    \   |                                   |\n   |   CLASS            | 0 or 1  \
    \ |                                   |\n   |   COMMENT          | 0+       |\
    \                                   |\n   |   CONTACT          | 0+       |  \
    \                                 |\n   |   CREATED          | 0 or 1   |    \
    \                               |\n   |   DESCRIPTION      | 0 or 1   | Can be\
    \ null.                      |\n   |   DTEND            | 0 or 1   | If present,\
    \ DURATION MUST NOT be  |\n   |                    |          | present.     \
    \                     |\n   |   DURATION         | 0 or 1   | If present, DTEND\
    \ MUST NOT be     |\n   |                    |          | present.           \
    \               |\n   |   GEO              | 0 or 1   |                      \
    \             |\n   |   LAST-MODIFIED    | 0 or 1   |                        \
    \           |\n   |   LOCATION         | 0 or 1   |                          \
    \         |\n   |   PRIORITY         | 0 or 1   |                            \
    \       |\n   |   RELATED-TO       | 0+       |                              \
    \     |\n   |   RESOURCES        | 0+       |                                \
    \   |\n   |   STATUS           | 0 or 1   | MAY be one of                    \
    \ |\n   |                    |          | TENTATIVE/CONFIRMED.              |\n\
    \   |   TRANSP           | 0 or 1   |                                   |\n  \
    \ |   URL              | 0 or 1   |                                   |\n   |\
    \   IANA-PROPERTY    | 0+       |                                   |\n   |  \
    \ X-PROPERTY       | 0+       |                                   |\n   |   EXDATE\
    \           | 0        |                                   |\n   |   RECURRENCE-ID\
    \    | 0        |                                   |\n   |   REQUEST-STATUS \
    \  | 0        |                                   |\n   |   RDATE            |\
    \ 0        |                                   |\n   |   RRULE            | 0\
    \        |                                   |\n   |                    |    \
    \      |                                   |\n   |   VALARM           | 0+   \
    \    |                                   |\n   |                    |        \
    \  |                                   |\n   | VTIMEZONE          | 0+       |\
    \ MUST be present if any date/time  |\n   |                    |          | refers\
    \ to a timezone.             |\n   |                    |          |         \
    \                          |\n   | IANA-COMPONENT     | 0+       |           \
    \                        |\n   | X-COMPONENT        | 0+       |             \
    \                      |\n   |                    |          |               \
    \                    |\n   | VFREEBUSY          | 0        |                 \
    \                  |\n   |                    |          |                   \
    \                |\n   | VTODO              | 0        |                     \
    \              |\n   |                    |          |                       \
    \            |\n   | VJOURNAL           | 0        |                         \
    \          |\n   +--------------------+----------+-----------------------------------+\n"
- title: 3.2.5.  CANCEL
  contents:
  - "3.2.5.  CANCEL\n   The \"CANCEL\" method in a \"VEVENT\" calendar component is\
    \ used to send\n   a cancellation notice of an existing event request to the affected\n\
    \   \"Attendees\".  The message is sent by the \"Organizer\" of the event.\n \
    \  For a recurring event, either the whole event or instances of an\n   event\
    \ may be cancelled.  To cancel the complete range of a recurring\n   event, the\
    \ \"UID\" property value for the event MUST be specified and a\n   \"RECURRENCE-ID\"\
    \ MUST NOT be specified in the \"CANCEL\" method.  In\n   order to cancel an individual\
    \ instance of the event, the\n   \"RECURRENCE-ID\" property value for the event\
    \ MUST be specified in the\n   \"CANCEL\" method.\n   There are two options for\
    \ canceling a sequence of instances of a\n   recurring \"VEVENT\" calendar component:\n\
    \   a.  The \"RECURRENCE-ID\" property for an instance in the sequence MUST\n\
    \       be specified with the \"RANGE\" property parameter value of\n       \"\
    THISANDFUTURE\" to indicate cancellation of the specified\n       \"VEVENT\" calendar\
    \ component and all instances after.\n   b.  Individual recurrence instances may\
    \ be cancelled by specifying\n       multiple \"VEVENT\" components each with\
    \ a \"RECURRENCE-ID\" property\n       corresponding to one of the instances to\
    \ be cancelled.\n   The \"Organizer\" MUST send a \"CANCEL\" message to each \"\
    Attendee\"\n   affected by the cancellation.  This can be done using a single\n\
    \   \"CANCEL\" message for all \"Attendees\" or by using multiple messages\n \
    \  with different subsets of the affected \"Attendees\" in each.\n   When a \"\
    VEVENT\" is cancelled, the \"SEQUENCE\" property value MUST be\n   incremented\
    \ as described in Section 2.1.4.\n   This method type is an iCalendar object that\
    \ conforms to the\n   following property constraints:\n              +---------------------------------------------+\n\
    \              | Constraints for a METHOD:CANCEL of a VEVENT |\n             \
    \ +---------------------------------------------+\n   +--------------------+----------+-----------------------------------+\n\
    \   | Component/Property | Presence | Comment                           |\n  \
    \ +--------------------+----------+-----------------------------------+\n   |\
    \ METHOD             | 1        | MUST be CANCEL.                   |\n   |  \
    \                  |          |                                   |\n   | VEVENT\
    \             | 1+       | All must have the same UID.       |\n   |   ATTENDEE\
    \         | 0+       | MUST include some or all          |\n   |             \
    \       |          | Attendees being removed from the  |\n   |               \
    \     |          | event.  MUST include some or all  |\n   |                 \
    \   |          | Attendees if the entire event is  |\n   |                   \
    \ |          | cancelled.                        |\n   |   DTSTAMP          |\
    \ 1        |                                   |\n   |   ORGANIZER        | 1\
    \        |                                   |\n   |   SEQUENCE         | 1  \
    \      |                                   |\n   |   UID              | 1    \
    \    | MUST be the UID of the original   |\n   |                    |        \
    \  | REQUEST.                          |\n   |   COMMENT          | 0+       |\
    \                                   |\n   |   ATTACH           | 0+       |  \
    \                                 |\n   |   CATEGORIES       | 0+       |    \
    \                               |\n   |   CLASS            | 0 or 1   |      \
    \                             |\n   |   CONTACT          | 0+       |        \
    \                           |\n   |   CREATED          | 0 or 1   |          \
    \                         |\n   |   DESCRIPTION      | 0 or 1   |            \
    \                       |\n   |   DTEND            | 0 or 1   | If present, DURATION\
    \ MUST NOT be  |\n   |                    |          | present.              \
    \            |\n   |   DTSTART          | 0 or 1   |                         \
    \          |\n   |   DURATION         | 0 or 1   | If present, DTEND MUST NOT\
    \ be     |\n   |                    |          | present.                    \
    \      |\n   |   EXDATE           | 0+       |                               \
    \    |\n   |   GEO              | 0 or 1   |                                 \
    \  |\n   |   LAST-MODIFIED    | 0 or 1   |                                   |\n\
    \   |   LOCATION         | 0 or 1   |                                   |\n  \
    \ |   PRIORITY         | 0 or 1   |                                   |\n   |\
    \   RDATE            | 0+       |                                   |\n   |  \
    \ RECURRENCE-ID    | 0 or 1   | Only if referring to an instance  |\n   |    \
    \                |          | of a recurring calendar           |\n   |      \
    \              |          | component.  Otherwise, it MUST    |\n   |        \
    \            |          | NOT be present.                   |\n   |   RELATED-TO\
    \       | 0+       |                                   |\n   |   RESOURCES   \
    \     | 0+       |                                   |\n   |   RRULE         \
    \   | 0 or 1   |                                   |\n   |   STATUS          \
    \ | 0 or 1   | MUST be set to CANCELLED to       |\n   |                    |\
    \          | cancel the entire event.  If      |\n   |                    |  \
    \        | uninviting specific Attendees,    |\n   |                    |    \
    \      | then MUST NOT be included.        |\n   |   SUMMARY          | 0 or 1\
    \   |                                   |\n   |   TRANSP           | 0 or 1  \
    \ |                                   |\n   |   URL              | 0 or 1   |\
    \                                   |\n   |   IANA-PROPERTY    | 0+       |  \
    \                                 |\n   |   X-PROPERTY       | 0+       |    \
    \                               |\n   |   REQUEST-STATUS   | 0        |      \
    \                             |\n   |                    |          |        \
    \                           |\n   |   VALARM           | 0        |          \
    \                         |\n   |                    |          |            \
    \                       |\n   | VTIMEZONE          | 0+       | MUST be present\
    \ if any date/time  |\n   |                    |          | refers to a timezone.\
    \             |\n   |                    |          |                        \
    \           |\n   | IANA-COMPONENT     | 0+       |                          \
    \         |\n   | X-COMPONENT        | 0+       |                            \
    \       |\n   |                    |          |                              \
    \     |\n   | VTODO              | 0        |                                \
    \   |\n   |                    |          |                                  \
    \ |\n   | VJOURNAL           | 0        |                                   |\n\
    \   |                    |          |                                   |\n  \
    \ | VFREEBUSY          | 0        |                                   |\n   +--------------------+----------+-----------------------------------+\n"
- title: 3.2.6.  REFRESH
  contents:
  - "3.2.6.  REFRESH\n   The \"REFRESH\" method in a \"VEVENT\" calendar component\
    \ is used by\n   \"Attendees\" of an existing event to request an updated description\n\
    \   from the event \"Organizer\".  The \"REFRESH\" method must specify the\n \
    \  \"UID\" property of the event to update.  A recurrence instance of an\n   event\
    \ may be requested by specifying the \"RECURRENCE-ID\" property\n   corresponding\
    \ to the associated event.  The \"Organizer\" responds with\n   the latest description\
    \ and version of the event.\n   This method type is an iCalendar object that conforms\
    \ to the\n   following property constraints:\n             +----------------------------------------------+\n\
    \             | Constraints for a METHOD:REFRESH of a VEVENT |\n             +----------------------------------------------+\n\
    \   +--------------------+----------+-----------------------------------+\n  \
    \ | Component/Property | Presence | Comment                           |\n   +--------------------+----------+-----------------------------------+\n\
    \   | METHOD             | 1        | MUST be REFRESH.                  |\n  \
    \ |                    |          |                                   |\n   |\
    \ VEVENT             | 1        |                                   |\n   |  \
    \ ATTENDEE         | 1        | MUST be the address of requester. |\n   |   DTSTAMP\
    \          | 1        |                                   |\n   |   ORGANIZER\
    \        | 1        |                                   |\n   |   UID        \
    \      | 1        | MUST be the UID associated with   |\n   |                \
    \    |          | original REQUEST.                 |\n   |   COMMENT        \
    \  | 0+       |                                   |\n   |   RECURRENCE-ID    |\
    \ 0 or 1   | Only if referring to an instance  |\n   |                    |  \
    \        | of a recurring calendar           |\n   |                    |    \
    \      | component.  Otherwise, it MUST    |\n   |                    |      \
    \    | NOT be present.                   |\n   |   IANA-PROPERTY    | 0+     \
    \  |                                   |\n   |   X-PROPERTY       | 0+       |\
    \                                   |\n   |   ATTACH           | 0        |  \
    \                                 |\n   |   CATEGORIES       | 0        |    \
    \                               |\n   |   CLASS            | 0        |      \
    \                             |\n   |   CONTACT          | 0        |        \
    \                           |\n   |   CREATED          | 0        |          \
    \                         |\n   |   DESCRIPTION      | 0        |            \
    \                       |\n   |   DTEND            | 0        |              \
    \                     |\n   |   DTSTART          | 0        |                \
    \                   |\n   |   DURATION         | 0        |                  \
    \                 |\n   |   EXDATE           | 0        |                    \
    \               |\n   |   GEO              | 0        |                      \
    \             |\n   |   LAST-MODIFIED    | 0        |                        \
    \           |\n   |   LOCATION         | 0        |                          \
    \         |\n   |   PRIORITY         | 0        |                            \
    \       |\n   |   RDATE            | 0        |                              \
    \     |\n   |   RELATED-TO       | 0        |                                \
    \   |\n   |   REQUEST-STATUS   | 0        |                                  \
    \ |\n   |   RESOURCES        | 0        |                                   |\n\
    \   |   RRULE            | 0        |                                   |\n  \
    \ |   SEQUENCE         | 0        |                                   |\n   |\
    \   STATUS           | 0        |                                   |\n   |  \
    \ SUMMARY          | 0        |                                   |\n   |   TRANSP\
    \           | 0        |                                   |\n   |   URL     \
    \         | 0        |                                   |\n   |             \
    \       |          |                                   |\n   |   VALARM      \
    \     | 0        |                                   |\n   |                 \
    \   |          |                                   |\n   | VTIMEZONE         \
    \ | 0+       |                                   |\n   |                    |\
    \          |                                   |\n   | IANA-COMPONENT     | 0+\
    \       |                                   |\n   | X-COMPONENT        | 0+  \
    \     |                                   |\n   |                    |       \
    \   |                                   |\n   | VTODO              | 0       \
    \ |                                   |\n   |                    |          |\
    \                                   |\n   | VJOURNAL           | 0        |  \
    \                                 |\n   |                    |          |    \
    \                               |\n   | VFREEBUSY          | 0        |      \
    \                             |\n   +--------------------+----------+-----------------------------------+\n"
- title: 3.2.7.  COUNTER
  contents:
  - "3.2.7.  COUNTER\n   The \"COUNTER\" method for a \"VEVENT\" calendar component\
    \ is used by an\n   \"Attendee\" of an existing event to submit to the \"Organizer\"\
    \ a\n   counter proposal to the event.  The \"Attendee\" sends this message to\n\
    \   the \"Organizer\" of the event.\n   The counter proposal is an iCalendar object\
    \ consisting of a \"VEVENT\"\n   calendar component that provides the complete\
    \ description of the\n   alternate event.\n   The \"Organizer\" rejects the counter\
    \ proposal by sending the\n   \"Attendee\" a \"DECLINECOUNTER\" method.  The \"\
    Organizer\" accepts the\n   counter proposal by rescheduling the event as described\
    \ in\n   Section 3.2.2.1, \"Rescheduling an Event\".  The \"Organizer's\" CUA\n\
    \   SHOULD send a \"REQUEST\" message to all \"Attendees\" affected by any\n \
    \  change triggered by an accepted \"COUNTER\".\n   This method type is an iCalendar\
    \ object that conforms to the\n   following property constraints:\n          \
    \   +----------------------------------------------+\n             | Constraints\
    \ for a METHOD:COUNTER of a VEVENT |\n             +----------------------------------------------+\n\
    \   +--------------------+----------+-----------------------------------+\n  \
    \ | Component/Property | Presence | Comment                           |\n   +--------------------+----------+-----------------------------------+\n\
    \   | METHOD             | 1        | MUST be COUNTER.                  |\n  \
    \ |                    |          |                                   |\n   |\
    \ VEVENT             | 1        |                                   |\n   |  \
    \ DTSTAMP          | 1        |                                   |\n   |   DTSTART\
    \          | 1        |                                   |\n   |   ORGANIZER\
    \        | 1        | MUST be the Organizer of the      |\n   |              \
    \      |          | original event.                   |\n   |   SEQUENCE     \
    \    | 1        | MUST echo the original SEQUENCE   |\n   |                  \
    \  |          | number.  MUST be present if       |\n   |                    |\
    \          | non-zero.  MAY be present if      |\n   |                    |  \
    \        | zero.                             |\n   |   SUMMARY          | 1  \
    \      | Can be null.                      |\n   |   UID              | 1    \
    \    | MUST be the UID associated with   |\n   |                    |        \
    \  | the REQUEST being countered.      |\n   |   ATTACH           | 0+       |\
    \                                   |\n   |   ATTENDEE         | 0+       | Can\
    \ also be used to propose other |\n   |                    |          | Attendees.\
    \                        |\n   |   CATEGORIES       | 0+       |             \
    \                      |\n   |   CLASS            | 0 or 1   |               \
    \                    |\n   |   COMMENT          | 0+       |                 \
    \                  |\n   |   CONTACT          | 0+       |                   \
    \                |\n   |   CREATED          | 0 or 1   |                     \
    \              |\n   |   DESCRIPTION      | 0 or 1   |                       \
    \            |\n   |   DTEND            | 0 or 1   | If present, DURATION MUST\
    \ NOT be  |\n   |                    |          | present.                   \
    \       |\n   |   DURATION         | 0 or 1   | If present, DTEND MUST NOT be\
    \     |\n   |                    |          | present.                       \
    \   |\n   |   EXDATE           | 0+       |                                  \
    \ |\n   |   GEO              | 0 or 1   |                                   |\n\
    \   |   LAST-MODIFIED    | 0 or 1   |                                   |\n  \
    \ |   LOCATION         | 0 or 1   |                                   |\n   |\
    \   PRIORITY         | 0 or 1   |                                   |\n   |  \
    \ RDATE            | 0+       |                                   |\n   |   RECURRENCE-ID\
    \    | 0 or 1   | Only if referring to an instance  |\n   |                  \
    \  |          | of a recurring calendar           |\n   |                    |\
    \          | component.  Otherwise, it MUST    |\n   |                    |  \
    \        | NOT be present.                   |\n   |   RELATED-TO       | 0+ \
    \      |                                   |\n   |   REQUEST-STATUS   | 0+   \
    \    |                                   |\n   |   RESOURCES        | 0+     \
    \  |                                   |\n   |   RRULE            | 0 or 1   |\
    \                                   |\n   |   STATUS           | 0 or 1   | Value\
    \ must be one of              |\n   |                    |          | CONFIRMED/TENATIVE/CANCELLED.\
    \     |\n   |   TRANSP           | 0 or 1   |                                \
    \   |\n   |   URL              | 0 or 1   |                                  \
    \ |\n   |   IANA-PROPERTY    | 0+       |                                   |\n\
    \   |   X-PROPERTY       | 0+       |                                   |\n  \
    \ |                    |          |                                   |\n   |\
    \   VALARM           | 0+       |                                   |\n   |  \
    \                  |          |                                   |\n   | VTIMEZONE\
    \          | 0+       | MUST be present if any date/time  |\n   |            \
    \        |          | refers to a timezone.             |\n   |              \
    \      |          |                                   |\n   | IANA-COMPONENT \
    \    | 0+       |                                   |\n   | X-COMPONENT      \
    \  | 0+       |                                   |\n   |                    |\
    \          |                                   |\n   | VTODO              | 0\
    \        |                                   |\n   |                    |    \
    \      |                                   |\n   | VJOURNAL           | 0    \
    \    |                                   |\n   |                    |        \
    \  |                                   |\n   | VFREEBUSY          | 0        |\
    \                                   |\n   +--------------------+----------+-----------------------------------+\n"
- title: 3.2.8.  DECLINECOUNTER
  contents:
  - "3.2.8.  DECLINECOUNTER\n   The \"DECLINECOUNTER\" method in a \"VEVENT\" calendar\
    \ component is used\n   by the \"Organizer\" of an event to reject a counter proposal\
    \ submitted\n   by an \"Attendee\".  The \"Organizer\" must send the \"DECLINECOUNTER\"\
    \n   message to the \"Attendee\" that sent the \"COUNTER\" method to the\n   \"\
    Organizer\".\n   This method type is an iCalendar object that conforms to the\n\
    \   following property constraints:\n          +-----------------------------------------------------+\n\
    \          | Constraints for a METHOD:DECLINECOUNTER of a VEVENT |\n         \
    \ +-----------------------------------------------------+\n   +--------------------+----------+-----------------------------------+\n\
    \   | Component/Property | Presence | Comment                           |\n  \
    \ +--------------------+----------+-----------------------------------+\n   |\
    \ METHOD             | 1        | MUST be DECLINECOUNTER.           |\n   |  \
    \                  |          |                                   |\n   | VEVENT\
    \             | 1+       | All components MUST have the same |\n   |         \
    \           |          | UID.                              |\n   |   ATTENDEE\
    \         | 1+       | MUST for all Attendees.           |\n   |   DTSTAMP   \
    \       | 1        |                                   |\n   |   ORGANIZER   \
    \     | 1        |                                   |\n   |   SEQUENCE      \
    \   | 1        | MUST echo the original SEQUENCE   |\n   |                   \
    \ |          | number.                           |\n   |   UID              |\
    \ 1        | MUST echo original UID.           |\n   |   ATTACH           | 0+\
    \       |                                   |\n   |   CATEGORIES       | 0+  \
    \     |                                   |\n   |   CLASS            | 0 or 1\
    \   |                                   |\n   |   COMMENT          | 0+      \
    \ |                                   |\n   |   CONTACT          | 0+       |\
    \                                   |\n   |   CREATED          | 0 or 1   |  \
    \                                 |\n   |   DESCRIPTION      | 0 or 1   | Can\
    \ be null.                      |\n   |   DTSTART          | 0 or 1   |      \
    \                             |\n   |   DTEND            | 0 or 1   | If present,\
    \ DURATION MUST NOT be  |\n   |                    |          | present.     \
    \                     |\n   |   DURATION         | 0 or 1   | If present, DTEND\
    \ MUST NOT be     |\n   |                    |          | present.           \
    \               |\n   |   EXDATE           | 0+       |                      \
    \             |\n   |   GEO              | 0 or 1   |                        \
    \           |\n   |   LAST-MODIFIED    | 0 or 1   |                          \
    \         |\n   |   LOCATION         | 0 or 1   |                            \
    \       |\n   |   PRIORITY         | 0 or 1   |                              \
    \     |\n   |   RDATE            | 0+       |                                \
    \   |\n   |   RECURRENCE-ID    | 0 or 1   | Only if referring to an instance \
    \ |\n   |                    |          | of a recurring calendar           |\n\
    \   |                    |          | component.  Otherwise, it MUST    |\n  \
    \ |                    |          | NOT be present.                   |\n   |\
    \   RELATED-TO       | 0+       |                                   |\n   |  \
    \ REQUEST-STATUS   | 0+       |                                   |\n   |   RESOURCES\
    \        | 0+       |                                   |\n   |   RRULE      \
    \      | 0 or 1   |                                   |\n   |   STATUS       \
    \    | 0 or 1   | MAY be one of                     |\n   |                  \
    \  |          | TENTATIVE/CONFIRMED.              |\n   |   SUMMARY          |\
    \ 0 or 1   | Can be null.                      |\n   |   TRANSP           | 0\
    \ or 1   |                                   |\n   |   URL              | 0 or\
    \ 1   |                                   |\n   |   IANA-PROPERTY    | 0+    \
    \   |                                   |\n   |   X-PROPERTY       | 0+      \
    \ |                                   |\n   |                    |          |\
    \                                   |\n   |                    |          |  \
    \                                 |\n   | VTIMEZONE          | 0+       | MUST\
    \ be present if any date/time  |\n   |                    |          | refers\
    \ to a timezone.             |\n   |                    |          |         \
    \                          |\n   | IANA-COMPONENT     | 0+       |           \
    \                        |\n   | X-COMPONENT        | 0+       |             \
    \                      |\n   |                    |          |               \
    \                    |\n   |   VALARM           | 0        |                 \
    \                  |\n   | VFREEBUSY          | 0        |                   \
    \                |\n   |                    |          |                     \
    \              |\n   | VJOURNAL           | 0        |                       \
    \            |\n   |                    |          |                         \
    \          |\n   | VTODO              | 0        |                           \
    \        |\n   +--------------------+----------+-----------------------------------+\n"
- title: 3.3.  Methods for VFREEBUSY Components
  contents:
  - "3.3.  Methods for VFREEBUSY Components\n   This section defines the property\
    \ set for the methods that are\n   applicable to the \"VFREEBUSY\" calendar component.\
    \  Each of the\n   methods is defined using a restriction table.\n   This document\
    \ only addresses the transfer of busy time information.\n   Applications desiring\
    \ free time information MUST infer this from\n   available busy time information.\n\
    \   The \"FREEBUSY\" property value MAY include a list of values, separated\n\
    \   by the COMMA character (US-ASCII decimal 44).  Alternately, multiple\n   busy\
    \ time periods MAY be specified with multiple instances of the\n   \"FREEBUSY\"\
    \ property.  Both forms MUST be supported by implementations\n   conforming to\
    \ this document.  Duplicate busy time periods SHOULD NOT\n   be specified in an\
    \ iCalendar object.  However, two different busy\n   time periods MAY overlap.\n\
    \   \"FREEBUSY\" properties SHOULD be sorted such that their values are in\n \
    \  ascending order, based on the start time and then the end time, with\n   the\
    \ earliest periods first.  For example, today's busy time\n   information should\
    \ appear after yesterday's busy time information.\n   And the busy time for this\
    \ half-hour should appear after the busy\n   time for earlier today.  Busy time\
    \ periods can also span a day\n   boundary.\n   The following summarizes the methods\
    \ that are defined for the\n   \"VFREEBUSY\" calendar component.\n           \
    \  +---------+-------------------------------------+\n             | Method  |\
    \ Description                         |\n             +---------+-------------------------------------+\n\
    \             | PUBLISH | Publish unsolicited busy time data. |\n            \
    \ |         |                                     |\n             | REQUEST |\
    \ Request busy time data.             |\n             |         |            \
    \                         |\n             | REPLY   | Reply to a busy time request.\
    \       |\n             +---------+-------------------------------------+\n"
- title: 3.3.1.  PUBLISH
  contents:
  - "3.3.1.  PUBLISH\n   The \"PUBLISH\" method in a \"VFREEBUSY\" calendar component\
    \ is used to\n   publish busy time data.  The method may be sent from one CU to\
    \ any\n   other.  The purpose of the method is to provide a way to send\n   unsolicited\
    \ busy time data.  That is, the busy time data is not being\n   sent as a \"REPLY\"\
    \ to the receipt of a \"REQUEST\" method.\n   The \"ORGANIZER\" property MUST\
    \ be specified in the busy time\n   information.  The value is the CU address\
    \ of the originator of the\n   busy time information.\n   The busy time information\
    \ within the iCalendar object MAY be grouped\n   into more than one \"VFREEBUSY\"\
    \ calendar component.  This capability\n   allows busy time periods to be grouped\
    \ according to some common\n   periodicity, such as a calendar week, month, or\
    \ year.  In this case,\n   each \"VFREEBUSY\" calendar component MUST include\
    \ the \"ORGANIZER\",\n   \"DTSTART\", and \"DTEND\" properties in order to specify\
    \ the source of\n   the busy time information and the date and time interval over\
    \ which\n   the busy time information covers.\n   This method type is an iCalendar\
    \ object that conforms to the\n   following property constraints:\n          \
    \  +-------------------------------------------------+\n            | Constraints\
    \ for a METHOD:PUBLISH of a VFREEBUSY |\n            +-------------------------------------------------+\n\
    \   +--------------------+----------+-----------------------------------+\n  \
    \ | Component/Property | Presence | Comment                           |\n   +--------------------+----------+-----------------------------------+\n\
    \   | METHOD             | 1        | MUST be PUBLISH.                  |\n  \
    \ |                    |          |                                   |\n   |\
    \ VFREEBUSY          | 1+       |                                   |\n   |  \
    \ DTSTAMP          | 1        |                                   |\n   |   DTSTART\
    \          | 1        | DateTime values must be in UTC.   |\n   |   DTEND    \
    \        | 1        | DateTime values must be in UTC.   |\n   |   FREEBUSY   \
    \      | 0+       | MUST be BUSYTIME.  Multiple       |\n   |                \
    \    |          | instances are allowed.  Multiple  |\n   |                  \
    \  |          | instances SHOULD be sorted in     |\n   |                    |\
    \          | ascending order.                  |\n   |   ORGANIZER        | 1\
    \        | MUST contain the address of       |\n   |                    |    \
    \      | originator of busy time data.     |\n   |   UID              | 1    \
    \    |                                   |\n   |   COMMENT          | 0+     \
    \  |                                   |\n   |   CONTACT          | 0 or 1   |\
    \                                   |\n   |   IANA-PROPERTY    | 0+       |  \
    \                                 |\n   |   X-PROPERTY       | 0+       |    \
    \                               |\n   |   URL              | 0 or 1   | Specifies\
    \ busy time URL.          |\n   |   ATTENDEE         | 0        |            \
    \                       |\n   |   DURATION         | 0        |              \
    \                     |\n   |   REQUEST-STATUS   | 0        |                \
    \                   |\n   |                    |          |                  \
    \                 |\n   |   VALARM           | 0        |                    \
    \               |\n   |                    |          |                      \
    \             |\n   | IANA-COMPONENT     | 0+       |                        \
    \           |\n   | X-COMPONENT        | 0+       |                          \
    \         |\n   |                    |          |                            \
    \       |\n   | VEVENT             | 0        |                              \
    \     |\n   |                    |          |                                \
    \   |\n   | VTODO              | 0        |                                  \
    \ |\n   |                    |          |                                   |\n\
    \   | VJOURNAL           | 0        |                                   |\n  \
    \ |                    |          |                                   |\n   |\
    \ VTIMEZONE          | 0        |                                   |\n   +--------------------+----------+-----------------------------------+\n"
- title: 3.3.2.  REQUEST
  contents:
  - "3.3.2.  REQUEST\n   The \"REQUEST\" method in a \"VFREEBUSY\" calendar component\
    \ is used to\n   ask a \"Calendar User\" for their busy time information.  The\
    \ request\n   may be for a busy time information bounded by a specific date and\n\
    \   time interval.\n   This message only permits requests for busy time information.\
    \  The\n   message is sent from a \"Calendar User\" requesting the busy time\n\
    \   information of one or more intended recipients.\n   If the originator of the\
    \ \"REQUEST\" method is not authorized to make a\n   busy time request on the\
    \ recipient's calendar system, then an\n   exception message SHOULD be returned\
    \ in a \"REPLY\" method, but no busy\n   time data need be returned.\n   This\
    \ method type is an iCalendar object that conforms to the\n   following property\
    \ constraints:\n            +-------------------------------------------------+\n\
    \            | Constraints for a METHOD:REQUEST of a VFREEBUSY |\n           \
    \ +-------------------------------------------------+\n   +--------------------+----------+-----------------------------------+\n\
    \   | Component/Property | Presence | Comment                           |\n  \
    \ +--------------------+----------+-----------------------------------+\n   |\
    \ METHOD             | 1        | MUST be REQUEST.                  |\n   |  \
    \                  |          |                                   |\n   | VFREEBUSY\
    \          | 1        |                                   |\n   |   ATTENDEE \
    \        | 1+       | Contains the calendar user        |\n   |              \
    \      |          | addresses of the \"Calendar Users\" |\n   |              \
    \      |          | whose freebusy is being           |\n   |                \
    \    |          | requested.                        |\n   |   DTEND          \
    \  | 1        | DateTime values must be in UTC.   |\n   |   DTSTAMP          |\
    \ 1        |                                   |\n   |   DTSTART          | 1\
    \        | DateTime values must be in UTC.   |\n   |   ORGANIZER        | 1  \
    \      | MUST be the request originator's  |\n   |                    |      \
    \    | address.                          |\n   |   UID              | 1      \
    \  |                                   |\n   |   COMMENT          | 0+       |\
    \                                   |\n   |   CONTACT          | 0 or 1   |  \
    \                                 |\n   |   IANA-PROPERTY    | 0+       |    \
    \                               |\n   |   X-PROPERTY       | 0+       |      \
    \                             |\n   |   FREEBUSY         | 0        |        \
    \                           |\n   |   DURATION         | 0        |          \
    \                         |\n   |   REQUEST-STATUS   | 0        |            \
    \                       |\n   |   URL              | 0        |              \
    \                     |\n   |                    |          |                \
    \                   |\n   |   VALARM           | 0        |                  \
    \                 |\n   |                    |          |                    \
    \               |\n   | IANA-COMPONENT     | 0+       |                      \
    \             |\n   | X-COMPONENT        | 0+       |                        \
    \           |\n   |                    |          |                          \
    \         |\n   | VEVENT             | 0        |                            \
    \       |\n   |                    |          |                              \
    \     |\n   | VTODO              | 0        |                                \
    \   |\n   |                    |          |                                  \
    \ |\n   | VJOURNAL           | 0        |                                   |\n\
    \   |                    |          |                                   |\n  \
    \ | VTIMEZONE          | 0        |                                   |\n   +--------------------+----------+-----------------------------------+\n"
- title: 3.3.3.  REPLY
  contents:
  - "3.3.3.  REPLY\n   The \"REPLY\" method in a \"VFREEBUSY\" calendar component\
    \ is used to\n   respond to a busy time request.  The method is sent by the recipient\n\
    \   of a busy time request to the originator of the request.\n   The \"REPLY\"\
    \ method may also be used to respond to an unsuccessful\n   \"REQUEST\" method.\
    \  Depending on the \"REQUEST-STATUS\" value, no busy\n   time information may\
    \ be returned.\n   This method type is an iCalendar object that conforms to the\n\
    \   following property constraints:\n             +-----------------------------------------------+\n\
    \             | Constraints for a METHOD:REPLY of a VFREEBUSY |\n            \
    \ +-----------------------------------------------+\n   +--------------------+----------+-----------------------------------+\n\
    \   | Component/Property | Presence | Comment                           |\n  \
    \ +--------------------+----------+-----------------------------------+\n   |\
    \ METHOD             | 1        | MUST be REPLY.                    |\n   |  \
    \                  |          |                                   |\n   | VFREEBUSY\
    \          | 1        |                                   |\n   |   ATTENDEE \
    \        | 1        | MUST be the address of the        |\n   |              \
    \      |          | Attendee replying.                |\n   |   DTSTAMP      \
    \    | 1        |                                   |\n   |   DTEND          \
    \  | 1        | DateTime values must be in UTC.   |\n   |   DTSTART          |\
    \ 1        | DateTime values must be in UTC.   |\n   |   FREEBUSY         | 0+\
    \       | MUST be BUSYTIME.  Multiple       |\n   |                    |     \
    \     | instances are allowed.  Multiple  |\n   |                    |       \
    \   | instances SHOULD be sorted in     |\n   |                    |         \
    \ | ascending order.                  |\n   |   ORGANIZER        | 1        |\
    \ MUST be the request originator's  |\n   |                    |          | address.\
    \                          |\n   |   UID              | 1        | MUST be the\
    \ UID of the original   |\n   |                    |          | REQUEST.     \
    \                     |\n   |   COMMENT          | 0+       |                \
    \                   |\n   |   CONTACT          | 0 or 1   |                  \
    \                 |\n   |   REQUEST-STATUS   | 0+       |                    \
    \               |\n   |   URL              | 0 or 1   | Specifies busy time URL.\
    \          |\n   |   IANA-PROPERTY    | 0+       |                           \
    \        |\n   |   X-PROPERTY       | 0+       |                             \
    \      |\n   |   DURATION         | 0        |                               \
    \    |\n   |   SEQUENCE         | 0        |                                 \
    \  |\n   |                    |          |                                   |\n\
    \   |   VALARM           | 0        |                                   |\n  \
    \ |                    |          |                                   |\n   |\
    \ IANA-COMPONENT     | 0+       |                                   |\n   | X-COMPONENT\
    \        | 0+       |                                   |\n   |              \
    \      |          |                                   |\n   | VEVENT         \
    \    | 0        |                                   |\n   |                  \
    \  |          |                                   |\n   | VTODO              |\
    \ 0        |                                   |\n   |                    |  \
    \        |                                   |\n   | VJOURNAL           | 0  \
    \      |                                   |\n   |                    |      \
    \    |                                   |\n   | VTIMEZONE          | 0      \
    \  |                                   |\n   +--------------------+----------+-----------------------------------+\n"
- title: 3.4.  Methods for VTODO Components
  contents:
  - "3.4.  Methods for VTODO Components\n   This section defines the property set\
    \ for the methods that are\n   applicable to the \"VTODO\" calendar component.\
    \  Each of the methods is\n   defined using a restriction table that specifies\
    \ the property\n   constraints that define the particular method.\n   The following\
    \ summarizes the methods that are defined for the \"VTODO\"\n   calendar component.\n\
    \   +----------------+--------------------------------------------------+\n  \
    \ | Method         | Description                                      |\n   +----------------+--------------------------------------------------+\n\
    \   | PUBLISH        | Post notification of a VTODO.  Used primarily as |\n  \
    \ |                | a method of advertising the existence of a       |\n   |\
    \                | VTODO.                                           |\n   |  \
    \              |                                                  |\n   | REQUEST\
    \        | Assign a VTODO.  This is an explicit assignment  |\n   |          \
    \      | to one or more Calendar Users.  The REQUEST      |\n   |            \
    \    | method is also used to update or change an       |\n   |              \
    \  | existing VTODO.  Clients that cannot handle      |\n   |                |\
    \ REQUEST MAY degrade the method to treat it as a  |\n   |                | PUBLISH.\
    \                                         |\n   |                |           \
    \                                       |\n   | REPLY          | Reply to a VTODO\
    \ request.  Attendees MAY set     |\n   |                | PARTSTAT to ACCEPTED,\
    \ DECLINED, TENTATIVE,       |\n   |                | DELEGATED, PARTIAL, and\
    \ COMPLETED.               |\n   |                |                          \
    \                        |\n   | ADD            | Add one or more instances to\
    \ an existing to-do.  |\n   |                |                               \
    \                   |\n   | CANCEL         | Cancel one or more instances of an\
    \ existing      |\n   |                | to-do.                              \
    \             |\n   |                |                                       \
    \           |\n   | REFRESH        | A request sent to a VTODO Organizer asking\
    \ for   |\n   |                | the latest version of a VTODO.              \
    \     |\n   |                |                                               \
    \   |\n   | COUNTER        | Counter a REQUEST with an alternative proposal. \
    \ |\n   |                |                                                  |\n\
    \   | DECLINECOUNTER | Decline a counter proposal by an Attendee.       |\n  \
    \ +----------------+--------------------------------------------------+\n"
- title: 3.4.1.  PUBLISH
  contents:
  - "3.4.1.  PUBLISH\n   The \"PUBLISH\" method in a \"VTODO\" calendar component\
    \ has no\n   associated response.  It is simply a posting of an iCalendar object\n\
    \   that may be added to a calendar.  It MUST have an \"Organizer\".  It\n   MUST\
    \ NOT have \"Attendees\".  Its expected usage is for encapsulating\n   an arbitrary\
    \ \"VTODO\" calendar component as an iCalendar object.  The\n   \"Organizer\"\
    \ MAY subsequently update (with another \"PUBLISH\" method),\n   add instances\
    \ to (with an \"ADD\" method), or cancel (with a \"CANCEL\"\n   method) a previously\
    \ published \"VTODO\" calendar component.\n   This method type is an iCalendar\
    \ object that conforms to the\n   following property constraints:\n          \
    \    +---------------------------------------------+\n              | Constraints\
    \ for a METHOD:PUBLISH of a VTODO |\n              +---------------------------------------------+\n\
    \   +--------------------+----------+-----------------------------------+\n  \
    \ | Component/Property | Presence | Comment                           |\n   +--------------------+----------+-----------------------------------+\n\
    \   | METHOD             | 1        | MUST be PUBLISH.                  |\n  \
    \ |                    |          |                                   |\n   |\
    \ VTODO              | 1+       |                                   |\n   |  \
    \ DTSTAMP          | 1        |                                   |\n   |   DTSTART\
    \          | 1        |                                   |\n   |   ORGANIZER\
    \        | 1        |                                   |\n   |   PRIORITY   \
    \      | 1        |                                   |\n   |   SEQUENCE     \
    \    | 0 or 1   | MUST be present if value is       |\n   |                  \
    \  |          | greater than 0; MAY be present if |\n   |                    |\
    \          | 0.                                |\n   |   SUMMARY          | 1\
    \        | Can be null.                      |\n   |   UID              | 1  \
    \      |                                   |\n   |   ATTACH           | 0+   \
    \    |                                   |\n   |   CATEGORIES       | 0+     \
    \  |                                   |\n   |   CLASS            | 0 or 1   |\
    \                                   |\n   |   COMMENT          | 0+       |  \
    \                                 |\n   |   COMPLETED        | 0 or 1   |    \
    \                               |\n   |   CONTACT          | 0+       |      \
    \                             |\n   |   CREATED          | 0 or 1   |        \
    \                           |\n   |   DESCRIPTION      | 0 or 1   | Can be null.\
    \                      |\n   |   DUE              | 0 or 1   | If present, DURATION\
    \ MUST NOT be  |\n   |                    |          | present.              \
    \            |\n   |   DURATION         | 0 or 1   | If present, DUE MUST NOT\
    \ be       |\n   |                    |          | present.                  \
    \        |\n   |   EXDATE           | 0+       |                             \
    \      |\n   |   GEO              | 0 or 1   |                               \
    \    |\n   |   LAST-MODIFIED    | 0 or 1   |                                 \
    \  |\n   |   LOCATION         | 0 or 1   |                                   |\n\
    \   |   PERCENT-COMPLETE | 0 or 1   |                                   |\n  \
    \ |   RDATE            | 0+       |                                   |\n   |\
    \   RECURRENCE-ID    | 0 or 1   | Only if referring to an instance  |\n   |  \
    \                  |          | of a recurring calendar           |\n   |    \
    \                |          | component.  Otherwise, it MUST    |\n   |      \
    \              |          | NOT be present.                   |\n   |   RELATED-TO\
    \       | 0+       |                                   |\n   |   RESOURCES   \
    \     | 0+       |                                   |\n   |   RRULE         \
    \   | 0 or 1   |                                   |\n   |   STATUS          \
    \ | 0 or 1   | MAY be one of                     |\n   |                    |\
    \          | COMPLETED/NEEDS-ACTION/           |\n   |                    |  \
    \        | IN-PROCESS/CANCELLED.             |\n   |   URL              | 0 or\
    \ 1   |                                   |\n   |   IANA-PROPERTY    | 0+    \
    \   |                                   |\n   |   X-PROPERTY       | 0+      \
    \ |                                   |\n   |   ATTENDEE         | 0        |\
    \                                   |\n   |   REQUEST-STATUS   | 0        |  \
    \                                 |\n   |                    |          |    \
    \                               |\n   |   VALARM           | 0+       |      \
    \                             |\n   |                    |          |        \
    \                           |\n   | VTIMEZONE          | 0+       | MUST be present\
    \ if any date/time  |\n   |                    |          | refers to a timezone.\
    \             |\n   |                    |          |                        \
    \           |\n   | IANA-COMPONENT     | 0+       |                          \
    \         |\n   | X-COMPONENT        | 0+       |                            \
    \       |\n   |                    |          |                              \
    \     |\n   | VFREEBUSY          | 0        |                                \
    \   |\n   |                    |          |                                  \
    \ |\n   | VEVENT             | 0        |                                   |\n\
    \   |                    |          |                                   |\n  \
    \ | VJOURNAL           | 0        |                                   |\n   +--------------------+----------+-----------------------------------+\n"
- title: 3.4.2.  REQUEST
  contents:
  - "3.4.2.  REQUEST\n   The \"REQUEST\" method in a \"VTODO\" calendar component\
    \ provides the\n   following scheduling functions:\n   o  Assign a to-do to one\
    \ or more \"Calendar Users\".\n   o  Reschedule an existing to-do.\n   o  Update\
    \ the details of an existing to-do, without rescheduling it.\n   o  Update the\
    \ completion status of \"Attendees\" of an existing to-do,\n      without rescheduling\
    \ it.\n   o  Reconfirm an existing to-do, without rescheduling it.\n   o  Delegate/reassign\
    \ an existing to-do to another \"Calendar User\".\n   The assigned \"Calendar\
    \ Users\" are identified in the \"VTODO\" calendar\n   component by individual\
    \ \"ATTENDEE;ROLE=REQ-PARTICIPANT\" property\n   value sequences.\n   Typically,\
    \ the originator of a \"REQUEST\" is the \"Organizer\" of the\n   to-do, and the\
    \ recipient of a \"REQUEST\" is the \"Calendar User\"\n   assigned the to-do.\
    \  The \"Attendee\" uses the \"REPLY\" method to convey\n   their acceptance and\
    \ completion status to the \"Organizer\" of the\n   \"REQUEST\".\n   The \"UID\"\
    , \"SEQUENCE\", and \"DTSTAMP\" properties are used to\n   distinguish the various\
    \ uses of the \"REQUEST\" method.  If the \"UID\"\n   property value in the \"\
    REQUEST\" is not found on the recipient's\n   calendar, then the \"REQUEST\" is\
    \ for a new to-do.  If the \"UID\"\n   property value is found on the recipient's\
    \ calendar, then the\n   \"REQUEST\" is a rescheduling, an update, or a reconfirmation\
    \ of the\n   \"VTODO\" calendar object.\n   If the \"Organizer\" of the \"REQUEST\"\
    \ method is not authorized to make\n   a to-do request on the \"Attendee's\" calendar\
    \ system, then an\n   exception is returned in the \"REQUEST-STATUS\" property\
    \ of a\n   subsequent \"REPLY\" method, but no scheduling action is performed.\n\
    \   For the \"REQUEST\" method, multiple \"VTODO\" components in a single\n  \
    \ iCalendar object are only permitted for components with the same\n   \"UID\"\
    \ property.  That is, a series of recurring events may have\n   instance-specific\
    \ information.  In this case, multiple \"VTODO\"\n   components are needed to\
    \ express the entire series.\n   This method type is an iCalendar object that\
    \ conforms to the\n   following property constraints:\n              +---------------------------------------------+\n\
    \              | Constraints for a METHOD:REQUEST of a VTODO |\n             \
    \ +---------------------------------------------+\n   +--------------------+----------+-----------------------------------+\n\
    \   | Component/Property | Presence | Comment                           |\n  \
    \ +--------------------+----------+-----------------------------------+\n   |\
    \ METHOD             | 1        | MUST be REQUEST.                  |\n   |  \
    \                  |          |                                   |\n   | VTODO\
    \              | 1+       | All components must have the same |\n   |        \
    \            |          | UID.                              |\n   |   ATTENDEE\
    \         | 1+       |                                   |\n   |   DTSTAMP   \
    \       | 1        |                                   |\n   |   DTSTART     \
    \     | 1        |                                   |\n   |   ORGANIZER     \
    \   | 1        |                                   |\n   |   PRIORITY        \
    \ | 1        |                                   |\n   |   SEQUENCE         |\
    \ 0 or 1   | MUST be present if value is       |\n   |                    |  \
    \        | greater than 0; MAY be present if |\n   |                    |    \
    \      | 0.                                |\n   |   SUMMARY          | 1    \
    \    | Can be null.                      |\n   |   UID              | 1      \
    \  |                                   |\n   |   ATTACH           | 0+       |\
    \                                   |\n   |   CATEGORIES       | 0+       |  \
    \                                 |\n   |   CLASS            | 0 or 1   |    \
    \                               |\n   |   COMMENT          | 0+       |      \
    \                             |\n   |   COMPLETED        | 0 or 1   |        \
    \                           |\n   |   CONTACT          | 0+       |          \
    \                         |\n   |   CREATED          | 0 or 1   |            \
    \                       |\n   |   DESCRIPTION      | 0 or 1   | Can be null  \
    \                     |\n   |   DUE              | 0 or 1   | If present, DURATION\
    \ MUST NOT be  |\n   |                    |          | present.              \
    \            |\n   |   DURATION         | 0 or 1   | If present, DUE MUST NOT\
    \ be       |\n   |                    |          | present.                  \
    \        |\n   |   EXDATE           | 0+       |                             \
    \      |\n   |   GEO              | 0 or 1   |                               \
    \    |\n   |   LAST-MODIFIED    | 0 or 1   |                                 \
    \  |\n   |   LOCATION         | 0 or 1   |                                   |\n\
    \   |   PERCENT-COMPLETE | 0 or 1   |                                   |\n  \
    \ |   RDATE            | 0+       |                                   |\n   |\
    \   RECURRENCE-ID    | 0 or 1   | Only if referring to an instance  |\n   |  \
    \                  |          | of a recurring calendar           |\n   |    \
    \                |          | component.  Otherwise, it MUST    |\n   |      \
    \              |          | NOT be present.                   |\n   |   RELATED-TO\
    \       | 0+       |                                   |\n   |   RESOURCES   \
    \     | 0+       |                                   |\n   |   RRULE         \
    \   | 0 or 1   |                                   |\n   |   STATUS          \
    \ | 0 or 1   | MAY be one of                     |\n   |                    |\
    \          | COMPLETED/NEEDS-ACTION/           |\n   |                    |  \
    \        | IN-PROCESS.                       |\n   |   URL              | 0 or\
    \ 1   |                                   |\n   |   IANA-PROPERTY    | 0+    \
    \   |                                   |\n   |   X-PROPERTY       | 0+      \
    \ |                                   |\n   |   REQUEST-STATUS   | 0        |\
    \                                   |\n   |                    |          |  \
    \                                 |\n   |   VALARM           | 0+       |    \
    \                               |\n   |                    |          |      \
    \                             |\n   | VTIMEZONE          | 0+       | MUST be\
    \ present if any date/time  |\n   |                    |          | refers to\
    \ a timezone.             |\n   |                    |          |            \
    \                       |\n   | IANA-COMPONENT     | 0+       |              \
    \                     |\n   | X-COMPONENT        | 0+       |                \
    \                   |\n   |                    |          |                  \
    \                 |\n   | VEVENT             | 0        |                    \
    \               |\n   |                    |          |                      \
    \             |\n   | VFREEBUSY          | 0        |                        \
    \           |\n   |                    |          |                          \
    \         |\n   | VJOURNAL           | 0        |                            \
    \       |\n   +--------------------+----------+-----------------------------------+\n"
- title: 3.4.2.1.  REQUEST for Rescheduling a VTODO
  contents:
  - "3.4.2.1.  REQUEST for Rescheduling a VTODO\n   The \"REQUEST\" method may be\
    \ used to reschedule a \"VTODO\" calendar\n   component.\n   Rescheduling a \"\
    VTODO\" calendar component involves a change to the\n   existing \"VTODO\" calendar\
    \ component in terms of its start or due\n   time, recurrence intervals, and possibly\
    \ the description.  If the\n   recipient CUA of a \"REQUEST\" method finds that\
    \ the \"UID\" property\n   value already exists on the calendar but that the \"\
    SEQUENCE\" property\n   value in the \"REQUEST\" is greater than the value for\
    \ the existing\n   \"VTODO\", then the \"REQUEST\" method describes a rescheduling\
    \ of the\n   \"VTODO\" calendar component.\n"
- title: 3.4.2.2.  REQUEST for Update or Reconfirmation of a VTODO
  contents:
  - "3.4.2.2.  REQUEST for Update or Reconfirmation of a VTODO\n   The \"REQUEST\"\
    \ method may be used to update or reconfirm a \"VTODO\"\n   calendar component.\
    \  Reconfirmation is merely an update of \"Attendee\"\n   completion status or\
    \ overall \"VTODO\" calendar component status.\n   An update to an existing \"\
    VTODO\" calendar component does not involve\n   changes to the start or due time,\
    \ recurrence intervals, or\n   (generally) the description for the \"VTODO\" calendar\
    \ component.  If\n   the recipient CUA of a \"REQUEST\" method finds that the\
    \ \"UID\" property\n   value already exists on the calendar and that the \"SEQUENCE\"\
    \ property\n   value in the \"REQUEST\" is the same as the value for the existing\n\
    \   event, then the \"REQUEST\" method describes an update of the \"VTODO\"\n\
    \   calendar component details, but not a rescheduling of the \"VTODO\"\n   calendar\
    \ component.\n   The update \"REQUEST\" is the appropriate response to a \"REFRESH\"\
    \n   method sent from an \"Attendee\" to the \"Organizer\" of a \"VTODO\"\n  \
    \ calendar component.\n   Unsolicited \"REQUEST\" methods MAY be sent by the \"\
    Organizer\" of a\n   \"VTODO\" calendar component.  The unsolicited \"REQUEST\"\
    \ methods are\n   used to update the details of the \"VTODO\" (without rescheduling\
    \ it or\n   updating the completion status of \"Attendees\") or the \"VTODO\"\n\
    \   calendar component itself (i.e., reconfirm the \"VTODO\").\n"
- title: 3.4.2.3.  REQUEST for Delegating a VTODO
  contents:
  - "3.4.2.3.  REQUEST for Delegating a VTODO\n   The \"REQUEST\" method is also used\
    \ to delegate or reassign ownership\n   of a \"VTODO\" calendar component to another\
    \ \"Calendar User\".  For\n   example, it may be used to delegate an \"Attendee's\"\
    \ role (i.e.,\n   \"chair\" or \"participant\") for a \"VTODO\" calendar component.\
    \  The\n   \"REQUEST\" method is sent by one of the \"Attendees\" of an existing\n\
    \   \"VTODO\" calendar component to some other individual.\n   For the purposes\
    \ of this description, the \"Attendee\" delegating the\n   \"VTODO\" calendar\
    \ component is referred to as the \"Delegator\".  The\n   \"Attendee\" receiving\
    \ the delegation request is referred to as the\n   \"Delegate\".\n   The \"Delegator\"\
    \ of a \"VTODO\" calendar component MUST forward the\n   existing \"REQUEST\"\
    \ method for a \"VTODO\" calendar component to the\n   \"Delegate\".  The \"VTODO\"\
    \ calendar component description MUST include\n   the \"Delegator's\" up-to-date\
    \ \"VTODO\" calendar component definition.\n   The \"REQUEST\" method MUST also\
    \ include an \"ATTENDEE\" property with\n   the calendar address of the \"Delegate\"\
    .  The \"Delegator\" MUST also\n   send a \"REPLY\" method back to the \"Organizer\"\
    \ with the \"Delegator's\"\n   \"Attendee\" property \"PARTSTAT\" parameter value\
    \ set to \"DELEGATED\".\n   In addition, the \"DELEGATED-TO\" parameter MUST be\
    \ included with the\n   calendar address of the \"Delegate\".  A response to the\
    \ delegation\n   \"REQUEST\" is sent from the \"Delegate\" to the \"Organizer\"\
    , and\n   optionally to the \"Delegator\".  The \"REPLY\" method from the\n  \
    \ \"Delegate\" SHOULD include the \"ATTENDEE\" property with their calendar\n\
    \   address and the \"DELEGATED-FROM\" parameter with the value of the\n   \"\
    Delegator's\" calendar address.\n   The delegation \"REQUEST\" method MUST assign\
    \ a value for the \"RSVP\"\n   property parameter associated with the \"Delegator's\"\
    \ \"Attendee\"\n   property to that of the \"Delegate's\" \"ATTENDEE\" property.\
    \  For\n   example, if the \"Delegator's\" \"ATTENDEE\" property specifies\n \
    \  \"RSVP=TRUE\", then the \"Delegate's\" \"ATTENDEE\" property MUST specify\n\
    \   \"RSVP=TRUE\".\n"
- title: 3.4.2.4.  REQUEST Forwarded to an Uninvited Calendar User
  contents:
  - "3.4.2.4.  REQUEST Forwarded to an Uninvited Calendar User\n   An \"Attendee\"\
    \ assigned a \"VTODO\" calendar component may send the\n   \"VTODO\" calendar\
    \ component to another new CU not previously\n   associated with the \"VTODO\"\
    \ calendar component.  The current\n   \"Attendee\" assigned the \"VTODO\" calendar\
    \ component does this by\n   forwarding the original \"REQUEST\" method to the\
    \ new CU.  The new CU\n   can send a \"REPLY\" to the \"Organizer\" of the \"\
    VTODO\" calendar\n   component.  The reply contains an \"ATTENDEE\" property for\
    \ the new CU.\n   The \"Organizer\" ultimately decides whether or not the new\
    \ CU becomes\n   part of the to-do and is not obligated to do anything with a\
    \ \"REPLY\"\n   from a new (uninvited) CU.  If the \"Organizer\" does not want\
    \ the new\n   CU to be part of the to-do, the new \"ATTENDEE\" property is not\
    \ added\n   to the \"VTODO\" calendar component.  The \"Organizer\" MAY send the\
    \ CU a\n   \"CANCEL\" message to indicate that they will not be added to the to-\n\
    \   do.  If the \"Organizer\" decides to add the new CU, the new \"ATTENDEE\"\n\
    \   property is added to the \"VTODO\" calendar component.  Furthermore,\n   the\
    \ \"Organizer\" is free to change any \"ATTENDEE\" property parameter\n   from\
    \ the values supplied by the new CU to something the \"Organizer\"\n   considers\
    \ appropriate.  The \"Organizer\" SHOULD send the new\n   \"Attendee\" a \"REQUEST\"\
    \ message to inform them that they have been\n   added.\n   When forwarding a\
    \ \"REQUEST\" to another CU, the forwarding \"Attendee\"\n   MUST NOT make changes\
    \ to the original message.\n"
- title: 3.4.2.5.  REQUEST Updated Attendee Status
  contents:
  - "3.4.2.5.  REQUEST Updated Attendee Status\n   An \"Organizer\" of a \"VTODO\"\
    \ may request an updated status from one or\n   more \"Attendees\".  The \"Organizer\"\
    \ sends a \"REQUEST\" method to the\n   \"Attendee\" with the \"ATTENDEE;RSVP=TRUE\"\
    \ property sequence.  The\n   \"SEQUENCE\" property for the \"VTODO\" is not changed\
    \ from its previous\n   value.  A recipient determines that the only change in\
    \ the \"REQUEST\"\n   is that their \"RSVP\" property parameter indicates a request\
    \ for an\n   updated status.  The recipient SHOULD respond with a \"REPLY\" method\n\
    \   indicating their current status with respect to the \"REQUEST\".\n"
- title: 3.4.3.  REPLY
  contents:
  - "3.4.3.  REPLY\n   The \"REPLY\" method in a \"VTODO\" calendar component is used\
    \ to respond\n   (e.g., accept or decline) to a request or to reply to a delegation\n\
    \   request.  It is also used by an \"Attendee\" to update their completion\n\
    \   status.  When used to provide a delegation response, the \"Delegator\"\n \
    \  MUST include the calendar address of the \"Delegate\" in the\n   \"DELEGATED-TO\"\
    \ parameter of the \"Delegator's\" \"ATTENDEE\" property.\n   The \"Delegate\"\
    \ MUST include the calendar address of the \"Delegator\"\n   on the \"DELEGATED-FROM\"\
    \ parameter of the \"Delegate's\" \"ATTENDEE\"\n   property.\n   The \"REPLY\"\
    \ method MAY also be used to respond to an unsuccessful\n   \"VTODO\" calendar\
    \ component \"REQUEST\" method.  Depending on the\n   \"REQUEST-STATUS\" value,\
    \ no scheduling action may have been performed.\n   The \"Organizer\" of a \"\
    VTODO\" calendar component MAY receive a \"REPLY\"\n   method from a \"Calendar\
    \ User\" not in the original \"REQUEST\".  For\n   example, a \"REPLY\" method\
    \ MAY be received from a \"Delegate\" of a\n   \"VTODO\" calendar component. \
    \ In addition, the \"REPLY\" method MAY be\n   received from an unknown \"Calendar\
    \ User\" who has been forwarded the\n   \"REQUEST\" by an original \"Attendee\"\
    \ of the \"VTODO\" calendar\n   component.  This uninvited \"Attendee\" MAY be\
    \ accepted or the\n   \"Organizer\" MAY cancel the \"VTODO\" calendar component\
    \ for the\n   uninvited \"Attendee\" by sending them a \"CANCEL\" method.\n  \
    \ This method type is an iCalendar object that conforms to the\n   following property\
    \ constraints:\n               +-------------------------------------------+\n\
    \               | Constraints for a METHOD:REPLY of a VTODO |\n              \
    \ +-------------------------------------------+\n   +--------------------+----------+-----------------------------------+\n\
    \   | Component/Property | Presence | Comment                           |\n  \
    \ +--------------------+----------+-----------------------------------+\n   |\
    \ METHOD             | 1        | MUST be REPLY.                    |\n   |  \
    \                  |          |                                   |\n   | VTODO\
    \              | 1+       | All components MUST have the same |\n   |        \
    \            |          | UID.                              |\n   |   ATTENDEE\
    \         | 1        | MUST be the address of the        |\n   |             \
    \       |          | Attendee replying.                |\n   |   DTSTAMP     \
    \     | 1        |                                   |\n   |   ORGANIZER     \
    \   | 1        |                                   |\n   |   REQUEST-STATUS  \
    \ | 0+       |                                   |\n   |   UID              |\
    \ 1        | MUST be the UID of the original   |\n   |                    |  \
    \        | REQUEST.                          |\n   |   ATTACH           | 0+ \
    \      |                                   |\n   |   CATEGORIES       | 0+   \
    \    |                                   |\n   |   CLASS            | 0 or 1 \
    \  |                                   |\n   |   COMMENT          | 0+       |\
    \                                   |\n   |   COMPLETED        | 0 or 1   |  \
    \                                 |\n   |   CONTACT          | 0+       |    \
    \                               |\n   |   CREATED          | 0 or 1   |      \
    \                             |\n   |   DESCRIPTION      | 0 or 1   |        \
    \                           |\n   |   DTSTART          | 0 or 1   |          \
    \                         |\n   |   DUE              | 0 or 1   | If present,\
    \ DURATION MUST NOT be  |\n   |                    |          | present.     \
    \                     |\n   |   DURATION         | 0 or 1   | If present, DUE\
    \ MUST NOT be       |\n   |                    |          | present.         \
    \                 |\n   |   EXDATE           | 0+       |                    \
    \               |\n   |   GEO              | 0 or 1   |                      \
    \             |\n   |   LAST-MODIFIED    | 0 or 1   |                        \
    \           |\n   |   LOCATION         | 0 or 1   |                          \
    \         |\n   |   PERCENT-COMPLETE | 0 or 1   |                            \
    \       |\n   |   PRIORITY         | 0 or 1   |                              \
    \     |\n   |   RDATE            | 0+       |                                \
    \   |\n   |   RELATED-TO       | 0+       |                                  \
    \ |\n   |   RESOURCES        | 0+       |                                   |\n\
    \   |   RRULE            | 0 or 1   |                                   |\n  \
    \ |   RECURRENCE-ID    | 0 or 1   | Only if referring to an instance  |\n   |\
    \                    |          | of a recurring calendar           |\n   |  \
    \                  |          | component.  Otherwise, it MUST    |\n   |    \
    \                |          | NOT be present.                   |\n   |   SEQUENCE\
    \         | 0 or 1   | MUST be the sequence number of    |\n   |             \
    \       |          | the original REQUEST if greater   |\n   |               \
    \     |          | than 0.  MAY be present if 0.     |\n   |   STATUS        \
    \   | 0 or 1   |                                   |\n   |   SUMMARY         \
    \ | 0 or 1   | Can be null.                      |\n   |   URL              |\
    \ 0 or 1   |                                   |\n   |   IANA-PROPERTY    | 0+\
    \       |                                   |\n   |   X-PROPERTY       | 0+  \
    \     |                                   |\n   |                    |       \
    \   |                                   |\n   |   VALARM           | 0       \
    \ |                                   |\n   |                    |          |\
    \                                   |\n   | VTIMEZONE          | 0 or 1   | MUST\
    \ be present if any date/time  |\n   |                    |          | refers\
    \ to a timezone.             |\n   |                    |          |         \
    \                          |\n   | IANA-COMPONENT     | 0+       |           \
    \                        |\n   | X-COMPONENT        | 0+       |             \
    \                      |\n   |                    |          |               \
    \                    |\n   | VEVENT             | 0        |                 \
    \                  |\n   |                    |          |                   \
    \                |\n   | VFREEBUSY          | 0        |                     \
    \              |\n   +--------------------+----------+-----------------------------------+\n"
- title: 3.4.4.  ADD
  contents:
  - "3.4.4.  ADD\n   The \"ADD\" method allows the \"Organizer\" to add one or more\
    \ new\n   instances to an existing \"VTODO\" using a single iTIP message without\n\
    \   having to send the entire \"VTODO\" with all the existing instance\n   data,\
    \ as it would have to do if the \"REQUEST\" method were used.\n   The \"UID\"\
    \ must be that of the existing to-do.  If the \"UID\" property\n   value in the\
    \ \"ADD\" is not found on the recipient's calendar, then the\n   recipient SHOULD\
    \ send a \"REFRESH\" to the \"Organizer\" in order to be\n   updated with the\
    \ latest version of the \"VTODO\".  If an \"Attendee\"\n   implementation does\
    \ not support the \"ADD\" method, it should respond\n   with a \"REQUEST-STATUS\"\
    \ value of 3.14 and ask for a \"REFRESH\".\n   When handling an \"ADD\" message,\
    \ the \"Attendee\" treats each component\n   in the \"ADD\" message as if it were\
    \ referenced via an \"RDATE\" in the\n   main component.\n   The \"SEQUENCE\"\
    \ property value is incremented since the sequence of\n   to-dos has changed.\n\
    \   This method type is an iCalendar object that conforms to the\n   following\
    \ property constraints:\n                +-----------------------------------------+\n\
    \                | Constraints for a METHOD:ADD of a VTODO |\n               \
    \ +-----------------------------------------+\n   +--------------------+----------+-----------------------------------+\n\
    \   | Component/Property | Presence | Comment                           |\n  \
    \ +--------------------+----------+-----------------------------------+\n   |\
    \ METHOD             | 1        | MUST be ADD.                      |\n   |  \
    \                  |          |                                   |\n   | VTODO\
    \              | 1        |                                   |\n   |   DTSTAMP\
    \          | 1        |                                   |\n   |   ORGANIZER\
    \        | 1        |                                   |\n   |   PRIORITY   \
    \      | 1        |                                   |\n   |   SEQUENCE     \
    \    | 1        | MUST be greater than 0.           |\n   |   SUMMARY        \
    \  | 1        | Can be null.                      |\n   |   UID              |\
    \ 1        | MUST match that of the original   |\n   |                    |  \
    \        | to-do.                            |\n   |   ATTACH           | 0+ \
    \      |                                   |\n   |   ATTENDEE         | 0+   \
    \    |                                   |\n   |   CATEGORIES       | 0+     \
    \  |                                   |\n   |   CLASS            | 0 or 1   |\
    \                                   |\n   |   COMMENT          | 0+       |  \
    \                                 |\n   |   COMPLETED        | 0 or 1   |    \
    \                               |\n   |   CONTACT          | 0+       |      \
    \                             |\n   |   CREATED          | 0 or 1   |        \
    \                           |\n   |   DESCRIPTION      | 0 or 1   | Can be null.\
    \                      |\n   |   DTSTART          | 0 or 1   |               \
    \                    |\n   |   DUE              | 0 or 1   | If present, DURATION\
    \ MUST NOT be  |\n   |                    |          | present.              \
    \            |\n   |   DURATION         | 0 or 1   | If present, DUE MUST NOT\
    \ be       |\n   |                    |          | present.                  \
    \        |\n   |   GEO              | 0 or 1   |                             \
    \      |\n   |   LAST-MODIFIED    | 0 or 1   |                               \
    \    |\n   |   LOCATION         | 0 or 1   |                                 \
    \  |\n   |   PERCENT-COMPLETE | 0 or 1   |                                   |\n\
    \   |   RELATED-TO       | 0+       |                                   |\n  \
    \ |   RESOURCES        | 0+       |                                   |\n   |\
    \   STATUS           | 0 or 1   | MAY be one of                     |\n   |  \
    \                  |          | COMPLETED/NEEDS-ACTION/           |\n   |    \
    \                |          | IN-PROCESS.                       |\n   |   URL\
    \              | 0 or 1   |                                   |\n   |   IANA-PROPERTY\
    \    | 0+       |                                   |\n   |   X-PROPERTY     \
    \  | 0+       |                                   |\n   |   EXDATE           |\
    \ 0        |                                   |\n   |   RECURRENCE-ID    | 0\
    \        |                                   |\n   |   REQUEST-STATUS   | 0  \
    \      |                                   |\n   |   RDATE            | 0    \
    \    |                                   |\n   |   RRULE            | 0      \
    \  |                                   |\n   |                    |          |\
    \                                   |\n   |   VALARM           | 0+       |  \
    \                                 |\n   |                    |          |    \
    \                               |\n   | VTIMEZONE          | 0+       | MUST be\
    \ present if any date/time  |\n   |                    |          | refers to\
    \ a timezone.             |\n   |                    |          |            \
    \                       |\n   | IANA-COMPONENT     | 0+       |              \
    \                     |\n   | X-COMPONENT        | 0+       |                \
    \                   |\n   |                    |          |                  \
    \                 |\n   | VEVENT             | 0        |                    \
    \               |\n   |                    |          |                      \
    \             |\n   | VJOURNAL           | 0        |                        \
    \           |\n   |                    |          |                          \
    \         |\n   | VFREEBUSY          | 0        |                            \
    \       |\n   +--------------------+----------+-----------------------------------+\n"
- title: 3.4.5.  CANCEL
  contents:
  - "3.4.5.  CANCEL\n   The \"CANCEL\" method in a \"VTODO\" calendar component is\
    \ used to send a\n   cancellation notice of an existing \"VTODO\" calendar request\
    \ to the\n   affected \"Attendees\".  The message is sent by the \"Organizer\"\
    \ of a\n   \"VTODO\" calendar component to the \"Attendees\" of the \"VTODO\"\
    \ calendar\n   component.  For a recurring \"VTODO\" calendar component, either\
    \ the\n   whole \"VTODO\" calendar component or instances of a \"VTODO\" calendar\n\
    \   component may be cancelled.  To cancel the complete range of a\n   recurring\
    \ \"VTODO\" calendar component, the \"UID\" property value for\n   the \"VTODO\"\
    \ calendar component MUST be specified and a \"RECURRENCE-\n   ID\" MUST NOT be\
    \ specified in the \"CANCEL\" method.  In order to cancel\n   an individual instance\
    \ of a recurring \"VTODO\" calendar component, the\n   \"RECURRENCE-ID\" property\
    \ value for the \"VTODO\" calendar component\n   MUST be specified in the \"CANCEL\"\
    \ method.\n   There are two options for canceling a sequence of instances of a\n\
    \   recurring \"VTODO\" calendar component:\n   a.  The \"RECURRENCE-ID\" property\
    \ for an instance in the sequence MUST\n       be specified with the \"RANGE\"\
    \ property parameter value of\n       \"THISANDFUTURE\" to indicate cancellation\
    \ of the specified \"VTODO\"\n       calendar component and all instances after.\n\
    \   b.  Individual recurrence instances may be cancelled by specifying\n     \
    \  multiple \"VTODO\" components each with a \"RECURRENCE-ID\" property\n    \
    \   corresponding to one of the instances to be cancelled.\n   The \"Organizer\"\
    \ MUST send a \"CANCEL\" message to each \"Attendee\"\n   affected by the cancellation.\
    \  This can be done by using either a\n   single \"CANCEL\" message for all \"\
    Attendees\" or multiple messages with\n   different subsets of the affected \"\
    Attendees\" in each.\n   When a \"VTODO\" is cancelled, the \"SEQUENCE\" property\
    \ value MUST be\n   incremented as described in Section 2.1.4.\n   This method\
    \ type is an iCalendar object that conforms to the\n   following property constraints:\n\
    \              +--------------------------------------------+\n              |\
    \ Constraints for a METHOD:CANCEL of a VTODO |\n              +--------------------------------------------+\n\
    \   +--------------------+----------+-----------------------------------+\n  \
    \ | Component/Property | Presence | Comment                           |\n   +--------------------+----------+-----------------------------------+\n\
    \   | METHOD             | 1        | MUST be CANCEL.                   |\n  \
    \ |                    |          |                                   |\n   |\
    \ VTODO              | 1+       |                                   |\n   |  \
    \ ATTENDEE         | 0+       | MUST include some or all          |\n   |    \
    \                |          | Attendees being removed from the  |\n   |      \
    \              |          | to-do.  MUST include some or all  |\n   |        \
    \            |          | Attendees if the entire to-do is  |\n   |          \
    \          |          | cancelled.                        |\n   |   UID      \
    \        | 1        | MUST echo original UID.           |\n   |   DTSTAMP    \
    \      | 1        |                                   |\n   |   ORGANIZER    \
    \    | 1        |                                   |\n   |   SEQUENCE       \
    \  | 1        |                                   |\n   |   ATTACH           |\
    \ 0+       |                                   |\n   |   CATEGORIES       | 0+\
    \       |                                   |\n   |   CLASS            | 0 or\
    \ 1   |                                   |\n   |   COMMENT          | 0+    \
    \   |                                   |\n   |   COMPLETED        | 0 or 1  \
    \ |                                   |\n   |   CONTACT          | 0+       |\
    \                                   |\n   |   CREATED          | 0 or 1   |  \
    \                                 |\n   |   DESCRIPTION      | 0 or 1   |    \
    \                               |\n   |   DTSTART          | 0 or 1   |      \
    \                             |\n   |   DUE              | 0 or 1   | If present,\
    \ DURATION MUST NOT be  |\n   |                    |          | present.     \
    \                     |\n   |   DURATION         | 0 or 1   | If present, DUE\
    \ MUST NOT be       |\n   |                    |          | present.         \
    \                 |\n   |   EXDATE           | 0+       |                    \
    \               |\n   |   GEO              | 0 or 1   |                      \
    \             |\n   |   LAST-MODIFIED    | 0 or 1   |                        \
    \           |\n   |   LOCATION         | 0 or 1   |                          \
    \         |\n   |   PERCENT-COMPLETE | 0 or 1   |                            \
    \       |\n   |   RDATE            | 0+       |                              \
    \     |\n   |   RECURRENCE-ID    | 0 or 1   | Only if referring to an instance\
    \  |\n   |                    |          | of a recurring calendar           |\n\
    \   |                    |          | component.  Otherwise, it MUST    |\n  \
    \ |                    |          | NOT be present.                   |\n   |\
    \   RELATED-TO       | 0+       |                                   |\n   |  \
    \ RESOURCES        | 0+       |                                   |\n   |   RRULE\
    \            | 0 or 1   |                                   |\n   |   PRIORITY\
    \         | 0 or 1   |                                   |\n   |   STATUS    \
    \       | 0 or 1   | MUST be set to CANCELLED to       |\n   |               \
    \     |          | cancel the entire VTODO.  If      |\n   |                 \
    \   |          | removing specific Attendees, then |\n   |                   \
    \ |          | MUST NOT be included.             |\n   |   URL              |\
    \ 0 or 1   |                                   |\n   |   IANA-PROPERTY    | 0+\
    \       |                                   |\n   |   X-PROPERTY       | 0+  \
    \     |                                   |\n   |   REQUEST-STATUS   | 0     \
    \   |                                   |\n   |                    |         \
    \ |                                   |\n   |   VALARM           | 0        |\
    \                                   |\n   |                    |          |  \
    \                                 |\n   | VTIMEZONE          | 0 or 1   | MUST\
    \ be present if any date/time  |\n   |                    |          | refers\
    \ to a timezone.             |\n   |                    |          |         \
    \                          |\n   | IANA-COMPONENT     | 0+       |           \
    \                        |\n   | X-COMPONENT        | 0+       |             \
    \                      |\n   |                    |          |               \
    \                    |\n   | VEVENT             | 0        |                 \
    \                  |\n   |                    |          |                   \
    \                |\n   | VFREEBUSY          | 0        |                     \
    \              |\n   +--------------------+----------+-----------------------------------+\n"
- title: 3.4.6.  REFRESH
  contents:
  - "3.4.6.  REFRESH\n   The \"REFRESH\" method in a \"VTODO\" calendar component\
    \ is used by\n   \"Attendees\" of an existing \"VTODO\" calendar component to\
    \ request an\n   updated description from the \"Organizer\" of the \"VTODO\" calendar\n\
    \   component.  The \"Organizer\" of the \"VTODO\" calendar component MAY use\n\
    \   this method to request an updated status from the \"Attendees\".  The\n  \
    \ \"REFRESH\" method MUST specify the \"UID\" property corresponding to the\n\
    \   \"VTODO\" calendar component needing update.\n   A refresh of a recurrence\
    \ instance of a \"VTODO\" calendar component\n   may be requested by specifying\
    \ the \"RECURRENCE-ID\" property\n   corresponding to the associated \"VTODO\"\
    \ calendar component.  The\n   \"Organizer\" responds with the latest description\
    \ and rendition of the\n   \"VTODO\" calendar component.  In most cases, this\
    \ will be a \"REQUEST\"\n   unless the \"VTODO\" has been cancelled, in which\
    \ case the \"Organizer\"\n   MUST send a \"CANCEL\".  This method is intended\
    \ to facilitate machine\n   processing of requests for updates to a \"VTODO\"\
    \ calendar component.\n   This method type is an iCalendar object that conforms\
    \ to the\n   following property constraints:\n              +---------------------------------------------+\n\
    \              | Constraints for a METHOD:REFRESH of a VTODO |\n             \
    \ +---------------------------------------------+\n   +--------------------+----------+-----------------------------------+\n\
    \   | Component/Property | Presence | Comment                           |\n  \
    \ +--------------------+----------+-----------------------------------+\n   |\
    \ METHOD             | 1        | MUST be REFRESH.                  |\n   |  \
    \                  |          |                                   |\n   | VTODO\
    \              | 1        |                                   |\n   |   ATTENDEE\
    \         | 1        |                                   |\n   |   DTSTAMP   \
    \       | 1        |                                   |\n   |   UID         \
    \     | 1        | MUST echo original UID.           |\n   |   RECURRENCE-ID \
    \   | 0 or 1   | Only if referring to an instance  |\n   |                   \
    \ |          | of a recurring calendar           |\n   |                    |\
    \          | component.  Otherwise, it MUST    |\n   |                    |  \
    \        | NOT be present.                   |\n   |   IANA-PROPERTY    | 0+ \
    \      |                                   |\n   |   X-PROPERTY       | 0+   \
    \    |                                   |\n   |   ATTACH           | 0      \
    \  |                                   |\n   |   CATEGORIES       | 0        |\
    \                                   |\n   |   CLASS            | 0        |  \
    \                                 |\n   |   COMMENT          | 0        |    \
    \                               |\n   |   COMPLETED        | 0        |      \
    \                             |\n   |   CONTACT          | 0        |        \
    \                           |\n   |   CREATED          | 0        |          \
    \                         |\n   |   DESCRIPTION      | 0        |            \
    \                       |\n   |   DTSTART          | 0        |              \
    \                     |\n   |   DUE              | 0        |                \
    \                   |\n   |   DURATION         | 0        |                  \
    \                 |\n   |   EXDATE           | 0        |                    \
    \               |\n   |   GEO              | 0        |                      \
    \             |\n   |   LAST-MODIFIED    | 0        |                        \
    \           |\n   |   LOCATION         | 0        |                          \
    \         |\n   |   ORGANIZER        | 0        |                            \
    \       |\n   |   PERCENT-COMPLETE | 0        |                              \
    \     |\n   |   PRIORITY         | 0        |                                \
    \   |\n   |   RDATE            | 0        |                                  \
    \ |\n   |   RELATED-TO       | 0        |                                   |\n\
    \   |   REQUEST-STATUS   | 0        |                                   |\n  \
    \ |   RESOURCES        | 0        |                                   |\n   |\
    \   RRULE            | 0        |                                   |\n   |  \
    \ SEQUENCE         | 0        |                                   |\n   |   STATUS\
    \           | 0        |                                   |\n   |   URL     \
    \         | 0        |                                   |\n   |             \
    \       |          |                                   |\n   |   VALARM      \
    \     | 0        |                                   |\n   |                 \
    \   |          |                                   |\n   | VTIMEZONE         \
    \ | 0+       |                                   |\n   |                    |\
    \          |                                   |\n   | IANA-COMPONENT     | 0+\
    \       |                                   |\n   | X-COMPONENT        | 0+  \
    \     |                                   |\n   |                    |       \
    \   |                                   |\n   | VEVENT             | 0       \
    \ |                                   |\n   |                    |          |\
    \                                   |\n   | VFREEBUSY          | 0        |  \
    \                                 |\n   +--------------------+----------+-----------------------------------+\n"
- title: 3.4.7.  COUNTER
  contents:
  - "3.4.7.  COUNTER\n   The \"COUNTER\" method in a \"VTODO\" calendar component\
    \ is used by an\n   \"Attendee\" of an existing \"VTODO\" calendar component to\
    \ submit to the\n   \"Organizer\" a counter proposal for the \"VTODO\" calendar\
    \ component.\n   The counter proposal is an iCalendar object consisting of a \"\
    VTODO\"\n   calendar component that provides the complete description of the\n\
    \   alternate \"VTODO\" calendar component.\n   The \"Organizer\" rejects the\
    \ counter proposal by sending the\n   \"Attendee\" a \"DECLINECOUNTER\" method.\
    \  The \"Organizer\" accepts the\n   counter proposal by rescheduling the to-do\
    \ as described in\n   Section 3.4.2.1, \"REQUEST for Rescheduling a To-Do\". \
    \ The\n   \"Organizer's\" CUA SHOULD send a \"REQUEST\" message to all \"Attendees\"\
    \n   affected by any change triggered by an accepted \"COUNTER\".\n   This method\
    \ type is an iCalendar object that conforms to the\n   following property constraints:\n\
    \              +---------------------------------------------+\n             \
    \ | Constraints for a METHOD:COUNTER of a VTODO |\n              +---------------------------------------------+\n\
    \   +--------------------+----------+-----------------------------------+\n  \
    \ | Component/Property | Presence | Comment                           |\n   +--------------------+----------+-----------------------------------+\n\
    \   | METHOD             | 1        | MUST be COUNTER.                  |\n  \
    \ |                    |          |                                   |\n   |\
    \ VTODO              | 1        |                                   |\n   |  \
    \ ATTENDEE         | 1+       |                                   |\n   |   DTSTAMP\
    \          | 1        |                                   |\n   |   ORGANIZER\
    \        | 1        |                                   |\n   |   PRIORITY   \
    \      | 1        |                                   |\n   |   SUMMARY      \
    \    | 1        | Can be null.                      |\n   |   UID            \
    \  | 1        |                                   |\n   |   ATTACH           |\
    \ 0+       |                                   |\n   |   CATEGORIES       | 0+\
    \       |                                   |\n   |   CLASS            | 0 or\
    \ 1   |                                   |\n   |   COMMENT          | 0+    \
    \   |                                   |\n   |   COMPLETED        | 0 or 1  \
    \ |                                   |\n   |   CONTACT          | 0+       |\
    \                                   |\n   |   CREATED          | 0 or 1   |  \
    \                                 |\n   |   DESCRIPTION      | 0 or 1   | Can\
    \ be null.                      |\n   |   DTSTART          | 0 or 1   |      \
    \                             |\n   |   DUE              | 0 or 1   | If present,\
    \ DURATION MUST NOT be  |\n   |                    |          | present.     \
    \                     |\n   |   DURATION         | 0 or 1   | If present, DUE\
    \ MUST NOT be       |\n   |                    |          | present.         \
    \                 |\n   |   EXDATE           | 0+       |                    \
    \               |\n   |   GEO              | 0 or 1   |                      \
    \             |\n   |   LAST-MODIFIED    | 0 or 1   |                        \
    \           |\n   |   LOCATION         | 0 or 1   |                          \
    \         |\n   |   PERCENT-COMPLETE | 0 or 1   |                            \
    \       |\n   |   RDATE            | 0+       |                              \
    \     |\n   |   RECURRENCE-ID    | 0 or 1   | Only if referring to an instance\
    \  |\n   |                    |          | of a recurring calendar           |\n\
    \   |                    |          | component.  Otherwise, it MUST    |\n  \
    \ |                    |          | NOT be present.                   |\n   |\
    \   RELATED-TO       | 0+       |                                   |\n   |  \
    \ REQUEST-STATUS   | 0+       |                                   |\n   |   RESOURCES\
    \        | 0+       |                                   |\n   |   RRULE      \
    \      | 0 or 1   |                                   |\n   |   SEQUENCE     \
    \    | 0 or 1   | MUST echo the original SEQUENCE   |\n   |                  \
    \  |          | number.  MUST be present if       |\n   |                    |\
    \          | non-zero.  MAY be present if      |\n   |                    |  \
    \        | zero.                             |\n   |   STATUS           | 0 or\
    \ 1   | MAY be one of                     |\n   |                    |       \
    \   | COMPLETED/NEEDS-ACTION/           |\n   |                    |         \
    \ | IN-PROCESS/CANCELLED.             |\n   |   URL              | 0 or 1   |\
    \                                   |\n   |   IANA-PROPERTY    | 0+       |  \
    \                                 |\n   |   X-PROPERTY       | 0+       |    \
    \                               |\n   |                    |          |      \
    \                             |\n   |   VALARM           | 0+       |        \
    \                           |\n   |                    |          |          \
    \                         |\n   | VTIMEZONE          | 0 or 1   | MUST be present\
    \ if any date/time  |\n   |                    |          | refers to a timezone.\
    \             |\n   |                    |          |                        \
    \           |\n   | IANA-COMPONENT     | 0+       |                          \
    \         |\n   | X-COMPONENT        | 0+       |                            \
    \       |\n   |                    |          |                              \
    \     |\n   | VEVENT             | 0        |                                \
    \   |\n   |                    |          |                                  \
    \ |\n   | VFREEBUSY          | 0        |                                   |\n\
    \   +--------------------+----------+-----------------------------------+\n"
- title: 3.4.8.  DECLINECOUNTER
  contents:
  - "3.4.8.  DECLINECOUNTER\n   The \"DECLINECOUNTER\" method in a \"VTODO\" calendar\
    \ component is used\n   by an \"Organizer\" of the \"VTODO\" calendar component\
    \ to reject a\n   counter proposal offered by one of the \"Attendees\".  The \"\
    Organizer\"\n   sends the message to the \"Attendee\" that sent the \"COUNTER\"\
    \ method to\n   the \"Organizer\".\n   This method type is an iCalendar object\
    \ that conforms to the\n   following property constraints:\n          +----------------------------------------------------+\n\
    \          | Constraints for a METHOD:DECLINECOUNTER of a VTODO |\n          +----------------------------------------------------+\n\
    \   +--------------------+----------+-----------------------------------+\n  \
    \ | Component/Property | Presence | Comment                           |\n   +--------------------+----------+-----------------------------------+\n\
    \   | METHOD             | 1        | MUST be DECLINECOUNTER.           |\n  \
    \ |                    |          |                                   |\n   |\
    \ VTODO              | 1        |                                   |\n   |  \
    \ ATTENDEE         | 1+       | MUST for all ATTENDEEs.           |\n   |   DTSTAMP\
    \          | 1        |                                   |\n   |   ORGANIZER\
    \        | 1        |                                   |\n   |   SEQUENCE   \
    \      | 1        | MUST echo the original SEQUENCE   |\n   |                \
    \    |          | number.                           |\n   |   UID            \
    \  | 1        | MUST echo original UID.           |\n   |   ATTACH           |\
    \ 0+       |                                   |\n   |   CATEGORIES       | 0+\
    \       |                                   |\n   |   CLASS            | 0 or\
    \ 1   |                                   |\n   |   COMMENT          | 0+    \
    \   |                                   |\n   |   COMPLETED        | 0 or 1  \
    \ |                                   |\n   |   CONTACT          | 0+       |\
    \                                   |\n   |   CREATED          | 0 or 1   |  \
    \                                 |\n   |   DESCRIPTION      | 0 or 1   |    \
    \                               |\n   |   DTSTART          | 0 or 1   |      \
    \                             |\n   |   DUE              | 0 or 1   | If present,\
    \ DURATION MUST NOT be  |\n   |                    |          | present.     \
    \                     |\n   |   DURATION         | 0 or 1   | If present, DUE\
    \ MUST NOT be       |\n   |                    |          | present.         \
    \                 |\n   |   EXDATE           | 0+       |                    \
    \               |\n   |   GEO              | 0 or 1   |                      \
    \             |\n   |   LAST-MODIFIED    | 0 or 1   |                        \
    \           |\n   |   LOCATION         | 0 or 1   |                          \
    \         |\n   |   PERCENT-COMPLETE | 0 or 1   |                            \
    \       |\n   |   PRIORITY         | 0 or 1   |                              \
    \     |\n   |   RDATE            | 0+       |                                \
    \   |\n   |   RECURRENCE-ID    | 0 or 1   | Only if referring to an instance \
    \ |\n   |                    |          | of a recurring calendar           |\n\
    \   |                    |          | component.  Otherwise, it MUST    |\n  \
    \ |                    |          | NOT be present.                   |\n   |\
    \   RELATED-TO       | 0+       |                                   |\n   |  \
    \ REQUEST-STATUS   | 0+       |                                   |\n   |   RESOURCES\
    \        | 0+       |                                   |\n   |   RRULE      \
    \      | 0 or 1   |                                   |\n   |   STATUS       \
    \    | 0 or 1   | MAY be one of                     |\n   |                  \
    \  |          | COMPLETED/NEEDS-ACTION/           |\n   |                    |\
    \          | IN-PROCESS.                       |\n   |   URL              | 0\
    \ or 1   |                                   |\n   |   IANA-PROPERTY    | 0+ \
    \      |                                   |\n   |   X-PROPERTY       | 0+   \
    \    |                                   |\n   |                    |        \
    \  |                                   |\n   |   VALARM           | 0        |\
    \                                   |\n   |                    |          |  \
    \                                 |\n   | VTIMEZONE          | 0+       | MUST\
    \ be present if any date/time  |\n   |                    |          | refers\
    \ to a timezone.             |\n   |                    |          |         \
    \                          |\n   | IANA-COMPONENT     | 0+       |           \
    \                        |\n   | X-COMPONENT        | 0+       |             \
    \                      |\n   |                    |          |               \
    \                    |\n   | VEVENT             | 0        |                 \
    \                  |\n   |                    |          |                   \
    \                |\n   | VFREEBUSY          | 0        |                     \
    \              |\n   +--------------------+----------+-----------------------------------+\n"
- title: 3.5.  Methods for VJOURNAL Components
  contents:
  - "3.5.  Methods for VJOURNAL Components\n   This section defines the property set\
    \ for the methods that are\n   applicable to the \"VJOURNAL\" calendar component.\n\
    \   The following summarizes the methods that are defined for the\n   \"VJOURNAL\"\
    \ calendar component.\n   +---------+---------------------------------------------------------+\n\
    \   | Method  | Description                                             |\n  \
    \ +---------+---------------------------------------------------------+\n   |\
    \ PUBLISH | Post a journal entry.  Used primarily as a method of    |\n   |  \
    \       | advertising the existence of a journal entry.           |\n   |    \
    \     |                                                         |\n   | ADD  \
    \   | Add one or more instances to an existing journal entry. |\n   |        \
    \ |                                                         |\n   | CANCEL  |\
    \ Cancel one or more instances of an existing journal     |\n   |         | entry.\
    \                                                  |\n   +---------+---------------------------------------------------------+\n"
- title: 3.5.1.  PUBLISH
  contents:
  - "3.5.1.  PUBLISH\n   The \"PUBLISH\" method in a \"VJOURNAL\" calendar component\
    \ has no\n   associated response.  It is simply a posting of an iCalendar object\n\
    \   that may be added to a calendar.  It MUST have an \"Organizer\".  It\n   MUST\
    \ NOT have \"Attendees\".  The expected usage is for encapsulating\n   an arbitrary\
    \ journal entry as an iCalendar object.  The \"Organizer\"\n   MAY subsequently\
    \ update (with another \"PUBLISH\" method) or cancel\n   (with a \"CANCEL\" method)\
    \ a previously published journal entry.\n   This method type is an iCalendar object\
    \ that conforms to the\n   following property constraints:\n            +------------------------------------------------+\n\
    \            | Constraints for a METHOD:PUBLISH of a VJOURNAL |\n            +------------------------------------------------+\n\
    \   +--------------------+----------+-----------------------------------+\n  \
    \ | Component/Property | Presence | Comment                           |\n   +--------------------+----------+-----------------------------------+\n\
    \   | METHOD             | 1        | MUST be PUBLISH.                  |\n  \
    \ |                    |          |                                   |\n   |\
    \ VJOURNAL           | 1+       |                                   |\n   |  \
    \ DESCRIPTION      | 1        | Can be null.                      |\n   |   DTSTAMP\
    \          | 1        |                                   |\n   |   DTSTART  \
    \        | 1        |                                   |\n   |   ORGANIZER  \
    \      | 1        |                                   |\n   |   UID          \
    \    | 1        |                                   |\n   |   ATTACH         \
    \  | 0+       |                                   |\n   |   CATEGORIES       |\
    \ 0+       |                                   |\n   |   CLASS            | 0\
    \ or 1   |                                   |\n   |   COMMENT          | 0+ \
    \      |                                   |\n   |   CONTACT          | 0+   \
    \    |                                   |\n   |   CREATED          | 0 or 1 \
    \  |                                   |\n   |   EXDATE           | 0+       |\
    \                                   |\n   |   LAST-MODIFIED    | 0 or 1   |  \
    \                                 |\n   |   RDATE            | 0+       |    \
    \                               |\n   |   RECURRENCE-ID    | 0 or 1   | Only if\
    \ referring to an instance  |\n   |                    |          | of a recurring\
    \ calendar           |\n   |                    |          | component.  Otherwise,\
    \ it MUST    |\n   |                    |          | NOT be present.         \
    \          |\n   |   RELATED-TO       | 0+       |                           \
    \        |\n   |   RRULE            | 0 or 1   |                             \
    \      |\n   |   SEQUENCE         | 0 or 1   | MUST be present if non-zero.  MAY\
    \ |\n   |                    |          | be present if zero.               |\n\
    \   |   STATUS           | 0 or 1   | MAY be one of                     |\n  \
    \ |                    |          | DRAFT/FINAL/CANCELLED.            |\n   |\
    \   SUMMARY          | 0 or 1   | Can be null.                      |\n   |  \
    \ URL              | 0 or 1   |                                   |\n   |   IANA-PROPERTY\
    \    | 0+       |                                   |\n   |   X-PROPERTY     \
    \  | 0+       |                                   |\n   |   ATTENDEE         |\
    \ 0        |                                   |\n   |   REQUEST-STATUS   | 0\
    \        |                                   |\n   |                    |    \
    \      |                                   |\n   |   VALARM           | 0+   \
    \    |                                   |\n   |                    |        \
    \  |                                   |\n   | VTIMEZONE          | 0+       |\
    \ MUST be present if any date/time  |\n   |                    |          | refers\
    \ to a timezone.             |\n   |                    |          |         \
    \                          |\n   | IANA-COMPONENT     | 0+       |           \
    \                        |\n   | X-COMPONENT        | 0+       |             \
    \                      |\n   |                    |          |               \
    \                    |\n   | VEVENT             | 0        |                 \
    \                  |\n   |                    |          |                   \
    \                |\n   | VFREEBUSY          | 0        |                     \
    \              |\n   |                    |          |                       \
    \            |\n   | VTODO              | 0        |                         \
    \          |\n   +--------------------+----------+-----------------------------------+\n"
- title: 3.5.2.  ADD
  contents:
  - "3.5.2.  ADD\n   The \"ADD\" method allows the \"Organizer\" to add one or more\
    \ new\n   instances to an existing \"VJOURNAL\" using a single iTIP message\n\
    \   without having to send the entire \"VJOURNAL\" with all the existing\n   instance\
    \ data, as it would have to do if the \"REQUEST\" method were\n   used.\n   The\
    \ \"UID\" must be that of the existing journal entry.  If the \"UID\"\n   property\
    \ value in the \"ADD\" is not found on the recipient's calendar,\n   then the\
    \ recipient MAY treat the \"ADD\" as a \"PUBLISH\".\n   When handling an \"ADD\"\
    \ message, the \"Attendee\" treats each component\n   in the \"ADD\" message as\
    \ if it were referenced via an \"RDATE\" in the\n   main component.  There is\
    \ no response to the \"Organizer\".\n   This method type is an iCalendar object\
    \ that conforms to the\n   following property constraints:\n              +--------------------------------------------+\n\
    \              | Constraints for a METHOD:ADD of a VJOURNAL |\n              +--------------------------------------------+\n\
    \   +--------------------+----------+-----------------------------------+\n  \
    \ | Component/Property | Presence | Comment                           |\n   +--------------------+----------+-----------------------------------+\n\
    \   | METHOD             | 1        | MUST be ADD.                      |\n  \
    \ |                    |          |                                   |\n   |\
    \ VJOURNAL           | 1        |                                   |\n   |  \
    \ DESCRIPTION      | 1        | Can be null.                      |\n   |   DTSTAMP\
    \          | 1        |                                   |\n   |   DTSTART  \
    \        | 1        |                                   |\n   |   ORGANIZER  \
    \      | 1        |                                   |\n   |   SEQUENCE     \
    \    | 1        | MUST be greater than 0.           |\n   |   UID            \
    \  | 1        | MUST match that of the original   |\n   |                    |\
    \          | journal.                          |\n   |   ATTACH           | 0+\
    \       |                                   |\n   |   CATEGORIES       | 0+  \
    \     |                                   |\n   |   CLASS            | 0 or 1\
    \   |                                   |\n   |   COMMENT          | 0+      \
    \ |                                   |\n   |   CONTACT          | 0+       |\
    \                                   |\n   |   CREATED          | 0 or 1   |  \
    \                                 |\n   |   LAST-MODIFIED    | 0 or 1   |    \
    \                               |\n   |   RELATED-TO       | 0+       |      \
    \                             |\n   |   STATUS           | 0 or 1   | MAY be one\
    \ of                     |\n   |                    |          | DRAFT/FINAL/CANCELLED.\
    \            |\n   |   SUMMARY          | 0 or 1   | Can be null.            \
    \          |\n   |   URL              | 0 or 1   |                           \
    \        |\n   |   IANA-PROPERTY    | 0+       |                             \
    \      |\n   |   X-PROPERTY       | 0+       |                               \
    \    |\n   |   ATTENDEE         | 0        |                                 \
    \  |\n   |   EXDATE           | 0        |                                   |\n\
    \   |   RECURRENCE-ID    | 0        |                                   |\n  \
    \ |   REQUEST-STATUS   | 0        |                                   |\n   |\
    \   RDATE            | 0        |                                   |\n   |  \
    \ RRULE            | 0        |                                   |\n   |    \
    \                |          |                                   |\n   |   VALARM\
    \           | 0+       |                                   |\n   |           \
    \         |          |                                   |\n   | VTIMEZONE   \
    \       | 0 or 1   | MUST be present if any date/time  |\n   |               \
    \     |          | refers to a timezone.             |\n   |                 \
    \   |          |                                   |\n   | IANA-COMPONENT    \
    \ | 0+       |                                   |\n   | X-COMPONENT        |\
    \ 0+       |                                   |\n   |                    |  \
    \        |                                   |\n   | VEVENT             | 0  \
    \      |                                   |\n   |                    |      \
    \    |                                   |\n   | VFREEBUSY          | 0      \
    \  |                                   |\n   |                    |          |\
    \                                   |\n   | VTODO              | 0        |  \
    \                                 |\n   +--------------------+----------+-----------------------------------+\n"
- title: 3.5.3.  CANCEL
  contents:
  - "3.5.3.  CANCEL\n   The \"CANCEL\" method in a \"VJOURNAL\" calendar component\
    \ is used to\n   send a cancellation notice of an existing journal entry.  The\
    \ message\n   is sent by the \"Organizer\" of a journal entry.  For a recurring\n\
    \   journal entry, either the whole journal entry or instances of a\n   journal\
    \ entry may be cancelled.  To cancel the complete range of a\n   recurring journal\
    \ entry, the \"UID\" property value for the journal\n   entry MUST be specified\
    \ and a \"RECURRENCE-ID\" property MUST NOT be\n   specified in the \"CANCEL\"\
    \ method.  In order to cancel an individual\n   instance of the journal entry,\
    \ the \"RECURRENCE-ID\" property value for\n   the journal entry MUST be specified\
    \ in the \"CANCEL\" method.\n   There are two options for canceling a sequence\
    \ of instances of a\n   recurring \"VJOURNAL\" calendar component:\n   a.  The\
    \ \"RECURRENCE-ID\" property for an instance in the sequence MUST\n       be specified\
    \ with the \"RANGE\" property parameter value of\n       \"THISANDFUTURE\" to\
    \ indicate cancellation of the specified\n       \"VJOURNAL\" calendar component\
    \ and all instances after.\n   b.  Individual recurrence instances may be cancelled\
    \ by specifying\n       multiple \"VJOURNAL\" components each with a \"RECURRENCE-ID\"\
    \n       property corresponding to one of the instances to be cancelled.\n   When\
    \ a \"VJOURNAL\" is cancelled, the \"SEQUENCE\" property value MUST be\n   incremented\
    \ as described in Section 2.1.4.\n   This method type is an iCalendar object that\
    \ conforms to the\n   following property constraints:\n             +-----------------------------------------------+\n\
    \             | Constraints for a METHOD:CANCEL of a VJOURNAL |\n            \
    \ +-----------------------------------------------+\n   +--------------------+----------+-----------------------------------+\n\
    \   | Component/Property | Presence | Comment                           |\n  \
    \ +--------------------+----------+-----------------------------------+\n   |\
    \ METHOD             | 1        | MUST be CANCEL.                   |\n   |  \
    \                  |          |                                   |\n   | VJOURNAL\
    \           | 1+       | All MUST have the same UID.       |\n   |   DTSTAMP \
    \         | 1        |                                   |\n   |   ORGANIZER \
    \       | 1        |                                   |\n   |   SEQUENCE    \
    \     | 1        |                                   |\n   |   UID           \
    \   | 1        | MUST be the UID of the original   |\n   |                   \
    \ |          | REQUEST.                          |\n   |   ATTACH           |\
    \ 0+       |                                   |\n   |   ATTENDEE         | 0\
    \        |                                   |\n   |   CATEGORIES       | 0+ \
    \      |                                   |\n   |   CLASS            | 0 or 1\
    \   |                                   |\n   |   COMMENT          | 0+      \
    \ |                                   |\n   |   CONTACT          | 0+       |\
    \                                   |\n   |   CREATED          | 0 or 1   |  \
    \                                 |\n   |   DESCRIPTION      | 0 or 1   |    \
    \                               |\n   |   DTSTART          | 0 or 1   |      \
    \                             |\n   |   EXDATE           | 0+       |        \
    \                           |\n   |   LAST-MODIFIED    | 0 or 1   |          \
    \                         |\n   |   RDATE            | 0+       |            \
    \                       |\n   |   RECURRENCE-ID    | 0 or 1   | Only if referring\
    \ to an instance  |\n   |                    |          | of a recurring calendar\
    \           |\n   |                    |          | component.  Otherwise, it\
    \ MUST    |\n   |                    |          | NOT be present.            \
    \       |\n   |   RELATED-TO       | 0+       |                              \
    \     |\n   |   RRULE            | 0 or 1   |                                \
    \   |\n   |   STATUS           | 0 or 1   | MAY be present; MUST be CANCELLED\
    \ |\n   |                    |          | if present.                       |\n\
    \   |   SUMMARY          | 0 or 1   |                                   |\n  \
    \ |   URL              | 0 or 1   |                                   |\n   |\
    \   IANA-PROPERTY    | 0+       |                                   |\n   |  \
    \ X-PROPERTY       | 0+       |                                   |\n   |   REQUEST-STATUS\
    \   | 0        |                                   |\n   |                   \
    \ |          |                                   |\n   |   VALARM           |\
    \ 0        |                                   |\n   |                    |  \
    \        |                                   |\n   | VTIMEZONE          | 0+ \
    \      | MUST be present if any date/time  |\n   |                    |      \
    \    | refers to a timezone.             |\n   |                    |        \
    \  |                                   |\n   | IANA-COMPONENT     | 0+       |\
    \                                   |\n   | X-COMPONENT        | 0+       |  \
    \                                 |\n   |                    |          |    \
    \                               |\n   | VEVENT             | 0        |      \
    \                             |\n   |                    |          |        \
    \                           |\n   | VFREEBUSY          | 0        |          \
    \                         |\n   |                    |          |            \
    \                       |\n   | VTODO              | 0        |              \
    \                     |\n   +--------------------+----------+-----------------------------------+\n"
- title: 3.6.  Status Replies
  contents:
  - "3.6.  Status Replies\n   The \"REQUEST-STATUS\" property is used to convey status\
    \ information\n   about a \"REPLY\", \"COUNTER\", or \"DECLINECOUNTER\" iTIP message.\
    \  The\n   codes listed in the table below SHOULD be used.  If the \"REQUEST-\n\
    \   STATUS\" property is not present in one of these iTIP messages, then a\n \
    \  status code of \"2.0\" (success) MUST be assumed.\n   This specification adds\
    \ a new IANA registry for \"REQUEST-STATUS\"\n   property values, as defined in\
    \ Section 7, which includes a new\n   registration template for defining the specific\
    \ components of the\n   \"REQUEST-STATUS\" property value.  Additional codes MAY\
    \ be used,\n   provided the process described in Section 8.2.1 of [RFC5545] is\
    \ used\n   to register them.\n   This specification allows for multiple \"REQUEST-STATUS\"\
    \ properties to\n   be returned in iCalendar components in the appropriate iTIP\
    \ messages.\n   When multiple \"REQUEST-STATUS\" properties are present, the following\n\
    \   restrictions apply:\n   1.  Within any one component, the \"top-level\" numeric\
    \ value of the\n       \"short return status code\" MUST be the same for all \"\
    REQUEST-\n       STATUS\" properties, i.e., there cannot be a mixture of, e.g.,\n\
    \       2.xx and 5.xx codes within a single component.\n   2.  Across all components\
    \ in the iTIP message, the following applies:\n       A.  If any one component\
    \ would have a 5.xx code, then either all\n           components MUST have a code\
    \ in that range or \"REQUEST-STATUS\"\n           MUST NOT be present in the other\
    \ components if a 5.xx code is\n           not appropriate for those components.\n\
    \       B.  Otherwise, if any one component would have a 3.xx code, then\n   \
    \        either all components MUST have a code in that range or\n           \"\
    REQUEST-STATUS\" MUST NOT be present in the other components\n           if a\
    \ 3.xx code is not appropriate for those components.\n       C.  2.xx and 4.xx\
    \ codes can be used in different components,\n           provided that each component\
    \ follows the restriction in (1)\n           above.\n   The following \"REQUEST-STATUS\"\
    \ codes are defined (any \"Offending\n   Data\" MAY be specified in the \"REQUEST-STATUS\"\
    \ value as the extdata\n   field):\n"
- title: 3.6.1.  Status Code 2.0
  contents:
  - "3.6.1.  Status Code 2.0\n   Status Code:  2.0\n   Status Description:  Success.\n\
    \   Status Exception Data:  None.\n   Description:  iTIP operation succeeded.\n"
- title: 3.6.2.  Status Code 2.1
  contents:
  - "3.6.2.  Status Code 2.1\n   Status Code:  2.1\n   Status Description:  Success,\
    \ but fallback taken on one or more\n      property values.\n   Status Exception\
    \ Data:  Property name and value MAY be specified.\n   Description:  iTIP operation\
    \ succeeded with fallback on one or more\n      property values.\n"
- title: 3.6.3.  Status Code 2.2
  contents:
  - "3.6.3.  Status Code 2.2\n   Status Code:  2.2\n   Status Description:  Success;\
    \ invalid property ignored.\n   Status Exception Data:  Property name MAY be specified.\n\
    \   Description:  iTIP operation succeeded but a property was ignored.\n"
- title: 3.6.4.  Status Code 2.3
  contents:
  - "3.6.4.  Status Code 2.3\n   Status Code:  2.3\n   Status Description:  Success;\
    \ invalid property parameter ignored.\n   Status Exception Data:  Property parameter\
    \ name and value MAY be\n      specified.\n   Description:  iTIP operation succeeded\
    \ but a property parameter was\n      ignored because it was invalid.\n"
- title: 3.6.5.  Status Code 2.4
  contents:
  - "3.6.5.  Status Code 2.4\n   Status Code:  2.4\n   Status Description:  Success;\
    \ unknown, non-standard property ignored.\n   Status Exception Data:  Non-standard\
    \ property name MAY be specified.\n   Description:  iTIP operation succeeded but\
    \ a property parameter was\n      ignored because it was unknown.\n"
- title: 3.6.6.  Status Code 2.5
  contents:
  - "3.6.6.  Status Code 2.5\n   Status Code:  2.5\n   Status Description:  Success;\
    \ unknown, non-standard property value\n      ignored.\n   Status Exception Data:\
    \  Property and non-standard value MAY be\n      specified.\n   Description: \
    \ iTIP operation succeeded but a property was ignored\n      because its value\
    \ was unknown.\n"
- title: 3.6.7.  Status Code 2.6
  contents:
  - "3.6.7.  Status Code 2.6\n   Status Code:  2.6\n   Status Description:  Success;\
    \ invalid calendar component ignored.\n   Status Exception Data:  Calendar component\
    \ sentinel (e.g., BEGIN:\n      ALARM) MAY be specified.\n   Description:  iTIP\
    \ operation succeeded but a component was ignored\n      because it was invalid.\n"
- title: 3.6.8.  Status Code 2.7
  contents:
  - "3.6.8.  Status Code 2.7\n   Status Code:  2.7\n   Status Description:  Success;\
    \ request forwarded to Calendar User.\n   Status Exception Data:  Original and\
    \ forwarded calendar user\n      addresses MAY be specified.\n   Description:\
    \  iTIP operation succeeded, and the request was forwarded\n      to another Calendar\
    \ User.\n"
- title: 3.6.9.  Status Code 2.8
  contents:
  - "3.6.9.  Status Code 2.8\n   Status Code:  2.8\n   Status Description:  Success;\
    \ repeating event ignored.  Scheduled as\n      a single component.\n   Status\
    \ Exception Data:  RRULE or RDATE property name and value MAY be\n      specified.\n\
    \   Description:  iTIP operation succeeded but a repeating event was\n      truncated\
    \ to a single instance.\n"
- title: 3.6.10.  Status Code 2.9
  contents:
  - "3.6.10.  Status Code 2.9\n   Status Code:  2.9\n   Status Description:  Success;\
    \ truncated end date time to date\n      boundary.\n   Status Exception Data:\
    \  DTEND property value MAY be specified.\n   Description:  iTIP operation succeeded\
    \ but the end time was truncated\n      to a date boundary.\n"
- title: 3.6.11.  Status Code 2.10
  contents:
  - "3.6.11.  Status Code 2.10\n   Status Code:  2.10\n   Status Description:  Success;\
    \ repeating VTODO ignored.  Scheduled as\n      a single VTODO.\n   Status Exception\
    \ Data:  RRULE or RDATE property name and value MAY be\n      specified.\n   Description:\
    \  iTIP operation succeeded but a repeating to-do was\n      truncated to a single\
    \ instance.\n"
- title: 3.6.12.  Status Code 2.11
  contents:
  - "3.6.12.  Status Code 2.11\n   Status Code:  2.11\n   Status Description:  Success;\
    \ unbounded RRULE clipped at some finite\n      number of instances.\n   Status\
    \ Exception Data:  RRULE property name and value MAY be\n      specified.  Number\
    \ of instances MAY also be specified.\n   Description:  iTIP operation succeeded\
    \ but an unbounded repeating\n      object was clipped to a finite number of instances.\n"
- title: 3.6.13.  Status Code 3.0
  contents:
  - "3.6.13.  Status Code 3.0\n   Status Code:  3.0\n   Status Description:  Invalid\
    \ property name.\n   Status Exception Data:  Property name MAY be specified.\n\
    \   Description:  iTIP operation failed because of an invalid property\n     \
    \ name.\n"
- title: 3.6.14.  Status Code 3.1
  contents:
  - "3.6.14.  Status Code 3.1\n   Status Code:  3.1\n   Status Description:  Invalid\
    \ property value.\n   Status Exception Data:  Property name and value MAY be specified.\n\
    \   Description:  iTIP operation failed because of an invalid property\n     \
    \ value.\n"
- title: 3.6.15.  Status Code 3.2
  contents:
  - "3.6.15.  Status Code 3.2\n   Status Code:  3.2\n   Status Description:  Invalid\
    \ property parameter.\n   Status Exception Data:  Property parameter name and\
    \ value MAY be\n      specified.\n   Description:  iTIP operation failed because\
    \ of an invalid property\n      parameter.\n"
- title: 3.6.16.  Status Code 3.3
  contents:
  - "3.6.16.  Status Code 3.3\n   Status Code:  3.3\n   Status Description:  Invalid\
    \ property parameter value.\n   Status Exception Data:  Property parameter name\
    \ and value MAY be\n      specified.\n   Description:  iTIP operation failed because\
    \ of an invalid property\n      parameter value.\n"
- title: 3.6.17.  Status Code 3.4
  contents:
  - "3.6.17.  Status Code 3.4\n   Status Code:  3.4\n   Status Description:  Invalid\
    \ calendar component sequence.\n   Status Exception Data:  Calendar component\
    \ sentinel MAY be specified\n      (e.g., BEGIN:VTIMEZONE).\n   Description: \
    \ iTIP operation failed because of an invalid component.\n"
- title: 3.6.18.  Status Code 3.5
  contents:
  - "3.6.18.  Status Code 3.5\n   Status Code:  3.5\n   Status Description:  Invalid\
    \ date or time.\n   Status Exception Data:  Date/time value(s) MAY be specified.\n\
    \   Description:  iTIP operation failed because of an invalid date or\n      time\
    \ property.\n"
- title: 3.6.19.  Status Code 3.6
  contents:
  - "3.6.19.  Status Code 3.6\n   Status Code:  3.6\n   Status Description:  Invalid\
    \ rule.\n   Status Exception Data:  RRULE property value MAY be specified.\n \
    \  Description:  iTIP operation failed because of an invalid rule\n      property.\n"
- title: 3.6.20.  Status Code 3.7
  contents:
  - "3.6.20.  Status Code 3.7\n   Status Code:  3.7\n   Status Description:  Invalid\
    \ Calendar User.\n   Status Exception Data:  ATTENDEE property value MAY be specified.\n\
    \   Description:  iTIP operation failed because of an invalid ATTENDEE\n     \
    \ property.\n"
- title: 3.6.21.  Status Code 3.8
  contents:
  - "3.6.21.  Status Code 3.8\n   Status Code:  3.8\n   Status Description:  No authority.\n\
    \   Status Exception Data:  METHOD and ATTENDEE property values MAY be\n     \
    \ specified.\n   Description:  iTIP operation failed because an Attendee does\
    \ not have\n      suitable privileges for the operation.\n"
- title: 3.6.22.  Status Code 3.9
  contents:
  - "3.6.22.  Status Code 3.9\n   Status Code:  3.9\n   Status Description:  Unsupported\
    \ version.\n   Status Exception Data:  VERSION property name and value MAY be\n\
    \      specified.\n   Description:  iTIP operation failed because the calendar\
    \ data version\n      is not supported.\n"
- title: 3.6.23.  Status Code 3.10
  contents:
  - "3.6.23.  Status Code 3.10\n   Status Code:  3.10\n   Status Description:  Request\
    \ entity too large.\n   Status Exception Data:  None.\n   Description:  iTIP operation\
    \ failed because the calendar data was too\n      large.\n"
- title: 3.6.24.  Status Code 3.11
  contents:
  - "3.6.24.  Status Code 3.11\n   Status Code:  3.11\n   Status Description:  Required\
    \ component or property missing.\n   Status Exception Data:  Component or property\
    \ name MAY be specified.\n   Description:  iTIP operation failed because the calendar\
    \ data did not\n      contain a required property or component.\n"
- title: 3.6.25.  Status Code 3.12
  contents:
  - "3.6.25.  Status Code 3.12\n   Status Code:  3.12\n   Status Description:  Unknown\
    \ component or property found.\n   Status Exception Data:  Component or property\
    \ name MAY be specified.\n   Description:  iTIP operation failed because the calendar\
    \ data\n      contained an unknown property or component.\n"
- title: 3.6.26.  Status Code 3.13
  contents:
  - "3.6.26.  Status Code 3.13\n   Status Code:  3.13\n   Status Description:  Unsupported\
    \ component or property found.\n   Status Exception Data:  Component or property\
    \ name MAY be specified.\n   Description:  iTIP operation failed because the calendar\
    \ data\n      contained an unsupported property or component.\n"
- title: 3.6.27.  Status Code 3.14
  contents:
  - "3.6.27.  Status Code 3.14\n   Status Code:  3.14\n   Status Description:  Unsupported\
    \ capability.\n   Status Exception Data:  METHOD or action MAY be specified.\n\
    \   Description:  iTIP operation failed because the operation is not\n      supported.\n"
- title: 3.6.28.  Status Code 4.0
  contents:
  - "3.6.28.  Status Code 4.0\n   Status Code:  4.0\n   Status Description:  Event\
    \ conflict.  Date/time is busy.\n   Status Exception Data:  DTSTART and DTEND\
    \ property names and values\n      MAY be specified.\n   Description:  iTIP operation\
    \ failed because the event overlaps the\n      date and time of another event.\n"
- title: 3.6.29.  Status Code 5.0
  contents:
  - "3.6.29.  Status Code 5.0\n   Status Code:  5.0\n   Status Description:  Request\
    \ not supported.\n   Status Exception Data:  METHOD property value MAY be specified.\n\
    \   Description:  iTIP operation failed because the operation is not\n      supported.\n"
- title: 3.6.30.  Status Code 5.1
  contents:
  - "3.6.30.  Status Code 5.1\n   Status Code:  5.1\n   Status Description:  Service\
    \ unavailable.\n   Status Exception Data:  ATTENDEE property value MAY be specified.\n\
    \   Description:  iTIP operation failed because scheduling is not active.\n"
- title: 3.6.31.  Status Code 5.2
  contents:
  - "3.6.31.  Status Code 5.2\n   Status Code:  5.2\n   Status Description:  Invalid\
    \ calendar service.\n   Status Exception Data:  ATTENDEE property value MAY be\
    \ specified.\n   Description:  iTIP operation failed because there is no scheduling\n\
    \      capability.\n"
- title: 3.6.32.  Status Code 5.3
  contents:
  - "3.6.32.  Status Code 5.3\n   Status Code:  5.3\n   Status Description:  No scheduling\
    \ support for user.\n   Status Exception Data:  ATTENDEE property value MAY be\
    \ specified.\n   Description:  iTIP operation failed because scheduling is not\
    \ enabled\n      for an Attendee.\n"
- title: 3.7.  Implementation Considerations
  contents:
  - '3.7.  Implementation Considerations

    '
- title: 3.7.1.  Working With Recurrence Instances
  contents:
  - "3.7.1.  Working With Recurrence Instances\n   iCalendar includes a recurrence\
    \ grammar to represent recurring\n   events.  The benefit of such a grammar is\
    \ the ability to represent a\n   number of events in a single object.  However,\
    \ while this simplifies\n   creation of a recurring event, meeting instances still\
    \ need to be\n   referenced.  For instance, an \"Attendee\" may decline the third\n\
    \   instance of a recurring Friday event.  Similarly, the \"Organizer\" may\n\
    \   change the time or location to a single instance of the recurring\n   event.\n\
    \   Since implementations may elect to store recurring events as either a\n  \
    \ single event object or a collection of discrete, related event\n   objects,\
    \ the protocol is designed so that each recurring instance may\n   be both referenced\
    \ and versioned.  Hence, implementations that choose\n   to maintain per-instance\
    \ properties (such as \"ATTENDEE\" property\n   \"PARTSTAT\" parameter) may do\
    \ so.  However, the protocol does not\n   require per-instance recognition unless\
    \ the instance itself must be\n   renegotiated.\n   The scenarios for recurrence\
    \ instance referencing are listed below.\n   For purposes of simplification, a\
    \ change to an event refers to a\n   \"trigger property.\"  That is, a property\
    \ that has a substantive\n   effect on the meeting itself, such as start time,\
    \ location, due date\n   (for \"VTODO\" calendar components), and possibly description.\n\
    \   \"Organizer\"-initiated actions:\n   o  deletes or changes a single instance\
    \ of a recurring event\n   o  makes changes that affect all future instances\n\
    \   o  makes changes that affect all previous instances\n   o  deletes or modifies\
    \ a previously changed instance\n   \"Attendee\"-initiated actions:\n   o  changes\
    \ status for a particular recurrence instance\n   o  sends a \"COUNTER\" for a\
    \ particular recurrence instance\n   An instance of a recurring event is assigned\
    \ a unique identification,\n   \"RECURRENCE-ID\" property, when that instance\
    \ is renegotiated.\n   Negotiation may be necessary when a substantive change\
    \ to the event\n   or to-do has been made (such as changing the start time, end\
    \ time,\n   due date, or location).  The \"Organizer\" can identify a specific\n\
    \   recurrence instance using the \"RECURRENCE-ID\" property.  The property\n\
    \   value is equal to the date/time of the instance.  If the \"Organizer\"\n \
    \  wishes to change the \"DTSTART\", the original, unmodified \"DTSTART\"\n  \
    \ value of the instance is used as the value \"RECURRENCE-ID\" property,\n   and\
    \ the new \"DTSTART\" and \"DTEND\" values reflect the change.\n"
- title: 3.7.2.  Attendee Property Considerations
  contents:
  - "3.7.2.  Attendee Property Considerations\n   The \"ORGANIZER\" property is required\
    \ on published events, to-dos, and\n   journal entries for two reasons.  First,\
    \ only the \"Organizer\" is\n   allowed to update and redistribute an event or\
    \ to-do component.  It\n   follows that the \"ORGANIZER\" property MUST be present\
    \ in the event,\n   to-do, or journal entry component so that the CUA has a basis\
    \ for\n   authorizing an update.  Second, it is prudent to provide a point of\n\
    \   contact for anyone who receives a published component, in case of\n   problems.\n\
    \   Email addresses that correspond to groups of \"Calendar Users\" could\n  \
    \ be specified as a mailto: URI [RFC2368] calendar user address.\n   Sending email\
    \ to such an address results in email being sent to\n   multiple recipients. \
    \ Such an address may be used as the value of an\n   \"ATTENDEE\" property.  Thus,\
    \ it is possible that the recipient of a\n   \"REQUEST\" does not appear explicitly\
    \ in the list.\n   It is recommended that the general approach to finding a \"\
    Calendar\n   User\" in an \"Attendee\" list be as follows:\n   1.  Search for\
    \ the \"Calendar User\" in the \"Attendee\" list where\n       \"CUTYPE=INDIVIDUAL\"\
    \n   2.  Failing (1), look for \"Attendees\" where \"CUTYPE=GROUP\" or\n     \
    \  \"CUTYPE=UNKNOWN\".  The CUA then determines if the \"Calendar User\"\n   \
    \    is a member of one of these groups.  If so, the \"REPLY\" method\n      \
    \ sent to the \"Organizer\" MUST contain a new \"ATTENDEE\" property in\n    \
    \   which:\n       *  the \"TYPE\" property parameter is set to INDIVIDUAL\n \
    \      *  the \"MEMBER\" property parameter is set to the name of the\n      \
    \    group\n   3.  Failing (2), the CUA MAY ignore or accept the request as the\n\
    \       \"Calendar User\" wishes.\n"
- title: 3.7.3.  Extension Tokens
  contents:
  - "3.7.3.  Extension Tokens\n   To make iCalendar objects extensible, new component,\
    \ property, or\n   property parameters can be used.  Two types of extensions are\
    \ defined\n   by [RFC5545]: IANA-registered tokens (\"iana-token\") and experimental\n\
    \   use tokens (\"x-name\").  A client SHOULD save \"iana-token's\" and MAY\n\
    \   use them in replies.  A client MAY save \"x-name's\" and MAY use them\n  \
    \ in replies.  When delegating or forwarding messages to other CUs, a\n   client\
    \ SHOULD include \"iana-token's\" and \"x-names's\".\n"
- title: 4.  Examples
  contents:
  - '4.  Examples

    '
- title: 4.1.  Published Event Examples
  contents:
  - "4.1.  Published Event Examples\n   In the calendaring and scheduling context,\
    \ publication refers to the\n   one-way transfer of event information.  Consumers\
    \ of published events\n   simply incorporate the event into a calendar.  No reply\
    \ is expected.\n   Individual \"A\" publishes an event.  Individual \"B\" reads\
    \ the event\n   and incorporates it into their calendar.  Events are published\
    \ in\n   several ways, including embedding the event as an object in a web\n \
    \  page, emailing the event to a distribution list, or posting the event\n   to\
    \ a newsgroup.\n   The table below illustrates the sequence of events between\
    \ the\n   publisher and the consumers of a published event.\n   +----------------+-----------------------+--------------------------+\n\
    \   | Action         | Organizer             | Receiver                 |\n  \
    \ +----------------+-----------------------+--------------------------+\n   |\
    \ Publish an     | \"A\" sends or posts a  | \"B\" reads a published    |\n  \
    \ | event          | PUBLISH message.      | event.                   |\n   |\
    \                |                       |                          |\n   | Publish\
    \ an     | \"A\" sends or posts a  | \"B\" reads the updated    |\n   | updated\
    \ event  | PUBLISH message.      | event.                   |\n   |          \
    \      |                       |                          |\n   | Cancel a   \
    \    | \"A\" sends or posts a  | \"B\" reads the canceled   |\n   | published\
    \      | CANCEL message.       | event publication.       |\n   | event      \
    \    |                       |                          |\n   +----------------+-----------------------+--------------------------+\n"
- title: 4.1.1.  A Minimal Published Event
  contents:
  - "4.1.1.  A Minimal Published Event\n   The iCalendar object below describes a\
    \ single event that begins on\n   July 1, 1997 at 20:00 UTC.  This event contains\
    \ the minimum set of\n   properties for a \"PUBLISH\" for a \"VEVENT\" calendar\
    \ component.\n      BEGIN:VCALENDAR\n      METHOD:PUBLISH\n      PRODID:-//Example/ExampleCalendarClient//EN\n\
    \      VERSION:2.0\n      BEGIN:VEVENT\n      ORGANIZER:mailto:a@example.com\n\
    \      DTSTART:19970701T200000Z\n      DTSTAMP:19970611T190000Z\n      SUMMARY:ST.\
    \ PAUL SAINTS -VS- DULUTH-SUPERIOR DUKES\n      UID:0981234-1234234-23@example.com\n\
    \      END:VEVENT\n      END:VCALENDAR\n"
- title: 4.1.2.  Changing a Published Event
  contents:
  - "4.1.2.  Changing a Published Event\n   The iCalendar object below describes an\
    \ update to the event described\n   in Section 4.1.1; the time has been changed,\
    \ an end time has been\n   added, and the sequence number has been adjusted.\n\
    \      BEGIN:VCALENDAR\n      METHOD:PUBLISH\n      VERSION:2.0\n      PRODID:-//Example/ExampleCalendarClient//EN\n\
    \      BEGIN:VEVENT\n      ORGANIZER:mailto:a@example.com\n      DTSTAMP:19970612T190000Z\n\
    \      DTSTART:19970701T210000Z\n      DTEND:19970701T230000Z\n      SEQUENCE:1\n\
    \      UID:0981234-1234234-23@example.com\n      SUMMARY:ST. PAUL SAINTS -VS-\
    \ DULUTH-SUPERIOR DUKES\n      END:VEVENT\n      END:VCALENDAR\n   The \"UID\"\
    \ property is used by the client to identify the event.  The\n   \"SEQUENCE\"\
    \ property indicates that this is a change to the event.\n   The event with a\
    \ matching \"UID\" and sequence number 0 is superseded\n   by this event.\n  \
    \ The \"SEQUENCE\" property provides a reliable way to distinguish\n   different\
    \ versions of the same event.  Each time an event is\n   published, its sequence\
    \ number is incremented.  If a client receives\n   an event with a sequence number\
    \ 5 and finds it has the same event\n   with sequence number 2, the event SHOULD\
    \ be updated.  However, if the\n   client received an event with sequence number\
    \ 2 and finds it already\n   has sequence number 5 of the same event, the event\
    \ MUST NOT be\n   updated.\n"
- title: 4.1.3.  Canceling a Published Event
  contents:
  - "4.1.3.  Canceling a Published Event\n   The iCalendar object below cancels the\
    \ event described in\n   Section 4.1.1.  This cancels the event with \"SEQUENCE\"\
    \ property of 0,\n   1, and 2.\n      BEGIN:VCALENDAR\n      METHOD:CANCEL\n \
    \     VERSION:2.0\n      PRODID:-//Example/ExampleCalendarClient//EN\n      BEGIN:VEVENT\n\
    \      ORGANIZER:mailto:a@example.com\n      COMMENT:DUKES forfeit the game\n\
    \      SEQUENCE:2\n      UID:0981234-1234234-23@example.com\n      DTSTAMP:19970613T190000Z\n\
    \      END:VEVENT\n      END:VCALENDAR\n"
- title: 4.1.4.  A Rich Published Event
  contents:
  - "4.1.4.  A Rich Published Event\n   This example describes the same event as in\
    \ Section 4.1.1, but in\n   much greater detail.\n      BEGIN:VCALENDAR\n    \
    \  PRODID:-//Example/ExampleCalendarClient//EN\n      METHOD:PUBLISH\n      SCALE:GREGORIAN\n\
    \      VERSION:2.0\n      BEGIN:VTIMEZONE\n      TZID:America-Chicago\n      TZURL:http://example.com/tz/America-Chicago\n\
    \      BEGIN:STANDARD\n      DTSTART:19671029T020000\n      RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=10\n\
    \      TZOFFSETFROM:-0500\n      TZOFFSETTO:-0600\n      TZNAME:CST\n      END:STANDARD\n\
    \      BEGIN:DAYLIGHT\n      DTSTART:19870405T020000\n      RRULE:FREQ=YEARLY;BYDAY=1SU;BYMONTH=4\n\
    \      TZOFFSETFROM:-0600\n      TZOFFSETTO:-0500\n      TZNAME:CDT\n      END:DAYLIGHT\n\
    \      END:VTIMEZONE\n      BEGIN:VEVENT\n      ORGANIZER:mailto:a@example.com\n\
    \      ATTACH:http://www.example.com/\n      CATEGORIES:SPORTS EVENT,ENTERTAINMENT\n\
    \      CLASS:PRIVATE\n      DESCRIPTION:MIDWAY STADIUM\\n\n       Big time game.\
    \  MUST see.\\n\n       Expected duration:2 hours\\n\n      DTEND;TZID=America-Chicago:19970701T180000\n\
    \      DTSTART;TZID=America-Chicago:19970702T160000\n      DTSTAMP:19970614T190000Z\n\
    \      STATUS:CONFIRMED\n      LOCATION;VALUE=URI:http://stadium.example.com/\n\
    \      PRIORITY:2\n      RESOURCES:SCOREBOARD\n      SEQUENCE:3\n      SUMMARY:ST.\
    \ PAUL SAINTS -VS- DULUTH-SUPERIOR DUKES\n      UID:0981234-1234234-23@example.com\n\
    \      RELATED-TO:0981234-1234234-14@example.com\n      BEGIN:VALARM\n      TRIGGER:-PT2H\n\
    \      ACTION:DISPLAY\n      DESCRIPTION:You should be leaving for the game now.\n\
    \      END:VALARM\n      BEGIN:VALARM\n      TRIGGER:-PT30M\n      ACTION:AUDIO\n\
    \      END:VALARM\n      END:VEVENT\n      END:VCALENDAR\n   The \"RELATED-TO\"\
    \ field contains the \"UID\" property of a related\n   calendar event.  The \"\
    SEQUENCE\" property 3 indicates that this event\n   supersedes versions 0, 1,\
    \ and 2.\n"
- title: 4.1.5.  Anniversaries or Events Attached to Entire Days
  contents:
  - "4.1.5.  Anniversaries or Events Attached to Entire Days\n   This example demonstrates\
    \ the use of the \"VALUE\" parameter to tie a\n   \"VEVENT\" to a day rather than\
    \ a specific time.\n      BEGIN:VCALENDAR\n      PRODID:-//Example/ExampleCalendarClient//EN\n\
    \      METHOD:PUBLISH\n      VERSION:2.0\n      BEGIN:VEVENT\n      ORGANIZER:mailto:a@example.com\n\
    \      DTSTAMP:19970614T190000Z\n      UID:0981234-1234234-23@example.com\n  \
    \    DTSTART;VALUE=DATE:19970714\n      RRULE:FREQ=YEARLY;INTERVAL=1\n      SUMMARY:\
    \ Bastille Day\n      END:VEVENT\n      END:VCALENDAR\n"
- title: 4.2.  Group Event Examples
  contents:
  - "4.2.  Group Event Examples\n   Group events are distinguished from published\
    \ events in that they\n   have \"Attendees\" and there is interaction between\
    \ the \"Attendees\" and\n   the \"Organizer\" with respect to the event.  Individual\
    \ \"A\" requests a\n   meeting between individuals \"A\", \"B\", \"C\", and \"\
    D\".  Individual \"B\"\n   confirms attendance to the meeting.  Individual \"\
    C\" declines\n   attendance.  Individual \"D\" tentatively confirms attendance.\
    \  The\n   following table illustrates the message flow between these\n   individuals.\
    \  \"A\", the CU scheduling the meeting, is referenced as\n   the \"Organizer\"\
    .\n   +--------------+-----------------------+----------------------------+\n\
    \   | Action       | \"Organizer\"           | Attendee                   |\n\
    \   +--------------+-----------------------+----------------------------+\n  \
    \ | Initiate a   | \"A\" sends a REQUEST   |                            |\n  \
    \ | meeting      | message to \"B\", \"C\",  |                            |\n\
    \   | request      | and \"D\".              |                            |\n\
    \   |              |                       |                            |\n  \
    \ | Accept the   |                       | \"B\" sends a REPLY message  |\n  \
    \ | meeting      |                       | to \"A\" with its ATTENDEE   |\n  \
    \ | request      |                       | PARTSTAT parameter set to  |\n   |\
    \              |                       | ACCEPTED.                  |\n   |  \
    \            |                       |                            |\n   | Decline\
    \ the  |                       | \"C\" sends a REPLY message  |\n   | meeting\
    \      |                       | to \"A\" with its ATTENDEE   |\n   | request\
    \      |                       | PARTSTAT parameter set to  |\n   |          \
    \    |                       | DECLINED.                  |\n   |            \
    \  |                       |                            |\n   | Tentatively  |\
    \                       | \"D\" sends a REPLY message  |\n   | accept the   |\
    \                       | to \"A\" with its ATTENDEE   |\n   | meeting      |\
    \                       | PARTSTAT parameter set to  |\n   | request      |  \
    \                     | TENTATIVE.                 |\n   |              |    \
    \                   |                            |\n   | Confirm      | \"A\"\
    \ sends a REQUEST   |                            |\n   | meeting      | message\
    \ to \"B\" and    |                            |\n   | status with  | \"D\" with\
    \ updated      |                            |\n   | Attendees    | information.\
    \          |                            |\n   +--------------+-----------------------+----------------------------+\n"
- title: 4.2.1.  A Group Event Request
  contents:
  - "4.2.1.  A Group Event Request\n   A sample meeting request is sent from \"A\"\
    \ to \"B\", \"C\", and \"D\".  \"E\"\n   is also sent a copy of the request but\
    \ is not expected to attend and\n   need not reply.  \"E\" illustrates how CUAs\
    \ might implement an \"FYI\"-\n   type feature.  Note the use of the \"ROLE\"\
    \ parameter.  The default\n   value for the \"ROLE\" parameter is \"REQ-PARTICIPANT\"\
    \ and it need not\n   be enumerated.  In this case, we are using the value \"\
    NON-\n   PARTICIPANT\" to indicate \"E\" is a non-attending CU.  The parameter\
    \ is\n   not needed on other \"Attendees\" since \"PARTICIPANT\" is the default\n\
    \   value.\n      BEGIN:VCALENDAR\n      PRODID:-//Example/ExampleCalendarClient//EN\n\
    \      METHOD:REQUEST\n      VERSION:2.0\n      BEGIN:VEVENT\n      ORGANIZER:mailto:a@example.com\n\
    \      ATTENDEE;ROLE=CHAIR;PARTSTAT=ACCEPTED;CN=A:mailto:a@example.com\n     \
    \ ATTENDEE;RSVP=TRUE;CUTYPE=INDIVIDUAL;CN=B:mailto:b@example.com\n      ATTENDEE;RSVP=TRUE;CUTYPE=INDIVIDUAL;CN=C:mailto:c@example.com\n\
    \      ATTENDEE;RSVP=TRUE;CUTYPE=INDIVIDUAL;CN=Hal:mailto:d@example.com\n    \
    \  ATTENDEE;RSVP=FALSE;CUTYPE=ROOM:conf_big@example.com\n      ATTENDEE;ROLE=NON-PARTICIPANT;RSVP=FALSE:mailto:e@example.com\n\
    \      DTSTAMP:19970611T190000Z\n      DTSTART:19970701T200000Z\n      DTEND:19970701T2100000Z\n\
    \      SUMMARY:Conference\n      UID:calsrv.example.com-873970198738777@example.com\n\
    \      SEQUENCE:0\n      STATUS:CONFIRMED\n      END:VEVENT\n      END:VCALENDAR\n"
- title: 4.2.2.  Reply to a Group Event Request
  contents:
  - "4.2.2.  Reply to a Group Event Request\n   \"Attendee\" \"B\" accepts the meeting.\n\
    \      BEGIN:VCALENDAR\n      PRODID:-//Example/ExampleCalendarClient//EN\n  \
    \    METHOD:REPLY\n      VERSION:2.0\n      BEGIN:VEVENT\n      ATTENDEE;PARTSTAT=ACCEPTED:mailto:b@example.com\n\
    \      ORGANIZER:mailto:a@example.com\n      UID:calsrv.example.com-873970198738777@example.com\n\
    \      SEQUENCE:0\n      REQUEST-STATUS:2.0;Success\n      DTSTAMP:19970612T190000Z\n\
    \      END:VEVENT\n      END:VCALENDAR\n   \"B\" could have declined the meeting\
    \ or indicated tentative acceptance\n   by setting the \"ATTENDEE\" \"PARTSTAT\"\
    \ parameter to \"DECLINED\" or\n   \"TENTATIVE\", respectively.  Also, \"REQUEST-STATUS\"\
    \ is not required in\n   successful transactions.\n"
- title: 4.2.3.  Update an Event
  contents:
  - "4.2.3.  Update an Event\n   The event is moved to a different time.  The combination\
    \ of the \"UID\"\n   property (unchanged) and the \"SEQUENCE\" (bumped to 1) properties\n\
    \   indicate the update.\n      BEGIN:VCALENDAR\n      PRODID:-//Example/ExampleCalendarClient//EN\n\
    \      METHOD:REQUEST\n      VERSION:2.0\n      BEGIN:VEVENT\n      ORGANIZER:mailto:a@example.com\n\
    \      ATTENDEE;ROLE=CHAIR;PARTSTAT=ACCEPTED:mailto:a@example.com\n      ATTENDEE;RSVP=TRUE;CUTYPE=INDIVIDUAL:mailto:b@example.com\n\
    \      ATTENDEE;RSVP=TRUE;CUTYPE=INDIVIDUAL:mailto:c@example.com\n      ATTENDEE;RSVP=TRUE;CUTYPE=INDIVIDUAL;CN=Hal:mailto:d@example.com\n\
    \      ATTENDEE;ROLE=NON-PARTICIPANT;RSVP=FALSE;\n       CUTYPE=ROOM:mailto:conf@example.com\n\
    \      ATTENDEE;ROLE=NON-PARTICIPANT;RSVP=FALSE:mailto:e@example.com\n      DTSTART:19970701T180000Z\n\
    \      DTEND:19970701T190000Z\n      SUMMARY:Phone Conference\n      UID:calsrv.example.com-873970198738777@example.com\n\
    \      SEQUENCE:1\n      DTSTAMP:19970613T190000Z\n      STATUS:CONFIRMED\n  \
    \    END:VEVENT\n      END:VCALENDAR\n"
- title: 4.2.4.  Countering an Event Proposal
  contents:
  - "4.2.4.  Countering an Event Proposal\n   \"A\" sends a \"REQUEST\" to \"B\" and\
    \ \"C\".  \"B\" makes a counter proposal\n   to \"A\" to change the time and location.\n\
    \   \"A\" sends the following \"REQUEST\":\n      BEGIN:VCALENDAR\n      PRODID:-//Example/ExampleCalendarClient//EN\n\
    \      METHOD:REQUEST\n      VERSION:2.0\n      BEGIN:VEVENT\n      ORGANIZER:mailto:a@example.com\n\
    \      ATTENDEE;ROLE=CHAIR;PARTSTAT=ACCEPTED:mailto:a@example.com\n      ATTENDEE;RSVP=TRUE;CUTYPE=INDIVIDUAL:mailto:b@example.com\n\
    \      ATTENDEE;RSVP=TRUE;CUTYPE=INDIVIDUAL:mailto:c@example.com\n      DTSTART:19970701T190000Z\n\
    \      DTEND:19970701T200000Z\n      SUMMARY:Discuss the Merits of the election\
    \ results\n      LOCATION:Green Conference Room\n      UID:calsrv.example.com-873970198738777a@example.com\n\
    \      SEQUENCE:0\n      DTSTAMP:19970611T190000Z\n      STATUS:CONFIRMED\n  \
    \    END:VEVENT\n      END:VCALENDAR\n   \"B\" sends \"COUNTER\" to \"A\", requesting\
    \ changes to time and place.\n   \"B\" uses the \"COMMENT\" property to communicate\
    \ a rationale for the\n   change.  Note that the \"SEQUENCE\" property is not\
    \ incremented on a\n   \"COUNTER\".\n      BEGIN:VCALENDAR\n      PRODID:-//Example/ExampleCalendarClient//EN\n\
    \      METHOD:COUNTER\n      VERSION:2.0\n      BEGIN:VEVENT\n      ORGANIZER:mailto:a@example.com\n\
    \      ATTENDEE;ROLE=CHAIR;PARTSTAT=ACCEPTED:mailto:a@example.com\n      ATTENDEE;RSVP=TRUE;CUTYPE=INDIVIDUAL:mailto:b@example.com\n\
    \      ATTENDEE;RSVP=TRUE;CUTYPE=INDIVIDUAL:mailto:c@example.com\n      DTSTART:19970701T160000Z\n\
    \      DTEND:19970701T170000Z\n      DTSTAMP:19970612T190000Z\n      SUMMARY:Discuss\
    \ the Merits of the election results\n      LOCATION:Blue Conference Room\n  \
    \    COMMENT:This time works much better and I think the big conference\n    \
    \   room is too big\n      UID:calsrv.example.com-873970198738777a@example.com\n\
    \      SEQUENCE:0\n      END:VEVENT\n      END:VCALENDAR\n   \"A\" accepts the\
    \ changes from \"B\".  To accept a counter proposal, the\n   \"Organizer\" sends\
    \ a new event \"REQUEST\" with an incremented sequence\n   number.\n      BEGIN:VCALENDAR\n\
    \      PRODID:-//Example/ExampleCalendarClient//EN\n      METHOD:REQUEST\n   \
    \   VERSION:2.0\n      BEGIN:VEVENT\n      ORGANIZER:mailto:a@example.com\n  \
    \    ATTENDEE;ROLE=CHAIR;PARTSTAT=ACCEPTED:mailto:a@example.com\n      ATTENDEE;RSVP=TRUE;CUTYPE=INDIVIDUAL:mailto:b@example.com\n\
    \      ATTENDEE;RSVP=TRUE;CUTYPE=INDIVIDUAL:mailto:c@example.com\n      DTSTAMP:19970613T190000Z\n\
    \      DTSTART:19970701T160000Z\n      DTEND:19970701T170000Z\n      SUMMARY:Discuss\
    \ the Merits of the election results - changed to\n       meet B's schedule\n\
    \      LOCATION:Blue Conference Room\n      UID:calsrv.example.com-873970198738777@example.com\n\
    \      SEQUENCE:1\n      STATUS:CONFIRMED\n      END:VEVENT\n      END:VCALENDAR\n\
    \   Instead, \"A\" rejects \"B's\" counter proposal.\n      BEGIN:VCALENDAR\n\
    \      PRODID:-//Example/ExampleCalendarClient//EN\n      METHOD:DECLINECOUNTER\n\
    \      VERSION:2.0\n      BEGIN:VEVENT\n      ORGANIZER:mailto:a@example.com\n\
    \      ATTENDEE;RSVP=TRUE;CUTYPE=INDIVIDUAL:mailto:b@example.com\n      COMMENT:Sorry,\
    \ I cannot change this meeting time\n      UID:calsrv.example.com-873970198738777@example.com\n\
    \      SEQUENCE:0\n      DTSTAMP:19970614T190000Z\n      END:VEVENT\n      END:VCALENDAR\n"
- title: 4.2.5.  Delegating an Event
  contents:
  - "4.2.5.  Delegating an Event\n   When delegating an event request to another \"\
    Calendar User\", the\n   \"Delegator\" must both update the \"Organizer\" with\
    \ a \"REPLY\" and send\n   a request to the \"Delegate\".  There is currently\
    \ no protocol\n   limitation to delegation depth.  It is possible for the original\n\
    \   delegate to delegate the meeting to someone else, and so on.  When a\n   request\
    \ is delegated from one CUA to another, there are a number of\n   responsibilities\
    \ required of the \"Delegator\".  The \"Delegator\" MUST:\n   o  Send a \"REPLY\"\
    \ to the \"Organizer\" with the following updates:\n      A.  The \"Delegator's\"\
    \ \"ATTENDEE\" property \"PARTSTAT\" parameter is\n          set to \"DELEGATED\"\
    \ and the \"DELEGATED-TO\" parameter is set to\n          the address of the \"\
    Delegate\".\n      B.  Add an additional \"ATTENDEE\" property for the \"Delegate\"\
    \ with\n          the \"DELEGATED-FROM\" property parameter set to the\n     \
    \     \"Delegator\".\n      C.  Indicate whether they want to continue to receive\
    \ updates when\n          the \"Organizer\" sends out updated versions of the\
    \ event.\n          Setting the \"RSVP\" property parameter to \"TRUE\" will cause\
    \ the\n          updates to be sent; setting it to \"FALSE\" causes no further\n\
    \          updates to be sent.  Note that in either case, if the\n          \"\
    Delegate\" declines the invitation, the \"Delegator\" will be\n          notified.\n\
    \   o  The \"Delegator\" MUST also send a copy of the original \"REQUEST\"\n \
    \     method to the \"Delegate\", with changes (A) and (B), as detailed\n    \
    \  above applied.\n   If the \"Delegate\" declines the meeting, the \"Organizer\"\
    \ MUST send an\n   update \"REQUEST\" to the \"Delegator\" so that the \"Delegator\"\
    \ may elect\n   to delegate the \"REQUEST\" to another CUA.\n   +----------------+-----------------+--------------------------------+\n\
    \   | Action         | \"Organizer\"     | Attendee                       |\n\
    \   +----------------+-----------------+--------------------------------+\n  \
    \ | Initiate a     | \"A\" sends a     |                                |\n  \
    \ | meeting        | REQUEST message |                                |\n   |\
    \ request        | to \"B\" and \"C\". |                                |\n  \
    \ |                |                 |                                |\n   |\
    \ Delegate: \"C\"  |                 | \"C\" sends a REPLY to \"A\" with  |\n\
    \   | delegates to   |                 | the ATTENDEE PARTSTAT          |\n  \
    \ | \"E\"            |                 | parameter set to DELEGATED and |\n  \
    \ |                |                 | with a new ATTENDEE property   |\n   |\
    \                |                 | for \"E\".  \"E's\" ATTENDEE       |\n  \
    \ |                |                 | DELEGATED-FROM parameter is    |\n   |\
    \                |                 | set to \"C\".  \"C's\" ATTENDEE    |\n  \
    \ |                |                 | DELEGATED-TO parameter is set  |\n   |\
    \                |                 | to \"E\".  \"C\" sends REQUEST     |\n  \
    \ |                |                 | message to \"E\" with the        |\n  \
    \ |                |                 | original meeting request       |\n   |\
    \                |                 | information.  The PARTSTAT     |\n   |  \
    \              |                 | property parameter for \"C\" is  |\n   |  \
    \              |                 | set to DELEGATED and the       |\n   |    \
    \            |                 | DELEGATED-TO parameter is set  |\n   |      \
    \          |                 | to the address of \"E\".  An     |\n   |      \
    \          |                 | ATTENDEE property is added for |\n   |        \
    \        |                 | \"E\" and the DELEGATED-FROM     |\n   |        \
    \        |                 | parameter is set to the        |\n   |          \
    \      |                 | address of \"C\".                |\n   |          \
    \      |                 |                                |\n   | Confirm    \
    \    |                 | \"E\" sends REPLY message to     |\n   | meeting    \
    \    |                 | \"A\", and optionally to \"C\",    |\n   | attendance\
    \     |                 | with its PARTSTAT property     |\n   |             \
    \   |                 | parameter set to ACCEPTED.     |\n   |               \
    \ |                 |                                |\n   | Optional:      |\
    \ \"A\" sends       |                                |\n   | Redistribute   |\
    \ REQUEST message |                                |\n   | meeting to     | to\
    \ \"B\", \"C\",    |                                |\n   | Attendees      | and\
    \ \"E\".        |                                |\n   +----------------+-----------------+--------------------------------+\n\
    \   \"C\" responds to the \"Organizer\".\n      BEGIN:VCALENDAR\n      PRODID:-//Example/ExampleCalendarClient//EN\n\
    \      METHOD:REPLY\n      VERSION:2.0\n      BEGIN:VEVENT\n      ORGANIZER:mailto:a@example.com\n\
    \      ATTENDEE;PARTSTAT=DELEGATED;DELEGATED-\n       TO=\"mailto:e@example.com\"\
    :mailto:c@example.com\n      UID:calsrv.example.com-873970198738777@example.com\n\
    \      SEQUENCE:0\n      REQUEST-STATUS:2.0;Success\n      DTSTAMP:19970611T190000Z\n\
    \      END:VEVENT\n      END:VCALENDAR\n   \"Attendee\" \"C\" delegates presence\
    \ at the meeting to \"E\".\n      BEGIN:VCALENDAR\n      PRODID:-//Example/ExampleCalendarClient//EN\n\
    \      METHOD:REQUEST\n      VERSION:2.0\n      BEGIN:VEVENT\n      ORGANIZER:mailto:a@example.com\n\
    \      ATTENDEE;PARTSTAT=DELEGATED;DELEGATED-\n       TO=\"mailto:e@example.com\"\
    :mailto:c@example.com\n      ATTENDEE;RSVP=TRUE;\n       DELEGATED-FROM=\"mailto:c@example.com\"\
    :mailto:e@example.com\n      DTSTART:19970701T180000Z\n      DTEND:19970701T200000Z\n\
    \      SUMMARY:Phone Conference\n      UID:calsrv.example.com-873970198738777@example.com\n\
    \      SEQUENCE:0\n      STATUS:CONFIRMED\n      DTSTAMP:19970611T190000Z\n  \
    \    END:VEVENT\n      END:VCALENDAR\n"
- title: 4.2.6.  Delegate Accepts the Meeting
  contents:
  - "4.2.6.  Delegate Accepts the Meeting\n   To accept a delegated meeting, the delegate,\
    \ \"E\", sends the following\n   message to \"A\" and \"C\".\n      BEGIN:VCALENDAR\n\
    \      PRODID:-//Example/ExampleCalendarClient//EN\n      METHOD:REPLY\n     \
    \ VERSION:2.0\n      BEGIN:VEVENT\n      ORGANIZER:mailto:a@example.com\n    \
    \  ATTENDEE;PARTSTAT=ACCEPTED;DELEGATED-\n       FROM=\"mailto:c@example.com\"\
    :mailto:e@example.com\n      ATTENDEE;PARTSTAT=DELEGATED;\n       DELEGATED-TO=\"\
    mailto:e@example.com\":mailto:c@example.com\n      UID:calsrv.example.com-873970198738777@example.com\n\
    \      SEQUENCE:0\n      REQUEST-STATUS:2.0;Success\n      DTSTAMP:19970614T190000Z\n\
    \      END:VEVENT\n      END:VCALENDAR\n"
- title: 4.2.7.  Delegate Declines the Meeting
  contents:
  - "4.2.7.  Delegate Declines the Meeting\n   In this example, the \"Delegate\" declines\
    \ the meeting request and sets\n   the \"ATTENDEE\" property \"PARTSTAT\" parameter\
    \ to \"DECLINED\".  The\n   \"Organizer\" SHOULD resend the \"REQUEST\" to \"\
    C\" with the \"PARTSTAT\"\n   parameter of the \"Delegate\" set to \"DECLINED\"\
    .  This lets the\n   \"Delegator\" know that the \"Delegate\" has declined and\
    \ provides an\n   opportunity to the \"Delegator\" to either accept the request\
    \ or\n   delegate it to another CU.\n   \"E\" responds to \"A\" and \"C\".  Note\
    \ the use of the \"COMMENT\" property\n   \"E\" uses to indicate why the delegation\
    \ was declined.\n      BEGIN:VCALENDAR\n      PRODID:-//Example/ExampleCalendarClient//EN\n\
    \      METHOD:REPLY\n      VERSION:2.0\n      BEGIN:VEVENT\n      ORGANIZER:mailto:a@example.com\n\
    \      ATTENDEE;PARTSTAT=DELEGATED;\n       DELEGATED-TO=\"mailto:e@example.com\"\
    :mailto:c@example.com\n      ATTENDEE;PARTSTAT=DECLINED;\n       DELEGATED-FROM=\"\
    mailto:c@example.com\":mailto:e@example.com\n      COMMENT:Sorry, I will be out\
    \ of town at that time.\n      UID:calsrv.example.com-873970198738777@example.com\n\
    \      SEQUENCE:0\n      REQUEST-STATUS:2.0;Success\n      DTSTAMP:19970614T190000Z\n\
    \      END:VEVENT\n      END:VCALENDAR\n   \"A\" resends the \"REQUEST\" method\
    \ to \"C\".  \"A\" may also wish to\n   express the fact that the item was delegated\
    \ in the \"COMMENT\"\n   property.\n      BEGIN:VCALENDAR\n      PRODID:-//Example/ExampleCalendarClient//EN\n\
    \      METHOD:REQUEST\n      VERSION:2.0\n      BEGIN:VEVENT\n      ORGANIZER:mailto:a@example.com\n\
    \      ATTENDEE;PARTSTAT=DECLINED;\n       DELEGATED-FROM=\"mailto:c@example.com\"\
    :mailto:e@example.com\n      ATTENDEE;RSVP=TRUE:mailto:c@example.com\n      UID:calsrv.example.com-873970198738777@example.com\n\
    \      SEQUENCE:0\n      SUMMARY:Phone Conference\n      DTSTART:19970701T180000Z\n\
    \      DTEND:19970701T200000Z\n      DTSTAMP:19970614T200000Z\n      COMMENT:DELEGATE\
    \ (ATTENDEE mailto:e@example.com) DECLINED YOUR\n       INVITATION\n      END:VEVENT\n\
    \      END:VCALENDAR\n"
- title: 4.2.8.  Forwarding an Event Request
  contents:
  - "4.2.8.  Forwarding an Event Request\n   The protocol does not prevent an \"Attendee\"\
    \ from \"forwarding\" a\n   \"VEVENT\" calendar component to other \"Calendar\
    \ Users\".  Forwarding\n   differs from delegation in that the forwarded \"Calendar\
    \ User\" (often\n   referred to as a \"Party Crasher\") does not replace the forwarding\n\
    \   \"Calendar User\".  Implementations are not required to add the \"Party\n\
    \   Crasher\" to the \"Attendee\" list, and hence there is no guarantee that\n\
    \   a \"Party Crasher\" will receive additional updates to the event.  The\n \
    \  forwarding \"Calendar User\" SHOULD NOT add the \"Party Crasher\" to the\n\
    \   \"Attendee\" list.  The \"Organizer\" MAY add the forwarded \"Calendar\n \
    \  User\" to the \"Attendee\" list.\n"
- title: 4.2.9.  Cancel a Group Event
  contents:
  - "4.2.9.  Cancel a Group Event\n   Individual \"A\" requests a meeting between\
    \ individuals \"A\", \"B\", \"C\",\n   and \"D\".  Individual \"B\" declines attendance\
    \ to the meeting.\n   Individual \"A\" decides to cancel the meeting.  The following\
    \ table\n   illustrates the sequence of messages that would be exchanged between\n\
    \   these individuals.\n   Messages related to a previously canceled event (\"\
    SEQUENCE\" property\n   value is less than the \"SEQUENCE\" property value of\
    \ the \"CANCEL\"\n   message) MUST be ignored.\n   +-------------+---------------------+-------------------------------+\n\
    \   | Action      | Organizer           | Attendee                      |\n  \
    \ +-------------+---------------------+-------------------------------+\n   |\
    \ Initiate a  | \"A\" sends a REQUEST |                               |\n   |\
    \ meeting     | message to \"B\",     |                               |\n   |\
    \ request     | \"C\", and \"D\".       |                               |\n  \
    \ |             |                     |                               |\n   |\
    \ Decline the |                     | \"B\" sends a REPLY message to  |\n   |\
    \ meeting     |                     | \"A\" with its PARTSTAT         |\n   |\
    \ request     |                     | parameter set to DECLINED.    |\n   |  \
    \           |                     |                               |\n   | Cancel\
    \ the  | \"A\" sends a CANCEL  |                               |\n   | meeting\
    \     | message to \"B\",     |                               |\n   |        \
    \     | \"C\", and \"D\".       |                               |\n   +-------------+---------------------+-------------------------------+\n\
    \   This example shows how \"A\" cancels the event.\n      BEGIN:VCALENDAR\n \
    \     PRODID:-//Example/ExampleCalendarClient//EN\n      METHOD:CANCEL\n     \
    \ VERSION:2.0\n      BEGIN:VEVENT\n      ORGANIZER:mailto:a@example.com\n    \
    \  ATTENDEE;CUTYPE=INDIVIDUAL;mailto:a@example.com\n      ATTENDEE;CUTYPE=INDIVIDUAL:mailto:b@example.com\n\
    \      ATTENDEE;CUTYPE=INDIVIDUAL:mailto:c@example.com\n      ATTENDEE;CUTYPE=INDIVIDUAL:mailto:d@example.com\n\
    \      COMMENT:Mr. B cannot attend.  It's raining.  Lets cancel.\n      UID:calsrv.example.com-873970198738777@example.com\n\
    \      SEQUENCE:1\n      STATUS:CANCELLED\n      DTSTAMP:19970613T190000Z\n  \
    \    END:VEVENT\n      END:VCALENDAR\n"
- title: 4.2.10.  Removing Attendees
  contents:
  - "4.2.10.  Removing Attendees\n   \"A\" wants to remove \"B\" from a meeting. \
    \ This is done by sending a\n   \"CANCEL\" to \"B\" and removing \"B\" from the\
    \ \"Attendee\" list in the\n   master copy of the event.\n   +--------------------+-----------------------------------+----------+\n\
    \   | Action             | Organizer                         | Attendee |\n  \
    \ +--------------------+-----------------------------------+----------+\n   |\
    \ Remove \"B\" as an   | \"A\" sends a CANCEL message to     |          |\n  \
    \ | Attendee           | \"B\".                              |          |\n  \
    \ |                    |                                   |          |\n   |\
    \ Update the master  | \"A\" optionally sends the updated  |          |\n   |\
    \ copy of the event  | event to the remaining Attendees. |          |\n   +--------------------+-----------------------------------+----------+\n\
    \   The original meeting includes \"A\", \"B\", \"C\", and \"D\".  The example\n\
    \   below shows the \"CANCEL\" that \"A\" sends to \"B\".  Note that in the\n\
    \   example below, the \"STATUS\" property is omitted.  This is used when\n  \
    \ the meeting itself is cancelled and not when the intent is to remove\n   an\
    \ \"Attendee\" from the event.\n      BEGIN:VCALENDAR\n      PRODID:-//Example/ExampleCalendarClient//EN\n\
    \      METHOD:CANCEL\n      VERSION:2.0\n      BEGIN:VEVENT\n      ORGANIZER:mailto:a@example.com\n\
    \      ATTENDEE:mailto:b@example.com\n      COMMENT:You're off the hook for this\
    \ meeting\n      UID:calsrv.example.com-873970198738777@example.com\n      DTSTAMP:19970613T193000Z\n\
    \      SEQUENCE:1\n      END:VEVENT\n      END:VCALENDAR\n   The updated master\
    \ copy of the event is shown below.  The \"Organizer\"\n   MAY resend the updated\
    \ event to the remaining \"Attendees\".  Note that\n   \"B\" has been removed.\n\
    \      BEGIN:VCALENDAR\n      PRODID:-//Example/ExampleCalendarClient//EN\n  \
    \    METHOD:REQUEST\n      VERSION:2.0\n      BEGIN:VEVENT\n      ORGANIZER:mailto:a@example.com\n\
    \      ATTENDEE;ROLE=CHAIR;PARTSTAT=ACCEPTED:mailto:a@example.com\n      ATTENDEE;CUTYPE=INDIVIDUAL:mailto:c@example.com\n\
    \      ATTENDEE;CUTYPE=INDIVIDUAL:mailto:d@example.com\n      ATTENDEE;CUTYPE=ROOM:mailto:cr_big@example.com\n\
    \      ATTENDEE;ROLE=NON-PARTICIPANT;\n       RSVP=FALSE:mailto:e@example.com\n\
    \      DTSTAMP:19970611T190000Z\n      DTSTART:19970701T200000Z\n      DTEND:19970701T203000Z\n\
    \      SUMMARY:Phone Conference\n      UID:calsrv.example.com-873970198738777@example.com\n\
    \      SEQUENCE:2\n      STATUS:CONFIRMED\n      END:VEVENT\n      END:VCALENDAR\n"
- title: 4.2.11.  Replacing the Organizer
  contents:
  - "4.2.11.  Replacing the Organizer\n   The scenario for this example begins with\
    \ \"A\" as the \"Organizer\" for\n   a recurring meeting with \"B\", \"C\", and\
    \ \"D\".  \"A\" receives a new job\n   offer in another country and drops out\
    \ of touch.  \"A\" left no\n   forwarding address or way to be reached.  Using\
    \ out-of-band\n   communication, the other \"Attendees\" eventually learn what\
    \ has\n   happened and reach an agreement that \"B\" should become the new\n \
    \  \"Organizer\" for the meeting.  To do this, \"B\" sends out a new version\n\
    \   of the event and the other \"Attendees\" agree to accept \"B\" as the new\n\
    \   \"Organizer\".  \"B\" also removes \"A\" from the event.\n   When the \"Organizer\"\
    \ is replaced, the \"SEQUENCE\" property value MUST\n   be incremented.\n   This\
    \ is the message \"B\" sends to \"C\" and \"D\".\n      BEGIN:VCALENDAR\n    \
    \  PRODID:-//Example/ExampleCalendarClient//EN\n      METHOD:REQUEST\n      VERSION:2.0\n\
    \      BEGIN:VEVENT\n      ORGANIZER:mailto:b@example.com\n      ATTENDEE;ROLE=CHAIR;STATUS=ACCEPTED:mailto:b@example.com\n\
    \      ATTENDEE;CUTYPE=INDIVIDUAL:mailto:c@example.com\n      ATTENDEE;CUTYPE=INDIVIDUAL:mailto:d@example.com\n\
    \      DTSTAMP:19970611T190000Z\n      DTSTART:19970701T200000Z\n      DTEND:19970701T203000Z\n\
    \      RRULE:FREQ=WEEKLY\n      SUMMARY:Phone Conference\n      UID:123456@example.com\n\
    \      SEQUENCE:1\n      STATUS:CONFIRMED\n      END:VEVENT\n      END:VCALENDAR\n"
- title: 4.3.  Busy Time Examples
  contents:
  - "4.3.  Busy Time Examples\n   Busy time objects can be used in several ways. \
    \ First, a CU may\n   request busy time from another CU for a specific range of\
    \ time.  That\n   request can be answered with a busy time \"REPLY\".  Additionally,\
    \ a CU\n   may simply publish their busy time for a given interval and point\n\
    \   other CUs to the published location.  The following examples outline\n   both\
    \ scenarios.\n"
- title: 4.3.1.  Publish Busy Time
  contents:
  - "4.3.1.  Publish Busy Time\n   Individual \"A\" publishes busy time for one week.\n\
    \      BEGIN:VCALENDAR\n      PRODID:-//Example/ExampleCalendarClient//EN\n  \
    \    VERSION:2.0\n      METHOD:PUBLISH\n      BEGIN:VFREEBUSY\n      DTSTAMP:19980101T124100Z\n\
    \      ORGANIZER:mailto:a@example.com\n      DTSTART:19980101T124200Z\n      DTEND:19980108T124200Z\n\
    \      FREEBUSY:19980101T180000Z/19980101T190000Z\n      FREEBUSY:19980103T020000Z/19980103T050000Z\n\
    \      FREEBUSY:19980107T020000Z/19980107T050000Z\n      FREEBUSY:19980113T000000Z/19980113T010000Z\n\
    \      FREEBUSY:19980115T190000Z/19980115T200000Z\n      FREEBUSY:19980115T220000Z/19980115T230000Z\n\
    \      FREEBUSY:19980116T013000Z/19980116T043000Z\n      END:VFREEBUSY\n     \
    \ END:VCALENDAR\n"
- title: 4.3.2.  Request Busy Time
  contents:
  - "4.3.2.  Request Busy Time\n   Individual \"A\" requests busy time from individuals\
    \ \"B\" and \"C\".\n   Individuals \"B\" and \"C\" reply with busy time data to\
    \ individual \"A\".\n   The following table illustrates the sequence of messages\
    \ that would\n   be exchanged between these individuals.\n   +---------------------+--------------------+------------------------+\n\
    \   | Action              | Organizer          | Attendee               |\n  \
    \ +---------------------+--------------------+------------------------+\n   |\
    \ Initiate a busy     | \"A\" sends REQUEST  |                        |\n   |\
    \ time request        | message to \"B\" and |                        |\n   |\
    \                     | \"C\".               |                        |\n   |\
    \                     |                    |                        |\n   | Reply\
    \ to the BUSY   |                    | \"B\" sends a REPLY      |\n   | request\
    \ with BUSY   |                    | message to \"A\" with    |\n   | time data\
    \           |                    | busy time data.        |\n   +---------------------+--------------------+------------------------+\n\
    \   \"A\" sends a \"REQUEST\" to \"B\" and \"C\" for busy time.\n      BEGIN:VCALENDAR\n\
    \      PRODID:-//Example/ExampleCalendarClient//EN\n      METHOD:REQUEST\n   \
    \   VERSION:2.0\n      BEGIN:VFREEBUSY\n      ORGANIZER:mailto:a@example.com\n\
    \      ATTENDEE;ROLE=CHAIR:mailto:a@example.com\n      ATTENDEE:mailto:b@example.com\n\
    \      ATTENDEE:mailto:c@example.com\n      DTSTAMP:19970613T190000Z\n      DTSTART:19970701T080000Z\n\
    \      DTEND:19970701T200000\n      UID:calsrv.example.com-873970198738777@example.com\n\
    \      END:VFREEBUSY\n      END:VCALENDAR\n"
- title: 4.3.3.  Reply to a Busy Time Request
  contents:
  - "4.3.3.  Reply to a Busy Time Request\n   \"B\" sends a \"REPLY\" method type\
    \ of a \"VFREEBUSY\" calendar component\n   to \"A\".\n      BEGIN:VCALENDAR\n\
    \      PRODID:-//Example/ExampleCalendarClient//EN\n      METHOD:REPLY\n     \
    \ VERSION:2.0\n      BEGIN:VFREEBUSY\n      ORGANIZER:mailto:a@example.com\n \
    \     ATTENDEE:mailto:b@example.com\n      DTSTART:19970701T080000Z\n      DTEND:19970701T200000Z\n\
    \      UID:calsrv.example.com-873970198738777@example.com\n      FREEBUSY:19970701T090000Z/PT1H,19970701T140000Z/PT30M\n\
    \      DTSTAMP:19970613T190030Z\n      END:VFREEBUSY\n      END:VCALENDAR\n  \
    \ \"B\" is busy from 09:00 to 10:00 and from 14:00 to 14:30.\n"
- title: 4.4.  Recurring Event and Time Zone Examples
  contents:
  - '4.4.  Recurring Event and Time Zone Examples

    '
- title: 4.4.1.  A Recurring Event Spanning Time Zones
  contents:
  - "4.4.1.  A Recurring Event Spanning Time Zones\n   This event describes a weekly\
    \ phone conference.  The \"Attendees\" are\n   each in a different time zone.\n\
    \      BEGIN:VCALENDAR\n      PRODID:-//Example/ExampleCalendarClient//EN\n  \
    \    METHOD:REQUEST\n      VERSION:2.0\n      BEGIN:VTIMEZONE\n      TZID:America-SanJose\n\
    \      TZURL:http://example.com/tz/America-SanJose\n      BEGIN:STANDARD\n   \
    \   DTSTART:19671029T020000\n      RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=10\n \
    \     TZOFFSETFROM:-0700\n      TZOFFSETTO:-0800\n      TZNAME:PST\n      END:STANDARD\n\
    \      BEGIN:DAYLIGHT\n      DTSTART:19870405T020000\n      RRULE:FREQ=YEARLY;BYDAY=1SU;BYMONTH=4\n\
    \      TZOFFSETFROM:-0800\n      TZOFFSETTO:-0700\n      TZNAME:PDT\n      END:DAYLIGHT\n\
    \      END:VTIMEZONE\n      BEGIN:VEVENT\n      ORGANIZER:mailto:a@example.com\n\
    \      ATTENDEE;ROLE=CHAIR;PARTSTAT=ACCEPTED;\n       CUTYPE=INDIVIDUAL:a@example.com\n\
    \      ATTENDEE;RSVP=TRUE;CUTYPE=INDIVIDUAL:b@example.fr\n      ATTENDEE;RSVP=TRUE;CUTYPE=INDIVIDUAL:c@example.jp\n\
    \      DTSTAMP:19970613T190030Z\n      DTSTART;TZID=America-SanJose:19970701T140000\n\
    \      DTEND;TZID=America-SanJose:19970701T150000\n      RRULE:FREQ=WEEKLY;COUNT=20;WKST=SU;BYDAY=TU\n\
    \      RDATE;TZID=America-SanJose:19970910T140000\n      EXDATE;TZID=America-SanJose:19970909T140000\n\
    \      EXDATE;TZID=America-SanJose:19971028T140000\n      SUMMARY:Weekly Phone\
    \ Conference\n      UID:calsrv.example.com-873970198738777@example.com\n     \
    \ SEQUENCE:0\n      STATUS:CONFIRMED\n      END:VEVENT\n      END:VCALENDAR\n\
    \   The first component of this iCalendar object is the time zone\n   component.\
    \  The \"DTSTART\" date coincides with the first instance of\n   the \"RRULE\"\
    \ property.\n   The recurring meeting is defined in a particular time zone,\n\
    \   presumably that of the originator.  The client for each \"Attendee\"\n   has\
    \ the responsibility of determining the recurrence time in the\n   \"Attendee's\"\
    \ time zone.\n   The repeating event starts on Tuesday, July 1, 1997 at 2:00pm\
    \ PDT\n   (UTC-7).  \"Attendee\" B@example.fr is in France, where the local time\n\
    \   on this date is 9 hours ahead of PDT, or 23:00 CEST (UTC+2).\n   \"Attendee\"\
    \ C@example.jp is in Japan, where local time is 16 hours\n   ahead of PDT, or\
    \ Wednesday, July 2 at 06:00 JST (UTC+9).  The event\n   repeats weekly on Tuesdays\
    \ (in PST/PDT).  The \"RRULE\" property\n   results in 20 instances.  The last\
    \ instance falls on Tuesday,\n   November 11, 1997 2:00pm PST.  The \"RDATE\"\
    \ property adds another\n   instance: WED, 10-SEP-1997 2:00 PM PDT.\n   There\
    \ are also two exception dates to the recurrence rule.  The first\n   one is:\n\
    \   o  TUE, 09-SEP-1997 14:00 PDT (UTC-7)\n   o  TUE, 09-SEP-1997 23:00 CEST (UTC+2)\n\
    \   o  WED, 10-SEP-1997 06:00 JST (UTC+9)\n   and the second is:\n   o  TUE, 28-OCT-1997\
    \ 14:00 PST (UTC-8)\n   o  TUE, 28-OCT-1997 23:00 CET (UTC+1)\n   o  WED, 29-OCT-1997\
    \ 07:00 JST (UTC+9)\n"
- title: 4.4.2.  Modify a Recurring Instance
  contents:
  - "4.4.2.  Modify a Recurring Instance\n   In this example, the \"Organizer\" issues\
    \ a recurring meeting.  Later,\n   the \"Organizer\" changes an instance of the\
    \ event by changing the\n   \"DTSTART\" property.  Note the use of \"RECURRENCE-ID\"\
    \ property and\n   \"SEQUENCE\" property in the second request.\n   Original Request:\n\
    \      BEGIN:VCALENDAR\n      METHOD:REQUEST\n      PRODID:-//Example/ExampleCalendarClient//EN\n\
    \      VERSION:2.0\n      BEGIN:VEVENT\n      UID:guid-1@example.com\n      SEQUENCE:0\n\
    \      RRULE:FREQ=MONTHLY;BYMONTHDAY=1;UNTIL=19980901T210000Z\n      ORGANIZER:mailto:a@example.com\n\
    \      ATTENDEE;ROLE=CHAIR;PARTSTAT=ACCEPTED:mailto:a@example.com\n      ATTENDEE:mailto:b@example.com\n\
    \      ATTENDEE:mailto:c@example.com\n      ATTENDEE:mailto:d@example.com\n  \
    \    DESCRIPTION:IETF-C&S Conference Call\n      CLASS:PUBLIC\n      SUMMARY:IETF\
    \ Calendaring Working Group Meeting\n      DTSTART:19970601T210000Z\n      DTEND:19970601T220000Z\n\
    \      LOCATION:Conference Call\n      DTSTAMP:19970526T083000Z\n      STATUS:CONFIRMED\n\
    \      END:VEVENT\n      END:VCALENDAR\n   The event request below is to change\
    \ the time of a specific instance.\n   This changes the July 1st instance to July\
    \ 3rd.\n      BEGIN:VCALENDAR\n      METHOD:REQUEST\n      PRODID:-//Example/ExampleCalendarClient//EN\n\
    \      VERSION:2.0\n      BEGIN:VEVENT\n      UID:guid-1@example.com\n      RECURRENCE-ID:19970701T210000Z\n\
    \      SEQUENCE:1\n      ORGANIZER:mailto:a@example.com\n      ATTENDEE;ROLE=CHAIR;PARTSTAT=ACCEPTED:mailto:a@example.com\n\
    \      ATTENDEE:mailto:b@example.com\n      ATTENDEE:mailto:c@example.com\n  \
    \    ATTENDEE:mailto:d@example.com\n      DESCRIPTION:IETF-C&S Conference Call\n\
    \      CLASS:PUBLIC\n      SUMMARY:IETF Calendaring Working Group Meeting\n  \
    \    DTSTART:19970703T210000Z\n      DTEND:19970703T220000Z\n      LOCATION:Conference\
    \ Call\n      DTSTAMP:19970626T093000Z\n      STATUS:CONFIRMED\n      END:VEVENT\n\
    \      END:VCALENDAR\n"
- title: 4.4.3.  Cancel an Instance
  contents:
  - "4.4.3.  Cancel an Instance\n   In this example, the \"Organizer\" of a recurring\
    \ event deletes the\n   August 1st instance.\n      BEGIN:VCALENDAR\n      METHOD:CANCEL\n\
    \      PRODID:-//Example/ExampleCalendarClient//EN\n      VERSION:2.0\n      BEGIN:VEVENT\n\
    \      UID:guid-1@example.com\n      ORGANIZER:mailto:a@example.com\n      ATTENDEE;ROLE=CHAIR;PARTSTAT=ACCEPTED:mailto:a@example.com\n\
    \      ATTENDEE:mailto:b@example.com\n      ATTENDEE:mailto:c@example.com\n  \
    \    ATTENDEE:mailto:d@example.com\n      RECURRENCE-ID:19970801T210000Z\n   \
    \   SEQUENCE:2\n      STATUS:CANCELLED\n      DTSTAMP:19970721T093000Z\n     \
    \ END:VEVENT\n      END:VCALENDAR\n"
- title: 4.4.4.  Cancel a Recurring Event
  contents:
  - "4.4.4.  Cancel a Recurring Event\n   In this example, the \"Organizer\" wishes\
    \ to cancel the entire\n   recurring event and any exceptions.\n      BEGIN:VCALENDAR\n\
    \      METHOD:CANCEL\n      PRODID:-//Example/ExampleCalendarClient//EN\n    \
    \  VERSION:2.0\n      BEGIN:VEVENT\n      UID:guid-1@example.com\n      ORGANIZER:mailto:a@example.com\n\
    \      ATTENDEE;ROLE=CHAIR;PARTSTAT=ACCEPTED:mailto:a@example.com\n      ATTENDEE:mailto:b@example.com\n\
    \      ATTENDEE:mailto:c@example.com\n      ATTENDEE:mailto:d@example.com\n  \
    \    DTSTAMP:19970721T103000Z\n      STATUS:CANCELLED\n      SEQUENCE:3\n    \
    \  END:VEVENT\n      END:VCALENDAR\n"
- title: 4.4.5.  Change All Future Instances
  contents:
  - "4.4.5.  Change All Future Instances\n   This example changes the meeting location\
    \ from a conference call to\n   Seattle, starting September 1 and extending to\
    \ all future instances.\n      BEGIN:VCALENDAR\n      METHOD:REQUEST\n      PRODID:-//Example/ExampleCalendarClient//EN\n\
    \      VERSION:2.0\n      BEGIN:VEVENT\n      UID:guid-1@example.com\n      RECURRENCE-ID;THISANDFUTURE:19970901T210000Z\n\
    \      SEQUENCE:3\n      ORGANIZER:mailto:a@example.com\n      ATTENDEE;ROLE=CHAIR;PARTSTAT=ACCEPTED:mailto:a@example.com\n\
    \      ATTENDEE;RSVP=TRUE:mailto:b@example.com\n      ATTENDEE;RSVP=TRUE:mailto:c@example.com\n\
    \      ATTENDEE;RSVP=TRUE:mailto:d@example.com\n      DESCRIPTION:IETF-C&S Discussion\n\
    \      CLASS:PUBLIC\n      SUMMARY:IETF Calendaring Working Group Meeting\n  \
    \    DTSTART:19970901T210000Z\n      DTEND:19970901T220000Z\n      LOCATION:Building\
    \ 32, Microsoft, Seattle, WA\n      DTSTAMP:19970526T083000Z\n      STATUS:CONFIRMED\n\
    \      END:VEVENT\n      END:VCALENDAR\n"
- title: 4.4.6.  Add a New Instance to a Recurring Event
  contents:
  - "4.4.6.  Add a New Instance to a Recurring Event\n   This example adds a one-time\
    \ additional instance to the recurring\n   event.  \"Organizer\" adds a second\
    \ July meeting on the 15th.\n      BEGIN:VCALENDAR\n      METHOD:ADD\n      PRODID:-//Example/ExampleCalendarClient//EN\n\
    \      VERSION:2.0\n      BEGIN:VEVENT\n      UID:123456789@example.com\n    \
    \  SEQUENCE:4\n      ORGANIZER:mailto:a@example.com\n      ATTENDEE;ROLE=CHAIR;PARTSTAT=ACCEPTED:mailto:a@example.com\n\
    \      ATTENDEE;RSVP=TRUE:mailto:b@example.com\n      ATTENDEE;RSVP=TRUE:mailto:c@example.com\n\
    \      ATTENDEE;RSVP=TRUE:mailto:d@example.com\n      DESCRIPTION:IETF-C&S Conference\
    \ Call\n      CLASS:PUBLIC\n      SUMMARY:IETF Calendaring Working Group Meeting\n\
    \      DTSTART:19970715T210000Z\n      DTEND:19970715T220000Z\n      LOCATION:Conference\
    \ Call\n      DTSTAMP:19970629T093000Z\n      STATUS:CONFIRMED\n      END:VEVENT\n\
    \      END:VCALENDAR\n"
- title: 4.4.7.  Add a New Series of Instances to a Recurring Event
  contents:
  - "4.4.7.  Add a New Series of Instances to a Recurring Event\n   The scenario for\
    \ this example involves an ongoing meeting, originally\n   set up to occur every\
    \ Tuesday.  The \"Organizer\" later decides that\n   the meetings need to be on\
    \ Tuesdays and Thursdays.\n   The original event:\n      BEGIN:VCALENDAR\n   \
    \   METHOD:REQUEST\n      PRODID:-//Example/ExampleCalendarClient//EN\n      VERSION:2.0\n\
    \      BEGIN:VEVENT\n      UID:123456789@example.com\n      SEQUENCE:0\n     \
    \ RRULE:WKST=SU;BYDAY=TU;FREQ=WEEKLY\n      ORGANIZER:mailto:a@example.com\n \
    \     ATTENDEE;ROLE=CHAIR;PARTSTAT=ACCEPTED:mailto:a@example.com\n      ATTENDEE;RSVP=TRUE:mailto:b@example.com\n\
    \      SUMMARY:Review Accounts\n      DTSTART:19980303T210000Z\n      DTEND:19980303T220000Z\n\
    \      LOCATION:The White Room\n      DTSTAMP:19980301T093000Z\n      STATUS:CONFIRMED\n\
    \      END:VEVENT\n      END:VCALENDAR\n   The entire event can be rescheduled\
    \ using a \"REQUEST\".  This is done\n   by using the \"UID\" of the event to\
    \ reschedule and including the\n   modified \"RRULE\".  Note that since this is\
    \ an entire rescheduling of\n   the event, any instance-specific information will\
    \ be lost, unless\n   explicitly included with the update \"REQUEST\".\n     \
    \ BEGIN:VCALENDAR\n      METHOD:REQUEST\n      PRODID:-//Example/ExampleCalendarClient//EN\n\
    \      VERSION:2.0\n      BEGIN:VEVENT\n      UID:123456789@example.com\n    \
    \  SEQUENCE:7\n      RRULE:WKST=SU;BYDAY=TU,TH;FREQ=WEEKLY\n      ORGANIZER:mailto:a@example.com\n\
    \      ATTENDEE;ROLE=CHAIR;PARTSTAT=ACCEPTED:mailto:a@example.com\n      ATTENDEE;RSVP=TRUE:mailto:b@example.com\n\
    \      SUMMARY:Review Accounts\n      DTSTART:19980303T210000Z\n      DTEND:19980303T220000Z\n\
    \      DTSTAMP:19980303T193000Z\n      LOCATION:The White Room\n      STATUS:CONFIRMED\n\
    \      END:VEVENT\n      END:VCALENDAR\n"
- title: 4.4.8.  Refreshing a Recurring Event
  contents:
  - "4.4.8.  Refreshing a Recurring Event\n   The next series of examples illustrate\
    \ how an \"Organizer\" would\n   respond to a \"REFRESH\" submitted by an \"Attendee\"\
    \ after a series of\n   instance-specific modifications.  To convey all instance-specific\n\
    \   changes, the \"Organizer\" must provide the latest event description\n   and\
    \ the relevant instances.  The first three examples show the\n   history, including\
    \ the initial \"VEVENT\" request and subsequent\n   instance changes, and finally\
    \ the \"REFRESH\".\n   Original Request:\n      BEGIN:VCALENDAR\n      METHOD:REQUEST\n\
    \      PRODID:-//Example/ExampleCalendarClient//EN\n      VERSION:2.0\n      BEGIN:VEVENT\n\
    \      UID:123456789@example.com\n      SEQUENCE:0\n      RDATE:19980304T180000Z\n\
    \      RDATE:19980311T180000Z\n      RDATE:19980318T180000Z\n      ORGANIZER:mailto:a@example.com\n\
    \      ATTENDEE;ROLE=CHAIR;PARTSTAT=ACCEPTED:mailto:a@example.com\n      ATTENDEE;RSVP=TRUE:mailto:b@example.com\n\
    \      SUMMARY:Review Accounts\n      DTSTART:19980304T180000Z\n      DTEND:19980304T200000Z\n\
    \      DTSTAMP:19980303T193000Z\n      LOCATION:Conference Room A\n      STATUS:CONFIRMED\n\
    \      END:VEVENT\n      END:VCALENDAR\n   Organizer changes 2nd instance location\
    \ and time:\n      BEGIN:VCALENDAR\n      METHOD:REQUEST\n      PRODID:-//Example/ExampleCalendarClient//EN\n\
    \      VERSION:2.0\n      BEGIN:VEVENT\n      UID:123456789@example.com\n    \
    \  SEQUENCE:1\n      RECURRENCE-ID:19980311T180000Z\n      ORGANIZER:mailto:a@example.com\n\
    \      ATTENDEE;ROLE=CHAIR;PARTSTAT=ACCEPTED:mailto:a@example.com\n      ATTENDEE;RSVP=TRUE:mailto:b@example.com\n\
    \      SUMMARY:Review Accounts\n      DTSTART:19980311T160000Z\n      DTEND:19980311T180000Z\n\
    \      DTSTAMP:19980306T193000Z\n      LOCATION:The Small conference room\n  \
    \    STATUS:CONFIRMED\n      END:VEVENT\n      END:VCALENDAR\n   Organizer adds\
    \ a 4th instance of the meeting using the \"ADD\" method.\n      BEGIN:VCALENDAR\n\
    \      METHOD:ADD\n      PRODID:-//Example/ExampleCalendarClient//EN\n      VERSION:2.0\n\
    \      BEGIN:VEVENT\n      UID:123456789@example.com\n      SEQUENCE:2\n     \
    \ ORGANIZER:mailto:a@example.com\n      ATTENDEE;ROLE=CHAIR;PARTSTAT=ACCEPTED:mailto:a@example.com\n\
    \      ATTENDEE;RSVP=TRUE:mailto:b@example.com\n      SUMMARY:Review Accounts\n\
    \      DTSTART:19980315T180000Z\n      DTEND:19980315T200000Z\n      DTSTAMP:19980307T193000Z\n\
    \      LOCATION:Conference Room A\n      STATUS:CONFIRMED\n      END:VEVENT\n\
    \      END:VCALENDAR\n   If \"B\" requests a \"REFRESH\", \"A\" responds with\
    \ the following to\n   capture all instance-specific data.  In this case, both\
    \ the initial\n   request and an additional \"VEVENT\" that specifies the instance-\n\
    \   specific data are included.  Because these are both of the same type\n   (they\
    \ are both \"VEVENTS\"), they can be conveyed in the same iCalendar\n   object.\n\
    \      BEGIN:VCALENDAR\n      METHOD:REQUEST\n      PRODID:-//Example/ExampleCalendarClient//EN\n\
    \      VERSION:2.0\n      BEGIN:VEVENT\n      UID:123456789@example.com\n    \
    \  SEQUENCE:2\n      RDATE:19980304T180000Z\n      RDATE:19980311T160000Z\n  \
    \    RDATE:19980315T180000Z\n      ORGANIZER:mailto:a@example.com\n      ATTENDEE;ROLE=CHAIR;PARTSTAT=ACCEPTED:mailto:a@example.com\n\
    \      ATTENDEE;RSVP=TRUE:mailto:b@example.com\n      SUMMARY:Review Accounts\n\
    \      DTSTART:19980304T180000Z\n      DTEND:19980304T200000Z\n      DTSTAMP:19980303T193000Z\n\
    \      LOCATION:Conference Room A\n      STATUS:CONFIRMED\n      END:VEVENT\n\
    \      BEGIN:VEVENT\n      SEQUENCE:2\n      UID:123456789@example.com\n     \
    \ RECURRENCE-ID:19980311T160000Z\n      ATTENDEE;ROLE=CHAIR;PARTSTAT=ACCEPTED:mailto:a@example.com\n\
    \      ATTENDEE;RSVP=TRUE:mailto:b@example.com\n      SUMMARY:Review Accounts\n\
    \      DTSTART:19980311T160000Z\n      DTEND:19980304T180000Z\n      DTSTAMP:19980306T193000Z\n\
    \      LOCATION:The Small conference room\n      STATUS:CONFIRMED\n      END:VEVENT\n\
    \      END:VCALENDAR\n"
- title: 4.4.9.  Counter an Instance of a Recurring Event
  contents:
  - "4.4.9.  Counter an Instance of a Recurring Event\n   In this example, one of\
    \ the \"Attendees\" counters the \"DTSTART\"\n   property of the proposed second\
    \ July meeting.\n      BEGIN:VCALENDAR\n      METHOD:COUNTER\n      PRODID:-//Example/ExampleCalendarClient//EN\n\
    \      VERSION:2.0\n      BEGIN:VEVENT\n      UID:guid-1@example.com\n      RECURRENCE-ID:19970715T210000Z\n\
    \      SEQUENCE:4\n      ORGANIZER:mailto:a@example.com\n      ATTENDEE;ROLE=CHAIR;RSVP=TRUE:mailto:a@example.com\n\
    \      ATTENDEE;RSVP=TRUE:mailto:b@example.com\n      ATTENDEE;RSVP=TRUE:mailto:c@example.com\n\
    \      ATTENDEE;RSVP=TRUE:mailto:d@example.com\n      DESCRIPTION:IETF-C&S Conference\
    \ Call\n      CLASS:PUBLIC\n      SUMMARY:IETF Calendaring Working Group Meeting\n\
    \      DTSTART:19970715T220000Z\n      DTEND:19970715T230000Z\n      LOCATION:Conference\
    \ Call\n      COMMENT:May we bump this by an hour? I have a conflict\n      DTSTAMP:19970629T094000Z\n\
    \      END:VEVENT\n      END:VCALENDAR\n"
- title: 4.4.10.  Error Reply to a Request
  contents:
  - "4.4.10.  Error Reply to a Request\n   The following example illustrates a scenario\
    \ where a meeting is\n   proposed containing an unsupported property and a bad\
    \ property.\n   Original Request:\n      BEGIN:VCALENDAR\n      METHOD:REQUEST\n\
    \      PRODID:-//Example/ExampleCalendarClient//EN\n      VERSION:2.0\n      BEGIN:VEVENT\n\
    \      UID:guid-1@example.com\n      SEQUENCE:0\n      RRULE:FREQ=MONTHLY;BYMONTHDAY=1\n\
    \      ORGANIZER:mailto:a@example.com\n      ATTENDEE;ROLE=CHAIR:mailto:a@example.com\n\
    \      ATTENDEE;RSVP=TRUE:mailto:b@example.com\n      ATTENDEE;RSVP=TRUE:mailto:c@example.com\n\
    \      ATTENDEE;RSVP=TRUE:mailto:d@example.com\n      DESCRIPTION:IETF-C&S Conference\
    \ Call\n      CLASS:PUBLIC\n      SUMMARY:IETF Calendaring Working Group Meeting\n\
    \      DTSTART:19970601T210000Z\n      DTEND:19970601T220000Z\n      DTSTAMP:19970602T094000Z\n\
    \      LOCATION:Conference Call\n      STATUS:CONFIRMED\n      FOO:BAR\n     \
    \ END:VEVENT\n      END:VCALENDAR\n   \"B\" responds to indicate that \"RRULE\"\
    \ is not supported and that an\n   unrecognized property was encountered.\n  \
    \    BEGIN:VCALENDAR\n      PRODID:-//Example/ExampleCalendarClient//EN\n    \
    \  METHOD:REPLY\n      VERSION:2.0\n      BEGIN:VEVENT\n      ORGANIZER:mailto:a@example.com\n\
    \      ATTENDEE:mailto:b@example.com\n      REQUEST-STATUS:3.0;Invalid Property\
    \ Name;FOO\n      UID:guid-1@example.com\n      SEQUENCE:0\n      DTSTAMP:19970603T094000Z\n\
    \      END:VEVENT\n      END:VCALENDAR\n"
- title: 4.5.  Group To-Do Examples
  contents:
  - "4.5.  Group To-Do Examples\n   Individual \"A\" creates a group task in which\
    \ individuals \"A\", \"B\",\n   \"C\", and \"D\" will participate.  Individual\
    \ \"B\" confirms acceptance of\n   the task.  Individual \"C\" declines the task.\
    \  Individual \"D\"\n   tentatively accepts the task.  The following table illustrates\
    \ the\n   sequence of messages that would be exchanged between these\n   individuals.\
    \  Individual \"A\" then issues a \"REQUEST\" method to obtain\n   the status\
    \ of the to-do from each participant.  The response\n   indicates the individual\
    \ \"Attendee's\" completion status.  The table\n   below illustrates the message\
    \ flow.\n   +--------------+------------------------+---------------------------+\n\
    \   | Action       | Organizer              | Attendee                  |\n  \
    \ +--------------+------------------------+---------------------------+\n   |\
    \ Initiate a   | \"A\" sends a REQUEST    |                           |\n   |\
    \ to-do        | message to \"B\", \"C\",   |                           |\n  \
    \ | request      | and \"D\".               |                           |\n  \
    \ |              |                        |                           |\n   |\
    \ Accept the   |                        | \"B\" sends a REPLY message |\n   |\
    \ to-do        |                        | to \"A\" with its PARTSTAT  |\n   |\
    \ request      |                        | parameter set to          |\n   |  \
    \            |                        | ACCEPTED.                 |\n   |    \
    \          |                        |                           |\n   | Decline\
    \ the  |                        | \"C\" sends a REPLY message |\n   | to-do  \
    \      |                        | to \"A\" with its PARTSTAT  |\n   | request\
    \      |                        | parameter set to          |\n   |          \
    \    |                        | DECLINED.                 |\n   |            \
    \  |                        |                           |\n   | Tentatively  |\
    \                        | \"D\" sends a REPLY message |\n   | accept the   |\
    \                        | to \"A\" with its PARTSTAT  |\n   | to-do        |\
    \                        | parameter set to          |\n   | request      |  \
    \                      | TENTATIVE.                |\n   |              |    \
    \                    |                           |\n   | Check        | \"A\"\
    \ sends a REQUEST    |                           |\n   | Attendee     | message\
    \ to \"B\" and \"D\" |                           |\n   | completion   | with current\
    \           |                           |\n   | status       | information.  \
    \         |                           |\n   |              |                 \
    \       |                           |\n   | Attendee     |                   \
    \     | \"B\" sends a REPLY message |\n   | indicates    |                   \
    \     | indicating percent        |\n   | percent      |                     \
    \   | complete.                 |\n   | complete     |                       \
    \ |                           |\n   |              |                        |\
    \                           |\n   | Attendee     |                        | \"\
    D\" sends a REPLY message |\n   | indicates    |                        | indicating\
    \ completion.    |\n   | completion   |                        |             \
    \              |\n   +--------------+------------------------+---------------------------+\n"
- title: 4.5.1.  A VTODO Request
  contents:
  - "4.5.1.  A VTODO Request\n   A sample \"REQUEST\" for a \"VTODO\" calendar component\
    \ that \"A\" sends to\n   \"B\", \"C\", and \"D\".\n      BEGIN:VCALENDAR\n  \
    \    PRODID:-//Example/ExampleCalendarClient//EN\n      METHOD:REQUEST\n     \
    \ VERSION:2.0\n      BEGIN:VTODO\n      ORGANIZER:mailto:a@example.com\n     \
    \ ATTENDEE;ROLE=CHAIR:mailto:a@example.com\n      ATTENDEE;RSVP=TRUE:mailto:b@example.com\n\
    \      ATTENDEE;RSVP=TRUE:mailto:c@example.com\n      ATTENDEE;RSVP=TRUE:mailto:d@example.com\n\
    \      DTSTART:19970701T170000Z\n      DUE:19970722T170000Z\n      PRIORITY:1\n\
    \      SUMMARY:Create the requirements document\n      UID:calsrv.example.com-873970198738777-00@example.com\n\
    \      SEQUENCE:0\n      DTSTAMP:19970717T200000Z\n      STATUS:NEEDS-ACTION\n\
    \      END:VTODO\n      END:VCALENDAR\n"
- title: 4.5.2.  A VTODO Reply
  contents:
  - "4.5.2.  A VTODO Reply\n   \"B\" accepts the to-do.\n      BEGIN:VCALENDAR\n \
    \     PRODID:-//Example/ExampleCalendarClient//EN\n      METHOD:REPLY\n      VERSION:2.0\n\
    \      BEGIN:VTODO\n      ORGANIZER:mailto:a@example.com\n      ATTENDEE;PARTSTAT=ACCEPTED:mailto:b@example.com\n\
    \      UID:calsrv.example.com-873970198738777-00@example.com\n      COMMENT:I'll\
    \ send you my input by email\n      SEQUENCE:0\n      DTSTAMP:19970717T203000Z\n\
    \      REQUEST-STATUS:2.0;Success\n      END:VTODO\n      END:VCALENDAR\n   \"\
    B\" could have declined the \"VTODO\" or indicated tentative acceptance\n   by\
    \ setting the \"PARTSTAT\" property parameter sequence to \"DECLINED\"\n   or\
    \ \"TENTATIVE\", respectively.\n"
- title: 4.5.3.  A VTODO Request for Updated Status
  contents:
  - "4.5.3.  A VTODO Request for Updated Status\n   \"A\" requests status from all\
    \ \"Attendees\".\n      BEGIN:VCALENDAR\n      PRODID:-//Example/ExampleCalendarClient//EN\n\
    \      METHOD:REQUEST\n      VERSION:2.0\n      BEGIN:VTODO\n      ORGANIZER:mailto:a@example.com\n\
    \      ATTENDEE;ROLE=CHAIR:mailto:a@example.com\n      ATTENDEE;RSVP=TRUE;CUTYPE=INDIVIDUAL:mailto:b@example.com\n\
    \      ATTENDEE;RSVP=TRUE;CUTYPE=INDIVIDUAL:mailto:d@example.com\n      UID:calsrv.example.com-873970198738777-00@example.com\n\
    \      SUMMARY:Create the requirements document\n      PRIORITY:1\n      SEQUENCE:0\n\
    \      STATUS:IN-PROCESS\n      DTSTART:19970701T170000Z\n      DTSTAMP:19970717T230000Z\n\
    \      END:VTODO\n      END:VCALENDAR\n"
- title: '4.5.4.  A Reply: Percent-Complete'
  contents:
  - "4.5.4.  A Reply: Percent-Complete\n   A reply indicating the task being worked\
    \ on and that \"B\" is 75%\n   complete with \"B's\" part of the assignment.\n\
    \      BEGIN:VCALENDAR\n      PRODID:-//Example/ExampleCalendarClient//EN\n  \
    \    METHOD:REPLY\n      VERSION:2.0\n      BEGIN:VTODO\n      ORGANIZER:mailto:a@example.com\n\
    \      ATTENDEE;PARTSTAT=IN-PROCESS:mailto:b@example.com\n      PERCENT-COMPLETE:75\n\
    \      UID:calsrv.example.com-873970198738777-00@example.com\n      DTSTAMP:19970717T233000Z\n\
    \      SEQUENCE:0\n      END:VTODO\n      END:VCALENDAR\n"
- title: '4.5.5.  A Reply: Completed'
  contents:
  - "4.5.5.  A Reply: Completed\n   A reply indicating that \"D\" completed \"D's\"\
    \ part of the assignment.\n      BEGIN:VCALENDAR\n      PRODID:-//Example/ExampleCalendarClient//EN\n\
    \      METHOD:REPLY\n      VERSION:2.0\n      BEGIN:VTODO\n      ORGANIZER:mailto:a@example.com\n\
    \      ATTENDEE;PARTSTAT=COMPLETED:mailto:d@example.com\n      UID:calsrv.example.com-873970198738777-00@example.com\n\
    \      DTSTAMP:19970717T233000Z\n      SEQUENCE:0\n      END:VTODO\n      END:VCALENDAR\n"
- title: 4.5.6.  An Updated VTODO Request
  contents:
  - "4.5.6.  An Updated VTODO Request\n   \"Organizer\" \"A\" resends the \"VTODO\"\
    \ calendar component.  \"A\" sets the\n   overall completion for the to-do at\
    \ 40%.\n      BEGIN:VCALENDAR\n      PRODID:-//Example/ExampleCalendarClient//EN\n\
    \      METHOD:REQUEST\n      VERSION:2.0\n      BEGIN:VTODO\n      ORGANIZER:mailto:a@example.com\n\
    \      ATTENDEE;ROLE=CHAIR;PARTSTAT=ACCEPTED:mailto:a@example.com\n      ATTENDEE;PARTSTAT=ACCEPTED;CUTYPE=INDIVIDUAL:mailto:b@example.com\n\
    \      ATTENDEE;PARTSTAT=COMPLETED;CUTYPE=INDIVIDUAL:mailto:d@example.com\n  \
    \    DTSTART:19970701T170000Z\n      DUE:19970722T170000Z\n      PRIORITY:1\n\
    \      SUMMARY:Create the requirements document\n      UID:calsrv.example.com-873970198738777-00@example.com\n\
    \      SEQUENCE:1\n      DTSTAMP:19970718T100000Z\n      STATUS:IN-PROCESS\n \
    \     PERCENT-COMPLETE:40\n      END:VTODO\n      END:VCALENDAR\n"
- title: 4.5.7.  Recurring VTODOs
  contents:
  - "4.5.7.  Recurring VTODOs\n   The following examples relate to recurring \"VTODO\"\
    \ calendar\n   components.\n"
- title: 4.5.7.1.  Request for a Recurring VTODO
  contents:
  - "4.5.7.1.  Request for a Recurring VTODO\n   In this example, \"A\" sends a recurring\
    \ \"VTODO\" calendar component to\n   \"B\" and \"D\".\n      BEGIN:VCALENDAR\n\
    \      PRODID:-//Example/ExampleCalendarClient//EN\n      METHOD:REQUEST\n   \
    \   VERSION:2.0\n      BEGIN:VTODO\n      ORGANIZER:mailto:a@example.com\n   \
    \   ATTENDEE;ROLE=CHAIR:mailto:a@example.com\n      ATTENDEE;RSVP=TRUE;CUTYPE=INDIVIDUAL:mailto:b@example.com\n\
    \      ATTENDEE;RSVP=TRUE;CUTYPE=INDIVIDUAL:mailto:d@example.com\n      RRULE:FREQ=MONTHLY;COUNT=10;BYDAY=1FR\n\
    \      DTSTART:19980101T100000Z\n      DUE:19980103T100000Z\n      SUMMARY:Send\
    \ Status Reports to Area Managers\n      UID:calsrv.example.com-873970198738777-00@example.com\n\
    \      SEQUENCE:0\n      DTSTAMP:19970717T200000Z\n      STATUS:NEEDS-ACTION\n\
    \      PRIORITY:1\n      END:VTODO\n      END:VCALENDAR\n"
- title: 4.5.7.2.  Replying to an Instance of a Recurring VTODO
  contents:
  - "4.5.7.2.  Replying to an Instance of a Recurring VTODO\n   In this example, \"\
    B\" updates \"A\" on a single instance of the \"VTODO\"\n   calendar component.\n\
    \      BEGIN:VCALENDAR\n      PRODID:-//Example/ExampleCalendarClient//EN\n  \
    \    METHOD:REPLY\n      VERSION:2.0\n      BEGIN:VTODO\n      ATTENDEE;PARTSTAT=IN-PROCESS:mailto:b@example.com\n\
    \      PERCENT-COMPLETE:75\n      UID:calsrv.example.com-873970198738777-00@example.com\n\
    \      DTSTAMP:19970717T233000Z\n      RECURRENCE-ID:19980101T170000Z\n      SEQUENCE:1\n\
    \      END:VTODO\n      END:VCALENDAR\n"
- title: 4.6.  Journal Examples
  contents:
  - "4.6.  Journal Examples\n   The iCalendar object below describes a single journal\
    \ entry for\n   October 2, 1997.  The \"RELATED-TO\" property references the phone\n\
    \   conference event for which minutes were taken.\n      BEGIN:VCALENDAR\n  \
    \    METHOD:PUBLISH\n      PRODID:-//Example/ExampleCalendarClient//EN\n     \
    \ VERSION:2.0\n      BEGIN:VJOURNAL\n      DTSTART:19971002T200000Z\n      DTSTAMP:19970717T233100Z\n\
    \      ORGANIZER:mailto:a@example.com\n      SUMMARY:Phone conference minutes\n\
    \      DESCRIPTION:The editors meeting was held on October 1, 1997.\n       Details\
    \ are in the attached document.\n      UID:0981234-1234234-2410@example.com\n\
    \      RELATED-TO:0981234-1234234-2402-35@example.com\n      ATTACH:ftp://ftp.example.com/pub/ed/minutes100197.txt\n\
    \      END:VJOURNAL\n      END:VCALENDAR\n"
- title: 4.7.  Other Examples
  contents:
  - '4.7.  Other Examples

    '
- title: 4.7.1.  Event Refresh
  contents:
  - "4.7.1.  Event Refresh\n   Refresh the event with a \"UID\" property value of\n\
    \   \"guid-1-12345@example.com\":\n      BEGIN:VCALENDAR\n      PRODID:-//Example/ExampleCalendarClient//EN\n\
    \      METHOD:REFRESH\n      VERSION:2.0\n      BEGIN:VEVENT\n      ORGANIZER:mailto:a@example.com\n\
    \      ATTENDEE;ROLE=CHAIR;PARTSTAT=ACCEPTED:mailto:a@example.com\n      ATTENDEE:mailto:b@example.com\n\
    \      ATTENDEE:mailto:c@example.com\n      ATTENDEE:mailto:d@example.com\n  \
    \    UID:guid-1-12345@example.com\n      DTSTAMP:19970603T094000\n      END:VEVENT\n\
    \      END:VCALENDAR\n"
- title: 4.7.2.  Bad RECURRENCE-ID
  contents:
  - "4.7.2.  Bad RECURRENCE-ID\n   Component instances are identified by the combination\
    \ of \"UID\",\n   \"RECURRENCE-ID\", and \"SEQUENCE\".  When an \"Organizer\"\
    \ sends an iTIP\n   message to an \"Attendee\", there are three cases in which\
    \ an instance\n   cannot be found.  They are:\n   1.  The component with the referenced\
    \ \"UID\" and \"RECURRENCE-ID\" has\n       been found but the \"SEQUENCE\" number\
    \ in the calendar store does\n       not match that of the iTIP message.\n   2.\
    \  The component with the referenced \"UID\" has been found, the\n       \"SEQUENCE\"\
    \ numbers match, but the \"RECURRENCE-ID\" cannot be\n       found.\n   3.  The\
    \ \"UID\" and \"SEQUENCE\" numbers are found but the CUA does not\n       support\
    \ recurrences.\n   In case (1), two things can happen.  If the \"SEQUENCE\" number\
    \ of the\n   \"Attendee's\" instance is larger than that in the \"Organizer's\"\
    \n   message, then the \"Attendee\" is receiving an out-of-sequence message\n\
    \   and MUST ignore it.  If the \"SEQUENCE\" number of the \"Attendee's\"\n  \
    \ instance is smaller, then the \"Organizer\" is sending out a newer\n   version\
    \ of the component and the \"Attendee's\" version needs to be\n   updated.  Since\
    \ one or more updates have been missed, the \"Attendee\"\n   SHOULD send a \"\
    REFRESH\" message to the \"Organizer\" to get an updated\n   version of the event.\n\
    \   In case (2), something has gone wrong.  Both the \"Organizer\" and the\n \
    \  \"Attendee\" should have the same instances, but the \"Attendee\" does\n  \
    \ not have the referenced instance.  In this case, the \"Attendee\"\n   SHOULD\
    \ send a \"REFRESH\" to the \"Organizer\" to get an updated version\n   of the\
    \ event.\n   In case (3), the limitations of the \"Attendee's\" CUA makes it\n\
    \   impossible to match an instance other than the single instance\n   scheduled.\
    \  In this case, the \"Attendee\" need not send a \"REFRESH\" to\n   the \"Organizer\"\
    .\n   The example below shows a sequence in which an \"Attendee\" sends a\n  \
    \ \"REFRESH\" to the \"Organizer\".\n   +-------------------------+--------------------+--------------------+\n\
    \   | Action                  | Organizer          | Attendee           |\n  \
    \ +-------------------------+--------------------+--------------------+\n   |\
    \ Update an instance      | \"A\" sends REQUEST  |                    |\n   |\
    \ request                 | message to \"B\".    |                    |\n   |\
    \                         |                    |                    |\n   | Attendee\
    \ requests       |                    | \"B\" sends a        |\n   | refresh because\
    \         |                    | REFRESH message to |\n   | RECURRENCE-ID was\
    \ not   |                    | \"A\".               |\n   | found            \
    \       |                    |                    |\n   |                    \
    \     |                    |                    |\n   | Refresh the entire   \
    \   | \"A\" sends the      |                    |\n   | event                \
    \   | latest copy of the |                    |\n   |                        \
    \ | event to \"B\"       |                    |\n   |                        \
    \ |                    |                    |\n   | Attendee handles the    |\
    \                    | \"B\" updates to the |\n   | request and updates the |\
    \                    | latest copy of the |\n   | instance                |  \
    \                  | meeting.           |\n   +-------------------------+--------------------+--------------------+\n\
    \   Request from \"A\":\n      BEGIN:VCALENDAR\n      METHOD:REQUEST\n      PRODID:-//Example/ExampleCalendarClient//EN\n\
    \      VERSION:2.0\n      BEGIN:VEVENT\n      UID:example-12345@example.com\n\
    \      SEQUENCE:3\n      RRULE:FREQ=WEEKLY\n      RDATE;VALUE=PERIOD:19970819T210000Z/199700819T220000Z\n\
    \      ORGANIZER:mailto:a@example.com\n      ATTENDEE;ROLE=CHAIR;PARTSTAT=ACCEPTED:mailto:a@example.com\n\
    \      ATTENDEE:mailto:b@example.com\n      DESCRIPTION:IETF-C&S Conference Call\n\
    \      SUMMARY:IETF Calendaring Working Group Meeting\n      DTSTART:19970801T210000Z\n\
    \      DTEND:19970801T220000Z\n      RECURRENCE-ID:19970809T210000Z\n      DTSTAMP:19970726T083000\n\
    \      STATUS:CONFIRMED\n      END:VEVENT\n      END:VCALENDAR\n   \"B\" has the\
    \ event with \"UID\" property \"example-12345@example.com\",\n   but \"B's\" \"\
    SEQUENCE\" property value is \"1\" and the event does not\n   have an instance\
    \ at the specified recurrence time.  This means that\n   \"B\" has missed at least\
    \ one update and needs a new copy of the event.\n   \"B\" requests the latest\
    \ copy of the event with the following refresh\n   message:\n      BEGIN:VCALENDAR\n\
    \      PRODID:-//Example/ExampleCalendarClient//EN\n      METHOD:REFRESH\n   \
    \   VERSION:2.0\n      BEGIN:VEVENT\n      ORGANIZER:mailto:a@example.com\n  \
    \    ATTENDEE:mailto:b@example.com\n      UID:example-12345@example.com\n    \
    \  DTSTAMP:19970603T094000\n      END:VEVENT\n      END:VCALENDAR\n"
- title: 5.  Application Protocol Fallbacks
  contents:
  - '5.  Application Protocol Fallbacks

    '
- title: 5.1.  Partial Implementation
  contents:
  - "5.1.  Partial Implementation\n   Applications that support this specification\
    \ are not required to\n   support the entire protocol.  The following describes\
    \ how methods and\n   properties SHOULD \"fallback\" in applications that do not\
    \ support the\n   complete protocol.  If a method or property is not addressed\
    \ in this\n   section, it may be ignored.\n"
- title: 5.1.1.  Event-Related Fallbacks
  contents:
  - "5.1.1.  Event-Related Fallbacks\n   +----------------+--------------------------------------------------+\n\
    \   | Method         | Fallback                                         |\n  \
    \ +----------------+--------------------------------------------------+\n   |\
    \ PUBLISH        | Required                                         |\n   | REQUEST\
    \        | PUBLISH                                          |\n   | REPLY    \
    \      | Required                                         |\n   | ADD        \
    \    | Required if recurrences supported; otherwise,    |\n   |              \
    \  | reply with a REQUEST-STATUS \"2.8; Success,       |\n   |               \
    \ | repeating event ignored.  Scheduled as a single  |\n   |                |\
    \ component\", and schedule as a single component.  |\n   | CANCEL         | Required\
    \                                         |\n   | REFRESH        | Required  \
    \                                       |\n   | COUNTER        | Reply with \"\
    Not Supported\".                      |\n   | DECLINECOUNTER | Required if COUNTER\
    \ is implemented for VEVENTs;  |\n   |                | otherwise, reply with\
    \ \"Not Supported\".           |\n   +----------------+--------------------------------------------------+\n\
    \   +-----------------+-------------------------------------------------+\n  \
    \ | iCalendar       | Fallback                                        |\n   |\
    \ Property        |                                                 |\n   +-----------------+-------------------------------------------------+\n\
    \   | CALSCALE        | Ignore - assume GREGORIAN.                      |\n  \
    \ | PRODID          | Ignore                                          |\n   |\
    \ METHOD          | Required as described in the Method list above. |\n   | VERSION\
    \         | Ignore                                          |\n   +-----------------+-------------------------------------------------+\n\
    \   +-----------------+-------------------------------------------------+\n  \
    \ | Event-Related   | Fallback                                        |\n   |\
    \ Components      |                                                 |\n   +-----------------+-------------------------------------------------+\n\
    \   | VALARM          | Reply with \"Not Supported\".                     |\n\
    \   | VTIMEZONE       | Required if any DateTime value refers to a time |\n  \
    \ |                 | zone.                                           |\n   +-----------------+-------------------------------------------------+\n\
    \   +-----------------+-------------------------------------------------+\n  \
    \ | Component       | Fallback                                        |\n   |\
    \ Property        |                                                 |\n   +-----------------+-------------------------------------------------+\n\
    \   | ATTACH          | Ignore                                          |\n  \
    \ | ATTENDEE        | Required if METHOD is REQUEST; otherwise,       |\n   |\
    \                 | ignore.                                         |\n   | CATEGORIES\
    \      | Ignore                                          |\n   | CLASS       \
    \    | Ignore                                          |\n   | COMMENT       \
    \  | Ignore                                          |\n   | COMPLETED       |\
    \ Ignore                                          |\n   | CONTACT         | Ignore\
    \                                          |\n   | CREATED         | Ignore  \
    \                                        |\n   | DESCRIPTION     | Ignore    \
    \                                      |\n   | DURATION        | Required    \
    \                                    |\n   | DTSTAMP         | Required      \
    \                                  |\n   | DTSTART         | Required        \
    \                                |\n   | DTEND           | Required          \
    \                              |\n   | EXDATE          | Ignore              \
    \                            |\n   | GEO             | Ignore                \
    \                          |\n   | LAST-MODIFIED   | Ignore                  \
    \                        |\n   | LOCATION        | Required                  \
    \                      |\n   | ORGANIZER       | Required if METHOD is REQUEST;\
    \ otherwise,       |\n   |                 | ignore.                         \
    \                |\n   | PRIORITY        | Ignore                            \
    \              |\n   | RELATED-TO      | Ignore                              \
    \            |\n   | RDATE           | Ignore                                \
    \          |\n   | RRULE           | Ignore - assume the first instance occurs\
    \ on    |\n   |                 | the DTSTART property.  If implemented,     \
    \     |\n   |                 | VTIMEZONE MUST also be implemented.          \
    \   |\n   | RECURRENCE-ID   | Required if RRULE is implemented; otherwise,   \
    \ |\n   |                 | ignore.                                         |\n\
    \   | REQUEST-STATUS  | Required                                        |\n  \
    \ | RESOURCES       | Ignore                                          |\n   |\
    \ SEQUENCE        | Required                                        |\n   | STATUS\
    \          | Ignore                                          |\n   | SUMMARY \
    \        | Ignore                                          |\n   | TRANSP    \
    \      | Required if FREEBUSY is implemented; otherwise, |\n   |             \
    \    | ignore.                                         |\n   | URL           \
    \  | Ignore                                          |\n   | UID             |\
    \ Required                                        |\n   | X-              | Ignore\
    \                                          |\n   +-----------------+-------------------------------------------------+\n"
- title: 5.1.2.  Free/Busy-Related Fallbacks
  contents:
  - "5.1.2.  Free/Busy-Related Fallbacks\n   +---------+---------------------------------------------------------+\n\
    \   | Method  | Fallback                                                |\n  \
    \ +---------+---------------------------------------------------------+\n   |\
    \ PUBLISH | Required if freebusy lookups are supported; otherwise,  |\n   |  \
    \       | reply with a REQUEST-STATUS \"3.14; Unsupported          |\n   |   \
    \      | capability\".                                            |\n   | REQUEST\
    \ | Required if freebusy lookups are supported; otherwise,  |\n   |         |\
    \ reply with a REQUEST-STATUS \"3.14; Unsupported          |\n   |         | capability\"\
    .                                            |\n   | REPLY   | Required if freebusy\
    \ lookups are supported; otherwise,  |\n   |         | reply with a REQUEST-STATUS\
    \ \"3.14; Unsupported          |\n   |         | capability\".               \
    \                             |\n   +---------+---------------------------------------------------------+\n\
    \   +-----------------+-------------------------------------------------+\n  \
    \ | iCalendar       | Fallback                                        |\n   |\
    \ Property        |                                                 |\n   +-----------------+-------------------------------------------------+\n\
    \   | CALSCALE        | Ignore - assume GREGORIAN.                      |\n  \
    \ | PRODID          | Ignore                                          |\n   |\
    \ METHOD          | Required as described in the Method list above. |\n   | VERSION\
    \         | Ignore                                          |\n   +-----------------+-------------------------------------------------+\n\
    \   +-----------------+-------------------------------------------------+\n  \
    \ | Component       | Fallback                                        |\n   |\
    \ Property        |                                                 |\n   +-----------------+-------------------------------------------------+\n\
    \   | ATTENDEE        | Required if METHOD is REQUEST; otherwise,       |\n  \
    \ |                 | ignore.                                         |\n   |\
    \ COMMENT         | Ignore                                          |\n   | CONTACT\
    \         | Ignore                                          |\n   | DTEND    \
    \       | Required                                        |\n   | DTSTAMP    \
    \     | Required                                        |\n   | DTSTART      \
    \   | Required                                        |\n   | DURATION       \
    \ | Ignore                                          |\n   | FREEBUSY        |\
    \ Required                                        |\n   | ORGANIZER       | Required\
    \ if METHOD is REQUEST; otherwise,       |\n   |                 | ignore.   \
    \                                      |\n   | REQUEST-STATUS  | Ignore      \
    \                                    |\n   | UID             | Required      \
    \                                  |\n   | URL             | Ignore          \
    \                                |\n   | X-              | Ignore            \
    \                              |\n   +-----------------+-------------------------------------------------+\n"
- title: 5.1.3.  To-Do-Related Fallbacks
  contents:
  - "5.1.3.  To-Do-Related Fallbacks\n   +----------------+--------------------------------------------------+\n\
    \   | Method         | Fallback                                         |\n  \
    \ +----------------+--------------------------------------------------+\n   |\
    \ PUBLISH        | Required                                         |\n   | REQUEST\
    \        | PUBLISH                                          |\n   | REPLY    \
    \      | Required                                         |\n   | ADD        \
    \    | Required if recurrences supported; otherwise,    |\n   |              \
    \  | reply with a REQUEST-STATUS \"2.8; Success,       |\n   |               \
    \ | repeating event ignored.  Scheduled as a single  |\n   |                |\
    \ component\", and schedule as a single component.  |\n   | CANCEL         | Required\
    \                                         |\n   | REFRESH        | Required  \
    \                                       |\n   | COUNTER        | Reply with \"\
    Not Supported\".                      |\n   | DECLINECOUNTER | Required if COUNTER\
    \ for VTODOs is implemented;   |\n   |                | otherwise, reply with\
    \ \"Not Supported\".           |\n   +----------------+--------------------------------------------------+\n\
    \   +-----------------+-------------------------------------------------+\n  \
    \ | iCalendar       | Fallback                                        |\n   |\
    \ Property        |                                                 |\n   +-----------------+-------------------------------------------------+\n\
    \   | CALSCALE        | Ignore - assume GREGORIAN.                      |\n  \
    \ | PRODID          | Ignore                                          |\n   |\
    \ METHOD          | Required as described in the Method list above. |\n   | VERSION\
    \         | Ignore                                          |\n   +-----------------+-------------------------------------------------+\n\
    \   +-----------------+-------------------------------------------------+\n  \
    \ | To-Do-Related   | Fallback                                        |\n   |\
    \ Components      |                                                 |\n   +-----------------+-------------------------------------------------+\n\
    \   | VALARM          | Reply with \"Not Supported\".                     |\n\
    \   | VTIMEZONE       | Required if any DateTime value refers to a time |\n  \
    \ |                 | zone.                                           |\n   +-----------------+-------------------------------------------------+\n\
    \   +------------------+------------------------------------------------+\n  \
    \ | Component        | Fallback                                       |\n   |\
    \ Property         |                                                |\n   +------------------+------------------------------------------------+\n\
    \   | ATTACH           | Ignore                                         |\n  \
    \ | ATTENDEE         | Required if METHOD is REQUEST; otherwise,      |\n   |\
    \                  | ignore.                                        |\n   | CATEGORIES\
    \       | Ignore                                         |\n   | CLASS       \
    \     | Ignore                                         |\n   | COMMENT       \
    \   | Ignore                                         |\n   | COMPLETED       \
    \ | Required                                       |\n   | CONTACT          |\
    \ Ignore                                         |\n   | CREATED          | Ignore\
    \                                         |\n   | DESCRIPTION      | Required\
    \ if METHOD is REQUEST; otherwise,      |\n   |                  | ignore.   \
    \                                     |\n   | DUE              | Required    \
    \                                   |\n   | DURATION         | Required      \
    \                                 |\n   | DTSTAMP          | Required        \
    \                               |\n   | DTSTART          | Required          \
    \                             |\n   | EXDATE           | Ignore - reply with \"\
    Not Supported\".           |\n   | LAST-MODIFIED    | Ignore                 \
    \                        |\n   | LOCATION         | Ignore                   \
    \                      |\n   | ORGANIZER        | Required if METHOD is REQUEST;\
    \ otherwise,      |\n   |                  | ignore.                         \
    \               |\n   | PERCENT-COMPLETE | Ignore                            \
    \             |\n   | PRIORITY         | Required                            \
    \           |\n   | RECURRENCE-ID    | Required if RRULE is implemented; otherwise,\
    \   |\n   |                  | ignore.                                       \
    \ |\n   | RELATED-TO       | Ignore                                         |\n\
    \   | REQUEST-STATUS   | Ignore                                         |\n  \
    \ | RDATE            | Ignore                                         |\n   |\
    \ RRULE            | Ignore - assume the first instance occurs on   |\n   |  \
    \                | the DTSTART property.  If implemented,         |\n   |    \
    \              | VTIMEZONE MUST also be implemented.            |\n   | RESOURCES\
    \        | Ignore                                         |\n   | SEQUENCE   \
    \      | Required                                       |\n   | STATUS       \
    \    | Required                                       |\n   | SUMMARY        \
    \  | Ignore                                         |\n   | URL              |\
    \ Ignore                                         |\n   | UID              | Required\
    \                                       |\n   | X-               | Ignore    \
    \                                     |\n   +------------------+------------------------------------------------+\n"
- title: 5.1.4.  Journal-Related Fallbacks
  contents:
  - "5.1.4.  Journal-Related Fallbacks\n   +---------+---------------------------------------------------------+\n\
    \   | Method  | Fallback                                                |\n  \
    \ +---------+---------------------------------------------------------+\n   |\
    \ PUBLISH | Implementations MAY ignore the METHOD type.  The        |\n   |  \
    \       | REQUEST-STATUS \"3.14; Unsupported capability\" MUST be   |\n   |  \
    \       | returned.                                               |\n   | ADD\
    \     | Implementations MAY ignore the METHOD type.  The        |\n   |      \
    \   | REQUEST-STATUS \"3.14; Unsupported capability\" MUST be   |\n   |      \
    \   | returned.                                               |\n   | CANCEL \
    \ | Implementations MAY ignore the METHOD type.  The        |\n   |         |\
    \ REQUEST-STATUS \"3.14; Unsupported capability\" MUST be   |\n   |         |\
    \ returned.                                               |\n   +---------+---------------------------------------------------------+\n\
    \   +-----------------+-------------------------------------------------+\n  \
    \ | iCalendar       | Fallback                                        |\n   |\
    \ Property        |                                                 |\n   +-----------------+-------------------------------------------------+\n\
    \   | CALSCALE        | Ignore - assume GREGORIAN.                      |\n  \
    \ | PRODID          | Ignore                                          |\n   |\
    \ METHOD          | Required as described in the Method list above. |\n   | VERSION\
    \         | Ignore                                          |\n   +-----------------+-------------------------------------------------+\n\
    \   +-----------------+-------------------------------------------------+\n  \
    \ | Journal-Related | Fallback                                        |\n   |\
    \ Components      |                                                 |\n   +-----------------+-------------------------------------------------+\n\
    \   | VTIMEZONE       | Required if any DateTime value refers to a time |\n  \
    \ |                 | zone.                                           |\n   +-----------------+-------------------------------------------------+\n\
    \   +-----------------+-------------------------------------------------+\n  \
    \ | Component       | Fallback                                        |\n   |\
    \ Property        |                                                 |\n   +-----------------+-------------------------------------------------+\n\
    \   | ATTACH          | Ignore                                          |\n  \
    \ | ATTENDEE        | Ignore                                          |\n   |\
    \ CATEGORIES      | Ignore                                          |\n   | CLASS\
    \           | Ignore                                          |\n   | COMMENT\
    \         | Ignore                                          |\n   | CONTACT  \
    \       | Ignore                                          |\n   | CREATED    \
    \     | Ignore                                          |\n   | DESCRIPTION  \
    \   | Ignore                                          |\n   | DTSTAMP        \
    \ | Required                                        |\n   | DTSTART         |\
    \ Required                                        |\n   | EXDATE          | Ignore\
    \                                          |\n   | LAST-MODIFIED   | Ignore  \
    \                                        |\n   | ORGANIZER       | Ignore    \
    \                                      |\n   | RECURRENCE-ID   | Required if RRULE\
    \ is implemented; otherwise,    |\n   |                 | ignore.            \
    \                             |\n   | RELATED-TO      | Ignore               \
    \                           |\n   | RDATE           | Ignore                 \
    \                         |\n   | RRULE           | Ignore - assume the first\
    \ instance occurs on    |\n   |                 | the DTSTART property.  If implemented,\
    \          |\n   |                 | VTIMEZONE MUST also be implemented.     \
    \        |\n   | SEQUENCE        | Required                                  \
    \      |\n   | STATUS          | Ignore                                      \
    \    |\n   | SUMMARY         | Required                                      \
    \  |\n   | URL             | Ignore                                          |\n\
    \   | UID             | Required                                        |\n  \
    \ | X-              | Ignore                                          |\n   +-----------------+-------------------------------------------------+\n"
- title: 5.2.  Latency Issues
  contents:
  - "5.2.  Latency Issues\n   With a store-and-forward transport, it is possible for\
    \ events to\n   arrive out of sequence.  That is, a \"CANCEL\" method may be received\n\
    \   prior to receiving the associated \"REQUEST\" for the calendar\n   component.\
    \  This section discusses a few of these scenarios.\n"
- title: 5.2.1.  Cancellation of an Unknown Calendar Component
  contents:
  - "5.2.1.  Cancellation of an Unknown Calendar Component\n   When a \"CANCEL\" method\
    \ is received before the original \"REQUEST\"\n   method, the calendar will be\
    \ unable to correlate the \"UID\" property\n   of the cancellation with an existing\
    \ calendar component.  It is\n   suggested that messages that cannot be correlated\
    \ and that also\n   contain non-zero sequence numbers be held and not discarded.\n\
    \   Implementations MAY age them out if no other messages arrive with the\n  \
    \ same \"UID\" property value and a lower sequence number.\n"
- title: 5.2.2.  Unexpected Reply from an Unknown Delegate
  contents:
  - "5.2.2.  Unexpected Reply from an Unknown Delegate\n   When an \"Attendee\" delegates\
    \ an item to another CU, they MUST send a\n   \"REPLY\" method to the \"Organizer\"\
    \ using the \"ATTENDEE\" properties to\n   indicate that the request was delegated\
    \ and to whom.  Hence, it is\n   possible for an \"Organizer\" to receive a \"\
    REPLY\" from a CU not listed\n   as one of the original \"Attendees\".  The resolution\
    \ is left to the\n   implementation, but it is expected that the calendaring software\
    \ will\n   either accept the reply or hold it until the related \"REPLY\" method\n\
    \   is received from the \"Delegator\".  If the version of the \"REPLY\"\n   method\
    \ is out of date, the \"Organizer\" SHOULD treat the message as a\n   \"REFRESH\"\
    \ message and update the \"Delegate\" with the correct version,\n   provided that\
    \ delegation to that delegate is acceptable.\n"
- title: 5.3.  Sequence Number
  contents:
  - "5.3.  Sequence Number\n   Under some conditions, a CUA may receive requests and\
    \ replies with\n   the same \"SEQUENCE\" property value.  The \"DTSTAMP\" property\
    \ is\n   utilized as a tie-breaker when two items with the same \"SEQUENCE\"\n\
    \   property value are evaluated.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   iTIP is an abstract transport protocol that will\
    \ be bound to a real-\n   time transport, a store-and-forward transport, and perhaps\
    \ other\n   transports.  The transport protocol will be responsible for providing\n\
    \   facilities for authentication and encryption using standard Internet\n   mechanisms\
    \ that are mutually understood between the sender and\n   receiver.\n"
- title: 6.1.  Security Threats
  contents:
  - '6.1.  Security Threats

    '
- title: 6.1.1.  Spoofing the Organizer
  contents:
  - "6.1.1.  Spoofing the Organizer\n   In iTIP, the \"Organizer\" (or someone working\
    \ on the \"Organizer's\"\n   behalf) is the only person authorized to make changes\
    \ to an existing\n   \"VEVENT\", \"VTODO\", or \"VJOURNAL\" calendar component\
    \ and republish it\n   or redistribute updates to the \"Attendees\".  An iCalendar\
    \ object that\n   maliciously changes or cancels an existing \"VEVENT\", \"VTODO\"\
    , or\n   \"VJOURNAL\" calendar component may be constructed by someone other\n\
    \   than the \"Organizer\" and republished or sent to the \"Attendees\".\n"
- title: 6.1.2.  Spoofing the Attendee
  contents:
  - "6.1.2.  Spoofing the Attendee\n   In iTIP, an \"Attendee\" of a \"VEVENT\" or\
    \ \"VTODO\" calendar component\n   (or someone working on the \"Attendee's\" behalf)\
    \ is the only person\n   authorized to update any parameter associated with their\
    \ \"ATTENDEE\"\n   property and send it to the \"Organizer\".  An iCalendar object\
    \ that\n   maliciously changes the \"ATTENDEE\" parameters may be constructed\
    \ by\n   someone other than the real \"Attendee\" and sent to the \"Organizer\"\
    .\n"
- title: 6.1.3.  Unauthorized Replacement of the Organizer
  contents:
  - "6.1.3.  Unauthorized Replacement of the Organizer\n   There will be circumstances\
    \ when \"Attendees\" of an event or to-do\n   decide, using out-of-band mechanisms,\
    \ that the \"Organizer\" must be\n   replaced.  When the new \"Organizer\" sends\
    \ out the updated \"VEVENT\" or\n   \"VTODO\", the \"Attendee's\" CUA will detect\
    \ that the \"Organizer\" has\n   been changed, but it has no way of knowing whether\
    \ or not the change\n   was mutually agreed upon.\n"
- title: 6.1.4.  Eavesdropping and Data Integrity
  contents:
  - "6.1.4.  Eavesdropping and Data Integrity\n   The iCalendar object is constructed\
    \ with human-readable clear text.\n   Any information contained in an iCalendar\
    \ object may be read and/or\n   changed by unauthorized persons while the object\
    \ is in transit.\n"
- title: 6.1.5.  Flooding a Calendar
  contents:
  - "6.1.5.  Flooding a Calendar\n   Implementations could provide a means to automatically\
    \ incorporate\n   \"REQUEST\" methods into a calendar.  This presents the opportunity\
    \ for\n   a calendar to be flooded with requests, which effectively blocks all\n\
    \   the calendar's free time.\n"
- title: 6.1.6.  Unauthorized REFRESH Requests
  contents:
  - "6.1.6.  Unauthorized REFRESH Requests\n   It is possible for an \"Organizer\"\
    \ to receive a \"REFRESH\" request from\n   someone who is not an \"Attendee\"\
    \ of an event or to-do.  Only\n   \"Attendees\" of an event or to-do are authorized\
    \ to receive replies to\n   \"REFRESH\" requests.  Replying to such requests to\
    \ anyone who is not\n   an \"Attendee\" may be a security problem.\n"
- title: 6.2.  Recommendations
  contents:
  - "6.2.  Recommendations\n   For an application where the information is sensitive\
    \ or critical and\n   the network is subject to a high probability of attack,\
    \ iTIP\n   transactions SHOULD be encrypted and authenticated.  This helps\n \
    \  mitigate the threats of spoofing, eavesdropping, and malicious\n   changes\
    \ in transit.\n"
- title: 6.2.1.  Securing iTIP transactions
  contents:
  - "6.2.1.  Securing iTIP transactions\n   iTIP transport bindings MUST provide a\
    \ mechanism to enable\n   authentication of the sender's identity as well as privacy\
    \ and\n   integrity of the data being transmitted.  This allows the receiver of\n\
    \   a signed iCalendar object to verify the identity of the sender.  This\n  \
    \ sender may then be correlated to an \"ATTENDEE\" property in the\n   iCalendar\
    \ object.  If the correlation is made and the sender is\n   authorized to make\
    \ the requested change or update, then the operation\n   may proceed.  It also\
    \ allows the message to be encrypted to prevent\n   unauthorized reading of the\
    \ message contents in transit. iTIP\n   transport binding documents describe this\
    \ process in detail.\n"
- title: 6.2.2.  Implementation Controls
  contents:
  - "6.2.2.  Implementation Controls\n   The threat of unauthorized replacement of\
    \ the \"Organizer\" SHOULD be\n   mitigated by a calendar system that uses this\
    \ protocol by providing\n   controls or alerts that make \"Calendar Users\" aware\
    \ of such\n   \"Organizer\" changes and allowing them to decide whether or not\
    \ the\n   request should be honored.\n   The threat of flooding a calendar SHOULD\
    \ be mitigated by a calendar\n   system that uses this protocol by providing controls\
    \ that may be used\n   to limit the acceptable sources for iTIP transactions,\
    \ and perhaps\n   the size of messages and volume of traffic, by source.\n   The\
    \ threat of unauthorized \"REFRESH\" requests SHOULD be mitigated by\n   a calendar\
    \ system that uses this protocol by providing controls or\n   alerts that allow\
    \ \"Calendar Users\" to decide whether or not the\n   request should be honored.\
    \  An implementation MAY decide to maintain,\n   for audit or historical purposes,\
    \ \"Calendar Users\" who were part of\n   an \"Attendee\" list and who were subsequently\
    \ uninvited.  Similar\n   controls or alerts should be provided when a \"REFRESH\"\
    \ request is\n   received from these \"Calendar Users\" as well.\n"
- title: 6.2.3.  Access Controls and Filtering
  contents:
  - "6.2.3.  Access Controls and Filtering\n   In many environments, there could be\
    \ restrictions on who is allowed\n   to schedule with whom and who the allowed\
    \ delegates are for\n   particular \"Calendar Users\".\n   iTIP transport bindings\
    \ SHOULD provide mechanisms for implementing\n   access controls or filtering\
    \ to ensure iTIP transactions only take\n   place between authorized \"Calendar\
    \ Users\".  That would include\n   preventing one \"Calendar User\" from scheduling\
    \ with another or one\n   \"Calendar User\" delegating to another.\n"
- title: 6.3.  Privacy Issues
  contents:
  - "6.3.  Privacy Issues\n   The \"Organizer\" might want to keep \"Attendees\" from\
    \ knowing which\n   other \"Attendees\" are participating in an event or to-do.\
    \  The\n   \"Organizer\" has the choice of sending single iTIP messages with a\n\
    \   full list of \"Attendees\" or sending iTIP messages to each \"Attendee\"\n\
    \   with only that \"Attendee\" listed.\n"
- title: 7.  IANA Considerations
  contents:
  - '7.  IANA Considerations

    '
- title: 7.1.  Registration Template for REQUEST-STATUS Values
  contents:
  - "7.1.  Registration Template for REQUEST-STATUS Values\n   This specification\
    \ updates [RFC5545] by adding a \"REQUEST-STATUS\"\n   value registry to the iCalendar\
    \ Elements registry.\n   A \"REQUEST-STATUS\" value is defined by completing the\
    \ following\n   template.\n      Status Code:  Hierarchical, numeric return status\
    \ code, following\n         the rules defined in Section 3.8.8.3 of [RFC5545].\n\
    \      Status Description:  Textual status description.  A short but\n       \
    \  clear description of the error.\n      Status Exception Data:  Textual exception\
    \ data.  A short but clear\n         description of what might appear in this\
    \ field.\n      Description:  Describe the underlying cause for this status code\n\
    \         value.\n"
- title: 7.2.  Additions to iCalendar METHOD Registry
  contents:
  - "7.2.  Additions to iCalendar METHOD Registry\n   This document defines the following\
    \ values for the iCalendar \"METHOD\"\n   property, using the values template\
    \ from Section 8.2.6 of [RFC5545].\n   These should be added to the Methods Registry\
    \ defined in Section\n   8.3.12 of [RFC5545]:\n"
- title: 7.2.1.  METHOD:PUBLISH
  contents:
  - "7.2.1.  METHOD:PUBLISH\n   Value:  PUBLISH\n   Purpose:  Standard iTIP \"METHOD\"\
    \ value.\n   Conformance:  Only used with the \"METHOD\" property.\n   Examples:\
    \  See this RFC.\n"
- title: 7.2.2.  METHOD:REQUEST
  contents:
  - "7.2.2.  METHOD:REQUEST\n   Value:  REQUEST\n   Purpose:  Standard iTIP \"METHOD\"\
    \ value.\n   Conformance:  Only used with the \"METHOD\" property.\n   Examples:\
    \  See this RFC.\n"
- title: 7.2.3.  METHOD:REPLY
  contents:
  - "7.2.3.  METHOD:REPLY\n   Value:  REPLY\n   Purpose:  Standard iTIP \"METHOD\"\
    \ value.\n   Conformance:  Only used with the \"METHOD\" property.\n   Examples:\
    \  See this RFC.\n"
- title: 7.2.4.  METHOD:ADD
  contents:
  - "7.2.4.  METHOD:ADD\n   Value:  ADD\n   Purpose:  Standard iTIP \"METHOD\" value.\n\
    \   Conformance:  Only used with the \"METHOD\" property.\n   Examples:  See this\
    \ RFC.\n"
- title: 7.2.5.  METHOD:CANCEL
  contents:
  - "7.2.5.  METHOD:CANCEL\n   Value:  CANCEL\n   Purpose:  Standard iTIP \"METHOD\"\
    \ value.\n   Conformance:  Only used with the \"METHOD\" property.\n   Examples:\
    \  See this RFC.\n"
- title: 7.2.6.  METHOD:REFRESH
  contents:
  - "7.2.6.  METHOD:REFRESH\n   Value:  REFRESH\n   Purpose:  Standard iTIP \"METHOD\"\
    \ value.\n   Conformance:  Only used with the \"METHOD\" property.\n   Examples:\
    \  See this RFC.\n"
- title: 7.2.7.  METHOD:COUNTER
  contents:
  - "7.2.7.  METHOD:COUNTER\n   Value:  COUNTER\n   Purpose:  Standard iTIP \"METHOD\"\
    \ value.\n   Conformance:  Only used with the \"METHOD\" property.\n   Examples:\
    \  See this RFC.\n"
- title: 7.2.8.  METHOD:DECLINECOUNTER
  contents:
  - "7.2.8.  METHOD:DECLINECOUNTER\n   Value:  DECLINECOUNTER\n   Purpose:  Standard\
    \ iTIP \"METHOD\" value.\n   Conformance:  Only used with the \"METHOD\" property.\n\
    \   Examples:  See this RFC.\n"
- title: 7.3.  REQUEST-STATUS Value Registry
  contents:
  - "7.3.  REQUEST-STATUS Value Registry\n   New \"REQUEST-STATUS\" values can be\
    \ registered using the process\n   described in Section 8.2.1 of [RFC5545].\n\
    \   The following table is to be used to initialize the \"REQUEST-STATUS\"\n \
    \  value registry.\n           +-------------+---------+--------------------------+\n\
    \           | Status Code | Status  | Reference                |\n           +-------------+---------+--------------------------+\n\
    \           | 2.0         | Current | RFC 5546, Section 3.6.1  |\n           |\
    \ 2.1         | Current | RFC 5546, Section 3.6.2  |\n           | 2.2       \
    \  | Current | RFC 5546, Section 3.6.3  |\n           | 2.3         | Current\
    \ | RFC 5546, Section 3.6.4  |\n           | 2.4         | Current | RFC 5546,\
    \ Section 3.6.5  |\n           | 2.5         | Current | RFC 5546, Section 3.6.6\
    \  |\n           | 2.6         | Current | RFC 5546, Section 3.6.7  |\n      \
    \     | 2.7         | Current | RFC 5546, Section 3.6.8  |\n           | 2.8 \
    \        | Current | RFC 5546, Section 3.6.9  |\n           | 2.9         | Current\
    \ | RFC 5546, Section 3.6.10 |\n           | 2.10        | Current | RFC 5546,\
    \ Section 3.6.11 |\n           | 2.11        | Current | RFC 5546, Section 3.6.12\
    \ |\n           | 3.0         | Current | RFC 5546, Section 3.6.13 |\n       \
    \    | 3.1         | Current | RFC 5546, Section 3.6.14 |\n           | 3.2  \
    \       | Current | RFC 5546, Section 3.6.15 |\n           | 3.3         | Current\
    \ | RFC 5546, Section 3.6.16 |\n           | 3.4         | Current | RFC 5546,\
    \ Section 3.6.17 |\n           | 3.5         | Current | RFC 5546, Section 3.6.18\
    \ |\n           | 3.6         | Current | RFC 5546, Section 3.6.19 |\n       \
    \    | 3.7         | Current | RFC 5546, Section 3.6.20 |\n           | 3.8  \
    \       | Current | RFC 5546, Section 3.6.21 |\n           | 3.9         | Current\
    \ | RFC 5546, Section 3.6.22 |\n           | 3.10        | Current | RFC 5546,\
    \ Section 3.6.23 |\n           | 3.11        | Current | RFC 5546, Section 3.6.24\
    \ |\n           | 3.12        | Current | RFC 5546, Section 3.6.25 |\n       \
    \    | 3.13        | Current | RFC 5546, Section 3.6.26 |\n           | 3.14 \
    \       | Current | RFC 5546, Section 3.6.27 |\n           | 4.0         | Current\
    \ | RFC 5546, Section 3.6.28 |\n           | 5.0         | Current | RFC 5546,\
    \ Section 3.6.29 |\n           | 5.1         | Current | RFC 5546, Section 3.6.30\
    \ |\n           | 5.2         | Current | RFC 5546, Section 3.6.31 |\n       \
    \    | 5.3         | Current | RFC 5546, Section 3.6.32 |\n           +-------------+---------+--------------------------+\n"
- title: 8.  Acknowledgments
  contents:
  - "8.  Acknowledgments\n   This is an update to the original iTIP document authored\
    \ by S.\n   Silverberg, S. Mansour, F. Dawson, and R. Hopson.\n   This revision\
    \ is the product of the Calsify IETF Working Group, and\n   several participants\
    \ have made important contributions to this\n   specification, including Oliver\
    \ Block, Bernard Desruisseaux, Mike\n   Douglass, Tim Hare, Ciny Joy, Bruce Kahn,\
    \ Reinhold Kainhofer, Eliot\n   Lear, Jonathan Lennox, Andy Mabbett, Aki Niemi,\
    \ John W. Noerenberg\n   II, Robert Ransdell, and Caleb Richardson.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2368]  Hoffman, P., Masinter, L., and J. Zawinski, \"The mailto\n\
    \              URL scheme\", RFC 2368, July 1998.\n   [RFC5545]  Desruisseaux,\
    \ B., \"Internet Calendaring and Scheduling\n              Core Object Specification\
    \ (iCalendar)\", RFC 5545,\n              September 2009.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [iMIP]     Melnikov, A., Ed., \"iCalendar Message-Based\n\
    \              Interoperability Protocol (iMIP)\", Work in Progress,\n       \
    \       October 2009.\n"
- title: Appendix A.  Differences from RFC 2446
  contents:
  - 'Appendix A.  Differences from RFC 2446

    '
- title: A.1.  Changed Restrictions
  contents:
  - "A.1.  Changed Restrictions\n   This specification now defines an allowed combination\
    \ of \"REQUEST-\n   STATUS\" codes when multiple iCalendar components are included\
    \ in an\n   iTIP message.\n   This specification now restricts \"RECURRENCE-ID\"\
    \ to only a single\n   occurrence in any one iCalendar component in an iTIP message,\
    \ as\n   required by [RFC5545].\n   Changed the \"RECURRENCE-ID\" entry in the\
    \ component restriction table\n   to \"0 or 1\" from \"0+\", to fall in line with\
    \ [RFC5545].\n   Changed the \"FREEBUSY\" entry in the \"VFREEBUSY\", \"PUBLISH\"\
    , and\n   \"REPLY\" restriction tables to \"0+\" from \"1+\", to fall in line\
    \ with\n   [RFC5545].\n   Changed the \"FREEBUSY\" description in the \"VFREEBUSY\"\
    \ and \"REPLY\"\n   restriction tables to indicate that different \"FBTYPE\" ranges\
    \ MUST\n   NOT overlap.\n   Changed the \"TZNAME\" entry in the \"VTIMEZONE\"\
    \ restriction table to\n   \"0+\" from \"0 or 1\", to fall in line with [RFC5545].\n\
    \   Changed the \"COMMENT\" entry in the component restriction tables to\n   \"\
    0+\" from \"0 or 1\", to fall in line with [RFC5545].\n   Added the \"ATTENDEE\"\
    \ entry in the \"VALARM\" restriction table to match\n   the email alarm type\
    \ in [RFC5545].\n   Changed the \"CATEGORIES\" entry in the component restriction\
    \ tables to\n   \"0+\" from \"0 or 1\", to fall in line with [RFC5545].\n   Changed\
    \ the \"RESOURCES\" entry in the component restriction tables to\n   \"0+\" from\
    \ \"0 or 1\", to fall in line with [RFC5545].\n   Changed the \"CONTACT\" entry\
    \ in the \"VFREEBUSY\" restriction table to\n   \"0 or 1\" from \"0+\", to fall\
    \ in line with [RFC5545].\n   Changed the \"UID\" entry in the \"VFREEBUSY\" and\
    \ \"PUBLISH\" restriction\n   tables to \"1\" from \"0\", to fall in line with\
    \ [RFC5545].\n   Added the \"COMPLETED\" entry in the \"VTODO\" restriction tables\
    \ to fall\n   in line with [RFC5545].\n   Added the \"REQUEST-STATUS\" entry in\
    \ the \"VJOURNAL\" restriction tables\n   to fall in line with [RFC5545].\n"
- title: A.2.  Deprecated Features
  contents:
  - "A.2.  Deprecated Features\n   The \"EXRULE\" property was removed in [RFC5545]\
    \ and references to that\n   have been removed in this document too.\n   The \"\
    PROCEDURE\" value for the \"ACTION\" property was removed in\n   [RFC5545] and\
    \ references to that have been removed in this document\n   too.\n   The \"THISANDPRIOR\"\
    \ option for the \"RANGE\" parameter was removed in\n   [RFC5545] and references\
    \ to that have been removed in this document\n   too.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Cyrus Daboo (editor)\n   Apple Inc.\n   1 Infinite Loop\n\
    \   Cupertino, CA  95014\n   USA\n   EMail: cyrus@daboo.name\n   URI:   http://www.apple.com/\n"
