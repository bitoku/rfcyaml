- title: __initial_text__
  contents:
  - '           EtherIP: Tunneling Ethernet Frames in IP Datagrams

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes the EtherIP, an early tunneling protocol,\
    \ to\n   provide informational and historical context for the assignment of IP\n\
    \   protocol 97.  EtherIP tunnels Ethernet and IEEE 802.3 media access\n   control\
    \ frames in IP datagrams so that non-IP traffic can traverse an\n   IP internet.\
    \  The protocol is very lightweight, and it does not\n   provide protection against\
    \ infinite loops.\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   EtherIP was first designed and developed in 1991.  This document\
    \ was\n   written to document the protocol for informational purposes and to\n\
    \   provide historical context for the assignment of IP protocol 97 by\n   IANA.\n\
    \   The IETF Layer Two Tunneling Protocol Extensions (L2TPEXT) Working\n   Group\
    \ and IETF Pseudo Wire Emulation Edge-to-Edge (PWE3) Working\n   Group are developing\
    \ protocols that overcome the deficiencies of\n   EtherIP.  In general, the standards\
    \ track protocols produced by these\n   IETF working groups should be used instead\
    \ of EtherIP.\n   The EtherIP protocol is used to tunnel Ethernet [DIX] and IEEE\
    \ 802.3\n   [CSMA/CD] media access control (MAC) frames (including IEEE 802.1Q\n\
    \   [VLAN] datagrams) across an IP internet.  Tunneling is usually\n   performed\
    \ when the layer three protocol carried in the MAC frames is\n   not IP or when\
    \ encryption obscures the layer three protocol control\n   information needed\
    \ for routing.  EtherIP may be implemented in an end\n   station to enable tunneling\
    \ for that single station, or it may be\n   implemented in a bridge-like station\
    \ to enable tunneling for multiple\n   stations connected to a particular local\
    \ area network (LAN) segment.\n   EtherIP may be used to enable communications\
    \ between stations that\n   implement Ethernet or IEEE 802.3 with a layer three\
    \ protocol other\n   than IP.  For example, two stations connected to different\
    \ Ethernet\n   LANs using the Xerox Network Systems Internetwork Datagram Protocol\n\
    \   (IDP) [XNS] could employ EtherIP to enable communications across the\n   Internet.\n\
    \   EtherIP may be used to enable communications between stations that\n   encrypt\
    \ the Ethernet or IEEE 802.3 payload.  Regardless of the layer\n   three protocol\
    \ used, encryption obscures the layer three protocol\n   control information,\
    \ making routing impossible.  For example, two\n   stations connected to different\
    \ Ethernet LANs using IEEE 802.10b\n   [SDE] could employ EtherIP to enable encrypted\
    \ communications across\n   the Internet.\n   EtherIP may be implemented in a\
    \ single station to provide tunneling\n   of Ethernet or IEEE 802.3 frames for\
    \ either of the reasons stated\n   above.  Such implementations require processing\
    \ rules to determine\n   which MAC frames to tunnel and which MAC frames to ignore.\
    \  Most\n   often, these processing rules are based on the destination address\
    \ or\n   the EtherType.\n   EtherIP may be implemented in a bridge-like station\
    \ to provide\n   tunneling services for all stations connected to a particular\
    \ LAN\n   segment.  Such implementations promiscuously listen to all of the\n\
    \   traffic on the LAN segment, then apply processing rules to determine\n   which\
    \ MAC frames to tunnel and which MAC frames to ignore.  MAC\n   frames that require\
    \ tunneling are encapsulated with EtherIP and IP,\n   then transmitted to the\
    \ local IP router for delivery to the bridge-\n   like station serving the remote\
    \ LAN.  Most often, these processing\n   rules are based on the source address,\
    \ the destination address, or\n   the EtherType.  Care in establishing these rules\
    \ must be exercised to\n   ensure that the same MAC frame does not get transmitted\
    \ endlessly\n   between several bridge-like stations, especially when broadcast\
    \ or\n   multicast destination MAC addresses are used as selection criteria.\n\
    \   Infinite loops can result if the topology is not restricted to a\n   tree,\
    \ but the construction of the tree is left to the human that is\n   configuring\
    \ the bridge-like stations.\n"
- title: 1.1. Conventions Used In This Document
  contents:
  - "1.1. Conventions Used In This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 2. Protocol Format
  contents:
  - "2. Protocol Format\n   EtherIP segments are sent and received as internet datagrams.\
    \  An\n   Internet Protocol (IP) header carries several information fields,\n\
    \   including an identifier for the next level protocol.  An EtherIP\n   header\
    \ follows the internet header, providing information specific to\n   the EtherIP\
    \ protocol.\n   Internet Protocol version 4 (IPv4) [RFC791] defines an 8-bit field\n\
    \   called \"Protocol\" to identify the next level protocol.  The value of\n \
    \  this field MUST be set to 97 decimal (141 octal, 61 hex) to identify\n   an\
    \ EtherIP datagram.\n   EtherIP datagrams contain a 16-bit header and a variable-length\n\
    \   encapsulated Ethernet or IEEE 802.3 frame that immediately follows IP\n  \
    \ fields.\n        +-----------------------+-----------------------------+\n \
    \       |      |                |                             |\n        |  IP\
    \  | EtherIP Header | Encapsulated Ethernet Frame |\n        |      |        \
    \        |                             |\n        +-----------------------+-----------------------------+\n\
    \                  Figure 1: EtherIP Datagram Description\n   The 16-bit EtherIP\
    \ header field consists of two parts: a 4-bit\n   version field that identifies\
    \ the EtherIP protocol version and a\n   12-bit field reserved for future use.\
    \  The value of the version field\n   MUST be 3 (three, '0011' binary).  The value\
    \ of the reserved field\n   MUST be 0 (zero).  Earlier versions of this protocol\
    \ used an 8-bit\n   header field.  The Xerox Ethernet Tunnel (XET) employed the\
    \ 8-bit\n   header.  The 16-bit header field provides memory alignment advantages\n\
    \   in some implementation environments.\n   In summary, the EtherIP Header has\
    \ two fields:\n      Bits 0-3:  Protocol version\n      Bits 4-15: Reserved for\
    \ future use\n        0   1   2   3   4   5   6   7   8   9  10  11  12  13  14\
    \  15\n     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \     |               |                                               |\n    \
    \ |    VERSION    |                   RESERVED                    |\n     |  \
    \             |                                               |\n     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \                 Figure 2: EtherIP Header Format (in bits)\n   The encapsulated\
    \ Ethernet frame field contains a complete Ethernet or\n   IEEE 802.3 frame of\
    \ any type less the frame check sequence (FCS)\n   value.  The IP checksum does\
    \ not provide integrity protection for the\n   Ethernet/IEEE 802.3 frame, so some\
    \ higher-layer protocol encapsulated\n   by the Ethernet/IEEE 802.3 frame is expected\
    \ to provide the integrity\n   protection.\n"
- title: 3. Sending Procedures
  contents:
  - "3. Sending Procedures\n   This section describes the processing to encapsulate\
    \ an Ethernet or\n   IEEE 802.3 MAC frame in an EtherIP datagram.  First, the\n\
    \   implementation determines whether the MAC frame requires tunneling.\n   Then,\
    \ if tunneling is required, the MAC frame is processed according\n   to the steps\
    \ provided in this section.  Stations processing VLAN\n   datagrams MAY need to\
    \ examine the VLAN header to make appropriate\n   tunneling decisions.\n   An\
    \ end station that implements EtherIP may tunnel some traffic, but\n   not all\
    \ traffic.  Thus, the first step in processing a MAC frame is\n   to determine\
    \ if the frame needs to be tunneled or not.  If the\n   recipient station is connected\
    \ to the same LAN as the source station,\n   then tunneling is not needed.  If\
    \ the network connecting the stations\n   can route the layer three protocol,\
    \ then tunneling is not needed.\n   Other environment specific criteria MAY also\
    \ be applied.  If\n   tunneling is not needed, skip all EtherIP processing and\
    \ perform\n   normal data link layer processing to transmit the MAC frame.\n \
    \  Otherwise, follow the steps described below.\n   A bridge-like station promiscuously\
    \ listens to all of the MAC frames\n   on the LAN.  Each MAC frame read from the\
    \ LAN is examined to\n   determine if it needs to be tunneled.  If the recipient\
    \ station is\n   connected to the same LAN as the source station, then tunneling\
    \ is\n   not needed.  If the destination MAC address is a router serving the\n\
    \   LAN, then tunneling is not needed.  Other environment specific\n   criteria\
    \ MAY also be applied.  If tunneling is not needed, then\n   discard the MAC frame.\
    \  Otherwise, follow the steps described below.\n   The EtherIP encapsulation\
    \ process is as follows:\n   1. Prepend the 16-bit EtherIP header to the MAC frame.\
    \  The EtherIP\n      Version field MUST be set to 3 (three), and the EtherIP\
    \ Reserved\n      field MUST be set to 0 (zero).  The MAC frame MUST NOT include\
    \ the\n      FCS.\n   2. Determine the destination IP address of the remote EtherIP\n\
    \      station.  This address is usually determined from the destination\n   \
    \   MAC address.\n   3. Encapsulate the EtherIP datagram in an IP datagram with\
    \ the\n      destination IP address determined in the previous step, and the\n\
    \      IPv4 Protocol field MUST be set to 97 (decimal).\n   4. Transmit the resulting\
    \ IP datagram to the remote EtherIP station\n      via the IP router serving the\
    \ LAN.\n"
- title: 4. Receiving Procedures
  contents:
  - "4. Receiving Procedures\n   This section describes the processing to decapsulate\
    \ an Ethernet or\n   IEEE 802.3 MAC frame from an EtherIP datagram.\n   Since\
    \ a bridge-like station promiscuously listens to all of the MAC\n   frames on\
    \ the LAN, it may need to separate the MAC frames that\n   encapsulate IP datagrams\
    \ addressed to it from MAC frames that are\n   candidates for decapsulation. \
    \ The process for identifying MAC frames\n   that are candidates for decapsulation\
    \ is as follows:\n   1. Perform normal data link layer processing to receive a\
    \ suspected\n      EtherIP datagram.\n   2. If the recipient station is connected\
    \ to the same LAN as the\n      source station, then ignore the frame.  In most\
    \ environments,\n      frames with a source MAC address other than the IP router\
    \ serving\n      the LAN are ignored.\n   3. If the network connecting the stations\
    \ can route the layer three\n      protocol, then decapsulation is not needed,\
    \ and the frame is\n      ignored.\n   4. Ignore frames that do not contain an\
    \ IP datagram.\n   5. Examine the IPv4 protocol field to confirm that the value\
    \ of the\n      field is 97 (decimal).  If not, ignore the frame.\n   Other environment\
    \ specific criteria MAY also be applied.\n   Upon reception of an IPv4 datagram\
    \ with the Protocol field set to 97\n   (decimal), the MAC frame is processed\
    \ as follows:\n   1. Examine the 16-bit EtherIP header.  Confirm that the value\
    \ of the\n      version field is 3 (three), and that the value of the Reserved\n\
    \      field is 0 (zero).  Frames with other values MUST be discarded.\n   2.\
    \ Extract the encapsulated MAC frame from the EtherIP datagram.\n      Note that\
    \ the extracted frame MUST NOT include a FCS value.\n   3. Perform normal data\
    \ link layer processing to transmit the\n      extracted MAC frame to the destination\
    \ station on the LAN.  The\n      FCS MUST be calculated and appended to the frame\
    \ as part of the\n      data link layer transmission processing.\n"
- title: 5. IANA Considerations
  contents:
  - "5. IANA Considerations\n   IANA has assigned IP protocol value 97 (decimal) for\
    \ EtherIP.  No\n   further action or review is required.\n"
- title: 6. Security Considerations
  contents:
  - "6. Security Considerations\n   EtherIP can be used to enable the transfer of\
    \ encrypted Ethernet or\n   IEEE 802.3 frame payloads.  In this regard, EtherIP\
    \ can improve\n   security.  However, if a firewall permits EtherIP traffic to\
    \ pass in\n   and out of a protected enclave, arbitrary communications are enabled.\n\
    \   Therefore, if a firewall is configured to permit communication using\n   EtherIP,\
    \ then additional checking of each frame is probably necessary\n   to ensure that\
    \ the security policy that the firewall is installed to\n   enforce is not violated.\n\
    \   Further, the addition of EtherIP can expose a particular environment\n   to\
    \ additional security threats.  Assumptions that might be\n   appropriate when\
    \ all communicating nodes are attached to one Ethernet\n   segment or switch may\
    \ no longer hold when nodes are attached to\n   different Ethernet segments or\
    \ switches are bridged together with\n   EtherIP.  It is outside the scope of\
    \ this specification, which\n   documents an existing practice, to fully analyze\
    \ and review the risks\n   of Ethernet tunneling.  The IETF Pseudo-wire Emulation\
    \ Working Group\n   is doing work in this area, and this group is expected to\
    \ provide\n   information about general layering as well as specific Ethernet\
    \ over\n   IP documents.  An example should make the concern clear.  A number\
    \ of\n   IETF standards employ relatively weak security mechanisms when\n   communicating\
    \ nodes are expected to be connected to the same local\n   area network.  The\
    \ Virtual Router Redundancy Protocol [RFC2338] is\n   one instance.  The relatively\
    \ weak security mechanisms represent a\n   greater vulnerability in an emulated\
    \ Ethernet.  One solution is to\n   protect the IP datagrams that carry EtherIP\
    \ with IPsec [RFC2401].\n   The IETF Pseudo-wire Emulation Working Group may document\
    \ other\n   security mechanisms as well.\n"
- title: 7. Acknowledgements
  contents:
  - "7. Acknowledgements\n   This document describes a protocol that was originally\
    \ designed and\n   implemented by Xerox Special Information Systems in 1991 and\
    \ 1992.\n   An earlier version of the protocol was provided as part of the Xerox\n\
    \   Ethernet Tunnel (XET).\n"
- title: 8. References
  contents:
  - "8. References\n   [CSMA/CD] Institute of Electrical and Electronics Engineers:\n\
    \             \"Carrier Sense Multiple Access with Collision Detection\n     \
    \        (CSMA/CD) Access Method and Physical Layer Specifications\",\n      \
    \       ANSI/IEEE Std 802.3-1985, 1985.\n   [DIX]     Digital Equipment Corporation,\
    \ Intel Corporation, and Xerox\n             Corporation: \"The Ethernet -- A\
    \ Local Area Network: Data\n             Link Layer and Physical Layer (Version\
    \ 2.0)\", November\n             1982.\n   [RFC791]  Postel, J., \"Internet Protocol\"\
    , STD 5, RFC 791, September\n             1981.\n   [RFC2119] Bradner, S., \"\
    Key Words for Use in RFCs to Indicate\n             Requirement Levels\", BCP\
    \ 14, RFC 2119, March 1997.\n   [RFC2338] Knight, S., Weaver, D., Whipple, D.,\
    \ Hinden, R., Mitzel,\n             D., Hunt, P., Higginson, P., Shand, M. and\
    \ A. Lindem,\n             \"Virtual Router Redundancy Protocol\", RFC 2338, April\
    \ 1998.\n   [RFC2401] Kent, S. and R. Atkinson, \"Security Architecture for the\n\
    \             Internet Protocol\", RFC 2401, November 1998.\n   [SDE]     Institute\
    \ of Electrical and Electronics Engineers:\n             \"Interoperable LAN/MAN\
    \ Security (SILS) Secure Data Exchange\n             (SDE) (Clause 2)\", IEEE\
    \ Std 802.10b-1992, 1992.\n   [XNS]     Xerox Corporation: \"Internet Transport\
    \ Protocols\", XSIS\n             028112, December 1981.\n   [VLAN]    Institute\
    \ of Electrical and Electronics Engineers: \"IEEE\n             Standard for Local\
    \ and Metropolitan Area Networks: Virtual\n             Bridge Local Area Networks\"\
    , ANSI/IEEE Std 802.1Q-1998,\n             1998.\n"
- title: 9. Authors' Addresses
  contents:
  - "9. Authors' Addresses\n   Russell Housley\n   RSA Laboratories\n   918 Spring\
    \ Knoll Drive\n   Herndon, VA 20170\n   USA\n   EMail: rhousley@rsasecurity.com\n\
    \   Scott Hollenbeck\n   VeriSign, Inc.\n   21345 Ridgetop Circle\n   Dulles,\
    \ VA 20166-6503\n   USA\n   EMail: shollenbeck@verisign.com\n"
- title: 10. Full Copyright Statement
  contents:
  - "10. Full Copyright Statement\n   Copyright (C) The Internet Society (2002). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
