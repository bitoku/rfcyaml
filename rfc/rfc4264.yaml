- title: __initial_text__
  contents:
  - '                              BGP Wedgies

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   It has commonly been assumed that the Border Gateway Protocol (BGP)\n\
    \   is a tool for distributing reachability information in a manner that\n   creates\
    \ forwarding paths in a deterministic manner.  In this memo we\n   will describe\
    \ a class of BGP configurations for which there is more\n   than one potential\
    \ outcome, and where forwarding states other than\n   the intended state are equally\
    \ stable.  Also, the stable state where\n   BGP converges may be selected by BGP\
    \ in a non-deterministic manner.\n   These stable, but unintended, BGP states\
    \ are termed here \"BGP\n   Wedgies\".\n"
- title: Table of Contents
  contents:
  - 'Table of Contents

    '
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   It has commonly been assumed that the Border Gateway Protocol\
    \ (BGP)\n   [RFC1771] is a tool for distributing reachability information in a\n\
    \   manner that creates forwarding paths in a deterministic manner.  This\n  \
    \ is a 'problem statement' memo that describes a class of BGP\n   configurations\
    \ for which there is more than one stable forwarding\n   state.  In this class\
    \ of configurations there exist multiple stable\n   forwarding states.  One of\
    \ these stable forwarding states is the\n   intended state, with other stable\
    \ forwarding states being unintended.\n   The BGP convergence process of selection\
    \ of a stable forwarding state\n   may operate in a non-deterministic manner in\
    \ such cases.\n   These stable, but unintended, BGP states are termed here \"\
    BGP\n   Wedgies\".\n"
- title: 2.  Describing BGP Routing Policy
  contents:
  - "2.  Describing BGP Routing Policy\n   BGP routing policies generally reflect\
    \ each network administrator's\n   objective to optimize their position with respect\
    \ to their network's\n   cost, performance, and reliability.\n   With respect\
    \ to cost optimization, the local network's default\n   routing policy often reflects\
    \ a local preference to prefer routes\n   learned from a customer to routes learned\
    \ from some form of peering\n   exchange.  In the same vein, the local network\
    \ is often configured to\n   prefer routes learned from a peer or a customer over\
    \ those learned\n   from a directly connected upstream transit provider.  These\n\
    \   preferences may be expressed via a local preference configuration\n   setting,\
    \ where the local preference overrides the AS path length\n   metric of the base\
    \ BGP operation.\n   In terms of engineering reliability in the inter-domain routing\n\
    \   environment it is commonly the case that a service provider may enter\n  \
    \ into arrangements with two or more upstream transit providers,\n   passing routes\
    \ to all upstream providers, and receiving traffic from\n   all sources.  If the\
    \ path to one upstream fails, the traffic will\n   switch to other links.  Once\
    \ the path is recovered, the traffic\n   should switch back.\n   In such situations\
    \ of multiple upstream providers it is also common\n   to place a relative preference\
    \ on the providers, so that one\n   connection is regarded as a preferred, or\
    \ \"primary\" connection, and\n   other connections are regarded as less preferred,\
    \ or \"backup\"\n   connections.  The intent is typically that the backup connections\n\
    \   will be used for traffic only for the duration of a failure in the\n   primary\
    \ connection.\n   It is possible to express this primary / backup policy using\
    \ local AS\n   path prepending, where the AS path is artificially lengthened towards\n\
    \   the backup providers, using additional instances of the local AS.\n   This\
    \ is not a deterministic selection algorithm, as the selected\n   primary provider\
    \ may in turn be using AS path prepending to its\n   backup upstream provider,\
    \ and in certain cases the path through the\n   backup provider may still be selected\
    \ as the shortest AS path length.\n   An alternative approach to routing policy\
    \ specification uses BGP\n   communities [RFC1997].  In this case, the provider\
    \ publishes a set of\n   community values that allows the client to select the\
    \ provider's\n   local preference setting.  The client can use a community to\
    \ mark a\n   route as \"backup only\" towards the backup provider, and \"primary\n\
    \   preferred' to the primary provider, assuming both providers support\n   community\
    \ values with such semantics.  In this case, the local\n   preference overrides\
    \ the AS path length metric, so that if the route\n   is marked \"backup only\"\
    , the route will be selected only when there\n   is no other source of the route.\n"
- title: 3.  BGP Wedgies
  contents:
  - "3.  BGP Wedgies\n   The richness of local policy expression through the use of\n\
    \   communities, when coupled with the behavior of a distance vector\n   protocol\
    \ like BGP, leads to the observation that certain\n   configurations have more\
    \ than one \"solution\", or more than one stable\n   BGP state.  An example of\
    \ such a situation is indicated in Figure 1.\n       +----+peer              \
    \  peer+----+\n       |AS 3|------------------------|AS 4|\n       +----+    \
    \                    +----+\n         |provider             provider|\n      \
    \   |                             |\n         |                             |\n\
    \         |customer                     |\n       +----+                     \
    \     |\n       |AS 2|                          |\n       +----+             \
    \             |\n         |provider                     |\n         |        \
    \                     |\n         |                             |\n         |customer\
    \             customer|\n         +---------------+  +----------+\n          \
    \ backup service|  |primary service\n                        +----+\n        \
    \                |AS 1|\n                        +----+\n                    \
    \             Figure 1\n   In this case, AS1 has marked its advertisement of prefixes\
    \ to AS2 as\n   \"backup only\", and its advertisement of prefixes to AS4 as \"\
    primary\".\n   AS4 will advertise AS1's prefixes to AS3.  AS3 will hear AS4's\n\
    \   advertisement across the peering link, and select AS1's prefixes with\n  \
    \ the path \"AS4, AS1\".  AS3 will advertise these prefixes to AS2.  AS2\n   will\
    \ hear two paths to AS1's prefixes, the first is via the direct\n   connection\
    \ to AS1, and the second is via the path \"AS3, AS4, AS1\".\n   AS2 will prefer\
    \ the longer path, as the directly connected routes are\n   marked \"backup only\"\
    , and AS2's local preference decision will prefer\n   the AS3 advertisement over\
    \ the AS1 advertisement.\n   This is the intended outcome of AS1's policy settings\
    \ where, in the\n   'normal' state, no traffic passes from AS2 to AS1 across the\
    \ backup\n   link, and AS2 reaches AS1 via a path that transits AS3 and AS4, using\n\
    \   the primary link to AS1.\n   This intended outcome is achieved as long as\
    \ AS1 announces its routes\n   on the primary path to AS4 before announcing its\
    \ backup routes to\n   AS2.\n   If the AS1 - AS4 path is broken, causing a BGP\
    \ session failure\n   between AS1 and AS4, then AS4 will withdraw its advertisement\
    \ of\n   AS1's routes to AS3, who, in turn, will send a withdrawal to AS2.\n \
    \  AS2 will then select the backup path to AS1.  AS2 will advertise this\n   path\
    \ to AS3, and AS3 will advertise this path to AS4.  Again, this is\n   part of\
    \ the intended operation of the primary / backup policy\n   setting, and all traffic\
    \ to AS1 will use the backup path.\n   When connectivity between AS4 and AS1 is\
    \ restored the BGP state will\n   not revert to the original state.  AS4 will\
    \ learn the primary path to\n   AS1 and re-advertise this to AS3 using the path\
    \ \"AS4, AS1\".  AS3,\n   using a default preference of preferring customer-advertised\
    \ routes\n   over peer routes will continue to prefer the \"AS2, AS1\" path. \
    \ AS3\n   will not pass any updates to AS2.  After the restoration of the\n  \
    \ AS4-to-AS1 circuit, the traffic from AS3 to AS1 and from AS2 to AS1\n   will\
    \ be presented to AS1 via the backup path, even through the\n   primary path via\
    \ AS4 is back in service.\n   The intended forwarding state can only be restored\
    \ by AS1\n   deliberately bringing down its eBGP session with AS2, even though\
    \ it\n   is carrying traffic.  This will cause the BGP state to revert to the\n\
    \   intended configuration.\n   It is often the case that an AS will attempt to\
    \ balance incoming\n   traffic across multiple providers, again using the primary\
    \ / backup\n   mechanism.  For some prefixes one link is configured as the primary\n\
    \   link, and the others as the backup link, while for other prefixes\n   another\
    \ link is selected as the primary link.  An example is shown in\n   Figure 2.\n\
    \       +----+peer                  peer+----+\n       |AS 3|--------------------------|AS\
    \ 4|\n       +----+                          +----+\n         |provider      \
    \         provider|\n         |                               |\n         |  \
    \                     customer|\n         |customer                       |\n\
    \       +----+                          +----+\n       |AS 2|                \
    \          |AS 5|\n       +----+                          +----+\n         |provider\
    \               provider|\n         |                               |\n      \
    \   |                               |\n         |customer               customer|\n\
    \         +-----------------+  +----------+\n                           |  |\n\
    \    backup (192.0.2.0/25)  |  |primary service (192.0.2.0/25)\n   primary (192.0.2.128/25)|\
    \  |backup service (192.0.2.128/25)\n                          +----+\n      \
    \                    |AS 1|\n                          +----+\n              \
    \                   Figure 2\n   The intended configuration has all incoming traffic\
    \ for addresses in\n   the range 192.0.2.0/25 via the link from AS5, and all incoming\n\
    \   traffic for addresses in the range 192.0.2.128/25 from AS2.\n   In this case,\
    \ if the link between AS3 and AS4 is reset, AS3 will\n   learn both routes from\
    \ AS2, and AS4 will learn both routes from AS5.\n   As these customer routes are\
    \ preferred over peer routes, when the\n   link between AS3 and AS4 is restored,\
    \ neither AS3 nor AS4 will alter\n   their routing behavior with respect to AS1's\
    \ routes.  This situation\n   is now wedged, in that there is no eBGP peering\
    \ that can be reset\n   that will flip BGP back to the intended state.  This is\
    \ an instance\n   of a BGP Wedgie.\n   The restoration path here is that AS1 has\
    \ to withdraw the backup\n   advertisements on both paths and operate for an interval\
    \ without\n   backup, and then re-advertise the backup prefix advertisements.\
    \  The\n   length of the interval cannot be readily determined in advance, as\
    \ it\n   has to be sufficiently long so as to allow AS2 and AS5 to learn of an\n\
    \   alternate path to AS1.  At this stage the backup routes can be re-\n   advertised.\n"
- title: 4.  Multi-Party BGP Wedgies
  contents:
  - "4.  Multi-Party BGP Wedgies\n   This situation can be more complex when three\
    \ or more parties provide\n   upstream transit services to an AS.  An example\
    \ is indicated in\n   Figure 3.\n       +----+ peer              peer +----+\n\
    \       |AS 3|------------------------|AS 4|\n       +----+                  \
    \      +----+\n        ||provider             provider|\n        |+----------------+\
    \            |\n        |                 |            |\n        |customer  \
    \       |customer    |\n       +----+peer   peer+----+         |\n       |AS 2|-----------|AS\
    \ 5|         |\n       +----+           +----+         |\n         |provider \
    \ provider|          |\n         |                  |          |\n         | \
    \                 |          |\n         |customer  customer|  customer|\n   \
    \      +---------------+  |+---------+\n           backup service|  ||primary\
    \ service\n                        +----+\n                        |AS 1|\n  \
    \                      +----+\n                                 Figure 3\n   In\
    \ this example, the intended state is that AS2 and AS5 are both\n   backup providers\
    \ to AS1, and AS4 is the primary provider.  When the\n   link between AS1 and\
    \ AS4 breaks and is subsequently restored, AS3\n   will continue to direct traffic\
    \ to AS1 via AS2 or AS5.  In this case,\n   a single reset of the link between\
    \ AS2 and AS1 will not restore the\n   original intended BGP state, as the BGP-selected\
    \ best route to AS1\n   will switch to AS5, and AS2 and AS3 will learn a path\
    \ to AS1 via AS5.\n   What AS1 is observing is incoming traffic on the backup\
    \ link from\n   AS2.  Resetting this connection will not restore traffic back\
    \ to the\n   primary path, but instead will switch incoming traffic over to AS5.\n\
    \   The action required to correct the situation is to simultaneously\n   reset\
    \ both the link to AS2, and also the link to AS5.  This is not\n   necessarily\
    \ an intuitively obvious solution, as at any point on time\n   only one of these\
    \ links will be carrying backup traffic, yet both BGP\n   sessions need to be\
    \ brought down at the same time in order to\n   commence restoration of the intended\
    \ primary and backup state.\n"
- title: 5.  BGP and Determinism
  contents:
  - "5.  BGP and Determinism\n   BGP does not behave deterministically in all cases,\
    \ and, as a\n   consequence, there is intended and unintended non-determinism\
    \ in BGP.\n   For example, the default final tie break in some implementations\
    \ of\n   BGP is to prefer the longest-lived route.  To achieve determinism in\n\
    \   this last step it would be necessary to use a comparison operator\n   that\
    \ has a predictable outcome, such as a comparison of router\n   identifiers. \
    \ This class of non-deterministic behavior is termed here\n   \"intended\" non-determinism,\
    \ in that the policy interactions are, to\n   some extent, predictable by network\
    \ administrators.\n   BGP is also able to generate outcomes that can be described\
    \ as\n   \"unintended non-determinism\" that can result from unexpected policy\n\
    \   interactions.  These outcomes do not represent misconfiguration in\n   the\
    \ standard sense, since all policies may look completely rational\n   locally,\
    \ but their interaction across multiple routing entities can\n   cause unintended\
    \ outcomes, and BGP may reach a state that includes\n   such unintended outcomes\
    \ in a non-deterministic manner.\n   Unintended non-determinism in BGP would not\
    \ be as critical an issue\n   if all stable routings were guaranteed to be consistent\
    \ with the\n   policy writer's intent.  However, this is not always the case.\
    \  The\n   above examples indicate that the operation of BGP allows multiple\n\
    \   stable states to exist from a single configuration state, where some\n   of\
    \ these states are not consistent with the policy writer's intent.\n   These particular\
    \ examples can be described as a form of \"route\n   pinning\", where the route\
    \ is pinned to a non-preferred path.\n   The challenge for the network administrator\
    \ is to ensure that an\n   intended state is maintained.  Under certain circumstances\
    \ this can\n   only be achieved by deliberate service disruption, involving the\n\
    \   withdrawal of routes being used to forward traffic, and\n   re-advertising\
    \ routes in a certain sequence in order to induce an\n   intended BGP state. \
    \ However, the knowledge that is required by any\n   single network operator administrator\
    \ in order to understand the\n   reason why BGP has stabilized to an unintended\
    \ state requires BGP\n   policy configuration knowledge of remote networks.  In\
    \ effect, there\n   is insufficient local information for any single network\n\
    \   administrator to correctly identify the root cause of the unintended\n   BGP\
    \ state, nor is there sufficient information to allow any single\n   network administrator\
    \ to undertake a sequence of steps to rectify the\n   situation back to the intended\
    \ routing state.\n   It is reasonable to anticipate that the density of interconnection\n\
    \   will continue to increase, and the capability for policy-based\n   preference\
    \ settings of learned and re-advertised routes will become\n   more expressive.\
    \  Therefore, it is reasonable to anticipate that the\n   number of unintended\
    \ but stable BGP states will increase, and the\n   ability to define the necessary\
    \ sequence of route withdrawals and\n   re-advertisements will become more challenging\
    \ for network operators\n   to determine in advance.\n   Whether this could lead\
    \ to a BGP routing system reaching a point\n   where each network consistently\
    \ cannot direct traffic in a\n   deterministic manner is, at this stage, a matter\
    \ of speculation.  BGP\n   Wedgies illustrate that a sufficiently complex interconnection\n\
    \   topology, coupled with a sufficiently expressive set of policy\n   constructs,\
    \ can lead to a number of stable BGP states, rather than a\n   single intended\
    \ state.  As the topology complexity increases, it is\n   not possible to deterministically\
    \ predict which state the BGP routing\n   system may converge to.  Paradoxically,\
    \ the demands of inter-domain\n   traffic engineering appear to require greater\
    \ levels of expressive\n   capability in policy-based routing directives, operating\
    \ across\n   denser interconnectivity topologies in a deterministic manner.  This\n\
    \   may not be a sustainable outcome in BGP-based routing systems.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   BGP is a relaying protocol, where route information\
    \ is received,\n   processed, and forwarded.  BGP contains no specific mechanisms\
    \ to\n   prevent the unauthorized modification of the information by a\n   forwarding\
    \ agent, allowing routing information to be modified or\n   deleted, or for false\
    \ information to be inserted without the\n   knowledge of the originator of the\
    \ routing information or any of the\n   recipients.\n   This memo proposes no\
    \ modifications to the BGP protocol, nor does it\n   propose any changes to the\
    \ manner of deployment of BGP, and therefore\n   introduces no new factors in\
    \ terms of the security and integrity of\n   inter-domain routing.\n   This memo\
    \ illustrates that, in attempting to create policy-based\n   outcomes relating\
    \ to path selection for incoming traffic, it is\n   possible to generate BGP configurations\
    \ where there are multiple\n   stable outcomes, rather than a single outcome.\
    \  Furthermore, of these\n   instances of multiple outcomes, there are cases where\
    \ the BGP\n   selection of a particular outcome is not a deterministic selection.\n\
    \   This class of behaviour may be exploitable by a hostile third party.\n   A\
    \ common theme of BGP Wedgies is that starting from an intended or\n   desired\
    \ forwarding state, the loss and subsequent restoration of an\n   eBGP peering\
    \ connection can flip the network's forwarding\n   configuration into an unintended\
    \ and potentially undesired state.\n   Significant administrative effort, based\
    \ on BGP state and\n   configuration knowledge that may not be locally available,\
    \ may be\n   required to shift the BGP forwarding configuration back to the\n\
    \   intended or desired forwarding state.  If a hostile third party can\n   deliberately\
    \ cause the BGP session to reset, thereby producing the\n   initial conditions\
    \ that lead to an unintended forwarding state, the\n   network impacts of the\
    \ resulting unintended or undesired forwarding\n   state may be long-lived, far\
    \ outliving the temporary interruption of\n   connectivity that triggered the\
    \ condition.  If these impacts,\n   including potential issues of increased cost,\
    \ reduction of available\n   bandwidth, increases in overall latency or degradation\
    \ of service\n   reliability, are significant, then disrupting a BGP session could\n\
    \   represent an attractive attack vector to a hostile party.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC1771]  Rekhter, Y. and T. Li, \"A Border Gateway\
    \ Protocol 4\n              (BGP-4)\", RFC 1771, March 1995.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [RFC1997]  Chandrasekeran, R., Traina, P., and\
    \ T. Li, \"BGP\n              Communities Attribute\", RFC 1997, August 1996.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Tim G. Griffin\n   Computer Laboratory\n   University\
    \ of Cambridge\n   EMail: Timothy.Griffin@cl.cam.ac.uk\n   Geoff Huston\n   Asia\
    \ Pacific Network Information Centre\n   EMail: gih@apnic.net\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
