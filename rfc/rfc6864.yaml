- title: __initial_text__
  contents:
  - '               Updated Specification of the IPv4 ID Field

    '
- title: Abstract
  contents:
  - "Abstract\n   The IPv4 Identification (ID) field enables fragmentation and\n \
    \  reassembly and, as currently specified, is required to be unique\n   within\
    \ the maximum lifetime for all datagrams with a given source\n   address/destination\
    \ address/protocol tuple.  If enforced, this\n   uniqueness requirement would\
    \ limit all connections to 6.4 Mbps for\n   typical datagram sizes.  Because individual\
    \ connections commonly\n   exceed this speed, it is clear that existing systems\
    \ violate the\n   current specification.  This document updates the specification\
    \ of\n   the IPv4 ID field in RFCs 791, 1122, and 2003 to more closely reflect\n\
    \   current practice and to more closely match IPv6 so that the field's\n   value\
    \ is defined only when a datagram is actually fragmented.  It\n   also discusses\
    \ the impact of these changes on how datagrams are used.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6864.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Conventions Used in This Document ...............................3\n  \
    \ 3. The IPv4 ID Field ...............................................4\n    \
    \  3.1. Uses of the IPv4 ID Field ..................................4\n      3.2.\
    \ Background on IPv4 ID Reassembly Issues ....................5\n   4. Updates\
    \ to the IPv4 ID Specification ............................6\n      4.1. IPv4\
    \ ID Used Only for Fragmentation ........................7\n      4.2. Encouraging\
    \ Safe IPv4 ID Use ...............................8\n      4.3. IPv4 ID Requirements\
    \ That Persist ..........................8\n   5. Impact of Proposed Changes ......................................9\n\
    \      5.1. Impact on Legacy Internet Devices ..........................9\n  \
    \    5.2. Impact on Datagram Generation .............................10\n    \
    \  5.3. Impact on Middleboxes .....................................11\n      \
    \     5.3.1. Rewriting Middleboxes ..............................11\n        \
    \   5.3.2. Filtering Middleboxes ..............................12\n      5.4.\
    \ Impact on Header Compression ..............................12\n      5.5. Impact\
    \ of Network Reordering and Loss .....................13\n           5.5.1. Atomic\
    \ Datagrams Experiencing Reordering or Loss ...13\n           5.5.2. Non-atomic\
    \ Datagrams Experiencing\n                  Reordering or Loss .................................14\n\
    \   6. Updates to Existing Standards ..................................14\n  \
    \    6.1. Updates to RFC 791 ........................................14\n    \
    \  6.2. Updates to RFC 1122 .......................................15\n      6.3.\
    \ Updates to RFC 2003 .......................................16\n   7. Security\
    \ Considerations ........................................16\n   8. References\
    \ .....................................................17\n      8.1. Normative\
    \ References ......................................17\n      8.2. Informative\
    \ References ....................................17\n   9. Acknowledgments ................................................19\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   In IPv4, the Identification (ID) field is a 16-bit value\
    \ that is\n   unique for every datagram for a given source address, destination\n\
    \   address, and protocol, such that it does not repeat within the\n   maximum\
    \ datagram lifetime (MDL) [RFC791] [RFC1122].  As currently\n   specified, all\
    \ datagrams between a source and destination of a given\n   protocol must have\
    \ unique IPv4 ID values over a period of this MDL,\n   which is typically interpreted\
    \ as two minutes and is related to the\n   recommended reassembly timeout [RFC1122].\
    \  This uniqueness is\n   currently specified as for all datagrams, regardless\
    \ of fragmentation\n   settings.\n   Uniqueness of the IPv4 ID is commonly violated\
    \ by high-speed devices;\n   if strictly enforced, it would limit the speed of\
    \ a single protocol\n   between two IP endpoints to 6.4 Mbps for typical MTUs\
    \ of 1500 bytes\n   (assuming a 2-minute MDL, using the analysis presented in\
    \ [RFC4963]).\n   It is common for a single connection to operate far in excess\
    \ of\n   these rates, which strongly indicates that the uniqueness of the IPv4\n\
    \   ID as specified is already moot.  Further, some sources have been\n   generating\
    \ non-varying IPv4 IDs for many years (e.g., cellphones),\n   which resulted in\
    \ support for such in RObust Header Compression\n   (ROHC) [RFC5225].\n   This\
    \ document updates the specification of the IPv4 ID field to more\n   closely\
    \ reflect current practice and to include considerations taken\n   into account\
    \ during the specification of the similar field in IPv6.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n   In this document, the characters \">>\" preceding\
    \ one or more indented\n   lines indicate a requirement using the key words listed\
    \ above.  This\n   convention aids reviewers in quickly identifying or finding\
    \ this\n   document's explicit requirements.\n"
- title: 3.  The IPv4 ID Field
  contents:
  - "3.  The IPv4 ID Field\n   IP supports datagram fragmentation, where large datagrams\
    \ are split\n   into smaller components to traverse links with limited maximum\n\
    \   transmission units (MTUs).  Fragments are indicated in different ways\n  \
    \ in IPv4 and IPv6:\n   o  In IPv4, fragments are indicated using four fields\
    \ of the basic\n      header: Identification (ID), Fragment Offset, a \"Don't\
    \ Fragment\"\n      (DF) flag, and a \"More Fragments\" (MF) flag [RFC791].\n\
    \   o  In IPv6, fragments are indicated in an extension header that\n      includes\
    \ an ID, Fragment Offset, and an M (more fragments) flag\n      similar to their\
    \ counterparts in IPv4 [RFC2460].\n   IPv6 fragmentation differs from IPv4 fragmentation\
    \ in a few important\n   ways.  IPv6 fragmentation occurs only at the source,\
    \ so a DF bit is\n   not needed to prevent downstream devices from initiating\n\
    \   fragmentation (i.e., IPv6 always acts as if DF=1).  The IPv6 fragment\n  \
    \ header is present only when a datagram has been fragmented, or when\n   the\
    \ source has received a \"packet too big\" ICMPv6 error message\n   indicating\
    \ that the path cannot support the required minimum\n   1280-byte IPv6 MTU and\
    \ is thus subject to translation [RFC2460]\n   [RFC4443].  The latter case is\
    \ relevant only for IPv6 datagrams sent\n   to IPv4 destinations to support subsequent\
    \ fragmentation after\n   translation to IPv4.\n   With the exception of these\
    \ two cases, the ID field is not present\n   for non-fragmented datagrams; thus,\
    \ it is meaningful only for\n   datagrams that are already fragmented or datagrams\
    \ intended to be\n   fragmented as part of IPv4 translation.  Finally, the IPv6\
    \ ID field\n   is 32 bits and required unique per source/destination address pair\n\
    \   for IPv6, whereas for IPv4 it is only 16 bits and required unique per\n  \
    \ source address/destination address/protocol tuple.\n   This document focuses\
    \ on the IPv4 ID field issues, because in IPv6\n   the field is larger and present\
    \ only in fragments.\n"
- title: 3.1.  Uses of the IPv4 ID Field
  contents:
  - "3.1.  Uses of the IPv4 ID Field\n   The IPv4 ID field was originally intended\
    \ for fragmentation and\n   reassembly [RFC791].  Within a given source address,\
    \ destination\n   address, and protocol, fragments of an original datagram are\
    \ matched\n   based on their IPv4 ID.  This requires that IDs be unique within\
    \ the\n   source address/destination address/protocol tuple when fragmentation\n\
    \   is possible (e.g., DF=0) or when it has already occurred (e.g.,\n   frag_offset>0\
    \ or MF=1).\n   Other uses have been envisioned for the IPv4 ID field.  The field\
    \ has\n   been proposed as a way to detect and remove duplicate datagrams,\n \
    \  e.g., at congested routers (noted in Section 3.2.1.5 of [RFC1122]) or\n   in\
    \ network accelerators.  It has similarly been proposed for use at\n   end hosts\
    \ to reduce the impact of duplication on higher-layer\n   protocols (e.g., additional\
    \ processing in TCP or the need for\n   application-layer duplicate suppression\
    \ in UDP).  This is discussed\n   further in Section 5.1.\n   The IPv4 ID field\
    \ is used in some diagnostic tools to correlate\n   datagrams measured at various\
    \ locations along a network path.  This\n   is already insufficient in IPv6 because\
    \ unfragmented datagrams lack\n   an ID, so these tools are already being updated\
    \ to avoid such\n   reliance on the ID field.  This is also discussed further\
    \ in\n   Section 5.1.\n   The ID clearly needs to be unique (within the MDL, within\
    \ the source\n   address/destination address/protocol tuple) to support fragmentation\n\
    \   and reassembly, but not all datagrams are fragmented or allow\n   fragmentation.\
    \  This document deprecates non-fragmentation uses,\n   allowing the ID to be\
    \ repeated (within the MDL, within the source\n   address/destination address/protocol\
    \ tuple) in those cases.\n"
- title: 3.2.  Background on IPv4 ID Reassembly Issues
  contents:
  - "3.2.  Background on IPv4 ID Reassembly Issues\n   The following is a summary\
    \ of issues with IPv4 fragment reassembly in\n   high-speed environments raised\
    \ previously [RFC4963].  Readers are\n   encouraged to consult RFC 4963 for a\
    \ more detailed discussion of\n   these issues.\n   With the maximum IPv4 datagram\
    \ size of 64 KB, a 16-bit ID field that\n   does not repeat within 120 seconds\
    \ means that the aggregate of all\n   TCP connections of a given protocol between\
    \ two IP endpoints is\n   limited to roughly 286 Mbps; at a more typical MTU of\
    \ 1500 bytes,\n   this speed drops to 6.4 Mbps [RFC791] [RFC1122] [RFC4963]. \
    \ This\n   limit currently applies for all IPv4 datagrams within a single\n  \
    \ protocol (i.e., the IPv4 protocol field) between two IP addresses,\n   regardless\
    \ of whether fragmentation is enabled or inhibited and\n   whether or not a datagram\
    \ is fragmented.\n   IPv6, even at typical MTUs, is capable of 18.7 Tbps with\n\
    \   fragmentation between two IP endpoints as an aggregate across all\n   protocols,\
    \ due to the larger 32-bit ID field (and the fact that the\n   IPv6 next-header\
    \ field, the equivalent of the IPv4 protocol field, is\n   not considered in differentiating\
    \ fragments).  When fragmentation is\n   not used, the field is absent, and in\
    \ that case IPv6 speeds are not\n   limited by the ID field uniqueness.\n   Note\
    \ also that 120 seconds is only an estimate on the MDL.  It is\n   related to\
    \ the reassembly timeout as a lower bound and the TCP\n   Maximum Segment Lifetime\
    \ as an upper bound (both as noted in\n   [RFC1122]).  Network delays are incurred\
    \ in other ways, e.g.,\n   satellite links, which can add seconds of delay even\
    \ though the Time\n   to Live (TTL) is not decremented by a corresponding amount.\
    \  There is\n   thus no enforcement mechanism to ensure that datagrams older than\
    \ 120\n   seconds are discarded.\n   Wireless Internet devices are frequently\
    \ connected at speeds over\n   54 Mbps, and wired links of 1 Gbps have been the\
    \ default for several\n   years.  Although many end-to-end transport paths are\
    \ congestion\n   limited, these devices easily achieve 100+ Mbps application-layer\n\
    \   throughput over LANs (e.g., disk-to-disk file transfer rates), and\n   numerous\
    \ throughput demonstrations with Commercial-Off-The-Shelf\n   (COTS) systems over\
    \ wide-area paths have exhibited these speeds for\n   over a decade.  This strongly\
    \ suggests that IPv4 ID uniqueness has\n   been moot for a long time.\n"
- title: 4.  Updates to the IPv4 ID Specification
  contents:
  - "4.  Updates to the IPv4 ID Specification\n   This document updates the specification\
    \ of the IPv4 ID field in three\n   distinct ways, as discussed in subsequent\
    \ subsections:\n   o  Using the IPv4 ID field only for fragmentation\n   o  Encouraging\
    \ safe operation when the IPv4 ID field is used\n   o  Avoiding a performance\
    \ impact when the IPv4 ID field is used\n   There are two kinds of datagrams,\
    \ which are defined below and used in\n   the following discussion:\n   o  Atomic\
    \ datagrams are datagrams not yet fragmented and for which\n      further fragmentation\
    \ has been inhibited.\n   o  Non-atomic datagrams are datagrams either that already\
    \ have been\n      fragmented or for which fragmentation remains possible.\n \
    \  This same definition can be expressed in pseudo code, using common\n   logical\
    \ operators (equals is ==, logical 'and' is &&, logical 'or' is\n   ||, greater\
    \ than is >, and the parenthesis function is used\n   typically) as follows:\n\
    \   o  Atomic datagrams: (DF==1)&&(MF==0)&&(frag_offset==0)\n   o  Non-atomic\
    \ datagrams: (DF==0)||(MF==1)||(frag_offset>0)\n   The test for non-atomic datagrams\
    \ is the logical negative of the test\n   for atomic datagrams; thus, all possibilities\
    \ are considered.\n"
- title: 4.1.  IPv4 ID Used Only for Fragmentation
  contents:
  - "4.1.  IPv4 ID Used Only for Fragmentation\n   Although RFC 1122 suggests that\
    \ the IPv4 ID field has other uses,\n   including datagram de-duplication, such\
    \ uses are already not\n   interoperable with known implementations of sources\
    \ that do not vary\n   their ID.  This document thus defines this field's value\
    \ only for\n   fragmentation and reassembly:\n   >> The IPv4 ID field MUST NOT\
    \ be used for purposes other than\n      fragmentation and reassembly.\n   Datagram\
    \ de-duplication can still be accomplished using hash-based\n   duplicate detection\
    \ for cases where the ID field is absent (IPv6\n   unfragmented datagrams), which\
    \ can also be applied to IPv4 atomic\n   datagrams without utilizing the ID field\
    \ [RFC6621].\n   In atomic datagrams, the IPv4 ID field has no meaning; thus,\
    \ it can\n   be set to an arbitrary value, i.e., the requirement for non-repeating\n\
    \   IDs within the source address/destination address/protocol tuple is\n   no\
    \ longer required for atomic datagrams:\n   >> Originating sources MAY set the\
    \ IPv4 ID field of atomic datagrams\n      to any value.\n   Second, all network\
    \ nodes, whether at intermediate routers,\n   destination hosts, or other devices\
    \ (e.g., NATs and other address-\n   sharing mechanisms, firewalls, tunnel egresses),\
    \ cannot rely on the\n   field of atomic datagrams:\n   >> All devices that examine\
    \ IPv4 headers MUST ignore the IPv4 ID\n      field of atomic datagrams.\n   The\
    \ IPv4 ID field is thus meaningful only for non-atomic datagrams --\n   either\
    \ those datagrams that have already been fragmented or those for\n   which fragmentation\
    \ remains permitted.  Atomic datagrams are detected\n   by their DF, MF, and fragmentation\
    \ offset fields as explained in\n   Section 4, because such a test is completely\
    \ backward compatible;\n   thus, this document does not reserve any IPv4 ID values,\
    \ including 0,\n   as distinguished.\n   Deprecating the use of the IPv4 ID field\
    \ for non-reassembly uses\n   should have little -- if any -- impact.  IPv4 IDs\
    \ are already\n   frequently repeated, e.g., over even moderately fast connections\
    \ and\n   from some sources that do not vary the ID at all, and no adverse\n \
    \  impact has been observed.  Duplicate suppression was suggested\n   [RFC1122]\
    \ and has been implemented in some protocol accelerators, but\n   no impacts of\
    \ IPv4 ID reuse have been noted to date.  Routers are not\n   required to issue\
    \ ICMPs on any particular timescale, and so IPv4 ID\n   repetition should not\
    \ have been used for validation purposes; this\n   scenario has not been observed.\
    \  Besides, repetition already occurs\n   and would have been noticed [RFC1812].\
    \  ICMP relaying at tunnel\n   ingresses is specified to use soft state rather\
    \ than a datagram\n   cache; for similar reasons, if the latter is used, this\
    \ should have\n   been noticed [RFC2003].  These and other legacy issues are discussed\n\
    \   further in Section 5.1.\n"
- title: 4.2.  Encouraging Safe IPv4 ID Use
  contents:
  - "4.2.  Encouraging Safe IPv4 ID Use\n   This document also changes the specification\
    \ of the IPv4 ID field to\n   encourage its safe use.\n   As discussed in RFC\
    \ 1122, if TCP retransmits a segment, it may be\n   possible to reuse the IPv4\
    \ ID (see Section 6.2).  This can make it\n   difficult for a source to avoid\
    \ IPv4 ID repetition for received\n   fragments.  RFC 1122 concludes that this\
    \ behavior \"is not useful\";\n   this document formalizes that conclusion as\
    \ follows:\n   >> The IPv4 ID of non-atomic datagrams MUST NOT be reused when\n\
    \      sending a copy of an earlier non-atomic datagram.\n   RFC 1122 also suggests\
    \ that fragments can overlap.  Such overlap can\n   occur if successive retransmissions\
    \ are fragmented in different ways\n   but with the same reassembly IPv4 ID. \
    \ This overlap is noted as the\n   result of reusing IPv4 IDs when retransmitting\
    \ datagrams, which this\n   document deprecates.  However, it is also the result\
    \ of in-network\n   datagram duplication, which can still occur.  As a result,\
    \ this\n   document does not change the need for receivers to support\n   overlapping\
    \ fragments.\n"
- title: 4.3.  IPv4 ID Requirements That Persist
  contents:
  - "4.3.  IPv4 ID Requirements That Persist\n   This document does not relax the\
    \ IPv4 ID field uniqueness\n   requirements of [RFC791] for non-atomic datagrams,\
    \ that is:\n   >> Sources emitting non-atomic datagrams MUST NOT repeat IPv4 ID\n\
    \      values within one MDL for a given source address/destination\n      address/protocol\
    \ tuple.\n   Such sources include originating hosts, tunnel ingresses, and NATs\n\
    \   (including other address-sharing mechanisms) (see Section 5.3).\n   This document\
    \ does not relax the requirement that all network devices\n   honor the DF bit,\
    \ that is:\n   >> IPv4 datagrams whose DF=1 MUST NOT be fragmented.\n   >> IPv4\
    \ datagram transit devices MUST NOT clear the DF bit.\n   Specifically, DF=1 prevents\
    \ fragmenting atomic datagrams.  DF=1 also\n   prevents further fragmenting received\
    \ fragments.  In-network\n   fragmentation is permitted only when DF=0; this document\
    \ does not\n   change that requirement.\n"
- title: 5.  Impact of Proposed Changes
  contents:
  - "5.  Impact of Proposed Changes\n   This section discusses the impact of the proposed\
    \ changes on legacy\n   devices, datagram generation in updated devices, middleboxes,\
    \ and\n   header compression.\n"
- title: 5.1.  Impact on Legacy Internet Devices
  contents:
  - "5.1.  Impact on Legacy Internet Devices\n   Legacy uses of the IPv4 ID field\
    \ consist of fragment generation,\n   fragment reassembly, duplicate datagram\
    \ detection, and \"other\" uses.\n   Current devices already generate ID values\
    \ that are reused within the\n   source address/destination address/protocol tuple\
    \ in less than the\n   current estimated Internet MDL of two minutes.  They assume\
    \ that the\n   MDL over their end-to-end path is much lower.\n   Existing devices\
    \ have been known to generate non-varying IDs for\n   atomic datagrams for nearly\
    \ a decade, notably some cellphones.  Such\n   constant ID values are the reason\
    \ for their support as an\n   optimization of ROHC [RFC5225].  This is discussed\
    \ further in\n   Section 5.4.  Generation of IPv4 datagrams with constant (zero)\
    \ IDs\n   is also described as part of the IP/ICMP translation standard\n   [RFC6145].\n\
    \   Many current devices support fragmentation that ignores the IPv4\n   Don't\
    \ Fragment (DF) bit.  Such devices already transit traffic from\n   sources that\
    \ reuse the ID.  If fragments of different datagrams\n   reusing the same ID (within\
    \ the source address/destination\n   address/protocol tuple) arrive at the destination\
    \ interleaved,\n   fragmentation would fail and traffic would be dropped.  Either\
    \ such\n   interleaving is uncommon or traffic from such devices is not widely\n\
    \   traversing these DF-ignoring devices, because significant occurrence\n   of\
    \ reassembly errors has not been reported.  DF-ignoring devices do\n   not comply\
    \ with existing standards, and it is not feasible to update\n   the standards\
    \ to allow them as compliant.\n   The ID field has been envisioned for use in\
    \ duplicate detection, as\n   discussed in Section 4.1.  Although this document\
    \ now allows IPv4 ID\n   reuse for atomic datagrams, such reuse is already common\
    \ (as noted\n   above).  Protocol accelerators are known to implement IPv4 duplicate\n\
    \   detection, but such devices are also known to violate other Internet\n   standards\
    \ to achieve higher end-to-end performance.  These devices\n   would already exhibit\
    \ erroneous drops for this current traffic, and\n   this has not been reported.\n\
    \   There are other potential uses of the ID field, such as for\n   diagnostic\
    \ purposes.  Such uses already need to accommodate atomic\n   datagrams with reused\
    \ ID fields.  There are no reports of such uses\n   having problems with current\
    \ datagrams that reuse IDs.\n   Thus, as a result of previous requirements, this\
    \ document recommends\n   that IPv4 duplicate detection and diagnostic mechanisms\
    \ apply\n   IPv6-compatible methods, i.e., methods that do not rely on the ID\n\
    \   field (e.g., as suggested in [RFC6621]).  This is a consequence of\n   using\
    \ the ID field only for reassembly, as well as the known hazard\n   of existing\
    \ devices already reusing the ID field.\n"
- title: 5.2.  Impact on Datagram Generation
  contents:
  - "5.2.  Impact on Datagram Generation\n   The following is a summary of the recommendations\
    \ that are the result\n   of the previous changes to the IPv4 ID field specification.\n\
    \   Because atomic datagrams can use arbitrary IPv4 ID values, the ID\n   field\
    \ no longer imposes a performance impact in those cases.\n   However, the performance\
    \ impact remains for non-atomic datagrams.  As\n   a result:\n   >> Sources of\
    \ non-atomic IPv4 datagrams MUST rate-limit their output\n      to comply with\
    \ the ID uniqueness requirements.  Such sources\n      include, in particular,\
    \ DNS over UDP [RFC2671].\n   Because there is no strict definition of the MDL,\
    \ reassembly hazards\n   exist regardless of the IPv4 ID reuse interval or the\
    \ reassembly\n   timeout.  As a result:\n   >> Higher-layer protocols SHOULD verify\
    \ the integrity of IPv4\n      datagrams, e.g., using a checksum or hash that\
    \ can detect\n      reassembly errors (the UDP and TCP checksums are weak in this\n\
    \      regard, but better than nothing).\n   Additional integrity checks can be\
    \ employed using tunnels, as\n   supported by the Subnetwork Encapsulation and\
    \ Adaptation Layer (SEAL)\n   [RFC5320], IPsec [RFC4301], or the Stream Control\
    \ Transmission\n   Protocol (SCTP) [RFC4960].  Such checks can avoid the reassembly\n\
    \   hazards that can occur when using UDP and TCP checksums [RFC4963] or\n   when\
    \ using partial checksums as in UDP-Lite [RFC3828].  Because such\n   integrity\
    \ checks can avoid the impact of reassembly errors:\n   >> Sources of non-atomic\
    \ IPv4 datagrams using strong integrity checks\n      MAY reuse the ID within\
    \ intervals that are smaller than typical\n      MDL values.\n   Note, however,\
    \ that such frequent reuse can still result in corrupted\n   reassembly and poor\
    \ throughput, although it would not propagate\n   reassembly errors to higher-layer\
    \ protocols.\n"
- title: 5.3.  Impact on Middleboxes
  contents:
  - "5.3.  Impact on Middleboxes\n   Middleboxes include rewriting devices such as\
    \ network address\n   translators (NATs), network address/port translators (NAPTs),\
    \ and\n   other address-sharing mechanisms (ASMs).  They also include devices\n\
    \   that inspect and filter datagrams but that are not routers, such as\n   accelerators\
    \ and firewalls.\n   The changes proposed in this document may not be implemented\
    \ by\n   middleboxes; however, these changes are more likely to make current\n\
    \   middlebox behavior compliant than to affect the service provided by\n   those\
    \ devices.\n"
- title: 5.3.1.  Rewriting Middleboxes
  contents:
  - "5.3.1.  Rewriting Middleboxes\n   NATs and NAPTs rewrite IP fields, and tunnel\
    \ ingresses (using IPv4\n   encapsulation) copy and modify some IPv4 fields; all\
    \ are therefore\n   considered datagram sources, as are any devices that rewrite\
    \ any\n   portion of the source address/destination address/protocol/ID tuple\n\
    \   for any datagrams [RFC3022].  This is also true for other ASMs,\n   including\
    \ IPv4 Residual Deployment (4rd) [De11], IVI [RFC6219], and\n   others in the\
    \ \"A+P\" (address plus port) family [Bo11].  It is equally\n   true for any other\
    \ datagram-rewriting mechanism.  As a result, they\n   are subject to all the\
    \ requirements of any datagram source, as has\n   been noted.\n   NATs/ASMs/rewriters\
    \ present a particularly challenging situation for\n   fragmentation.  Because\
    \ they overwrite portions of the reassembly\n   tuple in both directions, they\
    \ can destroy tuple uniqueness and\n   result in a reassembly hazard.  Whenever\
    \ IPv4 source address,\n   destination address, or protocol fields are modified,\
    \ a\n   NAT/ASM/rewriter needs to ensure that the ID field is generated\n   appropriately,\
    \ rather than simply copied from the incoming datagram.\n   Specifically:\n  \
    \ >> Address-sharing or rewriting devices MUST ensure that the IPv4 ID\n     \
    \ field of datagrams whose addresses or protocols are translated\n      comply\
    \ with these requirements as if the datagram were sourced by\n      that device.\n\
    \   This compliance means that the IPv4 ID field of non-atomic datagrams\n   translated\
    \ at a NAT/ASM/rewriter needs to obey the uniqueness\n   requirements of any IPv4\
    \ datagram source.  Unfortunately, translated\n   fragments already violate that\
    \ requirement, as they repeat an IPv4 ID\n   within the MDL for a given source\
    \ address/destination\n   address/protocol tuple.\n   Such problems with transmitting\
    \ fragments through NATs/ASMs/rewriters\n   are already known; translation is\
    \ typically based on the transport\n   port number, which is present in only the\
    \ first fragment anyway\n   [RFC3022].  This document underscores the point that\
    \ not only is\n   reassembly (and possibly subsequent fragmentation) required\
    \ for\n   translation, it can be used to avoid issues with IPv4 ID uniqueness.\n\
    \   Note that NATs/ASMs already need to exercise special care when\n   emitting\
    \ datagrams on their public side, because merging datagrams\n   from many sources\
    \ onto a single outgoing source address can result in\n   IPv4 ID collisions.\
    \  This situation precedes this document and is not\n   affected by it.  It is\
    \ exacerbated in large-scale, so-called \"carrier\n   grade\" NATs [Pe11].\n \
    \  Tunnel ingresses act as sources for the outermost header, but tunnels\n   act\
    \ as routers for the inner headers (i.e., the datagram as arriving\n   at the\
    \ tunnel ingress).  Ingresses can always fragment as originating\n   sources of\
    \ the outer header, because they control the uniqueness of\n   that IPv4 ID field\
    \ and the value of DF on the outer header\n   independent of those values on the\
    \ inner (arriving datagram) header.\n"
- title: 5.3.2.  Filtering Middleboxes
  contents:
  - "5.3.2.  Filtering Middleboxes\n   Middleboxes also include devices that filter\
    \ datagrams, such as\n   network accelerators and firewalls.  Some such devices\
    \ reportedly\n   feature datagram de-duplication that relies on IP ID uniqueness\
    \ to\n   identify duplicates, which has been discussed in Section 5.1.\n"
- title: 5.4.  Impact on Header Compression
  contents:
  - "5.4.  Impact on Header Compression\n   Header compression algorithms already\
    \ accommodate various ways in\n   which the IPv4 ID changes between sequential\
    \ datagrams [RFC1144]\n   [RFC2508] [RFC3545] [RFC5225].  Such algorithms currently\
    \ assume that\n   the IPv4 ID is preserved end-to-end.  Some algorithms already\
    \ allow\n   the assumption that the ID does not change (e.g., ROHC [RFC5225]),\n\
    \   where others include non-changing IDs via zero deltas (e.g., Enhanced\n  \
    \ Compressed RTP (ECRTP) [RFC3545]).\n   When compression assumes a changing ID\
    \ as a default, having a\n   non-changing ID can make compression less efficient.\
    \  Such\n   non-changing IDs have been described in various RFCs (e.g.,\n   footnote\
    \ 21 of [RFC1144] and cRTP [RFC2508]).  When compression\n   can assume a non-changing\
    \ IPv4 ID -- as with ROHC and ECRTP --\n   efficiency can be increased.\n"
- title: 5.5.  Impact of Network Reordering and Loss
  contents:
  - "5.5.  Impact of Network Reordering and Loss\n   Tolerance to network reordering\
    \ and loss is a key feature of the\n   Internet architecture.  Although most current\
    \ IP networks avoid\n   gratuitous such events, both reordering and loss can and\
    \ do occur.\n   Datagrams are already intended to be reordered or lost, and recovery\n\
    \   from those errors (where supported) already occurs at the transport\n   or\
    \ higher protocol layers.\n   Reordering is typically associated with routing\
    \ transients or where\n   flows are split across multiple paths.  Loss is typically\
    \ associated\n   with path congestion or link failure (partial or complete). \
    \ The\n   impact of such events is different for atomic and non-atomic\n   datagrams\
    \ and is discussed below.  In summary, the recommendations of\n   this document\
    \ make the Internet more robust to reordering and loss by\n   emphasizing the\
    \ requirements of ID uniqueness for non-atomic\n   datagrams and by more clearly\
    \ indicating the impact of these\n   requirements on both endpoints and datagram\
    \ transit devices.\n"
- title: 5.5.1.  Atomic Datagrams Experiencing Reordering or Loss
  contents:
  - "5.5.1.  Atomic Datagrams Experiencing Reordering or Loss\n   Reusing ID values\
    \ does not affect atomic datagrams when the DF bit is\n   correctly respected,\
    \ because order restoration does not depend on the\n   datagram header.  TCP uses\
    \ a transport header sequence number; in\n   some other protocols, sequence is\
    \ indicated and restored at the\n   application layer.\n   When DF=1 is ignored,\
    \ reordering or loss can cause fragments of\n   different datagrams to be interleaved\
    \ and thus incorrectly\n   reassembled and discarded.  Reuse of ID values in atomic\
    \ datagrams,\n   as permitted by this document, can result in higher datagram\
    \ loss in\n   such cases.  Situations such as this already can exist because there\n\
    \   are known devices that use a constant ID for atomic datagrams (some\n   cellphones),\
    \ and there are known devices that ignore DF=1, but high\n   levels of corresponding\
    \ loss have not been reported.  The lack of\n   such reports indicates either\
    \ a lack of reordering or a loss in such\n   cases or a tolerance to the resulting\
    \ losses.  If such issues are\n   reported, it would be more productive to address\
    \ non-compliant\n   devices (that ignore DF=1), because it is impractical to define\n\
    \   Internet specifications to tolerate devices that ignore those\n   specifications.\
    \  This is why this document emphasizes the need to\n   honor DF=1, as well as\
    \ that datagram transit devices need to retain\n   the DF bit as received (i.e.,\
    \ rather than clear it).\n"
- title: 5.5.2.  Non-atomic Datagrams Experiencing Reordering or Loss
  contents:
  - "5.5.2.  Non-atomic Datagrams Experiencing Reordering or Loss\n   Non-atomic datagrams\
    \ rely on the uniqueness of the ID value to\n   tolerate reordering of fragments,\
    \ notably where fragments of\n   different datagrams are interleaved as a result\
    \ of such reordering.\n   Fragment loss can result in reassembly of fragments\
    \ from different\n   origin datagrams, which is why ID reuse in non-atomic datagrams\
    \ is\n   based on datagram (fragment) maximum lifetime, not just expected\n  \
    \ reordering interleaving.\n   This document does not change the requirements\
    \ for uniqueness of IDs\n   in non-atomic datagrams and thus does not affect their\
    \ tolerance to\n   such reordering or loss.  This document emphasizes the need\
    \ for ID\n   uniqueness for all datagram sources, including rewriting middleboxes;\n\
    \   the need to rate-limit sources to ensure ID uniqueness; the need to\n   not\
    \ reuse the ID for retransmitted datagrams; and the need to use\n   higher-layer\
    \ integrity checks to prevent reassembly errors -- all of\n   which result in\
    \ a higher tolerance to reordering or loss events.\n"
- title: 6.  Updates to Existing Standards
  contents:
  - "6.  Updates to Existing Standards\n   The following sections address the specific\
    \ changes to existing\n   protocols indicated by this document.\n"
- title: 6.1.  Updates to RFC 791
  contents:
  - "6.1.  Updates to RFC 791\n   RFC 791 states that:\n      The originating protocol\
    \ module of an internet datagram sets the\n      identification field to a value\
    \ that must be unique for that\n      source-destination pair and protocol for\
    \ the time the datagram\n      will be active in the internet system.\n   It later\
    \ states that:\n      Thus, the sender must choose the Identifier to be unique\
    \ for this\n      source, destination pair and protocol for the time the datagram\n\
    \      (or any fragment of it) could be alive in the internet.\n      It seems\
    \ then that a sending protocol module needs to keep a table\n      of Identifiers,\
    \ one entry for each destination it has communicated\n      with in the last maximum\
    \ datagram lifetime for the internet.\n      However, since the Identifier field\
    \ allows 65,536 different\n      values, some host may be able to simply use unique\
    \ identifiers\n      independent of destination.\n      It is appropriate for\
    \ some higher level protocols to choose the\n      identifier.  For example, TCP\
    \ protocol modules may retransmit an\n      identical TCP segment, and the probability\
    \ for correct reception\n      would be enhanced if the retransmission carried\
    \ the same\n      identifier as the original transmission since fragments of either\n\
    \      datagram could be used to construct a correct TCP segment.\n   This document\
    \ changes RFC 791 as follows:\n   o  IPv4 ID uniqueness applies to only non-atomic\
    \ datagrams.\n   o  Retransmitted non-atomic IPv4 datagrams are no longer permitted\
    \ to\n      reuse the ID value.\n"
- title: 6.2.  Updates to RFC 1122
  contents:
  - "6.2.  Updates to RFC 1122\n   RFC 1122 states in Section 3.2.1.5 (\"Identification:\
    \ RFC 791\n   Section 3.2\") that:\n      When sending an identical copy of an\
    \ earlier datagram, a host MAY\n      optionally retain the same Identification\
    \ field in the copy.\n      DISCUSSION:\n           Some Internet protocol experts\
    \ have maintained that when a\n           host sends an identical copy of an earlier\
    \ datagram, the new\n           copy should contain the same Identification value\
    \ as the\n           original.  There are two suggested advantages:  (1) if the\n\
    \           datagrams are fragmented and some of the fragments are lost,\n   \
    \        the receiver may be able to reconstruct a complete datagram\n       \
    \    from fragments of the original and the copies; (2) a\n           congested\
    \ gateway might use the IP Identification field (and\n           Fragment Offset)\
    \ to discard duplicate datagrams from the\n           queue.\n   This document\
    \ changes RFC 1122 as follows:\n   o  The IPv4 ID field is no longer permitted\
    \ to be used for duplicate\n      detection.  This applies to both atomic and\
    \ non-atomic datagrams.\n   o  Retransmitted non-atomic IPv4 datagrams are no\
    \ longer permitted to\n      reuse the ID value.\n"
- title: 6.3.  Updates to RFC 2003
  contents:
  - "6.3.  Updates to RFC 2003\n   This document updates how IPv4-in-IPv4 tunnels\
    \ create IPv4 ID values\n   for the IPv4 outer header [RFC2003], but only in the\
    \ same way as for\n   any other IPv4 datagram source.  Specifically, RFC 2003\
    \ states the\n   following, where [10] refers to RFC 791:\n      Identification,\
    \ Flags, Fragment Offset\n         These three fields are set as specified in\
    \ [10]...\n   This document changes RFC 2003 as follows:\n   o  The IPv4 ID field\
    \ is set as permitted by RFC 6864.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   When the IPv4 ID is ignored on receipt (e.g.,\
    \ for atomic datagrams),\n   its value becomes unconstrained; therefore, that\
    \ field can more\n   easily be used as a covert channel.  For some atomic datagrams\
    \ it is\n   now possible, and may be desirable, to rewrite the IPv4 ID field to\n\
    \   avoid its use as such a channel.  Rewriting would be prohibited for\n   datagrams\
    \ protected by the IPsec Authentication Header (AH), although\n   we do not recommend\
    \ use of the AH to achieve this result [RFC4302].\n   The IPv4 ID also now adds\
    \ much less to the entropy of the header of a\n   datagram.  Such entropy might\
    \ be used as input to cryptographic\n   algorithms or pseudorandom generators,\
    \ although IDs have never been\n   assured sufficient entropy for such purposes.\
    \  The IPv4 ID had\n   previously been unique (for a given source/address pair,\
    \ and protocol\n   field) within one MDL, although this requirement was not enforced\
    \ and\n   clearly is typically ignored.  The IPv4 ID of atomic datagrams is not\n\
    \   required unique and so contributes no entropy to the header.\n   The deprecation\
    \ of the IPv4 ID field's uniqueness for atomic\n   datagrams can defeat the ability\
    \ to count devices behind a\n   NAT/ASM/rewriter [Be02].  This is not intended\
    \ as a security feature,\n   however.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC791]   Postel, J., \"Internet Protocol\",\
    \ STD 5, RFC 791,\n              September 1981.\n   [RFC1122]  Braden, R., Ed.,\
    \ \"Requirements for Internet Hosts -\n              Communication Layers\", STD\
    \ 3, RFC 1122, October 1989.\n   [RFC1812]  Baker, F., Ed., \"Requirements for\
    \ IP Version 4 Routers\",\n              RFC 1812, June 1995.\n   [RFC2003]  Perkins,\
    \ C., \"IP Encapsulation within IP\", RFC 2003,\n              October 1996.\n\
    \   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n        \
    \      Requirement Levels\", BCP 14, RFC 2119, March 1997.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [Be02]     Bellovin, S., \"A Technique for Counting\
    \ NATted Hosts\",\n              Internet Measurement Conference, Proceedings\
    \ of the 2nd\n              ACM SIGCOMM Workshop on Internet Measurement,\n  \
    \            November 2002.\n   [Bo11]     Boucadair, M., Touch, J., Levis, P.,\
    \ and R. Penno,\n              \"Analysis of Solution Candidates to Reveal a Host\n\
    \              Identifier in Shared Address Deployments\", Work in\n         \
    \     Progress, September 2011.\n   [De11]     Despres, R., Ed., Matsushima, S.,\
    \ Murakami, T., and O.\n              Troan, \"IPv4 Residual Deployment across\
    \ IPv6-Service\n              networks (4rd) ISP-NAT's made optional\", Work in\
    \ Progress,\n              March 2011.\n   [Pe11]     Perreault, S., Ed., Yamagata,\
    \ I., Miyakawa, S., Nakagawa,\n              A., and H. Ashida, \"Common requirements\
    \ for Carrier Grade\n              NATs (CGNs)\", Work in Progress, December 2012.\n\
    \   [RFC1144]  Jacobson, V., \"Compressing TCP/IP Headers for Low-Speed\n    \
    \          Serial Links\", RFC 1144, February 1990.\n   [RFC2460]  Deering, S.\
    \ and R. Hinden, \"Internet Protocol, Version 6\n              (IPv6) Specification\"\
    , RFC 2460, December 1998.\n   [RFC2508]  Casner, S. and V. Jacobson, \"Compressing\
    \ IP/UDP/RTP\n              Headers for Low-Speed Serial Links\", RFC 2508,\n\
    \              February 1999.\n   [RFC2671]  Vixie, P., \"Extension Mechanisms\
    \ for DNS (EDNS0)\",\n              RFC 2671, August 1999.\n   [RFC3022]  Srisuresh,\
    \ P. and K. Egevang, \"Traditional IP Network\n              Address Translator\
    \ (Traditional NAT)\", RFC 3022,\n              January 2001.\n   [RFC3545]  Koren,\
    \ T., Casner, S., Geevarghese, J., Thompson, B., and\n              P. Ruddy,\
    \ \"Enhanced Compressed RTP (CRTP) for Links with\n              High Delay, Packet\
    \ Loss and Reordering\", RFC 3545,\n              July 2003.\n   [RFC3828]  Larzon,\
    \ L-A., Degermark, M., Pink, S., Jonsson, L-E., Ed.,\n              and G. Fairhurst,\
    \ Ed., \"The Lightweight User Datagram\n              Protocol (UDP-Lite)\", RFC\
    \ 3828, July 2004.\n   [RFC4301]  Kent, S. and K. Seo, \"Security Architecture\
    \ for the\n              Internet Protocol\", RFC 4301, December 2005.\n   [RFC4302]\
    \  Kent, S., \"IP Authentication Header\", RFC 4302,\n              December 2005.\n\
    \   [RFC4443]  Conta, A., Deering, S., and M. Gupta, Ed., \"Internet\n       \
    \       Control Message Protocol (ICMPv6) for the Internet\n              Protocol\
    \ Version 6 (IPv6) Specification\", RFC 4443,\n              March 2006.\n   [RFC4960]\
    \  Stewart, R., Ed., \"Stream Control Transmission Protocol\",\n             \
    \ RFC 4960, September 2007.\n   [RFC4963]  Heffner, J., Mathis, M., and B. Chandler,\
    \ \"IPv4 Reassembly\n              Errors at High Data Rates\", RFC 4963, July\
    \ 2007.\n   [RFC5225]  Pelletier, G. and K. Sandlund, \"RObust Header Compression\n\
    \              Version 2 (ROHCv2): Profiles for RTP, UDP, IP, ESP and\n      \
    \        UDP-Lite\", RFC 5225, April 2008.\n   [RFC5320]  Templin, F., Ed., \"\
    The Subnetwork Encapsulation and\n              Adaptation Layer (SEAL)\", RFC\
    \ 5320, February 2010.\n   [RFC6145]  Li, X., Bao, C., and F. Baker, \"IP/ICMP\
    \ Translation\n              Algorithm\", RFC 6145, April 2011.\n   [RFC6219]\
    \  Li, X., Bao, C., Chen, M., Zhang, H., and J. Wu, \"The\n              China\
    \ Education and Research Network (CERNET) IVI\n              Translation Design\
    \ and Deployment for the IPv4/IPv6\n              Coexistence and Transition\"\
    , RFC 6219, May 2011.\n   [RFC6621]  Macker, J., Ed., \"Simplified Multicast Forwarding\"\
    ,\n              RFC 6621, May 2012.\n"
- title: 9.  Acknowledgments
  contents:
  - "9.  Acknowledgments\n   This document was inspired by numerous discussions with\
    \ the author by\n   Jari Arkko, Lars Eggert, Dino Farinacci, and Fred Templin,\
    \ as well as\n   members participating in the Internet Area Working Group.  Detailed\n\
    \   feedback was provided by Gorry Fairhurst, Brian Haberman, Ted Hardie,\n  \
    \ Mike Heard, Erik Nordmark, Carlos Pignataro, and Dan Wing.  This\n   document\
    \ originated as an Independent Submissions stream document\n   co-authored by\
    \ Matt Mathis, PSC, and his contributions are greatly\n   appreciated.\n   This\
    \ document was initially prepared using 2-Word-v2.0.template.dot.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Joe Touch\n   USC/ISI\n   4676 Admiralty Way\n   Marina\
    \ del Rey, CA  90292-6695\n   U.S.A.\n   Phone: +1 (310) 448-9151\n   EMail: touch@isi.edu\n"
