- title: __initial_text__
  contents:
  - "              RMD-QOSM: The NSIS Quality-of-Service Model\n                 \
    \ for Resource Management in Diffserv\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes a Next Steps in Signaling (NSIS) Quality-of-\n\
    \   Service (QoS) Model for networks that use the Resource Management in\n   Diffserv\
    \ (RMD) concept.  RMD is a technique for adding admission\n   control and preemption\
    \ function to Differentiated Services (Diffserv)\n   networks.  The RMD QoS Model\
    \ allows devices external to the RMD\n   network to signal reservation requests\
    \ to Edge nodes in the RMD\n   network.  The RMD Ingress Edge nodes classify the\
    \ incoming flows into\n   traffic classes and signals resource requests for the\
    \ corresponding\n   traffic class along the data path to the Egress Edge nodes\
    \ for each\n   flow.  Egress nodes reconstitute the original requests and continue\n\
    \   forwarding them along the data path towards the final destination.\n   In\
    \ addition, RMD defines notification functions to indicate overload\n   situations\
    \ within the domain to the Edge nodes.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for examination, experimental implementation, and\n   evaluation.\n\
    \   This document defines an Experimental Protocol for the Internet\n   community.\
    \  This document is a product of the Internet Engineering\n   Task Force (IETF).\
    \  It represents the consensus of the IETF\n   community.  It has received public\
    \ review and has been approved for\n   publication by the Internet Engineering\
    \ Steering Group (IESG).  Not\n   all documents approved by the IESG are a candidate\
    \ for any level of\n   Internet Standard; see Section 2 of RFC 5741.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5977.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \   2. Terminology .....................................................6\n  \
    \ 3. Overview of RMD and RMD-QOSM ....................................7\n    \
    \  3.1. RMD ........................................................7\n      3.2.\
    \ Basic Features of RMD-QOSM ................................10\n           3.2.1.\
    \ Role of the QNEs ...................................10\n           3.2.2. RMD-QOSM/QoS-NSLP\
    \ Signaling ........................11\n           3.2.3. RMD-QOSM Applicability\
    \ and Considerations ..........13\n   4. RMD-QOSM, Detailed Description .................................15\n\
    \      4.1. RMD-QSPEC Definition ......................................16\n  \
    \         4.1.1. RMD-QOSM <QoS Desired> and <QoS Reserved> ..........16\n    \
    \       4.1.2. PHR Container ......................................17\n      \
    \     4.1.3. PDR Container ......................................20\n      4.2.\
    \ Message Format ............................................23\n      4.3. RMD\
    \ Node State Management .................................23\n           4.3.1.\
    \ Aggregated Operational and Reservation\n                  States at the QNE\
    \ Edges ............................23\n           4.3.2. Measurement-Based Method\
    \ ...........................25\n           4.3.3. Reservation-Based Method ...........................27\n\
    \      4.4. Transport of RMD-QOSM Messages ............................28\n  \
    \    4.5. Edge Discovery and Message Addressing .....................31\n    \
    \  4.6. Operation and Sequence of Events ..........................32\n      \
    \     4.6.1. Basic Unidirectional Operation .....................32\n        \
    \          4.6.1.1. Successful Reservation ....................34\n          \
    \        4.6.1.2. Unsuccessful Reservation ..................46\n            \
    \      4.6.1.3. RMD Refresh Reservation ...................50\n              \
    \    4.6.1.4. RMD Modification of Aggregated\n                           Reservations\
    \ ..............................54\n                  4.6.1.5. RMD Release Procedure\
    \ .....................55\n                  4.6.1.6. Severe Congestion Handling\
    \ ................64\n                  4.6.1.7. Admission Control Using Congestion\n\
    \                           Notification Based on Probing .............70\n  \
    \         4.6.2. Bidirectional Operation ............................73\n    \
    \              4.6.2.1. Successful and Unsuccessful Reservations ..77\n      \
    \            4.6.2.2. Refresh Reservations ......................82\n        \
    \          4.6.2.3. Modification of Aggregated Intra-Domain\n                \
    \           QoS-NSLP Operational Reservation States ...82\n                  4.6.2.4.\
    \ Release Procedure .........................83\n                  4.6.2.5. Severe\
    \ Congestion Handling ................84\n                  4.6.2.6. Admission\
    \ Control Using Congestion\n                           Notification Based on Probing\
    \ .............87\n      4.7. Handling of Additional Errors .............................89\n\
    \   5. Security Considerations ........................................89\n  \
    \    5.1. Introduction ..............................................89\n    \
    \  5.2. Security Threats ..........................................91\n      \
    \     5.2.1. On-Path Adversary ..................................92\n        \
    \   5.2.2. Off-Path Adversary .................................94\n      5.3.\
    \ Security Requirements .....................................94\n      5.4. Security\
    \ Mechanisms .......................................94\n   6. IANA Considerations\
    \ ............................................97\n      6.1. Assignment of QSPEC\
    \ Parameter IDs .........................97\n   7. Acknowledgments ................................................97\n\
    \   8. References .....................................................97\n  \
    \    8.1. Normative References ......................................97\n    \
    \  8.2. Informative References ....................................98\n   Appendix\
    \ A. Examples .............................................101\n      A.1. Example\
    \ of a Re-Marking Operation during Severe\n           Congestion in the Interior\
    \ Nodes .........................101\n      A.2. Example of a Detailed Severe\
    \ Congestion Operation in the\n           Egress Nodes .............................................107\n\
    \      A.3. Example of a Detailed Re-Marking Admission Control\n           (Congestion\
    \ Notification) Operation in Interior Nodes ....111\n      A.4. Example of a Detailed\
    \ Admission Control (Congestion\n           Notification) Operation in Egress\
    \ Nodes ..................112\n      A.5. Example of Selecting Bidirectional Flows\
    \ for Termination\n           during Severe Congestion .................................113\n\
    \      A.6. Example of a Severe Congestion Solution for\n           Bidirectional\
    \ Flows Congested Simultaneously on Forward\n           and Reverse Paths ........................................113\n\
    \      A.7. Example of Preemption Handling during Admission Control ..117\n  \
    \    A.8. Example of a Retransmission Procedure within the RMD\n           Domain\
    \ ...................................................120\n      A.9. Example on\
    \ Matching the Initiator QSPEC to the Local\n           RMD-QSPEC ................................................122\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document describes a Next Steps in Signaling (NSIS)\
    \ QoS Model\n   for networks that use the Resource Management in Diffserv (RMD)\n\
    \   framework ([RMD1], [RMD2], [RMD3], and [RMD4]).  RMD adds admission\n   control\
    \ to Diffserv networks and allows nodes external to the\n   networks to dynamically\
    \ reserve resources within the Diffserv\n   domains.\n   The Quality-of-Service\
    \ NSIS Signaling Layer Protocol (QoS-NSLP)\n   [RFC5974] specifies a generic protocol\
    \ for carrying QoS signaling\n   information end-to-end in an IP network.  Each\
    \ network along the end-\n   to-end path is expected to implement a specific QoS\
    \ Model (QOSM)\n   specified by the QSPEC template [RFC5975] that interprets the\n\
    \   requests and installs the necessary mechanisms, in a manner that is\n   appropriate\
    \ to the technology in use in the network, to ensure the\n   delivery of the requested\
    \ QoS.  This document specifies an NSIS QoS\n   Model for RMD networks (RMD-QOSM),\
    \ and an RMD-specific QSPEC (RMD-\n   QSPEC) for expressing reservations in a\
    \ suitable form for simple\n   processing by internal nodes.\n   They are used\
    \ in combination with the QoS-NSLP to provide QoS\n   signaling service in an\
    \ RMD network.  Figure 1 shows an RMD network\n   with the respective entities.\n\
    \                          Stateless or reduced-state        Egress\n   Ingress\
    \                RMD Nodes                         Node\n   Node             \
    \      (Interior Nodes; I-Nodes)        (Stateful\n   (Stateful              |\
    \          |            |         RMD QoS\n   RMD QoS-NLSP           |       \
    \   |            |         NSLP Node)\n   Node)                  V          V\
    \            V\n   +-------+   Data +------+      +------+       +------+    \
    \ +------+\n   |-------|--------|------|------|------|-------|------|---->|------|\n\
    \   |       |   Flow |      |      |      |       |      |     |      |\n   |Ingress|\
    \        |I-Node|      |I-Node|       |I-Node|     |Egress|\n   |       |    \
    \    |      |      |      |       |      |     |      |\n   +-------+        +------+\
    \      +------+       +------+     +------+\n            =================================================>\n\
    \            <=================================================\n            \
    \                      Signaling Flow\n                   Figure 1: Actors in\
    \ the RMD-QOSM\n   Many network scenarios, such as the \"Wired Part of Wireless\
    \ Network\"\n   scenario, which is described in Section 8.4 of [RFC3726], require\n\
    \   that the impact of the used QoS signaling protocol on the network\n   performance\
    \ should be minimized.  In such network scenarios, the\n   performance of each\
    \ network node that is used in a communication path\n   has an impact on the end-to-end\
    \ performance.  As such, the end-to-end\n   performance of the communication path\
    \ can be improved by optimizing\n   the performance of the Interior nodes.  One\
    \ of the factors that can\n   contribute to this optimization is the minimization\
    \ of the QoS\n   signaling protocol processing load and the minimization of the\
    \ number\n   of states on each Interior node.\n   Another requirement that is\
    \ imposed by such network scenarios is that\n   whenever a severe congestion situation\
    \ occurs in the network, the\n   used QoS signaling protocol should be able to\
    \ solve them.  In the\n   case of a route change or link failure, a severe congestion\
    \ situation\n   may occur in the network.  Typically, routing algorithms are able\
    \ to\n   adapt and change their routing decisions to reflect changes in the\n\
    \   topology and traffic volume.  In such situations, the rerouted\n   traffic\
    \ will have to follow a new path.  Interior nodes located on\n   this new path\
    \ may become overloaded, since they suddenly might need\n   to support more traffic\
    \ than for which they have capacity.  These\n   severe congestion situations will\
    \ severely affect the overall\n   performance of the traffic passing through such\
    \ nodes.\n   RMD-QOSM is an edge-to-edge (intra-domain) QoS Model that, in\n \
    \  combination with the QoS-NSLP and QSPEC specifications, is designed\n   to\
    \ support the requirements mentioned above:\n      o Minimal impact on Interior\
    \ node performance;\n      o Increase of scalability;\n      o Ability to deal\
    \ with severe congestion\n   Internally to the RMD network, RMD-QOSM together\
    \ with QoS-NSLP\n   [RFC5974] defines a scalable QoS signaling model in which\
    \ per-flow\n   QoS-NSLP and NSIS Transport Layer Protocol (NTLP) states are not\n\
    \   stored in Interior nodes but per-flow signaling is performed (see\n   [RFC5974])\
    \ at the Edges.\n   In the RMD-QOSM, only routers at the Edges of a Diffserv domain\n\
    \   (Ingress and Egress nodes) support the (QoS-NSLP) stateful operation;\n  \
    \ see Section 4.7 of [RFC5974].  Interior nodes support either the\n   (QoS-NSLP)\
    \ stateless operation or a reduced-state operation with\n   coarser granularity\
    \ than the Edge nodes.\n   After the terminology in Section 2, we give an overview\
    \ of RMD and\n   the RMD-QOSM in Section 3.  This document specifies several RMD-QOSM/\n\
    \   QoS-NSLP signaling schemes.  In particular, Section 3.2.3 identifies\n   which\
    \ combination of sections are used for the specification of each\n   RMD-QOSM/QoS-NSLP\
    \ signaling scheme.  In Section 4 we give a detailed\n   description of the RMD-QOSM,\
    \ including the role of QoS NSIS entities\n   (QNEs), the definition of the QSPEC,\
    \ mapping of QSPEC generic\n   parameters onto RMD-QOSM parameters, state management\
    \ in QNEs, and\n   operation and sequence of events.  Section 5 discusses security\n\
    \   issues.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n\
    \   The terminology defined by GIST [RFC5971] and QoS-NSLP [RFC5974]\n   applies\
    \ to this document.\n   In addition, the following terms are used:\n   NSIS domain:\
    \ an NSIS signaling-capable domain.\n   RMD domain: an NSIS domain that is capable\
    \ of supporting the RMD-QOSM\n   signaling and operations.\n   Edge node: a QoS-NSLP\
    \ node on the boundary of some administrative\n   domain that connects one NSIS\
    \ domain to a node in either another NSIS\n   domain or a non-NSIS domain.\n \
    \  NSIS-aware node: a node that is aware of NSIS signaling and RMD-QOSM\n   operations,\
    \ such as severe congestion detection and Differentiated\n   Service Code Point\
    \ (DSCP) marking.\n   NSIS-unaware node: a node that is unaware of NSIS signaling,\
    \ but is\n   aware of RMD-QOSM operations such as severe congestion detection\
    \ and\n   DSCP marking.\n   Ingress node: an Edge node in its role in handling\
    \ the traffic as it\n   enters the NSIS domain.\n   Egress node: an Edge node\
    \ in its role in handling the traffic as it\n   leaves the NSIS domain.\n   Interior\
    \ node: a node in an NSIS domain that is not an Edge node.\n   Congestion: a temporal\
    \ network state that occurs when the traffic (or\n   when traffic associated with\
    \ a particular Per-Hop Behavior (PHB))\n   passing through a link is slightly\
    \ higher than the capacity allocated\n   for the link (or allocated for the particular\
    \ PHB).  If no measures\n   are taken, then the traffic passing through this link\
    \ may temporarily\n   slightly degrade in QoS.  This type of congestion is usually\
    \ solved\n   using admission control mechanisms.\n   Severe congestion: the congestion\
    \ situation on a particular link\n   within the RMD domain where a significant\
    \ increase in its real packet\n   queue situation occurs, such as when due to\
    \ a link failure rerouted\n   traffic has to be supported by this particular link.\n"
- title: 3.  Overview of RMD and RMD-QOSM
  contents:
  - '3.  Overview of RMD and RMD-QOSM

    '
- title: 3.1.  RMD
  contents:
  - "3.1.  RMD\n   The Differentiated Services (Diffserv) architecture ([RFC2475],\n\
    \   [RFC2638]) was introduced as a result of efforts to avoid the\n   scalability\
    \ and complexity problems of IntServ [RFC1633].\n   Scalability is achieved by\
    \ offering services on an aggregate rather\n   than per-flow basis and by forcing\
    \ as much of the per-flow state as\n   possible to the Edges of the network. \
    \ The service differentiation is\n   achieved using the Differentiated Services\
    \ (DS) field in the IP\n   header and the Per-Hop Behavior (PHB) as the main building\
    \ blocks.\n   Packets are handled at each node according to the PHB indicated\
    \ by\n   the DS field in the message header.\n   The Diffserv architecture does\
    \ not specify any means for devices\n   outside the domain to dynamically reserve\
    \ resources or receive\n   indications of network resource availability.  In practice,\
    \ service\n   providers rely on short active time Service Level Agreements (SLAs)\n\
    \   that statically define the parameters of the traffic that will be\n   accepted\
    \ from a customer.\n   RMD was introduced as a method for dynamic reservation\
    \ of resources\n   within a Diffserv domain.  It describes a method that is able\
    \ to\n   provide admission control for flows entering the domain and a\n   congestion\
    \ handling algorithm that is able to terminate flows in case\n   of congestion\
    \ due to a sudden failure (e.g., link, router) within the\n   domain.\n   In RMD,\
    \ scalability is achieved by separating a fine-grained\n   reservation mechanism\
    \ used in the Edge nodes of a Diffserv domain\n   from a much simpler reservation\
    \ mechanism needed in the Interior\n   nodes.  Typically, it is assumed that Edge\
    \ nodes support per-flow QoS\n   states in order to provide QoS guarantees for\
    \ each flow.  Interior\n   nodes use only one aggregated reservation state per\
    \ traffic class or\n   no states at all.  In this way, it is possible to handle\
    \ large\n   numbers of flows in the Interior nodes.  Furthermore, due to the\n\
    \   limited functionality supported by the Interior nodes, this solution\n   allows\
    \ fast processing of signaling messages.\n   The possible RMD-QOSM applicabilities\
    \ are described in Section 3.2.3.\n   Two main basic admission control modes are\
    \ supported: reservation-\n   based and measurement-based admission control that\
    \ can be used in\n   combination with a severe congestion-handling solution. \
    \ The severe\n   congestion-handling solution is used in the situation that a\n\
    \   link/node becomes severely congested due to the fact that the traffic\n  \
    \ supported by a failed link/node is rerouted and has to be processed\n   by this\
    \ link/node.  Furthermore, RMD-QOSM supports both\n   unidirectional and bidirectional\
    \ reservations.\n   Another important feature of RMD-QOSM is that the intra-domain\n\
    \   sessions supported by the Edges can be either per-flow sessions or\n   per-aggregate\
    \ sessions.  In the case of the per-flow intra-domain\n   sessions, the maintained\
    \ per-flow intra-domain states have a one-to-\n   one dependency to the per-flow\
    \ end-to-end states supported by the\n   same Edge.  In the case of the per-aggregate\
    \ sessions the maintained\n   per-aggregate states have a one-to-many relationship\
    \ to the per-flow\n   end-to-end states supported by the same Edge.\n   In the\
    \ reservation-based method, each Interior node maintains only\n   one reservation\
    \ state per traffic class.  The Ingress Edge nodes\n   aggregate individual flow\
    \ requests into PHB traffic classes, and\n   signal changes in the class reservations\
    \ as necessary.  The\n   reservation is quantified in terms of resource units\
    \ (or bandwidth).\n   These resources are requested dynamically per PHB and reserved\
    \ on\n   demand in all nodes in the communication path from an Ingress node to\n\
    \   an Egress node.\n   The measurement-based algorithm continuously measures\
    \ traffic levels\n   and the actual available resources, and admits flows whose\
    \ resource\n   needs are within what is available at the time of the request.\
    \  The\n   measurement-based algorithm is used to support a predictive service\n\
    \   where the service commitment is somewhat less reliable than the\n   service\
    \ that can be supported by the reservation-based method.\n   A main assumption\
    \ that is made by such measurement-based admission\n   control mechanisms is that\
    \ the aggregated PHB traffic passing through\n   an RMD Interior node is high\
    \ and therefore, current measurement\n   characteristics are considered to be\
    \ an indicator of future load.\n   Once an admission decision is made, no record\
    \ of the decision need be\n   kept at the Interior nodes.  The advantage of measurement-based\n\
    \   resource management protocols is that they do not require pre-\n   reservation\
    \ state nor explicit release of the reservations at the\n   Interior nodes.  Moreover,\
    \ when the user traffic is variable,\n   measurement-based admission control could\
    \ provide higher network\n   utilization than, e.g., peak-rate reservation.  However,\
    \ this can\n   introduce an uncertainty in the availability of the resources.\
    \  It is\n   important to emphasize that the RMD measurement-based schemes\n \
    \  described in this document do not use any refresh procedures, since\n   these\
    \ approaches are used in stateless nodes; see Section 4.6.1.3.\n   Two types of\
    \ measurement-based admission control schemes are\n   possible:\n   * Congestion\
    \ notification function based on probing:\n   This method can be used to implement\
    \ a simple measurement-based\n   admission control within a Diffserv domain. \
    \ In this scenario, the\n   Interior nodes are not NSIS-aware nodes.  In these\
    \ Interior nodes,\n   thresholds are set for the traffic belonging to different\
    \ PHBs in the\n   measurement-based admission control function.  In this scenario,\
    \ an\n   end-to-end NSIS message is used as a probe packet, meaning that the\n\
    \   <DSCP> field in the header of the IP packet that carries the NSIS\n   message\
    \ is re-marked when the predefined congestion threshold is\n   exceeded.  Note\
    \ that when the predefined congestion threshold is\n   exceeded, all packets are\
    \ re-marked by a node, including NSIS\n   messages.  In this way, the Edges can\
    \ admit or reject flows that are\n   requesting resources.  The frequency and\
    \ duration that the congestion\n   level is above the threshold resulting in re-marking\
    \ is tracked and\n   used to influence the admission control decisions.\n   *\
    \ NSIS measurement-based admission control:\n   In this case, the measurement-based\
    \ admission control functionality\n   is implemented in NSIS-aware stateless routers.\
    \  The main difference\n   between this type of admission control and the congestion\n\
    \   notification based on probing is related to the fact that this type\n   of\
    \ admission control is applied mainly on NSIS-aware nodes.  With the\n   measurement-based\
    \ scheme, the requested peak bandwidth of a flow is\n   carried by the admission\
    \ control request.  The admission decision is\n   considered as positive if the\
    \ currently carried traffic, as\n   characterized by the measured statistics,\
    \ plus the requested\n   resources for the new flow exceeds the system capacity\
    \ with a\n   probability smaller than a value alpha.  Otherwise, the admission\n\
    \   decision is negative.  It is important to emphasize that due to the\n   fact\
    \ that the RMD Interior nodes are stateless, they do not store\n   information\
    \ of previous admission control requests.\n   This could lead to a situation where\
    \ the admission control accuracy\n   is decreased when multiple simultaneous flows\
    \ (sharing a common\n   Interior node) are requesting admission control simultaneously.\
    \  By\n   applying measuring techniques, e.g., see [JaSh97] and [GrTs03], which\n\
    \   use current and past information on NSIS sessions that requested\n   resources\
    \ from an NSIS-aware Interior node, the decrease in admission\n   control accuracy\
    \ can be limited.  RMD describes the following\n   procedures:\n   * classification\
    \ of an individual resource reservation or a resource\n     query into Per-Hop\
    \ Behavior (PHB) groups at the Ingress node of the\n     domain,\n   * hop-by-hop\
    \ admission control based on a PHB within the domain.\n     There are two possible\
    \ modes of operation for internal nodes to\n     admit requests.  One mode is\
    \ the stateless or measurement-based\n     mode, where the resources within the\
    \ domain are queried.  Another\n     mode of operation is the reduced-state reservation\
    \ or reservation-\n     based mode, where the resources within the domain are\
    \ reserved.\n   * a method to forward the original requests across the domain\
    \ up to\n     the Egress node and beyond.\n   * a congestion-control algorithm\
    \ that notifies the Egress Edge nodes\n     about congestion.  It is able to terminate\
    \ the appropriate number\n     of flows in the case a of congestion due to a sudden\
    \ failure (e.g.,\n     link or router failure) within the domain.\n"
- title: 3.2.  Basic Features of RMD-QOSM
  contents:
  - '3.2.  Basic Features of RMD-QOSM

    '
- title: 3.2.1.  Role of the QNEs
  contents:
  - "3.2.1.  Role of the QNEs\n   The protocol model of the RMD-QOSM is shown in Figure\
    \ 2.  The figure\n   shows QoS NSIS initiator (QNI) and QoS NSIS Receiver (QNR)\
    \ nodes, not\n   part of the RMD network, that are the ultimate initiator and\
    \ receiver\n   of the QoS reservation requests.  It also shows QNE nodes that\
    \ are\n   the Ingress and Egress nodes in the RMD domain (QNE Ingress and QNE\n\
    \   Egress), and QNE nodes that are Interior nodes (QNE Interior).\n   All nodes\
    \ of the RMD domain are usually QoS-NSLP-aware nodes.\n   However, in the scenarios\
    \ where the congestion notification function\n   based on probing is used, then\
    \ the Interior nodes are not NSIS aware.\n   Edge nodes store and maintain QoS-NSLP\
    \ and NTLP states and therefore\n   are stateful nodes.  The NSIS-aware Interior\
    \ nodes are NTLP\n   stateless.  Furthermore, they are either QoS-NSLP stateless\
    \ (for NSIS\n   measurement-based operation) or reduced-state nodes storing per\
    \ PHB\n   aggregated QoS-NSLP states (for reservation-based operation).\n   Note\
    \ that the RMD domain MAY contain Interior nodes that are not\n   NSIS-aware nodes\
    \ (not shown in the figure).\n   These nodes are assumed to have sufficient capacity\
    \ for flows that\n   might be admitted.  Furthermore, some of these NSIS-unaware\
    \ nodes MAY\n   be used for measuring the traffic congestion level on the data\
    \ path.\n   These measurements can be used by RMD-QOSM in the congestion control\n\
    \   based on probing operation and/or severe congestion operation (see\n   Section\
    \ 4.6.1.6).\n   |------|   |-------|                           |------|   |------|\n\
    \   | e2e  |<->| e2e   |<------------------------->| e2e  |<->| e2e  |\n   | QoS\
    \  |   | QoS   |                           | QoS  |   | QoS  |\n   |      |  \
    \ |-------|                           |------|   |------|\n   |      |   |-------|\
    \   |-------|   |-------|   |------|   |      |\n   |      |   | local |<->| local\
    \ |<->| local |<->| local|   |      |\n   |      |   | QoS   |   |  QoS  |   |\
    \  QoS  |   |  QoS |   |      |\n   |      |   |       |   |       |   |     \
    \  |   |      |   |      |\n   | NSLP |   | NSLP  |   | NSLP  |   | NSLP  |  \
    \ | NSLP |   | NSLP |\n   |st.ful|   |st.ful |   |st.less/   |st.less/   |st.ful|\
    \   |st.ful|\n   |      |   |       |   |red.st.|   |red.st.|   |      |   | \
    \     |\n   |      |   |-------|   |-------|   |-------|   |------|   |      |\n\
    \   |------|   |-------|   |-------|   |-------|   |------|   |------|\n   ------------------------------------------------------------------\n\
    \   |------|   |-------|   |-------|   |-------|   |------|   |------|\n   | NTLP\
    \ |<->| NTLP  |<->| NTLP  |<->| NTLP  |<->| NTLP |<->|NTLP  |\n   |st.ful|   |st.ful\
    \ |   |st.less|   |st.less|   |st.ful|   |st.ful|\n   |------|   |-------|   |-------|\
    \   |-------|   |------|   |------|\n     QNI         QNE        QNE         QNE\
    \          QNE       QNR\n   (End)     (Ingress)   (Interior)  (Interior)   (Egress)\
    \    (End)\n       st.ful: stateful, st.less: stateless\n       st.less red.st.:\
    \ stateless or reduced-state\n    Figure 2: Protocol model of stateless/reduced-state\
    \ operation\n"
- title: 3.2.2.  RMD-QOSM/QoS-NSLP Signaling
  contents:
  - "3.2.2.  RMD-QOSM/QoS-NSLP Signaling\n   The basic RMD-QOSM/QoS-NSLP signaling\
    \ is shown in Figure 3.  The\n   signaling scenarios are accomplished using the\
    \ QoS-NSLP processing\n   rules defined in [RFC5974], in combination with the\
    \ Resource\n   Management Function (RMF) triggers sent via the QoS-NSLP-RMF API\n\
    \   described in [RFC5974].\n   Due to the fact that within the RMD domain a QoS\
    \ Model that is\n   different than the end-to-end QoS Model applied at the Edges\
    \ of the\n   RMD domain can be supported, the RMD Interior node reduced-state\n\
    \   reservations can be updated independently of the per-flow end-to-end\n   reservations\
    \ (see Section 4.7 of [RFC5974]).  Therefore, two\n   different RESERVE messages\
    \ are used within the RMD domain.  One\n   RESERVE message that is associated\
    \ with the per-flow end-to-end\n   reservations and is used by the Edges of the\
    \ RMD domain and one that\n   is associated with the reduced-state reservations\
    \ within the RMD\n   domain.\n   A RESERVE message is created by a QNI with an\
    \ Initiator QSPEC\n   describing the reservation and forwarded along the path\
    \ towards the\n   QNR.\n   When the original RESERVE message arrives at the Ingress\
    \ node, an\n   RMD-QSPEC is constructed based on the initial QSPEC in the message\n\
    \   (usually the Initiator QSPEC).  The RMD-QSPEC is sent in a intra-\n   domain,\
    \ independent RESERVE message through the Interior nodes\n   towards the QNR.\
    \  This intra-domain RESERVE message uses the GIST\n   datagram signaling mechanism.\
    \  Note that the RMD-QOSM cannot directly\n   specify that the GIST Datagram mode\
    \ SHOULD be used.  This can however\n   be notified by using the GIST API Transfer-Attributes,\
    \ such as\n   unreliable, low level of security and use of local policy.\n   Meanwhile,\
    \ the original RESERVE message is sent to the Egress node on\n   the path to the\
    \ QNR using the reliable transport mode of NTLP.  Each\n   QoS-NSLP node on the\
    \ data path processes the intra-domain RESERVE\n   message and checks the availability\
    \ of resources with either the\n   reservation-based or the measurement-based\
    \ method.\n       QNE Ingress     QNE Interior     QNE Interior   QNE Egress\n\
    \     NTLP stateful  NTLP stateless  NTLP stateless  NTLP stateful\n         \
    \   |               |               |              |\n    RESERVE |          \
    \     |               |              |\n   -------->| RESERVE       |        \
    \       |              |\n            +--------------------------------------------->|\n\
    \            | RESERVE'      |               |              |\n            +-------------->|\
    \               |              |\n            |               | RESERVE'     \
    \ |              |\n            |               +-------------->|            \
    \  |\n            |               |               | RESERVE'     |\n         \
    \   |               |               +------------->|\n            |          \
    \     |               |     RESPONSE'|\n            |<---------------------------------------------+\n\
    \            |               |               |              | RESERVE\n      \
    \      |               |               |              +------->\n            |\
    \               |               |              |RESPONSE\n            |      \
    \         |               |              |<-------\n            |            \
    \   |               |     RESPONSE |\n            |<---------------------------------------------+\n\
    \    RESPONSE|               |               |              |\n   <--------| \
    \              |               |              |\n     Figure 3: Sender-initiated\
    \ reservation with reduced-state\n               Interior nodes\n   When the message\
    \ reaches the Egress node, and the reservation is\n   successful in each Interior\
    \ node, an intra-domain (local) RESPONSE'\n   is sent towards the Ingress node\
    \ and the original (end-to-end)\n   RESERVE message is forwarded to the next domain.\
    \  When the Egress\n   node receives a RESPONSE message from the downstream end,\
    \ it is\n   forwarded directly to the Ingress node.\n   If an intermediate node\
    \ cannot accommodate the new request, it\n   indicates this by marking a single\
    \ bit in the message, and continues\n   forwarding the message until the Egress\
    \ node is reached.  From the\n   Egress node, an intra-domain RESPONSE' and an\
    \ original RESPONSE\n   message are sent directly to the Ingress node.\n   As\
    \ a consequence, in the stateless/reduced-state domain only sender-\n   initiated\
    \ reservations can be performed and functions requiring per-\n   flow NTLP or\
    \ QoS-NSLP states, like summary and reduced refreshes,\n   cannot be used.  If\
    \ per-flow identification is needed, i.e.,\n   associating the flow IDs for the\
    \ reserved resources, Edge nodes act\n   on behalf of Interior nodes.\n"
- title: 3.2.3.  RMD-QOSM Applicability and Considerations
  contents:
  - "3.2.3.  RMD-QOSM Applicability and Considerations\n   The RMD-QOSM is a Diffserv-based\
    \ bandwidth management methodology\n   that is not able to provide a full Diffserv\
    \ support.  The reason for\n   this is that the RMD-QOSM concept can only support\
    \ the (Expedited\n   Forwarding) EF-like functionality behavior, but is not able\
    \ to\n   support the full set of (Assured Forwarding) AF-like functionality.\n\
    \   The bandwidth information REQUIRED by the EF-like functionality\n   behavior\
    \ can be supported by RMD-QOSM carrying the bandwidth\n   information in the <QoS\
    \ Desired> parameter (see [RFC5975]).  The full\n   set of (Assured Forwarding)\
    \ AF-like functionality requires\n   information that is specified in two token\
    \ buckets.  The RMD-QOSM is\n   not supporting the use of two token buckets and\
    \ therefore, it is not\n   able to support the full set of AF-functionality. \
    \ Note however, that\n   RMD-QOSM could also support a single AF PHB, when the\
    \ traffic or the\n   upper limit of the traffic can be characterized by a single\
    \ bandwidth\n   parameter.  Moreover, it is considered that in case of tunneling,\
    \ the\n   RMD-QOSM supports only the uniform tunneling mode for Diffserv (see\n\
    \   [RFC2983]).\n   The RMD domain MUST be engineered in such a way that each\
    \ QNE Ingress\n   maintains information about the smallest MTU that is supported\
    \ on the\n   links within the RMD domain.\n   A very important consideration on\
    \ using RMD-QOSM is that within one\n   RMD domain only one of the following RMD-QOSM\
    \ schemes can be used at\n   a time.  Thus, an RMD router can never process and\
    \ use two different\n   RMD-QOSM signaling schemes at the same time.\n   However,\
    \ all RMD QNEs supporting this specification MUST support the\n   combination\
    \ of the \"per-flow RMD reservation-based\" and the \"severe\n   congestion handling\
    \ by proportional data packet marking\" scheme.  If\n   the RMD QNEs support more\
    \ RMD-QOSM schemes, then the operator of that\n   RMD domain MUST preconfigure\
    \ all the QNE Edge nodes within one domain\n   such that the <SCH> field included\
    \ in the \"PHR container\" (Section\n   4.1.2) and the \"PDR Container\" (Section\
    \ 4.1.3) will always use the\n   same value, such that within one RMD domain only\
    \ one of the below\n   described RMD-QOSM schemes is used at a time.\n   The congestion\
    \ situations (see Section 2) are solved using an\n   admission control mechanism,\
    \ e.g., \"per-flow congestion notification\n   based on probing\", while the severe\
    \ congestion situations (see\n   Section 2), are solved using the severe congestion\
    \ handling\n   mechanisms, e.g., \"severe congestion handling by proportional\
    \ data\n   packet marking\".\n   The RMD domain MUST be engineered in such a way\
    \ that RMD-QOSM\n   messages could be transported using the GIST Query and DATA\
    \ messages\n   in Q-mode; see [RFC5971].  This means that the Path MTU MUST be\n\
    \   engineered in such a way that the RMD-QOSM message are transported\n   without\
    \ fragmentation.  Furthermore, the RMD domain MUST be\n   engineered in such a\
    \ way to guarantee capacity for the GIST Query and\n   Data messages in Q-mode,\
    \ within the rate control limits imposed by\n   GIST; see [RFC5971].\n   The RMD\
    \ domain has to be configured such that the GIST context-free\n   flag (C-flag)\
    \ MUST be set (C=1) for QUERY messages and DATA messages\n   sent in Q-mode; see\
    \ [RFC5971].\n   Moreover, the same deployment issues and extensibility considerations\n\
    \   described in [RFC5971] and [RFC5978] apply to this document.\n   It is important\
    \ to note that the concepts described in Sections\n   4.6.1.6.2, 4.6.2.5.2, 4.6.1.6.2,\
    \ and 4.6.2.5.2 contributed to the PCN\n   WG standardization.\n   The available\
    \ RMD-QOSM/QoS-NSLP signaling schemes are:\n   * \"per-flow congestion notification\
    \ based on probing\" (see Sections\n     4.3.2, 4.6.1.7, and 4.6.2.6).  Note that\
    \ this scheme uses, for\n     severe congestion handling, the \"severe congestion\
    \ handling by\n     proportional data packet marking\" (see Sections 4.6.1.6.2\
    \ and\n     4.6.2.5.2).  Furthermore, the Interior nodes are considered to be\n\
    \     Diffserv aware, but NSIS-unaware nodes (see Section 4.3.2).\n   * \"per-flow\
    \ RMD NSIS measurement-based admission control\" (see\n     Sections 4.3.2, 4.6.1,\
    \ and 4.6.2).  Note that this scheme uses, for\n     severe congestion handling,\
    \ the \"severe congestion handling by\n     proportional data packet marking\"\
    \ (see Sections 4.6.1.6.2 and\n     4.6.2.5.2).  Furthermore, the Interior nodes\
    \ are considered to be\n     NSIS-aware nodes (see Section 4.3.2).\n   * \"per-flow\
    \ RMD reservation-based\" in combination with the \"severe\n     congestion handling\
    \ by the RMD-QOSM refresh\" procedure (see\n     Sections 4.3.3, 4.6.1, 4.6.1.6.1,\
    \ and 4.6.2.5.1).  Note that this\n     scheme uses, for severe congestion handling,\
    \ the \"severe congestion\n     handling by the RMD-QOSM refresh\" procedure (see\
    \ Sections 4.6.1.6.1\n     and 4.6.2.5.1).  Furthermore, the intra-domain sessions\
    \ supported\n     by the Edge nodes are per-flow sessions (see Section 4.3.3).\n\
    \   * \"per-flow RMD reservation-based\" in combination with the \"severe\n  \
    \   the congestion handling by proportional data packet marking\"\n     procedure\
    \ (see Sections 4.3.3, 4.6.1, 4.6.1.6.2, and 4.6.2.5.2).\n     Note that this\
    \ scheme uses, for severe congestion handling, the\n     \"severe congestion handling\
    \ by proportional data packet marking\"\n     procedure (see Sections 4.6.1.6.2\
    \ and 4.6.2.5.2).  Furthermore, the\n     intra-domain sessions supported by the\
    \ Edge nodes are per-flow\n     sessions (see Section 4.3.3).\n   * \"per-aggregate\
    \ RMD reservation-based\" in combination with the\n     \"severe congestion handling\
    \ by the RMD-QOSM refresh\" procedure (see\n     Sections 4.3.1, 4.6.1, 4.6.1.6.1,\
    \ and 4.6.2.5.1).  Note that this\n     scheme uses, for severe congestion handling,\
    \ the \"severe congestion\n     handling by the RMD-QOSM refresh\" procedure (see\
    \ Sections 4.6.1.6.1\n     and 4.6.2.5.1).  Furthermore, the intra-domain sessions\
    \ supported\n     by the Edge nodes are per-aggregate sessions (see Section 4.3.1).\n\
    \     Moreover, this scheme can be considered to be a reservation-based\n    \
    \ scheme, since the RMD Interior nodes are reduced-state nodes, i.e.,\n     they\
    \ do not store NTLP/GIST states, but they do store per PHB-\n     aggregated QoS-NSLP\
    \ reservation states.\n   * \"per-aggregate RMD reservation-based\" in combination\
    \ with the\n     \"severe congestion handling by proportional data packet marking\"\
    \n     procedure (see Sections 4.3.1, 4.6.1, 4.6.1.6.2, and 4.6.2.5.2).\n    \
    \ Note that this scheme uses, for severe congestion handling, the\n     \"severe\
    \ congestion handling by proportional data packet marking\"\n     procedure (see\
    \ Sections 4.6.1.6.2 and 4.6.2.5.2).  Furthermore, the\n     intra-domain sessions\
    \ supported by the Edge nodes are per-aggregate\n     sessions (see Section 4.3.1).\
    \  Moreover, this scheme can be\n     considered to be a reservation-based scheme,\
    \ since the RMD Interior\n     nodes are reduced-state nodes, i.e., they do not\
    \ store NTLP/GIST\n     states, but they do store per PHB-aggregated QoS-NSLP\
    \ reservation\n     states.\n"
- title: 4.  RMD-QOSM, Detailed Description
  contents:
  - "4.  RMD-QOSM, Detailed Description\n   This section describes the RMD-QOSM in\
    \ more detail.  In particular,\n   it defines the role of stateless and reduced-state\
    \ QNEs, the RMD-QOSM\n   QSPEC Object, the format of the RMD-QOSM QoS-NSLP messages,\
    \ and how\n   QSPECs are processed and used in different protocol operations.\n"
- title: 4.1.  RMD-QSPEC Definition
  contents:
  - "4.1.  RMD-QSPEC Definition\n   The RMD-QOSM uses the QSPEC format specified in\
    \ [RFC5975].  The\n   Initiator/Local QSPEC bit, i.e., <I> is set to \"Local\"\
    \ (i.e., \"1\")\n   and the <QSPEC Proc> is set as follows:\n   * Message Sequence\
    \ = 0: Sender initiated\n   * Object combination = 0: <QoS Desired> for RESERVE\
    \ and\n     <QoS Reserved> for RESPONSE\n   The <QSPEC Version> used by RMD-QOSM\
    \ is the default version, i.e.,\n   \"0\", see [RFC5975].  The <QSPEC Type> value\
    \ used by the RMD-QOSM is\n   specified in [RFC5975] and is equal to \"2\".  The\
    \ <Traffic Handling\n   Directives> contains the following fields:\n   <Traffic\
    \ Handling Directives> = <PHR container> <PDR container>\n   The Per-Hop Reservation\
    \ container (PHR container) and the Per-Domain\n   Reservation container (PDR\
    \ container) are specified in Sections 4.1.2\n   and 4.1.3, respectively.  The\
    \ <PHR container> contains the traffic\n   handling directives for intra-domain\
    \ communication and reservation.\n   The <PDR container> contains additional traffic\
    \ handling directives\n   that are needed for edge-to-edge communication.  The\
    \ parameter IDs\n   used by the <PHR container> and <PDR container> are assigned\
    \ by IANA;\n   see Section 6.\n   The RMD-QOSM <QoS Desired> and <QoS Reserved>,\
    \ are specified in\n   Section 4.1.1.  The RMD-QOSM <QoS Desired> and <QoS Reserved>\
    \ and the\n   <PHR container> are used and processed by the Edge and Interior\n\
    \   nodes.  The <PDR container> field is only processed by Edge nodes.\n"
- title: 4.1.1.  RMD-QOSM <QoS Desired> and <QoS Reserved>
  contents:
  - "4.1.1.  RMD-QOSM <QoS Desired> and <QoS Reserved>\n   The RESERVE message contains\
    \ only the <QoS Desired> object [RFC5975].\n   The <QoS Reserved> object is carried\
    \ by the RESPONSE message.\n   In RMD-QOSM, the <QoS Desired> and <QoS Reserved>\
    \ objects contain the\n   following parameters:\n   <QoS Desired> = <TMOD-1> <PHB\
    \ Class> <Admission Priority>\n   <QoS Reserved> = <TMOD-1> <PHB Class> <Admission\
    \ Priority>\n   The bit format of the <PHB Class> (see [RFC5975] and Figures 4\
    \ and 5)\n   and <Admission Priority> complies with the bit format specified in\n\
    \   [RFC5975].\n   Note that for the RMD-QOSM, a reservation established without\
    \ an\n   <Admission Priority> parameter is equivalent to a reservation\n   established\
    \ with an <Admission Priority> whose value is 1.\n    0                   1\n\
    \    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n \
    \  | DSCP      |0 0 0 0 0 0 0 0 X 0|\n   +---+---+---+---+---+---+---+---+\n \
    \     Figure 4: DSCP parameter\n    0                   1\n    0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |    PHB ID code \
    \       |0 0 X X|\n   +---+---+---+---+---+---+---+---+\n      Figure 5: PHB ID\
    \ Code parameter\n"
- title: 4.1.2.  PHR Container
  contents:
  - "4.1.2.  PHR Container\n   This section describes the parameters used by the PHR\
    \ container,\n   which are used by the RMD-QOSM functionality available at the\n\
    \   Interior nodes.\n   <PHR container> = <O> <K> <S> <M>, <Admitted Hops>, <B>\
    \ <Hop_U> <Time\n   Lag> <SCH> <Max Admitted Hops>\n   The bit format of the PHR\
    \ container can be seen in Figure 6.  Note\n   that in Figure 6 <Hop_U> is represented\
    \ as <U>.  Furthermore, in\n   Figure 6, <Max Admitted Hops> is represented as\
    \ <Max Adm Hops>.\n    0                   1                   2             \
    \      3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |M|E|N|r|\
    \       Parameter ID    |r|r|r|r|          2            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |S|M| Admitted  Hops|B|U| Time  Lag     |O|K| SCH |             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | Max Adm  Hops |                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                        Figure 6: PHR container\n   Parameter ID: 12-bit field,\
    \ indicating the PHR type:\n   PHR_Resource_Request, PHR_Release_Request, PHR_Refresh_Update.\n\
    \   \"PHR_Resource_Request\" (Parameter ID = 17): initiate or update the\n   traffic\
    \ class reservation state on all nodes located on the\n   communication path between\
    \ the QNE(Ingress) and QNE(Egress) nodes.\n   \"PHR_Release_Request\" (Parameter\
    \ ID = 18): explicitly release, by\n   subtraction, the reserved resources for\
    \ a particular flow from a\n   traffic class reservation state.\n   \"PHR_Refresh_Update\"\
    \ (Parameter ID = 19): refresh the traffic class\n   reservation soft state on\
    \ all nodes located on the communication path\n   between the QNE(Ingress) and\
    \ QNE(Egress) nodes according to a\n   resource reservation request that was successfully\
    \ processed during a\n   previous refresh period.\n   <S> (Severe Congestion):\
    \ 1 bit.  In the case of a route change,\n   refreshing RESERVE messages follow\
    \ the new data path, and hence\n   resources are requested there.  If the resources\
    \ are not sufficient\n   to accommodate the new traffic, severe congestion occurs.\
    \  Severe\n   congested Interior nodes SHOULD notify Edge QNEs about the congestion\n\
    \   by setting the <S> bit.\n   <O> (Overload): 1 bit.  This field is used during\
    \ the severe\n   congestion handling scheme that is using the RMD-QOSM refresh\n\
    \   procedure.  This bit is set when an overload on a QNE Interior node\n   is\
    \ detected and when this field is carried by the\n   \"PHR_Refresh_Update\" container.\
    \  <O> SHOULD be set to\"1\" if the <S>\n   bit is set.  For more details, see\
    \ Section 4.6.1.6.1.\n   <M>: 1 bit.  In the case of unsuccessful resource reservation\
    \ or\n   resource query in an Interior QNE, this QNE sets the <M> bit in order\n\
    \   to notify the Egress QNE.\n   <Admitted Hops>: 8-bit field.  The <Admitted\
    \ Hops> counts the number\n   of hops in the RMD domain where the reservation\
    \ was successful.  The\n   <Admitted Hops> is set to \"0\" when a RESERVE message\
    \ enters a domain\n   and it MUST be incremented by each Interior QNE, provided\
    \ that the\n   <Hop_U> bit is not set.  However, when a QNE that does not have\n\
    \   sufficient resources to admit the reservation is reached, the <M> bit\n  \
    \ is set, and the <Admitted Hops> value is frozen, by setting the\n   <Hop_U>\
    \ bit to \"1\".  Note that the <Admitted Hops> parameter in\n   combination with\
    \ the <Max Admitted Hops> and <K> parameters are used\n   during the RMD partial\
    \ release procedures (see Section 4.6.1.5.2).\n   <Hop_U> (NSLP_Hops unset): 1\
    \ bit.  The QNE(Ingress) node MUST set the\n   <Hop_U> parameter to 0.  This parameter\
    \ SHOULD be set to \"1\" by a\n   node when the node does not increase the <Admitted\
    \ Hops> value.  This\n   is the case when an RMD-QOSM reservation-based node is\
    \ not admitting\n   the reservation request.  When <Hop_U> is set to \"1\", the\
    \ <Admitted\n   Hops> SHOULD NOT be changed.  Note that this flag, in combination\n\
    \   with the <Admitted Hops> flag, are used to locate the last node that\n   successfully\
    \ processed a reservation request (see Section 4.6.1.2).\n   <B>: 1 bit.  When\
    \ set to \"1\", it indicates a bidirectional\n   reservation.\n   <Time Lag>:\
    \ It represents the ratio between the \"T_Lag\" parameter,\n   which is the time\
    \ difference between the departure time of the last\n   sent \"PHR_Refresh_Update\"\
    \ control information container and the\n   departure time of the \"PHR_Release_Request\"\
    \ control information\n   container, and the length of the refresh period, \"\
    T_period\", see\n   Section 4.6.1.5.\n   <K>: 1 bit.  When set to \"1\", it indicates\
    \ that the\n   resources/bandwidth carried by a tearing RESERVE MUST NOT be\n\
    \   released, and the resources/bandwidth carried by a non-tearing\n   RESERVE\
    \ MUST NOT be reserved/refreshed.  For more details, see\n   Section 4.6.1.5.2.\n\
    \   <Max Admitted Hops>: 8 bits.  The <Admitted Hops> value that has been\n  \
    \ carried by the <PHR container> field used to identify the RMD\n   reservation-based\
    \ node that admitted or processed a\n   \"PHR_Resource_Request\".\n   <SCH>: 3\
    \ bits.  The <SCH> value that is used to specify which of the\n   6 RMD-QOSM scenarios\
    \ (see Section 3.2.3) MUST be used within the RMD\n   domain.  The operator of\
    \ an RMD domain MUST preconfigure all the QNE\n   Edge nodes within one domain\
    \ such that the <SCH> field included in\n   the \"PHR container\", will always\
    \ use the same value, such that within\n   one RMD domain only one of the below\
    \ described RMD-QOSM schemes can\n   be used at a time.  All the QNE Interior\
    \ nodes MUST interpret this\n   field before processing any other PHR container\
    \ payload fields.  The\n   currently defined <SCH> values are:\n   o  0:     RMD-QOSM\
    \ scheme MUST be \"per-flow congestion notification\n             based on probing\"\
    ;\n   o  1:     RMD-QOSM scheme MUST be \"per-flow RMD NSIS measurement-\n   \
    \          based admission control\",\n   o  2:     RMD-QOSM scheme MUST be \"\
    per-flow RMD reservation-based\" in\n             combination with the \"severe\
    \ congestion handling by the\n             RMD-QOSM refresh\" procedure;\n   o\
    \  3 :    RMD-QOSM scheme MUST be \"per-flow RMD reservation-based\" in\n    \
    \         combination with the \"severe congestion handling by\n             proportional\
    \ data packet marking\" procedure;\n   o  4:     RMD-QOSM scheme MUST be \"per-aggregate\
    \ RMD reservation-\n             based\" in combination with the \"severe congestion\
    \ handling\n             by the RMD-QOSM refresh\" procedure;\n   o  5:     RMD-QOSM\
    \ scheme MUST be \"per-aggregate RMD reservation-\n             based\" in combination\
    \ with the \"severe congestion handling\n             by proportional data packet\
    \ marking\" procedure;\n   o  6 - 7: reserved.\n   The default value of the <SCH>\
    \ field MUST be set to the value equal\n   to 3.\n"
- title: 4.1.3.  PDR Container
  contents:
  - "4.1.3.  PDR Container\n   This section describes the parameters of the PDR container,\
    \ which are\n   used by the RMD-QOSM functionality available at the Edge nodes.\n\
    \   The bit format of the PDR container can be seen in Figure 7.\n   <PDR container>\
    \ = <O>  <S> <M>\n   <Max Admitted Hops> <B> <SCH> [<PDR Bandwidth>]\n   In Figure\
    \ 7, note that <Max Admitted Hops> is represented as <Max Adm\n   Hops>.\n   \
    \ 0                   1                   2                   3\n    0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |M|E|N|r|   Parameter ID        |r|r|r|r|          2            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |S|M| Max Adm  Hops |B|O| SCH |        EMPTY                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |PDR Bandwidth(32-bit IEEE floating point.number)               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                        Figure 7: PDR container\n   Parameter ID: 12-bit field\
    \ identifying the type of <PDR container>\n   field.\n   \"PDR_Reservation_Request\"\
    \ (Parameter ID = 20): generated by the\n   QNE(Ingress) node in order to initiate\
    \ or update the QoS-NSLP per-\n   domain reservation state in the QNE(Egress)\
    \ node.\n   \"PDR_Refresh_Request\" (Parameter ID = 21): generated by the\n  \
    \ QNE(Ingress) node and sent to the QNE(Egress) node to refresh, in\n   case needed,\
    \ the QoS-NSLP per-domain reservation states located in\n   the QNE(Egress) node.\n\
    \   \"PDR_Release_Request\" (Parameter ID = 22): generated and sent by the\n \
    \  QNE(Ingress) node to the QNE(Egress) node to release the per-domain\n   reservation\
    \ states explicitly.\n   \"PDR_Reservation_Report\" (Parameter ID = 23): generated\
    \ and sent by\n   the QNE(Egress) node to the QNE(Ingress) node to report that\
    \ a\n   \"PHR_Resource_Request\" and a \"PDR_Reservation_Request\" traffic\n \
    \  handling directive field have been received and that the request has\n   been\
    \ admitted or rejected.\n   \"PDR_Refresh_Report\" (Parameter ID = 24) generated\
    \ and sent by the\n   QNE(Egress) node in case needed, to the QNE(Ingress) node\
    \ to report\n   that a \"PHR_Refresh_Update\" traffic handling directive field\
    \ has been\n   received and has been processed.\n   \"PDR_Release_Report\" (Parameter\
    \ ID = 25) generated and sent by the\n   QNE(Egress) node in case needed, to the\
    \ QNE(Ingress) node to report\n   that a \"PHR_Release_Request\" and a \"PDR_Release_Request\"\
    \ traffic\n   handling directive field have been received and have been processed.\n\
    \   \"PDR_Congestion_Report\" (Parameter ID = 26): generated and sent by\n   the\
    \ QNE(Egress) node to the QNE(Ingress) node and used for congestion\n   notification.\n\
    \   <S> (PDR Severe Congestion): 1 bit.  Specifies if a severe congestion\n  \
    \ situation occurred.  It can also carry the <S> parameter of the\n   <PHR_Resource_Request>\
    \ or <PHR_Refresh_Update> fields.\n   <O> (Overload): 1 bit.  This field is used\
    \ during the severe\n   congestion handling scheme that is using the RMD-QOSM\
    \ refresh\n   procedure.  This bit is set when an overload on a QNE Interior node\n\
    \   is detected and when this field is carried by the\n   \"PDR_Congestion_Report\"\
    \ container.  <O> SHOULD be set to \"1\" if the\n   <S> bit is set.  For more\
    \ details, see Section 4.6.1.6.1.\n   <M> (PDR Marked): 1 bit.  Carries the <M>\
    \ value of the\n   \"PHR_Resource_Request\" or \"PHR_Refresh_Update\" traffic\
    \ handling\n   directive field.\n   <B>: 1 bit.  Indicates bidirectional reservation.\n\
    \   <Max Admitted Hops>: 8 bits.  The <Admitted Hops> value that has been\n  \
    \ carried by the <PHR container> field used to identify the RMD\n   reservation-based\
    \ node that admitted or processed a\n   \"PHR_Resource_Request\".\n   <PDR Bandwidth>:\
    \ 32 bits.  This field specifies the bandwidth that\n   either applies when the\
    \ <B> flag is set to \"1\" and when this\n   parameter is carried by a RESPONSE\
    \ message or when a severe\n   congestion occurs and the QNE Edges maintain an\
    \ aggregated intra-\n   domain QoS-NSLP operational state and it is carried by\
    \ a NOTIFY\n   message.  In the situation that the <B> flag is set to \"1\", this\n\
    \   parameter specifies the requested bandwidth that has to be reserved\n   by\
    \ a node in the reverse direction and when the intra-domain\n   signaling procedures\
    \ require a bidirectional reservation procedure.\n   In the severe congestion\
    \ situation, this parameter specifies the\n   bandwidth that has to be released.\n\
    \   <SCH>: 3 bits.  The <SCH> value that is used to specify which of the\n   6\
    \ RMD scenarios (see Section 3.2.3) MUST be used within the RMD\n   domain.  The\
    \ operator of an RMD domain MUST preconfigure all the QNE\n   Edge nodes within\
    \ one domain such that the <SCH> field included in\n   the \"PDR container\",\
    \ will always use the same value, such that within\n   one RMD domain only one\
    \ of the below described RMD-QOSM schemes can\n   be used at a time.  All the\
    \ QNE Interior nodes MUST interpret this\n   field before processing any other\
    \ <PDR container> payload fields.\n   The currently defined <SCH> values are:\n\
    \   o  0:     RMD-QOSM scheme MUST be \"per-flow congestion notification\n   \
    \          based on probing\";\n   o  1:     RMD-QOSM scheme MUST be \"per-flow\
    \ RMD NSIS measurement-\n             based admission control\";\n   o  2:   \
    \  RMD-QOSM scheme MUST be \"per-flow RMD reservation-based\" in\n           \
    \  combination with the \"severe congestion handling by the\n             RMD-QOSM\
    \ refresh\" procedure;\n   o  3 :    RMD-QOSM scheme MUST be \"per-flow RMD reservation-based\"\
    \ in\n             combination with the \"severe congestion handling by\n    \
    \         proportional data packet marking\" procedure;\n   o  4:     RMD-QOSM\
    \ scheme MUST be \"per-aggregate RMD reservation-\n             based\" in combination\
    \ with the \"severe congestion handling\n             by the RMD-QOSM refresh\"\
    \ procedure;\n   o  5:     RMD-QOSM scheme MUST be \"per-aggregate RMD reservation-\n\
    \             based\" in combination with the \"severe congestion handling\n \
    \            by proportional data packet marking\" procedure;\n   o  6 - 7: reserved.\n\
    \   The default value of the <SCH> field MUST be set to the value equal\n   to\
    \ 3.\n"
- title: 4.2.  Message Format
  contents:
  - "4.2.  Message Format\n   The format of the messages used by the RMD-QOSM complies\
    \ with the\n   QoS-NSLP and QSPEC template specifications.  The QSPEC used by\
    \ RMD-\n   QOSM is denoted in this document as RMD-QSPEC and is described in\n\
    \   Section 4.1.\n"
- title: 4.3.  RMD Node State Management
  contents:
  - "4.3.  RMD Node State Management\n   The QoS-NSLP state creation and management\
    \ is specified in [RFC5974].\n   This section describes the state creation and\
    \ management functions of\n   the Resource Management Function (RMF) in the RMD\
    \ nodes.\n"
- title: 4.3.1.  Aggregated Operational and Reservation States at the QNE Edges
  contents:
  - "4.3.1.  Aggregated Operational and Reservation States at the QNE Edges\n   The\
    \ QNE Edges maintain both the intra-domain QoS-NSLP operational and\n   reservation\
    \ states, while the QNE Interior nodes maintain only\n   reservation states. \
    \ The structure of the intra-domain QoS-NSLP\n   operational state used by the\
    \ QNE Edges is specified in [RFC5974].\n   In this case, the intra-domain sessions\
    \ supported by the Edges are\n   per-aggregate sessions that have a one-to-many\
    \ relationship to the\n   per-flow end-to-end states supported by the same Edge.\n\
    \   Note that the method of selecting the end-to-end sessions that form\n   an\
    \ aggregate is not specified in this document.  An example of how\n   this can\
    \ be accomplished is by monitoring the GIST routing states\n   used by the end-to-end\
    \ sessions and grouping the ones that use the\n   same <PHB Class>, QNE Ingress\
    \ and QNE Egress addresses, and the value\n   of the priority level.  Note that\
    \ this priority level should be\n   deduced from the priority parameters carried\
    \ by the initial QSPEC\n   object.\n   The operational state of this aggregated\
    \ intra-domain session MUST\n   contain a list with BOUND-SESSION-IDs.\n   The\
    \ structure of the list depends on whether a unidirectional\n   reservation or\
    \ a bidirectional reservation is supported.\n   When the operational state (at\
    \ QNE Ingress and QNE Egress) supports\n   unidirectional reservations, then this\
    \ state MUST contain a list with\n   BOUND-SESSION-IDs maintaining the <SESSION-ID>\
    \ values of its bound\n   end-to-end sessions.  The Binding_Code associated with\
    \ this BOUND-\n   SESSION-ID is set to code (Aggregated sessions).  Thus, the\n\
    \   operational state maintains a list of BOUND-SESSION-ID entries.  Each\n  \
    \ entry is created when an end-to-end session joins the aggregated\n   intra-domain\
    \ session and is removed when an end-to-end session leaves\n   the aggregate.\n\
    \   It is important to emphasize that, in this case, the operational\n   state\
    \ (at QNE Ingress and QNE Egress) that is maintained by each end-\n   to-end session\
    \ bound to the aggregated intra-domain session MUST\n   contain in the BOUND-SESSION-ID,\
    \ the <SESSION-ID> value of the bound\n   tunneled intra-domain (aggregate) session.\
    \  The Binding_Code\n   associated with this BOUND-SESSION-ID is set to code (Aggregated\n\
    \   sessions).\n   When the operational state (at QNE Ingress and QNE Egress)\
    \ supports\n   bidirectional reservations, the operational state MUST contain\
    \ a list\n   of BOUND-SESSION-ID sets.  Each set contains two BOUND-SESSION-IDs.\n\
    \   One of the BOUND-SESSION-IDs maintains the <SESSION-ID> value of one\n   of\
    \ bound end-to-end session.  The Binding_Code associated with this\n   BOUND-SESSION-ID\
    \ is set to code (Aggregated sessions).  Another\n   BOUND-SESSION-ID, within\
    \ the same set entry, maintains the SESSION-ID\n   of the bidirectional bound\
    \ end-to-end session.  The Binding_Code\n   associated with this BOUND-SESSION-ID\
    \ is set to code (Bidirectional\n   sessions).\n   Note that, in each set, a one-to-one\
    \ relation exists between each\n   BOUND-SESSION-ID with Binding_Code set to (Aggregate\
    \ sessions) and\n   each BOUND-SESSION-ID with Binding_Code set to (bidirectional\n\
    \   sessions).  Each set is created when an end-to-end session joins the\n   aggregated\
    \ operational state and is removed when an end-to-end\n   session leaves the aggregated\
    \ operational state.\n   It is important to emphasize that, in this case, the\
    \ operational\n   state (at QNE Ingress and QNE Egress) that is maintained by\
    \ each end-\n   to-end session bound to the aggregated intra-domain session it\
    \ MUST\n   contain two types of BOUND-SESSION-IDs.  One is the BOUND-SESSION-ID\n\
    \   that MUST contain the <SESSION-ID> value of the bound tunneled\n   aggregated\
    \ intra-domain session that is using the Binding_Code set to\n   (Aggregated sessions).\
    \  The other BOUND-SESSION-ID maintains the\n   SESSION-ID of the bound bidirectional\
    \ end-to-end session.  The\n   Binding_Code associated with this BOUND-SESSION-ID\
    \ is set to code\n   (Bidirectional sessions).\n   When the QNE Edges use aggregated\
    \ QoS-NSLP reservation states, then\n   the <PHB Class> value and the size of\
    \ the aggregated reservation,\n   e.g., reserved bandwidth, have to be maintained.\
    \  Note that this type\n   of aggregation is an edge-to-edge aggregation and is\
    \ similar to the\n   aggregation type specified in [RFC3175].\n   The size of\
    \ the aggregated reservations needs to be greater or equal\n   to the sum of bandwidth\
    \ of the inter-domain (end-to-end)\n   reservations/sessions it aggregates (e.g.,\
    \ see Section 1.4.4 of\n   [RFC3175]).\n   A policy can be used to maintain the\
    \ amount of REQUIRED bandwidth on\n   a given aggregated reservation by taking\
    \ into account the sum of the\n   underlying inter-domain (end-to-end) reservations,\
    \ while endeavoring\n   to change reservation less frequently.  This MAY require\
    \ a trend\n   analysis.  If there is a significant probability that in the next\n\
    \   interval of time the current aggregated reservation is exhausted, the\n  \
    \ Ingress router MUST predict the necessary bandwidth and request it.\n   If the\
    \ Ingress router has a significant amount of bandwidth reserved,\n   but has very\
    \ little probability of using it, the policy MAY predict\n   the amount of bandwidth\
    \ REQUIRED and release the excess.  To increase\n   or decrease the aggregate,\
    \ the RMD modification procedures SHOULD be\n   used (see Section 4.6.1.4).\n\
    \   The QNE Interior nodes are reduced-state nodes, i.e., they do not\n   store\
    \ NTLP/GIST states, but they do store per PHB-aggregated QoS-NSLP\n   reservation\
    \ states.  These reservation states are maintained and\n   refreshed in the same\
    \ way as described in Section 4.3.3.\n"
- title: 4.3.2.  Measurement-Based Method
  contents:
  - "4.3.2.  Measurement-Based Method\n   The QNE Edges maintain per-flow intra-domain\
    \ QoS-NSLP operational and\n   reservation states that contain similar data structures\
    \ as those\n   described in Section 4.3.1.  The main difference is associated\
    \ with\n   the different types of the used Message-Routing-Information (MRI) and\n\
    \   the bound end-to-end sessions.  The structure of the maintained\n   BOUND-SESSION-IDs\
    \ depends on whether a unidirectional reservation or\n   a bidirectional reservation\
    \ is supported.\n   When unidirectional reservations are supported, the operational\
    \ state\n   associated with this per-flow intra-domain session MUST contain in\n\
    \   the BOUND-SESSION-ID the <SESSION-ID> value of its bound end-to-end\n   session.\
    \  The Binding_Code associated with this BOUND-SESSION-ID is\n   set to code (Tunneled\
    \ and end-to-end sessions).\n   When bidirectional reservations are supported,\
    \ the operational state\n   (at QNE Ingress and QNE Egress) MUST contain two types\
    \ of BOUND-\n   SESSION-IDs.  One is the BOUND-SESSION-ID that maintains the\n\
    \   <SESSION-ID> value of the bound tunneled per-flow intra-domain\n   session.\
    \  The Binding_Code associated with this BOUND-SESSION-ID is\n   set to code (Tunneled\
    \ and end-to-end sessions).\n   The other BOUND-SESSION-ID maintains the SESSION-ID\
    \ of the bound\n   bidirectional end-to-end session.  The Binding_Code associated\
    \ with\n   this BOUND-SESSION-ID is set to code (Bidirectional sessions).\n  \
    \ Furthermore, the QoS-NSLP reservation state maintains the <PHB Class>\n   value,\
    \ the value of the bandwidth requested by the end-to-end session\n   bound to\
    \ the intra-domain session, and the value of the priority\n   level.\n   The measurement-based\
    \ method can be classified in two schemes:\n   * Congestion notification based\
    \ on probing:\n   In this scheme, the Interior nodes are Diffserv-aware but not\
    \ NSIS-\n   aware nodes.  Each Interior node counts the bandwidth that is used\
    \ by\n   each PHB traffic class.  This counter value is stored in an RMD_QOSM\n\
    \   state.  For each PHB traffic class, a predefined congestion\n   notification\
    \ threshold is set.  The predefined congestion\n   notification threshold is set\
    \ according to an engineered bandwidth\n   limitation based, e.g., on a Service\
    \ Level Agreement or a capacity\n   limitation of specific links.  The threshold\
    \ is usually less than the\n   capacity limit, i.e., admission threshold, in order\
    \ to avoid\n   congestion due to the error of estimating the actual traffic load.\n\
    \   The value of this threshold SHOULD be stored in another RMD_QOSM\n   state.\n\
    \   In this scenario, an end-to-end NSIS message is used as a probe\n   packet.\
    \  In this case, the <DSCP> field of the GIST message is re-\n   marked when the\
    \ predefined congestion notification threshold is\n   exceeded in an Interior\
    \ node.  It is required that the re-marking\n   happens to all packets that belong\
    \ to the congested PHB traffic class\n   so that the probe can't pass the congested\
    \ router without being re-\n   marked.  In this way, it is ensured that the end-to-end\
    \ NSIS message\n   passed through the node that is congested.  This feature is\
    \ very\n   useful when flow-based ECMP (Equal Cost Multiple Path) routing is\n\
    \   used to detect only flows that are passing through the congested\n   node.\n\
    \   * NSIS measurement-based admission control:\n   The measurement-based admission\
    \ control is implemented in NSIS-aware\n   stateless routers.  Thus, the main\
    \ difference between this type of\n   the measurement-based admission control\
    \ and the congestion\n   notification-based admission control is the fact that\
    \ the Interior\n   nodes are NSIS-aware nodes.  In particular, the QNE Interior\
    \ nodes\n   operating in NSIS measurement-based mode are QoS-NSLP stateless\n\
    \   nodes, i.e., they do not support any QoS-NSLP or NTLP/GIST states.\n   These\
    \ measurement-based nodes store two RMD-QOSM states per PHR\n   group.  These\
    \ states reflect the traffic conditions at the node and\n   are not affected by\
    \ QoS-NSLP signaling.  One state stores the\n   measured user traffic load associated\
    \ with the PHR group and another\n   state stores the maximum traffic load threshold\
    \ that can be admitted\n   per PHR group.  When a measurement-based node receives\
    \ a intra-domain\n   RESERVE message, it compares the requested resources to the\
    \ available\n   resources (maximum allowed minus current load) for the requested\
    \ PHR\n   group.  If there are insufficient resources, it sets the <M> bit in\n\
    \   the RMD-QSPEC.  No change to the RMD-QSPEC is made when there are\n   sufficient\
    \ resources.\n"
- title: 4.3.3.  Reservation-Based Method
  contents:
  - "4.3.3.  Reservation-Based Method\n   The QNE Edges maintain intra-domain QoS-NSLP\
    \ operational and\n   reservation states that contain similar data structures\
    \ as described\n   in Section 4.3.1.\n   In this case, the intra-domain sessions\
    \ supported by the Edges are\n   per-flow sessions that have a one-to-one relationship\
    \ to the per-flow\n   end-to-end states supported by the same Edge.\n   The QNE\
    \ Interior nodes operating in reservation-based mode are QoS-\n   NSLP reduced-state\
    \ nodes, i.e., they do not store NTLP/GIST states\n   but they do store per PHB-aggregated\
    \ QoS-NSLP states.\n   The reservation-based PHR installs and maintains one reservation\n\
    \   state per PHB, in all the nodes located in the communication path.\n   This\
    \ state is identified by the <PHB Class> value and it maintains\n   the number\
    \ of currently reserved resource units (or bandwidth).\n   Thus, the QNE Ingress\
    \ node signals only the resource units requested\n   by each flow.  These resource\
    \ units, if admitted, are added to the\n   currently reserved resources per PHB.\n\
    \   For each PHB, a threshold is maintained that specifies the maximum\n   number\
    \ of resource units that can be reserved.  This threshold could,\n   for example,\
    \ be statically configured.\n   An example of how the admission control and its\
    \ maintenance process\n   occurs in the Interior nodes is described in Section\
    \ 3 of [CsTa05].\n   The simplified concept that is used by the per-traffic class\n\
    \   admission control process in the Interior nodes, is based on the\n   following\
    \ equation:\n        last + p <= T,\n   where p is the requested bandwidth rate,\
    \ T is the admission\n   threshold, which reflects the maximum traffic volume\
    \ that can be\n   admitted in the traffic class, and last is a counter that records\
    \ the\n   aggregated sum of the signaled bandwidth rates of previous admitted\n\
    \   flows.\n   The PHB group reservation states maintained in the Interior nodes\
    \ are\n   soft states, which are refreshed by sending periodic refresh intra-\n\
    \   domain RESERVE messages, which are initiated by the Ingress QNEs.  If\n  \
    \ a refresh message corresponding to a number of reserved resource\n   units (i.e.,\
    \ bandwidth) is not received, the aggregated reservation\n   state is decreased\
    \ in the next refresh period by the corresponding\n   amount of resources that\
    \ were not refreshed.  The refresh period can\n   be refined using a sliding window\
    \ algorithm described in [RMD3].\n   The reserved resources for a particular flow\
    \ can also be explicitly\n   released from a PHB reservation state by means of\
    \ a intra-domain\n   RESERVE release/tear message, which is generated by the Ingress\
    \ QNEs.\n   The use of explicit release enables the instantaneous release of the\n\
    \   resources regardless of the length of the refresh period.  This\n   allows\
    \ a longer refresh period, which also reduces the number of\n   periodic refresh\
    \ messages.\n   Note that both in the case of measurement- and (per-flow and\n\
    \   aggregated) RMD reservation-based methods, the way in which the\n   maximum\
    \ bandwidth thresholds are maintained is out of the\n   specification of this\
    \ document.  However, when admission priorities\n   are supported, the Maximum\
    \ Allocation [RFC4125] or the Russian Dolls\n   [RFC4127] bandwidth allocation\
    \ models MAY be used.  In this case,\n   three types of priority traffic classes\
    \ within the same PHB, e.g.,\n   Expedited Forwarding, can be differentiated.\
    \  These three different\n   priority traffic classes, which are associated with\
    \ the same PHB, are\n   denoted in this document as PHB_low_priority, PHB_normal_priority,\n\
    \   and PHB_high_priority, and are identified by the <PHB Class> value\n   and\
    \ the priority value, which is carried in the <Admission Priority>\n   RMD-QSPEC\
    \ parameter.\n"
- title: 4.4.  Transport of RMD-QOSM Messages
  contents:
  - "4.4.  Transport of RMD-QOSM Messages\n   As mentioned in Section 1, the RMD-QOSM\
    \ aims to support a number of\n   additional requirements, e.g., Minimal impact\
    \ on Interior node\n   performance.  Therefore, RMD-QOSM is designed to be very\
    \ lightweight\n   signaling with regard to the number of signaling message round\
    \ trips\n   and the amount of state established at involved signaling nodes with\n\
    \   and without reduced state on QNEs.  The actions allowed by a QNE\n   Interior\
    \ node are minimal (i.e., only those specified by the RMD-\n   QOSM).\n   For\
    \ example, only the QNE Ingress and the QNE Egress nodes are\n   allowed to initiate\
    \ certain signaling messages.  QNE Interior nodes\n   are, for example, allowed\
    \ to modify certain signaling message\n   payloads.  Moreover, RMD signaling is\
    \ targeted towards intra-domain\n   signaling only.  Therefore, RMD-QOSM relies\
    \ on the security and\n   reliability support that is provided by the bound end-to-end\
    \ session,\n   which is running between the boundaries of the RMD domain (i.e.,\
    \ the\n   RMD-QOSM QNE Edges), and the security provided by the D-mode.  This\n\
    \   implies the use of the Datagram Mode.\n   Therefore, the intra-domain messages\
    \ used by the RMD-QOSM are\n   intended to operate in the NTLP/GIST Datagram mode\
    \ (see [RFC5971]).\n   The NSLP functionality available in all RMD-QOSM-aware\
    \ QoS-NSLP nodes\n   requires the intra-domain GIST, via the QoS-NSLP RMF API\
    \ see\n   [RFC5974], to:\n   * operate in unreliable mode.  This can be satisfied\
    \ by passing this\n     requirement from the QoS-NSLP layer to the GIST layer\
    \ via the API\n     Transfer-Attributes.\n   * not create a message association\
    \ state.  This requirement can be\n     satisfied by a local policy, e.g., the\
    \ QNE is configured to not\n     create a message association state.\n   * not\
    \ create any NTLP routing state by the Interior nodes.  This can\n     be satisfied\
    \ by passing this requirement from the QoS-NSLP layer to\n     the GIST layer\
    \ via the API.  However, between the QNE Egress and\n     QNE Ingress routing\
    \ states SHOULD be created that are associated\n     with intra-domain sessions\
    \ and that can be used for the\n     communication of GIST Data messages sent\
    \ by a QNE Egress directly\n     to a QNE Ingress.  This type of routing state\
    \ associated with an\n     intra-domain session can be generated and used in the\
    \ following\n     way:\n   * When the QNE Ingress has to send an initial intra-domain\
    \ RESERVE\n     message, the QoS-NSLP sends this message by including, in the\
    \ GIST\n     API SendMessage primitive, the Unreliable and No security\n     attributes.\
    \  In order to optimize this procedure, the RMD domain\n     MUST be engineered\
    \ in such a way that GIST will piggyback this NSLP\n     message on a GIST Query\
    \ message.  Furthermore, GIST sets the C-flag\n     (C=1), see [RFC5971] and uses\
    \ the Q-mode.  The GIST functionality\n     in each QNE Interior node will receive\
    \ the GIST Query message and\n     by using the RecvMessage GIST API primitive\
    \ it will pass the intra-\n     domain RESERVE message to the QoS-NSLP functionality.\
    \  At the same\n     time, the GIST functionality uses the Routing-State-Check\
    \ boolean\n     to find out if the QoS-NSLP needs to create a routing state. \
    \ The\n     QoS-NSLP sets this boolean to inform GIST to not create a routing\n\
    \     state and to forward the GIST Query further downstream with the\n     modified\
    \ QoS-NSLP payload, which will include the modified intra-\n     domain RESERVE\
    \ message.  The intra-domain RESERVE is sent in the\n     same way up to the QNE\
    \ Egress.  The QNE Egress needs to create a\n     routing state.\n     Therefore,\
    \ at the same moment that the GIST functionality passes\n     the intra-domain\
    \ RESERVE message, via the GIST RecvMessage\n     primitive, to the QoS-NSLP,\
    \ the QoS-NSLP sets the Routing-State-\n     Check boolean such that a routing\
    \ state is created.  The GIST\n     creates the routing state using normal GIST\
    \ procedures.  After this\n     phase, the QNE Ingress and QNE Egress have, for\
    \ the particular\n     session, routing states that can route traffic directly\
    \ from QNE\n     Ingress to QNE Egress and from QNE Egress to QNE Ingress.  The\n\
    \     routing state at the QNE Egress can be used by the QoS-NSLP and\n     GIST\
    \ to send an intra-domain RESPONSE or intra-domain NOTIFY\n     directly to the\
    \ QNE Ingress using GIST Data messages.  Note that\n     this routing state is\
    \ refreshed using normal GIST procedures.  Note\n     that in the above description,\
    \ it is considered that the QNE\n     Ingress can piggyback the initial RESERVE\
    \ (NSLP) message on the\n     GIST Query message.  If the piggybacking of this\
    \ NSLP (initial\n     RESERVE) message would not be possible on the GIST Query\
    \ message,\n     then the GIST Query message sent by the QNE Ingress node would\
    \ not\n     contain any NSLP data.  This GIST Query message would only be\n  \
    \   processed by the QNE Egress to generate a routing state.\n     After the QNE\
    \ Ingress is informed that the routing state at the QNE\n     Egress is initiated,\
    \ it would have to send the initial RESERVE\n     message using similar procedures\
    \ as for the situation that it would\n     send an intra-domain RESERVE message\
    \ that is not an initial\n     RESERVE, see next bullet.  This procedure is not\
    \ efficient and\n     therefore it is RECOMMENDED that the RMD domain MUST be\
    \ engineered\n     in such a way that the GIST protocol layer, which is processed\
    \ on a\n     QNE Ingress, will piggyback an initial RESERVE (NSLP) message on\
    \ a\n     GIST Query message that uses the Q-mode.\n   * When the QNE Ingress\
    \ needs to send an intra-domain RESERVE message\n     that is not an initial RESERVE,\
    \ then the QoS-NSLP sends this\n     message by including in the GIST API SendMessage\
    \ primitive such\n     attributes that the use of the Datagram Mode is implied,\
    \ e.g., the\n     Unreliable attribute.  Furthermore, the Local policy attribute\
    \ is\n     set such that GIST sends the intra-domain RESERVE message in a\n  \
    \   Q-mode even if there is a routing state at the QNE Ingress.  In\n     this\
    \ way, the GIST functionality uses its local policy to send the\n     intra-domain\
    \ RESERVE message by piggybacking it on a GIST Data\n     message and sending\
    \ it in Q-mode even if there is a routing state\n     for this session.  The intra-domain\
    \ RESERVE message is piggybacked\n     on the GIST Data message that is forwarded\
    \ and processed by the QNE\n     Interior nodes up to the QNE Egress.\n   The\
    \ transport of the original (end-to-end) RESERVE message is\n   accomplished in\
    \ the following way:\n   At the QNE Ingress, the original (end-to-end) RESERVE\
    \ message is\n   forwarded but ignored by the stateless or reduced-state nodes,\
    \ see\n   Figure 3.\n   The intermediate (Interior) nodes are bypassed using multiple\
    \ levels\n   of NSLPID values (see [RFC5974]).  This is accomplished by marking\n\
    \   the end-to-end RESERVE message, i.e., modifying the QoS-NSLP default\n   NSLPID\
    \ value to another NSLPID predefined value.\n   The marking MUST be accomplished\
    \ by the Ingress by modifying the\n   QoS_NSLP default NSLPID value to a NSLPID\
    \ predefined value.  In this\n   way, the Egress MUST stop this marking process\
    \ by reassigning the\n   QoS-NSLP default NSLPID value to the original (end-to-end)\
    \ RESERVE\n   message.  Note that the assignment of these NSLPID values is a QoS-\n\
    \   NSLP issue, which SHOULD be accomplished via IANA [RFC5974].\n"
- title: 4.5.  Edge Discovery and Message Addressing
  contents:
  - "4.5.  Edge Discovery and Message Addressing\n   Mainly, the Egress node discovery\
    \ can be performed by using either\n   the GIST discovery mechanism [RFC5971],\
    \ manual configuration, or any\n   other discovery technique.  The addressing\
    \ of signaling messages\n   depends on which GIST transport mode is used.  The\
    \ RMD-QOSM/QoS-NSLP\n   signaling messages that are processed only by the Edge\
    \ nodes use the\n   peer-peer addressing of the GIST Connection (C) mode.\n  \
    \ RMD-QOSM/QoS-NSLP signaling messages that are processed by all nodes\n   of\
    \ the Diffserv domain, i.e., Edges and Interior nodes, use the end-\n   to-end\
    \ addressing of the GIST Datagram (D) mode.  Note that the RMD-\n   QOSM cannot\
    \ directly specify that the GIST Connection or the GIST\n   Datagram mode SHOULD\
    \ be used.  This can only be specified by using,\n   via the QoS-NSLP-RMF API,\
    \ the GIST API Transfer-Attributes, such as\n   Reliable or Unreliable, high or\
    \ low level of security, and by the use\n   of local policies.  RMD QoS signaling\
    \ messages that are addressed to\n   the data path end nodes are intercepted by\
    \ the Egress nodes.  In\n   particular, at the ingress and for downstream intra-domain\
    \ messages,\n   the RMD-QOSM instructs the GIST functionality, via the GIST API\
    \ to do\n   the following:\n   * use unreliable and low level security Transfer-Attributes,\n\
    \   * do not create a GIST routing state, and\n   * use the D-mode MRI.\n   The\
    \ intra-domain RESERVE messages can then be transported by using\n   the Query\
    \ D-mode; see Section 4.4.\n   At the QNE Egress, and for upstream intra-domain\
    \ messages, the RMD-\n   QOSM instructs the GIST functionality, via the GIST API,\
    \ to use among\n   others:\n   * unreliable and low level security Transfer-Attributes\n\
    \   * the routing state associated with the intra-domain session to send\n   \
    \  an upstream intra-domain message directly to the QNE Ingress; see\n     Section\
    \ 4.4.\n"
- title: 4.6.  Operation and Sequence of Events
  contents:
  - '4.6.  Operation and Sequence of Events

    '
- title: 4.6.1.  Basic Unidirectional Operation
  contents:
  - "4.6.1.  Basic Unidirectional Operation\n   This section describes the basic unidirectional\
    \ operation and\n   sequence of events/triggers of the RMD-QOSM.  The following\
    \ basic\n   operation cases are distinguished:\n   * Successful reservation (Section\
    \ 4.6.1.1),\n   * Unsuccessful reservation (Section 4.6.1.2),\n   * RMD refresh\
    \ reservation (Section 4.6.1.3),\n   * RMD modification of aggregated reservation\
    \ (Section 4.6.1.4),\n   * RMD release procedure (Section 4.6.1.5.),\n   * Severe\
    \ congestion handling (Section 4.6.1.6.),\n   * Admission control using congestion\
    \ notification based on probing\n     (Section 4.6.1.7.).\n   The QNEs at the\
    \ Edges of the RMD domain support the RMD QoS Model and\n   end-to-end QoS Models,\
    \ which process the RESERVE message differently.\n   Note that the term end-to-end\
    \ QoS Model applies to any QoS Model that\n   is initiated and terminated outside\
    \ the RMD-QOSM-aware domain.\n   However, there might be situations where a QoS\
    \ Model is initiated\n   and/or terminated by the QNE Edges and is considered\
    \ to be an end-to-\n   end QoS Model.  This can occur when the QNE Edges can also\
    \ operate as\n   either QNI or as QNR and at the same time they can operate as\
    \ either\n   sender or receiver of the data path.\n   It is important to emphasize\
    \ that the content of this section is used\n   for the specification of the following\
    \ RMD-QOSM/QoS-NSLP signaling\n   schemes, when basic unidirectional operation\
    \ is assumed:\n   * \"per-flow congestion notification based on probing\";\n \
    \  * \"per-flow RMD NSIS measurement-based admission control\";\n   * \"per-flow\
    \ RMD reservation-based\" in combination with the \"severe\n     congestion handling\
    \ by the RMD-QOSM refresh\" procedure;\n   * \"per-flow RMD reservation-based\"\
    \ in combination with the \"severe\n     congestion handling by proportional data\
    \ packet marking\" procedure;\n   * \"per-aggregate RMD reservation-based\" in\
    \ combination with the\n     \"severe congestion handling by the RMD-QOSM refresh\"\
    \ procedure;\n   * \"per-aggregate RMD reservation-based\" in combination with\
    \ the\n     \"severe congestion handling by proportional data packet marking\"\
    \n     procedure.\n   For more details, please see Section 3.2.3.\n   In particular,\
    \ the functionality described in Sections 4.6.1.1,\n   4.6.1.2, 4.6.1.3, 4.6.1.5,\
    \ 4.6.1.4, and 4.6.1.6 applies to the RMD\n   reservation-based and to the NSIS\
    \ measurement-based admission control\n   methods.  The described functionality\
    \ in Section 4.6.1.7 applies to\n   the admission control procedure that uses\
    \ the congestion notification\n   based on probing.  The QNE Edge nodes maintain\
    \ either per-flow QoS-\n   NSLP operational and reservation states or aggregated\
    \ QoS-NSLP\n   operational and reservation states.\n   When the QNE Edges maintain\
    \ aggregated QoS-NSLP operational and\n   reservation states, the RMD-QOSM functionality\
    \ MAY accomplish an RMD\n   modification procedure (see Section 4.6.1.4), instead\
    \ of the\n   reservation initiation procedure that is described in this\n   subsection.\
    \  Note that it is RECOMMENDED that the QNE implementations\n   of RMD-QOSM process\
    \ the QoS-NSLP signaling messages with a higher\n   priority than data packets.\
    \  This can be accomplished as described in\n   Section 3.3.4 of [RFC5974] and\
    \ it can be requested via the QoS-NSLP-\n   RMF API described in [RFC5974].  The\
    \ signaling scenarios described in\n   this section are accomplished using the\
    \ QoS-NSLP processing rules\n   defined in [RFC5974], in combination with the\
    \ RMF triggers sent via\n   the QoS-NSLP-RMF API described in [RFC5974].\n   According\
    \ to Section 3.2.3, it is specified that only the \"per-flow\n   RMD reservation-based\"\
    \ in combination with the \"severe congestion\n   handling by proportional data\
    \ packet marking\" scheme MUST be\n   implemented within one RMD domain.  However,\
    \ all RMD QNEs supporting\n   this specification MUST support the combination\
    \ the \"per-flow RMD\n   reservation-based\" in combination with the \"severe\
    \ congestion\n   handling by proportional data packet marking\" scheme.  If the\
    \ RMD\n   QNEs support more RMD-QOSM schemes, then the operator of that RMD\n\
    \   domain MUST preconfigure all the QNE Edge nodes within one domain\n   such\
    \ that the <SCH> field included in the \"PHR container\" (Section\n   4.1.2) and\
    \ the \"PDR Container\" (Section 4.1.3) will always use the\n   same value, such\
    \ that within one RMD domain only one of the below\n   described RMD-QOSM schemes\
    \ is used at a time.\n   All QNE nodes located within the RMD domain MUST read\
    \ and interpret\n   the <SCH> field included in the \"PHR container\" before processing\
    \ all\n   the other \"PHR container\" payload fields.  Moreover, all QNE Edge\n\
    \   nodes located at the boarder of the RMD domain, MUST read and\n   interpret\
    \ the <SCH> field included in the \"PDR container\" before\n   processing all\
    \ the other <PDR container> payload fields.\n"
- title: 4.6.1.1.  Successful Reservation
  contents:
  - "4.6.1.1.  Successful Reservation\n   This section describes the operation of\
    \ the RMD-QOSM where a\n   reservation is successfully accomplished.\n   The QNI\
    \ generates the initial RESERVE message, and it is forwarded by\n   the NTLP as\
    \ usual [RFC5971].\n"
- title: 4.6.1.1.1.  Operation in Ingress Node
  contents:
  - "4.6.1.1.1.  Operation in Ingress Node\n   When an end-to-end reservation request\
    \ (RESERVE) arrives at the\n   Ingress node (QNE) (see Figure 8), it is processed\
    \ based on the end-\n   to-end QoS Model.  Subsequently, the combination of <TMOD-1>,\
    \ <PHB\n   Class>, and <Admission Priority> is derived from the <QoS Desired>\n\
    \   object of the initial QSPEC.\n   The QNE Ingress MUST maintain information\
    \ about the smallest MTU that\n   is supported on the links within the RMD domain.\n\
    \   The <Maximum Packet Size-1 (MPS)> value included in the end-to-end\n   QoS\
    \ Model <TMOD-1> parameter is compared with the smallest MTU value\n   that is\
    \ supported by the links within the RMD domain.  If the\n   \"Maximum Packet Size-1\
    \ (MPS)\" is larger than this smallest MTU value\n   within the RMD domain, then\
    \ the end-to-end reservation request is\n   rejected (see Section 4.6.1.1.2).\
    \  Otherwise, the admission process\n   continues.\n   The <TMOD-1> parameter\
    \ contained in the original initiator QSPEC is\n   mapped into the equivalent\
    \ RMD-Qspec <TMOD-1> parameter representing\n   only the peak bandwidth in the\
    \ local RMD-QSPEC.  This can be\n   accomplished by setting the RMD-QSPEC <TMOD-1>\
    \ fields as follows:\n   token rate (r) = peak traffic rate (p), the bucket depth\
    \ (b) = large,\n   and the minimum policed unit (m) = large.\n   Note that the\
    \ bucket size, (b), is measured in bytes.  Values of this\n   parameter may range\
    \ from 1 byte to 250 gigabytes; see [RFC2215].\n   Thus, the maximum value that\
    \ (b) could be is in the order of 250\n   gigabytes.  The minimum policed unit,\
    \ [m], is an integer measured in\n   bytes and must be less than or equal to the\
    \ Maximum Packet Size\n   (MPS).  Thus, the maximum value that (m) can be is (MPS).\
    \  [Part94]\n   and [TaCh99] describe a method of calculating the values of some\n\
    \   Token Bucket parameters, e.g., calculation of large values of (m) and\n  \
    \ (b), when the token rate (r), peak rate (p), and MPS are known.\n   The <Peak\
    \ Data Rate-1 (p)> value of the end-to-end QoS Model <TMOD-1>\n   parameter is\
    \ copied into the <Peak Data Rate-1 (p)> value of the\n   <Peak Data Rate-1 (p)>\
    \ value of the local RMD-Qspec <TMOD-1>.\n   The MPS value of the end-to-end QoS\
    \ Model <TMOD-1> parameter is\n   copied into the MPS value of the local RMD-Qspec\
    \ <TMOD-1>.\n   If the initial QSPEC does not contain the <PHB Class> parameter,\
    \ then\n   the selection of the <PHB Class> that is carried by the intra-domain\n\
    \   RMD-QSPEC is defined by a local policy similar to the procedures\n   discussed\
    \ in [RFC2998] and [RFC3175].\n   For example, in the situation that the initial\
    \ QSPEC is used by the\n   IntServ Controlled Load QOSM, then the Expedited Forwarding\
    \ (EF) PHB\n   is appropriate to set the <PHB Class> parameter carried by the\
    \ intra-\n   domain RMD-QSPEC (see [RFC3175]).\n   If the initial QSPEC does not\
    \ carry the <Admission Priority>\n   parameter, then the <Admission Priority>\
    \ parameter in the RMD-QSPEC\n   will not be populated.  If the initial QSPEC\
    \ does not carry the\n   <Admission Priority> parameter, but it carries other\
    \ priority\n   parameters, then it is considered that Edges, as being stateful\n\
    \   nodes, are able to control the priority of the sessions that are\n   entering\
    \ or leaving the RMD domain in accordance with the priority\n   parameters.\n\
    \   Note that the RMF reservation states (see Section 4.3) in the QNE\n   Edges\
    \ store the value of the <Admission Priority> parameter that is\n   used within\
    \ the RMD domain in case of preemption and severe\n   congestion situations (see\
    \ Section 4.6.1.6).\n   If the RMD domain supports preemption during the admission\
    \ control\n   process, then the QNE Ingress node can support the building blocks\n\
    \   specified in [RFC5974] and during the admission control process use\n   the\
    \ example preemption handling algorithm described in Appendix A.7.\n   Note that\
    \ in the above described case, the QNE Egress uses, if\n   available, the tunneled\
    \ initial priority parameters, which can be\n   interpreted by the QNE Egress.\n\
    \   If the initial QSPEC carries the <Excess Treatment> parameter, then\n   the\
    \ QNE Ingress and QNE Egress nodes MUST control the excess traffic\n   that is\
    \ entering or leaving the RMD domain in accordance with the\n   <Excess Treatment>\
    \ parameter.  Note that the RMD-QSPEC does not carry\n   the <Excess Treatment>\
    \ parameter.\n   If the requested <TMOD-1> parameter carried by the initial QSPEC,\n\
    \   cannot be satisfied, then an end-to-end RESPONSE message has to be\n   generated.\
    \  However, in order to decide whether the end-to-end\n   reservation request\
    \ was locally (at the QNE Ingress) satisfied, a\n   local (at the QNE_Ingress)\
    \ RMD-QOSM admission control procedure also\n   has to be performed.  In other\
    \ words, the RMD-QOSM functionality has\n   to verify whether the value included\
    \ in the <Peak Data Rate-1 (p)>\n   field of RMD-QOSM <TMOD-1> can be reserved\
    \ and stored in the RMD-QOSM\n   reservation states (see Sections 4.6.1.1.2 and\
    \ 4.3).\n   An initial QSPEC object MUST be included in the end-to-end RESPONSE\n\
    \   message.  The parameters included in the QSPEC <QoS Reserved> object\n   are\
    \ copied from the original <QoS Desired> values.\n   The <E> flag associated with\
    \ the QSPEC <QoS Reserved> object and the\n   <E> flag associated with the local\
    \ RMD-QSPEC <TMOD-1> parameter are\n   set.  In addition, the <INFO-SPEC> object\
    \ is included in the end-to-\n   end RESPONSE message.  The error code used by\
    \ this <INFO-SPEC> is:\n   Error severity class: Transient Failure Error code\
    \ value: Reservation\n   failure\n   Furthermore, all of the other RESPONSE parameters\
    \ are set according\n   to the end-to-end QoS Model or according to [RFC5974]\
    \ and [RFC5975].\n   If the request was satisfied locally (see Section 4.3), the\
    \ Ingress\n   QNE node generates two RESERVE messages: one intra-domain and one\n\
    \   end-to-end RESERVE message.  Note however, that when the aggregated\n   QoS-NSLP\
    \ operational and reservation states are used by the QNE\n   Ingress, then the\
    \ generation of the intra-domain RESERVE message\n   depends on the availability\
    \ of the aggregated QoS-NSLP operational\n   state.  If this aggregated QoS-NSLP\
    \ operational state is available,\n   then the RMD modification of aggregated\
    \ reservations described in\n   Section 4.6.1.4 is used.\n   It is important to\
    \ note that when the \"per-flow RMD reservation-\n   based\" scenario is used\
    \ within the RMD domain, the retransmission\n   within the RMD domain SHOULD be\
    \ disallowed.  The reason for this is\n   related to the fact that the QNI Interior\
    \ nodes are not able to\n   differentiate between a retransmitted RESERVE message\
    \ associated with\n   a certain session and an initial RESERVE message belonging\
    \ to another\n   session.  However, the QNE Ingress have to report a failure situation\n\
    \   upstream.  When the QNE Ingress transmits the (intra-domain or end-\n   to-end)\
    \ RESERVE with the <RII> object set, it waits for a RESPONSE\n   from the QNE\
    \ Egress for a QOSNSLP_REQUEST_RETRY period.\n   If the QNE Ingress transmitted\
    \ an intra-domain or end-to-end RESERVE\n   message with the <RII> object set\
    \ and it fails to receive the\n   associated intra-domain or end-to-end RESPONSE,\
    \ respectively, after\n   the QOSNSLP_REQUEST_RETRY period expires, it considers\
    \ that the\n   reservation failed.  In this case, the QNE Ingress SHOULD generate\
    \ an\n   end-to-end RESPONSE message that will include, among others, an\n   <INFO-SPEC>\
    \ object.  The error code used by this <INFO-SPEC> object\n   is:\n      Error\
    \ severity class: Transient Failure\n      Error code value: Reservation failure\n\
    \   Furthermore, all of the other RESPONSE parameters are set according\n   to\
    \ the end-to-end QoS Model or according to [RFC5974] and [RFC5975].\n   Note however,\
    \ that if the retransmission within the RMD domain is not\n   disallowed, then\
    \ the procedure described in Appendix A.8 SHOULD be\n   used on QNE Interior nodes;\
    \ see also [Chan07].  In this case, the\n   stateful QNE Ingress uses the retransmission\
    \ procedure described in\n   [RFC5974].\n   If a rerouting takes place, then the\
    \ stateful QNE Ingress is\n   following the procedures specified in [RFC5974].\n\
    \   At this point, the intra-domain and end-to-end operational states\n   MUST\
    \ be initiated or modified according to the REQUIRED binding\n   procedures. \
    \ The way of how the BOUND-SESSION-IDs are initiated and\n   maintained in the\
    \ intra-domain and end-to-end QoS-NSLP operational\n   states is described in\
    \ Sections 4.3.1 and 4.3.2.\n   These two messages are bound together in the following\
    \ way.  The end-\n   to-end RESERVE SHOULD contain, in the BOUND-SESSION-ID, the\
    \ SESSION-\n   ID of its bound intra-domain session.\n   Furthermore, if the QNE\
    \ Edge nodes maintain intra-domain per-flow\n   QoS-NSLP reservation states, then\
    \ the value of Binding_Code MUST be\n   set to code \"Tunnel and end-to-end sessions\"\
    \ (see Section 4.3.2).\n   In addition to this, the intra-domain and end-to-end\
    \ RESERVE messages\n   are bound using the Message binding procedure described\
    \ in [RFC5974].\n   In particular the <MSG-ID> object is included in the intra-domain\n\
    \   RESERVE message and its bound <BOUND-MSG-ID> object is carried by the\n  \
    \ end-to-end RESERVE message.  Furthermore, the <Message_Binding_Type>\n   flag\
    \ is SET (value is 1), such that the message dependency is\n   bidirectional.\n\
    \   If the QoS-NSLP Edges maintain aggregated intra-domain QoS-NSLP\n   operational\
    \ states, then the value of Binding_Code MUST be set to\n   code \"Aggregated\
    \ sessions\".\n   Furthermore, in this case, the retransmission within the RMD\
    \ domain\n   is allowed and the procedures described in Appendix A.8 SHOULD be\n\
    \   used on QNE Interior nodes.  This is necessary due to the fact that\n   when\
    \ retransmissions are disallowed, then the associated with (micro)\n   flows belonging\
    \ to the aggregate will loose their reservations.  Note\n   that, in this case,\
    \ the stateful QNE Ingress uses the retransmission\n   procedure described in\
    \ [RFC5974].\n   The intra-domain RESERVE message is associated with the (local\
    \ NTLP)\n   SESSION-ID mentioned above.  The selection of the IP source and IP\n\
    \   destination address of this message depends on how the different\n   inter-domain\
    \ (end-to-end) flows are aggregated by the QNE Ingress\n   node (see Section 4.3.1).\
    \  As described in Section 4.3.1, the QNE\n   Edges maintain either per-flow,\
    \ or aggregated QoS-NSLP reservation\n   states for the RMD QoS Model, which are\
    \ identified by (local NTLP)\n   SESSION-IDs (see [RFC5971]).  Note that this\
    \ NTLP SESSION-ID is a\n   different one than the SESSION-ID associated with the\
    \ end-to-end\n   RESERVE message.\n   If no QoS-NSLP aggregation procedure at\
    \ the QNE Edges is supported,\n   then the IP source and IP destination address\
    \ of this message MUST be\n   equal to the IP source and IP destination addresses\
    \ of the data flow.\n   The intra-domain RESERVE message is sent using the NTLP\
    \ datagram mode\n   (see Sections 4.4 and 4.5).  Note that the GIST Datagram mode\
    \ can be\n   selected using the unreliable GIST API Transfer-Attributes.  In\n\
    \   addition, the intra-domain RESERVE (RMD-QSPEC) message MUST include a\n  \
    \ PHR container (PHR_Resource_Request) and the RMD QOSM <QoS Desired>\n   object.\n\
    \   The end-to-end RESERVE message includes the initial QSPEC and it is\n   sent\
    \ towards the Egress QNE.\n   Note that after completing the initial discovery\
    \ phase, the GIST\n   Connection mode can be used between the QNE Ingress and\
    \ QNE Egress.\n   Note that the GIST Connection mode can be selected using the\
    \ reliable\n   GIST API Transfer-Attributes.\n   The end-to-end RESERVE message\
    \ is forwarded using the GIST forwarding\n   procedure to bypass the Interior\
    \ stateless or reduced-state QNE\n   nodes; see Figure 8.  The bypassing procedure\
    \ is described in Section\n   4.4.\n   At the QNE Ingress, the end-to-end RESERVE\
    \ message is marked, i.e.,\n   modifying the QoS-NSLP default NSLPID value to\
    \ another NSLPID\n   predefined value that will be used by the GIST message carrying\
    \ the\n   end-to-end RESPONSE message to bypass the QNE Interior nodes.  Note\n\
    \   that the QNE Interior nodes (see [RFC5971]) are configured to handle\n   only\
    \ certain NSLP-IDs (see [RFC5974]).\n   Furthermore, note that the initial discovery\
    \ phase and the process of\n   sending the end-to-end RESERVE message towards\
    \ the QNE Egress MAY be\n   done simultaneously.  This can be accomplished only\
    \ if the GIST\n   implementation is configured to perform that, e.g., via a local\n\
    \   policy.  However, the selection of the discovery procedure cannot be\n   selected\
    \ by the RMD-QOSM.\n   The (initial) intra-domain RESERVE message MUST be sent\
    \ by the QNE\n   Ingress and it MUST contain the following values (see the QoS-NSLP-\n\
    \   RMF API described in [RFC5974]):\n      *  the <RSN> object, whose value is\
    \ generated and processed as\n         described in [RFC5974];\n      *  the <SCOPING>\
    \ flag MUST NOT be set, meaning that a default\n         scoping of the message\
    \ is used.  Therefore, the QNE Edges MUST\n         be configured as RMD boundary\
    \ nodes and the QNE Interior nodes\n         MUST be configured as Interior (intermediary)\
    \ nodes;\n      *  the <RII> MUST be included in this message, see [RFC5974];\n\
    \      *  the <REPLACE> flag MUST be set to FALSE = 0;\n   *  The value of the\
    \ <Message ID> value carried by the <MSG-ID> object\n      is set according to\
    \ [RFC5974].  The value of the\n      <Message_Binding_Type> is set to \"1\".\n\
    \   *  the value of the <REFRESH-PERIOD> object MUST be calculated and\n     \
    \ set by the QNE Ingress node as described in Section 4.6.1.3;\n   *  the value\
    \ of the <PACKET-CLASSIFIER> object is associated with the\n      path-coupled\
    \ routing Message Routing Message (MRM), since RMD-QOSM\n      is used with the\
    \ path-coupled MRM.  The flag that has to be set is\n      the <T> flag (traffic\
    \ class) meaning that the packet\n      classification of packets is based on\
    \ the <DSCP> value included in\n      the IP header of the packets.  Note that\
    \ the <DSCP> value used in\n      the MRI can be derived by the value of <PHB\
    \ Class> parameter,\n      which MUST be carried by the intra-domain RESERVE message.\
    \  Note\n      that the QNE Ingress being a QNI for the intra-domain session it\n\
    \      can pass this value to GIST, via the GIST API.\n   *  the PHR resource\
    \ units MUST be included in the <Peak Data Rate-1\n      (p)> field of the local\
    \ RMD-QSPEC <TMOD-1> parameter of the <QoS\n      Desired> object.\n      When\
    \ the QNE Edges use per-flow intra-domain QoS-NSLP states, then\n      the <Peak\
    \ Data Rate-1 (p)> value included in the initial QSPEC\n      <TMOD-1> parameter\
    \ is copied into the <Peak Data Rate-1 (p)> value\n      of the local RMD-QSPEC\
    \ <TMOD-1> parameter.\n      When the QNE Edges use aggregated intra-domain QoS-NSLP\n\
    \      operational states, then the <Peak Data Rate-1 (p)> value of the\n    \
    \  local RMD-QSPEC <TMOD-1> parameter can be obtained by using the\n      bandwidth\
    \ aggregation method described in Section 4.3.1;\n   *  the value of the <PHB\
    \ Class> parameter can be defined by using the\n      method of copying the <PHB\
    \ Class> parameter carried by the initial\n      QSPEC into the <PHB Class> carried\
    \ by the RMD-QSPEC, which is\n      described above in this subsection.\n   *\
    \  the value of the <Parameter ID> field of the PHR container MUST be\n      set\
    \ to \"17\", (i.e., PHR_Resource_Request).\n   *  the value of the <Admitted Hops>\
    \ parameter in the PHR container\n      MUST be set to \"1\".  Note that during\
    \ a successful reservation,\n      each time an RMD-QOSM-aware node processes\
    \ the RMD-QSPEC, the\n      <Admitted Hops> parameter is increased by one.\n \
    \  *  the value of the <Hop_U> parameter in the PHR container MUST be\n      set\
    \ to \"0\".\n   *  the value of the <Max Admitted Hops> is set to \"0\".\n   *\
    \  If the initial QSPEC carried an <Admission Priority> parameter,\n      then\
    \ this parameter SHOULD be copied into the RMD-QSPEC and\n      carried by the\
    \ (initiating) intra-domain RESERVE.\n      Note that for the RMD-QOSM, a reservation\
    \ established without an\n      <Admission Priority> parameter is equivalent to\
    \ a reservation with\n      <Admission Priority> value of 1.\n      Note that,\
    \ in this case, each admission priority is associated\n      with a priority traffic\
    \ class.  The three priority traffic classes\n      (PHB_low_priority, PHB_normal_priority,\
    \ and PHB_high_priority) MAY\n      be associated with the same PHB (see Section\
    \ 4.3.3).\n   *  In a single RMD domain case, the PDR container MAY not be included\n\
    \      in the message.\n   Note that the intra-domain RESERVE message does not\
    \ carry the <BOUND-\n   SESSION-ID> object.  The reason for this is that the end-to-end\n\
    \   RESERVE carries, in the <BOUND-SESSION-ID> object, the <SESSION-ID>\n   value\
    \ of the intra-domain session.\n   When an end-to-end RESPONSE message is received\
    \ by the QNE Ingress\n   node, which was sent by a QNE Egress node (see Section\
    \ 4.6.1.1.3),\n   then it is processed according to [RFC5974] and end-to-end QoS\
    \ Model\n   rules.\n   When an intra-domain RESPONSE message is received by the\
    \ QNE Ingress\n   node, which was sent by a QNE Egress (see Section 4.6.1.1.3),\
    \ it uses\n   the QoS-NSLP procedures to match it to the earlier sent intra-domain\n\
    \   RESERVE message.  After this phase, the RMD-QSPEC has to be\n   identified\
    \ and processed.\n   The RMD QOSM reservation has been successful if the <M> bit\
    \ carried\n   by the \"PDR Container\" is equal to \"0\" (i.e., not set).\n  \
    \ Furthermore, the <INFO-SPEC> object is processed as defined in the\n   QoS-NSLP\
    \ specification.  In the case of successful reservation, the\n   <INFO-SPEC> object\
    \ MUST have the following values:\n   * Error severity class: Success\n   * Error\
    \ code value: Reservation successful\n   If the end-to-end RESPONSE message has\
    \ to be forwarded to a node\n   outside the RMD-QOSM-aware domain, then the values\
    \ of the objects\n   contained in this message (i.e., <RII> <RSN>, <INFO-SPEC>,\
    \ [<QSPEC>])\n   MUST be set by the QoS-NSLP protocol functions of the QNE.  If\
    \ an\n   end-to-end QUERY is received by the QNE Ingress, then the same\n   bypassing\
    \ procedure has to be used as the one applied for an end-to-\n   end RESERVE message.\
    \  In particular, it is forwarded using the GIST\n   forwarding procedure to bypass\
    \ the Interior stateless or reduced-\n   state QNE nodes.\n"
- title: 4.6.1.1.2.  Operation in the Interior Nodes
  contents:
  - "4.6.1.1.2.  Operation in the Interior Nodes\n   Each QNE Interior node MUST use\
    \ the QoS-NSLP and RMD-QOSM parameters\n   of the intra-domain RESERVE (RMD-QSPEC)\
    \ message as follows (see QoS-\n   NSLP-RMF API described in [RFC5974]):\n   *\
    \  the values of the <RSN>, <RII>, <PACKET-CLASSIFIER>, <REFRESH-\n      PERIOD>,\
    \ objects MUST NOT be changed.\n      The Interior node is informed by the <PACKET-CLASSIFIER>\
    \ object\n      that the packet classification SHOULD be done on the <DSCP> value.\n\
    \      The flag that has to be set in this case is the <T> flag (traffic\n   \
    \   class).  The value of the <DSCP> value MUST be obtained via the\n      MRI\
    \ parameters that the QoS-NSLP receives from GIST.  A QNE\n      Interior MUST\
    \ be able to associate the value carried by the RMD-\n      QSPEC <PHB Class>\
    \ parameter and the <DSCP> value obtained via\n      GIST.  This is REQUIRED,\
    \ because there are situations in which the\n      <PHB Class> parameter is not\
    \ carrying a <DSCP> value but a PHB ID\n      code, see Section 4.1.1.\n   * \
    \ the flag <REPLACE> MUST be set to FALSE = 0;\n   *  when the RMD reservation-based\
    \ methods, described in Section 4.3.1\n      and 4.3.3, are used, the <Peak Data\
    \ Rate-1 (p)> value of the local\n      RMD-QSPEC <TMOD-1> parameter is used by\
    \ the QNE Interior node for\n      admission control.  Furthermore, if the <Admission\
    \ Priority>\n      parameter is carried by the RMD-QOSM <QoS Desired> object,\
    \ then\n      this parameter is processed as described in the following bullets.\n\
    \   *  in the case of the RMD reservation-based procedure, and if these\n    \
    \  resources are admitted (see Sections 4.3.1 and 4.3.3), they are\n      added\
    \ to the currently reserved resources.  Furthermore, the value\n      of the <Admitted\
    \ Hops> parameter in the PHR container has to be\n      increased by one.\n  \
    \ *  If the bandwidth allocated for the PHB_high_priority traffic is\n      fully\
    \ utilized, and a high priority request arrives, other\n      policies on allocating\
    \ bandwidth can be used, which are beyond the\n      scope of this document.\n\
    \   *  If the RMD domain supports preemption during the admission control\n  \
    \    process, then the QNE Interior node can support the building\n      blocks\
    \ specified in the [RFC5974] and during the admission control\n      process use\
    \ the preemption handling algorithm specified in\n      Appendix A.7.\n   *  in\
    \ the case of the RMD measurement-based method (see Section\n      4.3.2), and\
    \ if the requested into the <Peak Data Rate-1 (p)> value\n      of the local RMD-QSPEC\
    \ <TMOD-1> parameter is admitted, using a\n      measurement-based admission control\
    \ (MBAC) algorithm, then the\n      number of this resource will be used to update\
    \ the MBAC algorithm\n      according to the operation described in Section 4.3.2.\n"
- title: 4.6.1.1.3.  Operation in the Egress Node
  contents:
  - "4.6.1.1.3.  Operation in the Egress Node\n   When the end-to-end RESERVE message\
    \ is received by the egress node,\n   it is only forwarded further, towards QNR,\
    \ if the processing of the\n   intra-domain RESERVE(RMD-QSPEC) message was successful\
    \ at all nodes\n   in the RMD domain.  In this case, the QNE Egress MUST stop\
    \ the\n   marking process that was used to bypass the QNE Interior nodes by\n\
    \   reassigning the QoS-NSLP default NSLPID value to the end-to-end\n   RESERVE\
    \ message (see Section 4.4).  Furthermore, the carried <BOUND-\n   SESSION-ID>\
    \ object associated with the intra-domain session MUST be\n   removed after processing.\
    \  Note that the received end-to-end RESERVE\n   was tunneled within the RMD domain.\
    \  Therefore, the tunneled initial\n   QSPEC carried by the end-to-end RESERVE\
    \ message has to be\n   processed/set according to the [RFC5975] specification.\n\
    \   If a rerouting takes place, then the stateful QNE Egress is following\n  \
    \ the procedures specified in [RFC5974].\n   At this point, the intra-domain and\
    \ end-to-end operational states\n   MUST be initiated or modified according to\
    \ the REQUIRED binding\n   procedures.\n   The way in which the BOUND-SESSION-IDs\
    \ are initiated and maintained\n   in the intra-domain and end-to-end QoS-NSLP\
    \ operational states is\n   described in Sections 4.3.1 and 4.3.2.\n   If the\
    \ processing of the intra-domain RESERVE(RMD-QSPEC) was not\n   successful at\
    \ all nodes in the RMD domain, then the inter-domain\n   (end-to-end) reservation\
    \ is considered to have failed.\n   Furthermore, if the initial QSPEC object used\
    \ an object combination\n   of type 1 or 2 where the <QoS Available> is populated,\
    \ and the intra-\n   domain RESERVE(RMD-QSPEC) was not successful at all nodes\
    \ in the RMD\n   domain MUST be considered that the <QoS Available> is not satisfied\n\
    \   and that the inter-domain (end-to-end) reservation is considered to\n   have\
    \ failed.\n   Furthermore, note that when the QNE Egress uses per-flow intra-domain\n\
    \   QoS-NSLP operational states (see Sections 4.3.2 and 4.3.3), the QNE\n   Egress\
    \ SHOULD support the message binding procedure described in\n   [RFC5974], which\
    \ can be used to synchronize the arrival of the end-\n   to-end RESERVE and the\
    \ intra-domain RESERVE (RMD-QSPEC) messages, see\n   Section 5.7, and QoS-NSLP-RMF\
    \ API described in [RFC5974].  Note that\n   the intra-domain RESERVE message\
    \ carries the <MSG-ID> object and its\n   bound end-to-end RESERVE message carries\
    \ the <BOUND-MSG-ID> object.\n   Both these objects carry the <Message_Binding_Type>\
    \ flag set to the\n   value of \"1\".  If these two messages do not arrive during\
    \ the time\n   defined by the MsgIDWait timer, then the reservation is considered\
    \ to\n   have failed.  Note that the timer has to be preconfigured and it has\n\
    \   to have the same value in the RMD domain.  In this case, an end-to-\n   end\
    \ RESPONSE message, see QoS-NSLP-RMF API described in [RFC5974], is\n   sent towards\
    \ the QNE Ingress with the following <INFO-SPEC> values:\n   Error class: Transient\
    \ Failure\n   Error code: Mismatch synchronization between end-to-end RESERVE\n\
    \   and intra-domain RESERVE\n   When the intra-domain RESERVE (RMD-QSPEC) is\
    \ received by the QNE\n   Egress node of the session associated with the intra-domain\n\
    \   RESERVE(RMD-QSPEC) (the PHB session) with the session included in its\n  \
    \ <BOUND-SESSION-ID> object MUST be bound according to the\n   specification given\
    \ in [RFC5974].  The SESSION-ID included in the\n   BOUND-SESSION-ID parameter\
    \ stored in the intra-domain QoS-NSLP\n   operational state object is the SESSION-ID\
    \ of the session associated\n   with the end-to-end RESERVE message(s).  Note\
    \ that if the QNE Edge\n   nodes maintain per-flow intra-domain QoS-NSLP operational\
    \ states,\n   then the value of Binding_Code = (Tunnel and end-to-end sessions)\
    \ is\n   used.  If the QNE Edge nodes maintain per-aggregated QoS-NSLP intra-\n\
    \   domain reservation states, then the value of Binding_Code =\n   (Aggregated\
    \ sessions), see Sections 4.3.1 and 4.3.2.\n   If the RMD domain supports preemption\
    \ during the admission control\n   process, then the QNE Egress node can support\
    \ the building blocks\n   specified in the [RFC5974] and during the admission\
    \ control process\n   use the example preemption handling algorithm described\
    \ in Appendix\n   A.7.\n   The end-to-end RESERVE message is generated/forwarded\
    \ further\n   upstream according to the [RFC5974] and [RFC5975] specifications.\n\
    \   Furthermore, the <B> (BREAK) QoS-NSLP flag in the end-to-end RESERVE\n   message\
    \ MUST NOT be set, see the QoS-NSLP-RMF API described in QoS-\n   NSLP.\n"
- title: QNE(Ingress)      QNE(Interior)         QNE(Interior)     QNE(Egress)
  contents:
  - 'QNE(Ingress)      QNE(Interior)         QNE(Interior)     QNE(Egress)

    '
- title: NTLP stateful    NTLP stateless        NTLP stateless    NTLP stateful
  contents:
  - "NTLP stateful    NTLP stateless        NTLP stateless    NTLP stateful\n    |\
    \                    |                   |                    |\n"
- title: RESERVE                  |                   |                    |
  contents:
  - 'RESERVE                  |                   |                    |

    '
- title: '--->|                    |                   |     RESERVE        |'
  contents:
  - "--->|                    |                   |     RESERVE        |\n    |------------------------------------------------------------>|\n\
    \    |RESERVE(RMD-QSPEC)  |                   |                    |\n    |------------------->|\
    \                   |                    |\n    |                    |RESERVE(RMD-QSPEC)\
    \ |                    |\n    |                    |------------------>|     \
    \               |\n    |                    |                   | RESERVE(RMD-QSPEC)\
    \ |\n    |                    |                   |------------------->|\n   \
    \ |                    |RESPONSE(RMD-QSPEC)|                    |\n    |<------------------------------------------------------------|\n\
    \    |                    |                   |                RESERVE\n    |\
    \                    |                   |                    |-->\n    |    \
    \                |                   |                RESPONSE\n    |        \
    \            |                   |                    |<--\n    |            \
    \        |RESPONSE           |                    |\n    |<------------------------------------------------------------|\n"
- title: RESPONSE                 |                   |                    |
  contents:
  - 'RESPONSE                 |                   |                    |

    '
- title: <---|                    |                   |                    |
  contents:
  - "<---|                    |                   |                    |\n  Figure\
    \ 8: Basic operation of successful reservation procedure\n            used by\
    \ the RMD-QOSM\n   The QNE Egress MUST generate an intra-domain RESPONSE (RMD-Qspec)\n\
    \   message.  The intra-domain RESPONSE (RMD-QSPEC) message MUST be sent\n   to\
    \ the QNE Ingress node, i.e., the previous stateful hop by using the\n   procedures\
    \ described in Sections 4.4 and 4.5.\n   The values of the RMD-QSPEC that are\
    \ carried by the intra-domain\n   RESPONSE message MUST be used and/or set in\
    \ the following way (see\n   the QoS-NSLP-RMF API described in [RFC5974]):\n \
    \  *  the <RII> object carried by the intra-domain RESERVE message, see\n    \
    \  Section 4.6.1.1.1, has to be copied and carried by the intra-\n      domain\
    \ RESPONSE message.\n   *  the value of the <Parameter ID> field of the PDR container\
    \ MUST be\n      set to \"23\" (i.e., PDR_Reservation_Report);\n   *  the value\
    \ of the <M> field of the PDR container MUST be equal to\n      the value of the\
    \ <M> parameter of the PHR container that was\n      carried by its associated\
    \ intra-domain RESERVE(RMD-QSPEC) message.\n      This is REQUIRED since the value\
    \ of the <M> parameter is used to\n      indicate the status if the RMD reservation\
    \ request to the Ingress\n      Edge.\n   If the binding between the intra-domain\
    \ session and the end-to-end\n   session uses a Binding_Code that is (Aggregated\
    \ sessions), and there\n   is no aggregated QoS-NSLP operational state associated\
    \ with the\n   intra-domain session available, then the RMD modification of\n\
    \   aggregated reservation procedure described in Section 4.6.1.4 can be\n   used.\n\
    \   If the QNE Egress receives an end-to-end RESPONSE message, it is\n   processed\
    \ and forwarded towards the QNE Ingress.  In particular, the\n   non-default values\
    \ of the objects contained in the end-to-end\n   RESPONSE message MUST be used\
    \ and/or set by the QNE Egress as follows\n   (see the QoS-NSLP-RMF API described\
    \ in [RFC5974]):\n   *  the values of the <RII>, <RSN>, <INFO-SPEC>, [<QSPEC>]\
    \ objects are\n      set according to [RFC5974] and/or [RFC5975].  The <INFO-SPEC>\n\
    \      object SHOULD be set by the QoS-NSLP functionality.  In the case\n    \
    \  of successful reservation, the <INFO-SPEC> object SHOULD have the\n      following\
    \ values:\n      Error severity class: Success Error code value: Reservation\n\
    \      successful\n   *  furthermore, an initial QSPEC object MUST be included\
    \ in the end-\n      to-end RESPONSE message.  The parameters included in the\
    \ QSPEC\n      <QoS Reserved> object are copied from the original <QoS Desired>\n\
    \      values.\n   The end-to-end RESPONSE message is delivered as normal, i.e.,\
    \ is\n   addressed and sent to its upstream QoS-NSLP neighbor, i.e., the QNE\n\
    \   Ingress node.\n   Note that if a QNE Egress receives an end-to-end QUERY that\
    \ was\n   bypassed through the RMD domain, it MUST stop the marking process\n\
    \   that was used to bypass the QNE Interior nodes.  This can be done by\n   reassigning\
    \ the QoS-NSLP default NSLPID value to the end-to-end QUERY\n   message; see Section\
    \ 4.4.\n"
- title: 4.6.1.2.  Unsuccessful Reservation
  contents:
  - "4.6.1.2.  Unsuccessful Reservation\n   This subsection describes the operation\
    \ where a request for\n   reservation cannot be satisfied by the RMD-QOSM.\n \
    \  The QNE Ingress, the QNE Interior, and QNE Egress nodes process and\n   forward\
    \ the end-to-end RESERVE message and the intra-domain\n   RESERVE(RMD-QSPEC) message\
    \ in a similar way, as specified in Section\n   4.6.1.1.  The main difference\
    \ between the unsuccessful operation and\n   successful operation is that one\
    \ of the QNE nodes does not admit the\n   request, e.g., due to lack of resources.\
    \  This also means that the\n   QNE Edge node MUST NOT forward the end-to-end\
    \ RESERVE message towards\n   the QNR node.\n   Note that the described functionality\
    \ applies to the RMD reservation-\n   based methods (see Sections 4.3.1 and 4.3.2)\
    \ and to the NSIS\n   measurement-based admission control method (see Section\
    \ 4.3.2).\n   The QNE Edge nodes maintain either per-flow QoS-NSLP reservation\n\
    \   states or aggregated QoS-NSLP reservation states.  When the QNE Edges\n  \
    \ maintain aggregated QoS-NSLP reservation states, the RMD-QOSM\n   functionality\
    \ MAY accomplish an RMD modification procedure (see\n   Section 4.6.1.4), instead\
    \ of the reservation initiation procedure\n   that is described in this subsection.\n"
- title: 4.6.1.2.1.  Operation in the Ingress Nodes
  contents:
  - "4.6.1.2.1.  Operation in the Ingress Nodes\n   When an end-to-end RESERVE message\
    \ arrives at the QNE Ingress and if\n   (1) the \"Maximum Packet Size-1 (MPS)\"\
    \ included in the end-to-end QoS\n   Model <TMOD-1> is larger than this smallest\
    \ MTU value within the RMD\n   domain or (2) there are no resources available,\
    \ the QNE Ingress MUST\n   reject this end-to-end RESERVE message and send an\
    \ end-to-end\n   RESPONSE message back to the sender, as described in the QoS-NSLP\n\
    \   specification, see [RFC5974] and [RFC5975].\n   When an end-to-end RESPONSE\
    \ message is received by an Ingress node\n   (see Section 4.6.1.2.3), the values\
    \ of the <RII>, <RSN>, <INFO-SPEC>,\n   and [<QSPEC>] objects are processed according\
    \ to the QoS-NSLP\n   procedures.\n   If the end-to-end RESPONSE message has to\
    \ be forwarded upstream to a\n   node outside the RMD-QOSM-aware domain, then\
    \ the values of the\n   objects contained in this message (i.e., <RII<, <RSN>,\
    \ <INFO-SPEC>,\n   [<QSPEC>]) MUST be set by the QoS-NSLP protocol functions of\
    \ the QNE.\n   When an intra-domain RESPONSE message is received by the QNE Ingress\n\
    \   node, which was sent by a QNE Egress (see Section 4.6.1.2.3), it uses\n  \
    \ the QoS-NSLP procedures to match it to the intra-domain RESERVE\n   message\
    \ that was previously sent.  After this phase, the RMD-QSPEC\n   has to be identified\
    \ and processed.  Note that, in this case, the RMD\n   Resource Management Function\
    \ (RMF) is notified that the reservation\n   has been unsuccessful, by reading\
    \ the <M> parameter of the PDR\n   container.  Note that when the QNE Edges maintain\
    \ a per-flow QoS-NSLP\n   reservation state, the RMD-QOSM functionality, has to\
    \ start an RMD\n   release procedure (see Section 4.6.1.5).  When the QNE Edges\
    \ maintain\n   aggregated QoS-NSLP reservation states, the RMD-QOSM functionality\n\
    \   MAY start an RMD modification procedure (see Section 4.6.1.4).\n"
- title: 4.6.1.2.2.  Operation in the Interior Nodes
  contents:
  - "4.6.1.2.2.  Operation in the Interior Nodes\n   In the case of the RMD reservation-based\
    \ scenario, and if the intra-\n   domain reservation request is not admitted by\
    \ the QNE Interior node,\n   then the <Hop_U> and <M> parameters of the PHR container\
    \ MUST be set\n   to \"1\".  The <Admitted Hops> counter MUST NOT be increased.\n\
    \   Moreover, the value of the <Max Admitted Hops> counter MUST be set\n   equal\
    \ to the <Admitted Hops> value.\n   Furthermore, the <E> flag associated with\
    \ the QSPEC <QoS Desired>\n   object and the <E> flag associated with the local\
    \ RMD-QSPEC <TMOD-1>\n   parameter SHOULD be set.  In the case of the RMD measurement-based\n\
    \   scenario, the <M> parameter of the PHR container MUST be set to \"1\".\n \
    \  Furthermore, the <E> flag associated with the QSPEC <QoS Desired>\n   object\
    \ and the <E> flag associated with the local RMD-QSPEC <TMOD-1>\n   parameter\
    \ SHOULD be set.  Note that the <M> flag seems to be set in a\n   similar way\
    \ to the <E> flag used by the local RMD-QSPEC <TMOD-1>\n   parameter.  However,\
    \ the ways in which the two flags are processed by\n   a QNE are different.\n\
    \   In general, if a QNE Interior node receives an RMD-QSPEC <TMOD-1>\n   parameter\
    \ with the <E> flag set and a PHR container type\n   \"PHR_Resource_Request\"\
    , with the <M> parameter set to \"1\", then this\n   \"PHR Container\" and the\
    \ RMD-QOSM <QoS Desired> object) MUST NOT be\n   processed.  Furthermore, when\
    \ the <K> parameter that is included in\n   the \"PHR Container\" and carried\
    \ by a RESERVE message is set to \"1\",\n   then this \"PHR Container\" and the\
    \ RMD-QOSM <QoS Desired> object) MUST\n   NOT be processed.\n"
- title: 4.6.1.2.3.  Operation in the Egress Nodes
  contents:
  - "4.6.1.2.3.  Operation in the Egress Nodes\n   In the RMD reservation-based (Section\
    \ 4.3.3) and RMD NSIS\n   measurement-based scenarios (Section 4.3.2), when the\
    \ <M> marked\n   intra-domain RESERVE(RMD-QSPEC) is received by the QNE Egress\
    \ node\n   (see Figure 9), the session associated with the intra-domain\n   RESERVE(RMD-QSPEC)\
    \ (the PHB session) and the end-to-end session MUST\n   be bound.\n   Moreover,\
    \ if the initial QSPEC object (used by the end-to-end QoS\n   Model) used an object\
    \ combination of type 1 or 2 where the <QoS\n   Available> is populated, and the\
    \ intra-domain RESERVE(RMD-QSPEC) was\n   not successful at all nodes in the RMD\
    \ domain, i.e., the intra-domain\n   RESERVE(RMD-QSPEC) message is marked, it\
    \ MUST be considered that the\n   <QoS Available> is not satisfied and that the\
    \ inter-domain (end-to-\n   end) reservation is considered as to have failed.\n\
    \   When the QNE Egress uses per-flow intra-domain QoS-NSLP operational\n   states\
    \ (see Sections 4.3.2 and 4.3.3), then the QNE Egress node MUST\n   generate an\
    \ end-to-end RESPONSE message that has to be sent to its\n   previous stateful\
    \ QoS-NSLP hop (see the QoS-NSLP-RMF API described in\n   [RFC5974]).\n   *  the\
    \ values of the <RII>, <RSN> and <INFO-SPEC> objects are set by\n      the standard\
    \ QoS-NSLP protocol functions.  In the case of an\n      unsuccessful reservation,\
    \ the <INFO-SPEC> object SHOULD have the\n      following values:\n      Error\
    \ severity class: Transient Failure\n      Error code value: Reservation failure\n\
    \   The QSPEC that was carried by the end-to-end RESERVE message that\n   belongs\
    \ to the same session as this end-to-end RESPONSE message is\n   included in this\
    \ message.\n   In particular, the parameters included in the QSPEC <QoS Reserved>\n\
    \   object of the end-to-end RESPONSE message are copied from the initial\n  \
    \ <QoS Desired> values included in its associated end-to-end RESERVE\n   message.\
    \  The <E> flag associated with the QSPEC <QoS Reserved>\n   object and the <E>\
    \ flag associated with the <TMOD-1> parameter\n   included in the end-to-end RESPONSE\
    \ are set.\n   In addition to the above, similar to the successful operation,\
    \ see\n   Section 4.6.1.1.3, the QNE Egress MUST generate an intra-domain\n  \
    \ RESPONSE message that has to be sent to its previous stateful QoS-\n   NSLP\
    \ hop.\n   The values of the <RII>, <RSN> and <INFO-SPEC> objects are set by the\n\
    \   standard QoS-NSLP protocol functions.  In the case of an unsuccessful\n  \
    \ reservation, the <INFO-SPEC> object SHOULD have the following values\n   (see\
    \ the QoS-NSLP-RMF API described in [RFC5974]):\n   Error severity class: Transient\
    \ Failure\n   Error code value: Reservation failure\n"
- title: QNE(Ingress)     QNE(Interior)        QNE(Interior)       QNE(Egress)
  contents:
  - 'QNE(Ingress)     QNE(Interior)        QNE(Interior)       QNE(Egress)

    '
- title: NTLP stateful    NTLP stateless        NTLP stateless    NTLP stateful
  contents:
  - "NTLP stateful    NTLP stateless        NTLP stateless    NTLP stateful\n    |\
    \                    |                   |                    |\n"
- title: RESERVE                  |                   |                    |
  contents:
  - 'RESERVE                  |                   |                    |

    '
- title: '--->|                    |                   |     RESERVE        |'
  contents:
  - "--->|                    |                   |     RESERVE        |\n    |------------------------------------------------------------>|\n\
    \    |RESERVE(RMD-QSPEC:M=0)                  |                    |\n    |------------------->|\
    \                   |                    |\n    |                    |RESERVE(RMD-QSPEC:M=1)\
    \                  |\n    |                    |------------------>|         \
    \           |\n    |                    |                   | RESERVE(RMD-QSPEC:M=1)\n\
    \    |                    |                   |------------------->|\n    |  \
    \                  |RESPONSE(RMD-QOSM) |                    |\n    |<------------------------------------------------------------|\n\
    \    |                    |RESPONSE           |                    |\n    |<------------------------------------------------------------|\n"
- title: RESPONSE                 |                   |                    |
  contents:
  - 'RESPONSE                 |                   |                    |

    '
- title: <---|                    |                   |                    |
  contents:
  - '<---|                    |                   |                    |

    '
- title: 'RESERVE(RMD-QSPEC: Tear=1, M=1, <Admitted Hops>=<Max Admitted Hops>'
  contents:
  - "RESERVE(RMD-QSPEC: Tear=1, M=1, <Admitted Hops>=<Max Admitted Hops>\n    |------------------->|\
    \                   |                    |\n                         |RESERVE(RMD-QSPEC:\
    \ Tear=1, M=1, K=1)    |\n    |                    |------------------>|     \
    \               |\n                         |    RESERVE(RMD-QSPEC: Tear=1, M=1,\
    \ K=1)|\n    |                    |                   |------------------->|\n\
    \     Figure 9: Basic operation during unsuccessful reservation\n            \
    \   initiation used by the RMD-QOSM\n   The values of the RMD-QSPEC MUST be used\
    \ and/or set in the following\n   way (see the QoS-NSLP-RMF API described in [RFC5974]):\n\
    \   *  the value of the <PDR Control Type> of the PDR container MUST be\n    \
    \  set to \"23\" (PDR_Reservation_Report);\n   *  the value of the <Max Admitted\
    \ Hops> parameter of the PHR\n      container included in the received <M> marked\
    \ intra-domain RESERVE\n      (RMD-QSPEC) MUST be included in the <Max Admitted\
    \ Hops> parameter\n      of the PDR container;\n   *  the value of the <M> parameter\
    \ of the PDR container MUST be \"1\".\n"
- title: 4.6.1.3.  RMD Refresh Reservation
  contents:
  - "4.6.1.3.  RMD Refresh Reservation\n   In the case of the RMD measurement-based\
    \ method, see Section 4.3.2,\n   QoS-NSLP reservation states in the RMD domain\
    \ are not typically\n   maintained, therefore, this method typically does not\
    \ use an intra-\n   domain refresh procedure.\n   However, there are measurement-based\
    \ optimization schemes, see\n   [GrTs03], that MAY use the refresh procedures\
    \ described in Sections\n   4.6.1.3.1 and 4.6.1.3.3.  However, this measurement-based\n\
    \   optimization scheme can only be applied in the RMD domain if the QNE\n   Edges\
    \ are configured to perform intra-domain refresh procedures and\n   if all the\
    \ QNE Interior nodes are configured to perform the\n   measurement-based optimization\
    \ schemes.\n   In the description given in this subsection, it is assumed that\
    \ the\n   RMD measurement-based scheme does not use the refresh procedures.\n\
    \   When the QNE Edges maintain aggregated or per-flow QoS-NSLP\n   operational\
    \ and reservation states (see Sections 4.3.1 and 4.3.3),\n   then the refresh\
    \ procedures are very similar.  If the RESERVE\n   messages arrive within the\
    \ soft state timeout period, the\n   corresponding number of resource units are\
    \ not removed.  However, the\n   transmission of the intra-domain and end-to-end\
    \ (refresh) RESERVE\n   message are not necessarily synchronized.  Furthermore,\
    \ the\n   generation of the end-to-end RESERVE message, by the QNE Edges,\n  \
    \ depends on the locally maintained refreshed interval (see [RFC5974]).\n"
- title: 4.6.1.3.1.  Operation in the Ingress Node
  contents:
  - "4.6.1.3.1.  Operation in the Ingress Node\n   The Ingress node MUST be able to\
    \ generate an intra-domain (refresh)\n   RESERVE(RMD-QSPEC) at any time defined\
    \ by the refresh period/timer.\n   Before generating this message, the RMD QoS\
    \ signaling model\n   functionality is using the RMD traffic class (PHR) resource\
    \ units for\n   refreshing the RMD traffic class state.\n   Note that the RMD\
    \ traffic class refresh periods MUST be equal in all\n   QNE Edge and QNE Interior\
    \ nodes and SHOULD be smaller (default: more\n   than two times smaller) than\
    \ the refresh period at the QNE Ingress\n   node used by the end-to-end RESERVE\
    \ message.  The intra-domain\n   RESERVE (RMD-QSPEC) message MUST include an RMD-QOSM\
    \ <QoS Desired>\n   and a PHR container (i.e., PHR_Refresh_Update).\n   An example\
    \ of this refresh operation can be seen in Figure 10.\n"
- title: QNE(Ingress)     QNE(Interior)         QNE(Interior)     QNE(Egress)
  contents:
  - 'QNE(Ingress)     QNE(Interior)         QNE(Interior)     QNE(Egress)

    '
- title: NTLP stateful    NTLP stateless        NTLP stateless    NTLP stateful
  contents:
  - "NTLP stateful    NTLP stateless        NTLP stateless    NTLP stateful\n    |\
    \                    |                   |                    |\n    |RESERVE(RMD-QSPEC)\
    \  |                   |                    |\n    |------------------->|    \
    \               |                    |\n    |                    |RESERVE(RMD-QSPEC)\
    \ |                    |\n    |                    |------------------>|     \
    \               |\n    |                    |                   | RESERVE(RMD-QSPEC)\
    \ |\n    |                    |                   |------------------->|\n   \
    \ |                    |                   |                    |\n    |     \
    \               |RESPONSE(RMD-QSPEC)|                    |\n    |<------------------------------------------------------------|\n\
    \    |                    |                   |                    |\n   Figure\
    \ 10: Basic operation of RMD-specific refresh procedure\n   Most of the non-default\
    \ values of the objects contained in this\n   message MUST be used and set by\
    \ the QNE Ingress in the same way as\n   described in Section 4.6.1.1.  The following\
    \ objects are used and/or\n   set differently:\n   * the PHR resource units MUST\
    \ be included in the <Peak Data Rate-1\n      (p)> field of the local RMD-QSPEC\
    \ <TMOD-1> parameter.  The <Peak\n      Data Rate-1 (p)> field value of the local\
    \ RMD-QSPEC <TMOD-1>\n      parameter depends on how the different inter-domain\
    \ (end-to-end)\n      flows are aggregated by the QNE Ingress node (e.g., the\
    \ sum of all\n      the PHR-requested resources of the aggregated flows); see\
    \ Section\n      4.3.1.  If no QoS-NSLP aggregation is accomplished by the QNE\n\
    \      Ingress node, the <Peak Data Rate-1 (p)> value of the local RMD-\n    \
    \  QSPEC <TMOD-1> parameter SHOULD be equal to the <Peak Data Rate-1\n      (p)>\
    \ value of the local RMD-QSPEC <TMOD-1> parameter of its\n      associated new\
    \ (initial) intra-domain RESERVE (RMD-QSPEC) message;\n      see Section 4.3.3.\n\
    \   *  the value of the Container field of the <PHR Container> MUST be\n     \
    \ set to \"19\", i.e., \"PHR_Refresh_Update\".\n   When the intra-domain RESPONSE\
    \ (RMD-QSPEC) message (see Section\n   4.6.1.3.3), is received by the QNE Ingress\
    \ node, then:\n   *  the values of the <RII>, <RSN>, <INFO-SPEC>, and [RFC5975]\
    \ objects\n      are processed by the standard QoS-NSLP protocol functions (see\n\
    \      Section 4.6.1.1);\n   *  the \"PDR Container\" has to be processed by the\
    \ RMD-QOSM\n      functionality in the QNE Ingress node.  The RMD-QOSM functionality\n\
    \      is notified by the <PDR M> parameter of the PDR container that the\n  \
    \    refresh procedure has been successful or unsuccessful.  All\n      sessions\
    \ associated with this RMD-specific refresh session MUST be\n      informed about\
    \ the success or failure of the refresh procedure.\n      (When aggregated QoS-NSLP\
    \ operational and reservation states are\n      used (see Section 4.3.1), there\
    \ will be more than one session.)\n      In the case of failure, the QNE Ingress\
    \ node has to generate (in a\n      standard QoS-NSLP way) an error end-to-end\
    \ RESPONSE message that\n      will be sent towards the QNI.\n"
- title: 4.6.1.3.2.  Operation in the Interior Node
  contents:
  - "4.6.1.3.2.  Operation in the Interior Node\n   The intra-domain RESERVE (RMD-QSPEC)\
    \ message is received and\n   processed by the QNE Interior nodes.  Any QNE Edge\
    \ or QNE Interior\n   node that receives a <PHR_Refresh_Update> field MUST identify\
    \ the\n   traffic class state (PHB) (using the <PHB Class> parameter).  Most of\n\
    \   the parameters in this refresh intra-domain RESERVE (RMD-QSPEC)\n   message\
    \ MUST be used and/or set by a QNE Interior node in the same\n   way as described\
    \ in Section 4.6.1.1.\n   The following objects are used and/or set differently:\n\
    \   *  the <Peak Data Rate-1 (p)> value of the local RMD-QSPEC <TMOD-1>\n    \
    \  parameter of the RMD-QOSM <QoS Desired> is used by the QNE\n      Interior\
    \ node for refreshing the RMD traffic class state.  These\n      resources (included\
    \ in the <Peak Data Rate-1 (p)> value of local\n      RMD-QSPEC <TMOD-1>), if\
    \ reserved, are added to the currently\n      reserved resources per PHB and therefore\
    \ they will become a part\n      of the per-traffic class (PHB) reservation state\
    \ (see Sections\n      4.3.1 and 4.3.3).  If the refresh procedure cannot be fulfilled\n\
    \      then the <M> and <S> fields carried by the PHR container MUST be\n    \
    \  set to \"1\".\n   *  furthermore, the <E> flag associated with <QoS Desired>\
    \ object and\n      the <E> flag associated with the local RMD-QSPEC <TMOD-1>\n\
    \      parameter SHOULD be set.\n   Any PHR container of type \"PHR_Refresh_Update\"\
    , and its associated\n   local RMD-QSPEC <TMOD-1>, whether or not it is marked\
    \ and independent\n   of the <E> flag value of the local RMD-QSPEC <TMOD-1> parameter,\
    \ is\n   always processed, but marked bits are not changed.\n"
- title: 4.6.1.3.3.  Operation in the Egress Node
  contents:
  - "4.6.1.3.3.  Operation in the Egress Node\n   The intra-domain RESERVE(RMD-QSPEC)\
    \ message is received and processed\n   by the QNE Egress node.  A new intra-domain\
    \ RESPONSE (RMD-QSPEC)\n   message is generated by the QNE Egress node and MUST\
    \ include a PDR\n   (type PDR_Refresh_Report).\n   The (refresh) intra-domain\
    \ RESPONSE (RMD-QSPEC) message MUST be sent\n   to the QNE Ingress node, i.e.,\
    \ the previous stateful hop.  The\n   (refresh) intra-domain RESPONSE (RMD-QSPEC)\
    \ message MUST be\n   explicitly routed to the QNE Ingress node, i.e., the previous\n\
    \   stateful hop, using the procedures described in Section 4.5.\n   *  the values\
    \ of the <RII>, <RSN>, and <INFO-SPEC> objects are set by\n      the standard\
    \ QoS-NSLP protocol functions, see [RFC5974].\n   *  the value of the <PDR Control\
    \ Type> parameter of the PDR container\n      MUST be set \"24\" (i.e., PDR_Refresh_Report).\
    \  In case of\n      successful reservation, the <INFO-SPEC> object SHOULD have\
    \ the\n      following values:\n      Error severity Class: Success\n      Error\
    \ code value: Reservation successful\n   *  In the case of unsuccessful reservation\
    \ the <INFO-SPEC> object\n      SHOULD have the following values:\n      Error\
    \ severity class: Transient Failure\n      Error code value: Reservation failure\n\
    \   The RMD-QSPEC that was carried by the intra-domain RESERVE belonging\n   to\
    \ the same session as this intra-domain RESPONSE is included in the\n   intra-domain\
    \ RESPONSE message.  The parameters included in the QSPEC\n   <QoS Reserved> object\
    \ are copied from the original <QoS Desired>\n   values.  If the reservation is\
    \ unsuccessful, then the <E> flag\n   associated with the QSPEC <QoS Reserved>\
    \ object and the <E> flag\n   associated with the local RMD-QSPEC <TMOD-1> parameter\
    \ are set.\n   Furthermore, the <M> and <S> PDR container bits are set to \"1\"\
    .\n"
- title: 4.6.1.4.  RMD Modification of Aggregated Reservations
  contents:
  - "4.6.1.4.  RMD Modification of Aggregated Reservations\n   In the case when the\
    \ QNE Edges maintain QoS-NSLP-aggregated\n   operational and reservation states\
    \ and the aggregated reservation has\n   to be modified (see Section 4.3.1) the\
    \ following procedure is\n   applied:\n   *  When the modification request requires\
    \ an increase of the reserved\n      resources, the QNE Ingress node MUST include\
    \ the corresponding\n      value into the <Peak Data Rate-1 (p)> value of the\
    \ local RMD-QSPEC\n      <TMOD-1> parameter of the RMD-QOSM <QoS Desired>, which\
    \ is sent\n      together with a \"PHR_Resource_Request\" control information.\
    \  If a\n      QNE Edge or QNE Interior node is not able to reserve the number\
    \ of\n      requested resources, the \"PHR_Resource_Request\" that is associated\n\
    \      with the local RMD-QSPEC <TMOD-1> parameter MUST be <M> marked,\n     \
    \ i.e., the <M> bit is set to the value of \"1\".  In this situation,\n      the\
    \ RMD-specific operation for unsuccessful reservation will be\n      applied (see\
    \ Section 4.6.1.2).\n   *  When the modification request requires a decrease of\
    \ the reserved\n      resources, the QNE Ingress node MUST include this value\
    \ into the\n      <Peak Data Rate-1 (p)> value of the local RMD-QSPEC <TMOD-1>\n\
    \      parameter of the RMD-QOSM <QoS Desired>.  Subsequently, an RMD\n      release\
    \ procedure SHOULD be accomplished (see Section 4.6.1.5).\n      Note that if\
    \ the complete bandwidth associated with the aggregated\n      reservation maintained\
    \ at the QNE Ingress does not have to be\n      released, then the <TEAR> flag\
    \ MUST be set to OFF.  This is\n      because the NSLP operational states associated\
    \ with the aggregated\n      reservation states at the Edge QNEs MUST NOT be turned\
    \ off.\n      However, if the complete bandwidth associated with the aggregated\n\
    \      reservation maintained at the QNE Ingress has to be released, then\n  \
    \    the <TEAR> flag MUST be set to ON.\n   It is important to emphasize that\
    \ this RMD modification scheme only\n   applies to the following two RMD-QOSM\
    \ schemes:\n   *  \"per-aggregate RMD reservation-based\" in combination with\
    \ the\n      \"severe congestion handling by the RMD-QOSM refresh\" procedure;\n\
    \   *  \"per-aggregate RMD reservation-based\" in combination with the\n     \
    \ \"severe congestion handling by proportional data packet marking\"\n      procedure.\n"
- title: 4.6.1.5.  RMD Release Procedure
  contents:
  - "4.6.1.5.  RMD Release Procedure\n   This procedure is applied to all RMD mechanisms\
    \ that maintain\n   reservation states.  If a refresh RESERVE message does not\
    \ arrive at\n   a QNE Interior node within the refresh timeout period, then the\n\
    \   bandwidth requested by this refresh RESERVE message is not updated.\n   This\
    \ means that the reserved bandwidth associated with the reduced\n   state is decreased\
    \ in the next refresh period by the amount of the\n   corresponding bandwidth\
    \ that has not been refreshed, see Section\n   4.3.3.\n   This soft state behavior\
    \ provides certain robustness for the system\n   ensuring that unused resources\
    \ are not reserved for a long time.\n   Resources can be removed by an explicit\
    \ release at any time.\n   However, in the situation that an end-to-end (tear)\
    \ RESERVE is\n   retransmitted (see Section 5.2.4 in [RFC5974]), then this message\n\
    \   MUST NOT initiate an intra-domain (tear) RESERVE message.  This is\n   because\
    \ the amount of bandwidth within the RMD domain associated with\n   the (tear)\
    \ end-to-end RESERVE has already been released, and\n   therefore, this amount\
    \ of bandwidth within the RMD domain MUST NOT\n   once again be released.\n  \
    \ When the RMD-RMF of a QNE Edge or QNE Interior node processes a\n   \"PHR_Release_Request\"\
    \ PHR container, it MUST identify the <PHB Class>\n   parameter and estimate the\
    \ time period that elapsed after the\n   previous refresh, see also Section 3\
    \ of [CsTa05].\n   This MAY be done by indicating the time lag, say \"T_Lag\"\
    , between the\n   last sent \"PHR_Refresh_Update\" and the \"PHR_Release_Request\"\
    \ control\n   information container by the QNE Ingress node, see [RMD1] and\n\
    \   [CsTa05] for more details.  The value of \"T_Lag\" is first normalized\n \
    \  to the length of the refresh period, say \"T_period\".  The ratio\n   between\
    \ the \"T_Lag\" and the length of the refresh period, \"T_period\",\n   is calculated.\
    \  This ratio is then introduced into the <Time Lag>\n   field of the \"PHR_Release_Request\"\
    .  When the above mentioned\n   procedure of indicating the \"T_Lag\" is used\
    \ and when a node (QNE\n   Egress or QNE Interior) receives the \"PHR_Release_Request\"\
    \ PHR\n   container, it MUST store the arrival time.  Then, it MUST calculate\n\
    \   the time difference, \"T_diff\", between the arrival time and the start\n\
    \   of the current refresh period, \"T_period\".  Furthermore, this node\n   MUST\
    \ derive the value of the \"T_Lag\", from the <Time Lag> parameter.\n   \"T_Lag\"\
    \ can be found by multiplying the value included in the <Time\n   Lag> parameter\
    \ with the length of the refresh period, \"T_period\".  If\n   the derived time\
    \ lag, \"T_Lag\", is smaller than the calculated time\n   difference, \"T_diff\"\
    , then this node MUST decrease the PHB\n   reservation state with the number of\
    \ resource units indicated in the\n   <Peak Data Rate-1 (p)> field of the local\
    \ RMD-QSPEC <TMOD-1>\n   parameter of the RMD-QOSM <QoS Desired> that has been\
    \ sent together\n   with the \"PHR_Release_Request\" \"PHR Container\", but not\
    \ below zero.\n   An RMD-specific release procedure can be triggered by an end-to-end\n\
    \   RESERVE with a <TEAR> flag set to ON (see Section 4.6.1.5.1), or it\n   can\
    \ be triggered by either an intra-domain RESPONSE, an end-to-end\n   RESPONSE,\n\
    \    or an end-to-end NOTIFY message that includes a marked (i.e., PDR\n   <M>\
    \ and/or PDR <S> parameters are set to ON) \"PDR_Reservation_Report\"\n   or \"\
    PDR_Congestion_Report\" and/or an <INFO-SPEC> object.\n"
- title: 4.6.1.5.1.  Triggered by a RESERVE Message
  contents:
  - "4.6.1.5.1.  Triggered by a RESERVE Message\n   This RMD-explicit release procedure\
    \ can be triggered by a tear\n   (<TEAR> flag set to ON) end-to-end RESERVE message.\
    \  When a tear\n   (<TEAR> flag set ON) end-to-end RESERVE message arrives to\
    \ the QNE\n   Ingress, the QNE Ingress node SHOULD process the message in a\n\
    \   standard QoS-NSLP way (see [RFC5974]).  In addition to this, the RMD\n   RMF\
    \ is notified, as specified in [RFC5974].\n   Like the scenario described in Section\
    \ 4.6.1.1., a bypassing\n   procedure has to be initiated by the QNE Ingress node.\
    \  The bypassing\n   procedure is performed according to the description given\
    \ in Section\n   4.4.  At the QNE Ingress, the end-to-end RESERVE message is marked,\n\
    \   i.e., modifying the QoS-NSLP default NSLPID value to another NSLPID\n   predefined\
    \ value that will be used by the GIST message that carries\n   the end-to-end\
    \ RESERVE message to bypass the QNE Interior nodes.\n   Before generating an intra-domain\
    \ tear RESERVE, the RMD-QOSM has to\n   release the requested RMD-QOSM bandwidth\
    \ from the RMD traffic class\n   state maintained at the QNE Ingress.\n   This\
    \ can be achieved by identifying the traffic class (PHB) and then\n   subtracting\
    \ the amount of RMD traffic class requested resources,\n   included in the <Peak\
    \ Data Rate-1 (p)> field of the local RMD-QSPEC\n   <TMOD-1> parameter, from the\
    \ total reserved amount of resources\n   stored in the RMD traffic class state.\
    \  The <Time Lag> is used as\n   explained in the introductory part of Section\
    \ 4.6.1.5.\n"
- title: QNE(Ingress)      QNE(Interior)        QNE(Interior)     QNE(Egress)
  contents:
  - 'QNE(Ingress)      QNE(Interior)        QNE(Interior)     QNE(Egress)

    '
- title: NTLP stateful    NTLP stateless        NTLP stateless    NTLP stateful
  contents:
  - "NTLP stateful    NTLP stateless        NTLP stateless    NTLP stateful\n    |\
    \                    |                   |                    |\n"
- title: RESERVE                  |                   |                    |
  contents:
  - 'RESERVE                  |                   |                    |

    '
- title: '--->|                    |                   |     RESERVE        |'
  contents:
  - "--->|                    |                   |     RESERVE        |\n    |------------------------------------------------------------>|\n\
    \    |RESERVE(RMD-QSPEC:Tear=1)               |                    |\n    |------------------->|\
    \                   |                    |\n    |                    |RESERVE(RMD-QSPEC:Tear=1)\
    \               |\n    |                    |------------------->|           \
    \        |\n    |                    |                 RESERVE(RMD-QSPEC:Tear=1)\n\
    \    |                    |                   |------------------->|\n    |  \
    \                  |                   |                RESERVE\n    |       \
    \             |                   |                    |-->\n  Figure 11: Explicit\
    \ release triggered by RESERVE used by the\n             RMD-QOSM\n   After that,\
    \ the REQUIRED bandwidth is released from the RMD-QOSM\n   traffic class state\
    \ at the QNE Ingress, an intra-domain RESERVE (RMD-\n   QOSM) message has to be\
    \ generated.  The intra-domain RESERVE (RMD-\n   QSPEC) message MUST include an\
    \ <RMD QoS object combination> field and\n   a PHR container, (i.e., \"PHR_Release_Request\"\
    ) and it MAY include a\n   PDR container, (i.e., PDR_Release_Request).  An example\
    \ of this\n   operation can be seen in Figure 11.\n   Most of the non-default\
    \ values of the objects contained in the tear\n   intra-domain RESERVE message\
    \ are set by the QNE Ingress node in the\n   same way as described in Section\
    \ 4.6.1.1.  The following objects are\n   set differently (see the QoS-NSLP-RMF\
    \ API described in [RFC5974]):\n   *  The <RII> object MUST NOT be included in\
    \ this message.  This is\n      because the QNE Ingress node does not need to\
    \ receive a response\n      from the QNE Egress node;\n   *  if the release procedure\
    \ is not applied for the RMD modification\n      of aggregated reservation procedure\
    \ (see Section 4.6.1.4), then\n      the <TEAR> flag MUST be set to ON;\n   *\
    \  the PHR resource units MUST be included into the <Peak Data Rate-1\n      (p)>\
    \ value of the local RMD-QSPEC <TMOD-1> parameter of the RMD-\n      QOSM <QoS\
    \ Desired>;\n   *  the value of the <Admitted Hops> parameter MUST be set to \"\
    1\";\n   *  the value of the <Time Lag> parameter of the PHR container is\n  \
    \    calculated by the RMD-QOSM functionality (see Section 4.6.1.5) the\n    \
    \  value of the <Control Type> parameter of the PHR container is set\n      to\
    \ \"18\" (i.e., PHR_Release_Request).\n   Any QNE Interior node that receives\
    \ the combination of the RMD-QOSM\n   <QoS Desired> object and the \"PHR_Release_Request\"\
    \ control\n   information container MUST identify the traffic class (PHB) and\n\
    \   release the requested resources included in the <Peak Data Rate-1\n   (p)>\
    \ value of the local RMD-QSPEC <TMOD-1> parameter.  This can be\n   achieved by\
    \ subtracting the amount of RMD traffic class requested\n   resources, included\
    \ in the <Peak Data Rate-1 (p)> field of the local\n   RMD-QSPEC <TMOD-1> parameter,\
    \ from the total reserved amount of\n   resources stored in the RMD traffic class\
    \ state.  The value of the\n   <Time Lag> parameter of the \"PHR_Release_Request\"\
    \ container is used\n   during the release procedure as explained in the introductory\
    \ part of\n   Section 4.6.1.5.\n   The intra-domain tear RESERVE (RMD-QSPEC) message\
    \ is received and\n   processed by the QNE Egress node.  The RMD-QOSM <QoS Desired>\
    \ and the\n   \"PHR RMD-QOSM control\" container (and if available the \"PDR\n\
    \   Container\") are read and processed by the RMD QoS node.\n   The value of\
    \ the <Peak Data Rate-1 (p)> field of the local RMD-QSPEC\n   <TMOD-1> parameter\
    \ of the RMD-QOSM <QoS Desired> and the value of the\n   <Time Lag> field of the\
    \ PHR container MUST be used by the RMD release\n   procedure.\n   This can be\
    \ achieved by subtracting the amount of RMD traffic class\n   requested resources,\
    \ included in the <Peak Data Rate-1 (p)> field\n   value of the local RMD-QSPEC\
    \ <TMOD-1> parameter, from the total\n   reserved amount of resources stored in\
    \ the RMD traffic class state.\n   The end-to-end RESERVE message is forwarded\
    \ by the next hop (i.e.,\n   the QNE Egress) only if the intra-domain tear RESERVE\
    \ (RMD-QSPEC)\n   message arrives at the QNE Egress node.  Furthermore, the QNE\
    \ Egress\n   MUST stop the marking process that was used to bypass the QNE\n \
    \  Interior nodes by reassigning the QoS-NSLP default NSLPID value to\n   the\
    \ end-to-end RESERVE message (see Section 4.4).\n   Note that when the QNE Edges\
    \ maintain aggregated QoS-NSLP reservation\n   states, the RMD-QOSM functionality\
    \ MAY start an RMD modification\n   procedure (see Section 4.6.1.4) that uses\
    \ the explicit release\n   procedure, described above in this subsection.  Note\
    \ that if the\n   complete bandwidth associated with the aggregated reservation\n\
    \   maintained at the QNE Ingress has to be released, then the <TEAR>\n   flag\
    \ MUST be set to ON.  Otherwise, the <TEAR> flag MUST be set to\n   OFF, see Section\
    \ 4.6.1.4.\n"
- title: 4.6.1.5.2.  Triggered by a Marked RESPONSE or NOTIFY Message
  contents:
  - "4.6.1.5.2.  Triggered by a Marked RESPONSE or NOTIFY Message\n   This RMD explicit\
    \ release procedure can be triggered by either an\n   intra-domain RESPONSE message\
    \ with a PDR container carrying among\n   others the <M> and <S> parameters with\
    \ values <M>=1 and <S>=0 (see\n   Section 4.6.1.2), an intra-domain (refresh)\
    \ RESPONSE message carrying\n   a PDR container with <M>=1 and <S>=1  (see Section\
    \ 4.6.1.6.1), or an\n   end-to-end NOTIFY message (see Section 4.6.1.6) with an\
    \ <INFO-SPEC>\n   object with the following values:\n   Error severity class:\
    \ Informational\n   Error code value: Congestion situation\n   When the aggregated\
    \ intra-domain QoS-NSLP operational states are\n   used, an end-to-end NOTIFY\
    \ message used to trigger an RMD release\n   procedure MAY contain a PDR container\
    \ that carries an <M> and an <S>\n   with values <M>=1 and <S>=1, and a bandwidth\
    \ value in the <PDR\n   Bandwidth> parameter included in a \"PDR_Refresh_Report\"\
    \ or\n   \"PDR_Congestion_Report\" container.\n   Note that in all explicit release\
    \ procedures, before generating an\n   intra-domain tear RESERVE, the RMD-QOSM\
    \ has to release the requested\n   RMD-QOSM bandwidth from the RMD traffic class\
    \ state maintained at the\n   QNE Ingress.  This can be achieved by identifying\
    \ the traffic class\n   (PHB) and then subtracting the amount of RMD traffic class\
    \ requested\n   resources, included in the <Peak Data Rate-1 (p)> field of the\
    \ local\n   RMD-QSPEC <TMOD-1> parameter, from the total reserved amount of\n\
    \   resources stored in the RMD traffic class state.\n   Figure 12 shows the situation\
    \ that the intra-domain tear RESERVE is\n   generated after being triggered by\
    \ either an intra-domain (refresh)\n   RESPONSE message that carries a PDR container\
    \ with <M>=1 and <S>=1 or\n   by an end-to-end NOTIFY message that does not carry\
    \ a PDR container,\n   but an <INFO-SPEC> object.  The error code values carried\
    \ by this\n   NOTIFY message are:\n   Error severity class: Informational\n  \
    \ Error code value: Congestion situation\n   Most of the non-default values of\
    \ the objects contained in the tear\n   intra-domain RESERVE(RMD-QSPEC) message\
    \ are set by the QNE Ingress\n   node in the same way as described in Section\
    \ 4.6.1.1.\n   The following objects MUST be used and/or set differently (see\
    \ the\n   QoS-NSLP-RMF described in [RFC5974]):\n   *  the value of the <M> parameter\
    \ of the PHR container MUST be set to\n      \"1\".\n   *  the value of the <S>\
    \ parameter of the \"PHR container\" MUST be set\n      to \"1\".\n   *  the RESERVE\
    \ message MAY include a PDR container.  Note that this\n      is needed if a bidirectional\
    \ scenario is used; see Section 4.6.2.\n"
- title: QNE(Ingress)      QNE(Interior)          QNE(Interior)     QNE(Egress)
  contents:
  - 'QNE(Ingress)      QNE(Interior)          QNE(Interior)     QNE(Egress)

    '
- title: NTLP stateful    NTLP stateless         NTLP stateless    NTLP stateful
  contents:
  - "NTLP stateful    NTLP stateless         NTLP stateless    NTLP stateful\n   \
    \ |                  |                  |                  |\n    | NOTIFY   \
    \        |                  |                  |\n    |<-------------------------------------------------------|\n\
    \    |RESERVE(RMD-QSPEC:Tear=1,M=1,S=1)    |                  |\n    | ---------------->|RESERVE(RMD-QSPEC:Tear=1,M=1,S=1)\
    \    |\n    |                  |                  |                  |\n    |\
    \                  |----------------->|                  |\n    |            \
    \      |           RESERVE(RMD-QSPEC:Tear=1,M=1,S=1)\n    |                  |\
    \                  |----------------->|\n  Figure 12: Basic operation during RMD-explicit\
    \ release procedure\n             triggered by NOTIFY used by the RMD-QOSM\n \
    \  Note that if the values of the <M> and <S> parameters included in the\n   PHR\
    \ container carried by a intra-domain tear RESERVE(RMD-QOSM) are\n   set as ((<M>=0\
    \ and <S>=1) or (<M>=0 and <S>=0) or (<M>=1 and <S>=1)),\n   then the <Max Admitted\
    \ Hops> value SHOULD NOT be compared to the\n   <Admitted Hops> value and the\
    \ value of the <K> field MUST NOT be set.\n   Any QNE Edge or QNE Interior node\
    \ that receives the intra-domain tear\n   RESERVE MUST check the <K> field included\
    \ in the PHR container.  If\n   the <K> field is \"0\", then the traffic class\
    \ state (PHB) has to be\n   identified, using the <PHB Class> parameter, and the\
    \ requested\n   resources included in the <Peak Data Rate-1 (p)> field of the\
    \ local\n   RMD-QSPEC <TMOD-1> parameter have to be released.\n   This can be\
    \ achieved by subtracting the amount of RMD traffic class\n   requested resources,\
    \ included in the <Peak Data Rate-1 (p)> field of\n   the local RMD-QSPEC <TMOD-1>\
    \ parameter, from the total reserved\n   amount of resources stored in the RMD\
    \ traffic class state.  The value\n   of the <Time Lag> parameter of the PHR field\
    \ is used during the\n   release procedure, as explained in the introductory part\
    \ of Section\n   4.6.1.5.  Afterwards, the QNE Egress node MUST terminate the\
    \ tear\n   intra-domain RESERVE(RMD-QSPEC) message.\n   The RMD-specific release\
    \ procedure that is triggered by an intra-\n   domain RESPONSE message with an\
    \ <M>=1 and <S>=0 PDR container (see\n   Section 4.6.1.2) generates an intra-domain\
    \ tear RESERVE message that\n   uses the combination of the <Max Admitted Hops>\
    \ and <Admitted_Hops>\n   fields to calculate and specify when the <K> value carried\
    \ by the\n   \"PHR Container\" can be set.  When the <K> field is set, then the\
    \ \"PHR\n   Container\" and the RMD-QOSM <QoS Desired> carried by an intra-domain\n\
    \   tear RESERVE MUST NOT be processed.\n   The RMD-specific explicit release\
    \ procedure that uses the combination\n   of <Max Admitted Hops>, <Admitted_Hops>\
    \ and <K> fields to release\n   resources/bandwidth in only a part of the RMD\
    \ domain, is denoted as\n   RMD partial release procedure.\n   This explicit release\
    \ procedure can be used, for example, during\n   unsuccessful reservation (see\
    \ Section 4.6.1.2).  When the RMD-\n   QOSM/QoS-NSLP signaling model functionality\
    \ of a QNE Ingress node\n   receives a PDR container with values <M>=1 and <S>=0,\
    \ of type\n   \"PDR_Reservation_Report\", it MUST start an RMD partial release\n\
    \   procedure.\n   In this situation, after the REQUIRED bandwidth is released\
    \ from the\n   RMD-QOSM traffic class state at the QNE Ingress, an intra-domain\n\
    \   RESERVE (RMD-QOSM) message has to be generated.  An example of this\n   operation\
    \ can be seen in Figure 13.\n   Most of the non-default values of the objects\
    \ contained in the tear\n   intra-domain RESERVE(RMD-QSPEC) message are set by\
    \ the QNE Ingress\n   node in the same way as described in Section 4.6.1.1.\n\
    \   The following objects MUST be used and/or set differently:\n   *  the value\
    \ of the <M> parameter of the PHR container MUST be set to\n      \"1\".\n   *\
    \  the RESERVE message MAY include a PDR container.\n   *  the value of the <Max\
    \ Admitted Hops> carried by the \"PHR\n      Container\" MUST be set equal to\
    \ the <Max Admitted Hops> value\n      carried by the \"PDR Container\" (with\
    \ <M>=1 and <S>=0) carried by\n      the received intra-domain RESPONSE message\
    \ that triggers the\n      release procedure.\n   Any QNE Edge or QNE Interior\
    \ node that receives the intra-domain tear\n   RESERVE has to check the value\
    \ of the <K> field in the \"PHR\n   Container\" before releasing the requested\
    \ resources.\n   If the value of the <K> field is \"1\", then all the QNEs located\n\
    \   downstream, including the QNE Egress, MUST NOT process the carried\n   \"\
    PHR Container\" and the RMD-QOSM <QoS Desired> object by the intra-\n   domain\
    \ tearing RESERVE.\n"
- title: QNE(Ingress)      QNE(Interior)         QNE(Interior)     QNE(Egress)
  contents:
  - "QNE(Ingress)      QNE(Interior)         QNE(Interior)     QNE(Egress)\n     \
    \                                Node that marked\n                          \
    \          PHR_Resource_Request\n                                       <PHR>\
    \ object\n"
- title: NTLP stateful    NTLP stateless        NTLP stateless    NTLP stateful
  contents:
  - "NTLP stateful    NTLP stateless        NTLP stateless    NTLP stateful\n    |\
    \                    |                   |                    |\n    |       \
    \             |                   |                    |\n    | RESPONSE (RMD-QSPEC:\
    \ M=1)              |                    |\n    |<------------------------------------------------------------|\n"
- title: 'RESERVE(RMD-QSPEC: Tear=1, M=1, <Admit Hops>=<Max Admitted Hops>, K=0)'
  contents:
  - "RESERVE(RMD-QSPEC: Tear=1, M=1, <Admit Hops>=<Max Admitted Hops>, K=0)\n    |------------------->|\
    \                   |                    |\n    |                    |RESERVE(RMD-QSPEC:\
    \ Tear=1, M=1, K=1)    |\n    |                    |------------------>|     \
    \               |\n    |                    |    RESERVE(RMD-QSPEC: Tear=1, M=1,\
    \ K=1)|\n    |                    |                   |------------------->|\n\
    \    |                    |                   |                    |\n  Figure\
    \ 13: Basic operation during RMD explicit release procedure\n             triggered\
    \ by RESPONSE used by the RMD-QOSM\n   If the <K> field value is \"0\", any QNE\
    \ Edge or QNE Interior node that\n   receives the intra-domain tear RESERVE can\
    \ release the resources by\n   subtracting the amount of RMD traffic class requested\
    \ resources,\n   included in the <Peak Data Rate-1 (p)> field of the local RMD-QSPEC\n\
    \   <TMOD-1> parameter, from the total reserved amount of resources\n   stored\
    \ in the RMD traffic class state.  The value of the <Time Lag>\n   parameter of\
    \ the PHR field is used during the release procedure as\n   explained in the introductory\
    \ part of Section 4.6.1.5.\n   Furthermore, the QNE MUST perform the following\
    \ procedures.\n   If the values of the <M> and <S> parameters included in the\n\
    \   \"PHR_Release_Request\" PHR container are (<M=1> and <S>=0) then the\n   <Max\
    \ Admitted Hops> value MUST be compared with the calculated\n   <Admitted Hops>\
    \ value.  Note that each time that the intra-domain\n   tear RESERVE is processed\
    \ and before being forwarded by a QNE, the\n   <Admitted Hops> value included\
    \ in the PHR container is increased by\n   one.\n   When these two values are\
    \ equal, the intra-domain RESERVE(RMD-QSPEC)\n   that is forwarded further towards\
    \ the QNE Egress MUST set the <K>\n   value of the carried \"PHR Container\" to\
    \ \"1\".\n   The reason for doing this is that the QNE node that is currently\n\
    \   processing this message was the last QNE node that successfully\n   processed\
    \ the RMD-QOSM <QoS Desired>) and PHR container of its\n   associated initial\
    \ reservation request (i.e., initial intra-domain\n   RESERVE(RMD-QSPEC) message).\
    \  Its next QNE downstream node was unable\n   to successfully process the initial\
    \ reservation request; therefore,\n   this QNE node marked the <M> and <Hop_U>\
    \ parameters of the\n   \"PHR_Resource_Request\".\n   Finally, note that the QNE\
    \ Egress node MUST terminate the intra-\n   domain RESERVE(RMD-QSPEC) message.\n\
    \   Moreover, note that the above described RMD partial release procedure\n  \
    \ applies to the situation that the QNE Edges maintain a per-flow QoS-\n   NSLP\
    \ reservation state.\n   When the QNE Edges maintain aggregated intra-domain QoS-NSLP\n\
    \   operational states and a severe congestion occurs, then the QNE\n   Ingress\
    \ MAY receive an end-to-end NOTIFY message (see Section\n   4.6.1.6) with a PDR\
    \ container that carries the <M>=0 and <S>=1 fields\n   and a bandwidth value\
    \ in the <PDR Bandwidth> parameter included in a\n   \"PDR_Congestion_Report\"\
    \ container.  Furthermore, the same end-to-end\n   NOTIFY message carries an <INFO-SPEC>\
    \ object with the following\n   values:\n   Error severity class: Informational\n\
    \   Error code value: Congestion situation\n   The end-to-end session associated\
    \ with this NOTIFY message maintains\n   the BOUND-SESSION-ID of the bound aggregated\
    \ session; see Section\n   4.3.1.  The RMD-QOSM at the QNE Ingress MUST start\
    \ an RMD\n   modification procedures (see Section 4.6.1.4) that uses the RMD\n\
    \   explicit release procedure, described above in this section.  In\n   particular,\
    \ the RMD explicit release procedure releases the bandwidth\n   value included\
    \ in the <PDR Bandwidth> parameter, within the\n   \"PDR_Congestion_Report\" container,\
    \ from the reserved bandwidth\n   associated with the aggregated intra-domain\
    \ QoS-NSLP operational\n   state.\n"
- title: 4.6.1.6.  Severe Congestion Handling
  contents:
  - "4.6.1.6.  Severe Congestion Handling\n   This section describes the operation\
    \ of the RMD-QOSM when a severe\n   congestion occurs within the Diffserv domain.\n\
    \   When a failure in a communication path, e.g., a router or a link\n   failure\
    \ occurs, the routing algorithms will adapt to failures by\n   changing the routing\
    \ decisions to reflect changes in the topology and\n   traffic volume.  As a result,\
    \ the rerouted traffic will follow a new\n   path, which MAY result in overloaded\
    \ nodes as they need to support\n   more traffic.  This MAY cause severe congestion\
    \ in the communication\n   path.  In this situation, the available resources,\
    \ are not enough to\n   meet the REQUIRED QoS for all the flows along the new\
    \ path.\n   Therefore, one or more flows SHOULD be terminated, or forwarded in\
    \ a\n   lower priority queue.\n   Interior nodes notify Edge nodes by data marking\
    \ or marking the\n   refresh messages.\n"
- title: 4.6.1.6.1.  Severe Congestion Handling by the RMD-QOSM Refresh Procedure
  contents:
  - "4.6.1.6.1.  Severe Congestion Handling by the RMD-QOSM Refresh Procedure\n  \
    \ This procedure applies to all RMD scenarios that use an RMD refresh\n   procedure.\
    \  The QoS-NSLP and RMD are able to cope with congested\n   situations using the\
    \ refresh procedure; see Section 4.6.1.3.\n   If the refresh is not successful\
    \ in an QNE Interior node, Edge nodes\n   are notified by setting <S>=1 (<M>=1)\
    \ marking the refresh messages\n   and by setting the <O> field in the \"PHR_Refresh_Update\"\
    \ container,\n   carried by the intra-domain RESERVE message.\n   Note that the\
    \ overload situation can be detected by using the example\n   given in Appendix\
    \ A.1.  In this situation, when the given\n   signaled_overload_rate parameter\
    \ given in Appendix A.1 is higher than\n   0, the value of the <Overload> field\
    \ is set to \"1\".  The calculation\n   of this is given in Appendix A.1 and denoted\
    \ as the\n   signaled_overload_rate parameter.  The flows can be terminated by\
    \ the\n   RMD release procedure described in Section 4.6.1.5.\n   The intra-domain\
    \ RESPONSE message that is sent by the QNE Egress\n   towards the QNE Ingress\
    \ will contain a PDR container with a Parameter\n   ID = 26, i.e., \"PDR_Congestion_Report\"\
    .  The values of the <M>, <S>,\n   and <O> fields of this container SHOULD be\
    \ set equal to the values of\n   the <M>, <S>, and <O> fields, respectively, carried\
    \ by the\n   \"PHR_Refresh_Update\" container.  Part of the flows, corresponding\
    \ to\n   the <O>, are terminated, or forwarded in a lower priority queue.\n  \
    \ The flows can be terminated by the RMD release procedure described in\n   Section\
    \ 4.6.1.5.\n   Furthermore, note that the above functionalities also apply to\
    \ the\n   scenario in which the QNE Edge nodes maintain either per-flow QoS-\n\
    \   NSLP reservation states or aggregated QoS-NSLP reservation states.\n   In\
    \ general, relying on the soft state refresh mechanism solves the\n   congestion\
    \ within the time frame of the refresh period.  If this\n   mechanism is not fast\
    \ enough, additional functions SHOULD be used,\n   which are described in Section\
    \ 4.6.1.6.2.\n"
- title: 4.6.1.6.2.  Severe Congestion Handling by Proportional Data Packet
  contents:
  - "4.6.1.6.2.  Severe Congestion Handling by Proportional Data Packet\n        \
    \    Marking\n   This severe congestion handling method requires the following\n\
    \   functionalities.\n"
- title: 4.6.1.6.2.1.  Operation in the Interior Nodes
  contents:
  - "4.6.1.6.2.1.  Operation in the Interior Nodes\n   The detection and marking/re-marking\
    \ functionality described in this\n   section applies to NSIS-aware and NSIS-unaware\
    \ nodes.  This means\n   however, that the \"not NSIS-aware\" nodes MUST be configured\
    \ such that\n   they can detect the congestion/severe congestion situations and\
    \ re-\n   mark packets in the same way the \"NSIS-aware\" nodes do.\n   The Interior\
    \ node detecting severe congestion re-marks data packets\n   passing the node.\
    \  For this re-marking, two additional DSCPs can be\n   allocated for each traffic\
    \ class.  One DSCP MAY be used to indicate\n   that the packet passed a congested\
    \ node.  This type of DSCP is\n   denoted in this document as an \"affected DSCP\"\
    \ and is used to\n   indicate that a packet passed through a severe congested\
    \ node.\n   The use of this DSCP type eliminates the possibility that, e.g., due\n\
    \   to flow-based ECMP-enabled (Equal Cost Multiple Paths) routing, the\n   Egress\
    \ node either does not detect packets passed a severely\n   congested node or\
    \ erroneously detects packets that actually did not\n   pass the severely congested\
    \ node.  Note that this type of DSCP MUST\n   only be used if all the nodes within\
    \ the RMD domain are configured to\n   use it.  Otherwise, this type of DSCP MUST\
    \ NOT be applied.  The other\n   DSCP MUST be used to indicate the degree of congestion\
    \ by marking the\n   bytes proportionally to the degree of congestion.  This type\
    \ of DSCP\n   is denoted in this document as \"encoded DSCP\".\n   In this document,\
    \ note that the terms \"marked packets\" or \"marked\n   bytes\" refer to the\
    \ \"encoded DSCP\".  The terms \"unmarked packets\" or\n   \"unmarked bytes\"\
    \ represent the packets or the bytes belonging to\n   these packets that their\
    \ DSCP is either the \"affected DSCP\" or the\n   original DSCP.  Furthermore,\
    \ in the algorithm described below, it is\n   considered that the router MAY drop\
    \ received packets.  The\n   counting/measuring of marked or unmarked bytes described\
    \ in this\n   section is accomplished within measurement periods.  All nodes within\n\
    \   an RMD domain use the same, fixed-measurement interval, say T\n   seconds,\
    \ which MUST be preconfigured.\n   It is RECOMMENDED that the total number of\
    \ additional (local and\n   experimental) DSCPs needed for severe congestion handling\
    \ within an\n   RMD domain SHOULD be as low as possible, and it SHOULD NOT exceed\
    \ the\n   limit of 8.  One possibility to reduce the number of used DSCPs is to\n\
    \   use only the \"encoded DSCP\" and not to use \"affected DSCP\" marking.\n\
    \   Another possible solution is, for example, to allocate one DSCP for\n   severe\
    \ congestion indication for each of the AF classes that can be\n   supported by\
    \ RMD-QOSM.\n   An example of a re-marking procedure can be found in Appendix\
    \ A.1.\n"
- title: 4.6.1.6.2.2.  Operation in the Egress Nodes
  contents:
  - "4.6.1.6.2.2.  Operation in the Egress Nodes\n   When the QNE Edges maintain a\
    \ per-flow intra-domain QoS-NSLP\n   operational state (see Sections 4.3.2 and\
    \ 4.3.3), then the following\n   procedure is followed.  The QNE Egress node applies\
    \ a predefined\n   policy to solve the severe congestion situation, by selecting\
    \ a\n   number of inter-domain (end-to-end) flows that SHOULD be terminated\n\
    \   or forwarded in a lower priority queue.\n   When the RMD domain does not use\
    \ the \"affected DSCP\" marking, the\n   Egress MUST generate an Ingress/Egress\
    \ pair aggregated state, for\n   each Ingress and for each supported PHB.  This\
    \ is because the Edges\n   MUST be able to detect in which Ingress/Egress pair\
    \ a severe\n   congestion occurs.  This is because, otherwise, the QNE Egress\
    \ will\n   not have any information on which flows or groups of flows were\n \
    \  affected by the severe congestion.\n   When the RMD domain supports the \"\
    affected DSCP\" marking, the Egress\n   is able to detect all flows that are affected\
    \ by the severe\n   congestion situation.  Therefore, when the RMD domain supports\
    \ the\n   \"affected DSCP\" marking, the Egress MAY not generate and maintain\
    \ the\n   Ingress/Egress pair aggregated reservation states.  Note that these\n\
    \   aggregated reservation states MAY not be associated with aggregated\n   intra-domain\
    \ QoS-NSLP operational states.\n   The Ingress/Egress pair aggregated reservation\
    \ state can be derived\n   by detecting which flows are using the same PHB and\
    \ are sent by the\n   same Ingress (via the per-flow end-to-end QoS-NSLP states).\n\
    \   Some flows, belonging to the same PHB traffic class might get other\n   priority\
    \ than other flows belonging to the same PHB traffic class.\n   This difference\
    \ in priority can be notified to the Egress and Ingress\n   nodes by either the\
    \ RESERVE message that carries the QSPEC associated\n   with the end-to-end QoS\
    \ Model, e.g.,, <Preemption Priority> and\n   <Defending Priority> parameter or\
    \ using a locally defined policy.\n   The priority value is kept in the reservation\
    \ states (see Section\n   4.3), which might be used during admission control and/or\
    \ severe\n   congestion handling procedures.  The terminated flows are selected\n\
    \   from the flows having the same PHB traffic class as the PHB of the\n   marked\
    \ (as \"encoded DSCP\") and \"affected DSCP\" (when applied in the\n   complete\
    \ RMD domain) packets and (when the Ingress/Egress pair\n   aggregated states\
    \ are available) that belong to the same\n   Ingress/Egress pair aggregate.\n\
    \   For flows associated with the same PHB traffic class, the priority of\n  \
    \ the flow plays a significant role.  An example of calculating the\n   number\
    \ of flows associated with each priority class that have to be\n   terminated\
    \ is explained in Appendix A.2.\n   For the flows (sessions) that have to be terminated,\
    \ the QNE Egress\n   node generates and sends an end-to-end NOTIFY message to\
    \ the QNE\n   Ingress node (its upstream stateful QoS-NSLP peer) to indicate the\n\
    \   severe congestion in the communication path.\n   The non-default values of\
    \ the objects contained in the NOTIFY message\n   MUST be set by the QNE Egress\
    \ node as follows (see QoS-NSLP-RMF API\n   described in [RFC5974]):\n   *  the\
    \ values of the <INFO-SPEC> object is set by the standard QoS-\n      NSLP protocol\
    \ functions.\n   *  the <INFO-SPEC> object MUST include information that notifies\
    \ that\n      the end-to-end flow MUST be terminated.  This information is as\n\
    \      follows:\n        Error severity class: Informational\n        Error code\
    \ value: Congestion situation\n      When the QNE Edges maintain a per-aggregate\
    \ intra-domain QoS-NSLP\n      operational state (see Section 4.3.1), the QNE\
    \ Edge has to\n      calculate, per each aggregate intra-domain QoS-NSLP operational\n\
    \      state, the total bandwidth that has to be terminated in order to\n    \
    \  solve the severe congestion.  The total bandwidth to be released\n      is\
    \ calculated in the same way as in the situation in which the QNE\n      Edges\
    \ maintain per-flow intra-domain QoS-NSLP operational states.\n      Note that\
    \ for the aggregated sessions that are affected, the QNE\n      Egress node generates\
    \ and sends one end-to-end NOTIFY message to\n      the QNE Ingress node (its\
    \ upstream stateful QoS-NSLP peer) to\n      indicate the severe congestion in\
    \ the communication path.  Note\n      that this end-to-end NOTIFY message is\
    \ associated with one of the\n      end-to-end sessions that is bound to the aggregated\
    \ intra-domain\n      QoS-NSLP operational state.\n      The non-default values\
    \ of the objects contained in the NOTIFY\n      message MUST be set by the QNE\
    \ Egress node in the same way as the\n      ones used by the end-to-end NOTIFY\
    \ message described above for the\n      situation that the QNE Egress maintains\
    \ a per-flow intra-domain\n      operational state.  In addition to this, the\
    \ end-to-end NOTIFY\n      MUST carry the RMD-QSPEC, which contains a PDR container\
    \ with a\n      Parameter ID = 26, i.e., \"PDR_Congestion_Report\".  The value\
    \ of\n      the <S> SHOULD be set.  Furthermore, the value of the <PDR\n     \
    \ Bandwidth> parameter MUST contain the bandwidth associated with\n      the aggregated\
    \ QoS-NSLP operational state, which has to be\n      released.\n      Furthermore,\
    \ the number of end-to-end sessions that have to be\n      terminated will be\
    \ calculated as in the situation that the QNE\n      Edges maintain per-flow intra-domain\
    \ QoS-NSLP operational states.\n      Similarly for each, to be terminated, ongoing\
    \ flow, the Egress\n      will notify the Ingress in the same way as in the situation\
    \ that\n      the QNE Edges maintain per-flow intra-domain QoS-NSLP operational\n\
    \      states.\n      Note that the QNE Egress SHOULD restore the original <DSCP>\
    \ values\n      of the re-marked packets; otherwise, multiple actions for the\
    \ same\n      event might occur.  However, this value MAY be left in its re-\n\
    \      marking form if there is an SLA agreement between domains that a\n    \
    \  downstream domain handles the re-marking problem.\n      An example of a detailed\
    \ severe congestion operation in the Egress\n      Nodes can be found in Appendix\
    \ A.2.\n"
- title: 4.6.1.6.2.3.  Operation in the Ingress Nodes
  contents:
  - "4.6.1.6.2.3.  Operation in the Ingress Nodes\n   Upon receiving the (end-to-end)\
    \ NOTIFY message, the QNE Ingress node\n   resolves the severe congestion by a\
    \ predefined policy, e.g., by\n   refusing new incoming flows (sessions), terminating\
    \ the affected and\n   notified flows (sessions), and blocking their packets or\
    \ shifting\n   them to an alternative RMD traffic class (PHB).\n   This operation\
    \ is depicted in Figure 14, where the QNE Ingress, for\n   each flow (session)\
    \ to be terminated, receives a NOTIFY message that\n   carries the \"Congestion\
    \ situation\" error code.\n   When the QNE Ingress node receives the end-to-end\
    \ NOTIFY message, it\n   associates this NOTIFY message with its bound intra-domain\
    \ session\n   (see Sections 4.3.2 and 4.3.3) via the BOUND-SESSION-ID information\n\
    \   included in the end-to-end per-flow QoS-NSLP state.  The QNE Ingress\n   uses\
    \ the operation described in Section 4.6.1.5.2 to terminate the\n   intra-domain\
    \ session.\n QNE(Ingress)     QNE(Interior)         QNE(Interior)     QNE(Egress)\n\
    \  user  |                  |                 |                  |\n  data  |\
    \  user data       |                 |                  |\n ------>|----------------->|\
    \     user data   | user data        |\n        |                  |---------------->S(#\
    \ marked bytes)  |\n        |                  |                 S----------------->|\n\
    \        |                  |                 S(# unmarked bytes)|\n        |\
    \                  |                 S----------------->|Term.\n        |    \
    \             NOTIFY             S                  |flow?\n        |<-----------------|-----------------S------------------|YES\n\
    \        |RESERVE(RMD-QSPEC:Tear=1,M=1,S=1)   S                  |\n        |\
    \ ---------------->|RESERVE(RMD-QSPEC:T=1,M=1,S=1)      |\n        |         \
    \         |                 S                  |\n        |                  |---------------->S\
    \                  |\n        |                  |       RESERVE(RMD-QSPEC:Tear=1,M=1,S=1)\n\
    \        |                  |                 S----------------->|\n         Figure\
    \ 14:  RMD severe congestion handling\n   Note that the above functionality applies\
    \ to the RMD reservation-\n   based (see Section 4.3.3) and to both measurement-based\
    \ admission\n   control methods (i.e., congestion notification based on probing\
    \ and\n   the NSIS measurement-based admission control; see Section 4.3.2).\n\
    \   In the case that the QNE Edges support aggregated intra-domain QoS-\n   NSLP\
    \ operational states, the following actions take place.  The QNE\n   Ingress MAY\
    \ receive an end-to-end NOTIFY message with a PDR container\n   that carries an\
    \ <S> marked and a bandwidth value in the <PDR\n   Bandwidth> parameter included\
    \ in a \"PDR_Congestion_Report\" container.\n   Furthermore, the same end-to-end\
    \ NOTIFY message carries an <INFO-\n   SPEC> object with the \"Congestion situation\"\
    \ error code.\n   When the QNE Ingress node receives this end-to-end NOTIFY message,\
    \ it\n   associates the NOTIFY message with the aggregated intra-domain QoS-\n\
    \   NSLP operational state via the BOUND-SESSION-ID information included\n   in\
    \ the end-to-end per-flow QoS-NSLP operational state, see Section\n   4.3.1.\n\
    \   The RMD-QOSM at the QNE Ingress node by using the total bandwidth\n   value\
    \ to be released included in the <PDR Bandwidth> parameter MUST\n   reduce the\
    \ bandwidth associated and reserved by the RMD aggregated\n   session.  This is\
    \ accomplished by triggering the RMD modification for\n   aggregated reservations\
    \ procedure described in Section 4.6.1.4.\n   In addition to the above, the QNE\
    \ Ingress MUST select a number of\n   inter-domain (end-to-end) flows (sessions)\
    \ that MUST be terminated.\n   This is accomplished in the same way as in the\
    \ situation that the QNE\n   Edges maintain per-flow intra-domain QoS-NSLP operational\
    \ states.\n   The terminated end-to-end sessions are selected from the end-to-end\n\
    \   sessions bound to the aggregated intra-domain QoS-NSLP operational\n   state.\
    \  Note that the end-to-end session associated with the received\n   end-to-end\
    \ NOTIFY message that notified the severe congestion MUST\n   also be selected\
    \ for termination.\n   For the flows (sessions) that have to be terminated, the\
    \ QNE Ingress\n   node generates and sends an end-to-end NOTIFY message upstream\n\
    \   towards the sender (QNI).  The values carried by this message are:\n   * \
    \ the values of the <INFO-SPEC> object set by the standard QoS-NSLP\n      protocol\
    \ functions.\n   *  the <INFO-SPEC> object MUST include information that notifies\
    \ that\n      the end-to-end flow MUST be terminated.  This information is as\n\
    \      follows:\n        Error severity class: Informational\n        Error code\
    \ value: Congestion situation\n"
- title: 4.6.1.7.  Admission Control Using Congestion Notification Based on
  contents:
  - "4.6.1.7.  Admission Control Using Congestion Notification Based on\n        \
    \  Probing\n   The congestion notification function based on probing can be used\
    \ to\n   implement a simple measurement-based admission control within a\n   Diffserv\
    \ domain.  At Interior nodes along the data path, congestion\n   notification\
    \ thresholds are set in the measurement-based admission\n   control function for\
    \ the traffic belonging to different PHBs.  These\n   Interior nodes are not NSIS-aware\
    \ nodes.\n"
- title: 4.6.1.7.1.  Operation in Ingress Nodes
  contents:
  - "4.6.1.7.1.  Operation in Ingress Nodes\n   When an end-to-end reservation request\
    \ (RESERVE) arrives at the\n   Ingress node (QNE), see Figure 15, it is processed\
    \ based on the\n   procedures defined by the end-to-end QoS Model.\n   The <DSCP>\
    \ field of the GIST datagram message that is used to\n   transport this probe\
    \ RESERVE message, SHOULD be marked with the same\n   value of DSCP as the data\
    \ path packets associated with the same\n   session.  In this way, it is ensured\
    \ that the end-to-end RESERVE\n   (probe) packet passed through the node that\
    \ it is congested.  This\n   feature is very useful when ECMP-based routing is\
    \ used to detect only\n   flows that are passing through the congested router.\n\
    \   When a (end-to-end) RESPONSE message is received by the Ingress\n   node,it\
    \ will be processed based on the procedures defined by the end-\n   to-end QoS\
    \ Model.\n"
- title: 4.6.1.7.2.  Operation in Interior nodes
  contents:
  - "4.6.1.7.2.  Operation in Interior nodes\n   These Interior nodes do not need\
    \ to be NSIS-aware nodes and they do\n   not need to process the NSIS functionality\
    \ of NSIS messages.  Note\n   that the \"not NSIS-aware\" nodes MUST be configured\
    \ such that they can\n   detect the congestion/severe congestion situations and\
    \ re-mark\n   packets in the same way the \"NSIS-aware\" nodes do.\n   Using standard\
    \ functionalities, congestion notification thresholds\n   are set for the traffic\
    \ that belongs to different PHBs (see Section\n   4.3.2).  The end-to-end RESERVE\
    \ message, see Figure 15, is used as a\n   probe packet.\n   The <DSCP> field\
    \ of all data packets and of the GIST message carrying\n   the RESERVE message\
    \ will be re-marked when the corresponding\n   \"congestion notification\" threshold\
    \ is exceeded (see Section 4.3.2).\n   Note that when the data rate is higher\
    \ than the congestion\n   notification threshold, the data packets are also re-marked.\
    \  An\n   example of the detailed operation of this procedure is given in\n  \
    \ Appendix A.2.\n"
- title: 4.6.1.7.3.  Operation in Egress Nodes
  contents:
  - "4.6.1.7.3.  Operation in Egress Nodes\n   As emphasized in Section 4.6.1.6.2.2,\
    \ the Egress node, by using the\n   per-flow end-to-end QoS-NSLP states, can derive\
    \ which flows are using\n   the same PHB and are sent by the same Ingress.\n \
    \  For each Ingress, the Egress SHOULD generate an Ingress/Egress pair\n   aggregated\
    \ (RMF) reservation state for each supported PHB.  Note that\n   this aggregated\
    \ reservation state does not require that an aggregated\n   intra-domain QoS-NSLP\
    \ operational state is needed also.\n   Appendix A.4 contains an example of how\
    \ and when a (probe) RESERVE\n   message that arrives at the Egress is admitted\
    \ or rejected.\n   If the request is rejected, then the Egress node SHOULD generate\
    \ an\n   (end-to-end) RESPONSE message to notify that the reservation is\n   unsuccessful.\
    \  In particular, it will generate an <INFO-SPEC> object\n   of:\n     Error severity\
    \ class: Transient Failure\n     Error code value: Reservation failure\n   The\
    \ QSPEC that was carried by the end-to-end RESERVE that belongs to\n   the same\
    \ session as this end-to-end RESPONSE is included in this\n   message.  The parameters\
    \ included in the QSPEC <QoS Reserved> object\n   are copied from the original\
    \ <QoS Desired> values.  The <E> flag\n   associated with the <QoS Reserved> object\
    \ and the <E> flag associated\n   with local RMD-QSPEC <TMOD-1> parameter are\
    \ also set.  This RESPONSE\n   message will be sent to the Ingress node and it\
    \ will be processed\n   based on the end-to-end QoS Model.\n   Note that the QNE\
    \ Egress SHOULD restore the original <DSCP> values of\n   the re-marked packets;\
    \ otherwise, multiple actions for the same event\n   might occur.  However, this\
    \ value MAY be left in its re-marking form\n   if there is an SLA agreement between\
    \ domains that a downstream domain\n   handles the re-marking problem.  Note that\
    \ the break <B> flag carried\n   by the end-to-end RESERVE message MUST NOT be\
    \ set.\n"
- title: QNE(Ingress)           Interior          Interior        QNE(Egress)
  contents:
  - "QNE(Ingress)           Interior          Interior        QNE(Egress)\n      \
    \              (not NSIS aware) (not NSIS aware)\n  user  |                  |\
    \                 |                  |\n  data  |  user data       |         \
    \        |                  |\n ------>|----------------->|     user data   |\
    \                  |\n        |                  |---------------->| user data\
    \        |\n        |                  |                 |----------------->|\n\
    \  user  |                  |                 |                  |\n  data  |\
    \  user data       |                 |                  |\n ------>|----------------->|\
    \     user data   | user data        |\n        |                  |---------------->S(#\
    \ marked bytes)  |\n        |                  |                 S----------------->|\n\
    \        |                  |                 S(# unmarked bytes)|\n        |\
    \                  |                 S----------------->|\n        |         \
    \         |                 S                  |\n"
- title: RESERVE |                  |                 S                  |
  contents:
  - 'RESERVE |                  |                 S                  |

    '
- title: '------->|                  |                 S                  |'
  contents:
  - "------->|                  |                 S                  |\n        |----------------------------------->S\
    \                  |\n        |                  |           RESERVE(re-marked\
    \ DSCP in GIST)\n        |                  |                 S----------------->|\n\
    \        |                  |RESPONSE(unsuccessful INFO-SPEC)    |\n        |<------------------------------------------------------|\n\
    \ RESPONSE(unsuccessful INFO-SPEC)            |                  |\n <------|\
    \                  |                 |                  |\n  Figure 15:  Using\
    \ RMD congestion notification function for\n              admission control based\
    \ on probing\n"
- title: 4.6.2.  Bidirectional Operation
  contents:
  - "4.6.2.  Bidirectional Operation\n   This section describes the basic bidirectional\
    \ operation and sequence\n   of events/triggers of the RMD-QOSM.  The following\
    \ basic operation\n   cases are distinguished:\n      * Successful and unsuccessful\
    \ reservation (Section 4.6.2.1);\n      * Refresh reservation (Section 4.6.2.2);\n\
    \      * Modification of aggregated reservation (Section 4.6.2.3);\n      * Release\
    \ procedure (Section 4.6.2.4);\n      * Severe congestion handling (Section 4.6.2.5);\n\
    \      * Admission control using congestion notification based on probing\n  \
    \     (Section 4.6.2.6).\n   It is important to emphasize that the content of\
    \ this section is used\n   for the specification of the following RMD-QOSM/QoS-NSLP\
    \ signaling\n   schemes, when basic unidirectional operation is assumed:\n   *\
    \  \"per-flow congestion notification based on probing\";\n   *  \"per-flow RMD\
    \ NSIS measurement-based admission control\",\n   *  \"per-flow RMD reservation-based\"\
    \ in combination with the \"severe\n      congestion handling by the RMD-QOSM\
    \ refresh\" procedure;\n   *  \"per-flow RMD reservation-based\" in combination\
    \ with the \"severe\n      congestion handling by proportional data packet marking\"\
    \n      procedure;\n   *  \"per-aggregate RMD reservation-based\" in combination\
    \ with the\n      \"severe congestion handling by the RMD-QOSM refresh\" procedure;\n\
    \   *  \"per-aggregate RMD reservation-based\" in combination with the\n     \
    \ \"severe congestion handling by proportional data packet marking\"\n      procedure.\n\
    \   For more details, please see Section 3.2.3.\n   In particular, the functionality\
    \ described in Sections 4.6.2.1,\n   4.6.2.2, 4.6.2.3, 4.6.2.4, and 4.6.2.5 applies\
    \ to the RMD\n   reservation-based and NSIS measurement-based admission control\n\
    \   methods.  The described functionality in Section 4.6.2.6 applies to\n   the\
    \ admission control procedure that uses the congestion notification\n   based\
    \ on probing.  The QNE Edge nodes maintain either per-flow QoS-\n   NSLP operational\
    \ and reservation states or aggregated QoS-NSLP\n   operational and reservation\
    \ states.\n   RMD-QOSM assumes that asymmetric routing MAY be applied in the RMD\n\
    \   domain.  Combined sender-receiver initiated reservation cannot be\n   efficiently\
    \ done in the RMD domain because upstream NTLP states are\n   not stored in Interior\
    \ routers.\n   Therefore, the bidirectional operation SHOULD be performed by two\n\
    \   sender-initiated reservations (sender&sender).  We assume that the\n   QNE\
    \ Edge nodes are common for both upstream and downstream\n   directions, therefore,\
    \ the two reservations/sessions can be bound at\n   the QNE Edge nodes.  Note\
    \ that if this is not the case, then the\n   bidirectional procedure could be\
    \ managed and maintained by nodes\n   located outside the RMD domain, by using\
    \ other procedures than the\n   ones defined in RMD-QOSM.\n   This (intra-domain)\
    \ bidirectional sender&sender procedure can then be\n   applied between the QNE\
    \ Edge (QNE Ingress and QNE Egress) nodes of\n   the RMD QoS signaling model.\
    \  In the situation in which a security\n   association exists between the QNE\
    \ Ingress and QNE Egress nodes (see\n   Figure 15), and the QNE Ingress node has\
    \ the REQUIRED <Peak Data\n   Rate-1 (p)> values of the local RMD-QSPEC <TMOD-1>\
    \ parameters for\n   both directions, i.e., QNE Ingress towards QNE Egress and\
    \ QNE Egress\n   towards QNE Ingress, then the QNE Ingress MAY include both <Peak\
    \ Data\n   Rate-1 (p)> values of the local RMD-QSPEC <TMOD-1> parameters (needed\n\
    \   for both directions) into the RMD-QSPEC within a RESERVE message.  In\n  \
    \ this way, the QNE Egress node is able to use the QoS parameters\n   needed for\
    \ the \"Egress towards Ingress\" direction (QoS-2).  The QNE\n   Egress is then\
    \ able to create a RESERVE with the right QoS parameters\n   included in the QSPEC,\
    \ i.e., RESERVE (QoS-2).  Both directions of the\n   flows are bound by inserting\
    \ <BOUND-SESSION-ID> objects at the QNE\n   Ingress and QNE Egress, which will\
    \ be carried by bound end-to-end\n   RESERVE messages.\n     |------ RESERVE (QoS-1,\
    \ QoS-2)----|\n     |                                 V\n     |           Interior/stateless\
    \ QNEs\n                 +---+     +---+\n        |------->|QNE|-----|QNE|------\n\
    \        |        +---+     +---+     |\n        |                           \
    \ V\n      +---+                        +---+\n      |QNE|                   \
    \     |QNE|\n      +---+                        +---+\n         ^            \
    \               |\n      |  |       +---+     +---+     V\n      |  |-------|QNE|-----|QNE|-----|\n\
    \      |          +---+     +---+\n   Ingress/                         Egress/\n\
    \   stateful  QNE                    stateful QNE\n                          \
    \           |\n   <--------- RESERVE (QoS-2) -------|\n   Figure 16: The intra-domain\
    \ bidirectional reservation scenario\n              in the RMD domain\n   Note\
    \ that it is RECOMMENDED that the QNE implementations of RMD-QOSM\n   process\
    \ the QoS-NSLP signaling messages with a higher priority than\n   data packets.\
    \  This can be accomplished as described in Section 3.3.4\n   in [RFC5974] and\
    \ the QoS-NSLP-RMF API [RFC5974].\n   A bidirectional reservation, within the\
    \ RMD domain, is indicated by\n   the PHR <B> and PDR <B> flags, which are set\
    \ in all messages.  In\n   this case, two <BOUND-SESSION-ID> objects SHOULD be\
    \ used.\n   When the QNE Edges maintain per-flow intra-domain QoS-NSLP\n   operational\
    \ states, the end-to-end RESERVE message carries two BOUND-\n   SESSION-IDs. \
    \ One BOUND-SESSION-ID carries the SESSION-ID of the\n   tunneled intra-domain\
    \ (per-flow) session that is using a Binding_Code\n   with value set to code (Tunneled\
    \ and end-to-end sessions).  Another\n   BOUND-SESSION-ID carries the SESSION-ID\
    \ of the bound bidirectional\n   end-to-end session.  The Binding_Code associated\
    \ with this BOUND-\n   SESSION-ID is set to code (Bidirectional sessions).\n \
    \  When the QNE Edges maintain aggregated intra-domain QoS-NSLP\n   operational\
    \ states, the end-to-end RESERVE message carries two BOUND-\n   SESSION-IDs. \
    \ One BOUND-SESSION-ID carries the SESSION-ID of the\n   tunneled aggregated intra-domain\
    \ session that is using a Binding_Code\n   with value set to code (Aggregated\
    \ sessions).  Another BOUND-SESSION-\n   ID carries the SESSION-ID of the bound\
    \ bidirectional end-to-end\n   session.  The Binding_Code associated with this\
    \ BOUND-SESSION-ID is\n   set to code (Bidirectional sessions).\n   The intra-domain\
    \ and end-to-end QoS-NSLP operational states are\n   initiated/modified depending\
    \ on the binding type (see Sections 4.3.1,\n   4.3.2, and 4.3.3).\n   If no security\
    \ association exists between the QNE Ingress and QNE\n   Egress nodes, the bidirectional\
    \ reservation for the sender&sender\n   scenario in the RMD domain SHOULD use\
    \ the scenario specified in\n   [RFC5974] as \"bidirectional reservation for sender&sender\
    \ scenario\".\n   This is because in this scenario, the RESERVE message sent from\
    \ the\n   QNE Ingress to QNE Egress does not have to carry the QoS parameters\n\
    \   needed for the \"Egress towards Ingress\" direction (QoS-2).\n   In the following\
    \ sections, it is considered that the QNE Edge nodes\n   are common for both upstream\
    \ and downstream directions and therefore,\n   the two reservations/sessions can\
    \ be bound at the QNE Edge nodes.\n   Furthermore, it is considered that a security\
    \ association exists\n   between the QNE Ingress and QNE Egress nodes, and the\
    \ QNE Ingress\n   node has the REQUIRED <Peak Data Rate-1 (p)> value of the local\
    \ RMD-\n   QSPEC <TMOD-1> parameters for both directions, i.e., QNE Ingress\n\
    \   towards QNE Egress and QNE Egress towards QNE Ingress.\n   According to Section\
    \ 3.2.3, it is specified that only the \"per-flow\n   RMD reservation-based\"\
    \ in combination with the \"severe congestion\n   handling by proportional data\
    \ packet marking\" scheme MUST be\n   implemented within one RMD domain.  However,\
    \ all RMD QNEs supporting\n   this specification MUST support the combination\
    \ the \"per-flow RMD\n   reservation-based\" in combination with the \"severe\
    \ congestion\n   handling by proportional data packet marking\" scheme.  If the\
    \ RMD\n   QNEs support more RMD-QOSM schemes, then the operator of that RMD\n\
    \   domain MUST preconfigure all the QNE Edge nodes within one domain\n   such\
    \ that the <SCH> field included in the \"PHR Container\" (Section\n   4.1.2) and\
    \ the \"PDR Container\" (Section 4.1.3) will always use the\n   same value, such\
    \ that within one RMD domain, only one of the below\n   described RMD-QOSM schemes\
    \ is used at a time.\n   All QNE nodes located within the RMD domain MUST read\
    \ and interpret\n   the <SCH> field included in the \"PHR Container\" before processing\
    \ all\n   the other <PHR Container> payload fields.  Moreover, all QNE Edge\n\
    \   nodes located at the boarder of the RMD domain, MUST read and\n   interpret\
    \ the <SCH> field included in the \"PDR container\" before\n   processing all\
    \ the other <PDR Container> payload fields.\n"
- title: 4.6.2.1.  Successful and Unsuccessful Reservations
  contents:
  - "4.6.2.1.  Successful and Unsuccessful Reservations\n   This section describes\
    \ the operation of the RMD-QOSM where an RMD\n   Intra-domain bidirectional reservation\
    \ operation, see Figure 16 and\n   Section 4.6.2, is either successfully or unsuccessfully\
    \ accomplished.\n   The bidirectional successful reservation is similar to a combination\n\
    \   of two unidirectional successful reservations that are accomplished\n   in\
    \ opposite directions, see Figure 17.  The main differences of the\n   bidirectional\
    \ successful reservation procedure with the combination\n   of two unidirectional\
    \ successful reservations accomplished in\n   opposite directions are as follows.\
    \  Note also that the intra-domain\n   and end-to-end QoS-NSLP operational states\
    \ generated and maintained\n   by the end-to-end RESERVE messages contain, compared\
    \ to the\n   unidirectional reservation scenario, a different BOUND-SESSION-ID\n\
    \   data structure (see Sections 4.3.1, 4.3.2, and 4.3.3).  In this\n   scenario,\
    \ the intra-domain RESERVE message sent by the QNE Ingress\n   node towards the\
    \ QNE Egress node is denoted in Figure 17 as RESERVE\n   (RMD-QSPEC): \"forward\"\
    .  The main differences between the intra-\n   domain RESERVE (RMD-QSPEC): \"\
    forward\" message used for the\n   bidirectional successful reservation procedure\
    \ and a RESERVE (RMD-\n   QSPEC) message used for the unidirectional successful\
    \ reservation are\n   as follows (see the QoS-NSLP-RMF API described in [RFC5974]):\n\
    \   *  the <RII> object MUST NOT be included in the message.  This is\n      because\
    \ no RESPONSE message is REQUIRED.\n   *  the <B> bit of the PHR container indicates\
    \ a bidirectional\n      reservation and it MUST be set to \"1\".\n   *  the PDR\
    \ container is also included in the RESERVE(RMD-QSPEC):\n      \"forward\" message.\
    \  The value of the Parameter ID is \"20\", i.e.,\n      \"PDR_Reservation_Request\"\
    .  Note that the response PDR container\n      sent by a QNE Egress to a QNE Ingress\
    \ node is not carried by an\n      end-to-end RESPONSE message, but it is carried\
    \ by an intra-domain\n      RESERVE message that is sent by the QNE Egress node\
    \ towards the\n      QNE Ingress node (denoted in Figure 16 as RESERVE(RMD-QSPEC):\n\
    \      \"reverse\").\n   *  the <B> PDR bit indicates a bidirectional reservation\
    \ and is set\n      to \"1\".\n   *  the <PDR Bandwidth> field specifies the requested\
    \ bandwidth that\n      has to be used by the QNE Egress node to initiate another\
    \ intra-\n      domain RESERVE message in the reverse direction.\n   The RESERVE(RMD-QSPEC):\
    \ \"reverse\" message is initiated by the QNE\n   Egress node at the moment that\
    \ the RESERVE(RMD-QSPEC): \"forward\"\n   message is successfully processed by\
    \ the QNE Egress node.\n   The main differences between the RESERVE(RMD-QSPEC):\
    \ \"reverse\"\n   message used for the bidirectional successful reservation procedure\n\
    \   and a RESERVE(RMD-QSPEC) message used for the unidirectional\n   successful\
    \ reservation are as follows:\n"
- title: QNE(Ingress)    QNE (int.)    QNE (int.)    QNE (int.)    QNE(Egress)
  contents:
  - 'QNE(Ingress)    QNE (int.)    QNE (int.)    QNE (int.)    QNE(Egress)

    '
- title: NTLP stateful  NTLP st.less  NTLP st.less  NTLP st.less  NTLP stateful
  contents:
  - "NTLP stateful  NTLP st.less  NTLP st.less  NTLP st.less  NTLP stateful\n    |\
    \                |               |               |              |\n    |     \
    \           |               |               |              |\n    |RESERVE(RMD-QSPEC)\
    \              |               |              |\n    |\"forward\"       |    \
    \           |               |              |\n    |                |    RESERVE(RMD-QSPEC):\
    \        |              |\n    |--------------->|    \"forward\"  |          \
    \     |              |\n    |                |------------------------------>|\
    \              |\n    |                |               |               |------------->|\n\
    \    |                |               |               |              |\n    |\
    \                |               |RESERVE(RMD-QSPEC)            |\n    |     \
    \ RESERVE(RMD-QSPEC)        | \"reverse\"     |<-------------|\n    |      \"\
    reverse\" |               |<--------------|              |\n    |<-------------------------------|\
    \               |              |\n     Figure 17: Intra-domain signaling operation\
    \ for successful\n                bidirectional reservation\n   *  the <RII> object\
    \ is not included in the message.  This is because\n      no RESPONSE message\
    \ is REQUIRED;\n   *  the value of the <Peak Data Rate-1 (p)> field of the local\
    \ RMD-\n      QSPEC <TMOD-1> parameter is set equal to the value of the <PDR\n\
    \      Bandwidth> field included in the RESERVE(RMD-QSPEC): \"forward\"\n    \
    \  message that triggered the generation of this RESERVE(RMD-QSPEC):\n      \"\
    reverse\" message;\n   *  the <B> bit of the PHR container indicates a bidirectional\n\
    \      reservation and is set to \"1\";\n   *  the PDR container is included into\
    \ the RESERVE(RMD-QSPEC):\n      \"reverse\" message.  The value of the Parameter\
    \ ID is \"23\", i.e.,\n      \"PDR_Reservation_Report\";\n   *  the <B> PDR bit\
    \ indicates a bidirectional reservation and is set\n      to \"1\".\n   Figures\
    \ 18 and 19 show the flow diagrams used in the case of an\n   unsuccessful bidirectional\
    \ reservation.  In Figure 18, the QNE that\n   is not able to support the requested\
    \ <Peak Data Rate-1 (p)> value of\n   local RMD-QSPEC <TMOD-1> is located in the\
    \ direction QNE Ingress\n   towards QNE Egress.  In Figure 19, the QNE that is\
    \ not able to\n   support the requested <Peak Data Rate-1 (p)> value of local\
    \ RMD-QSPEC\n   <TMOD-1> is located in the direction QNE Egress towards QNE Ingress.\n\
    \   The main differences between the bidirectional unsuccessful procedure\n  \
    \ shown in Figure 18 and the bidirectional successful procedure are as\n   follows:\n\
    \   *  the QNE node that is not able to reserve resources for a certain\n    \
    \  request is located in the \"forward\" path, i.e., the path from the\n     \
    \ QNE Ingress towards the QNE Egress.\n   *  the QNE node that is not able to\
    \ support the requested <Peak Data\n      Rate-1 (p)> value of local RMD-QSPEC\
    \ <TMOD-1> MUST mark the <M>\n      bit, i.e., set to value \"1\", of the RESERVE(RMD-QSPEC):\
    \ \"forward\".\n"
- title: QNE(Ingress)   QNE (int.)    QNE (int.)    QNE (int.)     QNE(Egress)
  contents:
  - 'QNE(Ingress)   QNE (int.)    QNE (int.)    QNE (int.)     QNE(Egress)

    '
- title: NTLP stateful  NTLP st.less  NTLP st.less  NTLP st.less  NTLP stateful
  contents:
  - "NTLP stateful  NTLP st.less  NTLP st.less  NTLP st.less  NTLP stateful\n    |\
    \                |             |              |               |\n    |RESERVE(RMD-QSPEC):\
    \           |              |               |\n    |  \"forward\"     |  RESERVE(RMD-QSPEC):\
    \       |               |\n    |--------------->|  \"forward\"  |            \
    \  M RESERVE(RMD-QSPEC):\n    |                |--------------------------->M\
    \  \"forward-M marked\"\n    |                |             |              M-------------->|\n\
    \    |                |           RESPONSE(PDR)    M               |\n    |  \
    \              |        \"forward - M marked\"M               |\n    |<------------------------------------------------------------|\n\
    \    |RESERVE(RMD-QSPEC, K=0)       |              M               |\n    |\"\
    forward - T tear\"            |              M               |\n    |--------------->|\
    \             |              M               |\n    |                    RESERVE(RMD-QSPEC,\
    \ K=1)  M               |\n    |                |   \"forward - T tear\"     \
    \  M               |\n    |                |--------------------------->M    \
    \           |\n    |                |                  RESERVE(RMD-QSPEC, K=1)\
    \   |\n    |                |                 \"forward - T tear\"         |\n\
    \    |                |                            M-------------->|\n  Figure\
    \ 18: Intra-domain signaling operation for unsuccessful\n             bidirectional\
    \ reservation (rejection on path\n             QNE(Ingress) towards QNE(Egress))\n\
    \   The operation for this type of unsuccessful bidirectional reservation\n  \
    \ is similar to the operation for unsuccessful unidirectional\n   reservation,\
    \ shown in Figure 9.\n   The main differences between the bidirectional unsuccessful\
    \ procedure\n   shown in Figure 19 and the in bidirectional successful procedure\
    \ are\n   as follows:\n   *  the QNE node that is not able to reserve resources\
    \ for a certain\n      request is located in the \"reverse\" path, i.e., the path\
    \ from the\n      QNE Egress towards the QNE Ingress.\n   *  the QNE node that\
    \ is not able to support the requested <Peak Data\n      Rate-1 (p)> value of\
    \ local RMD-QSPEC <TMOD-1> MUST mark the <M>\n      bit, i.e., set to value \"\
    1\", the RESERVE(RMD-QSPEC): \"reverse\".\n"
- title: QNE(Ingress)     QNE (int.)    QNE (int.)    QNE (int.)     QNE(Egress)
  contents:
  - 'QNE(Ingress)     QNE (int.)    QNE (int.)    QNE (int.)     QNE(Egress)

    '
- title: NTLP stateful   NTLP st.less  NTLP st.less  NTLP st.less   NTLP stateful
  contents:
  - "NTLP stateful   NTLP st.less  NTLP st.less  NTLP st.less   NTLP stateful\n  \
    \  |                |                |                |              |\n    |RESERVE(RMD-QSPEC)\
    \               |                |              |\n    |\"forward\"       |  RESERVE(RMD-QSPEC):\
    \            |              |\n    |--------------->|  \"forward\"     |     \
    \      RESERVE(RMD-QSPEC): |\n    |                |-------------------------------->|\"\
    forward\"     |\n    |                |   RESERVE(RMD-QSPEC):           |------------->|\n\
    \    |                |    \"reverse\"   |                |              |\n \
    \   |                |              RESERVE(RMD-QSPEC) |              |\n    |\
    \    RESERVE(RMD-QSPEC):          M      \"reverse\" |<-------------|\n    | \
    \  \"reverse - M marked\"          M<---------------|              |\n    |<--------------------------------M\
    \                |              |\n    |                |                M   \
    \             |              |\n    |RESERVE(RMD-QSPEC, K=0):         M      \
    \          |              |\n    |\"forward - T tear\"               M       \
    \         |              |\n    |--------------->|  RESERVE(RMD-QSPEC, K=0): \
    \      |              |\n    |                |  \"forward - T tear\"        \
    \     |              |\n    |                |-------------------------------->|\
    \              |\n    |                |                M                |------------->|\n\
    \    |                |                M         RESERVE(RMD-QSPEC, K=0):\n  \
    \  |                |                M            \"reverse - T tear\" |\n   \
    \ |                |                M                |<-------------|\n    | \
    \                                M RESERVE(RMD-QSPEC, K=1)       |\n    |    \
    \            |                M \"forward - T tear\"            |\n    |     \
    \           |                M<---------------|              |\n    |        \
    \  RESERVE(RMD-QSPEC, K=1)M                |              |\n    |          \"\
    forward - T tear\"     M                |              |\n    |<--------------------------------M\
    \                |              |\n  Figure 19: Intra-domain signaling normal\
    \ operation for unsuccessful\n             bidirectional reservation (rejection\
    \ on path QNE(Egress)\n             towards QNE(Ingress)\n   *  the QNE Ingress\
    \ uses the information contained in the received PHR\n      and PDR containers\
    \ of the RESERVE(RMD-QSPEC): \"reverse\" and\n      generates a tear intra-domain\
    \ RESERVE(RMD-QSPEC): \"forward - T\n      tear\" message.  This message carries\
    \ a \"PHR_Release_Request\" and\n      \"PDR_Release_Request\" control information.\
    \  This message is sent\n      to the QNE Egress node.  The QNE Egress node uses\
    \ the information\n      contained in the \"PHR_Release_Request\" and the\n  \
    \    \"PDR_Release_Request\" control info containers to generate a\n      RESERVE(RMD-QSPEC):\
    \ \"reverse - T tear\" message that is sent\n      towards the QNE Ingress node.\n"
- title: 4.6.2.2.  Refresh Reservations
  contents:
  - "4.6.2.2.  Refresh Reservations\n   This section describes the operation of the\
    \ RMD-QOSM where an RMD\n   intra-domain bidirectional refresh reservation operation\
    \ is\n   accomplished.\n   The refresh procedure in the case of an RMD reservation-based\
    \ method\n   follows a scheme similar to the successful reservation procedure,\n\
    \   described in Section 4.6.2.1 and depicted in Figure 17, and how the\n   refresh\
    \ process of the reserved resources is maintained and is\n   similar to the refresh\
    \ process used for the intra-domain\n   unidirectional reservations (see Section\
    \ 4.6.1.3).\n   Note that the RMD traffic class refresh periods used by the bound\n\
    \   bidirectional sessions MUST be equal in all QNE Edge and QNE Interior\n  \
    \ nodes.\n   The main differences between the RESERVE(RMD-QSPEC): \"forward\"\n\
    \   message used for the bidirectional refresh procedure and a\n   RESERVE(RMD-QSPEC):\
    \ \"forward\" message used for the bidirectional\n   successful reservation procedure\
    \ are as follows:\n   *  the value of the Parameter ID of the PHR container is\
    \ \"19\", i.e.,\n      \"PHR_Refresh_Update\".\n   *  the value of the Parameter\
    \ ID of the PDR container is \"21\", i.e.,\n      \"PDR_Refresh_Request\".\n \
    \  The main differences between the RESERVE(RMD-QSPEC): \"reverse\"\n   message\
    \ used for the bidirectional refresh procedure and the RESERVE\n   (RMD-QSPEC):\
    \ \"reverse\" message used for the bidirectional successful\n   reservation procedure\
    \ are as follows:\n   *  the value of the Parameter ID of the PHR container is\
    \ \"19\", i.e.,\n      \"PHR_Refresh_Update\".\n   *  the value of the Parameter\
    \ ID of the PDR container is \"24\", i.e.,\n      \"PDR_Refresh_Report\".\n"
- title: 4.6.2.3.  Modification of Aggregated Intra-Domain QoS-NSLP Operational
  contents:
  - "4.6.2.3.  Modification of Aggregated Intra-Domain QoS-NSLP Operational\n    \
    \      Reservation States\n   This section describes the operation of the RMD-QOSM\
    \ where RMD intra-\n   domain bidirectional QoS-NSLP aggregated reservation states\
    \ have to\n   be modified.\n   In the case when the QNE Edges maintain, for the\
    \ RMD QoS Model, QoS-\n   NSLP aggregated reservation states and if such an aggregated\n\
    \   reservation has to be modified (see Section 4.3.1), then similar\n   procedures\
    \ to Section 4.6.1.4 are applied.  In particular:\n   *  When the modification\
    \ request requires an increase of the reserved\n      resources, the QNE Ingress\
    \ node MUST include the corresponding\n      value into the <Peak Data Rate-1\
    \ (p)> field local RMD-QSPEC\n      <TMOD-1> parameter of the RMD-QOSM <QoS Desired>),\
    \ which is sent\n      together with \"PHR_Resource_Request\" control information.\
    \  If a\n      QNE Edge or QNE Interior node is not able to reserve the number\
    \ of\n      requested resources, then the \"PHR_Resource_Request\" associated\n\
    \      with the local RMD-QSPEC <TMOD-1> parameter MUST be marked.  In\n     \
    \ this situation, the RMD-specific operation for unsuccessful\n      reservation\
    \ will be applied (see Section 4.6.2.1).  Note that the\n      value of the <PDR\
    \ Bandwidth> parameter, which is sent within a\n      \"PDR_Reservation_Request\"\
    \ container, represents the increase of\n      the reserved resources in the \"\
    reverse\" direction.\n   *  When the modification request requires a decrease\
    \ of the reserved\n      resources, the QNE Ingress node MUST include this value\
    \ into the\n      <Peak Data Rate-1 (p)> field of the local RMD-QSPEC <TMOD-1>\n\
    \      parameter of the RMD-QOSM <QoS Desired>).  Subsequently, an RMD\n     \
    \ release procedure SHOULD be accomplished (see Section 4.6.2.4).\n      Note\
    \ that the value of the <PDR Bandwidth> parameter, which is\n      sent within\
    \ a \"PDR_Release_Request\" container, represents the\n      decrease of the reserved\
    \ resources in the \"reverse\" direction.\n"
- title: 4.6.2.4.  Release Procedure
  contents:
  - "4.6.2.4.  Release Procedure\n   This section describes the operation of the RMD-QOSM,\
    \ where an RMD\n   intra-domain bidirectional reservation release operation is\n\
    \   accomplished.  The message sequence diagram used in this procedure is\n  \
    \ similar to the one used by the successful reservation procedures,\n   described\
    \ in Section 4.6.2.1 and depicted in Figure 17.  However, how\n   the release\
    \ of the reservation is accomplished is similar to the RMD\n   release procedure\
    \ used for the intra-domain unidirectional\n   reservations (see Section 4.6.1.5\
    \ and Figures 18 and 19).\n   The main differences between the RESERVE (RMD-QSPEC):\
    \ \"forward\"\n   message used for the bidirectional release procedure and a RESERVE\n\
    \   (RMD-QSPEC): \"forward\" message used for the bidirectional successful\n \
    \  reservation procedure are as follows:\n   *  the value of the Parameter ID\
    \ of the PHR container is \"18\",\n      i.e.\"PHR_Release_Request\";\n   *  the\
    \ value of the Parameter ID of the PDR container is \"22\", i.e.,\n      \"PDR_Release_Request\"\
    ;\n   The main differences between the RESERVE (RMD-QSPEC): \"reverse\"\n   message\
    \ used for the bidirectional release procedure and the RESERVE\n   (RMD-QSPEC):\
    \ \"reverse\" message used for the bidirectional successful\n   reservation procedure\
    \ are as follows:\n   *  the value of the Parameter ID of the PHR container is\
    \ \"18\", i.e.,\n      \"PHR_Release_Request\";\n   *  the PDR container is not\
    \ included in the RESERVE (RMD-QSPEC):\n      \"reverse\" message.\n"
- title: 4.6.2.5.  Severe Congestion Handling
  contents:
  - "4.6.2.5.  Severe Congestion Handling\n   This section describes the severe congestion\
    \ handling operation used\n   in combination with RMD intra-domain bidirectional\
    \ reservation\n   procedures.  This severe congestion handling operation is similar\
    \ to\n   the one described in Section 4.6.1.6.\n"
- title: 4.6.2.5.1.  Severe Congestion Handling by the RMD-QOSM Bidirectional
  contents:
  - "4.6.2.5.1.  Severe Congestion Handling by the RMD-QOSM Bidirectional\n      \
    \      Refresh Procedure\n   This procedure is similar to the severe congestion\
    \ handling procedure\n   described in Section 4.6.1.6.1.  The difference is related\
    \ to how the\n   refresh procedure is accomplished (see Section 4.6.2.2) and how\
    \ the\n   flows are terminated (see Section 4.6.2.4).\n"
- title: 4.6.2.5.2.  Severe Congestion Handling by Proportional Data Packet
  contents:
  - "4.6.2.5.2.  Severe Congestion Handling by Proportional Data Packet\n        \
    \    Marking\n   This section describes the severe congestion handling by proportional\n\
    \   data packet marking when this is combined with an RMD intra-domain\n   bidirectional\
    \ reservation procedure.  Note that the detection and\n   marking/re-marking functionality\
    \ described in this section and used\n   by Interior nodes, applies to NSIS-aware\
    \ but also to NSIS-unaware\n   nodes.  This means however, that the \"not NSIS-aware\"\
    \ Interior nodes\n   MUST be configured such that they can detect the congestion\n\
    \   situations and re-mark packets in the same way as the Interior \"NSIS-\n \
    \  aware\" nodes do.\n   This procedure is similar to the severe congestion handling\
    \ procedure\n   described in Section 4.6.1.6.2.  The main difference is related\
    \ to\n   the location of the severe congested node, i.e., \"forward\" or\n   \"\
    reverse\" path.  Note that when a severe congestion situation occurs,\n   e.g.,\
    \ on a forward path, and flows are terminated to solve the severe\n   congestion\
    \ in forward path, then the reserved bandwidth associated\n   with the terminated\
    \ bidirectional flows will also be released.\n   Therefore, a careful selection\
    \ of the flows that have to be\n   terminated SHOULD take place.  An example of\
    \ such a selection is\n   given in Appendix A.5.\n   Furthermore, a special case\
    \ of this operation is associated with the\n   severe congestion situation occurring\
    \ simultaneously on the forward\n   and reverse paths.  An example of this operation\
    \ is given in Appendix\n   A.6.\n   Simulation results associated with these procedures\
    \ can be found in\n   [DiKa08].\n"
- title: QNE(Ingress)   QNE (int.)    QNE (int.)    QNE (int.)     QNE(Egress)
  contents:
  - 'QNE(Ingress)   QNE (int.)    QNE (int.)    QNE (int.)     QNE(Egress)

    '
- title: NTLP stateful  NTLP st.less  NTLP st.less  NTLP st.less  NTLP stateful
  contents:
  - 'NTLP stateful  NTLP st.less  NTLP st.less  NTLP st.less  NTLP stateful

    '
- title: user|                |             |              |               |
  contents:
  - 'user|                |             |              |               |

    '
- title: data|    user        |             |              |               |
  contents:
  - 'data|    user        |             |              |               |

    '
- title: '--->|    data        | user data   |              |user data      |'
  contents:
  - "--->|    data        | user data   |              |user data      |\n    |--------------->|\
    \             |              S               |\n    |                |--------------------------->S\
    \ (#marked bytes)\n    |                |             |              S-------------->|\n\
    \    |                |             |              S(#unmarked bytes)\n    | \
    \               |             |              S-------------->|Term\n    |    \
    \            |             |              S               |flow?\n    |      \
    \          |          NOTIFY (PDR)      S               |YES\n    |<------------------------------------------------------------|\n\
    \    |RESERVE(RMD-QSPEC)            |              S               |\n    |\"\
    forward - T tear\"            |              S               |\n    |--------------->|\
    \             |           RESERVE(RMD-QSPEC):|\n    |                |--------------------------->S\"\
    forward - T tear\"\n    |                |             |              S-------------->|\n\
    \    |                |             |          RESERVE(RMD-QSPEC): |\n    |  \
    \              |             |           \"reverse - T tear\" |\n    | RESERVE(RMD-QSPEC):\
    \          |              |<--------------|\n    |\"reverse - T tear\"       \
    \     |<-------------S               |\n    |<-----------------------------| \
    \             S               |\n  Figure 20: Intra-domain RMD severe congestion\
    \ handling for\n             bidirectional reservation (congestion on path\n \
    \            QNE(Ingress) towards QNE(Egress))\n   Figure 20 shows the scenario\
    \ in which the severely congested node is\n   located in the \"forward\" path.\
    \  The QNE Egress node has to generate\n   an end-to-end NOTIFY (PDR) message.\
    \  In this way, the QNE Ingress\n   will be able to receive the (#marked and #unmarked)\
    \ that were\n   measured by the QNE Egress node on the congested \"forward\" path.\n\
    \   Note that in this situation, it is assumed that the \"reverse\" path is\n\
    \   not congested.\n   This scenario is very similar to the severe congestion\
    \ handling\n   scenario described in Section 4.6.1.6.2 and shown in Figure 14.\
    \  The\n   difference is related to the release procedure, which is accomplished\n\
    \   in the same way as described in Section 4.6.2.4.\n   Figure 21 shows the scenario\
    \ in which the severely congested node is\n   located in the \"reverse\" path.\
    \  Note that in this situation, it is\n   assumed that the \"forward\" path is\
    \ not congested.  The main\n   difference between this scenario and the scenario\
    \ shown in Figure 20\n   is that no end-to-end NOTIFY (PDR) message has to be\
    \ generated by the\n   QNE Egress node.\n   This is because now the severe congestion\
    \ occurs on the \"reverse\"\n   path and the QNE Ingress node receives the (#marked\
    \ and #unmarked)\n   user data passing through the severely congested \"reverse\"\
    \ path.  The\n   QNE Ingress node will be able to calculate the number of flows\
    \ that\n   have to be terminated or forwarded in a lower priority queue.\n"
- title: QNE(Ingress)     QNE (int.)    QNE (int.)    QNE (int.)     QNE(Egress)
  contents:
  - 'QNE(Ingress)     QNE (int.)    QNE (int.)    QNE (int.)     QNE(Egress)

    '
- title: NTLP stateful   NTLP st.less  NTLP st.less  NTLP st.less   NTLP stateful
  contents:
  - 'NTLP stateful   NTLP st.less  NTLP st.less  NTLP st.less   NTLP stateful

    '
- title: user|                |                |           |               |
  contents:
  - 'user|                |                |           |               |

    '
- title: data|    user        |                |           |               |
  contents:
  - 'data|    user        |                |           |               |

    '
- title: '--->|    data        | user data      |           |user data      |'
  contents:
  - "--->|    data        | user data      |           |user data      |\n    |--------------->|\
    \                |           |               |\n    |                |--------------------------->|user\
    \ data      |user\n    |                |                |           |-------------->|data\n\
    \    |                |                |           |               |--->\n   \
    \ |                |                |  user     |               |<---\n    | \
    \  user data    |                |  data     |<--------------|\n    | (#marked\
    \ bytes)|                S<----------|               |\n    |<--------------------------------S\
    \           |               |\n    | (#unmarked bytes)               S       \
    \    |               |\n"
- title: Term|<--------------------------------S           |               |
  contents:
  - 'Term|<--------------------------------S           |               |

    '
- title: Flow?                |                S           |               |
  contents:
  - 'Flow?                |                S           |               |

    '
- title: 'YES |RESERVE(RMD-QSPEC):              S           |               |'
  contents:
  - "YES |RESERVE(RMD-QSPEC):              S           |               |\n    |\"\
    forward - T tear\"               s           |               |\n    |--------------->|\
    \  RESERVE(RMD-QSPEC):       |               |\n    |                |  \"forward\
    \ - T tear\"        |               |\n    |                |--------------------------->|\
    \               |\n    |                |                S           |-------------->|\n\
    \    |                |                S         RESERVE(RMD-QSPEC):\n    |  \
    \              |                S       \"reverse - T tear\"  |\n    |      RESERVE(RMD-QSPEC)\
    \         S           |<--------------|\n    |      \"reverse - T tear\"     \
    \    S<----------|               |\n    |<--------------------------------S  \
    \         |               |\n  Figure 21: Intra-domain RMD severe congestion handling\
    \ for\n             bidirectional reservation (congestion on path\n          \
    \   QNE(Egress) towards QNE(Ingress))\n   For the flows that have to be terminated,\
    \ a release procedure, see\n   Section 4.6.2.4, is initiated to release the reserved\
    \ resources on\n   the \"forward\" and \"reverse\" paths.\n"
- title: 4.6.2.6.  Admission Control Using Congestion Notification Based on
  contents:
  - "4.6.2.6.  Admission Control Using Congestion Notification Based on\n        \
    \  Probing\n   This section describes the admission control scheme that uses the\n\
    \   congestion notification function based on probing when RMD intra-\n   domain\
    \ bidirectional reservations are supported.\n"
- title: QNE(Ingress)    Interior    QNE (int.)      Interior       QNE(Egress)
  contents:
  - 'QNE(Ingress)    Interior    QNE (int.)      Interior       QNE(Egress)

    '
- title: NTLP stateful not NSIS aware not NSIS aware not NSIS aware NTLP stateful
  contents:
  - 'NTLP stateful not NSIS aware not NSIS aware not NSIS aware NTLP stateful

    '
- title: user|                |             |              |               |
  contents:
  - 'user|                |             |              |               |

    '
- title: data|                |             |              |               |
  contents:
  - 'data|                |             |              |               |

    '
- title: '--->|                | user data   |              |user data      |'
  contents:
  - "--->|                | user data   |              |user data      |\n    |-------------------------------------------->S\
    \ (#marked bytes)\n    |                |             |              S-------------->|\n\
    \    |                |             |              S(#unmarked bytes)\n    | \
    \               |             |              S-------------->|\n    |        \
    \        |             |              S               |\n    |               \
    \ |           RESERVE(re-marked DSCP in GIST)):|\n    |                |     \
    \        |              S               |\n    |-------------------------------------------->S\
    \               |\n    |                |             |              S-------------->|\n\
    \    |                |             |              S               |\n    |  \
    \              |          RESPONSE(unsuccessful INFO-SPEC)  |\n    |<------------------------------------------------------------|\n\
    \    |                |             |              S               |\n  Figure\
    \ 22: Intra-domain RMD congestion notification based on\n             probing\
    \ for bidirectional admission control (congestion\n             on path from QNE(Ingress)\
    \ towards QNE(Egress))\n   This procedure is similar to the congestion notification\
    \ for\n   admission control procedure described in Section 4.6.1.7.  The main\n\
    \   difference is related to the location of the severe congested node,\n   i.e.,\
    \ \"forward\" path (i.e., path between QNE Ingress towards QNE\n   Egress) or\
    \ \"reverse\" path (i.e., path between QNE Egress towards QNE\n   Ingress).\n\
    \   Figure 22 shows the scenario in which the severely congested node is\n   located\
    \ in the \"forward\" path.  The functionality of providing\n   admission control\
    \ is the same as that described in Section 4.6.1.7,\n   Figure 15.\n   Figure\
    \ 23 shows the scenario in which the congested node is located\n   in the \"reverse\"\
    \ path.  The probe RESERVE message sent in the\n   \"forward\" direction will\
    \ not be affected by the severely congested\n   node, while the <DSCP> value in\
    \ the IP header of any packet of the\n   \"reverse\" direction flow and also of\
    \ the GIST message that carries\n   the probe RESERVE message sent in the \"reverse\"\
    \ direction will be re-\n   marked by the congested node.  The QNE Ingress is,\
    \ in this way,\n   notified that a congestion occurred in the network, and therefore\
    \ it\n   is able to refuse the new initiation of the reservation.\n   Note that\
    \ the \"not NSIS-aware\" Interior nodes MUST be configured such\n   that they\
    \ can detect the congestion/severe congestion situations and\n   re-mark packets\
    \ in the same way as the Interior \"NSIS-aware\" nodes\n   do.\n"
- title: QNE(Ingress)     Interior    QNE (int.)     Interior        QNE(Egress)
  contents:
  - 'QNE(Ingress)     Interior    QNE (int.)     Interior        QNE(Egress)

    '
- title: NTLP stateful not NSIS aware  NTLP st.less not NSIS aware NTLP stateful
  contents:
  - 'NTLP stateful not NSIS aware  NTLP st.less not NSIS aware NTLP stateful

    '
- title: user|                |                |           |               |
  contents:
  - 'user|                |                |           |               |

    '
- title: data|                |                |           |               |
  contents:
  - 'data|                |                |           |               |

    '
- title: '--->|                | user data      |           |               |'
  contents:
  - "--->|                | user data      |           |               |\n    |-------------------------------------------->|user\
    \ data      |user\n    |                |                |           |-------------->|data\n\
    \    |                |                |           |               |--->\n   \
    \ |                |                |           |               |user\n    | \
    \               |                |           |               |data\n    |    \
    \            |                |           |               |<---\n    |       \
    \         S                | user data |               |\n    |              \
    \  S  user data     |<--------------------------|\n    |   user data    S<---------------|\
    \           |               |\n    |<---------------S                |       \
    \    |               |\n    |  user data     S                |           |  \
    \             |\n    | (#marked bytes)S                |           |         \
    \      |\n    |<---------------S                |           |               |\n\
    \    |                S           RESERVE(unmarked DSCP in GIST)): |\n    |  \
    \              S                |           |               |\n    |----------------S------------------------------------------->|\n\
    \    |                S          RESERVE(re-marked DSCP in GIST)   |\n    |  \
    \              S<-------------------------------------------|\n    |<---------------S\
    \                |           |               |\n  Figure 23: Intra-domain RMD\
    \ congestion notification for\n             bidirectional admission control (congestion\
    \ on path\n             QNE(Egress) towards QNE(Ingress))\n"
- title: 4.7.  Handling of Additional Errors
  contents:
  - "4.7.  Handling of Additional Errors\n   During the QSPEC processing, additional\
    \ errors MAY occur.  The way in\n   which these additional errors are handled\
    \ and notified is specified\n   in [RFC5975] and [RFC5974].\n"
- title: 5.  Security Considerations
  contents:
  - '5.  Security Considerations

    '
- title: 5.1.  Introduction
  contents:
  - "5.1.  Introduction\n   A design goal of the RMD-QOSM protocol is to be \"lightweight\"\
    \ in\n   terms of the number of exchanged signaling message and the amount of\n\
    \   state established at involved signaling nodes (with and without\n   reduced-state\
    \ operation).  A side effect of this design decision is\n   to introduce second-class\
    \ signaling nodes, namely QNE Interior nodes,\n   that are restricted in their\
    \ ability to perform QoS signaling\n   actions.  Only the QNE Ingress and the\
    \ QNE Egress nodes are allowed\n   to initiate certain signaling messages.\n \
    \  Moreover, RMD focuses on an intra-domain deployment only.\n   The above description\
    \ has the following implications for security:\n   1) QNE Ingress and QNE Egress\
    \ nodes require more security and fault\n      protection than QNE Interior nodes\
    \ because their uncontrolled\n      behavior has larger implications for the overall\
    \ stability of the\n      network.  QNE Ingress and QNE Egress nodes share a security\n\
    \      association and utilize GIST security for protection of their\n      signaling\
    \ messages.  Intra-domain signaling messages used for RMD\n      signaling do\
    \ not use GIST security, and therefore they do not\n      store security associations.\n\
    \   2) The focus on intra-domain QoS signaling simplifies trust\n      management\
    \ and reduces overall complexity.  See Section 2 of RFC\n      4081 for a more\
    \ detailed discussion about the complete set of\n      communication models available\
    \ for end-to-end QoS signaling\n      protocols.  The security of RMD-QOSM does\
    \ not depend on Interior\n      nodes, and hence the cryptographic protection\
    \ of intra-domain\n      messages via GIST is not utilized.\n   It is important\
    \ to highlight that RMD always uses the message\n   exchange shown in Figure 24\
    \ even if there is no end-to-end signaling\n   session.  If the RMD-QOSM is triggered\
    \ based on an end-to-end (E2E)\n   signaling exchange, then the RESERVE message\
    \ is created by a node\n   outside the RMD domain and will subsequently travel\
    \ further (e.g., to\n   the data receiver).  Such an exchange is shown in Figure\
    \ 3.  As such,\n   an evaluation of an RMD's security always has to be seen as\
    \ a\n   combination of the two signaling sessions, (1) and (2) of Figure 24.\n\
    \   Note that for the E2E message, such as the RESERVE and the RESPONSE\n   message,\
    \ a single \"hop\" refers to the communication between the QNE\n   Ingress and\
    \ the QNE Egress since QNE Interior nodes do not\n   participate in the exchange.\n\
    \          QNE             QNE             QNE            QNE\n        Ingress\
    \         Interior        Interior        Egress\n    NTLP stateful  NTLP stateless\
    \  NTLP stateless  NTLP stateful\n           |               |               |\
    \              |\n           | RESERVE (1)   |               |              |\n\
    \           +--------------------------------------------->|\n           | RESERVE'\
    \ (2)  |               |              |\n           +-------------->|        \
    \       |              |\n           |               | RESERVE'      |       \
    \       |\n           |               +-------------->|              |\n     \
    \      |               |               | RESERVE'     |\n           |        \
    \       |               +------------->|\n           |               |       \
    \        | RESPONSE' (2)|\n           |<---------------------------------------------+\n\
    \           |               |               | RESPONSE (1) |\n           |<---------------------------------------------+\n\
    \                  Figure 24: RMD message exchange\n   Authorizing quality-of-service\
    \ reservations is accomplished using the\n   Authentication, Authorization, and\
    \ Accounting (AAA) framework and the\n   functionality is inherited from the underlying\
    \ NSIS QoS NSLP, see\n   [RFC5974], and not described again in this document.\
    \  As a technical\n   solution mechanism, the Diameter QoS application [RFC5866]\
    \ may be\n   used.  The end-to-end reservation request arriving at the Ingress\n\
    \   node will trigger the authorization procedure with the backend AAA\n   infrastructure.\
    \  The end-to-end reservation is typically triggered by\n   a human interaction\
    \ with a software application, such as a voice-\n   over-IP client when making\
    \ a call.  When authorization is successful\n   then no further user initiated\
    \ QoS authorization check is expected to\n   be performed within the RMD domain\
    \ for the intra-domain reservation.\n"
- title: 5.2.  Security Threats
  contents:
  - "5.2.  Security Threats\n   In the RMD-QOSM, the Ingress node constructs both\
    \ end-to-end and\n   intra-domain signaling messages based on the end-to-end message\n\
    \   initiated by the sender end node.\n   The Interior nodes within the RMD network\
    \ ignore the end-to-end\n   signaling message, but they process, modify, and forward\
    \ the intra-\n   domain signaling messages towards the Egress node.  In the meantime,\n\
    \   resource reservation states are installed, modified, or deleted at\n   each\
    \ Interior node along the data path according to the content of\n   each intra-domain\
    \ signaling message.  The Edge nodes of an RMD\n   network are critical components\
    \ that require strong security\n   protection.\n   Therefore, they act as security\
    \ gateways for incoming and outgoing\n   signaling messages.  Moreover, a certain\
    \ degree of trust has to be\n   placed into Interior nodes within the RMD-QOSM\
    \ network, such that\n   these nodes can perform signaling message processing\
    \ and take the\n   necessary actions.\n   With the RMD-QOSM, we assume that the\
    \ Ingress and the Egress nodes\n   are not controlled by an adversary and the\
    \ communication between the\n   Ingress and the Egress nodes is secured using\
    \ standard GIST security,\n   (see Section 6 of [RFC5971]) mechanisms and experiences\
    \ integrity,\n   replay, and confidentiality protection.\n   Note that this only\
    \ affects messages directly addressed by these two\n   nodes and not any other\
    \ message that needs to be processed by\n   intermediaries.  The <SESSION-ID>\
    \ object of the end-to-end\n   communication is visible, via GIST, to the Interior\
    \ nodes.  In order\n   to define the security threats that are associated with\
    \ the RMD-QOSM,\n   we consider that an adversary that may be located inside the\
    \ RMD\n   domain and could drop, delay, duplicate, inject, or modify signaling\n\
    \   packets.\n   Depending on the location of the adversary, we speak about an\
    \ on-path\n   adversary or an off-path adversary, see also RFC 4081 [RFC4081].\n"
- title: 5.2.1.  On-Path Adversary
  contents:
  - "5.2.1.  On-Path Adversary\n   The on-path adversary is a node, which supports\
    \ RMD-QOSM and is able\n   to observe RMD-QOSM signaling message exchanges.\n\
    \   1) Dropping signaling messages\n   An adversary could drop any signaling messages\
    \ after receiving them.\n   This will cause a failure of reservation request for\
    \ new sessions or\n   deletion of resource units (bandwidth) for ongoing sessions\
    \ due to\n   states timeout.\n   It may trigger the Ingress node to retransmit\
    \ the lost signaling\n   messages.  In this scenario, the adversary drops selected\
    \ signaling\n   messages, for example, intra-domain reserve messages.  In the\
    \ RMD-\n   QOSM, the retransmission mechanism can be provided at the Ingress\n\
    \   node to make sure that signaling messages can reach the Egress node.\n   However,\
    \ the retransmissions triggered by the adversary dropping\n   messages may cause\
    \ certain problems.  Therefore, disabling the use of\n   retransmissions in the\
    \ RMD-QOSM-aware network is recommended, see\n   also Section 4.6.1.1.1.\n   2)\
    \ Delaying Signaling Messages\n   Any signaling message could be delayed by an\
    \ adversary.  For example,\n   if RESERVE' messages are delayed over the duration\
    \ of the refresh\n   period, then the resource units (bandwidth) reserved along\
    \ the nodes\n   for corresponding sessions will be removed.  In this situation,\
    \ the\n   Ingress node does not receive the RESPONSE within a certain period,\n\
    \   and considers that the signaling message has failed, which may cause\n   a\
    \ retransmission of the \"failed\" message.  The Egress node may\n   distinguish\
    \ between the two messages, i.e., the delayed message and\n   the retransmitted\
    \ message, and it could get a proper response.\n   However, Interior nodes suffer\
    \ from this retransmission and they may\n   reserve twice the resource units (bandwidth)\
    \ requested by the Ingress\n   node.\n   3) Replaying Signaling Messages\n   An\
    \ adversary may want to replay signaling messages.  It first stores\n   the received\
    \ messages and decides when to replay these messages and\n   at what rate (packets\
    \ per second).\n   When the RESERVE' message carried an <RII> object, the Egress\
    \ will\n   reply with a RESPONSE' message towards the Ingress node.  The Ingress\n\
    \   node can then detect replays by comparing the value of <RII> in the\n   RESPONSE'\
    \ messages with the stored value.\n   4) Injecting Signaling Messages\n   Similar\
    \ to the replay-attack scenario, the adversary may store a part\n   of the information\
    \ carried by signaling messages, for example, the\n   <RSN> object.  When the\
    \ adversary injects signaling messages, it puts\n   the stored information together\
    \ with its own generated parameters\n   (RMD-QSPEC <TMOD-1> parameter, <RII>,\
    \ etc.) into the injected\n   messages and then sends them out.  Interior nodes\
    \ will process these\n   messages by default, reserve the requested resource units\
    \ (bandwidth)\n   and pass them to downstream nodes.\n   It may happen that the\
    \ resource units (bandwidth) on the Interior\n   nodes are exhausted if these\
    \ injected messages consume too much\n   bandwidth.\n   5) Modifying Signaling\
    \ Messages\n   On-path adversaries are capable of modifying any part of the\n\
    \   signaling message.  For example, the adversary can modify the <M>,\n   <S>,\
    \ and <O> parameters of the RMD-QSPEC messages.  The Egress node\n   will then\
    \ use the SESSION-ID and subsequently the <BOUND-SESSION-ID>\n   objects to refer\
    \ to that flow to be terminated or set to lower\n   priority.  It is also possible\
    \ for the adversary to modify the RMD-\n   QSPEC <TMOD-1> parameter and/or <PHB\
    \ Class> parameter, which could\n   cause a modification of an amount of the requested\
    \ resource units\n   (bandwidth) changes.\n"
- title: 5.2.2.  Off-Path Adversary
  contents:
  - "5.2.2.  Off-Path Adversary\n   In this case, the adversary is not located on-path\
    \ and it does not\n   participate in the exchange of RMD-QOSM signaling messages,\
    \ and\n   therefore is unable to eavesdrop signaling messages.  Hence, the\n \
    \  adversary does not know valid <RII>s, <RSN>s, and <SESSION-ID>s.\n   Hence,\
    \ the adversary has to generate new parameters and constructs\n   new signaling\
    \ messages.  Since Interior nodes operate in reduced-\n   state mode, injected\
    \ signaling messages are treated as new once,\n   which causes Interior nodes\
    \ to allocate additional reservation state.\n"
- title: 5.3.  Security Requirements
  contents:
  - "5.3.  Security Requirements\n   The following security requirements are set as\
    \ goals for the intra-\n   domain communication, namely:\n   *  Nodes, which are\
    \ never supposed to participate in the NSIS\n      signaling exchange, must not\
    \ interfere with QNE Interior nodes.\n      Off-path nodes (off-path with regard\
    \ to the path taken by a\n      particular signaling message exchange) must not\
    \ be able to\n      interfere with other on-path signaling nodes.\n   *  The actions\
    \ allowed by a QNE Interior node should be minimal\n      (i.e., only those specified\
    \ by the RMD-QOSM).  For example, only\n      the QNE Ingress and the QNE Egress\
    \ nodes are allowed to initiate\n      certain signaling messages.  QNE Interior\
    \ nodes are, for example,\n      allowed to modify certain signaling message payloads.\n\
    \   Note that the term \"interfere\" refers to all sorts of security\n   threats,\
    \ such as denial-of-service, spoofing, replay, signaling\n   message injection,\
    \ etc.\n"
- title: 5.4.  Security Mechanisms
  contents:
  - "5.4.  Security Mechanisms\n   An important security mechanism that was built\
    \ into RMD-QOSM was the\n   ability to tie the end-to-end RESERVE and the RESERVE'\
    \ messages\n   together using the BOUND-SESSION-ID and to allow the Ingress node\
    \ to\n   match the RESERVE' with the RESPONSE' by using the <RII>.  These\n  \
    \ mechanisms enable the Edge nodes to detect unexpected signaling\n   messages.\n\
    \   We assume that the RESERVE/RESPONSE is sent with hop-by-hop channel\n   security\
    \ provided by GIST and protected between the QNE Ingress and\n   the QNE Egress.\
    \  GIST security mechanisms MUST be used to offer\n   authentication, integrity,\
    \ and replay protection.  Furthermore,\n   encryption MUST be used to prevent\
    \ an adversary located along the\n   path of the RESERVE message from learning\
    \ information about the\n   session that can later be used to inject a RESERVE'\
    \ message.\n   The following messages need to be mapped to each other to make\
    \ sure\n   that the occurrence of one message is not without the other:\n   a)\
    \ the RESERVE and the RESERVE' relate to each other at the QNE\n      Egress;\
    \ and\n   b) the RESPONSE and the RESERVE relate to each other at the QNE\n  \
    \    Ingress; and\n   c) the RESERVE' and the RESPONSE' relate to each other.\
    \  The <RII> is\n      carried in the RESERVE' message and the RESPONSE' message\
    \ that is\n      generated by the QNE Egress node contains the same <RII> as the\n\
    \      RESERVE'.  The <RII> can be used by the QNE Ingress to match the\n    \
    \  RESERVE' with the RESPONSE'.  The QNE Egress is able to determine\n      whether\
    \ the RESERVE' was created by the QNE Ingress node since the\n      intra-domain\
    \ session, which sent the RESERVE', is bound to an end-\n      to-end session\
    \ via the <BOUND-SESSION-ID> value included in the\n      intra-domain QoS-NSLP\
    \ operational state maintained at the QNE\n      Egress.\n   The RESERVE and the\
    \ RESERVE' message are tied together using the\n   BOUND-SESSION-ID(s) maintained\
    \ by the intra-domain and end-to-end\n   QoS-NSLP operational states maintained\
    \ at the QNE Edges (see Sections\n   4.3.1, 4.3.2, and 4.3.3).  Hence, there cannot\
    \ be a RESERVE' without\n   a corresponding RESERVE.  The SESSION-ID can fulfill\
    \ this purpose\n   quite well if the aim is to provide protection against off-path\n\
    \   adversaries that do not see the SESSION-ID carried in the RESERVE and\n  \
    \ the RESERVE' messages.\n   If, however, the path changes (due to rerouting or\
    \ due to mobility),\n   then an adversary could inject RESERVE' messages (with\
    \ a previously\n   seen SESSION-ID) and could potentially cause harm.\n   An off-path\
    \ adversary can, of course, create RESERVE' messages that\n   cause intermediate\
    \ nodes to create some state (and cause other\n   actions) but the message would\
    \ finally hit the QNE Egress node.  The\n   QNE Egress node would then be able\
    \ to determine that there is\n   something going wrong and generate an error message.\n\
    \   The severe congestion handling can be triggered by intermediate nodes\n  \
    \ (unlike other messages).  In many cases, however, intermediate nodes\n   experiencing\
    \ congestion use refresh messages modify the <S> and <O>\n   parameters of the\
    \ message.  These messages are still initiated by the\n   QNE Ingress node and\
    \ carry the SESSION-ID.  The QNE Egress node will\n   use the SESSION-ID and subsequently\
    \ the BOUND-SESSION-ID, maintained\n   by the intra-domain QoS-NSLP operational\
    \ state, to refer to a flow\n   that might be terminated.  The aspect of intermediate\
    \ nodes\n   initiating messages for severe congestion handling is for further\n\
    \   study.\n   During the refresh procedure, a RESERVE' creates a RESPONSE', see\n\
    \   Figure 25.  The <RII> is carried in the RESERVE' message and the\n   RESPONSE'\
    \ message that is generated by the QNE Egress node contains\n   the same <RII>\
    \ as the RESERVE'.\n   The <RII> can be used by the QNE Ingress to match the RESERVE'\
    \ with\n   the RESPONSE'.\n   A further aspect is marking of data traffic.  Data\
    \ packets can be\n   modified by an intermediary without any relationship to a\
    \ signaling\n   session (and a SESSION-ID).  The problem appears if an off-path\n\
    \   adversary injects spoofed data packets.\n     QNE Ingress    QNE Interior\
    \   QNE Interior    QNE Egress\n   NTLP stateful  NTLP stateless  NTLP stateless\
    \  NTLP stateful\n          |               |               |              |\n\
    \          | REFRESH RESERVE'              |              |\n          +-------------->|\
    \ REFRESH RESERVE'             |\n          | (+RII)        +-------------->|\
    \ REFRESH RESERVE'\n          |               | (+RII)        +------------->|\n\
    \          |               |               | (+RII)       |\n          |     \
    \          |               |              |\n          |               |     \
    \          |     REFRESH  |\n          |               |               |     RESPONSE'|\n\
    \          |<---------------------------------------------+\n          |     \
    \          |               |     (+RII)   |\n            Figure 25: RMD REFRESH\
    \ message exchange\n   The adversary thereby needs to spoof data packets that\
    \ relate to the\n   flow identifier of an existing end-to-end reservation that\
    \ SHOULD be\n   terminated.  Therefore, the question arises how an off-path adversary\n\
    \   SHOULD create a data packet that matches an existing flow identifier\n   (if\
    \ a 5-tuple is used).  Hence, this might not turn out to be simple\n   for an\
    \ adversary unless we assume the previously mentioned\n   mobility/rerouting case\
    \ where the path through the network changes\n   and the set of nodes that are\
    \ along a path changes over time.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   This section defines additional codepoint assignments\
    \ in the QSPEC\n   Parameter ID registry, in accordance with BCP 26 [RFC5226].\n"
- title: 6.1.  Assignment of QSPEC Parameter IDs
  contents:
  - "6.1.  Assignment of QSPEC Parameter IDs\n   This document specifies the following\
    \ QSPEC containers in the QSPEC\n   Parameter ID registry created in [RFC5975]:\n\
    \   <PHR_Resource_Request> (Section 4.1.2 above, ID=17)\n   <PHR_Release_Request>\
    \ (Section 4.1.2 above, ID=18)\n   <PHR_Refresh_Update> (Section 4.1.2 above,\
    \ ID=19)\n   <PDR_Reservation_Request> (Section 4.1.3 above, ID=20)\n   <PDR_Refresh_Request>\
    \ (Section 4.1.3 above, ID=21)\n   <PDR_Release_Request> (Section 4.1.3 above,\
    \ ID=22)\n   <PDR_Reservation_Report> (Section 4.1.3 above, ID=23)\n   <PDR_Refresh_Report>\
    \ (Section 4.1.3 above, ID=24)\n   <PDR_Release_Report> (Section 4.1.3 above,\
    \ ID=25)\n   <PDR_Congestion_Report> (Section 4.1.3 above, ID=26)\n"
- title: 7.  Acknowledgments
  contents:
  - "7.  Acknowledgments\n   The authors express their acknowledgement to people who\
    \ have worked\n   on the RMD concept: Z. Turanyi, R. Szabo, G. Pongracz, A. Marquetant,\n\
    \   O. Pop, V. Rexhepi, G. Heijenk, D. Partain, M. Jacobsson, S.\n   Oosthoek,\
    \ P. Wallentin, P. Goering, A. Stienstra, M. de Kogel, M.\n   Zoumaro-Djayoon,\
    \ M. Swanink, R. Klaver G. Stokkink, J. W. van\n   Houwelingen, D. Dimitrova,\
    \ T. Sealy, H. Chang, and J. de Waal.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2983]  Black, D., \"Differentiated Services and Tunnels\", RFC\n\
    \              2983, October 2000.\n   [RFC5971]  Schulzrinne, H. and R. Hancock,\
    \ \"GIST: General Internet\n              Signaling Transport\", RFC 5971, October\
    \ 2010.\n   [RFC5974]  Manner, J., Karagiannis, G., and A. McDonald, \"NSIS\n\
    \              Signaling Layer Protocol (NSLP) for Quality-of-Service\n      \
    \        Signaling\", RFC 5974, October 2010.\n   [RFC5975]  Ash, G., Bader, A.,\
    \ Kappler C., and D. Oran, \"QSPEC\n              Template for the Quality-of-Service\
    \ NSIS Signaling Layer\n              Protocol (NSLP)\", RFC 5975, October 2010.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [AdCa03]   Adler, M., Cai, J.-Y., Shapiro, J.\
    \ K., Towsley, D.,\n              \"Estimation of congestion price using probabilistic\
    \ packet\n              marking\", Proc. IEEE INFOCOM, pp. 2068-2078, 2003.\n\
    \   [AnHa06]   Lachlan L. H. Andrew and Stephen V. Hanly, \"The Estimation\n \
    \             Error of Adaptive Deterministic Packet Marking\", 44th\n       \
    \       Annual Allerton Conference on Communication, Control and\n           \
    \   Computing, 2006.\n   [AtLi01]   Athuraliya, S., Li, V. H., Low, S. H., Yin,\
    \ Q., \"REM:\n              active queue management\", IEEE Network, vol. 15,\
    \ pp.\n              48-53, May/June 2001.\n   [Chan07]   H. Chang, \"Security\
    \ support in RMD-QOSM\", Masters thesis,\n              University of Twente,\
    \ 2007.\n   [CsTa05]   Csaszar, A., Takacs, A., Szabo, R., Henk, T., \"Resilient\n\
    \              Reduced-State Resource Reservation\", Journal of\n            \
    \  Communication and Networks, Vol. 7, No. 4, December 2005.\n   [DiKa08]   Dimitrova,\
    \ D., Karagiannis, G., de Boer, P.-T., \"Severe\n              congestion handling\
    \ approaches in NSIS RMD domains with\n              bi-directional reservations\"\
    , Journal of Computer\n              Communications, Elsevier, vol. 31, pp. 3153-3162,\
    \ 2008.\n   [JaSh97]   Jamin, S., Shenker, S., Danzig, P., \"Comparison of\n \
    \             Measurement-based Admission Control Algorithms for\n           \
    \   Controlled-Load Service\", Proceedings IEEE Infocom '97,\n              Kobe,\
    \ Japan, April 1997.\n   [GrTs03]   Grossglauser, M., Tse, D.N.C, \"A Time-Scale\
    \ Decomposition\n              Approach to Measurement-Based Admission Control\"\
    ,\n              IEEE/ACM Transactions on Networking, Vol. 11, No. 4,\n      \
    \        August 2003.\n   [Part94]   C. Partridge, Gigabit Networking, Addison\
    \ Wesley\n              Publishers (1994).\n   [RFC1633]  Braden, R., Clark, D.,\
    \ and S. Shenker, \"Integrated\n              Services in the Internet Architecture:\
    \ an Overview\", RFC\n              1633, June 1994.\n   [RFC2215]  Shenker, S.\
    \ and J. Wroclawski, \"General Characterization\n              Parameters for\
    \ Integrated Service Network Elements\", RFC\n              2215, September 1997.\n\
    \   [RFC2475]  Blake, S., Black, D., Carlson, M., Davies, E., Wang, Z.,\n    \
    \          and W. Weiss, \"An Architecture for Differentiated\n              Service\"\
    , RFC 2475, December 1998.\n   [RFC2638]  Nichols, K., Jacobson, V., and L. Zhang,\
    \ \"A Two-bit\n              Differentiated Services Architecture for the Internet\"\
    ,\n              RFC 2638, July 1999.\n   [RFC2998]  Bernet, Y., Ford, P., Yavatkar,\
    \ R., Baker, F., Zhang, L.,\n              Speer, M., Braden, R., Davie, B., Wroclawski,\
    \ J., and E.\n              Felstaine, \"A Framework for Integrated Services Operation\n\
    \              over Diffserv Networks\", RFC 2998, November 2000.\n   [RFC3175]\
    \  Baker, F., Iturralde, C., Le Faucheur, F., and B. Davie,\n              \"\
    Aggregation of RSVP for IPv4 and IPv6 Reservations\", RFC\n              3175,\
    \ September 2001.\n   [RFC3726]  Brunner, M., Ed., \"Requirements for Signaling\
    \ Protocols\",\n              RFC 3726, April 2004.\n   [RFC4125]  Le Faucheur,\
    \ F. and W. Lai, \"Maximum Allocation Bandwidth\n              Constraints Model\
    \ for Diffserv-aware MPLS Traffic\n              Engineering\", RFC 4125, June\
    \ 2005.\n   [RFC4127]  Le Faucheur, F., Ed., \"Russian Dolls Bandwidth Constraints\n\
    \              Model for Diffserv-aware MPLS Traffic Engineering\", RFC\n    \
    \          4127, June 2005.\n   [RFC4081]  Tschofenig, H. and D. Kroeselberg,\
    \ \"Security Threats for\n              Next Steps in Signaling (NSIS)\", RFC\
    \ 4081, June 2005.\n   [RFC5226]  Narten, T. and H. Alvestrand, \"Guidelines for\
    \ Writing an\n              IANA Considerations Section in RFCs\", BCP 26, RFC\
    \ 5226,\n              May 2008.\n   [RFC5866]  Sun, D., Ed., McCann, P., Tschofenig,\
    \ H., Tsou, T., Doria,\n              A., and G. Zorn, Ed., \"Diameter Quality-of-Service\n\
    \              Application\", RFC 5866, May 2010.\n   [RFC5978]  Manner, J., Bless,\
    \ R., Loughney, J., and E. Davies, Ed.,\n              \"Using and Extending the\
    \ NSIS Protocol Family\", RFC 5978,\n              October 2010.\n   [RMD1]  \
    \   Westberg, L., et al., \"Resource Management in Diffserv\n              (RMD):\
    \ A Functionality and Performance Behavior Overview\",\n              IFIP PfHSN\
    \ 2002.\n   [RMD2]     G. Karagiannis, et al., \"RMD - a lightweight application\n\
    \              of NSIS\" Networks 2004, Vienna, Austria.\n   [RMD3]     Marquetant\
    \ A., Pop O., Szabo R., Dinnyes G., Turanyi Z.,\n              \"Novel Enhancements\
    \ to Load Control - A Soft-State,\n              Lightweight Admission Control\
    \ Protocol\", Proc. of the 2nd\n              Int. Workshop on Quality of Future\
    \ Internet Services,\n              Coimbra, Portugal, Sept 24-26, 2001, pp. 82-96.\n\
    \   [RMD4]     A. Csaszar et al., \"Severe congestion handling with\n        \
    \      resource management in diffserv on demand\", Networking\n             \
    \ 2002.\n   [TaCh99]   P. P. Tang, T-Y Charles Tai, \"Network Traffic\n      \
    \        Characterization Using Token Bucket Model\", IEEE Infocom\n         \
    \     1999, The Conference on Computer Communications, no. 1,\n              March\
    \ 1999, pp. 51-62.\n   [ThCo04]   Thommes, R. W., Coates, M. J., \"Deterministic\
    \ packet\n              marking for congestion packet estimation\" Proc. IEEE\n\
    \              Infocom, 2004.\n"
- title: Appendix A.  Examples
  contents:
  - 'Appendix A.  Examples

    '
- title: A.1.  Example of a Re-Marking Operation during Severe Congestion in the
  contents:
  - "A.1.  Example of a Re-Marking Operation during Severe Congestion in the\n   \
    \   Interior Nodes\n   This appendix describes an example of a re-marking operation\
    \ during\n   severe congestion in the Interior nodes.\n   Per supported PHB, the\
    \ Interior node can support the operation states\n   depicted in Figure 26, when\
    \ the per-flow congestion notification\n   based on probing signaling scheme is\
    \ used in combination with this\n   severe congestion type.  Figure 27 depicts\
    \ the same functionality\n   when the per-flow congestion notification based on\
    \ probing scheme is\n   not used in combination with the severe congestion scheme.\
    \  The\n   description given in this and the following appendices, focuses on\n\
    \   the situation where: (1) the \"notified DSCP\" marking is used in\n   congestion\
    \ notification state, and (2) the \"encoded DSCP\" and\n   \"affected DSCP\" markings\
    \ are used in severe congestion state.  In\n   this case, the \"notified DSCP\"\
    \ marking is used during the congestion\n   notification state to mark all packets\
    \ passing through an Interior\n   node that operates in the congestion notification\
    \ state.  In this\n   way, and in combination with probing, a flow-based ECMP\
    \ solution can\n   be provided for the congestion notification state.  The \"\
    encoded\n   DSCP\" marking is used to encode and signal the excess rate, measured\n\
    \   at Interior nodes, to the Egress nodes.  The \"affected DSCP\" marking\n \
    \  is used to mark all packets that are passing through a severe\n   congested\
    \ node and are not \"encoded DSCP\" marked.\n   Another possible situation could\
    \ be derived in which both congestion\n   notification and severe congestion state\
    \ use the \"encoded DSCP\"\n   marking, without using the \"notified DSCP\" marking.\
    \  The \"affected\n   DSCP\" marking is used to mark all packets that pass through\
    \ an\n   Interior node that is in severe congestion state and are not \"encoded\n\
    \   DSCP\" marked.  In addition, the probe packet that is carried by an\n   intra-domain\
    \ RESERVE message and pass through Interior nodes SHOULD\n   be \"encoded DSCP\"\
    \ marked if the Interior node is in congestion\n   notification or severe congestion\
    \ states.  Otherwise, the probe\n   packet will remain unmarked.  In this way,\
    \ an ECMP solution can be\n   provided for both congestion notification and severe\
    \ congestion\n   states.  The\"encoded DSCP\" packets signal an excess rate that\
    \ is not\n   only associated with Interior nodes that are in severe congestion\n\
    \   state, but also with Interior nodes that are in congestion\n   notification\
    \ state.  The algorithm at the Interior node is similar to\n   the algorithm described\
    \ in the following appendix sections.  However,\n   this method is not described\
    \ in detail in this example.\n           ---------------------------------------------\n\
    \          |        event B                              |\n          |      \
    \                                       V\n       ----------             -------------\
    \           ----------\n      | Normal   |  event A  | Congestion  | event B |\
    \ Severe   |\n      |  state   |---------->| notification|-------->|congestion|\n\
    \      |          |           |  state      |         |  state   |\n       ----------\
    \             -------------           ----------\n        ^  ^               \
    \        |                     |\n        |  |      event C          |       \
    \              |\n        |   -----------------------                      |\n\
    \        |         event D                                |\n         ------------------------------------------------\n\
    \   Figure 26: States of operation, severe congestion combined with\n        \
    \      congestion notification based on probing\n       ----------           \
    \      -------------\n      | Normal   |  event B      | Severe      |\n     \
    \ |  state   |-------------->| congestion  |\n      |          |             \
    \  |  state      |\n       ----------                 -------------\n        \
    \   ^                           |\n           |      event E              |\n\
    \            ---------------------------\n   Figure 27: States of operation, severe\
    \ congestion without\n              congestion notification based on probing\n\
    \   The terms used in Figures 26 and 27 are:\n   Normal state: represents the\
    \ normal operation conditions of the node,\n   i.e., no congestion.\n   Severe\
    \ congestion state: represents the state in which the Interior\n   node is severely\
    \ congested related to a certain PHB.  It is important\n   to emphasize that one\
    \ of the targets of the severe congestion state\n   solution to change the severe\
    \ congestion state behavior directly to\n   the normal state.\n   Congestion notification:\
    \ state in which the load is relatively high,\n   close to the level when congestion\
    \ can occur.\n   event A: this event occurs when the incoming PHB rate is higher\
    \ than\n   the \"congestion notification detection\" threshold and lower than\
    \ the\n   \"severe congestion detection\".  This threshold is used by the\n  \
    \ congestion notification based on probing scheme, see Sections 4.6.1.7\n   and\
    \ 4.6.2.6.\n   event B: this event occurs when the incoming PHB rate is higher\
    \ than\n   the \"severe congestion detection\" threshold.\n   event C: this event\
    \ occurs when the incoming PHB rate is lower than\n   or equal to the \"congestion\
    \ notification detection\" threshold.\n   event D: this event occurs when the\
    \ incoming PHB rate is lower than\n   or equal to the \"severe_congestion_restoration\"\
    \ threshold.  It is\n   important to emphasize that this even supports one of\
    \ the targets of\n   the severe congestion state solution to change the severe\
    \ congestion\n   state behavior directly to the normal state.\n   event E: this\
    \ event occurs when the incoming PHB rate is lower than\n   or equal to the \"\
    severe congestion restoration\" threshold.\n   Note that the \"severe congestion\
    \ detection\", \"severe congestion\n   restoration\" and admission thresholds\
    \ SHOULD be higher than the\n   \"congestion notification detection\" threshold,\
    \ i.e., \"severe\n   congestion detection\" > \"congestion notification detection\"\
    \ and\n   \"severe congestion restoration\" > \"congestion notification\n   detection\"\
    .\n   Furthermore, the \"severe congestion detection\" threshold SHOULD be\n \
    \  higher than or equal to the admission threshold that is used by the\n   reservation-based\
    \ and NSIS measurement-based signaling schemes.\n   \"severe congestion detection\"\
    \ >= admission threshold.\n   Moreover, the \"severe congestion restoration\"\
    \ threshold SHOULD be\n   lower than or equal to the \"severe congestion detection\"\
    \ threshold\n   that is used by the reservation-based and NSIS measurement-based\n\
    \   signaling schemes, that is:\n   \"severe congestion restoration\" <= \"severe\
    \ congestion detection\"\n   During severe congestion, the Interior node calculates,\
    \ per traffic\n   class (PHB), the incoming rate that is above the \"severe congestion\n\
    \   restoration\" threshold, denoted as signaled_overload_rate, in the\n   following\
    \ way:\n   *  A severe congested Interior node SHOULD take into account that\n\
    \      packets might be dropped.  Therefore, before queuing and\n      eventually\
    \ dropping packets, the Interior node SHOULD count the\n      total number of\
    \ unmarked and re-marked bytes received by the\n      severe congested node, denote\
    \ this number as total_received_bytes.\n      Note that there are situations in\
    \ which more than one Interior\n      node in the same path become severely congested.\
    \  Therefore, any\n      Interior node located behind a severely congested node\
    \ MAY receive\n      marked bytes.\n   When the \"severe congestion detection\"\
    \ threshold per PHB is set equal\n   to the maximum capacity allocated to one\
    \ PHB used by the RMD-QOSM, it\n   means that if the maximum capacity associated\
    \ to a PHB is fully\n   utilized and a packet belonging to this PHB arrives, then\
    \ it is\n   assumed that the Interior node will not forward this packet\n   downstream.\n\
    \   In other words, this packet will either be dropped or set to another\n   PHB.\
    \  Furthermore, this also means that after the severe congestion\n   situation\
    \ is solved, then the ongoing flows will be able to send\n   their associated\
    \ packets up to a total rate equal to the maximum\n   capacity associated with\
    \ the PHB.  Therefore, when more than one\n   Interior node located on the same\
    \ path will be severely congested and\n   when the Interior node receives \"encoded\
    \ DSCP\" marked packets, it\n   means that an Interior node located upstream is\
    \ also severely\n   congested.\n   When the \"severe congestion detection\" threshold\
    \ per PHB is set equal\n   to the maximum capacity allocated to one PHB, then\
    \ this Interior node\n   MUST forward the \"encoded DSCP\" marked packets and\
    \ it SHOULD NOT\n   consider these packets during its local re-marking process.\
    \  In other\n   words, the Egress should see the excess rates encoded by the\n\
    \   different severely congested Interior nodes as independent, and\n   therefore,\
    \ these independent excess rates will be added.\n   When the \"severe congestion\
    \ detection\" threshold per PHB is not set\n   equal to the maximum capacity allocated\
    \ to one PHB, this means that\n   after the severe congestion situation is solved,\
    \ the ongoing flows\n   will not be able to send their associated packets up to\
    \ a total rate\n   equal to the maximum capacity associated with the PHB, but\
    \ only up to\n   the \"severe_congestion_threshold\".  When more than one Interior\
    \ node\n   located on the same communication path is severely congested and when\n\
    \   one of these Interior node receives \"encoded_DSCP\" marked packets,\n   this\
    \ Interior node SHOULD NOT mark unmarked, i.e., either \"original\n   DSCP\" or\
    \ \"affected DSCP\" or \"notified DSCP\" encoded packets, up to a\n   rate equal\
    \ to the difference between the maximum PHB capacity and the\n   \"severe congestion\
    \ threshold\", when the incoming \"encoded DSCP\"\n   marked packets are already\
    \ able to signal this difference.  In this\n   case, the \"severe congestion threshold\"\
    \ SHOULD be configured in all\n   Interior nodes, which are located in the RMD\
    \ domain, and equal to:\n   \"severe_congestion_threshold\" =\n      Maximum PHB\
    \ capacity - threshold_offset_rate\n   The threshold_offset_rate represents rate\
    \ and SHOULD have the same\n   value in all Interior nodes.\n   *  before queuing\
    \ and eventually dropping the packets, at the end of\n      each measurement interval\
    \ of T seconds, calculate the current\n      estimated overloaded rate, say measured_overload_rate,\
    \ by using\n      the following equation:\n   measured_overload_rate =\n   =((total_received_bytes)/T)-severe_congestion_restoration)\n\
    \   To provide a reliable estimation of the encoded information, several\n   techniques\
    \ can be used; see [AtLi01], [AdCa03], [ThCo04], and\n   [AnHa06].  Note that\
    \ since marking is done in Interior nodes, the\n   decisions are made at Egress\
    \ nodes, and the termination of flows is\n   performed by Ingress nodes, there\
    \ is a significant delay until the\n   overload information is learned by the\
    \ Ingress nodes (see Section 6\n   of [CsTa05]).  The delay consists of the trip\
    \ time of data packets\n   from the severely congested Interior node to the Egress,\
    \ the\n   measurement interval, i.e., T, and the trip time of the notification\n\
    \   signaling messages from Egress to Ingress.  Moreover, until the\n   overload\
    \ decreases at the severely congested Interior node, an\n   additional trip time\
    \ from the Ingress node to the severely congested\n   Interior node MUST expire.\
    \  This is because immediately before\n   receiving the congestion notification,\
    \ the Ingress MAY have sent out\n   packets in the flows that were selected for\
    \ termination.  That is, a\n   terminated flow MAY contribute to congestion for\
    \ a time longer that\n   is taken from the Ingress to the Interior node.  Without\
    \ considering\n   the above, Interior nodes would continue marking the packets\
    \ until\n   the measured utilization falls below the severe congestion\n   restoration\
    \ threshold.  In this way, in the end, more flows will be\n   terminated than\
    \ necessary, i.e., an overreaction takes place.\n   [CsTa05] provides a solution\
    \ to this problem, where the Interior\n   nodes use a sliding window memory to\
    \ keep track of the signaling\n   overload in a couple of previous measurement\
    \ intervals.  At the end\n   of a measurement interval, T, before encoding and\
    \ signaling the\n   overloaded rate as \"encoded DSCP\" packets, the actual overload\
    \ is\n   decreased with the sum of already signaled overload stored in the\n \
    \  sliding window memory, since that overload is already being handled\n   in\
    \ the severe congestion handling control loop.  The sliding window\n   memory\
    \ consists of an integer number of cells, i.e., n = maximum\n   number of cells.\
    \  Guidelines for configuring the sliding window\n   parameters are given in [CsTa05].\n\
    \   At the end of each measurement interval, the newest calculated\n   overload\
    \ is pushed into the memory, and the oldest cell is dropped.\n   If Mi is the\
    \ overload_rate stored in ith memory cell (i = [1..n]),\n   then at the end of\
    \ every measurement interval, the overload rate that\n   is signaled to the Egress\
    \ node, i.e., signaled_overload_rate is\n   calculated as follows:\n   Sum_Mi\
    \ =0\n   For i =1 to n\n   {\n   Sum_Mi = Sum_Mi + Mi\n   }\n   signaled_overload_rate\
    \ = measured_overload_rate - Sum_Mi,\n   where Sum_Mi is calculated as above.\n\
    \   Next, the sliding memory is updated as follows:\n       for i = 1..(n-1):\
    \ Mi <- Mi+1\n       Mn <- signaled_overload_rate\n   The bytes that have to be\
    \ re-marked to satisfy the signaled overload\n   rate: signaled_remarked_bytes,\
    \ are calculated using the following\n   pseudocode:\n   IF severe_congestion_threshold\
    \ <> Maximum PHB capacity\n   THEN\n    {\n     IF (incoming_encoded-DSCP_rate\
    \ <> 0) AND\n        (incoming_encoded-DSCP_rate =< termination_offset_rate)\n\
    \     THEN\n        { signaled_remarked_bytes =\n         = ((signaled_overload_rate\
    \ - incoming_encoded-DSCP_rate)*T)/N\n        }\n     ELSE IF (incoming_encoded-DSCP_rate\
    \ > termination_offset_rate)\n     THEN signaled_remarked_bytes =\n         =\
    \ ((signaled_overload_rate - termination_offset_rate)*T)/N\n     ELSE IF (incoming_encoded-DSCP_rate\
    \ =0)\n     THEN signaled_remarked_bytes =\n         = signaled_overload_rate*T/N\n\
    \     }\n    ELSE signaled_remarked_bytes =  signaled_overload_rate *T/N\n   \
    \ Where the incoming \"encoded DSCP\" rate is calculated as follows:\n    incoming_encoded-DSCP_rate\
    \ =\n     = (received number of \"encoded_DSCP\" during T) * N)/T;\n   The signal_remarked_bytes\
    \ also represents the number of the outgoing\n   packets (after the dropping stage)\
    \ that MUST be re-marked, during\n   each measurement interval T, by a node when\
    \ operates in severe\n   congestion mode.\n   Note that, in order to process an\
    \ overload situation higher than 100%\n   of the maintained severe congestion\
    \ threshold, all the nodes within\n   the domain MUST be configured and maintain\
    \ a scaling parameter, e.g.,\n   N used in the above equation, which in combination\
    \ with the marked\n   bytes, e.g., signaled_remarked_bytes, such a high overload\
    \ situation\n   can be calculated and represented.  N can be equal to or higher\
    \ than\n   1.\n   Note that when incoming re-marked bytes are dropped, the operation\
    \ of\n   the severe congestion algorithm MAY be affected, e.g., the algorithm\n\
    \   MAY become, in certain situations, slower.  An implementation of the\n   algorithm\
    \ MAY assure as much as possible that the incoming marked\n   bytes are not dropped.\
    \  This could for example be accomplished by\n   using different dropping rate\
    \ thresholds for marked and unmarked\n   bytes.\n   Note that when the \"affected\
    \ DSCP\" marking is used by a node that is\n   congested due to a severe congestion\
    \ situation, then all the outgoing\n   packets that are not marked (i.e., by using\
    \ the \"encoded DSCP\") have\n   to be re-marked using the \"affected DSCP\" marking.\n\
    \   The \"encoded DSCP\" and the \"affected DSCP\" marked packets (when\n   applied\
    \ in the whole RMD domain) are propagated to the QNE Edge\n   nodes.\n   Furthermore,\
    \ note that when the congestion notification based on\n   probing is used in combination\
    \ with severe congestion, then in\n   addition to the possible \"encoded DSCP\"\
    \ and \"affected DSCP\", another\n   DSCP for the re-marking of the same PHB is\
    \ used (see Section\n   4.6.1.7).  This additional DSCP is denoted in this document\
    \ as\n   \"notified DSCP\".  When an Interior node operates in the severe\n  \
    \ congested state (see Figure 27), and receives \"notified DSCP\"\n   packets,\
    \ these packets are considered to be unmarked packets (but not\n   \"affected\
    \ DSCP\" packets).  This means that during severe congestion,\n   also the \"\
    notified DSCP\" packets can be re-marked and encoded as\n   either \"encoded DSCP\"\
    \ or \"affected DSCP\" packets.\n"
- title: A.2.  Example of a Detailed Severe Congestion Operation in the Egress
  contents:
  - "A.2.  Example of a Detailed Severe Congestion Operation in the Egress\n     \
    \ Nodes\n   This appendix describes an example of a detailed severe congestion\n\
    \   operation in the Egress nodes.\n   The states of operation in Egress nodes\
    \ are similar to the ones\n   described in Appendix A.1.  The definition of the\
    \ events, see below,\n   is however different than the definition of the events\
    \ given in\n   Figures 26 and 27:\n   *  event A: when the Egress receives a predefined\
    \ rate of \"notified\n      DSCP\" marked bytes/packets, event A is activated\
    \ (see Sections\n      4.6.1.7 and A.4).  The predefined rate of \"notified DSCP\"\
    \ marked\n      bytes is denoted as the congestion notification detection\n  \
    \    threshold.  Note this congestion notification detection threshold\n     \
    \ can also be zero, meaning that the event A is activated when the\n      Egress\
    \ node, during an interval T, receives at least one \"notified\n      DSCP\" packet.\n\
    \   *  event B: this event occurs when the Egress receives packets marked\n  \
    \    as either \"encoded DSCP\" or \"affected DSCP\" (when \"affected DSCP\"\n\
    \      is applied in the whole RMD domain).\n   *  event C: this event occurs\
    \ when the rate of incoming \"notified\n      DSCP\" packets decreases below the\
    \ congestion notification\n      detection threshold.  In the situation that the\
    \ congestion\n      notification detection threshold is zero, this will mean that\n\
    \      event C is activated when the Egress node, during an interval T,\n    \
    \  does not receive any \"notified DSCP\" marked packets.\n   *  event D: this\
    \ event occurs when the Egress, during an interval T,\n      does not receive\
    \ packets marked as either \"encoded DSCP\" or\n      \"affected DSCP\" (when\
    \ \"affected DSCP\" is applied in the whole RMD\n      domain).  Note that when\
    \ \"notified DSCP\" is applied in the whole\n      RMD domain for the support\
    \ of congestion notification, this event\n      could cause the following change\
    \ in operation state.\n      When the Egress, during an interval T, does not receive\
    \ (1)\n      packets marked as either \"encoded DSCP\" or \"affected DSCP\" (when\n\
    \      \"affected DSCP\" is applied in the whole RMD domain) and (2) it\n    \
    \  does NOT receive \"notified DSCP\" marked packets, the change in the\n    \
    \  operation state occurs from the severe congestion state to normal\n      state.\n\
    \      When the Egress, during an interval T, does not receive (1)\n      packets\
    \ marked as either \"encoded DSCP\" or \"affected DSCP\" (when\n      \"affected\
    \ DSCP\" is applied in the whole RMD domain) and (2) it\n      does receive \"\
    notified DSCP\" marked packets, the change in the\n      operation state occurs\
    \ from the severe congestion state to the\n      congestion notification state.\n\
    \   *  event E: this event occurs when the Egress, during an interval T,\n   \
    \   does not receive packets marked as either \"encoded DSCP\" or\n      \"affected\
    \ DSCP\" (when \"affected DSCP\" is applied in the whole RMD\n      domain).\n\
    \   An example of the algorithm for calculation of the number of flows\n   associated\
    \ with each priority class that have to be terminated is\n   explained by the\
    \ pseudocode below.\n   The Edge nodes are able to support severe congestion handling\
    \ by: (1)\n   identifying which flows were affected by the severe congestion and\n\
    \   (2) selecting and terminating some of these flows such that the\n   quality\
    \ of service of the remaining flows is recovered.\n   The \"encoded DSCP\" and\
    \ the \"affected DSCP\" marked packets (when\n   applied in the whole RMD domain)\
    \ are received by the QNE Edge node.\n   The QNE Edge nodes keep per-flow state\
    \ and therefore they can\n   translate the calculated bandwidth to be terminated,\
    \ to number of\n   flows.  The QNE Egress node records the excess rate and the\
    \ identity\n   of all the flows, arriving at the QNE Egress node, with \"encoded\n\
    \   DSCP\" and with \"affected DSCP\" (when applied in the whole RMD\n   domain);\
    \ only these flows, which are the ones passing through the\n   severely congested\
    \ Interior node(s), are candidates for termination.\n   The excess rate is calculated\
    \ by measuring the rate of all the\n   \"encoded DSCP\" data packets that arrive\
    \ at the QNE Egress node.  The\n   measured excess rate is converted by the Egress\
    \ node, by multiplying\n   it by the factor N, which was used by the QNE Interior\
    \ node(s) to\n   encode the overload level.\n   When different priority flows\
    \ are supported, all the low priority\n   flows that arrived at the Egress node\
    \ are terminated first.  Next,\n   all the medium priority flows are stopped and\
    \ finally, if necessary,\n   even high priority flows are chosen.  Within a priority\
    \ class both\n   \"encoded DSCP\" and \"affected DSCP\" are considered before\
    \ the\n   mechanism moves to higher priority class.  Finally, for each flow\n\
    \   that has to be terminated the Egress node, sends a NOTIFY message to\n   the\
    \ Ingress node, which stops the flow.\n   Below, this algorithm is described in\
    \ detail.\n   First, when the Egress operates in the severe congestion state,\
    \ the\n   total amount of re-marked bandwidth associated with the PHB traffic\n\
    \   class, say total_congested_bandwidth, is calculated.  Note that when\n   the\
    \ node maintains information about each Ingress/Egress pair\n   aggregate, then\
    \ the total_congested_bandwidth MUST be calculated per\n   Ingress/Egress pair\
    \ reservation aggregate.  This bandwidth represents\n   the severely congested\
    \ bandwidth that SHOULD be terminated.  The\n   total_congested_bandwidth can\
    \ be calculated as follows:\n   total_congested_bandwidth = N*input_remarked_bytes/T\n\
    \   Where, input_remarked_bytes represents the number of \"encoded DSCP\"\n  \
    \ marked bytes that arrive at the Egress, during one measurement\n   interval\
    \ T, N is defined as in Sections 4.6.1.6.2.1 and A.1.  The\n   term denoted as\
    \ terminated_bandwidth is a temporal variable\n   representing the total bandwidth\
    \ that has to be terminated, belonging\n   to the same PHB traffic class.  The\
    \ terminate_flow_bandwidth\n   (priority_class) is the total bandwidth associated\
    \ with flows of\n   priority class equal to priority_class.  The parameter priority_class\n\
    \   is an integer fulfilling:\n   0 =< priority_class =< Maximum_priority.\n \
    \  The QNE Egress node records the identity of the QNE Ingress node that\n   forwarded\
    \ each flow, the total_congested_bandwidth and the identity\n   of all the flows,\
    \ arriving at the QNE Egress node, with \"encoded\n   DSCP\" and \"affected DSCP\"\
    \ (when applied in whole RMD domain).  This\n   ensures that only these flows,\
    \ which are the ones passing through the\n   severely overloaded QNE Interior\
    \ node(s), are candidates for\n   termination.  The selection of the flows to\
    \ be terminated is\n   described in the pseudocode that is given below, which\
    \ is realized by\n   the function denoted below as calculate_terminate_flows().\n\
    \   The calculate_terminate_flows() function uses the\n   <terminate_bandwidth_class>\
    \ value and translates this bandwidth value\n   to number of flows that have to\
    \ be terminated.  Only the \"encoded\n   DSCP\" flows and \"affected DSCP\" (when\
    \ applied in whole RMD domain)\n   flows, which are the ones passing through the\
    \ severely overloaded\n   Interior node(s), are candidates for termination.\n\
    \   After the flows to be terminated are selected, the\n   <sum_bandwidth_terminate(priority_class)>\
    \ value is calculated that is\n   the sum of the bandwidth associated with the\
    \ flows, belonging to a\n   certain priority class, which will certainly be terminated.\n\
    \   The constraint of finding the total number of flows that have to be\n   terminated\
    \ is that sum_bandwidth_terminate(priority_class), SHOULD be\n   smaller or approximately\
    \ equal to the variable\n   terminate_bandwidth(priority_class).\n   terminated_bandwidth\
    \ = 0;\n   priority_class = 0;\n   while terminated_bandwidth < total_congested_bandwidth\n\
    \    {\n     terminate_bandwidth(priority_class) =\n     = total_congested_bandwidth\
    \ - terminated_bandwidth\n     calculate_terminate_flows(priority_class);\n  \
    \   terminated_bandwidth =\n     = sum_bandwidth_terminate(priority_class) + terminated_bandwidth;\n\
    \     priority_class = priority_class + 1;\n    }\n   If the Egress node maintains\
    \ Ingress/Egress pair reservation\n   aggregates, then the above algorithm is\
    \ performed for each\n   Ingress/Egress pair reservation aggregate.\n   Finally,\
    \ for each flow that has to be terminated, the QNE Egress node\n   sends a NOTIFY\
    \ message to the QNE Ingress node to terminate the flow.\n"
- title: A.3.  Example of a Detailed Re-Marking Admission Control (Congestion
  contents:
  - "A.3.  Example of a Detailed Re-Marking Admission Control (Congestion\n      Notification)\
    \ Operation in Interior Nodes\n   This appendix describes an example of a detailed\
    \ re-marking admission\n   control (congestion notification) operation in Interior\
    \ nodes.  The\n   predefined congestion notification threshold, see Appendix A.1,\
    \ is\n   set according to, and usually less than, an engineered bandwidth\n  \
    \ limitation, i.e., admission threshold, e.g., based on a Service Level\n   Agreement\
    \ or a capacity limitation of specific links.\n   The difference between the congestion\
    \ notification threshold and the\n   engineered bandwidth limitation, i.e., admission\
    \ threshold, provides\n   an interval where the signaling information on resource\
    \ limitation is\n   already sent by a node but the actual resource limitation\
    \ is not\n   reached.  This is due to the fact that data packets associated with\n\
    \   an admitted session have not yet arrived, which allows the admission\n   control\
    \ process available at the Egress to interpret the signaling\n   information and\
    \ reject new calls before reaching congestion.\n   Note that in the situation\
    \ when the data rate is higher than the\n   preconfigured congestion notification\
    \ rate, data packets are also re-\n   marked (see Section 4.6.1.6.2.1).  To distinguish\
    \ between congestion\n   notification and severe congestion, two methods MAY be\
    \ used (see\n   Appendix A.1):\n   *  using different <DSCP> values (re-marked\
    \ <DSCP> values).  The re-\n      marked DSCP that is used for this purpose is\
    \ denoted as \"notified\n      DSCP\" in this document.  When this method is used\
    \ and when the\n      Interior node is in \"congestion notification\" state, see\
    \ Appendix\n      A.1, then the node SHOULD re-mark all the unmarked bytes passing\n\
    \      through the node using the \"notified DSCP\".  Note that this method\n\
    \      can only be applied if all nodes in the RMD domain use the\n      \"notified\"\
    \ DSCP marking.  In this way, probe packets that will\n      pass through the\
    \ Interior node that operates in congestion\n      notification state are also\
    \ encoded using the \"notified DSCP\"\n      marking.\n   *  Using the \"encoded\
    \ DSCP\" marking for congestion notification and\n      severe congestion.  This\
    \ method is not described in detail in this\n      example appendix.\n"
- title: A.4.  Example of a Detailed Admission Control (Congestion Notification)
  contents:
  - "A.4.  Example of a Detailed Admission Control (Congestion Notification)\n   \
    \   Operation in Egress Nodes\n   This appendix describes an example of a detailed\
    \ admission control\n   (congestion notification) operation in Egress nodes.\n\
    \   The admission control congestion notification procedure can be\n   applied\
    \ only if the Egress maintains the Ingress/Egress pair\n   aggregate.  When the\
    \ operation state of the Ingress/Egress pair\n   aggregate is the \"congestion\
    \ notification\", see Appendix A.2, then\n   the implementation of the algorithm\
    \ depends on how the congestion\n   notification situation is notified to the\
    \ Egress.  As mentioned in\n   Appendix A.3, two methods are used:\n   *  using\
    \ the \"notified DSCP\".  During a measurement interval T, the\n      Egress counts\
    \ the number of \"notified DSCP\" marked bytes that\n      belong to the same\
    \ PHB and are associated with the same\n      Ingress/Egress pair aggregate, say\
    \ input_notified_bytes.  We\n      denote the rate as incoming_notified_rate.\n\
    \   *  using the \"encoded DSCP\".  In this case, during a measurement\n     \
    \ interval T, the Egress measures the input_notified_bytes by\n      counting\
    \ the \"encoded DSCP\" bytes.\n   Below only the detail description of the first\
    \ method is given.\n   The incoming congestion_rate can be then calculated as\
    \ follows:\n      incoming_congestion_rate = input_notified_bytes/T\n   If the\
    \ incoming_congestion_rate is higher than a preconfigured\n   congestion notification\
    \ threshold, then the communication path\n   between Ingress and Egress is considered\
    \ to be congested.  Note that\n   the pre-congestion notification threshold can\
    \ be set to \"0\".  In this\n   case, the Egress node will operate in congestion\
    \ notification state\n   at the moment that it receives at least one \"notified\
    \ DSCP\" encoded\n   packet.\n   When the Egress node operates in \"congestion\
    \ notification\" state and\n   if the end-to-end RESERVE (probe) arrives at the\
    \ Egress, then this\n   request SHOULD be rejected.  Note that this happens only\
    \ when the\n   probe packet is either \"notified DSCP\" or \"encoded DSCP\" marked.\
    \  In\n   this way, it is ensured that the end-to-end RESERVE (probe) packet\n\
    \   passed through the node that is congested.  This feature is very\n   useful\
    \ when ECMP-based routing is used to detect only flows that are\n   passing through\
    \ the congested router.\n   If such an Ingress/Egress pair aggregated state is\
    \ not available when\n   the (probe) RESERVE message arrives at the Egress, then\
    \ this request\n   is accepted if the DSCP of the packet carrying the RESERVE\
    \ message is\n   unmarked.  Otherwise (if the packet is either \"notified DSCP\"\
    \ or\n   \"encoded DSCP\" marked), it is rejected.\n"
- title: A.5.  Example of Selecting Bidirectional Flows for Termination during
  contents:
  - "A.5.  Example of Selecting Bidirectional Flows for Termination during\n     \
    \ Severe Congestion\n   This appendix describes an example of selecting bidirectional\
    \ flows\n   for termination during severe congestion.\n   When a severe congestion\
    \ occurs, e.g., in the forward path, and when\n   the algorithm terminates flows\
    \ to solve the severe congestion in the\n   forward path, then the reserved bandwidth\
    \ associated with the\n   terminated bidirectional flows is also released.  Therefore,\
    \ a\n   careful selection of the flows that have to be terminated SHOULD take\n\
    \   place.  A possible method of selecting the flows belonging to the\n   same\
    \ priority type passing through the severe congestion point on a\n   unidirectional\
    \ path can be the following:\n   *  the Egress node SHOULD select, if possible,\
    \ first unidirectional\n      flows instead of bidirectional flows.\n   *  the\
    \ Egress node SHOULD select, if possible, bidirectional flows\n      that reserved\
    \ a relatively small amount of resources on the path\n      reversed to the path\
    \ of congestion.\n"
- title: A.6.  Example of a Severe Congestion Solution for Bidirectional Flows
  contents:
  - "A.6.  Example of a Severe Congestion Solution for Bidirectional Flows\n     \
    \ Congested Simultaneously on Forward and Reverse Paths\n   This appendix describes\
    \ an example of a severe congestion solution\n   for bidirectional flows congested\
    \ simultaneously on forward and\n   reverse paths.\n   This scenario describes\
    \ a solution using the combination of the\n   severe congestion solutions described\
    \ in Section 4.6.2.5.2.  It is\n   considered that the severe congestion occurs\
    \ simultaneously in\n   forward and reverse directions, which MAY affect the same\n\
    \   bidirectional flows.\n   When the QNE Edges maintain per-flow intra-domain\
    \ QoS-NSLP\n   operational states, the steps can be the following, see Figure\
    \ A.3.\n   Consider that the Egress node selects a number of bidirectional flows\n\
    \   to be terminated.  In this case, the Egress will send, for each\n   bidirectional\
    \ flow, a NOTIFY message to Ingress.  If the Ingress\n   receives these NOTIFY\
    \ messages and its operational state (associated\n   with reverse path) is in\
    \ the severe congestion state (see Figures 26\n   and 27), then the Ingress operates\
    \ in the following way:\n   *  For each NOTIFY message, the Ingress SHOULD identify\
    \ the\n      bidirectional flows that have to be terminated.\n   *  The Ingress\
    \ then calculates the total bandwidth that SHOULD be\n      released in the reverse\
    \ direction (thus not in forward direction)\n      if the bidirectional flows\
    \ will be terminated (preempted), say\n      \"notify_reverse_bandwidth\".  This\
    \ bandwidth can be calculated by\n      the sum of the bandwidth values associated\
    \ with all the end-to-end\n      sessions that received a (severe congestion)\
    \ NOTIFY message.\n   *  Furthermore, using the received marked packets (from\
    \ the reverse\n      path) the Ingress will calculate, using the algorithm used\
    \ by an\n      Egress and described in Appendix A.2, the total bandwidth that\
    \ has\n      to be terminated in order to solve the congestion in the reverse\n\
    \      path direction, say \"marked_reverse_bandwidth\".\n   *  The Ingress then\
    \ calculates the bandwidth of the additional flows\n      that have to be terminated,\
    \ say \"additional_reverse_bandwidth\", in\n      order to solve the severe congestion\
    \ in reverse direction, by\n      taking into account:\n   ** the bandwidth in\
    \ the reverse direction of the bidirectional flows\n      that were appointed\
    \ by the Egress (the ones that received a NOTIFY\n      message) to be preempted,\
    \ i.e., \"notify_reverse_bandwidth\".\n   ** the total amount of bandwidth in\
    \ the reverse direction that has\n      been calculated by using the received\
    \ marked packets, i.e.,\n      \"marked_reverse_bandwidth\".\n"
- title: QNE(Ingress)     NE (int.)    NE (int.)       NE (int.)     QNE(Egress)
  contents:
  - 'QNE(Ingress)     NE (int.)    NE (int.)       NE (int.)     QNE(Egress)

    '
- title: NTLP stateful                                             NTLP stateful
  contents:
  - 'NTLP stateful                                             NTLP stateful

    '
- title: data|    user        |                |           |               |
  contents:
  - 'data|    user        |                |           |               |

    '
- title: '--->|    data        | #unmarked bytes|           |               |'
  contents:
  - "--->|    data        | #unmarked bytes|           |               |\n    |--------------->S\
    \ #marked bytes  |           |               |\n    |                S--------------------------->|\
    \               |\n    |                |                |           |-------------->|data\n\
    \    |                |                |           |               |--->\n   \
    \ |                |                |           |              Term.?\n    | \
    \           NOTIFY               |           |               |Yes\n    |<------------------------------------------------------------|\n\
    \    |                |                |           |               |data\n   \
    \ |                |                |  user     |               |<---\n    | \
    \  user data    |                |  data     |<--------------|\n    | (#marked\
    \ bytes)|                S<----------|               |\n    |<--------------------------------S\
    \           |               |\n    | (#unmarked bytes)               S       \
    \    |               |\n"
- title: Term|<--------------------------------S           |               |
  contents:
  - 'Term|<--------------------------------S           |               |

    '
- title: Flow?                |                S           |               |
  contents:
  - 'Flow?                |                S           |               |

    '
- title: 'YES |RESERVE(RMD-QSPEC):              S           |               |'
  contents:
  - "YES |RESERVE(RMD-QSPEC):              S           |               |\n    |\"\
    forward - T tear\"               s           |               |\n    |--------------->|\
    \  RESERVE(RMD-QSPEC):       |               |\n    |                |  \"forward\
    \ - T tear\"        |               |\n    |                |--------------------------->|\
    \               |\n    |                |                S           |-------------->|\n\
    \    |                |                S         RESERVE(RMD-QSPEC):\n    |  \
    \              |                S       \"reverse - T tear\"  |\n    |      RESERVE(RMD-QSPEC)\
    \         S           |<--------------|\n    |      \"reverse - T tear\"     \
    \    S<----------|               |\n    |<--------------------------------S  \
    \         |               |\n  Figure 28: Intra-domain RMD severe congestion handling\
    \ for\n             bidirectional reservation (congestion in both forward\n  \
    \           and reverse direction)\n   This additional bandwidth can be calculated\
    \ using the following\n   algorithm:\n   IF (\"marked_reverse_bandwidth\" > \"\
    notify_reverse_bandwidth\") THEN\n   \"additional_reverse_bandwidth\" =\n    =\
    \ \"marked_reverse_bandwidth\"- \"notify_reverse_bandwidth\";\n   ELSE\n   \"\
    additional_reverse_bandwidth\" = 0\n   *  Ingress terminates the flows that experienced\
    \ a severe congestion\n      in the forward path and received a (severe congestion)\
    \ NOTIFY\n      message.\n      *  If possible, the Ingress SHOULD terminate unidirectional\
    \ flows\n         that use the same Egress-Ingress reverse direction\n       \
    \  communication path to satisfy the release of a total bandwidth\n         up\
    \ equal to the \"additional_reverse_bandwidth\", see Appendix\n         A.5.\n\
    \      *  If the number of REQUIRED unidirectional flows (to satisfy the\n   \
    \      above issue) is not available, then a number of bidirectional\n       \
    \  flows that are using the same Egress-Ingress reverse direction\n         communication\
    \ path MAY be selected for preemption in order to\n         satisfy the release\
    \ of a total bandwidth equal up to the\n         \"additional_reverse_bandwidth\"\
    .  Note that using the guidelines\n         given in Appendix A.5, first the bidirectional\
    \ flows that\n         reserved a relatively small amount of resources on the\
    \ path\n         reversed to the path of congestion SHOULD be selected for\n \
    \        termination.\n         When the QNE Edges maintain aggregated intra-domain\
    \ QoS-NSLP\n         operational states, the steps can be the following.\n   \
    \   *  The Egress calculates the bandwidth to be terminated using the\n      \
    \   same method as described in Section 4.6.1.6.2.2.  The Egress\n         includes\
    \ this bandwidth value in a <PDR Bandwidth> within a\n         \"PDR_Congestion_Report\"\
    \ container that is carried by the end-\n         to-end NOTIFY message.\n   \
    \   *  The Ingress receives the NOTIFY message and reads the <PDR\n         Bandwidth>\
    \ value included in the \"PDR_Congestion_Report\"\n         container.  Note that\
    \ this value is denoted as\n         \"notify_reverse_bandwidth\" in the situation\
    \ that the QNE Edges\n         maintain per-flow intra-domain QoS-NSLP operational\
    \ states, but\n         is calculated differently.  The variables\n         \"\
    marked_reverse_bandwidth\" and \"additional_reverse_bandwidth\"\n         are\
    \ calculated using the same steps as explained for the\n         situation that\
    \ the QNE Edges maintain per-flow intra-domain\n         QoS-NSLP states.\n  \
    \    *  Regarding the termination of flows that use the same Egress-\n       \
    \  Ingress reverse direction communication path, the Ingress can\n         follow\
    \ the same procedures as the situation that the QNE Edges\n         maintain per-flow\
    \ intra-domain QoS-NSLP operational states.\n         The RMD-aggregated (reduced-state)\
    \ reservations maintained by\n         the Interior nodes, can be reduced in the\
    \ \"forward\" and\n         \"reverse\" directions by using the procedure described\
    \ in\n         Section 4.6.2.3 and including in the <Peak Data Rate-1 (p)>\n \
    \        value of the local RMD-QSPEC <TMOD-1> parameter of the RMD-QOSM\n   \
    \      <QoS Desired> field carried by the forward intra-domain RESERVE\n     \
    \    the value equal to <notify_reverse_bandwidth> and by including\n        \
    \ the <additional_reverse_bandwidth> value in the <PDR Bandwidth>\n         parameter\
    \ within the \"PDR_Release_Request\" container that is\n         carried by the\
    \ same intra-domain RESERVE message.\n"
- title: A.7.  Example of Preemption Handling during Admission Control
  contents:
  - "A.7.  Example of Preemption Handling during Admission Control\n   This appendix\
    \ describes an example of how preemption handling is\n   supported during admission\
    \ control.\n   This section describes the mechanism that can be supported by the\
    \ QNE\n   Ingress, QNE Interior, and QNE Egress nodes to satisfy preemption\n\
    \   during the admission control process.\n   This mechanism uses the preemption\
    \ building blocks specified in\n   [RFC5974].\n"
- title: A.7.1.  Preemption Handling in QNE Ingress Nodes
  contents:
  - "A.7.1.  Preemption Handling in QNE Ingress Nodes\n   If a QNE Ingress receives\
    \ a RESERVE for a session that causes other\n   session(s) to be preempted, for\
    \ each of these to-be-preempted\n   sessions, then the QNE Ingress follows the\
    \ following steps:\n   Step_1:\n   The QNE Ingress MUST send a tearing RESERVE\
    \ downstream and add a\n   BOUND-SESSION-ID, with <Binding_Code> value equal to\
    \ \"Indicated\n   session caused preemption\" that indicates the SESSION-ID of\
    \ the\n   session that caused the preemption.  Furthermore, an <INFO-SPEC>\n \
    \  object with error code value equal to \"Reservation preempted\" has to\n  \
    \ be included in each of these tearing RESERVE messages.\n   The selection of\
    \ which flows have to be preempted can be based on\n   predefined policies.  For\
    \ example, this selection process can be\n   based on the MRI associated with\
    \ the high and low priority sessions.\n   In particular, the QNE Ingress can select\
    \ low(er) priority session(s)\n   where their MRI is \"close\" (especially the\
    \ target IP) to the one\n   associated with the higher priority session.  This\
    \ means that\n   typically the high priority session and the to-be-preempted lower\n\
    \   priority sessions are following the same communication path and are\n   passing\
    \ through the same QNE Egress node.\n   Furthermore, the amount of lower priority\
    \ sessions that have to be\n   preempted per each high priority session, has to\
    \ be such that the\n   requested resources by the higher priority session SHOULD\
    \ be lower or\n   equal than the sum of the reserved resources associated with\
    \ the\n   lower priority sessions that have to be preempted.\n   Step_2:\n   For\
    \ each of the sent tearing RESERVE(s) the QNE Ingress will send a\n   NOTIFY message\
    \ with an <INFO-SPEC> object with error code value equal\n   to \"Reservation\
    \ preempted\" towards the QNI.\n   Step_3:\n   After sending the preempted (tearing)\
    \ RESERVE(s), the Ingress QNE\n   will send the (reserving) RESERVE, which caused\
    \ the preemption,\n   downstream towards the QNE Egress.\n"
- title: A.7.2.  Preemption Handling in QNE Interior Nodes
  contents:
  - "A.7.2.  Preemption Handling in QNE Interior Nodes\n   The QNE Interior upon receiving\
    \ the first (tearing) RESERVE that\n   carries the <BOUND-SESSION-ID> object with\
    \ <Binding_Code> value equal\n   to \"Indicated session caused preemption\" and\
    \ an <INFO-SPEC> object\n   with error code value equal to \"Reservation preempted\"\
    \ it considers\n   that this session has to be preempted.\n   In this case, the\
    \ QNE Interior creates a so-called \"preemption\n   state\", which is identified\
    \ by the SESSION-ID carried in the\n   preemption-related <BOUND-SESSION-ID> object.\
    \  Furthermore, this\n   \"preemption state\" will include the SESSION-ID of the\
    \ session\n   associated with the (tearing) RESERVE.  Subsequently, if additional\n\
    \   tearing RESERVE(s) are arriving including the same values of BOUND-\n   SESSION-ID\
    \ and <INFO-SPEC> objects, then the associated SESSION-IDs\n   of these (tearing)\
    \ RESERVE message will be included in the already\n   created \"preemption state\"\
    .  The QNE will then set a timer, with a\n   value that is high enough to ensure\
    \ that it will not expire before\n   the (reserving) RESERVE arrives.\n   Note\
    \ that when the \"preemption state\" timer expires, the bandwidth\n   associated\
    \ with the preempted session(s) will have to be released,\n   following a normal\
    \ RMD-QOSM bandwidth release procedure.  If the QNE\n   Interior node will not\
    \ receive all the to-be-preempted (tearing)\n   RESERVE messages sent by the QNE\
    \ Ingress before their associated\n   (reserving) RESERVE message arrives, then\
    \ the (reserving) RESERVE\n   message will not reserve any resources and this\
    \ message will be \"M\"\n   marked (see Section 4.6.1.2).  Note that this situation\
    \ is not a\n   typical situation.  Typically, this situation can only occur when\
    \ at\n   least one of (tearing) the RESERVE messages is dropped due to an\n  \
    \ error condition.\n   Otherwise, if the QNE Interior receives all the to-be-preempted\n\
    \   (tearing) RESERVE messages sent by the QNE Ingress, then the QNE\n   Interior\
    \ will remove the pending resources, and make the new\n   reservation using normal\
    \ RMD-QOSM bandwidth release and reservation\n   procedures.\n"
- title: A.7.3.  Preemption Handling in QNE Egress Nodes
  contents:
  - "A.7.3.  Preemption Handling in QNE Egress Nodes\n   Similar to the QNE Interior\
    \ operation, the QNE Egress, upon receiving\n   the first (tearing) RESERVE that\
    \ carries the <BOUND-SESSION-ID>\n   object with the <Binding_Code> value equal\
    \ to \"Indicated session\n   caused preemption\" and an <INFO-SPEC> object with\
    \ error code value\n   equal to \"Reservation preempted\", it considers that this\
    \ session has\n   to be preempted.  Similar to the QNE Interior operation the\
    \ QNE\n   Egress creates a so called \"preemption state\", which is identified\
    \ by\n   the SESSION-ID carried in the preemption-related <BOUND-SESSION-ID>\n\
    \   object.  This \"preemption state\" will store the same type of\n   information\
    \ and use the same timer value as specified in Appendix\n   A.7.2.\n   Subsequently,\
    \ if additional tearing RESERVE(s) are arriving including\n   the same values\
    \ of BOUND-SESSION-ID and <INFO-SPEC> objects, then the\n   associated SESSION-IDs\
    \ of these (tearing) RESERVE message will be\n   included in the already created\
    \ \"preemption state\".\n   If the (reserving) RESERVE message sent by the QNE\
    \ Ingress node\n   arrived and is not \"M\" marked, and if all the to-be-preempted\n\
    \   (tearing) RESERVE messages arrived, then the QNE Egress will remove\n   the\
    \ pending resources and make the new reservation using normal RMD-\n   QOSM procedures.\n\
    \   If the QNE Egress receives an \"M\" marked RESERVE message, then the\n   QNE\
    \ Egress will use the normal partial RMD-QOSM procedure to release\n   the partial\
    \ reserved resources associated with the \"M\" marked RESERVE\n   (see Section\
    \ 4.6.1.2).\n   If the QNE Egress will not receive all the to-be-preempted (tearing)\n\
    \   RESERVE messages sent by the QNE Ingress before their associated and\n   not\
    \ \"M\" marked (reserving) RESERVE message arrives, then the\n   following steps\
    \ can be followed:\n   *  If the QNE Egress uses an end-to-end QOSM that supports\
    \ the\n      preemption handling, then the QNE Egress has to calculate and\n \
    \     select new lower priority sessions that have to be terminated.\n      How\
    \ the preempted sessions are selected and signaled to the\n      downstream QNEs\
    \ is similar to the operation specified in Appendix\n      A.7.1.\n   *  If the\
    \ QNE Egress does not use an end-to-end QOSM that supports\n      the preemption\
    \ handling, then the QNE Egress has to reject the\n      requesting (reserving)\
    \ RESERVE message associated with the high\n      priority session (see Section\
    \ 4.6.1.2).\n   Note that typically, the situation in which the QNE Egress does\
    \ not\n   receive all the to-be-preempted (tearing) RESERVE messages sent by\n\
    \   the QNE Ingress can only occur when at least one of the (tearing)\n   RESERVE\
    \ messages are dropped due to an error condition.\n"
- title: A.8.  Example of a Retransmission Procedure within the RMD Domain
  contents:
  - "A.8.  Example of a Retransmission Procedure within the RMD Domain\n   This appendix\
    \ describes an example of a retransmission procedure that\n   can be used in the\
    \ RMD domain.\n   If the retransmission of intra-domain RESERVE messages within\
    \ the RMD\n   domain is not disallowed, then all the QNE Interior nodes SHOULD\
    \ use\n   the functionality described in this section.\n   In this situation,\
    \ we enable QNE Interior nodes to maintain a replay\n   cache in which each entry\
    \ contains the <RSN>, <SESSION-ID> (available\n   via GIST), <REFRESH-PERIOD>\
    \ (available via the QoS NSLP [RFC5974]),\n   and the last received \"PHR Container\"\
    \ <Parameter ID> carried by the\n   RMD-QSPEC for each session [RFC5975].  Thus,\
    \ this solution uses\n   information carried by <QoS-NSLP> objects [RFC5974] and\
    \ parameters\n   carried by the RMD-QSPEC \"PHR Container\".  The following phases\
    \ can\n   be distinguished:\n   Phase 1: Create Replay Cache Entry\n   When an\
    \ Interior node receives an intra-domain RESERVE message and\n   its cache is\
    \ empty or there is no matching entry, it reads the\n   <Parameter ID> field of\
    \ the \"PHR Container\" of the received message.\n   If the <Parameter ID> is\
    \ a PHR_RESOURCE_REQUEST, which indicates that\n   the intra-domain RESERVE message\
    \ is a reservation request, then the\n   QNE Interior node creates a new entry\
    \ in the cache and copies the\n   <RSN>, <SESSION-ID> and <Parameter ID> to the\
    \ entry and sets the\n   <REFRESH-PERIOD>.\n   By using the information stored\
    \ in the list, the Interior node\n   verifies whether or not the received intra-domain\
    \ RESERVE message is\n   sent by an adversary.  For example, if the <SESSION-ID>\
    \ and <RSN> of\n   a received intra-domain RESERVE message match the values stored\
    \ in\n   the list then the Interior node checks the <Parameter ID> part.\n   If\
    \ the <Parameter ID> is different, then:\n   Situation D1: <Parameter ID> in its\
    \ own list is\n      PHR_RESOURCE_REQUEST, and <Parameter ID> in the message is\n\
    \      PHR_REFRESH_UPDATE;\n   Situation D2: <Parameter ID> in its own list is\n\
    \      PHR_RESOURCE_REQUEST or PHR_REFRESH_UPDATE, and <Parameter ID>\n      in\
    \ the message is PHR_RELEASE_REQUEST;\n   Situation D3: <Parameter ID> in its\
    \ own list is PHR_REFRESH_UPDATE,\n      and <Parameter ID> in the message is\
    \ PHR_RESOURCE_REQUEST;\n   For Situation D1, the QNE Interior node processes\
    \ this message by\n   RMD-QOSM default operation, reserves bandwidth, updates\
    \ the entry,\n   and passes the message to downstream nodes.  For Situation D2,\
    \ the\n   QNE Interior node processes this message by RMD-QOSM default\n   operation,\
    \ releases bandwidth, deletes all entries associated with\n   the session and\
    \ passes the message to downstream nodes.  For\n   situation D3, the QNE Interior\
    \ node does not use/process the local\n   RMD-QSPEC <TMOD-1> parameter carried\
    \ by the received intra-domain\n   RESERVE message.  Furthermore, the <K> flag\
    \ in the \"PHR Container\"\n   has to be set such that the local RMD-QSPEC <TMOD-1>\
    \ parameter\n   carried by the intra-domain RESERVE message is not processed/used\
    \ by\n   a QNE Interior node.\n   If the <Parameter ID> is the same, then:\n \
    \     Situation S1: <Parameter ID> is equal to PHR_RESOURCE_REQUEST;\n      Situation\
    \ S2: <Parameter ID> is equal to PHR_REFRESH_UPDATE;\n      For situation S1,\
    \ the QNE Interior node does not process the\n      intra-domain RESERVE message,\
    \ but it just passes it to downstream\n      nodes, because it might have been\
    \ retransmitted by the QNE Ingress\n      node.  For situation S2, the QNE Interior\
    \ node processes the first\n      incoming intra-domain (refresh) RESERVE message\
    \ within a refresh\n      period and updates the entry and forwards it to the\
    \ downstream\n      nodes.\n   If only <Session-ID> is matched to the list, then\
    \ the QNE Interior\n   node checks the <RSN>.  Here also two situations can be\n\
    \   distinguished:\n   If a rerouting takes place (see Section 5.2.5.2 in [RFC5974]),\
    \ the\n   <RSN> in the message will be equal to either <RSN + 2> in the stored\n\
    \   list if it is not a tearing RESERVE or <RSN -1> in the stored list if\n  \
    \ it is a tearing RESERVE:\n   The QNE Interior node will check the <Parameter\
    \ ID> part;\n   If the <RSN> in the message is equal to <RSN + 2> in the stored\
    \ list\n   and the <Parameter ID> is a PHR_RESOURCE_REQUEST or\n   PHR_REFRESH_UPDATE,\
    \ then the received intra-domain RESERVE message\n   has to be interpreted and\
    \ processed as a typical (non-tearing)\n   RESERVE message, which is caused by\
    \ rerouting, see Section 5.2.5.2 in\n   [RFC5974].\n   If the <RSN> in the message\
    \ is equal to <RSN-1> in the stored list\n   and the <Parameter ID> is a PHR_RELEASE_REQUEST,\
    \ then the received\n   intra-domain RESERVE message has to be interpreted and\
    \ processed as a\n   typical (tearing) RESERVE message, which is caused by rerouting\
    \ (see\n   Section 5.2.5.2 in [RFC5974]).\n   If other situations occur than the\
    \ ones described above, then the QNE\n   Interior node does not use/process the\
    \ local RMD-QSPEC <TMOD-1>\n   parameter carried by the received intra-domain\
    \ RESERVE message.\n   Furthermore, the <K> parameter has to be set, see above.\n\
    \   Phase 2: Update Replay Cache Entry\n   When a QNE Interior node receives an\
    \ intra-domain RESERVE message, it\n   retrieves the corresponding entry from\
    \ the cache and compares the\n   values.  If the message is valid, the Interior\
    \ node will update\n   <Parameter ID> and <REFRESH-PERIOD> in the list entry.\n\
    \   Phase 3: Delete Replay Cache Entry\n   When a QNE Interior node receives an\
    \ intra-domain (tear) RESERVE\n   message and an entry in the replay cache can\
    \ be found, then the QNE\n   Interior node will delete this entry after processing\
    \ the message.\n   Furthermore, the Interior node will delete cache entries, if\
    \ it did\n   not receive an intra-domain (refresh) RESERVE message during the\n\
    \   <REFRESH-PERIOD> period with a <Parameter ID> value equal to\n   PHR_REFRESH_UPDATE.\n"
- title: A.9.  Example on Matching the Initiator QSPEC to the Local RMD-QSPEC
  contents:
  - "A.9.  Example on Matching the Initiator QSPEC to the Local RMD-QSPEC\n   Section\
    \ 3.4 of [RFC5975] describes an example of how the QSPEC can be\n   Used within\
    \ QoS-NSLP.  Figure 29 illustrates a situation where a QNI\n   and a QNR are using\
    \ an end-to-end QOSM, denoted in this context as\n   Z-e2e.  It is considered\
    \ that the QNI access network side is a\n   wireless access network built on a\
    \ generation \"X\" technology with QoS\n   support as defined by generation \"\
    X\", while QNR access network is a\n   wired/fixed access network with its own\
    \ defined QoS support.\n   Furthermore, it is considered that the shown QNE Edges\
    \ are located at\n   the boundary of an RMD domain and that the shown QNE Interior\
    \ nodes\n   are located inside the RMD domain.\n   The QNE Edges are able to run\
    \ both the Z-e2e QOSM and the RMD-QOSM,\n   while the QNE Interior nodes can only\
    \ run the RMD-QOSM.  The QNI is\n   considered to be a wireless laptop, for example,\
    \ while the QNR is\n   considered to be a PC.\n   |------|   |------|        \
    \                   |------|   |------|\n   |Z-e2e |<->|Z-e2e |<------------------------->|Z-e2e\
    \ |<->|Z-e2e |\n   | QOSM |   | QOSM |                           | QOSM |   |\
    \ QOSM |\n   |      |   |------|   |-------|   |-------|   |------|   |      |\n\
    \   | NSLP |   | NSLP |<->| NSLP  |<->| NSLP  |<->| NSLP |   | NSLP |\n   |Z-e2e\
    \ |   |  RMD |   |  RMD  |   |  RMD  |   | RMD  |   | Z-e2e|\n   | QOSM |   |\
    \ QOSM |   | QOSM  |   | QOSM  |   | QOSM |   | QOSM |\n   |------|   |------|\
    \   |-------|   |-------|   |------|   |------|\n   -----------------------------------------------------------------\n\
    \   |------|   |------|   |-------|   |-------|   |------|   |------|\n   | NTLP\
    \ |<->| NTLP |<->| NTLP  |<->| NTLP  |<->| NTLP |<->| NTLP |\n   |------|   |------|\
    \   |-------|   |-------|   |------|   |------|\n     QNI         QNE        QNE\
    \         QNE         QNE       QNR\n   (End)  (Ingress Edge) (Interior)  (Interior)\
    \ (Egress Edge)  (End)\n    Figure 29. Example of initiator and local domain QOSM\
    \ operation\n   The QNI sets <QoS Desired> and <QoS Available> QSPEC objects in\
    \ the\n   initiator QSPEC, and initializes <QoS Available> to <QoS Desired>.\n\
    \   In this example, the <Minimum QoS> object is not populated.  The QNI\n   populates\
    \ QSPEC parameters to ensure correct treatment of its traffic\n   in domains down\
    \ the path.  Additionally, to ensure correct treatment\n   further down the path,\
    \ the QNI includes <PHB Class> in <QoS Desired>.\n   The QNI therefore includes\
    \ in the QSPEC.\n     <QoS Desired> = <TMOD-1> <PHB Class>\n     <QoS Available>\
    \ = <TMOD-1> <Path Latency>\n   In this example, it is assumed that the <TMOD-1>\
    \ parameter is used to\n   encode the traffic parameters of a VoIP application\
    \ that uses RTP and\n   the G.711 Codec, see Appendix B in [RFC5975].  The below\
    \ text is\n   copied from [RFC5975].\n      In the simplest case the Minimum Policed\
    \ Unit m is the sum of the\n      IP-, UDP- and RTP- headers + payload.  The IP\
    \ header in the IPv4\n      case has a size of 20 octets (40 octets if IPv6 is\
    \ used).  The UDP\n      header has a size of 8 octets and RTP uses a 12 octet\
    \ header.  The\n      G.711 Codec specifies a bandwidth of 64 kbit/s (8000 octets/s).\n\
    \      Assuming RTP transmits voice datagrams every 20 ms, the payload\n     \
    \ for one datagram is 8000 octets/s * 0.02 s = 160 octets.\n      IPv4+UDP+RTP+payload:\
    \ m=20+8+12+160 octets = 200 octets\n      IPv6+UDP+RTP+payload: m=40+8+12+160\
    \ octets = 220 octets\n      The Rate r specifies the amount of octets per second.\
    \  50\n      datagrams are sent per second.\n      IPv4: r = 50 1/s * m = 10,000\
    \ octets/s\n      IPv6: r = 50 1/s * m = 11,000 octets/s\n      The bucket size\
    \ b specifies the maximum burst.  In this example, a\n      burst of 10 packets\
    \ is used.\n      IPv4: b = 10 * m = 2000 octets\n      IPv6: b = 10 * m = 2200\
    \ octets\n   In our example, we will assume that IPV4 is used and therefore, the\n\
    \   <TMOD-1> values will be set as follows:\n   m = 200 octets\n   r = 10000 octets/s\n\
    \   b = 2000 octets\n   The <Peak Data Rate-1 (p)> and MPS are not specified above,\
    \ but in\n   our example we will assume:\n   p = r = 10000 octets/s\n   MPS =\
    \ 220 octets\n   The <PHB Class> is set in such a way that the Expedited Forwarding\n\
    \   (EF) PHB is used.\n   Since <Path Latency> and <QoS Class> are not vital parameters\
    \ from\n   the QNI's perspective, it does not raise their <M> flags.\n   Each\
    \ QNE, which supports the Z-e2e QOSM on the path, reads and\n   interprets those\
    \ parameters in the initiator QSPEC.\n   When an end-to-end RESERVE message is\
    \ received at a QNE Ingress node\n   at the RMD domain border, the QNE Ingress\
    \ can \"hide\" the initiator\n   end-to-end RESERVE message so that only the QNE\
    \ Edges process the\n   initiator (end-to-end) RESERVE message, which then bypasses\n\
    \   intermediate nodes between the Edges of the domain, and issues its\n   own\
    \ local RESERVE message (see Section 6).  For this new local\n   RESERVE message,\
    \ the QNE Ingress node generates the local RMD-QSPEC.\n   The RMD-QSPEC corresponding\
    \ to the RMD-QOSM is generated based on the\n   original initiator QSPEC according\
    \ to the procedures described in\n   Section 4.5 of [RFC5974] and in Section 6\
    \ of this document.  The RMD\n   QNE Ingress maps the <TMOD-1> parameters contained\
    \ in the original\n   Initiator QSPEC into the equivalent <TMOD-1> parameter representing\n\
    \   only the peak bandwidth in the local RMD-QSPEC.\n   In this example, the initial\
    \ <TMOD-1> parameters are mapped into the\n   RMD-QSPEC <TMOD-1> parameters as\
    \ follows.\n   As specified, the RMD-QOSM bandwidth equivalent <TMOD-1> parameter\
    \ of\n   RMD-QSPEC should have:\n      r = p of initial e2e <TMOD-1> parameter\n\
    \      m = large;\n      b = large;\n   For the RMD-QSPEC <TMOD-1> parameter,\
    \ the following values are\n   calculated:\n      r = p of initial e2e <TMOD-1>\
    \ parameter = 10000 octets/s\n      m is set in this example to large as follows:\n\
    \      m = MPS of initial e2e <TMOD-1> parameter = 220 octets\n   The maximum\
    \ value of b = 250 gigabytes, but in our example this value\n   is quite large.\
    \  The b parameter specifies the extent to which the\n   data rate can exceed\
    \ the sustainable level for short periods of time.\n   In order to get a large\
    \ b, in this example we consider that for a\n   period of certain period of time\
    \ the data rate can exceed the\n   sustainable level, which in our example is\
    \ the peak rate (p).\n   Thus, in our example, we calculate b as:\n      b = p\
    \ * \"period of time\"\n   For this VoIP example, we can assume that this period\
    \ of time is 1.5\n   seconds, see below:\n      b = 10000 octets/s * 1.5 seconds\
    \ = 15000 octets\n   Thus, the local RMD-QSPEC <TMOD-1> values are:\n      r =\
    \ 10000 octets/s\n      p = 10000 octets/s\n      m = 220 octets\n      b = 15000\
    \ octets\n      MPS = 220 octets\n   The bit level format of the RMD-QSPEC is\
    \ given in Section 4.1.  In\n   particular, the Initiator/Local QSPEC bit, i.e.,\
    \ <I> is set to\n   \"Local\" (i.e., \"1\") and the <Qspec Proc> is set as follows:\n\
    \      * Message Sequence = 0: Sender initiated\n      * Object combination =\
    \ 0: <QoS Desired> for RESERVE and\n        <QoS Reserved> for RESPONSE\n   The\
    \ <QSPEC Version> used by RMD-QOSM is the default version, i.e.,\n   \"0\", see\
    \ [RFC5975].  The <QSPEC Type> value used by the RMD-QOSM is\n   specified in\
    \ [RFC5975] and is equal to: \"2\".\n   The <Traffic Handling Directives> contains\
    \ the following fields:\n   <Traffic Handling Directives> = <PHR container> <PDR\
    \ container>\n   The Per-Hop Reservation container (PHR container) and the Per-Domain\n\
    \   Reservation container (PDR container) are specified in Sections 4.1.2\n  \
    \ and 4.1.3, respectively.  The <PHR container> contains the traffic\n   handling\
    \ directives for intra-domain communication and reservation.\n   The <PDR container>\
    \ contains additional traffic handling directives\n   that are needed for edge-to-edge\
    \ communication.  The RMD-QOSM <QoS\n   Desired> and <QoS Reserved>, are specified\
    \ in Section 4.1.1.\n   In RMD-QOSM the <QoS Desired> and <QoS Reserved> objects\
    \ contain the\n   following parameters:\n   <QoS Desired> = <TMOD-1> <PHB Class>\
    \ <Admission Priority>\n   <QoS Reserved> = <TMOD-1> <PHB Class> <Admission Priority>\n\
    \   The bit format of the <PHB Class> (see [RFC5975] and Figures 4 and 5)\n  \
    \ and <Admission Priority> complies to the bit format specified in\n   [RFC5975].\n\
    \   In this example, the RMD-QSPEC <TMOD-1> values are the ones that were\n  \
    \ calculated and given above.  Furthermore, the <PHB Class>, represents\n   the\
    \ EF PHB class.  Moreover, in this example the RMD reservation is\n   established\
    \ without an <Admission Priority> parameter, which is\n   equivalent to a reservation\
    \ established with an <Admission Priority>\n   whose value is 1.\n   The RMD QNE\
    \ Egress node updates <QoS Available> on behalf of the\n   entire RMD domain if\
    \ it can.  If it cannot (since the <M> flag is not\n   set for <Path Latency>)\
    \ it raises the parameter-specific, \"not-\n   supported\" flag, warning the QNR\
    \ that the final latency value in <QoS\n   Available> is imprecise.\n   In the\
    \ \"Y\" access domain, the initiator QSPEC is processed by the QNR\n   in the\
    \ similar was as it was processed in the \"X\" wireless access\n   domain, by\
    \ the QNI.\n   If the reservation was successful, eventually the RESERVE request\n\
    \   arrives at the QNR (otherwise, the QNE at which the reservation\n   failed\
    \ would have aborted the RESERVE and sent an error RESPONSE back\n   to the QNI).\
    \  If the <RII> was included in the QoS-NSLP message, the\n   QNR generates a\
    \ positive RESPONSE with QSPEC objects <QoS Reserved>\n   and <QoS Available>.\
    \  The parameters appearing in <QoS Reserved> are\n   the same as in <QoS Desired>,\
    \ with values copied from <QoS\n   Available>.  Hence, the QNR includes the following\
    \ QSPEC objects in\n   the RESPONSE message:\n      <QoS Reserved> = <TMOD-1>\
    \ <PHB Class>\n      <QoS Available> = <TMOD-1> <Path Latency>\n"
- title: Contributors
  contents:
  - "Contributors\n   Attila Takacs\n   Ericsson Research\n   Ericsson Hungary Ltd.\n\
    \   Laborc 1, Budapest, Hungary, H-1037\n   EMail: Attila.Takacs@ericsson.com\n\
    \   Andras Csaszar\n   Ericsson Research\n   Ericsson Hungary Ltd.\n   Laborc\
    \ 1, Budapest, Hungary, H-1037\n   EMail: Andras.Csaszar@ericsson.com\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Attila Bader\n   Ericsson Research\n   Ericsson Hungary\
    \ Ltd.\n   Laborc 1, Budapest, Hungary, H-1037\n   EMail: Attila.Bader@ericsson.com\n\
    \   Lars Westberg\n   Ericsson Research\n   Torshamnsgatan 23\n   SE-164 80 Stockholm,\
    \ Sweden\n   EMail: Lars.Westberg@ericsson.com\n   Georgios Karagiannis\n   University\
    \ of Twente\n   P.O. Box 217\n   7500 AE Enschede, The Netherlands\n   EMail:\
    \ g.karagiannis@ewi.utwente.nl\n   Cornelia Kappler\n   ck technology concepts\n\
    \   Berlin, Germany\n   EMail: cornelia.kappler@cktecc.de\n   Hannes Tschofenig\n\
    \   Nokia Siemens Networks\n   Linnoitustie 6\n   Espoo 02600\n   Finland\n  \
    \ EMail: Hannes.Tschofenig@nsn.com\n   URI: http://www.tschofenig.priv.at\n  \
    \ Tom Phelan\n   Sonus Networks\n   250 Apollo Dr.\n   Chelmsford, MA 01824 USA\n\
    \   EMail: tphelan@sonusnet.com\n"
