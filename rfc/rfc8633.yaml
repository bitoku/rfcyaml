- title: __initial_text__
  contents:
  - '              Network Time Protocol Best Current Practices

    '
- title: Abstract
  contents:
  - "Abstract\n   The Network Time Protocol (NTP) is one of the oldest protocols on\
    \ the\n   Internet and has been widely used since its initial publication.\n \
    \  This document is a collection of best practices for the general\n   operation\
    \ of NTP servers and clients on the Internet.  It includes\n   recommendations\
    \ for the stable, accurate, and secure operation of NTP\n   infrastructure.  This\
    \ document is targeted at NTP version 4 as\n   described in RFC 5905.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo documents an Internet Best Current Practice.\n\
    \   This document is a product of the Internet Engineering Task Force\n   (IETF).\
    \  It represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   BCPs is available in Section\
    \ 2 of RFC 7841.\n   Information about the current status of this document, any\
    \ errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8633.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   4\n     1.1.  Requirements Language . . . . . . . . . . . . . .\
    \ . . . .   4\n   2.  General Network Security Best Practices . . . . . . . .\
    \ . . .   4\n     2.1.  BCP 38  . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .   4\n   3.  NTP Configuration Best Practices  . . . . . . . . . . . . .\
    \ .   5\n     3.1.  Keeping NTP Up to Date  . . . . . . . . . . . . . . . . .\
    \   5\n     3.2.  Using Enough Time Sources . . . . . . . . . . . . . . . .  \
    \ 5\n     3.3.  Using a Diversity of Reference Clocks . . . . . . . . . .   6\n\
    \     3.4.  Control Messages  . . . . . . . . . . . . . . . . . . . .   7\n  \
    \   3.5.  Monitoring  . . . . . . . . . . . . . . . . . . . . . . .   7\n    \
    \ 3.6.  Using Pool Servers  . . . . . . . . . . . . . . . . . . .   8\n     3.7.\
    \  Leap-Second Handling  . . . . . . . . . . . . . . . . . .   8\n       3.7.1.\
    \  Leap Smearing . . . . . . . . . . . . . . . . . . . .   9\n   4.  NTP Security\
    \ Mechanisms . . . . . . . . . . . . . . . . . . .  10\n     4.1.  Pre-Shared\
    \ Key Approach . . . . . . . . . . . . . . . . .  11\n     4.2.  Autokey . . .\
    \ . . . . . . . . . . . . . . . . . . . . . .  11\n     4.3.  Network Time Security\
    \ . . . . . . . . . . . . . . . . . .  11\n     4.4.  External Security Protocols\
    \ . . . . . . . . . . . . . . .  12\n   5.  NTP Security Best Practices . . .\
    \ . . . . . . . . . . . . . .  12\n     5.1.  Minimizing Information Leakage \
    \ . . . . . . . . . . . . .  12\n     5.2.  Avoiding Daemon Restart Attacks .\
    \ . . . . . . . . . . . .  13\n     5.3.  Detection of Attacks through Monitoring\
    \ . . . . . . . . .  14\n     5.4.  Kiss-o'-Death Packets . . . . . . . . . .\
    \ . . . . . . . .  15\n     5.5.  Broadcast Mode Only on Trusted Networks . .\
    \ . . . . . . .  15\n     5.6.  Symmetric Mode Only with Trusted Peers  . . .\
    \ . . . . . .  16\n   6.  NTP in Embedded Devices . . . . . . . . . . . . . .\
    \ . . . . .  16\n     6.1.  Updating Embedded Devices . . . . . . . . . . . .\
    \ . . . .  16\n     6.2.  Server Configuration  . . . . . . . . . . . . . . .\
    \ . . .  17\n   7.  NTP over Anycast  . . . . . . . . . . . . . . . . . . . .\
    \ . .  17\n   8.  IANA Considerations . . . . . . . . . . . . . . . . . . . .\
    \ .  18\n   9.  Security Considerations . . . . . . . . . . . . . . . . . . .\
    \  19\n   10. References  . . . . . . . . . . . . . . . . . . . . . . . . .  19\n\
    \     10.1.  Normative References . . . . . . . . . . . . . . . . . .  19\n  \
    \   10.2.  Informative References . . . . . . . . . . . . . . . . .  20\n   Appendix\
    \ A.  Best Practices Specific to the Network Time\n                Foundation\
    \ Implementation  . . . . . . . . . . . . .  23\n     A.1.  Use Enough Time Sources\
    \ . . . . . . . . . . . . . . . . .  23\n     A.2.  NTP Control and Facility Messages\
    \ . . . . . . . . . . . .  23\n     A.3.  Monitoring  . . . . . . . . . . . .\
    \ . . . . . . . . . . .  24\n     A.4.  Leap-Second File  . . . . . . . . . .\
    \ . . . . . . . . . .  24\n     A.5.  Leap Smearing . . . . . . . . . . . . .\
    \ . . . . . . . . .  25\n     A.6.  Configuring ntpd  . . . . . . . . . . . .\
    \ . . . . . . . .  25\n     A.7.  Pre-Shared Keys . . . . . . . . . . . . . .\
    \ . . . . . . .  25\n   Acknowledgments . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  26\n   Authors' Addresses  . . . . . . . . . . . . . . . . . .\
    \ . . . . .  26\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   NTP version 4 (NTPv4) has been widely used since its publication\
    \ as\n   [RFC5905].  This document is a collection of best practices for the\n\
    \   operation of NTP clients and servers.\n   The recommendations in this document\
    \ are intended to help operators\n   distribute time on their networks more accurately\
    \ and securely.  They\n   are intended to apply generally to a broad range of\
    \ networks.  Some\n   specific networks may have higher accuracy requirements\
    \ that call for\n   additional techniques beyond what is documented here.\n  \
    \ Among the best practices covered are recommendations for general\n   network\
    \ security, time protocol-specific security, and NTP server and\n   client configuration.\
    \  NTP operation in embedded devices is also\n   covered.\n   This document also\
    \ contains information for protocol implementors who\n   want to develop their\
    \ own implementations compliant with RFC 5905.\n"
- title: 1.1.  Requirements Language
  contents:
  - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n"
- title: 2.  General Network Security Best Practices
  contents:
  - '2.  General Network Security Best Practices

    '
- title: 2.1.  BCP 38
  contents:
  - "2.1.  BCP 38\n   Many network attacks rely on modifying the IP source address\
    \ of a\n   packet to point to a different IP address than the computer from\n\
    \   which it originated.  UDP-based protocols, such as NTP, are generally\n  \
    \ more susceptible to spoofing attacks than connection-oriented\n   protocols.\
    \  NTP control messages can generate a lot of data in\n   response to a small\
    \ query, which makes it attractive as a vector for\n   distributed denial-of-service\
    \ attacks (NTP Control messages are\n   discussed further in Section 3.4).  One\
    \ documented instance of such\n   an attack can be found in [DDOS], with further\
    \ discussion in [IMC14]\n   and [NDSS14].\n   BCP 38 [RFC2827] was published in\
    \ 2000 to provide some level of\n   remediation against address-spoofing attacks.\
    \  BCP 38 calls for\n   filtering outgoing and incoming traffic to make sure that\
    \ the source\n   and destination IP addresses are consistent with the expected\
    \ flow of\n   traffic on each network interface.  It is RECOMMENDED that ISPs\
    \ and\n   large corporate networks implement ingress and egress filtering.\n \
    \  More information is available at [BCP38WIKI].\n"
- title: 3.  NTP Configuration Best Practices
  contents:
  - "3.  NTP Configuration Best Practices\n   This section provides best practices\
    \ for NTP configuration and\n   operation.  Application of these best practices\
    \ that are specific to\n   the Network Time Foundation implementation, including\
    \ example\n   configuration directives valid at the time of this writing, are\n\
    \   compiled in Appendix A.\n"
- title: 3.1.  Keeping NTP Up to Date
  contents:
  - "3.1.  Keeping NTP Up to Date\n   There are multiple versions and implementations\
    \ of the NTP protocol\n   in use on many different platforms.  The practices in\
    \ this document\n   are meant to apply generally to any implementation of [RFC5905].\
    \  NTP\n   users should select an implementation that is actively maintained.\n\
    \   Users should keep up to date on any known attacks on their selected\n   implementation\
    \ and deploy updates containing security fixes as soon\n   as it is practical.\n"
- title: 3.2.  Using Enough Time Sources
  contents:
  - "3.2.  Using Enough Time Sources\n   An NTP implementation that is compliant with\
    \ [RFC5905] takes the\n   available sources of time and submits this timing data\
    \ to\n   sophisticated intersection, clustering, and combining algorithms to\n\
    \   get the best estimate of the correct time.  The description of these\n   algorithms\
    \ is beyond the scope of this document.  Interested readers\n   should read [RFC5905]\
    \ or the detailed description of NTP in\n   [MILLS2006].\n   o  If there is only\
    \ one source of time, the answer is obvious.  It\n      may not be a good source\
    \ of time, but it's the only source that\n      can be considered.  Any issue\
    \ with the time at the source will be\n      passed on to the client.\n   o  If\
    \ there are two sources of time and they align well enough, then\n      the best\
    \ time can be calculated easily.  But if one source fails,\n      then the solution\
    \ degrades to the single-source solution outlined\n      above.  And if the two\
    \ sources don't agree, it will be difficult\n      to know which one is correct\
    \ without making use of information\n      from outside of the protocol.\n   o\
    \  If there are three sources of time, there is more data available\n      to\
    \ converge on the best calculated time, and this time is more\n      likely to\
    \ be accurate.  And the loss of one of the sources (by\n      becoming unreachable\
    \ or unusable) can be tolerated.  But at that\n      point, the solution degrades\
    \ to the two-source solution.\n   o  Having four or more sources of time is better\
    \ as long as the\n      sources are diverse (Section 3.3).  If one of these sources\n\
    \      develops a problem, there are still at least three other time\n      sources.\n\
    \   This analysis assumes that a majority of the servers used in the\n   solution\
    \ are honest, even if some may be inaccurate.  Operators\n   should be aware of\
    \ the possibility that if an attacker is in control\n   of the network, the time\
    \ coming from all servers could be\n   compromised.\n   Operators who are concerned\
    \ with maintaining accurate time SHOULD use\n   at least four independent, diverse\
    \ sources of time.  Four sources\n   will provide sufficient backup in case one\
    \ source goes down.  If four\n   sources are not available, operators MAY use\
    \ fewer sources, which is\n   subject to the risks outlined above.\n   But even\
    \ with four or more sources of time, systemic problems can\n   happen.  One example\
    \ involves the leap-smearing concept detailed in\n   Section 3.7.1.  For several\
    \ hours before and after the June 2015 leap\n   second, several operators configured\
    \ their NTP servers with leap\n   smearing while others did not.  Many NTP end\
    \ nodes could not\n   determine an accurate time source because two of their four\
    \ sources\n   of time gave them consistent UTC/POSIX time, while the other two\
    \ gave\n   them consistent leap-smeared time.  This is just one of many\n   potential\
    \ causes of disagreement among time sources.\n   Operators are advised to monitor\
    \ all time sources that are in use.\n   If time sources do not generally align,\
    \ operators are encouraged to\n   investigate the cause and either correct the\
    \ problems or stop using\n   defective servers.  See Section 3.5 for more information.\n"
- title: 3.3.  Using a Diversity of Reference Clocks
  contents:
  - "3.3.  Using a Diversity of Reference Clocks\n   When using servers with attached\
    \ hardware reference clocks, it is\n   suggested that different types of reference\
    \ clocks be used.  Having a\n   diversity of sources with independent implementations\
    \ means that any\n   one issue is less likely to cause a service interruption.\n\
    \   Are all clocks on a network from the same vendor?  They may have the\n   same\
    \ bugs.  Even devices from different vendors may not be truly\n   independent\
    \ if they share common elements.  Are they using the same\n   base chipset?  Are\
    \ they all running the same version of firmware?\n   Chipset and firmware bugs\
    \ can happen, but they can be more difficult\n   to diagnose than application\
    \ software bugs.  When having the correct\n   time is of critical importance,\
    \ it's ultimately up to operators to\n   ensure that their sources are sufficiently\
    \ independent, even if they\n   are not under the operator's control.\n   A systemic\
    \ problem with time from any satellite navigation service is\n   possible and\
    \ has happened.  Sunspot activity can render a satellite\n   or radio-based time\
    \ source unusable.  Depending on the application\n   requirements, operators may\
    \ need to consider backup scenarios in the\n   rare circumstance when the satellite\
    \ system is faulty or unavailable.\n"
- title: 3.4.  Control Messages
  contents:
  - "3.4.  Control Messages\n   Some implementations of NTPv4 provide the NTP control\
    \ messages (also\n   known as Mode 6 messages).  These messages were originally\
    \ specified\n   in Appendix B of [RFC1305], which defined NTPv3.  These messages\
    \ do\n   not appear in the NTPv4 specification [RFC5905], which obsoletes the\n\
    \   NTPv3 specification [RFC1305], but they are still used.  At the time\n   of\
    \ this writing, work is being done to formally document the\n   structure of these\
    \ control messages for use with NTPv4 in [CTRLMSG].\n   NTP control messages are\
    \ designed to permit monitoring and optionally\n   authenticated control of NTP\
    \ and its configuration.  Used properly,\n   these facilities provide vital debugging\
    \ and performance information\n   and control.  But these facilities can be a\
    \ vector for amplification\n   attacks when abused.  For this reason, it is RECOMMENDED\
    \ that public-\n   facing NTP servers block NTP control message queries from outside\n\
    \   their organization.\n   The ability to use NTP control messages beyond their\
    \ basic monitoring\n   capabilities SHOULD be limited to authenticated sessions\
    \ that provide\n   a 'controlkey'.  It can also be limited through mechanisms\
    \ outside of\n   the NTP specification, such as Access Control Lists, that only\
    \ allow\n   access from approved IP addresses.\n   The NTP control message responses\
    \ are much larger than the\n   corresponding queries.  Thus, they can be abused\
    \ in high-bandwidth\n   DDoS attacks.  Section 2.1 gives more information on how\
    \ to provide\n   protection for this abuse by implementing BCP 38.\n"
- title: 3.5.  Monitoring
  contents:
  - "3.5.  Monitoring\n   Operators SHOULD use their NTP implementation's remote monitoring\n\
    \   capabilities to quickly identify servers that are out of sync and\n   ensure\
    \ correct functioning of the service.  Operators SHOULD also\n   monitor system\
    \ logs for messages so that problems and abuse attempts\n   can be quickly identified.\n\
    \   If a system starts to receive NTP Reply packets from a remote time\n   server\
    \ that do not correspond to any requests sent by the system,\n   that can be an\
    \ indication that an attacker is forging that system's\n   IP address in requests\
    \ to the remote time server.  The goal of this\n   attack is to adversely impact\
    \ the availability of time to the\n   targeted system whose address is being forged.\
    \  Based on these forged\n   packets, the remote time server might decide to throttle\
    \ or rate-\n   limit packets or even stop sending packets to the targeted system.\n\
    \   If a system is a broadcast client and its system log shows that it is\n  \
    \ receiving early time messages from its server, that is an indication\n   that\
    \ somebody may be forging packets from a broadcast server\n   (broadcast client\
    \ and server modes are defined in Section 3 of\n   [RFC5905]).\n   If a server's\
    \ system log shows messages that indicate it is receiving\n   NTP timestamps that\
    \ are much earlier than the current system time,\n   then either the system clock\
    \ is unusually fast or somebody is trying\n   to launch a replay attack against\
    \ that server.\n"
- title: 3.6.  Using Pool Servers
  contents:
  - "3.6.  Using Pool Servers\n   It only takes a small amount of bandwidth and system\
    \ resources to\n   synchronize one NTP client, but NTP servers that can service\
    \ tens of\n   thousands of clients take more resources to run.  Network operators\n\
    \   and advanced users who want to synchronize their computers MUST only\n   synchronize\
    \ to servers that they have permission to use.\n   The NTP Pool Project is a group\
    \ of volunteers who have donated their\n   computing and bandwidth resources to\
    \ freely distribute time from\n   primary time sources to others on the Internet.\
    \  The time is\n   generally of good quality but comes with no guarantee whatsoever.\
    \  If\n   you are interested in using this pool, please review their\n   instructions\
    \ at [POOLUSE].\n   Vendors can obtain their own subdomain that is part of the\
    \ NTP Pool\n   Project.  This offers vendors the ability to safely make use of\
    \ the\n   time distributed by the pool for their devices.  Details are\n   available\
    \ at [POOLVENDOR].\n   If there is a need to synchronize many computers, an operator\
    \ may\n   want to run local NTP servers that are synchronized to the NTP Pool\n\
    \   Project.  NTP users on that operator's networks can then be\n   synchronized\
    \ to local NTP servers.\n"
- title: 3.7.  Leap-Second Handling
  contents:
  - "3.7.  Leap-Second Handling\n   UTC is kept in agreement with the Universal Time\
    \ UT1 [SOLAR] to\n   within +/- 0.9 seconds by the insertion (or possibly deletion)\
    \ of a\n   leap second.  UTC is an atomic time scale, whereas UT1 is based on\n\
    \   the rotational rate of the earth.  Leap seconds are not introduced at\n  \
    \ a fixed rate.  They are announced by the International Earth Rotation\n   and\
    \ Reference Systems Service (IERS) in its Bulletin C [IERS] when\n   necessary\
    \ to keep UTC and UT1 aligned.\n   NTP time is based on the UTC timescale, and\
    \ the protocol has the\n   capability to broadcast leap-second information.  Some\
    \ global\n   navigation satellite systems (like GPS) or radio transmitters (like\n\
    \   DCF77) broadcast leap-second information.  If an NTP client is synced\n  \
    \ to an NTP server that provides leap-second notification, the client\n   will\
    \ get advance notification of impending leap seconds\n   automatically.\n   Since\
    \ the length of the UT1 day generally slowly increases [SOLAR],\n   all leap seconds\
    \ that have been introduced since the practice started\n   in 1972 have been positive\
    \ leap seconds, where a second is added to\n   UTC.  NTP also supports a negative\
    \ leap second, where a second is\n   removed from UTC if it ever becomes necessary.\n\
    \   While earlier versions of NTP contained some ambiguity regarding when\n  \
    \ a leap second broadcast by a server should be applied by a client,\n   RFC 5905\
    \ is clear that leap seconds are only applied on the last day\n   of a month.\
    \  However, because some older clients may apply it at the\n   end of the current\
    \ day, it is RECOMMENDED that NTP servers wait until\n   the last day of the month\
    \ before broadcasting leap seconds.  Doing\n   this will prevent older clients\
    \ from applying a leap second at the\n   wrong time.  When implementing this recommendation,\
    \ operators should\n   ensure that clients are not configured to use polling intervals\n\
    \   greater than 24 hours so the leap-second notification is not missed.\n   In\
    \ circumstances where an NTP server is not receiving leap-second\n   information\
    \ from an automated source, certain organizations maintain\n   files that are\
    \ updated every time a new leap second is announced:\n      NIST: <ftp://time.nist.gov/pub/leap-seconds.list>\n\
    \      US Navy (maintains GPS Time):\n      <ftp://tycho.usno.navy.mil/pub/ntp/leap-seconds.list>\n\
    \      IERS (announces leap seconds):\n      <https://hpiers.obspm.fr/iers/bul/bulc/ntp/leap-seconds.list>\n"
- title: 3.7.1.  Leap Smearing
  contents:
  - "3.7.1.  Leap Smearing\n   Some NTP installations make use of a technique called\
    \ leap smearing.\n   With this method, instead of introducing an extra second\
    \ (or\n   eliminating a second) in a leap-second event, NTP time is adjusted in\n\
    \   small increments over a comparably large window of time (called the\n   smear\
    \ interval) around the leap-second event.  The smear interval\n   should be large\
    \ enough for the time to be adjusted at a low rate, so\n   that clients will follow\
    \ the smeared time without objecting.  Periods\n   ranging from two to twenty-four\
    \ hours have been used successfully.\n   During the adjustment window, all the\
    \ NTP clients' times may be\n   offset from UTC by as much as a full second, depending\
    \ on the\n   implementation.  However, all clients will generally agree on what\n\
    \   time they think it is.\n   The purpose of leap smearing is to enable systems\
    \ that don't deal\n   with the leap-second event properly to function consistently,\
    \ at the\n   expense of fidelity to UTC during the smear window.  During a\n \
    \  standard leap-second event, a minute will have 61 (or possibly 59)\n   seconds,\
    \ and some applications (and even some OSs) are known to have\n   problems with\
    \ that.\n   Operators who have legal obligations or other strong requirements\
    \ to\n   be synchronized with UTC or civil time SHOULD NOT use leap smearing\n\
    \   because the distributed time cannot be guaranteed to be traceable to\n   UTC\
    \ during the smear interval.\n   Clients that are connected to leap-smearing servers\
    \ MUST NOT apply\n   the standard NTP leap-second handling.  These clients must\
    \ never have\n   a leap-second file loaded, and the smearing servers must never\n\
    \   advertise to clients for which a leap second is pending.\n   Any use of leap-smearing\
    \ servers should be limited to within a\n   single, well-controlled environment.\
    \  Leap smearing MUST NOT be used\n   for public-facing NTP servers, as they will\
    \ disagree with non-\n   smearing servers (as well as UTC) during the leap smear\
    \ interval, and\n   there is no standardized way for a client to detect that a\
    \ server is\n   using leap smearing.  However, be aware that some public-facing\n\
    \   servers may be configured this way in spite of this guidance.\n   System administrators\
    \ are advised to be aware of impending leap\n   seconds and how the servers (inside\
    \ and outside their organization)\n   they are using deal with them.  Individual\
    \ clients MUST NOT be\n   configured to use a mixture of smeared and non-smeared\
    \ servers.  If a\n   client uses smeared servers, the servers it uses must all\
    \ have the\n   same leap smear configuration.\n"
- title: 4.  NTP Security Mechanisms
  contents:
  - "4.  NTP Security Mechanisms\n   In the standard configuration, NTP packets are\
    \ exchanged unprotected\n   between client and server.  An adversary that is able\
    \ to become a man\n   in the middle is therefore able to drop, replay, or modify\
    \ the\n   content of the NTP packet, which leads to degradation of the time\n\
    \   synchronization or transmission of false time information.  A threat\n   analysis\
    \ for time-synchronization protocols is given in [RFC7384].\n   NTP provides two\
    \ internal security mechanisms to protect the\n   authenticity and integrity of\
    \ the NTP packets.  Both measures protect\n   the NTP packet by means of a Message\
    \ Authentication Code (MAC).\n   Neither of them encrypts the NTP's payload because\
    \ this payload\n   information is not considered to be confidential.\n"
- title: 4.1.  Pre-Shared Key Approach
  contents:
  - "4.1.  Pre-Shared Key Approach\n   This approach applies a symmetric key for the\
    \ calculation of the MAC,\n   which protects the authenticity and integrity of\
    \ the exchanged\n   packets for an association.  NTP does not provide a mechanism\
    \ for the\n   exchange of keys between the associated nodes.  Therefore, for each\n\
    \   association, keys MUST be exchanged securely by external means, and\n   they\
    \ MUST be protected from disclosure.  It is RECOMMENDED that each\n   association\
    \ be protected by its own unique key.  It is RECOMMENDED\n   that participants\
    \ agree to refresh keys periodically.  However, NTP\n   does not provide a mechanism\
    \ to assist in doing so.  Each\n   communication partner will need to keep track\
    \ of its keys in its own\n   local key storage.\n   [RFC5905] specifies using\
    \ the MD5 hash algorithm for calculation of\n   the MAC, but other algorithms\
    \ may be supported as well.  The MD5 hash\n   is now considered to be too weak\
    \ and unsuitable for cryptographic\n   usage.  [RFC6151] has more information\
    \ on the algorithm's weaknesses.\n   Implementations will soon be available based\
    \ on AES-128-CMAC\n   [RFC8573], and users SHOULD use that when it is available.\n\
    \   Some implementations store the key in clear text.  Therefore, it MUST\n  \
    \ only be readable by the NTP process.\n   An NTP client has to be able to link\
    \ a key to a particular server in\n   order to establish a protected association.\
    \  This linkage is\n   implementation specific.  Once applied, a key will be trusted\
    \ until\n   the link is removed.\n"
- title: 4.2.  Autokey
  contents:
  - "4.2.  Autokey\n   [RFC5906] specifies the Autokey protocol.  It was published\
    \ in 2010\n   to provide automated key management and authentication of NTP\n\
    \   servers.  However, security researchers have identified\n   vulnerabilities\
    \ [AUTOKEY] in the Autokey protocol.\n   Autokey SHOULD NOT be used.\n"
- title: 4.3.  Network Time Security
  contents:
  - "4.3.  Network Time Security\n   Work is in progress on an enhanced replacement\
    \ for Autokey.  Refer to\n   [NTSFORNTP] for more information.\n"
- title: 4.4.  External Security Protocols
  contents:
  - "4.4.  External Security Protocols\n   If applicable, external security protocols\
    \ such as IPsec and MACsec\n   can be applied to enhance the integrity and authenticity\
    \ protection\n   of NTP time-synchronization packets.  Usage of such external\
    \ security\n   protocols can decrease time-synchronization performance [RFC7384].\n\
    \   Therefore, operators are advised to carefully evaluate whether the\n   decreased\
    \ time-synchronization performance meets their specific\n   timing requirements.\n\
    \   Note that none of the security measures described in Section 4 can\n   prevent\
    \ packet delay manipulation attacks on NTP.  Such delay attacks\n   can target\
    \ time-synchronization packets sent as clear text or even\n   within an encrypted\
    \ tunnel.  These attacks are described further in\n   Section 3.2.6 of [RFC7384].\n"
- title: 5.  NTP Security Best Practices
  contents:
  - "5.  NTP Security Best Practices\n   This section lists some general NTP security\
    \ practices, but these\n   issues may (or may not) have been mitigated in particular\
    \ versions of\n   particular implementations.  Contact the maintainers of the\
    \ relevant\n   implementation for more information.\n"
- title: 5.1.  Minimizing Information Leakage
  contents:
  - "5.1.  Minimizing Information Leakage\n   The base NTP packet leaks important\
    \ information (including reference\n   ID and reference time) that may be used\
    \ in attacks [NDSS16]\n   [CVE-2015-8138] [CVE-2016-1548].  A remote attacker\
    \ can learn this\n   information by sending mode 3 queries to a target system\
    \ and\n   inspecting the fields in the mode 4 response packet.  NTP control\n\
    \   queries also leak important information (including reference ID,\n   expected\
    \ origin timestamp, etc.) that may be used in attacks\n   [CVE-2015-8139].  A\
    \ remote attacker can learn this information by\n   sending control queries to\
    \ a target system and inspecting the leaked\n   information in the response.\n\
    \   As such, mechanisms outside of the NTP protocol, such as Access\n   Control\
    \ Lists, SHOULD be used to limit the exposure of this\n   information to allowed\
    \ IP addresses and keep it from remote attackers\n   not on the list.  Hosts SHOULD\
    \ only respond to NTP control queries\n   from authorized parties.\n   An NTP\
    \ client that does not provide time on the network can\n   additionally log and\
    \ drop incoming mode 3 timing queries from\n   unexpected sources.  Note well\
    \ that the easiest way to monitor the\n   status of an NTP instance is to send\
    \ it a mode 3 query, so it may not\n   be desirable to drop all mode 3 queries.\
    \  As an alternative,\n   operators SHOULD either filter mode 3 queries from outside\
    \ their\n   networks or make sure mode 3 queries are allowed only from trusted\n\
    \   systems or networks.\n   A \"leaf-node host\" is a host that uses NTP solely\
    \ for the purpose of\n   adjusting its own system time.  Such a host is not expected\
    \ to\n   provide time to other hosts and relies exclusively on NTP's basic\n \
    \  mode to take time from a set of servers (that is, the host sends mode\n   3\
    \ queries to its servers and receives mode 4 responses from these\n   servers\
    \ containing timing information.)  To minimize information\n   leakage, leaf-node\
    \ hosts SHOULD drop all incoming NTP packets except\n   mode 4 response packets\
    \ that come from known sources.  An exception\n   to this can be made if a leaf-node\
    \ host is being actively monitored,\n   in which case incoming packets from the\
    \ monitoring server can be\n   allowed.\n   Please refer to [DATAMIN] for more\
    \ information.\n"
- title: 5.2.  Avoiding Daemon Restart Attacks
  contents:
  - "5.2.  Avoiding Daemon Restart Attacks\n   [RFC5905] says NTP clients should not\
    \ accept time shifts greater than\n   the panic threshold.  Specifically, RFC\
    \ 5905 says \"PANIC means the\n   offset is greater than the panic threshold PANICT\
    \ (1000 s) and SHOULD\n   cause the program to exit with a diagnostic message\
    \ to the system\n   log.\"\n   However, this behavior can be exploited by attackers\
    \ as described in\n   [NDSS16] when the following two conditions hold:\n   1.\
    \  The operating system automatically restarts the NTP client when\n       it\
    \ quits.  Modern UNIX and UNIX-like operating systems are\n       replacing traditional\
    \ init systems with process supervisors, such\n       as systemd, which can be\
    \ configured to automatically restart any\n       daemons that quit.  This behavior\
    \ is the default in CoreOS and\n       Arch Linux.  As of the time of this writing,\
    \ it appears likely to\n       become the default behavior in other systems as\
    \ they migrate\n       legacy init scripts to process supervisors such as systemd.\n\
    \   2.  The NTP client is configured to ignore the panic threshold on all\n  \
    \     restarts.\n   In such cases, if the attacker can send the target an offset\
    \ that\n   exceeds the panic threshold, the client will quit.  Then, when it\n\
    \   restarts, it ignores the panic threshold and accepts the attacker's\n   large\
    \ offset.\n   Operators need to be aware that when operating with the above two\n\
    \   conditions, the panic threshold offers no protection from attacks.\n   The\
    \ natural solution is not to run hosts with these conditions.\n   Specifically,\
    \ operators SHOULD NOT ignore the panic threshold in all\n   cold-start situations\
    \ unless sufficient oversight and checking is in\n   place to make sure that this\
    \ type of attack cannot happen.\n   As an alternative, the following steps MAY\
    \ be taken by operators to\n   mitigate the risk of attack:\n   o  Monitor the\
    \ NTP system log to detect when the NTP daemon quit due\n      to a panic event,\
    \ as this could be a sign of an attack.\n   o  Request manual intervention when\
    \ a timestep larger than the panic\n      threshold is detected.\n   o  Configure\
    \ the ntp client to only ignore the panic threshold in a\n      cold-start situation.\n\
    \   o  Increase the minimum number of servers required before the NTP\n      client\
    \ adjusts the system clock.  This will make the NTP client\n      wait until enough\
    \ trusted sources of time agree before declaring\n      the time to be correct.\n\
    \   In addition, the following steps SHOULD be taken by those who\n   implement\
    \ the NTP protocol:\n   o  Prevent the NTP daemon from taking time steps that\
    \ set the clock\n      to a time earlier than the compile date of the NTP daemon.\n\
    \   o  Prevent the NTP daemon from putting 'INIT' in the reference ID of\n   \
    \   its NTP packets upon initializing.  This will make it more\n      difficult\
    \ for attackers to know when the daemon reboots.\n"
- title: 5.3.  Detection of Attacks through Monitoring
  contents:
  - "5.3.  Detection of Attacks through Monitoring\n   Operators SHOULD monitor their\
    \ NTP instances to detect attacks.  Many\n   known attacks on NTP have particular\
    \ signatures.  Common attack\n   signatures include:\n   1.  Bogus packets - A\
    \ packet whose origin timestamp does not match\n       the value that is expected\
    \ by the client.\n   2.  Zero origin packet - A packet with an origin timestamp\
    \ set to\n       zero [CVE-2015-8138].\n   3.  A packet with an invalid cryptographic\
    \ MAC.\n   The observation of many such packets could indicate that the client\n\
    \   is under attack.\n"
- title: 5.4.  Kiss-o'-Death Packets
  contents:
  - "5.4.  Kiss-o'-Death Packets\n   The \"Kiss-o'-Death\" (KoD) packet includes a\
    \ rate-management mechanism\n   where a server can tell a misbehaving client to\
    \ reduce its query\n   rate.  KoD packets in general (and the RATE packet in particular)\
    \ are\n   defined in Section 7.4 of [RFC5905].  It is RECOMMENDED that all NTP\n\
    \   devices respect these packets and back off when asked to do so by a\n   server.\
    \  This is even more important for an embedded device, which\n   may not have\
    \ an exposed control interface for NTP.\n   That said, a client MUST only accept\
    \ a KoD packet if it has a valid\n   origin timestamp.  Once a RATE packet is\
    \ accepted, the client should\n   increase its poll interval value (thus decreasing\
    \ its polling rate)\n   to a reasonable maximum.  This maximum can vary by implementation\
    \ but\n   should not exceed a poll interval value of 13 (two hours).  The\n  \
    \ mechanism to determine how much to increase the poll interval value\n   is undefined\
    \ in [RFC5905].  If the client uses the poll interval\n   value sent by the server\
    \ in the RATE packet, it MUST NOT simply\n   accept any value.  Using large interval\
    \ values may create a vector\n   for a denial-of-service attack that causes the\
    \ client to stop\n   querying its server [NDSS16].\n   The KoD rate-management\
    \ mechanism relies on clients behaving properly\n   in order to be effective.\
    \  Some clients ignore the RATE packet\n   entirely, and other poorly implemented\
    \ clients might unintentionally\n   increase their poll rate and simulate a denial-of-service\
    \ attack.\n   Server administrators are advised to be prepared for this and take\n\
    \   measures outside of the NTP protocol to drop packets from misbehaving\n  \
    \ clients when these clients are detected.\n   Kiss-o'-Death (KoD) packets can\
    \ be used in denial-of-service attacks.\n   Thus, the observation of even just\
    \ one RATE packet with a high poll\n   value could be sign that the client is\
    \ under attack.  And KoD packets\n   are commonly accepted even when not cryptographically\
    \ authenticated,\n   which increases the risk of denial-of-service attacks.\n"
- title: 5.5.  Broadcast Mode Only on Trusted Networks
  contents:
  - "5.5.  Broadcast Mode Only on Trusted Networks\n   Per [RFC5905], NTP's broadcast\
    \ mode is authenticated using symmetric\n   key cryptography.  The broadcast server\
    \ and all its broadcast clients\n   share a symmetric cryptographic key, and the\
    \ broadcast server uses\n   this key to append a MAC to the broadcast packets\
    \ it sends.\n   Importantly, all broadcast clients that listen to this server\
    \ have to\n   know the cryptographic key.  This means that any client can use\
    \ this\n   key to send valid broadcast messages that look like they come from\n\
    \   the broadcast server.  Thus, a rogue broadcast client can use its\n   knowledge\
    \ of this key to attack the other broadcast clients.\n   For this reason, an NTP\
    \ broadcast server and all its clients have to\n   trust each other.  Broadcast\
    \ mode SHOULD only be run from within a\n   trusted network.\n"
- title: 5.6.  Symmetric Mode Only with Trusted Peers
  contents:
  - "5.6.  Symmetric Mode Only with Trusted Peers\n   In symmetric mode, two peers,\
    \ Alice and Bob, can both push and pull\n   synchronization to and from each other\
    \ using either ephemeral\n   symmetric passive (mode 2) or persistent symmetric\
    \ active (NTP mode\n   1) packets.  The persistent association is preconfigured\
    \ and\n   initiated at the active peer but is not preconfigured at the passive\n\
    \   peer (Bob).  Upon receipt of a mode 1 NTP packet from Alice, Bob\n   mobilizes\
    \ a new ephemeral association if he does not have one\n   already.  This is a\
    \ security risk for Bob because an arbitrary\n   attacker can attempt to change\
    \ Bob's time by asking Bob to become its\n   symmetric passive peer.\n   For this\
    \ reason, a host SHOULD only allow symmetric passive\n   associations to be established\
    \ with trusted peers.  Specifically, a\n   host SHOULD require each of its symmetric\
    \ passive associations to be\n   cryptographically authenticated.  Each symmetric\
    \ passive association\n   SHOULD be authenticated under a different cryptographic\
    \ key.\n"
- title: 6.  NTP in Embedded Devices
  contents:
  - "6.  NTP in Embedded Devices\n   As computing becomes more ubiquitous, there will\
    \ be many small\n   embedded devices that require accurate time.  These devices\
    \ may not\n   have a persistent battery-backed clock, so using NTP to set the\n\
    \   correct time on power-up may be critical for proper operation.  These\n  \
    \ devices may not have a traditional user interface, but if they\n   connect to\
    \ the Internet, they will be subject to the same security\n   threats as traditional\
    \ deployments.\n"
- title: 6.1.  Updating Embedded Devices
  contents:
  - "6.1.  Updating Embedded Devices\n   Vendors of embedded devices are advised to\
    \ pay attention to the\n   current state of protocol security issues and bugs\
    \ in their chosen\n   implementation because their customers don't have the ability\
    \ to\n   update their NTP implementation on their own.  Those devices may have\n\
    \   a single firmware upgrade, provided by the manufacturer, that updates\n  \
    \ all capabilities at once.  This means that the vendor assumes the\n   responsibility\
    \ of making sure their devices have an up-to-date and\n   secure NTP implementation.\n\
    \   Vendors of embedded devices SHOULD include the ability to update the\n   list\
    \ of NTP servers used by the device.\n   There is a catalog of NTP server abuse\
    \ incidents, some of which\n   involve embedded devices, on the Wikipedia page\
    \ for NTP Server Misuse\n   and Abuse [MISUSE].\n"
- title: 6.2.  Server Configuration
  contents:
  - "6.2.  Server Configuration\n   Vendors of embedded devices with preconfigured\
    \ NTP servers need to\n   carefully consider which servers to use.  There are\
    \ several public-\n   facing NTP servers available, but they may not be prepared\
    \ to service\n   requests from thousands of new devices on the Internet.  Vendors\
    \ MUST\n   only preconfigure NTP servers that they have permission to use.\n \
    \  Vendors are encouraged to invest resources into providing their own\n   time\
    \ servers for their devices to connect to.  This may be done\n   through the NTP\
    \ Pool Project, as documented in Section 3.6.\n   Vendors should read [RFC4085],\
    \ which advises against embedding\n   globally routable IP addresses in products\
    \ and offers several better\n   alternatives.\n"
- title: 7.  NTP over Anycast
  contents:
  - "7.  NTP over Anycast\n   Anycast is described in BCP 126 [RFC4786] (see also\
    \ [RFC7094]).  With\n   anycast, a single IP address is assigned to multiple servers,\
    \ and\n   routers direct packets to the closest active server.\n   Anycast is\
    \ often used for Internet services at known IP addresses,\n   such as DNS.  Anycast\
    \ can also be used in large organizations to\n   simplify the configuration of\
    \ many NTP clients.  Each client can be\n   configured with the same NTP server\
    \ IP address, and a pool of anycast\n   servers can be deployed to service those\
    \ requests.  New servers can\n   be added to or taken from the pool, and other\
    \ than a temporary loss\n   of service while a server is taken down, these additions\
    \ can be\n   transparent to the clients.\n   Note well that using a single anycast\
    \ address for NTP presents its\n   own potential issues.  It means each client\
    \ will likely use a single\n   time server source.  A key element of a robust\
    \ NTP deployment is each\n   client using multiple sources of time.  With multiple\
    \ time sources, a\n   client will analyze the various time sources, select good\
    \ ones, and\n   disregard poor ones.  If a single anycast address is used, this\n\
    \   analysis will not happen.  This can be mitigated by creating\n   multiple,\
    \ separate anycast pools so clients can have multiple sources\n   of time while\
    \ still gaining the configuration benefits of the anycast\n   pools.\n   If clients\
    \ are connected to an NTP server via anycast, the client\n   does not know which\
    \ particular server they are connected to.  As\n   anycast servers enter and leave\
    \ the network or the network topology\n   changes, the server to which a particular\
    \ client is connected may\n   change.  This may cause a small shift in time from\
    \ the perspective of\n   the client when the server to which it is connected changes.\
    \  Extreme\n   cases where the network topology changes rapidly could cause the\n\
    \   server seen by a client to rapidly change as well, which can lead to\n   larger\
    \ time inaccuracies.  It is RECOMMENDED that network operators\n   only deploy\
    \ anycast NTP in environments where operators know these\n   small shifts can\
    \ be tolerated by the applications running on the\n   clients being synchronized\
    \ in this manner.\n   Configuration of an anycast interface is independent of\
    \ NTP.  Clients\n   will always connect to the closest server, even if that server\
    \ is\n   having NTP issues.  It is RECOMMENDED that anycast NTP\n   implementations\
    \ have an independent method of monitoring the\n   performance of NTP on a server.\
    \  If the server is not performing to\n   specification, it should remove itself\
    \ from the anycast network.  It\n   is also RECOMMENDED that each anycast NTP\
    \ server have an alternative\n   method of access, such as an alternate unicast\
    \ IP address, so its\n   performance can be checked independently of the anycast\
    \ routing\n   scheme.\n   One useful application in large networks is to use a\
    \ hybrid unicast/\n   anycast approach.  Stratum 1 NTP servers can be deployed\
    \ with unicast\n   interfaces at several sites.  Each site may have several Stratum\
    \ 2\n   servers with two Ethernet interfaces or a single interface that can\n\
    \   support multiple addresses.  One interface has a unique unicast IP\n   address.\
    \  The second has an anycast IP interface (with a shared IP\n   address per location).\
    \  The unicast interfaces can be used to obtain\n   time from the Stratum 1 servers\
    \ globally (and perhaps peer with the\n   other Stratum 2 servers at their site).\
    \  Clients at each site can be\n   configured to use the shared anycast address\
    \ for their site,\n   simplifying their configuration.  Keeping the anycast routing\n\
    \   restricted on a per-site basis will minimize the disruption at the\n   client\
    \ if its closest anycast server changes.  Each Stratum 2 server\n   can be uniquely\
    \ identified on their unicast interface to make\n   monitoring easier.\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   This document has no IANA actions.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   Time is a fundamental component of security on\
    \ the Internet.  The\n   absence of a reliable source of current time subverts\
    \ many common web\n   authentication schemes, e.g., by allowing the use of expired\n\
    \   credentials or allowing the replay of messages only intended to be\n   processed\
    \ once.\n   Much of this document directly addresses how to secure NTP servers.\n\
    \   In particular, see Section 2, Section 4, and Section 5.\n   There are several\
    \ general threats to time-synchronization protocols,\n   which are discussed in\
    \ [RFC7384].\n   [NTSFORNTP] specifies the Network Time Security (NTS) mechanism\
    \ and\n   applies it to NTP.  Readers are encouraged to check the status of the\n\
    \   document and make use of the methods it describes.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC2827]  Ferguson, P. and D. Senie, \"Network Ingress Filtering:\n     \
    \         Defeating Denial of Service Attacks which employ IP Source\n       \
    \       Address Spoofing\", BCP 38, RFC 2827, DOI 10.17487/RFC2827,\n        \
    \      May 2000, <https://www.rfc-editor.org/info/rfc2827>.\n   [RFC4085]  Plonka,\
    \ D., \"Embedding Globally-Routable Internet\n              Addresses Considered\
    \ Harmful\", BCP 105, RFC 4085,\n              DOI 10.17487/RFC4085, June 2005,\n\
    \              <https://www.rfc-editor.org/info/rfc4085>.\n   [RFC4786]  Abley,\
    \ J. and K. Lindqvist, \"Operation of Anycast\n              Services\", BCP 126,\
    \ RFC 4786, DOI 10.17487/RFC4786,\n              December 2006, <https://www.rfc-editor.org/info/rfc4786>.\n\
    \   [RFC5905]  Mills, D., Martin, J., Ed., Burbank, J., and W. Kasch,\n      \
    \        \"Network Time Protocol Version 4: Protocol and Algorithms\n        \
    \      Specification\", RFC 5905, DOI 10.17487/RFC5905, June 2010,\n         \
    \     <https://www.rfc-editor.org/info/rfc5905>.\n   [RFC8174]  Leiba, B., \"\
    Ambiguity of Uppercase vs Lowercase in RFC\n              2119 Key Words\", BCP\
    \ 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [AUTOKEY]  Roettger, S., \"Autokey-Protocol\
    \ Analysis\", August 2011,\n              <https://lists.ntp.org/pipermail/\n\
    \              ntpwg/2011-August/001714.html>.\n   [BCP38WIKI]\n             \
    \ \"BCP38.info Wiki\", October 2016, <http://www.bcp38.info>.\n   [CCR16]    Malhotra,\
    \ A. and S. Goldberg, \"Attacking NTP's\n              Authenticated Broadcast\
    \ Mode\", SIGCOMM Computer\n              Communications Review (CCR) Volume 46,\
    \ Issue 2,\n              DOI 10.1145/2935634.2935637, April 2016.\n   [CONFIGNTP]\n\
    \              Network Time Foundation, \"Configuring NTP\", November 2018,\n\
    \              <https://support.ntp.org/bin/view/Support/ConfiguringNTP>.\n  \
    \ [CTRLMSG]  Haberman, B., Ed., \"Control Messages Protocol for Use with\n   \
    \           Network Time Protocol Version 4\", Work in Progress,\n           \
    \   draft-ietf-ntp-mode-6-cmds-06, September 2018.\n   [CVE-2015-8138]\n     \
    \         Van Gundy, M. and J. Gardner, \"Network Time Protocol\n            \
    \  Origin Timestamp Check Impersonation Vulnerability\",\n              January\
    \ 2016,\n              <https://www.talosintel.com/reports/TALOS-2016-0077>.\n\
    \   [CVE-2015-8139]\n              Van Gundy, M., \"Network Time Protocol ntpq\
    \ and ntpdc\n              Origin Timestamp Disclosure Vulnerability\", January\
    \ 2016,\n              <https://www.talosintel.com/reports/TALOS-2016-0078>.\n\
    \   [CVE-2016-1548]\n              Gardner, J. and M. Lichvar, \"Xleave Pivot:\
    \ NTP Basic Mode\n              to Interleaved\", April 2016,\n              <https://blog.talosintel.com/2016/04/\n\
    \              vulnerability-spotlight-further-ntpd_27.html>.\n   [DATAMIN]  Franke,\
    \ D. and A. Malhotra, \"NTP Client Data\n              Minimization\", Work in\
    \ Progress, draft-ietf-ntp-data-\n              minimization-04, March 2019.\n\
    \   [DDOS]     Prince, M., \"Technical Details Behind a 400Gbps NTP\n        \
    \      Amplification DDoS Attack\", February 2014,\n              <https://blog.cloudflare.com/technical-details-behind-a-\n\
    \              400gbps-ntp-amplification-ddos-attack>.\n   [IERS]     IERS, \"\
    IERS Bulletins\",\n              <https://www.iers.org/IERS/EN/Publications/Bulletins/\n\
    \              bulletins.html>.\n   [IMC14]    Czyz, J., Kallitsis, M., Gharaibeh,\
    \ M., Papadopoulos, C.,\n              Bailey, M., and M. Karir, \"Taming the\
    \ 800 Pound Gorilla:\n              The Rise and Decline of NTP DDoS Attacks\"\
    , Proceedings of\n              the 2014 Internet Measurement Conference,\n  \
    \            DOI 10.1145/2663716.2663717, November 2014.\n   [LEAPSEC]  Burnicki,\
    \ M., \"Leap Second Smearing\", <http://bk1.ntp.org/\n              ntp-stable/README.leapsmear?PAGE=anno>.\n\
    \   [MILLS2006]\n              Mills, D., \"Computer network time synchronization:\
    \ the\n              Network Time Protocol\", CRC Press, 2006.\n   [MISUSE]  \
    \ Wikipedia, \"NTP Server Misuse and Abuse\", May 2019,\n              <https://en.wikipedia.org/w/index.php?\n\
    \              title=NTP_server_misuse_and_abuse&oldid=899024751>.\n   [NDSS14]\
    \   Rossow, C., \"Amplification Hell: Revisiting Network\n              Protocols\
    \ for DDoS Abuse\", Network and Distributed System\n              Security (NDSS)\
    \ Symposium 2014,\n              DOI 10.14722/ndss.2014.23233, February 2014,\n\
    \              <https://www.ndss-symposium.org/ndss2014/programme/\n         \
    \     amplification-hell-revisiting-network-protocols-ddos-\n              abuse/>.\n\
    \   [NDSS16]   Malhotra, A., Cohen, I., Brakke, E., and S. Goldberg,\n       \
    \       \"Attacking the Network Time Protocol\", Network and\n              Distributed\
    \ System Security (NDSS) Symposium 2016,\n              DOI 10.14722/ndss.2016.23090,\
    \ February 2016,\n              <https://eprint.iacr.org/2015/1020.pdf>.\n   [NTPDOWN]\
    \  Network Time Foundation, \"NTP Software Downloads\",\n              <http://www.ntp.org/downloads.html>.\n\
    \   [NTSFORNTP]\n              Franke, D., Sibold, D., Teichel, K., Dansarie,\
    \ M., and R.\n              Sundblad, \"Network Time Security for the Network\
    \ Time\n              Protocol\", Work in Progress, draft-ietf-ntp-using-nts-for-\n\
    \              ntp-20, July 2019.\n   [POOLUSE]  NTP Pool Project, \"Use the Pool\"\
    ,\n              <https://www.pool.ntp.org/en/use.html>.\n   [POOLVENDOR]\n  \
    \            NTP Pool Project, \"The NTP Pool for Vendors\",\n              <https://www.pool.ntp.org/en/vendors.html>.\n\
    \   [RFC1305]  Mills, D., \"Network Time Protocol (Version 3)\n              Specification,\
    \ Implementation and Analysis\", RFC 1305,\n              DOI 10.17487/RFC1305,\
    \ March 1992,\n              <https://www.rfc-editor.org/info/rfc1305>.\n   [RFC5906]\
    \  Haberman, B., Ed. and D. Mills, \"Network Time Protocol\n              Version\
    \ 4: Autokey Specification\", RFC 5906,\n              DOI 10.17487/RFC5906, June\
    \ 2010,\n              <https://www.rfc-editor.org/info/rfc5906>.\n   [RFC6151]\
    \  Turner, S. and L. Chen, \"Updated Security Considerations\n              for\
    \ the MD5 Message-Digest and the HMAC-MD5 Algorithms\",\n              RFC 6151,\
    \ DOI 10.17487/RFC6151, March 2011,\n              <https://www.rfc-editor.org/info/rfc6151>.\n\
    \   [RFC7094]  McPherson, D., Oran, D., Thaler, D., and E. Osterweil,\n      \
    \        \"Architectural Considerations of IP Anycast\", RFC 7094,\n         \
    \     DOI 10.17487/RFC7094, January 2014,\n              <https://www.rfc-editor.org/info/rfc7094>.\n\
    \   [RFC7384]  Mizrahi, T., \"Security Requirements of Time Protocols in\n   \
    \           Packet Switched Networks\", RFC 7384, DOI 10.17487/RFC7384,\n    \
    \          October 2014, <https://www.rfc-editor.org/info/rfc7384>.\n   [RFC8573]\
    \  Malhotra, A. and S. Goldberg, \"Message Authentication Code\n             \
    \ for the Network Time Protocol\", RFC 8573,\n              DOI 10.17487/RFC8573,\
    \ June 2019,\n              <https://www.rfc-editor.org/info/rfc8573>.\n   [SOLAR]\
    \    Wikipedia, \"Solar Time\", May 2019,\n              <https://en.wikipedia.org/w/index.php?\n\
    \              title=Solar_time&oldid=896601472#Mean_solar_time>.\n"
- title: Appendix A.  Best Practices Specific to the Network Time Foundation
  contents:
  - "Appendix A.  Best Practices Specific to the Network Time Foundation\n       \
    \      Implementation\n   The Network Time Foundation (NTF) provides a widely\
    \ used\n   implementation of NTP, known as ntpd [NTPDOWN].  It is an evolution\n\
    \   of the first NTP implementations developed by David Mills at the\n   University\
    \ of Delaware.  This appendix contains additional\n   recommendations specific\
    \ to this implementation that are valid at the\n   time of this writing.\n"
- title: A.1.  Use Enough Time Sources
  contents:
  - "A.1.  Use Enough Time Sources\n   In addition to the recommendation given in\
    \ Section 3.2, the ntpd\n   implementation provides the 'pool' directive.  Starting\
    \ with ntp-\n   4.2.6, using this directive in the ntp.conf file will spin up\
    \ enough\n   associations to provide robust time service and will disconnect poor\n\
    \   servers and add in new servers as needed.  The 'minclock' and\n   'maxclock'\
    \ options of the 'tos' command may be used to override the\n   default values\
    \ of how many servers are discovered through the 'pool'\n   directive.\n"
- title: A.2.  NTP Control and Facility Messages
  contents:
  - "A.2.  NTP Control and Facility Messages\n   In addition to NTP control messages,\
    \ the ntpd implementation also\n   offers the Mode 7 commands for monitoring and\
    \ configuration.\n   If Mode 7 has been explicitly enabled to be used for more\
    \ than basic\n   monitoring, it should be limited to authenticated sessions that\n\
    \   provide a 'requestkey'.\n   As mentioned above, there are two general ways\
    \ to use Mode 6 and Mode\n   7 requests.  One way is to query ntpd for information,\
    \ and this mode\n   can be disabled with:\n   restrict ... noquery\n   The second\
    \ way to use Mode 6 and Mode 7 requests is to modify ntpd's\n   behavior.  Modification\
    \ of ntpd's configuration requires an\n   authenticated session by default.  If\
    \ no authentication keys have\n   been specified, no modifications can be made.\
    \  For additional\n   protection, the ability to perform these modifications can\
    \ be\n   controlled with:\n   restrict ... nomodify\n   Users can prevent their\
    \ NTP servers from considering query/\n   configuration traffic by default by\
    \ adding the following to their\n   ntp.conf file:\n   restrict default -4 nomodify\
    \ notrap nopeer noquery\n   restrict default -6 nomodify notrap nopeer noquery\n\
    \   restrict source nomodify notrap noquery\n"
- title: A.3.  Monitoring
  contents:
  - "A.3.  Monitoring\n   The ntpd implementation allows remote monitoring.  Access\
    \ to this\n   service is generally controlled by the \"noquery\" directive in\
    \ NTP's\n   configuration file (ntp.conf) via a \"restrict\" statement.  The syntax\n\
    \   reads:\n   restrict address mask address_mask noquery\n   If a system is using\
    \ broadcast mode and is running ntp-4.2.8p6 or\n   later, use the fourth field\
    \ of the ntp.keys file to specify the IPs\n   of machines that are allowed to\
    \ serve time to the group.\n"
- title: A.4.  Leap-Second File
  contents:
  - "A.4.  Leap-Second File\n   The use of leap-second files requires ntpd 4.2.6 or\
    \ later.  After\n   fetching the leap-second file onto the server, add this line\
    \ to\n   ntpd.conf to apply and use the file, substituting the proper path:\n\
    \   leapfile \"/path/to/leap-file\"\n   There may be a need to restart ntpd to\
    \ apply this change.\n   ntpd servers with a manually configured leap-second file\
    \ will ignore\n   a leap-second information broadcast from upstream NTP servers\
    \ until\n   the leap-second file expires.  If no valid leap-second file is\n \
    \  available, then a leap-second notification from an attached reference\n   clock\
    \ is always accepted by ntpd.\n   If no valid leap-second file is available, a\
    \ leap-second notification\n   may be accepted from upstream NTP servers.  As\
    \ of ntp-4.2.6, a\n   majority of servers must provide the notification before\
    \ it is\n   accepted.  Before 4.2.6, a leap-second notification would be accepted\n\
    \   if a single upstream server of a group of configured servers provided\n  \
    \ a leap-second notification.  This would lead to misbehavior if single\n   NTP\
    \ servers sent an invalid leap second warning, e.g., due to a\n   faulty GPS receiver\
    \ in one server, but this behavior was once chosen\n   because in the \"early\
    \ days\", there was a greater chance that leap-\n   second information would be\
    \ available from a very limited number of\n   sources.\n"
- title: A.5.  Leap Smearing
  contents:
  - "A.5.  Leap Smearing\n   Leap smearing was introduced in ntpd versions 4.2.8.p3\
    \ and 4.3.47 in\n   response to client requests.  Support for leap smearing is\
    \ not\n   configured by default and must be added at compile time.  In\n   addition,\
    \ no leap smearing will occur unless a leap smear interval is\n   specified in\
    \ ntpd.conf.  For more information, refer to [LEAPSEC].\n"
- title: A.6.  Configuring ntpd
  contents:
  - "A.6.  Configuring ntpd\n   See [CONFIGNTP] for additional information on configuring\
    \ ntpd.\n"
- title: A.7.  Pre-Shared Keys
  contents:
  - "A.7.  Pre-Shared Keys\n   Each communication partner must add the key information\
    \ to their key\n   file in the form:\n   keyid type key\n   where \"keyid\" is\
    \ a number between 1 and 65534, inclusive; \"type\" is\n   an ASCII character\
    \ that defines the key format; and \"key\" is the key\n   itself.\n   An ntpd\
    \ client establishes a protected association by appending the\n   option \"key\
    \ keyid\" to the server statement in ntp.conf,\n   server address key keyid\n\
    \   substituting the server address in the \"address\" field and the\n   numerical\
    \ keyid to use with that server in the \"keyid\" field.\n   A key is deemed trusted\
    \ when its keyid is added to the list of\n   trusted keys by the \"trustedkey\"\
    \ statement in ntp.conf.\n   trustedkey keyid_1 keyid_2 ... keyid_n\n   Starting\
    \ with ntp-4.2.8p7, the ntp.keys file accepts an optional\n   fourth column, a\
    \ comma-separated list of IPs that are allowed to\n   serve time.  Use this feature.\
    \  Note, however, that an adversarial\n   client that knows the symmetric broadcast\
    \ key could still easily\n   spoof its source IP to an IP that is allowed to serve\
    \ time.  This is\n   easy to do because the origin timestamp on broadcast mode\
    \ packets is\n   not validated by the client.  By contrast, client/server and\n\
    \   symmetric modes do require origin timestamp validation, making it\n   more\
    \ difficult to spoof packets [CCR16].\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The authors wish to acknowledge the contributions of Sue\
    \ Graves,\n   Samuel Weiler, Lisa Perdue, Karen O'Donoghue, David Malone, Sharon\n\
    \   Goldberg, Martin Burnicki, Miroslav Lichvar, Daniel Fox Franke,\n   Robert\
    \ Nagy, and Brian Haberman.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Denis Reilly (editor)\n   Orolia USA\n   1565 Jefferson\
    \ Road, Suite 460\n   Rochester, NY  14623\n   United States of America\n   Email:\
    \ denis.reilly@orolia.com\n   Harlan Stenn\n   Network Time Foundation\n   P.O.\
    \ Box 918\n   Talent, OR  97540\n   United States of America\n   Email: stenn@nwtime.org\n\
    \   Dieter Sibold\n   Physikalisch-Technische Bundesanstalt\n   Bundesallee 100\n\
    \   Braunschweig  D-38116\n   Germany\n   Phone: +49-(0)531-592-8420\n   Fax:\
    \   +49-531-592-698420\n   Email: dieter.sibold@ptb.de\n"
