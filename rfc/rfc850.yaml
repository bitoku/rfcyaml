- title: __initial_text__
  contents:
  - "       Standard for Interchange of USENET Messages\n                      Mark\
    \ R. Horton\n[ This memo is distributed as an RFC  only  to  make  this\ninformation\
    \  easily  accessible to researchers in the ARPA\ncommunity.  It does not specify\
    \  an  Internet  standard. ] \n1.  Introduction\nThis document defines the standard\
    \ format for  interchange\nof Network News articles among USENET sites.  It describes\n\
    the format for  articles  themselves,  and  gives  partial\nstandards for transmission\
    \ of news.  The news transmission\nis not entirely standardized in order to give\
    \ a good  deal\nof   flexibility   to   the  individual  hosts  to  choose\ntransmission\
    \ hardware and software, whether to batch news,\nand so on.\nThere are five sections\
    \ to  this  document.   Section  two\nsection  defines  the  format.   Section\
    \ three defines the\nvalid control messages.  Section four specifies some valid\n\
    transmission  methods.  Section five describes the overall\nnews propagation algorithm.\n\
    2.  Article Format\nThe primary consideration in choosing an article format is\n\
    that  it  fit  in with existing tools as well as possible.\nExisting tools include\
    \ both implementations  of  mail  and\nnews.   (The  notesfiles  system  from\
    \  the  University of\nIllinois is considered a news implementation.) A  standard\n\
    format for mail messages has existed for many years on the\nARPANET, and this\
    \  format  meets  most  of  the  needs  of\nUSENET.    Since   the   ARPANET \
    \  format  is  extensible,\nextensions to meet the  additional  needs  of  USENET\
    \  are\neasily  made  within the ARPANET standard.  Therefore, the\nrule is adopted\
    \ that all  USENET  news  articles  must  be\nformatted as valid ARPANET mail\
    \ messages, according to the\nARPANET  standard  RFC  822.   This   standard \
    \  is   more\nrestrictive  than the ARPANET standard, placing additional\nrequirements\
    \ on each article and forbidding use of certain\nARPANET  features.   However,\
    \ it should always be possible\nto use a tool expecting an ARPANET message  to\
    \  process  a\nnews  article.   In  any  situation  where  this  standard\nconflicts\
    \ with the ARPANET standard,  RFC  822  should  be\nconsidered correct and this\
    \ standard in error.\n     Relay-Version: version B 2.10 2/13/83; site cbosgd.UUCP\n\
    \     Posting-Version: version B 2.10 2/13/83; site eagle.UUCP\n     Path: cbosgd!mhuxj!mhuxt!eagle!jerry\n\
    \     From: jerry@eagle.uucp (Jerry Schwarz)\n     Newsgroups: net.general\n \
    \    Subject: Usenet Etiquette -- Please Read\n     Message-ID: <642@eagle.UUCP>\n\
    \     Date: Friday, 19-Nov-82 16:14:55 EST\n     Followup-To: net.news\n     Expires:\
    \ Saturday, 1-Jan-83 00:00:00 EST\n     Date-Received: Friday, 19-Nov-82 16:59:30\
    \ EST\n     Organization: Bell Labs, Murray Hill\n     The body of the article\
    \ comes here, after a blank line.\nHere is an example of a message in the old\
    \ format  (before\nthe  existence  of this standard).  It is recommended that\n\
    implementations also accept articles  in  this  format  to\nease upward conversion.\n\
    \     From: cbosgd!mhuxj!mhuxt!eagle!jerry (Jerry Schwarz)\n     Newsgroups: net.general\n\
    \     Title: Usenet Etiquette -- Please Read\n     Article-I.D.: eagle.642\n \
    \    Posted: Fri Nov 19 16:14:55 1982\n     Received: Fri Nov 19 16:59:30 1982\n\
    \     Expires: Mon Jan  1 00:00:00 1990\n     The body of the article comes here,\
    \ after a blank line.\nSome news systems transmit news in the  \"A\"  format,\
    \ which\nlooks like this:\n     Aeagle.642\n     net.general\n     cbosgd!mhuxj!mhuxt!eagle!jerry\n\
    \     Fri Nov 19 16:14:55 1982\n     Usenet Etiquette - Please Read\n     The\
    \ body of the article comes here, with no blank line.\nAn article consists of\
    \ several header lines, followed by a\nblank  line,  followed  by  the  body of\
    \ the message.  The\nheader lines consist of a keyword, a colon, a  blank,  and\n\
    some  additional  information.   This  is  a subset of the\nARPANET standard,\
    \ simplified to allow simpler software  to\nhandle  it.   The   \"from\"   line\
    \ may optionally include a\nfull name, in the format above, or use the  ARPANET\
    \  angle\nbracket syntax.  To keep the implementations simple, other\nformats\
    \ (for example, with part  of  the  machine  address\nafter the close parenthesis)\
    \ are not allowed.  The ARPANET\nconvention of continuation header lines (beginning\
    \ with  a\nblank or tab) is allowed.\nCertain  headers  are  required,   certain\
    \   headers   are\noptional.   Any unrecognized headers are allowed, and will\n\
    be passed through unchanged.   The  required  headers  are\nRelay-Version,  Posting-Version,\
    \  From,  Date, Newsgroups,\nSubject,  Message-ID,  Path.   The  optional  headers\
    \  are\nFollowup-To,  Date-Received,  Expires,  Reply-To,  Sender,\nReferences,\
    \ Control, Distribution, Organization.\n2.1  Required Headers\n2.1.1  Relay-Version\
    \  This header line shows  the  version\nof  the  program  responsible for the\
    \ transmission of this\narticle over the immediate link, that is, the program\
    \ that\nis  relaying the article from the next site.  For example,\nsuppose site\
    \ A sends an article to  site  B,  and  site  B\nforwards  the  article  to  site\
    \  C.   The  message  being\ntransmitted from A to B would have a Relay-Version\
    \  header\nidentifying  the  program  running  on  A, and the message\ntransmitted\
    \ from B to C would identify the program running\non  B.  This header can be used\
    \ to interpret older headers\nin an upward compatible way.  Relay-Version must\
    \ always be\nthe  first  in  a message; thus, all articles meeting this\nstandard\
    \ will begin with an upper case   \"R\".    No  other\nrestrictions are placed\
    \ on the order of header lines.\nThe line contains two  fields,  separated  by\
    \  semicolons.\nThe fields are the version and the full domain name of the\nsite.\
    \  The version should identify the system program used\n(e.g.,   \"B\")   as \
    \ well  as  a version number and version\ndate.  For example, the header line\
    \ might contain\n   Relay-Version: version B 2.10 2/13/83; site cbosgd.UUCP\n\
    This header should not be passed on to  additional  sites.\nA  relay  program,\
    \  when  passing  an  article  on, should\ninclude only its own Relay-Version,\
    \ not the  Relay-Version\nof  some other site.  (For upward compatibility with\
    \ older\nsoftware, if a Relay-Version is found in a header which is\nnot the first\
    \ line, it should be assumed to be moved by an\nolder version of news and deleted.)\n\
    2.1.2  Posting-Version    This   header   identifies   the\nsoftware  responsible\
    \  for  entering this message into the\nnetwork.  It has the same  format  as\
    \  Relay-Version.   It\nwill  normally  identify  the same site as the Message-ID,\n\
    unless the posting site is serving  as  a  gateway  for  a\nmessage  that  already\
    \  contains a message ID generated by\nmail.  (While it is permissible for a gateway\
    \  to  use  an\nexternally  generated message ID, the message ID should be\nchecked\
    \ to ensure it conforms to this standard and to  RFC\n822.)\n2.1.3  From  The\
    \ From line contains the electronic mailing\naddress  of  the  person who sent\
    \ the message, in the ARPA\ninternet syntax.  It may optionally also contain the\
    \  full\nname  of  the person, in parentheses, after the electronic\naddress.\
    \  The electronic address is the same as the entity\nresponsible for originating\
    \ the article, unless the Sender\nheader is present, in which case the From header\
    \ might not\nbe  verified.   Note  that  in  all site and domain names,\nupper\
    \  and  lower  case  are  considered  the  same,  thus\nmark@cbosgd.UUCP,  mark@cbosgd.uucp,\
    \  and mark@CBosgD.UUcp\nare all equivalent.  User names may or  may  not  be\
    \  case\nsensitive,   for   example,   Billy@cbosgd.UUCP  might  be\ndifferent\
    \ from BillY@cbosgd.UUCP.  Programs  should  avoid\nchanging  the case of electronic\
    \ addresses when forwarding\nnews or mail.\nRFC 822 specifies that all text in\
    \ parentheses  is  to  be\ninterpreted as a comment.  It is common in ARPANET\
    \ mail to\nplace the full name of the user in a comment at the end of\nthe  From\
    \  line.   This  standard  specifies  a more rigid\nsyntax.  The full name is\
    \ not considered a comment, but an\noptional part of the header line.  Either\
    \ the full name is\nomitted, or it appears in parentheses after the electronic\n\
    address  of  the person posting the article, or it appears\nbefore an electronic\
    \ address enclosed in  angle  brackets.\nThus, the three permissible forms are:\n\
    \     From: mark@cbosgd.UUCP\n     From: mark@cbosgd.UUCP (Mark Horton)\n    \
    \ From: Mark Horton <mark@cbosgd.UUCP>\nFull names may contain any printing ASCII\
    \ characters  from\nspace through tilde, with the exceptions that they may not\n\
    contain parentheses  \"(\"   or   \")\",   or  angle  brackets\n\"<\"   or  \"\
    >\".    Additional restrictions may be placed on\nfull names  by  the  mail  standard,\
    \  in  particular,  the\ncharacters  comma   \",\",  colon  \":\",  and semicolon\
    \   \";\" \nare inadvisable in full names.\n2.1.4  Date  The Date line (formerly\
    \   \"Posted\")   is  the\ndate,  in  a  format  that  must be acceptable both\
    \ to the\nARPANET and to the getdate routine, that the  article  was\noriginally\
    \  posted  to  the  network.   This  date remains\nunchanged as the  article \
    \ is  propagated  throughout  the\nnetwork.  One format that is acceptable to\
    \ both is\n     Weekday, DD-Mon-YY HH:MM:SS TIMEZONE\nSeveral examples of  valid\
    \  dates  appear  in  the  sample\narticle above.  Note in particular that ctime\
    \ format:\n     Wdy Mon DD HH:MM:SS YYYY\nis not acceptable because it is not\
    \ a valid ARPANET  date.\nHowever, since older software still generates this format,\n\
    news implementations are encouraged to accept this  format\nand translate it into\
    \ an acceptable format.\nThe contents of the TIMEZONE field is currently subject\
    \ to\nworldwide time zone  abbreviations,  including  the  usual\nAmerican  zones\
    \  (PST, PDT, MST, MDT, CST, CDT, EST, EDT),\nthe   other   North   American \
    \  zones   (Bering   through\nNewfoundland),  European  zones,  Australian zones,\
    \ and so\non.  Lacking a complete list at present (and unsure if  an\nunambiguous\
    \   list   exists),   authors  of  software  are\nencouraged to keep this code\
    \ flexible, and  in  particular\nnot  to  assume  that  time  zone  names are\
    \ exactly three\nletters long.   Implementations  are  free  to  edit  this\n\
    field,  keeping  the  time the same, but changing the time\nzone (with an appropriate\
    \ adjustment  to  the  local  time\nshown) to a known time zone.\n2.1.5  Newsgroups\
    \  The  Newsgroups  line  specifies  which\nnewsgroup  or newsgroups the article\
    \ belongs in.  Multiple\nnewsgroups  may  be  specified,  separated  by  a   comma.\n\
    Newsgroups  specified  must  all  be the names of existing\nnewsgroups, as no\
    \ new newsgroups will be created by simply\nposting to them.\nWildcards (e.g.,\
    \ the word  \"all\")  are never allowed in  a\nNewsgroups  line.  For example,\
    \ a newsgroup  \"net.all\"  is\nillegal, although a newsgroup name    \"net.sport.football\"\
    \ \nis permitted.\nIf an article is received with a Newsgroups  line  listing\n\
    some  valid newsgroups and some invalid newsgroups, a site\nshould  not  remove\
    \  invalid  newsgroups  from  the  list.\nInstead,  the  invalid  newsgroups should\
    \ be ignored.  For\nexample,  suppose  site  A  subscribes  to   the   classes\n\
    \"btl.all\"   and   \"net.all\",   and exchanges news articles\nwith site B, \
    \ which  subscribes  to   \"net.all\"   but  not\n\"btl.all\".      Suppose  \
    \ A   receives   an  article  with\n\"Newsgroups: net.micro,btl.general\".   \
    \  This  article  is\npassed  on  to  B because B receives net.micro, but B does\n\
    not receive btl.general.  A must leave the Newsgroup  line\nunchanged.   If  it\
    \  were  to  remove  \"btl.general\",  the\nedited header could  eventually  reenter\
    \  the    \"btl.all\" \nclass,  resulting in an article that is not shown to users\n\
    subscribing  to   \"btl.general\".    Also,  followups  from\noutside  \"btl.all\"\
    \  would not be shown to such users.\n2.1.6  Subject   The  Subject  line  (formerly\
    \    \"Title\")\ntells  what the article is about.  It should be suggestive\n\
    enough of the contents of the article to enable  a  reader\nto  make  a  decision\
    \ whether to read the article based on\nthe  subject  alone.   If  the  article\
    \  is  submitted  in\nresponse  to another article (e.g., is a  \"followup\")\
    \  the\ndefault subject should  begin  with  the  four  characters\n\"Re: \" \
    \  and the References line is required.    (The user\nmight wish to edit the subject\
    \ of the  followup,  but  the\ndefault should begin with  \"Re: \".)\n2.1.7  Message-ID\
    \  The Message-ID line gives the article a\nunique  identifier.  The same message\
    \ ID may not be reused\nduring the lifetime of any article with the  same  message\n\
    ID.   (It  is recommended that no message ID be reused for\nat least two years.)\
    \ Message ID's have the syntax\n     \"<\" \"string not containing blank or >\"\
    \ \">\"\nIn order to conform to RFC 822, the Message-ID  must  have\nthe format\n\
    \     \"<\" \"unique\" \"@\" \"full domain name\" \">\"\nwhere  \"full domain\
    \ name\"  is the full name of the host at\nwhich  the article entered the network,\
    \ including a domain\nthat host is in, and unique  is  any  string  of  printing\n\
    ASCII  characters,  not  including  \"<\", \">\", or \"@\".  For\nexample,  the\
    \  \"unique\"   part   could   be   an   integer\nrepresenting  a  sequence number\
    \ for articles submitted to\nthe network, or a short string derived from the \
    \ date  and\ntime  the article was created.  For example, valid message\nID for\
    \ an article submitted from  site  ucbvax  in  domain\nBerkeley.ARPA   would \
    \  be  \"<4123@ucbvax.Berkeley.ARPA>\".\nProgrammers are urged not to make  assumptions\
    \  about  the\ncontent  of  message  ID  fields  from other hosts, but to\ntreat\
    \ them as unknown character strings.  It is not  safe,\nfor  example, to assume\
    \ that a message ID will be under 14\ncharacters,  nor  that  it  is  unique \
    \ in  the  first  14\ncharacters.\nThe angle brackets are considered part of the\
    \ message  ID.\nThus,  in  references  to  the  message  ID,  such  as the\nihave/sendme\
    \  and  cancel  control  messages,  the   angle\nbrackets  are  included.   White\
    \  space  characters (e.g.,\nblank and tab) are not  allowed  in  a  message \
    \ ID.   All\ncharacters  between  the  angle  brackets must be printing\nASCII\
    \ characters.\n2.1.8  Path  This line shows the path the article took  to\nreach\
    \  the  current  system.   When  a system forwards the\nmessage, it should add\
    \ its own name to the list of systems\nin  the  Path  line.   The  names  may\
    \ be separated by any\n\"cbosgd!mhuxj!mhuxt\",    \"cbosgd,  mhuxj,  mhuxt\",\
    \     and\n\"@cbosgd.uucp,@mhuxj.uucp,@mhuxt.uucp\"      and       even\n\"teklabs,\
    \   zehntel,   sri-unix@cca!decvax\"    are   valid\nentries.  (The latter path\
    \ indicates a message that passed\nthrough  decvax,  cca,  sri-unix, zehntel,\
    \ and teklabs, in\nthat order.) Additional names should  be  added  from  the\n\
    left,  for  example,  the  most recently added name in the\nthird example was\
    \  \"teklabs\".   Letters,  digits,  periods\nand  hyphens  are  considered  part\
    \  of  site names; other\npunctuation, including blanks, are considered separators.\n\
    Normally, the rightmost name  will  be  the  name  of  the\noriginating  system.\
    \   However,  it is also permissible to\ninclude an extra entry on the right,\
    \ which is the name  of\nthe  sender.   This is for upward compatibility with\
    \ older\nsystem.\nThe Path line is not used for replies, and should  not  be\n\
    taken  as  a  mailing address.  It is intended to show the\nroute the message\
    \  travelled  to  reach  the  local  site.\nThere  are  several  uses for this\
    \ information.  One is to\nmonitor USENET routing for performance  reasons.  \
    \ Another\nis  to  establish  a path to reach new sites.  Perhaps the\nmost important\
    \ is to cut down on redundant USENET  traffic\nby failing to forward a message\
    \ to a site that is known to\nhave already received it.   In  particular,  when\
    \  site  A\nsends  an article to site B, the Path line includes   \"A\",\nso that\
    \ site B will not immediately send the article  back\nto  site  A.   The  site\
    \  name  each site uses to identify\nitself should be  the  same  as  the  name\
    \  by  which  its\nneighbors  know  it,  in  order  to make this optimization\n\
    possible.\nA site adds its own name to the front of a  path  when  it\nreceives\
    \  a message from another site.  Thus, if a message\nwith path A!X!Y!Z is passed\
    \ from site A to site B, B  will\nadd  its own name to the path when it receives\
    \ the message\nfrom A, e.g., B!A!X!Y!Z.  If B then passes the message  on\nto\
    \  C,  the  message  sent  to  C  will  contain  the path\nB!A!X!Y!Z, and when\
    \ C receives it, C  will  change  it  to\nC!B!A!X!Y!Z.\nSpecial upward compatibility\
    \ note: Since the From, Sender,\nand  Reply-To lines are in internet format, and\
    \ since many\nUSENET  sites  do  not  yet  have   mailers   capable   of\nunderstanding\
    \  internet  format,  it would break the reply\ncapability to completely sever\
    \ the connection between  the\nPath  header  and  the  reply  function.   Thus,\
    \ sites are\nrequired to continue to keep the Path line  in  a  working\nreply\
    \  format  as much as possible, until January 1, 1984.\nIt is recognized that\
    \ the path is not always a valid reply\nstring in older implementations, and no\
    \ requirement to fix\nthis problem is placed on implementations.   However,  the\n\
    at the front of the path, and of starting  the  path  with\nthe  site  name, \
    \ an   \"!\",   and the user name, should be\nmaintained at least until 1984.\n\
    2.2  Optional Headers\n2.2.1  Reply-To  This line has the same  format  as  From.\n\
    If present, mailed replies to the author should be sent to\nthe name given here.\
    \  Otherwise, replies are mailed to the\nname  on the From line.  (This does not\
    \ prevent additional\ncopies from being sent to recipients named by the replier,\n\
    or  on  To  or  Cc lines.) The full name may be optionally\ngiven, in parentheses,\
    \ as in the From line.\n2.2.2  Sender  This field is present only if the submitter\n\
    manually enters a From line.  It is intended to record the\nentity responsible\
    \  for  submitting  the  article  to  the\nnetwork,  and  should  be  verified\
    \ by the software at the\nsubmitting site.\nFor example, if John Smith is visiting\
    \ CCA and  wishes  to\npost  an  article to the network, using friend Sarah Jones\n\
    account, the message might read\n     From: smith@ucbvax.uucp (John Smith)\n \
    \    Sender: jones@cca.arpa (Sarah Jones)\nIf a gateway  program  enters  a  mail\
    \  message  into  the\nnetwork at site sri-unix, the lines might read\n     From:\
    \ John.Doe@CMU-CS-A.ARPA\n     Sender: network@sri-unix.ARPA\nThe primary purpose\
    \ of this field is to be able  to  track\ndown  articles to determine how they\
    \ were entered into the\nnetwork.  The  full  name  may  be  optionally  given,\
    \  in\nparentheses, as in the From line.\n2.2.3  Followup-To  This  line  has\
    \  the  same  format  as\nNewsgroups.   If  present,  follow-up  articles  are\
    \ to be\nposted to the newsgroup(s) listed here.  If this  line  is\nnot  present,\
    \  followups  are  posted  to the newsgroup(s)\nlisted in the Newsgroups line,\
    \ except  that  followups  to\n\"net.general\"  should instead go to  \"net.followup\"\
    .\n2.2.4  Date-Received  This line (formerly  \"Received\")  is\nin  a  legal\
    \  USENET date format.  It records the date and\ntime that the article was  first\
    \  received  on  the  local\nsystem.   If  this  line  is  present  in an article\
    \ being\ntransmitted from one host to another, the  receiving  host\nshould  ignore\
    \  it  and  replace it with the current date.\nSince this field is intended for\
    \ local use only,  no  site\nis  required  to support it.  However, no site should\
    \ pass\n2.2.5  Expires  This line,  if  present,  is  in  a  legal\nUSENET  date\
    \  format.  It specifies a suggested expiration\ndate for the article.  If not\
    \ present, the  local  default\nexpiration date is used.\nThis field is intended\
    \ to be used  to  clean  up  articles\nwith  a  limited usefulness, or to keep\
    \ important articles\naround for longer than  usual.   For  example,  a  message\n\
    announcing  an  upcoming  seminar could have an expiration\ndate the day after\
    \ the seminar, since the message  is  not\nuseful  after the seminar is over.\
    \  Since local sites have\nlocal  policies  for  expiration  of  news  (depending\
    \  on\navailable disk space, for instance), users are discouraged\nfrom providing\
    \ expiration dates for articles unless  there\nis  a  natural  expiration date\
    \ associated with the topic.\nSystem software should  almost  never  provide \
    \ a  default\nExpires line.  Leave it out and allow local policies to be\nused\
    \ unless there is a good reason not to.\n2.2.6  References  This field lists the\
    \  message  ID's  of\nany articles prompting the submission of this article. \
    \ It\nis required for all follow-up articles, and forbidden when\na new subject\
    \ is raised.  Implementations should provide a\nfollow-up command, which allows\
    \ a user to post a follow-up\narticle.   This  command  should  generate  a Subject\
    \ line\nwhich is the same as the original article, except that  if\nthe original\
    \ subject does not begin with \"Re: \" or \"re: \",\nthe  four  characters   \"\
    Re: \"  are  inserted  before  the\nsubject.   If  there is no References line\
    \ on the original\nheader, the References line should contain the message  ID\n\
    of  the  original  article (including the angle brackets).\nIf the original article\
    \ does have a References  line,  the\nfollowup  article should have a References\
    \ line containing\nthe text of the original References line, a blank, and the\n\
    message ID of the original article.\nThe purpose of the References header is to\
    \ allow  articles\nto  be  grouped  into  conversations by the user interface\n\
    program.  This allows conversations within a newsgroup  to\nbe  kept  together,\
    \  and  potentially users might shut off\nentire conversations without unsubscribing\
    \ to a newsgroup.\nUser  interfaces  may not make use of this header, but all\n\
    automatically  generated  followups  should  generate  the\nReferences line for\
    \ the benefit of systems that do use it,\nand manually generated followups (e.g.\
    \ typed in well after\nthe  original  article  has  been  printed by the machine)\n\
    should be encouraged to include them as well.\n2.2.7  Control  If an article contains\
    \ a Control line, the\narticle  is  a control message.  Control messages are used\n\
    for communication among USENET host machines,  not  to  be\nread  by  users. \
    \  Control messages are distributed by the\nsame newsgroup mechanism as ordinary\
    \ messages.   The  body\nFor  upward  compatibility,  messages   that   match\
    \   the\nnewsgroup   pattern    \"all.all.ctl\"    should   also   be\ninterpreted\
    \ as control messages.  If no Control: header is\npresent  on  such  messages,\
    \  the  subject  is used as the\ncontrol message.  However, messages on newsgroups\
    \ matching\nthis pattern do not conform to this standard.\n2.2.8  Distribution\
    \   This  line  is  used  to  alter  the\ndistribution scope of the message. \
    \ It has the same format\nas the Newsgroups  line.   User  subscriptions  are\
    \  still\ncontrolled  by  Newsgroups, but the message is sent to all\nsystems\
    \ subscribing to the newsgroups on the  Distribution\nline instead of the Newsgroups\
    \ line.  Thus, a car for sale\nin New Jersey might have headers including\n  \
    \   Newsgroups: net.auto,net.wanted\n     Distribution: nj.all\nso that  it  would\
    \  only  go  to  persons  subscribing  to\nnet.auto  or  net.wanted within New\
    \ Jersey.  The intent of\nthis header is to further restrict the distribution\
    \  of  a\nnewsgroup, not to increase it.  A local newsgroup, such as\nnj.crazy-eddie,\
    \ will probably not be propagated  by  sites\noutside  New  Jersey  that do not\
    \ show such a newsgroup as\nvalid.  Wildcards in newsgroup names in  the  Distribution\n\
    line are allowed.  Followup articles should default to the\nsame Distribution\
    \ line as the original  article,  but  the\nuser  can change it to a more limited\
    \ one, or escalate the\ndistribution if it was originally restricted  and  a \
    \ more\nwidely distributed reply is appropriate.\n2.2.9  Organization  The text\
    \ of  this  line  is  a  short\nphrase  describing  the  organization  to which\
    \ the sender\nbelongs, or to which the machine belongs.  The  intent  of\nthis\
    \  line  is  to  help  identify  the person posting the\nmessage, since site names\
    \ are often cryptic enough to make\nit  hard  to  recognize the organization by\
    \ the electronic\naddress.\n3.  Control Messages\nThis section lists the control\
    \ messages currently defined.\nThe  body  of  the  Control header is the control\
    \ message.\nMessages are a sequence of zero or more  words,  separated\nby  white\
    \  space  (blanks or tabs).  The first word is the\nname  of  the  control  message,\
    \   remaining   words   are\nparameters  to  the  message.  The remainder of the\
    \ header\nand the body of the message are also potential parameters;\nfor  example,\
    \  the  From  line might suggest an address to\nwhich a response is to be mailed.\n\
    Implementors  and  administrators  may  choose  to   allow\ncontrol  messages\
    \  to  be automatically carried out, or to\nqueue  them  for  manual  processing.\
    \   However,  manually\nprocessed messages should be dealt with promptly.\n3.1\
    \  Cancel\n     cancel <message ID>\nIf an article with the given message ID is\
    \ present on  the\nlocal  system,  the  article is cancelled.  This mechanism\n\
    allows a user to cancel an article after the  article  has\nbeen distributed over\
    \ the network.\nOnly the author of the article or the local super user  is\nallowed\
    \  to  use  this  message.  The verified sender of a\nmessage is the Sender  line,\
    \  or  if  no  Sender  line  is\npresent, the From line.  The verified sender\
    \ of the cancel\nmessage must be the same as  either  the  Sender  or  From\n\
    field  of  the original message.  A verified sender in the\ncancel message is\
    \ allowed to match an unverified  From  in\nthe original message.\n3.2  Ihave/Sendme\n\
    \     ihave <message ID list> <remotesys>\n     sendme <message ID list> <remotesys>\n\
    This message is part  of  the   \"ihave/sendme\"   protocol,\nwhich  allows  one\
    \  site  (say  \"A\")  to tell another site\n(\"B\")  that  a particular message\
    \ has been received on  A.\nSuppose  that site A receives article  \"ucbvax.1234\"\
    ,  and\nwishes to transmit the article to site  B.   A  sends  the\ncontrol  message\
    \   \"ihave  ucbvax.1234  A\"   to site B (by\nposting it to newsgroup  \"to.B\"\
    ).   B  responds  with  the\ncontrol  message   \"sendme  ucbvax.1234  B\"  (on\
    \ newsgroup\nto.A) if it has not already received  the  article.   Upon\nreceiving\
    \ the Sendme message, A sends the article to B.\nThis protocol can be used to\
    \ cut down on redundant traffic\nbetween  sites.  It is optional and should be\
    \ used only if\nthe particular situation makes it worthwhile.  Frequently,\nthe\
    \  outcome  is  that,  since  most original messages are\nshort, and since there\
    \ is a high overhead to start sending\na  new  message  with  UUCP,  it costs\
    \ as much to send the\nIhave as it would cost to send the article itself.\nOne\
    \ possible solution to this overhead problem is to batch\nrequests.   Several\
    \  message  ID's  may  be  announced  or\nrequested in one message.  If no message\
    \ ID's  are  listed\nin  the control message, the body of the message should be\n\
    scanned for message ID's, one per line.\n3.3  Newgroup\n     newgroup <groupname>\n\
    This control message creates a new newsgroup with the name\ngiven.  Since no articles\
    \ may be posted or forwarded until\na newsgroup is created, this message is required\
    \ before  a\nnewsgroup  can  be  used.   The  body  of  the  message is\nexpected\
    \ to be a short paragraph describing  the  intended\nuse of the newsgroup.\n3.4\
    \  Rmgroup\n     rmgroup <groupname>\nThis message removes a  newsgroup  with\
    \  the  given  name.\nSince  the  newsgroup  is  removed  from every site on the\n\
    network, this  command  should  be  used  carefully  by  a\nresponsible administrator.\n\
    3.5  Sendsys\n     sendsys (no arguments)\nThe   \"sys\"   file,  listing  all\
    \  neighbors   and   which\nnewsgroups  are  sent  to each neighbor, will be mailed\
    \ to\nthe author of the control message (Reply-to,  if  present,\notherwise  From).\
    \   This  information is considered public\ninformation, and it is  a  requirement\
    \  of  membership  in\nUSENET  that  this  information  be  provided  on request,\n\
    either automatically in response to this control  message,\nor  manually,  by\
    \ mailing the requested information to the\nauthor of the message.  This information\
    \ is used  to  keep\nthe  map  of  USENET  up  to  date, and to determine where\n\
    netnews is sent.\nThe format of the file mailed back to the author should be\n\
    the same as that of the  \"sys\"  file.  This format has one\nline per neighboring\
    \ site (plus one  line  for  the  local\nsite),  containing four colon separated\
    \ fields.  The first\nfield has the site name of the neighbor, the second  field\n\
    has  a newsgroup pattern describing the newsgroups sent to\nthe neighbor.  The\
    \ third and fourth fields are not defined\nby this standard.  A sample response:\n\
    \     From cbosgd!mark  Sun Mar 27 20:39:37 1983\n     Subject: response to your\
    \ sendsys request\n     To: mark@cbosgd.UUCP\n     cbosgd:osg,cb,btl,bell,net,fa,to,test\n\
    \     ucbvax:net,fa,to.ucbvax:L:\n     cbosg:net,fa,bell,btl,cb,osg,to.cbosg:F:/usr/spool/outnews/cbosg\n\
    \     cbosgb:osg,to.cbosgb:F:/usr/spool/outnews/cbosgb\n     sescent:net,fa,bell,btl,cb,to.sescent:F:/usr/spool/outnews/sescent\n\
    \     npois:net,fa,bell,btl,ug,to.npois:F:/usr/spool/outnews/npois\n     mhuxi:net,fa,bell,btl,ug,to.mhuxi:F:/usr/spool/outnews/mhuxi\n\
    3.6  Senduuname\n     senduuname      (no arguments)\nThe  \"uuname\"  program\
    \ is run, and the output is mailed to\nthe  author  of the control message (Reply-to,\
    \ if present,\notherwise From).  This program lists all uucp neighbors of\nthe\
    \  local site.  This information is used to make maps of\nthe UUCP network.  The\
    \ sys file is not  the  same  as  the\nUUCP   L.sys   file.   The  L.sys  file\
    \  should  never  be\ntransmitted to another party without the  consent  of  the\n\
    sites whose passwords are listed therein.\nIt is optional for a site  to  provide\
    \  this  information.\nSome  reply  should  be  made to the author of the control\n\
    message, so that a transmission error won't be blamed.  It\nis  also  permissible\
    \ for a site to run the uuname program\n(or in some other way determine the  uucp\
    \  neighbors)  and\nedit  the output, either automatically or manually, before\n\
    mailing the reply back to the  author.   The  file  should\ncontain  one  site\
    \  per line, beginning with the uucp site\nname.  Additional information may be\
    \  included,  separated\nfrom the site name by a blank or tab.  The phone number\
    \ or\npassword for the site should NOT be included, as the reply\nis  considered\
    \  to  be  in the public domain.  (The uuname\nprogram will send only the site\
    \ name and  not  the  entire\ncontents  of  the  L.sys  file,  thus,  phone  numbers\
    \ and\npasswords are not transmitted.)\nThe purpose of this message is to  generate\
    \  and  maintain\nUUCP mail routing maps.  Thus, connections over which mail\n\
    can be sent using the site!user syntax should be included,\nregardless  of whether\
    \ the link is actually a UUCP link at\nthe physical level.  If a mail router should\
    \  use  it,  it\nshould   be  included.   Since  all  information  sent  in\n\
    response to this message is optional, sites  are  free  to\nedit  the  list, \
    \ deleting secret or private links they do\nnot wish to publicise.\n3.7  Version\n\
    \     version (no arguments)\nThe name and version of the software running on\
    \ the  local\nsystem  is  to be mailed back to the author of the article\n4. \
    \ Transmission Methods\nUSENET is not a physical network,  but  rather  a  logical\n\
    network  resting  on  top  of  several  existing  physical\nnetworks.  These networks\
    \ include, but are not limited to,\nUUCP,  the ARPANET, an Ethernet, the BLICN\
    \ network, an NSC\nHyperchannel, and a Berknet.  What is  important  is  that\n\
    two  neighboring systems on USENET have some method to get\na new article, in\
    \ the format listed here, from one  system\nto  the other, and once on the receiving\
    \ system, processed\nby the netnews software on that system.  (On UNIX systems,\n\
    this  usually  means  the  \"rnews\"  program being run with\nthe article on the\
    \ standard input.)\nIt is not  a  requirement  that  USENET  sites  have  mail\n\
    systems  capable  of  understanding the ARPA Internet mail\nsyntax, but  it  is\
    \  strongly  recommended.   Since  From,\nReply-To,  and  Sender  lines  use \
    \ the  Internet  syntax,\nreplies  will  be  difficult  or  impossible  without\
    \   an\ninternet  mailer.   A  site without an internet mailer can\nattempt to\
    \ use the Path header line for replies, but  this\nfield  is not guaranteed to\
    \ be a working path for replies.\nIn any event,  any  site  generating  or  forwarding\
    \  news\nmessages must have an internet address that allows them to\nreceive mail\
    \ from sites with internet  mailers,  and  they\nmust include their internet address\
    \ on their From line.\n4.1  Remote Execution\nSome networks permit direct remote\
    \ command execution.   On\nthese  networks,  news  may  be  forwarded by spooling\
    \ the\nrnews command with the article on the standard input.  For\nexample,  if\
    \  the remote system is called  \"remote\",  news\nwould be sent over a UUCP link\
    \ with the  command   \"uux  -\nremote!rnews\",   and on a Berknet,   \"net -mremote\
    \ rnews\".\nIt is important that the article be sent  via  a  reliable\nmechansim,\
    \ normally involving the possibility of spooling,\nrather than direct real-time\
    \ remote  execution.   This  is\nbecause,  if the remote system is down, a direct\
    \ execution\ncommand  will  fail,  and  the  article  will   never   be\ndelivered.\
    \   If the article is spooled, it will eventually\nbe delivered when both systems\
    \ are up.\n4.2  Transfer by Mail\nOn some systems, direct remote spooled  execution\
    \  is  not\npossible.   However, most systems support electronic mail,\nand a\
    \ news article can be sent as mail.  One  approach  is\nto  send  a  mail  message\
    \  which is identical to the news\nmessage: the mail headers are the news  headers,\
    \  and  the\nmail  body  is the news body.  By convention, this mail is\nsent\
    \ to the user  \"newsmail\"  on the remote machine.\nOne problem with  this  method\
    \  is  that  it  may  not  be\npossible to convince the mail system that the From\
    \ line of\nthe message is valid, since the mail message was generated\nby  a program\
    \ on a system different from the source of the\nnews article.  Another  problem\
    \  is  that  error  messages\ncaused  by  the  mail  transmission  would  be sent\
    \ to the\noriginator of the news article, who has  no  control  over\nnews  transmission\
    \  between two cooperating hosts and does\nnot know who  to  contact.   Transmission\
    \  error  messages\nshould  be directed to a responsible contact person on the\n\
    sending machine.\nA solution to this problem  is  to  encapsulate  the  news\n\
    article  into a mail message, such that the entire article\n(headers and body)\
    \ are  part  of  the  body  of  the  mail\nmessage.  The convention here is that\
    \ such mail is sent to\nuser  \"rnews\"  on the remote system.  A mail message\
    \  body\nis  generated  by prepending the letter  \"N\"  to each line\nof the\
    \ news article,  and  then  attaching  whatever  mail\nheaders  are convenient\
    \ to generate.  The N's are attached\nto prevent any special lines  in  the  news\
    \  article  from\ninterfering  with  mail  transmission,  and to prevent any\n\
    extra lines inserted by the mailer (headers, blank  lines,\netc.)  from  becoming\
    \ part of the news article.  A program\non the  receiving  machine  receives \
    \ mail  to    \"rnews\",\nextracting  the  article itself and invoking the   \"\
    rnews\" \nprogram.  An example in this format might look like this:\n     Date:\
    \ Monday, 3-Jan-83 08:33:47 MST\n     From: news@cbosgd.UUCP\n     Subject: network\
    \ news article\n     To: rnews@npois.UUCP\n     NRelay-Version: B 2.10  2/13/83\
    \ cbosgd.UUCP\n     NPosting-Version: B 2.9 6/21/82 sask.UUCP\n     NPath: cbosgd!mhuxj!harpo!utah-cs!sask!derek\n\
    \     NFrom: derek@sask.UUCP (Derek Andrew)\n     NNewsgroups: net.test\n    \
    \ NSubject: necessary test\n     NMessage-ID: <176@sask.UUCP>\n     NDate: Monday,\
    \ 3-Jan-83 00:59:15 MST\n     N\n     NThis really is a test.  If anyone out there\
    \ more than 6\n     Nhops away would kindly confirm this note I would\n     Nappreciate\
    \ it.  We suspect that our news postings\n     Nare not getting out into the world.\n\
    \     N\nUsing mail solves the spooling problem,  since  mail  must\nalways  be\
    \  spooled  if  the  destination  host  is  down.\nHowever, it adds more overhead\
    \ to the transmission process\n(to  encapsulate  and  extract  the  article) and\
    \ makes it\nharder for software to give different priorities  to  news\n4.3  Batching\n\
    Since news articles are usually short, and since  a  large\nnumber  of  messages\
    \ are often sent between two sites in a\nday, it may make sense to batch  news\
    \  articles.   Several\narticles  can  be  combined  into one large article, using\n\
    conventions agreed upon in advance by the two sites.   One\nsuch  batching  scheme\
    \ is described here; its use is still\nconsidered experimental.\nNews articles\
    \ are combined into a script, separated  by  a\nheader of the form:\n     ##!\
    \ rnews 1234\nwhere 1234 is the length, in bytes, of the article.   Each\nsuch\
    \  line  is followed by an article containing the given\nnumber of bytes.  (The\
    \ newline at the end of each line  of\nthe  article  is counted as one byte, for\
    \ purposes of this\ncount, even if it is stored as CRLF.) For example, a batch\n\
    of articles might look like this:\n      #! rnews 374\n      Relay-Version: version\
    \ B 2.10 2/13/83; site cbosgd.UUCP\n      Posting-Version: version B 2.10 2/13/83;\
    \ site eagle.UUCP\n      Path: cbosgd!mhuxj!mhuxt!eagle!jerry\n      From: jerry@eagle.uucp\
    \ (Jerry Schwarz)\n      Newsgroups: net.general\n      Subject: Usenet Etiquette\
    \ -- Please Read\n      Message-ID: <642@eagle.UUCP>\n      Date: Friday, 19-Nov-82\
    \ 16:14:55 EST\n      Here is an important message about USENET Etiquette.\n \
    \     #! rnews 378\n      Relay-Version: version B 2.10 2/13/83; site cbosgd.UUCP\n\
    \      Posting-Version: version B 2.10 2/13/83; site eagle.UUCP\n      Path: cbosgd!mhuxj!mhuxt!eagle!jerry\n\
    \      From: jerry@eagle.uucp (Jerry Schwarz)\n      Newsgroups: net.followup\n\
    \      Subject: Notes on Etiquette article\n      Message-ID: <643@eagle.UUCP>\n\
    \      Date: Friday, 19-Nov-82 17:24:12 EST\n      There was something I forgot\
    \ to mention in the last message.\nBatched news is recognized because the first\
    \ character  in\nthe  message  is  \"#\".   The message is then passed to the\n\
    unbatcher for interpretation.\nThis section describes the overall scheme  of \
    \ USENET  and\nthe algorithm followed by sites in propagating news to the\nentire\
    \  network.   Since  all  sites   are   affected   by\nincorrectly  formatted\
    \ articles and by propagation errors,\nit is important for the method to be standardized.\n\
    USENET is a directed graph.  Each node in the graph  is  a\nhost  computer,  each\
    \  arc  in the graph is a transmission\npath from one host to another host.  Each\
    \ arc is  labelled\nwith  a  newsgroup  pattern,  specifying  which  newsgroup\n\
    classes are forwarded along  that  link.   Most  arcs  are\nbidirectional,  that\
    \  is,  if  site  A  sends  a  class of\nnewsgroups to site B, then site B usually\
    \ sends  the  same\nclass  of  newsgroups to site A.  This bidirectionality is\n\
    not, however, required.\nUSENET is made up of many subnetworks.  Each subnet has\
    \  a\nname,  such  as   \"net\"   or   \"btl\".   The special subnet\n\"net\"\
    \   is defined to be USENET, although the union of all\nsubnets may be a superset\
    \ of USENET (because of sites that\nget local newsgroup classes but do not get\
    \ net.all).  Each\nsubnet  is  a connected graph, that is, a path exists from\n\
    every  node  to  every  other  node  in  the  subnet.   In\naddition,  the  entire\
    \ graph is (theoretically) connected.\n(In practice, some political  considerations\
    \  have  caused\nsome sites to be unable to post articles reaching the rest\n\
    of the network.)\nAn  article  is  posted  on  one  machine  to  a  list  of\n\
    newsgroups.    That   machine  accepts  it  locally,  then\nforwards it to all\
    \ its neighbors that are interested in at\nleast one of the newsgroups of the\
    \ message.  (Site A deems\nsite  B  to  be   \"interested\"   in  a  newsgroup\
    \  if  the\nnewsgroup  matches  the  pattern  on  the arc from A to B.\nThis pattern\
    \ is stored in a file on the  A  machine.)  The\nsites  receiving  the  incoming\
    \ article examine it to make\nsure they really want the article, accept it locally,\
    \  and\nthen  in  turn forward the article to all their interest\nneighbors. \
    \  This  process  continues  until  the   entire\nnetwork has seen the article.\n\
    An important part of the algorithm is  the  prevention  of\nloops.   The  above\
    \  process would cause a message to loop\nalong a cycle forever.  In particular,\
    \ when site  A  sends\nan  article to site B, site B will send it back to site\
    \ A,\nwhich will send it to site B, and so on.  One solution  to\nthis  is  the\
    \ history mechanism.  Each site keeps track of\nall articles  it  has  seen  (by\
    \  their  message  ID)  and\nwhenever an article comes in that it has already\
    \ seen, the\nincoming article is discarded immediately.  This  solution\nis  \
    \ sufficient   to   prevent   loops,   but   additional\noptimizations can be\
    \ made to  avoid  sending  articles  to\nOne optimization is that an article should\
    \ never  be  sent\nto  a machine listed in the Path line of the header.  When\n\
    a machine name is in the Path line, the message  is  known\nto  have passed through\
    \ the machine.  Another optimization\nis that, if the article originated on site\
    \ A, then site  A\nhas   already  seen  the  article.   (Origination  can  be\n\
    determined by the Posting-Version line.)\nThus, if an article is posted to  newsgroup\
    \    \"net.misc\",\nit  will match the pattern  \"net.all\"  (where  \"all\" \
    \ is a\nmetasymbol that matches any string), and will be forwarded\nto  all  sites\
    \ that subscribe to net.all (as determined by\nwhat their neighbors send them).\
    \  These sites make up  the\n\"net\"   subnetwork.   An article posted to   \"\
    btl.general\" \nwill reach all sites receiving  \"btl.all\",  but  will  not\n\
    reach  sites  that do not get  \"btl.all\".   In effect, the\narticles  reaches\
    \  the   \"btl\"   subnetwork.   An  article\nposted  to newsgroups  \"net.micro,btl.general\"\
    \  will reach\nall sites subscribing to either of the two classes.\n"
