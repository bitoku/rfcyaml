- contents:
  - "      Session Traversal Utilities for NAT (STUN) Message Handling\n               for
    SIP Back-to-Back User Agents (B2BUAs)\n"
  title: __initial_text__
- contents:
  - "Abstract\n   Session Initiation Protocol (SIP) Back-to-Back User Agents (B2BUAs)\n
    \  are often designed to be on the media path rather than just\n   intercepting
    signaling.  This means that B2BUAs often act on the\n   media path leading to
    separate media legs that the B2BUA correlates\n   and bridges together.  When
    acting on the media path, B2BUAs are\n   likely to receive Session Traversal Utilities
    for NAT (STUN) packets\n   as part of Interactive Connectivity Establishment (ICE)
    processing.\n   This document defines behavior for a B2BUA performing ICE processing.\n
    \  The goal of this document is to ensure that B2BUAs properly handle\n   SIP
    messages that carry ICE semantics in Session Description Protocol\n   (SDP) and
    STUN messages received as part of the ICE procedures for\n   NAT and Firewall
    traversal of multimedia sessions.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7584.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   2\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . . .
    . . .   4\n   3.  SDP-Modifying Signaling-only B2BUA  . . . . . . . . . . . .
    .   5\n   4.  Media Plane B2BUAs  . . . . . . . . . . . . . . . . . . . . .   5\n
    \    4.1.  Overview  . . . . . . . . . . . . . . . . . . . . . . . .   5\n     4.2.
    \ Mandatory ICE Termination with B2BUA  . . . . . . . . . .   6\n     4.3.  Optional
    ICE Termination with B2BUA . . . . . . . . . . .   9\n     4.4.  STUN Handling
    in B2BUA with Forked Signaling  . . . . . .  11\n   5.  Security Considerations
    . . . . . . . . . . . . . . . . . . .  12\n   6.  References  . . . . . . . .
    . . . . . . . . . . . . . . . . .  12\n     6.1.  Normative References  . . .
    . . . . . . . . . . . . . . .  12\n     6.2.  Informative References  . . . .
    . . . . . . . . . . . . .  13\n   Acknowledgements  . . . . . . . . . . . . .
    . . . . . . . . . . .  13\n   Authors' Addresses  . . . . . . . . . . . . . .
    . . . . . . . . .  14\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   In many SIP deployments, SIP entities exist in the SIP signaling
    and\n   media path between the originating and final terminating endpoints,\n
    \  which go beyond the definition of a traditional SIP proxy.  These SIP\n   entities,
    commonly known as B2BUAs, are described in [RFC7092] and\n   often perform functions
    not defined in Standards Track RFCs.\n   SIP [RFC3261] and other session control
    protocols that try to use a\n   direct path for media are typically difficult
    to use across Network\n   Address Translators (NATs).  These protocols use IP
    addresses and\n   transport port numbers encoded in the signaling, such as SDP\n
    \  [RFC4566] and, in the case of SIP, various header fields.  Such\n   addresses
    and ports are unreachable if any peers are separated by\n   NATs.\n   Mechanisms
    such as STUN [RFC5389], Traversal Using Relays around NAT\n   (TURN) [RFC5766],
    and ICE [RFC5245] did not exist when protocols like\n   SIP began to be deployed.
    \ Some mechanisms, such as the early\n   versions of STUN, started appearing,
    but they were unreliable and\n   suffered a number of issues typical for UNilateral
    Self-Address\n   Fixing (UNSAF) as described in [RFC3424].  For these reasons,
    B2BUAs\n   are being used by SIP domains for SIP and media-related purposes.\n
    \  These B2BUAs use proprietary mechanisms to enable SIP devices behind\n   NATs
    to communicate across the NAT.\n   [RFC7362] describes how B2BUAs can perform
    Hosted NAT Traversal (HNT)\n   in certain deployments.  Section 5 of [RFC7362]
    describes some of the\n   issues with Session Border Controllers (SBCs) implementing
    HNT and\n   offers some mitigation strategies.  The most commonly used approach\n
    \  to solve these issues is \"restricted-latching\", defined in Section 5\n   of
    [RFC7362], whereby the B2BUA will not latch to any packets from a\n   source public
    IP address other than the one the SIP User Agent (UA)\n   uses for SIP signaling.
    \ However, this is susceptible to attacks\n   where an attacker who is able to
    see the source IP address of the SIP\n   UA may generate packets using the same
    IP address.  There are other\n   threats described in Section 5 of [RFC7362] for
    which Secure Real-\n   time Transport Protocol (SRTP) [RFC3711] can be used as
    a solution.\n   However, this would require the B2BUAs to terminate and reoriginate\n
    \  SRTP, which is not always desirable.\n   This document describes proper behavior
    of B2BUAs performing ICE\n   processing.  This includes defining consistent handling
    of SIP\n   messages carrying ICE semantics in SDP and STUN messages received as\n
    \  part of the ICE procedures performed on the media path for NAT and\n   Firewall
    traversal of multimedia sessions.\n   A B2BUA can use ICE [RFC5245], which provides
    authentication tokens\n   (conveyed in the ice-ufrag and ice-pwd attributes) that
    allow the\n   identity of a peer to be confirmed before engaging in media exchange.\n
    \  This can solve some of the security concerns with HNT solution.\n   Further,
    ICE has other benefits like selecting an address when more\n   than one address
    is available (e.g., a dual-stack environment where\n   the host can have both
    IPv4 and IPv6 addresses), verifying that a\n   path works before connecting the
    call, etc.  For these reasons,\n   endpoints often use ICE to pick a candidate
    pair for media traffic\n   between two agents.\n   B2BUAs often operate on the
    media path and have the ability to modify\n   SIP headers and SDP bodies as part
    of their normal operation.  Such\n   entities, when present on the media path,
    are likely to take an\n   active role in the session signaling depending on their
    level of\n   activity on the media path.  For example, some B2BUAs modify portions\n
    \  of the SDP body (e.g., IP address, port) and subsequently modify the\n   media
    packet headers as well.  Section 18.6 of ICE [RFC5245] explains\n   two different
    behaviors when B2BUAs are present.  Some B2BUAs are\n   likely to remove all the
    SDP ICE attributes before sending the SDP\n   across to the other side.  Consequently,
    the call will appear to both\n   endpoints as though the other side doesn't support
    ICE.  There are\n   other types of B2BUAs that pass the ICE attributes without\n
    \  modification, yet modify the default destination for media contained\n   in
    the \"m=\" and \"c=\" lines and the RTCP attribute (defined in\n   [RFC3605]).
    \ This will be detected as an ice-mismatch, and ICE\n   processing will be aborted
    for the session.  The session may continue\n   if the endpoints are able to reach
    each other over the default\n   candidate (sent in \"m=\" and \"c=\" lines).\n
    \  Section 3.1.3 of [RFC7092] defines a SDP-Modifying Signaling-only\n   B2BUA
    that operates in the signaling plane only and is not in the\n   media path, but
    it does modify SDP bodies and is thus aware of and\n   understands SDP syntax
    and semantics.  Such B2BUA MUST follow the\n   behavior mentioned in Section 3.\n
    \  Section 3.2 of [RFC7092] describes three different categories of\n   B2BUAs
    that operate on both the signaling (SIP and SDP) and media\n   planes according
    to the level of involvement and active participation\n   in the media plane:\n
    \  o  A B2BUA that acts as a simple media relay.  It is effectively\n      unaware
    of anything that is transported and only modifies the\n      transport header
    (could be UDP/IP) of the media packets.\n   o  A B2BUA that performs a media-aware
    role.  It inspects and\n      potentially modifies RTP or RTP Control Protocol
    (RTCP) headers;\n      but it does not modify the payload of RTP/RTCP.\n   o  A
    B2BUA that performs a media-termination role and operates at the\n      media
    payload layer, such as RTP/RTCP payload (e.g., a\n      transcoder).\n   When
    B2BUAs that operate on the media plane (media relay, media\n   aware, or media
    termination) are involved in a session between two\n   endpoints performing ICE,
    then it MUST follow the behavior described\n   in Section 4.\n"
  title: 1.  Introduction
- contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in [RFC2119].\n   All
    of the pertinent B2BUA terminology and taxonomy used in this\n   document is defined
    in [RFC7092].\n   NATs are widely used in the Internet by consumers and organizations.\n
    \  Although specific NAT behaviors vary, this document uses the term\n   \"NAT\",
    which maps to NAT and Network Address Port Translation (NAPT)\n   terms from [RFC3022],
    for devices that map any IPv4 or IPv6 address\n   and transport port number to
    another IPv4 or IPv6 address and\n   transport port number.  This includes consumer
    NATs, Firewall-NATs,\n   IPv4-IPv6 NATs, Carrier-Grade NATs (CGNs) [RFC6888],
    etc.\n"
  title: 2.  Terminology
- contents:
  - "3.  SDP-Modifying Signaling-only B2BUA\n   An SDP-Modifying Signaling-only B2BUA
    is one that operates in the\n   signaling plane only and is not in the media path,
    but it modifies\n   SDP bodies as described in Section 3.1.3 of [RFC7092].  Such
    B2BUAs\n   MUST NOT change the IP address in the \"c=\" line, the port in the
    \"m=\"\n   line, and the ICE semantics of SDP, as doing so can cause an ice-\n
    \  mismatch.\n"
  title: 3.  SDP-Modifying Signaling-only B2BUA
- contents:
  - '4.  Media Plane B2BUAs

    '
  - contents:
    - "4.1.  Overview\n   When one or both of the endpoints are behind a NAT, and
      there is a\n   B2BUA between the endpoints, the B2BUAs MUST support ICE or at
      a\n   minimum support ICE lite functionality as described in [RFC5245].\n   Such
      B2BUAs MUST use the mechanism described in Section 2.2 of\n   [RFC5245] to demultiplex
      STUN packets that arrive on the RTP/RTCP\n   port.\n   The subsequent sections
      describe the behavior B2BUAs MUST follow for\n   handling ICE messages.  A B2BUA
      can terminate ICE and thus have two\n   ICE contexts with either endpoint.  The
      reason for ICE termination\n   could be due to the need for B2BUA to be in the
      media path (e.g.,\n   address hiding for privacy, interworking between ICE to
      no-ICE,\n   etc.).  A B2BUA can also be in optional ICE termination mode and\n
      \  passes across the candidate list and STUN short-term credentials\n   (ice-ufrag
      and ice-pwd attributes) from one endpoint to the other\n   side after adding
      its own candidates.  A B2BUA can be in optional ICE\n   termination mode when
      it does not have a need to be on the media\n   path.  The below sections describe
      the behaviors for these two cases.\n"
    title: 4.1.  Overview
  - contents:
    - "4.2.  Mandatory ICE Termination with B2BUA\n   A B2BUA that wishes to always
      be in the media path follows these\n   steps:\n   o  When a B2BUA sends out
      the SDP, it MUST advertise support for ICE\n      and MAY include B2BUA's candidates
      of different types for each\n      component of each media stream.\n   o  If
      the B2BUA is in ICE lite mode as described in Section 2.7 of\n      [RFC5245],
      then it MUST send an a=ice-lite attribute and MUST\n      include B2BUA host
      candidates for each component of each media\n      stream.\n   o  If the B2BUA
      supports full ICE, then it MAY include B2BUA's\n      candidates of different
      types for each component of each media\n      stream.\n   o  The B2BUA MUST
      generate new username and password values for ice-\n      ufrag and ice-pwd
      attributes when it sends out the SDP and MUST\n      NOT propagate the ufrag
      password values it received in the\n      incoming SDP.  This ensures that the
      short-term credentials used\n      for both the legs are different.  The short-term
      credentials\n      include authentication tokens (conveyed in the ice-ufrag
      and ice-\n      pwd attributes), which the B2BUA can use to verify the identity
      of\n      the peer.  The B2BUA terminates the ICE messages on each leg and\n
      \     does not propagate them.\n   o  The B2BUA MUST NOT propagate the candidate
      list received in the\n      incoming SDP to the outbound SDP and instead only
      advertise its\n      candidate list.  The B2BUA MUST also add its default candidate
      in\n      the \"c=\" line (IP address) and \"m=\" line (port).  In this way,
      the\n      B2BUA will be always in the media path.\n   o  Depending on whether
      the B2BUA supports ICE lite or full ICE, it\n      implements the appropriate
      procedures mentioned in [RFC5245] for\n      ICE connectivity checks.\n       +-------+
      \           +-------------------+             +-----+\n       | Alice |            |
      Media Plane B2BUA |             | Bob |\n       +-------+            +-------------------+
      \            +-----+\n           |(1) INVITE               |(3) INVITE                 |\n
      \          |    a=ice-ufrag1         |    a=ice-ufrag2           |\n           |
      \   a=ice-pwd1           |    a=ice-pwd2             |\n           |   (Alice's
      IP, port)    |   (B2BUA's IP, port)      |\n           | (Alice's candidate
      list)|   (B2BUA's candidate list)|\n           |------------------------>|-------------------------->|\n
      \          |                         |                           |\n           |(2)
      100 trying           |                           |\n           |<------------------------|
      \                          |\n           |                         |(4) 100
      trying             |\n           |                         |<--------------------------|\n
      \          |                         |                           |\n           |
      \                        |(5) 200 OK                 |\n           |                         |
      \   a=ice-ufrag3           |\n           |                         |    a=ice-pwd3
      \            |\n           |                         |    (Bob's IP, port)       |\n
      \          |                         |    (Bob's candidate list) |\n           |
      \                        |<--------------------------|\n           |(6) 200
      OK               |                           |\n           |    a=ice-ufrag4
      \        |-----------ACK------------>|\n           |    a=ice-pwd4           |
      \          (7)             |\n           | (B2BUA's IP, port)      |                           |\n
      \          |(B2BUA's candidate list1)|                           |\n           |<------------------------|
      \                          |\n           |                         |                           |\n
      \          |--------ACK------------->|                           |\n           |
      \       (8)              |                           |\n           |                         |
      \                          |\n           |<----ICE Connectivity 1->|                           |\n
      \          |      checks+conclusion  |<-----ICE Connectivity 2-->|\n           |
      \          (9)           |      checks+conclusion    |\n           |                         |
      \          (10)            |\n           |                         |                           |\n
      \          |<-------Media packets--->|<----Media packets-------->|\n           |
      \          (11)          |         (12)              |\n           |                         |
      \                          |\n           |<---ICE keepalives 1---->|                           |\n
      \          |          (13)           |<----ICE keepalives 2----->|\n                                                (13)\n
      \             Figure 1: INVITE with SDP Having ICE and with a\n                     Media
      Plane B2BUA Terminating ICE\n   The above figure shows an example call flow
      with two endpoints, Alice\n   and Bob, using ICE processing, and a B2BUA handing
      STUN messages from\n   both the endpoints.  For the sake of brevity, the entire
      list of ICE\n   SDP attributes are not shown.  Also, the STUN messages exchanged
      as\n   part of ICE connectivity checks are not shown.  Key steps to note\n   from
      the call flow are:\n   o  Alice sends an INVITE with SDP having ICE candidates.\n
      \  o  The B2BUA modifies the received SDP from Alice by removing the\n      received
      candidate list, gathering its own candidates, and\n      generating new username
      and password values for ice-ufrag and ice-\n      pwd attributes.  The B2BUA
      also changes the \"c=\" line and \"m=\"\n      line to have its default candidate
      and forwards the INVITE (Step\n      3) to Bob.\n   o  Bob responds (Step 5)
      to the INVITE with his own list of\n      candidates.\n   o  The B2BUA responds
      to the INVITE from Alice with SDP having a\n      B2BUA candidate list.  The
      B2BUA generates new username and\n      password values for ice-ufrag and ice-pwd
      attributes in the 200 OK\n      response (Step 6).\n   o  ICE Connectivity checks
      happen between Alice and the B2BUA in Step\n      9.  Depending on whether the
      B2BUA supports ICE or ICE lite, it\n      will follow the appropriate procedures
      mentioned in [RFC5245].\n      ICE Connectivity checks also happen between Bob
      and the B2BUA in\n      Step 10.  Steps 9 and 10 happen in parallel.  The B2BUA
      always\n      terminates the ICE messages on each leg and has two independent\n
      \     ICE contexts running.\n   o  Media flows between Alice and Bob via B2BUA
      (Steps 11 and 12).\n   o  STUN keepalives would be used between Alice and B2BUA
      (Step 13)\n      and between Bob and B2BUA (Step 14) to keep NAT and Firewall\n
      \     bindings alive.\n   Since there are two independent ICE contexts on either
      side of the\n   B2BUA, it is possible that ICE checks will conclude on one side\n
      \  before concluding on the other side.  This could result in an ongoing\n   media
      session for one end while the other is still being set up.  Any\n   such media
      received by the B2BUA would continue to be sent to the\n   other side on the
      default candidate address (that was sent in \"c=\"\n   line).\n"
    title: 4.2.  Mandatory ICE Termination with B2BUA
  - contents:
    - "4.3.  Optional ICE Termination with B2BUA\n   A B2BUA willing to be in the
      media path only for NAT traversal, but\n   that does not otherwise require to
      be in the media path, can do the\n   following steps mentioned in this section.\n
      \  o  When a B2BUA receives an incoming SDP with ICE semantics, it\n      copies
      the received candidate list and appends its own candidate\n      list in the
      outgoing SDP.  The B2BUA also copies the ufrag/\n      password values it received
      in the incoming SDP to the outgoing\n      SDP and then sends out the SDP.\n
      \  o  The B2BUA's candidates MAY have lower priority than the candidates\n      provided
      by the endpoint, this way the endpoint and remote peer\n      candidate pairs
      are tested first before trying candidate pairs\n      with B2BUA's candidates.\n
      \  o  After offer/answer is complete, the endpoints will have both the\n      B2BUAs
      and remote peer candidates.  It will then use ICE\n      procedures described
      in Section 8 of [RFC5245] to nominate a\n      candidate pair for sending and
      receiving media streams.\n   o  With this approach, the B2BUA will be in the
      media path only if\n      the ICE checks between all the candidate pairs formed
      from both\n      the endpoints fail.\n       +-------+            +-------------------+
      \            +-----+\n       | Alice |            | Media Plane B2BUA |             |
      Bob |\n       +-------+            +-------------------+             +-----+\n
      \          |(1) INVITE               |(3)  INVITE                |\n           |
      \  a=ice-ufrag1          |     a=ice-ufrag1          |\n           |   a=ice-pwd1
      \           |     a=ice-pwd1            |\n           |  (Alice's IP, port)
      \    | (Alice's IP, port)        |\n           |(Alice's candidate list) | (Alice's
      candidate list + |\n           |                         |  B2BUA's candidate
      list1) |\n           |------------------------>|-------------------------->|\n
      \          |                         |                           |\n           |(2)
      \ 100 trying          |                           |\n           |<------------------------|
      \                          |\n           |                         |(4) 100
      trying             |\n           |                         |<--------------------------|\n
      \          |                         |                           |\n           |
      \                        |(5) 200 OK                 |\n           |                         |
      \   a=ice-ufrag2           |\n           |                         |    a=ice-pwd2
      \            |\n           |                         | (Bob's IP, port)          |\n
      \          |                         | (Bob's candidate list)    |\n           |
      \                        |<--------------------------|\n           |(6) 200
      OK               |                           |\n           |    a=ice-ufrag2
      \        |-----------ACK------------>|\n           |    a=ice-pwd2           |
      \          (7)             |\n           |  (Bob's IP,port)        |                           |\n
      \          |(B2BUA's candidate list2 |                           |\n           |
      + Bob's candidate list) |                           |\n           |<------------------------|
      \                          |\n           |                         |                           |\n
      \          |----------ACK----------->|                           |\n           |
      \         (8)            |                           |\n           |                         |
      \                          |\n           |<----ICE Connectivity 1 (9)------------------------->|\n
      \          |                         |                           |\n           |<----ICE
      Connectivity 2->|                           |\n           |      checks+conclusion
      \ |<-----ICE Connectivity 2-->|\n           |           (10)          |      checks+conclusion
      \   |\n           |                         |           (11)            |\n
      \          |                         |                           |\n           |<-------------------Media
      packets------------------->|\n           |                       (12)                          |\n
      \          |                         |                           |\n           |<------------------ICE
      keepalives------------------->|\n                                   (13)\n              Figure
      2: INVITE with SDP Having ICE and with a\n            Media Plane B2BUA in Optional
      ICE Termination Mode\n   The above figure shows a sample call flow with two
      endpoints, Alice\n   and Bob, doing ICE, and a B2BUA handing STUN messages from
      both the\n   endpoints.  For the sake of brevity, the entire ICE SDP attributes\n
      \  are not shown.  Also, the STUN messages exchanged as part of the ICE\n   connectivity
      checks are not shown.  Key steps to note from the call\n   flow are:\n   o  Alice
      sends an INVITE with an SDP having its own candidate list.\n   o  The B2BUA
      propagates the received candidate list in incoming SDP\n      from Alice after
      adding its own candidate list.  The B2BUA also\n      propagates the received
      ice-ufrag and ice-pwd attributes from\n      Alice in the INVITE (Step 3) to
      Bob.  In this example, the B2BUA\n      does not modify the default candidate
      sent in the \"c=\" line and\n      \"m=\" line and retains the values sent originally
      from Alice.  If\n      B2BUA wants to be in the media path when ICE connectivity
      checks\n      between endpoints fails or one of the endpoints does not support\n
      \     ICE, then it overwrites its candidate address and port as a\n      default
      candidate in the \"m=\" and \"c=\" lines.\n   o  Bob responds (Step 5) to the
      INVITE with his own list of\n      candidates.\n   o  The B2BUA responds to
      the INVITE from Alice with an SDP having a\n      B2BUA's candidate list and
      the candidate list received from Bob.\n      The B2BUA would also propagate
      the received ice-ufrag and ice-pwd\n      attributes from Bob in (Step 5) to
      Alice in the 200 OK response\n      (Step 6).\n   o  ICE Connectivity checks
      happen between Alice and Bob in (Step 9).\n      ICE Connectivity checks also
      happen between Alice and the B2BUA\n      and Bob and the B2BUA as shown in
      Steps 10 and 11.  Steps 9, 10,\n      and 11 happen in parallel.  In this example,
      Alice and Bob\n      conclude ICE with a candidate pair that enables them to
      send media\n      directly.\n   o  Media flows between Alice and Bob in Step
      12.\n"
    title: 4.3.  Optional ICE Termination with B2BUA
  - contents:
    - "4.4.  STUN Handling in B2BUA with Forked Signaling\n   Because of forking,
      a B2BUA might receive multiple answers for a\n   single outbound INVITE.  When
      this occurs, the B2BUA SHOULD follow\n   Sections 3.2 or 3.3 for all of those
      received answers.\n"
    title: 4.4.  STUN Handling in B2BUA with Forked Signaling
  title: 4.  Media Plane B2BUAs
- contents:
  - "5.  Security Considerations\n   As described in Section 2.5 of [RFC5245], ICE
    uses the STUN short-\n   term credential mechanism for authentication and message
    integrity.\n   STUN connectivity checks include the MESSAGE-INTEGRITY attribute
    that\n   contains HMAC-SHA1 of the STUN message, and the Hashed Message\n   Authentication
    Code (HMAC) is computed using the key exchanged in the\n   signaling channel.
    \ The signaling channel between the endpoints and\n   B2BUA MUST be encrypted
    so that the key is not visible to\n   eavesdroppers, otherwise the security benefits
    of short-term\n   authentication would be lost.\n"
  title: 5.  Security Considerations
- contents:
  - '6.  References

    '
  - contents:
    - "6.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC3711]  Baugher, M., McGrew, D., Naslund, M., Carrara, E., and K.\n              Norrman,
      \"The Secure Real-time Transport Protocol (SRTP)\",\n              RFC 3711,
      DOI 10.17487/RFC3711, March 2004,\n              <http://www.rfc-editor.org/info/rfc3711>.\n
      \  [RFC5245]  Rosenberg, J., \"Interactive Connectivity Establishment\n              (ICE):
      A Protocol for Network Address Translator (NAT)\n              Traversal for
      Offer/Answer Protocols\", RFC 5245,\n              DOI 10.17487/RFC5245, April
      2010,\n              <http://www.rfc-editor.org/info/rfc5245>.\n   [RFC5389]
      \ Rosenberg, J., Mahy, R., Matthews, P., and D. Wing,\n              \"Session
      Traversal Utilities for NAT (STUN)\", RFC 5389,\n              DOI 10.17487/RFC5389,
      October 2008,\n              <http://www.rfc-editor.org/info/rfc5389>.\n   [RFC5766]
      \ Mahy, R., Matthews, P., and J. Rosenberg, \"Traversal Using\n              Relays
      around NAT (TURN): Relay Extensions to Session\n              Traversal Utilities
      for NAT (STUN)\", RFC 5766,\n              DOI 10.17487/RFC5766, April 2010,\n
      \             <http://www.rfc-editor.org/info/rfc5766>.\n   [RFC7092]  Kaplan,
      H. and V. Pascual, \"A Taxonomy of Session\n              Initiation Protocol
      (SIP) Back-to-Back User Agents\", RFC\n              7092, DOI 10.17487/RFC7092,
      December 2013,\n              <http://www.rfc-editor.org/info/rfc7092>.\n"
    title: 6.1.  Normative References
  - contents:
    - "6.2.  Informative References\n   [RFC3022]  Srisuresh, P. and K. Egevang, \"Traditional
      IP Network\n              Address Translator (Traditional NAT)\", RFC 3022,\n
      \             DOI 10.17487/RFC3022, January 2001,\n              <http://www.rfc-editor.org/info/rfc3022>.\n
      \  [RFC3261]  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston,\n              A.,
      Peterson, J., Sparks, R., Handley, M., and E.\n              Schooler, \"SIP:
      Session Initiation Protocol\", RFC 3261,\n              DOI 10.17487/RFC3261,
      June 2002,\n              <http://www.rfc-editor.org/info/rfc3261>.\n   [RFC3424]
      \ Daigle, L., Ed. and IAB, \"IAB Considerations for\n              UNilateral
      Self-Address Fixing (UNSAF) Across Network\n              Address Translation\",
      RFC 3424, DOI 10.17487/RFC3424,\n              November 2002, <http://www.rfc-editor.org/info/rfc3424>.\n
      \  [RFC3605]  Huitema, C., \"Real Time Control Protocol (RTCP) attribute\n              in
      Session Description Protocol (SDP)\", RFC 3605,\n              DOI 10.17487/RFC3605,
      October 2003,\n              <http://www.rfc-editor.org/info/rfc3605>.\n   [RFC4566]
      \ Handley, M., Jacobson, V., and C. Perkins, \"SDP: Session\n              Description
      Protocol\", RFC 4566, DOI 10.17487/RFC4566,\n              July 2006, <http://www.rfc-editor.org/info/rfc4566>.\n
      \  [RFC6888]  Perreault, S., Ed., Yamagata, I., Miyakawa, S., Nakagawa,\n              A.,
      and H. Ashida, \"Common Requirements for Carrier-Grade\n              NATs (CGNs)\",
      BCP 127, RFC 6888, DOI 10.17487/RFC6888,\n              April 2013, <http://www.rfc-editor.org/info/rfc6888>.\n
      \  [RFC7362]  Ivov, E., Kaplan, H., and D. Wing, \"Latching: Hosted NAT\n              Traversal
      (HNT) for Media in Real-Time Communication\", RFC\n              7362, DOI 10.17487/RFC7362,
      September 2014,\n              <http://www.rfc-editor.org/info/rfc7362>.\n"
    title: 6.2.  Informative References
  title: 6.  References
- contents:
  - "Acknowledgements\n   Special thanks to Dan Wing, Pal Martinsen, Charles Eckel,
    Marc Petit-\n   Huguenin, Simon Perreault, Lorenzo Miniero, Ari Keranen, and\n
    \  Parthasarathi Ravindran for their constructive comments, suggestions,\n   and
    early reviews that were critical to the formulation and\n   refinement of this
    document.\n   Thanks to Ben Campbell, Barry Leiba, Nevil Brownlee, Spencer Dawkins,\n
    \  Sam Hartman, Stephen Farrell, Kathleen Moriarty, and Francis Dupont\n   for
    their thoughtful review comments.\n"
  title: Acknowledgements
- contents:
  - "Authors' Addresses\n   Ram Mohan Ravindranath\n   Cisco Systems, Inc.\n   Cessna
    Business Park, Varthur Hobli\n   Sarjapur Marathahalli Outer Ring Road\n   Bangalore,
    Karnataka  560103\n   India\n   Email: rmohanr@cisco.com\n   Tirumaleswar Reddy\n
    \  Cisco Systems, Inc.\n   Cessna Business Park, Varthur Hobli\n   Sarjapur Marathalli
    Outer Ring Road\n   Bangalore, Karnataka  560103\n   India\n   Email: tireddy@cisco.com\n
    \  Gonzalo Salgueiro\n   Cisco Systems, Inc.\n   7200-12 Kit Creek Road\n   Research
    Triangle Park, NC  27709\n   United States\n   Email: gsalguei@cisco.com\n"
  title: Authors' Addresses
