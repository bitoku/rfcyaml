- title: __initial_text__
  contents:
  - '            A Framework for Packet Selection and Reporting

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\
    \ in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n\
    \   Please review these documents carefully, as they describe your rights\n  \
    \ and restrictions with respect to this document.\n   This document may contain\
    \ material from IETF Documents or IETF\n   Contributions published or made publicly\
    \ available before November\n   10, 2008.  The person(s) controlling the copyright\
    \ in some of this\n   material may not have granted the IETF Trust the right to\
    \ allow\n   modifications of such material outside the IETF Standards Process.\n\
    \   Without obtaining an adequate license from the person(s) controlling\n   the\
    \ copyright in such materials, this document may not be modified\n   outside the\
    \ IETF Standards Process, and derivative works of it may\n   not be created outside\
    \ the IETF Standards Process, except to format\n   it for publication as an RFC\
    \ or to translate it into languages other\n   than English.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies a framework for the PSAMP (Packet SAMPling)\n\
    \   protocol.  The functions of this protocol are to select packets from\n   a\
    \ stream according to a set of standardized Selectors, to form a\n   stream of\
    \ reports on the selected packets, and to export the reports\n   to a Collector.\
    \  This framework details the components of this\n   architecture, then describes\
    \ some generic requirements, motivated by\n   the dual aims of ubiquitous deployment\
    \ and utility of the reports for\n   applications.  Detailed requirements for\
    \ selection, reporting, and\n   exporting are described, along with configuration\
    \ requirements of the\n   PSAMP functions.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \   2. PSAMP Documents Overview ........................................4\n  \
    \ 3. Elements, Terminology, and High-Level Architecture ..............5\n    \
    \  3.1. High-Level Description of the PSAMP Architecture ...........5\n      3.2.\
    \ Observation Points, Packet Streams, and Packet Content .....5\n      3.3. Selection\
    \ Process ..........................................6\n      3.4. Reporting ..................................................7\n\
    \      3.5. Metering Process ...........................................8\n  \
    \    3.6. Exporting Process ..........................................8\n    \
    \  3.7. PSAMP Device ...............................................9\n      3.8.\
    \ Collector ..................................................9\n      3.9. Possible\
    \ Configurations ....................................9\n   4. Generic Requirements\
    \ for PSAMP .................................11\n      4.1. Generic Selection\
    \ Process Requirements ....................11\n      4.2. Generic Reporting Requirements\
    \ ............................12\n      4.3. Generic Exporting Process Requirements\
    \ ....................12\n      4.4. Generic Configuration Requirements ........................13\n\
    \   5. Packet Selection ...............................................13\n  \
    \    5.1. Two Types of Selectors ....................................13\n    \
    \  5.2. PSAMP Packet Selectors ....................................14\n      5.3.\
    \ Selection Fraction Terminology ............................17\n      5.4. Input\
    \ Sequence Numbers for Primitive Selectors ............18\n      5.5. Composite\
    \ Selectors .......................................19\n      5.6. Constraints\
    \ on the Selection Fraction .....................19\n   6. Reporting ......................................................19\n\
    \      6.1. Mandatory Contents of Packet Reports: Basic Reports .......19\n  \
    \    6.2. Extended Packet Reports ...................................20\n    \
    \  6.3. Extended Packet Reports in the Presence of IPFIX ..........20\n      6.4.\
    \ Report Interpretation .....................................21\n   7. Parallel\
    \ Metering Processes ....................................22\n   8. Exporting Process\
    \ ..............................................22\n      8.1. Use of IPFIX ..............................................22\n\
    \      8.2. Export Packets ............................................22\n  \
    \    8.3. Congestion-Aware Unreliable Transport .....................22\n    \
    \  8.4. Configurable Export Rate Limit ............................23\n      8.5.\
    \ Limiting Delay for Export Packets .........................23\n      8.6. Export\
    \ Packet Compression .................................24\n      8.7. Collector\
    \ Destination .....................................25\n      8.8. Local Export\
    \ ..............................................25\n   9. Configuration and Management\
    \ ...................................25\n   10. Feasibility and Complexity ....................................26\n\
    \      10.1. Feasibility ..............................................26\n  \
    \         10.1.1. Filtering .........................................26\n    \
    \       10.1.2. Sampling ..........................................26\n      \
    \     10.1.3. Hashing ...........................................26\n        \
    \   10.1.4. Reporting .........................................27\n          \
    \ 10.1.5. Exporting .........................................27\n      10.2. Potential\
    \ Hardware Complexity ............................27\n   11. Applications ..................................................28\n\
    \      11.1. Baseline Measurement and Drill Down ......................29\n  \
    \    11.2. Trajectory Sampling ......................................29\n    \
    \  11.3. Passive Performance Measurement ..........................30\n      11.4.\
    \ Troubleshooting ..........................................30\n   12. Security\
    \ Considerations .......................................31\n      12.1. Relation\
    \ of PSAMP and IPFIX Security for\n            Exporting Process ........................................31\n\
    \      12.2. PSAMP Specific Privacy Considerations ....................31\n  \
    \    12.3. Security Considerations for Hash-Based Selection .........32\n    \
    \       12.3.1. Modes and Impact of Vulnerabilities ...............32\n      \
    \     12.3.2. Use of Private Parameters in Hash Functions .......33\n        \
    \   12.3.3. Strength of Hash Functions ........................33\n      12.4.\
    \ Security Guidelines for Configuring PSAMP ................34\n   13. Contributors\
    \ ..................................................34\n   14. Acknowledgments\
    \ ...............................................34\n   15. References ....................................................34\n\
    \      15.1. Normative References .....................................34\n  \
    \    15.2. Informative References ...................................35\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   This document describes the PSAMP framework for network elements\
    \ to\n   select subsets of packets by statistical and other methods, and to\n\
    \   export a stream of reports on the selected packets to a Collector.\n   The\
    \ motivation for the PSAMP standard comes from the need for\n   measurement-based\
    \ support for network management and control across\n   multivendor domains. \
    \ This requires domain-wide consistency in the\n   types of selection schemes\
    \ available, and the manner in which the\n   resulting measurements are presented\
    \ and interpreted.\n   The motivation for specific packet selection operations\
    \ comes from\n   the applications that they enable.  Development of the PSAMP\
    \ standard\n   is open to influence by the requirements of standards in related\
    \ IETF\n   Working Groups, for example, IP Performance Metrics (IPPM) [RFC2330]\n\
    \   and Internet Traffic Engineering (TEWG).\n   The name PSAMP is a contraction\
    \ of the phrase \"Packet Sampling\".  The\n   word \"Sampling\" captures the idea\
    \ that only a subset of all packets\n   passing a network element will be selected\
    \ for reporting.  But PSAMP\n   selection operations include random selection,\
    \ deterministic\n   selection (Filtering), and deterministic approximations to\
    \ random\n   selection (Hash-based Selection).\n"
- title: 2. PSAMP Documents Overview
  contents:
  - "2. PSAMP Documents Overview\n   This document is one out of a series of documents\
    \ from the PSAMP\n   group.\n   RFC 5474 (this document): \"A Framework for Packet\
    \ Selection and\n   Reporting\" describes the PSAMP framework for network elements\
    \ to\n   select subsets of packets by statistical and other methods, and to\n\
    \   export a stream of reports on the selected packets to a Collector.\n   Definitions\
    \ of terminology and the use of the terms \"must\", \"should\",\n   and \"may\"\
    \ in this document are informational only.\n   [RFC5475]: \"Sampling and Filtering\
    \ Techniques for IP Packet\n   Selection\" describes the set of packet selection\
    \ techniques supported\n   by PSAMP.\n   [RFC5476]: \"Packet Sampling (PSAMP)\
    \ Protocol Specifications\"\n   specifies the export of packet information from\
    \ a PSAMP Exporting\n   Process to a PSAMP Collecting Process.\n   [RFC5477]:\
    \ \"Information Model for Packet Sampling Exports\" defines an\n   information\
    \ and data model for PSAMP.\n"
- title: 3.  Elements, Terminology, and High-Level Architecture
  contents:
  - '3.  Elements, Terminology, and High-Level Architecture

    '
- title: 3.1.  High-Level Description of the PSAMP Architecture
  contents:
  - "3.1.  High-Level Description of the PSAMP Architecture\n   Here is an informal\
    \ high-level description of the PSAMP protocol\n   operating in a PSAMP Device\
    \ (all terms will be defined presently).  A\n   stream of packets is observed\
    \ at an Observation Point.  A Selection\n   Process inspects each packet to determine\
    \ whether or not it is to be\n   selected for reporting.  The Selection Process\
    \ is part of the\n   Metering Process, which constructs a report on each selected\
    \ packet,\n   using the Packet Content, and possibly other information such as\
    \ the\n   packet treatment at the Observation Point or the arrival timestamp.\n\
    \   An Exporting Process sends the Packet Reports to a Collector,\n   together\
    \ with any subsidiary information needed for their\n   interpretation.\n   The\
    \ following figure indicates the sequence of the three processes\n   (Selection,\
    \ Metering, and Exporting) within the PSAMP device.\n                +------------------+\n\
    \                | Metering Process |\n                | +-----------+    |  \
    \   +-----------+\n      Observed  | | Selection |    |     | Exporting |\n  \
    \    Packet--->| | Process   |--------->| Process   |--->Collector\n      Stream\
    \    | +-----------+    |     +-----------+\n                +------------------+\n\
    \   The following sections give detailed definitions of each of the\n   objects\
    \ just named.\n"
- title: 3.2.  Observation Points, Packet Streams, and Packet Content
  contents:
  - "3.2.  Observation Points, Packet Streams, and Packet Content\n   This section\
    \ contains the definition of terms relevant to obtaining\n   the packet input\
    \ to the Selection Process.\n   * Observation Point\n      An Observation Point\
    \ is a location in the network where IP packets\n      can be observed.  Examples\
    \ include a line to which a probe is\n      attached, a shared medium, such as\
    \ an Ethernet-based LAN, a single\n      port of a router, or a set of interfaces\
    \ (physical or logical) of\n      a router.\n      Note that every Observation\
    \ Point is associated with an\n      Observation Domain and that one Observation\
    \ Point may be a\n      superset of several other Observation Points.  For\n \
    \     example, one Observation Point can be an entire line card.  That\n     \
    \ would be the superset of the individual Observation Points at the\n      line\
    \ card's interfaces.\n   * Observed Packet Stream\n      The Observed Packet Stream\
    \ is the set of all packets observed at\n      the Observation Point.\n   * Packet\
    \ Stream\n      A Packet Stream denotes a set of packets from the Observed Packet\n\
    \      Stream that flows past some specified point within the Metering\n     \
    \ Process.  An example of a Packet Stream is the output of the\n      Selection\
    \ Process.  Note that packets selected from a stream,\n      e.g., by Sampling,\
    \ do not necessarily possess a property by which\n      they can be distinguished\
    \ from packets that have not been\n      selected.  For this reason, the term\
    \ \"stream\" is favored over\n      \"flow\", which is defined as a set of packets\
    \ with common\n      properties [RFC3917].\n   * Packet Content\n      The Packet\
    \ Content denotes the union of the packet header (which\n      includes link layer,\
    \ network layer, and other encapsulation\n      headers) and the packet payload.\n"
- title: 3.3.  Selection Process
  contents:
  - "3.3.  Selection Process\n   This section defines the Selection Process and related\
    \ objects.\n   * Selection Process\n      A Selection Process takes the Observed\
    \ Packet Stream as its input\n      and selects a subset of that stream as its\
    \ output.\n   * Selection State\n      A Selection Process may maintain state\
    \ information for use by the\n      Selection Process.  At a given time, the Selection\
    \ State may\n      depend on packets observed at and before that time, and other\n\
    \      variables.  Examples include:\n         (i) sequence numbers of packets\
    \ at the input of Selectors;\n        (ii) a timestamp of observation of the packet\
    \ at the Observation\n             Point;\n       (iii) iterators for pseudorandom\
    \ number generators;\n        (iv) hash values calculated during selection;\n\
    \         (v) indicators of whether the packet was selected by a given\n     \
    \        Selector.\n      Selection Processes may change portions of the Selection\
    \ State as\n      a result of processing a packet.  Selection State for a packet\n\
    \      reflects the state after processing the packet.\n      * Selector\n   \
    \   A Selector defines the action of a Selection Process on a single\n      packet\
    \ of its input.  If selected, the packet becomes an element\n      of the output\
    \ Packet Stream.\n      The Selector can make use of the following information\
    \ in\n      determining whether a packet is selected:\n         (i) the Packet\
    \ Content;\n        (ii) information derived from the packet's treatment at the\n\
    \             Observation Point;\n       (iii) any Selection State that may be\
    \ maintained by the Selection\n             Process.\n   * Composite Selector\n\
    \      A Composite Selector is an ordered composition of Selectors, in\n     \
    \ which the output Packet Stream issuing from one Selector forms the\n      input\
    \ Packet Stream to the succeeding Selector.\n   * Primitive Selector\n      A\
    \ Selector is primitive if it is not a Composite Selector.\n"
- title: 3.4.  Reporting
  contents:
  - "3.4.  Reporting\n   * Packet Reports\n      Packet Reports comprise a configurable\
    \ subset of a packet's input\n      to the Selection Process, including the Packet\
    \ Content,\n      information relating to its treatment (for example, the output\n\
    \      interface), and its associated Selection State (for example, a\n      hash\
    \ of the Packet Content).\n   * Report Interpretation\n      Report Interpretation\
    \ comprises subsidiary information, relating\n      to one or more packets, that\
    \ is used for interpretation of their\n      Packet Reports.  Examples include\
    \ configuration parameters of the\n      Selection Process.\n   * Report Stream\n\
    \      The Report Stream is the output of a Metering Process, comprising\n   \
    \   two distinct types of information: Packet Reports and Report\n      Interpretation.\n"
- title: 3.5.  Metering Process
  contents:
  - "3.5.  Metering Process\n   A Metering Process selects packets from the Observed\
    \ Packet Stream\n   using a Selection Process, and produces as output a Report\
    \ Stream\n   concerning the selected packets.\n   The PSAMP Metering Process can\
    \ be viewed as analogous to the IPFIX\n   Metering Process [RFC5101], which produces\
    \ Flow Records as its\n   output, with the difference that the PSAMP Metering\
    \ Process always\n   contains a Selection Process.  The relationship between PSAMP\
    \ and\n   IPFIX is further described in [RFC5477] and [RFC5474].\n"
- title: 3.6.  Exporting Process
  contents:
  - "3.6.  Exporting Process\n   * Exporting Process\n      An Exporting Process sends,\
    \ in the form of Export Packets, the\n      output of one or more Metering Processes\
    \ to one or more\n      Collectors.\n   * Export Packets\n      An Export Packet\
    \ is a combination of Report Interpretation(s)\n      and/or one or more Packet\
    \ Reports that are bundled by the\n      Exporting Process into an Export Packet\
    \ for exporting to a\n      Collector.\n"
- title: 3.7.  PSAMP Device
  contents:
  - "3.7.  PSAMP Device\n   A PSAMP Device is a device hosting at least an Observation\
    \ Point, a\n   Metering Process (which includes a Selection Process), and an\n\
    \   Exporting Process.  Typically, corresponding Observation Point(s),\n   Metering\
    \ Process(es), and Exporting Process(es) are co-located at\n   this device, for\
    \ example, at a router.\n"
- title: 3.8.  Collector
  contents:
  - "3.8.  Collector\n   A Collector receives a Report Stream exported by one or more\n\
    \   Exporting Processes.  In some cases, the host of the Metering and/or\n   Exporting\
    \ Processes may also serve as the Collector.\n"
- title: 3.9.  Possible Configurations
  contents:
  - "3.9.  Possible Configurations\n   Various possibilities for the high-level architecture\
    \ of these\n   elements are as follows.\n      MP = Metering Process, EP = Exporting\
    \ process\n       PSAMP Device\n      +---------------------+                \
    \ +------------------+\n      |Observation Point(s) |                 | Collector(1)\
    \     |\n      |MP(s)--->EP----------+---------------->|                  |\n\
    \      |MP(s)--->EP----------+-------+-------->|                  |\n      +---------------------+\
    \       |         +------------------+\n                                    |\n\
    \       PSAMP Device                 |\n      +---------------------+       |\
    \         +------------------+\n      |Observation Point(s) |       +-------->|\
    \ Collector(2)     |\n      |MP(s)--->EP----------+---------------->|        \
    \          |\n      +---------------------+                 +------------------+\n\
    \       PSAMP Device\n      +---------------------+\n      |Observation Point(s)\
    \ |\n      |MP(s)--->EP---+      |\n      |              |      |\n      |Collector(3)<-+\
    \      |\n      +---------------------+\n      The most simple Metering Process\
    \ configuration is composed of:\n               +------------------------------------+\n\
    \               | +----------+                       |\n               | |Selection\
    \ |                       |\n      Observed | |Process   |  Packet           \
    \    |\n      Packet-->| |(Primitive|-> Stream ->           |--> Report Stream\n\
    \                   ^\n      Stream   | | Selector)|                       |\n\
    \                   ^\n               | +----------+                       |\n\
    \               |          Metering Process          |\n               +------------------------------------+\n\
    \      A Metering Process with a Composite Selector is composed of:\n        \
    \       +--------------------------------------------------...\n             \
    \  | +-----------------------------------+\n               | | +----------+  \
    \       +----------+ |\n               | | |Selection |         |Selection | |\n\
    \      Observed | | |Process   |         |Process   | |\n      Packet-->| | |(Primitive|-Packet->|(Primitive|--->\
    \ Packet ...\n                     ^                    ^\n      Stream   | |\
    \ |Selector1)| Stream  |Selector2)| |   Stream\n                    ^        \
    \            ^\n               | | +----------+         +----------+ |\n     \
    \          | |        Composite Selector         |\n               | +-----------------------------------+\n\
    \               |                   Metering Process\n               +--------------------------------------------------...\n\
    \                 ...-------------+\n                                 |\n    \
    \                             |\n                                 |\n        \
    \                         |\n                                 |---> Report Stream\n\
    \                                 |\n                                 |\n    \
    \                             |\n                                 |\n        \
    \                         |\n                 ...-------------+\n"
- title: 4.  Generic Requirements for PSAMP
  contents:
  - "4.  Generic Requirements for PSAMP\n   This section describes the generic requirements\
    \ for the PSAMP\n   protocol.  A number of these are realized as specific requirements\
    \ in\n   later sections.\n"
- title: 4.1.  Generic Selection Process Requirements
  contents:
  - "4.1.  Generic Selection Process Requirements\n   (a)  Ubiquity: The Selectors\
    \ must be simple enough to be implemented\n        ubiquitously at maximal line\
    \ rate.\n   (b)  Applicability: The set of Selectors must be rich enough to\n\
    \        support a range of existing and emerging measurement-based\n        applications\
    \ and protocols.  This requires a workable trade-off\n        between the range\
    \ of traffic engineering applications and\n        operational tasks it enables,\
    \ and the complexity of the set of\n        capabilities.\n   (c)  Extensibility:\
    \ The protocol must be able to accommodate\n        additional packet Selectors\
    \ not currently defined.\n   (d)  Flexibility: The protocol must support selection\
    \ of packets\n        using various network protocols or encapsulation layers,\n\
    \        including Internet Protocol Version 4 (IPv4) [RFC0791], Internet\n  \
    \      Protocol Version 6 (IPv6) [RFC2460], and Multiprotocol Label\n        Switching\
    \ (MPLS) [RFC3031].\n   (e)  Robust Selection: Packet selection must be robust\
    \ against\n        attempts to craft an Observed Packet Stream from which packets\n\
    \        are selected disproportionately (e.g., to evade selection or\n      \
    \  overload measurement systems).\n   (f)  Parallel Metering Processes: The protocol\
    \ must support\n        simultaneous operation of multiple independent Metering\n\
    \        Processes at the same host.\n   (g)  Causality: The selection decision\
    \ for each packet should depend\n        only weakly, if at all, upon future packets'\
    \ arrivals.  This\n        promotes ubiquity by limiting the complexity of the\
    \ selection\n        logic.\n   (h)  Encrypted Packets: Selectors that interpret\
    \ packet fields must\n        be configurable to ignore (i.e., not select) encrypted\
    \ packets,\n        when they are detected.\n   Specific Selectors are outlined\
    \ in Section 5, and described in more\n   detail in the companion document [RFC5475].\n"
- title: 4.2.  Generic Reporting Requirements
  contents:
  - "4.2.  Generic Reporting Requirements\n   (i)  Self-Defining: The Report Stream\
    \ must be complete in the sense\n        that no additional information need be\
    \ retrieved from the\n        Observation Point in order to interpret and analyze\
    \ the reports.\n   (j)  Indication of Information Loss: The Report Stream must\
    \ include\n        sufficient information to indicate or allow the detection of\n\
    \        loss occurring within the Selection, Metering, and/or Exporting\n   \
    \     Processes, or in transport.  This may be achieved by the use of\n      \
    \  sequence numbers.\n   (k)  Accuracy: The Report Stream must include information\
    \ that\n        enables the accuracy of measurements to be determined.\n   (l)\
    \  Faithfulness: All reported quantities that relate to the packet\n        treatment\
    \ must reflect the router state and configuration\n        encountered by the\
    \ packet at the time it is received by the\n        Metering Process.\n   (m)\
    \  Privacy: Although selection of the content of Packet Reports\n        must\
    \ be responsive to the needs of measurement applications, it\n        must also\
    \ conform with [RFC2804].  In particular, full packet\n        capture of arbitrary\
    \ Packet Streams is explicitly out of scope.\n   See Section 6 for further discussions\
    \ on Reporting.\n"
- title: 4.3.  Generic Exporting Process Requirements
  contents:
  - "4.3.  Generic Exporting Process Requirements\n   (n)  Timeliness: Configuration\
    \ must allow for limiting of buffering\n        delays for the formation and transmission\
    \ for Export Packets.\n        See Section 8.5 for further details.\n   (o)  Congestion\
    \ Avoidance: Export of a Report Stream across a network\n        must be congestion\
    \ avoiding in compliance with [RFC2914].  This\n        is discussed further in\
    \ Section 8.3.\n   (p)  Secure Export\n         (i) confidentiality: The option\
    \ to encrypt exported data must\n             be provided.\n        (ii) integrity:\
    \ Alterations in transit to exported data must be\n             detectable at\
    \ the Collector.\n       (iii) authenticity: Authenticity of exported data must\
    \ be\n             verifiable by the Collector in order to detect forged data.\n\
    \   The motivation here is the same as for security in IPFIX export; see\n   Sections\
    \ 6.3 and 10 of [RFC3917].\n"
- title: 4.4.  Generic Configuration Requirements
  contents:
  - "4.4.  Generic Configuration Requirements\n   (q)  Ease of Configuration: This\
    \ applies to ease of configuration of\n        Sampling and export parameters,\
    \ e.g., for automated remote\n        reconfiguration in response to collected\
    \ reports.\n   (r)  Secure Configuration: The option to configure via protocols\
    \ that\n        prevent unauthorized reconfiguration or eavesdropping on\n   \
    \     configuration communications must be available.  Eavesdropping\n       \
    \ on configuration might allow an attacker to gain knowledge that\n        would\
    \ be helpful in crafting a Packet Stream to evade subversion\n        or overload\
    \ the measurement infrastructure.\n   Configuration is discussed in Section 9.\n"
- title: 5.  Packet Selection
  contents:
  - "5.  Packet Selection\n   This section details specific requirements for the Selection\
    \ Process,\n   motivated by the generic requirements of Section 3.3.\n"
- title: 5.1.  Two Types of Selectors
  contents:
  - "5.1.  Two Types of Selectors\n   PSAMP categorizes Selectors into two types:\n\
    \   * Filtering: A filter is a Selector that selects a packet\n     deterministically\
    \ based on the Packet Content, or its treatment, or\n     functions of these occurring\
    \ in the Selection State.  Two examples\n     are:\n         (i) Property Match\
    \ Filtering: A packet is selected if a\n             specific field in the packet\
    \ equals a predefined value.\n        (ii) Hash-based Selection: A hash function\
    \ is applied to the\n             Packet Content, and the packet is selected if\
    \ the result\n             falls in a specified range.\n   * Sampling: A Selector\
    \ that is not a filter is called a Sampling\n     operation.  This reflects the\
    \ intuitive notion that if the\n     selection of a packet cannot be determined\
    \ from its content alone,\n     there must be some type of Sampling taking place.\n\
    \   Sampling operations can be divided into two subtypes:\n         (i) Content-independent\
    \ Sampling, which does not use Packet\n             Content in reaching Sampling\
    \ decisions.  Examples include\n             systematic Sampling, and uniform\
    \ pseudorandom Sampling\n             driven by a pseudorandom number whose generation\
    \ is\n             independent of Packet Content.  Note that in content-\n   \
    \          independent Sampling, it is not necessary to access the\n         \
    \    Packet Content in order to make the selection decision.\n        (ii) Content-dependent\
    \ Sampling, in which the Packet Content is\n             used in reaching selection\
    \ decisions.  An application is\n             pseudorandom selection with a probability\
    \ that depends on\n             the contents of a packet field, e.g., Sampling\
    \ packets with\n             a probability dependent on their TCP/UDP port numbers.\n\
    \             Note that this is not a filter.\n"
- title: 5.2.  PSAMP Packet Selectors
  contents:
  - "5.2.  PSAMP Packet Selectors\n   A spectrum of packet Selectors is described\
    \ in detail in [RFC5475].\n   Here we only briefly summarize the meanings for\
    \ completeness.\n   A PSAMP Selection Process must support at least one of the\
    \ following\n   Selectors.\n   * systematic count-based Sampling: Packet selection\
    \ is triggered\n     periodically by packet count, a number of successive packets\
    \ being\n     selected subsequent to each trigger.\n   * systematic time-based\
    \ Sampling: This is similar to systematic\n     count-based Sampling except that\
    \ selection is reckoned with respect\n     to time rather than count.  Packet\
    \ selection is triggered at\n     periodic instants separated by a time called\
    \ the spacing.  All\n     packets that arrive within a certain time of the trigger\
    \ (called\n     the interval length) are selected.\n   * probabilistic n-out-of-N\
    \ Sampling: From each count-based successive\n     block of N packets, n are selected\
    \ at random.\n   * uniform probabilistic Sampling: Packets are selected independently\n\
    \     with fixed Sampling probability p.\n   * non-uniform probabilistic Sampling:\
    \ Packets are selected\n     independently with probability p that depends on\
    \ Packet Content.\n   * Property Match Filtering\n     With this Filtering method,\
    \ a packet is selected if a specific\n     field within the packet and/or on properties\
    \ of the router state\n     equal(s) a predefined value.  Possible filter fields\
    \ are all IPFIX\n     Flow attributes specified in [RFC5102].  Further fields\
    \ can be\n     defined by vendor-specific extensions.\n     A packet is selected\
    \ if Field=Value.  Masks and ranges are only\n     supported to the extent to\
    \ which [RFC5102] allows them, e.g., by\n     providing explicit fields like the\
    \ netmasks for source and\n     destination addresses.\n     AND operations are\
    \ possible by concatenating filters, thus\n     producing a composite selection\
    \ operation.  In this case, the\n     ordering in which the Filtering happens\
    \ is implicitly defined\n     (outer filters come after inner filters).  However,\
    \ as long as the\n     concatenation is on filters only, the result of the cascaded\
    \ filter\n     is independent from the order, but the order may be important for\n\
    \     implementation purposes, as the first filter will have to work at a\n  \
    \   higher rate.  In any case, an implementation is not constrained to\n     respect\
    \ the filter ordering, as long as the result is the same, and\n     it may even\
    \ implement the composite Filtering in one single step.\n     OR operations are\
    \ not supported with this basic model.  More\n     sophisticated filters (e.g.,\
    \ supporting bitmasks, ranges, or OR\n     operations) can be realized as vendor-specific\
    \ schemes.\n     Property match operations should be available for different\n\
    \     protocol portions of the packet header:\n         (i) IP header (excluding\
    \ options in IPv4, stacked headers in\n             IPv6)\n        (ii) transport\
    \ header\n       (iii) encapsulation headers (e.g., the MPLS label stack, if\n\
    \             present)\n     When the PSAMP Device offers Property Match Filtering,\
    \ and, in its\n     usual capacity other than in performing PSAMP functions, identifies\n\
    \     or processes information from IP, transport, or encapsulation\n     protocols,\
    \ then the information should be made available for\n     Filtering.  For example,\
    \ when a PSAMP Device is a router that\n     routes based on destination IP address,\
    \ that field should be made\n     available for Filtering.  Conversely, a PSAMP\
    \ Device that does not\n     route is not expected to be able to locate an IP\
    \ address within a\n     packet, or make it available for Filtering, although\
    \ it may do so.\n     Since packet encryption alters the meaning of encrypted\
    \ fields,\n     Property Match Filtering must be configurable to ignore encrypted\n\
    \     packets when detected.\n     The Selection Process may support Filtering\
    \ based on the properties\n     of the router state:\n         (i) Ingress interface\
    \ at which packet arrives equals a\n             specified value\n        (ii)\
    \ Egress interface to which packet is routed to equals a\n             specified\
    \ value\n       (iii) Packet violated Access Control List (ACL) on the router\n\
    \        (iv) Failed Reverse Path Forwarding (RPF).  Packets that match\n    \
    \         the Failed Reverse Path Forwarding (RPF) condition are\n           \
    \  packets for which ingress Filtering failed as defined in\n             [RFC3704].\n\
    \         (v) Failed Resource Reservation Protocol (RSVP).  Packets that\n   \
    \          match the Failed RSVP condition are packets that do not\n         \
    \    fulfill the RSVP specification as defined in [RFC2205].\n        (vi) No\
    \ route found for the packet\n       (vii) Origin Border Gateway Protocol (BGP)\
    \ Autonomous System (AS)\n             [RFC4271] equals a specified value or lies\
    \ within a given\n             range\n      (viii) Destination BGP AS equals a\
    \ specified value or lies within\n             a given range\n     Router architectural\
    \ considerations may preclude some information\n     concerning the packet treatment\
    \ being available at line rate for\n     selection of packets.  For example, the\
    \ Selection Process may not\n     be implemented in the fast path that is able\
    \ to access router state\n     at line rate.  However, when Filtering follows\
    \ Sampling (or some\n     other selection operation) in a Composite Selector,\
    \ the rate of the\n     Packet Stream output from the sampler and input to the\
    \ filter may\n     be sufficiently low that the filter could select based on router\n\
    \     state.\n   * Hash-based Selection:\n     Hash-based Selection will employ\
    \ one or more hash functions to be\n     standardized.  A hash function is applied\
    \ to a subset of Packet\n     Content, and the packet is selected if the resulting\
    \ hash falls in\n     a specified range.  The stronger the hash function, the\
    \ more\n     closely Hash-based Selection approximates uniform random Sampling.\n\
    \     Privacy of hash selection range and hash function parameters\n     obstructs\
    \ subversion of the Selector by packets that are crafted\n     either to avoid\
    \ selection or to be selected.  Privacy of the hash\n     function is not required.\
    \  Robustness and security considerations\n     of Hash-based Selection are further\
    \ discussed in [RFC5475].\n     Applications of hash-based Sampling are described\
    \ in Section 11.\n"
- title: 5.3.  Selection Fraction Terminology
  contents:
  - "5.3.  Selection Fraction Terminology\n   * Population:\n      A Population is\
    \ a Packet Stream, or a subset of a Packet Stream.\n      A Population can be\
    \ considered as a base set from which packets\n      are selected.  An example\
    \ is all packets in the Observed Packet\n      Stream that are observed within\
    \ some specified time interval.\n   * Population Size\n      The Population Size\
    \ is the number of all packets in a Population.\n   * Sample Size\n      The Sample\
    \ Size is the number of packets selected from the\n      Population by a Selector.\n\
    \   * Configured Selection Fraction\n      The Configured Selection Fraction is\
    \ the expected ratio of the\n      Sample Size to the Population Size, as based\
    \ on the configured\n      selection parameters.\n   * Attained Selection Fraction\n\
    \      The Attained Selection Fraction is the ratio of the actual Sample\n   \
    \   Size to the Population Size.\n      For some Sampling methods, the Attained\
    \ Selection Fraction can\n      differ from the Configured Selection Fraction\
    \ due to, for example,\n      the inherent statistical variability in Sampling\
    \ decisions of\n      probabilistic Sampling and Hash-based Selection.  Nevertheless,\n\
    \      for large Population Sizes and properly configured Selectors, the\n   \
    \   Attained Selection Fraction usually approaches the Configured\n      Selection\
    \ Fraction.\n      The notions of Configured/Attained Selection Fractions extend\n\
    \      beyond Selectors.  An illustrative example is the Configured\n      Selection\
    \ Fraction of the composition of the Metering Process with\n      the Exporting\
    \ Process.  Here the Population is the Observed Packet\n      Stream or a subset\
    \ thereof.  The Configured Selection Fraction is\n      the fraction of the Population\
    \ for which Packet Reports are\n      expected to reach the Collector.  This quantity\
    \ may reflect\n      additional parameters, not necessarily described in the PSAMP\n\
    \      protocol, that determine the degree of loss suffered by Packet\n      Reports\
    \ en route to the Collector, e.g., the transmission\n      bandwidth available\
    \ to the Exporting Process.  In this example,\n      the Attained Selection Fraction\
    \ is the fraction of Population\n      packets for which reports did actually\
    \ reach the Collector, and\n      thus incorporates the effect of any loss of\
    \ Packet Reports due,\n      e.g., to resource contention at the Observation Point\
    \ or during\n      transmission.\n"
- title: 5.4.  Input Sequence Numbers for Primitive Selectors
  contents:
  - "5.4.  Input Sequence Numbers for Primitive Selectors\n   Each instance of a Primitive\
    \ Selector must maintain a count of\n   packets presented at its input.  The counter\
    \ value is to be included\n   as a sequence number for selected packets.  The\
    \ sequence numbers are\n   considered as part of the packet's Selection State.\n\
    \   Use of input sequence numbers enables applications to determine the\n   Attained\
    \ Selection Fraction, and hence correctly normalize network\n   usage estimates\
    \ regardless of loss of information, regardless of\n   whether this loss occurs\
    \ because of discard of Packet Reports in the\n   Metering Process (e.g., due\
    \ to resource contention in the host of\n   these processes), or loss of export\
    \ packets in transmission or\n   collection.  See [RFC3176] for further details.\n\
    \   As an example, consider a set of n consecutive Packet Reports r1,\n   r2,...\
    \ , rn, selected by a Sampling operation and received at a\n   Collector.  Let\
    \ s1, s2,..., sn be the input sequence numbers reported\n   by the packets.  The\
    \ Attained Selection Fraction for the composite of\n   the measurement and Exporting\
    \ Processes, taking into account both\n   packet Sampling at the Observation Point\
    \ and loss in transmission, is\n   computed as R = (n-1)/(sn-s1).  (Note that\
    \ R would be 1 if all\n   packets were selected and there were no transmission\
    \ loss.)\n   The Attained Selection Fraction can be used to estimate the number\
    \ of\n   bytes present in a portion of the Observed Packet Stream.  Let b1,\n\
    \   b2,..., bn be the number of bytes reported in each of the packets\n   that\
    \ reached the Collector, and set B = b1+b2+...+bn.  Then the total\n   bytes present\
    \ in packets in the Observed Packet Stream whose input\n   sequence numbers lie\
    \ between s1 and sn is estimated by B/R, i.e.,\n   scaling up the measured bytes\
    \ through division by the Attained\n   Selection Fraction.\n   With Composite\
    \ Selectors, an input sequence number must be reported\n   for each Selector in\
    \ the composition.\n"
- title: 5.5.  Composite Selectors
  contents:
  - "5.5.  Composite Selectors\n   The ability to compose Selectors in a Selection\
    \ Process should be\n   provided.  The following combinations appear to be most\
    \ useful for\n   applications:\n   *  concatenation of Property Match Filters.\
    \  This is useful for\n      constructing the AND of the component filters.\n\
    \   *  Filtering followed by Sampling.\n   *  Sampling followed by Filtering.\n\
    \   Composite Selectors are useful for drill-down applications.  The\n   first\
    \ component of a Composite Selector can be used to reduce the\n   load on the\
    \ second component.  In this setting, the advantage to be\n   gained from a given\
    \ ordering can depend on the composition of the\n   Packet Stream.\n"
- title: 5.6.  Constraints on the Selection Fraction
  contents:
  - "5.6.  Constraints on the Selection Fraction\n   Sampling at full line rate, i.e.,\
    \ with probability 1, is not excluded\n   in principle, although resource constraints\
    \ may not permit it in\n   practice.\n"
- title: 6.  Reporting
  contents:
  - "6.  Reporting\n   This section details specific requirements for reporting, motivated\n\
    \   by the generic requirements of Section 3.4.\n"
- title: '6.1.  Mandatory Contents of Packet Reports: Basic Reports'
  contents:
  - "6.1.  Mandatory Contents of Packet Reports: Basic Reports\n   Packet Reports\
    \ must include the following:\n         (i) the input sequence number(s) of any\
    \ Selectors that acted on\n             the packet in the instance of a Metering\
    \ Process that\n             produced the report.\n        (ii) the identifier\
    \ of the Metering Process that produced the\n             selected packet.\n \
    \  The Metering Process must support inclusion of the following in each\n   Packet\
    \ Report, as a configurable option:\n       (iii) a basic report on the packet,\
    \ i.e., some number of\n             contiguous bytes from the start of the packet,\
    \ including\n             the packet header (which includes network layer and\
    \ any\n             encapsulation headers) and some subsequent bytes of the\n\
    \             packet payload.\n   Some devices may not have the resource capacity\
    \ or functionality to\n   provide more detailed Packet Reports than those in (i),\
    \ (ii), and\n   (iii) above.  Using this minimum required reporting functionality,\n\
    \   the Metering Process places the burden of interpretation on the\n   Collector\
    \ or on applications that it supplies.  Some devices may have\n   the capability\
    \ to provide extended Packet Reports, described in the\n   next section.\n"
- title: 6.2.  Extended Packet Reports
  contents:
  - "6.2.  Extended Packet Reports\n   The Metering Process may support inclusion\
    \ in Packet Reports of the\n   following information, inclusion of any or all\
    \ being configurable as\n   an option.\n        (iv) fields relating to the following\
    \ protocols used in the\n             packet: IPv4, IPV6, transport protocols,\
    \ and encapsulation\n             protocols including MPLS.\n         (v) packet\
    \ treatment, including:\n           - identifiers for any input and output interfaces\
    \ of the\n             Observation Point that were traversed by the packet\n \
    \          - source and destination BGP AS\n        (vi) Selection State associated\
    \ with the packet, including:\n           - the timestamp of observation of the\
    \ packet at the\n             Observation Point.  The timestamp should be reported\
    \ to\n             microsecond resolution.\n           - hash values, where calculated.\n\
    \   It is envisaged that selection of fields for Extended Packet\n   Reporting\
    \ may be used to reduce reporting bandwidth, in which case\n   the option to report\
    \ information in (iii) may not be exercised.\n"
- title: 6.3.  Extended Packet Reports in the Presence of IPFIX
  contents:
  - "6.3.  Extended Packet Reports in the Presence of IPFIX\n   If an IPFIX Metering\
    \ Process is supported at the Observation Point,\n   then in order to be PSAMP\
    \ compliant, Extended Packet Reports must be\n   able to include all fields required\
    \ in the IPFIX information model\n   [RFC5102], with modifications appropriate\
    \ to reporting on single\n   packets rather than Flows.\n"
- title: 6.4.  Report Interpretation
  contents:
  - "6.4.  Report Interpretation\n   The Report Interpretation must include:\n   \
    \      (i) configuration parameters of the Selectors of the packets\n        \
    \     reported on;\n        (ii) format of the Packet Report;\n       (iii) indication\
    \ of the inherent accuracy of the reported\n             quantities, e.g., of\
    \ the packet timestamp.\n   The accuracy measure in (iii) is of fundamental importance\
    \ for\n   estimating the likely error attached to estimates formed from the\n\
    \   Packet Reports by applications.\n   The requirements for robustness and transparency\
    \ are motivations for\n   including Report Interpretation in the Report Stream:\
    \ it makes the\n   Report Stream self-defining.  The PSAMP framework excludes\
    \ reliance\n   on an alternative model in which interpretation is recovered out\
    \ of\n   band.  This latter approach is not robust with respect to\n   undocumented\
    \ changes in Selector configuration, and may give rise to\n   future architectural\
    \ problems for network management systems to\n   coherently manage both configuration\
    \ and data collection.\n   It is not envisaged that all Report Interpretation\
    \ be included in\n   every Packet Report.  Many of the quantities listed above\
    \ are\n   expected to be relatively static; they could be communicated\n   periodically,\
    \ and upon change.\n"
- title: 7.  Parallel Metering Processes
  contents:
  - "7.  Parallel Metering Processes\n   Because of the increasing number of distinct\
    \ measurement applications\n   with varying requirements, it is desirable to set\
    \ up parallel\n   Metering Processes on a given Observed Packet Stream.  A device\n\
    \   capable of hosting a Metering Process should be able to support more\n   than\
    \ one independently configurable Metering Process simultaneously.\n   Each such\
    \ Metering Process should have the option of being equipped\n   with its own Exporting\
    \ Process; otherwise, the parallel Metering\n   Processes may share the same Exporting\
    \ Process.\n   Each of the parallel Metering Processes should be independent.\n\
    \   However, resource constraints may prevent complete reporting on a\n   packet\
    \ selected by multiple Selection Processes.  In this case,\n   reporting for the\
    \ packet must be complete for at least one Metering\n   Process; other Metering\
    \ Processes need only record that they selected\n   the packet, e.g., by incrementing\
    \ a counter.  The priority among\n   Metering Processes under resource contention\
    \ should be configurable.\n   It is not proposed to standardize the number of\
    \ parallel Metering\n   Processes.\n"
- title: 8.  Exporting Process
  contents:
  - "8.  Exporting Process\n   This section details specific requirements for the\
    \ Exporting Process,\n   motivated by the generic requirements of Section 3.6.\n"
- title: 8.1.  Use of IPFIX
  contents:
  - "8.1.  Use of IPFIX\n   PSAMP will use the IP Flow Information Export (IPFIX)\
    \ protocol for\n   export of the Report Stream.  The IPFIX protocol is well suited\
    \ for\n   this purpose, because the IPFIX architecture matches the PSAMP\n   architecture\
    \ very well and the means provided by the IPFIX protocol\n   are sufficient for\
    \ PSAMP purposes.  On the other hand, not all\n   features of the IPFIX protocol\
    \ will need to be implemented by some\n   PSAMP Devices.  For example, a device\
    \ that offers only content-\n   independent Sampling and basic PSAMP reporting\
    \ has no need to support\n   IPFIX capabilities based on packet fields.\n"
- title: 8.2.  Export Packets
  contents:
  - "8.2.  Export Packets\n   Export Packets may contain one or more Packet Reports,\
    \ and/or Report\n   Interpretation.  Export Packets must also contain:\n     \
    \    (i) an identifier for the Exporting Process\n        (ii) an Export Packet\
    \ sequence number\n   An Export Packet sequence number enables the Collector to\
    \ identify\n   loss of Export Packets in transit.  Note that some transport\n\
    \   protocols, e.g., UDP, do not provide sequence numbers.  Moreover,\n   having\
    \ sequence numbers available at the application level enables\n   the Collector\
    \ to calculate the packet loss rate for use, e.g., in\n   estimating original\
    \ traffic volumes from Export Packets that reach\n   the Collector.\n"
- title: 8.3.  Congestion-Aware Unreliable Transport
  contents:
  - "8.3.  Congestion-Aware Unreliable Transport\n   The export of the Report Stream\
    \ does not require reliable export.\n   Section 5.4 shows that the use of input\
    \ sequence numbers in packet\n   Selectors means that the ability to estimate\
    \ traffic rates is not\n   impaired by export loss.  Export Packet loss becomes\
    \ another form of\n   Sampling, albeit a less desirable, and less controlled,\
    \ form of\n   Sampling.\n   In distinction, retransmission of lost Export Packets\
    \ consumes\n   additional network resources.  The requirement to store\n   unacknowledged\
    \ data is an impediment to having ubiquitous support for\n   PSAMP.\n   In order\
    \ to jointly satisfy the timeliness and congestion avoidance\n   requirements\
    \ of Section 4.3, a congestion-aware unreliable transport\n   protocol may be\
    \ used.  IPFIX is compatible with this requirement,\n   since it mandates support\
    \ of the Stream Control Transmission Protocol\n   (SCTP) [RFC4960] and the SCTP\
    \ Partial Reliability Extension\n   [RFC3758].\n   IPFIX also allows the use of\
    \ the User Datagram Protocol (UDP)\n   [RFC0768], although it is not a congestion-aware\
    \ protocol.  However,\n   in this case, the Export Packets must remain wholly\
    \ within the\n   administrative domains of the operators [RFC5101].  The PSAMP\n\
    \   Exporting Process is equipped with a configurable export rate limit\n   (see\
    \ Section 8.4) that can be used to limit the export rate when a\n   congestion-aware\
    \ transport protocol is not used.  The Collector, upon\n   detection of Export\
    \ Packet loss through missing export sequence\n   numbers, may reconfigure the\
    \ export rate limit downwards in order to\n   avoid congestion.\n"
- title: 8.4.  Configurable Export Rate Limit
  contents:
  - "8.4.  Configurable Export Rate Limit\n   The Exporting Process must have an export\
    \ rate limit, configurable\n   per Exporting Process.  This is useful for two\
    \ reasons:\n         (i) Even without network congestion, the rate of packet\n\
    \             selection may exceed the capacity of the Collector to\n        \
    \     process reports, particularly when many Exporting Processes\n          \
    \   feed a common Collector.  Use of an Export Rate Limit\n             allows\
    \ control of the global input rate to the Collector.\n        (ii) IPFIX provides\
    \ export using UDP as the transport protocol\n             in some circumstances.\
    \  An Export Rate Limit allows the\n             capping of the export rate to\
    \ match both path link speeds\n             and the capacity of the Collector.\n"
- title: 8.5.  Limiting Delay for Export Packets
  contents:
  - "8.5.  Limiting Delay for Export Packets\n   Low measurement latency allows the\
    \ traffic monitoring system to be\n   more responsive to real-time network events,\
    \ for example, in quickly\n   identifying sources of congestion.  Timeliness is\
    \ generally a good\n   thing for devices performing the Sampling since it minimizes\
    \ the\n   amount of memory needed to buffer samples.\n   Keeping the packet dispatching\
    \ delay small has other benefits besides\n   limiting buffer requirements.  For\
    \ many applications, a resolution of\n   1 second is sufficient.  Applications\
    \ in this category would include\n   identifying sources associated with congestion,\
    \ tracing Denial-of-\n   Service (DoS) attacks through the network, and constructing\
    \ traffic\n   matrices.  Furthermore, keeping dispatch delay within the resolution\n\
    \   required by applications eliminates the need for timestamping by\n   synchronized\
    \ clocks at Observation Points, or for the Observation\n   Points and Collector\
    \ to maintain bidirectional communication in order\n   to track clock offsets.\
    \  The Collector can simply process Packet\n   Reports in the order that they\
    \ are received, using its own clock as a\n   \"global\" time base.  This avoids\
    \ the complexity of buffering and\n   reordering samples.  See [DuGeGr02] for\
    \ an example.\n   The delay between observation of a packet and transmission of\
    \ an\n   Export Packet containing a report on that packet has several\n   components.\
    \  It is difficult to standardize a given numerical delay\n   requirement, since\
    \ in practice the delay may be sensitive to\n   processor load at the Observation\
    \ Point.  Therefore, PSAMP aims to\n   control that portion of the delay within\
    \ the Observation Point that\n   is due to buffering in the formation and transmission\
    \ of Export\n   Packets.\n   In order to limit delay in the formation of Export\
    \ Packets, the\n   Exporting Process must provide the ability to close out and\
    \ enqueue\n   for transmission any Export Packet during formation as soon as it\n\
    \   includes one Packet Report.\n   In order to limit the delay in the transmission\
    \ of Export Packets, a\n   configurable upper bound to the delay of an Export\
    \ Packet prior to\n   transmission must be provided.  If the bound is exceeded,\
    \ the Export\n   Packet is dropped.  This functionality can be provided by the\
    \ timed\n   reliability service of the SCTP Partial Reliability Extension\n  \
    \ [RFC3758].\n   The Exporting Process may enqueue the Report Stream in order\
    \ to\n   export multiple Packet Reports in a single Export Packet.  Any\n   consequent\
    \ delay must still allow for timely availability of Packet\n   Reports as just\
    \ described.  The timed reliability service of the SCTP\n   Partial Reliability\
    \ Extension [RFC3758] allows the dropping of\n   packets from the export buffer\
    \ once their age in the buffer exceeds a\n   configurable bound.  A suitable default\
    \ value for the bound should be\n   used in order to avoid a low transmission\
    \ rate due to\n   misconfiguration.\n"
- title: 8.6.  Export Packet Compression
  contents:
  - "8.6.  Export Packet Compression\n   To conserve network bandwidth and resources\
    \ at the Collector, the\n   Export Packets may be compressed before export.  Compression\
    \ is\n   expected to be quite effective since the selected packets may share\n\
    \   many fields in common, e.g., if a filter focuses on packets with\n   certain\
    \ values in particular header fields.  Using compression,\n   however, could impact\
    \ the timeliness of Packet Reports.  Any\n   consequent delay must not violate\
    \ the timeliness requirement for\n   availability of Packet Reports at the Collector.\n"
- title: 8.7.  Collector Destination
  contents:
  - "8.7.  Collector Destination\n   When exporting to a remote Collector, the Collector\
    \ is identified by\n   IP address, transport protocol, and transport port number.\n"
- title: 8.8.  Local Export
  contents:
  - "8.8.  Local Export\n   The Report Stream may be directly exported to on-board\
    \ measurement-\n   based applications, for example, those that form composite\
    \ statistics\n   from more than one packet.  Local Export may be presented through\
    \ an\n   interface directly to the higher-level applications, i.e., through an\n\
    \   API, rather than employing the transport used for off-board export.\n   Specification\
    \ of such an API is outside the scope of the PSAMP\n   framework.\n   A possible\
    \ example of Local Export could be that packets selected by\n   the PSAMP Metering\
    \ Process serve as the input for the IPFIX protocol,\n   which then forms Flow\
    \ Records out of the stream of selected packets.\n"
- title: 9.  Configuration and Management
  contents:
  - "9.  Configuration and Management\n   A key requirement for PSAMP is the easy\
    \ reconfiguration of the\n   parameters of the Metering Process, including those\
    \ for selection and\n   Packet Reports, and of the Exporting Process.  An important\
    \ example\n   is to support measurement-based applications that want to adaptively\n\
    \   drill-down on traffic detail in real time.\n   To facilitate retrieval and\
    \ monitoring of parameters, they are to\n   reside in a Management Information\
    \ Base (MIB).  Mandatory monitoring\n   objects will cover all mandatory PSAMP\
    \ functionality.  Alarming of\n   specific parameters could be triggered with\
    \ thresholding mechanisms\n   such as the RMON (Remote Network Monitoring) event\
    \ and alarm\n   [RFC2819] or the event MIB [RFC2981].\n   For configuring parameters\
    \ of the Metering Process, several\n   alternatives are available including a\
    \ MIB module with writeable\n   objects, as well as other configuration protocols.\
    \  For configuring\n   parameters of the Exporting Process, the Packet Report,\
    \ and the\n   Report Interpretation, which is an IFPIX task, the IPFIX\n   configuration\
    \ method(s) should be used.\n   Although management and configuration of Collectors\
    \ is out of scope,\n   a PSAMP Device, to the extent that it employs IPFIX as\
    \ an export\n   protocol, inherits from IPFIX the capability to detect and recover\n\
    \   from Collector failure; see Section 8.2 of [RFC5470].\n"
- title: 10.  Feasibility and Complexity
  contents:
  - "10.  Feasibility and Complexity\n   In order for PSAMP to be supported across\
    \ the entire spectrum of\n   networking equipment, it must be simple and inexpensive\
    \ to implement.\n   One can envision easy-to-implement instances of the mechanisms\n\
    \   described within this document.  Thus, for that subset of instances,\n   it\
    \ should be straightforward for virtually all system vendors to\n   include them\
    \ within their products.  Indeed, Sampling and Filtering\n   operations are already\
    \ realized in available equipment.\n   Here we give some specific arguments to\
    \ demonstrate feasibility and\n   comment on the complexity of hardware implementations.\
    \  We stress\n   here that the point of these arguments is not to favor or recommend\n\
    \   any particular implementation, or to suggest a path for\n   standardization,\
    \ but rather to demonstrate that the set of possible\n   implementations is not\
    \ empty.\n"
- title: 10.1.  Feasibility
  contents:
  - '10.1.  Feasibility

    '
- title: 10.1.1.  Filtering
  contents:
  - "10.1.1.  Filtering\n   Filtering consists of a small number of mask (bit-wise\
    \ logical),\n   comparison, and range (greater than) operations.  Implementation\
    \ of\n   at least a small number of such operations is straightforward.  For\n\
    \   example, filters for security Access Control Lists (ACLs) are widely\n   implemented.\
    \  This could be as simple as an exact match on certain\n   fields, or involve\
    \ more complex comparisons and ranges.\n"
- title: 10.1.2.  Sampling
  contents:
  - "10.1.2.  Sampling\n   Sampling based on either counters (counter set, decrement,\
    \ test for\n   equal to zero) or range matching on the hash of a packet (greater\n\
    \   than) is possible given a small number of Selectors, although there\n   may\
    \ be some differences in ease of implementation for hardware vs.\n   software\
    \ platforms.\n"
- title: 10.1.3.  Hashing
  contents:
  - "10.1.3.  Hashing\n   Hashing functions vary greatly in complexity.  Execution\
    \ of a small\n   number of sufficiently simple hash functions is implementable\
    \ at line\n   rate.  Concerning the input to the hash function, hop-invariant\
    \ IP\n   header fields (IP address, IP identification) and TCP/UDP header\n  \
    \ fields (port numbers, TCP sequence number) drawn from the first 40\n   bytes\
    \ of the packet have been found to possess a considerable\n   variability; see\
    \ [DuGr01].\n"
- title: 10.1.4.  Reporting
  contents:
  - "10.1.4.  Reporting\n   The simplest Packet Report would duplicate the first n\
    \ bytes of the\n   packet.  However, such an uncompressed format may tax the bandwidth\n\
    \   available to the Exporting Process for high Sampling rates; reporting\n  \
    \ selected fields would save on this bandwidth.  Thus, there is a\n   trade-off\
    \ between simplicity and bandwidth limitations.\n"
- title: 10.1.5.  Exporting
  contents:
  - "10.1.5.  Exporting\n   Ease of exporting Export Packets depends on the system\
    \ architecture.\n   Most systems should be able to support export by insertion\
    \ of Export\n   Packets, even through the software path.\n"
- title: 10.2.  Potential Hardware Complexity
  contents:
  - "10.2.  Potential Hardware Complexity\n   Achieving low constants for performance\
    \ while minimizing hardware\n   resources is, of course, a challenge, especially\
    \ at very high clock\n   frequencies.  Most of the Selectors, however, are very\
    \ basic and\n   their implementations very well understood; in fact, the average\n\
    \   Application-Specific Integrated Circuit (ASIC) designer simply uses\n   canned\
    \ library instances of these operations rather than design them\n   from scratch.\
    \  In addition, networking equipment generally does not\n   need to run at the\
    \ fastest clock rates, further reducing the effort\n   required to get reasonably\
    \ efficient implementations.\n   Simple bit-wise logical operations are easy to\
    \ implement in hardware.\n   Such operations (NAND/NOR/XNOR) directly translate\
    \ to four-transistor\n   gates.  Each bit of a multiple-bit logical operation\
    \ is completely\n   independent and thus can be performed in parallel incurring\
    \ no\n   additional performance cost above a single-bit operation.\n   Comparisons\
    \ (EQ/NEQ) take O(log(M)) stages of logic, where M is the\n   number of bits involved\
    \ in the comparison.  The log(M) is required to\n   accumulate the result into\
    \ a single bit.\n   Greater-than operations, as used to determine whether a hash\
    \ falls in\n   a selection range, are a determination of the most significant\n\
    \   not-equivalent bit in the two operands.  The operand with that most-\n   significant-not-equal\
    \ bit set to be one is greater than the other.\n   Thus, a greater-than operation\
    \ is also an O(log(M)) stages-of-logic\n   operation.  Optimized implementations\
    \ of arithmetic operations are\n   also O(log(M)) due to propagation of the carry\
    \ bit.\n   Setting a counter is simply loading a register with a state.  Such\
    \ an\n   operation is simple and fast O(1).  Incrementing or decrementing a\n\
    \   counter is a read, followed by an arithmetic operation, followed by a\n  \
    \ store.  Making the register dual-ported does take additional space,\n   but\
    \ it is a well-understood technique.  Thus, the increment/decrement\n   is also\
    \ an O(log(M)) operation.\n   Hashing functions come in a variety of forms.  The\
    \ computation\n   involved in a standard Cyclic Redundancy Check (CRC), for example,\
    \ is\n   essentially a set of XOR operations, where the intermediate result is\n\
    \   stored and XORed with the next chunk of data.  There are only O(1)\n   operations\
    \ and no log complexity operations.  Thus, a simple hash\n   function, such as\
    \ CRC or generalizations thereof, can be implemented\n   in hardware very efficiently.\n\
    \   At the other end of the range of complexity, the MD5 function uses a\n   large\
    \ number of bit-wise conditional operations and arithmetic\n   operations.  The\
    \ former are O(1) operations and the latter are\n   O(log(M)).  MD5 specifies\
    \ 256 32 bit ADD operations per 16 bytes of\n   input processed.  Consider processing\
    \ 10 Gb/sec at 100 MHz (this\n   processing rate appears to be currently available).\
    \  This requires\n   processing 12.5 bytes/cycle, and hence at least 200 adders,\
    \ a\n   sizeable number.  Because of data dependencies within the MD5\n   algorithm,\
    \ the adders cannot be simply run in parallel, thus\n   requiring either faster\
    \ clock rates and/or more advanced\n   architectures.  Thus, selection hashing\
    \ functions as complex as MD5\n   may be precluded for ubiquitous use at full\
    \ line rate.  This\n   motivates exploring the use of selection hash functions\
    \ with\n   complexity somewhere between that of MD5 and CRC.  In some\n   applications\
    \ (see Section 11), a second hash may be calculated on\n   only selected packets;\
    \ MD5 is feasible for this purpose if the rate\n   of production of selected packets\
    \ is sufficiently low.\n"
- title: 11.  Applications
  contents:
  - "11.  Applications\n   We first describe several representative operational applications\n\
    \   that require traffic measurements at various levels of temporal and\n   spatial\
    \ granularity.  Some of the goals here appear similar to those\n   of IPFIX, at\
    \ least in the broad classes of applications supported.\n   The major benefit\
    \ of PSAMP is the support of new network management\n   applications, specifically,\
    \ those enabled by the packet Selectors\n   that it supports.\n"
- title: 11.1.  Baseline Measurement and Drill Down
  contents:
  - "11.1.  Baseline Measurement and Drill Down\n   Packet Sampling is ideally suited\
    \ to determine the composition of the\n   traffic across a network.  The approach\
    \ is to enable measurement on a\n   cut-set of the network links such that each\
    \ packet entering the\n   network is seen at least once, for example, on all ingress\
    \ links.\n   Unfiltered Sampling with a relatively low selection fraction\n  \
    \ establishes baseline measurements of the network traffic.  Packet\n   Reports\
    \ include packet attributes of common interest: source and\n   destination address\
    \ and port numbers, prefix, protocol number, type\n   of service, etc.  Traffic\
    \ matrices are indicated by reporting source\n   and destination AS matrices.\
    \  Absolute traffic volumes are estimated\n   by renormalizing the sampled traffic\
    \ volumes through division by\n   either the Configured Selection Fraction or\
    \ the Attained Selection\n   Fraction (as derived from input packet counters included\
    \ in the\n   Report Stream).\n   Suppose an operator or a measurement-based application\
    \ detects an\n   interesting subset of a Packet Stream, as identified by a particular\n\
    \   packet attribute.  Real-time drill down to that subset is achieved by\n  \
    \ instantiating a new Metering Process on the same Observed Packet\n   Stream\
    \ from which the subset was reported.  The Selection Process of\n   the new Metering\
    \ Process filters according to the attribute of\n   interest, and composes with\
    \ Sampling if necessary to manage the\n   attained fraction of packets selected.\n"
- title: 11.2.  Trajectory Sampling
  contents:
  - "11.2.  Trajectory Sampling\n   The goal of trajectory Sampling is the selection\
    \ of a subset of\n   packets at all enabled Observation Points at which these\
    \ packets are\n   observed in a network domain.  Thus, the selection decisions\
    \ are\n   consistent in the sense that each packet is selected either at all\n\
    \   enabled Observation Points or at none of them.  Trajectory Sampling\n   is\
    \ realized by Hash-based Selection if all enabled Observation Points\n   apply\
    \ a common hash function to a portion of the Packet Content that\n   is invariant\
    \ along the packet path.  (Thus, fields such at TTL and\n   CRC are excluded.)\n\
    \   The trajectory followed by a packet is reconstructed from Packet\n   Reports\
    \ on it that reach the Collector.  Reports on a given packet\n   are associated\
    \ by matching either a label comprising the invariant\n   reported Packet Content\
    \ or possibly some digest of it.  The\n   reconstruction of trajectories and methods\
    \ for dealing with possible\n   ambiguities due to label collisions (identical\
    \ labels reported by\n   different packets) and potential loss of reports in transmission\
    \ are\n   dealt with in [DuGr01], [DuGeGr02], and [DuGr04].\n"
- title: 11.3.  Passive Performance Measurement
  contents:
  - "11.3.  Passive Performance Measurement\n   Trajectory Sampling enables the tracking\
    \ of the performance\n   experience by customer traffic, customers identified\
    \ by a list of\n   source or destination prefixes, or by ingress or egress interfaces.\n\
    \   Operational uses include the verification of Service Level Agreements\n  \
    \ (SLAs), and troubleshooting following a customer complaint.\n   In this application,\
    \ trajectory Sampling is enabled at all network\n   ingress and egress interfaces.\
    \  Rates of loss in transit between\n   ingress and egress are estimated from\
    \ the proportion of trajectories\n   for which no egress report is received. \
    \ Note that loss of customer\n   packets is distinguishable from loss of Packet\
    \ Reports through use of\n   report sequence numbers.  Assuming synchronization\
    \ of clocks between\n   different entities, delay of customer traffic across the\
    \ network may\n   also be measured; see [Zs02].\n   Extending hash selection to\
    \ all interfaces in the network would\n   enable attribution of poor performance\
    \ to individual network links.\n"
- title: 11.4.  Troubleshooting
  contents:
  - "11.4.  Troubleshooting\n   PSAMP Packet Reports can also be used to diagnose\
    \ problems whose\n   occurrence is evident from aggregate statistics, per interface\n\
    \   utilization and packet loss statistics.  These statistics are\n   typically\
    \ moving averages over relatively long time windows, e.g., 5\n   minutes, and\
    \ serve as a coarse-grain indication of operational health\n   of the network.\
    \  The most common method of obtaining such\n   measurements is through the appropriate\
    \ SNMP MIBs (MIB-II [RFC1213]\n   and vendor-specific MIBs).\n   Suppose an operator\
    \ detects a link that is persistently overloaded\n   and experiences significant\
    \ packet drop rates.  There is a wide range\n   of potential causes: routing parameters\
    \ (e.g., OSPF link weights)\n   that are poorly adapted to the traffic matrix,\
    \ e.g., because of a\n   shift in that matrix; a DoS attack, a flash crowd, or\
    \ a routing\n   problem (link flapping).  In most cases, aggregate link statistics\n\
    \   are not sufficient to distinguish between such causes and to decide\n   on\
    \ an appropriate corrective action.  For example, if routing over\n   two links\
    \ is unstable, and the links flap between being overloaded\n   and inactive, this\
    \ might be averaged out in a 5-minute window,\n   indicating moderate loads on\
    \ both links.\n   Baseline PSAMP measurement of the congested link, as described\
    \ in\n   Section 11.1, enables measurements that are fine grained in both\n  \
    \ space and time.  The operator has to be able to determine how many\n   bytes/packets\
    \ are generated for each source/destination address, port\n   number, and prefix,\
    \ or other attributes, such as protocol number,\n   MPLS forwarding equivalence\
    \ class (FEC), type of service, etc.  This\n   allows the precise determination\
    \ of the nature of the offending\n   traffic.  For example, in the case of a Distributed\
    \ Denial of Service\n   (DDoS) attack, the operator would see a significant fraction\
    \ of\n   traffic with an identical destination address.\n   In certain circumstances,\
    \ precise information about the spatial flow\n   of traffic through the network\
    \ domain is required to detect and\n   diagnose problems and verify correct network\
    \ behavior.  In the case\n   of the overloaded link, it would be very helpful\
    \ to know the precise\n   set of paths that packets traversing this link follow.\
    \  This would\n   readily reveal a routing problem such as a loop, or a link with\
    \ a\n   misconfigured weight.  More generally, complex diagnosis scenarios\n \
    \  can benefit from measurement of traffic intensities (and other\n   attributes)\
    \ over a set of paths that is constrained in some way.  For\n   example, if a\
    \ multihomed customer complains about performance\n   problems on one of the access\
    \ links from a particular source address\n   prefix, the operator should be able\
    \ to examine in detail the traffic\n   from that source prefix that also traverses\
    \ the specified access link\n   towards the customer.\n   While it is in principle\
    \ possible to obtain the spatial flow of\n   traffic through auxiliary network\
    \ state information, e.g., by\n   downloading routing and forwarding tables from\
    \ routers, this\n   information is often unreliable, outdated, voluminous, and\
    \ contingent\n   on a network model.  For operational purposes, a direct observation\n\
    \   of traffic flow provided by trajectory Sampling is more reliable, as\n   it\
    \ does not depend on any such auxiliary information.  For example,\n   if there\
    \ was a bug in a router's software, direct observation would\n   allow the diagnosis\
    \ the effect of this bug, while an indirect method\n   would not.\n"
- title: 12.  Security Considerations
  contents:
  - '12.  Security Considerations

    '
- title: 12.1.  Relation of PSAMP and IPFIX Security for Exporting Process
  contents:
  - "12.1.  Relation of PSAMP and IPFIX Security for Exporting Process\n   As detailed\
    \ in Section 4.3, PSAMP shares with IPFIX security\n   requirements for export,\
    \ namely, confidentiality, integrity, and\n   authenticity of the exported data;\
    \ see also Sections 6.3 and 10 of\n   [RFC3917].  Since PSAMP will use IPFIX for\
    \ export, it can employ the\n   IPFIX protocol [RFC5101] to meet its requirements.\n"
- title: 12.2.  PSAMP Specific Privacy Considerations
  contents:
  - "12.2.  PSAMP Specific Privacy Considerations\n   In distinction with IPFIX, a\
    \ PSAMP Device may, in some\n   configurations, report some number of initial\
    \ bytes of the packet,\n   which may include some part of a packet payload.  This\
    \ option is\n   conformant with the requirements of [RFC2804] since it does not\n\
    \   mandate configurations that would enable capture of an entire Packet\n   Stream\
    \ of a Flow: neither a unit Sampling rate (1 in 1 Sampling) nor\n   reporting\
    \ a specific number of initial bytes is required by the PSAMP\n   protocol.\n\
    \   To preserve privacy of any users acting as sender or receiver of the\n   observed\
    \ traffic, the contents of the Packet Reports must be able to\n   remain confidential\
    \ in transit between the exporting PSAMP Device and\n   the Collector.  PSAMP\
    \ will use IPFIX as the exporting protocol, and\n   the IPFIX protocol must provide\
    \ mechanisms to ensure confidentiality\n   of the Exporting Process, for example,\
    \ encryption of Export Packets\n   [RFC5101].\n"
- title: 12.3.  Security Considerations for Hash-Based Selection
  contents:
  - '12.3.  Security Considerations for Hash-Based Selection

    '
- title: 12.3.1.  Modes and Impact of Vulnerabilities
  contents:
  - "12.3.1.  Modes and Impact of Vulnerabilities\n   A concern for Hash-based Selection\
    \ is whether some large set of\n   related packets could be disproportionately\
    \ sampled, either\n         (i) through unanticipated behavior in the hash function,\
    \ or\n        (ii) because the packets had been deliberately crafted to have\n\
    \             this property.\n   As detailed below, only cryptographic hash functions\
    \ (e.g., one based\n   on MD5) employing a private parameter are sufficiently\
    \ strong to\n   withstand the range of conceivable attacks.  However, implementation\n\
    \   considerations may preclude operating the strongest hash functions at\n  \
    \ line rate.  For this reason, PSAMP is not expected to standardize\n   around\
    \ a cryptographic hash function at the present time.  The\n   purpose of this\
    \ section is to inform discussion of the\n   vulnerabilities and trade-offs associated\
    \ with different hash\n   function choices.  Section 6.2.2 of [RFC5475] does this\
    \ in more\n   detail.\n   An attacker able to predict packet Sampling outcomes\
    \ could craft a\n   Packet Stream that could evade selection, or another that\
    \ could\n   overwhelm the measurement infrastructure with all its packets being\n\
    \   selected.  An attacker may attempt to do this based on knowledge of\n   the\
    \ hash function.  An attacker could employ knowledge of selection\n   outcomes\
    \ of a known Packet Stream to reverse engineer parameters of\n   the hash function.\
    \  This knowledge could be gathered, e.g., from\n   billing information, reactions\
    \ of intrusion detection systems, or\n   observation of a Report Stream.\n   Since\
    \ Hash-based Selection is deterministic, it is vulnerable to\n   replay attacks.\
    \  Repetition of a single packet may be noticeable to\n   other measurement methods\
    \ if employed (e.g., collection of Flow\n   statistics), whereas a set of distinct\
    \ packets that appears\n   statistically similar to regular traffic may be less\
    \ noticeable.  The\n   impact of replay attacks on Hash-based Selection may be\
    \ mitigated by\n   repeated changing of hash function parameters.\n"
- title: 12.3.2.  Use of Private Parameters in Hash Functions
  contents:
  - "12.3.2.  Use of Private Parameters in Hash Functions\n   Because hash functions\
    \ for Hash-based Selection are to be\n   standardized and hence public, the packet\
    \ selection decision must be\n   controlled by some private quantity associated\
    \ with the Hash-based\n   Selection Selector.  Making private the range of hash\
    \ values for\n   which packets are selected is not alone sufficient to prevent\
    \ an\n   attacker crafting a stream of distinct packets that are\n   disproportionately\
    \ selected.  A private parameter must be used within\n   the hash function, for\
    \ example, a private modulus in a hash function,\n   or by concatenating the hash\
    \ input with a private string prior to\n   hashing.\n"
- title: 12.3.3.  Strength of Hash Functions
  contents:
  - "12.3.3.  Strength of Hash Functions\n   The specific choice of hash function\
    \ and its usage determines the\n   types of potential vulnerability:\n   * Cryptographic\
    \ hash functions: when a private parameter is used,\n     future selection outcomes\
    \ cannot be predicted even by an attacker\n     with knowledge of past selection\
    \ outcomes.\n   * Non-cryptographic hash functions:\n     Using knowledge of past\
    \ selection outcomes: some well-known hash\n     functions, e.g., CRC-32, are\
    \ vulnerable to attacks, in the sense\n     that their private parameter can be\
    \ determined with knowledge of\n     sufficiently many past selections, even when\
    \ a private parameter is\n     used; see [GoRe07].\n     No knowledge of past\
    \ selection outcomes: using a private parameter\n     hardened the hash function\
    \ to classes of attacks that work when the\n     parameter is public, although\
    \ vulnerability to future attacks is\n     not precluded.\n"
- title: 12.4.  Security Guidelines for Configuring PSAMP
  contents:
  - "12.4.  Security Guidelines for Configuring PSAMP\n   Hash function parameters\
    \ configured in a PSAMP Device are sensitive\n   information, which must be kept\
    \ private.  As well as using probing\n   techniques to discover parameters of\
    \ non-cryptographic hash functions\n   as described above, implementation and\
    \ procedural weaknesses may lead\n   to attackers discovering parameters, whatever\
    \ class of hash function\n   is used.  The following measures may prevent this\
    \ from occurring:\n   Hash function parameters must not be displayable in cleartext\
    \ on\n   PSAMP Devices.  This reduces the chance for the parameters to be\n  \
    \ discovered by unauthorized access to the PSAMP Device.\n   Hash function parameters\
    \ must not be remotely set in cleartext over a\n   channel that may be eavesdropped.\n\
    \   Hash function parameters must be changed regularly.  Note that such\n   changes\
    \ must be synchronized over all PSAMP Devices in a domain under\n   which trajectory\
    \ Sampling is employed in order to maintain consistent\n   Sampling of packets\
    \ over the domain.\n   Default hash function parameter values should be initialized\n\
    \   randomly, in order to avoid predictable values that attackers could\n   exploit.\n"
- title: 13.  Contributors
  contents:
  - "13.  Contributors\n   Sharon Goldberg contributed to Section 12.3 on security\n\
    \   considerations for Hash-based Selection.\n   Sharon Goldberg\n   Department\
    \ of Electrical Engineering\n   Princeton University\n   F210-K EQuad\n   Princeton,\
    \ NJ 08544\n   USA\n   EMail: goldbe@princeton.edu\n"
- title: 14.  Acknowledgments
  contents:
  - "14.  Acknowledgments\n   The authors would like to thank Peram Marimuthu and\
    \ Ganesh Sadasivan\n   for their input in early working drafts of this document.\n"
- title: 15.  References
  contents:
  - '15.  References

    '
- title: 15.1.  Normative References
  contents:
  - "15.1.  Normative References\n   [RFC5476]  Claise. B., Ed., \"Packet Sampling\
    \ (PSAMP) Protocol\n              Specifications\", RFC 5476, March 2009.\n  \
    \ [RFC5477]  Dietz, T., Claise, B., Aitken, P., Dressler, F., and G.\n       \
    \       Carle, \"Information Model for Packet Sampling Exports\",\n          \
    \    RFC 5477, March 2009.\n   [RFC5101]  Claise, B., Ed., \"Specification of\
    \ the IP Flow Information\n              Export (IPFIX) Protocol for the Exchange\
    \ of IP Traffic\n              Flow Information\", RFC 5101, January 2008.\n \
    \  [RFC0791]  Postel, J., \"Internet Protocol\", STD 5, RFC 791, September\n \
    \             1981.\n   [RFC5102]  Quittek, J., Bryant, S., Claise, B., Aitken,\
    \ P., and J.\n              Meyer, \"Information Model for IP Flow Information\
    \ Export\",\n              RFC 5102, January 2008.\n   [RFC4960]  Stewart, R.,\
    \ Ed., \"Stream Control Transmission Protocol\",\n              RFC 4960, September\
    \ 2007.\n   [RFC3758]  Stewart, R., Ramalho, M., Xie, Q., Tuexen, M., and P.\n\
    \              Conrad, \"Stream Control Transmission Protocol (SCTP)\n       \
    \       Partial Reliability Extension\", RFC 3758, May 2004.\n   [RFC5475]  Zseby,\
    \ T., Molina, M., Duffield, N., Niccolini, S., and F.\n              Raspall,\
    \ \" Sampling and Filtering Techniques for IP Packet\n              Selection\"\
    , RFC 5475, March 2009.\n"
- title: 15.2.  Informative References
  contents:
  - "15.2.  Informative References\n   [RFC3704]  Baker, F. and P. Savola, \"Ingress\
    \ Filtering for Multihomed\n              Networks\", BCP 84, RFC 3704, March\
    \ 2004.\n   [RFC2205]  Braden, R., Ed., Zhang, L., Berson, S., Herzog, S., and\
    \ S.\n              Jamin, \"Resource ReSerVation Protocol (RSVP) -- Version 1\n\
    \              Functional Specification\", RFC 2205, September 1997.\n   [RFC2460]\
    \  Deering, S. and R. Hinden, \"Internet Protocol, Version 6\n              (IPv6)\
    \ Specification\", RFC 2460, December 1998.\n   [DuGeGr02] N.G. Duffield, A. Gerber,\
    \ M. Grossglauser, \"Trajectory\n              Engine: A Backend for Trajectory\
    \ Sampling\", IEEE Network\n              Operations and Management Symposium\
    \ 2002, Florence, Italy,\n              April 15-19, 2002.\n   [DuGr04]   N. G.\
    \ Duffield and M. Grossglauser, \"Trajectory Sampling\n              with Unreliable\
    \ Reporting\", Proc IEEE Infocom 2004, Hong\n              Kong, March 2004.\n\
    \   [DuGr08]   N. G. Duffield and M. Grossglauser, \"Trajectory Sampling\n   \
    \           with Unreliable Reporting\", IEEE/ACM Trans. on Networking,\n    \
    \          16(1), February 2008.\n   [RFC2914]  Floyd, S., \"Congestion Control\
    \ Principles\", BCP 41, RFC\n              2914, September 2000.\n   [GoRe07]\
    \   S. Goldberg, J. Rexford, \"Security Vulnerabilities and\n              Solutions\
    \ for Packet Sampling\", IEEE Sarnoff Symposium,\n              Princeton, NJ,\
    \ May 2007.\n   [RFC2804]  IAB and IESG, \"IETF Policy on Wiretapping\", RFC 2804,\
    \ May\n              2000.\n   [RFC2981]  Kavasseri, R., Ed., \"Event MIB\", RFC\
    \ 2981, October 2000.\n   [RFC1213]  McCloghrie, K. and M. Rose, \"Management\
    \ Information Base\n              for Network Management of TCP/IP-based internets:MIB-II\"\
    ,\n              STD 17, RFC 1213, March 1991.\n   [RFC3176]  Phaal, P., Panchen,\
    \ S., and N. McKee, \"InMon Corporation's\n              sFlow: A Method for Monitoring\
    \ Traffic in Switched and\n              Routed Networks\", RFC 3176, September\
    \ 2001.\n   [RFC2330]  Paxson, V., Almes, G., Mahdavi, J., and M. Mathis,\n  \
    \            \"Framework for IP Performance Metrics\", RFC 2330, May\n       \
    \       1998.\n   [RFC0768]  Postel, J., \"User Datagram Protocol\", STD 6, RFC\
    \ 768,\n              August 1980.\n   [RFC3917]  Quittek, J., Zseby, T., Claise,\
    \ B., and S. Zander,\n              \"Requirements for IP Flow Information Export\
    \ (IPFIX)\", RFC\n              3917, October 2004.\n   [RFC4271]  Rekhter, Y.,\
    \ Ed., Li, T., Ed., and S. Hares, Ed., \"A\n              Border Gateway Protocol\
    \ 4 (BGP-4)\", RFC 4271, January\n              2006.\n   [RFC3031]  Rosen, E.,\
    \ Viswanathan, A., and R. Callon, \"Multiprotocol\n              Label Switching\
    \ Architecture\", RFC 3031, January 2001.\n   [RFC5470]  Sadasivan, G., Brownlee,\
    \ N., Claise, B., and J. Quittek,\n              \"Architecture for IP Flow Information\
    \ Export\", RFC 5470,\n              March 2009.\n   [RFC2819]  Waldbusser, S.,\
    \ \"Remote Network Monitoring Management\n              Information Base\", STD\
    \ 59, RFC 2819, May 2000.\n   [Zs02]     T. Zseby, \"Deployment of Sampling Methods\
    \ for SLA\n              Validation with Non-Intrusive Measurements\", Proceedings\n\
    \              of Passive and Active Measurement Workshop (PAM 2002),\n      \
    \        Fort Collins, CO, USA, March 25-26, 2002.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Derek Chiou\n   Department of Electrical and Computer\
    \ Engineering\n   University of Texas at Austin\n   1 University Station, Stop\
    \ C0803, ENS Building room 135,\n   Austin TX, 78712\n   USA\n   Phone: +1 512\
    \ 232 7722\n   EMail: Derek@ece.utexas.edu\n   Benoit Claise\n   Cisco Systems\n\
    \   De Kleetlaan 6a b1\n   1831 Diegem\n   Belgium\n   Phone: +32 2 704 5622\n\
    \   EMail: bclaise@cisco.com\n   Nick Duffield, Editor\n   AT&T Labs - Research\n\
    \   Room B139\n   180 Park Ave\n   Florham Park NJ 07932\n   USA\n   Phone: +1\
    \ 973-360-8726\n   EMail: duffield@research.att.com\n   Albert Greenberg\n   One\
    \ Microsoft Way\n   Redmond, WA 98052-6399\n   USA\n   Phone: +1 425-722-8870\n\
    \   EMail: albert@microsoft.com\n   Matthias Grossglauser\n   School of Computer\
    \ and Communication Sciences\n   EPFL\n   1015 Lausanne\n   Switzerland\n   EMail:\
    \ matthias.grossglauser@epfl.ch\n   Jennifer Rexford\n   Department of Computer\
    \ Science\n   Princeton University\n   35 Olden Street\n   Princeton, NJ 08540-5233\n\
    \   USA\n   Phone: +1 609-258-5182\n   EMail: jrex@cs.princeton.edu\n"
