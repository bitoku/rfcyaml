- title: __initial_text__
  contents:
  - '            Attaching Meaning to Solicitation Class Keywords

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document proposes a mechanism for finding a URI associated\
    \ with\n   a solicitation class keyword, which is defined in RFC 3865, the No\n\
    \   Soliciting SMTP Service Extension.  Solicitation class keywords are\n   simple\
    \ labels consisting of a domain name that has been reversed,\n   such as \"org.example.adv\"\
    .  These solicitation class keywords are\n   inserted in selected header fields\
    \ or used in the ESMTP service\n   extension, including a new \"No-Solicit:\"\
    \ header, which can contain\n   one or more solicitation class keywords inserted\
    \ by the sender.\n   This document specifies an application based on the Dynamic\n\
    \   Delegation Discovery System (DDDS) described in RFC 3401 and related\n   documents.\
    \  An algorithm is specified to associate a solicitation\n   class keyword with\
    \ a URI which contains further information about the\n   meaning and usage of\
    \ that solicitation class keyword.  For example,\n   the registrant of the \"\
    example.org\" domain could use this mechanism\n   to create a URI which contains\
    \ detailed information about the\n   \"org.example.adv\" solicitation class keyword.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Solicitation Class Keywords .....................................2\n\
    \      1.1. Terminology ................................................3\n  \
    \ 2. The No-Solicit NAPTR Application ................................3\n   3.\
    \ Example .........................................................5\n   4. DDDS\
    \ Application Specification ..................................7\n   5. Acknowledgements\
    \ ................................................8\n   6. Security Considerations\
    \ .........................................8\n   7. IANA Considerations .............................................9\n\
    \   8. References ......................................................9\n  \
    \    8.1. Normative References .......................................9\n    \
    \  8.2. Informative References ....................................10\n"
- title: 1.  Solicitation Class Keywords
  contents:
  - "1.  Solicitation Class Keywords\n   [RFC3865] defines the concept of a \"solicitation\
    \ class keyword\",\n   which is an arbitrary string or label which can be associated\
    \ with an\n   electronic mail message and transported by the ESMTP mail service\
    \ as\n   defined in [RFC2821] and related documents.  Solicitation class\n   keywords\
    \ are formatted like domain names, but reversed.  For example,\n   the zone administrator\
    \ of \"example.com\" might specify a particular\n   solicitation class keyword\
    \ such as \"com.example.adv\" that could be\n   inserted in a \"No-Solicit:\"\
    \ header by the message sender or in a\n   trace field by a message transfer agent\
    \ (MTA).  This solicitation\n   class keyword is inserted by the sender of the\
    \ message, who may also\n   insert a variety of other solicitation class keywords\
    \ as defined by\n   the sender or by other parties.\n   [RFC3865] explicitly places\
    \ discovery of the meaning of a\n   solicitation class keyword as outside of the\
    \ scope of the basic ESMTP\n   service extension.  For the purposes of message\
    \ transport, these\n   solicitation class keywords are opaque.  However, if RFC\
    \ 3865 becomes\n   widely used, a mail message might contain a large number of\n\
    \   solicitation class keywords.  The \"No-Solicit:\" header has keywords\n  \
    \ inserted by the sender of the message, which might include the\n   sender's\
    \ own keywords, as well as those mandated by regulatory\n   authorities or recommended\
    \ by voluntary industry associations.\n   Likewise, the \"received:\" trace fields\
    \ might contain a large number\n   of keywords produced by message transfer agents,\
    \ filtering software,\n   forwarding software in the message user agent (MUA),\
    \ or any other\n   system in the chain of delivery.\n   As the number of keywords\
    \ employed grows, it will be important to\n   find a method for discovering the\
    \ meaning behind the various\n   solicitation class keywords.  This document specifies\
    \ such a\n   mechanism, associating a solicitation class keyword with a URI which\n\
    \   contains further information by using the DNS NAPTR Resource Record,\n   which\
    \ is defined in [RFC3403].  An explicit design goal is to keep\n   the system\
    \ as simple as possible.  Approaches such as defining an\n   XML-based structure\
    \ that would contain specific meta-data about the\n   solicitation class keyword\
    \ or other approaches that define the format\n   of the explanation were ruled\
    \ out.  Instead, the goal is to simply to\n   associate a solicitation class keyword\
    \ with a URI, which in turn\n   contains an explanation of the keyword.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ BCP 14, [RFC2119].\n"
- title: 2.  The No-Solicit NAPTR Application
  contents:
  - "2.  The No-Solicit NAPTR Application\n   The DDDS framework of [RFC3401] and\
    \ related documents provides a\n   powerful set of mechanisms that can yield sophisticated\
    \ applications\n   such as ENUM as specified in [RFC3761].  There is a simplification\
    \ of\n   the DDDS framework called the Straightforward-NAPTR (S-NAPTR)\n   application\
    \ as specified in [RFC3958].  Unfortunately, S-NAPTR does\n   not permit the use\
    \ of the \"U\" flag for terminal lookups and does not\n   support the regular\
    \ expression field of the NAPTR RR.  Since a\n   replacement field in a NAPTR\
    \ record must contain only a domain name,\n   and our goal is to find a URI, this\
    \ document does not use the S-NAPTR\n   mechanism.\n   This document uses the\
    \ NAPTR RR to do a single lookup from\n   solicitation class keyword to URI. \
    \ The character \".\" is first\n   substituted for any instances of the character\
    \ \":\" and then the\n   solicitation class keyword is reversed, using the character\
    \ \".\" as\n   the delimiter.  This becomes the domain name lookup key.  For\n\
    \   example, \"org.example:ADV\" becomes \"ADV.example.org\".\n   Note On Domain\
    \ Names: RFC3865 states that a solicitation class\n   keyword consists of a valid\
    \ domain name followed by the \":\"\n   character and by additional valid characters.\
    \  Several points are\n   important to remember for implementors.  Since domain\
    \ names are case\n   insensitive and the \":\" character is translated to the\
    \ \".\"\n   character, for purposes of this DDDS application, the following\n\
    \   solicitation class keywords are syntactically equivalent:\n   \"com.example:ADV\"\
    , \"com.Example:adv\", and \"com:example:ADV\".\n   In addition, it is important\
    \ to remember that the resulting string\n   must meet other DNS validity checks.\
    \  In particular, domain labels\n   are limited to 63 characters in length and\
    \ the total length of the\n   resulting string must be less than 253 characters.\
    \  Any non-ASCII\n   characters must be encoded using the Internationalized Domain\
    \ Names\n   (IDN) specifications in [RFC3490] and related documents.  Note that\n\
    \   non-ASCII characters may be encoded after the \":\" character as well.\n \
    \  The fields of the NAPTR RR are used as follows:\n   o  The \"ORDER\" and \"\
    PREFERENCE\" fields are to be processed as\n      specified in [RFC3403]: if multiple\
    \ records are returned, the\n      one(s) with the lowest \"ORDER\" value that\
    \ have a matching\n      \"SERVICE\" field MUST be used.  Of those with the lowest\
    \ ORDER\n      value, those with the lowest \"PREFERENCE\" SHOULD be used.\n \
    \  o  The \"FLAGS\" field MUST contain the character \"U\".\n   o  The \"SERVICES\"\
    \ field MUST contain only the string \"no-solicit\".\n   o  The \"REGEXP\" field\
    \ MUST contain a valid URI as further specified\n      in this section.\n   o\
    \  The \"REPLACEMENT\" field MUST be empty.\n   The \"REGEXP\" field is defined\
    \ in [RFC3402] as consisting of a\n   \"delim-character\", a POSIX Extended Regular\
    \ Expression, another\n   \"delim-character\", a replacement value, and a final\n\
    \   \"delim-character\".  For this application the following rules apply:\n  \
    \ o  The \"delim-character\" MAY be any valid character as defined in\n      section\
    \ 3.2 of [RFC3402].\n   o  The extended regular expression MUST be empty.\n  \
    \ o  The replacement value MUST contain a valid URI as specified in\n      [RFC3986].\n\
    \   o  The replacement value SHOULD contain a URI limited to the \"ftp\",\n  \
    \    \"http\", and \"https\" schemes as specified in [RFC3986] and\n      [RFC2660].\n\
    \   o  The document that is retrieved at the URI SHOULD conform to\n      [HTML-4.01],\
    \ including the Accessibility Guidelines contained\n      therein.\n"
- title: 3.  Example
  contents:
  - "3.  Example\n   In this example, a set of NAPTR records are added to the\n  \
    \ \"example.com\" zone and can be retrieved using \"dig\" or other DNS\n   utilities:\n\
    \   [carl@example.com]% dig 2795.example.com naptr\n   ; <<>> DiG 9.2.3 <<>> 2795.example.com\
    \ naptr\n   ;; global options:  printcmd\n   ;; Got answer:\n   ;; ->>HEADER<<-\
    \ opcode: QUERY,\n      status: NOERROR, id: 43494\n   ;; flags: qr aa rd ra;\
    \ QUERY: 1, ANSWER: 5,\n      AUTHORITY: 2, ADDITIONAL: 1\n   ;; QUESTION SECTION:\n\
    \   ;2795.example.com.              IN      NAPTR\n   ;; ANSWER SECTION:\n   2795.example.com.\
    \       86400   IN\n        NAPTR   1 1 \"U\" \"iam+invalid\"\n        \"!!http://invalid.example.com/contact.html!\"\
    \ .\n   2795.example.com.       86400   IN\n        NAPTR   1 1 \"U\" \"sip+invalid\"\
    \n        \"!!http://invalid.example.com/contact.html!\" .\n   2795.example.com.\
    \       86400   IN\n        NAPTR   1 2 \"U\" \"no-solicit\"\n        \"!!http://infinite.example.com/keywordinfo.html!\"\
    \ .\n   2795.example.com.       86400   IN\n        NAPTR   2 1 \"U\" \"no-solicit\"\
    \n        \"!!http://infinite.example.com/keywordinfo.html!\" .\n   2795.example.com.\
    \       86400   IN\n        NAPTR   1 1 \"U\" \"no-solicit\"\n        \"!!http://infinite.example.com/keywordinfo.html!\"\
    \ .\n   A simple utility written in PERL accepts a lookup key and returns a\n\
    \   URI using the specifications in this document.  This example is\n   non-normative:\n\
    \   #!/usr/bin/perl\n   # THIS SAMPLE CODE IS NOT NORMATIVE\n   # This program\
    \ accepts a solicitation class keyword and\n   # returns a URI on success.  It\
    \ dies quietly on failure.\n   use strict;\n   # http://www.net-dns.org/\n   use\
    \ Net::DNS;\n   # reverse the label to create a domain name\n   $ARGV[0] =~ tr/:/./\
    \ ;\n   my $target = join( \".\", reverse( split( /\\./, $ARGV[0] ) ) );\n   #\
    \ create a resolver\n   my $res = Net::DNS::Resolver->new;\n   # find all naptr\
    \ records\n   my $query = $res->query( \"$target\", \"NAPTR\" ) || exit ;\n  \
    \ # Do your DNSSEC checks here, throw away all invalid RRs\n   # get the answers,\
    \ strip out non-matching services,\n   # sort by order, preference\n   my @rr\
    \ =\n     sort {\n       # sort records numerically by order, preference\n   \
    \    $a->order <=> $b->order\n         || $a->preference <=> $b->preference\n\
    \     }\n     grep { $_->service =~ /no-solicit/ } $query->answer;\n   # print\
    \ the first qualifying record, strip out the\n   # regexp markers\n   my $op =\
    \ substr( my $answer = $rr[0]->regexp , 0, 1 )\n      || exit ;\n   print split\
    \ ( $op, $answer ) ; exit ;\n   Running the sample code gives the following results:\n\
    \   [carl@example.com]% lynx -source `./discover.pl com.example.2795`\n   <!DOCTYPE\
    \ HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n   <html>\n     <head>\n\
    \       <title>About Our Solicitation Class Keyword</title>\n     </head>\n  \
    \   <body>\n       <center>\n         <a href=\"monkey.mp3\">\n           <img\
    \ alt=\"bouncy monkey logo\"\n                src=\"images/monkey_fpo.gif\" border=\"\
    0\" />\n           <br />\n          </a>\n          <br />\n          About com.example.2795:<br\
    \ />\n          It has been determined that the content of this\n          mail\
    \ message<br />\n          conforms to the spirit of RFC 2795.\n          Congratulations?\n\
    \       </center>\n     </body>\n   </html>\n"
- title: 4.  DDDS Application Specification
  contents:
  - "4.  DDDS Application Specification\n   The following definitions apply to this\
    \ application:\n   o  Application Unique String: The application unique string\
    \ is a\n      Solicitation Class Keyword as defined in [RFC3865].\n   o  First\
    \ Well Known Rule: The character \".\" is substituted for the\n      character\
    \ \":\" and then the Solicitation Class Keyword is reversed\n      in order to\
    \ produce a valid domain name.  For example,\n      \"com.example:adv\" would\
    \ become \"adv.example.com\".\n   o  Valid Databases: The DNS _is_ the database.\n\
    \   o  Expected Output: A URI.\n   o  The \"SERVICE\" field MUST contain the string\
    \ \"no-solicit\", the\n      \"FLAGS\" field MUST contain the string \"U\", the\
    \ \"REPLACEMENT\" field\n      MUST be empty, and the \"REGEXP\" field MUST be\
    \ formatted as\n      specified in Section 2.\n   Wildcards are appropriate for\
    \ this application, allowing multiple\n   solicitation class keywords that share\
    \ a common prefix to all point\n   to the same URI.  Note that the NAPTR Resource\
    \ Record is known as a\n   \"subtyping\" RR, which means that additional selectors\
    \ are available\n   within the RR to \"winnow down\" the choices.  This means\
    \ more records\n   are returned than are actually needed, resulting in more traffic.\n\
    \   But, this also means that wildcards may have unintended effects of\n   multiple\
    \ types of NAPTR resource records are used.  Implementors and\n   zone administrators\
    \ should exercise care in the use of such wildcards\n   in this application.\n"
- title: 5.  Acknowledgements
  contents:
  - "5.  Acknowledgements\n   The author would like to thank the following for their\
    \ helpful\n   suggestions and reviews of this document: Leslie Daigle, Spencer\n\
    \   Dawkins, Arnt Gulbrandsen, Ted Hardie, Scott Hollenbeck, Russ\n   Housley,\
    \ David Kessens, Peter Koch, Michael Mealling, Pekka Savola,\n   Mark Townsley,\
    \ and Margaret Wasserman.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   This document specifies an application which\
    \ depends on the Domain\n   Name System to associate a solicitation class keyword\
    \ with a URI.\n   Four security considerations are raised by this application:\n\
    \   1.  If the domain name lookup has been compromised, the application\n    \
    \   may return a URI with incorrect guidance on the use of a\n       particular\
    \ solicitation class keyword.  In particular, if the\n       application returns\
    \ a URI with the \"https:\" scheme, and the DNS\n       Security Extensions as\
    \ defined in [RFC4033] and related documents\n       are not used, the user would\
    \ have an unwarranted illusion of\n       authenticity making the possibility\
    \ of active attacks a serious\n       concern.  Even if both DNS Security Extensions\
    \ and the \"https:\"\n       scheme are used, the client will need to take additional\
    \ steps to\n       ensure that the two different digital signature validation\n\
    \       contexts are being administered by the same domain owner.\n   2.  RFC\
    \ 3865 bases solicitation class keywords on domain names.\n       However, it\
    \ does not define whom a user should trust.  A sender\n       or an intermediate\
    \ MTA could insert a solicitation class keyword\n       in a message and then\
    \ use the application defined in this\n       document to mislead the message\
    \ recipient.  For example, a\n       malicious direct marketer might insert a\
    \ keyword such as\n       \"org.example.certified.message\" and use a URI to somehow\
    \ indicate\n       that the message (wrongly) has some official status.  As with\
    \ any\n       URI, users must take further steps that are outside the scope of\n\
    \       this specification to determine what and whom to believe.\n   3.  Domain\
    \ names are not persistent identifiers.  As with any\n       application that\
    \ uses domain names, including the World Wide Web,\n       if a domain name or\
    \ a URI is embedded in an electronic mail\n       message, there is a possibility\
    \ that in the future the domain\n       name will be controlled by a different\
    \ zone administrator and\n       that\n       use of the application described\
    \ in this document will yield\n       different and possibly inconsistent results\
    \ over time.\n   4.  A malicious sender could insert a large number of solicitation\n\
    \       class keywords or improperly formatted solicitation keywords,\n      \
    \ thus performing a Denial of Service attack on the recipient's\n       resources\
    \ through the use of an excessive number of DNS lookups.\n       If such a message\
    \ is sent to many recipients, this can result in\n       a Denial of Service attack\
    \ on the provider at a particular URI\n       (e.g., a large number of requests\
    \ attempting to access a URI such\n       as \"http://example.net/index.html\"\
    ).  Improperly formatted\n       solicitation class keywords, particularly those\
    \ with a non-\n       existent top level or second level domain, could result\
    \ in a\n       Denial of Service attack on DNS registry providers or the DNS\n\
    \       root servers.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   There is no central registry maintained by the IANA\
    \ of values that\n   might appear in the \"SERVICE\" field of a NAPTR resource\
    \ record.\n   Thus, no direct IANA actions are required.\n   However, the IANA\
    \ does maintain an Application Service Tag Registry,\n   which is used to support\
    \ the S-NAPTR DDDS application defined in\n   [RFC3958].  The IANA is advised\
    \ that the \"no-solicit\" value for the\n   SERVICE field is in use per this document\
    \ and thus should not be used\n   in the Application Service Tag Registry for\
    \ other applications.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [HTML-4.01] Raggett, D., Hors, A., and I. Jacobs,\
    \ \"HTML 4.01\n               Specification\", W3C REC REC-html401-19991224,\n\
    \               December 1999.\n   [RFC2119]   Bradner, S., \"Key words for use\
    \ in RFCs to Indicate\n               Requirement Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   [RFC2660]   Rescorla, E. and A. Schiffman, \"The Secure HyperText\n\
    \               Transfer Protocol\", RFC 2660, August 1999.\n   [RFC3402]   Mealling,\
    \ M., \"Dynamic Delegation Discovery System (DDDS)\n               Part Two: The\
    \ Algorithm\", RFC 3402, October 2002.\n   [RFC3403]   Mealling, M., \"Dynamic\
    \ Delegation Discovery System (DDDS)\n               Part Three: The Domain Name\
    \ System (DNS) Database\",\n               RFC 3403, October 2002.\n   [RFC3865]\
    \   Malamud, C., \"A No Soliciting Simple Mail Transfer\n               Protocol\
    \ (SMTP) Service Extension\", RFC 3865,\n               September 2004.\n   [RFC3958]\
    \   Daigle, L. and A. Newton, \"Domain-Based Application\n               Service\
    \ Location Using SRV RRs and the Dynamic Delegation\n               Discovery\
    \ Service (DDDS)\", RFC 3958, January 2005.\n   [RFC3986]   Berners-Lee, T., Fielding,\
    \ R., and L. Masinter, \"Uniform\n               Resource Identifier (URI): Generic\
    \ Syntax\", STD 66, RFC\n               3986, January 2005.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [RFC2795]   Christey, S., \"The Infinite Monkey\
    \ Protocol Suite\n              (IMPS)\", RFC 2795, 1 April 2000.\n   [RFC2821]\
    \   Klensin, J., \"Simple Mail Transfer Protocol\", RFC 2821,\n              April\
    \ 2001.\n   [RFC3401]   Mealling, M., \"Dynamic Delegation Discovery System (DDDS)\n\
    \              Part One: The Comprehensive DDDS\", RFC 3401, October 2002.\n \
    \  [RFC3490]   Faltstrom, P., Hoffman, P., and A. Costello,\n              \"\
    Internationalizing Domain Names in Applications (IDNA)\",\n              RFC 3490,\
    \ March 2003.\n   [RFC3761]   Faltstrom, P. and M. Mealling, \"The E.164 to Uniform\n\
    \              Resource Identifiers (URI) Dynamic Delegation Discovery\n     \
    \         System (DDDS) Application (ENUM)\", RFC 3761, April 2004.\n   [RFC4033]\
    \   Arends, R., Austein, R., Larson, M., Massey, D., and S.\n              Rose,\
    \ \"DNS Security Introduction and Requirements\",\n              RFC 4033, March\
    \ 2005.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Carl Malamud\n   Memory Palace Press\n   PO Box 300\n  \
    \ Sixes, OR  97476\n   US\n   EMail: carl@media.org\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
