- title: __initial_text__
  contents:
  - '            Pseudowire (PW) Endpoint Fast Failure Protection

    '
- title: Abstract
  contents:
  - "Abstract\n   This document specifies a fast mechanism for protecting pseudowires\n\
    \   (PWs) transported by IP/MPLS tunnels against egress endpoint\n   failures,\
    \ including egress attachment circuit (AC) failure, egress\n   provider edge (PE)\
    \ failure, multi-segment PW terminating PE failure,\n   and multi-segment PW switching\
    \ PE failure.  Operating on the basis of\n   multihomed customer edge (CE), redundant\
    \ PWs, upstream label\n   assignment, and context-specific label switching, the\
    \ mechanism\n   enables local repair to be performed by the router upstream adjacent\n\
    \   to a failure.  The router can restore a PW in the order of tens of\n   milliseconds,\
    \ by rerouting traffic around the failure to a protector\n   through a pre-established\
    \ bypass tunnel.  Therefore, the mechanism\n   can be used to reduce traffic loss\
    \ before global repair reacts to the\n   failure and the network converges on\
    \ the topology changes due to the\n   failure.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc8104.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   4\n   2.  Specification of Requirements . . . . . . . . . . . .\
    \ . . . .   5\n   3.  Reference Models for Egress Endpoint Failures . . . . .\
    \ . . .   5\n     3.1.  Single-Segment PW . . . . . . . . . . . . . . . . . .\
    \ . .   6\n     3.2.  Multi-Segment PW  . . . . . . . . . . . . . . . . . . .\
    \ .   9\n   4.  Theory of Operation . . . . . . . . . . . . . . . . . . . . .\
    \  10\n     4.1.  Applicability . . . . . . . . . . . . . . . . . . . . . .  10\n\
    \     4.2.  Local Repair  . . . . . . . . . . . . . . . . . . . . . .  11\n  \
    \   4.3.  Context Identifier  . . . . . . . . . . . . . . . . . . .  14\n    \
    \   4.3.1.  Semantics . . . . . . . . . . . . . . . . . . . . . .  15\n      \
    \ 4.3.2.  FEC . . . . . . . . . . . . . . . . . . . . . . . . .  16\n       4.3.3.\
    \  IGP Advertisement and Path Computation  . . . . . . .  16\n     4.4.  Protection\
    \ Models . . . . . . . . . . . . . . . . . . . .  17\n       4.4.1.  Co-located\
    \ Protector  . . . . . . . . . . . . . . . .  17\n       4.4.2.  Centralized Protector\
    \ . . . . . . . . . . . . . . . .  19\n     4.5.  Transport Tunnel  . . . . .\
    \ . . . . . . . . . . . . . . .  20\n     4.6.  Bypass Tunnel . . . . . . . .\
    \ . . . . . . . . . . . . . .  21\n     4.7.  Examples of Forwarding State  .\
    \ . . . . . . . . . . . . .  22\n       4.7.1.  Co-located Protector Model  .\
    \ . . . . . . . . . . . .  22\n       4.7.2.  Centralized Protector Model . .\
    \ . . . . . . . . . . .  26\n   5.  Restorative and Revertive Behaviors . . .\
    \ . . . . . . . . . .  29\n   6.  LDP Extensions  . . . . . . . . . . . . . .\
    \ . . . . . . . . .  30\n     6.1.  Egress Protection Capability TLV  . . . .\
    \ . . . . . . . .  31\n     6.2.  PW Label Distribution from Primary PE to Protector\
    \  . . .  32\n     6.3.  PW Label Distribution from Backup PE to Protector . .\
    \ . .  33\n     6.4.  Protection FEC Element TLV  . . . . . . . . . . . . . .\
    \ .  34\n       6.4.1.  Encoding Format for PWid with IPv4 PE Addresses . . .\
    \  35\n       6.4.2.  Encoding Format for Generalized PWid with IPv4 PE\n    \
    \           Addresses . . . . . . . . . . . . . . . . . . . . . .  36\n      \
    \ 6.4.3.  Encoding Format for PWid with IPv6 PE Addresses . . .  37\n       6.4.4.\
    \  Encoding Format for Generalized PWid with IPv6 PE\n               Addresses\
    \ . . . . . . . . . . . . . . . . . . . . . .  38\n   7.  IANA Considerations\
    \ . . . . . . . . . . . . . . . . . . . . .  39\n   8.  Security Considerations\
    \ . . . . . . . . . . . . . . . . . . .  40\n   9.  References  . . . . . . .\
    \ . . . . . . . . . . . . . . . . . .  40\n     9.1.  Normative References  .\
    \ . . . . . . . . . . . . . . . . .  40\n     9.2.  Informative References  .\
    \ . . . . . . . . . . . . . . . .  41\n   Acknowledgements  . . . . . . . . .\
    \ . . . . . . . . . . . . . . .  43\n   Authors' Addresses  . . . . . . . . .\
    \ . . . . . . . . . . . . . .  43\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Per [RFC3985], [RFC8077], and [RFC5659], a pseudowire (PW)\
    \ or PW\n   segment can be thought of as a connection between a pair of\n   forwarders\
    \ hosted by two PEs, carrying an emulated Layer 2 service\n   over a packet switched\
    \ network (PSN).  In the single-segment PW\n   (SS-PW) case, a forwarder binds\
    \ a PW to an attachment circuit (AC).\n   In the multi-segment PW (MS-PW) case,\
    \ a forwarder on a terminating PE\n   (T-PE) binds a PW segment to an AC, while\
    \ a forwarder on a switching\n   PE (S-PE) binds one PW segment to another PW\
    \ segment.  In each\n   direction between the PEs, PW packets are transported\
    \ by a PSN\n   tunnel, which is also called a transport tunnel.\n   In order to\
    \ protect the PW service against network failures, it is\n   necessary to protect\
    \ every link and node along the entire data path.\n   For the traffic in a given\
    \ direction, this includes ingress AC,\n   ingress (T-)PE, intermediate routers\
    \ of the transport tunnel, S-PEs,\n   egress (T-)PE, and egress AC.  To minimize\
    \ service disruption upon a\n   failure, it is also desirable that each of these\
    \ components is\n   protected by a fast protection mechanism based on local repair.\
    \  Such\n   mechanisms generally involve a bypass path that is pre-computed and\n\
    \   pre-installed in the data plane on the router upstream adjacent to an\n  \
    \ anticipated failure.  This router is referred to as a \"point of local\n   repair\"\
    \ (PLR).  The bypass path has the property that it can guide\n   traffic around\
    \ the failure, while remaining unaffected by the\n   topology changes resulting\
    \ from the failure.  When the failure\n   occurs, the PLR can invoke the bypass\
    \ path to achieve fast\n   restoration for the service.\n   Today, fast protection\
    \ against ingress AC failure and ingress (T-)PE\n   failure can be achieved by\
    \ using a multihomed CE and redundant ACs,\n   such as a multi-chassis link aggregation\
    \ group (MC-LAG).  Fast\n   protection against the failure of an intermediate\
    \ router of the\n   transport tunnel can be achieved through RSVP fast reroute\
    \ [RFC4090]\n   or IP/LDP fast reroute [RFC5286] [RFC5714].  However, there is\
    \ no\n   equivalent mechanism that can be used against an egress AC failure,\n\
    \   an egress (T-)PE failure, or an S-PE failure.  For these failures,\n   service\
    \ restoration has to rely on global repair or control-plane\n   convergence. \
    \ Global repair normally involves the ingress CE or the\n   ingress (T-)PE switching\
    \ traffic to an alternative path, based on\n   remote failure detection via PW\
    \ status notification, end-to-end\n   Operations, Administration, and Maintenance\
    \ (OAM), and others.\n   Control-plane convergence relies on control protocols\
    \ to react on the\n   topology changes due to a failure.  Compared to local repair,\
    \ these\n   mechanisms are relatively slow in reacting to a failure and restoring\n\
    \   traffic.\n   This document addresses the above need.  It specifies a fast\n\
    \   protection mechanism based on local repair to protect PWs against the\n  \
    \ following endpoint failures:\n   a.  Egress AC failure.\n   b.  Egress PE failure:\
    \ Link or node failure of an egress PE of an\n       SS-PW or a T-PE of an MS-PW.\n\
    \   c.  Switching PE failure: Link or node failure of an S-PE of an\n       MS-PW.\n\
    \   The mechanism is applicable to LDP-signaled PWs.  It is relevant to\n   networks\
    \ with redundant PWs and multihomed CEs.  It is designed on\n   the basis of MPLS\
    \ upstream label assignment and context-specific\n   label switching [RFC5331].\
    \  Fast protection refers to its ability to\n   restore traffic in the order of\
    \ tens of milliseconds.  Compared with\n   global repair and control-plane convergence,\
    \ this mechanism can\n   provide faster service restoration.  However, it is intended\
    \ to\n   complement these mechanisms, rather than replacing them, as networks\n\
    \   rely on them to eventually move traffic to fully functional\n   alternative\
    \ paths.\n"
- title: 2.  Specification of Requirements
  contents:
  - "2.  Specification of Requirements\n   The key words \"MUST\", \"MUST NOT\", \"\
    REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 3.  Reference Models for Egress Endpoint Failures
  contents:
  - "3.  Reference Models for Egress Endpoint Failures\n   This document refers to\
    \ the following topologies to describe egress\n   endpoint failures and protection\
    \ procedures.\n"
- title: 3.1.  Single-Segment PW
  contents:
  - "3.1.  Single-Segment PW\n                  |<-------------- PW1 --------------->|\n\
    \              - PE1 -------------- P1 ---------------- PE2 -\n             /\
    \                                              \\\n            /             \
    \                                   \\\n         CE1                         \
    \                         CE2\n            \\                                \
    \                /\n             \\                                          \
    \    /\n              - PE3 -------------- P2 ---------------- PE4 -\n       \
    \           |<-------------- PW2 --------------->|\n                         \
    \        Figure 1\n   In Figure 1, the IP/MPLS network consists of PE and P routers.\
    \  It\n   provides a PW service between CE1 and CE2.  Each CE is multihomed via\n\
    \   two ACs to two PEs.  This forms two divergent paths between the CEs.\n   The\
    \ first path uses PW1 between PE1 and PE2, and the second path uses\n   PW2 between\
    \ PE3 and PE4.  For clarity, the transport tunnels of the\n   PWs and other links\
    \ between the routers are not shown in this figure.\n   In general, a CE may operate\
    \ the ACs in two modes when sending\n   traffic to the remote CE, i.e., active-standby\
    \ mode and active-active\n   mode.\n   o  In the active-standby mode, the CE chooses\
    \ one AC as the active AC\n      and the corresponding path as the active path,\
    \ and it uses the\n      other AC as the standby AC and the corresponding path\
    \ as the\n      standby path.  The CE only sends traffic on the active AC as long\n\
    \      as the active path is operational.  The CE will only send traffic\n   \
    \   on the standby AC after it detects a failure of the active path.\n      Note\
    \ that the CE may receive traffic on the active or standby AC,\n      depending\
    \ on whether the remote CE chooses the same active path\n      for the traffic\
    \ of the reverse direction.  In this document, even\n      if both CEs choose\
    \ the same active path, each CE should still\n      anticipate receiving traffic\
    \ on a standby AC, because the traffic\n      may be redirected to the standby\
    \ path by the fast protection\n      mechanism.\n   o  In the active-active mode,\
    \ the CE treats both ACs and their\n      corresponding paths as active and sends\
    \ traffic on both ACs in a\n      load-balancing fashion.  In the reverse direction,\
    \ the CE may\n      receive traffic on both ACs.\n   The above modes assume the\
    \ traffic to be data traffic, which is not\n   bound to a specific AC.  This does\
    \ not include control-protocol\n   traffic between the CEs, when the CE-CE control-protocol\
    \ sessions or\n   adjacencies established on the two ACs are considered as distinct\n\
    \   rather than having a primary and backup relationship.  In general, a\n   dual-homed\
    \ CE should not make any explicit or implicit assumptions\n   regarding the specific\
    \ AC from which it receives packets from the\n   remote CE.\n   For either mode,\
    \ when considering the traffic flowing in a given\n   direction over an active\
    \ path, this document views the ACs, PEs, and\n   PWs as serving primary or backup\
    \ roles.  In particular, the ACs, PEs,\n   and PWs along this active path have\
    \ primary roles, while those along\n   the other path have backup roles.  Note\
    \ that in the active-active\n   mode, each AC, PE, and PW on an active path has\
    \ a primary role and\n   also a backup role protecting the other path, which is\
    \ also active.\n   For Figure 1, the following roles are assumed for the traffic\
    \ going\n   from CE1 to CE2 via PW1.\n      Primary ingress AC: CE1-PE1\n    \
    \  Primary ingress PE: PE1\n      Primary PW: PW1\n      Primary egress PE: PE2\n\
    \      Primary egress AC: PE2-CE2\n      Backup ingress AC: CE1-PE3\n      Backup\
    \ ingress PE: PE3\n      Backup PW: PW2\n      Backup egress PE: PE4\n      Backup\
    \ egress AC: PE4-CE2\n   Based on this schema, this document describes egress\
    \ endpoint\n   failures and the fast protection mechanism on the per-active-path\
    \ and\n   per-direction basis.  In this case, an egress AC failure refers to\n\
    \   the failure of the AC PE2-CE2, and an egress node failure refers to\n   the\
    \ failure of PE2.  The ultimate goal is that when a failure occurs,\n   the traffic\
    \ should be locally repaired, so that it can eventually\n   reach CE2 via the\
    \ backup egress PE (PE4) and the backup egress AC\n   (PE4-CE2).\n   Subsequent\
    \ to the local repair, either the current active path should\n   heal after the\
    \ control plane converges on the new topology or the\n   ingress CE should switch\
    \ traffic from the primary path to the backup\n   path, depending on the failure\
    \ scenario.  In the latter case, the\n   ingress CE may perform the path switchover\
    \ triggered by end-to-end\n   OAM (in-band or out-band), PW status notification,\
    \ CE-PE control\n   protocols (e.g., the Link Aggregation Control Protocol (LACP)),\
    \ and\n   others.  In the active-standby mode, this will promote the standby\n\
    \   path to a new active path.  In the active-active mode, it will make\n   the\
    \ other active path carry all the traffic between the two CEs.  In\n   any case,\
    \ this phase of restoration falls into the control-plane\n   convergence and global\
    \ repair category; hence, it is out of the scope\n   of this document.  The purpose\
    \ of the fast protection mechanism in\n   this document is to reduce traffic loss\
    \ before this phase of\n   restoration takes place.\n   Note that in Figure 1,\
    \ if the traffic in the reverse direction (i.e.,\n   from CE2 to CE1) traverses\
    \ the AC CE2-PE2 and PE2 as an active path,\n   the failure of PE2 and the failure\
    \ of the AC PE2-CE2 will be\n   considered as ingress failures of the traffic.\
    \  If CE2 can detect the\n   failures, it may protect the traffic by switching\
    \ it to the backup\n   path via the AC CE2-PE4 and PE4.  However, this is categorized\
    \ as\n   ingress endpoint failure protection; hence, it is not handled by the\n\
    \   mechanism described in this document.\n   Figure 2 shows another possible\
    \ scenario, where CE1 is single-homed\n   to PE1, while CE2 remains multihomed\
    \ to PE2 and PE4.  From the\n   perspective of egress endpoint protection for\
    \ the traffic going from\n   CE1 to CE2 over PW1, this scenario is the same as\
    \ the scenario shown\n   in Figure 1.\n                   |<-------------- PW1\
    \ --------------->|\n                      ------------- P1 ---------------- PE2\
    \ -\n                     /                                       \\\n       \
    \             /                                         \\\n          CE1 -- PE1\
    \                                          CE2\n                    \\       \
    \                                  /\n                     \\                \
    \                       /\n                      ------------- P2 ----------------\
    \ PE4 -\n                   |<-------------- PW2 --------------->|\n         \
    \                        Figure 2\n   For clarity, primary egress AC, primary\
    \ egress PE, backup egress AC,\n   and backup egress PE may simply be referred\
    \ to as primary AC, primary\n   PE, backup AC, and backup PE, respectively, when\
    \ the context of a\n   discussion is egress endpoint.\n"
- title: 3.2.  Multi-Segment PW
  contents:
  - "3.2.  Multi-Segment PW\n                  |<--------------- PW1 --------------->|\n\
    \                  |<----- SEG1 ----->|<----- SEG2 ----->|\n             - TPE1\
    \ -------------- SPE1 --------------- TPE2 -\n            /                  \
    \                               \\\n           /                             \
    \                      \\\n        CE1                                       \
    \              CE2\n           \\                                            \
    \       /\n            \\                                                 /\n\
    \             - TPE3 -------------- SPE2 --------------- TPE4 -\n            \
    \      |<----- SEG3 ----->|<----- SEG4 ----->|\n                  |<---------------\
    \ PW2 --------------->|\n                                 Figure 3\n   Figure\
    \ 3 shows a topology that is similar to Figure 1 but in an MS-PW\n   environment.\
    \  PW1 and PW2 are both MS-PWs.  PW1 is established\n   between TPE1 and TPE2\
    \ and switched between segments SEG1 and SEG2 at\n   SPE1.  PW2 is established\
    \ between TPE3 and TPE4 and switched between\n   segments SEG3 and SEG4 at SPE2.\
    \  CE1 is multihomed to TPE1 and TPE3.\n   CE2 is multihomed to TPE2 and TPE4.\
    \  For clarity, the transport\n   tunnels of the PW segments are not shown in\
    \ this figure.\n   In this document, the following primary and backup roles are\
    \ assigned\n   for the traffic going from CE1 to CE2:\n      Primary ingress AC:\
    \ CE1-TPE1\n      Primary ingress T-PE: TPE1\n      Primary PW: PW1\n      Primary\
    \ S-PE: SPE1\n      Primary egress T-PE: TPE2\n      Primary egress AC: TPE2-CE2\n\
    \      Backup ingress AC: CE1-TPE3\n      Backup ingress T-PE: TPE3\n      Backup\
    \ PW: PW2\n      Backup S-PE: SPE2\n      Backup egress T-PE: TPE4\n      Backup\
    \ egress AC: TPE4-CE2\n   In this case, an egress AC failure refers to the failure\
    \ of the AC\n   TPE2-CE2.  An egress node failure refers to the failure of TPE2.\
    \  An\n   S-PE failure refers to the failure of SPE1.\n   For consistency with\
    \ the SS-PW scenario, primary T-PEs and primary\n   S-PEs may simply be referred\
    \ to as primary PEs in this document,\n   where specifics are not required.  Similarly,\
    \ backup T-PEs and backup\n   S-PEs may be referred to as backup PEs.\n"
- title: 4.  Theory of Operation
  contents:
  - "4.  Theory of Operation\n   The fast protection mechanism in this document provides\
    \ three types\n   of protection for PWs, corresponding to the three types of failures\n\
    \   described in Section 1:\n   a.  Egress AC protection\n   b.  Egress (T-)PE\
    \ node protection\n   c.  S-PE node protection\n"
- title: 4.1.  Applicability
  contents:
  - "4.1.  Applicability\n   The mechanism is applicable to LDP-signaled PWs in an\
    \ environment\n   where an egress CE is multihomed to a primary PE and a backup\
    \ PE and\n   there exists a backup PW, as described in Section 3.  The procedure\n\
    \   for S-PE node protection is applicable when there exists a backup\n   S-PE\
    \ on the backup PW.\n   The mechanism assumes IP/MPLS transport tunnels and is\
    \ applicable to\n   tunnels with single path and equal-cost multipaths (ECMPs).\
    \  As an\n   example of ECMPs, imagine a tunnel carrying one or multiple PWs and\n\
    \   traversing a router with ECMPs to a primary PE.  The ECMPs consist of\n  \
    \ at least one direct link to the PE and some multi-hop paths to the\n   PE. \
    \ Due to the direct link, the router is considered as a\n   penultimate hop of\
    \ the tunnel and can perform local detection and\n   repair for an egress node\
    \ failure.  The router normally uses a\n   hashing algorithm to distribute PW\
    \ packets over the ECMPs, on a\n   per-PW or per-flow basis.  Upon a failure of\
    \ the direct link, i.e.,\n   transit link failure, the router removes the link\
    \ from the hashing\n   algorithm, which automatically redistributes the traffic\
    \ of the link\n   to the other paths of the ECMPs, achieving local repair.  This\n\
    \   scenario is not the focus of this document.  Upon a failure of the\n   PE,\
    \ i.e., egress node failure, the router SHOULD perform local repair\n   by rerouting\
    \ the entire traffic of the ECMPs, as the failure will\n   affect every path.\
    \  If the router does not have a fast or reliable\n   mechanism to detect the\
    \ egress node failure, it is RECOMMENDED that\n   the router SHOULD treat the\
    \ failure of the direct link as an egress\n   node failure.\n   The mechanism\
    \ is applicable to both best-effort and traffic\n   engineering (TE) transport\
    \ tunnels.  For TE transport tunnels that\n   require bandwidth protection, TE\
    \ bypass tunnels with reserved\n   bandwidth MAY be used to avoid congestion for\
    \ rerouted traffic.\n   It is also RECOMMENDED that the mechanism SHOULD be used\
    \ in\n   conjunction with global repair and control-plane convergence, in such\n\
    \   a manner that the mechanism temporarily repairs a failed path by\n   using\
    \ a bypass tunnel, and global repair and control-plane\n   convergence eventually\
    \ move traffic to a fully functional alternative\n   path.\n"
- title: 4.2.  Local Repair
  contents:
  - "4.2.  Local Repair\n   The fast protection ability of the mechanism comes from\
    \ local repair\n   performed by routers upstream adjacent to failures.  Each of\
    \ these\n   routers is referred to as a PLR.  A PLR MUST be able to detect a\n\
    \   failure by using a rapid mechanism, such as physical-layer failure\n   detection,\
    \ Bidirectional Forwarding Detection (BFD) [RFC5880],\n   Seamless BFD (S-BFD)\
    \ [RFC7880], and others.  In anticipation of the\n   failure, the PLR MUST also\
    \ pre-establish a bypass tunnel to a\n   \"protector\" and pre-install a bypass\
    \ route for the bypass tunnel in\n   the data plane.  The protector is either\
    \ a backup PE or a router that\n   will forward traffic to a backup PE.  The bypass\
    \ tunnel MUST have the\n   property that it will not be affected by the topology\
    \ changes due to\n   the failure.  Specifically, it MUST NOT traverse the primary\
    \ PE or\n   the penultimate link of the protected transport tunnel or share any\n\
    \   shared risk link groups (SRLGs) with the penultimate link.  Upon\n   detecting\
    \ the failure, the PLR invokes the bypass route in the data\n   plane and reroutes\
    \ PW traffic to the protector through the bypass\n   tunnel.  The protector in\
    \ turn sends the traffic to the target CE.\n   This procedure is referred to as\
    \ local repair.\n   Different routers may serve as PLR and protector in different\n\
    \   scenarios.\n   o  In egress AC protection, the PLR is the primary PE, and\
    \ the\n      protector is the backup PE (Figure 4).\n                  |<--------------\
    \ PW1 --------------->|\n              - PE1 -------------- P1 ----------------\
    \ PE2 -\n             /                                         PLR  \\\n    \
    \        /                                           |    \\\n         CE1   \
    \                                   bypass|     CE2\n            \\          \
    \                                 |    /\n             \\                    \
    \                      |   /\n              - PE3 -------------- P2 ----------------\
    \ PE4 -\n                                                    protector\n     \
    \             |<-------------- PW2 --------------->|\n                       \
    \          Figure 4\n   o  In egress PE node protection, the PLR is the penultimate\
    \ hop\n      router of the transport tunnel of the primary PW, and the\n     \
    \ protector is the backup PE (Figure 5).\n                  |<-------------- PW1\
    \ --------------->|\n              - PE1 -------------- P1 ------- P3 ----- PE2\
    \ -\n             /                               PLR \\          \\\n       \
    \     /                                     \\          \\\n         CE1     \
    \                            bypass\\          CE2\n            \\           \
    \                            \\        /\n             \\                    \
    \                   \\      /\n              - PE3 -------------- P2 ----------------\
    \ PE4 -\n                                                    protector\n     \
    \             |<-------------- PW2 --------------->|\n                       \
    \          Figure 5\n   o  In S-PE node protection, the PLR is the penultimate\
    \ hop router of\n      the transport tunnel of the primary PW segment, and the\
    \ protector\n      is the backup S-PE (Figure 6).\n                  |<---------------\
    \ PW1 --------------->|\n                  |<----- SEG1 ----->|<----- SEG2 ----->|\n\
    \             - TPE1 ----- P1  ----- SPE1 -------------- TPE2 -\n            /\
    \             PLR \\                               \\\n           /          \
    \         \\                               \\\n        CE1               bypass\\\
    \                               CE2\n           \\                     \\    \
    \                         /\n            \\                     \\           \
    \                /\n             - TPE3 --------------- SPE2 -------------- TPE4\
    \ -\n                                 protector\n                  |<----- SEG3\
    \ ----->|<----- SEG4 ----->|\n                  |<--------------- PW2 --------------->|\n\
    \                                 Figure 6\n   In egress AC protection, a PLR\
    \ realizes its role based on\n   configuration of a \"context identifier\", which\
    \ is introduced in this\n   document (Section 4.3).  The PLR establishes a bypass\
    \ tunnel to the\n   protector in the same fashion as a normal PSN tunnel.\n  \
    \ In egress PE and S-PE node protection, a PLR is a transit router on\n   the\
    \ transport tunnel, and it normally does not have knowledge of the\n   PW(s) carried\
    \ by the transport tunnel.  In this document, the PLR\n   simply computes and\
    \ establishes a node-protection bypass tunnel in\n   the same fashion as the normal\
    \ IP/MPLS node protection, except that\n   with the notion of the context identifier,\
    \ the bypass tunnel will be\n   established from the PLR to the protector (Section\
    \ 4.6).  Conversely,\n   when the router is no longer a PLR for egress PE or S-PE\
    \ node\n   protection due to a change in network topology or the transport\n \
    \  tunnel's path, the router should revert to the role of regular\n   transit\
    \ router, including PLR for transit link and node protection.\n   In local repair,\
    \ a PLR simply switches all the traffic received on\n   the transport tunnel to\
    \ the bypass tunnel.  This requires that the\n   protector given by the bypass\
    \ tunnel MUST be intended for all the PWs\n   carried by the transport tunnel.\
    \  This is achieved by the ingress PE\n   using a context identifier to associate\
    \ a PW with the specific pair\n   of {primary PE, protector} and map the PW to\
    \ a transport tunnel\n   destined for the same {primary PE, protector}.  The ingress\
    \ PE MAY\n   map multiple PWs to the transport tunnel, if they share the {primary\n\
    \   PE, protector} in common.\n   In local repair, the PLR keeps the PW label\
    \ intact in packets.  This\n   obviates the need for the PLR to maintain bypass\
    \ routes on a per-PW\n   basis and allows bypass tunnel sharing between PWs. \
    \ On the other\n   hand, this imposes a requirement on the protector that it MUST\
    \ be\n   able to forward the packets based on a PW label that is assigned by\n\
    \   the primary PE and ensure that the traffic MUST reach the target CE\n   via\
    \ a backup path.  From the protector's perspective, this PW label\n   is an upstream\
    \ assigned label [RFC5331].  To achieve this, the\n   protector MUST learn the\
    \ PW label from the primary PE prior to the\n   failure and install a proper forwarding\
    \ state for the PW label in a\n   dedicated label space associated with the primary\
    \ PE.  During local\n   repair, the protector MUST perform PW label lookup in\
    \ this label\n   space.\n   The previous examples have shown the scenarios where\
    \ the protectors\n   are backup (T-/S-)PEs.  It is also possible that a protector\
    \ is a\n   dedicated router to serve such a role, separate from the backup\n \
    \  (T-/S-)PE.  During local repair, the PLR still reroutes traffic to\n   the\
    \ protector through a bypass tunnel.  The protector then forwards\n   the traffic\
    \ to the backup (T-/S-)PE, which further forwards the\n   traffic to the target\
    \ CE via a backup AC or a backup PW segment.\n   More detail is included in Section\
    \ 4.4.\n"
- title: 4.3.  Context Identifier
  contents:
  - "4.3.  Context Identifier\n   A protector may protect multiple primary PEs.  The\
    \ protector MUST\n   maintain a separate label space for each primary PE.  Likewise,\
    \ the\n   PWs terminated on a primary PE may be protected by multiple\n   protectors,\
    \ each for a subset of the PWs.  In any case, a given PW\n   MUST be associated\
    \ with one and only one pair of {primary PE,\n   protector}.\n   This document\
    \ introduces the notion of a context identifier to\n   facilitate protection establishment.\
    \  A context identifier is an\n   IPv4/v6 address assigned to each ordered pair\
    \ of {primary PE,\n   protector}.  The address MUST be globally unique or unique\
    \ in the\n   address space of the network where the primary PE and the protector\n\
    \   reside.\n"
- title: 4.3.1.  Semantics
  contents:
  - "4.3.1.  Semantics\n   The semantics of a context identifier is twofold:\n   o\
    \  A context identifier identifies a primary PE and an associated\n      protector.\
    \  It represents the primary PE as the PW destination on\n      a per-protector\
    \ basis.  A given primary PE may be protected by\n      multiple protectors, each\
    \ for a subset of the PWs terminated on\n      the primary PE.  A distinct context\
    \ identifier MUST be assigned to\n      each {primary PE, protector} pair.\n \
    \     The ingress PE of a PW learns the context identifier of the PW's\n     \
    \ {primary PE, protector} from the primary PE via the Interface_ID\n      TLV\
    \ [RFC3471] [RFC3472] in the LDP Label Mapping message of the\n      PW.  The\
    \ ingress PE then sets up or resolves a transport tunnel\n      with the context\
    \ identifier, rather than a private IP address of\n      the primary PE, as the\
    \ destination.  This destination not only\n      makes the transport tunnel reach\
    \ the primary PE but also conveys\n      the identity of the protector to the\
    \ PLR, which MUST use the\n      context identifier as the destination for the\
    \ bypass tunnel to the\n      protector.  The ingress PE MUST map only the PWs\
    \ terminated by the\n      exact primary PE and protected by the exact protector\
    \ to the\n      transport tunnel.\n   o  A context identifier indicates the primary\
    \ PE's label space on the\n      protector.  The protector may protect PWs for\
    \ multiple primary\n      PEs.  For each primary PE, it MUST maintain a separate\
    \ label space\n      to store the PW labels assigned by that primary PE.  It associates\n\
    \      a PW label with a label space via the context identifier of the\n     \
    \ {primary PE, protector}, as below.\n      In addition to the normal LDP PW signaling,\
    \ the primary PE MUST\n      have a targeted LDP session with the protector and\
    \ advertise PW\n      labels to the protector via LDP Label Mapping messages\n\
    \      (Section 6).  The primary PE MUST attach the context identifier to\n  \
    \    each message.  Upon receiving the message, the protector MUST\n      install\
    \ the advertised PW label in the label space identified by\n      the context\
    \ identifier.\n      When a PLR sets up or resolves a bypass tunnel to the protector,\n\
    \      it MUST use the context identifier rather than a private IP\n      address\
    \ of the protector as the destination.  The protector MUST\n      use the bypass\
    \ tunnel, either the MPLS tunnel label or the IP\n      tunnel destination address,\
    \ as the pointer to the corresponding\n      label space.  The protector MUST\
    \ forward PW packets received on\n      the bypass tunnel based on label lookup\
    \ in that label space.\n"
- title: 4.3.2.  FEC
  contents:
  - "4.3.2.  FEC\n   In an MPLS network, a context identifier represents a Forwarding\n\
    \   Equivalence Class (FEC) for transport tunnels and bypass tunnels\n   destined\
    \ for it.  For example, it may be encoded in an LDP Prefix FEC\n   Element or\
    \ in the \"tunnel endpoint address\" of an RSVP Session\n   object.  The FEC is\
    \ associated with a unique forwarding state on PLRs\n   and the protector, which\
    \ cannot be shared with other FECs.  Some MPLS\n   protocols (e.g., LDP) support\
    \ FEC aggregation [RFC3031].  In this\n   case, FEC aggregation MUST NOT be applied\
    \ to a context identifier's\n   FEC, and every router MUST assign a unique label\
    \ to the FEC.\n"
- title: 4.3.3.  IGP Advertisement and Path Computation
  contents:
  - "4.3.3.  IGP Advertisement and Path Computation\n   Using a context identifier\
    \ as the destination for both the transport\n   tunnel and bypass tunnel requires\
    \ coordination between the primary PE\n   and the protector in IGP advertisement\
    \ of the context identifier in\n   the routing domain and TE domain.  The context\
    \ identifier should be\n   advertised in such a way that all the routers on the\
    \ tunnels MUST be\n   able to independently reach the following common view of\
    \ paths:\n   o  The transport tunnel MUST have the primary PE as the path\n  \
    \    endpoint.\n   o  The bypass tunnel MUST have the protector as the path endpoint.\n\
    \      In egress PE and S-PE node protection, the path MUST avoid the\n      primary\
    \ PE.\n   There are generally two categories of approaches to achieve the\n  \
    \ above:\n   o  The first category does not require an ingress PE or a PLR to\
    \ have\n      knowledge of the PW egress endpoint protection schema.  It does\n\
    \      not require any IGP extension for context identifier\n      advertisement.\
    \  A context identifier is advertised by the primary\n      PE and the protector\
    \ as an address reachable via both routers.\n      The ingress PE and the PLR\
    \ can compute paths by using a normal\n      method, such as Dijkstra, constrained\
    \ shortest path first (CSPF),\n      Loop-Free Alternate (LFA) [RFC5286], and\
    \ Maximally Redundant Tree\n      (MRT) [RFC7812].  One example is to advertise\
    \ a context identifier\n      as a virtual proxy node connected to the primary\
    \ PE and the\n      protector, with the link between the proxy node and the primary\
    \ PE\n      having a more preferable IGP and TE metric than the link between\n\
    \      the proxy node and the protector.  The transport tunnel will\n      follow\
    \ the shortest path or a TE path to the primary PE and be\n      terminated by\
    \ the primary PE.  The PLR will no longer view itself\n      as a penultimate\
    \ hop of the transport tunnel, but rather two hops\n      away from the proxy\
    \ node, via the primary PE.  Hence, a node-\n      protection bypass tunnel will\
    \ be available via the protector to\n      the proxy node, but it will actually\
    \ be terminated by the\n      protector.\n   o  The second category requires a\
    \ PLR to have knowledge of the PW\n      egress endpoint protection schema.  The\
    \ primary PE advertises the\n      context identifier as a regular IP address,\
    \ while the protector\n      advertises it by using an explicit \"context identifier\
    \ object\",\n      which MUST be understood by the PLR.  The context identifier\n\
    \      object requires an IGP extension.  In both the routing domain and\n   \
    \   the TE domain, the context identifier is only reachable via the\n      primary\
    \ PE.  This ensures that the transport tunnel is terminated\n      by the primary\
    \ PE.  The PLR views itself as the penultimate hop of\n      the transport tunnel,\
    \ and based on the IGP context identifier\n      object, it establishes or resolves\
    \ a bypass tunnel to the\n      advertiser (i.e., the protector), while avoiding\
    \ the primary PE.\n   The mechanism in this document intends to be flexible on\
    \ the approach\n   used by a network, as long as it satisfies the above requirements\
    \ for\n   the transport tunnel path and bypass tunnel path.  In theory, the\n\
    \   network can use one approach for context ID X and another approach\n   for\
    \ context ID Y.  For a given context ID, all relevant routers,\n   including primary\
    \ PE, protector, and PLR, must support and agree on\n   the chosen approach. \
    \ The coordination between the routers can be\n   achieved by configuration.\n"
- title: 4.4.  Protection Models
  contents:
  - "4.4.  Protection Models\n   There are two protection models based on the location\
    \ of a protector:\n   the co-located protector model and the centralized protector\
    \ model.\n   A network MAY use either model or both.\n"
- title: 4.4.1.  Co-located Protector
  contents:
  - "4.4.1.  Co-located Protector\n   In this model, the protector is a backup PE\
    \ that is directly\n   connected to the target CE via a backup AC, or it is a\
    \ backup S-PE on\n   a backup PW.  That is, the protector is co-located with the\
    \ backup\n   (S-)PE.  Examples of this model are shown in Figures 4, 5, and 6\
    \ in\n   Section 4.2.\n   In egress AC protection and egress PE node protection,\
    \ when a\n   protector receives traffic from the PLR, it forwards the traffic\
    \ to\n   the CE via the backup AC.  This is shown in Figure 7, where PE2 is\n\
    \   the PLR for egress AC failure, P3 is the PLR for PE2 failure, and PE4\n  \
    \ (backup PE) is the protector.\n                 |<-------------- PW1 --------------->|\n\
    \             - PE1 -------------- P1 ------- P3 ----- PE2 ----\n            /\
    \                               PLR \\     PLR     \\\n           /          \
    \                           \\     |       \\\n        CE1                   \
    \              bypass\\    |bypass  CE2\n           \\                       \
    \                \\   |       /\n            \\                              \
    \         \\  |      /\n             - PE3 -------------- P2 ----------------\
    \ PE4 ----\n                                                   protector\n   \
    \              |<-------------- PW2 --------------->|\n                      \
    \           Figure 7\n   In S-PE node protection, when a protector receives traffic\
    \ from the\n   PLR, it forwards the traffic over the next segment of the backup\
    \ PW.\n   The T-PE of the backup PW in turn forwards the traffic to the CE via\n\
    \   a backup AC.  This is shown in Figure 8, where P1 is the PLR for SPE1\n  \
    \ failure, and SPE2 (backup S-PE) is the protector for SPE1.  SPE2\n   receives\
    \ traffic from P1, swaps SEG1's label to SEG4's label, and\n   forwards the traffic\
    \ over a transport tunnel to TPE4.\n                  |<--------------- PW1 --------------->|\n\
    \                  |<----- SEG1 ----->|<----- SEG2 ----->|\n             - TPE1\
    \ ----- P1  ----- SPE1 -------------- TPE2 -\n            /             PLR \\\
    \                               \\\n           /                   \\        \
    \                       \\\n        CE1               bypass\\               \
    \                CE2\n           \\                     \\                   \
    \          /\n            \\                     \\                          \
    \ /\n             - TPE3 --------------- SPE2 -------------- TPE4 -\n        \
    \                         protector\n                  |<----- SEG3 ----->|<-----\
    \ SEG4 ----->|\n                  |<--------------- PW2 --------------->|\n  \
    \                               Figure 8\n   In the co-located protector model,\
    \ the number of context identifiers\n   needed by a network is the number of distinct\
    \ {primary PE, backup PE}\n   pairs.  From the perspective of scalability, the\
    \ model is suitable\n   for networks where the number of primary PEs and the average\
    \ number\n   of backup PEs per primary PE are both relatively low.\n"
- title: 4.4.2.  Centralized Protector
  contents:
  - "4.4.2.  Centralized Protector\n   In this model, the protector is a dedicated\
    \ P router or PE router\n   that serves the role.  In egress AC protection and\
    \ egress PE node\n   protection, the protector may or may not be a backup PE directly\n\
    \   connected to the target CE.  In S-PE node protection, the protector\n   may\
    \ or may not be a backup S-PE on the backup PW.\n   In egress AC protection and\
    \ egress PE node protection, if the\n   protector is not directly connected to\
    \ the CE, it forwards the\n   traffic to a backup PE, which in turn forwards the\
    \ traffic to the CE\n   via a backup AC.  This is shown in Figure 9, where the\
    \ protector\n   receives traffic from P3 (PLR for egress PE failure) or PE2 (PLR\
    \ for\n   egress AC failure), swaps PW1's label to PW2's label, and forwards\n\
    \   the traffic via a transport tunnel to PE4 (backup PE).  The protector\n  \
    \ may be protecting other PWs and other primary PEs as well; for\n   clarity,\
    \ this is not shown in the figure.\n                  |<------------- PW1 --------------->|\n\
    \              - PE1 ------------- P1 ------- P3 ----- PE2 --\n             /\
    \                              PLR \\     PLR   \\\n            /            \
    \                        \\     /     \\\n           /                       \
    \         bypass\\   /bypass \\\n          /                                 \
    \       \\ /         \\\n       CE1                                      protector\
    \       CE2\n          \\                                         \\         \
    \ /\n           \\                                transport\\        /\n     \
    \       \\                                  tunnel \\      /\n             \\\
    \                                         \\    /\n              - PE3 -------------\
    \ P2 -----------------PE4 --\n                  |<------------- PW2 --------------->|\n\
    \                                 Figure 9\n   In S-PE node protection, if the\
    \ protector is not a backup S-PE, it\n   forwards the traffic to the backup S-PE,\
    \ which in turn forwards the\n   traffic over the next segment of the backup PW.\
    \  Finally, the T-PE of\n   the backup PW forwards the traffic to the CE via the\
    \ backup AC.  This\n   is shown in Figure 10, where the protector receives traffic\
    \ from P1\n   (PLR), swaps SEG1's label to SEG3's label, and forwards the traffic\n\
    \   via a transport tunnel to SPE2 (backup S-PE).  SPE2 in turn performs\n   MS-PW\
    \ switching from SEG3's label to SEG4's label and forwards the\n   traffic over\
    \ a transport tunnel to TPE4 (backup T-PE).  The protector\n   may be protecting\
    \ other PW segments and other primary S-PEs as well;\n   for clarity, this is\
    \ not shown in the figure.\n                  |<--------------- PW1 --------------->|\n\
    \                  |<----- SEG1 ----->|<----- SEG2 ----->|\n             - TPE1\
    \ ----- P1  ----- SPE1 -------------- TPE2 -\n            /             PLR \\\
    \                               \\\n           /                   \\        \
    \                       \\\n          /               bypass\\               \
    \                \\\n         /                       \\                     \
    \          \\\n      CE1                     protector                       \
    \    CE2\n         \\                        \\                              /\n\
    \          \\               transport\\                            /\n       \
    \    \\                 tunnel \\                          /\n            \\ \
    \                       \\                        /\n             - TPE3 ---------------\
    \ SPE2 -------------- TPE4 -\n                  |<----- SEG3 ----->|<----- SEG4\
    \ ----->|\n                  |<--------------- PW2 --------------->|\n       \
    \                          Figure 10\n   The centralized protector model allows\
    \ multiple primary PEs to share\n   one protector.  Each primary PE may need only\
    \ one protector.\n   Therefore, the number of context identifiers needed by a\
    \ network may\n   be bound to the number of primary PEs.\n"
- title: 4.5.  Transport Tunnel
  contents:
  - "4.5.  Transport Tunnel\n   A PW is associated with a pair of {primary PE, protector},\
    \ which is\n   represented by a unique context identifier.  The ingress PE of\
    \ the PW\n   sets up or resolves a transport tunnel by using the context\n   identifier\
    \ rather than a private IP address of the primary PE as the\n   destination. \
    \ This not only ensures that the PW is transported to the\n   primary PE but also\
    \ facilitates bypass tunnel establishment at PLR,\n   because the context identifier\
    \ contains the identity of the protector\n   as well.  This is also the case for\
    \ a multi-segment PW, where the\n   ingress PE and egress PE are T-/S-PEs.\n \
    \  An ingress PE learns the association between a PW and a context\n   identifier\
    \ from the primary PE, which MUST advertise the context\n   identifier as a \"\
    third-party next hop\" via the IPv4/v6 Interface_ID\n   TLV [RFC3471] [RFC3472]\
    \ in the LDP Label Mapping message of the PW.\n   In an ECMP scenario, a transport\
    \ tunnel may have multiple penultimate\n   hop routers.  Each of them SHOULD act\
    \ as a PLR independently.  Also\n   in an ECMP scenario, a penultimate hop router\
    \ may have ECMPs to the\n   primary PE.  At least one path of the ECMPs must be\
    \ a direct link to\n   the primary PE, qualifying the router as a penultimate\
    \ hop.  The\n   other paths of the ECMPs may be direct links or indirect paths\
    \ to the\n   primary PE.  In egress PE node protection and S-PE node protection,\n\
    \   when a node failure is detected, or a link failure is detected on a\n   direct\
    \ link and treated as a node failure, the penultimate hop router\n   SHOULD act\
    \ as a PLR and reroute the entire traffic of the ECMPs to\n   the protector.\n"
- title: 4.6.  Bypass Tunnel
  contents:
  - "4.6.  Bypass Tunnel\n   A PLR may protect multiple PWs associated with one or\
    \ multiple pairs\n   of {primary PE, protector}.  The PLR MUST establish a bypass\
    \ tunnel\n   to each protector for each context identifier associated with that\n\
    \   protector.  The destination of the bypass tunnel MUST be the context\n   identifier\
    \ (Section 4.3.1).  Since the PLR is a transit router of the\n   transport tunnel,\
    \ it SHOULD derive the context identifier from the\n   destination of the transport\
    \ tunnel.\n   For example, in Figures 7 and 9, a bypass tunnel is established\
    \ from\n   PE2 (PLR for egress AC failure) to the protector, and another bypass\n\
    \   tunnel is established from P3 (PLR for egress node failure) to the\n   protector.\
    \  In Figures 8 and 10, a bypass tunnel is established from\n   P1 (PLR for S-PE\
    \ failure) to the protector.\n   In local repair, a PLR reroutes traffic to the\
    \ protector through a\n   bypass tunnel, with the PW label intact in the packets.\
    \  This\n   normally involves pushing a label to the label stack, if the bypass\n\
    \   tunnel is an MPLS tunnel, or pushing an IP header to the packets, if\n   the\
    \ bypass tunnel is an IP tunnel.  Upon receipt of the packets, the\n   protector\
    \ forwards them based on the PW label.  Specifically, the\n   protector uses the\
    \ bypass tunnel as a context to determine the\n   primary PE's label space.  If\
    \ the bypass tunnel is an MPLS tunnel,\n   the protector should have assigned\
    \ a non-reserved label to the bypass\n   tunnel; hence, this label can serve as\
    \ the context.  This label is\n   also called a \"context label\", as it is actually\
    \ bound to the context\n   identifier.  If the bypass tunnel is an IP tunnel,\
    \ the context\n   identifier should be the destination address of the IP header.\n\
    \   To be useful for local repair, a bypass tunnel MUST have the property\n  \
    \ that it is not affected by any topology changes caused by the\n   failure. \
    \ It MUST NOT traverse the primary PE or the penultimate link\n   of the transport\
    \ tunnel, or share any SRLG with the penultimate link.\n   A bypass tunnel may\
    \ be a TE tunnel with reserved bandwidth to avoid\n   traffic congestion for rerouted\
    \ traffic.  A bypass tunnel should\n   remain effective during local repair, until\
    \ the traffic is moved to\n   an alternative path, i.e., either the same PW over\
    \ a fully functional\n   transport tunnel or another fully functional PW.\n  \
    \ There is little or no benefit to protect a bypass tunnel.  Therefore,\n   a\
    \ bypass tunnel SHOULD NOT be protected against a transit link\n   failure, transit\
    \ node failure, or egress node failure.\n"
- title: 4.7.  Examples of Forwarding State
  contents:
  - "4.7.  Examples of Forwarding State\n   This section provides some detailed examples\
    \ of forwarding state on\n   the PLR, protector, and other relevant routers.\n\
    \   A protector learns PW labels from all the primary PEs that it\n   protects\
    \ (Section 6.2) and maintains the PW labels in separate label\n   spaces on a\
    \ per-primary-PE basis.  In the control plane, each label\n   space is identified\
    \ by the context identifier of the corresponding\n   {primary PE, protector}.\
    \  In the forwarding plane, the label space is\n   indicated by the bypass tunnel(s)\
    \ destined for the context\n   identifier.\n"
- title: 4.7.1.  Co-located Protector Model
  contents:
  - "4.7.1.  Co-located Protector Model\n   In Figure 11, PE4 is a co-located protector\
    \ that protects PW1 against\n   egress AC failure and egress node failure.  It\
    \ maintains a label\n   space for PE2, which is identified by the context identifier\
    \ of {PE2,\n   PE4}.  It learns PW1's label from PE2 and installs a forwarding\
    \ entry\n   for the label in that label space.  The next hop of the forwarding\n\
    \   entry indicates a label pop with an outgoing interface pointing to\n   the\
    \ backup AC PE4-CE2.\n             |<-------------- PW1 --------------->|\n  \
    \       - PE1 -------------- P1 ------- P3 ----- PE2 ------\n        /       \
    \                        PLR \\     PLR       \\\n       /                   \
    \                  \\     |         \\\n      /                              \
    \         \\    |          \\\n   CE1                                 bypass P4\
    \   P5 bypass   CE2\n      \\                                        \\   |  \
    \        /\n       \\                                        \\  |         /\n\
    \        \\                                        \\ |        /\n         - PE3\
    \ -------------- P2 ---------------- PE4 ------\n                            \
    \                   protector\n             |<-------------- PW2 --------------->|\n\
    \            PW1's label assigned by PE2: 100\n            PW2's label assigned\
    \ by PE4: 200\n            On P3: </t>\n                Incoming label of transport\
    \ tunnel to PE2: 1000\n                Outgoing label of transport tunnel to PE2:\
    \ implicit null\n                Outgoing label of bypass tunnel to PE4: 2000\n\
    \            On PE2:\n                Outgoing label of bypass tunnel to PE4:\
    \ 3000\n            On PE4:\n                Context label (incoming label of\
    \ bypass tunnels): 999\n            Forwarding state on P3:\n            label\
    \ 1000 -- primary next hop: pop, to PE2\n                          backup next\
    \ hop:  swap 2000, to P4\n            Forwarding state on PE2:\n            label\
    \ 100 -- primary next hop: pop, to CE2\n                         backup next hop:\
    \  push 3000, to P5\n            Forwarding state on P4:\n            label 2000\
    \ -- next hop: swap 999, to PE4\n            Forwarding state on P5:\n       \
    \     label 3000 -- next hop: swap 999, to PE4\n            Forwarding state on\
    \ PE4:\n            label 200 -- next hop: pop, to CE2\n            label 999\
    \ -- next hop: label table of PE2's label space\n            Label table of PE2's\
    \ label space on PE4:\n            label 100 -- next hop: pop, to CE2\n      \
    \                           Figure 11\n   In Figure 12, SPE2 is a co-located protector\
    \ that protects PW1\n   against S-PE failure.  It maintains a label space for\
    \ SPE1, which is\n   identified by the context identifier of {SPE1, SPE2}.  It\
    \ learns\n   SEG1's label from SPE1 and installs a forwarding entry in the label\n\
    \   space.  The next hop of the forwarding entry indicates a label swap\n   to\
    \ SEG4's label and a label push with the label of a transport tunnel\n   to TPE4.\n\
    \             |<--------------- PW1 --------------->|\n             |<----- SEG1\
    \ ----->|<----- SEG2 ----->|\n        - TPE1 ----- P1  ----- SPE1 --- P3 -------\
    \ TPE2 -\n       /             PLR \\                               \\\n     \
    \ /                   \\                               \\\n   CE1            \
    \  bypass P2                              CE2\n      \\                     \\\
    \                             /\n       \\                     \\            \
    \               /\n        - TPE3 --------------- SPE2 --- P4 ------- TPE4 -\n\
    \                            protector\n             |<----- SEG3 ----->|<-----\
    \ SEG4 ----->|\n             |<--------------- PW2 --------------->|\n       \
    \     SEG1's label assigned by SPE1: 100\n            SEG2's label assigned by\
    \ TPE2: 200\n            SEG3's label assigned by SPE2: 300\n            SEG4's\
    \ label assigned by TPE4: 400\n            On P1:\n               Incoming label\
    \ of transport tunnel to SPE1: 1000\n               Outgoing label of transport\
    \ tunnel to SPE1: implicit null\n               Outgoing label of bypass tunnel\
    \ to SPE2: 2000\n            On SPE1:\n               Outgoing label of transport\
    \ tunnel to TPE2: 3000\n            On SPE2:\n               Outgoing label of\
    \ transport tunnel to TPE4: 4000\n               Context label (incoming label\
    \ of bypass tunnel): 999\n            Forwarding state on P1:\n            label\
    \ 1000 -- primary next hop: pop, to SPE1\n                          backup next\
    \ hop:  swap 2000, to P2\n            Forwarding state on SPE1:\n            label\
    \ 100 -- next hop: swap 200, push 3000, to P3\n            Forwarding state on\
    \ P2:\n            label 2000 -- next hop: swap 999, to SPE2\n            Forwarding\
    \ state on SPE2:\n            label 300 -- next hop: swap 400, push 4000, to P4\n\
    \            label 999 -- next hop: label table of SPE1's label space\n      \
    \      Label table of SPE1's label space on SPE2:\n            label 100 -- next\
    \ hop: swap 400, push 4000, to P4\n                                 Figure 12\n"
- title: 4.7.2.  Centralized Protector Model
  contents:
  - "4.7.2.  Centralized Protector Model\n   In the centralized protector model, for\
    \ each primary PW of which the\n   protector is not a backup (S-)PE, the protector\
    \ MUST also learn the\n   label of the backup PW from the backup (S-)PE (Section\
    \ 6.3).  This is\n   the backup (S-)PE that the protector will forward traffic\
    \ to.  The\n   protector MUST install a forwarding entry with a label swap from\
    \ the\n   primary PW's label to the backup PW's label and a label push with the\n\
    \   label of a transport tunnel to the backup (S-)PE.\n   In Figure 13, the protector\
    \ is a centralized protector that protects\n   PW1 against egress AC failure and\
    \ egress node failure.  It maintains\n   a label space for PE2, which is identified\
    \ by the context identifier\n   of {PE2, protector}.  It learns PW1's label from\
    \ PE2 and PW2's label\n   from PE4.  It installs a forwarding entry for PW1's\
    \ label in the\n   label space.  The next hop of the forwarding entry indicates\
    \ a label\n   swap to PW2's label and a label push with the label of a transport\n\
    \   tunnel to PE4.\n               |<-------------- PW1 --------------->|\n  \
    \         - PE1 ------------- P1 ------- P3 ------ PE2 ----\n          /     \
    \                         PLR \\      PLR     \\\n         /                 \
    \                   \\      /       \\\n        /                            \
    \  bypass P5    P6 bypass \\\n       /                                       \
    \ \\  /           \\\n      /                                          \\/   \
    \          \\\n   CE1                                      protector         \
    \   CE2\n      \\                                           \\             /\n\
    \       \\                                transport  \\           /\n        \\\
    \                                  tunnel  P7         /\n         \\         \
    \                                 \\        /\n          \\                  \
    \                        \\      /\n           - PE3 ------------- P2 -----------------\
    \ PE4 ----\n               |<-------------- PW2 --------------->|\n          \
    \  PW1's label assigned by PE2: 100\n            PW2's label assigned by PE4:\
    \ 200\n            On P3:\n                Incoming label of transport tunnel\
    \ to PE2: 1000\n                Outgoing label of transport tunnel to PE2: implicit\
    \ null\n                Outgoing label of bypass tunnel to protector: 2000\n \
    \           On PE2:\n                Outgoing label of bypass tunnel to protector:\
    \ 3000\n            On protector:\n                Context label (incoming label\
    \ of bypass tunnels): 999\n                Outgoing label of transport tunnel\
    \ to PE4: 4000\n            Forwarding state on P3:\n            label 1000 --\
    \ primary next hop: pop, to PE2\n                          backup next hop:  swap\
    \ 2000, to P5\n            Forwarding state on PE2:\n            label 100 --\
    \ primary next hop: pop, to CE2\n                         backup next hop:  push\
    \ 3000, to P6\n            Forwarding state on P5:\n            label 2000 --\
    \ next hop: swap 999, to protector\n            Forwarding state on P6:\n    \
    \        label 3000 -- next hop: swap 999, to protector\n            Forwarding\
    \ state on P7:\n            label 4000 -- next hop: pop, to PE4\n            Forwarding\
    \ state on PE4:\n            label 200 -- next hop: pop, to CE2\n            Forwarding\
    \ state on protector:\n            label 999 -- next hop: label table of PE2's\
    \ label space\n            Label table of PE2's label space on protector:\n  \
    \          label 100 -- next hop: swap 200, push 4000, to P7\n               \
    \                  Figure 13\n   In Figure 14, the protector is a centralized\
    \ protector that protects\n   the PW segment SEG1 of PW1 against the node failure\
    \ of SPE1.  It\n   maintains a label space for SPE1, which is identified by the\
    \ context\n   identifier of {SPE1, protector}.  It learns SEG1's label from SPE1\n\
    \   and SEG3's label from SPE2.  It installs a forwarding entry for\n   SEG1's\
    \ label in the label space.  The next hop of the forwarding\n   entry indicates\
    \ a label swap to SEG3's label and a label push with\n   the label of a transport\
    \ tunnel to TPE4.\n                |<--------------- PW1 --------------->|\n \
    \               |<----- SEG1 ----->|<----- SEG2 ----->|\n           - TPE1 -----\
    \ P1 ----- SPE1 --- P2 -------- TPE2 -\n          /            PLR \\        \
    \                        \\\n         /                  \\                  \
    \              \\\n        /            bypass P4                            \
    \    \\\n       /                     \\                                 \\\n\
    \      /                       \\                                 \\\n   CE1 \
    \                    protector                             CE2\n      \\     \
    \                   \\                                /\n       \\           \
    \             \\                              /\n        \\             transport\
    \ P5                            /\n         \\                tunnel  \\     \
    \                     /\n          \\                        \\              \
    \          /\n           - TPE3 -------------- SPE2 --- P3 -------- TPE4 -\n \
    \               |<----- SEG3 ----->|<----- SEG4 ----->|\n                |<---------------\
    \ PW2 --------------->|\n            SEG1's label assigned by SPE1: 100\n    \
    \        SEG2's label assigned by TPE2: 200\n            SEG3's label assigned\
    \ by SPE2: 300\n            SEG4's label assigned by TPE4: 400\n            On\
    \ P1:\n               Incoming label of transport tunnel to SPE1: 1000\n     \
    \          Outgoing label of transport tunnel to SPE1: implicit null\n       \
    \        Outgoing label of bypass tunnel to protector: 2000\n            On SPE1:\n\
    \               Outgoing label of transport tunnel to TPE2: 3000\n           \
    \ On SPE2:\n               Outgoing label of transport tunnel to TPE4: 4000\n\
    \            On protector:\n               Context label (incoming label of bypass\
    \ tunnel): 999\n               Outgoing label of transport tunnel to SPE2: 5000\n\
    \            Forwarding state on P1:\n            label 1000 -- primary next hop:\
    \ pop, to SPE1\n                          backup next hop:  swap 2000, to P4\n\
    \            Forwarding state on SPE1:\n            label 100 -- next hop: swap\
    \ 200, push 3000, to P2\n            Forwarding state on P4:\n            label\
    \ 2000 -- next hop: swap 999, to protector\n            Forwarding state on P5:\n\
    \            label 5000 -- next hop: pop, to SPE2\n            Forwarding state\
    \ on SPE2:\n            label 300 -- next hop: swap 400, push 4000, to P3\n  \
    \          Forwarding state on protector:\n            label 999 -- next hop:\
    \ label table of SPE1's label space\n            Label table of SPE1's label space\
    \ on protector:\n            label 100 -- next hop: swap 300, push 5000, to P5\n\
    \                                 Figure 14\n"
- title: 5.  Restorative and Revertive Behaviors
  contents:
  - "5.  Restorative and Revertive Behaviors\n   Subsequent to local repair, there\
    \ are three strategies for a network\n   to restore traffic to a fully functional\
    \ alternative path:\n   o  Global repair\n      If the ingress CE is multihomed\
    \ (Figure 1), it MAY switch the\n      traffic to the backup AC, which is bound\
    \ to the backup PW.\n      Alternatively, if the ingress PE hosts a backup PW\
    \ (Figure 2), the\n      ingress PE MAY switch the traffic to the backup PW. \
    \ These\n      procedures are referred to as global repair.  Possible triggers\
    \ of\n      global repair include PW status notification, Virtual Circuit\n  \
    \    Connectivity Verification (VCCV) [RFC5085] [RFC5885], BFD,\n      end-to-end\
    \ OAM between CEs, and others.\n   o  Control-plane convergence\n      In egress\
    \ PE node protection and S-PE node protection, it is\n      possible that the\
    \ failure is limited to the link between the PLR\n      and the primary PE, whereas\
    \ the primary PE is still operational.\n      In this case, the PLR or an upstream\
    \ router on the transport\n      tunnel MAY reroute the tunnel around the link\
    \ via an alternative\n      path to the primary PE.  Thus, the transport tunnel\
    \ can heal and\n      continue to carry the PW to the primary PE.  This procedure\
    \ is\n      driven by control-plane convergence on the new topology.\n   o  Local\
    \ reversion\n      The PLR MAY move traffic back to the primary PW, after the\
    \ failure\n      is resolved.  In egress AC protection, upon detecting that the\n\
    \      primary AC is restored, the PLR MAY start forwarding traffic over\n   \
    \   the AC again.  Likewise, in egress PE node protection and S-PE\n      node\
    \ protection, upon detecting that the primary PE is restored,\n      the PLR MAY\
    \ re-establish the transport tunnel to the primary PE\n      and move the traffic\
    \ from the bypass tunnel back to the transport\n      tunnel.  These procedures\
    \ are referred to as local reversion.\n   It is RECOMMENDED that the fast protection\
    \ mechanism SHOULD be used\n   in conjunction with global repair.  Particularly\
    \ in the case of\n   egress PE and S-PE node failures, if the ingress PE or the\
    \ protector\n   loses communication with the egress PE or S-PE for an extensive\n\
    \   period of time, the LDP session may go down.  Consequently, the\n   ingress\
    \ PE may bring down the primary PW completely, or the protector\n   may remove\
    \ the forwarding entry of the primary PW label.  In either\n   case, the service\
    \ will be disrupted.  In other words, although the\n   mechanism can temporarily\
    \ repair traffic, control-plane state may\n   eventually expire if the failure\
    \ persists.  Therefore, global repair\n   SHOULD take place in a timely manner\
    \ to move traffic to a fully\n   functional alternative path.\n   Control-plane\
    \ convergence may automatically happen as control-plane\n   protocols react to\
    \ the new topology.  However, it is only applicable\n   to the specific link failure\
    \ scenario described above.\n   Local reversion is optional.  In the circumstances\
    \ where the failure\n   is caused by resource flapping, local reversion MAY be\
    \ dampened to\n   limit potential disruption.  Local reversion MAY be disabled\n\
    \   completely by configuration.\n"
- title: 6.  LDP Extensions
  contents:
  - "6.  LDP Extensions\n   As described in previous sections, a targeted LDP session\
    \ MUST be\n   established between each pair of primary PE and protector.  The\n\
    \   primary PE sends a Label Mapping message over this session to\n   advertise\
    \ primary PW labels to the protector.  In the centralized\n   protector model,\
    \ a targeted LDP session MUST also be established\n   between a backup (S-)PE\
    \ and the protector.  The backup PE sends a\n   Label Mapping message over this\
    \ session to advertise backup PW labels\n   to the protector.\n   To support the\
    \ procedures, this document defines a new \"Protection\n   FEC Element\" TLV.\
    \  The Label Mapping messages of both the LDP\n   sessions above MUST carry this\
    \ TLV to identify a primary PW.\n   Specifically, in the centralized protector\
    \ model, the Protection FEC\n   Element TLV advertised by a backup (S-)PE MUST\
    \ match the one\n   advertised by the primary PE, so that the protector can associate\
    \ the\n   primary PW's label with the backup PW's label and perform a label\n\
    \   swap.  The backup (S-)PE builds such a Protection FEC Element TLV\n   based\
    \ on local configuration.\n   This document also defines a new \"Egress Protection\
    \ Capability\" TLV\n   as a new type of Capability Parameter TLV [RFC5561], to\
    \ allow a\n   protector to announce its capability of processing the above\n \
    \  Protection FEC Element TLV and performing context-specific label\n   switching\
    \ for PW labels.\n   The procedures in this section are only applicable if the\
    \ protector\n   advertises the Egress Protection Capability TLV, the primary PE\n\
    \   supports the advertisement of the Protection FEC Element TLV, and in\n   the\
    \ centralized protector model, the backup PE also supports the\n   advertisement\
    \ of the Protection FEC Element TLV.\n"
- title: 6.1.  Egress Protection Capability TLV
  contents:
  - "6.1.  Egress Protection Capability TLV\n   A protector MUST advertise the Egress\
    \ Protection Capability TLV in\n   its Initialization message and Capability message\
    \ over the LDP\n   session with a primary PE.  In the centralized protector model,\
    \ the\n   protector MUST also advertise the TLV over the LDP session with a\n\
    \   backup PE.  The TLV carries one or multiple context identifiers.  To\n   the\
    \ primary PE, the TLV MUST carry the context identifier of the\n   {primary PE,\
    \ protector}.  In the centralized protector model, the TLV\n   MUST carry multiple\
    \ context identifiers to the backup PE, one for\n   each {primary PE, protector}\
    \ where the backup PE serves as a backup\n   for the primary PE.  This TLV MUST\
    \ NOT be advertised by the primary\n   PE or the backup PE to the protector.\n\
    \   The processing of the Egress Protection Capability TLV by a receiving\n  \
    \ router MUST follow the procedures defined in [RFC5561].  In\n   particular,\
    \ the router MUST advertise PW information to the protector\n   by using the Protection\
    \ FEC Element TLV, only after it has received\n   the Egress Protection Capability\
    \ TLV from the protector.  It MUST\n   validate each context identifier included\
    \ in the TLV and advertise\n   the information of only the PWs that are associated\
    \ with the context\n   identifier.  It MUST withdraw previously advertised Protection\
    \ FEC\n   TLVs, when the protector has withdrawn a previously advertised\n   context\
    \ identifier or the entire Egress Protection Capability TLV via\n   a Capability\
    \ message.\n   The encoding of the Egress Protection Capability TLV is defined\n\
    \   below.  It conforms to the format of Capability Parameter TLV\n   specified\
    \ in [RFC5561].\n      0                   1                   2             \
    \      3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |U|F| Egress Protection (0x0974)|              Length           |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |S|\
    \ Reserved    |                                               |\n     +-+-+-+-+-+-+-+-+\
    \                                               |\n     |                    \
    \                                           |\n     ~                Capability\
    \ Data = context identifier(s)        ~\n     |                              \
    \                                 |\n     |                                  \
    \             +-+-+-+-+-+-+-+-+\n     |                                      \
    \         |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n        \
    \                         Figure 15\n   The U-bit MUST be set to 1, so that a\
    \ receiver MUST silently ignore\n   this TLV if unknown to it and continue processing\
    \ the rest of the\n   message.\n   The F-bit MUST be set to 0 since this TLV is\
    \ sent only in\n   Initialization and Capability messages, which are not forwarded.\n\
    \   The TLV code point is 0x0974.\n   The S-bit indicates whether the sender is\
    \ advertising (S=1) or\n   withdrawing (S=0) the capability.\n   The Capability\
    \ Data field is encoded with the context identifiers of\n   the {primary PE, protector}\
    \ pairs for which the advertiser is the\n   protector.\n"
- title: 6.2.  PW Label Distribution from Primary PE to Protector
  contents:
  - "6.2.  PW Label Distribution from Primary PE to Protector\n   A primary PE MUST\
    \ advertise a primary PW's label to a protector by\n   sending a Label Mapping\
    \ message.  The message includes a Protection\n   FEC Element TLV (see Section\
    \ 6.4 for encoding) and an Upstream-\n   Assigned Label TLV [RFC6389] encoded\
    \ with the PW's label.  The\n   combination of the Protection FEC Element TLV\
    \ and the PW label\n   represents the primary PE's forwarding state for the PW.\
    \  The Label\n   Mapping message MUST also carry an IPv4/v6 Interface_ID TLV [RFC3471]\n\
    \   [RFC6389] encoded with the context identifier of the {primary PE,\n   protector}.\n\
    \   The protector that receives this Label Mapping message MUST install a\n  \
    \ forwarding entry for the PW label in the label space identified by\n   the context\
    \ identifier.  The next hop of the forwarding entry MUST\n   ensure that packets\
    \ are sent towards the target CE via a backup AC or\n   a backup (S-)PE, depending\
    \ on the protection scenario.  The protector\n   MUST silently discard a Label\
    \ Mapping message if the included context\n   identifier is unknown to it.\n"
- title: 6.3.  PW Label Distribution from Backup PE to Protector
  contents:
  - "6.3.  PW Label Distribution from Backup PE to Protector\n   In the centralized\
    \ protector model, a backup PE MUST advertise a\n   backup PW's label to the protector\
    \ by sending a Label Mapping\n   message.  The message includes a Protection FEC\
    \ Element TLV and a\n   Generic Label TLV encoded with the backup PW's label.\
    \  This\n   Protection FEC Element MUST be identical to the Protection FEC\n \
    \  Element TLV that the primary PE advertises to the protector\n   (Section 6.2).\
    \  This is achieved through configuration on the backup\n   PE.  The context identifier\
    \ MUST NOT be encoded in an Interface_ID\n   TLV in this message.\n   The protector\
    \ that receives this Label Mapping message MUST associate\n   the backup PW with\
    \ the primary PW, based on the common Protection FEC\n   Element TLV.  It MUST\
    \ distinguish between the Label Mapping message\n   from the primary PE and the\
    \ Label Mapping message from the backup PE\n   based on the respective presence\
    \ and absence of a context identifier\n   in the Interface_ID TLV.  It MUST install\
    \ a forwarding entry for the\n   primary PW's label in the label space identified\
    \ by the context\n   identifier.  The next hop of the forwarding entry MUST indicate\
    \ a\n   label swap to the backup PW's label, followed by a label push or IP\n\
    \   header push for a transport tunnel to the backup PE.\n"
- title: 6.4.  Protection FEC Element TLV
  contents:
  - "6.4.  Protection FEC Element TLV\n   The Protection FEC Element TLV has type\
    \ 0x83.  Its format is defined\n   below:\n      0                   1       \
    \            2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |   Type(0x83)  |    Reserved   | Encoding Type |    Length     |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                                                             |\n     |      \
    \                                                         |\n     ~          \
    \               PW Information                        ~\n     |              \
    \                                                 |\n     |                  \
    \             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |                      \
    \         |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                        \
    \         Figure 16\n   -  Encoding Type\n      Type of encoding format of the\
    \ PW Information field.  The\n      following types are defined, corresponding\
    \ to the PWid FEC Element\n      and Generalized PWid FEC Element defined in [RFC8077].\n\
    \      1 - PWid FEC Element with IPv4 PE addresses (Section 6.4.1).\n      2 -\
    \ Generalized PWid FEC Element with IPv4 PE addresses\n          (Section 6.4.2).\n\
    \      3 - PWid FEC Element with IPv6 PE addresses (Section 6.4.3).\n      4 -\
    \ Generalized PWid FEC Element with IPv6 PE addresses\n          (Section 6.4.4).\n\
    \   -  Length\n      Length of the PW Information field in octets.\n   -  PW Information\n\
    \      Field of variable length that specifies a PW.\n"
- title: 6.4.1.  Encoding Format for PWid with IPv4 PE Addresses
  contents:
  - "6.4.1.  Encoding Format for PWid with IPv4 PE Addresses\n      0            \
    \       1                   2                   3\n      0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |   Type(0x83)  |    Reserved   |  Enc Type(1)  |   Length(20)  |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                   Ingress PE IPv4 Address                   |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                      Egress PE IPv4 Address                   |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                          Group ID                           |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                             PW ID                             |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |C|\
    \           PW Type           |           Reserved            |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                                 Figure 17\n   -  Ingress PE IPv4 Address\n \
    \     IPv4 address of the ingress PE of PW.\n   -  Egress PE IPv4 Address\n  \
    \    IPv4 address of the egress PE of PW.\n   -  Group ID\n      An arbitrary\
    \ 32-bit value that represents a group of PWs and that\n      is used to create\
    \ groups in the PW space.\n   -  PW ID\n      A non-zero 32-bit connection ID\
    \ that, together with the PW Type\n      field, identifies a particular PW.\n\
    \   -  Control word bit (C)\n      A bit that flags the presence of a control\
    \ word on this PW.  If\n      C = 1, control word is present; if C = 0, control\
    \ word is not\n      present.\n   -  PW Type\n      A 15-bit quantity that represents\
    \ the type of PW.\n"
- title: 6.4.2.  Encoding Format for Generalized PWid with IPv4 PE Addresses
  contents:
  - "6.4.2.  Encoding Format for Generalized PWid with IPv4 PE Addresses\n      0\
    \                   1                   2                   3\n      0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |   Type(0x83)  |    Reserved   |  Enc Type(2)  |   Length      |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                   Ingress PE IPv4 Address                   |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                      Egress PE IPv4 Address                   |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |C|\
    \           PW Type           |           Reserved            |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |   AGI Type    |    Length     |          AGI Value            |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     ~  \
    \                  AGI Value (contd.)                         ~\n     |      \
    \                                                         |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |    AII Type   |    Length     |         SAII Value            |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     ~  \
    \                 SAII  Value (contd.)                        ~\n     |      \
    \                                                         |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |    AII Type   |    Length     |         TAII Value            |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     ~  \
    \                 TAII Value (contd.)                         ~\n     |      \
    \                                                         |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                                 Figure 18\n   -  Ingress PE IPv4 Address\n \
    \     IPv4 address of the ingress PE of PW.\n   -  Egress PE IPv4 Address\n  \
    \    IPv4 address of the egress PE of PW.\n   -  Control word bit (C)\n      A\
    \ bit that flags the presence of a control word on this PW.  If\n      C = 1,\
    \ control word is present; if C = 0, control word is not\n      present.\n   -\
    \  PW Type\n      A 15-bit quantity that represents the type of PW.\n   -  AGI\
    \ Type, Length, AGI Value\n      Attachment Group Identifier of PW.\n   -  AII\
    \ Type, Length, SAII Value\n      Source Attachment Individual Identifier of PW.\n\
    \   -  AII Type, Length, TAII Value\n      Target Attachment Individual Identifier\
    \ of PW.\n"
- title: 6.4.3.  Encoding Format for PWid with IPv6 PE Addresses
  contents:
  - "6.4.3.  Encoding Format for PWid with IPv6 PE Addresses\n      0            \
    \       1                   2                   3\n      0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |   Type(0x83)  |    Reserved   |  Enc Type(3)  |   Length(44)  |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     ~  \
    \                   Ingress PE IPv6 Address                   ~\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     ~                      Egress PE IPv6 Address                   ~\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                          Group ID                           |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                             PW ID                             |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |C|\
    \           PW Type           |           Reserved            |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                                 Figure 19\n   -  Ingress PE IPv6 Address\n \
    \     IPv6 address of the ingress PE of PW; 16 octets.\n   -  Egress PE IPv6 Address\n\
    \      IPv6 address of the egress PE of PW; 16 octets.\n   -  Group ID\n     \
    \ An arbitrary 32-bit value that represents a group of PWs and that\n      is\
    \ used to create groups in the PW space.\n   -  PW ID\n      A non-zero 32-bit\
    \ connection ID that, together with the PW Type\n      field, identifies a particular\
    \ PW.\n   -  Control word bit (C)\n      A bit that flags the presence of a control\
    \ word on this PW.  If\n      C = 1, control word is present; if C = 0, control\
    \ word is not\n      present.\n   -  PW Type\n      A 15-bit quantity that represents\
    \ the type of PW.\n"
- title: 6.4.4.  Encoding Format for Generalized PWid with IPv6 PE Addresses
  contents:
  - "6.4.4.  Encoding Format for Generalized PWid with IPv6 PE Addresses\n      0\
    \                   1                   2                   3\n      0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |   Type(0x83)  |    Reserved   |  Enc Type(4)  |   Length      |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     ~  \
    \                   Ingress PE IPv6 Address                   ~\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     ~                      Egress PE IPv6 Address                   ~\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |C|\
    \           PW Type           |           Reserved            |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |   AGI Type    |    Length     |          AGI Value            |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     ~  \
    \                  AGI Value (contd.)                         ~\n     |      \
    \                                                         |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |    AII Type   |    Length     |         SAII Value            |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     ~  \
    \                 SAII Value (contd.)                         ~\n     |      \
    \                                                         |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |    AII Type   |    Length     |         TAII Value            |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     ~  \
    \                 TAII Value (contd.)                         ~\n     |      \
    \                                                         |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                                 Figure 20\n   -  Ingress PE IPv6 Address\n \
    \     IPv6 address of the ingress PE of PW; 16 octets.\n   -  Egress PE IPv6 Address\n\
    \      IPv6 address of the egress PE of PW; 16 octets.\n   -  Control word bit\
    \ (C)\n      A bit that flags the presence of a control word on this PW.  If\n\
    \      C = 1, control word is present; if C = 0, control word is not\n      present.\n\
    \   -  PW Type\n      A 15-bit quantity that represents the type of PW.\n   -\
    \  AGI Type, Length, AGI Value\n      Attachment Group Identifier of PW.\n   -\
    \  AII Type, Length, SAII Value\n      Source Attachment Individual Identifier\
    \ of PW.\n   -  AII Type, Length, TAII Value\n      Target Attachment Individual\
    \ Identifier of PW.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   This document defines a new Egress Protection Capability\
    \ TLV in\n   Section 6.  IANA has assigned value 0x0974 for it in the \"TLV Type\n\
    \   Name Space\" registry.\n   This document defines a new Protection FEC Element\
    \ TLV in Section 6.\n   IANA assigned value 0x83 for it in the \"Forwarding Equivalence\
    \ Class\n   (FEC) Type Name Space\" registry per RFC 7358.  IANA has updated the\n\
    \   registry to also reference this document.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   In this document, PW traffic can be temporarily\
    \ rerouted by a PLR to\n   a protector.  In the centralized protector scenario,\
    \ the traffic can\n   be further rerouted to a backup PE.  In the control plane,\
    \ there is a\n   targeted LDP session between a primary PE and a protector.  In\
    \ the\n   centralized protector scenario, there is also a targeted LDP session\n\
    \   between a backup PE and a protector.  In all scenarios, traffic\n   rerouting\
    \ via PLRs, protectors, and backup PEs is planned and\n   anticipated, and backup\
    \ PEs can be used anyway to host PWs and LDP\n   sessions.  Hence, the rerouted\
    \ traffic and the LDP sessions\n   introduced in this document should not be viewed\
    \ as a new security\n   threat.\n   In general, [RFC5920] describes the security\
    \ framework for MPLS\n   networks.  [RFC3209] describes the security considerations\
    \ for RSVP\n   Label Switched Paths (LSPs).  [RFC5036] describes the security\n\
    \   considerations for the base LDP specification.  [RFC5561] describes\n   the\
    \ security considerations that apply when using the LDP capability\n   mechanism.\
    \  All these security frameworks and considerations apply to\n   this document\
    \ as well.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC8077]  Martini, L., Ed. and G. Heron, Ed., \"Pseudowire Setup and\n  \
    \            Maintenance Using the Label Distribution Protocol (LDP)\",\n    \
    \          STD 84, RFC 8077, DOI 10.17487/RFC8077, February 2017,\n          \
    \    <http://www.rfc-editor.org/info/rfc8077>.\n   [RFC5331]  Aggarwal, R., Rekhter,\
    \ Y., and E. Rosen, \"MPLS Upstream\n              Label Assignment and Context-Specific\
    \ Label Space\",\n              RFC 5331, DOI 10.17487/RFC5331, August 2008,\n\
    \              <http://www.rfc-editor.org/info/rfc5331>.\n   [RFC5561]  Thomas,\
    \ B., Raza, K., Aggarwal, S., Aggarwal, R., and JL.\n              Le Roux, \"\
    LDP Capabilities\", RFC 5561,\n              DOI 10.17487/RFC5561, July 2009,\n\
    \              <http://www.rfc-editor.org/info/rfc5561>.\n   [RFC3471]  Berger,\
    \ L., Ed., \"Generalized Multi-Protocol Label\n              Switching (GMPLS)\
    \ Signaling Functional Description\",\n              RFC 3471, DOI 10.17487/RFC3471,\
    \ January 2003,\n              <http://www.rfc-editor.org/info/rfc3471>.\n   [RFC3472]\
    \  Ashwood-Smith, P., Ed. and L. Berger, Ed., \"Generalized\n              Multi-Protocol\
    \ Label Switching (GMPLS) Signaling\n              Constraint-based Routed Label\
    \ Distribution Protocol (CR-\n              LDP) Extensions\", RFC 3472, DOI 10.17487/RFC3472,\
    \ January\n              2003, <http://www.rfc-editor.org/info/rfc3472>.\n   [RFC6389]\
    \  Aggarwal, R. and JL. Le Roux, \"MPLS Upstream Label\n              Assignment\
    \ for LDP\", RFC 6389, DOI 10.17487/RFC6389,\n              November 2011, <http://www.rfc-editor.org/info/rfc6389>.\n\
    \   [RFC4090]  Pan, P., Ed., Swallow, G., Ed., and A. Atlas, Ed., \"Fast\n   \
    \           Reroute Extensions to RSVP-TE for LSP Tunnels\", RFC 4090,\n     \
    \         DOI 10.17487/RFC4090, May 2005,\n              <http://www.rfc-editor.org/info/rfc4090>.\n\
    \   [RFC5286]  Atlas, A., Ed. and A. Zinin, Ed., \"Basic Specification for\n \
    \             IP Fast Reroute: Loop-Free Alternates\", RFC 5286,\n           \
    \   DOI 10.17487/RFC5286, September 2008,\n              <http://www.rfc-editor.org/info/rfc5286>.\n\
    \   [RFC7812]  Atlas, A., Bowers, C., and G. Enyedi, \"An Architecture for\n \
    \             IP/LDP Fast Reroute Using Maximally Redundant Trees (MRT-\n    \
    \          FRR)\", RFC 7812, DOI 10.17487/RFC7812, June 2016,\n              <http://www.rfc-editor.org/info/rfc7812>.\n\
    \   [RFC3031]  Rosen, E., Viswanathan, A., and R. Callon, \"Multiprotocol\n  \
    \            Label Switching Architecture\", RFC 3031,\n              DOI 10.17487/RFC3031,\
    \ January 2001,\n              <http://www.rfc-editor.org/info/rfc3031>.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [RFC5920]  Fang, L., Ed., \"Security Framework\
    \ for MPLS and GMPLS\n              Networks\", RFC 5920, DOI 10.17487/RFC5920,\
    \ July 2010,\n              <http://www.rfc-editor.org/info/rfc5920>.\n   [RFC3985]\
    \  Bryant, S., Ed. and P. Pate, Ed., \"Pseudo Wire Emulation\n              Edge-to-Edge\
    \ (PWE3) Architecture\", RFC 3985,\n              DOI 10.17487/RFC3985, March\
    \ 2005,\n              <http://www.rfc-editor.org/info/rfc3985>.\n   [RFC3209]\
    \  Awduche, D., Berger, L., Gan, D., Li, T., Srinivasan, V.,\n              and\
    \ G. Swallow, \"RSVP-TE: Extensions to RSVP for LSP\n              Tunnels\",\
    \ RFC 3209, DOI 10.17487/RFC3209, December 2001,\n              <http://www.rfc-editor.org/info/rfc3209>.\n\
    \   [RFC5036]  Andersson, L., Ed., Minei, I., Ed., and B. Thomas, Ed.,\n     \
    \         \"LDP Specification\", RFC 5036, DOI 10.17487/RFC5036,\n           \
    \   October 2007, <http://www.rfc-editor.org/info/rfc5036>.\n   [RFC5659]  Bocci,\
    \ M. and S. Bryant, \"An Architecture for Multi-\n              Segment Pseudowire\
    \ Emulation Edge-to-Edge\", RFC 5659,\n              DOI 10.17487/RFC5659, October\
    \ 2009,\n              <http://www.rfc-editor.org/info/rfc5659>.\n   [RFC5714]\
    \  Shand, M. and S. Bryant, \"IP Fast Reroute Framework\",\n              RFC\
    \ 5714, DOI 10.17487/RFC5714, January 2010,\n              <http://www.rfc-editor.org/info/rfc5714>.\n\
    \   [RFC5880]  Katz, D. and D. Ward, \"Bidirectional Forwarding Detection\n  \
    \            (BFD)\", RFC 5880, DOI 10.17487/RFC5880, June 2010,\n           \
    \   <http://www.rfc-editor.org/info/rfc5880>.\n   [RFC5085]  Nadeau, T., Ed. and\
    \ C. Pignataro, Ed., \"Pseudowire Virtual\n              Circuit Connectivity\
    \ Verification (VCCV): A Control\n              Channel for Pseudowires\", RFC\
    \ 5085, DOI 10.17487/RFC5085,\n              December 2007, <http://www.rfc-editor.org/info/rfc5085>.\n\
    \   [RFC5885]  Nadeau, T., Ed. and C. Pignataro, Ed., \"Bidirectional\n      \
    \        Forwarding Detection (BFD) for the Pseudowire Virtual\n             \
    \ Circuit Connectivity Verification (VCCV)\", RFC 5885,\n              DOI 10.17487/RFC5885,\
    \ June 2010,\n              <http://www.rfc-editor.org/info/rfc5885>.\n   [RFC7880]\
    \  Pignataro, C., Ward, D., Akiya, N., Bhatia, M., and S.\n              Pallagatti,\
    \ \"Seamless Bidirectional Forwarding Detection\n              (S-BFD)\", RFC\
    \ 7880, DOI 10.17487/RFC7880, July 2016,\n              <http://www.rfc-editor.org/info/rfc7880>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   This document leverages work done by Hannes Gredler, Yakov\
    \ Rekhter,\n   Minto Jeyananth, Kevin Wang, and several others on MPLS edge\n\
    \   protection.  Thanks to Nischal Sheth and Bhupesh Kothari for their\n   contributions.\
    \  Thanks to John E. Drake, Andrew G. Malis, Alexander\n   Vainshtein, Stewart\
    \ Bryant, and Mach(Guoyi) Chen for valuable\n   comments that helped shape this\
    \ document and improve its clarity.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Yimin Shen\n   Juniper Networks\n   10 Technology Park\
    \ Drive\n   Westford, MA  01886\n   United States of America\n   Phone: +1 9785890722\n\
    \   Email: yshen@juniper.net\n   Rahul Aggarwal\n   Arktan, Inc.\n   Email: raggarwa_1@yahoo.com\n\
    \   Wim Henderickx\n   Nokia\n   Copernicuslaan 50\n   2018 Antwerp\n   Belgium\n\
    \   Email: wim.henderickx@nokia.com\n   Yuanlong Jiang\n   Huawei Technologies\
    \ Co., Ltd.\n   Bantian, Longgang district\n   Shenzhen 518129\n   China\n   Email:\
    \ jiangyuanlong@huawei.com\n"
