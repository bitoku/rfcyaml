- contents:
  - '                IPPM Metrics for Measuring Connectivity

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "1. Introduction\n   Connectivity is the basic stuff from which the Internet is
    made.\n   Therefore, metrics determining whether pairs of hosts (IP addresses)\n
    \  can reach each other must form the base of a measurement suite.  We\n   define
    several such metrics, some of which serve mainly as building\n   blocks for the
    others.\n   This memo defines a series of metrics for connectivity between a pair\n
    \  of Internet hosts.  It builds on notions introduced and discussed in\n   RFC
    2330, the IPPM framework document.  The reader is assumed to be\n   familiar with
    that document.\n   The structure of the memo is as follows:\n +    An analytic
    metric, called Type-P-Instantaneous-Unidirectional-\n      Connectivity, will
    be introduced to define one-way connectivity at\n      one moment in time.\n +
    \   Using this metric, another analytic metric, called Type-P-\n      Instantaneous-Bidirectional-Connectivity,
    will be introduced to\n      define two-way connectivity at one moment in time.\n
    +    Using these metrics, corresponding one- and two-way analytic\n      metrics
    are defined for connectivity over an interval of time.\n +    Using these metrics,
    an analytic metric, called Type-P1-P2-\n      Interval-Temporal-Connectivity,
    will be introduced to define a\n      useful notion of two-way connectivity between
    two hosts over an\n      interval of time.\n +    Methodologies are then presented
    and discussed for estimating\n      Type-P1-P2-Interval-Temporal-Connectivity
    in a variety of\n      settings.\n   Careful definition of Type-P1-P2-Interval-Temporal-Connectivity
    and\n   the discussion of the metric and the methodologies for estimating it\n
    \  are the two chief contributions of the memo.\n"
  title: 1. Introduction
- contents:
  - '2. Instantaneous One-way Connectivity

    '
  - contents:
    - "2.1. Metric Name:\n   Type-P-Instantaneous-Unidirectional-Connectivity\n"
    title: '2.1. Metric Name:'
  - contents:
    - "2.2. Metric Parameters:\n +    Src, the IP address of a host\n +    Dst, the
      IP address of a host\n +    T, a time\n"
    title: '2.2. Metric Parameters:'
  - contents:
    - "2.3. Metric Units:\n   Boolean.\n"
    title: '2.3. Metric Units:'
  - contents:
    - "2.4. Definition:\n   Src has *Type-P-Instantaneous-Unidirectional-Connectivity*
      to Dst at\n   time T if a type-P packet transmitted from Src to Dst at time
      T will\n   arrive at Dst.\n"
    title: '2.4. Definition:'
  - contents:
    - "2.5. Discussion:\n   For most applications (e.g., any TCP connection) bidirectional\n
      \  connectivity is considerably more germane than unidirectional\n   connectivity,
      although unidirectional connectivity can be of interest\n   for some security
      applications (e.g., testing whether a firewall\n   correctly filters out a \"ping
      of death\").  Most applications also\n   require connectivity over an interval,
      while this metric is\n   instantaneous, though, again, for some security applications\n
      \  instantaneous connectivity remains of interest.  Finally, one might\n   not
      have instantaneous connectivity due to a transient event such as\n   a full
      queue at a router, even if at nearby instants in time one does\n   have connectivity.
      \ These points are addressed below, with this\n   metric serving as a building
      block.\n   Note also that we have not explicitly defined *when* the packet\n
      \  arrives at Dst.  The TTL field in IP packets is meant to limit IP\n   packet
      lifetimes to 255 seconds (RFC 791).  In practice the TTL field\n   can be strictly
      a hop count (RFC 1812), with most Internet hops being\n   much shorter than
      one second.  This means that most packets will have\n   nowhere near the 255
      second lifetime.  In principle, however, it is\n   also possible that packets
      might survive longer than 255 seconds.\n   Consideration of packet lifetimes
      must be taken into account in\n   attempts to measure the value of this metric.\n
      \  Finally, one might assume that unidirectional connectivity is\n   difficult
      to measure in the absence of connectivity in the reverse\n   direction.  Consider,
      however, the possibility that a process on\n   Dst's host notes when it receives
      packets from Src and reports this\n   fact either using an external channel,
      or later in time when Dst does\n   have connectivity to Src.  Such a methodology
      could reliably measure\n   the unidirectional connectivity defined in this metric.\n"
    title: '2.5. Discussion:'
  title: 2. Instantaneous One-way Connectivity
- contents:
  - '3. Instantaneous Two-way Connectivity

    '
  - contents:
    - "3.1. Metric Name:\n   Type-P-Instantaneous-Bidirectional-Connectivity\n"
    title: '3.1. Metric Name:'
  - contents:
    - "3.2. Metric Parameters:\n +    A1, the IP address of a host\n +    A2, the
      IP address of a host\n +    T, a time\n"
    title: '3.2. Metric Parameters:'
  - contents:
    - "3.3. Metric Units:\n   Boolean.\n"
    title: '3.3. Metric Units:'
  - contents:
    - "3.4. Definition:\n   Addresses A1 and A2 have *Type-P-Instantaneous-Bidirectional-\n
      \  Connectivity* at time T if address A1 has Type-P-Instantaneous-\n   Unidirectional-Connectivity
      to address A2 and address A2 has Type-P-\n   Instantaneous-Unidirectional-Connectivity
      to address A1.\n"
    title: '3.4. Definition:'
  - contents:
    - "3.5. Discussion:\n   An alternative definition would be that A1 and A2 are
      fully connected\n   if at time T address A1 has instantaneous connectivity to
      address A2,\n   and at time T+dT address A2 has instantaneous connectivity to
      A1,\n   where T+dT is when the packet sent from A1 arrives at A2.  This\n   definition
      is more useful for measurement, because the measurement\n   can use a reply
      from A2 to A1 in order to assess full connectivity.\n   It is a more complex
      definition, however, because it breaks the\n   symmetry between A1 and A2, and
      requires a notion of quantifying how\n   long a particular packet from A1 takes
      to reach A2.  We postpone\n   discussion of this distinction until the development
      of interval-\n   connectivity metrics below.\n"
    title: '3.5. Discussion:'
  title: 3. Instantaneous Two-way Connectivity
- contents:
  - '4. One-way Connectivity

    '
  - contents:
    - "4.1. Metric Name:\n   Type-P-Interval-Unidirectional-Connectivity\n"
    title: '4.1. Metric Name:'
  - contents:
    - "4.2. Metric Parameters:\n +    Src, the IP address of a host\n +    Dst, the
      IP address of a host\n +    T, a time\n +    dT, a duration\n   {Comment:  Thus,
      the closed interval [T, T+dT] denotes a time\n   interval.}\n"
    title: '4.2. Metric Parameters:'
  - contents:
    - "4.3. Metric Units:\n   Boolean.\n"
    title: '4.3. Metric Units:'
  - contents:
    - "4.4. Definition:\n   Address Src has *Type-P-Interval-Unidirectional-Connectivity*
      to\n   address Dst during the interval [T, T+dT] if for some T' within [T,\n
      \  T+dT] it has Type-P-instantaneous-connectivity to Dst.\n"
    title: '4.4. Definition:'
  title: 4. One-way Connectivity
- contents:
  - '5. Two-way Connectivity

    '
  - contents:
    - "5.1. Metric Name:\n   Type-P-Interval-Bidirectional-Connectivity\n"
    title: '5.1. Metric Name:'
  - contents:
    - "5.2. Metric Parameters:\n +    A1, the IP address of a host\n +    A2, the
      IP address of a host\n +    T, a time\n +    dT, a duration\n   {Comment:  Thus,
      the closed interval [T, T+dT] denotes a time\n   interval.}\n"
    title: '5.2. Metric Parameters:'
  - contents:
    - "5.3. Metric Units:\n   Boolean.\n"
    title: '5.3. Metric Units:'
  - contents:
    - "5.4. Definition:\n   Addresses A1 and A2 have *Type-P-Interval-Bidirectional-Connectivity*\n
      \  between them during the interval [T, T+dT] if address A1 has Type-P-\n   Interval-Unidirectional-Connectivity
      to address A2 during the\n   interval and address A2 has Type-P-Interval-Unidirectional-\n
      \  Connectivity to address A1 during the interval.\n"
    title: '5.4. Definition:'
  - contents:
    - "5.5. Discussion:\n   This metric is not quite what's needed for defining \"generally\n
      \  useful\" connectivity - that requires the notion that a packet sent\n   from
      A1 to A2 can elicit a response from A2 that will reach A1.  With\n   this definition,
      it could be that A1 and A2 have full-connectivity\n   but only, for example,
      at time T1 early enough in the interval [T,\n   T+dT] that A1 and A2 cannot
      reply to packets sent by the other.  This\n   deficiency motivates the next
      metric.\n"
    title: '5.5. Discussion:'
  title: 5. Two-way Connectivity
- contents:
  - '6. Two-way Temporal Connectivity

    '
  - contents:
    - "6.1. Metric Name:\n   Type-P1-P2-Interval-Temporal-Connectivity\n"
    title: '6.1. Metric Name:'
  - contents:
    - "6.2. Metric Parameters:\n +    Src, the IP address of a host\n +    Dst, the
      IP address of a host\n +    T, a time\n +    dT, a duration\n   {Comment:  Thus,
      the closed interval [T, T+dT] denotes a time\n   interval.}\n"
    title: '6.2. Metric Parameters:'
  - contents:
    - "6.3. Metric Units:\n   Boolean.\n"
    title: '6.3. Metric Units:'
  - contents:
    - "6.4. Definition:\n   Address Src has *Type-P1-P2-Interval-Temporal-Connectivity*
      to\n   address Dst during the interval [T, T+dT] if there exist times T1 and\n
      \  T2, and time intervals dT1 and dT2, such that:\n +    T1, T1+dT1, T2, T2+dT2
      are all in [T, T+dT].\n +    T1+dT1 <= T2.\n +    At time T1, Src has Type-P1
      instantanous connectivity to Dst.\n +    At time T2, Dst has Type-P2 instantanous
      connectivity to Src.\n +    dT1 is the time taken for a Type-P1 packet sent
      by Src at time T1\n      to arrive at Dst.\n +    dT2 is the time taken for
      a Type-P2 packet sent by Dst at time T2\n      to arrive at Src.\n"
    title: '6.4. Definition:'
  - contents:
    - "6.5. Discussion:\n   This metric defines \"generally useful\" connectivity
      -- Src can send a\n   packet to Dst that elicits a response.  Because many applications\n
      \  utilize different types of packets for forward and reverse traffic,\n   it
      is possible (and likely) that the desired responses to a Type-P1\n   packet
      will be of a different type Type-P2.  Therefore, in this\n   metric we allow
      for different types of packets in the forward and\n   reverse directions.\n"
    title: '6.5. Discussion:'
  - contents:
    - "6.6. Methodologies:\n   Here we sketch a class of methodologies for estimating
      Type-P1-P2-\n   Interval-Temporal-Connectivity.  It is a class rather than a
      single\n   methodology because the particulars will depend on the types P1 and\n
      \  P2.\n"
    - contents:
      - "6.6.1. Inputs:\n +    Types P1 and P2, addresses A1 and A2, interval [T,
        T+dT].\n +    N, the number of packets to send as probes for determining\n
        \     connectivity.\n +    W, the \"waiting time\", which bounds for how long
        it is useful to\n      wait for a reply to a packet.\n   Required: W <= 255,
        dT > W.\n"
      title: '6.6.1. Inputs:'
    - contents:
      - "6.6.2. Recommended values:\n   dT = 60 seconds.\n   W = 10 seconds.\n   N
        = 20 packets.\n"
      title: '6.6.2. Recommended values:'
    - contents:
      - "6.6.3. Algorithm:\n +    Compute N *sending-times* that are randomly, uniformly
        distributed\n      over [T, T+dT-W].\n +    At each sending time, transmit
        from A1 a well-formed packet of\n      type P1 to A2.\n +    Inspect incoming
        network traffic to A1 to determine if a\n      successful reply is received.
        \ The particulars of doing so are\n      dependent on types P1 & P2, discussed
        below.  If any successful\n      reply is received, the value of the measurement
        is \"true\".  At\n      this point, the measurement can terminate.\n +    If
        no successful replies are received by time T+dT, the value of\n      the measurement
        is \"false\".\n"
      title: '6.6.3. Algorithm:'
    - contents:
      - "6.6.4. Discussion:\n   The algorithm is inexact because it does not (and
        cannot) probe\n   temporal connectivity at every instant in time between [T,
        T+dT].\n   The value of N trades off measurement precision against network\n
        \  measurement load.  The state-of-the-art in Internet research does not\n
        \  yet offer solid guidance for picking N.  The values given above are\n   just
        guidelines.\n"
      title: '6.6.4. Discussion:'
    - contents:
      - "6.6.5. Specific methodology for TCP:\n   A TCP-port-N1-port-N2 methodology
        sends TCP SYN packets with source\n   port N1 and dest port N2 at address
        A2.  Network traffic incoming to\n   A1 is interpreted as follows:\n +    A
        SYN-ack packet from A2 to A1 with the proper acknowledgement\n      fields
        and ports indicates temporal connectivity.  The measurement\n      terminates
        immediately with a value of \"true\".  {Comment: if, as a\n      side effect
        of the methodology, a full TCP connection has been\n      established between
        A1 and A2 -- that is, if A1's TCP stack\n      acknowledges A2's SYN-ack packet,
        completing the three-way\n      handshake -- then the connection now established
        between A1 and A2\n      is best torn down using the usual FIN handshake,
        and not using a\n      RST packet, because RST packets are not reliably delivered.
        \ If\n      the three-way handshake is not completed, however, which will\n
        \     occur if the measurement tool on A1 synthesizes its own initial\n      SYN
        packet rather than going through A1's TCP stack, then A1's TCP\n      stack
        will automatically terminate the connection in a reliable\n      fashion as
        A2 continues transmitting the SYN-ack in an attempt to\n      establish the
        connection.  Finally, we note that using A1's TCP\n      stack to conduct
        the measurement complicates the methodology in\n      that the stack may retransmit
        the initial SYN packet, altering the\n      number of probe packets sent.}\n
        +    A RST packet from A2 to A1 with the proper ports indicates\n      temporal
        connectivity between the addresses (and a *lack* of\n      service connectivity
        for TCP-port-N1-port-N2 - something that\n      probably should be addressed
        with another metric).\n +    An ICMP port-unreachable from A2 to A1 indicates
        temporal\n      connectivity between the addresses (and again a *lack* of
        service\n      connectivity for TCP-port-N1-port-N2).  {Comment: TCP\n      implementations
        generally do not need to send ICMP port-\n      unreachable messages because
        a separate mechanism is available\n      (sending a RST).  However, RFC 1122
        states that a TCP receiving an\n      ICMP port-unreachable MUST treat it
        the same as the equivalent\n      transport-level mechanism (for TCP, a RST).}\n
        +    An ICMP host-unreachable or network-unreachable to A1 (not\n      necessarily
        from A2) with an enclosed IP header matching that sent\n      from A1 to A2
        *suggests* a lack of temporal connectivity.  If by\n      time T+dT no evidence
        of temporal connectivity has been gathered,\n      then the receipt of the
        ICMP can be used as additional information\n      to the measurement value
        of \"false\".\n   {Comment: Similar methodologies are needed for ICMP Echo,
        UDP, etc.}\n"
      title: '6.6.5. Specific methodology for TCP:'
    title: '6.6. Methodologies:'
  title: 6. Two-way Temporal Connectivity
- contents:
  - "7. Acknowledgments\n   The comments of Guy Almes, Martin Horneffer, Jeff Sedayao,
    and Sean\n   Shapira are appreciated.\n"
  title: 7. Acknowledgments
- contents:
  - "8. Security Considerations\n   As noted in RFC 2330, active measurement techniques,
    such as those\n   defined in this document, can be abused for denial-of-service
    attacks\n   disguised as legitimate measurement activity.  Furthermore, testing\n
    \  for connectivity can be used to probe firewalls and other security\n   mechnisms
    for weak spots.\n"
  title: 8. Security Considerations
- contents:
  - "9. References\n   [RFC1812]  Baker, F., \"Requirements for IP Version 4 Routers\",
    RFC\n              1812, June 1995.\n   [RFC1122]  Braden, R., Editor, \"Requirements
    for Internet Hosts --\n              Communication Layers\", STD, 3, RFC 1122,
    \ October 1989.\n   [RFC2330]  Paxson, V., Almes, G., Mahdavi, J. and M. Mathis,\n
    \             \"Framework for IP Performance Metrics\", RFC 2330, May\n              1998.\n
    \  [RFC791]   Postel, J., \"Internet Protocol\", STD 5, RFC 791, September\n              1981.\n"
  title: 9. References
- contents:
  - "10. Authors' Addresses\n   Jamshid Mahdavi\n   Pittsburgh Supercomputing Center\n
    \  4400 5th Avenue\n   Pittsburgh, PA  15213\n   USA\n   EMail: mahdavi@psc.edu\n
    \  Vern Paxson\n   MS 50A-3111\n   Lawrence Berkeley National Laboratory\n   University
    of California\n   Berkeley, CA  94720\n   USA\n   Phone: +1 510/486-7504\n   EMail:
    vern@ee.lbl.gov\n"
  title: 10. Authors' Addresses
- contents:
  - "11.  Full Copyright Statement\n   Copyright (C) The Internet Society (1999).
    \ All Rights Reserved.\n   This document and translations of it may be copied
    and furnished to\n   others, and derivative works that comment on or otherwise
    explain it\n   or assist in its implementation may be prepared, copied, published\n
    \  and distributed, in whole or in part, without restriction of any\n   kind,
    provided that the above copyright notice and this paragraph are\n   included on
    all such copies and derivative works.  However, this\n   document itself may not
    be modified in any way, such as by removing\n   the copyright notice or references
    to the Internet Society or other\n   Internet organizations, except as needed
    for the purpose of\n   developing Internet standards in which case the procedures
    for\n   copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: 11.  Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
