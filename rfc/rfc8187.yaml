- contents:
  - "    Indicating Character Encoding and Language for HTTP Header Field\n                               Parameters\n"
  title: __initial_text__
- contents:
  - "Abstract\n   By default, header field values in Hypertext Transfer Protocol (HTTP)\n
    \  messages cannot easily carry characters outside the US-ASCII coded\n   character
    set.  RFC 2231 defines an encoding mechanism for use in\n   parameters inside
    Multipurpose Internet Mail Extensions (MIME) header\n   field values.  This document
    specifies an encoding suitable for use\n   in HTTP header fields that is compatible
    with a simplified profile of\n   the encoding defined in RFC 2231.\n   This document
    obsoletes RFC 5987.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8187.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   2\n   2.  Notational Conventions  . . . . . . . . . . . . . . . .
    . . .   3\n   3.  Comparison to RFC 2231 and Definition of the Encoding . . .
    .   3\n     3.1.  Parameter Continuations . . . . . . . . . . . . . . . . .   4\n
    \    3.2.  Parameter Value Character Encoding and Language\n           Information
    . . . . . . . . . . . . . . . . . . . . . . .   4\n       3.2.1.  Definition  .
    . . . . . . . . . . . . . . . . . . . .   4\n       3.2.2.  Historical Notes  .
    . . . . . . . . . . . . . . . . .   6\n       3.2.3.  Examples  . . . . . . .
    . . . . . . . . . . . . . . .   6\n     3.3.  Language Specification in Encoded
    Words . . . . . . . . .   7\n   4.  Guidelines for Usage in HTTP Header Field
    Definitions . . . .   7\n     4.1.  When to Use the Extension . . . . . . . .
    . . . . . . . .   8\n     4.2.  Error Handling  . . . . . . . . . . . . . . .
    . . . . . .   8\n   5.  Security Considerations . . . . . . . . . . . . . . .
    . . . .   9\n   6.  IANA Considerations . . . . . . . . . . . . . . . . . . .
    . .   9\n   7.  References  . . . . . . . . . . . . . . . . . . . . . . . . .
    \  9\n     7.1.  Normative References  . . . . . . . . . . . . . . . . . .   9\n
    \    7.2.  Informative References  . . . . . . . . . . . . . . . . .  10\n   Appendix
    A.  Changes from RFC 5987  . . . . . . . . . . . . . . .  12\n   Appendix B.  Implementation
    Report  . . . . . . . . . . . . . . .  12\n   Acknowledgements  . . . . . . .
    . . . . . . . . . . . . . . . . .  13\n   Author's Address  . . . . . . . . .
    . . . . . . . . . . . . . . .  13\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Use of characters outside the US-ASCII coded character set\n
    \  ([RFC0020]) in HTTP header fields ([RFC7230]) is non-trivial:\n   o  The HTTP
    specification discourages use of non-US-ASCII characters\n      in field values,
    placing them into the \"obs-text\" Augmented\n      Backus-Naur Form (ABNF) production
    ([RFC7230], Section 3.2).\n   o  Furthermore, it stays silent about default character
    encoding\n      schemes for field values, so any use of non-US-ASCII characters\n
    \     would need to be specific to the field definition or would require\n      some
    other kind of out-of-band information.\n   o  Finally, some APIs assume a default
    character encoding scheme in\n      order to map from the octet sequences (obtained
    from the HTTP\n      message) to character sequences: for instance, the XMLHttpRequest\n
    \     API ([XMLHttpRequest]) uses the Interface Definition Language type\n      \"ByteString\",
    effectively resulting in the ISO-8859-1 character\n      encoding scheme ([ISO-8859-1])
    being used.\n   On the other hand, RFC 2231 defines an encoding mechanism for\n
    \  parameters inside MIME header fields ([RFC2231]), which, as opposed\n   to
    HTTP messages, do need to be sent over non-binary transports.\n   This document
    specifies an encoding suitable for use in HTTP header\n   fields that is compatible
    with a simplified profile of the encoding\n   defined in RFC 2231.  It can be
    applied to any HTTP header field that\n   uses the common \"parameter\" (\"name=value\")
    syntax.\n   This document obsoletes [RFC5987] and moves it to \"Historic\" status;\n
    \  the changes are summarized in Appendix A.\n      Note: In the remainder of
    this document, RFC 2231 is only\n      referenced for the purpose of explaining
    the choice of features\n      that were adopted; therefore, they are purely informative.\n
    \     Note: This encoding does not apply to message payloads transmitted\n      over
    HTTP, such as when using the media type \"multipart/form-data\"\n      ([RFC7578]).\n"
  title: 1.  Introduction
- contents:
  - "2.  Notational Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT
    RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted
    as described in\n   [RFC2119].\n   This specification uses the ABNF notation defined
    in [RFC5234].  The\n   following core rules are included by reference, as defined
    in\n   [RFC5234], Appendix B.1: ALPHA (letters), DIGIT (decimal 0-9), HEXDIG\n
    \  (hexadecimal 0-9/A-F/a-f), and LWSP (linear whitespace).\n   This specification
    uses terminology defined in [RFC6365], namely:\n   \"character encoding scheme\"
    (abbreviated to \"character encoding\"\n   below), \"charset\", and \"coded character
    set\".\n   Note that this differs from RFC 2231, which uses the term \"character\n
    \  set\" for \"character encoding scheme\".\n"
  title: 2.  Notational Conventions
- contents:
  - "3.  Comparison to RFC 2231 and Definition of the Encoding\n   RFC 2231 defines
    several extensions to MIME.  The sections below\n   discuss if and how they apply
    to HTTP header fields.\n   In short:\n   o  Parameter Continuations aren't needed
    (Section 3.1),\n   o  Character Encoding and Language Information are useful,
    therefore\n      a simple subset is specified (Section 3.2), and\n   o  Language
    Specifications in Encoded Words aren't needed\n      (Section 3.3).\n"
  - contents:
    - "3.1.  Parameter Continuations\n   Section 3 of [RFC2231] defines a mechanism
      that deals with the length\n   limitations that apply to MIME headers.  These
      limitations do not\n   apply to HTTP ([RFC7231], Appendix A.6).\n   Thus, parameter
      continuations are not part of the encoding defined by\n   this specification.\n"
    title: 3.1.  Parameter Continuations
  - contents:
    - "3.2.  Parameter Value Character Encoding and Language Information\n   Section
      4 of [RFC2231] specifies how to embed language information\n   into parameter
      values and also how to encode non-ASCII characters,\n   dealing with restrictions
      both in MIME and HTTP header field\n   parameters.\n   However, RFC 2231 does
      not specify a mandatory-to-implement character\n   encoding, making it hard
      for senders to decide which encoding to use.\n   Thus, recipients implementing
      this specification MUST support the\n   \"UTF-8\" character encoding [RFC3629].\n
      \  Furthermore, RFC 2231 allows the character encoding information to be\n   left
      out.  The encoding defined by this specification does not allow\n   that.\n"
    - contents:
      - "3.2.1.  Definition\n   The presence of extended parameter values is usually
        indicated by a\n   parameter name ending in an asterisk character.  However,
        note that\n   this is just a convention, and that the extended parameter values\n
        \  need to be explicitly specified in the definition of the header field\n
        \  using this extension (see Section 4).\n   The ABNF for extended parameter
        values is specified below:\n     ext-value     = charset  \"'\" [ language
        ] \"'\" value-chars\n                   ; like RFC 2231's <extended-initial-value>\n
        \                  ; (see [RFC2231], Section 7)\n     charset       = \"UTF-8\"
        / mime-charset\n     mime-charset  = 1*mime-charsetc\n     mime-charsetc =
        ALPHA / DIGIT\n                   / \"!\" / \"#\" / \"$\" / \"%\" / \"&\"\n
        \                  / \"+\" / \"-\" / \"^\" / \"_\" / \"`\"\n                   /
        \"{\" / \"}\" / \"~\"\n                   ; as <mime-charset> in Section 2.3
        of [RFC2978]\n                   ; except that the single quote is not included\n
        \                  ; SHOULD be registered in the IANA charset registry\n     language
        \     = <Language-Tag, see [RFC5646], Section 2.1>\n     value-chars   = *(
        pct-encoded / attr-char )\n     pct-encoded   = \"%\" HEXDIG HEXDIG\n                   ;
        see [RFC3986], Section 2.1\n     attr-char     = ALPHA / DIGIT\n                   /
        \"!\" / \"#\" / \"$\" / \"&\" / \"+\" / \"-\" / \".\"\n                   /
        \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n                   ; token except (
        \"*\" / \"'\" / \"%\" )\n   The value part of an extended parameter (ext-value)
        is a token that\n   consists of three parts:\n   1.  the REQUIRED character
        encoding name (charset),\n   2.  the OPTIONAL language information (language),
        and\n   3.  a character sequence representing the actual value (value-chars),\n
        \      separated by single quote characters.\n   Note that both character
        encoding names and language tags are\n   restricted to the US-ASCII coded
        character set and are matched case-\n   insensitively (see Section 2.3 of
        [RFC2978] and Section 2.1.1 of\n   [RFC5646]).\n   Inside the value part,
        characters not contained in attr-char are\n   encoded into an octet sequence
        using the specified character\n   encoding.  That octet sequence is then percent-encoded
        as specified\n   in Section 2.1 of [RFC3986].\n   Producers MUST use the \"UTF-8\"
        ([RFC3629]) character encoding.\n   Extension character encodings (mime-charset)
        are reserved for future\n   use.\n      Note: Recipients should be prepared
        to handle encoding errors,\n      such as malformed or incomplete percent
        escape sequences, or\n      non-decodable octet sequences, in a robust manner.
        \ This\n      specification does not mandate any specific behavior; for\n
        \     instance, the following strategies are all acceptable:\n      *  ignoring
        the parameter,\n      *  stripping a non-decodable octet sequence, and\n      *
        \ substituting a non-decodable octet sequence by a replacement\n         character,
        such as the Unicode character U+FFFD (Replacement\n         Character).\n"
      title: 3.2.1.  Definition
    - contents:
      - "3.2.2.  Historical Notes\n   The RFC 7230 token production ([RFC7230], Section
        3.2.6) differs from\n   the production used in RFC 2231 (imported from Section
        5.1 of\n   [RFC2045]) in that curly braces (i.e., \"{\" and \"}\") are excluded.\n
        \  Thus, these two characters are excluded from the attr-char production\n
        \  as well.\n   The <mime-charset> ABNF defined here differs from the one
        in\n   Section 2.3 of [RFC2978] in that it does not allow the single quote\n
        \  character (see also RFC Errata ID 1912 [Err1912]).  In practice, no\n   character
        encoding names using that character have been registered at\n   the time of
        this writing.\n   For backwards compatibility with RFC 2231, the encoding
        defined by\n   this specification deviates from common parameter syntax in
        that the\n   quoted-string notation is not allowed.  Implementations using
        generic\n   parser components might not be able to detect the use of quoted-\n
        \  string notation and thus might accept that format, although invalid,\n
        \  as well.\n   [RFC5987] did require support for ISO-8859-1 ([ISO-8859-1]),
        too; for\n   compatibility with legacy code, recipients are encouraged to
        support\n   this encoding as well.\n"
      title: 3.2.2.  Historical Notes
    - contents:
      - "3.2.3.  Examples\n   Non-extended notation, using \"token\":\n     foo: bar;
        title=Economy\n   Non-extended notation, using \"quoted-string\":\n     foo:
        bar; title=\"US-$ rates\"\n   Extended notation, using the Unicode character
        U+00A3 (\"\xA3\", POUND\n   SIGN):\n     foo: bar; title*=utf-8'en'%C2%A3%20rates\n
        \  Note: The Unicode pound sign character U+00A3 was encoded into the\n   octet
        sequence C2 A3 using the UTF-8 character encoding, and then\n   percent-encoded.
        \ Also, note that the space character was encoded as\n   %20, as it is not
        contained in attr-char.\n   Extended notation, using the Unicode characters
        U+00A3 (\"\xA3\", POUND\n   SIGN) and U+20AC (\"\u20AC\", EURO SIGN):\n     foo:
        bar; title*=UTF-8''%c2%a3%20and%20%e2%82%ac%20rates\n   Note: The Unicode
        pound sign character U+00A3 was encoded into the\n   octet sequence C2 A3
        using the UTF-8 character encoding, and then\n   percent-encoded.  Likewise,
        the Unicode euro sign character U+20AC\n   was encoded into the octet sequence
        E2 82 AC, and then percent-\n   encoded.  Also note that HEXDIG allows both
        lowercase and uppercase\n   characters, so recipients must understand both,
        and that the language\n   information is optional, while the character encoding
        is not.\n"
      title: 3.2.3.  Examples
    title: 3.2.  Parameter Value Character Encoding and Language Information
  - contents:
    - "3.3.  Language Specification in Encoded Words\n   Section 5 of [RFC2231] extends
      the encoding defined in [RFC2047] to\n   also support language specification
      in encoded words.  RFC 2616, the\n   now-obsolete HTTP/1.1 specification, did
      refer to RFC 2047\n   ([RFC2616], Section 2.2).  However, it wasn't clear to
      which header\n   field it applied.  Consequently, the current revision of the
      HTTP/1.1\n   specification has deprecated use of the encoding forms defined
      in RFC\n   2047 (see Section 3.2.4 of [RFC7230]).\n   Thus, this specification
      does not include this feature.\n"
    title: 3.3.  Language Specification in Encoded Words
  title: 3.  Comparison to RFC 2231 and Definition of the Encoding
- contents:
  - "4.  Guidelines for Usage in HTTP Header Field Definitions\n   Specifications
    of HTTP header fields that use the extensions defined\n   in Section 3.2 ought
    to clearly state that.  A simple way to achieve\n   this is to normatively reference
    this specification and to include\n   the ext-value production into the ABNF for
    specific header field\n   parameters.\n   For instance:\n     foo         = token
    \";\" LWSP title-param\n     title-param = \"title\" LWSP \"=\" LWSP value\n                 /
    \"title*\" LWSP \"=\" LWSP ext-value\n     ext-value   = <see RFC 8187, Section
    3.2>\n      Note: The Parameter Value Continuation feature defined in\n      Section
    3 of [RFC2231] makes it impossible to have multiple\n      instances of extended
    parameters with identical names, as the\n      processing of continuations would
    become ambiguous.  Thus,\n      specifications using this extension are advised
    to disallow this\n      case for compatibility with RFC 2231.\n      Note: This
    specification does not automatically assign a new\n      interpretation to parameter
    names ending in an asterisk.  As\n      pointed out above, it's up to the specification
    for the\n      non-extended parameter to \"opt in\" to the syntax defined here.\n
    \     That being said, some existing implementations are known to\n      automatically
    switch to using this notation when a parameter name\n      ends with an asterisk;
    thus, using parameter names ending in an\n      asterisk for something else is
    likely to cause interoperability\n      problems.\n"
  - contents:
    - "4.1.  When to Use the Extension\n   Section 4.2 of [RFC2277] requires that
      protocol elements containing\n   human-readable text be able to carry language
      information.  Thus, the\n   ext-value production ought to always be used when
      the parameter value\n   is of a textual nature and its language is known.\n
      \  Furthermore, the extension ought to also be used whenever the\n   parameter
      value needs to carry characters not present in the US-ASCII\n   coded character
      set ([RFC0020]); note that it would be unacceptable\n   to define a new parameter
      that would be restricted to a subset of the\n   Unicode character set.\n"
    title: 4.1.  When to Use the Extension
  - contents:
    - "4.2.  Error Handling\n   Header field specifications need to define whether
      multiple instances\n   of parameters with identical names are allowed and how
      they should be\n   processed.  This specification suggests that a parameter
      using the\n   extended syntax takes precedence.  This would allow producers
      to use\n   both formats without breaking recipients that do not understand the\n
      \  extended syntax yet.\n   Example:\n     foo: bar; title=\"EURO exchange rates\";\n
      \              title*=utf-8''%e2%82%ac%20exchange%20rates\n   In this case,
      the sender provides an ASCII version of the title for\n   legacy recipients,
      but also includes an internationalized version for\n   recipients understanding
      this specification -- the latter obviously\n   ought to prefer the new syntax
      over the old one.\n"
    title: 4.2.  Error Handling
  title: 4.  Guidelines for Usage in HTTP Header Field Definitions
- contents:
  - "5.  Security Considerations\n   The format described in this document makes it
    possible to transport\n   non-ASCII characters, and thus enables character \"spoofing\"
    scenarios\n   in which a displayed value appears to be something other than it
    is.\n   Furthermore, there are known attack scenarios related to decoding\n   UTF-8.\n
    \  See Section 10 of [RFC3629] for more information on both topics.\n   In addition,
    the extension specified in this document makes it\n   possible to transport multiple
    language variants for a single\n   parameter, and such use might allow spoofing
    attacks where different\n   language versions of the same parameter are not equivalent.
    \ Whether\n   this attack is effective as an attack depends on the parameter\n
    \  specified.\n"
  title: 5.  Security Considerations
- contents:
  - "6.  IANA Considerations\n   This document does not require any IANA actions.\n"
  title: 6.  IANA Considerations
- contents:
  - '7.  References

    '
  - contents:
    - "7.1.  Normative References\n   [RFC0020]  Cerf, V., \"ASCII format for network
      interchange\", STD 80,\n              RFC 20, DOI 10.17487/RFC0020, October
      1969,\n              <https://www.rfc-editor.org/info/rfc20>.\n   [RFC2119]
      \ Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement
      Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n
      \             <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC2978]  Freed,
      N. and J. Postel, \"IANA Charset Registration\n              Procedures\", BCP
      19, RFC 2978, DOI 10.17487/RFC2978,\n              October 2000, <https://www.rfc-editor.org/info/rfc2978>.\n
      \  [RFC3629]  Yergeau, F., \"UTF-8, a transformation format of ISO\n              10646\",
      STD 63, RFC 3629, DOI 10.17487/RFC3629, November\n              2003, <https://www.rfc-editor.org/info/rfc3629>.\n
      \  [RFC3986]  Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform\n              Resource
      Identifier (URI): Generic Syntax\", STD 66,\n              RFC 3986, DOI 10.17487/RFC3986,
      January 2005,\n              <https://www.rfc-editor.org/info/rfc3986>.\n   [RFC5234]
      \ Crocker, D., Ed. and P. Overell, \"Augmented BNF for Syntax\n              Specifications:
      ABNF\", STD 68, RFC 5234,\n              DOI 10.17487/RFC5234, January 2008,\n
      \             <https://www.rfc-editor.org/info/rfc5234>.\n   [RFC5646]  Phillips,
      A., Ed. and M. Davis, Ed., \"Tags for Identifying\n              Languages\",
      BCP 47, RFC 5646, DOI 10.17487/RFC5646,\n              September 2009, <https://www.rfc-editor.org/info/rfc5646>.\n
      \  [RFC7230]  Fielding, R., Ed. and J. Reschke, Ed., \"Hypertext Transfer\n
      \             Protocol (HTTP/1.1): Message Syntax and Routing\",\n              RFC
      7230, DOI 10.17487/RFC7230, June 2014,\n              <https://www.rfc-editor.org/info/rfc7230>.\n
      \  [RFC7231]  Fielding, R., Ed. and J. Reschke, Ed., \"Hypertext Transfer\n
      \             Protocol (HTTP/1.1): Semantics and Content\", RFC 7231,\n              DOI
      10.17487/RFC7231, June 2014,\n              <https://www.rfc-editor.org/info/rfc7231>.\n"
    title: 7.1.  Normative References
  - contents:
    - "7.2.  Informative References\n   [Err1912]  RFC Errata, \"Erratum ID 1912,
      RFC 2978\",\n              <https://www.rfc-editor.org/errata/eid1912>.\n   [ISO-8859-1]\n
      \             International Organization for Standardization,\n              \"Information
      technology -- 8-bit single-byte coded graphic\n              character sets
      -- Part 1: Latin alphabet No. 1\", ISO/\n              IEC 8859-1:1998, 1998.\n
      \  [RFC2045]  Freed, N. and N. Borenstein, \"Multipurpose Internet Mail\n              Extensions
      (MIME) Part One: Format of Internet Message\n              Bodies\", RFC 2045,
      DOI 10.17487/RFC2045, November 1996,\n              <https://www.rfc-editor.org/info/rfc2045>.\n
      \  [RFC2047]  Moore, K., \"MIME (Multipurpose Internet Mail Extensions)\n              Part
      Three: Message Header Extensions for Non-ASCII Text\",\n              RFC 2047,
      DOI 10.17487/RFC2047, November 1996,\n              <https://www.rfc-editor.org/info/rfc2047>.\n
      \  [RFC2231]  Freed, N. and K. Moore, \"MIME Parameter Value and Encoded\n              Word
      Extensions: Character Sets, Languages, and\n              Continuations\", RFC
      2231, DOI 10.17487/RFC2231, November\n              1997, <https://www.rfc-editor.org/info/rfc2231>.\n
      \  [RFC2277]  Alvestrand, H., \"IETF Policy on Character Sets and\n              Languages\",
      BCP 18, RFC 2277, DOI 10.17487/RFC2277,\n              January 1998, <https://www.rfc-editor.org/info/rfc2277>.\n
      \  [RFC2616]  Fielding, R., Gettys, J., Mogul, J., Frystyk, H.,\n              Masinter,
      L., Leach, P., and T. Berners-Lee, \"Hypertext\n              Transfer Protocol
      -- HTTP/1.1\", RFC 2616,\n              DOI 10.17487/RFC2616, June 1999,\n              <https://www.rfc-editor.org/info/rfc2616>.\n
      \  [RFC5987]  Reschke, J., \"Character Set and Language Encoding for\n              Hypertext
      Transfer Protocol (HTTP) Header Field\n              Parameters\", RFC 5987,
      DOI 10.17487/RFC5987, August 2010,\n              <https://www.rfc-editor.org/info/rfc5987>.\n
      \  [RFC5988]  Nottingham, M., \"Web Linking\", RFC 5988,\n              DOI
      10.17487/RFC5988, October 2010,\n              <https://www.rfc-editor.org/info/rfc5988>.\n
      \  [RFC6266]  Reschke, J., \"Use of the Content-Disposition Header Field\n              in
      the Hypertext Transfer Protocol (HTTP)\", RFC 6266,\n              DOI 10.17487/RFC6266,
      June 2011,\n              <https://www.rfc-editor.org/info/rfc6266>.\n   [RFC6365]
      \ Hoffman, P. and J. Klensin, \"Terminology Used in\n              Internationalization
      in the IETF\", BCP 166, RFC 6365,\n              DOI 10.17487/RFC6365, September
      2011,\n              <https://www.rfc-editor.org/info/rfc6365>.\n   [RFC7578]
      \ Masinter, L., \"Returning Values from Forms: multipart/\n              form-data\",
      RFC 7578, DOI 10.17487/RFC7578, July 2015,\n              <https://www.rfc-editor.org/info/rfc7578>.\n
      \  [RFC7616]  Shekh-Yusef, R., Ed., Ahrens, D., and S. Bremer, \"HTTP\n              Digest
      Access Authentication\", RFC 7616,\n              DOI 10.17487/RFC7616, September
      2015,\n              <https://www.rfc-editor.org/info/rfc7616>.\n   [RFC8053]
      \ Oiwa, Y., Watanabe, H., Takagi, H., Maeda, K., Hayashi,\n              T.,
      and Y. Ioku, \"HTTP Authentication Extensions for\n              Interactive
      Clients\", RFC 8053, DOI 10.17487/RFC8053,\n              January 2017, <https://www.rfc-editor.org/info/rfc8053>.\n
      \  [XMLHttpRequest]\n              WhatWG, \"XMLHttpRequest\", <https://xhr.spec.whatwg.org/>.\n"
    title: 7.2.  Informative References
  title: 7.  References
- contents:
  - "Appendix A.  Changes from RFC 5987\n   This section summarizes the changes compared
    to [RFC5987]:\n   o  The document title was changed to \"Indicating Character
    Encoding\n      and Language for HTTP Header Field Parameters\".\n   o  The introduction
    was rewritten to better explain the issues around\n      non-ASCII characters
    in field values.\n   o  The requirement to support the \"ISO-8859-1\" encoding
    was removed.\n   o  This document no longer attempts to redefine a generic \"parameter\"\n
    \     ABNF (it turned out that there really isn't a generic definition\n      of
    parameters in HTTP; for instance, there are subtle differences\n      with respect
    to whitespace handling).\n   o  A note about defects in error handling in current
    implementations\n      was removed, as it was no longer accurate.\n"
  title: Appendix A.  Changes from RFC 5987
- contents:
  - "Appendix B.  Implementation Report\n   The encoding defined in this document
    is currently used in four\n   different HTTP header fields:\n   o  \"Authentication-Control\",
    defined in [RFC8053],\n   o  \"Authorization\" (as used in HTTP Digest Authentication,
    defined in\n      [RFC7616]),\n   o  \"Content-Disposition\", defined in [RFC6266],
    and\n   o  \"Link\", defined in [RFC5988].\n   As the encoding is a profile/clarification
    of the one defined in\n   [RFC2231] in 1997, many user agents already supported
    it for use in\n   \"Content-Disposition\" when [RFC5987] was published.\n   Since
    the publication of [RFC5987], three more popular desktop user\n   agents have
    added support for this encoding; see\n   <http://purl.org/NET/http/content-disposition-tests#encoding-\n
    \  2231-char> for details.  At this time, the current versions of all\n   major
    desktop user agents support it.\n   Note that the implementation in Internet Explorer
    9 does not support\n   the ISO-8859-1 character encoding; this document revision\n
    \  acknowledges that UTF-8 is sufficient for expressing all code points\n   and
    removes the requirement to support ISO-8859-1.\n   The \"Link\" header field,
    on the other hand, was more recently\n   specified in [RFC5988].  At the time
    of this writing, no user agent\n   except Firefox supported the \"title*\" parameter
    (starting with\n   release 15).\n   Section 3.4 of [RFC7616] defines the \"username*\"
    parameter for use in\n   HTTP Digest Authentication.  At the time of writing,
    no user agent\n   implemented this extension.\n"
  title: Appendix B.  Implementation Report
- contents:
  - "Acknowledgements\n   Thanks to Martin D\xFCrst and Frank Ellermann for help figuring
    out ABNF\n   details, to Graham Klyne and Alexey Melnikov for general review,
    to\n   Chris Newman for pointing out an RFC 2231 incompatibility, and to\n   Benjamin
    Carlyle, Roar Lauritzsen, Eric Lawrence, and James Manger\n   for implementers
    feedback.\n   Furthermore, thanks to the members of the IETF HTTP Working Group
    for\n   the feedback specific to this update of RFC 5987.\n"
  title: Acknowledgements
- contents:
  - "Author's Address\n   Julian F. Reschke\n   greenbytes GmbH\n   Hafenweg 16\n
    \  M\xFCnster, NW  48155\n   Germany\n   Email: julian.reschke@greenbytes.de\n
    \  URI:   http://greenbytes.de/tech/webdav/\n"
  title: Author's Address
