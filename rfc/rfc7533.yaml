- title: __initial_text__
  contents:
  - '           Administration Protocol for Federated File Systems

    '
- title: Abstract
  contents:
  - "Abstract\n   This document describes the administration protocol for a federated\n\
    \   file system (FedFS) that enables file access and namespace traversal\n   across\
    \ collections of independently administered fileservers.  The\n   protocol specifies\
    \ a set of interfaces by which fileservers with\n   different administrators can\
    \ form a fileserver federation that\n   provides a namespace composed of the file\
    \ systems physically hosted\n   on and exported by the constituent fileservers.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7533.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \      1.1. Definitions ................................................4\n  \
    \    1.2. Requirements Language ......................................6\n   2.\
    \ Protocol ........................................................7\n   3. Error\
    \ Values ...................................................12\n   4. Data Types\
    \ .....................................................15\n      4.1. FedFsNsdbName\
    \ Equality ....................................17\n   5. Procedures .....................................................17\n\
    \      5.1. FEDFS_NULL ................................................18\n  \
    \         5.1.1. Synopsis ...........................................18\n    \
    \       5.1.2. Description ........................................18\n      \
    \     5.1.3. Errors .............................................18\n      5.2.\
    \ FEDFS_CREATE_JUNCTION .....................................18\n           5.2.1.\
    \ Synopsis ...........................................18\n           5.2.2. Description\
    \ ........................................18\n           5.2.3. Errors .............................................20\n\
    \      5.3. FEDFS_DELETE_JUNCTION .....................................20\n  \
    \         5.3.1. Synopsis ...........................................20\n    \
    \       5.3.2. Description ........................................20\n      \
    \     5.3.3. Errors .............................................22\n      5.4.\
    \ FEDFS_LOOKUP_JUNCTION .....................................22\n           5.4.1.\
    \ Synopsis ...........................................22\n           5.4.2. Description\
    \ ........................................22\n           5.4.3. Errors .............................................25\n\
    \      5.5. FEDFS_CREATE_REPLICATION ..................................26\n  \
    \         5.5.1. Synopsis ...........................................26\n    \
    \       5.5.2. Description ........................................26\n      \
    \     5.5.3. Errors .............................................27\n      5.6.\
    \ FEDFS_DELETE_REPLICATION ..................................27\n           5.6.1.\
    \ Synopsis ...........................................27\n           5.6.2. Description\
    \ ........................................27\n           5.6.3. Errors .............................................28\n\
    \      5.7. FEDFS_LOOKUP_REPLICATION ..................................28\n  \
    \         5.7.1. Synopsis ...........................................28\n    \
    \       5.7.2. Description ........................................28\n      \
    \     5.7.3. Errors .............................................29\n      5.8.\
    \ FEDFS_SET_NSDB_PARAMS .....................................30\n           5.8.1.\
    \ Synopsis ...........................................30\n           5.8.2. Description\
    \ ........................................30\n           5.8.3. Errors .............................................31\n\
    \      5.9. FEDFS_GET_NSDB_PARAMS .....................................31\n  \
    \         5.9.1. Synopsis ...........................................31\n    \
    \       5.9.2. Description ........................................31\n      \
    \     5.9.3. Errors .............................................32\n      5.10.\
    \ FEDFS_GET_LIMITED_NSDB_PARAMS ............................32\n           5.10.1.\
    \ Synopsis ..........................................32\n           5.10.2. Description\
    \ .......................................32\n           5.10.3. Errors ............................................33\n\
    \   6. Security Considerations ........................................33\n  \
    \ 7. IANA Considerations ............................................34\n   8.\
    \ References .....................................................34\n      8.1.\
    \ Normative References ......................................34\n      8.2. Informative\
    \ References ....................................35\n   Acknowledgments ...................................................36\n\
    \   Authors' Addresses ................................................37\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   A federated file system enables file access and namespace\
    \ traversal\n   in a uniform, secure, and consistent manner across multiple\n\
    \   independent fileservers within an enterprise (and possibly across\n   multiple\
    \ enterprises) with reasonably good performance.\n   Traditionally, building a\
    \ namespace that spans multiple fileservers\n   has been difficult for two reasons.\
    \  First, the fileservers that\n   export pieces of the namespace are often not\
    \ in the same\n   administrative domain.  Second, there is no standard mechanism\
    \ for\n   the fileservers to cooperatively present the namespace.  Fileservers\n\
    \   might provide proprietary management tools, and in some cases, an\n   administrator\
    \ might be able to use the proprietary tools to build a\n   shared namespace out\
    \ of the exported file systems.  Relying on\n   vendor-proprietary tools does\
    \ not work in larger enterprises or when\n   collaborating across enterprises\
    \ because it is likely that the system\n   will contain fileservers running different\
    \ software, each with their\n   own protocols, with no common protocol to manage\
    \ the namespace or\n   exchange namespace information.\n   The requirements for\
    \ federated namespaces are described in [RFC5716].\n   The protocol for federated\
    \ file systems described in [RFC7532] allows\n   fileservers from different vendors\
    \ and/or with different\n   administrators to cooperatively build a namespace.\n\
    \   This document describes the protocol used by administrators to\n   configure\
    \ the fileservers and construct the namespace.\n"
- title: 1.1.  Definitions
  contents:
  - "1.1.  Definitions\n   Administrator:  A user with the necessary authority to\
    \ initiate\n      administrative tasks on one or more servers.\n   Admin Entity:\
    \  A server or agent that administers a collection of\n      fileservers and persistently\
    \ stores the namespace information.\n   File-Access Client:  Standard off-the-shelf,\
    \ network-attached storage\n      (NAS) client software that communicates with\
    \ fileservers using a\n      standard file-access protocol.\n   Federation:  A\
    \ set of fileserver collections and singleton\n      fileservers that use a common\
    \ set of interfaces and protocols in\n      order to provide to file-access clients\
    \ a federated namespace\n      accessible through a file system access protocol.\n\
    \   Fileserver:  A server that stores physical fileset data or refers\n      file-access\
    \ clients to other fileservers.  A fileserver provides\n      access to its shared\
    \ file system data via a file-access protocol.\n   Fileset:  The abstraction of\
    \ a set of files and the directory tree\n      that contains them.  A fileset\
    \ is the fundamental unit of data\n      management in the federation.\n     \
    \ Note that all files within a fileset are descendants of one\n      directory\
    \ and that filesets do not span file systems.\n   File System:  A self-contained\
    \ unit of export for a fileserver and\n      the mechanism used to implement filesets.\
    \  The fileset does not\n      need to be rooted at the root of the file system,\
    \ nor at the\n      export point for the file system.\n      A single file system\
    \ MAY implement more than one fileset, if the\n      file-access protocol and\
    \ the fileserver permit this.\n   File-Access Protocol:  A network file system\
    \ access protocol such as\n      the Network File System (NFS) version 4 [RFC7530]\
    \ or the Common\n      Internet File System (CIFS) [MS-SMB] [MS-SMB2] [MS-CIFS].\n\
    \   FSL (Fileset Location):  The location of the implementation of a\n      fileset\
    \ at a particular moment in time.  An FSL MUST be something\n      that can be\
    \ translated into a protocol-specific description of a\n      resource that a\
    \ file-access client can access directly, such as an\n      fs_locations attribute\
    \ (for NFSv4) or a share name (for CIFS).\n   FSN (Fileset Name):  A platform-independent\
    \ and globally unique name\n      for a fileset.  Two FSLs that implement replicas\
    \ of the same\n      fileset MUST have the same FSN, and if a fileset is migrated\
    \ from\n      one location to another, the FSN of that fileset MUST remain the\n\
    \      same.\n   Junction:  A file system object used to link a directory name\
    \ in the\n      current fileset with an object within another fileset.  The\n\
    \      server-side \"link\" from a leaf node in one fileset to the root of\n \
    \     another fileset.\n   Namespace:  A filename/directory tree that a sufficiently\
    \ authorized\n      file-access client can observe.\n   NSDB (Namespace Database)\
    \ Service:  A service that maps FSNs to FSLs.\n      The NSDB may also be used\
    \ to store other information, such as\n      annotations for these mappings and\
    \ their components.\n   NSDB Node:  The name or location of a server that implements\
    \ part of\n      the NSDB service and is responsible for keeping track of the\
    \ FSLs\n      (and related information) that implement a given partition of the\n\
    \      FSNs.\n   Referral:  A server response to a file-access client access that\n\
    \      directs the client to evaluate the current object as a reference\n    \
    \  to an object at a different location (specified by an FSL) in\n      another\
    \ fileset and possibly hosted on another fileserver.  The\n      client re-attempts\
    \ the access to the object at the new location.\n   Replica:  A redundant implementation\
    \ of a fileset.  Each replica\n      shares the same FSN but has a different FSL.\n\
    \      Replicas may be used to increase availability or performance.\n      Updates\
    \ to replicas of the same fileset MUST appear to occur in\n      the same order;\
    \ therefore, each replica is self-consistent at any\n      moment.\n      We do\
    \ not assume that updates to each replica occur\n      simultaneously.  If a replica\
    \ is offline or unreachable, the other\n      replicas may be updated.\n   Server\
    \ Collection:  A set of fileservers administered as a unit.  A\n      server collection\
    \ may be administered with vendor-specific\n      software.\n      The namespace\
    \ provided by a server collection could be part of the\n      federated namespace.\n\
    \   Singleton Server:  A server collection containing only one server; a\n   \
    \   stand-alone fileserver.\n"
- title: 1.2.  Requirements Language
  contents:
  - "1.2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 2.  Protocol
  contents:
  - "2.  Protocol\n   The Remote Procedure Call (RPC) protocol used to convey\n  \
    \ administration operations is the Open Network Computing (ONC) RPC\n   protocol\
    \ [RFC5531].  The data structures used for the parameters and\n   return values\
    \ of these procedures are expressed in this document in\n   External Data Representation\
    \ (XDR) [RFC4506].\n   The XDR definitions below are formatted to allow the reader\
    \ to easily\n   extract them from the document.  The reader can use the following\n\
    \   shell script to extract the definitions:\n             <CODE BEGINS>\n   \
    \          #!/bin/sh\n             grep '^ *///' | sed 's?^ */// ??' | sed 's?^\
    \ *///$??'\n             <CODE ENDS>\n   If the above script is stored in a file\
    \ called \"extract.sh\" and this\n   document is in a file called \"spec.txt\"\
    , then the reader can do:\n             <CODE BEGINS>\n             sh extract.sh\
    \ < spec.txt > admin1.xdr\n             <CODE ENDS>\n   The effect of the script\
    \ is to remove leading white space from each\n   line, plus a sentinel sequence\
    \ of \"///\".\n   The protocol definition in XDR notation is shown below.  We\
    \ begin by\n   defining basic constants and structures used by the protocol. \
    \ We\n   then present the procedures defined by the protocol.\n   <CODE BEGINS>\n\
    \    /// /*\n    ///  * Copyright (c) 2015 IETF Trust and the persons identified\n\
    \    ///  * as authors of the code.  All rights reserved.\n    ///  *\n    ///\
    \  * The authors of the code are:\n    ///  * J. Lentini, C. Everhart, D. Ellard,\
    \ R. Tewari, and M. Naik.\n    ///  *\n    ///  * Redistribution and use in source\
    \ and binary forms, with\n    ///  * or without modification, are permitted provided\
    \ that the\n    ///  * following conditions are met:\n    ///  *\n    ///  * -\
    \ Redistributions of source code must retain the above\n    ///  *   copyright\
    \ notice, this list of conditions and the\n    ///  *   following disclaimer.\n\
    \    ///  *\n    ///  * - Redistributions in binary form must reproduce the above\n\
    \    ///  *   copyright notice, this list of conditions and the\n    ///  *  \
    \ following disclaimer in the documentation and/or other\n    ///  *   materials\
    \ provided with the distribution.\n    ///  *\n    ///  * - Neither the name of\
    \ Internet Society, IETF or IETF\n    ///  *   Trust, nor the names of specific\
    \ contributors, may be\n    ///  *   used to endorse or promote products derived\
    \ from this\n    ///  *   software without specific prior written permission.\n\
    \    ///  *\n    ///  *   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS\n\
    \    ///  *   AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED\n    /// \
    \ *   WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    ///  *   IMPLIED WARRANTIES\
    \ OF MERCHANTABILITY AND FITNESS\n    ///  *   FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\
    \  IN NO\n    ///  *   EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n  \
    \  ///  *   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n    ///  *\
    \   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n    ///  *   NOT LIMITED\
    \ TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n    ///  *   SERVICES; LOSS OF USE,\
    \ DATA, OR PROFITS; OR BUSINESS\n    ///  *   INTERRUPTION) HOWEVER CAUSED AND\
    \ ON ANY THEORY OF\n    ///  *   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\
    \    ///  *   OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING\n    ///  *\
    \   IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n    ///  *   ADVISED\
    \ OF THE POSSIBILITY OF SUCH DAMAGE.\n    ///  */\n    ///\n    /// enum FedFsStatus\
    \ {\n    ///  FEDFS_OK                                 = 0,\n    ///  FEDFS_ERR_ACCESS\
    \                         = 1,\n    ///  FEDFS_ERR_BADCHAR                   \
    \     = 2,\n    ///  FEDFS_ERR_BADNAME                        = 3,\n    ///  FEDFS_ERR_NAMETOOLONG\
    \                    = 4,\n    ///  FEDFS_ERR_LOOP                           =\
    \ 5,\n    ///  FEDFS_ERR_BADXDR                         = 6,\n    ///  FEDFS_ERR_EXIST\
    \                          = 7,\n    ///  FEDFS_ERR_INVAL                    \
    \      = 8,\n    ///  FEDFS_ERR_IO                             = 9,\n    /// \
    \ FEDFS_ERR_NOSPC                          = 10,\n    ///  FEDFS_ERR_NOTJUNCT\
    \                       = 11,\n    ///  FEDFS_ERR_NOTLOCAL                   \
    \    = 12,\n    ///  FEDFS_ERR_PERM                           = 13,\n    /// \
    \ FEDFS_ERR_ROFS                           = 14,\n    ///  FEDFS_ERR_SVRFAULT\
    \                       = 15,\n    ///  FEDFS_ERR_NOTSUPP                    \
    \    = 16,\n    ///  FEDFS_ERR_NSDB_ROUTE                     = 17,\n    /// \
    \ FEDFS_ERR_NSDB_DOWN                      = 18,\n    ///  FEDFS_ERR_NSDB_CONN\
    \                      = 19,\n    ///  FEDFS_ERR_NSDB_AUTH                   \
    \   = 20,\n    ///  FEDFS_ERR_NSDB_LDAP                      = 21,\n    ///  FEDFS_ERR_NSDB_LDAP_VAL\
    \                  = 22,\n    ///  FEDFS_ERR_NSDB_NONCE                     =\
    \ 23,\n    ///  FEDFS_ERR_NSDB_NOFSN                     = 24,\n    ///  FEDFS_ERR_NSDB_NOFSL\
    \                     = 25,\n    ///  FEDFS_ERR_NSDB_RESPONSE                \
    \  = 26,\n    ///  FEDFS_ERR_NSDB_FAULT                     = 27,\n    ///  FEDFS_ERR_NSDB_PARAMS\
    \                    = 28,\n    ///  FEDFS_ERR_NSDB_LDAP_REFERRAL            \
    \ = 29,\n    ///  FEDFS_ERR_NSDB_LDAP_REFERRAL_VAL         = 30,\n    ///  FEDFS_ERR_NSDB_LDAP_REFERRAL_NOTFOLLOWED\
    \ = 31,\n    ///  FEDFS_ERR_NSDB_PARAMS_LDAP_REFERRAL      = 32,\n    ///  FEDFS_ERR_PATH_TYPE_UNSUPP\
    \               = 33,\n    ///  FEDFS_ERR_DELAY                          = 34,\n\
    \    ///  FEDFS_ERR_NO_CACHE                       = 35,\n    ///  FEDFS_ERR_UNKNOWN_CACHE\
    \                  = 36,\n    ///  FEDFS_ERR_NO_CACHE_UPDATE                =\
    \ 37\n    /// };\n    ///\n    /// typedef opaque                 utf8string<>;\n\
    \    /// typedef utf8string             ascii_REQUIRED4;\n    /// typedef utf8string\
    \             utf8val_REQUIRED4;\n    ///\n    /// typedef opaque FedFsUuid[16];\n\
    \    ///\n    /// struct FedFsNsdbName {\n    ///         unsigned int       \
    \    port;\n    ///         utf8val_REQUIRED4      hostname;\n    /// };\n   \
    \ ///\n    /// typedef ascii_REQUIRED4 FedFsPathComponent;\n    /// typedef FedFsPathComponent\
    \ FedFsPathName<>;\n    ///\n    /// struct FedFsFsn {\n    ///         FedFsUuid\
    \              fsnUuid;\n    ///         FedFsNsdbName          nsdbName;\n  \
    \  /// };\n    ///\n    /// enum FedFsFslType {\n    ///  FEDFS_NFS_FSL = 0\n\
    \    /// };\n    ///\n    /// struct FedFsNfsFsl {\n    ///         FedFsUuid\
    \              fslUuid;\n    ///         unsigned int           port;\n    ///\
    \         utf8val_REQUIRED4      hostname;\n    ///         FedFsPathName    \
    \      path;\n    /// };\n    ///\n    /// union FedFsFsl switch(FedFsFslType\
    \ type) {\n    ///  case FEDFS_NFS_FSL:\n    ///         FedFsNfsFsl         \
    \   nfsFsl;\n    /// };\n    ///\n    /// enum FedFsPathType {\n    ///  FEDFS_PATH_SYS\
    \ = 0,\n    ///  FEDFS_PATH_NFS = 1\n    /// };\n    ///\n    /// union FedFsPath\
    \ switch(FedFsPathType type) {\n    ///  case FEDFS_PATH_SYS: /* administrative\
    \ path */\n    ///         FedFsPathName          adminPath;\n    ///  case FEDFS_PATH_NFS:\
    \ /* NFS namespace path */\n    ///         FedFsPathName          nfsPath;\n\
    \    /// };\n    ///\n    /// struct FedFsCreateArgs {\n    ///         FedFsPath\
    \              path;\n    ///         FedFsFsn               fsn;\n    /// };\n\
    \    ///\n    /// enum FedFsResolveType {\n    ///  FEDFS_RESOLVE_NONE  = 0,\n\
    \    ///  FEDFS_RESOLVE_CACHE = 1,\n    ///  FEDFS_RESOLVE_NSDB  = 2\n    ///\
    \ };\n    ///\n    /// struct FedFsLookupArgs {\n    ///         FedFsPath   \
    \           path;\n    ///         FedFsResolveType       resolve;\n    /// };\n\
    \    ///\n    /// struct FedFsLookupResOk {\n    ///         FedFsFsn        \
    \       fsn;\n    ///         FedFsFsl               fsl<>;\n    /// };\n    ///\n\
    \    /// struct FedFsLookupResReferralVal {\n    ///         FedFsNsdbName   \
    \       targetNsdb;\n    ///         unsigned int           ldapResultCode;\n\
    \    /// };\n    ///\n    /// union FedFsLookupRes switch (FedFsStatus status)\
    \ {\n    ///  case FEDFS_OK:\n    ///  case FEDFS_ERR_NO_CACHE_UPDATE:\n    ///\
    \         FedFsLookupResOk           resok;\n    ///  case FEDFS_ERR_NSDB_LDAP_VAL:\n\
    \    ///         unsigned int               ldapResultCode;\n    ///  case FEDFS_ERR_NSDB_LDAP_REFERRAL:\n\
    \    ///  case FEDFS_ERR_NSDB_PARAMS_LDAP_REFERRAL:\n    ///         FedFsNsdbName\
    \              targetNsdb;\n    ///  case FEDFS_ERR_NSDB_LDAP_REFERRAL_VAL:\n\
    \    ///         FedFsLookupResReferralVal  resReferralVal;\n    ///  default:\n\
    \    ///         void;\n    /// };\n    ///\n    /// enum FedFsConnectionSec {\n\
    \    ///  FEDFS_SEC_NONE = 0,\n    ///  FEDFS_SEC_TLS = 1 /* StartTLS mechanism;\
    \ RFC 4513, Section 3 */\n    /// };\n    ///\n    /// union FedFsNsdbParams switch\
    \ (FedFsConnectionSec secType) {\n    ///  case FEDFS_SEC_TLS:\n    ///      \
    \   opaque                   secData<>;\n    ///  default:\n    ///         void;\n\
    \    /// };\n    ///\n    /// struct FedFsSetNsdbParamsArgs {\n    ///       \
    \  FedFsNsdbName            nsdbName;\n    ///         FedFsNsdbParams       \
    \   params;\n    /// };\n    ///\n    /// union FedFsGetNsdbParamsRes switch (FedFsStatus\
    \ status) {\n    ///  case FEDFS_OK:\n    ///         FedFsNsdbParams        \
    \  params;\n    ///  default:\n    ///         void;\n    /// };\n    ///\n  \
    \  /// union FedFsGetLimitedNsdbParamsRes switch (FedFsStatus status) {\n    ///\
    \  case FEDFS_OK:\n    ///         FedFsConnectionSec       secType;\n    ///\
    \  default:\n    ///         void;\n    /// };\n    ///\n    /// program FEDFS_PROG\
    \ {\n    ///  version FEDFS_V1 {\n    ///      void FEDFS_NULL(void) = 0;\n  \
    \  ///      FedFsStatus FEDFS_CREATE_JUNCTION(\n    ///                   FedFsCreateArgs)\
    \ = 1;\n    ///      FedFsStatus FEDFS_DELETE_JUNCTION(\n    ///             \
    \      FedFsPath) = 2;\n    ///      FedFsLookupRes FEDFS_LOOKUP_JUNCTION(\n \
    \   ///                   FedFsLookupArgs) = 3;\n    ///      FedFsStatus FEDFS_CREATE_REPLICATION(\n\
    \    ///                   FedFsCreateArgs) = 7;\n    ///      FedFsStatus FEDFS_DELETE_REPLICATION(\n\
    \    ///                   FedFsPath) = 8;\n    ///      FedFsLookupRes FEDFS_LOOKUP_REPLICATION(\n\
    \    ///                   FedFsLookupArgs) = 9;\n    ///      FedFsStatus FEDFS_SET_NSDB_PARAMS(\n\
    \    ///                   FedFsSetNsdbParamsArgs) = 4;\n    ///      FedFsGetNsdbParamsRes\
    \ FEDFS_GET_NSDB_PARAMS(\n    ///                   FedFsNsdbName) = 5;\n    ///\
    \      FedFsGetLimitedNsdbParamsRes FEDFS_GET_LIMITED_NSDB_PARAMS(\n    ///  \
    \                 FedFsNsdbName) = 6;\n    ///  } = 1;\n    /// } = 100418;\n\
    \   <CODE ENDS>\n"
- title: 3.  Error Values
  contents:
  - "3.  Error Values\n   The results of successful operations will consist of a status\
    \ of\n   FEDFS_OK.  The results of unsuccessful operations will begin with a\n\
    \   status, other than FEDFS_OK, that indicates the reason why the\n   operation\
    \ failed.\n   Many of the error status names and meanings (and the prose for their\n\
    \   descriptions) are taken from the specification for NFSv4 [RFC7530].\n   Note,\
    \ however, that the numeric values for the status codes are\n   different.  For\
    \ example, the name and meaning of FEDFS_ERR_ACCESS was\n   inspired by NFSv4's\
    \ NFS4ERR_ACCESS, but their numeric values are\n   different.\n   The status of\
    \ an unsuccessful operation will generally only indicate\n   the first error encountered\
    \ during the attempt to execute the\n   operation.\n   FEDFS_OK:  No errors were\
    \ encountered.  The operation was a success.\n   FEDFS_ERR_ACCESS:  Permission\
    \ denied.  The caller does not have the\n      correct permission to perform the\
    \ requested operation.\n   FEDFS_ERR_BADCHAR:  A UTF-8 string contains a character\
    \ that is not\n      supported by the server in the context in which it being\
    \ used.\n   FEDFS_ERR_BADNAME:  A name string in a request consisted of valid\n\
    \      UTF-8 characters supported by the server, but the name is not\n      supported\
    \ by the server as a valid name for the current operation.\n   FEDFS_ERR_NAMETOOLONG:\
    \  Returned when the pathname in an operation\n      exceeds the server's implementation\
    \ limit.\n   FEDFS_ERR_LOOP:  Returned when too many symbolic links were\n   \
    \   encountered in resolving pathname.\n   FEDFS_ERR_BADXDR:  The server encountered\
    \ an XDR decoding error while\n      processing an operation.\n   FEDFS_ERR_EXIST:\
    \  The junction specified already exists.\n   FEDFS_ERR_INVAL:  Invalid argument\
    \ for an operation.\n   FEDFS_ERR_IO:  A hard error occurred while processing\
    \ the requested\n      operation.\n   FEDFS_ERR_NOSPC:  The requested operation\
    \ would have caused the\n      server's file system to exceed some limit (for\
    \ example, if there\n      is a fixed number of junctions per fileset or per server).\n\
    \   FEDFS_ERR_NOTJUNCT:  The caller specified a path that does not end in\n  \
    \    a junction as the operand for an operation that requires the last\n     \
    \ component of the path to be a junction.\n   FEDFS_ERR_NOTLOCAL:  The caller\
    \ specified a path that contains a\n      junction in any position other than\
    \ the last component.\n   FEDFS_ERR_PERM:  The operation was not allowed because\
    \ the caller is\n      either not a privileged user or not the owner of an object\
    \ that\n      would be modified by the operation.\n   FEDFS_ERR_ROFS:  A modifying\
    \ operation was attempted on a read-only\n      file system.\n   FEDFS_ERR_SVRFAULT:\
    \  An unanticipated non-protocol error occurred on\n      the server.\n   FEDFS_ERR_NSDB_ROUTE:\
    \  The fileserver was unable to find a route to\n      the NSDB.\n   FEDFS_ERR_NSDB_DOWN:\
    \  The fileserver determined that the NSDB was\n      down.\n   FEDFS_ERR_NSDB_CONN:\
    \  The fileserver was unable to establish a\n      connection with the NSDB.\n\
    \   FEDFS_ERR_NSDB_AUTH:  The fileserver was unable to authenticate and\n    \
    \  establish a secure connection with the NSDB.\n   FEDFS_ERR_NSDB_LDAP:  A Lightweight\
    \ Directory Access Protocol (LDAP)\n      error occurred on the connection between\
    \ the fileserver and NSDB.\n   FEDFS_ERR_NSDB_LDAP_VAL:  Indicates the same error\
    \ as\n      FEDFS_ERR_NSDB_LDAP and allows the LDAP protocol error value to be\n\
    \      returned back to an ADMIN protocol client.\n   FEDFS_ERR_NSDB_NONCE:  The\
    \ fileserver was unable to locate the NSDB\n      Container Entry (NCE) in the\
    \ appropriate NSDB.\n   FEDFS_ERR_NSDB_NOFSN:  The fileserver was unable to locate\
    \ the given\n      FSN in the appropriate NSDB.\n   FEDFS_ERR_NSDB_NOFSL:  The\
    \ fileserver was unable to locate any FSLs\n      for the given FSN in the appropriate\
    \ NSDB.\n   FEDFS_ERR_NSDB_RESPONSE:  The fileserver received a malformed\n  \
    \    response from the NSDB.  This includes situations when an NSDB\n      entry\
    \ (e.g., FSN or FSL) is missing a required attribute.\n   FEDFS_ERR_NSDB_FAULT:\
    \  An unanticipated error related to the NSDB\n      occurred.\n   FEDFS_ERR_NSDB_PARAMS:\
    \  The fileserver does not have any connection\n      parameters on record for\
    \ the specified NSDB.\n   FEDFS_ERR_NSDB_LDAP_REFERRAL:  The fileserver received\
    \ an LDAP\n      referral that it was unable to follow.\n   FEDFS_ERR_NSDB_LDAP_REFERRAL_VAL:\
    \  Indicates the same error as\n      FEDFS_ERR_NSDB_LDAP_REFERRAL and allows\
    \ the LDAP protocol error\n      value to be returned back to an ADMIN protocol\
    \ client.\n   FEDFS_ERR_NSDB_LDAP_REFERRAL_NOTFOLLOWED:  The fileserver received\
    \ an\n      LDAP referral that it chose not to follow, either because the\n  \
    \    fileserver does not support following LDAP referrals or LDAP\n      referral\
    \ following is disabled.\n   FEDFS_ERR_NSDB_PARAMS_LDAP_REFERRAL:  The fileserver\
    \ received an LDAP\n      referral that it chose not to follow because the fileserver\
    \ had no\n      NSDB parameters for the NSDB targeted by the LDAP referral.\n\
    \   FEDFS_ERR_PATH_TYPE_UNSUPP:  The fileserver does not support the\n      specified\
    \ FedFsPathType value.\n   FEDFS_ERR_NOTSUPP:  The fileserver does not support\
    \ the specified\n      procedure.\n   FEDFS_ERR_DELAY:  The fileserver initiated\
    \ the request but was not\n      able to complete it in a timely fashion.  The\
    \ ADMIN protocol\n      client should wait and then try the request with a new\
    \ RPC\n      transaction ID.\n   FEDFS_ERR_NO_CACHE:  The fileserver does not\
    \ implement an FSN-to-FSL\n      cache.\n   FEDFS_ERR_UNKNOWN_CACHE:  The software\
    \ receiving the ONC RPC request\n      is unaware if the fileserver implements\
    \ an FSN-to-FSL cache or is\n      unable to communicate with the FSN-to-FSL cache\
    \ if it exists.\n   FEDFS_ERR_NO_CACHE_UPDATE:  The fileserver was unable to update\
    \ its\n      FSN-to-FSL cache.\n"
- title: 4.  Data Types
  contents:
  - "4.  Data Types\n   The basic data types defined above are formatted as follows:\n\
    \   FedFsUuid:  A universally unique identifier (UUID) as described in\n     \
    \ [RFC4122] as a version 4 UUID.  The UUID MUST be formatted in\n      network\
    \ byte order.\n   FedFsNsdbName:  A (hostname, port) pair.\n      The hostname\
    \ is a variable-length UTF-8 string that represents an\n      NSDB's network location\
    \ in DNS name notation.  It SHOULD be\n      prepared using the domain name rules\
    \ defined in Section 12.6\n      (\"Types with Processing Defined by Other Internet\
    \ Areas\") of\n      [RFC7530].  The DNS name MUST be represented using a fully\n\
    \      qualified domain name.\n      The port value in the FedFsNsdbName indicates\
    \ the LDAP port on the\n      NSDB (see [RFC4511]).  The value MUST be in the\
    \ range 0 to 65535.\n      A value of 0 indicates that the standard LDAP port\
    \ number, 389,\n      MUST be assumed.\n      FSNs are immutable and invariant.\
    \  The attributes of an FSN,\n      including the fedfsNsdbName, are expected\
    \ to remain constant.\n      Therefore, a FedFsNsdbName MUST NOT contain a network\
    \ address,\n      such as an IPv4 or IPv6 address, as this would indefinitely\
    \ assign\n      the network address.\n   FedFsPathComponent:  A case-sensitive\
    \ UTF-8 string containing a file\n      system path component.  The component\
    \ names of an NFSv4 pathname\n      MUST be prepared using the component name\
    \ rules defined in\n      Section 12 (\"Internationalization\") of [RFC7530] prior\
    \ to encoding\n      the path component of an NFS URI.\n   FedFsPathName:  A variable-length\
    \ array of FedFsPathComponent values\n      representing a file system path. \
    \ The path's first component is\n      stored at the first position of the array,\
    \ the second component is\n      stored at the second position of the array, and\
    \ so on.\n      The path \"/\" MUST be encoded as an array with zero components.\n\
    \      A FedFsPathName MUST NOT contain any zero-length components.\n   FedFsPath:\
    \  A pathname container.  The format and semantics of the\n      pathname are\
    \ defined by the FedFsPathType value.\n   FedFsPathType:  The type-specific description\
    \ of a pathname.\n      A FEDFS_PATH_SYS is an implementation-dependent administrative\n\
    \      pathname.  For example, it could be a local file system path.\n      A\
    \ FEDFS_PATH_NFS is a pathname in the NFSv4 server's single-server\n      namespace.\n\
    \   FedFsNsdbParams:  A set of parameters for connecting to an NSDB.\n      Conceptually,\
    \ the fileserver contains a data structure that maps\n      an NSDB name (DNS\
    \ name and port value) to these LDAP connection\n      parameters.\n      The\
    \ secType field indicates the security mechanism that MUST be\n      used to protect\
    \ all connections to the NSDB with the connection\n      parameters.\n      A\
    \ value of FEDFS_SEC_NONE indicates that a transport security\n      mechanism\
    \ MUST NOT be used when connecting to the NSDB.  In this\n      case, the secData\
    \ array will have a length of zero.\n      A value of FEDFS_SEC_TLS indicates\
    \ that the StartTLS security\n      mechanism [RFC4513] MUST be used to protect\
    \ all connections to the\n      NSDB.  In this case, the secData array will contain\
    \ an X.509v3\n      root certificate in binary DER format [RFC5280] fulfilling\
    \ the\n      Transport Layer Security (TLS) requirement that root keys be\n  \
    \    distributed independently from the TLS protocol.  The certificate\n     \
    \ MUST be used by the fileserver as a trust anchor to validate the\n      NSDB's\
    \ TLS server certificate list chain (see Section 7.4.2 of\n      [RFC5246]) and\
    \ thus authenticate the identity of the NSDB.  The\n      certificate could be\
    \ that of a certificate authority or a self-\n      signed certificate.  To ensure\
    \ that this security configuration\n      information does not cause vulnerabilities\
    \ for other services,\n      trust anchors provided through secData MUST only\
    \ be used for the\n      NSDB service (as opposed to being installed as system-wide\
    \ trust\n      anchors for other services).  Most popular TLS libraries provide\n\
    \      ways in which this can be done, such as denoting a private file\n     \
    \ system location for the certificates.\n"
- title: 4.1.  FedFsNsdbName Equality
  contents:
  - "4.1.  FedFsNsdbName Equality\n   Two FedFsNsdbNames are considered equal if their\
    \ respective hostname\n   and port fields contain the same values.  The only exception\
    \ to this\n   rule is that a value of 0 in the port field always matches the\n\
    \   standard LDAP port number, 389.\n   Therefore, the FedFsNsdbName \"(nsdb.example.com,\
    \ 0)\" is considered\n   equal to \"(nsdb.example.com, 389)\" but not equal to\n\
    \   \"(nsdb.example.com, 1066)\" since the port numbers are different or\n   \"\
    (nsdb.foo.example.com, 389)\" since the hostnames are different.\n"
- title: 5.  Procedures
  contents:
  - "5.  Procedures\n   The procedures defined in Section 2 are described in detail\
    \ in the\n   following sections.\n   Fileservers that participate as \"internal\"\
    \ nodes in the federated\n   namespace MUST implement the following procedures:\n\
    \      FEDFS_NULL\n      FEDFS_CREATE_JUNCTION\n      FEDFS_DELETE_JUNCTION\n\
    \      FEDFS_LOOKUP_JUNCTION\n      FEDFS_SET_NSDB_PARAMS\n      FEDFS_GET_NSDB_PARAMS\n\
    \      FEDFS_GET_LIMITED_NSDB_PARAMS\n   Furthermore, they SHOULD implement the\
    \ following procedures:\n      FEDFS_CREATE_REPLICATION\n      FEDFS_DELETE_REPLICATION\n\
    \      FEDFS_LOOKUP_REPLICATION\n   Fileservers that participate as \"leaf\" nodes\
    \ in the namespace (i.e.,\n   fileservers that host filesets that are the target\
    \ of junctions but\n   that do not contain any junctions) are not required to\
    \ implement any\n   of these operations.\n   Operations that modify the state\
    \ of a replicated fileset MUST result\n   in the update of all of the replicas\
    \ in a consistent manner.\n   Ideally, all of the replicas SHOULD be updated before\
    \ any operation\n   returns.  If one or more of the replicas are unavailable,\
    \ the\n   operation MAY succeed, but the changes MUST be applied before the\n\
    \   unavailable replicas are brought back online.  We assume that\n   replicas\
    \ are updated via some protocol that permits state changes to\n   be reflected\
    \ consistently across the set of replicas in such a manner\n   that the replicas\
    \ will converge to a consistent state within a\n   bounded number of successful\
    \ message exchanges between the servers\n   hosting the replicas.\n"
- title: 5.1.  FEDFS_NULL
  contents:
  - '5.1.  FEDFS_NULL

    '
- title: 5.1.1.  Synopsis
  contents:
  - "5.1.1.  Synopsis\n   The standard NULL procedure.\n"
- title: 5.1.2.  Description
  contents:
  - "5.1.2.  Description\n   The null RPC, which is included, by convention, in every\
    \ ONC RPC\n   protocol.  This procedure does not take any arguments and does not\n\
    \   produce a result.\n"
- title: 5.1.3.  Errors
  contents:
  - "5.1.3.  Errors\n      None.\n"
- title: 5.2.  FEDFS_CREATE_JUNCTION
  contents:
  - '5.2.  FEDFS_CREATE_JUNCTION

    '
- title: 5.2.1.  Synopsis
  contents:
  - "5.2.1.  Synopsis\n   Create a new junction from some location on the server (defined\
    \ as a\n   pathname) to an FSN.\n"
- title: 5.2.2.  Description
  contents:
  - "5.2.2.  Description\n   This operation creates a junction from a server-relative\
    \ path to a\n   (potentially) remote fileset named by the given FSN.\n   The junction\
    \ directory on the server is identified by a pathname in\n   the form of an array\
    \ of one or more UTF-8 path component strings.  It\n   is not required that this\
    \ path be accessible in any other manner\n   (e.g., to a file-access client).\
    \  This path does not appear in the\n   federated namespace, except by coincidence;\
    \ there is no requirement\n   that the global namespace parallel the server namespace,\
    \ nor is it\n   required that this path be relative to the server pseudo-root.\
    \  It\n   does not need to be a path that is accessible via NFS (although the\n\
    \   junction will be of limited utility if the directory specified by the\n  \
    \ path is not also accessible via NFS).\n   If the fileset is read-only, then\
    \ this operation MUST indicate this\n   with a status of FEDFS_ERR_ROFS.\n   If\
    \ the path contains a character that is not supported by the server,\n   then\
    \ status FEDFS_ERR_BADCHAR MUST be returned.\n   The path is REQUIRED to exist\
    \ and be completely local to the server.\n   It MUST NOT contain a junction. \
    \ If the last component of the path is\n   a junction (i.e., this operation is\
    \ attempting to create a junction\n   where one already exists), then this operation\
    \ MUST return the error\n   FEDFS_ERR_EXIST (even if the requested junction is\
    \ identical to the\n   current junction).  If any other component of the path\
    \ is a junction,\n   then this operation MUST fail with status FEDFS_ERR_NOTLOCAL.\
    \  The\n   path might contain a symbolic link (if supported by the local\n   server),\
    \ but the traversal of the path MUST remain within the server-\n   local namespace.\n\
    \   If any component of the path does not exist, then the operation MUST\n   fail\
    \ with status FEDFS_ERR_INVAL.\n   The server MAY enforce the local permissions\
    \ on the path, including\n   the final component.  If a server wishes to report\
    \ that a path cannot\n   be traversed because of insufficient permissions, or\
    \ the final\n   component is an unexecutable or unwritable directory, then the\n\
    \   operation MUST fail with status FEDFS_ERR_ACCESS.\n   The operation SHOULD\
    \ fail with status FEDFS_ERR_NSDB_PARAMS if the\n   fileserver does not have any\
    \ connection parameters on record for the\n   specified NSDB, or the server may\
    \ allow the operation to proceed\n   using some set of default NSDB connection\
    \ parameters.\n   The association between the path and the FSN MUST be durable\
    \ before\n   the operation returns successfully.  If the operation return code\n\
    \   indicates success, then the junction was successfully created and is\n   immediately\
    \ accessible.\n   If successful, subsequent references via NFSv4.0 [RFC7530] or\
    \ NFSv4.1\n   [RFC5661] clients to the directory that has been replaced by the\n\
    \   junction will result in a referral to a current location of the\n   target\
    \ fileset [RFC7532].\n   The effective permissions of the directory that is converted,\
    \ by this\n   operation, into a junction are the permissions of the root directory\n\
    \   of the target fileset.  The original permissions of the directory\n   (and\
    \ any other attributes it might have) are subsumed by the\n   junction.\n   This\
    \ operation does not create a fileset at the location targeted by\n   the junction.\
    \  If the target fileset does not exist, the junction\n   will still be created.\
    \  An NFS client will discover the missing\n   fileset when it traverses the junction.\n"
- title: 5.2.3.  Errors
  contents:
  - "5.2.3.  Errors\n      FEDFS_ERR_ACCESS\n      FEDFS_ERR_BADCHAR\n      FEDFS_ERR_BADNAME\n\
    \      FEDFS_ERR_NAMETOOLONG\n      FEDFS_ERR_LOOP\n      FEDFS_ERR_BADXDR\n \
    \     FEDFS_ERR_EXIST\n      FEDFS_ERR_INVAL\n      FEDFS_ERR_IO\n      FEDFS_ERR_NOSPC\n\
    \      FEDFS_ERR_NOTLOCAL\n      FEDFS_ERR_PERM\n      FEDFS_ERR_ROFS\n      FEDFS_ERR_SVRFAULT\n\
    \      FEDFS_ERR_PATH_TYPE_UNSUPP\n      FEDFS_ERR_NOTSUPP\n      FEDFS_ERR_DELAY\n"
- title: 5.3.  FEDFS_DELETE_JUNCTION
  contents:
  - '5.3.  FEDFS_DELETE_JUNCTION

    '
- title: 5.3.1.  Synopsis
  contents:
  - "5.3.1.  Synopsis\n   Delete an existing junction from some location on the server\
    \ (defined\n   as a pathname).\n"
- title: 5.3.2.  Description
  contents:
  - "5.3.2.  Description\n   This operation removes a junction specified by a server-relative\n\
    \   path.\n   As with FEDFS_CREATE_JUNCTION, the junction on the server is\n \
    \  identified by a pathname in the form of an array of one or more UTF-8\n   path\
    \ component strings.  It is not required that this path be\n   accessible in any\
    \ other manner (e.g., to a file-access client).  This\n   path does not appear\
    \ in the federated namespace, except by\n   coincidence; there is no requirement\
    \ that the global namespace\n   reflect the server namespace, nor is it required\
    \ that this path be\n   relative to the server pseudo-root.  It does not need\
    \ to be a path\n   that is accessible via NFS.\n   If the fileset is read-only,\
    \ then this operation MUST indicate this\n   with a status of FEDFS_ERR_ROFS.\n\
    \   If the path contains a character that is not supported by the server,\n  \
    \ then status FEDFS_ERR_BADCHAR MUST be returned.\n   The path used to delete\
    \ a junction might not be the same path that\n   was used to create the junction.\
    \  If the namespace on the server has\n   changed, then the junction might now\
    \ appear at a different path than\n   where it was created.  If there is more\
    \ than one valid path to the\n   junction, any of them can be used.\n   The path\
    \ is REQUIRED to exist and be completely local to the server.\n   It MUST NOT\
    \ contain a junction, except as the final component, which\n   MUST be a junction.\
    \  If any other component of the path is a\n   junction, then this operation MUST\
    \ fail with status\n   FEDFS_ERR_NOTLOCAL.  If the last component of the path\
    \ is not a\n   junction, then this operation MUST return status FEDFS_ERR_NOTJUNCT.\n\
    \   The path might contain a symbolic link (if supported by the local\n   server),\
    \ but the traversal of the path MUST remain within the server-\n   local namespace.\n\
    \   The server MAY enforce the local permissions on the path, including\n   the\
    \ final component.  If a server wishes to report that a path cannot\n   be traversed\
    \ because of insufficient permissions, or the final\n   component is an unexecutable\
    \ or unwritable directory, then the\n   operation MUST fail with status FEDFS_ERR_ACCESS.\n\
    \   The removal of the association between the path and the FSN MUST be\n   durable\
    \ before the operation returns successfully.  If the operation\n   return code\
    \ indicates success, then the junction was successfully\n   destroyed.\n   The\
    \ effective permissions and other attributes of the directory that\n   is restored\
    \ by this operation SHOULD be identical to their value\n   prior to the creation\
    \ of the junction.\n   After removal of the junction, the fileserver MAY check\
    \ if any of its\n   existing junctions reference the NSDB specified in the removed\n\
    \   junction's FSN.  If the NSDB is not referenced, the fileserver MAY\n   delete\
    \ the connection parameters of the unreferenced NSDB.\n"
- title: 5.3.3.  Errors
  contents:
  - "5.3.3.  Errors\n      FEDFS_ERR_ACCESS\n      FEDFS_ERR_BADCHAR\n      FEDFS_ERR_BADNAME\n\
    \      FEDFS_ERR_NAMETOOLONG\n      FEDFS_ERR_LOOP\n      FEDFS_ERR_BADXDR\n \
    \     FEDFS_ERR_INVAL\n      FEDFS_ERR_IO\n      FEDFS_ERR_NOTJUNCT\n      FEDFS_ERR_NOTLOCAL\n\
    \      FEDFS_ERR_PERM\n      FEDFS_ERR_ROFS\n      FEDFS_ERR_SVRFAULT\n      FEDFS_ERR_PATH_TYPE_UNSUPP\n\
    \      FEDFS_ERR_NOTSUPP\n      FEDFS_ERR_DELAY\n"
- title: 5.4.  FEDFS_LOOKUP_JUNCTION
  contents:
  - '5.4.  FEDFS_LOOKUP_JUNCTION

    '
- title: 5.4.1.  Synopsis
  contents:
  - "5.4.1.  Synopsis\n   Query the server to discover the current value of the junction\
    \ (if\n   any) at a given path in the server namespace.\n"
- title: 5.4.2.  Description
  contents:
  - "5.4.2.  Description\n   This operation queries a server to determine whether\
    \ a given path\n   ends in a junction.  If it does, the FSN to which the junction\
    \ refers\n   and the fileserver's ability to resolve the junction is returned.\n\
    \   Ordinary NFSv4 operations do not provide any general mechanism to\n   determine\
    \ whether an object is a junction -- there is no encoding\n   specified by the\
    \ NFSv4 protocol that can represent this information.\n   As with FEDFS_CREATE_JUNCTION,\
    \ the pathname MUST be in the form of an\n   array of one or more UTF-8 path component\
    \ strings.  It is not\n   required that this path be accessible in any other manner\
    \ (e.g., to a\n   file-access client).  This path does not appear in the federated\n\
    \   namespace, except by coincidence; there is no requirement that the\n   global\
    \ namespace reflect the server namespace, nor is it required\n   that this path\
    \ be relative to the server pseudo-root.  It does not\n   need to be a path that\
    \ is accessible via NFS.\n   If the path contains a character that is not supported\
    \ by the server,\n   then status FEDFS_ERR_BADCHAR MUST be returned.\n   The path\
    \ used to look up a junction might not be the same path that\n   was used to create\
    \ the junction.  If the namespace on the server has\n   changed, then a junction\
    \ might now appear at a different path than\n   where it was created.  If there\
    \ is more than one valid path to the\n   junction, any of them might be used.\n\
    \   The path is REQUIRED to exist and be completely local to the server.\n   It\
    \ MUST NOT contain a junction, except as the final component.  If\n   any other\
    \ component of the path is a junction, then this operation\n   MUST fail with\
    \ status FEDFS_ERR_NOTLOCAL.  If the last component of\n   the path is not a junction,\
    \ then this operation MUST return the\n   status FEDFS_ERR_NOTJUNCT.  The path\
    \ might contain a symbolic link\n   (if supported by the local server), but the\
    \ traversal of the path\n   MUST remain within the server-local namespace.\n \
    \  The server MAY enforce the local permissions on the path, including\n   the\
    \ final component.  If a server wishes to report that a path cannot\n   be traversed\
    \ because of insufficient permissions, or the final\n   component is an unexecutable\
    \ or unwritable directory, then the\n   operation MUST fail with status FEDFS_ERR_ACCESS.\n\
    \   If the junction exists, the resolve parameter allows for testing the\n   fileserver's\
    \ ability to resolve the junction.  If the junction does\n   not exist, the fileserver\
    \ will ignore the resolve parameter.\n   If the junction exists and the resolve\
    \ parameter is set to\n   FEDFS_RESOLVE_NONE, the fileserver MUST NOT attempt\
    \ to resolve the\n   FSN.  This will allow an administrator to obtain the junction's\
    \ FSN\n   even if the resolution would fail.  Therefore, on success, the result\n\
    \   of a FEDFS_RESOLVE_NONE call will return a zero-length fsl list in\n   the\
    \ FedFsLookupResOk structure.\n   If the junction exists and the resolve parameter\
    \ is set to\n   FEDFS_RESOLVE_CACHE, the fileserver MUST attempt to resolve the\
    \ FSN\n   using its FSL cache, if one exists.  The fileserver MUST NOT resolve\n\
    \   the FSN by contacting the appropriate NSDB.  If the fileserver's\n   cache\
    \ does not have a mapping for the FSN in question, the result of\n   the operation\
    \ MUST be FEDFS_OK with 0 elements in the\n   FedFsLookupResOk structure's fsl\
    \ array.  The operation MAY fail with\n   status FEDFS_ERR_NO_CACHE if the fileserver\
    \ does not contain an FSN-\n   to-FSL cache or with status FEDFS_ERR_UNKNOWN_CACHE\
    \ if the state of\n   the cache is unknown.\n   If the junction exists and the\
    \ resolve parameter is set to\n   FEDFS_RESOLVE_NSDB, the fileserver MUST attempt\
    \ to resolve the FSN by\n   contacting the appropriate NSDB.  The FSN MUST NOT\
    \ be resolved using\n   cached information.  The resolution MAY fail with\n  \
    \ FEDFS_ERR_NSDB_ROUTE, FEDFS_ERR_NSDB_DOWN, FEDFS_ERR_NSDB_CONN,\n   FEDFS_ERR_NSDB_AUTH,\
    \ FEDFS_ERR_NSDB_LDAP, FEDFS_ERR_NSDB_LDAP_VAL,\n   FEDFS_ERR_NSDB_NOFSN, FEDFS_ERR_NSDB_NOFSL,\
    \ FEDFS_ERR_NSDB_NONCE,\n   FEDFS_ERR_NSDB_RESPONSE, FEDFS_ERR_NSDB_FAULT,\n \
    \  FEDFS_ERR_NSDB_LDAP_REFERRAL, FEDFS_ERR_NSDB_LDAP_REFERRAL_VAL,\n   FEDFS_ERR_NSDB_LDAP_REFERRAL_NOTFOLLOWED,\
    \ or\n   FEDFS_ERR_NSDB_PARAMS_LDAP_REFERRAL, depending on the nature of the\n\
    \   failure.\n   In the case of an LDAP failure, the fileserver MUST return either\n\
    \   FEDFS_ERR_NSDB_LDAP or FEDFS_ERR_NSDB_LDAP_VAL.  FEDFS_ERR_NSDB_LDAP\n   indicates\
    \ that an LDAP protocol error occurred during the resolution.\n   FEDFS_ERR_NSDB_LDAP_VAL\
    \ also indicates that an LDAP protocol error\n   occurred during the resolution\
    \ and allows the LDAP protocol error\n   value to be returned in the FedFsLookupRes's\
    \ ldapResultCode field\n   (see the resultCode values in Section 4.1.9 of [RFC4511]).\n\
    \   If the NSDB responds with an LDAP referral, either the Referral type\n   defined\
    \ in Section 4.1.10 of [RFC4511] or the SearchResultReference\n   type defined\
    \ in Section 4.5.3 of [RFC4511], the fileserver SHOULD\n   process the LDAP referral\
    \ using the same policies as the fileserver's\n   file-access protocol server.\
    \  The fileserver MUST indicate a failure\n   while processing the LDAP referral\
    \ using\n   FEDFS_ERR_NSDB_LDAP_REFERRAL, FEDFS_ERR_NSDB_LDAP_REFERRAL_VAL,\n\
    \   FEDFS_ERR_NSDB_LDAP_REFERRAL_NOTFOLLOWED, or\n   FEDFS_ERR_NSDB_PARAMS_LDAP_REFERRAL.\
    \  The\n   FEDFS_ERR_NSDB_LDAP_REFERRAL_VAL is analogous to the\n   FEDFS_ERR_NSDB_LDAP_VAL\
    \ error and allows the LDAP protocol error\n   value to be returned in the FedFsLookupResReferralVal's\n\
    \   ldapResultCode field.  The FEDFS_ERR_NSDB_LDAP_REFERRAL and\n   FEDFS_ERR_NSDB_PARAMS_LDAP_REFERRAL\
    \ errors allow the NSDB targeted by\n   the LDAP referral to be returned in the\
    \ FedFsLookupRes's targetNsdb\n   field.  Similarly, the FEDFS_ERR_NSDB_LDAP_REFERRAL_VAL\
    \ error\n   includes this information in the FedFsLookupResReferralVal's\n   targetNsdb.\n\
    \   If the fileserver has a cache of FSL records, the process of\n   resolving\
    \ an FSN using an NSDB SHOULD result in the cache being\n   updated.  A failure\
    \ to update the cache MAY be indicated with the\n   FEDFS_ERR_NO_CACHE_UPDATE\
    \ status value, or the operation may complete\n   successfully.\n   When updating\
    \ the cache, new FSLs for the given FSN SHOULD be added\n   to the cache, and\
    \ deleted FSLs SHOULD be removed from the cache.\n   This behavior is desirable\
    \ because it allows an administrator to\n   proactively request that the fileserver\
    \ refresh its FSL cache.  For\n   example, an administrator might like to refresh\
    \ the fileserver's\n   cache when changes are made to an FSN's FSLs.\n   If the\
    \ junction is resolved, the fileserver will include a list of\n   UUIDs for the\
    \ FSN's FSLs in the FedFsLookupResOk structure's fsl\n   array.\n"
- title: 5.4.3.  Errors
  contents:
  - "5.4.3.  Errors\n      FEDFS_ERR_ACCESS\n      FEDFS_ERR_BADCHAR\n      FEDFS_ERR_BADNAME\n\
    \      FEDFS_ERR_NAMETOOLONG\n      FEDFS_ERR_LOOP\n      FEDFS_ERR_BADXDR\n \
    \     FEDFS_ERR_INVAL\n      FEDFS_ERR_IO\n      FEDFS_ERR_NOTJUNCT\n      FEDFS_ERR_NOTLOCAL\n\
    \      FEDFS_ERR_PERM\n      FEDFS_ERR_SVRFAULT\n      FEDFS_ERR_NSDB_ROUTE\n\
    \      FEDFS_ERR_NSDB_DOWN\n      FEDFS_ERR_NSDB_CONN\n      FEDFS_ERR_NSDB_AUTH\n\
    \      FEDFS_ERR_NSDB_LDAP\n      FEDFS_ERR_NSDB_LDAP_VAL\n      FEDFS_ERR_NSDB_NONCE\n\
    \      FEDFS_ERR_NSDB_NOFSN\n      FEDFS_ERR_NSDB_NOFSL\n      FEDFS_ERR_NSDB_RESPONSE\n\
    \      FEDFS_ERR_NSDB_FAULT\n      FEDFS_ERR_NSDB_PARAMS\n      FEDFS_ERR_NSDB_LDAP_REFERRAL\n\
    \      FEDFS_ERR_NSDB_LDAP_REFERRAL_VAL\n      FEDFS_ERR_NSDB_LDAP_REFERRAL_NOTFOLLOWED\n\
    \      FEDFS_ERR_NSDB_PARAMS_LDAP_REFERRAL\n      FEDFS_ERR_PATH_TYPE_UNSUPP\n\
    \      FEDFS_ERR_NOTSUPP\n      FEDFS_ERR_DELAY\n      FEDFS_ERR_NO_CACHE\n  \
    \    FEDFS_ERR_UNKNOWN_CACHE\n      FEDFS_ERR_NO_CACHE_UPDATE\n"
- title: 5.5.  FEDFS_CREATE_REPLICATION
  contents:
  - '5.5.  FEDFS_CREATE_REPLICATION

    '
- title: 5.5.1.  Synopsis
  contents:
  - "5.5.1.  Synopsis\n   Set an FSN representing the replication information for\
    \ the fileset\n   containing the pathname.\n"
- title: 5.5.2.  Description
  contents:
  - "5.5.2.  Description\n   This operation indicates the replication information\
    \ to be returned\n   for a particular fileset.  An NFSv4 client might request\
    \ fs_locations\n   or fs_locations_info at any time to detect other copies of\
    \ this\n   fileset, and this operation supports this by supplying the FSN the\n\
    \   fileserver should use to respond.  This FSN should be associated with\n  \
    \ the entire fileset in which the path resides and should be used to\n   satisfy\
    \ fs_locations or fs_locations_info attribute requests whenever\n   no junction\
    \ is being accessed; if a junction is being accessed, the\n   FSN specified by\
    \ FEDFS_CREATE_JUNCTION will take precedence.  Setting\n   the replication FSN\
    \ on a fileset that already has a replication FSN\n   set is allowed.\n   This\
    \ operation differs from FEDFS_CREATE_JUNCTION in that it controls\n   a fileset-wide\
    \ attribute not associated with a junction.\n   The server SHOULD permit this\
    \ operation even on read-only filesets\n   but MUST return FEDFS_ERR_ROFS if this\
    \ is not possible.\n   If the path contains a character that is not supported\
    \ by the server,\n   then status FEDFS_ERR_BADCHAR MUST be returned.\n   The path\
    \ is REQUIRED to exist and be completely local to the server.\n   It MUST NOT\
    \ contain a junction.  If any component of the path is a\n   junction, then this\
    \ operation MUST fail with status\n   FEDFS_ERR_NOTLOCAL.  The path might contain\
    \ a symbolic link (if\n   supported by the local server), but the traversal of\
    \ the path MUST\n   remain within the server-local namespace.\n   The server MAY\
    \ enforce the local permissions on the path, including\n   the final component.\
    \  If a server wishes to report that a path cannot\n   be traversed because of\
    \ insufficient permissions, or the final\n   component is an unexecutable or unwritable\
    \ directory, then the\n   operation MUST fail with status FEDFS_ERR_ACCESS.\n\
    \   The operation SHOULD fail with status FEDFS_ERR_NSDB_PARAMS if the\n   fileserver\
    \ does not have any connection parameters on record for the\n   specified NSDB,\
    \ or the server may allow the operation to proceed\n   using some set of default\
    \ NSDB connection parameters.\n   The same FSN value SHOULD be associated with\
    \ all replicas of a file\n   system.  Depending on the underlying representation,\
    \ the FSN\n   associated with a file system might or might not be replicated\n\
    \   automatically with the file system replication mechanism.  Therefore,\n  \
    \ if FEDFS_CREATE_REPLICATION is used on one replica of a file system,\n   it\
    \ SHOULD be used on all replicas.\n"
- title: 5.5.3.  Errors
  contents:
  - "5.5.3.  Errors\n      FEDFS_ERR_ACCESS\n      FEDFS_ERR_BADCHAR\n      FEDFS_ERR_BADNAME\n\
    \      FEDFS_ERR_NAMETOOLONG\n      FEDFS_ERR_LOOP\n      FEDFS_ERR_BADXDR\n \
    \     FEDFS_ERR_EXIST\n      FEDFS_ERR_INVAL\n      FEDFS_ERR_IO\n      FEDFS_ERR_NOSPC\n\
    \      FEDFS_ERR_NOTLOCAL\n      FEDFS_ERR_PERM\n      FEDFS_ERR_ROFS\n      FEDFS_ERR_SVRFAULT\n\
    \      FEDFS_ERR_PATH_TYPE_UNSUPP\n      FEDFS_ERR_NOTSUPP\n      FEDFS_ERR_DELAY\n"
- title: 5.6.  FEDFS_DELETE_REPLICATION
  contents:
  - '5.6.  FEDFS_DELETE_REPLICATION

    '
- title: 5.6.1.  Synopsis
  contents:
  - "5.6.1.  Synopsis\n   Remove the replication information for the fileset containing\
    \ the\n   pathname.\n"
- title: 5.6.2.  Description
  contents:
  - "5.6.2.  Description\n   This operation removes any replication information from\
    \ the fileset\n   in which the path resides, such that NFSv4 client requests for\n\
    \   fs_locations or fs_locations_info in the absence of a junction will\n   not\
    \ be satisfied.\n   This operation differs from FEDFS_DELETE_JUNCTION in that\
    \ it controls\n   a fileset-wide attribute not associated with a junction.\n \
    \  The server SHOULD permit this operation even on read-only filesets\n   but\
    \ MUST return FEDFS_ERR_ROFS if this is not possible.\n   If the path contains\
    \ a character that is not supported by the server,\n   then status FEDFS_ERR_BADCHAR\
    \ MUST be returned.\n   The path is REQUIRED to exist and be completely local\
    \ to the server.\n   It MUST NOT contain a junction.  If any component of the\
    \ path is a\n   junction, then this operation MUST fail with status\n   FEDFS_ERR_NOTLOCAL.\n\
    \   The server MAY enforce the local permissions on the path, including\n   the\
    \ final component.  If a server wishes to report that a path cannot\n   be traversed\
    \ because of insufficient permissions, or the final\n   component is an unexecutable\
    \ or unwritable directory, then the\n   operation MUST fail with status FEDFS_ERR_ACCESS.\n"
- title: 5.6.3.  Errors
  contents:
  - "5.6.3.  Errors\n      FEDFS_ERR_ACCESS\n      FEDFS_ERR_BADCHAR\n      FEDFS_ERR_BADNAME\n\
    \      FEDFS_ERR_NAMETOOLONG\n      FEDFS_ERR_LOOP\n      FEDFS_ERR_BADXDR\n \
    \     FEDFS_ERR_INVAL\n      FEDFS_ERR_IO\n      FEDFS_ERR_NOTJUNCT\n      FEDFS_ERR_NOTLOCAL\n\
    \      FEDFS_ERR_PERM\n      FEDFS_ERR_ROFS\n      FEDFS_ERR_SVRFAULT\n      FEDFS_ERR_PATH_TYPE_UNSUPP\n\
    \      FEDFS_ERR_NOTSUPP\n      FEDFS_ERR_DELAY\n"
- title: 5.7.  FEDFS_LOOKUP_REPLICATION
  contents:
  - '5.7.  FEDFS_LOOKUP_REPLICATION

    '
- title: 5.7.1.  Synopsis
  contents:
  - "5.7.1.  Synopsis\n   Query the server to discover the current replication information\
    \ (if\n   any) at the given path.\n"
- title: 5.7.2.  Description
  contents:
  - "5.7.2.  Description\n   This operation queries a server to determine whether\
    \ a fileset\n   containing the given path has replication information associated\
    \ with\n   it.  If it does, the FSN for that replication information is\n   returned.\n\
    \   This operation differs from FEDFS_LOOKUP_JUNCTION in that it inquires\n  \
    \ about a fileset-wide attribute not associated with a junction.\n   If the path\
    \ contains a character that is not supported by the server,\n   then status FEDFS_ERR_BADCHAR\
    \ MUST be returned.\n   The path is REQUIRED to exist and be completely local\
    \ to the server.\n   It MUST NOT contain a junction.  If any component of the\
    \ path is a\n   junction, then this operation MUST fail with status\n   FEDFS_ERR_NOTLOCAL.\n\
    \   The server MAY enforce the local permissions on the path, including\n   the\
    \ final component.  If a server wishes to report that a path cannot\n   be traversed\
    \ because of insufficient permissions, or the final\n   component is an unexecutable\
    \ or unwritable directory, then the\n   operation MUST fail with status FEDFS_ERR_ACCESS.\n\
    \   Interpretation of the resolve parameter and the procedure's results\n   shall\
    \ be the same as specified in Section 5.4 for the\n   FEDFS_LOOKUP_JUNCTION operation.\n"
- title: 5.7.3.  Errors
  contents:
  - "5.7.3.  Errors\n      FEDFS_ERR_ACCESS\n      FEDFS_ERR_BADCHAR\n      FEDFS_ERR_BADNAME\n\
    \      FEDFS_ERR_NAMETOOLONG\n      FEDFS_ERR_LOOP\n      FEDFS_ERR_BADXDR\n \
    \     FEDFS_ERR_INVAL\n      FEDFS_ERR_IO\n      FEDFS_ERR_NOTJUNCT\n      FEDFS_ERR_NOTLOCAL\n\
    \      FEDFS_ERR_PERM\n      FEDFS_ERR_SVRFAULT\n      FEDFS_ERR_NSDB_ROUTE\n\
    \      FEDFS_ERR_NSDB_DOWN\n      FEDFS_ERR_NSDB_CONN\n      FEDFS_ERR_NSDB_AUTH\n\
    \      FEDFS_ERR_NSDB_LDAP\n      FEDFS_ERR_NSDB_LDAP_VAL\n      FEDFS_ERR_NSDB_NONCE\n\
    \      FEDFS_ERR_NSDB_NOFSN\n      FEDFS_ERR_NSDB_NOFSL\n      FEDFS_ERR_NSDB_RESPONSE\n\
    \      FEDFS_ERR_NSDB_FAULT\n      FEDFS_ERR_NSDB_PARAMS\n      FEDFS_ERR_NSDB_LDAP_REFERRAL\n\
    \      FEDFS_ERR_NSDB_LDAP_REFERRAL_VAL\n      FEDFS_ERR_NSDB_LDAP_REFERRAL_NOTFOLLOWED\n\
    \      FEDFS_ERR_NSDB_PARAMS_LDAP_REFERRAL\n      FEDFS_ERR_PATH_TYPE_UNSUPP\n\
    \      FEDFS_ERR_NOTSUPP\n      FEDFS_ERR_DELAY\n      FEDFS_ERR_NO_CACHE\n  \
    \    FEDFS_ERR_UNKNOWN_CACHE\n"
- title: 5.8.  FEDFS_SET_NSDB_PARAMS
  contents:
  - '5.8.  FEDFS_SET_NSDB_PARAMS

    '
- title: 5.8.1.  Synopsis
  contents:
  - "5.8.1.  Synopsis\n   Set the connection parameters for the specified NSDB.\n"
- title: 5.8.2.  Description
  contents:
  - "5.8.2.  Description\n   This operation allows an administrator to set the connection\n\
    \   parameters for a given NSDB.\n   If a record for the given NSDB does not exist,\
    \ a new record is\n   created with the specified connection parameters.\n   If\
    \ a record for the given NSDB does exist, the existing connection\n   parameters\
    \ are replaced with the specified connection parameters.\n   An NSDB is specified\
    \ using a FedFsNsdbName.  The rules in Section 4.1\n   define when two FedFsNsdbNames\
    \ are considered equal.\n   The given NSDB need not be referenced by any junctions\
    \ on the\n   fileserver.  This situation will occur when connection parameters\
    \ for\n   a new NSDB are installed.\n   The format of the connection parameters\
    \ is described in Section 4.\n   On success, this operation returns FEDFS_OK.\
    \  When the operation\n   returns, the new connection parameters SHOULD be used\
    \ for all\n   subsequent LDAP connections to the given NSDB.  Existing connections\n\
    \   MAY be terminated and re-established using the new connection\n   parameters.\
    \  The connection parameters SHOULD be durable across\n   fileserver reboots.\n\
    \   On failure, an error value indicating the type of error is returned.\n   If\
    \ the operation's associated user does not have sufficient\n   permissions to\
    \ create/modify NSDB connection parameters, the\n   operation MUST return FEDFS_ERR_ACCESS.\n"
- title: 5.8.3.  Errors
  contents:
  - "5.8.3.  Errors\n      FEDFS_ERR_ACCESS\n      FEDFS_ERR_BADCHAR\n      FEDFS_ERR_BADNAME\n\
    \      FEDFS_ERR_BADXDR\n      FEDFS_ERR_INVAL\n      FEDFS_ERR_IO\n      FEDFS_ERR_NOSPC\n\
    \      FEDFS_ERR_SVRFAULT\n      FEDFS_ERR_NOTSUPP\n      FEDFS_ERR_DELAY\n"
- title: 5.9.  FEDFS_GET_NSDB_PARAMS
  contents:
  - '5.9.  FEDFS_GET_NSDB_PARAMS

    '
- title: 5.9.1.  Synopsis
  contents:
  - "5.9.1.  Synopsis\n   Get the connection parameters for the specified NSDB.\n"
- title: 5.9.2.  Description
  contents:
  - "5.9.2.  Description\n   This operations allows an administrator to retrieve connection\n\
    \   parameters, if they exist, for the given NSDB.\n   An NSDB is specified using\
    \ a FedFsNsdbName.  The rules in Section 4.1\n   define when two FedFsNsdbNames\
    \ are considered equal.\n   A set of connection parameters is considered a match\
    \ if their\n   associated NSDB is equal (as defined in Section 4.1) to the\n \
    \  operation's NSDB argument.  Therefore, there is at most one set of\n   connection\
    \ parameters that can match the query described by this\n   operation.\n   The\
    \ format of the connection parameters is described in Section 4.\n   On success,\
    \ this operation returns FEDFS_OK and the connection\n   parameters on record\
    \ for the given NSDB.\n   On failure, an error value indicating the type of error\
    \ is returned.\n   This operation MUST return FEDFS_ERR_NSDB_PARAMS to indicate\
    \ that\n   there are no connection parameters on record for the given NSDB.  If\n\
    \   the operation's associated user does not have sufficient permissions\n   to\
    \ view NSDB connection parameters, the operation MUST return\n   FEDFS_ERR_ACCESS.\n"
- title: 5.9.3.  Errors
  contents:
  - "5.9.3.  Errors\n      FEDFS_ERR_ACCESS\n      FEDFS_ERR_BADCHAR\n      FEDFS_ERR_BADNAME\n\
    \      FEDFS_ERR_BADXDR\n      FEDFS_ERR_INVAL\n      FEDFS_ERR_IO\n      FEDFS_ERR_SVRFAULT\n\
    \      FEDFS_ERR_NSDB_PARAMS\n      FEDFS_ERR_NOTSUPP\n      FEDFS_ERR_DELAY\n"
- title: 5.10.  FEDFS_GET_LIMITED_NSDB_PARAMS
  contents:
  - '5.10.  FEDFS_GET_LIMITED_NSDB_PARAMS

    '
- title: 5.10.1.  Synopsis
  contents:
  - "5.10.1.  Synopsis\n   Get a limited subset of the connection parameters for the\
    \ specified\n   NSDB.\n"
- title: 5.10.2.  Description
  contents:
  - "5.10.2.  Description\n   This operation allows an administrator to retrieve a\
    \ limited subset\n   of information on the connection parameters, if they exist,\
    \ for the\n   given NSDB.\n   An NSDB is specified using a FedFsNsdbName.  The\
    \ rules in Section 4.1\n   define when two FedFsNsdbNames are considered equal.\n\
    \   A set of connection parameters is considered a match if their\n   associated\
    \ NSDB is equal (as defined in Section 4.1) to the\n   operation's NSDB argument.\
    \  Therefore, there is at most one set of\n   connection parameters that can match\
    \ the query described by this\n   operation.\n   This operation returns a limited\
    \ subset of the connection parameters.\n   Only the FedFsConnectionSec mechanism\
    \ that is used to protect\n   communication between the fileserver and NSDB is\
    \ returned.\n   Viewing the limited subset of NSDB connection parameters returned\
    \ by\n   FEDFS_GET_LIMITED_NSDB_PARAMS MAY be a less privileged operation than\n\
    \   viewing the entire set of NSDB connection parameters returned by\n   FEDFS_GET_NSDB_PARAMS.\
    \  For example, the full contents of an NSDB's\n   connection parameters could\
    \ contain sensitive information for some\n   security mechanisms.  FEDFS_GET_LIMITED_NSDB_PARAMS\
    \ allows the\n   fileserver to communicate a subset of the connection parameters\
    \ (the\n   security mechanism) to users with sufficient permissions without\n\
    \   revealing more sensitive information.\n   On success, this operation returns\
    \ FEDFS_OK and the\n   FedFsConnectionSec value on record for the given NSDB.\n\
    \   On failure, an error value indicating the type of error is returned.\n   This\
    \ operation MUST return FEDFS_ERR_NSDB_PARAMS to indicate that\n   there are no\
    \ connection parameters on record for the given NSDB.  If\n   the operation's\
    \ associated user does not have sufficient permissions\n   to view the subset\
    \ of NSDB connection parameters returned by this\n   procedure, the operation\
    \ MUST return FEDFS_ERR_ACCESS.\n"
- title: 5.10.3.  Errors
  contents:
  - "5.10.3.  Errors\n      FEDFS_ERR_ACCESS\n      FEDFS_ERR_BADCHAR\n      FEDFS_ERR_BADNAME\n\
    \      FEDFS_ERR_BADXDR\n      FEDFS_ERR_INVAL\n      FEDFS_ERR_IO\n      FEDFS_ERR_SVRFAULT\n\
    \      FEDFS_ERR_NSDB_PARAMS\n      FEDFS_ERR_NOTSUPP\n      FEDFS_ERR_DELAY\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   The security considerations of [RFC5531] apply\
    \ to the protocol\n   described in this document.  The ONC RPC protocol supports\n\
    \   authentication, integrity, and privacy via the RPCSEC_GSS framework\n   [RFC2203].\
    \  Fileservers that support the FedFS administration\n   protocol described in\
    \ this document MUST support RPCSEC_GSS.\n   As with NFSv4.1 (see Section 2.2.1.1.1.1\
    \ of [RFC5661]), FedFS\n   administration protocol clients and servers MUST support\
    \ RPCSEC_GSS's\n   integrity and authentication services.  FedFS administration\
    \ protocol\n   servers MUST support RPCSEC_GSS's privacy service.  FedFS\n   administration\
    \ protocol clients SHOULD support RPCSEC_GSS's privacy\n   service.  When RPCSEC_GSS\
    \ is employed on behalf of the FedFS\n   administration protocol, RPCSEC_GSS data\
    \ integrity SHOULD be used.\n   It is strongly RECOMMENDED that an Access Control\
    \ Service be employed\n   to restrict access to a fileserver's FedFS administration\n\
    \   configuration data via the FedFS administrative protocol to prevent\n   FedFS\
    \ namespace corruption and protect NSDB communication parameters.\n   For example,\
    \ when the FedFsNsdbParams secType field value\n   FEDFS_SEC_TLS is chosen, the\
    \ payload is used to provision the trust\n   anchor root certificate for TLS secure\
    \ communication between the\n   fileserver and the NSDB.  In this case, RPCSEC_GSS\
    \ with data\n   integrity SHOULD be employed along with an Access Control Service\
    \ to\n   restrict access to domain administrators.\n   FEDFS_GET_LIMITED_NSDB_PARAMS's\
    \ interaction with the NSDB's\n   connection parameters is discussed in Section\
    \ 5.10.2.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   A range of ONC RPC program numbers were assigned\
    \ for use by FedFS\n   using the procedure described in Section 8.3 (\"Program\
    \ Number\n   Assignment\") of [RFC5531].  The FedFS range is:\n      IETF NFSv4\
    \ Working Group - FedFS 100418 - 100421\n   Program 100418 has been removed from\
    \ the reserved FedFS range and\n   assigned to version 1 of the ONC RPC program\
    \ (100418) described in\n   this document with the short name \"fedfs_admin\"\
    , a Description of\n   \"FedFS Administration\", and a reference to RFC 7533.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC2203]\
    \  Eisler, M., Chiu, A., and L. Ling, \"RPCSEC_GSS Protocol\n              Specification\"\
    , RFC 2203, September 1997,\n              <http://www.rfc-editor.org/info/rfc2203>.\n\
    \   [RFC4122]  Leach, P., Mealling, M., and R. Salz, \"A Universally\n       \
    \       Unique IDentifier (UUID) URN Namespace\", RFC 4122, July\n           \
    \   2005, <http://www.rfc-editor.org/info/rfc4122>.\n   [RFC4506]  Eisler, M.,\
    \ Ed., \"XDR: External Data Representation\n              Standard\", STD 67,\
    \ RFC 4506, May 2006,\n              <http://www.rfc-editor.org/info/rfc4506>.\n\
    \   [RFC4511]  Sermersheim, J., Ed., \"Lightweight Directory Access\n        \
    \      Protocol (LDAP): The Protocol\", RFC 4511, June 2006,\n              <http://www.rfc-editor.org/info/rfc4511>.\n\
    \   [RFC4513]  Harrison, R., Ed., \"Lightweight Directory Access Protocol\n  \
    \            (LDAP): Authentication Methods and Security Mechanisms\",\n     \
    \         RFC 4513, June 2006,\n              <http://www.rfc-editor.org/info/rfc4513>.\n\
    \   [RFC5246]  Dierks, T. and E. Rescorla, \"The Transport Layer Security\n  \
    \            (TLS) Protocol Version 1.2\", RFC 5246, August 2008,\n          \
    \    <http://www.rfc-editor.org/info/rfc5246>.\n   [RFC5280]  Cooper, D., Santesson,\
    \ S., Farrell, S., Boeyen, S.,\n              Housley, R., and W. Polk, \"Internet\
    \ X.509 Public Key\n              Infrastructure Certificate and Certificate Revocation\
    \ List\n              (CRL) Profile\", RFC 5280, May 2008,\n              <http://www.rfc-editor.org/info/rfc5280>.\n\
    \   [RFC5531]  Thurlow, R., \"RPC: Remote Procedure Call Protocol\n          \
    \    Specification Version 2\", RFC 5531, May 2009,\n              <http://www.rfc-editor.org/info/rfc5531>.\n\
    \   [RFC7530]  Haynes, T., Ed. and D. Noveck, Ed., \"Network File System\n   \
    \           (NFS) Version 4 Protocol\", RFC 7530, March 2015,\n              <http://www.rfc-editor.org/info/rfc7530>.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [MS-CIFS]  Microsoft Corporation, \"Common Internet\
    \ File System (CIFS)\n              Protocol Specification\", MS-CIFS 24.0, May\
    \ 2014.\n   [MS-SMB]   Microsoft Corporation, \"Server Message Block (SMB)\n \
    \             Protocol Specification\", MS-SMB 43.0, May 2014.\n   [MS-SMB2] \
    \ Microsoft Corporation, \"Server Message Block (SMB) Version\n              2\
    \ Protocol Specification\", MS-SMB2 46.0, May 2014.\n   [RFC5661]  Shepler, S.,\
    \ Ed., Eisler, M., Ed., and D. Noveck, Ed.,\n              \"Network File System\
    \ (NFS) Version 4 Minor Version 1\n              Protocol\", RFC 5661, January\
    \ 2010,\n              <http://www.rfc-editor.org/info/rfc5661>.\n   [RFC5662]\
    \  Shepler, S., Ed., Eisler, M., Ed., and D. Noveck, Ed.,\n              \"Network\
    \ File System (NFS) Version 4 Minor Version 1\n              External Data Representation\
    \ Standard (XDR) Description\",\n              RFC 5662, January 2010,\n     \
    \         <http://www.rfc-editor.org/info/rfc5662>.\n   [RFC5716]  Lentini, J.,\
    \ Everhart, C., Ellard, D., Tewari, R., and M.\n              Naik, \"Requirements\
    \ for Federated File Systems\", RFC 5716,\n              January 2010, <http://www.rfc-editor.org/info/rfc5716>.\n\
    \   [RFC7532]  Lentini, J., Tewari, R., and C. Lever, Ed., \"Namespace\n     \
    \         Database (NSDB) Protocol for Federated File Systems\", RFC\n       \
    \       7532, March 2015,\n              <http://www.rfc-editor.org/info/rfc7532>.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   Daniel Ellard contributed significant parts of this document.\n\
    \   The authors and editor would like to thank Craig Everhart and Manoj\n   Naik,\
    \ who were co-authors of an earlier draft version of this\n   document.  In addition,\
    \ we would like to thank Paul Lemahieu, Mario\n   Wurzl, and Robert Thurlow for\
    \ helping to author this document.\n   We would like to thank Trond Myklebust\
    \ for suggesting improvements to\n   the FSL pathname format, David Noveck for\
    \ his suggestions on\n   internationalization and path encoding rules, and Nicolas\
    \ Williams\n   for his suggestions.\n   The editor gratefully acknowledges the\
    \ IESG reviewers, whose\n   constructive comments helped make this a much stronger\
    \ document.\n   Finally, we would like to thank Andy Adamson, Rob Thurlow, and\
    \ Tom\n   Haynes for helping to get this document out the door.\n   The extract.sh\
    \ shell script and formatting conventions were first\n   described by the authors\
    \ of the NFSv4.1 XDR specification [RFC5662].\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   James Lentini\n   NetApp\n   1601 Trapelo Rd, Suite 16\n\
    \   Waltham, MA  02451\n   United States\n   Phone: +1 781-768-5359\n   EMail:\
    \ jlentini@netapp.com\n   Renu Tewari\n   IBM Almaden\n   650 Harry Rd\n   San\
    \ Jose, CA  95120\n   United States\n   EMail: tewarir@us.ibm.com\n   Charles\
    \ Lever (editor)\n   Oracle Corporation\n   1015 Granger Avenue\n   Ann Arbor,\
    \ MI  48104\n   United States\n   Phone: +1 248-614-5091\n   EMail: chuck.lever@oracle.com\n"
