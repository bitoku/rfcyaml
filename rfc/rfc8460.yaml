- contents:
  - '                           SMTP TLS Reporting

    '
  title: __initial_text__
- contents:
  - "Abstract\n   A number of protocols exist for establishing encrypted channels\n
    \  between SMTP Mail Transfer Agents (MTAs), including STARTTLS, DNS-\n   Based
    Authentication of Named Entities (DANE) TLSA, and MTA Strict\n   Transport Security
    (MTA-STS).  These protocols can fail due to\n   misconfiguration or active attack,
    leading to undelivered messages or\n   delivery over unencrypted or unauthenticated
    channels.  This document\n   describes a reporting mechanism and format by which
    sending systems\n   can share statistics and specific information about potential\n
    \  failures with recipient domains.  Recipient domains can then use this\n   information
    to both detect potential attacks and diagnose\n   unintentional misconfigurations.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8460.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2018 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   4\n     1.1.  Terminology . . . . . . . . . . . . . . . . . . . .
    . . .   4\n   2.  Related Technologies  . . . . . . . . . . . . . . . . . . .
    .   5\n   3.  Reporting Policy  . . . . . . . . . . . . . . . . . . . . . .   6\n
    \    3.1.  Example Reporting Policy  . . . . . . . . . . . . . . . .   8\n       3.1.1.
    \ Report Using MAILTO . . . . . . . . . . . . . . . . .   8\n       3.1.2.  Report
    Using HTTPS  . . . . . . . . . . . . . . . . .   8\n   4.  Reporting Schema  .
    . . . . . . . . . . . . . . . . . . . . .   8\n     4.1.  Report Time Frame .
    . . . . . . . . . . . . . . . . . . .   9\n     4.2.  Delivery Summary  . . .
    . . . . . . . . . . . . . . . . .  10\n       4.2.1.  Success Count . . . . .
    . . . . . . . . . . . . . . .  10\n       4.2.2.  Failure Count . . . . . . .
    . . . . . . . . . . . . .  10\n     4.3.  Result Types  . . . . . . . . . . .
    . . . . . . . . . . .  10\n       4.3.1.  Negotiation Failures  . . . . . . .
    . . . . . . . . .  10\n       4.3.2.  Policy Failures . . . . . . . . . . . .
    . . . . . . .  11\n       4.3.3.  General Failures  . . . . . . . . . . . . .
    . . . . .  11\n       4.3.4.  Transient Failures  . . . . . . . . . . . . . .
    . . .  12\n     4.4.  JSON Report Schema  . . . . . . . . . . . . . . . . . .
    .  12\n     4.5.  Policy Samples  . . . . . . . . . . . . . . . . . . . . .  15\n
    \  5.  Report Delivery . . . . . . . . . . . . . . . . . . . . . . .  15\n     5.1.
    \ Report Filename . . . . . . . . . . . . . . . . . . . . .  16\n     5.2.  Compression
    . . . . . . . . . . . . . . . . . . . . . . .  17\n     5.3.  Email Transport
    . . . . . . . . . . . . . . . . . . . . .  17\n       5.3.1.  Example Report  .
    . . . . . . . . . . . . . . . . . .  19\n     5.4.  HTTPS Transport . . . . .
    . . . . . . . . . . . . . . . .  19\n     5.5.  Delivery Retry  . . . . . . .
    . . . . . . . . . . . . . .  20\n     5.6.  Metadata Variances  . . . . . . .
    . . . . . . . . . . . .  20\n   6.  IANA Considerations . . . . . . . . . . .
    . . . . . . . . . .  20\n     6.1.  Message Headers . . . . . . . . . . . . .
    . . . . . . . .  20\n     6.2.  Report Type . . . . . . . . . . . . . . . . .
    . . . . . .  21\n     6.3.  +gzip Media Type Suffix . . . . . . . . . . . . .
    . . . .  22\n     6.4.  application/tlsrpt+json Media Type  . . . . . . . . .
    . .  23\n     6.5.  application/tlsrpt+gzip Media Type  . . . . . . . . . . .
    \ 24\n     6.6.  STARTTLS Validation Result Types  . . . . . . . . . . . .  25\n
    \  7.  Security Considerations . . . . . . . . . . . . . . . . . . .  26\n   8.
    \ Privacy Considerations  . . . . . . . . . . . . . . . . . . .  27\n   9.  References
    \ . . . . . . . . . . . . . . . . . . . . . . . . .  28\n     9.1.  Normative
    References  . . . . . . . . . . . . . . . . . .  28\n     9.2.  Informative References
    \ . . . . . . . . . . . . . . . . .  30\n   Appendix A.  Example Reporting Policy
    . . . . . . . . . . . . . .  32\n     A.1.  Report Using MAILTO . . . . . . .
    . . . . . . . . . . . .  32\n     A.2.  Report Using HTTPS  . . . . . . . . .
    . . . . . . . . . .  32\n   Appendix B.  Example JSON Report  . . . . . . . .
    . . . . . . . .  32\n   Contributors  . . . . . . . . . . . . . . . . . . . .
    . . . . . .  34\n   Authors' Addresses  . . . . . . . . . . . . . . . . . . .
    . . . .  34\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The STARTTLS extension to SMTP [RFC3207] allows SMTP clients
    and\n   hosts to establish secure SMTP sessions over TLS.  The protocol\n   design
    uses an approach that has come to be known as \"Opportunistic\n   Security\" (OS)
    [RFC7435].  This method maintains interoperability\n   with clients that do not
    support STARTTLS, but it means that any\n   attacker could potentially eavesdrop
    on a session.  An attacker could\n   perform a downgrade or interception attack
    by deleting parts of the\n   SMTP session (such as the \"250 STARTTLS\" response)
    or redirect the\n   entire SMTP session (perhaps by overwriting the resolved MX
    record of\n   the delivery domain).\n   Because such \"downgrade attacks\" are
    not necessarily apparent to the\n   receiving MTA, this document defines a mechanism
    for sending domains\n   to report on failures at multiple stages of the MTA-to-MTA\n
    \  conversation.\n   Recipient domains may also use the mechanisms defined by
    MTA-STS\n   [RFC8461] or DANE [RFC6698] to publish additional encryption and\n
    \  authentication requirements; this document defines a mechanism for\n   sending
    domains that are compatible with MTA-STS or DANE to share\n   success and failure
    statistics with recipient domains.\n   Specifically, this document defines a reporting
    schema that covers\n   failures in routing, DNS resolution, and STARTTLS negotiation;
    policy\n   validation errors for both DANE [RFC6698] and MTA-STS [RFC8461]; and\n
    \  a standard TXT record that recipient domains can use to indicate\n   where
    reports in this format should be sent.  The report can also\n   serve as a heartbeat
    to indicate that systems are successfully\n   negotiating TLS during sessions
    as expected.\n   This document is intended as a companion to the specification
    for\n   SMTP MTA-STS [RFC8461] and adds reporting abilities for those\n   implementing
    DANE [RFC7672].\n"
  - contents:
    - "1.1.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
      \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\",
      \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described
      in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all\n
      \  capitals, as shown here.\n   We also define the following terms for further
      use in this document:\n   o  MTA-STS Policy: A mechanism by which administrators
      can specify\n      the expected TLS availability, presented identity, and desired\n
      \     actions for a given email recipient domain.  MTA-STS is defined in\n      [RFC8461].\n
      \  o  DANE Policy: A mechanism by which administrators can use DNSSEC to\n      commit
      an MTA to support STARTTLS and to publish criteria to be\n      used to validate
      its presented certificates.  DANE for SMTP is\n      defined in [RFC7672], with
      the base specification defined in\n      [RFC6698] (and updated by [RFC7671]).\n
      \  o  TLSRPT (TLS Reporting) Policy: A policy specifying the endpoint to\n      which
      Sending MTAs should deliver reports.\n   o  Policy Domain: The domain against
      which a TLSRPT, an MTA-STS, or a\n      DANE policy is defined.  For TLSRPT
      and MTA-STS, this is typically\n      the same as the envelope recipient domain
      [RFC5321], but when mail\n      is routed to a \"smarthost\" gateway by local
      policy, the\n      \"smarthost\" domain name is used instead.  For DANE, the
      Policy\n      Domain is the \"TLSA base domain\" of the receiving SMTP server
      as\n      described in Section 2.2.3 of RFC 7672 and Section 3 of RFC 6698.\n
      \  o  Sending MTA: The MTA initiating the relay of an email message.\n   o  Aggregate
      Report URI (rua): A comma-separated list of locations\n      where the report
      is to be submitted.\n   o  ABNF: Augmented Backus-Naur Form, a syntax for formally
      specifying\n      syntax, defined in [RFC5234] and [RFC7405].\n"
    title: 1.1.  Terminology
  title: 1.  Introduction
- contents:
  - "2.  Related Technologies\n   o  This document is intended as a companion to the
    specification for\n      SMTP MTA-STS [RFC8461].\n   o  SMTP TLSRPT defines a
    mechanism for sending domains that are\n      compatible with MTA-STS or DANE
    to share success and failure\n      statistics with recipient domains.  DANE is
    defined in [RFC6698],\n      and MTA-STS is defined in [RFC8461].\n"
  title: 2.  Related Technologies
- contents:
  - "3.  Reporting Policy\n   A domain publishes a record to its DNS indicating that
    it wishes to\n   receive reports.  These SMTP TLSRPT policies are distributed
    via DNS\n   from the Policy Domain's zone as TXT records (similar to Domain-based\n
    \  Message Authentication, Reporting, and Conformance (DMARC) policies)\n   under
    the name \"_smtp._tls\".  For example, for the Policy Domain\n   \"example.com\",
    the recipient's TLSRPT policy can be retrieved from\n   \"_smtp._tls.example.com\".\n
    \  Policies consist of the following directives:\n   o  \"v\": This document defines
    version 1 of TLSRPT, for which this\n      value MUST be equal to \"TLSRPTv1\".
    \ Other versions may be defined\n      in later documents.\n   o  \"rua\": A URI
    specifying the endpoint to which aggregate\n      information about policy validation
    results should be sent (see\n      Section 4, \"Reporting Schema\", for more information).
    \ Two URI\n      schemes are supported: \"mailto\" and \"https\".  As with DMARC\n
    \     [RFC7489], the Policy Domain can specify a comma-separated list of\n      URIs.\n
    \  o  In the case of \"https\", reports should be submitted via POST\n      [RFC7231]
    to the specified URI.  Report submitters MAY ignore\n      certificate validation
    errors when submitting reports via HTTPS\n      POST.\n   o  In the case of \"mailto\",
    reports should be submitted to the\n      specified email address [RFC6068].  When
    sending failure reports\n      via SMTP, Sending MTAs MUST deliver reports despite
    any TLS-\n      related failures and SHOULD NOT include this SMTP session in the\n
    \     next report.  This may mean that the reports are delivered\n      unencrypted.
    \ Reports sent via SMTP MUST contain a valid\n      DomainKeys Identified Mail
    (DKIM) [RFC6376] signature by the\n      reporting domain.  Reports lacking such
    a signature MUST be\n      ignored by the recipient.  DKIM signatures MUST NOT
    use the \"l=\"\n      attribute to limit the body length used in the signature.
    \ This\n      ensures attackers cannot append extraneous or misleading data to
    a\n      report without breaking the signature.  The DKIM TXT record SHOULD\n
    \     contain the appropriate service type declaration, \"s=tlsrpt\".  If\n      not
    present, the receiving system MAY ignore reports lacking that\n      service type.\n
    \  Sample DKIM record:\n      dkim_selector._domainkey.example.com TXT\n            \"v=DKIM1;k=rsa;s=tlsrpt;p=Mlf4qwSZfase4fa==\"\n
    \  The formal definition of the \"_smtp._tls\" TXT record, defined using\n   [RFC5234]
    and [RFC7405], is as follows:\n        tlsrpt-record     = tlsrpt-version 1*(field-delim
    tlsrpt-field)\n                            [field-delim]\n        field-delim
    \      = *WSP \";\" *WSP\n        tlsrpt-field      = tlsrpt-rua /        ; Note
    that the\n                            tlsrpt-extension    ; tlsrpt-rua record
    is\n                                                ; required.\n        tlsrpt-version
    \   = %s\"v=TLSRPTv1\"\n        tlsrpt-rua        = %s\"rua=\"\n                            tlsrpt-uri
    *(*WSP \",\" *WSP tlsrpt-uri)\n        tlsrpt-uri        = URI\n                            ;
    \"URI\" is imported from [RFC3986];\n                            ; commas (ASCII
    0x2C), exclamation\n                            ; points (ASCII 0x21), and semicolons\n
    \                           ; (ASCII 0x3B) MUST be encoded\n        tlsrpt-extension
    \ = tlsrpt-ext-name \"=\" tlsrpt-ext-value\n        tlsrpt-ext-name   = (ALPHA
    / DIGIT) *31(ALPHA /\n                            DIGIT / \"_\" / \"-\" / \".\")\n
    \       tlsrpt-ext-value  = 1*(%x21-3A / %x3C / %x3E-7E)\n                            ;
    chars excluding \"=\", \";\", SP, and control\n                            ; chars\n
    \  If multiple TXT records for \"_smtp._tls\" are returned by the\n   resolver,
    records that do not begin with \"v=TLSRPTv1;\" are discarded.\n   If the number
    of resulting records is not one, senders MUST assume\n   the recipient domain
    does not implement TLSRPT.  If the resulting TXT\n   record contains multiple
    strings (as described in Section 3.3 of\n   [RFC7208]), then the record MUST be
    treated as if those strings are\n   concatenated without adding spaces.\n   The
    record supports the ability to declare more than one rua, and if\n   there exists
    more than one, the reporter MAY attempt to deliver to\n   each of the supported
    rua destinations.  A receiver MAY opt to only\n   attempt delivery to one of the
    endpoints; however, the report SHOULD\n   NOT be considered successfully delivered
    until one of the endpoints\n   accepts delivery of the report.\n   Parsers MUST
    accept TXT records that are syntactically valid (i.e.,\n   valid key/value pairs
    separated by semicolons) and implement a\n   superset of this specification, in
    which case unknown fields SHALL be\n   ignored.\n"
  - contents:
    - '3.1.  Example Reporting Policy

      '
    - contents:
      - "3.1.1.  Report Using MAILTO\n            _smtp._tls.example.com. IN TXT \\\n
        \                   \"v=TLSRPTv1;rua=mailto:reports@example.com\"\n"
      title: 3.1.1.  Report Using MAILTO
    - contents:
      - "3.1.2.  Report Using HTTPS\n           _smtp._tls.example.com. IN TXT \\\n
        \                  \"v=TLSRPTv1; \\\n                   rua=https://reporting.example.com/v1/tlsrpt\"\n"
      title: 3.1.2.  Report Using HTTPS
    title: 3.1.  Example Reporting Policy
  title: 3.  Reporting Policy
- contents:
  - "4.  Reporting Schema\n   The report is composed as a plaintext file encoded in
    the Internet\n   JSON (I-JSON) format [RFC7493].\n   Aggregate reports contain
    the following fields:\n   o  Report metadata:\n      *  The organization responsible
    for the report\n      *  Contact information for one or more responsible parties
    for the\n         contents of the report\n      *  A unique identifier for the
    report\n      *  The reporting date range for the report\n   o  Policy, consisting
    of:\n      *  One of the following policy types: (1) the MTA-STS Policy\n         applied
    (as a string), (2) the DANE TLSA record applied (as a\n         string, with each
    RR entry of the RRset listed and separated by\n         a semicolon), and (3)
    the literal string \"no-policy-found\", if\n         neither a DANE nor MTA-STS
    Policy could be found.\n      *  The domain for which the policy is applied\n
    \     *  The MX host\n   o  Aggregate counts, comprising result type, Sending
    MTA IP,\n      receiving MTA hostname, session count, and an optional additional\n
    \     information field containing a URI for recipients to review\n      further
    information on a failure type.\n   Note that the failure types are non-exclusive;
    an aggregate report\n   may contain overlapping \"counts\" of failure types when
    a single send\n   attempt encountered multiple errors.  Reporters may report multiple\n
    \  applied policies (for example, an MTA-STS Policy and a DANE TLSA\n   record
    for the same domain and MX).  Because of this, even in the\n   case where only
    a single policy was applied, the \"policies\" field of\n   the report body MUST
    be an array and not a singular value.\n   In the case of multiple failure types,
    the \"failure-details\" array\n   would contain multiple entries.  Each entry
    would have its own set of\n   information pertaining to that failure type.\n"
  - contents:
    - "4.1.  Report Time Frame\n   The report SHOULD cover a full day, from 00:00-24:00
      UTC.  This\n   should allow for easier correlation of failure events.  To avoid\n
      \  unintentionally overloading the system processing the reports, the\n   reports
      should be delivered after some delay, perhaps several hours.\n   As an example,
      a sending site might want to introduce a random delay\n   of up to four hours:\n
      \         func generate_sleep_delay() {\n            min_delay = 1\n            max_delay
      = 14400\n            rand = random(min_delay, max_delay)\n            return
      rand\n          }\n          func generate_report(policy_domain) {\n            do_rpt_work(policy_domain)\n
      \           send_rpt(policy_domain)\n          }\n          func generate_tlsrpt()
      {\n            sleep(generate_sleep_delay())\n            for policy_domain
      in list_of_tlsrpt_enabled_domains {\n              generate_report(policy_domain)\n
      \           }\n          }\n"
    title: 4.1.  Report Time Frame
  - contents:
    - '4.2.  Delivery Summary

      '
    - contents:
      - "4.2.1.  Success Count\n   o  \"total-successful-session-count\": This indicates
        that the Sending\n      MTA was able to successfully negotiate a policy-compliant
        TLS\n      connection and serves to provide a \"heartbeat\" to receiving\n
        \     domains that signifies reporting is functional and tabulating\n      correctly.
        \ This field contains an aggregate count of successful\n      connections
        for the reporting system.\n"
      title: 4.2.1.  Success Count
    - contents:
      - "4.2.2.  Failure Count\n   o  \"total-failure-session-count\": This indicates
        that the Sending MTA\n      was unable to successfully establish a connection
        with the\n      receiving platform.  Section 4.3, \"Result Types\", will elaborate\n
        \     on the failed negotiation attempts.  This field contains an\n      aggregate
        count of failed connections.\n"
      title: 4.2.2.  Failure Count
    title: 4.2.  Delivery Summary
  - contents:
    - "4.3.  Result Types\n   The list of result types will start with the minimal
      set below and is\n   expected to grow over time based on real-world experience.
      \ The\n   initial set is outlined in Sections 4.3.1 to 4.3.4:\n"
    - contents:
      - "4.3.1.  Negotiation Failures\n   o  \"starttls-not-supported\": This indicates
        that the recipient MX did\n      not support STARTTLS.\n   o  \"certificate-host-mismatch\":
        This indicates that the certificate\n      presented did not adhere to the
        constraints specified in the MTA-\n      STS or DANE policy, e.g., if the
        MX hostname does not match any\n      identities listed in the subject alternative
        name (SAN) [RFC5280].\n   o  \"certificate-expired\": This indicates that
        the certificate has\n      expired.\n   o  \"certificate-not-trusted\": This
        is a label that covers multiple\n      certificate-related failures that include,
        but are not limited to,\n      errors such as untrusted/unknown certification
        authorities (CAs),\n      certificate name constraints, certificate chain
        errors, etc.  When\n      using this declaration, the reporting MTA SHOULD
        utilize the\n      \"failure-reason-code\" to provide more information to
        the receiving\n      entity.\n   o  \"validation-failure\": This indicates
        a general failure for a\n      reason not matching a category above.  When
        using this\n      declaration, the reporting MTA SHOULD utilize the \"failure-reason-\n
        \     code\" to provide more information to the receiving entity.\n"
      title: 4.3.1.  Negotiation Failures
    - contents:
      - '4.3.2.  Policy Failures

        '
      - contents:
        - "4.3.2.1.  DANE-Specific Policy Failures\n   o  \"tlsa-invalid\": This indicates
          a validation error in the TLSA\n      record associated with a DANE policy.
          \ None of the records in the\n      RRset were found to be valid.\n   o
          \ \"dnssec-invalid\": This indicates that no valid records were\n      returned
          from the recursive resolver.\n   o  \"dane-required\": This indicates that
          the sending system is\n      configured to require DANE TLSA records for
          all the MX hosts of\n      the destination domain, but no DNSSEC-validated
          TLSA records were\n      present for the MX host that is the subject of
          the report.\n      Mandatory DANE for SMTP is described in Section 6 of
          [RFC7672].\n      Such policies may be created by mutual agreement between
          two\n      organizations that frequently exchange sensitive content via\n
          \     email.\n"
        title: 4.3.2.1.  DANE-Specific Policy Failures
      - contents:
        - "4.3.2.2.  MTA-STS-specific Policy Failures\n   o  \"sts-policy-fetch-error\":
          This indicates a failure to retrieve an\n      MTA-STS policy, for example,
          because the policy host is\n      unreachable.\n   o  \"sts-policy-invalid\":
          This indicates a validation error for the\n      overall MTA-STS Policy.\n
          \  o  \"sts-webpki-invalid\": This indicates that the MTA-STS Policy could\n
          \     not be authenticated using PKIX validation.\n"
        title: 4.3.2.2.  MTA-STS-specific Policy Failures
      title: 4.3.2.  Policy Failures
    - contents:
      - "4.3.3.  General Failures\n   When a negotiation failure cannot be categorized
        into one of the\n   \"Negotiation Failures\" stated above, the reporter SHOULD
        use the\n   \"validation-failure\" category.  As TLS grows and becomes more\n
        \  complex, new mechanisms may not be easily categorized.  This allows\n   for
        a generic feedback category.  When this category is used, the\n   reporter
        SHOULD also use \"failure-reason-code\" to give some feedback\n   to the receiving
        entity.  This is intended to be a short text field,\n   and the contents of
        the field should be an error code or error text,\n   such as \"X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION\".\n"
      title: 4.3.3.  General Failures
    - contents:
      - "4.3.4.  Transient Failures\n   Transient errors due to too-busy networks,
        TCP timeouts, etc., are\n   not required to be reported.\n"
      title: 4.3.4.  Transient Failures
    title: 4.3.  Result Types
  - contents:
    - "4.4.  JSON Report Schema\n   The JSON schema is derived from the HTTP Public
      Key Pinning (HPKP)\n   JSON schema; see Section 3 of [RFC7469].\n {\n   \"organization-name\":
      organization-name,\n   \"date-range\": {\n     \"start-datetime\": date-time,\n
      \    \"end-datetime\": date-time\n   },\n   \"contact-info\": email-address,\n
      \  \"report-id\": report-id,\n   \"policies\": [{\n     \"policy\": {\n       \"policy-type\":
      policy-type,\n       \"policy-string\": policy-string,\n       \"policy-domain\":
      domain,\n       \"mx-host\": mx-host-pattern\n     },\n     \"summary\": {\n
      \      \"total-successful-session-count\": total-successful-session-count,\n
      \      \"total-failure-session-count\": total-failure-session-count\n     },\n
      \    \"failure-details\": [\n       {\n         \"result-type\": result-type,\n
      \        \"sending-mta-ip\": ip-address,\n         \"receiving-mx-hostname\":
      receiving-mx-hostname,\n         \"receiving-mx-helo\": receiving-mx-helo,\n
      \        \"receiving-ip\": receiving-ip,\n         \"failed-session-count\":
      failed-session-count,\n         \"additional-information\": additional-info-uri,\n
      \        \"failure-reason-code\": failure-reason-code\n         }\n       ]\n
      \    }\n   ]\n }\n                            JSON Report Format\n   o  \"organization-name\":
      The name of the organization responsible for\n      the report.  It is provided
      as a string.\n   o  \"date-time\": The date-time indicates the start and end
      times for\n      the report range.  It is provided as a string formatted according\n
      \     to \"Internet Date/Time Format\", Section 5.6 of [RFC3339].  The\n      report
      should be for a full UTC day, 00:00-24:00.\n   o  \"email-address\": The contact
      information for the party responsible\n      for the report.  It is provided
      as a string formatted according to\n      \"Addr-Spec Specification\", Section
      3.4.1 of [RFC5322].\n   o  \"report-id\": A unique identifier for the report.
      \ Report authors\n      may use whatever scheme they prefer to generate a unique\n
      \     identifier.  It is provided as a string.\n   o  \"policy-type\": The type
      of policy that was applied by the sending\n      domain.  Presently, the only
      three valid choices are \"tlsa\",\n      \"sts\", and the literal string \"no-policy-found\".
      \ It is provided\n      as a string.\n   o  \"policy-string\": An encoding of
      the applied policy as a JSON array\n      of strings, whether it's a TLSA record
      ([RFC6698], Section 2.3) or\n      an MTA-STS Policy.  Examples follow in the
      next section.\n   o  \"domain\": The Policy Domain against which the MTA-STS
      or DANE\n      policy is defined.  In the case of Internationalized Domain Names\n
      \     [RFC5891], the domain MUST consist of the Punycode-encoded\n      A-labels
      [RFC3492] and not the U-labels.\n   o  \"mx-host-pattern\": In the case where
      \"policy-type\" is \"sts\", it's\n      the pattern of MX hostnames from the
      applied policy.  It is\n      provided as a JSON array of strings and is interpreted
      in the same\n      manner as the rules in \"MX Host Validation\"; see Section
      4.1 of\n      [RFC8461].  In the case of Internationalized Domain Names\n      [RFC5891],
      the domain MUST consist of the Punycode-encoded\n      A-labels [RFC3492] and
      not the U-labels.\n   o  \"result-type\": A value from Section 4.3, \"Result
      Types\", above.\n   o  \"ip-address\": The IP address of the Sending MTA that
      attempted the\n      STARTTLS connection.  It is provided as a string representation
      of\n      an IPv4 (see below) or IPv6 [RFC5952] address in dot-decimal or\n
      \     colon-hexadecimal notation.\n   o  \"receiving-mx-hostname\": The hostname
      of the receiving MTA MX\n      record with which the Sending MTA attempted to
      negotiate a\n      STARTTLS connection.\n   o  \"receiving-mx-helo\" (optional):
      The HELLO (HELO) or Extended HELLO\n      (EHLO) string from the banner announced
      during the reported\n      session.\n   o  \"receiving-ip\": The destination
      IP address that was used when\n      creating the outbound session.  It is provided
      as a string\n      representation of an IPv4 (see below) or IPv6 [RFC5952] address
      in\n      dot-decimal or colon-hexadecimal notation.\n   o  \"total-successful-session-count\":
      The aggregate count (an integer,\n      encoded as a JSON number) of successfully
      negotiated TLS-enabled\n      connections to the receiving site.\n   o  \"total-failure-session-count\":
      The aggregate count (an integer,\n      encoded as a JSON number) of failures
      to negotiate a TLS-enabled\n      connection to the receiving site.\n   o  \"failed-session-count\":
      The number of (attempted) sessions that\n      match the relevant \"result-type\"
      for this section (an integer,\n      encoded as a JSON number).\n   o  \"additional-info-uri\"
      (optional): A URI [RFC3986] that points to\n      additional information around
      the relevant \"result-type\".  For\n      example, this URI might host the complete
      certificate chain\n      presented during an attempted STARTTLS session.\n   o
      \ \"failure-reason-code\": A text field to include a TLS-related error\n      code
      or error message.\n   For report purposes, an IPv4 address is defined via the
      following\n   ABNF:\n     IPv4address = dec-octet \".\" dec-octet \".\" dec-octet
      \".\" dec-octet\n     dec-octet     = DIGIT                 ; 0-9\n                   /
      %x31-39 DIGIT         ; 10-99\n                   / \"1\" 2DIGIT            ;
      100-199\n                   / \"2\" %x30-34 DIGIT     ; 200-249\n                   /
      \"25\" %x30-35          ; 250-255\n   And an IPv6 address is defined via the
      following ABNF:\n     IPv6address = <as defined in [RFC5954]>\n"
    title: 4.4.  JSON Report Schema
  - contents:
    - "4.5.  Policy Samples\n   Part of the report body includes the policy that is
      applied when\n   attempting relay to the destination.\n   For DANE TLSA policies,
      this is a JSON array of strings each\n   representing the RDATA of a single
      TLSA resource record as a space-\n   separated list of its four TLSA fields;
      the fields are in\n   presentation format (defined in [RFC6698], Section 2.2)
      with no\n   internal spaces or grouping parentheses:\n       [\n       \"3 0
      1 1F850A337E6DB9C609C522D136A475638CC43E1ED424F8EEC8513\n              D747D1D085D\",\n
      \      \"3 0 1 12350A337E6DB9C6123522D136A475638CC43E1ED424F8EEC8513\n              D747D1D1234\"\n
      \      ]\n   For MTA-STS policies, this is an array of JSON strings that\n   represents
      the policy that is declared by the receiving site,\n   including any errors
      that may be present.  Note that where there are\n   multiple \"mx\" values,
      they must be listed as separate \"mx\" elements\n   in the policy array rather
      than as a single nested \"mx\" sub-array.\n                       [\n                       \"version:
      STSv1\",\n                       \"mode: testing\",\n                       \"mx:
      mx1.example.com\",\n                       \"mx: mx2.example.com\",\n                       \"mx:
      mx.backup-example.com\",\n                       \"max_age: 604800\"\n                       ]\n"
    title: 4.5.  Policy Samples
  title: 4.  Reporting Schema
- contents:
  - "5.  Report Delivery\n   Reports can be delivered either via SMTP (as an email
    message) or via\n   HTTP POST.\n"
  - contents:
    - "5.1.  Report Filename\n   The filename is RECOMMENDED to be constructed using
      the following\n   ABNF:\n    filename        = sender \"!\" policy-domain \"!\"
      begin-timestamp\n                      \"!\" end-timestamp [ \"!\" unique-id
      ] \".\" extension\n    unique-id       = 1*(ALPHA / DIGIT)\n    sender          =
      domain ; from [RFC5321] -- this is used\n                      ; as the domain
      for the `contact-info`\n                      ; address in the report body.\n
      \                     ; In the case of Internationalized Domain\n                      ;
      Names [RFC5891], the domain MUST consist of\n                      ; the Punycode-encoded
      A-labels [RFC3492] and\n                      ; not the U-labels.\n    policy-domain
      \  = domain\n                      ; In the case of Internationalized Domain\n
      \                     ; Names [RFC5891], the domain MUST consist of\n                      ;
      the Punycode-encoded A-labels [RFC3492] and\n                      ; not the
      U-labels.\n    begin-timestamp = 1*DIGIT\n                      ; seconds since
      00:00:00 UTC January 1, 1970\n                      ; indicating start of the
      time range contained\n                      ; in the report\n    end-timestamp
      \  = 1*DIGIT\n                      ; seconds since 00:00:00 UTC January 1,
      1970\n                      ; indicating end of the time range contained\n                      ;
      in the report\n    extension       = \"json\" / \"json.gz\"\n   The extension
      MUST be \"json\" for a plain JSON file or \"json.gz\" for a\n   JSON file compressed
      using gzip.\n   \"unique-id\" allows an optional unique ID generated by the
      Sending MTA\n   to distinguish among multiple reports generated simultaneously
      by\n   different sources for the same Policy Domain.  For example, this is a\n
      \  possible filename for a compressed report to the Policy Domain\n   \"example.net\"
      from the Sending MTA \"mail.sndr.example.com\":\n   \"mail.sndr.example.com!example.net!1470013207!1470186007!001.json.gz\"\n"
    title: 5.1.  Report Filename
  - contents:
    - "5.2.  Compression\n   The report SHOULD be subjected to gzip [RFC1952] compression
      for both\n   email and HTTPS transport.  Declining to apply compression can
      cause\n   the report to be too large for a receiver to process (a commonly\n
      \  observed receiver limit is ten megabytes); compressing the file\n   increases
      the chances of acceptance of the report at some\n   computational cost.\n"
    title: 5.2.  Compression
  - contents:
    - "5.3.  Email Transport\n   The report MAY be delivered by email.  To make the
      reports machine-\n   parsable for the receivers, we define a top-level media
      type\n   \"multipart/report\" with a new parameter \"report-type=\"tlsrpt\"\".\n
      \  Inside it, there are two parts: The first part is human readable,\n   typically
      \"text/plain\", and the second part is machine readable with\n   a new media
      type defined called \"application/tlsrpt+json\".  If\n   compressed, the report
      should use the media type \"application/\n   tlsrpt+gzip\".\n   In addition,
      the following two new top-level message header fields\n   are defined:\n   \"TLS-Report-Domain:
      Receiver-Domain\"\n   \"TLS-Report-Submitter: Sender-Domain\"\n   The \"TLS-Report-Submitter\"
      value MUST match the value found in the\n   domain [RFC5321] of the \"contact-info\"
      from the report body.  These\n   message header fields MUST be included and
      should allow for easy\n   searching for all reports submitted by a reporting
      domain or a\n   particular submitter, for example, in IMAP [RFC3501]:\n   \"s
      SEARCH HEADER \"TLS-Report-Domain\" \"example.com\"\"\n   It is presumed that
      the aggregate reporting address will be equipped\n   to process new message
      header fields and extract MIME parts with the\n   prescribed media type and
      filename, and ignore the rest.  These\n   additional headers SHOULD be included
      in the DKIM [RFC6376] signature\n   for the message.\n   The RFC5322.Subject
      field for report submissions SHOULD conform to\n   the following ABNF:\n       tlsrpt-subject
      = %s\"Report\" FWS               ; \"Report\"\n                        %s\"Domain:\"
      FWS              ; \"Domain:\"\n                        domain-name FWS              ;
      per [RFC6376]\n                        %s\"Submitter:\" FWS           ; \"Submitter:\"\n
      \                       domain-name FWS              ; per [RFC6376]\n                        %s\"Report-ID:\"
      FWS           ; \"Report-ID:\n                        \"<\" id-left \"@\" id-right
      \">\" ; per [RFC5322]\n                        [CFWS]                       ;
      per [RFC5322]\n                                                     ; (as with
      FWS)\n   The first domain-name indicates the DNS domain name about which the\n
      \  report was generated.  The second domain-name indicates the DNS\n   domain
      name representing the Sending MTA generating the report.  The\n   purpose of
      the \"Report-ID:\" portion of the field is to enable the\n   Policy Domain to
      identify and ignore duplicate reports that might be\n   sent by a Sending MTA.\n
      \  For instance, this is a possible Subject field for a report to the\n   Policy
      Domain \"example.net\" from the Sending MTA\n   \"mail.sender.example.com\".
      \ It is line-wrapped as allowed by\n   [RFC5322]:\n              Subject: Report
      Domain: example.net\n                  Submitter: mail.sender.example.com\n
      \                 Report-ID: <735ff.e317+bf22029@mailexample.net>\n"
    - contents:
      - "5.3.1.  Example Report\n      From: tlsrpt@mail.sender.example.com\n          Date:
        Fri, May 09 2017 16:54:30 -0800\n          To: mts-sts-tlsrpt@example.net\n
        \         Subject: Report Domain: example.net\n              Submitter: mail.sender.example.com\n
        \             Report-ID: <735ff.e317+bf22029@example.net>\n          TLS-Report-Domain:
        example.net\n          TLS-Report-Submitter: mail.sender.example.com\n          MIME-Version:
        1.0\n          Content-Type: multipart/report; report-type=\"tlsrpt\";\n              boundary=\"----=_NextPart_000_024E_01CC9B0A.AFE54C00\"\n
        \         Content-Language: en-us\n          This is a multipart message in
        MIME format.\n          ------=_NextPart_000_024E_01CC9B0A.AFE54C00\n          Content-Type:
        text/plain; charset=\"us-ascii\"\n          Content-Transfer-Encoding: 7bit\n
        \         This is an aggregate TLS report from mail.sender.example.com\n          ------=_NextPart_000_024E_01CC9B0A.AFE54C00\n
        \         Content-Type: application/tlsrpt+gzip\n          Content-Transfer-Encoding:
        base64\n          Content-Disposition: attachment;\n              filename=\"mail.sender.example!example.com!\n
        \                       1013662812!1013749130.json.gz\"\n          <gzipped
        content of report>\n     ------=_NextPart_000_024E_01CC9B0A.AFE54C00--\n     ...\n
        \  Note that, when sending failure reports via SMTP, Sending MTAs MUST\n   NOT
        honor MTA-STS or DANE TLSA failures.\n"
      title: 5.3.1.  Example Report
    title: 5.3.  Email Transport
  - contents:
    - "5.4.  HTTPS Transport\n   The report MAY be delivered by POST to HTTPS.  If
      compressed, the\n   report SHOULD use the media type \"application/tlsrpt+gzip\";
      otherwise\n   it SHOULD use the media type \"application/tlsrpt+json\" (see\n
      \  Section 6, \"IANA Considerations\").\n   The receiving system MUST return
      a \"successful\" response from its\n   HTTPS server, typically a 200 or 201
      HTTP code [RFC7231].  Other\n   codes could indicate a delivery failure and
      may be retried as per\n   local sender policy.  The receiving system is not
      expected to process\n   reports at receipt time and MAY store them for processing
      at a later\n   time.\n"
    title: 5.4.  HTTPS Transport
  - contents:
    - "5.5.  Delivery Retry\n   In the event of a delivery failure, regardless of
      the delivery\n   method, a sender SHOULD attempt redelivery for up to 24 hours
      after\n   the initial attempt.  As previously stated, the reports are optional,\n
      \  so while it is ideal to attempt redelivery, it is not required.  If\n   multiple
      retries are attempted, ideally they SHOULD be done with\n   exponential backoff.\n"
    title: 5.5.  Delivery Retry
  - contents:
    - "5.6.  Metadata Variances\n   As stated above, there are a variable number of
      ways to declare\n   information about the data therein.  If any of the items
      declared via\n   subject or filename disagree with the report, the report MUST
      be\n   considered the authoritative source.\n"
    title: 5.6.  Metadata Variances
  title: 5.  Report Delivery
- contents:
  - "6.  IANA Considerations\n   The following are the IANA considerations discussed
    in this document.\n"
  - contents:
    - "6.1.  Message Headers\n   Below is the Internet Assigned Numbers Authority
      (IANA) Permanent\n   Message Header Field registration information per [RFC3864].\n
      \            Header field name:           TLS-Report-Domain\n             Applicable
      protocol:         mail\n             Status:                      standard\n
      \            Author/Change controller:    IETF\n             Specification document(s):
      \  RFC 8460\n             Header field name:           TLS-Report-Submitter\n
      \            Applicable protocol:         mail\n             Status:                      standard\n
      \            Author/Change controller:    IETF\n             Specification document(s):
      \  RFC 8460\n"
    title: 6.1.  Message Headers
  - contents:
    - "6.2.  Report Type\n   This document creates a new registry for the \"report-type\"
      parameter\n   to the Content-Type header field for the \"multipart/report\"
      top-level\n   media type defined in [RFC6522].\n   The registry name is \"Report
      Type Registry\", and the procedure for\n   updating the registry will be \"Specification
      Required\" [RFC8126].\n   An entry in this registry should contain:\n   o  the
      report-type being registered\n   o  one or more registered media types that
      can be used with this\n      report-type\n   o  the document containing the
      registration action\n   o  an optional comment\n   The initial entries are:\n
      \  Report-Type: tlsrpt\n   Media Type: application/tlsrpt+gzip, application/tlsrpt+json\n
      \  Registered By: [RFC8460]\n   Comment: Media types suitable for use with this
      report-type are\n   defined in Sections 6.4 and 6.5 of [RFC8460]\n   Report-Type:
      disposition-notification\n   Media Type: message/disposition-notification\n
      \  Registered By: [RFC8098], Section 10\n   Report-Type: disposition-notification\n
      \  Media Type: message/global-disposition-notification\n   Registered By: [RFC6533],
      Section 6\n   Report-Type: delivery-status\n   Media Type: message/delivery-status\n
      \  Registered By: [RFC3464], Section 6.2\n   Report-Type: delivery-status\n
      \  Media Type: message/global-delivery-status\n   Registered By: [RFC6533],
      Section 6\n"
    title: 6.2.  Report Type
  - contents:
    - "6.3.  +gzip Media Type Suffix\n   This document registers a new media type
      suffix \"+gzip\".  The gzip\n   format is a public domain, cross-platform, interoperable
      file storage\n   and transfer format, specified in [RFC1952]; it supports compression\n
      \  and is used as the underlying representation by a variety of file\n   formats.
      \ The media type \"application/gzip\" has been registered for\n   such files.
      \ The suffix \"+gzip\" MAY be used with any media type whose\n   representation
      follows that established for \"application/gzip\".  The\n   registration form
      for the structured syntax suffix for use with media\n   types is as follows:\n
      \  Type name: gzip file storage and transfer format.\n   +suffix: +gzip\n   References:
      [RFC1952] [RFC6713]\n   Encoding considerations: gzip is a binary encoding.\n
      \  Fragment identifier considerations: The syntax and semantics of\n   fragment
      identifiers specified for +gzip SHOULD be as specified for\n   \"application/gzip\".
      \ (At publication of this document, there is no\n   fragment identification
      syntax defined for \"application/gzip\".)  The\n   syntax and semantics for
      fragment identifiers for a specific \"xxx/\n   yyy+gzip\" SHOULD be processed
      as follows:\n       For cases defined in +gzip, where the fragment identifier\n
      \      resolves per the +gzip rules, process as specified in\n       +gzip.\n
      \      For cases defined in +gzip, where the fragment identifier does\n       not
      resolve per the +gzip rules, process as specified in\n       \"xxx/yyy+gzip\".\n
      \      For cases not defined in +gzip, process as specified in\n       \"xxx/yyy+gzip\".\n
      \  Interoperability considerations: N/A\n   Security considerations: gzip format
      doesn't provide confidentiality\n   protection.  Integrity protection is provided
      by an Adler-32\n   checksum, which is not cryptographically strong.  See also
      the\n   security considerations of [RFC6713].  Each individual media type\n
      \  registered with a +gzip suffix can have additional security\n   considerations.
      \ Additionally, gzip objects can contain multiple\n   files and associated paths.
      \ File paths must be validated when the\n   files are extracted; a malicious
      file path could otherwise cause the\n   extractor to overwrite application or
      system files.\n   Contact: art@ietf.org\n   Author/Change controller: Internet
      Engineering Task Force\n   (iesg@ietf.org).\n"
    title: 6.3.  +gzip Media Type Suffix
  - contents:
    - "6.4.  application/tlsrpt+json Media Type\n   This document registers multiple
      media types, beginning with Table 1\n   below.\n    +-------------+----------------+-------------+-------------------+\n
      \   | Type        | Subtype        | File Ext    | Specification     |\n    +-------------+----------------+-------------+-------------------+\n
      \   | application | tlsrpt+json    |  .json      | Section 5.3       |\n    +-------------+----------------+-------------+-------------------+\n
      \                   Table 1: SMTP TLS Reporting Media Type\n   Type name: application\n
      \  Subtype name: tlsrpt+json\n   Required parameters: N/A\n   Optional parameters:
      N/A\n   Encoding considerations: Encoding considerations are identical to\n
      \  those specified for the \"application/json\" media type.  See\n   [RFC7493].\n
      \  Security considerations: Security considerations relating to SMTP TLS\n   Reporting
      are discussed in Section 7.\n   Interoperability considerations: This document
      specifies the format\n   of conforming messages and the interpretation thereof.\n
      \  Published specification: Section 5.3 of RFC 8460.\n   Applications that use
      this media type: Mail User Agents (MUAs) and\n   Mail Transfer Agents.\n   Additional
      information:\n      Deprecated alias names for this type: N/A\n      Magic number(s):
      N/A\n      File extension(s): \".json\"\n      Macintosh file type code(s):
      N/A\n   Person & email address to contact for further information:\n   See the
      Authors' Addresses section.\n   Intended usage: COMMON\n   Restrictions on usage:
      N/A\n   Author: See the Authors' Addresses section.\n   Change controller: Internet
      Engineering Task Force (iesg@ietf.org).\n"
    title: 6.4.  application/tlsrpt+json Media Type
  - contents:
    - "6.5.  application/tlsrpt+gzip Media Type\n    +-------------+----------------+-------------+-------------------+\n
      \   | Type        | Subtype        | File Ext    | Specification     |\n    +-------------+----------------+-------------+-------------------+\n
      \   | application | tlsrpt+gzip    |  .gz        | Section 5.3       |\n    +-------------+----------------+-------------+-------------------+\n
      \                   Table 2: SMTP TLS Reporting Media Type\n   Type name: application\n
      \  Subtype name: tlsrpt+gzip\n   Required parameters: N/A\n   Optional parameters:
      N/A\n   Encoding considerations: Binary\n   Security considerations: Security
      considerations relating to SMTP TLS\n   Reporting are discussed in Section 7.
      \ Security considerations\n   related to gzip compression are discussed in RFC
      6713.\n   Interoperability considerations: This document specifies the format\n
      \  of conforming messages and the interpretation thereof.\n   Published specification:
      Section 5.3 of RFC 8460.\n   Applications that use this media type: Mail User
      Agents (MUAs) and\n   Mail Transfer Agents.\n   Additional information:\n      Deprecated
      alias names for this type: N/A\n      Magic number(s): The first two bytes are
      0x1f, 0x8b.\n      File extension(s): \".gz\"\n      Macintosh file type code(s):
      N/A\n   Person & email address to contact for further information:\n   See the
      Authors' Addresses section.\n   Intended usage: COMMON\n   Restrictions on usage:
      N/A\n   Author: See the Authors' Addresses section.\n   Change controller: Internet
      Engineering Task Force (iesg@ietf.org).\n"
    title: 6.5.  application/tlsrpt+gzip Media Type
  - contents:
    - "6.6.  STARTTLS Validation Result Types\n   This document creates a new registry,
      \"STARTTLS Validation Result\n   Types\".  The initial entries in the registry
      are:\n              +-----------------------------+--------------+\n              |
      Result Type                 |  Description |\n              +-----------------------------+--------------+\n
      \             | starttls-not-supported      |  Section 4.3 |\n              |
      certificate-host-mismatch   |  Section 4.3 |\n              | certificate-expired
      \        |  Section 4.3 |\n              | tlsa-invalid                |  Section
      4.3 |\n              | dnssec-invalid              |  Section 4.3 |\n              |
      dane-required               |  Section 4.3 |\n              | certificate-not-trusted
      \    |  Section 4.3 |\n              | sts-policy-invalid          |  Section
      4.3 |\n              | sts-webpki-invalid          |  Section 4.3 |\n              |
      validation-failure          |  Section 4.3 |\n              | sts-policy-fetch-error
      \     |  Section 4.3 |\n              +-----------------------------+--------------+\n
      \  The above entries are described in Section 4.3, \"Result Types\".  New\n
      \  result types can be added to this registry using the \"Expert Review\"\n
      \  IANA registration policy.\n"
    title: 6.6.  STARTTLS Validation Result Types
  title: 6.  IANA Considerations
- contents:
  - "7.  Security Considerations\n   SMTP TLS Reporting provides visibility into misconfigurations
    or\n   attempts to intercept or tamper with mail between hosts who support\n   STARTTLS.
    \ There are several security risks presented by the\n   existence of this reporting
    channel:\n   o  Flooding of the Aggregate Report URI (rua) endpoint: An attacker\n
    \     could flood the endpoint with excessive reporting traffic and\n      prevent
    the receiving domain from accepting additional reports.\n      This type of Denial-of-Service
    attack would limit visibility into\n      STARTTLS failures, leaving the receiving
    domain blind to an\n      ongoing attack.\n   o  Untrusted content: An attacker
    could inject malicious code into\n      the report, exploiting any vulnerabilities
    in the report-handling\n      systems of the receiving domain.  Implementers are
    advised to take\n      precautions against evaluating the contents of the report.\n
    \  o  Report snooping: An attacker could create a bogus TLSRPT record to\n      receive
    statistics about a domain the attacker does not own.\n      Since an attacker
    that is able to poison DNS is already able to\n      receive counts of SMTP connections
    (and, absent DANE or MTA-STS\n      policies, actual SMTP message payloads), this
    does not present a\n      significant new vulnerability.\n   o  Ignoring HTTPS
    validation when submitting reports: When reporting\n      benign misconfigurations,
    it is likely that a misconfigured SMTP\n      server may also mean a misconfigured
    HTTPS server; as a result,\n      reporters who require HTTPS validity on the
    reporting endpoint may\n      fail to alert administrators about such misconfigurations.\n
    \     Conversely, in the event of an actual attack, an attacker who\n      wishes
    to create a gap in reporting and could intercept HTTPS\n      reports could, just
    as easily, simply thwart the resolution of the\n      TLSRPT TXT record or establishment
    of the TCP session to the HTTPS\n      endpoint.  Furthermore, such a man-in-the-middle
    attacker could\n      discover most or all of the metadata exposed in a report
    merely\n      through passive observation.  As a result, we consider the risks\n
    \     of failure to deliver reports on misconfigurations to outweigh\n      those
    of attackers intercepting reports.\n   o  Reports as DDoS: TLSRPT allows specifying
    destinations for the\n      reports that are outside the authority of the Policy
    Domain, which\n      allows domains to delegate processing of reports to a partner\n
    \     organization.  However, an attacker who controls the Policy Domain\n      DNS
    could also use this mechanism to direct the reports to an\n      unwitting victim,
    flooding that victim with excessive reports.\n      DMARC [RFC7489] defines a
    solution for verifying delegation to\n      avoid such attacks; the need for this
    is greater with DMARC,\n      however, because DMARC allows an attacker to trigger
    reports to a\n      target from an innocent third party by sending mail to that
    third\n      party (which triggers a report from the third party to the\n      target).
    \ In the case of TLSRPT, the attacker would have to induce\n      the third party
    to send mail to the attacker in order to trigger\n      reports from the third
    party to the victim; this reduces the risk\n      of such an attack and the need
    for a verification mechanism.\n   Finally, because TLSRPT is intended to help
    administrators discover\n   man-in-the-middle attacks against transport-layer
    encryption,\n   including attacks designed to thwart negotiation of encrypted\n
    \  connections (by downgrading opportunistic encryption or, in the case\n   of
    MTA-STS, preventing discovery of a new MTA-STS Policy), we must\n   also consider
    the risk that an adversary who can induce such a\n   downgrade attack can also
    prevent discovery of the TLSRPT TXT record\n   (and thus prevent discovery of
    the successful downgrade attack).\n   Administrators are thus encouraged to deploy
    TLSRPT TXT records with\n   a large TTL (reducing the window for successful application
    of\n   transient attacks against DNS resolution of the record) or to deploy\n
    \  DNSSEC on the deploying zone.\n"
  title: 7.  Security Considerations
- contents:
  - "8.  Privacy Considerations\n   MTAs are generally considered public knowledge;
    however, the\n   internals of how those MTAs are configured and the users of those\n
    \  MTAs may not be as public.  It should be noted that providing a\n   receiving
    site with information about TLS failures may reveal\n   information about the
    sender's configuration or even information\n   about the senders themselves.  For
    example, sending a report may\n   disclose what TLS implementation the sender
    uses, as the inability to\n   negotiate a session may be a known incompatibility
    between two\n   implementations.  This may, indirectly, leak information on the\n
    \  reporter's operating system or even region, if, for example, a rare\n   TLS
    implementation is popular among certain users or in certain\n   locations.\n"
  title: 8.  Privacy Considerations
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [RFC1952]  Deutsch, P., \"GZIP file format specification
      version 4.3\",\n              RFC 1952, DOI 10.17487/RFC1952, May 1996,\n              <https://www.rfc-editor.org/info/rfc1952>.\n
      \  [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement
      Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n
      \             <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC3339]  Klyne,
      G. and C. Newman, \"Date and Time on the Internet:\n              Timestamps\",
      RFC 3339, DOI 10.17487/RFC3339, July 2002,\n              <https://www.rfc-editor.org/info/rfc3339>.\n
      \  [RFC3492]  Costello, A., \"Punycode: A Bootstring encoding of Unicode\n              for
      Internationalized Domain Names in Applications\n              (IDNA)\", RFC
      3492, DOI 10.17487/RFC3492, March 2003,\n              <https://www.rfc-editor.org/info/rfc3492>.\n
      \  [RFC3986]  Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform\n              Resource
      Identifier (URI): Generic Syntax\", STD 66,\n              RFC 3986, DOI 10.17487/RFC3986,
      January 2005,\n              <https://www.rfc-editor.org/info/rfc3986>.\n   [RFC5234]
      \ Crocker, D., Ed. and P. Overell, \"Augmented BNF for Syntax\n              Specifications:
      ABNF\", STD 68, RFC 5234,\n              DOI 10.17487/RFC5234, January 2008,\n
      \             <https://www.rfc-editor.org/info/rfc5234>.\n   [RFC5280]  Cooper,
      D., Santesson, S., Farrell, S., Boeyen, S.,\n              Housley, R., and
      W. Polk, \"Internet X.509 Public Key\n              Infrastructure Certificate
      and Certificate Revocation List\n              (CRL) Profile\", RFC 5280, DOI
      10.17487/RFC5280, May 2008,\n              <https://www.rfc-editor.org/info/rfc5280>.\n
      \  [RFC5321]  Klensin, J., \"Simple Mail Transfer Protocol\", RFC 5321,\n              DOI
      10.17487/RFC5321, October 2008,\n              <https://www.rfc-editor.org/info/rfc5321>.\n
      \  [RFC5322]  Resnick, P., Ed., \"Internet Message Format\", RFC 5322,\n              DOI
      10.17487/RFC5322, October 2008,\n              <https://www.rfc-editor.org/info/rfc5322>.\n
      \  [RFC5891]  Klensin, J., \"Internationalized Domain Names in\n              Applications
      (IDNA): Protocol\", RFC 5891,\n              DOI 10.17487/RFC5891, August 2010,\n
      \             <https://www.rfc-editor.org/info/rfc5891>.\n   [RFC5952]  Kawamura,
      S. and M. Kawashima, \"A Recommendation for IPv6\n              Address Text
      Representation\", RFC 5952,\n              DOI 10.17487/RFC5952, August 2010,\n
      \             <https://www.rfc-editor.org/info/rfc5952>.\n   [RFC6068]  Duerst,
      M., Masinter, L., and J. Zawinski, \"The 'mailto'\n              URI Scheme\",
      RFC 6068, DOI 10.17487/RFC6068, October 2010,\n              <https://www.rfc-editor.org/info/rfc6068>.\n
      \  [RFC6376]  Crocker, D., Ed., Hansen, T., Ed., and M. Kucherawy, Ed.,\n              \"DomainKeys
      Identified Mail (DKIM) Signatures\", STD 76,\n              RFC 6376, DOI 10.17487/RFC6376,
      September 2011,\n              <https://www.rfc-editor.org/info/rfc6376>.\n
      \  [RFC6522]  Kucherawy, M., Ed., \"The Multipart/Report Media Type for\n              the
      Reporting of Mail System Administrative Messages\",\n              STD 73, RFC
      6522, DOI 10.17487/RFC6522, January 2012,\n              <https://www.rfc-editor.org/info/rfc6522>.\n
      \  [RFC6698]  Hoffman, P. and J. Schlyter, \"The DNS-Based Authentication\n
      \             of Named Entities (DANE) Transport Layer Security (TLS)\n              Protocol:
      TLSA\", RFC 6698, DOI 10.17487/RFC6698, August\n              2012, <https://www.rfc-editor.org/info/rfc6698>.\n
      \  [RFC6713]  Levine, J., \"The 'application/zlib' and 'application/gzip'\n
      \             Media Types\", RFC 6713, DOI 10.17487/RFC6713, August 2012,\n
      \             <https://www.rfc-editor.org/info/rfc6713>.\n   [RFC7208]  Kitterman,
      S., \"Sender Policy Framework (SPF) for\n              Authorizing Use of Domains
      in Email, Version 1\", RFC 7208,\n              DOI 10.17487/RFC7208, April
      2014,\n              <https://www.rfc-editor.org/info/rfc7208>.\n   [RFC7231]
      \ Fielding, R., Ed. and J. Reschke, Ed., \"Hypertext Transfer\n              Protocol
      (HTTP/1.1): Semantics and Content\", RFC 7231,\n              DOI 10.17487/RFC7231,
      June 2014,\n              <https://www.rfc-editor.org/info/rfc7231>.\n   [RFC7405]
      \ Kyzivat, P., \"Case-Sensitive String Support in ABNF\",\n              RFC
      7405, DOI 10.17487/RFC7405, December 2014,\n              <https://www.rfc-editor.org/info/rfc7405>.\n
      \  [RFC7493]  Bray, T., Ed., \"The I-JSON Message Format\", RFC 7493,\n              DOI
      10.17487/RFC7493, March 2015,\n              <https://www.rfc-editor.org/info/rfc7493>.\n
      \  [RFC7671]  Dukhovni, V. and W. Hardaker, \"The DNS-Based\n              Authentication
      of Named Entities (DANE) Protocol: Updates\n              and Operational Guidance\",
      RFC 7671, DOI 10.17487/RFC7671,\n              October 2015, <https://www.rfc-editor.org/info/rfc7671>.\n
      \  [RFC7672]  Dukhovni, V. and W. Hardaker, \"SMTP Security via\n              Opportunistic
      DNS-Based Authentication of Named Entities\n              (DANE) Transport Layer
      Security (TLS)\", RFC 7672,\n              DOI 10.17487/RFC7672, October 2015,\n
      \             <https://www.rfc-editor.org/info/rfc7672>.\n   [RFC8174]  Leiba,
      B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119 Key Words\",
      BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n
      \  [RFC8461]  Margolis, D., Risher, M., Ramakrishnan, B., Brotman, A.,\n              and
      J. Jones, \"SMTP MTA Strict Transport Security (MTA-\n              STS)\",
      RFC 8461, DOI 10.17487/RFC8461, September 2018,\n              <https://www.rfc-editor.org/info/rfc8461>.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [RFC3207]  Hoffman, P., \"SMTP Service Extension
      for Secure SMTP over\n              Transport Layer Security\", RFC 3207, DOI
      10.17487/RFC3207,\n              February 2002, <https://www.rfc-editor.org/info/rfc3207>.\n
      \  [RFC3464]  Moore, K. and G. Vaudreuil, \"An Extensible Message Format\n              for
      Delivery Status Notifications\", RFC 3464,\n              DOI 10.17487/RFC3464,
      January 2003,\n              <https://www.rfc-editor.org/info/rfc3464>.\n   [RFC3501]
      \ Crispin, M., \"INTERNET MESSAGE ACCESS PROTOCOL - VERSION\n              4rev1\",
      RFC 3501, DOI 10.17487/RFC3501, March 2003,\n              <https://www.rfc-editor.org/info/rfc3501>.\n
      \  [RFC3864]  Klyne, G., Nottingham, M., and J. Mogul, \"Registration\n              Procedures
      for Message Header Fields\", BCP 90, RFC 3864,\n              DOI 10.17487/RFC3864,
      September 2004,\n              <https://www.rfc-editor.org/info/rfc3864>.\n
      \  [RFC6533]  Hansen, T., Ed., Newman, C., and A. Melnikov,\n              \"Internationalized
      Delivery Status and Disposition\n              Notifications\", RFC 6533, DOI
      10.17487/RFC6533, February\n              2012, <https://www.rfc-editor.org/info/rfc6533>.\n
      \  [RFC7435]  Dukhovni, V., \"Opportunistic Security: Some Protection\n              Most
      of the Time\", RFC 7435, DOI 10.17487/RFC7435,\n              December 2014,
      <https://www.rfc-editor.org/info/rfc7435>.\n   [RFC7469]  Evans, C., Palmer,
      C., and R. Sleevi, \"Public Key Pinning\n              Extension for HTTP\",
      RFC 7469, DOI 10.17487/RFC7469, April\n              2015, <https://www.rfc-editor.org/info/rfc7469>.\n
      \  [RFC7489]  Kucherawy, M., Ed. and E. Zwicky, Ed., \"Domain-based\n              Message
      Authentication, Reporting, and Conformance\n              (DMARC)\", RFC 7489,
      DOI 10.17487/RFC7489, March 2015,\n              <https://www.rfc-editor.org/info/rfc7489>.\n
      \  [RFC8098]  Hansen, T., Ed. and A. Melnikov, Ed., \"Message Disposition\n
      \             Notification\", STD 85, RFC 8098, DOI 10.17487/RFC8098,\n              February
      2017, <https://www.rfc-editor.org/info/rfc8098>.\n   [RFC8126]  Cotton, M.,
      Leiba, B., and T. Narten, \"Guidelines for\n              Writing an IANA Considerations
      Section in RFCs\", BCP 26,\n              RFC 8126, DOI 10.17487/RFC8126, June
      2017,\n              <https://www.rfc-editor.org/info/rfc8126>.\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - 'Appendix A.  Example Reporting Policy

    '
  - contents:
    - "A.1.  Report Using MAILTO\n            _smtp._tls.mail.example.com. IN TXT
      \\\n                    \"v=TLSRPTv1;rua=mailto:reports@example.com\"\n"
    title: A.1.  Report Using MAILTO
  - contents:
    - "A.2.  Report Using HTTPS\n           _smtp._tls.mail.example.com. IN TXT \\\n
      \                  \"v=TLSRPTv1; \\\n                   rua=https://reporting.example.com/v1/tlsrpt\"\n"
    title: A.2.  Report Using HTTPS
  title: Appendix A.  Example Reporting Policy
- contents:
  - "Appendix B.  Example JSON Report\n   Below is an example JSON report for messages
    from Company-X to\n   Company-Y, where 100 sessions were attempted to Company-Y
    servers\n   with an expired certificate, and 200 sessions were attempted to\n
    \  Company-Y servers that did not successfully respond to the \"STARTTLS\"\n   command.
    \ Additionally, 3 sessions failed due to\n   \"X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED\".\n
    \  {\n     \"organization-name\": \"Company-X\",\n     \"date-range\": {\n       \"start-datetime\":
    \"2016-04-01T00:00:00Z\",\n       \"end-datetime\": \"2016-04-01T23:59:59Z\"\n
    \    },\n     \"contact-info\": \"sts-reporting@company-x.example\",\n     \"report-id\":
    \"5065427c-23d3-47ca-b6e0-946ea0e8c4be\",\n     \"policies\": [{\n       \"policy\":
    {\n         \"policy-type\": \"sts\",\n         \"policy-string\": [\"version:
    STSv1\",\"mode: testing\",\n               \"mx: *.mail.company-y.example\",\"max_age:
    86400\"],\n         \"policy-domain\": \"company-y.example\",\n         \"mx-host\":
    \"*.mail.company-y.example\"\n       },\n       \"summary\": {\n         \"total-successful-session-count\":
    5326,\n         \"total-failure-session-count\": 303\n       },\n       \"failure-details\":
    [{\n         \"result-type\": \"certificate-expired\",\n         \"sending-mta-ip\":
    \"2001:db8:abcd:0012::1\",\n         \"receiving-mx-hostname\": \"mx1.mail.company-y.example\",\n
    \        \"failed-session-count\": 100\n       }, {\n         \"result-type\":
    \"starttls-not-supported\",\n         \"sending-mta-ip\": \"2001:db8:abcd:0013::1\",\n
    \        \"receiving-mx-hostname\": \"mx2.mail.company-y.example\",\n         \"receiving-ip\":
    \"203.0.113.56\",\n         \"failed-session-count\": 200,\n         \"additional-information\":
    \"https://reports.company-x.example/\n           report_info ? id = 5065427 c
    - 23 d3# StarttlsNotSupported \"\n       }, {\n         \"result-type\": \"validation-failure\",\n
    \        \"sending-mta-ip\": \"198.51.100.62\",\n         \"receiving-ip\": \"203.0.113.58\",\n
    \        \"receiving-mx-hostname\": \"mx-backup.mail.company-y.example\",\n         \"failed-session-count\":
    3,\n         \"failure-reason-code\": \"X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED\"\n
    \      }]\n     }]\n   }\n"
  title: Appendix B.  Example JSON Report
- contents:
  - "Contributors\n   Laetitia Baudoin\n   Google, Inc.\n   lbaudoin@google.com\n"
  title: Contributors
- contents:
  - "Authors' Addresses\n   Daniel Margolis\n   Google, Inc.\n   Email: dmargolis@google.com\n
    \  Alexander Brotman\n   Comcast, Inc.\n   Email: alex_brotman@comcast.com\n   Binu
    Ramakrishnan\n   Oath, Inc.\n   Email: prbinu@yahoo.com\n   Janet Jones\n   Microsoft,
    Inc.\n   Email: janet.jones@microsoft.com\n   Mark Risher\n   Google, Inc.\n   Email:
    risher@google.com\n"
  title: Authors' Addresses
