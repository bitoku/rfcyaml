- title: __initial_text__
  contents:
  - '            Selection and Operation of Secondary DNS Servers

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet Best Current Practices\
    \ for the\n   Internet Community, and requests discussion and suggestions for\n\
    \   improvements.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   The Domain Name System requires that multiple servers exist for\
    \ every\n   delegated domain (zone).  This document discusses the selection of\n\
    \   secondary servers for DNS zones.  Both the physical and topological\n   location\
    \ of each server are material considerations when selecting\n   secondary servers.\
    \  The number of servers appropriate for a zone is\n   also discussed, and some\
    \ general secondary server maintenance issues\n   considered.\n"
- title: Contents
  contents:
  - "Contents\n       Abstract  ...................................................\
    \   1\n    1  Introduction  ...............................................  \
    \ 2\n    2  Definitions  ................................................   2\n\
    \    3  Secondary Servers  ..........................................   3\n  \
    \  4  Unreachable servers  ........................................   5\n    5\
    \  How many secondaries?  ......................................   7\n    6  Finding\
    \ Suitable Secondary Servers  .........................   8\n    7  Serial Number\
    \ Maintenance  ..................................   9\n       Security Considerations\
    \  ....................................  11\n       References  .................................................\
    \  11\n       Acknowledgements  ...........................................  11\n\
    \       Authors' Addresses  .........................................  11\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   A number of problems in DNS operations today are attributable\
    \ to poor\n   choices of secondary servers for DNS zones.  The geographic placement\n\
    \   as well as the diversity of network connectivity exhibited by the set\n  \
    \ of DNS servers for a zone can increase the reliability of that zone\n   as well\
    \ as improve overall network performance and access\n   characteristics.  Other\
    \ considerations in server choice can\n   unexpectedly lower reliability or impose\
    \ extra demands on the\n   network.\n   This document discusses many of the issues\
    \ that should be considered\n   when selecting secondary servers for a zone. \
    \ It offers guidance in\n   how to best choose servers to serve a given zone.\n"
- title: 2. Definitions
  contents:
  - "2. Definitions\n   For the purposes of this document, and only this document,\
    \ the\n   following definitions apply:\n   DNS                    The Domain Name\
    \ System [RFC1034, RFC1035].\n   Zone                   A part of the DNS tree,\
    \ that is treated as a\n                          unit.\n   Forward Zone     \
    \      A zone containing data mapping names to host\n                        \
    \  addresses, mail exchange targets, etc.\n   Reverse Zone           A zone containing\
    \ data used to map addresses\n                          to names.\n   Server \
    \                An implementation of the DNS protocols able to\n            \
    \              provide answers to queries.  Answers may be\n                 \
    \         from information known by the server, or\n                         \
    \ information obtained from another server.\n   Authoritative Server   A server\
    \ that knows the content of a DNS zone\n                          from local knowledge,\
    \ and thus can answer\n                          queries about that zone without\
    \ needing to\n                          query other servers.\n   Listed Server\
    \          An Authoritative Server for which there is an\n                   \
    \       \"NS\" resource record (RR) in the zone.\n   Primary Server         An\
    \ authoritative server for which the zone\n                          information\
    \ is locally configured.  Sometimes\n                          known as a Master\
    \ server.\n   Secondary Server       An authoritative server that obtains\n  \
    \                        information about a zone from a Primary Server\n    \
    \                      via a zone transfer mechanism.  Sometimes\n           \
    \               known as a Slave Server.\n   Stealth Server         An authoritative\
    \ server, usually secondary,\n                          which is not a Listed\
    \ Server.\n   Resolver               A client of the DNS which seeks information\n\
    \                          contained in a zone using the DNS protocols.\n"
- title: 3. Secondary Servers
  contents:
  - "3. Secondary Servers\n   A major reason for having multiple servers for each\
    \ zone is to allow\n   information from the zone to be available widely and reliably\
    \ to\n   clients throughout the Internet, that is, throughout the world, even\n\
    \   when one server is unavailable or unreachable.\n   Multiple servers also spread\
    \ the name resolution load, and improve\n   the overall efficiency of the system\
    \ by placing servers nearer to the\n   resolvers.  Those purposes are not treated\
    \ further here.\n   With multiple servers, usually one server will be the primary\
    \ server,\n   and others will be secondary servers.  Note that while some unusual\n\
    \   configurations use multiple primary servers, that can result in data\n   inconsistencies,\
    \ and is not advisable.\n   The distinction between primary and secondary servers\
    \ is relevant\n   only to the servers for the zone concerned, to the rest of the\
    \ DNS\n   there are simply multiple servers.  All are treated equally at first\n\
    \   instance, even by the parent server that delegates the zone.\n   Resolvers\
    \ often measure the performance of the various servers,\n   choose the \"best\"\
    , for some definition of best, and prefer that one\n   for most queries.  That\
    \ is automatic, and not considered here.\n   The primary server holds the master\
    \ copy of the zone file.  That is,\n   the server where the data is entered into\
    \ the DNS from some source\n   outside the DNS.  Secondary servers obtain data\
    \ for the zone using\n   DNS protocol mechanisms to obtain the zone from the primary\
    \ server.\n"
- title: 3.1. Selecting Secondary Servers
  contents:
  - "3.1. Selecting Secondary Servers\n   When selecting secondary servers, attention\
    \ should be given to the\n   various likely failure modes.  Servers should be\
    \ placed so that it is\n   likely that at least one server will be available to\
    \ all significant\n   parts of the Internet, for any likely failure.\n   Consequently,\
    \ placing all servers at the local site, while easy to\n   arrange, and easy to\
    \ manage, is not a good policy.  Should a single\n   link fail, or there be a\
    \ site, or perhaps even building, or room,\n   power failure, such a configuration\
    \ can lead to all servers being\n   disconnected from the Internet.\n   Secondary\
    \ servers must be placed at both topologically and\n   geographically dispersed\
    \ locations on the Internet, to minimise the\n   likelihood of a single failure\
    \ disabling all of them.\n   That is, secondary servers should be at geographically\
    \ distant\n   locations, so it is unlikely that events like power loss, etc, will\n\
    \   disrupt all of them simultaneously.  They should also be connected to\n  \
    \ the net via quite diverse paths.  This means that the failure of any\n   one\
    \ link, or of routing within some segment of the network (such as a\n   service\
    \ provider) will not make all of the servers unreachable.\n"
- title: 3.2. Unsuitable Configurations
  contents:
  - "3.2. Unsuitable Configurations\n   While it is unfortunately quite common, servers\
    \ for a zone should\n   certainly not all be placed on the same LAN segment in\
    \ the same room\n   of the same building - or any of those.  Such a configuration\
    \ almost\n   defeats the requirement, and utility, of having multiple servers.\n\
    \   The only redundancy usually provided in that configuration is for the\n  \
    \ case when one server is down, whereas there are many other possible\n   failure\
    \ modes, such as power failures, including lengthy ones, to\n   consider.\n"
- title: 3.3. A Myth Exploded
  contents:
  - "3.3. A Myth Exploded\n   An argument is occasionally made that there is no need\
    \ for the domain\n   name servers for a domain to be accessible if the hosts in\
    \ the domain\n   are unreachable.  This argument is fallacious.\n     + Clients\
    \ react differently to inability to resolve than inability\n       to connect,\
    \ and reactions to the former are not always as\n       desirable.\n     + If\
    \ the zone is resolvable yet the particular name is not, then a\n       client\
    \ can discard the transaction rather than retrying and\n       creating undesirable\
    \ load on the network.\n     + While positive DNS results are usually cached,\
    \ the lack of a\n       result is not cached.  Thus, unnecessary inability to\
    \ resolve\n       creates an undesirable load on the net.\n     + All names in\
    \ the zone may not resolve to addresses within the\n       detached network. \
    \ This becomes more likely over time.  Thus a\n       basic assumption of the\
    \ myth often becomes untrue.\n   It is important that there be nameservers able\
    \ to be queried,\n   available always, for all forward zones.\n"
- title: 4. Unreachable servers
  contents:
  - "4. Unreachable servers\n   Another class of problems is caused by listing servers\
    \ that cannot be\n   reached from large parts of the network.  This could be listing\
    \ the\n   name of a machine that is completely isolated behind a firewall, or\n\
    \   just a secondary address on a dual homed machine which is not\n   accessible\
    \ from outside.  The names of servers listed in NS records\n   should resolve\
    \ to addresses which are reachable from the region to\n   which the NS records\
    \ are being returned.  Including addresses which\n   most of the network cannot\
    \ reach does not add any reliability, and\n   causes several problems, which may,\
    \ in the end, lower the reliability\n   of the zone.\n   First, the only way the\
    \ resolvers can determine that these addresses\n   are, in fact, unreachable,\
    \ is to try them.  They then need to wait on\n   a lack of response timeout (or\
    \ occasionally an ICMP error response)\n   to know that the address cannot be\
    \ used.  Further, even that is\n   generally indistinguishable from a simple packet\
    \ loss, so the\n   sequence must be repeated, several times, to give any real\
    \ evidence\n   of an unreachable server.  All of this probing and timeout may\
    \ take\n   sufficiently long that the original client program or user will\n \
    \  decide that no answer is available, leading to an apparent failure of\n   the\
    \ zone.  Additionally, the whole thing needs to be repeated from\n   time to time\
    \ to distinguish a permanently unreachable server from a\n   temporarily unreachable\
    \ one.\n   And finally, all these steps will potentially need to be done by\n\
    \   resolvers all over the network.  This will increase the traffic, and\n   probably\
    \ the load on the filters at whatever firewall is blocking\n   this access.  All\
    \ of this additional load does no more than\n   effectively lower the reliability\
    \ of the service.\n"
- title: 4.1. Servers behind intermittent connections
  contents:
  - "4.1. Servers behind intermittent connections\n   A similar problem occurs with\
    \ DNS servers located in parts of the net\n   that are often disconnected from\
    \ the Internet as a whole.  For\n   example, those which connect via an intermittent\
    \ connection that is\n   often down.  Such servers should usually be treated as\
    \ if they were\n   behind a firewall, and unreachable to the network at any time.\n"
- title: 4.2. Other problem cases
  contents:
  - "4.2. Other problem cases\n   Similar problems occur when a Network Address Translator\
    \ (NAT)\n   [RFC1631] exists between a resolver and server.  Despite what\n  \
    \ [RFC1631] suggests, NATs in practice do not translate addresses\n   embedded\
    \ in packets, only those in the headers.  As [RFC1631]\n   suggests, this is somewhat\
    \ of a problem for the DNS.  This can\n   sometimes be overcome if the NAT is\
    \ accompanied by, or replaced with,\n   an Application Layer Gateway (ALG).  Such\
    \ a device would understand\n   the DNS protocol and translate all the addresses\
    \ as appropriate as\n   packets pass through.  Even with such a device, it is\
    \ likely to be\n   better in any of these cases to adopt the solution described\
    \ in the\n   following section.\n"
- title: 4.3. A Solution
  contents:
  - "4.3. A Solution\n   To avoid these problems, NS records for a zone returned in\
    \ any\n   response should list only servers that the resolver requesting the\n\
    \   information, is likely to be able to reach.  Some resolvers are\n   simultaneously\
    \ servers performing lookups on behalf of other\n   resolvers.  The NS records\
    \ returned should be reachable not only by\n   the resolver that requested the\
    \ information, but any other resolver\n   that may be forwarded the information.\
    \  All the addresses of all the\n   servers returned must be reachable.  As the\
    \ addresses of each server\n   form a Resource Record Set [RFC2181], all must\
    \ be returned (or none),\n   thus it is not acceptable to elide addresses of servers\
    \ that are\n   unreachable, or to return them with a low TTL (while returning\
    \ others\n   with a higher TTL).\n   In particular, when some servers are behind\
    \ a firewall, intermittent\n   connection, or NAT, which disallows, or has problems\
    \ with, DNS\n   queries or responses, their names, or addresses, should not be\n\
    \   returned to clients outside the firewall.  Similarly, servers outside\n  \
    \ the firewall should not be made known to clients inside it, if the\n   clients\
    \ would be unable to query those servers.  Implementing this\n   usually requires\
    \ dual DNS setups, one for internal use, the other for\n   external use.  Such\
    \ a setup often solves other problems with\n   environments like this.\n   When\
    \ a server is at a firewall boundary, reachable from both sides,\n   but using\
    \ different addresses, that server should be given two names,\n   each name associated\
    \ with appropriate A records, such that each\n   appears to be reachable only\
    \ on the appropriate side of the firewall.\n   This should then be treated just\
    \ like two servers, one on each side\n   of the firewall.  A server implemented\
    \ in an ALG will usually be such\n   a case.  Special care will need to be taken\
    \ to allow such a server to\n   return the correct responses to clients on each\
    \ side.  That is,\n   return only information about hosts reachable from that\
    \ side and the\n   correct IP address(es) for the host when viewed from that side.\n\
    \   Servers in this environment often need special provision to give them\n  \
    \ access to the root servers.  Often this is accomplished via \"fake\n   root\"\
    \ configurations.  In such a case the servers should be kept well\n   isolated\
    \ from the rest of the DNS, lest their unusual configuration\n   pollute others.\n"
- title: 5. How many secondaries?
  contents:
  - "5. How many secondaries?\n   The DNS specification and domain name registration\
    \ rules require at\n   least two servers for every zone.  That is, usually, the\
    \ primary and\n   one secondary.  While two, carefully placed, are often sufficient,\n\
    \   occasions where two are insufficient are frequent enough that we\n   advise\
    \ the use of more than two listed servers.  Various problems can\n   cause a server\
    \ to be unavailable for extended periods - during such a\n   period, a zone with\
    \ only two listed servers is actually running with\n   just one.  Since any server\
    \ may occasionally be unavailable, for all\n   kinds of reasons, this zone is\
    \ likely, at times, to have no\n   functional servers at all.\n   On the other\
    \ hand, having large numbers of servers adds little\n   benefit, while adding\
    \ costs.  At the simplest, more servers cause\n   packets to be larger, so requiring\
    \ more bandwidth.  This may seem,\n   and realistically is, trivial.  However\
    \ there is a limit to the size\n   of a DNS packet, and causing that limit to\
    \ be reached has more\n   serious performance implications.  It is wise to stay\
    \ well clear of\n   it.  More servers also increase the likelihood that one server\
    \ will\n   be misconfigured, or malfunction, without being detected.\n   It is\
    \ recommended that three servers be provided for most\n   organisation level zones,\
    \ with at least one which must be well\n   removed from the others.  For zones\
    \ where even higher reliability is\n   required, four, or even five, servers may\
    \ be desirable.  Two, or\n   occasionally three of five, would be at the local\
    \ site, with the\n   others not geographically or topologically close to the site,\
    \ or each\n   other.\n   Reverse zones, that is, sub-domains of .IN-ADDR.ARPA,\
    \ tend to be less\n   crucial, and less servers, less distributed, will often\
    \ suffice.\n   This is because address to name translations are typically needed\n\
    \   only when packets are being received from the address in question,\n   and\
    \ only by resolvers at or near the destination of the packets.\n   This gives\
    \ some assurances that servers located at or near the packet\n   source, for example,\
    \ on the the same network, will be reachable from\n   the resolvers that need\
    \ to perform the lookups.  Thus some of the\n   failure modes that need to be\
    \ considered when planning servers for\n   forward zones may be less relevant\
    \ when reverse zones are being\n   planned.\n"
- title: 5.1. Stealth Servers
  contents:
  - "5.1. Stealth Servers\n   Servers which are authoritative for the zone, but not\
    \ listed in NS\n   records (also known as \"stealth\" servers) are not included\
    \ in the\n   count of servers.\n   It can often be useful for all servers at a\
    \ site to be authoritative\n   (secondary), but only one or two be listed servers,\
    \ the rest being\n   unlisted servers for all local zones, that is, to be stealth\
    \ servers.\n   This allows those servers to provide answers to local queries\n\
    \   directly, without needing to consult another server.  If it were\n   necessary\
    \ to consult another server, it would usually be necessary\n   for the root servers\
    \ to be consulted, in order to follow the\n   delegation tree - that the zone\
    \ is local would not be known.  This\n   would mean that some local queries may\
    \ not be able to be answered if\n   external communications were disrupted.\n\
    \   Listing all such servers in NS records, if more than one or two,\n   would\
    \ cause the rest of the Internet to spend unnecessary effort\n   attempting to\
    \ contact all servers at the site when the whole site is\n   inaccessible due\
    \ to link or routing failures.\n"
- title: 6. Finding Suitable Secondary Servers
  contents:
  - "6. Finding Suitable Secondary Servers\n   Operating a secondary server is usually\
    \ an almost automatic task.\n   Once established, the server generally runs itself,\
    \ based upon the\n   actions of the primary server.  Because of this, large numbers\
    \ of\n   organisations are willing to provide a secondary server, if\n   requested.\
    \  The best approach is usually to find an organisation of\n   similar size, and\
    \ agree to swap secondary zones - each organisation\n   agrees to provide a server\
    \ to act as a secondary server for the other\n   organisation's zones.  Note that\
    \ there is no loss of confidential\n   data here, the data set exchanged would\
    \ be available publically\n   whatever the servers are.\n"
- title: 7. Serial Number Maintenance
  contents:
  - "7. Serial Number Maintenance\n   Secondary servers use the serial number in the\
    \ SOA record of the zone\n   to determine when it is necessary to update their\
    \ local copy of the\n   zone.  Serial numbers are basically just 32 bit unsigned\
    \ integers\n   that wrap around from the biggest possible value to zero again.\
    \  See\n   [RFC1982] for a more rigorous definition of the serial number.\n  \
    \ The serial number must be incremented every time a change, or group\n   of changes,\
    \ is made to the zone on the primary server.  This informs\n   secondary servers\
    \ they need update their copies of the zone.  Note\n   that it is not possible\
    \ to decrement a serial number, increments are\n   the only defined modification.\n\
    \   Occasionally due to editing errors, or other factors, it may be\n   necessary\
    \ to cause a serial number to become smaller.  Never simply\n   decrease the serial\
    \ number.  Secondary servers will ignore that\n   change, and further, will ignore\
    \ any later increments until the\n   earlier large value is exceeded.\n   Instead,\
    \ given that serial numbers wrap from large to small, in\n   absolute terms, increment\
    \ the serial number, several times, until it\n   has reached the value desired.\
    \  At each step, wait until all\n   secondary servers have updated to the new\
    \ value before proceeding.\n   For example, assume that the serial number of a\
    \ zone was 10, but has\n   accidentally been set to 1000, and it is desired to\
    \ set it back to\n   11.  Do not simply change the value from 1000 to 11.  A secondary\n\
    \   server that has seen the 1000 value (and in practice, there is always\n  \
    \ at least one) will ignore this change, and continue to use the\n   version of\
    \ the zone with serial number 1000, until the primary\n   server's serial number\
    \ exceeds that value.  This may be a long time -\n   in fact, the secondary often\
    \ expires its copy of the zone before the\n   zone is ever updated again.\n  \
    \ Instead, for this example, set the primary's serial number to\n   2000000000,\
    \ and wait for the secondary servers to update to that\n   zone.  The value 2000000000\
    \ is chosen as a value a lot bigger than\n   the current value, but less that\
    \ 2^31 bigger (2^31 is 2147483648).\n   This is then an increment of the serial\
    \ number [RFC1982].\n   Next, after all servers needing updating have the zone\
    \ with that\n   serial number, the serial number can be set to 4000000000.\n \
    \  4000000000 is 2000000000 more than 2000000000 (fairly clearly), and\n   is\
    \ thus another increment (the value added is less than 2^31).\n   Once this copy\
    \ of the zone file exists at all servers, the serial\n   number can simply be\
    \ set to 11.  In serial number arithmetic, a\n   change from 4000000000 to 11\
    \ is an increment.  Serial numbers wrap at\n   2^32 (4294967296), so 11 is identical\
    \ to 4294967307 (4294967296 +\n    11).  4294967307 is just 294967307 greater\
    \ than 4000000000, and\n   294967307 is well under 2^31, this is therefore an\
    \ increment.\n   When following this procedure, it is essential to verify that\
    \ all\n   relevant servers have been updated at each step, never assume\n   anything.\
    \  Failing to do this can result in a worse mess than existed\n   before the attempted\
    \ correction.  Also beware that it is the\n   relationship between the values\
    \ of the various serial numbers that is\n   important, not the absolute values.\
    \  The values used above are\n   correct for that one example only.\n   It is\
    \ possible in essentially all cases to correct the serial number\n   in two steps\
    \ by being more aggressive in the choices of the serial\n   numbers.  This however\
    \ causes the numbers used to be less \"nice\", and\n   requires considerably more\
    \ care.\n   Also, note that not all nameserver implementations correctly\n   implement\
    \ serial number operations.  With such servers as secondaries\n   there is typically\
    \ no way to cause the serial number to become\n   smaller, other than contacting\
    \ the administrator of the server and\n   requesting that all existing data for\
    \ the zone be purged.  Then that\n   the secondary be loaded again from the primary,\
    \ as if for the first\n   time.\n   It remains safe to carry out the above procedure,\
    \ as the\n   malfunctioning servers will need manual attention in any case.  After\n\
    \   the sequence of serial number changes described above, conforming\n   secondary\
    \ servers will have been reset.  Then when the primary server\n   has the correct\
    \ (desired) serial number, contact the remaining\n   secondary servers and request\
    \ their understanding of the correct\n   serial number be manually corrected.\
    \  Perhaps also suggest that they\n   upgrade their software to a standards conforming\
    \ implementation.\n   A server which does not implement this algorithm is defective,\
    \ and\n   may be detected as follows.  At some stage, usually when the absolute\n\
    \   integral value of the serial number becomes smaller, a server with\n   this\
    \ particular defect will ignore the change.  Servers with this\n   type of defect\
    \ can be detected by waiting for at least the time\n   specified in the SOA refresh\
    \ field and then sending a query for the\n   SOA.  Servers with this defect will\
    \ still have the old serial number.\n   We are not aware of other means to detect\
    \ this defect.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   It is not believed that anything in this document\
    \ adds to any\n   security issues that may exist with the DNS, nor does it do\
    \ anything\n   to lessen them.\n   Administrators should be aware, however, that\
    \ compromise of a server\n   for a domain can, in some situations, compromise\
    \ the security of\n   hosts in the domain.  Care should be taken in choosing secondary\n\
    \   servers so that this threat is minimised.\n"
- title: References
  contents:
  - "References\n   [RFC1034]   Mockapetris, P., \"Domain Names - Concepts and Facilities\"\
    ,\n               STD 13, RFC 1034, November 1987.\n   [RFC1035]   Mockapetris,\
    \ P., \"Domain Names - Implementation and\n               Specification\", STD\
    \ 13, RFC 1035, November 1987\n   [RFC1631]   Egevang, K., Francis, P., \"The\
    \ IP Network Address Translator\n               (NAT)\", RFC 1631, May 1994\n\
    \   [RFC1982]   Elz, R., Bush, R., \"Serial Number Arithmetic\",\n           \
    \    RFC 1982, August 1996.\n   [RFC2181]   Elz, R., Bush, R., \"Clarifications\
    \ to the DNS specification\",\n               RFC 2181, July 1997.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Brian Carpenter and Yakov Rekhter suggested mentioning NATs\
    \ and ALGs\n   as a companion to the firewall text.  Dave Crocker suggested\n\
    \   explicitly exploding the myth.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Robert Elz\n   Computer Science\n   University of Melbourne\n\
    \   Parkville, Vic,  3052\n   Australia.\n   EMail: kre@munnari.OZ.AU\n   Randy\
    \ Bush\n   RGnet, Inc.\n   5147 Crystal Springs Drive NE\n   Bainbridge Island,\
    \ Washington,  98110\n   United States.\n   EMail: randy@psg.com\n   Scott Bradner\n\
    \   Harvard University\n   1350 Mass Ave\n   Cambridge, MA,  02138\n   United\
    \ States.\n   EMail: sob@harvard.edu\n   Michael A. Patton\n   33 Blanchard Road\n\
    \   Cambridge, MA,  02138\n   United States.\n   EMail: MAP@POBOX.COM\n"
