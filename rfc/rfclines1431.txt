Abstract This RFC is being distributed to members of the Internet community in order to solicit their reactions to the proposals contained in it.
While the issues discussed may not be directly relevant to the research problems of the Internet, they may be interesting to a number of researchers and implementers.
This document defines a set of criteria by which a DUA implementation, or more precisely a Directory user interface, may be judged.
Particular issues covered include terminal requirements; style of interface; target user; default object classes and attribute types; use of DAP; error handling.
The focus of the note is on "white pages" DUAs:
this is a reflection of the current information base.
Nevertheless much of the document will be applicable to DUAs developed for other types of Directory usage.
Please send comments to the author or to the discussion group <osi
The purpose of this document is to define some metrics by which DUA products can be measured.
It should be first be noted that the use of the term "DUA" is rather misleading.
There is an assumption here that the DUA is implemented correctly and is able to "talk" valid X.500 protocol: this is a sine qua non.
Instead, this document seeks to draw out the characteristics of Directory user interfaces.
However, the term DUA is persisted with as it is used by most people when referring to Directory user interfaces.
The format of these DUA metrics is essentially a questionnaire which extracts a detailed description of a user interface.
DUAs come in very different forms.
Many make use of windowing environments, offering a "high tech" view of the Directory, while others are designed to work in a terminal environment.
Some interfaces offer extensive control over the Directory, and thus may be well suited to Directory managers, while others are aimed more at the novice user.
Some interfaces are configurable to allow searches for any attribute in any part of the DIT, while others lack this generality but are focussed on handling the most typical queries well.
In many aspects, it is almost impossible to say that one DUA is better than other from looking at the responses to question in this document.
A flexible management tool will be better for management than a DUA aimed at servicing simple look ups, and vice versa.
Furthermore, in other areas, there are several radically different approaches to a problem, but it is not as yet clear whether one approach is better than another.
One example of this is the extent to which a DUA provides an abstraction of the underlying DIT hierarchy, either emphasising the world as a tree or trying to conceal this from the user.
However, other aspects, such as whether the DUA can actually find the entries required, and if so, how quickly, can be directly measured in some way.
Throughout this document, some of the questions posed are annotated with a square bracketed points score and an explanation as to how the points should be allocated.
For example, a question might be appended with "[2 if yes]", indicating score 2 points for an affirmative answer to that question.
These points scores should be collated in Table 1 at the end of the document, and this table constitutes a measure of the DUA.
The metrics are on a section by section basis, which should help the reader who is seeking, for example, a DUA with good management capabilities which runs on a wide variety of platforms, to focus on the critical aspects of a DUA for the particular requirement.
This section contains general information about the implementation under discussion.
Describe the hardware and software platforms on which the DUA will run.
Some DUAs are split into a user interface part, and a DUA server part, communicating by means of a protocol.
If the DUA is of the type where the DUA protocol machinery and user agent are implemented in a single process, complete only the user interface section, and indicate "n/a" for the DUA server and communications protocol questions.
User interface part [1 per platform, up to a maximum of 4] i.  Hardware (If appropriate, can summarise as, for example, ii.
O/S (state version if critical)
O/S (state version if critical)
How does the user interface communicate with the DUA server?
C.  LDAP protocol, as described in Internet Draft OSI DS 26 D.
(c)  Name any other software required to run the DUA which is not supplied with the operating system or with the DUA software itself.
If the DUA needs other packages, are these also freely available?
Conformance to OSI Standards 3.1  Directory protocols 7.
Please list all conformance testing work applied to the DUA implementation (here the term DUA is used correctly in the sense of the DUA protocol machinery)
3.2  Protocol stacks For the next two questions, [2 per stack supported for up to 4 stacks]
Which of the following transport and network layer protocols does the DUA support: (a)
Does the DUA support other transport and "network" layer protocols?
State any other options supported.
Does the DUA also run over any lightweight stack?
Does the DUA support the full schema in X.520 and X.521 (y/n)?
(Omissions should be described in response to a later question)
Does the DUA only follow object class hierarchies which conform to the suggested DIT structure in X.521?
Conformance to Research Community Standards
The COSINE and Internet Directory Pilots have agreed a set of extensions to the standard, which make for a more cohesive pilot.
This section is about conformance to these extensions.
Does the DUA fully support RFC1274, "The COSINE and Internet X.500 Schema" (y/n)?
(Omissions should be described in response to a later question)
Can the DUA handle referrals whose network addresses conform to RFC1277, "Encoding Network Addresses to support operation over non OSI lower layers"?
Does the DUA handle the Distinguished Name string syntax described in OSI DS 23,
"A String Representation of Distinguished Names"
Does the DUA make use of the Quality of Service schema extensions described in OSI DS 15,
The General Style of the DUA 18.
Is this a "white pages" interface, designed to give access to information about people within organisations?
If this is a white pages DUA, who is it principally designed to serve?
Indicate more than one of the following categories if appropriate (but please do not fill in so
may categories as to hide due emphasis):
[mark allocated should be the highest for any single classification]
The ordinary user, who has no understanding of X.500, the hierarchical DIT, the state of advancement of the pilot, etc.
Which best describes the use the DUA makes of the user's terminal?
Does the DUA tend to emphasise or de emphasise the DIT hierarchy?
Schema 6.1  Object Classes and Attribute Types
Some DUAs are tightly focussed on answering particular queries:  for example, white pages look ups for information about people.
Others offer more general capabilities.
Please answer this question accordingly.
If the DUA has a tight focus, state: (a)
(c)  Other attribute types which may be configured.
If the DUA has more general capabilities, state: (
State any attributes in RFC1274 which cannot be displayed....
DUAs often have a default object class hierarchy (e.g., it might assume countries at the root of the DIT, organisations immediately under countries, and people somewhere under organisations.
Entering queries The term "querying" is used here as a generic term for finding an entry, whether it be as a simple look up, or the prelude to a modification operation.
Which best describes the query entry style?
A number of strategies are employed by DUAs to find the entry the user is looking for.
These have implications for user friendliness and performance.
For example, an interface which makes extensive use of search operations may be excellent at finding entries, but at the cost of being intolerably slow.
Which of the following strategies most closely accords with the behaviour of the DUA?
(f)  User explicitly controls the X.500 operation which is invoked (g)  Other.
Does the DUA allow a user to "list" (either by the list operation or by a single level search operation)
all the child entries of a node (notwithstanding administrative limits)?
Does the DUA follow aliases?
If so, does it do so:
Will the DUA optionally follow links to other entries by using attributes such as seeAlso and roleOccupant with a DN syntax?
Are the strings used to describe attribute types freely and independently configurable?
Name any attribute types where the attribute values may be presented in local formats?
(For example, it may be possible to configure the display of telephone numbers so that local numbers are shown as extensions, rather than with the full international dialling code.)
Does the DUA allow for the display of more than one result at a time (showing attribute values other than the name of the entry)?
If so, how many entries may be displayed in response to a single query?
Does the DUA support the notion of a quick synopsis, where a small core of attributes is retrieved initially, and a larger set is returned if required?
What does the DUA do with attribute types it doesn't support in its sub schema, but which have a standard syntax?
What does the DUA do with attributes which have are not in its sub schema, and which have a non standard syntax?
(b)  Tell user, but don't display?
Display hex BER encoded value?
(d)  Display in some other format?
Association Handling This section is concerned with how a DUA handles its association with the Directory.
How/where is the access point to the Directory configured?
If more than one method, indicate which ways are possible.
[1 per method, up to maximum of 3]
Does the DUA allow for automatic connection to a back up DSA if the access point
Can the DUA keep connections open to more than one DSA at a time?
Does the DUA keep an idle connection open to the DSA(s).
If not, describe the timeout strategy.
Does the DUA handle referrals automatically?
If not:  does the DUA handle referrals at all?
Does the DUA make use of asynchronous operations?
Does the DUA bind asynchronously?
(b)  Are the operations handled asynchronously?
If so, is this true for: i.  All operations?
Does the DUA use size and time limits by default?
[2 if no limits, or limits may be over ridden]
What size limit is used?
What time limit is used?
This section is intended to establish the range of operations supported by the DUA and, in particular, whether it is suitable for management tasks.
Is it possible to invoke all the operations in the Directory Abstract Service?
Is the user given full control over the service controls?
Is it possible to manage system attributes with the DUA?
If so, indicate which DSA implementations for which this DUA provides management capabilities.
Access control notwithstanding, does the DUA allow the following?
Attribute management [2 for all below, 1 for some]
(b)  Entry management [2 for all below, 1 for some]
This section discusses the process of query resolution.
While two DUAs may both be able to resolve a query using the same information, one may do so much more quickly than the other.
Some DUAs may be more "economic" in their use of DAP operations to achieve the same results.
Some DUAs may find the correct results even when the users' input corresponds rather weakly to Directory names.
Three aspects of query resolution are measured:  Does the DUA actually find the required entry?
If the required entry is found, how many entries were returned as well?
How "expensive" was the query in terms of underlying X.500 operations, whether the query was resolved successfully or not?
The following set of queries might all conceivably be resolved such that the author's Directory entry be found.
The queries are split into 2 groups:  the first group SHOULD pose no difficulties for a reasonable DUA; the second group are more problematic.
In each case, award [2] marks if the query found the author's entry successfully.
The expensiveness of each query should be measured using the following formula, which introduces the notion of SearchStones!
The SearchStone rating is calculated by adding together the total operations used in attempting to resolve a query, weighted thus:  Bind [5]  Read operation [1]  List operation [2]  Search single level for countries, organisations or localities [3]  Search single level for organisational units, people or roles [3]  Search subtree [5]
Note: The single level searches have been separated into two categories in acknowledgement that certain types of search are much more likely to span multiple DSAs than others.
The weightings are the same for the moment because of the pervasiveness of the Quipu implementation, which replicates all sibling entries in a single DSA, whatever the level in the DIT.
The notion of SearchStones merits some further explanation and the statement of some caveats.
The idea is to give some broad brush view of the work being undertaken by a DUA to retrieve an entry.
There will be some correspondence between a low SearchStone rating and a DUA responding quickly, and vice versa, although this correlation is not consistent, for reasons given below.
It would be desirable to be able to have some timing information for the resolution of queries, but such results would only be meaningful if the tests were for target entries widely distributed throughout the DIT.
Maybe this is something for the future?
In the meantime it is worth noting some of the factors which militate against simple minded interpretation of the SearchStones.
The DIT is not uniform, with the depth varying considerably  While the DIT is currently mastered mostly by DSAs of a single implementation, this will be decreasingly the case, and other DSAs may have very different performance profiles.
Different directory domains are already adopting different strategies on information replication with profound performance implications.
No weighting is given to different search filters, or to boolean combinations of filters.
While acknowledging the difficulty of the exercise, there are counter arguments:  Some DUAs are better than others at finding the required results
Some DUAs will get the required results more quickly than most  DUA designers have to build DUAs in the knowledge that the DIT is heterogeneous with respect to DSA implementation and DIT structure
One possible way forward would be to refine the test queries such that they better represented the diversity of the DIT.
However, as a first step, the tests are restricted to queries which could reasonably be constructed as searches for the author's entry.
The author's entry is held in part of the DIT which is representative of much of the current DIT.
It is suggested that in order to normalise the tests as much as possible, that testing be performed by connecting to the target DSA directly.
The DSA's name is "cn Vicuna, c GB", and
the addresses of the DSA may be found in the presentation address attribute for that entry.
Note that the SearchStone rating should be shown even for queries which cannot be resolved.
First, the straightforward queries: 50.
NAME Paul Barker, OU Computer Science, O University College London, C GB 51.
NAME Paul Barker, OU Computer Science,
O UCL, C GB 52.
NAME Barker, OU Computer, O UCL, C GB 53.
O UCL, C GB 54.
NAME p barker, O university college, C GB 55.
NAME paul b, OU cs, O university college, C GB
NAME p b, O university college, C uk 57.
NAME Paul Barker, OU Computer Networking, O london college, C GB 58.
NAME Paul Baker (sic), OU cs,
O ucl, C Britain 59.
O UCL, C England 60.
NAME Paul Barker, OU Directories, O london, C United Kingdom
Will the DUA attempt a query of the form
"Find all the Smiths in Britain"?
If so, does it do it by: (a)  A single query under the country
(b)  Multiple queries under all organisation nodes?
Does the DUA allow "hands off" querying whereby the details of a query may be entered in one go, and the DUA attempts to resolve the query without any further user intervention?
Does the DUA offer multi lingual support.
Can the DUA handle national language characters not found in PrintableString?
Is run time help available?
Is context sensitive help available?
(c)  How many bytes of help information?
Are the error messages terse renderings of the X.500 service errors, or user friendly!?
As an example, provide the error message displayed to the user if an administrative limit is exceeded.
If modify operations are provided, is there support for editing the attributes correctly with the appropriate syntax (e.g., does the DUA guide the user that addresses are of up to 6 lines of up to 30 characters; what support is given for entering distinguished names)
Is the user allowed to see what sort of entries are in the Directory if they are unable to find the entry they are looking for?
Does the DUA allow automatic following of attributes with DN values, such as seeAlso and roleOccupant?
But is there any evidence to suggest that it is a usable tool?
Is this DUA widely in use?
[5 if used by more than 20 orgs,
Is this DUA in use anywhere in the COSINE/Internet Pilot?
(b)  Is this DUA in use in any other major pilot?
Is this DUA in use anywhere else operationally?
Has this DUA been assessed by groups outside of the software developers or providers?
If so, are the assessments public?
a   Table 1:  DUA Metrics 16.
Security Considerations Security issues are not discussed in this memo.
