- title: __initial_text__
  contents:
  - "                   Definitions of Managed Objects for\n                   the\
    \ Ethernet-like Interface Types\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n\
    \   for use with network management protocols in the Internet community.\n   This\
    \ memo obsoletes RFC 2358, \"Definitions of Managed Objects for the\n   Ethernet-like\
    \ Interface Types\".  This memo extends that specification\n   by including management\
    \ information useful for the management of 1000\n   Mb/s and full-duplex Ethernet\
    \ interfaces.\n   Ethernet technology, as defined by the 802.3 Working Group of\
    \ the\n   IEEE, continues to evolve, with scalable increases in speed, new\n \
    \  types of cabling and interfaces, and new features.  This evolution\n   may\
    \ require changes in the managed objects in order to reflect this\n   new functionality.\
    \  This document, as with other documents issued by\n   this working group, reflects\
    \ a certain stage in the evolution of\n   Ethernet technology.  In the future,\
    \ this document might be revised,\n   or new documents might be issued by the\
    \ Ethernet Interfaces and Hub\n   MIB Working Group, in order to reflect the evolution\
    \ of Ethernet\n   technology.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ................................................\
    \    2\n   2.  The SNMP Management Framework ..............................  \
    \  3\n   3.  Overview ...................................................    4\n\
    \   3.1.  Relation to MIB-2 ........................................    4\n  \
    \ 3.2.  Relation to the Interfaces MIB ...........................    5\n   3.2.1.\
    \  Layering Model .........................................    5\n   3.2.2.  Virtual\
    \ Circuits .......................................    5\n   3.2.3.  ifTestTable\
    \ ............................................    5\n   3.2.4.  ifRcvAddressTable\
    \ ......................................    6\n   3.2.5.  ifPhysAddress ..........................................\
    \    6\n   3.2.6.  ifType .................................................  \
    \  6\n   3.2.7.  Specific Interface MIB Objects .........................    7\n\
    \   3.3.  Relation to the 802.3 MAU MIB ............................   11\n  \
    \ 3.4.  dot3StatsEtherChipSet ....................................   11\n   3.5.\
    \  Mapping of IEEE 802.3 Managed Objects ....................   12\n   4.  Definitions\
    \ ................................................   16\n   5.  Intellectual Property\
    \ ......................................   39\n   6.  Acknowledgements ...........................................\
    \   40\n   7.  References .................................................  \
    \ 41\n   8.  Security Considerations ....................................   43\n\
    \   9.  Authors' Addresses .........................................   44\n  \
    \ A.  Change Log .................................................   45\n   A.1.\
    \  Changes since RFC 2358 ...................................   45\n   A.2.  Changes\
    \ between RFC 1650 and RFC 2358 ....................   46\n   B.  Full Copyright\
    \ Statement ...................................   47\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   This memo defines a portion of the Management Information\
    \ Base (MIB)\n   for use with network management protocols in the Internet community.\n\
    \   In particular, it defines objects for managing Ethernet-like\n   interfaces.\n\
    \   This memo also includes a MIB module.  This MIB module extends the\n   list\
    \ of managed objects specified in the earlier version of this MIB:\n   RFC 2358\
    \ [23].\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"\
    SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"\
    OPTIONAL\" in this\n   document are to be interpreted as described in [26].\n"
- title: 2.  The SNMP Management Framework
  contents:
  - "2.  The SNMP Management Framework\n   The SNMP Management Framework presently\
    \ consists of five major\n   components:\n   o   An overall architecture, described\
    \ in RFC 2571 [1].\n   o   Mechanisms for describing and naming objects and events\
    \ for the\n       purpose of management. The first version of this Structure of\n\
    \       Management Information (SMI) is called SMIv1 and described in STD\n  \
    \     16, RFC 1155 [2], STD 16, RFC 1212 [3] and RFC 1215 [4]. The\n       second\
    \ version, called SMIv2, is described in STD 58, RFC 2578\n       [5], STD 58,\
    \ RFC 2579 [6] and STD 58, RFC 2580 [7].\n   o   Message protocols for transferring\
    \ management information. The\n       first version of the SNMP message protocol\
    \ is called SNMPv1 and\n       described in STD 15, RFC 1157 [8]. A second version\
    \ of the SNMP\n       message protocol, which is not an Internet standards track\n\
    \       protocol, is called SNMPv2c and described in RFC 1901 [9] and RFC\n  \
    \     1906 [10].  The third version of the message protocol is called\n      \
    \ SNMPv3 and described in RFC 1906 [10], RFC 2572 [11] and RFC 2574\n       [12].\n\
    \   o   Protocol operations for accessing management information. The\n      \
    \ first set of protocol operations and associated PDU formats is\n       described\
    \ in STD 15, RFC 1157 [8]. A second set of protocol\n       operations and associated\
    \ PDU formats is described in RFC 1905\n       [13].\n   o   A set of fundamental\
    \ applications described in RFC 2573 [14] and\n       the view-based access control\
    \ mechanism described in RFC 2575\n       [15].\n   Managed objects are accessed\
    \ via a virtual information store, termed\n   the Management Information Base\
    \ or MIB.  Objects in the MIB are\n   defined using the mechanisms defined in\
    \ the SMI.\n   This memo specifies a MIB module that is compliant to the SMIv2.\
    \ A\n   MIB conforming to the SMIv1 can be produced through the appropriate\n\
    \   translations. The resulting translated MIB must be semantically\n   equivalent,\
    \ except where objects or events are omitted because no\n   translation is possible\
    \ (use of Counter64). Some machine readable\n   information in SMIv2 will be converted\
    \ into textual descriptions in\n   SMIv1 during the translation process. However,\
    \ this loss of machine\n   readable information is not considered to change the\
    \ semantics of the\n   MIB.\n"
- title: 3.  Overview
  contents:
  - "3.  Overview\n   Instances of these object types represent attributes of an interface\n\
    \   to an ethernet-like communications medium.  At present, ethernet-like\n  \
    \ media are identified by the following values of the ifType object in\n   the\
    \ Interfaces MIB [25]:\n            ethernetCsmacd(6)\n            iso88023Csmacd(7)\n\
    \            starLan(11)\n   The definitions presented here are based on Section\
    \ 30, \"10 Mb/s, 100\n   Mb/s and 1000 Mb/s Management\", and Annex 30A, \"GDMO\
    \ Specification\n   for 802.3 managed object classes\" of IEEE Std. 802.3, 1998\
    \ Edition\n   [16], as originally interpreted by Frank Kastenholz then of Interlan\n\
    \   in [17].  Implementors of these MIB objects should note that IEEE\n   Std.\
    \ 802.3 [16] explicitly describes (in the form of Pascal\n   pseudocode) when,\
    \ where, and how various MAC attributes are measured.\n   The IEEE document also\
    \ describes the effects of MAC actions that may\n   be invoked by manipulating\
    \ instances of the MIB objects defined here.\n   To the extent that some of the\
    \ attributes defined in [16] are\n   represented by previously defined objects\
    \ in MIB-2 [24] or in the\n   Interfaces MIB [25], such attributes are not redundantly\
    \ represented\n   by objects defined in this memo.  Among the attributes represented\
    \ by\n   objects defined in other memos are the number of octets transmitted\n\
    \   or received on a particular interface, the number of frames\n   transmitted\
    \ or received on a particular interface, the promiscuous\n   status of an interface,\
    \ the MAC address of an interface, and\n   multicast information associated with\
    \ an interface.\n"
- title: 3.1.  Relation to MIB-2
  contents:
  - "3.1.  Relation to MIB-2\n   This section applies only when this MIB is used in\
    \ conjunction with\n   the \"old\" (RFC 1213) [24] interface group.\n   The relationship\
    \ between an ethernet-like interface and an interface\n   in the context of MIB-2\
    \ is one-to-one.  As such, the value of an\n   ifIndex object instance can be\
    \ directly used to identify\n   corresponding instances of the objects defined\
    \ herein.\n   For agents which implement the (now deprecated) ifSpecific object,\
    \ an\n   instance of that object that is associated with an ethernet-like\n  \
    \ interface has the OBJECT IDENTIFIER value:\n         dot3    OBJECT IDENTIFER\
    \ ::= { transmission 7 }\n"
- title: 3.2.  Relation to the Interfaces MIB
  contents:
  - "3.2.  Relation to the Interfaces MIB\n   The Interface MIB [25] requires that\
    \ any MIB which is an adjunct of\n   the Interface MIB clarify specific areas\
    \ within the Interface MIB.\n   These areas were intentionally left vague in the\
    \ Interface MIB to\n   avoid over constraining the MIB, thereby precluding management\
    \ of\n   certain media-types.\n   Section 3.3 of [25] enumerates several areas\
    \ which a media-specific\n   MIB must clarify.  Each of these areas is addressed\
    \ in a following\n   subsection.  The implementor is referred to [25] in order\
    \ to\n   understand the general intent of these areas.\n"
- title: 3.2.1.  Layering Model
  contents:
  - "3.2.1.  Layering Model\n   This MIB does not provide for layering.  There are\
    \ no sublayers.\n   EDITOR'S NOTE:\n   One could foresee the development of an\
    \ 802.2 and enet-transceiver\n   MIB.  They could be higher and lower sublayers,\
    \ respectively.  All\n   that THIS document should do is allude to the possibilities\
    \ and urge\n   the implementor to be aware of the possibility and that they may\
    \ have\n   requirements which supersede the requirements in this document.\n"
- title: 3.2.2.  Virtual Circuits
  contents:
  - "3.2.2.  Virtual Circuits\n   This medium does not support virtual circuits and\
    \ this area is not\n   applicable to this MIB.\n"
- title: 3.2.3.  ifTestTable
  contents:
  - "3.2.3.  ifTestTable\n   This MIB defines two tests for media which are instrumented\
    \ with this\n   MIB; TDR and Loopback.  Implementation of these tests is not\n\
    \   required.  Many common interface chips do not support one or both of\n   these\
    \ tests.\n   These two tests are provided as a convenience, allowing a common\n\
    \   method to invoke the test.\n   Standard MIBs do not include objects in which\
    \ to return the results\n   of the TDR test.  Any needed objects MUST be provided\
    \ in the vendor\n   specific MIB.\n   Note that the ifTestTable is now deprecated.\
    \  Work is underway to\n   define a replacement MIB for system and interface testing.\
    \  It is\n   expected that the tests defined in this document will be usable in\n\
    \   this replacement MIB.\n"
- title: 3.2.4.  ifRcvAddressTable
  contents:
  - "3.2.4.  ifRcvAddressTable\n   This table contains all IEEE 802.3 addresses, unicast,\
    \ multicast, and\n   broadcast, for which this interface will receive packets\
    \ and forward\n   them up to a higher layer entity for local consumption.  The\
    \ format\n   of the address, contained in ifRcvAddressAddress, is the same as\
    \ for\n   ifPhysAddress.\n   In the event that the interface is part of a MAC\
    \ bridge, this table\n   does not include unicast addresses which are accepted\
    \ for possible\n   forwarding out some other port.  This table is explicitly not\n\
    \   intended to provide a bridge address filtering mechanism.\n"
- title: 3.2.5.  ifPhysAddress
  contents:
  - "3.2.5.  ifPhysAddress\n   This object contains the IEEE 802.3 address which is\
    \ placed in the\n   source-address field of any Ethernet, Starlan, or IEEE 802.3\
    \ frames\n   that originate at this interface.  Usually this will be kept in ROM\n\
    \   on the interface hardware.  Some systems may set this address via\n   software.\n\
    \   In a system where there are several such addresses the designer has a\n  \
    \ tougher choice.  The address chosen should be the one most likely to\n   be\
    \ of use to network management (e.g.  the address placed in ARP\n   responses\
    \ for systems which are primarily IP systems).\n   If the designer truly can not\
    \ chose, use of the factory- provided ROM\n   address is suggested.\n   If the\
    \ address can not be determined, an octet string of zero length\n   should be\
    \ returned.\n   The address is stored in binary in this object.  The address is\n\
    \   stored in \"canonical\" bit order, that is, the Group Bit is positioned\n\
    \   as the low-order bit of the first octet.  Thus, the first byte of a\n   multicast\
    \ address would have the bit 0x01 set.\n"
- title: 3.2.6.  ifType
  contents:
  - "3.2.6.  ifType\n   This MIB applies to interfaces which have any of the following\
    \ ifType\n   values:\n            ethernetCsmacd(6)\n            iso88023Csmacd(7)\n\
    \            starLan(11)\n   It is RECOMMENDED that all Ethernet-like interfaces\
    \ use an ifType of\n   ethernetCsmacd(6) regardless of the speed that the interface\
    \ is\n   running or the link-layer encapsulation in use.  iso88023Csmacd(7)\n\
    \   and starLan(11) are supported for backwards compatability.\n   There are three\
    \ other interface types defined in the IANAifType-MIB\n   for Ethernet.  They\
    \ are fastEther(62), fastEtherFX(69), and\n   gigabitEthernet(117).  This document\
    \ takes the position that an\n   Ethernet is an Ethernet, and Ethernet interfaces\
    \ SHOULD always have\n   the same value of ifType.  Information on the particular\
    \ flavor of\n   Ethernet that an interface is running is available from ifSpeed\
    \ in\n   the Interfaces MIB, and ifMauType in the 802.3 MAU MIB.  An\n   Ethernet-like\
    \ interface SHOULD NOT use the fastEther(62),\n   fastEtherFX(69), or gigabitEthernet(117)\
    \ ifTypes.\n   Interfaces with any of the supported ifType values map to the\n\
    \   EtherLike-MIB in the same manner.  There are no implementation\n   differences.\n"
- title: 3.2.7.  Specific Interface MIB Objects
  contents:
  - "3.2.7.  Specific Interface MIB Objects\n   The following table provides specific\
    \ implementation guidelines for\n   applying the interface group objects to ethernet-like\
    \ media.\n      Object                     Guidelines\n      ifIndex         \
    \           Each ethernet-like interface is\n                                \
    \ represented by an ifEntry.  The\n                                 dot3StatsTable\
    \ in this MIB module is\n                                 indexed by dot3StatsIndex.\
    \ The interface\n                                 identified by a particular value\
    \ of\n                                 dot3StatsIndex is the same interface as\n\
    \                                 identified by the same value of ifIndex.\n \
    \     ifDescr                    Refer to [25].\n      ifType                \
    \     Refer to section 3.2.6.\n      ifMtu                      1500 octets. \
    \ NOTE: This is the MTU as\n                                 seen by the MAC client.\
    \  When a higher\n                                 layer protocol, like IP, is\
    \ running over\n                                 Ethernet, this is the MTU that\
    \ will be\n                                 seen by that higher layer protocol.\n\
    \                                 However, when using the IEEE 802.2 LLC\n   \
    \                              protocol, higher layer protocols will\n       \
    \                          see a different MTU.  In particular, an\n         \
    \                        LLC type 1 client protocol will see\n               \
    \                  an MTU of 1497 octets, and a protocol\n                   \
    \              running over SNAP will see an MTU of\n                        \
    \         1492 octets.\n      ifSpeed                    The current operational\
    \ speed of the\n                                 interface in bits per second.\
    \ For\n                                 current ethernet-like interfaces, this\n\
    \                                 will be equal to 1,000,000 (1 million),\n  \
    \                               10,000,000 (10 million), 100,000,000\n       \
    \                          (100 million), or 1,000,000,000 (1\n              \
    \                   billion). If the interface implements\n                  \
    \               auto-negotiation, auto-negotiation is\n                      \
    \           enabled for this interface, and the\n                            \
    \     interface has not yet negotiated to an\n                               \
    \  operational speed, this object SHOULD\n                                 reflect\
    \ the maximum speed supported by\n                                 the interface.\
    \  Note that this object\n                                 MUST NOT indicate a\
    \ doubled value when\n                                 operating in full-duplex\
    \ mode.  It MUST\n                                 indicate the correct line speed\n\
    \                                 regardless of the current duplex mode.\n   \
    \                              The duplex mode of the interface may\n        \
    \                         be determined by examining either the\n            \
    \                     dot3StatsDuplexStatus object in this\n                 \
    \                MIBmodule, or the ifMauType object in\n                     \
    \            the 802.3 MAU MIB.\n      ifPhysAddress              Refer to section\
    \ 3.2.5.\n      ifAdminStatus              Write access is not required.  Support\n\
    \                                 for 'testing' is not required.\n      ifOperStatus\
    \               The operational state of the interface.\n                    \
    \             Support for 'testing' is not required.\n                       \
    \          The value 'dormant' has no meaning for\n                          \
    \       an ethernet-like interface.\n      ifLastChange               Refer to\
    \ [25].\n      ifInOctets                 The number of octets in valid MAC\n\
    \                                 frames received on this interface,\n       \
    \                          including the MAC header and FCS.\n               \
    \                  This does include the number of octets\n                  \
    \               in valid MAC Control frames received on\n                    \
    \             this interface.\n      ifInUcastPkts              Refer to [25].\
    \  Note that this does\n                                 not include MAC Control\
    \ frames, since\n                                 MAC Control frames are consumed\
    \ by the\n                                 interface layer and are not passed\
    \ to\n                                 any higher layer protocol.\n      ifInDiscards\
    \               Refer to [25].\n      ifInErrors                 The sum for this\
    \ interface of\n                                 dot3StatsAlignmentErrors,\n \
    \                                dot3StatsFCSErrors,\n                       \
    \          dot3StatsFrameTooLongs,\n                                 dot3StatsInternalMacReceiveErrors\
    \ and\n                                 dot3StatsSymbolErrors.\n      ifInUnknownProtos\
    \          Refer to [25].\n      ifOutOctets                The number of octets\
    \ transmitted in\n                                 valid MAC frames on this interface,\n\
    \                                 including the MAC header and FCS.\n        \
    \                         This does include the number of octets\n           \
    \                      in valid MAC Control frames transmitted\n             \
    \                    on this interface.\n      ifOutUcastPkts             Refer\
    \ to [25].  Note that this does\n                                 not include\
    \ MAC Control frames, since\n                                 MAC Control frames\
    \ are generated by the\n                                 interface layer, and\
    \ are not passed\n                                 from any higher layer protocol.\n\
    \      ifOutDiscards              Refer to [25].\n      ifOutErrors          \
    \      The sum for this interface of:\n                                 dot3StatsSQETestErrors,\n\
    \                                 dot3StatsLateCollisions,\n                 \
    \                dot3StatsExcessiveCollisions,\n                             \
    \    dot3StatsInternalMacTransmitErrors and\n                                \
    \ dot3StatsCarrierSenseErrors.\n      ifName                     Locally-significant\
    \ textual name for\n                                 the interface (e.g. lan0).\n\
    \      ifInMulticastPkts          Refer to [25].  Note that this does\n      \
    \                           not include MAC Control frames, since\n          \
    \                       MAC Control frames are consumed by the\n             \
    \                    interface layer and are not passed to\n                 \
    \                any higher layer protocol.\n      ifInBroadcastPkts         \
    \ Refer to [25].  Note that this does\n                                 not include\
    \ MAC Control frames, since\n                                 MAC Control frames\
    \ are generated by\n                                 the interface layer, and\
    \ are not passed\n                                 from any higher layer protocol.\n\
    \      ifOutMulticastPkts         Refer to [25].  Note that this does\n      \
    \                           not include MAC Control frames, since\n          \
    \                       MAC Control frames are consumed by the\n             \
    \                    interface layer and are not passed to\n                 \
    \                any higher layer protocol.\n      ifOutBroadcastPkts        \
    \ Refer to [25].  Note that this does\n                                 not include\
    \ MAC Control frames, since\n                                 MAC Control frames\
    \ are generated by\n                                 the interface layer, and\
    \ are not passed\n                                 from any higher layer protocol.\n\
    \      ifHCInOctets               64-bit versions of counters.  Required\n   \
    \   ifHCOutOctets              for ethernet-like interfaces that are\n       \
    \                          capable of operating at 20Mbit/sec or\n           \
    \                      faster, even if the interface is\n                    \
    \             currently operating at less than\n                             \
    \    20Mbit/sec.\n      ifHCInUcastPkts            64-bit versions of packet counters.\n\
    \      ifHCInMulticastPkts        Required for ethernet-like interfaces\n    \
    \  ifHCInBroadcastPkts        that are capable of operating at\n      ifHCOutUcastPkts\
    \           640Mbit/sec or faster, even if the\n      ifHCOutMulticastPkts   \
    \    interface is currently operating at\n      ifHCOutBroadcastPkts       less\
    \ than 640Mbit/sec.\n      ifLinkUpDownTrapEnable     Refer to [25].  Default\
    \ is 'enabled'\n      ifHighSpeed                The current operational speed\
    \ of the\n                                 interface in millions of bits per\n\
    \                                 second. For current ethernet-like\n        \
    \                         interfaces, this will be equal to 1,\n             \
    \                    10, 100, or 1,000.  If the interface\n                  \
    \               implements auto-negotiation,\n                               \
    \  auto-negotiation is enabled for this\n                                 interface,\
    \ and the interface has not\n                                 yet negotiated to\
    \ an operational speed,\n                                 this object SHOULD reflect\
    \ the maximum\n                                 speed supported by the interface.\
    \ Note\n                                 that this object MUST NOT indicate a\n\
    \                                 doubled value when operating in full-\n    \
    \                             duplex mode.  It MUST indicate the\n           \
    \                      correct line speed regardless of the\n                \
    \                 current duplex mode. The duplex mode\n                     \
    \            of the interface may be determined\n                            \
    \     by examining either the\n                                 dot3StatsDuplexStatus\
    \ object in this\n                                 MIB module, or the ifMauType\
    \ object in\n                                 the 802.3 MAU MIB.\n      ifPromiscuousMode\
    \          Refer to [25].\n      ifConnectorPresent         This will normally\
    \ be 'true'.\n      ifAlias                    Refer to [25].\n      ifCounterDiscontinuityTime\
    \ Refer to [25].  Note that a\n                                 discontinuity\
    \ in the Interface MIB\n                                 counters may also indicate\
    \ a\n                                 discontinuity in some or all of the\n  \
    \                               counters in this MIB that are\n              \
    \                   associated with that interface.\n      ifStackHigherLayer\
    \         Refer to section 3.2.1.\n      ifStackLowerLayer\n      ifStackStatus\n\
    \      ifRcvAddressAddress        Refer to section 3.2.4.\n      ifRcvAddressStatus\n\
    \      ifRcvAddressType\n"
- title: 3.3.  Relation to the 802.3 MAU MIB
  contents:
  - "3.3.  Relation to the 802.3 MAU MIB\n   Support for the mauModIfCompl2 compliance\
    \ statement of the MAU-MIB\n   [27] is REQUIRED for Ethernet-like interfaces.\
    \  This MIB is needed in\n   order to allow applications to determine the current\
    \ MAU type in use\n   by the interface, and to control autonegotiation and duplex\
    \ mode for\n   the interface.  Implementing this MIB module without implementing\
    \ the\n   MAU-MIB would leave applications with no standard way to determine\n\
    \   the media type in use, and no standard way to control the duplex mode\n  \
    \ of the interface.\n"
- title: 3.4.  dot3StatsEtherChipSet
  contents:
  - "3.4.  dot3StatsEtherChipSet\n   This document defines an object called dot3StatsEtherChipSet,\
    \ which\n   is used to identify the MAC hardware used to communicate on an\n \
    \  interface.  Previous versions of this document contained a number of\n   OID\
    \ assignments for some existing Ethernet chipsets.  Maintaining\n   that list\
    \ as part of this document has proven to be problematic, so\n   the OID assignments\
    \ contained in prevous versions of this document\n   have now been moved to a\
    \ separate document [28].\n   The dot3StatsEtherChipSet object has now been deprecated.\n\
    \   Implementation feedback indicates that this object is much more\n   useful\
    \ in theory than in practice.  The object's utility in debugging\n   network problems\
    \ in the field appears to be limited.  In those cases\n   where it may be useful,\
    \ it is not sufficient, since it identifies\n   only the MAC chip, and not the\
    \ PHY, PMD, or driver.  The\n   administrative overhead involved in maintaining\
    \ a central registry of\n   chipset OIDs cannot be justified for an object whose\
    \ usefulness is\n   questionable at best.\n   Implementations which continue to\
    \ support this object for the purpose\n   of backwards compatability may continue\
    \ to use the values defined in\n   [28].  For chipsets not listed in [28], implementors\
    \ should assign\n   OBJECT IDENTIFIERS within that part of the registration tree\n\
    \   delegated to individual enterprises.\n"
- title: 3.5.  Mapping of IEEE 802.3 Managed Objects
  contents:
  - "3.5.  Mapping of IEEE 802.3 Managed Objects\n   IEEE 802.3 Managed Object   \
    \      Corresponding SNMP Object\n   oMacEntity\n    .aMACID                 \
    \         dot3StatsIndex or\n                                     IF-MIB - ifIndex\n\
    \    .aFramesTransmittedOK            IF-MIB - ifOutUCastPkts +\n            \
    \                                  ifOutMulticastPkts +\n                    \
    \                          ifOutBroadcastPkts*\n    .aSingleCollisionFrames  \
    \        dot3StatsSingleCollisionFrames\n    .aMultipleCollisionFrames       \
    \ dot3StatsMultipleCollisionFrames\n    .aFramesReceivedOK               IF-MIB\
    \ - ifInUcastPkts +\n                                              ifInMulticastPkts\
    \ +\n                                              ifInBroadcastPkts*\n    .aFrameCheckSequenceErrors\
    \       dot3StatsFCSErrors\n    .aAlignmentErrors                dot3StatsAlignmentErrors\n\
    \    .aOctetsTransmittedOK            IF-MIB - ifOutOctets*\n    .aFramesWithDeferredXmissions\
    \    dot3StatsDeferredTransmissions\n    .aLateCollisions                 dot3StatsLateCollisions\n\
    \    .aFramesAbortedDueToXSColls      dot3StatsExcessiveCollisions\n    .aFramesLostDueToIntMACXmitError\
    \ dot3StatsInternalMacTransmitErrors\n    .aCarrierSenseErrors             dot3StatsCarrierSenseErrors\n\
    \    .aOctetsReceivedOK               IF-MIB - ifInOctets*\n    .aFramesLostDueToIntMACRcvError\
    \  dot3StatsInternalMacReceiveErrors\n    .aPromiscuousStatus              IF-MIB\
    \ - ifPromiscuousMode\n    .aReadMulticastAddressList       IF-MIB - ifRcvAddressTable\n\
    \    .aMulticastFramesXmittedOK       IF-MIB - ifOutMulticastPkts*\n    .aBroadcastFramesXmittedOK\
    \       IF-MIB - ifOutBroadcastPkts*\n    .aMulticastFramesReceivedOK      IF-MIB\
    \ - ifInMulticastPkts*\n    .aBroadcastFramesReceivedOK      IF-MIB - ifInBroadcastPkts*\n\
    \    .aFrameTooLongErrors             dot3StatsFrameTooLongs\n    .aReadWriteMACAddress\
    \            IF-MIB - ifPhysAddress\n    .aCollisionFrames                dot3CollFrequencies\n\
    \    .aDuplexStatus                   dot3StatsDuplexStatus\n    .acAddGroupAddress\
    \               IF-MIB - ifRcvAddressTable\n    .acDeleteGroupAddress        \
    \    IF-MIB - ifRcvAddressTable\n    .acExecuteSelfTest               dot3TestLoopBack\n\
    \   oPHYEntity\n    .aPHYID                          dot3StatsIndex or\n     \
    \                                IF-MIB - ifIndex\n    .aSQETestErrors       \
    \           dot3StatsSQETestErrors\n    .aSymbolErrorDuringCarrier       dot3StatsSymbolErrors\n\
    \   oMACControlEntity\n    .aMACControlID                   dot3StatsIndex or\n\
    \                                     IF-MIB - ifIndex\n    .aMACControlFunctionsSupported\
    \   dot3ControlFunctionsSupported and\n                                     dot3ControlFunctionsEnabled\n\
    \    .aUnsupportedOpcodesReceived     dot3ControlInUnknownOpcodes\n   oPAUSEEntity\n\
    \    .aPAUSEMACCtrlFramesTransmitted  dot3OutPauseFrames\n    .aPAUSEMACCtrlFramesReceived\
    \     dot3InPauseFrames\n   * Note that the octet counters in IF-MIB do not exactly\
    \ match the\n   definition of the octet counters in IEEE 802.3.  aOctetsTransmittedOK\n\
    \   and aOctetsReceivedOK count only the octets in the clientData and Pad\n  \
    \ fields, whereas ifInOctets and ifOutOctets include the entire MAC\n   frame,\
    \ including MAC header and FCS.  However, the IF-MIB counters\n   can be derived\
    \ from the IEEE 802.3 counters as follows:\n     ifInOctets = aOctetsReceivedOK\
    \ + (18 * aFramesReceivedOK)\n     ifOutOctets = aOctetsTransmittedOK + (18 *\
    \ aFramesTransmittedOK)\n   Also note that the packet counters in the IF-MIB do\
    \ not exactly match\n   the definition of the frame counters in IEEE 802.3.\n\
    \   aFramesTransmittedOK counts the number of frames successfully\n   transmitted\
    \ on the interface, whereas ifOutUcastPkts,\n   ifOutMulticastPkts and ifOutBroadcastPkts\
    \ count the number of\n   transmit requests made from a higher layer, whether\
    \ or not the\n   transmit attempt was successful.  This means that packets counted\
    \ by\n   ifOutErrors or ifOutDiscards are also be counted by ifOut*castPkts,\n\
    \   but are not be counted by aFramesTransmittedOK.  This also means\n   that,\
    \ since MAC Control frames are generated by a sublayer internal\n   to the interface\
    \ layer rather than by a higher layer, they are not\n   counted by ifOut*castPkts,\
    \ but are counted by aFramesTransmittedOK.\n   Similarly, aFramesReceivedOK counts\
    \ the number of frames received\n   successfully by the interface, whether or\
    \ not they are passed to a\n   higher layer, whereas ifInUcastPkts, ifInMulticastPkts\
    \ and\n   ifInBroadcastPkts count only the number of packets passed to a higher\n\
    \   layer.  This means that packets counted by ifInDiscards or\n   ifInUnknownProtos\
    \ are also counted by aFramesReceivedOK, but are not\n   counted by ifIn*castPkts.\
    \  This also menas that, since MAC Control\n   frames are consumed by a sublayer\
    \ internal to the interface layer and\n   not passed to a higher layer, they are\
    \ not counted by ifIn*castPkts,\n   but are counted by aFramesReceivedOK.\n  \
    \ Another difference to keep in mind between the IF-MIB counters and\n   IEEE\
    \ 802.3 counters is that in the IEEE 802.3 document, the frame\n   counters and\
    \ octet counters are always incremented together.\n   aOctetsTransmittedOK counts\
    \ the number of octets in frames that were\n   counted by aFramesTransmittedOK.\
    \  aOctetsReceivedOK counts the number\n   of octets in frames that were counted\
    \ by aFramesReceivedOK.  This is\n   not the case with the IF-MIB counters.  The\
    \ IF-MIB octet counters\n   count the number of octets sent to or received from\
    \ the layer below\n   this interface, whereas the packet counters count the number\
    \ of\n   packets sent to or received from the layer above.  Therefore,\n   received\
    \ MAC Control frames, ifInDiscards, and ifInUnknownProtos are\n   counted by ifInOctets,\
    \ but not ifIn*castPkts.  Transmitted MAC\n   Control frames are counted by ifOutOctets,\
    \ but not ifOut*castPkts.\n   ifOutDiscards and ifOutErrors are counted by ifOut*castPkts,\
    \ but not\n   ifOutOctets.\n   The following IEEE 802.3 managed objects have been\
    \ removed from this\n   MIB module as a result of implementation feedback:\n \
    \  oMacEntity\n     .aFramesWithExcessiveDeferral\n     .aInRangeLengthErrors\n\
    \     .aOutOfRangeLengthField\n     .aMACEnableStatus\n     .aTransmitEnableStatus\n\
    \     .aMulticastReceiveStatus\n     .acInitializeMAC\n   Please see [19] for\
    \ the detailed reasoning on why these objects were\n   removed.\n   In addition,\
    \ the following IEEE 802.3 managed objects have not been\n   included in this\
    \ MIB for the following reasons.\n   IEEE 802.3 Managed Object         Disposition\n\
    \   oMACEntity\n    .aMACCapabilities                Can be derived from\n   \
    \                                  MAU-MIB - ifMauTypeListBits\n   oPHYEntity\n\
    \    .aPhyType                        Can be derived from\n                  \
    \                   MAU-MIB - ifMauType\n    .aPhyTypeList                   \
    \ Can be derived from\n                                     MAU-MIB - ifMauTypeListBits\n\
    \    .aMIIDetect                      Not considered useful.\n    .aPhyAdminState\
    \                  Can already obtain interface\n                            \
    \         state from IF-MIB - ifOperStatus\n                                 \
    \    and MAU state from MAU-MIB -\n                                     ifMauStatus.\
    \  Providing an\n                                     additional state for the\
    \ PHY\n                                     was not considered useful.\n    .acPhyAdminControl\
    \               Can already control interface\n                              \
    \       state from IF-MIB - ifAdminStatus\n                                  \
    \   and MAU state from MAU-MIB -\n                                     ifMauStatus.\
    \  Providing separate\n                                     admin control of the\
    \ PHY was not\n                                     considered useful.\n   oMACControlEntity\n\
    \    .aMACControlFramesTransmitted    Can be determined by summing the\n     \
    \                                OutFrames counters for the\n                \
    \                     individual control functions\n    .aMACControlFramesReceived\
    \       Can be determined by summing the\n                                   \
    \  InFrames counters for the\n                                     individual\
    \ control functions\n   oPAUSEEntity\n    .aPAUSELinkDelayAllowance        Not\
    \ considered useful.\n"
- title: 4.  Definitions
  contents:
  - "4.  Definitions\n   EtherLike-MIB DEFINITIONS ::= BEGIN\n       IMPORTS\n   \
    \        MODULE-IDENTITY, OBJECT-TYPE, OBJECT-IDENTITY,\n           Counter32,\
    \ mib-2, transmission\n               FROM SNMPv2-SMI\n           MODULE-COMPLIANCE,\
    \ OBJECT-GROUP\n               FROM SNMPv2-CONF\n           ifIndex, InterfaceIndex\n\
    \               FROM IF-MIB;\n       etherMIB MODULE-IDENTITY\n           LAST-UPDATED\
    \ \"9908240400Z\"  -- August 24, 1999\n           ORGANIZATION \"IETF Ethernet\
    \ Interfaces and Hub MIB\n                        Working Group\"\n          \
    \ CONTACT-INFO\n               \"WG E-mail: hubmib@hprnd.rose.hp.com\n       \
    \      To subscribe: hubmib-request@hprnd.rose.hp.com\n                    Chair:\
    \ Dan Romascanu\n                   Postal: Lucent Technologies\n            \
    \               Atidum Technology Park, Bldg. 3\n                           Tel\
    \ Aviv 61131\n                           Israel\n                      Tel: +972\
    \ 3 645 8414\n                   E-mail: dromasca@lucent.com\n               \
    \   Editor: John Flick\n                  Postal: Hewlett-Packard Company\n  \
    \                        8000 Foothills Blvd. M/S 5557\n                     \
    \     Roseville, CA 95747-5557\n                          USA\n              \
    \       Tel: +1 916 785 4018\n                     Fax: +1 916 785 1199\n    \
    \              E-mail: johnf@rose.hp.com\n                  Editor: Jeffrey Johnson\n\
    \                  Postal: RedBack Networks\n                          2570 North\
    \ First Street, Suite 410\n                          San Jose, CA, 95131\n   \
    \                       USA\n                     Tel: +1 408 571 2699\n     \
    \                Fax: +1 408 571 2698\n                  E-Mail: jeff@redbacknetworks.com\"\
    \n           DESCRIPTION \"The MIB module to describe generic objects for\n  \
    \                     Ethernet-like network interfaces.\n                    \
    \   The following reference is used throughout this\n                       MIB\
    \ module:\n                       [IEEE 802.3 Std] refers to:\n              \
    \            IEEE Std 802.3, 1998 Edition: 'Information\n                    \
    \      technology - Telecommunications and\n                          information\
    \ exchange between systems -\n                          Local and metropolitan\
    \ area networks -\n                          Specific requirements - Part 3: Carrier\n\
    \                          sense multiple access with collision\n            \
    \              detection (CSMA/CD) access method and\n                       \
    \   physical layer specifications',\n                          September 1998.\n\
    \                       Of particular interest is Clause 30, '10Mb/s,\n      \
    \                 100Mb/s and 1000Mb/s Management'.\"\n           REVISION   \
    \ \"9908240400Z\"  -- August 24, 1999\n           DESCRIPTION \"Updated to include\
    \ support for 1000 Mb/sec\n                        interfaces and full-duplex\
    \ interfaces.\n                        This version published as RFC 2665.\"\n\
    \           REVISION    \"9806032150Z\"\n           DESCRIPTION \"Updated to include\
    \ support for 100 Mb/sec\n                        interfaces.\n              \
    \          This version published as RFC 2358.\"\n           REVISION    \"9402030400Z\"\
    \n           DESCRIPTION \"Initial version, published as RFC 1650.\"\n       \
    \    ::= { mib-2 35 }\n       etherMIBObjects OBJECT IDENTIFIER ::= { etherMIB\
    \ 1 }\n       dot3    OBJECT IDENTIFIER ::= { transmission 7 }\n       -- the\
    \ Ethernet-like Statistics group\n       dot3StatsTable OBJECT-TYPE\n        \
    \   SYNTAX     SEQUENCE OF Dot3StatsEntry\n           MAX-ACCESS not-accessible\n\
    \           STATUS     current\n           DESCRIPTION \"Statistics for a collection\
    \ of ethernet-like\n                       interfaces attached to a particular\
    \ system.\n                       There will be one row in this table for each\n\
    \                       ethernet-like interface in the system.\"\n           ::=\
    \ { dot3 2 }\n       dot3StatsEntry OBJECT-TYPE\n           SYNTAX     Dot3StatsEntry\n\
    \           MAX-ACCESS not-accessible\n           STATUS     current\n       \
    \    DESCRIPTION \"Statistics for a particular interface to an\n             \
    \          ethernet-like medium.\"\n           INDEX       { dot3StatsIndex }\n\
    \           ::= { dot3StatsTable 1 }\n       Dot3StatsEntry ::=\n           SEQUENCE\
    \ {\n               dot3StatsIndex                      InterfaceIndex,\n    \
    \           dot3StatsAlignmentErrors            Counter32,\n               dot3StatsFCSErrors\
    \                  Counter32,\n               dot3StatsSingleCollisionFrames \
    \     Counter32,\n               dot3StatsMultipleCollisionFrames    Counter32,\n\
    \               dot3StatsSQETestErrors              Counter32,\n             \
    \  dot3StatsDeferredTransmissions      Counter32,\n               dot3StatsLateCollisions\
    \             Counter32,\n               dot3StatsExcessiveCollisions        Counter32,\n\
    \               dot3StatsInternalMacTransmitErrors  Counter32,\n             \
    \  dot3StatsCarrierSenseErrors         Counter32,\n               dot3StatsFrameTooLongs\
    \              Counter32,\n               dot3StatsInternalMacReceiveErrors  \
    \ Counter32,\n               dot3StatsEtherChipSet               OBJECT IDENTIFIER,\n\
    \               dot3StatsSymbolErrors               Counter32,\n             \
    \  dot3StatsDuplexStatus               INTEGER\n           }\n       dot3StatsIndex\
    \ OBJECT-TYPE\n           SYNTAX      InterfaceIndex\n           MAX-ACCESS  read-only\n\
    \           STATUS      current\n           DESCRIPTION \"An index value that\
    \ uniquely identifies an\n                       interface to an ethernet-like\
    \ medium.  The\n                       interface identified by a particular value\
    \ of\n                       this index is the same interface as identified\n\
    \                       by the same value of ifIndex.\"\n           REFERENCE\
    \   \"RFC 2233, ifIndex\"\n           ::= { dot3StatsEntry 1 }\n       dot3StatsAlignmentErrors\
    \ OBJECT-TYPE\n           SYNTAX      Counter32\n           MAX-ACCESS  read-only\n\
    \           STATUS      current\n           DESCRIPTION \"A count of frames received\
    \ on a particular\n                       interface that are not an integral number\
    \ of\n                       octets in length and do not pass the FCS check.\n\
    \                       The count represented by an instance of this\n       \
    \                object is incremented when the alignmentError\n             \
    \          status is returned by the MAC service to the\n                    \
    \   LLC (or other MAC user). Received frames for\n                       which\
    \ multiple error conditions obtain are,\n                       according to the\
    \ conventions of IEEE 802.3\n                       Layer Management, counted\
    \ exclusively according\n                       to the error status presented\
    \ to the LLC.\n                       This counter does not increment for 8-bit\
    \ wide\n                       group encoding schemes.\n                     \
    \  Discontinuities in the value of this counter can\n                       occur\
    \ at re-initialization of the management\n                       system, and at\
    \ other times as indicated by the\n                       value of ifCounterDiscontinuityTime.\"\
    \n           REFERENCE   \"[IEEE 802.3 Std.], 30.3.1.1.7,\n                  \
    \     aAlignmentErrors\"\n           ::= { dot3StatsEntry 2 }\n       dot3StatsFCSErrors\
    \ OBJECT-TYPE\n           SYNTAX      Counter32\n           MAX-ACCESS  read-only\n\
    \           STATUS      current\n           DESCRIPTION \"A count of frames received\
    \ on a particular\n                       interface that are an integral number\
    \ of octets\n                       in length but do not pass the FCS check. \
    \ This\n                       count does not include frames received with\n \
    \                      frame-too-long or frame-too-short error.\n            \
    \           The count represented by an instance of this\n                   \
    \    object is incremented when the frameCheckError\n                       status\
    \ is returned by the MAC service to the\n                       LLC (or other\
    \ MAC user). Received frames for\n                       which multiple error\
    \ conditions obtain are,\n                       according to the conventions\
    \ of IEEE 802.3\n                       Layer Management, counted exclusively\
    \ according\n                       to the error status presented to the LLC.\n\
    \                       Note:  Coding errors detected by the physical\n      \
    \                 layer for speeds above 10 Mb/s will cause the\n            \
    \           frame to fail the FCS check.\n                       Discontinuities\
    \ in the value of this counter can\n                       occur at re-initialization\
    \ of the management\n                       system, and at other times as indicated\
    \ by the\n                       value of ifCounterDiscontinuityTime.\"\n    \
    \       REFERENCE   \"[IEEE 802.3 Std.], 30.3.1.1.6,\n                       aFrameCheckSequenceErrors.\"\
    \n           ::= { dot3StatsEntry 3 }\n       dot3StatsSingleCollisionFrames OBJECT-TYPE\n\
    \           SYNTAX      Counter32\n           MAX-ACCESS  read-only\n        \
    \   STATUS      current\n           DESCRIPTION \"A count of successfully transmitted\
    \ frames on\n                       a particular interface for which transmission\n\
    \                       is inhibited by exactly one collision.\n             \
    \          A frame that is counted by an instance of this\n                  \
    \     object is also counted by the corresponding\n                       instance\
    \ of either the ifOutUcastPkts,\n                       ifOutMulticastPkts, or\
    \ ifOutBroadcastPkts,\n                       and is not counted by the corresponding\n\
    \                       instance of the dot3StatsMultipleCollisionFrames\n   \
    \                    object.\n                       This counter does not increment\
    \ when the\n                       interface is operating in full-duplex mode.\n\
    \                       Discontinuities in the value of this counter can\n   \
    \                    occur at re-initialization of the management\n          \
    \             system, and at other times as indicated by the\n               \
    \        value of ifCounterDiscontinuityTime.\"\n           REFERENCE   \"[IEEE\
    \ 802.3 Std.], 30.3.1.1.3,\n                       aSingleCollisionFrames.\"\n\
    \           ::= { dot3StatsEntry 4 }\n       dot3StatsMultipleCollisionFrames\
    \ OBJECT-TYPE\n           SYNTAX      Counter32\n           MAX-ACCESS  read-only\n\
    \           STATUS      current\n           DESCRIPTION \"A count of successfully\
    \ transmitted frames on\n                       a particular interface for which\
    \ transmission\n                       is inhibited by more than one collision.\n\
    \                       A frame that is counted by an instance of this\n     \
    \                  object is also counted by the corresponding\n             \
    \          instance of either the ifOutUcastPkts,\n                       ifOutMulticastPkts,\
    \ or ifOutBroadcastPkts,\n                       and is not counted by the corresponding\n\
    \                       instance of the dot3StatsSingleCollisionFrames\n     \
    \                  object.\n                       This counter does not increment\
    \ when the\n                       interface is operating in full-duplex mode.\n\
    \                       Discontinuities in the value of this counter can\n   \
    \                    occur at re-initialization of the management\n          \
    \             system, and at other times as indicated by the\n               \
    \        value of ifCounterDiscontinuityTime.\"\n           REFERENCE   \"[IEEE\
    \ 802.3 Std.], 30.3.1.1.4,\n                       aMultipleCollisionFrames.\"\
    \n           ::= { dot3StatsEntry 5 }\n       dot3StatsSQETestErrors OBJECT-TYPE\n\
    \           SYNTAX      Counter32\n           MAX-ACCESS  read-only\n        \
    \   STATUS      current\n           DESCRIPTION \"A count of times that the SQE\
    \ TEST ERROR\n                       message is generated by the PLS sublayer\
    \ for a\n                       particular interface. The SQE TEST ERROR\n   \
    \                    is set in accordance with the rules for\n               \
    \        verification of the SQE detection mechanism in\n                    \
    \   the PLS Carrier Sense Function as described in\n                       IEEE\
    \ Std. 802.3, 1998 Edition, section 7.2.4.6.\n                       This counter\
    \ does not increment on interfaces\n                       operating at speeds\
    \ greater than 10 Mb/s, or on\n                       interfaces operating in\
    \ full-duplex mode.\n                       Discontinuities in the value of this\
    \ counter can\n                       occur at re-initialization of the management\n\
    \                       system, and at other times as indicated by the\n     \
    \                  value of ifCounterDiscontinuityTime.\"\n           REFERENCE\
    \   \"[IEEE 802.3 Std.], 7.2.4.6, also 30.3.2.1.4,\n                       aSQETestErrors.\"\
    \n           ::= { dot3StatsEntry 6 }\n       dot3StatsDeferredTransmissions OBJECT-TYPE\n\
    \           SYNTAX      Counter32\n           MAX-ACCESS  read-only\n        \
    \   STATUS      current\n           DESCRIPTION \"A count of frames for which\
    \ the first\n                       transmission attempt on a particular interface\n\
    \                       is delayed because the medium is busy.\n             \
    \          The count represented by an instance of this\n                    \
    \   object does not include frames involved in\n                       collisions.\n\
    \                       This counter does not increment when the\n           \
    \            interface is operating in full-duplex mode.\n                   \
    \    Discontinuities in the value of this counter can\n                      \
    \ occur at re-initialization of the management\n                       system,\
    \ and at other times as indicated by the\n                       value of ifCounterDiscontinuityTime.\"\
    \n           REFERENCE   \"[IEEE 802.3 Std.], 30.3.1.1.9,\n                  \
    \     aFramesWithDeferredXmissions.\"\n           ::= { dot3StatsEntry 7 }\n \
    \      dot3StatsLateCollisions OBJECT-TYPE\n           SYNTAX      Counter32\n\
    \           MAX-ACCESS  read-only\n           STATUS      current\n          \
    \ DESCRIPTION \"The number of times that a collision is\n                    \
    \   detected on a particular interface later than\n                       one\
    \ slotTime into the transmission of a packet.\n                       A (late)\
    \ collision included in a count\n                       represented by an instance\
    \ of this object is\n                       also considered as a (generic) collision\
    \ for\n                       purposes of other collision-related\n          \
    \             statistics.\n                       This counter does not increment\
    \ when the\n                       interface is operating in full-duplex mode.\n\
    \                       Discontinuities in the value of this counter can\n   \
    \                    occur at re-initialization of the management\n          \
    \             system, and at other times as indicated by the\n               \
    \        value of ifCounterDiscontinuityTime.\"\n           REFERENCE   \"[IEEE\
    \ 802.3 Std.], 30.3.1.1.10,\n                       aLateCollisions.\"\n     \
    \      ::= { dot3StatsEntry 8 }\n       dot3StatsExcessiveCollisions OBJECT-TYPE\n\
    \           SYNTAX      Counter32\n           MAX-ACCESS  read-only\n        \
    \   STATUS      current\n           DESCRIPTION \"A count of frames for which\
    \ transmission on a\n                       particular interface fails due to\
    \ excessive\n                       collisions.\n                       This counter\
    \ does not increment when the\n                       interface is operating in\
    \ full-duplex mode.\n                       Discontinuities in the value of this\
    \ counter can\n                       occur at re-initialization of the management\n\
    \                       system, and at other times as indicated by the\n     \
    \                  value of ifCounterDiscontinuityTime.\"\n           REFERENCE\
    \   \"[IEEE 802.3 Std.], 30.3.1.1.11,\n                       aFramesAbortedDueToXSColls.\"\
    \n           ::= { dot3StatsEntry 9 }\n       dot3StatsInternalMacTransmitErrors\
    \ OBJECT-TYPE\n           SYNTAX      Counter32\n           MAX-ACCESS  read-only\n\
    \           STATUS      current\n           DESCRIPTION \"A count of frames for\
    \ which transmission on a\n                       particular interface fails due\
    \ to an internal\n                       MAC sublayer transmit error. A frame\
    \ is only\n                       counted by an instance of this object if it\
    \ is\n                       not counted by the corresponding instance of\n  \
    \                     either the dot3StatsLateCollisions object, the\n       \
    \                dot3StatsExcessiveCollisions object, or the\n               \
    \        dot3StatsCarrierSenseErrors object.\n                       The precise\
    \ meaning of the count represented by\n                       an instance of this\
    \ object is implementation-\n                       specific.  In particular,\
    \ an instance of this\n                       object may represent a count of\
    \ transmission\n                       errors on a particular interface that are\
    \ not\n                       otherwise counted.\n                       Discontinuities\
    \ in the value of this counter can\n                       occur at re-initialization\
    \ of the management\n                       system, and at other times as indicated\
    \ by the\n                       value of ifCounterDiscontinuityTime.\"\n    \
    \       REFERENCE   \"[IEEE 802.3 Std.], 30.3.1.1.12,\n                      \
    \ aFramesLostDueToIntMACXmitError.\"\n           ::= { dot3StatsEntry 10 }\n \
    \      dot3StatsCarrierSenseErrors OBJECT-TYPE\n           SYNTAX      Counter32\n\
    \           MAX-ACCESS  read-only\n           STATUS      current\n          \
    \ DESCRIPTION \"The number of times that the carrier sense\n                 \
    \      condition was lost or never asserted when\n                       attempting\
    \ to transmit a frame on a particular\n                       interface.\n   \
    \                    The count represented by an instance of this\n          \
    \             object is incremented at most once per\n                       transmission\
    \ attempt, even if the carrier sense\n                       condition fluctuates\
    \ during a transmission\n                       attempt.\n                   \
    \    This counter does not increment when the\n                       interface\
    \ is operating in full-duplex mode.\n                       Discontinuities in\
    \ the value of this counter can\n                       occur at re-initialization\
    \ of the management\n                       system, and at other times as indicated\
    \ by the\n                       value of ifCounterDiscontinuityTime.\"\n    \
    \       REFERENCE   \"[IEEE 802.3 Std.], 30.3.1.1.13,\n                      \
    \ aCarrierSenseErrors.\"\n           ::= { dot3StatsEntry 11 }\n       -- { dot3StatsEntry\
    \ 12 } is not assigned\n       dot3StatsFrameTooLongs OBJECT-TYPE\n          \
    \ SYNTAX      Counter32\n           MAX-ACCESS  read-only\n           STATUS \
    \     current\n           DESCRIPTION \"A count of frames received on a particular\n\
    \                       interface that exceed the maximum permitted\n        \
    \               frame size.\n                       The count represented by an\
    \ instance of this\n                       object is incremented when the frameTooLong\n\
    \                       status is returned by the MAC service to the\n       \
    \                LLC (or other MAC user). Received frames for\n              \
    \         which multiple error conditions obtain are,\n                      \
    \ according to the conventions of IEEE 802.3\n                       Layer Management,\
    \ counted exclusively according\n                       to the error status presented\
    \ to the LLC.\n                       Discontinuities in the value of this counter\
    \ can\n                       occur at re-initialization of the management\n \
    \                      system, and at other times as indicated by the\n      \
    \                 value of ifCounterDiscontinuityTime.\"\n           REFERENCE\
    \   \"[IEEE 802.3 Std.], 30.3.1.1.25,\n                       aFrameTooLongErrors.\"\
    \n           ::= { dot3StatsEntry 13 }\n       -- { dot3StatsEntry 14 } is not\
    \ assigned\n       -- { dot3StatsEntry 15 } is not assigned\n       dot3StatsInternalMacReceiveErrors\
    \ OBJECT-TYPE\n           SYNTAX      Counter32\n           MAX-ACCESS  read-only\n\
    \           STATUS      current\n           DESCRIPTION \"A count of frames for\
    \ which reception on a\n                       particular interface fails due\
    \ to an internal\n                       MAC sublayer receive error. A frame is\
    \ only\n                       counted by an instance of this object if it is\n\
    \                       not counted by the corresponding instance of\n       \
    \                either the dot3StatsFrameTooLongs object, the\n             \
    \          dot3StatsAlignmentErrors object, or the\n                       dot3StatsFCSErrors\
    \ object.\n                       The precise meaning of the count represented\
    \ by\n                       an instance of this object is implementation-\n \
    \                      specific.  In particular, an instance of this\n       \
    \                object may represent a count of receive errors\n            \
    \           on a particular interface that are not\n                       otherwise\
    \ counted.\n                       Discontinuities in the value of this counter\
    \ can\n                       occur at re-initialization of the management\n \
    \                      system, and at other times as indicated by the\n      \
    \                 value of ifCounterDiscontinuityTime.\"\n           REFERENCE\
    \   \"[IEEE 802.3 Std.], 30.3.1.1.15,\n                       aFramesLostDueToIntMACRcvError.\"\
    \n           ::= { dot3StatsEntry 16 }\n       dot3StatsEtherChipSet OBJECT-TYPE\n\
    \           SYNTAX      OBJECT IDENTIFIER\n           MAX-ACCESS  read-only\n\
    \           STATUS      deprecated\n           DESCRIPTION \"******** THIS OBJECT\
    \ IS DEPRECATED ********\n                       This object contains an OBJECT\
    \ IDENTIFIER\n                       which identifies the chipset used to\n  \
    \                     realize the interface. Ethernet-like\n                 \
    \      interfaces are typically built out of\n                       several different\
    \ chips. The MIB implementor\n                       is presented with a decision\
    \ of which chip\n                       to identify via this object. The implementor\n\
    \                       should identify the chip which is usually\n          \
    \             called the Medium Access Control chip.\n                       If\
    \ no such chip is easily identifiable,\n                       the implementor\
    \ should identify the chip\n                       which actually gathers the\
    \ transmit\n                       and receive statistics and error\n        \
    \               indications. This would allow a\n                       manager\
    \ station to correlate the\n                       statistics and the chip generating\n\
    \                       them, giving it the ability to take\n                \
    \       into account any known anomalies\n                       in the chip.\"\
    \n           ::= { dot3StatsEntry 17 }\n       dot3StatsSymbolErrors OBJECT-TYPE\n\
    \           SYNTAX      Counter32\n           MAX-ACCESS  read-only\n        \
    \   STATUS      current\n           DESCRIPTION \"For an interface operating at\
    \ 100 Mb/s, the\n                       number of times there was an invalid data\
    \ symbol\n                       when a valid carrier was present.\n         \
    \              For an interface operating in half-duplex mode\n              \
    \         at 1000 Mb/s, the number of times the receiving\n                  \
    \     media is non-idle (a carrier event) for a period\n                     \
    \  of time equal to or greater than slotTime, and\n                       during\
    \ which there was at least one occurrence\n                       of an event\
    \ that causes the PHY to indicate\n                       'Data reception error'\
    \ or 'carrier extend error'\n                       on the GMII.\n           \
    \            For an interface operating in full-duplex mode\n                \
    \       at 1000 Mb/s, the number of times the receiving\n                    \
    \   media is non-idle a carrier event) for a period\n                       of\
    \ time equal to or greater than minFrameSize,\n                       and during\
    \ which there was at least one\n                       occurrence of an event\
    \ that causes the PHY to\n                       indicate 'Data reception error'\
    \ on the GMII.\n                       The count represented by an instance of\
    \ this\n                       object is incremented at most once per carrier\n\
    \                       event, even if multiple symbol errors occur\n        \
    \               during the carrier event.  This count does\n                 \
    \      not increment if a collision is present.\n                       Discontinuities\
    \ in the value of this counter can\n                       occur at re-initialization\
    \ of the management\n                       system, and at other times as indicated\
    \ by the\n                       value of ifCounterDiscontinuityTime.\"\n    \
    \       REFERENCE   \"[IEEE 802.3 Std.], 30.3.2.1.5,\n                       aSymbolErrorDuringCarrier.\"\
    \n           ::= { dot3StatsEntry 18 }\n       dot3StatsDuplexStatus OBJECT-TYPE\n\
    \           SYNTAX      INTEGER {\n                           unknown(1),\n  \
    \                         halfDuplex(2),\n                           fullDuplex(3)\n\
    \                       }\n           MAX-ACCESS  read-only\n           STATUS\
    \      current\n           DESCRIPTION \"The current mode of operation of the\
    \ MAC\n                       entity.  'unknown' indicates that the current\n\
    \                       duplex mode could not be determined.\n               \
    \        Management control of the duplex mode is\n                       accomplished\
    \ through the MAU MIB.  When\n                       an interface does not support\
    \ autonegotiation,\n                       or when autonegotiation is not enabled,\
    \ the\n                       duplex mode is controlled using\n              \
    \         ifMauDefaultType.  When autonegotiation is\n                       supported\
    \ and enabled, duplex mode is controlled\n                       using ifMauAutoNegAdvertisedBits.\
    \  In either\n                       case, the currently operating duplex mode\
    \ is\n                       reflected both in this object and in ifMauType.\n\
    \                       Note that this object provides redundant\n           \
    \            information with ifMauType.  Normally, redundant\n              \
    \         objects are discouraged.  However, in this\n                       instance,\
    \ it allows a management application to\n                       determine the\
    \ duplex status of an interface\n                       without having to know\
    \ every possible value of\n                       ifMauType.  This was felt to\
    \ be sufficiently\n                       valuable to justify the redundancy.\"\
    \n           REFERENCE   \"[IEEE 802.3 Std.], 30.3.1.1.32,\n                 \
    \      aDuplexStatus.\"\n           ::= { dot3StatsEntry 19 }\n       -- the Ethernet-like\
    \ Collision Statistics group\n       -- Implementation of this group is optional;\
    \ it is appropriate\n       -- for all systems which have the necessary metering\n\
    \       dot3CollTable OBJECT-TYPE\n           SYNTAX      SEQUENCE OF Dot3CollEntry\n\
    \           MAX-ACCESS  not-accessible\n           STATUS      current\n     \
    \      DESCRIPTION \"A collection of collision histograms for a\n            \
    \           particular set of interfaces.\"\n           REFERENCE   \"[IEEE 802.3\
    \ Std.], 30.3.1.1.30,\n                       aCollisionFrames.\"\n          \
    \ ::= { dot3 5 }\n       dot3CollEntry OBJECT-TYPE\n           SYNTAX      Dot3CollEntry\n\
    \           MAX-ACCESS  not-accessible\n           STATUS      current\n     \
    \      DESCRIPTION \"A cell in the histogram of per-frame\n                  \
    \     collisions for a particular interface.  An\n                       instance\
    \ of this object represents the\n                       frequency of individual\
    \ MAC frames for which\n                       the transmission (successful or\
    \ otherwise) on a\n                       particular interface is accompanied\
    \ by a\n                       particular number of media collisions.\"\n    \
    \       INDEX       { ifIndex, dot3CollCount }\n           ::= { dot3CollTable\
    \ 1 }\n       Dot3CollEntry ::=\n           SEQUENCE {\n               dot3CollCount\
    \        INTEGER,\n               dot3CollFrequencies  Counter32\n           }\n\
    \       -- { dot3CollEntry 1 } is no longer in use\n       dot3CollCount OBJECT-TYPE\n\
    \           SYNTAX      INTEGER (1..16)\n           MAX-ACCESS  not-accessible\n\
    \           STATUS      current\n           DESCRIPTION \"The number of per-frame\
    \ media collisions for\n                       which a particular collision histogram\
    \ cell\n                       represents the frequency on a particular\n    \
    \                   interface.\"\n           ::= { dot3CollEntry 2 }\n       dot3CollFrequencies\
    \ OBJECT-TYPE\n           SYNTAX      Counter32\n           MAX-ACCESS  read-only\n\
    \           STATUS      current\n           DESCRIPTION \"A count of individual\
    \ MAC frames for which the\n                       transmission (successful or\
    \ otherwise) on a\n                       particular interface occurs after the\n\
    \                       frame has experienced exactly the number\n           \
    \            of collisions in the associated\n                       dot3CollCount\
    \ object.\n                       For example, a frame which is transmitted\n\
    \                       on interface 77 after experiencing\n                 \
    \      exactly 4 collisions would be indicated\n                       by incrementing\
    \ only dot3CollFrequencies.77.4.\n                       No other instance of\
    \ dot3CollFrequencies would\n                       be incremented in this example.\n\
    \                       This counter does not increment when the\n           \
    \            interface is operating in full-duplex mode.\n                   \
    \    Discontinuities in the value of this counter can\n                      \
    \ occur at re-initialization of the management\n                       system,\
    \ and at other times as indicated by the\n                       value of ifCounterDiscontinuityTime.\"\
    \n           ::= { dot3CollEntry 3 }\n       dot3ControlTable OBJECT-TYPE\n  \
    \         SYNTAX      SEQUENCE OF Dot3ControlEntry\n           MAX-ACCESS  not-accessible\n\
    \           STATUS      current\n           DESCRIPTION \"A table of descriptive\
    \ and status information\n                       about the MAC Control sublayer\
    \ on the\n                       ethernet-like interfaces attached to a\n    \
    \                   particular system.  There will be one row in\n           \
    \            this table for each ethernet-like interface in\n                \
    \       the system which implements the MAC Control\n                       sublayer.\
    \  If some, but not all, of the\n                       ethernet-like interfaces\
    \ in the system implement\n                       the MAC Control sublayer, there\
    \ will be fewer\n                       rows in this table than in the dot3StatsTable.\"\
    \n           ::= { dot3 9 }\n       dot3ControlEntry OBJECT-TYPE\n           SYNTAX\
    \      Dot3ControlEntry\n           MAX-ACCESS  not-accessible\n           STATUS\
    \      current\n           DESCRIPTION \"An entry in the table, containing information\n\
    \                       about the MAC Control sublayer on a single\n         \
    \              ethernet-like interface.\"\n           INDEX       { dot3StatsIndex\
    \ }\n           ::= { dot3ControlTable 1 }\n       Dot3ControlEntry ::=\n    \
    \       SEQUENCE {\n               dot3ControlFunctionsSupported       BITS,\n\
    \               dot3ControlInUnknownOpcodes         Counter32\n           }\n\
    \       dot3ControlFunctionsSupported OBJECT-TYPE\n           SYNTAX      BITS\
    \ {\n                           pause(0)   -- 802.3x flow control\n          \
    \             }\n           MAX-ACCESS  read-only\n           STATUS      current\n\
    \           DESCRIPTION \"A list of the possible MAC Control functions\n     \
    \                  implemented for this interface.\"\n           REFERENCE   \"\
    [IEEE 802.3 Std.], 30.3.3.2,\n                       aMACControlFunctionsSupported.\"\
    \n           ::= { dot3ControlEntry 1 }\n       dot3ControlInUnknownOpcodes OBJECT-TYPE\n\
    \           SYNTAX      Counter32\n           MAX-ACCESS  read-only\n        \
    \   STATUS      current\n           DESCRIPTION \"A count of MAC Control frames\
    \ received on this\n                       interface that contain an opcode that\
    \ is not\n                       supported by this device.\n                 \
    \      Discontinuities in the value of this counter can\n                    \
    \   occur at re-initialization of the management\n                       system,\
    \ and at other times as indicated by the\n                       value of ifCounterDiscontinuityTime.\"\
    \n           REFERENCE   \"[IEEE 802.3 Std.], 30.3.3.5,\n                    \
    \   aUnsupportedOpcodesReceived\"\n           ::= { dot3ControlEntry 2 }\n   \
    \    dot3PauseTable OBJECT-TYPE\n           SYNTAX      SEQUENCE OF Dot3PauseEntry\n\
    \           MAX-ACCESS  not-accessible\n           STATUS      current\n     \
    \      DESCRIPTION \"A table of descriptive and status information\n         \
    \              about the MAC Control PAUSE function on the\n                 \
    \      ethernet-like interfaces attached to a\n                       particular\
    \ system. There will be one row in\n                       this table for each\
    \ ethernet-like interface in\n                       the system which supports\
    \ the MAC Control PAUSE\n                       function (i.e., the 'pause' bit\
    \ in the\n                       corresponding instance of\n                 \
    \      dot3ControlFunctionsSupported is set).  If some,\n                    \
    \   but not all, of the ethernet-like interfaces in\n                       the\
    \ system implement the MAC Control PAUSE\n                       function (for\
    \ example, if some interfaces only\n                       support half-duplex),\
    \ there will be fewer rows\n                       in this table than in the dot3StatsTable.\"\
    \n           ::= { dot3 10 }\n       dot3PauseEntry OBJECT-TYPE\n           SYNTAX\
    \      Dot3PauseEntry\n           MAX-ACCESS  not-accessible\n           STATUS\
    \      current\n           DESCRIPTION \"An entry in the table, containing information\n\
    \                       about the MAC Control PAUSE function on a single\n   \
    \                    ethernet-like interface.\"\n           INDEX       { dot3StatsIndex\
    \ }\n           ::= { dot3PauseTable 1 }\n       Dot3PauseEntry ::=\n        \
    \   SEQUENCE {\n               dot3PauseAdminMode                  INTEGER,\n\
    \               dot3PauseOperMode                   INTEGER,\n               dot3InPauseFrames\
    \                   Counter32,\n               dot3OutPauseFrames            \
    \      Counter32\n           }\n       dot3PauseAdminMode OBJECT-TYPE\n      \
    \     SYNTAX      INTEGER {\n                           disabled(1),\n       \
    \                    enabledXmit(2),\n                           enabledRcv(3),\n\
    \                           enabledXmitAndRcv(4)\n                       }\n \
    \          MAX-ACCESS  read-write\n           STATUS      current\n          \
    \ DESCRIPTION \"This object is used to configure the default\n               \
    \        administrative PAUSE mode for this interface.\n                     \
    \  This object represents the\n                       administratively-configured\
    \ PAUSE mode for this\n                       interface.  If auto-negotiation\
    \ is not enabled\n                       or is not implemented for the active\
    \ MAU\n                       attached to this interface, the value of this\n\
    \                       object determines the operational PAUSE mode\n       \
    \                of the interface whenever it is operating in\n              \
    \         full-duplex mode.  In this case, a set to this\n                   \
    \    object will force the interface into the\n                       specified\
    \ mode.\n                       If auto-negotiation is implemented and enabled\n\
    \                       for the MAU attached to this interface, the\n        \
    \               PAUSE mode for this interface is determined by\n             \
    \          auto-negotiation, and the value of this object\n                  \
    \     denotes the mode to which the interface will\n                       automatically\
    \ revert if/when auto-negotiation is\n                       later disabled. \
    \ Note that when auto-negotiation\n                       is running, administrative\
    \ control of the PAUSE\n                       mode may be accomplished using\
    \ the\n                       ifMauAutoNegCapAdvertisedBits object in the\n  \
    \                     MAU-MIB.\n                       Note that the value of\
    \ this object is ignored\n                       when the interface is not operating\
    \ in\n                       full-duplex mode.\n                       An attempt\
    \ to set this object to\n                       'enabledXmit(2)' or 'enabledRcv(3)'\
    \ will fail\n                       on interfaces that do not support operation\n\
    \                       at greater than 100 Mb/s.\"\n           ::= { dot3PauseEntry\
    \ 1 }\n       dot3PauseOperMode OBJECT-TYPE\n           SYNTAX      INTEGER {\n\
    \                           disabled(1),\n                           enabledXmit(2),\n\
    \                           enabledRcv(3),\n                           enabledXmitAndRcv(4)\n\
    \                       }\n           MAX-ACCESS  read-only\n           STATUS\
    \      current\n           DESCRIPTION \"This object reflects the PAUSE mode currently\n\
    \                       in use on this interface, as determined by\n         \
    \              either (1) the result of the auto-negotiation\n               \
    \        function or (2) if auto-negotiation is not\n                       enabled\
    \ or is not implemented for the active MAU\n                       attached to\
    \ this interface, by the value of\n                       dot3PauseAdminMode.\
    \  Interfaces operating at\n                       100 Mb/s or less will never\
    \ return\n                       'enabledXmit(2)' or 'enabledRcv(3)'.  Interfaces\n\
    \                       operating in half-duplex mode will always return\n   \
    \                    'disabled(1)'.  Interfaces on which\n                   \
    \    auto-negotiation is enabled but not yet\n                       completed\
    \ should return the value\n                       'disabled(1)'.\"\n         \
    \  ::= { dot3PauseEntry 2 }\n       dot3InPauseFrames OBJECT-TYPE\n          \
    \ SYNTAX      Counter32\n           MAX-ACCESS  read-only\n           STATUS \
    \     current\n           DESCRIPTION \"A count of MAC Control frames received\
    \ on this\n                       interface with an opcode indicating the PAUSE\n\
    \                       operation.\n                       This counter does not\
    \ increment when the\n                       interface is operating in half-duplex\
    \ mode.\n                       Discontinuities in the value of this counter can\n\
    \                       occur at re-initialization of the management\n       \
    \                system, and at other times as indicated by the\n            \
    \           value of ifCounterDiscontinuityTime.\"\n           REFERENCE   \"\
    [IEEE 802.3 Std.], 30.3.4.3,\n                       aPAUSEMACCtrlFramesReceived.\"\
    \n           ::= { dot3PauseEntry 3 }\n       dot3OutPauseFrames OBJECT-TYPE\n\
    \           SYNTAX      Counter32\n           MAX-ACCESS  read-only\n        \
    \   STATUS      current\n           DESCRIPTION \"A count of MAC Control frames\
    \ transmitted on\n                       this interface with an opcode indicating\
    \ the\n                       PAUSE operation.\n                       This counter\
    \ does not increment when the\n                       interface is operating in\
    \ half-duplex mode.\n                       Discontinuities in the value of this\
    \ counter can\n                       occur at re-initialization of the management\n\
    \                       system, and at other times as indicated by the\n     \
    \                  value of ifCounterDiscontinuityTime.\"\n           REFERENCE\
    \   \"[IEEE 802.3 Std.], 30.3.4.2,\n                       aPAUSEMACCtrlFramesTransmitted.\"\
    \n           ::= { dot3PauseEntry 4 }\n       --  802.3 Tests\n       dot3Tests\
    \   OBJECT IDENTIFIER ::= { dot3 6 }\n       dot3Errors  OBJECT IDENTIFIER ::=\
    \ { dot3 7 }\n       --  TDR Test\n       dot3TestTdr OBJECT-IDENTITY\n      \
    \     STATUS      current\n           DESCRIPTION \"The Time-Domain Reflectometry\
    \ (TDR) test is\n                       specific to ethernet-like interfaces of\
    \ type\n                       10Base5 and 10Base2.  The TDR value may be\n  \
    \                     useful in determining the approximate distance\n       \
    \                to a cable fault.  It is advisable to repeat\n              \
    \         this test to check for a consistent resulting\n                    \
    \   TDR value, to verify that there is a fault.\n                       A TDR\
    \ test returns as its result the time\n                       interval, measured\
    \ in 10 MHz ticks or 100 nsec\n                       units, between the start\
    \ of TDR test\n                       transmission and the subsequent detection\
    \ of a\n                       collision or deassertion of carrier.  On\n    \
    \                   successful completion of a TDR test, the result\n        \
    \               is stored as the value of an appropriate\n                   \
    \    instance of an appropriate vendor specific MIB\n                       object,\
    \ and the OBJECT IDENTIFIER of that\n                       instance is stored\
    \ in the appropriate instance\n                       of the appropriate test\
    \ result code object\n                       (thereby indicating where the result\
    \ has been\n                       stored).\"\n           ::= { dot3Tests 1 }\n\
    \       -- Loopback Test\n       dot3TestLoopBack OBJECT-IDENTITY\n          \
    \ STATUS      current\n           DESCRIPTION \"This test configures the MAC chip\
    \ and executes\n                       an internal loopback test of memory, data\
    \ paths,\n                       and the MAC chip logic.  This loopback test can\n\
    \                       only be executed if the interface is offline.\n      \
    \                 Once the test has completed, the MAC chip should\n         \
    \              be reinitialized for network operation, but it\n              \
    \         should remain offline.\n                       If an error occurs during\
    \ a test, the\n                       appropriate test result object will be set\n\
    \                       to indicate a failure.  The two OBJECT\n             \
    \          IDENTIFIER values dot3ErrorInitError and\n                       dot3ErrorLoopbackError\
    \ may be used to provided\n                       more information as values for\
    \ an appropriate\n                       test result code object.\"\n        \
    \   ::= { dot3Tests 2 }\n       dot3ErrorInitError OBJECT-IDENTITY\n         \
    \  STATUS      current\n           DESCRIPTION \"Couldn't initialize MAC chip\
    \ for test.\"\n           ::= { dot3Errors 1 }\n       dot3ErrorLoopbackError\
    \ OBJECT-IDENTITY\n           STATUS      current\n           DESCRIPTION \"Expected\
    \ data not received (or not received\n                       correctly) in loopback\
    \ test.\"\n           ::= { dot3Errors 2 }\n       -- { dot3 8 }, the dot3ChipSets\
    \ tree, is defined in [28]\n       -- conformance information\n       etherConformance\
    \ OBJECT IDENTIFIER ::= { etherMIB 2 }\n       etherGroups      OBJECT IDENTIFIER\
    \ ::= { etherConformance 1 }\n       etherCompliances OBJECT IDENTIFIER ::= {\
    \ etherConformance 2 }\n       -- compliance statements\n       etherCompliance\
    \ MODULE-COMPLIANCE\n           STATUS      deprecated\n           DESCRIPTION\
    \ \"******** THIS COMPLIANCE IS DEPRECATED ********\n                       The\
    \ compliance statement for managed network\n                       entities which\
    \ have ethernet-like network\n                       interfaces.\n           \
    \            This compliance is deprecated and replaced by\n                 \
    \      dot3Compliance.\"\n           MODULE  -- this module\n               MANDATORY-GROUPS\
    \ { etherStatsGroup }\n               GROUP       etherCollisionTableGroup\n \
    \              DESCRIPTION \"This group is optional. It is appropriate\n     \
    \                      for all systems which have the necessary\n            \
    \               metering. Implementation in such systems is\n                \
    \           highly recommended.\"\n           ::= { etherCompliances 1 }\n   \
    \    ether100MbsCompliance MODULE-COMPLIANCE\n           STATUS      deprecated\n\
    \           DESCRIPTION \"******** THIS COMPLIANCE IS DEPRECATED ********\n  \
    \                     The compliance statement for managed network\n         \
    \              entities which have 100 Mb/sec ethernet-like\n                \
    \       network interfaces.\n                       This compliance is deprecated\
    \ and replaced by\n                       dot3Compliance.\"\n           MODULE\
    \  -- this module\n               MANDATORY-GROUPS { etherStats100MbsGroup }\n\
    \               GROUP       etherCollisionTableGroup\n               DESCRIPTION\
    \ \"This group is optional. It is appropriate\n                           for\
    \ all systems which have the necessary\n                           metering. Implementation\
    \ in such systems is\n                           highly recommended.\"\n     \
    \      ::= { etherCompliances 2 }\n       dot3Compliance MODULE-COMPLIANCE\n \
    \          STATUS      current\n           DESCRIPTION \"The compliance statement\
    \ for managed network\n                       entities which have ethernet-like\
    \ network\n                       interfaces.\"\n           MODULE  -- this module\n\
    \               MANDATORY-GROUPS { etherStatsBaseGroup }\n               GROUP\
    \       etherDuplexGroup\n               DESCRIPTION \"This group is mandatory\
    \ for all\n                           ethernet-like network interfaces which are\n\
    \                           capable of operating in full-duplex mode.\n      \
    \                     It is highly recommended for all\n                     \
    \      ethernet-like network interfaces.\"\n               GROUP       etherStatsLowSpeedGroup\n\
    \               DESCRIPTION \"This group is mandatory for all\n              \
    \             ethernet-like network interfaces which are\n                   \
    \        capable of operating at 10 Mb/s or slower in\n                      \
    \     half-duplex mode.\"\n               GROUP       etherStatsHighSpeedGroup\n\
    \               DESCRIPTION \"This group is mandatory for all\n              \
    \             ethernet-like network interfaces which are\n                   \
    \        capable of operating at 100 Mb/s or faster.\"\n               GROUP \
    \      etherControlGroup\n               DESCRIPTION \"This group is mandatory\
    \ for all\n                           ethernet-like network interfaces that\n\
    \                           support the MAC Control sublayer.\"\n            \
    \   GROUP       etherControlPauseGroup\n               DESCRIPTION \"This group\
    \ is mandatory for all\n                           ethernet-like network interfaces\
    \ that\n                           support the MAC Control PAUSE function.\"\n\
    \               GROUP       etherCollisionTableGroup\n               DESCRIPTION\
    \ \"This group is optional. It is appropriate\n                           for\
    \ all ethernet-like network interfaces\n                           which are capable\
    \ of operating in\n                           half-duplex mode and have the necessary\n\
    \                           metering. Implementation in systems with\n       \
    \                    such interfaces is highly recommended.\"\n           ::=\
    \ { etherCompliances 3 }\n       -- units of conformance\n       etherStatsGroup\
    \ OBJECT-GROUP\n           OBJECTS     { dot3StatsIndex,\n                   \
    \      dot3StatsAlignmentErrors,\n                         dot3StatsFCSErrors,\n\
    \                         dot3StatsSingleCollisionFrames,\n                  \
    \       dot3StatsMultipleCollisionFrames,\n                         dot3StatsSQETestErrors,\n\
    \                         dot3StatsDeferredTransmissions,\n                  \
    \       dot3StatsLateCollisions,\n                         dot3StatsExcessiveCollisions,\n\
    \                         dot3StatsInternalMacTransmitErrors,\n              \
    \           dot3StatsCarrierSenseErrors,\n                         dot3StatsFrameTooLongs,\n\
    \                         dot3StatsInternalMacReceiveErrors,\n               \
    \          dot3StatsEtherChipSet\n                       }\n           STATUS\
    \      deprecated\n           DESCRIPTION \"********* THIS GROUP IS DEPRECATED\
    \ **********\n                       A collection of objects providing information\n\
    \                       applicable to all ethernet-like network\n            \
    \           interfaces.\n                       This object group has been deprecated\
    \ and\n                       replaced by etherStatsBaseGroup and\n          \
    \             etherStatsLowSpeedGroup.\"\n           ::= { etherGroups 1 }\n \
    \      etherCollisionTableGroup OBJECT-GROUP\n           OBJECTS     { dot3CollFrequencies\n\
    \                       }\n           STATUS      current\n           DESCRIPTION\
    \ \"A collection of objects providing a histogram\n                       of packets\
    \ successfully transmitted after\n                       experiencing exactly\
    \ N collisions.\"\n           ::= { etherGroups 2 }\n       etherStats100MbsGroup\
    \ OBJECT-GROUP\n           OBJECTS     { dot3StatsIndex,\n                   \
    \      dot3StatsAlignmentErrors,\n                         dot3StatsFCSErrors,\n\
    \                         dot3StatsSingleCollisionFrames,\n                  \
    \       dot3StatsMultipleCollisionFrames,\n                         dot3StatsDeferredTransmissions,\n\
    \                         dot3StatsLateCollisions,\n                         dot3StatsExcessiveCollisions,\n\
    \                         dot3StatsInternalMacTransmitErrors,\n              \
    \           dot3StatsCarrierSenseErrors,\n                         dot3StatsFrameTooLongs,\n\
    \                         dot3StatsInternalMacReceiveErrors,\n               \
    \          dot3StatsEtherChipSet,\n                         dot3StatsSymbolErrors\n\
    \                       }\n           STATUS      deprecated\n           DESCRIPTION\
    \ \"********* THIS GROUP IS DEPRECATED **********\n                       A collection\
    \ of objects providing information\n                       applicable to 100 Mb/sec\
    \ ethernet-like network\n                       interfaces.\n                \
    \       This object group has been deprecated and\n                       replaced\
    \ by etherStatsBaseGroup and\n                       etherStatsHighSpeedGroup.\"\
    \n           ::= { etherGroups 3 }\n       etherStatsBaseGroup OBJECT-GROUP\n\
    \           OBJECTS     { dot3StatsIndex,\n                         dot3StatsAlignmentErrors,\n\
    \                         dot3StatsFCSErrors,\n                         dot3StatsSingleCollisionFrames,\n\
    \                         dot3StatsMultipleCollisionFrames,\n                \
    \         dot3StatsDeferredTransmissions,\n                         dot3StatsLateCollisions,\n\
    \                         dot3StatsExcessiveCollisions,\n                    \
    \     dot3StatsInternalMacTransmitErrors,\n                         dot3StatsCarrierSenseErrors,\n\
    \                         dot3StatsFrameTooLongs,\n                         dot3StatsInternalMacReceiveErrors\n\
    \                       }\n           STATUS      current\n           DESCRIPTION\
    \ \"A collection of objects providing information\n                       applicable\
    \ to all ethernet-like network\n                       interfaces.\"\n       \
    \    ::= { etherGroups 4 }\n       etherStatsLowSpeedGroup OBJECT-GROUP\n    \
    \       OBJECTS     { dot3StatsSQETestErrors }\n           STATUS      current\n\
    \           DESCRIPTION \"A collection of objects providing information\n    \
    \                   applicable to ethernet-like network interfaces\n         \
    \              capable of operating at 10 Mb/s or slower in\n                \
    \       half-duplex mode.\"\n           ::= { etherGroups 5 }\n       etherStatsHighSpeedGroup\
    \ OBJECT-GROUP\n           OBJECTS     { dot3StatsSymbolErrors }\n           STATUS\
    \      current\n           DESCRIPTION \"A collection of objects providing information\n\
    \                       applicable to ethernet-like network interfaces\n     \
    \                  capable of operating at 100 Mb/s or faster.\"\n           ::=\
    \ { etherGroups 6 }\n       etherDuplexGroup OBJECT-GROUP\n           OBJECTS\
    \     { dot3StatsDuplexStatus }\n           STATUS      current\n           DESCRIPTION\
    \ \"A collection of objects providing information\n                       about\
    \ the duplex mode of an ethernet-like\n                       network interface.\"\
    \n           ::= { etherGroups 7 }\n       etherControlGroup OBJECT-GROUP\n  \
    \         OBJECTS     { dot3ControlFunctionsSupported,\n                     \
    \    dot3ControlInUnknownOpcodes\n                       }\n           STATUS\
    \      current\n           DESCRIPTION \"A collection of objects providing information\n\
    \                       about the MAC Control sublayer on ethernet-like\n    \
    \                   network interfaces.\"\n           ::= { etherGroups 8 }\n\
    \       etherControlPauseGroup OBJECT-GROUP\n           OBJECTS     { dot3PauseAdminMode,\n\
    \                         dot3PauseOperMode,\n                         dot3InPauseFrames,\n\
    \                         dot3OutPauseFrames\n                       }\n     \
    \      STATUS      current\n           DESCRIPTION \"A collection of objects providing\
    \ information\n                       about and control of the MAC Control PAUSE\n\
    \                       function on ethernet-like network interfaces.\"\n    \
    \       ::= { etherGroups 9 }\n   END\n"
- title: 5.  Intellectual Property
  contents:
  - "5.  Intellectual Property\n   The IETF takes no position regarding the validity\
    \ or scope of any\n   intellectual property or other rights that might be claimed\
    \ to\n   pertain to the implementation or use of the technology described in\n\
    \   this document or the extent to which any license under such rights\n   might\
    \ or might not be available; neither does it represent that it\n   has made any\
    \ effort to identify any such rights.  Information on the\n   IETF's procedures\
    \ with respect to rights in standards-track and\n   standards-related documentation\
    \ can be found in BCP-11.  Copies of\n   claims of rights made available for publication\
    \ and any assurances of\n   licenses to be made available, or the result of an\
    \ attempt made to\n   obtain a general license or permission for the use of such\n\
    \   proprietary rights by implementors or users of this specification can\n  \
    \ be obtained from the IETF Secretariat.\n   The IETF invites any interested party\
    \ to bring to its attention any\n   copyrights, patents or patent applications,\
    \ or other proprietary\n   rights which may cover technology that may be required\
    \ to practice\n   this standard.  Please address the information to the IETF Executive\n\
    \   Director.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   This document was produced by the IETF Ethernet Interfaces\
    \ and Hub\n   MIB Working Group, whose efforts were greatly advanced by the\n\
    \   contributions of the following people:\n      Lynn Kubinec\n      Steve McRobert\n\
    \      Dan Romascanu\n      Andrew Smith\n      Geoff Thompson\n   This document\
    \ is based on the Proposed Standard Ethernet MIB, RFC\n   2358 [23], edited by\
    \ John Flick of Hewlett-Packard and Jeffrey\n   Johnson of RedBack Networks and\
    \ produced by the 802.3 Hub MIB Working\n   Group.  It extends that document by\
    \ providing support for full-duplex\n   Ethernet interfaces and 1000 Mb/sec Ethernet\
    \ interfaces as outlined\n   in [16].\n   RFC 2358, in turn, is almost completely\
    \ based on both the Standard\n   Ethernet MIB, RFC 1643 [21], and the Proposed\
    \ Standard Ethernet MIB\n   using the SNMPv2 SMI, RFC 1650 [22], both of which\
    \ were edited by\n   Frank Kastenholz of FTP Software and produced by the Interfaces\
    \ MIB\n   Working Group.  RFC 2358 extends those documents by providing support\n\
    \   for 100 Mb/sec ethernet interfaces.\n   RFC 1643 and RFC 1650, in turn, are\
    \ based on the Draft Standard\n   Ethernet MIB, RFC 1398 [20], also edited by\
    \ Frank Kastenholz and\n   produced by the Ethernet MIB Working Group.\n   RFC\
    \ 1398, in turn, is based on the Proposed Standard Ethernet MIB,\n   RFC 1284\
    \ [18], which was edited by John Cook of Chipcom and produced\n   by the Transmission\
    \ MIB Working Group.  The Ethernet MIB Working\n   Group gathered implementation\
    \ experience of the variables specified\n   in RFC 1284, documented that experience\
    \ in RFC 1369 [19], and used\n   that information to develop this revised MIB.\n\
    \   RFC 1284, in turn, is based on a document written by Frank\n   Kastenholz,\
    \ then of Interlan, entitled IEEE 802.3 Layer Management\n   Draft M compatible\
    \ MIB for TCP/IP Networks [17].  This document was\n   modestly reworked, initially\
    \ by the SNMP Working Group, and then by\n   the Transmission Working Group, to\
    \ reflect the current conventions\n   for defining objects for MIB interfaces.\
    \  James Davin, of the MIT\n   Laboratory for Computer Science, and Keith McCloghrie\
    \ of Hughes LAN\n   Systems, contributed to later drafts of this memo.  Marshall\
    \ Rose of\n   Performance Systems International, Inc. converted the document into\n\
    \   RFC 1212 [3] concise format.  Anil Rijsinghani of DEC contributed\n   text\
    \ that more adequately describes the TDR test.  Thanks to Frank\n   Kastenholz\
    \ of Interlan and Louis Steinberg of IBM for their\n   experimentation.\n"
- title: 7.  References
  contents:
  - "7.  References\n   [1]  Harrington, D., Presuhn, R. and B. Wijnen, \"An Architecture\
    \ for\n        Describing SNMP Management Frameworks\", RFC 2571, May 1999.\n\
    \   [2]  Rose, M. and K. McCloghrie, \"Structure and Identification of\n     \
    \   Management Information for TCP/IP-based Internets\", STD 16, RFC\n       \
    \ 1155, May 1990.\n   [3]  Rose, M. and K. McCloghrie, \"Concise MIB Definitions\"\
    , STD 16,\n        RFC 1212, March 1991.\n   [4]  Rose, M., \"A Convention for\
    \ Defining Traps for use with the\n        SNMP\", RFC 1215, March 1991.\n   [5]\
    \  McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J., Rose,\n        M.\
    \ and S. Waldbusser, \"Structure of Management Information\n        Version 2\
    \ (SMIv2)\", STD 58, RFC 2578, April 1999.\n   [6]  McCloghrie, K., Perkins, D.,\
    \ Schoenwaelder, J., Case, J., Rose,\n        M. and S. Waldbusser, \"Textual\
    \ Conventions for SMIv2\", STD 58,\n        RFC 2579, April 1999.\n   [7]  McCloghrie,\
    \ K., Perkins, D., Schoenwaelder, J., Case, J., Rose,\n        M. and S Waldbusser,\
    \ \"Conformance Statements for SMIv2\", STD 58,\n        RFC 2580, April 1999.\n\
    \   [8]  Case, J., Fedor, M., Schoffstall, M. and J. Davin, \"Simple\n       \
    \ Network Management Protocol\", STD 15, RFC 1157, May 1990.\n   [9]  Case, J.,\
    \ McCloghrie, K., Rose, M. and S. Waldbusser,\n        \"Introduction to Community-based\
    \ SNMPv2\", RFC 1901, January\n        1996.\n   [10] Case, J., McCloghrie, K.,\
    \ Rose, M. and S. Waldbusser, \"Transport\n        Mappings for Version 2 of the\
    \ Simple Network Management Protocol\n        (SNMPv2)\", RFC 1906, January 1996.\n\
    \   [11] Case, J., Harrington D., Presuhn R. and B. Wijnen, \"Message\n      \
    \  Processing and Dispatching for the Simple Network Management\n        Protocol\
    \ (SNMP)\", RFC 2572, May 1999.\n   [12] Blumenthal, U. and B. Wijnen, \"User-based\
    \ Security Model (USM)\n        for version 3 of the Simple Network Management\
    \ Protocol\n        (SNMPv3)\", RFC 2574, May 1999.\n   [13] Case, J., McCloghrie,\
    \ K., Rose, M. and S. Waldbusser, \"Protocol\n        Operations for Version 2\
    \ of the Simple Network Management\n        Protocol (SNMPv2)\", RFC 1905, January\
    \ 1996.\n   [14] Levi, D., Meyer, P. and B. Stewart, \"SNMPv3 Applications\",\
    \ RFC\n        2573, May 1999.\n   [15] Wijnen, B., Presuhn, R. and K. McCloghrie,\
    \ \"View-based Access\n        Control Model (VACM) for the Simple Network Management\
    \ Protocol\n        (SNMP)\", RFC 2575, May 1999.\n   [16] IEEE, IEEE Std 802.3,\
    \ 1998 Edition: \"Information technology -\n        Telecommunications and information\
    \ exchange between systems -\n        Local and metropolitan area networks - Specific\
    \ requirements -\n        Part 3: Carrier sense multiple access with collision\
    \ detection\n        (CSMA/CD) access method and physical layer specifications\"\
    \n        (incorporating ANSI/IEEE Std. 802.3, 1996 Edition, IEEE Std.\n     \
    \   802.3r-1996, 802.3u-1995, 802.3x&y-1997, 802.3z-1998, and\n        802.3aa-1998),\
    \ September 1998.\n   [17] Kastenholz, F., \"IEEE 802.3 Layer Management Draft\
    \ compatible\n        MIB for TCP/IP Networks\", electronic mail message to mib-\n\
    \        wg@nnsc.nsf.net, 9 June 1989.\n   [18] Cook, J., \"Definitions of Managed\
    \ Objects for Ethernet-Like\n        Interface Types\", RFC 1284, December 1991.\n\
    \   [19] Kastenholz, F., \"Implementation Notes and Experience for The\n     \
    \   Internet Ethernet MIB\", RFC 1369, October 1992.\n   [20] Kastenholz, F.,\
    \ \"Definitions of Managed Objects for the\n        Ethernet-like Interface Types\"\
    , RFC 1398, January 1993.\n   [21] Kastenholz, F., \"Definitions of Managed Objects\
    \ for the\n        Ethernet-like Interface Types\", STD 50, RFC 1643, July 1994.\n\
    \   [22] Kastenholz, F., \"Definitions of Managed Objects for the\n        Ethernet-like\
    \ Interface Types using SMIv2\", RFC 1650, August\n        1994.\n   [23] Flick,\
    \ J. and J. Johnson, \"Definitions of Managed Objects for\n        the Ethernet-like\
    \ Interface Types\", RFC 2358, June 1998.\n   [24] McCloghrie, K. and M. Rose,\
    \ Editors, \"Management Information\n        Base for Network Management of TCP/IP-based\
    \ internets: MIB-II\",\n        STD 17, RFC 1213, March 1991.\n   [25] McCloghrie,\
    \ K., and F. Kastenholz, \"The Interfaces Group MIB\n        using SMIv2\", RFC\
    \ 2233, November 1997.\n   [26] Bradner, S., \"Key words for use in RFCs to Indicate\
    \ Requirements\n        Levels\", BCP 14, RFC 2119, March 1997.\n   [27] Smith,\
    \ A., Flick, J., deGraaf, K., Romascanu, D., McMaster, D.,\n        McCloghrie,\
    \ K. and S. Roberts, \"Definitions of Managed Objects\n        for IEEE 802.3\
    \ Medium Attachment Units (MAUs)\", RFC 2668, August\n        1999.\n   [28] Flick,\
    \ J., \"Definitions of Object Identifiers for Identifying\n        Ethernet Chip\
    \ Sets\", RFC 2666, August 1999.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   There are two management objects defined in this\
    \ MIB that have a\n   MAX-ACCESS clause of read-write.  Such objects may be considered\n\
    \   sensitive or vulnerable in some network environments.  The support\n   for\
    \ SET operations in a non-secure environment without proper\n   protection can\
    \ have a negative effect on network operations.\n   There are a number of managed\
    \ objects in this MIB that may be\n   considered to contain sensitive information.\
    \  In particular, the\n   dot3StatsEtherChipSet object may be considered sensitive\
    \ in many\n   environments, since it would allow an intruder to obtain information\n\
    \   about which vendor's equipment is in use on the network.  Note that\n   this\
    \ object has been deprecated.  However, some implementors may\n   still choose\
    \ to implement it for backwards compatability.\n   Therefore, it may be important\
    \ in some environments to control read\n   access to these objects and possibly\
    \ to even encrypt the values of\n   these objects when sending them over the network\
    \ via SNMP.  Not all\n   versions of SNMP provide features for such a secure environment.\n\
    \   SNMPv1 by itself is such an insecure environment.  Even if the\n   network\
    \ itself is secure (for example by using IPSec), even then,\n   there is no control\
    \ as to who on the secure network is allowed to\n   access and GET (read) the\
    \ objects in this MIB.\n   It is recommended that the implementors consider the\
    \ security\n   features as provided by the SNMPv3 framework.  Specifically, the\
    \ use\n   of the User-based Security Model RFC 2574 [12] and the View-based\n\
    \   Access Control Model RFC 2575 [15] is recommended.\n   It is then a customer/user\
    \ responsibility to ensure that the SNMP\n   entity giving access to an instance\
    \ of this MIB, is properly\n   configured to give access to those objects only\
    \ to those principals\n   (users) that have legitimate rights to access them.\n"
- title: 9.  Authors' Addresses
  contents:
  - "9.  Authors' Addresses\n   John Flick\n   Hewlett-Packard Company\n   8000 Foothills\
    \ Blvd. M/S 5557\n   Roseville, CA 95747-5557\n   Phone: +1 916 785 4018\n   EMail:\
    \ johnf@rose.hp.com\n   Jeffrey Johnson\n   RedBack Networks\n   2570 North First\
    \ Street, Suite 410\n   San Jose, CA, 95131, USA\n   Phone: +1 408 571 2699\n\
    \   EMail: jeff@redbacknetworks.com\n"
- title: A.  Change Log
  contents:
  - 'A.  Change Log

    '
- title: A.1.  Changes since RFC 2358
  contents:
  - "A.1.  Changes since RFC 2358\n   This section enumerates changes made to RFC\
    \ 2358 to produce this\n   document.\n       (1)  Section 2 has been replaced\
    \ with the current SNMP\n            Management Framework boilerplate.\n     \
    \  (2)  The ifMtu mapping has been clarified.\n       (3)  The relationship between\
    \ the IEEE 802.3 octet counters\n            and the IF-MIB octet counters has\
    \ been clarified.\n       (4)  REFERENCE clauses have been updated to reflect\
    \ the\n            actual IEEE 802.3 managed object that each MIB object\n   \
    \         is based on.\n       (5)  The following object DESCRIPTION clauses have\
    \ been\n            updated to reflect that they do not increment in\n       \
    \     full-duplex mode: dot3StatsSingleCollisionFrames,\n            dot3StatsMultipleCollisionFrames,\
    \ dot3StatsSQETestErrors,\n            dot3StatsDeferredTransmissions, dot3StatsLateCollisions,\n\
    \            dot3StatsExcessiveCollisions, dot3StatsCarrierSenseErrors,\n    \
    \        dot3CollFrequencies.\n       (6)  The following object DESCRIPTION clauses\
    \ have been\n            updated to reflect behaviour on full-duplex and\n   \
    \         1000 Mb/s interfaces: dot3StatsAlignmentErrors,\n            dot3StatsFCSErrors,\
    \ dot3StatsSQETestErrors,\n            dot3StatsLateCollisions, dot3StatsSymbolErrors.\n\
    \       (7)  Two new tables, dot3ControlTable and dot3PauseTable,\n          \
    \  have been added.\n       (8)  A new object, dot3StatsDuplexStatus, has been\
    \ added.\n       (9)  The object groups and compliances have been restructured.\n\
    \      (10)  The dot3StatsEtherChipSet object has been deprecated.\n      (11)\
    \  The dot3ChipSets have been moved to a separate document.\n"
- title: A.2.  Changes between RFC 1650 and RFC 2358
  contents:
  - "A.2.  Changes between RFC 1650 and RFC 2358\n   This section enumerates changes\
    \ made to RFC 1650 to produce RFC 2358.\n       (1)  The MODULE-IDENTITY has been\
    \ updated to reflect the changes\n            in the MIB.\n       (2)  A new object,\
    \ dot3StatsSymbolErrors, has been added.\n       (3)  The definition of the object\
    \ dot3StatsIndex has been\n            converted to use the SMIv2 OBJECT-TYPE\
    \ macro.\n       (4)  A new conformance group, etherStats100MbsGroup, has been\n\
    \            added.\n       (5)  A new compliance statement, ether100MbsCompliance,\
    \ has\n            been added.\n       (6)  The Acknowledgements were extended\
    \ to provide a more\n            complete history of the origin of this document.\n\
    \       (7)  The discussion of ifType has been expanded.\n       (8)  A section\
    \ on mapping of Interfaces MIB objects has\n            been added.\n       (9)\
    \  A section defining the relationship of this MIB to\n            the MAU MIB\
    \ has been added.\n      (10)  A section on the mapping of IEEE 802.3 managed\
    \ objects\n            to this MIB and the Interfaces MIB has been added.\n  \
    \    (11)  Converted the dot3Tests, dot3Errors, and dot3ChipSets\n           \
    \ OIDs to use the OBJECT-IDENTITY macro.\n      (12)  Added to the list of registered\
    \ dot3ChipSets.\n      (13)  An intellectual property notice and copyright notice\n\
    \            were added, as required by RFC 2026.\n"
- title: B.  Full Copyright Statement
  contents:
  - "B.  Full Copyright Statement\n   Copyright (C) The Internet Society (1999). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
