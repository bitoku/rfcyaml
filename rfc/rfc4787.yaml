- title: __initial_text__
  contents:
  - "       Network Address Translation (NAT) Behavioral Requirements\n          \
    \                  for Unicast UDP\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet Best Current Practices\
    \ for the\n   Internet Community, and requests discussion and suggestions for\n\
    \   improvements.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2007).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines basic terminology for describing different\n\
    \   types of Network Address Translation (NAT) behavior when handling\n   Unicast\
    \ UDP and also defines a set of requirements that would allow\n   many applications,\
    \ such as multimedia communications or online\n   gaming, to work consistently.\
    \  Developing NATs that meet this set of\n   requirements will greatly increase\
    \ the likelihood that these\n   applications will function properly.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Applicability Statement  . . . . . . . . . . . . .\
    \ . . . . . .  3\n   2.  Introduction . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  3\n   3.  Terminology  . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .  4\n   4.  Network Address and Port Translation Behavior  . . . . .\
    \ . . .  5\n     4.1.  Address and Port Mapping . . . . . . . . . . . . . . .\
    \ . .  5\n     4.2.  Port Assignment  . . . . . . . . . . . . . . . . . . . .\
    \ .  9\n       4.2.1.  Port Assignment Behavior . . . . . . . . . . . . . . .\
    \  9\n       4.2.2.  Port Parity  . . . . . . . . . . . . . . . . . . . . . 11\n\
    \       4.2.3.  Port Contiguity  . . . . . . . . . . . . . . . . . . . 11\n  \
    \   4.3.  Mapping Refresh  . . . . . . . . . . . . . . . . . . . . . 12\n    \
    \ 4.4.  Conflicting Internal and External IP Address Spaces  . . . 13\n   5. \
    \ Filtering Behavior . . . . . . . . . . . . . . . . . . . . . . 15\n   6.  Hairpinning\
    \ Behavior . . . . . . . . . . . . . . . . . . . . . 16\n   7.  Application Level\
    \ Gateways . . . . . . . . . . . . . . . . . . 17\n   8.  Deterministic Properties\
    \ . . . . . . . . . . . . . . . . . . . 18\n   9.  ICMP Destination Unreachable\
    \ Behavior  . . . . . . . . . . . . 19\n   10. Fragmentation of Outgoing Packets\
    \  . . . . . . . . . . . . . . 20\n   11. Receiving Fragmented Packets . . . .\
    \ . . . . . . . . . . . . . 20\n   12. Requirements . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . 21\n   13. Security Considerations  . . . . . . . .\
    \ . . . . . . . . . . . 24\n   14. IAB Considerations . . . . . . . . . . . .\
    \ . . . . . . . . . . 25\n   15. Acknowledgments  . . . . . . . . . . . . . .\
    \ . . . . . . . . . 26\n   16. References . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . 26\n     16.1. Normative References . . . . . . . . . . . .\
    \ . . . . . . . 26\n     16.2. Informative References . . . . . . . . . . . .\
    \ . . . . . . 26\n"
- title: 1.  Applicability Statement
  contents:
  - "1.  Applicability Statement\n   The purpose of this specification is to define\
    \ a set of requirements\n   for NATs that would allow many applications, such\
    \ as multimedia\n   communications or online gaming, to work consistently.  Developing\n\
    \   NATs that meet this set of requirements will greatly increase the\n   likelihood\
    \ that these applications will function properly.\n   The requirements of this\
    \ specification apply to Traditional NATs as\n   described in [RFC2663].\n   This\
    \ document is meant to cover NATs of any size, from small\n   residential NATs\
    \ to large Enterprise NATs.  However, it should be\n   understood that Enterprise\
    \ NATs normally provide much more than just\n   NAT capabilities; for example,\
    \ they typically provide firewall\n   functionalities.  A comprehensive description\
    \ of firewall behaviors\n   and associated requirements is specifically out-of-scope\
    \ for this\n   specification.  However, this specification does cover basic firewall\n\
    \   aspects present in NATs (see Section 5).\n   Approaches using directly signaled\
    \ control of middle boxes are out of\n   scope.\n   UDP Relays (e.g., Traversal\
    \ Using Relay NAT [TURN]) are out of scope.\n   Application aspects are out of\
    \ scope, as the focus here is strictly\n   on the NAT itself.\n   This document\
    \ only covers aspects of NAT traversal related to Unicast\n   UDP [RFC0768] over\
    \ IP [RFC0791] and their dependencies on other\n   protocols.\n"
- title: 2.  Introduction
  contents:
  - "2.  Introduction\n   Network Address Translators (NATs) are well known to cause\
    \ very\n   significant problems with applications that carry IP addresses in the\n\
    \   payload (see [RFC3027]).  Applications that suffer from this problem\n   include\
    \ Voice Over IP and Multimedia Over IP (e.g., SIP [RFC3261] and\n   H.323 [ITU.H323]),\
    \ as well as online gaming.\n   Many techniques are used to attempt to make realtime\
    \ multimedia\n   applications, online games, and other applications work across\
    \ NATs.\n   Application Level Gateways [RFC2663] are one such mechanism.  STUN\n\
    \   [RFC3489bis] describes a UNilateral Self-Address Fixing (UNSAF)\n   mechanism\
    \ [RFC3424].  Teredo [RFC4380] describes an UNSAF mechanism\n   consisting of\
    \ tunnelling IPv6 [RFC2460] over UDP/IPv4.  UDP Relays\n   have also been used\
    \ to enable applications across NATs, but these are\n   generally seen as a solution\
    \ of last resort.  Interactive\n   Connectivity Establishment [ICE] describes\
    \ a methodology for using\n   many of these techniques and avoiding a UDP relay,\
    \ unless the type of\n   NAT is such that it forces the use of such a UDP relay.\
    \  This\n   specification defines requirements for improving NATs.  Meeting these\n\
    \   requirements ensures that applications will not be forced to use UDP\n   relay.\n\
    \   As pointed out in UNSAF [RFC3424], \"From observations of deployed\n   networks,\
    \ it is clear that different NAT box implementations vary\n   widely in terms\
    \ of how they handle different traffic and addressing\n   cases\".  This wide\
    \ degree of variability is one factor in the overall\n   brittleness introduced\
    \ by NATs and makes it extremely difficult to\n   predict how any given protocol\
    \ will behave on a network traversing\n   NAT.  Discussions with many of the major\
    \ NAT vendors have made it\n   clear that they would prefer to deploy NATs that\
    \ were deterministic\n   and caused the least harm to applications while still\
    \ meeting the\n   requirements that caused their customers to deploy NATs in the\
    \ first\n   place.  The problem NAT vendors face is that they are not sure how\n\
    \   best to do that or how to document their NATs' behavior.\n   The goals of\
    \ this document are to define a set of common terminology\n   for describing the\
    \ behavior of NATs and to produce a set of\n   requirements on a specific set\
    \ of behaviors for NATs.\n   This document forms a common set of requirements\
    \ that are simple and\n   useful for voice, video, and games, which can be implemented\
    \ by NAT\n   vendors.  This document will simplify the analysis of protocols for\n\
    \   deciding whether or not they work in this environment and will allow\n   providers\
    \ of services that have NAT traversal issues to make\n   statements about where\
    \ their applications will work and where they\n   will not, as well as to specify\
    \ their own NAT requirements.\n"
- title: 3.  Terminology
  contents:
  - "3.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n\
    \   Readers are urged to refer to [RFC2663] for information on NAT\n   taxonomy\
    \ and terminology.  Traditional NAT is the most common type of\n   NAT device\
    \ deployed.  Readers may refer to [RFC3022] for detailed\n   information on traditional\
    \ NAT.  Traditional NAT has two main\n   varieties -- Basic NAT and Network Address/Port\
    \ Translator (NAPT).\n   NAPT is by far the most commonly deployed NAT device.\
    \  NAPT allows\n   multiple internal hosts to share a single public IP address\n\
    \   simultaneously.  When an internal host opens an outgoing TCP or UDP\n   session\
    \ through a NAPT, the NAPT assigns the session a public IP\n   address and port\
    \ number, so that subsequent response packets from the\n   external endpoint can\
    \ be received by the NAPT, translated, and\n   forwarded to the internal host.\
    \  The effect is that the NAPT\n   establishes a NAT session to translate the\
    \ (private IP address,\n   private port number) tuple to a (public IP address,\
    \ public port\n   number) tuple, and vice versa, for the duration of the session.\
    \  An\n   issue of relevance to peer-to-peer applications is how the NAT\n   behaves\
    \ when an internal host initiates multiple simultaneous\n   sessions from a single\
    \ (private IP, private port) endpoint to\n   multiple distinct endpoints on the\
    \ external network.  In this\n   specification, the term \"NAT\" refers to both\
    \ \"Basic NAT\" and \"Network\n   Address/Port Translator (NAPT)\".\n   This document\
    \ uses the term \"session\" as defined in RFC 2663: \"TCP/\n   UDP sessions are\
    \ uniquely identified by the tuple of (source IP\n   address, source TCP/UDP ports,\
    \ target IP address, target TCP/UDP\n   Port)\".\n   This document uses the term\
    \ \"address and port mapping\" as the\n   translation between an external address\
    \ and port and an internal\n   address and port.  Note that this is not the same\
    \ as an \"address\n   binding\" as defined in RFC 2663.\n   This document uses\
    \ IANA terminology for port ranges, i.e., \"Well\n   Known Ports\" is 0-1023,\
    \ \"Registered\" is 1024-49151, and \"Dynamic\n   and/or Private\" is 49152-65535,\
    \ as defined in\n   http://www.iana.org/assignments/port-numbers.\n   STUN [RFC3489]\
    \ used the terms \"Full Cone\", \"Restricted Cone\", \"Port\n   Restricted Cone\"\
    , and \"Symmetric\" to refer to different variations of\n   NATs applicable to\
    \ UDP only.  Unfortunately, this terminology has\n   been the source of much confusion,\
    \ as it has proven inadequate at\n   describing real-life NAT behavior.  This\
    \ specification therefore\n   refers to specific individual NAT behaviors instead\
    \ of using the\n   Cone/Symmetric terminology.\n"
- title: 4.  Network Address and Port Translation Behavior
  contents:
  - "4.  Network Address and Port Translation Behavior\n   This section describes\
    \ the various NAT behaviors applicable to NATs.\n"
- title: 4.1.  Address and Port Mapping
  contents:
  - "4.1.  Address and Port Mapping\n   When an internal endpoint opens an outgoing\
    \ session through a NAT,\n   the NAT assigns the session an external IP address\
    \ and port number so\n   that subsequent response packets from the external endpoint\
    \ can be\n   received by the NAT, translated, and forwarded to the internal\n\
    \   endpoint.  This is a mapping between an internal IP address and port\n   IP:port\
    \ and external IP:port tuple.  It establishes the translation\n   that will be\
    \ performed by the NAT for the duration of the session.\n   For many applications,\
    \ it is important to distinguish the behavior of\n   the NAT when there are multiple\
    \ simultaneous sessions established to\n   different external endpoints.\n   The\
    \ key behavior to describe is the criteria for reuse of a mapping\n   for new\
    \ sessions to external endpoints, after establishing a first\n   mapping between\
    \ an internal X:x address and port and an external\n   Y1:y1 address tuple.  Let's\
    \ assume that the internal IP address and\n   port X:x are mapped to X1':x1' for\
    \ this first session.  The endpoint\n   then sends from X:x to an external address\
    \ Y2:y2 and gets a mapping\n   of X2':x2' on the NAT.  The relationship between\
    \ X1':x1' and X2':x2'\n   for various combinations of the relationship between\
    \ Y1:y1 and Y2:y2\n   is critical for describing the NAT behavior.  This arrangement\
    \ is\n   illustrated in the following diagram:\n                             \
    \         E\n   +------+                 +------+  x\n   |  Y1  |            \
    \     |  Y2  |  t\n   +--+---+                 +---+--+  e\n      | Y1:y1    \
    \        Y2:y2  |     r\n      +----------+   +----------+     n\n           \
    \      |   |                a\n         X1':x1' |   | X2':x2'        l\n     \
    \         +--+---+-+\n   ...........|   NAT  |...............\n              +--+---+-+\
    \              I\n                 |   |                n\n             X:x |\
    \   | X:x            t\n                ++---++               e\n            \
    \    |  X  |               r\n                +-----+               n\n      \
    \                                a\n                                      l\n\
    \                         Address and Port Mapping\n   The following address and\
    \ port mapping behavior are defined:\n      Endpoint-Independent Mapping:\n  \
    \       The NAT reuses the port mapping for subsequent packets sent\n        \
    \ from the same internal IP address and port (X:x) to any\n         external IP\
    \ address and port.  Specifically, X1':x1' equals\n         X2':x2' for all values\
    \ of Y2:y2.\n      Address-Dependent Mapping:\n         The NAT reuses the port\
    \ mapping for subsequent packets sent\n         from the same internal IP address\
    \ and port (X:x) to the same\n         external IP address, regardless of the\
    \ external port.\n         Specifically, X1':x1' equals X2':x2' if and only if,\
    \ Y2 equals\n         Y1.\n      Address and Port-Dependent Mapping:\n       \
    \  The NAT reuses the port mapping for subsequent packets sent\n         from\
    \ the same internal IP address and port (X:x) to the same\n         external IP\
    \ address and port while the mapping is still active.\n         Specifically,\
    \ X1':x1' equals X2':x2' if and only if, Y2:y2\n         equals Y1:y1.\n   It\
    \ is important to note that these three possible choices make no\n   difference\
    \ to the security properties of the NAT.  The security\n   properties are fully\
    \ determined by which packets the NAT allows in\n   and which it does not.  This\
    \ is determined by the filtering behavior\n   in the filtering portions of the\
    \ NAT.\n   REQ-1:  A NAT MUST have an \"Endpoint-Independent Mapping\" behavior.\n\
    \   Justification:  In order for UNSAF methods to work, REQ-1 needs to be\n  \
    \    met.  Failure to meet REQ-1 will force the use of a UDP relay,\n      which\
    \ is very often impractical.\n   Some NATs are capable of assigning IP addresses\
    \ from a pool of IP\n   addresses on the external side of the NAT, as opposed\
    \ to just a\n   single IP address.  This is especially common with larger NATs.\
    \  Some\n   NATs use the external IP address mapping in an arbitrary fashion\n\
    \   (i.e., randomly): one internal IP address could have multiple\n   external\
    \ IP address mappings active at the same time for different\n   sessions.  These\
    \ NATs have an \"IP address pooling\" behavior of\n   \"Arbitrary\".  Some large\
    \ Enterprise NATs use an IP address pooling\n   behavior of \"Arbitrary\" as a\
    \ means of hiding the IP address assigned\n   to specific endpoints by making\
    \ their assignment less predictable.\n   Other NATs use the same external IP address\
    \ mapping for all sessions\n   associated with the same internal IP address. \
    \ These NATs have an \"IP\n   address pooling\" behavior of \"Paired\".  NATs\
    \ that use an \"IP address\n   pooling\" behavior of \"Arbitrary\" can cause issues\
    \ for applications\n   that use multiple ports from the same endpoint, but that\
    \ do not\n   negotiate IP addresses individually (e.g., some applications using\n\
    \   RTP and RTCP).\n   REQ-2:  It is RECOMMENDED that a NAT have an \"IP address\
    \ pooling\"\n      behavior of \"Paired\".  Note that this requirement is not\n\
    \      applicable to NATs that do not support IP address pooling.\n   Justification:\
    \  This will allow applications that use multiple ports\n      originating from\
    \ the same internal IP address to also have the\n      same external IP address.\
    \  This is to avoid breaking peer-to-peer\n      applications that are not capable\
    \ of negotiating the IP address\n      for RTP and the IP address for RTCP separately.\
    \  As such it is\n      envisioned that this requirement will become less important\
    \ as\n      applications become NAT-friendlier with time.  The main reason why\n\
    \      this requirement is here is that in a peer-to-peer application,\n     \
    \ you are subject to the other peer's mistake.  In particular, in\n      the context\
    \ of SIP, if my application supports the extensions\n      defined in [RFC3605]\
    \ for indicating RTP and RTCP addresses and\n      ports separately, but the other\
    \ peer does not, there may still be\n      breakage in the form of the stream\
    \ losing RTCP packets.  This\n      requirement will avoid the loss of RTP in\
    \ this context, although\n      the loss of RTCP may be inevitable in this particular\
    \ example.  It\n      is also worth noting that RFC 3605 is unfortunately not\
    \ a\n      mandatory part of SIP [RFC3261].  Therefore, this requirement will\n\
    \      address a particularly nasty problem that will prevail for a\n      significant\
    \ period of time.\n"
- title: 4.2.  Port Assignment
  contents:
  - '4.2.  Port Assignment

    '
- title: 4.2.1.  Port Assignment Behavior
  contents:
  - "4.2.1.  Port Assignment Behavior\n   This section uses the following diagram\
    \ for reference.\n                                      E\n   +-------+      \
    \         +-------+  x\n   |  Y1   |               |  Y2   |  t\n   +---+---+\
    \               +---+---+  e\n       | Y1:y1          Y2:y2  |      r\n      \
    \ +---------+   +---------+      n\n                 |   |                a\n\
    \         X1':x1' |   | X2':x2'        l\n              +--+---+--+\n   ...........|\
    \   NAT   |...............\n              +--+---+--+             I\n        \
    \         |   |                n\n       +---------+   +---------+      t\n  \
    \     | X1:x1           X2:x2 |      e\n   +---+---+               +---+---+ \
    \ r\n   |  X1   |               |  X2   |  n\n   +-------+               +-------+\
    \  a\n                                      l\n                              Port\
    \ Assignment\n   Some NATs attempt to preserve the port number used internally\
    \ when\n   assigning a mapping to an external IP address and port (e.g., x1=x1',\n\
    \   x2=x2').  This port assignment behavior is referred to as \"port\n   preservation\"\
    .  In case of port collision, these NATs attempt a\n   variety of techniques for\
    \ coping.  For example, some NATs will\n   overridden the previous mapping to\
    \ preserve the same port.  Other\n   NATs will assign a different IP address from\
    \ a pool of external IP\n   addresses; this is only possible as long as the NAT\
    \ has enough\n   external IP addresses; if the port is already in use on all available\n\
    \   external IP addresses, then these NATs will pick a different port\n   (i.e.,\
    \ they don't do port preservation anymore).\n   Some NATs use \"Port overloading\"\
    , i.e., they always use port\n   preservation even in the case of collision (i.e.,\
    \ X1'=X2' and\n   x1=x2=x1'=x2').  Most applications will fail if the NAT uses\
    \ \"Port\n   overloading\".\n   A NAT that does not attempt to make the external\
    \ port numbers match\n   the internal port numbers in any case is referred to\
    \ as \"no port\n   preservation\".\n   When NATs do allocate a new source port,\
    \ there is the issue of which\n   IANA-defined range of port to choose.  The ranges\
    \ are \"well-known\"\n   from 0 to 1023, \"registered\" from 1024 to 49151, and\
    \ \"dynamic/\n   private\" from 49152 through 65535.  For most protocols, these\
    \ are\n   destination ports and not source ports, so mapping a source port to\
    \ a\n   source port that is already registered is unlikely to have any bad\n \
    \  effects.  Some NATs may choose to use only the ports in the dynamic\n   range;\
    \ the only downside of this practice is that it limits the\n   number of ports\
    \ available.  Other NAT devices may use everything but\n   the well-known range\
    \ and may prefer to use the dynamic range first,\n   or possibly avoid the actual\
    \ registered ports in the registered\n   range.  Other NATs preserve the port\
    \ range if it is in the well-known\n   range.  [RFC0768] specifies that the source\
    \ port is set to zero if no\n   reply packets are expected.  In this case, it\
    \ does not matter what\n   the NAT maps it to, as the source port will not be\
    \ used.  However,\n   many common OS APIs do not allow a user to send from port\
    \ zero,\n   applications do not use port zero, and the behavior of various\n \
    \  existing NATs with regards to a packet with a source of port zero is\n   unknown.\
    \  This document does not specify any normative behavior for a\n   NAT when handling\
    \ a packet with a source port of zero which means\n   that applications cannot\
    \ count on any sort of deterministic behavior\n   for these packets.\n   REQ-3:\
    \  A NAT MUST NOT have a \"Port assignment\" behavior of \"Port\n      overloading\"\
    .\n      a) If the host's source port was in the range 0-1023, it is\n       \
    \  RECOMMENDED the NAT's source port be in the same range.  If the\n         host's\
    \ source port was in the range 1024-65535, it is\n         RECOMMENDED that the\
    \ NAT's source port be in that range.\n   Justification:  This requirement must\
    \ be met in order to enable two\n      applications on the internal side of the\
    \ NAT both to use the same\n      port to try to communicate with the same destination.\
    \  NATs that\n      implement port preservation have to deal with conflicts on\
    \ ports,\n      and the multiple code paths this introduces often result in\n\
    \      nondeterministic behavior.  However, it should be understood that\n   \
    \   when a port is randomly assigned, it may just randomly happen to\n      be\
    \ assigned the same port.  Applications must, therefore, be able\n      to deal\
    \ with both port preservation and no port preservation.\n      a) Certain applications\
    \ expect the source UDP port to be in the\n         well-known range.  See the\
    \ discussion of Network File System\n         port expectations in [RFC2623] for\
    \ an example.\n"
- title: 4.2.2.  Port Parity
  contents:
  - "4.2.2.  Port Parity\n   Some NATs preserve the parity of the UDP port, i.e.,\
    \ an even port\n   will be mapped to an even port, and an odd port will be mapped\
    \ to an\n   odd port.  This behavior respects the [RFC3550] rule that RTP use\n\
    \   even ports, and RTCP use odd ports.  RFC 3550 allows any port numbers\n  \
    \ to be used for RTP and RTCP if the two numbers are specified\n   separately;\
    \ for example, using [RFC3605].  However, some\n   implementations do not include\
    \ RFC 3605, and do not recognize when\n   the peer has specified the RTCP port\
    \ separately using RFC 3605.  If\n   such an implementation receives an odd RTP\
    \ port number from the peer\n   (perhaps after having been translated by a NAT),\
    \ and then follows the\n   RFC 3550 rule to change the RTP port to the next lower\
    \ even number,\n   this would obviously result in the loss of RTP.  NAT-friendly\n\
    \   application aspects are outside the scope of this document.  It is\n   expected\
    \ that this issue will fade away with time, as implementations\n   improve.  Preserving\
    \ the port parity allows for supporting\n   communication with peers that do not\
    \ support explicit specification\n   of both RTP and RTCP port numbers.\n   REQ-4:\
    \  It is RECOMMENDED that a NAT have a \"Port parity\n      preservation\" behavior\
    \ of \"Yes\".\n   Justification:  This is to avoid breaking peer-to-peer applications\n\
    \      that do not explicitly and separately specify RTP and RTCP port\n     \
    \ numbers and that follow the RFC 3550 rule to decrement an odd RTP\n      port\
    \ to make it even.  The same considerations apply, as per the\n      IP address\
    \ pooling requirement.\n"
- title: 4.2.3.  Port Contiguity
  contents:
  - "4.2.3.  Port Contiguity\n   Some NATs attempt to preserve the port contiguity\
    \ rule of RTCP=RTP+1.\n   These NATs do things like sequential assignment or port\
    \ reservation.\n   Sequential port assignment assumes that the application will\
    \ open a\n   mapping for RTP first and then open a mapping for RTCP.  It is not\n\
    \   practical to enforce this requirement on all applications.\n   Furthermore,\
    \ there is a problem with glare if many applications (or\n   endpoints) are trying\
    \ to open mappings simultaneously.  Port\n   preservation is also problematic\
    \ since it is wasteful, especially\n   considering that a NAT cannot reliably\
    \ distinguish between RTP over\n   UDP and other UDP packets where there is no\
    \ contiguity rule.  For\n   those reasons, it would be too complex to attempt\
    \ to preserve the\n   contiguity rule by suggesting specific NAT behavior, and\
    \ it would\n   certainly break the deterministic behavior rule.\n   In order to\
    \ support both RTP and RTCP, it will therefore be necessary\n   that applications\
    \ follow rules to negotiate RTP and RTCP separately,\n   and account for the very\
    \ real possibility that the RTCP=RTP+1 rule\n   will be broken.  As this is an\
    \ application requirement, it is outside\n   the scope of this document.\n"
- title: 4.3.  Mapping Refresh
  contents:
  - "4.3.  Mapping Refresh\n   NAT mapping timeout implementations vary, but include\
    \ the timer's\n   value and the way the mapping timer is refreshed to keep the\
    \ mapping\n   alive.\n   The mapping timer is defined as the time a mapping will\
    \ stay active\n   without packets traversing the NAT.  There is great variation\
    \ in the\n   values used by different NATs.\n   REQ-5:  A NAT UDP mapping timer\
    \ MUST NOT expire in less than two\n      minutes, unless REQ-5a applies.\n  \
    \    a) For specific destination ports in the well-known port range\n        \
    \ (ports 0-1023), a NAT MAY have shorter UDP mapping timers that\n         are\
    \ specific to the IANA-registered application running over\n         that specific\
    \ destination port.\n      b) The value of the NAT UDP mapping timer MAY be configurable.\n\
    \      c) A default value of five minutes or more for the NAT UDP mapping\n  \
    \       timer is RECOMMENDED.\n   Justification:  This requirement is to ensure\
    \ that the timeout is\n      long enough to avoid too-frequent timer refresh packets.\n\
    \      a) Some UDP protocols using UDP use very short-lived connections.\n   \
    \      There can be very many such connections; keeping them all in a\n      \
    \   connections table could cause considerable load on the NAT.\n         Having\
    \ shorter timers for these specific applications is,\n         therefore, an optimization\
    \ technique.  It is important that the\n         shorter timers applied to specific\
    \ protocols be used sparingly,\n         and only for protocols using well-known\
    \ destination ports that\n         are known to have a shorter timer, and that\
    \ are known not to be\n         used by any applications for other purposes.\n\
    \      b) Configuration is desirable for adapting to specific networks\n     \
    \    and troubleshooting.\n      c) This default is to avoid too-frequent timer\
    \ refresh packets.\n   Some NATs keep the mapping active (i.e., refresh the timer\
    \ value)\n   when a packet goes from the internal side of the NAT to the external\n\
    \   side of the NAT.  This is referred to as having a NAT Outbound\n   refresh\
    \ behavior of \"True\".\n   Some NATs keep the mapping active when a packet goes\
    \ from the\n   external side of the NAT to the internal side of the NAT.  This\
    \ is\n   referred to as having a NAT Inbound Refresh Behavior of \"True\".\n \
    \  Some NATs keep the mapping active on both, in which case, both\n   properties\
    \ are \"True\".\n   REQ-6:  The NAT mapping Refresh Direction MUST have a \"NAT\
    \ Outbound\n      refresh behavior\" of \"True\".\n      a) The NAT mapping Refresh\
    \ Direction MAY have a \"NAT Inbound\n         refresh behavior\" of \"True\"\
    .\n   Justification:  Outbound refresh is necessary for allowing the client\n\
    \      to keep the mapping alive.\n      a) Inbound refresh may be useful for\
    \ applications with no outgoing\n         UDP traffic.  However, allowing inbound\
    \ refresh may allow an\n         external attacker or misbehaving application\
    \ to keep a mapping\n         alive indefinitely.  This may be a security risk.\
    \  Also, if the\n         process is repeated with different ports, over time,\
    \ it could\n         use up all the ports on the NAT.\n"
- title: 4.4.  Conflicting Internal and External IP Address Spaces
  contents:
  - "4.4.  Conflicting Internal and External IP Address Spaces\n   Many NATs, particularly\
    \ consumer-level devices designed to be\n   deployed by nontechnical users, routinely\
    \ obtain their external IP\n   address, default router, and other IP configuration\
    \ information for\n   their external interface dynamically from an external network,\
    \ such\n   as an upstream ISP.  The NAT, in turn, automatically sets up its own\n\
    \   internal subnet in one of the private IP address spaces assigned to\n   this\
    \ purpose in [RFC1918], typically providing dynamic IP\n   configuration services\
    \ for hosts on this internal network.\n   Auto-configuration of NATs and private\
    \ networks can be problematic,\n   however, if the NAT's external network is also\
    \ in RFC 1918 private\n   address space.  In a common scenario, an ISP places\
    \ its customers\n   behind a NAT and hands out private RFC 1918 addresses to them.\
    \  Some\n   of these customers, in turn, deploy consumer-level NATs, which, in\n\
    \   effect, act as \"second-level\" NATs, multiplexing their own private\n   RFC\
    \ 1918 IP subnets onto the single RFC 1918 IP address provided by\n   the ISP.\
    \  There is no inherent guarantee, in this case, that the\n   ISP's \"intermediate\"\
    \ privately-addressed network and the customer's\n   internal privately-addressed\
    \ network will not use numerically\n   identical or overlapping RFC 1918 IP subnets.\
    \  Furthermore, customers\n   of consumer-level NATs cannot be expected to have\
    \ the technical\n   knowledge to prevent this scenario from occurring by manually\n\
    \   configuring their internal network with non-conflicting RFC 1918\n   subnets.\n\
    \   NAT vendors need to design their NATs to ensure that they function\n   correctly\
    \ and robustly even in such problematic scenarios.  One\n   possible solution\
    \ is for the NAT to ensure that whenever its external\n   link is configured with\
    \ an RFC 1918 private IP address, the NAT\n   automatically selects a different,\
    \ non-conflicting RFC 1918 IP subnet\n   for its internal network.  A disadvantage\
    \ of this solution is that,\n   if the NAT's external interface is dynamically\
    \ configured or re-\n   configured after its internal network is already in use,\
    \ then the NAT\n   may have to renumber its entire internal network dynamically\
    \ if it\n   detects a conflict.\n   An alternative solution is for the NAT to\
    \ be designed so that it can\n   translate and forward traffic correctly, even\
    \ when its external and\n   internal interfaces are configured with numerically\
    \ overlapping IP\n   subnets.  In this scenario, for example, if the NAT's external\n\
    \   interface has been assigned an IP address P in RFC 1918 space, then\n   there\
    \ might also be an internal node I having the same RFC 1918\n   private IP address\
    \ P.  An IP packet with destination address P on the\n   external network is directed\
    \ at the NAT, whereas an IP packet with\n   the same destination address P on\
    \ the internal network is directed at\n   node I.  The NAT therefore needs to\
    \ maintain a clear operational\n   distinction between \"external IP addresses\"\
    \ and \"internal IP\n   addresses\" to avoid confusing internal node I with its\
    \ own external\n   interface.  In general, the NAT needs to allow all internal\
    \ nodes\n   (including I) to communicate with all external nodes having public\n\
    \   (non-RFC 1918) IP addresses, or having private IP addresses that do\n   not\
    \ conflict with the addresses used by its internal network.\n   REQ-7:  A NAT\
    \ device whose external IP interface can be configured\n      dynamically MUST\
    \ either (1) automatically ensure that its internal\n      network uses IP addresses\
    \ that do not conflict with its external\n      network, or (2) be able to translate\
    \ and forward traffic between\n      all internal nodes and all external nodes\
    \ whose IP addresses\n      numerically conflict with the internal network.\n\
    \   Justification:  If a NAT's external and internal interfaces are\n      configured\
    \ with overlapping IP subnets, then there is, of course,\n      no way for an\
    \ internal host with RFC 1918 IP address Q to initiate\n      a direct communication\
    \ session to an external node having the same\n      RFC 1918 address Q, or to\
    \ other external nodes with IP addresses\n      that numerically conflict with\
    \ the internal subnet.  Such nodes\n      can still open communication sessions\
    \ indirectly via NAT traversal\n      techniques, however, with the help of a\
    \ third-party server, such\n      as a STUN server having a public, non-RFC 1918\
    \ IP address.  In\n      this case, nodes with conflicting private RFC 1918 addresses\
    \ on\n      opposite sides of the second-level NAT can communicate with each\n\
    \      other via their respective temporary public endpoints on the main\n   \
    \   Internet, as long as their common, first-level NAT (e.g., the\n      upstream\
    \ ISP's NAT) supports hairpinning behavior, as described in\n      Section 6.\n"
- title: 5.  Filtering Behavior
  contents:
  - "5.  Filtering Behavior\n   This section describes various filtering behaviors\
    \ observed in NATs.\n   When an internal endpoint opens an outgoing session through\
    \ a NAT,\n   the NAT assigns a filtering rule for the mapping between an internal\n\
    \   IP:port (X:x) and external IP:port (Y:y) tuple.\n   The key behavior to describe\
    \ is what criteria are used by the NAT to\n   filter packets originating from\
    \ specific external endpoints.\n      Endpoint-Independent Filtering:\n      \
    \   The NAT filters out only packets not destined to the internal\n         address\
    \ and port X:x, regardless of the external IP address and\n         port source\
    \ (Z:z).  The NAT forwards any packets destined to\n         X:x.  In other words,\
    \ sending packets from the internal side of\n         the NAT to any external\
    \ IP address is sufficient to allow any\n         packets back to the internal\
    \ endpoint.\n      Address-Dependent Filtering:\n         The NAT filters out\
    \ packets not destined to the internal\n         address X:x.  Additionally, the\
    \ NAT will filter out packets\n         from Y:y destined for the internal endpoint\
    \ X:x if X:x has not\n         sent packets to Y:any previously (independently\
    \ of the port\n         used by Y).  In other words, for receiving packets from\
    \ a\n         specific external endpoint, it is necessary for the internal\n \
    \        endpoint to send packets first to that specific external\n         endpoint's\
    \ IP address.\n      Address and Port-Dependent Filtering:\n         This is similar\
    \ to the previous behavior, except that the\n         external port is also relevant.\
    \  The NAT filters out packets\n         not destined for the internal address\
    \ X:x.  Additionally, the\n         NAT will filter out packets from Y:y destined\
    \ for the internal\n         endpoint X:x if X:x has not sent packets to Y:y previously.\
    \  In\n         other words, for receiving packets from a specific external\n\
    \         endpoint, it is necessary for the internal endpoint to send\n      \
    \   packets first to that external endpoint's IP address and port.\n   REQ-8:\
    \  If application transparency is most important, it is\n      RECOMMENDED that\
    \ a NAT have an \"Endpoint-Independent Filtering\"\n      behavior.  If a more\
    \ stringent filtering behavior is most\n      important, it is RECOMMENDED that\
    \ a NAT have an \"Address-Dependent\n      Filtering\" behavior.\n      a) The\
    \ filtering behavior MAY be an option configurable by the\n         administrator\
    \ of the NAT.\n   Justification:  The recommendation to use Endpoint-Independent\n\
    \      Filtering is aimed at maximizing application transparency; in\n      particular,\
    \ for applications that receive media simultaneously\n      from multiple locations\
    \ (e.g., gaming), or applications that use\n      rendezvous techniques.  However,\
    \ it is also possible that, in some\n      circumstances, it may be preferable\
    \ to have a more stringent\n      filtering behavior.  Filtering independently\
    \ of the external\n      endpoint is not as secure: An unauthorized packet could\
    \ get\n      through a specific port while the port was kept open if it was\n\
    \      lucky enough to find the port open.  In theory, filtering based on\n  \
    \    both IP address and port is more secure than filtering based only\n     \
    \ on the IP address (because the external endpoint could, in\n      reality, be\
    \ two endpoints behind another NAT, where one of the two\n      endpoints is an\
    \ attacker).  However, such a policy could interfere\n      with applications\
    \ that expect to receive UDP packets on more than\n      one UDP port.  Using\
    \ Endpoint-Independent Filtering or Address-\n      Dependent Filtering instead\
    \ of Address and Port-Dependent\n      Filtering on a NAT (say, NAT-A) also has\
    \ benefits when the other\n      endpoint is behind a non-BEHAVE compliant NAT\
    \ (say, NAT-B) that\n      does not support REQ-1.  When the endpoints use ICE,\
    \ if NAT-A uses\n      Address and Port-Dependent Filtering, connectivity will\
    \ require a\n      UDP relay.  However, if NAT-A uses Endpoint-Independent Filtering\n\
    \      or Address-Dependent Filtering, ICE will ultimately find\n      connectivity\
    \ without requiring a UDP relay.  Having the filtering\n      behavior being an\
    \ option configurable by the administrator of the\n      NAT ensures that a NAT\
    \ can be used in the widest variety of\n      deployment scenarios.\n"
- title: 6.  Hairpinning Behavior
  contents:
  - "6.  Hairpinning Behavior\n   If two hosts (called X1 and X2) are behind the same\
    \ NAT and\n   exchanging traffic, the NAT may allocate an address on the outside\
    \ of\n   the NAT for X2, called X2':x2'.  If X1 sends traffic to X2':x2', it\n\
    \   goes to the NAT, which must relay the traffic from X1 to X2.  This is\n  \
    \ referred to as hairpinning and is illustrated below.\n     NAT\n   +----+ from\
    \ X1:x1 to X2':x2'   +-----+ X1':x1'\n   | X1 |>>>>>>>>>>>>>>>>>>>>>>>>>>>>>--+---\n\
    \   +----+                         |  v  |\n                                 \
    \ |  v  |\n                                  |  v  |\n                       \
    \           |  v  |\n   +----+ from X1':x1' to X2:x2   |  v  | X2':x2'\n   | X2\
    \ |<<<<<<<<<<<<<<<<<<<<<<<<<<<<<--+---\n   +----+                         +-----+\n\
    \                           Hairpinning Behavior\n   Hairpinning allows two endpoints\
    \ on the internal side of the NAT to\n   communicate even if they only use each\
    \ other's external IP addresses\n   and ports.\n   More formally, a NAT that supports\
    \ hairpinning forwards packets\n   originating from an internal address, X1:x1,\
    \ destined for an external\n   address X2':x2' that has an active mapping to an\
    \ internal address\n   X2:x2, back to that internal address, X2:x2.  Note that\
    \ typically X1'\n   is the same as X2'.\n   Furthermore, the NAT may present the\
    \ hairpinned packet with either an\n   internal (X1:x1) or an external (X1':x1')\
    \ source IP address and port.\n   Therefore, the hairpinning NAT behavior can\
    \ be either \"External\n   source IP address and port\" or \"Internal source IP\
    \ address and port\".\n   \"Internal source IP address and port\" may cause problems\
    \ by confusing\n   implementations that expect an external IP address and port.\n\
    \   REQ-9:  A NAT MUST support \"Hairpinning\".\n      a) A NAT Hairpinning behavior\
    \ MUST be \"External source IP address\n         and port\".\n   Justification:\
    \  This requirement is to allow communications between\n      two endpoints behind\
    \ the same NAT when they are trying each\n      other's external IP addresses.\n\
    \      a) Using the external source IP address is necessary for\n         applications\
    \ with a restrictive policy of not accepting packets\n         from IP addresses\
    \ that differ from what is expected.\n"
- title: 7.  Application Level Gateways
  contents:
  - "7.  Application Level Gateways\n   Certain NATs have implemented Application\
    \ Level Gateways (ALGs) for\n   various protocols, including protocols for negotiating\
    \ peer-to-peer\n   sessions, such as SIP.\n   Certain NATs have these ALGs turned\
    \ on permanently, others have them\n   turned on by default but allow them to\
    \ be turned off, and others have\n   them turned off by default but allow them\
    \ be turned on.\n   NAT ALGs may interfere with UNSAF methods or protocols that\
    \ try to be\n   NAT-aware and therefore must be used with extreme caution.\n \
    \  REQ-10:  To eliminate interference with UNSAF NAT traversal\n      mechanisms\
    \ and allow integrity protection of UDP communications,\n      NAT ALGs for UDP-based\
    \ protocols SHOULD be turned off.  Future\n      standards track specifications\
    \ that define ALGs can update this to\n      recommend the defaults for the ALGs\
    \ that they define.\n      a) If a NAT includes ALGs, it is RECOMMENDED that the\
    \ NAT allow\n         the NAT administrator to enable or disable each ALG separately.\n\
    \   Justification:  NAT ALGs may interfere with UNSAF methods.\n      a) This\
    \ requirement allows the user to enable those ALGs that are\n         necessary\
    \ to aid in the operation of some applications without\n         enabling ALGs,\
    \ which interfere with the operation of other\n         applications.\n"
- title: 8.  Deterministic Properties
  contents:
  - "8.  Deterministic Properties\n   The classification of NATs is further complicated\
    \ by the fact that,\n   under some conditions, the same NAT will exhibit different\
    \ behaviors.\n   This has been seen on NATs that preserve ports or have specific\n\
    \   algorithms for selecting a port other than a free one.  If the\n   external\
    \ port that the NAT wishes to use is already in use by another\n   session, the\
    \ NAT must select a different port.  This results in\n   different code paths\
    \ for this conflict case, which results in\n   different behavior.\n   For example,\
    \ if three hosts X1, X2, and X3 all send from the same\n   port x, through a port\
    \ preserving NAT with only one external IP\n   address, called X1', the first\
    \ one to send (i.e., X1) will get an\n   external port of x, but the next two\
    \ will get x2' and x3' (where\n   these are not equal to x).  There are NATs where\
    \ the External NAT\n   mapping characteristics and the External Filter characteristics\n\
    \   change between the X1:x and the X2:x mapping.  To make matters worse,\n  \
    \ there are NATs where the behavior may be the same on the X1:x and\n   X2:x mappings,\
    \ but different on the third X3:x mapping.\n   Another example is that some NATs\
    \ have an \"Endpoint-Independent\n   Mapping\", combined with \"Port Overloading\"\
    , as long as two endpoints\n   are not establishing sessions to the same external\
    \ direction, but\n   then switch their behavior to \"Address and Port-Dependent\
    \ Mapping\"\n   without \"Port Preservation\" upon detection of these conflicting\n\
    \   sessions establishments.\n   Any NAT that changes the NAT Mapping or the Filtering\
    \ behavior\n   without configuration changes, at any point in time, under any\n\
    \   particular conditions, is referred to as a \"non-deterministic\" NAT.\n  \
    \ NATs that don't are called \"deterministic\".\n   Non-deterministic NATs generally\
    \ change behavior when a conflict of\n   some sort happens, i.e., when the port\
    \ that would normally be used is\n   already in use by another mapping.  The NAT\
    \ mapping and External\n   Filtering in the absence of conflict is referred to\
    \ as the Primary\n   behavior.  The behavior after the first conflict is referred\
    \ to as\n   Secondary and after the second conflict is referred to as Tertiary.\n\
    \   No NATs have been observed that change on further conflicts, but it\n   is\
    \ certainly possible that they exist.\n   REQ-11:  A NAT MUST have deterministic\
    \ behavior, i.e., it MUST NOT\n      change the NAT translation (Section 4) or\
    \ the Filtering\n      (Section 5) Behavior at any point in time, or under any\
    \ particular\n      conditions.\n   Justification:  Non-deterministic NATs are\
    \ very difficult to\n      troubleshoot because they require more intensive testing.\
    \  This\n      non-deterministic behavior is the root cause of much of the\n \
    \     uncertainty that NATs introduce about whether or not applications\n    \
    \  will work.\n"
- title: 9.  ICMP Destination Unreachable Behavior
  contents:
  - "9.  ICMP Destination Unreachable Behavior\n   When a NAT sends a packet toward\
    \ a host on the other side of the NAT,\n   an ICMP message may be sent in response\
    \ to that packet.  That ICMP\n   message may be sent by the destination host or\
    \ by any router along\n   the network path.  The NAT's default configuration SHOULD\
    \ NOT filter\n   ICMP messages based on their source IP address.  Such ICMP messages\n\
    \   SHOULD be rewritten by the NAT (specifically, the IP headers and the\n   ICMP\
    \ payload) and forwarded to the appropriate internal or external\n   host.  The\
    \ NAT needs to perform this function for as long as the UDP\n   mapping is active.\
    \  Receipt of any sort of ICMP message MUST NOT\n   destroy the NAT mapping. \
    \ A NAT that performs the functions described\n   in the paragraph above is referred\
    \ to as \"support ICMP Processing\".\n   There is no significant security advantage\
    \ to blocking ICMP\n   Destination Unreachable packets.  Additionally, blocking\
    \ ICMP\n   Destination Unreachable packets can interfere with application\n  \
    \ failover, UDP Path MTU Discovery (see [RFC1191] and [RFC1435]), and\n   traceroute.\
    \  Blocking any ICMP message is discouraged, and blocking\n   ICMP Destination\
    \ Unreachable is strongly discouraged.\n   REQ-12:  Receipt of any sort of ICMP\
    \ message MUST NOT terminate the\n      NAT mapping.\n      a) The NAT's default\
    \ configuration SHOULD NOT filter ICMP messages\n         based on their source\
    \ IP address.\n      b) It is RECOMMENDED that a NAT support ICMP Destination\n\
    \         Unreachable messages.\n   Justification:  This is easy to do and is\
    \ used for many things\n      including MTU discovery and rapid detection of error\
    \ conditions,\n      and has no negative consequences.\n"
- title: 10.  Fragmentation of Outgoing Packets
  contents:
  - "10.  Fragmentation of Outgoing Packets\n   When the MTU of the adjacent link\
    \ is too small, fragmentation of\n   packets going from the internal side to the\
    \ external side of the NAT\n   may occur.  This can occur if the NAT is doing\
    \ Point-to-Point over\n   Ethernet (PPPoE), or if the NAT has been configured\
    \ with a small MTU\n   to reduce serialization delay when sending large packets\
    \ and small\n   higher-priority packets, or for other reasons.\n   It is worth\
    \ noting that many IP stacks do not use Path MTU Discovery\n   with UDP packets.\n\
    \   The packet could have its Don't Fragment bit set to 1 (DF=1) or 0\n   (DF=0).\n\
    \   REQ-13:  If the packet received on an internal IP address has DF=1,\n    \
    \  the NAT MUST send back an ICMP message \"Fragmentation needed and\n      DF\
    \ set\" to the host, as described in [RFC0792].\n      a) If the packet has DF=0,\
    \ the NAT MUST fragment the packet and\n         SHOULD send the fragments in\
    \ order.\n   Justification:  This is as per RFC 792.\n      a) This is the same\
    \ function a router performs in a similar\n         situation [RFC1812].\n"
- title: 11.  Receiving Fragmented Packets
  contents:
  - "11.  Receiving Fragmented Packets\n   For a variety of reasons, a NAT may receive\
    \ a fragmented packet.  The\n   IP packet containing the header could arrive in\
    \ any fragment,\n   depending on network conditions, packet ordering, and the\n\
    \   implementation of the IP stack that generated the fragments.\n   A NAT that\
    \ is capable only of receiving fragments in order (that is,\n   with the header\
    \ in the first packet) and forwarding each of the\n   fragments to the internal\
    \ host is described as \"Received Fragments\n   Ordered\".\n   A NAT that is capable\
    \ of receiving fragments in or out of order and\n   forwarding the individual\
    \ fragments (or a reassembled packet) to the\n   internal host is referred to\
    \ as \"Receive Fragments Out of Order\".\n   See the Security Considerations section\
    \ of this document for a\n   discussion of this behavior.\n   A NAT that is neither\
    \ of these is referred to as \"Receive Fragments\n   None\".\n   REQ-14:  A NAT\
    \ MUST support receiving in-order and out-of-order\n      fragments, so it MUST\
    \ have \"Received Fragment Out of Order\"\n      behavior.\n      a) A NAT's out-of-order\
    \ fragment processing mechanism MUST be\n         designed so that fragmentation-based\
    \ DoS attacks do not\n         compromise the NAT's ability to process in-order\
    \ and\n         unfragmented IP packets.\n   Justification:  See Security Considerations.\n"
- title: 12.  Requirements
  contents:
  - "12.  Requirements\n   The requirements in this section are aimed at minimizing\
    \ the\n   complications caused by NATs to applications, such as realtime\n   communications\
    \ and online gaming.  The requirements listed earlier in\n   the document are\
    \ consolidated here into a single section.\n   It should be understood, however,\
    \ that applications normally do not\n   know in advance if the NAT conforms to\
    \ the recommendations defined in\n   this section.  Peer-to-peer media applications\
    \ still need to use\n   normal procedures, such as ICE [ICE].\n   A NAT that supports\
    \ all the mandatory requirements of this\n   specification (i.e., the \"MUST\"\
    ), is \"compliant with this\n   specification\".  A NAT that supports all the\
    \ requirements of this\n   specification (i.e., including the \"RECOMMENDED\"\
    ) is \"fully compliant\n   with all the mandatory and recommended requirements\
    \ of this\n   specification\".\n   REQ-1:  A NAT MUST have an \"Endpoint-Independent\
    \ Mapping\" behavior.\n   REQ-2:  It is RECOMMENDED that a NAT have an \"IP address\
    \ pooling\"\n      behavior of \"Paired\".  Note that this requirement is not\n\
    \      applicable to NATs that do not support IP address pooling.\n   REQ-3: \
    \ A NAT MUST NOT have a \"Port assignment\" behavior of \"Port\n      overloading\"\
    .\n      a) If the host's source port was in the range 0-1023, it is\n       \
    \  RECOMMENDED the NAT's source port be in the same range.  If the\n         host's\
    \ source port was in the range 1024-65535, it is\n         RECOMMENDED that the\
    \ NAT's source port be in that range.\n   REQ-4:  It is RECOMMENDED that a NAT\
    \ have a \"Port parity\n      preservation\" behavior of \"Yes\".\n   REQ-5: \
    \ A NAT UDP mapping timer MUST NOT expire in less than two\n      minutes, unless\
    \ REQ-5a applies.\n      a) For specific destination ports in the well-known port\
    \ range\n         (ports 0-1023), a NAT MAY have shorter UDP mapping timers that\n\
    \         are specific to the IANA-registered application running over\n     \
    \    that specific destination port.\n      b) The value of the NAT UDP mapping\
    \ timer MAY be configurable.\n      c) A default value of five minutes or more\
    \ for the NAT UDP mapping\n         timer is RECOMMENDED.\n   REQ-6:  The NAT\
    \ mapping Refresh Direction MUST have a \"NAT Outbound\n      refresh behavior\"\
    \ of \"True\".\n      a) The NAT mapping Refresh Direction MAY have a \"NAT Inbound\n\
    \         refresh behavior\" of \"True\".\n   REQ-7  A NAT device whose external\
    \ IP interface can be configured\n      dynamically MUST either (1) Automatically\
    \ ensure that its internal\n      network uses IP addresses that do not conflict\
    \ with its external\n      network, or (2) Be able to translate and forward traffic\
    \ between\n      all internal nodes and all external nodes whose IP addresses\n\
    \      numerically conflict with the internal network.\n   REQ-8:  If application\
    \ transparency is most important, it is\n      RECOMMENDED that a NAT have \"\
    Endpoint-Independent Filtering\"\n      behavior.  If a more stringent filtering\
    \ behavior is most\n      important, it is RECOMMENDED that a NAT have \"Address-Dependent\n\
    \      Filtering\" behavior.\n      a) The filtering behavior MAY be an option\
    \ configurable by the\n         administrator of the NAT.\n   REQ-9:  A NAT MUST\
    \ support \"Hairpinning\".\n      a) A NAT Hairpinning behavior MUST be \"External\
    \ source IP address\n         and port\".\n   REQ-10:  To eliminate interference\
    \ with UNSAF NAT traversal\n      mechanisms and allow integrity protection of\
    \ UDP communications,\n      NAT ALGs for UDP-based protocols SHOULD be turned\
    \ off.  Future\n      standards track specifications that define an ALG can update\
    \ this\n      to recommend the ALGs on which they define default.\n      a) If\
    \ a NAT includes ALGs, it is RECOMMENDED that the NAT allow\n         the NAT\
    \ administrator to enable or disable each ALG separately.\n   REQ-11:  A NAT MUST\
    \ have deterministic behavior, i.e., it MUST NOT\n      change the NAT translation\
    \ (Section 4) or the Filtering\n      (Section 5) Behavior at any point in time,\
    \ or under any particular\n      conditions.\n   REQ-12:  Receipt of any sort\
    \ of ICMP message MUST NOT terminate the\n      NAT mapping.\n      a) The NAT's\
    \ default configuration SHOULD NOT filter ICMP messages\n         based on their\
    \ source IP address.\n      b) It is RECOMMENDED that a NAT support ICMP Destination\n\
    \         Unreachable messages.\n   REQ-13  If the packet received on an internal\
    \ IP address has DF=1,\n      the NAT MUST send back an ICMP message \"Fragmentation\
    \ needed and\n      DF set\" to the host, as described in [RFC0792].\n      a)\
    \ If the packet has DF=0, the NAT MUST fragment the packet and\n         SHOULD\
    \ send the fragments in order.\n   REQ-14:  A NAT MUST support receiving in-order\
    \ and out-of-order\n      fragments, so it MUST have \"Received Fragment Out of\
    \ Order\"\n      behavior.\n      a) A NAT's out-of-order fragment processing\
    \ mechanism MUST be\n         designed so that fragmentation-based DoS attacks\
    \ do not\n         compromise the NAT's ability to process in-order and\n    \
    \     unfragmented IP packets.\n"
- title: 13.  Security Considerations
  contents:
  - "13.  Security Considerations\n   NATs are often deployed to achieve security\
    \ goals.  Most of the\n   recommendations and requirements in this document do\
    \ not affect the\n   security properties of these devices, but a few of them do\
    \ have\n   security implications and are discussed in this section.\n   This document\
    \ recommends that the timers for mapping be refreshed on\n   outgoing packets\
    \ (see REQ-6) and does not make recommendations about\n   whether or not inbound\
    \ packets should update the timers.  If inbound\n   packets update the timers,\
    \ an external attacker can keep the mapping\n   alive forever and attack future\
    \ devices that may end up with the same\n   internal address.  A device that was\
    \ also the DHCP server for the\n   private address space could mitigate this by\
    \ cleaning any mappings\n   when a DHCP lease expired.  For unicast UDP traffic\
    \ (the scope of\n   this document), it may not seem relevant to support inbound\
    \ timer\n   refresh; however, for multicast UDP, the question is harder.  It is\n\
    \   expected that future documents discussing NAT behavior with multicast\n  \
    \ traffic will refine the requirements around handling of the inbound\n   refresh\
    \ timer.  Some devices today do update the timers on inbound\n   packets.\n  \
    \ This document recommends that the NAT filters be specific to the\n   external\
    \ IP address only (see REQ-8) and not to the external IP\n   address and UDP port.\
    \  It can be argued that this is less secure than\n   using the IP and port. \
    \ Devices that wish to filter on IP and port do\n   still comply with these requirements.\n\
    \   Non-deterministic NATs are risky from a security point of view.  They\n  \
    \ are very difficult to test because they are, well, non-deterministic.\n   Testing\
    \ by a person configuring one may result in the person thinking\n   it is behaving\
    \ as desired, yet under different conditions, which an\n   attacker can create,\
    \ the NAT may behave differently.  These\n   requirements recommend that devices\
    \ be deterministic.\n   This document requires that NATs have an \"external NAT\
    \ mapping is\n   endpoint independent\" behavior.  This does not reduce the security\
    \ of\n   devices.  Which packets are allowed to flow across the device is\n  \
    \ determined by the external filtering behavior, which is independent\n   of the\
    \ mapping behavior.\n   When a fragmented packet is received from the external\
    \ side, and the\n   packets are out of order so that the initial fragment does\
    \ not arrive\n   first, many systems simply discard the out-of-order packets.\n\
    \   Moreover, since some networks deliver small packets ahead of large\n   ones,\
    \ there can be many out-of-order fragments.  NATs that are\n   capable of delivering\
    \ these out-of-order packets are possible, but\n   they need to store the out-of-order\
    \ fragments, which can open up a\n   Denial-of-Service (DoS) opportunity, if done\
    \ incorrectly.\n   Fragmentation has been a tool used in many attacks, some involving\n\
    \   passing fragmented packets through NATs, and others involving DoS\n   attacks\
    \ based on the state needed to reassemble the fragments.  NAT\n   implementers\
    \ should be aware of [RFC3128] and [RFC1858].\n"
- title: 14.  IAB Considerations
  contents:
  - "14.  IAB Considerations\n   The IAB has studied the problem of \"Unilateral Self\
    \ Address Fixing\",\n   which is the general process by which a client attempts\
    \ to determine\n   its address in another realm on the other side of a NAT through\
    \ a\n   collaborative protocol reflection mechanism [RFC3424].\n   This specification\
    \ does not, in itself, constitute an UNSAF\n   application.  It consists of a\
    \ series of requirements for NATs aimed\n   at minimizing the negative impact\
    \ that those devices have on peer-to-\n   peer media applications, especially\
    \ when those applications are using\n   UNSAF methods.\n   Section 3 of UNSAF\
    \ lists several practical issues with solutions to\n   NAT problems.  This document\
    \ makes recommendations to reduce the\n   uncertainty and problems introduced\
    \ by these practical issues with\n   NATs.  In addition, UNSAF lists five architectural\
    \ considerations.\n   Although this is not an UNSAF proposal, it is interesting\
    \ to consider\n   the impact of this work on these architectural considerations.\n\
    \   Arch-1:  The scope of this is limited to UDP packets in NATs like the\n  \
    \          ones widely deployed today.  The \"fix\" helps constrain the\n    \
    \        variability of NATs for true UNSAF solutions such as STUN.\n   Arch-2:\
    \  This will exit at the same rate that NATs exit.  It does not\n            imply\
    \ any protocol machinery that would continue to live\n            after NATs were\
    \ gone, or make it more difficult to remove\n            them.\n   Arch-3:  This\
    \ does not reduce the overall brittleness of NATs, but\n            will hopefully\
    \ reduce some of the more outrageous NAT\n            behaviors and make it easer\
    \ to discuss and predict NAT\n            behavior in given situations.\n   Arch-4:\
    \  This work and the results [RESULTS] of various NATs\n            represent\
    \ the most comprehensive work at IETF on what the\n            real issues are\
    \ with NATs for applications like VoIP.  This\n            work and STUN have\
    \ pointed out, more than anything else, the\n            brittleness NATs introduce\
    \ and the difficulty of addressing\n            these issues.\n   Arch-5:  This\
    \ work and the test results [RESULTS] provide a reference\n            model for\
    \ what any UNSAF proposal might encounter in\n            deployed NATs.\n"
- title: 15.  Acknowledgments
  contents:
  - "15.  Acknowledgments\n   The editor would like to acknowledge Bryan Ford, Pyda\
    \ Srisuresh, and\n   Dan Kegel for their multiple contributions on peer-to-peer\n\
    \   communications across a NAT.  Dan Wing contributed substantial text\n   on\
    \ IP fragmentation and ICMP behavior.  Thanks to Rohan Mahy,\n   Jonathan Rosenberg,\
    \ Mary Barnes, Melinda Shore, Lyndsay Campbell,\n   Geoff Huston, Jiri Kuthan,\
    \ Harald Welte, Steve Casner, Robert\n   Sanders, Spencer Dawkins, Saikat Guha,\
    \ Christian Huitema, Yutaka\n   Takeda, Paul Hoffman, Lisa Dusseault, Pekka Savola,\
    \ Peter Koch, Jari\n   Arkko, and Alfred Hoenes for their contributions.\n"
- title: 16.  References
  contents:
  - '16.  References

    '
- title: 16.1.  Normative References
  contents:
  - "16.1.  Normative References\n   [RFC0768]     Postel, J., \"User Datagram Protocol\"\
    , STD 6, RFC 768,\n                 August 1980.\n   [RFC0791]     Postel, J.,\
    \ \"Internet Protocol\", STD 5, RFC 791,\n                 September 1981.\n \
    \  [RFC2119]     Bradner, S., \"Key words for use in RFCs to Indicate\n      \
    \           Requirement Levels\", BCP 14, RFC 2119, March 1997.\n"
- title: 16.2.  Informative References
  contents:
  - "16.2.  Informative References\n   [RFC0792]     Postel, J., \"Internet Control\
    \ Message Protocol\", STD 5,\n                 RFC 792, September 1981.\n   [RFC1191]\
    \     Mogul, J. and S. Deering, \"Path MTU discovery\",\n                 RFC\
    \ 1191, November 1990.\n   [RFC1435]     Knowles, S., \"IESG Advice from Experience\
    \ with Path MTU\n                 Discovery\", RFC 1435, March 1993.\n   [RFC1812]\
    \     Baker, F., \"Requirements for IP Version 4 Routers\",\n                \
    \ RFC 1812, June 1995.\n   [RFC1858]     Ziemba, G., Reed, D., and P. Traina,\
    \ \"Security\n                 Considerations for IP Fragment Filtering\", RFC\
    \ 1858,\n                 October 1995.\n   [RFC1918]     Rekhter, Y., Moskowitz,\
    \ R., Karrenberg, D., Groot, G.,\n                 and E. Lear, \"Address Allocation\
    \ for Private\n                 Internets\", BCP 5, RFC 1918, February 1996.\n\
    \   [RFC2460]     Deering, S. and R. Hinden, \"Internet Protocol, Version\n  \
    \               6 (IPv6) Specification\", RFC 2460, December 1998.\n   [RFC2623]\
    \     Eisler, M., \"NFS Version 2 and Version 3 Security\n                 Issues\
    \ and the NFS Protocol's Use of RPCSEC_GSS and\n                 Kerberos V5\"\
    , RFC 2623, June 1999.\n   [RFC2663]     Srisuresh, P. and M. Holdrege, \"IP Network\
    \ Address\n                 Translator (NAT) Terminology and Considerations\"\
    ,\n                 RFC 2663, August 1999.\n   [RFC3022]     Srisuresh, P. and\
    \ K. Egevang, \"Traditional IP Network\n                 Address Translator (Traditional\
    \ NAT)\", RFC 3022,\n                 January 2001.\n   [RFC3027]     Holdrege,\
    \ M. and P. Srisuresh, \"Protocol Complications\n                 with the IP\
    \ Network Address Translator\", RFC 3027,\n                 January 2001.\n  \
    \ [RFC3128]     Miller, I., \"Protection Against a Variant of the Tiny\n     \
    \            Fragment Attack (RFC 1858)\", RFC 3128, June 2001.\n   [RFC3261]\
    \     Rosenberg, J., Schulzrinne, H., Camarillo, G.,\n                 Johnston,\
    \ A., Peterson, J., Sparks, R., Handley, M.,\n                 and E. Schooler,\
    \ \"SIP: Session Initiation Protocol\",\n                 RFC 3261, June 2002.\n\
    \   [RFC3424]     Daigle, L. and IAB, \"IAB Considerations for UNilateral\n  \
    \               Self-Address Fixing (UNSAF) Across Network Address\n         \
    \        Translation\", RFC 3424, November 2002.\n   [RFC3489]     Rosenberg,\
    \ J., Weinberger, J., Huitema, C., and R.\n                 Mahy, \"STUN - Simple\
    \ Traversal of User Datagram\n                 Protocol (UDP) Through Network\
    \ Address Translators\n                 (NATs)\", RFC 3489, March 2003.\n   [RFC3550]\
    \     Schulzrinne, H., Casner, S., Frederick, R., and V.\n                 Jacobson,\
    \ \"RTP: A Transport Protocol for Real-Time\n                 Applications\",\
    \ STD 64, RFC 3550, July 2003.\n   [RFC3605]     Huitema, C., \"Real Time Control\
    \ Protocol (RTCP)\n                 attribute in Session Description Protocol\
    \ (SDP)\",\n                 RFC 3605, October 2003.\n   [RFC4380]     Huitema,\
    \ C., \"Teredo: Tunneling IPv6 over UDP through\n                 Network Address\
    \ Translations (NATs)\", RFC 4380,\n                 February 2006.\n   [RFC3489bis]\
    \  Rosenberg, J., \"Simple Traversal Underneath Network\n                 Address\
    \ Translators (NAT) (STUN)\", Work in Progress,\n                 October 2006.\n\
    \   [ICE]         Rosenberg, J., \"Interactive Connectivity Establishment\n  \
    \               (ICE): A Methodology for Network Address Translator\n        \
    \         (NAT) Traversal for Offer/Answer Protocols\", Work\n               \
    \  in Progress, October 2006.\n   [RESULTS]     Jennings, C., \"NAT Classification\
    \ Test Results\", Work\n                 in Progress, October 2006.\n   [TURN]\
    \        Rosenberg, J., \"Obtaining Relay Addresses from Simple\n            \
    \     Traversal Underneath NAT (STUN)\", Work in Progress,\n                 October\
    \ 2006.\n   [ITU.H323]    \"Packet-based Multimedia Communications Systems\",\
    \ ITU-\n                 T Recommendation H.323, July 2003.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Francois Audet (editor)\n   Nortel Networks\n   4655 Great\
    \ America Parkway\n   Santa Clara, CA  95054\n   US\n   Phone: +1 408 495 2456\n\
    \   EMail: audet@nortel.com\n   Cullen Jennings\n   Cisco Systems\n   170 West\
    \ Tasman Drive\n   MS: SJC-21/2\n   San Jose, CA  95134\n   US\n   Phone: +1 408\
    \ 902 3341\n   EMail: fluffy@cisco.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
