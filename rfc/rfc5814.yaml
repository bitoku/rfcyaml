- contents:
  - "   Label Switched Path (LSP) Dynamic Provisioning Performance Metrics\n                      in
    Generalized MPLS Networks\n"
  title: __initial_text__
- contents:
  - "Abstract\n   Generalized Multi-Protocol Label Switching (GMPLS) is one of the
    most\n   promising candidate technologies for a future data transmission\n   network.
    \ GMPLS has been developed to control and operate different\n   kinds of network
    elements, such as conventional routers, switches,\n   Dense Wavelength Division
    Multiplexing (DWDM) systems, Add-Drop\n   Multiplexers (ADMs), photonic cross-connects
    (PXCs), optical cross-\n   connects (OXCs), etc.  These physically diverse devices
    differ\n   drastically from one another in dynamic provisioning ability.  At the\n
    \  same time, the need for dynamically provisioned connections is\n   increasing
    because optical networks are being deployed in metro\n   areas.  As different
    applications have varied requirements in the\n   provisioning performance of optical
    networks, it is imperative to\n   define standardized metrics and procedures such
    that the performance\n   of networks and application needs can be mapped to each
    other.\n   This document provides a series of performance metrics to evaluate\n
    \  the dynamic Label Switched Path (LSP) provisioning performance in\n   GMPLS
    networks, specifically the dynamic LSP setup/release\n   performance.  These metrics
    can be used to characterize the features\n   of GMPLS networks in LSP dynamic
    provisioning.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5814.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n   This document may contain
    material from IETF Documents or IETF\n   Contributions published or made publicly
    available before November\n   10, 2008.  The person(s) controlling the copyright
    in some of this\n   material may not have granted the IETF Trust the right to
    allow\n   modifications of such material outside the IETF Standards Process.\n
    \  Without obtaining an adequate license from the person(s) controlling\n   the
    copyright in such materials, this document may not be modified\n   outside the
    IETF Standards Process, and derivative works of it may\n   not be created outside
    the IETF Standards Process, except to format\n   it for publication as an RFC
    or to translate it into languages other\n   than English.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................6\n
    \  2. Conventions Used in This Document ...............................6\n   3.
    Overview of Performance Metrics .................................6\n   4. A Singleton
    Definition for Single Unidirectional LSP\n      Setup Delay .....................................................7\n
    \     4.1. Motivation .................................................7\n      4.2.
    Metric Name ................................................7\n      4.3. Metric
    Parameters ..........................................8\n      4.4. Metric Units
    ...............................................8\n      4.5. Definition .................................................8\n
    \     4.6. Discussion .................................................8\n      4.7.
    Methodologies ..............................................9\n      4.8. Metric
    Reporting ...........................................9\n   5. A Singleton Definition
    for Multiple Unidirectional LSPs\n      Setup Delay ....................................................10\n
    \     5.1. Motivation ................................................10\n      5.2.
    Metric Name ...............................................10\n      5.3. Metric
    Parameters .........................................10\n      5.4. Metric Units
    ..............................................10\n      5.5. Definition ................................................11\n
    \     5.6. Discussion ................................................11\n      5.7.
    Methodologies .............................................12\n      5.8. Metric
    Reporting ..........................................13\n   6. A Singleton Definition
    for Single Bidirectional LSP\n      Setup Delay ....................................................13\n
    \     6.1. Motivation ................................................13\n      6.2.
    Metric Name ...............................................14\n      6.3. Metric
    Parameters .........................................14\n      6.4. Metric Units
    ..............................................14\n      6.5. Definition ................................................14\n
    \     6.6. Discussion ................................................15\n      6.7.
    Methodologies .............................................15\n      6.8. Metric
    Reporting ..........................................16\n   7. A Singleton Definition
    for Multiple Bidirectional LSPs\n      Setup Delay ....................................................16\n
    \     7.1. Motivation ................................................16\n      7.2.
    Metric Name ...............................................16\n      7.3. Metric
    Parameters .........................................17\n      7.4. Metric Units
    ..............................................17\n      7.5. Definition ................................................17\n
    \     7.6. Discussion ................................................18\n      7.7.
    Methodologies .............................................19\n      7.8. Metric
    Reporting ..........................................19\n   8. A Singleton Definition
    for LSP Graceful Release Delay ..........20\n      8.1. Motivation ................................................20\n
    \     8.2. Metric Name ...............................................20\n      8.3.
    Metric Parameters .........................................20\n      8.4. Metric
    Units ..............................................20\n      8.5. Definition
    ................................................20\n      8.6. Discussion ................................................22\n
    \     8.7. Methodologies .............................................22\n      8.8.
    Metric Reporting ..........................................23\n   9. A Definition
    for Samples of Single Unidirectional LSP\n      Setup Delay ....................................................24\n
    \     9.1. Metric Name ...............................................24\n      9.2.
    Metric Parameters .........................................24\n      9.3. Metric
    Units ..............................................24\n      9.4. Definition
    ................................................24\n      9.5. Discussion ................................................25\n
    \     9.6. Methodologies .............................................25\n      9.7.
    Typical Testing Cases .....................................26\n           9.7.1.
    With No LSP in the Network .........................26\n           9.7.2. With
    a Number of LSPs in the Network ...............26\n      9.8. Metric Reporting
    ..........................................26\n   10. A Definition for Samples
    of Multiple Unidirectional\n       LSPs Setup Delay ..............................................26\n
    \     10.1. Metric Name ..............................................27\n      10.2.
    Metric Parameters ........................................27\n      10.3. Metric
    Units .............................................27\n      10.4. Definition
    ...............................................27\n      10.5. Discussion ...............................................28\n
    \     10.6. Methodologies ............................................28\n      10.7.
    Typical Testing Cases ....................................29\n           10.7.1.
    With No LSP in the Network ........................29\n           10.7.2. With
    a Number of LSPs in the Network ..............29\n      10.8. Metric Reporting
    .........................................29\n   11. A Definition for Samples of
    Single Bidirectional LSP\n       Setup Delay ...................................................30\n
    \     11.1. Metric Name ..............................................30\n      11.2.
    Metric Parameters ........................................30\n      11.3. Metric
    Units .............................................30\n      11.4. Definition
    ...............................................30\n      11.5. Discussion ...............................................31\n
    \     11.6. Methodologies ............................................31\n      11.7.
    Typical Testing Cases ....................................32\n           11.7.1.
    With No LSP in the Network ........................32\n           11.7.2. With
    a Number of LSPs in the Network ..............32\n      11.8. Metric Reporting
    .........................................32\n   12. A Definition for Samples of
    Multiple Bidirectional\n       LSPs Setup Delay ..............................................32\n
    \     12.1. Metric Name ..............................................33\n      12.2.
    Metric Parameters ........................................33\n      12.3. Metric
    Units .............................................33\n      12.4. Definition
    ...............................................33\n      12.5. Discussion ...............................................34\n
    \     12.6. Methodologies ............................................34\n      12.7.
    Typical Testing Cases ....................................35\n           12.7.1.
    With No LSP in the Network ........................35\n           12.7.2. With
    a Number of LSPs in the Network ..............35\n      12.8. Metric Reporting
    .........................................35\n   13. A Definition for Samples of
    LSP Graceful Release Delay ........35\n      13.1. Metric Name ..............................................36\n
    \     13.2. Metric Parameters ........................................36\n      13.3.
    Metric Units .............................................36\n      13.4. Definition
    ...............................................36\n      13.5. Discussion ...............................................36\n
    \     13.6. Methodologies ............................................37\n      13.7.
    Metric Reporting .........................................37\n   14. Some Statistics
    Definitions for Metrics to Report .............37\n      14.1. The Minimum of
    Metric ....................................37\n      14.2. The Median of Metric
    .....................................37\n      14.3. The Maximum of Metric ....................................38\n
    \     14.4. The Percentile of Metric .................................38\n      14.5.
    Failure Statistics of Metric .............................38\n           14.5.1.
    Failure Count .....................................39\n           14.5.2. Failure
    Ratio .....................................39\n   15. Discussion ....................................................39\n
    \  16. Security Considerations .......................................40\n   17.
    Acknowledgments ...............................................41\n   18. References
    ....................................................41\n      18.1. Normative
    References .....................................41\n      18.2. Informative References
    ...................................42\n   Appendix A.  Authors' Addresses ...................................43\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Generalized Multi-Protocol Label Switching (GMPLS) is one
    of the most\n   promising control plane solutions for future transport and service\n
    \  network.  GMPLS has been developed to control and operate different\n   kinds
    of network elements, such as conventional routers, switches,\n   Dense Wavelength
    Division Multiplexing (DWDM) systems, Add-Drop\n   Multiplexors (ADMs), photonic
    cross-connects (PXCs), optical cross-\n   connects (OXCs), etc.  These physically
    diverse devices differ\n   drastically from one another in dynamic provisioning
    ability.\n   The introduction of a control plane into optical circuit switching\n
    \  networks provides the basis for automating the provisioning of\n   connections
    and drastically reduces connection provision delay.  As\n   more and more services
    and applications are seeking to use GMPLS-\n   controlled networks as their underlying
    transport network, and\n   increasingly in a dynamic way, the need is growing
    for measuring and\n   characterizing the performance of LSP provisioning in GMPLS
    networks,\n   such that requirement from applications and the provisioning\n   capability
    of the network can be mapped to each other.\n   This document defines performance
    metrics and methodologies that can\n   be used to characterize the dynamic LSP
    provisioning performance of\n   GMPLS networks, more specifically, performance
    of the signaling\n   protocol.  The metrics defined in this document can be used
    to\n   characterize the average performance of GMPLS implementations.\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\",
    \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
    \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described
    in [RFC2119].\n"
  title: 2.  Conventions Used in This Document
- contents:
  - "3.  Overview of Performance Metrics\n   In this memo, to characterize the dynamic
    LSP provisioning\n   performance of a GMPLS network, we define three performance
    metrics:\n   unidirectional LSP setup delay, bidirectional LSP setup delay, and\n
    \  LSP graceful release delay.  The latency of the LSP setup/release\n   signal
    is conceptually similar to the Round-trip Delay in IP\n   networks.  This enables
    us to refer to the structures and notions\n   introduced and discussed in the
    IP Performance Metrics (IPPM)\n   Framework documents, [RFC2330] [RFC2679] [RFC2681].
    \ The reader is\n   assumed to be familiar with the notions in those documents.\n
    \  Note that data-path-related metrics, for example, the time between\n   the
    reception of a Resv message by the ingress node and when the\n   forward data
    path becomes operational, are defined in another\n   document [CCAMP-DPM].  It
    is desirable that both measurements are\n   performed to complement each other.\n"
  title: 3.  Overview of Performance Metrics
- contents:
  - "4.  A Singleton Definition for Single Unidirectional LSP Setup Delay\n   This
    section defines a metric for single unidirectional Label\n   Switched Path setup
    delay across a GMPLS network.\n"
  - contents:
    - "4.1.  Motivation\n   Single unidirectional Label Switched Path setup delay
      is useful for\n   several reasons:\n   o  Single LSP setup delay is an important
      metric that characterizes\n      the provisioning performance of a GMPLS network.
      \ Longer LSP setup\n      delay will most likely incur higher overhead for the
      requesting\n      application, especially when the LSP duration itself is comparable\n
      \     to the LSP setup delay.\n   o  The minimum value of this metric provides
      an indication of the\n      delay that will likely be experienced when the LSP
      traverses the\n      shortest route at the lightest load in the control plane.
      \ As the\n      delay itself consists of several components, such as link\n
      \     propagation delay and nodal processing delay, this metric also\n      reflects
      the status of the control plane.  For example, for LSPs\n      traversing the
      same route, longer setup delays may suggest\n      congestion in the control
      channel or high control element load.\n      For this reason, this metric is
      useful for testing and diagnostic\n      purposes.\n   o  The observed variance
      in a sample of LSP setup delay metric values\n      variance may serve as an
      early indicator on the feasibility of\n      support of applications that have
      stringent setup delay\n      requirements.\n   The measurement of single unidirectional
      LSP setup delay instead of\n   bidirectional LSP setup delay is motivated by
      the following factors:\n   o  Some applications may use only unidirectional
      LSPs rather than\n      bidirectional ones.  For example, content delivery services
      with\n      multicasting may use only unidirectional LSPs.\n"
    title: 4.1.  Motivation
  - contents:
    - "4.2.  Metric Name\n   Single unidirectional LSP setup delay\n"
    title: 4.2.  Metric Name
  - contents:
    - "4.3.  Metric Parameters\n   o  ID0, the ingress Label Switching Router (LSR)
      ID\n   o  ID1, the egress LSR ID\n   o  T, a time when the setup is attempted\n"
    title: 4.3.  Metric Parameters
  - contents:
    - "4.4.  Metric Units\n   The value of single unidirectional LSP setup delay is
      either a real\n   number of milliseconds or undefined.\n"
    title: 4.4.  Metric Units
  - contents:
    - "4.5.  Definition\n   The single unidirectional LSP setup delay from ingress
      node ID0 to\n   egress node ID1 [RFC3945] at T is dT means that ingress node
      ID0\n   sends the first bit of a Path message packet to egress node ID1 at\n
      \  wire-time T, and that ingress node ID0 received the last bit of\n   responding
      Resv message packet from egress node ID1 at wire-time\n   T+dT.\n   The single
      unidirectional LSP setup delay from ingress node ID0 to\n   egress node ID1
      at T is undefined means that ingress node ID0 sends\n   the first bit of Path
      message packet to egress node ID1 at wire-time\n   T and that ingress node ID0
      does not receive the corresponding Resv\n   message within a reasonable period
      of time.\n   The undefined value of this metric indicates an event of Single\n
      \  Unidirectional LSP Setup Failure and would be used to report a count\n   or
      a percentage of Single Unidirectional LSP Setup failures.  See\n   Section 14.5
      for definitions of LSP setup/release failures.\n"
    title: 4.5.  Definition
  - contents:
    - "4.6.  Discussion\n   The following issues are likely to come up in practice:\n
      \  o  The accuracy of unidirectional LSP setup delay at time T depends\n      on
      the clock resolution in the ingress node; but synchronization\n      between
      the ingress node and egress node is not required since\n      unidirectional
      LSP setup uses two-way signaling.\n   o  A given methodology will have to include
      a way to determine\n      whether a latency value is infinite or whether it
      is merely very\n      large.  Simple upper bounds MAY be used, but GMPLS networks
      may\n      accommodate many kinds of devices.  For example, some photonic\n
      \     cross-connects (PXCs) have to move micro mirrors.  This physical\n      motion
      may take several milliseconds, but the common electronic\n      switches can
      finish the nodal processing within several\n      microseconds.  So the unidirectional
      LSP setup delay varies\n      drastically from one network to another.  In practice,
      the upper\n      bound SHOULD be chosen carefully.\n   o  If the ingress node
      sends out the Path message to set up an LSP,\n      but never receives the corresponding
      Resv message, the\n      unidirectional LSP setup delay MUST be set to undefined.\n
      \  o  If the ingress node sends out the Path message to set up an LSP\n      but
      receives a PathErr message, the unidirectional LSP setup delay\n      MUST be
      set to undefined.  There are many possible reasons for\n      this case; for
      example, the Path message has invalid parameters or\n      the network does
      not have enough resources to set up the requested\n      LSP, etc.\n"
    title: 4.6.  Discussion
  - contents:
    - "4.7.  Methodologies\n   Generally, the methodology would proceed as follows:\n
      \  o  Make sure that the network has enough resources to set up the\n      requested
      LSP.\n   o  At the ingress node, form the Path message according to the LSP\n
      \     requirements.  A timestamp (T1) may be stored locally on the\n      ingress
      node when the Path message packet is sent towards the\n      egress node.\n
      \  o  If the corresponding Resv message arrives within a reasonable\n      period
      of time, take the timestamp (T2) as soon as possible upon\n      receipt of
      the message.  By subtracting the two timestamps, an\n      estimate of unidirectional
      LSP setup delay (T2-T1) can be\n      computed.\n   o  If the corresponding
      Resv message fails to arrive within a\n      reasonable period of time, the
      unidirectional LSP setup delay is\n      deemed to be undefined.  Note that
      the \"reasonable\" threshold is a\n      parameter of the methodology.\n   o
      \ If the corresponding response is a PathErr message, the\n      unidirectional
      LSP setup delay is deemed to be undefined.\n"
    title: 4.7.  Methodologies
  - contents:
    - "4.8.  Metric Reporting\n   The metric result (either a real number or undefined)
      MUST be\n   reported together with the selected upper bound.  The route that
      the\n   LSP traverses MUST also be reported.  The route MAY be collected via\n
      \  use of the record route object, see [RFC3209], or via the management\n   plane.
      \ The collection of routes via the management plane is out of\n   scope of this
      document.\n"
    title: 4.8.  Metric Reporting
  title: 4.  A Singleton Definition for Single Unidirectional LSP Setup Delay
- contents:
  - "5.  A Singleton Definition for Multiple Unidirectional LSPs Setup Delay\n   This
    section defines a metric for multiple unidirectional Label\n   Switched Paths
    setup delay across a GMPLS network.\n"
  - contents:
    - "5.1.  Motivation\n   Multiple unidirectional Label Switched Paths setup delay
      is useful\n   for several reasons:\n   o  Carriers may require that a large
      number of LSPs be set up during\n      a short time period.  This request may
      arise, e.g., as a\n      consequence to interruptions on established LSPs or
      other network\n      failures.\n   o  The time needed to set up a large number
      of LSPs during a short\n      time period cannot be deduced from single LSP
      setup delay.\n"
    title: 5.1.  Motivation
  - contents:
    - "5.2.  Metric Name\n   Multiple unidirectional LSPs setup delay\n"
    title: 5.2.  Metric Name
  - contents:
    - "5.3.  Metric Parameters\n   o  ID0, the ingress LSR ID\n   o  ID1, the egress
      LSR ID\n   o  Lambda_m, a rate in reciprocal milliseconds\n   o  X, the number
      of LSPs to set up\n   o  T, a time when the first setup is attempted\n"
    title: 5.3.  Metric Parameters
  - contents:
    - "5.4.  Metric Units\n   The value of multiple unidirectional LSPs setup delay
      is either a\n   real number of milliseconds or undefined\n"
    title: 5.4.  Metric Units
  - contents:
    - "5.5.  Definition\n   Given Lambda_m and X, the multiple unidirectional LSPs
      setup delay\n   from the ingress node to the egress node [RFC3945] at T is dT
      means:\n   o  ingress node ID0 sends the first bit of the first Path message\n
      \     packet to egress node ID1 at wire-time T;\n   o  all subsequent (X-1)
      Path messages are sent according to the\n      specified Poisson process with
      arrival rate Lambda_m;\n   o  ingress node ID0 receives all corresponding Resv
      message packets\n      from egress node ID1; and\n   o  ingress node ID0 receives
      the last Resv message packet at wire-\n      time T+dT.\n   If the multiple
      unidirectional LSPs setup delay at T is \"undefined\",\n   this means that:\n
      \  o  ingress node ID0 sends all the Path messages toward egress node\n      ID1,\n
      \  o  the first bit of the first Path message packet is sent at wire-\n      time
      T, and\n   o  ingress node ID0 does not receive one or more of the corresponding\n
      \     Resv messages within a reasonable period of time.\n   The undefined value
      of this metric indicates an event of Multiple\n   Unidirectional LSP Setup Failure
      and would be used to report a count\n   or a percentage of Multiple Unidirectional
      LSP Setup failures.  See\n   Section 14.5 for definitions of LSP setup/release
      failures.\n"
    title: 5.5.  Definition
  - contents:
    - "5.6.  Discussion\n   The following issues are likely to come up in practice:\n
      \  o  The accuracy of multiple unidirectional LSPs setup delay at time T\n      depends
      on the clock resolution in the ingress node; but\n      synchronization between
      the ingress node and egress node is not\n      required since unidirectional
      LSP setup uses two-way signaling.\n   o  A given methodology will have to include
      a way to determine\n      whether a latency value is infinite or whether it
      is merely very\n      large.  Simple upper bounds MAY be used, but GMPLS networks
      may\n      accommodate many kinds of devices.  For example, some photonic\n
      \     cross-connects (PXCs) have to move micro mirrors.  This physical\n      motion
      may take several milliseconds, but electronic switches can\n      finish the
      nodal processing within several microseconds.  So the\n      multiple unidirectional
      LSP setup delay varies drastically from\n      one network to another.  In practice,
      the upper bound SHOULD be\n      chosen carefully.\n   o  If the ingress node
      sends out the multiple Path messages to set up\n      the LSPs, but never receives
      one or more of the corresponding Resv\n      messages, multiple unidirectional
      LSP setup delay MUST be set to\n      undefined.\n   o  If the ingress node
      sends out the Path messages to set up the LSPs\n      but receives one or more
      PathErr messages, multiple unidirectional\n      LSPs setup delay MUST be set
      to undefined.  There are many\n      possible reasons for this case.  For example,
      one of the Path\n      messages has invalid parameters or the network does not
      have\n      enough resources to set up the requested LSPs, etc.\n   o  The arrival
      rate of the Poisson process Lambda_m SHOULD be chosen\n      carefully such
      that on the one hand, the control plane is not\n      overburdened.  On the
      other hand, the arrival rate is large enough\n      to meet the requirements
      of applications or services.\n   o  It is important that all the LSPs MUST traverse
      the same route.\n      If there are multiple routes between the ingress node
      ID0 and\n      egress node ID1, Explicit Route Objects (EROs), or an alternate\n
      \     method, e.g., static configuration, MUST be used to ensure that\n      all
      LSPs traverse the same route.\n"
    title: 5.6.  Discussion
  - contents:
    - "5.7.  Methodologies\n   Generally, the methodology would proceed as follows:\n
      \  o  Make sure that the network has enough resources to set up the\n      requested
      LSPs.\n   o  At the ingress node, form the Path messages according to the LSPs'\n
      \     requirements.\n   o  At the ingress node, select the time for each of
      the Path messages\n      according to the specified Poisson process.\n   o  At
      the ingress node, send out the Path messages according to the\n      selected
      time.\n   o  Store a timestamp (T1) locally on the ingress node when the first\n
      \     Path message packet is sent towards the egress node.\n   o  If all of
      the corresponding Resv messages arrive within a\n      reasonable period of
      time, take the final timestamp (T2) as soon\n      as possible upon the receipt
      of all the messages.  By subtracting\n      the two timestamps, an estimate
      of multiple unidirectional LSPs\n      setup delay (T2-T1) can be computed.\n
      \  o  If one or more of the corresponding Resv messages fail to arrive\n      within
      a reasonable period of time, the multiple unidirectional\n      LSPs setup delay
      is deemed to be undefined.  Note that the\n      \"reasonable\" threshold is
      a parameter of the methodology.\n   o  If one or more of the corresponding responses
      are PathErr\n      messages, the multiple unidirectional LSPs setup delay is
      deemed\n      to be undefined.\n"
    title: 5.7.  Methodologies
  - contents:
    - "5.8.  Metric Reporting\n   The metric result (either a real number or undefined)
      MUST be\n   reported together with the selected upper bound.  The route that
      the\n   LSPs traverse MUST also be reported.  The route MAY be collected via\n
      \  use of the record route object, see [RFC3209], or via the management\n   plane.
      \ The collection of routes via the management plane is out of\n   scope of this
      document.\n"
    title: 5.8.  Metric Reporting
  title: 5.  A Singleton Definition for Multiple Unidirectional LSPs Setup Delay
- contents:
  - "6.  A Singleton Definition for Single Bidirectional LSP Setup Delay\n   GMPLS
    allows establishment of bidirectional symmetric LSPs (not of\n   asymmetric LSPs).
    \ This section defines a metric for single\n   bidirectional LSP setup delay across
    a GMPLS network.\n"
  - contents:
    - "6.1.  Motivation\n   Single bidirectional Label Switched Path setup delay is
      useful for\n   several reasons:\n   o  LSP setup delay is an important metric
      that characterizes the\n      provisioning performance of a GMPLS network.  Longer
      LSP setup\n      delay will incur higher overhead for the requesting application,\n
      \     especially when the LSP duration is comparable to the LSP setup\n      delay.
      \ Thus, measuring the setup delay is important for\n      application scheduling.\n
      \  o  The minimum value of this metric provides an indication of the\n      delay
      that will likely be experienced when the LSP traverses the\n      shortest route
      at the lightest load in the control plane.  As the\n      delay itself consists
      of several components, such as link\n      propagation delay and nodal processing
      delay, this metric also\n      reflects the status of the control plane.  For
      example, for LSPs\n      traversing the same route, longer setup delays may
      suggest\n      congestion in the control channel or high control element load.\n
      \     For this reason, this metric is useful for testing and diagnostic\n      purposes.\n
      \  o  LSP setup delay variance has a different impact on applications.\n      Erratic
      variation in LSP setup delay makes it difficult to support\n      applications
      that have stringent setup delay requirement.\n   The measurement of single bidirectional
      LSP setup delay instead of\n   unidirectional LSP setup delay is motivated by
      the following factors:\n   o  Bidirectional LSPs are seen as a requirement for
      many GMPLS\n      networks.  Its provisioning performance is important to\n
      \     applications that generate bidirectional traffic.\n"
    title: 6.1.  Motivation
  - contents:
    - "6.2.  Metric Name\n   Single bidirectional LSP setup delay\n"
    title: 6.2.  Metric Name
  - contents:
    - "6.3.  Metric Parameters\n   o  ID0, the ingress LSR ID\n   o  ID1, the egress
      LSR ID\n   o  T, a time when the setup is attempted\n"
    title: 6.3.  Metric Parameters
  - contents:
    - "6.4.  Metric Units\n   The value of single bidirectional LSP setup delay is
      either a real\n   number of milliseconds or undefined\n"
    title: 6.4.  Metric Units
  - contents:
    - "6.5.  Definition\n   For a real number dT, the single bidirectional LSP setup
      delay from\n   ingress node ID0 to egress node ID1 at T is dT means that ingress\n
      \  node ID0 sends out the first bit of a Path message including an\n   Upstream
      Label [RFC3473] heading for egress node ID1 at wire-time T,\n   egress node
      ID1 receives that packet, then immediately sends a Resv\n   message packet back
      to ingress node ID0, and that ingress node ID0\n   receives the last bit of
      the Resv message packet at wire-time T+dT.\n   If the single bidirectional LSP
      setup delay from ingress node ID0 to\n   egress node ID1 at T is \"undefined\",
      this means that ingress node ID0\n   sends the first bit of a Path message to
      egress node ID1 at wire-time\n   T and that ingress node ID0 does not receive
      that response packet\n   within a reasonable period of time.\n   The undefined
      value of this metric indicates an event of Single\n   Bidirectional LSP Setup
      Failure and would be used to report a count\n   or a percentage of Single Bidirectional
      LSP Setup failures.  See\n   Section 14.5 for definitions of LSP setup/release
      failures.\n"
    title: 6.5.  Definition
  - contents:
    - "6.6.  Discussion\n   The following issues are likely to come up in practice:\n
      \  o  The accuracy of single bidirectional LSP setup delay depends on\n      the
      clock resolution in the ingress node; but synchronization\n      between the
      ingress node and egress node is not required since\n      single bidirectional
      LSP setup uses two-way signaling.\n   o  A given methodology will have to include
      a way to determine\n      whether a latency value is infinite or whether it
      is merely very\n      large.  Simple upper bounds MAY be used, but GMPLS networks
      may\n      accommodate many kinds of devices.  For example, some photonic\n
      \     cross-connects (PXCs) have to move micro mirrors.  This physical\n      motion
      may take several milliseconds, but electronic switches can\n      finish the
      nodal processing within several microseconds.  So the\n      bidirectional LSP
      setup delay varies drastically from one network\n      to another.  In the process
      of bidirectional LSP setup, if the\n      downstream node overrides the label
      suggested by the upstream\n      node, the setup delay may also increase.  Thus,
      in practice, the\n      upper bound SHOULD be chosen carefully.\n   o  If the
      ingress node sends out the Path message to set up the LSP,\n      but never
      receives the corresponding Resv message, single\n      bidirectional LSP setup
      delay MUST be set to undefined.\n   o  If the ingress node sends out the Path
      message to set up the LSP,\n      but receives a PathErr message, single bidirectional
      LSP setup\n      delay MUST be set to undefined.  There are many possible reasons\n
      \     for this case.  For example, the Path message has invalid\n      parameters
      or the network does not have enough resources to set up\n      the requested
      LSP.\n"
    title: 6.6.  Discussion
  - contents:
    - "6.7.  Methodologies\n   Generally, the methodology would proceed as follows:\n
      \  o  Make sure that the network has enough resources to set up the\n      requested
      LSP.\n   o  At the ingress node, form the Path message (including the Upstream\n
      \     Label or suggested label) according to the LSP requirements.  A\n      timestamp
      (T1) may be stored locally on the ingress node when the\n      Path message
      packet is sent towards the egress node.\n   o  If the corresponding Resv message
      arrives within a reasonable\n      period of time, take the final timestamp
      (T2) as soon as possible\n      upon the receipt of the message.  By subtracting
      the two\n      timestamps, an estimate of bidirectional LSP setup delay (T2-T1)\n
      \     can be computed.\n   o  If the corresponding Resv message fails to arrive
      within a\n      reasonable period of time, the single bidirectional LSP setup\n
      \     delay is deemed to be undefined.  Note that the \"reasonable\"\n      threshold
      is a parameter of the methodology.\n   o  If the corresponding response is a
      PathErr message, the single\n      bidirectional LSP setup delay is deemed to
      be undefined.\n"
    title: 6.7.  Methodologies
  - contents:
    - "6.8.  Metric Reporting\n   The metric result (either a real number or undefined)
      MUST be\n   reported together with the selected upper bound.  The route that
      the\n   LSP traverses MUST also be reported.  The route MAY be collected via\n
      \  use of the record route object, see [RFC3209], or via the management\n   plane.
      \ The collection of routes via the management plane is out of\n   scope of this
      document.\n"
    title: 6.8.  Metric Reporting
  title: 6.  A Singleton Definition for Single Bidirectional LSP Setup Delay
- contents:
  - "7.  A Singleton Definition for Multiple Bidirectional LSPs Setup Delay\n   This
    section defines a metric for multiple bidirectional LSPs setup\n   delay across
    a GMPLS network.\n"
  - contents:
    - "7.1.  Motivation\n   Multiple bidirectional LSPs setup delay is useful for
      several\n   reasons:\n   o  Upon traffic interruption caused by network failure
      or network\n      upgrade, carriers may require a large number of LSPs be set
      up\n      during a short time period.\n   o  The time needed to set up a large
      number of LSPs during a short\n      time period cannot be deduced by single
      LSP setup delay.\n"
    title: 7.1.  Motivation
  - contents:
    - "7.2.  Metric Name\n   Multiple bidirectional LSPs setup delay\n"
    title: 7.2.  Metric Name
  - contents:
    - "7.3.  Metric Parameters\n   o  ID0, the ingress LSR ID\n   o  ID1, the egress
      LSR ID\n   o  Lambda_m, a rate in reciprocal milliseconds\n   o  X, the number
      of LSPs to set up\n   o  T, a time when the first setup is attempted\n"
    title: 7.3.  Metric Parameters
  - contents:
    - "7.4.  Metric Units\n   The value of multiple bidirectional LSPs setup delay
      is either a real\n   number of milliseconds or undefined\n"
    title: 7.4.  Metric Units
  - contents:
    - "7.5.  Definition\n   Given Lambda_m and X, for a real number dT, the multiple\n
      \  bidirectional LSPs setup delay from ingress node to egress node at T\n   is
      dT, means that:\n   o  Ingress node ID0 sends the first bit of the first Path
      message\n      heading for egress node ID1 at wire-time T;\n   o  All subsequent
      (X-1) Path messages are sent according to the\n      specified Poisson process
      with arrival rate Lambda_m;\n   o  Ingress node ID1 receives all corresponding
      Resv message packets\n      from egress node ID1; and\n   o  Ingress node ID0
      receives the last Resv message packet at wire-\n      time T+dT.\n   If the
      multiple bidirectional LSPs setup delay from ingress node to\n   egress node
      at T is \"undefined\", this means that the ingress node\n   sends all the Path
      messages to the egress node and that the ingress\n   node fails to receive one
      or more of the response Resv messages\n   within a reasonable period of time.\n
      \  The undefined value of this metric indicates an event of Multiple\n   Bidirectional
      LSP Setup Failure and would be used to report a count\n   or a percentage of
      Multiple Bidirectional LSP Setup failures.  See\n   Section 14.5 for definitions
      of LSP setup/release failures.\n"
    title: 7.5.  Definition
  - contents:
    - "7.6.  Discussion\n   The following issues are likely to come up in practice:\n
      \  o  The accuracy of multiple bidirectional LSPs setup delay depends on\n      the
      clock resolution in the ingress node; but synchronization\n      between the
      ingress node and egress node is not required since\n      bidirectional LSP
      setup uses two-way signaling.\n   o  A given methodology will have to include
      a way to determine\n      whether a latency value is infinite or whether it
      is merely very\n      large.  Simple upper bounds MAY be used, but GMPLS networks
      may\n      accommodate many kinds of devices.  For example, some photonic\n
      \     cross-connects (PXCs) have to move micro mirrors.  This physical\n      motion
      may take several milliseconds, but electronic switches can\n      finish the
      nodal process within several microseconds.  So the\n      multiple bidirectional
      LSPs setup delay varies drastically from a\n      network to another.  In the
      process of multiple bidirectional LSPs\n      setup, if the downstream node
      overrides the label suggested by the\n      upstream node, the setup delay may
      also increase.  Thus, in\n      practice, the upper bound SHOULD be chosen carefully.\n
      \  o  If the ingress node sends out the Path messages to set up the\n      LSPs,
      but never receives all the corresponding Resv messages, the\n      multiple
      bidirectional LSPs setup delay MUST be set to undefined.\n   o  If the ingress
      node sends out the Path messages to set up the\n      LSPs, but receives one
      or more responding PathErr messages, the\n      multiple bidirectional LSPs
      setup delay MUST be set to undefined.\n      There are many possible reasons
      for this case.  For example, one\n      or more of the Path messages have invalid
      parameters or the\n      network does not have enough resources to set up the
      requested\n      LSPs.\n   o  The arrival rate of the Poisson process Lambda_m
      SHOULD be\n      carefully chosen such that on the one hand, the control plane
      is\n      not overburdened.  On the other hand, the arrival rate is large\n
      \     enough to meet the requirements of applications or services.\n   o  It
      is important that all the LSPs MUST traverse the same route.\n      If there
      are multiple routes between the ingress node ID0 and\n      egress node ID1,
      EROs, or an alternate method, e.g., static\n      configuration, MUST be used
      to ensure that all LSPs traverse the\n      same route.\n"
    title: 7.6.  Discussion
  - contents:
    - "7.7.  Methodologies\n   Generally, the methodology would proceed as follows:\n
      \  o  Make sure that the network has enough resources to set up the\n      requested
      LSPs.\n   o  At the ingress node, form the Path messages (including the\n      Upstream
      Label or suggested label) according to the LSPs'\n      requirements.\n   o
      \ At the ingress node, select the time for each of the Path messages\n      according
      to the specified Poisson process.\n   o  At the ingress node, send out the Path
      messages according to the\n      selected time.\n   o  Store a timestamp (T1)
      locally in the ingress node when the first\n      Path message packet is sent
      towards the egress node.\n   o  If all of the corresponding Resv messages arrive
      within a\n      reasonable period of time, take the final timestamp (T2) as
      soon\n      as possible upon the receipt of all the messages.  By subtracting\n
      \     the two timestamps, an estimate of multiple bidirectional LSPs\n      setup
      delay (T2-T1) can be computed.\n   o  If one or more of the corresponding Resv
      messages fail to arrive\n      within a reasonable period of time, the multiple
      bidirectional\n      LSPs setup delay is deemed to be undefined.  Note that
      the\n      \"reasonable\" threshold is a parameter of the methodology.\n   o
      \ If one or more of the corresponding responses are PathErr\n      messages,
      the multiple bidirectional LSPs setup delay is deemed to\n      be undefined.\n"
    title: 7.7.  Methodologies
  - contents:
    - "7.8.  Metric Reporting\n   The metric result (either a real number or undefined)
      MUST be\n   reported together with the selected upper bound.  The route that
      the\n   LSPs traverse MUST also be reported.  The route MAY be collected via\n
      \  use of the record route object, see [RFC3209], or via the management\n   plane.
      \ The collection of routes via the management plane is out of\n   scope of this
      document.\n"
    title: 7.8.  Metric Reporting
  title: 7.  A Singleton Definition for Multiple Bidirectional LSPs Setup Delay
- contents:
  - "8.  A Singleton Definition for LSP Graceful Release Delay\n   There are two different
    kinds of LSP release mechanisms in GMPLS\n   networks: graceful release and forceful
    release.  This document does\n   not take forceful LSP release procedure into
    account.\n"
  - contents:
    - "8.1.  Motivation\n   LSP graceful release delay is useful for several reasons:\n
      \  o  The LSP graceful release delay is part of the total cost of\n      dynamic
      LSP provisioning.  For some short duration applications,\n      the LSP release
      time cannot be ignored.\n   o  The LSP graceful release procedure is more preferred
      in a GMPLS\n      controlled network, particularly the optical networks.  Since
      it\n      doesn't trigger restoration/protection, it is \"alarm-free\n      connection
      deletion\" in [RFC4208].\n"
    title: 8.1.  Motivation
  - contents:
    - "8.2.  Metric Name\n   LSP graceful release delay\n"
    title: 8.2.  Metric Name
  - contents:
    - "8.3.  Metric Parameters\n   o  ID0, the ingress LSR ID\n   o  ID1, the egress
      LSR ID\n   o  T, a time when the release is attempted\n"
    title: 8.3.  Metric Parameters
  - contents:
    - "8.4.  Metric Units\n   The value of LSP graceful release delay is either a
      real number of\n   milliseconds or undefined\n"
    title: 8.4.  Metric Units
  - contents:
    - "8.5.  Definition\n   There are two different LSP graceful release procedures:
      one is\n   initiated by the ingress node, and another is initiated by the egress\n
      \  node.  The two procedures are depicted in [RFC3473].  We define the\n   graceful
      LSP release delay for these two procedures separately.\n   For a real number
      dT, if the LSP graceful release delay from ingress\n   node ID0 to egress node
      ID1 at T is dT, this means that ingress node\n   ID0 sends the first bit of
      a Path message including an Admin Status\n   Object with the Reflect (R) and
      Delete (D) bits set to the egress\n   node at wire-time T, that egress node
      ID1 receives that packet, then\n   immediately sends a Resv message including
      an Admin Status Object\n   with the Delete (D) bit set back to the ingress node.
      \ Ingress node\n   ID0 sends the PathTear message downstream to remove the LSP,
      and\n   egress node ID1 receives the last bit of PathTear packet at wire-time\n
      \  T+dT.\n   Also, as an option, upon receipt of the Path message including
      an\n   Admin Status Object with the Reflect (R) and Delete (D) bits set,\n   egress
      node ID1 may respond with a PathErr message with the\n   Path_State_Removed
      flag set.\n   The LSP graceful release delay from ingress node ID0 to egress
      node\n   ID1 at T is undefined means that ingress node ID0 sends the first bit\n
      \  of Path message to egress node ID1 at wire-time T and that (either\n   the
      egress node does not receive the Path packet, the egress node\n   does not send
      a corresponding Resv message packet in response, or the\n   ingress node does
      not receive that Resv packet, and) egress node ID1\n   does not receive the
      PathTear message within a reasonable period of\n   time.\n   If the LSP graceful
      release delay from egress node ID1 to ingress\n   node ID0 at T is dT, this
      means that egress node ID1 sends the first\n   bit of a Resv message including
      an Admin Status Object with the\n   Reflect (R) and Delete (D) bits set to the
      ingress node at wire-time\n   T.  Ingress node ID0 sends a PathTear message
      downstream to remove\n   the LSP, and egress node ID1 receives the last bit
      of PathTear packet\n   at wire-time T+dT.\n   If the LSP graceful release delay
      from egress node ID1 to ingress\n   node ID0 at T is \"undefined\", this means
      that egress node ID1 sends\n   the first bit of Resv message including an Admin
      Status Object with\n   the Reflect (R) and Delete (D) bits set to the ingress
      node ID0 at\n   wire-time T and that (either the ingress node does not receive
      the\n   Resv packet or the ingress node does not send PathTear message packet\n
      \  in response, and) egress node ID1 does not receive the PathTear\n   message
      within a reasonable period of time.\n   The undefined value of this metric indicates
      an event of LSP Graceful\n   Release Failure and would be used to report a count
      or a percentage\n   of LSP Graceful Release failures.  See Section 14.5 for
      definitions\n   of LSP setup/release failures.\n"
    title: 8.5.  Definition
  - contents:
    - "8.6.  Discussion\n   The following issues are likely to come up in practice:\n
      \  o  In the first (second) circumstance, the accuracy of LSP graceful\n      release
      delay at time T depends on the clock resolution in the\n      ingress (egress)
      node.  In the first circumstance, synchronization\n      between the ingress
      node and egress node is required, but it is\n      not in the second circumstance.\n
      \  o  A given methodology has to include a way to determine whether a\n      latency
      value is infinite or whether it is merely very large.\n      Simple upper bounds
      MAY be used, but the upper bound SHOULD be\n      chosen carefully in practice.\n
      \  o  In the first circumstance, if the ingress node sends out Path\n      message
      including an Admin Status Object with the Reflect (R) and\n      Delete (D)
      bits set to initiate LSP graceful release, but the\n      egress node never
      receives the corresponding PathTear message, LSP\n      graceful release delay
      MUST be set to undefined.\n   o  In the second circumstance, if the egress node
      sends out the Resv\n      message including an Admin Status Object with the
      Reflect (R) and\n      Delete (D) bits set to initiate LSP graceful release,
      but never\n      receives the corresponding PathTear message, LSP graceful release\n
      \     delay MUST be set to undefined.\n"
    title: 8.6.  Discussion
  - contents:
    - "8.7.  Methodologies\n   In the first circumstance, the methodology may proceed
      as follows:\n   o  Make sure the LSP to be deleted is set up;\n   o  At the
      ingress node, form the Path message including an Admin\n      Status Object
      with the Reflect (R) and Delete (D) bits set.  A\n      timestamp (T1) may be
      stored locally on the ingress node when the\n      Path message packet is sent
      towards the egress node.\n   o  Upon receiving the Path message including an
      Admin Status Object\n      with the Reflect (R) and Delete (D) bits set, the
      egress node\n      sends a Resv message including an Admin Status Object with
      the\n      Delete (D) and Reflect (R) bits set.  Alternatively, the egress\n
      \     node sends a PathErr message with the Path_State_Removed flag set\n      upstream.\n
      \  o  When the ingress node receives the Resv message or the PathErr\n      message,
      it sends a PathTear message to remove the LSP.\n   o  The egress node takes
      a timestamp (T2) once it receives the last\n      bit of the PathTear message.
      \ The LSP graceful release delay is\n      then (T2-T1).\n   o  If the ingress
      node sends the Path message downstream, but the\n      egress node fails to
      receive the PathTear message within a\n      reasonable period of time, the
      LSP graceful release delay is\n      deemed to be undefined.  Note that the
      \"reasonable\" threshold is a\n      parameter of the methodology.\n   In the
      second circumstance, the methodology would proceed as follows:\n   o  Make sure
      the LSP to be deleted is set up;\n   o  On the egress node, form the Resv message
      including an Admin\n      Status Object with the Reflect (R) and Delete (D)
      bits set.  A\n      timestamp may be stored locally on the egress node when
      the Resv\n      message packet is sent towards the ingress node.\n   o  Upon
      receiving the Admin Status Object with the Reflect (R) and\n      Delete (D)
      bits set in the Resv message, the ingress node sends a\n      PathTear message
      downstream to remove the LSP.\n   o  The egress node takes a timestamp (T2)
      once it receives the last\n      bit of the PathTear message.  The LSP graceful
      release delay is\n      then (T2-T1).\n   o  If the egress node sends the Resv
      message upstream, but it fails\n      to receive the PathTear message within
      a reasonable period of\n      time, the LSP graceful release delay is deemed
      to be undefined.\n      Note that the \"reasonable\" threshold is a parameter
      of the\n      methodology.\n"
    title: 8.7.  Methodologies
  - contents:
    - "8.8.  Metric Reporting\n   The metric result (either a real number or undefined)
      MUST be\n   reported together with the selected upper bound and the procedure\n
      \  used (e.g., either from the ingress node to the egress node or from\n   the
      egress node to the ingress node; see Section 8.5 for more\n   details).  The
      route that the LSP traverses MUST also be reported.\n   The route MAY be collected
      via use of the record route object, see\n   [RFC3209], or via the management
      plane.  The collection of routes via\n   the management plane is out of scope
      of this document.\n"
    title: 8.8.  Metric Reporting
  title: 8.  A Singleton Definition for LSP Graceful Release Delay
- contents:
  - "9.  A Definition for Samples of Single Unidirectional LSP Setup Delay\n   In
    Section 4, we defined the singleton metric of single\n   unidirectional LSP setup
    delay.  Now we define how to get one\n   particular sample of single unidirectional
    LSP setup delay.  Sampling\n   means to take a number of distinct instances of
    a skeleton metric\n   under a given set of parameters.  As in [RFC2330], we use
    Poisson\n   sampling as an example.\n"
  - contents:
    - "9.1.  Metric Name\n   Single unidirectional LSP setup delay sample\n"
    title: 9.1.  Metric Name
  - contents:
    - "9.2.  Metric Parameters\n   o  ID0, the ingress LSR ID\n   o  ID1, the egress
      LSR ID\n   o  T0, a time\n   o  Tf, a time\n   o  Lambda, a rate in the reciprocal
      milliseconds\n   o  Th, LSP holding time\n   o  Td, the maximum waiting time
      for successful setup\n"
    title: 9.2.  Metric Parameters
  - contents:
    - "9.3.  Metric Units\n   A sequence of pairs; the elements of each pair are:\n
      \  o  T, a time when setup is attempted\n   o  dT, either a real number of milliseconds
      or undefined\n"
    title: 9.3.  Metric Units
  - contents:
    - "9.4.  Definition\n   Given T0, Tf, and Lambda, compute a pseudo-random Poisson
      process\n   beginning at or before T0, with average arrival rate Lambda, and\n
      \  ending at or after Tf.  Those time values greater than or equal to T0\n   and
      less than or equal to Tf are then selected.  At each of the times\n   in this
      process, we obtain the value of unidirectional LSP setup\n   delay sample.  The
      value of the sample is the sequence made up of the\n   resulting <time, LSP
      setup delay> pairs.  If there are no such pairs,\n   the sequence is of length
      zero and the sample is said to be empty.\n"
    title: 9.4.  Definition
  - contents:
    - "9.5.  Discussion\n   The parameter Lambda should be carefully chosen.  If the
      rate is too\n   high, too frequent LSP setup/release procedure will result in
      high\n   overhead in the control plane.  In turn, the high overhead will\n   increase
      unidirectional LSP setup delay.  On the other hand, if the\n   rate is too low,
      the sample might not completely reflect the dynamic\n   provisioning performance
      of the GMPLS network.  The appropriate\n   Lambda value depends on the given
      network.\n   The parameters Td should be carefully chosen.  Different switching\n
      \  technologies may vary significantly in performing a cross-connect\n   operation.
      \ At the same time, the time needed in setting up an LSP\n   under different
      traffic may also vary significantly.\n   In the case of active measurement,
      the parameters Th should be\n   carefully chosen.  The combination of Lambda
      and Th reflects the load\n   of the network.  The selection of Th should take
      into account that\n   the network has sufficient resources to perform subsequent
      tests.\n   The value of Th MAY be constant during one sampling process for\n
      \  simplicity considerations.\n   Note that for online or passive measurements,
      the arrival rate and\n   LSP holding time are determined by actual traffic;
      hence, in this\n   case, Lambda and Th are not input parameters.\n   It is important
      that, in obtaining a sample, all the LSPs MUST\n   traverse the same route.
      \ If there are multiple routes between the\n   ingress node ID0 and egress node
      ID1, EROs, or an alternate method,\n   e.g., static configuration, MUST be used
      to ensure that all LSPs\n   traverse the same route.\n"
    title: 9.5.  Discussion
  - contents:
    - "9.6.  Methodologies\n   o  Select the times using the specified Poisson arrival
      process,\n   o  Set up the LSP as the methodology for the singleton unidirectional\n
      \     LSP setup delay, and obtain the value of unidirectional LSP setup\n      delay,
      and\n   o  Release the LSP after Th, and wait for the next Poisson arrival\n
      \     event.\n   Note: it is possible that before the previous LSP release procedure\n
      \  completes, the next Poisson arrival event arrives and the LSP setup\n   procedure
      is initiated.  If there is resource contention between the\n   two LSPs, the
      LSP setup may fail.  Ways to avoid such contention are\n   outside the scope
      of this document.\n"
    title: 9.6.  Methodologies
  - contents:
    - '9.7.  Typical Testing Cases

      '
    - contents:
      - '9.7.1.  With No LSP in the Network

        '
      - contents:
        - "9.7.1.1.  Motivation\n   Single unidirectional LSP setup delay with no
          LSP in the network is\n   important because this reflects the inherent delay
          of a Resource\n   Reservation Protocol - Traffic Engineering (RSVP-TE) implementation.\n
          \  The minimum value provides an indication of the delay that will\n   likely
          be experienced when an LSP traverses the shortest route with\n   the lightest
          load in the control plane.\n"
        title: 9.7.1.1.  Motivation
      - contents:
        - "9.7.1.2.  Methodologies\n   Make sure that there is no LSP in the network
          and proceed with the\n   methodologies described in Section 9.6\n"
        title: 9.7.1.2.  Methodologies
      title: 9.7.1.  With No LSP in the Network
    - contents:
      - '9.7.2.  With a Number of LSPs in the Network

        '
      - contents:
        - "9.7.2.1.  Motivation\n   Single unidirectional LSP setup delay with a number
          of LSPs in the\n   network is important because it reflects the performance
          of an\n   operational network with considerable load.  This delay may vary\n
          \  significantly as the number of existing LSPs vary.  It can be used as\n
          \  a scalability metric of an RSVP-TE implementation.\n"
        title: 9.7.2.1.  Motivation
      - contents:
        - "9.7.2.2.  Methodologies\n   Set up the required number of LSPs, and wait
          until the network\n   reaches a stable state; then, proceed with the methodologies\n
          \  described in Section 9.6.\n"
        title: 9.7.2.2.  Methodologies
      title: 9.7.2.  With a Number of LSPs in the Network
    title: 9.7.  Typical Testing Cases
  - contents:
    - "9.8.  Metric Reporting\n   The metric results including both real and undefined
      values MUST be\n   reported together with the total number of values.  The context
      under\n   which the sample is obtained, including the selected parameters, the\n
      \  route traversed by the LSPs, and the testing case used, MUST also be\n   reported.\n"
    title: 9.8.  Metric Reporting
  title: 9.  A Definition for Samples of Single Unidirectional LSP Setup Delay
- contents:
  - "10.  A Definition for Samples of Multiple Unidirectional LSPs Setup\n     Delay\n
    \  In Section 5, we defined the singleton metric of multiple\n   unidirectional
    LSPs setup delay.  Now we define how to get one\n   particular sample of multiple
    unidirectional LSPs setup delay.\n   Sampling means to take a number of distinct
    instances of a skeleton\n   metric under a given set of parameters.  As in [RFC2330],
    we use\n   Poisson sampling as an example.\n"
  - contents:
    - "10.1.  Metric Name\n   Multiple unidirectional LSPs setup delay sample\n"
    title: 10.1.  Metric Name
  - contents:
    - "10.2.  Metric Parameters\n   o  ID0, the ingress LSR ID\n   o  ID1, the egress
      LSR ID\n   o  T0, a time\n   o  Tf, a time\n   o  Lambda_m, a rate in the reciprocal
      milliseconds\n   o  Lambda, a rate in the reciprocal milliseconds\n   o  X,
      the number of LSPs to set up\n   o  Th, LSP holding time\n   o  Td, the maximum
      waiting time for successful multiple\n      unidirectional LSPs setup\n"
    title: 10.2.  Metric Parameters
  - contents:
    - "10.3.  Metric Units\n   A sequence of pairs; the elements of each pair are:\n
      \  o  T, a time when the first setup is attempted\n   o  dT, either a real number
      of milliseconds or undefined\n"
    title: 10.3.  Metric Units
  - contents:
    - "10.4.  Definition\n   Given T0, Tf, and Lambda, compute a pseudo-random Poisson
      process\n   beginning at or before T0, with an average arrival rate Lambda and\n
      \  ending at or after Tf.  Those time values greater than or equal to T0\n   and
      less than or equal to Tf are then selected.  At each of the times\n   in this
      process, we obtain the value of multiple unidirectional LSP\n   setup delay
      sample.  The value of the sample is the sequence made up\n   of the resulting
      <time, setup delay> pairs.  If there are no such\n   pairs, the sequence is
      of length zero and the sample is said to be\n   empty.\n"
    title: 10.4.  Definition
  - contents:
    - "10.5.  Discussion\n   The parameter Lambda is used as an arrival rate of \"batch\n
      \  unidirectional LSPs setup\" operation.  It regulates the interval in\n   between
      each batch operation.  The parameter Lambda_m is used within\n   each batch
      operation, as described in Section 5\n   The parameters Lambda and Lambda_m
      should be carefully chosen.  If\n   the rate is too high, overly frequent LSP
      setup/release procedure\n   will result in high overhead in the control plane.
      \ In turn, the high\n   overhead will increase unidirectional LSP setup delay.
      \ On the other\n   hand, if the rate is too low, the sample might not completely
      reflect\n   the dynamic provisioning performance of the GMPLS network.  The\n
      \  appropriate Lambda and Lambda_m value depends on the given network.\n   The
      parameters Td should be carefully chosen.  Different switching\n   technologies
      may vary significantly in performing a cross-connect\n   operation.  At the
      same time, the time needed in setting up an LSP\n   under different traffic
      may also vary significantly.\n   It is important that, in obtaining a sample,
      all the LSPs MUST\n   traverse the same route.  If there are multiple routes
      between the\n   ingress node ID0 and egress node ID1, EROs, or an alternate
      method,\n   e.g., static configuration, MUST be used to ensure that all LSPs\n
      \  traverse the same route.\n"
    title: 10.5.  Discussion
  - contents:
    - "10.6.  Methodologies\n   o  Select the times using the specified Poisson arrival
      process,\n   o  Set up the LSP as the methodology for the singleton multiple\n
      \     unidirectional LSPs setup delay, and obtain the value of multiple\n      unidirectional
      LSPs setup delay, and\n   o  Release the LSP after Th, and wait for the next
      Poisson arrival\n      event.\n   Note: it is possible that before the previous
      LSP release procedure\n   completes, the next Poisson arrival event arrives
      and the LSP setup\n   procedure is initiated.  If there is resource contention
      between the\n   two LSPs, the LSP setup may fail.  Ways to avoid such contention
      are\n   outside the scope of this document.\n"
    title: 10.6.  Methodologies
  - contents:
    - '10.7.  Typical Testing Cases

      '
    - contents:
      - '10.7.1.  With No LSP in the Network

        '
      - contents:
        - "10.7.1.1.  Motivation\n   Multiple unidirectional LSPs setup delay with
          no LSP in the network\n   is important because this reflects the inherent
          delay of an RSVP-TE\n   implementation.  The minimum value provides an indication
          of the\n   delay that will likely be experienced when LSPs traverse the
          shortest\n   route with the lightest load in the control plane.\n"
        title: 10.7.1.1.  Motivation
      - contents:
        - "10.7.1.2.  Methodologies\n   Make sure that there is no LSP in the network
          and proceed with the\n   methodologies described in Section 10.6.\n"
        title: 10.7.1.2.  Methodologies
      title: 10.7.1.  With No LSP in the Network
    - contents:
      - '10.7.2.  With a Number of LSPs in the Network

        '
      - contents:
        - "10.7.2.1.  Motivation\n   Multiple unidirectional LSPs setup delay with
          a number of LSPs in the\n   network is important because it reflects the
          performance of an\n   operational network with considerable load.  This
          delay can vary\n   significantly as the number of existing LSPs vary.  It
          can be used as\n   a scalability metric of an RSVP-TE implementation.\n"
        title: 10.7.2.1.  Motivation
      - contents:
        - "10.7.2.2.  Methodologies\n   Set up the required number of LSPs, and wait
          until the network\n   reaches a stable state; then, proceed with the methodologies\n
          \  described in Section 10.6.\n"
        title: 10.7.2.2.  Methodologies
      title: 10.7.2.  With a Number of LSPs in the Network
    title: 10.7.  Typical Testing Cases
  - contents:
    - "10.8.  Metric Reporting\n   The metric results including both real and undefined
      values MUST be\n   reported together with the total number of values.  The context
      under\n   which the sample is obtained, including the selected parameters, the\n
      \  route traversed by the LSPs, and the testing case used, MUST also be\n   reported.\n"
    title: 10.8.  Metric Reporting
  title: 10.  A Definition for Samples of Multiple Unidirectional LSPs Setup
- contents:
  - "11.  A Definition for Samples of Single Bidirectional LSP Setup Delay\n   In
    Section 6, we defined the singleton metric of single bidirectional\n   LSP setup
    delay.  Now we define how to get one particular sample of\n   single bidirectional
    LSP setup delay.  Sampling means to take a\n   number of distinct instances of
    a skeleton metric under a given set\n   of parameters.  As in [RFC2330], we use
    Poisson sampling as an\n   example.\n"
  - contents:
    - "11.1.  Metric Name\n   Single bidirectional LSP setup delay sample with no
      LSP in the\n   network\n"
    title: 11.1.  Metric Name
  - contents:
    - "11.2.  Metric Parameters\n   o  ID0, the ingress LSR ID\n   o  ID1, the egress
      LSR ID\n   o  T0, a time\n   o  Tf, a time\n   o  Lambda, a rate in the reciprocal
      milliseconds\n   o  Th, LSP holding time\n   o  Td, the maximum waiting time
      for successful setup\n"
    title: 11.2.  Metric Parameters
  - contents:
    - "11.3.  Metric Units\n   A sequence of pairs; the elements of each pair are:\n
      \  o  T, a time when setup is attempted\n   o  dT, either a real number of milliseconds
      or undefined\n"
    title: 11.3.  Metric Units
  - contents:
    - "11.4.  Definition\n   Given T0, Tf, and Lambda, compute a pseudo-random Poisson
      process\n   beginning at or before T0, with an average arrival rate Lambda,
      and\n   ending at or after Tf.  Those time values greater than or equal to T0\n
      \  and less than or equal to Tf are then selected.  At each of the times\n   in
      this process, we obtain the value of bidirectional LSP setup delay\n   sample.
      \ The value of the sample is the sequence made up of the\n   resulting <time,
      LSP setup delay> pairs.  If there are no such pairs,\n   the sequence is of
      length zero and the sample is said to be empty.\n"
    title: 11.4.  Definition
  - contents:
    - "11.5.  Discussion\n   The parameters Lambda should be carefully chosen.  If
      the rate is too\n   high, overly frequent LSP setup/release procedure will result
      in high\n   overhead in the control plane.  In turn, the high overhead will\n
      \  increase bidirectional LSP setup delay.  On the other hand, if the\n   rate
      is too low, the sample might not completely reflect the dynamic\n   provisioning
      performance of the GMPLS network.  The appropriate\n   Lambda value depends
      on the given network.\n   The parameters Td should be carefully chosen.  Different
      switching\n   technologies may vary significantly in performing a cross-connect\n
      \  operation.  At the same time, the time needed to set up an LSP under\n   different
      traffic may also vary significantly.\n   In the case of active measurement,
      the parameters Th should be\n   carefully chosen.  The combination of Lambda
      and Th reflects the load\n   of the network.  The selection of Th SHOULD take
      into account that\n   the network has sufficient resources to perform subsequent
      tests.\n   The value of Th MAY be constant during one sampling process for\n
      \  simplicity considerations.\n   Note that for online or passive measurements,
      the arrival rate and\n   the LSP holding time are determined by actual traffic;
      hence, in this\n   case, Lambda and Th are not input parameters.\n   It is important
      that, in obtaining a sample, all the LSPs MUST\n   traverse the same route.
      \ If there are multiple routes between the\n   ingress node ID0 and egress node
      ID1, EROs, or an alternate method,\n   e.g., static configuration, MUST be used
      to ensure that all LSPs\n   traverse the same route.\n"
    title: 11.5.  Discussion
  - contents:
    - "11.6.  Methodologies\n   o  Select the times using the specified Poisson arrival
      process,\n   o  Set up the LSP as the methodology for the singleton bidirectional\n
      \     LSP setup delay, and obtain the value of bidirectional LSP setup\n      delay,
      and\n   o  Release the LSP after Th, and wait for the next Poisson arrival\n
      \     event.\n   Note: it is possible that before the previous LSP release procedure\n
      \  completes, the next Poisson arrival event arrives and the LSP setup\n   procedure
      is initiated.  If there is resource contention between the\n   two LSPs, the
      LSP setup may fail.  Ways to avoid such contention are\n   outside the scope
      of this document.\n"
    title: 11.6.  Methodologies
  - contents:
    - '11.7.  Typical Testing Cases

      '
    - contents:
      - '11.7.1.  With No LSP in the Network

        '
      - contents:
        - "11.7.1.1.  Motivation\n   Single bidirectional LSP setup delay with no
          LSP in the network is\n   important because this reflects the inherent delay
          of an RSVP-TE\n   implementation.  The minimum value provides an indication
          of the\n   delay that will likely be experienced when an LSP traverses the\n
          \  shortest route with the lightest load in the control plane.\n"
        title: 11.7.1.1.  Motivation
      - contents:
        - "11.7.1.2.  Methodologies\n   Make sure that there is no LSP in the network
          and proceed with the\n   methodologies described in Section 11.6.\n"
        title: 11.7.1.2.  Methodologies
      title: 11.7.1.  With No LSP in the Network
    - contents:
      - '11.7.2.  With a Number of LSPs in the Network

        '
      - contents:
        - "11.7.2.1.  Motivation\n   Single bidirectional LSP setup delay with a number
          of LSPs in the\n   network is important because it reflects the performance
          of an\n   operational network with considerable load.  This delay can vary\n
          \  significantly as the number of existing LSPs varies.  It can be used\n
          \  as a scalability metric of an RSVP-TE implementation.\n"
        title: 11.7.2.1.  Motivation
      - contents:
        - "11.7.2.2.  Methodologies\n   Set up the required number of LSPs and wait
          until the network reaches\n   a stable state; then, proceed with the methodologies
          described in\n   Section 11.6.\n"
        title: 11.7.2.2.  Methodologies
      title: 11.7.2.  With a Number of LSPs in the Network
    title: 11.7.  Typical Testing Cases
  - contents:
    - "11.8.  Metric Reporting\n   The metric results including both real and undefined
      values MUST be\n   reported together with the total number of values.  The context
      under\n   which the sample is obtained, including the selected parameters, the\n
      \  route traversed by the LSPs, and the testing case used, MUST also be\n   reported.\n"
    title: 11.8.  Metric Reporting
  title: 11.  A Definition for Samples of Single Bidirectional LSP Setup Delay
- contents:
  - "12.  A Definition for Samples of Multiple Bidirectional LSPs Setup Delay\n   In
    Section 7, we defined the singleton metric of multiple\n   bidirectional LSPs
    setup delay.  Now we define how to get one\n   particular sample of multiple bidirectional
    LSP setup delay.\n   Sampling means to take a number of distinct instances of
    a skeleton\n   metric under a given set of parameters.  As in [RFC2330], we use\n
    \  Poisson sampling as an example.\n"
  - contents:
    - "12.1.  Metric Name\n   Multiple bidirectional LSPs setup delay sample\n"
    title: 12.1.  Metric Name
  - contents:
    - "12.2.  Metric Parameters\n   o  ID0, the ingress LSR ID\n   o  ID1, the egress
      LSR ID\n   o  T0, a time\n   o  Tf, a time\n   o  Lambda_m, a rate in the reciprocal
      milliseconds\n   o  Lambda, a rate in the reciprocal milliseconds\n   o  X,
      the number of LSPs to set up\n   o  Th, LSP holding time\n   o  Td, the maximum
      waiting time for successful multiple\n      unidirectional LSPs setup\n"
    title: 12.2.  Metric Parameters
  - contents:
    - "12.3.  Metric Units\n   A sequence of pairs; the elements of each pair are:\n
      \  o  T, a time when the first setup is attempted\n   o  dT, either a real number
      of milliseconds or undefined\n"
    title: 12.3.  Metric Units
  - contents:
    - "12.4.  Definition\n   Given T0, Tf, and Lambda, compute a pseudo-random Poisson
      process\n   beginning at or before T0, with an average arrival rate Lambda and\n
      \  ending at or after Tf.  Those time values greater than or equal to T0\n   and
      less than or equal to Tf are then selected.  At each of the times\n   in this
      process, we obtain the value of multiple unidirectional LSP\n   setup delay
      sample.  The value of the sample is the sequence made up\n   of the resulting
      <time, setup delay> pairs.  If there are no such\n   pairs, the sequence is
      of length zero and the sample is said to be\n   empty.\n"
    title: 12.4.  Definition
  - contents:
    - "12.5.  Discussion\n   The parameter Lambda is used as an arrival rate of \"batch\n
      \  bidirectional LSPs setup\" operation.  It regulates the interval in\n   between
      each batch operation.  The parameter Lambda_m is used within\n   each batch
      operation, as described in Section 7.\n   The parameters Lambda and Lambda_m
      should be carefully chosen.  If\n   the rate is too high, overly frequent LSP
      setup/release procedure\n   will result in high overhead in the control plane.
      \ In turn, the high\n   overhead will increase unidirectional LSP setup delay.
      \ On the other\n   hand, if the rate is too low, the sample might not completely
      reflect\n   the dynamic provisioning performance of the GMPLS network.  The\n
      \  appropriate Lambda and Lambda_m values depend on the given network.\n   The
      parameters Td should be carefully chosen.  Different switching\n   technologies
      may vary significantly in performing a cross-connect\n   operation.  At the
      same time, the time needed to set up an LSP under\n   different traffic may
      also vary significantly.\n   It is important that, in obtaining a sample, all
      the LSPs MUST\n   traverse the same route.  If there are multiple routes between
      the\n   ingress node ID0 and egress node ID1, EROs, or an alternate method,\n
      \  e.g., static configuration, MUST be used to ensure that all LSPs\n   traverse
      the same route.\n"
    title: 12.5.  Discussion
  - contents:
    - "12.6.  Methodologies\n   o  Select the times using the specified Poisson arrival
      process,\n   o  Set up the LSP as the methodology for the singleton multiple\n
      \     bidirectional LSPs setup delay, and obtain the value of multiple\n      unidirectional
      LSPs setup delay, and\n   o  Release the LSP after Th, and wait for the next
      Poisson arrival\n      event.\n   Note: it is possible that before the previous
      LSP release procedure\n   completes, the next Poisson arrival event arrives
      and the LSP setup\n   procedure is initiated.  If there is resource contention
      between the\n   two LSPs, the LSP setup may fail.  Ways to avoid such contention
      are\n   outside the scope of this document.\n"
    title: 12.6.  Methodologies
  - contents:
    - '12.7.  Typical Testing Cases

      '
    - contents:
      - '12.7.1.  With No LSP in the Network

        '
      - contents:
        - "12.7.1.1.  Motivation\n   Multiple bidirectional LSPs setup delay with
          no LSP in the network is\n   important because this reflects the inherent
          delay of an RSVP-TE\n   implementation.  The minimum value provides an indication
          of the\n   delay that will likely be experienced when an LSPs traverse the\n
          \  shortest route with the lightest load in the control plane.\n"
        title: 12.7.1.1.  Motivation
      - contents:
        - "12.7.1.2.  Methodologies\n   Make sure that there is no LSP in the network
          and proceed with the\n   methodologies described in Section 10.6.\n"
        title: 12.7.1.2.  Methodologies
      title: 12.7.1.  With No LSP in the Network
    - contents:
      - '12.7.2.  With a Number of LSPs in the Network

        '
      - contents:
        - "12.7.2.1.  Motivation\n   Multiple bidirectional LSPs setup delay with
          a number of LSPs in the\n   network is important because it reflects the
          performance of an\n   operational network with considerable load.  This
          delay may vary\n   significantly as the number of existing LSPs vary.  It
          may be used as\n   a scalability metric of an RSVP-TE implementation.\n"
        title: 12.7.2.1.  Motivation
      - contents:
        - "12.7.2.2.  Methodologies\n   Set up the required number of LSPs, and wait
          until the network\n   reaches a stable state; then, proceed with the methodologies\n
          \  described in Section 12.6.\n"
        title: 12.7.2.2.  Methodologies
      title: 12.7.2.  With a Number of LSPs in the Network
    title: 12.7.  Typical Testing Cases
  - contents:
    - "12.8.  Metric Reporting\n   The metric results including both real and undefined
      values MUST be\n   reported together with the total number of values.  The context
      under\n   which the sample is obtained, including the selected parameters, the\n
      \  route traversed by the LSPs, and the testing case used, MUST also be\n   reported.\n"
    title: 12.8.  Metric Reporting
  title: 12.  A Definition for Samples of Multiple Bidirectional LSPs Setup Delay
- contents:
  - "13.  A Definition for Samples of LSP Graceful Release Delay\n   In Section 8,
    we defined the singleton metric of LSP graceful release\n   delay.  Now we define
    how to get one particular sample of LSP\n   graceful release delay.  We also use
    Poisson sampling as an example.\n"
  - contents:
    - "13.1.  Metric Name\n   LSP graceful release delay sample\n"
    title: 13.1.  Metric Name
  - contents:
    - "13.2.  Metric Parameters\n   o  ID0, the ingress LSR ID\n   o  ID1, the egress
      LSR ID\n   o  T0, a time\n   o  Tf, a time\n   o  Lambda, a rate in reciprocal
      milliseconds\n   o  Td, the maximum waiting time for successful LSP release\n"
    title: 13.2.  Metric Parameters
  - contents:
    - "13.3.  Metric Units\n   A sequence of pairs; the elements of each pair are:\n
      \  o  T, a time, and\n   o  dT, either a real number of milliseconds or undefined\n"
    title: 13.3.  Metric Units
  - contents:
    - "13.4.  Definition\n   Given T0, Tf, and Lambda, we compute a pseudo-random
      Poisson process\n   beginning at or before T0, with an average arrival rate
      Lambda and\n   ending at or after Tf.  Those time values greater than or equal
      to T0\n   and less than or equal to Tf are then selected.  At each of the times\n
      \  in this process, we obtain the value of LSP graceful release delay\n   sample.
      \ The value of the sample is the sequence made up of the\n   resulting <time,
      LSP graceful delay> pairs.  If there are no such\n   pairs, the sequence is
      of length zero and the sample is said to be\n   empty.\n"
    title: 13.4.  Definition
  - contents:
    - "13.5.  Discussion\n   The parameter Lambda should be carefully chosen.  If
      the rate is too\n   large, overly frequent LSP setup/release procedure will
      result in\n   high overhead in the control plane.  In turn, the high overhead
      will\n   increase unidirectional LSP setup delay.  On the other hand, if the\n
      \  rate is too small, the sample might not completely reflect the\n   dynamic
      provisioning performance of the GMPLS network.  The\n   appropriate Lambda value
      depends on the given network.\n   It is important that, in obtaining a sample,
      all the LSPs MUST\n   traverse the same route.  If there are multiple routes
      between the\n   ingress node ID0 and egress node ID1, EROs, or an alternate
      method,\n   e.g., static configuration, MUST be used to ensure that all LSPs\n
      \  traverse the same route.\n"
    title: 13.5.  Discussion
  - contents:
    - "13.6.  Methodologies\n   Generally, the methodology would proceed as follows:\n
      \  o  Set up the LSP to be deleted\n   o  Select the times using the specified
      Poisson arrival process,\n   o  Release the LSP as the methodology for the singleton
      LSP graceful\n      release delay, and obtain the value of LSP graceful release
      delay,\n      and\n   o  Set up the LSP, and restart the Poisson arrival process,
      wait for\n      the next Poisson arrival event.\n"
    title: 13.6.  Methodologies
  - contents:
    - "13.7.  Metric Reporting\n   The metric results including both real and undefined
      values MUST be\n   reported together with the total number of values.  The context
      under\n   which the sample is obtained, including the selected parameters, and\n
      \  the route traversed by the LSPs MUST also be reported.\n"
    title: 13.7.  Metric Reporting
  title: 13.  A Definition for Samples of LSP Graceful Release Delay
- contents:
  - "14.  Some Statistics Definitions for Metrics to Report\n   Given the samples
    of the performance metric, we now offer several\n   statistics of these samples
    to report.  From these statistics, we can\n   draw some useful conclusions of
    a GMPLS network.  The value of these\n   metrics is either a real number of milliseconds
    or undefined.  In the\n   following discussion, we only consider the finite values.\n"
  - contents:
    - "14.1.  The Minimum of Metric\n   The minimum of the metric is the minimum of
      all the dT values in the\n   sample.  In computing this, undefined values SHOULD
      be treated as\n   infinitely large.  Note that this means that the minimum could
      thus\n   be undefined if all the dT values are undefined.  In addition, the\n
      \  metric minimum SHOULD be set to undefined if the sample is empty.\n"
    title: 14.1.  The Minimum of Metric
  - contents:
    - "14.2.  The Median of Metric\n   Metric median is the median of the dT values
      in the given sample.  In\n   computing the median, the undefined values MUST
      NOT be included.\n"
    title: 14.2.  The Median of Metric
  - contents:
    - "14.3.  The Maximum of Metric\n   The maximum of the metric is the maximum of
      all the dT values in the\n   sample.  In computing this, undefined values MUST
      NOT be included.\n   Note that this means that measurements that exceed the
      upper bound\n   are not reported in this statistic.  This is an important\n
      \  consideration when evaluating the maximum when the number of\n   undefined
      measurements is non-zero.\n"
    title: 14.3.  The Maximum of Metric
  - contents:
    - "14.4.  The Percentile of Metric\n   The \"empirical distribution function\"
      (EDF) of a set of scalar\n   measurements is a function F(x), which, for any
      x, gives the\n   fractional proportion of the total measurements that were <=
      x.\n   Given a percentage X, the X-th percentile of the metric means the\n   smallest
      value of x for which F(x) >= X.  In computing the\n   percentile, undefined
      values MUST NOT be included.\n   See [RFC2330] for further details.\n"
    title: 14.4.  The Percentile of Metric
  - contents:
    - "14.5.  Failure Statistics of Metric\n   In the process of LSP setup/release,
      it may fail due to various\n   reasons.  For example, setup/release may fail
      when the control plane\n   is overburdened or when there is resource shortage
      in one of the\n   intermediate nodes.  Since the setup/release failure may have\n
      \  significant impact on network operation, it is worthwhile to report\n   each
      failure cases, so that appropriate operations can be performed\n   to check
      the possible implementation, configuration or other\n   deficiencies.\n   Five
      types of failure events are defined in previous sections:\n   o  Single Unidirectional
      LSP Setup Failure\n   o  Multiple Unidirectional LSP Setup Failure\n   o  Single
      Bidirectional LSP Setup Failure\n   o  Multiple Bidirectional LSP Setup Failure\n
      \  o  LSP Graceful Release Failure\n   Given the samples of the performance
      metric, we now offer two\n   statistics of failure events of these samples to
      report.\n"
    - contents:
      - "14.5.1.  Failure Count\n   Failure Count is defined as the number of the
        undefined value of the\n   corresponding performance metric (failure events)
        in a sample.  The\n   value of Failure Count is an integer.\n"
      title: 14.5.1.  Failure Count
    - contents:
      - "14.5.2.  Failure Ratio\n   Failure Ratio is the percentage of the number
        of failure events to\n   the total number of requests in a sample.  The calculation
        for\n   Failure Ratio is defined as follows:\n   X type failure ratio = Number
        of X type failure events/(Number of\n   valid X type metric values + Number
        of X type failure events) * 100%.\n"
      title: 14.5.2.  Failure Ratio
    title: 14.5.  Failure Statistics of Metric
  title: 14.  Some Statistics Definitions for Metrics to Report
- contents:
  - "15.  Discussion\n   It is worthwhile to point out that:\n   o  The unidirectional/bidirectional
    LSP setup delay is one ingress-\n      egress round-trip time plus processing
    time.  But in this\n      document, unidirectional/bidirectional LSP setup delay
    has not\n      taken the processing time in the end nodes (ingress and/or egress)\n
    \     into account.  The timestamp T2 is taken after the endpoint node\n      receives
    it.  Actually, the last node has to take some time to\n      process local procedures.
    \ Similarly, in the LSP graceful release\n      delay, the memo has not considered
    the processing time in the end\n      node.\n   o  This document assumes that
    the correct procedures for installing\n      the data plane are followed as described
    in [RFC3209], [RFC3471],\n      and [RFC3473].  That is, by the time the egress
    receives and\n      processes a Path message, it is safe for the egress to transmit\n
    \     data on the reverse path, and by the time the ingress receives and\n      processes
    a Resv message it is safe for the ingress to transmit\n      data on the forward
    path.  See [CCAMP-SWITCH] for detailed\n      explanations.  This document does
    not include any verification\n      that the implementations of the control plane
    software are\n      conformant, although such tests MAY be constructed with the
    use of\n      suitable signal generation test equipment.  In [CCAMP-DPM], we\n
    \     defined a series of metrics to do such verifications.  However, it\n      is
    RECOMMENDED that both the measurements defined in this document\n      and the
    measurements defined in [CCAMP-DPM] are performed to\n      complement each other.\n
    \  o  Note that, in implementing the tests described in this document, a\n      tester
    should be sure to measure the time taken for the control\n      plane messages
    including the processing of those messages by the\n      nodes under test.\n   o
    \ Bidirectional LSPs may be set up using three-way signaling, where\n      the
    initiating node will send a ResvConf message downstream upon\n      receiving
    the Resv message.  The ResvConf message is used to\n      notify the terminate
    node that it can transfer data upstream.\n      Actually, both directions should
    be ready to transfer data when\n      the Resv message is received by the initiating
    node.  Therefore,\n      the bidirectional LSP setup delay defined in this document
    does\n      not take the confirmation procedure into account.\n"
  title: 15.  Discussion
- contents:
  - "16.  Security Considerations\n   Samples of the metrics can be obtained in either
    active or passive\n   manners.\n   In active measurement, ingress nodes inject
    probing messages into the\n   control plane.  Since the measurement endpoints
    must be conformant to\n   signaling specifications and behave as normal signaling
    endpoints, it\n   will not incur other security issues than normal LSP provisioning.\n
    \  However, the measurement parameters must be carefully selected so\n   that
    the measurements inject trivial amounts of additional traffic\n   into the networks
    they measure.  If they inject \"too much\" traffic,\n   they can skew the results
    of the measurement, and, in extreme cases,\n   cause congestion and denial of
    service.\n   When samples of the metrics are collected in a passive manner, e.g.,\n
    \  by monitoring the operations on real-life LSPs, the implementation of\n   the
    monitoring and reporting mechanism must be careful so that they\n   will not be
    used to attack the control plane.  A typical\n   implementation may use the Management
    Information Base (MIB) to\n   collect/store the metrics and access to the MIB
    is limited to the\n   Network Management Systems (NMSs).  In this case, passive
    monitoring\n   will not incur other security issues than implementing the MIBs
    and\n   NMSs.  If an implementation chooses to expose the performance data to\n
    \  other applications, then it must take into account the possible\n   security
    issues it may face.  For example, when exposing the\n   performance data through
    Simple Network Management Protocol (SNMP),\n   certain authentication methods
    should be used to ensure that the\n   entity maintaining the performance data
    are not subject to\n   unauthorized readings and modifications.  Rate limiting
    on the\n   performance query may also be desirable to reduce the risk that the\n
    \  entity maintaining the performance data are overwhelmed by too many\n   query
    requests.  It is RECOMMENDED that implementers consider the\n   security features
    as provided by the SNMPv3 framework (see [RFC3410],\n   section 8), including
    full support for the SNMPv3 cryptographic\n   mechanisms (for authentication and
    privacy).\n   Additionally, the security considerations pertaining to the original\n
    \  RSVP protocol [RFC2205] and its TE extensions [RFC3209] also remain\n   relevant.\n"
  title: 16.  Security Considerations
- contents:
  - "17.  Acknowledgments\n   We wish to thank Dan Li, Fang Liu (Christine), Zafar
    Ali, Monique\n   Morrow, Adrian Farrel, Deborah Brungard, Lou Berger, Thomas D.
    Nadeau\n   for their comments and help.  Lou Berger and Adrian Farrel have made\n
    \  text contributions to this document.\n   We wish to thank experts from IPPM
    and BMWG -- Reinhard Schrage, Al\n   Morton, and Henk Uijterwaal -- for reviewing
    this document.  Reinhard\n   Schrage has made text contributions to this document.\n
    \  This document contains ideas as well as text that have appeared in\n   existing
    IETF documents.  The authors wish to thank G. Almes, S.\n   Kalidindi, and M.
    Zekauskas.\n   We also wish to thank Weisheng Hu, Yaohui Jin, and Wei Guo in the\n
    \  state key laboratory of advanced optical communication systems and\n   networks
    for the valuable comments.  We also wish to thank the\n   support from National
    Natural Science Foundation of China (NSFC) and\n   863 program of China.\n"
  title: 17.  Acknowledgments
- contents:
  - '18.  References

    '
  - contents:
    - "18.1.  Normative References\n   [RFC2119]       Bradner, S., \"Key words for
      use in RFCs to Indicate\n                   Requirement Levels\", BCP 14, RFC
      2119, March 1997.\n   [RFC2205]       Braden, B., Zhang, L., Berson, S., Herzog,
      S., and S.\n                   Jamin, \"Resource ReSerVation Protocol (RSVP)
      --\n                   Version 1 Functional Specification\", RFC 2205,\n                   September
      1997.\n   [RFC2679]       Almes, G., Kalidindi, S., and M. Zekauskas, \"A One-\n
      \                  way Delay Metric for IPPM\", RFC 2679, September 1999.\n
      \  [RFC2681]       Almes, G., Kalidindi, S., and M. Zekauskas, \"A Round-\n
      \                  trip Delay Metric for IPPM\", RFC 2681,\n                   September
      1999.\n   [RFC3209]       Awduche, D., Berger, L., Gan, D., Li, T., Srinivasan,\n
      \                  V., and G. Swallow, \"RSVP-TE: Extensions to RSVP for\n                   LSP
      Tunnels\", RFC 3209, December 2001.\n   [RFC3471]       Berger, L., \"Generalized
      Multi-Protocol Label\n                   Switching (GMPLS) Signaling Functional
      Description\",\n                   RFC 3471, January 2003.\n   [RFC3473]       Berger,
      L., \"Generalized Multi-Protocol Label\n                   Switching (GMPLS)
      Signaling Resource ReserVation\n                   Protocol-Traffic Engineering
      (RSVP-TE) Extensions\",\n                   RFC 3473, January 2003.\n   [RFC3945]
      \      Mannie, E., \"Generalized Multi-Protocol Label\n                   Switching
      (GMPLS) Architecture\", RFC 3945,\n                   October 2004.\n   [RFC4208]
      \      Swallow, G., Drake, J., Ishimatsu, H., and Y.\n                   Rekhter,
      \"Generalized Multiprotocol Label Switching\n                   (GMPLS) User-Network
      Interface (UNI): Resource\n                   ReserVation Protocol-Traffic Engineering
      (RSVP-TE)\n                   Support for the Overlay Model\", RFC 4208,\n                   October
      2005.\n"
    title: 18.1.  Normative References
  - contents:
    - "18.2.  Informative References\n   [CCAMP-DPM]     Sun, W., Zhang, G., Gao,
      J., Xie, G., Papneja, R.,\n                   Gu, B., Wei, X., Otani, T., and
      R. Jing, \"Label\n                   Switched Path (LSP) Data Path Delay Metric
      in\n                   Generalized MPLS/ MPLS-TE Networks\", Work\n                   in
      Progress, December 2009.\n   [CCAMP-SWITCH]  Shiomoto, K. and A. Farrel, \"Advice
      on When It is\n                   Safe to Start Sending Data on Label Switched
      Paths\n                   Established Using RSVP-TE\", Work in Progress,\n                   October
      2009.\n   [RFC2330]       Paxson, V., Almes, G., Mahdavi, J., and M. Mathis,\n
      \                  \"Framework for IP Performance Metrics\", RFC 2330,\n                   May
      1998.\n   [RFC3410]       Case, J., Mundy, R., Partain, D., and B. Stewart,\n
      \                  \"Introduction and Applicability Statements for\n                   Internet-Standard
      Management Framework\", RFC 3410,\n                   December 2002.\n"
    title: 18.2.  Informative References
  title: 18.  References
- contents:
  - "Appendix A.  Authors' Addresses\n   Jianhua Gao\n   Huawei Technologies Co.,
    LTD.\n   China\n   Phone: +86 755 28973237\n   EMail: gjhhit@huawei.com\n   Guowu
    Xie\n   University of California, Riverside\n   900 University Ave.\n   Riverside,
    CA 92521\n   USA\n   Phone: +1 951 237 8825\n   EMail: xieg@cs.ucr.edu\n   Rajiv
    Papneja\n   Isocore\n   12359 Sunrise Valley Drive, STE 100\n   Reston, VA  20190\n
    \  USA\n   Phone: +1 703 860 9273\n   EMail: rpapneja@isocore.com\n   Bin Gu\n
    \  IXIA\n   Oriental Kenzo Plaza 8M, 48 Dongzhimen Wai Street, Dongcheng District\n
    \  Beijing  200240\n   China\n   Phone: +86 13611590766\n   EMail: BGu@ixiacom.com\n
    \  Xueqin Wei\n   Fiberhome Telecommunication Technology Co., Ltd.\n   Wuhan\n
    \  China\n   Phone: +86 13871127882\n   EMail: xqwei@fiberhome.com.cn\n   Tomohiro
    Otani\n   KDDI R&D Laboratories, Inc.\n   2-1-15 Ohara Kamifukuoka Saitama\n   356-8502\n
    \  Japan\n   Phone: +81-49-278-7357\n   EMail: otani@kddilabs.jp\n   Ruiquan Jing\n
    \  China Telecom Beijing Research Institute\n   118 Xizhimenwai Avenue\n   Beijing
    \ 100035\n   China\n   Phone: +86-10-58552000\n   EMail: jingrq@ctbri.com.cn\n"
  title: Appendix A.  Authors' Addresses
- contents:
  - "Editors' Addresses\n   Weiqiang Sun (editor)\n   Shanghai Jiao Tong University\n
    \  800 Dongchuan Road\n   Shanghai  200240\n   China\n   Phone: +86 21 3420 5359\n
    \  EMail: sunwq@mit.edu\n   Guoying Zhang (editor)\n   China Academy of Telecommunication
    Research, MIIT, China.\n   No.52 Hua Yuan Bei Lu,Haidian District\n   Beijing
    \ 100083\n   China\n   Phone: +86 1062300103\n   EMail: zhangguoying@mail.ritt.com.cn\n"
  title: Editors' Addresses
