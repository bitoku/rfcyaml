- title: __initial_text__
  contents:
  - '        Avoiding Equal Cost Multipath Treatment in MPLS Networks

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet Best Current Practices\
    \ for the\n   Internet Community, and requests discussion and suggestions for\n\
    \   improvements.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2007).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes the Equal Cost Multipath (ECMP) behavior\
    \ of\n   currently deployed MPLS networks.  This document makes best practice\n\
    \   recommendations for anyone defining an application to run over an\n   MPLS\
    \ network that wishes to avoid the reordering that can result from\n   transmission\
    \ of different packets from the same flow over multiple\n   different equal cost\
    \ paths.  These recommendations rely on inspection\n   of the IP version number\
    \ field in packets.  Despite the heuristic\n   nature of the recommendations,\
    \ they provide a relatively safe way to\n   operate MPLS networks, even if future\
    \ allocations of IP version\n   numbers were made for some purpose.\n"
- title: Table of Contents
  contents:
  - 'Table of Contents

    '
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document describes the Equal Cost Multipath (ECMP)\
    \ behavior of\n   currently deployed MPLS networks.  We discuss cases where multiple\n\
    \   packets from the same top-level LSP might be transmitted over\n   different\
    \ equal cost paths, resulting in possible mis-ordering of\n   packets that are\
    \ part of the same top-level LSP.  This document also\n   makes best practice\
    \ recommendations for anyone defining an\n   application to run over an MPLS network\
    \ that wishes to avoid the\n   resulting potential for mis-ordered packets.  While\
    \ disabling ECMP\n   behavior is an option open to most operators, few (if any)\
    \ have\n   chosen to do so, and the application designer does not have control\n\
    \   over the behavior of the networks that the application may run over.\n   Thus,\
    \ ECMP behavior is a reality that must be reckoned with.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   ECMP        Equal Cost Multipath\n   FEC         Forwarding\
    \ Equivalence Class\n   IP ECMP     A forwarding behavior in which the selection\
    \ of the\n               next-hop between equal cost routes is based on the\n\
    \               header(s) of an IP packet\n   Label ECMP  A forwarding behavior\
    \ in which the selection of the\n               next-hop between equal cost routes\
    \ is based on the label\n               stack of an MPLS packet\n   LSP      \
    \   Label Switched Path\n   LSR         Label Switching Router\n"
- title: 2.  Current ECMP Practices
  contents:
  - "2.  Current ECMP Practices\n   The MPLS label stack and Forwarding Equivalence\
    \ Classes are defined\n   in [RFC3031].  The MPLS label stack does not carry a\
    \ Protocol\n   Identifier.  Instead the payload of an MPLS packet is identified\
    \ by\n   the Forwarding Equivalence Class (FEC) of the bottom most label.\n  \
    \ Thus, it is not possible to know the payload type if one does not\n   know the\
    \ label binding for the bottom most label.  Since an LSR,\n   which is processing\
    \ a label stack, need only know the binding for the\n   label(s) it must process,\
    \ it is very often the case that LSRs along\n   an LSP are unable to determine\
    \ the payload type of the carried\n   contents.\n   As a means of potentially\
    \ reducing delay and congestion, IP networks\n   have taken advantage of multiple\
    \ paths through a network by splitting\n   traffic flows across those paths. \
    \ The general name for this practice\n   is Equal Cost Multipath or ECMP.  In\
    \ general, this is done by hashing\n   on various fields on the IP or contained\
    \ headers.  In practice,\n   within a network core, the hashing is based mainly\
    \ or exclusively on\n   the IP source and destination addresses.  The reason for\
    \ splitting\n   aggregated flows in this manner is to minimize the re-ordering\
    \ of\n   packets belonging to individual flows contained within the aggregated\n\
    \   flow.  Within this document, we use the term IP ECMP for this type of\n  \
    \ forwarding algorithm.\n   For packets that contain both a label stack and an\
    \ encapsulated IPv4\n   (or IPv6) packet, current implementations in some cases\
    \ may hash on\n   any combination of labels and IPv4 (or IPv6) source and destination\n\
    \   addresses.\n   In the early days of MPLS, the payload was almost exclusively\
    \ IP.\n   Even today the overwhelming majority of carried traffic remains IP.\n\
    \   Providers of MPLS equipment sought to continue this IP ECMP behavior.\n  \
    \ As shown above, it is not possible to know whether the payload of an\n   MPLS\
    \ packet is IP at every place where IP ECMP needs to be performed.\n   Thus vendors\
    \ have taken the liberty of guessing the payload.  By\n   inspecting the first\
    \ nibble beyond the label stack, existing\n   equipment infers that a packet is\
    \ not IPv4 or IPv6 if the value of\n   the nibble (where the IP version number\
    \ would be found) is not 0x4 or\n   0x6 respectively.  Most deployed LSRs will\
    \ treat a packet whose first\n   nibble is equal to 0x4 as if the payload were\
    \ IPv4 for purposes of IP\n   ECMP.\n   A consequence of this is that any application\
    \ that defines an FEC\n   that does not take measures to prevent the values 0x4\
    \ and 0x6 from\n   occurring in the first nibble of the payload may be subject\
    \ to IP\n   ECMP and thus having their flows take multiple paths and arriving\n\
    \   with considerable jitter and possibly out of order.  While none of\n   this\
    \ is in violation of the basic service offering of IP, it is\n   detrimental to\
    \ the performance of various classes of applications.\n   It also complicates\
    \ the measurement, monitoring, and tracing of those\n   flows.\n   New MPLS payload\
    \ types are emerging, such as those specified by the\n   IETF PWE3 and AVT working\
    \ groups.  These payloads are not IP and, if\n   specified without constraint,\
    \ might be mistaken for IP.\n   It must also be noted that LSRs that correctly\
    \ identify a payload as\n   not being IP most often will load-share traffic across\
    \ multiple\n   equal-cost paths based on the label stack.  Any reserved label,\
    \ no\n   matter where it is located in the stack, may be included in the\n   computation\
    \ for load balancing.  Modification of the label stack\n   between packets of\
    \ a single flow could result in re-ordering that\n   flow.  That is, were an explicit\
    \ null or a router-alert label to be\n   added to a packet, that packet could\
    \ take a different path through\n   the network.\n   Note that for some applications,\
    \ being mistaken for IPv4 may not be\n   detrimental.  The trivial case being\
    \ where the payload behind the top\n   label is a packet belonging to an MPLS\
    \ IPv4 VPN.  Here the real\n   payload is IP and most (if not all) deployed equipment\
    \ will locate\n   the end of the label stack and correctly perform IP ECMP.\n\
    \   A less obvious case is when the packets of a given flow happen to\n   have\
    \ constant values in the fields upon which IP ECMP would be\n   performed.  For\
    \ example, if an Ethernet frame immediately follows the\n   label and the LSR\
    \ does ECMP on IPv4, but does not do ECMP on IPv6,\n   then either the first nibble\
    \ will be 0x4, or it will be something\n   else.  If the nibble is not 0x4 then\
    \ no IP ECMP is performed, but\n   Label ECMP may be performed.  If it is 0x4,\
    \ then the constant values\n   of the MAC addresses overlay the fields that would\
    \ have been occupied\n   by the source and destination addresses of an IP header.\
    \  In this\n   case, the input to the ECMP algorithm would be a constant value\
    \ and\n   thus the algorithm would always return the same result.\n"
- title: 3.  Recommendations for Avoiding ECMP Treatment
  contents:
  - "3.  Recommendations for Avoiding ECMP Treatment\n   We will use the term \"Application\
    \ Label\" to refer to a label that has\n   been allocated with an FEC Type that\
    \ is defined (or simply used) by\n   an application.  Such labels necessarily\
    \ appear at the bottom of the\n   label stack, that is, below labels associated\
    \ with transporting the\n   packet across an MPLS network.  The FEC Type of the\
    \ Application label\n   defines the payload that follows.  Anyone defining an\
    \ application to\n   be transported over MPLS is free to define new FEC Types\
    \ and the\n   format of the payload that will be carried.\n    0             \
    \      1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                Label                  | Exp |0|       TTL     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   .                                       .     . .               .\n   .  \
    \                                     .     . .               .\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                Label                  | Exp |0|       TTL     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |          Application Label            | Exp |1|       TTL     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |1st Nbl|                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   In order to avoid IP ECMP treatment, it is necessary that an\n   application\
    \ take precautions to not be mistaken as IP by deployed\n   equipment that snoops\
    \ on the presumed location of the IP Version\n   field.  Thus, at a minimum, the\
    \ chosen format must disallow the\n   values 0x4 and 0x6 in the first nibble of\
    \ their payload.\n   It is REQUIRED, however, that applications depend upon in-order\n\
    \   packet delivery restrict the first nibble values to 0x0 and 0x1.\n   This\
    \ will ensure that their traffic flows will not be affected if\n   some future\
    \ routing equipment does similar snooping on some future\n   version(s) of IP.\n\
    \   This behavior implies that if in the future an IP version is defined\n   with\
    \ a version number of 0x0 or 0x1, then equipment complying with\n   this BCP would\
    \ be unable to look past one or more MPLS headers, and\n   loadsplit traffic from\
    \ a single LSP across multiple paths based on a\n   hash of specific fields in\
    \ the IPv0 or IPv1 headers.  That is, IP\n   traffic employing these version numbers\
    \ would be safe from\n   disturbances caused by inappropriate loadsplitting, but\
    \ would also\n   not be able to get the performance benefits.\n   For an example\
    \ of how ECMP is avoided in Pseudowires, see [RFC4385].\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   This memo discusses the conditions under which\
    \ MPLS traffic\n   associated with a single top-level LSP either does or does\
    \ not have\n   the possibility of being split between multiple paths, implying\
    \ the\n   possibility of mis-ordering between packets belonging to the same\n\
    \   top-level LSP.  From a security point of view, the worse that could\n   result\
    \ from a security breach of the mechanisms described here would\n   be mis-ordering\
    \ of packets, and possible corresponding loss of\n   throughput (for example,\
    \ TCP connections may in some cases reduce the\n   window size in response to\
    \ mis-ordered packets).  However, in order\n   to create even this limited result,\
    \ an attacker would need to either\n   change the configuration or implementation\
    \ of a router, or change the\n   bits on the wire as transmitted in a packet.\n\
    \   Other security issues in the deployment of MPLS are outside the scope\n  \
    \ of this document, but are discussed in other MPLS specifications,\n   such as\
    \ [RFC3031], [RFC3036], [RFC3107], [RFC3209], [RFC3478],\n   [RFC3479], [RFC4206],\
    \ [RFC4220], [RFC4221], [RFC4378], AND [RFC4379].\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   IANA has marked the value 0x1 in the IP protocol\
    \ version number space\n   as \"Reserved\" and placed a reference to this document\
    \ to both values\n   0x0 and 0x1.\n   Note that this document does not in any\
    \ way change the policies\n   regarding the allocation of version numbers, including\
    \ the possible\n   use of the reserved numbers for some future purpose.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC3031]  Rosen, E., Viswanathan, A., and R.\
    \ Callon, \"Multiprotocol\n              Label Switching Architecture\", RFC 3031,\
    \ January 2001.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [RFC3036]  Andersson, L., Doolan, P., Feldman,\
    \ N., Fredette, A., and\n              B. Thomas, \"LDP Specification\", RFC 3036,\
    \ January 2001.\n   [RFC3107]  Rekhter, Y. and E. Rosen, \"Carrying Label Information\
    \ in\n              BGP-4\", RFC 3107, May 2001.\n   [RFC3209]  Awduche, D., Berger,\
    \ L., Gan, D., Li, T., Srinivasan, V.,\n              and G. Swallow, \"RSVP-TE:\
    \ Extensions to RSVP for LSP\n              Tunnels\", RFC 3209, December 2001.\n\
    \   [RFC3478]  Leelanivas, M., Rekhter, Y., and R. Aggarwal, \"Graceful\n    \
    \          Restart Mechanism for Label Distribution Protocol\", RFC\n        \
    \      3478, February 2003.\n   [RFC3479]  Farrel, A., Ed., \"Fault Tolerance\
    \ for the Label\n              Distribution Protocol (LDP)\", RFC 3479, February\
    \ 2003.\n   [RFC4206]  Kompella, K. and Y. Rekhter, \"Label Switched Paths (LSP)\n\
    \              Hierarchy with Generalized Multi-Protocol Label Switching\n   \
    \           (GMPLS) Traffic Engineering (TE)\", RFC 4206, October 2005.\n   [RFC4220]\
    \  Dubuc, M., Nadeau, T., and J. Lang, \"Traffic Engineering\n              Link\
    \ Management Information Base\", RFC 4220, November\n              2005.\n   [RFC4221]\
    \  Nadeau, T., Srinivasan, C., and A. Farrel, \"Multiprotocol\n              Label\
    \ Switching (MPLS) Management Overview\", RFC 4221,\n              November 2005.\n\
    \   [RFC4378]  Allan, D., Ed., and T. Nadeau, Ed., \"A Framework for\n       \
    \       Multi-Protocol Label Switching (MPLS) Operations and\n              Management\
    \ (OAM)\", RFC 4378, February 2006.\n   [RFC4379]  Kompella, K. and G. Swallow,\
    \ \"Detecting Multi-Protocol\n              Label Switched (MPLS) Data Plane Failures\"\
    , RFC 4379,\n              February 2006.\n   [RFC4385]  Bryant, S., Swallow,\
    \ G., Martini, L., and D. McPherson,\n              \"Pseudowire Emulation Edge-to-Edge\
    \ (PWE3) Control Word for\n              Use over an MPLS PSN\", RFC 4385, February\
    \ 2006.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Loa Andersson\n   Acreo AB\n   Electrum 236\n   SE-146\
    \ 40 Kista\n   Sweden\n   EMail:  loa@pi.se\n   Stewart Bryant\n   Cisco Systems\n\
    \   250, Longwater,\n   Green Park,\n   Reading, RG2 6GB, UK\n   EMail: stbryant@cisco.com\n\
    \   George Swallow\n   Cisco Systems, Inc.\n   1414 Massachusetts Ave\n   Boxborough,\
    \ MA 01719\n   EMail:  swallow@cisco.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
