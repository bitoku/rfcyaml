Abstract This document gives examples of message bodies formatted using S/MIME.
Specifically, it has examples of Cryptographic Message Syntax (CMS) objects and S/MIME messages (including the MIME formatting).
It includes examples of many common CMS formats.
The purpose of this document is to help increase interoperability for S/MIME and other protocols that rely on CMS.
The examples in this document show the structure and format of CMS message bodies, as described in [CMS].
They are useful to implementors who use protocols that rely on CMS, such as the S/MIME message format protocol.
There are also examples of simple S/MIME messages [SMIME MSG] (including the MIME headers).
Every example in this document has been checked by two different implementors.
This strongly indicates (but does not assure) that the examples are correct.
All CMS implementors must read the CMS document carefully before implementing from it.
No one should use the examples in this document as stand alone explanations of how to create CMS message bodies.
This document explicitly does not attempt to cover many PKIX [PKIX] examples.
Documents with examples of that format may be forthcoming.
Also, note that [DVCS], which covers PKIX Data Validation and Certification Server Protocols, has examples of formats for its protocol.
The examples shown here were created and validated by many different people over a long period of time.
Because of this, some of the dates used in the examples are many years in the past.
This, plus the fact that some of the certificates in the examples have very long lifespans, may cause problems in some test situations.
Constants Used in the Examples
This section defines the data used in the rest of the document.
The names of the constants indicate their use.
For example, AlicePrivDSSSign is the private part of Alice's DSS signing key.
Alice is the creator of the message bodies in this document.
Bob is the recipient of the messages.
Diane sometimes gets involved with these folks.
Erica also sometimes gets involved.
Content of Documents ExContent is the following sentence: This is some sample content.
The hex for ExContent is 5468 6973 2069 7320
2073 616d 706c 6520 636f 6e74 656e 742e
The MD5 hash of ExContent is
The SHA 1 hash of ExContent is 406a ec08 5279
The following private keys are needed to create the samples.
To find the public keys, see the certificates in the next section.
53 C5 AB 84 08 4F FF 94 E1
2F E1 D9 30 C8 36 DE 3F 9B BF B7 4C :
DC 5F 69 8A E4 75 D0 37 0C 91 08 95 :
9B DE A7 5E F9 FC F4 9F 2F DD 43 A8 :
8B 54 F1 3F B0 07 08 47
C3 B5 B3 E3 55
08 75 D5 39 76 10 C4 :
78 BD FF 9D B0 84 97 37 F2 E4 51 1B :
B5 E4 09 96 5C F3 7E 5B DB 156 02   21
26 38 D0 14 89 32
AA 39 FB 3E 6D D9 :
30 C3 1E 50 5D DD 9B 59 E2 CD :
AA 05 3D 58 C0 7B A2 36 B8
1F 11 7F C2 BD ED D1 50 FF 98 74 C2 :
OCTET STRING, encapsulates { 312 02   21:
BB 53 83 DE 0F B7 AB :
AC BE EE 34 09 6A 13 F5 F7 05 05 93 :
DF 5E BA 35 56 D9 61 FF 19 7F C9 81 :
E6 F8 6C EA 87 40 70 EF AC 6D 2C 74 :
C3 27 47 76 34 34 6C A6 86 :
60 27 31 47 35 64 4D 95 CD :
67 63 CE B4 9F 56 AC 2F 37 6E 1C EE :
0E BF 28 2D F4 39 90 6F
34 D8 6E 08 :
41 F3 13 D7 2D 39 5E :
FE 33 CB FF 29
3D 05 A2 8F :
B7 F1 8E A2 76
37 B0 79 57 D3 2F 2B :
AB 7F 21 301 02
00 F6 D6 E0 22 21 4C 5F 0A 70 FF 27 :
FC E5 B3 50 6A 9D E5 0F B5 85 96 C6 :
40 FA A8 0A B4 9B 9B 0C 55 C2
F9 37 82 8A 14 C8 F2 93 0E
AD CA 98 2D D1 368 02   65:
96 73 5D F4 C8 5B 12 93 22 73 :
70 7F F5 A4 AA BB 74 FD 3C :
22 6A DA 38 91 2A 86 5B 6C 14 E8 AE :
4C 9E FA 8E 2F 435 02   65:
14 B6 0B 6A 90 5F 86 27 51 E1 B7 A0 :
38 22 48 D7 22 B1
25 98 BA 3D 59 :
53 B7 FA 1E 20 B2 C8 51
51 E7 AB CD F1 502 02   64:
55 65 7B 24 EA :
A3 62 1F 3E 6C 4D
58 88 D9 A1 50
21 96 B8 33 CD E2 C6 95 EE :
98 3F 39 D5 5F F2 A0 93 :
41 5E A6 79 89 85 C8 35 5D 9A 91 5B :
01 DA 19 70 26 17 0F BD A5 22 :
D8 69 01 F1 05 F8 7A 70 D1 BE 83 C6 :
5F 38 CF 1C 2C AA 6A A7 EB 165 02    3:
67 CD 48 4C 9A 0D 8F 98 C2 1B 65 FF :
DA 87 98 D6 30 84 74 E4 FC 59
0B 9B DA DD 6B 6D F8 FC 3B 3C 08 43 :
93 B5 5B FE CE EA FD 68 84
CB 66 CA 28 19
5F E2 10 2B F3 :
34 BA 64 C9 48 28 57 74 D7 55 50 DE :
6A 48 EF 1B 2A 5A 1C 48 7B 1E 21 59 :
C3 60 3B 9B 97 A9 C0 EF 18 66 A9 4E :
62 52 38 84 CE E5 09
9E 2F B3 37 9A FB 0B
40 72 9C 3A 88 85 9C 87 0F 9D 62 12 :
16 68 A8 35 1A 1B 43 E8 38 C0 98 :
69 AF 03 0A 48 32 04 4E E9 0F 8F 77 :
7D 34 30 25 07 568 02   64:
3D 69 CB 31 C4 52 C8 54 55 25
d ce (2 5 29))
Spurious zero bits in bitstring.
00 B6 49 18 3E 8A 44 C1 29
48 93 8B EB :
25 15 51 97 55 DC 8F 53 0E 10 A9 50 :
FC 70 B7 CD 30 54 FD DA DE A8 AA 22 :
B5 A1 AF 8B CC 02 88 E7 8B
00 DD C1 2F DF
02 A4 BF 8A 5D 98
B9 10 D5 179 02
0C EE 57 9B 4B BD DA B6
91 CE A5 62 52
AF 0E C9 1D 5A 51 F5 4F 44
8A 79 61 B4 D5 2F 53 22 44 63 1F 86 :
B8 A3 58 06 25 F8 29 C0 EF BA E0 75 :
OCTET STRING, encapsulates { 312 02   20:
00 E4 4B FF 18 B8 24
D8 41 46 D0 CD 11 3A 04 B3 8E AF 82 :
9D BD 51 1E 17 7A F2 76 2C 2B 86 39 :
16 A0 C5 BE 0E AE
44 5B EF 5E F4 A7 :
29 CB 82 DD AC 44 E9 AA 93
38 B9 1B 3C 1D
97 C9 6A F1 165
66 5A C9 D7 C6 :
EF 38 5F 53 21 2A
2F 62 FE DE 29 9A :
86 67 36 E7 7D 62
78 75 3D 73 A0 :
F3 8F BD C3 C9 C9 B6 F8 BA :
D6 13 9B C3 97 7A CA 6A F0 B8 85 65 :
4E 0F BD A7 A8 F7 54 06 41 BD EB DC :
20 77 90 DF 61 9B 9A
76 84 F1 6A 30 37 D5 :
E0 90 16 F8 80 47 C3 19
6B ED 75 77 :
ED 39 B6 5D 02
93 B3 B0 49 BB DE E7 81 7D 28 99 D0 :
30 DA 36 9F 65 25 29 :
BB A7 0E 7F 0B 369 02
18 5F F9 57 D0 7C 66 89 :
01 AA 1B 07 1F 20 4C B7 C9 7B 56 F7 :
B6 C2 7E AB 73 436 02   64:
57 36 6C 8F 8C 04 76 6C B6 D4 EE 24 :
44 00 F8 80 E2 AF 42 01 A9 0F 14 84 :
F8 E7 00 E0 8F 8C 27 A4 2D 5F A2 E5 :
6D B5 63 C0 AD 44 E9
76 91 A7 19 49 :
2E 46 F8 77 85 4B 3B
87 04 F0 AF D2 :
D8 54 26 95 502 02   64:
0E 1F 7A 2A B2 6E 37 04
AB 39 45 73 :
BA 46 A8 0F 8D 82 5F
88 61 3A FA 74 4A 36 8B :
47 68 5D 50 EB 26 E3 EA 7D 9B 4E 65 :
00 B6 49 18 3E 8A 44 C1 29
48 93 8B EB :
25 15 51 97 55 DC 8F 53 0E 10 A9 50 :
FC 70 B7 CD 30 54 FD DA DE A8 AA 22 :
B5 A1 AF 8B CC 02 88 E7 8B
00 DD C1 2F DF
02 A4 BF 8A 5D 98
B9 10 D5 179 02
0C EE 57 9B 4B BD DA B6
91 CE A5 62 52
AF 0E C9 1D 5A 51 F5 4F 44
8A 79 61 B4 D5 2F 53 22 44 63 1F 86 :
B8 A3 58 06 25 F8 29 C0 EF BA E0 75 :
OCTET STRING, encapsulates { 312 02   21:
OCTET STRING, encapsulates { 26 30  605:
00 D6 FD B8 C0 70 C6 4C 25 EC EA CF :
EA 7C BB A2 62 FA F0 E6 32 3A 53 FF :
B1 92 5A 17 F4 20 E1 99
A5 96 45 23 FC 69 :
65 D0 3A 77 45 24 9E 0C EB 86
AC 21 11 71 44 E3 B2 A8 A9 2E AC 17 :
D2 A3 84 25 63 B5 BC 2F 1E DD F6 21 :
49 D8 19 8E 3F :
39 8D 62 BD 80
00 F3 B8 3F 4A D1 94 B0 91 60 13 41 :
92 0D 8D 44 3F 77 1D FF 96 23 44 08 :
70 C9 1A AF E9 90 94 F2 B0 D5 :
5F 4F 19 85 50 A1 90
75 68 73 B5 368 02   65:
AA 02 B4 5A ED 4E 9D 82
B9 98 41 FC 08 50 1F
DD 94 C6 1B C3 25 C0 82 51 E4 EE 2B :
9A 19 DC 73 ED E9 1D 27 D4 F8 6C 03 :
DD AB 1D 08 7B B5 AC 7F
21 97 5F 7A 60 A8 FD 5A 5C 07 :
DF A8 DE F7 E2 B1
73 74 C8 C4 BE 3F 58 45 30 06 90 :
AliceDSSSignByCarlNoInherit   0 30  732: SEQUENCE { 4 30  667:   SEQUENCE {
commonName (2 5 4 3) :
(X.520 id at (2 5 4))
SEQUENCE { 50 17   13:
OBJECT IDENTIFIER commonName (2 5 4 3) :
(X.520 id at (2 5 4))
53 C5 AB 84 08 4F FF 94 E1
0C D6 F3 44 48 D1 FE 9F AF A4 A1 89 :
2F E1 D9 30 C8 36 DE 3F 9B BF B7 4C :
DC 5F 69 8A E4 75 D0 37 0C 91 08 95 :
C3 B5 B3 E3 55
B8 37 21 2B 62 8B F7 93 CD 277 02  128:
30 C3 1E 50 5D DD 9B 59 E2 CD :
AA 05 3D 58 C0 7B A2 36 B8 6E
90 F8 6D EA 9C C9 21 8A 3B 76 14 :
E9 CE 2E 5D A3 07
95 4A 53 56 B5 E2 F9 73 EC 1A
1F 11 7F C2 BD ED D1 50 FF 98 74 C2 :
14 96 0B A9 7A DD E3 :
3F A9 EC AC 5E DC BD B7 13 11 34 A6 :
43 5B 6F E5 51 BF FA 89 F2 A2 :
07 8D 5B 63 C8
7E 1A F2 24 AB 53 1A B8 27 0D 1E EF :
id ce (2 5 29))
d ce (2 5 29))
(2 5 29 35) :
id ce (2 5 29))
OCTET STRING, encapsulates { 587 30   22:
(2 5 29 14) :
(X.509 id ce (2 5 29))
BE 6C A1 B3 E3 C1 F7
43 70 A4 CE :
id ce (2 5 29))
BIT STRING 0 unused bits, encapsulates { 689 30   45:
SEQUENCE { 691 02   20:
67 6B BF 45 713 02   21:
9F 61 53 52 54 0B 5C B2 DD DA E7 :
76 1D E2 10 52 5B
SEQUENCE { 4 30  405:   SEQUENCE {
SEQUENCE { 104 06    3:
OBJECT IDENTIFIER commonName (2 5 4 3) :
(X.520 id at (2 5 4))
BB 53 83 DE 0F B7 AB :
AC BE EE 34 09 6A 13 F5 F7 05 05 93 :
DF 5E BA 35 56 D9 61 FF 19 7F C9 81 :
E6 F8 6C EA 87 40 70 EF AC 6D 2C 74 :
d ce (2 5 29))
id ce (2 5 29))
OCTET STRING, encapsulates { 325 30   22:
(2 5 29 14) :
(X.509 id ce (2 5 29))
77 D2 B4 D1 B7 4C 8A 8A A3 CE 45 9D :
OBJECT IDENTIFIER subjectAltName (2 5 29 17) :
id ce (2 5 29))
6E 73 21 54 DF F4 BA
7D 49 D3 94 6B 22
64 ED D3 3D D2 A7 42 C5 E8 37 8A :
67 E4 BD 9F F9 FE 74 EF EA :
SEQUENCE { 4 30  400:   SEQUENCE {
6B C7 80 00 56 BC 11 D3 6E 2E :
CD 5D 71 D0 31 30   13:
SEQUENCE { 104 06    3:
OBJECT IDENTIFIER commonName (2 5 4 3) :
(X.520 id at (2 5 4))
01 DA 19 70 26 17 0F BD A5 22 :
46 01 86 36 34 32 CB 07 03
69 01 F1 05 F8 7A 70 D1 BE 83 C6 :
5F 38 CF 1C 2C AA 6A A7 EB 274 02
id ce (2 5 29))
SEQUENCE { 315 06    3:
(2 5 29 35) :
id ce (2 5 29))
(2 5 29 14) :
(X.509 id ce (2 5 29))
OCTET STRING, encapsulates { 355 04   20:
SEQUENCE { 379 06    3:
OBJECT IDENTIFIER subjectAltName (2 5 29 17) :
id ce (2 5 29))
94 21 05 C0 F2 E1 7E 2A CD 9C :
64 3C 21 D6 45 :
OBJECT IDENTIFIER commonName (2 5 4 3) :
(X.520 id at (2 5 4))
OBJECT IDENTIFIER commonName (2 5 4 3) :
(X.520 id at (2 5 4))
FB C6 4C B3 0E 94 09 06 EB 01 D4 B1 :
C8 71 4B C7 45 C0 50
48 93 8B EB :
25 15 51 97 55 DC 8F 53 0E 10 A9 50 :
FC 70 B7 CD 30 54 FD DA DE A8 AA 22 :
CC 02 88 E7 8B
00 DD C1 2F DF
02 A4 BF 8A 5D 98 B9 10 D5 275 02  128:
0C EE 57 9B 4B BD DA B6
91 CE A5 62 52
87 0B C7 CD F0 1C D9 B5 4E 5D 73 DE :
AF 0E C9 1D 5A 51 F5 4F 44
8A 79 61 B4 D5 2F 53
03 66 A0 B1 C0 AD DC :
2C 75 BB E1 6C 44 9C DA 21 6D 4D 47
19 06 94 F4 B1 61 8F
AA 27 CD 1B A9 4D 89 9A D7 8D 18 :
39 84 3F 8B C5 56 4D
basicConstraints (2 5 29 19) :
id ce (2 5 29))
d ce (2 5 29))
(2 5 29 14) :
(X.509 id ce (2 5 29))
BIT STRING 0 unused bits, encapsulates { 624 30   45:
SEQUENCE { 626 02   20:
34 69 2A 8B B1 3C 03 79 94 32 :
SEQUENCE { 68 17   13:
SEQUENCE { 104 06    3:
OBJECT IDENTIFIER commonName (2 5 4 3) :
(X.520 id at (2 5 4))
D8 41 46 D0 CD 11 3A 04 B3 8E AF 82 :
9D BD 51 1E 17 7A F2 76 2C 2B 86 39 :
25 8F B8 4E AB B9 7D D5 96 65 DA :
16 A0 C5 BE 0E AE
44 5B EF 5E F4 A7 :
29 CB 82 DD AC 44 E9 AA 93
38 B9 1B 3C 1D
97 C9 6A F1 275 02
basicConstraints (2 5 29 19) :
id ce (2 5 29))
OCTET STRING, encapsulates { 296 30    3:
SEQUENCE { 298 01    1:
(2 5 29 14) :
(X.509 id ce (2 5 29))
EC 12 5D 2D FF 0F 64 59 7E
3B B5 2D 45 35 9D 49 01
6B B0 37 6F AD E6 74 D7 :
14 41 63 5D CD BE C8 0E :
commonName (2 5 4 3) :
(X.520 id at (2 5 4))
OBJECT IDENTIFIER commonName (2 5 4 3) :
(X.520 id at (2 5 4))
A0 00 17 78 2C EE 7E
52 09 EA BD 05 22 D5 0F F6 FD 46 D7 :
68 4D DD 46 7A 22
BE 8E FF CC DA 39 :
29 A3 39 E5 9F
SEQUENCE { 258 06    3:
id ce (2 5 29))
d ce (2 5 29))
id ce (2 5 29))
3D 20 BC 43 2B
(2 5 29 14) :
(X.509 id ce (2 5 29))
OCTET STRING, encapsulates { 328 04   20:
64 30 99 7D 5C DC 45
d ce (2 5 29))
BIT STRING 0 unused bits, encapsulates { 397 30   45:
55 33 1E 4B E3 2C AC B9 5F 422 02
SEQUENCE { 4 30  405:   SEQUENCE {
6B C7 80 00 56 BC 11 D3 6E 2E :
D5 9A 30 90 31 30   13:
SEQUENCE { 104 06    3:
OBJECT IDENTIFIER commonName (2 5 4 3) :
(X.520 id at (2 5 4))
00 D6 FD B8 C0 70 C6 4C 25 EC EA CF :
EA 7C BB A2 62 FA F0 E6 32 3A 53 FF :
F6 D4 B7 28 0A BB F8 BF 4A 4C 19 3F :
8B 44 1D 95 5D CD 28 C0
d ce (2 5 29))
id ce (2 5 29))
OCTET STRING, encapsulates { 325 30   22:
(2 5 29 14) :
(X.509 id ce (2 5 29))
75 B8 FE ED 4F
OBJECT IDENTIFIER subjectAltName (2 5 29 17) :
id ce (2 5 29))
42 CA 0F 13 07 92 09 1B E0 6F B0 91 :
18 F6 BF 4A FB CC 63 79 FB 81 BF DD :
97 C7 90 6B CB 0A 37 2B 41 6A 03 98 :
C5 1B 3E 32 C8 45
86 01 9C 1C E2 :
OBJECT IDENTIFIER commonName (2 5 4 3) :
(X.520 id at (2 5 4))
BIT STRING 0 unused bits, encapsulates { 173 30   44:
SEQUENCE { 175 02   20:
OBJECT IDENTIFIER commonName (2 5 4 3) :
(X.520 id at (2 5 4))
BIT STRING 0 unused bits, encapsulates { 87 30   45:
00 B3 1F C5 4F 7A 3D EC 76 D5 60 F9 :
DE 79 22 EC 4F B0 90
5A 8B C3 84 BC 66
CarlDSSCRLEmpty   0 30  109: SEQUENCE { 2 30   46:
OBJECT IDENTIFIER commonName (2 5 4 3) :
(X.520 id at (2 5 4))
BIT STRING 0 unused bits, encapsulates { 64 30   45:
SEQUENCE { 66 02   20:
62 3F 36 17 31 58 2E 67 50 79 F5 09 :
4B 8C AD D4 6B F4 64 9F 88 02   21:
commonName (2 5 4 3) :
(X.520 id at (2 5 4))
SEQUENCE { 131 02   16:
34 6B C7 80 00 56 BC 11 D3 6E 2E :
SEQUENCE { 166 06    9:
BB 97 C8 DC EA F1 FA
08 D3 D4 0C 60 5B 1E :
CarlRSACRLForCarl   0 30  236: SEQUENCE { 3 30   87:
commonName (2 5 4 3) :
(X.520 id at (2 5 4))
62 DC D7 09 FF A9 51 2E 8E D9 47 18 :
FA F8 E5 72 DD 4F ED 74 74 E3 F3 65 :
95 84 8D 0E 89 9E EE 9B 0C :
73 2C 1E 7D DC B0 71 C5 :
6E 2A 00 A9 5B :
CarlRSACRLEmpty   0 30  199: SEQUENCE { 3 30   50:
commonName (2 5 4 3) :
(X.520 id at (2 5 4))
F3 20 45 86 1E 0B
6E 7F 83 6D 5F F4 :
34 76 06 59 25 0E 04
BC 22 9C 40 A1 07
FC 44 7C 85 0F 0B :
88 D1 EE E1 0E AF F6 16 74 AD A1 AF :
64 EA A5 9A F6 0B 08 A2 :
DB 95 19 5F A6 A7 B9 39
This section covers examples of small CMS types.
ContentInfo with Data Type, BER
The object is a ContentInfo containing a Data object in BER format that is ExContent. 0
OCTET STRING ' is some sample content.'
ContentInfo with Data Type, DER
The object is a ContentInfo containing a Data object in DER format that is ExContent. 0
43: SEQUENCE { 2 06    9
This is some sample content.'
Basic Signed Content, DSS A SignedData with no attribute certificates, signed by Alice using DSS, just her certificate (not Carl's root cert), no CRL.
The message is ExContent, and is included in the eContent.
There are no signed or unsigned attributes.
SEQUENCE { 4 06    9:   OBJECT
IDENTIFIER signedData (1 2 840 113549 1 7 2) :
This is some sample content.'
53 C5 AB 84 08 4F FF 94 E1 73
2F E1 D9 30 C8 36 DE 3F 9B BF B7 4C :
DC 5F 69 8A E4 75 D0 37 0C 91 08 95 :
78 BD FF 9D B0 84
97 37 F2 E4 51 1B :
B5 E4 09 96 5C F3 7E 5B DB
30 C3 1E 50 5D DD 9B 59 E2 CD :
AA 05 3D 58 C0 7B A2 36 B8 6E
E9 CE 2E 5D A3 07
BIT STRING 0 unused bits, encapsulates { 498 02  128:
24 7D 3D 07 8D 5B 63 C8
d ce (2 5 29))
d ce (2 5 29))
d ce (2 5 29))
(2 5 29 14) :
(X.509 id ce (2 5 29))
d ce (2 5 29))
55 0C A4 19 1F 42 2B 89 71
9F 61 53 52 54
OCTET STRING, encapsulates { 877 30   44:
Basic Signed Content, RSA Same as 4.1, except using RSA signatures.
A SignedData with no attribute certificates, signed by Alice using RSA, just her certificate (not Carl's root cert), no CRL.
The message is ExContent, and is included in the eContent.
There are no signed or unsigned attributes.
30  850: SEQUENCE { 4 06    9
IDENTIFIER signedData (1 2 840 113549 1 7 2) :
This is some sample content.'
SEQUENCE { 92 30  405:
BB 53 83 DE 0F B7 AB :
AC BE EE 34 09 6A 13 F5 F7 05 05 93 :
DF 5E BA 35 56 D9 61 FF 19 7F C9 81 :
E6 F8 6C EA 87 40 70 EF AC 6D 2C 74 :
d ce (2 5 29))
d ce (2 5 29))
(2 5 29 14) :
(X.509 id ce (2 5 29))
77 D2 B4 D1 B7 4C 8A 8A A3 CE 45 9D :
d ce (2 5 29))
7E 80 B1 8D 4D CC :
6E 73 21 54 DF F4 BA
7D 49 D3 94 6B 22
64 ED D3 3D D2 A7 42 C5 E8 37 8A :
67 E4 BD 9F F9 FE 74 EF EA :
SET { 651 30  200:
07 C5 53 24 FA CE 01 1D 0F :
17 13 A7 2A 95 9D 2B E4 03
Basic Signed Content, Detached Content Same as 4.1, except with no eContent.
A SignedData with no attribute certificates, signed by Alice using DSS, just her certificate (not Carl's root cert), no CRL.
The message is ExContent, but the eContent is not included.
There are no signed or unsigned attributes.
30  887: SEQUENCE { 4 06    9:   OBJECT
IDENTIFIER signedData (1 2 840 113549 1 7 2) :
53 C5 AB 84 08 4F FF 94 E1 73
2F E1 D9 30 C8 36 DE 3F 9B BF B7 4C :
DC 5F 69 8A E4 75 D0 37 0C 91 08 95 :
78 BD FF 9D B0 84
62 8B F7 93 CD
30 C3 1E 50 5D DD 9B 59 E2 CD :
AA 05 3D 58 C0 7B A2 36 B8 6E
E9 CE 2E 5D A3 07
BIT STRING 0 unused bits, encapsulates {
24 7D 3D 07 8D 5B 63 C8
d ce (2 5 29))
d ce (2 5 29))
d ce (2 5 29))
OCTET STRING, encapsulates { 641 30   22:
(2 5 29 14) :
(X.509 id ce (2 5 29))
OCTET STRING, encapsulates { 674 04   20:
d ce (2 5 29))
OCTET STRING, encapsulates { 705 30   22:
55 0C A4 19 1F 42 2B 89 71
9F 61 53 52 54
OCTET STRING, encapsulates { 845 30   44:
C8 0F 5A 6C 869 02
66 69 19 BC 68 58 D1 8D B1 9D
Fancier Signed Content Same as 4.1, but includes Carl's root cert, Carl's CRL, some signed and unsigned attributes (Countersignature by Diane).
A SignedData with no attribute certificates, signed by Alice using DSS, her certificate and Carl's root cert, Carl's DSS CRL.
The message is ExContent, and is included in the eContent.
The signed attributes are Content Type, Message Digest and Signing Time; the unsigned attributes are content hint and counter signature.
The message includes also Alice's RSA certificate. 0
This is some sample content.'
BB 53 83 DE 0F B7 AB :
AC BE EE 34 09 6A 13 F5 F7 05 05 93 :
DF 5E BA 35 56 D9 61 FF 19 7F C9 81 :
E6 F8 6C EA 87 40 70 EF AC 6D 2C 74 :
d ce (2 5 29))
d ce (2 5 29))
d ce (2 5 29))
OCTET STRING, encapsulates { 411 30   22:
(2 5 29 14) :
(X.509 id ce (2 5 29))
d ce (2 5 29))
7E 80 B1 8D 4D CC :
6E 73 21 54 DF F4 BA
7D 49 D3 94 6B 22
64 ED D3 3D D2 A7 42 C5 E8 37 8A :
67 E4 BD 9F F9 FE 74 EF EA :
SEQUENCE { 650 30  602:
00 B6 49 18 3E 8A 44 C1 29
C8 71 4B C7 45 C0 50
48 93 8B EB :
25 15 51 97 55 DC 8F 53 0E 10 A9 50 :
FC 70 B7 CD 30 54 FD DA DE A8 AA 22 :
8B CC 02 88 E7 8B
00 DD C1 2F DF
91 CE A5 62 52
87 0B C7 CD F0 1C D9 B5 4E 5D 73 DE :
AF 0E C9 1D 5A 51 F5 4F 44
B8 A3 58 06 25 F8 29 C0 EF BA E0 75 :
BIT STRING 0 unused bits, encapsulates { 1056 02  129:
99 87 74 27 03 66 A0 B1 C0 AD DC :
2C 75 BB E1 6C 44 9C DA 21 6D 4D 47 :
4E B9 60 96 19
19 06 94 F4 B1 61 8F
d ce (2 5 29))
OCTET STRING, encapsulates { 1204 30    3:
SEQUENCE { 1206 01    1:
d ce (2 5 29))
(2 5 29 14) :
(X.509 id ce (2 5 29))
OCTET STRING, encapsulates { 1234 04   20:
34 69 2A 8B B1 3C 03 79 94 32 :
SEQUENCE { 1321 30  667:
SEQUENCE { 1439 02  129:
53 C5 AB 84 08 4F FF 94 E1 73
2F E1 D9 30 C8 36 DE 3F 9B BF B7 4C :
DC 5F 69 8A E4 75 D0 37 0C 91 08 95 :
78 BD FF 9D B0 84
97 37 F2 E4 51 1B :
B5 E4 09 96 5C F3 7E 5B DB 1571 02   21:
62 8B F7 93 CD 1594 02
30 C3 1E 50 5D DD 9B 59 E2 CD :
AA 05 3D 58 C0 7B A2 36 B8 6E
E9 CE 2E 5D A3 07
BIT STRING 0 unused bits, encapsulates { 1729 02  128:
24 7D 3D 07 8D 5B 63 C8
d ce (2 5 29))
BOOLEAN TRUE 1875 04    2:
(X.509 id ce (2 5 29))
OCTET STRING, encapsulates { 1891
d ce (2 5 29))
OCTET STRING, encapsulates { 1904 30   22:
82 2E 6F 87 DE 4A D3 75 E3 :
3D 20 BC 43 2B
(2 5 29 14) :
(X.509 id ce (2 5 29))
OCTET STRING, encapsulates { 1937 04   20:
d ce (2 5 29))
BIT STRING 0 unused bits, encapsulates { 2006 30   45:
SEQUENCE { 2008 02   20:
55 0C A4 19 1F 42 2B 89 71
9F 61 53 52 54
02 7A 5B B7 D5 5B
18 C1 CF 87 EF 7E :
SET { 2279 30  550:
1 2 840 113549 1 9))
1 2 840 113549 1 9))
OCTET STRING, encapsulates { 2429 30   44:
SEQUENCE { 2431 02   20:
3B A5 E0 4A DB 6D 58 E0 19 D1 00
4F 44 9A 57 7A 71 66 68 2453
1A 11 98 D6 1F 1F AF
1 2 840 113549 1 9 16 2))
INTEGER 1 2569 30   38:
1 2 840 113549 1 9)) 2633 31   15:
SET { 2635 17   13:
1 2 840 113549 1 9)) 2663 31
6D AA 20 24 ED 7A EE A5 5E 87
C9 E3 6B F4 F6 7D :
76 AE 3E 58 1F 9B BB BC 7C
6F 5A 3D CB C7 D4 5F C2 80 1B :
9A 62 F5 3B 0D :
6C 33 C3 ED 67 3F 43
All RSA Signed Message Same as 4.2, but includes Carl's RSA root cert (but no CRL).
A SignedData with no attribute certificates, signed by Alice using RSA, her certificate and Carl's root cert, no CRL.
The message is ExContent, and is included in the eContent.
There are no signed or unsigned attributes.
OCTET STRING ' is some sample content.'
41 46 D0 CD 11 3A 04 B3 8E AF 82 :
36 B1 ED E2 50 E2 32 09
25 8F B8 4E AB B9 7D D5 96 65 DA :
16 A0 C5 BE 0E AE
44 5B EF 5E F4 A7 :
29 CB 82 DD AC 44 E9 AA 93
38 B9 1B 3C 1D
97 C9 6A F1 365
d ce (2 5 29))
OCTET STRING, encapsulates { 386 30    3:
SEQUENCE { 388 01    1:
d ce (2 5 29))
(2 5 29 14) :
(X.509 id ce (2 5 29))
EC 12 5D 2D FF 0F 64 59 7E
18 FD E3 56 40 37 A7 07 B5 F0 38 12 :
61 50 ED EF DD 3F
3B B5 2D 45 35 9D 49 01
6B B0 37 6F AD E6 74 D7 :
14 41 63 5D CD BE C8 0E :
SEQUENCE { 589 30  405:
BIT STRING 0 unused bits, encapsulates { 726 30  137:
BB 53 83 DE 0F B7 AB :
AC BE EE 34 09 6A 13 F5 F7 05 05 93 :
DF 5E BA 35 56 D9 61 FF 19 7F C9 81 :
E6 F8 6C EA 87 40 70 EF AC 6D 2C 74 :
d ce (2 5 29))
d ce (2 5 29))
(2 5 29 14) :
(X.509 id ce (2 5 29))
OCTET STRING, encapsulates { 943 04   20:
77 D2 B4 D1 B7 4C 8A 8A A3 CE 45 9D :
d ce (2 5 29))
7E 80 B1 8D 4D CC :
6E 73 21 54 DF F4 BA
7D 49 D3 94 6B 22
64 ED D3 3D D2 A7 42 C5 E8 37 8A :
67 E4 BD 9F F9 FE 74 EF EA :
SET { 1150 30  200:
07 C5 53 24 FA CE 01 1D 0F :
17 13 A7 2A 95 9D 2B E4 03
Multiple Signers Similar to 4.1, but the message is also signed by Diane.
Two signerInfos (one for Alice, one for Diane) with no attribute certificates, each signed using DSS, Alice's and Diane's certificate (not Carl's root cert), no CRL.
The message is ExContent, and is included in the eContent.
There are no signed or unsigned attributes.
30 1463: SEQUENCE { 4 06    9:   OBJECT
IDENTIFIER signedData (1 2 840 113549 1 7 2) :
This is some sample content.'
A0 00 17 78 2C EE 7E 81
61 08 0F A1 9B 51 52 1A DA 59 A8 73 :
2F 12 25 B6 08 CB CA EF
52 09 EA BD 05 22 D5 0F F6 FD 46 D7 :
7E FC 8C 45 72 5B 7E 3E 8F :
68 4D DD 46 7A 22 BE 8E FF CC DA 39 :
29 A3 39 E5 9F
d ce (2 5 29))
d ce (2 5 29))
(2 5 29 35) :
(X.509 id ce (2 5 29))
3E 82 2E 6F 87 DE 4A D3 75 E3 :
3D 20 BC 43 2B
(2 5 29 14) :
(X.509 id ce (2 5 29))
64 30 99 7D 5C DC 45 0B 99 3A 52 2F :
d ce (2 5 29))
OCTET STRING, encapsulates { 445 30   22:
17 0E 3E 5D A8 8C F4 B6 :
55 33 1E 4B E3 2C AC B9 5F 508 02   20:
SEQUENCE { 534 30  667:
53 C5 AB 84 08 4F FF 94 E1 73
2F E1 D9 30 C8 36 DE 3F 9B BF B7 4C :
DC 5F 69 8A E4 75 D0 37 0C 91 08 95 :
78 BD FF 9D B0 84
97 37 F2 E4 51 1B :
B5 E4 09 96 5C F3 7E 5B DB 784 02   21:
62 8B F7 93 CD
30 C3 1E 50 5D DD 9B 59 E2 CD :
AA 05 3D 58 C0 7B A2 36 B8 6E
E9 CE 2E 5D A3 07
BIT STRING 0 unused bits, encapsulates { 942 02  128:
24 7D 3D 07 8D 5B 63 C8
d ce (2 5 29))
(X.509 id ce (2 5 29))
(2 5 29 35) :
(X.509 id ce (2 5 29))
3E 82 2E 6F 87 DE 4A D3 75 E3 :
3D 20 BC 43 2B
(2 5 29 14) :
(X.509 id ce (2 5 29)) 1148 04   22:
OCTET STRING, encapsulates { 1150 04   20:
d ce (2 5 29))
OCTET STRING, encapsulates { 1181 30   22:
BIT STRING 0 unused bits, encapsulates { 1219 30   45:
9F 61 53 52 54
SET { 1269 30   97:
OCTET STRING, encapsulates { 1322 30   44:
SEQUENCE { 1324 02   20:
24 DE 8B 85 F2 16 AF EC 82 61 A9 :
54 D0 2D 04 A1 CC 5A 4F 1346 02
17 ED D5 77 02 EE 75 13 D8 10 BD 3D :
SET { 1379 30   14:
OCTET STRING, encapsulates { 1421 30   44:
SEQUENCE { 1423 02   20:
6E 63 6E E9 5B 83 FA 1445 02   20:
41 ED 49 79 38 :
Signing Using SKI Same as 4.1, but
the signature uses the SKI instead of the issuer/serial number in the cert.
A SignedData with no attribute certificates, signed by Alice using DSS, just her certificate (not Carl's root cert), identified by the SKI, no CRL.
The message is ExContent, and is included in the eContent.
There are no signed or unsigned attributes.
SEQUENCE { 4 06    9:   OBJECT
IDENTIFIER signedData (1 2 840 113549 1 7 2) :
[0] { 19 30  896:
This is some sample content.'
53 C5 AB 84 08 4F FF 94 E1 73
2F E1 D9 30 C8 36 DE 3F 9B BF B7 4C :
DC 5F 69 8A E4 75 D0 37 0C 91 08 95 :
78 BD FF 9D B0 84
97 37 F2 E4 51 1B :
B5 E4 09 96 5C F3 7E 5B DB
30 C3 1E 50 5D DD 9B 59 E2 CD :
AA 05 3D 58 C0 7B A2 36 B8 6E
E9 CE 2E 5D A3 07
BIT STRING 0 unused bits, encapsulates { 498 02  128:
24 7D 3D 07 8D 5B 63 C8
d ce (2 5 29))
d ce (2 5 29))
d ce (2 5 29))
(2 5 29 14) :
(X.509 id ce (2 5 29))
d ce (2 5 29))
55 0C A4 19 1F 42 2B 89 71
9F 61 53 52 54
BE 6C A1 B3 E3 C1 F7
43 70 A4 CE :
OCTET STRING, encapsulates { 873 30   44:
S/MIME multipart/signed Message A full S/MIME message, including MIME, that includes the body part from 4.3 and the body containing the content of the message.
Sep 2002 00:25:21  0300 Content Type: multipart/signed; micalg SHA1; boundary "
NextBoundry Fri, 06 Sep 2002 00:25:21"; protocol "application/pkcs7 signature
" This is a multi part message in MIME format.
NextBoundry Fri, 06 Sep 2002 00:25:21
This is some sample content.
NextBoundry Fri, 06 Sep 2002 00:25:21
Content Type: application/pkcs7 signature; name smime.p7s Content Transfer Encoding:
base64 Content Disposition: attachment; filename smime.p7s MIIDdwYJKoZIhvcNAQcCoIIDaDCCA2QCAQExCTAHBgUrDgMCGjALBgkqhkiG9w0BBwGgggL
gMIIC3DCCApugAwIBAgICAMgwCQYHKoZIzjgEAzASMRAwDgYDVQQDEwdDYXJsRFNTMB4XDT k5MDgxNzAxMTA0OVoXDTM5MTIzMTIzNTk1OVowEzERMA8GA1UEAxMIQWxpY2VEU1MwggG2M IIBKwYHKoZIzjgEATCCAR4CgYEAgY3N7YPqCp45PsJIKKPkR5PdDteoDuxTxauECE//lOFz SH4M1vNESNH n6 koYkv4dkwyDbeP5u/t0zcX2mK5HXQNwyRCJWb3qde
/eTzQKBgCY40BSJMqo5 z5t2UtZakx2IzkEAjVc8ssaMMMeUF3dm1nizaoFP VjAe6I2uG4Hr32KQiWn9HXPSgheSz6Q G3qnMkhijt2FOnOLl2jB80jhbgvMAF8bUmJEYk2 RL34yJVKU1a14vlz7BphNh8Rf8K97dFQ/5h0wtGBSmA5ujY5A4GEAAKBgFzjuVp1FJYLqXr d4z p7Kxe3L23ExE0phaJKBEj2TSGZ3V1ExI9Q1tv5VG/ onyohs JH09B41bY8i7RaWgSu OF1s4GgD/
f6gkgp9Z0XtRdGimJeB/BxUCFGFFJqwYRt1WYcIOQoGiaowqGzVI    NextBoundry Fri, 06 Sep 2002 00:25:21  4.9.
Message A full S/MIME message, including the MIME parts.
> Date: Thu, 31 Oct 2002 16:45:14  0300 Content Type: application/pkcs7 mime; smime type signed data
; name smime.p7m Content Transfer Encoding: base64 Content Disposition: attachment; filename smime.p7m MIIDmQYJKoZIhvcNAQcCoIIDijCCA4YCAQExCTAHBgUrDgMCGjAtBgkqhkiG9w0BBwGgIAQ
nbCElzfy5FEbteQJllzzflvbAhUA4kemGkVmuBPG2o 4NyErYov3k80CgYAmONAUi TKqOfs bdlLWWpMdiM5BAI1XPLLGjDDHlBd3ZtZ4s2qBT1YwHuiNrhuB699ikIlp/R1z0oI Xks kPht6pzJIYo7dhTpzi5dowfNI4W4LzABfG1JiRGJNkS9 MiVSlNWteL5c
SignedData with Attributes A SignedData message with the following list of signedAttributes:
EquivalentLabel 0 30 2047: SEQUENCE { 4 06    9:
IDENTIFIER signedData (1 2 840 113549 1 7 2) :
This is some sample content.'
53 C5 AB 84 08 4F FF 94 E1 73
2F E1 D9 30 C8 36 DE 3F 9B BF B7 4C :
DC 5F 69 8A E4 75 D0 37 0C 91 08 95 :
78 BD FF 9D B0 84
97 37 F2 E4 51 1B :
B5 E4 09 96 5C F3 7E 5B DB
30 C3 1E 50 5D DD 9B 59 E2 CD :
AA 05 3D 58 C0 7B A2 36 B8 6E
E9 CE 2E 5D A3 07
BIT STRING 0 unused bits, encapsulates { 498 02  128:
24 7D 3D 07 8D 5B 63 C8
d ce (2 5 29))
d ce (2 5 29))
d ce (2 5 29))
(2 5 29 14) :
(X.509 id ce (2 5 29))
d ce (2 5 29))
55 0C A4 19 1F 42 2B 89 71
9F 61 53 52 54
1 2 840 113549 1 9))
SEQUENCE { 937 06    3:
OBJECT IDENTIFIER '1 2 5555'
1 2 840 113549 1 9 16 2))
2 3 4 5 6 77' 1093 04   38:
1 2 840 113549 1 9 16 2 2)
1 2 840 113549 1 9 16 2)) 1148 31   94
2 3 4 5 6 7 8' 1164 13   27:
THIS IS A PRIVACY MARK TEST' 1193 31   49:
SET { 1195 30   47:
(1 2 840 113549 1 9 16 2 10)
1 2 840 113549 1 9 16 2))
2 3 4 5 6' 1270 04   43:
'r Buffer' 1315 04   40:
1 2 840 113549 1 9 16 2))
organizationName (2 5 4 10) :
(X.520 id at (2 5 4))
1 2 840 113549 1 9 16 2 3)
1 2 840 113549 1 9 16 2))
SEQUENCE { 1499 04    7:
2 5 4 6) :
(X.520 id at (2 5 4))
(2 5 4 10) :
(X.520 id at (2 5 4))
(2 5 4 11) :
(X.520 id at (2 5 4))
(2 5 4 11) :
(X.520 id at (2 5 4))
2 5 4 6) :
(X.520 id at (2 5 4))
(2 5 4 10) :
(X.520 id at (2 5 4))
(2 5 4 11) :
(X.520 id at (2 5 4))
(2 5 4 11) :
(X.520 id at (2 5 4))
1 2 840 113549 1 9 16 2 9)
1 2 840 113549 1 9 16 2))
2 3 4 5 6 7 9' 1766 13   38
BC 33 37 65 C4 F7 70 5C 17 49 13 :
85 CA BB 52 91 48 59 2029
96 A2 14 8B CF 57 DE B0 48 5F 6C :
Only CA SignedData message with no content or signature, containing only Alices's and Carl's certificates.
SEQUENCE { 49 30  602:
00 B6 49 18 3E 8A 44 C1 29
C8 71 4B C7 45 C0 50
48 93 8B EB :
25 15 51 97 55 DC 8F 53 0E 10 A9 50 :
FC 70 B7 CD 30 54 FD DA DE A8 AA 22 :
8B CC 02 88 E7 8B
00 DD C1 2F DF
4F 55 7F 9D ED BC 61 0D EB 46
91 CE A5 62 52
87 0B C7 CD F0 1C D9 B5 4E 5D 73 DE :
AF 0E C9 1D 5A 51 F5 4F 44
B8 A3 58 06 25 F8 29 C0 EF BA E0 75 :
99 87 74 27 03 66 A0 B1 C0 AD DC :
2C 75 BB E1 6C 44 9C DA 21 6D 4D 47 :
4E B9 60 96 19
19 06 94 F4 B1 61 8F
d ce (2 5 29))
OCTET STRING, encapsulates { 603 30
SEQUENCE { 605 01    1:
d ce (2 5 29))
(2 5 29 14) :
(X.509 id ce (2 5 29))
OCTET STRING, encapsulates { 633 04   20:
34 69 2A 8B B1 3C 03 79 94 32 :
SEQUENCE { 720 30  667:
SEQUENCE { 766 17   13:
53 C5 AB 84 08 4F FF 94 E1 73
2F E1 D9 30 C8 36 DE 3F 9B BF B7 4C :
DC 5F 69 8A E4 75 D0 37 0C 91 08 95 :
78 BD FF 9D B0 84
97 37 F2 E4 51 1B :
B5 E4 09 96 5C F3 7E 5B DB
30 C3 1E 50 5D DD 9B 59 E2 CD :
AA 05 3D 58 C0 7B A2 36 B8 6E
E9 CE 2E 5D A3 07
BIT STRING 0 unused bits, encapsulates { 1128 02  128:
24 7D 3D 07 8D 5B 63 C8
d ce (2 5 29))
(X.509 id ce (2 5 29))
3E 82 2E 6F 87 DE 4A D3 75 E3 :
3D 20 BC 43 2B
(2 5 29 14) :
(X.509 id ce (2 5 29))
OCTET STRING, encapsulates { 1336 04   20:
d ce (2 5 29))
OCTET STRING, encapsulates { 1367 30   22:
BIT STRING 0 unused bits, encapsulates { 1405 30   45:
9F 61 53 52 54
02 7A 5B B7 D5 5B
18 C1 CF 87 EF 7E :
Basic Encrypted Content, TripleDES and RSA An EnvelopedData from Alice to Bob of ExContent using TripleDES for encrypting and RSA for key management.
Does not have an OriginatorInfo. 0
6B C7 80 00 56 BC 11 D3 6E 2E :
CD 5D 71 D0 :
8B C7 73 35 78 26 D6 C7 CF 8C :
49 B6 EC EE 6C 68 33 :
A3 21 1D F0 28 78 1F F7 5D F6 07 73 :
AD 69 31 20 4B 48 A9
1 2 840 113549 3 7) :
1 2 840 113549 3))
Basic Encrypted Content, RC2/128 and RSA Same as 5.1, except using RC2/128 for encryption and RSA for key management.
An EnvelopedData from Alice to Bob of ExContent using RC2/40 for encrypting and RSA for key management.
Does not have an OriginatorInfo or any attributes.
6B C7 80 00 56 BC 11 D3 6E 2E :
CD 5D 71 D0 :
D4 DC 10 E9 D6 3F 00 DB 9C 82 47 D6 :
12 6E 87 84 A0 BA ED
14 36 06 61 D0 C7 64 :
1 2 840 113549 3 2) :
1 2 840 113549 3))
S/MIME application/pkcs7 mime Encrypted Message
A full S/MIME message, including MIME, that includes the body part from 5.1.
MIME Version: 1.0 Message Id:
Date: Tue, 31 Oct 2000 12:00:52  0600
Example 5.3 Content Type: application/pkcs7 mime; name smime.p7m; smime type enveloped data Content Transfer Encoding:
base64 Content Disposition: attachment; filename smime.p7m
MDFbbpXadC DgO8/nUkUNYeNxJtuzubGgzoyEd8Ch4H/dd9gdzTd taTEgS0ipdSJuNnkVY4/M652jKKHR LFf02hosdR8wQwYJKoZIhvcNAQcBMBQGCCqGSIb3DQMHBAgtaMXpRwZRNYAgDsiSf8Z9P43 LrY4OxUk660cu1lXeCSFOSOpOJ7FuVyU
A DigestedData from Alice to Bob of ExContent using SHA 1. 0
This is some sample content.'
An EncryptedData from Alice to Bob of ExContent with no attributes.
87: SEQUENCE { 2 06    9
[0] { 15 30   72:
1 2 840 113549 3 7) :
1 2 840 113549 3))
FA FC ED DB 3F 18 17 1D 38
15 EF 93 3B :
The TripleDES key is: 73 7c 79 1f 25 ea d0 e0 46 29 25
43 52 f7 dc 62 91 e5 cb 26 91 7a da 32 7.2.
EncryptedData with Unprotected Attributes An EncryptedData from Alice to Bob of ExContent with unprotected attributes.
1 2 840 113549 3 7) :
1 2 840 113549 3))
26 ED E3 01 BD 00
Because this document shows examples of S/MIME and CMS messages, this document also inherits all of the security considerations from [SMIME MSG] and [CMS].
The Perl script in Appendix A writes to the user's local hard drive.
A malicious attacker could modify the Perl script in this document.
Be sure to read the Perl code carefully before executing it.
This section contains the binaries of the examples shown in the rest of the document.
The binaries are stored in a modified Base64 format.
There is a Perl program that, when run over the contents of this document, will extract the following binaries and write them out to disk.
How the Binaries and Extractor Works
A line that begins with    is a comment A line that begins with  >
gives the name of a new file to start A line that begins with  < tells to end the file (and checks the file name for sanity)
A line that begins with  anythingelse is a Base64 line
The program writes out a series of files, so you should run this in an empty directory.
The program will overwrite files (if it can), but won't delete other files already in the directory.
Run this program with this document as the standard input, such as: ./extractsample.pl <draft ietf smime examples
The result is a valid Base64 blob that can be processed by any Base64 decoder.
Example Extraction Program #!/usr/bin/perl # CMS Samples extraction program.
v 1.1 # Get all the input as an array of lines @AllIn
# Keep the line counter for error messages $Line  ~ s/^\s //;
# Get rid of leading whitespace chomp($Line);
# Get rid of CR or CRLF at the end of the line if(substr($Line, 0, 1)
# It is a comment
# End the current file else { &DoBase64(substr($Line, 1)) }
# It is a line of Base64 } sub StartNewFile { $TheNewFile
line $LineCount, but the old file, $CurrFile, was open\n" }
# This is needed for Windows, is a noop on Unix $CurrFile
if($CurrFile ne $FileToEnd) { die
$FileToEnd at line $LineCount, but that name didn't match " .
" } if($ThisVal   64) { last }
>DianePrivDSSSign.pri  MIIBSwIBADCCASsGByqGSM44BAEwggEeAoGBALZJGD6KRMEpcZRMAcQSwXp5y1RNqx6B 8  ZMsw6UCQbrAdSxyHFLx0XAUCVdnPza5G3T4oZIhIJ9uhWVShb2Ru3d9pjSu36KCoq6Fnu5  UAFIk4vrJRVRl1Xcj1MOEKlQ/HC3zTBU/
FJYLqXrd4z p7Kxe3L23ExE0phaJKBEj2TSGZ3V1ExI9Q1tv5VG/ onyohs JH09B41bY8  i7RaWgSuOF1s4GgD/
pQhacSOuKeWG01S9TIkRjH4a4o1gGJfgpwO 64HXwQsRjZVKbCgOBhQACgYEAmYd0JwNm  oLHArdwsdbvhbESc2iFtTUdtsWIJ6diuHvI6tJSxo456m3FOAJTJtCVOuWCWGSQB82IM/n  XA 87YaADj/dVwT98jlhkGlPSxYY86V7EIEaQLJiXwUnaB6gtiDZUq5oa6crKnUIMLqifN
OTA4MjIwNzAwMDBaMBMCAgDSFw05OTA4MjIwNzAwMDBaMBMCAgDUFw05OTA4MjQwNzAwMD  BaMAkGByqGSM44BAMDLwAwLAIUfmVSdjP NHMX0feW aDU2G1cfT0CFAJ6W7fVWxjBz4fv  ftok8yqDnDWh
CarlRSACRLEmpty.crl Rest of the sections
oKnjk wkgoo RHk90O16gO7FPFq4QIT/ U4XNIfgzW80RI0f6fr6ShiS/h2T  DINt4/m7 3TNxfaYrkddA3DJEIlZvep175/PSfL91DqItU8
bUmJEYk2RL34yJVKU1a14vlz7BphNh8Rf8K97dFQ/5h0wtGBSmA5ujY5A4GEAAKBgFzjuV  p1FJYLqXrd4z p7Kxe3L23ExE0phaJKBEj2TSGZ3V1ExI9Q1tv5VG/ onyohs JH09B41b
/ZhSAXGKsZfoVi/G7NNTSljf2YUeyxD  KE8H5BQP1Gp2NOM/Kl4vTyg W4o4GBMH8wDAYDVR0TAQH/BAIwADAOBgNVHQ8BAf8EBAMC  BsAwHwYDVR0jBBgwFoAUcEQ gi5vh95K03XjPSC8QyuT8R8wHQYDVR0OBBYEFL5sobPjwf  ftQ3CkzhMB4v3jl/7NMB8GA1UdEQQYMBaBFEFsaWNlRFNTQGV4YW1wbGUuY29tMAkGByqG
n7RrI7MIIC3DCCApugAwIBAgICAMgwCQYHKoZIzjgEAzASMRAwDgYDVQQDEwdDYXJsRFNT  MB4XDTk5MDgxNzAxMTA0OVoXDTM5MTIzMTIzNTk1OVowEzERMA8GA1UEAxMIQWxpY2VEU1  MwggG2MIIBKwYHKoZIzjgEATCCAR4CgYEAgY3N7YPqCp45PsJIKKPkR5PdDteoDuxTxauE  CE//lOFzSH4M1vNESNH n6 koYkv4dkwyDbeP5u/t0zcX2mK5HXQNwyRCJWb3qde fz0ny  /dQ6iLVPE
R6YaRWa4E8baj7g3IStii/eTzQKBgCY40BSJMqo5 z5t2UtZakx2IzkEAjVc8ssaMMMeUF  3dm1nizaoFPVjAe6I2uG4Hr32KQiWn9HXPSgheSz6Q G3qnMkhijt2FOnOLl2jB80jhbgv  MAF8bUmJEYk2RL34yJVKU1a14vlz7BphNh8Rf8K97dFQ/5h0wtGBSmA5ujY5A4GEAAKBgF
MSTYGMjzSTlbt LlJ378jEVyW34 j2hN3UZ6Ir6O/8za  OSmjOeWfQ lVyddbpoFnzMCqzS7FI6OBgTB/
QEAwIGwDAfBgNVHSMEGDAWgBRwRD6CLm H3krTdeM9ILxDK5PxHzAdBgNVHQ4EFgQUvmyh  s PB9 1DcKTOEwHi/
oKnjk wkgoo RHk90O16gO7FPFq4QIT/ U4XNIfgzW80RI0f6fr6ShiS/h2T  DINt4/m7 3TNxfaYrkddA3DJEIlZvep175/PSfL91DqItU8
oKnjk wkgoo RHk90O16gO7FPFq4QIT/ U4XNIfgzW80RI0f6fr6ShiS/h2T  DINt4/m7 3TNxfaYrkddA3DJEIlZvep175/PSfL91DqItU8
oKnjk wkgoo RHk90O16gO7FPFq4QIT/ U4XNIfgzW80RI0f6fr6ShiS/h2T  DINt4/m7 3TNxfaYrkddA3DJEIlZvep175/PSfL91DqItU8
7.2.bin Editor's Address Paul Hoffman Internet Mail Consortium 127 Segre Place Santa Cruz,
