Abstract The SIP REFER method relies on the SIP Specific Event Notification framework.
That framework was revised by RFC 6665.
This document highlights the implications of the requirement changes in RFC 6665, and updates the definition of the REFER method described in RFC 3515 to clarify and disambiguate the impact of those changes.
The SIP REFER method relies on the SIP Specific Event Notification framework.
That framework was revised by [RFC6665].
This document highlights the implications of the requirement changes in RFC 6665, and updates [RFC3515] to clarify and disambiguate the impact of those changes.
Accepting a REFER request (without invoking extensions) results in an implicit SIP Events subscription.
If that REFER was part of an existing dialog, the implicit subscription creates a new, problematic dialog usage within that dialog [RFC5057].
The "norefersub" extension defined in [RFC4488] asks to suppress this implicit subscription, but cannot prevent its creation.
There are implementations in some known specialized environments (such as 3GPP) that use out of signaling agreements to ensure that in dialog REFER requests using the RFC 4488 extension do not create a new subscription inside that dialog.
In the 3GPP environment, the behavior is based on capabilities advertised using media feature tags.
That mechanism does not, however, prevent additional dialog usages when interoperating with implementations that do not support the mechanism.
The extensions in [RFC7614] provide a standardized mechanism that allows avoiding any additional dialog usage.
Conventions Used in This Document
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "
SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
Use of GRUU Is Mandatory Section 4.5.1 of [RFC6665]
makes GRUU [RFC5627] mandatory for notifiers to implement and use as the local target in the subscription created by the REFER request.
A user agent (UA) accepting a REFER that creates a subscription MUST populate its Contact header field with a GRUU.
A UA that might possibly become a notifier (e.g., by accepting a REFER request that creates a subscription) needs to include a GRUU in the Contact header field of dialog forming and target refresh methods (such as INVITE)
This ensures that out of dialog REFER requests corresponding to any resulting INVITE dialogs arrive at this UA.
Extensions can relax this requirement by defining a REFER request that cannot create an implicit subscription, thus not causing the accepting UA to become an RFC 6665 notifier in the context of this dialog.
[RFC7614] is an example of such an extension.
If a peer in an existing dialog has provided a GRUU as its Contact, sending a REFER that might result in an additional dialog usage within that dialog is prohibited.
This is a direct consequence of [RFC6665] requiring the use of GRUU and the requirements in Section 4.5.2 of that document.
A user agent constructing a REFER request that could result in an implicit subscription in a dialog MUST build it as an out of dialog message as defined in [RFC3261], unless the remote endpoint is an older implementation of RFC 3515 that has not been updated to conform to RFC 6665 (as determined by the absence of a GRUU in the remote target).
Thus, the REFER request will have no tag parameter in its To: header field.
Using the "norefersub" option tag [RFC4488] does not change this requirement, even if used in a "Require" header field.
Even if the recipient supports the "norefersub" mechanism, and accepts the request with the option tag in the "Require" header field, it is allowed to return a "Refer Sub" header field with a value of "true" in the response, and create an implicit subscription.
A user agent wishing to identify an existing dialog (such as for call transfer as defined in [RFC5589])
MUST use the "Target Dialog" extension defined in [RFC4538] to do so, and user agents accepting REFER MUST be able to process that extension in requests they receive.
If a user agent can be certain that no implicit subscription will be created as a result of sending a REFER request (such as by requiring an extension that disallows any such subscription [RFC7614]), the REFER request MAY be sent within an existing dialog (whether or not the remote target is a GRUU).
Such a REFER will be constructed with its Contact header field populated with the dialog's local URI as specified in Section 12 of [RFC3261].
As described in Section 4.5.2 of [RFC6665], there are cases where a user agent may fall back to sharing existing dialogs for backwards  compatibility purposes.
This applies to a REFER only when the peer has not provided a GRUU as its Contact in the existing dialog (i.e., when the peer is an implementation of RFC 3515 that has not been updated to conform with RFC 6665).
The 202 Response Code Is Deprecated Section 8.3.1 of [RFC6665]
requires that elements not send a 202 response code to a subscribe request, but use the 200 response code instead.
Any 202 response codes received to a subscribe request are treated as 200s.
These changes also apply to REFER.
Specifically, an element accepting a REFER request MUST NOT reply with a 202 response code and MUST treat any 202 responses received as identical to a 200 response.
Wherever [RFC3515] requires sending a 202 response code, a 200 response code MUST be sent instead.
This document introduces no new security considerations directly.
The updated considerations in [RFC6665] apply to the implicit subscription created by an accepted REFER request.
