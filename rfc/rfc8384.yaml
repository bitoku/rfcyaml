- title: __initial_text__
  contents:
  - '  Transparent Interconnection of Lots of Links (TRILL) Smart Endnodes

    '
- title: Abstract
  contents:
  - "Abstract\n   This document addresses the problem of the size and freshness of\
    \ the\n   endnode learning table in edge Routing Bridges (RBridges), by\n   allowing\
    \ endnodes to volunteer for endnode learning and\n   encapsulation/decapsulation.\
    \  Such an endnode is known as a \"Smart\n   Endnode\".  Only the attached edge\
    \ RBridge can distinguish a \"Smart\n   Endnode\" from a \"normal endnode\". \
    \ The Smart Endnode uses the\n   nickname of the attached edge RBridge, so this\
    \ solution does not\n   consume extra nicknames.  The solution also enables endnodes\
    \ that are\n   Fine-Grained Label (FGL) aware.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8384.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2018 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n   2.  Conventions Used in This Document . . . . . . . . . .\
    \ . . . .   3\n     2.1.  Terminology . . . . . . . . . . . . . . . . . . . .\
    \ . . .   3\n     2.2.  Requirements Language . . . . . . . . . . . . . . . .\
    \ . .   4\n   3.  Solution Overview . . . . . . . . . . . . . . . . . . . . .\
    \ .   4\n   4.  Smart-Hello Mechanism between Smart Endnode and RBridge . . .\
    \   6\n     4.1.  Smart-Hello Encapsulation . . . . . . . . . . . . . . . .  \
    \ 6\n     4.2.  Edge RBridge's Smart-Hello  . . . . . . . . . . . . . . .   8\n\
    \     4.3.  Smart Endnode's Smart-Hello . . . . . . . . . . . . . . .   8\n  \
    \ 5.  Processing Data Packets . . . . . . . . . . . . . . . . . . .  10\n    \
    \ 5.1.  Data-Packet Processing for Smart Endnodes . . . . . . . .  10\n     5.2.\
    \  Data-Packet Processing for Edge RBridge . . . . . . . . .  11\n   6.  Multihoming\
    \ Scenario  . . . . . . . . . . . . . . . . . . . .  12\n   7.  Security Considerations\
    \ . . . . . . . . . . . . . . . . . . .  13\n   8.  IANA Considerations . . .\
    \ . . . . . . . . . . . . . . . . . .  14\n   9.  References  . . . . . . . .\
    \ . . . . . . . . . . . . . . . . .  15\n     9.1.  Normative References  . .\
    \ . . . . . . . . . . . . . . . .  15\n     9.2.  Informative References  . .\
    \ . . . . . . . . . . . . . . .  16\n   Acknowledgements  . . . . . . . . . .\
    \ . . . . . . . . . . . . . .  16\n   Authors' Addresses  . . . . . . . . . .\
    \ . . . . . . . . . . . . .  17\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The IETF TRILL (Transparent Interconnection of Lots of Links)\n\
    \   protocol [RFC6325] [RFC7780] provides optimal pair-wise data frame\n   forwarding\
    \ without configuration, safe forwarding even during periods\n   of temporary\
    \ loops, and support for multipathing of both unicast and\n   multicast traffic.\
    \  TRILL accomplishes this by using IS-IS [IS-IS]\n   [RFC7176] link state routing\
    \ and encapsulating traffic using a header\n   that includes a hop count.  Devices\
    \ that implement TRILL are called\n   \"RBridges\" (Routing Bridges) or \"TRILL\
    \ Switches\".\n   An RBridge that attaches to endnodes is called an \"edge RBridge\"\
    \ or\n   \"edge TRILL Switch\", whereas one that exclusively forwards\n   encapsulated\
    \ frames is known as a \"transit RBridge\" or \"transit TRILL\n   Switch\".  An\
    \ edge RBridge traditionally is the one that encapsulates\n   a native Ethernet\
    \ frame with a TRILL header or that receives a TRILL-\n   encapsulated packet\
    \ and decapsulates the TRILL header.  To\n   encapsulate efficiently, the edge\
    \ RBridge must keep an \"endnode\n   table\" consisting of (Media Access Control\
    \ (MAC), Data Label, TRILL\n   egress switch nickname) sets, for those remote\
    \ MAC addresses in Data\n   Labels currently communicating with endnodes to which\
    \ the edge\n   RBridge is attached.\n   These table entries might be configured,\
    \ received from End Station\n   Address Distribution Information (ESADI) [RFC7357],\
    \ looked up in a\n   directory [RFC7067], or learned from decapsulating received\
    \ traffic.\n   If the edge RBridge has attached endnodes communicating with many\n\
    \   remote endnodes, this table could become very large.  Also, if a MAC\n   address\
    \ / Data Label pair in the table have moved to a different\n   remote TRILL switch,\
    \ it might be difficult for the edge RBridge to\n   notice this quickly; and because\
    \ the edge RBridge is encapsulating to\n   the incorrect egress RBridge, the traffic\
    \ will get lost.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - '2.  Conventions Used in This Document

    '
- title: 2.1.  Terminology
  contents:
  - "2.1.  Terminology\n   BUM: Broadcast, Unknown unicast, and Multicast.\n   Edge\
    \ RBridge: An RBridge providing endnode service on at least one of\n   its ports.\
    \  It is also called an edge TRILL Switch.\n   Data Label: VLAN or FGL.\n   DRB:\
    \ Designated RBridge [RFC6325].\n   ESADI: End Station Address Distribution Information\
    \ [RFC7357].\n   FGL: Fine-Grained Label [RFC7172].\n   IS-IS: Intermediate System\
    \ to Intermediate System [IS-IS].\n   LSP: Link State PDU.\n   PDU: Protocol Data\
    \ Unit.\n   RBridge: Routing Bridge, an alternative name for a TRILL switch.\n\
    \   Smart Endnode: An endnode that has the capability specified in this\n   document\
    \ including learning and maintaining (MAC, Data Label,\n   nickname) entries and\
    \ encapsulating/decapsulating TRILL frame.\n   Transit RBridge: An RBridge that\
    \ exclusively forwards encapsulated\n   frames.  It is also called a transit TRILL\
    \ Switch.\n   TRILL: Transparent Interconnection of Lots of Links\n   [RFC6325][RFC7780].\n\
    \   TRILL ES-IS: TRILL End System to Intermediate System, is a variation\n   of\
    \ TRILL IS-IS designed to operate on a TRILL link among and between\n   one or\
    \ more TRILL switches and end stations on that link [RFC8171].\n   TRILL Switch:\
    \ a device that implements the TRILL protocol; an\n   alternative term for an\
    \ RBridge.\n"
- title: 2.2.  Requirements Language
  contents:
  - "2.2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n"
- title: 3.  Solution Overview
  contents:
  - "3.  Solution Overview\n   The Smart Endnode solution defined in this document\
    \ addresses the\n   problem of the size and freshness of the endnode learning\
    \ table in\n   edge RBridges.  An endnode E, attached to an edge RBridge R, tells\
    \ R\n   that E would like to be a \"Smart Endnode\", which means that E will\n\
    \   encapsulate and decapsulate the TRILL frame, using R's nickname.\n   Because\
    \ E uses R's nickname, this solution does not consume extra\n   nicknames.\n \
    \  Take Figure 1 as the example Smart Endnode scenario: RB1, RB2, and\n   RB3\
    \ are the RBridges in the TRILL domain and SE1 and SE2 are the\n   Smart Endnodes\
    \ that can encapsulate and decapsulate the TRILL\n   packets.  RB1 is the edge\
    \ RB to which SE1 and SE2 have attached.  RB1\n   assigns one of its nicknames\
    \ to be used by SE1 and SE2.\n   Each Smart Endnode, SE1 and SE2, uses RB1's nickname\
    \ when\n   encapsulating and maintains an endnode table of (MAC, Data Label,\n\
    \   TRILL egress switch nickname) for remote endnodes that it (SE1 or\n   SE2)\
    \ is corresponding with.  RB1 does not decapsulate packets\n   destined for SE1\
    \ or SE2 and does not learn (MAC, Data Label, TRILL\n   egress switch nickname)\
    \ for endnodes corresponding with SE1 or SE2,\n   but RB1 does decapsulate and\
    \ does learn (MAC, Data Label, TRILL\n   egress switch nickname) for any endnodes\
    \ attached to RB1 that have\n   not declared themselves to be Smart Endnodes.\n\
    \   Just as an RBridge learns and times out (MAC, Data Label, TRILL\n   egress\
    \ switch nickname), Smart Endnodes SE1 and SE2 also learn and\n   time out endnode\
    \ entries.  However, SE1 and SE2 might also determine,\n   through ICMP messages\
    \ or other techniques that an endnode entry is\n   not successfully reaching the\
    \ destination endnode, and it can be\n   deleted, even if the entry has not timed\
    \ out.\n   If SE1 wishes to correspond with destination MAC D, and no endnode\n\
    \   entry exists, SE1 will encapsulate the packet as an unknown\n   destination,\
    \ or consult a directory [RFC7067] (just as an RBridge\n   would do if there was\
    \ no endnode entry).\n +----------+\n |SE1(Smart |\n |Endnode1) |  \\      +------------------------------+\n\
    \ +----------+   \\    /                                \\\n                 \\\
    \  /+------+   +------+    +-----+    \\   +-----------+\n                 /-+-|\
    \ RB 1 |---|  RB2 |----| RB3 |-----+--|Endnode3   |\n                /  | +------+\
    \   +------+    +-----+     |  |MAC=D      |\n +----------+ /     \\         \
    \                         /   +-----------+\n |SE2(Smart |        \\         \
    \                       /\n | Endnode2)|         +------------------------------+\n\
    \ +----------+\n                     Figure 1: Smart Endnode Scenario\n   The\
    \ mechanism in this document is that the Smart Endnode SE1 issues a\n   Smart-Hello,\
    \ indicating SE1's desire to act as a Smart Endnode,\n   together with the set\
    \ of MAC addresses and Data Labels that SE1 owns.\n   The Smart-Hello is used\
    \ to announce the Smart Endnode capability and\n   parameters (such as MAC address,\
    \ Data Label, etc.).  The Smart-Hello\n   is a type of TRILL ES-IS PDU, which\
    \ is specified in Section 5 of\n   [RFC8171].  The detailed content for a Smart\
    \ Endnode's Smart-Hello is\n   defined in Section 4.\n   If RB1 supports having\
    \ a Smart Endnode neighbor, it also sends Smart-\n   Hellos.  The Smart Endnode\
    \ learns from RB1's Smart-Hellos what RB1's\n   nickname is and which trees RB1\
    \ can use when RB1 ingresses multi-\n   destination frames.  Although Smart Endnode\
    \ SE1 transmits Smart-\n   Hellos, it does not transmit or receive Link State\
    \ PDUs (LSPs) or\n   Extended Level 1 Flooding Scope (E-L1FS) FS LSPs [RFC7780].\n\
    \   Since a Smart Endnode can encapsulate TRILL Data packets, it can\n   cause\
    \ the Inner.Label to be a Fine-Grained Label [RFC7172]; thus,\n   this method\
    \ supports FGL-aware endnodes.  When and how a Smart\n   Endnode decides to use\
    \ the FGL instead of VLANs to encapsulate the\n   TRILL Data packet is out of\
    \ scope in this document.\n"
- title: 4.  Smart-Hello Mechanism between Smart Endnode and RBridge
  contents:
  - "4.  Smart-Hello Mechanism between Smart Endnode and RBridge\n   The subsections\
    \ below describe Smart-Hello messages.\n"
- title: 4.1.  Smart-Hello Encapsulation
  contents:
  - "4.1.  Smart-Hello Encapsulation\n   Although a Smart Endnode is not an RBridge,\
    \ does not send LSPs or\n   maintain a copy of the link state database, and does\
    \ not perform\n   routing calculations, it is required to have a \"Hello\" mechanism\
    \ (1)\n   to announce to edge RBridges that it is a Smart Endnode and (2) to\n\
    \   tell them what MAC addresses it is handling in what Data Labels.\n   Similarly,\
    \ an edge RBridge that supports Smart Endnodes needs a\n   message (1) to announce\
    \ that support, (2) to inform Smart Endnodes\n   what nickname to use for ingress\
    \ and what nickname(s) can be used as\n   egress nickname in a multi-destination\
    \ TRILL Data packet, and (3) the\n   list of Smart Endnodes it knows about on\
    \ that link.\n   The messages sent by Smart Endnodes and by edge RBridges that\
    \ support\n   Smart Endnodes are called \"Smart-Hellos\".  The Smart-Hello is\
    \ a type\n   of TRILL ES-IS PDU, which is specified in [RFC8171].\n   The Smart-Hello\
    \ Payload, both for Smart-Hellos sent by Smart Endnodes\n   and for Smart-Hellos\
    \ sent by edge RBridges, consists of TRILL IS-IS\n   TLVs as described in the\
    \ following two subsections.  The non-extended\n   format is used so TLVs, sub-TLVs,\
    \ and APPsub-TLVs have an 8-bit size\n   and type field.  Both types of Smart-Hellos\
    \ MUST include a Smart-\n   Parameters APPsub-TLV as follows inside a TRILL GENINFO\
    \ TLV:\n                 +-+-+-+-+-+-+-+-+-\n                 |Smart-Parameters|\
    \                 (1 byte)\n                 +-+-+-+-+-+-+-+-+-\n            \
    \     |    Length      |                 (1 byte)\n                 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                 |        Holding Time           |  (2 bytes)\n             \
    \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                 |             Flags \
    \            |  (2 bytes)\n                 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                   Figure 2: Smart-Parameters APPsub-TLV\n   o  Type: APPsub-TLV\
    \ type Smart-Parameters, value is 22.\n   o  Length: 4.\n   o  Holding Time: A\
    \ time in seconds as an unsigned integer.  It has\n      the same meaning as the\
    \ Holding Time field in IS-IS Hellos\n      [IS-IS].  A Smart Endnode and an edge\
    \ RBridge supporting Smart\n      Endnodes MUST send a Smart-Hello at least three\
    \ times during their\n      Holding Time.  If no Smart-Hellos are received from\
    \ a Smart\n      Endnode or edge RBridge within the most recent Holding Time it\n\
    \      sent, it is assumed that it is no longer available.\n   o  Flags: At this\
    \ time, all of the Flags are reserved and MUST be\n      sent as zero and ignored\
    \ on receipt.\n   o  If more than one Smart-Parameters APPsub-TLV appears in a\
    \ Smart-\n      Hello, the first one is used and any following ones are ignored.\n\
    \      If no Smart-Parameters APPsub-TLVs appear in a Smart-Hello, that\n    \
    \  Smart-Hello is ignored.\n"
- title: 4.2.  Edge RBridge's Smart-Hello
  contents:
  - "4.2.  Edge RBridge's Smart-Hello\n   The edge RBridge's Smart-Hello contains\
    \ the following information in\n   addition to the Smart-Parameters APPsub-TLV:\n\
    \   o  RBridge's nickname.  The nickname sub-TLV, specified in\n      Section\
    \ 2.3.2 in [RFC7176], is reused here carried inside a TLV\n      242 (IS-IS router\
    \ capability) in a Smart-Hello frame.  If more\n      than one nickname appears\
    \ in the Smart-Hello, the first one is\n      used and the following ones are\
    \ ignored.\n   o  Trees that RB1 can use when ingressing multi-destination frames.\n\
    \      The Tree Identifiers sub-TLV, specified in Section 2.3.4 in\n      [RFC7176],\
    \ is reused here.\n   o  Smart Endnode neighbor list.  The TRILL Neighbor TLV,\
    \ specified in\n      section 2.5 in [RFC7176], is reused for this purpose.\n\
    \   o  An Authentication TLV MAY also be included.\n"
- title: 4.3.  Smart Endnode's Smart-Hello
  contents:
  - "4.3.  Smart Endnode's Smart-Hello\n   A new APPsub-TLV (Smart-MAC TLV) for use\
    \ by Smart Endnodes is as\n   defined below.  In addition, there will be a Smart-Parameters\
    \ APPsub-\n   TLV and there MAY be an Authentication TLV in a Smart Endnode Smart-\n\
    \   Hello.\n   If there are several VLANs/FGL Data Labels for that Smart Endnode,\n\
    \   the Smart-MAC APPsub-TLV is included several times in the Smart\n   Endnode's\
    \ Smart-Hello.  This APPsub-TLV appears inside a TRILL\n   GENINFO TLV.\n    +-+-+-+-+-+-+-+-+\n\
    \    |Type=Smart-MAC |                          (1 byte)\n    +-+-+-+-+-+-+-+-+\n\
    \    |   Length      |                          (1 byte)\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |F|M|   RSV     |  VLAN/FGL Data Label  |  (4 bytes)\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                          MAC (1)       (6 bytes)                 |\n  \
    \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    |\
    \                      .................                           |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                          MAC (N)       (6 bytes)                 |\n  \
    \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \                  Figure 3: Smart-MAC APPsub-TLV\n   o  Type: TRILL APPsub-TLV\
    \ Type Smart-MAC, value is 23.\n   o  Length: Total number of bytes contained\
    \ in the value field of the\n      TLV, that is, the sum of the length of the\
    \ F/M/RSV/FGL Data Label\n      fields and six times the number of MAC addresses\
    \ present.  So, if\n      there are n MAC addresses, this is 4+6*n.\n   o  F:\
    \ 1 bit.  If it is set to 1, it indicates that the endnode\n      supports FGL\
    \ Data Labels [RFC7172], and that this Smart-MAC\n      APPsub-TLV has an FGL\
    \ in the following VLAN/FGL field.  Otherwise,\n      the VLAN/FGL Data Label\
    \ field is a VLAN ID.  (See below for the\n      format of the VLAN/FGL Data Label\
    \ field).\n   o  M: 1 bit.  If it is set to 1, it indicates multihoming (see\n\
    \      Section 6).  If it is set to 0, it indicates that the Smart\n      Endnodes\
    \ are not using multihoming.\n   o  RSV: 6 bits; reserved for the future use.\n\
    \   o  VLAN/FGL Data Label: 24 bits.  If F is 1, this field is a 24-bit\n    \
    \  FGL Data Label for all subsequent MAC addresses in this APPsub-\n      TLV.\
    \  Otherwise, if F is 0, the lower 12 bits are the VLAN of all\n      subsequent\
    \ MAC addresses in this APPsub-TLV, and the upper 12 bits\n      are not used\
    \ (sent as zero and ignored on receipt).  If there is\n      no VLAN/FGL Data\
    \ Label specified, the VLAN/FGL Data Label is zero.\n   o  MAC(i): This is a 48-bit\
    \ MAC address reachable in the Data Label\n      sent by the Smart Endnode that\
    \ is announcing this APPsub-TLV.\n"
- title: 5.  Processing Data Packets
  contents:
  - "5.  Processing Data Packets\n   The subsections below specify the processing\
    \ of Smart Endnode data\n   packets.  All TRILL Data packets sent to or from Smart\
    \ Endnodes are\n   sent in the Designated VLAN [RFC6325] of the local link but\
    \ do not\n   necessarily have to be VLAN tagged.\n"
- title: 5.1.  Data-Packet Processing for Smart Endnodes
  contents:
  - "5.1.  Data-Packet Processing for Smart Endnodes\n   A Smart Endnode does not\
    \ issue or receive LSPs or E-L1FS FS LSPs or\n   calculate topology.  It does\
    \ the following:\n   o  A Smart Endnode maintains an endnode table of (the MAC\
    \ address of\n      remote endnode, Data Label, the nickname of the edge RBridge's\n\
    \      attached) entries of end nodes with which the Smart Endnode is\n      communicating.\
    \  Entries in this table are populated the same way\n      that an edge RBridge\
    \ populates the entries in its table:\n      *  learning from (source MAC address\
    \ ingress nickname) on packets\n         it decapsulates.\n      *  by querying\
    \ a directory [RFC7067].\n      *  by having some entries configured.\n   o  When\
    \ Smart Endnode SE1 wishes to send unicast frame to remote node\n      D, if the\
    \ (MAC address of remote endnode D, Data Label, nickname)\n      entry is in SE1's\
    \ endnode table, SE1 encapsulates the ingress\n      nickname as the nickname\
    \ of the RBridge (RB1), egress nickname as\n      indicated in D's table entry.\
    \  If D is unknown, SE1 either queries\n      a directory or encapsulates the\
    \ packet as a multi-destination\n      frame, using one of the trees that RB1\
    \ has specified in RB1's\n      Smart-Hello.  The mechanism for querying a directory\
    \ is given in\n      [RFC8171].\n   o  When SE1 wishes to send a Broadcast, Unknown\
    \ Unicast, and\n      Multicast (BUM) packet to the TRILL campus, SE1 encapsulates\
    \ the\n      packet using one of the trees that RB1 has specified.\n   If the\
    \ Smart Endnode SE1 sends a multi-destination TRILL Data packet,\n   the destination\
    \ MAC of the outer Ethernet is the All-RBridges\n   multicast address.\n   The\
    \ Smart Endnode SE1 need not send Smart-Hellos as frequently as\n   normal RBridges.\
    \  These Smart-Hellos could be periodically unicast to\n   the Appointed Forwarder\
    \ RB1.  In case RB1 crashes and restarts, or\n   the DRB changes and SE1 receives\
    \ the Smart-Hello without mentioning\n   SE1, SE1 SHOULD send a Smart-Hello immediately.\
    \  If RB1 is Appointed\n   Forwarder for any of the VLANs that SE1 claims, RB1\
    \ MUST list SE1 in\n   its Smart-Hellos as a Smart Endnode neighbor.\n"
- title: 5.2.  Data-Packet Processing for Edge RBridge
  contents:
  - "5.2.  Data-Packet Processing for Edge RBridge\n   The attached edge RBridge processes\
    \ and forwards TRILL Data packets\n   based on the endnode property rather than\
    \ for encapsulation and\n   forwarding the native frames the same way as the traditional\n\
    \   RBridges.  There are several situations for the edge RBridges as\n   follows:\n\
    \   o  If receiving an encapsulated unicast TRILL Data packet from a port\n  \
    \    with a Smart Endnode, with RB1's nickname as ingress, the edge\n      RBridge\
    \ RB1 forwards the frame to the specified egress nickname,\n      as with any\
    \ encapsulated frame.  However, RB1 SHOULD filter the\n      encapsulation frame\
    \ based on the inner source MAC and Data Label\n      as specified for the Smart\
    \ Endnode.  If the MAC (or Data Label) is\n      not among the expected entries\
    \ of the Smart Endnode, the frame\n      would be dropped by the edge RBridge.\
    \  If the edge RBridge does\n      not perform this check, it makes it easier\
    \ for a rogue end station\n      to inject bogus TRILL Data packets into the TRILL\
    \ campus.\n   o  If receiving a unicast TRILL Data packet with RB1's nickname\
    \ as\n      egress from the TRILL campus, and the destination MAC address in\n\
    \      the enclosed packet is a MAC address that has been listed by a\n      Smart\
    \ Endnode, RB1 leaves the packet encapsulated to that Smart\n      Endnode.  The\
    \ outer Ethernet destination MAC is the destination\n      Smart Endnode's MAC\
    \ address, the inner destination MAC address is\n      either the Smart Endnode's\
    \ MAC address or some other MAC address\n      that the Smart Endnode advertised\
    \ in its Smart Hello, and the\n      outer Ethernet source MAC address is the\
    \ RB1's port MAC address.\n      The edge RBridge still decreases the Hop count\
    \ value by 1, for\n      there is one hop between the RB1 and Smart Endnode.\n\
    \   o  If receiving a multi-destination TRILL Data packet from a port\n      with\
    \ a Smart Endnode, RBridge RB1 forwards the TRILL encapsulation\n      to the\
    \ TRILL campus based on the distribution tree indicated by\n      the egress nickname.\
    \  If the egress nickname does not correspond\n      to a distribution tree, the\
    \ packet is discarded.  If there are any\n      normal endnodes (i.e., endnodes\
    \ that are not Smart Endnodes)\n      attached to the edge RBridge RB1, RB1 decapsulates\
    \ the frame and\n      sends the native frame to these ports possibly pruned based\
    \ on\n      multicast listeners, in addition to forwarding the multi-\n      destination\
    \ TRILL frame to the rest of the campus.\n   o  If RB1 receives a native multi-destination\
    \ data frame, which is\n      sent by an endnode that is not a Smart Endnode,\
    \ from a port,\n      including hybrid endnodes (Smart Endnodes and endnodes that\
    \ are\n      not Smart Endnodes), RB1 will encapsulate it as multi-destination\n\
    \      TRILL Data packet, and send the encapsulated multi-destination\n      TRILL\
    \ Data packet out that same port to the Smart Endnodes\n      attached to the\
    \ port, and also send the encapsulated multi-\n      destination TRILL Data packet\
    \ to the TRILL campus through other\n      ports.\n   o  If RB1 receives a multi-destination\
    \ TRILL Data packet from a\n      remote RBridge, and the exit port includes hybrid\
    \ endnodes (Smart\n      Endnodes and endnodes that are not Smart Endnodes), it\
    \ sends two\n      copies of multicast frames out the port, one as native and\
    \ the\n      other as a TRILL-encapsulated frame.  When a Smart Endnode\n    \
    \  receives a multi-destination TRILL Data packet, it learns the\n      remote\
    \ (MAC address, Data Label, nickname) entry.  A Smart Endnode\n      ignores native\
    \ data frames.  A normal (non-Smart) endnode receives\n      the native frame\
    \ and learns the remote MAC address and ignores the\n      TRILL Data packet.\
    \  This transit solution may bring some\n      complexity for the edge RBridge\
    \ and waste network bandwidth\n      resource, so avoiding the hybrid endnodes\
    \ scenario by attaching\n      the endnodes that are Smart and non-Smart to different\
    \ ports is\n      RECOMMENDED.\n"
- title: 6.  Multihoming Scenario
  contents:
  - "6.  Multihoming Scenario\n   Multihoming is a common scenario for the Smart Endnode.\
    \  The Smart\n   Endnode is on a link attached to the TRILL domain in two places:\
    \ edge\n   RBridges RB1 and RB2.  Take Figure 4 as an example.  The Smart\n  \
    \ Endnode SE1 is attached to the TRILL domain by RB1 and RB2\n   separately. \
    \ Both RB1 and RB2 could announce their nicknames to SE1.\n                  \
    \      . .....................\n                        .  +------+          \
    \ .\n                        .  | RB1  |           .\n                       \
    \ . /+------+           .\n           +----------+ ./            +-----+ .   \
    \ +----------+\n           |SE1(Smart |/.             | RB3 |......| Smart   \
    \ |\n           | Endnode1)| .\\            +-----+ .    | Endnode2 |\n      \
    \     +----------+ . \\                   .    +----------+\n                \
    \        .  +-----+            .\n                        .  | RB2 |   TRILL \
    \   .\n                        .  +-----+   Domain   .\n                     \
    \   .......................\n                      Figure 4: Multihoming Scenario\n\
    \   Smart Endnode SE1 can choose either the nickname of RB1 or RB2 when\n   encapsulating\
    \ and forwarding a TRILL Data packet.  If the active-\n   active load balance\
    \ is considered for the multihoming scenario, the\n   Smart Endnode SE1 could\
    \ use both the nickname of RB1 and RB2 to\n   encapsulate and forward TRILL Data\
    \ packet.  SE1 uses RB1's nickname\n   when forwarding through RB1 and RB2's nickname\
    \ when forwarding\n   through RB2.  This will cause MAC flip-flopping (see [RFC7379])\
    \ of\n   the endnode table entry in the remote RBridges (or Smart Endnodes).\n\
    \   The solution for the MAC flip-flopping issue is to set a multihoming\n   bit\
    \ in the RSV field of the TRILL Data packet.  When remote RBridge\n   RB3 or Smart\
    \ Endnodes receive a data packet with the multihomed bit\n   set, the endnode\
    \ entries (SE1's MAC address, label, RB1's nickname)\n   and (SE1's MAC address,\
    \ label, RB2's nickname) will coexist as\n   endnode entries in the remote RBridge.\
    \  (An alternative solution\n   would be to use the ESADI protocol to distribute\
    \ multiple attachments\n   of a MAC address of a multihoming group.  The ESADI\
    \ is deployed among\n   the edge RBridges (see Section 5.3 of [RFC7357]).\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Smart-Hellos can be secured by using Authentication\
    \ TLVs based on\n   [RFC5310].  If they are not secured, then it is easier for\
    \ a rogue\n   end station that does not posses the required keying material to\
    \ be\n   falsely recognized as a valid Smart Endnode.\n   For general TRILL Security\
    \ Considerations, see [RFC6325].  As stated\n   there, since end stations are\
    \ connected to edge RBridge ports by\n   Ethernet, those ports MAY require end\
    \ stations to authenticate\n   themselves using [IEEE802.1X] and authenticate\
    \ and encrypt traffic\n   to/from the RBridge port with [IEEE802.1AE].\n   If\
    \ they misbehave, Smart Endnodes can forge arbitrary ingress and\n   egress nicknames\
    \ in the TRILL headers of the TRILL Data packets they\n   construct.  Decapsulating\
    \ at egress RBridges or remote Smart Endnodes\n   that believe such a forged ingress\
    \ nickname would send future traffic\n   destined for the inner-source MAC address\
    \ of the TRILL data frame to\n   the wrong edge RBridge if data-plane learning\
    \ is in use.  Because of\n   this, an RBridge port should not be configured to\
    \ support Smart\n   Endnodes unless the end stations on that link are trusted\
    \ or can be\n   adequately authenticated.\n   As with any end station, Smart Endnodes\
    \ can forge the outer MAC\n   addresses of packets they send (see Section 6 of\
    \ [RFC6325].)  Because\n   they encapsulate TRILL Data packets, they can also\
    \ forge inner MAC\n   addresses.  The encapsulation performed by Smart Endnodes\
    \ also means\n   they can send data in any Data Label, which means they must be\n\
    \   trusted in order to enforce a security policy based on Data Labels.\n   The\
    \ TRILL-Hello is a type of TRILL ES-IS and is defined in [RFC8171].\n   Receiving\
    \ and processing TRILL-Hello for RBridges and Smart Endnodes\n   would not bring\
    \ more security and vulnerability issues than the TRILL\n   ES-IS security defined\
    \ in [RFC8171].\n   For added security against the compromise of data due to its\n\
    \   misdelivery for any reason, including the above, end-to-end\n   encryption\
    \ and authentication should be considered; that is,\n   encryption and authentication\
    \ from source end station to destination\n   end station.\n   The mechanism described\
    \ in this document requires Smart Endnodes to\n   be aware of the MAC address(es)\
    \ of the TRILL edge RBridge(s) to which\n   they are attached and the egress RBridge\
    \ nickname from which the\n   destination of the packets is reachable.  With that\
    \ information,\n   Smart Endnodes can learn a substantial amount about the topology\
    \ of\n   the TRILL domain.  Therefore, there could be a potential security\n \
    \  risk when the Smart Endnodes are not trusted or are compromised.\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   IANA has allocated APPsub-TLV type numbers for the\
    \ Smart-MAC and\n   Smart-Parameters APPsub-TLVs.  The \"TRILL APPsub-TLV Types\
    \ under\n   IS-IS TLV 251 Application Identifier 1\" registry has been updated\
    \ as\n   follows.\n              +-----------+-------------------+------------+\n\
    \              |  Protocol |    Description    | Reference  |\n              +-----------+-------------------+------------+\n\
    \              |     22    |  Smart-Parameters |  RFC 8384  |\n              |\
    \     23    |     Smart-MAC     |  RFC 8384  |\n              +-----------+-------------------+------------+\n\
    \                                  Table 1\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [IS-IS]    International Organization for Standardization,\n\
    \              \"Information technology -- Telecommunications and\n          \
    \    information exchange between systems -- Intermediate\n              System\
    \ to Intermediate System intra-domain routeing\n              information exchange\
    \ protocol for use in conjunction with\n              the protocol for providing\
    \ the connectionless-mode network\n              service (ISO 8473)\", ISO/IEC\
    \ 10589:2002, Second Edition,\n              2002.\n   [RFC2119]  Bradner, S.,\
    \ \"Key words for use in RFCs to Indicate\n              Requirement Levels\"\
    , BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n       \
    \       <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC5310]  Bhatia, M.,\
    \ Manral, V., Li, T., Atkinson, R., White, R.,\n              and M. Fanto, \"\
    IS-IS Generic Cryptographic\n              Authentication\", RFC 5310, DOI 10.17487/RFC5310,\
    \ February\n              2009, <https://www.rfc-editor.org/info/rfc5310>.\n \
    \  [RFC6325]  Perlman, R., Eastlake 3rd, D., Dutt, D., Gai, S., and A.\n     \
    \         Ghanwani, \"Routing Bridges (RBridges): Base Protocol\n            \
    \  Specification\", RFC 6325, DOI 10.17487/RFC6325, July 2011,\n             \
    \ <https://www.rfc-editor.org/info/rfc6325>.\n   [RFC7172]  Eastlake 3rd, D.,\
    \ Zhang, M., Agarwal, P., Perlman, R., and\n              D. Dutt, \"Transparent\
    \ Interconnection of Lots of Links\n              (TRILL): Fine-Grained Labeling\"\
    , RFC 7172,\n              DOI 10.17487/RFC7172, May 2014,\n              <https://www.rfc-editor.org/info/rfc7172>.\n\
    \   [RFC7176]  Eastlake 3rd, D., Senevirathne, T., Ghanwani, A., Dutt,\n     \
    \         D., and A. Banerjee, \"Transparent Interconnection of Lots\n       \
    \       of Links (TRILL) Use of IS-IS\", RFC 7176,\n              DOI 10.17487/RFC7176,\
    \ May 2014,\n              <https://www.rfc-editor.org/info/rfc7176>.\n   [RFC7357]\
    \  Zhai, H., Hu, F., Perlman, R., Eastlake 3rd, D., and O.\n              Stokes,\
    \ \"Transparent Interconnection of Lots of Links\n              (TRILL): End Station\
    \ Address Distribution Information\n              (ESADI) Protocol\", RFC 7357,\
    \ DOI 10.17487/RFC7357,\n              September 2014, <https://www.rfc-editor.org/info/rfc7357>.\n\
    \   [RFC7780]  Eastlake 3rd, D., Zhang, M., Perlman, R., Banerjee, A.,\n     \
    \         Ghanwani, A., and S. Gupta, \"Transparent Interconnection\n        \
    \      of Lots of Links (TRILL): Clarifications, Corrections, and\n          \
    \    Updates\", RFC 7780, DOI 10.17487/RFC7780, February 2016,\n             \
    \ <https://www.rfc-editor.org/info/rfc7780>.\n   [RFC8171]  Eastlake 3rd, D.,\
    \ Dunbar, L., Perlman, R., and Y. Li,\n              \"Transparent Interconnection\
    \ of Lots of Links (TRILL):\n              Edge Directory Assistance Mechanisms\"\
    , RFC 8171,\n              DOI 10.17487/RFC8171, June 2017,\n              <https://www.rfc-editor.org/info/rfc8171>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n     \
    \         2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n        \
    \      May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [IEEE802.1AE]\n              IEEE, \"IEEE Standard\
    \ for Local and metropolitan area\n              networks -- Media Access Control\
    \ (MAC) Security\",\n              IEEE 802.1AE.\n   [IEEE802.1X]\n          \
    \    IEEE, \"IEEE Standard for Local and metropolitan area\n              networks\
    \ -- Port-Based Network Access Control\",\n              IEEE 802.1X.\n   [RFC7067]\
    \  Dunbar, L., Eastlake 3rd, D., Perlman, R., and I.\n              Gashinsky,\
    \ \"Directory Assistance Problem and High-Level\n              Design Proposal\"\
    , RFC 7067, DOI 10.17487/RFC7067, November\n              2013, <https://www.rfc-editor.org/info/rfc7067>.\n\
    \   [RFC7379]  Li, Y., Hao, W., Perlman, R., Hudson, J., and H. Zhai,\n      \
    \        \"Problem Statement and Goals for Active-Active Connection\n        \
    \      at the Transparent Interconnection of Lots of Links\n              (TRILL)\
    \ Edge\", RFC 7379, DOI 10.17487/RFC7379, October\n              2014, <https://www.rfc-editor.org/info/rfc7379>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The contributions of the following persons are gratefully\n\
    \   acknowledged: Mingui Zhang, Weiguo Hao, Linda Dunbar, Kesava Vijaya\n   Krupakaran,\
    \ and Andrew Qu.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Radia Perlman\n   Dell EMC\n   176 South Street\n   Hopkinton,\
    \ MA  01748\n   United States of America\n   Phone: +1-206-291-367\n   Email:\
    \ radiaperlman@gmail.com\n   Fangwei Hu\n   ZTE Corporation\n   No.889 Bibo Rd\n\
    \   Shanghai  201203\n   China\n   Phone: +86 21 68896273\n   Email: hu.fangwei@zte.com.cn\n\
    \   Donald Eastlake\n   Huawei Technologies\n   1424 Pro Shop Court\n   Davenport,\
    \ FL 33896\n   United States of America\n   Phone: +1-508-333-2270\n   Email:\
    \ d3e3e3@gmail.com\n   Ting Liao\n   Huawei Technologies\n   Nanjing, Jiangsu\
    \  210012\n   China\n   Email: liaoting1@huawei.com\n"
