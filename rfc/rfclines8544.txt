Abstract This document describes an extension to Extensible Provisioning Protocol (EPP) object mappings that is designed to support assigning an organization to any existing object (domain, host, contact) as well as any future objects.
There are many entities, such as registrars, resellers, DNS service operators, and privacy proxies, involved in the domain registration business.
These kinds of entities are supported in the Extensible Provisioning Protocol (EPP) by the "organization" entities in [RFC8543].
This document provides a way to associate any EPP object such as domain names in [RFC5731], hosts in [RFC5732], and contacts in [RFC5733] to "organization" entities in [RFC8543].
The examples provided in this document are used for the domain object for illustration purposes.
The host and contact object could be extended in the same way as the domain object.
Organization object identifiers, defined in [RFC8543], MUST be known to the server before the organization object can be associated with the EPP object.
This document is specified using XML 1.0 as described in [W3C.REC xml 20081126] and XML Schema notation as described in [W3C.REC xmlschema 1 20041028] and [W3C.REC xmlschema 2 20041028].
Conventions Used in This Document
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "
SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14
when, and only when, they appear in all capitals, as shown here.
In examples, "C:" represents lines sent by a protocol client, and "S:" represents lines returned by a protocol server.
Indentation and white space in examples are provided only to illustrate element relationships and are not a required feature of this specification.
Unless stated otherwise, XML specifications and examples provided in this document MUST be interpreted in the character case presented.
The XML namespace prefix "orgext" is used for the namespace "urn:ietf:params:xml:
implementations MUST NOT depend on it; instead, they should employ a proper namespace aware XML parser and serializer to interpret and output the XML documents.
This extension adds additional elements to EPP object mappings such as the EPP domain name mapping [RFC5731].
Only the new elements are described here.
The organization identifier provides the ID of an organization.
Its corresponding element is <orgext:id>, which refers to the <org:
id> element defined in [RFC8543].
All organization objects are identified by a server unique identifier.
A "role" attribute is used to represent the relationship that the organization has to the EPP object.
Any given object MUST have at most one associated organization ID for any given role value.
A detailed description of the EPP syntax and semantics can be found in the EPP core protocol specification [RFC5730].
The command mappings described here are specifically for assigning organizations to EPP objects.
EPP Query Commands EPP provides three commands to retrieve EPP object information:
<check> to determine if an object can be provisioned within a repository, <info> to retrieve detailed information associated with an object, and <transfer> to retrieve object transfer status information.
This extension does not add any elements to the EPP <check> command or <check
> response described in the EPP object mapping.
This extension does not add any elements to the EPP <info> command described in the EPP object mapping.
However, additional elements are defined for the <info> response in the EPP object mapping.
When an <info> command has been processed successfully, the EPP <resData> element MUST contain child elements as described in the EPP object extensions.
In addition, the EPP <extension> element SHOULD contain a child <orgext:
This element is returned if the object has data that is associated with this extension and that is based on server policy.
This element or its ancestor element MUST identify the extension namespace "urn:ietf:
> element contains the following child elements:  Zero or more <orgext:id
> elements are allowed that contain the identifier of the organization, as defined in Section 3.1.
The "role" attribute is used to represent the relationship that the organization has to the object.
See Section 7.3 of [RFC8543] for a list of values.
Example <info> response for an authorized client with multiple organizations: S:<?xml version "1.0" encoding "UTF 8" standalone "no"?
Example <info> response for an authorized client with no organization: S:<?xml version "1.0" encoding "UTF 8" standalone "no"?
An EPP error response MUST be returned if an <info> command cannot be processed for any reason.
This extension does not add any elements to the EPP <transfer> query command or <transfer> query response described in the EPP object mapping.
EPP Transform Commands EPP provides five commands to transform EPP objects: <create> to create an instance of an object, <delete> to delete an instance of an object, <renew> to extend the validity period of an object, <transfer> to manage the object sponsorship changes, and <update> to change information associated with an object.
This extension defines additional elements for the EPP <create
> command described in the EPP object extensions.
No additional elements are defined for the EPP <create> response.
The EPP <create> command provides a transform operation that allows a client to create an object.
In addition to the EPP command elements described in the EPP object extensions, the command MUST contain an <extension> element, and the <extension> element MUST contain a child <orgext:create> element.
This element is used if the client wants to associate data defined in this extension to the object.
This element or its ancestor element MUST identify the extension namespace "urn:ietf:
The <orgext:create> element contains the following child elements:  One or more <orgext:
> elements that contain the identifier of the organization, as defined in Section 3.1.
The "role" attribute is used to represent the relationship that the organization has to the object.
See Section 7.3 of [RFC8543] for a list of values.
Example <create> command with only one organization: C:<?xml version "1.0" encoding "UTF 8" standalone "no"?
Example <create> command with multiple organizations: C:<?xml version "1.0" encoding "UTF 8" standalone "no"?
When a <create> command has been processed successfully, the EPP response is as described in the EPP object extension.
An EPP error response MUST be returned if a <create> command cannot be processed for any reason.
This extension does not add any elements to the EPP <delete> command or <delete> response described in the EPP object mapping.
This extension does not add any elements to the EPP <renew> command or <renew> response described in the EPP object mapping.
This extension does not add any elements to the EPP <transfer> command or <transfer> response described in the EPP object mapping, but after a successful transfer of an object with an assigned organization, the handling of the assigned organization is dependent on the organization roles and server policy.
This extension defines additional elements for the EPP <update
> command described in the EPP domain mapping [RFC5731], host mapping [RFC5732], and contact mapping [RFC5733].
No additional elements are defined for the EPP <update> response.
The EPP <update> command provides a transform operation that allows a client to modify the attributes of an object.
In addition to the EPP <update> command elements, the command MUST contain an <extension> element, and the <extension> element MUST contain a child <orgext:
This element is used if the client wants to update the object with data defined in this extension.
This element or its ancestor element MUST identify the extension namespace "urn:ietf:
> element contains the following child elements:  An OPTIONAL
<orgext:add> element that contains one or more <orgext:id
> elements, as defined in Section 3.1, that add nonexistent organization roles to the object.
id> element MUST have a non empty organization identifier value.
The server SHOULD validate that the <orgext:id> element role does not exist.
<orgext:rem> element that contains one or more <orgext:id> elements, as defined in Section 3.1, that remove organization roles from the object.
id> element MAY have an empty organization identifier value.
The server SHOULD validate the existence of the <orgext:id> element role and the organization identifier if provided.
> element that contains one or more <orgext:id
> elements, as defined in Section 3.1, that change organization role identifiers for the object.
The existing organization identifier value will be replaced for the defined role.
The server SHOULD validate the existence of the <orgext:id> element role.
> element MUST be provided.
Example <update> command, adding a reseller: C:<?xml version "1.0" encoding "UTF 8" standalone "no"?
Example <update> command, adding multiple organizations: C:<?xml version "1.0" encoding "UTF 8" standalone "no"?
Example <update> command, removing a reseller: C:<?xml version "1.0" encoding "UTF 8" standalone "no"?
Example <update> command, removing multiple organizations:
C:<?xml version "1.0" encoding "UTF 8" standalone "no"?
Example <update> command, updating reseller identifier: C:<?xml version "1.0" encoding "UTF 8" standalone "no"?
Example <update> command, updating multiple organization identifiers:
C:<?xml version "1.0" encoding "UTF 8" standalone "no"?
When an extended <update> command has been processed successfully, the EPP response is as described in the EPP object extension.
An EPP error response MUST be returned if an <update> command cannot be processed for any reason.
An attempt to add one organization ID or multiple organization IDs with a particular role value when at least one of them already exists does not change the object at all.
A server SHOULD notify clients that object relationships exist by sending a 2305 error response code.
An attempt to remove an organization ID or multiple organization IDs with a particular role value when at least one of them does not exist does not change the object at all.
A server SHOULD notify clients that object relationships do not exist by sending a 2305 error response code.
An attempt to change an organization ID or multiple organization IDs with a particular role value when at least one of them does not exist does not change the object at all.
A server SHOULD notify clients that object relationships do not exist by sending a 2305 error response code.
Response format with error value elements is defined in Section 2.6 of [RFC5730].
An EPP object mapping is specified in XML Schema notation.
The formal syntax presented here is a complete schema representation of the object mapping suitable for automated validation of EPP XML instances.
The BEGIN and END tags are not part of the schema; they are used to note the beginning and ending of the schema for URI registration purposes.
xml version "1.0" encoding "UTF 8"?
epp:orgext 1.0" xmlns "http://www.w3.org/2001/XMLSchema" elementFormDefault
Child elements found in EPP commands
<element name "create" type "orgext:
Organization identifier with required role   <complexType name "orgIdType"> <simpleContent> <extension base "token">
Child elements of the <orgext:create> command.
All elements must be present at time of creation.
Agent identifier or the organization, e.g., registrar, reseller, privacy proxy, etc.
Child elements of <orgext:update> command
Agent identifier of the organization, e.g., registrar, reseller, privacy proxy, etc.
Child response element   <element name "infData" type "orgext:infDataType"/
Agent identifier the organization, e.g., registrar, reseller, privacy proxy, etc.
<element name "id" type "orgext:orgIdType
" minOccurs "0" maxOccurs "
Internationalization Considerations EPP is represented in XML, which provides native support for encoding information using the Unicode character set [UNICODE] and its more compact representations, including UTF 8.
Conformant XML processors recognize both UTF 8 [RFC3629] and UTF 16 [RFC2781].
Though XML includes provisions to identify and use other character encodings through use of an "encoding" attribute in an <?
> declaration, use of UTF 8 is RECOMMENDED.
As an extension of the EPP object mapping, the elements and element content described in this document MUST inherit the internationalization conventions used to represent higher layer domain and core protocol structures present in an XML instance that includes this extension.
This document uses URNs to describe XML namespaces and XML schemas conforming to a registry mechanism described in [RFC3688].
IANA has assigned the following URI.
orgext 1.0 Registrant Contact: IESG XML: None.
Namespace URIs do not represent an XML specification.
: See the "Formal Syntax" section of RFC 8544 (this document).
The EPP extension described in this document has been registered by IANA in the "Extensions for the Extensible Provisioning Protocol (EPP)" registry described in [RFC7451].
The details of the registration are as follows: Name of Extension: Organization Extension for the Extensible Provisioning Protocol
RFC 8544 Registrant Name and Email Address: IESG,
Any IPR Disclosure: None Status:
The object mapping extension described in this document does not provide any other security services or introduce any additional considerations beyond those described by [RFC5730], [RFC5731], [RFC5732], and [RFC5733] or those caused by the protocol layers used by EPP.
