- title: __initial_text__
  contents:
  - "            SUGGESTIONS FOR IMPROVED HOST TABLE DISTRIBUTION\n     This RFC may\
    \ be something unique among modern-day RFC's, an RFC\nthat actually is a request\
    \ for comments.  The issue dealt with is that\nof a naming registry update procedure,\
    \ both as exists currently and what\ncould exist in the future.  None of the proposed\
    \ solutions are intended\nas standards at this time; rather it is hoped that a\
    \ general consensus\nwill emerge as the appropriate solution, leaving eventually\
    \ to the\nadoption of standards.\n     I am somewhat dissatisfied with the current\
    \ level of Internet name\nservice and name registry updating.  Each site is expected\
    \ to\nindividually maintain a copy of the [SRI-NIC]<NETINFO>HOSTS.TXT file,\n\
    and in fact has to, since SRI-NIC is simply not reliable enough to\ndepend upon\
    \ as a name server.  Neither the Tenex operating system nor\nthe Foonly computer\
    \ are known for exceptional reliability or\nperformance.  Probably they serve\
    \ the NIC's internal operations well;\nthat is not at issue.  What is needed is\
    \ a name service that is\navailable at all times.  Only then could a site sacrifice\
    \ maintaining\nits own local copy of \"the host table\".\n     The NIC indirectly\
    \ acknowledges this, by providing a service by\nwhich the entire Internet name\
    \ registry can be dumped, as well as\nANONYMOUS FTP access to the <NETINFO>HOSTS.TXT\
    \ file.  The problem is,\nsome individual has to know to retrieve the latest version\
    \ of the file\nfrom the NIC.  The NIC has not always been careful to announce\
    \ updates\nto the name registry.  My experience with maintaining an independent\n\
    name registry from the NIC's in the past leads me to appreciate the\nNIC's problems.\n\
    \     There also seems to be no good automated way to cross-check the\nversion\
    \ at the local site with the NIC's.  It is clearly inefficient to\ngo to the effort\
    \ of retrieving the same version of the host table that\nalready has been installed\
    \ on site.\n                             SOME SOLUTIONS\n     One could argue\
    \ that a solution is to replace or augment the\npresent SRI-NIC system with VAX\
    \ Unix system(s) dedicated to name service\nand network information.  A reliable\
    \ and highly-responsive name service\nwould ultimately lead to the elimination\
    \ of the necessity to maintain\ncopies of the registry locally.  This solution\
    \ requires money, time, and\neffort, which may or may not be immediately available;\
    \ it must therefore\nbe considered a longer-term solution.\nhave several suggestions\
    \ in this area, and would like to hear comments\n(I said this was an RFC that\
    \ requested comments!):\n     (1) a new protocol by which the NIC could ship updated\
    \ name\nregistries to the hosts itself.  This would take the form of a server\n\
    process on each site listening on a registered port for updates from\ncertain\
    \ \"trusted\" sites (specifically SRI-NIC but possibly other sites\nas well).\
    \  This would allow for nearly immediate updates for cooperating\nsites, provided\
    \ that the hosts in question are up.  There should be some\nsort of checksum applied\
    \ to the updated name registry, to make sure it\narrived complete and intact.\n\
    \     (2) a new protocol by which the NIC will report the current\n\"version\"\
    \ of the host table.  Tenex and TOPS-20 sites would find the use\nof the file\
    \ generation number natural.  I presently maintain a\nSYSTEM:HOSTS.TXT with the\
    \ same generation as it existed on the NIC, and\njust check at the NIC from time\
    \ to time to see if the generation number\nchanged there.  I would like to automate\
    \ this.\n     (3) A variation on (1), whereby the NIC would mail the updated host\n\
    table to a mailing list of \"host table update\" recepients and each site\nwould\
    \ establish its own update procedures.  This is the simplest to\nimplement for\
    \ the NIC, but is fraught with all sorts of problems.  Mail\nis not a good means\
    \ for bulk-shipping files to many recepients,\nespecially when the files are likely\
    \ to become hugh.\n     I like (1) best of these three, because that would guarantee\n\
    immediate updating without a local necessity to periodically poll the\nNIC.  That\
    \ does place the burden on the NIC to make sure all sites\nreceive the update,\
    \ and also requires that the NIC remember which sites\nare dead to retry the update\
    \ later.  This leads me to what I think is\nthe best solution, which is:\n   \
    \  (4) A combination of (1) and (2).  The NIC will ship updates to all\nhosts\
    \ which are registered with it to receive the updates, and will try\nonly once.\
    \  Each site, as part of its system startup procedure, will run\na program to\
    \ poll the NIC for a possible update and if one is available\nretrieve it.  As\
    \ a backup, there could also be a periodic poll on, say,\na daily basis.\n"
