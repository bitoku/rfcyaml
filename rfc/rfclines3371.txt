Abstract This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in TCP/IP based internets.
In particular, it defines objects for managing networks using Layer 2 Tunneling Protocol (L2TP).
1.0 Introduction This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in the Internet Community.
In particular, it describes managed objects used for managing L2TP devices.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
The SNMP Management Framework presently consists of five major components: An overall architecture, described in RFC 2571
Mechanisms for describing and naming objects and events for the purpose of management.
The first version of this Structure of Management Information (SMI) is called SMIv1 and described in STD 16, RFC 1155
[RFC1155], STD 16, RFC 1212 [RFC1212] and RFC 1215 [RFC1215].
The second version, called SMIv2, is described in STD 58, RFC 2578 [RFC2578], STD 58, RFC 2579
[RFC2579] and STD 58, RFC 2580
Message protocols for transferring management information.
The first version of the SNMP message protocol is called SNMPv1 and described in STD 15, RFC 1157
A second version of the SNMP message protocol, which is not an Internet standards track protocol, is called SNMPv2c and described in RFC 1901
[RFC1901] and RFC 1906 [RFC1906].
The third version of the message protocol is called SNMPv3 and described in RFC 1906
[RFC1906], RFC 2572 [RFC2572] and RFC 2574
Protocol operations for accessing management information.
The first set of protocol operations and associated PDU formats is described in STD 15, RFC 1157 [RFC1157].
A second set of protocol operations and associated PDU formats is described in RFC 1905 [RFC1905].
A set of fundamental applications described in RFC 2573 [RFC2573] and the view based access control mechanism described in RFC 2575
A more detailed introduction to the current SNMP Management Framework can be found in RFC 2570 [RFC2570].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
Objects in the MIB are defined using the mechanisms defined in the SMI.
This memo specifies a MIB module that is compliant to the SMIv2.
A MIB conforming to the SMIv1 can be produced through the appropriate translations.
The resulting translated MIB must be semantically equivalent, except where objects or events are omitted because no translation is possible (use of Counter64).
Some machine readable information in SMIv2 will be converted into textual descriptions in SMIv1 during the translation process.
However, this loss of machine readable information is not considered to change the semantics of the MIB.
The objects defined in this MIB are to be used when describing Layer Two Tunneling Protocol (L2TP) tunnels.
The L2TP protocol is defined in [RFC2661].
This MIB consists of seven groups briefly described below:
l2tpConfigGroup l2tpStatsGroup These two groups of objects provide information on the configuration, state and statistics of the L2TP protocol, its tunnels and sessions.
These groups are mandatory for implementors of this MIB.
This optional group of objects provides configuration, state and statistical information for L2TP tunnel endpoint domains.
A L2TP tunnel endpoint domain is considered to be a collection of L2TP devices typically belonging to a common administrative domain or geographic location.
This optional group contains mapping tables to assist management applications to map between protocol identifiers and table indices.
This group provides the state and statistics information for L2TP tunnels which are being transported by UDP/IP.
This group is mandatory for L2TP implementations that support L2TP over UDP/IP.
This group is optional for SNMP agents which support both authentication and privacy of SNMP messages for the management of L2TP keys.
This group contains the notifications that could be generated by a L2TP implementation.
This group is optional for L2TP implementations that could potentially overflow the L2TP Domain tables 32 bit statistics counters in less than an hour.
3.1 Relationship to the Interface MIB
This section clarifies the relationship of this MIB to the Interfaces MIB [RFC2863].
Several areas of correlation are addressed in the following subsections.
The implementor is referred to the Interfaces MIB document in order to understand the general intent of these areas.
This MIB contains several tables which are extensions to the IP Tunnel MIB described in [RFC2667] which itself defines extensions to the Interface MIB [RFC2863].
An L2TP tunnel is represented as a separate identifiable logical interface sub layer.
The tunnel stack layering model is described in [RFC2667].
In addition to that described in [RFC2667]
an L2TP tunnel will not be at the top of the ifStack on a L2TP device that is acting as a L2TP Network Server (LNS).
In this case PPP interfaces will be layered on top of the tunnel interface.
In the example diagram below, the interface layering is shown as it might appear at the LNS.
The ifStackTable is used to describe the layering of the interface sub layers.
For the example given above the ifTable and ifStackTable may appear as follows:
PPP interface #1 4    ppp(23)
PPP interface #2 5    ppp(23)
PPP interface #3 6    ppp(23)
The corresponding ifStack table entries would then be: ifStackTable
Access Concentrator (LAC) tunnel interfaces on the other hand
appear at the top of the interface layering stack.
In this case the layering model is as described in [RFC2667].
However in order to support the tunneling of packets received from interfaces carrying framed PPP packets on the LAC to the LNS (and the propagation of decapsulated PPP packets to that interface)
This is further described in section 3.4.
Except where noted in the tables below, all objects MUST be supported from the ifGeneralInformationGroup and one of the following three groups:
depending on the particular implementation.
The following tables describe how objects from the ifGeneralInformationGroup and ifPacketGroup (similar support should be provided for the high and very high capacity packet groups) are to be interpreted and supported for L2TP tunnel interfaces.
All Interface MIB objects not listed in the above groups for L2TP tunnel interfaces MUST be supported as described in [RFC2863].
For UDP/IP transports the MTU should be 65467 (65535 60(IP) 8(UDP)).
Setting ifAdminStatus to 'up' injects a 'Local Open' request into the tunnel FSM.
Setting ifAdminStatus to 'down' injects a 'Tunnel Close' event into the tunnel FSM.
Setting ifAdminStatus to 'testing' is not currently defined but could be used to test tunnel connectivity.
lowerLayerDown' down due to state of lower layer interface(s).
The total number of octets received on the tunnel including control and payload octets.
The total number of packets received on the tunnel including control and payload packets.
The total number of received packets that were discarded on both control and payload channels.
The total number of packets received in error including control and payload packets.
The total number of octets transmitted from the tunnel including control and payload octets.
The total number of packets transmitted from the tunnel including control and payload packets.
The total number of discarded packets that were requested to be transmitted including control and payload packets.
The total number of packets that were requested to be transmitted that were in error including control and payload packets.
Refer to the Interface MIB.
ifXTable.ifLinkUpDownTrapEnable Default set to enabled(1).
3.2  Relationship to other MIBs 3.2.1  Relationship to the IP Tunnel MIB
The IP Tunnel MIB [RFC2667] describes tunnel interfaces that have an ifType of tunnel(131).
The IP Tunnel MIB is considered to contain a collection of objects common to all IP tunneling protocols, including L2TP.
In addition to the IP Tunnel MIB, tunnel encapsulation specific MIBs (like this MIB) extend the IP Tunnel MIB to further describe encapsulation specific information.
Implementation of the IP Tunnel MIB is required for L2TP tunnels over IP.
3.3  L2TP Tunnel Creation Tunnel creation is detailed for tunnels over IP in the IP Tunnel MIB.
The creation of a tunnelIfEntry in [RFC2667] when the encapsulation method is "l2tp" will have the side effect of creating entries in the l2tpTunnelConfigTable, l2tpTunnelStatsTable and the l2tpUdpStatsTable's.
The creation of L2TP tunnel interfaces over transports other than IP is expected to be defined in the MIB definition for that specific L2TP tunnel transport.
The l2tpSessionMapTable table allows management applications to determine which session within a tunnel a particular interface (either a PPP or DS0 interface) is mapped to.
On the LAC it also provides a management application the ability to map a particular physical or virtual interface terminating a PPP link to a particular L2TP tunnel.
This is required since the interface stacking as performed (and instrumented by the ifStackTable) on the LNS
cannot be applied at the LAC.
The following diagram illustrates the conceptual binding that occurs.
The stacking of the individual interface stacks would be described by the ifStackTable.
4.0 L2TP Object Definitions L2TP
IMPORTS Integer32, Unsigned32, Counter32, Gauge32, Counter64, transmission, MODULE IDENTITY, OBJECT TYPE, NOTIFICATION TYPE FROM SNMPv2
SMI TEXTUAL CONVENTION, RowStatus, TruthValue, StorageType FROM SNMPv2
TC SnmpAdminString FROM SNMP FRAMEWORK MIB OBJECT GROUP, MODULE COMPLIANCE, NOTIFICATION GROUP FROM SNMPv2
CONF InterfaceIndex FROM IF MIB; l2tp    MODULE IDENTITY LAST UPDATED
Occam Networks 77 Robin Hill Road Santa Barbara, CA, 93117
Black Storm Networks 110 Nortech Parkway San Jose, CA,
408 941 0500 Email:  pcalhoun@bstormnetworks.com
Ross Wheeler Postal: DoubleWide Software, Inc. 2953
Bunker Hill Lane Suite 101 Santa Clara
Tunneling Protocol Extensions WG Working Group Area:
The MIB module that describes managed objects of general use by the Layer Two Transport Protocol."
"200208230000Z"   23 August 2002 DESCRIPTION "
"A period of time measured in units of .001 of seconds when used in conjunction with the DISPLAY HINT will show seconds and fractions of second with a resolution of .001 of a second."
Definitions of significant branches   l2tpNotifications
The L2TP Scalar Configuration Group
"This object defines the administrative state of the L2TP protocol.
Setting this object to 'disabled' causes all tunnels to be immediately disconnected and no further tunnels to be either initiated or accepted.
The value of this object must be maintained in non volatile memory."
Setting this object to 'true' will prevent any new tunnels and/or sessions to be either initiated or accepted but does NOT disconnect any active tunnels/sessions.
Setting this object to true(1) causes all domains and their respective tunnels to transition to the draining state.
Note that when this occurs the 'xxxDraining' status objects of the domains and their tunnels should reflect that they are 'draining'.
Setting this object has no affect on the domains or their tunnels 'xxxDrainTunnels' configuration objects.
To cancel a drain this object should be set to false(2).
The object l2tpDrainingTunnels reflects the current L2TP draining state.
The value of this object must be maintained in non volatile memory."
The L2TP Scalar Status and Statistics Group
Supported versions are identified via a two octet pairing where the first octet indicates the version and the second octet contains the revision."
"This object identifies the Vendor name of the L2TP protocol stack."
"This object defines the firmware revision for the L2TP protocol stack."
"This object indicates if the local L2TP is draining off sessions from all tunnels."
The L2TP Domain Configuration Table
current DESCRIPTION "The L2TP Domain configuration table.
This table contains objects that can be used to configure the operational characteristics of a tunnel domain.
There is a 1 1 correspondence between conceptual rows of this table and conceptual rows of the l2tpDomainStatsTable."
current DESCRIPTION "An L2TP Domain configuration entry.
An entry in this table may correspond to a single endpoint or a group of tunnel endpoints.
l2tpDomainConfigDrainTunnels TruthValue, l2tpDomainConfigAuth INTEGER, l2tpDomainConfigSecret SnmpAdminString,
l2tpDomainConfigTunnelSecurity INTEGER, l2tpDomainConfigTunnelHelloInt Integer32, l2tpDomainConfigTunnelIdleTO Integer32, l2tpDomainConfigControlRWS Integer32,
, l2tpDomainConfigControlMaxRetxTO Integer32, l2tpDomainConfigPayloadSeq INTEGER, l2tpDomainConfigReassemblyTO L2tpMilliSeconds, l2tpDomainConfigProxyPPPAuth TruthValue, l2tpDomainConfigStorageType StorageType,
l2tpDomainConfigStatus RowStatus } l2tpDomainConfigId OBJECT
The identifier, usually in the form of a Domain Name (full or partial), describing a single tunnel endpoint or a domain of tunnel endpoints.
This is typically used as a 'handle' to identify the tunnel configuration requirements for both incoming and outgoing tunnel connection attempts.
Both the LAC and  LNS could use information provided in the Host Name AVP attribute however the tunnel initiator could use other means not specified to identify the domain's tunnel configuration requirements.
For example; three rows in this table have l2tpDomainConfigId values of 'lac1.isp.com', 'isp.com' and 'com'.
A tunnel endpoint then identifies itself as 'lac1.isp.com' which would match the 'lac1.isp.com' entry in this table.
A second tunnel endpoint then identifies itself as 'lac2.isp.com'.
This endpoint is then associated with the 'isp.com' entry of this table."
This object defines the administrative state of this tunnel domain.
Setting this object to disabled(2) causes all tunnels to be immediately disconnected and no further tunnels to be either initiated or accepted.
Note that all columnar objects corresponding to this conceptual row cannot be modified when the administrative state is enabled EXCEPT those objects which specifically state otherwise."
Setting this object to 'true' will prevent any new tunnels and/or sessions from being either initiated or accepted but does NOT disconnect any active tunnels/sessions for this tunnel domain.
Setting this object to true(1) causes all tunnels within this domain to transition to the draining state.
Note that when this occurs the l2tpTunnelStatsDrainingTunnel status objects of all of this domain's tunnels should reflect that they are 'draining'.
Setting this object has no effect on this domain's associated tunnels l2tpTunnelConfigDrainTunnel configuration objects.
To cancel a drain this object should be set to false(2).
Setting this object to false(2) when the L2TP object l2tpDrainTunnels is true(1) has no affect, all domains and their tunnels will continue to drain.
"This object describes how tunnel peers belonging to this domain are to be authenticated.
The value simple(2) indicates that peers are authenticated simply by their host name as described in the Host Name AVP.
The value challenge(3) indicates that all peers are challenged to prove their identification.
This mechanism is described in the L2TP protocol."
REFERENCE "RFC 2661 Section 5.1
This object is used to configure the shared secret used during the tunnel authentication phase of tunnel establishment.
This object MUST be accessible only via requests using both authentication and privacy.
The agent MUST report an empty string in response to get, get next and get bulk requests."
INTEGER { none(1), other(2), ipSec(3) }
"This object defines whether this tunnel domain requires that all tunnels are to be secured.
The value of ipsec(3) indicates that all tunnel packets, control and session, have IP Security headers.
The type of IP Security headers (AH, ESP etc) and how they are further described is outside the scope of this document."
"This object defines the interval in which Hello (or keep alive) packets are to be sent by local peers belonging to this tunnel domain.
The value zero effectively disables the sending of Hello packets.
This object may be modified when the administrative state is enabled for this conceptual row."
"This object defines the period of time that an established tunnel belonging to this tunnel domain with no active sessions will wait before disconnecting the tunnel.
A value of zero indicates that the tunnel will disconnect immediately after the last session disconnects.
A value of  1 leaves the tunnel up indefinitely.
This object may be modified when the administrative state is enabled for this conceptual row."
This object defines the control channel receive window size for tunnels belonging to this domain.
It specifies the maximum number of packets the tunnel peer belonging to this domain can send without waiting for an acknowledgement from this peer.
This object defines the maximum number of retransmissions which the L2TP stack will attempt for tunnels belonging to this domain before assuming that the peer is no longer responding."
"This object defines the maximum retransmission timeout interval which the L2TP stack will wait for tunnels belonging to this domain before retransmitting a control packet that has not been acknowledged.
This object determines whether or not session payload packets will be requested to be sent with sequence numbers from tunnel peers belonging to this domain.
The value onDemand(1) allows the L2TP implementation to initiate payload sequencing when necessary based on local information (e.g: during LCP/NCP negotiations or for CCP).
The value never(2) indicates that L2TP will never initiate sequencing but will do sequencing if asked.
The value always(3) indicates that L2TP will send the Sequencing
Required AVP during session establishment.
"This object defines the number of milliseconds that local peers of this tunnel domain will wait before processing payload packets that were received out of sequence (which are waiting for the packet(s) to put them in sequence).
A low value increases the chance of delayed packets to be discarded (which MAY cause the PPP decompression engine to reset) while a high value may cause more queuing and possibly degrade throughput if packets are truly lost.
The default value for this object is zero which will result in all delayed packets being lost."
"This object is used to configure the sending or acceptance of the PPP Proxy Authentication AVP's on the LAC or LNS.
Conceptual rows having the value 'permanent' must allow write access at a minimum to: l2tpDomainConfigAdminState and l2tpDomainConfigDrainTunnels at all times l2tpDomainConfigSecret if l2tpDomainConfigAuth has been configured as 'challenge'
It is an implementation issue to decide if a SET for a readOnly or permanent row is accepted at all.
In some contexts this may make sense, in others it may not.
If a SET for a readOnly or permanent row is not accepted at all, then a 'wrongValue' error must be returned."
The status of this Domain entry.
Columnar objects corresponding to this conceptual row may be modified according to their description clauses when this RowStatus object is 'active'."
Domain Status and Statistics Table   l2tpDomainStatsTable    OBJECT
current DESCRIPTION "The L2TP Domain Status and Statistics table.
This table contains objects that can be used to describe the current status and statistics of a tunnel domain.
There is a 1 1 correspondence between conceptual rows of this table and conceptual rows of the l2tpDomainConfigTable."
current DESCRIPTION "An L2TP Domain Stats entry.
An entry in this table may correspond to a single endpoint or a group of tunnel endpoints.
l2tpDomainStatsFailedTunnels Counter32, l2tpDomainStatsFailedAuths Counter32, l2tpDomainStatsActiveTunnels Gauge32, l2tpDomainStatsTotalSessions Counter32, l2tpDomainStatsFailedSessions Counter32, l2tpDomainStatsActiveSessions Gauge32, l2tpDomainStatsDrainingTunnels TruthValue, l2tpDomainStatsControlRxOctets Counter32, l2tpDomainStatsControlRxPkts Counter32,
Counter32, l2tpDomainStatsPayloadTxPkts Counter32, l2tpDomainStatsControlHCRxOctets Counter64, l2tpDomainStatsControlHCRxPkts Counter64, l2tpDomainStatsControlHCTxOctets Counter64, l2tpDomainStatsControlHCTxPkts Counter64, l2tpDomainStatsPayloadHCRxOctets Counter64,
l2tpDomainStatsPayloadHCRxPkts Counter64, l2tpDomainStatsPayloadHCRxDiscs Counter64, l2tpDomainStatsPayloadHCTxOctets Counter64, l2tpDomainStatsPayloadHCTxPkts Counter64 } l2tpDomainStatsTotalTunnels OBJECT TYPE SYNTAX
"This object returns the total number of tunnels that have successfully reached the established state for this tunnel domain."
"This object returns the number of tunnels that failed (eg: connection timeout, unsupported or malformed AVP's etc) to reach the established state for this tunnel domain."
"This object returns the number of failed tunnel connection attempts for this domain because the tunnel peer failed authentication."
"This object returns the number of tunnels that are currently active for this domain."
{ l2tpDomainStatsEntry 4 } l2tpDomainStatsTotalSessions OBJECT TYPE SYNTAX
"This object returns the total number of sessions that have successfully reached the established state for this tunnel domain."
{ l2tpDomainStatsEntry 5 } l2tpDomainStatsFailedSessions OBJECT
"This object returns the number of sessions that failed (eg: connection timeout, unsupported or malformed AVP's etc) to reach the established state for this tunnel domain."
"This object returns the number of sessions that are currently active for this domain."
"This object indicates if this domain is draining off sessions from all tunnels."
"This object returns the number of control channel octets received for this tunnel domain."
"This object returns the number of control packets received for this tunnel domain."
"This object returns the number of control channel octets that were transmitted to tunnel endpoints for this domain."
"This object returns the number of control packets that were transmitted to tunnel endpoints for this domain."
"This object returns the number of payload channel octets that were received for this tunnel domain."
"This object returns the number of payload packets that were received for this tunnel domain."
"This object returns the number of received payload packets that were discarded by this tunnel domain."
"This object returns the number of payload channel octets that were transmitted to tunnel peers within this tunnel domain."
"This object returns the number of payload packets that were transmitted to tunnel peers within this tunnel domain."
These objects are all   64 bit versions of the above 32 bit counters.
These   objects all have the same basic semantics as their   32 bit counterparts, however, their syntax has been   extended to 64 bits.
"This object is a 64 bit version of l2tpDomainStatsControlRxPkts."
"This object is a 64 bit version of l2tpDomainStatsControlTxOctets."
"This object is a 64 bit version of l2tpDomainStatsControlTxPkts."
"This object is a 64 bit version of l2tpDomainStatsPayloadRxPkts."
"This object is a 64 bit version of l2tpDomainStatsPayloadRxDiscs."
"This object is a 64 bit version of l2tpDomainStatsPayloadTxPkts."
"The L2TP tunnel configuration table.
This table contains objects that can be used to (re)configure the operational characteristics of a single L2TP tunnel.
There is a 1 1 correspondence between conceptual rows of this table and conceptual rows of the l2tpTunnelStatsTable.
Entries in this table have the same persistency characteristics as that of the tunnelConfigTable."
current DESCRIPTION "A L2TP tunnel interface configuration entry.
Entries in this table come and go as a result of protocol interactions or on management operations.
The latter occurs when a row is instantiated in the tunnelConfigTable row and the encapsulation method is 'l2tp'.
l2tpTunnelConfigControlRWS Integer32, l2tpTunnelConfigControlMaxRetx Integer32, l2tpTunnelConfigControlMaxRetxTO Integer32, l2tpTunnelConfigPayloadSeq INTEGER, l2tpTunnelConfigReassemblyTO L2tpMilliSeconds, l2tpTunnelConfigTransport INTEGER, l2tpTunnelConfigDrainTunnel
TruthValue, l2tpTunnelConfigProxyPPPAuth TruthValue } l2tpTunnelConfigIfIndex OBJECT TYPE SYNTAX
"This value for this object is equal to the value of ifIndex of the Interfaces MIB for tunnel interfaces of type L2TP."
The tunnel domain that this tunnel belongs to.
A LNS tunnel endpoint will typically inherit this value from the endpoint domain table.
A LAC may be provided with this information during tunnel setup.
When a zero length string is returned this tunnel does not belong belong to any particular domain."
"This object describes how L2TP tunnel peers are to be authenticated.
The value 'simple' indicates that peers are authenticated simply by their host name as described in the Host Name AVP.
The value 'challenge' indicates that all peers are challenged to prove their identification.
This mechanism is described in the L2TP protocol.
This object cannot be modified when the tunnel is in a connecting or connected state."
"This object is used to configure the shared secret used during the tunnel authentication phase of tunnel establishment.
This object cannot be modified when the tunnel is in a connecting or connected state.
This object MUST be accessible only via requests using both authentication and privacy.
The agent MUST report an empty string in response to get, get next and get bulk requests."
"This object defines whether this tunnel is to be secured.
The value of 'ipSec' indicates that all tunnel packets, control and session, have IP Security headers.
The type of IP Security headers (AH, ESP etc) and how they are further described is outside the scope of this document.
This object cannot be modified when the tunnel is in a connecting or connected state."
"This object defines the interval in which Hello (or keep alive) packets are to be sent to the tunnel peer.
The value zero effectively disables the sending of Hello packets.
Modifications to this object have immediate effect.
"This object defines the period of time that an established tunnel with no sessions will wait before disconnecting the tunnel.
A value of zero indicates that the tunnel will disconnect immediately after the last session disconnects.
A value of  1 leaves the tunnel up indefinitely.
Modifications to this object have immediate effect.
"This object defines the control channel receive window size.
It specifies the maximum number of packets the tunnel peer can send without waiting for an acknowledgement from this peer.
This object cannot be modified when the tunnel is in a con  necting or connected state."
"This object defines the number of retransmissions which the tunnel will attempt before assuming that the peer is no longer responding.
A value of zero indicates that this peer will not attempt to retransmit an unacknowledged control packet.
Modifications to this object have immediate effect.
"This object defines the maximum retransmission timeout interval which the tunnel will wait before retrans  mitting a control packet that has not been acknowledged.
Modifications to this object have immediate effect.
"This object determines whether or not session payload packets will be requested to be sent with sequence numbers from tunnel peers belonging to this domain.
The value onDemand(1) allows the L2TP implementation to initiate payload sequencing when necessary based on local information (e.g: during LCP/NCP negotiations or for CCP).
The value never(2) indicates that L2TP will never initiate sequencing but will do sequencing if asked.
The value always(3) indicates that L2TP will send the Sequencing
Required AVP during session establishment.
Modifications to this object have immediate effect.
"This object defines the number of milliseconds that this tunnel will wait before processing payload packets that were received out of sequence (which are waiting for the packet(s) to put them in sequence).
A low value increases the chance of delayed packets to be discarded (which MAY cause the PPP decompression engine to reset) while a high value may cause more queuing and possibly degrade throughput if packets are truly lost.
The default value for this object is zero which will result in all delayed packets being lost.
Modifications to this object have immediate effect.
"This object defines the underlying transport media that is in use for this tunnel entry.
Different tunnel transports may define MIB extensions to the L2TP tunnel table to realize the transport layer.
For example if the value of this object is 'udpIp' then the value of ifIndex for this table may be used to determine state from the l2tpUdpStatsTable.
This object cannot be modified when the tunnel is in a connecting or connected state."
Setting this object to 'true' will prevent any new session from being either initiated or accepted but does NOT disconnect any active sessions for this tunnel.
Note that when this occurs the l2tpTunnelStatsDrainingTunnel status object of this tunnel should reflect that it is 'draining'.
To cancel a drain this object should be set to false(2).
Setting this object to false(2) when the L2TP objects l2tpDrainTunnels or l2tpDomainConfigDrainTunnels
is true(1) has no affect, this tunnels will continue to drain."
"This object is used to configure the sending or acceptance of the session PPP Proxy Authentication AVP's on the LAC or LNS.
Tunnel Status and Statisticss Table
"The L2TP tunnel status and statistics table.
This table contains objects that can be used to describe the current status and statistics of a single L2TP tunnel.
There is a 1 1 correspondence between conceptual rows of this table and conceptual rows of the l2tpTunnelConfigTable."
An L2TP tunnel interface stats entry."
OCTET STRING, l2tpTunnelStatsInitialRemoteRWS Integer32, l2tpTunnelStatsBearerCaps INTEGER, l2tpTunnelStatsFramingCaps INTEGER, l2tpTunnelStatsControlRxPkts Counter32, l2tpTunnelStatsControlRxZLB Counter32, l2tpTunnelStatsControlOutOfSeq Counter32,
l2tpTunnelStatsControlOutOfWin Counter32, l2tpTunnelStatsControlTxPkts Counter32, l2tpTunnelStatsControlTxZLB Counter32, l2tpTunnelStatsControlAckTO Counter32, l2tpTunnelStatsCurrentRemoteRWS Gauge32,
l2tpTunnelStatsFailedSessions Counter32, l2tpTunnelStatsActiveSessions Gauge32, l2tpTunnelStatsLastResultCode Integer32, l2tpTunnelStatsLastErrorCode Integer32,
l2tpTunnelStatsLastErrorMessage SnmpAdminString, l2tpTunnelStatsDrainingTunnel TruthValue } l2tpTunnelStatsLocalTID OBJECT
"This object contains the local tunnel Identifier."
"This object contains the remote tunnel Identifier."
"This field contains the current state of the control tunnel."
"This object indicates whether the tunnel was initiated locally or by the remote tunnel peer."
"This object contains the host name as discovered during the tunnel establishment phase (via the Host Name AVP) of the L2TP peer.
If the tunnel is idle this object should maintain its value from the last time it was connected."
"This object identifies the vendor name of the peer's L2TP implementation.
If the tunnel is idle this object should maintain its value from the last time it was connected."
"This object contains the tunnel peer's firmware revision number.
If the tunnel is idle this object should maintain its value from the last time it was connected."
{ l2tpTunnelStatsEntry 7 } l2tpTunnelStatsRemoteProtocolVer OBJECT TYPE SYNTAX
"This object describes the protocol version and revision of the tunnel peers implementation.
The first octet contains the protocol version.
The second octet contains the protocol revision."
"This object contains the initial remote peer's receive window size as indicated by the tunnel peer (in the RWS AVP) during the tunnel establishment phase.
If the tunnel is idle this object should maintain its value from the last time it was connected."
INTEGER { none(1), digital(2), analog(3), digitalAnalog(4) }
"This object describes the Bearer Capabilities of the tunnel peer.
If the tunnel is idle this object should maintain its value from the last time it was connected."
"This object describes the Framing Capabilities of the tunnel peer.
If the tunnel is idle this object should maintain its value from the last time it was connected."
"This object contains the number of control packets received on the tunnel."
"This object returns a count of the number of Zero Length Body control packet acknowledgement packets that were received."
"This object returns a count of the number of control packets that were not received in the correct order (as per the sequence number) on this tunnel including out of window packets."
{ l2tpTunnelStatsEntry 14 } l2tpTunnelStatsControlOutOfWin OBJECT TYPE SYNTAX
"This object contains the number of control packets that were received outside of the offered receive window.
It is implementation specific as to whether these packets are queued or discarded."
"This object contains the number of control packets that were transmitted to the tunnel peer."
"This object contains the number of Zero Length Body control packets transmitted to the tunnel peer."
"This object returns a count of the number of control packet timeouts due to the lack of a timely acknowledgement from the tunnel peer."
"This object contains the current remote receive window size as determined by the local flow control mechanism employed."
"This object contains the next send sequence number for the control channel."
"This object contains the send sequence number that the tunnel peer has acknowledged for the control channel.
The flow control state can be determined by subtracting the l2tpTunnelStatsTxSeq from l2tpTunnelStatsTxSeqAck and comparing this value to l2tpTunnelStatsCurrentRemoteRWS (taking into consideration sequence number wraps)."
"This object contains the next receive sequence number expected to be received on this control channel."
"This object contains the last receive sequence number that was acknowledged back to the tunnel peer for the control channel."
"This object contains the total number of sessions that this tunnel has successfully connected through to its tunnel peer since this tunnel was created."
"This object contains the total number of sessions that were initiated but failed to reach the established phase."
} l2tpTunnelStatsActiveSessions OBJECT TYPE SYNTAX
"This object contains the total number of sessions in the established state for this tunnel."
"This object contains the last value of the result code as described in the Result Code AVP which caused the tunnel to disconnect."
"This object contains the last value of the error code as described in the Result Code AVP which caused the tunnel to disconnect."
"This object contains the last value of the optional message as described in the Result Code AVP which caused the tunnel to disconnect."
"This object indicates if this tunnel is draining off sessions.
This object will return false(2) when the tunnel is not draining sessions or after the last session has disconnected when the tunnel is in the draining state."
The L2TP Session Status and Statistics Table
current DESCRIPTION "The L2TP session status and statistics table.
This table contains the objects that can be used to describe the current status and statistics of a single L2TP tunneled session."
{ l2tpObjects 7 } l2tpSessionStatsEntry   OBJECT TYPE SYNTAX
An L2TP session interface stats entry.
l2tpSessionStatsUserName SnmpAdminString, l2tpSessionStatsState INTEGER, l2tpSessionStatsCallType INTEGER, l2tpSessionStatsCallSerialNumber Unsigned32, l2tpSessionStatsTxConnectSpeed Unsigned32, l2tpSessionStatsRxConnectSpeed Unsigned32,
, l2tpSessionStatsDNIS SnmpAdminString, l2tpSessionStatsCLID SnmpAdminString,
l2tpSessionStatsSubAddress SnmpAdminString, l2tpSessionStatsPrivateGroupID SnmpAdminString, l2tpSessionStatsProxyLcp TruthValue, l2tpSessionStatsAuthMethod INTEGER,
"This object identifies the session's associated L2TP tunnel ifIndex value."
"This object identifies the ifIndex value of the interface from which PPP packets are being tunneled.
For example this could be a DS0 ifIndex on a LAC or it would be the PPP ifIndex on the LNS."
{ l2tpSessionStatsEntry 2 } l2tpSessionStatsLocalSID OBJECT TYPE SYNTAX
"This object contains the local assigned session identifier for this session.
"This object contains the remote assigned session identifier for this session.
When a session is starting this value may be zero until the remote tunnel endpoint has responded."
"This object identifies the peer session name on this interface.
This is typically the login name of the remote user.
If the user name is unknown to the local tunnel peer then this object will contain a null string."
"This object contains the current state of the session."
INTEGER { lacIncoming(1), lnsIncoming(2), lacOutgoing(3), lnsOutgoing(4) }
"This object indicates the type of call and the role this tunnel peer is providing for this session.
For example, lacIncoming(1) indicates that this tunnel peer is acting as a LAC and generated a Incoming Call Request to the tunnel peer (the LNS).
Note that tunnel peers can be both LAC and LNS simultaneously."
"This object contains the serial number that has been assigned to this  session."
"This object returns the last known transmit baud rate for this session."
"This object returns the last known receive baud rate for this session established."
"This object describes the bearer type of this session."
"This object describes the framing type of this session."
"This object contains the physical channel identifier for the session."
"This object identifies the Dialed Number Information String that the LAC obtained from the network for the session.
If no DNIS was provided then a null string will be returned."
"This object identifies the Calling Line ID that the LAC obtained from the network for the session.
If no CLID was provided then a null string will be returned."
"This object identifies the Sub Address that the LAC obtained from the network for the session.
If no Sub Address was provided then a null string will be returned."
"This object identifies the Private Group Identifier used for this tunneled session.
If no Private Group Identifier was provided then a null string will be returned."
"Indicates whether the LAC performed proxy LCP for this session."
INTEGER { none(1), text(2), pppChap(3), pppPap(4), pppEap(5), pppMsChapV1(6), pppMsChapV2(7), other(8) }
"This object contains the proxy authentication method employed by the LAC for the session.
If l2tpSessionProxyLcp is false(2) this object should not be interpreted."
"This object defines which tunnel peers have requested payload sequencing.
The value of both(4) indicates that both peers have requested payload sequencing."
"This object returns the total number of packets received for this session which were received out of sequence."
"This object returns the number of reassembly timeouts that have occurred for this session."
"This object contains the next send sequence number for for this session."
"This object contains the next receive sequence number expected to be received on this session."
SEQUENCE OF L2tpTunnelMapEntry MAX ACCESS
current DESCRIPTION "The L2TP Tunnel index mapping table.
This table is intended to assist management applications to quickly determine what the ifIndex value is for a given local tunnel identifier."
{ l2tpObjects 8 } l2tpTunnelMapEntry OBJECT TYPE SYNTAX
current DESCRIPTION "An L2TP tunnel index map entry.
"This object contains the local tunnel Identifier."
"This value for this object is equal to the value of ifIndex of the Interfaces MIB for tunnel interfaces of type L2TP."
current DESCRIPTION "The L2TP Session index mapping table.
This table is intended to assist management applications to map interfaces to a tunnel and session identifier."
current DESCRIPTION "An L2TP Session index map entry.
"This object identifies the ifIndex value of the interface which is receiving or sending its packets over an L2TP tunnel.
For example this could be a DS0 ifIndex on a LAC or a PPP ifIndex on the LNS."
This object identifies the sessions associated L2TP tunnel ifIndex value.
When this object is set it provides a binding between a particular interface identified by l2tpSessionMapIfIndex to a particular tunnel."
"This object contains the local assigned session identifier for this session.
The status of this session map entry."
The L2TP UDP/IP Transport Status and Statistics Table
SEQUENCE OF L2tpUdpStatsEntry MAX ACCESS
"The L2TP UDP/IP transport stats table.
This table contains objects that can be used to describe the current status and statistics of the UDP/IP L2TP tunnel transport."
current DESCRIPTION "An L2TP UDP/IP transport stats entry.
"This value for this object is equal to the value of ifIndex of the Interfaces MIB for tunnel interfaces of type L2TP and which have a L2TP transport of UDP/IP."
"This object reflects the peer's UDP port number used for this tunnel.
When not known a value of zero should be returned."
"This object reflects the local UDP port number that this tunnel is bound to."
A l2tpTunnelAuthFailure trap signifies that an attempt to establish a tunnel to a remote peer has failed authentication."
When this MIB is implemented with support for read create and read write, then such an implementation can claim full compliance.
Such an implementation can then be both monitored and configured with this MIB.
l2tpIpUdpGroup DESCRIPTION "This group is mandatory for implementations that support L2TP over UDP/IP."
"This group is optional for L2TP devices that group tunnel endpoints into tunnel domains."
This group is optional for L2TP devices that provide index mapping."
This group is optional for SNMP agents which support both authentication and privacy of SNMP messages for the management of L2TP keys."
This group is mandatory for implementations that support the l2tpDomainGroup
the L2TP Domain 32 bit counters is less than one hour."
Such an implementation can then be monitored but can not be configured with this MIB.
MIN ACCESS read only DESCRIPTION
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
l2tpTunnelConfigPayloadSeq MIN ACCESS read only DESCRIPTION
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
l2tpTunnelConfigTransport MIN ACCESS read only DESCRIPTION
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
"This group is mandatory for implementations that support L2TP over UDP/IP."
"This group is optional for L2TP devices that group tunnel endpoints into tunnel domains."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
l2tpDomainConfigPayloadSeq MIN ACCESS read only DESCRIPTION
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
l2tpDomainConfigStatus MIN ACCESS read only DESCRIPTION
"Write access is not required."
This group is optional for L2TP devices that provide index mapping."
l2tpSessionMapTunnelIfIndex MIN ACCESS read only DESCRIPTION
"Write access is not required."
l2tpSessionMapStatus MIN ACCESS read only DESCRIPTION
"Write access is not required."
This group is optional for SNMP agents which support both authentication and privacy of SNMP messages for the management of L2TP keys."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
l2tpTunnelConfigAuth MIN ACCESS read only DESCRIPTION
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
This group is mandatory for implementations that support the l2tpDomainGroup
the L2TP Domain 32 bit counters is less than one hour."
l2tpConfigGroup OBJECT GROUP OBJECTS { l2tpAdminState, l2tpDrainTunnels, l2tpTunnelConfigDomainId, l2tpTunnelConfigHelloInterval, l2tpTunnelConfigIdleTimeout, l2tpTunnelConfigControlRWS, l2tpTunnelConfigControlMaxRetx, l2tpTunnelConfigControlMaxRetxTO,
l2tpTunnelStatsLastResultCode, l2tpTunnelStatsLastErrorCode, l2tpTunnelStatsLastErrorMessage, l2tpTunnelStatsDrainingTunnel, l2tpSessionStatsIfIndex, l2tpSessionStatsRemoteSID, l2tpSessionStatsUserName, l2tpSessionStatsState, l2tpSessionStatsCallType, l2tpSessionStatsCallSerialNumber, l2tpSessionStatsTxConnectSpeed, l2tpSessionStatsRxConnectSpeed, l2tpSessionStatsCallBearerType, l2tpSessionStatsFramingType, l2tpSessionStatsPhysChanId, l2tpSessionStatsDNIS, l2tpSessionStatsCLID, l2tpSessionStatsSubAddress, l2tpSessionStatsPrivateGroupID, l2tpSessionStatsProxyLcp, l2tpSessionStatsAuthMethod, l2tpSessionStatsSequencingState, l2tpSessionStatsOutSequence, l2tpSessionStatsReassemblyTO,
"A collection of objects providing status and statistics of the L2TP UDP/IP transport layer."
A collection of objects providing index mapping."
{ l2tpGroups 5 } l2tpSecurityGroup OBJECT GROUP OBJECTS { l2tpDomainConfigAuth, l2tpDomainConfigSecret, l2tpDomainConfigTunnelSecurity,
A collection of objects providing L2TP security configuration."
"A collection of L2TP trap events as specified in NOTIFICATION TYPE constructs."
A collection of objects providing High Capacity 64 bit counter objects."
There are also a number of objects that have a MAX ACCESS clause of read write and/or read  create, such as those which allow an administrator to dynamically configure tunnels.
While unauthorized access to the readable objects is relatively innocuous, unauthorized access to the write
able objects could cause a denial of service, or could cause unauthorized creation and/or manipulation of tunnels.
Hence, the support for SET operations in a non secure environment without proper protection can have a negative effect on network operations.
by itself is such an insecure environment.
Even if the network itself is secure (for example by using IPSec [RFC2401]), even then, there is no control as to who on the secure network is allowed to access and SET (change/create/delete)
the objects in this MIB.
If the agent allows configuring keys (for example the l2tpDomainConfigSecret object) via SNMP, for use by L2TP, then the security of L2TP is at best only as secure as SNMP.
For this reason, all objects in the l2tpSecurityGroup MUST NOT be accessible via unencrypted messages.
It is also recommended that keys not be made visible through SNMP GET (or GET NEXT or GET BULK) messages, even if encryption is used.
It is recommended that the implementers consider the security features as provided by the SNMPv3 framework.
Specifically, the use of the User based Security Model RFC 2574
[RFC2574] and the View  based Access Control Model RFC 2575
It is then a customer/user responsibility to ensure that the SNMP entity giving access to this MIB, is properly configured to give access to those objects only to those principals (users) that have legitimate rights to access them.
