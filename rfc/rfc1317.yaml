- title: __initial_text__
  contents:
  - "                  Definitions of Managed Objects for\n                      RS-232-like\
    \ Hardware Devices\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an IAB standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"IAB\n   Official\
    \ Protocol Standards\" for the standardization state and status\n   of this protocol.\
    \  Distribution of this memo is unlimited.\n"
- title: 1.  Abstract
  contents:
  - "1.  Abstract\n   This memo defines a portion of the Management Information Base\
    \ (MIB)\n   for use with network management protocols in TCP/IP based internets.\n\
    \   In particular, it defines objects for the management of RS-232-like\n   devices.\n"
- title: 2.  The Network Management Framework
  contents:
  - "2.  The Network Management Framework\n   The Internet-standard Network Management\
    \ Framework consists of three\n   components.  They are:\n   RFC 1155 which defines\
    \ the SMI, the mechanisms used for describing\n   and naming objects for the purpose\
    \ of management. RFC 1212 defines a\n   more concise description mechanism, which\
    \ is wholly consistent with\n   the SMI.\n   RFC 1156 which defines MIB-I, the\
    \ core set of managed objects for the\n   Internet suite of protocols.  RFC 1213,\
    \ defines MIB-II, an evolution\n   of MIB-I based on implementation experience\
    \ and new operational\n   requirements.\n   RFC 1157 which defines the SNMP, the\
    \ protocol used for network access\n   to managed objects.\n   The Framework permits\
    \ new objects to be defined for the purpose of\n   experimentation and evaluation.\n"
- title: 3.  Objects
  contents:
  - "3.  Objects\n   Managed objects are accessed via a virtual information store,\
    \ termed\n   the Management Information Base or MIB. Objects in the MIB are\n\
    \   defined using the subset of Abstract Syntax Notation One (ASN.1) [7]\n   defined\
    \ in the SMI.  In particular, each object has a name, a syntax,\n   and an encoding.\
    \  The name is an object identifier, an\n   administratively assigned name, which\
    \ specifies an object type.\n   The object type together with an object instance\
    \ serves to uniquely\n   identify a specific instantiation of the object. For\
    \ human\n   convenience, we often use a textual string, termed the OBJECT\n  \
    \ DESCRIPTOR, to also refer to the object type.\n   The syntax of an object type\
    \ defines the abstract data structure\n   corresponding to that object type. \
    \ The ASN.1 language is used for\n   this purpose.  However, the SMI [3] purposely\
    \ restricts the ASN.1\n   constructs which may be used. These restrictions are\
    \ explicitly made\n   for simplicity.\n   The encoding of an object type is simply\
    \ how that object type is\n   represented using the object type's syntax. Implicitly\
    \ tied to the\n   notion of an object type's syntax and encoding is how the object\
    \ type\n   is represented when being transmitted on the network.\n   The SMI specifies\
    \ the use of the basic encoding rules of ASN.1 [8],\n   subject to the additional\
    \ requirements imposed by the SNMP.\n"
- title: 3.1.  Format of Definitions
  contents:
  - "3.1.  Format of Definitions\n   Section 5 contains the specification of all object\
    \ types contained in\n   this MIB module.  The object types are defined using\
    \ the conventions\n   defined in the SMI, as amended by the extensions specified\
    \ in [9,10].\n"
- title: 4.  Overview
  contents:
  - "4.  Overview\n   The RS-232-like Hardware Device MIB applies to interface ports\
    \ that\n   might logically support the Interface MIB, a Transmission MIB, or the\n\
    \   Character MIB.  The most common example is an RS-232 port with modem\n   signals.\n\
    \   The RS-232-like MIB is one of a set of MIBs designed for\n   complementary\
    \ use.  At this writing, the set comprises:\n        Character MIB\n        PPP\
    \ MIB\n        RS-232-like MIB\n        Parallel-printer-like MIB\n   The RS-232-like\
    \ MIB and the Parallel-printer-like MIB represent the\n   physical layer, providing\
    \ service to higher layers such as the\n   Character MIB or PPP MIB.  Further\
    \ MIBs may appear above these.\n   The following diagram shows two possible \"\
    MIB stacks\", each using the\n   RS-232-like MIB.\n                          \
    \         .-----------------.\n        .-----------------.        |  Standard\
    \ MIB   |\n        |   Telnet MIB    |        | Interface Group |\n        |-----------------|\
    \        |-----------------|\n        |  Character MIB  |        |     PPP MIB\
    \     |\n        |-----------------|        |-----------------|\n        | RS-232-like\
    \ MIB |        | RS-232-like MIB |\n        `-----------------'        `-----------------'\n\
    \   The intent of the model is for the physical-level MIBs to represent\n   the\
    \ lowest level, regardless of the higher level that may be using\n   it.  In turn,\
    \ separate higher level MIBs represent specific\n   applications, such as a terminal\
    \ (the Character MIB) or a network\n   connection (the PPP MIB).\n   The RS-232-like\
    \ Hardware Device MIB is mandatory for all systems that\n   have such a hardware\
    \ port supporting services managed through some\n   other MIB, for example, the\
    \ Character MIB or PPP MIB.\n   The MIB includes multiple similar types of hardware,\
    \ and as a result\n   contains objects not applicable to all of those types. \
    \ Such objects\n   are in a separate branch of the MIB, which is required when\n\
    \   applicable and otherwise absent.\n   The RS-232-like Hardware Port MIB includes\
    \ RS-232, RS-422, RS-423,\n   V.35, and other asynchronous or synchronous, serial\
    \ physical links\n   with a similar set of control signals.\n   The MIB contains\
    \ objects that relate to physical layer connections.\n   Such connections may\
    \ provide interesting hardware signals (other than\n   for basic data transfer),\
    \ such as RNG and DCD.  Hardware ports also\n   have such attributes as speed\
    \ and bits per character.\n   Usefulness of error counters in this MIB depends\
    \ on the presence of\n   non-error character counts in higher level MIBs.\n  \
    \ The MIB comprises one base object and four tables, detailed in the\n   following\
    \ sections.  The tables contain objects for all ports,\n   asynchronous ports,\
    \ and input and output control signals.\n"
- title: 5.  Definitions
  contents:
  - "5.  Definitions\n               RFC1317-MIB DEFINITIONS ::= BEGIN\n         \
    \           IMPORTS\n                       Counter\n                        \
    \       FROM RFC1155-SMI\n                       transmission\n              \
    \                 FROM RFC1213-MIB\n                       OBJECT-TYPE\n     \
    \                          FROM RFC-1212;\n       -- this is the MIB module for\
    \ RS-232-like hardware devices\n       rs232    OBJECT IDENTIFIER ::= { transmission\
    \ 33 }\n       -- the generic RS-232-like group\n       -- Implementation of this\
    \ group is mandatory for all\n       -- systems that have RS-232-like hardware\
    \ ports\n       -- supporting higher level services such as character\n      \
    \ -- streams or network interfaces\n       rs232Number OBJECT-TYPE\n         \
    \  SYNTAX INTEGER\n           ACCESS read-only\n           STATUS mandatory\n\
    \           DESCRIPTION\n               \"The number of ports (regardless of their\
    \ current\n               state) in the RS-232-like general port table.\"\n  \
    \         ::= { rs232 1 }\n       -- the RS-232-like general Port table\n    \
    \   rs232PortTable OBJECT-TYPE\n           SYNTAX SEQUENCE OF Rs232PortEntry\n\
    \           ACCESS not-accessible\n           STATUS mandatory\n           DESCRIPTION\n\
    \               \"A list of port entries.  The number of entries is\n        \
    \       given by the value of rs232Number.\"\n           ::= { rs232 2 }\n   \
    \    rs232PortEntry OBJECT-TYPE\n           SYNTAX Rs232PortEntry\n          \
    \ ACCESS not-accessible\n           STATUS mandatory\n           DESCRIPTION\n\
    \               \"Status and parameter values for a port.\"\n           INDEX\
    \ { rs232PortIndex }\n           ::= { rs232PortTable 1 }\n       Rs232PortEntry\
    \ ::=\n           SEQUENCE {\n               rs232PortIndex\n                \
    \   INTEGER,\n               rs232PortType\n                   INTEGER,\n    \
    \           rs232PortInSigNumber\n                   INTEGER,\n              \
    \ rs232PortOutSigNumber\n                   INTEGER,\n               rs232PortInSpeed\n\
    \                   INTEGER,\n               rs232PortOutSpeed\n             \
    \      INTEGER    }\n       rs232PortIndex OBJECT-TYPE\n           SYNTAX INTEGER\n\
    \           ACCESS read-only\n           STATUS mandatory\n           DESCRIPTION\n\
    \               \"A unique value for each port.  Its value ranges\n          \
    \     between 1 and the value of rs232Number.  By\n               convention and\
    \ if possible, hardware port numbers\n               map directly to external\
    \ connectors.  The value for\n               each port must remain constant at\
    \ least from one\n               re-initialization of the network management agent\
    \ to\n               the next.\"\n           ::= { rs232PortEntry 1 }\n      \
    \ rs232PortType OBJECT-TYPE\n           SYNTAX INTEGER { other(1), rs232(2), rs422(3),\n\
    \                            rs423(4), v35(5) }\n           ACCESS read-only\n\
    \           STATUS mandatory\n           DESCRIPTION\n               \"The port's\
    \ hardware type.\"\n           ::= { rs232PortEntry 2 }\n       rs232PortInSigNumber\
    \ OBJECT-TYPE\n           SYNTAX INTEGER\n           ACCESS read-only\n      \
    \     STATUS mandatory\n           DESCRIPTION\n               \"The number of\
    \ input signals for the port in the\n               input signal table (rs232PortInSigTable).\
    \  The table\n               contains entries only for those signals the software\n\
    \               can detect.\"\n           ::= { rs232PortEntry 3 }\n       rs232PortOutSigNumber\
    \ OBJECT-TYPE\n           SYNTAX INTEGER\n           ACCESS read-only\n      \
    \     STATUS mandatory\n           DESCRIPTION\n               \"The number of\
    \ output signals for the port in the\n               output signal table (rs232PortOutSigTable).\
    \  The\n               table contains entries only for those signals the\n   \
    \            software can assert.\"\n           ::= { rs232PortEntry 4 }\n   \
    \    rs232PortInSpeed OBJECT-TYPE\n           SYNTAX INTEGER\n           ACCESS\
    \ read-write\n           STATUS mandatory\n           DESCRIPTION\n          \
    \     \"The port's input speed in bits per second.\"\n           ::= { rs232PortEntry\
    \ 5 }\n       rs232PortOutSpeed OBJECT-TYPE\n           SYNTAX INTEGER\n     \
    \      ACCESS read-write\n           STATUS mandatory\n           DESCRIPTION\n\
    \               \"The port's output speed in bits per second.\"\n           ::=\
    \ { rs232PortEntry 6 }\n       -- the RS-232-like Asynchronous Port group\n  \
    \     -- Implementation of this group is mandatory if the system\n       -- has\
    \ any asynchronous ports.  Otherwise it is not\n       -- present.\n       rs232AsyncPortTable\
    \ OBJECT-TYPE\n           SYNTAX SEQUENCE OF Rs232AsyncPortEntry\n           ACCESS\
    \ not-accessible\n           STATUS mandatory\n           DESCRIPTION\n      \
    \         \"A list of asynchronous port entries.  The maximum\n              \
    \ entry number is given by the value of rs232Number.\n               Entries need\
    \ not exist for synchronous ports.\"\n           ::= { rs232 3 }\n       rs232AsyncPortEntry\
    \ OBJECT-TYPE\n           SYNTAX Rs232AsyncPortEntry\n           ACCESS not-accessible\n\
    \           STATUS mandatory\n           DESCRIPTION\n               \"Status\
    \ and parameter values for an asynchronous\n               port.\"\n         \
    \  INDEX { rs232AsyncPortIndex }\n           ::= { rs232AsyncPortTable 1 }\n \
    \      Rs232AsyncPortEntry ::=\n           SEQUENCE {\n               rs232AsyncPortIndex\n\
    \                   INTEGER,\n               rs232AsyncPortBits\n            \
    \       INTEGER,\n               rs232AsyncPortStopBits\n                   INTEGER,\n\
    \               rs232AsyncPortParity\n                   INTEGER,\n          \
    \     rs232AsyncPortAutobaud\n                   INTEGER,\n               rs232AsyncPortParityErrs\n\
    \                   Counter,\n               rs232AsyncPortFramingErrs\n     \
    \              Counter,\n               rs232AsyncPortOverrunErrs\n          \
    \         Counter\n           }\n       rs232AsyncPortIndex OBJECT-TYPE\n    \
    \       SYNTAX INTEGER\n           ACCESS read-only\n           STATUS mandatory\n\
    \           DESCRIPTION\n               \"A unique value for each port.  Its value\
    \ is the\n               same as rs232PortIndex for the port.\"\n           ::=\
    \ { rs232AsyncPortEntry 1 }\n       rs232AsyncPortBits OBJECT-TYPE\n         \
    \  SYNTAX INTEGER (5..8)\n           ACCESS read-write\n           STATUS mandatory\n\
    \           DESCRIPTION\n               \"The port's number of bits in a character.\"\
    \n           ::= { rs232AsyncPortEntry 2 }\n       rs232AsyncPortStopBits OBJECT-TYPE\n\
    \           SYNTAX INTEGER { one(1), two(2),\n                            one-and-half(3),\
    \ dynamic(4) }\n           ACCESS read-write\n           STATUS mandatory\n  \
    \         DESCRIPTION\n               \"The port's number of stop bits.\"\n  \
    \         ::= { rs232AsyncPortEntry 3 }\n       rs232AsyncPortParity OBJECT-TYPE\n\
    \           SYNTAX INTEGER { none(1), odd(2), even(3),\n                     \
    \       mark(4), space(5) }\n           ACCESS read-write\n           STATUS mandatory\n\
    \           DESCRIPTION\n               \"The port's sense of a character parity\
    \ bit.\"\n           ::= { rs232AsyncPortEntry 4 }\n       rs232AsyncPortAutobaud\
    \ OBJECT-TYPE\n           SYNTAX INTEGER { enabled(1), disabled(2) }\n       \
    \    ACCESS read-write\n           STATUS mandatory\n           DESCRIPTION\n\
    \               \"A control for the port's ability to automatically\n        \
    \       sense input speed.\n               When rs232PortAutoBaud is 'enabled',\
    \ a port may\n               autobaud to values different from the set values\
    \ for\n               speed, parity, and character size.  As a result a\n    \
    \           network management system may temporarily observe\n              \
    \ values different from what was previously set.\"\n           ::= { rs232AsyncPortEntry\
    \ 5 }\n       rs232AsyncPortParityErrs OBJECT-TYPE\n           SYNTAX Counter\n\
    \           ACCESS read-only\n           STATUS mandatory\n           DESCRIPTION\n\
    \               \"Total number of characters with a parity error,\n          \
    \     input from the port since system re-initialization\n               and while\
    \ the port state was 'up' or 'test'.\"\n           ::= { rs232AsyncPortEntry 6\
    \ }\n       rs232AsyncPortFramingErrs OBJECT-TYPE\n           SYNTAX Counter\n\
    \           ACCESS read-only\n           STATUS mandatory\n           DESCRIPTION\n\
    \               \"Total number of characters with a framing error,\n         \
    \      input from the port since system re-initialization\n               and\
    \ while the port state was 'up' or 'test'.\"\n           ::= { rs232AsyncPortEntry\
    \ 7 }\n       rs232AsyncPortOverrunErrs OBJECT-TYPE\n           SYNTAX Counter\n\
    \           ACCESS read-only\n           STATUS mandatory\n           DESCRIPTION\n\
    \               \"Total number of characters with an overrun error,\n        \
    \       input from the port since system re-initialization\n               and\
    \ while the port state was 'up' or 'test'.\"\n           ::= { rs232AsyncPortEntry\
    \ 8 }\n       -- the RS-232-like Synchronous Port group\n       -- Implementation\
    \ of this group is mandatory if the system\n       -- has any synchronous ports.\
    \  Otherwise it is not\n       -- present.\n       rs232SyncPortTable OBJECT-TYPE\n\
    \           SYNTAX SEQUENCE OF Rs232SyncPortEntry\n           ACCESS not-accessible\n\
    \           STATUS mandatory\n           DESCRIPTION\n               \"A list\
    \ of synchronous port entries.  The maximum\n               entry number is given\
    \ by the value of rs232Number.\n               Entries need not exist for asynchronous\
    \ ports.\"\n           ::= { rs232 4 }\n       rs232SyncPortEntry OBJECT-TYPE\n\
    \           SYNTAX Rs232SyncPortEntry\n           ACCESS not-accessible\n    \
    \       STATUS mandatory\n           DESCRIPTION\n               \"Status and\
    \ parameter values for a synchronous\n               port.\"\n           INDEX\
    \ { rs232SyncPortIndex }\n           ::= { rs232SyncPortTable 1 }\n       Rs232SyncPortEntry\
    \ ::=\n           SEQUENCE {\n               rs232SyncPortIndex\n            \
    \       INTEGER,\n               rs232SyncPortClockSource\n                  \
    \ INTEGER,\n               rs232SyncPortFrameCheckErrs\n                   Counter,\n\
    \               rs232SyncPortTransmitUnderrunErrs\n                   Counter,\n\
    \               rs232SyncPortReceiveOverrunErrs\n                   Counter,\n\
    \               rs232SyncPortInterruptedFrames\n                   Counter,\n\
    \               rs232SyncPortAbortedFrames\n                   Counter\n     \
    \      }\n       rs232SyncPortIndex OBJECT-TYPE\n           SYNTAX INTEGER\n \
    \          ACCESS read-only\n           STATUS mandatory\n           DESCRIPTION\n\
    \               \"A unique value for each port.  Its value is the\n          \
    \     same as rs232PortIndex for the port.\"\n           ::= { rs232SyncPortEntry\
    \ 1 }\n       rs232SyncPortClockSource OBJECT-TYPE\n           SYNTAX INTEGER\
    \  { internal(1), external(2), split(3) }\n           ACCESS read-write\n    \
    \       STATUS mandatory\n           DESCRIPTION\n               \"Source of the\
    \ port's bit rate clock. 'split' means\n               the tranmit clock is internal\
    \ and the receive clock\n               is external.\"\n           ::= { rs232SyncPortEntry\
    \ 2 }\n       rs232SyncPortFrameCheckErrs OBJECT-TYPE\n           SYNTAX Counter\n\
    \           ACCESS read-only\n           STATUS mandatory\n           DESCRIPTION\n\
    \               \"Total number of frames with an invalid frame check\n       \
    \        sequence, input from the port since system\n               re-initialization\
    \ and while the port state was 'up'\n               or 'test'.\"\n           ::=\
    \ { rs232SyncPortEntry 3 }\n       rs232SyncPortTransmitUnderrunErrs OBJECT-TYPE\n\
    \           SYNTAX Counter\n           ACCESS read-only\n           STATUS mandatory\n\
    \           DESCRIPTION\n               \"Total number of frames that failed to\
    \ be\n               transmitted on the port since system\n               re-initialization\
    \ and while the port state was 'up'\n               or 'test' because data was\
    \ not available to the\n               transmitter in time.\"\n           ::=\
    \ { rs232SyncPortEntry 4 }\n       rs232SyncPortReceiveOverrunErrs OBJECT-TYPE\n\
    \           SYNTAX Counter\n           ACCESS read-only\n           STATUS mandatory\n\
    \           DESCRIPTION\n               \"Total number of frames that failed to\
    \ be received\n               on the port since system re-initialization and while\n\
    \               the port state was 'up' or 'test' because the\n              \
    \ receiver did not accept the data in time.\"\n           ::= { rs232SyncPortEntry\
    \ 5 }\n       rs232SyncPortInterruptedFrames OBJECT-TYPE\n           SYNTAX Counter\n\
    \           ACCESS read-only\n           STATUS mandatory\n           DESCRIPTION\n\
    \               \"Total number of frames that failed to be received\n        \
    \       or transmitted on the port due to loss of modem\n               signals\
    \ since system re-initialization and while the\n               port state was\
    \ 'up' or 'test'.\"\n           ::= { rs232SyncPortEntry 6 }\n       rs232SyncPortAbortedFrames\
    \ OBJECT-TYPE\n           SYNTAX Counter\n           ACCESS read-only\n      \
    \     STATUS mandatory\n           DESCRIPTION\n               \"Number of frames\
    \ aborted on the port due to\n               receiving an abort sequence since\
    \ system\n               re-initialization and while the port state was 'up'\n\
    \               or 'test'.\"\n           ::= { rs232SyncPortEntry 7 }\n      \
    \ -- the Input Signal table\n       rs232InSigTable OBJECT-TYPE\n           SYNTAX\
    \ SEQUENCE OF Rs232InSigEntry\n           ACCESS not-accessible\n           STATUS\
    \ mandatory\n           DESCRIPTION\n               \"A list of port input control\
    \ signal entries.\"\n           ::= { rs232 5 }\n       rs232InSigEntry OBJECT-TYPE\n\
    \           SYNTAX Rs232InSigEntry\n           ACCESS not-accessible\n       \
    \    STATUS mandatory\n           DESCRIPTION\n               \"Input control\
    \ signal status for a hardware port.\"\n           INDEX { rs232InSigPortIndex,\
    \ rs232InSigName }\n           ::= { rs232InSigTable 1 }\n       Rs232InSigEntry\
    \ ::=\n           SEQUENCE {\n               rs232InSigPortIndex\n           \
    \        INTEGER,\n               rs232InSigName\n                   INTEGER,\n\
    \               rs232InSigState\n                   INTEGER,\n               rs232InSigChanges\n\
    \                   Counter\n           }\n       rs232InSigPortIndex OBJECT-TYPE\n\
    \           SYNTAX INTEGER\n           ACCESS read-only\n           STATUS mandatory\n\
    \           DESCRIPTION\n               \"The value of rs232PortIndex for the\
    \ port to which\n               this entry belongs.\"\n           ::= { rs232InSigEntry\
    \ 1 }\n       rs232InSigName OBJECT-TYPE\n           SYNTAX INTEGER { rts(1),\
    \ cts(2), dsr(3), dtr(4), ri(5),\n                            dcd(6), sq(7), srs(8),\
    \ srts(9),\n                            scts(10), sdcd(11) }\n           ACCESS\
    \ read-only\n           STATUS mandatory\n           DESCRIPTION\n           \
    \    \"Identification of a hardware signal, as follows:\n                   rts\
    \    Request to Send\n                   cts    Clear to Send\n              \
    \     dsr    Data Set Ready\n                   dtr    Data Terminal Ready\n \
    \                  ri     Ring Indicator\n                   dcd    Received Line\
    \ Signal Detector\n                   sq     Signal Quality Detector\n       \
    \            srs    Data Signaling Rate Selector\n                   srts   Secondary\
    \ Request to Send\n                   scts   Secondary Clear to Send\n       \
    \            sdcd   Secondary Received Line Signal Detector\n               \"\
    \n           REFERENCE\n               \"EIA Standard RS-232-C, August 1969.\"\
    \n           ::= { rs232InSigEntry 2 }\n       rs232InSigState OBJECT-TYPE\n \
    \          SYNTAX INTEGER { none(1), on(2), off(3) }\n           ACCESS read-only\n\
    \           STATUS mandatory\n           DESCRIPTION\n               \"The current\
    \ signal state.\"\n           ::= { rs232InSigEntry 3 }\n       rs232InSigChanges\
    \ OBJECT-TYPE\n           SYNTAX Counter\n           ACCESS read-only\n      \
    \     STATUS mandatory\n           DESCRIPTION\n               \"The number of\
    \ times the signal has changed from\n               'on' to 'off' or from 'off'\
    \ to 'on'.\"\n           ::= { rs232InSigEntry 4 }\n       -- the Output Signal\
    \ table\n       rs232OutSigTable OBJECT-TYPE\n           SYNTAX SEQUENCE OF Rs232OutSigEntry\n\
    \           ACCESS not-accessible\n           STATUS mandatory\n           DESCRIPTION\n\
    \               \"A list of port output control signal entries.\"\n          \
    \ ::= { rs232 6 }\n       rs232OutSigEntry OBJECT-TYPE\n           SYNTAX Rs232OutSigEntry\n\
    \           ACCESS not-accessible\n           STATUS mandatory\n           DESCRIPTION\n\
    \               \"Output control signal status for a hardware port.\"\n      \
    \     INDEX { rs232OutSigPortIndex, rs232OutSigName }\n           ::= { rs232OutSigTable\
    \ 1 }\n       Rs232OutSigEntry ::=\n           SEQUENCE {\n               rs232OutSigPortIndex\n\
    \                   INTEGER,\n               rs232OutSigName\n               \
    \    INTEGER,\n               rs232OutSigState\n                   INTEGER,\n\
    \               rs232OutSigChanges\n                   Counter\n           }\n\
    \       rs232OutSigPortIndex OBJECT-TYPE\n           SYNTAX INTEGER\n        \
    \   ACCESS read-only\n           STATUS mandatory\n           DESCRIPTION\n  \
    \             \"The value of rs232PortIndex for the port to which\n          \
    \     this entry belongs.\"\n           ::= { rs232OutSigEntry 1 }\n       rs232OutSigName\
    \ OBJECT-TYPE\n           SYNTAX INTEGER { rts(1), cts(2), dsr(3), dtr(4), ri(5),\n\
    \                            dcd(6), sq(7), srs(8), srts(9),\n               \
    \             scts(10), sdcd(11) }\n           ACCESS read-only\n           STATUS\
    \ mandatory\n           DESCRIPTION\n               \"Identification of a hardware\
    \ signal, as follows:\n                   rts    Request to Send\n           \
    \        cts    Clear to Send\n                   dsr    Data Set Ready\n    \
    \               dtr    Data Terminal Ready\n                   ri     Ring Indicator\n\
    \                   dcd    Received Line Signal Detector\n                   sq\
    \     Signal Quality Detector\n                   srs    Data Signaling Rate Selector\n\
    \                   srts   Secondary Request to Send\n                   scts\
    \   Secondary Clear to Send\n                   sdcd   Secondary Received Line\
    \ Signal Detector\n               \"\n           REFERENCE\n               \"\
    EIA Standard RS-232-C, August 1969.\"\n           ::= { rs232OutSigEntry 2 }\n\
    \       rs232OutSigState OBJECT-TYPE\n           SYNTAX INTEGER { none(1), on(2),\
    \ off(3) }\n           ACCESS read-only\n           STATUS mandatory\n       \
    \    DESCRIPTION\n               \"The current signal state.\"\n           ::=\
    \ { rs232OutSigEntry 3 }\n       rs232OutSigChanges OBJECT-TYPE\n           SYNTAX\
    \ Counter\n           ACCESS read-only\n           STATUS mandatory\n        \
    \   DESCRIPTION\n               \"The number of times the signal has changed from\n\
    \               'on' to 'off' or from 'off' to 'on'.\"\n           ::= { rs232OutSigEntry\
    \ 4 }\n       END\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   Based on several private MIBs, this document was produced\
    \ by the\n   Character MIB Working Group:\n      Anne Ambler, Spider\n      Charles\
    \ Bazaar, Emulex\n      Christopher Bucci, Datability\n      Anthony Chung, Hughes\
    \ LAN Systems\n      George Conant, Xyplex\n      John Cook, Chipcom\n      James\
    \ Davin, MIT-LCS\n      Shawn Gallagher, DEC\n      Tom Grant, Xylogics\n    \
    \  Frank Huang, Emulex\n      David Jordan, Emulex\n      Satish Joshi, SynOptics\n\
    \      Frank Kastenholz, Clearpoint\n      Ken Key, University of Tennessee\n\
    \      Jim Kinder, Fibercom\n      Rajeev Kochhar, 3Com\n      John LoVerso, Xylogics\n\
    \      Keith McCloghrie, Hughes LAN Systems\n      Donalpd Merritt, BRL\n    \
    \  David Perkins, 3Com\n      Jim Reinstedler, Ungerman-Bass\n      Marshall Rose,\
    \ PSI\n      Ron Strich, SSDS\n      Dean Throop, DG\n      Bill Townsend, Xylogics\n\
    \      Jesse Walker, DEC\n      David Waitzman, BBN\n      Bill Westfield, cisco\n"
- title: 7.  References
  contents:
  - "7.  References\n   [1] Cerf, V., \"IAB Recommendations for the Development of\
    \ Internet\n       Network Management Standards\", RFC 1052, NRI, April 1988.\n\
    \   [2] Cerf, V., \"Report of the Second Ad Hoc Network Management Review\n  \
    \     Group\", RFC 1109, NRI, August 1989.\n   [3] Rose M., and K. McCloghrie,\
    \ \"Structure and Identification of\n       Management Information for TCP/IP-based\
    \ internets\", RFC 1155,\n       Performance Systems International, Hughes LAN\
    \ Systems, May 1990.\n   [4] McCloghrie K., and M. Rose, \"Management Information\
    \ Base for\n       Network Management of TCP/IP-based internets\", RFC 1156, Hughes\n\
    \       LAN Systems, Performance Systems International, May 1990.\n   [5] Case,\
    \ J., Fedor, M., Schoffstall, M., and J. Davin, Simple\n       Network Management\
    \ Protocol\", RFC 1157, SNMP Research,\n       Performance Systems International,\
    \ Performance Systems\n       International, MIT Laboratory for Computer Science,\
    \ May 1990.\n   [6] McCloghrie K., and M. Rose, Editors, \"Management Information\
    \ Base\n       for Network Management of TCP/IP-based internets\", RFC 1213,\n\
    \       Performance Systems International, March 1991.\n   [7] Information processing\
    \ systems - Open Systems Interconnection -\n       Specification of Abstract Syntax\
    \ Notation One (ASN.1),\n       International Organization for Standardization,\
    \ International\n       Standard 8824, December 1987.\n   [8] Information processing\
    \ systems - Open Systems Interconnection -\n       Specification of Basic Encoding\
    \ Rules for Abstract Notation One\n       (ASN.1), International Organization\
    \ for Standardization,\n       International Standard 8825, December 1987.\n \
    \  [9] Rose, M., and K. McCloghrie, Editors, \"Concise MIB Definitions\",\n  \
    \     RFC 1212, Performance Systems International, Hughes LAN Systems,\n     \
    \  March 1991.\n  [10] Rose, M., Editor, \"A Convention for Defining Traps for\
    \ use with\n       the SNMP\", RFC 1215, Performance Systems International, March\n\
    \       1991.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 9.  Author's Address
  contents:
  - "9.  Author's Address\n   Bob Stewart\n   Xyplex, Inc.\n   330 Codman Hill Road\n\
    \   Boxborough, MA 01719\n   Phone: (508) 264-9900\n   EMail: rlstewart@eng.xyplex.com\n"
