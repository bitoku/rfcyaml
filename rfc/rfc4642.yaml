- contents:
  - "                 Using Transport Layer Security (TLS)\n               with Network
    News Transfer Protocol (NNTP)\n"
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This memo defines an extension to the Network News Transfer Protocol\n
    \  (NNTP) that allows an NNTP client and server to use Transport Layer\n   Security
    (TLS).  The primary goal is to provide encryption for\n   single-link confidentiality
    purposes, but data integrity, (optional)\n   certificate-based peer entity authentication,
    and (optional) data\n   compression are also possible.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n
    \     1.1. Conventions Used in This Document ..........................3\n   2.
    The STARTTLS Extension ..........................................3\n      2.1.
    Advertising the STARTTLS Extension .........................3\n      2.2. STARTTLS
    Command ...........................................4\n           2.2.1. Usage
    ...............................................4\n           2.2.2. Description
    .........................................4\n           2.2.3. Examples ............................................6\n
    \  3. Augmented BNF Syntax for the STARTTLS Extension .................8\n      3.1.
    Commands ...................................................8\n      3.2. Capability
    entries .........................................8\n   4. Summary of Response
    Codes .......................................8\n   5. Security Considerations
    .........................................8\n   6. IANA Considerations ............................................11\n
    \  7. References .....................................................12\n      7.1.
    Normative References ......................................12\n      7.2. Informative
    References ....................................12\n   8. Acknowledgements ...............................................12\n"
  title: Table of Contents
- contents:
  - "1. Introduction\n   Historically, unencrypted NNTP [NNTP] connections were satisfactory\n
    \  for most purposes.  However, sending passwords unencrypted over the\n   network
    is no longer appropriate, and sometimes integrity and/or\n   confidentiality protection
    are desired for the entire connection.\n   The TLS protocol (formerly known as
    SSL) provides a way to secure an\n   application protocol from tampering and eavesdropping.
    \ Although\n   advanced SASL authentication mechanisms [NNTP-AUTH] can provide
    a\n   lightweight version of this service, TLS is complimentary to both\n   simple
    authentication-only SASL mechanisms and deployed clear-text\n   password login
    commands.\n   In some existing implementations, TCP port 563 has been dedicated
    to\n   NNTP over TLS.  These implementations begin the TLS negotiation\n   immediately
    upon connection and then continue with the initial steps\n   of an NNTP session.
    \ This use of TLS on a separate port is\n   discouraged for the reasons documented
    in Section 7 of \"Using TLS\n   with IMAP, POP3 and ACAP\" [TLS-IMAPPOP].\n   This
    specification formalizes the STARTTLS command already in\n   occasional use by
    the installed base.  The STARTTLS command rectifies\n   a number of the problems
    with using a separate port for a \"secure\"\n   protocol variant; it is the preferred
    way of using TLS with NNTP.\n"
  title: 1. Introduction
- contents:
  - "1.1. Conventions Used in This Document\n   The notational conventions used in
    this document are the same as\n   those in [NNTP], and any term not defined in
    this document has the\n   same meaning as in that one.\n   The key words \"REQUIRED\",
    \"MUST\", \"MUST NOT\", \"SHOULD\", \"SHOULD NOT\",\n   \"MAY\", and \"OPTIONAL\"
    in this document are to be interpreted as\n   described in \"Key words for use
    in RFCs to Indicate Requirement\n   Levels\" [KEYWORDS].\n   In the examples,
    commands from the client are indicated with [C], and\n   responses from the server
    are indicated with [S].\n"
  title: 1.1. Conventions Used in This Document
- contents:
  - "2. The STARTTLS Extension\n   This extension provides a new STARTTLS command
    and has the capability\n   label STARTTLS.\n"
  title: 2. The STARTTLS Extension
- contents:
  - "2.1. Advertising the STARTTLS Extension\n   A server supporting the STARTTLS
    command as defined in this document\n   will advertise the \"STARTTLS\" capability
    label in response to the\n   CAPABILITIES command ([NNTP] Section 5.2).  However,
    this capability\n   MUST NOT be advertised once a TLS layer is active (see Section
    2.2.2)\n   or after successful authentication [NNTP-AUTH].  This capability MAY\n
    \  be advertised both before and after any use of the MODE READER\n   command
    ([NNTP] Section 5.3), with the same semantics.\n   As the STARTTLS command is
    related to security, cached results of\n   CAPABILITIES from a previous session
    MUST NOT be relied on, as per\n   Section 12.6 of [NNTP].\n   Example:\n      [C]
    CAPABILITIES\n      [S] 101 Capability list:\n      [S] VERSION 2\n      [S] READER\n
    \     [S] IHAVE\n      [S] STARTTLS\n      [S] LIST ACTIVE NEWSGROUPS\n      [S]
    .\n"
  title: 2.1. Advertising the STARTTLS Extension
- contents:
  - '2.2. STARTTLS Command

    '
  title: 2.2. STARTTLS Command
- contents:
  - "2.2.1. Usage\n   This command MUST NOT be pipelined.\n   Syntax\n      STARTTLS\n
    \  Responses\n      382 Continue with TLS negotiation\n      502 Command unavailable
    [1]\n      580 Can not initiate TLS negotiation\n   [1] If a TLS layer is already
    active, or if authentication has\n   occurred, STARTTLS is not a valid command
    (see Section 2.2.2).\n   NOTE: Notwithstanding Section 3.2.1 of [NNTP], the server
    MUST NOT\n   return either 480 or 483 in response to STARTTLS.\n"
  title: 2.2.1. Usage
- contents:
  - "2.2.2. Description\n   A client issues the STARTTLS command to request negotiation
    of TLS.\n   The STARTTLS command is usually used to initiate session security,\n
    \  although it can also be used for client and/or server certificate\n   authentication
    and/or data compression.\n   An NNTP server returns the 483 response to indicate
    that a secure or\n   encrypted connection is required for the command sent by
    the client.\n   Use of the STARTTLS command as described below is one way to\n
    \  establish a connection with these properties.  The client MAY\n   therefore
    use the STARTTLS command after receiving a 483 response.\n   If a server advertises
    the STARTTLS capability, a client MAY attempt\n   to use the STARTTLS command
    at any time during a session to negotiate\n   TLS without having received a 483
    response.  Servers SHOULD accept\n   such unsolicited TLS negotiation requests.\n
    \  If the server is unable to initiate the TLS negotiation for any\n   reason
    (e.g., a server configuration or resource problem), the server\n   MUST reject
    the STARTTLS command with a 580 response.  Then, it\n   SHOULD either reject subsequent
    restricted NNTP commands from the\n   client with a 483 response code (possibly
    with a text string such as\n   \"Command refused due to lack of security\") or
    reject a subsequent\n   restricted command with a 400 response code (possibly
    with a text\n   string such as \"Connection closing due to lack of security\")
    and\n   close the connection.  Otherwise, the server issues a 382 response,\n
    \  and TLS negotiation begins.  A server MUST NOT under any\n   circumstances
    reply to a STARTTLS command with either a 480 or 483\n   response.\n   If the
    client receives a failure response to STARTTLS, the client\n   must decide whether
    or not to continue the NNTP session.  Such a\n   decision is based on local policy.
    \ For instance, if TLS was being\n   used for client authentication, the client
    might try to continue the\n   session in case the server allows it to do so even
    with no\n   authentication.  However, if TLS was being negotiated for encryption,\n
    \  a client that gets a failure response needs to decide whether to\n   continue
    without TLS encryption, to wait and try again later, or to\n   give up and notify
    the user of the error.\n   Upon receiving a 382 response to a STARTTLS command,
    the client MUST\n   start the TLS negotiation before giving any other NNTP commands.
    \ The\n   TLS negotiation begins for both the client and server with the first\n
    \  octet following the CRLF of the 382 response.  If, after having\n   issued
    the STARTTLS command, the client finds out that some failure\n   prevents it from
    actually starting a TLS handshake, then it SHOULD\n   immediately close the connection.\n
    \  Servers MUST be able to understand backwards-compatible TLS Client\n   Hello
    messages (provided that client_version is TLS 1.0 or later),\n   and clients MAY
    use backwards-compatible Client Hello messages.\n   Neither clients nor servers
    are required to actually support Client\n   Hello messages for anything other
    than TLS 1.0.  However, the TLS\n   extension for Server Name Indication (\"server_name\")
    [TLS-EXT] SHOULD\n   be implemented by all clients; it also SHOULD be implemented
    by any\n   server implementing STARTTLS that is known by multiple names.\n   (Otherwise,
    it is not possible for a server with several hostnames to\n   present the correct
    certificate to the client.)\n   If the TLS negotiation fails, both client and
    server SHOULD\n   immediately close the connection.  Note that while continuing
    the\n   NNTP session is theoretically possible, in practice a TLS negotiation\n
    \  failure often leaves the session in an indeterminate state;\n   therefore,
    interoperability can not be guaranteed.\n   Upon successful completion of the
    TLS handshake, the NNTP protocol is\n   reset to the state immediately after the
    initial greeting response\n   (see 5.1 of [NNTP]) has been sent, with the exception
    that if a MODE\n   READER command has been issued, its effects (if any) are not\n
    \  reversed.  At this point, as no greeting is sent, the next step is\n   for
    the client to send a command.  The server MUST discard any\n   knowledge obtained
    from the client, such as the current newsgroup and\n   article number, that was
    not obtained from the TLS negotiation\n   itself.  Likewise, the client SHOULD
    discard and MUST NOT rely on any\n   knowledge obtained from the server, such
    as the capability list,\n   which was not obtained from the TLS negotiation itself.\n
    \  The server remains in the non-authenticated state, even if client\n   credentials
    are supplied during the TLS negotiation.  The AUTHINFO\n   SASL command [NNTP-AUTH]
    with the EXTERNAL mechanism [SASL] MAY be\n   used to authenticate once TLS client
    credentials are successfully\n   exchanged, but servers supporting the STARTTLS
    command are not\n   required to support AUTHINFO in general or the EXTERNAL mechanism
    in\n   particular.  The server MAY use information from the client\n   certificate
    for identification of connections or posted articles\n   (either in its logs or
    directly in posted articles).\n   Both the client and the server MUST know if
    there is a TLS session\n   active.  A client MUST NOT attempt to start a TLS session
    if a TLS\n   session is already active.  A server MUST NOT return the STARTTLS\n
    \  capability label in response to a CAPABILITIES command received after\n   a
    TLS handshake has completed, and a server MUST respond with a 502\n   response
    code if a STARTTLS command is received while a TLS session\n   is already active.
    \ Additionally, the client MUST NOT issue a MODE\n   READER command while a TLS
    session is active, and a server MUST NOT\n   advertise the MODE-READER capability.\n
    \  The capability list returned in response to a CAPABILITIES command\n   received
    after a successful TLS handshake MAY be different from the\n   list returned before
    the TLS handshake.  For example, an NNTP server\n   supporting SASL [NNTP-AUTH]
    might not want to advertise support for a\n   particular mechanism unless a client
    has sent an appropriate client\n   certificate during a TLS handshake.\n"
  title: 2.2.2. Description
- contents:
  - "2.2.3. Examples\n   Example of a client being prompted to use encryption and
    negotiating\n   it successfully (showing the removal of STARTTLS from the capability\n
    \  list once a TLS layer is active), followed by a successful selection\n   of
    the group and an (inappropriate) attempt by the client to initiate\n   another
    TLS negotiation:\n      [C] CAPABILITIES\n      [S] 101 Capability list:\n      [S]
    VERSION 2\n      [S] READER\n      [S] STARTTLS\n      [S] LIST ACTIVE NEWSGROUPS
    OVERVIEW.FMT\n      [S] OVER\n      [S] .\n      [C] GROUP local.confidential\n
    \     [S] 483 Encryption or stronger authentication required\n      [C] STARTTLS\n
    \     [S] 382 Continue with TLS negotiation\n      [TLS negotiation occurs here]\n
    \     [Following successful negotiation, traffic is protected by TLS]\n      [C]
    CAPABILITIES\n      [S] 101 Capability list:\n      [S] VERSION 2\n      [S] READER\n
    \     [S] LIST ACTIVE NEWSGROUPS OVERVIEW.FMT\n      [S] OVER\n      [S] .\n      [C]
    GROUP local.confidential\n      [S] 211 1234 3000234 3002322 local.confidential\n
    \     [C] STARTTLS\n      [S] 502 STARTTLS not allowed with active TLS layer\n
    \  Example of a request to begin TLS negotiation declined by the server:\n      [C]
    STARTTLS\n      [S] 580 Can not initiate TLS negotiation\n   Example of a failed
    attempt to negotiate TLS, followed by two\n   attempts at selecting groups only
    available under a security layer\n   (in the first case, the server allows the
    session to continue; in the\n   second, it closes the connection).  Note that
    unrestricted commands\n   such as CAPABILITIES are unaffected by the failure:\n
    \     [C] STARTTLS\n      [S] 382 Continue with TLS negotiation\n      [TLS negotiation
    is attempted here]\n      [Following failed negotiation, traffic resumes without
    TLS]\n      [C] CAPABILITIES\n      [S] 101 Capability list:\n      [S] VERSION
    2\n      [S] READER\n      [S] STARTTLS\n      [S] LIST ACTIVE NEWSGROUPS OVERVIEW.FMT\n
    \     [S] OVER\n      [S] .\n      [C] GROUP local.confidential\n      [S] 483
    Encryption or stronger authentication required\n      [C] GROUP local.private\n
    \     [S] 400 Closing connection due to lack of security\n"
  title: 2.2.3. Examples
- contents:
  - "3. Augmented BNF Syntax for the STARTTLS Extension\n   This section describes
    the formal syntax of the STARTTLS extension\n   using ABNF [ABNF].  It extends
    the syntax in Section 9 of [NNTP], and\n   non-terminals not defined in this document
    are defined there.  The\n   [NNTP] ABNF should be imported first before attempting
    to validate\n   these rules.\n"
  title: 3. Augmented BNF Syntax for the STARTTLS Extension
- contents:
  - "3.1. Commands\n   This syntax extends the non-terminal \"command\", which represents
    an\n   NNTP command.\n   command =/ starttls-command\n   starttls-command = \"STARTTLS\"\n"
  title: 3.1. Commands
- contents:
  - "3.2. Capability entries\n   This syntax extends the non-terminal \"capability-entry\",
    which\n   represents a capability that may be advertised by the server.\n   capability-entry
    =/ starttls-capability\n   starttls-capability = \"STARTTLS\"\n"
  title: 3.2. Capability entries
- contents:
  - "4. Summary of Response Codes\n   This section contains a list of each new response
    code defined in\n   this document and indicates whether it is multi-line, which
    commands\n   can generate it, what arguments it has, and what its meaning is.\n
    \  Response code 382\n      Generated by: STARTTLS\n      Meaning: continue with
    TLS negotiation\n   Response code 580\n      Generated by: STARTTLS\n      Meaning:
    can not initiate TLS negotiation\n"
  title: 4. Summary of Response Codes
- contents:
  - "5. Security Considerations\n   Security issues are discussed throughout this
    memo.\n   In general, the security considerations of the TLS protocol [TLS] and\n
    \  any implemented extensions [TLS-EXT] are applicable here; only the\n   most
    important are highlighted specifically below.  Also, this\n   extension is not
    intended to cure the security considerations\n   described in Section 12 of [NNTP];
    those considerations remain\n   relevant to any NNTP implementation.\n   NNTP
    client and server implementations MUST implement the\n   TLS_RSA_WITH_RC4_128_MD5
    [TLS] cipher suite and SHOULD implement the\n   TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA
    [TLS] cipher suite.  This is\n   important, as it assures that any two compliant
    implementations can\n   be configured to interoperate.  All other cipher suites
    are OPTIONAL.\n   Before the TLS handshake has begun, any protocol interactions
    are\n   performed in the clear and may be modified by an active attacker.\n   For
    this reason, clients and servers MUST discard any sensitive\n   knowledge obtained
    prior to the start of the TLS handshake upon the\n   establishment of a security
    layer.  Furthermore, the CAPABILITIES\n   command SHOULD be re-issued upon the
    establishment of a security\n   layer, and other protocol state SHOULD be re-negotiated
    as well.\n   Note that NNTP is not an end-to-end mechanism.  Thus, if an NNTP\n
    \  client/server pair decide to add TLS confidentiality, they are\n   securing
    the transport only for that link.  Similarly, because\n   delivery of a single
    Netnews article may go between more than two\n   NNTP servers, adding TLS confidentiality
    to one pair of servers does\n   not mean that the entire NNTP chain has been made
    private.\n   Furthermore, just because an NNTP server can authenticate an NNTP\n
    \  client, it does not mean that the articles from the NNTP client were\n   authenticated
    by the NNTP client when the client itself received them\n   (prior to forwarding
    them to the server).\n   During the TLS negotiation, the client MUST check its
    understanding\n   of the server hostname against the server's identity as presented
    in\n   the server Certificate message, in order to prevent man-in-the-middle\n
    \  attacks.  Matching is performed according to these rules:\n   -  The client
    MUST use the server hostname it used to open the\n      connection (or the hostname
    specified in TLS \"server_name\"\n      extension [TLS-EXT]) as the value to compare
    against the server\n      name as expressed in the server certificate.  The client
    MUST NOT\n      use any form of the server hostname derived from an insecure\n
    \     remote source (e.g., insecure DNS lookup).  CNAME canonicalization\n      is
    not done.\n   -  If a subjectAltName extension of type dNSName is present in the\n
    \     certificate, it SHOULD be used as the source of the server's\n      identity.\n
    \  -  Matching is case-insensitive.\n   -  A \"*\" wildcard character MAY be used
    as the left-most name\n      component in the certificate.  For example, *.example.com
    would\n      match a.example.com, foo.example.com, etc., but would not match\n
    \     example.com.\n   -  If the certificate contains multiple names (e.g., more
    than one\n      dNSName field), then a match with any one of the fields is\n      considered
    acceptable.\n   If the match fails, the client SHOULD either ask for explicit
    user\n   confirmation or terminate the connection with a QUIT command and\n   indicate
    the server's identity is suspect.\n   Additionally, clients MUST verify the binding
    between the identity of\n   the servers to which they connect and the public keys
    presented by\n   those servers.  Clients SHOULD implement the algorithm in Section
    6\n   of [PKI-CERT] for general certificate validation, but MAY supplement\n   that
    algorithm with other validation methods that achieve equivalent\n   levels of
    verification (such as comparing the server certificate\n   against a local store
    of already-verified certificates and identity\n   bindings).\n   A man-in-the-middle
    attack can be launched by deleting the STARTTLS\n   capability label in the CAPABILITIES
    response from the server.  This\n   would cause the client not to try to start
    a TLS session.  Another\n   man-in-the-middle attack would allow the server to
    announce its\n   STARTTLS capability, but alter the client's request to start
    TLS and\n   the server's response.  An NNTP client can partially protect against\n
    \  these attacks by recording the fact that a particular NNTP server\n   offers
    TLS during one session and generating an alarm if it does not\n   appear in the
    CAPABILITIES response for a later session.  (Of course,\n   the STARTTLS capability
    would not be listed after a security layer is\n   in place.)\n   If the client
    receives a 483 or 580 response, the client has to\n   decide what to do next.
    \ The client has to choose among three main\n   options: to go ahead with the
    rest of the NNTP session, to (re)try\n   TLS later in the session, or to give
    up and postpone\n   newsreading/transport activity.  If an error occurs, the client
    can\n   assume that the server may be able to negotiate TLS in the future and\n
    \  should try to negotiate TLS in a later session.  However, if the\n   client
    and server were only using TLS for authentication and no\n   previous 480 response
    was received, the client may want to proceed\n   with the NNTP session, in case
    some of the operations the client\n   wanted to perform are accepted by the server
    even if the client is\n   unauthenticated.\n"
  title: 5. Security Considerations
- contents:
  - "6. IANA Considerations\n   This section gives a formal definition of the STARTTLS
    extension as\n   required by Section 3.3.3 of [NNTP] for the IANA registry.\n
    \  o  The STARTTLS extension provides connection-based security via the\n      Transport
    Layer Security (TLS).\n   o  The capability label for this extension is \"STARTTLS\".\n
    \  o  The capability label has no arguments.\n   o  This extension defines one
    new command, STARTTLS, whose behavior,\n      arguments, and responses are defined
    in Section 2.2.\n   o  This extension does not associate any new responses with
    pre-\n      existing NNTP commands.\n   o  This extension does affect the overall
    behavior of both server and\n      client, in that after successful use of the
    STARTTLS command, all\n      communication is transmitted with the TLS protocol
    as an\n      intermediary.\n   o  This extension does not affect the maximum length
    of commands or\n      initial response lines.\n   o  This extension does not alter
    pipelining, but the STARTTLS command\n      cannot be pipelined.\n   o  Use of
    this extension does alter the capabilities list; once the\n      STARTTLS command
    has been used successfully, the STARTTLS\n      capability can no longer be advertised
    by CAPABILITIES.\n      Additionally, the MODE-READER capability MUST NOT be advertised\n
    \     after a successful TLS negotiation.\n   o  This extension does not cause
    any pre-existing command to produce\n      a 401, 480, or 483 response.\n   o
    \ This extension is unaffected by any use of the MODE READER\n      command, however
    the MODE READER command MUST NOT be used in the\n      same session following
    a successful TLS negotiation.\n   o  Published Specification: This document.\n
    \  o  Contact for Further Information: Authors of this document.\n   o  Change
    Controller: IESG <iesg@ietf.org>.\n"
  title: 6. IANA Considerations
- contents:
  - '7. References

    '
  title: 7. References
- contents:
  - "7.1. Normative References\n   [ABNF]        Crocker, D., Ed. and P. Overell,
    \"Augmented BNF for\n                 Syntax Specifications: ABNF\", RFC 4234,
    October 2005.\n   [KEYWORDS]    Bradner, S., \"Key words for use in RFCs to Indicate\n
    \                Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [NNTP]
    \       Feather, C., \"Network News Transfer Protocol (NNTP)\",\n                 RFC
    3977, October 2006.\n   [PKI-CERT]    Housley, R., Polk, W., Ford, W., and D.
    Solo, \"Internet\n                 X.509 Public Key Infrastructure Certificate
    and\n                 Certificate Revocation List (CRL) Profile\", RFC 3280,\n
    \                April 2002.\n   [TLS]         Dierks, T. and E. Rescorla, \"The
    Transport Layer\n                 Security (TLS) Protocol Version 1.1\", RFC 4346,
    April\n                 2006.\n   [TLS-EXT]     Blake-Wilson, S., Nystrom, M.,
    Hopwood, D., Mikkelsen,\n                 J., and T. Wright, \"Transport Layer
    Security (TLS)\n                 Extensions\", RFC 4366, April 2006.\n"
  title: 7.1. Normative References
- contents:
  - "7.2. Informative References\n   [NNTP-AUTH]   Vinocur, J., Murchison, K.,  and
    C. Newman, \"Network\n                 News Transfer Protocol (NNTP) Extension
    for\n                 Authentication\", RFC 4643, October 2006.\n   [SASL]        Melninov,
    A., Ed. and K. Zeilenga, Ed, \"Simple\n                 Authentication and Security
    Layer (SASL)\", RFC 4422,\n                 June 2006.\n   [TLS-IMAPPOP] Newman,
    C., \"Using TLS with IMAP, POP3 and ACAP\", RFC\n                 2595, June 1999.\n"
  title: 7.2. Informative References
- contents:
  - "8. Acknowledgements\n   A significant amount of the text in this document was
    lifted from RFC\n   2595 by Chris Newman and RFC 3207 by Paul Hoffman.\n   Special
    acknowledgement goes also to the people who commented\n   privately on intermediate
    revisions of this document, as well as the\n   members of the IETF NNTP Working
    Group for continual insight in\n   discussion.\n"
  title: 8. Acknowledgements
- contents:
  - "Authors' Addresses\n   Kenneth Murchison\n   Carnegie Mellon University\n   5000
    Forbes Avenue\n   Cyert Hall 285\n   Pittsburgh, PA  15213 USA\n   EMail: murch@andrew.cmu.edu\n
    \  Jeffrey M. Vinocur\n   Department of Computer Science\n   Upson Hall\n   Cornell
    University\n   Ithaca, NY  14853\n   EMail: vinocur@cs.cornell.edu\n   Chris Newman\n
    \  Sun Microsystems\n   3401 Centrelake Dr., Suite 410\n   Ontario, CA  91761\n
    \  EMail: Chris.Newman@sun.com\n"
  title: Authors' Addresses
- contents:
  - 'Full Copyright Statement

    '
  - "Copyright (C) The Internet Society (2006).\n   This document is subject to the
    rights, licenses and restrictions\n   contained in BCP 78, and except as set forth
    therein, the authors\n   retain all their rights.\n   This document and the information
    contained herein are provided on an\n   \"AS IS\" basis and THE CONTRIBUTOR, THE
    ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY
    AND THE INTERNET\n   ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR
    IMPLIED,\n   INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION
    HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY
    OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at ietf-\n   ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n
    \  Administrative Support Activity (IASA).\n"
  title: Acknowledgement
