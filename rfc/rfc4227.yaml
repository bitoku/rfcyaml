- title: __initial_text__
  contents:
  - "             Using the Simple Object Access Protocol (SOAP)\n             in\
    \ Blocks Extensible Exchange Protocol (BEEP)\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo specifies a Simple Object Access Protocol (SOAP) binding\
    \ to\n   the Blocks Extensible Exchange Protocol (BEEP) core.  A SOAP binding\n\
    \   describes how SOAP messages are transmitted in the network.\n   The SOAP is\
    \ an XML-based (eXtensible Markup Language) messaging\n   protocol used to implement\
    \ a wide variety of distributed messaging\n   models.  It defines a message format\
    \ and describes a variety of\n   message patterns, including, but not limited\
    \ to, Remote Procedure\n   Calling (RPC), asynchronous event notification, unacknowledged\n\
    \   messages, and forwarding via SOAP intermediaries.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. BEEP Profile Identification .....................................3\n  \
    \    2.1. Profile Initialization .....................................4\n   3.\
    \ SOAP Message Packages ...........................................6\n   4. SOAP\
    \ Message Patterns ...........................................8\n      4.1. One-Way\
    \ Message ............................................8\n      4.2. Request-Response\
    \ Exchange ..................................8\n      4.3. Request/N-Responses\
    \ Exchange ...............................8\n      4.4. Error Handling .............................................9\n\
    \   5. SOAP Protocol Binding Framework Conformance .....................9\n  \
    \    5.1. Binding Name ...............................................9\n    \
    \  5.2. Base URI ...................................................9\n      5.3.\
    \ Supported SOAP Message Exchange Patterns ...................9\n      5.4. Supported\
    \ Features .........................................9\n      5.5. MEP Operation\
    \ .............................................10\n           5.5.1. Behavior\
    \ of Requesting SOAP Node ...................10\n                  5.5.1.1. Init\
    \ ......................................10\n                  5.5.1.2. Requesting\
    \ ................................10\n                  5.5.1.3. Sending+Receiving\
    \ .........................10\n                  5.5.1.4. Success and Fail ..........................11\n\
    \           5.5.2. Behavior of Responding SOAP Node ...................11\n  \
    \                5.5.2.1. Init ......................................11\n    \
    \              5.5.2.2. Receiving .................................11\n      \
    \            5.5.2.3. Receiving+Sending .........................11\n        \
    \          5.5.2.4. Success and Fail ..........................11\n   6. URL Schemes\
    \ ....................................................11\n      6.1. The soap.beep\
    \ URL Scheme ..................................11\n           6.1.1. Resolving\
    \ IP/TCP Address Information ...............12\n      6.2. The soap.beeps URL\
    \ Scheme .................................13\n   7. Registration Templates .........................................13\n\
    \      7.1. SOAP Profile Feature Registration Template ................13\n  \
    \ 8. Initial Registrations ..........................................13\n    \
    \  8.1. Registration: The SOAP Profile ............................13\n      8.2.\
    \ Registration: The soap.beep URL Scheme ....................14\n      8.3. Registration:\
    \ The soap.beeps URL Scheme ...................14\n      8.4. Registration: The\
    \ System (Well-Known) TCP Port\n           Number for SOAP ...........................................15\n\
    \   9. Security Considerations ........................................15\n  \
    \ 10. IANA Considerations ...........................................16\n   11.\
    \ Changes from RFC 3288 .........................................16\n   12. Acknowledgements\
    \ ..............................................17\n   13. References ....................................................17\n\
    \      13.1. Normative References .....................................17\n  \
    \    13.2. Informative References ...................................18\n   A.\
    \ Appendix - SOAP with Attachments (Informative) .................19\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This memo specifies how SOAP envelopes [15] are transmitted\
    \ using a\n   BEEP profile [1].  Conforming implementations MUST support SOAP\n\
    \   version 1.2 [15] and MAY support other versions, such as SOAP version\n  \
    \ 1.1 [17].  This memo specifies how SOAP envelopes [15] are\n   transmitted using\
    \ a BEEP profile [1].  Unlike its predecessor,\n   RFC3288 [16], this memo does\
    \ not mandate the use of SOAP version 1.1.\n   Throughout this memo, the term\
    \ \"envelope\" refers to the top-level\n   element exchanged by SOAP senders and\
    \ receivers.  For example, when\n   referring to SOAP version 1.2, the term \"\
    envelope\" refers to the\n   \"Envelope\" element defined in Section 5.1 of [2].\
    \  Furthermore, the\n   terms \"peer\", \"client\", \"server\", \"one-to-one\"\
    , and \"one-to-many\" are\n   used in the context of BEEP.  In particular, Sections\
    \ 2.1 and 2.1.1\n   of [1] discuss BEEP roles and exchange styles.\n"
- title: 2.  BEEP Profile Identification
  contents:
  - "2.  BEEP Profile Identification\n   The BEEP profile for SOAP is identified as\n\
    \       http://iana.org/beep/soap/VERSION\n   in the BEEP \"profile\" element\
    \ during channel creation. where\n   \"VERSION\" refers to the numeric version\
    \ of the SOAP specification.\n   For example,\n       http://iana.org/beep/soap/1.2\n\
    \   refers to version 1.2.\n   Note that RFC 3288 [16] used\n       http://iana.org/beep/soap\n\
    \   for the purposes of profile identification for SOAP version 1.1\n   envelopes\
    \ [17].  If an implementation of this memo chooses to\n   implement SOAP version\
    \ 1.1, then it should support both this Uniform\n   Resource Identifier (URI)\
    \ for profile identification as well as\n   \"http://iana.org/beep/soap/1.1\"\
    .\n   In BEEP, when the first channel is successfully created, the\n   \"serverName\"\
    \ attribute in the \"start\" element identifies the \"virtual\n   host\" associated\
    \ with the peer acting in the server role, e.g.,\n       <start number='1' serverName='stockquoteserver.example.com'>\n\
    \           <profile uri='http://iana.org/beep/soap/1.2' />\n       </start>\n\
    \   The \"serverName\" attribute is analogous to HTTP's \"Host\" request-\n  \
    \ header field (cf. Section 14.23 of [4]).\n   There are two states in the BEEP\
    \ profile for SOAP, \"boot\" and\n   \"ready\":\n   o  In the \"boot\" state,\
    \ the peer requesting the creation of the\n      channel sends a \"bootmsg\" (either\
    \ during channel initialization or\n      in a \"MSG\" message).\n      *  If\
    \ the other peer sends a \"bootrpy\" (either during channel\n         initialization\
    \ or in an \"RPY\" message), then the \"ready\" state\n         is entered\n \
    \     *  Otherwise, the other peer sends an \"error\" (either during\n       \
    \  channel initialization or in an \"ERR\" message), then no state\n         change\
    \ occurs.\n   o  In the \"ready\" state, either peer begins a SOAP message pattern\
    \ by\n      sending a \"MSG\" message containing an envelope.  The other peer\n\
    \      completes the message pattern either by\n      *  sending back an \"RPY\"\
    \ message containing an envelope or\n      *  sending back zero or more \"ANS\"\
    \ messages, each containing an\n         envelope, followed by a \"NUL\" message.\n\
    \      Regardless, no state change occurs.\n"
- title: 2.1.  Profile Initialization
  contents:
  - "2.1.  Profile Initialization\n   The boot message is used for two purposes:\n\
    \      resource identification: each channel bound to the BEEP profile\n     \
    \ for SOAP provides access to a single resource (a network data\n      object\
    \ or service).\n      feature negotiation: if new features of SOAP (such as compression)\n\
    \      emerge, their use can be negotiated.\n   The DTD syntax for the boot message\
    \ and its response are:\n       <!ELEMENT bootmsg     EMPTY>\n       <!ATTLIST\
    \ bootmsg\n                 resource    CDATA             #REQUIRED\n        \
    \         features    NMTOKENS          \"\">\n       <!ELEMENT bootrpy     EMPTY>\n\
    \       <!ATTLIST bootrpy\n                 features    NMTOKENS          \"\"\
    >\n   The boot message contains a mandatory and an optional attribute:\n   o \
    \ the \"resource\" attribute, which is analogous to HTTP's \"abs_path\"\n    \
    \  Request-URI parameter (cf. Section 5.1.2 of [4]) and\n   o  the \"features\"\
    \ attribute, which, if present, contains one or more\n      feature tokens, each\
    \ indicating an optional feature of the BEEP\n      profile for SOAP that is being\
    \ requested for possible use over the\n      channel.\n   Section 7.1 defines\
    \ a registration template for optional features.\n   If the peer acting in the\
    \ server role recognizes the requested\n   resource, it replies with the boot\
    \ response that contains one\n   optional attribute:\n   o  The \"features\" attribute,\
    \ if present, contains a subset of the\n      feature tokens in the boot message,\
    \ indicating which features may\n      be used over the channel.  (If not present\
    \ or empty, then no\n      features may be used.)\n   Otherwise, if the boot message\
    \ is improperly formed, or if the\n   requested resource is not recognized, the\
    \ peer acting in the server\n   role replies with an error message (cf. Section\
    \ 7.1 of [1]).\n   Typically, the boot message and its response are exchanged\
    \ during\n   channel initialization (cf. Section 2.3.1.2 of [1]).\n   For example,\
    \ here the boot message and its response are exchanged\n   during channel initialization:\n\
    \       C: <start number='1' serverName='stockquoteserver.example.com'>\n    \
    \   C:     <profile uri='http://iana.org/beep/soap/1.2'>\n       C:         <![CDATA[<bootmsg\
    \ resource='/StockQuote' />]]>\n       C:     </profile>\n       C: </start>\n\
    \       S: <profile uri='http://iana.org/beep/soap/1.2'>\n       S:     <![CDATA[<bootrpy\
    \ />]]>\n       S: </profile>\n   The channel bound to the BEEP profile for SOAP\
    \ is now in the \"ready\"\n   state.\n   Alternatively, here is an example in\
    \ which the boot exchange is\n   unsuccessful:\n       C: <start number='1' serverName='stockquoteserver.example.com'>\n\
    \       C:     <profile uri='http://iana.org/beep/soap/1.2'>\n       C:      \
    \   <![CDATA[<bootmsg resource='/StockPick' />]]>\n       C:     </profile>\n\
    \       C: </start>\n       S: <profile uri='http://iana.org/beep/soap/1.2'>\n\
    \       S:     <![CDATA[<error code='550'>resource not\n       S:            \
    \                    supported</error>]]>\n       S: </profile>\n   Although the\
    \ channel was created successfully, it remains in the\n   \"boot\" state.\n"
- title: 3.  SOAP Message Packages
  contents:
  - "3.  SOAP Message Packages\n   The BEEP profile for SOAP transmits envelopes encoded\
    \ as UTF-8 and\n   SHOULD use the media type \"application/soap+xml\" [5], e.g.,\n\
    \   MSG 1 1 . 0 284\n   Content-Type: application/soap+xml\n   <env:Envelope\n\
    \        xmlns:env=\"http://www.w3.org/2003/05/soap-envelope\">\n     <env:Header>\n\
    \      <m:GetLastTradePrice xmlns:m=\"Some-URI\" />\n     </env:Header>\n    \
    \ <env:Body>\n       <symbol xmlns:p=\"Some-URI\" >DIS</symbol>\n     </env:Body>\n\
    \   </env:Envelope>\n   END\n   To provide compatibility with RFC 3288 [16], it\
    \ MAY use the media\n   type \"application/xml\" [6].\n   In addition, an implementation\
    \ of the BEEP profile for SOAP MAY\n   support transmission of envelopes using\
    \ the MTOM [7] / XOP [8]\n   packaging technique, e.g.,\n   MSG 1 2 . 283 1436\n\
    \   MIME-Version: 1.0\n   Content-Type: Multipart/Related;boundary=MIME_boundary;\n\
    \       type=\"application/xop+xml\";\n       start=\"<mymessage.xml@example.org>\"\
    ;\n       startinfo=\"application/soap+xml; action=\n   Content-Description: A\
    \ SOAP message with my pic and sig in it\n   --MIME_boundary\n   Content-Type:\
    \ application/xop+xml;\n       charset=UTF-8;\n       type=\"application/soap+xml;\
    \ action=\n   Content-Transfer-Encoding: 8bit\n   Content-ID: <mymessage.xml@example.org>\n\
    \   <soap:Envelope\n       xmlns:soap='http://www.w3.org/2003/05/soap-envelope'\n\
    \       xmlns:xmlmime='http://www.w3.org/2004/11/xmlmime'>\n     <soap:Body>\n\
    \       <m:data xmlns:m='http://example.org/stuff'>\n         <m:photo\n     xmlmime:contentType='image/png'><xop:Include\n\
    \       xmlns:xop='http://www.w3.org/2004/08/xop/include'\n       href='cid:http://example.org/me.png'/></m:photo>\n\
    \         <m:sig\n     xmlmime:contentType='application/pkcs7-signature'><xop:Include\n\
    \       xmlns:xop='http://www.w3.org/2004/08/xop/include'\n       href='cid:http://example.org/my.hsh'/></m:sig>\n\
    \       </m:data>\n     </soap:Body>\n   </soap:Envelope>\n   --MIME_boundary\n\
    \   Content-Type: image/png\n   Content-Transfer-Encoding: binary\n   Content-ID:\
    \ <http://example.org/me.png>\n   // binary octets for png\n   --MIME_boundary\n\
    \   Content-Type: application/pkcs7-signature\n   Content-Transfer-Encoding: binary\n\
    \   Content-ID: <http://example.org/my.hsh>\n   // binary octets for signature\n\
    \   --MIME_boundary--\n   END\n   Consult Section 4.1 of XOP [8] for guidance\
    \ on MIME Multipart/Related\n   usage.  Because BEEP provides an 8-bit-wide path,\
    \ a \"transformative\"\n   Content-Transfer-Encoding (e.g., \"base64\" or \"quoted-printable\"\
    )\n   should not be used.  Note that MIME [9] requires that the value of\n   the\
    \ \"Content-ID\" header be globally unique.  As stated in Section 4\n   of XOP\
    \ [8], XOP may be used with diverse packaging mechanisms.  When\n   an implementation\
    \ of BEEP in SOAP does support MTOM/XOP, it SHOULD\n   support the MIME Multipart/Related\
    \ XOP Package format, and MAY\n   support others.  Additional formats could, in\
    \ the future, include XOP\n   package formats specific to BEEP (e.g., sending\
    \ the attachments on a\n   different channel to the SOAP channel, which would\
    \ avoid searching\n   for the MIME boundary tags and allows lazy delivery of attachments,\n\
    \   delivering them only when really needed.)\n"
- title: 4.  SOAP Message Patterns
  contents:
  - '4.  SOAP Message Patterns

    '
- title: 4.1.  One-Way Message
  contents:
  - "4.1.  One-Way Message\n   A one-way message involves sending a message without\
    \ any response\n   being returned.\n   The BEEP profile for SOAP achieves this\
    \ using a one-to-many exchange,\n   in which the client sends a \"MSG\" message\
    \ containing an envelope, and\n   the server immediately sends back a \"NUL\"\
    \ message, before processing\n   the contents of the envelope.\n"
- title: 4.2.  Request-Response Exchange
  contents:
  - "4.2.  Request-Response Exchange\n   A request/response exchange involves sending\
    \ a request, which results\n   in a response being returned.\n   The BEEP profile\
    \ for SOAP achieves this using a one-to-one exchange,\n   in which the client\
    \ sends a \"MSG\" message containing an envelope, and\n   the server sends back\
    \ a \"RPY\" message containing an envelope.\n"
- title: 4.3.  Request/N-Responses Exchange
  contents:
  - "4.3.  Request/N-Responses Exchange\n   A request/N-responses exchange involves\
    \ sending a request, which\n   results in zero or more responses being returned.\n\
    \   The BEEP profile for SOAP achieves this using a one-to-many exchange,\n  \
    \ in which the client sends a \"MSG\" message containing an envelope, and\n  \
    \ the server sends back zero or more \"ANS\" messages, each containing an\n  \
    \ envelope, followed by a \"NUL\" message.\n"
- title: 4.4.  Error Handling
  contents:
  - "4.4.  Error Handling\n   The BEEP profile for SOAP does not use the \"ERR\" message\
    \ for SOAP\n   faults.  When performing one-to-one exchanges, whatever SOAP response\n\
    \   (including SOAP faults) generated by the server is always returned in\n  \
    \ the \"RPY\" message.  When performing one-to-many exchanges, whatever\n   SOAP\
    \ response (including SOAP faults) generated by the server is\n   always returned\
    \ in the \"ANS\" messages.\n   If there is an error with the BEEP message unrelated\
    \ to the SOAP\n   envelope (e.g., poorly formed MIME message or MIME Content-Type\
    \ not\n   supported), then the server responds with an ERR message (see Section\n\
    \   7.1 of [1]) with an appropriate reply code (e.g., see Section 8 of\n   [1]).\n"
- title: 5.  SOAP Protocol Binding Framework Conformance
  contents:
  - '5.  SOAP Protocol Binding Framework Conformance

    '
- title: 5.1.  Binding Name
  contents:
  - "5.1.  Binding Name\n   This binding is identified by a URI that is exactly the\
    \ same as the\n   profile URI for BEEP in SOAP (see Section 2).\n"
- title: 5.2.  Base URI
  contents:
  - "5.2.  Base URI\n   The Base URI for the SOAP envelope is the URI of the resource\n\
    \   identified in the bootmsg.\n"
- title: 5.3.  Supported SOAP Message Exchange Patterns
  contents:
  - "5.3.  Supported SOAP Message Exchange Patterns\n   An implementation of this\
    \ binding MUST support the following SOAP\n   Message Exchange Pattern (MEP):\n\
    \   o  \"http://www.w3.org/2003/05/soap/mep/request-response/\" (see\n      Section\
    \ 6.2 of [3])\n"
- title: 5.4.  Supported Features
  contents:
  - "5.4.  Supported Features\n   An implementation of this binding MAY support the\
    \ following feature:\n   \"http://www.w3.org/2003/05/soap/features/action/\" (see\
    \ Section 6.5 of\n   [3].)\n"
- title: 5.5.  MEP Operation
  contents:
  - "5.5.  MEP Operation\n   For binding instances conforming to this specification:\n\
    \   o  A SOAP node instantiated at the BEEP peer that initiates the\n      message\
    \ exchange may assume the role (i.e., the property http://\n      www.w3.org/2003/05/soap/bindingFramework/ExchangeContext/Role\
    \ ) of\n      \"RequestingSOAPNode\".\n   o  A SOAP node instantiated at the other\
    \ BEEP peer may assume the\n      role (i.e., the property http://www.w3.org/2003/05/soap/\n\
    \      bindingFramework/ExchangeContext/Role) of \"RespondingSOAPNode\".\n"
- title: 5.5.1.  Behavior of Requesting SOAP Node
  contents:
  - "5.5.1.  Behavior of Requesting SOAP Node\n   The overall flow of the behavior\
    \ of a requesting SOAP node follows a\n   state machine description consistent\
    \ with Section 6.2 of [3].\n   In order to avoid deadlock during streaming (see\
    \ Section 6.2.3 of\n   [3]), the requesting SOAP node MUST be able to process\
    \ incoming SOAP\n   response information while the SOAP request is still being\n\
    \   transmitted.\n"
- title: 5.5.1.1.  Init
  contents:
  - "5.5.1.1.  Init\n   In the \"Init\" state, a BEEP message is formulated according\
    \ to\n   Section 3, transmission of the message begins, and then the state\n \
    \  changes to \"Requesting\".\n"
- title: 5.5.1.2.  Requesting
  contents:
  - "5.5.1.2.  Requesting\n   In the \"Requesting\" state, more of the request message\
    \ is transmitted\n   and the arrival of the response is awaited.  When the beginning\
    \ of\n   the response message is received, if it is a BEEP ERR message, then\n\
    \   the state transitions to \"Fail\"; otherwise, the state transitions to\n \
    \  \"Sending+Receiving\".\n"
- title: 5.5.1.3.  Sending+Receiving
  contents:
  - "5.5.1.3.  Sending+Receiving\n   In the \"Sending+Receiving\" state, the transmission\
    \ of the request\n   message and receiving of the response message are completed.\
    \  The\n   response message is assumed to contain a SOAP envelope serialized\n\
    \   according to the rules for carrying SOAP messages in the media type\n   given\
    \ in the Content-Type header field.  Once the receipt of the\n   response is completed,\
    \ the state transitions to \"Success\".\n"
- title: 5.5.1.4.  Success and Fail
  contents:
  - "5.5.1.4.  Success and Fail\n   \"Success\" and \"Fail\" are the terminal states\
    \ for the state machine.\n"
- title: 5.5.2.  Behavior of Responding SOAP Node
  contents:
  - "5.5.2.  Behavior of Responding SOAP Node\n   The overall flow of the behavior\
    \ of a responding SOAP node follows a\n   state machine description consistent\
    \ with Section 6.2 of [3]\n"
- title: 5.5.2.1.  Init
  contents:
  - "5.5.2.1.  Init\n   In the \"Init\" state, the binding awaits the start of the\
    \ inbound\n   request.  In this state, it may only generate ERR messages (in\n\
    \   accordance with Section 4.4).\n"
- title: 5.5.2.2.  Receiving
  contents:
  - "5.5.2.2.  Receiving\n   The binding begins to receive the request message and\
    \ prepares the\n   start of the response, in accordance with Section 3.  When\
    \ ready to\n   transmit the response, the state transitions to \"Receiving+Sending\"\
    .\n"
- title: 5.5.2.3.  Receiving+Sending
  contents:
  - "5.5.2.3.  Receiving+Sending\n   The binding completes the receiving of the request\
    \ and sending of the\n   response and then transitions to \"Success\" state.\n"
- title: 5.5.2.4.  Success and Fail
  contents:
  - "5.5.2.4.  Success and Fail\n   \"Success\" and \"Fail\" are the terminal states\
    \ that indicate completion\n   of the message exchange.\n"
- title: 6.  URL Schemes
  contents:
  - "6.  URL Schemes\n   This memo defines two URL schemes, \"soap.beep\" and \"soap.beeps\"\
    ,\n   which identify the use of SOAP over BEEP over TCP.  Note that, at\n   present,\
    \ a \"generic\" URL scheme for SOAP is not defined.\n"
- title: 6.1.  The soap.beep URL Scheme
  contents:
  - "6.1.  The soap.beep URL Scheme\n   The \"soap.beep\" URL scheme uses the \"generic\
    \ URI\" syntax defined in\n   Section 3 of [10], specifically:\n   o  the value\
    \ \"soap.beep\" is used for the scheme component and\n   o  the server-based naming\
    \ authority defined in Section 3.2.2 of [10]\n      is used for the authority\
    \ component.\n   o  the path component maps to the \"resource\" component of the\
    \ boot\n      message sent during profile initialization (if absent, it defaults\n\
    \      to \"/\").\n   The values of both the scheme and authority components are\
    \ case-\n   insensitive.\n   For example, the URL\n       soap.beep://stockquoteserver.example.com/StockQuote\n\
    \   might result in the example shown in Section 2.1.\n"
- title: 6.1.1.  Resolving IP/TCP Address Information
  contents:
  - "6.1.1.  Resolving IP/TCP Address Information\n   The \"soap.beep\" URL scheme\
    \ indicates the use of the BEEP profile for\n   SOAP running over TCP/IP.\n  \
    \ If the authority component contains a domain name and a port number,\n   e.g.,\n\
    \       soap.beep://stockquoteserver.example.com:1026\n   then the DNS is queried\
    \ for the A Resource Records corresponding to\n   the domain name, and the port\
    \ number is used directly.\n   If the authority component contains a domain name\
    \ and no port number,\n   e.g.,\n       soap.beep://stockquoteserver.example.com\n\
    \   the Service Record algorithm [11] is used with a service parameter of\n  \
    \ \"soap-beep\" and a protocol parameter of \"tcp\" to determine the IP/TCP\n\
    \   addressing information.  If no appropriate SRV RRs are found (e.g.,\n   for\
    \ \"_soap-beep._tcp.stockquoteserver.example.com\"), then the DNS is\n   queried\
    \ for the A RRs corresponding to the domain name and the port\n   number used\
    \ is assigned by the IANA for the registration in Section\n   8.4.\n   If the\
    \ authority component contains an IP address, e.g.,\n       soap.beep://192.0.2.0:1026\n\
    \   then the DNS is not queried, and the IP address is used directly.  If\n  \
    \ a port number is present, it is used directly; otherwise, the port\n   number\
    \ used is assigned by the IANA for the registration in Section\n   8.4.\n   While\
    \ the use of literal IPv6 addresses in URLs is discouraged, if a\n   literal IPv6\
    \ address is used in a \"soap.beep\" URL, it must conform to\n   the syntax specified\
    \ in [12].\n"
- title: 6.2.  The soap.beeps URL Scheme
  contents:
  - "6.2.  The soap.beeps URL Scheme\n   The \"soap.beeps\" URL scheme is identical,\
    \ in all ways, to the\n   \"soap.beep\" URL scheme specified in Section 6.1, with\
    \ the exception\n   that prior to starting the BEEP profile for SOAP, the BEEP\
    \ session\n   must be tuned for privacy.  In particular, note that both URL schemes\n\
    \   use the identical algorithms and parameters for address resolution as\n  \
    \ specified in Section 6.1.1 (e.g., the same service name for SRV\n   lookups,\
    \ the same port number for TCP, and so on).\n   There are two ways to perform\
    \ privacy tuning on a BEEP session,\n   either\n   o  a transport security profile\
    \ may be successfully started or\n   o  a user authentication profile that supports\
    \ transport security may\n      be successfully started.\n   Regardless, upon\
    \ completion of the negotiation process, a tuning\n   reset occurs in which both\
    \ BEEP peers issue a new greeting.  Consult\n   Section 3 of [1] for an example\
    \ of how a BEEP peer may choose to\n   issue different greetings based on whether\
    \ privacy is in use.\n"
- title: 7.  Registration Templates
  contents:
  - '7.  Registration Templates

    '
- title: 7.1.  SOAP Profile Feature Registration Template
  contents:
  - "7.1.  SOAP Profile Feature Registration Template\n   When a feature for the BEEP\
    \ profile for SOAP is registered, the\n   following information is supplied:\n\
    \   Feature Identification: specify a string that identifies this\n      feature.\
    \  Unless the feature is registered with the IANA, the\n      feature's identification\
    \ must start with \"x-\".\n   Feature Semantics: specify the semantics of the\
    \ feature.\n   Contact Information: specify the electronic contact information\
    \ for\n      the author of the feature.\n"
- title: 8.  Initial Registrations
  contents:
  - '8.  Initial Registrations

    '
- title: '8.1.  Registration: The SOAP Profile'
  contents:
  - "8.1.  Registration: The SOAP Profile\n   Profile Identification: http://iana.org/beep/soap/VERSION\n\
    \   Messages exchanged during Channel Creation: bootmsg, bootrpy\n   Messages\
    \ starting one-to-one exchanges: bootmsg, a SOAP \"envelope\"\n   Messages in\
    \ positive replies: bootrpy, a SOAP \"envelope\"\n   Messages in negative replies:\
    \ error\n   Messages in one-to-many exchanges: a SOAP \"envelope\"\n   Message\
    \ Syntax: a SOAP envelope\n   Message Semantics: corresponds to the relevant SOAP\
    \ specification,\n      e.g., for SOAP version 1.2, cf. [2].\n   Contact Information:\
    \ Eamon O'Tuathail <eamon.otuathail@clipcode.com>,\n      Marshall Rose <mrose@dbc.mtview.ca.us>\n"
- title: '8.2.  Registration: The soap.beep URL Scheme'
  contents:
  - "8.2.  Registration: The soap.beep URL Scheme\n   URL scheme name: soap.beep\n\
    \   URL scheme syntax: cf. Section 6.1\n   Character encoding considerations:\
    \ cf. the \"generic URI\" syntax\n      defined in Section 3 of [10]\n   Intended\
    \ usage: identifies a SOAP resource made available using the\n      BEEP profile\
    \ for SOAP\n   Applications using this scheme: cf. \"Intended usage\", above\n\
    \   Interoperability considerations: n/a\n   Security Considerations: cf. Section\
    \ 9\n   Relevant Publications: cf. [2] for SOAP version 1.2\n   Contact Information:\
    \ Eamon O'Tuathail <eamon.otuathail@clipcode.com>,\n      Marshall Rose <mrose@dbc.mtview.ca.us>\n\
    \   Author/Change controller: the IESG\n"
- title: '8.3.  Registration: The soap.beeps URL Scheme'
  contents:
  - "8.3.  Registration: The soap.beeps URL Scheme\n   URL scheme name: soap.beeps\n\
    \   URL scheme syntax: cf. Section 6.2\n   Character encoding considerations:\
    \ cf. the \"generic URI\" syntax\n      defined in Section 3 of [10]\n   Intended\
    \ usage: identifies a SOAP resource made available using the\n      BEEP profile\
    \ for SOAP after the BEEP session has been tuned for\n      privacy\n   Applications\
    \ using this scheme: cf. \"Intended usage\", above\n   Interoperability considerations:\
    \ n/a\n   Security Considerations: cf. Section 9\n   Relevant Publications: cf.\
    \ [2] for SOAP version 1.2\n   Contact Information: Eamon O'Tuathail <eamon.otuathail@clipcode.com>,\n\
    \      Marshall Rose <mrose@dbc.mtview.ca.us>\n   Author/Change controller: the\
    \ IESG\n"
- title: '8.4.  Registration: The System (Well-Known) TCP Port Number for SOAP'
  contents:
  - "8.4.  Registration: The System (Well-Known) TCP Port Number for SOAP\n      over\
    \ BEEP\n   Protocol Number: TCP\n   Message Formats, Types, Opcodes, and Sequences:\
    \ cf. Section 2.1\n   Functions: cf. [2] for SOAP version 1.2\n   Use of Broadcast/Multicast:\
    \ none\n   Proposed Name: SOAP over BEEP\n   Short name: soap-beep\n   Contact\
    \ Information: Eamon O'Tuathail <eamon.otuathail@clipcode.com>,\n      Marshall\
    \ Rose <mrose@dbc.mtview.ca.us>\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   Although service provisioning is a policy matter,\
    \ at a minimum, all\n   implementations MUST provide the following tuning profiles:\n\
    \   for authentication: http://iana.org/beep/SASL/DIGEST-MD5\n   for confidentiality:\
    \ http://iana.org/beep/TLS (using the\n      TLS_RSA_WITH_AES_EDE_CBC_SHA cipher)\n\
    \   for both: http://iana.org/beep/TLS (using the\n      TLS_RSA_WITH_AES_EDE_CBC_SHA\
    \ cipher supporting client-side\n      certificates)\n   Furthermore, implementations\
    \ may choose to offer MIME-based security\n   services providing message integrity\
    \ and confidentiality, such as\n   OpenPGP [13] or S/MIME [14].\n   Regardless,\
    \ consult [1]'s Section 9 for a discussion of BEEP-specific\n   security issues.\n"
- title: 10.  IANA Considerations
  contents:
  - "10.  IANA Considerations\n   Previously, the IANA registered \"http://iana.org/beep/soap\"\
    \ for use\n   with RFC 3288 [16].  This memo requires that the IANA register a\n\
    \   URI-prefix of\n       http://iana.org/beep/soap/VERSION\n   to correspond\
    \ to the family of profiles defined Section 8.1.\n   The IANA has registered \"\
    soap.beep\" and \"soap.beeps\" as URL schemes,\n   as specified in Section 8.2\
    \ and Section 8.3, respectively.\n   The IANA has also registered \"SOAP over\
    \ BEEP\" as a TCP port number,\n   as specified in Section 8.4.\n   The IANA now\
    \ broadens these three registries to support the family of\n   BEEP profiles defined\
    \ by this URI prefix.\n   Finally, the IANA maintains a list of SOAP profile features,\
    \ cf.\n   Section 7.1.  The IESG is responsible for assigning a designated\n \
    \  expert to review the specification prior to the IANA making the\n   assignment.\
    \  Prior to contacting the IESG, developers of SOAP profile\n   features must\
    \ use the mailing list beepwg@lists.beepcore.org to\n   solicit commentary.\n"
- title: 11.  Changes from RFC 3288
  contents:
  - "11.  Changes from RFC 3288\n   This memo differs from RFC 3288 [16] in one substantive\
    \ way: a URL\n   prefix is defined to support a family of BEEP profiles corresponding\n\
    \   to different versions of SOAP.  Similarly, the IANA registrations in\n   Section\
    \ 8.1, Section 8.3, and Section 8.4 are updated to reflect this\n   broadening.\n\
    \   Support for W3C MTOM/XOP packaging has been added.\n   A new section was added\
    \ to discuss the distributed state machine of\n   the Request-Response MEP.\n\
    \   In non-substantive ways, a small number of typographical errors were\n   corrected.\n"
- title: 12.  Acknowledgements
  contents:
  - "12.  Acknowledgements\n   The authors gratefully acknowledge the contributions\
    \ of: Christopher\n   Ferris, Huston Franklin, Alexey Melnikov, Bill Mills, and\
    \ Roy T.\n   Fielding.\n"
- title: 13.  References
  contents:
  - '13.  References

    '
- title: 13.1.  Normative References
  contents:
  - "13.1.  Normative References\n   [1]   Rose, M., \"The Blocks Extensible Exchange\
    \ Protocol Core\", RFC\n         3080, March 2001.\n   [2]   Nielsen, H., Mendelsohn,\
    \ N., Gudgin, M., Hadley, M., and J.\n         Moreau, \"SOAP Version 1.2 Part\
    \ 1: Messaging Framework\", W3C REC\n         REC-soap12-part1-20030624, June\
    \ 2003.\n   [3]   Nielsen, H., Hadley, M., Moreau, J., Mendelsohn, N., and M.\n\
    \         Gudgin, \"SOAP Version 1.2 Part 2: Adjuncts\", W3C REC REC-\n      \
    \   soap12-part2-20030624, June 2003.\n   [4]   Fielding, R., Gettys, J., Mogul,\
    \ J., Frystyk, H., Masinter, L.,\n         Leach, P., and T. Berners-Lee, \"Hypertext\
    \ Transfer Protocol --\n         HTTP/1.1\", RFC 2616, June 1999.\n   [5]   Baker,\
    \ M. and M. Nottingham, \"The \"application/soap+xml\" media\n         type\"\
    , RFC 3902, September 2004.\n   [6]   Murata, M., St. Laurent, S., and D. Kohn,\
    \ \"XML Media Types\",\n         RFC 3023, January 2001.\n   [7]   Nottingham,\
    \ M., Mendelsohn, N., Gudgin, M., and H. Ruellan,\n         \"SOAP Message Transmission\
    \ Optimization Mechanism\", W3C REC\n         REC-soap12-mtom-20050125, January\
    \ 2005.\n   [8]   Nottingham, M., Mendelsohn, N., Gudgin, M., and H. Ruellan,\n\
    \         \"XML-binary Optimized Packaging\", W3C REC REC-xop10-20050125,\n  \
    \       January 2005.\n   [9]   Freed, N. and N. Borenstein, \"Multipurpose Internet\
    \ Mail\n         Extensions (MIME) Part One: Format of Internet Message Bodies\"\
    ,\n         RFC 2045, November 1996.\n   [10]  Berners-Lee, T., Fielding, R.,\
    \ and L. Masinter, \"Uniform\n         Resource Identifier (URI): Generic Syntax\"\
    , STD 66, RFC 3986,\n         January 2005.\n   [11]  Gulbrandsen, A., Vixie,\
    \ P., and L. Esibov, \"A DNS RR for\n         specifying the location of services\
    \ (DNS SRV)\", RFC 2782,\n         February 2000.\n   [12]  Berners-Lee, T., Fielding,\
    \ R., and L. Masinter, \"Uniform\n         Resource Identifier (URI): Generic\
    \ Syntax\", STD 66, RFC 3986,\n         January 2005.\n   [13]  Elkins, M., Del\
    \ Torto, D., Levien, R., and T. Roessler, \"MIME\n         Security with OpenPGP\"\
    , RFC 3156, August 2001.\n   [14]  Ramsdell, B., \"Secure/Multipurpose Internet\
    \ Mail Extensions\n         (S/MIME) Version 3.1 Message Specification\", RFC\
    \ 3851, July\n         2004.\n"
- title: 13.2.  Informative References
  contents:
  - "13.2.  Informative References\n   [15]  Mitra, N., \"SOAP Version 1.2 Part 0:\
    \ Primer\", W3C REC REC-\n         soap12-part0-20030624, June 2003.\n   [16]\
    \  O'Tuathail, E. and M. Rose, \"Using the Simple Object Access\n         Protocol\
    \ (SOAP) in Blocks Extensible Exchange Protocol (BEEP)\",\n         RFC 3288,\
    \ June 2002.\n   [17]  Box, D., Ehnebuske, D., Kakivaya, G., Layman, A., Mendelsohn,\n\
    \         N., Nielsen, H., Thatte, S., and D. Winer, \"Simple Object\n       \
    \  Access Protocol (SOAP) 1.1\", W3C NOTE NOTE-SOAP-20000508, May\n         2000.\n\
    \   [18]  Levinson, E., \"The MIME Multipart/Related Content-type\", RFC\n   \
    \      2387, August 1998.\n   [19]  Barton, J., Thatte, S., and H. Nielsen, \"\
    SOAP Messages with\n         Attachments\", W3C NOTE NOTE-SOAP-attachments-20001211,\
    \ December\n         2000.\n   [20]  Levinson, E., \"Content-ID and Message-ID\
    \ Uniform Resource\n         Locators\", RFC 2392, August 1998.\n   [21]  Palme,\
    \ J., Hopmann, A., and N. Shelness, \"MIME Encapsulation of\n         Aggregate\
    \ Documents, such as HTML (MHTML)\", RFC 2557, March\n         1999.\n"
- title: Appendix A.  SOAP with Attachments (Informative)
  contents:
  - "Appendix A.  SOAP with Attachments (Informative)\n   To provide compatibility\
    \ with RFC3288 [16], a BEEP profile for SOAP\n   MAY allow envelopes to be transmitted\
    \ as the root part of a\n   \"multipart/related\" [18] content, and with subordinate\
    \ parts\n   referenced using the rules of Section 3 of [19] (i.e., using either\n\
    \   the \"Content-ID:\" [20] or \"Content-Location:\" [21] headers), e.g.,\n \
    \   MSG 1 2 . 278 657\n    Content-Type: multipart/related; boundary=\"MIME_boundary\"\
    ;\n                  type=application/xml;\n                  start=\"<claim061400a.xml@claiming-it.com>\"\
    \n    --MIME_boundary\n    Content-Type: application/xml\n    Content-ID: <claim061400a.xml@claiming-it.com>\n\
    \    <?xml version='1.0' ?>\n    <env:Envelope\n         xmlns:env=\"http://www.w3.org/2003/05/soap-envelope\"\
    >\n     ..\n    </env:Header>\n    <env:Body>\n    <theSignedForm href=\"cid:claim061400a.tiff@claiming-it.com\"\
    \ />\n     ..\n    </env:Body>\n    </env:Envelope>\n    --MIME_boundary\n   \
    \ Content-Type: image/tiff\n    Content-Transfer-Encoding: binary\n    Content-ID:\
    \ <claim061400a.tiff@claiming-it.com>\n     ...binary TIFF image...\n    --MIME_boundary--\n\
    \    END\n   Consistent with Section 2 of [19], it is strongly recommended that\n\
    \   the multipart contain a \"start\" parameter, and that the root part\n   contain\
    \ a \"Content-ID:\" header.  However, because BEEP provides an\n   8bit-wide path,\
    \ a \"transformative\" Content-Transfer-Encoding (e.g.,\n   \"base64\" or \"quoted-printable\"\
    ) should not be used.  Further note\n   that MIME [9] requires that the value\
    \ of the \"Content-ID\" header be\n   globally unique.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Eamon O'Tuathail\n   Clipcode.com\n   24 Thomastown Road\n\
    \   Dun Laoghaire\n   Dublin\n   IE\n   Phone: +353 1 2350 424\n   EMail: eamon.otuathail@clipcode.com\n\
    \   URI:   http://www.clipcode.com/\n   Marshall T. Rose\n   Dover Beach Consulting,\
    \ Inc.\n   POB 255268\n   Sacramento, CA  95865-5268\n   US\n   Phone: +1 916\
    \ 483 8878\n   EMail: mrose@dbc.mtview.ca.us\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
