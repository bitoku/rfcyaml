- title: __initial_text__
  contents:
  - '          Mapping between X.400(1988) / ISO 10021 and RFC 822

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This RFC specifies an IAB standards track protocol for\
    \ the Internet\n   community, and requests discussion and suggestions for improvements.\n\
    \   Please refer to the current edition of the \"IAB Official Protocol\n   Standards\"\
    \ for the standardization state and status of this protocol.\n   Distribution\
    \ of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes a set of mappings which will enable\n  \
    \ interworking between systems operating the CCITT X.400 1988)\n   Recommendations\
    \ on Message Handling Systems / ISO IEC 10021 Message\n   Oriented Text Interchange\
    \ Systems (MOTIS) [CCITT/ISO88a], and systems\n   using the RFC 822 mail protocol\
    \ [Crocker82a] or protocols derived\n   from RFC 822.  The approach aims to maximise\
    \ the services offered\n   across the boundary, whilst not requiring unduly complex\
    \ mappings.\n   The mappings should not require any changes to end systems. This\n\
    \   document is a revision based on RFCs 987, 1026, 1138, and 1148\n   [Kille86a,Kille87a]\
    \ which it obsoletes.\n   This document specifies a mapping between two protocols.\
    \  This\n   specification should be used when this mapping is performed on the\n\
    \   DARPA Internet or in the UK Academic Community.  This specification\n   may\
    \ be modified in the light of implementation experience, but no\n   substantial\
    \ changes are expected.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1          - Overview ......................................\
    \    3\n   1.1        - X.400 .........................................    3\n\
    \   1.2        - RFC 822 .......................................    3\n   1.3\
    \        - The need for conversion .......................    4\n   1.4      \
    \  - General approach ..............................    4\n   1.5        - Gatewaying\
    \ Model ..............................    5\n   1.6        - X.400 (1984) ..................................\
    \    8\n   1.7        - Compatibility with previous versions ..........    8\n\
    \   1.8        - Aspects not covered ...........................    8\n   1.9\
    \        - Subsetting ....................................    9\n   1.10     \
    \  - Document Structure ............................    9\n   1.11       - Acknowledgements\
    \ ..............................    9\n   2          - Service Elements ..............................\
    \   10\n   2.1        - The Notion of Service Across a Gateway ........   10\n\
    \   2.2        - RFC 822 .......................................   11\n   2.3\
    \        - X.400 .........................................   15\n   3        \
    \  - Basic Mappings ................................   24\n   3.1        - Notation\
    \ ......................................   24\n   3.2        - ASCII and IA5 .................................\
    \   26\n   3.3        - Standard Types ................................   26\n\
    \   3.4        - Encoding ASCII in Printable String ............   28\n   4  \
    \        - Addressing ....................................   30\n   4.1      \
    \  - A textual representation of MTS.ORAddress .....   30\n   4.2        - Basic\
    \ Representation ..........................   31\n   4.3        - EBNF.822-address\
    \ <-> MTS.ORAddress ............   36\n   4.4        - Repeated Mappings .............................\
    \   48\n   4.5        - Directory Names ...............................   50\n\
    \   4.6        - MTS Mappings ..................................   50\n   4.7\
    \        - IPMS Mappings .................................   55\n   5        \
    \  - Detailed Mappings .............................   59\n   5.1        - RFC\
    \ 822 -> X.400 ..............................   59\n   5.2        - Return of\
    \ Contents ............................   67\n   5.3        - X.400 -> RFC 822\
    \ ..............................   67\n   Appendix A - Mappings Specific to SMTP\
    \ .....................   91\n   Appendix B - Mappings specific to the JNT Mail\
    \ .............   91\n   1          - Introduction ..................................\
    \   91\n   2          - Domain Ordering ...............................   91\n\
    \   3          - Addressing ....................................   91\n   4  \
    \        - Acknowledge-To:  ..............................   91\n   5        \
    \  - Trace .........................................   92\n   6          - Timezone\
    \ specification ........................   92\n   7          - Lack of 822-MTS\
    \ originator specification ......   92\n   Appendix C - Mappings specific to UUCP\
    \ Mail ................   93\n   Appendix D - Object Identifier Assignment ..................\
    \   94\n   Appendix E - BNF Summary ...................................   94\n\
    \   Appendix F - Format of address mapping tables ..............  101\n   1  \
    \        - Global Mapping Information ....................  101\n   2        \
    \  - Syntax Definitions ............................  102\n   3          - Table\
    \ Lookups .................................  103\n   4          - Domain -> O/R\
    \ Address format ..................  104\n   5          - O/R Address -> Domain\
    \ format ..................  104\n   6          - Domain -> O/R Address of Gateway\
    \ table ........  104\n   Appendix G - Mapping with X.400(1984) ......................\
    \  105\n   Appendix H - RFC 822 Extensions for X.400 access ...........  106\n\
    \   Appendix I - Conformance ...................................  106\n   Appendix\
    \ J - Change History: RFC 987, 1026, 1138, 1148 .....  107\n   1          - Introduction\
    \ ..................................  108\n   2          - Service Elements ..............................\
    \  108\n   3          - Basic Mappings ................................  108\n\
    \   4          - Addressing ....................................  108\n   5  \
    \        - Detailed Mappings .............................  109\n   6        \
    \  - Appendices ....................................  109\n   Appendix K - Change\
    \ History: RFC 1148 to this Document .....  109\n   1          - General .......................................\
    \  109\n   2          - Basic Mappings ................................  110\n\
    \   3          - Addressing ....................................  110\n   4  \
    \        - Detailed Mappings .............................  110\n   5        \
    \  - Appendices ....................................  110\n   References .................................................\
    \  111\n   Security Considerations ....................................  113\n\
    \   Author's Address ...........................................  113\n"
- title: Chapter 1 -- Overview
  contents:
  - 'Chapter 1 -- Overview

    '
- title: 1.1.  X.400
  contents:
  - "1.1.  X.400\n   This document relates to the CCITT 1988 X.400 Series Recommendations\n\
    \   / ISO IEC 10021 on the Message Oriented Text Interchange Service\n   (MOTIS).\
    \  This ISO/CCITT standard is referred to in this document as\n   \"X.400\", which\
    \ is a convenient shorthand.  Any reference to the 1984\n   CCITT Recommendations\
    \ will be explicit.  X.400 defines an\n   Interpersonal Messaging System (IPMS),\
    \ making use of a store and\n   forward Message Transfer System.  This document\
    \ relates to the IPMS,\n   and not to wider application of X.400.  It is expected\
    \ that X.400\n   will be implemented very widely.\n"
- title: 1.2. RFC 822
  contents:
  - "1.2. RFC 822\n   RFC 822 evolved as a messaging standard on the DARPA (the US\
    \ Defense\n   Advanced Research Projects Agency) Internet.  It specifies and end\
    \ to\n   end message format.  It is used in conjunction with a number of\n   different\
    \ message transfer protocol environments.\n   SMTP Networks\n       On the DARPA\
    \ Internet and other TCP/IP networks, RFC 822 is\n       used in conjunction with\
    \ two other standards: RFC 821, also\n       known as Simple Mail Transfer Protocol\
    \ (SMTP) [Postel82a],\n       and RFC 920 which is a Specification for domains\
    \ and a\n       distributed name service [Postel84a].\n   UUCP Networks\n    \
    \   UUCP is the UNIX to UNIX CoPy protocol, which is usually\n       used over\
    \ dialup telephone networks to provide a simple\n       message transfer mechanism.\
    \  There are some extensions to\n       RFC 822, particularly in the addressing.\
    \  They use domains\n       which conform to RFC 920, but not the corresponding\
    \ domain\n       nameservers [Horton86a].\n   Bitnet\n       Some parts of Bitnet\
    \ and related networks use RFC 822\n       related protocols, with EBCDIC encoding.\n\
    \   JNT Mail Networks\n       A number of X.25 networks, particularly those associated\n\
    \       with the UK Academic Community, use the JNT (Joint Network\n       Team)\
    \ Mail Protocol, also known as Greybook [Kille84a].\n       This is used with\
    \ domains and name service specified by the\n       JNT NRS (Name Registration\
    \ Scheme) [Larmouth83a].\n   The mappings specified here are appropriate for all\
    \ of these\n   networks.\n"
- title: 1.3.  The need for conversion
  contents:
  - "1.3.  The need for conversion\n   There is a large community using RFC 822 based\
    \ protocols for mail\n   services, who will wish to communicate with users of\
    \ the IPMS\n   provided by X.400 systems.  This will also be a requirement in\
    \ cases\n   where communities intend to make a transition to use of an X.400\n\
    \   IPMS, as conversion will be needed to ensure a smooth service\n   transition.\
    \  It is expected that there will be more than one gateway,\n   and this specification\
    \ will enable them to behave in a consistent\n   manner.  Note that the term gateway\
    \ is used to describe a component\n   performing the protocol mappings between\
    \ RFC 822 and X.400.  This is\n   standard usage amongst mail implementors, but\
    \ should be noted\n   carefully by transport and network service implementors.\n\
    \   Consistency between gateways is desirable to provide:\n   1.   Consistent\
    \ service to users.\n   2.   The best service in cases where a message passes\
    \ through\n        multiple gateways.\n"
- title: 1.4.  General approach
  contents:
  - "1.4.  General approach\n   There are a number of basic principles underlying\
    \ the details of the\n   specification.  These principles are goals, and are not\
    \ achieved in\n   all aspects of the specification.\n   1.   The specification\
    \ should be pragmatic.  There should not be\n        a requirement for complex\
    \ mappings for \"Academic\" reasons.\n        Complex mappings should not be required\
    \ to support trivial\n        additional functionality.\n   2.   Subject to 1),\
    \ functionality across a gateway should be as\n        high as possible.\n   3.\
    \   It is always a bad idea to lose information as a result of\n        any transformation.\
    \  Hence, it is a bad idea for a gateway\n        to discard information in the\
    \ objects it processes.  This\n        includes requested services which cannot\
    \ be fully mapped.\n   4.   All mail gateways actually operate at exactly one\
    \ level\n        above the layer on which they conceptually operate.  This\n \
    \       implies that the gateway must not only be cognisant of the\n        semantics\
    \ of objects at the gateway level, but also be\n        cognisant of higher level\
    \ semantics.  If meaningful\n        transformation of the objects that the gateway\
    \ operates on\n        is to occur, then the gateway needs to understand more\
    \ than\n        the objects themselves.\n   5.   Subject to 1), the specification\
    \ should be reversible.  That\n        is, a double transformation should bring\
    \ you back to where\n        you started.\n"
- title: 1.5.  Gatewaying Model
  contents:
  - '1.5.  Gatewaying Model

    '
- title: 1.5.1.  X.400
  contents:
  - "1.5.1.  X.400\n   X.400 defines the IPMS Abstract Service in X.420/ISO 10021-7,\n\
    \   [CCITT/ISO88b] which comprises of three basic services:\n   1.   Origination\n\
    \   2.   Reception\n   3.   Management\n   Management is a local interaction between\
    \ the user and the IPMS, and\n   is therefore not relevant to gatewaying.  The\
    \ first two services\n   consist of operations to originate and receive the following\
    \ two\n   objects:\n   1.   IPM (Interpersonal Message). This has two components:\
    \ a\n        heading, and a body.  The body is structured as a sequence\n    \
    \    of body parts, which may be basic components (e.g., IA5\n        text, or\
    \ G3 fax), or IP Messages.  The heading consists of\n        fields containing\
    \ end to end user information, such as\n        subject, primary recipients (To:),\
    \ and importance.\n   2.   IPN (Inter Personal Notification).  A notification\
    \  about\n        receipt of a given IPM at the UA level.\n   The Origination\
    \ service also allows for origination of a probe, which\n   is an object to test\
    \ whether a given IPM could be correctly received.\n   The Reception service also\
    \ allows for receipt of Delivery Reports\n   DR), which indicate delivery success\
    \ or failure.\n   These IPMS Services utilise the Message Transfer (MT) Abstract\n\
    \   Service [CCITT/ISO88c].  The MT Abstract Service provides the\n   following\
    \ three basic services:\n   1.   Submission (used by IPMS Origination)\n   2.\
    \   Delivery (used by IPMS Reception)\n   3.   Administration (used by IPMS Management)\n\
    \   Administration is a local issue, and so does not affect this\n   standard.\
    \  Submission and delivery relate primarily to the MTS\n   Message (comprising\
    \ Envelope and Content), which carries an IPM or\n   IPN (or other uninterpreted\
    \ contents).  There is also an Envelope,\n   which includes an ID, an originator,\
    \ and a list of recipients.\n   Submission also includes the probe service, which\
    \ supports the IPMS\n   Probe. Delivery also includes Reports, which indicate\
    \ whether a given\n   MTS Message has been delivered or not.\n   The MTS is REFINED\
    \ into the MTA (Message Transfer Agent) Service,\n   which defines the interaction\
    \ between MTAs, along with the procedures\n   for distributed operation.  This\
    \ service provides for transfer of MTS\n   Messages, Probes, and Reports.\n"
- title: 1.5.2.  RFC 822
  contents:
  - "1.5.2.  RFC 822\n   RFC 822 is based on the assumption that there is an underlying\n\
    \   service, which is here called the 822-MTS service.  The 822-MTS\n   service\
    \ provides three basic functions:\n   1.   Identification of a list of recipients.\n\
    \   2.   Identification of an error return address.\n   3.   Transfer of an RFC\
    \ 822 message.\n   It is possible to achieve 2) within the RFC 822 header.  Some\
    \ 822-MTS\n   protocols, in particular SMTP, can provide additional functionality,\n\
    \   but as these are neither mandatory in SMTP, nor available in other\n   822-MTS\
    \ protocols, they are not considered here.  Details of aspects\n   specific to\
    \ two 822-MTS protocols are given in Appendices B and C.\n   An RFC 822 message\
    \ consists of a header, and content which is\n   uninterpreted ASCII text.  The\
    \ header is divided into fields, which\n   are the protocol elements.  Most of\
    \ these fields are analogous to P2\n   heading fields, although some are analogous\
    \ to MTS Service Elements\n   or MTA Service Elements.\n"
- title: 1.5.3.  The Gateway
  contents:
  - "1.5.3.  The Gateway\n   Given this functional description of the two services,\
    \ the functional\n   nature of a gateway can now be considered.  It would be elegant\
    \ to\n   consider the 822-MTS service mapping onto the MTS Service Elements\n\
    \   and RFC 822 mapping onto an IPM, but reality just does not fit.\n   Another\
    \ elegant approach would be to treat this document as the\n   definition of an\
    \ X.400 Access Unit (AU).  Again, reality does not\n   fit.  It is necessary to\
    \ consider that the IPM format definition, the\n   IPMS Service Elements, the\
    \ MTS Service Elements, and MTA Service\n   Elements on one side are mapped into\
    \ RFC 822 + 822-MTS on the other\n   in a slightly tangled manner.  The details\
    \ of the tangle will be made\n   clear in Chapter 5.  Access to the MTA Service\
    \ Elements is minimised.\n   The following basic mappings are thus defined.  When\
    \ going from RFC\n   822 to X.400, an RFC 822 message and the associated 822-MTS\n\
    \   information is always mapped into an IPM (MTA, MTS, and IPMS\n   Services).\
    \  Going from X.400 to RFC 822, an RFC 822 message and the\n   associated 822-MTS\
    \ information may be derived from:\n   1.   A Report (MTA, and MTS Services)\n\
    \   2.   An IPN (MTA, MTS, and IPMS services)\n   3.   An IPM (MTA, MTS, and IPMS\
    \ services)\n   Probes (MTA Service) must be processed by the gateway, as discussed\n\
    \   in Chapter 5.  MTS Messages containing Content Types other than those\n  \
    \ defined by the IPMS are not mapped by the gateway, and should be\n   rejected\
    \ at the gateway.\n"
- title: 1.5.4.  Repeated Mappings
  contents:
  - "1.5.4.  Repeated Mappings\n   The primary goal of this specification is to support\
    \ single mappings,\n   so that X.400 and RFC 822 users can communicate with maximum\n\
    \   functionality.\n   The mappings specified here are designed to work where\
    \ a message\n   traverses multiple times between X.400 and RFC 822. This is often\n\
    \   essential, particularly in the case of distribution lists.  However,\n   in\
    \ general, this will lead to a level of service which is the lowest\n   common\
    \ denominator (approximately the services offered by RFC 822).\n   Some RFC 822\
    \ networks may wish to use X.400 as an interconnection\n   mechanism (typically\
    \ for policy reasons), and this is fully\n   supported.\n   Where an X.400 messages\
    \ transfers to RFC 822 and then back to X.400,\n   there is no expectation of\
    \ X.400 services which do not have an\n   equivalent service in standard RFC 822\
    \ being preserved - although\n   this may be possible in some cases.\n"
- title: 1.6.  X.400 (1984)
  contents:
  - "1.6.  X.400 (1984)\n   Much of this work is based on the initial specification\
    \ of RFC 987\n   and in its addendum RFC 1026, which defined a mapping between\n\
    \   X.400(1984) and RFC 822.  A basic decision is that the mapping\n   defined\
    \ in this document is to the full 1988 version of X.400, and\n   not to a 1984\
    \ compatible subset. New features of X.400(1988) can be\n   used to provide a\
    \ much cleaner mapping than that defined in RFC 987.\n   This is important, to\
    \ give good support to communities which will\n   utilise full X.400 at an early\
    \ date.   To interwork with 1984\n   systems, Appendix G shall be followed.\n\
    \   If a message is being transferred to an X.400(1984) system by way of\n   X.400(1988)\
    \ MTA it will give a slightly better service to follow the\n   rules of Appendix\
    \ G.\n"
- title: 1.7.  Compatibility with previous versions
  contents:
  - "1.7.  Compatibility with previous versions\n   The changes between this and older\
    \ versions of the document are given\n   in Appendices I and J.    These are RFCs\
    \ 987, 1026, 1138, and 1148.\n   This document is a revision of RFC 1148 [Kille90a].\
    \  As far as\n   possible, changes have been made in a compatible fashion.\n"
- title: 1.8.  Aspects not covered
  contents:
  - "1.8.  Aspects not covered\n   There have been a number of cases where RFC 987\
    \ was used in a manner\n   which was not intended.  This section is to make clear\
    \ some\n   limitations of scope.  In particular, this specification does not\n\
    \   specify:\n   -   Extensions of RFC 822 to provide access to all X.400\n  \
    \     services\n   -    X.400 user interface definition\n   -    Mapping X.400\
    \ to extended versions of RFC 822, with support\n        for multimedia content.\n\
    \   The first two of these are really coupled.  To map the X.400\n   services,\
    \ this specification defines a number of extensions to RFC\n   822.  As a side\
    \ effect, these give the 822 user access to SOME X.400\n   services.  However,\
    \ the aim on the RFC 822 side is to preserve\n   current service, and it is intentional\
    \ that access is not given to\n   all X.400 services.  Thus, it will be a poor\
    \ choice for X.400\n   implementors to use RFC 987(88) as an interface - there\
    \ are too many\n   aspects of X.400 which cannot be accessed through it.  If a\
    \ text\n   interface is desired, a specification targeted at X.400, without RFC\n\
    \   822 restrictions, would be more appropriate.  Some optional and\n   limited\
    \ extensions in this area have proved useful, and are defined\n   in Appendix\
    \ H.\n"
- title: 1.9.  Subsetting
  contents:
  - "1.9.  Subsetting\n   This proposal specifies a mapping which is appropriate to\
    \ preserve\n   services in existing RFC 822 communities.  Implementations and\n\
    \   specifications which subset this specification are strongly\n   discouraged.\n"
- title: 1.10.  Document Structure
  contents:
  - "1.10.  Document Structure\n   This document has five chapters:\n   1.   Overview\
    \ - this chapter.\n   2.   Service Elements - This describes the (end user) services\n\
    \        mapped by a gateway.\n   3.   Basic mappings - This describes some basic\
    \ notation used in\n        Chapters 3-5, the mappings between character sets,\
    \ and some\n        fundamental protocol elements.\n   4.   Addressing - This\
    \ considers the mapping between X.400 O/R\n        names and RFC 822 addresses,\
    \ which is a fundamental gateway\n        component.\n   5.   Detailed Mappings\
    \ - This describes the details of all other\n        mappings.\n   There are also\
    \ eleven appendices.\n   WARNING:\n        THE REMAINDER OF THIS SPECIFICATION\
    \ IS TECHNICALLY DETAILED.\n        IT WILL NOT MAKE SENSE, EXCEPT IN THE CONTEXT\
    \ OF RFC 822 AND\n        X.400 (1988).  DO NOT ATTEMPT TO READ THIS DOCUMENT\
    \ UNLESS\n        YOU ARE FAMILIAR WITH THESE SPECIFICATIONS.\n"
- title: 1.11.  Acknowledgements
  contents:
  - "1.11.  Acknowledgements\n   The work in this specification was substantially\
    \ based on RFC 987 and\n   RFC 1148, which had input from many people, who are\
    \ credited in the\n   respective documents.\n   A number of comments from people\
    \ on RFC 1148 lead to this document.\n   In particular, there were comments and\
    \ suggestions from:  Maurice\n   Abraham (HP); Harald Alvestrand (Sintef); Peter\
    \ Cowen (X-Tel); Jim\n   Craigie (JNT); Ella Gardener (MITRE); Christian Huitema\
    \ (Inria); Erik\n   Huizer (SURFnet); Neil Jones DEC); Ignacio Martinez (IRIS);\
    \ Julian\n   Onions (X-Tel); Simon Poole (SWITCH); Clive Roberts (Data General);\n\
    \   Pete Vanderbilt SUN); Alan Young (Concurrent).\n"
- title: Chapter 2 - Service Elements
  contents:
  - "Chapter 2 - Service Elements\n   This chapter considers the services offered\
    \ across a gateway built\n   according to this specification.  It gives a view\
    \ of the\n   functionality provided by such a gateway for communication with users\n\
    \   in the opposite domain.  This chapter considers service mappings in\n   the\
    \ context of SINGLE transfers only, and not repeated mappings\n   through multiple\
    \ gateways.\n"
- title: 2.1.  The Notion of Service Across a Gateway
  contents:
  - "2.1.  The Notion of Service Across a Gateway\n   RFC 822 and X.400 provide a\
    \ number of services to the end user.  This\n   chapter describes the extent to\
    \ which each service can be supported\n   across an X.400 <-> RFC 822 gateway.\
    \  The cases considered are single\n   transfers across such a gateway, although\
    \ the problems of multiple\n   crossings are noted where appropriate.\n"
- title: 2.1.1.  Origination of Messages
  contents:
  - "2.1.1.  Origination of Messages\n   When a user originates a message, a number\
    \ of services are available.\n   Some of these imply actions (e.g., delivery to\
    \ a recipient), and some\n   are insertion of known data (e.g., specification\
    \ of a subject field).\n   This chapter describes, for each offered service, to\
    \ what extent it\n   is supported for a recipient accessed through a gateway.\
    \  There are\n   three levels of support:\n   Supported\n        The corresponding\
    \ protocol elements map well, and so the\n        service can be fully provided.\n\
    \   Not Supported\n        The service cannot be provided, as there is a complete\n\
    \        mismatch.\n   Partial Support\n        The service can be partially fulfilled.\n\
    \   In the first two cases, the service is simply marked as Supported\" or\n \
    \  \"Not Supported\".  Some explanation may be given if there are\n   additional\
    \ implications, or the (non) support is not intuitive.  For\n   partial support,\
    \ the level of partial support is summarised.  Where\n   partial support is good,\
    \  this will be described by a phrase such as\n   \"Supported by use of.....\"\
    .  A common case of this is where the\n   service is mapped onto a non- standard\
    \ service on the other side of\n   the gateway, and this would have lead to support\
    \ if it had been a\n   standard service.  In many cases, this is equivalent to\
    \ support.  For\n   partial support, an indication of the mechanism is given,\
    \ in order to\n   give a feel for the level of support provided.  Note that this\
    \ is not\n   a replacement for Chapter 5, where the mapping is fully specified.\n\
    \   If a service is described as supported, this implies:\n   -    Semantic correspondence.\n\
    \   -    No (significant) loss of information.\n   -    Any actions required by\
    \ the service element.\n   An example of a service gaining full support: If an\
    \ RFC 822\n   originator specifies a Subject:  field, this is considered to be\n\
    \   supported, as an X.400 recipient will get a subject indication.\n   In many\
    \ cases, the required action will simply be to make the\n   information available\
    \ to the end user.  In other cases, actions may\n   imply generating a delivery\
    \ report.\n   All RFC 822 services are supported or partially supported for\n\
    \   origination.  The implications of non-supported X.400 services is\n   described\
    \ under X.400.\n"
- title: 2.1.2.  Reception of Messages
  contents:
  - "2.1.2.  Reception of Messages\n   For reception, the list of service elements\
    \ required to support this\n   mapping is specified.  This is really an indication\
    \ of what a\n   recipient might expect to see in a message which has been remotely\n\
    \   originated.\n"
- title: 2.2.  RFC 822
  contents:
  - "2.2.  RFC 822\n   RFC 822 does not explicitly define service elements, as distinct\
    \ from\n   protocol elements.  However, all of the RFC 822 header fields, with\n\
    \   the exception of trace, can be regarded as corresponding to implicit\n   RFC\
    \ 822 service elements.\n"
- title: 2.2.1.  Origination in RFC 822
  contents:
  - "2.2.1.  Origination in RFC 822\n   A mechanism of mapping, used in several cases,\
    \ is to map the RFC 822\n   header into a heading extension in the IPM (InterPersonal\
    \ Message).\n   This can be regarded as partial support, as it makes the information\n\
    \   available to any X.400 implementations which are interested in these\n   services.\
    \ Communities which require significant RFC 822 interworking\n   are recommended\
    \ to require that their X.400 User Agents are able to\n   display these heading\
    \ extensions.  Support for the various service\n   elements (headers) is now listed.\n\
    \   Date:\n        Supported.\n   From:\n        Supported.  For messages where\
    \ there is also a sender field,\n        the mapping is to \"Authorising Users\
    \ Indication\", which has\n        subtly different semantics to the general RFC\
    \ 822 usage of\n        From:.\n   Sender:\n        Supported.\n   Reply-To:\n\
    \        Supported.\n   To:  Supported.\n   Cc:  Supported.\n   Bcc: Supported.\n\
    \   Message-Id:\n        Supported.\n   In-Reply-To:\n        Supported, for a\
    \ single reference.  Where multiple\n        references are given, partial support\
    \ is given by mapping to\n        \"Cross Referencing Indication\".  This gives\
    \ similar\n        semantics.\n   References:\n        Supported.\n   Keywords:\n\
    \        Supported by use of a heading extension.\n   Subject:\n        Supported.\n\
    \   Comments:\n        Supported by use of an extra body part.\n   Encrypted:\n\
    \        Supported by use of a heading extension.\n   Resent-*\n        Supported\
    \ by use of a heading extension.  Note that\n        addresses in these fields\
    \ are mapped onto text, and so are\n        not accessible to the X.400 user as\
    \ addresses.  In\n        principle, fuller support would be possible by mapping\
    \ onto\n        a forwarded IP Message, but this is not suggested.\n   Other Fields\n\
    \        In particular X-* fields, and \"illegal\" fields in common\n        usage\
    \ (e.g., \"Fruit-of-the-day:\") are supported by use of\n        heading extensions.\n"
- title: 2.2.2.  Reception by RFC 822
  contents:
  - "2.2.2.  Reception by RFC 822\n   This considers reception by an RFC 822 User\
    \ Agent of a message\n   originated in an X.400 system and transferred across\
    \ a gateway.  The\n   following standard services (headers) may be present in\
    \ such a\n   message:\n   Date:\n   From:\n   Sender:\n   Reply-To:\n   To:\n\
    \   Cc:\n   Bcc:\n   Message-Id:\n   In-Reply-To:\n   References:\n   Subject:\n\
    \   The following non-standard services (headers) may be present.  These\n   are\
    \ defined in more detail in Chapter 5 (5.3.4, 5.3.6, 5.3.7):\n   Autoforwarded:\n\
    \   Content-Identifier:\n   Conversion:\n   Conversion-With-Loss:\n   Delivery-Date:\n\
    \   Discarded-X400-IPMS-Extensions:\n   Discarded-X400-MTS-Extensions:\n   DL-Expansion-History:\n\
    \   Deferred-Delivery:\n   Expiry-Date:\n   Importance:\n   Incomplete-Copy:\n\
    \   Language:\n   Latest-Delivery-Time:\n   Message-Type:\n   Obsoletes:\n   Original-Encoded-Information-Types:\n\
    \   Originator-Return-Address:\n   Priority:\n   Reply-By:\n   Requested-Delivery-Method:\n\
    \   Sensitivity:\n   X400-Content-Type:\n   X400-MTS-Identifier:\n   X400-Originator:\n\
    \   X400-Received:\n   X400-Recipients:\n"
- title: 2.3.  X.400
  contents:
  - '2.3.  X.400

    '
- title: 2.3.1.  Origination in X.400
  contents:
  - "2.3.1.  Origination in X.400\n   When mapping services from X.400 to RFC 822\
    \ which are not supported\n   by RFC 822, new RFC 822 headers are defined.  It\
    \ is intended that\n   these fields will be registered, and that co- operating\
    \ RFC 822\n   systems may use them.  Where these new fields are used, and no system\n\
    \   action is implied, the service can be regarded as being partially\n   supported.\
    \  Chapter 5 describes how to map X.400 services onto these\n   new headers. \
    \ Other elements are provided, in part, by the gateway as\n   they cannot be provided\
    \ by RFC 822.\n   Some service elements are marked N/A (not applicable).  There\
    \ are\n   five cases, which are marked with different comments:\n   N/A (local)\n\
    \        These elements are only applicable to User Agent / Message\n        Transfer\
    \ Agent interaction and so they cannot apply to RFC\n        822 recipients.\n\
    \   N/A (PDAU)\n        These service elements are only applicable where the\n\
    \        recipient is reached by use of a Physical Delivery Access\n        Unit\
    \ (PDAU), and so do not need to be mapped by the gateway.\n   N/A (reception)\n\
    \        These services  are only applicable for reception.\n   N/A (prior)\n\
    \        If requested, this service must be performed prior to the\n        gateway.\n\
    \   N/A (MS)\n        These services are only applicable to Message Store (i.e.,\
    \ a\n        local service).\n   Finally, some service elements are not supported.\
    \  In particular, the\n   new security services are not mapped onto RFC 822. \
    \ Unless otherwise\n   indicated, the behaviour of service elements marked as\
    \ not supported\n   will depend on the criticality marking supplied by the user.\
    \  If the\n   element is marked as critical for transfer or delivery, a non-\n\
    \   delivery notification will be generated.  Otherwise, the service\n   request\
    \ will be ignored.\n"
- title: 2.3.1.1.  Basic Interpersonal Messaging Service
  contents:
  - "2.3.1.1.  Basic Interpersonal Messaging Service\n   These are the mandatory IPM\
    \ services as listed in Section 19.8 of\n   X.400 / ISO/IEC 10021-1, listed here\
    \ in the order given. Section 19.8\n   has cross references to short definitions\
    \ of each service.\n   Access management\n        N/A (local).\n   Content Type\
    \ Indication\n        Supported by a new RFC 822 header (Content-Type:).\n   Converted\
    \ Indication\n        Supported by a new RFC 822 header (X400-Received:).\n  \
    \ Delivery Time Stamp Indication\n        N/A (reception).\n   IP Message Identification\n\
    \        Supported.\n   Message Identification\n        Supported, by use of a\
    \ new RFC 822 header\n        (X400-MTS-Identifier).  This new header is required,\
    \ as\n        X.400 has two message-ids whereas RFC 822 has only one (see\n  \
    \      previous service).\n   Non-delivery Notification\n        Not supported,\
    \ although in general an RFC 822 system will\n        return error reports by\
    \ use of IP messages.  In other\n        service elements, this pragmatic result\
    \ can be treated as\n        effective support of this service element.\n   Original\
    \ Encoded Information Types Indication\n        Supported as a new RFC 822 header\n\
    \        (Original-Encoded-Information-Types:).\n   Submission Time Stamp Indication\n\
    \        Supported.\n   Typed Body\n        Some types supported.  IA5 is fully\
    \ supported.\n        ForwardedIPMessage is supported, with some loss of\n   \
    \     information.  Other types get some measure of support,\n        dependent\
    \ on X.400 facilities for conversion to IA5.  This\n        will only be done\
    \ where content conversion is not\n        prohibited.\n   User Capabilities Registration\n\
    \        N/A (local).\n"
- title: 2.3.1.2.  IPM Service Optional User Facilities
  contents:
  - "2.3.1.2.  IPM Service Optional User Facilities\n   This section describes support\
    \ for the optional (user selectable) IPM\n   services as listed in Section 19.9\
    \ of X.400 / ISO/IEC 10021- 1,\n   listed here in the order given.  Section 19.9\
    \ has cross references to\n   short definitions of each service.\n   Additional\
    \ Physical Rendition\n        N/A (PDAU).\n   Alternate Recipient Allowed\n  \
    \      Not supported.  There is no RFC 822 service equivalent to\n        prohibition\
    \ of alternate recipient assignment (e.g., an RFC\n        822 system may freely\
    \ send an undeliverable message to a\n        local postmaster).  Thus, the gateway\
    \ cannot prevent\n        assignment of alternative recipients on the RFC 822\
    \ side.\n        This service really means giving the user control as to\n   \
    \     whether or not an alternate recipient is allowed. This\n        specification\
    \ requires transfer of messages to RFC 822\n        irrespective of this service\
    \ request, and so this service is\n        not supported.\n   Authorising User's\
    \ Indication\n        Supported.\n   Auto-forwarded Indication\n        Supported\
    \ as new RFC 822 header (Auto-Forwarded:).\n   Basic Physical Rendition\n    \
    \    N/A (PDAU).\n   Blind Copy Recipient Indication\n        Supported.\n   Body\
    \ Part Encryption Indication\n        Supported by use of a new RFC 822 header\n\
    \        (Original-Encoded-Information-Types:), although in most\n        cases\
    \ it will not be possible to map the body part in\n        question.\n   Content\
    \ Confidentiality\n        Not supported.\n   Content Integrity\n        Not supported.\n\
    \   Conversion Prohibition\n        Supported.  In this case, only messages with\
    \ IA5 body parts,\n        other body parts which contain only IA5, and Forwarded\
    \ IP\n        Messages (subject recursively to the same restrictions),\n     \
    \   will be mapped.\n   Conversion Prohibition in Case of Loss of Information\n\
    \        Supported.\n   Counter Collection\n        N/A (PDAU).\n   Counter Collection\
    \ with Advice\n        N/A (PDAU).\n   Cross Referencing Indication\n        Supported.\n\
    \   Deferred Delivery\n        N/A (prior).  This service should always be provided\
    \ by the\n        MTS prior to the gateway.  A new RFC 822 header\n        Deferred-Delivery:)\
    \ is provided to transfer information on\n        this service to the recipient.\n"
- title: Deferred Delivery Cancellation
  contents:
  - "Deferred Delivery Cancellation\n      N/A (local).\n"
- title: Delivery Notification
  contents:
  - "Delivery Notification\n      Supported.  This is performed at the gateway.  Thus,\
    \ a\n      notification is sent by the gateway to the originator.  If\n      the\
    \ 822-MTS protocol is JNT Mail, a notification may also be\n      sent by the\
    \ recipient UA.\n"
- title: Delivery via Bureaufax Service
  contents:
  - "Delivery via Bureaufax Service\n      N/A (PDAU).\n"
- title: Designation of Recipient by Directory Name
  contents:
  - "Designation of Recipient by Directory Name\n      N/A (local).\n"
- title: Disclosure of Other Recipients
  contents:
  - "Disclosure of Other Recipients\n      Supported by use of a new RFC 822 header\
    \ (X400-Recipients:).\n      This is descriptive information for the RFC 822 recipient,\n\
    \      and is not reverse mappable.\n"
- title: DL Expansion History Indication
  contents:
  - "DL Expansion History Indication\n      Supported by use of a new RFC 822 header\n\
    \      DL-Expansion-History:).\n"
- title: DL Expansion Prohibited
  contents:
  - "DL Expansion Prohibited\n      Distribution List means MTS supported distribution\
    \ list, in\n      the manner of X.400.  This service does not exist in the RFC\n\
    \      822 world.  RFC 822 distribution lists should be regarded as\n      an\
    \ informal redistribution mechanism, beyond the scope of\n      this control.\
    \  Messages will be sent to RFC 822,\n      irrespective of whether this service\
    \ is requested.\n      Theoretically therefore, this service is supported, although\n\
    \      in practice it may appear that it is not supported.\n"
- title: Express Mail Service
  contents:
  - "Express Mail Service\n      N/A (PDAU).\n"
- title: Expiry Date Indication
  contents:
  - "Expiry Date Indication\n      Supported as new RFC 822 header (Expiry-Date:).\
    \  In general,\n      no automatic action can be expected.\n"
- title: Explicit Conversion
  contents:
  - "Explicit Conversion\n      N/A (prior).\n"
- title: Forwarded IP Message Indication
  contents:
  - "Forwarded IP Message Indication\n      Supported, with some loss of information.\
    \  The message is\n      forwarded in an RFC 822 body, and so can only be interpreted\n\
    \      visually.\n"
- title: Grade of Delivery Selection
  contents:
  - "Grade of Delivery Selection\n      N/A (PDAU)\n"
- title: Importance Indication
  contents:
  - "Importance Indication\n      Supported as new RFC 822 header (Importance:).\n"
- title: Incomplete Copy Indication
  contents:
  - "Incomplete Copy Indication\n      Supported as new RFC 822 header (Incomplete-Copy:).\n"
- title: Language Indication
  contents:
  - "Language Indication\n      Supported as new RFC 822 header (Language:).\n"
- title: Latest Delivery Designation
  contents:
  - "Latest Delivery Designation\n      Not supported.  A new RFC 822 header (Latest-Delivery-Time:)\n\
    \      is provided, which may be used by the recipient.\n"
- title: Message Flow Confidentiality
  contents:
  - "Message Flow Confidentiality\n      Not supported.\n"
- title: Message Origin Authentication
  contents:
  - "Message Origin Authentication\n      N/A (reception).\n"
- title: Message Security Labelling
  contents:
  - "Message Security Labelling\n      Not supported.\n"
- title: Message Sequence Integrity
  contents:
  - "Message Sequence Integrity\n      Not supported.\n"
- title: Multi-Destination Delivery
  contents:
  - "Multi-Destination Delivery\n      Supported.\n"
- title: Multi-part Body
  contents:
  - "Multi-part Body\n      Supported, with some loss of information, in that the\n\
    \      structuring cannot be formalised in RFC 822.\n"
- title: Non Receipt Notification Request
  contents:
  - "Non Receipt Notification Request\n      Not supported.\n"
- title: Non Repudiation of Delivery
  contents:
  - "Non Repudiation of Delivery\n      Not supported.\n"
- title: Non Repudiation of Origin
  contents:
  - "Non Repudiation of Origin\n      N/A (reception).\n"
- title: Non Repudiation of Submission
  contents:
  - "Non Repudiation of Submission\n      N/A (local).\n"
- title: Obsoleting Indication
  contents:
  - "Obsoleting Indication\n      Supported as new RFC 822 header (Obsoletes:).\n"
- title: Ordinary Mail
  contents:
  - "Ordinary Mail\n      N/A (PDAU).\n"
- title: Originator Indication
  contents:
  - "Originator Indication\n      Supported.\n"
- title: Originator Requested Alternate Recipient
  contents:
  - "Originator Requested Alternate Recipient\n      Not supported, but is placed\
    \ as comment next to address\n      X400-Recipients:).\n"
- title: Physical Delivery Notification by MHS
  contents:
  - "Physical Delivery Notification by MHS\n      N/A (PDAU).\n"
- title: Physical Delivery Notification by PDS
  contents:
  - "Physical Delivery Notification by PDS\n      N/A (PDAU).\n"
- title: Physical Forwarding Allowed
  contents:
  - "Physical Forwarding Allowed\n      Supported by use of a comment in a new RFC\
    \ 822 header\n      X400-Recipients:), associated with the recipient in\n    \
    \  question.\n"
- title: Physical Forwarding Prohibited
  contents:
  - "Physical Forwarding Prohibited\n      Supported by use of a comment in a new\
    \ RFC 822 header\n      X400-Recipients:), associated with the recipient in\n\
    \      question.\n"
- title: Prevention of Non-delivery notification
  contents:
  - "Prevention of Non-delivery notification\n      Supported, as delivery notifications\
    \ cannot be generated by\n      RFC 822.  In practice, errors will be returned\
    \ as IP\n      Messages, and so this service may appear not to be supported\n\
    \      see Non-delivery Notification).\n"
- title: Primary and Copy Recipients Indication
  contents:
  - "Primary and Copy Recipients Indication\n      Supported\n"
- title: Probe
  contents:
  - "Probe\n      Supported at the gateway (i.e., the gateway services the\n     \
    \ probe).\n"
- title: Probe Origin Authentication
  contents:
  - "Probe Origin Authentication\n      N/A (reception).\n"
- title: Proof of Delivery
  contents:
  - "Proof of Delivery\n      Not supported.\n"
- title: Proof of Submission
  contents:
  - "Proof of Submission\n      N/A (local).\n"
- title: Receipt Notification Request Indication
  contents:
  - "Receipt Notification Request Indication\n      Not supported.\n"
- title: Redirection Allowed by Originator
  contents:
  - "Redirection Allowed by Originator\n      Redirection means MTS supported redirection,\
    \ in the manner\n      of X.400.  This service does not exist in the RFC 822 world.\n\
    \      RFC 822 redirection (e.g., aliasing) should be regarded as\n      an informal\
    \ redirection mechanism, beyond the scope of this\n      control.  Messages will\
    \ be sent to RFC 822, irrespective of\n      whether this service is requested.\
    \  Theoretically therefore,\n      this service is supported, although in practice\
    \ it may\n      appear that it is not supported.\n"
- title: Registered Mail
  contents:
  - "Registered Mail\n      N/A (PDAU).\n"
- title: Registered Mail to Addressee in Person
  contents:
  - "Registered Mail to Addressee in Person\n      N/A (PDAU).\n"
- title: Reply Request Indication
  contents:
  - "Reply Request Indication\n      Supported as comment next to address.\n"
- title: Replying IP Message Indication
  contents:
  - "Replying IP Message Indication\n      Supported.\n"
- title: Report Origin Authentication
  contents:
  - "Report Origin Authentication\n      N/A (reception).\n"
- title: Request for Forwarding Address
  contents:
  - "Request for Forwarding Address\n      N/A (PDAU).\n"
- title: Requested Delivery Method
  contents:
  - "Requested Delivery Method\n      N/A (local).   The services required must be\
    \ dealt with at\n      submission time.  Any such request is made available through\n\
    \      the gateway by use of a comment associated with the\n      recipient in\
    \ question.\n"
- title: Return of Content
  contents:
  - "Return of Content\n      In principle, this is N/A, as non-delivery notifications\
    \ are\n      not supported.  In practice, most RFC 822 systems will\n      return\
    \ part or all of the content along with the IP Message\n      indicating an error\
    \ (see Non-delivery Notification).\n"
- title: Sensitivity Indication
  contents:
  - "Sensitivity Indication\n      Supported as new RFC 822 header (Sensitivity:).\n"
- title: Special Delivery
  contents:
  - "Special Delivery\n      N/A (PDAU).\n"
- title: Stored Message Deletion
  contents:
  - "Stored Message Deletion\n      N/A (MS).\n"
- title: Stored Message Fetching
  contents:
  - "Stored Message Fetching\n      N/A (MS).\n"
- title: Stored Message Listing
  contents:
  - "Stored Message Listing\n      N/A (MS).\n"
- title: Stored Message Summary
  contents:
  - "Stored Message Summary\n      N/A (MS).\n"
- title: Subject Indication
  contents:
  - "Subject Indication\n      Supported.\n"
- title: Undeliverable Mail with Return of Physical Message
  contents:
  - "Undeliverable Mail with Return of Physical Message\n      N/A (PDAU).\n"
- title: Use of Distribution List
  contents:
  - "Use of Distribution List\n      In principle this applies only to X.400 supported\n\
    \      distribution lists (see DL Expansion Prohibited).\n      Theoretically,\
    \ this service is N/A (prior).  In practice,\n      because of informal RFC 822\
    \ lists, this service can be\n      regarded as supported.\n"
- title: 2.3.2.  Reception by X.400
  contents:
  - '2.3.2.  Reception by X.400

    '
- title: 2.3.2.1.  Standard Mandatory Services
  contents:
  - "2.3.2.1.  Standard Mandatory Services\n   The following standard IPM mandatory\
    \  user facilities are required\n   for reception of RFC 822 originated mail by\
    \ an X.400 UA.\n   Content Type Indication\n   Delivery Time Stamp Indication\n\
    \   IP Message Identification\n   Message Identification\n   Non-delivery Notification\n\
    \   Original Encoded Information Types Indication\n   Submission Time Stamp Indication\n\
    \   Typed Body\n"
- title: 2.3.2.2.  Standard Optional Services
  contents:
  - "2.3.2.2.  Standard Optional Services\n   The following standard IPM optional\
    \ user facilities are required for\n   reception of RFC 822 originated mail by\
    \ an X.400 UA.\n   Authorising User's Indication\n   Blind Copy Recipient Indication\n\
    \   Cross Referencing Indication\n   Originator Indication\n   Primary and Copy\
    \ Recipients Indication\n   Replying IP Message Indication\n   Subject Indication\n"
- title: 2.3.2.3.  New Services
  contents:
  - "2.3.2.3.  New Services\n   A new service \"RFC 822 Header Field\" is defined\
    \ using the extension\n   facilities.  This allows for any RFC 822 header field\
    \ to be\n   represented.  It may be present in RFC 822 originated messages, which\n\
    \   are received by an X.400 UA.\n"
- title: Chapter 3 Basic Mappings
  contents:
  - 'Chapter 3 Basic Mappings

    '
- title: 3.1.  Notation
  contents:
  - "3.1.  Notation\n   The X.400 protocols are encoded in a structured manner according\
    \ to\n   ASN.1, whereas RFC 822 is text encoded.  To define a detailed\n   mapping,\
    \ it is necessary to refer to detailed protocol elements in\n   each format. \
    \ A notation to achieve this is described in this\n   section.\n"
- title: 3.1.1.  RFC 822
  contents:
  - "3.1.1.  RFC 822\n   Structured text is defined according to the Extended Backus\
    \ Naur Form\n   (EBNF) defined in Section 2 of RFC 822 [Crocker82a].  In the EBNF\n\
    \   definitions used in this specification, the syntax rules given in\n   Appendix\
    \ D of RFC 822 are assumed.  When these EBNF tokens are\n   referred to outside\
    \ an EBNF definition, they are identified by the\n   string \"822.\" appended\
    \ to the beginning of the string (e.g.,\n   822.addr-spec).  Additional syntax\
    \ rules, to be used throughout this\n   specification, are defined in this chapter.\n\
    \   The EBNF is used in two ways.\n   1.   To describe components of RFC 822 messages\
    \ (or of 822-MTS\n        components).  In this case, the lexical analysis defined\
    \ in\n        Section 3 of RFC 822 shall be used.  When these new EBNF\n     \
    \   tokens are referred to outside an EBNF definition, they are\n        identified\
    \ by the string \"EBNF.\" appended to the beginning\n        of the string (e.g.,\
    \ EBNF.importance).\n   2.   To describe the structure of IA5 or ASCII information\
    \ not in\n        an RFC 822 message.  In these cases, tokens will either be\n\
    \        self delimiting, or be delimited by self delimiting tokens.\n       \
    \ Comments and LWSP are not used as delimiters, except for the\n        following\
    \ cases, where LWSP may be inserted according to RFC\n        822 rules.\n   -\
    \         Around the \":\" in all headers\n   -         EBNF.labelled-integer\n\
    \   -         EBNF.object-identifier\n   -         EBNF.encoded-info\n   RFC 822\
    \ folding rules are applied to all headers.\n"
- title: 3.1.2.  ASN.1
  contents:
  - "3.1.2.  ASN.1\n   An element is referred to with the following syntax, defined\
    \ in EBNF:\n        element         = service \".\" definition *( \".\" definition\
    \ )\n        service         = \"IPMS\" / \"MTS\" / \"MTA\"\n        definition\
    \      = identifier / context\n        identifier      = ALPHA *< ALPHA or DIGIT\
    \ or \"-\" >\n        context         = \"[\" 1*DIGIT \"]\"\n   The EBNF.service\
    \ keys are shorthand for the following service\n   specifications:\n      IPMS\
    \ IPMSInformationObjects defined in Annex E of X.420 / ISO\n           10021-7.\n\
    \      MTS  MTSAbstractService defined in Section 9 of X.411 / ISO\n         \
    \  10021-4.\n      MTA  MTAAbstractService defined in Section 13 of X.411 / ISO\n\
    \           10021-4.\n   The first EBNF.identifier identifies a type or value\
    \ key in the\n   context of the defined service specification.   Subsequent\n\
    \   EBNF.identifiers identify a value label or type in the context of the\n  \
    \ first identifier (SET or SEQUENCE).  EBNF.context indicates a context\n   tag,\
    \ and is used where there is no label or type to uniquely identify\n   a component.\
    \  The special EBNF.identifier keyword \"value\" is used to\n   denote an element\
    \ of a sequence.\n   For example, IPMS.Heading.subject defines the subject element\
    \ of the\n   IPMS heading.  The same syntax is also used to refer to element\n\
    \   values.  For example,\n   MTS.EncodedInformationTypes.[0].g3Fax refers to\
    \ a value of\n   MTS.EncodedInformationTypes.[0] .\n"
- title: 3.2.  ASCII and IA5
  contents:
  - "3.2.  ASCII and IA5\n   A gateway will interpret all IA5 as ASCII.  Thus, mapping\
    \ between\n   these forms is conceptual.\n"
- title: 3.3.  Standard Types
  contents:
  - "3.3.  Standard Types\n   There is a need to convert between ASCII text, and some\
    \ of the types\n   defined in ASN.1 [CCITT/ISO88d].  For each case, an EBNF syntax\n\
    \   definition is given, for use in all of this specification, which\n   leads\
    \ to a mapping between ASN.1, and an EBNF construct.  All EBNF\n   syntax definitions\
    \ of ASN.1 types are in lower case, whereas ASN.1\n   types are referred to with\
    \ the first letter in upper case.  Except as\n   noted, all mappings are symmetrical.\n"
- title: 3.3.1.  Boolean
  contents:
  - "3.3.1.  Boolean\n   Boolean is encoded as:\n           boolean = \"TRUE\" / \"\
    FALSE\"\n"
- title: 3.3.2.  NumericString
  contents:
  - "3.3.2.  NumericString\n   NumericString is encoded as:\n           numericstring\
    \ = *DIGIT\n"
- title: 3.3.3.  PrintableString
  contents:
  - "3.3.3.  PrintableString\n   PrintableString is a restricted IA5String defined\
    \ as:\n           printablestring  = *( ps-char )\n           ps-restricted-char\
    \      = 1DIGIT /  1ALPHA / \" \" / \"'\" / \"+\"\n                          \
    \    / \",\" / \"-\" / \".\" / \"/\" / \":\" / \"=\" / \"?\"\n           ps-delim\
    \         = \"(\" / \")\"\n           ps-char          = ps-delim / ps-restricted-char\n\
    \   This can be used to represent real printable strings in EBNF.\n"
- title: 3.3.4.  T.61String
  contents:
  - "3.3.4.  T.61String\n   In cases where T.61 strings are only used for conveying\
    \ human\n   interpreted information, the aim of a mapping is  to render the\n\
    \   characters appropriately in the remote character set, rather than to\n   maximise\
    \ reversibility.  For these cases, the mappings to IA5 defined\n   in CCITT Recommendation\
    \ X.408 (1988) shall be used [CCITT/ISO88a].\n   These will then be encoded in\
    \ ASCII.\n   There is also a need to represent Teletex Strings in ASCII, for some\n\
    \   aspects of O/R Address.  For these, the following encoding is used:\n    \
    \       teletex-string   = *( ps-char / t61-encoded )\n           t61-encoded\
    \      = \"{\" 1* t61-encoded-char \"}\"\n           t61-encoded-char = 3DIGIT\n\
    \   Common characters are mapped simply.  Other octets are mapped using a\n  \
    \ quoting mechanism similar to the printable string mechanism.  Each\n   octet\
    \ is represented as 3 decimal digits.\n   There are a number of places where a\
    \ string may have a Teletex and/or\n   Printable String representation.  The following\
    \ BNF is used to\n   represent this.\n      teletex-and-or-ps = [ printablestring\
    \ ] [ \"*\" teletex-string ]\n   The natural mapping is restricted to EBNF.ps-char,\
    \ in order to make\n   the full BNF easier to parse.\n"
- title: 3.3.5.  UTCTime
  contents:
  - "3.3.5.  UTCTime\n   Both UTCTime and the RFC 822 822.date-time syntax contain:\
    \  Year\n   (lowest two digits), Month, Day of Month, hour, minute, second\n \
    \  (optional), and Timezone.  822.date-time also contains an optional\n   day\
    \ of the week, but this is redundant.  Therefore a symmetrical\n   mapping can\
    \ be made between these constructs.\n   Note:\n        In practice, a gateway\
    \ will need to parse various illegal\n        variants on 822.date-time.  In cases\
    \ where 822.date-time\n        cannot be parsed, it is recommended that the derived\
    \ UTCTime\n        is set to the value at the time of translation.\n   When mapping\
    \ to X.400, the UTCTime format which specifies the\n   timezone offset shall be\
    \ used.\n   When mapping to RFC 822, the 822.date-time format shall include a\n\
    \   numeric timezone offset (e.g., +0000).\n   When mapping time values, the timezone\
    \ shall be preserved as\n   specified.  The date shall not be normalised to any\
    \ other timezone.\n"
- title: 3.3.6.  Integer
  contents:
  - "3.3.6.  Integer\n   A basic ASN.1 Integer will be mapped onto EBNF.numericstring.\
    \  In\n   many cases ASN.1 will enumerate Integer values or use ENUMERATED.  An\n\
    \   EBNF encoding labelled-integer is provided. When mapping from EBNF to\n  \
    \ ASN.1, only the integer value is mapped, and the associated text is\n   discarded.\
    \  When mapping from ASN.1 to EBNF, addition of an\n   appropriate text label\
    \ is strongly encouraged.\n        labelled-integer ::= [ key-string ] \"(\" numericstring\
    \ \")\"\n        key-string      = *key-char\n        key-char        = <a-z,\
    \ A-Z, 0-9, and \"-\">\n"
- title: 3.3.7.  Object Identifier
  contents:
  - "3.3.7.  Object Identifier\n   Object identifiers are represented in a form similar\
    \ to that given in\n   ASN.1.  The order is the same as for ASN.1 (big-endian).\
    \  The numbers\n   are mandatory, and used when mapping from the ASCII to ASN.1.\
    \  The\n   key-strings are optional.  It is recommended that as many strings as\n\
    \   possible are generated when mapping from ASN.1 to ASCII, to\n   facilitate\
    \ user recognition.\n        object-identifier  ::= oid-comp object-identifier\n\
    \                        | oid-comp\n        oid-comp ::= [ key-string ] \"(\"\
    \ numericstring \")\"\n"
- title: 'An example representation of an object identifier is:'
  contents:
  - "An example representation of an object identifier is:\n        joint-iso-ccitt(2)\
    \ mhs (6) ipms (1) ep (11) ia5-text (0)\n        or\n        (2) (6) (1)(11)(0)\n"
- title: 3.4.  Encoding ASCII in Printable String
  contents:
  - "3.4.  Encoding ASCII in Printable String\n   Some information in RFC 822 is represented\
    \ in ASCII, and needs to be\n   mapped into X.400 elements encoded as printable\
    \ string.  For this\n   reason, a mechanism to represent ASCII encoded as PrintableString\
    \ is\n   needed.\n   A structured subset of EBNF.printablestring is now defined.\
    \  This\n   shall be used to encode ASCII in the PrintableString character set.\n\
    \        ps-encoded       = *( ps-restricted-char / ps-encoded-char )\n      \
    \  ps-encoded-char  = \"(a)\"               ; (@)\n                         /\
    \ \"(p)\"               ; (%)\n                         / \"(b)\"            \
    \   ; (!)\n                         / \"(q)\"               ; (\")\n         \
    \                / \"(u)\"               ; (_)\n                         / \"\
    (l)\"               ; \"(\"\n                         / \"(r)\"              \
    \ ; \")\"\n                         / \"(\" 3DIGIT \")\"\n   The 822.3DIGIT in\
    \ EBNF.ps-encoded-char must have range 0-127, and is\n   interpreted in decimal\
    \ as the corresponding ASCII character.  Special\n   encodings are given for:\
    \ at sign (@), percent (%), exclamation\n   mark/bang (!), double quote (\"),\
    \ underscore (_), left bracket ((),\n   and right bracket ()).  These characters,\
    \ with the exception of round\n   brackets, are not included in PrintableString,\
    \ but are common in RFC\n   822 addresses.  The abbreviations will ease specification\
    \ of RFC 822\n   addresses from an X.400 system.  These special encodings shall\
    \ be\n   interpreted in a case insensitive manner, but always generated in\n \
    \  lower case.\n   A reversible mapping between PrintableString and ASCII can\
    \ now be\n   defined.  The reversibility means that some values of printable\n\
    \   string (containing round braces) cannot be generated from ASCII.\n   Therefore,\
    \ this mapping must only be used in cases where the\n   printable strings may\
    \ only be derived from ASCII (and will therefore\n   have a restricted domain).\
    \  For example, in this specification, it is\n   only applied to a Domain Defined\
    \ Attribute which will have been\n   generated by use of this specification and\
    \ a value such as \"(\" would\n   not be possible.\n   To encode ASCII as PrintableString,\
    \ the EBNF.ps-encoded syntax is\n   used, with all EBNF.ps-restricted-char mapped\
    \ directly.  All other\n   822.CHAR are encoded as EBNF.ps-encoded-char.\n   To\
    \ encode PrintableString as ASCII, parse PrintableString as\n   EBNF.ps-encoded,\
    \ and then reverse the previous mapping.  If the\n   PrintableString cannot be\
    \ parsed, then the mapping is being applied\n   in to an inappropriate value,\
    \ and an error shall be given to the\n   procedure doing the mapping. In some\
    \ cases, it may be preferable to\n   pass the printable string through unaltered.\n\
    \   Some examples are now given.  Note the arrows which indicate\n   asymmetrical\
    \ mappings:\n                PrintableString           ASCII\n               \
    \ 'a demo.'         <->   'a demo.'\n                foo(a)bar         <->   foo@bar\n\
    \                (q)(u)(p)(q)      <->   \"_%\"\n                (a)         \
    \      <->   @\n                (A)               ->    @\n                (l)a(r)\
    \           <->   (a)\n                (126)             <->   ~\n           \
    \     (                 ->    (\n                (l)               <->   (\n"
- title: Chapter 4 - Addressing
  contents:
  - "Chapter 4 - Addressing\n   Addressing is probably the trickiest problem of an\
    \ X.400 <-> RFC 822\n   gateway.  Therefore it is given a separate chapter.  This\
    \ chapter, as\n   a side effect, also defines a textual representation of an X.400\
    \ O/R\n   Address.\n   Initially we consider an address in the (human) mail user\
    \ sense of\n   \"what is typed at the mailsystem to reference a mail user\". \
    \ A basic\n   RFC 822 address is defined by the EBNF EBNF.822-address:\n     \
    \      822-address     = [ route ] addr-spec\n   In an 822-MTS protocol, the originator\
    \ and each recipient are\n   considered to be defined by such a construct.  In\
    \ an RFC 822 header,\n   the EBNF.822-address is encapsulated in the 822.address\
    \ syntax rule,\n   and there may also be associated comments.  None of this extra\n\
    \   information has any semantics, other than to the end user.\n   The basic X.400\
    \ O/R Address, used by the MTS for routing, is defined\n   by MTS.ORAddress. \
    \ In IPMS, the MTS.ORAddress is encapsulated within\n   IPMS.ORDescriptor.\n \
    \  It can be seen that RFC 822 822.address must be mapped with\n   IPMS.ORDescriptor,\
    \ and that RFC 822 EBNF.822-address must be mapped\n   with MTS.ORAddress.\n"
- title: 4.1.  A textual representation of MTS.ORAddress
  contents:
  - "4.1.  A textual representation of MTS.ORAddress\n   MTS.ORAddress is structured\
    \ as a set of attribute value pairs.  It is\n   clearly necessary to be able to\
    \ encode this in ASCII for gatewaying\n   purposes.  All components shall be encoded,\
    \ in order to guarantee\n   return of error messages, and to optimise third party\
    \ replies.\n"
- title: 4.2.  Basic Representation
  contents:
  - "4.2.  Basic Representation\n   An O/R Address has a number of structured and\
    \ unstructured\n   attributes.  For each unstructured attribute, a key and an\
    \ encoding\n   is specified.  For structured attributes, the X.400 attribute is\n\
    \   mapped onto one or more attribute value pairs.  For domain defined\n   attributes,\
    \ each element of the sequence will be mapped onto a triple\n   (key and two values),\
    \ with each value having the same encoding.  The\n   attributes are as follows,\
    \ with 1984 attributes given in the first\n   part of the table.  For each attribute,\
    \ a reference is given,\n   consisting of the relevant sections in X.402 / ISO\
    \ 10021-2, and the\n   extension identifier for 88 only attributes:\n  Attribute\
    \ (Component)                Key          Enc     Ref     Id\n"
- title: 84/88 Attributes
  contents:
  - '84/88 Attributes

    '
- title: MTS.CountryName                        C              P     18.3.3
  contents:
  - 'MTS.CountryName                        C              P     18.3.3

    '
- title: MTS.AdministrationDomainName           ADMD           P     18.3.1
  contents:
  - 'MTS.AdministrationDomainName           ADMD           P     18.3.1

    '
- title: MTS.PrivateDomainName                  PRMD           P     18.3.21
  contents:
  - 'MTS.PrivateDomainName                  PRMD           P     18.3.21

    '
- title: MTS.NetworkAddress                     X121           N     18.3.7
  contents:
  - 'MTS.NetworkAddress                     X121           N     18.3.7

    '
- title: MTS.TerminalIdentifier                 T-ID           P     18.3.23
  contents:
  - 'MTS.TerminalIdentifier                 T-ID           P     18.3.23

    '
- title: MTS.OrganizationName                   O              P/T   18.3.9
  contents:
  - 'MTS.OrganizationName                   O              P/T   18.3.9

    '
- title: MTS.OrganizationalUnitNames.value      OU             P/T   18.3.10
  contents:
  - 'MTS.OrganizationalUnitNames.value      OU             P/T   18.3.10

    '
- title: MTS.NumericUserIdentifier              UA-ID          N     18.3.8
  contents:
  - 'MTS.NumericUserIdentifier              UA-ID          N     18.3.8

    '
- title: MTS.PersonalName                       PN             P/T   18.3.12
  contents:
  - 'MTS.PersonalName                       PN             P/T   18.3.12

    '
- title: MTS.PersonalName.surname               S              P/T   18.3.12
  contents:
  - 'MTS.PersonalName.surname               S              P/T   18.3.12

    '
- title: MTS.PersonalName.given-name            G              P/T   18.3.12
  contents:
  - 'MTS.PersonalName.given-name            G              P/T   18.3.12

    '
- title: MTS.PersonalName.initials              I              P/T   18.3.12
  contents:
  - 'MTS.PersonalName.initials              I              P/T   18.3.12

    '
- title: MTS.PersonalName
  contents:
  - "MTS.PersonalName\n   .generation-qualifier               GQ             P/T \
    \  18.3.12\n"
- title: MTS.DomainDefinedAttribute.value       DD             P/T   18.1
  contents:
  - 'MTS.DomainDefinedAttribute.value       DD             P/T   18.1

    '
- title: 88 Attributes
  contents:
  - '88 Attributes

    '
- title: MTS.CommonName                         CN             P/T   18.3.2    1
  contents:
  - 'MTS.CommonName                         CN             P/T   18.3.2    1

    '
- title: MTS.TeletexCommonName                  CN             P/T   18.3.2    2
  contents:
  - 'MTS.TeletexCommonName                  CN             P/T   18.3.2    2

    '
- title: MTS.TeletexOrganizationName            O              P/T   18.3.9    3
  contents:
  - 'MTS.TeletexOrganizationName            O              P/T   18.3.9    3

    '
- title: MTS.TeletexPersonalName                PN             P/T   18.3.12   4
  contents:
  - 'MTS.TeletexPersonalName                PN             P/T   18.3.12   4

    '
- title: MTS.TeletexPersonalName.surname        S              P/T   18.3.12   4
  contents:
  - 'MTS.TeletexPersonalName.surname        S              P/T   18.3.12   4

    '
- title: MTS.TeletexPersonalName.given-name     G              P/T   18.3.12   4
  contents:
  - 'MTS.TeletexPersonalName.given-name     G              P/T   18.3.12   4

    '
- title: MTS.TeletexPersonalName.initials       I              P/T   18.3.12   4
  contents:
  - 'MTS.TeletexPersonalName.initials       I              P/T   18.3.12   4

    '
- title: MTS.TeletexPersonalName
  contents:
  - "MTS.TeletexPersonalName\n    .generation-qualifier              GQ          \
    \   P/T   18.3.12   4\n"
- title: MTS.TeletexOrganizationalUnitNames
  contents:
  - "MTS.TeletexOrganizationalUnitNames\n   .value                              OU\
    \             P/T   18.3.10   5\n"
- title: MTS.TeletexDomainDefinedAttribute
  contents:
  - "MTS.TeletexDomainDefinedAttribute\n   .value                              DD\
    \             P/T   18.1      6\n"
- title: MTS.PDSName                            PD-SERVICE     P     18.3.11   7
  contents:
  - 'MTS.PDSName                            PD-SERVICE     P     18.3.11   7

    '
- title: MTS.PhysicalDeliveryCountryName        PD-C           P     18.3.13   8
  contents:
  - 'MTS.PhysicalDeliveryCountryName        PD-C           P     18.3.13   8

    '
- title: MTS.PostalCode                         PD-CODE        P     18.3.19   9
  contents:
  - 'MTS.PostalCode                         PD-CODE        P     18.3.19   9

    '
- title: MTS.PhysicalDeliveryOfficeName         PD-OFFICE      P/T   18.3.14   10
  contents:
  - 'MTS.PhysicalDeliveryOfficeName         PD-OFFICE      P/T   18.3.14   10

    '
- title: MTS.PhysicalDeliveryOfficeNumber       PD-OFFICE-NUM  P/T   18.3.15   11
  contents:
  - 'MTS.PhysicalDeliveryOfficeNumber       PD-OFFICE-NUM  P/T   18.3.15   11

    '
- title: MTS.ExtensionORAddressComponents       PD-EXT-ADDRESS P/T   18.3.4    12
  contents:
  - 'MTS.ExtensionORAddressComponents       PD-EXT-ADDRESS P/T   18.3.4    12

    '
- title: MTS.PhysicalDeliveryPersonName         PD-PN          P/T   18.3.17   13
  contents:
  - 'MTS.PhysicalDeliveryPersonName         PD-PN          P/T   18.3.17   13

    '
- title: MTS.PhysicalDeliveryOrganizationName   PD-O           P/T   18.3.16   14
  contents:
  - 'MTS.PhysicalDeliveryOrganizationName   PD-O           P/T   18.3.16   14

    '
- title: MTS.ExtensionPhysicalDelivery
  contents:
  - "MTS.ExtensionPhysicalDelivery\n   AddressComponents                  PD-EXT-DELIVERY\
    \ P/T   18.3.5    15\n"
- title: MTS.UnformattedPostalAddress           PD-ADDRESS     P/T   18.3.25   16
  contents:
  - 'MTS.UnformattedPostalAddress           PD-ADDRESS     P/T   18.3.25   16

    '
- title: MTS.StreetAddress                      PD-STREET      P/T   18.3.22   17
  contents:
  - 'MTS.StreetAddress                      PD-STREET      P/T   18.3.22   17

    '
- title: MTS.PostOfficeBoxAddress               PD-BOX         P/T   18.3.18   18
  contents:
  - 'MTS.PostOfficeBoxAddress               PD-BOX         P/T   18.3.18   18

    '
- title: MTS.PosteRestanteAddress               PD-RESTANTE    P/T   18.3.20   19
  contents:
  - 'MTS.PosteRestanteAddress               PD-RESTANTE    P/T   18.3.20   19

    '
- title: MTS.UniquePostalName                   PD-UNIQUE      P/T   18.3.26   20
  contents:
  - 'MTS.UniquePostalName                   PD-UNIQUE      P/T   18.3.26   20

    '
- title: MTS.LocalPostalAttributes              PD-LOCAL       P/T   18.3.6    21
  contents:
  - 'MTS.LocalPostalAttributes              PD-LOCAL       P/T   18.3.6    21

    '
- title: MTS.ExtendedNetworkAddress
  contents:
  - "MTS.ExtendedNetworkAddress\n   .e163-4-address.number              NET-NUM  \
    \      N     18.3.7    22\n"
- title: MTS.ExtendedNetworkAddress
  contents:
  - "MTS.ExtendedNetworkAddress\n   .e163-4-address.sub-address         NET-SUB  \
    \      N     18.3.7    22\n"
- title: MTS.ExtendedNetworkAddress
  contents:
  - "MTS.ExtendedNetworkAddress\n   .psap-address                       NET-PSAP \
    \      X     18.3.7    22\n"
- title: MTS.TerminalType                       T-TY           I     18.3.24   23
  contents:
  - "MTS.TerminalType                       T-TY           I     18.3.24   23\n  \
    \ The following keys identify different EBNF encodings, which are\n   associated\
    \ with the ASCII representation of MTS.ORAddress.\n                   Key    \
    \     Encoding\n                   P     printablestring\n                   N\
    \     numericstring\n                   T     teletex-string\n               \
    \    P/T   teletex-and-or-ps\n                   I     labelled-integer\n    \
    \               X     presentation-address\n   The BNF for presentation-address\
    \ is taken from the specification \"A\n   String Encoding of Presentation Address\"\
    \ [Kille89a].\n   In most cases, the EBNF encoding maps directly to the ASN.1\
    \ encoding\n   of the attribute.  There are a few exceptions. In cases where an\n\
    \   attribute can be encoded as either a PrintableString or NumericString\n  \
    \ (Country, ADMD, PRMD), either form is mapped into the BNF.  When\n   generating\
    \ ASN.1, the NumericString encoding shall be used if the\n   string contains only\
    \ digits.\n   There are a number of cases where the P/T (teletex-and-or-ps)\n\
    \   representation is used.  Where the key maps to a single attribute,\n   this\
    \ choice is reflected in the encoding of the attribute (attributes\n   10-21).\
    \  For most of the 1984 attributes and common name, there is a\n   printablestring\
    \ and a teletex variant.   This pair of attributes is\n   mapped onto the single\
    \ component here.  This will give a clean\n   mapping for the common cases where\
    \ only one form of the name is used.\n   Recently, ISO has undertaken work to\
    \ specify a string form of O/R\n   Address [CCITT/ISO91a].  This has specified\
    \ a number of string\n   keywords for attributes.  As RFC 1148 was an input to\
    \ this work, many\n   of the keywords are the same.  To increase compatability,\
    \ the\n   following alternative values shall be recognised when mapping from\n\
    \   RFC 822 to X.400.  These shall not be generated when mapping from\n   X.400\
    \ to RFC 822.\n                   Keyword          Alternative\n             \
    \  ADMD               A\n               PRMD               P\n               GQ\
    \                 Q\n               X121               X.121\n               UA-ID\
    \              N-ID\n               PD-OFFICE-NUMBER   PD-OFFICE NUMBER\n   When\
    \ mapping from RFC 822 to X.400, the keywords: OU1, OU2, OU3, and\n   OU4, shall\
    \ be recognised.    If these are present, no keyword OU\n   shall be present.\
    \  These will be treated as ordered values of OU.\n"
- title: 4.2.1.  Encoding of Personal Name
  contents:
  - "4.2.1.  Encoding of Personal Name\n   Handling of Personal Name and Teletex Personal\
    \ Name based purely on\n   the EBNF.standard-type syntax defined above is likely\
    \ to be clumsy.\n   It seems desirable to utilise the \"human\" conventions for\
    \ encoding\n   these components.  A syntax is defined, which is designed to provide\n\
    \   a clean encoding for the common cases of O/R Address specification\n   where:\n\
    \   1.   There is no generational qualifier\n   2.   Initials contain only letters\n\
    \   3.   Given Name does not contain full stop (\".\"), and is at least\n    \
    \    two characters long.\n   4.   Surname does not contain full stop in the first\
    \ two\n        characters.\n   5    If Surname is the only component, it does\
    \ not contain full\n        stop.\n   The following EBNF is defined:\n       \
    \    encoded-pn      = [ given \".\" ] *( initial \".\" ) surname\n          \
    \ given           = 2*<ps-char not including \".\">\n           initial      \
    \   = ALPHA\n           surname         = printablestring\n   This is used to\
    \ map from any string containing only printable string\n   characters to an O/R\
    \ address personal name.  To map from a string to\n   O/R Address components,\
    \ parse the string according to the EBNF.  The\n   given name and surname are\
    \ assigned directly.  All EBNF.initial\n   tokens are concatenated without intervening\
    \ full stops to generate\n   the initials component.\n   For an O/R address which\
    \ follows the above restrictions, a string is\n   derived in the natural manner.\
    \  In this case, the mapping will be\n   reversible.\n   For example:\n      \
    \  GivenName       = \"Marshall\"\n        Surname         = \"Rose\"\n      \
    \  Maps with  \"Marshall.Rose\"\n        Initials        = \"MT\"\n        Surname\
    \         = \"Rose\"\n        Maps with  \"M.T.Rose\"\n        GivenName     \
    \  = \"Marshall\"\n        Initials        = \"MT\"\n        Surname         =\
    \ \"Rose\"\n        Maps with  \"Marshall.M.T.Rose\"\n   Note that X.400 suggest\
    \ that Initials is used to encode ALL initials.\n   Therefore, the defined encoding\
    \ is \"natural\" when either GivenName or\n   Initials, but not both, are present.\
    \  The case where both are present\n   can be encoded, but this appears to be\
    \ contrived!\n"
- title: 4.2.2.  Standard Encoding of MTS.ORAddress
  contents:
  - "4.2.2.  Standard Encoding of MTS.ORAddress\n   Given this structure, we can specify\
    \ a BNF representation of an O/R\n   Address.\n        std-or-address  = 1*( \"\
    /\" attribute \"=\" value ) \"/\"\n        attribute       = standard-type\n \
    \                       / \"RFC-822\"\n                        / registered-dd-type\n\
    \                        / dd-key \".\" std-printablestring\n        standard-type\
    \   = key-string\n        registered-dd-type\n                        = key-string\n\
    \        dd-key          = key-string\n        value           = std-printablestring\n\
    \        std-printablestring\n                        = *( std-char / std-pair\
    \ )\n        std-char        = <\"{\", \"}\", \"*\", and any ps-char\n       \
    \                                 except \"/\" and \"=\">\n        std-pair  \
    \      = \"$\" ps-char\n   The standard-type is any key defined in the table in\
    \ Section 4.2,\n   except PN, and DD.  The BNF leads to a set of attribute/value\
    \ pairs.\n   The value is interpreted according to the EBNF encoding defined in\n\
    \   the table.\n   If the standard-type is PN, the value is interpreted according\
    \ to\n   EBNF.encoded-pn, and the components of MTS.PersonalName and/or\n   MTS.TeletexPersonalName\
    \ derived accordingly.\n   If dd-key is the recognised Domain Defined string (DD),\
    \ then the type\n   and value are interpreted according to the syntax implied\
    \ from the\n   encoding, and aligned to either the teletex or printable string\
    \ form.\n   Key and value shall have the same encoding.\n   If value is \"RFC-822\"\
    , then the (printable string) Domain Defined\n   Type of \"RFC-822\" is assumed.\
    \  This is an optimised encoding of the\n   domain defined type defined by this\
    \ specification.\n   The matching of all keywords shall be done in a case-independent\n\
    \   manner.\n   EBNF.std-or-address uses the characters \"/\" and \"=\" as delimiters.\n\
    \   Domain Defined Attributes and any value may contain these characters.\n  \
    \ A quoting mechanism, using the non-printable string \"$\" is used to\n   allow\
    \ these characters to be represented.\n   If the value is registered-dd-type,\
    \ and the value is registered at\n   the Internet Assigned Numbers Authority (IANA)\
    \ as an accepted Domain\n   Defined Attribute type, then the value shall be interpreted\n\
    \   accordingly.  This restriction maximises the syntax checking which\n   can\
    \ be done at a gateway.\n"
- title: 4.3.  EBNF.822-address <-> MTS.ORAddress
  contents:
  - "4.3.  EBNF.822-address <-> MTS.ORAddress\n   Ideally, the mapping specified would\
    \ be entirely symmetrical and\n   global, to enable addresses to be referred to\
    \ transparently in the\n   remote system, with the choice of gateway being left\
    \ to the Message\n   Transfer Service.  There are two fundamental reasons why\
    \ this is not\n   possible:\n   1.   The syntaxes are sufficiently different to\
    \ make this\n        awkward.\n   2.   In the general case, there would not be\
    \ the necessary\n        administrative co-operation between the X.400 and RFC\
    \ 822\n        worlds, which would be needed for this to work.\n   Therefore,\
    \ an asymmetrical mapping is defined, which can be\n   symmetrical where there\
    \ is appropriate administrative control.\n"
- title: 4.3.1.  X.400 encoded in RFC 822
  contents:
  - "4.3.1.  X.400 encoded in RFC 822\n   The std-or-address syntax is  used to encode\
    \ O/R Address information\n   in the 822.local-part of EBNF.822-address.  In some\
    \ cases, further\n   O/R Address information is associated with the 822.domain\
    \ component.\n   This cannot be used in the general case, due to character set\n\
    \   problems, and to the variants of X.400 O/R Addresses which use\n   different\
    \ attribute types.  The only way to encode the full\n   PrintableString character\
    \ set in a domain is by use of the\n   822.domain-ref syntax (i.e. 822.atom).\
    \  This is likely to cause\n   problems on many systems.  The effective character\
    \ set of domains is\n   in practice reduced from the RFC 822 set, by restrictions\
    \ imposed by\n   domain conventions and policy, and by restrictions in RFC 821.\n\
    \   A generic 822.address consists of a 822.local-part and a sequence of\n   822.domains\
    \ (e.g., <@domain1,@domain2:user@domain3>).  All except the\n   822.domain associated\
    \ with the 822.local-part (domain3 in this case)\n   are considered to specify\
    \ routing within the RFC 822 world, and will\n   not be interpreted by the gateway\
    \ (although they may have identified\n   the gateway from within the RFC 822 world).\n\
    \   The  822.domain associated with the 822.local-part identifies the\n   gateway\
    \ from within the RFC 822 world.  This final 822.domain may be\n   used to determine\
    \ some number of O/R Address attributes, where this\n   does not conflict with\
    \ the first role.  RFC 822 routing to gateways\n   will usually be set up to facilitate\
    \ the 822.domain being used for\n   both purposes.  The following O/R Address\
    \ attributes are considered\n   as a hierarchy, and may be specified by the domain.\
    \  They are (in\n   order of hierarchy):\n        Country, ADMD, PRMD, Organisation,\
    \ Organisational Unit\n   There may be multiple Organisational Units.\n   A global\
    \ mapping is defined between domain specifications, and some\n   set of attributes.\
    \  This association proceeds hierarchically.  For\n   example, if a domain implies\
    \ ADMD, it also implies country.\n   Subdomains under this are associated according\
    \ to the O/R Address\n   hierarchy.  For example:\n        => \"AC.UK\" might\
    \ be associated with\n        C=\"GB\", ADMD=\"GOLD 400\", PRMD=\"UK.AC\"\n  \
    \      then domain \"R-D.Salford.AC.UK\" maps with\n        C=\"GB\", ADMD=\"\
    GOLD 400\", PRMD=\"UK.AC\", O=\"Salford\", OU=\"R-D\"\n   There are three basic\
    \ reasons why a domain/attribute mapping might be\n   maintained, as opposed to\
    \ using simply subdomains:\n   1.   As a shorthand to avoid redundant X.400 information.\
    \  In\n        particular, there will often be only one ADMD per country,\n  \
    \      and so it does not need to be given explicitly.\n   2.   To deal with cases\
    \ where attribute values do not fit the\n        syntax:\n           domain-syntax\
    \   = alphanum [ *alphanumhyphen alphanum ]\n           alphanum        = <ALPHA\
    \ or DIGIT>\n           alphanumhyphen  = <ALPHA or DIGIT or HYPHEN>\n       \
    \ Although RFC 822 allows for a more general syntax, this\n        restricted\
    \ syntax is chosen as it is the one chosen by the\n        various domain service\
    \ administrations.\n   3.   To deal with missing elements in the hierarchy.  A\
    \ domain\n        may be associated with an omitted attribute in conjunction\n\
    \        with several present ones.  When performing the algorithmic\n       \
    \ insertion of components lower in the hierarchy, the omitted\n        value shall\
    \ be skipped.  For example, if \"HNE.EGM\" is\n        associated with \"C=TC\"\
    , \"ADMD=ECQ\", \"PRMD=HNE\", and omitted\n        organisation, then \"ZI.HNE.EGM\"\
    \ is mapped with \"C=TC\",\n        \"ADMD=ECQ\", \"PRMD=HNE\", \"OU=ZI\". Attributes\
    \ may have null\n        values, and  this is treated separately from omitted\n\
    \        attributes (whilst it would be bad practice to treat these\n        two\
    \ cases differently, they must be allowed for).\n   This set of mappings needs\
    \  be known by the gateways relaying between\n   the RFC 822 world, and the O/R\
    \ Address space associated with the\n   mapping in question.  There needs to be\
    \ a single global definition of\n   this set of mappings.  A mapping implies an\
    \ adminstrative equivalence\n   between the two parts of the namespaces which\
    \ are mapped together.\n   To correctly route in all cases, it is necessary for\
    \ all gateways to\n   know the mapping.  To facilitate distribution of a global\
    \ set of\n   mappings, a format for the exchange of this information is defined\
    \ in\n   Appendix F.\n   The remaining attributes are encoded on the LHS, using\
    \ the EBNF.std-\n   or-address syntax.  For example:\n        /I=J/S=Linnimouth/GQ=5/@Marketing.Widget.COM\n\
    \   encodes the MTS.ORAddress consisting of:\n        MTS.CountryName        \
    \               = \"TC\"\n        MTS.AdministrationDomainName          = \"BTT\"\
    \n        MTS.OrganizationName                  = \"Widget\"\n        MTS.OrganizationalUnitNames.value\
    \     = \"Marketing\"\n        MTS.PersonalName.surname              = \"Linnimouth\"\
    \n        MTS.PersonalName.initials             = \"J\"\n        MTS.PersonalName.generation-qualifier\
    \ = \"5\"\n   The first three attributes are determined by the domain Widget.COM.\n\
    \   Then, the first element of OrganizationalUnitNames is determined\n   systematically,\
    \ and the remaining attributes are encoded on the LHS.\n   In an extreme case,\
    \ all of the attributes will be on the LHS.  As the\n   domain cannot be null,\
    \ the RHS will simply be a domain indicating the\n   gateway.\n   The RHS (domain)\
    \ encoding is designed to deal cleanly with common\n   addresses, and so the amount\
    \ of information on the RHS is maximised.\n   In particular, it covers the Mnemonic\
    \ O/R Address using a 1984\n   compatible encoding.  This is seen as the dominant\
    \ form of O/R\n   Address.  Use of other forms of O/R Address, and teletex encoded\n\
    \   attributes will require an LHS encoding.\n   There is a further mechanism\
    \ to simplify the encoding of common\n   cases, where the only attributes to be\
    \ encoded on the LHS is a (non-\n   Teletex) Personal Name attributes which comply\
    \ with the restrictions\n   of 4.2.1.  To achieve this, the 822.local-part shall\
    \ be encoded as\n   EBNF.encoded-pn.  In the previous example, if the GenerationQualifier\n\
    \   was not present in the previous example O/R Address, it would map\n   with\
    \ the RFC 822 address: J.Linnimouth@Marketing.Widget.COM.\n   From the standpoint\
    \ of the RFC 822 Message Transfer System, the\n   domain specification is simply\
    \ used to route the message in the\n   standard manner.  The standard domain mechanisms\
    \ are used to select\n   appropriate gateways for the corresponding O/R Address\
    \ space.  In\n   most cases, this will be done by registering the higher levels,\
    \ and\n   assuming that the gateway can handle the lower levels.\n"
- title: 4.3.2.  RFC 822 encoded in X.400
  contents:
  - "4.3.2.  RFC 822 encoded in X.400\n   In some cases, the encoding defined above\
    \ may be reversed, to give a\n   \"natural\" encoding of genuine RFC 822 addresses.\
    \  This depends\n   largely on the allocation of appropriate management domains.\n\
    \   The general case is mapped by use of domain defined attributes.  A\n   Domain\
    \ defined type \"RFC-822\" is defined. The associated attribute\n   value is an\
    \ ASCII string encoded according to Section 3.3.3 of this\n   specification. The\
    \ interpretation of the ASCII string depends on the\n   context of the gateway.\n\
    \   1.   In the context of RFC 822, and RFC 920\n        [Crocker82a,Postel84a],\
    \ the string can be used directly.\n   2.   In the context of the JNT Mail protocol,\
    \ and the NRS\n        [Kille84a,Larmouth83a], the string shall be interpreted\n\
    \        according to Mailgroup Note 15 [Kille84b].\n   3.   In the context of\
    \ UUCP based systems, the string shall be\n        interpreted as defined in [Horton86a].\n\
    \   Other O/R Address attributes will be used to identify a context in\n   which\
    \ the O/R Address will be interpreted.  This might be a\n   Management Domain,\
    \ or some part of a Management Domain which\n   identifies a gateway MTA.  For\
    \ example:\n           C               = \"GB\"\n           ADMD            =\
    \ \"GOLD 400\"\n           PRMD            = \"UK.AC\"\n           O         \
    \      = \"UCL\"\n           OU              = \"CS\"\n           \"RFC-822\"\
    \      =  \"Jimmy(a)WIDGET-LABS.CO.UK\"\n   OR\n           C               = \"\
    TC\"\n           ADMD            = \"Wizz.mail\"\n           PRMD            =\
    \ \"42\"\n           \"rfc-822\"       = \"postel(a)venera.isi.edu\"\n   Note\
    \ in each case the PrintableString encoding of \"@\" as \"(a)\".  In\n   the second\
    \ example, the \"RFC-822\" domain defined attribute is\n   interpreted everywhere\
    \ within the (Private) Management Domain.  In\n   the first example, further attributes\
    \ are needed within the\n   Management Domain to identify a gateway.  Thus, this\
    \ scheme can be\n   used with varying levels of Management Domain co-operation.\n\
    \   There is a limit of 128 characters in the length of value of a domain\n  \
    \ defined attribute, and an O/R Address can have a maxmimum of four\n   domain\
    \ defined attributes.  Where the printable string generated from\n   the RFC 822\
    \ address exceeeds this value, additional domain defined\n   attributes are used\
    \ to enable up to 512 characters to be encoded.\n   These attributes shall be\
    \ filled completely before the next one is\n   started.   The DDA keywords are:\
    \  RFC822C1; RFC822C2; RFC822C3.\n   Longer addresses cannot be encoded.\n   There\
    \ is, analagous with 4.3.1, a means to associate parts of the O/R\n   Address\
    \ hierarchy with domains.  There is an analogous global\n   mapping, which in\
    \ most cases will be the inverse of the domain to O/R\n   address mapping.  The\
    \ mapping is maintained separately, as there may\n   be differences (e.g., two\
    \ alternate domain names map to the same set\n   of O/R address components).\n"
- title: 4.3.3.  Component Ordering
  contents:
  - "4.3.3.  Component Ordering\n   In most cases, ordering of O/R Address components\
    \ is not significant\n   for the mappings specified.  However, Organisational\
    \ Units (printable\n   string and teletex forms) and Domain Defined Attributes\
    \ are specified\n   as SEQUENCE in MTS.ORAddress, and so their order may be significant.\n\
    \   This specification needs to take account of this:\n   1.   To allow consistent\
    \ mapping into the domain hierarchy\n   2.   To ensure preservation of order over\
    \ multiple mappings.\n   There are three places where an order is specified:\n\
    \   1.   The text encoding (std-or-address) of MTS.ORAddress as used\n       \
    \ in the local-part of an RFC 822 address.  An order is needed\n        for those\
    \ components which may have multiple values\n        (Organisational Unit, and\
    \ Domain Defined Attributes). When\n        generating an 822.std-or-address,\
    \ components of a given type\n        shall be in hierarchical order with the\
    \ most significant\n        component on the RHS.  If there is an Organisation\n\
    \        Attribute, it shall be to the right of any Organisational\n        Unit\
    \ attributes.  These requirements are for the following\n        reasons:\n  \
    \ -         Alignment to the hierarchy of other components in RFC\n          \
    \   822 addresses (thus, Organisational Units will appear\n             in the\
    \ same order, whether encoded on the RHS or LHS).\n             Note the differences\
    \ of JNT Mail as described in\n             Appendix B.\n   -         Backwards\
    \ compatibility with RFC 987/1026.\n   -         To ensure that gateways generate\
    \ consistent addresses.\n             This is both to help end users, and to generate\n\
    \             identical message ids.\n        Further, it is recommended that\
    \ all other attributes are\n        generated according to this ordering, so that\
    \ all attributes\n        so encoded follow a consistent hierarchy.   When generating\n\
    \        822.msg-id, this order shall be followed.\n   2.   For the Organisational\
    \ Units (OU) in MTS.ORAddress, the\n        first OU in the SEQUENCE is the most\
    \ significant, as\n        specified in X.400.\n   3.   For the Domain Defined\
    \ Attributes in MTS.ORAddress, the\n        First Domain Defined Attribute in\
    \ the SEQUENCE is the most\n        significant.\n        Note that although this\
    \ ordering is mandatory for this\n        mapping, there are NO implications on\
    \ ordering significance\n        within X.400, where this is a Management Domain\
    \ issue.\n"
- title: 4.3.4.  RFC 822 -> X.400
  contents:
  - "4.3.4.  RFC 822 -> X.400\n   There are two basic cases:\n   1.   X.400 addresses\
    \ encoded in RFC 822.  This will also include\n        RFC 822 addresses which\
    \ are given reversible encodings.\n   2.   \"Genuine\" RFC 822 addresses.\n  \
    \ The mapping shall proceed as follows, by first assuming case 1).\n"
- title: STAGE I.
  contents:
  - "STAGE I.\n   1.   If the 822-address is not of the form:\n                local-part\
    \ \"@\" domain\n        take the domain which will be routed on and apply step\
    \ 2 of\n        stage 1 to derive (a possibly null) set of attributes. Then\n\
    \        go to stage II.\n        NOTE:It may be appropriate to reduce a source\
    \ route address\n             to this form by removal of all bar the last domain.\
    \  In\n             terms of the design intentions of RFC 822, this would\n  \
    \           be an incorrect action.  However, in most real cases,\n          \
    \   it will do the \"right\" thing and provide a better\n             service\
    \ to the end user.  This is a reflection on the\n             excessive and inappropriate\
    \ use of source routing in\n             RFC 822 based systems.  Either approach,\
    \ or the\n             intermediate approach of stripping only domain\n      \
    \       references which reference the local gateway are\n             conformant\
    \ to this specification.\n   2.   Attempt to parse EBNF.domain as:\n         \
    \       *( domain-syntax \".\" ) known-domain\n        Where EBNF.known-domain\
    \ is the longest possible match in the\n        set of globally defined mappings\
    \ (see Appendix F).  If this\n        fails, and the EBNF.domain does not explicitly\
    \ identify the\n        local gateway, go to stage II.  If the domain explicitly\n\
    \        identifies the gateway, allocate no attributes.  Otherwise,\n       \
    \ allocate the attributes associated with EBNF.known-domain.\n        For each\
    \ component, systematically allocate the attribute\n        implied by each EBNF.domain-syntax\
    \ component in the order:\n        C, ADMD, PRMD, O, OU.  Note that if the mapping\
    \ used\n        identifies an \"omitted attribute\", then this attribute\n   \
    \     should be omitted in the systematic allocation.  If this new\n        component\
    \ exceed an upper bound (ADMD: 16; PRMD: 16; O: 64;\n        OU:  32) or it would\
    \ lead to more than four OUs, then go to\n        stage II with the attributes\
    \ derived.\n        At this stage, a set of attributes has been derived, which\n\
    \        will give appropriate routing within X.400.  If any of the\n        later\
    \ steps of Stage I force use of Stage II, then these\n        attributes should\
    \ be used in Stage II.\n   3.   If the 822.local-part uses the 822.quoted-string\
    \ encoding,\n        remove this quoting.  If this unquoted 822.local-part has\n\
    \        leading space, trailing space, or two adjacent space go to\n        stage\
    \ II.\n   4.   If the unquoted 822.local-part contains any characters not\n  \
    \      in PrintableString, go to stage II.\n   5.   Parse the (unquoted) 822.local-part\
    \ according to the EBNF\n        EBNF.std-or-address.  Checking of upper bounds\
    \ should not be\n        done at this point.  If this parse fails, parse the local-\n\
    \        part according to the EBNF EBNF.encoded-pn.  If this parse\n        fails,\
    \ go to stage II.  The result is a set of type/value\n        pairs.  If the set\
    \ of attributes leads to an address of any\n        form other than mnemonic form,\
    \ then only these attributes\n        should be taken. If (for mnemonic form)\
    \ the values generated\n        conflict with those derived in step 2 (e.g., a\
    \ duplicated\n        country attribute), the domain is assumed to be a remote\n\
    \        gateway.  In this case, take only the LHS derived\n        attributes,\
    \ together with any RHS dericed attributes which\n        are more significant\
    \ thant the most signicant attribute\n        which is duplicated (e.g., if there\
    \ is a duplicate PRMD, but\n        no LHS derived ADMD and country, then the\
    \ ADMD and country\n        should be taken from the RHS).  therwise add LHS and\
    \ RHS\n        derived attributes together.\n   6.   Associate the EBNF.attribute-value\
    \ syntax (determined from\n        the identified type) with each value, and check\
    \ that it\n        conforms.  If not, go to stage II.\n   7.   Ensure that the\
    \ set of attributes conforms both to the\n        MTS.ORAddress specification\
    \ and to the restrictions on this\n        set given in X.400, and that no upper\
    \ bounds are exceeded\n        for any attribute.  If not go to stage II.\n  \
    \ 8.   Build the O/R Address from this information.\n"
- title: STAGE II.
  contents:
  - "STAGE II.\n   This will only be reached if the RFC 822 EBNF.822-address is not\
    \ a\n   valid X.400 encoding.  This implies that the address must refer to a\n\
    \   recipient on an RFC 822 system.  Such addresses shall be encoded in\n   an\
    \ X.400 O/R Address using a domain defined attribute.\n   1.   Convert the EBNF.822-address\
    \ to PrintableString, as\n        specified in Chapter 3.\n   2.   Generate the\
    \ \"RFC-822\" domain defined attribute  from this\n        string.\n   3.   Build\
    \ the rest of the O/R Address in the manner described\n        below.\n   It may\
    \ not be possible to encode the domain defined attribute due to\n   length restrictions.\
    \  If the limit is exceeded by a mapping at the\n   MTS level, then the gateway\
    \ shall reject the message in question.  If\n   this occurs at the IPMS level,\
    \ then the action will depend on the\n   policy being taken for IPMS encoding,\
    \ which is discussed in Section\n   5.1.3.\n   If Stage I has identified a set\
    \ of attributes, use these to build the\n   remainder of the address.  The administrative\
    \ equivalence of the\n   mappings will ensure correct routing throug X.400 to\
    \ a gateway back\n   to RFC 822.\n   If Stage I has not identified a set of attributes,\
    \ the remainder of\n   the O/R address effectively identifies a source route to\
    \ a gateway\n   from the X.400 side.  There are three cases, which are handled\n\
    \   differently:\n   822-MTS Return Address\n        This shall be set up so that\
    \ errors are returned through the\n        same gateway.  Therefore, the O/R Address\
    \ of the local\n        gateway shall be used.\n   IPMS Addresses\n        These\
    \ are optimised for replying.  In general, the message\n        may end up anywhere\
    \ within the X.400 world, and so this\n        optimisation identifies a gateway\
    \ appropriate for  the RFC\n        822 address being converted.  The 822.domain\
    \ to which the\n        address would be routed is used to select an appropriate\n\
    \        gateway. A globally defined set of mappings is used, which\n        identifies\
    \ (the O/R Address components of) appropriate\n        gateways for parts of the\
    \ domain namespace.  The longest\n        possible match on the 822.domain defines\
    \ which gateway to\n        use.  The table format for distribution of this information\n\
    \        is defined in Appendix F.\n        This global mapping is used for parts\
    \ of the RFC 822\n        namespace which do not have an administrative equivalence\n\
    \        with any part of the X.400 namespace, but for which it is\n        desirable\
    \ to identify a preferred X.400 gateway in order to\n        optimise routing.\n\
    \        If no mapping is found for the 822.domain, a default value\n        (typically\
    \ that of the local gateway) is used.  It is never\n        appropriate to ignore\
    \ the globally defined mappings.  In\n        some cases, it may be appropriate\
    \ to locally override the\n        globally defined mappings (e.g., to identify\
    \ a gateway close\n        to a recipient of the message).  This is likely to\
    \ be where\n        the global mapping identifies a public gateway, and the\n\
    \        local gateway has an agreement with a private gateway which\n       \
    \ it prefers to use.\n   822-MTS Recipient\n        As the RFC 822 and X.400 worlds\
    \ are fully connected, there\n        is no technical reason for this situation\
    \ to occur.  In some\n        cases, routing may be configured to connect two\
    \ parts of the\n        RFC 822 world using X.400.  The information that this\
    \ part\n        of the domain space should be routed by X.400 rather than\n  \
    \      remaining within the RFC 822 world will be configured\n        privately\
    \ into the gateway in question.  The O/R address\n        shall then be generated\
    \ in the same manner as for an IPMS\n        address, using the globally defined\
    \ mappings. It is to\n        support this case that the definition of the global\
    \ domain\n        to gateway mapping is important, as the use of this mapping\n\
    \        will lead to a remote X.400 address, which can be routed by\n       \
    \ X.400 routing procedures.  The information in this mapping\n        shall not\
    \ be used as a basis for deciding to convert a\n        message from RFC 822 to\
    \ X.400.\n"
- title: 4.3.4.1.  Heuristics for mapping RFC 822 to X.400
  contents:
  - "4.3.4.1.  Heuristics for mapping RFC 822 to X.400\n   RFC 822 users will often\
    \ use an LHS encoded address to identify an\n   X.400 recipient.  Because the\
    \ syntax is fairly complex, a number of\n   heuristics may be applied to facilitate\
    \ this form of usage.  A\n   gateway should take care not to be overly \"clever\"\
    \ with heuristics,\n   as this may cause more confusion than a more mechanical\
    \ approach.\n   The heuristics are as follows:\n   1.   Ignore the omission of\
    \ a trailing \"/\" in the std-or syntax.\n   2.   If there is no ADMD component,\
    \ and both country and PRMD are\n        present, the value of /ADMD= / (single\
    \ space) is assumed.\n   3.   Parse the unquoted local part according to the EBNF\
    \ colon-\n        or-address.  This may facilitate users used to this\n      \
    \  delimiter.\n        colon-or-address = 1*(attribute \"=\" value \";\" *(LWSP-char))\n\
    \   The remaining heuristic relates to ordering of address components.\n   The\
    \ ordering of attributes may be inverted or mixed.  For this\n   reason, the following\
    \ heuristics may be applied:\n   4.   If there is an Organisation attribute to\
    \ the left of any Org\n        Unit attribute, assume that the hierarchy is inverted.\n"
- title: 4.3.5.  X.400 -> RFC 822
  contents:
  - "4.3.5.  X.400 -> RFC 822\n   There are two basic cases:\n   1.   RFC 822 addresses\
    \ encoded in X.400.\n   2.   \"Genuine\" X.400 addresses.  This may include symmetrically\n\
    \        encoded RFC 822 addresses.\n   When a MTS Recipient O/R Address is interpreted,\
    \ gatewaying will be\n   selected if there is a single \"RFC-822\" domain defined\
    \ attribute\n   present and the local gateway is identified by the remainder of\
    \ the\n   O/R Address.  In this case, use mapping A.  For other O/R Addresses\n\
    \   which\n   1.   Contain the special attribute.\n        AND\n   2.   Identifies\
    \ the local gateway or any other known gateway with\n        the other attributes.\n\
    \   use mapping A.  In other cases, use mapping B.\n   NOTE:\n        A pragmatic\
    \ approach would  be to assume that any O/R\n        Address with the special\
    \ domain defined attribute identifies\n        an RFC 822 address. This will usually\
    \ work correctly, but is\n        in principle not correct.  Use of this approach\
    \ is\n        conformant to this specification.\n"
- title: Mapping A
  contents:
  - "Mapping A\n   1.   Map the domain defined attribute value to ASCII, as defined\n\
    \        in Chapter 3.\n"
- title: Mapping B
  contents:
  - "Mapping B\n   This is used for X.400 addresses which do not use the explicit\
    \ RFC\n   822 encoding.\n   1.   For all string encoded attributes, remove any\
    \ leading or\n        trailing spaces, and replace adjacent spaces with a single\n\
    \        space.\n        The only attribute which is permitted to have zero length\
    \ is\n        the ADMD.  This should be mapped onto a single space.\n        These\
    \ transformations are for lookup only.   If an\n        EBNF.std-or-address mapping\
    \ is used as in 4), then the\n        orginal values should be used.\n   2.  \
    \ Map numeric country codes to the two letter values.\n   3.   Noting the hierarchy\
    \ specified in 4.3.1 and including\n        omitted attributes, determine the\
    \ maximum set of attributes\n        which have an associated domain specification\
    \ in the\n        globally defined mapping.  If no match is found, allocate\n\
    \        the domain as the domain specification of the local gateway,\n      \
    \  and go to step 5.\n   Note:     It might be appropriate to use a non-local\
    \ domain.\n             This would be selected by a global mapping analagous to\n\
    \             the one described at the end of 4.3.4.  This is not\n          \
    \   done, primarily because use of RFC 822 to connect X.400\n             systems\
    \ is not expected to be significant.\n        In cases where the address refers\
    \ to an X.400 UA, it is\n        important that the generated domain will correctly\
    \ route to\n        a gateway.  In general, this is achieved by carefully co-\n\
    \        ordinating RFC 822 routing with the definition of the global\n      \
    \  mappings, as there is no easy way for the gateway to make\n        this check.\
    \  One rule that shall be used is that domains\n        with only one component\
    \ will not route to a gateway.  If the\n        generated domain does not route\
    \ correctly, the address is\n        treated as if no match is found.\n   4. \
    \  The mapping identified  in 3) gives a domain, and an O/R\n        address prefix.\
    \  Follow the hierarchy: C, ADMD, PRMD, O, OU.\n        For each successive component\
    \ below the O/R address prefix,\n        which conforms to the syntax EBNF.domain-syntax\
    \ (as defined\n        in 4.3.1), allocate the next subdomain.  At least one\n\
    \        attribute of the X.400 address shall not be mapped onto\n        subdomain,\
    \ as 822.local-part cannot be null.  If there are\n        omitted attributes\
    \ in the O/R address prefix, these will\n        have correctly and uniquely mapped\
    \ to a domain component.\n        Where there is an attribute omitted below the\
    \ prefix, all\n        attributes remaining in the O/R address shall be encoded\
    \ on\n        the LHS.  This is to ensure a reversible mapping. For\n        example,\
    \ if the is an addres /S=XX/O=YY/ADMD=A/C=NN/ and a\n        mapping for /ADMD=A/C=NN/\
    \ is used, then /S=XX/O=YY/ is\n        encoded on the LHS.\n   5.   If the address\
    \ is not  mnemonic form (form 1 variant 1),\n        then all of the attributes\
    \ in the address should be encoded\n        on the LHS in EBNF.std-or-address\
    \ syntax, as described\n        below.\n        For addresses of mnemonic form,\
    \ if the remaining components\n        are personal-name components, conforming\
    \ to the restrictions\n        of 4.2.1, then EBNF.encoded-pn is derived to form\n\
    \        822.local-part.  In other cases the remaining components are\n      \
    \  simply encoded as 822.local-part using the\n        EBNF.std-or-address syntax.\
    \  If necessary, the\n        822.quoted-string encoding is used.  The following\
    \ are\n        examples of legal quoting: \"a b\".c@x; \"a b.c\"@x.  Either\n\
    \        form may be generated, but the latter is preferred.\n        If the derived\
    \ 822.local-part can only be encoded by use of\n        822.quoted-string, then\
    \ use of the mapping defined\n        in [Kille89b] may be appropriate.  Use of\
    \ this mapping is\n        discouraged.\n"
- title: 4.4.  Repeated Mappings
  contents:
  - "4.4.  Repeated Mappings\n   There are two types of repeated mapping:\n   1. \
    \  A recursive mapping, where the repeat is within one gateway\n   2    A source\
    \ route, where the repetition occurs across multiple\n        gateways\n"
- title: 4.4.1.  Recursive Mappings
  contents:
  - "4.4.1.  Recursive Mappings\n   It is possible to supply an address which is recurive\
    \ at a single\n   gateway.  For example:\n           C          = \"XX\"\n   \
    \        ADMD       = \"YY\"\n           O          = \"ZZ\"\n           \"RFC-822\"\
    \  = \"Smith(a)ZZ.YY.XX\"\n   This is mapped first to an RFC 822 address, and\
    \ then back to the\n   X.400 address:\n           C          = \"XX\"\n      \
    \     ADMD       = \"YY\"\n           O          = \"ZZ\"\n           Surname\
    \    = \"Smith\"\n   In some situations this type of recursion may be frequent.\
    \  It is\n   important that where this occurs, that no unnecessary protocol\n\
    \   conversion occurs. This will minimise loss of service.\n"
- title: 4.4.2.  Source Routes
  contents:
  - "4.4.2.  Source Routes\n   The mappings defined are symmetrical and reversible\
    \ across a single\n   gateway.  The symmetry is particularly useful in cases of\
    \ (mail\n   exploder type) distribution list expansion.  For example, an X.400\n\
    \   user sends to a list on an RFC 822 system which he belongs to.  The\n   received\
    \ message will have the originator and any 3rd party X.400 O/R\n   Addresses in\
    \ correct format (rather than doubly encoded).  In cases\n   (X.400 or RFC 822)\
    \ where there is common agreement on gateway\n   identification, then this will\
    \ apply to multiple gateways.\n   When a message traverses multiple gateways,\
    \ the mapping will always\n   be reversible, in that a reply can be generated\
    \ which will correctly\n   reverse the path.  In many cases, the mapping will\
    \ also be\n   symmetrical, which will appear clean to the end user.  For example,\n\
    \   if countries \"AB\" and \"XY\" have RFC 822 networks, but are\n   interconnected\
    \ by X.400, the following may happen:  The originator\n   specifies:\n       \
    \    Joe.Soap@Widget.PTT.XY\n   This is routed to a gateway, which generates:\n\
    \           C               = \"XY\"\n           ADMD            = \"PTT\"\n \
    \          PRMD            = \"Griddle MHS Providers\"\n           Organisation\
    \    = \"Widget Corporation\"\n           Surname         = \"Soap\"\n       \
    \    Given Name      = \"Joe\"\n   This is then routed to another gateway where\
    \ the mapping is reversed\n   to give:\n           Joe.Soap@Widget.PTT.XY\n  \
    \ Here, use of the gateway is transparent.\n   Mappings will only be symmetrical\
    \ where mapping tables are defined.\n   In other cases, the reversibility is more\
    \ important, due to the (far\n   too frequent) cases where RFC 822 and X.400 services\
    \ are partitioned.\n   The syntax may be used to source route.  THIS IS STRONGLY\n\
    \   DISCOURAGED.  For example:\n         X.400 -> RFC 822  -> X.400\n        \
    \ C             = \"UK\"\n         ADMD          = \"Gold 400\"\n         PRMD\
    \          = \"UK.AC\"\n         \"RFC-822\"     = \"/PN=Duval/DD.Title=Manager/(a)Inria.ATLAS.FR\"\
    \n   This will be sent to an arbitrary UK Academic Community gateway by\n   X.400.\
    \  Then it will be sent by JNT Mail to another gateway\n   determined by the domain\
    \ Inria.ATLAS.FR (FR.ATLAS.Inria).  This will\n   then derive the X.400 O/R Address:\n\
    \           C             = \"FR\"\n           ADMD          = \"ATLAS\"\n   \
    \        PRMD          = \"Inria\"\n           PN.S          = \"Duval\"\n   \
    \        \"Title\"       = \"Manager\"\n   Similarly:\n   RFC 822 -> X.400 ->\
    \ RFC 822\n"
- title: '"/C=UK/ADMD=BT/PRMD=AC/RFC-822=jj(a)seismo.css.gov/"@monet.berkeley.edu'
  contents:
  - "\"/C=UK/ADMD=BT/PRMD=AC/RFC-822=jj(a)seismo.css.gov/\"@monet.berkeley.edu\n \
    \  This will be sent to monet.berkeley.edu by RFC 822, then to the AC\n   PRMD\
    \ by X.400, and then to jj@seismo.css.gov by RFC 822.\n"
- title: 4.5.  Directory Names
  contents:
  - "4.5.  Directory Names\n   Directory Names are an optional part of O/R Name, along\
    \ with O/R\n   Address.  The RFC 822 addresses are mapped onto the O/R Address\n\
    \   component. As there is no functional mapping for the Directory Name\n   on\
    \ the RFC 822 side, a textual mapping is used.  There is no\n   requirement for\
    \ reversibility in terms of the goals of this\n   specification.  There may be\
    \ some loss of functionality in terms of\n   third party recipients where only\
    \ a directory name is given, but this\n   seems preferable to the significant\
    \ extra complexity of adding a full\n   mapping for Directory Names.\n   Note:There\
    \ is ongoing work on specification of a \"user friendly\"\n        format for\
    \ directory names.  If this is adopted as an\n        internet standard, it will\
    \ be recommended, but not required,\n        for use here.\n"
- title: 4.6.  MTS Mappings
  contents:
  - "4.6.  MTS Mappings\n   The basic mappings at the MTS level are:\n   1) 822-MTS\
    \ originator ->\n                 MTS.PerMessageSubmissionFields.originator-name\n\
    \      MTS.OtherMessageDeliveryFields.originator-name ->\n                 822-MTS\
    \ originator\n   2) 822-MTS recipient ->\n                 MTS.PerRecipientMessageSubmissionFields\n\
    \      MTS.OtherMessageDeliveryFields.this-recipient-name ->\n               \
    \  822-MTS recipient\n   822-MTS recipients and return addresses are encoded as\
    \ EBNF.822-\n   address.\n   The MTS Originator is always encoded as MTS.OriginatorName,\
    \ which\n   maps onto MTS.ORAddressAndOptionalDirectoryName, which in turn maps\n\
    \   onto MTS.ORName.\n"
- title: 4.6.1.  RFC 822 -> X.400
  contents:
  - "4.6.1.  RFC 822 -> X.400\n   From the 822-MTS Originator, use the basic ORAddress\
    \ mapping, to\n   generate MTS.PerMessageSubmissionFields.originator-name (MTS.ORName),\n\
    \   without a DirectoryName.\n   For recipients, the following settings are made\
    \ for each component of\n   MTS.PerRecipientMessageSubmissionFields.\n   recipient-name\n\
    \        This is derived from the 822-MTS recipient by the basic\n        ORAddress\
    \ mapping.\n   originator-report-request\n        This is be set according to\
    \ content return policy, as\n        discussed in Section 5.2.\n   explicit-conversion\n\
    \        This optional component is omitted, as this service is not\n        needed\n\
    \   extensions\n        The default value (no extensions) is used\n"
- title: 4.6.2.  X.400 -> RFC 822
  contents:
  - "4.6.2.  X.400 -> RFC 822\n   The basic functionality is to generate the 822-MTS\
    \ originator and\n   recipients.  There is information present on the X.400 side,\
    \ which\n   cannot be mapped into analogous 822-MTS services.  For this reason,\n\
    \   new RFC 822 fields are added for the MTS Originator and Recipients.\n   The\
    \ information discarded at the 822-MTS level will be present in\n   these fields.\
    \ In some cases a (positive) delivery report will be\n   generated.\n"
- title: 4.6.2.1.  822-MTS Mappings
  contents:
  - "4.6.2.1.  822-MTS Mappings\n   Use the basic ORAddress mapping, to generate the\
    \ 822-MTS originator\n   (return address) from MTS.OtherMessageDeliveryFields.originator-name\n\
    \   (MTS.ORName).  If MTS.ORName.directory-name is present, it is\n   discarded.\
    \  (Note that it will be presented to the user, as described\n   in 4.6.2.2).\n\
    \   The 822-MTS recipient is conceptually generated from\n   MTS.OtherMessageDeliveryFields.this-recipient-name.\
    \  This is done by\n   taking MTS.OtherMessageDeliveryFields.this-recipient-name,\
    \ and\n   generating an 822-MTS recipient according to the basic ORAddress\n \
    \  mapping, discarding MTS.ORName.directory-name if present.  However,\n   if\
    \ this model was followed exactly, there would be no possibility to\n   have multiple\
    \ 822-MTS recipients on a single message.  This is\n   unacceptable, and so layering\
    \ is violated.  The mapping needs to use\n   the MTA level information, and map\
    \ each value of\n   MTA.PerRecipientMessageTransferFields.recipient-name, where\
    \ the\n   responsibility bit is set, onto an 822-MTS recipient.\n"
- title: 4.6.2.2.  Generation of RFC 822 Headers
  contents:
  - "4.6.2.2.  Generation of RFC 822 Headers\n   Not all per-recipient information\
    \ can be passed at the 822-MTS level.\n   For this reason, two new RFC 822 headers\
    \ are created, in order to\n   carry this information to the RFC 822 recipient.\
    \  These fields are\n   \"X400-Originator:\"  and \"X400-Recipients:\".\n   The\
    \ \"X400-Originator:\" field is set to the same value as the 822-MTS\n   originator.\
    \  In addition, if\n   MTS.OtherMessageDeliveryFields.originator-name (MTS.ORName)\
    \ contains\n   MTS.ORName.directory-name then this Directory Name shall be\n \
    \  represented in an 822.comment.\n   Recipient names, taken from each value of\n\
    \   MTS.OtherMessageDeliveryFields.this-recipient-name and\n   MTS.OtherMessageDeliveryFields.other-recipient-names\
    \ are made\n   available to the RFC 822 user by use of the \"X400-Recipients:\"\
    \ field.\n   By taking the recipients at the MTS level, disclosure of recipients\n\
    \   will be dealt with correctly.  However, this conflicts with a desire\n   to\
    \ optimise mail transfer.  There is no problem when disclosure of\n   recipients\
    \ is allowed. Similarly, there is no problem if there is\n   only one RFC 822\
    \ recipient, as the \"X400-Recipients field is only\n   given one address.\n \
    \  There is a problem if there are multiple RFC 822 recipients, and\n   disclosure\
    \ of recipients is prohibited.  Two options are allowed:\n   1.   Generate one\
    \ copy of the message for each RFC 822 recipient,\n        with the \"X400-Recipients\
    \ field correctly set to the\n        recipient of that copy.  This is functionally\
    \ correct, but\n        is likely to be more expensive.\n   2.   Discard the per-recipient\
    \ information, and insert a field:\n                X400-Recipients: non-disclosure:;\n\
    \        This is the recommended option.\n   A third option of ignoring the disclosure\
    \ flag is not allowed.  If\n   any MTS.ORName.directory-name is present, it shall\
    \ be represented in\n   an 822.comment.\n   If MTS.OtherMessageDeliveryFields.orignally-intended-recipient-name\n\
    \   is present, then there has been redirection, or there has been\n   distribution\
    \ list expansion.  Distribution list expansion is a per-\n   message option, and\
    \ the information associated with this is\n   represented by the \"DL-Expansion-History:\"\
    \ field descrined in Section\n   5.3.6.  Other information is represented in an\
    \ 822.comment associated\n   associated with MTS.OtherMessageDeliveryFields.this-recipient-name,\n\
    \   The message may be delivered to different RFC 822 recipients, and so\n   several\
    \ addresses in the \"X400-Recipients:\" field may have such\n   comments.  The\
    \ non-commented recipient is the RFC 822 recipient. The\n   EBNF of the comment\
    \ is:\n           redirect-comment  =\n                    [ \"Originally To:\"\
    \ ] mailbox \"Redirected\"\n                    [ \"Again\" ] \"on\" date-time\n\
    \                    \"To:\"  redirection-reason\n           redirection-reason\
    \ =\n                    \"Recipient Assigned Alternate Recipient\"\n        \
    \            / \"Originator Requested Alternate Recipient\"\n                \
    \    / \"Recipient MD Assigned Alternate Recipient\"\n   It is derived from\n\
    \   MTA.PerRecipientMessageTransferFields.extension.redirection-history.\n   An\
    \ example of this is:\n   X400-Recipients: postmaster@widget.com (Originally To:\n\
    \         sales-manager@sales.widget.com Redirected\n         on Thu, 30 May 91\
    \ 14:39:40 +0100 To: Originator Assigned\n         Alternate Recipient postmaster@sales.widget.com\
    \ Redirected\n         Again on Thu, 30 May 91 14:41:20 +0100 To: Recipient MD\n\
    \         Assigned Alternate Recipient)\n   In addition, the following per-recipient\
    \ services from\n   MTS.OtherMessageDeliveryFields.extensions are represented\
    \ in comments\n   if they are used.  None of these services can be provided on\
    \ RFC 822\n   networks, and so in general these will be informative strings\n\
    \   associated with other MTS recipients. In some cases, string values\n   are\
    \ defined.  For the remainder, the string value shall be chosen by\n   the implementor.\
    \   If the parameter has a default value, then no\n   comment shall be inserted\
    \ when the parameter has that default value.\n   requested-delivery-method\n \
    \  physical-forwarding-prohibited\n        \"(Physical Forwarding Prohibited)\"\
    .\n   physical-forwarding-address-request\n        \"(Physical Forwarding Address\
    \ Requested)\".\n   physical-delivery-modes\n   registered-mail-type\n   recipient-number-for-advice\n\
    \   physical-rendition-attributes\n   physical-delivery-report-request\n     \
    \   \"(Physical Delivery Report Requested)\".\n   proof-of-delivery-request\n\
    \        \"(Proof of Delivery Requested)\".\n"
- title: 4.6.2.3.  Delivery Report Generation
  contents:
  - "4.6.2.3.  Delivery Report Generation\n   If MTA.PerRecipientMessageTransferFields.per-recipient-indicators\n\
    \   requires a positive delivery notification, this shall be generated by\n  \
    \ the gateway.  Supplementary Information shall be set to indicate that\n   the\
    \ report is gateway generated.  This information shall include the\n   name of\
    \ the gateway generating the report.\n"
- title: 4.6.3.  Message IDs (MTS)
  contents:
  - "4.6.3.  Message IDs (MTS)\n   A mapping from 822.msg-id to MTS.MTSIdentifier\
    \ is defined.  The\n   reverse mapping is not needed, as MTS.MTSIdentifier is\
    \ always mapped\n   onto new RFC 822 fields.  The value of MTS.MTSIdentifier.local-part\n\
    \   will facilitate correlation of gateway errors.\n   To map from 822.msg-id,\
    \ apply the standard mapping to 822.msg-id, in\n   order to generate an MTS.ORAddress.\
    \  The Country, ADMD, and PRMD\n   components of this are used to generate MTS.MTSIdentifier.global-\n\
    \   domain-identifier.  MTS.MTSIdentifier.local-identifier is set to the\n   822.msg-id,\
    \ including the braces \"<\" and \">\".   If this string is\n   longer than MTS.ub-local-id-length\
    \ (32), then it is truncated to this\n   length.\n   The reverse mapping is not\
    \ used in this specification.  It would be\n   applicable where MTS.MTSIdentifier.local-identifier\
    \ is of syntax\n   822.msg-id, and it algorithmically identifies MTS.MTSIdentifier.\n"
- title: 4.7.  IPMS Mappings
  contents:
  - "4.7.  IPMS Mappings\n   All RFC 822 addresses are assumed to use the 822.mailbox\
    \ syntax.\n   This includes all 822.comments associated with the lexical tokens\
    \ of\n   the 822.mailbox.  In the IPMS O/R Names are encoded as MTS.ORName.\n\
    \   This is used within the  IPMS.ORDescriptor, IPMS.RecipientSpecifier,\n   and\
    \ IPMS.IPMIdentifier.  An asymmetrical mapping is defined between\n   these components.\n"
- title: 4.7.1.  RFC 822 -> X.400
  contents:
  - "4.7.1.  RFC 822 -> X.400\n   To derive IPMS.ORDescriptor from an RFC 822 address.\n\
    \   1.   Take the address, and extract an EBNF.822-address.  This can\n      \
    \  be derived trivially from either the 822.addr-spec or\n        822.route-addr\
    \ syntax.  This is mapped to MTS.ORName as\n        described above, and used\
    \ as IMPS.ORDescriptor.formal-name.\n   2.   A string shall be built consisting\
    \ of (if present):\n   -         The 822.phrase component if the 822.address is\
    \ an\n             822.phrase 822.route-addr construct.\n   -         Any 822.comments,\
    \ in order, retaining the parentheses.\n        This string is then encoded into\
    \ T.61 use a human oriented\n        mapping (as described in Chapter 3).  If\
    \ the string is not\n        null, it is assigned to IPMS.ORDescriptor.free-form-name.\n\
    \   3.   IPMS.ORDescriptor.telephone-number is omitted.\n   If IPMS.ORDescriptor\
    \ is being used in IPMS.RecipientSpecifier,\n   IPMS.RecipientSpecifier.reply-request\
    \ and\n   IPMS.RecipientSpecifier.notification-requests are set to default\n \
    \  values (none and false).\n   If the 822.group construct is present, any included\
    \ 822.mailbox is\n   encoded as above to generate a separate IPMS.ORDescriptor.\
    \  The\n   822.group is  mapped to T.61, and a IPMS.ORDescriptor with only an\n\
    \   free-form-name component built from it.\n"
- title: 4.7.2.  X.400 -> RFC 822
  contents:
  - "4.7.2.  X.400 -> RFC 822\n   Mapping from IPMS.ORDescriptor to RFC 822 address.\
    \  In the basic\n   case, where IPMS.ORDescriptor.formal-name is present, proceed\
    \ as\n   follows.\n   1.   Encode IPMS.ORDescriptor.formal-name (MTS.ORName) as\n\
    \        EBNF.822-address.\n   2a.  If IPMS.ORDescriptor.free-form-name is present,\
    \ convert it\n        to ASCII (Chapter 3), and use this as the 822.phrase\n \
    \       component of 822.mailbox using the 822.phrase 822.route-addr\n       \
    \ construct.\n   2b.  If IPMS.ORDescriptor.free-form-name is absent.  If\n   \
    \     EBNF.822-address is parsed as 822.addr-spec use this as the\n        encoding\
    \ of 822.mailbox.  If EBNF.822-address is parsed as\n        822.route 822.addr-spec,\
    \ then a 822.phrase taken from\n        822.local-part is added.\n   3.   If IPMS.ORDescriptor.telephone-number\
    \ is present, this is\n        placed in an 822.comment, with the string \"Tel\
    \ \".  The\n        normal international form of number is used.  For example:\n\
    \                (Tel +44-1-387-7050)\n   4.   If IPMS.ORDescriptor.formal-name.directory-name\
    \ is present,\n        then a text representation is placed in a trailing\n  \
    \      822.comment.\n   5.   If IPMS.RecipientSpecifier.report-request has any\
    \ non-\n        default values, then an 822.comment \"(Receipt Notification\n\
    \        Requested)\", and/or \"(Non Receipt Notification Requested)\",\n    \
    \    and/or \"(IPM Return Requested)\" is appended to the address.\n        If\
    \ both receipt and non-receipt notfications are requested,\n        the comment\
    \ relating to the latter may be omitted, to make\n        the RFC 822 address\
    \ cleaner.  The effort of correlating P1\n        and P2 information is too great\
    \ to justify the gateway\n        sending Receipt Notifications.\n   6.   If IPMS.RecipientSpecifier.reply-request\
    \ is True, an\n        822.comment \"(Reply requested)\"  is appended to the address.\n\
    \   If IPMS.ORDescriptor.formal-name is absent, IPMS.ORDescriptor.free-\n   form-name\
    \ is converted to ASCII, and used as 822.phrase within the\n   RFC 822 822.group\
    \ syntax.  For example:\n           Free Form Name \":\" \";\"\n   Steps 3-6 are\
    \ then followed.\n"
- title: 4.7.3.  IP Message IDs
  contents:
  - "4.7.3.  IP Message IDs\n   There is a need to map both ways between 822.msg-id\
    \ and\n   IPMS.IPMIdentifier.  This allows for X.400 Receipt Notifications,\n\
    \   Replies, and Cross References to reference an RFC 822 Message ID,\n   which\
    \ is preferable to a gateway generated ID.  A reversible and\n   symmetrical mapping\
    \ is defined.  This allows for good things to\n   happen when messages pass multiple\
    \ times across the X.400/RFC 822\n   boundary.\n   An important issue with messages\
    \ identifiers is mapping to the exact\n   form, as many systems use these ids\
    \ as uninterpreted keys.  The use\n   of table driven mappings is not always symmetrical,\
    \ particularly in\n   the light of alternative domain names, and alternative management\n\
    \   domains.  For this reason, a purely algorithmic mapping is used.  A\n   mapping\
    \ which is simpler than that for addresses can be used for two\n   reasons:\n\
    \   -    There is no major requirement to make message IDs \"natural\"\n   - \
    \   There is no issue about being able to reply to message IDs.\n        (For\
    \ addresses, creating a return path which works is more\n        important than\
    \ being symmetrical).\n   The mapping works by defining a way in which message\
    \ IDs generated on\n   one side of the gateway can be represented on the other\
    \ side in a\n   systematic manner.  The mapping is defined so that the possibility\
    \ of\n   clashes is is low enough to be treated as impossible.\n"
- title: 4.7.3.1.  822.msg-id represented in X.400
  contents:
  - "4.7.3.1.  822.msg-id represented in X.400\n   IPMS.IPMIdentifier.user is omitted.\
    \  The IPMS.IPMIdentifier.user-\n   relative-identifier is set to a printable\
    \ string encoding of the\n   822.msg-id with the angle braces (\"<\" and \">\"\
    ) removed.  The upper\n   bound on this component is 64.  The options for handling\
    \ this are\n   discussed in Section 5.1.3.\n"
- title: 4.7.3.2.  IPMS.IPMIdentifier represented in RFC 822
  contents:
  - "4.7.3.2.  IPMS.IPMIdentifier represented in RFC 822\n   The 822.domain of 822.msg-id\
    \ is set to the value \"MHS\". The\n   822.local-part of 822.msg-id is built as\n\
    \           [ printablestring ] \"*\"  [ std-or-address ]\n   with EBNF.printablestring\
    \ being the IPMS.IPMIdentifier.user-\n   relative-identifier, and std-or-address\
    \ being an encoding of the\n   IPMS.IPMIdentifier.user.  If necessary, the 822.quoted-string\n\
    \   encoding is used.  For example:\n   <\"147*/S=Dietrich/O=Siemens/ADMD=DBP/C=DE/\"\
    @MHS>\n"
- title: 4.7.3.3.  822.msg-id -> IPMS.IPMIdentifier
  contents:
  - "4.7.3.3.  822.msg-id -> IPMS.IPMIdentifier\n   If the 822.local-part can be parsed\
    \ as:\n           [ printablestring ] \"*\"  [ std-or-address ]\n   and the 822.domain\
    \ is \"MHS\", then this ID was X.400 generated.  If\n   EBNF.printablestring is\
    \ present, the value is assigned to\n   IPMS.IPMIdentifier.user-relative-identifier.\
    \  If EBNF.std-or-address\n   is present, the O/R Address components derived from\
    \ it are used to\n   set IPMS.IPMIdentifier.user.\n   Otherwise, this is an RFC\
    \ 822 generated ID.  In this case, set\n   IPMS.IPMIdentifier.user-relative-identifier\
    \ to a printable string\n   encoding of the 822.msg-id without the angle braces.\n"
- title: 4.7.3.4.  IPMS.IPMIdentifier -> 822.msg-id
  contents:
  - "4.7.3.4.  IPMS.IPMIdentifier -> 822.msg-id\n   If IPMS.IPMIdentifier.user is\
    \ absent, and IPMS.IPMIdentifier.user-\n   relative-identifier mapped to ASCII\
    \ and angle braces added parses as\n   822.msg-id, then this is an RFC 822 generated\
    \ ID.\n   Otherwise, the ID is X.400 generated.  Use the\n   IPMS.IPMIdentifier.user\
    \ to generate an EBNF.std-or-address form\n   string.  Build the 822.local-part\
    \ of the 822.msg-id with the syntax:\n           [ printablestring ] \"*\"  [\
    \ std-or-address ]\n   The printablestring is taken from IPMS.IPMIdentifier.user-relative-\n\
    \   identifier.  Use 822.quoted-string if necessary.  The 822.msg-id is\n   generated\
    \ with this 822.local-part, and \"MHS\" as the 822.domain.\n"
- title: 4.7.3.5.  Phrase form
  contents:
  - "4.7.3.5.  Phrase form\n   In \"InReply-To:\" and \"References:\", the encoding\
    \ 822.phrase may be\n   used as an alternative to 822.msg-id.  To map from 822.phrase\
    \ to\n   IPMS.IPMIdentifier, assign IPMS.IPMIdentifier.user-relative-\n   identifier\
    \ to the phrase.  When mapping from IPMS.IPMIdentifier for\n   \"In-Reply-To:\"\
    \ and \"References:\", if IPMS.IPMIdentifier.user is\n   absent and IPMS.IPMIdentifier.user-relative-identifier\
    \ does not parse\n   as 822.msg-id, generate an 822.phrase rather than adding\
    \ the domain\n   MHS.\n"
- title: 4.7.3.6.  RFC 987 backwards compatibility
  contents:
  - "4.7.3.6.  RFC 987 backwards compatibility\n   The mapping defined here is different\
    \ to that used in RFC 987, as the\n   RFC 987 mapping lead to changed message\
    \ IDs in many cases.  Fixing\n   the problems is preferable to retaining backwards\
    \ compatibility.  An\n   implementation of this standard is encouraged to recognise\
    \ message\n   IDs generated by RFC 987.  This is not required.\n   RFC 987 generated\
    \ encodings may be recognised as follows.  When\n   mapping from X.400 to RFC\
    \ 822, if the IPMS.IPMIdentifier.user-\n   relative-identifier is \"RFC-822\"\
    \ the id is RFC 987 generated. When\n   mapping from RFC 822 to X.400, if the\
    \ 822.domain is not \"MHS\", and\n   the 822.local-part can be parsed as\n   \
    \        [ printablestring ] \"*\"  [ std-or-address ]\n   then it is RFC 987\
    \ generated.  In each of these cases, it is\n   recommended to follow the RFC\
    \ 987 rules.\n"
- title: Chapter 5 - Detailed Mappings
  contents:
  - "Chapter 5 - Detailed Mappings\n   This chapter specifies  detailed mappings for\
    \ the functions outlined\n   in Chapters 1 and 2.  It makes extensive use of the\
    \ notations and\n   mappings defined in Chapters 3 and 4.\n"
- title: 5.1.  RFC 822 -> X.400
  contents:
  - '5.1.  RFC 822 -> X.400

    '
- title: 5.1.1.  Basic Approach
  contents:
  - "5.1.1.  Basic Approach\n   A single IP Message is generated from an RFC 822 message\
    \ The RFC 822\n   headers are used to generate the IPMS.Heading.  The IP Message\
    \ will\n   have one IA5 IPMS.BodyPart containing the RFC 822 message body.\n \
    \  Some RFC 822 fields cannot be mapped onto a standard IPM Heading\n   field,\
    \ and so an extended field is defined in Section 5.1.2.  This is\n   then used\
    \ for fields which cannot be mapped onto existing services.\n   The message is\
    \ submitted to the MTS, and the services required can be\n   defined by specifying\
    \ MTS.MessageSubmissionEnvelope.  A few\n   parameters of the MTA Abstract service\
    \ are also specified, which are\n   not in principle available to the MTS User.\
    \  Use of these services\n   allows RFC 822 MTA level parameters to be carried\
    \ in the analogous\n   X.400 service elements.  The advantages of this mapping\
    \ far outweigh\n   the layering violation.\n"
- title: 5.1.2.  X.400 Extension Field
  contents:
  - "5.1.2.  X.400 Extension Field\n   An IPMS Extension is defined:\n        rfc-822-field\
    \ HEADING-EXTENSION\n                VALUE RFC822FieldList\n                ::=\
    \ id-rfc-822-field-list\n        RFC822FieldList ::= SEQUENCE OF RFC822Field\n\
    \        RFC822Field ::= IA5String\n   The Object Identifier id-rfc-822-field-list\
    \ is defined in Appendix D.\n   To encode any RFC 822 Header using this extension,\
    \ an RFC822Field\n   element is built using the 822.field omitting the trailing\
    \ CRLF\n   (e.g., \"Fruit-Of-The-Day: Kiwi Fruit\"). Structured fields shall be\n\
    \   unfolded.  There shall be no space before the \":\".  The reverse\n   mapping\
    \ builds the RFC 822 field in a straightforward manner.  This\n   RFC822Field\
    \ is appended to the RFC822FieldList, which is added to the\n   IPM Heading as\
    \ an extension field.\n"
- title: 5.1.3.  Generating the IPM
  contents:
  - "5.1.3.  Generating the IPM\n   The IPM (IPMS Service Request) is generated according\
    \ to the rules of\n   this section. The IPMS.IPM.body usually consists of one\
    \ IPMS.BodyPart\n   of type IPMS.IA5TextBodyPart with\n   IPMS.IA5TextBodyPart.parameters.repertoire\
    \ set to the default (ia5)\n   which contains the body of the RFC 822 message.\
    \  The exception is\n   where there is a \"Comments:\" field in the RFC 822 header.\n\
    \   If no specific 1988 features are used, the IPM generated is encoded\n   as\
    \ content type 2.  Otherwise, it is encoded as content type 22.  The\n   latter\
    \ will always be the case if extension heading fields are\n   generated.\n   When\
    \ generating the IPM, the issue of upper bounds must be\n   considered.  At the\
    \ MTS and MTA level, this specification is strict\n   about enforcing upper bounds.\
    \ Three options are available at the IPM\n   level.  Use of any of these options\
    \ conforms to this standard.\n   1.   Ignore upper bounds, and generate messages\
    \ in the natural\n        manner.  This assumes that if any truncation is done,\
    \ it\n        will happen at the recipient UA.  This will maximise\n        transfer\
    \ of information, but is likely break some recipient\n        UAs.\n   2.   Reject\
    \ any inbound message which would cause a message\n        violating constraints\
    \ to be generated.  This will be robust,\n        but may prevent useful communication.\n\
    \   3.   Truncate fields to the upper bounds specified in X.400.\n        This\
    \ will prevent problems with UAs which enforce upper\n        bounds, but will\
    \ sometimes discard useful information.\n        If the Free Form name is truncated,\
    \ it may lead to breaking\n        RFC 822 comments, which will cause an awkward\
    \ reverse\n        mapping.\n   These options have different advantages and disadvantages,\
    \ and the\n   choice will depend on the exact application of the gateway.\n  \
    \ The rest of this section concerns IPMS.IPM.heading (IPMS.Heading).\n   The only\
    \ mandatory component of IPMS.Heading is the\n   IPMS.Heading.this-IPM (IPMS.IPMIdentifier).\
    \  A default is generated\n   by the gateway.  With the exception of \"Received:\"\
    , the values of\n   multiple fields are merged (e.g., If there are two \"To:\"\
    \ fields, then\n   the mailboxes of both are merged to generate a single list\
    \ which is\n   used in the IPMS.Heading.primary-recipients.  Information shall\
    \ be\n   generated from the standard RFC 822 Headers as follows:\n   Date:\n \
    \       Ignore (Handled at MTS level)\n   Received:\n        Ignore (Handled at\
    \ MTA level)\n   Message-Id:\n        Mapped to IPMS.Heading.this-IPM.  For these,\
    \ and all other\n        fields containing 822.msg-id the mappings of Chapter\
    \ 4 are\n        used for each 822.msg-id.\n   From:\n        If Sender: is present,\
    \ this is mapped to\n        IPMS.Heading.authorizing-users.  If not, it is mapped\
    \ to\n        IPMS.Heading.originator.  For this, and other components\n     \
    \   containing addresses, the mappings of Chapter 4 are used for\n        each\
    \ address.\n   Sender:\n        Mapped to IPMS.Heading.originator.\n   Reply-To:\n\
    \        Mapped to IPMS.Heading.reply-recipients.\n   To:  Mapped to IPMS.Heading.primary-recipients\n\
    \   Cc:  Mapped to IPMS.Heading.copy-recipients.\n   Bcc: Mapped to IPMS.Heading.blind-copy-recipients\
    \ if there is at\n        least one BCC:  recipient.  If there are no recipients\
    \ in\n        this field, it should be mapped to a zero length sequence.\n   In-Reply-To:\n\
    \        If there is one value, it is mapped to\n        IPMS.Heading.replied-to-IPM,\
    \ using the 822.phrase or\n        822.msg-id mapping as appropriate.  If there\
    \ are several\n        values, they are mapped to IPMS.Heading.related-IPMs, along\n\
    \        with any values from a \"References:\" field.\n   References:\n     \
    \   Mapped to IPMS.Heading.related-IPMs.\n   Keywords:\n        Mapped onto a\
    \ heading extension.\n   Subject:\n        Mapped to IPMS.Heading.subject.  The\
    \ field-body uses the\n        human oriented mapping referenced in Chapter 3\
    \ from ASCII to\n        T.61.\n   Comments:\n        Generate an IPMS.BodyPart\
    \ of type IPMS.IA5TextBodyPart with\n        IPMS.IA5TextBodyPart.parameters.repertoire\
    \ set to the\n        default (ia5), containing the value of the fields, preceded\n\
    \        by the string \"Comments: \".  This body part shall precede\n       \
    \ the other one.\n   Encrypted:\n        Mapped onto a heading extension.\n  \
    \ Resent-*\n        Mapped onto a heading extension.\n        Note that it would\
    \ be possible to use a ForwardedIPMessage\n        for these fields, but the semantics\
    \ are (arguably) slightly\n        different, and it is probably not worth the\
    \ effort.\n   Other Fields\n        In particular X-* fields, and \"illegal\"\
    \ fields in common\n        usage (e.g., \"Fruit-of-the-day:\") are mapped onto\
    \ a heading\n        extension, unless covered by another section or appendix\
    \ of\n        this specification.  The same treatment is applied to RFC\n    \
    \    822 fields where the content of the field does not conform\n        to RFC\
    \ 822 (e.g., a Date: field with unparseable syntax).\n"
- title: 5.1.4.  Mappings to the MTS Abstract Service
  contents:
  - "5.1.4.  Mappings to the MTS Abstract Service\n   The MTS.MessageSubmissionEnvelope\
    \ comprises\n   MTS.PerMessageSubmissionFields, and\n   MTS.PerRecipientMessageSubmissionFields.\
    \  The mandatory parameters\n   are defaulted as follows.\n   MTS.PerMessageSubmissionFields.originator-name\n\
    \        This is always generated from 822-MTS, as defined in\n        Chapter\
    \ 4.\n   MTS.PerMessageSubmissionFields.content-type\n        Set to the value\
    \ implied by the encoding of the IPM (2 or\n        22).\n   MTS.PerRecipientMessageSubmissionFields.recipient-name\n\
    \        These will always be supplied from 822-MTS, as defined in\n        Chapter\
    \ 4.\n   Optional components are omitted, and default components defaulted.\n\
    \   This means that disclosure of recipients is prohibited and conversion\n  \
    \ is allowed.  There are two exceptions to the defaulting. For\n   MTS.PerMessageSubmissionFields.per-message-indicators,\
    \ the following\n   settings are made:\n   -    Alternate recipient is allowed,\
    \ as it seems desirable to\n        maximise the opportunity for (reliable) delivery.\n\
    \   -    Content return request is set according to the issues\n        discussed\
    \ in Section 5.2.\n   MTS.PerMessageSubmissionFields.original-encoded-information-types\
    \ is\n   a set of one element BuiltInEncodedInformationTypes.ia5-text.\n   The\
    \ MTS.PerMessageSubmissionFields.content-correlator is encoded as\n   IA5String,\
    \ and contains the Subject:, Message-ID:, Date:,  and\n   To: fields (if present).\
    \  This  includes the strings \"Subject:\",\n   \"Date:\", \"To:\", \"Message-ID:\"\
    , and appropriate folding.  This shall\n   be truncated to MTS.ub-content-correlator-length\
    \ (512) characters.\n   In addition, if there is a \"Subject:\" field, the\n \
    \  MTS.PerMessageSubmissionFields.content-identifier, is set to a\n   printable\
    \ string representation of the contents of it.   If the\n   length of this string\
    \ is greater than MTS.ub-content-id-length (16),\n   it should be truncated to\
    \ 13 characters and the string \"...\"\n   appended. Both are used, due to the\
    \ much larger upper bound of the\n   content correlator, and that the content\
    \ id is available in\n   X.400(1984).\n"
- title: 5.1.5.  Mappings to the MTA Abstract Service
  contents:
  - "5.1.5.  Mappings to the MTA Abstract Service\n   There is a need to map directly\
    \ onto some aspects of the MTA Abstract\n   service, for the following reasons:\n\
    \   -    So the the MTS Message Identifier can be generated from the\n       \
    \ RFC 822 Message-ID:.\n   -    So that the submission date can be generated from\
    \ the\n        822.Date.\n   -    To prevent loss of trace information\n   - \
    \   To prevent RFC 822/X.400 looping caused by distribution\n        lists or\
    \ redirects\n   The following mappings are defined.\n   Message-Id:\n        If\
    \ this is present, the\n        MTA.PerMessageTransferFields.message-identifier\
    \ is generated\n        from it, using the mappings described in Chapter 4.\n\
    \   Date:\n        This is used to set the first component of\n        MTA.PerMessageTransferFields.trace-information\n\
    \        (MTA.TraceInformationElement).  The 822-MTS originator is\n        mapped\
    \ into an MTS.ORAddress, and used to derive\n        MTA.TraceInformationElement.global-domain-identifier.\
    \  The\n        optional components of\n        MTA.TraceInformationElement.domain-supplied-information\
    \ are\n        omitted, and the mandatory components are set as follows:\n   \
    \       MTA.DomainSuppliedInformation.arrival-time\n             This is set to\
    \ the date derived from Date:\n          MTA.DomainSuppliedInformation.routing-action\n\
    \             Set to relayed.\n        The first element of\n        MTA.PerMessageTransferFields.internal-trace-information\
    \ is\n        generated in an analogous manner, although this can be\n       \
    \ dropped later in certain circumstances (see the procedures\n        for \"Received:\"\
    ).  The\n        MTA.InternalTraceInformationElement.mta-name is derived from\n\
    \        the 822.domain in the 822 MTS Originator address.\n   Received:\n   \
    \     All RFC 822 trace is used to derive\n        MTA.PerMessageTransferFields.trace-information\
    \ and\n        MTA.PerMessageTransferFields.internal-trace-information.\n    \
    \    Processing of Received: lines  follows processing of Date:,\n        and\
    \ is be done from the the bottom to the top of the RFC 822\n        header (i.e.,\
    \ in chronological order).  When other trace\n        elements are processed (X400-Received:\
    \ in all cases and Via:\n        if Appendix B is supported), the relative ordering\
    \ shall be\n        retained correctly.  The initial element of\n        MTA.PerMessageTransferFields.trace-information\
    \ will be\n        generated already (from Date:), unless the message has\n  \
    \      previously been in X.400, when it will be derived from the\n        X.400\
    \ trace information.\n        Consider the Received: field in question.  If the\
    \ \"by\"  part\n        of the received is present, use it to derive an\n    \
    \    MTS.GlobalDomainIdentifier.  If this is different from the\n        one in\
    \ the last element of\n        MTA.PerMessageTransferFields.trace-information\n\
    \        (MTA.TraceInformationElement.global-domain-identifier)\n        create\
    \ a new MTA.TraceInformationElement, and optionally\n        remove\n        MTA.PerMessageTransferFields.internal-trace-information.\n\
    \        This removal shall be done in cases where the message is\n        being\
    \ transferred to another MD where there is no bilateral\n        agreement to\
    \ preserve internal trace beyond the local MD.\n        The trace creation is\
    \ as for internal trace described below,\n        except that no MTA field is\
    \ needed.\n        Then add a new element (MTA.InternalTraceInformationElement)\n\
    \        to MTA.PerMessageTransferFields.internal-trace-information,\n       \
    \ creating this if needed.  This shall be done, even if\n        inter-MD trace\
    \ is created.  The\n        MTA.InternalTraceInformationElement.global-domain-identifier\n\
    \        is set to the value derived.  The\n        MTA.InternalTraceInformationElement.mta-supplied-information\n\
    \        (MTA.MTASuppliedInformation) is set as follows:\n          MTA.MTASuppliedInformation.arrival-time\n\
    \             Derived from the date of the Received: line\n          MTA.MTASuppliedInformation.routing-action\n\
    \             Set to relayed\n        The MTA.InternalTraceInformationElement.mta-name\
    \ is taken\n        from the \"by\" component of the \"Received:\" field, truncated\n\
    \        to MTS.ub-mta-name-length (32).  For example:\n           Received: from\
    \ computer-science.nottingham.ac.uk by\n              vs6.Cs.Ucl.AC.UK via Janet\
    \ with NIFTP  id aa03794;\n              28 Mar 89 16:38 GMT\n   Generates the\
    \ string\n           vs6.Cs.Ucl.AC.UK\n   Note that before transferring the message\
    \ to some ADMDs, additional\n   trace stripping may be required, as the implied\
    \ path through multiple\n   MDs would violate ADMD policy.   This will depend\
    \ on bilateral\n   agreement with the ADMD.\n"
- title: 5.1.6.  Mapping New Fields
  contents:
  - "5.1.6.  Mapping New Fields\n   This specification defines a number of new fields\
    \ for Reports,\n   Notifications and IP Messages in Section 5.3.  As this specification\n\
    \   only aims to preserve existing services, a gateway conforming to this\n  \
    \ specification does not need to map all of these fields to X.400.\n   Two  extended\
    \ fields must be mapped, in order to prevent looping.\n   \"DL-Expansion-History:\"\
    \ is mapped to\n   MTA.PerMessageTransferFields.extensions.dl-expansion-history\
    \ X400-\n   Received: must be mapped to MTA.PerMessageTransferFields.trace-\n\
    \   information and MTA.PerMessageTransferFields.internal-trace-\n   information.\
    \  In cases where X400-Received: is present, the usual\n   mapping of Date: to\
    \ generate the first element of trace should not be\n   done.   This is because\
    \ the message has come from X.400, and so the\n   first element of trace can be\
    \ taken from the first X400-Received:.\n   Some field that shall not be mapped,\
    \ and should be discarded.  The\n   following cannot be mapped back:\n   -   \
    \ Discarded-X400-MTS-Extensions:\n   -    Message-Type:\n   -    Discarded-X400-IPMS-Extensions:\n\
    \   If Message-Type: is set to \"Multiple Part\", then the messge is\n   encoded\
    \ according to RFC 934, and this may be mapped on to the\n   corresponding X.400\
    \ structures.\n   The following may cause problems, due to other information not\
    \ being\n   mapped back (e.g., extension numbers), or due to changes made on the\n\
    \   RFC 822 side due to list expansion:\n   -    X400-Content-Type:\n   -    X400-Originator:\n\
    \   -    X400-Recipients:\n   -    X400-MTS-Identifier:\n   Other fields may be\
    \ either discarded or mapped to X.400.  It is\n   usually desirable and beneficial\
    \ to do map, particularly to\n   facilitate support of a message traversing multiple\
    \ gateways.  These\n   mappings may be onto MTA, MTS, or IPMS services.  The level\
    \ of\n   support for this reverse mapping should be indicated in the gateway\n\
    \   conformace statement.\n"
- title: 5.2.  Return of Contents
  contents:
  - "5.2.  Return of Contents\n   It is not clear how widely supported the X.400 return\
    \ of contents\n   service will be.  Experience with X.400(1984) suggests that\
    \ support\n   of this service may not be universal.  As this service is expected\
    \ in\n   the RFC 822 world, two approaches are specified.  The choice will\n \
    \  depend on the use of X.400 return of contents withing the X.400\n   community\
    \ being serviced by the gateway.\n   In environments where return of contents\
    \ is widely supported, content\n   return can be requested as a service.  The\
    \ content return service can\n   then be passed back to the end (RFC 822) user\
    \ in a straightforward\n   manner.\n   In environments where return of contents\
    \ is not widely supported, a\n   gateway must make special provision to handle\
    \ return of contents.\n   For every message passing from RFC 822 -> X.400, content\
    \ return\n   request will not be requested, and report request always will be.\n\
    \   When the delivery report comes back, the gateway can note that the\n   message\
    \ has been delivered to the recipient(s) in question.  If a\n   non-delivery report\
    \ is received, a meaningful report (containing some\n   or all of the original\
    \ message) can be sent to the 822-MTS\n   originator.  If no report is received\
    \ for a recipient, a (timeout)\n   failure notice shall be sent to the 822-MTS\
    \ originator.  The gateway\n   may retransmit the X.400 message if it wishes.\
    \  When this approach is\n   taken, routing must be set up so that error reports\
    \ are returned\n   through the same MTA.  This approach may be difficult to use\
    \ in\n   conjunction with some routing strategies.\n"
- title: 5.3.  X.400 -> RFC 822
  contents:
  - '5.3.  X.400 -> RFC 822

    '
- title: 5.3.1.  Basic Approach
  contents:
  - "5.3.1.  Basic Approach\n   A single RFC 822 message is generated from the incoming\
    \ IP Message,\n   Report, or IP Notification.   All IPMS.BodyParts are mapped\
    \ onto a\n   single RFC 822 body.  Other services are mapped onto RFC 822 header\n\
    \   fields.  Where there is no appropriate existing field, new fields are\n  \
    \ defined for IPMS, MTS and MTA services.\n   The gateway mechanisms will correspond\
    \ to MTS Delivery.  As with\n   submission, there are aspects where the MTA (transfer)\
    \ services are\n   also used. In particular, there is an optimisation to allow\
    \ for\n   multiple 822-MTS recipients.\n"
- title: 5.3.2.  RFC 822 Settings
  contents:
  - "5.3.2.  RFC 822 Settings\n   An RFC 822 Service requires to have a number of\
    \ mandatory fields in\n   the RFC 822 Header.  Some 822-MTS services mandate specification\
    \ of\n   an 822-MTS Originator.  Even in cases where this is optional, it is\n\
    \   usually desirable to specify a value.  The following defaults are\n   defined,\
    \ which shall be used if the mappings specified do not derive\n   a value:\n \
    \  822-MTS Originator\n        If this is not generated by the mapping (e.g.,\
    \ for a\n        Delivery Report), a value pointing at a gateway\n        administrator\
    \ shall be assigned.\n   Date:\n        A value will always be generated\n   From:If\
    \ this is not generated by the mapping, it is assigned\n        equal to the 822-MTS\
    \ Originator.  If this is gateway\n        generated, an appropriate 822.phrase\
    \ shall be added.\n   At least one recipient field\n        If no recipient fields\
    \ are generated, a field \"To: list:;\",\n        shall be added.\n   This will\
    \ ensure minimal RFC 822 compliance.  When generating RFC 822\n   headers, folding\
    \ may be used.  It is recommended to do this,\n   following the guidelines of\
    \ RFC 822.\n"
- title: 5.3.3.  Basic Mappings
  contents:
  - '5.3.3.  Basic Mappings

    '
- title: 5.3.3.1.  Encoded Information Types
  contents:
  - "5.3.3.1.  Encoded Information Types\n   This mapping from MTS.EncodedInformationTypes\
    \ is needed in several\n   disconnected places.  EBNF is defined as follows:\n\
    \           encoded-info    = 1#encoded-type\n           encoded-type    = built-in-eit\
    \ / object-identifier\n           built-in-eit    = \"Undefined\"         ; undefined\
    \ (0)\n                           / \"Telex\"             ; tLX (1)\n        \
    \                   / \"IA5-Text\"          ; iA5Text (2)\n                  \
    \         / \"G3-Fax\"            ; g3Fax (3)\n                           / \"\
    TIF0\"              ; tIF0 (4)\n                           / \"Teletex\"     \
    \      ; tTX (5)\n                           / \"Videotex\"          ; videotex\
    \ (6)\n                           / \"Voice\"             ; voice (7)\n      \
    \                     / \"SFD\"               ; sFD (8)\n                    \
    \       / \"TIF1\"              ; tIF1 (9)\n   MTS.EncodedInformationTypes is\
    \ mapped onto EBNF.encoded-info.\n   MTS.EncodedInformationTypes.non-basic-parameters\
    \ is ignored.  Built\n   in types are mapped onto fixed strings (compatible with\
    \ X.400(1984)\n   and RFC 987), and other types are mapped onto EBNF.object-identifier.\n"
- title: 5.3.3.2.  Global Domain Identifier
  contents:
  - "5.3.3.2.  Global Domain Identifier\n   The following simple EBNF is used to represent\n\
    \   MTS.GlobalDomainIdentifier:\n           global-id = std-or-address\n   This\
    \ is encoded using the std-or-address syntax, for the attributes\n   within the\
    \ Global Domain Identifier.\n"
- title: 5.3.4.  Mappings from the IP Message
  contents:
  - "5.3.4.  Mappings from the IP Message\n   Consider that an IPM has to be mapped\
    \ to RFC 822.  The IPMS.IPM\n   comprises an IPMS.IPM.heading and IPMS.IPM.body.\
    \   The heading is\n   considered first.  Some EBNF for new fields is defined:\n\
    \        ipms-field = \"Obsoletes\" \":\" 1#msg-id\n                   / \"Expiry-Date\"\
    \ \":\" date-time\n                   / \"Reply-By\" \":\" date-time\n       \
    \            / \"Importance\" \":\" importance\n                   / \"Sensitivity\"\
    \ \":\" sensitivity\n                   / \"Autoforwarded\" \":\" boolean\n  \
    \                 / \"Incomplete-Copy\" \":\"\n                   / \"Language\"\
    \ \":\" language\n                   / \"Message-Type\" \":\" message-type\n \
    \                  / \"Discarded-X400-IPMS-Extensions\" \":\" 1#oid\n        importance\
    \      = \"low\" / \"normal\" / \"high\"\n        sensitivity     = \"Personal\"\
    \ / \"Private\" /\n                               \"Company-Confidential\"\n \
    \       language        = 2*ALPHA [ language-description ]\n        language-description\
    \ = printable-string\n        message-type    = \"Delivery Report\"\n        \
    \                / \"InterPersonal Notification\"\n                        / \"\
    Multiple Part\"\n   The mappings and actions for the IPMS.Heading is now specified\
    \ for\n   each element.  Addresses, and Message Identifiers are mapped\n   according\
    \ to Chapter 4.  Other mappings are explained, or are\n   straightforward (algorithmic).\
    \  If a field with addresses contains\n   zero elements, it should be discarded,\
    \ execpt for\n   IPMS.Heading.blind-copy-recipients, which can be mapped onto\
    \ BCC:\n   (the only RFC 822 field which allows zero recipients).\n   IPMS.Heading.this-IPM\n\
    \        Mapped to \"Message-ID:\".\n   IPMS.Heading.originator\n        If IPMS.Heading.authorizing-users\
    \ is present this is mapped\n        to Sender:, if not to \"From:\".\n   IPMS.Heading.authorizing-users\n\
    \        Mapped to \"From:\".\n   IPMS.Heading.primary-recipients\n        Mapped\
    \ to \"To:\".\n   IPMS.Heading.copy-recipients\n        Mapped to \"Cc:\".\n \
    \  IPMS.Heading.blind-copy-recipients\n        Mapped to \"Bcc:\".\n   IPMS.Heading.replied-to-ipm\n\
    \        Mapped to \"In-Reply-To:\".\n   IPMS.Heading.obsoleted-IPMs\n       \
    \ Mapped to the extended RFC 822 field \"Obsoletes:\"\n   IPMS.Heading.related-IPMs\n\
    \        Mapped to \"References:\".\n   IPMS.Heading.subject\n        Mapped to\
    \ \"Subject:\".  The contents are converted to ASCII\n        (as defined in Chapter\
    \ 3).  Any CRLF are not mapped, but are\n        used as points at which the subject\
    \ field must be folded.\n   IPMS.Heading.expiry-time\n        Mapped to the extended\
    \ RFC 822 field \"Expiry-Date:\".\n   IPMS.Heading.reply-time\n        Mapped\
    \ to the extended RFC 822 field \"Reply-By:\".\n   IPMS.Heading.reply-recipients\n\
    \        Mapped to \"Reply-To:\".\n   IPMS.Heading.importance\n        Mapped\
    \ to the extended RFC 822 field \"Importance:\".\n   IPMS.Heading.sensitivity\n\
    \        Mapped to the extended RFC 822 field \"Sensitivity:\".\n   IPMS.Heading.autoforwarded\n\
    \        Mapped to the extended RFC 822 field \"Autoforwarded:\".\n   The standard\
    \ extensions (Annex H of X.420 / ISO 10021-7) are\n   mapped as follows:\n   incomplete-copy\n\
    \        Mapped to the extended RFC 822 field \"Incomplete-Copy:\".\n   language\n\
    \        Mapped to the extended RFC 822 field \"Language:\", filling in\n    \
    \    the two letter code. The language-description may filled in\n        with\
    \ a human readable description of the language, and it is\n        recommended\
    \ to do this.\n   If the RFC 822 extended header is found, this shall be mapped\
    \ onto an\n   RFC 822 header, as described in Section 5.1.2.\n   If a non-standard\
    \ extension is found, it shall be discarded, unless\n   the gateway understands\
    \ the extension and can perform an appropriate\n   mapping onto an RFC 822 header\
    \ field.  If extensions are discarded,\n   the list is indicated in the extended\
    \ RFC 822 field \"Discarded-X400-\n   IPMS-Extensions:\".\n   The IPMS.Body is\
    \ mapped into the RFC 822 message body.  Each\n   IPMS.BodyPart is converted to\
    \ ASCII as follows:\n   IPMS.IA5Text\n        The mapping is straightforward (see\
    \ Chapter 3).\n   IPMS.MessageBodyPart\n        The X.400 -> RFC 822 mapping \
    \ is recursively applied, to\n        generate an RFC 822 Message.  If present,\
    \ the\n        IPMS.MessageBodyPart.parameters.delivery-envelope is used\n   \
    \     for the MTS Abstract Service Mappings.  If present, the\n        IPMS.MessageBodyPart.parameters.delivery-time\
    \ is mapped to\n        the extended RFC 822 field \"Delivery-Date:\".\n   Other\n\
    \        If other body parts can be mapped to IA5, either by use of\n        mappings\
    \ defined in X.408 [CCITT88a], or by other reasonable\n        mappings, this\
    \ shall be done unless content conversion is\n        prohibited.\n   If some\
    \ or all of the body parts cannot be converted there are three\n   options.  All\
    \ of these conform to this standard.  A different choice\n   may be made for the\
    \ case where no body part can be converted:\n   1.   The first option is to reject\
    \ the message, and send a non-\n        delivery notification.  This must always\
    \ be done if\n        conversion is prohibited.\n   2.   The second option is\
    \ to map a missing body part to something\n        of the style:\n           \
    \     *********************************\n                There was a foobarhere\n\
    \                The widget gateway ate it\n                *********************************\n\
    \        This will allow some useful information to be transferred.\n        As\
    \ the recipient is likely to be a human (IPMS), then\n        suitable action\
    \ will usually be possible.\n   3.   Finally both may be done.  In this case,\
    \ the supplementary\n        information in the (positive) Delivery Report shall\
    \ make\n        clear that something was sent on to the recipient with\n     \
    \   substantial loss of information.\n   Where there is more than one IPMS.BodyPart,\
    \ the mapping defined by\n   Rose and Stefferud in [Rose85a], is used to map the\
    \ separate\n   IPMS.BodyParts in the single RFC 822 message body.  If this is\
    \ done,\n   a \"Message-Type:\" field with value \"Multiple part\" shall be added,\n\
    \   which will indicate to a receiving gateway that the message may be\n   unfolded\
    \ according to RFC 934.\n   Note:There is currently work ongoing to produce an\
    \ upgrade to RFC\n        934, which also allows for support of body parts with\
    \ non-\n        ASCII content (MIME).  When this work is released as an RFC,\n\
    \        this specification will be updated to refer to it instead\n        for\
    \ RFC 934.\n   For backwards compatibility with RFC 987, the following procedures\n\
    \   shall also be followed.  If there are two IA5 body parts, and the\n   first\
    \ starts with the string \"RFC-822-Headers:\" as the first line,\n   then the\
    \ remainder of this body part shall be appended to the RFC 822\n   header.\n \
    \  An example message, illustrating a number of aspects is given below.\n"
- title: Return-Path:<@mhs-relay.ac.uk:stephen.harrison@gosip-uk.hmg.gold-400.gb>
  contents:
  - 'Return-Path:<@mhs-relay.ac.uk:stephen.harrison@gosip-uk.hmg.gold-400.gb>

    '
- title: 'Received: from mhs-relay.ac.uk by bells.cs.ucl.ac.uk via JANET'
  contents:
  - "Received: from mhs-relay.ac.uk by bells.cs.ucl.ac.uk via JANET\n          with\
    \ NIFTP id <7906-0@bells.cs.ucl.ac.uk>;\n          Thu, 30 May 1991 18:24:55 +0100\n"
- title: 'X400-Received: by mta "mhs-relay.ac.uk" in'
  contents:
  - "X400-Received: by mta \"mhs-relay.ac.uk\" in\n               /PRMD=uk.ac/ADMD=\
    \ /C=gb/; Relayed;\n               Thu, 30 May 1991 18:23:26 +0100\n"
- title: 'X400-Received: by /PRMD=HMG/ADMD=GOLD 400/C=GB/; Relayed;'
  contents:
  - "X400-Received: by /PRMD=HMG/ADMD=GOLD 400/C=GB/; Relayed;\n               Thu,\
    \ 30 May 1991 18:20:27 +0100\n"
- title: 'Message-Type: Multiple Part'
  contents:
  - 'Message-Type: Multiple Part

    '
- title: 'Date: Thu, 30 May 1991 18:20:27 +0100'
  contents:
  - 'Date: Thu, 30 May 1991 18:20:27 +0100

    '
- title: 'X400-Originator: Stephen.Harrison@gosip-uk.hmg.gold-400.gb'
  contents:
  - 'X400-Originator: Stephen.Harrison@gosip-uk.hmg.gold-400.gb

    '
- title: 'X400-MTS-Identifier:'
  contents:
  - "X400-MTS-Identifier:\n     [/PRMD=HMG/ADMD=GOLD 400/C=GB/;PC1000-910530172027-57D8]\n"
- title: 'Original-Encoded-Information-Types: ia5, undefined'
  contents:
  - 'Original-Encoded-Information-Types: ia5, undefined

    '
- title: 'X400-Content-Type: P2-1984 (2)'
  contents:
  - 'X400-Content-Type: P2-1984 (2)

    '
- title: 'Content-Identifier: Email Problems'
  contents:
  - 'Content-Identifier: Email Problems

    '
- title: 'From: Stephen.Harrison@gosip-uk.hmg.gold-400.gb (Tel +44 71 217 3487)'
  contents:
  - 'From: Stephen.Harrison@gosip-uk.hmg.gold-400.gb (Tel +44 71 217 3487)

    '
- title: 'Message-ID: <PC1000-910530172027-57D8*@MHS>'
  contents:
  - 'Message-ID: <PC1000-910530172027-57D8*@MHS>

    '
- title: 'To: Jim Craigie <NTIN36@gec-b.rutherford.ac.uk>'
  contents:
  - "To: Jim Craigie <NTIN36@gec-b.rutherford.ac.uk>\n (Receipt Notification Requested)\
    \ (Non Receipt Notification Requested),\n Tony Bates <tony@ean-relay.ac.uk> (Receipt\
    \ Notification Requested),\n Steve Kille <S.Kille@cs.ucl.ac.uk> (Receipt Notification\
    \ Requested)\n"
- title: 'Subject: Email Problems'
  contents:
  - 'Subject: Email Problems

    '
- title: 'Sender: Stephen.Harrison@gosip-uk.hmg.gold-400.gb'
  contents:
  - 'Sender: Stephen.Harrison@gosip-uk.hmg.gold-400.gb

    '
- title: '------------------------------ Start of body part 1'
  contents:
  - '------------------------------ Start of body part 1

    '
- title: Hope you gentlemen.......
  contents:
  - 'Hope you gentlemen.......

    '
- title: Regards,
  contents:
  - 'Regards,

    '
- title: Stephen Harrison
  contents:
  - 'Stephen Harrison

    '
- title: UK GOSIP Project
  contents:
  - 'UK GOSIP Project

    '
- title: '------------------------------ Start of forwarded message 1'
  contents:
  - '------------------------------ Start of forwarded message 1

    '
- title: 'From: Urs Eppenberger <Eppenberger@verw.switch.ch>'
  contents:
  - 'From: Urs Eppenberger <Eppenberger@verw.switch.ch>

    '
- title: 'Message-ID:'
  contents:
  - "Message-ID:\n  <562*/S=Eppenberger/OU=verw/O=switch/PRMD=SWITCH/ADMD=ARCOM/C=CH/@MHS>\n"
- title: 'To: "Stephen.Harrison" <Stephen.Harrison@gosip-uk.hmg.gold-400.gb>'
  contents:
  - 'To: "Stephen.Harrison" <Stephen.Harrison@gosip-uk.hmg.gold-400.gb>

    '
- title: 'Cc: kimura@bsdarc.bsd.fc.nec.co.jp'
  contents:
  - 'Cc: kimura@bsdarc.bsd.fc.nec.co.jp

    '
- title: 'Subject: Response to Email link'
  contents:
  - 'Subject: Response to Email link

    '
- title: '- ------------------------------ Start of body part 1'
  contents:
  - '- ------------------------------ Start of body part 1

    '
- title: Dear Mr Harrison......
  contents:
  - 'Dear Mr Harrison......

    '
- title: '- ------------------------------ End of body part 1'
  contents:
  - '- ------------------------------ End of body part 1

    '
- title: '------------------------------ End of forwarded message 1'
  contents:
  - '------------------------------ End of forwarded message 1

    '
- title: 5.3.5.  Mappings from an IP Notification
  contents:
  - "5.3.5.  Mappings from an IP Notification\n   A message is generated, with the\
    \ following fields:\n   From:\n        Set to the IPMS.IPN.ipn-originator.\n \
    \  To:  Set to the recipient from MTS.MessageSubmissionEnvelope.\n        If there\
    \ have been redirects, the original address should be\n        used.\n   Subject:\n\
    \        Set to the string  \"X.400 Inter-Personal Notification\" for a\n    \
    \    receipt notification and to \"X.400 Inter-Personal\n        Notification\
    \ (failure)\" for a non-receipt notification.\n   Message-Type:\n        Set to\
    \ \"InterPersonal Notification\"\n   References:\n        Set to IPMS.IPN.subject-ipm\n\
    \   The following EBNF is defined for the body of the Message.  This\n   format\
    \ is defined to ensure that all information from an\n   interpersonal notification\
    \ is available to the end user in a uniform\n   manner.\n        ipn-body-format\
    \ = ipn-description <CRLF>\n                        [ ipn-extra-information <CRLF>\
    \ ]\n                        [ ipn-content-return ]\n        ipn-description =\
    \ ipn-receipt / ipn-non-receipt\n        ipn-receipt = \"Your message to:\" preferred-recipient\
    \ <CRLF>\n                 \"was received at\" receipt-time <CRLF> <CRLF>\n  \
    \               \"This notification was generated\"\n                 acknowledgement-mode\
    \ <CRLF>\n                 \"The following extra information was given:\" <CRLF>\n\
    \                 ipn-suppl <CRLF>\n        ipn-non-receipt \"Your message to:\"\
    \n                preferred-recipient <CRLF>\n                ipn-reason\n   \
    \     ipn-reason = ipn-discarded / ipn-auto-forwarded\n        ipn-discarded =\
    \ \"was discarded for the following reason:\"\n                        discard-reason\
    \ <CRLF>\n        ipn-auto-forwarded = \"was automatically forwarded.\" <CRLF>\n\
    \                        [ \"The following comment was made:\"\n             \
    \                   auto-comment ]\n        ipn-extra-information =\n        \
    \         \"The following information types were converted:\"\n              \
    \   encoded-info\n        ipn-content-return = \"The Original Message is not available\"\
    \n                        / \"The Original Message follows:\"\n              \
    \            <CRLF> <CRLF> message\n        preferred-recipient = mailbox\n  \
    \      receipt-time        = date-time\n        auto-comment        = printablestring\n\
    \        ipn-suppl           = printablestring\n        discard-reason     = \"\
    Expired\" / \"Obsoleted\" /\n                                \"User Subscription\
    \ Terminated\"\n        acknowledgement-mode = \"Manually\" / \"Automatically\"\
    \n   The mappings for elements of the common fields of IPMS.IPN\n   (IPMS.CommonFields)\
    \ onto this structure and the message header are:\n   subject-ipm\n        Mapped\
    \ to \"References:\"\n   ipn-originator\n        Mapped  to \"From:\".\n   ipn-preferred-recipient\n\
    \        Mapped to EBNF.preferred-recipient\n   conversion-eits\n        Mapped\
    \ to EBNF.encoded-info in EBNF.ipn-extra-information\n   The mappings for elements\
    \ of IPMS.IPN.non-receipt-fields\n   (IPMS.NonReceiptFields) are:\n   non-receipt-reason\n\
    \        Used to select between EBNF.ipn-discarded and\n        EBNF.ipn-auto-forwarded\n\
    \   discard-reason\n        Mapped to EBNF.discard-reason\n   auto-forward-comment\n\
    \        Mapped to EBNF.auto-comment\n   returned-ipm\n        This applies only\
    \ to non-receipt notifications.\n        EBNF.ipn-content-return should always\
    \ be omitted for receipt\n        notifications, and always be present in non-receipt\n\
    \        notifications.  If present, the second option of\n        EBNF.ipn-content-return\
    \ is chosen, and an RFC 822 mapping of\n        the message included.  Otherwise\
    \ the first option is chosen.\n   The mappings for elements of IPMS.IPN.receipt-fields\n\
    \   (IPMS.ReceiptFields) are:\n   receipt-time\n        Mapped to EBNF.receipt-time\n\
    \   acknowledgement-mode\n        Mapped to EBNF.acknowledgement-mode\n   suppl-receipt-info\n\
    \        Mapped to EBNF.ipn-suppl\n   An example notification is:\n          \
    \ From: Steve Kille <steve@cs.ucl.ac.uk>\n           To: Julian Onions <jpo@computer-science.nottingham.ac.uk>\n\
    \           Subject: X.400 Inter-personal Notification\n           Message-Type:\
    \ InterPersonal Notification\n           References: <1229.614418325@UK.AC.NOTT.CS>\n\
    \           Date: Wed, 21 Jun 89 08:45:25 +0100\n           Your message to: Steve\
    \ Kille <steve@cs.ucl.ac.uk>\n           was automatically forwarded.\n      \
    \     The following comment was made:\n                   Sent on to a random\
    \ destination\n           The following information types were converted: g3fax\n"
- title: 5.3.6.  Mappings from the MTS Abstract Service
  contents:
  - "5.3.6.  Mappings from the MTS Abstract Service\n   This section describes the\
    \ MTS mappings for User Messages (IPM and\n   IPN).  This mapping is defined by\
    \ specifying the mapping of\n   MTS.MessageDeliveryEnvelope.  The following extensions\
    \ to RFC 822 are\n   defined to support this mapping:\n        mts-field = \"\
    X400-MTS-Identifier\" \":\" mts-msg-id\n                  / \"X400-Originator\"\
    \ \":\" mailbox\n                  / \"X400-Recipients\" \":\" 1#mailbox\n   \
    \               / \"Original-Encoded-Information-Types\" \":\"\n             \
    \                     encoded-info\n                  / \"X400-Content-Type\"\
    \ \":\" mts-content-type\n                  / \"Content-Identifier\" \":\" printablestring\n\
    \                  / \"Priority\" \":\" priority\n                  / \"Originator-Return-Address\"\
    \ \":\" 1#mailbox\n                  / \"DL-Expansion-History\" \":\" mailbox\
    \ \";\" date-time \";\"\n                  / \"Conversion\" \":\" prohibition\n\
    \                  / \"Conversion-With-Loss\" \":\" prohibition\n            \
    \      / \"Requested-Delivery-Method\" \":\"\n                               \
    \   1*( labelled-integer )\n                  / \"Delivery-Date\" \":\" date-time\n\
    \                  / \"Discarded-X400-MTS-Extensions\" \":\"\n               \
    \                    1#( oid / labelled-integer )\n        prohibition     = \"\
    Prohibited\" / \"Allowed\"\n        mts-msg-id       = \"[\" global-id \";\" *text\
    \ \"]\"\n        mts-content-type = \"P2\" /  labelled-integer\n             \
    \           / object-identifer\n        priority        = \"normal\" / \"non-urgent\"\
    \ / \"urgent\"\n   The mappings for each element of MTS.MessageDeliveryEnvelope\
    \ can now\n   be considered.\n   MTS.MessageDeliveryEnvelope.message-delivery-identifier\n\
    \        Mapped to the extended RFC 822 field \"X400-MTS-Identifier:\".\n   MTS.MessageDeliveryEnvelope.message-delivery-time\n\
    \        Discarded, as this time will be represented in an\n        appropriate\
    \ trace element.\n   The mappings for elements of\n   MTS.MessageDeliveryEnvelope.other-fields\n\
    \   (MTS.OtherMessageDeliveryFields) are:\n   content-type\n        Mapped to\
    \ the extended RFC 822 field \"X400-Content-Type:\".\n        The string \"P2\"\
    \ is retained for backwards compatibility with\n        RFC 987. This shall not\
    \ be generated, and either the\n        EBNF.labelled-integer  or EBNF.object-identifier\
    \ encoding\n        used.\n   originator-name\n        Mapped to the 822-MTS originator,\
    \ and to the extended RFC\n        822 field \"X400-Originator:\".  This is described\
    \ in\n        Section 4.6.2.\n   original-encoded-information-types\n        Mapped\
    \ to the extended RFC 822 field\n        \"Original-Encoded-Information-Types:\"\
    .\n   priority\n        Mapped to the extended RFC 822 field \"Priority:\".\n\
    \   delivery-flags\n        If the conversion-prohibited bit is set, add an extended\
    \ RFC\n        822 field \"Conversion:\".\n   this-recipient-name and other-recipient-names\n\
    \   originally-intended-recipient-name\n        The handling of these elements\
    \ is described in\n        Section 4.6.2.\n   converted-encoded-information-types\n\
    \        Discarded, as it will always be IA5 only.\n   message-submission-time\n\
    \        Mapped to Date:.\n   content-identifier\n        Mapped to the extended\
    \ RFC 822 field \"Content-Identifier:\".\n   If any extensions (MTS.MessageDeliveryEnvelope.other-\n\
    \   fields.extensions) are present, and they are marked as critical for\n   transfer\
    \ or delivery, then the message shall be rejected.  The\n   extensions (MTS.MessageDeliveryEnvelope.other-fields.extensions)\
    \ are\n   mapped as follows.\n   conversion-with-loss-prohibited\n     If set\
    \ to\n     MTS.ConversionWithLossProhibited.conversion-with-loss-prohibited,\n\
    \     then add the extended RFC 822 field \"Conversion-With-Loss:\".\n   requested-delivery-method\n\
    \        Mapped to the extended RFC 822 field\n        \"Requested-Delivery-Method:\"\
    .\n   originator-return-address\n        Mapped to the extended RFC 822 field\n\
    \        \"Originator-Return-Address:\".\n   physical-forwarding-address-request\n\
    \   physical-delivery-modes\n   registered-mail-type\n   recipient-number-for-advice\n\
    \   physical-rendition-attributes\n   physical-delivery-report-request\n   physical-forwarding-prohibited\n\
    \        These elements are only appropriate for physical delivery.\n        They\
    \ are represented as comments in the \"X400-Recipients:\"\n        field, as described\
    \ in Section 4.6.2.2.\n   originator-certificate\n   message-token\n   content-confidentiality-algorithm-identifier\n\
    \   content-integrity-check\n   message-origin-authentication-check\n   message-security-label\n\
    \   proof-of-delivery-request\n        These elements imply use of security services\
    \ not available\n        in the RFC 822 environment.  If they are marked as critical\n\
    \        for transfer or delivery, then the message shall be\n        rejected.\
    \  Otherwise they are discarded.\n   redirection-history\n        This is described\
    \ in Section 4.6.2.\n   dl-expansion-history\n        Each element is mapped to\
    \ the extended RFC 822 field\n        \"DL-Expansion-History:\".  They shall be\
    \ ordered in the\n        message header, so that the most recent expansion comes\n\
    \        first (same order as trace).\n   If any MTS (or MTA) Extensions not specified\
    \ in X.400 are present,\n   and they are marked as critical for transfer or delivery,\
    \ then the\n   message shall be rejected.  If they are not so marked, they can\n\
    \   safely be discarded.  The list of discarded fields shall be indicated\n  \
    \ in the extended header \"Discarded-X400-MTS-Extensions:\".\n"
- title: 5.3.7.  Mappings from the MTA Abstract Service
  contents:
  - "5.3.7.  Mappings from the MTA Abstract Service\n   There are some mappings at\
    \ the MTA Abstract Service level which are\n   done for IPM and IPN.  These can\
    \ be derived from\n   MTA.MessageTransferEnvelope.  The reasons for the mappings\
    \ at this\n   level, and the violation of layering are:\n   -    Allowing for\
    \ multiple recipients to share a single RFC 822\n        message\n   -    Making\
    \ the X.400 trace information available on the RFC 822\n        side\n   -   \
    \ Making any information on deferred delivery available\n   The 822-MTS recipients\
    \ are calculated from the full list of X.400\n   recipients.  This is all of the\
    \ members of\n   MTA.MessageTransferEnvelope.per-recipient-fields being passed\
    \ through\n   the gateway, where the responsibility bit is set.  In some cases,\
    \ a\n   different RFC 822 message would be calculated for each recipient, due\n\
    \   to differing service requests for each recipient.  As discussed in\n   4.6.2..2,\
    \ this specification allows either for multiple messages to\n   be generated,\
    \ or for the per- recipient information to be discarded.\n   The following EBNF\
    \ is defined for extended RFC 822 headers:\n        mta-field       = \"X400-Received\"\
    \ \":\" x400-trace\n                        / \"Deferred-Delivery\" \":\" date-time\n\
    \                        / \"Latest-Delivery-Time\" \":\" date-time\n        x400-trace\
    \       = \"by\" md-and-mta \";\"\n                         [ \"deferred until\"\
    \ date-time \";\" ]\n                         [ \"converted\" \"(\" encoded-info\
    \ \")\" \";\" ]\n                         [ \"attempted\" md-or-mta \";\"  ]\n\
    \                            action-list\n                            \";\" arrival-time\n\
    \        md-and-mta       = [ \"mta\" mta \"in\" ]  global-id\n        mta   \
    \           = word\n        arrival-time     = date-time\n        md-or-mta  \
    \      = \"MD\" global-id\n                         / \"MTA\" mta\n        Action-list\
    \      = 1#action\n        action           = \"Redirected\"\n               \
    \          / \"Expanded\"\n                         / \"Relayed\"\n          \
    \               / \"Rerouted\"\n   Note the EBNF.mta is encoded as 822.word. \
    \ If the character set does\n   no allow encoding as 822.atom, the 822.quoted-string\
    \ encoding is\n   used.\n   If MTA.PerMessageTransferFields.deferred-delivery-time\
    \ is present, it\n   is used to generate a Deferred-Delivery: field.  For some\
    \ reason,\n   X.400 does not make this information available at the MTS level\
    \ on\n   delivery.  X.400 profiles, and in particular the CEN/CENELEC profile\n\
    \   for X.400(1984) [Systems85a], specify that this element must be\n   supported\
    \ at the first MTA.  If it is not, the function may\n   optionally be implemented\
    \ by the gateway: that is, the gateway may\n   hold the message until the time\
    \ specified in the protocol element.\n   Thus, the value of this element will\
    \ usually be in the past.  For\n   this reason, the extended RFC 822 field is\
    \ primarily for information.\n   Merge MTA.PerMessageTransferFields.trace-information,\
    \ and\n   MTA.PerMessageTransferFields.internal-trace-information to produce a\n\
    \   single ordered trace list.  If Internal trace from other management\n   domains\
    \ has not been stripped, this may require complex interleaving.\n   Where an element\
    \ of internal trace and external trace are identical,\n   except for the MTA in\
    \ the internal trace, only the internal trace\n   element shall be presented.\
    \ Use this to generate a sequence of\n   \"X400-Received:\" fields. The only difference\
    \ between external trace\n   and internal trace will be the extra MTA information\
    \ in internal\n   trace elements.\n   When generating an RFC 822 message all trace\
    \ fields (X400-Received\n   and Received) shall be at the beginning of the header,\
    \ before any\n   other fields.  Trace shall be in chronological order, with the\
    \ most\n   recent element at the front of the message.  This ordering is\n   determined\
    \ from the order of the fields, not from timestamps in the\n   trace, as there\
    \ is no guarantee of clock synchronisation.  A simple\n   example trace (external)\
    \ is:\n   X400-Received: by /PRMD=UK.AC/ADMD=Gold 400/C=GB/ ; Relayed ;\n    \
    \       Tue, 20 Jun 89 19:25:11 +0100\n   A more complex example (internal):\n\
    \   X400-Received: by mta \"UK.AC.UCL.CS\"\n         in  /PRMD=UK.AC/ADMD=Gold\
    \ 400/C=GB/ ;\n         deferred until  Tue, 20 Jun 89 14:24:22 +0100 ;\n    \
    \     converted (undefined, g3fax) \";\" attempted /ADMD=Foo/C=GB/ ;\n       \
    \  Relayed, Expanded, Redirected ; Tue, 20 Jun 89 19:25:11 +0100\n"
- title: 5.3.8.  Mappings from Report Delivery
  contents:
  - "5.3.8.  Mappings from Report Delivery\n   Delivery reports are mapped at the\
    \ MTS service level.  This means\n   that only reports destined for the MTS user\
    \ will be mapped.  Some\n   additional services are also taken from the MTA service.\n"
- title: 5.3.8.1.  MTS Mappings
  contents:
  - "5.3.8.1.  MTS Mappings\n   A Delivery Report service will be represented as\n\
    \   MTS.ReportDeliveryEnvelope, which comprises of per-report-fields\n   (MTS.PerReportDeliveryFields)\
    \ and per-recipient-fields.\n   A message is generated with the following fields:\n\
    \   From:\n        An administrator at the gateway system.  This is also the\n\
    \        822-MTS originator.\n   To:  A mapping of the\n        MTA.ReportTransferEnvelope.report-destination-name.\
    \  This is\n        also the 822-MTS recipient.\n   Message-Type:\n        Set\
    \ to \"Delivery Report\".\n   Subject:\n        The EBNF for the subject line\
    \ is:\n         subject-line  = \"Delivery-Report\" \"(\" status \")\"\n     \
    \                    [ \"for\" destination ]\n         status        = \"success\"\
    \ / \"failure\" / \"success and failures\"\n         destination   = mailbox /\
    \ \"MTA\" word\n   The format of the body of the message is defined to ensure\
    \ that all\n   information is conveyed to the RFC 822 user in a consistent manner.\n\
    \   The format is structured as if it was a message coming from X.400,\n   with\
    \ the description in one body part, and a forwarded message\n   (return of content)\
    \ in the second.  This structure is useful to the\n   RFC 822 recipient, as it\
    \ enables the original message to be\n   extracted.  The first body part is structured\
    \ as follows:\n"
- title: 1.   A few lines giving keywords to indicate the original
  contents:
  - "1.   A few lines giving keywords to indicate the original\n     message.\n"
- title: 2.   A human summary of the status of each recipient being
  contents:
  - "2.   A human summary of the status of each recipient being\n     reported on.\n"
- title: 3.   A clearly marked section which contains detailed information
  contents:
  - "3.   A clearly marked section which contains detailed information\n     extracted\
    \ from the report.  This is marked clearly, as it\n     will not be comprehensible\
    \ to the average user.  It is\n     retained, as it may be critical to diagnosing\
    \ an obscure\n     problem.\n     This section may be omitted in positive DRs,\
    \ and it is\n     recommended that this is appropriate for most gateways.\n  \
    \      dr-body-format = dr-summary <CRLF>\n                        dr-recipients\
    \ <CRLF>\n                        dr-administrator-info-envelope <CRLF>\n    \
    \                    dr-content-return\n        dr-content-return = \"The Original\
    \ Message is not available\"\n             / \"The Original Message follows:\"\
    \n        dr-summary = \"This report relates to your message:\" <CRLF>\n     \
    \                   content-correlator <CRLF> <CRLF>\n                     \"\
    of\" date-time <CRLF> <CRLF>\n        dr-recipients = *(dr-recipient <CRLF> <CRLF>)\n\
    \        dr-recipient = dr-recip-success / dr-recip-failure\n        dr-recip-success\
    \ =\n                        \"Your message was successfully delivered to:\"\n\
    \                         mailbox \"at\" date-time\n        dr-recip-failure =\
    \ \"Your message was not delivered to:\"\n                                mailbox\
    \ <CRLF>\n                        \"for the following reason:\" *word\n      \
    \  dr-administrator-info-envelope = 3*( \"*\" text <CRLF> )\n        dr-administrator-info\
    \ =\n         \"**** The following information is directed towards\"\n       \
    \  \"the local administrator\" <CRLF>\n         \"**** and is not intended for\
    \ the end user\" <CRLF> <CRLF>\n         \"DR generated by:\" report-point <CRLF>\n\
    \         \"at\" date-time <CRLF> <CRLF>\n         \"Converted to RFC 822 at\"\
    \ mta <CRLF>\n         \"at\" date-time <CRLF> <CRLF>\n         \"Delivery Report\
    \ Contents:\" <CRLF> <CRLF>\n         drc-field-list <CRLF>\n         \"*****\
    \ End of administration information\"\n        drc-field-list       = *(drc-field\
    \ <CRLF>)\n        drc-field = \"Subject-Submision-Identifier\" \":\"\n      \
    \                                  mts-msg-id\n                  / \"Content-Identifier\"\
    \ \":\" printablestring\n                  / \"Content-Type\" \":\" mts-content-type\n\
    \                  / \"Original-Encoded-Information-Types\" \":\"\n          \
    \                      encoded-info\n                  / \"Originator-and-DL-Expansion-History\"\
    \ \":\"\n                                dl-history\n                  / \"Reporting-DL-Name\"\
    \ \":\" mailbox\n                  / \"Content-Correlator\" \":\" content-correlator\n\
    \                  / \"Recipient-Info\" \":\" recipient-info\n               \
    \   / \"Subject-Intermediate-Trace-Information\" \":\"\n                     \
    \                     x400-trace\n        recipient-info  = mailbox \",\" std-or\
    \ \";\"\n                    report-type\n                    [ \"converted eits\"\
    \ encoded-info \";\" ]\n                    [ \"originally intended recipient\"\
    \n                            mailbox \",\" std-or \";\" ]\n                 \
    \   [ \"last trace\" [ encoded-info ] date-time \";\" ]\n                    [\
    \ \"supplementary info\" <\"> printablestring <\"> \";\" ]\n                 \
    \   [ \"redirection history\" 1#redirection \";\"\n                    [ \"physical\
    \ forwarding address\"\n                                          printablestring\
    \ \";\" ]\n        report-type     = \"SUCCESS\" drc-success\n               \
    \         / \"FAILURE\" drc-failure\n        drc-success     = \"delivered at\"\
    \ date-time \";\"\n                        [ \"type of MTS user\" labelled-integer\
    \ \";\" ]\n        drc-failure     = \"reason\" labelled-integer \";\"\n     \
    \                   [ \"diagnostic\" labelled-integer \";\" ]\n        report-point\
    \ = [ \"mta\" word \"in\" ] global-id\n        content-correlator = *word\n  \
    \      dl-history = 1#( mailbox \"(\" date-time \")\")\n   The format is defined\
    \ as a fixed definition of an the outer level\n   (EBNF.dr-body-format).  The\
    \ element EBNF.dr-administrator-info-\n   envelope, provides a means of encapsulating\
    \ a section of the header\n   in a manner which is clear to the end user.  Each\
    \ line of this\n   section begins with \"*\".  Each element of EBNF.text within\
    \ %EBNF.dr-\n   administrator-info-envelope must not contain <CRLF>.  This is\
    \ used to\n   wrap up EBNF.dr-administrator-info, which will generate a sequenece\n\
    \   of lines not starting with \"*\".  EBNF.drc-fields may be folded using\n \
    \  the RFC 822 folding rules.\n   The elements of MTS.ReportDeliveryEnvelope.per-report-fields\
    \ are\n   mapped as follows onto extended RFC 822 fields:\n   subject-submission-identifier\n\
    \        Mapped to EBNF.drc-field (Subject-Submission-Identifier)\n   content-identifier\n\
    \        Mapped to EBNF.drc-field (Content-Identifier).  This should\n       \
    \ also be used in EBNF.dr-summary if there is no Content\n        Correlator present.\n\
    \   content-type\n        Mapped to EBNF.drc-field (Content-Type)\n   original-encoded-information-types\n\
    \        Mapped to EBNF.drc-field (Encoded-Info)\n   The extensions from MTS.ReportDeliveryEnvelope.per-report-\n\
    \   fields.extensions are mapped as follows:\n   originator-and-DL-expansion-history\n\
    \        Mapped to EBNF.drc-field (Originator-and-DL-Expansion-\n        History)\n\
    \   reporting-DL-name\n        Mapped to EBNF.drc-field (Reporting-DL-Name)\n\
    \   content-correlator\n        Mapped to EBNF.content-correlator, provided that\
    \ the\n        encoding is IA5String (this will always be the case).  This\n \
    \       is used in EBNF.dr-summary and EBNF.drc-field-list.  In the\n        former,\
    \ LWSP may be added, in order to improve the layout of\n        the message.\n\
    \   message-security-label reporting-MTA-certificate report-origin-\n   authentication-check\n\
    \        These security parameters will not be present unless there\n        is\
    \ an error in a remote MTA.  If they are present, they\n        shall be discarded\
    \ in preference to discarding the whole\n        report.\n   For each element\
    \ of MTS.ReportDeliveryEnvelope.per-recipient-fields,\n   a value of EBNF.dr-recipient,\
    \ and an EBNF.drc-field (Recipient-Info)\n   is generated.  The components are\
    \ mapped as follows.\n   actual-recipient-name\n        Used to generate the first\
    \ EBNF.mailbox and EBNF.std-or in\n        EBNF.recipient-info.  Both RFC 822\
    \ and X.400 forms are\n        given, as there may be a problem in the mapping\
    \ tables.  It\n        also generates the EBNF.mailbox in EBNF.dr-recip-success\
    \ or\n        EBNF.dr-recip-failure.\n   report\n        If it is MTS.Report.delivery,\
    \ then set EBNF.dr-recipient to\n        EBNF.dr-recip-success, and similarly\
    \ set EBNF.report-type,\n        filling in EBNF.drc-success.  If it is a failure,\
    \ set\n        EBNF.dr-recipient to EBNF.dr-recip-failure, making a human\n  \
    \      interpretation of the reason and diagnostic codes, and\n        including\
    \ any supplementary information.  EBNF.drc-failure\n        is filled in systematically.\n\
    \   converted-encoded-information-types\n        Set EBNF.drc-field (\"converted\
    \ eits\")\n   originally-intended-recipient\n        Set the second (\"originally\
    \ intended recipient\") mailbox and\n        std-or in EBNF.drc-field.\n   supplementary-info\n\
    \        Set EBNF.drc-field (\"supplementary info\"), and include this\n     \
    \   information in EBNF.dr-recip-failure.\n   redirection-history\n        Set\
    \ EBNF.drc-field (\"redirection history\")\n   physical-forwarding-address\n \
    \       Set ENBF.drc-field (\"physical forwarding address\")\n   recipient-certificate\n\
    \        Discard\n   proof-of-delivery\n        Discard\n   Any unknown extensions\
    \ shall be discarded, irrespective of\n   criticality.\n   The original message,\
    \ or an extract from it, shall be included in the\n   delivery port if it is available.\
    \  The original message will usually\n   be available at the gateway, as discussed\
    \ in Section 5.2.  If the\n   original message is available, but of erroneous\
    \ format, a dump of the\n   ASN.1 may be included.  This is recommended, but not\
    \ required.\n"
- title: 5.3.8.2.  MTA Mappings
  contents:
  - "5.3.8.2.  MTA Mappings\n   The single 822-MTS recipient is constructed from\n\
    \   MTA.ReportTransferEnvelope.report-destination-name, using the\n   mappings\
    \ of Chapter 4.  Unlike with a user message, this information\n   is not available\
    \ at the MTS level.\n   The following additional mappings are made:\n   MTA.ReportTransferEnvelope.report-destination-name\n\
    \        This is used to generate the To: field.\n   MTA.ReportTransferEnvelope.identifier\n\
    \        Mapped to the extended RFC 822 field \"X400-MTS-Identifier:\".\n    \
    \    It may also be used to derive a \"Message-Id:\" field.\n   MTA.ReportTransferEnvelope.trace-information\n\
    \        and\n   MTA.ReportTransferEnvelope.internal-trace-information\n     \
    \   Mapped onto the extended RFC 822 field \"X400-Received:\", as\n        described\
    \ in Section 5.3.7.  The first element is also used\n        to generate the \"\
    Date:\" field, and the EBNF.report-point.\n   MTA.PerRecipientReportTransferFields.last-trace-information\n\
    \        Mapped to EBNF.recipient-info (last trace)\n   MTA.PerReportTransferFields.subject-intermediate-trace-\n\
    \        information Mapped to EBNF.drc-field (Subject-Intermediate-\n       \
    \ Trace-Information). These fields are ordered so that the\n        most recent\
    \ trace element comes first.\n"
- title: 5.3.8.3.  Example Delivery Reports
  contents:
  - "5.3.8.3.  Example Delivery Reports\n   Example Delivery Report 1:\n   Return-Path:\
    \ <postmaster@cs.ucl.ac.uk>\n   Received: from cs.ucl.ac.uk by bells.cs.ucl.ac.uk\n\
    \      via Delivery Reports Channel id <27699-0@bells.cs.ucl.ac.uk>;\n      Thu,\
    \ 7 Feb 1991 15:48:39 +0000\n   From: UCL-CS MTA <postmaster@cs.ucl.ac.uk>\n \
    \  To: S.Kille@cs.ucl.ac.uk\n   Subject: Delivery Report (failure) for H.Hildegard@bbn.com\n\
    \   Message-Type: Delivery Report\n   Date: Thu, 7 Feb 1991 15:48:39 +0000\n \
    \  Message-ID: <\"bells.cs.u.694:07.01.91.15.48.34\"@cs.ucl.ac.uk>\n   Content-Identifier:\
    \ Greetings.\n   ------------------------------ Start of body part 1\n   This\
    \ report relates to your message: Greetings.\n           of Thu, 7 Feb 1991 15:48:20\
    \ +0000\n   Your message was not delivered to\n           H.Hildegard@bbn.com\
    \ for the following reason:\n           Bad Address\n           MTA 'bbn.com'\
    \ gives error message  (USER) Unknown user\n           name in \"H.Hildegard@bbn.com\"\
    \n"
- title: '***** The following information is directed towards the local'
  contents:
  - '***** The following information is directed towards the local

    '
- title: '***** administrator and is not intended for the end user'
  contents:
  - '***** administrator and is not intended for the end user

    '
- title: '*'
  contents:
  - '*

    '
- title: '* DR generated by mta bells.cs.ucl.ac.uk'
  contents:
  - '* DR generated by mta bells.cs.ucl.ac.uk

    '
- title: '*         in /PRMD=uk.ac/ADMD=gold 400/C=gb/'
  contents:
  - '*         in /PRMD=uk.ac/ADMD=gold 400/C=gb/

    '
- title: '*         at Thu, 7 Feb 1991 15:48:34 +0000'
  contents:
  - '*         at Thu, 7 Feb 1991 15:48:34 +0000

    '
- title: '*'
  contents:
  - '*

    '
- title: '* Converted to RFC 822 at bells.cs.ucl.ac.uk'
  contents:
  - '* Converted to RFC 822 at bells.cs.ucl.ac.uk

    '
- title: '*         at Thu, 7 Feb 1991 15:48:40 +0000'
  contents:
  - '*         at Thu, 7 Feb 1991 15:48:40 +0000

    '
- title: '*'
  contents:
  - "*\n ..... continued on next page\n"
- title: '* Delivery Report Contents:'
  contents:
  - '* Delivery Report Contents:

    '
- title: '*'
  contents:
  - '*

    '
- title: '* Subject-Submission-Identifier:'
  contents:
  - '* Subject-Submission-Identifier:

    '
- title: '*      [/PRMD=uk.ac/ADMD=gold 400/C=gb/;<1803.665941698@UK.AC.UCL.CS>]'
  contents:
  - '*      [/PRMD=uk.ac/ADMD=gold 400/C=gb/;<1803.665941698@UK.AC.UCL.CS>]

    '
- title: '* Content-Identifier: Greetings.'
  contents:
  - '* Content-Identifier: Greetings.

    '
- title: '* Subject-Intermediate-Trace-Information:'
  contents:
  - "* Subject-Intermediate-Trace-Information:\n           /PRMD=uk.ac/ADMD=gold 400/C=gb/;\n"
- title: '*          arrival Thu, 7 Feb 1991 15:48:20 +0000 action Relayed'
  contents:
  - '*          arrival Thu, 7 Feb 1991 15:48:20 +0000 action Relayed

    '
- title: '* Subject-Intermediate-Trace-Information:'
  contents:
  - "* Subject-Intermediate-Trace-Information:\n           /PRMD=uk.ac/ADMD=gold 400/C=gb/;\n"
- title: '*          arrival Thu, 7 Feb 1991 15:48:18 +0000 action Relayed'
  contents:
  - '*          arrival Thu, 7 Feb 1991 15:48:18 +0000 action Relayed

    '
- title: '* Recipient-Info: H.Hildegard@bbn.com,'
  contents:
  - '* Recipient-Info: H.Hildegard@bbn.com,

    '
- title: '*  /RFC-822=H.Hildegard(a)bbn.com/OU=cs/O=ucl'
  contents:
  - "*  /RFC-822=H.Hildegard(a)bbn.com/OU=cs/O=ucl\n          /PRMD=uk.ac/ADMD=gold\
    \ 400/C=gb/;\n"
- title: '*         FAILURE reason Unable-To-Transfer (1);'
  contents:
  - '*         FAILURE reason Unable-To-Transfer (1);

    '
- title: '*         diagnostic Unrecognised-ORName (0);'
  contents:
  - '*         diagnostic Unrecognised-ORName (0);

    '
- title: '*         last trace (ia5) Thu, 7 Feb 1991 15:48:18 +0000;'
  contents:
  - '*         last trace (ia5) Thu, 7 Feb 1991 15:48:18 +0000;

    '
- title: '*         supplementary info "MTA ''bbn.com'' gives error message  (USER)'
  contents:
  - '*         supplementary info "MTA ''bbn.com'' gives error message  (USER)

    '
- title: '*         Unknown user name in "H.Hildegard@bbn.com"";'
  contents:
  - '*         Unknown user name in "H.Hildegard@bbn.com"";

    '
- title: '****** End of administration information'
  contents:
  - '****** End of administration information

    '
- title: 'The Original Message follows:'
  contents:
  - 'The Original Message follows:

    '
- title: '------------------------------ Start of forwarded message 1'
  contents:
  - '------------------------------ Start of forwarded message 1

    '
- title: 'Received: from glenlivet.cs.ucl.ac.uk by bells.cs.ucl.ac.uk'
  contents:
  - "Received: from glenlivet.cs.ucl.ac.uk by bells.cs.ucl.ac.uk\n  with SMTP inbound\
    \ id <27689-0@bells.cs.ucl.ac.uk>;\n  Thu, 7 Feb 1991 15:48:21 +0000\n"
- title: 'To: H.Hildegard@bbn.com'
  contents:
  - 'To: H.Hildegard@bbn.com

    '
- title: 'Subject: Greetings.'
  contents:
  - 'Subject: Greetings.

    '
- title: 'Phone: +44-71-380-7294'
  contents:
  - 'Phone: +44-71-380-7294

    '
- title: 'Date: Thu, 07 Feb 91 15:48:18 +0000'
  contents:
  - 'Date: Thu, 07 Feb 91 15:48:18 +0000

    '
- title: 'Message-ID: <1803.665941698@UK.AC.UCL.CS>'
  contents:
  - 'Message-ID: <1803.665941698@UK.AC.UCL.CS>

    '
- title: 'From: Steve Kille <S.Kille@cs.ucl.ac.uk>'
  contents:
  - 'From: Steve Kille <S.Kille@cs.ucl.ac.uk>

    '
- title: Steve
  contents:
  - 'Steve

    '
- title: '------------------------------ End of forwarded message 1'
  contents:
  - '------------------------------ End of forwarded message 1

    '
- title: 'Example Delivery Report 2:'
  contents:
  - 'Example Delivery Report 2:

    '
- title: 'Return-Path: <postmaster@cs.ucl.ac.uk>'
  contents:
  - 'Return-Path: <postmaster@cs.ucl.ac.uk>

    '
- title: 'Received: from cs.ucl.ac.uk by bells.cs.ucl.ac.uk'
  contents:
  - "Received: from cs.ucl.ac.uk by bells.cs.ucl.ac.uk\n  via Delivery Reports Channel\
    \ id <27718-0@bells.cs.ucl.ac.uk>;\n  Thu, 7 Feb 1991 15:49:11 +0000\n"
- title: 'X400-Received: by mta bells.cs.ucl.ac.uk in'
  contents:
  - "X400-Received: by mta bells.cs.ucl.ac.uk in\n  /PRMD=uk.ac/ADMD=gold 400/C=gb/;\n\
    \  Relayed; Thu, 7 Feb 1991 15:49:08 +0000\n"
- title: 'X400-Received: by /PRMD=DGC/ADMD=GOLD 400/C=GB/; Relayed;'
  contents:
  - "X400-Received: by /PRMD=DGC/ADMD=GOLD 400/C=GB/; Relayed;\n  Thu, 7 Feb 1991\
    \ 15:48:40 +0000\n"
- title: 'From: UCL-CS MTA <postmaster@cs.ucl.ac.uk>'
  contents:
  - 'From: UCL-CS MTA <postmaster@cs.ucl.ac.uk>

    '
- title: 'To: S.Kille@cs.ucl.ac.uk'
  contents:
  - 'To: S.Kille@cs.ucl.ac.uk

    '
- title: 'Subject: Delivery Report (failure) for'
  contents:
  - "Subject: Delivery Report (failure) for\n         j.nosuchuser@dle.cambridge.DGC.gold-400.gb\n"
- title: 'Message-Type: Delivery Report'
  contents:
  - 'Message-Type: Delivery Report

    '
- title: 'Date: Thu, 7 Feb 1991 15:49:11 +0000'
  contents:
  - 'Date: Thu, 7 Feb 1991 15:49:11 +0000

    '
- title: 'Message-ID: <"DLE/910207154840Z/000"@cs.ucl.ac.uk>'
  contents:
  - 'Message-ID: <"DLE/910207154840Z/000"@cs.ucl.ac.uk>

    '
- title: 'Content-Identifier: A useful mess...'
  contents:
  - 'Content-Identifier: A useful mess...

    '
- title: 'This report relates to your message: A useful mess...'
  contents:
  - 'This report relates to your message: A useful mess...

    '
- title: Your message was not delivered to
  contents:
  - "Your message was not delivered to\n        j.nosuchuser@dle.cambridge.DGC.gold-400.gb\n\
    \        for the following reason:\n        Bad Address\n        DG 21187: (CEO\
    \ POA) Unknown addressee.\n"
- title: '***** The following information is directed towards the local'
  contents:
  - '***** The following information is directed towards the local

    '
- title: '***** administrator and is not intended for the end user'
  contents:
  - '***** administrator and is not intended for the end user

    '
- title: '*'
  contents:
  - '*

    '
- title: '* DR generated by /PRMD=DGC/ADMD=GOLD 400/C=GB/'
  contents:
  - '* DR generated by /PRMD=DGC/ADMD=GOLD 400/C=GB/

    '
- title: '*         at Thu, 7 Feb 1991 15:48:40 +0000'
  contents:
  - '*         at Thu, 7 Feb 1991 15:48:40 +0000

    '
- title: '*'
  contents:
  - '*

    '
- title: '* Converted to RFC 822 at bells.cs.ucl.ac.uk'
  contents:
  - '* Converted to RFC 822 at bells.cs.ucl.ac.uk

    '
- title: '*         at Thu, 7 Feb 1991 15:49:12 +0000'
  contents:
  - '*         at Thu, 7 Feb 1991 15:49:12 +0000

    '
- title: '*'
  contents:
  - '*

    '
- title: '* Delivery Report Contents:'
  contents:
  - '* Delivery Report Contents:

    '
- title: '*'
  contents:
  - '*

    '
- title: '* Subject-Submission-Identifier:'
  contents:
  - '* Subject-Submission-Identifier:

    '
- title: '*  [/PRMD=uk.ac/ADMD=gold 400/C=gb/;<1796.665941626@UK.AC.UCL.CS>]'
  contents:
  - '*  [/PRMD=uk.ac/ADMD=gold 400/C=gb/;<1796.665941626@UK.AC.UCL.CS>]

    '
- title: '* Content-Identifier: A useful mess...'
  contents:
  - '* Content-Identifier: A useful mess...

    '
- title: '* Recipient-Info: j.nosuchuser@dle.cambridge.DGC.gold-400.gb,'
  contents:
  - '* Recipient-Info: j.nosuchuser@dle.cambridge.DGC.gold-400.gb,

    '
- title: '*     /I=j/S=nosuchuser/OU=dle/O=cambridge/PRMD=DGC/ADMD=GOLD 400/C=GB/;'
  contents:
  - '*     /I=j/S=nosuchuser/OU=dle/O=cambridge/PRMD=DGC/ADMD=GOLD 400/C=GB/;

    '
- title: '*     FAILURE reason Unable-To-Transfer (1);'
  contents:
  - '*     FAILURE reason Unable-To-Transfer (1);

    '
- title: '*     diagnostic Unrecognised-ORName (0);'
  contents:
  - '*     diagnostic Unrecognised-ORName (0);

    '
- title: '*     supplementary info "DG 21187: (CEO POA) Unknown addressee.";'
  contents:
  - '*     supplementary info "DG 21187: (CEO POA) Unknown addressee.";

    '
- title: '****** End of administration information'
  contents:
  - '****** End of administration information

    '
- title: The Original Message is not available
  contents:
  - 'The Original Message is not available

    '
- title: 5.3.9.  Probe
  contents:
  - "5.3.9.  Probe\n   This is an MTS internal issue.  Any probe shall be serviced\
    \ by the\n   gateway, as there is no equivalent RFC 822 functionality.  The value\n\
    \   of the reply is dependent on whether the gateway could service an MTS\n  \
    \ Message with the values specified in the probe.  The reply shall make\n   use\
    \ of MTS.SupplementaryInformation to indicate that the probe was\n   serviced\
    \ by the gateway.\n"
- title: Appendix A - Mappings Specific to SMTP
  contents:
  - "Appendix A - Mappings Specific to SMTP\n   This Appendix is specific to the Simple\
    \ Mail Transfer Protocol (RFC\n   821).  It describes specific changes in the\
    \ context of this protocol.\n   When servicing a probe, as described in section\
    \ 5.3.9, use may be\n   made of the SMTP VRFY command to increase the accuracy\
    \ of information\n   contained in the delivery report.\n"
- title: Appendix B - Mappings specific to the JNT Mail
  contents:
  - "Appendix B - Mappings specific to the JNT Mail\n   This Appendix is specific\
    \ to the JNT Mail Protocol.  It describes\n   specific changes in the context\
    \ of this protocol.\n   1.  Introduction\n      There are five aspects of a gateway\
    \ which are JNT Mail Specific.\n      These are each given a section of this appendix.\n\
    \   2.  Domain Ordering\n      When interpreting and generating domains, the UK\
    \ NRS domain\n      ordering shall be used, both in headers, and in text generated\
    \ for\n      human description.\n   3.  Addressing\n      A gateway which maps\
    \ to JNT Mail should recognise the Domain\n      Defined Attribute JNT-MAIL. \
    \ The value associated with this\n      attribute should be interpreted according\
    \ to the JNT Mail\n      Specification.  This DDA shall never be generated by\
    \ a gateway.\n      For this reason, the overflow mechanism is not required.\n\
    \   4.  Acknowledge-To:\n      This field has no direct functional equivalent\
    \ in X.400.  However,\n      it can be supported to an extent, and can be used\
    \ to improve X.400\n      support.\n      If an Acknowledge-To: field is present\
    \ when going from JNT Mail to\n      X.400, there are two different situations.\
    \  The first case is\n      where there is one address in the Acknowledge-To:\
    \ field, and it is\n      equal to the 822-MTS return address.  In this case,\
    \ the\n      MTS.PerRecipientSubmissionFields.originator-request-report.report\n\
    \      shall be set for each recipient, and the Acknowledge-To: field\n      discarded.\
    \  Here, X.400 can provide the equivalent service.\n      In all other cases two\
    \ actions are taken.\n         1. Acknowledgement(s) may be generated by the gateway.\
    \  The\n            text of these acknowledgements shall indicate that they are\n\
    \            generated by the gateway, and do not correspond to delivery.\n  \
    \       2. The Acknowledge-To: field shall be passed as an extension\n       \
    \     heading.\n      When going from X.400 to JNT Mail, in cases where\n    \
    \  MTA.PerRecipientMessageTransferFields.per-recipient-indicators.\n      originator-report\
    \ bit is set for all recipients (i.e., there is a\n      user request for a positive\
    \ delivery report for every recipeint),\n      generate an Acknowledge-To: field\
    \ containing the\n      MTS.OtherMessageDeliveryFields.originator-name.  Receipt\n\
    \      notification requests are not mapped onto Acknowledge-To:, as no\n    \
    \  association can be guaranteed between IPMS and MTS level\n      addressing\
    \ information.\n   5.  Trace\n      JNT Mail trace uses the Via: syntax.  When\
    \ going from JNT Mail to\n      X.400, a mapping similar to that for Received:\
    \  is used. No\n      MTS.GlobalDomainIdentifier of the site making the trace\
    \ can be\n      derived from the Via:, so a value for the gateway is used.  The\n\
    \      trace text, including the \"Via:\", is unfolded, truncated to\n      MTS.ub-mta-name-length\
    \ (32), and mapped to\n      MTA.InternalTraceInformationElement.mta-name.  There\
    \ is no JNT\n      Mail specific mapping for the reverse direction.\n   6.  Timezone\
    \ specification\n      The extended syntax of zone defined in the JNT Mail Protocol\
    \ shall\n      be used in the mapping of UTCTime defined in Chapter 3.\n   7.\
    \  Lack of 822-MTS originator specification\n      In JNT Mail the default mapping\
    \ of the\n      MTS.OtherMessageDeliveryFields.originator-name is to the Sender:\n\
    \      field.  This can cause a problem when going from X.400 to JNT Mail\n  \
    \    if the mapping of IPMS.Heading has already generated a Sender:\n      field.\
    \  To overcome this, new extended JNT Mail field is defined.\n      This is chosen\
    \ to align with the JNT recommendation for\n      interworking with full RFC 822\
    \ systems [Kille84b].\n              original-sender     = \"Original-Sender\"\
    \ \":\" mailbox\n      If an IPM has no IPMS.Heading.authorizing-users component\
    \ and\n      IPMS.Heading.originator.formal-name is different from\n      MTS.OtherMessageDeliveryFields.originator-name,\
    \ map\n      MTS.OtherMessageDeliveryFields.originator-name, onto the Sender:\n\
    \      field.\n      If an IPM has a IPMS.Heading.authorizing-users component,\
    \ and\n      IPMS.Heading.originator.formal-name is different from\n      MTS.OtherMessageDeliveryFields.originator-name,\n\
    \      MTS.OtherMessageDeliveryFields.originator-name is mapped onto the\n   \
    \   Sender: field, and IPMS.Heading.originator mapped onto the\n      Original-Sender:\
    \ field.\n      In other cases the MTS.OtherMessageDeliveryFields.originator-name,\n\
    \      is already correctly represented.\n"
- title: Appendix C - Mappings specific to UUCP Mail
  contents:
  - "Appendix C - Mappings specific to UUCP Mail\n   Gatewaying of UUCP and X.400\
    \ is handled by first gatewaying the UUCP\n   address into RFC 822 syntax (using\
    \ RFC 976) and then gatewaying the\n   resulting RFC 822 address into X.400. \
    \ For example, an X.400 address\n           Country         US\n           Organisation\
    \    Xerox\n           Personal Name   John Smith\n   might be expressed from\
    \ UUCP as\n           inthop!gate!gatehost.COM!/C=US/O=Xerox/PN=John.Smith/\n\
    \   (assuming gate is a UUCP-ARPA gateway and gatehost.COM is an ARPA-\n   X.400\
    \ gateway) or\n           inthop!gate!Xerox.COM!John.Smith\n   (assuming that\
    \ Xerox.COM and /C=US/O=Xerox/ are equivalent.)\n   In the other direction, a\
    \ UUCP address Smith@ATT.COM, integrated into\n   822, would be handled as any\
    \ other 822 address.  A non-integrated\n   address such as inthop!dest!user might\
    \ be handled through a pair of\n   gateways:\n           Country         US\n\
    \           ADMD            ATT\n           PRMD            ARPA\n           Organisation\
    \    GateOrg\n           RFC-822         inthop!dest!user@gatehost.COM\n   or\
    \ through a single X.400 to UUCP gateway:\n           Country         US\n   \
    \        ADMD            ATT\n           PRMD            UUCP\n           Organisation\
    \    GateOrg\n           RFC-822         inthop!dest!user\n"
- title: Appendix D - Object Identifier Assignment
  contents:
  - "Appendix D - Object Identifier Assignment\n   An object identifier is needed\
    \ for the extension IPMS element.  The\n   following value shall be used.\n  \
    \ rfc-987-88 OBJECT IDENTIFIER ::=\n       {ccitt data(9) pss(2342) ucl(234219200300)\
    \ rfc-987-88(200)}\n   id-rfc-822-field-list OBJECT IDENTIFIER ::= {rfc987-88\
    \ field(1)}\n"
- title: Appendix E - BNF Summary
  contents:
  - "Appendix E - BNF Summary\n        boolean = \"TRUE\" / \"FALSE\"\n        numericstring\
    \ = *DIGIT\n        printablestring  = *( ps-char )\n        ps-restricted-char\
    \      = 1DIGIT /  1ALPHA / \" \" / \"'\" / \"+\"\n                          \
    \ / \",\" / \"-\" / \".\" / \"/\" / \":\" / \"=\" / \"?\"\n        ps-delim  \
    \       = \"(\" / \")\"\n        ps-char          = ps-delim / ps-restricted-char\n\
    \        ps-encoded       = *( ps-restricted-char / ps-encoded-char )\n      \
    \  ps-encoded-char  = \"(a)\"               ; (@)\n                         /\
    \ \"(p)\"               ; (%)\n                         / \"(b)\"            \
    \   ; (!)\n                         / \"(q)\"               ; (\")\n         \
    \                / \"(u)\"               ; (_)\n                         / \"\
    (l)\"               ; \"(\"\n                         / \"(r)\"              \
    \ ; \")\"\n                         / \"(\" 3DIGIT \")\"\n        teletex-string\
    \   = *( ps-char / t61-encoded )\n        t61-encoded      = \"{\" 1* t61-encoded-char\
    \ \"}\"\n        t61-encoded-char = 3DIGIT\n        teletex-and-or-ps = [ printablestring\
    \ ] [ \"*\" teletex-string ]\n        labelled-integer ::= [ key-string ] \"(\"\
    \ numericstring \")\"\n        key-string      = *key-char\n        key-char \
    \       = <a-z, A-Z, 0-9, and \"-\">\n        object-identifier  ::= oid-comp\
    \ object-identifier\n                        | oid-comp\n        oid-comp ::=\
    \ [ key-string ] \"(\" numericstring \")\"\n        encoded-info    = 1#encoded-type\n\
    \        encoded-type    = built-in-eit / object-identifier\n        built-in-eit\
    \    = \"Undefined\"         ; undefined (0)\n                        / \"Telex\"\
    \             ; tLX (1)\n                        / \"IA5-Text\"          ; iA5Text\
    \ (2)\n                        / \"G3-Fax\"            ; g3Fax (3)\n         \
    \               / \"TIF0\"              ; tIF0 (4)\n                        /\
    \ \"Teletex\"           ; tTX (5)\n                        / \"Videotex\"    \
    \      ; videotex (6)\n                        / \"Voice\"             ; voice\
    \ (7)\n                        / \"SFD\"               ; sFD (8)\n           \
    \             / \"TIF1\"              ; tIF1 (9)\n        encoded-pn      = [\
    \ given \".\" ] *( initial \".\" ) surname\n        given           = 2*<ps-char\
    \ not including \".\">\n        initial         = ALPHA\n        surname     \
    \    = printablestring\n        std-or-address  = 1*( \"/\" attribute \"=\" value\
    \ ) \"/\"\n        attribute       = standard-type\n                        /\
    \ \"RFC-822\"\n                        / registered-dd-type\n                \
    \        / dd-key \".\" std-printablestring\n        standard-type   = key-string\n\
    \        registered-dd-type\n                        = key-string\n        dd-key\
    \          = key-string\n        value           = std-printablestring\n     \
    \   std-printablestring\n                        = *( std-char / std-pair )\n\
    \        std-char        = <\"{\", \"}\", \"*\", and any ps-char\n           \
    \                             except \"/\" and \"=\">\n        std-pair      \
    \  = \"$\" ps-char\n        dmn-or-address  = dmn-part *( \".\" dmn-part )\n \
    \       dmn-part        = attribute \"$\" value\n        attribute       = standard-type\n\
    \                        / \"~\" dmn-printablestring\n        value          \
    \ = dmn-printablestring\n                        / \"@\"\n        dmn-printablestring\
    \ =\n                        = *( dmn-char / dmn-pair )\n        dmn-char    \
    \    = <\"{\", \"}\", \"*\", and any ps-char\n                               \
    \                 except \".\">\n        dmn-pair        = \"\\.\"\n        global-id\
    \ = std-or-address\n        mta-field       = \"X400-Received\" \":\" x400-trace\n\
    \                        / \"Deferred-Delivery\" \":\" date-time\n           \
    \             / \"Latest-Delivery-Time\" \":\" date-time\n        x400-trace \
    \      = \"by\" md-and-mta \";\"\n                         [ \"deferred until\"\
    \ date-time \";\" ]\n                         [ \"converted\" \"(\" encoded-info\
    \ \")\" \";\" ]\n                         [ \"attempted\" md-or-mta \";\"  ]\n\
    \                            action-list\n                            \";\" arrival-time\n\
    \        md-and-mta       = [ \"mta\" mta \"in\" ]  global-id\n        mta   \
    \           = word\n        arrival-time     = date-time\n        md-or-mta  \
    \      = \"MD\" global-id\n                         / \"MTA\" mta\n        Action-list\
    \      = 1#action\n        action           = \"Redirected\"\n               \
    \          / \"Expanded\"\n                         / \"Relayed\"\n          \
    \               / \"Rerouted\"\n        dr-body-format = dr-summary <CRLF>\n \
    \                       dr-recipients <CRLF>\n                        dr-administrator-info-envelope\
    \ <CRLF>\n                        dr-content-return\n        dr-content-return\
    \ = \"The Original Message is not available\"\n             / \"The Original Message\
    \ follows:\"\n        dr-summary = \"This report relates to your message:\" <CRLF>\n\
    \                        content-correlator <CRLF> <CRLF>\n                  \
    \   \"of\" date-time <CRLF> <CRLF>\n        dr-recipients = *(dr-recipient <CRLF>\
    \ <CRLF>)\n        dr-recipient = dr-recip-success / dr-recip-failure\n      \
    \  dr-recip-success =\n                        \"Your message was successfully\
    \ delivered to:\"\n                         mailbox \"at\" date-time\n       \
    \ dr-recip-failure = \"Your message was not delivered to:\"\n                \
    \                mailbox <CRLF>\n                        \"for the following reason:\"\
    \ *word\n        dr-administrator-info-envelope = 3*( \"*\" text <CRLF> )\n  \
    \      dr-administrator-info =\n         \"**** The following information is directed\
    \ towards\"\n         \"the local administrator\" <CRLF>\n         \"**** and\
    \ is not intended for the end user\" <CRLF> <CRLF>\n         \"DR generated by:\"\
    \ report-point <CRLF>\n         \"at\" date-time <CRLF> <CRLF>\n         \"Converted\
    \ to RFC 822 at\" mta <CRLF>\n         \"at\" date-time <CRLF> <CRLF>\n      \
    \   \"Delivery Report Contents:\" <CRLF> <CRLF>\n         drc-field-list <CRLF>\n\
    \         \"***** End of administration information\"\n        drc-field-list\
    \       = *(drc-field <CRLF>)\n        drc-field = \"Subject-Submision-Identifier\"\
    \ \":\"\n                                        mts-msg-id\n                \
    \  / \"Content-Identifier\" \":\" printablestring\n                  / \"Content-Type\"\
    \ \":\" mts-content-type\n                  / \"Original-Encoded-Information-Types\"\
    \ \":\"\n                                encoded-info\n                  / \"\
    Originator-and-DL-Expansion-History\" \":\"\n                                dl-history\n\
    \                  / \"Reporting-DL-Name\" \":\" mailbox\n                  /\
    \ \"Content-Correlator\" \":\" content-correlator\n                  / \"Recipient-Info\"\
    \ \":\" recipient-info\n                  / \"Subject-Intermediate-Trace-Information\"\
    \ \":\"\n                                          x400-trace\n        recipient-info\
    \  = mailbox \",\" std-or \";\"\n                    report-type\n           \
    \         [ \"converted eits\" encoded-info \";\" ]\n                    [ \"\
    originally intended recipient\"\n                            mailbox \",\" std-or\
    \ \";\" ]\n                    [ \"last trace\" [ encoded-info ] date-time \"\
    ;\" ]\n                    [ \"supplementary info\" <\"> printablestring <\">\
    \ \";\" ]\n                    [ \"redirection history\" 1#redirection \";\"\n\
    \                    [ \"physical forwarding address\"\n                     \
    \                     printablestring \";\" ]\n        report-type     = \"SUCCESS\"\
    \ drc-success\n                        / \"FAILURE\" drc-failure\n        drc-success\
    \     = \"delivered at\" date-time \";\"\n                        [ \"type of\
    \ MTS user\" labelled-integer \";\" ]\n        drc-failure     = \"reason\" labelled-integer\
    \ \";\"\n                        [ \"diagnostic\" labelled-integer \";\" ]\n \
    \       report-point = [ \"mta\" word \"in\" ] global-id\n        content-correlator\
    \ = *word\n        dl-history = 1#( mailbox \"(\" date-time \")\")\n        mts-field\
    \ = \"X400-MTS-Identifier\" \":\" mts-msg-id\n                  / \"X400-Originator\"\
    \ \":\" mailbox\n                  / \"X400-Recipients\" \":\" 1#mailbox\n   \
    \               / \"Original-Encoded-Information-Types\" \":\"\n             \
    \                     encoded-info\n                  / \"X400-Content-Type\"\
    \ \":\" mts-content-type\n                  / \"Content-Identifier\" \":\" printablestring\n\
    \                  / \"Priority\" \":\" priority\n                  / \"Originator-Return-Address\"\
    \ \":\" 1#mailbox\n                  / \"DL-Expansion-History\" \":\" mailbox\
    \ \";\" date-time \";\"\n                  / \"Conversion\" \":\" prohibition\n\
    \                  / \"Conversion-With-Loss\" \":\" prohibition\n            \
    \      / \"Requested-Delivery-Method\" \":\"\n                               \
    \   1*( labelled-integer )\n                  / \"Delivery-Date\" \":\" date-time\n\
    \                  / \"Discarded-X400-MTS-Extensions\" \":\"\n               \
    \                    1#( oid / labelled-integer )\n        prohibition     = \"\
    Prohibited\" / \"Allowed\"\n        mts-msg-id       = \"[\" global-id \";\" *text\
    \ \"]\"\n        mts-content-type = \"P2\" /  labelled-integer\n             \
    \           / object-identifer\n        priority        = \"normal\" / \"non-urgent\"\
    \ / \"urgent\"\n        ipn-body-format = ipn-description <CRLF>\n           \
    \             [ ipn-extra-information <CRLF> ]\n                        [ ipn-content-return\
    \ ]\n        ipn-description = ipn-receipt / ipn-non-receipt\n        ipn-receipt\
    \ = \"Your message to:\" preferred-recipient <CRLF>\n                 \"was received\
    \ at\" receipt-time <CRLF> <CRLF>\n                 \"This notification was generated\"\
    \n                 acknowledgement-mode <CRLF>\n                 \"The following\
    \ extra information was given:\" <CRLF>\n                 ipn-suppl <CRLF>\n \
    \       ipn-non-receipt \"Your message to:\"\n                preferred-recipient\
    \ <CRLF>\n                ipn-reason\n        ipn-reason = ipn-discarded / ipn-auto-forwarded\n\
    \        ipn-discarded = \"was discarded for the following reason:\"\n       \
    \                 discard-reason <CRLF>\n        ipn-auto-forwarded = \"was automatically\
    \ forwarded.\" <CRLF>\n                        [ \"The following comment was made:\"\
    \n                                auto-comment ]\n        ipn-extra-information\
    \ =\n                 \"The following information types were converted:\"\n  \
    \               encoded-info\n        ipn-content-return = \"The Original Message\
    \ is not available\"\n                        / \"The Original Message follows:\"\
    \n                          <CRLF> <CRLF> message\n        preferred-recipient\
    \ = mailbox\n        receipt-time        = date-time\n        auto-comment   \
    \     = printablestring\n        ipn-suppl           = printablestring\n     \
    \   discard-reason     = \"Expired\" / \"Obsoleted\" /\n                     \
    \           \"User Subscription Terminated\"\n        acknowledgement-mode = \"\
    Manually\" / \"Automatically\"\n        ipms-field = \"Obsoletes\" \":\" 1#msg-id\n\
    \                   / \"Expiry-Date\" \":\" date-time\n                   / \"\
    Reply-By\" \":\" date-time\n                   / \"Importance\" \":\" importance\n\
    \                   / \"Sensitivity\" \":\" sensitivity\n                   /\
    \ \"Autoforwarded\" \":\" boolean\n                   / \"Incomplete-Copy\" \"\
    :\"\n                   / \"Language\" \":\" language\n                   / \"\
    Message-Type\" \":\" message-type\n                   / \"Discarded-X400-IPMS-Extensions\"\
    \ \":\" 1#oid\n        importance      = \"low\" / \"normal\" / \"high\"\n   \
    \     sensitivity     = \"Personal\" / \"Private\" /\n                       \
    \        \"Company-Confidential\"\n        language        = 2*ALPHA [ language-description\
    \ ]\n        language-description = printable-string\n        message-type   \
    \ = \"Delivery Report\"\n                        / \"InterPersonal Notification\"\
    \n                        / \"Multiple Part\"\n        redirect-comment  =\n \
    \                [ \"Originally To:\" ] mailbox \"Redirected\"\n             \
    \    [ \"Again\" ] \"on\" date-time\n                 \"To:\"  redirection-reason\n\
    \        redirection-reason =\n                 \"Recipient Assigned Alternate\
    \ Recipient\"\n                 / \"Originator Requested Alternate Recipient\"\
    \n                 / \"Recipient MD Assigned Alternate Recipient\"\n        subject-line\
    \  = \"Delivery-Report\" \"(\" status \")\"\n                        [ \"for\"\
    \ destination ]\n        status        = \"success\" / \"failure\" / \"success\
    \ and failures\"\n        destination   = mailbox / \"MTA\" word\n        extended-heading\
    \ =\n            \"Prevent-NonDelivery-Report\" \":\"\n            / \"Generate-Delivery-Report\"\
    \ \":\"\n            / \"Alternate-Recipient\" \":\" prohibition\n           \
    \ / \"Disclose-Recipients\" \":\"  prohibition\n            / \"Content-Return\"\
    \ \":\" prohibition\n"
- title: Appendix F - Format of address mapping tables
  contents:
  - "Appendix F - Format of address mapping tables\n   1.  Global Mapping Information\n\
    \      The consistent operation of gateways which follow this\n      specification\
    \ relies of the existence of three globally defined\n      mappings:\n      1.\
    \   Domain Name Space -> O/R Address Space\n      2.   O/R Address Space -> Domain\
    \ Name Space\n      3.   Domain Name Space -> O/R Address of preferred gateway\n\
    \      All gateways conforming to this specification shall have access to\n  \
    \    these mappings.  The gateway may use standardised or private\n      mechanisms\
    \ to access this mapping information.\n      One means of distributing this information\
    \ is in three files.\n      This appendix defines a format for these files.  Other\n\
    \      standardised mechanisms to distribute the mapping information are\n   \
    \   expected.  In particular, mechanisms for using the Domain Name\n      Scheme,\
    \ and X.500 are planned.\n      The definition of  global mapping information\
    \ is being co-\n      ordinated by the COSINE-MHS project, on behalf of the Internet\
    \ and\n      other X.400 and RFC 822 users.  For information on accessing this\n\
    \      information contact:\n           COSINE MHS Project Team\n           SWITCH\n\
    \           Weinbergstrasse 18\n           8001 Zuerich\n           Switzerland\n\
    \           tel: +41 1 262 3143\n           fax: +41 1 262 3151\n           email:\n\
    \           C=ch;ADMD=arcom;PRMD=switch;O=switch;OU=cosine-mhs;\n           S=project-team\n\
    \           or\n           project-team@cosine-mhs.switch.ch\n   2.  Syntax Definitions\n\
    \      An address syntax is defined, which is compatible with the syntax\n   \
    \   used for 822.domains.  By representing the O/R addresses as\n      domains,\
    \ all lookups can be mechanically implemented as domain ->\n      domain mappings.\
    \  This syntax defined is initially for use in\n      table format, but the syntax\
    \ is defined in a manner which makes it\n      suitable to be adapted for  use\
    \ with the  Domain Name Service.\n      This syntax allows for a general representation\
    \ of O/R addresses,\n      so that it can be used in other applications.  Not\
    \ all attributes\n      are used in the table formats defined.\n      To allow\
    \ the mapping of null attributes  to be represented, the\n      pseudo-value \"\
    @\" (not a printable string character) is used to\n      indicate omission of\
    \ a level in the hierarchy.  This is distinct\n      from the form including the\
    \ element with no value, although a\n      correct X.400 implementation will interpret\
    \ both in the same\n      manner.\n      This syntax is not intended to be handled\
    \ by users.\n              dmn-or-address  = dmn-part *( \".\" dmn-part )\n  \
    \            dmn-part        = attribute \"$\" value\n              attribute\
    \       = standard-type\n                              / \"~\" dmn-printablestring\n\
    \              value           = dmn-printablestring\n                       \
    \       / \"@\"\n              dmn-printablestring =\n                       \
    \       = *( dmn-char / dmn-pair )\n              dmn-char        = <\"{\", \"\
    }\", \"*\", and any ps-char\n                                                \
    \      except \".\">\n              dmn-pair        = \"\\.\"\n      An example\
    \ usage:\n              ~ROLE$Big\\.Chief.ADMD$ATT.C$US\n              PRMD$DEC.ADMD$@.C$US\n\
    \      The first example illustrates quoting of a \".\", and the second\n    \
    \  omission of the ADMD level. There must be a strict ordering of all\n      components\
    \ in this table, with the most significant components on\n      the RHS.   This\
    \ allows the encoding to be treated as a domain.\n      Various further restrictions\
    \ are placed on the usage of dmn-or-\n      address in the address space mapping\
    \ tables.\n      1.   Only C, ADMD, PRMD, O, and up to four OUs may be used.\n\
    \      2.   No components shall be omitted from this hierarchy, although\n   \
    \        the hierarchy may terminate at any level.  If the mapping is\n      \
    \     to an omitted component, the \"@\" syntax is used.\n   3.  Table Lookups\n\
    \      When determining a match, there are aspects which apply to all\n      lookups.\
    \  Matches are always case independent. The key for all\n      three  tables is\
    \ a domain. The longest possible match shall be\n      obtained.  Suppose the\
    \ table has two entries with the following\n      keys:\n              K.L\n \
    \             J.K.L\n      Domain \"A.B.C\" will not return any matches.  Domain\
    \ \"I.J.K.L\" will\n      match the entry \"J.K.L:.\n   4.  Domain -> O/R Address\
    \ format\n      The BNF is:\n              domain-syntax \"#\" dmn-or-address\
    \ \"#\"\n      Note that the trailing \"#\" is used for clarity, as the dmn-or-\n\
    \      address syntax might lead to values with trailing blanks.  Lines\n    \
    \  staring with \"#\" are comments.\n              For example:\n            \
    \  AC.UK#PRMD$UK\\.AC.ADMD$GOLD 400.C$GB#\n              XEROX.COM#O$Xerox.ADMD$ATT.C$US#\n\
    \              GMD.DE#O$@.PRMD$GMD.ADMD$DBP.C$DE#\n      A domain is looked up\
    \ to determine the top levels of an O/R\n      Address.  Components of the domain\
    \ which are not matched are used\n      to build the remainder of the O/R address,\
    \ as described in Section\n      4.3.4.\n   5.  O/R Address -> Domain format\n\
    \      The syntax of this table is:\n              dmn-or-address \"#\" domain-syntax\
    \ \"#\"\n              For example:\n              #\n              # Mapping\
    \ table\n              #\n              PRMD$UK\\.AC.ADMD$GOLD 400.C$GB#AC.UK#\n\
    \      The O/R Address is used to generate a domain key.  It is important\n  \
    \    to order the components correctly, and to fill in missing\n      components\
    \ in the hierarchy.  Use of this mapping is described in\n      Section 4.3.2.\n\
    \   6.  Domain -> O/R Address of Gateway table\n      This uses the same format\
    \ as the domain -> O/R address mapping.\n      In this case, the two restrictions\
    \ (omitted components and\n      restrictions on components) do not apply.  Use\
    \ of this mapping is\n      described in Section 4.3.4.\n"
- title: Appendix G - Mapping with X.400(1984)
  contents:
  - "Appendix G - Mapping with X.400(1984)\n   This appendix defines modification\
    \ to the  mapping for use with\n   X.400(1984).\n   The X.400(1984) protocols\
    \ are a proper subset of X.400(1988).  When\n   mapping from X.400(1984) to RFC\
    \ 822, no changes to this specification\n   are needed.\n   When mapping from\
    \ RFC 822 to X.400(1984), no use can be made of 1988\n   specific features.  \
    \ No use of such features is made at the MTS\n   level.  One feature is used at\
    \ the IPMS level, and this must be\n   replaced by the RFC 987 approach.  All\
    \ header information which would\n   usually be mapped into the rfc-822-heading-list\
    \ extension, together\n   with any Comments: field in the RFC 822 header is mapped\
    \ into a\n   single IA5 body part, which is the first body part in the message.\n\
    \   This body part will start with the string \"RFC-822-Headers:\" as the\n  \
    \ first line.  The headers then follow this line.  This specification\n   requires\
    \ correct reverse mapping of this format, either from 1988 or\n   1984.\n   In\
    \ an environment where RFC 822 is of major importance, it may be\n   desirable\
    \ for downgrading to consider the case where the message was\n   originated in\
    \ an RFC 822 system, and mapped according to this\n   specification.  The rfc-822-heading-list\
    \ extension may be mapped\n   according to this appendix.\n   When parsing std-or,\
    \ the following restrictions must be observed:\n   -    Only the 84/88 attributes\
    \ identified in the table in\n        Section 4.2 are present.\n   -    No teletex\
    \ encoding is allowed.\n   If an address violates this, it should be treated as\
    \ an RFC 822\n   address, which will usually lead to encoding as a DDA \"RFC-822\"\
    .\n   It is possible that null attributes may be present in an O/R Address.\n\
    \   This is not legal in 1988, except for ADMD where the case is\n   explicitly\
    \ described in Section 4.3.5.  Null attributes are\n   deprecated (the attribute\
    \ should be omitted), and should therefore be\n   unusual.  However, some systems\
    \ generate them and rely on them.\n   Therefore, any null attribute shall be enoded\
    \ using the std-or\n   encoding (e.g., /O=/).\n   If a non-Teletex Common Name\
    \ (CN) is present, it should be mapped\n   onto a Domain Defined Attribute \"\
    Common\".  This is in line with RFC\n   1328 on X.400 1988 to 1984 downgrading\
    \ [Hardcastle-K92].\n"
- title: Appendix H - RFC 822 Extensions for X.400 access
  contents:
  - "Appendix H - RFC 822 Extensions for X.400 access\n   This appendix defines a\
    \ number of optional mappings which may be\n   provided to give access from RFC\
    \ 822 to a number of X.400 services.\n   These mappings are beyond the basic scope\
    \ of this specification.\n   There has been a definite demand to use extended\
    \ RFC 822 as a\n   mechanism to acccess X.400, and these extensions provide access\
    \ to\n   certain features.  If this functionality is provided, this appendix\n\
    \   shall be followed.  The following headings are defined:\n        extended-heading\
    \ =\n            \"Prevent-NonDelivery-Report\" \":\"\n            / \"Generate-Delivery-Report\"\
    \ \":\"\n            / \"Alternate-Recipient\" \":\" prohibition\n           \
    \ / \"Disclose-Recipients\" \":\"  prohibition\n            / \"Content-Return\"\
    \ \":\" prohibition\n   Prevent-NonDelivery-Report and Generate-Delivery-Report\
    \ allow setting\n   of MTS.PerRecipientSubmissionFields.originator-report-request.\
    \  The\n   setting will be the same for all recipients.\n   Alternate-Recipient,\
    \ Disclose-Recipients, and Content-Return allow\n   for override of the default\
    \ settings for MTS.PerMessageIndicators.\n"
- title: Appendix I - Conformance
  contents:
  - "Appendix I - Conformance\n   This appendix defines a number of options, which\
    \ a conforming gateway\n   should specify.  Conformance to this specification\
    \ shall not be\n   claimed if any of the mandatory features are not implemented.\
    \  In\n   particular:\n   -    Formats for all fields shall be followed.\n   -\
    \    Formats for subject lines, delivery reports and IPNs shall\n        be followed.\
    \   A system which followed the syntax, but\n        translated text into a language\
    \ other than english would be\n        conformant.\n   -    RFC 1137 shall not\
    \ be followed when mapping to SMTP or to\n        JNT Mail\n   -    All mappings\
    \ of trace shall be implemented.\n   -    There must be a mechanism to access\
    \ all three global\n        mappings.\n   A gateway should specify:\n   -    Which\
    \ 822-MTS protocols are supported.  The relevant\n        appendices must be followed\
    \ to claim support of a given\n        protocol: SMTP (A); JNT Mail (B); UUCP\
    \ (C).\n   -    Which X.400 versions  are supported (84 and/or 88).\n   -    The\
    \ means by which it can access the global mappings.\n        Currently, the tables\
    \ of the formats define in  Appendix F\n        is the only means available.\n\
    \   -    The approach taken when upper bounds are exceeded at the IPM\n      \
    \  level  (5.1.3)\n   -    The approach taken to return of contents (5.2)\n  \
    \ -    The approach taken to body parts which cannot be converted\n        (5.3.4)\n\
    \   -    The approach taken to multiple copies vs non-disclosure\n        (4.6.2.2)\n\
    \   The following are optional parts of this specification.  A conforming\n  \
    \ implementation should specify which of these it supports.\n   -    Generation\
    \ of extended RFC 822 fields is mandatory.\n        Optionally, they may be parsed\
    \ and mapped back to X.400.  A\n        gateway should should indicate if this\
    \ is done.\n   -    Support for the extension mappings of Appendix H.\n   -  \
    \  Support for returning illegal format content in a delivery\n        report\n\
    \   -    Which address interpretation heuristics are supported\n        (4.3.4.1)\n\
    \   -    If RFC 987 generated message ids are handled in a backwards\n       \
    \ compatible manner (4.7.3.6)\n"
- title: 'Appendix J - Change History: RFC 987, 1026, 1138, 1148'
  contents:
  - "Appendix J - Change History: RFC 987, 1026, 1138, 1148\n   RFC 987 was the original\
    \ document, and contained the key elements of\n   this specification.  It was\
    \ specific to X.400(1984).  RFC 1026\n   specified a small number of necessary\
    \ changes to RFC 987.\n   RFC 1138 was based on the RFC 987 work.  It contained\
    \ an editorial\n   error, and was reissued a few months later as RFC 1148.  RFC\
    \ 1148\n   will be referred to here, as it is the document which is widely\n \
    \  referred to elsewhere. The major goal of RFC 1148 was to upgrade RFC\n   987\
    \ to X.400(1988).  It did this, but did not obsolete RFC 987, which\n   was recommended\
    \ for use with X.400(1984).  This appendix summarises\n   the changes made in\
    \ going from RFC 987 to RFC 1148.\n   RFC 1148 noted the following about its upgrade\
    \ from RFC 987:\n   Unnecessary change is usually a bad idea.  Changes on the\
    \ RFC 822\n   side are avoided as far as possible,  so that RFC 822 users do not\n\
    \   see arbitrary differences between systems conforming to this\n   specification,\
    \ and those following RFC 987.  Changes on the X.400\n   side are minimised, but\
    \ are more  acceptable, due to the mapping onto\n   a new set of services and\
    \ protocols.\n   1.  Introduction\n      The model has shifted from a protocol\
    \ based mapping to a service\n      based mapping.  This has increased the generality\
    \ of the\n      specification, and improved the model.  This change affects the\n\
    \      entire document.\n      A restriction on scope has been added.\n   2. \
    \ Service Elements\n      -    The new service elements of X.400 are dealt with.\n\
    \      -    A clear distinction is made between origination and\n           reception\n\
    \   3.  Basic Mappings\n      -    Add teletex support\n      -    Add object\
    \ identifier support\n      -    Add labelled integer support\n      -    Make\
    \ PrintableString <-> ASCII mapping reversible\n      -    The printable string\
    \ mapping is aligned to the NBS mapping\n           derived from RFC 987.\n  \
    \ 4.  Addressing\n      -    Support for new addressing attributes\n      -  \
    \  The message ID mapping is changed to not be table driven\n   5.  Detailed Mappings\n\
    \      -    Define extended IPM Header, and use instead of second body\n     \
    \      part for RFC 822 extensions\n      -    Realignment of element names\n\
    \      -    New syntax for reports, simplifying the header and\n           introducing\
    \ a mandatory body format (the RFC 987 header\n           format was unusable)\n\
    \      -    Drop complex autoforwarded mapping\n      -    Add full mapping for\
    \ IP Notifications, defining a body\n           format\n      -    Adopt an MTS\
    \ Identifier syntax in line with the O/R Address\n           syntax\n      - \
    \   A new format for X400 Trace representation on the RFC 822\n           side\n\
    \   6.  Appendices\n      -    Move Appendix on restricted 822 mappings to a separate\
    \ RFC\n      -    Delete Phonenet and SMTP Appendixes\n"
- title: 'Appendix K - Change History: RFC 1148 to this Document'
  contents:
  - "Appendix K - Change History: RFC 1148 to this Document\n   1.  General\n    \
    \  -    The scope of the document was changed to cover X.400(1984),\n        \
    \   and so obsolete RFC 987.\n      -    Changes were made to allow usage to connect\
    \ RFC 822 networks\n           using X.400\n      -    Text was tightened to be\
    \ clear about optional and mandatory\n           aspects\n      -    A good deal\
    \ of clarification\n      -    A number of minor EBNF errors\n      -    Better\
    \ examples are given\n      -    Further X.400 upper bounds are handled correctly\n\
    \   2.  Basic Mappings\n      -    The encoding of object identifier is changed\
    \ slightly\n   3.  Addressing\n      -    A global mapping of domain to preferred\
    \ gateway is\n           introduced.\n      -    An overflow mechanism is defined\
    \ for RFC 822 addresses of\n           greater than 128 bytes.\n      -    Changes\
    \ were made to improve compatability with the PDAM on\n           writing O/R\
    \ Addresses.\n      +         The PD and Terminal Type keywords were aligned to\
    \ the\n                PDAM.  It is believed that minimal use has been made of\n\
    \                the RFC 1148 keywords.\n      +         P and A are allowed as\
    \ alternate keys for PRMD and ADMD\n      +         Where keywords are different,\
    \ the PDAM keywords are\n                alternatives on input.  This is mandatory.\n\
    \   4.  Detailed Mappings\n      -    The format of the Subject: lines is defined.\n\
    \      -    Illegal use (repetition) of the heading EXTENSION is\n           corrected,\
    \ and a new object identifier assigned.\n      -    The Delivery Report format\
    \ is extensively revised in light\n           of operational experience.\n   \
    \   -    The handling of redirects is significantly changed, as the\n        \
    \   previous mechanism did not work.\n   5.  Appendices\n      -    An SMTP appendix\
    \ is added, allowing optional use of the VRFY\n           command to improve probe\
    \ information.\n      -    Handling of JNT Mail Acknowledge-To is changed slightly.\n\
    \      -    A DDA JNT-MAIL is allowed on input.\n      -    The format definitions\
    \ of Appendix F are explained further,\n           and a third table definition\
    \ added.\n      -    An appendix on use with X.400(1984) is added.\n      -  \
    \  Optional extensions are defined to give RFC 822 access to\n           further\
    \ X.400 facilities.\n      -    An appendix on conformance is added.\n"
- title: References
  contents:
  - "References\n      CCITT88a.\n           CCITT, \"CCITT Recommendations X.408,\"\
    \ Message Handling\n           Systems: Encoded Information Type Conversion Rules,\
    \ December\n           1988.\n      CCITT/ISO88a.\n           CCITT/ISO, \"CCITT\
    \ Recommendations X.400/ ISO IS 10021-1,\"\n           Message Handling: System\
    \ and Service Overview , December\n           1988.\n      CCITT/ISO88b.\n   \
    \        CCITT/ISO, \"CCITT Recommendations X.420/ ISO IS 10021-7,\"\n       \
    \    Message Handling Systems: Interpersonal Messaging System,\n           December\
    \ 1988.\n      CCITT/ISO88c.\n           CCITT/ISO, \"CCITT Recommendations X.411/\
    \ ISO IS 10021-4,\"\n           Message Handling Systems: Message Transfer System:\
    \ Abstract\n           Service Definition and Procedures, December 1988.\n   \
    \   CCITT/ISO88d.\n           CCITT/ISO, \"Specification of Abstract Syntax Notation\
    \ One\n           (ASN.1),\" CCITT Recommendation X.208 / ISO IS 8824, December\n\
    \           1988.\n      CCITT/ISO91a.\n           CCITT/ISO, \"Representation\
    \ of O/R Addresses for Human\n           Usage,\" PDAM to CCITT X.401 / ISO/IEC\
    \ 10021-2, February\n           1991.\n      Crocker82a.\n           Crocker,\
    \ D., \"Standard of the Format of ARPA Internet Text\n           Messages,\" RFC\
    \ 822, UDEL, August 1982.\n      Hardcastle-K92.\n           Hardcastle-Kille,\
    \ S., \"X.400 1988 to 1984 downgrading,\" RFC\n           1328, UCL, May 1992.\n\
    \      Horton86a.\n           Horton, M., \"UUCP Mail Interchange Format Standard,\"\
    \ RFC\n           976, February 1986.\n      Kille84b.\n           Kille, S.,\
    \ \"Gatewaying between RFC 822 and JNT Mail,\" JNT\n           Mailgroup Note\
    \ 15, May 1984.\n      Kille84a.\n           Kille, S., (Editor), JNT Mail Protocol\
    \ (revision 1.0), Joint\n           Network Team, Rutherford Appleton Laboratory,\
    \ March 1984.\n      Kille86a.\n           Kille, S., \"Mapping Between X.400\
    \ and RFC 822,\" UK Academic\n           Community Report (MG.19) / RFC 987, June\
    \ 1986.\n      Kille87a.\n           Kille, S., \"Addendum to RFC 987,\" UK Academic\
    \ Community\n           Report (MG.23) / RFC 1026, August 1987.\n      Kille89a.\n\
    \           Kille, S., \"A String Encoding of Presentation Address,\" UCL\n  \
    \         Research Note 89/14, March 1989.\n      Kille89b.\n           Kille,\
    \ S., \"Mapping between full RFC 822 and RFC 822 with\n           restricted encoding,\"\
    \ RFC 1137, October 1989.\n      Kille90a.\n           Kille, S., \"Mapping Between\
    \ X.400(1988) / ISO 10021 and RFC\n           822,\" RFC 1148, March 1990.\n \
    \     Larmouth83a.\n           Larmouth, J., \"JNT Name Registration Technical\
    \ Guide,\"\n           Salford University Computer Centre, April 1983.\n     \
    \ Postel84a.\n           Postel J., and J. Reynolds, \"Domain Requirements,\"\
    \ RFC 920,\n           USC/Information Sciences Institute, October 1984.\n   \
    \   Postel82a.\n           Postel, J., \"Simple Mail Transfer Protocol\", RFC\
    \ 821,\n           USC/Information Sciences Institute, August 1982.\n      Rose85a.\n\
    \           Rose M., and E. Stefferud, \"Proposed Standard for Message\n     \
    \      Encapsulation,\" RFC 934, January 1985.\n      Systems85a.\n          \
    \ CEN/CENELEC/Information Technology/Working Group on Private\n           Message\
    \ Handling Systems, \"FUNCTIONAL STANDARD A/3222,\"\n           CEN/CLC/IT/WG/PMHS\
    \ N 17, October 1985.\n"
- title: SECURITY CONSIDERATIONS
  contents:
  - "SECURITY CONSIDERATIONS\n   Security issues are not discussed in this memo.\n"
- title: AUTHOR'S ADDRESS
  contents:
  - "AUTHOR'S ADDRESS\n   Steve Hardcastle-Kille\n   Department of Computer Science\n\
    \   University College London\n   Gower Street\n   WC1E 6BT\n   England\n   Phone:\
    \ +44-71-380-7294\n   EMail: S.Kille@CS.UCL.AC.UK\n"
