- title: __initial_text__
  contents:
  - "                         Transport Mappings for\n             the Simple Network\
    \ Management Protocol (SNMP)\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2002).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines the transport of Simple Network Management\n\
    \   Protocol (SNMP) messages over various protocols.  This document\n   obsoletes\
    \ RFC 1906.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ................................................\
    \    2\n   2. Definitions .................................................  \
    \  3\n   3. SNMP over UDP over IPv4 .....................................    7\n\
    \   3.1. Serialization .............................................    7\n  \
    \ 3.2. Well-known Values .........................................    7\n   4.\
    \ SNMP over OSI ...............................................    7\n   4.1.\
    \ Serialization .............................................    7\n   4.2. Well-known\
    \ Values .........................................    8\n   5. SNMP over DDP ...............................................\
    \    8\n   5.1. Serialization .............................................  \
    \  8\n   5.2. Well-known Values .........................................    8\n\
    \   5.3. Discussion of AppleTalk Addressing ........................    9\n  \
    \ 5.3.1. How to Acquire NBP names ................................    9\n   5.3.2.\
    \ When to Turn NBP names into DDP addresses ...............   10\n   5.3.3. How\
    \ to Turn NBP names into DDP addresses ................   10\n   5.3.4. What if\
    \ NBP is broken ...................................   10\n   6. SNMP over IPX\
    \ ...............................................   11\n   6.1. Serialization\
    \ .............................................   11\n   6.2. Well-known Values\
    \ .........................................   11\n   7. Proxy to SNMPv1 .............................................\
    \   12\n   8. Serialization using the Basic Encoding Rules ................  \
    \ 12\n   8.1. Usage Example .............................................   13\n\
    \   9. Notice on Intellectual Property .............................   14\n  \
    \ 10. Acknowledgments ............................................   14\n   11.\
    \ IANA Considerations ........................................   15\n   12. Security\
    \ Considerations ....................................   16\n   13. References\
    \ .................................................   16\n   13.1. Normative References\
    \ .....................................   16\n   13.2. Informative References\
    \ ...................................   17\n   14. Changes from RFC 1906 ......................................\
    \   18\n   15. Editor's Address ...........................................  \
    \ 18\n   16. Full Copyright Statement ...................................   19\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   For a detailed overview of the documents that describe the\
    \ current\n   Internet-Standard Management Framework, please refer to section\
    \ 7 of\n   RFC 3410 [RFC3410].\n   Managed objects are accessed via a virtual\
    \ information store, termed\n   the Management Information Base or MIB.  MIB objects\
    \ are generally\n   accessed through the Simple Network Management Protocol (SNMP).\n\
    \   Objects in the MIB are defined using the mechanisms defined in the\n   Structure\
    \ of Management Information (SMI).  This memo specifies a MIB\n   module that\
    \ is compliant to the SMIv2, which is described in STD 58,\n   RFC 2578 [RFC2578],\
    \ STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580\n   [RFC2580].\n   This document,\
    \ Transport Mappings for the Simple Network Management\n   Protocol, defines how\
    \ the management protocol [RFC3416] may be\n   carried over a variety of protocol\
    \ suites.  It is the purpose of this\n   document to define how the SNMP maps\
    \ onto an initial set of transport\n   domains.  At the time of this writing,\
    \ work was in progress to define\n   an IPv6 mapping, described in [RFC3419].\
    \  Other mappings may be\n   defined in the future.\n   Although several mappings\
    \ are defined, the mapping onto UDP over IPv4\n   is the preferred mapping for\
    \ systems supporting IPv4.  Systems\n   implementing IPv4 MUST implement the mapping\
    \ onto UDP over IPv4.  To\n   maximize interoperability, systems supporting other\
    \ mappings SHOULD\n   also provide for access via the UDP over IPv4 mapping.\n\
    \   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\"\
    ,\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in\
    \ this\n   document are to be interpreted as described in BCP 14, RFC 2119\n \
    \  [RFC2119].\n"
- title: 2.  Definitions
  contents:
  - "2.  Definitions\n   SNMPv2-TM DEFINITIONS ::= BEGIN\n   IMPORTS\n       MODULE-IDENTITY,\
    \ OBJECT-IDENTITY,\n       snmpModules, snmpDomains, snmpProxys\n           FROM\
    \ SNMPv2-SMI\n       TEXTUAL-CONVENTION\n           FROM SNMPv2-TC;\n   snmpv2tm\
    \ MODULE-IDENTITY\n       LAST-UPDATED \"200210160000Z\"\n       ORGANIZATION\
    \ \"IETF SNMPv3 Working Group\"\n       CONTACT-INFO\n               \"WG-EMail:\
    \   snmpv3@lists.tislabs.com\n                Subscribe:  snmpv3-request@lists.tislabs.com\n\
    \                Co-Chair:   Russ Mundy\n                            Network Associates\
    \ Laboratories\n                postal:     15204 Omega Drive, Suite 300\n   \
    \                         Rockville, MD 20850-4601\n                         \
    \   USA\n                EMail:      mundy@tislabs.com\n                phone:\
    \      +1 301 947-7107\n                Co-Chair:   David Harrington\n       \
    \                     Enterasys Networks\n                postal:     35 Industrial\
    \ Way\n                            P. O. Box 5005\n                          \
    \  Rochester, NH 03866-5005\n                            USA\n               \
    \ EMail:      dbh@enterasys.com\n                phone:      +1 603 337-2614\n\
    \                Editor:     Randy Presuhn\n                            BMC Software,\
    \ Inc.\n                postal:     2141 North First Street\n                \
    \            San Jose, CA 95131\n                            USA\n           \
    \     EMail:      randy_presuhn@bmc.com\n                phone:      +1 408 546-1006\"\
    \n       DESCRIPTION\n               \"The MIB module for SNMP transport mappings.\n\
    \                Copyright (C) The Internet Society (2002). This\n           \
    \     version of this MIB module is part of RFC 3417;\n                see the\
    \ RFC itself for full legal notices.\n               \"\n       REVISION     \"\
    200210160000Z\"\n       DESCRIPTION\n               \"Clarifications, published\
    \ as RFC 3417.\"\n       REVISION    \"199601010000Z\"\n       DESCRIPTION\n \
    \              \"Clarifications, published as RFC 1906.\"\n       REVISION   \
    \ \"199304010000Z\"\n       DESCRIPTION\n               \"The initial version,\
    \ published as RFC 1449.\"\n       ::= { snmpModules 19 }\n   -- SNMP over UDP\
    \ over IPv4\n   snmpUDPDomain  OBJECT-IDENTITY\n       STATUS     current\n  \
    \     DESCRIPTION\n               \"The SNMP over UDP over IPv4 transport domain.\n\
    \               The corresponding transport address is of type\n             \
    \  SnmpUDPAddress.\"\n       ::= { snmpDomains 1 }\n   SnmpUDPAddress ::= TEXTUAL-CONVENTION\n\
    \       DISPLAY-HINT \"1d.1d.1d.1d/2d\"\n       STATUS       current\n       DESCRIPTION\n\
    \               \"Represents a UDP over IPv4 address:\n                  octets\
    \   contents        encoding\n                   1-4     IP-address      network-byte\
    \ order\n                   5-6     UDP-port        network-byte order\n     \
    \          \"\n       SYNTAX       OCTET STRING (SIZE (6))\n   -- SNMP over OSI\n\
    \   snmpCLNSDomain OBJECT-IDENTITY\n       STATUS     current\n       DESCRIPTION\n\
    \               \"The SNMP over CLNS transport domain.\n               The corresponding\
    \ transport address is of type\n               SnmpOSIAddress.\"\n       ::= {\
    \ snmpDomains 2 }\n   snmpCONSDomain OBJECT-IDENTITY\n       STATUS     current\n\
    \       DESCRIPTION\n               \"The SNMP over CONS transport domain.\n \
    \              The corresponding transport address is of type\n              \
    \ SnmpOSIAddress.\"\n       ::= { snmpDomains 3 }\n   SnmpOSIAddress ::= TEXTUAL-CONVENTION\n\
    \       DISPLAY-HINT \"*1x:/1x:\"\n       STATUS       current\n       DESCRIPTION\n\
    \               \"Represents an OSI transport-address:\n             octets  \
    \ contents           encoding\n                1     length of NSAP     'n' as\
    \ an unsigned-integer\n                                            (either 0 or\
    \ from 3 to 20)\n             2..(n+1) NSAP                concrete binary representation\n\
    \             (n+2)..m TSEL                string of (up to 64) octets\n     \
    \          \"\n       SYNTAX       OCTET STRING (SIZE (1 | 4..85))\n   -- SNMP\
    \ over DDP\n   snmpDDPDomain  OBJECT-IDENTITY\n       STATUS     current\n   \
    \    DESCRIPTION\n               \"The SNMP over DDP transport domain.  The corresponding\n\
    \               transport address is of type SnmpNBPAddress.\"\n       ::= { snmpDomains\
    \ 4 }\n   SnmpNBPAddress ::= TEXTUAL-CONVENTION\n       STATUS       current\n\
    \       DESCRIPTION\n               \"Represents an NBP name:\n            octets\
    \        contents          encoding\n               1          length of object\
    \  'n' as an unsigned integer\n             2..(n+1)     object            string\
    \ of (up to 32) octets\n              n+2         length of type    'p' as an\
    \ unsigned integer\n         (n+3)..(n+2+p)   type              string of (up\
    \ to 32) octets\n             n+3+p        length of zone    'q' as an unsigned\
    \ integer\n       (n+4+p)..(n+3+p+q) zone              string of (up to 32) octets\n\
    \               For comparison purposes, strings are\n               case-insensitive.\
    \ All strings may contain any octet\n               other than 255 (hex ff).\"\
    \n       SYNTAX       OCTET STRING (SIZE (3..99))\n   -- SNMP over IPX\n   snmpIPXDomain\
    \  OBJECT-IDENTITY\n       STATUS     current\n       DESCRIPTION\n          \
    \     \"The SNMP over IPX transport domain.  The corresponding\n             \
    \  transport address is of type SnmpIPXAddress.\"\n       ::= { snmpDomains 5\
    \ }\n   SnmpIPXAddress ::= TEXTUAL-CONVENTION\n       DISPLAY-HINT \"4x.1x:1x:1x:1x:1x:1x.2d\"\
    \n       STATUS       current\n       DESCRIPTION\n               \"Represents\
    \ an IPX address:\n                  octets   contents            encoding\n \
    \                  1-4     network-number      network-byte order\n          \
    \         5-10    physical-address    network-byte order\n                  11-12\
    \    socket-number       network-byte order\n               \"\n       SYNTAX\
    \       OCTET STRING (SIZE (12))\n   -- for proxy to SNMPv1 (RFC 1157)\n   rfc1157Proxy\
    \   OBJECT IDENTIFIER ::= { snmpProxys 1 }\n   rfc1157Domain  OBJECT-IDENTITY\n\
    \       STATUS     deprecated\n       DESCRIPTION\n               \"The transport\
    \ domain for SNMPv1 over UDP over IPv4.\n               The corresponding transport\
    \ address is of type\n               SnmpUDPAddress.\"\n       ::= { rfc1157Proxy\
    \ 1 }\n   --  ::= { rfc1157Proxy 2 }            this OID is obsolete\n   END\n"
- title: 3.  SNMP over UDP over IPv4
  contents:
  - "3.  SNMP over UDP over IPv4\n   This is the preferred transport mapping.\n"
- title: 3.1.  Serialization
  contents:
  - "3.1.  Serialization\n   Each instance of a message is serialized (i.e., encoded\
    \ according to\n   the convention of [BER]) onto a single UDP [RFC768] over IPv4\n\
    \   [RFC791] datagram, using the algorithm specified in Section 8.\n"
- title: 3.2.  Well-known Values
  contents:
  - "3.2.  Well-known Values\n   It is suggested that administrators configure their\
    \ SNMP entities\n   supporting command responder applications to listen on UDP\
    \ port 161.\n   Further, it is suggested that SNMP entities supporting notification\n\
    \   receiver applications be configured to listen on UDP port 162.\n   When an\
    \ SNMP entity uses this transport mapping, it must be capable\n   of accepting\
    \ messages up to and including 484 octets in size.  It is\n   recommended that\
    \ implementations be capable of accepting messages of\n   up to 1472 octets in\
    \ size.  Implementation of larger values is\n   encouraged whenever possible.\n"
- title: 4.  SNMP over OSI
  contents:
  - "4.  SNMP over OSI\n   This is an optional transport mapping.\n"
- title: 4.1.  Serialization
  contents:
  - "4.1.  Serialization\n   Each instance of a message is serialized onto a single\
    \ TSDU [IS8072]\n   [IS8072A] for the OSI Connectionless-mode Transport Service\
    \ (CLTS),\n   using the algorithm specified in Section 8.\n"
- title: 4.2.  Well-known Values
  contents:
  - "4.2.  Well-known Values\n   It is suggested that administrators configure their\
    \ SNMP entities\n   supporting command responder applications to listen on transport\n\
    \   selector \"snmp-l\" (which consists of six ASCII characters), when\n   using\
    \ a CL-mode network service to realize the CLTS.  Further, it is\n   suggested\
    \ that SNMP entities supporting notification receiver\n   applications be configured\
    \ to listen on transport selector \"snmpt-l\"\n   (which consists of seven ASCII\
    \ characters, six letters and a hyphen)\n   when using a CL-mode network service\
    \ to realize the CLTS.  Similarly,\n   when using a CO-mode network service to\
    \ realize the CLTS, the\n   suggested transport selectors are \"snmp-o\" and \"\
    snmpt-o\", for command\n   responders and notification receivers, respectively.\n\
    \   When an SNMP entity uses this transport mapping, it must be capable\n   of\
    \ accepting messages that are at least 484 octets in size.\n   Implementation\
    \ of larger values is encouraged whenever possible.\n"
- title: 5.  SNMP over DDP
  contents:
  - "5.  SNMP over DDP\n   This is an optional transport mapping.\n"
- title: 5.1.  Serialization
  contents:
  - "5.1.  Serialization\n   Each instance of a message is serialized onto a single\
    \ DDP datagram\n   [APPLETALK], using the algorithm specified in Section 8.\n"
- title: 5.2.  Well-known Values
  contents:
  - "5.2.  Well-known Values\n   SNMP messages are sent using DDP protocol type 8.\
    \  SNMP entities\n   supporting command responder applications listen on DDP socket\
    \ number\n   8, while SNMP entities supporting notification receiver applications\n\
    \   listen on DDP socket number 9.\n   Administrators must configure their SNMP\
    \ entities supporting command\n   responder applications to use NBP type \"SNMP\
    \ Agent\" (which consists\n   of ten ASCII characters) while those supporting\
    \ notification receiver\n   applications must be configured to use NBP type \"\
    SNMP Trap Handler\"\n   (which consists of seventeen ASCII characters).\n   The\
    \ NBP name for SNMP entities supporting command responders and\n   notification\
    \ receivers should be stable - NBP names should not change\n   any more often\
    \ than the IP address of a typical TCP/IP node.  It is\n   suggested that the\
    \ NBP name be stored in some form of stable storage.\n   When an SNMP entity uses\
    \ this transport mapping, it must be capable\n   of accepting messages that are\
    \ at least 484 octets in size.\n   Implementation of larger values is encouraged\
    \ whenever possible.\n"
- title: 5.3.  Discussion of AppleTalk Addressing
  contents:
  - "5.3.  Discussion of AppleTalk Addressing\n   The AppleTalk protocol suite has\
    \ certain features not manifest in the\n   TCP/IP suite.  AppleTalk's naming strategy\
    \ and the dynamic nature of\n   address assignment can cause problems for SNMP\
    \ entities that wish to\n   manage AppleTalk networks.  TCP/IP nodes have an associated\
    \ IP\n   address which distinguishes each from the other.  In contrast,\n   AppleTalk\
    \ nodes generally have no such characteristic.  The network-\n   level address,\
    \ while often relatively stable, can change at every\n   reboot (or more frequently).\n\
    \   Thus, when SNMP is mapped over DDP, nodes are identified by a \"name\",\n\
    \   rather than by an \"address\".  Hence, all AppleTalk nodes that\n   implement\
    \ this mapping are required to respond to NBP lookups and\n   confirms (e.g.,\
    \ implement the NBP protocol stub), which guarantees\n   that a mapping from NBP\
    \ name to DDP address will be possible.\n   In determining the SNMP identity to\
    \ register for an SNMP entity, it\n   is suggested that the SNMP identity be a\
    \ name which is associated\n   with other network services offered by the machine.\n\
    \   NBP lookups, which are used to map NBP names into DDP addresses, can\n   cause\
    \ large amounts of network traffic as well as consume CPU\n   resources.  It is\
    \ also the case that the ability to perform an NBP\n   lookup is sensitive to\
    \ certain network disruptions (such as zone\n   table inconsistencies) which would\
    \ not prevent direct AppleTalk\n   communications between two SNMP entities.\n\
    \   Thus, it is recommended that NBP lookups be used infrequently,\n   primarily\
    \ to create a cache of name-to-address mappings.  These\n   cached mappings should\
    \ then be used for any further SNMP traffic.  It\n   is recommended that SNMP\
    \ entities supporting command generator\n   applications should maintain this\
    \ cache between reboots.  This\n   caching can help minimize network traffic,\
    \ reduce CPU load on the\n   network, and allow for (some amount of) network trouble\
    \ shooting when\n   the basic name-to-address translation mechanism is broken.\n"
- title: 5.3.1.  How to Acquire NBP names
  contents:
  - "5.3.1.  How to Acquire NBP names\n   An SNMP entity supporting command generator\
    \ applications may have a\n   pre-configured list of names of \"known\" SNMP entities\
    \ supporting\n   command responder applications.  Similarly, an SNMP entity supporting\n\
    \   command generator or notification receiver applications might\n   interact\
    \ with an operator.  Finally, an SNMP entity supporting\n   command generator\
    \ or notification receiver applications might\n   communicate with all SNMP entities\
    \ supporting command responder or\n   notification originator applications in\
    \ a set of zones or networks.\n"
- title: 5.3.2.  When to Turn NBP names into DDP addresses
  contents:
  - "5.3.2.  When to Turn NBP names into DDP addresses\n   When an SNMP entity uses\
    \ a cache entry to address an SNMP packet, it\n   should attempt to confirm the\
    \ validity mapping, if the mapping hasn't\n   been confirmed within the last T1\
    \ seconds.  This cache entry\n   lifetime, T1, has a minimum, default value of\
    \ 60 seconds, and should\n   be configurable.\n   An SNMP entity supporting a\
    \ command generator application may decide\n   to prime its cache of names prior\
    \ to actually communicating with\n   another SNMP entity.  In general, it is expected\
    \ that such an entity\n   may want to keep certain mappings \"more current\" than\
    \ other mappings,\n   e.g., those nodes which represent the network infrastructure\
    \ (e.g.,\n   routers) may be deemed \"more important\".\n   Note that an SNMP\
    \ entity supporting command generator applications\n   should not prime its entire\
    \ cache upon initialization - rather, it\n   should attempt resolutions over an\
    \ extended period of time (perhaps\n   in some pre-determined or configured priority\
    \ order).  Each of these\n   resolutions might, in fact, be a wildcard lookup\
    \ in a given zone.\n   An SNMP entity supporting command responder applications\
    \ must never\n   prime its cache.  When generating a response, such an entity\
    \ does not\n   need to confirm a cache entry.  An SNMP entity supporting\n   notification\
    \ originator applications should do NBP lookups (or\n   confirms) only when it\
    \ needs to send an SNMP trap or inform.\n"
- title: 5.3.3.  How to Turn NBP names into DDP addresses
  contents:
  - "5.3.3.  How to Turn NBP names into DDP addresses\n   If the only piece of information\
    \ available is the NBP name, then an\n   NBP lookup should be performed to turn\
    \ that name into a DDP address.\n   However, if there is a piece of stale information,\
    \ it can be used as\n   a hint to perform an NBP confirm (which sends a unicast\
    \ to the\n   network address which is presumed to be the target of the name\n\
    \   lookup) to see if the stale information is, in fact, still valid.\n   An NBP\
    \ name to DDP address mapping can also be confirmed implicitly\n   using only\
    \ SNMP transactions.  For example, an SNMP entity supporting\n   command generator\
    \ applications issuing a retrieval operation could\n   also retrieve the relevant\
    \ objects from the NBP group [RFC1742] for\n   the SNMP entity supporting the\
    \ command responder application.  This\n   information can then be correlated\
    \ with the source DDP address of the\n   response.\n"
- title: 5.3.4.  What if NBP is broken
  contents:
  - "5.3.4.  What if NBP is broken\n   Under some circumstances, there may be connectivity\
    \ between two SNMP\n   entities, but the NBP mapping machinery may be broken,\
    \ e.g.,\n   o  the NBP FwdReq (forward NBP lookup onto local attached network)\n\
    \      mechanism might be broken at a router on the other entity's\n      network;\
    \ or,\n   o  the NBP BrRq (NBP broadcast request) mechanism might be broken at\n\
    \      a router on the entity's own network; or,\n   o  NBP might be broken on\
    \ the other entity's node.\n   An SNMP entity supporting command generator applications\
    \ which is\n   dedicated to AppleTalk management might choose to alleviate some\
    \ of\n   these failures by directly implementing the router portion of NBP.\n\
    \   For example, such an entity might already know all the zones on the\n   AppleTalk\
    \ internet and the networks on which each zone appears.\n   Given an NBP lookup\
    \ which fails, the entity could send an NBP FwdReq\n   to the network in which\
    \ the SNMP entity supporting the command\n   responder or notification originator\
    \ application was last located.\n   If that failed, the station could then send\
    \ an NBP LkUp (NBP lookup\n   packet) as a directed (DDP) multicast to each network\
    \ number on that\n   network.  Of the above (single) failures, this combined approach\
    \ will\n   solve the case where either the local router's BrRq-to-FwdReq\n   mechanism\
    \ is broken or the remote router's FwdReq-to-LkUp mechanism\n   is broken.\n"
- title: 6.  SNMP over IPX
  contents:
  - "6.  SNMP over IPX\n   This is an optional transport mapping.\n"
- title: 6.1.  Serialization
  contents:
  - "6.1.  Serialization\n   Each instance of a message is serialized onto a single\
    \ IPX datagram\n   [NOVELL], using the algorithm specified in Section 8.\n"
- title: 6.2.  Well-known Values
  contents:
  - "6.2.  Well-known Values\n   SNMP messages are sent using IPX packet type 4 (i.e.,\
    \ Packet Exchange\n   Protocol).\n   It is suggested that administrators configure\
    \ their SNMP entities\n   supporting command responder applications to listen\
    \ on IPX socket\n   36879 (900f hexadecimal).  Further, it is suggested that those\n\
    \   supporting notification receiver applications be configured to listen\n  \
    \ on IPX socket 36880 (9010 hexadecimal).\n   When an SNMP entity uses this transport\
    \ mapping, it must be capable\n   of accepting messages that are at least 546\
    \ octets in size.\n   Implementation of larger values is encouraged whenever possible.\n"
- title: 7.  Proxy to SNMPv1
  contents:
  - "7.  Proxy to SNMPv1\n   Historically, in order to support proxy to SNMPv1, as\
    \ defined in\n   [RFC2576], it was deemed useful to define a transport domain,\n\
    \   rfc1157Domain, which indicates the transport mapping for SNMP\n   messages\
    \ as defined in [RFC1157].\n"
- title: 8.  Serialization using the Basic Encoding Rules
  contents:
  - "8.  Serialization using the Basic Encoding Rules\n   When the Basic Encoding\
    \ Rules [BER] are used for serialization:\n   (1)   When encoding the length field,\
    \ only the definite form is used;\n         use of the indefinite form encoding\
    \ is prohibited.  Note that\n         when using the definite-long form, it is\
    \ permissible to use\n         more than the minimum number of length octets necessary\
    \ to\n         encode the length field.\n   (2)   When encoding the value field,\
    \ the primitive form shall be used\n         for all simple types, i.e., INTEGER,\
    \ OCTET STRING, and OBJECT\n         IDENTIFIER (either IMPLICIT or explicit).\
    \  The constructed form\n         of encoding shall be used only for structured\
    \ types, i.e., a\n         SEQUENCE or an IMPLICIT SEQUENCE.\n   (3)   When encoding\
    \ an object whose syntax is described using the\n         BITS construct, the\
    \ value is encoded as an OCTET STRING, in\n         which all the named bits in\
    \ (the definition of) the bitstring,\n         commencing with the first bit and\
    \ proceeding to the last bit,\n         are placed in bits 8 (high order bit)\
    \ to 1 (low order bit) of\n         the first octet, followed by bits 8 to 1 of\
    \ each subsequent\n         octet in turn, followed by as many bits as are needed\
    \ of the\n         final subsequent octet, commencing with bit 8.  Remaining bits,\n\
    \         if any, of the final octet are set to zero on generation and\n     \
    \    ignored on receipt.\n   These restrictions apply to all aspects of ASN.1\
    \ encoding, including\n   the message wrappers, protocol data units, and the data\
    \ objects they\n   contain.\n"
- title: 8.1.  Usage Example
  contents:
  - "8.1.  Usage Example\n   As an example of applying the Basic Encoding Rules, suppose\
    \ one\n   wanted to encode an instance of the GetBulkRequest-PDU [RFC3416]:\n\
    \     [5] IMPLICIT SEQUENCE {\n             request-id      1414684022,\n    \
    \         non-repeaters   1,\n             max-repetitions 2,\n             variable-bindings\
    \ {\n                 { name sysUpTime,\n                   value { unSpecified\
    \ NULL } },\n                 { name ipNetToMediaPhysAddress,\n              \
    \     value { unSpecified NULL } },\n                 { name ipNetToMediaType,\n\
    \                   value { unSpecified NULL } }\n             }\n         }\n\
    \   Applying the BER, this may be encoded (in hexadecimal) as:\n   [5] IMPLICIT\
    \ SEQUENCE          a5 82 00 39\n       INTEGER                    02 04 54 52\
    \ 5d 76\n       INTEGER                    02 01 01\n       INTEGER          \
    \          02 01 02\n       SEQUENCE (OF)              30 2b\n           SEQUENCE\
    \               30 0b\n               OBJECT IDENTIFIER  06 07 2b 06 01 02 01\
    \ 01 03\n               NULL               05 00\n           SEQUENCE        \
    \       30 0d\n               OBJECT IDENTIFIER  06 09 2b 06 01 02 01 04 16 01\
    \ 02\n               NULL               05 00\n           SEQUENCE           \
    \    30 0d\n               OBJECT IDENTIFIER  06 09 2b 06 01 02 01 04 16 01 04\n\
    \               NULL               05 00\n   Note that the initial SEQUENCE in\
    \ this example was not encoded using\n   the minimum number of length octets.\
    \  (The first octet of the length,\n   82, indicates that the length of the content\
    \ is encoded in the next\n   two octets.)\n"
- title: 9.  Notice on Intellectual Property
  contents:
  - "9.  Notice on Intellectual Property\n   The IETF takes no position regarding\
    \ the validity or scope of any\n   intellectual property or other rights that\
    \ might be claimed to\n   pertain to the implementation or use of the technology\
    \ described in\n   this document or the extent to which any license under such\
    \ rights\n   might or might not be available; neither does it represent that it\n\
    \   has made any effort to identify any such rights.  Information on the\n   IETF's\
    \ procedures with respect to rights in standards-track and\n   standards-related\
    \ documentation can be found in BCP-11.  Copies of\n   claims of rights made available\
    \ for publication and any assurances of\n   licenses to be made available, or\
    \ the result of an attempt made to\n   obtain a general license or permission\
    \ for the use of such\n   proprietary rights by implementors or users of this\
    \ specification can\n   be obtained from the IETF Secretariat.\n   The IETF invites\
    \ any interested party to bring to its attention any\n   copyrights, patents or\
    \ patent applications, or other proprietary\n   rights which may cover technology\
    \ that may be required to practice\n   this standard.  Please address the information\
    \ to the IETF Executive\n   Director.\n"
- title: 10.  Acknowledgments
  contents:
  - "10.  Acknowledgments\n   This document is the product of the SNMPv3 Working Group.\
    \  Some\n   special thanks are in order to the following Working Group members:\n\
    \      Randy Bush\n      Jeffrey D. Case\n      Mike Daniele\n      Rob Frye\n\
    \      Lauren Heintz\n      Keith McCloghrie\n      Russ Mundy\n      David T.\
    \ Perkins\n      Randy Presuhn\n      Aleksey Romanov\n      Juergen Schoenwaelder\n\
    \      Bert Wijnen\n   This version of the document, edited by Randy Presuhn,\
    \ was initially\n   based on the work of a design team whose members were:\n \
    \     Jeffrey D. Case\n      Keith McCloghrie\n      David T. Perkins\n      Randy\
    \ Presuhn\n      Juergen Schoenwaelder\n   The previous versions of this document,\
    \ edited by Keith McCloghrie,\n   was the result of significant work by four major\
    \ contributors:\n      Jeffrey D. Case\n      Keith McCloghrie\n      Marshall\
    \ T. Rose\n      Steven Waldbusser\n   Additionally, the contributions of the\
    \ SNMPv2 Working Group to the\n   previous versions are also acknowledged.  In\
    \ particular, a special\n   thanks is extended for the contributions of:\n   \
    \   Alexander I. Alten\n      Dave Arneson\n      Uri Blumenthal\n      Doug Book\n\
    \      Kim Curran\n      Jim Galvin\n      Maria Greene\n      Iain Hanson\n \
    \     Dave Harrington\n      Nguyen Hien\n      Jeff Johnson\n      Michael Kornegay\n\
    \      Deirdre Kostick\n      David Levi\n      Daniel Mahoney\n      Bob Natale\n\
    \      Brian O'Keefe\n      Andrew Pearson\n      Dave Perkins\n      Randy Presuhn\n\
    \      Aleksey Romanov\n      Shawn Routhier\n      Jon Saperia\n      Juergen\
    \ Schoenwaelder\n      Bob Stewart\n      Kaj Tesink\n      Glenn Waters\n   \
    \   Bert Wijnen\n"
- title: 11.  IANA Considerations
  contents:
  - "11.  IANA Considerations\n   The SNMPv2-TM MIB module requires the allocation\
    \ of a single object\n   identifier for its MODULE-IDENTITY.  IANA has allocated\
    \ this object\n   identifier in the snmpModules subtree, defined in the SNMPv2-SMI\
    \ MIB\n   module.\n"
- title: 12.  Security Considerations
  contents:
  - "12.  Security Considerations\n   SNMPv1 by itself is not a secure environment.\
    \  Even if the network\n   itself is secure (for example by using IPSec), even\
    \ then, there is no\n   control as to who on the secure network is allowed to\
    \ access and\n   GET/SET (read/change) the objects accessible through a command\n\
    \   responder application.\n   It is recommended that the implementors consider\
    \ the security\n   features as provided by the SNMPv3 framework.  Specifically,\
    \ the use\n   of the User-based Security Model STD 62, RFC 3414 [RFC3414] and\
    \ the\n   View-based Access Control Model STD 62, RFC 3415 [RFC3415] is\n   recommended.\n\
    \   It is then a customer/user responsibility to ensure that the SNMP\n   entity\
    \ giving access to a MIB is properly configured to give access\n   to the objects\
    \ only to those principals (users) that have legitimate\n   rights to indeed GET\
    \ or SET (change) them.\n"
- title: 13.  References
  contents:
  - '13.  References

    '
- title: 13.1.  Normative References
  contents:
  - "13.1.  Normative References\n   [BER]       Information processing systems -\
    \ Open Systems\n               Interconnection - Specification of Basic Encoding\
    \ Rules\n               for Abstract Syntax Notation One (ASN.1), International\n\
    \               Organization for Standardization.  International Standard\n  \
    \             8825, December 1987.\n   [IS8072]    Information processing systems\
    \ - Open Systems\n               Interconnection - Transport Service Definition,\n\
    \               International Organization for Standardization.\n            \
    \   International Standard 8072, June 1986.\n   [IS8072A]   Information processing\
    \ systems - Open Systems\n               Interconnection - Transport Service Definition\
    \ - Addendum\n               1: Connectionless-mode Transmission, International\n\
    \               Organization for Standardization.  International Standard\n  \
    \             8072/AD 1, December 1986.\n   [RFC768]    Postel, J., \"User Datagram\
    \ Protocol\", STD 6, RFC 768,\n               August 1980.\n   [RFC791]    Postel,\
    \ J., \"Internet Protocol\", STD 5, RFC 791,\n               September 1981.\n\
    \   [RFC2119]   Bradner, S., \"Key words for use in RFCs to Indicate\n       \
    \        Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2578]   McCloghrie,\
    \ K., Perkins, D., Schoenwaelder, J., Case, J.,\n               Rose, M. and S.\
    \ Waldbusser, \"Structure of Management\n               Information Version 2\
    \ (SMIv2)\", STD 58, RFC 2578, April\n               1999.\n   [RFC2579]   McCloghrie,\
    \ K., Perkins, D., Schoenwaelder, J., Case, J.,\n               Rose, M. and S.\
    \ Waldbusser, \"Textual Conventions for\n               SMIv2\", STD 58, RFC 2579,\
    \ April 1999.\n   [RFC2580]   McCloghrie, K., Perkins, D., Schoenwaelder, J.,\
    \ Case, J.,\n               Rose, M. and S. Waldbusser, \"Conformance Statements\
    \ for\n               SMIv2\", STD 58, RFC 2580, April 1999.\n   [RFC3414]   Blumenthal,\
    \ U. and B. Wijnen, \"The User-Based Security\n               Model (USM) for\
    \ Version 3 of the Simple Network\n               Management Protocol (SNMPv3)\"\
    , STD 62, RFC 3414, December\n               2002.\n   [RFC3415]   Wijnen, B.,\
    \ Presuhn, R. and K. McCloghrie, \"View-based\n               Access Control Model\
    \ (VACM) for the Simple Network\n               Management Protocol (SNMP)\",\
    \ STD 62, RFC 3415, December\n               2002.\n   [RFC3416]   Presuhn, R.,\
    \ Case, J., McCloghrie, K., Rose, M. and S.\n               Waldbusser, \"Version\
    \ 2 of the Protocol Operations for the\n               Simple Network Management\
    \ Protocol (SNMP)\", STD 62, RFC\n               3416, December 2002.\n"
- title: 13.2.  Informative References
  contents:
  - "13.2.  Informative References\n   [APPLETALK] Sidhu, G., Andrews, R. and A. Oppenheimer,\
    \ Inside\n               AppleTalk (second edition).  Addison-Wesley, 1990.\n\
    \   [NOVELL]    Network System Technical Interface Overview.  Novell,\n      \
    \         Inc., June 1989.\n   [RFC1157]   Case, J., Fedor, M., Schoffstall, M.\
    \ and J. Davin,\n               \"Simple Network Management Protocol\", STD 15,\
    \ RFC 1157,\n               May 1990.\n   [RFC1742]   Waldbusser, S. and K. Frisa,\
    \ \"AppleTalk Management\n               Information Base II\", RFC 1742, January\
    \ 1995.\n   [RFC2576]   Frye, R., Levi, D., Routhier, S. and B. Wijnen,\n    \
    \           \"Coexistence between Version 1, Version 2, and Version 3\n      \
    \         of the Internet-Standard Network Management Framework\",\n         \
    \      RFC 2576, March 2000.\n   [RFC3410]   Case, J., Mundy, R., Partain, D.\
    \ and B. Stewart,\n               \"Introduction and Applicability Statements\
    \ for Internet-\n               Standard Management Framework\", RFC 3410, December\
    \ 2002.\n   [RFC3419]   Daniele, M. and J. Schoenwaelder, \"Textual Conventions\n\
    \               for Transport Addresses\", RFC 3419, November 2002.\n"
- title: 14.  Changes from RFC 1906
  contents:
  - "14.  Changes from RFC 1906\n   This document differs from RFC 1906 only in editorial\
    \ improvements.\n   The protocol is unchanged.\n"
- title: 15.  Editor's Address
  contents:
  - "15.  Editor's Address\n   Randy Presuhn\n   BMC Software, Inc.\n   2141 North\
    \ First Street\n   San Jose, CA 95131\n   USA\n   Phone: +1 408 546-1006\n   EMail:\
    \ randy_presuhn@bmc.com\n"
- title: 16.  Full Copyright Statement
  contents:
  - "16.  Full Copyright Statement\n   Copyright (C) The Internet Society (2002).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
