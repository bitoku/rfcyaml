- title: __initial_text__
  contents:
  - "       Basic Password Exchange within the Flexible Authentication\n   via Secure\
    \ Tunneling Extensible Authentication Protocol (EAP-FAST)\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\
    \ in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n\
    \   Please review these documents carefully, as they describe your rights\n  \
    \ and restrictions with respect to this document.\n   This document may contain\
    \ material from IETF Documents or IETF\n   Contributions published or made publicly\
    \ available before November\n   10, 2008.  The person(s) controlling the copyright\
    \ in some of this\n   material may not have granted the IETF Trust the right to\
    \ allow\n   modifications of such material outside the IETF Standards Process.\n\
    \   Without obtaining an adequate license from the person(s) controlling\n   the\
    \ copyright in such materials, this document may not be modified\n   outside the\
    \ IETF Standards Process, and derivative works of it may\n   not be created outside\
    \ the IETF Standards Process, except to format\n   it for publication as an RFC\
    \ or to translate it into languages other\n   than English.\n"
- title: IESG Note
  contents:
  - "IESG Note\n   EAP-FAST has been implemented by many vendors and it is used in\
    \ the\n   Internet.  Publication of this specification is intended to promote\n\
    \   interoperability by documenting current use of existing EAP methods\n   within\
    \ EAP-FAST.\n   The EAP method EAP-FAST-GTC reuses the EAP type code assigned\
    \ to EAP-\n   GTC (6).  The reuse of previously assigned EAP Type Codes is\n \
    \  incompatible with EAP method negotiation as defined in RFC 3748.\n   Since\
    \ EAP-GTC does not support method-specific version negotiation,\n   the use of\
    \ EAP-FAST-GTC is implied when used inside the EAP-FAST\n   tunnel during authentication.\
    \  This behavior may cause problems in\n   implementations where the use of another\
    \ vendor's EAP-GTC is\n   required.  Since such support requires special case\
    \ execution of a\n   method within a tunnel, it also complicates implementations\
    \ that use\n   the same method code both within and outside of the tunnel method.\n\
    \   If EAP-FAST were to be designed today, these difficulties could be\n   avoided\
    \ by utilization of unique EAP Type codes.  Given these issues,\n   assigned method\
    \ types must not be re-used with different meaning\n   inside tunneled methods\
    \ in the future.\n"
- title: Abstract
  contents:
  - "Abstract\n   The Flexible Authentication via Secure Tunneling Extensible\n  \
    \ Authentication Protocol (EAP-FAST) method enables secure\n   communication between\
    \ a peer and a server by using Transport Layer\n   Security (TLS) to establish\
    \ a mutually authenticated tunnel.  Within\n   this tunnel, a basic password exchange,\
    \ based on the Generic Token\n   Card method (EAP-GTC), may be executed to authenticate\
    \ the peer.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \      1.1. Specification Requirements .................................3\n  \
    \ 2. EAP-FAST GTC Authentication .....................................3\n   3.\
    \ Security Considerations .........................................7\n      3.1.\
    \ Security Claims ............................................7\n   4. IANA Considerations\
    \ .............................................8\n   5. Acknowledgments .................................................9\n\
    \   6. References ......................................................9\n  \
    \    6.1. Normative References .......................................9\n    \
    \  6.2. Informative References .....................................9\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   EAP-FAST [RFC4851] is an EAP method that can be used to\
    \ mutually\n   authenticate a peer and server.  This document describes the EAP-FAST\n\
    \   inner EAP method, EAP-FAST-GTC, which is used to authenticate the\n   peer\
    \ through a basic password exchange.  EAP-FAST-GTC was developed\n   to support\
    \ using cleartext passwords to authenticate to legacy user\n   databases, to facilitate\
    \ password change, and to support one time\n   password features such as new pin\
    \ mode.  Message exchanges, including\n   user credentials, are cleartext strings\
    \ transferred within the\n   encrypted TLS tunnel and thus are considered secure.\
    \  For historical\n   reasons, EAP-FAST-GTC uses EAP Type 6, originally allocated\
    \ to EAP-\n   GTC [RFC3748].  Note that EAP-FAST-GTC payloads used in EAP-FAST\n\
    \   require specific formatting and therefore will not necessarily be\n   compatible\
    \ with EAP-GTC mechanisms used outside of EAP-FAST.  To\n   avoid interference\
    \ between these two methods, EAP-FAST-GTC MUST NOT\n   be used outside an EAP-FAST\
    \ tunnel, and EAP-GTC MUST NOT be used\n   inside an EAP-FAST tunnel.  All EAP-FAST-GTC\
    \ packets sent within the\n   TLS tunnel must be encapsulated in EAP Payload TLVs,\
    \ described in\n   [RFC4851].\n   It is assumed that a reader of this document\
    \ is familiar with EAP-\n   FAST [RFC4851].\n"
- title: 1.1.  Specification Requirements
  contents:
  - "1.1.  Specification Requirements\n   The key words \"MUST\", \"MUST NOT\", \"\
    REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 2.  EAP-FAST GTC Authentication
  contents:
  - "2.  EAP-FAST GTC Authentication\n   All EAP-FAST-GTC packets inside EAP-FAST\
    \ other than the empty\n   acknowledgment packet MUST follow the \"LABEL=Value\"\
    \ format.  All\n   Labels are in ASCII text and SHALL NOT contain the space character.\n\
    \   Currently, three Labels are defined:\n   o  \"CHALLENGE\", the server request\
    \ packet MUST be in the form of\n      \"CHALLENGE=Value\", where Value is the\
    \ server challenge, such as\n      \"please enter your password\".\n   o  \"RESPONSE\"\
    , the peer response packet MUST be in the form of\n      \"RESPONSE=Value\", where\
    \ Value is the peer response.\n   o  \"E\", the server failure packet MUST be\
    \ in the form of \"E=Value\",\n      where Value is the error message generated\
    \ by the server.\n   If the peer or the server receives an EAP-FAST-GTC request\
    \ or\n   response that is not in the format specified above, it SHOULD fail\n\
    \   the authentication by sending a Result TLV with a failure.\n   After the TLS\
    \ encryption tunnel is established and EAP-FAST\n   Authentication phase 2 starts,\
    \ the EAP server sends an EAP-FAST-GTC\n   Request, which contains a server challenge.\
    \  The server challenge is\n   a displayable message for use by the peer to prompt\
    \ the user.\n   A peer MAY prompt the user for the user credentials, or decide\
    \ to use\n   the user credentials gained through some other means without\n  \
    \ prompting the user.  The peer sends the user credentials back in the\n   EAP-FAST-GTC\
    \ Response using the following format:\n      \"RESPONSE=user@example.com\\0secret\"\
    \n   where \"user@example.com\" is the actual username and \"secret\" is the\n\
    \   actual password.  The NULL character \"\\0\" is used to separate the\n   username\
    \ and password.\n   The username and password are included in a single message\
    \ in the\n   first response packet as an optimization by eliminating the inner\n\
    \   method EAP-Identity exchange to save an extra round trip.\n   Once the EAP-FAST\
    \ server receives the user credentials, it SHOULD\n   first validate the user\
    \ identity with the Initiator ID (I-ID)\n   [RFC5422] in the PAC-Opaque (Protected\
    \ Access Credential) and if it\n   matches, it will continue to authenticate the\
    \ user with internal or\n   external user databases.\n   Additional exchanges\
    \ MAY occur between the EAP-FAST server and peer\n   to facilitate various user\
    \ authentications.  The EAP-FAST server\n   might send additional challenges to\
    \ prompt the peer for additional\n   information, such as a request for the next\
    \ token or a new pin in the\n   one time password case, or a server failure packet\
    \ to indicate an\n   error.  The peer displays the prompt to the user again and\
    \ sends back\n   the needed information in an EAP-FAST-GTC Response.  The exchange\n\
    \   ends when a Result TLV is received.\n   An EAP-FAST-GTC server implementation\
    \ within EAP-FAST uses the\n   following format to indicate an error if an authentication\
    \ fails:\n       \"E=eeeeeeeeee R=r M=<msg>\"\n   where:\n   The \"eeeeeeeeee\"\
    \ is the ASCII representation of a decimal error code\n   corresponding to one\
    \ of those listed below, though peer\n   implementations SHOULD deal with codes\
    \ not on this list gracefully.\n   The error code need not be 10 digits long.\n\
    \   Below is a complete list of predefined error codes:\n   o  646 ERROR_RESTRICTED_LOGON_HOURS\n\
    \      Indicates that access is attempted outside the allowed hours.\n      Peer\
    \ implementations SHOULD display the error message to the user\n      and ask\
    \ the user to try at a later time.\n   o  647 ERROR_ACCT_DISABLED\n      Indicates\
    \ that the requested account is disabled.  Peer\n      implementations SHOULD\
    \ display the error message to the user,\n      which helps the user to resolve\
    \ the issue with the administrator.\n   o  648 ERROR_PASSWD_EXPIRED\n      Indicates\
    \ that the password has expired and a password change is\n      required.  Peer\
    \ implementations SHOULD prompt the user for a new\n      password and send back\
    \ the new password in the peer response\n      packet.\n   o  649 ERROR_NO_DIALIN_PERMISSION\n\
    \      Indicates that access has been denied due to lack of dial-in\n      permission.\
    \  Peer implementations SHOULD display the error message\n      to the user, which\
    \ helps the user to resolve the issue with the\n      administrator.\n   o  691\
    \ ERROR_AUTHENTICATION_FAILURE\n      Indicates that there was authentication\
    \ failure due to an\n      incorrect username or password.  Based on the retry\
    \ flag described\n      below, peer implementations MAY prompt the user again\
    \ for a new\n      set of username and password or simply send back an empty\n\
    \      acknowledgment packet to acknowledge the failure and go into the\n    \
    \  termination phase of the authentication session.\n   o  709 ERROR_CHANGING_PASSWORD\n\
    \      Indicates that the password change failed, most likely because the\n  \
    \    new password fails to meet the password complexity policy.  Peer\n      implementations\
    \ SHOULD display the error message and prompt the\n      user again for the new\
    \ password.\n   o  755 ERROR_PAC_I-ID_NO_MATCH\n      Indicates that the PAC used\
    \ to establish the EAP-FAST session\n      cannot be used to authenticate to this\
    \ user account.  Based on the\n      retry flag described below, peer implementations\
    \ MAY prompt the\n      user again for a new set of username and password or simply\
    \ send\n      back an empty acknowledgment packet to acknowledge the failure and\n\
    \      go into the termination phase of the authentication session.\n   The \"\
    r\" is a single character ASCII flag set to '1' if a retry is\n   allowed, and\
    \ '0' if not.  When the server sets this flag to '1', it\n   disables short timeouts,\
    \ expecting the peer to prompt the user for\n   new credentials and to resubmit\
    \ the response.  When the server sets\n   this flag to '0', the peer SHOULD NOT\
    \ prompt the user for new\n   credentials to try again without restarting the\
    \ EAP-FAST\n   authentication from the beginning.\n   The <msg> is human-readable\
    \ ASCII text.  Current implementations only\n   support ASCII text.\n   The server\
    \ failure packet can be broken into Label/Value pairs using\n   the space character\
    \ as the separator.  The only value that may\n   contain the space character is\
    \ the <msg> value, which is always the\n   last value pair in the failure packet.\
    \  The peer SHOULD ignore any\n   unknown label/value pair in the failure packet.\n\
    \   The error format described above is similar to what is defined in the\n  \
    \ Microsoft Challenge Handshake Authentication Protocol version 2\n   (MSCHAPv2)\
    \ [RFC2759], except for the omission of a server challenge.\n   So if the EAP-FAST\
    \ server is distributing MSCHAPv2 exchanges to the\n   backend inner method server,\
    \ it can simply return what the backend\n   inner method server returns less the\
    \ server challenge.  In the case\n   of connecting to a one time password or Lightweight\
    \ Directory Access\n   Protocol (LDAP) [RFC4511] server, the EAP-FAST server can\
    \ translate\n   the error message into this format.  With the addition of the\
    \ retry\n   count, the peer can potentially prompt the user for new credentials\n\
    \   to try again without restarting the EAP-FAST authentication from the\n   beginning.\
    \  The peer will respond to the error code with another EAP-\n   FAST-GTC Response\
    \ packet with both the new username and password, or\n   in case of other unrecoverable\
    \ failures, an empty EAP-FAST-GTC packet\n   for acknowledgement.  The peer uses\
    \ empty EAP-FAST-GTC payload as an\n   acknowledgment of the unrecoverable failure.\n\
    \   If the EAP-FAST server finishes authentication for the EAP-FAST-GTC\n   inner\
    \ method, it will proceed to Protected Termination as described\n   in [RFC4851].\
    \  In the case of an unrecoverable EAP-FAST-GTC\n   authentication failure, the\
    \ EAP server can send an EAP-FAST-GTC error\n   code as described above, along\
    \ with the Result TLV for protected\n   termination.  This way, no extra round\
    \ trips will occur.  The peer\n   can acknowledge the EAP-FAST-GTC failure as\
    \ well as the Result TLV\n   within the same EAP-FAST packet.  Once the server\
    \ receives the\n   acknowledgement, the TLS tunnel will be torn down and a clear\
    \ text\n   EAP-Failure will be sent.\n   The username and password, as well as\
    \ server challenges, MAY support\n   non-ASCII characters.  In this case, international\
    \ username,\n   password, and messages are based on the use of Unicode characters,\n\
    \   encoded as UTF-8 [RFC3629] and processed with a certain algorithm to\n   ensure\
    \ a canonical representation.  The username and password input\n   SHOULD be processed\
    \ according to Section 2.4 of [RFC4282], and the\n   server challenges SHOULD\
    \ be processed according to [RFC5198].\n   Since EAP-FAST-GTC does not generate\
    \ session keys, the MSKi (Master\n   Session Key) used for crypto-binding for\
    \ EAP-FAST will be filled with\n   all zeros.\n"
- title: 3.  Security Considerations
  contents:
  - "3.  Security Considerations\n   The EAP-FAST-GTC method sends password information\
    \ in the clear and\n   MUST NOT be used outside of a protected tunnel providing\
    \ strong\n   protection, such as the one provided by EAP-FAST.  Weak encryption,\n\
    \   such as 40-bit encryption or NULL cipher, MUST NOT be used.  In\n   addition,\
    \ the peer MUST authenticate the server before disclosing its\n   credentials.\
    \  Since EAP-FAST Server-Unauthenticated Provisioning Mode\n   does not authenticate\
    \ the server, EAP-FAST-GTC MUST NOT be used as\n   the inner method in this mode.\
    \  EAP-FAST-GTC MAY be used in EAP-FAST\n   authentication and Server-Authenticated\
    \ Provisioning Mode [RFC5422],\n   where the server is authenticated.  Since EAP-FAST-GTC\
    \ requires the\n   server to have access to the actual authentication secret,\
    \ it is\n   RECOMMENDED to vary the stored authentication validation data by\n\
    \   domain so that a compromise of a server at one location does not\n   compromise\
    \ others.\n"
- title: 3.1.  Security Claims
  contents:
  - "3.1.  Security Claims\n   This section provides the needed security claim requirement\
    \ for EAP\n   [RFC3748].\n   Auth. mechanism:         Password based.\n   Ciphersuite\
    \ negotiation: No.  However, such negotiation is provided\n                  \
    \          by EAP-FAST for the outer authentication.\n   Mutual authentication:\
    \   No.  However, EAP-FAST provides server-side\n                            authentication.\n\
    \   Integrity protection:    No.  However, any method executed within the\n  \
    \                          EAP-FAST tunnel is protected.\n   Replay protection:\
    \       See above.\n   Confidentiality:         See above.\n   Key derivation:\
    \          Keys are not generated, see Section 2.\n                          \
    \  However, when used inside EAP-FAST, the\n                            outer\
    \ method will provide keys.  See\n                            [RFC4851] for the\
    \ properties of those keys.\n   Key strength:            See above.\n   Dictionary\
    \ attack prot.: No.  However, when used inside the EAP-FAST\n                \
    \            tunnel, the protection provided by the TLS\n                    \
    \        tunnel prevents an off-line dictionary\n                            attack.\n\
    \   Fast reconnect:          No.  However, EAP-FAST provides a fast\n        \
    \                    reconnect capability that allows the reuse\n            \
    \                of an earlier session authenticated by EAP-\n               \
    \             FAST-GTC.\n   Cryptographic binding:   No.  Given that no keys are\
    \ generated, EAP-\n                            FAST-GTC or its use within EAP-FAST\
    \ cannot\n                            provide a cryptographic assurance that no\n\
    \                            binding attack has occurred.  EAP-FAST-GTC\n    \
    \                        is required only to run within a protected\n        \
    \                    tunnel, but even the use of the same\n                  \
    \          credentials in some other, unprotected\n                          \
    \  context might lead to a vulnerability.  As a\n                            result,\
    \ credentials used in EAP-FAST-GTC\n                            SHOULD NOT be\
    \ used in other unprotected\n                            authentication mechanisms.\n\
    \   Session independence:    No.  However, EAP-FAST provides session\n       \
    \                     independence.\n   Fragmentation:           No.  However,\
    \ EAP-FAST provides support for\n                            this.\n   Key Hierarchy:\
    \           Not applicable.\n   Channel binding:         No, though EAP-FAST can\
    \ be extended for\n                            this.\n"
- title: 4.  IANA Considerations
  contents:
  - "4.  IANA Considerations\n   EAP-FAST-GTC uses the assigned value of 6 (EAP-GTC)\
    \ for the EAP Type\n   in [RFC3748].\n   This document defines a registry for\
    \ EAP-FAST-GTC error codes when\n   running inside EAP-FAST, named \"EAP-FAST\
    \ GTC Error Codes\".  It may be\n   assigned by Specification Required as defined\
    \ in [RFC5226].  A\n   summary of the error codes defined so far is given below:\n\
    \   o  646 ERROR_RESTRICTED_LOGON_HOURS\n   o  647 ERROR_ACCT_DISABLED\n   o \
    \ 648 ERROR_PASSWD_EXPIRED\n   o  649 ERROR_NO_DIALIN_PERMISSION\n   o  691 ERROR_AUTHENTICATION_FAILURE\n\
    \   o  709 ERROR_CHANGING_PASSWORD\n   o  755 ERROR_PAC_I-ID_NO_MATCH\n   No IANA\
    \ registry will be created for Labels, as current\n   implementations only support\
    \ the Labels defined in this document and\n   new Labels are not expected; if\
    \ necessary, new Labels can be defined\n   in documents updating this document.\n"
- title: 5.  Acknowledgments
  contents:
  - "5.  Acknowledgments\n   The authors would like thank Joe Salowey and Amir Naftali\
    \ for their\n   contributions of the problem space, and Jouni Malinen, Pasi Eronen,\n\
    \   Jari Arkko, and Chris Newman for reviewing this document.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC3629]  Yergeau, F., \"UTF-8, a transformation format of ISO\n\
    \              10646\", STD 63, RFC 3629, November 2003.\n   [RFC3748]  Aboba,\
    \ B., Blunk, L., Vollbrecht, J., Carlson, J., and H.\n              Levkowetz,\
    \ \"Extensible Authentication Protocol (EAP)\",\n              RFC 3748, June\
    \ 2004.\n   [RFC4282]  Aboba, B., Beadles, M., Arkko, J., and P. Eronen, \"The\n\
    \              Network Access Identifier\", RFC 4282, December 2005.\n   [RFC4851]\
    \  Cam-Winget, N., McGrew, D., Salowey, J., and H. Zhou, \"The\n             \
    \ Flexible Authentication via Secure Tunneling Extensible\n              Authentication\
    \ Protocol Method (EAP-FAST)\", RFC 4851,\n              May 2007.\n   [RFC5198]\
    \  Klensin, J. and M. Padlipsky, \"Unicode Format for Network\n              Interchange\"\
    , RFC 5198, March 2008.\n   [RFC5226]  Narten, T. and H. Alvestrand, \"Guidelines\
    \ for Writing an\n              IANA Considerations Section in RFCs\", BCP 26,\
    \ RFC 5226,\n              May 2008.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [RFC2759]  Zorn, G., \"Microsoft PPP CHAP Extensions,\
    \ Version 2\",\n              RFC 2759, January 2000.\n   [RFC4511]  Sermersheim,\
    \ J., \"Lightweight Directory Access Protocol\n              (LDAP): The Protocol\"\
    , RFC 4511, June 2006.\n   [RFC5422]  Cam-Winget, N., McGrew, D., Salowey, J.,\
    \ and H. Zhou,\n              \"Dynamic Provisioning Using Flexible Authentication\
    \ via\n              Secure Tunneling Extensible Authentication Protocol (EAP-\n\
    \              FAST)\", RFC 5422, March 2009.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Nancy Cam-Winget\n   Cisco Systems\n   3625 Cisco Way\n\
    \   San Jose, CA  95134\n   US\n   EMail: ncamwing@cisco.com\n   Hao Zhou\n  \
    \ Cisco Systems\n   4125 Highlander Parkway\n   Richfield, OH  44286\n   US\n\
    \   EMail: hzhou@cisco.com\n"
