- title: __initial_text__
  contents:
  - '       Minimally Covering NSEC Records and DNSSEC On-line Signing

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes how to construct DNSSEC NSEC resource records\n\
    \   that cover a smaller range of names than called for by RFC 4034.  By\n   generating\
    \ and signing these records on demand, authoritative name\n   servers can effectively\
    \ stop the disclosure of zone contents\n   otherwise made possible by walking\
    \ the chain of NSEC records in a\n   signed zone.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................1\n\
    \   2. Applicability of This Technique .................................2\n  \
    \ 3. Minimally Covering NSEC Records .................................2\n   4.\
    \ Better Epsilon Functions ........................................4\n   5. Security\
    \ Considerations .........................................5\n   6. Acknowledgements\
    \ ................................................6\n   7. Normative References\
    \ ............................................6\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   With DNSSEC [1], an NSEC record lists the next instantiated\
    \ name in\n   its zone, proving that no names exist in the \"span\" between the\n\
    \   NSEC's owner name and the name in the \"next name\" field.  In this\n   document,\
    \ an NSEC record is said to \"cover\" the names between its\n   owner name and\
    \ next name.\n   Through repeated queries that return NSEC records, it is possible\
    \ to\n   retrieve all of the names in the zone, a process commonly called\n  \
    \ \"walking\" the zone.  Some zone owners have policies forbidding zone\n   transfers\
    \ by arbitrary clients; this side effect of the NSEC\n   architecture subverts\
    \ those policies.\n   This document presents a way to prevent zone walking by\
    \ constructing\n   NSEC records that cover fewer names.  These records can make\
    \ zone\n   walking take approximately as many queries as simply asking for all\n\
    \   possible names in a zone, making zone walking impractical.  Some of\n   these\
    \ records must be created and signed on demand, which requires\n   on-line private\
    \ keys.  Anyone contemplating use of this technique is\n   strongly encouraged\
    \ to review the discussion of the risks of on-line\n   signing in Section 5.\n"
- title: 1.2.  Keywords
  contents:
  - "1.2.  Keywords\n   The keywords \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [4].\n"
- title: 2.  Applicability of This Technique
  contents:
  - "2.  Applicability of This Technique\n   The technique presented here may be useful\
    \ to a zone owner that wants\n   to use DNSSEC, is concerned about exposure of\
    \ its zone contents via\n   zone walking, and is willing to bear the costs of\
    \ on-line signing.\n   As discussed in Section 5, on-line signing has several\
    \ security\n   risks, including an increased likelihood of private keys being\n\
    \   disclosed and an increased risk of denial of service attack.  Anyone\n   contemplating\
    \ use of this technique is strongly encouraged to review\n   the discussion of\
    \ the risks of on-line signing in Section 5.\n   Furthermore, at the time this\
    \ document was published, the DNSEXT\n   working group was actively working on\
    \ a mechanism to prevent zone\n   walking that does not require on-line signing\
    \ (tentatively called\n   NSEC3).  The new mechanism is likely to expose slightly\
    \ more\n   information about the zone than this technique (e.g., the number of\n\
    \   instantiated names), but it may be preferable to this technique.\n"
- title: 3.  Minimally Covering NSEC Records
  contents:
  - "3.  Minimally Covering NSEC Records\n   This mechanism involves changes to NSEC\
    \ records for instantiated\n   names, which can still be generated and signed\
    \ in advance, as well as\n   the on-demand generation and signing of new NSEC\
    \ records whenever a\n   name must be proven not to exist.\n   In the \"next name\"\
    \ field of instantiated names' NSEC records, rather\n   than list the next instantiated\
    \ name in the zone, list any name that\n   falls lexically after the NSEC's owner\
    \ name and before the next\n   instantiated name in the zone, according to the\
    \ ordering function in\n   RFC 4034 [2] Section 6.1.  This relaxes the requirement\
    \ in Section\n   4.1.1 of RFC 4034 that the \"next name\" field contains the next\
    \ owner\n   name in the zone.  This change is expected to be fully compatible\n\
    \   with all existing DNSSEC validators.  These NSEC records are returned\n  \
    \ whenever proving something specifically about the owner name (e.g.,\n   that\
    \ no resource records of a given type appear at that name).\n   Whenever an NSEC\
    \ record is needed to prove the non-existence of a\n   name, a new NSEC record\
    \ is dynamically produced and signed.  The new\n   NSEC record has an owner name\
    \ lexically before the QNAME but\n   lexically following any existing name and\
    \ a \"next name\" lexically\n   following the QNAME but before any existing name.\n\
    \   The generated NSEC record's type bitmap MUST have the RRSIG and NSEC\n   bits\
    \ set and SHOULD NOT have any other bits set.  This relaxes the\n   requirement\
    \ in Section 2.3 of RFC4035 that NSEC RRs not appear at\n   names that did not\
    \ exist before the zone was signed.\n   The functions to generate the lexically\
    \ following and proceeding\n   names need not be perfect or consistent, but the\
    \ generated NSEC\n   records must not cover any existing names.  Furthermore,\
    \ this\n   technique works best when the generated NSEC records cover as few\n\
    \   names as possible.  In this document, the functions that generate the\n  \
    \ nearby names are called \"epsilon\" functions, a reference to the\n   mathematical\
    \ convention of using the greek letter epsilon to\n   represent small deviations.\n\
    \   An NSEC record denying the existence of a wildcard may be generated\n   in\
    \ the same way.  Since the NSEC record covering a non-existent\n   wildcard is\
    \ likely to be used in response to many queries,\n   authoritative name servers\
    \ using the techniques described here may\n   want to pregenerate or cache that\
    \ record and its corresponding RRSIG.\n   For example, a query for an A record\
    \ at the non-instantiated name\n   example.com might produce the following two\
    \ NSEC records, the first\n   denying the existence of the name example.com and\
    \ the second denying\n   the existence of a wildcard:\n          exampld.com 3600\
    \ IN NSEC example-.com ( RRSIG NSEC )\n          \\).com 3600 IN NSEC +.com (\
    \ RRSIG NSEC )\n   Before answering a query with these records, an authoritative\
    \ server\n   must test for the existence of names between these endpoints.  If\
    \ the\n   generated NSEC would cover existing names (e.g., exampldd.com or\n \
    \  *bizarre.example.com), a better epsilon function may be used or the\n   covered\
    \ name closest to the QNAME could be used as the NSEC owner\n   name or next name,\
    \ as appropriate.  If an existing name is used as\n   the NSEC owner name, that\
    \ name's real NSEC record MUST be returned.\n   Using the same example, assuming\
    \ an exampldd.com delegation exists,\n   this record might be returned from the\
    \ parent:\n          exampldd.com 3600 IN NSEC example-.com ( NS DS RRSIG NSEC\
    \ )\n   Like every authoritative record in the zone, each generated NSEC\n   record\
    \ MUST have corresponding RRSIGs generated using each algorithm\n   (but not necessarily\
    \ each DNSKEY) in the zone's DNSKEY RRset, as\n   described in RFC 4035 [3] Section\
    \ 2.2.  To minimize the number of\n   signatures that must be generated, a zone\
    \ may wish to limit the\n   number of algorithms in its DNSKEY RRset.\n"
- title: 4.  Better Epsilon Functions
  contents:
  - "4.  Better Epsilon Functions\n   Section 6.1 of RFC 4034 defines a strict ordering\
    \ of DNS names.\n   Working backward from that definition, it should be possible\
    \ to\n   define epsilon functions that generate the immediately following and\n\
    \   preceding names, respectively.  This document does not define such\n   functions.\
    \  Instead, this section presents functions that come\n   reasonably close to\
    \ the perfect ones.  As described above, an\n   authoritative server should still\
    \ ensure than no generated NSEC\n   covers any existing name.\n   To increment\
    \ a name, add a leading label with a single null (zero-\n   value) octet.\n  \
    \ To decrement a name, decrement the last character of the leftmost\n   label,\
    \ then fill that label to a length of 63 octets with octets of\n   value 255.\
    \  To decrement a null (zero-value) octet, remove the octet\n   -- if an empty\
    \ label is left, remove the label.  Defining this\n   function numerically: fill\
    \ the leftmost label to its maximum length\n   with zeros (numeric, not ASCII\
    \ zeros) and subtract one.\n   In response to a query for the non-existent name\
    \ foo.example.com,\n   these functions produce NSEC records of the following:\n\
    \     fon\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\n\
    \     \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\n     \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\n     \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\n     \\255.example.com 3600 IN NSEC \\000.foo.example.com ( NSEC\
    \ RRSIG )\n     \\)\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\n     \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\n     \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\n     \\255\\255\\255\\255\\255\\255\\255\\255\\255\\\
    255\\255\\255\\255\\255\\255\n     \\255\\255.example.com 3600 IN NSEC \\000.*.example.com\
    \ ( NSEC RRSIG )\n   The first of these NSEC RRs proves that no exact match for\n\
    \   foo.example.com exists, and the second proves that there is no\n   wildcard\
    \ in example.com.\n   Both of these functions are imperfect: they do not take\
    \ into account\n   constraints on number of labels in a name nor total length\
    \ of a name.\n   As noted in the previous section, though, this technique does\
    \ not\n   depend on the use of perfect epsilon functions: it is sufficient to\n\
    \   test whether any instantiated names fall into the span covered by the\n  \
    \ generated NSEC and, if so, substitute those instantiated owner names\n   for\
    \ the NSEC owner name or next name, as appropriate.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This approach requires on-demand generation of\
    \ RRSIG records.  This\n   creates several new vulnerabilities.\n   First, on-demand\
    \ signing requires that a zone's authoritative servers\n   have access to its\
    \ private keys.  Storing private keys on well-known\n   Internet-accessible servers\
    \ may make them more vulnerable to\n   unintended disclosure.\n   Second, since\
    \ generation of digital signatures tends to be\n   computationally demanding,\
    \ the requirement for on-demand signing\n   makes authoritative servers vulnerable\
    \ to a denial of service attack.\n   Last, if the epsilon functions are predictable,\
    \ on-demand signing may\n   enable a chosen-plaintext attack on a zone's private\
    \ keys.  Zones\n   using this approach should attempt to use cryptographic algorithms\n\
    \   that are resistant to chosen-plaintext attacks.  It is worth noting\n   that\
    \ although DNSSEC has a \"mandatory to implement\" algorithm, that\n   is a requirement\
    \ on resolvers and validators -- there is no\n   requirement that a zone be signed\
    \ with any given algorithm.\n   The success of using minimally covering NSEC records\
    \ to prevent zone\n   walking depends greatly on the quality of the epsilon functions\n\
    \   chosen.  An increment function that chooses a name obviously derived\n   from\
    \ the next instantiated name may be easily reverse engineered,\n   destroying\
    \ the value of this technique.  An increment function that\n   always returns\
    \ a name close to the next instantiated name is likewise\n   a poor choice.  Good\
    \ choices of epsilon functions are the ones that\n   produce the immediately following\
    \ and preceding names, respectively,\n   though zone administrators may wish to\
    \ use less perfect functions\n   that return more human-friendly names than the\
    \ functions described in\n   Section 4 above.\n   Another obvious but misguided\
    \ concern is the danger from synthesized\n   NSEC records being replayed.  It\
    \ is possible for an attacker to\n   replay an old but still validly signed NSEC\
    \ record after a new name\n   has been added in the span covered by that NSEC,\
    \ incorrectly proving\n   that there is no record at that name.  This danger exists\
    \ with DNSSEC\n   as defined in [3].  The techniques described here actually decrease\n\
    \   the danger, since the span covered by any NSEC record is smaller than\n  \
    \ before.  Choosing better epsilon functions will further reduce this\n   danger.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   Many individuals contributed to this design.  They include,\
    \ in\n   addition to the authors of this document, Olaf Kolkman, Ed Lewis,\n \
    \  Peter Koch, Matt Larson, David Blacka, Suzanne Woolf, Jaap Akkerhuis,\n   Jakob\
    \ Schlyter, Bill Manning, and Joao Damas.\n   In addition, the editors would like\
    \ to thank Ed Lewis, Scott Rose,\n   and David Blacka for their careful review\
    \ of the document.\n"
- title: 7.  Normative References
  contents:
  - "7.  Normative References\n   [1]  Arends, R., Austein, R., Larson, M., Massey,\
    \ D., and S. Rose,\n        \"DNS Security Introduction and Requirements\", RFC\
    \ 4033, March\n        2005.\n   [2]  Arends, R., Austein, R., Larson, M., Massey,\
    \ D., and S. Rose,\n        \"Resource Records for the DNS Security Extensions\"\
    , RFC 4034,\n        March 2005.\n   [3]  Arends, R., Austein, R., Larson, M.,\
    \ Massey, D., and S. Rose,\n        \"Protocol Modifications for the DNS Security\
    \ Extensions\", RFC\n        4035, March 2005.\n   [4]  Bradner, S., \"Key words\
    \ for use in RFCs to Indicate Requirement\n        Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Samuel Weiler\n   SPARTA, Inc.\n   7075 Samuel Morse Drive\n\
    \   Columbia, Maryland  21046\n   US\n   EMail: weiler@tislabs.com\n   Johan Ihren\n\
    \   Autonomica AB\n   Bellmansgatan 30\n   Stockholm  SE-118 47\n   Sweden\n \
    \  EMail: johani@autonomica.se\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
