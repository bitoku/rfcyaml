- title: __initial_text__
  contents:
  - '               RADIUS Extension for Digest Authentication

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines an extension to the Remote Authentication\n\
    \   Dial-In User Service (RADIUS) protocol to enable support of Digest\n   Authentication,\
    \ for use with HTTP-style protocols like the Session\n   Initiation Protocol (SIP)\
    \ and HTTP.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n        2.2.1. General Attribute Checks ............................9\n\
    \        2.2.2. Authentication .....................................10\n     \
    \   2.2.3. Constructing the Reply .............................11\n"
- title: 3. New RADIUS Attributes ..........................................12
  contents:
  - "3. New RADIUS Attributes ..........................................12\n   3.1.\
    \ Digest-Response attribute .................................12\n   3.2. Digest-Realm\
    \ Attribute ....................................13\n   3.3. Digest-Nonce Attribute\
    \ ....................................13\n   3.4. Digest-Response-Auth Attribute\
    \ ............................14\n   3.5. Digest-Nextnonce Attribute ................................14\n\
    \   3.6. Digest-Method Attribute ...................................14\n   3.7.\
    \ Digest-URI Attribute ......................................15\n   3.8. Digest-Qop\
    \ Attribute ......................................15\n   3.9. Digest-Algorithm\
    \ Attribute ................................16\n   3.10. Digest-Entity-Body-Hash\
    \ Attribute ........................16\n   3.11. Digest-CNonce Attribute ..................................17\n\
    \   3.12. Digest-Nonce-Count Attribute .............................17\n   3.13.\
    \ Digest-Username Attribute ................................17\n   3.14. Digest-Opaque\
    \ Attribute ..................................18\n   3.15. Digest-Auth-Param Attribute\
    \ ..............................18\n   3.16. Digest-AKA-Auts Attribute ................................19\n\
    \   3.17. Digest-Domain Attribute ..................................19\n   3.18.\
    \ Digest-Stale Attribute ...................................20\n   3.19. Digest-HA1\
    \ Attribute .....................................20\n   3.20. SIP-AOR Attribute\
    \ ........................................21\n"
- title: 4. Diameter Compatibility .........................................21
  contents:
  - '4. Diameter Compatibility .........................................21

    '
- title: 5. Table of Attributes ............................................22
  contents:
  - '5. Table of Attributes ............................................22

    '
- title: 6. Examples .......................................................23
  contents:
  - '6. Examples .......................................................23

    '
- title: 7. IANA Considerations ............................................27
  contents:
  - '7. IANA Considerations ............................................27

    '
- title: 8. Security Considerations ........................................27
  contents:
  - "8. Security Considerations ........................................27\n   8.1.\
    \ Denial of Service .........................................28\n   8.2. Confidentiality\
    \ and Data Integrity ........................28\n"
- title: 9. Acknowledgements ...............................................29
  contents:
  - '9. Acknowledgements ...............................................29

    '
- title: 10. References ....................................................29
  contents:
  - "10. References ....................................................29\n   10.1.\
    \ Normative References .....................................29\n   10.2. Informative\
    \ References ...................................30\n"
- title: 1.  Introduction
  contents:
  - '1.  Introduction

    '
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ [RFC2119].\n   The use of normative requirement key words in this document shall\n\
    \   apply only to RADIUS client and RADIUS server implementations that\n   include\
    \ the features described in this document.  This document\n   creates no normative\
    \ requirements for existing implementations.\n   HTTP-style protocol\n       \
    \  The term 'HTTP-style' denotes any protocol that uses HTTP-like\n         headers\
    \ and uses HTTP Digest Authentication as described in\n         [RFC2617].  Examples\
    \ are HTTP and the Session Initiation\n         Protocol (SIP).\n   NAS\n    \
    \     Network Access Server, the RADIUS client.\n   nonce\n         An unpredictable\
    \ value used to prevent replay attacks.  The\n         nonce generator may use\
    \ cryptographic mechanisms to produce\n         nonces it can recognize without\
    \ maintaining state.\n   protection space\n         HTTP-style protocols differ\
    \ in their definition of the\n         protection space.  For HTTP, it is defined\
    \ as the combination\n         of realm and canonical root URL of the requested\
    \ resource for\n         which the use is authorized by the RADIUS server.  In\
    \ the case\n         of SIP, the realm string alone defines the protection space.\n\
    \   SIP UA\n         SIP User Agent, an Internet endpoint that uses the Session\n\
    \         Initiation Protocol.\n   SIP UAS\n         SIP User Agent Server, a\
    \ logical entity that generates a\n         response to a SIP (Session Initiation\
    \ Protocol) request.\n"
- title: 1.2.  Motivation
  contents:
  - "1.2.  Motivation\n   The HTTP Digest Authentication mechanism, defined in [RFC2617],\
    \ was\n   subsequently adapted for use with SIP [RFC3261].  Due to the\n   limitations\
    \ and weaknesses of Digest Authentication (see [RFC2617],\n   section 4), additional\
    \ authentication and encryption mechanisms are\n   defined in SIP [RFC3261], including\
    \ Transport Layer Security (TLS)\n   [RFC4346] and Secure MIME (S/MIME) [RFC3851].\
    \  However, Digest\n   Authentication support is mandatory in SIP implementations,\
    \ and\n   Digest Authentication is the preferred way for a SIP UA to\n   authenticate\
    \ itself to a proxy server.  Digest Authentication is used\n   in other protocols\
    \ as well.\n   To simplify the provisioning of users, there is a need to support\n\
    \   this authentication mechanism within Authentication, Authorization,\n   and\
    \ Accounting (AAA) protocols such as RADIUS [RFC2865] and Diameter\n   [RFC3588].\n\
    \   This document defines an extension to the RADIUS protocol to enable\n   support\
    \ of Digest Authentication for use with SIP, HTTP, and other\n   HTTP-style protocols\
    \ using this authentication method.  Support for\n   Digest mechanisms such as\
    \ Authentication and Key Agreement (AKA)\n   [RFC3310] is also supported.  A companion\
    \ document [SIP-APP] defines\n   support for Digest Authentication within Diameter.\n"
- title: 1.3.  Overview
  contents:
  - "1.3.  Overview\n   HTTP Digest is a challenge-response protocol used to authenticate\
    \ a\n   client's request to access some resource on a server.  Figure 1 shows\n\
    \   a single HTTP Digest transaction.\n                                 HTTP/SIP..\n\
    \                  +------------+  (1)     +------------+\n                  |\
    \            |--------->|            |\n                  | HTTP-style |  (2)\
    \     | HTTP-style |\n                  | client     |<---------| server     |\n\
    \                  |            |  (3)     |            |\n                  |\
    \            |--------->|            |\n                  |            |  (4)\
    \     |            |\n                  |            |<---------|            |\n\
    \                  +------------+          +------------+\n                 Figure\
    \ 1: Digest operation without RADIUS\n   If the client sends a request without\
    \ any credentials (1), the server\n   will reply with an error response (2) containing\
    \ a nonce.  The client\n   creates a cryptographic digest from parts of the request,\
    \ from the\n   nonce it received from the server, and from a shared secret.  The\n\
    \   client re-transmits the request (3) to the server, but now includes\n   the\
    \ digest within the packet.  The server does the same digest\n   calculation as\
    \ the client and compares the result with the digest it\n   received in (3). \
    \ If the digest values are identical, the server\n   grants access to the resource\
    \ and sends a positive response to the\n   client (4).  If the digest values differ,\
    \ the server sends a negative\n   response to the client (4).\n   Instead of maintaining\
    \ a local user database, the server could use\n   RADIUS to access a centralized\
    \ user database.  However, RADIUS\n   [RFC2865] does not include support for HTTP\
    \ Digest Authentication.\n   The RADIUS client cannot use the User-Password attribute,\
    \ since it\n   does not receive a password from the HTTP-style client.  The\n\
    \   CHAP-Challenge and CHAP-Password attributes described in [RFC1994]\n   are\
    \ also not suitable since the CHAP algorithm is not compatible with\n   HTTP Digest.\n\
    \   This document defines new attributes that enable the RADIUS server to\n  \
    \ perform the digest calculation defined in [RFC2617], providing\n   support for\
    \ Digest Authentication as a native authentication\n   mechanism within RADIUS.\n\
    \   The nonces required by the digest algorithm are generated by the\n   RADIUS\
    \ server.  Generating them in the RADIUS client would save a\n   round-trip, but\
    \ introduce security and operational issues.  Some\n   digest algorithms -- e.g.,\
    \ AKA [RFC3310] -- would not work.\n   Figure 2 depicts a scenario in which the\
    \ HTTP-style server defers\n   authentication to a RADIUS server.  Entities A\
    \ and B communicate\n   using HTTP or SIP, while entities B and C communicate\
    \ using RADIUS.\n                        HTTP/SIP           RADIUS\n         \
    \      +-----+    (1)    +-----+           +-----+\n               |     |==========>|\
    \     |    (2)    |     |\n               |     |           |     |---------->|\
    \     |\n               |     |           |     |    (3)    |     |\n        \
    \       |     |    (4)    |     |<----------|     |\n               |     |<==========|\
    \     |           |     |\n               |     |    (5)    |     |          \
    \ |     |\n               |     |==========>|     |           |     |\n      \
    \         |  A  |           |  B  |    (6)    |  C  |\n               |     |\
    \           |     |---------->|     |\n               |     |           |    \
    \ |    (7)    |     |\n               |     |           |     |<----------|  \
    \   |\n               |     |    (8)    |     |           |     |\n          \
    \     |     |<==========|     |           |     |\n               +-----+    \
    \       +-----+           +-----+\n               ====> HTTP/SIP\n           \
    \    ----> RADIUS\n                    Figure 2: HTTP Digest over RADIUS\n   The\
    \ entities have the following roles:\n   A: HTTP client / SIP UA\n   B: {HTTP\
    \ server / HTTP proxy server / SIP proxy server / SIP UAS}\n      acting also\
    \ as a RADIUS NAS\n   C: RADIUS server\n   The following messages are sent in\
    \ this scenario:\n   A sends B an HTTP/SIP request without an authorization header\
    \ (step\n   1).  B sends an Access-Request packet with the newly defined\n   Digest-Method\
    \ and Digest-URI attributes but without a Digest-Nonce\n   attribute to the RADIUS\
    \ server, C (step 2).  C chooses a nonce and\n   responds with an Access-Challenge\
    \ (step 3).  This Access-Challenge\n   contains Digest attributes, from which\
    \ B takes values to construct an\n   HTTP/SIP \"(Proxy) Authorization required\"\
    \ response.  B sends this\n   response to A (step 4).  A resends its request with\
    \ its credentials\n   (step 5).  B sends an Access-Request to C (step 6).  C checks\
    \ the\n   credentials and replies with Access-Accept or Access-Reject (step 7).\n\
    \   Depending on C's result, B processes A's request or rejects it with a\n  \
    \ \"(Proxy) Authorization required\" response (step 8).\n"
- title: 2.  Detailed Description
  contents:
  - '2.  Detailed Description

    '
- title: 2.1.  RADIUS Client Behavior
  contents:
  - "2.1.  RADIUS Client Behavior\n   The attributes described in this document are\
    \ sent in cleartext.\n   Therefore, were a RADIUS client to accept secure connections\
    \ (HTTPS\n   or SIPS) from HTTP-style clients, this could result in information\n\
    \   intentionally protected by HTTP-style clients being sent in the clear\n  \
    \ during RADIUS exchange.\n"
- title: 2.1.1.  Credential Selection
  contents:
  - "2.1.1.  Credential Selection\n   On reception of an HTTP-style request message,\
    \ the RADIUS client\n   checks whether it is authorized to authenticate the request.\
    \  Where\n   an HTTP-style request traverses several proxies and each of the\n\
    \   proxies requests to authenticate the HTTP-style client, the request\n   at\
    \ the HTTP-style server may contain multiple credential sets.\n   The RADIUS client\
    \ can use the 'realm' directive in HTTP to determine\n   which credentials are\
    \ applicable.  Where none of the realms are of\n   interest, the RADIUS client\
    \ MUST behave as though no relevant\n   credentials were sent.  In all situations,\
    \ the RADIUS client MUST\n   send zero or exactly one credential to the RADIUS\
    \ server.  The RADIUS\n   client MUST choose the credential of the (Proxy-)Authorization\
    \ header\n   if the realm directive matches its locally configured realm.\n"
- title: 2.1.2.  Constructing an Access-Request
  contents:
  - "2.1.2.  Constructing an Access-Request\n   If a matching (Proxy-)Authorization\
    \ header is present and contains\n   HTTP Digest information, the RADIUS client\
    \ checks the 'nonce'\n   parameter.\n   If the RADIUS client recognizes the nonce,\
    \ it takes the header\n   directives and puts them into a RADIUS Access-Request\
    \ packet.  It\n   puts the 'response' directive into a Digest-Response attribute\
    \ and\n   the realm, nonce, digest-uri, qop, algorithm, cnonce, nc, username,\n\
    \   and opaque directives into the respective Digest-Realm, Digest-Nonce,\n  \
    \ Digest-URI, Digest-Qop, Digest-Algorithm, Digest-CNonce,\n   Digest-Nonce-Count,\
    \ Digest-Username, and Digest-Opaque attributes.\n   The RADIUS client puts the\
    \ request method into the Digest-Method\n   attribute.\n   Due to syntactic requirements,\
    \ HTTP-style protocols have to escape\n   with backslash all quote and backslash\
    \ characters in contents of HTTP\n   Digest directives.  When translating directives\
    \ into RADIUS\n   attributes, the RADIUS client only removes the surrounding quotes\n\
    \   where present.  See Section 3 for an example.\n   If the Quality of Protection\
    \ (qop) directive's value is 'auth-int',\n   the RADIUS client calculates H(entity-body)\
    \ as described in\n   [RFC2617], Section 3.2.1, and puts the result in a\n   Digest-Entity-Body-Hash\
    \ attribute.\n   The RADIUS client adds a Message-Authenticator attribute, defined\
    \ in\n   [RFC3579], and sends the Access-Request packet to the RADIUS server.\n\
    \   The RADIUS server processes the packet and responds with an\n   Access-Accept\
    \ or an Access-Reject.\n"
- title: 2.1.3.  Constructing an Authentication-Info Header
  contents:
  - "2.1.3.  Constructing an Authentication-Info Header\n   After having received\
    \ an Access-Accept from the RADIUS server, the\n   RADIUS client constructs an\
    \ Authentication-Info header:\n   o  If the Access-Accept packet contains a Digest-Response-Auth\n\
    \      attribute, the RADIUS client checks the Digest-Qop attribute:\n      *\
    \  If the Digest-Qop attribute's value is 'auth' or not specified,\n         the\
    \ RADIUS client puts the Digest-Response-Auth attribute's\n         content into\
    \ the Authentication-Info header's 'rspauth'\n         directive of the HTTP-style\
    \ response.\n      *  If the Digest-Qop attribute's value is 'auth-int', the RADIUS\n\
    \         client ignores the Access-Accept packet and behaves as if it\n     \
    \    had received an Access-Reject packet (Digest-Response-Auth\n         can't\
    \ be correct as the RADIUS server does not know the\n         contents of the\
    \ HTTP-style response's body).\n   o  If the Access-Accept packet contains a Digest-HA1\
    \ attribute, the\n      RADIUS client checks the 'qop' and 'algorithm' directives\
    \ in the\n      Authorization header of the HTTP-style request it wants to\n \
    \     authorize:\n      *  If the 'qop' directive is missing or its value is 'auth',\
    \ the\n         RADIUS client ignores the Digest-HA1 attribute.  It does not\n\
    \         include an Authentication-Info header in its HTTP-style\n         response.\n\
    \      *  If the 'qop' directive's value is 'auth-int' and at least one\n    \
    \     of the following conditions is true, the RADIUS client\n         calculates\
    \ the contents of the HTTP-style response's 'rspauth'\n         directive:\n \
    \        +  The algorithm directive's value is 'MD5-sess' or\n            'AKAv1-MD5-sess'.\n\
    \         +  IP Security (IPsec) is configured to protect traffic between\n  \
    \          the RADIUS client and RADIUS server with IPsec (see\n            Section\
    \ 8).\n         It creates the HTTP-style response message and calculates the\n\
    \         hash of this message's body.  It uses the result and the\n         Digest-URI\
    \ attribute's value of the corresponding\n         Access-Request packet to perform\
    \ the H(A2) calculation.  It\n         takes the Digest-Nonce, Digest-Nonce-Count,\
    \ Digest-CNonce, and\n         Digest-Qop values of the corresponding Access-Request\
    \ and the\n         Digest-HA1 attribute's value to finish the computation of\
    \ the\n         'rspauth' value.\n   o  If the Access-Accept packet contains neither\
    \ a\n      Digest-Response-Auth nor a Digest-HA1 attribute, the RADIUS client\n\
    \      will not create an Authentication-Info header for its HTTP-style\n    \
    \  response.\n   When the RADIUS server provides a Digest-Nextnonce attribute\
    \ in the\n   Access-Accept packet, the RADIUS client puts the contents of this\n\
    \   attribute into a 'nextnonce' directive.  Now it can send an\n   HTTP-style\
    \ response.\n"
- title: 2.1.4.  Failed Authentication
  contents:
  - "2.1.4.  Failed Authentication\n   If the RADIUS client did receive an HTTP-style\
    \ request without a\n   (Proxy-)Authorization header matching its locally configured\
    \ realm\n   value, it obtains a new nonce and sends an error response (401 or\n\
    \   407) containing a (Proxy-)Authenticate header.\n   If the RADIUS client receives\
    \ an Access-Challenge packet in response\n   to an Access-Request containing a\
    \ Digest-Nonce attribute, the RADIUS\n   server did not accept the nonce.  If\
    \ a Digest-Stale attribute is\n   present in the Access-Challenge and has a value\
    \ of 'true' (without\n   surrounding quotes), the RADIUS client sends an error\
    \ response (401\n   or 407) containing a WWW-/Proxy-Authenticate header with the\n\
    \   directive 'stale' and the digest directives derived from the Digest-*\n  \
    \ attributes.\n   If the RADIUS client receives an Access-Reject from the RADIUS\n\
    \   server, it sends an error response to the HTTP-style request it has\n   received.\
    \  If the RADIUS client does not receive a response, it\n   retransmits or fails\
    \ over to another RADIUS server as described in\n   [RFC2865].\n"
- title: 2.1.5.  Obtaining Nonces
  contents:
  - "2.1.5.  Obtaining Nonces\n   The RADIUS client has two ways to obtain nonces:\
    \ it has received one\n   in a Digest-Nextnonce attribute of a previously received\n\
    \   Access-Accept packet or it asks the RADIUS server for one.  To do the\n  \
    \ latter, it sends an Access-Request containing a Digest-Method and a\n   Digest-URI\
    \ attribute but without a Digest-Nonce attribute.  It adds a\n   Message-Authenticator\
    \ (see [RFC3579]) attribute to the Access-Request\n   packet.  The RADIUS server\
    \ chooses a nonce and responds with an\n   Access-Challenge containing a Digest-Nonce\
    \ attribute.\n   The RADIUS client constructs a (Proxy-)Authenticate header using\
    \ the\n   received Digest-Nonce and Digest-Realm attributes to fill the nonce\n\
    \   and realm directives.  The RADIUS server can send Digest-Qop,\n   Digest-Algorithm,\
    \ Digest-Domain, and Digest-Opaque attributes in the\n   Access-Challenge carrying\
    \ the nonce.  If these attributes are\n   present, the client MUST use them.\n"
- title: 2.2.  RADIUS Server Behavior
  contents:
  - "2.2.  RADIUS Server Behavior\n   If the RADIUS server receives an Access-Request\
    \ packet with a\n   Digest-Method and a Digest-URI attribute but without a Digest-Nonce\n\
    \   attribute, it chooses a nonce.  It puts the nonce into a Digest-Nonce\n  \
    \ attribute and sends it in an Access-Challenge packet to the RADIUS\n   client.\
    \  The RADIUS server MUST add Digest-Realm,\n   Message-Authenticator (see [RFC3579]),\
    \ SHOULD add Digest-Algorithm\n   and one or more Digest-Qop, and MAY add Digest-Domain\
    \ or\n   Digest-Opaque attributes to the Access-Challenge packet.\n"
- title: 2.2.1.  General Attribute Checks
  contents:
  - "2.2.1.  General Attribute Checks\n   If the RADIUS server receives an Access-Request\
    \ packet containing a\n   Digest-Response attribute, it looks for the following\
    \ attributes:\n   Digest-Realm, Digest-Nonce, Digest-Method, Digest-URI, Digest-Qop,\n\
    \   Digest-Algorithm, and Digest-Username.  Depending on the content of\n   Digest-Algorithm\
    \ and Digest-Qop, it looks for\n   Digest-Entity-Body-Hash, Digest-CNonce, and\
    \ Digest-AKA-Auts, too.\n   See [RFC2617] and [RFC3310] for details.  If the Digest-Algorithm\n\
    \   attribute is missing, 'MD5' is assumed.  If the RADIUS server has\n   issued\
    \ a Digest-Opaque attribute along with the nonce, the\n   Access-Request MUST\
    \ have a matching Digest-Opaque attribute.\n   If mandatory attributes are missing,\
    \ it MUST respond with an\n   Access-Reject packet.\n   The RADIUS server removes\
    \ '\\' characters that escape quote and '\\'\n   characters from the text values\
    \ it has received in the Digest-*\n   attributes.\n   If the mandatory attributes\
    \ are present, the RADIUS server MUST check\n   if the RADIUS client is authorized\
    \ to serve users of the realm\n   mentioned in the Digest-Realm attribute.  If\
    \ the RADIUS client is not\n   authorized, the RADIUS server MUST send an Access-Reject.\
    \  The RADIUS\n   server SHOULD log the event so as to notify the operator, and\
    \ MAY\n   take additional action such as sending an Access-Reject in response\n\
    \   to all future requests from this client, until this behavior is reset\n  \
    \ by management action.\n   The RADIUS server determines the age of the nonce\
    \ in Digest-Nonce by\n   using an embedded time-stamp or by looking it up in a\
    \ local table.\n   The RADIUS server MUST check the integrity of the nonce if\
    \ it embeds\n   the time-stamp in the nonce.  Section 2.2.2 describes how the\
    \ server\n   handles old nonces.\n"
- title: 2.2.2.  Authentication
  contents:
  - "2.2.2.  Authentication\n   If the Access-Request message has passed the checks\
    \ described above,\n   the RADIUS server calculates the digest response as described\
    \ in\n   [RFC2617].  To look up the password, the RADIUS server uses the\n   RADIUS\
    \ User-Name attribute.  The RADIUS server MUST check if the user\n   identified\
    \ by the User-Name attribute\n   o  is authorized to access the protection space\
    \ and\n   o  is authorized to use the URI included in the SIP-AOR attribute, if\n\
    \      this attribute is present.\n   If any of those checks fails, the RADIUS\
    \ server MUST send an\n   Access-Reject.\n   Correlation between User-Name and\
    \ SIP-AOR AVP values is required just\n   to avoid that any user can register\
    \ or misuse a SIP-AOR allocated to\n   a different user.\n   All values required\
    \ for the digest calculation are taken from the\n   Digest attributes described\
    \ in this document.  If the calculated\n   digest response equals the value received\
    \ in the Digest-Response\n   attribute, the authentication was successful.\n \
    \  If the response values match, but the RADIUS server considers the\n   nonce\
    \ in the Digest-Nonce attribute as too old, it sends an\n   Access-Challenge packet\
    \ containing a new nonce and a Digest-Stale\n   attribute with a value of 'true'\
    \ (without surrounding quotes).\n   If the response values don't match, the RADIUS\
    \ server responds with\n   an Access-Reject.\n"
- title: 2.2.3.  Constructing the Reply
  contents:
  - "2.2.3.  Constructing the Reply\n   If the authentication was successful, the\
    \ RADIUS server adds an\n   attribute to the Access-Accept packet that can be\
    \ used by the RADIUS\n   client to construct an Authentication-Info header:\n\
    \   o  If the Digest-Qop attribute's value is 'auth' or unspecified, the\n   \
    \   RADIUS server SHOULD put a Digest-Response-Auth attribute into the\n     \
    \ Access-Accept packet.\n   o  If the Digest-Qop attribute's value is 'auth-int'\
    \ and at least one\n      of the following conditions is true, the RADIUS server\
    \ SHOULD put\n      a Digest-HA1 attribute into the Access-Accept packet:\n  \
    \    *  The Digest-Algorithm attribute's value is 'MD5-sess' or\n         'AKAv1-MD5-sess'.\n\
    \      *  IPsec is configured to protect traffic between the RADIUS\n        \
    \ client and RADIUS server with IPsec (see Section 8).\n   In all other cases,\
    \ Digest-Response-Auth or Digest-HA1 MUST NOT be\n   sent.\n   RADIUS servers\
    \ MAY construct a Digest-Nextnonce attribute and add it\n   to the Access-Accept\
    \ packet.  This is useful to limit the lifetime of\n   a nonce and to save a round-trip\
    \ in future requests (see nextnonce\n   discussion in [RFC2617], section 3.2.3).\
    \  The RADIUS server adds a\n   Message-Authenticator attribute (see [RFC3579])\
    \ and sends the\n   Access-Accept packet to the RADIUS client.\n   If the RADIUS\
    \ server does not accept the nonce received in an\n   Access-Request packet but\
    \ authentication was successful, the RADIUS\n   server MUST send an Access-Challenge\
    \ packet containing a Digest-Stale\n   attribute set to 'true' (without surrounding\
    \ quotes).  The RADIUS\n   server MUST add Message-Authenticator (see [RFC3579]),\
    \ Digest-Nonce,\n   Digest-Realm, SHOULD add Digest-Algorithm and one or more\
    \ Digest-Qop\n   and MAY add Digest-Domain, Digest-Opaque attributes to the\n\
    \   Access-Challenge packet.\n"
- title: 3.  New RADIUS Attributes
  contents:
  - "3.  New RADIUS Attributes\n   If not stated otherwise, the attributes have the\
    \ following format:\n   0                   1                   2\n   0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |  Length       | Text ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Quote and backslash characters in Digest-* attributes representing\n   HTTP-style\
    \ directives with a quoted-string syntax are escaped.  The\n   surrounding quotes\
    \ are removed.  They are syntactical delimiters that\n   are redundant in RADIUS.\
    \  For example, the directive\n   realm=\"the \\\"example\\\" value\"\n   is represented\
    \ as follows:\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | Digest-Realm  |       23      | the \\\"example\\\" value |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 3.1.  Digest-Response attribute
  contents:
  - "3.1.  Digest-Response attribute\n   Description\n         If this attribute is\
    \ present in an Access-Request message, a\n         RADIUS server implementing\
    \ this specification MUST treat the\n         Access-Request as a request for\
    \ Digest Authentication.  When a\n         RADIUS client receives a (Proxy-)Authorization\
    \ header, it puts\n         the request-digest value into a Digest-Response attribute.\n\
    \         This attribute (which enables the user to prove possession of\n    \
    \     the password) MUST only be used in Access-Requests.\n   Type\n         103\
    \ for Digest-Response.\n   Length\n         >= 3\n   Text\n         When using\
    \ HTTP Digest, the text field is 32 octets long and\n         contains a hexadecimal\
    \ representation of a 16-octet digest\n         value as it was calculated by\
    \ the authenticated client.  Other\n         digest algorithms MAY define different\
    \ digest lengths.  The\n         text field MUST be copied from request-digest\
    \ of\n         digest-response ([RFC2617]) without surrounding quotes.\n"
- title: 3.2.  Digest-Realm Attribute
  contents:
  - "3.2.  Digest-Realm Attribute\n   Description\n         This attribute describes\
    \ a protection space component of the\n         RADIUS server.  HTTP-style protocols\
    \ differ in their definition\n         of the protection space.  See [RFC2617],\
    \ Section 1.2, for\n         details.  It MUST only be used in Access-Request\
    \ and\n         Access-Challenge packets.\n   Type\n         104 for Digest-Realm\n\
    \   Length\n         >=3\n   Text\n         In Access-Requests, the RADIUS client\
    \ takes the value of the\n         realm directive (realm-value according to [RFC2617])\
    \ without\n         surrounding quotes from the HTTP-style request it wants to\n\
    \         authenticate.  In Access-Challenge packets, the RADIUS server\n    \
    \     puts the expected realm value into this attribute.\n"
- title: 3.3.  Digest-Nonce Attribute
  contents:
  - "3.3.  Digest-Nonce Attribute\n   Description\n         This attribute holds a\
    \ nonce to be used in the HTTP Digest\n         calculation.  If the Access-Request\
    \ had a Digest-Method and a\n         Digest-URI but no Digest-Nonce attribute,\
    \ the RADIUS server\n         MUST put a Digest-Nonce attribute into its Access-Challenge\n\
    \         packet.  This attribute MUST only be used in Access-Request and\n  \
    \       Access-Challenge packets.\n   Type\n         105 for Digest-Nonce\n  \
    \ Length\n         >=3\n   Text\n         In Access-Requests, the RADIUS client\
    \ takes the value of the\n         nonce directive (nonce-value in [RFC2617])\
    \ without surrounding\n         quotes from the HTTP-style request it wants to\
    \ authenticate.\n         In Access-Challenge packets, the attribute contains\
    \ the nonce\n         selected by the RADIUS server.\n"
- title: 3.4.  Digest-Response-Auth Attribute
  contents:
  - "3.4.  Digest-Response-Auth Attribute\n   Description\n         This attribute\
    \ enables the RADIUS server to prove possession of\n         the password.  If\
    \ the previously received Digest-Qop attribute\n         was 'auth-int' (without\
    \ surrounding quotes), the RADIUS server\n         MUST send a Digest-HA1 attribute\
    \ instead of a\n         Digest-Response-Auth attribute.  The Digest-Response-Auth\n\
    \         attribute MUST only be used in Access-Accept packets.  The\n       \
    \  RADIUS client puts the attribute value without surrounding\n         quotes\
    \ into the rspauth directive of the Authentication-Info\n         header.\n  \
    \ Type\n         106 for Digest-Response-Auth.\n   Length\n         >= 3\n   Text\n\
    \         The RADIUS server calculates a digest according to section\n       \
    \  3.2.3 of [RFC2617] and copies the result into this attribute.\n         Digest\
    \ algorithms other than the one defined in [RFC2617] MAY\n         define digest\
    \ lengths other than 32.\n"
- title: 3.5.  Digest-Nextnonce Attribute
  contents:
  - "3.5.  Digest-Nextnonce Attribute\n   This attribute holds a nonce to be used\
    \ in the HTTP Digest\n   calculation.\n   Description\n         The RADIUS server\
    \ MAY put a Digest-Nextnonce attribute into an\n         Access-Accept packet.\
    \  If this attribute is present, the RADIUS\n         client MUST put the contents\
    \ of this attribute into the\n         nextnonce directive of an Authentication-Info\
    \ header in its\n         HTTP-style response.  This attribute MUST only be used\
    \ in\n         Access-Accept packets.\n   Type\n         107 for Digest-Nextnonce\n\
    \   Length\n         >=3\n   Text\n         It is recommended that this text be\
    \ base64 or hexadecimal data.\n"
- title: 3.6.  Digest-Method Attribute
  contents:
  - "3.6.  Digest-Method Attribute\n   Description\n         This attribute holds\
    \ the method value to be used in the HTTP\n         Digest calculation.  This\
    \ attribute MUST only be used in\n         Access-Request packets.\n   Type\n\
    \         108 for Digest-Method\n   Length\n         >=3\n   Text\n         In\
    \ Access-Requests, the RADIUS client takes the value of the\n         request\
    \ method from the HTTP-style request it wants to\n         authenticate.\n"
- title: 3.7.  Digest-URI Attribute
  contents:
  - "3.7.  Digest-URI Attribute\n   Description\n         This attribute is used to\
    \ transport the contents of the\n         digest-uri directive or the URI of the\
    \ HTTP-style request.  It\n         MUST only be used in Access-Request packets.\n\
    \   Type\n         109 for Digest-URI\n   Length\n         >=3\n   Text\n    \
    \     If the HTTP-style request has an Authorization header, the\n         RADIUS\
    \ client puts the value of the \"uri\" directive found in\n         the HTTP-style\
    \ request Authorization header (known as\n         \"digest-uri-value\" in section\
    \ 3.2.2 of [RFC2617]) without\n         surrounding quotes into this attribute.\
    \  If there is no\n         Authorization header, the RADIUS client takes the\
    \ value of the\n         request URI from the HTTP-style request it wants to\n\
    \         authenticate.\n"
- title: 3.8.  Digest-Qop Attribute
  contents:
  - "3.8.  Digest-Qop Attribute\n   Description\n         This attribute holds the\
    \ Quality of Protection parameter that\n         influences the HTTP Digest calculation.\
    \  This attribute MUST\n         only be used in Access-Request and Access-Challenge\
    \ packets.  A\n         RADIUS client SHOULD insert one of the Digest-Qop attributes\
    \ it\n         has received in a previous Access-Challenge packet.  RADIUS\n \
    \        servers SHOULD insert at least one Digest-Qop attribute in an\n     \
    \    Access-Challenge packet.  Digest-Qop is optional in order to\n         preserve\
    \ backward compatibility with a minimal implementation\n         of [RFC2069].\n\
    \   Type\n         110 for Digest-Qop\n   Length\n         >=3\n   Text\n    \
    \     In Access-Requests, the RADIUS client takes the value of the\n         qop\
    \ directive (qop-value as described in [RFC2617]) from the\n         HTTP-style\
    \ request it wants to authenticate.  In\n         Access-Challenge packets, the\
    \ RADIUS server puts a desired\n         qop-value into this attribute.  If the\
    \ RADIUS server supports\n         more than one \"quality of protection\" value,\
    \ it puts each\n         qop-value into a separate Digest-Qop attribute.\n"
- title: 3.9.  Digest-Algorithm Attribute
  contents:
  - "3.9.  Digest-Algorithm Attribute\n   Description\n         This attribute holds\
    \ the algorithm parameter that influences\n         the HTTP Digest calculation.\
    \  It MUST only be used in\n         Access-Request and Access-Challenge packets.\
    \  If this attribute\n         is missing, MD5 is assumed.\n   Type\n        \
    \ 111 for Digest-Algorithm\n   Length\n         >=3\n   Text\n         In Access-Requests,\
    \ the RADIUS client takes the value of the\n         algorithm directive (as described\
    \ in [RFC2617], section 3.2.1)\n         from the HTTP-style request it wants\
    \ to authenticate.  In\n         Access-Challenge packets, the RADIUS server SHOULD\
    \ put the\n         desired algorithm into this attribute.\n"
- title: 3.10.  Digest-Entity-Body-Hash Attribute
  contents:
  - "3.10.  Digest-Entity-Body-Hash Attribute\n   Description\n         When using\
    \ the qop-level 'auth-int', a hash of the HTTP-style\n         message body's\
    \ contents is required for digest calculation.\n         Instead of sending the\
    \ complete body of the message, only its\n         hash value is sent.  This hash\
    \ value can be used directly in\n         the digest calculation.\n         The\
    \ clarifications described in section 22.4 of [RFC3261] about\n         the hash\
    \ of empty entity bodies apply to the\n         Digest-Entity-Body-Hash attribute.\
    \  This attribute MUST only be\n         sent in Access-Request packets.\n   Type\n\
    \         112 for Digest-Entity-Body-Hash\n   Length\n         >=3\n   Text\n\
    \         The attribute holds the hexadecimal representation of\n         H(entity-body).\
    \  This hash is required by certain\n         authentication mechanisms, such\
    \ as HTTP Digest with quality of\n         protection set to \"auth-int\".  RADIUS\
    \ clients MUST use this\n         attribute to transport the hash of the entity\
    \ body when HTTP\n         Digest is the authentication mechanism and the RADIUS\
    \ server\n         requires that the integrity of the entity body (e.g., qop\n\
    \         parameter set to \"auth-int\") be verified.  Extensions to this\n  \
    \       document may define support for authentication mechanisms other\n    \
    \     than HTTP Digest.\n"
- title: 3.11.  Digest-CNonce Attribute
  contents:
  - "3.11.  Digest-CNonce Attribute\n   Description\n         This attribute holds\
    \ the client nonce parameter that is used in\n         the HTTP Digest calculation.\
    \  It MUST only be used in\n         Access-Request packets.\n   Type\n      \
    \   113 for Digest-CNonce\n   Length\n         >=3\n   Text\n         This attribute\
    \ includes the value of the cnonce-value [RFC2617]\n         without surrounding\
    \ quotes, taken from the HTTP-style request.\n"
- title: 3.12.  Digest-Nonce-Count Attribute
  contents:
  - "3.12.  Digest-Nonce-Count Attribute\n   Description\n         This attribute\
    \ includes the nonce count parameter that is used\n         to detect replay attacks.\
    \  The attribute MUST only be used in\n         Access-Request packets.\n   Type\n\
    \         114 for Digest-Nonce-Count\n   Length\n         10\n   Text\n      \
    \   In Access-Requests, the RADIUS client takes the value of the nc\n        \
    \ directive (nc-value according to [RFC2617]) without surrounding\n         quotes\
    \ from the HTTP-style request it wants to authenticate.\n"
- title: 3.13.  Digest-Username Attribute
  contents:
  - "3.13.  Digest-Username Attribute\n   Description\n         This attribute holds\
    \ the user name used in the HTTP Digest\n         calculation.  The RADIUS server\
    \ MUST use this attribute only\n         for the purposes of calculating the digest.\
    \  In order to\n         determine the appropriate user credentials, the RADIUS\
    \ server\n         MUST use the User-Name (1) attribute, and MUST NOT use the\n\
    \         Digest-Username attribute.  This attribute MUST only be used in\n  \
    \       Access-Request packets.\n   Type\n         115 for Digest-Username\n \
    \  Length\n         >= 3\n   Text\n         In Access-Requests, the RADIUS client\
    \ takes the value of the\n         username directive (username-value according\
    \ to [RFC2617])\n         without surrounding quotes from the HTTP-style request\
    \ it wants\n         to authenticate.\n"
- title: 3.14.  Digest-Opaque Attribute
  contents:
  - "3.14.  Digest-Opaque Attribute\n   Description\n         This attribute holds\
    \ the opaque parameter that is passed to the\n         HTTP-style client.  The\
    \ HTTP-style client will pass this value\n         back to the server (i.e., the\
    \ RADIUS client) without\n         modification.  This attribute MUST only be\
    \ used in\n         Access-Request and Access-Challenge packets.\n   Type\n  \
    \       116 for Digest-Opaque\n   Length\n         >=3\n   Text\n         In Access-Requests,\
    \ the RADIUS client takes the value of the\n         opaque directive (opaque-value\
    \ according to [RFC2617]) without\n         surrounding quotes from the HTTP-style\
    \ request it wants to\n         authenticate and puts it into this attribute.\
    \  In\n         Access-Challenge packets, the RADIUS server MAY include this\n\
    \         attribute.\n"
- title: 3.15.  Digest-Auth-Param Attribute
  contents:
  - "3.15.  Digest-Auth-Param Attribute\n   Description\n         This attribute is\
    \ a placeholder for future extensions and\n         corresponds to the \"auth-param\"\
    \ parameter defined in section\n         3.2.1 of [RFC2617].  The Digest-Auth-Param\
    \ is the mechanism\n         whereby the RADIUS client and RADIUS server can exchange\n\
    \         auth-param extension parameters contained within Digest headers\n  \
    \       that are not understood by the RADIUS client and for which\n         there\
    \ are no corresponding stand-alone attributes.\n         Unlike the previously\
    \ listed Digest-* attributes, the\n         Digest-Auth-Param contains not only\
    \ the value but also the\n         parameter name, since the parameter name is\
    \ unknown to the\n         RADIUS client.  If the Digest header contains several\
    \ unknown\n         parameters, then the RADIUS implementation MUST repeat this\n\
    \         attribute and each instance MUST contain one different unknown\n   \
    \      Digest parameter/value combination.  This attribute MUST ONLY\n       \
    \  be used in Access-Request, Access-Challenge, or Access-Accept\n         packets.\n\
    \   Type\n         117 for Digest-Auth-Param\n   Length\n         >=3\n   Text\n\
    \         The text consists of the whole parameter, including its name\n     \
    \    and the equal sign ('=') and quotes.\n"
- title: 3.16.  Digest-AKA-Auts Attribute
  contents:
  - "3.16.  Digest-AKA-Auts Attribute\n   Description\n         This attribute holds\
    \ the auts parameter that is used in the\n         Digest AKA ([RFC3310]) calculation.\
    \  It is only used if the\n         algorithm of the digest-response denotes a\
    \ version of AKA\n         Digest [RFC3310].  This attribute MUST only be used\
    \ in\n         Access-Request packets.\n   Type\n         118 for Digest-AKA-Auts\n\
    \   Length\n         >=3\n   Text\n         In Access-Requests, the RADIUS client\
    \ takes the value of the\n         auts directive (auts-param according to section\
    \ 3.4 of\n         [RFC3310]) without surrounding quotes from the HTTP-style\n\
    \         request it wants to authenticate.\n"
- title: 3.17.  Digest-Domain Attribute
  contents:
  - "3.17.  Digest-Domain Attribute\n   Description\n         When a RADIUS client\
    \ has asked for a nonce, the RADIUS server\n         MAY send one or more Digest-Domain\
    \ attributes in its\n         Access-Challenge packet.  The RADIUS client puts\
    \ them into the\n         quoted, space-separated list of URIs of the 'domain'\
    \ directive\n         of a WWW-Authenticate header.  Together with Digest-Realm,\
    \ the\n         URIs in the list define the protection space (see [RFC2617],\n\
    \         section 3.2.1) for some HTTP-style protocols.  This attribute\n    \
    \     MUST only be used in Access-Challenge packets.\n   Type\n         119 for\
    \ Digest-Domain\n   Length\n         3\n   Text\n         This attribute consists\
    \ of a single URI that defines a\n         protection space component.\n"
- title: 3.18.  Digest-Stale Attribute
  contents:
  - "3.18.  Digest-Stale Attribute\n   Description\n         This attribute is sent\
    \ by a RADIUS server in order to notify\n         the RADIUS client whether it\
    \ has accepted a nonce.  If the\n         nonce presented by the RADIUS client\
    \ was stale, the value is\n         'true' and is 'false' otherwise.  The RADIUS\
    \ client puts the\n         content of this attribute into a 'stale' directive\
    \ of the\n         WWW-Authenticate header in the HTTP-style response to the\n\
    \         request it wants to authenticate.  The attribute MUST only be\n    \
    \     used in Access-Challenge packets.\n   Type\n         120 for Digest-Stale\n\
    \   Length\n         3\n   Text\n         The attribute has either the value 'true'\
    \ or 'false' (both\n         values without surrounding quotes).\n"
- title: 3.19.  Digest-HA1 Attribute
  contents:
  - "3.19.  Digest-HA1 Attribute\n   Description\n         This attribute is used\
    \ to allow the generation of an\n         Authentication-Info header, even if\
    \ the HTTP-style response's\n         body is required for the calculation of\
    \ the rspauth value.  It\n         SHOULD be used in Access-Accept packets if\
    \ the required quality\n         of protection ('qop') is 'auth-int'.\n      \
    \   This attribute MUST NOT be sent if the qop parameter was not\n         specified\
    \ or has a value of 'auth' (in this case, use\n         Digest-Response-Auth instead).\n\
    \         The Digest-HA1 attribute MUST only be sent by the RADIUS server\n  \
    \       or processed by the RADIUS client if at least one of the\n         following\
    \ conditions is true:\n         +  The Digest-Algorithm attribute's value is 'MD5-sess'\
    \ or\n            'AKAv1-MD5-sess'.\n         +  IPsec is configured to protect\
    \ traffic between RADIUS client\n            and RADIUS server with IPsec (see\
    \ Section 8).\n         This attribute MUST only be used in Access-Accept packets.\n\
    \   Type\n         121 for Digest-HA1\n   Length\n         >= 3\n   Text\n   \
    \      This attribute contains the hexadecimal representation of H(A1)\n     \
    \    as described in [RFC2617], sections 3.1.3, 3.2.1, and 3.2.2.2.\n"
- title: 3.20.  SIP-AOR Attribute
  contents:
  - "3.20.  SIP-AOR Attribute\n   Description\n         This attribute is used for\
    \ the authorization of SIP messages.\n         The SIP-AOR attribute identifies\
    \ the URI, the use of which must\n         be authenticated and authorized.  The\
    \ RADIUS server uses this\n         attribute to authorize the processing of the\
    \ SIP request.  The\n         SIP-AOR can be derived from, for example, the To\
    \ header field\n         in a SIP REGISTER request (user under registration),\
    \ or the\n         From header field in other SIP requests.  However, the exact\n\
    \         mapping of this attribute to SIP can change due to new\n         developments\
    \ in the protocol.  This attribute MUST only be used\n         when the RADIUS\
    \ client wants to authorize SIP users and MUST\n         only be used in Access-Request\
    \ packets.\n   Type\n         122 for SIP-AOR\n   Length\n         >=3\n   Text\n\
    \         The syntax of this attribute corresponds either to a SIP URI\n     \
    \    (with the format defined in [RFC3261] or a tel URI (with the\n         format\
    \ defined in [RFC3966]).\n         The SIP-AOR attribute holds the complete URI,\
    \ including\n         parameters and other parts.  It is up to the RADIUS server\
    \ what\n         components of the URI are regarded in the authorization\n   \
    \      decision.\n"
- title: 4.  Diameter Compatibility
  contents:
  - "4.  Diameter Compatibility\n   This document defines support for Digest Authentication\
    \ in RADIUS.  A\n   companion document \"Diameter Session Initiation Protocol\
    \ (SIP)\n   Application\" [SIP-APP] defines support for Digest Authentication\
    \ in\n   Diameter, and addresses compatibility issues between RADIUS and\n   Diameter.\n"
- title: 5.  Table of Attributes
  contents:
  - "5.  Table of Attributes\n   The following table provides a guide to which attributes\
    \ may be found\n   in which kinds of packets, and in what quantity.\n   +-----+--------+--------+-----------+-----+-------------------------+\n\
    \   | Req | Accept | Reject | Challenge | #   | Attribute               |\n  \
    \ +-----+--------+--------+-----------+-----+-------------------------+\n   |\
    \ 1   | 0      | 0      | 0         | 1   | User-Name               |\n   | 1\
    \   | 1      | 1      | 1         | 80  | Message-Authenticator   |\n   | 0-1\
    \ | 0      | 0      | 0         | 103 | Digest-Response         |\n   | 0-1 |\
    \ 0      | 0      | 1         | 104 | Digest-Realm            |\n   | 0-1 | 0\
    \      | 0      | 1         | 105 | Digest-Nonce            |\n   | 0   | 0-1\
    \    | 0      | 0         | 106 | Digest-Response-Auth    |\n   |     |      \
    \  |        |           |     | (see Note 1, 2)         |\n   | 0   | 0-1    |\
    \ 0      | 0         | 107 | Digest-Nextnonce        |\n   | 0-1 | 0      | 0\
    \      | 0         | 108 | Digest-Method           |\n   | 0-1 | 0      | 0  \
    \    | 0         | 109 | Digest-URI              |\n   | 0-1 | 0      | 0    \
    \  | 0+        | 110 | Digest-Qop              |\n   | 0-1 | 0      | 0      |\
    \ 0-1       | 111 | Digest-Algorithm (see   |\n   |     |        |        |  \
    \         |     | Note 3)                 |\n   | 0-1 | 0      | 0      | 0  \
    \       | 112 | Digest-Entity-Body-Hash |\n   | 0-1 | 0      | 0      | 0    \
    \     | 113 | Digest-CNonce           |\n   | 0-1 | 0      | 0      | 0      \
    \   | 114 | Digest-Nonce-Count      |\n   | 0-1 | 0      | 0      | 0        \
    \ | 115 | Digest-Username         |\n   | 0-1 | 0      | 0      | 0-1       |\
    \ 116 | Digest-Opaque           |\n   | 0+  | 0+     | 0      | 0+        | 117\
    \ | Digest-Auth-Param       |\n   | 0-1 | 0      | 0      | 0         | 118 |\
    \ Digest-AKA-Auts         |\n   | 0   | 0      | 0      | 0+        | 119 | Digest-Domain\
    \           |\n   | 0   | 0      | 0      | 0-1       | 120 | Digest-Stale   \
    \         |\n   | 0   | 0-1    | 0      | 0         | 121 | Digest-HA1 (see Note\
    \ 1, |\n   |     |        |        |           |     | 2)                    \
    \  |\n   | 0-1 | 0      | 0      | 0         | 122 | SIP-AOR                 |\n\
    \   +-----+--------+--------+-----------+-----+-------------------------+\n  \
    \                                Table 1\n   [Note 1] Digest-HA1 MUST be used\
    \ instead of Digest-Response-Auth if\n      Digest-Qop is 'auth-int'.\n   [Note\
    \ 2] Digest-Response-Auth MUST be used instead of Digest-HA1 if\n      Digest-Qop\
    \ is 'auth'.\n   [Note 3] If Digest-Algorithm is missing, 'MD5' is assumed.\n"
- title: 6.  Examples
  contents:
  - "6.  Examples\n   This is an example selected from the traffic between a softphone\
    \ (A),\n   a Proxy Server (B), and an example.com RADIUS server (C).  The\n  \
    \ communication between the Proxy Server and a SIP Public Switched\n   Telephone\
    \ Network (PSTN) gateway is omitted for brevity.  The SIP\n   messages are not\
    \ shown completely.\n   A->B\n      INVITE sip:97226491335@example.com SIP/2.0\n\
    \      From: <sip:12345678@example.com>\n      To: <sip:97226491335@example.com>\n\
    \   B->A\n      SIP/2.0 100 Trying\n   B->C\n      Code = 1 (Access-Request)\n\
    \      Attributes:\n      NAS-IP-Address = c0 0 2 26 (192.0.2.38)\n      NAS-Port-Type\
    \ = 5 (Virtual)\n      User-Name = 12345678\n      Digest-Method = INVITE\n  \
    \    Digest-URI = sip:97226491335@example.com\n      Message-Authenticator =\n\
    \       08 af 7e 01 b6 8d 74 c3 a4 3c 33 e1 56 2a 80 43\n   C->B\n      Code =\
    \ 11 (Access-Challenge)\n      Attributes:\n      Digest-Nonce = 3bada1a0\n  \
    \    Digest-Realm = example.com\n      Digest-Qop = auth\n      Digest-Algorithm\
    \ = MD5\n      Message-Authenticator =\n       f8 01 26 9f 70 5e ef 5d 24 ac f5\
    \ ca fb 27 da 40\n   B->A\n      SIP/2.0 407 Proxy Authentication Required\n \
    \     Proxy-Authenticate: Digest realm=\"example.com\"\n           ,nonce=\"3bada1a0\"\
    ,qop=auth,algorithm=MD5\n      Content-Length: 0\n   A->B\n      ACK sip:97226491335@example.com\
    \ SIP/2.0\n   A->B\n      INVITE sip:97226491335@example.com SIP/2.0\n      Proxy-Authorization:\
    \ Digest algorithm=\"md5\",nonce=\"3bada1a0\"\n           ,realm=\"example.com\"\
    \n           ,response=\"f3ce87e6984557cd0fecc26f3c5e97a4\"\n           ,uri=\"\
    sip:97226491335@example.com\",username=\"12345678\"\n           ,qop=auth,algorithm=MD5\n\
    \      From: <sip:12345678@example.com>\n      To: <sip:97226491335@example.com>\n\
    \   B->C\n      Code = 1 (Access-Request)\n      Attributes:\n      NAS-IP-Address\
    \ = c0 0 2 26 (192.0.2.38)\n      NAS-Port-Type = 5 (Virtual)\n      User-Name\
    \ = 12345678\n      Digest-Response = f3ce87e6984557cd0fecc26f3c5e97a4\n     \
    \ Digest-Realm = example.com\n      Digest-Nonce = 3bada1a0\n      Digest-Method\
    \ = INVITE\n      Digest-URI = sip:97226491335@example.com\n      Digest-Qop =\
    \ auth\n      Digest-Algorithm = md5\n      Digest-Username =  12345678\n    \
    \  SIP-AOR =  sip:12345678@example.com\n      Message-Authenticator =\n      \
    \    ff 67 f4 13 8e b8 59 32 22 f9 37 0f 32 f8 e0 ff\n   C->B\n      Code = 2\
    \ (Access-Accept)\n      Attributes:\n      Digest-Response-Auth =\n         \
    \             6303c41b0e2c3e524e413cafe8cce954\n      Message-Authenticator =\n\
    \          75 8d 44 49 66 1f 7b 47 9d 10 d0 2d 4a 2e aa f1\n   B->A\n      SIP/2.0\
    \ 180 Ringing\n   B->A\n      SIP/2.0 200 OK\n   A->B\n      ACK sip:97226491335@example.com\
    \ SIP/2.0\n   A second example shows the traffic between a web browser (A), web\n\
    \   server (B), and a RADIUS server (C).\n   A->B\n      GET /index.html HTTP/1.1\n\
    \   B->C\n      Code = 1 (Access-Request)\n      Attributes:\n      NAS-IP-Address\
    \ = c0 0 2 26 (192.0.2.38)\n      NAS-Port-Type = 5 (Virtual)\n      Digest-Method\
    \ = GET\n      Digest-URI = /index.html\n      Message-Authenticator =\n     \
    \  34 a6 26 46 f3 81 f9 b4 97 c0 dd 9d 11 8f ca c7\n   C->B\n      Code = 11 (Access-Challenge)\n\
    \      Attributes:\n      Digest-Nonce = a3086ac8\n      Digest-Realm = example.com\n\
    \      Digest-Qop = auth\n      Digest-Algorithm = MD5\n      Message-Authenticator\
    \ =\n       f8 01 26 9f 70 5e ef 5d 24 ac f5 ca fb 27 da 40\n   B->A\n      HTTP/1.1\
    \ 401 Authentication Required\n      WWW-Authenticate: Digest realm=\"example.com\"\
    ,\n          nonce=\"a3086ac8\",qop=auth,algorithm=MD5\n      Content-Length:\
    \ 0\n   A->B\n      GET /index.html HTTP/1.1\n      Authorization: Digest algorithm=MD5,nonce=\"\
    a3086ac8\"\n           ,realm=\"example.com\"\n           ,response=\"f052b68058b2987aba493857ae1ab002\"\
    \n           ,uri=\"/index.html\",username=\"12345678\"\n           ,qop=auth,algorithm=MD5\n\
    \   B->C\n      Code = 1 (Access-Request)\n      Attributes:\n      NAS-IP-Address\
    \ = c0 0 2 26 (192.0.2.38)\n      NAS-Port-Type = 5 (Virtual)\n      User-Name\
    \ = 12345678\n      Digest-Response = f052b68058b2987aba493857ae1ab002\n     \
    \ Digest-Realm = example.com\n      Digest-Nonce = a3086ac8\n      Digest-Method\
    \ = GET\n      Digest-URI = /index.html\n      Digest-Username =  12345678\n \
    \     Digest-Qop = auth\n      Digest-Algorithm = MD5\n      Message-Authenticator\
    \ =\n          06 e1 65 23 57 94 e6 de 87 5a e8 ce a2 7d 43 6b\n   C->B\n    \
    \  Code = 2 (Access-Accept)\n      Attributes:\n      Digest-Response-Auth =\n\
    \          e644aa513effbfe1caff67103ff6433c\n      Message-Authenticator =\n \
    \         7a 66 73 a3 52 44 dd ca 90 e2 f6 10 61 2d 81 d7\n   B->A\n      HTTP/1.1\
    \ 200 OK\n      ...\n      <html>\n      ...\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   This document serves as an IANA registration request\
    \ for a number of\n   values from the RADIUS attribute type number space.  The\
    \ IANA has\n   assigned the following:\n           +-------------------------+------------------------+\n\
    \           | placeholder             | value assigned by IANA |\n           +-------------------------+------------------------+\n\
    \           | Digest-Response         | 103                    |\n           |\
    \ Digest-Realm            | 104                    |\n           | Digest-Nonce\
    \            | 105                    |\n           | Digest-Nextnonce       \
    \ | 106                    |\n           | Digest-Response-Auth    | 107     \
    \               |\n           | Digest-Method           | 108                \
    \    |\n           | Digest-URI              | 109                    |\n    \
    \       | Digest-Qop              | 110                    |\n           | Digest-Algorithm\
    \        | 111                    |\n           | Digest-Entity-Body-Hash | 112\
    \                    |\n           | Digest-CNonce           | 113           \
    \         |\n           | Digest-Nonce-Count      | 114                    |\n\
    \           | Digest-Username         | 115                    |\n           |\
    \ Digest-Opaque           | 116                    |\n           | Digest-Auth-Param\
    \       | 117                    |\n           | Digest-AKA-Auts         | 118\
    \                    |\n           | Digest-Domain           | 119           \
    \         |\n           | Digest-Stale            | 120                    |\n\
    \           | Digest-HA1              | 121                    |\n           |\
    \ SIP-AOR                 | 122                    |\n           +-------------------------+------------------------+\n\
    \                                  Table 2\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   The RADIUS extensions described in this document\
    \ enable RADIUS to\n   transport the data that is required to perform a digest\
    \ calculation.\n   As a result, RADIUS inherits the vulnerabilities of HTTP Digest\
    \ (see\n   [RFC2617], section 4) in addition to RADIUS security vulnerabilities\n\
    \   described in [RFC2865], section 8, and [RFC3579], section 4.\n   An attacker\
    \ compromising a RADIUS client or proxy can carry out\n   man-in-the-middle attacks\
    \ even if the paths between A, B and B, C\n   (Figure 2) have been secured with\
    \ TLS or IPsec.\n   The RADIUS server MUST check the Digest-Realm attribute it\
    \ has\n   received from a client.  If the RADIUS client is not authorized to\n\
    \   serve HTTP-style clients of that realm, it might be compromised.\n"
- title: 8.1.  Denial of Service
  contents:
  - "8.1.  Denial of Service\n   RADIUS clients implementing the extension described\
    \ in this document\n   may authenticate HTTP-style requests received over the\
    \ Internet.  As\n   compared with the use of RADIUS to authenticate link-layer\
    \ network\n   access, attackers may find it easier to cover their tracks in such\
    \ a\n   scenario.\n   An attacker can attempt a denial-of-service attack on one\
    \ or more\n   RADIUS servers by sending a large number of HTTP-style requests.\
    \  To\n   make simple denial-of-service attacks more difficult, the RADIUS\n \
    \  server MUST check whether it has generated the nonce received from an\n   HTTP-style\
    \ client.  This SHOULD be done statelessly.  For example, a\n   nonce could consist\
    \ of a cryptographically random part and some kind\n   of signature provided by\
    \ the RADIUS client, as described in\n   [RFC2617], section 3.2.1.\n"
- title: 8.2.  Confidentiality and Data Integrity
  contents:
  - "8.2.  Confidentiality and Data Integrity\n   The attributes described in this\
    \ document are sent in cleartext.\n   RADIUS servers SHOULD include Digest-Qop\
    \ and Digest-Algorithm\n   attributes in Access-Challenge messages.  A man in\
    \ the middle can\n   modify or remove those attributes in a bidding down attack,\
    \ causing\n   the RADIUS client to use a weaker authentication scheme than\n \
    \  intended.\n   The Message-Authenticator attribute, described in [RFC3579],\
    \ section\n   3.2 MUST be included in Access-Request, Access-Challenge,\n   Access-Reject,\
    \ and Access-Accept messages that contain attributes\n   described in this specification.\n\
    \   The Digest-HA1 attribute contains no random components if the\n   algorithm\
    \ is 'MD5' or 'AKAv1-MD5'.  This makes offline dictionary\n   attacks easier and\
    \ enables replay attacks.\n   Some parameter combinations require the protection\
    \ of RADIUS packets\n   against eavesdropping and tampering.  Implementations\
    \ SHOULD try to\n   determine automatically whether IPsec is configured to protect\n\
    \   traffic between the RADIUS client and the RADIUS server.  If this is\n   not\
    \ possible, the implementation checks a configuration parameter\n   telling it\
    \ whether IPsec will protect RADIUS traffic.  The default\n   value of this configuration\
    \ parameter tells the implementation that\n   RADIUS packets will not be protected.\n\
    \   HTTP-style clients can use TLS with server side certificates together\n  \
    \ with HTTP-Digest Authentication.  Instead of TLS, IPsec can be used,\n   too.\
    \  TLS or IPsec secure the connection while Digest Authentication\n   authenticates\
    \ the user.  The RADIUS transaction can be regarded as\n   one leg on the path\
    \ between the HTTP-style client and the HTTP-style\n   server.  To prevent RADIUS\
    \ from representing the weak link, a RADIUS\n   client receiving an HTTP-style\
    \ request via TLS or IPsec could use an\n   equally secure connection to the RADIUS\
    \ server.  There are several\n   ways to achieve this, for example:\n   o  The\
    \ RADIUS client may reject HTTP-style requests received over TLS\n      or IPsec.\n\
    \   o  The RADIUS client may require that traffic be sent and received\n     \
    \ over IPsec.\n   RADIUS over IPsec, if used, MUST conform to the requirements\n\
    \   described in [RFC3579], section 4.2.\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   We would like to acknowledge Kevin McDermott (Cisco\
    \ Systems) for\n   providing comments and experimental implementation.\n   Many\
    \ thanks to all reviewers, especially to Miguel Garcia, Jari\n   Arkko, Avi Lior,\
    \ and Jun Wang.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2617]  Franks, J., Hallam-Baker, P., Hostetler, J., Lawrence,\
    \ S.,\n              Leach, P., Luotonen, A., and L. Stewart, \"HTTP\n       \
    \       Authentication: Basic and Digest Access Authentication\",\n          \
    \    RFC 2617, June 1999.\n   [RFC2865]  Rigney, C., Willens, S., Rubens, A.,\
    \ and W. Simpson,\n              \"Remote Authentication Dial In User Service\
    \ (RADIUS)\", RFC\n              2865, June 2000.\n   [RFC3261]  Rosenberg, J.,\
    \ Schulzrinne, H., Camarillo, G., Johnston,\n              A., Peterson, J., Sparks,\
    \ R., Handley, M., and E.\n              Schooler, \"SIP: Session Initiation Protocol\"\
    , RFC 3261,\n              June 2002.\n   [RFC3579]  Aboba, B. and P. Calhoun,\
    \ \"RADIUS (Remote Authentication\n              Dial In User Service) Support\
    \ For Extensible\n              Authentication Protocol (EAP)\", RFC 3579, September\
    \ 2003.\n   [RFC3966]  Schulzrinne, H., \"The tel URI for Telephone Numbers\"\
    , RFC\n              3966, December 2004.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [SIP-APP]  Garcia-Martin, M., \"Diameter Session\
    \ Initiation Protocol\n              (SIP) Application\", Work in Progress), April\
    \ 2006.\n   [RFC1994]  Simpson, W., \"PPP Challenge Handshake Authentication\n\
    \              Protocol (CHAP)\", RFC 1994, August 1996.\n   [RFC2069]  Franks,\
    \ J., Hallam-Baker, P., Hostetler, J., Leach, P.,\n              Luotonen, A.,\
    \ Sink, E., and L. Stewart, \"An Extension to\n              HTTP : Digest Access\
    \ Authentication\", RFC 2069, January\n              1997.\n   [RFC4346]  Dierks,\
    \ T. and E. Rescorla, \"The Transport Layer Security\n              (TLS) Protocol\
    \ Version 1.1\", RFC 4346, April 2006.\n   [RFC3851]  Ramsdell, B., \"Secure/Multipurpose\
    \ Internet Mail\n              Extensions (S/MIME) Version 3.1 Message Specification\"\
    ,\n              RFC 3851, July 2004.\n   [RFC3310]  Niemi, A., Arkko, J., and\
    \ V. Torvinen, \"Hypertext Transfer\n              Protocol (HTTP) Digest Authentication\
    \ Using Authentication\n              and Key Agreement (AKA)\", RFC 3310, September\
    \ 2002.\n   [RFC3588]  Calhoun, P., Loughney, J., Guttman, E., Zorn, G., and J.\n\
    \              Arkko, \"Diameter Base Protocol\", RFC 3588, September 2003.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Baruch Sterman\n   Kayote Networks\n   P.O. Box 1373\n\
    \   Efrat  90435\n   Israel\n   EMail: baruch@kayote.com\n   Daniel Sadolevsky\n\
    \   SecureOL, Inc.\n   Jerusalem Technology Park\n   P.O. Box 16120\n   Jerusalem\
    \  91160\n   Israel\n   EMail: dscreat@dscreat.com\n   David Schwartz\n   Kayote\
    \ Networks\n   P.O. Box 1373\n   Efrat  90435\n   Israel\n   EMail: david@kayote.com\n\
    \   David Williams\n   Cisco Systems\n   7025 Kit Creek Road\n   P.O. Box 14987\n\
    \   Research Triangle Park  NC 27709\n   USA\n   EMail: dwilli@cisco.com\n   Wolfgang\
    \ Beck\n   Deutsche Telekom AG\n   Deutsche Telekom Allee 7\n   Darmstadt  64295\n\
    \   Germany\n   EMail: beckw@t-systems.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
