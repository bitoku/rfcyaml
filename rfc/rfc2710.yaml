- title: __initial_text__
  contents:
  - '              Multicast Listener Discovery (MLD) for IPv6

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies the protocol used by an IPv6 router to\n\
    \   discover the presence of multicast listeners (that is, nodes wishing\n   to\
    \ receive multicast packets) on its directly attached links, and to\n   discover\
    \ specifically which multicast addresses are of interest to\n   those neighboring\
    \ nodes.  This protocol is referred to as Multicast\n   Listener Discovery or\
    \ MLD.  MLD is derived from version 2 of IPv4's\n   Internet Group Management\
    \ Protocol, IGMPv2.  One important difference\n   to note is that MLD uses ICMPv6\
    \ (IP Protocol 58) message types,\n   rather than IGMP (IP Protocol 2) message\
    \ types.\n"
- title: 1.  Definitions
  contents:
  - "1.  Definitions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",  \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [KEYWORDS].\n"
- title: 2.  Introduction
  contents:
  - "2.  Introduction\n   The purpose of Multicast Listener Discovery (MLD) is to\
    \ enable each\n   IPv6 router to discover the presence of multicast listeners\
    \ (that is,\n   nodes wishing to receive multicast packets) on its directly attached\n\
    \   links, and to discover specifically which multicast addresses are of\n   interest\
    \ to those neighboring nodes.  This information is then\n   provided to whichever\
    \ multicast routing protocol is being used by the\n   router, in order to ensure\
    \ that multicast packets are delivered to\n   all links where there are interested\
    \ receivers.\n   MLD is an asymmetric protocol, specifying different behaviors\
    \ for\n   multicast listeners and for routers.  For those multicast addresses\n\
    \   to which a router itself is listening, the router performs both parts\n  \
    \ of the protocol, including responding to its own messages.\n   If a router has\
    \ more than one interface to the same link, it need\n   perform the router part\
    \ of MLD over only one of those interfaces.\n   Listeners, on the other hand,\
    \ must perform the listener part of MLD\n   on all interfaces from which an application\
    \ or upper-layer protocol\n   has requested reception of multicast packets.\n"
- title: 3.  Message Format
  contents:
  - "3.  Message Format\n   MLD is a sub-protocol of ICMPv6, that is, MLD message\
    \ types are a\n   subset of the set of ICMPv6 messages, and MLD messages are identified\n\
    \   in IPv6 packets by a preceding Next Header value of 58.  All MLD\n   messages\
    \ described in this document are sent with a link-local IPv6\n   Source Address,\
    \ an IPv6 Hop Limit of 1, and an IPv6 Router Alert\n   option [RTR-ALERT] in a\
    \ Hop-by-Hop Options header.  (The Router Alert\n   option is necessary to cause\
    \ routers to examine MLD messages sent to\n   multicast addresses in which the\
    \ routers themselves have no\n   interest.)\n   MLD messages have the following\
    \ format:\n    0                   1                   2                   3\n\
    \    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |     Code      |          Checksum             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Maximum Response Delay    |          Reserved             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +  \
    \                                                             +\n   |        \
    \                                                       |\n   +              \
    \         Multicast Address                       +\n   |                    \
    \                                           |\n   +                          \
    \                                     +\n   |                                \
    \                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 3.1.  Type
  contents:
  - "3.1.  Type\n   There are three types of MLD messages:\n   Multicast Listener\
    \ Query (Type = decimal 130)\n      There are two subtypes of Multicast Listener\
    \ Query messages:\n      - General Query, used to learn which multicast addresses\
    \ have\n        listeners on an attached link.\n      - Multicast-Address-Specific\
    \ Query, used to learn if a\n        particular multicast address has any listeners\
    \ on an attached\n        link.\n      These two subtypes are differentiated by\
    \ the contents of the\n      Multicast Address field, as described in section\
    \ 3.6.\n      Multicast Listener Report (Type = decimal 131)\n      Multicast\
    \ Listener Done (Type = decimal 132)\n   In the rest of this document, the above\
    \ messages types are referred\n   to simply as \"Query\", \"Report\", and \"Done\"\
    .\n"
- title: 3.2.  Code
  contents:
  - "3.2.  Code\n   Initialized to zero by the sender; ignored by receivers.\n"
- title: 3.3.  Checksum
  contents:
  - "3.3.  Checksum\n   The standard ICMPv6 checksum, covering the entire MLD message\
    \ plus a\n   \"pseudo-header\" of IPv6 header fields [ICMPv6,IPv6].\n"
- title: 3.4.  Maximum Response Delay
  contents:
  - "3.4.  Maximum Response Delay\n   The Maximum Response Delay field is meaningful\
    \ only in Query\n   messages, and specifies the maximum allowed delay before sending\
    \ a\n   responding Report, in units of milliseconds.  In all other messages,\n\
    \   it is set to zero by the sender and ignored by receivers.\n   Varying this\
    \ value allows the routers to tune the \"leave latency\"\n   (the time between\
    \ the moment the last node on a link ceases listening\n   to a particular multicast\
    \ address and moment the routing protocol is\n   notified that there are no longer\
    \ any listeners for that address), as\n   discussed in section 7.8.  It also allows\
    \ tuning of the burstiness of\n   MLD traffic on a link, as discussed in section\
    \ 7.3.\n"
- title: 3.5.  Reserved
  contents:
  - "3.5.  Reserved\n   Initialized to zero by the sender; ignored by receivers.\n"
- title: 3.6.  Multicast Address
  contents:
  - "3.6.  Multicast Address\n   In a Query message, the Multicast Address field is\
    \ set to zero when\n   sending a General Query, and set to a specific IPv6 multicast\
    \ address\n   when sending a Multicast-Address-Specific Query.\n   In a Report\
    \ or Done message, the Multicast Address field holds a\n   specific IPv6 multicast\
    \ address to which the message sender is\n   listening or is ceasing to listen,\
    \ respectively.\n"
- title: 3.7.  Other fields
  contents:
  - "3.7.  Other fields\n   The length of a received MLD message is computed by taking\
    \ the IPv6\n   Payload Length value and subtracting the length of any IPv6 extension\n\
    \   headers present between the IPv6 header and the MLD message.  If that\n  \
    \ length is greater than 24 octets, that indicates that there are other\n   fields\
    \ present beyond the fields described above, perhaps belonging\n   to a future\
    \ backwards-compatible version of MLD.  An implementation\n   of the version of\
    \ MLD specified in this document MUST NOT send an MLD\n   message longer than\
    \ 24 octets and MUST ignore anything past the first\n   24 octets of a received\
    \ MLD message.  In all cases, the MLD checksum\n   MUST be computed over the entire\
    \ MLD message, not just the first 24\n   octets.\n"
- title: 4.  Protocol Description
  contents:
  - "4.  Protocol Description\n   Note that defaults for timer values are described\
    \ later in this\n   document.  Timer and counter names appear in square brackets.\n\
    \   Routers use MLD to learn which multicast addresses have listeners on\n   each\
    \ of their attached links.  Each router keeps a list, for each\n   attached link,\
    \ of which multicast addresses have listeners on that\n   link, and a timer associated\
    \ with each of those addresses.  Note that\n   the router needs to learn only\
    \ that listeners for a given multicast\n   address are present on a link; it does\
    \ NOT need to learn the identity\n   (e.g., unicast address) of those listeners\
    \ or even how many listeners\n   are present.\n   For each attached link, a router\
    \ selects one of its link-local\n   unicast addresses on that link to be used\
    \ as the IPv6 Source Address\n   in all MLD packets it transmits on that link.\n\
    \   For each interface over which the router is operating the MLD\n   protocol,\
    \ the router must configure that interface to listen to all\n   link-layer multicast\
    \ address that can be generated by IPv6\n   multicasts.  For example, an Ethernet-attached\
    \ router must set its\n   Ethernet address reception filter to accept all Ethernet\
    \ multicast\n   addresses that start with the hexadecimal value 3333 [IPv6-ETHER];\
    \ in\n   the case of an Ethernet interface that does not support the filtering\n\
    \   of such a range of multicast address, it must be configured to accept\n  \
    \ ALL Ethernet multicast addresses, in order to meet the requirements\n   of MLD.\n\
    \   With respect to each of its attached links, a router may assume one\n   of\
    \ two roles: Querier or Non-Querier.  There is normally only one\n   Querier per\
    \ link.  All routers start up as a Querier on each of their\n   attached links.\
    \  If a router hears a Query message whose IPv6 Source\n   Address is numerically\
    \ less than its own selected address for that\n   link, it MUST become a Non-Querier\
    \ on that link.  If [Other Querier\n   Present Interval] passes without receiving,\
    \ from a particular\n   attached link, any Queries from a router with an address\
    \ less than\n   its own, a router resumes the role of Querier on that link.\n\
    \   A Querier for a link periodically [Query Interval] sends a General\n   Query\
    \ on that link, to solicit reports of all multicast addresses of\n   interest\
    \ on that link.  On startup, a router SHOULD send [Startup\n   Query Count] General\
    \ Queries spaced closely together [Startup Query\n   Interval] on all attached\
    \ links in order to quickly and reliably\n   discover the presence of multicast\
    \ listeners on those links.\n   General Queries are sent to the link-scope all-nodes\
    \ multicast\n   address (FF02::1), with a Multicast Address field of 0, and a\
    \ Maximum\n   Response Delay of [Query Response Interval].\n   When a node receives\
    \ a General Query, it sets a delay timer for each\n   multicast address to which\
    \ it is listening on the interface from\n   which it received the Query, EXCLUDING\
    \ the link-scope all-nodes\n   address and any multicast addresses of scope 0\
    \ (reserved) or 1\n   (node-local).  Each timer is set to a different random value,\
    \ using\n   the highest clock granularity available on the node, selected from\n\
    \   the range [0, Maximum Response Delay] with Maximum Response Delay as\n   specified\
    \ in the Query packet.  If a timer for any address is already\n   running, it\
    \ is reset to the new random value only if the requested\n   Maximum Response\
    \ Delay is less than the remaining value of the\n   running timer.  If the Query\
    \ packet specifies a Maximum Response\n   Delay of zero, each timer is effectively\
    \ set to zero, and the action\n   specified below for timer expiration is performed\
    \ immediately.\n   When a node receives a Multicast-Address-Specific Query, if\
    \ it is\n   listening to the queried Multicast Address on the interface from\n\
    \   which the Query was received, it sets a delay timer for that address\n   to\
    \ a random value selected from the range [0, Maximum Response\n   Delay], as above.\
    \  If a timer for the address is already running, it\n   is reset to the new random\
    \ value only if the requested Maximum\n   Response Delay is less than the remaining\
    \ value of the running timer.\n   If the Query packet specifies a Maximum Response\
    \ Delay of zero, the\n   timer is effectively set to zero, and the action specified\
    \ below for\n   timer expiration is performed immediately.\n   If a node's timer\
    \ for a particular multicast address on a particular\n   interface expires, the\
    \ node transmits a Report to that address via\n   that interface; the address\
    \ being reported is carried in both the\n   IPv6 Destination Address field and\
    \ the MLD Multicast Address field of\n   the Report packet.  The IPv6 Hop Limit\
    \ of 1 (as well as the presence\n   of a link-local IPv6 Source Address) prevent\
    \ the packet from\n   traveling beyond the link to which the reporting interface\
    \ is\n   attached.\n   If a node receives another node's Report from an interface\
    \ for a\n   multicast address while it has a timer running for that same address\n\
    \   on that interface, it stops its timer and does not send a Report for\n   that\
    \ address, thus suppressing duplicate reports on the link.\n   When a router receives\
    \ a Report from a link, if the reported address\n   is not already present in\
    \ the router's list of multicast address\n   having listeners on that link, the\
    \ reported address is added to the\n   list, its timer is set to [Multicast Listener\
    \ Interval], and its\n   appearance is made known to the router's multicast routing\
    \ component.\n   If a Report is received for a multicast address that is already\n\
    \   present in the router's list, the timer for that address is reset to\n   [Multicast\
    \ Listener Interval].  If an address's timer expires, it is\n   assumed that there\
    \ are no longer any listeners for that address\n   present on the link, so it\
    \ is deleted from the list and its\n   disappearance is made known to the multicast\
    \ routing component.\n   When a node starts listening to a multicast address on\
    \ an interface,\n   it should immediately transmit an unsolicited Report for that\
    \ address\n   on that interface, in case it is the first listener on the link.\
    \  To\n   cover the possibility of the initial Report being lost or damaged, it\n\
    \   is recommended that it be repeated once or twice after short delays\n   [Unsolicited\
    \ Report Interval].  (A simple way to accomplish this is\n   to send the initial\
    \ Report and then act as if a Multicast-Address-\n   Specific Query was received\
    \ for that address, and set a timer\n   appropriately).\n   When a node ceases\
    \ to listen to a multicast address on an interface,\n   it SHOULD send a single\
    \ Done message to the link-scope all-routers\n   multicast address (FF02::2),\
    \ carrying in its Multicast Address field\n   the address to which it is ceasing\
    \ to listen.  If the node's most\n   recent Report message was suppressed by hearing\
    \ another Report\n   message, it MAY send nothing, as it is highly likely that\
    \ there is\n   another listener for that address still present on the same link.\
    \  If\n   this optimization is implemented, it MUST be able to be turned off\n\
    \   but SHOULD default to on.\n   When a router in Querier state receives a Done\
    \ message from a link,\n   if the Multicast Address identified in the message\
    \ is present in the\n   Querier's list of addresses having listeners on that link,\
    \ the\n   Querier sends [Last Listener Query Count] Multicast-Address-Specific\n\
    \   Queries, one every [Last Listener Query Interval] to that multicast\n   address.\
    \  These Multicast-Address-Specific Queries have their Maximum\n   Response Delay\
    \ set to [Last Listener Query Interval].  If no Reports\n   for the address are\
    \ received from the link after the response delay\n   of the last query has passed,\
    \ the routers on the link assume that the\n   address no longer has any listeners\
    \ there; the address is therefore\n   deleted from the list and its disappearance\
    \ is made known to the\n   multicast routing component.  This process is continued\
    \ to its\n   resolution (i.e. until a Report is received or the last Multicast-\n\
    \   Address-Specific Query is sent with no response) despite any\n   transition\
    \ from Querier to Non-Querier on this link.\n   Routers in Non-Querier state MUST\
    \ ignore Done messages.\n   When a router in Non-Querier state receives a Multicast-Address-\n\
    \   Specific Query, if its timer value for the identified multicast\n   address\
    \ is greater than [Last Listener Query Count] times the Maximum\n   Response Delay\
    \ specified in the message, it sets the address's timer\n   to that latter value.\n"
- title: 5.  Node State Transition Diagram
  contents:
  - "5.  Node State Transition Diagram\n   Node behavior is more formally specified\
    \ by the state transition\n   diagram below.  A node may be in one of three possible\
    \ states with\n   respect to any single IPv6 multicast address on any single interface:\n\
    \   - \"Non-Listener\" state, when the node is not listening to the address\n\
    \      on the interface (i.e., no upper-layer protocol or application has\n  \
    \    requested reception of packets to that multicast address).  This\n      is\
    \ the initial state for all multicast addresses on all\n      interfaces; it requires\
    \ no storage in the node.\n   - \"Delaying Listener\" state, when the node is\
    \ listening to the\n      address on the interface and has a report delay timer\
    \ running for\n      that address.\n   - \"Idle Listener\" state, when the node\
    \ is listening to the address on\n      the interface and does not have a report\
    \ delay timer running for\n      that address.\n   There are five significant\
    \ events that can cause MLD state\n   transitions:\n   - \"start listening\" occurs\
    \ when the node starts listening to the\n      address on the interface.  It may\
    \ occur only in the Non-Listener\n      state.\n   - \"stop listening\" occurs\
    \ when the node stops listening to the\n      address on the interface.  It may\
    \ occur only in the Delaying\n      Listener and Idle Listener states.\n   - \"\
    query received\" occurs when the node receives either a valid\n      General Query\
    \ message, or a valid Multicast-Address-Specific Query\n      message.  To be\
    \ valid, the Query message MUST come from a link-\n      local IPv6 Source Address,\
    \ be at least 24 octets long, and have a\n      correct MLD checksum.  The Multicast\
    \ Address field in the MLD\n      message must contain either zero (a General\
    \ Query) or a valid\n      multicast address (a Multicast- Address-Specific Query).\
    \  A\n      General Query applies to all multicast addresses on the interface\n\
    \      from which the Query is received.  A Multicast-Address-Specific\n     \
    \ Query applies to a single multicast address on the interface from\n      which\
    \ the Query is received.  Queries are ignored for addresses in\n      the Non-Listener\
    \ state.\n   - \"report received\" occurs when the node receives a valid MLD Report\n\
    \      message.  To be valid, the Report message MUST come from a link-\n    \
    \  local IPv6 Source Address, be at least 24 octets long, and have a\n      correct\
    \ MLD checksum.  A Report applies only to the address\n      identified in the\
    \ Multicast Address field of the Report, on the\n      interface from which the\
    \ Report is received.  It is ignored in the\n      Non-Listener or Idle Listener\
    \ state.\n   - \"timer expired\" occurs when the report delay timer for the address\n\
    \      on the interface expires.  It may occur only in the Delaying\n      Listener\
    \ state.\n   All other events, such as receiving invalid MLD messages or MLD\n\
    \   message types other than Query or Report, are ignored in all states.\n   There\
    \ are seven possible actions that may be taken in response to the\n   above events:\n\
    \   - \"send report\" for the address on the interface.  The Report message\n\
    \      is sent to the address being reported.\n   - \"send done\" for the address\
    \ on the interface.  If the flag saying\n      we were the last node to report\
    \ is cleared, this action MAY be\n      skipped.  The Done message is sent to\
    \ the link-scope all-routers\n      address (FF02::2).\n   - \"set flag\" that\
    \ we were the last node to send a report for this\n      address.\n   - \"clear\
    \ flag\" since we were not the last node to send a report for\n      this address.\n\
    \   - \"start timer\" for the address on the interface, using a delay value\n\
    \      chosen uniformly from the interval [0, Maximum Response Delay],\n     \
    \ where Maximum Response Delay is specified in the Query.  If this\n      is an\
    \ unsolicited Report, the timer is set to a delay value chosen\n      uniformly\
    \ from the interval [0, [Unsolicited Report Interval] ].\n   - \"reset timer\"\
    \ for the address on the interface to a new value,\n      using a delay value\
    \ chosen uniformly from the interval [0, Maximum\n      Response Delay], as described\
    \ in \"start timer\".\n   - \"stop timer\" for the address on the interface.\n\
    \   In all of the following state transition diagrams, each state\n   transition\
    \ arc is labeled with the event that causes the transition,\n   and, in parentheses,\
    \ any actions taken during the transition.  Note\n   that the transition is always\
    \ triggered by the event; even if the\n   action is conditional, the transition\
    \ still occurs.\n                             ________________\n             \
    \               |                |\n                            |            \
    \    |\n                            |                |\n                     \
    \       |                |\n                  --------->|  Non-Listener  |<---------\n\
    \                 |          |                |          |\n                 |\
    \          |                |          |\n                 |          |      \
    \          |          |\n                 |          |________________|      \
    \    |\n                 |                   |                  |\n          \
    \       | stop listening    | start listening  | stop listening\n            \
    \     | (stop timer,      |(send report,     | (send done if\n               \
    \  |  send done if     | set flag,        |  flag set)\n                 |  flag\
    \ set)        | start timer)     |\n         ________|________           |   \
    \       ________|________\n        |                 |<---------          |  \
    \               |\n        |                 |                    |          \
    \       |\n        |                 |<-------------------|                 |\n\
    \        |                 |   query received   |                 |\n        |\
    \     Delaying    |    (start timer)   |      Idle       |\n   ---->|     Listener\
    \    |------------------->|     Listener    |\n  |     |                 |   report\
    \ received  |                 |\n  |     |                 |    (stop timer, \
    \   |                 |\n  |     |                 |     clear flag)    |    \
    \             |\n  |     |_________________|------------------->|_________________|\n\
    \  | query received    |        timer expired\n  | (reset timer if   |       \
    \ (send report,\n  |  Max Resp Delay   |         set flag)\n  |  < current timer)\
    \ |\n   -------------------\n   The link-scope all-nodes address (FF02::1) is\
    \ handled as a special\n   case.  The node starts in Idle Listener state for that\
    \ address on\n   every interface, never transitions to another state, and never\
    \ sends\n   a Report or Done for that address.\n   MLD messages are never sent\
    \ for multicast addresses whose scope is 0\n   (reserved) or 1 (node-local).\n\
    \   MLD messages ARE sent for multicast addresses whose scope is 2\n   (link-local),\
    \ including Solicited-Node multicast addresses [ADDR-\n   ARCH], except for the\
    \ link-scope, all-nodes address (FF02::1).\n"
- title: 6.  Router State Transition Diagram
  contents:
  - "6.  Router State Transition Diagram\n   Router behavior is more formally specified\
    \ by the state transition\n   diagrams below.\n   A router may be in one of two\
    \ possible states with respect to any\n   single attached link:\n   - \"Querier\"\
    , when this router is designated to transmit MLD Queries\n      on this link.\n\
    \   - \"Non-Querier\", when there is another router designated to transmit\n \
    \     MLD Queries on this link.\n   The following three events can cause the router\
    \ to change states:\n   - \"query timer expired\" occurs when the timer set for\
    \ query\n      transmission expires.  This event is significant only when in the\n\
    \      Querier state.\n   - \"query received from a router with a lower IP address\"\
    \ occurs when\n      a valid MLD Query is received from a router on the same link\
    \ with\n      a lower IPv6 Source Address. To be valid, the Query message MUST\n\
    \      come from a link-local IPv6 Source Address, be at least 24 octets\n   \
    \   long, and have a correct MLD checksum.\n   - \"other querier present timer\
    \ expired\" occurs when the timer set to\n      note the presence of another querier\
    \ with a lower IP address on\n      the link expires.  This event is significant\
    \ only when in the\n      Non-Querier state.\n   There are three actions that\
    \ may be taken in response to the above\n   events:\n   - \"start general query\
    \ timer\" for the attached link to [Query\n      Interval].\n   - \"start other\
    \ querier present timer\" for the attached link to [Other\n      Querier Present\
    \ Interval].\n   - \"send general query\" on the attached link.  The General Query\
    \ is\n      sent to the link-scope all-nodes address (FF02::1), and has a\n  \
    \    Maximum Response Delay of [Query Response Interval].\n                  \
    \                   --------------------------------\n                       \
    \      _______|________  gen. query timer      |\n ---------                 \
    \ |                |        expired        |\n"
- title: '| Initial |---------------->|                | (send general query,  |'
  contents:
  - "| Initial |---------------->|                | (send general query,  |\n ---------\
    \  (send gen. q.,  |                |  start gen. q. timer) |\n     start initial\
    \ gen. q.  |                |<----------------------\n             timer)    \
    \     |    Querier     |\n                            |                |\n   \
    \                    -----|                |<---\n                      |    \
    \ |                |    |\n                      |     |________________|    |\n"
- title: query received from a |                           | other querier
  contents:
  - 'query received from a |                           | other querier

    '
- title: router with a lower   |                           | present timer
  contents:
  - 'router with a lower   |                           | present timer

    '
- title: IP address            |                           | expired
  contents:
  - 'IP address            |                           | expired

    '
- title: (start other querier  |      ________________     | (send gen. query,
  contents:
  - "(start other querier  |      ________________     | (send gen. query,\n present\
    \ timer)       |     |                |    | start gen. q. timer)\n          \
    \            |     |                |    |\n                      |     |    \
    \            |    |\n                       ---->|      Non       |----\n    \
    \                        |    Querier     |\n                            |   \
    \             |\n                            |                |\n            \
    \           ---->|                |----\n                      |     |________________|\
    \    |\n                      | query received from a     |\n                \
    \      | router with a lower IP    |\n                      | address        \
    \           |\n                      | (start other querier      |\n         \
    \             |  present timer)           |\n                       ---------------------------\n\
    \   A router starts in the Initial state on all attached links, and\n   immediately\
    \ transitions to Querier state.\n   In addition, to keep track of which multicast\
    \ addresses have\n   listeners, a router may be in one of three possible states\
    \ with\n   respect to any single IPv6 multicast address on any single attached\n\
    \   link:\n   - \"No Listeners Present\" state, when there are no nodes on the\
    \ link\n      that have sent a Report for this multicast address.  This is the\n\
    \      initial state for all multicast addresses on the router; it\n      requires\
    \ no storage in the router.\n   - \"Listeners Present\" state, when there is a\
    \ node on the link that\n      has sent a Report for this multicast address.\n\
    \   - \"Checking Listeners\" state, when the router has received a Done\n    \
    \  message but has not yet heard a Report for the identified address.\n   There\
    \ are five significant events that can cause router state\n   transitions:\n \
    \  - \"report received\" occurs when the router receives a Report for the\n  \
    \    address from the link.  To be valid, the Report message MUST come\n     \
    \ from a link-local IPv6 Source Address, be at least 24 octets long,\n      and\
    \ have a correct MLD checksum.\n   - \"done received\" occurs when the router\
    \ receives a Done message for\n      the address from the link.  To be valid,\
    \ the Done message MUST\n      come from a link-local IPv6 Source Address, be\
    \ at least 24 octets\n      long, and have a correct MLD checksum.  This event\
    \ is significant\n      only in the \"Listerners Present\" state and when the\
    \ router is a\n      Querier.\n   - \"multicast-address-specific query received\"\
    \ occurs when a router\n      receives a Multicast-Address-Specific Query for\
    \ the address from\n      the link.  To be valid, the Query message MUST come\
    \ from a link-\n      local IPv6 Source Address, be at least 24 octets long, and\
    \ have a\n      correct MLD checksum.  This event is significant only in the\n\
    \      \"Listeners Present\" state and when the router is a Non-Querier.\n   -\
    \ \"timer expired\" occurs when the timer set for a multicast address\n      expires.\
    \  This event is significant only in the \"Listeners\n      Present\" or \"Checking\
    \ Listeners\" state.\n   - \"retransmit timer expired\" occurs when the timer\
    \ set to retransmit\n      a Multicast-Address-Specific Query expires.  This event\
    \ is\n      significant only in the \"Checking Listeners\" state.\n   There are\
    \ seven possible actions that may be taken in response to the\n   above events:\n\
    \   - \"start timer\" for the address on the link - also resets the timer\n  \
    \    to its initial value [Multicast Listener Interval] if the timer is\n    \
    \  currently running.\n   - \"start timer*\" for the address on the link - this\
    \ alternate action\n      sets the timer to the minimum of its current value and\
    \ either\n      [Last Listener Query Interval] * [Last Listener Query Count] if\n\
    \      this router is a Querier, or the Maximum Response Delay in the\n      Query\
    \ message * [Last Listener Query Count] if this router is a\n      non-Querier.\n\
    \   - \"start retransmit timer\" for the address on the link [Last Listener\n\
    \      Query Interval].\n   - \"clear retransmit timer\" for the address on the\
    \ link.\n   - \"send multicast-address-specific query\" for the address on the\n\
    \      link.  The Multicast-Address-Specific Query is sent to the address\n  \
    \    being queried, and has a Maximum Response Delay of [Last Listener\n     \
    \ Query Interval].\n   - \"notify routing +\" internally notify the multicast\
    \ routing protocol\n      that there are listeners to this address on this link.\n\
    \   - \"notify routing -\" internally notify the multicast routing protocol\n\
    \      that there are no longer any listeners to this address on this\n      link.\n\
    \   The following state diagrams apply per group per link.  There are two\n  \
    \ diagrams; one for routers in Querier state and one for routers in\n   Non-Querier\
    \ state.  The transition between Querier and Non-Querier\n   state on a link is\
    \ handled specially.  All groups on that link in \"No\n   Listeners Present\"\
    \ or \"Listeners Present\" states switch state\n   transition diagrams when the\
    \ Querier/Non-Querier state transition\n   occurs.  However, any groups in \"\
    Checking Listeners\" state continue\n   with the same state transition diagram\
    \ until the \"Checking Listeners\"\n   state is exited.  E.g. a router that starts\
    \ as a Querier, receives a\n   Done message for a group and then receives a Query\
    \ from a router with\n   a lower address (causing a transition to the Non-Querier\
    \ state)\n   continues to send multicast-address-specific queries for the group\
    \ in\n   question until it either receives a Report or its timer expires, at\n\
    \   which time it starts performing the actions of a Non-Querier for this\n  \
    \ group.\n   The state transition diagram for a router in Querier state follows:\n\
    \                          ________________\n                         |      \
    \          |\n                         |                |timer expired\n     \
    \       timer expired|                |(notify routing -,\n       (notify routing\
    \ -)|  No Listeners  |clear rxmt tmr)\n                 ------->|    Present \
    \    |<---------\n                |        |                |          |\n   \
    \             |        |                |          |\n                |      \
    \  |________________|          |  ---------------\n                |         \
    \           |               | | rexmt timer   |\n                |     report\
    \ received|               | |  expired      |\n                |  (notify routing\
    \ +,|               | | (send m-a-s   |\n                |        start timer)|\
    \               | |  query,       |\n      __________|______              |  \
    \     ________|_|______ st rxmt |\n     |                 |<------------     \
    \  |                 | tmr)   |\n     |                 |                    |\
    \                 |<-------\n     |                 | report received    |   \
    \              |\n     |                 | (start timer,      |              \
    \   |\n     |                 |  clear rxmt tmr)   |                 |\n     |\
    \    Listeners    |<-------------------|    Checking     |\n     |     Present\
    \     | done received      |    Listeners    |\n     |                 | (start\
    \ timer*,     |                 |\n     |                 |  start rxmt timer,\
    \ |                 |\n     |                 |  send m-a-s query) |         \
    \        |\n --->|                 |------------------->|                 |\n"
- title: '|    |_________________|                    |_________________|'
  contents:
  - '|    |_________________|                    |_________________|

    '
- title: '| report received |'
  contents:
  - '| report received |

    '
- title: '| (start timer)   |'
  contents:
  - "| (start timer)   |\n -----------------\n   The state transition diagram for\
    \ a router in Non-Querier state is\n   similar, but non-Queriers do not send any\
    \ messages and are only\n   driven by message reception.\n                   \
    \           ________________\n                             |                |\n\
    \                             |                |\n                timer expired|\
    \                |timer expired\n           (notify routing -)|  No Listeners\
    \  |(notify routing -)\n                   --------->|    Present     |<---------\n\
    \                  |          |                |          |\n                \
    \  |          |                |          |\n                  |          |  \
    \              |          |\n                  |          |________________| \
    \         |\n                  |                   |                  |\n    \
    \              |                   |report received   |\n                  | \
    \                  |(notify routing +,|\n                  |                 \
    \  | start timer)     |\n          ________|________           |          ________|________\n\
    \         |                 |<---------          |                 |\n       \
    \  |                 |  report received   |                 |\n         |    \
    \             |  (start timer)     |                 |\n         |    Listeners\
    \    |<-------------------|     Checking    |\n         |     Present     | m-a-s\
    \ query rec'd  |    Listeners    |\n         |                 | (start timer*)\
    \     |                 |\n    ---->|                 |------------------->| \
    \                |\n   |     |_________________|                    |_________________|\n\
    \   | report received |\n   | (start timer)   |\n    -----------------\n"
- title: 7.  List of timers and default values
  contents:
  - "7.  List of timers and default values\n   Most of these timers are configurable.\
    \  If non-default settings are\n   used, they MUST be consistent among all routers\
    \ on a single link.\n   Note that parentheses are used to group expressions to\
    \ make the\n   algebra clear.\n"
- title: 7.1.  Robustness Variable
  contents:
  - "7.1.  Robustness Variable\n   The Robustness Variable allows tuning for the expected\
    \ packet loss on\n   a link.  If a link is expected to be lossy, the Robustness\
    \ Variable\n   may be increased.  MLD is robust to (Robustness Variable - 1) packet\n\
    \   losses.  The Robustness Variable MUST NOT be zero, and SHOULD NOT be\n   one.\
    \  Default: 2\n"
- title: 7.2.  Query Interval
  contents:
  - "7.2.  Query Interval\n   The Query Interval is the interval between General Queries\
    \ sent by\n   the Querier.  Default: 125 seconds.\n   By varying the [Query Interval],\
    \ an administrator may tune the number\n   of MLD messages on the link; larger\
    \ values cause MLD Queries to be\n   sent less often.\n"
- title: 7.3.  Query Response Interval
  contents:
  - "7.3.  Query Response Interval\n   The Maximum Response Delay inserted into the\
    \ periodic General\n   Queries.  Default: 10000 (10 seconds)\n   By varying the\
    \ [Query Response Interval], an administrator may tune\n   the burstiness of MLD\
    \ messages on the link; larger values make the\n   traffic less bursty, as node\
    \ responses are spread out over a larger\n   interval.  The number of seconds\
    \ represented by the [Query Response\n   Interval] must be less than the [Query\
    \ Interval].\n"
- title: 7.4.  Multicast Listener Interval
  contents:
  - "7.4.  Multicast Listener Interval\n   The Multicast Listener Interval is the\
    \ amount of time that must pass\n   before a router decides there are no more\
    \ listeners for an address on\n   a link.  This value MUST be ((the Robustness\
    \ Variable) times (the\n   Query Interval)) plus (one Query Response Interval).\n"
- title: 7.5.  Other Querier Present Interval
  contents:
  - "7.5.  Other Querier Present Interval\n   The Other Querier Present Interval is\
    \ the length of time that must\n   pass before a router decides that there is\
    \ no longer another router\n   which should be the querier on a link.  This value\
    \ MUST be ((the\n   Robustness Variable) times (the Query Interval)) plus (one\
    \ half of\n   one Query Response Interval).\n"
- title: 7.6.  Startup Query Interval
  contents:
  - "7.6.  Startup Query Interval\n   The Startup Query Interval is the interval between\
    \ General Queries\n   sent by a Querier on startup.  Default: 1/4 the Query Interval.\n"
- title: 7.7.  Startup Query Count
  contents:
  - "7.7.  Startup Query Count\n   The Startup Query Count is the number of Queries\
    \ sent out on startup,\n   separated by the Startup Query Interval.  Default:\
    \ the Robustness\n   Variable.\n"
- title: 7.8.  Last Listener Query Interval
  contents:
  - "7.8.  Last Listener Query Interval\n   The Last Listener Query Interval is the\
    \ Maximum Response Delay\n   inserted into Multicast-Address-Specific Queries\
    \ sent in response to\n   Done messages, and is also the amount of time between\
    \ Multicast-\n   Address-Specific Query messages.  Default: 1000 (1 second)\n\
    \   This value may be tuned to modify the \"leave latency\" of the link.  A\n\
    \   reduced value results in reduced time to detect the departure of the\n   last\
    \ listener for an address.\n"
- title: 7.9.  Last Listener Query Count
  contents:
  - "7.9.  Last Listener Query Count\n   The Last Listener Query Count is the number\
    \ of Multicast-Address-\n   Specific Queries sent before the router assumes there\
    \ are no\n   remaining listeners for an address on a link.  Default: the\n   Robustness\
    \ Variable.\n"
- title: 7.10.  Unsolicited Report Interval
  contents:
  - "7.10.  Unsolicited Report Interval\n   The Unsolicited Report Interval is the\
    \ time between repetitions of a\n   node's initial report of interest in a multicast\
    \ address.  Default:\n   10 seconds.\n"
- title: 8.  Message Destinations
  contents:
  - "8.  Message Destinations\n   This information is provided elsewhere in the document,\
    \ but is\n   summarized here for convenience.\n"
- title: Message Type                       IPv6 Destination Address
  contents:
  - 'Message Type                       IPv6 Destination Address

    '
- title: '------------                       ------------------------'
  contents:
  - '------------                       ------------------------

    '
- title: General Query                      link-scope all-nodes (FF02::1)
  contents:
  - 'General Query                      link-scope all-nodes (FF02::1)

    '
- title: Multicast-Address-Specific Query   the multicast address being queried
  contents:
  - 'Multicast-Address-Specific Query   the multicast address being queried

    '
- title: Report                             the multicast address being reported
  contents:
  - 'Report                             the multicast address being reported

    '
- title: Done                               link-scope all-routers (FF02::2)
  contents:
  - 'Done                               link-scope all-routers (FF02::2)

    '
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   We consider the ramifications of a forged message\
    \ of each type.  Note\n   that the requirement that nodes verify that the IPv6\
    \ Source Address\n   of all received MLD messages is a link-local address defends\
    \ them\n   from acting on forged MLD messages originated off-link, so we discuss\n\
    \   only the effects of on-link forgery.\n   Query message:\n        A forged\
    \ Query message from a machine with a lower IP address\n        than the current\
    \ Querier will cause Querier duties to be\n        assigned to the forger.  If\
    \ the forger then sends no more Query\n        messages, other routers' Other\
    \ Querier Present timer will time\n        out and one will resume the role of\
    \ Querier.  During this time,\n        if the forger ignores Done messages, traffic\
    \ might flow to\n        addresses with no listeners for up to [Multicast Listener\n\
    \        Interval].\n        A forged Query message sent to an address with listeners\
    \ will\n        cause one or more nodes that are listeners to that address to\n\
    \        send a Report.  This causes a small amount of extra traffic on\n    \
    \    the link, but causes no protocol problems.\n   Report message:\n        A\
    \ forged Report message may cause routers to think there are\n        listeners\
    \ for an address present on a link when there are not.\n        However, since\
    \ listening to a multicast address is generally an\n        unprivileged operation,\
    \ a local user may trivially gain the same\n        result without forging any\
    \ messages.\n   Done message:\n        A forged Done message will cause the Querier\
    \ to send out\n        Multicast-Address-Specific Queries for the address in question.\n\
    \        This causes extra processing on each router and on each of the\n    \
    \    address's listeners, and extra packets on the link, but cannot\n        cause\
    \ loss of desired traffic.\n"
- title: 10.  Acknowledgments
  contents:
  - "10.  Acknowledgments\n   MLD was derived from IGMPv2 [IGMPv2], which was designed\
    \ by Rosen\n   Sharma and Steve Deering and documented by Bill Fenner.\n"
- title: 11.  References
  contents:
  - "11.  References\n   [ADDR-ARCH]  Hinden, R. and S. Deering, \"IP Version 6 Addressing\n\
    \                Architecture\", RFC 2373, July 1998.\n   [ICMPv6]     Conta,\
    \ A. and S. Deering, \"Internet Control Message\n                Protocol (ICMPv6)\
    \ for the Internet Protocol Version 6\n                (IPv6) Specification\"\
    , RFC 2463, December 1998.\n   [IGMPv2]     Fenner, W., \"Internet Group Management\
    \ Protocol, Version\n                2\", RFC 2236, November 1997.\n   [IPv6]\
    \       Deering, S. and R. Hinden, \"Internet Protocol, Version 6\n          \
    \      (IPv6) Specification\", RFC 2460, December 1998.\n   [IPv6-ETHER] Crawford,\
    \ M., \"Transmission of IPv6 Packets over\n                Ethernet Networks\"\
    , RFC 2464, December, 1998.\n   [KEYWORDS]   Bradner, S., \"Key words for use\
    \ in RFCs to Indicate\n                Requirement Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   [RTR-ALERT]  Partridge, C. and A. Jackson, \"IPv6 Router Alert\n\
    \                Option\", RFC 2711, October 1999.\n   [STD-PROC]   Bradner, S.,\
    \ \"The Internet Standards Process -- Revision\n                3\", BCP 9, RFC\
    \ 2026, October 1996.\n"
- title: 12.  Authors' Addresses
  contents:
  - "12.  Authors' Addresses\n   Stephen E. Deering\n   Cisco Systems, Inc.\n   170\
    \ West Tasman Drive\n   San Jose, CA 95134-1706\n   USA\n   Phone: +1 408 527\
    \ 8213\n   EMail: deering@cisco.com\n   William C. Fenner\n   AT&T Research\n\
    \   75 Willow Road\n   Menlo Park, CA 94025\n   USA\n   Phone: +1 650 867 6073\n\
    \   EMail: fenner@research.att.com\n   Brian Haberman\n   IBM Corporation\n  \
    \ 800 Park Office Drive\n   Research Triangle Park, NC  27709\n   USA\n   Phone:\
    \ +1 919 254 2673\n   EMail: haberman@raleigh.ibm.com\n"
- title: 13.  Full Copyright Statement
  contents:
  - "13.  Full Copyright Statement\n   Copyright (C) The Internet Society (1999).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
