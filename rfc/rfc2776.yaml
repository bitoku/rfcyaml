- title: __initial_text__
  contents:
  - '           Multicast-Scope Zone Announcement Protocol (MZAP)

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines a protocol, the Multicast-Scope Zone\n   Announcement\
    \ Protocol (MZAP), for discovering the multicast\n   administrative scope zones\
    \ that are relevant at a particular\n   location.  MZAP also provides mechanisms\
    \ whereby common\n   misconfigurations of administrative scope zones can be discovered.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   5.4 Not-Inside Message ........................................\
    \ 16\n   6 Message Processing Rules .................................... 17\n\
    \   6.1 Internal entities listening to MZAP messages .............. 17\n   6.2\
    \ Sending ZAMs .............................................. 18\n   6.3 Receiving\
    \ ZAMs ............................................ 18\n   6.4 Sending ZLEs ..............................................\
    \ 20\n   6.5 Receiving ZLEs ............................................ 20\n\
    \   6.6 Sending ZCMs .............................................. 21\n   6.7\
    \ Receiving ZCMs ............................................ 21\n   6.8 Sending\
    \ NIMs .............................................. 21\n   6.9 Receiving NIMs\
    \ ............................................ 22\n   7 Constants ...................................................\
    \ 22\n   8 Security Considerations ..................................... 23\n\
    \   9 Acknowledgements ............................................ 24\n   10\
    \ References ................................................. 25\n   11 Authors'\
    \ Addresses ......................................... 26\n   12 Full Copyright\
    \ Statement ................................... 27\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The use of administratively-scoped IP multicast, as defined\
    \ in RFC\n   2365 [1], allows packets to be addressed to a specific range of\n\
    \   multicast addresses (e.g., 239.0.0.0 to 239.255.255.255 for IPv4)\n   such\
    \ that the packets will not cross configured administrative\n   boundaries, and\
    \ also allows such addresses to be locally assigned and\n   hence are not required\
    \ to be unique across administrative boundaries.\n   This property of logical\
    \ naming both allows for address reuse, as\n   well as provides the capability\
    \ for infrastructure services such as\n   address allocation, session advertisement,\
    \ and service location to\n   use well-known addresses which are guaranteed to\
    \ have local\n   significance within every organization.\n   The range of administratively-scoped\
    \ addresses can be subdivided by\n   administrators so that multiple levels of\
    \ administrative boundaries\n   can be simultaneously supported.  As a result,\
    \ a \"multicast scope\" is\n   defined as a particular range of addresses which\
    \ has been given some\n   topological meaning.\n   To support such usage, a router\
    \ at an administrative boundary is\n   configured with one or more per-interface\
    \ filters, or \"multicast\n   scope boundaries\".  Having such a boundary on an\
    \ interface means that\n   it will not forward packets matching a configured range\
    \ of multicast\n   addresses in either direction on the interface.\n   A specific\
    \ area of the network topology which is within a boundary\n   for a given scope\
    \ is known as a \"multicast scope zone\".  Since the\n   same ranges can be reused\
    \ within disjoint areas of the network, there\n   may be many \"multicast scope\
    \ zones\" for any given multicast scope.  A\n   scope zone may have zero or more\
    \ textual names (in different\n   languages) for the scope, for human convenience.\
    \  For example, if the\n   range 239.192/14 were assigned to span an entire corporate\
    \ network,\n   it might be given (internally) the name \"BigCo Private Scope\"\
    .\n   Administrative scope zones may be of any size, and a particular host\n \
    \  may be within many administrative scope zones (for different scopes,\n   i.e.,\
    \ for non-overlapping ranges of addresses) of various sizes, as\n   long as scope\
    \ zones that intersect topologically do not intersect in\n   address range.\n\
    \   Applications and services are interested in various aspects of the\n   scopes\
    \ within which they reside:\n   o  Applications which present users with a choice\
    \ of which scope in\n      which to operate (e.g., when creating a new session,\
    \ whether it is\n      to be confined to a corporate intranet, or whether it should\
    \ go\n      out over the public Internet) are interested in the textual names\n\
    \      which have significance to users.\n   o  Services which use \"relative\"\
    \ multicast addresses (as defined in\n      [1]) in every scope are interested\
    \ in the range of addresses used\n      by each scope, so that they can apply\
    \ a constant offset and\n      compute which address to use in each scope.\n \
    \  o  Address allocators are interested in the address range, and\n      whether\
    \ they are allowed to allocate addresses within the entire\n      range or not.\n\
    \   o  Some applications and services may also be interested in the\n      nesting\
    \ relationships among scopes.  For example, knowledge of the\n      nesting relationships\
    \ can be used to perform \"expanding-scope\"\n      searches in a similar, but\
    \ better behaved, manner to the well-\n      known expanding ring search where\
    \ the TTL of a query is steadily\n      increased until a replier can be found.\
    \  Studies have also shown\n      that nested scopes can be useful in localizing\
    \ multicast repair\n      traffic [8].\n   Two barriers currently make administrative\
    \ scoping difficult to\n   deploy and use:\n   o  Applications have no way to\
    \ dynamically discover information on\n      scopes that are relevant to them.\
    \  This makes it difficult to use\n      administrative scope zones, and hence\
    \ reduces the incentive to\n      deploy them.\n   o  Misconfiguration is easy.\
    \  It is difficult to detect scope zones\n      that have been configured so as\
    \ to not be convex (the shortest\n      path between two nodes within the zone\
    \ passes outside the zone),\n      or to leak (one or more boundary routers were\
    \ not configured\n      correctly), or to intersect in both area and address range.\n\
    \   These two barriers are addressed by this document.  In particular,\n   this\
    \ document defines the Multicast Scope Zone Announcement Protocol\n   (MZAP) which\
    \ allows an entity to learn what scope zones it is within.\n   Typically servers\
    \ will cache the information learned from MZAP and\n   can then provide this information\
    \ to applications in a timely fashion\n   upon request using other means, e.g.,\
    \ via MADCAP [9].  MZAP also\n   provides diagnostic information to the boundary\
    \ routers themselves\n   that enables misconfigured scope zones to be detected.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The \"Local Scope\" is defined in RFC 2365 [1] and represents\
    \ the\n   smallest administrative scope larger than link-local, and the\n   associated\
    \ address range is defined as 239.255.0.0 to 239.255.255.255\n   inclusive (for\
    \ IPv4, FF03::/16 for IPv6).  RFC 2365 specifies:\n      \"239.255.0.0/16 is defined\
    \ to be the IPv4 Local Scope.  The Local\n      Scope is the minimal enclosing\
    \ scope, and hence is not further\n      divisible. Although the exact extent\
    \ of a Local Scope is site\n      dependent, locally scoped regions must obey\
    \ certain topological\n      constraints. In particular, a Local Scope must not\
    \ span any other\n      scope boundary. Further, a Local Scope must be completely\n\
    \      contained within or equal to any larger scope. In the event that\n    \
    \  scope regions overlap in area, the area of overlap must be in its\n      own\
    \ Local Scope.  This implies that any scope boundary is also a\n      boundary\
    \ for the Local Scope.\"\n   A multicast scope Zone Boundary Router (ZBR) is a\
    \ router that is\n   configured with a boundary for a particular multicast scope\
    \ on one or\n   more of its interfaces.  Any interface that is configured with\
    \ a\n   boundary for any administrative scope zone MUST also have a boundary\n\
    \   for the Local Scope zone, as described above.\n   Such routers SHOULD be configured\
    \ so that the router itself is within\n   the scope zone.  This is shown in Figure\
    \ 1(a), where router A is\n   inside the scope zone and has the boundary configuration.\n\
    \          ............                     ................\n         .     \
    \       .   +B+-->          .                *B+-->\n        .              .\
    \ /               .                / .\n       .                *            \
    \   .                +   .\n       .          <---+A*---+C+->       .        \
    \  <---+A+---*C+->\n       .              + .               .              + \
    \    .\n       .             /  .               .             /      .\n     \
    \   . zone X  <--  .                 . zone X  <--      .\n         ..............\
    \                   ..................\n        A,B,C - routers    * - boundary\
    \ interface    + - interface\n       (a) Correct zone boundary         (b) Incorrect\
    \ zone boundary\n          Figure 1: Administrative scope zone boundary placement\n\
    \   It is possible for the first router outside the scope zone to be\n   configured\
    \ with the boundary, as illustrated in Figure 1(b) where\n   routers B and C are\
    \ outside the zone and have the boundary\n   configuration, whereas A does not,\
    \ but this is NOT RECOMMENDED.  This\n   rule does not apply for Local Scope boundaries,\
    \ but applies for all\n   other boundary routers.\n   We next define the term\
    \ \"Zone ID\" to mean the lowest IP address used\n   by any ZBR for a particular\
    \ zone for sourcing MZAP messages into that\n   scope zone.  The combination of\
    \ this IP address and the first\n   multicast address in the scope range serve\
    \ to uniquely identify the\n   scope zone.  Each ZBR listens for messages from\
    \ other ZBRs for the\n   same boundary, and can determine the Zone ID based on\
    \ the source\n   addresses seen.  The Zone ID may change over time as ZBRs come\
    \ up and\n   down.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ RFC 2119 [2].\n   Constants used by this protocol are shown as [NAME-OF-CONSTANT],\
    \ and\n   summarized in section 7.\n"
- title: 3.  Overview
  contents:
  - "3.  Overview\n   When a ZBR is configured correctly, it can deduce which side\
    \ of the\n   boundary is inside the scope zone and which side is outside it.\n\
    \   Such a ZBR then sends periodic Zone Announcement Messages (ZAMs) for\n   each\
    \ zone for which it is configured as a boundary into that scope\n   zone, containing\
    \ information on the scope zone's address range, Zone\n   ID, and textual names.\
    \  These messages are multicast to the well-\n   known address [MZAP-LOCAL-GROUP]\
    \ in the Local Scope, and are relayed\n   across Local Scope boundaries into all\
    \ Local Scope zones within the\n   scope zone referred to by the ZAM message,\
    \ as shown in Figure 2.\n    ###########################\n    # Zone1      = \
    \     Zone2 #    ##### = large scope zone boundary\n    *E-----+--->A*-----+-x\
    \    #\n    #      |     =     v      #    ===== = Local Scope boundaries\n  \
    \  #      |     ======*===*==#\n    #      |     =     B   F  #    ----> = path\
    \ of ZAM originated by E\n   G*<-----+--->C*->   |   ^  #\n    #      v     =\
    \   <-+---+  #    ABCDE = ZBRs\n    #      D     =      Zone3 #\n    #######*###################\
    \        * = boundary interface\n                   Figure 2: ZAM Flooding Example\n\
    \   Any entity can thus listen on a single well-known group address and\n   learn\
    \ about all scopes in which it resides.\n"
- title: 3.1.  Scope Nesting
  contents:
  - "3.1.  Scope Nesting\n   MZAP also provides the ability to discover the nesting\
    \ relationships\n   between scope zones.  Two zones are nested if one is comprised\
    \ of a\n   subset of the routers in the other, as shown in Figure 3.\n     +-----------+\
    \       +-----------+      +-------------+\n     | Zone 1    |       | Zone 3\
    \    |      | Zone 5      |\n     |   +------+|       |    +------+      |   \
    \ .........|..\n     |   |Zone 2||       |    |Zone 4|      |    : Zone 6 | :\n\
    \     |   +--A---+|       |    C      |      |    D        | :\n     +-----------+\
    \       +----+--B---+      +--------E----+ :\n                               \
    \                  :..........:\n   (a) \"Contained\"    (b) \"Common Border\"\
    \  (c) \"Overlap\"\n        Zone 2 nests       Zone 4 nests         Zones 5 and\
    \ 6\n        inside Zone 1      inside Zone 3        do not nest\n           \
    \        Figure 3: Zone nesting examples\n   A ZBR cannot independently determine\
    \ whether one zone is nested\n   inside another.  However, it can determine that\
    \ one zone does NOT\n   nest inside another.  For example, in Figure 3:\n   o\
    \  ZBR A will pass ZAMs for zone 1 but will prevent ZAMs from zone 2\n      from\
    \ leaving zone 2.  When ZBR A first receives a ZAM for zone 1,\n      it then\
    \ knows that zone 1 does not nest within zone 2, but it\n      cannot, however,\
    \ determine whether zone 2 nests within zone 1.\n   o  ZBR B acts as ZBR for both\
    \ zones 3 and 4, and hence cannot\n      determine if one is nested inside the\
    \ other.  However, ZBR C can\n      determine that zone 3 does not nest inside\
    \ zone 4 when it receives\n      a ZAM for zone 3, since it is a ZBR for zone\
    \ 4 but not zone 3.\n   o  ZBR D only acts as ZBR zone 6 and not 5, hence ZBR\
    \ D can deduce\n      that zone 5 does not nest inside zone 6 upon hearing a ZAM\
    \ for\n      zone 5.  Similarly, ZBR E only acts as ZBR zone 5 and not 6, hence\n\
    \      ZBR E can deduce that zone 6 does not nest inside zone 5 upon\n      hearing\
    \ a ZAM for zone 6.\n   The fact that ZBRs can determine that one zone does not\
    \ nest inside\n   another, but not that a zone does nest inside another, means\
    \ that\n   nesting must be determined in a distributed fashion.  This is done\
    \ by\n   sending Not-Inside Messages (NIMs) which express the fact that a zone\n\
    \   X is not inside a zone Y.  Such messages are sent to the well-known\n   [MZAP-LOCAL-GROUP]\
    \ and are thus seen by the same entities listening\n   to ZAM messages (e.g.,\
    \ MADCAP servers).  Such entities can then\n   determine the nesting relationship\
    \ between two scopes based on a\n   sustained absence of any evidence to the contrary.\n"
- title: 3.2.  Other Messages
  contents:
  - "3.2.  Other Messages\n   Two other message types, Zone Convexity Messages (ZCMs)\
    \ and Zone\n   Limit Exceeded (ZLE) messages, are used only by routers, and enable\n\
    \   them to compare their configurations for consistency and detect\n   misconfigurations.\
    \  These messages are sent to MZAP's relative\n   address within the scope range\
    \ associated with the scope zone to\n   which they refer, and hence are typically\
    \ not seen by entities other\n   than routers.  Their use in detecting specific\
    \ misconfiguration\n   scenarios will be covered in the next section.\n   Packet\
    \ formats for all messages are described in Section 5.\n"
- title: 3.3.  Zone IDs
  contents:
  - "3.3.  Zone IDs\n   When a boundary router first starts up, it uses its lowest\
    \ IP address\n   which it considers to be inside a given zone, and which is routable\n\
    \   everywhere within the zone (for example, not a link-local address),\n   as\
    \ the Zone ID for that zone.  It then schedules ZCM (and ZAM)\n   messages to\
    \ be sent in the future (it does not send them\n   immediately).  When a ZCM is\
    \ received for the given scope, the sender\n   is added to the local list of ZBRs\
    \ (including itself) for that scope,\n   and the Zone ID is updated to be the\
    \ lowest IP address in the list.\n   Entries in the list are eventually timed\
    \ out if no further messages\n   are received from that ZBR, such that the Zone\
    \ ID will converge to\n   the lowest address of any active ZBR for the scope.\n\
    \   Note that the sender of ZAM messages MUST NOT be used in this way.\n   This\
    \ is because the procedure for detecting a leaky Local scope\n   described in\
    \ Section 4.3 below relies on two disjoint zones for the\n   same scope range\
    \ having different Zone IDs.  If ZAMs are used to\n   compute Zone IDs, then ZAMs\
    \ leaking across a Local Scope boundary\n   will cause the two zones to converge\
    \ to the same Zone ID.\n"
- title: 4.  Detecting Router Misconfigurations
  contents:
  - "4.  Detecting Router Misconfigurations\n   In this section, we cover how to detect\
    \ various error conditions.  If\n   any error is detected, the router should attempt\
    \ to alert a network\n   administrator to the nature of the misconfiguration.\
    \  The means to do\n   this lies outside the scope of MZAP.\n"
- title: 4.1.  Detecting non-convex scope zones
  contents:
  - "4.1.  Detecting non-convex scope zones\n   Zone Convexity Messages (ZCMs) are\
    \ used by routers to detect non-\n   convex administrative scope zones, which\
    \ are one possible\n   misconfiguration.  Non-convex scope zones can cause problems\
    \ for\n   applications since a receiver may never see administratively-scoped\n\
    \   packets from a sender within the same scope zone, since packets\n   travelling\
    \ between them may be dropped at the boundary.\n   In the example illustrated\
    \ in Figure 4, the path between B and D goes\n   outside the scope (through A\
    \ and E).  Here, Router B and Router C\n   send ZCMs within a given scope zone\
    \ for which they each have a\n   boundary, with each reporting the other boundary\
    \ routers of the zone\n   from which they have heard.  In Figure 4, Router D cannot\
    \ see Router\n   B's messages, but can see C's report of B, and so can conclude\
    \ the\n   zone is not convex.\n    #####*####========\n    #    B   #       =\
    \         ##### = non-convex scope boundary\n    #    |->A*       =\n    #   \
    \ |   #       =         ===== = other scope boundaries\n    #    |   ####*####\n\
    \    #    |       E   #         ----> = path of B's ZCM\n    #    v          D*\n\
    \    #    C           #             * = boundary interface\n    #####*############\n\
    \                Figure 4: Non-convexity detection\n   Non-convex scope zones\
    \ can be detected via three methods:\n   (1) If a ZBR is listed in ZCMs received,\
    \ but the next-hop interface\n       (according to the multicast RIB) towards\
    \ that ZBR is outside the\n       scope zone,\n   (2) If a ZBR is listed in ZCMs\
    \ received, but no ZCM is received from\n       that ZBR for [ZCM-HOLDTIME] seconds,\
    \ as illustrated in Figure 4,\n       or\n   (3) ZAM messages can also be used\
    \ in a manner similar to that for\n       ZCMs in (1) above, as follows: if a\
    \ ZAM is received from a ZBR on\n       an interface inside a given scope zone,\
    \ and the next-hop\n       interface (according to the multicast RIB) towards\
    \ that ZBR is\n       outside the scope zone.\n   Zone Convexity Messages MAY\
    \ also be sent and received by correctly\n   configured ordinary hosts within\
    \ a scope region, which may be a\n   useful diagnostic facility that does not\
    \ require privileged access.\n"
- title: 4.2.  Detecting leaky boundaries for non-local scopes
  contents:
  - "4.2.  Detecting leaky boundaries for non-local scopes\n   A \"leaky\" boundary\
    \ is one which logically has a \"hole\" due to some\n   router not having a boundary\
    \ applied on an interface where one ought\n   to exist.  Hence, the boundary does\
    \ not completely surround a piece\n   of the network, resulting in scoped data\
    \ leaking outside.\n   Leaky scope boundaries can be detected via two methods:\n\
    \   (1) If it receives ZAMs originating inside the scope boundary on an\n    \
    \   interface that points outside the zone boundary.  Such a ZAM\n       message\
    \ must have escaped the zone through a leak, and flooded\n       back around behind\
    \ the boundary.  This is illustrated in Figure\n       5.\n        =============#####*########\n\
    \        = Zone1      #    A Zone2 #       C   = misconfigured router\n      \
    \  =      +---->*E   v       #\n        =      |     #    B       #     #####\
    \ = leaky scope boundary\n        =======*=====#====*=======#\n        =     \
    \ D     #    |       #     ===== = other scope boundaries\n        =      ^-----*C<--+\
    \       #\n        = Zone4      #      Zone3 #     ----> = path of ZAMs\n    \
    \    =============##############\n                        Figure 5: ZAM Leaking\n\
    \   (2) If a Zone Length Exceeded (ZLE) message is received.  The ZAM\n      \
    \ packet also contains a Zones Traveled Limit.  If the number of\n       Local\
    \ Scope zones traversed becomes equal to the Zones Traveled\n       Limit, a ZLE\
    \ message is generated (the suppression mechanism for\n       preventing implosion\
    \ is described later in the Processing Rules\n       section).  ZLEs detect leaks\
    \ where packets do not return to\n       another part of the same scope zone,\
    \ but instead reach other\n       Local Scope zones far away from the ZAM originator.\n\
    \   In either case, the misconfigured router will be either the message\n   origin,\
    \ or one of the routers in the ZBR path list which is included\n   in the message\
    \ received (or perhaps a router on the path between two\n   such ZBRs which ought\
    \ to have been a ZBR itself).\n"
- title: 4.3.  Detecting a leaky Local Scope zone
  contents:
  - "4.3.  Detecting a leaky Local Scope zone\n   A local scope is leaky if a router\
    \ has an administrative scope\n   boundary on some interface, but does not have\
    \ a Local Scope boundary\n   on that interface as specified in RFC 2365.  This\
    \ can be detected via\n   the following method:\n   o  If a ZAM for a given scope\
    \ is received by a ZBR which is a\n      boundary for that scope, it compares\
    \ the Origin's Scope Zone ID in\n      the ZAM with its own Zone ID for the given\
    \ scope.  If the two do\n      not match, this is evidence of a misconfiguration.\
    \  Since a\n      temporary mismatch may result immediately after a recent change\
    \ in\n      the reachability of the lowest-addressed ZBR, misconfiguration\n \
    \     should be assumed only if the mismatch is persistent.\n   The exact location\
    \ of the problem can be found by doing an mtrace [5]\n   from the router detecting\
    \ the problem, back to the ZAM origin, for\n   any group within the address range\
    \ identified by the ZAM.  The router\n   at fault will be the one reporting that\
    \ a boundary was reached.\n"
- title: 4.4.  Detecting conflicting scope zones
  contents:
  - "4.4.  Detecting conflicting scope zones\n   Conflicting address ranges can be\
    \ detected via the following method:\n   o  If a ZBR receives a ZAM for a given\
    \ scope, and the included start\n      and end addresses overlap with, but are\
    \ not identical to, the\n      start and end addresses of a locally-configured\
    \ scope.\n   Conflicting scope names can be detected via the following method:\n\
    \   o  If a ZBR is configured with a textual name for a given scope and\n    \
    \  language, and it receives a ZAM or ZCM with a name for the same\n      scope\
    \ and language, but the scope names do not match.\n   Detecting either type of\
    \ conflict above indicates that either the\n   local router or the router originating\
    \ the message is misconfigured.\n   Configuration tools SHOULD strip white space\
    \ from the beginning and\n   end of each name to avoid accidental misconfiguration.\n"
- title: 5.  Packet Formats
  contents:
  - "5.  Packet Formats\n   All MZAP messages are sent over UDP, with a destination\
    \ port of\n   [MZAP-PORT] and an IPv4 TTL or IPv6 Hop Limit of 255.\n   When sending\
    \ an MZAP message referring to a given scope zone, a ZBR\n   MUST use a source\
    \ address which will have significance everywhere\n   within the scope zone to\
    \ which the message refers.  For example,\n   link-local addresses MUST NOT be\
    \ used.\n   The common MZAP message header (which follows the UDP header), is\n\
    \   shown below:\n    0                   1                   2              \
    \     3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |  \
    \  Version    |B|    PTYPE    |Address Family |   NameCount   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                        Message Origin                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                        Zone ID Address                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Zone Start Address                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                        Zone End Address                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | Encoded Zone Name-1 (variable length)                         |\n   +  \
    \                             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |        \
    \                       |     . . .                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  . . .        | Encoded Zone Name-N (variable length)         |\n   +-+-+-+-+-+-+-+-+\
    \               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |                      \
    \         |     Padding (if needed)       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Version:\n      The version defined in this document is version 0.\n   \"\
    Big\" scope bit (B):\n      If clear, indicates that the addresses in the scoped\
    \ range are not\n      subdividable, and that address allocators may utilize the\
    \ entire\n      range.  If set, address allocators should not use the entire\n\
    \      range, but should learn an appropriate sub-range via another\n      mechanism\
    \ (e.g., AAP [7]).\n   Packet Type (PTYPE):\n      The packet types defined in\
    \ this document are:\n         0: Zone Announcement Message (ZAM)\n         1:\
    \ Zone Limit Exceeded (ZLE)\n         2: Zone Convexity Message (ZCM)\n      \
    \   3: Not-Inside Message (NIM)\n   Address Family:\n      The IANA-assigned address\
    \ family number [10,11] identifying the\n      address family for all addresses\
    \ in the packet.  The families\n      defined for IP are:\n         1: IPv4\n\
    \         2: IPv6\n   Name Count:\n      The number of encoded zone name blocks\
    \ in this packet.  The count\n      may be zero.\n   Zone Start Address: 32 bits\
    \ (IPv4) or 128 bits (IPv6)\n      This gives the start address for the scope\
    \ zone boundary.  For\n      example, if the zone is a boundary for 239.1.0.0\
    \ to 239.1.0.255,\n      then Zone Start Address is 239.1.0.0.\n   Zone End Address:\
    \ 32 bits (IPv4) or 128 bits (IPv6)\n      This gives the ending address for the\
    \ scope zone boundary.  For\n      example, if the zone is a boundary for 239.1.0.0\
    \ to 239.1.0.255,\n      then Zone End Address is 239.1.0.255.\n   Message Origin:\
    \ 32 bits (IPv4) or 128 bits (IPv6)\n      This gives the IP address of the interface\
    \ that originated the\n      message.\n   Zone ID Address: 32 bits (IPv4) or 128\
    \ bits (IPv6)\n      This gives the lowest IP address of a boundary router that\
    \ has\n      been observed in the zone originating the message.  Together with\n\
    \      Zone Start Address and Zone End Address, it forms a unique ID for\n   \
    \   the zone.  Note that this ID is usually different from the ID of\n      the\
    \ Local Scope zone in which the origin resides.\n   Encoded Zone Name:\n     \
    \ +--------------------+\n      |D| Reserved (7 bits)|\n      +--------------------+\n\
    \      | LangLen (1 byte)   |\n      +--------------------+-----------+\n    \
    \  | Language Tag (variable size)   |\n      +--------------------+-----------+\n\
    \      | NameLen (1 byte)   |\n      +--------------------+-----------+\n    \
    \  | Zone Name (variable size)      |\n      +--------------------------------+\n\
    \      The first byte contains flags, of which only the high bit is\n      defined.\
    \  The other bits are reserved (sent as 0, ignored on\n      receipt).\n   \"\
    Default Language\" (D) bit:\n      If set, indicates a preference that the name\
    \ in the following\n      language should be used if no name is available in a\
    \ desired\n      language.\n   Language tag length (LangLen): 1 byte\n      The\
    \ length, in bytes, of the language tag.\n   Language Tag: (variable size)\n \
    \     The language tag, such as \"en-US\", indicating the language of the\n  \
    \    zone name.  Language tags are described in [6].\n   Name Len:\n      The\
    \ length, in bytes, of the Zone Name field.  The length MUST NOT\n      be zero.\n\
    \   Zone Name: multiple of 8 bits\n      The Zone Name is an ISO 10646 character\
    \ string in UTF-8 encoding\n      [4] indicating the name given to the scope zone\
    \ (eg: \"ISI-West\n      Site\").  It should be relatively short and MUST be less\
    \ than 256\n      bytes in length.  White space SHOULD be stripped from the\n\
    \      beginning and end of each name before encoding, to avoid\n      accidental\
    \ conflicts.\n   Padding (if needed):\n      The end of the MZAP header is padded\
    \ with null bytes until it is\n      4-byte aligned.\n"
- title: 5.1.  Zone Announcement Message
  contents:
  - "5.1.  Zone Announcement Message\n   A Zone Announcement Message has PTYPE=0,\
    \ and is periodically sent by\n   a ZBR for each scope for which it is a boundary,\
    \ EXCEPT:\n   o  the Local Scope\n   o  the Link-local scope\n   The format of\
    \ a Zone Announcement Message is shown below:\n    0                   1     \
    \              2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                               MZAP Header\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      ZT       |     ZTL       |           Hold Time           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Local Zone ID Address 0                   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                        Router Address 1                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Local Zone ID Address 1                   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                                .....\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                        Router Address N                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Local Zone ID Address N                   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The fields are defined as follows:\n   Zones Traveled (ZT): 8 bits\n     \
    \ This gives the number of Local Zone IDs contained in this message\n      path.\n\
    \   Zones Traveled Limit (ZTL): 8 bits\n      This gives the limit on number of\
    \ local zones that the packet can\n      traverse before it MUST be dropped. \
    \ A value of 0 indicates that\n      no limit exists.\n   Hold Time:\n      The\
    \ time, in seconds, after which the receiver should assume the\n      scope no\
    \ longer exists, if no subsequent ZAM is received.  This\n      should be set\
    \ to [ZAM-HOLDTIME].\n   Zone Path: multiple of 64 bits (IPv4) or 256 bits (IPv6)\n\
    \      The zone path is a list of Local Zone ID Addresses (the Zone ID\n     \
    \ Address of a local zone) through which the ZAM has passed, and IP\n      addresses\
    \ of the router that forwarded the packet.  The origin\n      router fills in\
    \ the \"Local Zone ID Address 0\" field when sending\n      the ZAM.  Every Local\
    \ Scope router that forwards the ZAM across a\n      Local Scope boundary MUST\
    \ add the Local Zone ID Address of the\n      local zone that the packet of the\
    \ zone into which the message is\n      being forwarded, and its own IP address\
    \ to the end of this list,\n      and increment ZT accordingly.  The zone path\
    \ is empty which the\n      ZAM is first sent.\n"
- title: 5.2.  Zone Limit Exceeded (ZLE)
  contents:
  - "5.2.  Zone Limit Exceeded (ZLE)\n   The format of a ZLE is shown below:\n   \
    \ 0                   1                   2                   3\n    0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                               MZAP Header\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      ZT       |     ZTL       |         Hold Time             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Local Zone ID Address 0                   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                        Router Address 1                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Local Zone ID Address 1                   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                                .....\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                        Router Address N                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Local Zone ID Address N                   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   All fields are copied from the ZAM, except PTYPE which is set to one.\n"
- title: 5.3.  Zone Convexity Message
  contents:
  - "5.3.  Zone Convexity Message\n   A Zone Announcement Message has PTYPE=2, and\
    \ is periodically sent by\n   a ZBR for each scope for which it is a boundary\
    \ (except the Link-\n   local scope).  Note that ZCM's ARE sent in the Local Scope.\n\
    \   Unlike Zone Announcement Messages which are sent to the [MZAP-LOCAL-\n   GROUP],\
    \ Zone Convexity Messages are sent to the [ZCM-RELATIVE-GROUP]\n   in the scope\
    \ zone itself.  The format of a ZCM is shown below:\n    0                   1\
    \                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                               MZAP Header\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     ZNUM      |  unused       |           Hold Time           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          ZBR Address 1                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                                .....\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          ZBR Address N                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The fields are as follows:\n   Number of ZBR addresses (ZNUM): 8 bits\n  \
    \    This field gives the number of ZBR Addresses contained in this\n      message.\n\
    \   Hold Time:\n      The time, in seconds, after which the receiver should assume\
    \ the\n      sender is no longer reachable, if no subsequent ZCM is received.\n\
    \      This should be set to [ZCM-HOLDTIME].\n   ZBR Address: 32 bits (IPv4) or\
    \ 128 bits (IPv6)\n      These fields give the addresses of the other ZBRs from\
    \ which the\n      Message Origin ZBR has received ZCMs but whose hold time has\
    \ not\n      expired.  The router should include all such addresses which fit\n\
    \      in the packet, preferring those which it has not included recently\n  \
    \    if all do not fit.\n"
- title: 5.4.  Not-Inside Message
  contents:
  - "5.4.  Not-Inside Message\n   A Not-Inside Message (NIM) has PTYPE=3, and is periodically\
    \ sent by a\n   ZBR which knows that a scope X does not nest within another scope\
    \ Y\n   (\"X not inside Y\"):\n   The format of a Not-Inside Message is shown\
    \ below:\n    0                   1                   2                   3\n\
    \    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                               MZAP Header\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                  Not-Inside Zone Start Address                |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The fields are as follows:\n   MZAP Header:  Header fields identifying the\
    \ scope X.  The Name Count\n      may be 0.\n   Not-Inside Zone Start Address:\
    \ 32 bits (IPv4) or 128 bits (IPv6) This\n      gives the start address for the\
    \ scope Y.\n"
- title: 6.  Message Processing Rules
  contents:
  - '6.  Message Processing Rules

    '
- title: 6.1.  Internal entities listening to MZAP messages
  contents:
  - "6.1.  Internal entities listening to MZAP messages\n   Any host or application\
    \ may join the [MZAP-LOCAL-GROUP] to listen for\n   Zone Announcement Messages\
    \ to build up a list of the scope zones that\n   are relevant locally, and for\
    \ Not-Inside Messages if it wishes to\n   learn nesting information.  However,\
    \ listening to such messages is\n   not the recommended method for regular applications\
    \ to discover this\n   information.  These applications will normally query a\
    \ local\n   Multicast Address Allocation Server (MAAS) [3], which in turn listens\n\
    \   to Zone Announcement Messages and Not-Inside Messages to maintain\n   scope\
    \ information, and can be queried by clients via MADCAP messages.\n   An entity\
    \ (including a MAAS) lacking any such information can only\n   assume that it\
    \ is within the Global Scope, and the Local Scope, both\n   of which have well-known\
    \ address ranges defined in [1].\n   An internal entity (e.g., an MAAS) receiving\
    \ a ZAM will parse the\n   information that is relevant to it, such as the address\
    \ range, and\n   the names.  An address allocator receiving such information MUST\
    \ also\n   use the \"B\" bit to determine whether it can add the address range\
    \ to\n   the set of ranges from which it may allocate addresses (specifically,\n\
    \   it may add them only if the bit is zero).  Even if the bit is zero,\n   an\
    \ MAAS SHOULD still store the range information so that clients who\n   use relative-\
    \ addresses can still obtain the ranges by requesting\n   them from the MAAS.\n\
    \   An internal entity (e.g., an MAAS) should assume that X nests within\n   Y\
    \ if:\n   a) it first heard ZAMs for both X and Y at least [NIM-HOLDTIME]\n  \
    \    seconds ago, AND\n   b) it has not heard a NIM indicating that \"X not inside\
    \ Y\" for at\n      least [NIM-HOLDTIME] seconds.\n"
- title: 6.2.  Sending ZAMs
  contents:
  - "6.2.  Sending ZAMs\n   Each ZBR should send a Zone Announcement Message for each\
    \ scope zone\n   for which it is a boundary every [ZAM-INTERVAL] seconds, +/-\
    \ 30% of\n   [ZAM-INTERVAL] each time to avoid message synchronisation.\n   The\
    \ ZAM packet also contains a Zones Traveled Limit (ZTL).  If the\n   number of\
    \ Local Zone IDs in the ZAM path becomes equal to the Zones\n   Traveled Limit,\
    \ the packet will be dropped.  The ZTL field is set\n   when the packet is first\
    \ sent, and defaults to 32, but can be set to\n   a lower value if a network administrator\
    \ knows the expected size of\n   the zone.\n"
- title: 6.3.  Receiving ZAMs
  contents:
  - "6.3.  Receiving ZAMs\n   When a ZBR receives a ZAM for some scope zone X, it\
    \ uses the\n   following rules.\n   If the local ZBR does NOT have any configuration\
    \ for scope X:\n   (1) Check to see if the included start and end addresses overlap\n\
    \       with, but are not identical to, the start and end addresses of\n     \
    \  any locally-configured scope Y, and if so, signal an address\n       range\
    \ conflict to a local administrator.\n   (2) Create a local \"X not inside\" state\
    \ entry, if such an entry does\n       not already exist.  The ZBR then restarts\
    \ the entry's timer at\n       [ZAM-HOLDTIME].  Existence of this state indicates\
    \ that the ZBR\n       knows that X does not nest inside any scope for which it\
    \ is a\n       boundary.  If the entry's timer expires (because no more ZAMs for\n\
    \       X are heard for [ZAM-HOLDTIME]), the entry is deleted.\n   If the local\
    \ ZBR does have configuration for scope X:\n   (1) If the ZAM originated from\
    \ OUTSIDE the scope (i.e., received over\n       a boundary interface for scope\
    \ X):\n      a) If the Scope Zone ID in the ZAM matches the ZBR's own Scope\n\
    \         Zone ID, then signal a leaky scope misconfiguration.\n      b) Drop\
    \ the ZAM (perform no further processing below).  For\n         example, router\
    \ G in Figure 2 will not forward the ZAM.  This\n         rule is primarily a\
    \ safety measure, since the placement of G in\n         Figure 2 is not a recommended\
    \ configuration, as discussed\n         earlier.\n   2) If the ZAM originated\
    \ from INSIDE the scope:\n      a) If the next-hop interface (according to the\
    \ multicast RIB)\n         towards the Origin is outside the scope zone, then\
    \ signal a\n         non- convexity problem.\n      b) If the Origin's Scope Zone\
    \ ID in the ZAM does not match the\n         Scope Zone ID kept by the local ZBR,\
    \ and this mismatch\n         continues to occur, then signal a possible leaky\
    \ scope warning.\n      c) For each textual name in the ZAM, see if a name for\
    \ the same\n         scope and language is locally-configured; if so, but the\
    \ scope\n         names do not match, signal a scope name conflict to a local\n\
    \         administrator.\n      d) If the ZAM was received on an interface which\
    \ is NOT a Local\n         Scope boundary, and the last Local Zone ID Address\
    \ in the path\n         list is 0, the ZBR fills in the Local Zone ID Address\
    \ of the\n         local zone from which the ZAM was received.\n   If a ZAM for\
    \ the same scope (as identified by the origin Zone ID and\n   first multicast\
    \ address) was received in the last [ZAM-DUP-TIME]\n   seconds, the ZAM is then\
    \ discarded.  Otherwise, the ZAM is cached for\n   at least [ZAM-DUP-TIME] seconds.\
    \  For example, when router C in\n   Figure 2 receives the ZAM via B, it will\
    \ not be forwarded, since it\n   has just forwarded the ZAM from E.\n   The Zones\
    \ Travelled count in the message is then incremented, and if\n   the updated count\
    \ is equal to or greater than the ZTL field, schedule\n   a ZLE to be sent as\
    \ described in the next subsection and perform no\n   further processing below.\n\
    \   If the Zone ID of the Local Scope zone in which the ZBR resides is\n   not\
    \ already in the ZAM's path list, then the ZAM is immediately re-\n   originated\
    \ within the Local Scope zone.  It adds its own address and\n   the Zone ID of\
    \ the Local Scope zone into which the message is being\n   forwarded to the ZAM\
    \ path list before doing so.  A ZBR receiving a\n   ZAM with a non-null path list\
    \ MUST NOT forward that ZAM back into a\n   Local Scope zone that is contained\
    \ in the path list.  For example, in\n   Figure 2, router F, which did not get\
    \ the ZAM via A due to packet\n   loss, will not forward the ZAM from B back into\
    \ Zone 2 since the path\n   list has { (E,1), (A,2), (B,3) } and hence Zone 2\
    \ already appears.\n   In addition, the ZBR re-originates the ZAM out each interface\
    \ with a\n   Local Scope boundary (except that it is not sent back out the\n \
    \  interface over which it was received, nor is it sent into any local\n   scope\
    \ zone whose ID is known and appears in the path list).  In each\n   such ZAM\
    \ re-originated, the ZBR adds its own IP address to the path\n   list, as well\
    \ as the Zone ID Address of the Local Scope Zone into\n   which the ZAM is being\
    \ sent, or 0 if the ID is unknown.  (For\n   example, if the other end of a point-to-point\
    \ link also has a\n   boundary on the interface, then the link has no Local Scope\
    \ Zone ID.)\n"
- title: 6.4.  Sending ZLEs
  contents:
  - "6.4.  Sending ZLEs\n   This packet is sent by a local-zone boundary router that\
    \ would have\n   exceeded the Zone Traveled Limit if it had forwarded a ZAM packet.\n\
    \   To avoid ZLE implosion, ZLEs are multicast with a random delay and\n   suppressed\
    \ by other ZLEs.  It is only scheduled if at least [ZLE-\n   MIN-INTERVAL] seconds\
    \ have elapsed since it previously sent a ZLE to\n   any destination.  To schedule\
    \ a ZLE, the router sets a random delay\n   timer within the interval [ZLE-SUPPRESSION-INTERVAL],\
    \ and listens to\n   the [MZAP-RELATIVE-GROUP] within the included scope for other\
    \ ZLEs.\n   If any are received before the random delay timer expires, the timer\n\
    \   is cleared and the ZLE is not sent.  If the timer expires, the router\n  \
    \ sends a ZLE to the [MZAP-RELATIVE-GROUP] within the indicated scope.\n   The\
    \ method used to choose a random delay (T) is as follows:\n     Choose a random\
    \ value X from the uniform random interval [0:1]\n     Let C = 256\n     Set T\
    \ = [ZLE-SUPPRESSION-INTERVAL] log( C*X + 1) / log(C)\n   This equation results\
    \ in an exponential random distribution which\n   ensures that close to one ZBR\
    \ will respond.  Using a purely uniform\n   distribution would begin to exhibit\
    \ scaling problems as the number of\n   ZBRs rose.  Since ZLEs are only suppressed\
    \ if a duplicate ZLE arrives\n   before the time chosen, two routers choosing\
    \ delays which differ by\n   an amount less than the propagation delay between\
    \ them will both send\n   messages, consuming excess bandwidth.  Hence it is desirable\
    \ to\n   minimize the number of routers choosing a delay close to the lowest\n\
    \   delay chosen, and an exponential distribution is suitable for this\n   purpose.\n\
    \   A router SHOULD NOT send more than one Zone Limit Exceeded message\n   every\
    \ [ZLE-MIN-INTERVAL] regardless of destination.\n"
- title: 6.5.  Receiving ZLEs
  contents:
  - "6.5.  Receiving ZLEs\n   When a router receives a ZLE, it performs the following\
    \ actions:\n   (1) If the router has a duplicate ZLE message scheduled to be sent,\n\
    \       it unschedules its own message so another one will not be sent.\n   (2)\
    \ If the ZLE contains the router's own address in the Origin field,\n       it\
    \ signals a leaky scope misconfiguration.\n"
- title: 6.6.  Sending ZCMs
  contents:
  - "6.6.  Sending ZCMs\n   Each ZBR should send a Zone Convexity Message (ZCM) for\
    \ each scope\n   zone for which it is a boundary every [ZCM-INTERVAL] seconds,\
    \ +/- 30%\n   of [ZCM-INTERVAL] each time to avoid message synchronisation.\n\
    \   ZCMs are sent to the [ZCM-RELATIVE-GROUP] in the scoped range itself.\n  \
    \ (For example, if the scope range is 239.1.0.0 to 239.1.0.255, then\n   these\
    \ messages should be sent to 239.1.0.252.)  As these are not\n   Locally-Scoped\
    \ packets, they are simply multicast across the scope\n   zone itself, and require\
    \ no path to be built up, nor any special\n   processing by intermediate Local\
    \ Scope ZBRs.\n"
- title: 6.7.  Receiving ZCMs
  contents:
  - "6.7.  Receiving ZCMs\n   When a ZCM is received for a given scope X, on an interface\
    \ which is\n   inside the scope, it follows the rules below:\n   (1) The Origin\
    \ is added to the local list of ZBRs (including itself)\n       for that scope,\
    \ and the Zone ID is updated to be the lowest IP\n       address in the list.\
    \  The new entry is scheduled to be timed out\n       after [ZCM-HOLDTIME] if\
    \ no further messages are received from\n       that ZBR, so that the Zone ID\
    \ will converge to the lowest address\n       of any active ZBR for the scope.\n\
    \   (2) If a ZBR is listed in ZCMs received, but the next-hop interface\n    \
    \   (according to the multicast RIB) towards that ZBR is outside the\n       scope\
    \ zone, or if no ZCM is received from that ZBR for [ZCM-\n       HOLDTIME] seconds,\
    \ as in the example in Figure 4, then signal a\n       non-convexity problem.\n\
    \   (3) For each textual name in the ZCM, see if a name for the same\n       scope\
    \ and language is locally-configured; if so, but the scope\n       names do not\
    \ match, signal a scope name conflict to a local\n       administrator.\n"
- title: 6.8.  Sending NIMs
  contents:
  - "6.8.  Sending NIMs\n   Periodically, for each scope zone Y for which it is a\
    \ boundary, a\n   router originates a Not-Inside Message (NIM) for each \"X not\
    \ inside\"\n   entry it has created when receiving ZAMs.  Like a ZAM, this message\n\
    \   is multicast to the address [MZAP-LOCAL-GROUP] from one of its\n   interfaces\
    \ inside Y.\n   Each ZBR should send such a Not-Inside Message every [NIM-INTERVAL]\n\
    \   seconds, +/- 30% of [NIM-INTERVAL] to avoid message synchronization.\n"
- title: 6.9.  Receiving NIMs
  contents:
  - "6.9.  Receiving NIMs\n   When a ZBR receives a NIM saying that \"X is not inside\
    \ Y\", it is\n   forwarded, unmodified, in a manner similar to ZAMs:\n   (1) If\
    \ the NIM was received on an interface with a boundary for\n       either X or\
    \ Y, the NIM is discarded.\n   (2) Unlike ZAMs, if the NIM was not received on\
    \ the interface towards\n       the message origin (according to the Multicast\
    \ RIB), the NIM is\n       discarded.\n   (3) If a NIM for the same X and Y (where\
    \ each is identified by its\n       first multicast address) was received in the\
    \ last [ZAM-DUP-TIME]\n       seconds, the NIM is not forwarded.\n   (4) Otherwise,\
    \ the NIM is cached for at least [ZAM-DUP-TIME] seconds.\n   (5) The ZBR then\
    \ re-originates the NIM (i.e., with the original UDP\n       payload) into each\
    \ local scope zone in which it has interfaces,\n       except that it is not sent\
    \ back into the local scope zone from\n       which the message was received,\
    \ nor is it sent out any interface\n       with a boundary for either X or Y.\n"
- title: 7.  Constants
  contents:
  - "7.  Constants\n   [MZAP-PORT]:  The well-known UDP port to which all MZAP messages\
    \ are\n   sent.  Value: 2106.\n   [MZAP-LOCAL-GROUP]:  The well-known group in\
    \ the Local Scope to which\n   ZAMs are sent.  All Multicast Address Allocation\
    \ servers and Zone\n   Boundary Routers listen to this group.  Value: 239.255.255.252\
    \ for\n   IPv4.\n   [ZCM-RELATIVE-GROUP]:  The relative group in each scope zone,\
    \ to\n   which ZCMs are sent.  A Zone Boundary Router listens to the relative\n\
    \   group in each scope for which it is a boundary.  Value: (last IP\n   address\
    \ in scope range) - 3.  For example, in the Local Scope, the\n   relative group\
    \ is the same as the [MZAP-LOCAL-GROUP] address.\n   [ZAM-INTERVAL]:  The interval\
    \ at which a Zone Boundary Router\n   originates Zone Announcement Messages. \
    \ Default value: 600 seconds\n   (10 minutes).\n   [ZAM-HOLDTIME]:  The holdtime\
    \ to include in a ZAM.  This SHOULD be\n   set to at least 3 * [ZAM-INTERVAL].\
    \  Default value: 1860 seconds (31\n   minutes).\n   [ZAM-DUP-TIME]:  The time\
    \ interval after forwarding a ZAM, during\n   which ZAMs for the same scope will\
    \ not be forwarded.  Default value:\n   30 seconds.\n   [ZCM-INTERVAL]:  The interval\
    \ at which a Zone Boundary Router\n   originates Zone Convexity Messages.  Default\
    \ value: 600 seconds (10\n   minutes).\n   [ZCM-HOLDTIME]:  The holdtime to include\
    \ in a ZCM.  This SHOULD be\n   set to at least 3 * [ZCM-INTERVAL].  Default value:\
    \ 1860 seconds (31\n   minutes).\n   [ZLE-SUPPRESSION-INTERVAL]:  The interval\
    \ over which to choose a\n   random delay before sending a ZLE message.  Default\
    \ value: 300\n   seconds (5 minutes).\n   [ZLE-MIN-INTERVAL]:  The minimum interval\
    \ between sending ZLE\n   messages, regardless of destination.  Default value:\
    \ 300 seconds (5\n   minutes).\n   [NIM-INTERVAL]:  The interval at which a Zone\
    \ Boundary Router\n   originates Not-Inside Messages.  Default value: 1800 seconds\
    \ (30\n   minutes).\n   [NIM-HOLDTIME]:   The holdtime to include the state within\
    \ a NIM.\n   This SHOULD be set to at least 3 * [NIM-INTERVAL]. Default value:\n\
    \   5460 (91 minutes)\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   While unauthorized reading of MZAP messages is\
    \ relatively innocuous\n   (so encryption is generally not an issue), accepting\
    \ unauthenticated\n   MZAP messages can be problematic.  Authentication of MZAP\
    \ messages\n   can be provided by using the IPsec Authentication Header (AH) [12].\n\
    \   In the case of ZCMs and ZLEs, an attacker can cause false logging of\n   convexity\
    \ and leakage problems.  It is likely that is would be purely\n   an annoyance,\
    \ and not cause any significant problem.  (Such messages\n   could be authenticated,\
    \ but since they may be sent within large\n   scopes, the receiver may not be\
    \ able to authenticate a non-malicious\n   sender.)\n   ZAMs and NIMs, on the\
    \ other hand, are sent within the Local Scope,\n   where assuming a security relationship\
    \ between senders and receivers\n   is more practical.\n   In the case of NIMs,\
    \ accepting unauthenticated messages can cause the\n   false cancellation of nesting\
    \ relationships.  This would cause a\n   section of the hierarchy of zones to\
    \ flatten.  Such a flattening\n   would lessen the efficiency benefits afforded\
    \ by the hierarchy but\n   would not cause it to become unusable.\n   Accepting\
    \ unauthenticated ZAM messages, however, could cause\n   applications to believe\
    \ that a scope zone exists when it does not.\n   If these were believed, then\
    \ applications may choose to use this\n   non-existent administrative scope for\
    \ their uses.  Such applications\n   would be able to communicate successfully,\
    \ but would be unaware that\n   their traffic may be traveling further than they\
    \ expected.  As a\n   result, any application accepting unauthenticated ZAMs MUST\
    \ only take\n   scope names as a guideline, and SHOULD assume that their traffic\
    \ sent\n   to non-local scope zones might travel anywhere.  The confidentiality\n\
    \   of such traffic CANNOT be assumed from the fact that it was sent to a\n  \
    \ scoped address that was discovered using MZAP.\n   In addition, ZAMs are used\
    \ to inform Multicast Address Allocation\n   Servers (MAASs) of names and address\
    \ ranges of scopes, and accepting\n   unauthenticated ZAMs could result in false\
    \ names being presented to\n   users, and in wrong addresses being allocated to\
    \ users.  To counter\n   this, MAAS's authenticate ZAMs as follows:\n   (1) A\
    \ ZBR signs all ZAMs it originates (using an AH).\n   (2) A ZBR signs a ZAM it\
    \ relays if and only if it can authenticate\n       the previous sender.  A ZBR\
    \ MUST still forward un-authenticated\n       ZAMs (to provide leak detection),\
    \ but should propagate an\n       authenticated ZAM even if an un-authenticated\
    \ one was received\n       with the last [ZAM-DUP-TIME] seconds.\n   (3) A MAAS\
    \ SHOULD be configured with the public key of the local zone\n       in which\
    \ it resides.  A MAAS thus configured SHOULD ignore an\n       unauthenticated\
    \ ZAM if an authenticated one for the same scope\n       has been received, and\
    \ MAY ignore all unauthenticated ZAMs.\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   This document is a product of the MBone Deployment Working\
    \ Group,\n   whose members provided many helpful comments and suggestions, Van\n\
    \   Jacobson provided some of the original ideas that led to this\n   protocol.\
    \  The Multicast Address Allocation Working Group also\n   provided useful feedback\
    \ regarding scope names and interactions with\n   applications.\n"
- title: 10.  References
  contents:
  - "10.  References\n   [1]  Meyer, D., \"Administratively Scoped IP Multicast\"\
    , BCP 23, RFC\n        2365, July 1998.\n   [2]  Bradner, S., \"Key words for\
    \ use in RFCs to Indicate Requirement\n        Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [3]  Thaler, D., Handley, M. and D. Estrin, \"The Internet Multicast\n\
    \        Address Allocation Architecture\", Work in Progress.\n   [4]  Yergeau,\
    \ F., \"UTF-8, a transformation format of ISO 10646\", RFC\n        2279, January\
    \ 1998.\n   [5]  Fenner, W. and S. Casner, \"A `traceroute' facility for IP\n\
    \        Multicast\", Work in Progress.\n   [6]  Alvestrand, H., \"Tags for the\
    \ Identification of Languages\", RFC\n        1766, March 1995.\n   [7]  Handley,\
    \ M. and S. Hanna.  \"Multicast Address Allocation\n        Protocol (AAP)\",\
    \ Work in Progress.\n   [8]  Kermode, R. \"Scoped Hybrid Automatic Repeat reQuest\
    \ with Forward\n        Error Correction (SHARQFEC)\", ACM SIGCOMM 98, September\
    \ 1998,\n        Vancouver, Canada.\n   [9]  Hanna, S., Patel, B., and M. Shah.\
    \  \"Multicast Address Dynamic\n        Client Allocation Protocol (MADCAP)\"\
    , RFC 2730, December 1999.\n   [10] Reynolds, J. and J. Postel, \"Assigned Numbers\"\
    , STD 2, RFC 1700,\n        October 1994.\n   [11] IANA, \"Address Family Numbers\"\
    , http://www.isi.edu/in-\n        notes/iana/assignments/address-family-numbers\n\
    \   [12] Kent, S. and R. Atkinson, \"IP Authentication Header\", RFC 2402,\n \
    \       November 1998.\n"
- title: 11.  Authors' Addresses
  contents:
  - "11.  Authors' Addresses\n   Mark Handley\n   AT&T Center for Internet Research\
    \ at ICSI\n   1947 Center St, Suite 600\n   Berkely, CA 94704\n   USA\n   EMail:\
    \ mjh@aciri.org\n   David Thaler\n   Microsoft\n   One Microsoft Way\n   Redmond,\
    \ WA 98052\n   USA\n   EMail: dthaler@microsoft.com\n   Roger Kermode\n   Motorola\
    \ Australian Research Centre\n   12 Lord St,\n   Botany, NSW 2019\n   Australia\n\
    \   EMail: Roger.Kermode@motorola.com\n"
- title: 12.  Full Copyright Statement
  contents:
  - "12.  Full Copyright Statement\n   Copyright (C) The Internet Society (2000).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
