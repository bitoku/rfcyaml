- contents:
  - '  On the Use of Stream Control Transmission Protocol (SCTP) with IPsec

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document describes functional requirements for IPsec (RFC 2401)\n
    \  and Internet Key Exchange (IKE) (RFC 2409) to facilitate their use in\n   securing
    SCTP (RFC 2960) traffic.\n"
  title: Abstract
- contents:
  - "1.  Introduction\n   The Stream Control Transmission Protocol (SCTP) is a reliable\n
    \  transport protocol operating on top of a connection-less packet\n   network
    such as IP.  SCTP is designed to transport PSTN signaling\n   messages over IP
    networks, but is capable of broader applications.\n   When SCTP is used over IP
    networks, it may utilize the IP security\n   protocol suite [RFC2402][RFC2406]
    for integrity and confidentiality.\n   To dynamically establish IPsec Security
    Associations (SAs), a key\n   negotiation protocol such as IKE [RFC2409] may be
    used.\n   This document describes functional requirements for IPsec and IKE to\n
    \  facilitate their use in securing SCTP traffic.  In particular, we\n   discuss
    additional support in the form of a new ID type in IKE\n   [RFC2409] and implementation
    choices in the IPsec processing to\n   accommodate for the multiplicity of source
    and destination addresses\n   associated with a single SCTP association.\n"
  - contents:
    - "1.1.  Terminology\n   In this document, the key words \"MAY\", \"MUST, \"MUST
      NOT\", \"optional\",\n   \"recommended\", \"SHOULD\", and \"SHOULD NOT\", are
      to be interpreted as\n   described in [RFC-2119].\n"
    title: 1.1.  Terminology
  title: 1.  Introduction
- contents:
  - "2.  SCTP over IPsec\n   When utilizing the Authentication Header [RFC2402] or
    Encapsulating\n   Security Payload [RFC2406] protocols to provide security services
    for\n   SCTP frames, the SCTP frame is treated as just another transport\n   layer
    protocol on top of IP (same as TCP, UDP, etc.)\n   IPsec implementations should
    already be able to use the SCTP\n   transport protocol number as assigned by IANA
    as a selector in their\n   Security Policy Database (SPD).  It should be straightforward
    to\n   extend existing implementations to use the SCTP source and\n   destination
    port numbers as selectors in the SPD.  Since the concept\n   of a port, and its
    location in the transport header is\n   protocol-specific, the IPsec code responsible
    for identifying the\n   transport protocol ports has to be suitably modified.
    \ This, however\n   is not enough to fully support the use of SCTP in conjunction
    with\n   IPsec.\n   Since SCTP can negotiate sets of source and destination addresses\n
    \  (not necessarily in the same subnet or address range) that may be\n   used
    in the context of a single association, the SPD should be able\n   to accommodate
    this.  The straightforward, and expensive, way is to\n   create one SPD entry
    for each pair of source/destination addresses\n   negotiated.  A better approach
    is to associate sets of addresses with\n   the source and destination selectors
    in each SPD entry (in the case\n   of non-SCTP traffic, these sets would contain
    only one element).\n   While this is an implementation decision, implementors
    are encouraged\n   to follow this or a similar approach when designing or modifying
    the\n   SPD to accommodate SCTP-specific selectors.\n   Similarly, SAs may have
    multiple associated source and destination\n   addresses.  Thus an SA is identified
    by the extended triplet ({set of\n   destination addresses}, SPI, Security Protocol).
    \ A lookup in the\n   Security Association Database (SADB) using the triplet (Destination\n
    \  Address, SPI, Security Protocol), where Destination Address is any of\n   the
    negotiated peer addresses, MUST return the same SA.\n"
  title: 2.  SCTP over IPsec
- contents:
  - "3.  SCTP and IKE\n   There are two issues relevant to the use of IKE when negotiating\n
    \  protection for SCTP traffic:\n   a) Since SCTP allows for multiple source and
    destination network\n   addresses associated with an SCTP association, it MUST
    be possible\n   for IKE to efficiently negotiate these in the Phase 2 (Quick Mode)\n
    \  exchange.  The straightforward approach is to negotiate one pair of\n   IPsec
    SAs for each combination of source and destination addresses.\n   This can result
    in an unnecessarily large number of SAs, thus wasting\n   time (in negotiating
    these) and memory.  All current implementations\n   of IKE support this functionality.
    \ However, a method for specifying\n   multiple selectors in Phase 2 is desirable
    for efficiency purposes.\n   Conformance with this document requires that implementations
    adhere\n   to the guidelines in the rest of this section.\n   Define a new type
    of ID, ID_LIST, that allows for recursive inclusion\n   of IDs.  Thus, the IKE
    Phase 2 Initiator ID for an SCTP association\n   MAY be of type ID_LIST, which
    would in turn contain as many\n   ID_IPV4_ADDR IDs as necessary to describe Initiator
    addresses;\n   likewise for Responder IDs.  Note that other selector types MAY
    be\n   used when establishing SAs for use with SCTP, if there is no need to\n
    \  use negotiate multiple addresses for each SCTP endpoint (i.e., if\n   only
    one address is used by each peer of an SCTP flow).\n   Implementations MUST support
    this new ID type.\n   ID_LIST IDs cannot appear inside ID_LIST ID payloads.  Any
    of the ID\n   types defined in [RFC2407] can be included inside an ID_LIST ID.\n
    \  Each of the IDs contained in the ID_LIST ID must include a complete\n   Identification
    Payload header.\n   The following diagram illustrates the content of an ID_LIST
    ID\n   payload that contains two ID_FQDN payloads.\n    0 1 2 3 4 5 6 7 8 9 0
    1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  !  Next Payload !   RESERVED    !        Payload Length         !\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  !    ID Type    !  Protocol ID  !             Port              !\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  !  Next Payload !   RESERVED    !        Payload Length         !\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  !    ID Type    !  Protocol ID  !             Port              !\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  ~                  FQDN 1 Identification Data                   ~\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  !  Next Payload !   RESERVED    !        Payload Length         !\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  !    ID Type    !  Protocol ID  !             Port              !\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  ~                  FQDN 2 Identification Data                   ~\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  The Next Payload field in any of the included IDs (for FQDN 1 and\n   FQDN
    2) MUST be ignored by the Responder.  The Payload Length, ID\n   Type, Protocol
    ID, and Port fields of the included Payloads should be\n   set to the appropriate
    values.  The Protocol ID and Port fields of\n   the ID_LIST Payload should be
    set to zero by the Initiator and MUST\n   be ignored by the Responder.\n   Different
    types of IDs (e.g., an ID_FQDN and an ID_IPV4_ADDR) can be\n   included inside
    the same ID_LIST ID.  If an ID type included in an\n   ID_LIST ID payload is invalid
    in the context the ID_LIST ID is used,\n   the whole ID_LIST should be considered
    to be at fault, e.g., if an\n   ID_LIST ID payload that contains an ID_FQDN and
    an ID_IPV4_ADDR is\n   received during an IKE Quick Mode exchange, the Responder
    should\n   signal a fault to the Initiator and stop processing of the message\n
    \  (the same behavior it would exhibit if simply an ID_FQDN was received\n   instead).\n
    \  The IANA-assigned number for the ID_LIST ID is 12.\n   b) For IKE to be able
    to validate the Phase 2 selectors, it must be\n   possible to exchange sufficient
    information during Phase 1.\n   Currently, IKE can directly accommodate the simple
    case of two peers\n   talking to each other, by using Phase 1 IDs corresponding
    to their IP\n   addresses, and encoding those same addresses in the SubjAltName
    of\n   the certificates used to authenticate the Phase 1 exchange.  For more\n
    \  complicated scenarios, external policy (or some other mechanism)\n   needs
    to be consulted, to validate the Phase 2 selectors and SA\n   parameters.  All
    addresses presented in Phase 2 selectors MUST be\n   validated.  That is, enough
    evidence must be presented to the\n   Responder that the Initiator is authorized
    to receive traffic for all\n   addresses that appear in the Phase 2 selectors.
    \ This evidence can be\n   derived from the certificates exchanged during Phase
    1 (if possible);\n   otherwise it must be acquired through out-of-band means (e.g.,
    policy\n   mechanism, configured by the administrator, etc.).\n   In order to
    accommodate the same simple scenario in the context of\n   multiple source/destination
    addresses in an SCTP association, it MUST\n   be possible to:\n      1) Specify
    multiple Phase 1 IDs, which are used to validate Phase\n         2 parameters
    (in particular, the Phase 2 selectors).  Following\n         the discussion on
    an ID_LIST ID type, it is possible to use the\n         same method for specifying
    multiple Phase 1 IDs.\n      2) Authenticate the various Phase 1 IDs.  Using pre-shared
    key\n         authentication, this is possible by associating the same shared\n
    \        key with all acceptable peer Phase 1 IDs.  In the case of\n         certificates,
    we have two alternatives:\n            a) The same certificate can contain multiple
    IDs encoded in\n            the SubjAltName field, as an ASN.1 sequence.  Since
    this is\n            already possible, it is the preferred solution and any\n
    \           conformant implementations MUST support this.\n            b) Multiple
    certificates MAY be passed during the Phase 1\n            exchange, in multiple
    CERT payloads.  This feature is also\n            supported by the current specification.
    \ Since only one\n            signature may be issued per IKE Phase 1 exchange,
    it is\n            necessary for all certificates to contain the same key as\n
    \           their Subject.  However, this approach does not offer any\n            significant
    advantage over (a), thus implementations MAY\n            support it.\n         In
    either case, an IKE implementation needs to verify the\n         validity of a
    peer's claimed Phase 1 ID, for all such IDs\n         received over an exchange.\n
    \  Although SCTP does not currently support modification of the\n   addresses
    associated with an SCTP association (while the latter is in\n   use), it is a
    feature that may be supported in the future.  Unless\n   the set of addresses
    changes extremely often, it is sufficient to do\n   a full Phase 1 and Phase 2
    exchange to establish the appropriate\n   selectors and SAs.\n   The last issue
    with respect to SCTP and IKE pertains to the initial\n   offer of Phase 2 selectors
    (IDs) by the Initiator.  Per the current\n   IKE specification, the Responder
    must send in the second message of\n   the Quick Mode the IDs received in the
    first message.  Thus, it is\n   assumed that the Initiator already knows all the
    Selectors relevant\n   to this SCTP association.  In most cases however, the Responder
    has\n   more accurate knowledge of its various addresses.  Thus, the IPsec\n   Selectors
    established can be potentially insufficient or inaccurate.\n   If the proposed
    set of Selectors is not accurate from the Responder's\n   point of view, the latter
    can start a new Quick Mode exchange.  In\n   this new Quick Mode exchange, the
    roles of Initiator and Responder\n   have been reversed; the new Initiator MUST
    copy the SA and Selectors\n   from the old Quick Mode message, and modify its
    set of Selectors to\n   match reality.  All SCTP-supporting IKE implementations
    MUST be able\n   to do this.\n"
  title: 3.  SCTP and IKE
- contents:
  - "4.  Security Considerations\n   This documents discusses the use of a security
    protocol (IPsec) in\n   the context of a new transport protocol (SCTP).  SCTP,
    with its\n   provision for mobility, opens up the possibility for\n   traffic-redirection
    attacks whereby an attacker X claims that his\n   address should be added to an
    SCTP session between peers A and B, and\n   be used for further communications.
    \ In this manner, traffic between\n   A and B can be seen by X.  If X is not in
    the communication path\n   between A and B, SCTP offers him new attack capabilities.
    \ Thus, all\n   such address updates of SCTP sessions should be authenticated.
    \ Since\n   IKE negotiates IPsec SAs for use by these sessions, IKE MUST validate\n
    \  all addresses attached to an SCTP endpoint either through validating\n   the
    certificates presented to it during the Phase 1 exchange, or\n   through some
    out-of-band method.\n   The Responder in a Phase 2 exchange MUST verify the Initiator's\n
    \  authority to receive traffic for all addresses that appear in the\n   Initiator's
    Phase 2 selectors.  Not doing so would allow for any\n   valid peer of the Responder
    (i.e., anyone who can successfully\n   establish a Phase 1 SA with the Responder)
    to see any other valid\n   peer's traffic by claiming their address.\n"
  title: 4.  Security Considerations
- contents:
  - "5.  IANA Considerations\n   IANA has assigned number 12 for ID_LIST (defined
    in Section 3) in the\n   \"IPSEC Identification Type\" registry from the Internet
    Security\n   Association and Key Management Protocol (ISAKMP) Identifiers table.\n"
  title: 5.  IANA Considerations
- contents:
  - "6.  Intellectual Property Rights Notice\n   The IETF takes no position regarding
    the validity or scope of any\n   intellectual property or other rights that might
    be claimed to\n   pertain to the implementation or use of the technology described
    in\n   this document or the extent to which any license under such rights\n   might
    or might not be available; neither does it represent that it\n   has made any
    effort to identify any such rights.  Information on the\n   IETF's procedures
    with respect to rights in standards-track and\n   standards-related documentation
    can be found in BCP-11.  Copies of\n   claims of rights made available for publication
    and any assurances of\n   licenses to be made available, or the result of an attempt
    made to\n   obtain a general license or permission for the use of such\n   proprietary
    rights by implementors or users of this specification can\n   be obtained from
    the IETF Secretariat.\n   The IETF invites any interested party to bring to its
    attention any\n   copyrights, patents or patent applications, or other proprietary\n
    \  rights which may cover technology that may be required to practice\n   this
    standard.  Please address the information to the IETF Executive\n   Director.\n"
  title: 6.  Intellectual Property Rights Notice
- contents:
  - "Normative References\n   [RFC2401]  Kent, S. and R. Atkinson, \"Security Architecture
    for the\n              Internet Protocol\", RFC 2401, November 1998.\n   [RFC2402]
    \ Kent, S. and R. Atkinson, \"IP Authentication Header\", RFC\n              2402,
    November 1998.\n   [RFC2406]  Kent, S. and R. Atkinson, \"IP Encapsulating Security\n
    \             Payload (ESP)\", RFC 2406, November 1998.\n   [RFC2407]  Piper,
    D., \"The Internet IP Security Domain of\n              Interpretation for ISAKMPD\",
    RFC 2407, November 1998.\n   [RFC2408]  Maughan, D., Schertler, M., Schneider,
    M. and J. Turner,\n              \"Internet Security Association and Key Management\n
    \             Protocol\", RFC 2408, November 1998.\n   [RFC2409]  Harkins, D.
    and D. Carrel, \"The Internet Key Exchange\n              (IKE)\", RFC 2409, November
    1998.\n   [RFC2960]  Stewart, R., Xie, Q., Morneault, K., Sharp, C.,\n              Schwarzbauer,
    H., Taylor, T., Rytina, I., Kalla, M.,\n              Zhang, L. and V. Paxson,
    \"Stream Control Transmission\n              Protocol\", RFC 2960, October 2000.\n"
  title: Normative References
- contents:
  - "Authors' Addresses\n   Steven M. Bellovin\n   AT&T Labs - Research\n   180 Park
    Avenue\n   Florham Park, New Jersey 07932-0971\n   Phone: +1 973 360 8656\n   EMail:
    smb@research.att.com\n   John Ioannidis\n   AT&T Labs - Research\n   180 Park
    Avenue\n   Florham Park, New Jersey 07932-0971\n   EMail: ji@research.att.com\n
    \  Angelos D. Keromytis\n   Columbia University, CS Department\n   515 CS Building\n
    \  1214 Amsterdam Avenue, Mailstop 0401\n   New York, New York 10027-7003\n   Phone:
    +1 212 939 7095\n   EMail: angelos@cs.columbia.edu\n   Randall R. Stewart\n   24
    Burning Bush Trail.\n   Crystal Lake, IL 60012\n   Phone: +1-815-477-2127\n   EMail:
    rrs@cisco.com\n"
  title: Authors' Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2003).  All
    Rights Reserved.\n   This document and translations of it may be copied and furnished
    to\n   others, and derivative works that comment on or otherwise explain it\n
    \  or assist in its implementation may be prepared, copied, published\n   and
    distributed, in whole or in part, without restriction of any\n   kind, provided
    that the above copyright notice and this paragraph are\n   included on all such
    copies and derivative works.  However, this\n   document itself may not be modified
    in any way, such as by removing\n   the copyright notice or references to the
    Internet Society or other\n   Internet organizations, except as needed for the
    purpose of\n   developing Internet standards in which case the procedures for\n
    \  copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assignees.\n   This document and the
    information contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET
    SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES,
    EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE
    OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
