- title: __initial_text__
  contents:
  - '        MPLS Forwarding Compliance and Performance Requirements

    '
- title: Abstract
  contents:
  - "Abstract\n   This document provides guidelines for implementers regarding MPLS\n\
    \   forwarding and a basis for evaluations of forwarding implementations.\n  \
    \ Guidelines cover many aspects of MPLS forwarding.  Topics are\n   highlighted\
    \ where implementers might otherwise overlook practical\n   requirements that\
    \ are unstated or underemphasized, or that are\n   optional for conformance to\
    \ RFCs but often considered mandatory by\n   providers.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7325.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction and Document Scope . . . . . . . . . .\
    \ . . . . .   4\n     1.1.  Abbreviations . . . . . . . . . . . . . . . . . .\
    \ . . . .   4\n     1.2.  Use of Requirements Language  . . . . . . . . . . .\
    \ . . .   8\n     1.3.  Apparent Misconceptions . . . . . . . . . . . . . . .\
    \ . .   9\n     1.4.  Target Audience . . . . . . . . . . . . . . . . . . . .\
    \ .  10\n   2.  Forwarding Issues . . . . . . . . . . . . . . . . . . . . . .\
    \  11\n     2.1.  Forwarding Basics . . . . . . . . . . . . . . . . . . . .  11\n\
    \       2.1.1.  MPLS Special-Purpose Labels . . . . . . . . . . . . .  12\n  \
    \     2.1.2.  MPLS Differentiated Services  . . . . . . . . . . . .  13\n    \
    \   2.1.3.  Time Synchronization  . . . . . . . . . . . . . . . .  14\n      \
    \ 2.1.4.  Uses of Multiple Label Stack Entries  . . . . . . . .  14\n       2.1.5.\
    \  MPLS Link Bundling  . . . . . . . . . . . . . . . . .  15\n       2.1.6.  MPLS\
    \ Hierarchy  . . . . . . . . . . . . . . . . . . .  16\n       2.1.7.  MPLS Fast\
    \ Reroute (FRR) . . . . . . . . . . . . . . .  16\n       2.1.8.  Pseudowire Encapsulation\
    \  . . . . . . . . . . . . . .  17\n         2.1.8.1.  Pseudowire Sequence Number\
    \  . . . . . . . . . . .  17\n       2.1.9.  Layer 2 and Layer 3 VPN . . . . .\
    \ . . . . . . . . . .  19\n     2.2.  MPLS Multicast  . . . . . . . . . . . .\
    \ . . . . . . . . .  20\n     2.3.  Packet Rates  . . . . . . . . . . . . . .\
    \ . . . . . . . .  21\n     2.4.  MPLS Multipath Techniques . . . . . . . . .\
    \ . . . . . . .  23\n       2.4.1.  Pseudowire Control Word . . . . . . . . .\
    \ . . . . . .  24\n       2.4.2.  Large Microflows  . . . . . . . . . . . . .\
    \ . . . . .  24\n       2.4.3.  Pseudowire Flow Label . . . . . . . . . . . .\
    \ . . . .  25\n       2.4.4.  MPLS Entropy Label  . . . . . . . . . . . . . .\
    \ . . .  25\n       2.4.5.  Fields Used for Multipath Load Balance  . . . . .\
    \ . .  25\n         2.4.5.1.  MPLS Fields in Multipath  . . . . . . . . . . .\
    \ .  26\n         2.4.5.2.  IP Fields in Multipath  . . . . . . . . . . . . .\
    \  27\n         2.4.5.3.  Fields Used in Flow Label . . . . . . . . . . . .  29\n\
    \         2.4.5.4.  Fields Used in Entropy Label  . . . . . . . . . .  29\n  \
    \   2.5.  MPLS-TP and UHP . . . . . . . . . . . . . . . . . . . . .  30\n    \
    \ 2.6.  Local Delivery of Packets . . . . . . . . . . . . . . . .  30\n      \
    \ 2.6.1.  DoS Protection  . . . . . . . . . . . . . . . . . . .  31\n       2.6.2.\
    \  MPLS OAM  . . . . . . . . . . . . . . . . . . . . . .  33\n       2.6.3.  Pseudowire\
    \ OAM  . . . . . . . . . . . . . . . . . . .  34\n       2.6.4.  MPLS-TP OAM .\
    \ . . . . . . . . . . . . . . . . . . . .  34\n       2.6.5.  MPLS OAM and Layer\
    \ 2 OAM Interworking . . . . . . . .  35\n       2.6.6.  Extent of OAM Support\
    \ by Hardware . . . . . . . . . .  36\n       2.6.7.  Support for IPFIX in Hardware\
    \ . . . . . . . . . . . .  37\n     2.7.  Number and Size of Flows  . . . . .\
    \ . . . . . . . . . . .  37\n   3.  Questions for Suppliers . . . . . . . . .\
    \ . . . . . . . . . .  38\n     3.1.  Basic Compliance  . . . . . . . . . . .\
    \ . . . . . . . . .  38\n     3.2.  Basic Performance . . . . . . . . . . . .\
    \ . . . . . . . .  40\n     3.3.  Multipath Capabilities and Performance  . .\
    \ . . . . . . .  41\n     3.4.  Pseudowire Capabilities and Performance . . .\
    \ . . . . . .  41\n     3.5.  Entropy Label Support and Performance . . . . .\
    \ . . . . .  42\n     3.6.  DoS Protection  . . . . . . . . . . . . . . . . .\
    \ . . . .  42\n     3.7.  OAM Capabilities and Performance  . . . . . . . . .\
    \ . . .  42\n   4.  Forwarding Compliance and Performance Testing . . . . . .\
    \ . .  43\n     4.1.  Basic Compliance  . . . . . . . . . . . . . . . . . . .\
    \ .  43\n     4.2.  Basic Performance . . . . . . . . . . . . . . . . . . . .\
    \  44\n     4.3.  Multipath Capabilities and Performance  . . . . . . . . .  45\n\
    \     4.4.  Pseudowire Capabilities and Performance . . . . . . . . .  46\n  \
    \   4.5.  Entropy Label Support and Performance . . . . . . . . . .  46\n    \
    \ 4.6.  DoS Protection  . . . . . . . . . . . . . . . . . . . . .  47\n     4.7.\
    \  OAM Capabilities and Performance  . . . . . . . . . . . .  47\n   5.  Security\
    \ Considerations . . . . . . . . . . . . . . . . . . .  48\n   6.  Organization\
    \ of References Section  . . . . . . . . . . . . .  50\n   7.  References  . .\
    \ . . . . . . . . . . . . . . . . . . . . . . .  50\n     7.1.  Normative References\
    \  . . . . . . . . . . . . . . . . . .  50\n     7.2.  Informative References\
    \  . . . . . . . . . . . . . . . . .  53\n   Appendix A.  Acknowledgements . .\
    \ . . . . . . . . . . . . . . . .  59\n"
- title: 1.  Introduction and Document Scope
  contents:
  - "1.  Introduction and Document Scope\n   The initial purpose of this document\
    \ was to address concerns raised\n   on the MPLS WG mailing list about shortcomings\
    \ in implementations of\n   MPLS forwarding.  Documenting existing misconceptions\
    \ and potential\n   pitfalls might potentially avoid repeating past mistakes.\
    \  The\n   document has grown to address a broad set of forwarding requirements.\n\
    \   The focus of this document is MPLS forwarding, base pseudowire\n   forwarding,\
    \ and MPLS Operations, Administration, and Maintenance\n   (OAM).  The use of\
    \ pseudowire Control Word and the use of pseudowire\n   Sequence Number are discussed.\
    \  Specific pseudowire Attachment\n   Circuit (AC) and Native Service Processing\
    \ (NSP) are out of scope.\n   Specific pseudowire applications, such as various\
    \ forms of Virtual\n   Private Network (VPN), are out of scope.\n   MPLS support\
    \ for multipath techniques is considered essential by many\n   service providers\
    \ and is useful for other high-capacity networks.  In\n   order to obtain sufficient\
    \ entropy from MPLS, traffic service\n   providers and others find it essential\
    \ for the MPLS implementation to\n   interpret the MPLS payload as IPv4 or IPv6\
    \ based on the contents of\n   the first nibble of payload.  The use of IP addresses,\
    \ the IP\n   protocol field, and UDP and TCP port number fields in multipath load\n\
    \   balancing are considered within scope.  The use of any other IP\n   protocol\
    \ fields, such as tunneling protocols carried within IP, are\n   out of scope.\n\
    \   Implementation details are a local matter and are out of scope.  Most\n  \
    \ interfaces today operate at 1 Gb/s or greater.  It is assumed that\n   all forwarding\
    \ operations are implemented in specialized forwarding\n   hardware rather than\
    \ on a general-purpose processor.  This is often\n   referred to as \"fast path\"\
    \ and \"slow path\" processing.  Some\n   recommendations are made regarding implementing\
    \ control or\n   management-plane functionality in specialized hardware or with\n\
    \   limited assistance from specialized hardware.  This advice is based\n   on\
    \ expected control or management protocol loads and on the need for\n   denial\
    \ of service (DoS) protection.\n"
- title: 1.1.  Abbreviations
  contents:
  - "1.1.  Abbreviations\n   The following abbreviations are used.\n   AC    Attachment\
    \ Circuit ([RFC3985])\n   ACH   Associated Channel Header (pseudowires)\n   ACK\
    \   Acknowledgement (TCP flag and type of TCP packet)\n   AIS   Alarm Indication\
    \ Signal (MPLS-TP OAM)\n   ATM   Asynchronous Transfer Mode (legacy switched circuits)\n\
    \   BFD   Bidirectional Forwarding Detection\n   BGP   Border Gateway Protocol\n\
    \   CC-CV Continuity Check and Connectivity Verification\n   CE    Customer Edge\
    \ ([RFC4364])\n   CPU   Central Processing Unit (computer or microprocessor)\n\
    \   CT    Class Type ([RFC4124])\n   CW    Control Word ([RFC4385])\n   DCCP \
    \ Datagram Congestion Control Protocol\n   DDoS  Distributed Denial of Service\n\
    \   DM    Delay Measurement (MPLS-TP OAM)\n   DSCP  Differentiated Services Code\
    \ Point ([RFC2474])\n   DWDM  Dense Wave Division Multiplexing\n   DoS   Denial\
    \ of Service\n   E-LSP Explicitly TC-encoded-PSC LSP ([RFC5462])\n   EBGP  External\
    \ BGP\n   ECMP  Equal-Cost Multipath\n   ECN   Explicit Congestion Notification\
    \ ([RFC3168] and [RFC5129])\n   EL    Entropy Label ([RFC6790])\n   ELI   Entropy\
    \ Label Indicator ([RFC6790])\n   EXP   Experimental (field in MPLS renamed to\
    \ \"TC\" in [RFC5462])\n   FEC   Forwarding Equivalence Classes ([RFC3031]); also\
    \ Forward Error\n         Correction in other context\n   FR    Frame Relay (legacy\
    \ switched circuits)\n   FRR   Fast Reroute ([RFC4090])\n   G-ACh Generic Associated\
    \ Channel ([RFC5586])\n   GAL   Generic Associated Channel Label ([RFC5586])\n\
    \   GFP   Generic Framing Procedure (used in OTN)\n   GMPLS Generalized MPLS ([RFC3471])\n\
    \   GTSM  Generalized TTL Security Mechanism ([RFC5082])\n   Gb/s  Gigabits per\
    \ second (billion bits per second)\n   IANA  Internet Assigned Numbers Authority\n\
    \   ILM   Incoming Label Map ([RFC3031])\n   IP    Internet Protocol\n   IPVPN\
    \ Internet Protocol VPN\n   IPv4  Internet Protocol version 4\n   IPv6  Internet\
    \ Protocol version 6\n   L-LSP Label-Only-Inferred-PSC LSP ([RFC3270])\n   L2VPN\
    \ Layer 2 VPN\n   LDP   Label Distribution Protocol ([RFC5036])\n   LER   Label\
    \ Edge Router ([RFC3031])\n   LM    Loss Measurement (MPLS-TP OAM)\n   LSP   Label\
    \ Switched Path ([RFC3031])\n   LSR   Label Switching Router ([RFC3031])\n   MP2MP\
    \ Multipoint to Multipoint\n   MPLS  Multiprotocol Label Switching ([RFC3031])\n\
    \   MPLS-TP  MPLS Transport Profile ([RFC5317])\n   Mb/s  Megabits per second\
    \ (million bits per second)\n   NSP   Native Service Processing ([RFC3985])\n\
    \   NTP   Network Time Protocol\n   OAM   Operations, Administration, and Maintenance\
    \ ([RFC6291])\n   OOB   Out-of-band (not carried within a data channel)\n   OTN\
    \   Optical Transport Network\n   P     Provider router ([RFC4364])\n   P2MP \
    \ Point to Multipoint\n   PE    Provider Edge router ([RFC4364])\n   PHB   Per-Hop\
    \ Behavior ([RFC2475])\n   PHP   Penultimate Hop Popping ([RFC3443])\n   POS \
    \  PPP over SONET\n   PSC   This abbreviation has multiple interpretations.\n\
    \         1.  Packet Switch Capable ([RFC3471]\n         2.  PHB Scheduling Class\
    \ ([RFC3270])\n         3.  Protection State Coordination ([RFC6378])\n   PTP\
    \   Precision Time Protocol\n   PW    Pseudowire\n   QoS   Quality of Service\n\
    \   RA    Router Alert ([RFC3032])\n   RDI   Remote Defect Indication (MPLS-TP\
    \ OAM)\n   RSVP-TE  RSVP Traffic Engineering\n   RTP   Real-time Transport Protocol\n\
    \   SCTP  Stream Control Transmission Protocol\n   SDH   Synchronous Data Hierarchy\
    \ (European SONET, a form of TDM)\n   SONET Synchronous Optical Network (US SDH,\
    \ a form of TDM)\n   T-LDP Targeted LDP (LDP sessions over more than one hop)\n\
    \   TC    Traffic Class ([RFC5462])\n   TCP   Transmission Control Protocol\n\
    \   TDM   Time-Division Multiplexing (legacy encapsulations)\n   TOS   Type of\
    \ Service (see [RFC2474])\n   TTL   Time-to-live (a field in IP and MPLS headers)\n\
    \   UDP   User Datagram Protocol\n   UHP   Ultimate Hop Popping (opposite of PHP)\n\
    \   VCCV  Virtual Circuit Connectivity Verification ([RFC5085])\n   VLAN  Virtual\
    \ Local Area Network (Ethernet)\n   VOQ   Virtual Output Queuing (switch fabric\
    \ design)\n   VPN   Virtual Private Network\n   WG    Working Group\n"
- title: 1.2.  Use of Requirements Language
  contents:
  - "1.2.  Use of Requirements Language\n   This document is Informational.  The uppercase\
    \ [RFC2119] key words\n   \"MUST\", \"MUST NOT\", \"SHOULD\", \"SHOULD NOT\",\
    \ and \"MAY\" are used in\n   this document in the following cases.\n   1.  RFC\
    \ 2119 keywords are used where requirements stated in this\n       document are\
    \ called for in referenced RFCs.  In most cases, the\n       RFC containing the\
    \ requirement is cited within the statement\n       using an RFC 2119 keyword.\n\
    \   2.  RFC 2119 keywords are used where explicitly noted that the\n       keywords\
    \ indicate that operator experiences indicate a\n       requirement, but there\
    \ are no existing RFC requirements.\n   Advice provided by this document may be\
    \ ignored by implementations.\n   Similarly, implementations not claiming conformance\
    \ to specific RFCs\n   may ignore the requirements of those RFCs.  In both cases,\n\
    \   implementers should consider the risk of doing so.\n"
- title: 1.3.  Apparent Misconceptions
  contents:
  - "1.3.  Apparent Misconceptions\n   In early generations of forwarding silicon\
    \ (which might now be behind\n   us), there apparently were some misconceptions\
    \ about MPLS.  The\n   following statements provide clarifications.\n   1.  There\
    \ are practical reasons to have more than one or two labels\n       in an MPLS\
    \ label stack.  Under some circumstances, the label\n       stack can become quite\
    \ deep.  See Section 2.1.\n   2.  The label stack MUST be considered to be arbitrarily\
    \ deep.\n       Section 3.27.4 (\"Hierarchy: LSP Tunnels within LSPs\") of RFC\
    \ 3031\n       states \"The label stack mechanism allows LSP tunneling to nest\
    \ to\n       any depth\" [RFC3031].  If a bottom of the label stack cannot be\n\
    \       found, but sufficient number of labels exist to forward, an LSR\n    \
    \   MUST forward the packet.  An LSR MUST NOT assume the packet is\n       malformed\
    \ unless the end of packet is found before the bottom of\n       the stack.  See\
    \ Section 2.1.\n   3.  In networks where deep label stacks are encountered, they\
    \ are not\n       rare.  Full packet rate performance is required regardless of\n\
    \       label stack depth, except where multiple pop operations are\n       required.\
    \  See Section 2.1.\n   4.  Research has shown that long bursts of short packets\
    \ with 40-byte\n       or 44-byte IP payload sizes in these bursts are quite common.\n\
    \       This is due to TCP ACK compression [ACK-compression].  The\n       following\
    \ two sub-bullets constitute advice that reflects very\n       common nonnegotiable\
    \ requirements of providers.  Implementers may\n       ignore this advice but\
    \ should consider the risk of doing so.\n       A.  A forwarding engine SHOULD,\
    \ if practical, be able to sustain\n           an arbitrarily long sequence of\
    \ small packets arriving at\n           full interface rate.\n       B.  If indefinitely\
    \ sustained full packet rate for small packets\n           is not practical, a\
    \ forwarding engine MUST be able to buffer\n           a long sequence of small\
    \ packets inbound to the on-chip\n           decision engine and sustain full\
    \ interface rate for some\n           reasonable average packet rate.  Absent\
    \ this small on-chip\n           buffering, QoS-agnostic packet drops can occur.\n\
    \       See Section 2.3.\n   5.  The implementations and system designs MUST support\
    \ pseudowire\n       Control Word (CW) if MPLS-TP is supported or if ACH [RFC5586]\
    \ is\n       being used on a pseudowire.  The implementation and system\n    \
    \   designs SHOULD support pseudowire CW even if MPLS-TP and ACH\n       [RFC5586]\
    \ are not used, using instead CW and VCCV Type 1\n       [RFC5085] to allow the\
    \ use of multipath in the underlying network\n       topology without impacting\
    \ the PW traffic.  [RFC7079] does note\n       that there are still some deployments\
    \ where the CW is not always\n       used.  It also notes that many service providers\
    \ do enable the\n       CW.  See Section 2.4.1 for more discussion on why deployments\n\
    \       SHOULD enable the pseudowire CW.\n   The following statements provide\
    \ clarification regarding more recent\n   requirements that are often missed.\n\
    \   1.  The implementer and system designer SHOULD support adding a\n       pseudowire\
    \ Flow Label [RFC6391].  Deployments MAY enable this\n       feature for appropriate\
    \ pseudowire types.  See Section 2.4.3.\n   2.  The implementer and system designer\
    \ SHOULD support adding an MPLS\n       Entropy Label [RFC6790].  Deployments\
    \ MAY enable this feature.\n       See Section 2.4.4.\n   Non-IETF definitions\
    \ of MPLS exist, and these should not be used as\n   normative texts in place\
    \ of the relevant IETF RFCs.  [RFC5704]\n   documents incompatibilities between\
    \ the IETF definition of MPLS and\n   one such alternative MPLS definition, which\
    \ led to significant issues\n   in the resulting non-IETF specification.\n"
- title: 1.4.  Target Audience
  contents:
  - "1.4.  Target Audience\n   This document is intended for multiple audiences: implementer\n\
    \   (implementing MPLS forwarding in silicon or in software); systems\n   designer\
    \ (putting together a MPLS forwarding systems); deployer\n   (running an MPLS\
    \ network).  These guidelines are intended to serve\n   the following purposes:\n\
    \   1.  Explain what to do and what not to do when a deep label stack is\n   \
    \    encountered. (audience: implementer)\n   2.  Highlight pitfalls to look for\
    \ when implementing an MPLS\n       forwarding chip. (audience: implementer)\n\
    \   3.  Provide a checklist of features and performance specifications to\n  \
    \     request.  (audience: systems designer, deployer)\n   4.  Provide a set of\
    \ tests to perform.  (audience: systems designer,\n       deployer).\n   The implementer,\
    \ systems designer, and deployer have a transitive\n   supplier-customer relationship.\
    \  It is in the best interest of the\n   supplier to review their product against\
    \ their customer's checklist\n   and secondary customer's checklist if applicable.\n\
    \   This document identifies and explains many details and potential\n   pitfalls\
    \ of MPLS forwarding.  It is likely that the identified set of\n   potential pitfalls\
    \ will later prove to be an incomplete set.\n"
- title: 2.  Forwarding Issues
  contents:
  - "2.  Forwarding Issues\n   A brief review of forwarding issues is provided in\
    \ the subsections\n   that follow.  This section provides some background on why\
    \ some of\n   these requirements exist.  The questions to ask of suppliers is\n\
    \   covered in Section 3.  Some guidelines for testing are provided in\n   Section\
    \ 4.\n"
- title: 2.1.  Forwarding Basics
  contents:
  - "2.1.  Forwarding Basics\n   Basic MPLS architecture and MPLS encapsulation, and\
    \ therefore packet\n   forwarding, are defined in [RFC3031] and [RFC3032].  RFC\
    \ 3031 and RFC\n   3032 are somewhat LDP centric.  RSVP-TE supports traffic engineering\n\
    \   (TE) and fast reroute, features that LDP lacks.  The base document\n   for\
    \ MPLS RSVP-TE is [RFC3209].\n   A few RFCs update RFC 3032.  Those with impact\
    \ on forwarding include\n   the following.\n   1.  TTL processing is clarified\
    \ in [RFC3443].\n   2.  The use of MPLS Explicit NULL is modified in [RFC4182].\n\
    \   3.  Differentiated Services is supported by [RFC3270] and [RFC4124].\n   \
    \    The \"EXP\" field is renamed to \"Traffic Class\" in [RFC5462],\n       removing\
    \ any misconception that it was available for\n       experimentation or could\
    \ be ignored.\n   4.  ECN is supported by [RFC5129].\n   5.  The MPLS G-ACh and\
    \ GAL are defined in [RFC5586].\n   6.  [RFC5332] redefines the two data link\
    \ layer codepoints for MPLS\n       packets.\n   Tunneling encapsulations carrying\
    \ MPLS, such as MPLS in IP [RFC4023],\n   MPLS in GRE [RFC4023], MPLS in L2TPv3\
    \ [RFC4817], or MPLS in UDP\n   [MPLS-IN-UDP], are out of scope.\n   Other RFCs\
    \ have implications to MPLS Forwarding and do not update RFC\n   3032 or RFC 3209,\
    \ including:\n   1.  The pseudowire (PW) Associated Channel Header (ACH) is defined\
    \ by\n       [RFC5085] and was later generalized by the MPLS G-ACh [RFC5586].\n\
    \   2.  The Entropy Label Indicator (ELI) and Entropy Label (EL) are\n       defined\
    \ by [RFC6790].\n   A few RFCs update RFC 3209.  Those that are listed as updating\
    \ RFC\n   3209 generally impact only RSVP-TE signaling.  Forwarding is modified\n\
    \   by major extensions built upon RFC 3209.\n   RFCs that impact forwarding are\
    \ discussed in the following\n   subsections.\n"
- title: 2.1.1.  MPLS Special-Purpose Labels
  contents:
  - "2.1.1.  MPLS Special-Purpose Labels\n   [RFC3032] specifies that label values\
    \ 0-15 are special-purpose labels\n   with special meanings.  [RFC7274] renamed\
    \ these from the term\n   \"reserved labels\" used in [RFC3032] to \"special-purpose\
    \ labels\".\n   Three values of NULL label are defined (two of which are later\n\
    \   updated by [RFC4182]) and a Router Alert Label is defined.  The\n   original\
    \ intent was that special-purpose labels, except the NULL\n   labels, could be\
    \ sent to the routing engine CPU rather than be\n   processed in forwarding hardware.\
    \  Hardware support is required by\n   new RFCs such as those defining Entropy\
    \ Label and OAM processed as a\n   result of receiving a GAL.  For new special-purpose\
    \ labels, some\n   accommodation is needed for LSRs that will send the labels\
    \ to a\n   general-purpose CPU or other highly programmable hardware.  For\n \
    \  example, ELI will only be sent to LSRs that have signaled support for\n   [RFC6790],\
    \ and a high OAM packet rate must be negotiated among\n   endpoints.\n   [RFC3429]\
    \ reserves a label for ITU-T Y.1711; however, Y.1711 does not\n   work with multipath\
    \ and its use is strongly discouraged.\n   The current list of special-purpose\
    \ labels can be found on the\n   \"Multiprotocol Label Switching Architecture\
    \ (MPLS) Label Values\"\n   registry reachable at IANA's pages at <http://www.iana.org>.\n\
    \   [RFC7274] introduces an IANA \"Extended Special-Purpose MPLS Label\n   Values\"\
    \ registry and makes use of the \"extension\" label, label 15, to\n   indicate\
    \ that the next label is an extended special-purpose label and\n   requires special\
    \ handling.  The range of only 16 values for special-\n   purpose labels allows\
    \ a table to be used.  The range of extended\n   special-purpose labels with 20\
    \ bits available for use may have to be\n   handled in some other way in the unlikely\
    \ event that in the future\n   the range of currently reserved values 256-1048575\
    \ is used.  If only\n   the Standards Action range, 16-239, and the Experimental\
    \ range,\n   240-255, are used, then a table of 256 entries can be used.\n   Unknown\
    \ special-purpose labels and unknown extended special-purpose\n   labels are handled\
    \ the same.  When an unknown special-purpose label\n   is encountered or a special\
    \ purpose label not directly handled in\n   forwarding hardware is encountered,\
    \ the packet should be sent to a\n   general-purpose CPU by default.  If this\
    \ capability is supported,\n   there must be an option to either drop or rate\
    \ limit such packets\n   based on the value of each special-purpose label.\n"
- title: 2.1.2.  MPLS Differentiated Services
  contents:
  - "2.1.2.  MPLS Differentiated Services\n   [RFC2474] deprecates the IP Type of\
    \ Service (TOS) and IP Precedence\n   (Prec) fields and replaces them with the\
    \ Differentiated Services\n   Field more commonly known as the Differentiated\
    \ Services Code Point\n   (DSCP) field.  [RFC2475] defines the Differentiated\
    \ Services\n   architecture, which in other forums, is often called a Quality\
    \ of\n   Service (QoS) architecture.\n   MPLS uses the Traffic Class (TC) field\
    \ to support Differentiated\n   Services [RFC5462].  There are two primary documents\
    \ describing how\n   DSCP is mapped into TC.\n   1.  [RFC3270] defines E-LSP and\
    \ L-LSP.  E-LSP uses a static mapping\n       of DSCP into TC.  L-LSP uses a per-LSP\
    \ mapping of DSCP into TC,\n       with one PHB Scheduling Class (PSC) per L-LSP.\
    \  Each PSC can use\n       multiple Per-Hop Behavior (PHB) values.  For example,\
    \ the Assured\n       Forwarding service defines three PSCs, each with three PHB\n\
    \       [RFC2597].\n   2.  [RFC4124] defines assignment of a class-type (CT) to\
    \ an LSP,\n       where a per-CT static mapping of TC to PHB is used.  [RFC4124]\n\
    \       provides a means to support up to eight E-LSP-like mappings of\n     \
    \  DSCP to TC.\n   To meet Differentiated Services requirements specified in [RFC3270],\n\
    \   the following forwarding requirements must be met.  An ingress LER\n   MUST\
    \ be able to select an LSP and then apply a per-LSP map of DSCP\n   into TC. \
    \ A midpoint LSR MUST be able to apply a per-LSP map of TC to\n   PHB.  The number\
    \ of mappings supported will be far less than the\n   number of LSPs supported.\n\
    \   To meet Differentiated Services requirements specified in [RFC4124],\n   the\
    \ following forwarding requirements must be met.  An ingress LER\n   MUST be able\
    \ to select an LSP and then apply a per-LSP map of DSCP\n   into TC.  A midpoint\
    \ LSR MUST be able to map LSP number to Class Type\n   (CT), then use a per-CT\
    \ map to map TC to PHB.  Since there are only\n   eight allowed values of CT,\
    \ only eight maps of TC to PHB need to be\n   supported.  The LSP label can be\
    \ used directly to find the TC-to-PHB\n   mapping, as is needed to support L-LSPs\
    \ as defined by [RFC3270].\n   While support for [RFC4124] and not [RFC3270] would\
    \ allow support for\n   only eight mappings of TC to PHB, it is common to support\
    \ both and\n   simply state a limit on the number of unique TC-to-PHB mappings\
    \ that\n   can be supported.\n"
- title: 2.1.3.  Time Synchronization
  contents:
  - "2.1.3.  Time Synchronization\n   PTP or NTP may be carried over MPLS [TIMING-OVER-MPLS].\
    \  Generally,\n   NTP will be carried within IP, and IP will be carried in MPLS\n\
    \   [RFC5905].  Both PTP and NTP benefit from accurate timestamping of\n   incoming\
    \ packets and the ability to insert accurate timestamps in\n   outgoing packets.\
    \  PTP correction that occurs when forwarding\n   requires updating a timestamp\
    \ compensation field based on the\n   difference between packet arrival at an\
    \ LSR and packet transmit time\n   at that same LSR.\n   Since the label stack\
    \ depth may vary, hardware should allow a\n   timestamp to be placed in an outgoing\
    \ packet at any specified byte\n   position.  It may be necessary to modify Layer\
    \ 2 checksums or frame\n   check sequences after insertion.  PTP and NTP timestamp\
    \ formats\n   differ in such a way as to require different implementations of\
    \ the\n   timestamp correction.  If NTP or PTP is carried over UDP/IP or\n   UDP/IP/MPLS,\
    \ the UDP checksum will also have to be updated.\n   Accurate time synchronization,\
    \ in addition to being generally useful,\n   is required for MPLS-TP Delay Measurement\
    \ (DM) OAM.  See\n   Section 2.6.4.\n"
- title: 2.1.4.  Uses of Multiple Label Stack Entries
  contents:
  - "2.1.4.  Uses of Multiple Label Stack Entries\n   MPLS deployments in the early\
    \ part of the prior decade (circa 2000)\n   tended to support either LDP or RSVP-TE.\
    \  LDP was favored by some for\n   its ability to scale to a very large number\
    \ of PE devices at the edge\n   of the network, without adding deployment complexity.\
    \  RSVP-TE was\n   favored, generally in the network core, where traffic engineering\n\
    \   and/or fast reroute were considered important.\n   Both LDP and RSVP-TE are\
    \ used simultaneously within major service\n   provider networks using a technique\
    \ known as \"LDP over RSVP-TE\n   Tunneling\".  This technique allows service\
    \ providers to carry LDP\n   tunnels inside RSVP-TE tunnels.  This makes it possible\
    \ to take\n   advantage of the traffic engineering and fast reroute on more\n\
    \   expensive intercity and intercontinental transport paths.  The\n   ingress\
    \ RSVP-TE PE places many LDP tunnels on a single RSVP-TE LSP\n   and carries it\
    \ to the egress RSVP-TE PE.  The LDP PEs are situated\n   further from the core,\
    \ for example, within a metro network.  LDP over\n   RSVP-TE tunneling requires\
    \ a minimum of two MPLS labels: one each for\n   LDP and RSVP-TE.\n   The use\
    \ of MPLS FRR [RFC4090] might add one more label to MPLS\n   traffic but only\
    \ when FRR protection is in use (active).  If LDP over\n   RSVP-TE is in use,\
    \ and FRR protection is in use, then at least three\n   MPLS labels are present\
    \ on the label stack on the links through which\n   the Bypass LSP traverses.\
    \  FRR is covered in Section 2.1.7.\n   LDP L2VPN, LDP IPVPN, BGP L2VPN, and BGP\
    \ IPVPN added support for VPN\n   services that are deployed by the vast majority\
    \ of service providers.\n   These VPN services added yet another label, bringing\
    \ the label stack\n   depth (when FRR is active) to four.\n   Pseudowires and\
    \ VPN are discussed in further detail in Sections 2.1.8\n   and 2.1.9.\n   MPLS\
    \ hierarchy as described in [RFC4206] and updated by [RFC7074] can\n   in principle\
    \ add at least one additional label.  MPLS hierarchy is\n   discussed in Section\
    \ 2.1.6.\n   Other features such as Entropy Label (discussed in Section 2.4.4)\
    \ and\n   Flow Label (discussed in Section 2.4.3) can add additional labels to\n\
    \   the label stack.\n   Although theoretical scenarios can easily result in eight\
    \ or more\n   labels, such cases are rare if they occur at all today.  For the\n\
    \   purpose of forwarding, only the top label needs to be examined if PHP\n  \
    \ is used, and a few more if UHP is used (see Section 2.5).  For deep\n   label\
    \ stacks, quite a few labels may have to be examined for the\n   purpose of load\
    \ balancing across parallel links (see Section 2.4);\n   however, this depth can\
    \ be bounded by a provider through use of\n   Entropy Label.\n   Other creative\
    \ uses of MPLS within the IETF, such as the use of MPLS\n   label stack in source\
    \ routing, may result in label stacks that are\n   considerably deeper than those\
    \ encountered today.\n"
- title: 2.1.5.  MPLS Link Bundling
  contents:
  - "2.1.5.  MPLS Link Bundling\n   MPLS Link Bundling was the first RFC to address\
    \ the need for multiple\n   parallel links between nodes [RFC4201].  MPLS Link\
    \ Bundling is\n   notable in that it tried not to change MPLS forwarding, except\
    \ in\n   specifying the \"all-ones\" component link.  MPLS Link Bundling is\n\
    \   seldom if ever deployed.  Instead, multipath techniques described in\n   Section\
    \ 2.4 are used.\n"
- title: 2.1.6.  MPLS Hierarchy
  contents:
  - "2.1.6.  MPLS Hierarchy\n   MPLS hierarchy is defined in [RFC4206] and updated\
    \ by [RFC7074].\n   Although RFC 4206 is considered part of GMPLS, the Packet\
    \ Switching\n   Capable (PSC) portion of the MPLS hierarchy is applicable to MPLS\
    \ and\n   may be supported in an otherwise GMPLS-free implementation.  The MPLS\n\
    \   PSC hierarchy remains the most likely means of providing further\n   scaling\
    \ in an RSVP-TE MPLS network, particularly where the network is\n   designed to\
    \ provide RSVP-TE connectivity to the edges.  This is the\n   case for envisioned\
    \ MPLS-TP networks.  The use of the MPLS PSC\n   hierarchy can add at least one\
    \ additional label to a label stack,\n   though it is likely that only one layer\
    \ of PSC will be used in the\n   near future.\n"
- title: 2.1.7.  MPLS Fast Reroute (FRR)
  contents:
  - "2.1.7.  MPLS Fast Reroute (FRR)\n   Fast reroute is defined by [RFC4090].  Two\
    \ significantly different\n   methods are defined in RFC 4090: the \"One-to-One\
    \ Backup\" method,\n   which uses the \"Detour LSP\", and the \"Facility Backup\"\
    , which uses a\n   \"bypass tunnel\".  These are commonly referred to as the detour\
    \ and\n   bypass methods, respectively.\n   The detour method makes use of a presignaled\
    \ LSP.  Hardware\n   assistance may be needed for detour FRR in order to accomplish\
    \ local\n   repair of a large number of LSPs within the target of tens of\n  \
    \ milliseconds.  For each affected LSP, a swap operation must be\n   reprogrammed\
    \ or otherwise switched over.  The use of detour FRR\n   doubles the number of\
    \ LSPs terminating at any given hop and will\n   increase the number of LSPs within\
    \ a network by a factor dependent on\n   the average detour path length.\n   The\
    \ bypass method makes use of a tunnel that is unused when no fault\n   exists\
    \ but may carry many LSPs when a local repair is required.\n   There is no presignaling\
    \ indicating which working LSP will be\n   diverted into any specific bypass LSP.\
    \  If interface label space is\n   used, the bypass LSP MUST extend one hop beyond\
    \ the merge point,\n   except if the merge point is the egress and PHP is used.\
    \  If the\n   bypass LSPs are not extended in this way, then the merge LSR (egress\n\
    \   LSR of the bypass LSP) MUST use platform label space (as defined in\n   [RFC3031])\
    \ so that an LSP working path on any given interface can be\n   backed up using\
    \ a bypass LSP terminating on any other interface.\n   Hardware assistance may\
    \ be needed to accomplish local repair of a\n   large number of LSPs within the\
    \ target of tens of milliseconds.  For\n   each affected LSP a swap operation\
    \ must be reprogrammed or otherwise\n   switched over with an additional push\
    \ of the bypass LSP label.  The\n   use of platform label space impacts the size\
    \ of the LSR ILM for an\n   LSR with a very large number of interfaces.\n   IP/LDP\
    \ Fast Reroute (IP/LDP FRR) [RFC5714] is also applicable in MPLS\n   networks.\
    \  ECMP and Loop-Free Alternates (LFAs) [RFC5286] are well-\n   established IP/LDP\
    \ FRR techniques and were the first methods to be\n   widely deployed.  Work on\
    \ IP/LDP FRR is ongoing within the IETF\n   RTGWG.  Two topics actively discussed\
    \ in RTGWG are microloops and\n   partial coverage of the established techniques\
    \ in some network\n   topologies.  [RFC5715] covers the topic of IP/LDP Fast Reroute\n\
    \   microloops and microloop prevention.  RTGWG has developed additional\n   IP/LDP\
    \ FRR techniques to handle coverage concerns.  RTGWG is\n   extending LFA through\
    \ the use of remote LFA [REMOTE-LFA].  Other\n   techniques that require new forwarding\
    \ paths to be established are\n   also under consideration, including the IPFRR\
    \ \"not-via\" technique\n   defined in [RFC6981] and maximally redundant trees\
    \ (MRT) [MRT].\n   ECMP, LFA (but not remote LFA), and MRT swap the top label\
    \ to an\n   alternate MPLS label.  The other methods operate in a similar manner\n\
    \   to the facility backup described in RFC 4090 and push an additional\n   label.\
    \  IP/LDP FRR methods that push more than one label have been\n   suggested but\
    \ are in early discussion.\n"
- title: 2.1.8.  Pseudowire Encapsulation
  contents:
  - "2.1.8.  Pseudowire Encapsulation\n   The pseudowire (PW) architecture is defined\
    \ in [RFC3985].  A\n   pseudowire, when carried over MPLS, adds one or more additional\
    \ label\n   entries to the MPLS label stack.  A PW Control Word is defined in\n\
    \   [RFC4385] with motivation for defining the Control Word in [RFC4928].\n  \
    \ The PW Associated Channel defined in [RFC4385] is used for OAM in\n   [RFC5085].\
    \  The PW Flow Label is defined in [RFC6391] and is\n   discussed further in this\
    \ document in Section 2.4.3.\n   There are numerous pseudowire encapsulations,\
    \ supporting emulation of\n   services such as Frame Relay, ATM, Ethernet, TDM,\
    \ and SONET/SDH over\n   packet switched networks (PSNs) using IP or MPLS.\n \
    \  The pseudowire encapsulation is out of scope for this document.\n   Pseudowire\
    \ impact on MPLS forwarding at the midpoint LSR is within\n   scope.  The impact\
    \ on ingress MPLS push and egress MPLS UHP pop are\n   within scope.  While pseudowire\
    \ encapsulation is out of scope, some\n   advice is given on Sequence Number support.\n"
- title: 2.1.8.1.  Pseudowire Sequence Number
  contents:
  - "2.1.8.1.  Pseudowire Sequence Number\n   Pseudowire (PW) Sequence Number support\
    \ is most important for PW\n   payload types with a high expectation of lossless\
    \ and/or in-order\n   delivery.  Identifying lost PW packets and the exact amount\
    \ of lost\n   payload is critical for PW services that maintain bit timing, such\
    \ as\n   Time Division Multiplexing (TDM) services since these services MUST\n\
    \   compensate lost payload on a bit-for-bit basis.\n   With PW services that\
    \ maintain bit timing, packets that have been\n   received out of order also MUST\
    \ be identified and MAY be either\n   reordered or dropped.  Resequencing requires,\
    \ in addition to sequence\n   numbering, a \"reorder buffer\" in the egress PE,\
    \ and the ability to\n   reorder is limited by the depth of this buffer.  The\
    \ down side of\n   maintaining a large reorder buffer is added end-to-end service\
    \ delay.\n   For PW services that maintain bit timing or any other service where\n\
    \   jitter must be bounded, a jitter buffer is always necessary.  The\n   jitter\
    \ buffer is needed regardless of whether reordering is done.  In\n   order to\
    \ be effective, a reorder buffer must often be larger than a\n   jitter buffer\
    \ needs to be, thus creating a tradeoff between reducing\n   loss and minimizing\
    \ delay.\n   PW services that are not timing critical bit streams in nature are\n\
    \   cell oriented or frame oriented.  Though resequencing support may be\n   beneficial\
    \ to PW cell- and frame-oriented payloads such as ATM, FR,\n   and Ethernet, this\
    \ support is desirable but not required.\n   Requirements to handle out-of-order\
    \ packets at all vary among\n   services and deployments.  For example, for Ethernet\
    \ PW, occasional\n   (very rare) reordering is usually acceptable.  If the Ethernet\
    \ PW is\n   carrying MPLS-TP, then this reordering may be acceptable.\n   Reducing\
    \ jitter is best done by an end-system, given that the\n   tradeoff of loss vs.\
    \ delay varies among services.  For example, with\n   interactive real-time services,\
    \ low delay is preferred, while with\n   non-interactive (one-way) real-time services,\
    \ low loss is preferred.\n   The same end-site may be receiving both types of\
    \ traffic.  Regardless\n   of this, bounded jitter is sometimes a requirement\
    \ for specific\n   deployments.\n   Packet reordering should be rare except in\
    \ a small number of\n   circumstances, most of which are due to network design\
    \ or equipment\n   design errors:\n   1.  The most common case is where reordering\
    \ is rare, occurring only\n       when a network or equipment fault forces traffic\
    \ on a new path\n       with different delay.  The packet loss that accompanies\
    \ a network\n       or equipment fault is generally more disruptive than any\n\
    \       reordering that may occur.\n   2.  A path change can be caused by reasons\
    \ other than a network or\n       equipment fault, such as an administrative routing\
    \ change.  This\n       may result in packet reordering but generally without\
    \ any packet\n       loss.\n   3.  If the edge is not using pseudowire Control\
    \ Word (CW) and the\n       core is using multipath, reordering will be far more\
    \ common.  If\n       this is occurring, using CW on the edge will solve the problem.\n\
    \       Without CW, resequencing is not possible since the Sequence\n       Number\
    \ is contained in the CW.\n   4.  Another avoidable case is where some core equipment\
    \ has multipath\n       and for some reason insists on periodically installing\
    \ a new\n       random number as the multipath hash seed.  If supporting MPLS-TP,\n\
    \       equipment MUST provide a means to disable periodic hash\n       reseeding,\
    \ and deployments MUST disable periodic hash reseeding.\n       Operator experience\
    \ dictates that even if not supporting MPLS-TP,\n       equipment SHOULD provide\
    \ a means to disable periodic hash\n       reseeding, and deployments SHOULD disable\
    \ periodic hash\n       reseeding.\n   In provider networks that use multipath\
    \ techniques and that may\n   occasionally rebalance traffic or that may change\
    \ PW paths\n   occasionally for other reasons, reordering may be far more common\n\
    \   than loss.  Where reordering is more common than loss, resequencing\n   packets\
    \ is beneficial, rather than dropping packets at egress when\n   out-of-order\
    \ arrival occurs.  Resequencing is most important for PW\n   payload types with\
    \ a high expectation of lossless delivery since in\n   such cases out-of-order\
    \ delivery within the network results in PW\n   loss.\n"
- title: 2.1.9.  Layer 2 and Layer 3 VPN
  contents:
  - "2.1.9.  Layer 2 and Layer 3 VPN\n   Layer 2 VPN [RFC4664] and Layer 3 VPN [RFC4110]\
    \ add one or more label\n   entry to the MPLS label stack.  VPN encapsulations\
    \ are out of scope\n   for this document.  Their impact on forwarding at the midpoint\
    \ LSR\n   are within scope.\n   Any of these services may be used on an ingress\
    \ and egress that are\n   MPLS Entropy Label enabled (see Section 2.4.4 for discussion\
    \ of\n   Entropy Label); this would add an additional two labels to the MPLS\n\
    \   label stack.  The need to provide a useful Entropy Label value\n   impacts\
    \ the requirements of the VPN ingress LER but is out of scope\n   for this document.\n"
- title: 2.2.  MPLS Multicast
  contents:
  - "2.2.  MPLS Multicast\n   MPLS Multicast encapsulation is clarified in [RFC5332].\
    \  MPLS\n   Multicast may be signaled using RSVP-TE [RFC4875] or LDP [RFC6388].\n\
    \   [RFC4875] defines a root-initiated RSVP-TE LSP setup rather than the\n   leaf-initiated\
    \ join used in IP multicast.  [RFC6388] defines a leaf-\n   initiated LDP setup.\
    \  Both [RFC4875] and [RFC6388] define point-to-\n   multipoint (P2MP) LSP setup.\
    \  [RFC6388] also defined multipoint-to-\n   multipoint (MP2MP) LSP setup.\n \
    \  The P2MP LSPs have a single source.  An LSR may be a leaf node, an\n   intermediate\
    \ node, or a \"bud\" node.  A bud serves as both a leaf and\n   intermediate.\
    \  At a leaf, an MPLS pop is performed.  The payload may\n   be an IP multicast\
    \ packet that requires further replication.  At an\n   intermediate node, an MPLS\
    \ swap operation is performed.  The bud\n   requires that both a pop operation\
    \ and a swap operation be performed\n   for the same incoming packet.\n   One\
    \ strategy to support P2MP functionality is to pop at the LSR\n   interface serving\
    \ as ingress to the P2MP traffic and then optionally\n   push labels at each LSR\
    \ interface serving as egress to the P2MP\n   traffic at that same LSR.  A given\
    \ LSR egress chip may support\n   multiple egress interfaces, each of which requires\
    \ a copy, but each\n   with a different set of added labels and Layer 2 encapsulation.\
    \  Some\n   physical interfaces may have multiple sub-interfaces (such as\n  \
    \ Ethernet VLAN or channelized interfaces), each requiring a copy.\n   If packet\
    \ replication is performed at LSR ingress, then the ingress\n   interface performance\
    \ may suffer.  If the packet replication is\n   performed within a LSR switching\
    \ fabric and at LSR egress, congestion\n   of egress interfaces cannot make use\
    \ of backpressure to ingress\n   interfaces using techniques such as virtual output\
    \ queuing (VOQ).  If\n   buffering is primarily supported at egress, then the\
    \ need for\n   backpressure is minimized.  There may be no good solution for high\n\
    \   volumes of multicast traffic if VOQ is used.\n   Careful consideration should\
    \ be given to the performance\n   characteristics of high-fanout multicast for\
    \ equipment that is\n   intended to be used in such a role.\n   MP2MP LSPs differ\
    \ in that any branch may provide an input, including\n   a leaf.  Packets must\
    \ be replicated onto all other branches.  This\n   forwarding is often implemented\
    \ as multiple P2MP forwarding trees,\n   one for each potential input interface\
    \ at a given LSR.\n"
- title: 2.3.  Packet Rates
  contents:
  - "2.3.  Packet Rates\n   While average packet size of Internet traffic may be large,\
    \ long\n   sequences of small packets have both been predicted in theory and\n\
    \   observed in practice.  Traffic compression and TCP ACK compression\n   can\
    \ conspire to create long sequences of packets of 40-44 bytes in\n   payload length.\
    \  If carried over Ethernet, the 64-byte minimum\n   payload applies, yielding\
    \ a packet rate of approximately 150 Mpps\n   (million packets per second) for\
    \ the duration of the burst on a\n   nominal 100 Gb/s link.  The peak rate for\
    \ other encapsulations can be\n   as high as 250 Mpps (for example, when IP or\
    \ MPLS is encapsulated\n   using GFP over OTN ODU4).\n   It is possible that the\
    \ packet rates achieved by a specific\n   implementation are acceptable for a\
    \ minimum payload size, such as a\n   64-byte (64B) payload for Ethernet, but\
    \ the achieved rate declines to\n   an unacceptable level for other packet sizes,\
    \ such as a 65B payload.\n   There are other packet rates of interest besides\
    \ TCP ACK.  For\n   example, a TCP ACK carried over an Ethernet PW over MPLS over\n\
    \   Ethernet may occupy 82B or 82B plus an increment of 4B if additional\n   MPLS\
    \ labels are present.\n   A graph of packet rate vs. packet size often displays\
    \ a sawtooth.\n   The sawtooth is commonly due to a memory bottleneck and memory\n\
    \   widths, sometimes an internal cache, but often a very wide external\n   buffer\
    \ memory interface.  In some cases, it may be due to a fabric\n   transfer width.\
    \  A fine packing, rounding up to the nearest 8B or 16B\n   will result in a fine\
    \ sawtooth with small degradation for 65B, and\n   even less for 82B packets.\
    \  A coarse packing, rounding up to 64B can\n   yield a sharper drop in performance\
    \ for 65B packets, or perhaps more\n   important, a larger drop for 82B packets.\n\
    \   The loss of some TCP ACK packets are not the primary concern when\n   such\
    \ a burst occurs.  When a burst occurs, any other packets,\n   regardless of packet\
    \ length and packet QoS are dropped once on-chip\n   input buffers prior to the\
    \ decision engine are exceeded.  Buffers in\n   front of the packet decision engine\
    \ are often very small or\n   nonexistent (less than one packet of buffer) causing\
    \ significant QoS-\n   agnostic packet drop.\n   Internet service providers and\
    \ content providers at one time\n   specified full rate forwarding with 40-byte\
    \ payload packets as a\n   requirement.  Today, this requirement often can be\
    \ waived if the\n   provider can be convinced that when long sequences of short\
    \ packets\n   occur no packets will be dropped.\n   Many equipment suppliers have\
    \ pointed out that the extra cost in\n   designing hardware capable of processing\
    \ the minimum size packets at\n   full line rate is significant for very-high-speed\
    \ interfaces.  If\n   hardware is not capable of processing the minimum size packets\
    \ at\n   full line rate, then that hardware MUST be capable of handling large\n\
    \   bursts of small packets, a condition that is often observed.  This\n   level\
    \ of performance is necessary to meet Differentiated Services\n   [RFC2475] requirements;\
    \ without it, packets are lost prior to\n   inspection of the IP DSCP field [RFC2474]\
    \ or MPLS TC field [RFC5462].\n   With adequate on-chip buffers before the packet\
    \ decision engine, an\n   LSR can absorb a long sequence of short packets.  Even\
    \ if the output\n   is slowed to the point where light congestion occurs, the\
    \ packets,\n   having cleared the decision process, can make use of larger VOQ\
    \ or\n   output side buffers and be dealt with according to configured QoS\n \
    \  treatment, rather than dropped completely at random.\n   The buffering before\
    \ the packet decision engine should be arranged\n   such that 1) it can hold a\
    \ relatively large number of small packets,\n   2) it can hold a small number\
    \ of large packets, and 3) it can hold a\n   mix of packets of different sizes.\n\
    \   These on-chip buffers need not contribute significant delay since\n   they\
    \ are only used when the packet decision engine is unable to keep\n   up, not\
    \ in response to congestion, plus these buffers are quite\n   small.  For example,\
    \ an on-chip buffer capable of handling 4K packets\n   of 64 bytes in length,\
    \ or 256KB, corresponds to 200 microseconds on a\n   10 Gb/s link and 20 microseconds\
    \ on a 100 Gb/s link.  If the packet\n   decision engine is capable of handling\
    \ packets at 90% of the full\n   rate for small packets, then the maximum added\
    \ delay is 20\n   microseconds and 2 microseconds, respectively, and this delay\
    \ only\n   applies if a 4K burst of short packets occurs.  When no burst of\n\
    \   short packets was being processed, no delay is added.  These buffers\n   are\
    \ only needed on high-speed interfaces where it is difficult to\n   process small\
    \ packets at full line rate.\n   Packet rate requirements apply regardless of\
    \ which network tier the\n   equipment is deployed in.  Whether deployed in the\
    \ network core or\n   near the network edges, one of the two conditions MUST be\
    \ met if\n   Differentiated Services requirements are to be met:\n   1.  Packets\
    \ must be processed at full line rate with minimum-sized\n       packets.  -OR-\n\
    \   2.  Packets must be processed at a rate well under generally accepted\n  \
    \     average packet sizes, with sufficient buffering prior to the\n       packet\
    \ decision engine to accommodate long bursts of small\n       packets.\n"
- title: 2.4.  MPLS Multipath Techniques
  contents:
  - "2.4.  MPLS Multipath Techniques\n   In any large provider, service providers,\
    \ and content providers,\n   hash-based multipath techniques are used in the core\
    \ and in the edge.\n   In many of these providers, hash-based multipath is also\
    \ used in the\n   larger metro networks.\n   For good reason, the Differentiated\
    \ Services requirements dictate\n   that packets within a common microflow SHOULD\
    \ NOT be reordered\n   [RFC2474].  Service providers generally impose stronger\
    \ requirements,\n   commonly requiring that packets within a microflow MUST NOT\
    \ be\n   reordered except in rare circumstances such as load balancing across\n\
    \   multiple links, path change for load balancing, or path change for\n   other\
    \ reason.\n   The most common multipath techniques are ECMP applied at the IP\n\
    \   forwarding level, Ethernet Link Aggregation Group (LAG) with\n   inspection\
    \ of the IP payload, and multipath on links carrying both IP\n   and MPLS, where\
    \ the IP header is inspected below the MPLS label\n   stack.  In most core networks,\
    \ the vast majority of traffic is MPLS\n   encapsulated.\n   In order to support\
    \ an adequately balanced load distribution across\n   multiple links, IP header\
    \ information must be used.  Common practice\n   today is to reinspect the IP\
    \ headers at each LSR and use the label\n   stack and IP header information in\
    \ a hash performed at each LSR.\n   Further details are provided in Section 2.4.5.\n\
    \   The use of this technique is so ubiquitous in provider networks that\n   lack\
    \ of support for multipath makes any product unsuitable for use in\n   large core\
    \ networks.  This will continue to be the case in the near\n   future, even as\
    \ deployment of the MPLS Entropy Label begins to relax\n   the core LSR multipath\
    \ performance requirements given the existing\n   deployed base of edge equipment\
    \ without the ability to add an Entropy\n   Label.\n   A generation of edge equipment\
    \ supporting the ability to add an MPLS\n   Entropy Label is needed before the\
    \ performance requirements for core\n   LSRs can be relaxed.  However, it is likely\
    \ that two generations of\n   deployment in the future will allow core LSRs to\
    \ support full packet\n   rate only when a relatively small number of MPLS labels\
    \ need to be\n   inspected before hashing.  For now, don't count on it.\n   Common\
    \ practice today is to reinspect the packet at each LSR and use\n   information\
    \ from the packet combined with a hash seed that is\n   selected by each LSR.\
    \  Where Flow Labels or Entropy Labels are used,\n   a hash seed must be used\
    \ when creating these labels.\n"
- title: 2.4.1.  Pseudowire Control Word
  contents:
  - "2.4.1.  Pseudowire Control Word\n   Within the core of a network, some form of\
    \ multipath is almost\n   certain to be used.  Multipath techniques deployed today\
    \ are likely\n   to be looking beneath the label stack for an opportunity to hash\
    \ on\n   IP addresses.\n   A pseudowire encapsulated at a network edge must have\
    \ a means to\n   prevent reordering within the core if the pseudowire will be\
    \ crossing\n   a network core, or any part of a network topology where multipath\
    \ is\n   used (see [RFC4385] and [RFC4928]).\n   Not supporting the ability to\
    \ encapsulate a pseudowire with a Control\n   Word may lock a product out from\
    \ consideration.  A pseudowire\n   capability without Control Word support might\
    \ be sufficient for\n   applications that are strictly both intra-metro and low\
    \ bandwidth.\n   However, a provider with other applications will very likely\
    \ not\n   tolerate having equipment that can only support a subset of their\n\
    \   pseudowire needs.\n"
- title: 2.4.2.  Large Microflows
  contents:
  - "2.4.2.  Large Microflows\n   Where multipath makes use of a simple hash and simple\
    \ load balance\n   such as modulo or other fixed allocation (see Section 2.4),\
    \ there can\n   be the presence of large microflows that each consume 10% of the\n\
    \   capacity of a component link of a potentially congested composite\n   link.\
    \  One such microflow can upset the traffic balance, and more\n   than one can\
    \ reduce the effective capacity of the entire composite\n   link by more than\
    \ 10%.\n   When even a very small number of large microflows are present, there\n\
    \   is a significant probability that more than one of these large\n   microflows\
    \ could fall on the same component link.  If the traffic\n   contribution from\
    \ large microflows is small, the probability for\n   three or more large microflows\
    \ on the same component link drops\n   significantly.  Therefore, in a network\
    \ where a significant number of\n   parallel 10 Gb/s links exists, even a 1 Gb/s\
    \ pseudowire or other\n   large microflow that could not otherwise be subdivided\
    \ into smaller\n   flows should carry a Flow Label or Entropy Label if possible.\n\
    \   Active management of the hash space to better accommodate large\n   microflows\
    \ has been implemented and deployed in the past; however,\n   such techniques\
    \ are out of scope for this document.\n"
- title: 2.4.3.  Pseudowire Flow Label
  contents:
  - "2.4.3.  Pseudowire Flow Label\n   Unlike a pseudowire Control Word, a pseudowire\
    \ Flow Label [RFC6391]\n   is required only for pseudowires that have a relatively\
    \ large\n   capacity.  There are many cases where a pseudowire Flow Label makes\n\
    \   sense.  Any service such as a VPN that carries IP traffic within a\n   pseudowire\
    \ can make use of a pseudowire Flow Label.\n   Any pseudowire carried over MPLS\
    \ that makes use of the pseudowire\n   Control Word and does not carry a Flow\
    \ Label is in effect a single\n   microflow (in the terms defined in [RFC2475])\
    \ and may result in the\n   types of problems described in Section 2.4.2.\n"
- title: 2.4.4.  MPLS Entropy Label
  contents:
  - "2.4.4.  MPLS Entropy Label\n   The MPLS Entropy Label simplifies flow group identification\
    \ [RFC6790]\n   at midpoint LSRs.  Prior to the MPLS Entropy Label, midpoint LSRs\n\
    \   needed to inspect the entire label stack and often the IP headers to\n   provide\
    \ an adequate distribution of traffic when using multipath\n   techniques (see\
    \ Section 2.4.5).  With the use of the MPLS Entropy\n   Label, a hash can be performed\
    \ closer to network edges, placed in the\n   label stack, and used by midpoint\
    \ LSRs without fully reinspecting the\n   label stack and inspecting the payload.\n\
    \   The MPLS Entropy Label is capable of avoiding full label stack and\n   payload\
    \ inspection within the core where performance levels are most\n   difficult to\
    \ achieve (see Section 2.3).  The label stack inspection\n   can be terminated\
    \ as soon as the first Entropy Label is encountered,\n   which is generally after\
    \ a small number of labels are inspected.\n   In order to provide these benefits\
    \ in the core, an LSR closer to the\n   edge must be capable of adding an Entropy\
    \ Label.  This support may\n   not be required in the access tier, the tier closest\
    \ to the customer,\n   but is likely to be required in the edge or the border\
    \ to the network\n   core.  An LSR peering with external networks will also need\
    \ to be\n   able to add an Entropy Label on incoming traffic.\n"
- title: 2.4.5.  Fields Used for Multipath Load Balance
  contents:
  - "2.4.5.  Fields Used for Multipath Load Balance\n   The most common multipath\
    \ techniques are based on a hash over a set\n   of fields.  Regardless of whether\
    \ a hash is used or some other method\n   is used, there is a limited set of fields\
    \ that can safely be used for\n   multipath.\n"
- title: 2.4.5.1.  MPLS Fields in Multipath
  contents:
  - "2.4.5.1.  MPLS Fields in Multipath\n   If the \"outer\" or \"first\" layer of\
    \ encapsulation is MPLS, then label\n   stack entries are used in the hash.  Within\
    \ a finite amount of time\n   (and for small packets arriving at high speed, that\
    \ time can be quite\n   limited), only a finite number of label entries can be\
    \ inspected.\n   Pipelined or parallel architectures improve this, but the limit\
    \ is\n   still finite.\n   The following guidelines are provided for use of MPLS\
    \ fields in\n   multipath load balancing.\n   1.  Only the 20-bit label field\
    \ SHOULD be used.  The TTL field SHOULD\n       NOT be used.  The S bit MUST NOT\
    \ be used.  The TC field (formerly\n       EXP) MUST NOT be used.  See text following\
    \ this list for reasons.\n   2.  If an ELI label is found, then if the LSR supports\
    \ Entropy\n       Labels, the EL label field in the next label entry (the EL)\n\
    \       SHOULD be used, label entries below that label SHOULD NOT be\n       used,\
    \ and the MPLS payload SHOULD NOT be used.  See below this\n       list for reasons.\n\
    \   3.  Special-purpose labels (label values 0-15) MUST NOT be used.\n       Extended\
    \ special-purpose labels (any label following label 15)\n       MUST NOT be used.\
    \  In particular, GAL and RA MUST NOT be used so\n       that OAM traffic follows\
    \ the same path as payload packets with\n       the same label stack.\n   4. \
    \ If a new special-purpose label or extended special-purpose label\n       is\
    \ defined that requires special load-balance processing, then,\n       as is the\
    \ case for the ELI label, a special action may be needed\n       rather than skipping\
    \ the special-purpose label or extended\n       special-purpose label.\n   5.\
    \  The most entropy is generally found in the label stack entries\n       near\
    \ the bottom of the label stack (innermost label, closest to\n       S=1 bit).\
    \  If the entire label stack cannot be used (or entire\n       stack up to an\
    \ EL), then it is better to use as many labels as\n       possible closest to\
    \ the bottom of stack.\n   6.  If no ELI is encountered, and the first nibble\
    \ of payload\n       contains a 4 (IPv4) or 6 (IPv6), an implementation SHOULD\
    \ support\n       the ability to interpret the payload as IPv4 or IPv6 and extract\n\
    \       and use appropriate fields from the IP headers.  This feature is\n   \
    \    considered a nonnegotiable requirement by many service providers.\n     \
    \  If supported, there MUST be a way to disable it (if, for example,\n       PW\
    \ without CW are used).  This ability to disable this feature is\n       considered\
    \ a nonnegotiable requirement by many service providers.\n       Therefore, an\
    \ implementation has a very strong incentive to\n       support both options.\n\
    \   7.  A label that is popped at egress (UHP pop) SHOULD NOT be used.  A\n  \
    \     label that is popped at the penultimate hop (PHP pop) SHOULD be\n      \
    \ used.\n   Apparently, some chips have made use of the TC (formerly EXP) bits\
    \ as\n   a source of entropy.  This is very harmful since it will reorder\n  \
    \ Assured Forwarding (AF) traffic [RFC2597] when a subset does not\n   conform\
    \ to the configured rates and is remarked but not dropped at a\n   prior LSR.\
    \  Traffic that uses MPLS ECN [RFC5129] can also be\n   reordered if TC is used\
    \ for entropy.  Therefore, as stated in the\n   guidelines above, the TC field\
    \ (formerly EXP) MUST NOT be used in\n   multipath load balancing as it violates\
    \ Differentiated Services\n   Ordered Aggregate (OA) requirements in these two\
    \ instances.\n   Use of the MPLS label entry S bit would result in putting OAM\
    \ traffic\n   on a different path if the addition of a GAL at the bottom of stack\n\
    \   removed the S bit from the prior label.\n   If an ELI label is found, then\
    \ if the LSR supports Entropy Labels,\n   the EL label field in the next label\
    \ entry (the EL) SHOULD be used,\n   and the search for additional entropy within\
    \ the packet SHOULD be\n   terminated.  Failure to terminate the search will impact\
    \ client MPLS-\n   TP LSPs carried within server MPLS LSPs.  A network operator\
    \ has the\n   option to use administrative attributes as a means to identify LSRs\n\
    \   that do not terminate the entropy search at the first EL.\n   Administrative\
    \ attributes are defined in [RFC3209].  Some\n   configuration is required to\
    \ support this.\n   If the label removed by a PHP pop is not used, then for any\
    \ PW for\n   which CW is used, there is no basis for multipath load split.  In\n\
    \   some networks, it is infeasible to put all PW traffic on one\n   component\
    \ link.  Any PW that does not use CW will be improperly\n   split, regardless\
    \ of whether the label removed by a PHP pop is used.\n   Therefore, the PHP pop\
    \ label SHOULD be used as recommended above.\n"
- title: 2.4.5.2.  IP Fields in Multipath
  contents:
  - "2.4.5.2.  IP Fields in Multipath\n   Inspecting the IP payload provides the most\
    \ entropy in provider\n   networks.  The practice of looking past the bottom of\
    \ stack label for\n   an IP payload is well accepted and documented in [RFC4928]\
    \ and in\n   other RFCs.\n   Where IP is mentioned in the document, both IPv4\
    \ and IPv6 apply.  All\n   LSRs MUST fully support IPv6.\n   When information\
    \ in the IP header is used, the following guidelines\n   apply:\n   1.  Both the\
    \ IP source address and IP destination address SHOULD be\n       used.  There\
    \ MAY be an option to reverse the order of these\n       addresses, improving\
    \ the ability to provide symmetric paths in\n       some cases.  Many service\
    \ providers require that both addresses\n       be used.\n   2.  Implementations\
    \ SHOULD allow inspection of the IP protocol field\n       and use of the UDP\
    \ or TCP port numbers.  For many service\n       providers, this feature is considered\
    \ mandatory, particularly for\n       enterprise, data center, or edge equipment.\
    \  If this feature is\n       provided, it SHOULD be possible to disable use of\
    \ TCP and UDP\n       ports.  Many service providers consider it a nonnegotiable\n\
    \       requirement that use of UDP and TCP ports can be disabled.\n       Therefore,\
    \ there is a strong incentive for implementations to\n       provide both options.\n\
    \   3.  Equipment suppliers MUST NOT make assumptions that because the IP\n  \
    \     version field is equal to 4 (an IPv4 packet) that the IP protocol\n    \
    \   will either be TCP (IP protocol 6) or UDP (IP protocol 17) and\n       blindly\
    \ fetch the data at the offset where the TCP or UDP ports\n       would be found.\
    \  With IPv6, TCP and UDP port numbers are not at\n       fixed offsets.  With\
    \ IPv4 packets carrying IP options, TCP and\n       UDP port numbers are not at\
    \ fixed offsets.\n   4.  The IPv6 header flow field SHOULD be used.  This is the\
    \ explicit\n       purpose of the IPv6 flow field; however, observed flow fields\n\
    \       rarely contain a non-zero value.  Some uses of the flow field\n      \
    \ have been defined, such as [RFC6438].  In the absence of MPLS\n       encapsulation,\
    \ the IPv6 flow field can serve a role equivalent to\n       the Entropy Label.\n\
    \   5.  Support for other protocols that share a common Layer 4 header\n     \
    \  such as RTP [RFC3550], UDP-Lite [RFC3828], SCTP [RFC4960], and\n       DCCP\
    \ [RFC4340] SHOULD be provided, particularly for edge or\n       access equipment\
    \ where additional entropy may be needed.\n       Equipment SHOULD also use RTP,\
    \ UDP-lite, SCTP, and DCCP headers\n       when creating an Entropy Label.\n \
    \  6.  The following IP header fields should not or must not be used:\n      \
    \ A.  Similar to avoiding TC in MPLS, the IP DSCP, and ECN bits\n           MUST\
    \ NOT be used.\n       B.  The IPv4 TTL or IPv6 Hop Count SHOULD NOT be used.\n\
    \       C.  Note that the IP TOS field was deprecated.  ([RFC0791] was\n     \
    \      updated by [RFC2474].)  No part of the IP DSCP field can be\n         \
    \  used (formerly IP PREC and IP TOS bits).\n   7.  Some IP encapsulations support\
    \ tunneling, such as IP-in-IP, GRE,\n       L2TPv3, and IPsec.  These provide\
    \ a greater source of entropy\n       that some provider networks carrying large\
    \ amounts of tunneled\n       traffic may need, for example, as used in [RFC5640]\
    \ for GRE and\n       L2TPv3.  The use of tunneling header information is out\
    \ of scope\n       for this document.\n   This document makes the following recommendations.\
    \  These\n   recommendations are not required to claim compliance to any existing\n\
    \   RFC; therefore, implementers are free to ignore them, but due to\n   service\
    \ provider requirements should consider the risk of doing so.\n   The use of IP\
    \ addresses MUST be supported, and TCP and UDP ports\n   (conditional on the protocol\
    \ field and properly located) MUST be\n   supported.  The ability to disable use\
    \ of UDP and TCP ports MUST be\n   available.\n   Though potentially very useful\
    \ in some networks, it is uncommon to\n   support using payloads of tunneling\
    \ protocols carried over IP.\n   Though the use of tunneling protocol header information\
    \ is out of\n   scope for this document, it is not discouraged.\n"
- title: 2.4.5.3.  Fields Used in Flow Label
  contents:
  - "2.4.5.3.  Fields Used in Flow Label\n   The ingress to a pseudowire (PW) can\
    \ extract information from the\n   payload being encapsulated to create a Flow\
    \ Label.  [RFC6391]\n   references IP carried in Ethernet as an example.  The\
    \ Native Service\n   Processing (NSP) function defined in [RFC3985] differs with\n\
    \   pseudowire type.  It is in the NSP function where information for a\n   specific\
    \ type of PW can be extracted for use in a Flow Label.\n   Determining which fields\
    \ to use for any given PW NSP is out of scope\n   for this document.\n"
- title: 2.4.5.4.  Fields Used in Entropy Label
  contents:
  - "2.4.5.4.  Fields Used in Entropy Label\n   An Entropy Label is added at the ingress\
    \ to an LSP.  The payload\n   being encapsulated is most often MPLS, a PW, or\
    \ IP.  The payload type\n   is identified by the Layer 2 encapsulation (Ethernet,\
    \ GFP, POS,\n   etc.).\n   If the payload is MPLS, then the information used to\
    \ create an\n   Entropy Label is the same information used for local load balancing\n\
    \   (see Section 2.4.5.1).  This information MUST be extracted for use in\n  \
    \ generating an Entropy Label even if the LSR local egress interface is\n   not\
    \ a multipath.\n   Of the non-MPLS payload types, only payloads that are forwarded\
    \ are\n   of interest.  For example, payloads using the Address Resolution\n \
    \  Protocol (ARP) are not forwarded, and payloads using the\n   Connectionless-mode\
    \ Network Protocol (CLNP), which is used only for\n   IS-IS, are not forwarded.\n\
    \   The non-MPLS payload types of greatest interest are IPv4 and IPv6.\n   The\
    \ guidelines in Section 2.4.5.2 apply to fields used to create an\n   Entropy\
    \ Label.\n   The IP tunneling protocols mentioned in Section 2.4.5.2 may be more\n\
    \   applicable to generation of an Entropy Label at the edge or access\n   where\
    \ deep packet inspection is practical due to lower interface\n   speeds than in\
    \ the core where deep packet inspection may be\n   impractical.\n"
- title: 2.5.  MPLS-TP and UHP
  contents:
  - "2.5.  MPLS-TP and UHP\n   MPLS-TP introduces forwarding demands that will be\
    \ extremely\n   difficult to meet in a core network.  Most troublesome is the\n\
    \   requirement for Ultimate Hop Popping (UHP), the opposite of\n   Penultimate\
    \ Hop Popping (PHP).  Using UHP opens the possibility of\n   one or more MPLS\
    \ pop operations plus an MPLS swap operation for each\n   packet.  The potential\
    \ for multiple lookups and multiple counter\n   instances per packet exists.\n\
    \   As networks grow and tunneling of LDP LSPs into RSVP-TE LSPs is used,\n  \
    \ and/or RSVP-TE hierarchy is used, the requirement to perform one or\n   more\
    \ MPLS pop operations plus an MPLS swap operation (and possibly a\n   push or\
    \ two) increases.  If MPLS-TP LM (link monitoring) OAM is\n   enabled at each\
    \ layer, then a packet and byte count MUST be\n   maintained for each pop and\
    \ swap operation so as to offer OAM for\n   each layer.\n"
- title: 2.6.  Local Delivery of Packets
  contents:
  - "2.6.  Local Delivery of Packets\n   There are a number of situations in which\
    \ packets are destined to a\n   local address or where a return packet must be\
    \ generated.  There is a\n   need to mitigate the potential for outage as a result\
    \ of either\n   attacks on network infrastructure, or in some cases unintentional\n\
    \   misconfiguration resulting in processor overload.  Some hardware\n   assistance\
    \ is needed for all traffic destined to the general-purpose\n   CPU that is used\
    \ in processing of the MPLS control protocol or the\n   network management protocol\
    \ and in most cases to other general-\n   purpose CPUs residing on an LSR.  This\
    \ is due to the ease of\n   overwhelming such a processor with traffic arriving\
    \ on LSR high-speed\n   interfaces, whether the traffic is malicious or not.\n\
    \   Denial of service (DoS) protection is an area requiring hardware\n   support\
    \ that is often overlooked or inadequately considered.\n   Hardware assists are\
    \ also needed for OAM, particularly the more\n   demanding MPLS-TP OAM.\n"
- title: 2.6.1.  DoS Protection
  contents:
  - "2.6.1.  DoS Protection\n   Modern equipment supports a number of control-plane\
    \ and management-\n   plane protocols.  Generally, no single means of protecting\
    \ network\n   equipment from DoS attacks is sufficient, particularly for high-speed\n\
    \   interfaces.  This problem is not specific to MPLS but is a topic that\n  \
    \ cannot be ignored when implementing or evaluating MPLS\n   implementations.\n\
    \   Two types of protections are often cited as the primary means of\n   protecting\
    \ against attacks of all kinds.\n   Isolated Control/Management Traffic\n    \
    \   Control and management traffic can be carried out-of-band (OOB),\n       meaning\
    \ not intermixed with payload.  For MPLS, use of G-ACh and\n       GAL to carry\
    \ control and management traffic provides a means of\n       isolation from potentially\
    \ malicious payloads.  Used alone, the\n       compromise of a single node, including\
    \ a small computer at a\n       network operations center, could compromise an\
    \ entire network.\n       Implementations that send all G-ACh/GAL traffic directly\
    \ to a\n       routing engine CPU are subject to DoS attack as a result of such\n\
    \       a compromise.\n   Cryptographic Authentication\n       Cryptographic authentication\
    \ can very effectively prevent\n       malicious injection of control or management\
    \ traffic.\n       Cryptographic authentication can in some circumstances be subject\n\
    \       to DoS attack by overwhelming the capacity of the decryption with\n  \
    \     a high volume of malicious traffic.  For very-low-speed\n       interfaces,\
    \ cryptographic authentication can be performed by the\n       general-purpose\
    \ CPU used as a routing engine.  For all other\n       cases, cryptographic hardware\
    \ may be needed.  For very-high-speed\n       interfaces, even cryptographic hardware\
    \ can be overwhelmed.\n   Some control and management protocols are often carried\
    \ with payload\n   traffic.  This is commonly the case with BGP, T-LDP, and SNMP.\
    \  It is\n   often the case with RSVP-TE.  Even when carried over G-ACh/GAL,\n\
    \   additional measures can reduce the potential for a minor breach to be\n  \
    \ leveraged to a full network attack.\n   Some of the additional protections are\
    \ supported by hardware packet\n   filtering.\n   GTSM\n       [RFC5082] defines\
    \ a mechanism that uses the IPv4 TTL or IPv6 Hop\n       Limit fields to ensure\
    \ control traffic that can only originate\n       from an immediate neighbor is\
    \ not forged and is not originating\n       from a distant source.  GTSM can be\
    \ applied to many control\n       protocols that are routable, for example, LDP\
    \ [RFC6720].\n   IP Filtering\n       At the very minimum, packet filtering plus\
    \ classification and use\n       of multiple queues supporting rate limiting is\
    \ needed for traffic\n       that could potentially be sent to a general-purpose\
    \ CPU used as a\n       routing engine.  The first level of filtering only allows\n\
    \       connections to be initiated from specific IP prefixes to specific\n  \
    \     destination ports and then preferably passes traffic directly to\n     \
    \  a cryptographic engine and/or rate limits.  The second level of\n       filtering\
    \ passes connected traffic, such as TCP connections\n       having received at\
    \ least one authenticated SYN or having been\n       locally initiated.  The second\
    \ level of filtering only passes\n       traffic to specific address and port\
    \ pairs to be checked for\n       cryptographic authentication.\n   The cryptographic\
    \ authentication is generally the last resort in DoS\n   attack mitigation.  If\
    \ a packet must be first sent to a general-\n   purpose CPU, then sent to a cryptographic\
    \ engine, a DoS attack is\n   possible on high-speed interfaces.  Only where hardware\
    \ can fully\n   process a cryptographic authentication without intervention from\
    \ a\n   general-purpose CPU (to find the authentication field and to identify\n\
    \   the portion of packet to run the cryptographic algorithm over) is\n   cryptographic\
    \ authentication beneficial in protecting against DoS\n   attacks.\n   For chips\
    \ supporting multiple 100 Gb/s interfaces, only a very large\n   number of parallel\
    \ cryptographic engines can provide the processing\n   capacity to handle a large-scale\
    \ DoS or distributed DoS (DDoS)\n   attack.  For many forwarding chips, this much\
    \ processing power\n   requires significant chip real estate and power, and therefore\n\
    \   reduces system space and power density.  For this reason,\n   cryptographic\
    \ authentication is not considered a viable first line of\n   defense.\n   For\
    \ some networks, the first line of defense is some means of\n   supporting OOB\
    \ control and management traffic.  In the past, this OOB\n   channel might make\
    \ use of overhead bits in SONET or OTN or a\n   dedicated DWDM wavelength.  G-ACh\
    \ and GAL provide an alternative OOB\n   mechanism that is independent of underlying\
    \ layers.  In other\n   networks, including most IP/MPLS networks, perimeter filtering\
    \ serves\n   a similar purpose, though it is less effective without extreme\n\
    \   vigilance.\n   A second line of defense is filtering, including GTSM.  For\
    \ protocols\n   such as EBGP, GTSM and other filtering are often the first line\
    \ of\n   defense.  Cryptographic authentication is usually the last line of\n\
    \   defense and insufficient by itself to mitigate DoS or DDoS attacks.\n"
- title: 2.6.2.  MPLS OAM
  contents:
  - "2.6.2.  MPLS OAM\n   [RFC4377] defines requirements for MPLS OAM that predate\
    \ MPLS-TP.\n   [RFC4379] defines what is commonly referred to as LSP Ping and\
    \ LSP\n   Traceroute.  [RFC4379] is updated by [RFC6424], which supports MPLS\n\
    \   tunnels and stitched LSP and P2MP LSP.  [RFC4379] is updated by\n   [RFC6425],\
    \ which supports P2MP LSP.  [RFC4379] is updated by\n   [RFC6426] to support MPLS-TP\
    \ connectivity verification (CV) and route\n   tracing.\n   [RFC4950] extends\
    \ the ICMP format to support TTL expiration that may\n   occur when using IP Traceroute\
    \ within an MPLS tunnel.  The ICMP\n   message generation can be implemented in\
    \ forwarding hardware, but if\n   the ICMP packets are sent to a general-purpose\
    \ CPU, this packet flow\n   must be rate limited to avoid a potential DoS attack.\n\
    \   [RFC5880] defines Bidirectional Forwarding Detection (BFD), a\n   protocol\
    \ intended to detect faults in the bidirectional path between\n   two forwarding\
    \ engines.  [RFC5884] and [RFC5885] define BFD for MPLS.\n   BFD can provide failure\
    \ detection on any kind of path between\n   systems, including direct physical\
    \ links, virtual circuits, tunnels,\n   MPLS Label Switched Paths (LSPs), multihop\
    \ routed paths, and\n   unidirectional links as long as there is some return path.\n\
    \   The processing requirements for BFD are less than for LSP Ping,\n   making\
    \ BFD somewhat better suited for relatively high-rate proactive\n   monitoring.\
    \  BFD does not verify that the data plane matches the\n   control plane, where\
    \ LSP Ping does.  LSP Ping is somewhat better\n   suited for on-demand monitoring\
    \ including relatively low-rate\n   periodic verification of the data plane and\
    \ as a diagnostic tool.\n   Hardware assistance is often provided for BFD response\
    \ where BFD\n   setup or parameter change is not involved and may be necessary\
    \ for\n   relatively high-rate proactive monitoring.  If both BFD and LSP Ping\n\
    \   are recognized in filtering prior to passing traffic to a general-\n   purpose\
    \ CPU, appropriate DoS protection can be applied (see\n   Section 2.6.1).  Failure\
    \ to recognize BFD and LSP Ping and at least\n   to rate limit creates the potential\
    \ for misconfiguration to cause\n   outages rather than cause errors in the misconfigured\
    \ OAM.\n"
- title: 2.6.3.  Pseudowire OAM
  contents:
  - "2.6.3.  Pseudowire OAM\n   Pseudowire OAM makes use of the control channel provided\
    \ by Virtual\n   Circuit Connectivity Verification (VCCV) [RFC5085].  VCCV makes\
    \ use\n   of the pseudowire Control Word.  BFD support over VCCV is defined by\n\
    \   [RFC5885].  [RFC5885] is updated by [RFC6478] in support of static\n   pseudowires.\
    \  [RFC4379] is updated by [RFC6829] to support LSP Ping\n   for Pseudowire FEC\
    \ advertised over IPv6.\n   G-ACh/GAL (defined in [RFC5586]) is the preferred\
    \ MPLS-TP OAM control\n   channel and applies to any MPLS-TP endpoints, including\
    \ pseudowire.\n   See Section 2.6.4 for an overview of MPLS-TP OAM.\n"
- title: 2.6.4.  MPLS-TP OAM
  contents:
  - "2.6.4.  MPLS-TP OAM\n   [RFC6669] summarizes the MPLS-TP OAM toolset, the set\
    \ of protocols\n   supporting the MPLS-TP OAM requirements specified in [RFC5860]\
    \ and\n   supported by the MPLS-TP OAM framework defined in [RFC6371].\n   The\
    \ MPLS-TP OAM toolset includes:\n   CC-CV\n       [RFC6428] defines BFD extensions\
    \ to support proactive Continuity\n       Check and Connectivity Verification\
    \ (CC-CV) applications.\n       [RFC6426] provides LSP Ping extensions that are\
    \ used to implement\n       on-demand connectivity verification.\n   RDI\n   \
    \    Remote Defect Indication (RDI) is triggered by failure of\n       proactive\
    \ CC-CV, which is BFD based.  For fast RDI, RDI SHOULD be\n       initiated and\
    \ handled by hardware if BFD is handled in forwarding\n       hardware.  [RFC6428]\
    \ provides an extension for BFD that includes\n       the RDI in the BFD format\
    \ and a specification of how this\n       indication is to be used.\n   Route\
    \ Tracing\n       [RFC6426] specifies that the LSP Ping enhancements for MPLS-TP\n\
    \       on-demand connectivity verification include information on the\n     \
    \  use of LSP Ping for route tracing of an MPLS-TP path.\n   Alarm Reporting\n\
    \       [RFC6427] describes the details of a new protocol supporting\n       Alarm\
    \ Indication Signal (AIS), Link Down Indication (LDI), and\n       fault management.\
    \  Failure to support this functionality in\n       forwarding hardware can potentially\
    \ result in failure to meet\n       protection recovery time requirements; therefore,\
    \ support of this\n       functionality is strongly recommended.\n   Lock Instruct\n\
    \       Lock instruct is initiated on demand and therefore need not be\n     \
    \  implemented in forwarding hardware.  [RFC6435] defines a lock\n       instruct\
    \ protocol.\n   Lock Reporting\n       [RFC6427] covers lock reporting.  Lock\
    \ reporting need not be\n       implemented in forwarding hardware.\n   Diagnostic\n\
    \       [RFC6435] defines protocol support for loopback.  Loopback\n       initiation\
    \ is on demand and therefore need not be implemented in\n       forwarding hardware.\
    \  Loopback of packet traffic SHOULD be\n       implemented in forwarding hardware\
    \ on high-speed interfaces.\n   Packet Loss and Delay Measurement\n       [RFC6374]\
    \ and [RFC6375] define a protocol and profile for Packet\n       Loss Measurement\
    \ (LM) and Delay Measurement (DM).  LM requires a\n       very accurate capture\
    \ and insertion of packet and byte counters\n       when a packet is transmitted\
    \ and capture of packet and byte\n       counters when a packet is received. \
    \ This capture and insertion\n       MUST be implemented in forwarding hardware\
    \ for LM OAM if high\n       accuracy is needed.  DM requires very accurate capture\
    \ and\n       insertion of a timestamp on transmission and capture of timestamp\n\
    \       when a packet is received.  This timestamp capture and insertion\n   \
    \    MUST be implemented in forwarding hardware for DM OAM if high\n       accuracy\
    \ is needed.\n   See Section 2.6.2 for discussion of hardware support necessary\
    \ for\n   BFD and LSP Ping.\n   CC-CV and alarm reporting is tied to protection\
    \ and therefore SHOULD\n   be supported in forwarding hardware in order to provide\
    \ protection\n   for a large number of affected LSPs within target response intervals.\n\
    \   When using MPLS-TP, since CC-CV is supported by BFD, providing\n   hardware\
    \ assistance for BFD processing helps ensure that protection\n   recovery time\
    \ requirements can be met even for faults affecting a\n   large number of LSPs.\n\
    \   MPLS-TP Protection State Coordination (PSC) is defined by [RFC6378]\n   and\
    \ updated by [RFC7324], which corrects some errors in [RFC6378].\n"
- title: 2.6.5.  MPLS OAM and Layer 2 OAM Interworking
  contents:
  - "2.6.5.  MPLS OAM and Layer 2 OAM Interworking\n   [RFC6670] provides the reasons\
    \ for selecting a single MPLS-TP OAM\n   solution and examines the consequences\
    \ were ITU-T to develop a second\n   OAM solution that is based on Ethernet encodings\
    \ and mechanisms.\n   [RFC6310] and [RFC7023] specify the mapping of defect states\
    \ between\n   many types of hardware Attachment Circuits (ACs) and associated\n\
    \   pseudowires (PWs).  This functionality SHOULD be supported in\n   forwarding\
    \ hardware.\n   It is beneficial if an MPLS OAM implementation can interwork with\
    \ the\n   underlying server layer and provide a means to interwork with a\n  \
    \ client layer.  For example, [RFC6427] specifies an inter-layer\n   propagation\
    \ of AIS and LDI from MPLS server layer to client MPLS\n   layers.  Where the\
    \ server layer uses a Layer 2 mechanism, such as\n   Ethernet, PPP over SONET/SDH,\
    \ or GFP over OTN, interwork among layers\n   is also beneficial.  For high-speed\
    \ interfaces, supporting this\n   interworking in forwarding hardware helps ensure\
    \ that protection\n   based on this interworking can meet recovery time requirements\
    \ even\n   for faults affecting a large number of LSPs.\n"
- title: 2.6.6.  Extent of OAM Support by Hardware
  contents:
  - "2.6.6.  Extent of OAM Support by Hardware\n   Where certain requirements must\
    \ be met, such as relatively high CC-CV\n   rates and a large number of interfaces,\
    \ or strict protection recovery\n   time requirements and a moderate number of\
    \ affected LSPs, some OAM\n   functionality must be supported by forwarding hardware.\
    \  In other\n   cases, such as highly accurate LM and DM OAM or strict protection\n\
    \   recovery time requirements with a large number of affected LSPs, OAM\n   functionality\
    \ must be entirely implemented in forwarding hardware.\n   Where possible, implementation\
    \ in forwarding hardware should be in\n   programmable hardware such that if standards\
    \ are later changed or\n   extended these changes are likely to be accommodated\
    \ with hardware\n   reprogramming rather than replacement.\n   For some functionality,\
    \ there is a strong case for an implementation\n   in dedicated forwarding hardware.\
    \  Examples include packet and byte\n   counters needed for LM OAM as well as\
    \ needed for management\n   protocols.  Similarly, the capture and insertion of\
    \ packet and byte\n   counts or timestamps needed for transmitted LM or DM or\
    \ time\n   synchronization packets MUST be implemented in forwarding hardware\
    \ if\n   high accuracy is required.\n   For some functions, there is a strong\
    \ case to provide limited support\n   in forwarding hardware, but an external\
    \ general-purpose processor may\n   be used if performance criteria can be met.\
    \  For example, origination\n   of RDI triggered by CC-CV, response to RDI, and\
    \ Protection State\n   Coordination (PSC) functionality may be supported by hardware,\
    \ but\n   expansion to a large number of client LSPs and transmission of AIS or\n\
    \   RDI to the client LSPs may occur in a general-purpose processor.\n   Some\
    \ forwarding hardware supports one or more on-chip general-purpose\n   processors\
    \ that may be well suited for such a role.  [RFC7324], being\n   a very recent\
    \ document that affects a protection state machine that\n   requires hardware\
    \ support, underscores the importance of having a\n   degree of programmability\
    \ in forwarding hardware.\n   The customer (system supplier or provider) should\
    \ not dictate design,\n   but should independently validate target functionality\
    \ and\n   performance.  However, it is not uncommon for service providers and\n\
    \   system implementers to insist on reviewing design details (under a\n   non-disclosure\
    \ agreement) due to past experiences with suppliers and\n   to reject suppliers\
    \ who are unwilling to provide details.\n"
- title: 2.6.7.  Support for IPFIX in Hardware
  contents:
  - "2.6.7.  Support for IPFIX in Hardware\n   The IPFIX architecture is defined by\
    \ [RFC5470].  IPFIX supports per-\n   flow statistics.  IPFIX information elements\
    \ (IEs) are defined in\n   [RFC7012] and include IEs for MPLS.\n   The forwarding\
    \ chips used in core routers are not optimized for high-\n   touch applications\
    \ like IPFIX.  Often, support for IPFIX in core\n   routers is limited to optional\
    \ IPFIX metering, which involves a\n   1-in-N packet sampling, limited filtering\
    \ support, and redirection to\n   either an internal CPU or an external interface.\
    \  The CPU or device\n   at the other end of the external interface then implements\
    \ the full\n   IPFIX filtering and IPFIX collector functionality.\n   LSRs that\
    \ are intended to be deployed further from the core may\n   support lower-capacity\
    \ interfaces but support higher-touch\n   applications on the forwarding hardware\
    \ and may provide dedicated\n   hardware to support a greater subset of IPFIX\
    \ functionality before\n   handing off to a general-purpose CPU.  In some cases,\
    \ far from the\n   core the entire IPFIX functionality up to and including the\
    \ collector\n   may be implemented in hardware and firmware in the forwarding\n\
    \   silicon.  It is also worth noting that at lower speeds a general-\n   purpose\
    \ CPU may become adequate to implement IPFIX, particularly if\n   metering is\
    \ used.\n"
- title: 2.7.  Number and Size of Flows
  contents:
  - "2.7.  Number and Size of Flows\n   Service provider networks may carry up to\
    \ hundreds of millions of\n   flows on 10 Gb/s links.  Most flows are very short\
    \ lived, many under\n   a second.  A subset of the flows are low capacity and\
    \ somewhat long\n   lived.  When Internet traffic dominates capacity, a very small\
    \ subset\n   of flows are high capacity and/or very long lived.\n   Two types\
    \ of limitations with regard to number and size of flows have\n   been observed.\n\
    \   1.  Some hardware cannot handle some high-capacity flows because of\n    \
    \   internal paths that are limited, such as per-packet backplane\n       paths\
    \ or paths internal or external to chips such as buffer\n       memory paths.\
    \  Such designs can handle aggregates of smaller\n       flows.  Some hardware\
    \ with acknowledged limitations has been\n       successfully deployed but may\
    \ be increasingly problematic if the\n       capacity of large microflows in deployed\
    \ networks continues to\n       grow.\n   2.  Some hardware approaches cannot\
    \ handle a large number of flows,\n       or a large number of large flows, due\
    \ to attempting to count per\n       flow, rather than deal with aggregates of\
    \ flows.  Hash techniques\n       scale with regard to number of flows due to\
    \ a fixed hash size\n       with many flows falling into the same hash bucket.\
    \  Techniques\n       that identify individual flows have been implemented but\
    \ have\n       never successfully deployed for Internet traffic.\n"
- title: 3.  Questions for Suppliers
  contents:
  - "3.  Questions for Suppliers\n   The following questions should be asked of a\
    \ supplier.  These\n   questions are grouped into broad categories and are intended\
    \ to be\n   open-ended questions to the supplier.  The tests in Section 4 are\n\
    \   intended to verify whether the supplier disclosed any compliance or\n   performance\
    \ limitations completely and accurately.\n"
- title: 3.1.  Basic Compliance
  contents:
  - "3.1.  Basic Compliance\n   Q#1   Can the implementation forward packets with\
    \ an arbitrarily\n         large stack depth?  What limitations exist, and under\
    \ what\n         circumstances do further limitations come into play (such as\n\
    \         high packet rate or specific features enabled or specific types\n  \
    \       of packet processing)?  See Section 2.1.\n   Q#2   Is the entire set of\
    \ basic MPLS functionality described in\n         Section 2.1 supported?\n   Q#3\
    \   Is the set of MPLS special-purpose labels handled correctly and\n        \
    \ with adequate performance?  Are extended special-purpose labels\n         handled\
    \ correctly and with adequate performance?  See\n         Section 2.1.1.\n   Q#4\
    \   Are mappings of label value and TC to PHB handled correctly,\n         including\
    \ L-LSP mappings (RFC 3270) and CT mappings (RFC 4124)\n         to PHB?  See\
    \ Section 2.1.2.\n   Q#5   Is time synchronization adequately supported in forwarding\n\
    \         hardware?\n         A.  Are both PTP and NTP formats supported?\n  \
    \       B.  Is the accuracy of timestamp insertion and incoming\n            \
    \ stamping sufficient?\n         See Section 2.1.3.\n   Q#6   Is link bundling\
    \ supported?\n         A.  Can an LSP be pinned to specific components?\n    \
    \     B.  Is the \"all-ones\" component link supported?\n         See Section\
    \ 2.1.5.\n   Q#7   Is MPLS hierarchy supported?\n         A.  Are both PHP and\
    \ UHP supported?  What limitations exist on\n             the number of pop operations\
    \ with UHP?\n         B.  Are the pipe, short-pipe, and uniform models supported?\n\
    \             Are TTL and TC values updated correctly at egress where\n      \
    \       applicable?\n         See Section 2.1.6 regarding MPLS hierarchy.  See\
    \ [RFC3443]\n         regarding PHP, UHP, and pipe, short-pipe, and uniform models.\n\
    \   Q#8   Is FRR supported?\n         A.  Are both \"One-to-One Backup\" and \"\
    Facility Backup\"\n             supported?\n         B.  What forms of IP/LDP\
    \ FRR are supported?\n         C.  How quickly does protection recovery occur?\n\
    \         D.  Does protection recovery speed increase when a fault\n         \
    \    affects a large number of protected LSPs?  And if so, by\n             how\
    \ much?\n         See Section 2.1.7.\n   Q#9   Are pseudowire Sequence Numbers\
    \ handled correctly?  See\n         Section 2.1.8.1.\n   Q#10  Is VPN LER functionality\
    \ handled correctly and without\n         performance issues?  See Section 2.1.9.\n\
    \   Q#11  Is MPLS multicast (P2MP and MP2MP) handled correctly?\n         A. \
    \ Are packets dropped on uncongested outputs if some outputs\n             are\
    \ congested?\n         B.  Is performance limited in high-fanout situations?\n\
    \         See Section 2.2.\n"
- title: 3.2.  Basic Performance
  contents:
  - "3.2.  Basic Performance\n   Q#12 Can very small packets be forwarded at full\
    \ line rate on all\n        interfaces indefinitely?  What limitations exist?\
    \  And under\n        what circumstances do further limitations come into play\
    \ (such\n        as specific features enabled or specific types of packet\n  \
    \      processing)?\n   Q#13 Customers must decide whether to relax the prior\
    \ requirement and\n        to what extent.  If the answer to the prior question\
    \ indicates\n        that limitations exist, then:\n        A.  What is the smallest\
    \ packet size where full line rate\n            forwarding can be supported?\n\
    \        B.  What is the longest burst of full-rate small packets that\n     \
    \       can be supported?\n        Specify circumstances (such as specific features\
    \ enabled or\n        specific types of packet processing) that often impact these\n\
    \        rates and burst sizes.\n   Q#14 How many pop operations can be supported\
    \ along with a swap\n        operation at full line rate while maintaining per-LSP\
    \ packet and\n        byte counts for each pop and swap?  This requirement is\n\
    \        particularly relevant for MPLS-TP.\n   Q#15 How many label push operations\
    \ can be supported.  While this\n        limitation is rarely an issue, it applies\
    \ to both PHP and UHP,\n        unlike the pop limit that applies to UHP.\n  \
    \ Q#16 For a worst case where all packets arrive on one LSP, what is\n       \
    \ the counter overflow time?  Are any means provided to avoid\n        polling\
    \ all counters at short intervals?  This applies to both\n        MPLS and MPLS-TP.\n"
- title: 3.3.  Multipath Capabilities and Performance
  contents:
  - "3.3.  Multipath Capabilities and Performance\n   Multipath capabilities and performance\
    \ do not apply to MPLS-TP, but\n   they apply to MPLS and apply if MPLS-TP is\
    \ carried in MPLS.\n   Q#17 How are large microflows accommodated?  Is there active\n\
    \        management of the hash space mapping to output ports?  See\n        Section\
    \ 2.4.2.\n   Q#18 How many MPLS labels can be included in a hash based on the\
    \ MPLS\n        label stack?\n   Q#19 Is packet rate performance decreased beyond\
    \ some number of\n        labels?\n   Q#20 Can the IP header and payload information\
    \ below the MPLS stack\n        be used in the hash?  If so, which IP fields,\
    \ payload types, and\n        payload fields are supported?\n   Q#21 At what maximum\
    \ MPLS label stack depth can Bottom of Stack and\n        an IP header appear\
    \ without impacting packet rate performance?\n   Q#22 Are special-purpose labels\
    \ excluded from the label stack hash?\n        Are extended special-purpose labels\
    \ excluded from the label\n        stack hash?  See Section 2.4.5.1.\n   Q#23\
    \ How is multipath performance affected by high-capacity flows, an\n        extremely\
    \ large number of flows, or very short-lived flows?  See\n        Section 2.7.\n"
- title: 3.4.  Pseudowire Capabilities and Performance
  contents:
  - "3.4.  Pseudowire Capabilities and Performance\n   Q#24 Is the pseudowire Control\
    \ Word supported?\n   Q#25 What is the maximum rate of pseudowire encapsulation\
    \ and\n        decapsulation?  Apply the same questions as in Section 3.2\n  \
    \      (\"Basic Performance\") for any packet-based pseudowire, such as\n    \
    \    IP VPN or Ethernet.\n   Q#26 Does inclusion of a pseudowire Control Word\
    \ impact performance?\n   Q#27 Are Flow Labels supported?\n   Q#28 If so, what\
    \ fields are hashed on for the Flow Label for\n        different types of pseudowires?\n\
    \   Q#29 Does inclusion of a Flow Label impact performance?\n"
- title: 3.5.  Entropy Label Support and Performance
  contents:
  - "3.5.  Entropy Label Support and Performance\n   Q#30 Can an Entropy Label be\
    \ added when acting as an ingress LER, and\n        can it be removed when acting\
    \ as an egress LER?\n   Q#31 If an Entropy Label can be added, what fields are\
    \ hashed on for\n        the Entropy Label?\n   Q#32 Does adding or removing an\
    \ Entropy Label impact packet rate\n        performance?\n   Q#33 Can an Entropy\
    \ Label be detected in the label stack, used in the\n        hash, and properly\
    \ terminate the search for further information\n        to hash on?\n   Q#34 Does\
    \ using an Entropy Label have any negative impact on\n        performance?  It\
    \ should have no impact or a positive impact.\n"
- title: 3.6.  DoS Protection
  contents:
  - "3.6.  DoS Protection\n   Q#35 For each control- and management-plane protocol\
    \ in use, what\n        measures are taken to provide DoS attack hardening?\n\
    \   Q#36 Have DoS attack tests been performed?\n   Q#37 Can compromise of an internal\
    \ computer on a management subnet be\n        leveraged for any form of attack\
    \ including DoS attack?\n"
- title: 3.7.  OAM Capabilities and Performance
  contents:
  - "3.7.  OAM Capabilities and Performance\n   Q#38 What OAM proactive and on-demand\
    \ mechanisms are supported?\n   Q#39 What performance limits exist under high\
    \ proactive monitoring\n        rates?\n   Q#40 Can excessively high proactive\
    \ monitoring rates impact control-\n        plane performance or cause control-plane\
    \ instability?\n   Q#41 Ask the prior questions for each of the following.\n \
    \       A.  MPLS OAM\n        B.  Pseudowire OAM\n        C.  MPLS-TP OAM\n  \
    \      D.  Layer 2 OAM Interworking\n        See Section 2.6.\n"
- title: 4.  Forwarding Compliance and Performance Testing
  contents:
  - "4.  Forwarding Compliance and Performance Testing\n   Packet rate performance\
    \ of equipment supporting a large number of 10\n   Gb/s or 100 Gb/s links is not\
    \ possible using desktop computers or\n   workstations.  The use of high-end workstations\
    \ as a source of test\n   traffic was barely viable 20 years ago but is no longer\
    \ at all\n   viable.  Though custom microcode has been used on specialized router\n\
    \   forwarding cards to serve the purpose of generating test traffic and\n   measuring\
    \ it, for the most part, performance testing will require\n   specialized test\
    \ equipment.  There are multiple sources of suitable\n   equipment.\n   The set\
    \ of tests listed here do not correspond one-to-one to the set\n   of questions\
    \ in Section 3.  The same categorization is used, and\n   these tests largely\
    \ serve to validate answers provided to the prior\n   questions.  They can also\
    \ provide answers where a supplier is\n   unwilling to disclose compliance or\
    \ performance.\n   Performance testing is the domain of the IETF Benchmark Methodology\n\
    \   Working Group (BMWG).  Below are brief descriptions of conformance\n   and\
    \ performance tests.  Some very basic tests, specified in\n   [RFC5695], partially\
    \ cover only the basic performance test T#3.\n   The following tests should be\
    \ performed by the systems designer or\n   deployer; or, if it is not practical\
    \ for the potential customer to\n   perform the tests directly, they may be performed\
    \ by the supplier on\n   their behalf.  These tests are grouped into broad categories.\n\
    \   The tests in Section 4.1 should be repeated under various conditions\n   to\
    \ retest basic performance when critical capabilities are enabled.\n   Complete\
    \ repetition of the performance tests enabling each capability\n   and combinations\
    \ of capabilities would be very time intensive;\n   therefore, a reduced set of\
    \ performance tests can be used to gauge\n   the impact of enabling specific capabilities.\n"
- title: 4.1.  Basic Compliance
  contents:
  - "4.1.  Basic Compliance\n   T#1  Test forwarding at a high rate for packets with\
    \ varying number\n        of label entries.  While packets with more than a dozen\
    \ label\n        entries are unlikely to be used in any practical scenario today,\n\
    \        it is useful to know if limitations exists.\n   T#2  For each of the\
    \ questions listed under \"Basic Compliance\" in\n        Section 3, verify the\
    \ claimed compliance.  For any functionality\n        considered critical to a\
    \ deployment, the applicable performance\n        using each capability under\
    \ load should be verified in addition\n        to basic compliance.\n"
- title: 4.2.  Basic Performance
  contents:
  - "4.2.  Basic Performance\n   T#3  Test packet forwarding at full line rate with\
    \ small packets.\n        See [RFC5695].  The most likely case to fail is the\
    \ smallest\n        packet size.  Also, test with packet sizes in 4-byte increments\n\
    \        ranging from payload sizes of 40 to 128 bytes.\n   T#4  If the prior\
    \ tests did not succeed for all packet sizes, then\n        perform the following\
    \ tests.\n        A.  Increase the packet size by 4 bytes until a size is found\n\
    \            that can be forwarded at full rate.\n        B.  Inject bursts of\
    \ consecutive small packets into a stream of\n            larger packets.  Allow\
    \ some time for recovery between\n            bursts.  Increase the number of\
    \ packets in the burst until\n            packets are dropped.\n   T#5  Send test\
    \ traffic where a swap operation is required.  Also set\n        up multiple LSPs\
    \ carried over other LSPs where the device under\n        test (DUT) is the egress\
    \ of these LSPs.  Create test packets\n        such that the swap operation is\
    \ performed after pop operations,\n        increasing the number of pop operations\
    \ until forwarding of\n        small packets at full line rate can no longer be\
    \ supported.\n        Also, check to see how many pop operations can be supported\n\
    \        before the full set of counters can no longer be maintained.\n      \
    \  This requirement is particularly relevant for MPLS-TP.\n   T#6  Send all traffic\
    \ on one LSP and see if the counters become\n        inaccurate.  Often, counters\
    \ on silicon are much smaller than\n        the 64-bit packet and byte counters\
    \ in various IETF MIBs.\n        System developers should consider what counter\
    \ polling rate is\n        necessary to maintain accurate counters and whether\
    \ those\n        polling rates are practical.  Relevant MIBs for MPLS are\n  \
    \      discussed in [RFC4221] and [RFC6639].\n   T#7  [RFC6894] provides a good\
    \ basis for MPLS FRR testing.  Similar\n        testing should be performed to\
    \ determine restoration times;\n        however, this testing is far more difficult\
    \ to perform due to\n        the need for a simulated test topology that is capable\
    \ of\n        simulating the signaling used in restoration.  The simulated\n \
    \       topology should be comparable with the target deployment in the\n    \
    \    number of nodes and links and in resource usage flooding and\n        setup\
    \ delays.  Some commercial test equipment can support this\n        type of testing.\n"
- title: 4.3.  Multipath Capabilities and Performance
  contents:
  - "4.3.  Multipath Capabilities and Performance\n   Multipath capabilities do not\
    \ apply to MPLS-TP but apply to MPLS and\n   apply if MPLS-TP is carried in MPLS.\n\
    \   T#8  Send traffic at a rate well exceeding the capacity of a single\n    \
    \    multipath component link, and where entropy exists only below\n        the\
    \ top of stack.  If only the top label is used, this test will\n        fail immediately.\n\
    \   T#9  Move the labels with entropy down in the stack until either the\n   \
    \     full forwarding rate can no longer be supported or most or all\n       \
    \ packets try to use the same component link.\n   T#10 Repeat the two tests above\
    \ with the entropy contained in IP\n        headers or IP payload fields below\
    \ the label stack rather than\n        in the label stack.  Test with the set\
    \ of IP headers or IP\n        payload fields considered relevant to the deployment\
    \ or to the\n        target market.\n   T#11 Determine whether traffic that contains\
    \ a pseudowire Control\n        Word is interpreted as IP traffic.  Information\
    \ in the payload\n        MUST NOT be used in the load balancing if the first\
    \ nibble of\n        the packet is not 4 or 6 (IPv4 or IPv6).\n   T#12 Determine\
    \ whether special-purpose labels and extended special-\n        purpose labels\
    \ are excluded from the label stack hash.  They\n        MUST be excluded.\n \
    \  T#13 Perform testing in the presence of combinations of:\n        A.  Very\
    \ large microflows.\n        B.  Relatively short-lived high-capacity flows.\n\
    \        C.  Extremely large numbers of flows.\n        D.  Very short-lived small\
    \ flows.\n"
- title: 4.4.  Pseudowire Capabilities and Performance
  contents:
  - "4.4.  Pseudowire Capabilities and Performance\n   T#14 Ensure that pseudowire\
    \ can be set up with a pseudowire label and\n        pseudowire Control Word added\
    \ at ingress and the pseudowire\n        label and pseudowire Control Word removed\
    \ at egress.\n   T#15 For pseudowire that contains variable-length payload packets,\n\
    \        repeat performance tests listed under \"Basic Performance\" for\n   \
    \     pseudowire ingress and egress functions.\n   T#16 Repeat pseudowire performance\
    \ tests with and without a\n        pseudowire Control Word.\n   T#17 Determine\
    \ whether pseudowire can be set up with a pseudowire\n        label, Flow Label,\
    \ and pseudowire Control Word added at ingress\n        and the pseudowire label,\
    \ Flow Label, and pseudowire Control\n        Word removed at egress.\n   T#18\
    \ Determine which payload fields are used to create the Flow Label\n        and\
    \ whether the set of fields and algorithm provide sufficient\n        entropy\
    \ for load balancing.\n   T#19 Repeat pseudowire performance tests with Flow Labels\
    \ included.\n"
- title: 4.5.  Entropy Label Support and Performance
  contents:
  - "4.5.  Entropy Label Support and Performance\n   T#20 Determine whether Entropy\
    \ Labels can be added at ingress and\n        removed at egress.\n   T#21 Determine\
    \ which fields are used to create an Entropy Label.\n        Labels further down\
    \ in the stack, including Entropy Labels\n        further down and IP headers\
    \ or IP payload fields where\n        applicable, should be used.  Determine whether\
    \ the set of fields\n        and algorithm provide sufficient entropy for load\
    \ balancing.\n   T#22 Repeat performance tests under \"Basic Performance\" when\
    \ Entropy\n        Labels are used, where ingress or egress is the device under\n\
    \        test (DUT).\n   T#23 Determine whether an ELI is detected when acting\
    \ as a midpoint\n        LSR and whether the search for further information on\
    \ which to\n        base the load balancing is used.  Information below the Entropy\n\
    \        Label SHOULD NOT be used.\n   T#24 Ensure that the Entropy Label indicator\
    \ and Entropy Label (ELI\n        and EL) are removed from the label stack during\
    \ UHP and PHP\n        operations.\n   T#25 Ensure that operations on the TC field\
    \ when adding and removing\n        Entropy Label are correctly carried out. \
    \ If TC is changed\n        during a swap operation, the ability to transfer that\
    \ change\n        MUST be provided.  The ability to suppress the transfer of TC\n\
    \        MUST also be provided.  See the pipe, short-pipe, and uniform\n     \
    \   models in [RFC3443].\n   T#26 Repeat performance tests for a midpoint LSR\
    \ with Entropy Labels\n        found at various label stack depths.\n"
- title: 4.6.  DoS Protection
  contents:
  - "4.6.  DoS Protection\n   T#27 Actively attack LSRs under high protocol churn\
    \ load and\n        determine control-plane performance impact or successful DoS\n\
    \        under test conditions.  Specifically, test for the following.\n     \
    \   A.  TCP SYN attack against control-plane and management-plane\n          \
    \  protocols using TCP, including CLI access (typically SSH-\n            protected\
    \ login), NETCONF, etc.\n        B.  High traffic volume attack against control-plane\
    \ and\n            management-plane protocols not using TCP.\n        C.  Attacks\
    \ that can be performed from a compromised management\n            subnet computer,\
    \ but not one with authentication keys.\n        D.  Attacks that can be performed\
    \ from a compromised peer within\n            the control plane (internal domain\
    \ and external domain).\n            Assume that keys that are per peering and\
    \ keys that are per\n            router ID, rather than network-wide keys, are\
    \ in use.\n        See Section 2.6.1.\n"
- title: 4.7.  OAM Capabilities and Performance
  contents:
  - "4.7.  OAM Capabilities and Performance\n   T#28 Determine maximum sustainable\
    \ rates of BFD traffic.  If BFD\n        requires CPU intervention, determine\
    \ both maximum rates and CPU\n        loading when multiple interfaces are active.\n\
    \   T#29 Verify LSP Ping and LSP Traceroute capability.\n   T#30 Determine maximum\
    \ rates of MPLS-TP CC-CV traffic.  If CC-CV\n        requires CPU intervention,\
    \ determine both maximum rates and CPU\n        loading when multiple interfaces\
    \ are active.\n   T#31 Determine MPLS-TP DM precision.\n   T#32 Determine MPLS-TP\
    \ LM accuracy.\n   T#33 Verify MPLS-TP AIS/RDI and Protection State Coordination\
    \ (PSC)\n        functionality, protection speed, and AIS/RDI notification speed\n\
    \        when a large number of Maintenance Entities (MEs) must be\n        notified\
    \ with AIS/RDI.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This document reviews forwarding behavior specified\
    \ elsewhere and\n   points out compliance and performance requirements.  As such,\
    \ it\n   introduces no new security requirements or concerns.\n   Discussion of\
    \ hardware support and other equipment hardening against\n   DoS attack can be\
    \ found in Section 2.6.1.  Section 3.6 provides a\n   list of questions regarding\
    \ DoS to be asked of suppliers.\n   Section 4.6 suggests types of testing that\
    \ can provide some assurance\n   of the effectiveness of a supplier's claims about\
    \ DoS hardening.\n   Knowledge of potential performance shortcomings may serve\
    \ to help new\n   implementations avoid pitfalls.  It is unlikely that such knowledge\n\
    \   could be the basis of new denial of service, as these pitfalls are\n   already\
    \ widely known in the service provider community and among\n   leading equipment\
    \ suppliers.  In practice, extreme data and packet\n   rates are needed to affect\
    \ existing equipment and to affect networks\n   that may be still vulnerable due\
    \ to failure to implement adequate\n   protection.  The extreme data and packet\
    \ rates make this type of\n   denial of service unlikely and make undetectable\
    \ denial of service of\n   this type impossible.\n   Each normative reference\
    \ contains security considerations.  A brief\n   summarization of MPLS security\
    \ considerations applicable to\n   forwarding follows:\n   1.   MPLS encapsulation\
    \ does not support an authentication extension.\n        This is reflected in\
    \ the security section of [RFC3032].\n        Documents that clarify MPLS header\
    \ fields such as TTL [RFC3443],\n        the explicit null label [RFC4182], renaming\
    \ EXP to TC [RFC5462],\n        ECN for MPLS [RFC5129], and MPLS Ethernet encapsulation\n\
    \        [RFC5332] make no changes to security considerations in\n        [RFC3032].\n\
    \   2.   Some cited RFCs are related to Diffserv forwarding.  [RFC3270]\n    \
    \    refers to MPLS and Diffserv security.  [RFC2474] mentions theft\n       \
    \ of service and denial of service due to mismarking.  [RFC2474]\n        mentions\
    \ IPsec interaction, but with MPLS, not being carried by\n        IP, the type\
    \ of interaction in [RFC2474] is not relevant.\n   3.   [RFC3209] is cited here\
    \ due only to make-before-break forwarding\n        requirements.  This is related\
    \ to resource sharing and the\n        theft-of-service and denial-of-service\
    \ concerns in [RFC2474]\n        apply.\n   4.   [RFC4090] defines FRR, which\
    \ provides protection but does not\n        add security concerns.  RFC 4201 defines\
    \ link bundling but\n        raises no additional security concerns.\n   5.  \
    \ Various OAM control channels are defined in [RFC4385] (PW CW),\n        [RFC5085]\
    \ (VCCV), and [RFC5586] (G-Ach and GAL).  These\n        documents describe potential\
    \ abuse of these OAM control\n        channels.\n   6.   [RFC4950] defines ICMP\
    \ extensions when MPLS TTL expires and the\n        payload is IP.  This provides\
    \ MPLS header information that is of\n        no use to an IP attacker, but sending\
    \ this information can be\n        suppressed through configuration.\n   7.  \
    \ GTSM [RFC5082] provides a means to improve protection against\n        high\
    \ traffic volume spoofing as a form of DoS attack.\n   8.   BFD [RFC5880] [RFC5884]\
    \ [RFC5885] provides a form of OAM used in\n        MPLS and MPLS-TP.  The security\
    \ considerations related to the\n        OAM control channel are relevant.  The\
    \ BFD payload supports\n        authentication.  The MPLS encapsulation, the MPLS\
    \ control\n        channel, or the PW control channel, which BFD may be carried\
    \ in,\n        do not support authentication.  Where an IP return OAM path is\n\
    \        used, IPsec is suggested as a means of securing the return path.\n  \
    \ 9.   Other forms of OAM are supported by [RFC6374] [RFC6375] (Loss\n       \
    \ and Delay Measurement), [RFC6428] (Continuity Check/Verification\n        based\
    \ on BFD), and [RFC6427] (Fault Management).  The security\n        considerations\
    \ related to the OAM control channel are relevant.\n        IP return paths, where\
    \ used, can be secured with IPsec.\n   10.  Linear protection is defined by [RFC6378]\
    \ and updated by\n        [RFC7324].  Security concerns related to MPLS encapsulation\
    \ and\n        OAM control channels apply.  Security concerns reiterate\n    \
    \    [RFC5920] as applied to protection switching.\n   11.  The PW Flow Label\
    \ [RFC6391] and MPLS Entropy Label [RFC6790]\n        affect multipath load balancing.\
    \  Security concerns reiterate\n        [RFC5920].  Security impacts would be\
    \ limited to load\n        distribution.\n   MPLS security including data-plane\
    \ security is discussed in greater\n   detail in [RFC5920] (MPLS/GMPLS Security\
    \ Framework).  The MPLS-TP\n   security framework [RFC6941] builds upon this,\
    \ focusing largely on\n   the MPLS-TP OAM additions and OAM channels with some\
    \ attention given\n   to using network management in place of control-plane setup.\
    \  In both\n   security framework documents, MPLS is assumed to run within a\n\
    \   \"trusted zone\", defined as being where a single service provider has\n \
    \  total operational control over that part of the network.\n   If control-plane\
    \ security and management-plane security are\n   sufficiently robust, compromise\
    \ of a single network element may\n   result in chaos in the data plane anywhere\
    \ in the network through\n   denial-of-service attacks, but not a Byzantine security\
    \ failure in\n   which other network elements are fully compromised.\n   MPLS\
    \ security, or lack thereof, can affect whether traffic can be\n   misrouted and\
    \ lost, or intercepted, or intercepted and reinserted (a\n   man-in-the-middle\
    \ attack), or spoofed.  End-user applications,\n   including control-plane and\
    \ management-plane protocols used by the\n   service provider, are expected to\
    \ make use of appropriate end-to-end\n   authentication and, where appropriate,\
    \ end-to-end encryption.\n"
- title: 6.  Organization of References Section
  contents:
  - "6.  Organization of References Section\n   The References section is split into\
    \ Normative and Informative\n   subsections.  References that directly specify\
    \ forwarding\n   encapsulations or behaviors are listed as normative.  References\
    \ that\n   describe signaling only, though normative with respect to signaling,\n\
    \   are listed as informative.  They are informative with respect to MPLS\n  \
    \ forwarding.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC3032]  Rosen, E., Tappan, D., Fedorkow, G., Rekhter, Y.,\n   \
    \           Farinacci, D., Li, T., and A. Conta, \"MPLS Label Stack\n        \
    \      Encoding\", RFC 3032, January 2001.\n   [RFC3209]  Awduche, D., Berger,\
    \ L., Gan, D., Li, T., Srinivasan, V.,\n              and G. Swallow, \"RSVP-TE:\
    \ Extensions to RSVP for LSP\n              Tunnels\", RFC 3209, December 2001.\n\
    \   [RFC3270]  Le Faucheur, F., Wu, L., Davie, B., Davari, S., Vaananen,\n   \
    \           P., Krishnan, R., Cheval, P., and J. Heinanen, \"Multi-\n        \
    \      Protocol Label Switching (MPLS) Support of Differentiated\n           \
    \   Services\", RFC 3270, May 2002.\n   [RFC3443]  Agarwal, P. and B. Akyol, \"\
    Time To Live (TTL) Processing\n              in Multi-Protocol Label Switching\
    \ (MPLS) Networks\", RFC\n              3443, January 2003.\n   [RFC4090]  Pan,\
    \ P., Swallow, G., and A. Atlas, \"Fast Reroute\n              Extensions to RSVP-TE\
    \ for LSP Tunnels\", RFC 4090, May\n              2005.\n   [RFC4182]  Rosen,\
    \ E., \"Removing a Restriction on the use of MPLS\n              Explicit NULL\"\
    , RFC 4182, September 2005.\n   [RFC4201]  Kompella, K., Rekhter, Y., and L. Berger,\
    \ \"Link Bundling\n              in MPLS Traffic Engineering (TE)\", RFC 4201,\
    \ October 2005.\n   [RFC4385]  Bryant, S., Swallow, G., Martini, L., and D. McPherson,\n\
    \              \"Pseudowire Emulation Edge-to-Edge (PWE3) Control Word for\n \
    \             Use over an MPLS PSN\", RFC 4385, February 2006.\n   [RFC4950] \
    \ Bonica, R., Gan, D., Tappan, D., and C. Pignataro, \"ICMP\n              Extensions\
    \ for Multiprotocol Label Switching\", RFC 4950,\n              August 2007.\n\
    \   [RFC5082]  Gill, V., Heasley, J., Meyer, D., Savola, P., and C.\n        \
    \      Pignataro, \"The Generalized TTL Security Mechanism\n              (GTSM)\"\
    , RFC 5082, October 2007.\n   [RFC5085]  Nadeau, T. and C. Pignataro, \"Pseudowire\
    \ Virtual Circuit\n              Connectivity Verification (VCCV): A Control Channel\
    \ for\n              Pseudowires\", RFC 5085, December 2007.\n   [RFC5129]  Davie,\
    \ B., Briscoe, B., and J. Tay, \"Explicit Congestion\n              Marking in\
    \ MPLS\", RFC 5129, January 2008.\n   [RFC5332]  Eckert, T., Rosen, E., Aggarwal,\
    \ R., and Y. Rekhter, \"MPLS\n              Multicast Encapsulations\", RFC 5332,\
    \ August 2008.\n   [RFC5586]  Bocci, M., Vigoureux, M., and S. Bryant, \"MPLS\
    \ Generic\n              Associated Channel\", RFC 5586, June 2009.\n   [RFC5880]\
    \  Katz, D. and D. Ward, \"Bidirectional Forwarding Detection\n              (BFD)\"\
    , RFC 5880, June 2010.\n   [RFC5884]  Aggarwal, R., Kompella, K., Nadeau, T.,\
    \ and G. Swallow,\n              \"Bidirectional Forwarding Detection (BFD) for\
    \ MPLS Label\n              Switched Paths (LSPs)\", RFC 5884, June 2010.\n  \
    \ [RFC5885]  Nadeau, T. and C. Pignataro, \"Bidirectional Forwarding\n       \
    \       Detection (BFD) for the Pseudowire Virtual Circuit\n              Connectivity\
    \ Verification (VCCV)\", RFC 5885, June 2010.\n   [RFC6374]  Frost, D. and S.\
    \ Bryant, \"Packet Loss and Delay\n              Measurement for MPLS Networks\"\
    , RFC 6374, September 2011.\n   [RFC6375]  Frost, D. and S. Bryant, \"A Packet\
    \ Loss and Delay\n              Measurement Profile for MPLS-Based Transport Networks\"\
    ,\n              RFC 6375, September 2011.\n   [RFC6378]  Weingarten, Y., Bryant,\
    \ S., Osborne, E., Sprecher, N., and\n              A. Fulignoli, \"MPLS Transport\
    \ Profile (MPLS-TP) Linear\n              Protection\", RFC 6378, October 2011.\n\
    \   [RFC6391]  Bryant, S., Filsfils, C., Drafz, U., Kompella, V., Regan,\n   \
    \           J., and S. Amante, \"Flow-Aware Transport of Pseudowires\n       \
    \       over an MPLS Packet Switched Network\", RFC 6391, November\n         \
    \     2011.\n   [RFC6427]  Swallow, G., Fulignoli, A., Vigoureux, M., Boutros,\
    \ S.,\n              and D. Ward, \"MPLS Fault Management Operations,\n      \
    \        Administration, and Maintenance (OAM)\", RFC 6427, November\n       \
    \       2011.\n   [RFC6428]  Allan, D., Swallow Ed. , G., and J. Drake Ed. , \"\
    Proactive\n              Connectivity Verification, Continuity Check, and Remote\n\
    \              Defect Indication for the MPLS Transport Profile\", RFC\n     \
    \         6428, November 2011.\n   [RFC6790]  Kompella, K., Drake, J., Amante,\
    \ S., Henderickx, W., and\n              L. Yong, \"The Use of Entropy Labels\
    \ in MPLS Forwarding\",\n              RFC 6790, November 2012.\n   [RFC7324]\
    \  Osborne, E., \"Updates to MPLS Transport Profile Linear\n              Protection\"\
    , RFC 7324, July 2014.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [ACK-compression]\n              Zhang, L.,\
    \ Shenker, S., and D. Clark, \"Observations and\n              Dynamics of a Congestion\
    \ Control Algorithm: The Effects of\n              Two-Way Traffic\", Proc. ACM\
    \ SIGCOMM, ACM Computer\n              Communications Review (CCR) Vol. 21, No.\
    \ 4, pp. 133-147.,\n              1991.\n   [MPLS-IN-UDP]\n              Xu, X.,\
    \ Sheth, N., Yong, L., Pignataro, C., and F.\n              Yongbing, \"Encapsulating\
    \ MPLS in UDP\", Work in Progress,\n              January 2014.\n   [MRT]    \
    \  Atlas, A., Kebler, R., Bowers, C., Envedi, G., Csaszar,\n              A.,\
    \ Tantsura, J., Konstantynowicz, M., and R. White, \"An\n              Architecture\
    \ for IP/LDP Fast-Reroute Using Maximally\n              Redundant Trees\", Work\
    \ in Progress, July 2014.\n   [REMOTE-LFA]\n              Bryant, S., Filsfils,\
    \ C., Previdi, S., Shand, M., and S.\n              Ning, \"Remote LFA FRR\",\
    \ Work in Progress, May 2014.\n   [RFC0791]  Postel, J., \"Internet Protocol\"\
    , STD 5, RFC 791, September\n              1981.\n   [RFC2474]  Nichols, K., Blake,\
    \ S., Baker, F., and D. Black,\n              \"Definition of the Differentiated\
    \ Services Field (DS\n              Field) in the IPv4 and IPv6 Headers\", RFC\
    \ 2474, December\n              1998.\n   [RFC2475]  Blake, S., Black, D., Carlson,\
    \ M., Davies, E., Wang, Z.,\n              and W. Weiss, \"An Architecture for\
    \ Differentiated\n              Services\", RFC 2475, December 1998.\n   [RFC2597]\
    \  Heinanen, J., Baker, F., Weiss, W., and J. Wroclawski,\n              \"Assured\
    \ Forwarding PHB Group\", RFC 2597, June 1999.\n   [RFC3031]  Rosen, E., Viswanathan,\
    \ A., and R. Callon, \"Multiprotocol\n              Label Switching Architecture\"\
    , RFC 3031, January 2001.\n   [RFC3168]  Ramakrishnan, K., Floyd, S., and D. Black,\
    \ \"The Addition\n              of Explicit Congestion Notification (ECN) to IP\"\
    , RFC\n              3168, September 2001.\n   [RFC3429]  Ohta, H., \"Assignment\
    \ of the 'OAM Alert Label' for\n              Multiprotocol Label Switching Architecture\
    \ (MPLS)\n              Operation and Maintenance (OAM) Functions\", RFC 3429,\n\
    \              November 2002.\n   [RFC3471]  Berger, L., \"Generalized Multi-Protocol\
    \ Label Switching\n              (GMPLS) Signaling Functional Description\", RFC\
    \ 3471,\n              January 2003.\n   [RFC3550]  Schulzrinne, H., Casner, S.,\
    \ Frederick, R., and V.\n              Jacobson, \"RTP: A Transport Protocol for\
    \ Real-Time\n              Applications\", STD 64, RFC 3550, July 2003.\n   [RFC3828]\
    \  Larzon, L-A., Degermark, M., Pink, S., Jonsson, L-E., and\n              G.\
    \ Fairhurst, \"The Lightweight User Datagram Protocol\n              (UDP-Lite)\"\
    , RFC 3828, July 2004.\n   [RFC3985]  Bryant, S. and P. Pate, \"Pseudo Wire Emulation\
    \ Edge-to-\n              Edge (PWE3) Architecture\", RFC 3985, March 2005.\n\
    \   [RFC4023]  Worster, T., Rekhter, Y., and E. Rosen, \"Encapsulating\n     \
    \         MPLS in IP or Generic Routing Encapsulation (GRE)\", RFC\n         \
    \     4023, March 2005.\n   [RFC4110]  Callon, R. and M. Suzuki, \"A Framework\
    \ for Layer 3\n              Provider-Provisioned Virtual Private Networks (PPVPNs)\"\
    ,\n              RFC 4110, July 2005.\n   [RFC4124]  Le Faucheur, F., \"Protocol\
    \ Extensions for Support of\n              Diffserv-aware MPLS Traffic Engineering\"\
    , RFC 4124, June\n              2005.\n   [RFC4206]  Kompella, K. and Y. Rekhter,\
    \ \"Label Switched Paths (LSP)\n              Hierarchy with Generalized Multi-Protocol\
    \ Label Switching\n              (GMPLS) Traffic Engineering (TE)\", RFC 4206,\
    \ October 2005.\n   [RFC4221]  Nadeau, T., Srinivasan, C., and A. Farrel, \"Multiprotocol\n\
    \              Label Switching (MPLS) Management Overview\", RFC 4221,\n     \
    \         November 2005.\n   [RFC4340]  Kohler, E., Handley, M., and S. Floyd,\
    \ \"Datagram\n              Congestion Control Protocol (DCCP)\", RFC 4340, March\
    \ 2006.\n   [RFC4364]  Rosen, E. and Y. Rekhter, \"BGP/MPLS IP Virtual Private\n\
    \              Networks (VPNs)\", RFC 4364, February 2006.\n   [RFC4377]  Nadeau,\
    \ T., Morrow, M., Swallow, G., Allan, D., and S.\n              Matsushima, \"\
    Operations and Management (OAM) Requirements\n              for Multi-Protocol\
    \ Label Switched (MPLS) Networks\", RFC\n              4377, February 2006.\n\
    \   [RFC4379]  Kompella, K. and G. Swallow, \"Detecting Multi-Protocol\n     \
    \         Label Switched (MPLS) Data Plane Failures\", RFC 4379,\n           \
    \   February 2006.\n   [RFC4664]  Andersson, L. and E. Rosen, \"Framework for\
    \ Layer 2 Virtual\n              Private Networks (L2VPNs)\", RFC 4664, September\
    \ 2006.\n   [RFC4817]  Townsley, M., Pignataro, C., Wainner, S., Seely, T., and\n\
    \              J. Young, \"Encapsulation of MPLS over Layer 2 Tunneling\n    \
    \          Protocol Version 3\", RFC 4817, March 2007.\n   [RFC4875]  Aggarwal,\
    \ R., Papadimitriou, D., and S. Yasukawa,\n              \"Extensions to Resource\
    \ Reservation Protocol - Traffic\n              Engineering (RSVP-TE) for Point-to-Multipoint\
    \ TE Label\n              Switched Paths (LSPs)\", RFC 4875, May 2007.\n   [RFC4928]\
    \  Swallow, G., Bryant, S., and L. Andersson, \"Avoiding Equal\n             \
    \ Cost Multipath Treatment in MPLS Networks\", BCP 128, RFC\n              4928,\
    \ June 2007.\n   [RFC4960]  Stewart, R., \"Stream Control Transmission Protocol\"\
    , RFC\n              4960, September 2007.\n   [RFC5036]  Andersson, L., Minei,\
    \ I., and B. Thomas, \"LDP\n              Specification\", RFC 5036, October 2007.\n\
    \   [RFC5286]  Atlas, A. and A. Zinin, \"Basic Specification for IP Fast\n   \
    \           Reroute: Loop-Free Alternates\", RFC 5286, September 2008.\n   [RFC5317]\
    \  Bryant, S. and L. Andersson, \"Joint Working Team (JWT)\n              Report\
    \ on MPLS Architectural Considerations for a\n              Transport Profile\"\
    , RFC 5317, February 2009.\n   [RFC5462]  Andersson, L. and R. Asati, \"Multiprotocol\
    \ Label Switching\n              (MPLS) Label Stack Entry: \"EXP\" Field Renamed\
    \ to \"Traffic\n              Class\" Field\", RFC 5462, February 2009.\n   [RFC5470]\
    \  Sadasivan, G., Brownlee, N., Claise, B., and J. Quittek,\n              \"\
    Architecture for IP Flow Information Export\", RFC 5470,\n              March\
    \ 2009.\n   [RFC5640]  Filsfils, C., Mohapatra, P., and C. Pignataro, \"Load-\n\
    \              Balancing for Mesh Softwires\", RFC 5640, August 2009.\n   [RFC5695]\
    \  Akhter, A., Asati, R., and C. Pignataro, \"MPLS Forwarding\n              Benchmarking\
    \ Methodology for IP Flows\", RFC 5695, November\n              2009.\n   [RFC5704]\
    \  Bryant, S., Morrow, M., and IAB, \"Uncoordinated Protocol\n              Development\
    \ Considered Harmful\", RFC 5704, November 2009.\n   [RFC5714]  Shand, M. and\
    \ S. Bryant, \"IP Fast Reroute Framework\", RFC\n              5714, January 2010.\n\
    \   [RFC5715]  Shand, M. and S. Bryant, \"A Framework for Loop-Free\n        \
    \      Convergence\", RFC 5715, January 2010.\n   [RFC5860]  Vigoureux, M., Ward,\
    \ D., and M. Betts, \"Requirements for\n              Operations, Administration,\
    \ and Maintenance (OAM) in MPLS\n              Transport Networks\", RFC 5860,\
    \ May 2010.\n   [RFC5905]  Mills, D., Martin, J., Burbank, J., and W. Kasch, \"\
    Network\n              Time Protocol Version 4: Protocol and Algorithms\n    \
    \          Specification\", RFC 5905, June 2010.\n   [RFC5920]  Fang, L., \"Security\
    \ Framework for MPLS and GMPLS\n              Networks\", RFC 5920, July 2010.\n\
    \   [RFC6291]  Andersson, L., van Helvoort, H., Bonica, R., Romascanu,\n     \
    \         D., and S. Mansfield, \"Guidelines for the Use of the \"OAM\"\n    \
    \          Acronym in the IETF\", BCP 161, RFC 6291, June 2011.\n   [RFC6310]\
    \  Aissaoui, M., Busschbach, P., Martini, L., Morrow, M.,\n              Nadeau,\
    \ T., and Y(J). Stein, \"Pseudowire (PW) Operations,\n              Administration,\
    \ and Maintenance (OAM) Message Mapping\",\n              RFC 6310, July 2011.\n\
    \   [RFC6371]  Busi, I. and D. Allan, \"Operations, Administration, and\n    \
    \          Maintenance Framework for MPLS-Based Transport Networks\",\n      \
    \        RFC 6371, September 2011.\n   [RFC6388]  Wijnands, IJ., Minei, I., Kompella,\
    \ K., and B. Thomas,\n              \"Label Distribution Protocol Extensions for\
    \ Point-to-\n              Multipoint and Multipoint-to-Multipoint Label Switched\n\
    \              Paths\", RFC 6388, November 2011.\n   [RFC6424]  Bahadur, N., Kompella,\
    \ K., and G. Swallow, \"Mechanism for\n              Performing Label Switched\
    \ Path Ping (LSP Ping) over MPLS\n              Tunnels\", RFC 6424, November\
    \ 2011.\n   [RFC6425]  Saxena, S., Swallow, G., Ali, Z., Farrel, A., Yasukawa,\n\
    \              S., and T. Nadeau, \"Detecting Data-Plane Failures in\n       \
    \       Point-to-Multipoint MPLS - Extensions to LSP Ping\", RFC\n           \
    \   6425, November 2011.\n   [RFC6426]  Gray, E., Bahadur, N., Boutros, S., and\
    \ R. Aggarwal, \"MPLS\n              On-Demand Connectivity Verification and Route\
    \ Tracing\",\n              RFC 6426, November 2011.\n   [RFC6435]  Boutros, S.,\
    \ Sivabalan, S., Aggarwal, R., Vigoureux, M.,\n              and X. Dai, \"MPLS\
    \ Transport Profile Lock Instruct and\n              Loopback Functions\", RFC\
    \ 6435, November 2011.\n   [RFC6438]  Carpenter, B. and S. Amante, \"Using the\
    \ IPv6 Flow Label\n              for Equal Cost Multipath Routing and Link Aggregation\
    \ in\n              Tunnels\", RFC 6438, November 2011.\n   [RFC6478]  Martini,\
    \ L., Swallow, G., Heron, G., and M. Bocci,\n              \"Pseudowire Status\
    \ for Static Pseudowires\", RFC 6478, May\n              2012.\n   [RFC6639] \
    \ King, D. and M. Venkatesan, \"Multiprotocol Label Switching\n              Transport\
    \ Profile (MPLS-TP) MIB-Based Management\n              Overview\", RFC 6639,\
    \ June 2012.\n   [RFC6669]  Sprecher, N. and L. Fang, \"An Overview of the Operations,\n\
    \              Administration, and Maintenance (OAM) Toolset for MPLS-\n     \
    \         Based Transport Networks\", RFC 6669, July 2012.\n   [RFC6670]  Sprecher,\
    \ N. and KY. Hong, \"The Reasons for Selecting a\n              Single Solution\
    \ for MPLS Transport Profile (MPLS-TP)\n              Operations, Administration,\
    \ and Maintenance (OAM)\", RFC\n              6670, July 2012.\n   [RFC6720] \
    \ Pignataro, C. and R. Asati, \"The Generalized TTL Security\n              Mechanism\
    \ (GTSM) for the Label Distribution Protocol\n              (LDP)\", RFC 6720,\
    \ August 2012.\n   [RFC6829]  Chen, M., Pan, P., Pignataro, C., and R. Asati,\
    \ \"Label\n              Switched Path (LSP) Ping for Pseudowire Forwarding\n\
    \              Equivalence Classes (FECs) Advertised over IPv6\", RFC\n      \
    \        6829, January 2013.\n   [RFC6894]  Papneja, R., Vapiwala, S., Karthik,\
    \ J., Poretsky, S., Rao,\n              S., and JL. Le Roux, \"Methodology for\
    \ Benchmarking MPLS\n              Traffic Engineered (MPLS-TE) Fast Reroute Protection\"\
    , RFC\n              6894, March 2013.\n   [RFC6941]  Fang, L., Niven-Jenkins,\
    \ B., Mansfield, S., and R.\n              Graveman, \"MPLS Transport Profile\
    \ (MPLS-TP) Security\n              Framework\", RFC 6941, April 2013.\n   [RFC6981]\
    \  Bryant, S., Previdi, S., and M. Shand, \"A Framework for IP\n             \
    \ and MPLS Fast Reroute Using Not-Via Addresses\", RFC 6981,\n              August\
    \ 2013.\n   [RFC7012]  Claise, B. and B. Trammell, \"Information Model for IP\
    \ Flow\n              Information Export (IPFIX)\", RFC 7012, September 2013.\n\
    \   [RFC7023]  Mohan, D., Bitar, N., Sajassi, A., DeLord, S., Niger, P.,\n   \
    \           and R. Qiu, \"MPLS and Ethernet Operations, Administration,\n    \
    \          and Maintenance (OAM) Interworking\", RFC 7023, October\n         \
    \     2013.\n   [RFC7074]  Berger, L. and J. Meuric, \"Revised Definition of the\
    \ GMPLS\n              Switching Capability and Type Fields\", RFC 7074, November\n\
    \              2013.\n   [RFC7079]  Del Regno, N. and A. Malis, \"The Pseudowire\
    \ (PW) and\n              Virtual Circuit Connectivity Verification (VCCV)\n \
    \             Implementation Survey Results\", RFC 7079, November 2013.\n   [RFC7274]\
    \  Kompella, K., Andersson, L., and A. Farrel, \"Allocating\n              and\
    \ Retiring Special-Purpose MPLS Labels\", RFC 7274, June\n              2014.\n\
    \   [TIMING-OVER-MPLS]\n              Davari, S., Oren, A., Bhatia, M., Roberts,\
    \ P., and L.\n              Montini, \"Transporting Timing messages over MPLS\n\
    \              Networks\", Work in Progress, April 2014.\n"
- title: Appendix A.  Acknowledgements
  contents:
  - "Appendix A.  Acknowledgements\n   Numerous very useful comments have been received\
    \ in private email.\n   Some of these contributions are acknowledged here, approximately\
    \ in\n   chronologic order.\n   Paul Doolan provided a brief review resulting\
    \ in a number of\n   clarifications, most notably regarding on-chip vs. system\
    \ buffering,\n   100 Gb/s link speed assumptions in the 150 Mpps figure, and handling\n\
    \   of large microflows.  Pablo Frank reminded us of the sawtooth effect\n   in\
    \ PPS vs. packet-size graphs, prompting the addition of a few\n   paragraphs on\
    \ this.  Comments from Lou Berger at IETF 85 prompted the\n   addition of Section\
    \ 2.7.\n   Valuable comments were received on the BMWG mailing list.  Jay\n  \
    \ Karthik pointed out testing methodology hints that after discussion\n   were\
    \ deemed out of scope and were removed but may benefit later work\n   in BMWG.\n\
    \   Nabil Bitar pointed out the need to cover QoS (Differentiated\n   Services),\
    \ MPLS multicast (P2MP and MP2MP), and MPLS-TP OAM.  Nabil\n   also provided a\
    \ number of clarifications to the questions and tests\n   in Sections 3 and 4.\n\
    \   Mark Szczesniak provided a thorough review and a number of useful\n   comments\
    \ and suggestions that improved the document.\n   Gregory Mirsky and Thomas Beckhaus\
    \ provided useful comments during\n   the review by the MPLS Review Team.\n  \
    \ Tal Mizrahi provided comments that prompted clarifications regarding\n   timestamp\
    \ processing, local delivery of packets, and the need for\n   hardware assistance\
    \ in processing OAM traffic.\n   Alexander (Sasha) Vainshtein pointed out errors\
    \ in Section 2.1.8.1\n   and suggested new text that, after lengthy discussion,\
    \ resulted in\n   restating the summarization of requirements from PWE3 RFCs and\
    \ more\n   clearly stating the benefits and drawbacks of packet resequencing\n\
    \   based on PW Sequence Number.\n   Loa Anderson provided useful comments and\
    \ corrections prior to WGLC.\n   Adrian Farrel provided useful comments and corrections\
    \ prior as part\n   of the AD review.\n   Discussion with Steve Kent during SecDir\
    \ review resulted in expansion\n   of Section 5, briefly summarizing security\
    \ considerations related to\n   forwarding in normative references.  Tom Petch\
    \ pointed out some\n   editorial errors in private email plus an important math\
    \ error.  Al\n   Morton during OpsDir review prompted clarification in the section\n\
    \   about the target audience, suggested more clear wording in places,\n   and\
    \ found numerous editorial errors.\n   Discussion with Stewart Bryant and Alia\
    \ Atlas as part of IESG review\n   resulted in coverage of IPFIX and improvements\
    \ to document coverage\n   of MPLS FRR, and IP/LDP FRR, plus some corrections\
    \ to the text\n   elsewhere.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Curtis Villamizar (editor)\n   Outer Cape Cod Network\
    \ Consulting, LLC\n   EMail: curtis@occnc.com\n   Kireeti Kompella\n   Juniper\
    \ Networks\n   EMail: kireeti@juniper.net\n   Shane Amante\n   Apple Inc.\n  \
    \ 1 Infinite Loop\n   Cupertino, California  95014\n   EMail: amante@apple.com\n\
    \   Andrew Malis\n   Huawei Technologies\n   EMail: agmalis@gmail.com\n   Carlos\
    \ Pignataro\n   Cisco Systems\n   7200-12 Kit Creek Road\n   Research Triangle\
    \ Park, NC  27709\n   US\n   EMail: cpignata@cisco.com\n"
