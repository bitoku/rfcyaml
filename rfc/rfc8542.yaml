- title: __initial_text__
  contents:
  - '     A YANG Data Model for Fabric Topology in Data-Center Networks

    '
- title: Abstract
  contents:
  - "Abstract\n   This document defines a YANG data model for fabric topology in data-\n\
    \   center networks and represents one possible view of the data-center\n   fabric.\
    \  This document focuses on the data model only and does not\n   endorse any kind\
    \ of network design that could be based on the\n   abovementioned model.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8542.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n   2.  Definitions and Acronyms  . . . . . . . . . . . . . .\
    \ . . . .   3\n     2.1.  Key Words . . . . . . . . . . . . . . . . . . . . .\
    \ . . .   3\n     2.2.  Terminology . . . . . . . . . . . . . . . . . . . . .\
    \ . .   3\n   3.  Model Overview  . . . . . . . . . . . . . . . . . . . . . .\
    \ .   4\n     3.1.  Topology Model Structure  . . . . . . . . . . . . . . . .\
    \   4\n     3.2.  Fabric Topology Model . . . . . . . . . . . . . . . . . .  \
    \ 4\n       3.2.1.  Fabric Topology . . . . . . . . . . . . . . . . . . .   5\n\
    \       3.2.2.  Fabric Node Extension . . . . . . . . . . . . . . . .   6\n  \
    \     3.2.3.  Fabric Termination-Point Extension  . . . . . . . . .   7\n   4.\
    \  Fabric YANG Modules . . . . . . . . . . . . . . . . . . . . .   8\n   5.  IANA\
    \ Considerations . . . . . . . . . . . . . . . . . . . . .  21\n   6.  Security\
    \ Considerations . . . . . . . . . . . . . . . . . . .  22\n   7.  References\
    \  . . . . . . . . . . . . . . . . . . . . . . . . .  23\n     7.1.  Normative\
    \ References  . . . . . . . . . . . . . . . . . .  23\n     7.2.  Informative\
    \ References  . . . . . . . . . . . . . . . . .  24\n   Appendix A.  Non-NMDA-State\
    \ Modules . . . . . . . . . . . . . . .  25\n   Acknowledgements  . . . . . .\
    \ . . . . . . . . . . . . . . . . . .  32\n   Authors' Addresses  . . . . . .\
    \ . . . . . . . . . . . . . . . . .  32\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   A data-center (DC) network can be composed of single or\
    \ multiple\n   fabrics, which are also known as Points Of Delivery (PODs).  These\n\
    \   fabrics may be heterogeneous due to implementation of different\n   technologies\
    \ when a DC network is upgraded or new techniques and\n   features are rolled\
    \ out.  For example, within a DC network, Fabric A\n   may use Virtual eXtensible\
    \ Local Area Network (VXLAN) while Fabric B\n   may use VLAN.  Likewise, an existing\
    \ fabric may use VXLAN while a new\n   fabric (for example, a fabric introduced\
    \ for DC upgrade and\n   expansion) may implement a technique discussed in the\
    \ NVO3 Working\n   Group, such as Geneve [GENEVE].  The configuration and management\
    \ of\n   such DC networks with heterogeneous fabrics could result in\n   considerable\
    \ complexity.\n   For a DC network, a fabric can be considered as an atomic structure\n\
    \   for management purposes.  From this point of view, the management of\n   the\
    \ DC network can be decomposed into a set of tasks to manage each\n   fabric separately,\
    \ as well as the fabric interconnections.  The\n   advantage of this method is\
    \ to make the overall management tasks\n   flexible and easy to extend in the\
    \ future.\n   As a basis for DC fabric management, this document defines a YANG\n\
    \   data model [RFC6020] [RFC7950] for a possible view of the fabric-\n   based\
    \ data-center topology.  To do so, it augments the generic\n   network and network\
    \ topology data models defined in [RFC8345] with\n   information that is specific\
    \ to data-center fabric networks.\n   The model defines the generic configuration\
    \ and operational state for\n   a fabric-based network topology, which can subsequently\
    \ be extended\n   by vendors with vendor-specific information as needed.  The\
    \ model can\n   be used by a network controller to represent its view of the fabric\n\
    \   topology that it controls and expose this view to network\n   administrators\
    \ or applications for DC network management.\n   Within the context of topology\
    \ architecture defined in [RFC8345],\n   this model can also be treated as an\
    \ application of the Interface to\n   the Routing System (I2RS) network topology\
    \ model [RFC8345] in the\n   scenario of data-center network management.  It can\
    \ also act as a\n   service topology when mapping network elements at the fabric\
    \ layer to\n   elements of other topologies, such as L3 topologies as defined\
    \ in\n   [RFC8346].\n   By using the fabric topology model defined in this document,\
    \ people\n   can treat a fabric as a holistic entity and focus on its\n   characteristics\
    \ (such as encapsulation type and gateway type) as well\n   as its connections\
    \ to other fabrics, while putting the underlay\n   topology aside.  As such, clients\
    \ can consume the topology\n   information at the fabric level with no need to\
    \ be aware of the\n   entire set of links and nodes in the corresponding underlay\
    \ networks.\n   A fabric topology can be configured by a network administrator\
    \ using\n   the controller by adding physical devices and links into a fabric.\n\
    \   Alternatively, fabric topology can be learned from the underlay\n   network\
    \ infrastructure.\n"
- title: 2.  Definitions and Acronyms
  contents:
  - '2.  Definitions and Acronyms

    '
- title: 2.1.  Key Words
  contents:
  - "2.1.  Key Words\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\"\
    , \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described\
    \ in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all\n\
    \   capitals, as shown here.\n"
- title: 2.2.  Terminology
  contents:
  - "2.2.  Terminology\n   POD: a module of network, compute, storage, and application\n\
    \   components that work together to deliver networking services.  It\n   represents\
    \ a repeatable design pattern.  Its components maximize the\n   modularity, scalability,\
    \ and manageability of data centers.\n   Fabric: composed of several PODs to form\
    \ a data-center network.\n"
- title: 3.  Model Overview
  contents:
  - "3.  Model Overview\n   This section provides an overview of the DC fabric topology\
    \ model and\n   its relationship with other topology models.\n"
- title: 3.1.  Topology Model Structure
  contents:
  - "3.1.  Topology Model Structure\n   The relationship of the DC fabric topology\
    \ model and other topology\n   models is shown in Figure 1.\n             +------------------------+\n\
    \             |      network model     |\n             +------------------------+\n\
    \                          |\n                          |\n             +------------V-----------+\n\
    \             | network topology model |\n             +------------------------+\n\
    \                          |\n        +-----------+-----+------+-------------+\n\
    \        |           |            |             |\n    +---V----+  +---V----+\
    \   +---V----+   +----V---+\n    |   L1   |  |   L2   |   |   L3   |   | Fabric\
    \ |\n    |topology|  |topology|   |topology|   |topology|\n    |  model |  | \
    \ model |   |  model |   |  model |\n    +--------+  +--------+   +--------+ \
    \  +--------+\n                Figure 1: The Network Data Model Structure\n  \
    \ From the perspective of resource management and service provisioning\n   for\
    \ a data-center network, the fabric topology model augments the\n   basic network\
    \ topology model with definitions and features specific\n   to a DC fabric, to\
    \ provide common configuration and operations for\n   heterogeneous fabrics.\n"
- title: 3.2.  Fabric Topology Model
  contents:
  - "3.2.  Fabric Topology Model\n   The fabric topology model module is designed\
    \ to be generic and can be\n   applied to data-center fabrics built with different\
    \ technologies,\n   such as VLAN and VXLAN.  The main purpose of this module is\
    \ to\n   configure and manage fabrics and their connections.  It provides a\n\
    \   fabric-based topology view for data-center applications.\n"
- title: 3.2.1.  Fabric Topology
  contents:
  - "3.2.1.  Fabric Topology\n   In the fabric topology module, a fabric is modeled\
    \ as a node of a\n   network; as such, the fabric-based data-center network consists\
    \ of a\n   set of fabric nodes and their connections.  The following depicts a\n\
    \   snippet of the definitions to show the main structure of the model.\n   The\
    \ notation syntax follows [RFC8340].\n       module: ietf-dc-fabric-topology\n\
    \       augment /nw:networks/nw:network/nw:network-types:\n          +--rw fabric-network!\n\
    \       augment /nw:networks/nw:network/nw:node:\n          +--rw fabric-attributes\n\
    \             +--rw fabric-id?   fabric-id\n             +--rw name?        string\n\
    \             +--rw type?        fabrictype:underlay-network-type\n          \
    \   +--rw description?    string\n             +--rw options\n             +--...\n\
    \       augment /nw:networks/nw:network/nw:node/nt:termination-point:\n      \
    \    +--ro fport-attributes\n             +--ro name?          string\n      \
    \       +--ro role?          fabric-port-role\n             +--ro type?      \
    \    fabric-port-type\n   The fabric topology module augments the generic ietf-network\
    \ and\n   ietf-network-topology modules as follows:\n   o  A new topology type,\
    \ \"ietf-dc-fabric-topology\", is defined and\n      added under the \"network-types\"\
    \ container of the ietf-network\n      module.\n   o  Fabric is defined as a node\
    \ under the network/node container.  A\n      new container, \"fabric-attributes\"\
    , is defined to carry attributes\n      for a fabric such as gateway mode, fabric\
    \ types, involved device\n      nodes, and links.\n   o  Termination points (in\
    \ the network topology module) are augmented\n      with fabric port attributes\
    \ defined in a container.  The\n      \"termination-point\" here is used to represent\
    \ a fabric \"port\" that\n      provides connections to other nodes, such as an\
    \ internal device,\n      another fabric externally, or end hosts.\n   Details\
    \ of the fabric node and the fabric termination point extension\n   will be explained\
    \ in the following sections.\n"
- title: 3.2.2.  Fabric Node Extension
  contents:
  - "3.2.2.  Fabric Node Extension\n   As an atomic network (that is, a set of nodes\
    \ and links that composes\n   a POD and also supports a single overlay/underlay\
    \ instance), a fabric\n   itself is composed of a set of network elements, i.e.,\
    \ devices and\n   related links.  The configuration of a fabric is contained under\
    \ the\n   \"fabric-attributes\" container depicted as follows.  The notation\n\
    \   syntax follows [RFC8340].\n       +--rw fabric-attributes\n          +--rw\
    \ fabric-id?      fabrictypes:fabric-id\n          +--rw name?           string\n\
    \          +--rw type?           fabrictype:underlay-network-type\n          +--rw\
    \ vni-capacity\n          |  +--rw min?   int32\n          |  +--rw max?   int32\n\
    \          +--rw description?    string\n          +--rw options\n          |\
    \  +--rw gateway-mode?           enumeration\n          |  +--rw traffic-behavior?\
    \       enumeration\n          |  +--rw capability-supported* fabrictype:service-capabilities\n\
    \          +--rw device-nodes* [device-ref]\n          |  +--rw device-ref   \
    \ fabrictype:node-ref\n          |  +--rw role*?         fabrictype:device-role\n\
    \          +--rw device-links* [link-ref]\n          |  +--rw link-ref    fabrictype:link-ref\n\
    \          +--rw device-ports* [port-ref]\n             +--rw port-ref     fabrictype:tp-ref\n\
    \             +--rw port-type?   fabrictypes:port-type\n             +--rw bandwidth?\
    \   fabrictypes:bandwidth\n   In the module, additional data objects for fabric\
    \ nodes are\n   introduced by augmenting the \"node\" list of the network module.\
    \  New\n   objects include fabric name, type of the fabric, and descriptions of\n\
    \   the fabric, as well as a set of options defined in an \"options\"\n   container.\
    \  The \"options\" container includes the gateway-mode type\n   (centralized or\
    \ distributed) and traffic behavior (whether an Access\n   Control List (ACL)\
    \ is needed for the traffic).  Also, it includes a\n   list of device nodes and\
    \ related links as \"supporting-node\" to form a\n   fabric network.  These device\
    \ nodes and links are represented as\n   leaf-refs of existing nodes and links\
    \ in the underlay topology.  For\n   the device node, the \"role\" object is defined\
    \ to represent the role\n   of a device within the fabric, such as \"SPINE\" or\
    \ \"LEAF\", which\n   should work together with the gateway-mode.\n"
- title: 3.2.3.  Fabric Termination-Point Extension
  contents:
  - "3.2.3.  Fabric Termination-Point Extension\n   Since a fabric can be considered\
    \ as a node, \"termination-points\" can\n   represent fabric \"ports\" that connect\
    \ to other fabrics and end hosts,\n   as well as devices inside the fabric.\n\
    \   As such, the set of \"termination-points\" of a fabric indicate all of\n \
    \  its connections, including its internal connections, interconnections\n   with\
    \ other fabrics, and connections to end hosts.\n   The structure of fabric ports\
    \ is as follows.  The notation syntax\n   follows [RFC8340].\n       augment /nw:networks/nw:network/nw:node/nt:termination-point:\n\
    \           +--ro fport-attributes\n              +--ro name?          string\n\
    \              +--ro role?          fabric-port-role\n              +--ro type?\
    \          fabric-port-type\n              +--ro device-port?   tp-ref\n     \
    \         +--ro (tunnel-option)?\n   This structure augments the termination points\
    \ (in the network\n   topology module) with fabric port attributes defined in\
    \ a container.\n   New nodes are defined for fabric ports, including fabric name,\
    \ role\n   of the port within the fabric (internal port, external port to\n  \
    \ outside network, access port to end hosts), and port type (L2\n   interface,\
    \ L3 interface).  By defining the device port as a tp-ref, a\n   fabric port can\
    \ be mapped to a device node in the underlay network.\n   Additionally, a new\
    \ container for tunnel-options is introduced to\n   present the tunnel configuration\
    \ on a port.\n   The termination point information is learned from the underlay\n\
    \   networks, not configured by the fabric topology layer.\n"
- title: 4.  Fabric YANG Modules
  contents:
  - "4.  Fabric YANG Modules\n   This module imports typedefs from [RFC8345], and\
    \ it references\n   [RFC7348] and [RFC8344].\n"
- title: <CODE BEGINS> file "ietf-dc-fabric-types@2019-02-25.yang"
  contents:
  - '<CODE BEGINS> file "ietf-dc-fabric-types@2019-02-25.yang"

    '
- title: module ietf-dc-fabric-types {
  contents:
  - "module ietf-dc-fabric-types {\n  yang-version 1.1;\n  namespace \"urn:ietf:params:xml:ns:yang:ietf-dc-fabric-types\"\
    ;\n  prefix fabrictypes;\n  import ietf-network {\n    prefix nw;\n    reference\n\
    \      \"RFC 8345: A YANG Data Model for Network Topologies\";\n  }\n  organization\n\
    \    \"IETF I2RS (Interface to the Routing System) Working Group\";\n  contact\n\
    \    \"WG Web:    <https://datatracker.ietf.org/wg/i2rs/>\n     WG List:   <mailto:i2rs@ietf.org>\n\
    \     Editor:    Yan Zhuang\n                <mailto:zhuangyan.zhuang@huawei.com>\n\
    \     Editor:    Danian Shi\n                <mailto:shidanian@huawei.com>\";\n\
    \  description\n    \"This module contains a collection of YANG definitions for\n\
    \     fabric.\n     Copyright (c) 2019 IETF Trust and the persons identified\n\
    \     as authors of the code.  All rights reserved.\n     Redistribution and use\
    \ in source and binary forms, with\n     or without modification, is permitted\
    \ pursuant to, and\n     subject to the license terms contained in, the Simplified\n\
    \     BSD License set forth in Section 4.c of the IETF Trust's\n     Legal Provisions\
    \ Relating to IETF Documents\n     (https://trustee.ietf.org/license-info).\n\
    \     This version of this YANG module is part of RFC 8542;\n     see the RFC\
    \ itself for full legal notices.\";\n  revision 2019-02-25 {\n    description\n\
    \      \"Initial revision.\";\n    reference\n      \"RFC 8542: A YANG Data Model\
    \ for Fabric Topology\n       in Data-Center Networks\";\n  }\n  identity fabric-type\
    \ {\n    description\n      \"Base type for fabric networks\";\n  }\n  identity\
    \ vxlan-fabric {\n    base fabric-type;\n    description\n      \"VXLAN fabric\"\
    ;\n  }\n  identity vlan-fabric {\n    base fabric-type;\n    description\n   \
    \   \"VLAN fabric\";\n  }\n  identity trill-fabric {\n    base fabric-type;\n\
    \    description\n      \"TRILL fabric\";\n  }\n  identity port-type {\n    description\n\
    \      \"Base type for fabric port\";\n  }\n  identity eth {\n    base port-type;\n\
    \    description\n      \"Ethernet\";\n  }\n  identity serial {\n    base port-type;\n\
    \    description\n      \"Serial\";\n  }\n  identity bandwidth {\n    description\n\
    \      \"Base for bandwidth\";\n  }\n  identity bw-1M {\n    base bandwidth;\n\
    \    description\n      \"1M\";\n  }\n  identity bw-10M {\n    base bandwidth;\n\
    \    description\n      \"10Mbps\";\n  }\n  identity bw-100M {\n    base bandwidth;\n\
    \    description\n      \"100Mbps\";\n  }\n  identity bw-1G {\n    base bandwidth;\n\
    \    description\n      \"1Gbps\";\n  }\n  identity bw-10G {\n    base bandwidth;\n\
    \    description\n      \"10Gbps\";\n  }\n  identity bw-25G {\n    base bandwidth;\n\
    \    description\n      \"25Gbps\";\n  }\n  identity bw-40G {\n    base bandwidth;\n\
    \    description\n      \"40Gbps\";\n  }\n  identity bw-100G {\n    base bandwidth;\n\
    \    description\n      \"100Gbps\";\n  }\n  identity bw-400G {\n    base bandwidth;\n\
    \    description\n      \"400Gbps\";\n  }\n  identity device-role {\n    description\n\
    \      \"Base for the device role in a fabric.\";\n  }\n  identity spine {\n \
    \   base device-role;\n    description\n      \"This is a spine node in a fabric.\"\
    ;\n  }\n  identity leaf {\n    base device-role;\n    description\n      \"This\
    \ is a leaf node in a fabric.\";\n  }\n  identity border {\n    base device-role;\n\
    \    description\n      \"This is a border node to connect to other\n       fabric/network.\"\
    ;\n  }\n  identity fabric-port-role {\n    description\n      \"Base for the port's\
    \ role in a fabric.\";\n  }\n  identity internal {\n    base fabric-port-role;\n\
    \    description\n      \"The port is used for devices to access each\n      \
    \ other within a fabric.\";\n  }\n  identity external {\n    base fabric-port-role;\n\
    \    description\n      \"The port is used for a fabric to connect to\n      \
    \ outside network.\";\n  }\n  identity access {\n    base fabric-port-role;\n\
    \    description\n      \"The port is used for an endpoint to connect\n      \
    \ to a fabric.\";\n  }\n  identity service-capability {\n    description\n   \
    \   \"Base for the service of the fabric \";\n  }\n  identity ip-mapping {\n \
    \   base service-capability;\n    description\n      \"NAT.\";\n  }\n  identity\
    \ acl-redirect {\n    base service-capability;\n    description\n      \"ACL redirect,\
    \ which can provide a Service Function Chain (SFC).\";\n  }\n  identity dynamic-route-exchange\
    \ {\n    base service-capability;\n    description\n      \"Dynamic route exchange.\"\
    ;\n  }\n  /*\n   * Typedefs\n   */\n  typedef fabric-id {\n    type nw:node-id;\n\
    \    description\n      \"An identifier for a fabric in a topology.\n       This\
    \ identifier can be generated when composing a fabric.\n       The composition\
    \ of a fabric can be achieved by defining an\n       RPC, which is left for vendor\
    \ specific implementation\n       and not provided in this model.\";\n  }\n  typedef\
    \ service-capabilities {\n    type identityref {\n      base service-capability;\n\
    \    }\n    description\n      \"Service capability of the fabric\";\n  }\n  typedef\
    \ port-type {\n    type identityref {\n      base port-type;\n    }\n    description\n\
    \      \"Port type: ethernet or serial or others.\";\n  }\n  typedef bandwidth\
    \ {\n    type identityref {\n      base bandwidth;\n    }\n    description\n \
    \     \"Bandwidth of the port.\";\n  }\n  typedef node-ref {\n    type instance-identifier;\n\
    \    description\n      \"A reference to a node in topology\";\n  }\n  typedef\
    \ tp-ref {\n    type instance-identifier;\n    description\n      \"A reference\
    \ to a termination point in topology\";\n  }\n  typedef link-ref {\n    type instance-identifier;\n\
    \    description\n      \"A reference to a link in topology\";\n  }\n  typedef\
    \ underlay-network-type {\n    type identityref {\n      base fabric-type;\n \
    \   }\n    description\n      \"The type of physical network that implements\n\
    \       this fabric.  Examples are VLAN and TRILL.\";\n  }\n  typedef device-role\
    \ {\n    type identityref {\n      base device-role;\n    }\n    description\n\
    \      \"Role of the device node.\";\n  }\n  typedef fabric-port-role {\n    type\
    \ identityref {\n      base fabric-port-role;\n    }\n    description\n      \"\
    Role of the port in a fabric.\";\n  }\n  typedef fabric-port-type {\n    type\
    \ enumeration {\n      enum layer2interface {\n        description\n         \
    \ \"L2 interface\";\n      }\n      enum layer3interface {\n        description\n\
    \          \"L3 interface\";\n      }\n      enum layer2Tunnel {\n        description\n\
    \          \"L2 tunnel\";\n      }\n      enum layer3Tunnel {\n        description\n\
    \          \"L3 tunnel\";\n      }\n    }\n    description\n      \"Fabric port\
    \ type\";\n  }\n  grouping fabric-port {\n    description\n      \"Attributes\
    \ of a fabric port.\";\n    leaf name {\n      type string;\n      description\n\
    \        \"Name of the port.\";\n    }\n    leaf role {\n      type fabric-port-role;\n\
    \      description\n        \"Role of the port in a fabric.\";\n    }\n    leaf\
    \ type {\n      type fabric-port-type;\n      description\n        \"Type of the\
    \ port\";\n    }\n    leaf device-port {\n      type tp-ref;\n      description\n\
    \        \"The device port it mapped to.\";\n    }\n    choice tunnel-option {\n\
    \      description\n        \"Tunnel options to connect two fabrics.\n       \
    \  It could be L2 Tunnel or L3 Tunnel.\";\n    }\n  }\n"
- title: '}'
  contents:
  - '}

    '
- title: <CODE ENDS>
  contents:
  - "<CODE ENDS>\n   <CODE BEGINS> file \"ietf-dc-fabric-topology@2019-02-25.yang\"\
    \n   module ietf-dc-fabric-topology {\n     yang-version 1.1;\n     namespace\
    \ \"urn:ietf:params:xml:ns:yang:ietf-dc-fabric-topology\";\n     prefix fabric;\n\
    \     import ietf-network {\n       prefix nw;\n       reference\n         \"\
    RFC 8345: A YANG Data Model for Network Topologies\";\n     }\n     import ietf-network-topology\
    \ {\n       prefix nt;\n       reference\n         \"RFC 8345: A YANG Data Model\
    \ for Network Topologies\";\n     }\n     import ietf-dc-fabric-types {\n    \
    \   prefix fabrictypes;\n       reference\n         \"RFC 8542: A YANG Data Model\
    \ for Fabric Topology in\n          Data-Center Networks\";\n     }\n     organization\n\
    \       \"IETF I2RS (Interface to the Routing System) Working Group\";\n     contact\n\
    \       \"WG Web:    <https://datatracker.ietf.org/wg/i2rs/>\n        WG List:\
    \   <mailto:i2rs@ietf.org>\n        Editor:    Yan Zhuang\n                  \
    \ <mailto:zhuangyan.zhuang@huawei.com>\n        Editor:    Danian Shi\n      \
    \             <mailto:shidanian@huawei.com>\";\n     description\n       \"This\
    \ module contains a collection of YANG definitions for\n        fabric.\n    \
    \    Copyright (c) 2019 IETF Trust and the persons identified\n        as authors\
    \ of the code.  All rights reserved.\n        Redistribution and use in source\
    \ and binary forms, with\n        or without modification, is permitted pursuant\
    \ to, and\n        subject to the license terms contained in, the Simplified\n\
    \        BSD License set forth in Section 4.c of the IETF Trust's\n        Legal\
    \ Provisions Relating to IETF Documents\n        (https://trustee.ietf.org/license-info).\n\
    \        This version of this YANG module is part of RFC 8542;\n        see the\
    \ RFC itself for full legal notices.\";\n     revision 2019-02-25 {\n       description\n\
    \         \"Initial revision.\";\n       reference\n         \"RFC 8542: A YANG\
    \ Data Model for Fabric Topology\n          in Data-Center Networks\";\n     }\n\
    \     //grouping statements\n     grouping fabric-network-type {\n       description\n\
    \         \"Identify the topology type to be fabric.\";\n       container fabric-network\
    \ {\n         presence \"indicates fabric Network\";\n         description\n \
    \          \"The presence of the container node indicates\n            fabric\
    \ topology\";\n       }\n     }\n     grouping fabric-options {\n       description\n\
    \         \"Options for a fabric\";\n       leaf gateway-mode {\n         type\
    \ enumeration {\n           enum centralized {\n             description\n   \
    \            \"The Fabric uses centralized\n                gateway, in which\
    \ gateway is deployed on SPINE\n                node.\";\n           }\n     \
    \      enum distributed {\n             description\n               \"The Fabric\
    \ uses distributed\n                gateway, in which gateway is deployed on LEAF\n\
    \                node.\";\n           }\n         }\n         default \"distributed\"\
    ;\n         description\n           \"Gateway mode of the fabric\";\n       }\n\
    \       leaf traffic-behavior {\n         type enumeration {\n           enum\
    \ normal {\n             description\n               \"Normal means no policy\
    \ is needed\n                for all traffic\";\n           }\n           enum\
    \ policy-driven {\n             description\n               \"Policy driven means\
    \ policy is\n                needed for the traffic; otherwise, the traffic\n\
    \                will be discarded.\";\n           }\n         }\n         default\
    \ \"normal\";\n         description\n           \"Traffic behavior of the fabric\"\
    ;\n       }\n       leaf-list capability-supported {\n         type fabrictypes:service-capabilities;\n\
    \         description\n           \"It provides a list of supported services of\
    \ the\n            fabric.  The service-capabilities is defined as\n         \
    \   identity-ref.  Users can define more services\n            by defining new\
    \ identities.\";\n       }\n     }\n     grouping device-attributes {\n      \
    \ description\n         \"device attributes\";\n       leaf device-ref {\n   \
    \      type fabrictypes:node-ref;\n         description\n           \"The device\
    \ that the fabric includes that refers\n            to a node in another topology.\"\
    ;\n       }\n       leaf-list role {\n         type fabrictypes:device-role;\n\
    \         default \"fabrictypes:leaf\";\n         description\n           \"It\
    \ is a list of device roles to represent the roles\n            that a device\
    \ plays within a POD, such as SPINE,\n            LEAF, Border, or Border-Leaf.\n\
    \            The device role is defined as identity-ref.  If more\n          \
    \  than 2 stages are used for a POD, users can\n            define new identities\
    \ for the device role.\";\n       }\n     }\n     grouping link-attributes {\n\
    \       description\n         \"Link attributes\";\n       leaf link-ref {\n \
    \        type fabrictypes:link-ref;\n         description\n           \"The link\
    \ that the fabric includes that refers to\n            a link in another topology.\"\
    ;\n       }\n     }\n     grouping port-attributes {\n       description\n   \
    \      \"Port attributes\";\n       leaf port-ref {\n         type fabrictypes:tp-ref;\n\
    \         description\n           \"The port that the fabric includes that refers\
    \ to\n            a termination-point in another topology.\";\n       }\n    \
    \   leaf port-type {\n         type fabrictypes:port-type;\n         description\n\
    \           \"Port type is defined as identity-ref.  The current\n           \
    \ types include ethernet or serial.  If more types\n            are needed, developers\
    \ can define new identities.\";\n       }\n       leaf bandwidth {\n         type\
    \ fabrictypes:bandwidth;\n         description\n           \"Bandwidth of the\
    \ port.  It is defined as identity-ref.\n            If more speeds are introduced,\
    \ developers can define\n            new identities for them.  Current speeds\
    \ include 1M, 10M,\n            100M, 1G, 10G, 25G, 40G, 100G, and 400G.\";\n\
    \       }\n     }\n     grouping fabric-attributes {\n       description\n   \
    \      \"Attributes of a fabric\";\n       leaf fabric-id {\n         type fabrictypes:fabric-id;\n\
    \         description\n           \"An identifier for a fabric in a topology.\n\
    \            This identifier can be generated when composing a fabric.\n     \
    \       The composition of a fabric can be achieved by defining an\n         \
    \   RPC, which is left for vendor-specific implementation and\n            not\
    \ provided in this model.\";\n       }\n       leaf name {\n         type string;\n\
    \         description\n           \"Name of the fabric\";\n       }\n       leaf\
    \ type {\n         type fabrictypes:underlay-network-type;\n         description\n\
    \           \"The type of physical network that implements this\n            fabric.\
    \  Examples are VLAN and TRILL.\";\n       }\n       container vni-capacity {\n\
    \         description\n           \"The range of the VXLAN Network Identifier\n\
    \            (VNI) defined in RFC 7348 that the POD uses.\";\n         leaf min\
    \ {\n           type int32;\n           description\n             \"The lower-limit\
    \ VNI.\";\n         }\n         leaf max {\n           type int32;\n         \
    \  description\n             \"The upper-limit VNI.\";\n         }\n       }\n\
    \       leaf description {\n         type string;\n         description\n    \
    \       \"Description of the fabric\";\n       }\n       container options {\n\
    \         description\n           \"Options of the fabric\";\n         uses fabric-options;\n\
    \       }\n       list device-nodes {\n         key \"device-ref\";\n        \
    \ description\n           \"Device nodes that are included in a fabric.\";\n \
    \        uses device-attributes;\n       }\n       list device-links {\n     \
    \    key \"link-ref\";\n         description\n           \"Links that are included\
    \ within a fabric.\";\n         uses link-attributes;\n       }\n       list device-ports\
    \ {\n         key \"port-ref\";\n         description\n           \"Ports that\
    \ are included in the fabric.\";\n         uses port-attributes;\n       }\n \
    \    }\n     // augment statements\n     augment \"/nw:networks/nw:network/nw:network-types\"\
    \ {\n       description\n         \"Introduce a new network type for fabric-based\
    \ topology\";\n       uses fabric-network-type;\n     }\n     augment \"/nw:networks/nw:network/nw:node\"\
    \ {\n       when '/nw:networks/nw:network/nw:network-types/'\n          + 'fabric:fabric-network'\
    \ {\n         description\n           \"Augmentation parameters apply only for\
    \ networks\n            with fabric topology\";\n       }\n       description\n\
    \         \"Augmentation for fabric nodes created by\n          fabric topology.\"\
    ;\n       container fabric-attributes {\n         description\n           \"Attributes\
    \ for a fabric network\";\n         uses fabric-attributes;\n       }\n     }\n\
    \     augment \"/nw:networks/nw:network/nw:node/nt:termination-point\" {\n   \
    \    when '/nw:networks/nw:network/nw:network-types/'\n          + 'fabric:fabric-network'\
    \ {\n         description\n           \"Augmentation parameters apply only for\
    \ networks\n            with fabric topology\";\n       }\n       description\n\
    \         \"Augmentation for port on fabric.\";\n       container fport-attributes\
    \ {\n         config false;\n         description\n           \"Attributes for\
    \ fabric ports\";\n         uses fabrictypes:fabric-port;\n       }\n     }\n\
    \   }\n   <CODE ENDS>\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This document registers the following namespace URIs\
    \ in the \"IETF XML\n   Registry\" [RFC3688]:\n   URI:urn:ietf:params:xml:ns:yang:ietf-dc-fabric-types\n\
    \   Registrant Contact: The IESG.\n   XML: N/A; the requested URI is an XML namespace.\n\
    \   URI:urn:ietf:params:xml:ns:yang:ietf-dc-fabric-topology\n   Registrant Contact:\
    \ The IESG.\n   XML: N/A; the requested URI is an XML namespace.\n   URI:urn:ietf:params:xml:ns:yang:ietf-dc-fabric-topology-state\n\
    \   Registrant Contact: The IESG.\n   XML: N/A; the requested URI is an XML namespace.\n\
    \   This document registers the following YANG modules in the \"YANG\n   Module\
    \ Names\" registry [RFC6020]:\n   Name: ietf-dc-fabric-types\n   Namespace: urn:ietf:params:xml:ns:yang:ietf-dc-fabric-types\n\
    \   Prefix: fabrictypes\n   Reference: RFC 8542\n   Name: ietf-dc-fabric-topology\n\
    \   Namespace: urn:ietf:params:xml:ns:yang:ietf-dc-fabric-topology\n   Prefix:\
    \ fabric\n   Reference: RFC 8542\n   Name: ietf-dc-fabric-topology-state\n   Namespace:\
    \ urn:ietf:params:xml:ns:yang:ietf-dc-fabric-topology-state\n   Prefix: sfabric\n\
    \   Reference: RFC 8542\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   The YANG module defined in this document is designed\
    \ to be accessed\n   via network management protocols such as NETCONF [RFC6241]\
    \ or\n   RESTCONF [RFC8040].  The lowest NETCONF layer is the secure transport\n\
    \   layer, and the mandatory-to-implement secure transport is Secure\n   Shell\
    \ (SSH) [RFC6242].  The lowest RESTCONF layer is HTTPS, and the\n   mandatory-to-implement\
    \ secure transport is TLS [RFC8446].\n   The Network Configuration Access Control\
    \ Model (NACM) [RFC8341]\n   provides the means to restrict access for particular\
    \ NETCONF or\n   RESTCONF users to a preconfigured subset of all available NETCONF\
    \ or\n   RESTCONF protocol operations and content.\n   There are a number of data\
    \ nodes defined in this YANG module that are\n   writable/creatable/deletable\
    \ (i.e., config true, which is the\n   default).  These data nodes may be considered\
    \ sensitive or vulnerable\n   in some network environments.  Write operations\
    \ (e.g., edit-config)\n   to these data nodes without proper protection can have\
    \ a negative\n   effect on network operations.  The subtrees and data nodes and\
    \ their\n   sensitivity/vulnerability in the ietf-dc-fabric-topology module are\n\
    \   as follows:\n   fabric-attributes: A malicious client could attempt to sabotage\
    \ the\n   configuration of important fabric attributes, such as device nodes or\n\
    \   type.\n   Some of the readable data nodes in this YANG module may be considered\n\
    \   sensitive or vulnerable in some network environments.  It is thus\n   important\
    \ to control read access (e.g., via get, get-config, or\n   notification) to these\
    \ data nodes.  The subtrees and data nodes and\n   their sensitivity/vulnerability\
    \ in the ietf-dc-fabric-topology module\n   are as follows:\n   fport-attributes:\
    \ A malicious client could attempt to read the\n   connections of fabrics without\
    \ permission, such as device-port and\n   name.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC3688]  Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688,\n  \
    \            DOI 10.17487/RFC3688, January 2004,\n              <https://www.rfc-editor.org/info/rfc3688>.\n\
    \   [RFC6020]  Bjorklund, M., Ed., \"YANG - A Data Modeling Language for\n   \
    \           the Network Configuration Protocol (NETCONF)\", RFC 6020,\n      \
    \        DOI 10.17487/RFC6020, October 2010,\n              <https://www.rfc-editor.org/info/rfc6020>.\n\
    \   [RFC6241]  Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,\n  \
    \            and A. Bierman, Ed., \"Network Configuration Protocol\n         \
    \     (NETCONF)\", RFC 6241, DOI 10.17487/RFC6241, June 2011,\n              <https://www.rfc-editor.org/info/rfc6241>.\n\
    \   [RFC6242]  Wasserman, M., \"Using the NETCONF Protocol over Secure\n     \
    \         Shell (SSH)\", RFC 6242, DOI 10.17487/RFC6242, June 2011,\n        \
    \      <https://www.rfc-editor.org/info/rfc6242>.\n   [RFC7950]  Bjorklund, M.,\
    \ Ed., \"The YANG 1.1 Data Modeling Language\",\n              RFC 7950, DOI 10.17487/RFC7950,\
    \ August 2016,\n              <https://www.rfc-editor.org/info/rfc7950>.\n   [RFC8040]\
    \  Bierman, A., Bjorklund, M., and K. Watsen, \"RESTCONF\n              Protocol\"\
    , RFC 8040, DOI 10.17487/RFC8040, January 2017,\n              <https://www.rfc-editor.org/info/rfc8040>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n     \
    \         2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n        \
    \      May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8341]  Bierman,\
    \ A. and M. Bjorklund, \"Network Configuration\n              Access Control Model\"\
    , STD 91, RFC 8341,\n              DOI 10.17487/RFC8341, March 2018,\n       \
    \       <https://www.rfc-editor.org/info/rfc8341>.\n   [RFC8342]  Bjorklund, M.,\
    \ Schoenwaelder, J., Shafer, P., Watsen, K.,\n              and R. Wilton, \"\
    Network Management Datastore Architecture\n              (NMDA)\", RFC 8342, DOI\
    \ 10.17487/RFC8342, March 2018,\n              <https://www.rfc-editor.org/info/rfc8342>.\n\
    \   [RFC8345]  Clemm, A., Medved, J., Varga, R., Bahadur, N.,\n              Ananthakrishnan,\
    \ H., and X. Liu, \"A YANG Data Model for\n              Network Topologies\"\
    , RFC 8345, DOI 10.17487/RFC8345, March\n              2018, <https://www.rfc-editor.org/info/rfc8345>.\n\
    \   [RFC8346]  Clemm, A., Medved, J., Varga, R., Liu, X.,\n              Ananthakrishnan,\
    \ H., and N. Bahadur, \"A YANG Data Model\n              for Layer 3 Topologies\"\
    , RFC 8346, DOI 10.17487/RFC8346,\n              March 2018, <https://www.rfc-editor.org/info/rfc8346>.\n\
    \   [RFC8446]  Rescorla, E., \"The Transport Layer Security (TLS) Protocol\n \
    \             Version 1.3\", RFC 8446, DOI 10.17487/RFC8446, August 2018,\n  \
    \            <https://www.rfc-editor.org/info/rfc8446>.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [GENEVE]   Gross, J., Ganga, I., and T. Sridhar,\
    \ \"Geneve: Generic\n              Network Virtualization Encapsulation\", Work\
    \ in Progress,\n              draft-ietf-nvo3-geneve-12, March 2019.\n   [RFC7348]\
    \  Mahalingam, M., Dutt, D., Duda, K., Agarwal, P., Kreeger,\n              L.,\
    \ Sridhar, T., Bursell, M., and C. Wright, \"Virtual\n              eXtensible\
    \ Local Area Network (VXLAN): A Framework for\n              Overlaying Virtualized\
    \ Layer 2 Networks over Layer 3\n              Networks\", RFC 7348, DOI 10.17487/RFC7348,\
    \ August 2014,\n              <https://www.rfc-editor.org/info/rfc7348>.\n   [RFC8340]\
    \  Bjorklund, M. and L. Berger, Ed., \"YANG Tree Diagrams\",\n              BCP\
    \ 215, RFC 8340, DOI 10.17487/RFC8340, March 2018,\n              <https://www.rfc-editor.org/info/rfc8340>.\n\
    \   [RFC8344]  Bjorklund, M., \"A YANG Data Model for IP Management\",\n     \
    \         RFC 8344, DOI 10.17487/RFC8344, March 2018,\n              <https://www.rfc-editor.org/info/rfc8344>.\n"
- title: Appendix A.  Non-NMDA-State Modules
  contents:
  - "Appendix A.  Non-NMDA-State Modules\n   The YANG module, ietf-dc-fabric-topology,\
    \ defined in this document\n   augments two modules, ietf-network and ietf-network-topology,\
    \ that\n   are designed to be used in conjunction with implementations that\n\
    \   support the Network Management Datastore Architecture (NMDA) defined\n   in\
    \ [RFC8342].  In order to allow implementations to use the model\n   even in cases\
    \ when NMDA is not supported, a set of companion modules\n   have been defined\
    \ that represent a state model of networks and\n   network topologies: ietf-network-state\
    \ and ietf-network-topology-\n   state, respectively.\n   In order to be able\
    \ to use the model for fabric topologies defined in\n   this document in conjunction\
    \ with non-NMDA-compliant implementations,\n   a corresponding companion module\
    \ needs to be introduced as well.\n   This companion module, ietf-dc-fabric-topology-state,\
    \ mirrors ietf-\n   dc-fabric-topology.  However, the ietf-dc-fabric-topology-state\n\
    \   module augments ietf-network-state (instead of ietf-network and ietf-\n  \
    \ network-topology), and all of its data nodes are non-configurable.\n   Like\
    \ ietf-network-state and ietf-network-topology-state, ietf-dc-\n   fabric-topology-state\
    \ SHOULD NOT be supported by implementations that\n   support NMDA.  It is for\
    \ this reason that the module is defined in\n   the Appendix.\n   The definition\
    \ of the module follows.  As the structure of the module\n   mirrors that of its\
    \ underlying module, the YANG tree is not depicted\n   separately.\n"
- title: <CODE BEGINS> file "ietf-dc-fabric-topology-state@2019-02-25.yang"
  contents:
  - '<CODE BEGINS> file "ietf-dc-fabric-topology-state@2019-02-25.yang"

    '
- title: module ietf-dc-fabric-topology-state {
  contents:
  - "module ietf-dc-fabric-topology-state {\n  yang-version 1.1;\n  namespace \"urn:ietf:params:xml:ns:yang:ietf-dc-fabric-topology-state\"\
    ;\n  prefix sfabric;\n  import ietf-network-state {\n    prefix nws;\n    reference\n\
    \      \"RFC 8345: A Data Model for Network Topologies\";\n  }\n  import ietf-dc-fabric-types\
    \ {\n    prefix fabrictypes;\n    reference\n      \"RFC 8542: A YANG Data Model\
    \ for Fabric Topology in\n       Data-Center Networks\";\n  }\n  organization\n\
    \    \"IETF I2RS (Interface to the Routing System) Working Group\";\n  contact\n\
    \    \"WG Web:    <https://datatracker.ietf.org/wg/i2rs/>\n     WG List:   <mailto:i2rs@ietf.org>\n\
    \     Editor:    Yan Zhuang\n                <mailto:zhuangyan.zhuang@huawei.com>\n\
    \     Editor:    Danian Shi\n                <mailto:shidanian@huawei.com>\";\n\
    \  description\n    \"This module contains a collection of YANG definitions for\n\
    \     fabric state, representing topology that either is learned\n     or results\
    \ from applying topology that has been\n     configured per the ietf-dc-fabric-topology\
    \ model, mirroring\n     the corresponding data nodes in this model.\n     This\
    \ model mirrors the configuration tree of ietf-dc-fabric\n     -topology but contains\
    \ only read-only state data.  The model\n     is not needed when the implementation\
    \ infrastructure supports\n     the Network Management Datastore Architecture\
    \ (NMDA).\n     Copyright (c) 2019 IETF Trust and the persons identified as\n\
    \     authors of the code.  All rights reserved.\n     Redistribution and use\
    \ in source and binary forms, with or\n     without modification, is permitted\
    \ pursuant to, and subject\n     to the license terms contained in, the Simplified\
    \ BSD\n     License set forth in Section 4.c of the IETF Trust's Legal\n     Provisions\
    \ Relating to IETF Documents\n     (https://trustee.ietf.org/license-info).\n\
    \     This version of this YANG module is part of RFC 8542;\n     see the RFC\
    \ itself for full legal notices.\";\n  revision 2019-02-25 {\n    description\n\
    \      \"Initial revision.\";\n    reference\n      \"RFC 8542: A YANG Data Model\
    \ for Fabric Topology in\n       Data-Center Networks\";\n  }\n  //grouping statements\n\
    \  grouping fabric-network-type {\n    description\n      \"Identify the topology\
    \ type to be fabric.\";\n    container fabric-network {\n      presence \"indicates\
    \ fabric Network\";\n      description\n        \"The presence of the container\
    \ node indicates\n         fabric topology\";\n    }\n  }\n  grouping fabric-options\
    \ {\n    description\n      \"Options for a fabric\";\n    leaf gateway-mode {\n\
    \      type enumeration {\n        enum centralized {\n          description\n\
    \            \"The fabric uses centralized\n             gateway, in which gateway\
    \ is deployed on SPINE\n             node.\";\n        }\n        enum distributed\
    \ {\n          description\n            \"The fabric uses distributed\n      \
    \       gateway, in which gateway is deployed on LEAF\n             node.\";\n\
    \        }\n      }\n      default \"distributed\";\n      description\n     \
    \   \"Gateway mode of the fabric\";\n    }\n    leaf traffic-behavior {\n    \
    \  type enumeration {\n        enum normal {\n          description\n        \
    \    \"Normal means no policy is needed\n             for all traffic\";\n   \
    \     }\n        enum policy-driven {\n          description\n            \"Policy\
    \ driven means policy is\n             needed for the traffic; otherwise, the\
    \ traffic\n             will be discarded.\";\n        }\n      }\n      default\
    \ \"normal\";\n      description\n        \"Traffic behavior of the fabric\";\n\
    \    }\n    leaf-list capability-supported {\n      type fabrictypes:service-capabilities;\n\
    \      description\n        \"It provides a list of supported services of the\n\
    \         fabric.  The service-capabilities is defined as\n         identity-ref.\
    \  Users can define more services\n         by defining new identities.\";\n \
    \   }\n  }\n  grouping device-attributes {\n    description\n      \"device attributes\"\
    ;\n    leaf device-ref {\n      type fabrictypes:node-ref;\n      description\n\
    \        \"The device that the fabric includes that refers\n         to a node\
    \ in another topology.\";\n    }\n    leaf-list role {\n      type fabrictypes:device-role;\n\
    \      default \"fabrictypes:leaf\";\n      description\n        \"It is a list\
    \ of device roles to represent the roles\n         that a device plays within\
    \ a POD, such as SPINE,\n         LEAF, Border, or Border-Leaf.\n         The\
    \ device role is defined as identity-ref.  If more\n         than 2 stages are\
    \ used for a POD, users can\n         define new identities for the device role.\"\
    ;\n    }\n  }\n  grouping link-attributes {\n    description\n      \"Link attributes\"\
    ;\n    leaf link-ref {\n      type fabrictypes:link-ref;\n      description\n\
    \        \"The link that the fabric includes that refers to\n         a link in\
    \ another topology.\";\n    }\n  }\n  grouping port-attributes {\n    description\n\
    \      \"Port attributes\";\n    leaf port-ref {\n      type fabrictypes:tp-ref;\n\
    \      description\n        \"The port that the fabric includes that refers to\n\
    \         a termination-point in another topology.\";\n    }\n    leaf port-type\
    \ {\n      type fabrictypes:port-type;\n      description\n        \"Port type\
    \ is defined as identity-ref.  The current\n         types include ethernet or\
    \ serial.  If more types\n         are needed, developers can define new identities.\"\
    ;\n    }\n    leaf bandwidth {\n      type fabrictypes:bandwidth;\n      description\n\
    \        \"Bandwidth of the port.  It is defined as\n         identity-ref.  If\
    \ more speeds are introduced,\n         developers can define new identities for\
    \ them.  Current\n         speeds include 1M, 10M, 100M, 1G, 10G,\n         25G,\
    \ 40G, 100G, and 400G.\";\n    }\n  }\n  grouping fabric-attributes {\n    description\n\
    \      \"Attributes of a fabric\";\n    leaf fabric-id {\n      type fabrictypes:fabric-id;\n\
    \      description\n        \"Fabric ID\";\n    }\n    leaf name {\n      type\
    \ string;\n      description\n        \"Name of the fabric\";\n    }\n    leaf\
    \ type {\n      type fabrictypes:underlay-network-type;\n      description\n \
    \       \"The type of physical network that implements this\n         fabric.\
    \  Examples are VLAN and TRILL.\";\n    }\n    container vni-capacity {\n    \
    \  description\n        \"The range of the VXLAN Network\n         Identifier\
    \ (VNI) defined in RFC 7348 that the POD uses.\";\n      leaf min {\n        type\
    \ int32;\n        description\n          \"The lower-limit VNI.\";\n      }\n\
    \      leaf max {\n        type int32;\n        description\n          \"The upper-limit\
    \ VNI.\";\n      }\n    }\n    leaf description {\n      type string;\n      description\n\
    \        \"Description of the fabric\";\n    }\n    container options {\n    \
    \  description\n        \"Options of the fabric\";\n      uses fabric-options;\n\
    \    }\n    list device-nodes {\n      key \"device-ref\";\n      description\n\
    \        \"Device nodes that are included in a fabric.\";\n      uses device-attributes;\n\
    \    }\n    list device-links {\n      key \"link-ref\";\n      description\n\
    \        \"Links that are included within a fabric.\";\n      uses link-attributes;\n\
    \    }\n    list device-ports {\n      key \"port-ref\";\n      description\n\
    \        \"Ports that are included in the fabric.\";\n      uses port-attributes;\n\
    \    }\n  }\n  // augment statements\n  augment \"/nws:networks/nws:network/nws:network-types\"\
    \ {\n    description\n      \"Introduce a new network type for fabric-based logical\n\
    \       topology\";\n    uses fabric-network-type;\n  }\n  augment \"/nws:networks/nws:network/nws:node\"\
    \ {\n    when '/nws:networks/nws:network/nws:network-types'\n       + '/sfabric:fabric-network'\
    \ {\n      description\n        \"Augmentation parameters apply only for\n   \
    \      networks with fabric topology.\";\n    }\n    description\n      \"Augmentation\
    \ for fabric nodes.\";\n    container fabric-attributes-state {\n      description\n\
    \        \"Attributes for a fabric network\";\n      uses fabric-attributes;\n\
    \    }\n  }\n"
- title: '}'
  contents:
  - '}

    '
- title: <CODE ENDS>
  contents:
  - '<CODE ENDS>

    '
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   We wish to acknowledge the helpful contributions, comments,\
    \ and\n   suggestions that were received from Alexander Clemm, Donald E.\n   Eastlake\
    \ 3rd, Xufeng Liu, Susan Hares, Wei Song, Luis M. Contreras,\n   and Benoit Claise.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Yan Zhuang\n   Huawei\n   101 Software Avenue, Yuhua District\n\
    \   Nanjing, Jiangsu  210012\n   China\n   Email: zhuangyan.zhuang@huawei.com\n\
    \   Danian Shi\n   Huawei\n   101 Software Avenue, Yuhua District\n   Nanjing,\
    \ Jiangsu  210012\n   China\n   Email: shidanian@huawei.com\n   Rong Gu\n   China\
    \ Mobile\n   32 Xuanwumen West Ave, Xicheng District\n   Beijing, Beijing  100053\n\
    \   China\n   Email: gurong_cmcc@outlook.com\n   Hariharan Ananthakrishnan\n \
    \  Netflix\n   Email: hari@netflix.com\n"
