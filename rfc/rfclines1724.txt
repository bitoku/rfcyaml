Abstract This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in TCP/IP based internets.
In particular, it defines objects for managing RIP Version 2.
The Internet standard Network Management Framework consists of three components.
They are: STD 16/RFC 1155 which defines the SMI, the mechanisms used for describing and naming objects for the purpose of management.
STD 16/RFC 1212 defines a more concise description mechanism, which is wholly consistent with the SMI.
RFC 1156 which defines MIB I, the core set of managed objects for the Internet suite of protocols.
STD 17/RFC 1213 defines MIB  II, an evolution of MIB
I based on implementation experience and new operational requirements.
STD 15/RFC 1157 which defines the SNMP, the protocol used for network access to managed objects.
The Framework permits new objects to be defined for the purpose of experimentation and evaluation.
Objects Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
Objects in the MIB are defined using the subset of Abstract Syntax Notation One (ASN.1)
[7] defined in the SMI.
In particular, each object has a name, a syntax, and an encoding.
The name is an object identifier, an administratively assigned name, which specifies an object type.
The object type together with an object instance serves to uniquely identify a specific instantiation of the object.
For human convenience, we often use a textual string, termed the OBJECT DESCRIPTOR, to also refer to the object type.
The syntax of an object type defines the abstract data structure corresponding to that object type.
The ASN.1 language is used for this purpose.
However, the SMI [3] purposely restricts the ASN.1 constructs which may be used.
These restrictions are explicitly made for simplicity.
The encoding of an object type is simply how that object type is represented using the object type's syntax.
Implicitly tied to the notion of an object type's syntax and encoding
is how the object type is represented when being transmitted on the network.
The SMI specifies the use of the basic encoding rules of ASN.1 [8], subject to the additional requirements imposed by the SNMP.
2.1 Format of Definitions Section 4 contains the specification of all object types contained in this MIB module.
The object types are defined using the conventions defined in the SMI, as amended by the extensions specified in [9].
Several new data types are introduced as a textual convention in this MIB document.
These textual conventions enhance the readability of the specification and can ease comparison with other specifications if appropriate.
It should be noted that the introduction of the these textual conventions has no effect on either the syntax nor the semantics of any managed objects.
The use of these is merely an artifact of the explanatory method used.
Objects defined in terms of one of these methods are always encoded by means of the rules that define the primitive type.
Hence, no changes to the SMI or the SNMP are necessary to accommodate these textual conventions which are adopted merely for the convenience of readers and writers in pursuit of the elusive goal of clear, concise, and unambiguous MIB documents.
The new data type is RouteTag.
The RouteTag type represents the contents of the Route Domain field in the packet header or route entry.
The RIP 2 MIB contains global counters, useful for detecting the deleterious effects of RIP incompatibilities; two "interfaces" tables, which contains interface specific statistics and configuration information; and an optional "peer" table, containing information that may be helpful in debugging neighbor relationships.
Like the protocol itself, this MIB takes great care to preserve compatibility with RIP 1 systems and controls for monitoring and controlling system interactions.
3.3 Modifications from RFC 1389
The RIP 2 MIB was originally published in RFC 1389.
It encoded the concept of a Routing Domain, and did not address unnumbered interfaces.
In the current version of the protocol, Route Domains are deprecated; therefore, they are deprecated in the MIB as well.
This means that the object rip2IfConfDomain is deprecated, and the object rip2PeerDomain (which cannot be deprecated, being an instance object) must always be zero.
Unnumbered interfaces are supported in this version.
Since the IP Address that the neighbor uses may be unknown to the system, a pseudo address is used to identify these interfaces.
The pseudo  address is in the class A network 0.0.0.0, and the host number (the least significant 24 bits of the address) are the ifIndex value of the relevant IP Interface.
This is an additional new meaning of the objects rip2IfStatAddress and rip2IfConfAddress, backward compatible with the RFC 1389 usage.
The object rip2IfConfSrcAddress is added, to permit the configuration of the source address on an unnumbered interface, and the meaning of the object rip2PeerAddress is broadened to remain relevant on unnumbered interfaces.
rip2IfConfSend is augmented with two values for the use of Demand RIP under RIP I and RIP II rules.
This avoids the necessity of a Demand RIP MIB.
rip2  MODULE IDENTITY LAST UPDATED "9407272253Z"
Wed Jul 27 22:53:04 PDT 1994 ORGANIZATION "IETF RIP II Working Group" CONTACT INFO "
Cisco Systems 519 Lado Drive Santa Barbara, California 93111
, Inc. 53 Third Avenue Burlington,
) 272 8140 EMail:  gmalkin@Xylogics.
RIP 2 Management Information Base
the RouteTag type represents the contents of the   Route Domain field in the packet header or route entry.
The use of the Route Domain is deprecated.
"the RouteTag type represents the contents of the Route Domain field in the packet header or route entry" SYNTAX
These counters are intended to facilitate debugging quickly   changing routes or failing neighbors rip2Globals
"The number of route changes made to the IP Route Database by RIP.
This does not include the refresh of a route's age."
The RIP Interface Status Table.
SEQUENCE OF Rip2IfStatEntry MAX ACCESS
A list of subnets which require separate status monitoring in RIP."
current DESCRIPTION "A Single Routing Domain in a single Subnet.
rip2IfStatSentUpdates Counter32, rip2IfStatStatus RowStatus } rip2IfStatAddress
The IP Address of this system on the indicated subnet.
"The number of routes, in valid RIP packets, which were ignored for any reason (e.g. unknown address family, or invalid metric)."
{ rip2IfStatEntry 3 } rip2IfStatSentUpdates OBJECT TYPE
"The number of triggered RIP updates actually sent on this interface.
This explicitly does NOT include full updates sent containing new information."
"Writing invalid has the effect of deleting this interface."
A list of subnets which require separate configuration in RIP."
current DESCRIPTION "A Single Routing Domain in a single Subnet.
OCTET STRING (SIZE(0..16)), rip2IfConfSend INTEGER, rip2IfConfReceive INTEGER, rip2IfConfDefaultMetric INTEGER, rip2IfConfStatus RowStatus, rip2IfConfSrcAddress IpAddress }
The IP Address of this system on the indicated subnet.
For unnumbered interfaces, the value 0.0.0.N, where the least significant 24 bits (N) is the ifIndex for the IP Interface in network byte order."
STATUS   obsolete DESCRIPTION "Value inserted into the Routing Domain field of all RIP packets sent on this interface."
INTEGER { noAuthentication (1), simplePassword (2), md5 (3) }
MAX ACCESS   read create STATUS
"The type of Authentication used on this interface."
MAX ACCESS   read create STATUS
"The value to be used as the Authentication Key whenever the corresponding instance of rip2IfConfAuthType has a value other than noAuthentication.
A modification of the corresponding instance of rip2IfConfAuthType does not modify the rip2IfConfAuthKey value.
If a string shorter than 16 octets is supplied, it will be left  justified and padded to 16 octets, on the right, with nulls (0x00).
Reading this object always results in an  OCTET STRING of length zero; authentication may not be bypassed by reading the MIB object.
INTEGER { doNotSend (1), ripVersion1 (2), rip1Compatible (3), ripVersion2 (4), ripV1Demand (5), ripV2Demand (6) }
MAX ACCESS   read create STATUS
What the router sends on this interface.
ripVersion1 implies sending RIP updates compliant with  RFC  1058.
rip1Compatible implies broadcasting RIP 2 updates using RFC 1058 route subsumption rules.
ripVersion2 implies multicasting RIP 2 updates.
ripV1Demand indicates the use of Demand RIP on a WAN interface under RIP Version 1 rules.
ripV2Demand indicates the use of Demand RIP on a WAN interface under Version 2 rules."
INTEGER { rip1 (1), rip2 (2), rip1OrRip2 (3), doNotRecieve (4) }
MAX ACCESS   read create STATUS
"This indicates which version of RIP updates are to be accepted.
Note that rip2 and rip1OrRip2 implies reception of multicast packets.
MAX ACCESS   read create STATUS
"This variable indicates the metric that is to be used for the default route entry in RIP updates originated on this interface.
A value of zero indicates that no default route should be originated; in this case, a default route via another router may be propagated."
"Writing invalid has  the  effect  of  deleting this interface."
"The IP Address this system will use as a source address on this interface.
If it is a numbered interface, this MUST be the same value as rip2IfConfAddress.
On unnumbered interfaces, it must be the value of rip2IfConfAddress for some interface on the system."
A list of RIP Peers."
current DESCRIPTION "Information regarding a single routing peer.
The IP Address that the peer is using as its source address.
Note that on an unnumbered link, this may not be a member of any subnet on the system."
RouteTag MAX ACCESS   read only STATUS
"The value in the Routing Domain field  in  RIP packets received from the peer.
As domain suuport is deprecated, this must be zero."
"The RIP version number in the header of the last RIP packet received."
"The number of RIP response packets from this peer discarded as invalid."
"The number of routes from this peer that were ignored because the entry format was invalid."
MODULE COMPLIANCE STATUS  current DESCRIPTION
The compliance statement " MODULE
This group defines global controls for RIP II systems."
This group defines interface statistics for RIP II systems."
"This group defines interface configuration for RIP II systems."
This group defines peer information for RIP II systems."
OBJECT GROUP OBJECTS { rip2GlobalRouteChanges,
rip2GlobalQueries } STATUS  current DESCRIPTION
"This group defines global controls for RIP II systems."
OBJECT GROUP OBJECTS { rip2IfStatAddress, rip2IfStatRcvBadPackets, rip2IfStatRcvBadRoutes, rip2IfStatSentUpdates, rip2IfStatStatus } STATUS  current DESCRIPTION
"This group defines interface statistics for RIP II systems."
rip2IfConfSend, rip2IfConfReceive, rip2IfConfDefaultMetric, rip2IfConfStatus, rip2IfConfSrcAddress } STATUS  current DESCRIPTION
"This group defines interface configuration for RIP II systems."
OBJECT GROUP OBJECTS { rip2PeerAddress, rip2PeerDomain, rip2PeerLastUpdate, rip2PeerVersion, rip2PeerRcvBadPackets
, rip2PeerRcvBadRoutes } STATUS  current DESCRIPTION
"This group defines peer information for RIP II systems."
Security Considerations Security issues are not discussed in this memo.
