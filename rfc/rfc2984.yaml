- title: __initial_text__
  contents:
  - '            Use of the CAST-128 Encryption Algorithm in CMS

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies how to incorporate CAST-128 (RFC2144) into\n\
    \   the S/MIME Cryptographic Message Syntax (CMS) as an additional\n   algorithm\
    \ for symmetric encryption.  The relevant OIDs and processing\n   steps are provided\
    \ so that CAST-128 may be included in the CMS\n   specification (RFC2630) for\
    \ symmetric content and key encryption.\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHOULD\", \"SHOULD NOT\",\n   \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this document (in uppercase,\n   as shown) are to be interpreted\
    \ as described in [RFC2119].\n"
- title: 1. Motivation
  contents:
  - "1. Motivation\n   S/MIME (Secure/Multipurpose Internet Mail Extensions) [SMIME2,\n\
    \   SMIME3] is a set of specifications for the secure transport of MIME\n   objects.\
    \  In the current (S/MIME v3) specifications the mandatory-\n   to-implement symmetric\
    \ algorithm for content encryption and key\n   encryption is triple-DES (3DES).\
    \  While this is perfectly acceptable\n   in many cases because the security of\
    \ 3DES is generally considered to\n   be high, for some environments 3DES may\
    \ be seen to be too slow.  In\n   part to help alleviate such performance concerns,\
    \ S/MIME has allowed\n   any number of (optional) additional algorithms to be\
    \ used for\n   symmetric content and key encryption.\n   The CAST-128 encryption\
    \ algorithm [RFC2144, Adams] is a well-studied\n   symmetric cipher that has a\
    \ number of appealing features, including\n   relatively high performance and\
    \ a variable key size (from 40 bits to\n   128 bits).  It is available royalty-free\
    \ and license-free for\n   commercial and non-commercial uses worldwide [IPR],\
    \ and therefore is\n   widely used in a number of applications around the Internet.\
    \  It thus\n   seems to be a suitable optional encryption algorithm for S/MIME.\n\
    \   This document describes how to use CAST-128 within the S/MIME CMS\n   specification.\n"
- title: 2. Specification
  contents:
  - "2. Specification\n   This section provides the OIDs and processing information\
    \ necessary\n   for CAST-128 to be used for content and key encryption in CMS.\n"
- title: 2.1 OIDs for Content and Key Encryption
  contents:
  - "2.1 OIDs for Content and Key Encryption\n   CAST-128 is added to the set of optional\
    \ symmetric encryption\n   algorithms in CMS by providing two unique object identifiers\
    \ (OIDs).\n   One OID defines the content encryption algorithm and the other\n\
    \   defines the key encryption algorithm.  Thus a CMS agent can apply\n   CAST-128\
    \ either for content or key encryption by selecting the\n   corresponding object\
    \ identifier, supplying the required parameter,\n   and starting the program code.\n\
    \   For content encryption the use of CAST-128 in cipher block chaining\n   (CBC)\
    \ mode is RECOMMENDED.  The key length is variable (from 40 to\n   128 bits in\
    \ 1-octet increments).\n   The CAST-128 content-encryption algorithm in CBC mode\
    \ has the\n   following object identifier:\n     cast5CBC OBJECT IDENTIFIER ::=\
    \ {iso(1) member-body(2)\n         us(840) nt(113533) nsn(7) algorithms(66) 10}\n\
    \   The parameter associated with this object identifier contains the\n   initial\
    \ vector IV and the key length:\n     cast5CBCParameters ::= SEQUENCE {\n    \
    \     iv         OCTET STRING DEFAULT 0,\n         -- Initialization vector\n\
    \         keyLength  INTEGER\n         -- Key length, in bits\n     }\n   Comments\
    \ regarding the use of the IV may be found in [RFC2144].\n   The key-wrap/unwrap\
    \ procedures used to encrypt/decrypt a CAST-128\n   content-encryption key with\
    \ a CAST-128 key-encryption key are\n   specified in Section 2.2.  Generation\
    \ and distribution of key-\n   encryption keys are beyond the scope of this document.\n\
    \   The CAST-128 key-encryption algorithm has the following object\n   identifier:\n\
    \     cast5CMSkeywrap OBJECT IDENTIFIER ::= { iso(1)\n         member-body(2)\
    \ us(840) nt(113533) nsn(7)\n         algorithms(66) 15}\n   The parameter associated\
    \ with this object identifier contains only\n   the key length (because the key\
    \ wrapping procedure itself defines how\n   and when to use an IV):\n     cast5CMSkeywrapParameter\
    \ ::= INTEGER\n       -- key length, in bits\n"
- title: 2.2 Key Wrapping and Unwrapping
  contents:
  - "2.2 Key Wrapping and Unwrapping\n   CAST-128 key wrapping and unwrapping is done\
    \ in conformance with CMS\n   [RFC2630].\n"
- title: 2.2.1 CAST-128 Key Wrap
  contents:
  - "2.2.1 CAST-128 Key Wrap\n   Key wrapping with CAST-128 is identical to [RFC2630],\
    \ Sections 12.6.1\n   and 12.6.4, with \"RC2\" replaced by \"CAST-128\" in the\
    \ introduction to\n   12.6.4.  Only 128-bit CAST-128 keys may be used as key-encryption\n\
    \   keys, and they MUST be used with the cast5CMSkeywrapParameter set to\n   128.\
    \  It is RECOMMENDED that the size of the content-encryption key\n   and the size\
    \ of the key-encryption key be equal (since the security\n   of the content will\
    \ be at most the smaller of these two values).\n"
- title: 2.2.2 CAST-128 Key Unwrap
  contents:
  - "2.2.2 CAST-128 Key Unwrap\n   Key unwrapping with CAST-128 is identical to [RFC2630],\
    \ Sections\n   12.6.1 and 12.6.5, with \"RC2\" replaced by \"CAST-128\" in the\n\
    \   introduction to 12.6.5.\n"
- title: 3. Using CAST-128 in S/MIME Clients
  contents:
  - "3. Using CAST-128 in S/MIME Clients\n   An S/MIME client SHOULD announce the\
    \ set of cryptographic functions\n   it supports by using the S/MIME capabilities\
    \ attribute.  This\n   attribute provides a partial list of OIDs of cryptographic\
    \ functions\n   and MUST be signed by the client.  The functions' OIDs SHOULD\
    \ be\n   logically separated in functional categories and MUST be ordered with\n\
    \   respect to their preference.  If an S/MIME client is required to\n   support\
    \ symmetric encryption with CAST-128, the capabilities\n   attribute MUST contain\
    \ the cast5CBC OID specified above in the\n   category of symmetric algorithms.\
    \  The parameter associated with this\n   OID (see above) MUST be used to indicate\
    \ supported key length.  For\n   example, when the supported key length is 128\
    \ bits, the\n   SMIMECapability SEQUENCE representing CAST-128 MUST be DER-encoded\
    \ as\n   the following hexadecimal string:\n       301106092A864886F67D07420A300402020080.\n\
    \   When a sending agent creates an encrypted message, it has to decide\n   which\
    \ type of encryption algorithm to use.  In general the decision\n   process involves\
    \ information obtained from the capabilities lists\n   included in messages received\
    \ from the recipient, as well as other\n   information such as private agreements,\
    \ user preferences, legal\n   restrictions, and so on. If users require CAST-128\
    \ for symmetric\n   encryption, it MUST be supported by the S/MIME clients on\
    \ both the\n   sending and receiving side, and it MUST be set in the user\n  \
    \ preferences.\n"
- title: 4. Security Considerations
  contents:
  - "4. Security Considerations\n   This document specifies the use of the CAST-128\
    \ symmetric cipher for\n   encrypting the content of a CMS message and for encrypting\
    \ the\n   symmetric key used to encrypt the content of a CMS message. Although\n\
    \   CAST-128 allows keys of variable length to be used, it must be\n   recognized\
    \ that smaller key sizes (e.g., 40, 56, or 64 bits) may be\n   unacceptably weak\
    \ for some environments.  The use of larger key sizes\n   (e.g., 128 bits) is\
    \ always RECOMMENDED (when relevant import, export,\n   or other laws permit).\
    \  It is also RECOMMENDED that the size of the\n   content-encryption key and\
    \ the size of the key-encryption key be\n   equal (since the security of the content\
    \ will be at most the smaller\n   of these two values).\n"
- title: References
  contents:
  - "References\n   [Adams]   C. Adams, \"Constructing Symmetric Ciphers using the\
    \ CAST\n             Design Procedure\", Designs, Codes, and Cryptography,\n \
    \            vol.12, no.3, November 1997, pp.71-104.\n   [IPR]     See the \"\
    IETF Page of Intellectual Property Rights\n             Notices\", http://www.ietf.cnri.reston.va.us/ipr.html\n\
    \   [RFC2144] Adams, C., \"The CAST-128 Encryption Algorithm\", RFC 2144,\n  \
    \           May 1997.\n   [RFC2119] Bradner, S., \"Key words for use in RFCs to\
    \ Indicate\n             Requirement Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [RFC2630] Housley, R., \"Cryptographic Message Syntax\", RFC 2630, June\n\
    \             1999.\n   [SMIME2]  Dusse, S., Hoffman, P., Ramsdell, B., Lundblade,\
    \ L. and L.\n             Repka, \"S/MIME Version 2 Message Specification\", RFC\
    \ 2311,\n             March 1998.\n             Dusse, S., Hoffman, P., Ramsdell,\
    \ B. and J. Weinstein,\n             \"S/MIME Version 2 Certificate Handling\"\
    , RFC 2312, March\n             1998.\n   [SMIME3]  Ramsdell, B., \"S/MIME Version\
    \ 3 Certificate Handling\", RFC\n             2632, June 1999.\n             Ramsdell,\
    \ B., \"S/MIME Version 3 Message Specification\", RFC\n             2633, June\
    \ 1999.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Carlisle Adams\n   Entrust Technologies\n   1000 Innovation\
    \ Drive,\n   Kanata, Ontario, Canada K2K 3E7\n   EMail: cadams@entrust.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2000).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
