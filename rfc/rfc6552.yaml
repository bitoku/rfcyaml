- contents:
  - "                    Objective Function Zero for the\n        Routing Protocol
    for Low-Power and Lossy Networks (RPL)\n"
  title: __initial_text__
- contents:
  - "Abstract\n   The Routing Protocol for Low-Power and Lossy Networks (RPL)\n   specification
    defines a generic Distance Vector protocol that is\n   adapted to a variety of
    network types by the application of specific\n   Objective Functions (OFs).  An
    OF states the outcome of the process\n   used by a RPL node to select and optimize
    routes within a RPL\n   Instance based on the Information Objects available; an
    OF is not an\n   algorithm.\n   This document specifies a basic Objective Function
    that relies only\n   on the objects that are defined in the RPL and does not use
    any\n   protocol extensions.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6552.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n
    \  2. Terminology .....................................................4\n   3.
    Objective Function Zero Overview ................................4\n   4. OF0
    Operations ..................................................5\n      4.1. Computing
    Rank .............................................5\n      4.2. Parent Selection
    ...........................................7\n           4.2.1. Selection of the
    Preferred Parent ...................7\n           4.2.2. Selection of the Backup
    Feasible Successor ..........8\n   5. Abstract Interface to OF0 .......................................9\n
    \  6. OF0 Operands ....................................................9\n      6.1.
    Variables ..................................................9\n      6.2. Configurable
    Parameters ...................................10\n      6.3. Constants .................................................10\n
    \  7. Manageability Considerations ...................................10\n      7.1.
    Device Configuration ......................................11\n      7.2. Device
    Monitoring .........................................11\n   8. IANA Considerations
    ............................................12\n   9. Security Considerations
    ........................................12\n   10. Acknowledgements ..............................................12\n
    \  11. References ....................................................13\n      11.1.
    Normative References .....................................13\n      11.2. Informative
    References ...................................13\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The Routing Protocol for Low-Power and Lossy Networks (RPL)\n
    \  specification [RFC6550] defines a generic Distance Vector protocol\n   that
    is adapted to a variety of Low-Power and Lossy Network (LLN)\n   types by the
    application of specific Objective Functions (OFs).\n   A RPL OF states the outcome
    of the process used by a RPL node to\n   select and optimize routes within a RPL
    Instance based on the\n   Information Objects available.  As a general concept,
    an OF is not an\n   algorithm.  For example, outside RPL, \"shortest path first\"
    is an OF\n   where the least cost path between two points is derived as an\n   outcome;
    there are a number of algorithms that can be used to satisfy\n   the OF, of which
    the well-known Dijkstra algorithm is an example.\n   The separation of OFs from
    the core protocol specification allows RPL\n   to be adapted to meet the different
    optimization criteria required by\n   the wide range of deployments, applications,
    and network designs.\n   RPL forms Directed Acyclic Graphs (DAGs) as collections
    of\n   Destination-Oriented DAGs (DODAGs) within instances of the protocol.\n
    \  Each instance is associated with a specialized Objective Function.  A\n   DODAG
    is periodically reconstructed as a new DODAG Version to enable\n   a global reoptimization
    of the graph.\n   An instance of RPL running on a device uses an Objective Function
    to\n   help it determine which DODAG and which Version of that DODAG it\n   should
    join.  The OF is also used by the RPL Instance to select a\n   number of routers
    within the DODAG current and subsequent Versions to\n   serve as parents or as
    feasible successors.\n   The RPL Instance uses the OF to compute a Rank for the
    device.  This\n   value represents an abstract distance to the root of the DODAG
    within\n   the DODAG Version.  The Rank is exchanged between nodes using RPL and\n
    \  allows other RPL nodes to avoid loops and verify forward progression\n   toward
    the destination, as specified in [RFC6550].  Regardless of the\n   particular
    OF used by a node, Rank will always increase; thus, post\n   convergence, loop-free
    paths are always formed.\n   The Objective Function Zero (OF0) operates on parameters
    that are\n   obtained from provisioning, the RPL DODAG Configuration option and\n
    \  the RPL DODAG Information Object (DIO) base container [RFC6550].\n   The Rank
    of a node is obtained by adding a strictly positive,\n   indirectly normalized
    scalar, rank_increase (Section 6.1), to the\n   Rank of a selected preferred parent.
    \ The rank_increase is based on a\n   step_of_rank (Section 6.1) normalized scalar
    that can vary with a\n   ratio from 1 (excellent) to 9 (worst acceptable) to represent
    the\n   link properties.  The step_of_rank can be multiplied by a\n   configurable
    factor called rank_factor (Section 6.2) that amplifies\n   the rank_increase to
    reflect the relative preferences between\n   different link types that would be
    used in the same RPL Instance.\n   The rank_increase can be further adapted as
    detailed in Section 4.1.\n   By default, OF0 encodes the 2-octet Rank in units
    of 256, and the\n   default settings allow for the encoding of a minimum of 28
    (worst\n   acceptable) hops and a maximum of 255 (excellent) hops.\n   The RPL
    specification [RFC6550] requires the use of a common OF by\n   all nodes in a
    network.  The possible use of multiple OFs with a\n   single network is for further
    study.\n   The RPL specification [RFC6550] does not include any OF definitions.\n
    \  This is left for other documents specific to different deployments\n   and
    application environments.  Since there is no default OF or metric\n   container
    in the RPL main specification, it might happen that, unless\n   two given implementations
    follow the same guidance for a specific\n   problem or environment, those implementations
    will not support a\n   common OF with which they could interoperate.\n   OF0 is
    designed as a default OF that will allow interoperation\n   between implementations
    in a wide spectrum of use cases.  This is why\n   OF0 does not specify how the
    link properties are transformed into a\n   rank_increase and leaves that responsibility
    to the implementation;\n   rather, OF0 enforces the values for the rank_increase
    by normalizing\n   the step_of_rank for a normal link and its acceptable range,
    as\n   opposed to formulating the details of the step_of_rank computation.\n   This
    is also why OF0 ignores metric containers.\n"
  title: 1.  Introduction
- contents:
  - "2.  Terminology\n   The terminology used in this document is consistent with
    and\n   incorporates that described in \"Terminology in Low power And Lossy\n
    \  Networks\" [ROLL-TERMS] and [RFC6550].\n   The term \"feasible successor\"
    is used to refer to a neighbor that can\n   possibly be used as a next hop for
    Upward traffic following the loop\n   avoidance and forwarding rules that the
    nodes implement and that are\n   defined in the RPL specification [RFC6550].\n
    \  The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n
    \  \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\",
    and\n   \"OPTIONAL\" in this document are to be interpreted as described in RFC\n
    \  2119 [RFC2119].\n"
  title: 2.  Terminology
- contents:
  - "3.  Objective Function Zero Overview\n   The RPL specification describes constraints
    on how nodes select\n   potential parents, called a parent set, from their neighbors.
    \ All\n   parents are feasible successors for upward traffic (towards the\n   root).
    \ Additionally, RPL allows the use of parents in a subsequent\n   Version of a
    same DODAG as feasible successors, in which case this\n   node acts as a leaf
    in the subsequent DODAG Version.\n   The Goal of the OF0 is for a node to join
    a DODAG Version that offers\n   good enough connectivity to a specific set of
    nodes or to a larger\n   routing infrastructure though there is no guarantee that
    the path\n   will be optimized according to a specific metric.  This validation\n
    \  process for the connectivity is implementation and link type\n   dependent
    and is out of scope.  The validation involves but is not\n   limited to application
    of [RFC6550], Sections 3.2.3 and 13, as\n   appropriate and may involve deployment
    specific policies as well.\n   Thus, for the purpose of OF0, the term \"Grounded\"
    [RFC6550] means\n   that the DODAG root provides such connectivity.  How that\n
    \  connectivity is asserted and maintained is out of scope.\n   Objective Function
    Zero is designed to find the nearest Grounded\n   root.  This can be achieved
    if the Rank of a node is very close to an\n   abstract function of its distance
    to the root.  This need is balanced\n   with the other need of maintaining some
    path diversity, which may be\n   achieved by increasing the Rank.  In the absence
    of a Grounded root,\n   inner connectivity within the LLN is still desirable and
    floating\n   DAGs will form, rooted at the nodes with the highest administrative\n
    \  preference.\n   OF0 selects a preferred parent and a backup feasible successor
    if one\n   is available.  All the upward traffic is normally routed via the\n
    \  preferred parent with no attempt to perform any load balancing.  When\n   the
    link conditions do not let an upward packet through the preferred\n   parent,
    the packet is passed to the backup feasible successor.\n   A RPL node monitors
    links to a number of neighbor nodes and can use\n   OF0 to assign a rank_increase
    to each link.  Though the exact method\n   for computing the rank_increase is
    implementation dependent, the\n   computation must follow the rules that are specified
    in Section 4.1.\n"
  title: 3.  Objective Function Zero Overview
- contents:
  - '4.  OF0 Operations

    '
  - contents:
    - "4.1.  Computing Rank\n   An OF0 implementation first computes a variable step_of_rank\n
      \  (Section 6.1) associated with a given parent from relevant link\n   properties
      and metrics.  The step_of_rank is used to compute the\n   amount by which to
      increase the rank along a particular link, as\n   explained later in this section.\n
      \  Computing a step_of_rank based on a static metric such as an\n   administrative
      cost implies that the OF0 implementation only\n   considers parents with good
      enough connectivity, and results in a\n   Rank that is analogous to hop-count.
      \ In most LLNs, this favors paths\n   with fewer but longer hops of poorer connectivity;
      it is thus\n   RECOMMENDED to base the computation of the step_of_rank on dynamic\n
      \  link properties such as the expected transmission count (ETX) metric\n   as
      introduced in [DeCouto03] and discussed in [RFC6551].  \"Minimum\n   Rank Objective
      Function with Hysteresis\" [HYSTERESIS] provides\n   guidance on how link cost
      can be computed and on how hysteresis can\n   improve Rank stability.\n   OF0
      allows an implementation to stretch the step_of_rank in order to\n   enable
      the selection of at least one feasible successor and thus\n   maintain path
      diversity.  Stretching the step_of_rank is NOT\n   RECOMMENDED, because it augments
      the apparent distance from the node\n   to the root, distorts the DODAG from
      the optimal shape and may cause\n   instabilities due to greedy behaviors whereby
      depending nodes augment\n   their Ranks to use each other as parents in a loop.
      \ Still, an\n   implementation may stretch the step_of_rank with at most a\n
      \  configurable stretch_of_rank (Section 6.2) of any value between 0 (no\n   stretch)
      and the fixed constant MAXIMUM_RANK_STRETCH (Section 6.3).\n   An implementation
      MUST maintain the stretched step_of_rank between\n   the fixed constants MINIMUM_STEP_OF_RANK
      and MAXIMUM_STEP_OF_RANK\n   (Section 6.3).  This range allows the reflection
      of a large variation\n   of link quality.\n   The gap between MINIMUM_STEP_OF_RANK
      and MAXIMUM_RANK_STRETCH may not\n   be sufficient in every case to strongly
      distinguish links of\n   different types or categories in order to favor, say,
      powered over\n   battery-operated or high-speed (wired) over lower-speed (wireless)\n
      \  links, within the same DAG.  An implementation SHOULD allow the\n   operator
      to configure a factor called rank_factor (Section 6.2) and\n   to apply the
      factor on all links and peers to multiply the effect of\n   the stretched step_of_rank
      in the rank_increase computation as\n   further detailed below.\n   Additionally,
      an implementation MAY recognize categories of peers and\n   links, such as different
      link types, in which case it SHOULD be able\n   to configure a more specific
      rank_factor to those categories.  The\n   rank_factor MUST be set between the
      fixed constants\n   MINIMUM_RANK_FACTOR and MAXIMUM_RANK_FACTOR (Section 6.3).\n
      \  The variable rank_increase is represented in units expressed by the\n   variable
      MinHopRankIncrease, which defaults to the fixed constant\n   DEFAULT_MIN_HOP_RANK_INCREASE
      ([RFC6550]); with that setting, the\n   least significant octet in the RPL Rank
      field in the DIO Base Object\n   is not used.\n   The step_of_rank Sp that is
      computed for that link is multiplied by\n   the rank_factor Rf and then possibly
      stretched by a term Sr that is\n   less than or equal to the configured stretch_of_rank.
      \ The resulting\n   rank_increase is added to the Rank of preferred parent R(P)
      to obtain\n   that of this node R(N):\n   R(N) = R(P) + rank_increase where:\n
      \  rank_increase = (Rf*Sp + Sr) * MinHopRankIncrease\n   Optionally, the administrative
      preference of a root MAY be configured\n   to supersede the goal to join a Grounded
      DODAG.  In that case, nodes\n   will associate with the root with the highest
      preference available,\n   regardless of whether or not that root is Grounded.
      \ Compared to a\n   deployment with a multitude of Grounded roots that would
      result in\n   the same multitude of DODAGs, such a configuration may result
      in\n   possibly less but larger DODAGs, as many as roots configured with the\n
      \  highest priority in the reachable vicinity.\n"
    title: 4.1.  Computing Rank
  - contents:
    - '4.2.  Parent Selection

      '
    - contents:
      - "4.2.1.  Selection of the Preferred Parent\n   As it scans all the candidate
        neighbors, OF0 keeps the parent that is\n   the best for the following criteria
        (in order):\n   1.   [RFC6550], Section 8, spells out the generic rules for
        a node to\n        re-parent and in particular the boundaries to augment its
        Rank\n        within a DODAG Version.  A candidate that would not satisfy\n
        \       those rules MUST NOT be considered.\n   2.   Prior to selecting a
        router as the preferred parent, an\n        implementation SHOULD validate
        the connectivity and suitability\n        of the router as discussed in Section
        3.  This validation\n        involves checking the Layer 2 connectivity to
        the router, the\n        Layer 3 connectivity offered by the router, and may
        involve\n        examination of other factors such as locally or globally\n
        \       configured policies.\n        In most cases, a router that does not
        succeed in the validation\n        process cannot be further considered for
        selection as preferred\n        parent.  In any case, a router that succeeded
        in that validation\n        process SHOULD be preferred over one that did
        not succeed.\n   3.   When multiple interfaces are available, a policy might
        be\n        locally configured to order them and that policy applies first;\n
        \       that is, a router on a higher-order interface in the policy is\n        preferable.\n
        \  4.   If the administrative preference of the root is configured to\n        supersede
        the goal to join a Grounded DODAG, a router that\n        offers connectivity
        to a more preferable root SHOULD be\n        preferred.\n   5.   A router
        that offers connectivity to a grounded DODAG Version\n        SHOULD be preferred
        over one that does not.\n   6.   A router that offers connectivity to a more
        preferable root\n        SHOULD be preferred.\n   7.   When comparing two
        parents that belong to the same DODAG, a\n        router that offers connectivity
        to the most recent DODAG Version\n        SHOULD be preferred.\n   8.   The
        parent that causes the lesser resulting Rank for this node,\n        as specified
        in Section 4.1, SHOULD be preferred.\n   9.   A DODAG Version for which there
        is an alternate parent SHOULD be\n        preferred.  This check is OPTIONAL.
        \ It is performed by\n        computing the backup feasible successor while
        assuming that the\n        router that is currently examined is finally selected
        as\n        preferred parent.\n   10.  The preferred parent that was in use
        already SHOULD be\n        preferred.\n   11.  A router that has announced
        a DIO message more recently SHOULD\n        be preferred.\n   These rules
        and their order MAY be varied by an implementation\n   according to configured
        policy.\n"
      title: 4.2.1.  Selection of the Preferred Parent
    - contents:
      - "4.2.2.  Selection of the Backup Feasible Successor\n   When selecting a backup
        feasible successor, the OF performs in order\n   the following checks:\n   1.
        \ The backup feasible successor MUST NOT be the preferred parent.\n   2.  The
        backup feasible successor MUST be either in the same DODAG\n       Version
        as this node or in an subsequent DODAG Version.\n   3.  Along with RPL rules,
        a Router in the same DODAG Version as this\n       node and with a Rank that
        is higher than the Rank computed for\n       this node MUST NOT be selected
        as a feasible successor.\n   4.  A router with a lesser Rank SHOULD be preferred.\n
        \  5.  A router that has been validated as usable by an implementation-\n
        \      dependent validation process SHOULD be preferred.\n   6.  When multiple
        interfaces are available, a router on a higher\n       order interface is
        preferable.\n   7.  The backup feasible successor that was in use already
        SHOULD be\n       preferred.\n   These rules and their order MAY be varied
        by an implementation\n   according to configured policy.\n"
      title: 4.2.2.  Selection of the Backup Feasible Successor
    title: 4.2.  Parent Selection
  title: 4.  OF0 Operations
- contents:
  - "5.  Abstract Interface to OF0\n   Objective Function Zero interacts for its management
    and operations\n   in the following ways:\n   Processing DIO:  When a new DIO
    is received, the OF that corresponds\n      to the Objective Code Point (OCP)
    in the DIO is triggered with the\n      content of the DIO.  OF0 is identified
    by OCP 0 (see Section 8).\n   Providing DAG Information:  The OF0 support provides
    an interface\n      that returns information about a given instance.  This includes\n
    \     material from the DIO base header, the role (router, leaf), and\n      the
    Rank of this node.\n   Providing a Parent List:  The OF0 support provides an interface
    that\n      returns the ordered list of the parents and feasible successors\n
    \     for a given instance to the RPL core.  This includes the material\n      that
    is contained in the transit option for each entry.\n   Triggered Updates:  The
    OF0 support provides events to inform it that\n      a change in DAG information
    or Parent List has occurred.  This can\n      be caused by an interaction with
    another system component such as\n      configuration, timers, and device drivers,
    and the change may\n      cause the RPL core to fire a new DIO or reset Trickle
    timers.\n"
  title: 5.  Abstract Interface to OF0
- contents:
  - "6.  OF0 Operands\n   On top of variables and constants defined in [RFC6550],
    this\n   specification introduces the following variables and constants:\n"
  - contents:
    - "6.1.  Variables\n   OF0 uses the following variables:\n   step_of_rank (strictly
      positive integer):  an intermediate\n      computation based on the link properties
      with a certain neighbor.\n   rank_increase (strictly positive integer):  delta
      between the Rank of\n      the preferred parent and self\n"
    title: 6.1.  Variables
  - contents:
    - "6.2.  Configurable Parameters\n   OF0 can use the following optional configurable
      values that are used\n   as parameters to the rank_increase computation:\n   stretch_of_rank
      (unsigned integer):  the maximum augmentation to the\n      step_of_rank of
      a preferred parent to allow the selection of an\n      additional feasible successor.
      \ If none is configured to the\n      device, then the step_of_rank is not stretched.\n
      \  rank_factor (strictly positive integer):  A configurable factor that\n      is
      used to multiply the effect of the link properties in the\n      rank_increase
      computation.  If none is configured, then a\n      rank_factor of 1 is used.\n"
    title: 6.2.  Configurable Parameters
  - contents:
    - "6.3.  Constants\n   Section 17 of [RFC6550] defines RPL constants.  OF0 fixes
      the values\n   of the following constants:\n   DEFAULT_STEP_OF_RANK:  3\n   MINIMUM_STEP_OF_RANK:
      \ 1\n   MAXIMUM_STEP_OF_RANK:  9\n   DEFAULT_RANK_STRETCH:  0\n   MAXIMUM_RANK_STRETCH:
      \ 5\n   DEFAULT_RANK_FACTOR:  1\n   MINIMUM_RANK_FACTOR:  1\n   MAXIMUM_RANK_FACTOR:
      \ 4\n"
    title: 6.3.  Constants
  title: 6.  OF0 Operands
- contents:
  - "7.  Manageability Considerations\n   Section 18 of [RFC6550] depicts the management
    of the protocol.  This\n   specification inherits from that section and its subsections,
    with\n   the exception that metrics as specified in [RFC6551] are not used and\n
    \  do not require management.\n"
  - contents:
    - "7.1.  Device Configuration\n   An implementation SHOULD allows the configuration
      of at least a\n   global rank_factor that applies to all links.  Additionally,
      the\n   implementation may allow the grouping of interfaces, links, and/or\n
      \  neighbors and configure a more specific rank_factor to such groups.\n   An
      implementation MAY allow the configuration of a maximum\n   stretch_of_rank
      that MUST be less than or equal to\n   MAXIMUM_RANK_STRETCH as discussed in
      Section 4.1.  If none is\n   configured, a value of 0 is assumed and the step_of_rank
      is not\n   stretched.\n   An OF0 implementation SHOULD support the DODAG Configuration
      option\n   as specified in Section 6.7.6 of [RFC6550] and apply the parameters\n
      \  contained therein.  As discussed in Section 16 of [RFC6550], this\n   requirement
      might be overridden by further guidance for certain\n   application scenarios.
      \ When the option is used, the parameters are\n   configured to the nodes that
      may become DODAG roots, and the nodes\n   are configured to redistribute the
      information using the DODAG\n   Configuration option.  In particular, the value
      of MinHopRankIncrease\n   can be distributed with that option and override the
      fixed constant\n   of DEFAULT_MIN_HOP_RANK_INCREASE that is defined in Section
      17 of\n   [RFC6550] with a fixed value of 256.\n   Out of the box, that is at
      initial factory time, the default constant\n   values SHOULD be used, that is:\n
      \     the rank_factor is set to the fixed constant DEFAULT_RANK_FACTOR\n      (Section
      6.3).\n      the maximum stretch_of_rank is set to the fixed constant\n      DEFAULT_RANK_STRETCH
      (Section 6.3).\n      the MinHopRankIncrease is set to the fixed constant\n
      \     DEFAULT_MIN_HOP_RANK_INCREASE ([RFC6550]).\n   The values can be overridden
      at any time and apply at the next\n   Version of the DODAG.  As discussed in
      Section 16 of [RFC6550], this\n   requirement might be overridden by further
      guidance for certain\n   application scenarios.\n"
    title: 7.1.  Device Configuration
  - contents:
    - "7.2.  Device Monitoring\n   As discussed in Section 5, the OF support must
      be able to provide\n   information about its operations and trigger events when
      that\n   information changes.  At a minimum, the information should include:\n
      \     DAG information as specified in Section 6.3.1 of [RFC6550], and\n      including
      the DODAGID, the RPLInstanceID, the Mode of Operation,\n      the Rank of this
      node, the current Version Number, and the value\n      of the Grounded flag.\n
      \     A list of neighbors indicating the preferred parent and an\n      alternate
      feasible if available.  For each neighbor, the Rank, the\n      current Version
      Number, and the value of the Grounded flag should\n      be indicated.\n"
    title: 7.2.  Device Monitoring
  title: 7.  Manageability Considerations
- contents:
  - "8.  IANA Considerations\n   Per this specification, an Objective Code Point (OCP)
    for OF0 has\n   been assigned in the Objective Code Point Registry as described
    in\n   Section 20.5 of [RFC6550].\n   OCP code:  0\n   Description:  A basic Objective
    Function that relies only on the\n                 objects that are defined in
    [RFC6550].\n   Defining RFC:  RFC 6552\n"
  title: 8.  IANA Considerations
- contents:
  - "9.  Security Considerations\n   This specification makes simple extensions to
    RPL and so is\n   vulnerable to and benefits from the security issues and mechanisms\n
    \  described in [RFC6550] and [ROLL-SECURITY].  This document does not\n   introduce
    new flows or new messages; thus, it requires no specific\n   mitigation for new
    threats.\n   OF0 depends on information exchanged in the Rank and OCP protocol\n
    \  elements.  If those elements were compromised, then an implementation\n   of
    OF0 might generate the wrong path for a packet, resulting in it\n   being misrouted.
    \ Therefore, deployments are RECOMMENDED to use RPL\n   security mechanisms if
    there is a risk that routing information might\n   be modified or spoofed.\n"
  title: 9.  Security Considerations
- contents:
  - "10.  Acknowledgements\n   Specific thanks to Philip Levis and Phoebus Chen for
    their help in\n   finalizing this document.\n   Many thanks also to Adrian Farrel,
    Tim Winter, JP. Vasseur, Julien\n   Abeille, Mathilde Durvy, Teco Boot, Navneet
    Agarwal, Meral\n   Shirazipour, and Henning Rogge for in-depth review and first-hand\n
    \  implementers' feedback.\n"
  title: 10.  Acknowledgements
- contents:
  - '11.  References

    '
  - contents:
    - "11.1.  Normative References\n   [RFC2119]        Bradner, S., \"Key words for
      use in RFCs to Indicate\n                    Requirement Levels\", BCP 14, RFC
      2119, March 1997.\n   [RFC6550]        Winter, T., Ed., Thubert, P., Ed., Brandt,
      A., Hui,\n                    J., Kelsey, R., Levis, P., Pister, K., Struik,
      R.,\n                    Vasseur, JP., and R. Alexander, \"RPL: IPv6 Routing\n
      \                   Protocol for Low-Power and Lossy Networks\",\n                    RFC
      6550, March 2012.\n"
    title: 11.1.  Normative References
  - contents:
    - "11.2.  Informative References\n   [DeCouto03]      De Couto, D., Aguayo, D.,
      Bicket, J., and R. Morris,\n                    \"A High-Throughput Path Metric
      for Multi-Hop\n                    Wireless Routing\", MobiCom '03, The 9th
      ACM\n                    International Conference on Mobile Computing and\n
      \                   Networking, San Diego, California, 2003,\n                    <http://pdos.csail.mit.edu/papers/grid:mobicom03/\n
      \                   paper.pdf>.\n   [HYSTERESIS]     Gnawali, O. and P. Levis,
      \"The Minimum Rank\n                    Objective Function with Hysteresis\",
      Work\n                    in Progress, May 2011.\n   [RFC6551]        Vasseur,
      J., Ed., Kim, M., Ed., Pister, K., Dejean,\n                    N., and D. Barthel,
      \"Routing Metrics Used for Path\n                    Calculation in Low-Power
      and Lossy Networks\",\n                    RFC 6551, March 2012.\n   [ROLL-SECURITY]
      \ Tsao, T., Alexander, R., Dohler, M., Daza, V., and\n                    A.
      Lozano, \"A Security Framework for Routing over\n                    Low Power
      and Lossy Networks\", Work in Progress,\n                    March 2012.\n   [ROLL-TERMS]
      \    Vasseur, JP., \"Terminology in Low power And Lossy\n                    Networks\",
      Work in Progress, September 2011.\n"
    title: 11.2.  Informative References
  title: 11.  References
- contents:
  - "Author's Address\n   Pascal Thubert (editor)\n   Cisco Systems\n   Village d'Entreprises
    Green Side\n   400, Avenue de Roumanille\n   Batiment T3\n   Biot - Sophia Antipolis
    \ 06410\n   FRANCE\n   Phone: +33 497 23 26 34\n   EMail: pthubert@cisco.com\n"
  title: Author's Address
