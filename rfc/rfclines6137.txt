The Network Trouble Ticket Data Model (NTTDM)
Abstract Handling multiple sets of network trouble tickets (TTs) originating from different participants' inter connected network environments poses a series of challenges for the involved institutions.
A Grid is a good example of such a multi domain project.
Each of the participants follows different procedures for handling trouble in its domain, according to the local technical and linguistic profile.
The TT systems of the participants collect, represent, and disseminate TT information in different formats.
As a result, management of the daily workload by a central Network Operation Centre (NOC) is a challenge on its own.
Normalization of TTs to a common format at the central NOC can ease presentation, storing, and handling of the TTs.
In the present document, we provide a model for automating the collection and normalization of the TT received by multiple networks forming the Grid.
Each of the participants is using its home TT system within its domain for handling trouble incidents, whereas the central NOC is gathering the tickets in the normalized format for repository and handling.
XML is used as the common representation language.
The model was defined and used as part of the networking support activity of the EGEE (Enabling Grids for E sciencE) project.
Introduction Problem impact assessment, reporting, identification, and handling, as well as dissemination of trouble information and delegation of authority, are some of the main tasks that have to be implemented by the members of a Grid in order to successfully manage the network and maintain operational efficiency of the services offered to their users.
Different TT systems are used by each network domain, delivering TTs in alternate formats, while the TT load is growing proportionally with network size and serviced users.
We hereby define a data model for TT normalization
the Network Trouble Ticket Data Model (NTTDM)   initially targeted for network providers serving EGEE [8].
The model is designed in accordance with RFC 1297 [11] and meets requirements of the multiple TT systems used.
The NTTDM  is both effective and comprehensive, as it compensates for the core activities of the Network Operation Centres (NOCs).
It is also dynamic, allowing additional options to be included in the future, according to demand.
provides an XML representation for conveying incident information across administrative domains between parties that have an operational responsibility of remediation or a "watch and warn" policy over a defined constituency.
encodes information about hosts, networks, and the services running on these systems; attack methodology and associated forensic evidence; impact of the activity; and limited approaches for documenting workflow.
aims to simplify TT exchange within the boundaries of a Grid and to enhance the functional cooperation of every NOC and of the Grid Operation Centre (GOC).
Community adoption of the NTTDM enhances trouble resolution within the Grid framework and imparts network status cognizance by modeling collaboration and information exchange among operators.
provides a common format that allows GOCs as well as all participating NOCs to store, exchange, manage, and analyze TTs (assessment of TT impact).
provides increased automation in handling a TT, since the network operators have a common view of the incident.
The model was designed and used as part of the networking support activity of the EGEE project; one of the subtasks of this support activity was to enhance the ENOC (EGEE Network Operation Centre)
[9] procedures for better overall network coordination of the Grid.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119 [1].
The NTTDM uses specific keywords to describe the various data components.
These keywords are: Defined, Free, Multiple, List, Predefined String, String, Datetime, Solved, Cancelled, Inactive, Superseded, Opened/Closed, Operational, Informational, Administrative, and Test.
These keywords as used in this document are to be interpreted as described in Section 2.
Grid Operation Centre NREN:  National Research and Educational Network
The NTTDM is specified in two ways: as an abstract data model and as an XML Schema.
Section 3 provides a Unified Modeling Language (UML) [10] model describing the individual classes and their relationship with each other.
The semantics of each class are discussed and their attributes explained.
In Section 6, this UML model is converted into an XML Schema [2] [3] [4] [5].
A specific namespace [6] is also defined.
The term "XML document" refers to any instance of an XML Document.
The term "NTTDM document" refers to specific elements and attributes of the NTTDM Schema.
Finally, the terms "class" and "element" are used interchangeably to reference either a given UML class in the data model or its corresponding Schema implementation.
About the Network Trouble Ticket Data Model
The NTTDM is a data representation that provides a framework for normalizing and sharing information among network operators and the GOC regarding troubles within the Grid boundaries.
There has been a lot of thought processing during the design of the data model:
The data model serves as a common storage and exchange format.
Every NOC still uses its home TT system for network management within its area of control.
As there is no universally adopted definition for a trouble, in the NTTDM definition, the term is used with a comprehensive meaning to cover all NOCs.
Handling every possible definition of a trouble incident would call for an extremely expanded and complex data model.
Therefore, the NTTDM's purpose is to serve as the basis for normalizing and exchanging TTs.
It is flexible and expressive in order to ensure that specific NOC requirements are met.
Specific NOC information is kept outside the NTTDM, and external databases can be used to feed it.
The domain of managing the information is not fully standardized and must rely on free form textual descriptions.
The NTTDM attempts to strike a balance between supporting this free form content, while still allowing automated processing of incident information.
The NTTDM is only one of several feasible TT data representations.
The goal of this design was to be as effective and comprehensive as these other representations and to account for the management of a general Grid environment.
The already used TT formats influenced the design of the NTTDM.
About the Network Trouble Ticket Implementation
Here we describe an example of a typical use case.
The Grid project EGEE manages its infrastructure as a network overlay over the European National Research and Educational Networks (NRENs) and wants to be able to warn EGEE sites of the unavailability of the network.
Thanks to collaboration with its network provider, the EGEE NOC receives a high volume of TTs (800 tickets/month, 2500 emails/month) from 20 NRENs and should always be able to cope with such a heavy load.
Thanks to the NTTDM, the EGEE NOC can automate the TT workflow:
The TT is filtered, sorted, and stored in a local database (DB).
The TT's impact on the Grid is assessed.
The TT is pushed to an ENOC dashboard application and other tools (EGEE TT system, statistics, etc.).
Since this is an Experimental document, operational experience will be used to expand the subsections of Section 3.2.3, "Ticket Origin Information", below.
The current specification is already used within EGEE.
Other Grids are free to use it and report comments to the authors.
After enough experimentation, we would like to advance it to the Standards Track.
The various data elements of the TT data model are typed.
This section discusses these data types.
When possible, native Schema data types were adopted, but for more complicated formats, regular expressions or external standards were used.
Types and Definitions for the TYPE Attribute
These types are used to describe the TYPE attribute.
The Defined data type means that the data model provides a means to compute this value from the rest of the fields.
The Defined data type is implemented as "Defined" in the Schema.
The Free data type means that the value can be freely chosen.
All Free strings SHOULD have as an attribute the language used.
The Free data type is implemented as "Free" in the Schema.
The Multiple data type consists of one value among multiple fixed values.
The Multiple data type is implemented as "Multiple" in the Schema.
List "List" means many values among multiple fixed values.
The List data type is implemented as "List" in the Schema.
Types and Definitions for the VALID FORMAT Attributes 2.2.1.
Predefined String A Predefined String means the different values are predefined in the data model.
Each field that requires a Predefined String contains a specific value.
Figure 1 shows the allowed values for such fields.
The Predefined String data type is implemented as "xs:string" in the Schema with a sequence of enumerations for the allowed values.
Definitions of the Predefined Values
Operational: for network incident and maintenance only.
Informational: information about the TT system or the exchange interface (maintenance, upgrade).
Administrative: information about the access to the TT system (credentials) or the exchange interface.
Test: to test the TT system or the exchange interface, etc.
Scheduled: the incident was scheduled to happen.
Unscheduled: the incident was unscheduled.
Low: the TT priority is low.
Medium: the TT priority is medium.
High: the TT priority is high.
Core Line Fault: malfunction of a high bandwidth core line.
Access Line Fault: malfunction of a medium bandwidth access line.
Router Hardware Fault: malfunction of the router hardware.
Router Software Fault: malfunction of the router software.
: incident regarding the routing service.
Undefined Problem: nature of the problem not identified.
Network Congestion: problem due to traffic at the network (blocked).
Client Upgrade: incidents regarding client/services upgrade.
: incident regarding the IPv6 network.
: incident regarding the Quality of Service (QoS) of the network.
: incident regarding Voice over IP (VoIP).
No impact: the incident does not cause any impacts.
Reduced redundancy: the incident reduces network redundancy.
Minor performance impact: the incident causes a minor performance impact.
Severe performance impact: the incident causes a severe performance impact.
No connectivity: the incident causes connectivity failure.
On backup: the incident causes a malfunction of backup services.
At risk: the incident should not have any impact but could possibly cause some trouble.
the nature of the impact is not identified.
Opened: the ticket is opened.
Closed: the ticket is closed.
Updated: the ticket's contents have been updated.
Cancelled: the ticket has been opened twice; one of the tickets is cancelled, and a relationship between them is defined via the RELATED ACTIVITY field.
Solved: the incident is solved, but the team prefers to monitor/check for future issues.
/Closed: the ticket was opened only to report an incident that has already been solved.
the ticket is under the responsibility of an external domain and is no longer under the reporting domain's control.
Reopened: the ticket was closed by error, or the problem was erroneously declared to be solved.
Data in the History field are very important in this case.
Superseded: the ticket has been superseded by another one (for example, a bigger problem that had resulted in many tickets was later merged into a single incident/ticket).
The RELATED ACTIVITY field SHOULD include the master ticket reference.
Allowed transitions for TT STATUS are only those indicated in Figure 2.
Possible final states are indicated with (X).
TT STATUS Transition Diagram 2.2.2.
The String value is defined by the user of the model.
The String data type is implemented as "xs:string" in the Schema.
Datetime Date time strings are represented by the Datetime data type.
Each date time string identifies a particular instant in time; ranges are not supported.
Date time strings are formatted according to a subset of ISO 8601:2000 as documented in RFC 3339.
The Datetime data type is implemented as "xs:dateTime" in the Schema.
In this section, the individual components of the NTTDM will be discussed in detail.
This class provides a standardized representation for commonly exchanged Field Name data.
The Field Name class has four attributes.
Each attribute provides information about a Field Name instance.
The attributes that characterize one instance constitute all the information required to form the data model.
This field contains a short description of the Field Name.
The TYPE attribute contains information about the type of the Field Name it depends on.
The values that it may contain are: Defined, Free, Multiple, and List.
This attribute contains information about the format of each field.
The values that it may contain are: Predefined String, String, and Datetime.
This attribute indicates whether the information of each field is required or optional.
If the information is required, the MANDATORY field contains the word "YES".
If the information is optional, the MANDATORY field contains the word "NO".
The NTTDM Document class is the top level class in the NTTDM.
All NTTDM documents are an instance of this class.
The aggregate class that constitutes an NTTDM Document is: Ticket One or more.
The information related to a single ticket.
The NTTDM Document class has two attributes: version STRING.
The value of this attribute MUST be "1.00".
Every ticket is represented by an instance of the Ticket class.
This class provides a standardized representation for commonly exchanged TT data.
The Ticket Class lang Required.
The Field Names are the Aggregate Classes that constitute the NTTDM, and each of them is an element that is characterized by a quadruple (DESCRIPTION, TYPE, VALID FORMAT, MANDATORY).
The unique ID of the TT source partner.
The TT ID that was assigned by the party.
The unique ID of the TT.
TT ID Class TYPE is constructed as "PARTNER ID" "ORIGINAL ID".
PARTNER ID and ORIGINAL ID therefore MUST NOT contain an underscore character.
The title of the TT.
The type of the TT.
The source of the ticket.
The date and time when the TT was opened.
TT Open Datetime Class 3.2.4.8.
The date and time when the TT was closed.
TT Close Datetime Class 3.2.5.
The short description of the trouble.
TT Short Description Class 3.2.5.2.
TT Long Description Class 3.2.5.3.
The type of the trouble.
The impact of the incident/maintenance.
TT Impact Assessment Class 3.2.5.5.
TT Last Update Time Class 3.2.5.10.
No, unless TYPE is "Scheduled".
Time Window Start Class 3.2.5.11.
No, unless TYPE is "Scheduled".
Time Window End Class 3.2.5.12.
Work Plan Start Datetime Class 3.2.5.13.
Work Plan End Datetime Class
The period delimited by WORK PLAN START DATETIME and WORK PLAN END DATETIME MUST be included in the period delimited by TIME WINDOW START and TIME WINDOW END, and duplicated with {START, END} DATETIME, even in case of maintenance.
The NOC entity related to the incident.
Related External Tickets Class 3.2.6.2.
The TT IDs of the related incidents.
History Class Note: This field MUST NOT be empty when the VALID FORMAT attribute of the TT STATUS field is anything other than "OPENED" or "OPENED/CLOSED".
The NOC network node related to the incident.
A end of the link.
End Line Location B Class 3.2.8.
The engineer that opened the ticket.
The engineer that closed the ticket.
The collected and processed TTs received from multiple telecommunications networks are adjusted in a normalized NTTDM.
Figure 43 shows the representation of this normalized data model.
The "DESCRIPTION" attribute is implied.
The Field Name Class 4.
Internationalization Issues Internationalization and localization are of specific concern to the NTTDM, since it is only through collaboration, often across language barriers, that certain incidents can be resolved.
The NTTDM supports this goal by depending on XML constructs, and through explicit design choices in the data model.
The main advantage of the model is that it provides a normalized data type that is implemented fully in the English language and can be used conveniently.
It also supports free formed text that can be written in any language.
In the future, it will provide translation services for all such free formed text.
In this section, an example of network TTs exchanged using the proposed format is provided.
This is an actual GRNet ticket normalized according to the NTTDM.
Fields that were not included in the ticket are left blank.
xml version "1.0" encoding "UTF 8"?
This example describes a link failure that was detected
<NTTDM Document version "1.00" lang "el" xmlns "urn:ietf:params:xml:ns:nttdm 1.0"> <Ticket
>Core Line Fault</TT Short Description
>Forth Link Failure</TT Long Description
<History>Optical transmitter was changed</History> <
> <End Datetime>2008 12 16T15:01:21 02:00</End
> <Open Engineer>Dimitris Zisiadis</Open Engineer
> <Close Engineer>Guillaume Cessieux</Close Engineer
> </Contact Engineers> <TT Priority
This section provides a sample XML Schema of the NTTDM.
xml version "1.0" encoding "UTF 8" ?
nttdm 0.1" xmlns:nttdm "urn:ietf:params:xml:ns:nttdm 1.0" xmlns:
xs "http://www.w3.org/2001/XMLSchema" targetNamespace "urn:ietf:params:xml:ns:nttdm 1.0
" elementFormDefault "qualified" attributeFormDefault "unqualified"> <xs:annotation> <xs:documentation >
Trouble Ticket Data Model v 1.0</xs:documentation
<xs:element ref "nttdm:Ticket" maxOccurs "
<xs:attribute name "version" type "xs:
<xs:attribute name "lang" type "xs:language" use "required"/
> <xs:element ref "nttdm:TT Priority" minOccurs "
element ref "nttdm:TT Close Datetime"/
> <xs:element ref "nttdm:TT Last Update
Time Window Start" minOccurs "
element ref "nttdm:Time Window End" minOccurs "0"/
> <xs:element ref "nttdm:Work Plan Start Datetime" minOccurs "
Work Plan End Datetime" minOccurs "
element ref "nttdm:Related External Tickets" minOccurs "0"/
element ref "nttdm:Additional Data" minOccurs "0"/
element ref "nttdm:Related Activity" minOccurs "0"/
element ref "nttdm:Affected Community" minOccurs "0"/
element ref "nttdm:Affected Service" minOccurs "0"/
<xs:element ref "nttdm:Network Link Circuit" minOccurs "
element ref "nttdm:End Line Location B" minOccurs "0"/
> <xs:element ref "nttdm:Open Engineer" minOccurs "
<xs:element ref "nttdm:Close Engineer" minOccurs "
element ref "nttdm:End Line Location A" minOccurs "0"/
all> <xs:attribute name "lang" type "xs:language"/
element name "Original ID" type "nttdm:string
element name "TT Title" type "xs:
element name "TT Type" type "nttdm:
element name "TT Priority" type "nttdm:eTT Priority"/
element name "TT Open Datetime" type "xs:dateTime"/
element name "TT Close Datetime" type "xs:dateTime"/
element name "TT Short Description" type "nttdm:
element name "TT Long Description" type "xs:
element name "TT Impact Assessment" type "nttdm:
element name "Start Datetime" type "xs:dateTime"/
element name "Detect Datetime" type "xs:dateTime"/
element name "TT Last Update Time" type "xs:dateTime"/
element name "Time Window Start" type "xs:dateTime"/
element name "Time Window End" type "xs:dateTime"/
Work Plan Start Datetime Class
<xs:element name "Work Plan Start Datetime" type "
element name "Work Plan End Datetime" type "xs:dateTime"/
element name "Additional Data" type "xs:
element name "Related Activity" type "nttdm:eRelated Activity"/
element name "Affected Community" type "xs:
element name "Affected Service" type "xs:
element name "Network Link Circuit" type "nttdm:eNetwork Link
End Line Location B Class
element name "End Line Location B" type "xs:
element name "Open Engineer" type "xs:
element name "Close Engineer" type "xs:
element name "Hash" type "xs:
simpleType name "string no underscore">
restriction base "xs:string"> <xs:pattern value "
complexType name "eRelated External Tickets"> <xs:sequence
element name "TTid" type "xs:string" minOccurs "0
<xs:element name "TT" type "xs:string" minOccurs "0
"Node" type "xs:string" minOccurs "0" maxOccurs "unbounded"/
complexType name "eNetwork Link Circuit">
element name "Link Circuit" type "xs:string" minOccurs "0
"Engineer" type "xs:string" minOccurs "0" maxOccurs "unbounded"/
> <xs:simpleType name "eTT Type">
restriction base "xs:string"> <xs:enumeration value "Operational"/
restriction base "xs:string"> <xs:enumeration value "Scheduled"/
> <xs:simpleType name "eTT Priority"> <xs:restriction base "xs:string"> <xs:enumeration value "Low"/
Short Description"> <xs:restriction base "xs:string"> <xs:enumeration value "Core Line Fault"/
<xs:enumeration value "Access Line Fault"/
<xs:enumeration value "Router Software Fault"/
eTT Impact Assessment"> <xs:restriction base "xs:string"> <xs:enumeration value "
enumeration value "Severe performance impact"/>
> <xs:simpleType name "eTT Status"> <xs:
restriction base "xs:string"> <xs:enumeration value "Opened"/
> <xs:simpleType name "eTT Source"> <xs:
restriction base "xs:string"> <xs:enumeration value "Users"/
The NTTDM data model defines a data model and the relevant XML Schema for trouble ticket normalization; as such, the NTTDM itself does not raise any security concerns.
However, some security issues SHOULD be considered as network TTs could carry sensitive information (IP addresses, contact details, authentication details, commercial providers involved, etc.)
The security considerations MAY involve measures during the exchange as well as during processing of the information.
The HASH field is intended to provide an integrity insurance attribute within the exchanged tickets; however, it alone does not ensure integrity.
Confidentiality MAY be ensured by encrypting whole tickets or only some parts of them.
This could permit meaningful tickets to be disclosed, while only sensitive information would be protected.
Peer entity authentication SHOULD be provided in order to establish a session with data origin authentication, regardless of the form in which the TTs are exchanged   being delivered either through email, web forms, or through a Simple Object Access Protocol (SOAP) service.
SOAP is considered the better choice; the model itself, though, does not specify the communications requirements.
The underlying communications service MUST provide guarantees to properly address integrity, confidentiality, and peer entity authentication.
The selection of the enforcing mechanisms is not in the scope of this document, and the choice is up to the implementers.
For data processing security, each participating organization MAY use its own privacy policy, as part of its own data processing system.
This approach avoids any interoperability issues and does not pose any extra burden for the adoption of the current scheme into the operational procedures of the NOCs.
Unauthorized and inappropriate usage MUST be avoided.
This document uses URNs to describe an XML namespace and Schema conforming to a registry mechanism described in [7].
Registration for the NTTDM namespace:
: See the first author listed in the "Authors' Addresses" section of this document.
Namespace URIs do not represent an XML specification.
Registration for the NTTDM XML Schema:  URI:
See the first author listed in the "Authors' Addresses" section of this document.
: See the XML Schema in Section 6 of this document.
Contributors Leandros Tassiulas Centre for
Research and Technology Hellas 6th km Thermi Thessaloniki, 57001 Hellas EMail: leandros@uth.gr Chrysostomos Tziouvaras Greek Research and Technology Network 56, Mesogion Av.
Xavier Jeannin National Centre for Scientific Research Network Unit UREC France EMail: Xavier.Jeannin@urec.cnrs.fr
