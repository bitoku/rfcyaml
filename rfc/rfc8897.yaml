- title: __initial_text__
  contents:
  - '   Requirements for Resource Public Key Infrastructure (RPKI) Relying

    '
- title: Abstract
  contents:
  - "Abstract\n   This document provides a single reference point for requirements\
    \ for\n   Relying Party (RP) software for use in the Resource Public Key\n   Infrastructure\
    \ (RPKI).  It cites requirements that appear in several\n   RPKI RFCs, making\
    \ it easier for implementers to become aware of these\n   requirements.  Over\
    \ time, this RFC will be updated to reflect changes\n   to the requirements and\
    \ guidance specified in the RFCs discussed\n   herein.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are candidates for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   https://www.rfc-editor.org/info/rfc8897.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2020 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction\n   2.  Fetching and Caching RPKI Repository\
    \ Objects\n     2.1.  TAL Configuration and Processing\n     2.2.  Locating RPKI\
    \ Objects Using Authority and Subject\n           Information Extensions\n   \
    \  2.3.  Dealing with Key Rollover\n     2.4.  Dealing with Algorithm Transition\n\
    \     2.5.  Strategies for Efficient Cache Maintenance\n   3.  Certificate and\
    \ CRL Processing\n     3.1.  Verifying Resource Certificate and Syntax\n     3.2.\
    \  Certificate Path Validation\n     3.3.  CRL Processing\n   4.  Processing RPKI\
    \ Repository Signed Objects\n     4.1.  Basic Signed Object Syntax Checks\n  \
    \   4.2.  Syntax and Validation for Each Type of Signed Object\n       4.2.1.\
    \  Manifest\n       4.2.2.  ROA\n       4.2.3.  Ghostbusters\n       4.2.4.  Verifying\
    \ BGPsec Router Certificate\n     4.3.  How to Make Use of Manifest Data\n   \
    \  4.4.  What To Do with Ghostbusters Information\n   5.  Distributing Validated\
    \ Cache\n   6.  Local Control\n   7.  Security Considerations\n   8.  IANA Considerations\n\
    \   9.  References\n     9.1.  Normative References\n     9.2.  Informative References\n\
    \   Acknowledgements\n   Authors' Addresses\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   RPKI Relying Party (RP) software is used by network operators\
    \ and\n   others to acquire and verify Internet Number Resource (INR) data\n \
    \  stored in the RPKI repository system.  RPKI data, when verified,\n   allows\
    \ an RP to verify assertions about which Autonomous Systems\n   (ASes) are authorized\
    \ to originate routes for IP address prefixes.\n   RPKI data also establishes\
    \ a binding between public keys and BGP\n   routers and indicates the AS numbers\
    \ that each router is authorized\n   to represent.\n   The essential requirements\
    \ imposed on RP software to support secure\n   Internet routing [RFC6480] are\
    \ scattered throughout numerous\n   protocol-specific RFCs and Best Current Practice\
    \ RFCs.  The following\n   RFCs define these requirements:\n      RFC 6481 (Repository\
    \ Structure)\n      RFC 6482 (ROA format)\n      RFC 6486 (Manifests)\n      RFC\
    \ 6487 (Certificate and CRL profile)\n      RFC 6488 (RPKI Signed Objects)\n \
    \     RFC 6489 (Key Rollover)\n      RFC 6810 (RPKI to Router Protocol)\n    \
    \  RFC 6916 (Algorithm Agility)\n      RFC 7935 (Algorithms)\n      RFC 8209 (Router\
    \ Certificates)\n      RFC 8210 (RPKI to Router Protocol, Version 1)\n      RFC\
    \ 8360 (Certificate Validation Procedure)\n      RFC 8630 (Trust Anchor Locator)\n\
    \   The distribution of RPKI RP requirements across these 13 documents\n   makes\
    \ it hard for an implementer to be confident that he/she has\n   addressed all\
    \ of these requirements.  Additionally, good software\n   engineering practice\
    \ may call for segmenting the RP system into\n   components with orthogonal functionalities\
    \ so that those components\n   may be distributed.  A taxonomy of the collected\
    \ RP software\n   requirements can help clarify the role of the RP.\n   To consolidate\
    \ RP software requirements in one document, with\n   pointers to all the relevant\
    \ RFCs, this document outlines a set of\n   baseline requirements imposed on RPs\
    \ and provides a single reference\n   point for requirements for RP software for\
    \ use in the RPKI.  The\n   requirements are organized into four groups:\n   *\
    \  Fetching and Caching RPKI Repository Objects\n   *  Processing Certificates\
    \ and Certificate Revocation Lists (CRLs)\n   *  Processing RPKI Repository Signed\
    \ Objects\n   *  Distributing Validated Cache of the RPKI Data\n   This document\
    \ will be updated to reflect new or changed requirements\n   as these RFCs are\
    \ updated or additional RFCs are written.\n"
- title: 2.  Fetching and Caching RPKI Repository Objects
  contents:
  - "2.  Fetching and Caching RPKI Repository Objects\n   RP software uses synchronization\
    \ mechanisms supported by targeted\n   repositories (e.g., [rsync] or RRDP [RFC8182])\
    \ to download RPKI\n   signed objects from the repository system in order to update\
    \ a local\n   cache.  These mechanisms download only those objects that have been\n\
    \   added or replaced with new versions since the time when the RP most\n   recently\
    \ checked the repository.  RP software validates the RPKI data\n   and uses it\
    \ to generate authenticated data identifying which ASes are\n   authorized to\
    \ originate routes for address prefixes and which routers\n   are authorized to\
    \ sign BGP updates on behalf of specified ASes.\n"
- title: 2.1.  TAL Configuration and Processing
  contents:
  - "2.1.  TAL Configuration and Processing\n   In the RPKI, each RP chooses a set\
    \ of trust anchors (TAs).\n   Consistent with the extant INR allocation hierarchy,\
    \ the IANA and/or\n   the five Regional Internet Registries (RIRs) are obvious\
    \ candidates\n   to be default TAs for the RP.\n   An RP does not retrieve TAs\
    \ directly.  A set of Trust Anchor Locators\n   (TALs) is used by RP software\
    \ to retrieve and verify the authenticity\n   of each TA.\n   TAL configuration\
    \ and processing are specified in Section 3 of\n   [RFC8630].\n"
- title: 2.2.  Locating RPKI Objects Using Authority and Subject Information
  contents:
  - "2.2.  Locating RPKI Objects Using Authority and Subject Information\n      Extensions\n\
    \   The RPKI repository system is a distributed one, consisting of\n   multiple\
    \ repository instances.  Each repository instance contains one\n   or more repository\
    \ publication points.  RP software discovers\n   publication points using the\
    \ Subject Information Access (SIA) and the\n   Authority Information Access (AIA)\
    \ extensions from (validated)\n   certificates.\n   Section 5 of [RFC6481] specifies\
    \ how RP software locates all RPKI\n   objects by using the SIA and AIA extensions.\
    \  Detailed specifications\n   of SIA and AIA extensions in a resource certificate\
    \ are described in\n   Sections 4.8.8 and 4.8.7 of [RFC6487], respectively.\n"
- title: 2.3.  Dealing with Key Rollover
  contents:
  - "2.3.  Dealing with Key Rollover\n   RP software takes the key rollover period\
    \ into account with regard to\n   its frequency of synchronization with the RPKI\
    \ repository system.\n   RP software requirements for dealing with key rollover\
    \ are described\n   in Section 3 of [RFC6489] and Section 3 of [RFC8634].\n"
- title: 2.4.  Dealing with Algorithm Transition
  contents:
  - "2.4.  Dealing with Algorithm Transition\n   The set of cryptographic algorithms\
    \ used with the RPKI is expected to\n   change over time.  Each RP is expected\
    \ to be aware of the milestones\n   established for the algorithm transition and\
    \ what actions are\n   required at every juncture.\n   RP software requirements\
    \ for dealing with algorithm transition are\n   specified in Section 4 of [RFC6916].\n"
- title: 2.5.  Strategies for Efficient Cache Maintenance
  contents:
  - "2.5.  Strategies for Efficient Cache Maintenance\n   Each RP is expected to maintain\
    \ a local cache of RPKI objects.  The\n   cache needs to be brought up to date\
    \ and made consistent with the\n   repository publication point data as frequently\
    \ as allowed by\n   repository publication points and by locally selected RP processing\n\
    \   constraints.\n   The last paragraph of Section 5 of [RFC6481] provides guidance\
    \ for\n   maintenance of a local cache.\n"
- title: 3.  Certificate and CRL Processing
  contents:
  - "3.  Certificate and CRL Processing\n   The RPKI makes use of X.509 certificates\
    \ and CRLs, but it profiles\n   the standard formats described in [RFC6487]. \
    \ The major change to the\n   profile established in [RFC5280] is the mandatory\
    \ use of a new\n   extension in RPKI certificates, defined in [RFC3779].\n"
- title: 3.1.  Verifying Resource Certificate and Syntax
  contents:
  - "3.1.  Verifying Resource Certificate and Syntax\n   Certificates in the RPKI\
    \ are called resource certificates, and they\n   are required to conform to the\
    \ profile described in [RFC6487].  An RP\n   is required to verify that a resource\
    \ certificate adheres to the\n   profile established by Section 4 of [RFC6487].\
    \  This means that all\n   extensions mandated by Section 4.8 of [RFC6487] must\
    \ be present and\n   the value of each extension must be within the range specified\
    \ by\n   [RFC6487].  Moreover, any extension excluded by Section 4.8 of\n   [RFC6487]\
    \ must be omitted.\n   Section 7.1 of [RFC6487] specifies the procedure that RP\
    \ software\n   follows when verifying extensions described in [RFC3779].\n"
- title: 3.2.  Certificate Path Validation
  contents:
  - "3.2.  Certificate Path Validation\n   Initially, the INRs in the issuer's certificate\
    \ are required to\n   encompass the INRs in the subject's certificate.  This is\
    \ one of the\n   necessary principles of certificate path validation in addition\
    \ to\n   cryptographic verification (i.e., verification of the signature on\n\
    \   each certificate using the public key of the parent certificate).\n   Section\
    \ 7.2 of [RFC6487] specifies the procedure that RP software\n   should follow\
    \ to perform certificate path validation.\n   Certification Authorities (CAs)\
    \ that want to reduce aspects of\n   operational fragility will migrate to the\
    \ new OIDs [RFC8360],\n   informing RP software to use an alternative RPKI validation\n\
    \   algorithm.  An RP is expected to support the amended procedure to\n   handle\
    \ accidental overclaiming, which is described in Section 4 of\n   [RFC8360].\n"
- title: 3.3.  CRL Processing
  contents:
  - "3.3.  CRL Processing\n   The CRL processing requirements imposed on CAs and RPs\
    \ are described\n   in Section 5 of [RFC6487].  CRLs in the RPKI are tightly constrained;\n\
    \   only the AuthorityKeyIdentifier (Section 4.8.3 of [RFC6487]) and\n   CRLNumber\
    \ (Section 5.2.3 of [RFC5280]) extensions are allowed, and\n   they are required\
    \ to be present.  No other CRL extensions are\n   allowed, and no CRLEntry extensions\
    \ are permitted.  RP software is\n   required to verify that these constraints\
    \ have been met.  Each CRL in\n   the RPKI must be verified using the public key\
    \ from the certificate\n   of the CA that issued the CRL.\n   In the RPKI, RPs\
    \ are expected to pay extra attention when dealing\n   with a CRL that is not\
    \ consistent with the manifest associated with\n   the publication point associated\
    \ with the CRL.\n   Processing of a CRL that is not consistent with a manifest\
    \ is a\n   matter of local policy, as described in the fifth paragraph of\n  \
    \ Section 6.6 of [RFC6486].\n"
- title: 4.  Processing RPKI Repository Signed Objects
  contents:
  - '4.  Processing RPKI Repository Signed Objects

    '
- title: 4.1.  Basic Signed Object Syntax Checks
  contents:
  - "4.1.  Basic Signed Object Syntax Checks\n   Before an RP can use a signed object\
    \ from the RPKI repository, RP\n   software is required to check the signed-object\
    \ syntax.\n   Section 3 of [RFC6488] lists all the steps that RP software is\n\
    \   required to execute in order to validate the top-level syntax of a\n   repository\
    \ signed object.\n   Note that these checks are necessary but not sufficient.\
    \  Additional\n   validation checks must be performed based on the specific type\
    \ of\n   signed object, as described in Section 4.2.\n"
- title: 4.2.  Syntax and Validation for Each Type of Signed Object
  contents:
  - '4.2.  Syntax and Validation for Each Type of Signed Object

    '
- title: 4.2.1.  Manifest
  contents:
  - "4.2.1.  Manifest\n   To determine whether a manifest is valid, RP software is\
    \ required to\n   perform manifest-specific checks in addition to the generic\
    \ signed-\n   object checks specified in [RFC6488].\n   Specific checks for a\
    \ manifest are described in Section 4 of\n   [RFC6486].  If any of these checks\
    \ fail, indicating that the manifest\n   is invalid, then the manifest will be\
    \ discarded, and RP software will\n   act as though no manifest were present.\n"
- title: 4.2.2.  ROA
  contents:
  - "4.2.2.  ROA\n   To validate a Route Origin Authorization (ROA), RP software is\n\
    \   required to perform all the checks specified in [RFC6488] as well as\n   additional,\
    \ ROA-specific validation steps.  The IP Address Delegation\n   extension [RFC3779]\
    \ present in the end-entity (EE) certificate\n   (contained within the ROA) must\
    \ encompass each of the IP address\n   prefix(es) in the ROA.\n   More details\
    \ for ROA validation are specified in Section 4 of\n   [RFC6482].\n"
- title: 4.2.3.  Ghostbusters
  contents:
  - "4.2.3.  Ghostbusters\n   The Ghostbusters Record is optional; a publication point\
    \ in the RPKI\n   can have zero or more associated Ghostbusters Records.  If a\
    \ CA has\n   at least one Ghostbusters Record, RP software is required to verify\n\
    \   that this Ghostbusters Record conforms to the syntax of signed\n   objects\
    \ defined in [RFC6488].\n   The payload of this signed object is a (severely)\
    \ profiled vCard.  RP\n   software is required to verify that the payload of Ghostbusters\n\
    \   conforms to format as profiled in [RFC6493].\n"
- title: 4.2.4.  Verifying BGPsec Router Certificate
  contents:
  - "4.2.4.  Verifying BGPsec Router Certificate\n   A BGPsec Router Certificate is\
    \ a resource certificate, so it is\n   required to comply with [RFC6487].  Additionally,\
    \ the certificate\n   must contain an AS Identifier Delegation extension (Section\
    \ 4.8.11 of\n   [RFC6487]) and must not contain an IP Address Delegation extension\n\
    \   (Section 4.8.10 of [RFC6487]).  The validation procedure used for\n   BGPsec\
    \ Router Certificates is analogous to the validation procedure\n   described in\
    \ Section 7 of [RFC6487], but it uses the constraints\n   defined in Section 3\
    \ of [RFC8209].\n   Note that the cryptographic algorithms used by BGPsec routers\
    \ are\n   found in [RFC8608].  Currently, the algorithms specified in [RFC8608]\n\
    \   and [RFC7935] are different.  BGPsec RP software will need to support\n  \
    \ algorithms that are used to validate BGPsec signatures as well as the\n   algorithms\
    \ that are needed to validate signatures on BGPsec\n   certificates, RPKI CA certificates,\
    \ and RPKI CRLs.\n"
- title: 4.3.  How to Make Use of Manifest Data
  contents:
  - "4.3.  How to Make Use of Manifest Data\n   For a given publication point, RP\
    \ software ought to perform tests, as\n   specified in Section 6.1 of [RFC6486],\
    \ to determine the state of the\n   manifest at the publication point.  A manifest\
    \ can be classified as\n   either valid or invalid, and a valid manifest is either\
    \ current or\n   stale.  An RP decides how to make use of a manifest based on\
    \ its\n   state, according to local (RP) policy.\n   If there are valid objects\
    \ in a publication point that are not\n   present on a manifest, [RFC6486] does\
    \ not mandate specific RP\n   behavior with respect to such objects.\n   In the\
    \ absence of a manifest, an RP is expected to accept all valid\n   signed objects\
    \ present in the publication point (see Section 6.2 of\n   [RFC6486]).  If a manifest\
    \ is stale or invalid and an RP has no way\n   to acquire a more recent valid\
    \ manifest, the RP is expected to\n   contact the repository manager via Ghostbusters\
    \ Records and\n   thereafter make decisions according to local (RP) policy (see\n\
    \   Sections 6.3 and 6.4 of [RFC6486]).\n"
- title: 4.4.  What To Do with Ghostbusters Information
  contents:
  - "4.4.  What To Do with Ghostbusters Information\n   RP software may encounter\
    \ a stale manifest or CRL, or an expired CA\n   certificate or ROA at a publication\
    \ point.  An RP is expected to use\n   the information from the Ghostbusters Records\
    \ to contact the\n   maintainer of the publication point where any stale/expired\
    \ objects\n   were encountered.  The intent here is to encourage the relevant\
    \ CA\n   and/or repository manager to update the stale or expired objects.\n"
- title: 5.  Distributing Validated Cache
  contents:
  - "5.  Distributing Validated Cache\n   On a periodic basis, BGP speakers within\
    \ an AS request updated\n   validated origin AS data and router/ASN data from\
    \ the (local)\n   validated cache of RPKI data.  The RP may either transfer the\n\
    \   validated data to the BGP speakers directly, or it may transfer the\n   validated\
    \ data to a cache server that is responsible for provisioning\n   such data to\
    \ BGP speakers.  The specifications of the protocol\n   designed to deliver validated\
    \ cache data to a BGP Speaker are\n   provided in [RFC6810] and [RFC8210].\n"
- title: 6.  Local Control
  contents:
  - "6.  Local Control\n   ISPs may want to establish a local view of exceptions to\
    \ the RPKI\n   data in the form of local filters and additions.  For instance,\
    \ a\n   network operator might wish to make use of a local override\n   capability\
    \ to protect routes from adverse actions [RFC8211].  The\n   mechanisms developed\
    \ to provide this capability to network operators\n   are called Simplified Local\
    \ Internet Number Resource Management with\n   the RPKI (SLURM).  If an ISP wants\
    \ to implement SLURM, its RP system\n   can follow the instruction specified in\
    \ [RFC8416].\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   This document does not introduce any new security\
    \ considerations; it\n   is a resource for implementers.  The RP links the RPKI\
    \ provisioning\n   side and the routing system, establishing a verified, local\
    \ view of\n   global RPKI data to BGP speakers.  The security of the RP is critical\n\
    \   for exchanging BGP messages.  Each RP implementation is expected to\n   offer\
    \ cache backup management to facilitate recovery from outages.\n   RP software\
    \ should also support secure transport (e.g., IPsec\n   [RFC4301]) that can protect\
    \ validated cache delivery in an unsafe\n   environment.  This document highlights\
    \ many validation actions\n   applied to RPKI signed objects, an essential element\
    \ of secure\n   operation of RPKI security.\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   This document has no IANA actions.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC3779]  Lynn, C., Kent, S., and K. Seo, \"\
    X.509 Extensions for IP\n              Addresses and AS Identifiers\", RFC 3779,\n\
    \              DOI 10.17487/RFC3779, June 2004,\n              <https://www.rfc-editor.org/info/rfc3779>.\n\
    \   [RFC5280]  Cooper, D., Santesson, S., Farrell, S., Boeyen, S.,\n         \
    \     Housley, R., and W. Polk, \"Internet X.509 Public Key\n              Infrastructure\
    \ Certificate and Certificate Revocation List\n              (CRL) Profile\",\
    \ RFC 5280, DOI 10.17487/RFC5280, May 2008,\n              <https://www.rfc-editor.org/info/rfc5280>.\n\
    \   [RFC6481]  Huston, G., Loomans, R., and G. Michaelson, \"A Profile for\n \
    \             Resource Certificate Repository Structure\", RFC 6481,\n       \
    \       DOI 10.17487/RFC6481, February 2012,\n              <https://www.rfc-editor.org/info/rfc6481>.\n\
    \   [RFC6482]  Lepinski, M., Kent, S., and D. Kong, \"A Profile for Route\n  \
    \            Origin Authorizations (ROAs)\", RFC 6482,\n              DOI 10.17487/RFC6482,\
    \ February 2012,\n              <https://www.rfc-editor.org/info/rfc6482>.\n \
    \  [RFC6486]  Austein, R., Huston, G., Kent, S., and M. Lepinski,\n          \
    \    \"Manifests for the Resource Public Key Infrastructure\n              (RPKI)\"\
    , RFC 6486, DOI 10.17487/RFC6486, February 2012,\n              <https://www.rfc-editor.org/info/rfc6486>.\n\
    \   [RFC6487]  Huston, G., Michaelson, G., and R. Loomans, \"A Profile for\n \
    \             X.509 PKIX Resource Certificates\", RFC 6487,\n              DOI\
    \ 10.17487/RFC6487, February 2012,\n              <https://www.rfc-editor.org/info/rfc6487>.\n\
    \   [RFC6488]  Lepinski, M., Chi, A., and S. Kent, \"Signed Object\n         \
    \     Template for the Resource Public Key Infrastructure\n              (RPKI)\"\
    , RFC 6488, DOI 10.17487/RFC6488, February 2012,\n              <https://www.rfc-editor.org/info/rfc6488>.\n\
    \   [RFC6489]  Huston, G., Michaelson, G., and S. Kent, \"Certification\n    \
    \          Authority (CA) Key Rollover in the Resource Public Key\n          \
    \    Infrastructure (RPKI)\", BCP 174, RFC 6489,\n              DOI 10.17487/RFC6489,\
    \ February 2012,\n              <https://www.rfc-editor.org/info/rfc6489>.\n \
    \  [RFC6493]  Bush, R., \"The Resource Public Key Infrastructure (RPKI)\n    \
    \          Ghostbusters Record\", RFC 6493, DOI 10.17487/RFC6493,\n          \
    \    February 2012, <https://www.rfc-editor.org/info/rfc6493>.\n   [RFC6810] \
    \ Bush, R. and R. Austein, \"The Resource Public Key\n              Infrastructure\
    \ (RPKI) to Router Protocol\", RFC 6810,\n              DOI 10.17487/RFC6810,\
    \ January 2013,\n              <https://www.rfc-editor.org/info/rfc6810>.\n  \
    \ [RFC6916]  Gagliano, R., Kent, S., and S. Turner, \"Algorithm Agility\n    \
    \          Procedure for the Resource Public Key Infrastructure\n            \
    \  (RPKI)\", BCP 182, RFC 6916, DOI 10.17487/RFC6916, April\n              2013,\
    \ <https://www.rfc-editor.org/info/rfc6916>.\n   [RFC7935]  Huston, G. and G.\
    \ Michaelson, Ed., \"The Profile for\n              Algorithms and Key Sizes for\
    \ Use in the Resource Public\n              Key Infrastructure\", RFC 7935, DOI\
    \ 10.17487/RFC7935,\n              August 2016, <https://www.rfc-editor.org/info/rfc7935>.\n\
    \   [RFC8209]  Reynolds, M., Turner, S., and S. Kent, \"A Profile for\n      \
    \        BGPsec Router Certificates, Certificate Revocation Lists,\n         \
    \     and Certification Requests\", RFC 8209,\n              DOI 10.17487/RFC8209,\
    \ September 2017,\n              <https://www.rfc-editor.org/info/rfc8209>.\n\
    \   [RFC8210]  Bush, R. and R. Austein, \"The Resource Public Key\n          \
    \    Infrastructure (RPKI) to Router Protocol, Version 1\",\n              RFC\
    \ 8210, DOI 10.17487/RFC8210, September 2017,\n              <https://www.rfc-editor.org/info/rfc8210>.\n\
    \   [RFC8360]  Huston, G., Michaelson, G., Martinez, C., Bruijnzeels, T.,\n  \
    \            Newton, A., and D. Shaw, \"Resource Public Key\n              Infrastructure\
    \ (RPKI) Validation Reconsidered\", RFC 8360,\n              DOI 10.17487/RFC8360,\
    \ April 2018,\n              <https://www.rfc-editor.org/info/rfc8360>.\n   [RFC8608]\
    \  Turner, S. and O. Borchert, \"BGPsec Algorithms, Key\n              Formats,\
    \ and Signature Formats\", RFC 8608,\n              DOI 10.17487/RFC8608, June\
    \ 2019,\n              <https://www.rfc-editor.org/info/rfc8608>.\n   [RFC8630]\
    \  Huston, G., Weiler, S., Michaelson, G., Kent, S., and T.\n              Bruijnzeels,\
    \ \"Resource Public Key Infrastructure (RPKI)\n              Trust Anchor Locator\"\
    , RFC 8630, DOI 10.17487/RFC8630,\n              August 2019, <https://www.rfc-editor.org/info/rfc8630>.\n\
    \   [RFC8634]  Weis, B., Gagliano, R., and K. Patel, \"BGPsec Router\n       \
    \       Certificate Rollover\", BCP 224, RFC 8634,\n              DOI 10.17487/RFC8634,\
    \ August 2019,\n              <https://www.rfc-editor.org/info/rfc8634>.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [RFC4301]  Kent, S. and K. Seo, \"Security Architecture\
    \ for the\n              Internet Protocol\", RFC 4301, DOI 10.17487/RFC4301,\n\
    \              December 2005, <https://www.rfc-editor.org/info/rfc4301>.\n   [RFC6480]\
    \  Lepinski, M. and S. Kent, \"An Infrastructure to Support\n              Secure\
    \ Internet Routing\", RFC 6480, DOI 10.17487/RFC6480,\n              February\
    \ 2012, <https://www.rfc-editor.org/info/rfc6480>.\n   [RFC8182]  Bruijnzeels,\
    \ T., Muravskiy, O., Weber, B., and R. Austein,\n              \"The RPKI Repository\
    \ Delta Protocol (RRDP)\", RFC 8182,\n              DOI 10.17487/RFC8182, July\
    \ 2017,\n              <https://www.rfc-editor.org/info/rfc8182>.\n   [RFC8211]\
    \  Kent, S. and D. Ma, \"Adverse Actions by a Certification\n              Authority\
    \ (CA) or Repository Manager in the Resource\n              Public Key Infrastructure\
    \ (RPKI)\", RFC 8211,\n              DOI 10.17487/RFC8211, September 2017,\n \
    \             <https://www.rfc-editor.org/info/rfc8211>.\n   [RFC8416]  Ma, D.,\
    \ Mandelberg, D., and T. Bruijnzeels, \"Simplified\n              Local Internet\
    \ Number Resource Management with the RPKI\n              (SLURM)\", RFC 8416,\
    \ DOI 10.17487/RFC8416, August 2018,\n              <https://www.rfc-editor.org/info/rfc8416>.\n\
    \   [rsync]    \"rsync\", <http://rsync.samba.org/>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors thank David Mandelberg, Wei Wang, Tim Bruijnzeels,\
    \ George\n   Michaelson, and Oleg Muravskiy for their review, feedback, and\n\
    \   editorial assistance in preparing this document.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Di Ma\n   ZDNS\n   4 South 4th St. Zhongguancun\n   Haidian\n\
    \   Beijing, 100190\n   China\n   Email: madi@zdns.cn\n   Stephen Kent\n"
