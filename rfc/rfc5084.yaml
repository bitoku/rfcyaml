- title: __initial_text__
  contents:
  - "           Using AES-CCM and AES-GCM Authenticated Encryption\n             \
    \  in the Cryptographic Message Syntax (CMS)\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies the conventions for using the AES-CCM and\
    \ the\n   AES-GCM authenticated encryption algorithms with the Cryptographic\n\
    \   Message Syntax (CMS) authenticated-enveloped-data content type.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document specifies the conventions for using Advanced\
    \ Encryption\n   Standard-Counter with Cipher Block Chaining-Message Authentication\n\
    \   Code (AES-CCM) and AES-Galois/Counter Mode (GCM) authenticated\n   encryption\
    \ algorithms as the content-authenticated-encryption\n   algorithm with the Cryptographic\
    \ Message Syntax [CMS] authenticated-\n   enveloped-data content type [AuthEnv].\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ RFC 2119 [STDWORDS].\n"
- title: 1.2.  ASN.1
  contents:
  - "1.2.  ASN.1\n   CMS values are generated using ASN.1 [X.208-88], which uses the\
    \ Basic\n   Encoding Rules (BER) [X.209-88] and the Distinguished Encoding Rules\n\
    \   (DER) [X.509-88].\n"
- title: 1.3.  AES
  contents:
  - "1.3.  AES\n   Dr. Joan Daemen and Dr. Vincent Rijmen, both from Belgium, developed\n\
    \   the Rijndael block cipher algorithm, and they submitted it for\n   consideration\
    \ as the Advanced Encryption Standard (AES).  Rijndael\n   was selected by the\
    \ National Institute for Standards and Technology\n   (NIST), and it is specified\
    \ in a U.S. Federal Information Processing\n   Standard (FIPS) Publication [AES].\
    \  NIST selected the Rijndael\n   algorithm for AES because it offers a combination\
    \ of security,\n   performance, efficiency, ease of implementation, and flexibility.\n\
    \   Specifically, the algorithm performs well in both hardware and\n   software\
    \ across a wide range of computing environments.  Also, the\n   very low memory\
    \ requirements of the algorithm make it very well\n   suited for restricted-space\
    \ environments.  The AES is widely used by\n   organizations, institutions, and\
    \ individuals outside of the U.S.\n   Government.\n   The AES specifies three\
    \ key sizes: 128, 192, and 256 bits.\n"
- title: 1.4.  AES-CCM
  contents:
  - "1.4.  AES-CCM\n   The Counter with CBC-MAC (CCM) mode of operation is specified\
    \ in\n   [CCM].  CCM is a generic authenticated encryption block cipher mode.\n\
    \   CCM is defined for use with any 128-bit block cipher, but in this\n   document,\
    \ CCM is used with the AES block cipher.\n   AES-CCM has four inputs: an AES key,\
    \ a nonce, a plaintext, and\n   optional additional authenticated data (AAD).\
    \  AES-CCM generates two\n   outputs: a ciphertext and a message authentication\
    \ code (also called\n   an authentication tag).\n   The nonce is generated by\
    \ the party performing the authenticated\n   encryption operation.  Within the\
    \ scope of any authenticated-\n   encryption key, the nonce value MUST be unique.\
    \  That is, the set of\n   nonce values used with any given key MUST NOT contain\
    \ any duplicate\n   values.  Using the same nonce for two different messages encrypted\n\
    \   with the same key destroys the security properties.\n   AAD is authenticated\
    \ but not encrypted.  Thus, the AAD is not\n   included in the AES-CCM output.\
    \  It can be used to authenticate\n   plaintext packet headers.  In the CMS authenticated-enveloped-data\n\
    \   content type, authenticated attributes comprise the AAD.\n"
- title: 1.5.  AES-GCM
  contents:
  - "1.5.  AES-GCM\n   The Galois/Counter Mode (GCM) is specified in [GCM].  GCM is\
    \ a\n   generic authenticated encryption block cipher mode.  GCM is defined\n\
    \   for use with any 128-bit block cipher, but in this document, GCM is\n   used\
    \ with the AES block cipher.\n   AES-GCM has four inputs: an AES key, an initialization\
    \ vector (IV), a\n   plaintext content, and optional additional authenticated\
    \ data (AAD).\n   AES-GCM generates two outputs: a ciphertext and message\n  \
    \ authentication code (also called an authentication tag).  To have a\n   common\
    \ set of terms for AES-CCM and AES-GCM, the AES-GCM IV is\n   referred to as a\
    \ nonce in the remainder of this document.\n   The nonce is generated by the party\
    \ performing the authenticated\n   encryption operation.  Within the scope of\
    \ any authenticated-\n   encryption key, the nonce value MUST be unique.  That\
    \ is, the set of\n   nonce values used with any given key MUST NOT contain any\
    \ duplicate\n   values.  Using the same nonce for two different messages encrypted\n\
    \   with the same key destroys the security properties.\n   AAD is authenticated\
    \ but not encrypted.  Thus, the AAD is not\n   included in the AES-GCM output.\
    \  It can be used to authenticate\n   plaintext packet headers.  In the CMS authenticated-enveloped-data\n\
    \   content type, authenticated attributes comprise the AAD.\n"
- title: 2.  Automated Key Management
  contents:
  - "2.  Automated Key Management\n   The reuse of an AES-CCM or AES-GCM nonce/key\
    \ combination destroys the\n   security guarantees.  As a result, it can be extremely\
    \ difficult to\n   use AES-CCM or AES-GCM securely when using statically configured\n\
    \   keys.  For safety's sake, implementations MUST use an automated key\n   management\
    \ system [KEYMGMT].\n   The CMS authenticated-enveloped-data content type supports\
    \ four\n   general key management techniques:\n      Key Transport:  the content-authenticated-encryption\
    \ key is\n         encrypted in the recipient's public key;\n      Key Agreement:\
    \  the recipient's public key and the sender's\n         private key are used\
    \ to generate a pairwise symmetric key, then\n         the content-authenticated-encryption\
    \ key is encrypted in the\n         pairwise symmetric key;\n      Symmetric Key-Encryption\
    \ Keys:  the content-authenticated-\n         encryption key is encrypted in a\
    \ previously distributed\n         symmetric key-encryption key; and\n      Passwords:\
    \ the content-authenticated-encryption key is encrypted\n         in a key-encryption\
    \ key that is derived from a password or\n         other shared secret value.\n\
    \   All of these key management techniques meet the automated key\n   management\
    \ system requirement as long as a fresh content-\n   authenticated-encryption\
    \ key is generated for the protection of each\n   content.  Note that some of\
    \ these key management techniques use one\n   key-encryption key to encrypt more\
    \ than one content-authenticated-\n   encryption key during the system life cycle.\
    \  As long as fresh\n   content-authenticated-encryption key is used each time,\
    \ AES-CCM and\n   AES-GCM can be used safely with the CMS authenticated-enveloped-data\n\
    \   content type.\n   In addition to these four general key management techniques,\
    \ CMS\n   supports other key management techniques.  See Section 6.2.5 of\n  \
    \ [CMS].  Since the properties of these key management techniques are\n   unknown,\
    \ no statement can be made about whether these key management\n   techniques meet\
    \ the automated key management system requirement.\n   Designers and implementers\
    \ must perform their own analysis if one of\n   these other key management techniques\
    \ is supported.\n"
- title: 3.  Content-Authenticated Encryption Algorithms
  contents:
  - "3.  Content-Authenticated Encryption Algorithms\n   This section specifies the\
    \ conventions employed by CMS\n   implementations that support content-authenticated\
    \ encryption using\n   AES-CCM or AES-GCM.\n   Content-authenticated encryption\
    \ algorithm identifiers are located in\n   the AuthEnvelopedData EncryptedContentInfo\
    \ contentEncryptionAlgorithm\n   field.\n   Content-authenticated encryption algorithms\
    \ are used to encipher the\n   content located in the AuthEnvelopedData EncryptedContentInfo\n\
    \   encryptedContent field and to provide the message authentication code\n  \
    \ for the AuthEnvelopedData mac field.  Note that the message\n   authentication\
    \ code provides integrity protection for both the\n   AuthEnvelopedData authAttrs\
    \ and the AuthEnvelopedData\n   EncryptedContentInfo encryptedContent.\n"
- title: 3.1.  AES-CCM
  contents:
  - "3.1.  AES-CCM\n   The AES-CCM authenticated encryption algorithm is described\
    \ in [CCM].\n   A brief summary of the properties of AES-CCM is provided in Section\n\
    \   1.4.\n   Neither the plaintext content nor the optional AAD inputs need to\
    \ be\n   padded prior to invoking AES-CCM.\n   There are three algorithm identifiers\
    \ for AES-CCM, one for each AES\n   key size:\n      aes OBJECT IDENTIFIER ::=\
    \ { joint-iso-itu-t(2) country(16) us(840)\n          organization(1) gov(101)\
    \ csor(3) nistAlgorithm(4) 1 }\n      id-aes128-CCM OBJECT IDENTIFIER ::= { aes\
    \ 7 }\n      id-aes192-CCM OBJECT IDENTIFIER ::= { aes 27 }\n      id-aes256-CCM\
    \ OBJECT IDENTIFIER ::= { aes 47 }\n   With all three AES-CCM algorithm identifiers,\
    \ the AlgorithmIdentifier\n   parameters field MUST be present, and the parameters\
    \ field must\n   contain a CCMParameter:\n      CCMParameters ::= SEQUENCE {\n\
    \        aes-nonce         OCTET STRING (SIZE(7..13)),\n        aes-ICVlen   \
    \     AES-CCM-ICVlen DEFAULT 12 }\n      AES-CCM-ICVlen ::= INTEGER (4 | 6 | 8\
    \ | 10 | 12 | 14 | 16)\n   The aes-nonce parameter field contains 15-L octets,\
    \ where L is the\n   size of the length field.  With the CMS, the normal situation\
    \ is for\n   the content-authenticated-encryption key to be used for a single\n\
    \   content; therefore, L=8 is RECOMMENDED.  See [CCM] for a discussion\n   of\
    \ the trade-off between the maximum content size and the size of the\n   nonce.\
    \  Within the scope of any content-authenticated-encryption key,\n   the nonce\
    \ value MUST be unique.  That is, the set of nonce values\n   used with any given\
    \ key MUST NOT contain any duplicate values.\n   The aes-ICVlen parameter field\
    \ tells the size of the message\n   authentication code.  It MUST match the size\
    \ in octets of the value\n   in the AuthEnvelopedData mac field.  A length of\
    \ 12 octets is\n   RECOMMENDED.\n"
- title: 3.2.  AES-GCM
  contents:
  - "3.2.  AES-GCM\n   The AES-GCM authenticated encryption algorithm is described\
    \ in [GCM].\n   A brief summary of the properties of AES-CCM is provided in Section\n\
    \   1.5.\n   Neither the plaintext content nor the optional AAD inputs need to\
    \ be\n   padded prior to invoking AES-GCM.\n   There are three algorithm identifiers\
    \ for AES-GCM, one for each AES\n   key size:\n      aes OBJECT IDENTIFIER ::=\
    \ { joint-iso-itu-t(2) country(16) us(840)\n          organization(1) gov(101)\
    \ csor(3) nistAlgorithm(4) 1 }\n      id-aes128-GCM OBJECT IDENTIFIER ::= { aes\
    \ 6 }\n      id-aes192-GCM OBJECT IDENTIFIER ::= { aes 26 }\n      id-aes256-GCM\
    \ OBJECT IDENTIFIER ::= { aes 46 }\n   With all three AES-GCM algorithm identifiers,\
    \ the AlgorithmIdentifier\n   parameters field MUST be present, and the parameters\
    \ field must\n   contain a GCMParameter:\n      GCMParameters ::= SEQUENCE {\n\
    \        aes-nonce        OCTET STRING, -- recommended size is 12 octets\n   \
    \     aes-ICVlen       AES-GCM-ICVlen DEFAULT 12 }\n      AES-GCM-ICVlen ::= INTEGER\
    \ (12 | 13 | 14 | 15 | 16)\n   The aes-nonce is the AES-GCM initialization vector.\
    \  The algorithm\n   specification permits the nonce to have any number of bits\
    \ between 1\n   and 2^64.  However, the use of OCTET STRING within GCMParameters\n\
    \   requires the nonce to be a multiple of 8 bits.  Within the scope of\n   any\
    \ content-authenticated-encryption key, the nonce value MUST be\n   unique, but\
    \ need not have equal lengths.  A nonce value of 12 octets\n   can be processed\
    \ more efficiently, so that length is RECOMMENDED.\n   The aes-ICVlen parameter\
    \ field tells the size of the message\n   authentication code.  It MUST match\
    \ the size in octets of the value\n   in the AuthEnvelopedData mac field.  A length\
    \ of 12 octets is\n   RECOMMENDED.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   AES-CCM and AES-GCM make use of the AES block\
    \ cipher in counter mode\n   to provide encryption.  When used properly, counter\
    \ mode provides\n   strong confidentiality.  Bellare, Desai, Jokipii, and Rogaway\
    \ show in\n   [BDJR] that the privacy guarantees provided by counter mode are\
    \ at\n   least as strong as those for Cipher Block Chaining (CBC) mode when\n\
    \   using the same block cipher.\n   Unfortunately, it is easy to misuse counter\
    \ mode.  If counter block\n   values are ever used for more than one encryption\
    \ operation with the\n   same key, then the same key stream will be used to encrypt\
    \ both\n   plaintexts, and the confidentiality guarantees are voided.\n   Fortunately,\
    \ the CMS AuthEnvelopedData provides all the tools needed\n   to avoid misuse\
    \ of counter mode.  Automated key management is\n   discussed in Section 2.\n\
    \   There are fairly generic precomputation attacks against the use of\n   any\
    \ block cipher in counter mode that allow a meet-in-the-middle\n   attack against\
    \ the key [H][B][MF].  AES-CCM and AES-GCM both make use\n   of counter mode for\
    \ encryption.  These precomputation attacks require\n   the creation and searching\
    \ of huge tables of ciphertext associated\n   with known plaintext and known keys.\
    \  Assuming that the memory and\n   processor resources are available for a precomputation\
    \ attack, then\n   the theoretical strength of any block cipher in counter mode\
    \ is\n   limited to 2^(n/2) bits, where n is the number of bits in the key.\n\
    \   The use of long keys is the best countermeasure to precomputation\n   attacks.\
    \  Use of an unpredictable nonce value in the counter block\n   significantly\
    \ increases the size of the table that the attacker must\n   compute to mount\
    \ a successful precomputation attack.\n   Implementations must randomly generate\
    \ content-authenticated-\n   encryption keys.  The use of inadequate pseudo-random\
    \ number\n   generators (PRNGs) to generate cryptographic keys can result in\n\
    \   little or no security.  An attacker may find it much easier to\n   reproduce\
    \ the PRNG environment that produced the keys, and then\n   searching the resulting\
    \ small set of possibilities, rather than brute\n   force searching the whole\
    \ key space.  The generation of quality\n   random numbers is difficult.  RFC\
    \ 4086 [RANDOM] offers important\n   guidance in this area.\n"
- title: 5.  References
  contents:
  - '5.  References

    '
- title: 5.1.  Normative References
  contents:
  - "5.1.  Normative References\n   [AES]       NIST, FIPS PUB 197, \"Advanced Encryption\
    \ Standard (AES)\",\n               November 2001.\n   [CCM]       Whiting, D.,\
    \ Housley, R., and N. Ferguson, \"Counter with\n               CBC-MAC (CCM)\"\
    , RFC 3610, September 2003.\n   [CMS]       Housley, R., \"Cryptographic Message\
    \ Syntax (CMS)\", RFC\n               3852, July 2004.\n   [GCM]       Dworkin,\
    \ M., \"NIST Special Publication 800-38D:\n               Recommendation for Block\
    \ Cipher Modes of Operation:\n               Galois/Counter Mode (GCM) and GMAC.\"\
    \ , U.S. National\n               Institute of Standards and Technology\n    \
    \           http://csrc.nist.gov/publications/nistpubs/800-38D/SP-\n         \
    \      800-38D.pdf\n   [STDWORDS]  Bradner, S., \"Key words for use in RFCs to\
    \ Indicate\n               Requirement Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [X.208-88]  CCITT.  Recommendation X.208: Specification of Abstract\n    \
    \           Syntax Notation One (ASN.1).  1988.\n   [X.209-88]  CCITT.  Recommendation\
    \ X.209: Specification of Basic\n               Encoding Rules for Abstract Syntax\
    \ Notation One (ASN.1).\n               1988.\n   [X.509-88]  CCITT.  Recommendation\
    \ X.509: The Directory-\n               Authentication Framework.  1988.\n"
- title: 5.2.  Informative References
  contents:
  - "5.2.  Informative References\n   [AuthEnv]   Housley, R., \"Cryptographic Message\
    \ Syntax (CMS)\n               Authenticated-Enveloped-Data Content Type\", RFC\
    \ 5083,\n               November 2007.\n   [B]         Biham, E., \"How to Forge\
    \ DES-Encrypted Messages in 2^28\n               Steps\", Technion Computer Science\
    \ Department Technical\n               Report CS0884, 1996.\n   [BDJR]      Bellare,\
    \ M, Desai, A., Jokipii, E., and P. Rogaway, \"A\n               Concrete Security\
    \ Treatment of Symmetric Encryption:\n               Analysis of the DES Modes\
    \ of Operation\", Proceedings 38th\n               Annual Symposium on Foundations\
    \ of Computer Science,\n               1997.\n   [H]         Hellman, M. E., \"\
    A cryptanalytic time-memory trade-off\",\n               IEEE Transactions on\
    \ Information Theory, July 1980, pp.\n               401-406.\n   [KEYMGMT]  \
    \ Bellovin, S. and R. Housley, \"Guidelines for\n               Cryptographic\
    \ Key Management\", BCP 107, RFC 4107, June\n               2005.\n   [MF]   \
    \     McGrew, D., and S. Fluhrer, \"Attacks on Additive\n               Encryption\
    \ of Redundant Plaintext and Implications on\n               Internet Security\"\
    , The Proceedings of the Seventh Annual\n               Workshop on Selected Areas\
    \ in Cryptography (SAC 2000),\n               Springer-Verlag, August, 2000.\n\
    \   [RANDOM]    Eastlake, D., 3rd, Schiller, J., and S. Crocker,\n           \
    \    \"Randomness Requirements for Security\", BCP 106, RFC\n               4086,\
    \ June 2005.\n"
- title: 'Appendix:  ASN.1 Module'
  contents:
  - "Appendix:  ASN.1 Module\n   CMS-AES-CCM-and-AES-GCM\n       { iso(1) member-body(2)\
    \ us(840) rsadsi(113549) pkcs(1)\n         pkcs-9(9) smime(16) modules(0) cms-aes-ccm-and-gcm(32)\
    \ }\n   DEFINITIONS IMPLICIT TAGS ::= BEGIN\n   -- EXPORTS All\n   -- Object Identifiers\n\
    \   aes OBJECT IDENTIFIER ::= { joint-iso-itu-t(2) country(16) us(840)\n     \
    \  organization(1) gov(101) csor(3) nistAlgorithm(4) 1 }\n   id-aes128-CCM OBJECT\
    \ IDENTIFIER ::= { aes 7 }\n   id-aes192-CCM OBJECT IDENTIFIER ::= { aes 27 }\n\
    \   id-aes256-CCM OBJECT IDENTIFIER ::= { aes 47 }\n   id-aes128-GCM OBJECT IDENTIFIER\
    \ ::= { aes 6 }\n   id-aes192-GCM OBJECT IDENTIFIER ::= { aes 26 }\n   id-aes256-GCM\
    \ OBJECT IDENTIFIER ::= { aes 46 }\n   -- Parameters for AigorithmIdentifier\n\
    \   CCMParameters ::= SEQUENCE {\n     aes-nonce         OCTET STRING (SIZE(7..13)),\n\
    \     aes-ICVlen        AES-CCM-ICVlen DEFAULT 12 }\n   AES-CCM-ICVlen ::= INTEGER\
    \ (4 | 6 | 8 | 10 | 12 | 14 | 16)\n   GCMParameters ::= SEQUENCE {\n     aes-nonce\
    \        OCTET STRING, -- recommended size is 12 octets\n     aes-ICVlen     \
    \  AES-GCM-ICVlen DEFAULT 12 }\n   AES-GCM-ICVlen ::= INTEGER (12 | 13 | 14 |\
    \ 15 | 16)\n   END\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Russell Housley\n   Vigil Security, LLC\n   918 Spring Knoll\
    \ Drive\n   Herndon, VA 20170\n   USA\n   EMail: housley@vigilsec.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
