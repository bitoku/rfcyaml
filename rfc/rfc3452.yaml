- title: __initial_text__
  contents:
  - '             Forward Error Correction (FEC) Building Block

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2002).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document generally describes how to use Forward Error Correction\n\
    \   (FEC) codes to efficiently provide and/or augment reliability for\n   data\
    \ transport.  The primary focus of this document is the\n   application of FEC\
    \ codes to one-to-many reliable data transport using\n   IP multicast.  This document\
    \ describes what information is needed to\n   identify a specific FEC code, what\
    \ information needs to be\n   communicated out-of-band to use the FEC code, and\
    \ what information is\n   needed in data packets to identify the encoding symbols\
    \ they carry.\n   The procedures for specifying FEC codes and registering them\
    \ with the\n   Internet Assigned Numbers Authority (IANA) are also described.\
    \  This\n   document should be read in conjunction with and uses the terminology\n\
    \   of the companion document titled, \"The Use of Forward Error\n   Correction\
    \ (FEC) in Reliable Multicast\".\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . .   2\n   2.  Rationale. . . . . . . . . . . . . . . . . . . . . . . .\
    \ .   3\n   3.  Functionality. . . . . . . . . . . . . . . . . . . . . . .   3\n\
    \     3.1 FEC Encoding ID and FEC Instance ID. . . . . . . . . . .   5\n     3.2\
    \ FEC Payload ID and FEC Object Transmission Information .   6\n   4.  Applicability\
    \ Statement . . . .  . . . . . . . . . . . . .   7\n   5.  Packet Header Fields\
    \ . . . . . . . . . . . . . . . . . . .   8\n     5.1 Small Block, Large Block\
    \ and Expandable FEC Codes. . . .   8\n     5.2 Small Block Systematic FEC Codes\
    \ . . . . . . . . . . . .   9\n   6.  Requirements from other building blocks.\
    \ . . . . . . . . .  11\n   7.  Security Considerations. . . . . . . . . . . .\
    \ . . . . . .  11\n   8.  IANA Considerations. . . . . . . . . . . . . . . . .\
    \ . . .  12\n     8.1 Explicit IANA Assignment Guidelines. . . . . . . . . . .\
    \  12\n   9.  Intellectual Property Disclosure . . . . . . . . . . . . .  13\n\
    \   10. Acknowledgments. . . . . . . . . . . . . . . . . . . . . .  14\n   11.\
    \ References . . . . . . . . . . . . . . . . . . . . . . . .  14\n   12. Authors'\
    \ Addresses . . . . . . . . . . . . . . . . . . . .  15\n   13. Full Copyright\
    \ Statement . . . . . . . . . . . . . . . . .  16\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document describes how to use Forward Error Correction\
    \ (FEC)\n   codes to provide support for reliable delivery of content using IP\n\
    \   multicast.  This document should be read in conjunction with and uses\n  \
    \ the terminology of the companion document [4], which describes the\n   use of\
    \ FEC codes within the context of reliable IP multicast\n   transport and provides\
    \ an introduction to some commonly used FEC\n   codes.\n   This document describes\
    \ a building block as defined in RFC 3048 [9].\n   This document is a product\
    \ of the IETF RMT WG and follows the general\n   guidelines provided in RFC 3269\
    \ [3].\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL\
    \ NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"\
    \ in this\n   document are to be interpreted as described in RFC2119 [2].\n  \
    \ Statement of Intent\n      This memo contains part of the definitions necessary\
    \ to fully\n      specify a Reliable Multicast Transport protocol in accordance\
    \ with\n      RFC 2357. As per RFC 2357, the use of any reliable multicast\n \
    \     protocol in the Internet requires an adequate congestion control\n     \
    \ scheme.\n      While waiting for such a scheme to be available, or for an\n\
    \      existing scheme to be proven adequate, the Reliable Multicast\n      Transport\
    \ working group (RMT) publishes this Request for Comments\n      in the \"Experimental\"\
    \ category.\n      It is the intent of RMT to re-submit this specification as\
    \ an IETF\n      Proposed Standard as soon as the above condition is met.\n"
- title: 2.  Rationale
  contents:
  - "2.  Rationale\n   FEC codes are a valuable basic component of any transport protocol\n\
    \   that is to provide reliable delivery of content.  Using FEC codes is\n   valuable\
    \ in the context of IP multicast and reliable delivery because\n   FEC encoding\
    \ symbols can be useful to all receivers for\n   reconstructing content even when\
    \ the receivers have received\n   different encoding symbols.  Furthermore, FEC\
    \ codes can ameliorate or\n   even eliminate the need for feedback from receivers\
    \ to senders to\n   request retransmission of lost packets.\n   The goal of the\
    \ FEC building block is to describe functionality\n   directly related to FEC\
    \ codes that is common to all reliable content\n   delivery IP multicast protocols,\
    \ and to leave out any additional\n   functionality that is specific to particular\
    \ protocols.  The primary\n   functionality described in this document that is\
    \ common to all such\n   protocols that use FEC codes are FEC encoding symbols\
    \ for an object\n   that is included in packets that flow from a sender to receivers.\n\
    \   This document for example does not describe how receivers may request\n  \
    \ transmission of particular encoding symbols for an object.  This is\n   because\
    \ although there are protocols where requests for transmission\n   are of use,\
    \ there are also protocols that do not require such\n   requests.\n   The companion\
    \ document [4] should be consulted for a full explanation\n   of the benefits\
    \ of using FEC codes for reliable content delivery\n   using IP multicast.  FEC\
    \ codes are also useful in the context of\n   unicast, and thus the scope and\
    \ applicability of this document is not\n   limited to IP multicast.\n"
- title: 3.  Functionality
  contents:
  - "3.  Functionality\n   This section describes FEC information that is either to\
    \ be sent\n   out-of-band or in packets.  The FEC information is associated with\n\
    \   transmission of data about a particular object.  There are three\n   classes\
    \ of packets that may contain FEC information: data packets,\n   session-control\
    \ packets and feedback packets.  They generally contain\n   different kinds of\
    \ FEC information.  Note that some protocols may not\n   use session-control or\
    \ feedback packets.\n   Data packets may sometimes serve as session-control packets\
    \ as well;\n   both data and session-control packets generally travel downstream\n\
    \   from the sender towards receivers and are sent to a multicast channel\n  \
    \ or to a specific receiver using unicast.\n   As a general rule, feedback packets\
    \ travel upstream from receivers to\n   the sender.  Sometimes, however, they\
    \ might be sent to a multicast\n   channel or to another receiver or to some intermediate\
    \ node or\n   neighboring router that provides recovery services.\n   This document\
    \ specifies the FEC information that must be carried in\n   data packets and the\
    \ other FEC information that must be communicated\n   either out-of-band or in\
    \ data packets.  This document does not\n   specify out-of-band methods nor does\
    \ it specify the way out-of-band\n   FEC information is associated with FEC information\
    \ carried in data\n   packets.  These methods must be specified in a complete\
    \ protocol\n   instantiation that uses the FEC building block.  FEC information\
    \ is\n   classified as follows:\n   1) FEC Encoding ID\n      Identifies the FEC\
    \ encoder being used and allows receivers to\n      select the appropriate FEC\
    \ decoder.  The value of the FEC Encoding\n      ID MUST be the same for all transmission\
    \ of data related to a\n      particular object, but MAY vary across different\
    \ transmissions of\n      data about different objects, even if transmitted to\
    \ the same set\n      of multicast channels and/or using a single upper-layer\
    \ session.\n      The FEC Encoding ID is subject to IANA registration.\n   2)\
    \ FEC Instance ID\n      Provides a more specific identification of the FEC encoder\
    \ being\n      used for an Under-Specified FEC scheme.  This value is not used\n\
    \      for Fully-Specified FEC schemes.  (See Section 3.1 for the\n      definition\
    \ of Under-Specified and Fully-Specified FEC schemes.)\n      The FEC Instance\
    \ ID is scoped by the FEC Encoding ID, and is\n      subject to IANA registration.\n\
    \   3) FEC Payload ID\n      Identifies the encoding symbol(s) in the payload\
    \ of the packet.\n      The types and lengths of the fields in the FEC Payload\
    \ ID, i.e.,\n      the format of the FEC Payload ID, are determined by the FEC\n\
    \      Encoding ID.  The full specification of each field MUST be\n      uniquely\
    \ determined by the FEC Encoding ID for Fully-Specified FEC\n      schemes, and\
    \ MUST be uniquely determined by the combination of the\n      FEC Encoding ID\
    \ and the FEC Instance ID for Under-Specified FEC\n      schemes.  As an example,\
    \ for the Under-Specified FEC scheme with\n      FEC Encoding ID 129 defined in\
    \ Section 5.1, the fields in the FEC\n      Payload ID are a 32-bit Source Block\
    \ Number followed by a 32-bit\n      Encoding Symbol ID, where the full specification\
    \ of both of these\n      fields depends on the FEC Instance ID.\n   4) FEC Object\
    \ Transmission Information\n      This is information regarding the encoding of\
    \ a specific object\n      needed by the FEC decoder.  As an example, for the\
    \ Under-Specified\n      FEC scheme with FEC Encoding ID 129 defined in Section\
    \ 5.1, this\n      information might include the lengths of the different source\n\
    \      blocks that make up the object and the overall object length.\n      This\
    \ might also include specific parameters of the FEC encoder.\n   The FEC Encoding\
    \ ID, FEC Instance ID (for Under-Specified FEC\n   schemes) and the FEC Object\
    \ Transmission Information can be sent to a\n   receiver within the data packet\
    \ headers, within session control\n   packets, or by some other means.  In any\
    \ case, the means for\n   communicating this to a receiver is outside the scope\
    \ of this\n   document.  The FEC Payload ID MUST be included in the data packet\n\
    \   header fields, as it provides a description of the encoding symbols\n   contained\
    \ in the packet.\n"
- title: 3.1.  FEC Encoding ID and FEC Instance ID
  contents:
  - "3.1.  FEC Encoding ID and FEC Instance ID\n   The FEC Encoding ID is a numeric\
    \ index that identifies a specific FEC\n   scheme OR a class of encoding schemes\
    \ that share the same FEC Payload\n   ID format.\n   An FEC scheme is a Fully-Specified\
    \ FEC scheme if the encoding scheme\n   is formally and fully specified, in a\
    \ way that independent\n   implementors can implement both encoder and decoder\
    \ from a\n   specification that is an IETF RFC.  The FEC Encoding ID uniquely\n\
    \   identifies a Fully-Specified FEC scheme.  Companion documents of this\n  \
    \ specification may specify Fully-Specified FEC schemes and associate\n   them\
    \ with FEC Encoding ID values.\n   These documents MUST also specify a format\
    \ for the FEC Payload ID and\n   specify the information in the FEC Object Transmission\
    \ Information.\n   It is possible that a FEC scheme may not be a Fully-Specified\
    \ FEC\n   scheme, because either a specification is simply not available or a\n\
    \   party exists that owns the encoding scheme and is not willing to\n   disclose\
    \ the algorithm or specification.  We refer to such an FEC\n   encoding schemes\
    \ as an Under-Specified FEC scheme.  The following\n   holds for an Under-Specified\
    \ FEC scheme:\n   o The fields and their formats of the FEC Payload ID and the\
    \ specific\n     information in the FEC Object Transmission Information MUST be\n\
    \     defined for the Under-Specified FEC scheme.\n   o A value for the FEC Encoding\
    \ ID MUST be reserved and associated\n     with the fields and their formats of\
    \ the FEC Payload ID and the\n     specific information in the FEC Object Transmission\
    \ Information.\n     An already reserved FEC Encoding ID value MUST be reused\
    \ if the\n     associated FEC Payload ID has the same fields and formats and the\n\
    \     FEC Object Transmission Information has same information as the\n     ones\
    \ needed for the new Under-Specified FEC scheme.\n   o A value for the FEC Instance\
    \ ID MUST be reserved.\n   An Under-Specified FEC scheme is fully identified by\
    \ the tuple (FEC\n   Encoding ID, FEC Instance ID).  The tuple MUST identify a\
    \ single\n   scheme that has at least one implementation.  The party that owns\n\
    \   this tuple MUST be able to provide information on how to obtain the\n   Under-Specified\
    \ FEC scheme identified by the tuple, e.g., a pointer\n   to a publicly available\
    \ reference-implementation or the name and\n   contacts of a company that sells\
    \ it, either separately or embedded in\n   another product.\n   Different Under-Specified\
    \ FEC schemes that share the same FEC\n   Encoding ID -- but have different FEC\
    \ Instance IDs -- also share the\n   same fields and corresponding formats of\
    \ the FEC Payload ID and\n   specify the same information in the FEC Object Transmission\n\
    \   Information.\n   This specification reserves the range 0-127 for the values\
    \ of FEC\n   Encoding IDs for Fully-Specified FEC schemes and the range 128-255\n\
    \   for the values of Under-Specified FEC schemes.\n"
- title: 3.2.  FEC Payload ID and FEC Object Transmission Information
  contents:
  - "3.2.  FEC Payload ID and FEC Object Transmission Information\n   A document that\
    \ specifies an FEC scheme and reserves a value of FEC\n   Encoding ID MUST define\
    \ the fields and their packet formats for the\n   FEC Payload ID and specify the\
    \ information in the FEC Object\n   Transmission Information according to the\
    \ needs of the encoding\n   scheme.  This applies to documents that reserve values\
    \ of FEC\n   Encoding IDs for both Fully-Specified and Under-Specified FEC\n \
    \  schemes.\n   The specification of the fields and their packet formats for the\
    \ FEC\n   Payload ID MUST specify the meaning of the fields and their format\n\
    \   down to the level of specific bits.  The total length of all the\n   fields\
    \ in the FEC Payload ID MUST have a length that is a multiple of\n   a 4-byte\
    \ word.  This requirement facilitates the alignment of packet\n   fields in protocol\
    \ instantiations.\n"
- title: 4.  Applicability Statement
  contents:
  - "4.  Applicability Statement\n   The FEC building block applies to creating and\
    \ sending encoding\n   symbols for objects that are to be reliably transported\
    \ using IP\n   multicast or unicast.  The FEC building block does not provide\
    \ higher\n   level session support.  Thus, for example, many objects may be\n\
    \   transmitted within the same session, in which case a higher level\n   building\
    \ block may carry a unique Transport Object ID (TOI) for each\n   object in the\
    \ session to allow the receiver to demultiplex packets\n   within the session\
    \ based on the TOI within each packet.  As another\n   example, a receiver may\
    \ subscribe to more than one session at a time.\n   In this case a higher level\
    \ building block may carry a unique\n   Transport Session ID (TSI) for each session\
    \ to allow the receiver to\n   demultiplex packets based on the TSI within each\
    \ packet.\n   Other building blocks may supply direct support for carrying out-of-\n\
    \   band information directly relevant to the FEC building block to\n   receivers.\
    \  For example, the length of the object is part of the FEC\n   Object Transmission\
    \ Information that may in some cases be\n   communicated out-of-band to receivers,\
    \ and one mechanism for\n   providing this to receivers is within the context\
    \ of another building\n   block that provides this information.\n   Some protocols\
    \ may use FEC codes as a mechanism for repairing the\n   loss of packets.  Within\
    \ the context of FEC repair schemes, feedback\n   packets are (optionally) used\
    \ to request FEC retransmission.  The\n   FEC-related information present in feedback\
    \ packets usually contains\n   an FEC Block ID that defines the block that is\
    \ being repaired, and\n   the number of Repair Symbols requested.  Although this\
    \ is the most\n   common case, variants are possible in which the receivers provide\n\
    \   more specific information about the Repair Symbols requested (e.g.,\n   an\
    \ index range or a list of symbols accepted).  It is also possible\n   to include\
    \ multiple requests in a single feedback packet.  This\n   document does not provide\
    \ any detail about feedback schemes used in\n   combination with FEC nor the format\
    \ of FEC information in feedback\n   packets.  If feedback packets are used in\
    \ a complete protocol\n   instantiation, these details must be provided in the\
    \ protocol\n   instantiation specification.\n   The FEC building block does not\
    \ provide any support for congestion\n   control.  Any complete protocol MUST\
    \ provide congestion control that\n   conforms to RFC 2357 [5], and thus this\
    \ MUST be provided by another\n   building block when the FEC building block is\
    \ used in a protocol.\n   A more complete description of the applicability of\
    \ FEC codes can be\n   found in the companion document [4].\n"
- title: 5.  Packet Header Fields
  contents:
  - "5.  Packet Header Fields\n   This section specifies the FEC Encoding ID, the\
    \ associated FEC\n   Payload ID format, and the specific information in the FEC\
    \ Object\n   Transmission Information for a number of known Under-Specified FEC\n\
    \   schemes.  Under-Specified FEC schemes that use the same FEC Payload\n   ID\
    \ fields, formats, and specific information in the FEC Object\n   Transmission\
    \ Information (as for one of the FEC Encoding IDs\n   specified in this section)\
    \ MUST use the corresponding FEC Encoding\n   ID.  Other FEC Encoding IDs may\
    \ be specified for other Under-\n   Specified FEC schemes in companion documents.\n"
- title: 5.1.  Small Block, Large Block and Expandable FEC Codes
  contents:
  - "5.1.  Small Block, Large Block and Expandable FEC Codes\n   This subsection reserves\
    \ the FEC Encoding ID value 128 for the\n   Under-Specified FEC schemes described\
    \ in [4] that are called Small\n   Block FEC codes, Large Block FEC codes and\
    \ Expandable FEC codes.\n   The FEC Payload ID is composed of a Source Block Number\
    \ and an\n   Encoding Symbol ID structured as follows:\n     0               \
    \    1                   2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                     Source Block Number                       |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                      Encoding Symbol ID                       |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The Source Block Number identifies from which source block of the\n   object\
    \ the encoding symbol(s) in the payload are generated.  These\n   blocks are numbered\
    \ consecutively from 0 to N-1, where N is the\n   number of source blocks in the\
    \ object.\n   The Encoding Symbol ID identifies which specific encoding symbol(s)\n\
    \   generated from the source block are carried in the packet payload.\n   The\
    \ exact details of the correspondence between Encoding Symbol IDs\n   and the\
    \ encoding symbol(s) in the packet payload are dependent on the\n   particular\
    \ encoding algorithm used as identified by the FEC Encoding\n   ID and by the\
    \ FEC Instance ID, and these details may be proprietary.\n   The FEC Object Transmission\
    \ Information has the following specific\n   information:\n   o The FEC Encoding\
    \ ID 128.\n   o The FEC Instance ID associated with the FEC Encoding ID 128 to\
    \ be\n     used.\n   o The total length of the object in bytes.\n   o The number\
    \ of source blocks that the object is partitioned into,\n     and the length of\
    \ each source block in bytes.\n   To understand how this out-of-band information\
    \ is communicated, one\n   must look outside the scope of this document.  One\
    \ example may be\n   that the source block lengths may be derived by a fixed algorithm\n\
    \   from the object length.  Another example may be that all source\n   blocks\
    \ are the same length and this is what is passed out-of-band to\n   the receiver.\
    \  A third example could be that the full sized source\n   block length is provided\
    \ and this is the length used for all but the\n   last source block, which is\
    \ calculated based on the full source block\n   length and the object length.\n"
- title: 5.2.  Small Block Systematic FEC Codes
  contents:
  - "5.2.  Small Block Systematic FEC Codes\n   This subsection reserves the FEC Encoding\
    \ ID value 129 for the\n   Under-Specified FEC schemes described in [4] that are\
    \ called Small\n   Block Systematic FEC codes.  For Small Block Systematic FEC\
    \ codes,\n   each source block is of length at most 65536 source symbols.\n  \
    \ Although these codes can generally be accommodated by the FEC\n   Encoding ID\
    \ described in Section 5.1, a specific FEC Encoding ID is\n   defined for Small\
    \ Block Systematic FEC codes to allow more\n   flexibility and to retain header\
    \ compactness.  The small source block\n   length and small expansion factor that\
    \ often characterize systematic\n   codes may require the data source to frequently\
    \ change the source\n   block length.  To allow the dynamic variation of the source\
    \ block\n   length and to communicate it to the receivers with low overhead, the\n\
    \   block length is included in the FEC Payload ID.\n   The FEC Payload ID is\
    \ composed of the Source Block Number, Source\n   Block Length and the Encoding\
    \ Symbol ID:\n     0                   1                   2                 \
    \  3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    | \
    \                    Source Block Number                       |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |      Source Block Length      |       Encoding Symbol ID      |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The Source Block Number identifies from which source block of the\n   object\
    \ the encoding symbol(s) in the payload are generated.  These\n   blocks are numbered\
    \ consecutively from 0 to N-1, where N is the\n   number of source blocks in the\
    \ object.\n   The Source Block Length is the length in units of source symbols\
    \ of\n   the source block identified by the Source Block Number.\n   The Encoding\
    \ Symbol ID identifies which specific encoding symbol(s)\n   generated from the\
    \ source block are carried in the packet payload.\n   Each encoding symbol is\
    \ either an original source symbol or a\n   redundant symbol generated by the\
    \ encoder.  The exact details of the\n   correspondence between Encoding Symbol\
    \ IDs and the encoding symbol(s)\n   in the packet payload are dependent on the\
    \ particular encoding\n   algorithm used as identified by the FEC Encoding ID\
    \ and by the FEC\n   Instance ID, and these details may be proprietary.\n   The\
    \ FEC Object Transmission Information has the following specific\n   information:\n\
    \   o The FEC Encoding ID 129.\n   o The FEC Instance ID associated with the FEC\
    \ Encoding ID 129 to be\n     used.\n   o The total length of the object in bytes.\n\
    \   o The maximum number of encoding symbols that can be generated for\n     any\
    \ source block.  This field is provided for example to allow\n     receivers to\
    \ preallocate buffer space that is suitable for decoding\n     to recover any\
    \ source block.\n   o For each source block, the length in bytes of encoding symbols\
    \ for\n     the source block.\n   How this out-of-band information is communicated\
    \ is outside the scope\n   of this document.  As an example the length in bytes\
    \ of encoding\n   symbols for each source block may be the same for all source\
    \ blocks.\n   As another example, the encoding symbol length may be the same for\n\
    \   all source blocks of a given object and this length is communicated\n   for\
    \ each object.  As a third example, it may be that there is a\n   threshold value\
    \ I, and for all source blocks consisting of less than\n   I source symbols, the\
    \ encoding symbol length is one fixed number of\n   bytes, but for all source\
    \ blocks consisting of I or more source\n   symbols, the encoding symbol length\
    \ is a different fixed number of\n   bytes.\n   Note that each encoding symbol,\
    \ i.e., each source symbol and\n   redundant symbol, must be the same length for\
    \ a given source block,\n   and this implies that each source block length is\
    \ a multiple of its\n   encoding symbol length.  If the original source block\
    \ length is not a\n   multiple of the encoding symbol length, it is up to the\
    \ sending\n   application to appropriately pad the original source block to form\n\
    \   the source block to be encoded, and to communicate this padding to\n   the\
    \ receiving application.  The form of this padding, if used, and\n   how it is\
    \ communicated to the receiving application, is outside the\n   scope of this\
    \ document, and must be handled at the application level.\n"
- title: 6.  Requirements from other building blocks
  contents:
  - "6.  Requirements from other building blocks\n   The FEC building block does not\
    \ provide any support for congestion\n   control.  Any complete protocol MUST\
    \ provide congestion control that\n   conforms to RFC 2357 [5], and thus this\
    \ MUST be provided by another\n   building block when the FEC building block is\
    \ used in a protocol.\n   There are no other specific requirements from other\
    \ building blocks\n   for the use of this FEC building block.  However, any protocol\
    \ that\n   uses the FEC building block will inevitably use other building blocks\n\
    \   for example to provide support for sending higher level session\n   information\
    \ within data packets containing FEC encoding symbols.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Data delivery can be subject to denial-of-service\
    \ attacks by\n   attackers which send corrupted packets that are accepted as\n\
    \   legitimate by receivers.  This is particularly a concern for\n   multicast\
    \ delivery because a corrupted packet may be injected into\n   the session close\
    \ to the root of the multicast tree, in which case\n   the corrupted packet will\
    \ arrive to many receivers.  This is\n   particularly a concern for the FEC building\
    \ block because the use of\n   even one corrupted packet containing encoding data\
    \ may result in the\n   decoding of an object that is completely corrupted and\
    \ unusable.  It\n   is thus RECOMMENDED that the decoded objects be checked for\
    \ integrity\n   before delivering objects to an application.  For example, an\
    \ MD5\n   hash [8] of an object may be appended before transmission, and the\n\
    \   MD5 hash is computed and checked after the object is decoded but\n   before\
    \ it is delivered to an application.  Moreover, in order to\n   obtain strong\
    \ cryptographic integrity protection a digital signature\n   verifiable by the\
    \ receiver SHOULD be computed on top of such a hash\n   value.  It is also RECOMMENDED\
    \ that a packet authentication protocol\n   such as TESLA [7] be used to detect\
    \ and discard corrupted packets\n   upon arrival.  Furthermore, it is RECOMMENDED\
    \ that Reverse Path\n   Forwarding checks be enabled in all network routers and\
    \ switches\n   along the path from the sender to receivers to limit the possibility\n\
    \   of a bad agent successfully injecting a corrupted packet into the\n   multicast\
    \ tree data path.\n   Another security concern is that some FEC information may\
    \ be obtained\n   by receivers out-of-band in a session description, and if the\
    \ session\n   description is forged or corrupted then the receivers will not use\n\
    \   the correct protocol for decoding content from received packets.  To\n   avoid\
    \ these problems, it is RECOMMENDED that measures be taken to\n   prevent receivers\
    \ from accepting incorrect session descriptions,\n   e.g., by using source authentication\
    \ to ensure that receivers only\n   accept legitimate session descriptions from\
    \ authorized senders.\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   Values of FEC Encoding IDs and FEC Instance IDs are\
    \ subject to IANA\n   registration.  FEC Encoding IDs and FEC Instance IDs are\n\
    \   hierarchical:  FEC Encoding IDs scope ranges of FEC Instance IDs.\n   Only\
    \ FEC Encoding IDs that correspond to Under-Specified FEC schemes\n   scope a\
    \ corresponding set of FEC Instance IDs.\n   The FEC Encoding ID is a numeric\
    \ non-negative index.  In this\n   document, the range of values for FEC Encoding\
    \ IDs is 0 to 255.\n   Values from 0 to 127 are reserved for Fully-Specified FEC\
    \ schemes and\n   Values from 128 to 255 are reserved for Under-Specified FEC\
    \ schemes,\n   as described in more detail in Section 3.1.  This specification\n\
    \   already assigns the values 128 and 129, as described in Section 5.\n   Each\
    \ FEC Encoding ID assigned to an Under-Specified FEC scheme scopes\n   an independent\
    \ range of FEC Instance IDs (i.e., the same value of FEC\n   Instance ID can be\
    \ reused for different FEC Encoding IDs).  An FEC\n   Instance ID is a numeric\
    \ non-negative index.\n"
- title: 8.1.  Explicit IANA Assignment Guidelines
  contents:
  - "8.1.  Explicit IANA Assignment Guidelines\n   This document defines a name-space\
    \ for FEC Encoding IDs named:\n                           ietf:rmt:fec:encoding\n\
    \   IANA has established and manages the new registry for the\n   \"ietf:rmt:fec:encoding\"\
    \ name-space.  The values that can be assigned\n   within the \"ietf:rmt:fec:encoding\"\
    \ name-space are numeric indexes in\n   the range [0, 255], boundaries included.\
    \  Assignment requests are\n   granted on a \"Specification Required\" basis as\
    \ defined in RFC 2434\n   [6]: An IETF RFC MUST exist and specify the FEC Payload\
    \ ID fields and\n   formats as well as the FEC Object Transmission Information\
    \ for the\n   value of \"ietf:rmt:fec:encoding\" (FEC Encoding ID) being assigned\
    \ by\n   IANA (see Section 3.1 for more details).  Note that the values 128\n\
    \   and 129 of \"ietf:rmt:fec:encoding\" are already assigned by this\n   document\
    \ as described in Section 5.\n   This document also defines a name-space for FEC\
    \ Instance IDs named:\n                      ietf:rmt:fec:encoding:instance\n\
    \   The \"ietf:rmt:fec:encoding:instance\" name-space is a sub-name-space\n  \
    \ associated with the \"ietf:rmt:fec:encoding\" name-space.  Each value\n   of\
    \ \"ietf:rmt:fec:encoding\" assigned in the range [128, 255] has a\n   separate\
    \ \"ietf:rmt:fec:encoding:instance\" sub-name-space that it\n   scopes.  Values\
    \ of \"ietf:rmt:fec:encoding\" in the range [0, 127] do\n   not scope a \"ietf:rmt:fec:encoding:instance\"\
    \ sub-name-space.\n   The values that can be assigned within each\n   \"ietf:rmt:fec:encoding:instance\"\
    \ sub-name-space are non-negative\n   numeric indices. Assignment requests are\
    \ granted on a \"First Come\n   First Served\" basis as defined in RFC 2434 [6].\
    \  The same value of\n   \"ietf:rmt:fec:encoding:instance\" can be assigned within\
    \ multiple\n   distinct sub-name-spaces, i.e., the same value of\n   \"ietf:rmt:fec:encoding:instance\"\
    \ can be used for multiple values of\n   \"ietf:rmt:fec:encoding\".\n   Requestors\
    \ of \"ietf:rmt:fec:encoding:instance\" assignments MUST\n   provide the following\
    \ information:\n   o The value of \"ietf:rmt:fec:encoding\" that scopes the\n\
    \     \"ietf:rmt:fec:encoding:instance\" sub-name-space.  This must be in\n  \
    \   the range [128, 255].\n   o Point of contact information\n   o A pointer to\
    \ publicly accessible documentation describing the\n     Under-Specified FEC scheme,\
    \ associated with the value of\n     \"ietf:rmt:fec:encoding:instance\" assigned,\
    \ and a way to obtain it\n     (e.g., a pointer to a publicly available reference-implementation\n\
    \     or the name and contacts of a company that sells it, either\n     separately\
    \ or embedded in a product).\n   It is the responsibility of the requestor to\
    \ keep all the above\n   information up to date.\n"
- title: 9.  Intellectual Property Disclosure
  contents:
  - "9.  Intellectual Property Disclosure\n   The IETF has been notified of intellectual\
    \ property rights claimed in\n   regard to some or all of the specification contained\
    \ in this\n   document.  For more information consult the online list of claimed\n\
    \   rights.\n"
- title: 10.  Acknowledgments
  contents:
  - "10.  Acknowledgments\n   Brian Adamson contributed to this document by shaping\
    \ Section 5.2 and\n   providing general feedback.  We also wish to thank Vincent\
    \ Roca,\n   Justin Chapweske and Roger Kermode for their extensive comments.\n"
- title: 11.  References
  contents:
  - "11.  References\n   [1] Bradner, S., \"The Internet Standards Process -- Revision\
    \ 3\", BCP\n       9, RFC 2026, October 1996.\n   [2] Bradner, S., \"Key words\
    \ for use in RFCs to Indicate Requirement\n       Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   [3] Kermode, R. and L. Vicisano, \"Author Guidelines for Reliable\n\
    \       Multicast Transport (RMT) Building Blocks and Protocol\n       Instantiation\
    \ documents\", RFC 3269, April 2002.\n   [4] Luby, M., Vicisano, L., Gemmell,\
    \ J., Rizzo, L., Handley, M. and\n       J. Crowcroft, \"The Use of Forward Error\
    \ Correction (FEC) in\n       Reliable Multicast\", RFC 3453, December 2002.\n\
    \   [5] Mankin, A., Romanow, A., Bradner, S. and V. Paxson, \"IETF\n       Criteria\
    \ for Evaluating Reliable Multicast Transport and\n       Application Protocols\"\
    , RFC 2357, June 1998.\n   [6] Narten, T. and H. Alvestrand, \"Guidelines for\
    \ Writing an IANA\n       Considerations Section in RFCs\", BCP 26, RFC 2434,\
    \ October 1998.\n   [7] Perrig, A., Canetti, R., Song, D. and J. Tygar, \"Efficient\
    \ and\n       Secure Source Authentication for Multicast\", Network and\n    \
    \   Distributed System Security Symposium, NDSS 2001, pp. 35-46,\n       February\
    \ 2001.\n   [8] Rivest, R., \"The MD5 Message-Digest Algorithm\", RFC 1321, April\n\
    \       1992.\n   [9] Whetten, B., Vicisano, L., Kermode, R., Handley, M., Floyd,\
    \ S.\n       and M. Luby, \"Reliable Multicast Transport Building Blocks for\n\
    \       One-to-Many Bulk-Data Transfer\", RFC 3048, January 2001.\n"
- title: 12.  Authors' Addresses
  contents:
  - "12.  Authors' Addresses\n   Michael Luby\n   Digital Fountain, Inc.\n   39141\
    \ Civic Center Drive\n   Suite 300\n   Fremont, CA  94538\n   EMail: luby@digitalfountain.com\n\
    \   Lorenzo Vicisano\n   Cisco Systems, Inc.\n   170 West Tasman Dr.,\n   San\
    \ Jose, CA, USA, 95134\n   EMail: lorenzo@cisco.com\n   Jim Gemmell\n   Microsoft\
    \ Research\n   455 Market St. #1690\n   San Francisco, CA, 94105\n   EMail: jgemmell@microsoft.com\n\
    \   Luigi Rizzo\n   Dip. di Ing. dell'Informazione\n   Universita` di Pisa\n \
    \  via Diotisalvi 2, 56126 Pisa, Italy\n   EMail: luigi@iet.unipi.it\n   Mark\
    \ Handley\n   ICSI Center for Internet Research\n   1947 Center St.\n   Berkeley\
    \ CA, USA, 94704\n   EMail: mjh@icir.org\n   Jon Crowcroft\n   Marconi Professor\
    \ of Communications Systems\n   University of Cambridge\n   Computer Laboratory\n\
    \   William Gates Building\n   J J Thomson Avenue\n   Cambridge\n   CB3 0FD\n\
    \   EMail: Jon.Crowcroft@cl.cam.ac.uk\n"
- title: 13.  Full Copyright Statement
  contents:
  - "13.  Full Copyright Statement\n   Copyright (C) The Internet Society (2002).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
