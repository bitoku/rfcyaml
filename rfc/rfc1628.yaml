- title: __initial_text__
  contents:
  - '                    UPS Management Information Base

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ..............................................\
    \    1\n   2. The SNMPv2 Network Management Framework ...................    2\n\
    \   2.1 Object Definitions .......................................    2\n   3.\
    \ Overview ..................................................    2\n   4. Definitions\
    \ ...............................................    3\n   4.1 The Device Identification\
    \ Group...........................    4\n   4.2 The Battery Group ........................................\
    \    5\n   4.3 The Input Group ..........................................    7\n\
    \   4.4 The Output Group .........................................    9\n   4.5\
    \ The Bypass Group .........................................   12\n   4.6 The\
    \ Alarm Group ..........................................   13\n   4.7 The Test\
    \ Group ...........................................   19\n   4.8 The Control Group\
    \ ........................................   23\n   4.9 The Configuration Group\
    \ ..................................   26\n   5. Acknowledgements ..........................................\
    \   43\n   6. References ................................................   44\n\
    \   7. Security Considerations ...................................   45\n   8.\
    \ Author's Address ..........................................   45\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This memo defines a portion of the Management Information\
    \ Base (MIB)\n   for use with network management protocols in the Internet community.\n\
    \   In particular, it defines objects for managing uninterruptible power\n   supply\
    \ (UPS) systems.\n"
- title: 2.  The SNMPv2 Network Management Framework
  contents:
  - "2.  The SNMPv2 Network Management Framework\n   The SNMPv2 Network Management\
    \ Framework consists of four major\n   components.  They are:\n      o    RFC\
    \ 1442 which defines the SMI, the mechanisms used for\n           describing and\
    \ naming objects for the purpose of management.\n      o    STD 17, RFC 1213 defines\
    \ MIB-II, the core set of managed\n           objects for the Internet suite of\
    \ protocols.\n      o    RFC 1445 which defines the administrative and other\n\
    \           architectural aspects of the framework.\n      o    RFC 1448 which\
    \ defines the protocol used for network access\n           to managed objects.\n\
    \   The Framework permits new objects to be defined for the purpose of\n   experimentation\
    \ and evaluation.\n"
- title: 2.1.  Object Definitions
  contents:
  - "2.1.  Object Definitions\n   Managed objects are accessed via a virtual information\
    \ store, termed\n   the Management Information Base or MIB.  Objects in the MIB\
    \ are\n   defined using the subset of Abstract Syntax Notation One (ASN.1)\n \
    \  defined in the SMI.  In particular, each object type is named by an\n   OBJECT\
    \ IDENTIFIER, an administratively assigned name.  The object\n   type together\
    \ with an object instance serves to uniquely identify a\n   specific instantiation\
    \ of the object.  For human convenience, we\n   often use a textual string, termed\
    \ the descriptor, to refer to the\n   object type.\n"
- title: 3.  Overview
  contents:
  - "3.  Overview\n   This document defines the managed objects for Uninterruptible\
    \ Power\n   Supplies which are to be manageable via the Simple Network Management\n\
    \   Protocol (SNMP).\n"
- title: 4.  Definitions
  contents:
  - "4.  Definitions\n   UPS-MIB DEFINITIONS ::= BEGIN\n   IMPORTS\n       MODULE-IDENTITY,\
    \ OBJECT-TYPE, NOTIFICATION-TYPE,\n       OBJECT-IDENTITY, Counter32, Gauge32,\
    \ Integer32\n           FROM SNMPv2-SMI\n       DisplayString, TimeStamp, TimeInterval,\
    \ TestAndIncr,\n         AutonomousType\n           FROM SNMPv2-TC\n       MODULE-COMPLIANCE,\
    \ OBJECT-GROUP\n           FROM SNMPv2-CONF;\n   upsMIB MODULE-IDENTITY\n    \
    \   LAST-UPDATED \"9402230000Z\"\n       ORGANIZATION \"IETF UPS MIB Working Group\"\
    \n       CONTACT-INFO\n              \"        Jeffrey D. Case\n             \
    \   Postal: SNMP Research, Incorporated\n                        3001 Kimberlin\
    \ Heights Road\n                        Knoxville, TN  37920\n               \
    \         US\n                   Tel: +1 615 573 1434\n                   Fax:\
    \ +1 615 573 9197\n                E-mail: case@snmp.com\"\n       DESCRIPTION\n\
    \               \"The MIB module to describe Uninterruptible Power\n         \
    \      Supplies.\"\n       ::= { mib-2 33 }\n   PositiveInteger ::= TEXTUAL-CONVENTION\n\
    \       DISPLAY-HINT \"d\"\n       STATUS       current\n       DESCRIPTION\n\
    \               \"This data type is a non-zero and non-negative value.\"\n   \
    \    SYNTAX       INTEGER (1..2147483647)\n   NonNegativeInteger ::= TEXTUAL-CONVENTION\n\
    \       DISPLAY-HINT \"d\"\n       STATUS       current\n       DESCRIPTION\n\
    \               \"This data type is a non-negative value.\"\n       SYNTAX   \
    \    INTEGER (0..2147483647)\n   upsObjects            OBJECT IDENTIFIER ::= {\
    \ upsMIB 1 }\n   --\n   -- The Device Identification group.\n   --      All objects\
    \ in this group except for upsIdentName and\n   --      upsIdentAttachedDevices\
    \ are set at device initialization\n   --      and remain static.\n   --\n   upsIdent\
    \              OBJECT IDENTIFIER ::= { upsObjects 1 }\n   upsIdentManufacturer\
    \ OBJECT-TYPE\n       SYNTAX     DisplayString (SIZE (0..31))\n       MAX-ACCESS\
    \ read-only\n       STATUS     current\n       DESCRIPTION\n               \"\
    The name of the UPS manufacturer.\"\n       ::= { upsIdent 1 }\n   upsIdentModel\
    \ OBJECT-TYPE\n       SYNTAX     DisplayString (SIZE (0..63))\n       MAX-ACCESS\
    \ read-only\n       STATUS     current\n       DESCRIPTION\n               \"\
    The UPS Model designation.\"\n       ::= { upsIdent 2 }\n   upsIdentUPSSoftwareVersion\
    \ OBJECT-TYPE\n       SYNTAX     DisplayString (SIZE (0..63))\n       MAX-ACCESS\
    \ read-only\n       STATUS     current\n       DESCRIPTION\n               \"\
    The UPS firmware/software version(s).  This variable\n               may or may\
    \ not have the same value as\n               upsIdentAgentSoftwareVersion in some\
    \ implementations.\"\n       ::= { upsIdent 3 }\n   upsIdentAgentSoftwareVersion\
    \ OBJECT-TYPE\n       SYNTAX     DisplayString (SIZE (0..63))\n       MAX-ACCESS\
    \ read-only\n       STATUS     current\n       DESCRIPTION\n               \"\
    The UPS agent software version.  This variable may or\n               may not\
    \ have the same value as\n               upsIdentUPSSoftwareVersion in some implementations.\"\
    \n       ::= { upsIdent 4 }\n   upsIdentName OBJECT-TYPE\n       SYNTAX     DisplayString\
    \ (SIZE(0..63))\n       MAX-ACCESS read-write\n       STATUS     current\n   \
    \    DESCRIPTION\n               \"A string identifying the UPS.  This object\
    \ should be\n               set by the administrator.\"\n       ::= { upsIdent\
    \ 5 }\n   upsIdentAttachedDevices OBJECT-TYPE\n       SYNTAX     DisplayString\
    \ (SIZE(0..63))\n       MAX-ACCESS read-write\n       STATUS     current\n   \
    \    DESCRIPTION\n               \"A string identifying the devices attached to\
    \ the\n               output(s) of the UPS.  This object should be set by\n  \
    \             the administrator.\"\n       ::= { upsIdent 6 }\n   --\n   -- Battery\
    \ Group\n   --\n   upsBattery            OBJECT IDENTIFIER ::= { upsObjects 2\
    \ }\n   upsBatteryStatus OBJECT-TYPE\n       SYNTAX     INTEGER {\n          \
    \ unknown(1),\n           batteryNormal(2),\n           batteryLow(3),\n     \
    \      batteryDepleted(4)\n       }\n       MAX-ACCESS read-only\n       STATUS\
    \     current\n       DESCRIPTION\n               \"The indication of the capacity\
    \ remaining in the UPS\n               system's batteries.   A value of batteryNormal\n\
    \               indicates that the remaining run-time is greater than\n      \
    \         upsConfigLowBattTime.  A value of batteryLow indicates\n           \
    \    that the remaining battery run-time is less than or\n               equal\
    \ to upsConfigLowBattTime.  A value of\n               batteryDepleted indicates\
    \ that the UPS will be unable\n               to sustain the present load when\
    \ and if the utility\n               power is lost (including the possibility\
    \ that the\n               utility power is currently absent and the UPS is\n\
    \               unable to sustain the output).\"\n       ::= { upsBattery 1 }\n\
    \   upsSecondsOnBattery OBJECT-TYPE\n       SYNTAX     NonNegativeInteger\n  \
    \     UNITS      \"seconds\"\n       MAX-ACCESS read-only\n       STATUS     current\n\
    \       DESCRIPTION\n               \"If the unit is on battery power, the elapsed\
    \ time\n               since the UPS last switched to battery power, or the\n\
    \               time since the network management subsystem was last\n       \
    \        restarted, whichever is less.  Zero shall be returned\n             \
    \  if the unit is not on battery power.\"\n       ::= { upsBattery 2 }\n   upsEstimatedMinutesRemaining\
    \ OBJECT-TYPE\n       SYNTAX     PositiveInteger\n       UNITS      \"minutes\"\
    \n       MAX-ACCESS read-only\n       STATUS     current\n       DESCRIPTION\n\
    \               \"An estimate of the time to battery charge depletion\n      \
    \         under the present load conditions if the utility power\n           \
    \    is off and remains off, or if it were to be lost and\n               remain\
    \ off.\"\n       ::= { upsBattery 3 }\n   upsEstimatedChargeRemaining OBJECT-TYPE\n\
    \       SYNTAX     INTEGER (0..100)\n       UNITS      \"percent\"\n       MAX-ACCESS\
    \ read-only\n       STATUS     current\n       DESCRIPTION\n               \"\
    An estimate of the battery charge remaining expressed\n               as a percent\
    \ of full charge.\"\n       ::= { upsBattery 4 }\n   upsBatteryVoltage OBJECT-TYPE\n\
    \       SYNTAX     NonNegativeInteger\n       UNITS      \"0.1 Volt DC\"\n   \
    \    MAX-ACCESS read-only\n       STATUS     current\n       DESCRIPTION\n   \
    \            \"The magnitude of the present battery voltage.\"\n       ::= { upsBattery\
    \ 5 }\n   upsBatteryCurrent OBJECT-TYPE\n       SYNTAX     Integer32\n       UNITS\
    \      \"0.1 Amp DC\"\n       MAX-ACCESS read-only\n       STATUS     current\n\
    \       DESCRIPTION\n               \"The present battery current.\"\n       ::=\
    \ { upsBattery 6 }\n   upsBatteryTemperature OBJECT-TYPE\n       SYNTAX     Integer32\n\
    \       UNITS      \"degrees Centigrade\"\n       MAX-ACCESS read-only\n     \
    \  STATUS     current\n       DESCRIPTION\n               \"The ambient temperature\
    \ at or near the UPS Battery\n               casing.\"\n       ::= { upsBattery\
    \ 7 }\n   --\n   -- Input Group\n   --\n   upsInput              OBJECT IDENTIFIER\
    \ ::= { upsObjects 3 }\n   upsInputLineBads OBJECT-TYPE\n       SYNTAX     Counter32\n\
    \       MAX-ACCESS read-only\n       STATUS     current\n       DESCRIPTION\n\
    \               \"A count of the number of times the input entered an\n      \
    \         out-of-tolerance condition as defined by the\n               manufacturer.\
    \  This count is incremented by one each\n               time the input transitions\
    \ from zero out-of-tolerance\n               lines to one or more input lines\
    \ out-of-tolerance.\"\n       ::= { upsInput 1 }\n   upsInputNumLines OBJECT-TYPE\n\
    \       SYNTAX     NonNegativeInteger\n       MAX-ACCESS read-only\n       STATUS\
    \     current\n       DESCRIPTION\n               \"The number of input lines\
    \ utilized in this device.\n               This variable indicates the number\
    \ of rows in the\n               input table.\"\n       ::= { upsInput 2 }\n \
    \  upsInputTable OBJECT-TYPE\n       SYNTAX     SEQUENCE OF UpsInputEntry\n  \
    \     MAX-ACCESS not-accessible\n       STATUS     current\n       DESCRIPTION\n\
    \               \"A list of input table entries.  The number of entries\n    \
    \           is given by the value of upsInputNumLines.\"\n       ::= { upsInput\
    \ 3 }\n   upsInputEntry OBJECT-TYPE\n       SYNTAX     UpsInputEntry\n       MAX-ACCESS\
    \ not-accessible\n       STATUS     current\n       DESCRIPTION\n            \
    \   \"An entry containing information applicable to a\n               particular\
    \ input line.\"\n       INDEX { upsInputLineIndex }\n       ::= { upsInputTable\
    \ 1 }\n   UpsInputEntry ::= SEQUENCE {\n       upsInputLineIndex   PositiveInteger,\n\
    \       upsInputFrequency   NonNegativeInteger,\n       upsInputVoltage     NonNegativeInteger,\n\
    \       upsInputCurrent     NonNegativeInteger,\n       upsInputTruePower   NonNegativeInteger\n\
    \   }\n   upsInputLineIndex OBJECT-TYPE\n       SYNTAX     PositiveInteger\n \
    \      MAX-ACCESS not-accessible\n       STATUS     current\n       DESCRIPTION\n\
    \               \"The input line identifier.\"\n       ::= { upsInputEntry 1 }\n\
    \   upsInputFrequency OBJECT-TYPE\n       SYNTAX     NonNegativeInteger\n    \
    \   UNITS      \"0.1 Hertz\"\n       MAX-ACCESS read-only\n       STATUS     current\n\
    \       DESCRIPTION\n               \"The present input frequency.\"\n       ::=\
    \ { upsInputEntry 2 }\n   upsInputVoltage OBJECT-TYPE\n       SYNTAX     NonNegativeInteger\n\
    \       UNITS      \"RMS Volts\"\n       MAX-ACCESS read-only\n       STATUS \
    \    current\n       DESCRIPTION\n               \"The magnitude of the present\
    \ input voltage.\"\n       ::= { upsInputEntry 3 }\n   upsInputCurrent OBJECT-TYPE\n\
    \       SYNTAX     NonNegativeInteger\n       UNITS      \"0.1 RMS Amp\"\n   \
    \    MAX-ACCESS read-only\n       STATUS     current\n       DESCRIPTION\n   \
    \            \"The magnitude of the present input current.\"\n       ::= { upsInputEntry\
    \ 4 }\n   upsInputTruePower OBJECT-TYPE\n       SYNTAX     NonNegativeInteger\n\
    \       UNITS      \"Watts\"\n       MAX-ACCESS read-only\n       STATUS     current\n\
    \       DESCRIPTION\n               \"The magnitude of the present input true\
    \ power.\"\n       ::= { upsInputEntry 5 }\n   --\n   -- The Output group.\n \
    \  --\n   upsOutput             OBJECT IDENTIFIER ::= { upsObjects 4 }\n   upsOutputSource\
    \ OBJECT-TYPE\n       SYNTAX     INTEGER {\n           other(1),\n           none(2),\n\
    \           normal(3),\n           bypass(4),\n           battery(5),\n      \
    \     booster(6),\n           reducer(7)\n       }\n       MAX-ACCESS read-only\n\
    \       STATUS     current\n       DESCRIPTION\n               \"The present source\
    \ of output power.  The enumeration\n               none(2) indicates that there\
    \ is no source of output\n               power (and therefore no output power),\
    \ for example,\n               the system has opened the output breaker.\"\n \
    \      ::= { upsOutput 1 }\n   upsOutputFrequency OBJECT-TYPE\n       SYNTAX \
    \    NonNegativeInteger\n       UNITS      \"0.1 Hertz\"\n       MAX-ACCESS read-only\n\
    \       STATUS     current\n       DESCRIPTION\n               \"The present output\
    \ frequency.\"\n       ::= { upsOutput 2 }\n   upsOutputNumLines OBJECT-TYPE\n\
    \       SYNTAX     NonNegativeInteger\n       MAX-ACCESS read-only\n       STATUS\
    \     current\n       DESCRIPTION\n               \"The number of output lines\
    \ utilized in this device.\n               This variable indicates the number\
    \ of rows in the\n               output table.\"\n       ::= { upsOutput 3 }\n\
    \   upsOutputTable OBJECT-TYPE\n       SYNTAX     SEQUENCE OF UpsOutputEntry\n\
    \       MAX-ACCESS not-accessible\n       STATUS     current\n       DESCRIPTION\n\
    \               \"A list of output table entries.  The number of\n           \
    \    entries is given by the value of upsOutputNumLines.\"\n       ::= { upsOutput\
    \ 4 }\n   upsOutputEntry OBJECT-TYPE\n       SYNTAX     UpsOutputEntry\n     \
    \  MAX-ACCESS not-accessible\n       STATUS     current\n       DESCRIPTION\n\
    \               \"An entry containing information applicable to a\n          \
    \     particular output line.\"\n       INDEX { upsOutputLineIndex }\n       ::=\
    \ { upsOutputTable 1 }\n   UpsOutputEntry ::= SEQUENCE {\n       upsOutputLineIndex\
    \   PositiveInteger,\n       upsOutputVoltage     NonNegativeInteger,\n      \
    \ upsOutputCurrent     NonNegativeInteger,\n       upsOutputPower       NonNegativeInteger,\n\
    \       upsOutputPercentLoad INTEGER\n   }\n   upsOutputLineIndex OBJECT-TYPE\n\
    \       SYNTAX     PositiveInteger\n       MAX-ACCESS not-accessible\n       STATUS\
    \     current\n       DESCRIPTION\n               \"The output line identifier.\"\
    \n       ::= { upsOutputEntry 1 }\n   upsOutputVoltage OBJECT-TYPE\n       SYNTAX\
    \     NonNegativeInteger\n       UNITS      \"RMS Volts\"\n       MAX-ACCESS read-only\n\
    \       STATUS     current\n       DESCRIPTION\n               \"The present output\
    \ voltage.\"\n       ::= { upsOutputEntry 2 }\n   upsOutputCurrent OBJECT-TYPE\n\
    \       SYNTAX     NonNegativeInteger\n       UNITS      \"0.1 RMS Amp\"\n   \
    \    MAX-ACCESS read-only\n       STATUS     current\n       DESCRIPTION\n   \
    \            \"The present output current.\"\n       ::= { upsOutputEntry 3 }\n\
    \   upsOutputPower OBJECT-TYPE\n       SYNTAX     NonNegativeInteger\n       UNITS\
    \      \"Watts\"\n       MAX-ACCESS read-only\n       STATUS     current\n   \
    \    DESCRIPTION\n               \"The present output true power.\"\n       ::=\
    \ { upsOutputEntry 4 }\n   upsOutputPercentLoad OBJECT-TYPE\n       SYNTAX   \
    \  INTEGER (0..200)\n       UNITS      \"percent\"\n       MAX-ACCESS read-only\n\
    \       STATUS     current\n       DESCRIPTION\n               \"The percentage\
    \ of the UPS power capacity presently\n               being used on this output\
    \ line, i.e., the greater of\n               the percent load of true power capacity\
    \ and the\n               percent load of VA.\"\n       ::= { upsOutputEntry 5\
    \ }\n   --\n   -- The Bypass group.\n   --\n   upsBypass             OBJECT IDENTIFIER\
    \ ::= { upsObjects 5 }\n   upsBypassFrequency OBJECT-TYPE\n       SYNTAX     NonNegativeInteger\n\
    \       UNITS      \"0.1 Hertz\"\n       MAX-ACCESS read-only\n       STATUS \
    \    current\n       DESCRIPTION\n               \"The present bypass frequency.\"\
    \n       ::= { upsBypass 1 }\n   upsBypassNumLines OBJECT-TYPE\n       SYNTAX\
    \     NonNegativeInteger\n       MAX-ACCESS read-only\n       STATUS     current\n\
    \       DESCRIPTION\n               \"The number of bypass lines utilized in this\
    \ device.\n               This entry indicates the number of rows in the bypass\n\
    \               table.\"\n       ::= { upsBypass 2 }\n   upsBypassTable OBJECT-TYPE\n\
    \       SYNTAX     SEQUENCE OF UpsBypassEntry\n       MAX-ACCESS not-accessible\n\
    \       STATUS     current\n       DESCRIPTION\n               \"A list of bypass\
    \ table entries.  The number of\n               entries is given by the value\
    \ of upsBypassNumLines.\"\n       ::= { upsBypass 3 }\n   upsBypassEntry OBJECT-TYPE\n\
    \       SYNTAX     UpsBypassEntry\n       MAX-ACCESS not-accessible\n       STATUS\
    \     current\n       DESCRIPTION\n               \"An entry containing information\
    \ applicable to a\n               particular bypass input.\"\n       INDEX { upsBypassLineIndex\
    \ }\n       ::= { upsBypassTable 1 }\n   UpsBypassEntry ::= SEQUENCE {\n     \
    \  upsBypassLineIndex  PositiveInteger,\n       upsBypassVoltage    NonNegativeInteger,\n\
    \       upsBypassCurrent    NonNegativeInteger,\n       upsBypassPower      NonNegativeInteger\n\
    \   }\n   upsBypassLineIndex OBJECT-TYPE\n       SYNTAX     PositiveInteger\n\
    \       MAX-ACCESS not-accessible\n       STATUS     current\n       DESCRIPTION\n\
    \               \"The bypass line identifier.\"\n       ::= { upsBypassEntry 1\
    \ }\n   upsBypassVoltage OBJECT-TYPE\n       SYNTAX     NonNegativeInteger\n \
    \      UNITS      \"RMS Volts\"\n       MAX-ACCESS read-only\n       STATUS  \
    \   current\n       DESCRIPTION\n               \"The present bypass voltage.\"\
    \n       ::= { upsBypassEntry 2 }\n   upsBypassCurrent OBJECT-TYPE\n       SYNTAX\
    \     NonNegativeInteger\n       UNITS      \"0.1 RMS Amp\"\n       MAX-ACCESS\
    \ read-only\n       STATUS     current\n       DESCRIPTION\n               \"\
    The present bypass current.\"\n       ::= { upsBypassEntry 3 }\n   upsBypassPower\
    \ OBJECT-TYPE\n       SYNTAX     NonNegativeInteger\n       UNITS      \"Watts\"\
    \n       MAX-ACCESS read-only\n       STATUS     current\n       DESCRIPTION\n\
    \               \"The present true power conveyed by the bypass.\"\n       ::=\
    \ { upsBypassEntry 4 }\n   --\n   -- The Alarm group.\n   --\n   upsAlarm    \
    \          OBJECT IDENTIFIER ::= { upsObjects 6 }\n   upsAlarmsPresent OBJECT-TYPE\n\
    \       SYNTAX     Gauge32\n       MAX-ACCESS read-only\n       STATUS     current\n\
    \       DESCRIPTION\n               \"The present number of active alarm conditions.\"\
    \n       ::= { upsAlarm 1 }\n   upsAlarmTable OBJECT-TYPE\n       SYNTAX     SEQUENCE\
    \ OF UpsAlarmEntry\n       MAX-ACCESS not-accessible\n       STATUS     current\n\
    \       DESCRIPTION\n               \"A list of alarm table entries.  The table\
    \ contains\n               zero, one, or many rows at any moment, depending upon\n\
    \               the number of alarm conditions in effect.  The table\n       \
    \        is initially empty at agent startup.  The agent\n               creates\
    \ a row in the table each time a condition is\n               detected and deletes\
    \ that row when that condition no\n               longer pertains.  The agent\
    \ creates the first row with\n               upsAlarmId equal to 1, and increments\
    \ the value of\n               upsAlarmId each time a new row is created, wrapping\
    \ to\n               the first free value greater than or equal to 1 when\n  \
    \             the maximum value of upsAlarmId would otherwise be\n           \
    \    exceeded.  Consequently, after multiple operations,\n               the table\
    \ may become sparse, e.g., containing entries\n               for rows 95, 100,\
    \ 101, and 203 and the entries should\n               not be assumed to be in\
    \ chronological order because\n               upsAlarmId might have wrapped.\n\
    \               Alarms are named by an AutonomousType (OBJECT\n              \
    \ IDENTIFIER), upsAlarmDescr, to allow a single table to\n               reflect\
    \ well known alarms plus alarms defined by a\n               particular implementation,\
    \ i.e., as documented in the\n               private enterprise MIB definition\
    \ for the device.  No\n               two rows will have the same value of upsAlarmDescr,\n\
    \               since alarms define conditions.  In order to meet this\n     \
    \          requirement, care should be taken in the definition of\n          \
    \     alarm conditions to insure that a system cannot enter\n               the\
    \ same condition multiple times simultaneously.\n               The number of\
    \ rows in the table at any given time is\n               reflected by the value\
    \ of upsAlarmsPresent.\"\n       ::= { upsAlarm 2 }\n   upsAlarmEntry OBJECT-TYPE\n\
    \       SYNTAX     UpsAlarmEntry\n       MAX-ACCESS not-accessible\n       STATUS\
    \     current\n       DESCRIPTION\n               \"An entry containing information\
    \ applicable to a\n               particular alarm.\"\n       INDEX { upsAlarmId\
    \ }\n       ::= { upsAlarmTable 1 }\n   UpsAlarmEntry ::= SEQUENCE {\n       upsAlarmId\
    \          PositiveInteger,\n       upsAlarmDescr       AutonomousType,\n    \
    \   upsAlarmTime        TimeStamp\n   }\n   upsAlarmId OBJECT-TYPE\n       SYNTAX\
    \     PositiveInteger\n       MAX-ACCESS not-accessible\n       STATUS     current\n\
    \       DESCRIPTION\n               \"A unique identifier for an alarm condition.\
    \  This\n               value must remain constant.\"\n       ::= { upsAlarmEntry\
    \ 1 }\n   upsAlarmDescr OBJECT-TYPE\n       SYNTAX     AutonomousType\n      \
    \ MAX-ACCESS read-only\n       STATUS     current\n       DESCRIPTION\n      \
    \         \"A reference to an alarm description object.  The\n               object\
    \ referenced should not be accessible, but rather\n               be used to provide\
    \ a unique description of the alarm\n               condition.\"\n       ::= {\
    \ upsAlarmEntry 2 }\n   upsAlarmTime OBJECT-TYPE\n       SYNTAX     TimeStamp\n\
    \       MAX-ACCESS read-only\n       STATUS     current\n       DESCRIPTION\n\
    \               \"The value of sysUpTime when the alarm condition was\n      \
    \         detected.  If the alarm condition was detected at the\n            \
    \   time of agent startup and presumably existed before\n               agent\
    \ startup, the value of upsAlarmTime shall equal\n               0.\"\n      \
    \ ::= { upsAlarmEntry 3 }\n   --\n   -- Well known alarm conditions.\n   --\n\
    \   upsWellKnownAlarms    OBJECT IDENTIFIER ::= { upsAlarm 3 }\n   upsAlarmBatteryBad\
    \ OBJECT-IDENTITY\n       STATUS     current\n       DESCRIPTION\n           \
    \    \"One or more batteries have been determined to require\n               replacement.\"\
    \n       ::= { upsWellKnownAlarms  1 }\n   upsAlarmOnBattery OBJECT-IDENTITY\n\
    \       STATUS     current\n       DESCRIPTION\n               \"The UPS is drawing\
    \ power from the batteries.\"\n       ::= { upsWellKnownAlarms  2 }\n   upsAlarmLowBattery\
    \ OBJECT-IDENTITY\n       STATUS     current\n       DESCRIPTION\n           \
    \    \"The remaining battery run-time is less than or equal\n               to\
    \ upsConfigLowBattTime.\"\n       ::= { upsWellKnownAlarms  3 }\n   upsAlarmDepletedBattery\
    \ OBJECT-IDENTITY\n       STATUS     current\n       DESCRIPTION\n           \
    \    \"The UPS will be unable to sustain the present load\n               when\
    \ and if the utility power is lost.\"\n       ::= { upsWellKnownAlarms  4 }\n\
    \   upsAlarmTempBad OBJECT-IDENTITY\n       STATUS     current\n       DESCRIPTION\n\
    \               \"A temperature is out of tolerance.\"\n       ::= { upsWellKnownAlarms\
    \  5 }\n   upsAlarmInputBad OBJECT-IDENTITY\n       STATUS     current\n     \
    \  DESCRIPTION\n               \"An input condition is out of tolerance.\"\n \
    \      ::= { upsWellKnownAlarms  6 }\n   upsAlarmOutputBad OBJECT-IDENTITY\n \
    \      STATUS     current\n       DESCRIPTION\n               \"An output condition\
    \ (other than OutputOverload) is\n               out of tolerance.\"\n       ::=\
    \ { upsWellKnownAlarms  7 }\n   upsAlarmOutputOverload OBJECT-IDENTITY\n     \
    \  STATUS     current\n       DESCRIPTION\n               \"The output load exceeds\
    \ the UPS output capacity.\"\n       ::= { upsWellKnownAlarms  8 }\n   upsAlarmOnBypass\
    \ OBJECT-IDENTITY\n       STATUS     current\n       DESCRIPTION\n           \
    \    \"The Bypass is presently engaged on the UPS.\"\n       ::= { upsWellKnownAlarms\
    \  9 }\n   upsAlarmBypassBad OBJECT-IDENTITY\n       STATUS     current\n    \
    \   DESCRIPTION\n               \"The Bypass is out of tolerance.\"\n       ::=\
    \ { upsWellKnownAlarms 10 }\n   upsAlarmOutputOffAsRequested OBJECT-IDENTITY\n\
    \       STATUS     current\n       DESCRIPTION\n               \"The UPS has shutdown\
    \ as requested, i.e., the output\n               is off.\"\n       ::= { upsWellKnownAlarms\
    \ 11 }\n   upsAlarmUpsOffAsRequested OBJECT-IDENTITY\n       STATUS     current\n\
    \       DESCRIPTION\n               \"The entire UPS has shutdown as commanded.\"\
    \n       ::= { upsWellKnownAlarms 12 }\n   upsAlarmChargerFailed OBJECT-IDENTITY\n\
    \       STATUS     current\n       DESCRIPTION\n               \"An uncorrected\
    \ problem has been detected within the\n               UPS charger subsystem.\"\
    \n       ::= { upsWellKnownAlarms 13 }\n   upsAlarmUpsOutputOff OBJECT-IDENTITY\n\
    \       STATUS     current\n       DESCRIPTION\n               \"The output of\
    \ the UPS is in the off state.\"\n       ::= { upsWellKnownAlarms 14 }\n   upsAlarmUpsSystemOff\
    \ OBJECT-IDENTITY\n       STATUS     current\n       DESCRIPTION\n           \
    \    \"The UPS system is in the off state.\"\n       ::= { upsWellKnownAlarms\
    \ 15 }\n   upsAlarmFanFailure OBJECT-IDENTITY\n       STATUS     current\n   \
    \    DESCRIPTION\n               \"The failure of one or more fans in the UPS\
    \ has been\n               detected.\"\n       ::= { upsWellKnownAlarms 16 }\n\
    \   upsAlarmFuseFailure OBJECT-IDENTITY\n       STATUS     current\n       DESCRIPTION\n\
    \               \"The failure of one or more fuses has been detected.\"\n    \
    \   ::= { upsWellKnownAlarms 17 }\n   upsAlarmGeneralFault OBJECT-IDENTITY\n \
    \      STATUS     current\n       DESCRIPTION\n               \"A general fault\
    \ in the UPS has been detected.\"\n       ::= { upsWellKnownAlarms 18 }\n   upsAlarmDiagnosticTestFailed\
    \ OBJECT-IDENTITY\n       STATUS     current\n       DESCRIPTION\n           \
    \    \"The result of the last diagnostic test indicates a\n               failure.\"\
    \n       ::= { upsWellKnownAlarms 19 }\n   upsAlarmCommunicationsLost OBJECT-IDENTITY\n\
    \       STATUS     current\n       DESCRIPTION\n               \"A problem has\
    \ been encountered in the communications\n               between the agent and\
    \ the UPS.\"\n       ::= { upsWellKnownAlarms 20 }\n   upsAlarmAwaitingPower OBJECT-IDENTITY\n\
    \       STATUS     current\n       DESCRIPTION\n               \"The UPS output\
    \ is off and the UPS is awaiting the\n               return of input power.\"\n\
    \       ::= { upsWellKnownAlarms 21 }\n   upsAlarmShutdownPending OBJECT-IDENTITY\n\
    \       STATUS     current\n       DESCRIPTION\n               \"A upsShutdownAfterDelay\
    \ countdown is underway.\"\n       ::= { upsWellKnownAlarms 22 }\n   upsAlarmShutdownImminent\
    \ OBJECT-IDENTITY\n       STATUS     current\n       DESCRIPTION\n           \
    \    \"The UPS will turn off power to the load in less than\n               5\
    \ seconds; this may be either a timed shutdown or a\n               low battery\
    \ shutdown.\"\n       ::= { upsWellKnownAlarms 23 }\n   upsAlarmTestInProgress\
    \ OBJECT-IDENTITY\n       STATUS     current\n       DESCRIPTION\n           \
    \    \"A test is in progress, as initiated and indicated by\n               the\
    \ Test Group.  Tests initiated via other\n               implementation-specific\
    \ mechanisms can indicate the\n               presence of the testing in the alarm\
    \ table, if\n               desired, via a OBJECT-IDENTITY macro in the MIB\n\
    \               document specific to that implementation and are\n           \
    \    outside the scope of this OBJECT-IDENTITY.\"\n       ::= { upsWellKnownAlarms\
    \ 24 }\n   --\n   -- The Test Group\n   --\n   upsTest               OBJECT IDENTIFIER\
    \ ::= { upsObjects 7 }\n   upsTestId OBJECT-TYPE\n       SYNTAX     OBJECT IDENTIFIER\n\
    \       MAX-ACCESS read-write\n       STATUS     current\n       DESCRIPTION\n\
    \               \"The test is named by an OBJECT IDENTIFIER which\n          \
    \     allows a standard mechanism for the initiation of\n               tests,\
    \ including the well known tests identified in\n               this document as\
    \ well as those introduced by a\n               particular implementation, i.e.,\
    \ as documented in the\n               private enterprise MIB definition for the\
    \ device.\n               Setting this variable initiates the named test. Sets\n\
    \               to this variable require the presence of\n               upsTestSpinLock\
    \ in the same SNMP message.\n               The set request will be rejected with\
    \ an appropriate\n               error message if the requested test cannot be\n\
    \               performed, including attempts to start a test when\n         \
    \      another test is already in progress.  The status of\n               the\
    \ current or last test is maintained in\n               upsTestResultsSummary.\
    \ Tests in progress may be\n               aborted by setting the upsTestId variable\
    \ to\n               upsTestAbortTestInProgress.\n               Read operations\
    \ return the value of the name of the\n               test in progress if a test\
    \ is in progress or the name\n               of the last test performed if no\
    \ test is in progress,\n               unless no test has been run, in which case\
    \ the well\n               known value upsTestNoTestsInitiated is returned.\"\n\
    \       ::= { upsTest 1 }\n   -- see [6] for more information on the semantics\
    \ of objects with\n   -- syntax of TestAndIncr\n   upsTestSpinLock OBJECT-TYPE\n\
    \       SYNTAX     TestAndIncr\n       MAX-ACCESS read-write\n       STATUS  \
    \   current\n       DESCRIPTION\n               \"A spin lock on the test subsystem.\
    \  The spinlock is\n               used as follows.\n               Before starting\
    \ a test, a manager-station should make\n               sure that a test is not\
    \ in progress as follows:\n                   try_again:\n                   \
    \  get (upsTestSpinLock)\n                     while (upsTestResultsSummary ==\
    \ inProgress) {\n                       /* loop while a test is running for another\n\
    \               manager */\n                       short delay\n             \
    \          get (upsTestSpinLock)\n                     }\n                   \
    \  lock_value = upsTestSpinLock\n                     /* no test in progress,\
    \ start the test */\n                     set (upsTestSpinLock = lock_value, upsTestId\
    \ =\n               requested_test)\n                     if (error_index == 1)\
    \ { /* (upsTestSpinLock\n               failed) */\n                       /*\
    \ if problem is not access control, then\n                           some other\
    \ manager slipped in ahead of us\n               */\n                       goto\
    \ try_again\n                     }\n                     if (error_index == 2)\
    \ { /* (upsTestId) */\n                       /* cannot perform the test */\n\
    \                       give up\n                     }\n                    \
    \ /* test started ok */\n                     /* wait for test completion by polling\n\
    \               upsTestResultsSummary */\n                     get (upsTestSpinLock,\
    \ upsTestResultsSummary,\n               upsTestResultsDetail)\n             \
    \        while (upsTestResultsSummary == inProgress) {\n                     \
    \  short delay\n                       get (upsTestSpinLock, upsTestResultsSummary,\n\
    \               upsTestResultsDetail)\n                     }\n              \
    \       /* when test completes, retrieve any additional\n               test results\
    \ */\n                     /* if upsTestSpinLock == lock_value + 1, then\n   \
    \            these are our test */\n                     /* results (as opposed\
    \ to another manager's */\n                     The initial value of upsTestSpinLock\
    \ at agent\n               initialization shall\n                     be 1.\"\n\
    \       ::= { upsTest 2 }\n   upsTestResultsSummary OBJECT-TYPE\n       SYNTAX\
    \     INTEGER {\n           donePass(1),\n           doneWarning(2),\n       \
    \    doneError(3),\n           aborted(4),\n           inProgress(5),\n      \
    \     noTestsInitiated(6)\n       }\n       MAX-ACCESS read-only\n       STATUS\
    \     current\n       DESCRIPTION\n               \"The results of the current\
    \ or last UPS diagnostics\n               test performed.  The values for donePass(1),\n\
    \               doneWarning(2), and doneError(3) indicate that the\n         \
    \      test completed either successfully, with a warning, or\n              \
    \ with an error, respectively.  The value aborted(4) is\n               returned\
    \ for tests which are aborted by setting the\n               value of upsTestId\
    \ to upsTestAbortTestInProgress.\n               Tests which have not yet concluded\
    \ are indicated by\n               inProgress(5).  The value noTestsInitiated(6)\n\
    \               indicates that no previous test results are available,\n     \
    \          such as is the case when no tests have been run since\n           \
    \    the last reinitialization of the network management\n               subsystem\
    \ and the system has no provision for non-\n               volatile storage of\
    \ test results.\"\n       ::= { upsTest 3 }\n   upsTestResultsDetail OBJECT-TYPE\n\
    \       SYNTAX     DisplayString (SIZE (0..255))\n       MAX-ACCESS read-only\n\
    \       STATUS     current\n       DESCRIPTION\n               \"Additional information\
    \ about upsTestResultsSummary.\n               If no additional information available,\
    \ a zero length\n               string is returned.\"\n       ::= { upsTest 4\
    \ }\n   upsTestStartTime OBJECT-TYPE\n       SYNTAX     TimeStamp\n       MAX-ACCESS\
    \ read-only\n       STATUS     current\n       DESCRIPTION\n               \"\
    The value of sysUpTime at the time the test in\n               progress was initiated,\
    \ or, if no test is in progress,\n               the time the previous test was\
    \ initiated.  If the\n               value of upsTestResultsSummary is noTestsInitiated(6),\n\
    \               upsTestStartTime has the value 0.\"\n       ::= { upsTest 5 }\n\
    \   upsTestElapsedTime OBJECT-TYPE\n       SYNTAX     TimeInterval\n       MAX-ACCESS\
    \ read-only\n       STATUS     current\n       DESCRIPTION\n               \"\
    The amount of time, in TimeTicks, since the test in\n               progress was\
    \ initiated, or, if no test is in progress,\n               the previous test\
    \ took to complete.  If the value of\n               upsTestResultsSummary is\
    \ noTestsInitiated(6),\n               upsTestElapsedTime has the value 0.\"\n\
    \       ::= { upsTest 6 }\n   --\n   -- Well known tests.\n   --\n   upsWellKnownTests\
    \     OBJECT IDENTIFIER ::= { upsTest 7 }\n   upsTestNoTestsInitiated OBJECT-IDENTITY\n\
    \       STATUS     current\n       DESCRIPTION\n               \"No tests have\
    \ been initiated and no test is in\n               progress.\"\n       ::= { upsWellKnownTests\
    \  1 }\n   upsTestAbortTestInProgress OBJECT-IDENTITY\n       STATUS     current\n\
    \       DESCRIPTION\n               \"The test in progress is to be aborted /\
    \ the test in\n               progress was aborted.\"\n       ::= { upsWellKnownTests\
    \  2 }\n   upsTestGeneralSystemsTest OBJECT-IDENTITY\n       STATUS     current\n\
    \       DESCRIPTION\n               \"The manufacturer's standard test of UPS\
    \ device\n               systems.\"\n       ::= { upsWellKnownTests  3 }\n   upsTestQuickBatteryTest\
    \ OBJECT-IDENTITY\n       STATUS     current\n       DESCRIPTION\n           \
    \    \"A test that is sufficient to determine if the battery\n               needs\
    \ replacement.\"\n       ::= { upsWellKnownTests  4 }\n   upsTestDeepBatteryCalibration\
    \ OBJECT-IDENTITY\n       STATUS     current\n       DESCRIPTION\n           \
    \    \"The system is placed on battery to a discharge level,\n               set\
    \ by the manufacturer, sufficient to determine\n               battery replacement\
    \ and battery run-time with a high\n               degree of confidence.  WARNING:\
    \  this test will leave\n               the battery in a low charge state and\
    \ will require\n               time for recharging to a level sufficient to provide\n\
    \               normal battery duration for the protected load.\"\n       ::=\
    \ { upsWellKnownTests  5 }\n   --\n   -- The Control group.\n   --\n   upsControl\
    \            OBJECT IDENTIFIER ::= { upsObjects 8 }\n   upsShutdownType OBJECT-TYPE\n\
    \       SYNTAX     INTEGER {\n           output(1),\n           system(2)\n  \
    \     }\n       MAX-ACCESS read-write\n       STATUS     current\n       DESCRIPTION\n\
    \               \"This object determines the nature of the action to be\n    \
    \           taken at the time when the countdown of the\n               upsShutdownAfterDelay\
    \ and upsRebootWithDuration\n               objects reaches zero.\n          \
    \     Setting this object to output(1) indicates that\n               shutdown\
    \ requests should cause only the output of the\n               UPS to turn off.\
    \  Setting this object to system(2)\n               indicates that shutdown requests\
    \ will cause the entire\n               UPS system to turn off.\"\n       ::=\
    \ { upsControl 1 }\n   upsShutdownAfterDelay OBJECT-TYPE\n       SYNTAX     INTEGER\
    \ (-1..2147483648)\n       UNITS      \"seconds\"\n       MAX-ACCESS read-write\n\
    \       STATUS     current\n       DESCRIPTION\n               \"Setting this\
    \ object will shutdown (i.e., turn off)\n               either the UPS output\
    \ or the UPS system (as determined\n               by the value of upsShutdownType\
    \ at the time of\n               shutdown) after the indicated number of seconds,\
    \ or\n               less if the UPS batteries become depleted. Setting\n    \
    \           this object to 0 will cause the shutdown to occur\n              \
    \ immediately.  Setting this object to -1 will abort the\n               countdown.\
    \  If the system is already in the desired\n               state at the time the\
    \ countdown reaches 0, then\n               nothing will happen.  That is, there\
    \ is no additional\n               action at that time if upsShutdownType = system\
    \ and\n               the system is already off.  Similarly, there is no\n   \
    \            additional action at that time if upsShutdownType =\n           \
    \    output and the output is already off.  When read,\n               upsShutdownAfterDelay\
    \ will return the number of\n               seconds remaining until shutdown,\
    \ or -1 if no shutdown\n               countdown is in effect.  On some systems,\
    \ if the agent\n               is restarted while a shutdown countdown is in effect,\n\
    \               the countdown may be aborted.  Sets to this object\n         \
    \      override any upsShutdownAfterDelay already in effect.\"\n       ::= { upsControl\
    \ 2 }\n   upsStartupAfterDelay OBJECT-TYPE\n       SYNTAX     INTEGER (-1..2147483648)\n\
    \       UNITS      \"seconds\"\n       MAX-ACCESS read-write\n       STATUS  \
    \   current\n       DESCRIPTION\n               \"Setting this object will start\
    \ the output after the\n               indicated number of seconds, including\
    \ starting the\n               UPS, if necessary.  Setting this object to 0 will\n\
    \               cause the startup to occur immediately.  Setting this\n      \
    \         object to -1 will abort the countdown.  If the output\n            \
    \   is already on at the time the countdown reaches 0,\n               then nothing\
    \ will happen.  Sets to this object\n               override the effect of any\
    \ upsStartupAfterDelay\n               countdown or upsRebootWithDuration countdown\
    \ in\n               progress.  When read, upsStartupAfterDelay will return\n\
    \               the number of seconds until startup, or -1 if no\n           \
    \    startup countdown is in effect.  If the countdown\n               expires\
    \ during a utility failure, the startup shall\n               not occur until\
    \ the utility power is restored.  On\n               some systems, if the agent\
    \ is restarted while a\n               startup countdown is in effect, the countdown\
    \ is\n               aborted.\"\n       ::= { upsControl 3 }\n   upsRebootWithDuration\
    \ OBJECT-TYPE\n       SYNTAX     INTEGER (-1..300)\n       UNITS      \"seconds\"\
    \n       MAX-ACCESS read-write\n       STATUS     current\n       DESCRIPTION\n\
    \               \"Setting this object will immediately shutdown (i.e.,\n     \
    \          turn off) either the UPS output or the UPS system (as\n           \
    \    determined by the value of upsShutdownType at the time\n               of\
    \ shutdown) for a period equal to the indicated\n               number of seconds,\
    \ after which time the output will be\n               started, including starting\
    \ the UPS, if necessary.  If\n               the number of seconds required to\
    \ perform the request\n               is greater than the requested duration,\
    \ then the\n               requested shutdown and startup cycle shall be\n   \
    \            performed in the minimum time possible, but in no case\n        \
    \       shall this require more than the requested duration\n               plus\
    \ 60 seconds.  When read, upsRebootWithDuration\n               shall return the\
    \ number of seconds remaining in the\n               countdown, or -1 if no countdown\
    \ is in progress.  If\n               the startup should occur during a utility\
    \ failure, the\n               startup shall not occur until the utility power\
    \ is\n               restored.\"\n       ::= { upsControl 4 }\n   upsAutoRestart\
    \ OBJECT-TYPE\n       SYNTAX     INTEGER {\n           on(1),\n           off(2)\n\
    \       }\n       MAX-ACCESS read-write\n       STATUS     current\n       DESCRIPTION\n\
    \               \"Setting this object to 'on' will cause the UPS system\n    \
    \           to restart after a shutdown if the shutdown occurred\n           \
    \    during a power loss as a result of either a\n               upsShutdownAfterDelay\
    \ or an internal battery depleted\n               condition.  Setting this object\
    \ to 'off' will prevent\n               the UPS system from restarting after a\
    \ shutdown until\n               an operator manually or remotely explicitly restarts\n\
    \               it.  If the UPS is in a startup or reboot countdown,\n       \
    \        then the UPS will not restart until that delay has\n               been\
    \ satisfied.\"\n       ::= { upsControl 5 }\n   --\n   -- The Configuration group.\n\
    \   --\n   upsConfig             OBJECT IDENTIFIER ::= { upsObjects 9 }\n   upsConfigInputVoltage\
    \ OBJECT-TYPE\n       SYNTAX     NonNegativeInteger\n       UNITS      \"RMS Volts\"\
    \n       MAX-ACCESS read-write\n       STATUS     current\n       DESCRIPTION\n\
    \               \"The magnitude of the nominal input voltage.  On those\n    \
    \           systems which support read-write access to this\n               object,\
    \ if there is an attempt to set this variable to\n               a value that\
    \ is not supported, the request must be\n               rejected and the agent\
    \ shall respond with an\n               appropriate error message, i.e., badValue\
    \ for SNMPv1,\n               or inconsistentValue for SNMPv2.\"\n       ::= {\
    \ upsConfig 1 }\n   upsConfigInputFreq OBJECT-TYPE\n       SYNTAX     NonNegativeInteger\n\
    \       UNITS      \"0.1 Hertz\"\n       MAX-ACCESS read-write\n       STATUS\
    \     current\n       DESCRIPTION\n               \"The nominal input frequency.\
    \  On those systems which\n               support read-write access to this object,\
    \ if there is\n               an attempt to set this variable to a value that\
    \ is not\n               supported, the request must be rejected and the agent\n\
    \               shall respond with an appropriate error message, i.e.,\n     \
    \          badValue for SNMPv1, or inconsistentValue for SNMPv2.\"\n       ::=\
    \ { upsConfig 2 }\n   upsConfigOutputVoltage OBJECT-TYPE\n       SYNTAX     NonNegativeInteger\n\
    \       UNITS      \"RMS Volts\"\n       MAX-ACCESS read-write\n       STATUS\
    \     current\n       DESCRIPTION\n               \"The magnitude of the nominal\
    \ output voltage.  On\n               those systems which support read-write access\
    \ to this\n               object, if there is an attempt to set this variable\
    \ to\n               a value that is not supported, the request must be\n    \
    \           rejected and the agent shall respond with an\n               appropriate\
    \ error message, i.e., badValue for SNMPv1,\n               or inconsistentValue\
    \ for SNMPv2.\"\n       ::= { upsConfig 3 }\n   upsConfigOutputFreq OBJECT-TYPE\n\
    \       SYNTAX     NonNegativeInteger\n       UNITS      \"0.1 Hertz\"\n     \
    \  MAX-ACCESS read-write\n       STATUS     current\n       DESCRIPTION\n    \
    \           \"The nominal output frequency.  On those systems which\n        \
    \       support read-write access to this object, if there is\n              \
    \ an attempt to set this variable to a value that is not\n               supported,\
    \ the request must be rejected and the agent\n               shall respond with\
    \ an appropriate error message, i.e.,\n               badValue for SNMPv1, or\
    \ inconsistentValue for SNMPv2.\"\n       ::= { upsConfig 4 }\n   upsConfigOutputVA\
    \ OBJECT-TYPE\n       SYNTAX     NonNegativeInteger\n       UNITS      \"Volt-Amps\"\
    \n       MAX-ACCESS read-only\n       STATUS     current\n       DESCRIPTION\n\
    \               \"The magnitude of the nominal Volt-Amp rating.\"\n       ::=\
    \ { upsConfig 5 }\n   upsConfigOutputPower OBJECT-TYPE\n       SYNTAX     NonNegativeInteger\n\
    \       UNITS      \"Watts\"\n       MAX-ACCESS read-only\n       STATUS     current\n\
    \       DESCRIPTION\n               \"The magnitude of the nominal true power\
    \ rating.\"\n       ::= { upsConfig 6 }\n   upsConfigLowBattTime OBJECT-TYPE\n\
    \       SYNTAX     NonNegativeInteger\n       UNITS      \"minutes\"\n       MAX-ACCESS\
    \ read-write\n       STATUS     current\n       DESCRIPTION\n               \"\
    The value of upsEstimatedMinutesRemaining at which a\n               lowBattery\
    \ condition is declared.  For agents which\n               support only discrete\
    \ (discontinuous) values, then the\n               agent shall round up to the\
    \ next supported value.  If\n               the requested value is larger than\
    \ the largest\n               supported value, then the largest supported value\n\
    \               shall be selected.\"\n       ::= { upsConfig 7 }\n   upsConfigAudibleStatus\
    \ OBJECT-TYPE\n       SYNTAX     INTEGER {\n           disabled(1),\n        \
    \   enabled(2),\n           muted(3)\n       }\n       MAX-ACCESS read-write\n\
    \       STATUS     current\n       DESCRIPTION\n               \"The requested\
    \ state of the audible alarm.  When in\n               the disabled state, the\
    \ audible alarm should never\n               sound.  The enabled state is self-describing.\
    \  Setting\n               this object to muted(3) when the audible alarm is\n\
    \               sounding shall temporarily silence the alarm.  It will\n     \
    \          remain muted until it would normally stop sounding and\n          \
    \     the value returned for read operations during this\n               period\
    \ shall equal muted(3).  At the end of this\n               period, the value\
    \ shall revert to enabled(2).  Writes\n               of the value muted(3) when\
    \ the audible alarm is not\n               sounding shall be accepted but otherwise\
    \ shall have no\n               effect.\"\n       ::= { upsConfig 8 }\n   upsConfigLowVoltageTransferPoint\
    \ OBJECT-TYPE\n       SYNTAX     NonNegativeInteger\n       UNITS      \"RMS Volts\"\
    \n       MAX-ACCESS read-write\n       STATUS     current\n       DESCRIPTION\n\
    \               \"The minimum input line voltage allowed before the UPS\n    \
    \           system transfers to battery backup.\"\n       ::= { upsConfig 9 }\n\
    \   upsConfigHighVoltageTransferPoint OBJECT-TYPE\n       SYNTAX     NonNegativeInteger\n\
    \       UNITS      \"RMS Volts\"\n       MAX-ACCESS read-write\n       STATUS\
    \     current\n       DESCRIPTION\n               \"The maximum line voltage allowed\
    \ before the UPS\n               system transfers to battery backup.\"\n     \
    \  ::= { upsConfig 10 }\n   --\n   -- notifications, i.e., traps\n   --\n   upsTraps\
    \              OBJECT IDENTIFIER ::= { upsMIB 2 }\n   -- This section defines\
    \ the well-known notifications sent by\n   -- UPS agents.\n   -- Care must be\
    \ taken to insure that no particular notification\n   -- is sent to a single receiving\
    \ entity more often than once\n   -- every five seconds.\n   upsTrapOnBattery\
    \ NOTIFICATION-TYPE\n       OBJECTS { upsEstimatedMinutesRemaining, upsSecondsOnBattery,\n\
    \                 upsConfigLowBattTime }\n       STATUS  current\n       DESCRIPTION\n\
    \               \"The UPS is operating on battery power.  This trap is\n     \
    \          persistent and is resent at one minute intervals until\n          \
    \     the UPS either turns off or is no longer running on\n               battery.\"\
    \n     ::= { upsTraps 1 }\n   upsTrapTestCompleted NOTIFICATION-TYPE\n       OBJECTS\
    \ { upsTestId, upsTestSpinLock,\n                 upsTestResultsSummary, upsTestResultsDetail,\n\
    \                 upsTestStartTime, upsTestElapsedTime }\n       STATUS  current\n\
    \       DESCRIPTION\n               \"This trap is sent upon completion of a UPS\
    \ diagnostic\n               test.\"\n     ::= { upsTraps 2 }\n   upsTrapAlarmEntryAdded\
    \ NOTIFICATION-TYPE\n       OBJECTS { upsAlarmId, upsAlarmDescr }\n       STATUS\
    \  current\n       DESCRIPTION\n               \"This trap is sent each time an\
    \ alarm is inserted into\n               to the alarm table.  It is sent on the\
    \ insertion of\n               all alarms except for upsAlarmOnBattery and\n \
    \              upsAlarmTestInProgress.\"\n     ::= { upsTraps 3 }\n   upsTrapAlarmEntryRemoved\
    \ NOTIFICATION-TYPE\n       OBJECTS { upsAlarmId, upsAlarmDescr }\n       STATUS\
    \  current\n       DESCRIPTION\n               \"This trap is sent each time an\
    \ alarm is removed from\n               the alarm table.  It is sent on the removal\
    \ of all\n               alarms except for upsAlarmTestInProgress.\"\n     ::=\
    \ { upsTraps 4 }\n   --\n   -- conformance information\n   --\n   upsConformance\
    \        OBJECT IDENTIFIER ::= { upsMIB 3 }\n   upsCompliances        OBJECT IDENTIFIER\
    \ ::= { upsConformance 1 }\n   --\n   -- compliance statements\n   --\n   upsSubsetCompliance\
    \ MODULE-COMPLIANCE\n       STATUS     current\n       DESCRIPTION\n         \
    \      \"The compliance statement for UPSs that only support\n               the\
    \ two-contact communication protocol.\"\n       MODULE -- this module\n      \
    \     MANDATORY-GROUPS  { upsSubsetIdentGroup,\n                     upsSubsetBatteryGroup,\
    \ upsSubsetInputGroup,\n                     upsSubsetOutputGroup, upsSubsetAlarmGroup,\n\
    \                     upsSubsetControlGroup, upsSubsetConfigGroup }\n       OBJECT\
    \     upsBatteryStatus\n       SYNTAX     INTEGER {\n           batteryNormal(2),\n\
    \           batteryLow(3)\n       }\n       DESCRIPTION\n               \"Support\
    \ of the values unknown(1) and\n               batteryDepleted(4) is not required.\"\
    \n       OBJECT     upsAlarmDescr\n       DESCRIPTION\n               \"Support\
    \ of all `well known' alarm types is not\n               required.  The well known\
    \ alarm types which must be\n               supported are: upsAlarmOnBattery,\
    \ upsAlarmLowBattery,\n               upsAlarmInputBad, upsAlarmUpsOutputOff,\n\
    \               upsAlarmUpsSystemOff, and upsAlarmTestInProgress.\"\n       OBJECT\
    \     upsOutputSource\n       SYNTAX     INTEGER {\n           normal(2),\n  \
    \         battery(4)\n       }\n       DESCRIPTION\n               \"Support of\
    \ the values other(1), none(2), bypass(4),\n               booster(6) and reducer(7)\
    \ is not required.\"\n       OBJECT     upsShutdownType\n       MIN-ACCESS read-only\n\
    \       DESCRIPTION\n               \"Read-write access is not required, i.e.,\
    \ compliant\n               systems need not support more than one shutdown type.\"\
    \n       OBJECT     upsAutoRestart\n       MIN-ACCESS read-only\n       DESCRIPTION\n\
    \               \"Read-write access is not required, i.e., compliant\n       \
    \        systems need not support more than one restart type.\"\n       OBJECT\
    \     upsConfigInputVoltage\n       MIN-ACCESS read-only\n       DESCRIPTION\n\
    \               \"Read-write access is not required.\"\n       OBJECT     upsConfigInputFreq\n\
    \       MIN-ACCESS read-only\n       DESCRIPTION\n               \"Read-write\
    \ access is not required.\"\n       OBJECT     upsConfigOutputVoltage\n      \
    \ MIN-ACCESS read-only\n       DESCRIPTION\n               \"Read-write access\
    \ is not required.\"\n       OBJECT     upsConfigOutputFreq\n       MIN-ACCESS\
    \ read-only\n       DESCRIPTION\n               \"Read-write access is not required.\"\
    \n       ::= { upsCompliances 1 }\n   upsBasicCompliance MODULE-COMPLIANCE\n \
    \      STATUS     current\n       DESCRIPTION\n               \"The compliance\
    \ statement for UPSs that support\n               full-featured functions, such\
    \ as control.\"\n       MODULE -- this module\n           MANDATORY-GROUPS { upsBasicIdentGroup,\n\
    \                     upsBasicBatteryGroup, upsBasicInputGroup,\n            \
    \         upsBasicOutputGroup, upsBasicAlarmGroup,\n                     upsBasicTestGroup,\
    \ upsBasicControlGroup,\n                     upsBasicConfigGroup }\n       OBJECT\
    \     upsAlarmDescr\n       DESCRIPTION\n               \"Support of all `well\
    \ known' alarm types is not\n               required.  The well known alarm types\
    \ which must be\n               supported are: upsAlarmOnBattery, upsAlarmLowBattery,\n\
    \               upsAlarmDepletedBattery, upsAlarmTempBad,\n               upsAlarmInputBad,\
    \ upsAlarmOutputOverload,\n               upsAlarmOnBypass, upsAlarmBypassBad,\n\
    \               upsAlarmOutputOffAsRequested,\n               upsAlarmUpsOffAsRequested,\
    \ upsAlarmUpsOutputOff,\n               upsAlarmUpsSystemOff, upsAlarmGeneralFault,\n\
    \               upsAlarmDiagnosticTestFailed,\n               upsAlarmCommunicationsLost,\
    \ upsAlarmShutdownPending,\n               and upsAlarmTestInProgress.\"\n   \
    \    OBJECT     upsTestId\n       DESCRIPTION\n               \"Support of all\
    \ `well known' test types is not\n               required.  If no tests are supported,\
    \ then the only\n               well known test type which must be supported is\n\
    \               upsTestNoTestsInitiated.\"\n       OBJECT     upsOutputSource\n\
    \       SYNTAX     INTEGER {\n           normal(2),\n           battery(4)\n \
    \      }\n       DESCRIPTION\n               \"Support of the values other(1),\
    \ none(2), bypass(4),\n               booster(6) and reducer(7) is not required.\"\
    \n           GROUP upsBasicBypassGroup\n           DESCRIPTION\n             \
    \  \"The upsBasicBypassGroup is only required for UPSs\n               that have\
    \ a Bypass present.\"\n       OBJECT     upsShutdownType\n       MIN-ACCESS read-only\n\
    \       DESCRIPTION\n               \"Read-write access is not required, i.e.,\
    \ compliant\n               systems need not support more than one shutdown type.\"\
    \n       OBJECT     upsAutoRestart\n       MIN-ACCESS read-only\n       DESCRIPTION\n\
    \               \"Read-write access is not required, i.e., compliant\n       \
    \        systems need not support more than one restart type.\"\n       OBJECT\
    \     upsConfigInputVoltage\n       MIN-ACCESS read-only\n       DESCRIPTION\n\
    \               \"Read-write access is not required.\"\n       OBJECT     upsConfigInputFreq\n\
    \       MIN-ACCESS read-only\n       DESCRIPTION\n               \"Read-write\
    \ access is not required.\"\n       OBJECT     upsConfigOutputVoltage\n      \
    \ MIN-ACCESS read-only\n       DESCRIPTION\n               \"Read-write access\
    \ is not required.\"\n       OBJECT     upsConfigOutputFreq\n       MIN-ACCESS\
    \ read-only\n       DESCRIPTION\n               \"Read-write access is not required.\"\
    \n       OBJECT     upsConfigLowBattTime\n       DESCRIPTION\n               \"\
    Implementation of all possible values may be onerous\n               for some\
    \ systems.  Consequently, not all possible\n               values must be supported.\
    \  However, at least two\n               different manufacturer-selected values\
    \ must be\n               supported.\"\n       ::= { upsCompliances 2 }\n   upsFullCompliance\
    \ MODULE-COMPLIANCE\n       STATUS     current\n       DESCRIPTION\n         \
    \      \"The compliance statement for UPSs that support\n               advanced\
    \ full-featured functions.\"\n       MODULE -- this module\n           MANDATORY-GROUPS\
    \ { upsFullIdentGroup, upsFullBatteryGroup,\n                     upsFullInputGroup,\
    \ upsFullOutputGroup,\n                     upsFullAlarmGroup, upsFullTestGroup,\n\
    \                     upsFullControlGroup, upsFullConfigGroup }\n       OBJECT\
    \     upsAlarmDescr\n       DESCRIPTION\n               \"Support of all `well\
    \ known' alarm types is not\n               required.  The well known alarm types\
    \ which must be\n               supported are: upsAlarmBatteryBad, upsAlarmOnBattery,\n\
    \               upsAlarmLowBattery, upsAlarmDepletedBattery,\n               upsAlarmTempBad,\
    \ upsAlarmInputBad, upsAlarmOnBypass,\n               upsAlarmBypassBad, upsAlarmOutputOffAsRequested,\n\
    \               upsAlarmUpsOffAsRequested, upsAlarmUpsOutputOff,\n           \
    \    upsAlarmUpsSystemOff, upsAlarmGeneralFault,\n               upsAlarmDiagnosticTestFailed,\n\
    \               upsAlarmCommunicationsLost, upsAlarmShutdownPending,\n       \
    \        and upsAlarmTestInProgress.\"\n       OBJECT     upsTestId\n       DESCRIPTION\n\
    \               \"Support of all `well known' test types is not\n            \
    \   required.  The well known test types which must be\n               supported\
    \ are: upsTestNoTestsInitiated,\n               upsTestGeneralSystemsTest, and\n\
    \               upsTestQuickBatteryTest.\"\n       OBJECT     upsOutputSource\n\
    \       SYNTAX     INTEGER {\n           normal(2),\n           battery(4)\n \
    \      }\n       DESCRIPTION\n               \"Support of the values other(1),\
    \ none(2), bypass(4),\n               booster(6) and reducer(7) is not required.\"\
    \n           GROUP upsFullBypassGroup\n           DESCRIPTION\n              \
    \ \"The upsFullBypassGroup is only required for UPSs that\n               have\
    \ a Bypass present.\"\n       OBJECT     upsShutdownType\n       MIN-ACCESS read-only\n\
    \       DESCRIPTION\n               \"Read-write access is not required, i.e.,\
    \ compliant\n               systems need not support more than one shutdown type.\"\
    \n       OBJECT     upsAutoRestart\n       MIN-ACCESS read-only\n       DESCRIPTION\n\
    \               \"Read-write access is not required, i.e., compliant\n       \
    \        systems need not support more than one restart type.\"\n       OBJECT\
    \     upsConfigInputVoltage\n       MIN-ACCESS read-only\n       DESCRIPTION\n\
    \               \"Read-write access is not required.\"\n       OBJECT     upsConfigInputFreq\n\
    \       MIN-ACCESS read-only\n       DESCRIPTION\n               \"Read-write\
    \ access is not required.\"\n       OBJECT     upsConfigOutputVoltage\n      \
    \ MIN-ACCESS read-only\n       DESCRIPTION\n               \"Read-write access\
    \ is not required.\"\n       OBJECT     upsConfigOutputFreq\n       MIN-ACCESS\
    \ read-only\n       DESCRIPTION\n               \"Read-write access is not required.\"\
    \n       OBJECT     upsConfigLowBattTime\n       DESCRIPTION\n               \"\
    Implementation of all possible values may be onerous\n               for some\
    \ systems.  Consequently, not all possible\n               values must be supported.\
    \  However, at least two\n               different manufacturer-selected values\
    \ must be\n               supported.\"\n       ::= { upsCompliances 3 }\n   --\n\
    \   -- units of conformance\n   --\n   -- summary at a glance:\n   --        \
    \                              subset  basic   adv\n   --upsIdentManufacturer\
    \                  x       x       x\n   --upsIdentModel                     \
    \    x       x       x\n   --upsIdentUPSSoftwareVersion                    x \
    \      x\n   --upsIdentAgentSoftwareVersion          x       x       x\n   --upsIdentName\
    \                          x       x       x\n   --upsIdentAttachedDevices   \
    \            x               x\n   --\n   --upsBatteryStatus                 \
    \     x       x       x  notes\n   --upsSecondsOnBattery                   x \
    \      x       x\n   --upsEstimatedMinutesRemaining                          x\n\
    \   --upsEstimatedChargeRemaining                           x\n   --upsBatteryVoltage\n\
    \   --upsBatteryCurrent\n   --upsBatteryTemperature\n   --\n   --upsInputLineBads\
    \                      x       x       x\n   --upsInputNumLines              \
    \                x       x\n   --upsInputFrequency                           \
    \  x       x\n   --upsInputVoltage                               x       x\n \
    \  --upsInputCurrent\n   --upsInputTruePower\n   --\n   --upsOutputSource    \
    \                   x       x       x  notes\n   --upsOutputFrequency        \
    \                    x       x\n   --upsOutputNumLines                       \
    \      x       x\n   --upsOutputVoltage                              x       x\n\
    \   --upsOutputCurrent                                      x\n   --upsOutputPower\
    \                                        x\n   --upsOutputPercentLoad        \
    \                          x\n   --\n   --\n   --upsBypassFrequency          \
    \                  x       x  notes\n   --upsBypassNumLines                  \
    \           x       x\n   --upsBypassVoltage                              x  \
    \     x\n   --upsBypassCurrent\n   --upsBypassPower\n   --\n   --\n   --upsAlarmsPresent\
    \                      x       x       x\n   --upsAlarmDescr                 \
    \        x       x       x  notes\n   --upsAlarmTime                         \
    \ x       x       x\n   --\n   --upsTestId                                   \
    \  x       x  notes\n   --upsTestSpinLock                               x    \
    \   x\n   --upsTestResultsSummary                         x       x\n   --upsTestResultsDetail\
    \                          x       x\n   --upsTestStartTime                  \
    \            x       x\n   --upsTestElapsedTime                            x \
    \      x\n   --\n   --upsShutdownType                       x       x       x\
    \  notes\n   --upsShutdownAfterDelay                 x       x       x\n   --upsStartupAfterDelay\
    \                          x       x\n   --upsRebootWithDuration             \
    \            x       x\n   --upsAutoRestart                        x       x \
    \      x  notes\n   --\n   --upsConfigInputVoltage                 x       x \
    \      x  notes\n   --upsConfigInputFreq                    x       x       x\
    \  notes\n   --upsConfigOutputVoltage                x       x       x  notes\n\
    \   --upsConfigOutputFreq                   x       x       x  notes\n   --upsConfigOutputVA\
    \                     x       x       x\n   --upsConfigOutputPower           \
    \       x       x       x\n   --upsConfigLowBattTime                         \
    \ x       x  notes\n   --upsConfigAudibleStatus                        x     \
    \  x\n   --upsConfigLowVoltageTransferPoint\n   --upsConfigHighVoltageTransferPoint\n\
    \   -- units of conformance\n   upsGroups             OBJECT IDENTIFIER ::= {\
    \ upsConformance 2 }\n   upsSubsetGroups       OBJECT IDENTIFIER ::= { upsGroups\
    \ 1 }\n   upsSubsetIdentGroup OBJECT-GROUP\n       OBJECTS { upsIdentManufacturer,\
    \ upsIdentModel,\n                 upsIdentAgentSoftwareVersion, upsIdentName,\n\
    \                 upsIdentAttachedDevices }\n       STATUS  current\n       DESCRIPTION\n\
    \               \"The upsSubsetIdentGroup defines objects which are\n        \
    \       common across all UPSs which meet subset compliance.\n               Most\
    \ devices which conform to the upsSubsetIdentGroup\n               will provide\
    \ access to these objects via a proxy\n               agent.  If the proxy agent\
    \ is compatible with multiple\n               UPS types, configuration of the\
    \ proxy agent will\n               require specifying some of these values, either\n\
    \               individually, or as a group (perhaps through a table\n       \
    \        lookup mechanism based on the UPS model number).\"\n       ::= { upsSubsetGroups\
    \ 1 }\n   upsSubsetBatteryGroup OBJECT-GROUP\n       OBJECTS { upsBatteryStatus,\
    \ upsSecondsOnBattery }\n       STATUS  current\n       DESCRIPTION\n        \
    \       \"The upsSubsetBatteryGroup defines the objects that\n               are\
    \ common to battery groups of two-contact UPSs.\"\n       ::= { upsSubsetGroups\
    \ 2 }\n   upsSubsetInputGroup OBJECT-GROUP\n       OBJECTS { upsInputLineBads\
    \ }\n       STATUS  current\n       DESCRIPTION\n               \"The upsSubsetInputGroup\
    \ defines the objects that are\n               common to the Input groups of two-contact\
    \ UPSs.\"\n       ::= { upsSubsetGroups 3 }\n   upsSubsetOutputGroup OBJECT-GROUP\n\
    \       OBJECTS { upsOutputSource }\n       STATUS  current\n       DESCRIPTION\n\
    \               \"The upsSubsetOutputGroup defines the objects that are\n    \
    \           common to the Output groups of two-contact UPSs.\"\n       ::= { upsSubsetGroups\
    \ 4 }\n   -- { upsSubsetGroups 5 } is reserved for\n   -- future use (upsSubsetBypassGroup)\n\
    \   upsSubsetAlarmGroup OBJECT-GROUP\n       OBJECTS { upsAlarmsPresent, upsAlarmDescr,\
    \ upsAlarmTime }\n       STATUS  current\n       DESCRIPTION\n               \"\
    The upsSubsetAlarmGroup defines the objects that are\n               common to\
    \ the Alarm groups of two-contact UPSs.\"\n       ::= { upsSubsetGroups 6 }\n\
    \   -- { upsSubsetGroups 7 } is reserved for\n   -- future use (upsSubsetTestGroup)\n\
    \   upsSubsetControlGroup OBJECT-GROUP\n       OBJECTS { upsShutdownType, upsShutdownAfterDelay,\n\
    \                     upsAutoRestart }\n       STATUS  current\n       DESCRIPTION\n\
    \               \"The upsSubsetControlGroup defines the objects that\n       \
    \        are common to the Control groups of two-contact UPSs.\"\n       ::= {\
    \ upsSubsetGroups 8 }\n   upsSubsetConfigGroup OBJECT-GROUP\n       OBJECTS {\
    \ upsConfigInputVoltage, upsConfigInputFreq,\n                 upsConfigOutputVoltage,\
    \ upsConfigOutputFreq,\n                 upsConfigOutputVA, upsConfigOutputPower\
    \ }\n       STATUS  current\n       DESCRIPTION\n               \"The upsSubsetConfigGroup\
    \ defines the objects that are\n               common to the Config groups of\
    \ two-contact UPSs.\"\n       ::= { upsSubsetGroups 9 }\n   upsBasicGroups   \
    \     OBJECT IDENTIFIER ::= { upsGroups 2 }\n   upsBasicIdentGroup OBJECT-GROUP\n\
    \       OBJECTS { upsIdentManufacturer, upsIdentModel,\n                 upsIdentUPSSoftwareVersion,\n\
    \                 upsIdentAgentSoftwareVersion, upsIdentName }\n       STATUS\
    \  current\n       DESCRIPTION\n               \"The upsBasicIdentGroup defines\
    \ objects which are\n               common to the Ident group of compliant UPSs\
    \ which\n               support basic functions.\"\n       ::= { upsBasicGroups\
    \ 1 }\n   upsBasicBatteryGroup OBJECT-GROUP\n       OBJECTS { upsBatteryStatus,\
    \ upsSecondsOnBattery }\n       STATUS  current\n       DESCRIPTION\n        \
    \       \"The upsBasicBatteryGroup defines the objects that are\n            \
    \   common to the battery groups of compliant UPSs which\n               support\
    \ basic functions.\"\n       ::= { upsBasicGroups 2 }\n   upsBasicInputGroup OBJECT-GROUP\n\
    \       OBJECTS { upsInputLineBads, upsInputNumLines,\n                 upsInputFrequency,\
    \ upsInputVoltage }\n       STATUS  current\n       DESCRIPTION\n            \
    \   \"The upsBasicInputGroup defines the objects that are\n               common\
    \ to the Input groups of compliant UPSs which\n               support basic functions.\"\
    \n       ::= { upsBasicGroups 3 }\n   upsBasicOutputGroup OBJECT-GROUP\n     \
    \  OBJECTS { upsOutputSource, upsOutputFrequency,\n                 upsOutputNumLines,\
    \ upsOutputVoltage }\n       STATUS  current\n       DESCRIPTION\n           \
    \    \"The upsBasicOutputGroup defines the objects that are\n               common\
    \ to the Output groups of compliant UPSs which\n               support basic functions.\"\
    \n       ::= { upsBasicGroups 4 }\n   upsBasicBypassGroup OBJECT-GROUP\n     \
    \  OBJECTS { upsBypassFrequency, upsBypassNumLines,\n                 upsBypassVoltage\
    \ }\n       STATUS  current\n       DESCRIPTION\n               \"The upsBasicBypassGroup\
    \ defines the objects that are\n               common to the Bypass groups of\
    \ compliant UPSs which\n               support basic functions.\"\n       ::=\
    \ { upsBasicGroups 5 }\n   upsBasicAlarmGroup OBJECT-GROUP\n       OBJECTS { upsAlarmsPresent,\
    \ upsAlarmDescr, upsAlarmTime }\n       STATUS  current\n       DESCRIPTION\n\
    \               \"The upsBasicAlarmGroup defines the objects that are\n      \
    \         common to the Alarm  groups of compliant UPSs which\n              \
    \ support basic functions.\"\n       ::= { upsBasicGroups 6 }\n   upsBasicTestGroup\
    \ OBJECT-GROUP\n       OBJECTS { upsTestId, upsTestSpinLock,\n               \
    \  upsTestResultsSummary, upsTestResultsDetail,\n                 upsTestStartTime,\
    \ upsTestElapsedTime }\n       STATUS  current\n       DESCRIPTION\n         \
    \      \"The upsBasicTestGroup defines the objects that are\n               common\
    \ to the Test groups of compliant UPSs which\n               support basic functions.\"\
    \n       ::= { upsBasicGroups 7 }\n   upsBasicControlGroup OBJECT-GROUP\n    \
    \   OBJECTS { upsShutdownType, upsShutdownAfterDelay,\n                 upsStartupAfterDelay,\
    \ upsRebootWithDuration,\n                 upsAutoRestart }\n       STATUS  current\n\
    \       DESCRIPTION\n               \"The upsBasicControlGroup defines the objects\
    \ that are\n               common to the Control groups of compliant UPSs which\n\
    \               support basic functions.\"\n       ::= { upsBasicGroups 8 }\n\
    \   upsBasicConfigGroup OBJECT-GROUP\n       OBJECTS { upsConfigInputVoltage,\
    \ upsConfigInputFreq,\n                 upsConfigOutputVoltage, upsConfigOutputFreq,\n\
    \                 upsConfigOutputVA, upsConfigOutputPower,\n                 upsConfigLowBattTime,\
    \ upsConfigAudibleStatus }\n       STATUS  current\n       DESCRIPTION\n     \
    \          \"The upsBasicConfigGroup defines the objects that are\n          \
    \     common to the Config groups of UPSs which support\n               basic\
    \ functions.\"\n       ::= { upsBasicGroups 9 }\n   upsFullGroups         OBJECT\
    \ IDENTIFIER ::= { upsGroups 3 }\n   upsFullIdentGroup OBJECT-GROUP\n       OBJECTS\
    \ { upsIdentManufacturer, upsIdentModel,\n                 upsIdentUPSSoftwareVersion,\n\
    \                 upsIdentAgentSoftwareVersion, upsIdentName,\n              \
    \   upsIdentAttachedDevices }\n       STATUS  current\n       DESCRIPTION\n  \
    \             \"The upsFullIdentGroup defines objects which are\n            \
    \   common to the Ident group of fully compliant UPSs.\"\n       ::= { upsFullGroups\
    \ 1 }\n   upsFullBatteryGroup OBJECT-GROUP\n       OBJECTS { upsBatteryStatus,\
    \ upsSecondsOnBattery,\n                 upsEstimatedMinutesRemaining,\n     \
    \            upsEstimatedChargeRemaining }\n       STATUS  current\n       DESCRIPTION\n\
    \               \"The upsFullBatteryGroup defines the objects that are\n     \
    \          common to the battery groups of fully compliant UPSs.\"\n       ::=\
    \ { upsFullGroups 2 }\n   upsFullInputGroup OBJECT-GROUP\n       OBJECTS { upsInputLineBads,\
    \ upsInputNumLines,\n                 upsInputFrequency, upsInputVoltage }\n \
    \      STATUS  current\n       DESCRIPTION\n               \"The upsFullInputGroup\
    \ defines the objects that are\n               common to the Input groups of fully\
    \ compliant UPSs.\"\n       ::= { upsFullGroups 3 }\n   upsFullOutputGroup OBJECT-GROUP\n\
    \       OBJECTS { upsOutputSource, upsOutputFrequency,\n                 upsOutputNumLines,\
    \ upsOutputVoltage,\n                 upsOutputCurrent, upsOutputPower,\n    \
    \             upsOutputPercentLoad }\n       STATUS  current\n       DESCRIPTION\n\
    \               \"The upsFullOutputGroup defines the objects that are\n      \
    \         common to the Output groups of fully compliant UPSs.\"\n       ::= {\
    \ upsFullGroups 4 }\n   upsFullBypassGroup OBJECT-GROUP\n       OBJECTS { upsBypassFrequency,\
    \ upsBypassNumLines,\n                 upsBypassVoltage }\n       STATUS  current\n\
    \       DESCRIPTION\n               \"The upsFullBypassGroup defines the objects\
    \ that are\n               common to the Bypass groups of fully compliant UPSs.\"\
    \n       ::= { upsFullGroups 5 }\n   upsFullAlarmGroup OBJECT-GROUP\n       OBJECTS\
    \ { upsAlarmsPresent, upsAlarmDescr, upsAlarmTime }\n       STATUS  current\n\
    \       DESCRIPTION\n               \"The upsFullAlarmGroup defines the objects\
    \ that are\n               common to the Alarm  groups of fully compliant UPSs.\"\
    \n       ::= { upsFullGroups 6 }\n   upsFullTestGroup OBJECT-GROUP\n       OBJECTS\
    \ { upsTestId, upsTestSpinLock,\n                 upsTestResultsSummary, upsTestResultsDetail,\n\
    \                 upsTestStartTime, upsTestElapsedTime }\n       STATUS  current\n\
    \       DESCRIPTION\n               \"The upsFullTestGroup defines the objects\
    \ that are\n               common to the Test groups of fully compliant UPSs.\"\
    \n       ::= { upsFullGroups 7 }\n   upsFullControlGroup OBJECT-GROUP\n      \
    \ OBJECTS { upsShutdownType, upsShutdownAfterDelay,\n                 upsStartupAfterDelay,\
    \ upsRebootWithDuration,\n                 upsAutoRestart }\n       STATUS  current\n\
    \       DESCRIPTION\n   \"The upsFullControlGroup defines the objects that are\n\
    \   common to the Control groups of fully compliant UPSs.\"\n       ::= { upsFullGroups\
    \ 8 }\n   upsFullConfigGroup OBJECT-GROUP\n       OBJECTS { upsConfigInputVoltage,\
    \ upsConfigInputFreq,\n                 upsConfigOutputVoltage, upsConfigOutputFreq,\n\
    \                 upsConfigOutputVA, upsConfigOutputPower,\n                 upsConfigLowBattTime,\
    \ upsConfigAudibleStatus }\n       STATUS  current\n       DESCRIPTION\n     \
    \          \"The upsFullConfigGroup defines the objects that are\n           \
    \    common to the Config groups of fully compliant UPSs.\"\n       ::= { upsFullGroups\
    \ 9 }\n   END\n"
- title: 5.  Acknowledgements
  contents:
  - "5.  Acknowledgements\n   The UPS MIB represents the combined work of the IETF\
    \ UPS MIB Working\n   Group, with particular, substantial authorship contributions\
    \ from:\n           Mike Davison\n           Fibercom, Inc.\n           Ray Wasson\n\
    \           Consultant\n           Roger Draper\n           Liebert Corporation\n\
    \           Ken Key\n           SNMP Research, Incorporated\n           Pete Yoest\n\
    \           American Power Conversion\n           Doug Rademacher\n          \
    \ American Power Conversion\n           Ron Pitt\n           Network Security\
    \ Systems, Inc\n           Terry Zumwalt\n           International Power Machines\n\
    \           Lawren Markle\n           Tripp Lite\n           Bill Elliot\n   \
    \        ONEAC\n           Tom Brennan\n           Exide Electronics\n       \
    \    Brian Young\n           Best Power Technology\n"
- title: 6.  References
  contents:
  - "6.  References\n   [1] Case, J., Fedor, M., Schoffstall, M., and J. Davin, \"\
    Simple\n       Network Management Protocol\", STD 15, RFC 1157, SNMP Research,\n\
    \       Inc., Performance Systems International, Performance Systems\n       International,\
    \ MIT Laboratory for Computer Science, May 1990.\n   [2] Case, J., McCloghrie,\
    \ K., Rose, M., and S. Waldbusser, \"Protocol\n       Operations for Version 2\
    \ of the Simple Network Management\n       Protocol (SNMPv2)\", RFC 1448, SNMP\
    \ Research, Inc., Hughes LAN\n       Systems, Dover Beach Consulting, Inc., Carnegie\
    \ Mellon\n       University, April 1993.\n   [3] McCloghrie, K., and M. Rose,\
    \ Editors, \"Management Information\n       Base for Network Management of TCP/IP-based\
    \ internets: MIB-II\",\n       STD 17, RFC 1213, Hughes LAN Systems, Performance\
    \ Systems\n       International, March 1991.\n   [4] Case, J., McCloghrie, K.,\
    \ Rose, M., and S. Waldbusser, \"Structure\n       of Management Information for\
    \ Version 2 of the Simple Network\n       Management Protocol (SNMPv2)\", RFC\
    \ 1442, SNMP Research, Inc.,\n       Hughes LAN Systems, Dover Beach Consulting,\
    \ Inc., Carnegie Mellon\n       University, April 1993.\n   [5] Case, J., McCloghrie,\
    \ K., Rose, M., and S. Waldbusser,\n       \"Conformance Statements for Version\
    \ 2 of the Simple Network\n       Management Protocol (SNMPv2)\", RFC 1444, SNMP\
    \ Research, Inc.,\n       Hughes LAN Systems, Dover Beach Consulting, Inc., Carnegie\
    \ Mellon\n       University, April, 1993.\n   [6] Case, J., McCloghrie, K., Rose,\
    \ M., and S. Waldbusser, \"Textual\n       Conventions for Version 2 of the Simple\
    \ Network Management\n       Protocol (SNMPv2)\", RFC 1443, SNMP Research, Inc.,\
    \ Hughes LAN\n       Systems, Dover Beach Consulting, Inc., Carnegie Mellon\n\
    \       University, April 1993.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 8.  Author's Address
  contents:
  - "8.  Author's Address\n   Jeffrey D. Case, Ph.D.\n   SNMP Research, Incorporated\n\
    \   3001 Kimberlin Heights Road\n   Knoxville, Tennessee 37920\n   Phone:  (615)\
    \ 573-1434\n   EMail:  case@SNMP.COM\n"
