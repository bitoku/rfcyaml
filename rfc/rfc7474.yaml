- title: __initial_text__
  contents:
  - '     Security Extension for OSPFv2 When Using Manual Key Management

    '
- title: Abstract
  contents:
  - "Abstract\n   The current OSPFv2 cryptographic authentication mechanism as defined\n\
    \   in RFCs 2328 and 5709 is vulnerable to both inter-session and intra-\n   session\
    \ replay attacks when using manual keying.  Additionally, the\n   existing cryptographic\
    \ authentication mechanism does not cover the IP\n   header.  This omission can\
    \ be exploited to carry out various types of\n   attacks.\n   This document defines\
    \ changes to the authentication sequence number\n   mechanism that will protect\
    \ OSPFv2 from both inter-session and intra-\n   session replay attacks when using\
    \ manual keys for securing OSPFv2\n   protocol packets.  Additionally, we also\
    \ describe some changes in the\n   cryptographic hash computation that will eliminate\
    \ attacks resulting\n   from OSPFv2 not protecting the IP header.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7474.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n     1.1.  Requirements Language . . . . . . . . . . . . . .\
    \ . . . .   4\n   2.  Replay Protection Using Extended Sequence Numbers . . .\
    \ . . .   4\n   3.  OSPF Packet Extensions  . . . . . . . . . . . . . . . . .\
    \ . .   5\n   4.  OSPF Packet Key Selection . . . . . . . . . . . . . . . . .\
    \ .   6\n     4.1.  Key Selection for Unicast OSPF Packet Transmission  . . .\
    \   7\n     4.2.  Key Selection for Multicast OSPF Packet Transmission  . .  \
    \ 8\n     4.3.  Key Selection for OSPF Packet Reception . . . . . . . . .   8\n\
    \   5.  Securing the IP Header  . . . . . . . . . . . . . . . . . . .   9\n  \
    \ 6.  Mitigating Cross-Protocol Attacks . . . . . . . . . . . . . .  10\n   7.\
    \  Backward Compatibility  . . . . . . . . . . . . . . . . . . .  11\n   8.  Security\
    \ Considerations . . . . . . . . . . . . . . . . . . .  11\n   9.  IANA Considerations\
    \ . . . . . . . . . . . . . . . . . . . . .  12\n   10. References  . . . . .\
    \ . . . . . . . . . . . . . . . . . . . .  12\n     10.1.  Normative References\
    \ . . . . . . . . . . . . . . . . . .  12\n     10.2.  Informative References\
    \ . . . . . . . . . . . . . . . . .  12\n   Acknowledgments . . . . . . . . .\
    \ . . . . . . . . . . . . . . . .  14\n   Authors' Addresses  . . . . . . . .\
    \ . . . . . . . . . . . . . . .  14\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The OSPFv2 cryptographic authentication mechanism as described\
    \ in\n   [RFC2328] uses per-packet sequence numbers to provide protection\n  \
    \ against replay attacks.  The sequence numbers increase monotonically\n   so\
    \ that attempts to replay stale packets can be thwarted.  The\n   sequence number\
    \ values are maintained as a part of neighbor adjacency\n   state.  Therefore,\
    \ if an adjacency is taken down, the associated\n   sequence numbers get reinitialized\
    \ and neighbor adjacency formation\n   starts over again.  Additionally, the cryptographic\
    \ authentication\n   mechanism does not specify how to deal with the rollover\
    \ of a\n   sequence number when its value wraps.  These omissions can be\n   exploited\
    \ by attackers to implement various replay attacks\n   ([RFC6039]).  In order\
    \ to address these issues, we define extensions\n   to the authentication sequence\
    \ number mechanism.\n   The cryptographic authentication as described in [RFC2328]\
    \ and later\n   updated in [RFC5709] does not include the IP header.  This omission\n\
    \   can be exploited to launch several attacks as the source address in\n   the\
    \ IP header is not protected.  The OSPF specification, for\n   broadcast and NBMA\
    \ (Non-Broadcast Multi-Access) networks, requires\n   implementations to use the\
    \ source address in the IP header to\n   determine the neighbor from which the\
    \ packet was received.  Changing\n   the IP source address of a packet to a conflicting\
    \ IP address can be\n   exploited to produce a number of denial-of-service attacks\
    \ [RFC6039].\n   If the packet is interpreted as coming from a different neighbor,\
    \ the\n   received sequence number state for that neighbor may be incorrectly\n\
    \   updated.  This attack may disrupt communication with a legitimate\n   neighbor.\
    \  Hello packets may be reflected to cause a neighbor to\n   appear to have one-way\
    \ communication.  Additionally, Database\n   Description packets may be reflected\
    \ in cases where the per-packet\n   sequence numbers are sufficiently divergent\
    \ in order to disrupt an\n   adjacency [RFC6863].  This is the IP-layer issue\
    \ described in point\n   18 in Section 4 of [RFC6862].\n   [RFC2328] states that\
    \ implementations MUST offer keyed MD5\n   authentication.  It is likely that\
    \ this will be deprecated in favor\n   of the stronger algorithms described in\
    \ [RFC5709] and required in\n   [RFC6094].\n   This document defines a few simple\
    \ changes to the cryptographic\n   authentication mechanism, as currently described\
    \ in [RFC5709], to\n   prevent such IP-layer attacks.\n"
- title: 1.1.  Requirements Language
  contents:
  - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n   When used in lowercase, these words convey their\
    \ typical use in\n   common language, and are not to be interpreted as described\
    \ in RFC\n   2119 [RFC2119].\n"
- title: 2.  Replay Protection Using Extended Sequence Numbers
  contents:
  - "2.  Replay Protection Using Extended Sequence Numbers\n   In order to provide\
    \ replay protection against both inter-session and\n   intra-session replay attacks,\
    \ the OSPFv2 sequence number is expanded\n   to 64 bits with the least significant\
    \ 32-bit value containing a\n   strictly increasing sequence number and the most\
    \ significant 32-bit\n   value containing the boot count.  OSPFv2 implementations\
    \ are required\n   to retain the boot count in non-volatile storage for the deployment\n\
    \   life of the OSPF router.  The requirement to preserve the boot count\n   is\
    \ also placed on SNMP agents by the SNMPv3 security architecture\n   (refer to\
    \ snmpEngineBoots in Section 2.2 of [RFC3414]).\n   Since there is no room in\
    \ the OSPFv2 packet for a 64-bit sequence\n   number, it will occupy the 8 octets\
    \ following the OSPFv2 packet and\n   MUST be included when calculating the OSPFv2\
    \ packet digest.  These\n   additional 8 octets are not included in the OSPFv2\
    \ packet header\n   length but are included in the OSPFv2 header Authentication\
    \ Data\n   length and the IPv4 packet header length.\n   The lower-order 32-bit\
    \ sequence number MUST be incremented for every\n   OSPF packet sent by the OSPF\
    \ router.  Upon reception, the sequence\n   number MUST be greater than the sequence\
    \ number in the last OSPF\n   packet of that type accepted from the sending OSPF\
    \ neighbor.\n   Otherwise, the OSPF packet is considered a replayed packet and\n\
    \   dropped.  OSPF packets of different types may arrive out of order if\n   they\
    \ are prioritized as recommended in [RFC4222].\n   OSPF routers implementing this\
    \ specification MUST use available\n   mechanisms to preserve the sequence number's\
    \ strictly increasing\n   property for the deployed life of the OSPFv2 router\
    \ (including cold\n   restarts).  This is achieved by maintaining a boot count\
    \ in non-\n   volatile storage and incrementing it each time the OSPF router loses\n\
    \   its prior sequence number state.  The SNMPv3 snmpEngineBoots variable\n  \
    \ [RFC3414] MAY be used for this purpose.  However, maintaining a\n   separate\
    \ boot count solely for OSPF sequence numbers has the\n   advantage of decoupling\
    \ SNMP reinitialization and OSPF\n   reinitialization.  Also, in the rare event\
    \ that the lower-order\n   32-bit sequence number wraps, the boot count can be\
    \ incremented to\n   preserve the strictly increasing property of the aggregate\
    \ sequence\n   number.  Hence, a separate OSPF boot count is RECOMMENDED.\n"
- title: 3.  OSPF Packet Extensions
  contents:
  - "3.  OSPF Packet Extensions\n   The OSPF packet header includes an authentication\
    \ type field, and 64\n   bits of data for use by the appropriate authentication\
    \ scheme\n   (determined by the type field).  Authentication types 0, 1, and 2\
    \ are\n   defined [RFC2328].  This section defines Authentication type 3.\n  \
    \ When using this authentication scheme, the 64-bit Authentication\n   field (as\
    \ defined in Appendix D.3 of [RFC2328]) in the OSPF packet\n   header (as defined\
    \ in Appendix A.3.1 of [RFC2328] and [RFC6549]) is\n   changed as shown in Figure\
    \ 1.  The sequence number is removed and the\n   Key ID is extended to 32 bits\
    \ and moved to the former position of the\n   sequence number.\n   Additionally,\
    \ the 64-bit sequence number is moved to the first 64\n   bits following the OSPFv2\
    \ packet and is protected by the\n   authentication digest.  These additional\
    \ 64 bits or 8 octets are\n   included in the IP header length but not the OSPF\
    \ header packet\n   length.\n   Finally, the 0 field at the start of the OSPFv2\
    \ header authentication\n   is extended from 16 bits to 24 bits.\n        0  \
    \                 1                   2                   3\n        0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |  Version #  |     Type        |       Packet length           |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |                          Router ID                            |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |\
    \                           Area ID                             |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |           Checksum            | Instance ID   |  AuType       |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |                               0               | Auth Data Len |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |\
    \                         Key ID                                |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |                                                               |\n  \
    \     |                   OSPF Protocol Packet                        |\n    \
    \   ~                                                               ~\n      \
    \ |                                                               |\n       |\
    \                                                               |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |     Sequence Number (Boot Count)                              |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |     Sequence Number (Strictly Increasing Packet Counter)      |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |\
    \                                                               |\n       ~  \
    \              Authentication Data                            ~\n       |    \
    \                                                           |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \           Figure 1: Extended Sequence Number Packet Extensions\n"
- title: 4.  OSPF Packet Key Selection
  contents:
  - "4.  OSPF Packet Key Selection\n   This section describes how this security solution\
    \ selects long-lived\n   keys from key tables.  [RFC7210].  In this context, we\
    \ are selecting\n   the key and corresponding Security Association (SA) as defined\
    \ in\n   Section 3.2 of [RFC5709].  Generally, a key used for OSPFv2 packet\n\
    \   authentication should satisfy the following requirements:\n   o  For packet\
    \ transmission, the key validity interval as defined by\n      SendLifetimeStart\
    \ and SendLifetimeEnd must include the current\n      time.\n   o  For packet\
    \ reception, the key validity interval as defined by\n      AcceptLifetimeStart\
    \ and AcceptLifetimeEnd must include the current\n      time.\n   o  The key must\
    \ be valid for the desired security algorithm.\n   In the remainder of this section,\
    \ additional requirements for keys\n   are enumerated for different scenarios.\n"
- title: 4.1.  Key Selection for Unicast OSPF Packet Transmission
  contents:
  - "4.1.  Key Selection for Unicast OSPF Packet Transmission\n   Assume that a router\
    \ R1 tries to send a unicast OSPF packet from its\n   interface I1 to the interface\
    \ I2 of a remote router R2 using security\n   protocol P via interface I at time\
    \ T.  First, consider the\n   circumstances where R1 and R2 are not connected\
    \ with a virtual link.\n   R1 then needs to select a long-lived symmetric key\
    \ from its key\n   table.  Because the key should be shared by both R1 and R2\
    \ to protect\n   the communication between I1 and I2, the key should satisfy the\n\
    \   following requirements:\n   o  The Peers field contains the area ID or, if\
    \ no key containing the\n      area ID is present, the string \"all\".\n   o \
    \ The Direction field is either \"out\" or \"both\".\n   o  The Interfaces field\
    \ matches I1 or \"all\".\n   o  If multiple keys match the Interface field, keys\
    \ that explicitly\n      match I1 should be preferred over keys matching \"all\"\
    .  If there\n      are still multiple keys that match, the key with the most recent\n\
    \      SendLifetimeStart will be selected.  This will facilitate graceful\n  \
    \    key rollover.\n   o  The Key ID field in the OSPFv2 header (refer to Figure\
    \ 1) will be\n      set to the selected key's LocalKeyName.\n   When R1 and R2\
    \ are connected to a virtual link, the Peers field must\n   identify the virtual\
    \ endpoint rather than the virtual link.  Since\n   there may be virtual links\
    \ to the same router, the transit area ID\n   must be part of the identifier.\
    \  Hence, the key should satisfy the\n   following requirements:\n   o  The Peers\
    \ field includes both the virtual endpoint's OSPF router\n      ID and the transit\
    \ area ID for the virtual link in the form of the\n      transit area ID, followed\
    \ by a colon, followed by the router ID.\n      If no such key exists, then a\
    \ key with the Peers field set to the\n      transit area ID is used, followed\
    \ by a key with the Peers field\n      set to \"all\".\n   o  The Interfaces field\
    \ is not used for key selection on virtual\n      links.\n   o  The Direction\
    \ field is either \"out\" or \"both\".\n   o  If multiple keys match the Peers\
    \ field, keys that explicitly match\n      the router ID should be preferred,\
    \ followed by keys with a transit\n      area specified, followed by keys with\
    \ the Peers field set to\n      \"all\".  If there are still multiple keys that\
    \ match, the key with\n      the most recent SendLifetimeStart will be selected.\
    \  This will\n      facilitate graceful key rollover.\n   o  The Key ID field\
    \ in the OSPFv2 header (refer to Figure 1) will be\n      set to the selected\
    \ key's LocalKeyName.\n"
- title: 4.2.  Key Selection for Multicast OSPF Packet Transmission
  contents:
  - "4.2.  Key Selection for Multicast OSPF Packet Transmission\n   If a router R1\
    \ sends an OSPF packet from its interface I1 to a\n   multicast address (i.e.,\
    \ AllSPFRouters or AllDRouters), it needs to\n   select a key according to the\
    \ following requirements:\n   o  First, try a key with the Peers field containing\
    \ the area ID to\n      which the interface belongs.  If no key exists, try a\
    \ key with the\n      Peers field \"all\".\n   o  The Interfaces field matches\
    \ the interface over which the packet\n      is sent or \"all\".\n   o  The Direction\
    \ field is either \"out\" or \"both\".\n   o  If multiple keys match the Interface\
    \ field, keys that explicitly\n      match I1 should be preferred over keys matching\
    \ \"all\".  If there\n      are still multiple keys that match, the key with the\
    \ most resent\n      SendLifetimeStart will be selected.  This will facilitate\
    \ graceful\n      key rollover.\n   o  The Key ID field in the OSPFv2 header (refer\
    \ to Figure 1) will be\n      set to the selected key's LocalKeyName.\n"
- title: 4.3.  Key Selection for OSPF Packet Reception
  contents:
  - "4.3.  Key Selection for OSPF Packet Reception\n   When cryptographic authentication\
    \ is used, the ID of the\n   authentication key is included in the authentication\
    \ field of the\n   OSPF packet header.  Using this Key ID, it is straight forward\
    \ for a\n   receiver to locate the corresponding key.  The simple requirements\n\
    \   are:\n   o  The interface on which the key was received is associated with\
    \ the\n      key's interface.\n   o  The Key ID obtained from the OSPFv2 packet\
    \ header corresponds to\n      the neighbor's PeerKeyName.  Since OSPFv2 keys\
    \ are symmetric, the\n      LocalKeyName and PeerKeyName for OSPFv2 keys will\
    \ be identical.\n      Hence, the Key ID will be used to select the correct local\
    \ key.\n   o  The Direction field is either \"in\" or \"both\".\n   o  The Peers\
    \ field matches as described in Sections Section 4.1 and\n      Section 4.2.\n"
- title: 5.  Securing the IP Header
  contents:
  - "5.  Securing the IP Header\n   This document updates the definition of the Apad\
    \ constant, as it is\n   defined in [RFC5709], to include the IP source address\
    \ from the IP\n   header of the OSPFv2 protocol packet.  The overall cryptographic\n\
    \   authentication process defined in [RFC5709] remains unchanged.  To\n   reduce\
    \ the potential for confusion, this section minimizes the\n   repetition of text\
    \ from RFC 5709 [RFC5709].  The changes are:\n   RFC 5709, Section 3.3 describes\
    \ how the cryptographic authentication\n   must be computed.  In RFC 5709, the\
    \ First-Hash includes the OSPF\n   packet and Authentication Trailer.  With this\
    \ specification, the\n   64-bit sequence number will be included in the First-Hash\
    \ along with\n   the Authentication Trailer and OSPF packet.\n   RFC 5709, Section\
    \ 3.3 also requires the OSPFv2 packet's\n   Authentication Trailer (which is the\
    \ appendage described in RFC 2328,\n   Appendix D.4.3, page 233, items (6)(a)\
    \ and (6)(d)) to be filled with\n   the value Apad.  Apad is a hexadecimal constant\
    \ with the value\n   0x878FE1F3 repeated (L/4) times, where L is the length of\
    \ the hash\n   being used and is measured in octets rather than bits.\n   OSPF\
    \ routers sending OSPF packets must initialize the first 4 octets\n   of Apad\
    \ to the value of the IP source address that would be used when\n   sending the\
    \ OSPFv2 packet.  The remainder of Apad will contain the\n   value 0x878FE1F3\
    \ repeated (L - 4)/4 times, where L is the length of\n   the hash, measured in\
    \ octets.  The basic idea is to incorporate the\n   IP source address from the\
    \ IP header in the cryptographic\n   authentication computation so that any change\
    \ of IP source address in\n   a replayed packet can be detected.\n   When an OSPF\
    \ packet is received, implementations MUST initialize the\n   first 4 octets of\
    \ Apad to the IP source address from the IP header of\n   the incoming OSPFv2\
    \ packet.  The remainder of Apad will contain the\n   value 0x878FE1F3 repeated\
    \ (L - 4)/4 times, where L is the length of\n   the hash, measured in octets.\
    \  Besides changing the value of Apad,\n   this document does not introduce any\
    \ other changes to the\n   authentication mechanism described in [RFC5709].  This\
    \ would prevent\n   all attacks where a rogue OSPF router changes the IP source\
    \ address\n   of an OSPFv2 packet and replays it on the same multi-access interface\n\
    \   or another interface since the IP source address is now included in\n   the\
    \ cryptographic hash computation and modification would result in\n   the OSPFv2\
    \ packet being dropped due to an authentication failure.\n"
- title: 6.  Mitigating Cross-Protocol Attacks
  contents:
  - "6.  Mitigating Cross-Protocol Attacks\n   In order to prevent cross-protocol\
    \ replay attacks for protocols\n   sharing common keys, the two-octet OSPFv2 Cryptographic\
    \ Protocol ID\n   is appended to the authentication key prior to use.  Refer to\
    \ the\n   IANA Considerations (Section 9).\n   [RFC5709], Section 3.3 describes\
    \ the mechanism to prepare the key\n   used in the hash computation.  This document\
    \ updates the text under\n   \"(1) PREPARATION OF KEY\" as follows:\n      The\
    \ OSPFv2 Cryptographic Protocol ID is appended to the\n      Authentication Key\
    \ (K) yielding a Protocol-Specific Authentication\n      Key (Ks).  In this application,\
    \ Ko is always L octets long.  While\n      [RFC2104] supports a key that is up\
    \ to B octets long, this\n      application uses L as the Ks length consistent\
    \ with [RFC4822],\n      [RFC5310], and [RFC5709].  According to [FIPS-198], Section\
    \ 3,\n      keys greater than L octets do not significantly increase the\n   \
    \   function strength.  Ks is computed as follows:\n      If the Protocol-Specific\
    \ Authentication Key (Ks) is L octets long,\n      then Ko is equal to Ks.  If\
    \ the Protocol-Specific Authentication\n      Key (Ks) is more than L octets long,\
    \ then Ko is set to H(Ks).  If\n      the Protocol-Specific Authentication Key\
    \ (Ks) is less than L\n      octets long, then Ko is set to the Protocol-Specific\n\
    \      Authentication Key (Ks) with zeros appended to the end of the\n      Protocol-Specific\
    \ Authentication Key (Ks) such that Ko is L octets\n      long.\n   Once the cryptographic\
    \ key (Ko) used with the hash algorithm is\n   derived, the rest of the authentication\
    \ mechanism described in\n   [RFC5709] remains unchanged other than one detail\
    \ that was\n   unspecified.  When XORing Ko and Ipad of Opad, Ko MUST be padded\
    \ with\n   zeros to the length of Ipad or Opad.  It is expected that\n   implementations\
    \ of [RFC5709] perform this padding implicitly.\n"
- title: 7.  Backward Compatibility
  contents:
  - "7.  Backward Compatibility\n   This security extension uses a new authentication\
    \ type, AuType in the\n   OSPFv2 header (refer to Figure 1).  When an OSPFv2 packet\
    \ is received\n   and the AuType doesn't match the configured authentication type\
    \ for\n   the interface, the OSPFv2 packet will be dropped as specified in RFC\n\
    \   2328 [RFC2328].  This guarantees backward-compatible behavior\n   consistent\
    \ with any other authentication type mismatch.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   This document rectifies the manual key management\
    \ procedure that\n   currently exists within OSPFv2, as part of Phase 1 of the\
    \ KARP\n   Working Group.  Therefore, only the OSPFv2 manual key management\n\
    \   mechanism is considered.  Any solution that takes advantage of the\n   automatic\
    \ key management mechanism is beyond the scope of this\n   document.\n   The described\
    \ sequence number extension offers most of the benefits\n   of more complicated\
    \ mechanisms without their attendant challenges.\n   There are, however, a couple\
    \ drawbacks to this approach.  First, it\n   requires the OSPF implementation\
    \ to be able to save its boot count in\n   non-volatile storage.  If the non-volatile\
    \ storage is ever repaired\n   or upgraded such that the contents are lost or\
    \ the OSPFv2 router is\n   replaced, the authentication keys MUST be changed to\
    \ prevent replay\n   attacks.\n   Second, if a router is taken out of service\
    \ completely (either\n   intentionally or due to a persistent failure), the potential\
    \ exists\n   for reestablishment of an OSPFv2 adjacency by replaying the entire\n\
    \   OSPFv2 session establishment.  However, this scenario is extremely\n   unlikely,\
    \ since it would imply an identical OSPFv2 adjacency\n   formation packet exchange.\
    \  Without adjacency formation, the replay\n   of OSPFv2 hello packets alone for\
    \ an OSPFv2 router that has been\n   taken out of service should not result in\
    \ any serious attack, as the\n   only consequence is superfluous processing. \
    \ Of course, this attack\n   could also be thwarted by changing the relevant manual\
    \ keys.\n   This document also provides a solution to prevent certain denial-of-\n\
    \   service attacks that can be launched by changing the source address\n   in\
    \ the IP header of an OSPFv2 protocol packet.\n   Using a single crypto sequence\
    \ number can leave the router vulnerable\n   to a replay attack where it uses\
    \ the same source IP address on two\n   different point-to-point unnumbered links.\
    \  In such environments\n   where an attacker can actively tap the point-to-point\
    \ links, it's\n   recommended that the user employ different keys on each of those\n\
    \   unnumbered IP interfaces.\n"
- title: 9.  IANA Considerations
  contents:
  - "9.  IANA Considerations\n   This document registers a new code point from the\
    \ \"OSPF Shortest Path\n   First (OSPF) Authentication Codes\" registry:\n   o\
    \  3 - Cryptographic Authentication with Extended Sequence Numbers.\n   This document\
    \ also registers a new code point from the\n   \"Authentication Cryptographic\
    \ Protocol ID\" registry defined under\n   \"Keying and Authentication for Routing\
    \ Protocols (KARP) Parameters\":\n   o  3 - OSPFv2.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC2328]\
    \  Moy, J., \"OSPF Version 2\", STD 54, RFC 2328, April 1998,\n              <http://www.rfc-editor.org/info/rfc2328>.\n\
    \   [RFC5709]  Bhatia, M., Manral, V., Fanto, M., White, R., Barnes, M.,\n   \
    \           Li, T., and R. Atkinson, \"OSPFv2 HMAC-SHA Cryptographic\n       \
    \       Authentication\", RFC 5709, October 2009,\n              <http://www.rfc-editor.org/info/rfc5709>.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [FIPS-198]\n              US National Institute\
    \ of Standards and Technology, \"The\n              Keyed-Hash Message Authentication\
    \ Code (HMAC)\", FIPS PUB\n              198-1, July 2008.\n   [RFC2104]  Krawczyk,\
    \ H., Bellare, M., and R. Canetti, \"HMAC: Keyed-\n              Hashing for Message\
    \ Authentication\", RFC 2104, February\n              1997, <http://www.rfc-editor.org/info/rfc2104>.\n\
    \   [RFC3414]  Blumenthal, U. and B. Wijnen, \"User-based Security Model\n   \
    \           (USM) for version 3 of the Simple Network Management\n           \
    \   Protocol (SNMPv3)\", STD 62, RFC 3414, December 2002,\n              <http://www.rfc-editor.org/info/rfc3414>.\n\
    \   [RFC4222]  Choudhury, G., Ed., \"Prioritized Treatment of Specific\n     \
    \         OSPF Version 2 Packets and Congestion Avoidance\", BCP 112,\n      \
    \        RFC 4222, October 2005,\n              <http://www.rfc-editor.org/info/rfc4222>.\n\
    \   [RFC4822]  Atkinson, R. and M. Fanto, \"RIPv2 Cryptographic\n            \
    \  Authentication\", RFC 4822, February 2007,\n              <http://www.rfc-editor.org/info/rfc4822>.\n\
    \   [RFC5310]  Bhatia, M., Manral, V., Li, T., Atkinson, R., White, R.,\n    \
    \          and M. Fanto, \"IS-IS Generic Cryptographic\n              Authentication\"\
    , RFC 5310, February 2009,\n              <http://www.rfc-editor.org/info/rfc5310>.\n\
    \   [RFC6039]  Manral, V., Bhatia, M., Jaeggli, J., and R. White, \"Issues\n \
    \             with Existing Cryptographic Protection Methods for Routing\n   \
    \           Protocols\", RFC 6039, October 2010,\n              <http://www.rfc-editor.org/info/rfc6039>.\n\
    \   [RFC6094]  Bhatia, M. and V. Manral, \"Summary of Cryptographic\n        \
    \      Authentication Algorithm Implementation Requirements for\n            \
    \  Routing Protocols\", RFC 6094, February 2011,\n              <http://www.rfc-editor.org/info/rfc6094>.\n\
    \   [RFC6549]  Lindem, A., Roy, A., and S. Mirtorabi, \"OSPFv2 Multi-\n      \
    \        Instance Extensions\", RFC 6549, March 2012,\n              <http://www.rfc-editor.org/info/rfc6549>.\n\
    \   [RFC6862]  Lebovitz, G., Bhatia, M., and B. Weis, \"Keying and\n         \
    \     Authentication for Routing Protocols (KARP) Overview,\n              Threats,\
    \ and Requirements\", RFC 6862, March 2013,\n              <http://www.rfc-editor.org/info/rfc6862>.\n\
    \   [RFC6863]  Hartman, S. and D. Zhang, \"Analysis of OSPF Security\n       \
    \       According to the Keying and Authentication for Routing\n             \
    \ Protocols (KARP) Design Guide\", RFC 6863, March 2013,\n              <http://www.rfc-editor.org/info/rfc6863>.\n\
    \   [RFC7210]  Housley, R., Polk, T., Hartman, S., and D. Zhang,\n           \
    \   \"Database of Long-Lived Symmetric Cryptographic Keys\", RFC\n           \
    \   7210, April 2014,\n              <http://www.rfc-editor.org/info/rfc7210>.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   Thanks to Ran Atkinson for help in the analysis of errata\
    \ for RFC\n   6506, which led to clarifications in this document.\n   Thanks to\
    \ Gabi Nakibly for pointing out a possible attack on P2P\n   links.\n   Thanks\
    \ to Suresh Krishnan for comments made during the Gen-Art\n   review.  In particular,\
    \ thanks for pointing out an ambiguity in the\n   initialization of Apad.\n  \
    \ Thanks to Shaun Cooley for the security directorate review.\n   Thanks to Adrian\
    \ Farrel for comments during the IESG last call.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Manav Bhatia\n   Ionos Networks\n   Bangalore\n   India\n\
    \   EMail: manav@ionosnetworks.com\n   Sam Hartman\n   Painless Security\n   EMail:\
    \ hartmans-ietf@mit.edu\n   Dacheng Zhang\n   Huawei Technologies Co., Ltd.\n\
    \   Beijing\n   China\n   EMail: dacheng.zhang@gmail.com\n   Acee Lindem (editor)\n\
    \   Cisco\n   United States\n   EMail: acee@cisco.com\n"
