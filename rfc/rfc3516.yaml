- contents:
  - '                     IMAP4 Binary Content Extension

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This memo defines the Binary extension to the Internet Message Access\n
    \  Protocol (IMAP4).  It provides a mechanism for IMAP4 clients and\n   servers
    to exchange message body data without using a MIME content-\n   transfer-encoding.\n"
  title: Abstract
- contents:
  - "1.   Conventions Used in this Document\n   The key words \"MUST\", \"MUST NOT\",
    \"SHOULD\", \"SHOULD NOT\", and \"MAY\"\n   in this document are to be interpreted
    as described in [KEYWORD].\n   The abbreviation \"CTE\" means content-transfer-encoding.\n"
  title: 1.   Conventions Used in this Document
- contents:
  - "2.   Introduction\n   The MIME extensions to Internet messaging allow for the
    transmission\n   of non-textual (binary) message content [MIME-IMB].  Since the\n
    \  traditional transports for messaging are not always capable of\n   passing
    binary data transparently, MIME provides encoding schemes\n   that allow binary
    content to be transmitted over transports that are\n   not otherwise able to do
    so.\n   The overhead of MIME-encoding this content can be considerable in\n   some
    contexts (e.g., slow radio links, streaming multimedia).\n   Reducing the overhead
    associated with CTE schemes such as base64\n   can give a noticeable reduction
    in resource consumption.  The Binary\n   extension lets the server perform CTE
    decoding prior to transmitting\n   message data to the client.\n"
  title: 2.   Introduction
- contents:
  - "3.  Content-Transfer-Encoding Considerations\n   Every IMAP4 body section has
    a MIME content-transfer-encoding.\n   (Those without an explicit Content-Transfer-Encoding
    header are\n   implicitly labeled as \"7bit\" content.)  In the terminology of
    [MIME-\n   IMB], the CTE specifies both a decoding algorithm and the domain of\n
    \  the decoded data.  In this memo, \"decoding\" refers to the CTE\n   decoding
    step described in [MIME-IMB].\n   Certain CTEs use an identity encoding transformation.
    \ For these CTEs\n   there is no decoding required, however the domain of the
    underlying\n   data may not be expressible in the IMAP4 protocol (e.g., MIME\n
    \  \"binary\" content containing NUL octets).  To accommodate these cases\n   the
    Binary extension introduces a new type of literal protocol\n   element that is
    fully eight bit transparent.\n   Thus, server  processing of the FETCH BINARY
    command involves two\n   logical steps:\n   1)  perform any CTE-related decoding\n
    \  2)  determine the domain of the decoded data\n   Step 2 is necessary to determine
    which protocol element should be\n   used to transmit the decoded data.  (See
    FETCH Response Extensions\n   for further details.)\n"
  title: 3.  Content-Transfer-Encoding Considerations
- contents:
  - "4.  Framework for the IMAP4 Binary Extension\n   This memo defines the following
    extensions to [IMAP4rev1].\n"
  - contents:
    - "4.1.  CAPABILITY Identification\n   IMAP4 servers that support this extension
      MUST include \"BINARY\" in\n   the response list to the CAPABILITY command.\n"
    title: 4.1.  CAPABILITY Identification
  - contents:
    - "4.2.  FETCH Command Extensions\n   This extension defines three new FETCH command
      data items.\n      BINARY<section-binary>[<partial>]\n         Requests that
      the specified section be transmitted after\n         performing CTE-related
      decoding.\n         The <partial> argument, if present, requests that a subset
      of\n         the data be returned.  The semantics of a partial FETCH BINARY\n
      \        command are the same as for a partial FETCH BODY command, with\n         the
      exception that the <partial> arguments refer to the DECODED\n         section
      data.\n      BINARY.PEEK<section-binary>[<partial>]\n         An alternate form
      of FETCH BINARY that does not implicitly set\n         the \\Seen flag.\n      BINARY.SIZE<section-binary>\n
      \        Requests the decoded size of the section (i.e., the size to\n         expect
      in response to the corresponding FETCH BINARY request).\n         Note: client
      authors are cautioned that this might be an\n         expensive operation for
      some server implementations.\n         Needlessly issuing this request could
      result in degraded\n         performance due to servers having to calculate
      the value every\n         time the request is issued.\n"
    title: 4.2.  FETCH Command Extensions
  - contents:
    - "4.3.  FETCH Response Extensions\n   This extension defines two new FETCH response
      data items.\n      BINARY<section-binary>[<<number>>]\n         An <nstring>
      or <literal8> expressing the content of the\n         specified section after
      removing any CTE-related encoding.  If\n         <number> is present it refers
      to the offset within the DECODED\n         section data.\n         If the domain
      of the decoded data is \"8bit\" and the data does\n         not contain the
      NUL octet, the server SHOULD return the data in\n         a <string> instead
      of a <literal8>; this allows the client to\n         determine if the \"8bit\"
      data contains the NUL octet without\n         having to explicitly scan the
      data stream for for NULs.\n         If the server does not know how to decode
      the section's CTE, it\n         MUST fail the request and issue a \"NO\" response
      that contains\n         the \"UNKNOWN-CTE\" extended response code.\n      BINARY.SIZE<section-binary>\n
      \        The size of the section after removing any CTE-related\n         encoding.
      \ The value returned MUST match the size of the\n         <nstring> or <literal8>
      that will be returned by the\n         corresponding FETCH BINARY request.\n
      \        If the server does not know how to decode the section's CTE, it\n         MUST
      fail the request and issue a \"NO\" response that contains\n         the \"UNKNOWN-CTE\"
      extended response code.\n"
    title: 4.3.  FETCH Response Extensions
  - contents:
    - "4.4.  APPEND Command Extensions\n   The APPEND command is extended to allow
      the client to append data\n   containing NULs by using the <literal8> syntax.
      \ The server MAY\n   modify the CTE of the appended data, however any such transformation\n
      \  MUST NOT result in a loss of data.\n   If the destination mailbox does not
      support the storage of binary\n   content, the server MUST fail the request
      and issue a \"NO\" response\n   that contains the \"UNKNOWN-CTE\" extended response
      code.\n"
    title: 4.4.  APPEND Command Extensions
  title: 4.  Framework for the IMAP4 Binary Extension
- contents:
  - "5.  MIME Encoded Headers\n   [MIME-MHE] defines an encoding that allows for non-US-ASCII
    text in\n   message headers.  This encoding is not the same as the content-\n
    \  transfer-encoding applied to message bodies, and the decoding\n   transformations
    described in this memo do not apply to [MIME-MHE]\n   encoded header text.  A
    server MUST NOT perform any conversion of\n   [MIME-MHE] encoded header text in
    response to any binary FETCH or\n   APPEND request.\n"
  title: 5.  MIME Encoded Headers
- contents:
  - "6.  Implementation Considerations\n   Messaging clients and servers have been
    notoriously lax in their\n   adherence to the Internet CRLF convention for terminating
    lines of\n   textual data in Internet protocols.  When sending data using the\n
    \  Binary extension, servers MUST ensure that textual line-oriented\n   sections
    are always transmitted using the IMAP4 CRLF line termination\n   syntax, regardless
    of the underlying storage representation of the\n   data on the server.\n   A
    server may choose to store message body binary content in a non-\n   encoded format.
    \ Regardless of the internal storage representation\n   used, the server MUST
    issue BODYSTRUCTURE responses that describe the\n   message as though the binary-encoded
    sections are encoded in a CTE\n   acceptable to the IMAP4 base specification.
    \ Furthermore, the results\n   of a FETCH BODY MUST return the message body content
    in the format\n   described by the corresponding FETCH BODYSTRUCTURE response.\n
    \  While the server is allowed to modify the CTE of APPENDed <literal8>\n   data,
    this should only be done when it is absolutely necessary.\n   Gratuitous encoding
    changes will render useless most cryptographic\n   operations that have been performed
    on the message.\n   This extension provides an optimization that is useful in
    certain\n   specific situations.  It does not absolve clients from providing\n
    \  basic functionality (content transfer decoding) that should be\n   available
    in all messaging clients.  Clients supporting this\n   extension SHOULD be prepared
    to perform their own CTE decoding\n   operations.\n"
  title: 6.  Implementation Considerations
- contents:
  - "7.  Formal Protocol Syntax\n   The following syntax specification uses the augmented
    Backus-Naur\n   Form (ABNF) notation as used in [ABNF], and incorporates by reference\n
    \  the Core Rules defined in that document.\n   This syntax augments the grammar
    specified in [IMAP4rev1].\n   append         =/  \"APPEND\" SP mailbox [SP flag-list]\n
    \                     [SP date-time] SP literal8\n   fetch-att      =/  \"BINARY\"
    [\".PEEK\"] section-binary [partial]\n                      / \"BINARY.SIZE\"
    section-binary\n   literal8       =   \"~{\" number \"}\" CRLF *OCTET\n                      ;
    <number> represents the number of OCTETs\n                      ; in the response
    string.\n   msg-att-static =/  \"BINARY\" section-binary SP (nstring / literal8)\n
    \                     / \"BINARY.SIZE\" section-binary SP number\n   partial        =
    \  \"<\" number \".\" nz-number \">\"\n   resp-text-code =/  \"UNKNOWN-CTE\"\n
    \  section-binary =   \"[\" [section-part] \"]\"\n"
  title: 7.  Formal Protocol Syntax
- contents:
  - "8.  Normative References\n   [ABNF]      Crocker, D., Editor, and P. Overell,
    \"Augmented BNF for\n               Syntax Specifications: ABNF\", RFC 2234, November
    1997.\n   [IMAP4rev1] Crispin, M., \"Internet Message Access Protocol Version\n
    \              4rev1\", RFC 3501, March 2003.\n   [KEYWORD]   Bradner, S., \"Key
    words for use in RFCs to Indicate\n               Requirement Levels\", BCP 14,
    RFC 2119, March 1997.\n   [MIME-IMB]  Freed, N. and N. Borenstein, \"Multipurpose
    Internet Mail\n               Extensions (MIME) Part One: Format of Internet Message\n
    \              Bodies\", RFC 2045, November 1996.\n   [MIME-MHE]  Moore, K., \"MIME
    (Multipurpose Internet Mail Extensions)\n               Part Three: Message Header
    Extensions for Non-ASCII\n               Text\", RFC 2047, November 1996.\n"
  title: 8.  Normative References
- contents:
  - "9.  Security Considerations\n   There are no known additional security issues
    with this extension\n   beyond those described in the base protocol described
    in [IMAP4rev1].\n"
  title: 9.  Security Considerations
- contents:
  - "10.  Intellectual Property\n   The IETF takes no position regarding the validity
    or scope of any\n   intellectual property or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; neither does it represent that it\n   has made any effort to
    identify any such rights.  Information on the\n   IETF's procedures with respect
    to rights in standards-track and\n   standards-related documentation can be found
    in BCP-11.  Copies of\n   claims of rights made available for publication and
    any assurances of\n   licenses to be made available, or the result of an attempt
    made to\n   obtain a general license or permission for the use of such\n   proprietary
    rights by implementors or users of this specification can\n   be obtained from
    the IETF Secretariat.\n   The IETF invites any interested party to bring to its
    attention any\n   copyrights, patents or patent applications, or other proprietary\n
    \  rights which may cover technology that may be required to practice\n   this
    standard.  Please address the information to the IETF Executive\n   Director.\n"
  title: 10.  Intellectual Property
- contents:
  - "11.  Author's Address\n   Lyndon Nerenberg\n   Orthanc Systems\n   1606 - 10770
    Winterburn Road\n   Edmonton, Alberta\n   Canada  T5S 1T6\n   EMail: lyndon@orthanc.ab.ca\n"
  title: 11.  Author's Address
- contents:
  - "12.  Full Copyright Statement\n   Copyright (C) The Internet Society (2003).
    \ All Rights Reserved.\n   This document and translations of it may be copied
    and furnished to\n   others, and derivative works that comment on or otherwise
    explain it\n   or assist in its implementation may be prepared, copied, published\n
    \  and distributed, in whole or in part, without restriction of any\n   kind,
    provided that the above copyright notice and this paragraph are\n   included on
    all such copies and derivative works.  However, this\n   document itself may not
    be modified in any way, such as by removing\n   the copyright notice or references
    to the Internet Society or other\n   Internet organizations, except as needed
    for the purpose of\n   developing Internet standards in which case the procedures
    for\n   copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: 12.  Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
