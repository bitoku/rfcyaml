- title: __initial_text__
  contents:
  - ''
- title: Internet Research Task Force (IRTF)                          B. Wissingh
  contents:
  - 'Internet Research Task Force (IRTF)                          B. Wissingh

    '
- title: 'Information-Centric Networking (ICN): Content-Centric Networking (CCNx)'
  contents:
  - "Information-Centric Networking (ICN): Content-Centric Networking (CCNx)\n   \
    \           and Named Data Networking (NDN) Terminology\n"
- title: Abstract
  contents:
  - "Abstract\n   Information-Centric Networking (ICN) is a novel paradigm where\n\
    \   network communications are accomplished by requesting named content\n   instead\
    \ of sending packets to destination addresses.  Named Data\n   Networking (NDN)\
    \ and Content-Centric Networking (CCNx) are two\n   prominent ICN architectures.\
    \  This document provides an overview of\n   the terminology and definitions that\
    \ have been used in describing\n   concepts in these two implementations of ICN.\
    \  While there are other\n   ICN architectures, they are not part of the NDN and\
    \ CCNx concepts and\n   as such are out of scope for this document.  This document\
    \ is a\n   product of the Information-Centric Networking Research Group (ICNRG).\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Research Task Force\n   (IRTF).  The IRTF publishes the results\
    \ of Internet-related research\n   and development activities.  These results\
    \ might not be suitable for\n   deployment.  This RFC represents the consensus\
    \ of the Information-\n   Centric Networking Research Group of the Internet Research\
    \ Task Force\n   (IRTF).  Documents approved for publication by the IRSG are not\
    \ a\n   candidate for any level of Internet Standard; see Section 2 of RFC\n \
    \  7841.\n   Information about the current status of this document, any errata,\n\
    \   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8793.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2020 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction\n   2.  A Sketch of the Big Picture of\
    \ ICN\n   3.  Terms by Category\n     3.1.  Generic Terms\n     3.2.  Terms Related\
    \ to ICN Nodes\n     3.3.  Terms Related to the Forwarding Plane\n     3.4.  Terms\
    \ Related to Packet Types\n     3.5.  Terms Related to Name Types\n     3.6. \
    \ Terms Related to Name Usage\n     3.7.  Terms Related to Data-Centric Security\n\
    \   4.  Semantics and Usage\n     4.1.  Data Transfer\n     4.2.  Data Transport\n\
    \     4.3.  Lookup Service\n     4.4.  Database Access\n     4.5.  Remote Procedure\
    \ Call\n     4.6.  Publish/Subscribe\n   5.  IANA Considerations\n   6.  Security\
    \ Considerations\n   7.  References\n     7.1.  Normative References\n     7.2.\
    \  Informative References\n   Acknowledgments\n   Authors' Addresses\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Information-centric networking (ICN) is an architecture\
    \ to evolve the\n   Internet infrastructure from the existing host-centric design\
    \ to a\n   data-centric architecture, where accessing data by name becomes the\n\
    \   essential network primitive.  The goal is to let applications refer\n   to\
    \ data independently of their location or means of transportation,\n   which enables\
    \ native multicast delivery, ubiquitous in-network\n   caching, and replication\
    \ of data objects.\n   As the work on this topic continues to evolve, many new\
    \ terms are\n   emerging.  The goal of this document is to collect the key terms\
    \ with\n   a corresponding definition as they are used in the CCNx and NDN\n \
    \  projects.  Among the important documents for these projects are\n   [RFC8569],\
    \ [RFC8609], and [NDNTLV].  Other ICN projects such as\n   [NETINF], [PSIRP],\
    \ or [MOBILITY-FIRST] are not covered and may be the\n   subject of other documents.\n\
    \   In this document, to help provide context for the individual defined\n   terms,\
    \ we first sketch the bigger picture of an ICN network by\n   introducing the\
    \ basic concepts and identifying the major components\n   of the architecture\
    \ in Section 2; after which, in Section 3, ICN-\n   related terms are listed by\
    \ different categories.  Readers should be\n   aware that in this organization,\
    \ some terms may be used in other\n   definitions before they themselves are defined.\n\
    \   While this terminology document describes both confidentiality and\n   integrity-related\
    \ terms, it should be noted that ICN architectures\n   like NDN and CCNx generally\
    \ do not provide data confidentiality,\n   which is treated in these architectures\
    \ as an application-layer\n   concern.\n   This document represents the consensus\
    \ of the Information-Centric\n   Networking Research Group (ICNRG).  It has been\
    \ reviewed extensively\n   by the Research Group (RG) members active in the specific\
    \ areas of\n   work covered by the document.  It is not an IETF product and is\
    \ not\n   intended for standardization in the IETF.\n"
- title: 2.  A Sketch of the Big Picture of ICN
  contents:
  - "2.  A Sketch of the Big Picture of ICN\n   In networking terms, an ICN is a delivery\
    \ infrastructure for named\n   data.  For other complementing views, see Section\
    \ 4.\n         requestor         zero or more           data sources or\n    \
    \     (node)          forwarding nodes         replica nodes\n           |   Interest(n)\
    \   |     |   Interest(n)    |   |\n           | Data([n],c,[s]) |     |     \
    \             |   |\n               Legend: n=name, c=content, s=signature\n \
    \           Figure 1: Request-Reply Protocol of ICN Networking.\n   The following\
    \ list describes the basic ICN concepts needed to discuss\n   the implementation\
    \ of this service abstraction.\n   *Request-Reply Protocol (Interest and Data\
    \ Packet):*\n      An ICN's lookup service is implemented by defining two types\
    \ of\n      network packet formats: Interest packets that request content by\n\
    \      name and Data packets that carry the requested content.  The\n      returned\
    \ Data packet must match the request's parameters (e.g.,\n      having a partially\
    \ or fully matching name).  If the request is\n      ambiguous and several Data\
    \ packets would satisfy the request, the\n      ICN network returns only one matching\
    \ Data packet (thus achieving\n      flow balance between Interest and Data packets\
    \ over individual\n      Layer 2 interfaces).\n   *Packet and Content Names:*\n\
    \      Without a strong cryptographic binding between the name of a Data\n   \
    \   packet and its content, Data packet names would be useless for\n      fetching\
    \ specific content.  In ICN, verification of a Data\n      packet's name-to-content\
    \ binding is achieved through cryptographic\n      means either by (1) a cryptographic\
    \ signature that explicitly\n      binds an application-chosen name to a Data\
    \ packet's content or by\n      (2) relying on an implicit name (cryptographic\
    \ hash of the Data\n      packet with or without application-chosen name) that\
    \ the data\n      consumer obtained through other means.\n   *Data Authenticity\
    \ and Encryption:*\n      Any data consumer or network element can (in principle)\
    \ validate\n      the authenticity of a Data packet by verifying its cryptographic\n\
    \      name-to-content binding.  Note that data authenticity is distinct\n   \
    \   from data trustworthiness, though the two concepts are related.  A\n     \
    \ packet is authentic if it has a valid name-to-content binding, but\n      it\
    \ may still be unwise to \"trust\" the content for any particular\n      purpose.\n\
    \   *Trust:*\n      Data authenticity is distinct from data trustworthiness, though\n\
    \      the two concepts are related.  A packet is authentic if it has a\n    \
    \  valid name-to-content binding.  A packet is trustworthy, i.e., it\n      comes\
    \ from a reputable or trusted origin, if this binding is valid\n      in the context\
    \ of a trust model.  The trust model provides\n      assurance that the name used\
    \ for a given piece of content is\n      appropriate for the value of the content.\
    \  Section 6 discusses\n      this further.\n   *Segmenting and Versioning:*\n\
    \      An ICN network will be engineered for some packet size limit.  As\n   \
    \   application-level data objects will often be considerably larger,\n      objects\
    \ must be segmented into multiple Data packets.  The names\n      for these Data\
    \ packets can, for example, be constructed by\n      choosing one application-level\
    \ object name to which a different\n      suffix is added for each segment.  The\
    \ same method can be used to\n      handle different versions of an application-level\
    \ object by\n      including a version number in the name of the overall object.\n\
    \   *Packet and Frame:*\n      NDN and CCNx introduce Protocol Data Units (PDUs),\
    \ which typically\n      are larger than the maximum transmission unit of the\
    \ underlying\n      networking technology.  We refer to PDUs as packets and the\n\
    \      (potentially fragmented) packet parts that traverse MTU-bound\n      Layer\
    \ 2 interfaces as frames.  Handling Layer 2 technologies that\n      lead to fragmentation\
    \ of ICN packets is done inside the ICN\n      network and is not visible at the\
    \ service interface.\n   *ICN Node:*\n      A node within an ICN network can fulfill\
    \ the role of a data\n      producer, a data consumer, and/or a forwarder for\
    \ Interest and\n      Data packets.  When a forwarder has connectivity to neighbor\n\
    \      nodes, it performs Interest and Data packet forwarding in real\n      time.\
    \  It can also behave as a store and forward node carrying an\n      Interest\
    \ or Data packet for some time before forwarding it to the\n      next node. \
    \ An ICN node may also run routing protocols to assist\n      its Interest forwarding\
    \ decisions.\n   *Forwarding Plane:*\n      The canonical way of implementing\
    \ packet forwarding in an ICN\n      network relies on three data structures that\
    \ capture a node's\n      state: a Forwarding Interest Base (FIB), a Pending Interest\n\
    \      Table (PIT), and a Content Store (CS).  It also utilizes Interest\n   \
    \   forwarding strategies, which take input from both FIB and\n      measurements\
    \ to make Interest forwarding decisions.  When a node\n      receives an Interest\
    \ packet, it checks its CS and PIT to find a\n      matching entry; if no match\
    \ is found, the node records the\n      Interest in its PIT and forwards the Interest\
    \ to the next hop(s)\n      towards the requested content, based on the information\
    \ in its\n      FIB.\n"
- title: 3.  Terms by Category
  contents:
  - '3.  Terms by Category

    '
- title: 3.1.  Generic Terms
  contents:
  - "3.1.  Generic Terms\n   *Information-Centric Networking (ICN):*\n      A networking\
    \ architecture that retrieves Data packets in response\n      to Interest packets.\
    \  Content-Centric Networking (CCNx 1.x) and\n      Named Data Networking (NDN)\
    \ are two realizations (designs) of an\n      ICN architecture.\n   *Data Packet\
    \ Immutability:*\n      After a Data packet is created, the cryptographic signature\n\
    \      binding the name to the content ensures that if either the content\n  \
    \    or the name changes, that change will be detected and the packet\n      discarded.\
    \  If the content carried in a Data packet is intended to\n      be mutable, versioning\
    \ of the name should be used so that each\n      version uniquely identifies an\
    \ immutable instance of the content.\n      This allows disambiguation of various\
    \ versions of content such\n      that coordination among the various instances\
    \ in a distributed\n      system can be achieved.\n"
- title: 3.2.  Terms Related to ICN Nodes
  contents:
  - "3.2.  Terms Related to ICN Nodes\n   *ICN Interface:*\n      A generalization\
    \ of the network interface that can represent a\n      physical network interface\
    \ (ethernet, Wi-Fi, bluetooth adapter,\n      etc.), an overlay inter-node channel\
    \ (IP/UDP tunnel, etc.), or an\n      intra-node inter-process communication (IPC)\
    \ channel to an\n      application (unix socket, shared memory, intents, etc.).\n\
    \         Common aliases include: face.\n   *ICN Consumer:*\n      An ICN entity\
    \ that requests Data packets by generating and sending\n      out Interest packets\
    \ towards local (using intra-node interfaces)\n      or remote (using inter-node\
    \ interfaces) ICN Forwarders.\n         Common aliases include: consumer, information\
    \ consumer, data\n         consumer, consumer of the content.\n   *ICN Producer:*\n\
    \      An ICN entity that creates Data packets and makes them available\n    \
    \  for retrieval.\n         Common aliases include: producer, publisher, information\n\
    \         publisher, data publisher, data producer.\n   *ICN Forwarder:*\n   \
    \   An ICN entity that implements stateful forwarding.\n         Common aliases\
    \ include: ICN router.\n   *ICN Data Node:*\n      An ICN entity that temporarily\
    \ stores and potentially carries an\n      Interest or Data packet before forwarding\
    \ it to next ICN entity.\n      Note that such ICN data nodes do not have all\
    \ the properties of\n      data nodes as employed in the Delay Tolerant Networking\
    \ (DTN)\n      [RFC4838] specifications.\n"
- title: 3.3.  Terms Related to the Forwarding Plane
  contents:
  - "3.3.  Terms Related to the Forwarding Plane\n   *Stateful Forwarding:*\n    \
    \  A forwarding process that records incoming Interest packets in the\n      PIT\
    \ and uses the recorded information to forward the retrieved\n      Data packets\
    \ back to the consumer(s).  The recorded information\n      can also be used to\
    \ measure data-plane performance, e.g., to\n      adjust interest forwarding-strategy\
    \ decisions.\n         Common aliases include: ICN Data plane, ICN Forwarding.\n\
    \   *Forwarding Strategy:*\n      A module of the ICN stateful forwarding (ICN\
    \ data) plane that\n      implements a decision on where/how to forward the incoming\n\
    \      Interest packet.  The forwarding strategy can take input from the\n   \
    \   Forwarding Information Base (FIB), measured data-plane performance\n     \
    \ parameters, and/or use other mechanisms to make the decision.\n         Common\
    \ aliases include: Interest forwarding strategy.\n   *Upstream (forwarding):*\n\
    \      Forwarding packets in the direction of Interests (i.e., Interests\n   \
    \   are forwarded upstream): consumer, router, router, ..., producer.\n   *Downstream\
    \ (forwarding):*\n      Forwarding packets in the opposite direction of Interest\n\
    \      forwarding (i.e., Data and Interest Nacks are forwarded\n      downstream):\
    \ producer, router, ..., consumer(s).\n   *Interest Forwarding:*\n      A process\
    \ of forwarding Interest packets using the Names carried\n      in the Interests.\
    \  In case of stateful forwarding, this also\n      involves creating an entry\
    \ in the PIT.  The forwarding decision is\n      made by the Forwarding Strategy.\n\
    \   *Interest Aggregation:*\n      A process of combining multiple Interest packets\
    \ with the same\n      Name and additional restrictions for the same Data into\
    \ a single\n      PIT entry.\n         Common aliases include: Interest collapsing.\n\
    \   *Data Forwarding:*\n      A process of forwarding the incoming Data packet\
    \ to the\n      interface(s) recorded in the corresponding PIT entry (entries)\
    \ and\n      removing the corresponding PIT entry (entries).\n   *Satisfying an\
    \ Interest:*\n      An overall process of returning content that satisfies the\n\
    \      constraints imposed by the Interest, most notably a match in the\n    \
    \  provided Name.\n   *Interest Match in FIB (longest prefix match):*\n      A\
    \ process of finding a FIB entry with the longest Name (in terms\n      of Name\
    \ components) that is a prefix of the specified Name.  See\n      Section 3.5\
    \ for terms related to name prefixes.\n   *Interest Match in PIT (exact match):*\n\
    \      A process of finding a PIT entry that stores the same Name as\n      specified\
    \ in the Interest (including Interest restrictions, if\n      any).\n   *Data\
    \ Match in PIT (all match):*\n      A process of finding (a set of) PIT entries\
    \ that can be satisfied\n      with the specified Data packet.\n   *Interest Match\
    \ in CS (any match):*\n      A process of finding an entry in a router's Content\
    \ Store that can\n      satisfy the specified Interest.\n   *Pending Interest\
    \ Table (PIT):*\n      A database that records received and not-yet-satisfied\
    \ Interests\n      with the interfaces from where they were received.  The PIT\
    \ can\n      also store interfaces to where Interests were forwarded, and\n  \
    \    information to assess data-plane performance.  Interests for the\n      same\
    \ Data are aggregated into a single PIT entry.\n   *Forwarding Information Base\
    \ (FIB):*\n      A database that contains a set of prefixes, each prefix associated\n\
    \      with one or more faces that can be used to retrieve Data packets\n    \
    \  with Names under the corresponding prefix.  The list of faces for\n      each\
    \ prefix can be ranked, and each face may be associated with\n      additional\
    \ information to facilitate forwarding-strategy\n      decisions.\n   *Content\
    \ Store (CS):*\n      A database in an ICN router that provides caching.\n   *In-Network\
    \ Storage:*\n      An optional process of storing a Data packet within the network\n\
    \      (opportunistic caches, dedicated on/off path caches, and managed\n    \
    \  in-network storage systems), so it can satisfy an incoming\n      Interest\
    \ for this Data packet.  The in-network storages can\n      optionally advertise\
    \ the stored Data packets in the routing plane.\n   *Opportunistic Caching:*\n\
    \      A process of temporarily storing a forwarded Data packet in the\n     \
    \ router's memory (RAM or disk), so it can be used to satisfy future\n      Interests\
    \ for the same Data, if any.\n         Common aliases include: on-path in-network\
    \ caching.\n   *Managed Caching:*\n      The process of achieving the temporary,\
    \ permanent, or scheduled\n      storage of a selected (set of) Data packet(s).\n\
    \         Common aliases include: off-path in-network storage.\n   *Managed In-Network\
    \ Storage:*\n      An entity acting as an ICN publisher that implements managed\n\
    \      caching.\n         Common aliases include: repository, repo.\n   *ICN Routing\
    \ Plane:*\n      An ICN protocol or a set of ICN protocols to exchange information\n\
    \      about Name space reachability.\n   *ICN Routing Information Base (RIB):*\n\
    \      A database that contains a set of prefix-face mappings that are\n     \
    \ produced by running one or multiple routing protocols.  The RIB is\n      used\
    \ to populate the FIB.\n"
- title: 3.4.  Terms Related to Packet Types
  contents:
  - "3.4.  Terms Related to Packet Types\n   *Interest Packet:*\n      A network-level\
    \ packet that expresses the request for a Data\n      packet using either an exact\
    \ name or a name prefix.  An Interest\n      packet may optionally carry a set\
    \ of additional restrictions\n      (e.g., Interest selectors).  An Interest may\
    \ be associated with\n      additional information to facilitate forwarding and\
    \ can include\n      Interest lifetime, hop limit, forwarding hints, labels, etc.\
    \  In\n      different ICN designs, the set of additional associated\n      information\
    \ may vary.\n         Common aliases include: Interest, Interest message, information\n\
    \         request.\n   *Interest Nack:*\n      A packet that contains the Interest\
    \ packet and optional\n      annotation, which is sent by the ICN router to the\
    \ interface(s)\n      the Interest was received from.  An Interest Nack is used\
    \ to\n      inform downstream ICN nodes about the inability to forward the\n \
    \     included Interest packet.  The annotation can describe the reason.\n   \
    \      Common aliases include: network NACK, Interest return.\n   *Data Packet:*\n\
    \      A network-level packet that carries payload, uniquely identified\n    \
    \  by a name, that is directly secured through cryptographic\n      signature\
    \ mechanisms.\n         Common aliases include: data, data object, content object,\n\
    \         content object packet, data message, named data object, named\n    \
    \     data.\n   *Link:*\n      A type of Data packet whose body contains the Name\
    \ of another Data\n      packet.  This inner Name is often a Full Name, i.e.,\
    \ it specifies\n      the Packet ID of the corresponding Data packet, but this\
    \ is not a\n      requirement.\n         Common aliases include: pointer.\n  \
    \ *Manifest:*\n      A type of Data packet that contains Full Name Links to one\
    \ or more\n      Data Packets.  Manifests group collections of related Data packets\n\
    \      under a single Name.  Manifests allow both large Data objects to\n    \
    \  be conveniently split into individual Content Objects under one\n      name,\
    \ and to represent sets of related Content Objects as a form\n      of \"directory\"\
    .  Manifests have the additional benefit of\n      amortizing the signature verification\
    \ cost for each Data packet\n      referenced by the inner Links.  Manifests typically\
    \ contain\n      additional metadata, e.g., the size (in bytes) of each linked\
    \ Data\n      packet and the cryptographic hash digest of all Data contained in\n\
    \      the linked Data packets.\n"
- title: 3.5.  Terms Related to Name Types
  contents:
  - "3.5.  Terms Related to Name Types\n   *Name:*\n      A Data packet identifier.\
    \  An ICN name is hierarchical (a sequence\n      of name components) and usually\
    \ is semantically meaningful, making\n      it expressive, flexible, and application-specific\
    \ (akin to an HTTP\n      URL).  A Name may encode information about application\
    \ context,\n      semantics, locations (topological, geographical, hyperbolic,\n\
    \      etc.), a service name, etc.\n         Common aliases include: data name,\
    \ interest name, content name.\n   *Name component:*\n      A sequence of bytes\
    \ and optionally a numeric type representing a\n      single label in the hierarchical\
    \ structured name.\n         Common aliases include: name segment (as in CCNx).\n\
    \   *Packet ID:*\n      A unique cryptographic identifier for a Data packet. \
    \ Typically,\n      this is a cryptographic hash digest of a Data packet (such\
    \ as\n      SHA256 [RFC6234]), including its name, payload, meta information,\n\
    \      and signature.\n         Common aliases include: implicit digest.\n   *Selector:*\n\
    \      A mechanism (condition) to select an individual Data packet from a\n  \
    \    collection of Data packets that match a given Interest that\n      requests\
    \ data using a prefix or exact Name.\n         Common aliases include: interest\
    \ selector, restrictor, interest\n         restrictor.\n   *Nonce:*\n      A field\
    \ of an Interest packet that transiently names an Interest\n      instance (instance\
    \ of Interest for a given name).  Note: the\n      specifications defining nonces\
    \ in NDN do not necessarily satisfy\n      all the properties of nonces as discussed\
    \ in [RFC4949].\n   *Exact Name:*\n      A Name that is encoded inside a Data\
    \ packet and that typically\n      uniquely identifies this Data packet.\n   *Full\
    \ Name:*\n      An exact Name with the Packet ID of the corresponding Data packet.\n\
    \   *Prefix Name:*\n      A Name that includes a partial sequence of Name components\n\
    \      (starting from the first one) of a Name encoded inside a Data\n      packet.\n\
    \         Common aliases include: prefix.\n"
- title: 3.6.  Terms Related to Name Usage
  contents:
  - "3.6.  Terms Related to Name Usage\n   *Naming conventions:*\n      A convention,\
    \ agreement, or specification for the Data packet\n      naming. a Naming convention\
    \ structures a namespace.\n         Common aliases include: Naming scheme, ICN\
    \ naming scheme,\n         namespace convention.\n   *Hierarchically structured\
    \ naming:*\n      The naming scheme that assigns and interprets a Name as a sequence\n\
    \      of labels (Name components) with hierarchical structure without an\n  \
    \    assumption of a single administrative root.  A structure provides\n     \
    \ useful context information for the Name.\n         Common aliases include: hierarchical\
    \ naming, structured naming.\n   *Flat naming:*\n      The naming scheme that\
    \ assigns and interprets a Name as a single\n      label (Name component) without\
    \ any internal structure.  This can\n      be considered a special (or degenerate)\
    \ case of structured names.\n   *Segmentation:*\n      A process of splitting\
    \ large application content into a set of\n      uniquely named Data packets.\
    \  When using hierarchically structured\n      names, each created Data packet\
    \ has a common prefix and an\n      additional component representing the segment\
    \ (chunk) number.\n         Common aliases include: chunking.\n   *Versioning:*\n\
    \      A process of assigning a unique Name to the revision of the\n      content\
    \ carried in the Data packet.  When using a hierarchically\n      structured Name,\
    \ the version of the Data packet can be carried in\n      a dedicated Name component\
    \ (e.g., prefix identifies data, unique\n      version component identifies the\
    \ revision of the data).\n   *Fragmentation:*\n      A process of splitting PDUs\
    \ into Frames so that they can be\n      transmitted over a Layer 2 interface\
    \ with a smaller MTU size.\n"
- title: 3.7.  Terms Related to Data-Centric Security
  contents:
  - "3.7.  Terms Related to Data-Centric Security\n   *Data-Centric Security:*\n \
    \     A security property associated with the Data packet, including\n      data\
    \ (Data-Centric) integrity, authenticity, and optionally\n      confidentiality.\
    \  These security properties stay with the Data\n      packet regardless of where\
    \ it is stored and how it is retrieved.\n         Common aliases include: directly\
    \ securing Data packet.\n   *Data Integrity*\n      A cryptographic mechanism\
    \ to ensure the consistency of the Data\n      packet bits.  The Data integrity\
    \ property validates that the Data\n      packet content has not been corrupted\
    \ during transmission, e.g.,\n      over lossy or otherwise unreliable paths,\
    \ or been subject to\n      deliberate modification.\n   *Data Authenticity*\n\
    \      A cryptographic mechanism to ensure trustworthiness of a Data\n      packet\
    \ based on a selected (e.g., by a consumer/producer) trust\n      model.  Typically,\
    \ data authenticity is assured through the use of\n      asymmetric cryptographic\
    \ signatures (e.g., RSA, ECDSA) but can\n      also be realized using symmetric\
    \ signatures (e.g., Hashed Message\n      Authentication Code (HMAC)) within trusted\
    \ domains.\n   *Data Confidentiality*\n      A cryptographic mechanism to ensure\
    \ secrecy of a Data packet.\n      Data confidentiality includes separate mechanisms:\
    \ Content\n      confidentiality and Name confidentiality.\n   *Content Confidentiality*\n\
    \      A cryptographic mechanism to prevent an unauthorized party to get\n   \
    \   access to the plain-text payload of a Data packet.  Can be\n      realized\
    \ through encryption (symmetric, asymmetric, hybrid) and\n      proper distribution\
    \ of the decryption keys to authorized parties.\n   *Name Confidentiality*\n \
    \     A cryptographic mechanism to prevent an observer of Interest-Data\n    \
    \  exchanges (e.g., intermediate router) from gaining detailed meta\n      information\
    \ about the Data packet.  This mechanism can be realized\n      using encryption\
    \ (same as content confidentiality) or obfuscation\n      mechanisms.\n"
- title: 4.  Semantics and Usage
  contents:
  - "4.  Semantics and Usage\n   The terminology described above is the manifestation\
    \ of intended\n   semantics of NDN and CCNx operations (What do we expect the\
    \ network\n   to do?).  In this section, we summarize the most commonly proposed\n\
    \   use cases and interpretations.\n"
- title: 4.1.  Data Transfer
  contents:
  - "4.1.  Data Transfer\n   The networking view of NDN and CCNx is that the request/reply\n\
    \   protocol implements a basic, unreliable data transfer service for\n   single,\
    \ named packets.\n"
- title: 4.2.  Data Transport
  contents:
  - "4.2.  Data Transport\n   Data transfer can be turned into a data transport service\
    \ for\n   application-level objects by additional logic.  This transport logic\n\
    \   must understand and construct the series of names needed to\n   reassemble\
    \ the segmented object.  Various flavors of transport can be\n   envisaged (reliable,\
    \ streaming, mailbox, etc.).\n"
- title: 4.3.  Lookup Service
  contents:
  - "4.3.  Lookup Service\n   In a more distributed systems view of the basic request/reply\n\
    \   protocol, NDN and CCNx provide a distributed lookup service: given a\n   key\
    \ value (=name), the service will return the corresponding value.\n"
- title: 4.4.  Database Access
  contents:
  - "4.4.  Database Access\n   A lookup service can be turned into a database access\
    \ protocol by\n   using the namespace structure to specify names as access keys\
    \ into a\n   database.  Therefore, a name prefix stands for a collection or table\n\
    \   of a database, while the rest of the name specifies the query\n   expression\
    \ to be executed.\n"
- title: 4.5.  Remote Procedure Call
  contents:
  - "4.5.  Remote Procedure Call\n   The names as defined in this document for Interests\
    \ and Data can\n   refer to Remote Procedure call functions, their input arguments,\
    \ and\n   their results.  For a comprehensive view of how to construct RPC or\n\
    \   other remote invocation systems, see the Association for Computing\n   Machinery\
    \ (ACM) ICN paper on [RICE].  These capabilities can be\n   further extended into\
    \ a full distributed computing infrastructure\n   such as that proposed in the\
    \ ACM ICN paper [CFN].\n"
- title: 4.6.  Publish/Subscribe
  contents:
  - "4.6.  Publish/Subscribe\n   The names as defined in this document for Interests\
    \ and Data can\n   refer to data collections to be subscribed and individual data\n\
    \   objects to be published in a Publish-Subscribe application\n   architecture.\
    \  For a fully worked example of how to construct such an\n   ICN-based system,\
    \ see the ACM ICN paper [LESSONS-LEARNED].\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This document has no IANA actions.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   While the terms defined in this specification\
    \ do not in and of\n   themselves present new security considerations, the architectures\n\
    \   that utilize the terms most certainly do.  Readers should look at\n   those\
    \ specifications (e.g., [RFC8569] and [NDN]) where various\n   security considerations\
    \ are addressed in detail.\n   Some of the terms in this document use the words\
    \ \"trust\",\n   \"trustworthy\", or \"trust model\".  We intend that these have\
    \ their\n   colloquial meanings; however, much work on trust, and specifically\
    \ on\n   trust schemas for ICN architectures, has been published in the last\n\
    \   few years.  For example, it is useful to look at [SCHEMATIZING-TRUST]\n  \
    \ for more information on the approaches taken to formalize notions of\n   trust\
    \ for current NDN and CCNx systems.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [CFN]      Krol, M., Mastorakis, S., Kutscher,\
    \ D., and D. Oran,\n              \"Compute First Networking: Distributed Computing\
    \ meets\n              ICN\", ACM ICN, DOI 10.1145/3357150.3357395, September\n\
    \              2019, <https://dl.acm.org/citation.cfm?id=3357395>.\n   [LESSONS-LEARNED]\n\
    \              Nichols, K., \"Lessons Learned Building a Secure Network\n    \
    \          Measurement Framework using Basic NDN\", ACM ICN,\n              DOI\
    \ 10.1145/3357150.3357397, September 2019,\n              <https://dl.acm.org/citation.cfm?id=3357397>.\n\
    \   [MOBILITY-FIRST]\n              Raychaudhuri, D., Nagaraja, K., and A. Venkataramani,\n\
    \              \"MobilityFirst: a robust and trustworthy mobility-centric\n  \
    \            architecture for the future internet\", ACM SIGMOBILE,\n        \
    \      Volume 16, Issue 3, DOI 10.1145/2412096.2412098, July\n              2012,\
    \ <https://dl.acm.org/citation.cfm?id=2412098>.\n   [NDNTLV]   Named Data Networking,\
    \ \"NDN Packet Format Specification\",\n              <https://named-data.net/doc/ndn-tlv/>.\n\
    \   [NETINF]   Dannewitz, C., Kutscher, D., Ohlman, B., Farrell, S.,\n       \
    \       Ahlgren, B., and K. Holger, \"Network of Information\n              (NetInf)\
    \ - An information-centric networking\n              architecture\", Computer\
    \ Communications, Volume 36, Issue\n              7, DOI 10.1016/j.comcom.2013.01.009,\
    \ April 2013,\n              <https://dl.acm.org/citation.cfm?id=2459643>.\n \
    \  [PSIRP]    Trossen, D., Tuononen, J., Xylomenos, G., Sarela, M.,\n        \
    \      Zahemszky, A., Nikander, P., and T. Rinta-aho, \"From\n              Design\
    \ for Tussle to Tussle Networking: PSIRP Vision and\n              Use Cases\"\
    , May 2008,\n              <http://www.psirp.org/files/Deliverables/PSIRP-\n \
    \             TR08-0001_Vision.pdf>.\n   [RICE]     Krol, M., Habak, K., Kutscher,\
    \ D., Oran, D., and I.\n              Psaras, \"RICE: remote method invocation\
    \ in ICN\", ACM ICN,\n              DOI 10.1145/3267955.3267956, September 2018,\n\
    \              <https://dx.doi.org/10.1145/3267955.3267956>.\n   [SCHEMATIZING-TRUST]\n\
    \              Yu, Y., Afanasyev, A., Clark, D., Claffy, K. C., Jacobson,\n  \
    \            V., and L. Zhang, \"Schematizing Trust in Named Data\n          \
    \    Networking\", ACM ICN, DOI 0.1145/2810156.2810170,\n              September\
    \ 2015,\n              <https://dx.doi.org/10.1145/2810156.2810170>.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [NDN]      Named Data Networking, \"Named Data\
    \ Networking: Executive\n              Summary\", September 2010,\n          \
    \    <https://named-data.net/project/execsummary/>.\n   [RFC4838]  Cerf, V., Burleigh,\
    \ S., Hooke, A., Torgerson, L., Durst,\n              R., Scott, K., Fall, K.,\
    \ and H. Weiss, \"Delay-Tolerant\n              Networking Architecture\", RFC\
    \ 4838, DOI 10.17487/RFC4838,\n              April 2007, <https://www.rfc-editor.org/info/rfc4838>.\n\
    \   [RFC4949]  Shirey, R., \"Internet Security Glossary, Version 2\",\n      \
    \        FYI 36, RFC 4949, DOI 10.17487/RFC4949, August 2007,\n              <https://www.rfc-editor.org/info/rfc4949>.\n\
    \   [RFC6234]  Eastlake 3rd, D. and T. Hansen, \"US Secure Hash Algorithms\n \
    \             (SHA and SHA-based HMAC and HKDF)\", RFC 6234,\n              DOI\
    \ 10.17487/RFC6234, May 2011,\n              <https://www.rfc-editor.org/info/rfc6234>.\n\
    \   [RFC8569]  Mosko, M., Solis, I., and C. Wood, \"Content-Centric\n        \
    \      Networking (CCNx) Semantics\", RFC 8569,\n              DOI 10.17487/RFC8569,\
    \ July 2019,\n              <https://www.rfc-editor.org/info/rfc8569>.\n   [RFC8609]\
    \  Mosko, M., Solis, I., and C. Wood, \"Content-Centric\n              Networking\
    \ (CCNx) Messages in TLV Format\", RFC 8609,\n              DOI 10.17487/RFC8609,\
    \ July 2019,\n              <https://www.rfc-editor.org/info/rfc8609>.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   Marc Mosko provided much guidance and helpful precision in\
    \ getting\n   these terms carefully formed and the definitions precise.  Marie-Jose\n\
    \   Montpetit did a thorough IRSG review, which helped a lot to improve\n   the\
    \ text.  Further comments during the IRSG Poll from Stephen\n   Farrell, Ari Keraenen,\
    \ Spencer Dawkins, Carsten Bormann, and Brian\n   Trammell further improved the\
    \ document.  Additional helpful comments\n   were received as part of the IESG\
    \ conflict review from Mirja\n   Kuehlewind and Benjamin Kaduk.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Bastiaan Wissingh\n   TNO\n   Email: bastiaan.wissingh@tno.nl\n\
    \   Christopher A. Wood\n   University of California Irvine\n   Email: caw@heapingbits.net\n\
    \   Alex Afanasyev\n   Florida International University\n   Email: aa@cs.fiu.edu\n\
    \   Lixia Zhang\n   UCLA\n   Email: lixia@cs.ucla.edu\n   David Oran\n   Network\
    \ Systems Research & Design\n   Email: daveoran@orandom.net\n   Christian Tschudin\n"
