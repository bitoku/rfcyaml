Abstract This memo defines a set of extensions which instrument RADIUS accounting server functions.
These extensions represent a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community.
Using these extensions IP based management stations can manage RADIUS accounting servers.
This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community.
In particular, it describes managed objects used for managing RADIUS accounting servers.
RADIUS accounting servers are today widely deployed by dialup Internet Service Providers, in order to provide accounting services.
As a result, the effective management of RADIUS accounting servers is of considerable importance.
The SNMP Management Framework presently consists of five major components:   An overall architecture, described in RFC 2571 [1].
Mechanisms for describing and naming objects and events for the purpose of management.
The first version of this Structure of Management Information (SMI) is called SMIv1 and described in STD 15, RFC 1155 [2], STD 16, RFC 1212 [3] and RFC 1215 [4].
The second version, called SMIv2, is described in STD 58, RFC 2578 [5], RFC 2579 [6] and RFC 2580 [7].
Message protocols for transferring management information.
The first version of the SNMP message protocol is called SNMPv1 and described in STD 15, RFC 1157 [8].
A second version of the SNMP message protocol, which is not an Internet standards track protocol, is called SNMPv2c and described in RFC 1901 [9] and RFC 1906 [10].
The third version of the message protocol is called SNMPv3 and described in RFC 1906 [10], RFC 2572 [11] and RFC 2574 [12].
Protocol operations for accessing management information.
The first set of protocol operations and associated PDU formats is described in STD 15, RFC 1157 [8].
A second set of protocol operations and associated PDU formats is described in RFC 1905 [13].
A set of fundamental applications described in RFC 2573 [14] and the view based access control mechanism described in RFC 2575 [15].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
Objects in the MIB are defined using the mechanisms defined in the SMI.
This memo specifies a MIB module that is compliant to the SMIv2.
A MIB conforming to the SMIv1 can be produced through the appropriate translations.
The resulting translated MIB must be semantically equivalent, except where objects or events are omitted because no translation is possible (use of Counter64).
Some machine readable information in SMIv2 will be converted into textual descriptions in SMIv1 during the translation process.
However, this loss of machine readable information is not considered to change the semantics of the MIB.
The RADIUS accounting protocol, described in [16], distinguishes between the client function and the server function.
In RADIUS accounting, clients send Accounting Requests, and servers reply with Accounting Responses.
Typically NAS devices implement the client function, and thus would be expected to implement the RADIUS accounting client MIB, while RADIUS accounting servers implement the server function, and thus would be expected to implement the RADIUS accounting server MIB.
However, it is possible for a RADIUS accounting entity to perform both client and server functions.
For example, a RADIUS proxy may act as a server to one or more RADIUS accounting clients, while simultaneously acting as an accounting client to one or more accounting servers.
In such situations, it is expected that RADIUS entities combining client and server functionality will support both the client and server MIBs.
This MIB module contains thirteen scalars as well as a single table: (1)  the RADIUS Accounting Client Table contains one row for each RADIUS accounting client that the server shares a secret with.
Each entry in the RADIUS Accounting Client Table includes eleven columns presenting a view of the activity of the RADIUS accounting server.
IMPORTS MODULE IDENTITY, OBJECT TYPE, OBJECT IDENTITY, Counter32, Integer32, IpAddress, TimeTicks, mib 2
OBJECT GROUP  FROM SNMPv2 CONF; radiusAccServMIB MODULE IDENTITY LAST UPDATED "9906110000Z"   11 Jun 1999 ORGANIZATION "IETF RADIUS Working Group.
CONTACT INFO " Bernard Aboba Microsoft
One Microsoft Way Redmond, WA  98052 US Phone:  1 425 936 6605 EMail:
The MIB module for entities implementing the server side of the Remote Access Dialin User Service (RADIUS) accounting protocol."
1 } radiusMIB OBJECT IDENTITY STATUS  current DESCRIPTION
The OID assigned to RADIUS MIB work by the IANA."
{ radiusAccServMIBObjects 1 } radiusAccServIdent OBJECT TYPE SYNTAX
radiusAccServ 1} radiusAccServUpTime OBJECT TYPE SYNTAX
"If the server has a persistent state (e.g., a process), this value will be the time elapsed (in hundredths of a second) since the server process was started.
For software without persistent state, this value will be zero."
"If the server has a persistent state (e.g., a process) and supports a `reset' operation (e.g., can be told to re read configuration files), this value will be the time elapsed (in hundredths of a second) since the server was `reset.'
For software that does not have persistence or does not support a `reset' operation, this value will be zero."
OBJECT TYPE SYNTAX INTEGER { other(1), reset(2), initializing(3), running(4)}
MAX ACCESS  read write STATUS
current DESCRIPTION "Status/action object to reinitialize any persistent server state.
When set to reset(2), any persistent server state (such as a process) is reinitialized as if the server had just been started.
This value will never be returned by a read operation.
When read, one of the following values will be returned:
other(1) server in some unknown state; initializing(3) server (re)initializing; running(4) server currently running."
New Stats proposed by Dale E. Reed Jr (daler@iea.com)
MAX ACCESS read only STATUS current DESCRIPTION
MAX ACCESS read only STATUS current DESCRIPTION
"The number of duplicate RADIUS Accounting Request packets received."
MAX ACCESS read only STATUS current DESCRIPTION
"The number of RADIUS Accounting Response packets sent."
MAX ACCESS read only STATUS current DESCRIPTION
"The number of malformed RADIUS Accounting Request packets received.
Bad authenticators or unknown types are not included as malformed Access Requests."
MAX ACCESS read only STATUS current DESCRIPTION
MAX ACCESS read only STATUS current DESCRIPTION
"The number of incoming packets silently discarded for a reason other than malformed, bad authenticators, or unknown types."
MAX ACCESS read only STATUS current DESCRIPTION
MAX ACCESS read only STATUS current DESCRIPTION
"The number of RADIUS packets of unknowntype which were received.
MAX ACCESS not accessible STATUS
current DESCRIPTION "The (conceptual) table listing the RADIUS accounting clients with which the server shares a secret."
MAX ACCESS not accessible STATUS
An entry (conceptual row) representing a RADIUS accounting client with which the server shares a secret."
} radiusAccClientIndex OBJECT TYPE SYNTAX
MAX ACCESS not accessible STATUS
The NAS IP Address of the RADIUS accounting client referred to in this table entry."
The NAS Identifier of the RADIUS accounting client referred to in this table entry.
This is not necessarily the same as sysName in MIB II."
MAX ACCESS read only STATUS current DESCRIPTION
MAX ACCESS read only STATUS current DESCRIPTION
MAX ACCESS read only STATUS current DESCRIPTION
MAX ACCESS read only STATUS current DESCRIPTION
"The number of RADIUS Accounting Request packets which contained invalid  authenticators received from this client."
"The number of malformed RADIUS Accounting Request packets which were received from this client.
Bad authenticators and unknown types are not included as malformed Accounting Requests."
MAX ACCESS read only STATUS current DESCRIPTION
MAX ACCESS read only STATUS current DESCRIPTION
MODULE COMPLIANCE STATUS  current DESCRIPTION
"The compliance statement for accounting servers implementing the RADIUS Accounting Server MIB."
"The only SETable value is 'reset' (2)."
OBJECT GROUP OBJECTS {radiusAccServIdent, radiusAccServUpTime, radiusAccServResetTime, radiusAccServConfigReset, radiusAccServTotalRequests, radiusAccServTotalInvalidRequests, radiusAccServTotalDupRequests, radiusAccServTotalResponses, radiusAccServTotalMalformedRequests, radiusAccServTotalBadAuthenticators, radiusAccServTotalPacketsDropped, radiusAccServTotalNoRecords, radiusAccServTotalUnknownTypes, radiusAccClientAddress, radiusAccClientID, radiusAccServPacketsDropped, radiusAccServRequests, radiusAccServDupRequests, radiusAccServResponses, radiusAccServBadAuthenticators, radiusAccServMalformedRequests
, radiusAccServNoRecords, radiusAccServUnknownTypes } STATUS  current DESCRIPTION
There are management objects (radiusAccServConfigReset) defined in this MIB that have a MAX ACCESS clause of read write and/or read  create.
Such objects may be considered sensitive or vulnerable in some network environments.
The support for SET operations in a non  secure environment without proper protection can have a negative effect on network operations.
There are a number of managed objects in this MIB that may contain sensitive information.
This can be used to determine the address of the RADIUS accounting client with which the server is communicating.
This information could be useful in impersonating the client.
This can be used to determine the client ID for the accounting client with which the server is communicating.
This information could be useful in impersonating the client.
It is thus important to control even GET access to these objects and possibly to even encrypt the values of these object when sending them over the network via SNMP.
Not all versions of SNMP provide features for such a secure environment.
by itself is not a secure environment.
Even if the network itself is secure (for example by using IPSec), there is no control as to who on the secure network is allowed to access and
the objects in this MIB.
It is recommended that the implementers consider the security features as provided by the SNMPv3 framework.
Specifically, the use of the User based Security Model RFC 2574 [12] and the View based Access Control Model RFC 2575
Using these security features, customer/users can give access to the objects only to those principals (users) that have legitimate rights to GET or SET (change/create/delete) them.
