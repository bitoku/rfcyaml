- title: __initial_text__
  contents:
  - '     Procedures for Renumbering an IPv6 Network without a Flag Day

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes a procedure that can be used to renumber\
    \ a\n   network from one prefix to another.  It uses IPv6's intrinsic ability\n\
    \   to assign multiple addresses to a network interface to provide\n   continuity\
    \ of network service through a \"make-before-break\"\n   transition, as well as\
    \ addresses naming and configuration management\n   issues.  It also uses other\
    \ IPv6 features to minimize the effort and\n   time required to complete the transition\
    \ from the old prefix to the\n   new prefix.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \      1.1. Summary of the Renumbering Procedure .......................3\n  \
    \    1.2. Terminology ................................................4\n    \
    \  1.3. Summary of What Must Be Changed ............................4\n      1.4.\
    \ Multihoming Issues .........................................5\n   2. Detailed\
    \ Review of Procedure ....................................5\n      2.1. Initial\
    \ Condition: Stable Using the Old Prefix .............6\n      2.2. Preparation\
    \ for the Renumbering Process ....................6\n           2.2.1. Domain\
    \ Name Service .................................7\n           2.2.2. Mechanisms\
    \ for Address Assignment to Interfaces .....7\n      2.3. Configuring Network\
    \ Elements for the New Prefix ............8\n      2.4. Adding New Host Addresses\
    \ ..................................9\n      2.5. Stable Use of Either Prefix\
    \ ...............................10\n      2.6. Transition from Use of the Old\
    \ Prefix to the New Prefix ...10\n           2.6.1. Transition of DNS Service\
    \ to the New Prefix ........10\n           2.6.2. Transition to Use of New Addresses\
    \ .................10\n      2.7. Removing the Old Prefix ...................................11\n\
    \      2.8. Final Condition: Stable Using the New Prefix ..............11\n  \
    \ 3. How to Avoid Shooting Yourself in the Foot .....................12\n    \
    \  3.1. Applications Affected by Renumbering ......................12\n      3.2.\
    \ Renumbering Switch and Router Interfaces ..................12\n      3.3. Ingress\
    \ Filtering .........................................13\n      3.4. Link Flaps\
    \ in BGP Routing .................................13\n   4. Call to Action for\
    \ the IETF ....................................14\n      4.1. Dynamic Updates\
    \ to DNS Across Administrative Domains ......14\n      4.2. Management of the\
    \ Reverse Zone ............................14\n   5. Security Considerations ........................................14\n\
    \   6. Acknowledgements ...............................................16\n  \
    \ 7. References .....................................................17\n    \
    \  7.1. Normative References ......................................17\n      7.2.\
    \ Informative References ....................................17\n   Appendix A.\
    \  Managing Latency in the DNS ..........................20\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Prussian military theorist Carl von Clausewitz [Clausewitz]\n\
    \   wrote, \"Everything is very simple in war, but the simplest thing is\n   difficult.\
    \  These difficulties accumulate and produce a friction,\n   which no man can\
    \ imagine exactly who has not seen war....  So in war,\n   through the influence\
    \ of an 'infinity of petty circumstances' which\n   cannot properly be described\
    \ on paper, things disappoint us and we\n   fall short of the mark\".  Operating\
    \ a network is aptly compared to\n   conducting a war.  The difference is that\
    \ the opponent has the futile\n   expectation that homo ignoramus will behave\
    \ intelligently.\n   A \"flag day\" is a procedure in which the network, or a\
    \ part of it, is\n   changed during a planned outage, or suddenly, causing an\
    \ outage while\n   the network recovers.  Avoiding outages requires the network\
    \ to be\n   modified using what in mobility might be called a \"make before break\"\
    \n   procedure: the network is enabled to use a new prefix while the old\n   one\
    \ is still operational, operation is switched to that prefix, and\n   then the\
    \ old one is taken down.\n   This document addresses the key procedural issues\
    \ in renumbering an\n   IPv6 [RFC2460] network without a \"flag day\".  The procedure\
    \ is\n   straightforward to describe, but operationally can be difficult to\n\
    \   automate or execute due to issues of statically configured network\n   state,\
    \ which one might aptly describe as \"an infinity of petty\n   circumstances\"\
    .  As a result, in certain areas, this procedure is\n   necessarily incomplete,\
    \ as network environments vary widely and no\n   one solution fits all.  It points\
    \ out a few of many areas where there\n   are multiple approaches.  This document\
    \ updates [RFC2072].  This\n   document also contains recommendations for application\
    \ design and\n   network management, which, if taken seriously, may avoid or minimize\n\
    \   the impact of the issues.\n"
- title: 1.1.  Summary of the Renumbering Procedure
  contents:
  - "1.1.  Summary of the Renumbering Procedure\n   By \"renumbering a network\",\
    \ we mean replacing the use of an existing\n   (or \"old\") prefix throughout\
    \ a network with a new prefix.  Usually,\n   both prefixes will be the same length.\
    \  The procedures described in\n   this document are, for the most part, equally\
    \ applicable if the two\n   prefixes are not the same length.  During renumbering,\
    \ sub-prefixes\n   (or \"link prefixes\") from the old prefix, which have been\
    \ assigned to\n   links throughout the network, will be replaced by link prefixes\
    \ from\n   the new prefix.  Interfaces on systems throughout the network will\
    \ be\n   configured with IPv6 addresses from the link prefixes of the new\n  \
    \ prefix, and any addresses from the old prefix in services like DNS\n   [RFC1034][RFC1035]\
    \ or configured into switches and routers and\n   applications will be replaced\
    \ by the appropriate addresses from the\n   new prefix.\n   The renumbering procedure\
    \ described in this document can be applied\n   to part of a network as well as\
    \ to an organization's entire network.\n   In the case of a large organization,\
    \ it may be advantageous to treat\n   the network as a collection of smaller networks.\
    \  Renumbering each of\n   the smaller networks separately will make the process\
    \ more\n   manageable.  The process described in this document is generally\n\
    \   applicable to any network, whether it is an entire organization\n   network\
    \ or part of a larger network.\n"
- title: 1.2.  Terminology
  contents:
  - "1.2.  Terminology\n   DDNS:  Dynamic DNS [RFC2136][RFC3007] updates can be secured\
    \ through\n      the use of SIG(0) [RFC4033][RFC4034][RFC4035][RFC2931] and TSIG\n\
    \      [RFC2845].\n   DHCP prefix delegation: An extension to DHCP [RFC3315] to\
    \ automate\n      the assignment of a prefix, for example, from an ISP to a customer\n\
    \      [RFC3633].\n   flag day:  A transition that involves a planned service\
    \ outage.\n   ingress/egress filters: Filters applied to a router interface\n\
    \      connected to an external organization, such as an ISP, to exclude\n   \
    \   traffic with inappropriate IPv6 addresses.\n   link prefix: A prefix, usually\
    \ a /64 [RFC3177], assigned to a link.\n   SLAC:  StateLess Address AutoConfiguration\
    \ [RFC2462].\n"
- title: 1.3.  Summary of What Must Be Changed
  contents:
  - "1.3.  Summary of What Must Be Changed\n   Addresses from the old prefix that\
    \ are affected by renumbering will\n   appear in a wide variety of places in the\
    \ components in the\n   renumbered network.  The following list gives some of\
    \ the places that\n   may include prefixes or addresses that are affected by renumbering,\n\
    \   and gives some guidance about how the work required during\n   renumbering\
    \ might be minimized:\n   o  Link prefixes assigned to links.  Each link in the\
    \ network must be\n      assigned a link prefix from the new prefix.\n   o  IPv6\
    \ addresses assigned to interfaces on switches and routers.\n      These addresses\
    \ are typically assigned manually, as part of\n      configuring switches and\
    \ routers.\n   o  Routing information propagated by switches and routers.\n  \
    \ o  Link prefixes advertised by switches and routers [RFC2461].\n   o  Ingress/egress\
    \ filters.\n   o  ACLs and other embedded addresses on switches and routers.\n\
    \   o  IPv6 addresses assigned to interfaces on hosts.  Use of StateLess\n   \
    \   Address Autoconfiguration (SLAC) [RFC2462] or DHCP [RFC3315] can\n      mitigate\
    \ the impact of renumbering the interfaces on hosts.\n   o  DNS entries.  New\
    \ AAAA and PTR records are added and old ones\n      removed in several phases\
    \ to reflect the change of prefix.\n      Caching times are adjusted accordingly\
    \ during these phases.\n   o  IPv6 addresses and other configuration information\
    \ provided by\n      DHCP.\n   o  IPv6 addresses embedded in configuration files,\
    \ applications, and\n      elsewhere.  Finding everything that must be updated\
    \ and automating\n      the process may require significant effort, which is discussed\
    \ in\n      more detail in Section 3.  This process must be tailored to the\n\
    \      needs of each network.\n"
- title: 1.4.  Multihoming Issues
  contents:
  - "1.4.  Multihoming Issues\n   In addition to the considerations presented, the\
    \ operational matters\n   of multihoming may need to be addressed.  Networks are\
    \ generally\n   renumbered for one of three reasons: the network itself is changing\n\
    \   its addressing policy and must renumber to implement the new policy\n   (for\
    \ example, a company has been acquired and is changing addresses\n   to those\
    \ used by its new owner), an upstream provider has changed its\n   prefixes and\
    \ its customers are forced to do so at the same time, or a\n   company is changing\
    \ providers and must perforce use addresses\n   assigned by the new provider.\
    \  The third case is common.\n   When a company changes providers, it is common\
    \ to institute an\n   overlap period, during which it is served by both providers.\
    \  By\n   definition, the company is multihomed during such a period.  Although\n\
    \   this document is not about multihoming per se, problems can arise as\n   a\
    \ result of ingress filtering policies applied by the upstream\n   provider or\
    \ one of its upstream providers, so the user of this\n   document also needs to\
    \ be cognizant of these issues.  This is\n   discussed in detail, and approaches\
    \ to dealing with it are described,\n   in [RFC2827] and [RFC3704].\n"
- title: 2.  Detailed Review of Procedure
  contents:
  - "2.  Detailed Review of Procedure\n   During the renumbering process, the network\
    \ transitions through eight\n   states.  In the initial state, the network uses\
    \ just the prefix that\n   is to be replaced during the renumbering process. \
    \ At the end of the\n   process, the old prefix has been entirely replaced by\
    \ the new prefix,\n   and the network is using just the new prefix.  To avoid\
    \ a flag day\n   transition, the new prefix is deployed first and the network\
    \ reaches\n   an intermediate state in which either prefix can be used.  In this\n\
    \   state, individual hosts can make the transition to using the new\n   prefix\
    \ as appropriate to avoid disruption of applications.  Once all\n   of the hosts\
    \ have made the transition to the new prefix, the network\n   is reconfigured\
    \ so that the old prefix is no longer used in the\n   network.\n   In this discussion,\
    \ we assume that an entire prefix is being replaced\n   with another entire prefix.\
    \  It may be that only part of a prefix is\n   being changed, or that more than\
    \ one prefix is being changed to a\n   single joined prefix.  In such cases, the\
    \ basic principles apply, but\n   will need to be modified to address the exact\
    \ situation.  This\n   procedure should be seen as a skeleton of a more detailed\
    \ procedure\n   that has been tailored to a specific environment.  Put simply,\
    \ season\n   to taste.\n"
- title: '2.1.  Initial Condition: Stable Using the Old Prefix'
  contents:
  - "2.1.  Initial Condition: Stable Using the Old Prefix\n   Initially, the network\
    \ is using an old prefix in routing, device\n   interface addresses, filtering,\
    \ firewalls, and other systems.  This\n   is a stable configuration.\n"
- title: 2.2.  Preparation for the Renumbering Process
  contents:
  - "2.2.  Preparation for the Renumbering Process\n   The first step is to obtain\
    \ the new prefix and new reverse zone from\n   the delegating authority.  These\
    \ delegations are performed using\n   established procedures, from either an internal\
    \ or external\n   delegating authority.\n   Before any devices are reconfigured\
    \ as a result of the renumbering\n   event, each link in the network must be assigned\
    \ a sub-prefix from\n   the new prefix.  While this assigned link prefix does\
    \ not explicitly\n   appear in the configuration of any specific switch, router,\
    \ or host,\n   the network administrator performing the renumbering procedure\
    \ must\n   make these link prefix assignments prior to beginning the procedure\n\
    \   to guide the configuration of switches and routers, assignment of\n   addresses\
    \ to interfaces, and modifications to network services such\n   as DNS and DHCP.\n\
    \   Prior to renumbering, various processes will need to be reconfigured\n   to\
    \ confirm bindings between names and addresses more frequently.  In\n   normal\
    \ operation, DNS name translations and DHCP bindings are often\n   given relatively\
    \ long lifetimes to limit server load.  In order to\n   reduce transition time\
    \ from old to new prefix, it may be necessary to\n   reduce the time to live (TTL)\
    \ associated with DNS records and\n   increase the frequency with which DHCP clients\
    \ contact the DHCP\n   server.  At the same time, a procedure must be developed\
    \ through\n   which other configuration parameters will be updated during the\n\
    \   transition period when both prefixes are available.\n"
- title: 2.2.1.  Domain Name Service
  contents:
  - "2.2.1.  Domain Name Service\n   During the renumbering process, the DNS database\
    \ must be updated to\n   add information about addresses assigned to interfaces\
    \ from the new\n   prefix and to remove addresses assigned to interfaces from\
    \ the old\n   prefix.  The changes to the DNS must be coordinated with the changes\n\
    \   to the addresses assigned to interfaces.\n   Changes to the information in\
    \ the DNS have to propagate from the\n   server at which the change was made to\
    \ the resolvers where the\n   information is used.  The speed of this propagation\
    \ is controlled by\n   the TTL for DNS records and the frequency of updates from\
    \ primary to\n   secondary servers.\n   The latency in propagating changes in\
    \ the DNS can be managed through\n   the TTL assigned to individual DNS records\
    \ and through the timing of\n   updates from primary to secondary servers.  Appendix\
    \ A gives an\n   analysis of the factors controlling the propagation delays in\
    \ the\n   DNS.\n   The suggestions for reducing the delay in the transition to\
    \ new IPv6\n   addresses applies when the DNS service can be given prior notice\n\
    \   about a renumbering event.  However, the DNS service for a host may\n   be\
    \ in a different administrative domain than the network to which the\n   host\
    \ is attached.  For example, a device from organization A that\n   roams to a\
    \ network belonging to organization B, but the device's DNS\n   A record is still\
    \ managed by organization A, where the DNS service\n   won't be given advance\
    \ notice of a renumbering event in organization\n   B.\n   One strategy for updating\
    \ the DNS is to allow each system to manage\n   its own DNS information through\
    \ Dynamic DNS (DDNS)\n   [RFC2136][RFC3007].  Authentication of these DDNS updates\
    \ is strongly\n   recommended and can be accomplished through TSIG and SIG(0).\
    \  Both\n   TSIG and SIG(0) require configuration and distribution of keys to\n\
    \   hosts and name servers in advance of the renumbering event.\n"
- title: 2.2.2.  Mechanisms for Address Assignment to Interfaces
  contents:
  - "2.2.2.  Mechanisms for Address Assignment to Interfaces\n   IPv6 addresses may\
    \ be assigned through SLAC, DHCP, and manual\n   processes.  If DHCP is used for\
    \ IPv6 address assignment, there may be\n   some delay in the assignment of IPv6\
    \ addresses from the new prefix\n   because hosts using DHCP only contact the\
    \ server periodically to\n   extend the lifetimes on assigned addresses.  This\
    \ delay can be\n   reduced in two ways:\n   o  Prior to the renumbering event,\
    \ the T1 parameter (which controls\n      the time at which a host using DHCP\
    \ contacts the server) may be\n      reduced.\n   o  The DHCP Reconfigure message\
    \ may also be sent from the server to\n      the hosts to trigger the hosts to\
    \ contact the server immediately.\n"
- title: 2.3.  Configuring Network Elements for the New Prefix
  contents:
  - "2.3.  Configuring Network Elements for the New Prefix\n   In this step, switches\
    \ and routers and services are prepared for the\n   new prefix but the new prefix\
    \ is not used for any datagram\n   forwarding.  Throughout this step, the new\
    \ prefix is added to the\n   network infrastructure in parallel with (and without\
    \ interfering\n   with) the old prefix.  For example, addresses assigned from\
    \ the new\n   prefix are configured in addition to any addresses from the old\n\
    \   prefix assigned to interfaces on the switches and routers.  Changes\n   to\
    \ the routing infrastructure for the new prefix are added in\n   parallel with\
    \ the old prefix so that forwarding for both prefixes\n   operates in parallel.\
    \  At the end of this step, the network is still\n   running on the old prefix\
    \ but is ready to begin using the new prefix.\n   The new prefix is added to the\
    \ routing infrastructure, firewall\n   filters, ingress/egress filters, and other\
    \ forwarding and filtering\n   functions.  Routes for the new link prefixes may\
    \ be injected by\n   routing protocols into the routing subsystem, but the router\n\
    \   advertisements should not cause hosts to perform SLAC on the new link\n  \
    \ prefixes; in particular the \"autonomous address-configuration\" flag\n   [RFC2461]\
    \ should not be set in the advertisements for the new link\n   prefixes.  The\
    \ reason hosts should not be forming addresses at this\n   point is that routing\
    \ to the new addresses may not yet be stable.\n   The details of this step will\
    \ depend on the specific architecture of\n   the network being renumbered and\
    \ the capabilities of the components\n   that make up the network infrastructure.\
    \  The effort required to\n   complete this step may be mitigated by the use of\
    \ DNS, DHCP prefix\n   delegation [RFC3633], and other automated configuration\
    \ tools.\n   While the new prefix is being added, it will of necessity not be\n\
    \   working everywhere in the network, and unless properly protected by\n   some\
    \ means such as ingress and egress access lists, the network may\n   be attacked\
    \ through the new prefix in those places where it is\n   operational.\n   Once\
    \ the new prefix has been added to the network infrastructure,\n   access-lists,\
    \ route-maps, and other network configuration options\n   that use IP addresses\
    \ should be checked to ensure that hosts and\n   services that use the new prefix\
    \ will behave as they did with the old\n   one.  Name services other than DNS\
    \ and other services that provide\n   information that will be affected by renumbering\
    \ must be updated in\n   such a way as to avoid responding with stale information.\
    \  There are\n   several useful approaches to identify and augment configurations:\n\
    \   o  Develop a mapping from each network and address derived from the\n    \
    \  old prefix to each network and address derived from the new\n      prefix.\
    \  Tools such as the UNIX \"sed\" or \"perl\" utilities are\n      useful to then\
    \ find and augment access-lists, route-maps, and the\n      like.\n   o  A similar\
    \ approach involves the use of such mechanisms as DHCP\n      prefix delegation\
    \ to abstract networks and addresses.\n   Switches and routers or manually configured\
    \ hosts that have IPv6\n   addresses assigned from the new prefix may be used\
    \ at this point to\n   test the network infrastructure.\n   Advertisement of the\
    \ prefix outside its network is the last thing to\n   be configured during this\
    \ phase.  One wants to have all of one's\n   defenses in place before advertising\
    \ the prefix, if only because the\n   prefix may come under immediate attack.\n\
    \   At the end of this phase, routing, access control, and other network\n   services\
    \ should work interchangeably for both old and new prefixes.\n"
- title: 2.4.  Adding New Host Addresses
  contents:
  - "2.4.  Adding New Host Addresses\n   Once the network infrastructure for the new\
    \ prefix is in place and\n   tested, IPv6 addresses from the new prefix may be\
    \ assigned to host\n   interfaces while the addresses from the old prefix are\
    \ retained on\n   those interfaces.  The new IPv6 addresses may be assigned through\n\
    \   SLAC, DHCP, and manual processes.  If SLAC is used in the network,\n   the\
    \ switches and routers are configured to indicate that hosts should\n   use SLAC\
    \ to assign IPv6 addresses from the new prefix.  If DHCP is\n   used for IPv6\
    \ address assignment, the DHCP service is configured to\n   assign addresses from\
    \ both prefixes to hosts.  The addresses from the\n   new prefixes will not be\
    \ used until they are inserted into the DNS.\n   Once the new IPv6 addresses have\
    \ been assigned to the host\n   interfaces, both the forward and reverse maps\
    \ within DNS should be\n   updated for the new addresses, either through automated\
    \ or manual\n   means.  In particular, some clients may be able to update their\n\
    \   forward maps through DDNS, but automating the update of the reverse\n   zone\
    \ may be more difficult as discussed in Section 4.2.\n"
- title: 2.5.  Stable Use of Either Prefix
  contents:
  - "2.5.  Stable Use of Either Prefix\n   Once the network has been configured with\
    \ the new prefix and has had\n   sufficient time to stabilize, it becomes a stable\
    \ platform with two\n   addresses configured on each and every infrastructure\
    \ component\n   interface (apart from interfaces that use only the link-local\n\
    \   address), and two non-link-local addresses are available for the use\n   of\
    \ any host, one in the old prefix and one in the new.  This is a\n   stable configuration.\n"
- title: 2.6.  Transition from Use of the Old Prefix to the New Prefix
  contents:
  - "2.6.  Transition from Use of the Old Prefix to the New Prefix\n   When the new\
    \ prefix has been fully integrated into the network\n   infrastructure and has\
    \ been tested for stable operation, hosts,\n   switches, and routers can begin\
    \ using the new prefix.  Once the\n   transition has completed, the old prefix\
    \ will not be in use in the\n   network.\n"
- title: 2.6.1.  Transition of DNS Service to the New Prefix
  contents:
  - "2.6.1.  Transition of DNS Service to the New Prefix\n   The DNS service is configured\
    \ to use the new prefix by removing any\n   IPv6 addresses from the old prefix\
    \ from the DNS server configuration.\n   External references to the DNS servers,\
    \ such as in the DNS service\n   from which this DNS domain was delegated, are\
    \ updated to use the IPv6\n   addresses from the new prefix.\n"
- title: 2.6.2.  Transition to Use of New Addresses
  contents:
  - "2.6.2.  Transition to Use of New Addresses\n   When both prefixes are usable\
    \ in the network, each host can make the\n   transition from using the old prefix\
    \ to the new prefix at a time that\n   is appropriate for the applications on\
    \ the host.  If the host\n   transitions are randomized, DNS dynamic update mechanisms\
    \ can better\n   scale to accommodate the changes to the DNS.\n   As services\
    \ become available through addresses from the new prefix,\n   references to the\
    \ hosts providing those services are updated to use\n   the new prefix.  Addresses\
    \ obtained through DNS will be automatically\n   updated when the DNS names are\
    \ resolved.  Addresses may also be\n   obtained through DHCP and will be updated\
    \ as hosts contact DHCP\n   servers.  Addresses that are otherwise configured\
    \ must be updated\n   appropriately.\n   It may be necessary to provide users\
    \ with tools or other explicit\n   procedures to complete the transition from\
    \ the use of the old prefix\n   to the new prefix, because some applications and\
    \ operating system\n   functions may be configured in ways that do not use DNS\
    \ at all or\n   will not use DNS to resolve a domain name to a new address once\
    \ the\n   new prefix is available.  For example, a device that only uses DNS to\n\
    \   resolve the name of an NTP server when the device is initialized will\n  \
    \ not obtain the address from the new prefix for that server at this\n   point\
    \ in the renumbering process.\n   This last point warrants repeating (in a slightly\
    \ different form).\n   Applications may cache addressing information in different\
    \ ways, for\n   varying lengths of time.  They may cache this information in memory,\n\
    \   on a file system, or in a database.  Only after careful observation\n   and\
    \ consideration of one's environment should one conclude that a\n   prefix is\
    \ no longer in use.  For more information on this issue, see\n   [DNSOP].\n  \
    \ The transition of critical services such as DNS, DHCP, NTP [RFC1305],\n   and\
    \ important business services should be managed and tested\n   carefully to avoid\
    \ service outages.  Each host should take reasonable\n   precautions prior to\
    \ changing to the use of the new prefix to\n   minimize the chance of broken connections.\
    \  For example, utilities\n   such as netstat and network analyzers can be used\
    \ to determine if any\n   existing connections to the host are still using the\
    \ address from the\n   old prefix for that host.\n   Link prefixes from the old\
    \ prefix in router advertisements and\n   addresses from the old prefix provided\
    \ through DHCP should have their\n   preferred lifetimes set to zero at this point,\
    \ so that hosts will not\n   use the old prefixes for new communications.\n"
- title: 2.7.  Removing the Old Prefix
  contents:
  - "2.7.  Removing the Old Prefix\n   Once all sessions are deemed to have completed,\
    \ there will be no\n   dependence on the old prefix.  It may be removed from the\n\
    \   configuration of the routing system and from any static\n   configurations\
    \ that depend on it.  If any configuration has been\n   created based on DNS information,\
    \ the configuration should be\n   refreshed after the old prefixes have been removed\
    \ from the DNS.\n   During this phase, the old prefix may be reclaimed by the\
    \ provider or\n   Regional Internet Registry that granted it, and addresses within\
    \ that\n   prefix are removed from the DNS.\n   In addition, DNS reverse maps\
    \ for the old prefix may be removed from\n   the primary name server and the zone\
    \ delegation may be removed from\n   the parent zone.  Any DNS, DHCP, or SLAC\
    \ timers that were changed\n   should be reset to their original values (most\
    \ notably the DNS\n   forward map TTL).\n"
- title: '2.8.  Final Condition: Stable Using the New Prefix'
  contents:
  - "2.8.  Final Condition: Stable Using the New Prefix\n   This is equivalent to\
    \ the first state, but using the new prefix.\n"
- title: 3.  How to Avoid Shooting Yourself in the Foot
  contents:
  - "3.  How to Avoid Shooting Yourself in the Foot\n   The difficult operational\
    \ issues in Section 2.3, Section 2.6, and\n   Section 2.7 are in dealing with\
    \ the configurations of routers and\n   hosts that are not under the control of\
    \ the network administrator or\n   are manually configured.  Examples of such\
    \ devices include Voice over\n   IP (VoIP) telephones with static configuration\
    \ of boot or name\n   servers, dedicated devices used in manufacturing that are\
    \ configured\n   with the IP addresses for specific services, the boot servers\
    \ of\n   routers and switches, etc.\n"
- title: 3.1.  Applications Affected by Renumbering
  contents:
  - "3.1.  Applications Affected by Renumbering\n   Applications may inadvertently\
    \ ignore DNS caching semantics\n   associated with IP addresses obtained through\
    \ DNS resolution.  The\n   result is that a long-lived application may continue\
    \ to use a stale\n   IP address beyond the time at which the TTL for that address\
    \ has\n   expired, even if the DNS is updated with new addresses during a\n  \
    \ renumbering event.\n   For example, many existing applications make use of standard\
    \ POSIX\n   functions such as getaddrinfo(), which do not preserve DNS caching\n\
    \   semantics.  If the application caches the response or for whatever\n   reason\
    \ actually records the response on disk, the application will\n   have no way\
    \ to know when the TTL for the response has expired.  Any\n   application that\
    \ requires repeated use of an IP address should either\n   not cache the result\
    \ or make use of an appropriate function that also\n   conveys the TTL of the\
    \ record (e.g., getrrsetbyname()).\n   Application designers, equipment vendors,\
    \ and the Open Source\n   community should take note.  There is an opportunity\
    \ to serve their\n   customers well in this area, and network operators should\
    \ either\n   develop or purchase appropriate tools.\n"
- title: 3.2.  Renumbering Switch and Router Interfaces
  contents:
  - "3.2.  Renumbering Switch and Router Interfaces\n   The configuration and operation\
    \ of switches and routers are often\n   designed to use static configuration with\
    \ IP addresses or to resolve\n   domain names only once and use the resulting\
    \ IP addresses until the\n   element is restarted.  These static configurations\
    \ complicate the\n   process of renumbering, requiring administration of all of\
    \ the static\n   information and manual configuration during a renumbering event.\n\
    \   Because switches and routers are usually single-purpose devices, the\n   user\
    \ interface and operating functions (software and hardware) are\n   often better\
    \ integrated than independent services running on a server\n   platform.  Thus,\
    \ it is likely that switch vendors and router vendors\n   can design and implement\
    \ consistent support for renumbering across\n   all of the functions of switches\
    \ and routers.\n   To better support renumbering, switches and routers should\
    \ use domain\n   names for configuration wherever appropriate, and they should\
    \ resolve\n   those names using the DNS when the lifetime on the name expires.\n"
- title: 3.3.  Ingress Filtering
  contents:
  - "3.3.  Ingress Filtering\n   An important consideration in Section 2.3, in the\
    \ case where the\n   network being renumbered is connected to an external provider,\
    \ is the\n   network's ingress filtering policy and its provider's ingress\n \
    \  filtering policy.  Both the network firewall's ingress filter and the\n   provider's\
    \ ingress filter on the access link to the network should be\n   configured to\
    \ prevent attacks that use source address spoofing.\n   Ingress filtering is considered\
    \ in detail in \"Ingress Filtering for\n   Multihomed Networks\" [RFC3704].\n"
- title: 3.4.  Link Flaps in BGP Routing
  contents:
  - "3.4.  Link Flaps in BGP Routing\n   A subtle case arises during step 2 in BGP\
    \ routing when renumbering\n   the address(es) used to name the BGP routers. \
    \ Two practices are\n   common: one is to identify a BGP router by a stable address\
    \ such as a\n   loopback address; another is to use the interface address facing\
    \ the\n   BGP peer.  In each case, when adding a new prefix, a certain\n   ambiguity\
    \ is added: the systems must choose between the addresses,\n   and depending on\
    \ how they choose, different events can happen.\n   o  If the existing address\
    \ remains in use until removed, then this is\n      minimized to a routing flap\
    \ on that event.\n   o  If both systems decide to use the address in the new prefix\n\
    \      simultaneously, the link flap may occur earlier in the process,\n     \
    \ and if this is being done automatically (such as via the router\n      renumbering\
    \ protocol), it may result in route flaps throughout the\n      network.\n   o\
    \  If the two systems choose differently (one uses the old address\n      and\
    \ one uses the new address), a stable routing outage occurs.\n   This is not addressed\
    \ by proposals such as [IDR-RESTART], as it\n   changes the \"name\" of the system,\
    \ making the matter not one of a flap\n   in an existing relationship but (from\
    \ BGP's perspective) the\n   replacement of one routing neighbor with another.\
    \  Ideally, one\n   should bring up the new BGP connection for the new address\
    \ while the\n   old remains stable and in use, and only then take down the old.\
    \  In\n   this manner, while there is a TCP connection flap, routing remains\n\
    \   stable.\n"
- title: 4.  Call to Action for the IETF
  contents:
  - "4.  Call to Action for the IETF\n   The more automated one can make the renumbering\
    \ process, the better\n   for everyone.  Sadly, there are several mechanisms that\
    \ either have\n   not been automated or have not been automated consistently across\n\
    \   platforms.\n"
- title: 4.1.  Dynamic Updates to DNS Across Administrative Domains
  contents:
  - "4.1.  Dynamic Updates to DNS Across Administrative Domains\n   The configuration\
    \ files for a DNS server (such as named.conf) will\n   contain addresses that\
    \ must be reconfigured manually during a\n   renumbering event.  There is currently\
    \ no easy way to automate the\n   update of these addresses, as the updates require\
    \ both complex trust\n   relationships and automation to verify them.  For instance,\
    \ a reverse\n   zone is delegated by an upstream ISP, but there is currently no\n\
    \   mechanism to note additional delegations.\n"
- title: 4.2.  Management of the Reverse Zone
  contents:
  - "4.2.  Management of the Reverse Zone\n   In networks where hosts obtain IPv6\
    \ addresses through SLAC, updates\n   of reverse zone are problematic because\
    \ of lack of trust relationship\n   between administrative domain owning the prefix\
    \ and the host\n   assigning the low 64 bits using SLAC.  For example, suppose\
    \ a host,\n   H, from organization A is connected to a network owned by\n   organization\
    \ B.  When H obtains a new address during a renumbering\n   event through SLAC,\
    \ H will need to update its reverse entry in the\n   DNS through a DNS server\
    \ from B that owns the reverse zone for the\n   new address.  For H to update\
    \ its reverse entry, the DNS server from\n   B must accept a DDNS request from\
    \ H, requiring that an inter-\n   administrative domain trust relationship exist\
    \ between H and B.  The\n   IETF should develop a BCP recommendation for addressing\
    \ this problem.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   The process of renumbering is straightforward\
    \ in theory but can be\n   difficult and dangerous in practice.  The threats fall\
    \ into two broad\n   categories: those arising from misconfiguration and those\
    \ that are\n   actual attacks.\n   Misconfigurations can easily arise if any system\
    \ in the network\n   \"knows\" the old prefix, or an address in it, a priori and\
    \ is not\n   configured with the new prefix, or if the new prefix is configured\
    \ in\n   a manner that replaces the old instead of being co-equal to it for a\n\
    \   period of time.  Simplistic examples include the following:\n   Neglecting\
    \ to reconfigure a system that is using the old prefix in\n      some static configuration:\
    \ in this case, when the old prefix is\n      removed from the network, whatever\
    \ feature was so configured\n      becomes inoperative - it is not configured\
    \ for the new prefix, and\n      the old prefix is irrelevant.\n   Configuring\
    \ a system via an IPv6 address, and replacing that old\n      address with a new\
    \ address: because the TCP connection is using\n      the old and now invalid\
    \ IPv6 address, the SSH session will be\n      terminated and you will have to\
    \ use SSH through the new address\n      for additional configuration changes.\n\
    \   Removing the old configuration before supplying the new: in this\n      case,\
    \ it may be necessary to obtain on-site support or travel to\n      the system\
    \ and access it via its console.\n   Clearly, taking the extra time to add the\
    \ new prefix to the\n   configuration, allowing the network to settle, and then\
    \ removing the\n   old obviates this class of issue.  A special consideration\
    \ applies\n   when some devices are only occasionally used; the administration\
    \ must\n   allow a sufficient length of time in Section 2.6 or apply other\n \
    \  verification procedures to ensure that their likelihood of detection\n   is\
    \ sufficiently high.\n   A subtle case of this type can result when the DNS is\
    \ used to\n   populate access control lists and similar security or QoS\n   configurations.\
    \  DNS names used to translate between system or\n   service names and corresponding\
    \ addresses are treated in this\n   procedure as providing the address in the\
    \ preferred prefix, which is\n   either the old or new prefix but not both.  Such\
    \ DNS names provide a\n   means, as described in Section 2.6, to cause systems\
    \ in the network\n   to stop using the old prefix to access servers or peers and\
    \ cause\n   them to start using the new prefix.  DNS names used for access\n \
    \  control lists, however, need to go through the same three-step\n   procedure\
    \ used for other access control lists, having the new prefix\n   added to them\
    \ as discussed in Section 2.3 and the old prefix removed\n   as discussed in Section\
    \ 2.7.\n   It should be noted that the use of DNS names in this way is not\n \
    \  universally accepted as a solution to this problem; [RFC3871]\n   especially\
    \ notes cases where static IP addresses are preferred over\n   DNS names, in order\
    \ to avoid a name lookup when the naming system is\n   inaccessible or when the\
    \ result of the lookup may be one of several\n   interfaces or systems.  In such\
    \ cases, extra care must be taken to\n   manage renumbering properly.\n   Attacks\
    \ are also possible.  Suppose, for example, that the new prefix\n   has been presented\
    \ by a service provider, and the service provider\n   starts advertising the prefix\
    \ before the customer network is ready.\n   The new prefix might be targeted in\
    \ a distributed denial of service\n   attack, or a system might be broken into\
    \ using an application that\n   would not cross the firewall using the old prefix,\
    \ before the\n   network's defenses have been configured.  Clearly, one wants\
    \ to\n   configure the defenses first and only then accessibility and routing,\n\
    \   as described in Section 2.3 and Section 3.3.\n   The SLAC procedure described\
    \ in [RFC2462] renumbers hosts.  Dynamic\n   DNS provides a capability for updating\
    \ DNS accordingly.  Managing\n   configuration items apart from those procedures\
    \ is most obviously\n   straightforward if all such configurations are generated\
    \ from a\n   central configuration repository or database, or if they can all\
    \ be\n   read into a temporary database, changed using appropriate scripts,\n\
    \   and applied to the appropriate systems.  Any place where scripted\n   configuration\
    \ management is not possible or is not used must be\n   tracked and managed manually.\
    \  Here, there be dragons.\n   In ingress filtering of a multihomed network, an\
    \ easy solution to the\n   issues raised in Section 3.3 might recommend that ingress\
    \ filtering\n   should not be done for multihomed customers or that ingress filtering\n\
    \   should be special-cased.  However, this has an impact on Internet\n   security.\
    \  A sufficient level of ingress filtering is needed to\n   prevent attacks using\
    \ spoofed source addresses.  Another problem\n   comes from the fact that if ingress\
    \ filtering is made too difficult\n   (e.g., by requiring special-casing in every\
    \ ISP doing it), it might\n   not be done at an ISP at all.  Therefore, any mechanism\
    \ depending on\n   relaxing ingress filtering checks should be dealt with with\
    \ extreme\n   care.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   This document grew out of a discussion on the IETF list.\
    \  Commentary\n   on the document came from Bill Fenner, Christian Huitema, Craig\n\
    \   Huegen, Dan Wing, Fred Templin, Hans Kruse, Harald Tveit Alvestrand,\n   Iljitsch\
    \ van Beijnum, Jeff Wells, John Schnizlein, Laurent Nicolas,\n   Michael Thomas,\
    \ Michel Py, Ole Troan, Pekka Savola, Peter Elford,\n   Roland Dobbins, Scott\
    \ Bradner, Sean Convery, and Tony Hain.\n   Some took it on themselves to convince\
    \ the authors that the concept\n   of network renumbering as a normal or frequent\
    \ procedure is daft.\n   Their comments, if they result in improved address management\n\
    \   practices in networks, may be the best contribution this note has to\n   offer.\n\
    \   Christian Huitema, Pekka Savola, and Iljitsch van Beijnum described\n   the\
    \ ingress filtering issues.  These made their way separately into\n   [RFC3704],\
    \ which should be read and understood by anyone who will\n   temporarily or permanently\
    \ create a multihomed network by renumbering\n   from one provider to another.\n\
    \   In addition, the 6NET consortium, notably Alan Ford, Bernard Tuy,\n   Christian\
    \ Schild, Graham Holmes, Gunter Van de Velde, Mark Thompson,\n   Nick Lamb, Stig\
    \ Venaas, Tim Chown, and Tina Strauf, took it upon\n   themselves to test the\
    \ procedure.  Some outcomes of that testing have\n   been documented here, as\
    \ they seemed of immediate significance to the\n   procedure; 6NET will also be\
    \ documenting its own \"lessons learned\".\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC1034]     Mockapetris, P., \"Domain names\
    \ - concepts and\n                 facilities\", STD 13, RFC 1034, November 1987.\n\
    \   [RFC1035]     Mockapetris, P., \"Domain names - implementation and\n     \
    \            specification\", STD 13, RFC 1035, November 1987.\n   [RFC2072] \
    \    Berkowitz, H., \"Router Renumbering Guide\", RFC 2072,\n                \
    \ January 1997.\n   [RFC2460]     Deering, S. and R. Hinden, \"Internet Protocol,\
    \ Version\n                 6 (IPv6) Specification\", RFC 2460, December 1998.\n\
    \   [RFC2461]     Narten, T., Nordmark, E., and W. Simpson, \"Neighbor\n     \
    \            Discovery for IP Version 6 (IPv6)\", RFC 2461, December\n       \
    \          1998.\n   [RFC2462]     Thomson, S. and T. Narten, \"IPv6 Stateless\
    \ Address\n                 Autoconfiguration\", RFC 2462, December 1998.\n  \
    \ [RFC3315]     Droms, R., Bound, J., Volz, B., Lemon, T., Perkins, C.,\n    \
    \             and M. Carney, \"Dynamic Host Configuration Protocol for\n     \
    \            IPv6 (DHCPv6)\", RFC 3315, July 2003.\n   [RFC3704]     Baker, F.\
    \ and P. Savola, \"Ingress Filtering for\n                 Multihomed Networks\"\
    , BCP 84, RFC 3704, March 2004.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [Clausewitz]  von Clausewitz, C., Howard, M.,\
    \ Paret, P. and D.\n                 Brodie, \"On War, Chapter VII, 'Friction\
    \ in War'\", June\n                 1989.\n   [DNSOP]       Durand, A., Ihren,\
    \ J. and P. Savola, \"Operational\n                 Considerations and Issues\
    \ with IPv6 DNS\", Work in\n                 Progress, October 2004.\n   [IDR-RESTART]\
    \ Sangli, S., Rekhter, Y., Fernando, R., Scudder, J. and\n                 E.\
    \  Chen, \"Graceful Restart Mechanism for BGP\", Work in\n                 Progress,\
    \ June 2004.\n   [RFC1305]     Mills, D., \"Network Time Protocol (Version 3)\n\
    \                 Specification, Implementation and Analysis\", RFC 1305,\n  \
    \               March 1992.\n   [RFC1995]     Ohta, M., \"Incremental Zone Transfer\
    \ in DNS\", RFC 1995,\n                 August 1996.\n   [RFC1996]     Vixie,\
    \ P., \"A Mechanism for Prompt Notification of Zone\n                 Changes\
    \ (DNS NOTIFY)\", RFC 1996, August 1996.\n   [RFC2136]     Vixie, P., Thomson,\
    \  S., Rekhter, Y., and J. Bound,\n                 \"Dynamic Updates in the Domain\
    \ Name System (DNS\n                 UPDATE)\", RFC 2136, April 1997.\n   [RFC2827]\
    \     Ferguson, P. and D. Senie, \"Network Ingress Filtering:\n              \
    \   Defeating Denial of Service Attacks which employ IP\n                 Source\
    \ Address Spoofing\", BCP 38, RFC 2827, May 2000.\n   [RFC2845]     Vixie, P.,\
    \ Gudmundsson, O., Eastlake 3rd, D., and B.\n                 Wellington, \"Secret\
    \ Key Transaction Authentication for\n                 DNS (TSIG)\", RFC 2845,\
    \ May 2000.\n   [RFC2931]     Eastlake 3rd, D., \"DNS Request and Transaction\n\
    \                 Signatures ( SIG(0)s )\", RFC 2931, September 2000.\n   [RFC3007]\
    \     Wellington, B., \"Secure Domain Name System (DNS)\n                 Dynamic\
    \ Update\", RFC 3007, November 2000.\n   [RFC3177]     IAB and IESG, \"IAB/IESG\
    \ Recommendations on IPv6 Address\n                 Allocations to Sites\", RFC\
    \ 3177, September 2001.\n   [RFC3633]     Troan, O. and R. Droms, \"IPv6 Prefix\
    \ Options for\n                 Dynamic Host Configuration Protocol (DHCP) version\
    \ 6\",\n                 RFC 3633, December 2003.\n   [RFC3871]     Jones, G.,\
    \ \"Operational Security Requirements for Large\n                 Internet Service\
    \ Provider (ISP) IP Network\n                 Infrastructure\", RFC 3871, September\
    \ 2004.\n   [RFC4033]     Arends, R., Austein, R., Larson, M., Massey, D., and\
    \ S.\n                 Rose, \"DNS Security Introduction and Requirements\", RFC\n\
    \                 4033, March 2005.\n   [RFC4034]     Arends, R., Austein, R.,\
    \ Larson, M., Massey, D., and S.\n                 Rose, \"Resource Records for\
    \ the DNS Security\n                 Extensions\", RFC 4034, March 2005.\n   [RFC4035]\
    \     Arends, R., Austein, R., Larson, M., Massey, D., and S.\n              \
    \   Rose, \"Protocol Modifications for the DNS Security\n                 Extensions\"\
    , RFC 4035, March 2005.\n"
- title: Appendix A.  Managing Latency in the DNS
  contents:
  - "Appendix A.  Managing Latency in the DNS\n   The procedure in this section can\
    \ be used to determine and manage the\n   latency in updates to information a\
    \ DNS resource record (RR).\n   There are several kinds of possible delays that\
    \ are ignored in these\n   calculations:\n   o  the time it takes for the administrators\
    \ to make the changes;\n   o  the time it may take to wait for the DNS update,\
    \ if the\n      secondaries are only updated at regular intervals, and not\n \
    \     immediately; and\n   o  the time the updating to all the secondaries takes.\n\
    \   Assume the use of NOTIFY [RFC1996] and IXFR [RFC1995] to transfer\n   updated\
    \ information from the primary DNS server to any secondary\n   servers; this is\
    \ a very quick update process, and the actual time to\n   update of information\
    \ is not considered significant.\n   There is a target time, TC, at which we want\
    \ to change the contents\n   of a DNS RR.  The RR is currently configured with\
    \ TTL == TTLOLD.  Any\n   cached references to the RR will expire no more than\
    \ TTLOLD in the\n   future.\n   At time TC - (TTLOLD + TTLNEW), the RR in the\
    \ primary is configured\n   with TTLNEW (TTLNEW < TTLOLD).  The update process\
    \ is initiated to\n   push the RR to the secondaries.  After the update, responses\
    \ to\n   queries for the RR are returned with TTLNEW.  There are still some\n\
    \   cached references with TTLOLD.\n   At time TC - TTLNEW, the RR in the primary\
    \ is configured with the new\n   address.  The update process is initiated to\
    \ push the RR to the\n   secondaries.  After the update, responses to queries\
    \ for the RR\n   return the new address.  All the cached references have TTLNEW.\n\
    \   Between this time and TC, responses to queries for the RR may be\n   returned\
    \ with either the old address or the new address.  This\n   ambiguity is acceptable,\
    \ assuming the host is configured to respond\n   to both addresses.\n   At time\
    \ TC, all the cached references with the old address have\n   expired, and all\
    \ subsequent queries will return the new address.\n   After TC (corresponding\
    \ to the final state described in Section 2.8),\n   the TTL on the RR can be set\
    \ to the initial value TTLOLD.\n   The network administrator can choose TTLOLD\
    \ and TTLNEW to meet local\n   requirements.\n   As a concrete example, consider\
    \ a case where TTLOLD is a week (168\n   hours) and TTLNEW is an hour.  The preparation\
    \ for the change of\n   addresses begins 169 hours before the address change.\
    \  After 168\n   hours have passed and only one hour is left, the TTLNEW has\n\
    \   propagated everywhere, and one can change the address record(s).\n   These\
    \ are propagated within the hour, after which one can restore TTL\n   value to\
    \ a larger value.  This approach minimizes time where it is\n   uncertain what\
    \ kind of (address) information is returned from the\n   DNS.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Fred Baker\n   Cisco Systems\n   1121 Via Del Rey\n  \
    \ Santa Barbara, CA  93117\n   US\n   Phone: 408-526-4257\n   Fax:   413-473-2403\n\
    \   EMail: fred@cisco.com\n   Eliot Lear\n   Cisco Systems GmbH\n   Glatt-com\
    \ 2nd Floor\n   CH-8301 Glattzentrum\n   Switzerland\n   Phone: +41 1 878 9200\n\
    \   EMail: lear@cisco.com\n   Ralph Droms\n   Cisco Systems\n   200 Beaver Brook\
    \ Road\n   Boxborough, MA  01719\n   US\n   Phone: +1 978 936-1674\n   EMail:\
    \ rdroms@cisco.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
