- title: __initial_text__
  contents:
  - "             Integration of Robust Header Compression over\n                \
    \      IPsec Security Associations\n"
- title: Abstract
  contents:
  - "Abstract\n   IP Security (IPsec) provides various security services for IP\n\
    \   traffic.  However, the benefits of IPsec come at the cost of\n   increased\
    \ overhead.  This document outlines a framework for\n   integrating Robust Header\
    \ Compression (ROHC) over IPsec (ROHCoIPsec).\n   By compressing the inner headers\
    \ of IP packets, ROHCoIPsec proposes\n   to reduce the amount of overhead associated\
    \ with the transmission of\n   traffic over IPsec Security Associations (SAs).\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It has been approved for\
    \ publication by the Internet\n   Engineering Steering Group (IESG).  Not all\
    \ documents approved by the\n   IESG are a candidate for any level of Internet\
    \ Standard; see Section\n   2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc5856.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Audience ........................................................3\n  \
    \ 3. Terminology .....................................................3\n   4.\
    \ Problem Statement: IPsec Packet Overhead ........................4\n   5. Overview\
    \ of the ROHCoIPsec Framework ............................5\n      5.1. ROHCoIPsec\
    \ Assumptions .....................................5\n      5.2. Summary of the\
    \ ROHCoIPsec Framework ........................5\n   6. Details of the ROHCoIPsec\
    \ Framework .............................7\n      6.1. ROHC and IPsec Integration\
    \ .................................7\n           6.1.1. Header Compression Protocol\
    \ Considerations ..........9\n           6.1.2. Initialization and Negotiation\
    \ of the ROHC Channel ..9\n           6.1.3. Encapsulation and Identification\
    \ of Header\n                  Compressed Packets .................................10\n\
    \           6.1.4. Motivation for the ROHC ICV ........................11\n  \
    \         6.1.5. Path MTU Considerations ............................11\n    \
    \  6.2. ROHCoIPsec Framework Summary ..............................12\n   7. Security\
    \ Considerations ........................................12\n   8. IANA Considerations\
    \ ............................................12\n   9. Acknowledgments ................................................13\n\
    \   10. Informative References ........................................14\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document outlines a framework for integrating ROHC\
    \ [ROHC] over\n   IPsec [IPSEC] (ROHCoIPsec).  The goal of ROHCoIPsec is to reduce\
    \ the\n   protocol overhead associated with packets traversing between IPsec SA\n\
    \   endpoints.  This can be achieved by compressing the transport layer\n   header\
    \ (e.g., UDP, TCP, etc.) and inner IP header of packets at the\n   ingress of\
    \ the IPsec tunnel, and decompressing these headers at the\n   egress.\n   For\
    \ ROHCoIPsec, this document assumes that ROHC will be used to\n   compress the\
    \ inner headers of IP packets traversing an IPsec tunnel.\n   However, since current\
    \ specifications for ROHC detail its operation\n   on a hop-by-hop basis, it requires\
    \ extensions to enable its operation\n   over IPsec SAs.  This document outlines\
    \ a framework for extending the\n   usage of ROHC to operate at IPsec SA endpoints.\n\
    \   ROHCoIPsec targets the application of ROHC to tunnel mode SAs.\n   Transport\
    \ mode SAs only protect the payload of an IP packet, leaving\n   the IP header\
    \ untouched.  Intermediate routers subsequently use this\n   IP header to route\
    \ the packet to a decryption device.  Therefore, if\n   ROHC is to operate over\
    \ IPsec transport-mode SAs, (de)compression\n   functionality can only be applied\
    \ to the transport layer headers, and\n   not to the IP header.  Because current\
    \ ROHC specifications do not\n   include support for the compression of transport\
    \ layer headers alone,\n   the ROHCoIPsec framework outlined by this document\
    \ describes the\n   application of ROHC to tunnel mode SAs.\n"
- title: 2.  Audience
  contents:
  - "2.  Audience\n   The authors target members of both the ROHC and IPsec communities\
    \ who\n   may consider extending the ROHC and IPsec protocols to meet the\n  \
    \ requirements put forth in this document.  In addition, this document\n   is\
    \ directed towards vendors developing IPsec devices that will be\n   deployed\
    \ in bandwidth-constrained IP networks.\n"
- title: 3.  Terminology
  contents:
  - "3.  Terminology\n   ROHC Process\n      Generic reference to a ROHC instance\
    \ (as defined in RFC 3759\n      [ROHC-TERM]) or any supporting ROHC components.\n\
    \   Compressed Traffic\n      Traffic that is processed through the ROHC compressor\
    \ and\n      decompressor instances.  Packet headers are compressed and\n    \
    \  decompressed using a specific header compression profile.\n   Uncompressed\
    \ Traffic\n      Traffic that is not processed by the ROHC compressor instance.\n\
    \      Instead, this type of traffic bypasses the ROHC process.\n   IPsec Process\n\
    \      Generic reference to the Internet Protocol Security (IPsec)\n      process.\n\
    \   Next Header\n      Refers to the Protocol (IPv4) or Next Header (IPv6, Extension)\n\
    \      field.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [BRA97].\n"
- title: '4.  Problem Statement: IPsec Packet Overhead'
  contents:
  - "4.  Problem Statement: IPsec Packet Overhead\n   IPsec mechanisms provide various\
    \ security services for IP networks.\n   However, the benefits of IPsec come at\
    \ the cost of increased per-\n   packet overhead.  For example, traffic flow confidentiality\n\
    \   (generally leveraged at security gateways) requires the tunneling of\n   IP\
    \ packets between IPsec implementations.  Although these IPsec\n   tunnels will\
    \ effectively mask the source-destination patterns that an\n   intruder can ascertain,\
    \ tunneling comes at the cost of increased\n   packet overhead.  Specifically,\
    \ an Encapsulating Security Payload\n   (ESP) tunnel mode SA applied to an IPv6\
    \ flow results in at least 50\n   bytes of additional overhead per packet.  This\
    \ additional overhead\n   may be undesirable for many bandwidth-constrained wireless\
    \ and/or\n   satellite communications networks, as these types of infrastructure\n\
    \   are not overprovisioned.  ROHC applied on a per-hop basis over\n   bandwidth-constrained\
    \ links will also suffer from reduced performance\n   when encryption is used\
    \ on the tunneled header, since encrypted\n   headers cannot be compressed.  Consequently,\
    \ the additional overhead\n   incurred by an IPsec tunnel may result in the inefficient\
    \ utilization\n   of bandwidth.\n   Packet overhead is particularly significant\
    \ for traffic profiles\n   characterized by small packet payloads (e.g., various\
    \ voice codecs).\n   If these small packets are afforded the security services\
    \ of an IPsec\n   tunnel mode SA, the amount of per-packet overhead is increased.\n\
    \   Thus, a mechanism is needed to reduce the overhead associated with\n   such\
    \ flows.\n"
- title: 5.  Overview of the ROHCoIPsec Framework
  contents:
  - '5.  Overview of the ROHCoIPsec Framework

    '
- title: 5.1.  ROHCoIPsec Assumptions
  contents:
  - "5.1.  ROHCoIPsec Assumptions\n   The goal of ROHCoIPsec is to provide efficient\
    \ transport of IP\n   packets between IPsec devices without compromising the security\n\
    \   services offered by IPsec.  The ROHCoIPsec framework has been\n   developed\
    \ based on the following assumptions:\n   o  ROHC will be leveraged to reduce\
    \ the amount of overhead associated\n      with unicast IP packets traversing\
    \ an IPsec SA.\n   o  ROHC will be instantiated at the IPsec SA endpoints, and\
    \ it will\n      be applied on a per-SA basis.\n   o  Once the decompression operation\
    \ completes, decompressed packet\n      headers will be identical to the original\
    \ packet headers before\n      compression.\n"
- title: 5.2.  Summary of the ROHCoIPsec Framework
  contents:
  - "5.2.  Summary of the ROHCoIPsec Framework\n   ROHC reduces packet overhead in\
    \ a network by exploiting intra- and\n   inter-packet redundancies of network\
    \ and transport-layer header\n   fields of a flow.\n   Current ROHC protocol specifications\
    \ compress packet headers on a\n   hop-by-hop basis.  However, IPsec SAs are instantiated\
    \ between two\n   IPsec endpoints.  Therefore, various extensions to both ROHC\
    \ and\n   IPsec need to be defined to ensure the successful operation of the\n\
    \   ROHC protocol at IPsec SA endpoints.\n   The specification of ROHC over IPsec\
    \ SAs is straightforward, since SA\n   endpoints provide source/destination pairs\
    \ where (de)compression\n   operations can take place.  Compression of the inner\
    \ IP and upper\n   layer protocol headers in such a manner offers a reduction\
    \ of packet\n   overhead between the two SA endpoints.  Since ROHC will now operate\n\
    \   between IPsec endpoints (over multiple intermediate nodes that are\n   transparent\
    \ to an IPsec SA), it is imperative to ensure that its\n   performance will not\
    \ be severely impacted due to increased packet\n   reordering and/or packet loss\
    \ between the compressor and\n   decompressor.\n   In addition, ROHC can no longer\
    \ rely on the underlying link layer for\n   ROHC channel parameter configuration\
    \ and packet identification.  The\n   ROHCoIPsec framework proposes that ROHC\
    \ channel parameter\n   configuration is accomplished by an SA management protocol\
    \ (e.g.,\n   Internet Key Exchange Protocol version 2 (IKEv2) [IKEV2]), while\n\
    \   identification of compressed header packets is achieved through the\n   Next\
    \ Header field of the security protocol (e.g., Authentication\n   Header (AH)\
    \ [AH], ESP [ESP]) header.\n   Using the ROHCoIPsec framework proposed below,\
    \ outbound and inbound\n   IP traffic processing at an IPsec device needs to be\
    \ modified.  For\n   an outbound packet, a ROHCoIPsec implementation will compress\n\
    \   appropriate packet headers, and subsequently encrypt and/or integrity\n  \
    \ protect the packet.  For tunnel mode SAs, compression may be applied\n   to\
    \ the transport layer and the inner IP headers.  For inbound\n   packets, an IPsec\
    \ device must first decrypt and/or integrity check\n   the packet.  Then, decompression\
    \ of the inner packet headers is\n   performed.  After decompression, the packet\
    \ is checked against the\n   access controls imposed on all inbound traffic associated\
    \ with the SA\n   (as specified in RFC 4301 [IPSEC]).\n      Note: Compression\
    \ of inner headers is independent from compression\n      of the security protocol\
    \ (e.g., ESP) and outer IP headers.  ROHC\n      profiles have been defined to\
    \ allow for the compression of the\n      security protocol and the outer IP header\
    \ on a hop-by-hop basis.\n      The applicability of ROHCoIPsec and hop-by-hop\
    \ ROHC on an IPv4\n      ESP-processed packet [ESP] is shown below in Figure 1.\n\
    \             -----------------------------------------------------------\n  \
    \     IPv4  | new IP hdr  |     | orig IP hdr   |   |    | ESP   | ESP|\n    \
    \         |(any options)| ESP | (any options) |TCP|Data|Trailer| ICV|\n      \
    \       -----------------------------------------------------------\n        \
    \     |<-------(1)------->|<------(2)-------->|\n             (1) Compressed hop-by-hop\
    \ by the ROHC [ROHC]\n                 ESP/IP profile\n             (2) Compressed\
    \ end-to-end by the ROHCoIPsec [IPSEC-ROHC]\n                 TCP/IP profile\n\
    \      Figure 1.  Applicability of hop-by-hop ROHC and ROHCoIPsec on an\n    \
    \  IPv4 ESP-processed packet.\n   If IPsec NULL encryption is applied to packets,\
    \ ROHC may still be\n   used to compress the inner headers at IPsec SA endpoints.\
    \  However,\n   compression of these inner headers may pose challenges for\n \
    \  intermediary devices (e.g., traffic monitors, sampling/management\n   tools)\
    \ that are inspecting the contents of ESP-NULL packets.  For\n   example, policies\
    \ on these devices may need to be updated to ensure\n   that packets that contain\
    \ the \"ROHC\" protocol identifier are not\n   dropped.  In addition, intermediary\
    \ devices may require additional\n   functionality to determine the content of\
    \ the header compressed\n   packets.\n   In certain scenarios, a ROHCoIPsec implementation\
    \ may encounter UDP-\n   encapsulated ESP or IKE packets (i.e., packets that are\
    \ traversing\n   NATs).  For example, a ROHCoIPsec implementation may receive\
    \ a UDP-\n   encapsulated ESP packet that contains an ESP/UDP/IP header chain.\n\
    \   Currently, ROHC profiles do not support compression of the entire\n   header\
    \ chain associated with this packet; only the UDP/IP headers can\n   be compressed.\n"
- title: 6.  Details of the ROHCoIPsec Framework
  contents:
  - '6.  Details of the ROHCoIPsec Framework

    '
- title: 6.1.  ROHC and IPsec Integration
  contents:
  - "6.1.  ROHC and IPsec Integration\n   Figure 2 illustrates the components required\
    \ to integrate ROHC with\n   the IPsec process, i.e., ROHCoIPsec.\n          \
    \        +-------------------------------+\n                  | ROHC Module  \
    \                 |\n                  |                               |\n   \
    \               |                               |\n        +-----+   |     +-----+\
    \     +---------+   |\n        |     |   |     |     |     |  ROHC   |   |\n \
    \     --|  A  |---------|  B  |-----| Process |------> Path 1\n        |     |\
    \   |     |     |     |         |   |   (ROHC-enabled SA)\n        +-----+   |\
    \     +-----+     +---------+   |\n           |      |        |              \
    \        |\n           |      |        |-------------------------> Path 2\n  \
    \         |      |                               |   (ROHC-enabled SA,\n     \
    \      |      +-------------------------------+  but no compression)\n       \
    \    |\n           |\n           |\n           |\n           +----------------------------------------->\
    \ Path 3\n                                                      (ROHC-disabled\
    \ SA)\n                 Figure 2.  Integration of ROHC with IPsec\n   The process\
    \ illustrated in Figure 2 augments the IPsec processing\n   model for outbound\
    \ IP traffic (protected-to-unprotected).  Initial\n   IPsec processing is consistent\
    \ with RFC 4301 [IPSEC] (Section 5.1,\n   Steps 1-2).\n   Block A: The ROHC data\
    \ item (part of the SA state information)\n   retrieved from the \"relevant SAD\
    \ entry\" ([IPSEC], Section 5.1,\n   Step3a) determines if the traffic traversing\
    \ the SA is handed to the\n   ROHC module.  Packets selected to a ROHC-disabled\
    \ SA MUST follow\n   normal IPsec processing and MUST NOT be sent to the ROHC\
    \ module\n   (Figure 2, Path 3).  Conversely, packets selected to a ROHC-enabled\n\
    \   SA MUST be sent to the ROHC module.\n   Block B: This step determines if the\
    \ packet can be compressed.  If\n   the packet is compressed, an integrity algorithm\
    \ MAY be used to\n   compute an Integrity Check Value (ICV) for the uncompressed\
    \ packet\n   ([IPSEC-ROHC], Section 4.2; [IKE-ROHC], Section 3.1).  The Next\n\
    \   Header field of the security protocol header (e.g., ESP, AH) MUST be\n   populated\
    \ with a \"ROHC\" protocol identifier [PROTOCOL], inner packet\n   headers MUST\
    \ be compressed, and the computed ICV MAY be appended to\n   the packet (Figure\
    \ 2, Path 1).  However, if it is determined that the\n   packet will not be compressed\
    \ (e.g., due to one of the reasons\n   described in Section 6.1.3), the Next Header\
    \ field MUST be populated\n   with the appropriate value indicating the next-level\
    \ protocol (Figure\n   2, Path 2), and ROHC processing MUST NOT be applied to\
    \ the packet.\n   After the ROHC process completes, IPsec processing resumes,\
    \ as\n   described in Section 5.1, Step3a, of RFC 4301 [IPSEC].\n   The process\
    \ illustrated in Figure 2 also augments the IPsec\n   processing model for inbound\
    \ IP traffic (unprotected-to-protected).\n   For inbound packets, IPsec processing\
    \ is performed ([IPSEC], Section\n   5.2, Steps 1-3) followed by AH or ESP processing\
    \ ([IPSEC], Section\n   5.2, Step 4).\n   Block A: After AH or ESP processing,\
    \ the ROHC data item retrieved\n   from the SAD entry will indicate if traffic\
    \ traversing the SA is\n   processed by the ROHC module ([IPSEC], Section 5.2,\
    \ Step 3a).\n   Packets traversing a ROHC-disabled SA MUST follow normal IPsec\n\
    \   processing and MUST NOT be sent to the ROHC module.  Conversely,\n   packets\
    \ traversing a ROHC-enabled SA MUST be sent to the ROHC module.\n   Block B: The\
    \ decision at Block B is made using the value of the Next\n   Header field of\
    \ the security protocol header.  If the Next Header\n   field does not indicate\
    \ a ROHC header, the decompressor MUST NOT\n   attempt decompression (Figure 2,\
    \ Path 2).  If the Next Header field\n   indicates a ROHC header, decompression\
    \ is applied.  After\n   decompression, the signaled ROHCoIPsec integrity algorithm\
    \ MAY be\n   used to compute an ICV value for the decompressed packet.  This ICV,\n\
    \   if present, is compared to the ICV that was calculated at the\n   compressor.\
    \  If the ICVs match, the packet is forwarded by the ROHC\n   module (Figure 2,\
    \ Path 1); otherwise, the packet MUST be dropped.\n   Once the ROHC module completes\
    \ processing, IPsec processing resumes,\n   as described in Section 5.2, Step\
    \ 4, of RFC 4301 [IPSEC].\n   When there is a single SA between a compressor and\
    \ decompressor, ROHC\n   MUST operate in unidirectional mode, as described in\
    \ Section 5 of RFC\n   3759 [ROHC-TERM].  When there is a pair of SAs instantiated\
    \ between\n   ROHCoIPsec implementations, ROHC MAY operate in bi-directional mode,\n\
    \   where an SA pair represents a bi-directional ROHC channel (as\n   described\
    \ in Sections 6.1 and 6.2 of RFC 3759 [ROHC-TERM]).\n   Note that to further reduce\
    \ the size of an IPsec-protected packet,\n   ROHCoIPsec and IPComp [IPCOMP] can\
    \ be implemented in a nested\n   fashion.  This process is detailed in [IPSEC-ROHC],\
    \ Section 4.4.\n"
- title: 6.1.1.  Header Compression Protocol Considerations
  contents:
  - "6.1.1.  Header Compression Protocol Considerations\n   ROHCv2 [ROHCV2] profiles\
    \ include various mechanisms that provide\n   increased robustness over reordering\
    \ channels.  These mechanisms\n   SHOULD be adopted for ROHC to operate efficiently\
    \ over IPsec SAs.\n   A ROHC decompressor implemented within IPsec architecture\
    \ MAY\n   leverage additional mechanisms to improve performance over reordering\n\
    \   channels (either due to random events or to an attacker intentionally\n  \
    \ reordering packets).  Specifically, IPsec's sequence number MAY be\n   used\
    \ by the decompressor to identify a packet as \"sequentially late\".\n   This\
    \ knowledge will increase the likelihood of successful\n   decompression of a\
    \ reordered packet.\n   Additionally, ROHCoIPsec implementations SHOULD minimize\
    \ the amount\n   of feedback sent from the decompressor to the compressor.  If\
    \ a ROHC\n   feedback channel is not used sparingly, the overall gains from\n\
    \   ROHCoIPsec can be significantly reduced.  More specifically, any\n   feedback\
    \ sent from the decompressor to the compressor MUST be\n   processed by IPsec\
    \ and tunneled back to the compressor (as designated\n   by the SA associated\
    \ with FEEDBACK_FOR).  As such, some\n   implementation alternatives can be considered,\
    \ including the\n   following:\n   o  Eliminate feedback traffic altogether by\
    \ operating only in ROHC\n      Unidirectional mode (U-mode).\n   o  Piggyback\
    \ ROHC feedback messages within the feedback element\n      (i.e., on ROHC traffic\
    \ that normally traverses the SA designated\n      by FEEDBACK_FOR).\n"
- title: 6.1.2.  Initialization and Negotiation of the ROHC Channel
  contents:
  - "6.1.2.  Initialization and Negotiation of the ROHC Channel\n   Hop-by-hop ROHC\
    \ typically uses the underlying link layer (e.g., PPP)\n   to negotiate ROHC channel\
    \ parameters.  In the case of ROHCoIPsec,\n   channel parameters can be set manually\
    \ (i.e., administratively\n   configured for manual SAs) or negotiated by IKEv2.\
    \  The extensions\n   required for IKEv2 to support ROHC channel parameter negotiation\
    \ are\n   detailed in [IKE-ROHC].\n   If the ROHC protocol requires bi-directional\
    \ communications, two SAs\n   MUST be instantiated between the IPsec implementations.\
    \  One of the\n   two SAs is used for carrying ROHC-traffic from the compressor\
    \ to the\n   decompressor, while the other is used to communicate ROHC-feedback\n\
    \   from the decompressor to the compressor.  Note that the requirement\n   for\
    \ two SAs aligns with the operation of IKE, which creates SAs in\n   pairs by\
    \ default.  However, IPsec implementations will dictate how\n   decompressor feedback\
    \ received on one SA is associated with a\n   compressor on the other SA.  An\
    \ IPsec implementation MUST relay the\n   feedback received by the decompressor\
    \ on an inbound SA to the\n   compressor associated with the corresponding outbound\
    \ SA.\n"
- title: 6.1.3.  Encapsulation and Identification of Header Compressed Packets
  contents:
  - "6.1.3.  Encapsulation and Identification of Header Compressed Packets\n   As\
    \ indicated in Section 6.1, new state information (i.e., a new ROHC\n   data item)\
    \ is defined for each SA.  The ROHC data item MUST be used\n   by the IPsec process\
    \ to determine whether it sends all traffic\n   traversing a given SA to the ROHC\
    \ module (ROHC-enabled) or bypasses\n   the ROHC module and sends the traffic\
    \ through regular IPsec\n   processing (ROHC-disabled).\n   The Next Header field\
    \ of the IPsec security protocol (e.g., AH or\n   ESP) header MUST be used to\
    \ demultiplex header-compressed traffic\n   from uncompressed traffic traversing\
    \ a ROHC-enabled SA.  This\n   functionality is needed in situations where packets\
    \ traversing a\n   ROHC-enabled SA contain uncompressed headers.  Such situations\
    \ may\n   occur when, for example, a compressor only supports up to n\n   compressed\
    \ flows and cannot compress a flow number n+1 that arrives.\n   Another example\
    \ is when traffic is selected to a ROHC-enabled SA, but\n   cannot be compressed\
    \ by the ROHC process because the appropriate ROHC\n   Profile has not been signaled\
    \ for use.  As a result, the decompressor\n   MUST be able to identify packets\
    \ with uncompressed headers and MUST\n   NOT attempt to decompress them.  The\
    \ Next Header field is used to\n   demultiplex these header-compressed and uncompressed\
    \ packets where\n   the \"ROHC\" protocol identifier will indicate that the packet\
    \ contains\n   compressed headers.  To accomplish this, IANA has allocated value\
    \ 142\n   to \"ROHC\" from the Protocol ID registry [PROTOCOL].\n   It is noted\
    \ that the use of the \"ROHC\" protocol identifier for\n   purposes other than\
    \ ROHCoIPsec is currently not defined.  In other\n   words, the \"ROHC\" protocol\
    \ identifier is only defined for use in the\n   Next Header field of security\
    \ protocol headers (e.g., ESP, AH).\n   The ROHC Data Item, IANA Protocol ID allocation,\
    \ and other IPsec\n   extensions to support ROHCoIPsec are specified in [IPSEC-ROHC].\n"
- title: 6.1.4.  Motivation for the ROHC ICV
  contents:
  - "6.1.4.  Motivation for the ROHC ICV\n   Although ROHC was designed to tolerate\
    \ packet loss and reordering,\n   the algorithm does not guarantee that packets\
    \ reconstructed at the\n   decompressor are identical to the original packet.\
    \  As stated in\n   Section 5.2 of RFC 4224 [REORDR], the consequences of packet\n\
    \   reordering between ROHC peers may include undetected decompression\n   failures,\
    \ where erroneous packets are constructed and forwarded to\n   upper layers. \
    \ Significant packet loss can have similar consequences.\n   When using IPsec\
    \ integrity protection, a packet received at the\n   egress of an IPsec tunnel\
    \ is identical to the packet that was\n   processed at the ingress (given that\
    \ the key is not compromised,\n   etc.).\n   When ROHC is integrated into the\
    \ IPsec processing framework, the ROHC\n   processed packet is protected by the\
    \ AH/ESP ICV.  However, bits in\n   the original IP header are not protected by\
    \ this ICV; they are\n   protected only by ROHC's integrity mechanisms (which\
    \ are designed for\n   random packet loss/reordering, not malicious packet loss/reordering\n\
    \   introduced by an attacker).  Therefore, under certain circumstances,\n   erroneous\
    \ packets may be constructed and forwarded into the protected\n   domain.\n  \
    \ To ensure the integrity of the original IP header within the\n   ROHCoIPsec-processing\
    \ model, an additional integrity check MAY be\n   applied before the packet is\
    \ compressed.  This integrity check will\n   ensure that erroneous packets are\
    \ not forwarded into the protected\n   domain.  The specifics of this integrity\
    \ check are documented in\n   Section 4.2 of [IPSEC-ROHC].\n"
- title: 6.1.5.  Path MTU Considerations
  contents:
  - "6.1.5.  Path MTU Considerations\n   By encapsulating IP packets with AH/ESP and\
    \ tunneling IP headers,\n   IPsec increases the size of IP packets.  This increase\
    \ may result in\n   Path MTU issues in the unprotected domain.  Several approaches\
    \ to\n   resolving these path MTU issues are documented in Section 8 of RFC\n\
    \   4301 [IPSEC]; approaches include fragmenting the packet before or\n   after\
    \ IPsec processing (if the packet's Don't Fragment (DF) bit is\n   clear), or\
    \ possibly discarding packets (if the packet's DF bit is\n   set).\n   The addition\
    \ of ROHC within the IPsec processing model may result in\n   similar path MTU\
    \ challenges.  For example, under certain\n   circumstances, ROHC headers are\
    \ larger than the original uncompressed\n   headers.  In addition, if an integrity\
    \ algorithm is used to validate\n   packet headers, the resulting ICV will increase\
    \ the size of packets.\n   Both of these properties of ROHCoIPsec increase the\
    \ size of packets,\n   and therefore may result in additional challenges associated\
    \ with\n   path MTU.\n   Approaches to addressing these path MTU issues are specified\
    \ in\n   Section 4.3 of [IPSEC-ROHC].\n"
- title: 6.2.  ROHCoIPsec Framework Summary
  contents:
  - "6.2.  ROHCoIPsec Framework Summary\n   To summarize, the following items are\
    \ needed to achieve ROHCoIPsec:\n   o  IKEv2 Extensions to Support ROHCoIPsec\n\
    \   o  IPsec Extensions to Support ROHCoIPsec\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Several security considerations associated with\
    \ the use of ROHCoIPsec\n   are covered in Section 6.1.4.  These considerations\
    \ can be mitigated\n   by using a strong integrity-check algorithm to ensure the\
    \ valid\n   decompression of packet headers.\n   A malfunctioning or malicious\
    \ ROHCoIPsec compressor (i.e., the\n   compressor located at the ingress of the\
    \ IPsec tunnel) has the\n   ability to send erroneous packets to the decompressor\
    \ (i.e., the\n   decompressor located at the egress of the IPsec tunnel) that\
    \ do not\n   match the original packets emitted from the end-hosts.  Such a\n\
    \   scenario may result in decreased efficiency between compressor and\n   decompressor,\
    \ or may cause the decompressor to forward erroneous\n   packets into the protected\
    \ domain.  A malicious compressor could also\n   intentionally generate a significant\
    \ number of compressed packets,\n   which may result in denial of service at the\
    \ decompressor, as the\n   decompression of a significant number of invalid packets\
    \ may drain\n   the resources of an IPsec device.\n   A malfunctioning or malicious\
    \ ROHCoIPsec decompressor has the ability\n   to disrupt communications as well.\
    \  For example, a decompressor may\n   simply discard a subset of (or all) the\
    \ packets that are received,\n   even if packet headers were validly decompressed.\
    \  Ultimately, this\n   could result in denial of service.  A malicious decompressor\
    \ could\n   also intentionally indicate that its context is not synchronized with\n\
    \   the compressor's context, forcing the compressor to transition to a\n   lower\
    \ compression state.  This will reduce the overall efficiency\n   gain offered\
    \ by ROHCoIPsec.\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   All IANA considerations for ROHCoIPsec are documented\
    \ in [IKE-ROHC]\n   and [IPSEC-ROHC].\n"
- title: 9.  Acknowledgments
  contents:
  - "9.  Acknowledgments\n   The authors would like to thank Sean O'Keeffe, James\
    \ Kohler, and\n   Linda Noone of the Department of Defense, as well as Rich Espy\
    \ of\n   OPnet for their contributions and support in the development of this\n\
    \   document.\n   The authors would also like to thank Yoav Nir and Robert A Stangarone\n\
    \   Jr.: both served as committed document reviewers for this\n   specification.\n\
    \   In addition, the authors would like to thank the following for their\n   numerous\
    \ reviews and comments to this document:\n   o  Magnus Westerlund\n   o  Stephen\
    \ Kent\n   o  Pasi Eronen\n   o  Joseph Touch\n   o  Tero Kivinen\n   o  Jonah\
    \ Pezeshki\n   o  Lars-Erik Jonsson\n   o  Jan Vilhuber\n   o  Dan Wing\n   o\
    \  Kristopher Sandlund\n   o  Ghyslain Pelletier\n   o  David Black\n   o  Tim\
    \ Polk\n   o  Brian Carpenter\n   Finally, the authors would also like to thank\
    \ Tom Conkle, Renee\n   Esposito, Etzel Brower, and Michele Casey of Booz Allen\
    \ Hamilton for\n   their assistance in completing this work.\n"
- title: 10.  Informative References
  contents:
  - "10.  Informative References\n   [ROHC]        Sandlund, K., Pelletier, G., and\
    \ L-E. Jonsson, \"The\n                 RObust Header Compression (ROHC) Framework\"\
    , RFC 5795,\n                 March 2010.\n   [IPSEC]       Kent, S. and K. Seo,\
    \ \"Security Architecture for the\n                 Internet Protocol\", RFC 4301,\
    \ December 2005.\n   [ROHC-TERM]   Jonsson, L-E., \"Robust Header Compression\
    \ (ROHC):\n                 Terminology and Channel Mapping Examples\", RFC 3759,\n\
    \                 April 2004.\n   [BRA97]       Bradner, S., \"Key words for use\
    \ in RFCs to Indicate\n                 Requirement Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   [IKEV2]       Kaufman, C., \"Internet Key Exchange (IKEv2) Protocol\"\
    ,\n                 RFC 4306, December 2005.\n   [ESP]         Kent, S., \"IP\
    \ Encapsulating Security Payload (ESP)\",\n                 RFC 4303, December\
    \ 2005.\n   [AH]          Kent, S., \"IP Authentication Header\", RFC 4302,\n\
    \                 December 2005.\n   [IPSEC-ROHC]  Ertekin, E., Christou, C.,\
    \ and C. Bormann, \"IPsec\n                 Extensions to Support Robust Header\
    \ Compression over\n                 IPsec\", RFC 5858, May 2010.\n   [IKE-ROHC]\
    \    Ertekin, E., Christou, C., Jasani, R., Kivinen, T., and\n               \
    \  C. Bormann, \"IKEv2 Extensions to Support Robust Header\n                 Compression\
    \ over IPsec\", RFC 5857, May 2010.\n   [PROTOCOL]    IANA, \"Assigned Internet\
    \ Protocol Numbers\",\n                 <http://www.iana.org>.\n   [IPCOMP]  \
    \    Shacham, A., Monsour, B., Pereira, R., and M. Thomas,\n                 \"\
    IP Payload Compression Protocol (IPComp)\", RFC 3173,\n                 September\
    \ 2001.\n   [ROHCV2]      Pelletier, G. and K. Sandlund, \"RObust Header\n   \
    \              Compression Version 2 (ROHCv2): Profiles for RTP, UDP,\n      \
    \           IP, ESP and UDP-Lite\", RFC 5225, April 2008.\n   [REORDR]      Pelletier,\
    \ G., Jonsson, L-E., and K. Sandlund, \"RObust\n                 Header Compression\
    \ (ROHC): ROHC over Channels That Can\n                 Reorder Packets\", RFC\
    \ 4224, January 2006.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Emre Ertekin\n   Booz Allen Hamilton\n   5220 Pacific\
    \ Concourse Drive, Suite 200\n   Los Angeles, CA  90045\n   US\n   EMail: ertekin_emre@bah.com\n\
    \   Rohan Jasani\n   Booz Allen Hamilton\n   13200 Woodland Park Dr.\n   Herndon,\
    \ VA  20171\n   US\n   EMail: ro@breakcheck.com\n   Chris Christou\n   Booz Allen\
    \ Hamilton\n   13200 Woodland Park Dr.\n   Herndon, VA  20171\n   US\n   EMail:\
    \ christou_chris@bah.com\n   Carsten Bormann\n   Universitaet Bremen TZI\n   Postfach\
    \ 330440\n   Bremen  D-28334\n   Germany\n   EMail: cabo@tzi.org\n"
