- contents:
  - '                     Telnet Data Encryption Option

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document describes a the telnet encryption option as a generic\n
    \  method of providing data confidentiality services for the telnet data\n   stream.
    \ While this document summarizes currently utilized encryption\n   types and codes,
    it does not define a specific encryption algorithm.\n   Separate documents are
    to be published defining implementations of\n   this option for each encryption
    algorithm.\n"
  title: Abstract
- contents:
  - "1.  Command Names and Codes\n   ENCRYPT         38\n       Encryption Commands\n
    \      IS               0\n       SUPPORT          1\n       REPLY            2\n
    \      START            3\n       END              4\n       REQUEST-START    5\n
    \      REQUEST-END      6\n       ENC_KEYID        7\n       DEC_KEYID        8\n
    \      Encryption Types\n       NULL             0\n       DES_CFB64        1\n
    \      DES_OFB64        2\n       DES3_CFB64       3\n       DES3_OFB64       4\n
    \      CAST5_40_CFB64   8\n       CAST5_40_OFB64   9\n       CAST128_CFB64   10\n
    \      CAST128_OFB64   11\n       Following historical practice, future encryption
    type numbers\n       will be assigned by the IANA under a First Come First Served\n
    \      policy as outlined by RFC 2434 [3].  Despite the fact that\n       authentication
    type numbers are allocated out of an 8-bit number\n       space (as are most values
    in the telnet specification) it is not\n       anticipated that the number space
    is or will become in danger of\n       being exhausted.  However, if this should
    become an issue, when\n       over 50% of the number space becomes allocated,
    the IANA shall\n       refer allocation requests to either the IESG or a designated\n
    \      expert for approval.\n"
  title: 1.  Command Names and Codes
- contents:
  - "2.  Command Meanings\n   IAC WILL ENCRYPT\n      The sender of this command is
    willing to send encrypted data.\n   IAC WONT ENCRYPT\n      The sender of this
    command refuses to send encrypted data.\n   IAC DO ENCRYPT\n      The sender of
    this command is willing to receive encrypted data.\n   IAC DONT ENCRYPT\n      The
    sender of this command refuses to accept encrypted data.\n   IAC SB ENCRYPT SUPPORT
    encryption-type-list IAC SE\n      The sender of this command is stating which
    types of encryption it\n      will support.  Only the side of the connection that
    is DO ENCRYPT\n      may send the SUPPORT command.  The current types of encryption
    are\n      listed in the current version of the Assigned Numbers document\n      [1].\n
    \     The encryption-type-list may only include types which can actually\n      be
    supported during the current session.  If ENCRYPT is negotiated\n      in conjunction
    with AUTH the SUPPORT message MUST NOT be sent\n      until after the session
    key has been determined.  Otherwise,\n      it is impossible to know if the selected
    encryption type can be\n      properly initialized based upon the type and length
    of the key\n      that is available.\"\n   IAC SB ENCRYPT IS encryption-type ...
    IAC SE\n      The sender of this command is stating which type of encryption to\n
    \     use, and any initial data that is needed.  Only the side of the\n      connection
    that is WILL ENCRYPT may send the IS command to\n      initialize the encryption-type
    scheme.\n   IAC SB ENCRYPT REPLY encryption-type ... IAC SE\n      The sender
    of this command is continuing the initial data exchange\n      in order to initialize
    the encryption-type scheme.  Only the side\n      of the connection that is DO
    ENCRYPT may send the REPLY command.\n   IAC SB ENCRYPT START keyid IAC SE\n      The
    sender of this command is stating that all data following the\n      command in
    the data stream will be be encrypted via the previously\n      negotiated method
    of data encryption.  Only the side of the\n      connection that is WILL ENCRYPT
    may send the START command.\n      The keyid is a variable length field.  It is
    used by various\n      encryption mechanisms to identify which encryption key
    is to be\n      used, when multiple encryption keys might be known on either side\n
    \     of the connection.  The keyid field is encoded with the most\n      significant
    byte first, and a keyid value of zero is reserved to\n      indicate the default
    encryption key (this would typically be an\n      encryption key derived during
    authentication, with the\n      AUTHENTICATION option).  The keyid field must
    be at least one byte\n      long.  The only valid values for \"keyid\" will be
    those that have\n      been received in a DEC_KEYID command.\n   IAC SB ENCRYPT
    END IAC SE\n      The sender of this command is stating that all data following
    the\n      command in the data stream will not be encrypted.  Only the side\n
    \     of the connection that is WILL ENCRYPT may send the END\n   IAC SB ENCRYPT
    REQUEST-START keyid IAC SE\n      The sender of this command requests that the
    remote side begin\n      encryption of the telnet data stream.  Only the side
    of the\n      connection that is DO ENCRYPT may send the REQUEST-START command.\n
    \     The keyid is only advisory, and my be omitted.\n   IAC SB ENCRYPT REQUEST-END
    IAC SE\n      The sender of this command requests that the remote side stop\n
    \     encryption of the telnet data stream.  Only the side of the\n      connection
    that is DO ENCRYPT may send the REQUEST-END command.\n   IAC SB ENCRYPT ENC_KEYID
    keyid IAC SE\n      The sender of this requests that the remote side verify that\n
    \     \"keyid\" maps to a valid key; or verifies that the \"keyid\" received\n
    \     in a DEC_KEYID command is valid.  If keyid is omitted, it implies\n      that
    there are no more known keyids, and that the attempt to find\n      a common keyid
    has failed.  Only the side of the connection that\n      is WILL ENCRYPT may send
    the ENC_KEYID command.\n   IAC SB ENCRYPT DEC_KEYID keyid IAC SE\n      The sender
    of this requests that the remote side verify that\n      \"keyid\" maps to a valid
    key on the remote side; or verifies that\n      the \"keyid\" received in a ENC_KEYID
    command is valid.  If keyid is\n      omitted, it implies that there are no more
    known keyids, and that\n      the attempt to find a common keyid has failed.  Only
    the side of\n      the connection that is DO ENCRYPT may send the DEC_KEYID command.\n"
  title: 2.  Command Meanings
- contents:
  - "3.  Default Specification\n   The default specification for this option is\n
    \     WONT ENCRYPT\n      DONT ENCRYPT\n   meaning there will not be any encryption
    of the Telnet data stream.\n"
  title: 3.  Default Specification
- contents:
  - "4.  Motivation\n   The Telnet protocol has no form of protection from some intervening\n
    \  gateway looking at IP packets as they travel through the network.\n   This
    is especially dangerous when passwords are sent as clear text\n   over the network.
    \ This option provides a method for encrypting the\n   data stream.\n"
  title: 4.  Motivation
- contents:
  - "5.  Implementation Rules\n   Once the Encryption option is in effect, all data
    in the negotiated\n   direction, including TELNET options, is encrypted.  Encryption
    begins\n   with the octet of data immediately following the \"IAC SB ENCRYPT\n
    \  START encryption-type IAC SE\" command.  Encryption ends after the\n   \"IAC
    SB ENCRYPT END IAC SE\" command.\n   WILL and DO are used only at the beginning
    of the connection to\n   obtain and grant permission for future negotiations.
    \ The ENCRYPT\n   option must be negotiated in both directions.\n   Once the two
    hosts have exchanged a WILL and a DO, the sender of the\n   DO ENCRYPT must send
    a ENCRYPT SUPPORT command to let the remote side\n   know the types of encryption
    it is willing to accept.  In the\n   request, a list of supported encryption schemes
    is sent.  Only the\n   sender of the DO may send a list of supported encryption
    types (IAC\n   SB ENCRYPT SUPPORT encryption-type-list IAC SE).  Only the sender
    of\n   the WILL may actually transmit encrypted data.  This is initiated via\n
    \  the \"IAC SB ENCRYPT START IAC SE\" command, and terminated via the\n   \"IAC
    SB ENCRYPT END IAC SE\" command.  If a START is received, and\n   then a second
    START is received before receiving an END, the second\n   START is ignored.\n
    \  If the sender of the DO would like the remote side to begin sending\n   encrypted
    data, it can send the \"IAC SB ENCRYPT REQUEST-START IAC SE\"\n   command.  If
    the sender of the DO would like the remote side to stop\n   sending encrypted
    data, it can send the \"IAC SB ENCRYPT REQUEST-STOP\n   IAC SE\" command.\n   If
    the receiver of the SUPPORT command does not support any of the\n   encryption
    types listed in the SUPPORT command, it should send an\n   \"IAC SB ENCRYPT IS
    NULL IAC SE\" to indicate that there are no\n   encryption types in common.  It
    may also send an IAC WONT ENCRYPT\n   command to turn off the ENCRYPT option.\n
    \  The order of the encryption types in a SUPPORT command must be\n   ordered
    to indicate a preference for different encryption types, the\n   first type being
    the most preferred, and the last type the least\n   preferred.\n   If the ENCRYPT
    option has been enabled, and encrypted data is being\n   received, the receipt
    of an \"IAC WONT ENCRYPT\" implies the receipt of\n   an \"IAC SB ENCRYPT END
    IAC SE\", e.g., the Telnet data stream is no\n   longer encrypted.\n   The following
    example demonstrates the use of the option:\n      Host1                            Host2\n
    \     [ Host1 requests Host2 negotiate the encryption of data that\n        Host2
    sends to Host1.  Host2 agrees to negotiate the encryption\n        of data that
    it sends to Host1.  ]\n      DO ENCRYPT\n                                           WILL
    ENCRYPT\n      [ Host1 requests that Host2 enable encryption as soon as the\n
    \       initialization is completed, and informs Host2 that is supports\n        DES_CFB64.
    \ ]\n      IAC SB ENCRYPT REQUEST-START IAC\n      SE\n      IAC SB ENCRYPT SUPPORT
    DES_CFB64\n      IAC SE\n      [ Host2 sends the initial feed to Host1.  Host1
    acknowledges\n        receipt of the IV.  ]\n                                       IAC
    SB ENCRYPT IS DES_CFB64\n                                       CFB64_IV  144
    146 63 229 237 148\n                                       81 143 IAC SE\n      IAC
    SB ENCRYPT REPLY DES_CFB64\n      CFB64_IV_OK  103 207 181 71 224\n      55 229
    98 IAC SE\n      [ Host2 is now free to start sending encrypted data, and since
    a\n        REQUEST-START was received, it enables encryption.  ]\n                                       IAC
    SB ENCRYPT START IAC SE\n      [ All data from Host2 to Host1 is now encrypted.
    \ ]\n                                       IAC SB ENCRYPT END IAC SE\n      [
    All data from Host2 to Host1 is now in clear text again.  ]\n   It is expected
    that any implementation that supports the Telnet\n   ENCRYPT option will support
    all of this specification.\n"
  title: 5.  Implementation Rules
- contents:
  - "6.  Security Considerations\n   The ENCRYPT option used in isolation provides
    protection against\n   passive attacks, but not against active attacks.  In other
    words, it\n   will  provide protection from someone who is just watching the IP\n
    \  packets as they pass through the network.  However, an attacker who\n   is
    able to modify packets in flight could prevent the ENCRYPT option\n   from being
    negotiated.\n   This flaw can be remedied by using the Telnet Authentication option\n
    \  alongside the ENCRYPT option.  Specifically, setting\n   ENCRYPT_USING_TELOPT
    in the authentication-type-pair can be used to\n   force that Encryption be negotiated
    even in the face of active\n   attacks.\n   In addition, an active attacker can
    interfere with attempts to start\n   or restart encryption.  If encryption is
    requested by the user, and\n   the client is unable to negotiate enabling or re-enabling
    encryption,\n   the client must assume that it is being attacked, and MUST\n   immediately
    terminate the telnet connection.\n"
  title: 6.  Security Considerations
- contents:
  - "7.  Future directions for Telnet Encryption\n   The specification defines a method
    for providing data confidentiality\n   to the telnet data stream.  Unfortunately
    all of the encryption\n   mechanism provided under this option do not provide
    data integrity,\n   because of the complexity of specifying a protocol which provided\n
    \  integrity services efficiently in a stream-oriented protocol.\n   The TELNET
    START_TLS specification provides a scheme which provides\n   confidentiality,
    integrity, and compression, and future work for\n   telnet encryption should closely
    examine using this specification.\n   One promising approach would use the anonymous
    Diffie-Hellman mode of\n   TLS, followed by the telnet AUTHENTICATION option where
    the\n   authentication mechanism would include the client and server finished\n
    \  messages computed during the TLS negotiation.\n"
  title: 7.  Future directions for Telnet Encryption
- contents:
  - "8.  Acknowledgments\n   This document was originally written by Dave Borman of
    Cray Research,\n   with the assistance of Theodore Ts'o of MIT and the IETF Telnet\n
    \  Working Group.\n"
  title: 8.  Acknowledgments
- contents:
  - "9.  References\n   [1] Reynolds, J. and J. Postel, \"Telnet Protocol Specification\",
    STD\n       8, RFC 854, May 1983.\n   [2] Ts'o, T. and J. Altman, \"Telnet Authentication
    Option\", RFC 2941,\n       September 2000.\n   [3] Alvestrand, H. and T. Narten,
    \"Guidelines for Writing an IANA\n       Considerations Section in RFCs\", BCP
    26, RFC 2434, October 1998.\n"
  title: 9.  References
- contents:
  - "10.  Author's Address\n   Theodore Ts'o, Editor\n   VA Linux Systems\n   43 Pleasant
    St.\n   Medford, MA 02155\n   Phone: (781) 391-3464\n   EMail: tytso@mit.edu\n"
  title: 10.  Author's Address
- contents:
  - "11.  Full Copyright Statement\n   Copyright (C) The Internet Society (2000).
    \ All Rights Reserved.\n   This document and translations of it may be copied
    and furnished to\n   others, and derivative works that comment on or otherwise
    explain it\n   or assist in its implementation may be prepared, copied, published\n
    \  and distributed, in whole or in part, without restriction of any\n   kind,
    provided that the above copyright notice and this paragraph are\n   included on
    all such copies and derivative works.  However, this\n   document itself may not
    be modified in any way, such as by removing\n   the copyright notice or references
    to the Internet Society or other\n   Internet organizations, except as needed
    for the purpose of\n   developing Internet standards in which case the procedures
    for\n   copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: 11.  Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
