- contents:
  - '                            IP Multicast MIB

    '
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n
    \  for use with network management protocols in the Internet community.\n   In
    particular, it describes objects used for managing multicast\n   function, independent
    of the specific multicast protocol(s) in use.\n   This document obsoletes RFC
    2932.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .
    . . . . . .  2\n     1.1.  Terminology  . . . . . . . . . . . . . . . . . . .
    . . . .  2\n   2.  History  . . . . . . . . . . . . . . . . . . . . . . . . .
    . .  2\n   3.  The Internet-Standard Management Framework . . . . . . . . . .
    \ 2\n   4.  Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .  3\n
    \  5.  IMPORTed MIB Modules and REFERENCE Clauses . . . . . . . . . .  4\n   6.
    \ Definitions  . . . . . . . . . . . . . . . . . . . . . . . . .  4\n   7.  Security
    Considerations  . . . . . . . . . . . . . . . . . . . 54\n     7.1.  SNMPv3 .
    . . . . . . . . . . . . . . . . . . . . . . . . . 54\n     7.2.  Writeable Objects
    \ . . . . . . . . . . . . . . . . . . . . 54\n     7.3.  Readable Objects . .
    . . . . . . . . . . . . . . . . . . . 55\n   8.  IANA Considerations  . . . .
    . . . . . . . . . . . . . . . . . 55\n   9.  Acknowledgements . . . . . . . .
    . . . . . . . . . . . . . . . 55\n   10. References . . . . . . . . . . . . .
    . . . . . . . . . . . . . 56\n     10.1. Normative References . . . . . . . .
    . . . . . . . . . . . 56\n     10.2. Informative References . . . . . . . . .
    . . . . . . . . . 57\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This MIB describes objects used for managing IP multicast
    function,\n   including IP multicast routing.  These objects are independent of
    the\n   specific multicast routing protocol in use.  Managed objects specific\n
    \  to particular multicast protocols are defined elsewhere.\n"
  - contents:
    - "1.1.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
      \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and
      \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
    title: 1.1.  Terminology
  title: 1.  Introduction
- contents:
  - "2.  History\n   This document obsoletes [RFC2932].  The MIB module defined by
    this\n   document is a re-working of the MIB module from [RFC2932], with\n   changes
    that include the following:\n   o  This MIB module includes support for IPv6 addressing
    and the IPv6\n      scoped address architecture.  [RFC2932] supported only IPv4.\n
    \  o  This MIB module allows several multicast protocols to perform\n      routing
    on a single interface, where [RFC2932] assumed each\n      interface supported
    at most one multicast routing protocol.\n      Multicast routing protocols are
    now per-route, see\n      ipMcastRouteProtocol.\n   o  This MIB module includes
    objects that are not specific to\n      multicast routing.  It allows management
    of multicast function on\n      systems that do not perform routing, whereas [RFC2932]
    was\n      restricted to multicast routing.\n   o  This MIB module includes a
    table of Source-Specific Multicast\n      (SSM) address ranges to which SSM semantics
    [RFC3569] should be\n      applied.\n   o  This MIB module includes a table of
    local applications that are\n      receiving multicast data.\n   o  This MIB module
    includes a table of multicast scope zones.\n"
  title: 2.  History
- contents:
  - "3.  The Internet-Standard Management Framework\n   For a detailed overview of
    the documents that describe the current\n   Internet-Standard Management Framework,
    please refer to section 7 of\n   [RFC3410].\n   Managed objects are accessed via
    a virtual information store, termed\n   the Management Information Base or MIB.
    \ MIB objects are generally\n   accessed through the Simple Network Management
    Protocol (SNMP).\n   Objects in the MIB are defined using the mechanisms defined
    in the\n   Structure of Management Information (SMI).  This memo specifies a MIB\n
    \  module that is compliant to the SMIv2, which is described in STD 58,\n   ([RFC2578],
    [RFC2579] and [RFC2580]).\n"
  title: 3.  The Internet-Standard Management Framework
- contents:
  - "4.  Overview\n   This MIB module contains two scalars and eight tables.  The
    tables\n   are:\n   1.  The IP Multicast Interface Table, which contains multicast\n
    \      information specific to interfaces.\n   2.  The IP Multicast SSM Range
    Table, which contains one row per\n       range of multicast group addresses to
    which Source-Specific\n       Multicast semantics [RFC3569] should be applied.\n
    \  3.  The IP Multicast Route Table, which contains multicast routing\n       information
    for IP datagrams sent by particular sources to the IP\n       multicast groups
    known to a system.\n   4.  The IP Multicast Routing Next Hop Table, which contains\n
    \      information about next-hops for the routing of IP multicast\n       datagrams.
    \ Each entry is one of a list of next-hops on outgoing\n       interfaces for
    particular sources sending to a particular\n       multicast group address.\n
    \  5.  The IP Multicast Scope Boundary Table, which contains the\n       boundaries
    configured for multicast scopes [RFC2365].\n   6.  The IP Multicast Scope Name
    Table, which contains human-readable\n       names for multicast scopes.\n   7.
    \ The IP Multicast Local Listener Table, which contains identifiers\n       for
    local applications that are receiving multicast data.\n   8.  The IP Multicast
    Zone Table, which contains an entry for each\n       scope zone known to a system,
    and maps each zone to the multicast\n       address range that is the corresponding
    scope.\n   This MIB module uses textual conventions defined in the IF-MIB\n   [RFC2863],
    the INET-ADDRESS-MIB [RFC4001] and the IANA-RTPROTO-MIB.\n"
  title: 4.  Overview
- contents:
  - "5.  IMPORTed MIB Modules and REFERENCE Clauses\n   The MIB modules defined in
    this document IMPORTs definitions\n   normatively from the following MIB modules,
    beyond [RFC2578],\n   [RFC2579], and [RFC2580]: HCNUM-TC [RFC2856], IF-MIB [RFC2863],
    IANA-\n   RTPROTO-MIB, SNMP-FRAMEWORK-MIB [RFC3411], INET-ADDRESS-MIB\n   [RFC4001],
    and LANGTAG-TC-MIB [RFC5131].\n   This MIB module also includes REFERENCE clauses
    that make normative\n   references to Administratively Scoped IP Multicast [RFC2365],\n
    \  Unicast-Prefix-based IPv6 Multicast Addresses [RFC3306], IPv6 Scoped\n   Address
    Architecture [RFC4007], and IPv6 Addressing Architecture\n   [RFC4291].\n   Finally,
    this MIB module makes informative references to several RFCs\n   in the text of
    DESCRIPTION clauses, including sysApplMIB [RFC2287],\n   IP-MIB [RFC4293], Source-Specific
    Multicast [RFC3569], Protocol\n   Independent Multicast-Sparse Mode version 2
    (PIM-SMv2) Protocol\n   Specification [RFC4601], Bidirectional Protocol Independent
    Multicast\n   (BIDIR-PIM) [RFC5015], and Tags for Identifying Languages [RFC4646].\n"
  title: 5.  IMPORTed MIB Modules and REFERENCE Clauses
- contents:
  - '6.  Definitions

    '
  - 'IPMCAST-MIB DEFINITIONS ::= BEGIN

    '
  - "IMPORTS\n    MODULE-IDENTITY, OBJECT-TYPE,\n    mib-2, Unsigned32, Counter64,\n
    \   Gauge32, TimeTicks              FROM SNMPv2-SMI         -- [RFC2578]\n    RowStatus,
    TruthValue,\n    StorageType, TimeStamp          FROM SNMPv2-TC          -- [RFC2579]\n
    \   MODULE-COMPLIANCE, OBJECT-GROUP FROM SNMPv2-CONF        -- [RFC2580]\n    CounterBasedGauge64
    \            FROM HCNUM-TC           -- [RFC2856]\n    InterfaceIndexOrZero,\n
    \   InterfaceIndex                  FROM IF-MIB             -- [RFC2863]\n    IANAipRouteProtocol,\n
    \   IANAipMRouteProtocol            FROM IANA-RTPROTO-MIB\n    SnmpAdminString
    \                FROM SNMP-FRAMEWORK-MIB -- [RFC3411]\n    InetAddress, InetAddressType,\n
    \   InetAddressPrefixLength,\n    InetZoneIndex, InetVersion      FROM INET-ADDRESS-MIB
    \  -- [RFC4001]\n    LangTag                         FROM LANGTAG-TC-MIB;    --
    [RFC5131]\n"
  - "ipMcastMIB MODULE-IDENTITY\n    LAST-UPDATED \"200711090000Z\" -- 9 November
    2007\n    ORGANIZATION \"IETF MBONE Deployment (MBONED) Working Group\"\n    CONTACT-INFO
    \"David McWalter\n                  Data Connection Limited\n                  100
    Church Street\n                  Enfield, EN2 6BQ\n                  UK\n                  Phone:
    +44 208 366 1177\n                  EMail: dmcw@dataconnection.com\n                  Dave
    Thaler\n                  Microsoft Corporation\n                  One Microsoft
    Way\n                  Redmond, WA 98052-6399\n                  US\n                  Phone:
    +1 425 703 8835\n                  EMail: dthaler@dthaler.microsoft.com\n                  Andrew
    Kessler\n                  Cisco Systems\n                  425 E. Tasman Drive\n
    \                 San Jose, CA 95134\n                  US\n                  Phone:
    +1 408 526 5139\n                  EMail: kessler@cisco.com\"\n    DESCRIPTION\n
    \           \"The MIB module for management of IP Multicast, including\n            multicast
    routing, data forwarding, and data reception.\n            Copyright (C) The IETF
    Trust (2007).  This version of this\n            MIB module is part of RFC 5132;
    see the RFC itself for full\n            legal notices.\"\n    REVISION     \"200711090000Z\"
    -- 9 November 2007\n    DESCRIPTION  \"Initial version, published as RFC 5132.\n
    \                This MIB module obsoletes IPMROUTE-STD-MIB defined by\n                 [RFC2932].
    \ Changes include the following:\n                 o  This MIB module includes
    support for IPv6 addressing\n                    and the IPv6 scoped address architecture.
    \ [RFC2932]\n                    supported only IPv4.\n                 o  This
    MIB module allows several multicast protocols\n                    to perform
    routing on a single interface, where\n                    [RFC2932] assumed each
    interface supported at most\n                    one multicast routing protocol.
    \ Multicast routing\n                    protocols are now per-route, see\n                    ipMcastRouteProtocol.\n
    \                o  This MIB module includes objects that are not\n                    specific
    to multicast routing.  It allows management\n                    of multicast
    function on systems that do not perform\n                    routing, whereas
    [RFC2932] was restricted to\n                    multicast routing.\n                 o
    \ This MIB module includes a table of Source-Specific\n                    Multicast
    (SSM) address ranges to which SSM\n                    semantics [RFC3569] should
    be applied.\n                 o  This MIB module includes a table of local\n                    applications
    that are receiving multicast data.\n                 o  This MIB module includes
    a table of multicast scope\n                    zones.\"\n    ::= { mib-2 168
    }\n"
  - '--

    '
  - '-- Top-level structure of the MIB

    '
  - '--

    '
  - 'ipMcast      OBJECT IDENTIFIER ::= { ipMcastMIB 1 }

    '
  - "ipMcastEnabled OBJECT-TYPE\n    SYNTAX     TruthValue\n    MAX-ACCESS read-write\n
    \   STATUS     current\n    DESCRIPTION\n            \"The enabled status of IP
    Multicast function on this\n            system.\n            The storage type
    of this object is determined by\n            ipMcastDeviceConfigStorageType.\"\n
    \   ::= { ipMcast 1 }\n"
  - "ipMcastRouteEntryCount OBJECT-TYPE\n    SYNTAX     Gauge32\n    MAX-ACCESS read-only\n
    \   STATUS     current\n    DESCRIPTION\n            \"The number of rows in the
    ipMcastRouteTable.  This can be\n            used to check for multicast routing
    activity, and to monitor\n            the multicast routing table size.\"\n    ::=
    { ipMcast 2 }\n"
  - "ipMcastDeviceConfigStorageType OBJECT-TYPE\n    SYNTAX      StorageType\n    MAX-ACCESS
    \ read-write\n    STATUS      current\n    DESCRIPTION\n            \"The storage
    type used for the global IP multicast\n            configuration of this device,
    comprised of the objects\n            listed below.  If this storage type takes
    the value\n            'permanent', write-access to the listed objects need not
    be\n            allowed.\n            The objects described by this storage type
    are:\n            ipMcastEnabled.\"\n       DEFVAL { nonVolatile }\n    ::= {
    ipMcast 11 }\n"
  - '--

    '
  - '--  The Multicast Interface Table

    '
  - '--

    '
  - "ipMcastInterfaceTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF IpMcastInterfaceEntry\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The
    (conceptual) table used to manage the multicast\n            protocol active on
    an interface.\"\n    ::= { ipMcast 3 }\n"
  - "ipMcastInterfaceEntry OBJECT-TYPE\n    SYNTAX     IpMcastInterfaceEntry\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"An entry
    (conceptual row) containing the multicast protocol\n            information for
    a particular interface.\n            Per-interface multicast forwarding statistics
    are also\n            available in ipIfStatsTable.\"\n    REFERENCE \"RFC 4293
    ipIfStatsTable\"\n    INDEX      { ipMcastInterfaceIPVersion,\n                 ipMcastInterfaceIfIndex
    }\n    ::= { ipMcastInterfaceTable 1 }\n"
  - "IpMcastInterfaceEntry ::= SEQUENCE {\n    ipMcastInterfaceIPVersion         InetVersion,\n
    \   ipMcastInterfaceIfIndex           InterfaceIndex,\n    ipMcastInterfaceTtl
    \              Unsigned32,\n    ipMcastInterfaceRateLimit         Unsigned32,\n
    \   ipMcastInterfaceStorageType       StorageType\n"
  - '}

    '
  - "ipMcastInterfaceIPVersion OBJECT-TYPE\n    SYNTAX     InetVersion\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"The IP version
    of this row.\"\n    ::= { ipMcastInterfaceEntry 1 }\n"
  - "ipMcastInterfaceIfIndex OBJECT-TYPE\n    SYNTAX     InterfaceIndex\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"The index
    value that uniquely identifies the interface to\n            which this entry
    is applicable.  The interface identified by\n            a particular value of
    this index is the same interface as\n            identified by the same value
    of the IF-MIB's ifIndex.\"\n    ::= { ipMcastInterfaceEntry 2 }\n"
  - "ipMcastInterfaceTtl OBJECT-TYPE\n    SYNTAX     Unsigned32 (0..256)\n    MAX-ACCESS
    read-write\n    STATUS     current\n    DESCRIPTION\n            \"The datagram
    Time to Live (TTL) threshold for the\n            interface.  Any IP multicast
    datagrams with a TTL (IPv4) or\n            Hop Limit (IPv6) less than this threshold
    will not be\n            forwarded out the interface.  The default value of 0
    means\n            all multicast packets are forwarded out the interface.  A\n
    \           value of 256 means that no multicast packets are forwarded\n            out
    the interface.\"\n    DEFVAL     { 0 }\n    ::= { ipMcastInterfaceEntry 3 }\n"
  - "ipMcastInterfaceRateLimit OBJECT-TYPE\n    SYNTAX     Unsigned32\n    MAX-ACCESS
    read-write\n    STATUS     current\n    DESCRIPTION\n            \"The rate-limit,
    in kilobits per second, of forwarded\n            multicast traffic on the interface.
    \ A rate-limit of 0\n            indicates that no rate limiting is done.\"\n
    \   DEFVAL     { 0 }\n    ::= { ipMcastInterfaceEntry 4 }\n"
  - "ipMcastInterfaceStorageType OBJECT-TYPE\n    SYNTAX      StorageType\n    MAX-ACCESS
    \ read-write\n    STATUS      current\n    DESCRIPTION\n            \"The storage
    type for this row.  Rows having the value\n            'permanent' need not allow
    write-access to any columnar\n            objects in the row.\"\n       DEFVAL
    { nonVolatile }\n    ::= { ipMcastInterfaceEntry 5 }\n"
  - '--

    '
  - '-- The SSM Range Table

    '
  - '--

    '
  - "ipMcastSsmRangeTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF IpMcastSsmRangeEntry\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"This
    table is used to create and manage the range(s) of\n            group addresses
    to which SSM semantics should be applied.\"\n    REFERENCE \"RFC 3569\"\n    ::=
    { ipMcast 4 }\n"
  - "ipMcastSsmRangeEntry OBJECT-TYPE\n    SYNTAX     IpMcastSsmRangeEntry\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"An entry
    (conceptual row) containing a range of group\n            addresses to which SSM
    semantics should be applied.\n            Object Identifiers (OIDs) are limited
    to 128\n            sub-identifiers, but this limit is not enforced by the\n            syntax
    of this entry.  In practice, this does not present\n            a problem, because
    IP address types allowed by conformance\n            statements do not exceed
    this limit.\"\n    REFERENCE \"RFC 3569\"\n    INDEX      { ipMcastSsmRangeAddressType,\n
    \                ipMcastSsmRangeAddress,\n                 ipMcastSsmRangePrefixLength
    }\n    ::= { ipMcastSsmRangeTable 1 }\n"
  - "IpMcastSsmRangeEntry ::= SEQUENCE {\n    ipMcastSsmRangeAddressType   InetAddressType,\n
    \   ipMcastSsmRangeAddress       InetAddress,\n    ipMcastSsmRangePrefixLength
    \ InetAddressPrefixLength,\n    ipMcastSsmRangeRowStatus     RowStatus,\n    ipMcastSsmRangeStorageType
    \  StorageType\n"
  - '}

    '
  - "ipMcastSsmRangeAddressType OBJECT-TYPE\n    SYNTAX     InetAddressType\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The address
    type of the multicast group prefix.\"\n    ::= { ipMcastSsmRangeEntry 1 }\n"
  - "ipMcastSsmRangeAddress OBJECT-TYPE\n    SYNTAX     InetAddress\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The multicast
    group address which, when combined with\n            ipMcastSsmRangePrefixLength,
    gives the group prefix for this\n            SSM range.  The InetAddressType is
    given by\n            ipMcastSsmRangeAddressType.\n            This address object
    is only significant up to\n            ipMcastSsmRangePrefixLength bits.  The
    remaining address\n            bits are set to zero.  This is especially important
    for this\n            index field, which is part of the index of this entry.  Any\n
    \           non-zero bits would signify an entirely different entry.\n            For
    IPv6 SSM address ranges, only ranges prefixed by\n            FF3x::/16 are permitted,
    where 'x' is a valid IPv6 RFC 4291\n            multicast address scope.  The
    syntax of the address range is\n            given by RFC 3306, Sections 4 and
    7.\n            For addresses of type ipv4z or ipv6z, the appended zone\n            index
    is significant even though it lies beyond the prefix\n            length.  The
    use of these address types indicate that this\n            SSM range entry applies
    only within the given zone.  Zone\n            index zero is not valid in this
    table.\n            If non-global scope SSM range entries are present, then\n
    \           consistent ipMcastBoundaryTable entries are required on\n            routers
    at the zone boundary.\"\n    REFERENCE \"RFC 2365, RFC 4291 Section 2.7, RFC 3306
    Sections 4, 6,\n            and 7\"\n    ::= { ipMcastSsmRangeEntry 2 }\n"
  - "ipMcastSsmRangePrefixLength OBJECT-TYPE\n    SYNTAX     InetAddressPrefixLength\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The
    length in bits of the mask which, when combined with\n            ipMcastSsmRangeAddress,
    gives the group prefix for this SSM\n            range.\n            The InetAddressType
    is given by ipMcastSsmRangeAddressType.\n            For values 'ipv4' and 'ipv4z',
    this object must be in the\n            range 4..32.  For values 'ipv6' and 'ipv6z',
    this object\n            must be in the range 8..128.\"\n    REFERENCE \"RFC 2365,
    RFC 4291 Section 2.7, RFC 3306 Sections 4, 6,\n            and 7\"\n    ::= {
    ipMcastSsmRangeEntry 3 }\n"
  - "ipMcastSsmRangeRowStatus OBJECT-TYPE\n    SYNTAX     RowStatus\n    MAX-ACCESS
    read-create\n    STATUS     current\n    DESCRIPTION\n            \"The status
    of this row, by which rows in this table can\n            be created and destroyed.\n
    \           This status object can be set to active(1) without setting\n            any
    other columnar objects in this entry.\n            All writeable objects in this
    entry can be modified when the\n            status of this entry is active(1).\"\n
    \   ::= { ipMcastSsmRangeEntry 4 }\n"
  - "ipMcastSsmRangeStorageType OBJECT-TYPE\n    SYNTAX      StorageType\n    MAX-ACCESS
    \ read-create\n    STATUS      current\n    DESCRIPTION\n           \"The storage
    type for this row.  Rows having the value\n           'permanent' need not allow
    write-access to any columnar\n           objects in the row.\"\n       DEFVAL
    { nonVolatile }\n    ::= { ipMcastSsmRangeEntry 5 }\n"
  - '--

    '
  - '--  The IP Multicast Routing Table

    '
  - '--

    '
  - "ipMcastRouteTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF IpMcastRouteEntry\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The
    (conceptual) table containing multicast routing\n            information for IP
    datagrams sent by particular sources\n            to the IP multicast groups known
    to this router.\"\n    ::= { ipMcast 5 }\n"
  - "ipMcastRouteEntry OBJECT-TYPE\n    SYNTAX     IpMcastRouteEntry\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"An entry
    (conceptual row) containing the multicast routing\n            information for
    IP datagrams from a particular source and\n            addressed to a particular
    IP multicast group address.\n            OIDs are limited to 128 sub-identifiers,
    but this limit\n            is not enforced by the syntax of this entry.  In practice,\n
    \           this does not present a problem, because IP address types\n            allowed
    by conformance statements do not exceed this limit.\"\n    INDEX      { ipMcastRouteGroupAddressType,\n
    \                ipMcastRouteGroup,\n                 ipMcastRouteGroupPrefixLength,\n
    \                ipMcastRouteSourceAddressType,\n                 ipMcastRouteSource,\n
    \                ipMcastRouteSourcePrefixLength }\n    ::= { ipMcastRouteTable
    1 }\n"
  - "IpMcastRouteEntry ::= SEQUENCE {\n    ipMcastRouteGroupAddressType      InetAddressType,\n
    \   ipMcastRouteGroup                 InetAddress,\n    ipMcastRouteGroupPrefixLength
    \    InetAddressPrefixLength,\n    ipMcastRouteSourceAddressType     InetAddressType,\n
    \   ipMcastRouteSource                InetAddress,\n    ipMcastRouteSourcePrefixLength
    \   InetAddressPrefixLength,\n    ipMcastRouteUpstreamNeighborType  InetAddressType,\n
    \   ipMcastRouteUpstreamNeighbor      InetAddress,\n    ipMcastRouteInIfIndex
    \            InterfaceIndexOrZero,\n    ipMcastRouteTimeStamp             TimeStamp,\n
    \   ipMcastRouteExpiryTime            TimeTicks,\n    ipMcastRouteProtocol              IANAipMRouteProtocol,\n
    \   ipMcastRouteRtProtocol            IANAipRouteProtocol,\n    ipMcastRouteRtAddressType
    \        InetAddressType,\n    ipMcastRouteRtAddress             InetAddress,\n
    \   ipMcastRouteRtPrefixLength        InetAddressPrefixLength,\n    ipMcastRouteRtType
    \               INTEGER,\n    ipMcastRouteOctets                Counter64,\n    ipMcastRoutePkts
    \                 Counter64,\n    ipMcastRouteTtlDropOctets         Counter64,\n
    \   ipMcastRouteTtlDropPackets        Counter64,\n    ipMcastRouteDifferentInIfOctets
    \  Counter64,\n    ipMcastRouteDifferentInIfPackets  Counter64,\n    ipMcastRouteBps
    \                  CounterBasedGauge64\n"
  - '}

    '
  - "ipMcastRouteGroupAddressType OBJECT-TYPE\n    SYNTAX     InetAddressType\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"A value
    indicating the address family of the address\n            contained in ipMcastRouteGroup.
    \ Legal values correspond to\n            the subset of address families for which
    multicast\n            forwarding is supported.\"\n    ::= { ipMcastRouteEntry
    1 }\n"
  - "ipMcastRouteGroup OBJECT-TYPE\n    SYNTAX     InetAddress\n    MAX-ACCESS not-accessible\n
    \   STATUS     current\n    DESCRIPTION\n            \"The IP multicast group
    address which, when combined with\n            the corresponding value specified
    in\n            ipMcastRouteGroupPrefixLength, identifies the groups for\n            which
    this entry contains multicast routing information.\n            This address object
    is only significant up to\n            ipMcastRouteGroupPrefixLength bits.  The
    remaining address\n            bits are set to zero.  This is especially important
    for this\n            index field, which is part of the index of this entry.  Any\n
    \           non-zero bits would signify an entirely different entry.\n            For
    addresses of type ipv4z or ipv6z, the appended zone\n            index is significant
    even though it lies beyond the prefix\n            length.  The use of these address
    types indicate that this\n            forwarding state applies only within the
    given zone.  Zone\n            index zero is not valid in this table.\"\n    ::=
    { ipMcastRouteEntry 2 }\n"
  - "ipMcastRouteGroupPrefixLength OBJECT-TYPE\n    SYNTAX     InetAddressPrefixLength\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The
    length in bits of the mask which, when combined with\n            the corresponding
    value of ipMcastRouteGroup, identifies the\n            groups for which this
    entry contains multicast routing\n            information.\n            The InetAddressType
    is given by\n            ipMcastRouteGroupAddressType.  For values 'ipv4' and\n
    \           'ipv4z', this object must be in the range 4..32.  For values\n            'ipv6'
    and 'ipv6z', this object must be in the range\n            8..128.\"\n    ::=
    { ipMcastRouteEntry 3 }\n"
  - "ipMcastRouteSourceAddressType OBJECT-TYPE\n    SYNTAX     InetAddressType\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"A value
    indicating the address family of the address\n            contained in ipMcastRouteSource.\n
    \           A value of unknown(0) indicates a non-source-specific entry,\n            corresponding
    to all sources in the group.  Otherwise, the\n            value MUST be the same
    as the value of\n            ipMcastRouteGroupType.\"\n    ::= { ipMcastRouteEntry
    4 }\n"
  - "ipMcastRouteSource OBJECT-TYPE\n    SYNTAX     InetAddress\n    MAX-ACCESS not-accessible\n
    \   STATUS     current\n    DESCRIPTION\n            \"The network address which,
    when combined with the\n            corresponding value of ipMcastRouteSourcePrefixLength,\n
    \           identifies the sources for which this entry contains\n            multicast
    routing information.\n            This address object is only significant up to\n
    \           ipMcastRouteSourcePrefixLength bits.  The remaining address\n            bits
    are set to zero.  This is especially important for this\n            index field,
    which is part of the index of this entry.  Any\n            non-zero bits would
    signify an entirely different entry.\n            For addresses of type ipv4z
    or ipv6z, the appended zone\n            index is significant even though it lies
    beyond the prefix\n            length.  The use of these address types indicate
    that this\n            source address applies only within the given zone.  Zone\n
    \           index zero is not valid in this table.\"\n    ::= { ipMcastRouteEntry
    5 }\n"
  - "ipMcastRouteSourcePrefixLength OBJECT-TYPE\n    SYNTAX     InetAddressPrefixLength\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The
    length in bits of the mask which, when combined with\n            the corresponding
    value of ipMcastRouteSource, identifies\n            the sources for which this
    entry contains multicast routing\n            information.\n            The InetAddressType
    is given by\n            ipMcastRouteSourceAddressType.  For the value 'unknown',\n
    \           this object must be zero.  For values 'ipv4' and 'ipv4z',\n            this
    object must be in the range 4..32.  For values 'ipv6'\n            and 'ipv6z',
    this object must be in the range 8..128.\"\n    ::= { ipMcastRouteEntry 6 }\n"
  - "ipMcastRouteUpstreamNeighborType OBJECT-TYPE\n    SYNTAX     InetAddressType\n
    \   MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n            \"A
    value indicating the address family of the address\n            contained in ipMcastRouteUpstreamNeighbor.\n
    \           An address type of unknown(0) indicates that the upstream\n            neighbor
    is unknown, for example in BIDIR-PIM.\"\n    REFERENCE \"RFC 5015\"\n    ::= {
    ipMcastRouteEntry 7 }\n"
  - "ipMcastRouteUpstreamNeighbor OBJECT-TYPE\n    SYNTAX     InetAddress\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The address
    of the upstream neighbor (for example, RPF\n            neighbor) from which IP
    datagrams from these sources to\n            this multicast address are received.\"\n
    \   ::= { ipMcastRouteEntry 8 }\n"
  - "ipMcastRouteInIfIndex OBJECT-TYPE\n    SYNTAX     InterfaceIndexOrZero\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The value of
    ifIndex for the interface on which IP\n            datagrams sent by these sources
    to this multicast address\n            are received.  A value of 0 indicates that
    datagrams are not\n            subject to an incoming interface check, but may
    be accepted\n            on multiple interfaces (for example, in BIDIR-PIM).\"\n
    \   REFERENCE \"RFC 5015\"\n    ::= { ipMcastRouteEntry 9 }\n"
  - "ipMcastRouteTimeStamp OBJECT-TYPE\n    SYNTAX     TimeStamp\n    MAX-ACCESS read-only\n
    \   STATUS     current\n    DESCRIPTION\n            \"The value of sysUpTime
    at which the multicast routing\n            information represented by this entry
    was learned by the\n            router.\n            If this information was present
    at the most recent re-\n            initialization of the local management subsystem,
    then this\n            object contains a zero value.\"\n    ::= { ipMcastRouteEntry
    10 }\n"
  - "ipMcastRouteExpiryTime OBJECT-TYPE\n    SYNTAX     TimeTicks\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The minimum
    amount of time remaining before this entry will\n            be aged out.  The
    value 0 indicates that the entry is not\n            subject to aging.  If ipMcastRouteNextHopState
    is pruned(1),\n            this object represents the remaining time until the
    prune\n            expires.  If this timer expires, state reverts to\n            forwarding(2).
    \ Otherwise, this object represents the time\n            until this entry is
    removed from the table.\"\n    ::= { ipMcastRouteEntry 11 }\n"
  - "ipMcastRouteProtocol OBJECT-TYPE\n    SYNTAX     IANAipMRouteProtocol\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The multicast
    routing protocol via which this multicast\n            forwarding entry was learned.\"\n
    \   ::= { ipMcastRouteEntry 12 }\n"
  - "ipMcastRouteRtProtocol OBJECT-TYPE\n    SYNTAX     IANAipRouteProtocol\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The routing
    mechanism via which the route used to find the\n            upstream or parent
    interface for this multicast forwarding\n            entry was learned.\"\n    ::=
    { ipMcastRouteEntry 13 }\n"
  - "ipMcastRouteRtAddressType OBJECT-TYPE\n    SYNTAX     InetAddressType\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"A value indicating
    the address family of the address\n            contained in ipMcastRouteRtAddress.\"\n
    \   ::= { ipMcastRouteEntry 14 }\n"
  - "ipMcastRouteRtAddress OBJECT-TYPE\n    SYNTAX     InetAddress\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The address
    portion of the route used to find the upstream\n            or parent interface
    for this multicast forwarding entry.\n            This address object is only
    significant up to\n            ipMcastRouteRtPrefixLength bits.  The remaining
    address bits\n            are set to zero.\n            For addresses of type
    ipv4z or ipv6z, the appended zone\n            index is significant even though
    it lies beyond the prefix\n            length.  The use of these address types
    indicate that this\n            forwarding state applies only within the given
    zone.  Zone\n            index zero is not valid in this table.\"\n    ::= { ipMcastRouteEntry
    15 }\n"
  - "ipMcastRouteRtPrefixLength OBJECT-TYPE\n    SYNTAX     InetAddressPrefixLength\n
    \   MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n            \"The
    length in bits of the mask associated with the route\n            used to find
    the upstream or parent interface for this\n            multicast forwarding entry.\n
    \           The InetAddressType is given by ipMcastRouteRtAddressType.\n            For
    values 'ipv4' and 'ipv4z', this object must be in the\n            range 4..32.
    \ For values 'ipv6' and 'ipv6z', this object\n            must be in the range
    8..128.\"\n    ::= { ipMcastRouteEntry 16 }\n"
  - "ipMcastRouteRtType OBJECT-TYPE\n    SYNTAX     INTEGER {\n                unicast
    (1),  -- Unicast route used in multicast RIB\n                multicast (2) --
    Multicast route\n               }\n    MAX-ACCESS read-only\n    STATUS     current\n
    \   DESCRIPTION\n            \"The reason the given route was placed in the (logical)\n
    \           multicast Routing Information Base (RIB).  A value of\n            unicast
    means that the route would normally be placed only\n            in the unicast
    RIB, but was placed in the multicast RIB\n            due (instead or in addition)
    to local configuration, such as\n            when running PIM over RIP.  A value
    of multicast means that\n            the route was explicitly added to the multicast
    RIB by the\n            routing protocol, such as the Distance Vector Multicast\n
    \           Routing Protocol (DVMRP) or Multiprotocol BGP.\"\n    ::= { ipMcastRouteEntry
    17 }\n"
  - "ipMcastRouteOctets OBJECT-TYPE\n    SYNTAX     Counter64\n    MAX-ACCESS read-only\n
    \   STATUS     current\n    DESCRIPTION\n            \"The number of octets contained
    in IP datagrams that were\n            received from these sources and addressed
    to this multicast\n            group address, and which were forwarded by this
    router.\n            Discontinuities in this monotonically increasing value\n
    \           occur at re-initialization of the management system.\n            Discontinuities
    can also occur as a result of routes being\n            removed and replaced,
    which can be detected by observing\n            the value of ipMcastRouteTimeStamp.\"\n
    \   ::= { ipMcastRouteEntry 18 }\n"
  - "ipMcastRoutePkts OBJECT-TYPE\n    SYNTAX     Counter64\n    MAX-ACCESS read-only\n
    \   STATUS     current\n    DESCRIPTION\n            \"The number of packets routed
    using this multicast route\n            entry.\n            Discontinuities in
    this monotonically increasing value\n            occur at re-initialization of
    the management system.\n            Discontinuities can also occur as a result
    of routes being\n            removed and replaced, which can be detected by observing\n
    \           the value of ipMcastRouteTimeStamp.\"\n    ::= { ipMcastRouteEntry
    19 }\n"
  - "ipMcastRouteTtlDropOctets OBJECT-TYPE\n    SYNTAX     Counter64\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The number of
    octets contained in IP datagrams that this\n            router has received from
    these sources and addressed to this\n            multicast group address, which
    were dropped because the TTL\n            (IPv4) or Hop Limit (IPv6) was decremented
    to zero, or to a\n            value less than ipMcastInterfaceTtl for all next
    hops.\n            Discontinuities in this monotonically increasing value\n            occur
    at re-initialization of the management system.\n            Discontinuities can
    also occur as a result of routes being\n            removed and replaced, which
    can be detected by observing\n            the value of ipMcastRouteTimeStamp.\"\n
    \   ::= { ipMcastRouteEntry 20 }\n"
  - "ipMcastRouteTtlDropPackets OBJECT-TYPE\n    SYNTAX     Counter64\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The number of
    packets that this router has received from\n            these sources and addressed
    to this multicast group address,\n            which were dropped because the TTL
    (IPv4) or Hop Limit\n            (IPv6) was decremented to zero, or to a value
    less than\n            ipMcastInterfaceTtl for all next hops.\n            Discontinuities
    in this monotonically increasing value\n            occur at re-initialization
    of the management system.\n            Discontinuities can also occur as a result
    of routes being\n            removed and replaced, which can be detected by observing\n
    \           the value of ipMcastRouteTimeStamp.\"\n    ::= { ipMcastRouteEntry
    21 }\n"
  - "ipMcastRouteDifferentInIfOctets OBJECT-TYPE\n    SYNTAX     Counter64\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The number of
    octets contained in IP datagrams that this\n            router has received from
    these sources and addressed to this\n            multicast group address, which
    were dropped because they\n            were received on an unexpected interface.\n
    \           For RPF checking protocols (such as PIM-SM), these packets\n            arrived
    on interfaces other than ipMcastRouteInIfIndex, and\n            were dropped
    because of this failed RPF check.  (RPF paths\n            are 'Reverse Path Forwarding'
    paths; the unicast routes to\n            the expected origin of multicast data
    flows).\n            Other protocols may drop packets on an incoming interface\n
    \           check for different reasons (for example, BIDIR-PIM performs\n            a
    DF check on receipt of packets).  All packets dropped as a\n            result
    of an incoming interface check are counted here.\n            If this counter
    increases rapidly, this indicates a problem.\n            A significant quantity
    of multicast data is arriving at this\n            router on unexpected interfaces,
    and is not being forwarded.\n            For guidance, if the rate of increase
    of this counter\n            exceeds 1% of the rate of increase of ipMcastRouteOctets,\n
    \           then there are multicast routing problems that require\n            investigation.\n
    \           Discontinuities in this monotonically increasing value\n            occur
    at re-initialization of the management system.\n            Discontinuities can
    also occur as a result of routes being\n            removed and replaced, which
    can be detected by observing\n            the value of ipMcastRouteTimeStamp.\"\n
    \   REFERENCE \"RFC 4601 and RFC 5015\"\n    ::= { ipMcastRouteEntry 22 }\n"
  - "ipMcastRouteDifferentInIfPackets OBJECT-TYPE\n    SYNTAX     Counter64\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The number of
    packets which this router has received from\n            these sources and addressed
    to this multicast group address,\n            which were dropped because they
    were received on an\n            unexpected interface.\n            For RPF checking
    protocols (such as PIM-SM), these packets\n            arrived on interfaces other
    than ipMcastRouteInIfIndex, and\n            were dropped because of this failed
    RPF check.  (RPF paths\n            are 'Reverse Path Forwarding' path; the unicast
    routes to\n            the expected origin of multicast data flows).\n            Other
    protocols may drop packets on an incoming interface\n            check for different
    reasons (for example, BIDIR-PIM performs\n            a DF check on receipt of
    packets).  All packets dropped as a\n            result of an incoming interface
    check are counted here.\n            If this counter increases rapidly, this indicates
    a problem.\n            A significant quantity of multicast data is arriving at
    this\n            router on unexpected interfaces, and is not being forwarded.\n
    \           For guidance, if the rate of increase of this counter\n            exceeds
    1% of the rate of increase of ipMcastRoutePkts, then\n            there are multicast
    routing problems that require\n            investigation.\n            Discontinuities
    in this monotonically increasing value\n            occur at re-initialization
    of the management system.\n            Discontinuities can also occur as a result
    of routes being\n            removed and replaced, which can be detected by observing\n
    \           the value of ipMcastRouteTimeStamp.\"\n    REFERENCE \"RFC 4601 and
    RFC 5015\"\n    ::= { ipMcastRouteEntry 23 }\n"
  - "ipMcastRouteBps OBJECT-TYPE\n    SYNTAX     CounterBasedGauge64\n    UNITS      \"bits
    per second\"\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n
    \           \"Bits per second forwarded by this router using this\n            multicast
    routing entry.\n            This value is a sample; it is the number of bits forwarded\n
    \           during the last whole 1 second sampling period.  The value\n            during
    the current 1 second sampling period is not made\n            available until
    the period is completed.\n            The quantity being sampled is the same as
    that measured by\n            ipMcastRouteOctets.  The units and the sampling
    method are\n            different.\"\n    ::= { ipMcastRouteEntry 24 }\n"
  - '--

    '
  - '--  The IP Multicast Routing Next Hop Table

    '
  - '--

    '
  - "ipMcastRouteNextHopTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF IpMcastRouteNextHopEntry\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The
    (conceptual) table containing information on the\n            next-hops on outgoing
    interfaces for routing IP multicast\n            datagrams.  Each entry is one
    of a list of next-hops on\n            outgoing interfaces for particular sources
    sending to a\n            particular multicast group address.\"\n    ::= { ipMcast
    6 }\n"
  - "ipMcastRouteNextHopEntry OBJECT-TYPE\n    SYNTAX     IpMcastRouteNextHopEntry\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"An
    entry (conceptual row) in the list of next-hops on\n            outgoing interfaces
    to which IP multicast datagrams from\n            particular sources to an IP
    multicast group address are\n            routed.\n            OIDs are limited
    to 128 sub-identifiers, but this limit\n            is not enforced by the syntax
    of this entry.  In practice,\n            this does not present a problem, because
    IP address types\n            allowed by conformance statements do not exceed
    this limit.\"\n    INDEX      { ipMcastRouteNextHopGroupAddressType,\n                 ipMcastRouteNextHopGroup,\n
    \                ipMcastRouteNextHopGroupPrefixLength,\n                 ipMcastRouteNextHopSourceAddressType,\n
    \                ipMcastRouteNextHopSource,\n                 ipMcastRouteNextHopSourcePrefixLength,\n
    \                ipMcastRouteNextHopIfIndex,\n                 ipMcastRouteNextHopAddressType,\n
    \                ipMcastRouteNextHopAddress }\n    ::= { ipMcastRouteNextHopTable
    1 }\n"
  - "IpMcastRouteNextHopEntry ::= SEQUENCE {\n    ipMcastRouteNextHopGroupAddressType
    \   InetAddressType,\n    ipMcastRouteNextHopGroup               InetAddress,\n
    \   ipMcastRouteNextHopGroupPrefixLength   InetAddressPrefixLength,\n    ipMcastRouteNextHopSourceAddressType
    \  InetAddressType,\n    ipMcastRouteNextHopSource              InetAddress,\n
    \   ipMcastRouteNextHopSourcePrefixLength  InetAddressPrefixLength,\n    ipMcastRouteNextHopIfIndex
    \            InterfaceIndex,\n    ipMcastRouteNextHopAddressType         InetAddressType,\n
    \   ipMcastRouteNextHopAddress             InetAddress,\n    ipMcastRouteNextHopState
    \              INTEGER,\n    ipMcastRouteNextHopTimeStamp           TimeStamp,\n
    \   ipMcastRouteNextHopExpiryTime          TimeTicks,\n    ipMcastRouteNextHopClosestMemberHops
    \  Unsigned32,\n    ipMcastRouteNextHopProtocol            IANAipMRouteProtocol,\n
    \   ipMcastRouteNextHopOctets              Counter64,\n    ipMcastRouteNextHopPkts
    \               Counter64\n"
  - '}

    '
  - "ipMcastRouteNextHopGroupAddressType OBJECT-TYPE\n    SYNTAX     InetAddressType\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"A
    value indicating the address family of the address\n            contained in ipMcastRouteNextHopGroup.
    \ Legal values\n            correspond to the subset of address families for which\n
    \           multicast forwarding is supported.\"\n    ::= { ipMcastRouteNextHopEntry
    1 }\n"
  - "ipMcastRouteNextHopGroup OBJECT-TYPE\n    SYNTAX     InetAddress\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The IP
    multicast group address which, when combined with\n            the corresponding
    value specified in\n            ipMcastRouteNextHopGroupPrefixLength, identifies
    the groups\n            for which this entry contains multicast forwarding\n            information.\n
    \           This address object is only significant up to\n            ipMcastRouteNextHopGroupPrefixLength
    bits.  The remaining\n            address bits are set to zero.  This is especially
    important\n            for this index field, which is part of the index of this\n
    \           entry.  Any non-zero bits would signify an entirely\n            different
    entry.\n            For addresses of type ipv4z or ipv6z, the appended zone\n
    \           index is significant even though it lies beyond the prefix\n            length.
    \ The use of these address types indicate that this\n            forwarding state
    applies only within the given zone.  Zone\n            index zero is not valid
    in this table.\"\n    ::= { ipMcastRouteNextHopEntry 2 }\n"
  - "ipMcastRouteNextHopGroupPrefixLength OBJECT-TYPE\n    SYNTAX     InetAddressPrefixLength\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The
    length in bits of the mask which, when combined with\n            the corresponding
    value of ipMcastRouteGroup, identifies the\n            groups for which this
    entry contains multicast routing\n            information.\n            The InetAddressType
    is given by\n            ipMcastRouteNextHopGroupAddressType.  For values 'ipv4'
    and\n            'ipv4z', this object must be in the range 4..32.  For values\n
    \           'ipv6' and 'ipv6z', this object must be in the range\n            8..128.\"\n
    \   ::= { ipMcastRouteNextHopEntry 3 }\n"
  - "ipMcastRouteNextHopSourceAddressType OBJECT-TYPE\n    SYNTAX     InetAddressType\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"A
    value indicating the address family of the address\n            contained in ipMcastRouteNextHopSource.\n
    \           A value of unknown(0) indicates a non-source-specific entry,\n            corresponding
    to all sources in the group.  Otherwise, the\n            value MUST be the same
    as the value of\n            ipMcastRouteNextHopGroupType.\"\n    ::= { ipMcastRouteNextHopEntry
    4 }\n"
  - "ipMcastRouteNextHopSource OBJECT-TYPE\n    SYNTAX     InetAddress\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The network
    address which, when combined with the\n            corresponding value of the
    mask specified in\n            ipMcastRouteNextHopSourcePrefixLength, identifies
    the\n            sources for which this entry specifies a next-hop on an\n            outgoing
    interface.\n            This address object is only significant up to\n            ipMcastRouteNextHopSourcePrefixLength
    bits.  The remaining\n            address bits are set to zero.  This is especially
    important\n            for this index field, which is part of the index of this\n
    \           entry.  Any non-zero bits would signify an entirely\n            different
    entry.\n            For addresses of type ipv4z or ipv6z, the appended zone\n
    \           index is significant even though it lies beyond the prefix\n            length.
    \ The use of these address types indicate that this\n            source address
    applies only within the given zone.  Zone\n            index zero is not valid
    in this table.\"\n    ::= { ipMcastRouteNextHopEntry 5 }\n"
  - "ipMcastRouteNextHopSourcePrefixLength OBJECT-TYPE\n    SYNTAX     InetAddressPrefixLength\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The
    length in bits of the mask which, when combined with\n            the corresponding
    value specified in\n            ipMcastRouteNextHopSource, identifies the sources
    for which\n            this entry specifies a next-hop on an outgoing interface.\n
    \           The InetAddressType is given by\n            ipMcastRouteNextHopSourceAddressType.
    \ For the value\n            'unknown', this object must be zero.  For values
    'ipv4' and\n            'ipv4z', this object must be in the range 4..32.  For
    values\n            'ipv6' and 'ipv6z', this object must be in the range\n            8..128.\"\n
    \   ::= { ipMcastRouteNextHopEntry 6 }\n"
  - "ipMcastRouteNextHopIfIndex OBJECT-TYPE\n    SYNTAX     InterfaceIndex\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The ifIndex
    value of the interface for the outgoing\n            interface for this next-hop.\"\n
    \   ::= { ipMcastRouteNextHopEntry 7 }\n"
  - "ipMcastRouteNextHopAddressType OBJECT-TYPE\n    SYNTAX     InetAddressType\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"A
    value indicating the address family of the address\n            contained in ipMcastRouteNextHopAddress.\"\n
    \   ::= { ipMcastRouteNextHopEntry 8 }\n"
  - "ipMcastRouteNextHopAddress OBJECT-TYPE\n    SYNTAX     InetAddress\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The address
    of the next-hop specific to this entry.  For\n            most interfaces, this
    is identical to\n            ipMcastRouteNextHopGroup.  Non-Broadcast Multi-Access\n
    \           (NBMA) interfaces, however, may\n            have multiple next-hop
    addresses out a single outgoing\n            interface.\"\n    ::= { ipMcastRouteNextHopEntry
    9 }\n"
  - "ipMcastRouteNextHopState OBJECT-TYPE\n    SYNTAX     INTEGER { pruned(1), forwarding(2)
    }\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n            \"An
    indication of whether the outgoing interface and next-\n            hop represented
    by this entry is currently being used to\n            forward IP datagrams.  The
    value 'forwarding' indicates it\n            is currently being used; the value
    'pruned' indicates it is\n            not.\"\n    ::= { ipMcastRouteNextHopEntry
    10 }\n"
  - "ipMcastRouteNextHopTimeStamp OBJECT-TYPE\n    SYNTAX     TimeStamp\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The value of
    sysUpTime at which the multicast routing\n            information represented
    by this entry was learned by the\n            router.\n            If this information
    was present at the most recent re-\n            initialization of the local management
    subsystem, then this\n            object contains a zero value.\"\n    ::= { ipMcastRouteNextHopEntry
    11 }\n"
  - "ipMcastRouteNextHopExpiryTime OBJECT-TYPE\n    SYNTAX     TimeTicks\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The minimum
    amount of time remaining before this entry will\n            be aged out.  If
    ipMcastRouteNextHopState is pruned(1), the\n            remaining time until the
    prune expires and the state reverts\n            to forwarding(2).  Otherwise,
    the remaining time until this\n            entry is removed from the table.  The
    time remaining may be\n            copied from ipMcastRouteExpiryTime if the protocol
    in use\n            for this entry does not specify next-hop timers.  The value\n
    \           0 indicates that the entry is not subject to aging.\"\n    ::= { ipMcastRouteNextHopEntry
    12 }\n"
  - "ipMcastRouteNextHopClosestMemberHops OBJECT-TYPE\n    SYNTAX     Unsigned32 (0..256)\n
    \   MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n            \"The
    minimum number of hops between this router and any\n            member of this
    IP multicast group reached via this next-hop\n            on this outgoing interface.
    \ Any IP multicast datagrams for\n            the group that have a TTL (IPv4)
    or Hop Count (IPv6) less\n            than this number of hops will not be forwarded
    to this\n            next-hop.\n            A value of 0 means all multicast datagrams
    are forwarded out\n            the interface.  A value of 256 means that no multicast\n
    \           datagrams are forwarded out the interface.\n            This is an
    optimization applied by multicast routing\n            protocols that explicitly
    track hop counts to downstream\n            listeners.  Multicast protocols that
    are not aware of hop\n            counts to downstream listeners set this object
    to 0.\"\n    ::= { ipMcastRouteNextHopEntry 13 }\n"
  - "ipMcastRouteNextHopProtocol OBJECT-TYPE\n    SYNTAX     IANAipMRouteProtocol\n
    \   MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n            \"The
    routing mechanism via which this next-hop was learned.\"\n    ::= { ipMcastRouteNextHopEntry
    14 }\n"
  - "ipMcastRouteNextHopOctets OBJECT-TYPE\n    SYNTAX     Counter64\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The number of
    octets of multicast packets that have been\n            forwarded using this route.\n
    \           Discontinuities in this monotonically increasing value\n            occur
    at re-initialization of the management system.\n            Discontinuities can
    also occur as a result of routes being\n            removed and replaced, which
    can be detected by observing\n            the value of ipMcastRouteNextHopTimeStamp.\"\n
    \   ::= { ipMcastRouteNextHopEntry 15 }\n"
  - "ipMcastRouteNextHopPkts OBJECT-TYPE\n    SYNTAX     Counter64\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The number of
    packets which have been forwarded using this\n            route.\n            Discontinuities
    in this monotonically increasing value\n            occur at re-initialization
    of the management system.\n            Discontinuities can also occur as a result
    of routes being\n            removed and replaced, which can be detected by observing\n
    \           the value of ipMcastRouteNextHopTimeStamp.\"\n    ::= { ipMcastRouteNextHopEntry
    16 }\n"
  - '--

    '
  - '--  The IP Multicast Scope Boundary Table

    '
  - '--

    '
  - "ipMcastBoundaryTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF IpMcastBoundaryEntry\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The
    (conceptual) table listing the system's multicast scope\n            zone boundaries.\"\n
    \   REFERENCE \"RFC 4007 Section 5\"\n    ::= { ipMcast 7 }\n"
  - "ipMcastBoundaryEntry OBJECT-TYPE\n    SYNTAX     IpMcastBoundaryEntry\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"An entry
    (conceptual row) describing one of this device's\n            multicast scope
    zone boundaries.\n            OIDs are limited to 128 sub-identifiers, but this
    limit\n            is not enforced by the syntax of this entry.  In practice,\n
    \           this does not present a problem, because IP address types\n            allowed
    by conformance statements do not exceed this limit.\"\n    REFERENCE \"RFC 2365
    Section 5, RFC 4007 Section 5\"\n    INDEX      { ipMcastBoundaryIfIndex,\n                 ipMcastBoundaryAddressType,\n
    \                ipMcastBoundaryAddress,\n                 ipMcastBoundaryAddressPrefixLength
    }\n    ::= { ipMcastBoundaryTable 1 }\n"
  - "IpMcastBoundaryEntry ::= SEQUENCE {\n    ipMcastBoundaryIfIndex              InterfaceIndex,\n
    \   ipMcastBoundaryAddressType          InetAddressType,\n    ipMcastBoundaryAddress
    \             InetAddress,\n    ipMcastBoundaryAddressPrefixLength  InetAddressPrefixLength,\n
    \   ipMcastBoundaryTimeStamp            TimeStamp,\n    ipMcastBoundaryDroppedMcastOctets
    \  Counter64,\n    ipMcastBoundaryDroppedMcastPkts     Counter64,\n    ipMcastBoundaryStatus
    \              RowStatus,\n    ipMcastBoundaryStorageType          StorageType\n"
  - '}

    '
  - "ipMcastBoundaryIfIndex OBJECT-TYPE\n    SYNTAX     InterfaceIndex\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The IfIndex
    value for the interface to which this boundary\n            applies.  Packets
    with a destination address in the\n            associated address/mask range will
    not be forwarded over\n            this interface.\n            For IPv4, zone
    boundaries cut through links.  Therefore,\n            this is an external interface.
    \ This may be either a\n            physical or virtual interface (tunnel, encapsulation,
    and\n            so forth.)\n            For IPv6, zone boundaries cut through
    nodes.  Therefore,\n            this is a virtual interface within the node.  This
    is not\n            an external interface, either real or virtual.  Packets\n
    \           crossing this interface neither arrive at nor leave the\n            node,
    but only move between zones within the node.\"\n    REFERENCE \"RFC 2365 Section
    5, RFC 4007 Section 5\"\n    ::= { ipMcastBoundaryEntry 1 }\n"
  - "ipMcastBoundaryAddressType OBJECT-TYPE\n    SYNTAX     InetAddressType\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"A value
    indicating the address family of the address\n            contained in ipMcastBoundaryAddress.
    \ Legal values\n            correspond to the subset of address families for which\n
    \           multicast forwarding is supported.\"\n    ::= { ipMcastBoundaryEntry
    2 }\n"
  - "ipMcastBoundaryAddress OBJECT-TYPE\n    SYNTAX     InetAddress\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The group
    address which, when combined with the\n            corresponding value of ipMcastBoundaryAddressPrefixLength,\n
    \           identifies the group range for which the scoped boundary\n            exists.
    \ Scoped IPv4 multicast address ranges must be\n            prefixed by 239.0.0.0/8.
    \ Scoped IPv6 multicast address\n            ranges are FF0x::/16, where x is
    a valid RFC 4291 multicast\n            scope.\n            An IPv6 address prefixed
    by FF1x::/16 is a non-permanently-\n            assigned address.  An IPv6 address
    prefixed by FF3x::/16 is\n            a unicast-prefix-based multicast addresses.
    \ A zone boundary\n            for FF0x::/16 implies an identical boundary for
    these other\n            prefixes.  No separate FF1x::/16 or FF3x::/16 entries
    exist\n            in this table.\n            This address object is only significant
    up to\n            ipMcastBoundaryAddressPrefixLength bits.  The remaining\n            address
    bits are set to zero.  This is especially important\n            for this index
    field, which is part of the index of this\n            entry.  Any non-zero bits
    would signify an entirely\n            different entry.\"\n    ::= { ipMcastBoundaryEntry
    3 }\n"
  - "ipMcastBoundaryAddressPrefixLength OBJECT-TYPE\n    SYNTAX     InetAddressPrefixLength\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The
    length in bits of the mask which when, combined with\n            the corresponding
    value of ipMcastBoundaryAddress,\n            identifies the group range for which
    the scoped boundary\n            exists.\n            The InetAddressType is given
    by ipMcastBoundaryAddressType.\n            For values 'ipv4' and 'ipv4z', this
    object must be in the\n            range 4..32.  For values 'ipv6' and 'ipv6z',
    this object\n            must be set to 16.\"\n    ::= { ipMcastBoundaryEntry
    4 }\n"
  - "ipMcastBoundaryTimeStamp OBJECT-TYPE\n    SYNTAX     TimeStamp\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The value of
    sysUpTime at which the multicast boundary\n            information represented
    by this entry was learned by the\n            router.\n            If this information
    was present at the most recent re-\n            initialization of the local management
    subsystem, then this\n            object contains a zero value.\"\n    ::= { ipMcastBoundaryEntry
    5 }\n"
  - "ipMcastBoundaryDroppedMcastOctets OBJECT-TYPE\n    SYNTAX     Counter64\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The number of
    octets of multicast packets that have been\n            dropped as a result of
    this zone boundary configuration.\n            Discontinuities in this monotonically
    increasing value\n            occur at re-initialization of the management system.\n
    \           Discontinuities can also occur as a result of boundary\n            configuration
    being removed and replaced, which can be\n            detected by observing the
    value of\n            ipMcastBoundaryTimeStamp.\"\n    ::= { ipMcastBoundaryEntry
    6 }\n"
  - "ipMcastBoundaryDroppedMcastPkts OBJECT-TYPE\n    SYNTAX     Counter64\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The number of
    multicast packets that have been dropped as a\n            result of this zone
    boundary configuration.\n            Discontinuities in this monotonically increasing
    value\n            occur at re-initialization of the management system.\n            Discontinuities
    can also occur as a result of boundary\n            configuration being removed
    and replaced, which can be\n            detected by observing the value of\n            ipMcastBoundaryTimeStamp.\"\n
    \   ::= { ipMcastBoundaryEntry 7 }\n"
  - "ipMcastBoundaryStatus OBJECT-TYPE\n    SYNTAX     RowStatus\n    MAX-ACCESS read-create\n
    \   STATUS     current\n    DESCRIPTION\n            \"The status of this row,
    by which rows in this table can\n            be created and destroyed.\n            This
    status object can be set to active(1) without setting\n            any other columnar
    objects in this entry.\n            All writeable objects in this entry can be
    modified when the\n            status of this entry is active(1).\"\n    ::= {
    ipMcastBoundaryEntry 8 }\n"
  - "ipMcastBoundaryStorageType OBJECT-TYPE\n    SYNTAX      StorageType\n    MAX-ACCESS
    \ read-create\n    STATUS      current\n    DESCRIPTION\n           \"The storage
    type for this row.  Rows having the value\n           'permanent' need not allow
    write-access to any columnar\n           objects in the row.\"\n       DEFVAL
    { nonVolatile }\n    ::= { ipMcastBoundaryEntry 9 }\n"
  - '--

    '
  - '--  The IP Multicast Scope Name Table

    '
  - '--

    '
  - "ipMcastScopeNameTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF IpMcastScopeNameEntry\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The
    (conceptual) table listing multicast scope names.\"\n    REFERENCE \"RFC 4007
    Section 4\"\n    ::= { ipMcast 8 }\n"
  - "ipMcastScopeNameEntry OBJECT-TYPE\n    SYNTAX     IpMcastScopeNameEntry\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"An entry
    (conceptual row) that names a multicast address\n            scope.\n            OIDs
    are limited to 128 sub-identifiers, but this limit\n            is not enforced
    by the syntax of this entry.  In practice,\n            this does not present
    a problem, because IP address types\n            allowed by conformance statements
    do not exceed this limit.\"\n    REFERENCE \"RFC 4007 Section 4\"\n    INDEX      {
    ipMcastScopeNameAddressType,\n                 ipMcastScopeNameAddress,\n                 ipMcastScopeNameAddressPrefixLength,\n
    \                ipMcastScopeNameLanguage }\n    ::= { ipMcastScopeNameTable 1
    }\n"
  - "IpMcastScopeNameEntry ::= SEQUENCE {\n    ipMcastScopeNameAddressType          InetAddressType,\n
    \   ipMcastScopeNameAddress              InetAddress,\n    ipMcastScopeNameAddressPrefixLength
    \ InetAddressPrefixLength,\n    ipMcastScopeNameLanguage             LangTag,\n
    \   ipMcastScopeNameString               SnmpAdminString,\n    ipMcastScopeNameDefault
    \             TruthValue,\n    ipMcastScopeNameStatus               RowStatus,\n
    \   ipMcastScopeNameStorageType          StorageType\n"
  - '}

    '
  - "ipMcastScopeNameAddressType OBJECT-TYPE\n    SYNTAX     InetAddressType\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"A value
    indicating the address family of the address\n            contained in ipMcastScopeNameAddress.
    \ Legal values\n            correspond to the subset of address families for which\n
    \           multicast forwarding is supported.\"\n    ::= { ipMcastScopeNameEntry
    1 }\n"
  - "ipMcastScopeNameAddress OBJECT-TYPE\n    SYNTAX     InetAddress\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The group
    address which, when combined with the\n            corresponding value of ipMcastScopeNameAddressPrefixLength,\n
    \           identifies the group range associated with the multicast\n            scope.
    \ Scoped IPv4 multicast address ranges must be\n            prefixed by 239.0.0.0/8.
    \ Scoped IPv6 multicast address\n            ranges are FF0x::/16, where x is
    a valid RFC 4291 multicast\n            scope.\n            An IPv6 address prefixed
    by FF1x::/16 is a non-permanently-\n            assigned address.  An IPv6 address
    prefixed by FF3x::/16 is\n            a unicast-prefix-based multicast addresses.
    \ A scope\n            FF0x::/16 implies an identical scope name for these other\n
    \           prefixes.  No separate FF1x::/16 or FF3x::/16 entries exist\n            in
    this table.\n            This address object is only significant up to\n            ipMcastScopeNameAddressPrefixLength
    bits.  The remaining\n            address bits are set to zero.  This is especially
    important\n            for this index field, which is part of the index of this\n
    \           entry.  Any non-zero bits would signify an entirely\n            different
    entry.\"\n    ::= { ipMcastScopeNameEntry 2 }\n"
  - "ipMcastScopeNameAddressPrefixLength OBJECT-TYPE\n    SYNTAX     InetAddressPrefixLength\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The
    length in bits of the mask which, when combined with\n            the corresponding
    value of ipMcastScopeNameAddress,\n            identifies the group range associated
    with the multicast\n            scope.\n            The InetAddressType is given
    by ipMcastScopeNameAddressType.\n            For values 'ipv4' and 'ipv4z', this
    object must be in the\n            range 4..32.  For values 'ipv6' and 'ipv6z',
    this object\n            must be set to 16.\"\n    ::= { ipMcastScopeNameEntry
    3 }\n"
  - "ipMcastScopeNameLanguage OBJECT-TYPE\n    SYNTAX     LangTag\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"Language
    tag associated with the scope name.\"\n    REFERENCE \"RFC 4646\"\n    ::= { ipMcastScopeNameEntry
    4 }\n"
  - "ipMcastScopeNameString OBJECT-TYPE\n    SYNTAX     SnmpAdminString\n    MAX-ACCESS
    read-create\n    STATUS     current\n    DESCRIPTION\n            \"The textual
    name associated with the multicast scope.  The\n            value of this object
    should be suitable for displaying to\n            end-users, such as when allocating
    a multicast address in\n            this scope.\n            When no name is specified,
    the default value of this object\n            for IPv4 should be the string 239.x.x.x/y
    with x and y\n            replaced with decimal values to describe the address
    and\n            mask length associated with the scope.\n            When no name
    is specified, the default value of this object\n            for IPv6 should be
    the string FF0x::/16, with x replaced by\n            the hexadecimal value for
    the RFC 4291 multicast scope.\n            An IPv6 address prefixed by FF1x::/16
    is a non-permanently-\n            assigned address.  An IPv6 address prefixed
    by FF3x::/16 is\n            a unicast-prefix-based multicast addresses.  A scope\n
    \           FF0x::/16 implies an identical scope name for these other\n            prefixes.
    \ No separate FF1x::/16 or FF3x::/16 entries exist\n            in this table.\"\n
    \   REFERENCE \"RFC 2365, RFC 3306 Section 4, RFC 4291 Section 2.7\"\n    ::=
    { ipMcastScopeNameEntry 5 }\n"
  - "ipMcastScopeNameDefault OBJECT-TYPE\n    SYNTAX     TruthValue\n    MAX-ACCESS
    read-create\n    STATUS     current\n    DESCRIPTION\n            \"If true, indicates
    a preference that the name in the\n            following language should be used
    by applications if no name\n            is available in a desired language.\"\n
    \   DEFVAL { false }\n    ::= { ipMcastScopeNameEntry 6 }\n"
  - "ipMcastScopeNameStatus OBJECT-TYPE\n    SYNTAX     RowStatus\n    MAX-ACCESS
    read-create\n    STATUS     current\n    DESCRIPTION\n            \"The status
    of this row, by which rows in this table can\n            be created and destroyed.
    \ Before the row can be activated,\n            the object ipMcastScopeNameString
    must be set to a valid\n            value.  All writeable objects in this entry
    can be modified\n            when the status is active(1).\"\n    ::= { ipMcastScopeNameEntry
    7 }\n"
  - "ipMcastScopeNameStorageType OBJECT-TYPE\n    SYNTAX      StorageType\n    MAX-ACCESS
    \ read-create\n    STATUS      current\n    DESCRIPTION\n           \"The storage
    type for this row.  Rows having the value\n           'permanent' need not allow
    write-access to any columnar\n           objects in the row.\"\n       DEFVAL
    { nonVolatile }\n    ::= { ipMcastScopeNameEntry 8 }\n"
  - '--

    '
  - '--  The Multicast Listeners Table

    '
  - '--

    '
  - "ipMcastLocalListenerTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF IpMcastLocalListenerEntry\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The
    (conceptual) table listing local applications or\n            services that have
    joined multicast groups as listeners.\n            Entries exist for all addresses
    in the multicast range for\n            all applications and services as they
    are classified on this\n            device.\"\n    ::= { ipMcast 9 }\n"
  - "ipMcastLocalListenerEntry OBJECT-TYPE\n    SYNTAX     IpMcastLocalListenerEntry\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"An
    entry (conceptual row) identifying a local application\n            or service
    that has joined a multicast group as a listener.\n            OIDs are limited
    to 128 sub-identifiers, but this limit\n            is not enforced by the syntax
    of this entry.  In practice,\n            this does not present a problem, because
    IP address types\n            allowed by conformance statements do not exceed
    this limit.\"\n    INDEX      { ipMcastLocalListenerGroupAddressType,\n                 ipMcastLocalListenerGroupAddress,\n
    \                ipMcastLocalListenerSourceAddressType,\n                 ipMcastLocalListenerSourceAddress,\n
    \                ipMcastLocalListenerSourcePrefixLength,\n                 ipMcastLocalListenerIfIndex,\n
    \                ipMcastLocalListenerRunIndex }\n    ::= { ipMcastLocalListenerTable
    1 }\n"
  - "IpMcastLocalListenerEntry ::= SEQUENCE {\n    ipMcastLocalListenerGroupAddressType
    \   InetAddressType,\n    ipMcastLocalListenerGroupAddress        InetAddress,\n
    \   ipMcastLocalListenerSourceAddressType   InetAddressType,\n    ipMcastLocalListenerSourceAddress
    \      InetAddress,\n    ipMcastLocalListenerSourcePrefixLength  InetAddressPrefixLength,\n
    \   ipMcastLocalListenerIfIndex             InterfaceIndex,\n    ipMcastLocalListenerRunIndex
    \           Unsigned32\n"
  - '}

    '
  - "ipMcastLocalListenerGroupAddressType OBJECT-TYPE\n    SYNTAX     InetAddressType\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"A
    value indicating the address family of the address\n            contained in ipMcastLocalListenerGroupAddress.
    \ Legal values\n            correspond to the subset of address families for which\n
    \           multicast is supported.\"\n    ::= { ipMcastLocalListenerEntry 1 }\n"
  - "ipMcastLocalListenerGroupAddress OBJECT-TYPE\n    SYNTAX     InetAddress\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The IP
    multicast group for which this entry specifies\n            locally joined applications
    or services.\"\n    ::= { ipMcastLocalListenerEntry 2 }\n"
  - "ipMcastLocalListenerSourceAddressType OBJECT-TYPE\n    SYNTAX     InetAddressType\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"A
    value indicating the address family of the address\n            contained in ipMcastLocalListenerSource.\n
    \           A value of unknown(0) indicates a non-source-specific entry,\n            corresponding
    to all sources in the group.  Otherwise, the\n            value MUST be the same
    as the value of\n            ipMcastLocalListenerGroupAddressType.\"\n    ::=
    { ipMcastLocalListenerEntry 3 }\n"
  - "ipMcastLocalListenerSourceAddress OBJECT-TYPE\n    SYNTAX     InetAddress\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The network
    address which, when combined with the\n            corresponding value of the
    mask specified in\n            ipMcastLocalListenerSourcePrefixLength, identifies
    the\n            sources for which this entry specifies a local listener.\n            This
    address object is only significant up to\n            ipMcastLocalListenerSourcePrefixLength
    bits.  The remaining\n            address bits are set to zero.  This is especially
    important\n            for this index field, which is part of the index of this\n
    \           entry.  Any non-zero bits would signify an entirely\n            different
    entry.\n            For addresses of type ipv4z or ipv6z, the appended zone\n
    \           index is significant even though it lies beyond the prefix\n            length.
    \ The use of these address types indicate that this\n            listener address
    applies only within the given zone.  Zone\n            index zero is not valid
    in this table.\"\n    ::= { ipMcastLocalListenerEntry 4 }\n"
  - "ipMcastLocalListenerSourcePrefixLength OBJECT-TYPE\n    SYNTAX     InetAddressPrefixLength\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The
    length in bits of the mask which, when combined with\n            the corresponding
    value specified in\n            ipMcastLocalListenerSource, identifies the sources
    for which\n            this entry specifies a local listener.\n            The
    InetAddressType is given by\n            ipMcastLocalListenerSourceAddressType.
    \ For the value\n            'unknown', this object must be zero.  For values
    'ipv4' and\n            'ipv4z', this object must be in the range 4..32.  For
    values\n            'ipv6' and 'ipv6z', this object must be in the range\n            8..128.\"\n
    \   ::= { ipMcastLocalListenerEntry 5 }\n"
  - "ipMcastLocalListenerIfIndex OBJECT-TYPE\n    SYNTAX     InterfaceIndex\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The IfIndex
    value of the interface for which this entry\n            specifies a local listener.\"\n
    \   ::= { ipMcastLocalListenerEntry 6 }\n"
  - "ipMcastLocalListenerRunIndex OBJECT-TYPE\n    SYNTAX     Unsigned32 (0..2147483647)\n
    \   MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n            \"A
    unique value corresponding to a piece of software running\n            on this
    router or host system.  Where possible, this should\n            be the system's
    native, unique identification number.\n            This identifier is platform-specific.
    \ It may correspond to\n            a process ID or application instance number.\n
    \           A value of zero indicates that the application instance(s)\n            cannot
    be identified.  A value of zero indicates that one or\n            more unidentified
    applications have joined the specified\n            multicast groups (for the
    specified sources) as listeners.\"\n    REFERENCE \"RFC 2287 sysApplRunIndex\"\n
    \   ::= { ipMcastLocalListenerEntry 7 }\n"
  - '--

    '
  - '--  The Multicast Zone Table

    '
  - '--

    '
  - "ipMcastZoneTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF IpMcastZoneEntry\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The (conceptual)
    table listing scope zones on this device.\"\n    REFERENCE \"RFC 4007 Section
    5\"\n    ::= { ipMcast 10 }\n"
  - "ipMcastZoneEntry OBJECT-TYPE\n    SYNTAX     IpMcastZoneEntry\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"An entry
    (conceptual row) describing a scope zone on this\n            device.\"\n    REFERENCE
    \"RFC 4007 Section 5\"\n    INDEX      { ipMcastZoneIndex }\n    ::= { ipMcastZoneTable
    1 }\n"
  - "IpMcastZoneEntry ::= SEQUENCE {\n    ipMcastZoneIndex                        InetZoneIndex,\n
    \   ipMcastZoneScopeDefaultZoneIndex        InetZoneIndex,\n    ipMcastZoneScopeAddressType
    \            InetAddressType,\n    ipMcastZoneScopeAddress                 InetAddress,\n
    \   ipMcastZoneScopeAddressPrefixLength     InetAddressPrefixLength\n"
  - '}

    '
  - "ipMcastZoneIndex OBJECT-TYPE\n    SYNTAX     InetZoneIndex (1..4294967295)\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"This
    zone index uniquely identifies a zone on a device.\n            Each zone is for
    a given scope.  Scope-level information in\n            this table is for the
    unique scope that corresponds to this\n            zone.\n            Zero is
    a special value used to request the default zone for\n            a given scope.
    \ Zero is not a valid value for this object.\n            To test whether ipMcastZoneIndex
    is the default zone for\n            this scope, test whether ipMcastZoneIndex
    is equal to\n            ipMcastZoneScopeDefaultZoneIndex.\"\n    ::= { ipMcastZoneEntry
    1 }\n"
  - "ipMcastZoneScopeDefaultZoneIndex OBJECT-TYPE\n    SYNTAX     InetZoneIndex (1..4294967295)\n
    \   MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n            \"The
    default zone index for this scope.  This is the zone\n            that this device
    will use if the default (zero) zone is\n            requested for this scope.\n
    \           Zero is not a valid value for this object.\"\n    ::= { ipMcastZoneEntry
    2 }\n"
  - "ipMcastZoneScopeAddressType OBJECT-TYPE\n    SYNTAX     InetAddressType\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The IP address
    type for which this scope zone exists.\"\n    ::= { ipMcastZoneEntry 3 }\n"
  - "ipMcastZoneScopeAddress OBJECT-TYPE\n    SYNTAX     InetAddress\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The multicast
    group address which, when combined with\n            ipMcastZoneScopeAddressPrefixLength,
    gives the multicast\n            address range for this scope.  The InetAddressType
    is given\n            by ipMcastZoneScopeAddressType.\n            Scoped IPv4
    multicast address ranges are prefixed by\n            239.0.0.0/8.  Scoped IPv6
    multicast address ranges are\n            FF0x::/16, where x is a valid RFC 4291
    multicast scope.\n            An IPv6 address prefixed by FF1x::/16 is a non-permanently-\n
    \           assigned address.  An IPv6 address prefixed by FF3x::/16 is\n            a
    unicast-prefix-based multicast addresses.  A scope\n            FF0x::/16 implies
    an identical scope for these other\n            prefixes.  No separate FF1x::/16
    or FF3x::/16 entries exist\n            in this table.\n            This address
    object is only significant up to\n            ipMcastZoneScopeAddressPrefixLength
    bits.  The remaining\n            address bits are set to zero.\"\n    REFERENCE
    \"RFC 2365, RFC 3306 Section 4, RFC 4291 Section 2.7\"\n    ::= { ipMcastZoneEntry
    4 }\n"
  - "ipMcastZoneScopeAddressPrefixLength OBJECT-TYPE\n    SYNTAX     InetAddressPrefixLength\n
    \   MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n            \"The
    length in bits of the mask which, when combined\n            with ipMcastZoneScopeAddress,
    gives the multicast address\n            prefix for this scope.\n            The
    InetAddressType is given by ipMcastZoneScopeAddressType.\n            For values
    'ipv4' and 'ipv4z', this object must be in the\n            range 4..32.  For
    values 'ipv6' and 'ipv6z', this object\n            must be set to 16.\"\n    ::=
    { ipMcastZoneEntry 5 }\n"
  - '--

    '
  - '-- Conformance information

    '
  - '--

    '
  - "ipMcastMIBConformance\n                  OBJECT IDENTIFIER ::= { ipMcastMIB 2
    }\n"
  - "ipMcastMIBCompliances\n                  OBJECT IDENTIFIER ::= { ipMcastMIBConformance
    1 }\n"
  - 'ipMcastMIBGroups  OBJECT IDENTIFIER ::= { ipMcastMIBConformance 2 }

    '
  - '--

    '
  - '-- Compliance statements

    '
  - '--

    '
  - "ipMcastMIBComplianceHost MODULE-COMPLIANCE\n    STATUS  current\n    DESCRIPTION\n
    \           \"The compliance statement for hosts supporting IPMCAST-MIB.\n            Support
    for either InetAddressType ipv4 or ipv6 is\n            mandatory; support for
    both InetAddressTypes ipv4 and ipv6\n            is optional.  Support for types
    ipv4z and ipv6z is\n            optional.\n            -- OBJECT     ipMcastLocalListenerGroupAddressType\n
    \           -- SYNTAX     InetAddressType {unknown(0), ipv4(1), ipv6(2),\n            --
    \                            ipv4z(3), ipv6z(4)}\n            -- DESCRIPTION\n
    \           --     This compliance requires support for ipv4 or ipv6.\n            --\n
    \           -- OBJECT     ipMcastLocalListenerGroupAddress\n            -- SYNTAX
    \    InetAddress (SIZE (0|4|8|16|20))\n            -- DESCRIPTION\n            --
    \    This compliance requires support for ipv4 or ipv6.\n            --\n            --
    OBJECT     ipMcastLocalListenerSourceAddressType\n            -- SYNTAX     InetAddressType
    {unknown(0), ipv4(1), ipv6(2),\n            --                             ipv4z(3),
    ipv6z(4)}\n            -- DESCRIPTION\n            --     This compliance requires
    support for ipv4 or ipv6.\n            --\n            -- OBJECT     ipMcastLocalListenerSourceAddress\n
    \           -- SYNTAX     InetAddress (SIZE (0|4|8|16|20))\n            -- DESCRIPTION\n
    \           --     This compliance requires support for ipv4 or ipv6.\"\n    MODULE
    \ -- this module\n    MANDATORY-GROUPS { ipMcastMIBLocalListenerGroup,\n                       ipMcastMIBBasicGroup
    }\n      OBJECT     ipMcastEnabled\n      MIN-ACCESS read-only\n      DESCRIPTION\n
    \         \"Write access is not required.\"\n      OBJECT     ipMcastDeviceConfigStorageType\n
    \     MIN-ACCESS read-only\n      DESCRIPTION\n          \"Write access is not
    required.\"\n      GROUP        ipMcastMIBSsmGroup\n      DESCRIPTION\n          \"This
    group is optional.\"\n      GROUP        ipMcastMIBRouteGroup\n      DESCRIPTION\n
    \         \"This group is optional.\"\n      GROUP        ipMcastMIBRouteDiagnosticsGroup\n
    \     DESCRIPTION\n          \"This group is optional.\"\n      GROUP        ipMcastMIBBoundaryIfGroup\n
    \     DESCRIPTION\n          \"This group is optional.\"\n      GROUP        ipMcastMIBScopeNameGroup\n
    \     DESCRIPTION\n          \"This group is optional.\"\n    ::= { ipMcastMIBCompliances
    1 }\n"
  - "ipMcastMIBComplianceRouter MODULE-COMPLIANCE\n    STATUS  current\n    DESCRIPTION\n
    \           \"The compliance statement for routers supporting\n            IPMCAST-MIB.\n
    \           Support for either InetAddressType ipv4 or ipv6 is\n            mandatory;
    support for both InetAddressTypes ipv4 and ipv6\n            is optional.  Support
    for types ipv4z and ipv6z is\n            optional.\n            -- OBJECT     ipMcastSsmRangeAddressType\n
    \           -- SYNTAX     InetAddressType {ipv4(1), ipv6(2), ipv4z(3),\n            --
    \                            ipv6z(4)}\n            -- DESCRIPTION\n            --
    \    This compliance requires support for ipv4 or ipv6.\n            --\n            --
    OBJECT     ipMcastSsmRangeAddress\n            -- SYNTAX     InetAddress (SIZE
    (4|8|16|20))\n            -- DESCRIPTION\n            --     This compliance requires
    support for ipv4 or ipv6.\n            --\n            -- OBJECT     ipMcastRouteGroupAddressType\n
    \           -- SYNTAX     InetAddressType {unknown(0), ipv4(1), ipv6(2),\n            --
    \                            ipv4z(3), ipv6z(4)}\n            -- DESCRIPTION\n
    \           --     This compliance requires support for unknown and\n            --
    \    either ipv4 or ipv6.\n            --\n            -- OBJECT     ipMcastRouteGroup\n
    \           -- SYNTAX     InetAddress (SIZE (0|4|8|16|20))\n            -- DESCRIPTION\n
    \           --     This compliance requires support for unknown and\n            --
    \    either ipv4 or ipv6.\n            --\n            -- OBJECT     ipMcastRouteSourceAddressType\n
    \           -- SYNTAX     InetAddressType {unknown(0), ipv4(1), ipv6(2),\n            --
    \                            ipv4z(3), ipv6z(4)}\n            -- DESCRIPTION\n
    \           --     This compliance requires support for unknown and\n            --
    \    either ipv4 or ipv6.\n            --\n            -- OBJECT     ipMcastRouteSource\n
    \           -- SYNTAX     InetAddress (SIZE (0|4|8|16|20))\n            -- DESCRIPTION\n
    \           --     This compliance requires support for unknown and\n            --
    \    either ipv4 or ipv6.\n            --\n            -- OBJECT     ipMcastRouteNextHopGroupAddressType\n
    \           -- SYNTAX     InetAddressType {unknown(0), ipv4(1), ipv6(2),\n            --
    \                            ipv4z(3), ipv6z(4)}\n            -- DESCRIPTION\n
    \           --     This compliance requires support for unknown and\n            --
    \    either ipv4 or ipv6.\n            --\n            -- OBJECT     ipMcastRouteNextHopGroup\n
    \           -- SYNTAX     InetAddress (SIZE (0|4|8|16|20))\n            -- DESCRIPTION\n
    \           --     This compliance requires support for unknown and\n            --
    \    either ipv4 or ipv6.\n            --\n            -- OBJECT     ipMcastRouteNextHopSourceAddressType\n
    \           -- SYNTAX     InetAddressType {unknown(0), ipv4(1), ipv6(2),\n            --
    \                             ipv4z(3), ipv6z(4)}\n            -- DESCRIPTION\n
    \           --     This compliance requires support for unknown and\n            --
    \    either ipv4 or ipv6.\n            --\n            -- OBJECT     ipMcastRouteNextHopSource\n
    \           -- SYNTAX     InetAddress (SIZE (0|4|8|16|20))\n            -- DESCRIPTION\n
    \           --     This compliance requires support for unknown and\n            --
    \    either ipv4 or ipv6.\n            --\n            -- OBJECT     ipMcastRouteNextHopAddressType\n
    \           -- SYNTAX     InetAddressType {unknown(0), ipv4(1), ipv6(2),\n            --
    \                            ipv4z(3), ipv6z(4)}\n            -- DESCRIPTION\n
    \           --     This compliance requires support for unknown and\n            --
    \    either ipv4 or ipv6.\n            --\n            -- OBJECT     ipMcastRouteNextHopAddress\n
    \           -- SYNTAX     InetAddress (SIZE (0|4|8|16|20))\n            -- DESCRIPTION\n
    \           --     This compliance requires support for unknown and\n            --
    \    either ipv4 or ipv6.\"\n    MODULE  -- this module\n    MANDATORY-GROUPS
    { ipMcastMIBRouteProtoGroup,\n                       ipMcastMIBBasicGroup,\n                       ipMcastMIBSsmGroup,\n
    \                      ipMcastMIBRouteGroup }\n      OBJECT     ipMcastEnabled\n
    \     MIN-ACCESS read-only\n      DESCRIPTION\n          \"Write access is not
    required.\"\n      OBJECT     ipMcastDeviceConfigStorageType\n      MIN-ACCESS
    read-only\n      DESCRIPTION\n          \"Write access is not required.\"\n      OBJECT
    \    ipMcastInterfaceTtl\n      MIN-ACCESS read-only\n      DESCRIPTION\n          \"Write
    access is not required.\"\n      OBJECT     ipMcastInterfaceRateLimit\n      MIN-ACCESS
    read-only\n      DESCRIPTION\n          \"Write access is not required.\"\n      OBJECT
    \    ipMcastInterfaceStorageType\n      MIN-ACCESS read-only\n      DESCRIPTION\n
    \         \"Write access is not required.\"\n      OBJECT     ipMcastRouteUpstreamNeighborType\n
    \     SYNTAX     InetAddressType { unknown(0), ipv4(1), ipv6(2),\n                                   ipv4z(3),
    ipv6z(4) }\n      DESCRIPTION\n          \"This compliance requires support for
    unknown and either ipv4\n          or ipv6.\"\n      OBJECT     ipMcastRouteUpstreamNeighbor\n
    \     SYNTAX     InetAddress (SIZE (0|4|8|16|20))\n      DESCRIPTION\n          \"This
    compliance requires support for unknown and either ipv4\n          or ipv6.\"\n
    \     OBJECT     ipMcastRouteRtAddressType\n      SYNTAX     InetAddressType {
    unknown(0), ipv4(1), ipv6(2),\n                                   ipv4z(3), ipv6z(4)
    }\n      DESCRIPTION\n          \"This compliance requires support for unknown
    and either ipv4\n          or ipv6.\"\n      OBJECT     ipMcastRouteRtAddress\n
    \     SYNTAX     InetAddress (SIZE (0|4|8|16|20))\n      DESCRIPTION\n          \"This
    compliance requires support for unknown and either ipv4\n          or ipv6.\"\n
    \     OBJECT     ipMcastSsmRangeRowStatus\n      MIN-ACCESS read-only\n      DESCRIPTION\n
    \         \"Write access is not required.\"\n      OBJECT     ipMcastSsmRangeStorageType\n
    \     MIN-ACCESS read-only\n      DESCRIPTION\n          \"Write access is not
    required.\"\n      GROUP        ipMcastMIBRouteDiagnosticsGroup\n      DESCRIPTION\n
    \         \"This group is not mandatory, but SHOULD be supported where\n          hardware
    permits.\"\n      GROUP        ipMcastMIBPktsOutGroup\n      DESCRIPTION\n          \"This
    group is optional.\"\n      GROUP        ipMcastMIBHopCountGroup\n      DESCRIPTION\n
    \         \"This group is optional.\"\n      GROUP        ipMcastMIBRouteOctetsGroup\n
    \     DESCRIPTION\n          \"This group is optional.\"\n      GROUP        ipMcastMIBRouteBpsGroup\n
    \     DESCRIPTION\n          \"This group is optional.\"\n      GROUP        ipMcastMIBLocalListenerGroup\n
    \     DESCRIPTION\n          \"This group is optional.\"\n      GROUP        ipMcastMIBBoundaryIfGroup\n
    \     DESCRIPTION\n          \"This group is optional.\"\n      GROUP        ipMcastMIBScopeNameGroup\n
    \     DESCRIPTION\n          \"This group is optional.\"\n    ::= { ipMcastMIBCompliances
    2 }\n"
  - "ipMcastMIBComplianceBorderRouter MODULE-COMPLIANCE\n    STATUS  current\n    DESCRIPTION\n
    \           \"The compliance statement for routers on scope\n            boundaries
    supporting IPMCAST-MIB.\n            Support for either InetAddressType ipv4z
    or ipv6z is\n            mandatory; support for both InetAddressTypes ipv4z and\n
    \           ipv6z is optional.\n            -- OBJECT     ipMcastSsmRangeAddressType\n
    \           -- SYNTAX     InetAddressType {ipv4(1), ipv6(2), ipv4z(3),\n            --
    \                            ipv6z(4)}\n            -- DESCRIPTION\n            --
    \    This compliance requires support for ipv4 or ipv6.\n            --\n            --
    OBJECT     ipMcastSsmRangeAddress\n            -- SYNTAX     InetAddress (SIZE
    (4|8|16|20))\n            -- DESCRIPTION\n            --     This compliance requires
    support for ipv4 or ipv6.\n            --\n            -- OBJECT     ipMcastRouteGroupAddressType\n
    \           -- SYNTAX     InetAddressType {unknown(0), ipv4(1), ipv6(2),\n            --
    \                            ipv4z(3), ipv6z(4)}\n            -- DESCRIPTION\n
    \           --     This compliance requires support for unknown and\n            --
    \    either ipv4 or ipv6.\n            --\n            -- OBJECT     ipMcastRouteGroup\n
    \           -- SYNTAX     InetAddress (SIZE (0|4|8|16|20))\n            -- DESCRIPTION\n
    \           --     This compliance requires support for unknown and\n            --
    \    either ipv4 and ipv4z or ipv6 and ipv6z.\n            --\n            --
    OBJECT     ipMcastRouteSourceAddressType\n            -- SYNTAX     InetAddressType
    {unknown(0), ipv4(1), ipv6(2),\n            --                             ipv4z(3),
    ipv6z(4)}\n            -- DESCRIPTION\n            --     This compliance requires
    support for unknown and\n            --     either ipv4 and ipv4z or ipv6 and
    ipv6z.\n            --\n            -- OBJECT     ipMcastRouteSource\n            --
    SYNTAX     InetAddress (SIZE (0|4|8|16|20))\n            -- DESCRIPTION\n            --
    \    This compliance requires support for unknown and\n            --     either
    ipv4 and ipv4z or ipv6 and ipv6z.\n            --\n            -- OBJECT     ipMcastRouteNextHopGroupAddressType\n
    \           -- SYNTAX     InetAddressType {unknown(0), ipv4(1), ipv6(2),\n            --
    \                            ipv4z(3), ipv6z(4)}\n            -- DESCRIPTION\n
    \           --     This compliance requires support for unknown and\n            --
    \    either ipv4 and ipv4z or ipv6 and ipv6z.\n            --\n            --
    OBJECT     ipMcastRouteNextHopGroup\n            -- SYNTAX     InetAddress (SIZE
    (0|4|8|16|20))\n            -- DESCRIPTION\n            --     This compliance
    requires support for unknown and\n            --     either ipv4 and ipv4z or
    ipv6 and ipv6z.\n            --\n            -- OBJECT     ipMcastRouteNextHopSourceAddressType\n
    \           -- SYNTAX     InetAddressType {unknown(0), ipv4(1), ipv6(2),\n            --
    \                            ipv4z(3), ipv6z(4)}\n            -- DESCRIPTION\n
    \           --     This compliance requires support for unknown and\n            --
    \    either ipv4 and ipv4z or ipv6 and ipv6z.\n            --\n            --
    OBJECT     ipMcastRouteNextHopSource\n            -- SYNTAX     InetAddress (SIZE
    (0|4|8|16|20))\n            -- DESCRIPTION\n            --     This compliance
    requires support for unknown and\n            --     either ipv4 and ipv4z or
    ipv6 and ipv6z.\n            --\n            -- OBJECT     ipMcastRouteNextHopAddressType\n
    \           -- SYNTAX     InetAddressType {unknown(0), ipv4(1), ipv6(2),\n            --
    \                            ipv4z(3), ipv6z(4)}\n            -- DESCRIPTION\n
    \           --     This compliance requires support for unknown and\n            --
    \    either ipv4 and ipv4z or ipv6 and ipv6z.\n            --\n            --
    OBJECT     ipMcastRouteNextHopAddress\n            -- SYNTAX     InetAddress (SIZE
    (0|4|8|16|20))\n            -- DESCRIPTION\n            --     This compliance
    requires support for unknown and\n            --     either ipv4 and ipv4z or
    ipv6 and ipv6z.\n            --\n            -- OBJECT     ipMcastBoundaryAddressType\n
    \           -- SYNTAX     InetAddressType {ipv4(1), ipv6(2)}\n            -- DESCRIPTION\n
    \           --     This compliance requires support for ipv4 or ipv6.\n            --\n
    \           -- OBJECT     ipMcastBoundaryAddress\n            -- SYNTAX     InetAddress
    (SIZE (4|16)\n            -- DESCRIPTION\n            --     This compliance requires
    support for ipv4 or ipv6.\n            --\n            -- OBJECT     ipMcastScopeNameAddressType\n
    \           -- SYNTAX     InetAddressType {ipv4(1), ipv6(2)}\n            -- DESCRIPTION\n
    \           --     This compliance requires support for ipv4 or ipv6.\n            --\n
    \           -- OBJECT     ipMcastScopeNameAddress\n            -- SYNTAX     InetAddress
    (SIZE (4|16)\n            -- DESCRIPTION\n            --     This compliance requires
    support for ipv4 or ipv6.\"\n    MODULE  -- this module\n    MANDATORY-GROUPS
    { ipMcastMIBRouteProtoGroup,\n                       ipMcastMIBBasicGroup,\n                       ipMcastMIBSsmGroup,\n
    \                      ipMcastMIBRouteGroup,\n                       ipMcastMIBBoundaryIfGroup,\n
    \                      ipMcastMIBScopeNameGroup }\n      OBJECT     ipMcastEnabled\n
    \     MIN-ACCESS read-only\n      DESCRIPTION\n          \"Write access is not
    required.\"\n      OBJECT     ipMcastDeviceConfigStorageType\n      MIN-ACCESS
    read-only\n      DESCRIPTION\n          \"Write access is not required.\"\n      OBJECT
    \    ipMcastInterfaceTtl\n      MIN-ACCESS read-only\n      DESCRIPTION\n          \"Write
    access is not required.\"\n      OBJECT     ipMcastInterfaceRateLimit\n      MIN-ACCESS
    read-only\n      DESCRIPTION\n          \"Write access is not required.\"\n      OBJECT
    \    ipMcastInterfaceStorageType\n      MIN-ACCESS read-only\n      DESCRIPTION\n
    \         \"Write access is not required.\"\n      OBJECT     ipMcastRouteUpstreamNeighborType\n
    \     SYNTAX     InetAddressType { unknown(0), ipv4(1), ipv6(2),\n                                   ipv4z(3),
    ipv6z(4) }\n      DESCRIPTION\n          \"This compliance requires support for
    unknown and either ipv4\n          and ipv4z, or ipv6 and ipv6z.\"\n      OBJECT
    \    ipMcastRouteUpstreamNeighbor\n      SYNTAX     InetAddress (SIZE (0|4|8|16|20))\n
    \     DESCRIPTION\n          \"This compliance requires support for unknown and
    either ipv4\n          and ipv4z, or ipv6 and ipv6z.\"\n      OBJECT     ipMcastRouteRtAddressType\n
    \     SYNTAX     InetAddressType { unknown(0), ipv4(1), ipv6(2),\n                                   ipv4z(3),
    ipv6z(4) }\n      DESCRIPTION\n          \"This compliance requires support for
    unknown and either ipv4\n          and ipv4z, or ipv6 and ipv6z.\"\n      OBJECT
    \    ipMcastRouteRtAddress\n      SYNTAX     InetAddress (SIZE (0|4|8|16|20))\n
    \     DESCRIPTION\n          \"This compliance requires support for unknown and
    either ipv4\n          and ipv4z, or ipv6 and ipv6z.\"\n      OBJECT     ipMcastSsmRangeRowStatus\n
    \     MIN-ACCESS read-only\n      DESCRIPTION\n          \"Write access is not
    required.\"\n      OBJECT     ipMcastSsmRangeStorageType\n      MIN-ACCESS read-only\n
    \     DESCRIPTION\n          \"Write access is not required.\"\n      GROUP        ipMcastMIBRouteDiagnosticsGroup\n
    \     DESCRIPTION\n          \"This group is not mandatory, but SHOULD be supported
    where\n          hardware permits.\"\n      GROUP        ipMcastMIBPktsOutGroup\n
    \     DESCRIPTION\n          \"This group is optional.\"\n      GROUP        ipMcastMIBHopCountGroup\n
    \     DESCRIPTION\n          \"This group is optional.\"\n      GROUP        ipMcastMIBRouteOctetsGroup\n
    \     DESCRIPTION\n          \"This group is optional.\"\n      GROUP        ipMcastMIBRouteBpsGroup\n
    \     DESCRIPTION\n          \"This group is optional.\"\n      GROUP        ipMcastMIBLocalListenerGroup\n
    \     DESCRIPTION\n          \"This group is optional.\"\n      OBJECT     ipMcastZoneScopeAddressType\n
    \     SYNTAX     InetAddressType { ipv4(1), ipv6(2) }\n      DESCRIPTION\n          \"This
    compliance requires support for ipv4 or ipv6.\"\n      OBJECT     ipMcastZoneScopeAddress\n
    \     SYNTAX     InetAddress (SIZE (4|16))\n      DESCRIPTION\n          \"This
    compliance requires support for ipv4 or ipv6.\"\n    ::= { ipMcastMIBCompliances
    3 }\n"
  - '--

    '
  - '-- Units of conformance

    '
  - '--

    '
  - "ipMcastMIBBasicGroup OBJECT-GROUP\n    OBJECTS { ipMcastEnabled,\n              ipMcastRouteEntryCount,\n
    \             ipMcastDeviceConfigStorageType\n            }\n    STATUS  current\n
    \   DESCRIPTION\n            \"A collection of objects to support basic management
    of IP\n            Multicast protocols.\"\n    ::= { ipMcastMIBGroups 1 }\n"
  - "ipMcastMIBSsmGroup OBJECT-GROUP\n    OBJECTS { ipMcastSsmRangeRowStatus,\n              ipMcastSsmRangeStorageType
    }\n    STATUS  current\n    DESCRIPTION\n            \"A collection of objects
    to support management of Source-\n            Specific Multicast routing.\"\n
    \   ::= { ipMcastMIBGroups 2 }\n"
  - "ipMcastMIBRouteGroup OBJECT-GROUP\n    OBJECTS { ipMcastInterfaceTtl,\n              ipMcastInterfaceRateLimit,\n
    \             ipMcastInterfaceStorageType,\n              ipMcastRouteUpstreamNeighborType,\n
    \             ipMcastRouteUpstreamNeighbor,\n              ipMcastRouteInIfIndex,\n
    \             ipMcastRouteTimeStamp,\n              ipMcastRouteExpiryTime,\n
    \             ipMcastRouteNextHopState,\n              ipMcastRouteNextHopTimeStamp,\n
    \             ipMcastRouteNextHopExpiryTime\n            }\n    STATUS  current\n
    \   DESCRIPTION\n            \"A collection of objects to support basic management
    of IP\n            Multicast routing.\"\n    ::= { ipMcastMIBGroups 3 }\n"
  - "ipMcastMIBRouteDiagnosticsGroup OBJECT-GROUP\n    OBJECTS { ipMcastRoutePkts,\n
    \             ipMcastRouteTtlDropPackets,\n              ipMcastRouteDifferentInIfPackets\n
    \           }\n    STATUS  current\n    DESCRIPTION\n            \"A collection
    of routing diagnostic packet counters.\"\n    ::= { ipMcastMIBGroups 4 }\n"
  - "ipMcastMIBPktsOutGroup OBJECT-GROUP\n    OBJECTS { ipMcastRouteNextHopTimeStamp,\n
    \             ipMcastRouteNextHopPkts }\n    STATUS  current\n    DESCRIPTION\n
    \           \"A collection of objects to support management of packet\n            counters
    for each outgoing interface entry of a route.\"\n    ::= { ipMcastMIBGroups 5
    }\n"
  - "ipMcastMIBHopCountGroup OBJECT-GROUP\n    OBJECTS { ipMcastRouteNextHopClosestMemberHops
    }\n    STATUS  current\n    DESCRIPTION\n            \"A collection of objects
    to support management of the use of\n            hop counts in IP Multicast routing.\"\n
    \   ::= { ipMcastMIBGroups 6 }\n"
  - "ipMcastMIBRouteOctetsGroup OBJECT-GROUP\n    OBJECTS { ipMcastRouteTimeStamp,\n
    \             ipMcastRouteOctets,\n              ipMcastRouteTtlDropOctets,\n
    \             ipMcastRouteDifferentInIfOctets,\n              ipMcastRouteNextHopTimeStamp,\n
    \             ipMcastRouteNextHopOctets }\n    STATUS  current\n    DESCRIPTION\n
    \           \"A collection of objects to support management of octet\n            counters
    for each forwarding entry.\"\n    ::= { ipMcastMIBGroups 7 }\n"
  - "ipMcastMIBRouteBpsGroup OBJECT-GROUP\n    OBJECTS { ipMcastRouteBps }\n    STATUS
    \ current\n    DESCRIPTION\n            \"A collection of objects to support sampling
    of data rate\n            in bits per second for each forwarding entry.\"\n    ::=
    { ipMcastMIBGroups 8 }\n"
  - "ipMcastMIBRouteProtoGroup OBJECT-GROUP\n    OBJECTS { ipMcastRouteProtocol, ipMcastRouteRtProtocol,\n
    \             ipMcastRouteRtAddressType, ipMcastRouteRtAddress,\n              ipMcastRouteRtPrefixLength,
    ipMcastRouteRtType,\n              ipMcastRouteNextHopProtocol }\n    STATUS  current\n
    \   DESCRIPTION\n            \"A collection of objects providing information on
    the\n            relationship between multicast routing information and the\n
    \           IP Forwarding Table.\"\n    ::= { ipMcastMIBGroups 9 }\n"
  - "ipMcastMIBLocalListenerGroup OBJECT-GROUP\n    OBJECTS { ipMcastLocalListenerRunIndex
    }\n    STATUS  current\n    DESCRIPTION\n            \"A collection of objects
    to support management of local\n            listeners on hosts or routers.\"\n
    \   ::= { ipMcastMIBGroups 10 }\n"
  - "ipMcastMIBBoundaryIfGroup OBJECT-GROUP\n    OBJECTS { ipMcastBoundaryTimeStamp,\n
    \             ipMcastBoundaryDroppedMcastOctets,\n              ipMcastBoundaryDroppedMcastPkts,\n
    \             ipMcastBoundaryStatus,\n              ipMcastBoundaryStorageType,\n
    \             ipMcastZoneScopeDefaultZoneIndex,\n              ipMcastZoneScopeAddressType,\n
    \             ipMcastZoneScopeAddress,\n              ipMcastZoneScopeAddressPrefixLength\n
    \           }\n    STATUS  current\n    DESCRIPTION\n            \"A collection
    of objects to support management of multicast\n            scope zone boundaries.\"\n
    \   ::= { ipMcastMIBGroups 11 }\n"
  - "ipMcastMIBScopeNameGroup OBJECT-GROUP\n    OBJECTS { ipMcastScopeNameString,
    ipMcastScopeNameDefault,\n              ipMcastScopeNameStatus, ipMcastScopeNameStorageType
    }\n    STATUS  current\n    DESCRIPTION\n            \"A collection of objects
    to support management of multicast\n            address scope names.\"\n    ::=
    { ipMcastMIBGroups 12 }\n"
  - 'END

    '
  title: 6.  Definitions
- contents:
  - '7.  Security Considerations

    '
  - contents:
    - "7.1.  SNMPv3\n   SNMP versions prior to SNMPv3 did not include adequate security.\n
      \  Even if the network itself is secure (for example by using IPsec),\n   even
      then, there is no control as to who on the secure network is\n   allowed to
      access and GET/SET (read/change/create/delete) the objects\n   in this MIB module.\n
      \  It is RECOMMENDED that implementers consider the security features as\n   provided
      by the SNMPv3 framework (see [RFC3410], section 8),\n   including full support
      for the SNMPv3 cryptographic mechanisms (for\n   authentication and privacy).\n
      \  Further, deployment of SNMP versions prior to SNMPv3 is NOT\n   RECOMMENDED.
      \ Instead, it is RECOMMENDED to deploy SNMPv3 and to\n   enable cryptographic
      security.  It is then a customer/operator\n   responsibility to ensure that
      the SNMP entity giving access to an\n   instance of this MIB module is properly
      configured to give access to\n   the objects only to those principals (users)
      that have legitimate\n   rights to access (read/change/create/delete) them.\n"
    title: 7.1.  SNMPv3
  - contents:
    - "7.2.  Writeable Objects\n   There are a number of management objects defined
      in this MIB module\n   with a MAX-ACCESS clause of read-write and/or read-create.
      \ This\n   section discusses and lists these elements.\n   Such objects may
      be considered sensitive or vulnerable in some\n   network environments.  The
      support for SET operations in a non-secure\n   environment without proper protection
      can have a negative effect on\n   network operations.\n   In this MIB module,
      possible effects that can be induced by SET\n   operations on writeable objects
      include:\n   o  Modifications to multicast routing behavior that prevent or\n
      \     disrupt services provided by the network, including (but not\n      limited
      to) multicast data traffic delivery.\n   o  Modifications to multicast routing
      behavior that allow\n      interception or subversion of information that is
      carried by the\n      network.  For example, attacks can be envisaged that would
      pass\n      nominated multicast data streams through a nominated location,\n
      \     without the sources or listeners becoming aware of this\n      subversion.\n
      \  The following are the read-write and read-create objects defined in\n   this
      MIB module.\n   ipMcastEnabled ipMcastDeviceConfigStorageType ipMcastInterfaceTtl\n
      \  ipMcastInterfaceRateLimit ipMcastInterfaceStorageType\n   ipMcastSsmRangeRowStatus
      ipMcastSsmRangeStorageType\n   ipMcastBoundaryStatus ipMcastBoundaryStorageType\n
      \  ipMcastScopeNameString ipMcastScopeNameDefault ipMcastScopeNameStatus\n   ipMcastScopeNameStorageType\n"
    title: 7.2.  Writeable Objects
  - contents:
    - "7.3.  Readable Objects\n   As well as the writeable objects discussed above,
      there are a number\n   of readable objects (i.e., objects with a MAX-ACCESS
      other than not-\n   accessible) that may be considered sensitive or vulnerable
      in some\n   network environments.  It is thus important to control even GET\n
      \  and/or NOTIFY access to these objects and possibly to even encrypt\n   the
      values of these objects when sending them over the network via\n   SNMP.\n   In
      this MIB module, possible effects that can be induced by GET\n   and/or NOTIFY
      operations include:\n   o  Determination of the topology, disposition, and composition
      of the\n      network.  This information may be commercially sensitive, and
      may\n      also be used in preparation for attacks, including any of the\n      attacks
      described above.\n   o  Determinion of whether multicast data is flowing in
      the network,\n      or has flowed recently, as well as the locations of senders
      and\n      recipients.  An attacker can apply 'traffic analysis' to this\n      data.
      \ In some cases, the information revealed by traffic analyses\n      can be
      as damaging as full knowledge of the data being\n      transported.\n"
    title: 7.3.  Readable Objects
  title: 7.  Security Considerations
- contents:
  - "8.  IANA Considerations\n   IPMCAST-MIB is rooted under the mib-2 subtree.  IANA
    has assigned {\n   mib-2 168 } to the IPMCAST-MIB module specified in this document.\n"
  title: 8.  IANA Considerations
- contents:
  - "9.  Acknowledgements\n   This MIB module is based on the original work in [RFC2932]
    by K.\n   McCloghrie, D. Farinacci, and D. Thaler.\n   Suggested IPv6 multicast
    MIBs by R. Sivaramu and R. Raghunarayan have\n   been used for comparison while
    editing this MIB module.\n   The authors are grateful to Bill Fenner for fine
    ideas, and to Bharat\n   Joshi for input and several corrections.\n   The authors
    also wish to thank John Flick, Bert Wijnen, and Stig\n   Venaas for their reviewing
    and comments.\n"
  title: 9.  Acknowledgements
- contents:
  - '10.  References

    '
  - contents:
    - "10.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
      1997.\n   [RFC2365]  Meyer, D., \"Administratively Scoped IP Multicast\", BCP
      23,\n              RFC 2365, July 1998.\n   [RFC2578]  McCloghrie, K., Ed.,
      Perkins, D., Ed., and J.\n              Schoenwaelder, Ed., \"Structure of Management
      Information\n              Version 2 (SMIv2)\", STD 58, RFC 2578, April 1999.\n
      \  [RFC2579]  McCloghrie, K., Ed., Perkins, D., Ed., and J.\n              Schoenwaelder,
      Ed., \"Textual Conventions for SMIv2\",\n              STD 58, RFC 2579, April
      1999.\n   [RFC2580]  McCloghrie, K., Perkins, D., and J. Schoenwaelder,\n              \"Conformance
      Statements for SMIv2\", STD 58, RFC 2580,\n              April 1999.\n   [RFC2856]
      \ Bierman, A., McCloghrie, K., and R. Presuhn, \"Textual\n              Conventions
      for Additional High Capacity Data Types\",\n              RFC 2856, June 2000.\n
      \  [RFC2863]  McCloghrie, K. and F. Kastenholz, \"The Interfaces Group\n              MIB\",
      RFC 2863, June 2000.\n   [RFC3306]  Haberman, B. and D. Thaler, \"Unicast-Prefix-based
      IPv6\n              Multicast Addresses\", RFC 3306, August 2002.\n   [RFC3411]
      \ Harrington, D., Presuhn, R., and B. Wijnen, \"An\n              Architecture
      for Describing Simple Network Management\n              Protocol (SNMP) Management
      Frameworks\", STD 62, RFC 3411,\n              December 2002.\n   [RFC4001]
      \ Daniele, M., Haberman, B., Routhier, S., and J.\n              Schoenwaelder,
      \"Textual Conventions for Internet Network\n              Addresses\", RFC 4001,
      February 2005.\n   [RFC4007]  Deering, S., Haberman, B., Jinmei, T., Nordmark,
      E., and\n              B. Zill, \"IPv6 Scoped Address Architecture\", RFC 4007,\n
      \             March 2005.\n   [RFC4291]  Hinden, R. and S. Deering, \"IP Version
      6 Addressing\n              Architecture\", RFC 4291, February 2006.\n   [RFC5131]
      \ McWalter, D., \"A MIB Textual Convention for Language\n              Tags\",
      RFC 5131, December 2007.\n"
    title: 10.1.  Normative References
  - contents:
    - "10.2.  Informative References\n   [RFC2287]  Krupczak, C. and J. Saperia, \"Definitions
      of System-Level\n              Managed Objects for Applications\", RFC 2287,\n
      \             February 1998.\n   [RFC2932]  McCloghrie, K., Farinacci, D., and
      D. Thaler, \"IPv4\n              Multicast Routing MIB\", RFC 2932, October
      2000.\n   [RFC3410]  Case, J., Mundy, R., Partain, D., and B. Stewart,\n              \"Introduction
      and Applicability Statements for Internet-\n              Standard Management
      Framework\", RFC 3410, December 2002.\n   [RFC3569]  Bhattacharyya, S., \"An
      Overview of Source-Specific\n              Multicast (SSM)\", RFC 3569, July
      2003.\n   [RFC4293]  Routhier, S., \"Management Information Base for the\n              Internet
      Protocol (IP)\", RFC 4293, April 2006.\n   [RFC4601]  Fenner, B., Handley, M.,
      Holbrook, H., and I. Kouvelas,\n              \"Protocol Independent Multicast
      - Sparse Mode (PIM-SM):\n              Protocol Specification (Revised)\", RFC
      4601, August 2006.\n   [RFC4646]  Phillips, A. and M. Davis, \"Tags for Identifying\n
      \             Languages\", BCP 47, RFC 4646, September 2006.\n   [RFC5015]  Handley,
      M., Kouvelas, I., Speakman, T., and L. Vicisano,\n              \"Bidirectional
      Protocol Independent Multicast (BIDIR-\n              PIM)\", RFC 5015, October
      2007.\n"
    title: 10.2.  Informative References
  title: 10.  References
- contents:
  - "Authors' Addresses\n   David McWalter\n   Data Connection Ltd\n   100 Church
    Street\n   Enfield  EN2 6BQ\n   UK\n   EMail: dmcw@dataconnection.com\n   Dave
    Thaler\n   Microsoft Corporation\n   One Microsoft Way\n   Redmond, WA  98052-6399\n
    \  USA\n   EMail: dthaler@windows.microsoft.com\n   Andrew Kessler\n   Cisco Systems\n
    \  425 E. Tasman Drive\n   San Jose, CA  95134\n   USA\n   EMail: kessler@cisco.com\n"
  title: Authors' Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document
    is subject to the rights, licenses and restrictions\n   contained in BCP 78, and
    except as set forth therein, the authors\n   retain all their rights.\n   This
    document and the information contained herein are provided on an\n   \"AS IS\"
    basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE INTERNET ENGINEERING
    TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED, INCLUDING BUT NOT
    LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT INFRINGE
    ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
