- title: __initial_text__
  contents:
  - "      Stateful Path Computation Element (PCE) Protocol Extensions\n   for Usage\
    \ with Point-to-Multipoint TE Label Switched Paths (LSPs)\n"
- title: Abstract
  contents:
  - "Abstract\n   The Path Computation Element (PCE) has been identified as an\n \
    \  appropriate technology for the determination of the paths of point-\n   to-multipoint\
    \ (P2MP) TE Label Switched Paths (LSPs).  This document\n   provides extensions\
    \ required for the Path Computation Element\n   Communication Protocol (PCEP)\
    \ so as to enable the usage of a stateful\n   PCE capability in supporting P2MP\
    \ TE LSPs.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8623.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n     1.1.  Requirements Language . . . . . . . . . . . . . .\
    \ . . . .   4\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .   4\n   3.  Supporting P2MP TE LSPs for Stateful PCE  . . . . . . . .\
    \ . .   4\n     3.1.  Motivation  . . . . . . . . . . . . . . . . . . . . . .\
    \ .   4\n     3.2.  Objectives  . . . . . . . . . . . . . . . . . . . . . . .\
    \   5\n   4.  Functions to Support P2MP TE LSPs for Stateful PCEs . . . . .  \
    \ 5\n   5.  Architectural Overview of Protocol Extensions . . . . . . . .   6\n\
    \     5.1.  Extension of PCEP Messages  . . . . . . . . . . . . . . .   6\n  \
    \   5.2.  Capability Advertisement  . . . . . . . . . . . . . . . .   7\n    \
    \ 5.3.  IGP Extensions for Stateful PCE P2MP Capabilities\n           Advertisement\
    \ . . . . . . . . . . . . . . . . . . . . . .   7\n     5.4.  State Synchronization\
    \ . . . . . . . . . . . . . . . . . .   8\n     5.5.  LSP Delegation  . . . .\
    \ . . . . . . . . . . . . . . . . .   8\n     5.6.  LSP Operations  . . . . .\
    \ . . . . . . . . . . . . . . . .   9\n       5.6.1.  Passive Stateful PCE  .\
    \ . . . . . . . . . . . . . . .   9\n       5.6.2.  Active Stateful PCE . . .\
    \ . . . . . . . . . . . . . .   9\n       5.6.3.  PCE-Initiated LSP . . . . .\
    \ . . . . . . . . . . . . .   9\n         5.6.3.1.  P2MP TE LSPs Instantiation\
    \  . . . . . . . . . . .   9\n         5.6.3.2.  P2MP TE LSPs Deletion . . . .\
    \ . . . . . . . . . .  10\n         5.6.3.3.  Adding and Pruning Leaves for the\
    \ P2MP TE LSP . .  10\n         5.6.3.4.  P2MP TE LSPs Delegation and Cleanup\
    \ . . . . . . .  10\n   6.  PCEP Message Extensions . . . . . . . . . . . . .\
    \ . . . . . .  11\n     6.1.  The PCRpt Message . . . . . . . . . . . . . . .\
    \ . . . . .  11\n     6.2.  The PCUpd Message . . . . . . . . . . . . . . . .\
    \ . . . .  13\n     6.3.  The PCReq Message . . . . . . . . . . . . . . . . .\
    \ . . .  14\n     6.4.  The PCRep Message . . . . . . . . . . . . . . . . . .\
    \ . .  15\n     6.5.  The PCInitiate Message  . . . . . . . . . . . . . . . .\
    \ .  16\n     6.6.  Example . . . . . . . . . . . . . . . . . . . . . . . . .\
    \  17\n       6.6.1.  P2MP TE LSPs Update Request . . . . . . . . . . . . .  17\n\
    \       6.6.2.  P2MP TE LSP Report  . . . . . . . . . . . . . . . . .  17\n  \
    \     6.6.3.  P2MP TE LSPs Initiation Request . . . . . . . . . . .  18\n   7.\
    \  PCEP Object Extensions  . . . . . . . . . . . . . . . . . . .  19\n     7.1.\
    \  LSP Object Extension  . . . . . . . . . . . . . . . . . .  19\n       7.1.1.\
    \  P2MP-LSP-IDENTIFIERS TLV  . . . . . . . . . . . . . .  19\n     7.2.  S2LS\
    \ Object . . . . . . . . . . . . . . . . . . . . . . .  22\n   8.  Message Fragmentation\
    \ . . . . . . . . . . . . . . . . . . . .  23\n     8.1.  Report Fragmentation\
    \ Procedure  . . . . . . . . . . . . .  23\n     8.2.  Update Fragmentation Procedure\
    \  . . . . . . . . . . . . .  23\n     8.3.  PCInitiate Fragmentation Procedure\
    \  . . . . . . . . . . .  24\n   9.  Nonsupport of P2MP TE LSPs for Stateful PCE\
    \ . . . . . . . . .  24\n   10. Manageability Considerations  . . . . . . . .\
    \ . . . . . . . .  25\n     10.1.  Control of Function and Policy . . . . . .\
    \ . . . . . . .  25\n     10.2.  Information and Data Models  . . . . . . . .\
    \ . . . . . .  25\n     10.3.  Liveness Detection and Monitoring  . . . . . .\
    \ . . . . .  25\n     10.4.  Verify Correct Operations  . . . . . . . . . . .\
    \ . . . .  26\n     10.5.  Requirements on Other Protocols  . . . . . . . . .\
    \ . . .  26\n     10.6.  Impact on Network Operations . . . . . . . . . . . .\
    \ . .  26\n   11. IANA Considerations . . . . . . . . . . . . . . . . . . . .\
    \ .  26\n     11.1.  PCE Capabilities in IGP Advertisements . . . . . . . . .\
    \  26\n     11.2.  STATEFUL-PCE-CAPABILITY TLV  . . . . . . . . . . . . . .  26\n\
    \     11.3.  LSP Object . . . . . . . . . . . . . . . . . . . . . . .  27\n  \
    \   11.4.  PCEP-ERROR Object  . . . . . . . . . . . . . . . . . . .  27\n    \
    \ 11.5.  PCEP TLV Type Indicators . . . . . . . . . . . . . . . .  28\n     11.6.\
    \  PCEP Object  . . . . . . . . . . . . . . . . . . . . . .  28\n     11.7.  S2LS\
    \ Object  . . . . . . . . . . . . . . . . . . . . . .  28\n   12. Security Considerations\
    \ . . . . . . . . . . . . . . . . . . .  29\n   13. References  . . . . . . .\
    \ . . . . . . . . . . . . . . . . . .  29\n     13.1.  Normative References .\
    \ . . . . . . . . . . . . . . . . .  29\n     13.2.  Informative References .\
    \ . . . . . . . . . . . . . . . .  31\n   Acknowledgments . . . . . . . . . .\
    \ . . . . . . . . . . . . . . .  32\n   Contributors  . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . .  32\n   Authors' Addresses  . . . . . . . . . .\
    \ . . . . . . . . . . . . .  33\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   As per [RFC4655], the Path Computation Element (PCE) is\
    \ an entity\n   that is capable of computing a network path or route based on\
    \ a\n   network graph and applying computational constraints.  A Path\n   Computation\
    \ Client (PCC) may make requests to a PCE for paths to be\n   computed.\n   [RFC4875]\
    \ describes how to set up point-to-multipoint (P2MP) Traffic\n   Engineering Label\
    \ Switched Paths (TE LSPs) for use in Multiprotocol\n   Label Switching (MPLS)\
    \ and Generalized MPLS (GMPLS) networks.\n   [RFC5671] examines the applicability\
    \ of PCE for the path computation\n   for P2MP TE LSPs.\n   The PCEP is designed\
    \ as a communication protocol between PCCs and\n   PCEs for point-to-point (P2P)\
    \ path computations and is defined in\n   [RFC5440].  The extensions of PCEP to\
    \ request path computation for\n   P2MP TE LSPs are described in [RFC8306].\n\
    \   Stateful PCEs are shown to be helpful in many application scenarios,\n   in\
    \ both MPLS and GMPLS networks, as illustrated in [RFC8051].  These\n   scenarios\
    \ apply equally to P2P and P2MP TE LSPs.  [RFC8231] provides\n   the fundamental\
    \ extensions to PCEP needed for stateful PCE to support\n   general functionality\
    \ for P2P TE LSP.  [RFC8281] provides extensions\n   to PCEP needed for stateful\
    \ PCE-initiated P2P TE LSP.  This document\n   complements that work by focusing\
    \ on PCEP extensions that are\n   necessary in order for the deployment of stateful\
    \ PCEs to support\n   P2MP TE LSPs.  This document describes the setup, maintenance,\
    \ and\n   teardown of PCE-initiated P2MP LSPs under the stateful PCE model.\n"
- title: 1.1.  Requirements Language
  contents:
  - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   Terminology used in this document is the same as terminology\
    \ used in\n   [RFC8231], [RFC8281], and [RFC8306].\n"
- title: 3.  Supporting P2MP TE LSPs for Stateful PCE
  contents:
  - '3.  Supporting P2MP TE LSPs for Stateful PCE

    '
- title: 3.1.  Motivation
  contents:
  - "3.1.  Motivation\n   [RFC8051] presents several use cases, demonstrating scenarios\
    \ that\n   benefit from the deployment of a stateful PCE including optimization,\n\
    \   recovery, etc., which are equally applicable to P2MP TE LSPs.\n   [RFC8231]\
    \ defines the extensions to PCEP needed for stateful\n   operation of P2P TE LSPs.\
    \  This document complements the previous\n   work by focusing on extensions that\
    \ are necessary in order for the\n   deployment of stateful PCEs to support P2MP\
    \ TE LSPs.\n   In addition to that, the stateful nature of a PCE simplifies the\n\
    \   information conveyed in PCEP messages since it is possible to refer\n   to\
    \ the LSPs via a PCEP-specific LSP identifier (PLSP-ID) ([RFC8231]).\n   For P2MP,\
    \ where the size of the message is much larger, this is an\n   added advantage.\
    \  When using a stateless PCE, a request to modify an\n   existing P2MP tree requires\
    \ that all the leaves are presented in the\n   PCEP messages along with all the\
    \ path information.  But when using a\n   stateful PCE, the PCEP messages can\
    \ use a PLSP-ID to represent all\n   information about the LSP that has previously\
    \ been exchanged in PCEP\n   messages, and it is only necessary to encode the\
    \ modifications (such\n   as new or removed leaf nodes).  The PLSP-ID provides\
    \ an index into\n   the LSP-DB at the PCE and identifies the LSP at the PCC.\n\
    \   In environments where the P2MP TE LSPs placement needs to change in\n   response\
    \ to application demands, it is useful to support dynamic\n   creation and tear\
    \ down of P2MP TE LSPs.  The ability for a PCE to\n   trigger the creation of\
    \ P2MP TE LSPs on demand can be seamlessly\n   integrated into a controller-based\
    \ network architecture where\n   intelligence in the controller can determine\
    \ when and where to set up\n   paths.  Section 3 of [RFC8281] further describes\
    \ the motivation\n   behind the PCE-Initiation capability, which is equally applicable\
    \ to\n   P2MP TE LSPs.\n"
- title: 3.2.  Objectives
  contents:
  - "3.2.  Objectives\n   The objectives for the protocol extensions to support P2MP\
    \ TE LSPs\n   for stateful PCE are the same as the objectives described in\n \
    \  Section 3.2 of [RFC8231].\n"
- title: 4.  Functions to Support P2MP TE LSPs for Stateful PCEs
  contents:
  - "4.  Functions to Support P2MP TE LSPs for Stateful PCEs\n   [RFC8231] specifies\
    \ new functions to support a stateful PCE.  It also\n   specifies that a function\
    \ can be initiated either from a PCC towards\n   a PCE (C-E) or from a PCE towards\
    \ a PCC (E-C).\n   This document extends these functions to support P2MP TE LSPs:\n\
    \   Capability Advertisement (E-C,C-E):  Both the PCC and the PCE must\n     \
    \ announce during PCEP session establishment that they support\n      Stateful\
    \ PCE extensions for P2MP using mechanisms defined in\n      Section 5.2.\n  \
    \ LSP State Synchronization (C-E):  After the session between the PCC\n      and\
    \ a stateful PCE with P2MP capability is initialized, the PCE\n      must learn\
    \ the state of a PCC's P2MP TE LSPs before it can perform\n      path computations\
    \ or update LSP attributes in a PCC.\n   LSP Update Request (E-C):  A stateful\
    \ PCE with P2MP capability\n      requests modification of attributes on a PCC's\
    \ P2MP TE LSPs.\n   LSP State Report (C-E):  A PCC sends an LSP state report to\
    \ a PCE\n      whenever the state of a P2MP TE LSP changes.\n   LSP Control Delegation\
    \ (C-E,E-C):  A PCC grants to a PCE the right to\n      update LSP attributes\
    \ on one or more P2MP TE LSPs; the PCE becomes\n      the authoritative source\
    \ of the LSP's attributes as long as the\n      delegation is in effect (See Section\
    \ 5.7 of [RFC8231]); the PCC\n      may withdraw the delegation or the PCE may\
    \ give up the delegation\n      at any time.\n   PCE-initiated LSP instantiation\
    \ (E-C):  A PCE sends an LSP Initiate\n      Message to a PCC to instantiate or\
    \ delete a P2MP TE LSP [RFC8281].\n"
- title: 5.  Architectural Overview of Protocol Extensions
  contents:
  - '5.  Architectural Overview of Protocol Extensions

    '
- title: 5.1.  Extension of PCEP Messages
  contents:
  - "5.1.  Extension of PCEP Messages\n   Two new PCEP messages are defined in [RFC8231]\
    \ to support stateful\n   PCE for P2P TE LSPs.  In this document, these messages\
    \ are extended\n   as follows to support P2MP TE LSPs.\n   Path Computation State\
    \ Report (PCRpt):  Each P2MP TE LSP State Report\n      in a PCRpt message contains\
    \ the actual P2MP TE LSP path\n      attributes, the LSP status, etc.  An LSP\
    \ State Report carried in a\n      PCRpt message is also used in delegation or\
    \ revocation of control\n      of a P2MP TE LSP to/from a PCE.  The extension\
    \ of PCRpt messages\n      is described in Section 6.1.\n   Path Computation Update\
    \ Request (PCUpd):  Each P2MP TE LSP Update\n      Request in a PCUpd message\
    \ MUST contain all LSP parameters that a\n      PCE wishes to set for a given\
    \ P2MP TE LSP.  An LSP Update Request\n      carried in a PCUpd message is also\
    \ used to return LSP delegations\n      if at any point the PCE no longer desires\
    \ control of a P2MP TE\n      LSP.  The PCUpd message is described in Section\
    \ 6.2.\n   Further, a new PCEP message is defined in [RFC8281] to support\n  \
    \ stateful PCE instantiation of P2P TE LSPs.  In this document, this\n   message\
    \ is extended as follows to support P2MP TE LSPs.\n   Path Computation LSP Initiate\
    \ Message (PCInitiate):  PCInitiate is a\n      PCEP message sent by a PCE to\
    \ a PCC to trigger the instantiation\n      or deletion of a P2MP TE LSP.  The\
    \ PCInitiate message is described\n      in Section 6.5.\n   The Path Computation\
    \ Request (PCReq) and Path Computation Reply\n   (PCRep) messages are also extended\
    \ to support passive stateful PCE\n   for P2P TE LSPs in [RFC8231].  In this document,\
    \ these messages are\n   extended to support P2MP TE LSPs as well.\n"
- title: 5.2.  Capability Advertisement
  contents:
  - "5.2.  Capability Advertisement\n   During the PCEP initialization phase, as per\
    \ Section 7.1.1 of\n   [RFC8231], PCEP speakers advertise Stateful capability\
    \ via the\n   STATEFUL-PCE-CAPABILITY TLV in the OPEN object.  Various flags are\n\
    \   defined for the STATEFUL-PCE-CAPABILITY TLV defined in [RFC8231] and\n   updated\
    \ in [RFC8281] and [RFC8232].\n   Three new flags, N (P2MP-CAPABILITY), M (P2MP-LSP-UPDATE-CAPABILITY),\n\
    \   and P (P2MP-LSP-INSTANTIATION-CAPABILITY), are added in this\n   document:\n\
    \   N (P2MP-CAPABILITY flag - 1 bit):  If set to 1 by a PCC, the N Flag\n    \
    \  indicates that the PCC is willing to send P2MP LSP State Reports\n      whenever\
    \ there's a change to the parameters or operational status\n      of the P2MP\
    \ LSP; if set to 1 by a PCE, the N Flag indicates that\n      the PCE is interested\
    \ in receiving LSP State Reports whenever\n      there is a parameter or operational\
    \ status change to the P2MP LSP.\n      The P2MP-CAPABILITY Flag MUST be advertised\
    \ by both a PCC and a\n      PCE for the P2MP extension (as per this document)\
    \ of the PCRpt\n      messages to be allowed on a PCEP session.\n   M (P2MP-LSP-UPDATE-CAPABILITY\
    \ flag - 1 bit):  If set to 1 by a PCC,\n      the M Flag indicates that the PCC\
    \ allows modification of P2MP LSP\n      parameters; if set to 1 by a PCE, the\
    \ M Flag indicates that the\n      PCE is capable of updating P2MP LSP parameters.\
    \  The P2MP-LSP-\n      UPDATE-CAPABILITY Flag MUST be advertised by both a PCC\
    \ and a PCE\n      for the P2MP extension (as per this document) of the PCUpd\n\
    \      messages to be allowed on a PCEP session.\n   P (P2MP-LSP-INSTANTIATION-CAPABILITY\
    \ flag - 1 bit):  If set to 1 by a\n      PCC, the P Flag indicates that the PCC\
    \ allows instantiation of a\n      P2MP LSP by a PCE.  If set to 1 by a PCE, the\
    \ P flag indicates\n      that the PCE supports P2MP LSP instantiation.  The P2MP-LSP-\n\
    \      INSTANTIATION-CAPABILITY flag MUST be set by both PCC and PCE in\n    \
    \  order to support PCE-initiated P2MP LSP instantiation.\n   A PCEP speaker should\
    \ continue to advertise the basic P2MP capability\n   via mechanisms as described\
    \ in [RFC8306].\n"
- title: 5.3.  IGP Extensions for Stateful PCE P2MP Capabilities Advertisement
  contents:
  - "5.3.  IGP Extensions for Stateful PCE P2MP Capabilities Advertisement\n   When\
    \ the PCC is a Label Switching Router (LSR) participating in the\n   IGP (either\
    \ OSPF or IS-IS), and PCEs are either LSRs or servers also\n   participating in\
    \ the IGP, an effective mechanism for PCE discovery\n   within an IGP routing\
    \ domain consists of utilizing IGP\n   advertisements.  Extensions for the advertisement\
    \ of PCE discovery\n   information are defined for OSPF and for IS-IS in [RFC5088]\
    \ and\n   [RFC5089], respectively.\n   The PCE-CAP-FLAGS sub-TLV, defined in [RFC5089],\
    \ is an optional sub-\n   TLV used to advertise PCE capabilities.  It MAY be present\
    \ within the\n   PCE Discovery (PCED) TLV carried by OSPF or IS-IS.  [RFC5088]\
    \ and\n   [RFC5089] provide the description and processing rules for this sub-\n\
    \   TLV when carried within OSPF and IS-IS, respectively.\n   The format of the\
    \ PCE-CAP-FLAGS sub-TLV is included below for easy\n   reference:\n   Type: 5\n\
    \   Length: Multiple of 4\n   Value: This contains an array of units of 32-bit\
    \ flags with the most\n   significant bit as 0.  Each bit represents one PCE capability.\n\
    \   PCE capability bit flags are defined in [RFC5088].  This document\n   defines\
    \ new capability bits for the stateful PCE with P2MP as\n   follows:\n       \
    \        Bit                  Capability\n               13                  \
    \ Active Stateful PCE with P2MP\n               14                   Passive Stateful\
    \ PCE with P2MP\n               15                   PCE-Initiation with P2MP\n\
    \   Note that, while active, passive, or initiation stateful PCE\n   capabilities\
    \ for P2MP may be advertised during discovery, PCEP\n   Speakers that wish to\
    \ use stateful PCEP for P2MP TE LSPs MUST\n   advertise stateful PCEP capabilities\
    \ during PCEP session setup, as\n   specified in the current document.  A PCC\
    \ MAY initiate stateful PCEP\n   P2MP capability advertisement at PCEP session\
    \ setup even if it did\n   not receive any IGP PCE capability advertisements.\n"
- title: 5.4.  State Synchronization
  contents:
  - "5.4.  State Synchronization\n   State Synchronization operations (described in\
    \ Section 5.6 of\n   [RFC8231]) are applicable for the P2MP TE LSPs as well. \
    \ The\n   optimizations described in [RFC8232] can also be applied for P2MP TE\n\
    \   LSPs.\n"
- title: 5.5.  LSP Delegation
  contents:
  - "5.5.  LSP Delegation\n   LSP delegation operations (described in Section 5.7\
    \ of [RFC8231]) are\n   applicable for P2MP TE LSPs as well.\n"
- title: 5.6.  LSP Operations
  contents:
  - '5.6.  LSP Operations

    '
- title: 5.6.1.  Passive Stateful PCE
  contents:
  - "5.6.1.  Passive Stateful PCE\n   LSP operations for passive stateful PCE (described\
    \ in Section 5.8.1\n   of [RFC8231]) are applicable for P2MP TE LSPs as well.\n\
    \   The PCReq and PCRep message format for P2MP TE LSPs is described in\n   Sections\
    \ 3.4 and 3.5 of [RFC8306], respectively.\n   The PCReq and PCRep message for\
    \ P2MP TE LSPs are extended to support\n   encoding of the LSP object so that\
    \ it is possible to refer to an LSP\n   with a unique identifier and simplify\
    \ the PCEP message exchange.  For\n   example, in case of modification of one\
    \ leaf in a P2MP tree, there\n   should be no need to carry the full P2MP tree\
    \ in a PCReq message.\n   The extensions for the Request and Response message\
    \ for passive\n   stateful operations on P2MP TE LSPs are described in Sections\
    \ 6.3 and\n   6.4.  The extension for the Path Computation LSP State Report (PCRpt)\n\
    \   message is described in Section 6.1.\n"
- title: 5.6.2.  Active Stateful PCE
  contents:
  - "5.6.2.  Active Stateful PCE\n   LSP operations for active stateful PCE (described\
    \ in Section 5.8.2 of\n   [RFC8231]) are applicable for P2MP TE LSPs as well.\n\
    \   The extension for the Path Computation LSP Update (PCUpd) message for\n  \
    \ active stateful operations on P2MP TE LSPs is described in\n   Section 6.2.\n"
- title: 5.6.3.  PCE-Initiated LSP
  contents:
  - "5.6.3.  PCE-Initiated LSP\n   As per Section 5.1 of [RFC8281], the PCE sends\
    \ a Path Computation LSP\n   Initiate Request (PCInitiate) message to the PCC\
    \ to suggest\n   instantiation or deletion of a P2P TE LSP.  This document extends\
    \ the\n   PCInitiate message to support P2MP TE LSPs (see details in\n   Section\
    \ 6.5).\n   The instantiation and deletion operations for P2MP TE LSPs are the\n\
    \   same as for P2P LSPs as described in Sections 5.3 and 5.4 of\n   [RFC8281].\n"
- title: 5.6.3.1.  P2MP TE LSPs Instantiation
  contents:
  - "5.6.3.1.  P2MP TE LSPs Instantiation\n   The instantiation operation of P2MP\
    \ TE LSPs is the same as the LSP\n   instantiation operation defined in Section\
    \ 5.3 of [RFC8281]; this\n   includes the handling of the PLSP-ID, SYMBOLIC-PATH-NAME\
    \ TLV, etc.\n   The processing rules and use of error codes remain unchanged.\
    \  The N\n   (P2MP) flag (Section 7.1) MUST be set in the LSP object in the\n\
    \   PCInitiate message by the PCE to specify that the instantiation is\n   for\
    \ P2MP TE LSPs.  Like the PLSP-ID (as per [RFC8281]), the P2MP-LSP-\n   IDENTIFIERS\
    \ TLV SHOULD NOT be included in the LSP object in\n   PCInitiate messages and\
    \ MUST be ignored on receipt.  These\n   identifiers are generated by the PCC\
    \ on receipt of the PCInitiate\n   message and reported via a PCRpt message to\
    \ the PCE.\n"
- title: 5.6.3.2.  P2MP TE LSPs Deletion
  contents:
  - "5.6.3.2.  P2MP TE LSPs Deletion\n   The deletion operation of P2MP TE LSPs is\
    \ the same as the LSP\n   deletion operation defined in Section 5.4 of [RFC8281];\
    \ this entails\n   sending an LSP Initiate Message with an LSP object carrying\
    \ the PLSP-\n   ID of the LSP to be removed as well as a Stateful PCE Request\n\
    \   Parameter (SRP) object with the R flag set (LSP-REMOVE as per\n   Section\
    \ 5.2 of [RFC8281]).  The processing rules and error codes\n   remain unchanged.\n"
- title: 5.6.3.3.  Adding and Pruning Leaves for the P2MP TE LSP
  contents:
  - "5.6.3.3.  Adding and Pruning Leaves for the P2MP TE LSP\n   The adding of new\
    \ leaves and pruning of old leaves for the PCE-\n   initiated P2MP TE LSP MUST\
    \ be carried in a PCUpd message as per\n   Section 6.2 for P2MP TE LSP extensions.\
    \  As defined in [RFC8306],\n   leaf type = 1 is used for adding new leaves, and\
    \ leaf type = 2 is\n   used for pruning old leaves of P2MP END-POINTS Objects.\n\
    \   PCC MAY use the Incremental State Update mechanism as described in\n   [RFC4875]\
    \ to signal the adding and pruning of leaves.\n   Section 3.10 of [RFC8306] defines\
    \ the error-handling procedures when\n   adding new leaves to or removing old\
    \ leaves from the existing P2MP\n   tree for PCReq messages.  The same error handling\
    \ and error codes are\n   also applicable to the stateful PCE messages as described\
    \ in this\n   document.\n"
- title: 5.6.3.4.  P2MP TE LSPs Delegation and Cleanup
  contents:
  - "5.6.3.4.  P2MP TE LSPs Delegation and Cleanup\n   P2MP TE LSPs delegation and\
    \ cleanup operations are the same as the\n   LSP delegation and cleanup operations\
    \ defined in Section 6 of\n   [RFC8281].  The processing rules and error codes\
    \ remain unchanged.\n"
- title: 6.  PCEP Message Extensions
  contents:
  - "6.  PCEP Message Extensions\n   Message formats in this section, as those in\
    \ [RFC8231], [RFC8281],\n   and [RFC5440], are presented using Routing Backus-Naur\
    \ Format (RBNF)\n   as specified in [RFC5511].\n"
- title: 6.1.  The PCRpt Message
  contents:
  - "6.1.  The PCRpt Message\n   As per Section 6.1 of [RFC8231], a PCRpt message\
    \ is used to report\n   the current state of a P2P TE LSP.  This document extends\
    \ the PCRpt\n   message in reporting the status of P2MP TE LSPs.\n   The format\
    \ of a PCRpt message is as follows:\n   <PCRpt Message> ::= <Common Header>\n\
    \                     <state-report-list>\n   Where:\n   <state-report-list> ::=\
    \ <state-report>\n                         [<state-report-list>]\n   <state-report>\
    \ ::= [<SRP>]\n                       <LSP>\n                       <path>\n \
    \  Where:\n   <path> ::= <end-point-intended-path-pair-list>\n              [<actual-attribute-list>\n\
    \              <end-point-actual-path-pair-list>]\n              [<intended-attribute-list>]\n\
    \   <end-point-intended-path-pair-list>::=\n                      [<END-POINTS>]\n\
    \                      [<S2LS>]\n                      <intended-path>\n     \
    \                 [<end-point-intended-path-pair-list>]\n   <end-point-actual-path-pair-list>::=\n\
    \                      [<END-POINTS>]\n                      [<S2LS>]\n      \
    \                <actual-path>\n                      [<end-point-actual-path-pair-list>]\n\
    \   <intended-path> ::= (<ERO>|<SERO>)\n              [<intended-path>]\n   <actual-path>\
    \ ::= (<RRO>|<SRRO>)\n              [<actual-path>]\n   <intended-attribute-list>\
    \ is defined in [RFC5440] and extended by\n   PCEP extensions.\n   <actual-attribute-list>\
    \ consists of the actual computed and signaled\n   values of the <BANDWIDTH> and\
    \ <metric-lists> objects defined in\n   [RFC5440].\n   The P2MP END-POINTS object\
    \ defined in [RFC8306] is mandatory for\n   specifying the address of P2MP leaves,\
    \ grouped by leaf types.\n   o  New leaves to add (leaf type = 1)\n   o  Old leaves\
    \ to remove (leaf type = 2)\n   o  Old leaves whose path can be modified/reoptimized\
    \ (leaf type = 3)\n   o  Old leaves whose path must be left unchanged (leaf type\
    \ = 4)\n   When reporting the status of a P2MP TE LSP, the destinations MUST be\n\
    \   grouped in the END-POINTS object based on the operational status (O\n   field\
    \ in S2LS objects) and leaf type (in END-POINTS objects).  This\n   way, leaves\
    \ of the same type that share the same operational status\n   can be grouped together.\
    \  For reporting the status of delegated P2MP\n   TE LSPs, leaf type = 3 is used,\
    \ whereas for nondelegated P2MP TE\n   LSPs, leaf type = 4 is used.\n   For a\
    \ delegated P2MP TE LSP, configuration changes are reported via a\n   PCRpt message.\
    \  For example, for adding new leaves, leaf type = 1 is\n   used in the END-POINTS\
    \ object, and for removing old leaves, leaf type\n   = 2 is used.\n   Note that\
    \ the compatibility with the [RFC8231] definition of <state-\n   report> is preserved.\
    \  At least one instance of <END-POINTS> MUST be\n   present in this message for\
    \ P2MP LSP.\n   Note that the ordering of <end-point-intended-path-pair-list>,\n\
    \   <actual-attribute-list>, <end-point-actual-path-pair-list>, and\n   <intended-attribute-list>\
    \ is done to retain compatibility with state\n   reports for the P2P LSPs as per\
    \ [RFC8231].\n   During state synchronization, the PCRpt message reports the status\
    \ of\n   the full P2MP tree.\n   The S2LS object MUST be carried in a PCRpt message\
    \ along with the\n   END-POINTS object when an N (P2MP) flag is set in an LSP\
    \ object for\n   P2MP TE LSPs.  If the S2LS object is missing, the receiving PCE\
    \ MUST\n   send a PCEP Error (PCErr) message with Error-type=6 (\"Mandatory\n\
    \   Object missing\") and Error-value=13 (\"S2LS object missing\").  If the\n\
    \   END-POINTS object is missing, the receiving PCE MUST send a PCErr\n   message\
    \ with Error-type=6 (\"Mandatory Object missing\") and Error-\n   value=3 (\"\
    END-POINTS object missing\") (defined in [RFC5440].\n   The S2LS object could\
    \ be used in conjunction with the intended-path\n   (EXPLICIT_ROUTE object or\
    \ ERO) as well as the actual-path\n   (RECORD_ROUTE object or RRO); for the same\
    \ leaf, the state encoded in\n   the S2LS object associated with the actual-path\
    \ MUST be used over the\n   intended-path.\n   If the E-bit (ERO-Compress bit)\
    \ was set to 1 in the report, then the\n   path will be formed by an ERO followed\
    \ by a list of\n   SECONDARY_EXPLICIT_ROUTE Objects (SEROs), or an RRO followed\
    \ by a\n   list of SECONDARY_RECORD_ROUTE Objects (SRROs).\n"
- title: 6.2.  The PCUpd Message
  contents:
  - "6.2.  The PCUpd Message\n   As per Section 6.2 of [RFC8231], a PCUpd message\
    \ is used to update\n   P2P TE LSP attributes.  This document extends the PCUpd\
    \ message in\n   updating the attributes of a P2MP TE LSP.\n   The format of a\
    \ PCUpd message is as follows:\n      <PCUpd Message> ::= <Common Header>\n  \
    \                        <update-request-list>\n      Where:\n      <update-request-list>\
    \ ::= <update-request>\n                                [<update-request-list>]\n\
    \      <update-request> ::= <SRP>\n                           <LSP>\n        \
    \                   <path>\n      Where:\n      <path> ::= <end-point-path-pair-list>\n\
    \                 <intended-attribute-list>\n      <end-point-path-pair-list>::=\n\
    \                      [<END-POINTS>]\n                      <intended-path>\n\
    \                      [<end-point-path-pair-list>]\n      <intended-path> ::=\
    \ (<ERO>|<SERO>)\n                 [<intended-path>]\n   <intended-attribute-list>\
    \ is the attribute-list defined in [RFC5440]\n   and extended by PCEP extensions.\n\
    \   Note that the compatibility with the [RFC8231] definition of <update-\n  \
    \ request> is preserved.\n   The PCC SHOULD use the make-before-break or sub-group-based\n\
    \   procedures described in [RFC4875] based on a local policy decision.\n   The\
    \ END-POINTS object MUST be carried in a PCUpd message when the N\n   flag is\
    \ set in the LSP object for a P2MP TE LSP.  If the END-POINTS\n   object is missing,\
    \ the receiving PCC MUST send a PCErr message with\n   Error-type=6 (\"Mandatory\
    \ Object missing\") and Error-value=3\n   (\"END-POINTS object missing\") (defined\
    \ in [RFC5440]).\n"
- title: 6.3.  The PCReq Message
  contents:
  - "6.3.  The PCReq Message\n   As per Section 3.4 of [RFC8306], a PCReq message\
    \ is used for a P2MP\n   Path Computation Request.  This document extends the\
    \ PCReq message\n   such that a PCC MAY include the LSP object in the PCReq message\
    \ if\n   the stateful PCE P2MP capability has been negotiated on a PCEP\n   session\
    \ between the PCC and a PCE.\n   The format of a PCReq message is as follows:\n\
    \    <PCReq Message>::= <Common Header>\n                       [<svec-list>]\n\
    \                       <request-list>\n   where:\n   <svec-list>::= <SVEC>\n\
    \                  [<OF>]\n                  [<metric-list>]\n               \
    \   [<svec-list>]\n   <request-list>::=<request>[<request-list>]\n   <request>::=\
    \ <RP>\n                <end-point-rro-pair-list>\n                [<LSP>]\n \
    \               [<OF>]\n                [<LSPA>]\n                [<BANDWIDTH>]\n\
    \                [<metric-list>]\n                [<IRO>|<BNC>]\n            \
    \    [<LOAD-BALANCING>]\n   <end-point-rro-pair-list>::= <END-POINTS>\n      \
    \                          [<RRO-List>[<BANDWIDTH>]]\n                       \
    \         [<end-point-rro-pair-list>]\n   <RRO-List>::=(<RRO>|<SRRO>)[<RRO-List>]\n\
    \   <metric-list>::=<METRIC>[<metric-list>]\n"
- title: 6.4.  The PCRep Message
  contents:
  - "6.4.  The PCRep Message\n   As per Section 3.5 of [RFC8306], a PCRep message\
    \ is used for a P2MP\n   Path Computation Reply.  This document extends the PCRep\
    \ message such\n   that a PCE MAY include the LSP object in the PCRep message\
    \ if the\n   stateful PCE P2MP capability has been negotiated on a PCEP session\n\
    \   between the PCC and a PCE.\n   The format of a PCRep message is as follows:\n\
    \   <PCRep Message>::= <Common Header>\n                      <response-list>\n\
    \   where:\n   <response-list>::=<response>[<response-list>]\n   <response>::=<RP>\n\
    \                [<end-point-path-pair-list>]\n                [<LSP>]\n     \
    \           [<NO-PATH>]\n                [<UNREACH-DESTINATION>]\n           \
    \     [<attribute-list>]\n   <end-point-path-pair-list>::= [<END-POINTS>]\n  \
    \                               <path>\n                                 [<end-point-path-pair-list>]\n\
    \   <path> ::= (<ERO>|<SERO>) [<path>]\n   <attribute-list>::=[<OF>]\n       \
    \               [<LSPA>]\n                      [<BANDWIDTH>]\n              \
    \        [<metric-list>]\n                      [<IRO>]\n"
- title: 6.5.  The PCInitiate Message
  contents:
  - "6.5.  The PCInitiate Message\n   As defined in section 5.1 of [RFC8281], a PCE\
    \ sends a PCInitiate\n   message to a PCC to recommend instantiation of a P2P\
    \ TE LSP.  This\n   document extends the format of a PCInitiate message for the\
    \ creation\n   of P2MP TE LSPs, but the creation and deletion operations of P2MP\
    \ TE\n   LSPs are the same to the P2P TE LSPs.\n   The format of a PCInitiate\
    \ message is as follows:\n   <PCInitiate Message> ::= <Common Header>\n      \
    \                      <PCE-initiated-lsp-list>\n   Where:\n   <PCE-initiated-lsp-list>\
    \ ::= <PCE-initiated-lsp-request>\n                                [<PCE-initiated-lsp-list>]\n\
    \   <PCE-initiated-lsp-request> ::=\n   (<PCE-initiated-lsp-instantiation>|<PCE-initiated-lsp-deletion>)\n\
    \   <PCE-initiated-lsp-instantiation> ::= <SRP>\n                            \
    \             <LSP>\n                                         <end-point-path-pair-list>\n\
    \                                         [<attribute-list>]\n   <PCE-initiated-lsp-deletion>\
    \ ::= <SRP>\n                                    <LSP>\n   Where:\n   <end-point-path-pair-list>::=\n\
    \                      [<END-POINTS>]\n                      <intended-path>\n\
    \                      [<end-point-path-pair-list>]\n   <intended-path> ::= (<ERO>|<SERO>)\n\
    \              [<intended-path>]\n   <attribute-list> is defined in [RFC5440]\
    \ and extended by PCEP\n   extensions.\n   The PCInitiate message with an LSP\
    \ object with the N flag (P2MP) set\n   is used to convey operation on a P2MP\
    \ TE LSP.  The SRP object is used\n   to correlate between initiation requests\
    \ sent by the PCE, and the\n   error reports and state reports sent by the PCC\
    \ as described in\n   [RFC8231].\n   The END-POINTS object MUST be carried in\
    \ a PCInitiate message when\n   the N flag is set in an LSP object for a P2MP\
    \ TE LSP.  If the END-\n   POINTS object is missing, the receiving PCC MUST send\
    \ a PCErr message\n   with Error-type=6 (\"Mandatory Object missing\") and Error-value=3\n\
    \   (\"END-POINTS object missing\") (defined in [RFC5440]).\n"
- title: 6.6.  Example
  contents:
  - '6.6.  Example

    '
- title: 6.6.1.  P2MP TE LSPs Update Request
  contents:
  - "6.6.1.  P2MP TE LSPs Update Request\n   An LSP Update Request message is sent\
    \ by an active stateful PCE to\n   update the P2MP TE LSPs parameters or attributes.\
    \  An example of a\n   PCUpd message for P2MP TE LSPs is described below:\n  \
    \            Common Header\n              SRP\n              LSP with P2MP flag\
    \ set\n              END-POINTS for leaf type 3\n                ERO list\n  \
    \ In this example, a stateful PCE requests an update of the path taken\n   to\
    \ some of the leaves in a P2MP tree.  The update request uses the\n   END-POINT\
    \ type 3 (modified/reoptimized).  The ERO list represents the\n   source-to-leaves\
    \ path after modification.  The update message does\n   not need to encode the\
    \ full P2MP tree in this case.\n"
- title: 6.6.2.  P2MP TE LSP Report
  contents:
  - "6.6.2.  P2MP TE LSP Report\n   The LSP State Report message is sent by a PCC\
    \ to report or delegate\n   the P2MP TE LSP.  The leaves of the P2MP TE LSP are\
    \ grouped in the\n   END-POINTS object based on the operational status and the\
    \ leaf type.\n   An example of a PCRpt message is described below for a delegated\
    \ P2MP\n   TE LSP to add new leaves to an existing P2MP TE LSP:\n            \
    \  Common Header\n              LSP with P2MP flag set\n              END-POINTS\
    \ for leaf type 1 (add)\n                S2LS (O=DOWN)\n                ERO list\
    \ (empty)\n   An example of a PCRpt message for a P2MP TE LSP is described below\
    \ to\n   prune leaves from an existing P2MP TE LSP:\n              Common Header\n\
    \              LSP with P2MP flag set\n              END-POINTS for leaf type\
    \ 2 (remove)\n                S2LS (O=UP)\n                ERO list (empty)\n\
    \   An example of a PCRpt message for a delegated P2MP TE LSP is\n   described\
    \ below to report the status of leaves in an existing P2MP TE\n   LSP:\n     \
    \         Common Header\n              SRP\n              LSP with P2MP flag set\n\
    \              END-POINTS for leaf type 3 (modify)\n                S2LS (O=UP)\n\
    \                RRO list\n              END-POINTS for leaf type 3 (modify)\n\
    \                S2LS (O=DOWN)\n                ERO list (empty)\n   In this example,\
    \ the PCRpt message is in response to a PCUpd message.\n   The PCRpt message includes\
    \ the corresponding SRP object and indicates\n   that some leaves are up (with\
    \ the actual path) and some are down.\n   An example of a PCRpt message for a\
    \ nondelegated P2MP TE LSP is\n   described below to report status of leaves:\n\
    \              Common Header\n              LSP with P2MP flag set\n         \
    \     END-POINTS for leaf type 4 (unchanged)\n                S2LS (O=ACTIVE)\n\
    \                RRO list\n              END-POINTS for leaf type 4 (unchanged)\n\
    \                S2LS (O=DOWN)\n                ERO list (empty)\n"
- title: 6.6.3.  P2MP TE LSPs Initiation Request
  contents:
  - "6.6.3.  P2MP TE LSPs Initiation Request\n   An LSP Initiation Request message\
    \ is sent by a stateful PCE to create\n   a P2MP TE LSP.  An example of a PCInitiate\
    \ message for a P2MP TE LSP\n   is described below:\n              Common Header\n\
    \              SRP\n              LSP with P2MP flag set\n              END-POINTS\
    \ for leaf type 1 (add)\n                ERO list\n   In this example, a stateful\
    \ PCE requests the creation of a P2MP TE\n   LSP.  The initiation request uses\
    \ the END-POINT type 1 (new leaves).\n   The ERO list represents the source-to-leaves\
    \ path.  The initiate\n   message encodes the full P2MP tree in this case.\n"
- title: 7.  PCEP Object Extensions
  contents:
  - "7.  PCEP Object Extensions\n   The new PCEP TLVs defined in this document are\
    \ in compliance with the\n   PCEP TLV format defined in [RFC5440].\n"
- title: 7.1.  LSP Object Extension
  contents:
  - "7.1.  LSP Object Extension\n   The LSP Object is defined in Section 7.3 of [RFC8231].\
    \  It specifies\n   the PLSP-ID to uniquely identify an LSP that is constant for\
    \ the life\n   time of a PCEP session.  Similarly, for a P2MP tunnel, the PLSP-ID\n\
    \   uniquely identifies a P2MP TE LSP.  This document adds the following\n   flags\
    \ to the LSP Object:\n   N (P2MP flag - 1 bit):  If the N flag is set to 1, it\
    \ indicates that\n      the message is for a P2MP TE LSP.\n   F (Fragmentation\
    \ flag - 1 bit):  If the F flag is unset (0), it\n      indicates that the LSP\
    \ is not fragmented or that it is the last\n      piece of the fragmented LSP.\
    \  If the F flag is set to 1, it\n      indicates that the LSP is fragmented and\
    \ that it is not the last\n      piece of the fragmented LSP.  The receiver needs\
    \ to wait for\n      additional fragments until it receives an LSP with the same\
    \ PLSP-\n      ID and with the F-bit set to 0.  See Section 8 for further\n  \
    \    details.\n   E (ERO-compression flag - 1 bit):  If the E flag is set to 1,\
    \ it\n      indicates the route is in compressed format (that is, Secondary\n\
    \      Explicit Route Object (SERO) and Secondary Record Route Object\n      (SRRO)\
    \ objects [RFC8306] are in use).\n   The flags defined in this section (N, F,\
    \ and E) are used in PCRpt,\n   PCUpd, or PCInitiate messages.  In the case of\
    \ PCReq and PCRep\n   messages, these flags have no meaning and thus MUST be ignored.\
    \  The\n   corresponding flags in the RP (Request Parameters) object are used\
    \ as\n   described in [RFC8306].\n"
- title: 7.1.1.  P2MP-LSP-IDENTIFIERS TLV
  contents:
  - "7.1.1.  P2MP-LSP-IDENTIFIERS TLV\n   [RFC8231] specifies the LSP-IDENTIFIERS\
    \ TLVs to be included in the\n   LSP object.  For P2MP TE LSP, this document defines\
    \ P2MP-LSP-\n   IDENTIFIERS TLVs for the LSP object.  There are two P2MP-LSP-\n\
    \   IDENTIFIERS TLVs, one for IPv4 and one for IPv6.  The P2MP-LSP-\n   IDENTIFIERS\
    \ TLV MUST be included in the LSP object in a PCRpt message\n   for P2MP TE LSPs.\
    \  If the N bit is set in the LSP object in the PCRpt\n   message but the P2MP-LSP-IDENTIFIER\
    \ TLV is absent, the PCE MUST\n   respond with a PCErr message carrying error-type\
    \ 6 (\"mandatory object\n   missing\") and error-value 14 (\"P2MP-LSP-IDENTIFIERS\
    \ TLV missing\") and\n   close the PCEP session.\n   The P2MP-LSP-IDENTIFIERS\
    \ TLV MAY be included in the LSP object in the\n   PCUpd message for P2MP TE LSPs.\
    \  The special value of all zeros for\n   all the fields in the value portion\
    \ of the TLV is used to refer to\n   all paths pertaining to a particular PLSP-ID.\
    \  The length of the TLV\n   remains fixed based on the IP version.\n   The P2MP-LSP-IDENTIFIERS\
    \ TLV SHOULD NOT be used in a PCInitiate\n   message (see Section 5.6.3.1) and\
    \ MAY optionally be included in the\n   LSP object in the PCReq and the PCRep\
    \ message for P2MP TE LSP.\n   The format of the IPV4-P2MP-LSP-IDENTIFIERS TLV\
    \ is shown in Figure 1:\n    0                   1                   2       \
    \            3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           Type=32             |           Length=16           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   IPv4 Tunnel Sender Address                  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |             LSP ID            |           Tunnel ID           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                        Extended Tunnel ID                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             P2MP ID                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \              Figure 1: IPV4-P2MP-LSP-IDENTIFIERS TLV Format\n   The type (16\
    \ bits) of the TLV is 32.  The length (16 bits) has a\n   fixed value of 16 octets.\
    \  The value contains the following fields:\n   IPv4 Tunnel Sender Address:  Contains\
    \ the sender node's IPv4 address,\n      as defined in [RFC3209].  See Section\
    \ 4.6.2.1 of [RFC3209] for the\n      LSP_TUNNEL_IPv4 Sender Template Object.\n\
    \   LSP ID:  Contains the 16-bit 'LSP ID' identifier defined in\n      [RFC3209].\
    \  See Section 4.6.2.1 of [RFC3209] for the\n      LSP_TUNNEL_IPv4 Sender Template\
    \ Object.\n   Tunnel ID:  Contains the 16-bit 'Tunnel ID' identifier defined in\n\
    \      [RFC3209].  See Section 4.6.1.1 of [RFC3209] for the\n      LSP_TUNNEL_IPv4\
    \ Session Object.\n   Extended Tunnel ID:  Contains the 32-bit 'Extended Tunnel\
    \ ID'\n      identifier defined in [RFC3209].  See Section 4.6.1.1 of [RFC3209]\n\
    \      for the LSP_TUNNEL_IPv4 Session Object.\n   P2MP ID:  Contains the 32-bit\
    \ 'P2MP ID' identifier defined in\n      Section 19.1.1 of [RFC4875] for the P2MP\
    \ LSP Tunnel IPv4 SESSION\n      Object.\n   The format of the IPV6-P2MP-LSP-IDENTIFIERS\
    \ TLV is shown in Figure 2:\n    0                   1                   2   \
    \                3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           Type=33             |           Length=40           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +  \
    \                                                             +\n   |        \
    \          IPv6 tunnel sender address                   |\n   +              \
    \            (16 octets)                          +\n   |                    \
    \                                           |\n   +                          \
    \                                     +\n   |                                \
    \                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |             LSP ID            |           Tunnel ID           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +  \
    \                                                             +\n   |        \
    \               Extended Tunnel ID                      |\n   +              \
    \            (16 octets)                          +\n   |                    \
    \                                           |\n   +                          \
    \                                     +\n   |                                \
    \                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             P2MP ID                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \              Figure 2: IPV6-P2MP-LSP-IDENTIFIERS TLV Format\n   The type (16\
    \ bits) of the TLV is 33.  The length (16 bits) has a\n   fixed length of 40 octets.\
    \  The value contains the following fields:\n   IPv6 Tunnel Sender Address:  Contains\
    \ the sender node's IPv6 address,\n      as defined in [RFC3209].  See Section\
    \ 4.6.2.2 of [RFC3209] for the\n      LSP_TUNNEL_IPv6 Sender Template Object.\n\
    \   LSP ID:  Contains the 16-bit 'LSP ID' identifier defined in\n      [RFC3209].\
    \  See Section 4.6.2.2 of [RFC3209] for the\n      LSP_TUNNEL_IPv6 Sender Template\
    \ Object.\n   Tunnel ID:  Contains the 16-bit 'Tunnel ID' identifier defined in\n\
    \      [RFC3209].  See Section 4.6.1.2 of [RFC3209] for the\n      LSP_TUNNEL_IPv6\
    \ Session Object.\n   Extended Tunnel ID:  Contains the 128-bit 'Extended Tunnel\
    \ ID'\n      identifier defined in [RFC3209].  See Section 4.6.1.2 of [RFC3209]\n\
    \      for the LSP_TUNNEL_IPv6 Session Object.\n   P2MP ID:  Defined above under\
    \ Figure 1.\n   Tunnel ID:  Remains constant over the lifetime of a tunnel.\n"
- title: 7.2.  S2LS Object
  contents:
  - "7.2.  S2LS Object\n   The S2LS (Source-to-Leaves) Object is used to report the\
    \ state of one\n   or more destinations (leaves) encoded within the END-POINTS\
    \ object\n   for a P2MP TE LSP.  It MUST be carried in a PCRpt message along with\n\
    \   an END-POINTS object when the N flag is set in an LSP object.\n   S2LS Object-Class\
    \ is 41.\n   S2LS Object-Types is 1.\n   The format of the S2LS object is shown\
    \ in the following figure:\n    0                   1                   2    \
    \               3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             Flags                       |    O|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   // \
    \                     Optional TLVs                          //\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                       Figure 3: S2LS Object Format\n   Flags (32 bits):  The\
    \ following flag is currently defined:\n   O (Operational - 3 bits)  The O field\
    \ represents the operational\n      status of the group of destinations.  The\
    \ values are as per the\n      Operational field in the LSP object defined in\
    \ Section 7.3 of\n      [RFC8231].\n   Unassigned bits are reserved for future\
    \ uses.  They MUST be set to 0\n   on transmission and MUST be ignored on receipt.\n\
    \   When the N flag is set in an LSP object, the O field in the LSP\n   object\
    \ represents the operational status of the full P2MP TE LSP, and\n   the O field\
    \ in the S2LS object represents the operational status of a\n   group of destinations\
    \ encoded within the END-POINTS object.  If there\n   is a conflict between the\
    \ O field in the LSP and the S2LS object (for\n   example, the O field in the\
    \ LSP corresponds to down whereas the O\n   field in the S2LS is up), the PCEP\
    \ speaker MUST generate an error\n   with error-type 10 (\"Reception of an invalid\
    \ object\") and error-value\n   22 (\"Mismatch of O field in S2LS and LSP object\"\
    ).\n   Future documents might define optional TLVs that could be included in\n\
    \   the S2LS Object.\n"
- title: 8.  Message Fragmentation
  contents:
  - "8.  Message Fragmentation\n   The total PCEP message length, including the common\
    \ header, is\n   (2^16)-1 bytes.  In certain scenarios, the P2MP report and update\n\
    \   request may not fit into a single PCEP message (e.g., initial report\n   or\
    \ update).  The F flag is used in the LSP object to signal that the\n   initial\
    \ report, update, or initiate request was too large to fit into\n   a single PCEP\
    \ message and will be fragmented into multiple messages.\n   In order to identify\
    \ the single report or update, each message will\n   use the same PLSP-ID.  In\
    \ order to identify that a series of\n   PCInitiate messages represents a single\
    \ Initiate, each message will\n   use the same PLSP-ID (in this case 0) and SRP-ID-number.\n\
    \   The fragmentation procedure described below for report or update\n   messages\
    \ is similar to [RFC8306], which describes request and\n   response message fragmentation.\n"
- title: 8.1.  Report Fragmentation Procedure
  contents:
  - "8.1.  Report Fragmentation Procedure\n   If the initial report is too large to\
    \ fit into a single report\n   message, the PCC will split the report over multiple\
    \ messages.  Each\n   message sent to the PCE, except the last one, will have\
    \ the F flag\n   set in the LSP object to signify that the report has been fragmented\n\
    \   into multiple messages.  In order to identify that a series of report\n  \
    \ messages represents a single report, each message will use the same\n   PLSP-ID.\n\
    \   The Error-Type value 18 (\"P2MP Fragmentation Error\") is used to\n   report\
    \ any error associated with the fragmentation of a P2MP PCEP\n   message.  A new\
    \ error-value 2 indicates \"Fragmented report failure\"\n   and is used if a PCE\
    \ does not receive the last part of the fragmented\n   message.\n"
- title: 8.2.  Update Fragmentation Procedure
  contents:
  - "8.2.  Update Fragmentation Procedure\n   Once the PCE computes and updates a\
    \ path for some or all leaves in a\n   P2MP TE LSP, an update message is sent\
    \ to the PCC.  If the update is\n   too large to fit into a single update message,\
    \ the PCE will split the\n   update over multiple messages.  Each update message\
    \ sent by the PCE,\n   except the last one, will have the F flag set in the LSP\
    \ object to\n   signify that the update has been fragmented into multiple messages.\n\
    \   In order to identify that a series of update messages represents a\n   single\
    \ update, each message will use the same PLSP-ID and SRP-ID-\n   number.\n   The\
    \ Error-Type value 18 (\"P2MP Fragmentation Error\") is used to\n   report any\
    \ error associated with the fragmentation of a P2MP PCEP\n   message.  A new error-value\
    \ 3 indicates \"Fragmented update failure\"\n   and is used if a PCC does not\
    \ receive the last part of the fragmented\n   message.\n"
- title: 8.3.  PCInitiate Fragmentation Procedure
  contents:
  - "8.3.  PCInitiate Fragmentation Procedure\n   Once the PCE initiates to set up\
    \ a P2MP TE LSP, a PCInitiate message\n   is sent to the PCC.  If the initiate\
    \ request is too large to fit into\n   a single PCInitiate message, the PCE will\
    \ split the initiate request\n   over multiple messages.  Each PCInitiate message\
    \ sent by the PCE,\n   except the last one, will have the F flag set in the LSP\
    \ object to\n   signify that the PCInitiate has been fragmented into multiple\n\
    \   messages.  In order to identify that a series of PCInitiate messages\n   represents\
    \ a single Initiate, each message will use the same PLSP-ID\n   (in this case\
    \ 0) and SRP-ID-number.\n   The Error-Type value 18 (\"P2MP Fragmentation Error\"\
    ) is used to\n   report any error associated with the fragmentation of a P2MP\
    \ PCEP\n   message.  A new error-value 4 indicates \"Fragmented instantiation\n\
    \   failure\" and is used if a PCC does not receive the last part of the\n   fragmented\
    \ message.\n"
- title: 9.  Nonsupport of P2MP TE LSPs for Stateful PCE
  contents:
  - "9.  Nonsupport of P2MP TE LSPs for Stateful PCE\n   The PCEP extensions described\
    \ in this document for stateful PCEs with\n   P2MP capability MUST NOT be used\
    \ if the PCE has not advertised its\n   stateful capability with P2MP as per Section\
    \ 5.2.  If the PCC\n   supports the extensions as per this document (understands\
    \ the N\n   (P2MP-CAPABILITY) and M (P2MP-LSP-UPDATE-CAPABILITY) flags in the\
    \ LSP\n   object) but did not advertise this capability, then upon receipt of\
    \ a\n   PCUpd message from the PCE, it SHOULD generate a PCErr with error-\n \
    \  type 19 (\"Invalid Operation\"), error-value 12 (\"Attempted LSP Update\n \
    \  Request for P2MP if active stateful PCE capability for P2MP was not\n   advertised\"\
    ), and terminate the PCEP session.  If the PCE supports\n   the extensions as\
    \ per this document (understands the N (P2MP-\n   CAPABILITY) flag in the LSP\
    \ object) but did not advertise this\n   capability, then upon receipt of a PCRpt\
    \ message from the PCC, it\n   SHOULD generate a PCErr with error-type 19 (\"\
    Invalid Operation\"),\n   error-value 11 (\"Attempted LSP State Report for P2MP\
    \ if stateful PCE\n   capability for P2MP was not advertised\"), and it SHOULD\
    \ terminate the\n   PCEP session.\n   If a Stateful PCE receives a P2MP TE LSP\
    \ report message and the PCE\n   does not understand the N (P2MP-CAPABILITY) flag\
    \ in the LSP object,\n   and therefore the PCEP extensions described in this document,\
    \ then\n   the Stateful PCE would act as per Section 6.1 of [RFC8231] (and\n \
    \  consider the PCRpt message as invalid).\n   The PCEP extensions described in\
    \ this document for PCC or PCE with\n   the PCE-Initiation capability for P2MP\
    \ TE LSPs MUST NOT be used if\n   the PCC or PCE has not advertised its stateful\
    \ capability with\n   Instantiation and P2MP capability as per Section 5.2.  If\
    \ the PCC\n   supports the extensions as per this document (understands the P\n\
    \   (P2MP-LSP-INSTANTIATION-CAPABILITY) flag) but did not advertise this\n   capability,\
    \ then upon receipt of a PCInitiate message from the PCE,\n   it SHOULD generate\
    \ a PCErr with error-type 19 (\"Invalid Operation\"),\n   error-value 13 (\"Attempted\
    \ LSP Instantiation Request for P2MP if\n   stateful PCE instantiation capability\
    \ for P2MP was not advertised\"),\n   and terminate the PCEP session.\n"
- title: 10.  Manageability Considerations
  contents:
  - "10.  Manageability Considerations\n   All manageability requirements and considerations\
    \ listed in\n   [RFC5440], [RFC8306], [RFC8231], and [RFC8281] apply to PCEP\n\
    \   extensions defined in this document.  In addition, requirements and\n   considerations\
    \ listed in this section apply.\n"
- title: 10.1.  Control of Function and Policy
  contents:
  - "10.1.  Control of Function and Policy\n   A PCE or PCC implementation MUST allow\
    \ configuration of the stateful\n   PCEP capability, the LSP Update capability,\
    \ and the LSP Initiation\n   capability for P2MP LSPs.\n"
- title: 10.2.  Information and Data Models
  contents:
  - "10.2.  Information and Data Models\n   The PCEP YANG module [PCE-PCEP-YANG] can\
    \ be extended to include\n   advertised P2MP stateful capabilities, P2MP synchronization\
    \ status,\n   and the delegation status of a P2MP LSP, etc.  The statistics module\n\
    \   should also count data related to P2MP LSPs.\n"
- title: 10.3.  Liveness Detection and Monitoring
  contents:
  - "10.3.  Liveness Detection and Monitoring\n   Mechanisms defined in this document\
    \ do not imply any new liveness\n   detection and monitoring requirements in addition\
    \ to those already\n   listed in [RFC5440].\n"
- title: 10.4.  Verify Correct Operations
  contents:
  - "10.4.  Verify Correct Operations\n   Mechanisms defined in this document do not\
    \ imply any new operation\n   verification requirements in addition to those already\
    \ listed in\n   [RFC5440], [RFC8306], [RFC8231], and [RFC8281].\n"
- title: 10.5.  Requirements on Other Protocols
  contents:
  - "10.5.  Requirements on Other Protocols\n   Mechanisms defined in this document\
    \ do not imply any new requirements\n   on other protocols.\n"
- title: 10.6.  Impact on Network Operations
  contents:
  - "10.6.  Impact on Network Operations\n   Mechanisms defined in this document do\
    \ not have any impact on network\n   operations in addition to those already listed\
    \ in [RFC5440],\n   [RFC8306], [RFC8231], and [RFC8281].\n   Stateful PCE features\
    \ for P2MP LSPs would help with network\n   operations.\n"
- title: 11.  IANA Considerations
  contents:
  - "11.  IANA Considerations\n   IANA has registered the code points for the protocol\
    \ elements defined\n   in this document.\n"
- title: 11.1.  PCE Capabilities in IGP Advertisements
  contents:
  - "11.1.  PCE Capabilities in IGP Advertisements\n   IANA has registered the new\
    \ bits in the OSPF Parameters \"Path\n   Computation Element (PCE) Capability\
    \ Flags\" registry, as follows:\n          Bit      Capability Description   \
    \           Reference\n          13       Active Stateful PCE with P2MP      \
    \ RFC 8623\n          14       Passive Stateful PCE with P2MP      RFC 8623\n\
    \          15       Stateful PCE Initiation with P2MP   RFC 8623\n"
- title: 11.2.  STATEFUL-PCE-CAPABILITY TLV
  contents:
  - "11.2.  STATEFUL-PCE-CAPABILITY TLV\n   The STATEFUL-PCE-CAPABILITY TLV is defined\
    \ in [RFC8231], and the\n   \"STATEFUL-PCE-CAPABILITY TLV Flag Field\" subregistry\
    \ was created to\n   manage the flags in the TLV.  IANA has registered the following\
    \ code\n   points in the aforementioned registry.\n       Bit    Description \
    \                           Reference\n       23      P2MP-LSP-INSTANTIATION-CAPABILITY\
    \     RFC 8623\n       24      P2MP-LSP-UPDATE-CAPABILITY            RFC 8623\n\
    \       25      P2MP-CAPABILITY                       RFC 8623\n"
- title: 11.3.  LSP Object
  contents:
  - "11.3.  LSP Object\n   The LSP object is defined in [RFC8231], and the \"LSP Object\
    \ Flag\n   Field\" subregistry was created to manage the Flags field of the LSP\n\
    \   object.\n   IANA has registered the following code points in the aforementioned\n\
    \   registry.\n       Bit    Description           Reference\n       1      ERO-compression\
    \       RFC 8623\n       2      Fragmentation         RFC 8623\n       3     \
    \ P2MP                  RFC 8623\n"
- title: 11.4.  PCEP-ERROR Object
  contents:
  - "11.4.  PCEP-ERROR Object\n   IANA has registered the new error values within\
    \ the \"PCEP-ERROR\n   Object Error Types and Values\" subregistry of the PCEP\
    \ Numbers\n   registry, as follows:\n       Error-Type  Meaning\n          6 \
    \       Mandatory Object missing [RFC5440]\n                     Error-value =\
    \ 13: S2LS object missing\n                     Error-value = 14: P2MP-LSP-IDENTIFIERS\
    \ TLV missing\n          10       Reception of an invalid object [RFC5440]\n \
    \                    Error-value = 22: Mismatch of O field in S2LS\n         \
    \                and LSP object\n          18       P2MP Fragmentation Error [RFC8306]\n\
    \                     Error-value = 2: Fragmented Report failure\n           \
    \          Error-value = 3: Fragmented Update failure\n                     Error-value\
    \ = 4: Fragmented Instantiation failure\n          19       Invalid Operation\
    \ [RFC8231]\n                     Error-value = 11: Attempted LSP State Report\n\
    \                         for P2MP if stateful PCE capability\n              \
    \           for P2MP was not advertised\n                     Error-value = 12:\
    \ Attempted LSP Update Request\n                         for P2MP if active stateful\
    \ PCE capability\n                         for P2MP was not advertised\n     \
    \                Error-value = 13: Attempted LSP Instantiation\n             \
    \            Request for P2MP if stateful PCE\n                         instantiation\
    \ capability for P2MP was not\n                         advertised\n   The reference\
    \ for all new Error-values above is RFC 8623.\n"
- title: 11.5.  PCEP TLV Type Indicators
  contents:
  - "11.5.  PCEP TLV Type Indicators\n   IANA has registered the following code points\
    \ in the existing \"PCEP\n   TLV Type Indicators\" registry as follows:\n    \
    \      Value     Description                       Reference\n            32 \
    \     P2MP-IPV4-LSP-IDENTIFIERS         RFC 8623\n            33      P2MP-IPV6-LSP-IDENTIFIERS\
    \         RFC 8623\n"
- title: 11.6.  PCEP Object
  contents:
  - "11.6.  PCEP Object\n   IANA has registered the new object-class values and object\
    \ types\n   within the \"PCEP Objects\" subregistry of the PCEP Numbers registry,\n\
    \   as follows.\n       Object-Class Value  Name                             \
    \  Reference\n               41          S2LS                               RFC\
    \ 8623\n                           Object-Type\n                           0:\
    \ Reserved\n                           1: S2LS\n"
- title: 11.7.  S2LS Object
  contents:
  - "11.7.  S2LS Object\n   A new subregistry, named \"S2LS Object Flag Field\", has\
    \ been created\n   within the \"Path Computation Element Protocol (PCEP) Numbers\"\
    \n   registry to manage the 32-bit flag field of the S2LS object.  New\n   values\
    \ are to be assigned by Standards Action [RFC8126].  Each bit\n   should be tracked\
    \ with the following qualities:\n   o  Bit number (counting from bit 0 as the\
    \ most significant bit)\n   o  Capability description\n   o  Defining RFC\n  \
    \ The following values are defined in this document:\n                    Bit\
    \     Description           Reference\n                    0-28    Unassigned\n\
    \                   29-31    Operational (3 bits)  RFC 8623\n"
- title: 12.  Security Considerations
  contents:
  - "12.  Security Considerations\n   The stateful operations on P2MP TE LSPs are\
    \ more CPU intensive and\n   also utilize more bandwidth on the wire (in comparison\
    \ to P2P TE\n   LSPs).  If a rogue PCC were able to request unauthorized stateful\
    \ PCE\n   operations, then it may be able to mount a DoS attack against a PCE,\n\
    \   which would disrupt the network and deny service to other PCCs.\n   Similarly,\
    \ an attacker may flood the PCC with PCUpd messages at a\n   rate that exceeds\
    \ either the PCC's ability to process them or the\n   network's ability to signal\
    \ the changes by either spoofing messages\n   or compromising the PCE itself.\n\
    \   Consequently, it is important that implementations conform to the\n   relevant\
    \ security requirements as listed below:\n   o  As per [RFC8231], it is RECOMMENDED\
    \ that these PCEP extensions\n      only be activated on authenticated and encrypted\
    \ sessions across\n      PCEs and PCCs belonging to the same administrative authority,\n\
    \      using Transport Layer Security (TLS) [RFC8253] as per the\n      recommendations\
    \ and best current practices in [RFC7525] (unless\n      explicitly set aside\
    \ in [RFC8253]).\n   o  Security considerations for path computation requests\
    \ and\n      responses are as per [RFC8306].\n   o  Security considerations for\
    \ stateful operations (such as state\n      report, synchronization, delegation,\
    \ update, etc.) are as per\n      [RFC8231].\n   o  Security considerations for\
    \ the LSP instantiation mechanism are as\n      per [RFC8231].\n   o  Security\
    \ considerations as stated in Sections 10.1, 10.6, and 10.7\n      of [RFC5440]\
    \ continue to apply.\n"
- title: 13.  References
  contents:
  - '13.  References

    '
- title: 13.1.  Normative References
  contents:
  - "13.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC3209]  Awduche, D., Berger, L., Gan, D., Li, T., Srinivasan, V.,\n   \
    \           and G. Swallow, \"RSVP-TE: Extensions to RSVP for LSP\n          \
    \    Tunnels\", RFC 3209, DOI 10.17487/RFC3209, December 2001,\n             \
    \ <https://www.rfc-editor.org/info/rfc3209>.\n   [RFC4875]  Aggarwal, R., Ed.,\
    \ Papadimitriou, D., Ed., and\n              S. Yasukawa, Ed., \"Extensions to\
    \ Resource Reservation\n              Protocol - Traffic Engineering (RSVP-TE)\
    \ for Point-to-\n              Multipoint TE Label Switched Paths (LSPs)\", RFC\
    \ 4875,\n              DOI 10.17487/RFC4875, May 2007,\n              <https://www.rfc-editor.org/info/rfc4875>.\n\
    \   [RFC5088]  Le Roux, JL., Ed., Vasseur, JP., Ed., Ikejiri, Y., and\n      \
    \        R. Zhang, \"OSPF Protocol Extensions for Path Computation\n         \
    \     Element (PCE) Discovery\", RFC 5088, DOI 10.17487/RFC5088,\n           \
    \   January 2008, <https://www.rfc-editor.org/info/rfc5088>.\n   [RFC5089]  Le\
    \ Roux, JL., Ed., Vasseur, JP., Ed., Ikejiri, Y., and\n              R. Zhang,\
    \ \"IS-IS Protocol Extensions for Path Computation\n              Element (PCE)\
    \ Discovery\", RFC 5089, DOI 10.17487/RFC5089,\n              January 2008, <https://www.rfc-editor.org/info/rfc5089>.\n\
    \   [RFC5440]  Vasseur, JP., Ed. and JL. Le Roux, Ed., \"Path Computation\n  \
    \            Element (PCE) Communication Protocol (PCEP)\", RFC 5440,\n      \
    \        DOI 10.17487/RFC5440, March 2009,\n              <https://www.rfc-editor.org/info/rfc5440>.\n\
    \   [RFC5511]  Farrel, A., \"Routing Backus-Naur Form (RBNF): A Syntax\n     \
    \         Used to Form Encoding Rules in Various Routing Protocol\n          \
    \    Specifications\", RFC 5511, DOI 10.17487/RFC5511, April\n              2009,\
    \ <https://www.rfc-editor.org/info/rfc5511>.\n   [RFC7525]  Sheffer, Y., Holz,\
    \ R., and P. Saint-Andre,\n              \"Recommendations for Secure Use of Transport\
    \ Layer\n              Security (TLS) and Datagram Transport Layer Security\n\
    \              (DTLS)\", BCP 195, RFC 7525, DOI 10.17487/RFC7525, May\n      \
    \        2015, <https://www.rfc-editor.org/info/rfc7525>.\n   [RFC8174]  Leiba,\
    \ B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119 Key Words\"\
    , BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n\
    \   [RFC8231]  Crabbe, E., Minei, I., Medved, J., and R. Varga, \"Path\n     \
    \         Computation Element Communication Protocol (PCEP)\n              Extensions\
    \ for Stateful PCE\", RFC 8231,\n              DOI 10.17487/RFC8231, September\
    \ 2017,\n              <https://www.rfc-editor.org/info/rfc8231>.\n   [RFC8232]\
    \  Crabbe, E., Minei, I., Medved, J., Varga, R., Zhang, X.,\n              and\
    \ D. Dhody, \"Optimizations of Label Switched Path State\n              Synchronization\
    \ Procedures for a Stateful PCE\", RFC 8232,\n              DOI 10.17487/RFC8232,\
    \ September 2017,\n              <https://www.rfc-editor.org/info/rfc8232>.\n\
    \   [RFC8253]  Lopez, D., Gonzalez de Dios, O., Wu, Q., and D. Dhody,\n      \
    \        \"PCEPS: Usage of TLS to Provide a Secure Transport for the\n       \
    \       Path Computation Element Communication Protocol (PCEP)\",\n          \
    \    RFC 8253, DOI 10.17487/RFC8253, October 2017,\n              <https://www.rfc-editor.org/info/rfc8253>.\n\
    \   [RFC8281]  Crabbe, E., Minei, I., Sivabalan, S., and R. Varga, \"Path\n  \
    \            Computation Element Communication Protocol (PCEP)\n             \
    \ Extensions for PCE-Initiated LSP Setup in a Stateful PCE\n              Model\"\
    , RFC 8281, DOI 10.17487/RFC8281, December 2017,\n              <https://www.rfc-editor.org/info/rfc8281>.\n\
    \   [RFC8306]  Zhao, Q., Dhody, D., Ed., Palleti, R., and D. King,\n         \
    \     \"Extensions to the Path Computation Element Communication\n           \
    \   Protocol (PCEP) for Point-to-Multipoint Traffic\n              Engineering\
    \ Label Switched Paths\", RFC 8306,\n              DOI 10.17487/RFC8306, November\
    \ 2017,\n              <https://www.rfc-editor.org/info/rfc8306>.\n"
- title: 13.2.  Informative References
  contents:
  - "13.2.  Informative References\n   [PCE-PCEP-YANG]\n              Dhody, D., Hardwick,\
    \ J., Beeram, V., and J. Tantsura, \"A\n              YANG Data Model for Path\
    \ Computation Element\n              Communications Protocol (PCEP)\", Work in\
    \ Progress,\n              draft-ietf-pce-pcep-yang-11, March 2019.\n   [RFC4655]\
    \  Farrel, A., Vasseur, J., and J. Ash, \"A Path Computation\n              Element\
    \ (PCE)-Based Architecture\", RFC 4655,\n              DOI 10.17487/RFC4655, August\
    \ 2006,\n              <https://www.rfc-editor.org/info/rfc4655>.\n   [RFC5671]\
    \  Yasukawa, S. and A. Farrel, Ed., \"Applicability of the\n              Path\
    \ Computation Element (PCE) to Point-to-Multipoint\n              (P2MP) MPLS\
    \ and GMPLS Traffic Engineering (TE)\", RFC 5671,\n              DOI 10.17487/RFC5671,\
    \ October 2009,\n              <https://www.rfc-editor.org/info/rfc5671>.\n  \
    \ [RFC8051]  Zhang, X., Ed. and I. Minei, Ed., \"Applicability of a\n        \
    \      Stateful Path Computation Element (PCE)\", RFC 8051,\n              DOI\
    \ 10.17487/RFC8051, January 2017,\n              <https://www.rfc-editor.org/info/rfc8051>.\n\
    \   [RFC8126]  Cotton, M., Leiba, B., and T. Narten, \"Guidelines for\n      \
    \        Writing an IANA Considerations Section in RFCs\", BCP 26,\n         \
    \     RFC 8126, DOI 10.17487/RFC8126, June 2017,\n              <https://www.rfc-editor.org/info/rfc8126>.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   Thanks to Quintin Zhao, Avantika, and Venugopal Reddy for\
    \ the review\n   comments.\n   Thanks to Adrian Farrel (and Jonathan Hardwick)\
    \ for the review as\n   document shepherds.\n   Thanks to Andy Malis for the RTG-DIR\
    \ review.  Thanks to Donald\n   Eastlake for the SEC-DIR review.  Thanks to David\
    \ Schinazi for the\n   GEN-ART review.\n   Thanks to Suresh Krishnan, Mirja Kuhlewind,\
    \ Roman Danyliw, and\n   Benjamin Kaduk for the IESG reviews.\n"
- title: Contributors
  contents:
  - "Contributors\n   Yuji Kamite\n   NTT Communications Corporation\n   Granpark\
    \ Tower\n   3-4-1 Shibaura, Minato-ku\n   Tokyo  108-8118\n   Japan\n   Email:\
    \ y.kamite@ntt.com\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Udayasree Palle\n   Huawei Technologies\n   Email: udayasreereddy@gmail.com\n\
    \   Dhruv Dhody\n   Huawei Technologies\n   Divyashree Techno Park, Whitefield\n\
    \   Bangalore, Karnataka  560066\n   India\n   Email: dhruv.ietf@gmail.com\n \
    \  Yosuke Tanaka\n   NTT Communications Corporation\n   Granpark Tower\n   3-4-1\
    \ Shibaura, Minato-ku\n   Tokyo  108-8118\n   Japan\n   Email: yosuke.tanaka@ntt.com\n\
    \   Vishnu Pavan Beeram\n   Juniper Networks\n   Email: vbeeram@juniper.net\n"
