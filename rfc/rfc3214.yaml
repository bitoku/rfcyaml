- contents:
  - '                     LSP Modification Using CR-LDP

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2002).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document presents an approach to modify the bandwidth and\n
    \  possibly other parameters of an established CR-LSP (Constraint-based\n   Routed
    Label Switched Paths) using CR-LDP (Constraint-based Routed\n   Label Distribution
    Protocol) without service interruption.  After a\n   CR-LSP is set up, its bandwidth
    reservation may need to be changed by\n   the network operator, due to the new
    requirements for the traffic\n   carried on that CR-LSP.  The LSP modification
    feature can be\n   supported by CR-LDP by use of the _modify_value for the _action\n
    \  indicator flag_ in the LSPID TLV.  This feature has application in\n   dynamic
    network resources management where traffic of different\n   priorities and service
    classes is involved.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.  Conventions Used in This Document ............................
    \ 2\n   2.  Introduction .................................................  2\n
    \  3.  LSP Modification Using CR-LDP ................................  3\n     3.1
    Basic Procedure for Resource Modification ..................  3\n     3.2 Rerouting
    LSPs .............................................  5\n     3.3 Priority Handling
    ..........................................  6\n     3.4 Modification Failure Case
    Handling .........................  6\n   4.  Application of LSP Bandwidth Modification
    in Dynamic Resource\n       Management ...................................................
    \ 7\n   5.  Acknowledgments ..............................................  8\n
    \  6.  Intellectual Property Considerations .........................  8\n   7.
    \ Security Considerations ......................................  8\n   8.  References
    ...................................................  8\n   9.  Authors' Addresses
    ...........................................  9\n   10. Full Copyright Statement
    ..................................... 11\n"
  title: Table of Contents
- contents:
  - "1. Conventions Used in This Document\n   L:           LSP (Label Switched Path)\n
    \  L-id:        LSPID (LSP Identifier)\n   T:           Traffic Parameters\n   R:
    \          LSR (Label Switching Router)\n   FEC:         Forwarding Equivalence
    Class\n   NHLFE:       Next Hop Label Forwarding Entry\n   FTN:         FEC To
    NHLFE\n   TLV:         Type Length Value\n   The key words \"MUST\", \"MUST NOT\",
    \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
    \ \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described
    in RFC 2119 [4].\n"
  title: 1. Conventions Used in This Document
- contents:
  - "2. Introduction\n   Consider an LSP L1 that has been established with its set
    of traffic\n   parameters T0. A certain amount of bandwidth is reserved along
    the\n   path of L1.  Consider then that some changes are required on L1. For\n
    \  example, the bandwidth of L1 needs to be increased to accommodate the\n   increased
    traffic on L1. Or the SLA associated with L1 needs to be\n   modified because
    a different service class is desired.  The network\n   operator, in these cases,
    would like to modify the characteristics of\n   L1, for example, to change its
    traffic parameter set from T0 to T1,\n   without releasing the LSP L1 to interrupt
    the service.  In some other\n   cases, network operators may want to reroute a
    CR-LSP to a different\n   path for either improved performance or better network
    resource\n   utilization.  In all these cases, LSP modification is required. In\n
    \  section 3 below, a method to modify an active LSP using CR-LDP is\n   presented.
    \ The concept of LSPID in CR-LDP is used to achieve the LSP\n   modification,
    without releasing the LSP and interrupting the service\n   and, without double
    booking the bandwidth.  In Section 4, an example\n   is described to demonstrate
    an application of the presented method in\n   dynamically managing network bandwidth
    requirements without\n   interrupting service.  In CR-LDP, an action indicator
    flag of\n   _modify_ is used in order to explicitly specify the behavior, and\n
    \  allow the existing LSPID to support other networking capabilities in\n   the
    future.  Reference [3], RFC XXXX, specifies the action indicator\n   flag of _modify_
    for CR-LDP.\n"
  title: 2. Introduction
- contents:
  - '3. LSP Modification Using CR-LDP

    '
  - contents:
    - "3.1 Basic Procedure for Resource Modification\n   LSP modification can only
      be allowed when the LSP is already set up\n   and active. That is, modification
      is not defined nor allowed during\n   the LSP establishment or label release/withdraw
      phases.  Only\n   modification requested by the ingress LSR of the LSP is considered
      in\n   this document for CR-LSP.  The Ingress LSR cannot modify an LSP\n   before
      a previous modification procedure is completed.\n   Assume that CR-LSP L1 is
      set up with LSPID L-id1, which is unique in\n   the MPLS network.  The ingress
      LSR R1 of L1 has in its FTN (FEC To\n   NHLFE) table FEC1 -> Label A mapping
      where A is the outgoing label\n   for LSP L1.  To modify the characteristics
      of L1, R1 sends a Label\n   Request Message.  In the message, the TLVs will
      have the new\n   requested values, and the LSPID TLV is included which indicates
      the\n   value of L-id1.  The Traffic Parameters TLV, the ER-TLV, the Resource\n
      \  Class (color) TLV and the Preemption TLV can have values different\n   from
      those in the original Label Request Message, which  has been\n   used to set
      up L1 earlier.  Thus, L1 can be changed in its bandwidth\n   request (traffic
      parameter TLV), its traffic service class (traffic\n   parameter TLV), the route
      it traverses (ER TLV) and its setup and\n   holding (Preemption TLV) priorities.
      The ingress LSR R1 now still has\n   the entry in its FTN as FEC1 -> Label A.
      \ R1 is waiting to establish\n   another entry for FEC1.\n   When an LSR Ri
      along the path of L1 receives the Label Request\n   message, its behavior is
      the same as that of receiving any Label\n   request message.  The only extension
      is that Ri examines the LSPID\n   carried in the Label Request Message, L-id1,
      and identifies if it\n   already has L-id1.  If Ri does not have L-id1, Ri behaves
      the same as\n   receiving a new Label Request message.  If Ri already has L-id1,
      Ri\n   takes the newly received Traffic Parameter TLV and computes the new\n
      \  bandwidth required and derives the new service class.  Compared with\n   the
      already reserved bandwidth for L-id1, Ri now reserves only the\n   difference
      of the bandwidth requirements. This prevents Ri from doing\n   bandwidth double
      booking.  If a new service class is requested, Ri\n   also prepares to receive
      the traffic on L1 in just the same way as\n   handling it for a Label Request
      Message, perhaps using a different\n   type of queue.  Ri assigns a new label
      for the Label Request Message.\n   When the Label Mapping message is received,
      two sets of labels exist\n   for the same LSPID.  Then the ingress LSR R1 will
      have two outgoing\n   labels, A and B, associated with the same FEC, where B
      is the new\n   outgoing label received for LSP L1. The ingress LSR R1 can now\n
      \  activate the new entry in its FTN, FEC1 - > Label B.  This means that\n   R1
      swaps traffic on L1 to the new label _B_ (_new_ path) for L1.  The\n   packets
      can now be sent with the new label B, with the new set of\n   traffic parameters
      if any, on a new path, that is, if a new path is\n   requested in the Label
      Request Message for the modification.  All the\n   other LSRs along the path
      will start to receive the incoming packets\n   with the new label.  For the
      incoming new label, the LSR has already\n   established its mapping to the new
      outgoing label.  Thus, the packets\n   will be sent out with the new outgoing
      label.  The LSRs do not have\n   to  implement new procedures to track the new
      and old characteristics\n   of the LSP.\n   The ingress LSR R1 then starts to
      release the original label A for\n   LSP L1.  The Label Release Message is sent
      by R1 towards the down\n   stream LSRs.  The Release message carries the LSPID
      of L-id1 and the\n   Label TLV to indicate which label is to be released.  The
      Release\n   Message is propagated to the egress LSR to release the original\n
      \  labels previously used for L1.  Upon receiving the Label Release\n   Message,
      LSR Ri examines the LSPID, L-id1, and finds out that the L-\n   id1 has still
      another set of labels (incoming/outgoing) under it.\n   Thus, the old label
      is released without releasing the resource in\n   use.  That is, if the bandwidth
      has been decreased for L1, the delta\n   bandwidth is released.  Otherwise,
      no bandwidth is released.  This\n   modification procedure can not only be applied
      to modify the traffic\n   parameters and/or service class of an active LSP,
      but also to reroute\n   an existing LSP (as described in Section 3.2 below),
      and/or change\n   its setup/holding priority if desired.  After the release
      procedure,\n   the modification of the LSP is completed.\n   The method described
      above follows the normal behavior of Label\n   Request / Mapping / Notification
      / Release / Withdraw procedure of a\n   CR-LDP operated LSR with a specific
      action taken on an LSPID.  If a\n   Label Withdraw Message is used to withdraw
      a label associated with an\n   LSPID, the Label TLV should be included to specify
      which label to\n   withdraw.  Since the LSPID can also be used for other feature\n
      \  support, an action indication flag of _modify_ assigned to the LSPID\n   would
      explicitly explain the action/semantics that should be\n   associated with the
      messaging procedure.  The details of this flag\n   are addressed in the CR-LDP
      document, Reference [3].\n"
    title: 3.1 Basic Procedure for Resource Modification
  - contents:
    - "3.2 Rerouting LSPs\n   LSP modification can also be used to reroute an existing
      LSP. Only\n   modification requested by the ingress LSR of the LSP is considered
      in\n   this document for CR-LSP. The Ingress LSR cannot modify an LSP before\n
      \  a previous modification procedure is completed.\n   As in the previous section,
      consider a CR-LSP L1 with LSPID L-id1.\n   To modify the route of the LSP, the
      ingress LSR R1 sends a Label\n   Request Message. In the message, the LSPID
      TLV indicates L-id1 and\n   the Explicit Route TLV is specified with some different
      hops from the\n   explicit route specified in the original Label Request Message.
      \ The\n   action indication flag has the value _modify_.\n   At this point,
      the ingress LSR R1 still has an entry in FTN as\n   FEC1 -> Label A. R1 is waiting
      to establish another entry for FEC1.\n   When an LSR Ri along the path of L1
      receives the Label Request\n   message, its behavior is the same as that of
      receiving a Label\n   Request Message that modifies some other parameters of
      the LSP. Ri\n   assigns a new label for the Label Request Message and forwards
      the\n   message along the explicit route.  It does not allocate any more\n   resources
      except as described in section 3.1.\n   At another LSR Rj further along the
      path, the explicit route diverges\n   from the previous route.  Rj acts as Ri,
      but forwards the Label\n   Request message along the new route.  From this point
      onwards the\n   Label Request Message is treated as setting up a new LSP by
      each LSR\n   until the paths converge at later LSR Rk.  The _modify_ value of
      the\n   action indication flag is ignored.\n   At Rk and subsequent LSRs, the
      Label Request Message is handled as at\n   Ri.\n   On the return path, when
      the Label Mapping message is received, two\n   sets of labels for the LSPID
      exist where the new route coincide with\n   the old.  Only one set of labels
      will exist at LSRs where the routes\n   diverge.\n   When the Label Mapping
      message is received at the ingress LSR R1 it\n   has two outgoing labels, A
      and B, associated with the same FEC, where\n   B is the new outgoing label received
      for LSP L1. R1 can now activate\n   the new entry in the FTN, FEC1 - > Label
      B and de-activate the old\n   entry FEC1 - > Label A. This means that R1 swaps
      traffic on L1 to the\n   new label B. The packets are now sent with the new
      label B, on the\n   new path.\n   The ingress LSR R1 then starts to release
      the original label A for\n   LSP L1. The Label Release Message is sent by R1
      towards the down\n   stream LSRs following the original route. The Release message
      carries\n   the LSPID of L-id1 and the Label TLV to indicate which label is
      to be\n   released. At each LSR the old label is released - no further action\n
      \  is required to change the path of the data packets which are already\n   following
      the new route programmed by the Label Mapping message.\n   At some LSRs, where
      the routes diverged, there is only one label for\n   the LSPID. For example,
      between Rj and Rk, the Label Release Message\n   will follow the old route.
      At LSRs between Rj and Rk only the labels\n   from the original route will exist
      for LSPID L-id1.  At these LSRs\n   the LSPID TLV does not need to be examined
      to release the correct\n   label, but it must still be updated and passed on
      to the next LSR as\n   the Label Release message is propagated. In this way,
      at Rk where the\n   routes converge, the downstream LSR will know which label
      to release\n   and can continue to forward the Label Release Message along the
      old\n   route.\n"
    title: 3.2 Rerouting LSPs
  - contents:
    - "3.3 Priority Handling\n   When sending a Label Request Message for an active
      LSP L1 to request\n   changes, the setup priority used in the label Request
      Message can be\n   different from the one used in the previous Label Request
      Message,\n   effectively indicating the priority of this _modification_ request.\n
      \  Network operators can use this feature to decide what priority is to\n   be
      assigned to a modification request, based on their\n   policies/algorithms and
      other traffic situations in the network.  For\n   example, the priority for
      modification can be determined by the\n   priority of the customer/LSP.  If
      a customer has exceeded the\n   reserved bandwidth of its VPN LSP tunnel by
      too much, the\n   modification request's priority may be given as a higher value.
      \ The\n   Label Request message for the modification of an active LSP can also\n
      \  be sent with a holding priority different from its previous one.\n   This
      effectively changes the holding priority of the LSP. Upon\n   receiving a Label
      Request Message that requests a new holding\n   priority, the LSR assigns the
      new holding priority to the bandwidth.\n   That is, the new holding priority
      is assigned to both the existing\n   incoming / outgoing labels and the new
      labels to be established for\n   the LSPID in question.  In this way self-bumping
      is prevented.\n"
    title: 3.3 Priority Handling
  - contents:
    - "3.4 Modification Failure Case Handling\n   A modification attempt may fail
      due to insufficient resource or other\n   situations.  A Notification message
      is sent back to the ingress LSR\n   R1 to indicate the failure of Label Request
      Message that intended to\n   modify the LSP.  A retry may be attempted if desired
      by the network\n   operator.  If the LSP on the original path failed when a
      modification\n   attempt is in progress, the attempt should be aborted by using
      the\n   Label Abort Request message as specified in the LDP document [5].\n
      \  In the event of a modification failure, all modifications to the LSP\n   including
      the holding priority must be restored to their original\n   values.\n"
    title: 3.4 Modification Failure Case Handling
  title: 3. LSP Modification Using CR-LDP
- contents:
  - "4. Application of LSP Bandwidth Modification in Dynamic Resource\n   Management\n
    \  In this section, we gave an example of dynamic network resource\n   management
    using the LSP bandwidth modification capability.  The\n   details of this example
    can be found in a previous internet-draft\n   [2].  Assume that customers or services
    are assigned with given CR-\n   LSPs.  These customers/services are assigned with
    one of three\n   priorities:  key, normal or best effort.  The network operator
    does\n   not want to bump any LSPs during an LSP setup, so after these CR-LSPs\n
    \  are set up, their holding priorities are all assigned as the highest\n   value.\n
    \  The network operator wants to control the resource on the links of\n   the
    LSRs, so each LSR keeps the usage status of its links.  Based on\n   the usage
    history, each link is assigned a current threshold priority\n   Pi, which means
    that the link has no bandwidth available for a Label\n   Request with a setup
    priority lower than Pi.  When an LSP's bandwidth\n   needs to be modified, the
    operator uses a policy-based algorithm to\n   assign a priority for its modification
    request, say Mp for LSP L2.\n   The ingress LSR then sends a Label Request message
    with Setup\n   Priority = Mp.  If there is sufficient bandwidth on the link for
    the\n   modification, and the Setup priority in the Label Request Message is\n
    \  higher in priority (Mp numerically smaller) than the Pi threshold of\n   the
    link, the Label Request Message will be accepted by the LSR.\n   Otherwise, the
    Label Request message will be rejected with a\n   Notification message which indicates
    that there are insufficient\n   resources.  It should also be noted that when
    OSPF (or IS-IS) floods\n   the available-link-bandwidth information, the available
    bandwidth\n   associated with a priority lower than Pi (numerical value bigger)\n
    \  should be interpreted as _0_.\n   This example based on a priority threshold
    Pi is implementation\n   specific, and illustrates the flexibility of the modification\n
    \  procedure to prioritize and control network resources.  The\n   calculation
    of Mp can be network and service dependent, and is based\n   on the operator's
    routing policy.  For example, the operator may\n   assign a higher priority (lower
    Mp value) to L2 bandwidth\n   modification if L2 belongs to a customer or service
    with _Key_\n   priority.  The operator may also collect the actual usage of each
    LSP\n   and assign a lower priority (higher Mp) to L2 bandwidth-increase\n   modification
    if, for example, in the past week L2 has exceeded its\n   reserved bandwidth by
    2 times on the average. In addition, an\n   operator may try to increase the bandwidth
    of L2 on its existing path\n   unsuccessfully if there is insufficient bandwidth
    available on L2.\n   In that case, the operator is willing to increase the bandwidth
    of\n   another LSP, L3, with the same ingress/egress LSRs as L2, in order to\n
    \  increase the overall ingress/egress bandwidth allocation.  However,\n   in
    this case the L3 bandwidth modification is performed with a lower\n   priority
    (higher Mp value) since L3 is routed on a secondary path,\n   which results in
    the higher bandwidth allocation priority being given\n   to the LSPs that are
    on their primary paths [2].\n"
  title: 4. Application of LSP Bandwidth Modification in Dynamic Resource
- contents:
  - "5. Acknowledgments\n   The authors would like to acknowledge the careful review
    and comments\n   of Adrian Farrel.\n"
  title: 5. Acknowledgments
- contents:
  - "6. Intellectual Property Considerations\n   The IETF has been notified of intellectual
    property rights claimed in\n   regard to some or all of the specification contained
    in this\n   document.  For more information consult the online list of claimed\n
    \  rights.\n"
  title: 6. Intellectual Property Considerations
- contents:
  - "7. Security Considerations\n   Protection against modification to LSPs by malign
    agents has to be\n   controlled by the MPLS domain.\n"
  title: 7. Security Considerations
- contents:
  - "8. References\n   [1] Bradner, S., \"The Internet Standards Process -- Revision
    3\", BCP\n       9, RFC 2026, October 1996.\n   [2] Ash, J., \"Traffic Engineering
    & QoS Methods for IP-, ATM-, &\n       TDM-Based Multiservice Networks\", Work
    in Progress.\n   [3] Jamoussi, B., Editor, Andersson, L., Callon, R., Dantu, R.,
    Wu,\n       L., Doolan, P., Worster, T., Feldman, N., Fredette, A., Girish,\n
    \      M., Gray, E., Heinanen, J., Kilty, T. and A. Malis, \"Constraint-\n       based
    LSP Setup Using LDP\", RFC 3212, January 2002.\n   [4] Bradner, S., \"Key words
    for use in RFCs to Indicate Requirement\n       Levels\", BCP 14, RFC 2119, March
    1997.\n   [5] Andersson, L., Doolan, P., Feldman, N., Fredette, A. and B.\n       Thomas,
    \"LDP Specification\", RFC 3036, January 2001.\n   [6] Rosen, E., Viswanathan,
    A. and R. Callon, \"Multiprotocol Label\n       Switching Architecture\", RFC
    3031, January 2001.\n   [7] Awduche, D., Malcolm, J., Agogbua, J., O'Dell, M.
    and J. McManus,\n       \"Requirements for Traffic Engineering Over MPLS\", RFC
    2702,\n       September 1999.\n   [8] Ash, J., Girish, M., Gray, E., Jamoussi,B.
    and G. Wright,\n       \"Applicability Statement for CR-LDP\", RFC 3213, January
    2002.\n"
  title: 8. References
- contents:
  - "9. Authors' Addresses\n   Gerald R. Ash\n   AT&T\n   Room MT D5-2A01\n   200
    Laurel Avenue\n   Middletown, NJ 07748\n   USA\n   Phone: 732-420-4578\n   EMail:
    gash@att.com\n   Bilel Jamoussi\n   Nortel Networks Corp.\n   600 Tech Park\n
    \  Billerica, MA 01821\n   USA\n   Phone: 978-288-4506\n   EMail: jamoussi@NortelNetworks.com\n
    \  Peter Ashwood-Smith\n   Nortel Networks Corp.\n   P O Box 3511 Station C\n
    \  Ottawa, ON K1Y 4H7\n   Canada\n   Phone: +1 613 763-4534\n   EMail: petera@NortelNetworks.com\n
    \  Darek Skalecki\n   Nortel Networks Corp.\n   P O Box 3511 Station C\n   Ottawa,
    ON K1Y 4H7\n   Canada\n   Phone: +1 613 765-2252\n   EMail: dareks@nortelnetworks.com\n
    \  Young Lee\n   Ceterus Networks\n   EMail: ylee@ceterusnetworks.com\n   Li Li\n
    \  SS8 Networks\n   495 March Rd., 5th Floor\n   Kanata, Ontario\n   K2K 3G1 Canada\n
    \  Phone: +1 613 592-2100 ext. 3228\n   EMail: lili@ss8networks.com\n   Don Fedyk\n
    \  Nortel Networks Corp.\n   600 Tech Park\n   Billerica, MA 01821\n   USA\n   Phone:
    978-288-3041\n   EMail: dwfedyk@nortelnetworks.com\n"
  title: 9. Authors' Addresses
- contents:
  - "10. Full Copyright Statement\n   Copyright (C) The Internet Society (2002).  All
    Rights Reserved.\n   This document and translations of it may be copied and furnished
    to\n   others, and derivative works that comment on or otherwise explain it\n
    \  or assist in its implementation may be prepared, copied, published\n   and
    distributed, in whole or in part, without restriction of any\n   kind, provided
    that the above copyright notice and this paragraph are\n   included on all such
    copies and derivative works.  However, this\n   document itself may not be modified
    in any way, such as by removing\n   the copyright notice or references to the
    Internet Society or other\n   Internet organizations, except as needed for the
    purpose of\n   developing Internet standards in which case the procedures for\n
    \  copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: 10. Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
