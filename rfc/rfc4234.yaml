- title: __initial_text__
  contents:
  - '             Augmented BNF for Syntax Specifications: ABNF

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   Internet technical specifications often need to define a formal\n\
    \   syntax.  Over the years, a modified version of Backus-Naur Form\n   (BNF),\
    \ called Augmented BNF (ABNF), has been popular among many\n   Internet specifications.\
    \  The current specification documents ABNF.\n   It balances compactness and simplicity,\
    \ with reasonable\n   representational power.  The differences between standard\
    \ BNF and\n   ABNF involve naming rules, repetition, alternatives, order-\n  \
    \ independence, and value ranges.  This specification also supplies\n   additional\
    \ rule definitions and encoding for a core lexical analyzer\n   of the type common\
    \ to several Internet specifications.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. INTRODUCTION ....................................................2\n\
    \   2. RULE DEFINITION .................................................3\n  \
    \    2.1. Rule Naming ................................................3\n    \
    \  2.2. Rule Form ..................................................3\n      2.3.\
    \ Terminal Values ............................................4\n      2.4. External\
    \ Encodings .........................................5\n   3. OPERATORS .......................................................6\n\
    \      3.1. Concatenation:  Rule1 Rule2 ................................6\n  \
    \    3.2. Alternatives:  Rule1 / Rule2 ...............................6\n    \
    \  3.3. Incremental Alternatives: Rule1 =/ Rule2 ...................7\n      3.4.\
    \ Value Range Alternatives:  %c##-## .........................7\n      3.5. Sequence\
    \ Group:  (Rule1 Rule2) .............................8\n      3.6. Variable Repetition:\
    \  *Rule ................................8\n      3.7. Specific Repetition:  nRule\
    \ ................................9\n      3.8. Optional Sequence:  [RULE] .................................9\n\
    \      3.9. Comment:  ; Comment ........................................9\n  \
    \    3.10. Operator Precedence .......................................9\n   4.\
    \ ABNF DEFINITION OF ABNF ........................................10\n   5. SECURITY\
    \ CONSIDERATIONS ........................................11\n   6. References\
    \ .....................................................11\n      6.1. Normative\
    \ References ......................................11\n      6.2. Informative\
    \ References ....................................11\n   Appendix A.  ACKNOWLEDGEMENTS\
    \ .....................................13\n   Appendix B.  APPENDIX - CORE ABNF\
    \ OF ABNF .........................13\n      B.1.  Core Rules ...............................................13\n\
    \      B.2.  Common Encoding ..........................................14\n"
- title: 1.  INTRODUCTION
  contents:
  - "1.  INTRODUCTION\n   Internet technical specifications often need to define a\
    \ formal\n   syntax and are free to employ whatever notation their authors deem\n\
    \   useful.  Over the years, a modified version of Backus-Naur Form\n   (BNF),\
    \ called Augmented BNF (ABNF), has been popular among many\n   Internet specifications.\
    \  It balances compactness and simplicity,\n   with reasonable representational\
    \ power.  In the early days of the\n   Arpanet, each specification contained its\
    \ own definition of ABNF.\n   This included the email specifications, [RFC733]\
    \ and then [RFC822],\n   which came to be the common citations for defining ABNF.\
    \  The current\n   document separates those definitions to permit selective reference.\n\
    \   Predictably, it also provides some modifications and enhancements.\n   The\
    \ differences between standard BNF and ABNF involve naming rules,\n   repetition,\
    \ alternatives, order-independence, and value ranges.\n   Appendix B supplies\
    \ rule definitions and encoding for a core lexical\n   analyzer of the type common\
    \ to several Internet specifications.  It\n   is provided as a convenience and\
    \ is otherwise separate from the meta\n   language defined in the body of this\
    \ document, and separate from its\n   formal status.\n   Changes since [RFC2234]:\n\
    \      In Section 3.7, the phrase: \"That is, exactly <N> occurrences of\n   \
    \   <element>.\" was corrected to: \"That is, exactly <n> occurrences of\n   \
    \   <element>.\"\n      Some continuation comment lines needed to be corrected\
    \ to begin\n      with comment character (\";\").\n"
- title: 2.  RULE DEFINITION
  contents:
  - '2.  RULE DEFINITION

    '
- title: 2.1.  Rule Naming
  contents:
  - "2.1.  Rule Naming\n   The name of a rule is simply the name itself; that is,\
    \ a sequence of\n   characters, beginning with an alphabetic character, and followed\
    \ by a\n   combination of alphabetics, digits, and hyphens (dashes).\n   NOTE:\n\
    \      Rule names are case-insensitive\n   The names <rulename>, <Rulename>, <RULENAME>,\
    \ and <rUlENamE> all\n   refer to the same rule.\n   Unlike original BNF, angle\
    \ brackets (\"<\", \">\") are not required.\n   However, angle brackets may be\
    \ used around a rule name whenever their\n   presence facilitates in discerning\
    \ the use of a rule name.  This is\n   typically restricted to rule name references\
    \ in free-form prose, or\n   to distinguish partial rules that combine into a\
    \ string not separated\n   by white space, such as shown in the discussion about\
    \ repetition,\n   below.\n"
- title: 2.2.  Rule Form
  contents:
  - "2.2.  Rule Form\n   A rule is defined by the following sequence:\n         name\
    \ =  elements crlf\n   where <name> is the name of the rule, <elements> is one\
    \ or more rule\n   names or terminal specifications, and <crlf> is the end-of-line\n\
    \   indicator (carriage return followed by line feed).  The equal sign\n   separates\
    \ the name from the definition of the rule.  The elements\n   form a sequence\
    \ of one or more rule names and/or value definitions,\n   combined according to\
    \ the various operators defined in this document,\n   such as alternative and\
    \ repetition.\n   For visual ease, rule definitions are left aligned.  When a\
    \ rule\n   requires multiple lines, the continuation lines are indented.  The\n\
    \   left alignment and indentation are relative to the first lines of the\n  \
    \ ABNF rules and need not match the left margin of the document.\n"
- title: 2.3.  Terminal Values
  contents:
  - "2.3.  Terminal Values\n   Rules resolve into a string of terminal values, sometimes\
    \ called\n   characters.  In ABNF, a character is merely a non-negative integer.\n\
    \   In certain contexts, a specific mapping (encoding) of values into a\n   character\
    \ set (such as ASCII) will be specified.\n   Terminals are specified by one or\
    \ more numeric characters, with the\n   base interpretation of those characters\
    \ indicated explicitly.  The\n   following bases are currently defined:\n    \
    \     b           =  binary\n         d           =  decimal\n         x     \
    \      =  hexadecimal\n   Hence:\n         CR          =  %d13\n         CR  \
    \        =  %x0D\n   respectively specify the decimal and hexadecimal representation\
    \ of\n   [US-ASCII] for carriage return.\n   A concatenated string of such values\
    \ is specified compactly, using a\n   period (\".\") to indicate a separation\
    \ of characters within that\n   value.  Hence:\n         CRLF        =  %d13.10\n\
    \   ABNF permits the specification of literal text strings directly,\n   enclosed\
    \ in quotation-marks.  Hence:\n         command     =  \"command string\"\n  \
    \ Literal text strings are interpreted as a concatenated set of\n   printable\
    \ characters.\n   NOTE:\n      ABNF strings are case-insensitive and the character\
    \ set for these\n      strings is us-ascii.\n   Hence:\n         rulename = \"\
    abc\"\n   and:\n         rulename = \"aBc\"\n   will match \"abc\", \"Abc\", \"\
    aBc\", \"abC\", \"ABc\", \"aBC\", \"AbC\", and\n   \"ABC\".\n      To specify\
    \ a rule that IS case SENSITIVE, specify the characters\n      individually.\n\
    \   For example:\n         rulename    =  %d97 %d98 %d99\n   or\n         rulename\
    \    =  %d97.98.99\n   will match only the string that comprises only the lowercased\n\
    \   characters, abc.\n"
- title: 2.4.  External Encodings
  contents:
  - "2.4.  External Encodings\n   External representations of terminal value characters\
    \ will vary\n   according to constraints in the storage or transmission environment.\n\
    \   Hence, the same ABNF-based grammar may have multiple external\n   encodings,\
    \ such as one for a 7-bit US-ASCII environment, another for\n   a binary octet\
    \ environment, and still a different one when 16-bit\n   Unicode is used.  Encoding\
    \ details are beyond the scope of ABNF,\n   although Appendix A (Core) provides\
    \ definitions for a 7-bit US-ASCII\n   environment as has been common to much\
    \ of the Internet.\n   By separating external encoding from the syntax, it is\
    \ intended that\n   alternate encoding environments can be used for the same syntax.\n"
- title: 3.  OPERATORS
  contents:
  - '3.  OPERATORS

    '
- title: '3.1.  Concatenation:  Rule1 Rule2'
  contents:
  - "3.1.  Concatenation:  Rule1 Rule2\n   A rule can define a simple, ordered string\
    \ of values (i.e., a\n   concatenation of contiguous characters) by listing a\
    \ sequence of rule\n   names.  For example:\n         foo         =  %x61    \
    \       ; a\n         bar         =  %x62           ; b\n         mumble     \
    \ =  foo bar foo\n   So that the rule <mumble> matches the lowercase string \"\
    aba\".\n   LINEAR WHITE SPACE: Concatenation is at the core of the ABNF parsing\n\
    \   model.  A string of contiguous characters (values) is parsed\n   according\
    \ to the rules defined in ABNF.  For Internet specifications,\n   there is some\
    \ history of permitting linear white space (space and\n   horizontal tab) to be\
    \ freely and implicitly interspersed around major\n   constructs, such as delimiting\
    \ special characters or atomic strings.\n   NOTE:\n      This specification for\
    \ ABNF does not provide for implicit\n      specification of linear white space.\n\
    \   Any grammar that wishes to permit linear white space around\n   delimiters\
    \ or string segments must specify it explicitly.  It is\n   often useful to provide\
    \ for such white space in \"core\" rules that are\n   then used variously among\
    \ higher-level rules.  The \"core\" rules might\n   be formed into a lexical analyzer\
    \ or simply be part of the main\n   ruleset.\n"
- title: '3.2.  Alternatives:  Rule1 / Rule2'
  contents:
  - "3.2.  Alternatives:  Rule1 / Rule2\n   Elements separated by a forward slash\
    \ (\"/\") are alternatives.\n   Therefore,\n         foo / bar\n   will accept\
    \ <foo> or <bar>.\n   NOTE:\n      A quoted string containing alphabetic characters\
    \ is a special form\n      for specifying alternative characters and is interpreted\
    \ as a\n      non-terminal representing the set of combinatorial strings with\n\
    \      the contained characters, in the specified order but with any\n      mixture\
    \ of upper and lower case.\n"
- title: '3.3.  Incremental Alternatives: Rule1 =/ Rule2'
  contents:
  - "3.3.  Incremental Alternatives: Rule1 =/ Rule2\n   It is sometimes convenient\
    \ to specify a list of alternatives in\n   fragments.  That is, an initial rule\
    \ may match one or more\n   alternatives, with later rule definitions adding to\
    \ the set of\n   alternatives.  This is particularly useful for otherwise, independent\n\
    \   specifications that derive from the same parent rule set, such as\n   often\
    \ occurs with parameter lists.  ABNF permits this incremental\n   definition through\
    \ the construct:\n         oldrule     =/ additional-alternatives\n   So that\
    \ the rule set\n         ruleset     =  alt1 / alt2\n         ruleset     =/ alt3\n\
    \         ruleset     =/ alt4 / alt5\n   is the same as specifying\n         ruleset\
    \     =  alt1 / alt2 / alt3 / alt4 / alt5\n"
- title: '3.4.  Value Range Alternatives:  %c##-##'
  contents:
  - "3.4.  Value Range Alternatives:  %c##-##\n   A range of alternative numeric values\
    \ can be specified compactly,\n   using dash (\"-\") to indicate the range of\
    \ alternative values.  Hence:\n         DIGIT       =  %x30-39\n   is equivalent\
    \ to:\n         DIGIT       =  \"0\" / \"1\" / \"2\" / \"3\" / \"4\" / \"5\" /\
    \ \"6\" /\n                        \"7\" / \"8\" / \"9\"\n   Concatenated numeric\
    \ values and numeric value ranges cannot be\n   specified in the same string.\
    \  A numeric value may use the dotted\n   notation for concatenation or it may\
    \ use the dash notation to specify\n   one value range.  Hence, to specify one\
    \ printable character between\n   end of line sequences, the specification could\
    \ be:\n         char-line = %x0D.0A %x20-7E %x0D.0A\n"
- title: '3.5.  Sequence Group:  (Rule1 Rule2)'
  contents:
  - "3.5.  Sequence Group:  (Rule1 Rule2)\n   Elements enclosed in parentheses are\
    \ treated as a single element,\n   whose contents are STRICTLY ORDERED.  Thus,\n\
    \         elem (foo / bar) blat\n   matches (elem foo blat) or (elem bar blat),\
    \ and\n         elem foo / bar blat\n   matches (elem foo) or (bar blat).\n  \
    \ NOTE:\n      It is strongly advised that grouping notation be used, rather than\n\
    \      relying on the proper reading of \"bare\" alternations, when\n      alternatives\
    \ consist of multiple rule names or literals.\n   Hence, it is recommended that\
    \ the following form be used:\n        (elem foo) / (bar blat)\n   It will avoid\
    \ misinterpretation by casual readers.\n   The sequence group notation is also\
    \ used within free text to set off\n   an element sequence from the prose.\n"
- title: '3.6.  Variable Repetition:  *Rule'
  contents:
  - "3.6.  Variable Repetition:  *Rule\n   The operator \"*\" preceding an element\
    \ indicates repetition.  The full\n   form is:\n         <a>*<b>element\n   where\
    \ <a> and <b> are optional decimal values, indicating at least\n   <a> and at\
    \ most <b> occurrences of the element.\n   Default values are 0 and infinity so\
    \ that *<element> allows any\n   number, including zero; 1*<element> requires\
    \ at least one;\n   3*3<element> allows exactly 3 and 1*2<element> allows one\
    \ or two.\n"
- title: '3.7.  Specific Repetition:  nRule'
  contents:
  - "3.7.  Specific Repetition:  nRule\n   A rule of the form:\n         <n>element\n\
    \   is equivalent to\n         <n>*<n>element\n   That is, exactly <n> occurrences\
    \ of <element>.  Thus, 2DIGIT is a 2-\n   digit number, and 3ALPHA is a string\
    \ of three alphabetic characters.\n"
- title: '3.8.  Optional Sequence:  [RULE]'
  contents:
  - "3.8.  Optional Sequence:  [RULE]\n   Square brackets enclose an optional element\
    \ sequence:\n         [foo bar]\n   is equivalent to\n         *1(foo bar).\n"
- title: '3.9.  Comment:  ; Comment'
  contents:
  - "3.9.  Comment:  ; Comment\n   A semi-colon starts a comment that continues to\
    \ the end of line.\n   This is a simple way of including useful notes in parallel\
    \ with the\n   specifications.\n"
- title: 3.10.  Operator Precedence
  contents:
  - "3.10.  Operator Precedence\n   The various mechanisms described above have the\
    \ following precedence,\n   from highest (binding tightest) at the top, to lowest\
    \ (loosest) at\n   the bottom:\n         Strings, Names formation\n         Comment\n\
    \         Value range\n         Repetition\n         Grouping, Optional\n    \
    \     Concatenation\n         Alternative\n   Use of the alternative operator,\
    \ freely mixed with concatenations,\n   can be confusing.\n      Again, it is\
    \ recommended that the grouping operator be used to\n      make explicit concatenation\
    \ groups.\n"
- title: 4.  ABNF DEFINITION OF ABNF
  contents:
  - "4.  ABNF DEFINITION OF ABNF\n   NOTES:\n      1. This syntax requires a formatting\
    \ of rules that is relatively\n         strict.  Hence, the version of a ruleset\
    \ included in a\n         specification might need preprocessing to ensure that\
    \ it can be\n         interpreted by an ABNF parser.\n      2. This syntax uses\
    \ the rules provided in Appendix B (Core).\n         rulelist       =  1*( rule\
    \ / (*c-wsp c-nl) )\n         rule           =  rulename defined-as elements c-nl\n\
    \                                ; continues if next line starts\n           \
    \                     ;  with white space\n         rulename       =  ALPHA *(ALPHA\
    \ / DIGIT / \"-\")\n         defined-as     =  *c-wsp (\"=\" / \"=/\") *c-wsp\n\
    \                                ; basic rules definition and\n              \
    \                  ;  incremental alternatives\n         elements       =  alternation\
    \ *c-wsp\n         c-wsp          =  WSP / (c-nl WSP)\n         c-nl         \
    \  =  comment / CRLF\n                                ; comment or newline\n \
    \        comment        =  \";\" *(WSP / VCHAR) CRLF\n         alternation   \
    \ =  concatenation\n                           *(*c-wsp \"/\" *c-wsp concatenation)\n\
    \         concatenation  =  repetition *(1*c-wsp repetition)\n         repetition\
    \     =  [repeat] element\n         repeat         =  1*DIGIT / (*DIGIT \"*\"\
    \ *DIGIT)\n         element        =  rulename / group / option /\n          \
    \                 char-val / num-val / prose-val\n         group          =  \"\
    (\" *c-wsp alternation *c-wsp \")\"\n         option         =  \"[\" *c-wsp alternation\
    \ *c-wsp \"]\"\n         char-val       =  DQUOTE *(%x20-21 / %x23-7E) DQUOTE\n\
    \                                ; quoted string of SP and VCHAR\n           \
    \                     ;  without DQUOTE\n         num-val        =  \"%\" (bin-val\
    \ / dec-val / hex-val)\n         bin-val        =  \"b\" 1*BIT\n             \
    \              [ 1*(\".\" 1*BIT) / (\"-\" 1*BIT) ]\n                         \
    \       ; series of concatenated bit values\n                                ;\
    \  or single ONEOF range\n         dec-val        =  \"d\" 1*DIGIT\n         \
    \                  [ 1*(\".\" 1*DIGIT) / (\"-\" 1*DIGIT) ]\n         hex-val \
    \       =  \"x\" 1*HEXDIG\n                           [ 1*(\".\" 1*HEXDIG) / (\"\
    -\" 1*HEXDIG) ]\n         prose-val      =  \"<\" *(%x20-3D / %x3F-7E) \">\"\n\
    \                                ; bracketed string of SP and VCHAR\n        \
    \                        ;  without angles\n                                ;\
    \ prose description, to be used as\n                                ;  last resort\n"
- title: 5.  SECURITY CONSIDERATIONS
  contents:
  - "5.  SECURITY CONSIDERATIONS\n   Security is truly believed to be irrelevant to\
    \ this document.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [US-ASCII] American National Standards Institute,\
    \ \"Coded Character\n              Set -- 7-bit American Standard Code for Information\n\
    \              Interchange\", ANSI X3.4, 1986.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [RFC2234]  Crocker, D. and P. Overell, \"Augmented\
    \ BNF for Syntax\n              Specifications: ABNF\", RFC 2234, November 1997.\n\
    \   [RFC733]   Crocker, D., Vittal, J., Pogran, K., and D. Henderson,\n      \
    \        \"Standard for the format of ARPA network text messages\",\n        \
    \      RFC 733, November 1977.\n   [RFC822]   Crocker, D., \"Standard for the\
    \ format of ARPA Internet\n              text messages\", STD 11, RFC 822, August\
    \ 1982.\n"
- title: Appendix A.  ACKNOWLEDGEMENTS
  contents:
  - "Appendix A.  ACKNOWLEDGEMENTS\n   The syntax for ABNF was originally specified\
    \ in RFC 733.  Ken L.\n   Harrenstien, of SRI International, was responsible for\
    \ re-coding the\n   BNF into an augmented BNF that makes the representation smaller\
    \ and\n   easier to understand.\n   This recent project began as a simple effort\
    \ to cull out the portion\n   of RFC 822 that has been repeatedly cited by non-email\
    \ specification\n   writers, namely the description of augmented BNF.  Rather\
    \ than simply\n   and blindly converting the existing text into a separate document,\n\
    \   the working group chose to give careful consideration to the\n   deficiencies,\
    \ as well as benefits, of the existing specification and\n   related specifications\
    \ made available over the last 15 years, and\n   therefore to pursue enhancement.\
    \  This turned the project into\n   something rather more ambitious than was first\
    \ intended.\n   Interestingly, the result is not massively different from that\n\
    \   original, although decisions, such as removing the list notation,\n   came\
    \ as a surprise.\n   This \"separated\" version of the specification was part\
    \ of the DRUMS\n   working group, with significant contributions from Jerome Abela,\n\
    \   Harald Alvestrand, Robert Elz, Roger Fajman, Aviva Garrett, Tom\n   Harsch,\
    \ Dan Kohn, Bill McQuillan, Keith Moore, Chris Newman, Pete\n   Resnick, and Henning\
    \ Schulzrinne.\n   Julian Reschke warrants a special thanks for converting the\
    \ Draft\n   Standard version to XML source form.\n"
- title: Appendix B.  APPENDIX - CORE ABNF OF ABNF
  contents:
  - "Appendix B.  APPENDIX - CORE ABNF OF ABNF\n   This Appendix is provided as a\
    \ convenient core for specific grammars.\n   The definitions may be used as a\
    \ core set of rules.\n"
- title: B.1.  Core Rules
  contents:
  - "B.1.  Core Rules\n   Certain basic rules are in uppercase, such as SP, HTAB,\
    \ CRLF, DIGIT,\n   ALPHA, etc.\n         ALPHA          =  %x41-5A / %x61-7A \
    \  ; A-Z / a-z\n         BIT            =  \"0\" / \"1\"\n         CHAR      \
    \     =  %x01-7F\n                                ; any 7-bit US-ASCII character,\n\
    \                                ;  excluding NUL\n         CR             = \
    \ %x0D\n                                ; carriage return\n         CRLF     \
    \      =  CR LF\n                                ; Internet standard newline\n\
    \         CTL            =  %x00-1F / %x7F\n                                ;\
    \ controls\n         DIGIT          =  %x30-39\n                             \
    \   ; 0-9\n         DQUOTE         =  %x22\n                                ;\
    \ \" (Double Quote)\n         HEXDIG         =  DIGIT / \"A\" / \"B\" / \"C\"\
    \ / \"D\" / \"E\" / \"F\"\n         HTAB           =  %x09\n                 \
    \               ; horizontal tab\n         LF             =  %x0A\n          \
    \                      ; linefeed\n         LWSP           =  *(WSP / CRLF WSP)\n\
    \                                ; linear white space (past newline)\n       \
    \  OCTET          =  %x00-FF\n                                ; 8 bits of data\n\
    \         SP             =  %x20\n         VCHAR          =  %x21-7E\n       \
    \                         ; visible (printing) characters\n         WSP      \
    \      =  SP / HTAB\n                                ; white space\n"
- title: B.2.  Common Encoding
  contents:
  - "B.2.  Common Encoding\n   Externally, data are represented as \"network virtual\
    \ ASCII\" (namely,\n   7-bit US-ASCII in an 8-bit field), with the high (8th)\
    \ bit set to\n   zero.  A string of values is in \"network byte order\", in which\
    \ the\n   higher-valued bytes are represented on the left-hand side and are\n\
    \   sent over the network first.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Dave Crocker (editor)\n   Brandenburg InternetWorking\n\
    \   675 Spruce Dr.\n   Sunnyvale, CA  94086\n   US\n   Phone: +1.408.246.8253\n\
    \   EMail: dcrocker@bbiw.net\n   Paul Overell\n   THUS plc.\n   1/2 Berkeley Square\n\
    \   99 Berkeley Street\n   Glasgow\n   G3 7HR\n   UK\n   EMail: paul.overell@thus.net\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
