- title: __initial_text__
  contents:
  - ''
- title: Internet Research Task Force (IRTF)                             A. Doria
  contents:
  - "Internet Research Task Force (IRTF)                             A. Doria\n  \
    \  A Set of Possible Requirements for a Future Routing Architecture\n"
- title: Abstract
  contents:
  - "Abstract\n   The requirements for routing architectures described in this document\n\
    \   were produced by two sub-groups under the IRTF Routing Research Group\n  \
    \ (RRG) in 2001, with some editorial updates up to 2006.  The two sub-\n   groups\
    \ worked independently, and the resulting requirements represent\n   two separate\
    \ views of the problem and of what is required to fix the\n   problem.  This document\
    \ may usefully serve as part of the recommended\n   reading for anyone who works\
    \ on routing architecture designs for the\n   Internet in the future.\n   The\
    \ document is published with the support of the IRTF RRG as a\n   record of the\
    \ work completed at that time, but with the understanding\n   that it does not\
    \ necessarily represent either the latest technical\n   understanding or the technical\
    \ consensus of the research group at the\n   date of publication.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for the historical record.\n   This document defines a Historic\
    \ Document for the Internet community.\n   This document is a product of the Internet\
    \ Research Task Force\n   (IRTF).  The IRTF publishes the results of Internet-related\
    \ research\n   and development activities.  These results might not be suitable\
    \ for\n   deployment.  This RFC represents the individual opinion(s) of one or\n\
    \   more members of the Routing Research Group of the Internet Research\n   Task\
    \ Force (IRTF).  Documents approved for publication by the IRSG\n   are not a\
    \ candidate for any level of Internet Standard; see Section 2\n   of RFC 5741.\n\
    \   Information about the current status of this document, any errata,\n   and\
    \ how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5772.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Background ......................................................4\n\
    \   2. Results from Group A ............................................5\n  \
    \    2.1. Group A - Requirements for a Next Generation Routing and\n         \
    \  Addressing Architecture ....................................5\n           2.1.1.\
    \ Architecture ........................................6\n           2.1.2. Separable\
    \ Components ................................6\n           2.1.3. Scalable ............................................7\n\
    \           2.1.4. Lots of Interconnectivity ..........................10\n  \
    \         2.1.5. Random Structure ...................................10\n    \
    \       2.1.6. Multi-Homing .......................................11\n      \
    \     2.1.7. Multi-Path .........................................11\n        \
    \   2.1.8. Convergence ........................................12\n          \
    \ 2.1.9. Routing System Security ............................14\n           2.1.10.\
    \ End Host Security .................................16\n           2.1.11. Rich\
    \ Policy .......................................16\n           2.1.12. Incremental\
    \ Deployment ............................19\n           2.1.13. Mobility ..........................................19\n\
    \           2.1.14. Address Portability ...............................20\n  \
    \         2.1.15. Multi-Protocol ....................................20\n    \
    \       2.1.16. Abstraction .......................................20\n      \
    \     2.1.17. Simplicity ........................................21\n        \
    \   2.1.18. Robustness ........................................21\n          \
    \ 2.1.19. Media Independence ................................22\n           2.1.20.\
    \ Stand-Alone .......................................22\n           2.1.21. Safety\
    \ of Configuration ...........................23\n           2.1.22. Renumbering\
    \ .......................................23\n           2.1.23. Multi-Prefix ......................................23\n\
    \           2.1.24. Cooperative Anarchy ...............................23\n  \
    \         2.1.25. Network-Layer Protocols and Forwarding Model ......23\n    \
    \       2.1.26. Routing Algorithm .................................23\n      \
    \     2.1.27. Positive Benefit ..................................24\n        \
    \   2.1.28. Administrative Entities and the IGP/EGP Split .....24\n      2.2.\
    \ Non-Requirements ..........................................25\n           2.2.1.\
    \ Forwarding Table Optimization ......................25\n           2.2.2. Traffic\
    \ Engineering ................................25\n           2.2.3. Multicast\
    \ ..........................................25\n           2.2.4. Quality of Service\
    \ (QoS) ...........................26\n           2.2.5. IP Prefix Aggregation\
    \ ..............................26\n           2.2.6. Perfect Safety .....................................26\n\
    \           2.2.7. Dynamic Load Balancing .............................27\n  \
    \         2.2.8. Renumbering of Hosts and Routers ...................27\n    \
    \       2.2.9. Host Mobility ......................................27\n      \
    \     2.2.10. Backward Compatibility ............................27\n   3. Requirements\
    \ from Group B ......................................27\n      3.1. Group B -\
    \ Future Domain Routing Requirements ..............28\n      3.2. Underlying Principles\
    \ .....................................28\n           3.2.1. Inter-Domain and\
    \ Intra-Domain ......................29\n           3.2.2. Influences on a Changing\
    \ Network ...................29\n           3.2.3. High-Level Goals ...................................31\n\
    \      3.3. High-Level User Requirements ..............................35\n  \
    \         3.3.1. Organizational Users ...............................35\n    \
    \       3.3.2. Individual Users ...................................37\n      3.4.\
    \ Mandated Constraints ......................................38\n           3.4.1.\
    \ The Federated Environment ..........................39\n           3.4.2. Working\
    \ with Different Sorts of Networks ...........39\n           3.4.3. Delivering\
    \ Resilient Service .......................39\n           3.4.4. When Will the\
    \ New Solution Be Required? ............40\n      3.5. Assumptions ...............................................40\n\
    \      3.6. Functional Requirements ...................................42\n  \
    \         3.6.1. Topology ...........................................43\n    \
    \       3.6.2. Distribution .......................................44\n      \
    \     3.6.3. Addressing .........................................48\n        \
    \   3.6.4. Statistics Support .................................50\n          \
    \ 3.6.5. Management Requirements ............................50\n           3.6.6.\
    \ Provability ........................................51\n           3.6.7. Traffic\
    \ Engineering ................................52\n           3.6.8. Support for\
    \ Middleboxes ............................54\n      3.7. Performance Requirements\
    \ ..................................54\n      3.8. Backward Compatibility (Cutover)\
    \ and Maintainability ......55\n      3.9. Security Requirements .....................................56\n\
    \      3.10. Debatable Issues .........................................57\n  \
    \         3.10.1. Network Modeling ..................................58\n    \
    \       3.10.2. System Modeling ...................................58\n      \
    \     3.10.3. One, Two, or Many Protocols .......................59\n        \
    \   3.10.4. Class of Protocol .................................59\n          \
    \ 3.10.5. Map Abstraction ...................................59\n           3.10.6.\
    \ Clear Identification for All Entities .............60\n           3.10.7. Robustness\
    \ and Redundancy .........................60\n           3.10.8. Hierarchy .........................................60\n\
    \           3.10.9. Control Theory ....................................61\n  \
    \         3.10.10. Byzantium ........................................61\n    \
    \       3.10.11. VPN Support ......................................61\n      \
    \     3.10.12. End-to-End Reliability ...........................62\n        \
    \   3.10.13. End-to-End Transparency ..........................62\n   4. Security\
    \ Considerations ........................................62\n   5. IANA Considerations\
    \ ............................................63\n   6. Acknowledgments ................................................63\n\
    \   7. Informative References .........................................65\n"
- title: 1.  Background
  contents:
  - "1.  Background\n   In 2001, the IRTF Routing Research Group (IRTF RRG) chairs,\
    \ Abha\n   Ahuja and Sean Doran, decided to establish a sub-group to look at\n\
    \   requirements for inter-domain routing (IDR).  A group of well-known\n   routing\
    \ experts was assembled to develop requirements for a new\n   routing architecture.\
    \  Their mandate was to approach the problem\n   starting from a blank slate.\
    \  This group was free to take any\n   approach, including a revolutionary approach,\
    \ in developing\n   requirements for solving the problems they saw in inter-domain\n\
    \   routing.\n   Simultaneously, an independent effort was started in Sweden with\
    \ a\n   similar goal.  A team, calling itself Babylon, with participation\n  \
    \ from vendors, service providers, and academia assembled to understand\n   the\
    \ history of inter-domain routing, to research the problems seen by\n   the service\
    \ providers, and to develop a proposal of requirements for\n   a follow-on to\
    \ the current routing architecture.  This group's remit\n   required an evolutionary\
    \ approach starting from current routing\n   architecture and practice.  In other\
    \ words, the group limited itself\n   to developing an evolutionary strategy.\
    \  The Babylon group was later\n   folded into the IRTF RRG as Sub-Group B to\
    \ distinguish it from the\n   original RRG Sub-Group A.\n   One of the questions\
    \ that arose while the groups were working in\n   isolation was whether there\
    \ would be many similarities between their\n   sets of requirements.  That is,\
    \ would the requirements that grew from\n   a blank sheet of paper resemble those\
    \ that started with the\n   evolutionary approach?  As can be seen from reading\
    \ the two sets of\n   requirements, there were many areas of fundamental agreement\
    \ but some\n   areas of disagreement.\n   There were suggestions within the RRG\
    \ that the two teams should work\n   together to create a single set of requirements.\
    \  Since these\n   requirements are only guidelines to future work, however, some\
    \ felt\n   that doing so would risk losing content without gaining any\n   particular\
    \ advantage.  It is not as if any group, for example, the\n   IRTF RRG or the\
    \ IETF Routing Area, was expected to use these\n   requirements as written and\
    \ to create an architecture that met these\n   requirements.  Rather, the requirements\
    \ were in practice strong\n   recommendations for a way to proceed in creating\
    \ a new routing\n   architecture.  In the end, the decision was made to include\
    \ the\n   results of both efforts, side by side, in one document.\n   This document\
    \ contains the two requirement sets produced by the\n   teams.  The text has received\
    \ only editorial modifications; the\n   requirements themselves have been left\
    \ unaltered.  Whenever the\n   editors felt that conditions had changed in the\
    \ few years since the\n   text was written, an editors' note has been added to\
    \ the text.\n   In reading this document, it is important to keep in mind that\
    \ all of\n   these requirements are suggestions, which are laid out to assist\n\
    \   those interested in developing new routing architectures.  It is also\n  \
    \ important to remember that, while the people working on these\n   suggestions\
    \ have done their best to make intelligent suggestions,\n   there are no guarantees.\
    \  So a reader of this document should not\n   treat what it says as absolute,\
    \ nor treat every suggestion as\n   necessary.  No architecture is expected to\
    \ fulfill every\n   \"requirement\".  Hopefully, though, future architectures\
    \ will consider\n   what is offered in this document.\n   The IRTF RRG supported\
    \ publication of this document as a historical\n   record of the work completed\
    \ on the understanding that it does not\n   necessarily represent either the latest\
    \ technical understanding or\n   the technical consensus of the research group\
    \ at the time of\n   publication.  The document has had substantial review by\
    \ members of\n   the two teams, other members of the IRTF RRG, and additional\
    \ experts\n   over the years.\n   Finally, this document does not make any claims\
    \ that it is possible\n   to have a practical solution that meets all the listed\
    \ requirements.\n"
- title: 2.  Results from Group A
  contents:
  - "2.  Results from Group A\n   This section presents the results of the work done\
    \ by Sub-Group A of\n   the IRTF RRG during 2001-2002.  The work originally appeared\
    \ under\n   the title: \"Requirements For a Next Generation Routing and Addressing\n\
    \   Architecture\" and was edited by Frank Kastenholz.\n"
- title: 2.1.  Group A - Requirements for a Next Generation Routing and
  contents:
  - "2.1.  Group A - Requirements for a Next Generation Routing and\n      Addressing\
    \ Architecture\n   The requirements presented in this section are not presented\
    \ in any\n   particular order.\n"
- title: 2.1.1.  Architecture
  contents:
  - "2.1.1.  Architecture\n   The new routing and addressing protocols, data structures,\
    \ and\n   algorithms need to be developed from a clear, well thought-out, and\n\
    \   documented architecture.\n   The new routing and addressing system must have\
    \ an architectural\n   specification that describes all of the routing and addressing\n\
    \   elements, their interactions, what functions the system performs, and\n  \
    \ how it goes about performing them.  The architectural specification\n   does\
    \ not go into issues such as protocol and data structure design.\n   The architecture\
    \ should be agnostic with regard to specific\n   algorithms and protocols.\n \
    \  Doing architecture before doing detailed protocol design is good\n   engineering\
    \ practice.  This allows the architecture to be reviewed\n   and commented upon,\
    \ with changes made as necessary, when it is still\n   easy to do so.  Also, by\
    \ producing an architecture, the eventual\n   users of the protocols (the operations\
    \ community) will have a better\n   understanding of how the designers of the\
    \ protocols meant them to be\n   used.\n"
- title: 2.1.2.  Separable Components
  contents:
  - "2.1.2.  Separable Components\n   The architecture must place different functions\
    \ into separate\n   components.\n   Separating functions, capabilities, and so\
    \ forth into individual\n   components and making each component \"stand alone\"\
    \ is generally\n   considered by system architects to be \"A Good Thing\".  It\
    \ allows\n   individual elements of the system to be designed and tuned to do\n\
    \   their jobs \"very well\".  It also allows for piecemeal replacement and\n\
    \   upgrading of elements as new technologies and algorithms become\n   available.\n\
    \   The architecture must have the ability to replace or upgrade existing\n  \
    \ components and to add new ones, without disrupting the remaining\n   parts of\
    \ the system.  Operators must be able to roll out these\n   changes and additions\
    \ incrementally (i.e., no \"flag days\").  These\n   abilities are needed to allow\
    \ the architecture to evolve as the\n   Internet changes.\n   The architecture\
    \ specification shall define each of these components,\n   their jobs, and their\
    \ interactions.\n   Some thoughts to consider along these lines are:\n   o  Making\
    \ topology and addressing separate subsystems.  This may\n      allow highly optimized\
    \ topology management and discovery without\n      constraining the addressing\
    \ structure or physical topology in\n      unacceptable ways.\n   o  Separate\
    \ \"fault detection and healing\" from basic topology.  From\n      Mike O'Dell:\n\
    \         Historically the same machinery is used for both.  While\n         attractive\
    \ for many reasons, the availability of exogenous\n         topology information\
    \ (i.e., the intended topology) should, it\n         seems, make some tasks easier\
    \ than the general case of starting\n         with zero knowledge.  It certainly\
    \ helps with recovery in the\n         case of constraint satisfaction.  In fact,\
    \ the intended\n         topology is a powerful way to state certain kinds of\
    \ policy.\n         [ODell01]\n   o  Making policy definition and application\
    \ a separate subsystem,\n      layered over the others.\n   The architecture should\
    \ also separate topology, routing, and\n   addressing from the application that\
    \ uses those components.  This\n   implies that applications such as policy definition,\
    \ forwarding, and\n   circuit and tunnel management are separate subsystems layered\
    \ on top\n   of the basic topology, routing, and addressing systems.\n"
- title: 2.1.3.  Scalable
  contents:
  - "2.1.3.  Scalable\n   Scaling is the primary problem facing the routing and addressing\n\
    \   architecture today.  This problem must be solved and it must be\n   solved\
    \ for the long term.\n   The architecture must support a large and complex network.\
    \  Ideally,\n   it will serve our needs for the next 20 years.  Unfortunately:\n\
    \   1.  we do not know how big the Internet will grow over that time, and\n  \
    \ 2.  the architecture developed from these requirements may change the\n    \
    \   fundamental structure of the Internet and therefore its growth\n       patterns.\
    \  This change makes it difficult to predict future\n       growth patterns of\
    \ the Internet.\n   As a result, we can't quantify the requirement in any meaningful\
    \ way.\n   Using today's architectural elements as a mechanism for describing\n\
    \   things, we believe that the network could grow to:\n   1.  tens of thousands\
    \ of ASs\n          Editors' Note: As of 2005, this level had already been\n \
    \         reached.\n   2.  tens to hundreds of millions of prefixes, during the\
    \ lifetime of\n       this architecture.\n   These sizes are given as a \"flavor\"\
    \ for how we expect the Internet to\n   grow.  We fully believe that any new architecture\
    \ may eliminate some\n   current architectural elements and introduce new ones.\n\
    \   A new routing and addressing architecture designed for a specific\n   network\
    \ size would be inappropriate.  First, the cost of routing\n   calculations is\
    \ based only in part on the number of ASs or prefixes\n   in the network.  The\
    \ number and locations of the links in the network\n   are also significant factors.\
    \  Second, past predictions of Internet\n   growth and topology patterns have\
    \ proven to be wildly inaccurate, so\n   developing an architecture to a specific\
    \ size goal would at best be\n   shortsighted.\n      Editors' Note: At the time\
    \ of these meetings, the BGP statistics\n      kept at sites such as www.routeviews.org\
    \ either did not exist or\n      had been running for only a few months.  After\
    \ 5 years of\n      recording public Internet data trends in AS growth, routing\
    \ table\n      growth can be observed (past) with some short-term prediction.\
    \  As\n      each year of data collection continues, the ability to observe and\n\
    \      predict trends improves.  This architecture work pointed out the\n    \
    \  need for such statistics to improve future routing designs.\n   Therefore,\
    \ we will not make the scaling requirement based on a\n   specific network size.\
    \  Instead, the new routing and addressing\n   architecture should have the ability\
    \ to constrain the increase in\n   load (CPU, memory space and bandwidth, and\
    \ network bandwidth) on ANY\n   SINGLE ROUTER to be less than these specific functions:\n\
    \   1.  The computational power and memory sizes required to execute the\n   \
    \    routing protocol software and to contain the tables must grow\n       more\
    \ slowly than hardware capabilities described by Moore's Law,\n       doubling\
    \ every 18 months.  Other observations indicate that\n       memory sizes double\
    \ every 2 years or so.\n   2.  Network bandwidth and latency are some key constraints\
    \ on how\n       fast routing protocol updates can be disseminated (and therefore\n\
    \       how fast the routing system can adapt to changes).  Raw network\n    \
    \   bandwidth seems to quadruple every 3 years or so.  However, it\n       seems\
    \ that there are some serious physics problems in going\n       faster than 40\
    \ Gbit/s (OC768); we should not expect raw network\n       link speed to grow\
    \ much beyond OC768.  On the other hand, for\n       economic reasons, large swathes\
    \ of the core of the Internet will\n       still operate at lower speeds, possibly\
    \ as slow as DS3.\n          Editors' Note: Technology is running ahead of imagination\
    \ and\n          higher speeds are already common.\n       Furthermore, in some\
    \ sections of the Internet, even lower speed\n       links are found.  Corporate\
    \ access links are often T1, or slower.\n       Low-speed radio links exist. \
    \ Intra-domain links may be T1 or\n       fractional-T1 (or slower).\n       Therefore,\
    \ the architecture must not make assumptions about the\n       bandwidth available.\n\
    \   3.  The speeds of high-speed RAMs (Static RAMs (SRAMs), used for\n       caches\
    \ and the like) are growing, though slowly.  Because of\n       their use in caches\
    \ and other very specific applications, these\n       RAMs tend to be small, a\
    \ few megabits, and the size of these RAMs\n       is not increasing very rapidly.\n\
    \       On the other hand, the speed of \"large\" memories (Dynamic RAMs\n   \
    \    (DRAMs)) is increasing even slower than that for the high-speed\n       RAMs.\
    \  This is because the development of these RAMs is driven by\n       the PC market,\
    \ where size is very important, and low speed can be\n       made up for by better\
    \ caches.\n       Memory access rates should not be expected to increase\n   \
    \    significantly.\n          Editors' Note: Various techniques have significantly\
    \ increased\n          memory bandwidth. 800 MHz is now possible, compared with\
    \ less\n          than 100 MHz in the year 2000.  This does not, however,\n  \
    \        contradict the next paragraph, but rather just extends the\n        \
    \  timescales somewhat.\n   The growth in resources available to any one router\
    \ will eventually\n   slow down.  It may even stop.  Even so, the network will\
    \ continue to\n   grow.  The routing and addressing architecture must continue\
    \ to scale\n   in even this extreme condition.  We cannot continue to add more\n\
    \   computing power to routers forever.  Other strategies must be\n   available.\
    \  Some possible strategies are hierarchy, abstraction, and\n   aggregation of\
    \ topology information.\n"
- title: 2.1.4.  Lots of Interconnectivity
  contents:
  - "2.1.4.  Lots of Interconnectivity\n   The new routing and addressing architecture\
    \ must be able to cope with\n   a high degree of interconnectivity in the Internet.\
    \  That is, there\n   are large numbers of alternate paths and routes among the\
    \ various\n   elements.  Mechanisms are required to prevent this interconnectivity\n\
    \   (and continued growth in interconnectivity) from causing tables,\n   compute\
    \ time, and routing protocol traffic to grow without bound.\n   The \"cost\" to\
    \ the routing system of an increase in complexity must be\n   limited in scope;\
    \ sections of the network that do not see, or do not\n   care about, the complexity\
    \ ought not pay the cost of that complexity.\n   Over the past several years,\
    \ the Internet has seen an increase in\n   interconnectivity.  Individual end\
    \ sites (companies, customers,\n   etc.), ISPs, exchange points, and so on, all\
    \ are connecting to more\n   \"other things\".  Companies multi-home to multiple\
    \ ISPs, ISPs peer\n   with more ISPs, and so on.  These connections are made for\
    \ many\n   reasons, such as getting more bandwidth, increased reliability and\n\
    \   availability, policy, and so on.  However, this increased\n   interconnectivity\
    \ has a price.  It leads to more scaling problems as\n   it increases the number\
    \ of AS paths in the networks.\n   Any new architecture must assume that the Internet\
    \ will become a\n   denser mesh.  It must not assume, nor can it dictate, certain\n\
    \   patterns or limits on how various elements of the network\n   interconnect.\n\
    \   Another facet of this requirement is that there may be multiple\n   valid,\
    \ loop-free paths available to a destination.  See Section 2.1.7\n   for a further\
    \ discussion.\n   We wryly note that one of the original design goals of IP was\
    \ to\n   support a large, heavily interconnected network, which would be\n   highly\
    \ survivable (such as in the face of a nuclear war).\n"
- title: 2.1.5.  Random Structure
  contents:
  - "2.1.5.  Random Structure\n   The routing and addressing architecture must not\
    \ place any\n   constraints on or make assumptions about the topology or\n   connectedness\
    \ of the elements comprising the Internet.  The routing\n   and addressing architecture\
    \ must not presume any particular network\n   structure.  The network does not\
    \ have a \"nice\" structure.  In the\n   past, we used to believe that there was\
    \ this nice \"backbone/tier-1/\n   tier-2/end-site\" sort of hierarchy.  This\
    \ is not so.  Therefore, any\n   new architecture must not presume any such structure.\n\
    \   Some have proposed that a geographic addressing scheme be used,\n   requiring\
    \ exchange points to be situated within each geographic\n   \"region\".  There\
    \ are many reasons why we believe this to be a bad\n   approach, but those arguments\
    \ are irrelevant.  The main issue is that\n   the routing architecture should\
    \ not presume a specific network\n   structure.\n"
- title: 2.1.6.  Multi-Homing
  contents:
  - "2.1.6.  Multi-Homing\n   The architecture must provide multi-homing for all elements\
    \ of the\n   Internet.  That is, multi-homing of hosts, subnetworks, end-sites,\n\
    \   \"low-level\" ISPs, and backbones (i.e., lots of redundant\n   interconnections)\
    \ must be supported.  Among the reasons to multi-home\n   are reliability, load\
    \ sharing, and performance tuning.\n   The term \"multi-homing\" may be interpreted\
    \ in its broadest sense --\n   one \"place\" has multiple connections or links\
    \ to another \"place\".\n   The architecture must not limit the number of alternate\
    \ paths to a\n   multi-homed site.\n   When multi-homing is used, it must be possible\
    \ to use one, some (more\n   than one but less than all), or all of the available\
    \ paths to the\n   multi-homed site.  The multi-homed site must have the ability\
    \ to\n   declare which path(s) are used and under what conditions (for\n   example,\
    \ one path may be declared \"primary\" and the other \"backup\"\n   and to be\
    \ used only when the primary fails).\n   A current problem in the Internet is\
    \ that multi-homing leads to undue\n   increases in the size of the BGP routing\
    \ tables.  The new\n   architecture must support multi-homing without undue routing\
    \ table\n   growth.\n"
- title: 2.1.7.  Multi-Path
  contents:
  - "2.1.7.  Multi-Path\n   As a corollary to multi-homing, the architecture must\
    \ allow for\n   multiple paths from a source to a destination to be active at\
    \ the\n   same time.  These paths need not have the same attributes.  Policies\n\
    \   are to be used to disseminate the attributes and to classify traffic\n   for\
    \ the different paths.\n   There must be a rich \"language\" for specifying the\
    \ rules for\n   classifying the traffic and assigning classes of traffic to different\n\
    \   paths (or prohibiting it from certain paths).  The rules should allow\n  \
    \ traffic to be classified based upon, at least, the following:\n   o  IPv6 FlowIDs,\n\
    \   o  Diffserv Code Point (DSCP) values,\n   o  source and/or destination prefixes,\
    \ or\n   o  random selections at some probability.\n   A mechanism is needed that\
    \ allows operators to plan and manage the\n   traffic load on the various paths.\
    \  To start, this mechanism can be\n   semi-automatic or even manual.  Eventually,\
    \ it ought to become fully\n   automatic.\n   When multi-path forwarding is used,\
    \ options must be available to\n   preserve packet ordering where appropriate\
    \ (such as for individual\n   TCP connections).\n   Please refer to Section 2.2.7\
    \ for a discussion of dynamic load-\n   balancing and management over multiple\
    \ paths.\n"
- title: 2.1.8.  Convergence
  contents:
  - "2.1.8.  Convergence\n   The speed of convergence (also called the \"stabilization\
    \ time\") is\n   the time it takes for a router's routing processes to reach a\
    \ new,\n   stable, \"solution\" (i.e., forwarding information base) after a change\n\
    \   someplace in the network.  In effect, what happens is that the output\n  \
    \ of the routing calculations stabilizes -- the Nth iteration of the\n   software\
    \ produces the same results as the N-1th iteration.\n   The speed of convergence\
    \ is generally considered to be a function of\n   the number of subnetworks in\
    \ the network and the amount of\n   connections between those networks.  As either\
    \ number grows, the time\n   it takes to converge increases.\n   In addition,\
    \ a change can \"ripple\" back and forth through the system.\n   One change can\
    \ go through the system, causing some other router to\n   change its advertised\
    \ connectivity, causing a new change to ripple\n   through.  These oscillations\
    \ can take a while to work their way out\n   of the network.  It is also possible\
    \ that these ripples never die\n   out.  In this situation, the routing and addressing\
    \ system is\n   unstable; it never converges.\n   Finally, it is more than likely\
    \ that the routers comprising the\n   Internet never converge simply because the\
    \ Internet is so large and\n   complex.  Assume it takes S seconds for the routers\
    \ to stabilize on a\n   solution for any one change to the network.  Also, assume\
    \ that\n   changes occur, on average, every C seconds.  Because of the size and\n\
    \   complexity of the Internet, C is now less than S.  Therefore, if a\n   change,\
    \ C1, occurs at time T, the routing system would stabilize at\n   time T+S, but\
    \ a new change, C2, will occur at time T+C, which is\n   before T+S.  The system\
    \ will start processing the new change before\n   it's done with the old.\n  \
    \ This is not to say that all routers are constantly processing\n   changes. \
    \ The effects of changes are like ripples in a pond.  They\n   spread outward\
    \ from where they occur.  Some routers will be\n   processing just C1, others\
    \ C2, others both C1 and C2, and others\n   neither.\n   We have two separate\
    \ scopes over which we can set requirements with\n   respect to convergence:\n\
    \   1.  Single Change: In this requirement, a single change of any type\n    \
    \   (link addition or deletion, router failure or restart, etc.) is\n       introduced\
    \ into a stabilized system.  No additional changes are\n       introduced.  The\
    \ system must re-stabilize within some measure of\n       bounded time.  This\
    \ requirement is a fairly abstract one as it\n       would be impossible to test\
    \ in a real network.  Definition of the\n       time constraints remains an open\
    \ research issue.\n   2.  System-Wide: Defining a single target for maximum convergence\n\
    \       time for the real Internet is absurd.  As we mentioned earlier,\n    \
    \   the Internet is large enough and diverse enough so that it is\n       quite\
    \ likely that new changes are introduced somewhere before the\n       system fully\
    \ digests old ones.\n   So, the first requirement here is that there must be mechanisms\
    \ to\n   limit the scope of any one change's visibility and effects.  The\n  \
    \ number of routers that have to perform calculations in response to a\n   change\
    \ is kept small, as is the settling time.\n   The second requirement is based\
    \ on the following assumptions:\n   -  the scope of a change's visibility and\
    \ impact can be limited.\n      That is, routers within that scope know of the\
    \ change and\n      recalculate their tables based on the change.  Routers outside\
    \ of\n      the scope don't see it at all.\n   -  Within any scope, S, network\
    \ changes are constantly occurring and\n      the average inter-change interval\
    \ is Tc seconds.\n   -  There are Rs routers within scope S.\n   -  A subset of\
    \ the destinations known to the routers in S, Ds, are\n      impacted by a given\
    \ change.\n   -  We can state that for Z% of the changes, within Y% of Tc seconds\n\
    \      after a change, C, X% of the Rs routers have their routes to Ds\n     \
    \ settled to a useful answer (useful meaning that packets can get to\n      Ds,\
    \ though perhaps not by the optimal path -- this allows some\n      \"hunting\"\
    \ for the optimal solution).\n      X, Y, and Z are yet to be defined.  Their\
    \ definition remains a\n      research issue.\n   This requirement implies that\
    \ the scopes can be kept relatively small\n   in order to minimize Rs and maximize\
    \ Tc.\n   The growth rate of the convergence time must not be related to the\n\
    \   growth rate of the Internet as a whole.  This implies that the\n   convergence\
    \ time either:\n   1.  not be a function of basic network elements (such as prefixes\
    \ and\n       links/paths), and/or\n   2.  that the Internet be continuously divisible\
    \ into chunks that\n       limit the scope and effect of a change, thereby limiting\
    \ the\n       number of routers, prefixes, links, and so on, involved in the\n\
    \       new calculations.\n"
- title: 2.1.9.  Routing System Security
  contents:
  - "2.1.9.  Routing System Security\n   The security of the Internet's routing system\
    \ is paramount.  If the\n   routing system is compromised or attacked, the entire\
    \ Internet can\n   fail.  This is unacceptable.  Any new architecture must be\
    \ secure.\n   Architectures by themselves are not secure.  It is the implementation\n\
    \   of an architecture, its protocols, algorithms, and data structures\n   that\
    \ are secure.  These requirements apply primarily to the\n   implementation. \
    \ The architecture must provide the elements that the\n   implementation needs\
    \ to meet these security requirements.  Also, the\n   architecture must not prevent\
    \ these security requirements from being\n   met.\n   Security means different\
    \ things to different people.  In order for\n   this requirement to be useful,\
    \ we must define what we mean by\n   security.  We do this by identifying the\
    \ attackers and threats we\n   wish to protect against.  They are:\n   Masquerading\n\
    \         The system, including its protocols, must be secure against\n      \
    \   intruders adopting the identity of other known, trusted\n         elements\
    \ of the routing system and then using that position of\n         trust for carrying\
    \ out other attacks.  Protocols must use\n         cryptographically strong authentication.\n\
    \   Denial-of-Service (DoS) Attacks\n         The architecture and protocols should\
    \ be secure against DoS\n         attacks directed at the routers.\n         The\
    \ new architecture and protocols should provide as much\n         information\
    \ as it can to allow administrators to track down\n         sources of DoS and\
    \ Distributed DOS (DDoS) attacks.\n   No Bad Data\n         Any new architecture\
    \ and protocols must provide protection\n         against the introduction of\
    \ bad, erroneous, or misleading data\n         by attackers.  Of particular importance,\
    \ an attacker must not\n         be able to redirect traffic flows, with the intent\
    \ of:\n         o  directing legitimate traffic away from a target, causing a\n\
    \            denial-of-service attack by preventing legitimate data from\n   \
    \         reaching its destination,\n         o  directing additional traffic\
    \ (going to other destinations\n            that are \"innocent bystanders\")\
    \ to a target, causing the\n            target to be overloaded, or\n        \
    \ o  directing traffic addressed to the target to a place where\n            the\
    \ attacker can copy, snoop, alter, or otherwise affect the\n            traffic.\n\
    \   Topology Hiding\n         Any new architecture and protocols must provide\
    \ mechanisms to\n         allow network owners to hide the details of their internal\n\
    \         topologies, while maintaining the desired levels of service\n      \
    \   connectivity and reachability.\n   Privacy\n         By \"privacy\" we mean\
    \ privacy of the routing protocol exchanges\n         between routers.\n     \
    \    When the routers are on point-to-point links, with routers at\n         each\
    \ end, there may not be any need to encrypt the routing\n         protocol traffic\
    \ as the possibility of a third party\n         intercepting the traffic is limited,\
    \ though not impossible.  We\n         do believe, however, that it is important\
    \ to have the ability\n         to protect routing protocol traffic in two cases:\n\
    \         1.  When the routers are on a shared network, it is possible\n     \
    \        that there are hosts on the network that have been\n             compromised.\
    \  These hosts could surreptitiously monitor the\n             protocol traffic.\n\
    \         2.  When two routers are exchanging information \"at a distance\"\n\
    \             (over intervening routers and, possibly, across\n             administrative\
    \ domain boundaries).  In this case, the\n             security of the intervening\
    \ routers, links, and so on,\n             cannot be assured.  Thus, the ability\
    \ to encrypt this\n             traffic is important.\n         Therefore, we\
    \ believe that the option to encrypt routing\n         protocol traffic is required.\n\
    \   Data Consistency\n         A router should be able to detect and recover from\
    \ any data\n         that is received from other routers that is inconsistent.\
    \  That\n         is, it must not be possible for data from multiple routers,\n\
    \         none of which is malicious, to \"break\" another router.\n   Where security\
    \ mechanisms are provided, they must use methods that\n   are considered to be\
    \ cryptographically secure (e.g., using\n   cryptographically strong encryption\
    \ and signatures -- no cleartext\n   passwords!).\n   Use of security features\
    \ should not be optional (except as required\n   above).  This may be \"social\
    \ engineering\" on our part, but we believe\n   it to be necessary.  If a security\
    \ feature is optional, the\n   implementation of the feature must default to the\
    \ \"secure\" setting.\n"
- title: 2.1.10.  End Host Security
  contents:
  - "2.1.10.  End Host Security\n   The architecture must not prevent individual host-to-host\n\
    \   communications sessions from being secured (i.e., it cannot interfere\n  \
    \ with things like IPsec).\n"
- title: 2.1.11.  Rich Policy
  contents:
  - "2.1.11.  Rich Policy\n   Before setting out policy requirements, we need to define\
    \ the term.\n   Like \"security\", \"policy\" means different things to different\
    \ people.\n   For our purposes, \"policy\" is the set of administrative influences\n\
    \   that alter the path determination and next-hop selection procedures\n   of\
    \ the routing software.\n   The main motivators for influencing path and next-hop\
    \ selection seem\n   to be transit rules, business decisions, and load management.\n\
    \   The new architecture must support rich policy mechanisms.\n   Furthermore,\
    \ the policy definition and dissemination mechanisms\n   should be separated from\
    \ the network topology and connectivity\n   dissemination mechanisms.  Policy\
    \ provides input to and controls the\n   generation of the forwarding table and\
    \ the abstraction, filtering,\n   aggregation, and dissemination of topology information.\n\
    \   Note that if the architecture is properly divided into subsystems,\n   then\
    \ at a later time, new policy subsystems that include new features\n   and capabilities\
    \ could be developed and installed as needed.\n   We divide the general area of\
    \ policy into two sub-categories: routing\n   information and traffic control.\
    \  Routing Information Policies\n   control what routing information is disseminated\
    \ or accepted, how it\n   is disseminated, and how routers determine paths and\
    \ next-hops from\n   the received information.  Traffic Control Policies determine\
    \ how\n   traffic is classified and assigned to routes.\n"
- title: 2.1.11.1.  Routing Information Policies
  contents:
  - "2.1.11.1.  Routing Information Policies\n   There must be mechanisms to allow\
    \ network administrators, operators,\n   and designers to control receipt and\
    \ dissemination of routing\n   information.  These controls include, but are not\
    \ limited to:\n   -  Selecting to which other routers routing information will\
    \ be\n      transmitted.\n   -  Specifying the \"granularity\" and type of transmitted\
    \ information.\n      The length of IPv4 prefixes is an example of granularity.\n\
    \   -  Selection and filtering of topology and service information that\n    \
    \  is transmitted.  This gives different \"views\" of internal\n      structure\
    \ and topology to different peers.\n   -  Selecting the level of security and\
    \ authenticity for transmitted\n      information.\n   -  Being able to cause\
    \ the level of detail that is visible for some\n      portion of the network to\
    \ reduce the farther you get from that\n      part of the network.\n   -  Selecting\
    \ from whom routing information will be accepted.  This\n      control should\
    \ be \"provisional\" in the sense of \"accept routes\n      from \"foo\" only\
    \ if there are no others available\".\n   -  Accepting or rejecting routing information\
    \ based on the path the\n      information traveled (using the current system\
    \ as an example, this\n      would be filtering routes based on an AS appearing\
    \ anywhere in the\n      AS path).  This control should be \"use only if there\
    \ are no other\n      paths available\".\n   -  Selecting the desired level of\
    \ granularity for received routing\n      information (this would include, but\
    \ is not limited to, things\n      similar in nature to the prefix-length filters\
    \ widely used in the\n      current routing and addressing system).\n   -  Selecting\
    \ the level of security and authenticity of received\n      information in order\
    \ for that information to be accepted.\n   -  Determining the treatment of received\
    \ routing information based on\n      attributes supplied with the information.\n\
    \   -  Applying attributes to routing information that is to be\n      transmitted\
    \ and then determining treatment of information (e.g.,\n      sending it \"here\"\
    \ but not \"there\") based on those tags.\n   -  Selection and filtering of topology\
    \ and service information that\n      is received.\n"
- title: 2.1.11.2.  Traffic Control Policies
  contents:
  - "2.1.11.2.  Traffic Control Policies\n   The architecture should provide mechanisms\
    \ that allow network\n   operators to manage and control the flow of traffic.\
    \  The traffic\n   controls should include, but are not limited to:\n   -  The\
    \ ability to detect and eliminate congestion points in the\n      network (by\
    \ redirecting traffic around those points).\n   -  The ability to develop multiple\
    \ paths through the network with\n      different attributes and then assign traffic\
    \ to those paths based\n      on some discriminators within the packets (discriminators\
    \ include,\n      but are not limited to, IP addresses or prefixes, IPv6 flow\
    \ ID,\n      DSCP values, and MPLS labels).\n   -  The ability to find and use\
    \ multiple, equivalent paths through the\n      network (i.e., they would have\
    \ the \"same\" attributes) and allocate\n      traffic across the paths.\n   -\
    \  The ability to accept or refuse traffic based on some traffic\n      classification\
    \ (providing, in effect, transit policies).\n      Traffic classification must\
    \ at least include the source and\n      destination IP addresses (prefixes) and\
    \ the DSCP value.  Other\n      fields may be supported, such as:\n      *  Protocol\
    \ and port-based functions,\n      *  DSCP/QoS (Quality of Service) tuple (such\
    \ as ports),\n      *  Per-host operations (i.e., /32 s for IPv4 and /128 s for\
    \ IPv6),\n         and\n      *  Traffic matrices (e.g., traffic from prefix X\
    \ and to prefix Y).\n"
- title: 2.1.12.  Incremental Deployment
  contents:
  - "2.1.12.  Incremental Deployment\n   The reality of the Internet is that there\
    \ can be no Internet-wide\n   cutover from one architecture and protocol to another.\
    \  This means\n   that any new architecture and protocol must be incrementally\n\
    \   deployable; ISPs must be able to set up small sections of the new\n   architecture,\
    \ check it out, and then slowly grow the sections.\n   Eventually, these sections\
    \ will \"touch\" and \"squeeze out\" the old\n   architecture.\n   The protocols\
    \ that implement the architecture must be able to\n   interoperate at \"production\
    \ levels\" with currently existing routing\n   protocols.  Furthermore, the protocol\
    \ specifications must define how\n   the interoperability is done.\n   We also\
    \ believe that sections of the Internet will never convert over\n   to the new\
    \ architecture.  Thus, it is important that the new\n   architecture and its protocols\
    \ be able to interoperate with \"old\n   architecture\" regions of the network\
    \ indefinitely.\n   The architecture's addressing system must not force existing\
    \ address\n   allocations to be redone: no renumbering!\n"
- title: 2.1.13.  Mobility
  contents:
  - "2.1.13.  Mobility\n   There are two kinds of mobility: host mobility and network\
    \ mobility.\n   Host mobility is when an individual host moves from where it was\
    \ to\n   where it is.  Network mobility is when an entire network (or\n   subnetwork)\
    \ moves.\n   The architecture must support network-level mobility.  Please refer\n\
    \   to Section 2.2.9 for a discussion of host mobility.\n      Editors' Note:\
    \ Since the time of this work, the Network Mobility\n      (NEMO) extensions to\
    \ Mobile-IP [RFC3963] to accommodate mobile\n      networks have been developed.\n"
- title: 2.1.14.  Address Portability
  contents:
  - "2.1.14.  Address Portability\n   One of the big \"hot items\" in the current\
    \ Internet political climate\n   is portability of IP addresses (both v4 and v6).\
    \  The short\n   explanation is that people do not like to renumber when changing\n\
    \   connection point or provider and do not trust automated renumbering\n   tools.\n\
    \   The architecture must provide complete address portability.\n"
- title: 2.1.15.  Multi-Protocol
  contents:
  - "2.1.15.  Multi-Protocol\n   The Internet is expected to be \"multi-protocol\"\
    \ for at least the next\n   several years.  IPv4 and IPv6 will co-exist in many\
    \ different ways\n   during a transition period.  The architecture must be able\
    \ to handle\n   both IPv4 and IPv6 addresses.  Furthermore, protocols that supplant\n\
    \   IPv4 and IPv6 may be developed and deployed during the lifetime of\n   the\
    \ architecture.  The architecture must be flexible and extensible\n   enough to\
    \ handle new protocols as they arise.\n   Furthermore, the architecture must not\
    \ assume any given relationships\n   between a topological element's IPv4 address\
    \ and its IPv6 address.\n   The architecture must not assume that all topological\
    \ elements have\n   IPv4 addresses/prefixes, nor can it assume that they have\
    \ IPv6\n   addresses/prefixes.\n   The architecture should allow different paths\
    \ to the same destination\n   to be used for different protocols, even if all\
    \ paths can carry all\n   protocols.\n   In addition to the addressing technology,\
    \ the architecture need not\n   be restricted to only packet-based multiplexing/demultiplexing\n\
    \   technology (such as IP); support for other multiplexing/\n   demultiplexing\
    \ technologies may be added.\n"
- title: 2.1.16.  Abstraction
  contents:
  - "2.1.16.  Abstraction\n   The architecture must provide mechanisms for network\
    \ designers and\n   operators to:\n   o  Group elements together for administrative\
    \ control purposes,\n   o  Hide the internal structure and topology of those groupings\
    \ for\n      administrative and security reasons,\n   o  Limit the amount of topology\
    \ information that is exported from the\n      groupings in order to control the\
    \ load placed on external routers,\n   o  Define rules for traffic transiting\
    \ or terminating in the\n      grouping.\n   The architecture must allow the current\
    \ Autonomous System structure\n   to be mapped into any new abstraction schemes.\n\
    \   Mapping mechanisms, algorithms, and techniques must be specified.\n"
- title: 2.1.17.  Simplicity
  contents:
  - "2.1.17.  Simplicity\n   The architecture must be simple enough so that someone\
    \ who is\n   extremely knowledgeable in routing and who is skilled at creating\n\
    \   straightforward and simple explanations can explain all the important\n  \
    \ concepts in less than an hour.\n   This criterion has been chosen since developing\
    \ an objective measure\n   of complexity for an architecture can be very difficult\
    \ and is out of\n   scope for this document.\n   The requirement is that the routing\
    \ architecture be kept as simple as\n   possible.  This requires careful evaluation\
    \ of possible features and\n   functions with a merciless weeding out of those\
    \ that \"might be nice\"\n   but are not necessary.\n   By keeping the architecture\
    \ simple, the protocols and software used\n   to implement the architecture are\
    \ simpler.  This simplicity in turn\n   leads to:\n   1.  Faster implementation\
    \ of the protocols.  If there are fewer bells\n       and whistles, then there\
    \ are fewer things that need to be\n       implemented.\n   2.  More reliable\
    \ implementations.  With fewer components, there is\n       less code, reducing\
    \ bug counts, and fewer interactions between\n       components that could lead\
    \ to unforeseen and incorrect behavior.\n"
- title: 2.1.18.  Robustness
  contents:
  - "2.1.18.  Robustness\n   The architecture, and the protocols implementing it,\
    \ should be\n   robust.  Robustness comes in many different flavors.  Some\n \
    \  considerations with regard to robustness include (but are not limited\n   to):\n\
    \   o  Continued correct operation in the face of:\n      *  Defective (even malicious)\
    \ trusted routers.\n      *  Network failures.  Whenever possible, valid alternate\
    \ paths are\n         to be found and used.\n   o  Failures must be localized.\
    \  That is, the architecture must limit\n      the \"spread\" of any adverse effects\
    \ of a misconfiguration or\n      failure.  Badness must not spread.\n   Of course,\
    \ the general robustness principle of being liberal in\n   what's accepted and\
    \ conservative in what's sent must also be applied.\n      Original Editor's Note:\
    \ Some of the contributors to this section\n      have argued that robustness\
    \ is an aspect of security.  I have\n      exercised editor's discretion by making\
    \ it a separate section.\n      The reason for this is that to too many people\
    \ \"security\" means\n      \"protection from break-ins\" and \"authenticating\
    \ and encrypting\n      data\".  This requirement goes beyond those views.\n"
- title: 2.1.19.  Media Independence
  contents:
  - "2.1.19.  Media Independence\n   While it is an article of faith that IP operates\
    \ over a wide variety\n   of media (such as Ethernet, X.25, ATM, and so on), IP\
    \ routing must\n   take an agnostic view toward any \"routing\" or \"topology\"\
    \ services\n   that are offered by the medium over which IP is operating.  That\
    \ is,\n   the new architecture must not be designed to integrate with any\n  \
    \ media-specific topology management or routing scheme.\n   The routing architecture\
    \ must assume, and must work over, the\n   simplest possible media.\n   The routing\
    \ and addressing architecture can certainly make use of\n   lower-layer information\
    \ and services, when and where available, and\n   to the extent that IP routing\
    \ wishes.\n"
- title: 2.1.20.  Stand-Alone
  contents:
  - "2.1.20.  Stand-Alone\n   The routing architecture and protocols must not rely\
    \ on other\n   components of the Internet (such as DNS) for their correct operation.\n\
    \   Routing is the fundamental process by which data \"finds its way\n   around\
    \ the Internet\" and most, if not all, of those other components\n   rely on routing\
    \ to properly forward their data.  Thus, routing cannot\n   rely on any Internet\
    \ systems, services, or capabilities that in turn\n   rely on routing.  If it\
    \ did, a dependency loop would result.\n"
- title: 2.1.21.  Safety of Configuration
  contents:
  - "2.1.21.  Safety of Configuration\n   The architecture, protocols, and standard\
    \ implementation defaults\n   must be such that a router installed \"out of the\
    \ box\" with no\n   configuration, etc., by the operators will not cause \"bad\
    \ things\" to\n   happen to the rest of the routing system (e.g., no dial-up customers\n\
    \   advertising routes to 18/8!).\n"
- title: 2.1.22.  Renumbering
  contents:
  - "2.1.22.  Renumbering\n   The routing system must allow topological entities to\
    \ be renumbered.\n"
- title: 2.1.23.  Multi-Prefix
  contents:
  - "2.1.23.  Multi-Prefix\n   The architecture must allow topological entities to\
    \ have multiple\n   prefixes (or the equivalent under the new architecture).\n"
- title: 2.1.24.  Cooperative Anarchy
  contents:
  - "2.1.24.  Cooperative Anarchy\n   As RFC 1726[RFC1726] states:\n      A major\
    \ contributor to the Internet's success is the fact that\n      there is no single,\
    \ centralized, point of control or promulgator\n      of policy for the entire\
    \ network.  This allows individual\n      constituents of the network to tailor\
    \ their own networks,\n      environments, and policies to suit their own needs.\
    \  The\n      individual constituents must cooperate only to the degree\n    \
    \  necessary to ensure that they interoperate.\n   This decentralization, called\
    \ \"cooperative anarchy\", is still a key\n   feature of the Internet today. \
    \ The new routing architecture must\n   retain this feature.  There can be no\
    \ centralized point of control or\n   promulgator of policy for the entire Internet.\n"
- title: 2.1.25.  Network-Layer Protocols and Forwarding Model
  contents:
  - "2.1.25.  Network-Layer Protocols and Forwarding Model\n   For the purposes of\
    \ backward compatibility, any new routing and\n   addressing architecture and\
    \ protocols must work with IPv4 and IPv6\n   using the traditional \"hop-by-hop\"\
    \ forwarding and packet-based\n   multiplex/demultiplex models.  However, the\
    \ architecture need not be\n   restricted to these models.  Additional forwarding\
    \ and multiplex/\n   demultiplex models may be added.\n"
- title: 2.1.26.  Routing Algorithm
  contents:
  - "2.1.26.  Routing Algorithm\n   The architecture should not require a particular\
    \ routing algorithm\n   family.  That is to say, the architecture should be agnostic\
    \ about\n   link-state, distance-vector, or path-vector routing algorithms.\n"
- title: 2.1.27.  Positive Benefit
  contents:
  - "2.1.27.  Positive Benefit\n   Finally, the architecture must show benefits in\
    \ terms of increased\n   stability, decreased operational costs, and increased\
    \ functionality\n   and lifetime, over the current schemes.  This benefit must\
    \ remain\n   even after the inevitable costs of developing and debugging the new\n\
    \   protocols, enduring the inevitable instabilities as things get shaken\n  \
    \ out, and so on.\n"
- title: 2.1.28.  Administrative Entities and the IGP/EGP Split
  contents:
  - "2.1.28.  Administrative Entities and the IGP/EGP Split\n   We explicitly recognize\
    \ that the Internet consists of resources under\n   control of multiple administrative\
    \ entities.  Each entity must be\n   able to manage its own portion of the Internet\
    \ as it sees fit.\n   Moreover, the constraints that can be imposed on routing\
    \ and\n   addressing on the portion of the Internet under the control of one\n\
    \   administration may not be feasibly extended to cover multiple\n   administrations.\
    \  Therefore, we recognize a natural and inevitable\n   split between routing\
    \ and addressing that is under a single\n   administrative control and routing\
    \ and addressing that involves\n   multiple administrative entities.  Moreover,\
    \ while there may be\n   multiple administrative authorities, the administrative\
    \ authority\n   boundaries may be complex and overlapping, rather than being a\
    \ strict\n   hierarchy.\n   Furthermore, there may be multiple levels of administration,\
    \ each\n   with its own level of policy and control.  For example, a large\n \
    \  network might have \"continental-level\" administrations covering its\n   European\
    \ and Asian operations, respectively.  There would also be\n   that network's\
    \ \"inter-continental\" administration covering the\n   Europe-to-Asia links.\
    \  Finally, there would be the \"Internet\" level\n   in the administrative structure\
    \ (analogous to the \"exterior\" concept\n   in the current routing architecture).\n\
    \   Thus, we believe that the administrative structure of the Internet\n   must\
    \ be extensible to many levels (more than the two provided by the\n   current\
    \ IGP/EGP split).  The interior/exterior property is not\n   absolute.  The interior/exterior\
    \ property of any point in the network\n   is relative; a point on the network\
    \ is interior with respect to some\n   points on the network and exterior with\
    \ respect to others.\n   Administrative entities may not trust each other; some\
    \ may be almost\n   actively hostile toward each other.  The architecture must\n\
    \   accommodate these models.  Furthermore, the architecture must not\n   require\
    \ any particular level of trust among administrative entities.\n"
- title: 2.2.  Non-Requirements
  contents:
  - "2.2.  Non-Requirements\n   The following are not required or are non-goals. \
    \ This should not be\n   taken to mean that these issues must not be addressed\
    \ by a new\n   architecture.  Rather, addressing these issues or not is purely\
    \ an\n   optional matter for the architects.\n"
- title: 2.2.1.  Forwarding Table Optimization
  contents:
  - "2.2.1.  Forwarding Table Optimization\n   We believe that it is not necessary\
    \ for the architecture to minimize\n   the size of the forwarding tables (FIBs).\
    \  Current memory sizes,\n   speeds, and prices, along with processor and Application-specific\n\
    \   Integrated Circuit (ASIC) capabilities allow forwarding tables to be\n   very\
    \ large, O(E6), and allow fast (100 M lookups/second) tables to be\n   built with\
    \ little difficulty.\n"
- title: 2.2.2.  Traffic Engineering
  contents:
  - "2.2.2.  Traffic Engineering\n   \"Traffic engineering\" is one of those terms\
    \ that has become terribly\n   overloaded.  If one asks N people what traffic\
    \ engineering is, one\n   would get something like N! disjoint answers.  Therefore,\
    \ we elect\n   not to require \"traffic engineering\", per se.  Instead, we have\n\
    \   endeavored to determine what the ultimate intent is when operators\n   \"\
    traffic engineer\" their networks and then make those capabilities an\n   inherent\
    \ part of the system.\n"
- title: 2.2.3.  Multicast
  contents:
  - "2.2.3.  Multicast\n   The new architecture is not designed explicitly to be an\
    \ inter-domain\n   multicast routing architecture.  However, given the notable\
    \ lack of a\n   viable, robust, and widely deployed inter-domain multicast routing\n\
    \   architecture, the architecture should not hinder the development and\n   deployment\
    \ of inter-domain multicast routing without an adverse\n   effect on meeting the\
    \ other requirements.\n   We do note however that one respected network sage [Clark91]\
    \ has said\n   (roughly):\n      When you see a bunch of engineers standing around\
    \ congratulating\n      themselves for solving some particularly ugly problem\
    \ in\n      networking, go up to them, whisper \"multicast\", jump back, and\n\
    \      watch the fun begin...\n"
- title: 2.2.4.  Quality of Service (QoS)
  contents:
  - "2.2.4.  Quality of Service (QoS)\n   The architecture concerns itself primarily\
    \ with disseminating network\n   topology information so that routers may select\
    \ paths to destinations\n   and build appropriate forwarding tables.  Quality\
    \ of Service (QoS) is\n   not a part of this function and we make no requirements\
    \ with respect\n   to QoS.\n   However, QoS is an area of great and evolving interest.\
    \  It is\n   reasonable to expect that in the not too distant future,\n   sophisticated\
    \ QoS facilities will be deployed in the Internet.  Any\n   new architecture and\
    \ protocols should be developed with an eye toward\n   these future evolutions.\
    \  Extensibility mechanisms, allowing future\n   QoS routing and signaling protocols\
    \ to \"piggy-back\" on top of the\n   basic routing system are desired.\n   We\
    \ do require the ability to assign attributes to entities and then\n   do path\
    \ generation and selection based on those attributes.  Some may\n   call this\
    \ QoS.\n"
- title: 2.2.5.  IP Prefix Aggregation
  contents:
  - "2.2.5.  IP Prefix Aggregation\n   There is no specific requirement that CIDR-style\
    \ (Classless Inter-\n   Domain Routing) IP prefix aggregation be done by the new\n\
    \   architecture.  Address allocation policies, societal pressure, and\n   the\
    \ random growth and structure of the Internet have all conspired to\n   make prefix\
    \ aggregation extraordinarily difficult, if not impossible.\n   This means that\
    \ large numbers of prefixes will be sloshing about in\n   the routing system and\
    \ that forwarding tables will grow quite big.\n   This is a cost that we believe\
    \ must be borne.\n   Nothing in this non-requirement should be interpreted as\
    \ saying that\n   prefix aggregation is explicitly prohibited.  CIDR-style IP\
    \ prefix\n   aggregation might be used as a mechanism to meet other requirements,\n\
    \   such as scaling.\n"
- title: 2.2.6.  Perfect Safety
  contents:
  - "2.2.6.  Perfect Safety\n   Making the system impossible to misconfigure is, we\
    \ believe, not\n   required.  The checking, constraints, and controls necessary\
    \ to\n   achieve this could, we believe, prevent operators from performing\n \
    \  necessary tasks in the face of unforeseen circumstances.\n   However, safety\
    \ is always a \"good thing\", and any results from\n   research in this area should\
    \ certainly be taken into consideration\n   and, where practical, incorporated\
    \ into the new routing architecture.\n"
- title: 2.2.7.  Dynamic Load Balancing
  contents:
  - "2.2.7.  Dynamic Load Balancing\n   History has shown that using the routing system\
    \ to perform highly\n   dynamic load balancing among multiple more-or-less-equal\
    \ paths\n   usually ends up causing all kinds of instability, etc., in the\n \
    \  network.  Thus, we do not require such a capability.\n   However, this is an\
    \ area that is ripe for additional research, and\n   some believe that the capability\
    \ will be necessary in the future.\n   Thus, the architecture and protocols should\
    \ be \"malleable\" enough to\n   allow development and deployment of dynamic load-balancing\n\
    \   capabilities, should we ever figure out how to do it.\n"
- title: 2.2.8.  Renumbering of Hosts and Routers
  contents:
  - "2.2.8.  Renumbering of Hosts and Routers\n   We believe that the routing system\
    \ is not required to \"do\n   renumbering\" of hosts and routers.  That's an IP\
    \ issue.\n   Of course, the routing and addressing architecture must be able to\n\
    \   deal with renumbering when it happens.\n"
- title: 2.2.9.  Host Mobility
  contents:
  - "2.2.9.  Host Mobility\n   In the Internet architecture, host mobility is handled\
    \ on a per-host\n   basis by a dedicated, Mobile-IP protocol [RFC3344].  Traffic\
    \ destined\n   for a mobile-host is explicitly forwarded by dedicated relay agents.\n\
    \   Mobile-IP [RFC3344] adequately solves the host-mobility problem and\n   we\
    \ do not see a need for any additional requirements in this area.\n   Of course,\
    \ the new architecture must not impede or conflict with\n   Mobile-IP.\n"
- title: 2.2.10.  Backward Compatibility
  contents:
  - "2.2.10.  Backward Compatibility\n   For the purposes of development of the architecture,\
    \ we assume that\n   there is a \"clean slate\".  Unless specified in Section\
    \ 2.1, there are\n   no explicit requirements that elements, concepts, or mechanisms\
    \ of\n   the current routing architecture be carried forward into the new one.\n"
- title: 3.  Requirements from Group B
  contents:
  - "3.  Requirements from Group B\n   The following is the result of the work done\
    \ by Sub-Group B of the\n   IRTF RRG in 2001-2002.  It was originally released\
    \ under the title:\n   \"Future Domain Routing Requirements\" and was edited by\
    \ Avri Doria and\n   Elwyn Davies.\n"
- title: 3.1.  Group B - Future Domain Routing Requirements
  contents:
  - "3.1.  Group B - Future Domain Routing Requirements\n   It is generally accepted\
    \ that there are major shortcomings in the\n   inter-domain routing of the Internet\
    \ today and that these may result\n   in meltdown within an unspecified period\
    \ of time.  Remedying these\n   shortcomings will require extensive research to\
    \ tie down the exact\n   failure modes that lead to these shortcomings and identify\
    \ the best\n   techniques to remedy the situation.\n      Reviewer's Note: Even\
    \ in 2001, there was a wide difference of\n      opinion across the community\
    \ regarding the shortcomings of inter-\n      domain routing.  In the years between\
    \ writing and publication,\n      further analysis, changes in operational practice,\
    \ alterations to\n      the demands made on inter-domain routing, modifications\
    \ made to\n      BGP, and a recognition of the difficulty of finding a replacement\n\
    \      may have altered the views of some members of the community.\n   Changes\
    \ in the nature and quality of the services that users want\n   from the Internet\
    \ are difficult to provide within the current\n   framework, as they impose requirements\
    \ never foreseen by the original\n   architects of the Internet routing system.\n\
    \   The kind of radical changes that have to be accommodated are\n   epitomized\
    \ by the advent of IPv6 and the application of IP mechanisms\n   to private commercial\
    \ networks that offer specific service guarantees\n   beyond the best-effort services\
    \ of the public Internet.  Major\n   changes to the inter-domain routing system\
    \ are inevitable to provide\n   an efficient underpinning for the radically changed\
    \ and increasingly\n   commercially-based networks that rely on the IP protocol\
    \ suite.\n"
- title: 3.2.  Underlying Principles
  contents:
  - "3.2.  Underlying Principles\n   Although inter-domain routing is seen as the\
    \ major source of\n   problems, the interactions with intra-domain routing, and\
    \ the\n   constraints that confining changes to the inter-domain arena would\n\
    \   impose, mean that we should consider the whole area of routing as an\n   integrated\
    \ system.  This is done for two reasons:\n   -  Requirements should not presuppose\
    \ the solution.  A continued\n      commitment to the current definitions and\
    \ split between inter-\n      domain and intra-domain routing would constitute\
    \ such a\n      presupposition.  Therefore, this part of the document uses the\n\
    \      name Future Domain Routing (FDR).\n   -  It is necessary to understand\
    \ the degree to which inter-domain and\n      intra-domain routing are related\
    \ within today's routing\n      architecture.\n   We are aware that using the\
    \ term \"domain routing\" is already fraught\n   with danger because of possible\
    \ misinterpretation due to prior usage.\n   The meaning of \"domain routing\"\
    \ will be developed implicitly\n   throughout the document, but a little advance\
    \ explicit definition of\n   the word \"domain\" is required, as well as some\
    \ explanation on the\n   scope of \"routing\".\n   This document uses \"domain\"\
    \ in a very broad sense, to mean any\n   collection of systems or domains that\
    \ come under a common authority\n   that determines the attributes defining, and\
    \ the policies\n   controlling, that collection.  The use of \"domain\" in this\
    \ manner is\n   very similar to the concept of region that was put forth by John\n\
    \   Wroclawski in his Metanet model [Wroclawski95].  The idea includes\n   the\
    \ notion that certain attributes will characterize the behavior of\n   the systems\
    \ within a domain and that there will be borders between\n   domains.  The idea\
    \ of domain presented here does not presuppose that\n   two domains will have\
    \ the same behavior.  Nor does it presuppose\n   anything about the hierarchical\
    \ nature of domains.  Finally, it does\n   not place restrictions on the nature\
    \ of the attributes that might be\n   used to determine membership in a domain.\
    \  Since today's routing\n   domains are an example of the concept of domains\
    \ in this document,\n   there has been no attempt to create a new term.\n   Current\
    \ practice in routing-system design stresses the need to\n   separate the concerns\
    \ of the control plane and the forwarding plane\n   in a router.  This document\
    \ will follow this practice, but we still\n   use the term \"routing\" as a global\
    \ portmanteau to cover all aspects\n   of the system.  Specifically, however,\
    \ \"routing\" will be used to mean\n   the process of discovering, interpreting,\
    \ and distributing\n   information about the logical and topological structure\
    \ of the\n   network.\n"
- title: 3.2.1.  Inter-Domain and Intra-Domain
  contents:
  - "3.2.1.  Inter-Domain and Intra-Domain\n   Throughout this section, the terms\
    \ \"intra-domain\" and \"inter-domain\"\n   will be used.  These should be understood\
    \ as relative terms.  In all\n   cases of domains, there will be a set of network\
    \ systems that are\n   within that domain; routing between these systems will\
    \ be termed\n   \"intra-domain\".  In some cases there will be routing between\
    \ domains,\n   which will be termed \"inter-domain\".  It is possible that the\
    \ routing\n   exchange between two network systems can be viewed as intra-domain\n\
    \   from one perspective and as inter-domain from another perspective.\n"
- title: 3.2.2.  Influences on a Changing Network
  contents:
  - "3.2.2.  Influences on a Changing Network\n   The development of the Internet\
    \ is likely to be driven by a number of\n   changes that will affect the organization\
    \ and the usage of the\n   network, including:\n   -  Ongoing evolution of the\
    \ commercial relationships between\n      (connectivity) service providers, leading\
    \ to changes in the way in\n      which peering between providers is organized\
    \ and the way in which\n      transit traffic is routed.\n   -  Requirements for\
    \ traffic engineering within and between domains\n      including coping with\
    \ multiple paths between domains.\n   -  Addition of a second IP addressing technique,\
    \ in the form of IPv6.\n   -  The use of VPNs and private address space with IPv4\
    \ and IPv6.\n   -  Evolution of the end-to-end principle to deal with the expanded\n\
    \      role of the Internet, as discussed in [Blumenthal01]: this paper\n    \
    \  discusses the possibility that the range of new requirements,\n      especially\
    \ the social and techno-political ones that are being\n      placed on the future,\
    \ may compromise the Internet's original\n      design principles.  This might\
    \ cause the Internet to lose some of\n      its key features, in particular, its\
    \ ability to support new and\n      unanticipated applications.  This discussion\
    \ is linked to the rise\n      of new stakeholders in the Internet, especially\
    \ ISPs; new\n      government interests; the changing motivations of the ever\
    \ growing\n      user base; and the tension between the demand for trustworthy\n\
    \      overall operation and the inability to trust the behavior of\n      individual\
    \ users.\n   -  Incorporation of alternative forwarding techniques such as the\n\
    \      explicit routing (pipes) supplied by the MPLS [RFC3031] and GMPLS\n   \
    \   [RFC3471] environments.\n   -  Integration of additional constraints into\
    \ route determination\n      from interactions with other layers (e.g., Shared\
    \ Risk Link Groups\n      [InferenceSRLG]).  This includes the concern that redundant\
    \ routes\n      should not fate-share, e.g., because they physically run in the\n\
    \      same trench.\n   -  Support for alternative and multiple routing techniques\
    \ that are\n      better suited to delivering types of content organized in ways\n\
    \      other than into IP-addressed packets.\n   Philosophically, the Internet\
    \ has the mission of transferring\n   information from one place to another. \
    \ Conceptually, this\n   information is rarely organized into conveniently sized,\
    \ IP-addressed\n   packets, and the FDR needs to consider how the information\
    \ (content)\n   to be carried is identified, named, and addressed.  Routing\n\
    \   techniques can then be adapted to handle the expected types of\n   content.\n"
- title: 3.2.3.  High-Level Goals
  contents:
  - "3.2.3.  High-Level Goals\n   This section attempts to answer two questions:\n\
    \   -  What are we trying to achieve in a new architecture?\n   -  Why should\
    \ the Internet community care?\n   There is a third question that needs to be\
    \ answered as well, but that\n   has seldom been explicitly discussed:\n   - \
    \ How will we know when we have succeeded?\n"
- title: 3.2.3.1.  Providing a Routing System Matched to Domain Organization
  contents:
  - "3.2.3.1.  Providing a Routing System Matched to Domain Organization\n   Many\
    \ of today's routing problems are caused by a routing system that\n   is not well\
    \ matched to the organization and policies that it is\n   trying to support. \
    \ Our goal is to develop a routing architecture\n   where even a domain organization\
    \ that is not envisioned today can be\n   served by a routing architecture that\
    \ matches its requirements.  We\n   will know when this goal is achieved when\
    \ the desired policies,\n   rules, and organization can be mapped into the routing\
    \ system in a\n   natural, consistent, and easily understood way.\n"
- title: 3.2.3.2.  Supporting a Range of Different Communication Services
  contents:
  - "3.2.3.2.  Supporting a Range of Different Communication Services\n   Today's\
    \ routing protocols only support a single data forwarding\n   service that is\
    \ typically used to deliver a best-effort service in\n   the public Internet.\
    \  On the other hand, Diffserv for example, can\n   construct a number of different\
    \ bit transport services within the\n   network.  Using some of the per-domain\
    \ behaviors (PDB)s that have\n   been discussed in the IETF, it is possible to\
    \ construct services such\n   as Virtual Wire [DiffservVW] and Assured Rate [DiffservAR].\n\
    \   Providers today offer rudimentary promises about traffic handling in\n   the\
    \ network, for example, delay and long-term packet loss guarantees.\n   As time\
    \ goes on, this becomes even more relevant.  Communicating the\n   service characteristics\
    \ of paths in routing protocols will be\n   necessary in the near future, and\
    \ it will be necessary to be able to\n   route packets according to their service\
    \ requirements.\n   Thus, a goal of this architecture is to allow adequate information\n\
    \   about path service characteristics to be passed between domains and\n   consequently,\
    \ to allow the delivery of bit transport services other\n   than the best-effort\
    \ datagram connectivity service that is the\n   current common denominator.\n"
- title: 3.2.3.3.  Scalable Well Beyond Current Predictable Needs
  contents:
  - "3.2.3.3.  Scalable Well Beyond Current Predictable Needs\n   Any proposed FDR\
    \ system should scale beyond the size and performance\n   we can foresee for the\
    \ next ten years.  The previous IDR proposal as\n   implemented by BGP, has, with\
    \ some massaging, held up for over ten\n   years.  In that time the Internet has\
    \ grown far beyond the\n   predictions that were implied by the original requirements.\n\
    \   Unfortunately, we will only know if we have succeeded in this goal if\n  \
    \ the FDR system survives beyond its design lifetime without serious\n   massaging.\
    \  Failure will be much easier to spot!\n"
- title: 3.2.3.4.  Alternative Forwarding Mechanisms
  contents:
  - "3.2.3.4.  Alternative Forwarding Mechanisms\n   With the advent of circuit-based\
    \ technologies (e.g., MPLS [RFC3031]\n   and GMPLS [RFC3471]) managed by IP routers\
    \ there are forwarding\n   mechanisms other than the datagram service that need\
    \ to be supported\n   by the routing architecture.\n   An explicit goal of this\
    \ architecture is to add support for\n   forwarding mechanisms other then the\
    \ current hop-by-hop datagram\n   forwarding service driven by globally unique\
    \ IP addresses.\n"
- title: 3.2.3.5.  Separation of Topology Map from Connectivity Service
  contents:
  - "3.2.3.5.  Separation of Topology Map from Connectivity Service\n   It is envisioned\
    \ that an organization can support multiple services\n   within a single network.\
    \  These services can, for example, be of\n   different quality, of different\
    \ connectivity type, or of different\n   protocols (e.g., IPv4 and IPv6).  For\
    \ all these services, there may\n   be common domain topology, even though the\
    \ policies controlling the\n   routing of information might differ from service\
    \ to service.  Thus, a\n   goal with this architecture is to support separation\
    \ between creation\n   of a domain (or organization) topology map and service\
    \ creation.\n"
- title: 3.2.3.6.  Separation between Routing and Forwarding
  contents:
  - "3.2.3.6.  Separation between Routing and Forwarding\n   The architecture of a\
    \ router is composed of two main separable parts:\n   control and forwarding.\
    \  These components, while inter-dependent,\n   perform functions that are largely\
    \ independent of each other.\n   Control (routing, signaling, and management)\
    \ is typically done in\n   software while forwarding typically is done with specialized\
    \ ASICs or\n   network processors.\n   The nature of an IP-based network today\
    \ is that control and data\n   protocols share the same network and forwarding\
    \ regime.  This may not\n   always be the case in future networks, and we should\
    \ be careful to\n   avoid building in this sharing as an assumption in the FDR.\n\
    \   A goal of this architecture is to support full separation of control\n   and\
    \ forwarding, and to consider what additional concerns might be\n   properly considered\
    \ separately (e.g., adjacency management).\n"
- title: 3.2.3.7.  Different Routing Paradigms in Different Areas of the Same
  contents:
  - "3.2.3.7.  Different Routing Paradigms in Different Areas of the Same\n      \
    \    Network\n   A number of routing paradigms have been used or researched, in\n\
    \   addition to the conventional shortest-path-by-hop-count paradigm that\n  \
    \ is the current mainstay of the Internet.  In particular, differences\n   in\
    \ underlying transport networks may mean that other kinds of routing\n   are more\
    \ relevant, and the perceived need for traffic engineering\n   will certainly\
    \ alter the routing chosen in various domains.\n   Explicitly, one of these routing\
    \ paradigms should be the current\n   routing paradigm, so that the new paradigms\
    \ will inter-operate in a\n   backward-compatible way with today's system.  This\
    \ will facilitate a\n   migration strategy that avoids flag days.\n"
- title: 3.2.3.8.  Protection against Denial-of-Service and Other Security
  contents:
  - "3.2.3.8.  Protection against Denial-of-Service and Other Security\n         \
    \ Attacks\n   Currently, existence of a route to a destination effectively implies\n\
    \   that anybody who can get a packet onto the network is entitled to use\n  \
    \ that route.  While there are limitations to this generalization, this\n   is\
    \ a clear invitation to denial-of-service attacks.  A goal of the\n   FDR system\
    \ should be to allow traffic to be specifically linked to\n   whole or partial\
    \ routes so that a destination or link resources can\n   be protected from unauthorized\
    \ use.\n      Editors' Note: When sections like this one and the previous ones\n\
    \      on quality differentiation were written, the idea of separating\n     \
    \ traffic for security or quality was considered an unqualified\n      advantage.\
    \  Today, however, in the midst of active discussions on\n      Network Neutrality,\
    \ it is clear that such issues have a crucial\n      policy component that also\
    \ needs to be understood.  These, and\n      other similar issues, are open to\
    \ further research.\n"
- title: 3.2.3.9.  Provable Convergence with Verifiable Policy Interaction
  contents:
  - "3.2.3.9.  Provable Convergence with Verifiable Policy Interaction\n   It has\
    \ been shown both analytically, by Griffin, et al. (see\n   [Griffin99]), and\
    \ practically (see [RFC3345]) that BGP will not\n   converge stably or is only\
    \ meta-stable (i.e., will not re-converge in\n   the face of a single failure)\
    \ when certain types of policy constraint\n   are applied to categories of network\
    \ topology.  The addition of\n   policy to the basic distance-vector algorithm\
    \ invalidates the proofs\n   of convergence that could be applied to a policy-free\
    \ implementation.\n   It has also been argued that global convergence may no longer\
    \ be a\n   necessary goal and that local convergence may be all that is\n   required.\n\
    \   A goal of the FDR should be to achieve provable convergence of the\n   protocols\
    \ used that may involve constraining the topologies and\n   domains subject to\
    \ convergence.  This will also require vetting the\n   policies imposed to ensure\
    \ that they are compatible across domain\n   boundaries and result in a consistent\
    \ policy set.\n      Editors' Note: This requirement is very optimistic in that\
    \ it\n      implies that it is possible to get operators to cooperate even it\n\
    \      is seen by them to be against their business practices.  Though\n     \
    \ perhaps Utopian, this is a good goal.\n"
- title: 3.2.3.10.  Robustness Despite Errors and Failures
  contents:
  - "3.2.3.10.  Robustness Despite Errors and Failures\n   From time to time in the\
    \ history of the Internet, there have been\n   occurrences where misconfigured\
    \ routers have destroyed global\n   connectivity.\n   A goal of the FDR is to\
    \ be more robust to configuration errors and\n   failures.  This should probably\
    \ involve ensuring that the effects of\n   misconfiguration and failure can be\
    \ confined to some suitable\n   locality of the failure or misconfiguration.\n"
- title: 3.2.3.11.  Simplicity in Management
  contents:
  - "3.2.3.11.  Simplicity in Management\n   The policy work ([rap-charter02], [snmpconf-charter02],\
    \ and\n   [policy-charter02]) that has been done at IETF provides an\n   architecture\
    \ that standardizes and simplifies management of QoS.\n   This kind of simplicity\
    \ is needed in a Future Domain Routing\n   architecture and its protocols.\n \
    \  A goal of this architecture is to make configuration and management\n   of\
    \ inter-domain routing as simple as possible.\n      Editors' Note: Snmpconf and\
    \ rap are the hopes of the past.  Today,\n      configuration and policy hope\
    \ is focused on netconf\n      [netconf-charter].\n"
- title: 3.2.3.12.  The Legacy of RFC 1126
  contents:
  - "3.2.3.12.  The Legacy of RFC 1126\n   RFC 1126 outlined a set of requirements\
    \ that were used to guide the\n   development of BGP.  While the network has changed\
    \ in the years since\n   1989, many of the same requirements remain.  A future\
    \ domain routing\n   solution has to support, as its base requirement, the level\
    \ of\n   function that is available today.  A detailed discussion of RFC 1126\n\
    \   and its requirements can be found in [RFC5773].  Those requirements,\n   while\
    \ specifically spelled out in that document, are subsumed by the\n   requirements\
    \ in this document.\n"
- title: 3.3.  High-Level User Requirements
  contents:
  - "3.3.  High-Level User Requirements\n   This section considers the requirements\
    \ imposed by the target\n   audience of the FDR both in terms of organizations\
    \ that might own\n   networks that would use FDR, and the human users who will\
    \ have to\n   interact with the FDR.\n"
- title: 3.3.1.  Organizational Users
  contents:
  - "3.3.1.  Organizational Users\n   The organizations that own networks connected\
    \ to the Internet have\n   become much more diverse since RFC 1126 [RFC1126] was\
    \ published.  In\n   particular, major parts of the network are now owned by commercial\n\
    \   service provider organizations in the business of making profits from\n  \
    \ carrying data traffic.\n"
- title: 3.3.1.1.  Commercial Service Providers
  contents:
  - "3.3.1.1.  Commercial Service Providers\n   The routing system must take into\
    \ account the commercial service\n   provider's need for secrecy and security,\
    \ as well as allowing them to\n   organize their business as flexibly as possible.\n\
    \   Service providers will often wish to conceal the details of the\n   network\
    \ from other connected networks.  So far as is possible, the\n   routing system\
    \ should not require the service providers to expose\n   more details of the topology\
    \ and capability of their networks than is\n   strictly necessary.\n   Many service\
    \ providers will offer contracts to their customers in the\n   form of Service\
    \ Level Agreements (SLAs).  The routing system must\n   allow the providers to\
    \ support these SLAs through traffic engineering\n   and load balancing as well\
    \ as multi-homing, providing the degree of\n   resilience and robustness that\
    \ is needed.\n   Service providers can be categorized as:\n   -  Global Service\
    \ Providers (GSPs) whose networks have a global\n      reach.  GSPs may, and usually\
    \ will, wish to constrain traffic\n      between their customers to run entirely\
    \ on their networks.  GSPs\n      will interchange traffic at multiple peering\
    \ points with other\n      GSPs, and they will need extensive policy-based controls\
    \ to\n      control the interchange of traffic.  Peering may be through the\n\
    \      use of dedicated private lines between the partners or,\n      increasingly,\
    \ through Internet Exchange Points.\n   -  National, or regional, Service Providers\
    \ (NSPs) that are similar\n      to GSPs but typically cover one country.  NSPs\
    \ may operate as a\n      federation that provides similar reach to a GSP and\
    \ may wish to be\n      able to steer traffic preferentially to other federation\
    \ members\n      to achieve global reach.\n   -  Local Internet Service Providers\
    \ (ISPs) operate regionally.  They\n      will typically purchase transit capacity\
    \ from NSPs or GSPs to\n      provide global connectivity, but they may also peer\
    \ with\n      neighboring, and sometimes distant, ISPs.\n   The routing system\
    \ should be sufficiently flexible to accommodate the\n   continually changing\
    \ business relationships of the providers and the\n   various levels of trustworthiness\
    \ that they apply to customers and\n   partners.\n   Service providers will need\
    \ to be involved in accounting for Internet\n   usage and monitoring the traffic.\
    \  They may be involved in government\n   action to tax the usage of the Internet,\
    \ enforce social mores and\n   intellectual property rules, or apply surveillance\
    \ to the traffic to\n   detect or prevent crime.\n"
- title: 3.3.1.2.  Enterprises
  contents:
  - "3.3.1.2.  Enterprises\n   The leaves of the network domain graph are in many\
    \ cases networks\n   supporting a single enterprise.  Such networks cover an enormous\n\
    \   range of complexity.  Some multi-national companies own networks that\n  \
    \ rival the complexity and reach of a GSP, whereas many fall into the\n   Small\
    \ Office-Home Office (SOHO) category.  The routing system should\n   allow simple\
    \ and robust configuration and operation for the SOHO\n   category, while effectively\
    \ supporting the larger enterprise.\n   Enterprises are particularly likely to\
    \ lack the capability to\n   configure and manage a complex routing system, and\
    \ every effort\n   should be made to provide simple configuration and operation\
    \ for such\n   networks.\n   Enterprises will also need to be able to change their\
    \ service\n   provider with ease.  While this is predominantly a naming and\n\
    \   addressing issue, the routing system must be able to support seamless\n  \
    \ changeover; for example, if the changeover requires a change of\n   address\
    \ prefix, the routing system must be able to cope with a period\n   when both\
    \ sets of addresses are in use.\n   Enterprises will wish to be able to multi-home\
    \ to one or more\n   providers as one possible means of enhancing the resilience\
    \ of their\n   network.\n   Enterprises will also frequently need to control the\
    \ trust that they\n   place both in workers and external connections through firewalls\
    \ and\n   similar mid-boxes placed at their external connections.\n"
- title: 3.3.1.3.  Domestic Networks
  contents:
  - "3.3.1.3.  Domestic Networks\n   Increasingly domestic, i.e., non-business home,\
    \ networks are likely\n   to be 'always on' and will resemble SOHO enterprises\
    \ networks with no\n   special requirements on the routing system.\n   The routing\
    \ system must also continue to support dial-up users.\n"
- title: 3.3.1.4.  Internet Exchange Points
  contents:
  - "3.3.1.4.  Internet Exchange Points\n   Peering of service providers, academic\
    \ networks, and larger\n   enterprises is happening increasingly at specific Internet\
    \ Exchange\n   Points where many networks are linked together in a relatively\
    \ small\n   physical area.  The resources of the exchange may be owned by a\n\
    \   trusted third party or owned jointly by the connecting networks.  The\n  \
    \ routing systems should support such exchange points without requiring\n   the\
    \ exchange point to either operate as a superior entity with every\n   connected\
    \ network logically inferior to it or by requiring the\n   exchange point to be\
    \ a member of one (or all) connected networks.\n   The connecting networks have\
    \ to delegate a certain amount of trust to\n   the exchange point operator.\n"
- title: 3.3.1.5.  Content Providers
  contents:
  - "3.3.1.5.  Content Providers\n   Content providers are at one level a special\
    \ class of enterprise, but\n   the desire to deliver content efficiently means\
    \ that a content\n   provider may provide multiple replicated origin servers or\
    \ caches\n   across a network.  These may also be provided by a separate content\n\
    \   delivery service.  The routing system should facilitate delivering\n   content\
    \ from the most efficient location.\n"
- title: 3.3.2.  Individual Users
  contents:
  - "3.3.2.  Individual Users\n   This section covers the most important human users\
    \ of the FDR and\n   their expected interactions with the system.\n"
- title: 3.3.2.1.  All End Users
  contents:
  - "3.3.2.1.  All End Users\n   The routing system must continue to deliver the current\
    \ global\n   connectivity service (i.e., any unique address to any other unique\n\
    \   address, subject to policy constraints) that has always been the\n   basic\
    \ aim of the Internet.\n   End user applications should be able to request, or\
    \ have requested on\n   their behalf by agents and policy mechanisms, end-to-end\n\
    \   communication services with QoS characteristics different from the\n   best-effort\
    \ service that is the foundation of today's Internet.  It\n   should be possible\
    \ to request both a single service channel and a\n   bundle of service channels\
    \ delivered as a single entity.\n"
- title: 3.3.2.2.  Network Planners
  contents:
  - "3.3.2.2.  Network Planners\n   The routing system should allow network planners\
    \ to plan and\n   implement a network that can be proved to be stable and will\
    \ meet\n   their traffic engineering requirements.\n"
- title: 3.3.2.3.  Network Operators
  contents:
  - "3.3.2.3.  Network Operators\n   The routing system should, so far as is possible,\
    \ be simple to\n   configure, operate and troubleshoot, behave in a predictable\
    \ and\n   stable fashion, and deliver appropriate statistics and events to\n \
    \  allow the network to be managed and upgraded in an efficient and\n   timely\
    \ fashion.\n"
- title: 3.3.2.4.  Mobile End Users
  contents:
  - "3.3.2.4.  Mobile End Users\n   The routing system must support mobile end users.\
    \  It is clear that\n   mobility is becoming a predominant mode for network access.\n"
- title: 3.4.  Mandated Constraints
  contents:
  - "3.4.  Mandated Constraints\n   While many of the requirements to which the protocol\
    \ must respond are\n   technical, some aren't.  These mandated constraints are\
    \ those that\n   are determined by conditions of the world around us.  Understanding\n\
    \   these requirements requires an analysis of the world in which these\n   systems\
    \ will be deployed.  The constraints include those that are\n   determined by:\n\
    \   -  environmental factors,\n   -  geography,\n   -  political boundaries and\
    \ considerations, and\n   -  technological factors such as the prevalence of different\
    \ levels\n      of technology in the developed world compared to those in the\n\
    \      developing or undeveloped world.\n"
- title: 3.4.1.  The Federated Environment
  contents:
  - "3.4.1.  The Federated Environment\n   The graph of the Internet network, with\
    \ routers and other control\n   boxes as the nodes and communication links as\
    \ the edges, is today\n   partitioned administratively into a large number of\
    \ disjoint domains.\n   A common administration may have responsibility for one\
    \ or more\n   domains that may or may not be adjacent in the graph.\n   Commercial\
    \ and policy constraints affecting the routing system will\n   typically be exercised\
    \ at the boundaries of these domains where\n   traffic is exchanged between the\
    \ domains.\n   The perceived need for commercial confidentiality will seek to\n\
    \   minimize the control information transferred across these boundaries,\n  \
    \ leading to requirements for aggregated information, abstracted maps\n   of connectivity\
    \ exported from domains, and mistrust of supplied\n   information.\n   The perceived\
    \ desire for anonymity may require the use of zero-\n   knowledge security protocols\
    \ to allow users to access resources\n   without exposing their identity.\n  \
    \ The requirements should provide the ability for groups of peering\n   domains\
    \ to be treated as a complex domain.  These complex domains\n   could have a common\
    \ administrative policy.\n"
- title: 3.4.2.  Working with Different Sorts of Networks
  contents:
  - "3.4.2.  Working with Different Sorts of Networks\n   The diverse Layer 2 networks,\
    \ over which the Layer 3 routing system\n   is implemented, have typically been\
    \ operated totally independently\n   from the Layer 3 network and often with their\
    \ own routing mechanisms.\n   Consideration needs to be given to the desirable\
    \ degree and nature of\n   interchange of information between the layers.  In\
    \ particular, the\n   need for guaranteed robustness through diverse routing layers\
    \ implies\n   knowledge of the underlying networks.\n   Mobile access networks\
    \ may also impose extra requirements on Layer 3\n   routing.\n"
- title: 3.4.3.  Delivering Resilient Service
  contents:
  - "3.4.3.  Delivering Resilient Service\n   The routing system operates at Layer\
    \ 3 in the network.  To achieve\n   robustness and resilience at this layer requires\
    \ that, where multiple\n   diverse routes are employed as part of delivering the\
    \ resilience, the\n   routing system at Layer 3 needs to be assured that the Layer\
    \ 2 and\n   lower routes are really diverse.  The \"diamond problem\" is the\n\
    \   simplest form of this problem -- a Layer 3 provider attempting to\n   provide\
    \ diversity buys Layer 2 services from two separate providers\n   who in turn\
    \ buy Layer 1 services from the same provider:\n                             Layer\
    \ 3 service\n                              /           \\\n                  \
    \           /             \\\n                         Layer 2         Layer 2\n\
    \                       Provider A      Provider B\n                         \
    \    \\             /\n                              \\           /\n        \
    \                     Layer 1 Provider\n   Now, when the backhoe cuts the trench,\
    \ the Layer 3 provider has no\n   resilience unless he had taken special steps\
    \ to verify that the\n   trench wasn't common.  The routing system should facilitate\
    \ avoidance\n   of this kind of trap.\n   Some work is going on to understand\
    \ the sort of problems that stem\n   from this requirement, such as the work on\
    \ Shared Risk Link Groups\n   [InferenceSRLG].  Unfortunately, the full generality\
    \ of the problem\n   requires diversity be maintained over time between an arbitrarily\n\
    \   large set of mutually distrustful providers.  For some cases, it may\n   be\
    \ sufficient for diversity to be checked at provisioning or route\n   instantiation\
    \ time, but this remains a hard problem requiring\n   research work.\n"
- title: 3.4.4.   When Will the New Solution Be Required?
  contents:
  - "3.4.4.   When Will the New Solution Be Required?\n   There is a full range of\
    \ opinion on this subject.  An informal survey\n   indicates that the range varies\
    \ from 2 to 6 years.  And while there\n   are those, possibly outliers, who think\
    \ there is no need for a new\n   routing architecture as well as those who think\
    \ a new architecture\n   was needed years ago, the median seems to lie at around\
    \ 4 years.  As\n   in all projections of the future, this is not provable at this\
    \ time.\n      Editors' Note: The paragraph above was written in 2002, yet could\n\
    \      be written without change in 2006.  As with many technical\n      predictions\
    \ and schedules, the horizon has remained fixed through\n      this interval.\n"
- title: 3.5.  Assumptions
  contents:
  - "3.5.  Assumptions\n   In projecting the requirements for the Future Domain Routing,\
    \ a\n   number of assumptions have been made.  The requirements set out\n   should\
    \ be consistent with these assumptions, but there are doubtless\n   a number of\
    \ other assumptions that are not explicitly articulated\n   here:\n   1.   The\
    \ number of hosts today is somewhere in the area of 100\n        million.  With\
    \ dial-in, NATs, and the universal deployment of\n        IPv6, this is likely\
    \ to become up to 500 million users (see\n        [CIDR]).  In a number of years,\
    \ with wireless accesses and\n        different appliances attaching to the Internet,\
    \ we are likely to\n        see a couple of billion (10^9) \"users\" on the Internet.\
    \  The\n        number of globally addressable hosts is very much dependent on\n\
    \        how common NATs will be in the future.\n   2.   NATs, firewalls, and\
    \ other middle-boxes exist, and we cannot\n        assume that they will cease\
    \ being a presence in the networks.\n   3.   The number of operators in the Internet\
    \ will probably not grow\n        very much, as there is a likelihood that operators\
    \ will tend to\n        merge.  However, as Internet-connectivity expands to new\n\
    \        countries, new operators will emerge and then merge again.\n   4.   At\
    \ the beginning of 2002, there are around 12000 registered ASs.\n        With\
    \ current use of ASs (e.g., multi-homing) the number of ASs\n        could be\
    \ expected to grow to 25000 in about 10 years [Broido02].\n        This is down\
    \ from a previously reported growth rate of 51% per\n        year [RFC3221]. \
    \ Future growth rates are difficult to predict.\n           Editors' Note: In\
    \ the routing report table of August 2006,\n           the total number of ASs\
    \ present in the Internet Routing Table\n           was 23000.  In 4 years, this\
    \ is substantial progress on the\n           prediction of 25000 ASs.  Also, there\
    \ are significantly more\n           ASs registered than are visibly active, i.e.,\
    \ in excess of\n           42000 in mid-2006.  It is possible, however, that many\
    \ are\n           being used internally.\n   5.   In contrast to the number of\
    \ operators, the number of domains is\n        likely to grow significantly. \
    \ Today, each operator has\n        different domains within an AS, but this also\
    \ shows in SLAs and\n        policies internal to the operator.  Making this globally\
    \ visible\n        would create a number of domains; 10-100 times the number of\n\
    \        ASs, i.e., between 100,000 and 1,000,000.\n   6.   With more and more\
    \ capacity at the edge of the network, the IP\n        network will expand.  Today,\
    \ there are operators with several\n        thousands of routers, but this is\
    \ likely to be increased.  Some\n        domains will probably contain tens of\
    \ thousands of routers.\n   7.   The speed of connections in the (fixed) access\
    \ will technically\n        be (almost) unconstrained.  However, the cost for\
    \ the links will\n        not be negligible so that the apparent speed will be\
    \ effectively\n        bounded.  Within a number of years, some will have multi-gigabit\n\
    \        speed in the access.\n   8.   At the same time, the bandwidth of wireless\
    \ access still has a\n        strict upper-bound.  Within the foreseeable future\
    \ each user\n        will have only a tiny amount of resources available compared\
    \ to\n        fixed accesses (10 kbps to 2 Mbps for a Universal Mobile\n     \
    \   Telecommunications System (UMTS) with only a few achieving the\n        higher\
    \ figure as the bandwidth is shared between the active\n        users in a cell\
    \ and only small cells can actually reach this\n        speed, but 11 Mbps or\
    \ more for wireless LAN connections).  There\n        may also be requirements\
    \ for effective use of bandwidth as low\n        as 2.4 Kbps or lower, in some\
    \ applications.\n   9.   Assumptions 7 and 8 taken together suggest a minimum\
    \ span of\n        bandwidth between 2.4 kbps to 10 Gbps.\n   10.  The speed in\
    \ the backbone has grown rapidly, and there is no\n        evidence that the growth\
    \ will stop in the coming years.\n        Terabit-speed is likely to be the minimum\
    \ backbone speed in a\n        couple of years.  The range of bandwidths that\
    \ need to be\n        represented will require consideration on how to represent\
    \ the\n        values in the protocols.\n   11.  There have been discussions as\
    \ to whether Moore's Law will\n        continue to hold for processor speed. \
    \ If Moore's Law does not\n        hold, then communication circuits might play\
    \ a more important\n        role in the future.  Also, optical routing is based\
    \ on circuit\n        technology, which is the main reason for taking \"circuits\"\
    \ into\n        account when designing an FDR.\n   12.  However, the datagram\
    \ model still remains the fundamental model\n        for the Internet.\n   13.\
    \  The number of peering points in the network is likely to grow,\n        as\
    \ multi-homing becomes important.  Also, traffic will become\n        more locally\
    \ distributed, which will drive the demand for local\n        peering.\n     \
    \      Editors' Note: On the other hand, peer-to-peer networking may\n       \
    \    shift the balance in demand for local peering.\n   14.  The FDR will achieve\
    \ the same degree of ubiquity as the current\n        Internet and IP routing.\n"
- title: 3.6.  Functional Requirements
  contents:
  - "3.6.  Functional Requirements\n   This section includes a detailed discussion\
    \ of new requirements for a\n   Future Domain Routing architecture.  The nth requirement\
    \ carries the\n   label \"R(n)\".  As discussed in Section 3.2.3.12, a new architecture\n\
    \   must build upon the requirements of the past routing framework and\n   must\
    \ not reduce the functionality of the network.  A discussion and\n   analysis\
    \ of the RFC 1126 requirements can be found in [RFC5773].\n"
- title: 3.6.1.  Topology
  contents:
  - '3.6.1.  Topology

    '
- title: 3.6.1.1.  Routers Should Be Able to Learn and to Exploit the Domain
  contents:
  - "3.6.1.1.  Routers Should Be Able to Learn and to Exploit the Domain\n       \
    \   Topology\n   R(1)  Routers must be able to acquire and hold sufficient information\n\
    \         on the underlying topology of the domain to allow the\n         establishment\
    \ of routes on that topology.\n   R(2)  Routers must have the ability to control\
    \ the establishment of\n         routes on the underlying topology.\n   R(3) \
    \ Routers must be able, where appropriate, to control Sub-IP\n         mechanisms\
    \ to support the establishment of routes.\n   The OSI Inter-Domain Routing Protocol\
    \ (IDRP) [ISO10747] allowed a\n   collection of topologically related domains\
    \ to be replaced by an\n   aggregate domain object, in a similar way to the Nimrod\
    \ [Chiappa02]\n   domain hierarchies.  This allowed a route to be more compactly\n\
    \   represented by a single collection instead of a sequence of\n   individual\
    \ domains.\n   R(4)  Routers must, where appropriate, be able to construct\n \
    \        abstractions of the topology that represent an aggregation of\n     \
    \    the topological features of some area of the topology.\n"
- title: 3.6.1.2.  The Same Topology Information Should Support Different Path
  contents:
  - "3.6.1.2.  The Same Topology Information Should Support Different Path\n     \
    \     Selection Ideas\n   The same topology information needs to provide the more\
    \ flexible\n   spectrum of path selection methods that we might expect to find\
    \ in a\n   future Internet, including distributed techniques such as hop-by-hop,\n\
    \   shortest path, local optimization constraint-based, class of service,\n  \
    \ source address routing, and destination address routing, as well as\n   the\
    \ centralized, global optimization constraint-based \"traffic\n   engineering\"\
    \ type.  Allowing different path selection techniques will\n   produce a much\
    \ more predictable and comprehensible result than the\n   \"clever tricks\" that\
    \ are currently needed to achieve the same\n   results.  Traffic engineering functions\
    \ need to be combined.\n   R(5)  Routers must be capable of supporting a small\
    \ number of\n         different path selection algorithms.\n"
- title: 3.6.1.3.  Separation of the Routing Information Topology from the Data
  contents:
  - "3.6.1.3.  Separation of the Routing Information Topology from the Data\n    \
    \      Transport Topology\n   R(6)  The controlling network may be logically separate\
    \ from the\n         controlled network.\n   The two functional \"planes\" may\
    \ physically reside in the same nodes\n   and share the same links, but this is\
    \ not the only possibility, and\n   other options may sometimes be necessary.\
    \  An example is a pure\n   circuit switch (that cannot see individual IP packets)\
    \ combined with\n   an external controller.  Another example may be multiple links\n\
    \   between two routers, where all the links are used for data forwarding\n  \
    \ but only one is used for carrying the routing session.\n"
- title: 3.6.2.  Distribution
  contents:
  - '3.6.2.  Distribution

    '
- title: 3.6.2.1.  Distribution Mechanisms
  contents:
  - "3.6.2.1.  Distribution Mechanisms\n   R(7)  Relevant changes in the state of\
    \ the network, including\n         modifications to the topology and changes in\
    \ the values of\n         dynamic capabilities, must be distributed to every entity\
    \ in\n         the network that needs them, in a reliable and trusted way, at\n\
    \         the earliest appropriate time after the changes have occurred.\n   R(8)\
    \  Information must not be distributed outside areas where it is\n         needed,\
    \ or believed to be needed, for the operation of the\n         routing system.\n\
    \   R(9)  Information must be distributed in such a way that it minimizes\n  \
    \       the load on the network, consistent with the required response\n     \
    \    time of the network to changes.\n"
- title: 3.6.2.2.  Path Advertisement
  contents:
  - "3.6.2.2.  Path Advertisement\n   R(10)  The router must be able to acquire and\
    \ store additional static\n          and dynamic information that relates to the\
    \ capabilities of\n          the topology and its component nodes and links and\
    \ that can\n          subsequently be used by path selection methods.\n   The\
    \ inter-domain routing system must be able to advertise more kinds\n   of information\
    \ than just connectivity and domain paths.\n   R(11)  The routing system must\
    \ support service specifications, e.g.,\n          the Service Level Specifications\
    \ (SLSs) developed by the\n          Differentiated Services working group [RFC3260].\n\
    \   Careful attention should be paid to ensuring that the distribution of\n  \
    \ additional information with path advertisements remains scalable as\n   domains\
    \ and the Internet get larger, more numerous, and more\n   diversified.\n   R(12)\
    \  The distribution mechanism used for distributing network state\n          information\
    \ must be scalable with respect to the expected size\n          of domains and\
    \ the volume and rate of change of dynamic state\n          that can be expected.\n\
    \   The combination of R(9) and R(12) may result in a compromise between\n   the\
    \ responsiveness of the network to change and the overhead of\n   distributing\
    \ change notifications.  Attempts to respond to very rapid\n   changes may damage\
    \ the stability of the routing system.\n   Possible examples of additional capability\
    \ information that might be\n   carried include:\n   -  QoS information\n    \
    \  To allow an ISP to sell predictable end-to-end QoS service to any\n      destination,\
    \ the routing system should have information about the\n      end-to-end QoS.\
    \  This means that:\n   R(13)  The routing system must be able to support different\
    \ paths for\n          different services.\n   R(14)  The routing system must\
    \ be able to forward traffic on the path\n          appropriate for the service\
    \ selected for the traffic, either\n          according to an explicit marking\
    \ in each packet (e.g., MPLS\n          labels, Diffserv Per-Hop Behaviors (PHBs)\
    \ or DSCP values) or\n          implicitly (e.g., the physical or logical port\
    \ on which the\n          traffic arrives).\n   R(15)  The routing system should\
    \ also be able to carry information\n          about the expected (or actually,\
    \ promised) characteristics of\n          the entire path and the price for the\
    \ service.\n      (If such information is exchanged at all between network operators\n\
    \      today, it is through bilateral management interfaces, and not\n      through\
    \ the routing protocols.)\n      This would allow for the operator to optimize\
    \ the choice of path\n      based on a price/performance trade-off.\n      In\
    \ addition to providing dynamic QoS information, the system\n      should be able\
    \ to use static class-of-service information.\n   -  Security information\n  \
    \    Security characteristics of other domains referred to by\n      advertisements\
    \ can allow the routing entity to make routing\n      decisions based on political\
    \ concerns.  The information itself is\n      assumed to be secure so that it\
    \ can be trusted.\n   -  Usage and cost information\n      Usage and cost information\
    \ can be used for billing and traffic\n      engineering.  In order to support\
    \ cost-based routing policies for\n      customers (i.e., peer ISPs), information\
    \ such as \"traffic on this\n      link or path costs XXX per Gigabyte\" needs\
    \ to be advertised, so\n      that the customer can choose a more or a less expensive\
    \ route.\n   -  Monitored performance\n      Performance information such as delay\
    \ and drop frequency can be\n      carried.  (This may only be suitable inside\
    \ a domain because of\n      trust considerations.)  This should support at least\
    \ the kind of\n      delay-bound contractual terms that are currently being offered\
    \ by\n      service providers.  Note that these values refer to the outcome of\n\
    \      carrying bits on the path, whereas the QoS information refers to\n    \
    \  the proposed behavior that results in this outcome.\n   -  Multicast information\n\
    \   R(16)  The routing system must provide information needed to create\n    \
    \      multicast distribution trees.  This information must be\n          provided\
    \ for one-to-many distribution trees and should be\n          provided for many-to-many\
    \ distribution trees.\n      The actual construction of distribution trees is\
    \ not necessarily\n      done by the routing system.\n"
- title: 3.6.2.3.  Stability of Routing Information
  contents:
  - "3.6.2.3.  Stability of Routing Information\n   R(17)  The new network architecture\
    \ must be stable without needing\n          global convergence, i.e., convergence\
    \ is a local property.\n   The degree to which this is possible and the definition\
    \ of \"local\"\n   remain research topics.  Restricting the requirement for convergence\n\
    \   to localities will have an effect on all of the other requirements in\n  \
    \ this section.\n   R(18)  The distribution and the rate of distribution of changes\
    \ must\n          not affect the stability of the routing information.  For\n\
    \          example, commencing redistribution of a change before the\n       \
    \   previous one has settled must not cause instability.\n"
- title: 3.6.2.3.1.  Avoiding Routing Oscillations
  contents:
  - "3.6.2.3.1.  Avoiding Routing Oscillations\n   R(19)  The routing system must\
    \ minimize oscillations in route\n          advertisements.\n"
- title: 3.6.2.3.2.  Providing Loop-Free Routing and Forwarding
  contents:
  - "3.6.2.3.2.  Providing Loop-Free Routing and Forwarding\n   In line with the separation\
    \ of routing and forwarding concerns:\n   R(20)  The distribution of routing information\
    \ must be, so far as is\n          possible, loop-free.\n   R(21)  The forwarding\
    \ information created from this routing\n          information must seek to minimize\
    \ persistent loops in the\n          data-forwarding paths.\n   It is accepted\
    \ that transient loops may occur during convergence of\n   the protocol and that\
    \ there are trade-offs between loop avoidance and\n   global scalability.\n"
- title: 3.6.2.3.3.  Detection, Notification, and Repair of Failures
  contents:
  - "3.6.2.3.3.  Detection, Notification, and Repair of Failures\n   R(22)  The routing\
    \ system must provide means for detecting failures\n          of node equipment\
    \ or communication links.\n   R(23)  The routing system should be able to coordinate\
    \ failure\n          indications from Layer 3 mechanisms, from nodal mechanisms\n\
    \          built into the routing system, and from lower-layer mechanisms\n  \
    \        that propagate up to Layer 3 in order to determine the root\n       \
    \   cause of the failure.  This will allow the routing system to\n          react\
    \ correctly to the failure by activating appropriate\n          mitigation and\
    \ repair mechanisms if required, while ensuring\n          that it does not react\
    \ if lower-layer repair mechanisms are\n          able to repair or mitigate the\
    \ fault.\n   Most Layer 3 routing protocols have utilized keepalives or \"hello\"\
    \n   protocols as a means of detecting failures at Layer 3.  The keepalive\n \
    \  mechanisms are often complemented by analog mechanisms (e.g., laser-\n   light\
    \ detection) and hardware mechanisms (e.g., hardware/software\n   watchdogs) that\
    \ are built into routing nodes and communication links.\n   Great care must be\
    \ taken to make the best possible use of the various\n   failure repair methods\
    \ available while ensuring that only one repair\n   mechanism at a time is allowed\
    \ to repair any given fault.\n   Interactions between, for example, fast reroute\
    \ mechanisms at Layer 3\n   and Synchronous Optical Network/Synchronous Digital\
    \ Hierarchy (SONET/\n   SDH) repair at Layer 1 are highly undesirable and are\
    \ likely to cause\n   problems in the network.\n   R(24)  Where a network topology\
    \ and routing system contains multiple\n          fault repair mechanisms, the\
    \ responses of these systems to a\n          detected failure should be coordinated\
    \ so that the fault is\n          repaired by the most appropriate means, and\
    \ no extra repairs\n          are initiated.\n   R(25)  Where specialized packet\
    \ exchange mechanisms (e.g., Layer 3\n          keepalive or \"hello\" protocol\
    \ mechanisms) are used to detect\n          failures, the routing system must\
    \ allow the configuration of\n          the rate of transmission of these keepalives.\
    \  This must\n          include the capability to turn them off altogether for\
    \ links\n          that are deliberately broken when no real user or control\n\
    \          traffic is present (e.g., ISDN links).\n   This will allow the operator\
    \ to compromise between the speed of\n   failure detection and the proportion\
    \ of link bandwidth dedicated to\n   failure detection.\n"
- title: 3.6.3.  Addressing
  contents:
  - '3.6.3.  Addressing

    '
- title: 3.6.3.1.  Support Mix of IPv4, IPv6, and Other Types of Addresses
  contents:
  - "3.6.3.1.  Support Mix of IPv4, IPv6, and Other Types of Addresses\n   R(26) \
    \ The routing system must support a mix of different kinds of\n          addresses.\n\
    \   This mix will include at least IPv4 and IPv6 addresses, and\n   preferably\
    \ various types of non-IP addresses, too.  For instance,\n   networks like SDH/SONET\
    \ and Wavelength Division Multiplexing (WDM)\n   may prefer to use non-IP addresses.\
    \  It may also be necessary to\n   support multiple sets of \"private\" (e.g.,\
    \ RFC 1918) addresses when\n   dealing with multiple customer VPNs.\n   R(27)\
    \  The routing system should support the use of a single topology\n          representation\
    \ to generate routing and forwarding tables for\n          multiple address families\
    \ on the same network.\n   This capability would minimize the protocol overhead\
    \ when exchanging\n   routes.\n"
- title: 3.6.3.2.  Support for Domain Renumbering/Readdressing
  contents:
  - "3.6.3.2.  Support for Domain Renumbering/Readdressing\n   R(28)  If a domain\
    \ is subject to address reassignment that would\n          cause forwarding interruption,\
    \ then the routing system should\n          support readdressing (e.g., when a\
    \ new prefix is given to an\n          old network, and the change is known in\
    \ advance) by\n          maintaining routing during the changeover period [RFC2071]\n\
    \          [RFC2072].\n"
- title: 3.6.3.3.  Multicast and Anycast
  contents:
  - "3.6.3.3.  Multicast and Anycast\n   R(29)  The routing system must support multicast\
    \ addressing, both\n          within a domain and across multiple domains.\n \
    \  R(30)  The routing system should support anycast addressing within a\n    \
    \      domain.  The routing system may support anycast addressing\n          across\
    \ domains.\n   An open question is whether it is possible or useful to support\n\
    \   anycast addressing between cooperating domains.\n"
- title: 3.6.3.4.  Address Scoping
  contents:
  - "3.6.3.4.  Address Scoping\n   R(31)  The routing system must support scoping\
    \ of unicast addresses,\n          and it should support scoping of multicast\
    \ and anycast address\n          types.\n   The unicast address scoping that is\
    \ being designed for IPv6 does not\n   seem to cause any special problems for\
    \ routing.  IPv6 inter-domain\n   routing handles only IPv6 global addresses,\
    \ while intra-domain\n   routing also needs to be aware of the scope of private\
    \ addresses.\n      Editors' Note: the original reference was to site-local addresses,\n\
    \      but these have been deprecated by the IETF.  Link-local addresses\n   \
    \   are never routed at all.\n   More study may be needed to identify the requirements\
    \ and solutions\n   for scoping in a more general sense and for scoping of multicast\
    \ and\n   anycast addresses.\n"
- title: 3.6.3.5.  Mobility Support
  contents:
  - "3.6.3.5.  Mobility Support\n   R(32)  The routing system must support system\
    \ mobility.  The term\n          \"system\" includes anything from an end system\
    \ to an entire\n          domain.\n   We observe that the existing solutions based\
    \ on renumbering and/or\n   tunneling are designed to work with the current routing,\
    \ so they do\n   not add any new requirements to future routing.  But the requirement\n\
    \   is general, and future solutions may not be restricted to the ones we\n  \
    \ have today.\n"
- title: 3.6.4.  Statistics Support
  contents:
  - "3.6.4.  Statistics Support\n   R(33)  Both the routing and forwarding parts of\
    \ the routing system\n          must maintain statistical information about the\
    \ performance of\n          their functions.\n"
- title: 3.6.5.  Management Requirements
  contents:
  - "3.6.5.  Management Requirements\n   While the tools of management are outside\
    \ the scope of routing, the\n   mechanisms to support the routing architecture\
    \ and protocols are\n   within scope.\n   R(34)  Mechanisms to support Operational,\
    \ Administrative, and\n          Management control of the routing architecture\
    \ and protocols\n          must be designed into the original fabric of the architecture.\n"
- title: 3.6.5.1.  Simple Policy Management
  contents:
  - "3.6.5.1.  Simple Policy Management\n   The basic aims of this specification are:\n\
    \   -  to require less manual configuration than today, and\n   -  to satisfy\
    \ the requirements for both easy handling and maximum\n      control.  That is:\n\
    \      -  All the information should be available,\n      -  but should not be\
    \ visible except for when necessary.\n      -  Policies themselves should be advertised\
    \ and not only the\n         result of policy, and\n      -  policy-conflict resolution\
    \ must be provided.\n   R(35)  The routing system must provide management of the\
    \ system by\n          means of policies.  For example, policies that can be\n\
    \          expressed in terms of the business and services implemented on\n  \
    \        the network and reflect the operation of the network in terms\n     \
    \     of the services affected.\n                Editors' Note: This requirement\
    \ is optimistic in that it\n                implies that it is possible to get\
    \ operators to\n                cooperate even if it is seen by them to be against\
    \ their\n                business practices.\n   R(36)  The distribution of policies\
    \ must be amenable to scoping to\n          protect proprietary policies that\
    \ are not relevant beyond the\n          local set of domains.\n"
- title: 3.6.5.2.  Startup and Maintenance of Routers
  contents:
  - "3.6.5.2.  Startup and Maintenance of Routers\n   A major problem in today's networks\
    \ is the need to perform initial\n   configuration on routers from a local interface\
    \ before a remote\n   management system can take over.  It is not clear that this\
    \ imposes\n   any requirements on the routing architecture beyond what is needed\n\
    \   for a ZeroConf host.\n   Similarly, maintenance and upgrade of routers can\
    \ cause major\n   disruptions to the network routing because the routing system\
    \ and\n   management of routers is not organized to minimize such disruption.\n\
    \   Some improvements have been made, such as graceful restart mechanisms\n  \
    \ in protocols, but more needs to be done.\n   R(37)  The routing system and routers\
    \ should provide mechanisms that\n          minimize the disruption to the network\
    \ caused by maintenance\n          and upgrades of software and hardware.  This\
    \ requirement\n          recognizes that some of the capabilities needed are outside\n\
    \          the scope of the routing architecture (e.g., minimum impact\n     \
    \     software upgrade).\n"
- title: 3.6.6.  Provability
  contents:
  - "3.6.6.  Provability\n   R(38)  The routing system and its component protocols\
    \ must be\n          demonstrated to be locally convergent under the permitted\n\
    \          range of parameter settings and policy options that the\n         \
    \ operator(s) can select.\n   There are various methods for demonstration and\
    \ proof that include,\n   but are not limited to: mathematical proof, heuristic,\
    \ and pattern\n   recognition.  No requirement is made on the method used for\n\
    \   demonstrating local convergence properties.\n   R(39)  Routing protocols employed\
    \ by the routing system and the\n          overall routing system should be resistant\
    \ to bad routing\n          policy decisions made by operators.\n   Tools are\
    \ needed to check compatibility of routing policies.  While\n   these tools are\
    \ not part of the routing architecture, the mechanisms\n   to support such tools\
    \ are.\n   Routing policies are compatible if their interaction does not cause\n\
    \   instability.  A domain or group of domains in a system is defined as\n   being\
    \ convergent, either locally or globally, if and only if, after\n   an exchange\
    \ of routing information, routing tables reach a stable\n   state that does not\
    \ change until the routing policies or the topology\n   changes again.\n   To\
    \ achieve the above-mentioned goals:\n   R(40)  The routing system must provide\
    \ a mechanism to publish and\n          communicate policies so that operational\
    \ coordination and\n          fault isolation are possible.\n   Tools are required\
    \ that verify the stability characteristics of the\n   routing system in specified\
    \ parts of the Internet.  The tools should\n   be efficient (fast) and have a\
    \ broad scope of operation (check large\n   portions of Internet).  While these\
    \ tools are not part of the\n   architecture, developing them is in the interest\
    \ of the architecture\n   and should be defined as a Routing Research Group activity\
    \ while\n   research on the architecture is in progress.\n   Tools analyzing routing\
    \ policies can be applied statically or\n   (preferably) dynamically.  A dynamic\
    \ solution requires tools that can\n   be used for run time checking for oscillations\
    \ that arise from policy\n   conflicts.  Research is needed to find an efficient\
    \ solution to the\n   dynamic checking of oscillations.\n"
- title: 3.6.7.  Traffic Engineering
  contents:
  - "3.6.7.  Traffic Engineering\n   The ability to do traffic engineering and to\
    \ get the feedback from\n   the network to enable traffic engineering should be\
    \ included in the\n   future domain architecture.  Though traffic engineering\
    \ has many\n   definitions, it is, at base, another alternative or extension for\
    \ the\n   path selection mechanisms of the routing system.  No fundamental\n \
    \  changes to the requirements are needed, but the iterative processes\n   involved\
    \ in traffic engineering may require some additional\n   capabilities and state\
    \ in the network.\n   Traffic engineering typically involves a combination of\
    \ off-line\n   network planning and administrative control functions in which\
    \ the\n   expected and measured traffic flows are examined, resulting in\n   changes\
    \ to static configurations and policies in the routing system.\n   During operations,\
    \ these configurations control the actual flow of\n   traffic and affect the dynamic\
    \ path selection mechanisms; the results\n   are measured and fed back into further\
    \ rounds of network planning.\n"
- title: 3.6.7.1.  Support for, and Provision of, Traffic Engineering Tools
  contents:
  - "3.6.7.1.  Support for, and Provision of, Traffic Engineering Tools\n   At present,\
    \ there is an almost total lack of effective traffic\n   engineering tools, whether\
    \ in real time for network control or off-\n   line for network planning.  The\
    \ routing system should encourage the\n   provision of such tools.\n   R(41) \
    \ The routing system must generate statistical and accounting\n          information\
    \ in such a way that traffic engineering and network\n          planning tools\
    \ can be used in both real-time and off-line\n          planning and management.\n"
- title: 3.6.7.2.  Support of Multiple Parallel Paths
  contents:
  - "3.6.7.2.  Support of Multiple Parallel Paths\n   R(42)  The routing system must\
    \ support the controlled distribution\n          over multiple links or paths\
    \ of traffic toward the same\n          destination.  This applies to domains\
    \ with two or more\n          connections to the same neighbor domain, and to\
    \ domains with\n          connections to more than one neighbor domain.  The paths\
    \ need\n          not have the same metric.\n   R(43)  The routing system must\
    \ support forwarding over multiple\n          parallel paths when available. \
    \ This support should extend to\n          cases where the offered traffic is\
    \ known to exceed the\n          available capacity of a single link, and to the\
    \ cases where\n          load is to be shared over paths for cost or resiliency\n\
    \          reasons.\n   R(44)  Where traffic is forwarded over multiple parallel\
    \ paths, the\n          routing system must, so far as is possible, avoid the\n\
    \          reordering of packets in individual micro-flows.\n   R(45)  The routing\
    \ system must have mechanisms to allow the traffic\n          to be reallocated\
    \ back onto a single path when multiple paths\n          are not needed.\n"
- title: 3.6.7.3.  Peering Support
  contents:
  - "3.6.7.3.  Peering Support\n   R(46)  The routing system must support peer-level\
    \ connectivity as\n          well as hierarchical connections between domains.\n\
    \   The network is becoming increasingly complex, with private peering\n   arrangements\
    \ set up between providers at every level of the hierarchy\n   of service providers\
    \ and even by certain large enterprises, in the\n   form of dedicated extranets.\n\
    \   R(47)  The routing system must facilitate traffic engineering of peer\n  \
    \        routes so that traffic can be readily constrained to travel as\n    \
    \      the network operators desire, allowing optimal use of the\n          available\
    \ connectivity.\n"
- title: 3.6.8.  Support for Middleboxes
  contents:
  - "3.6.8.  Support for Middleboxes\n   One of our assumptions is that NATs and other\
    \ middle-boxes such as\n   firewalls, web proxies, and address family translators\
    \ (e.g., IPv4 to\n   IPv6) are here to stay.\n   R(48)  The routing system should\
    \ work in conjunction with middle-\n          boxes, e.g., NAT, to aid in bi-directional\
    \ connectivity\n          without compromising the additional opacity and privacy\
    \ that\n          the middle-boxes offer.\n   This problem is closely analogous\
    \ to the abstraction problem, which\n   is already under discussion for the interchange\
    \ of routing\n   information between domains.\n"
- title: 3.7.  Performance Requirements
  contents:
  - "3.7.  Performance Requirements\n   Over the past several years, the performance\
    \ of the routing system\n   has frequently been discussed.  The requirements that\
    \ derive from\n   those discussions are listed below.  The specific values for\
    \ these\n   performance requirements are left for further discussion.\n   R(49)\
    \  The routing system must support domains of at least N systems.\n          A\
    \ system is taken to mean either an individual router or a\n          domain.\n\
    \   R(50)  Local convergence should occur within T units of time.\n   R(51)  The\
    \ routing system must be measurably reliable.  The measure\n          of reliability\
    \ remains a research question.\n   R(52)  The routing system must be locally stable\
    \ to a measured\n          degree.  The degree of measurability remains a research\
    \ issue.\n   R(53)  The routing system must be globally stable to a measured\n\
    \          degree.  The degree of measurability remains a research issue.\n  \
    \ R(54)  The routing system should scale to an indefinitely large\n          number\
    \ of domains.\n   There has been very little data or statistical evidence for\
    \ many of\n   the performance claims made in the past.  In recent years, several\n\
    \   efforts have been initiated to gather data and do the analyses\n   required\
    \ to make scientific assessments of performance issues and\n   requirements. \
    \ In order to complete this section of the requirements\n   analysis, the data\
    \ and analyses from these studies needs to be\n   gathered and collated into this\
    \ document.  This work has been started\n   but has yet to be completed.\n   \
    \   Editors' Note: This work was never completed due to corporate\n      reorganizations.\n"
- title: 3.8.  Backward Compatibility (Cutover) and Maintainability
  contents:
  - "3.8.  Backward Compatibility (Cutover) and Maintainability\n   This area poses\
    \ a dilemma.  On one hand, it is an absolute\n   requirement that:\n   R(55) \
    \ The introduction of the routing system must not require any\n          flag\
    \ days.\n   R(56)  The network currently in place must continue to run at least\n\
    \          as well as it does now while the new network is being\n          installed\
    \ around it.\n   However, at the same time, it is also an requirement that:\n\
    \   R(57)  The new architecture must not be limited by the restrictions\n    \
    \      that plague today's network.\n   It has to be admitted that R(57) is not\
    \ a well-defined requirement,\n   because we have not fully articulated what the\
    \ restrictions might be.\n   Some of these restrictions can be derived by reading\
    \ the discussions\n   for the positive requirements above.  It would be a useful\
    \ exercise\n   to explicitly list all the restrictions and irritations with which\
    \ we\n   wish to do away.  Further, it would be useful to determine if these\n\
    \   restrictions can currently be removed at a reasonable cost or whether\n  \
    \ we are actually condemned to live with them.\n   Those restrictions cannot be\
    \ allowed to become permanent baggage on\n   the new architecture.  If they do,\
    \ the effort to create a new system\n   will come to naught.  It may, however,\
    \ be necessary to live with some\n   of them temporarily for practical reasons\
    \ while providing an\n   architecture that will eventually allow them to be removed.\
    \  The last\n   three requirements have significance not only for the transition\n\
    \   strategy but also for the architecture itself.  They imply that it\n   must\
    \ be possible for an internet such as today's BGP-controlled\n   network, or one\
    \ of its ASs, to exist as a domain within the new FDR.\n"
- title: 3.9.  Security Requirements
  contents:
  - "3.9.  Security Requirements\n   As previously discussed, one of the major changes\
    \ that has overtaken\n   the Internet since its inception is the erosion of trust\
    \ between end\n   users making use of the net, between those users and the suppliers\
    \ of\n   services, and between the multiplicity of providers.  Hence,\n   security,\
    \ in all its aspects, will be much more important in the FDR.\n   It must be possible\
    \ to secure the routing communication.\n   R(58)  The communicating entities must\
    \ be able to identify who sent\n          and who received the information (authentication).\n\
    \   R(59)  The communicating entities must be able to verify that the\n      \
    \    information has not been changed on the way (integrity).\n   Security is\
    \ more important in inter-domain routing where the operator\n   has no control\
    \ over the other domains, than in intra-domain routing\n   where all the links\
    \ and the nodes are under the administration of the\n   operator and can be expected\
    \ to share a trust relationship.  This\n   property of intra-domain trust, however,\
    \ should not be taken for\n   granted:\n   R(60)  Routing communications must\
    \ be secured by default, but an\n          operator must have the option to relax\
    \ this requirement within\n          a domain where analysis indicates that other\
    \ means (such as\n          physical security) provide an acceptable alternative.\n\
    \   R(61)  The routing communication mechanism must be robust against\n      \
    \    denial-of-service attacks.\n   R(62)  It should be possible to verify that\
    \ the originator of the\n          information was authorized to generate the\
    \ information.\n   Further considerations that may impose further requirements\
    \ include:\n   -  whether no one else but the intended recipient is able to access\n\
    \      (privacy) or understand (confidentiality) the information,\n   -  whether\
    \ it is possible to verify that all the information has been\n      received and\
    \ that the two parties agree on what was sent\n      (validation and non-repudiation),\n\
    \   -  whether there is a need to separate security of routing from\n      security\
    \ of forwarding, and\n   -  whether traffic flow security is needed (i.e., whether\
    \ there is\n      value in concealing who can connect to whom, and what volumes\
    \ of\n      data are exchanged).\n   Securing the BGP session, as done today,\
    \ only secures the exchange of\n   messages from the peering domain, not the content\
    \ of the information.\n   In other words, we can confirm that the information\
    \ we got is what\n   our neighbor really sent us, but we do not know whether or\
    \ not this\n   information (that originated in some remote domain) is true.\n\
    \   A decision has to be made on whether to rely on chains of trust (we\n   trust\
    \ our peers who trust their peers who..), or whether we also need\n   authentication\
    \ and integrity of the information end-to-end.  This\n   information includes\
    \ both routes and addresses.  There has been\n   interest in having digital signatures\
    \ on originated routes as well as\n   countersignatures by address authorities\
    \ to confirm that the\n   originator has authority to advertise the prefix.  Even\
    \ understanding\n   who can confirm the authority is non-trivial, as it might\
    \ be the\n   provider who delegated the prefix (with a whole chain of authority\n\
    \   back to ICANN) or it may be an address registry.  Where a prefix\n   delegated\
    \ by a provider is being advertised through another provider\n   as in multi-homing,\
    \ both may have to be involved to confirm that the\n   prefix may be advertised\
    \ through the provider who doesn't have any\n   interest in the prefix!\n   R(63)\
    \  The routing system must cooperate with the security policies\n          of\
    \ middle-boxes whenever possible.\n   This is likely to involve further requirements\
    \ for abstraction of\n   information.  For example, a firewall that is seeking\
    \ to minimize\n   interchange of information that could lead to a security breach.\
    \  The\n   effect of such changes on the end-to-end principle should be\n   carefully\
    \ considered as discussed in [Blumenthal01].\n   R(64)  The routing system must\
    \ be capable of complying with local\n          legal requirements for interception\
    \ of communication.\n"
- title: 3.10.  Debatable Issues
  contents:
  - "3.10.  Debatable Issues\n   This section covers issues that need to be considered\
    \ and resolved in\n   deciding on a Future Domain Routing architecture.  While\
    \ they can't\n   be described as requirements, they do affect the types of solution\n\
    \   that are acceptable.  The discussions included below are very open-\n   ended.\n"
- title: 3.10.1.  Network Modeling
  contents:
  - "3.10.1.  Network Modeling\n   The mathematical model that underlies today's routing\
    \ system uses a\n   graph representation of the network.  Hosts, routers, and\
    \ other\n   processing boxes are represented by nodes and communications links\
    \ by\n   arcs.  This is a topological model in that routing does not need to\n\
    \   directly model the physical length of the links or the position of\n   the\
    \ nodes; the model can be transformed to provide a convenient\n   picture of the\
    \ network by adjusting the lengths of the arcs and the\n   layout of the nodes.\
    \  The connectivity is preserved and routing is\n   unaffected by this transformation.\n\
    \   The routing algorithms in traditional routing protocols utilize a\n   small\
    \ number of results from graph theory.  It is only recently that\n   additional\
    \ results have been employed to support constraint-based\n   routing for traffic\
    \ engineering.\n   The naturalness of this network model and the \"fit\" of the\
    \ graph\n   theoretical methods may have tended to blind us to alternative\n \
    \  representations and inhibited us from seeking alternative strands of\n   theoretical\
    \ thinking that might provide improved results.\n   We should not allow this habitual\
    \ behavior to stop us from looking\n   for alternative representations and algorithms;\
    \ topological\n   revolutions are possible and allowed, at least in theory.\n"
- title: 3.10.2.  System Modeling
  contents:
  - "3.10.2.  System Modeling\n   The assumption that object modeling of a system\
    \ is an essential first\n   step to creating a new system is still novel in this\
    \ context.\n   Frequently, the object modeling effort becomes an end in itself\
    \ and\n   does not lead to system creation.  But there is a balance, and a lot\n\
    \   that can be discovered in an ongoing effort to model a system such as\n  \
    \ the Future Domain Routing system.  It is recommended that this\n   process be\
    \ included in the requirements.  It should not, however, be\n   a gating event\
    \ to all other work.\n   Some of the most important realizations will occur during\
    \ the process\n   of determining the following:\n   -  Object classification\n\
    \   -  Relationships and containment\n   -  Roles and Rules\n"
- title: 3.10.3.  One, Two, or Many Protocols
  contents:
  - "3.10.3.  One, Two, or Many Protocols\n   There has been a lot of discussion of\
    \ whether the FDR protocol\n   solution should consist of one (probably new) protocol,\
    \ two (intra-\n   and inter-domain) protocols, or many protocols.  While it might\
    \ be\n   best to have one protocol that handles all situations, this seems\n \
    \  improbable.  On the other hand, maintaining the \"strict\" division\n   evident\
    \ in the network today between the IGP and EGP may be too\n   restrictive an approach.\
    \  Given this, and the fact that there are\n   already many routing protocols\
    \ in use, the only possible answer seems\n   to be that the architecture should\
    \ support many protocols.  It\n   remains an open issue, one for the solution,\
    \ to determine if a new\n   protocol needs to be designed in order to support\
    \ the highest goals\n   of this architecture.  The expectation is that a new protocol\
    \ will be\n   needed.\n"
- title: 3.10.4.  Class of Protocol
  contents:
  - "3.10.4.  Class of Protocol\n   If a new protocol is required to support the FDR\
    \ architecture, the\n   question remains open as to what kind of protocol this\
    \ ought to be.\n   It is our expectation that a map distribution protocol will\
    \ be\n   required to augment the current path-vector protocol and shortest\n \
    \  path first protocols.\n"
- title: 3.10.5.  Map Abstraction
  contents:
  - "3.10.5.  Map Abstraction\n   Assuming that a map distribution protocol, as defined\
    \ in [RFC1992] is\n   required, what are the requirements on this protocol?  If\
    \ every\n   detail is advertised throughout the Internet, there will be a lot\
    \ of\n   information.  Scalable solutions require abstraction.\n   -  If we summarize\
    \ too much, some information will be lost on the\n      way.\n   -  If we summarize\
    \ too little, then more information than required is\n      available, contributing\
    \ to scaling limitations.\n   -  One can allow more summarization, if there also\
    \ is a mechanism to\n      query for more details within policy limits.\n   -\
    \  The basic requirement is not that the information shall be\n      advertised,\
    \ but rather that the information shall be available to\n      those who need\
    \ it.  We should not presuppose a solution where\n      advertising is the only\
    \ possible mechanism.\n"
- title: 3.10.6.  Clear Identification for All Entities
  contents:
  - "3.10.6.  Clear Identification for All Entities\n   As in all other fields, the\
    \ words used to refer to concepts and to\n   describe operations about routing\
    \ are important.  Rather than\n   describe concepts using terms that are inaccurate\
    \ or rarely used in\n   the real world of networking, it is necessary to make\
    \ an effort to\n   use the correct words.  Many networking terms are used casually,\
    \ and\n   the result is a partial or incorrect understanding of the underlying\n\
    \   concept.  Entities such as nodes, interfaces, subnetworks, tunnels,\n   and\
    \ the grouping concepts such as ASs, domains, areas, and regions,\n   need to\
    \ be clearly identified and defined to avoid confusion.\n   There is also a need\
    \ to separate identifiers (what or who) from\n   locators (where) from routes\
    \ (how to reach).\n      Editors' Note: Work was undertaken in the shim6 working\
    \ group of\n      the IETF on this sort of separation.  This work needs to be\
    \ taken\n      into account in any new routing architecture.\n"
- title: 3.10.7.  Robustness and Redundancy
  contents:
  - "3.10.7.  Robustness and Redundancy\n   The routing association between two domains\
    \ should survive even if\n   some individual connection between two routers goes\
    \ down.\n   The \"session\" should operate between logical \"routing entities\"\
    \ on\n   each domain side, and not necessarily be bound to individual routers\n\
    \   or addresses.  Such a logical entity can be physically distributed\n   over\
    \ multiple network elements.  Or, it can reside in a single\n   router, which\
    \ would default to the current situation.\n"
- title: 3.10.8.  Hierarchy
  contents:
  - "3.10.8.  Hierarchy\n   A more flexible hierarchy with more levels and recursive\
    \ groupings in\n   both upward and downward directions allows more structured\
    \ routing.\n   The consequence is that no single level will get too big for routers\n\
    \   to handle.\n   On the other hand, it appears that the real-world Internet\
    \ is\n   becoming less hierarchical, so that it will be increasingly difficult\n\
    \   to use hierarchy to control scaling.\n   Note that groupings can look different\
    \ depending on which aspect we\n   use to define them.  A Diffserv area, an MPLS\
    \ domain, a trusted\n   domain, a QoS area, a multicast domain, etc., do not always\
    \ coincide;\n   nor are they strict hierarchical subsets of each other.  The basic\n\
    \   distinction at each level is \"this grouping versus everything\n   outside\"\
    .\n"
- title: 3.10.9.  Control Theory
  contents:
  - "3.10.9.  Control Theory\n   Is it possible to apply a control theory framework\
    \ to analyze the\n   stability of the control system of the whole network domain,\
    \ with\n   regard to, e.g., convergence speed and the frequency response, and\n\
    \   then use the results from that analysis to set the timers and other\n   protocol\
    \ parameters?\n   Control theory could also play a part in QoS routing, by modifying\n\
    \   current link-state protocols with link costs dependent on load and\n   feedback.\
    \  Control theory is often used to increase the stability of\n   dynamic systems.\n\
    \   It might be possible to construct a new, totally dynamic routing\n   protocol\
    \ solely on a control theoretic basis, as opposed to the\n   current protocols\
    \ that are based in graph theory and static in\n   nature.\n"
- title: 3.10.10.  Byzantium
  contents:
  - "3.10.10.  Byzantium\n   Is solving the Byzantine Generals problem a requirement?\
    \  This is the\n   problem of reaching a consensus among distributed units if\
    \ some of\n   them give misleading answers.  The current intra-domain routing\n\
    \   system is, at one level, totally intolerant of misleading\n   information.\
    \  However, the effect of different sorts of misleading or\n   incorrect information\
    \ has vastly varying results, from total collapse\n   to purely local disconnection\
    \ of a single domain.  This sort of\n   behavior is not very desirable.\n   There\
    \ are, possibly, other network robustness issues that must be\n   researched and\
    \ resolved.\n"
- title: 3.10.11.  VPN Support
  contents:
  - "3.10.11.  VPN Support\n   Today, BGP is also used for VPNs, for example, as described\
    \ in RFC\n   4364 [RFC4364].\n   Internet routing and VPN routing have different\
    \ purposes and most\n   often exchange different information between different\
    \ devices.  Most\n   Internet routers do not need to know VPN-specific information.\
    \  The\n   concepts should be clearly separated.\n   But when it comes to the\
    \ mechanisms, VPN routing can share the same\n   protocol as ordinary Internet\
    \ routing; it can use a separate instance\n   of the same protocol or it can use\
    \ a different protocol.  All\n   variants are possible and have their own merits.\
    \  These requirements\n   are silent on this issue.\n"
- title: 3.10.12.  End-to-End Reliability
  contents:
  - "3.10.12.  End-to-End Reliability\n   The existing Internet architecture neither\
    \ requires nor provides end-\n   to-end reliability of control information dissemination.\
    \  There is,\n   however, already a requirement for end-to-end reliability of\
    \ control\n   information distribution, i.e., the ends of the VPN established\
    \ need\n   to have an acknowledgment of the success in setting up the VPN.\n \
    \  While it is not necessarily the function of a routing architecture to\n   provide\
    \ end-to-end reliability for this kind of purpose, we must be\n   clear that end-to-end\
    \ reliability becomes a requirement if the\n   network has to support such reliable\
    \ control signaling.  There may be\n   other requirements that derive from requiring\
    \ the FDR to support\n   reliable control signaling.\n"
- title: 3.10.13.  End-to-End Transparency
  contents:
  - "3.10.13.  End-to-End Transparency\n   The introduction of private addressing\
    \ schemes, Network Address\n   Translators, and firewalls has significantly reduced\
    \ the end-to-end\n   transparency of the network.  In many cases, the network\
    \ is also no\n   longer symmetric, so that communication between two addresses\
    \ is\n   possible if the communication session originates from one end but not\n\
    \   from the other.  This impedes the deployment of new peer-to-peer\n   services\
    \ and some \"push\" services where the server in a client-\n   server arrangement\
    \ originates the communication session.  Whether a\n   new routing system either\
    \ can or should seek to restore this\n   transparency is an open issue.\n   A\
    \ related issue is the extent to which end-user applications should\n   seek to\
    \ control the routing of communications to the rest of the\n   network.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   We address security issues in the individual\
    \ requirements.  We do\n   require that the architecture and protocols developed\
    \ against this\n   set of requirements be \"secure\".  Discussion of specific\
    \ security\n   issues can be found in the following sections:\n   o  Group A:\
    \ Routing System Security - Section 2.1.9\n   o  Group A: End Host Security -\
    \ Section 2.1.10\n   o  Group A: Routing Information Policies - Section 2.1.11.1\n\
    \   o  Group A: Abstraction - Section 2.1.16\n   o  Group A: Robustness - Section\
    \ 2.1.18\n   o  Group B: Protection against Denial-of-Service and Other Security\n\
    \      Attacks - Section 3.2.3.8\n   o  Group B: Commercial Service Providers\
    \ - Section 3.3.1.1\n   o  Group B: The Federated Environment - Section 3.4.1\n\
    \   o  Group B: Path Advertisement - Section 3.6.2.2\n   o  Group B: Security\
    \ Requirements - Section 3.9\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This document is a set of requirements from which\
    \ a new routing and\n   addressing architecture may be developed.  From that architecture,\
    \ a\n   new protocol, or set of protocols, may be developed.\n   While this note\
    \ poses no new tasks for IANA, the architecture and\n   protocols developed from\
    \ this document probably will have issues to\n   be dealt with by IANA.\n"
- title: 6.  Acknowledgments
  contents:
  - "6.  Acknowledgments\n   This document is the combined effort of two groups in\
    \ the IRTF.\n   Group A, which was formed by the IRTF Routing Research chairs,\
    \ and\n   Group B, which was self-formed and later was folded into the IRTF\n\
    \   Routing Research Group.  Each group has it own set of\n   acknowledgments.\n\
    \   Group A Acknowledgments\n      This originated in the IRTF Routing Research\
    \ Group's sub-group on\n      Inter-domain routing requirements.  The members\
    \ of the group were:\n           Abha Ahuja                      Danny McPherson\n\
    \           J. Noel Chiappa                 David Meyer\n           Sean Doran\
    \                      Mike O'Dell\n           JJ Garcia-Luna-Aceves         \
    \  Andrew Partan\n           Susan Hares                     Radia Perlman\n \
    \          Geoff Huston                    Yakov Rehkter\n           Frank Kastenholz\
    \                John Scudder\n           Dave Katz                       Curtis\
    \ Villamizar\n           Tony Li                         Dave Ward\n      We also\
    \ appreciate the comments and review received from Ran\n      Atkinson, Howard\
    \ Berkowitz, Randy Bush, Avri Doria, Jeffery Haas,\n      Dmitri Krioukov, Russ\
    \ White, and Alex Zinin.  Special thanks to\n      Yakov Rehkter for contributing\
    \ text and to Noel Chiappa.\n   Group B Acknowledgments\n      The document is\
    \ derived from work originally produced by Babylon.\n      Babylon was a loose\
    \ association of individuals from academia,\n      service providers, and vendors\
    \ whose goal was to discuss issues in\n      Internet routing with the intention\
    \ of finding solutions for those\n      problems.\n      The individual members\
    \ who contributed materially to this document\n      are: Anders Bergsten, Howard\
    \ Berkowitz, Malin Carlzon, Lenka Carr\n      Motyckova, Elwyn Davies, Avri Doria,\
    \ Pierre Fransson, Yong Jiang,\n      Dmitri Krioukov, Tove Madsen, Olle Pers,\
    \ and Olov Schelen.\n      Thanks also go to the members of Babylon and others\
    \ who did\n      substantial reviews of this material.  Specifically, we would\
    \ like\n      to acknowledge the helpful comments and suggestions of the\n   \
    \   following individuals: Loa Andersson, Tomas Ahlstrom, Erik Aman,\n      Thomas\
    \ Eriksson, Niklas Borg, Nigel Bragg, Thomas Chmara, Krister\n      Edlund, Owe\
    \ Grafford, Torbjorn Lundberg, Jeremy Mineweaser,\n      Jasminko Mulahusic, Florian-Daniel\
    \ Otel, Bernhard Stockman, Tom\n      Worster, and Roberto Zamparo.\n      In\
    \ addition, the authors are indebted to the folks who wrote all\n      the references\
    \ we have consulted in putting this paper together.\n      This includes not only\
    \ the references explicitly listed below, but\n      also those who contributed\
    \ to the mailing lists we have been\n      participating in for years.\n     \
    \ The editors thank Lixia Zhang, as IRSG document shepherd, for her\n      help\
    \ and her perseverance, without which this document would never\n      have been\
    \ published.\n      Finally, it is the editors who are responsible for any lack\
    \ of\n      clarity, any errors, glaring omissions or misunderstandings.\n"
- title: 7.  Informative References
  contents:
  - "7.  Informative References\n   [Blumenthal01]\n              Blumenthal, M. and\
    \ D. Clark, \"Rethinking the design of the\n              Internet: The end to\
    \ end arguments vs. the brave new\n              world\", May 2001,\n        \
    \      <http://dspace.mit.edu/handle/1721.1/1519>.\n   [Broido02]\n          \
    \    Broido, A., Nemeth, E., Claffy, K., and C. Elves,\n              \"Internet\
    \ Expansion, Refinement and Churn\", February 2002.\n   [CIDR]     Telcordia Technologies,\
    \ \"CIDR Report\",\n              <http://www.cidr-report.org/>.\n   [Chiappa02]\n\
    \              Chiappa, N., \"A New IP Routing and Addressing\n              Architecture\"\
    , July 1991,\n              <http://ana-3.lcs.mit.edu/~jnc/nimrod/overview.txt>.\n\
    \   [Clark91]  Clark, D., \"Quote reportedly from IETF Plenary\n             \
    \ discussion\", 1991.\n   [DiffservAR]\n              Seddigh, N., Nandy, B.,\
    \ and J. Heinanen, \"An Assured Rate\n              Per-Domain Behaviour for Differentiated\
    \ Services\", Work\n              in Progress, July 2001.\n   [DiffservVW]\n \
    \             Jacobson, V., Nichols, K., and K. Poduri, \"The 'Virtual\n     \
    \         Wire' Per-Domain Behavior\", Work in Progress, July 2000.\n   [Griffin99]\n\
    \              Griffin, T. and G. Wilfong, \"An Analysis of BGP\n            \
    \  Convergence Properties\", SIGCOMM 1999.\n   [ISO10747]\n              ISO/IEC,\
    \ \"Protocol for Exchange of Inter-Domain Routeing\n              Information\
    \ among Intermediate Systems to Support\n              Forwarding of ISO 8473\
    \ PDUs\", International Standard\n              10747 ISO/IEC JTC 1, Switzerland,\
    \ 1993.\n   [InferenceSRLG]\n              Papadimitriou, D., Poppe, F., J. Jones,\
    \ J., S.\n              Venkatachalam, S., S. Dharanikota, S., Jain, R., Hartani,\n\
    \              R., and D. Griffith, \"Inference of Shared Risk Link\n        \
    \      Groups\", Work in Progress, November 2001.\n   [ODell01]  O'Dell, M., \"\
    Private Communication\", 2001.\n   [RFC1126]  Little, M., \"Goals and functional\
    \ requirements for inter-\n              autonomous system routing\", RFC 1126,\
    \ October 1989.\n   [RFC1726]  Partridge, C. and F. Kastenholz, \"Technical Criteria\
    \ for\n              Choosing IP The Next Generation (IPng)\", RFC 1726,\n   \
    \           Dec 1994.\n   [RFC1992]  Castineyra, I., Chiappa, N., and M. Steenstrup,\
    \ \"The\n              Nimrod Routing Architecture\", RFC 1992, August 1996.\n\
    \   [RFC2071]  Ferguson, P. and H. Berkowitz, \"Network Renumbering\n        \
    \      Overview: Why would I want it and what is it anyway?\",\n             \
    \ RFC 2071, January 1997.\n   [RFC2072]  Berkowitz, H., \"Router Renumbering Guide\"\
    , RFC 2072,\n              January 1997.\n   [RFC3031]  Rosen, E., Viswanathan,\
    \ A., and R. Callon, \"Multiprotocol\n              Label Switching Architecture\"\
    , RFC 3031, January 2001.\n   [RFC3221]  Huston, G., \"Commentary on Inter-Domain\
    \ Routing in the\n              Internet\", RFC 3221, December 2001.\n   [RFC3260]\
    \  Grossman, D., \"New Terminology and Clarifications for\n              Diffserv\"\
    , RFC 3260, April 2002.\n   [RFC3344]  Perkins, C., \"IP Mobility Support.\",\
    \ RFC 3344,\n              August 2002.\n   [RFC3345]  McPherson, D., Gill, V.,\
    \ Walton, D., and A. Retana,\n              \"Border Gateway Protocol (BGP) Persistent\
    \ Route\n              Oscillation Condition\", RFC 3345, August 2002.\n   [RFC3471]\
    \  Berger, L., \"Generalized Multi-Protocol Label Switching\n              (GMPLS)\
    \ Signaling Functional Description\", RFC 3471,\n              January 2003.\n\
    \   [RFC3963]  Devarapalli, V., Wakikawa, R., Petrescu, A., and P.\n         \
    \     Thubert, \"Network Mobility (NEMO) Basic Support Protocol\",\n         \
    \     RFC 3963, January 2005.\n   [RFC4364]  Rosen, E. and Y. Rekhter, \"BGP/MPLS\
    \ IP Virtual Private\n              Networks (VPNs)\", RFC 4364, February 2006.\n\
    \   [RFC5773]  Davies, E. and A. Doria, \"Analysis of Inter-Domain Routing\n \
    \             Requirements and History\", RFC 5773, February 2010.\n   [Wroclawski95]\n\
    \              Wroclowski, J., \"The Metanet White Paper - Workshop on\n     \
    \         Research Directions for the Next Generation Internet\",\n          \
    \    1995.\n   [netconf-charter]\n              Internet Engineering Task Force,\
    \ \"IETF Network\n              Configuration working group\", 2005,\n       \
    \       <http://www.ietf.org/html.charters/netconf-charter.html>.\n   [policy-charter02]\n\
    \              Internet Engineering Task Force, \"IETF Policy working\n      \
    \        group\", 2002, <http://www.ietf.org/html.charters/OLD/\n            \
    \  policy-charter.html>.\n   [rap-charter02]\n              Internet Engineering\
    \ Task Force, \"IETF Resource Allocation\n              Protocol working group\"\
    , 2002,\n              <http://www.ietf.org/html.charters/OLD/rap-charter.html>.\n\
    \   [snmpconf-charter02]\n              Internet Engineering Task Force, \"IETF\
    \ Configuration\n              management with SNMP working group\", 2002, <http://\n\
    \              www.ietf.org/html.charters/OLD/snmpconf-charter.html>.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Avri Doria\n   LTU\n   Lulea  971 87\n   Sweden\n   Phone:\
    \ +46 73 277 1788\n   EMail: avri@ltu.se\n   Elwyn B. Davies\n   Folly Consulting\n\
    \   Soham, Cambs\n   UK\n   Phone: +44 7889 488 335\n   EMail: elwynd@dial.pipex.com\n\
    \   Frank Kastenholz\n   BBN Technologies\n   10 Moulton St.\n   Cambridge, MA\
    \  02183\n   USA\n   Phone: +1 617 873 8047\n   EMail: frank@bbn.com\n"
