- title: __initial_text__
  contents:
  - '          Session Initiation Protocol (SIP) Recording Metadata

    '
- title: Abstract
  contents:
  - "Abstract\n   Session recording is a critical requirement in many communications\n\
    \   environments, such as call centers and financial trading\n   organizations.\
    \  In some of these environments, all calls must be\n   recorded for regulatory,\
    \ compliance, and consumer protection reasons.\n   The recording of a session\
    \ is typically performed by sending a copy\n   of a media stream to a recording\
    \ device.  This document describes the\n   metadata model as viewed by the Session\
    \ Recording Server (SRS) and\n   the recording metadata format.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7865.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Terminology .....................................................3\n  \
    \ 3. Definitions .....................................................4\n   4.\
    \ Metadata Model ..................................................5\n   5. Recording\
    \ Metadata Format from SRC to SRS .......................6\n      5.1. XML Data\
    \ Format ............................................7\n           5.1.1. Namespace\
    \ ...........................................7\n           5.1.2. 'recording'\
    \ Element .................................7\n   6. Recording Metadata Classes\
    \ ......................................7\n      6.1. Recording Session ..........................................8\n\
    \           6.1.1. Attributes ..........................................8\n  \
    \         6.1.2. Linkages ............................................9\n    \
    \  6.2. Communication Session Group ................................9\n      \
    \     6.2.1. Attributes .........................................10\n        \
    \   6.2.2. Linkages ...........................................10\n      6.3.\
    \ Communication Session .....................................11\n           6.3.1.\
    \ Attributes .........................................11\n           6.3.2. Linkages\
    \ ...........................................12\n      6.4. CS-RS Association\
    \ .........................................13\n           6.4.1. Attributes .........................................14\n\
    \           6.4.2. Linkages ...........................................14\n  \
    \    6.5. Participant ...............................................14\n    \
    \       6.5.1. Attributes .........................................15\n      \
    \     6.5.2. Linkages ...........................................15\n      6.6.\
    \ Participant-CS Association ................................16\n           6.6.1.\
    \ Attributes .........................................17\n           6.6.2. Linkages\
    \ ...........................................17\n      6.7. Media Stream ..............................................18\n\
    \           6.7.1. Attributes .........................................18\n  \
    \         6.7.2. Linkages ...........................................19\n    \
    \  6.8. Participant-Stream Association ............................19\n      \
    \     6.8.1. Attributes .........................................20\n        \
    \   6.8.2. Linkages ...........................................20\n      6.9.\
    \ Syntax of XML Elements for Date and Time ..................21\n      6.10. Format\
    \ of Unique ID ......................................21\n      6.11. Metadata\
    \ Version Indicator ...............................21\n   7. Recording Metadata\
    \ Snapshot Request Format .....................22\n   8. SIP Recording Metadata\
    \ Examples ................................23\n      8.1. Complete SIP Recording\
    \ Metadata Example ...................23\n      8.2. Partial Update of Recording\
    \ Metadata XML Body .............25\n   9. XML Schema Definition for Recording\
    \ Metadata ...................26\n   10. Security Considerations .......................................30\n\
    \   11. IANA Considerations ...........................................31\n  \
    \    11.1. SIP Recording Metadata Schema Registration ...............31\n   12.\
    \ References ....................................................31\n      12.1.\
    \ Normative References .....................................31\n      12.2. Informative\
    \ References ...................................32\n   Acknowledgements ..................................................34\n\
    \   Authors' Addresses ................................................34\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Session recording is a critical requirement in many communications\n\
    \   environments, such as call centers and financial trading\n   organizations.\
    \  In some of these environments, all calls must be\n   recorded for regulatory,\
    \ compliance, and consumer protection reasons.\n   The recording of a session\
    \ is typically performed by sending a copy\n   of a media stream to a recording\
    \ device.  This document focuses on\n   the recording metadata, which describes\
    \ the Communication Session\n   (CS).  The document describes a metadata model\
    \ as viewed by the\n   Session Recording Server (SRS) and the recording metadata\
    \ format, the\n   requirements for which are described in [RFC6341] and the\n\
    \   architecture for which is described in [RFC7245].\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\
    \  This\n   document only uses these key words when referencing normative\n  \
    \ statements in existing RFCs.\n"
- title: 3.  Definitions
  contents:
  - "3.  Definitions\n   Metadata model:  A metadata model is an abstract representation\
    \ of\n      metadata using a Unified Modeling Language (UML) [UML] class\n   \
    \   diagram.\n   Metadata classes:  Each block in the model represents a class.\
    \  A\n      class is a construct that is used as a blueprint to create\n     \
    \ instances (called \"objects\") of itself.  The description of each\n      class\
    \ also has a representation of its attributes in a second\n      compartment below\
    \ the class name.\n   Attributes:  Attributes represent the elements listed in\
    \ each of the\n      classes.  The attributes of a class are listed in the second\n\
    \      compartment below the class name.  Each instance of a class\n      conveys\
    \ values for the attributes of that class.  These values get\n      added to the\
    \ recording's metadata.\n   Linkages:  Linkages represent the relationship between\
    \ the classes in\n      the model.  Each linkage represents a logical connection\
    \ between\n      classes (or objects) in class diagrams (or object diagrams).\
    \  The\n      linkages used in the metadata model of this document are\n     \
    \ associations.\n   This document also refers to the terminology defined in [RFC6341].\n"
- title: 4.  Metadata Model
  contents:
  - "4.  Metadata Model\n   Metadata is the information that describes recorded media\
    \ and the CS\n   to which they relate.  The diagram below shows a model for metadata\n\
    \   as viewed by an SRS.\n             +-------------------------------+ 1..*\n\
    \             |    Recording Session (RS)     |----+\n             +-------------------------------+\
    \    |\n                   | 1..*          | 1..*         |\n                \
    \   |               |              |\n                   |               | 0..*\
    \         |\n                   |        +-----------------+   |\n   +------------+\
    \  |        | Communication   |   |\n   | CS-RS      |  |        | Session Group\
    \   |   |\n   | Association|--+        |  (CS-Group)     |   |\n   |         \
    \   |  |        +-----------------+   |\n   +------------+  |              | 0..1\
    \          |\n                   |              |               |\n          \
    \         | 0..*         | 1..*          |\n   +-------------------------------+\
    \              |\n   |   Communication Session (CS)  |              |\n   |  \
    \                             |              |\n   +-------------------------------+\
    \              |\n         | 1..*                   | 0..1          |\n   +-----+\
    \                        |               |\n   |     | 0..*                  \
    \ | 0..*          | 0..*\n   | +-------------+ receives +----------------+  |\n\
    \   | | Participant |----------|  Media Stream  |--+\n   | |             |0..*\
    \  0..*|                |\n   | |             |          |                |\n\
    \   | |             |          |                |\n   | |             |  sends\
    \   |                |\n   | |             |----------|                |\n   |\
    \ |             |1.*   0..*|                |\n   | +-------------+          +----------------+\n\
    \   |        |                        |\n   |        |                       \
    \ |\n   |        +------------------------+------------+\n   |               \
    \                               |\n   |                                      \
    \        |\n   |           +------------------+    +----------------------+\n\
    \   |           |Participant-CS    |    |  Participant-Stream  |\n   +-----------|\
    \  Association     |    |    Association       |\n               |           \
    \       |    |                      |\n               +------------------+   \
    \ +----------------------+\n   The metadata model is a class diagram in UML. \
    \ The model describes\n   the structure of metadata in general by showing the\
    \ classes, their\n   attributes, and the relationships among the classes.  Each\
    \ block in\n   the model above represents a class.  The linkages between the classes\n\
    \   represent the relationships, which can be associations or\n   compositions.\
    \  The metadata is conveyed from the Session Recording\n   Client (SRC) to the\
    \ SRS.\n   The model allows metadata describing CSs to be communicated to the\n\
    \   SRS as a series of snapshots, each representing the state as seen by\n   a\
    \ single SRC at a particular instant in time.  Metadata changes from\n   one snapshot\
    \ to another reflect changes in what is being recorded.\n   For example, if a\
    \ participant joins a conference, then the SRC sends\n   the SRS a snapshot of\
    \ metadata having that participant information\n   (with attributes like (Name,\
    \ AoR) tuple and associate-time).  (Note:\n   \"AoR\" means \"Address-of-Record\"\
    .)\n   Some of the metadata is not required to be conveyed explicitly from\n \
    \  the SRC to the SRS, if it can be obtained contextually by the SRS\n   (e.g.,\
    \ from SIP or Session Description Protocol (SDP) signaling).\n   For example,\
    \ the 'label' attribute within the 'stream' XML element\n   references an SDP\
    \ \"a=label\" attribute that identifies an m-line\n   within the Recording Session\
    \ (RS) SDP.  The SRS would learn the media\n   properties from the media line.\n"
- title: 5.  Recording Metadata Format from SRC to SRS
  contents:
  - "5.  Recording Metadata Format from SRC to SRS\n   This section gives an overview\
    \ of the recording metadata format.\n   Some data from the metadata model is assumed\
    \ to be made available to\n   the SRS through SDP [RFC4566], and therefore this\
    \ data is not\n   represented in the XML document format specified in this document.\n\
    \   SDP attributes describe different media formats like audio and video.\n  \
    \ The other metadata attributes, such as participant details, are\n   represented\
    \ in a new recording-specific XML document of type\n   'application/rs-metadata+xml'.\
    \  The SDP \"label\" attribute [RFC4574]\n   provides an identifier by which a\
    \ metadata XML document can refer to\n   a specific media description in the SDP\
    \ sent from the SRC to the SRS.\n   The XML document format can be used to represent\
    \ either the complete\n   metadata or a partial update to the metadata.  The latter\
    \ includes\n   only elements that have changed compared to the previously reported\n\
    \   metadata.\n"
- title: 5.1.  XML Data Format
  contents:
  - "5.1.  XML Data Format\n   Every recording metadata XML document sent from the\
    \ SRC to the SRS\n   contains a 'recording' element.  The 'recording' element\
    \ acts as a\n   container for all other elements in this XML document.  A 'recording'\n\
    \   object is an XML document.  It has the XML declaration and contains\n   an\
    \ encoding declaration in the XML declaration, e.g.,\n   \"<?xml version=\"1.0\"\
    \ encoding=\"UTF-8\"?>\".  If the charset parameter\n   of the MIME content type\
    \ declaration is present and it is different\n   from the encoding declaration,\
    \ the charset parameter takes\n   precedence.\n   Every application conforming\
    \ to this specification MUST accept the\n   UTF-8 character encoding to ensure\
    \ minimal interoperability.\n   Syntax and semantic errors in an XML document\
    \ should be reported to\n   the originator, using application-specific mechanisms.\n"
- title: 5.1.1.  Namespace
  contents:
  - "5.1.1.  Namespace\n   With the following URN, this document defines a new namespace\
    \ URI for\n   elements defined herein:\n   urn:ietf:params:xml:ns:recording:1\n"
- title: 5.1.2.  'recording' Element
  contents:
  - "5.1.2.  'recording' Element\n   The 'recording' element MUST contain an xmlns\
    \ namespace attribute\n   with a value of urn:ietf:params:xml:ns:recording:1.\
    \  Exactly one\n   'recording' element MUST be present in every recording metadata\
    \ XML\n   document.\n   A 'recording' element MAY contain a 'dataMode' element\
    \ indicating\n   whether the XML document is a complete document or a partial\
    \ update.\n   If no 'dataMode' element is present, then the default value is\n\
    \   \"complete\".\n"
- title: 6.  Recording Metadata Classes
  contents:
  - "6.  Recording Metadata Classes\n   This section describes each class of the metadata\
    \ model and the\n   attributes of each class.  This section also describes how\
    \ different\n   classes are linked and the XML element for each of them.\n"
- title: 6.1.  Recording Session
  contents:
  - "6.1.  Recording Session\n   +-------------------------------+\n   | Recording\
    \ Session (RS)        |\n   +-------------------------------+\n   |          \
    \                     | 1..*     0..*\n   |     start-time                |--------------\
    \ Media Stream\n   |     end-time                  |\n   |                   \
    \            |\n   |                               |\n   +-------------------------------+\n\
    \         | 1..*           | 1..*\n         |                |\n         | 0..*\
    \           | 0..*\n    Communication    Communication\n    Session (CS)     Session\
    \ Group (CS-Group)\n   Each instance of an RS class, namely the RS object, represents\
    \ a SIP\n   session created between an SRC and SRS for the purpose of recording\n\
    \   a CS.\n   The RS object is represented in the XML schema using the 'recording'\n\
    \   element, which in turn relies on the SIP/SDP session with which the\n   XML\
    \ document is associated to provide the attributes of the RS\n   element.\n"
- title: 6.1.1.  Attributes
  contents:
  - "6.1.1.  Attributes\n   An RS class has the following attributes:\n   o  start-time\
    \ - Represents the start time of an RS object.\n   o  end-time - Represents the\
    \ end time of an RS object.\n   'start-time' and 'end-time' attribute values are\
    \ derivable from the\n   Date header (if present in the SIP message) in the RS.\
    \  In cases\n   where the Date header is not present, 'start-time' is derivable\
    \ from\n   the time at which the SRS receives the notification of the SIP\n  \
    \ message to set up the RS, and 'end-time' is derivable from the time\n   at which\
    \ the SRS receives a disconnect on the RS SIP dialog.\n"
- title: 6.1.2.  Linkages
  contents:
  - "6.1.2.  Linkages\n   Each instance of an RS has:\n   o  Zero or more instances\
    \ of CS-Groups.\n   o  Zero or more instances of CS objects.\n   o  Zero or more\
    \ instances of MediaStream objects.\n   Zero instances of CSs and CS-Groups in\
    \ a 'recording' element are\n   allowed to accommodate persistent recording scenarios.\
    \  A persistent\n   RS is a SIP dialog that is set up between the SRC and the\
    \ SRS, even\n   before any CS is set up.  The metadata sent from the SRC to the\
    \ SRS\n   when the persistent RS SIP dialog is set up may not have any CS (and\n\
    \   the related CS-Group) elements in the XML, as there may not be a\n   session\
    \ that is associated to the RS yet.  For example, a phone\n   acting as an SRC\
    \ can set up an RS with the SRS, possibly even before\n   the phone is part of\
    \ a CS.  Once the phone joins a CS, the same RS\n   would be used to convey the\
    \ CS metadata.\n"
- title: 6.2.  Communication Session Group
  contents:
  - "6.2.  Communication Session Group\n    Recording Session (RS)\n             \
    \ | 1..*\n              |\n              | 0..*\n   +-------------------------------+\n\
    \   | Communication Session         |\n   |   Group (CS-Group)            |\n\
    \   +-------------------------------+\n   |  group_id                     |\n\
    \   |  associate-time               |\n   |  disassociate-time            |\n\
    \   |                               |\n   +-------------------------------+\n\
    \              | 0..1\n              |\n              | 1..*\n    Communication\
    \ Session (CS)\n   One instance of a CS-Group class, namely the CS-Group object,\n\
    \   provides association or grouping of all related CSs.  For example, in\n  \
    \ a contact center flow, a call can get transferred to multiple agents.\n   Each\
    \ of these can trigger the setup of a new CS.  In cases where the\n   SRC knows\
    \ the related CSs, it can group them using the CS-Group\n   element.  The CS-Group\
    \ object is represented in the XML schema using\n   the 'group' element.\n"
- title: 6.2.1.  Attributes
  contents:
  - "6.2.1.  Attributes\n   A CS-Group has the following attributes:\n   o  group_id\
    \ - This attribute groups different CSs that are related.\n      The SRC (or the\
    \ SRS) is responsible for ensuring the uniqueness of\n      'group_id' in cases\
    \ where multiple SRCs interact with the same\n      SRS.  The mechanism by which\
    \ the SRC groups the CS is outside the\n      scope of this document.\n   o  associate-time\
    \ - This is the time when a grouping is formed.  The\n      rules that determine\
    \ how a grouping of different CS objects is\n      done by the SRC are outside\
    \ the scope of this document.\n   o  disassociate-time - 'disassociate-time' for\
    \ the CS-Group is\n      calculated by the SRC as the time when the grouping ends.\n"
- title: 6.2.2.  Linkages
  contents:
  - "6.2.2.  Linkages\n   The linkages between a CS-Group class and other classes\
    \ are\n   associations.  A CS-Group is associated with the RS and CS in the\n\
    \   following manner:\n   o  There are one or more RS objects per CS-Group.\n\
    \   o  Each CS-Group object has to be associated with one or more RSs.\n     \
    \ Here, each RS can be set up by the potentially different SRCs.\n   o  There\
    \ are one or more CSs per CS-Group (for example, in cases\n      where the call\
    \ is transferred).  A CS cannot be associated with\n      more than one CS-Group.\n"
- title: 6.3.  Communication Session
  contents:
  - "6.3.  Communication Session\n   Recording               Communication\n   Session\
    \ (RS)       Session Group (CS-Group)\n      | 1..*                 | 0..1\n \
    \     |                      |\n      | 0..*                 | 1..*\n   +-------------------------------+\n\
    \   |   Communication Session (CS)  |\n   +-------------------------------+\n\
    \   |   session_id                  |\n   |   sipSessionID                |\n\
    \   |   reason                      |\n   |   group-ref                   |\n\
    \   |   start-time                  |\n   |   stop-time                   |\n\
    \   +-------------------------------+\n      |                      |\n      |\
    \ 0..*                 | 0..1\n      |                      |\n      | 0..*  \
    \               | 0..*\n   Participant              Media Stream\n   A CS class\
    \ and its object in the metadata model represent the CS and\n   its properties\
    \ as seen by the SRC.  The CS object is represented in\n   the XML schema using\
    \ the 'session' element.\n"
- title: 6.3.1.  Attributes
  contents:
  - "6.3.1.  Attributes\n   A CS class has the following attributes:\n   o  session_id\
    \ - This attribute is used to uniquely identify an\n      instance of a CS object,\
    \ namely the 'session' XML element within\n      the metadata XML document.  'session_id'\
    \ is generated using the\n      rules mentioned in Section 6.10.\n   o  reason\
    \ - This represents the reason why a CS was terminated.  The\n      value for\
    \ this attribute is derived from the SIP Reason header\n      [RFC3326] of the\
    \ CS.  There MAY be multiple instances of the\n      'reason' XML element inside\
    \ a 'session' element.  The 'reason' XML\n      element has 'protocol' as an attribute,\
    \ which indicates the\n      protocol from which the reason string is derived.\
    \  The default\n      value for the 'protocol' attribute is \"SIP\".  The 'reason'\
    \ element\n      can be derived from a SIP Reason header in the CS.\n   o  sipSessionID\
    \ - This attribute carries a SIP Session-ID as defined\n      in [SessionID].\
    \  Each CS object can have zero or more\n      'sipSessionID' elements.  More\
    \ than one 'sipSessionID' attribute\n      may be present in a CS.  For example,\
    \ if three participants -- A,\n      B, and C -- are in a conference that has\
    \ a focus acting as an SRC,\n      the metadata sent from the SRC to the SRS will\
    \ likely have three\n      'sipSessionID' elements that correspond to the SIP\
    \ dialogs that\n      the focus has with each of the three participants.\n   o\
    \  group-ref - A 'group-ref' attribute MAY be present to indicate the\n      group\
    \ (identified by 'group_id') to which the enclosing session\n      belongs.\n\
    \   o  start-time - This optional attribute represents the start time of\n   \
    \   the CS as seen by the SRC.\n   o  stop-time - This optional attribute represents\
    \ the stop time of\n      the CS as seen by the SRC.\n   This document does not\
    \ specify attributes relating to what should\n   happen to a recording of a CS\
    \ after it has been delivered to the SRS\n   (e.g., how long to retain the recording,\
    \ what access controls to\n   apply).  The SRS is assumed to behave in accordance\
    \ with its local\n   policy.  The ability of the SRC to influence this policy\
    \ is outside\n   the scope of this document.  However, if there are implementations\n\
    \   where the SRC desires to specify its own policy preferences, this\n   information\
    \ could be sent as extension data attached to the CS.\n"
- title: 6.3.2.  Linkages
  contents:
  - "6.3.2.  Linkages\n   A CS is linked to the CS-Group, participant, MediaStream\
    \ (MS), and\n   RS classes by using the association relationship.  The association\n\
    \   between the CS and the participant allows the following:\n   o  A CS will\
    \ have zero or more participants.\n   o  A participant is associated with zero\
    \ or more CSs.  This includes\n      participants who are not directly part of\
    \ any CS.  An example of\n      such a case is participants in a pre-mixed media\
    \ stream.  The SRC\n      may have knowledge of such participants but not have\
    \ any signaling\n      relationship with them.  This might arise if one participant\
    \ in a\n      CS is a conference focus.  To summarize, even if the SRC does not\n\
    \      have direct signaling relationships with all participants in a CS,\n  \
    \    it should nevertheless create a participant object for each\n      participant\
    \ that it knows about.\n   o  The model also allows participants in a CS that\
    \ are not\n      participants in the media.  An example is the identity of a Third\n\
    \      Party Call Control (3pcc) that has initiated a CS to two or more\n    \
    \  participants in the CS.  Another example is the identity of a\n      conference\
    \ focus.  Of course, a focus is probably in the media,\n      but since it may\
    \ only be there as a mixer, it may not report\n      itself as a participant in\
    \ any of the media streams.\n   The association between the CS and the media stream\
    \ allows the\n   following:\n   o  A CS will have zero or more streams.\n   o\
    \  A stream can be associated with at most one CS.  A stream in a\n      persistent\
    \ RS is not required to be associated with any CS before\n      the CS is created,\
    \ and hence the zero association is allowed.\n   The association between the CS\
    \ and the RS allows the following:\n   o  Each instance of an RS has zero or more\
    \ instances of CS objects.\n   o  Each CS has to be associated with one or more\
    \ RSs.  Each RS can be\n      potentially set up by different SRCs.\n"
- title: 6.4.  CS-RS Association
  contents:
  - "6.4.  CS-RS Association\n                        1..*             0..*\n    \
    \          Recording                       Communication\n                Session\
    \ ----------+---------- Session\n                                  |\n       \
    \                           |\n                                  |\n         \
    \             +-----------------------+\n                      | CS-RS Association\
    \     |\n                      |                       |\n                   \
    \   +-----------------------+\n                      | associate-time        |\n\
    \                      | disassociate-time     |\n                      | session_id\
    \            |\n                      +-----------------------+\n   The CS-RS\
    \ Association class describes the association of a CS to an\n   RS for a period\
    \ of time.  A single CS may be associated with\n   different RSs (perhaps by different\
    \ SRCs) and may be associated and\n   dissociated several times.\n   The CS-RS\
    \ Association class is represented in XML using the\n   'sessionrecordingassoc'\
    \ XML element.\n"
- title: 6.4.1.  Attributes
  contents:
  - "6.4.1.  Attributes\n   The CS-RS Association class has the following attributes:\n\
    \   o  associate-time - associate-time is calculated by the SRC as the\n     \
    \ time it sees a CS associated to an RS.\n   o  disassociate-time - disassociate-time\
    \ is calculated by the SRC as\n      the time it sees a CS disassociate from an\
    \ RS.\n   o  session_id - Each instance of this class MUST have a 'session_id'\n\
    \      attribute that identifies the CS to which this association\n      belongs.\n"
- title: 6.4.2.  Linkages
  contents:
  - "6.4.2.  Linkages\n   The CS-RS Association class is linked to the CS and RS classes.\n"
- title: 6.5.  Participant
  contents:
  - "6.5.  Participant\n    Communication Session (CS)\n              | 0..*\n   \
    \           |\n              | 0..*\n   +-------------------------------+\n  \
    \ |          Participant          |\n   +-------------------------------+\n  \
    \ |  nameID                       |\n   |  participant_id               |\n  \
    \ |                               |\n   +-------------------------------+\n  \
    \         | 0..*       1..* |\n   receives|                 |sends\n         \
    \  | 0..*       0..* |\n              Media Stream\n   A participant class and\
    \ its objects have information about a device\n   that is part of a CS and/or\
    \ contributes/consumes media stream(s)\n   belonging to a CS.\n   The participant\
    \ object is represented in the XML schema using the\n   'participant' element.\n"
- title: 6.5.1.  Attributes
  contents:
  - "6.5.1.  Attributes\n   A participant class has two attributes:\n   o  nameID\
    \ - This attribute is a list of (Name, AoR) tuples.  An AoR\n      (Section 6\
    \ of [RFC3261]) can be either a SIP/SIPS/tel URI (\"SIPS\"\n      means \"SIP\
    \ Secure\"; the tel URI is discussed in [RFC3966]), a\n      Fully Qualified Domain\
    \ Name (FQDN), or an IP address.  For\n      example, the AoR may be drawn from\
    \ the From header field or the\n      P-Asserted-Identity header [RFC3325] field.\
    \  The SRC's local\n      policy is used to decide where to draw the AoR from.\
    \  The Name\n      parameter represents the participant name (SIP display name)\
    \ or\n      dialed number (when known).  Multiple tuples are allowed for cases\n\
    \      where a participant has more than one AoR.  For example, a\n      P-Asserted-Identity\
    \ header can have both SIP and tel URIs.\n   o  participant_id - This attribute\
    \ is used to identify the\n      'participant' XML element within the XML document.\
    \  It is\n      generated using the rules mentioned in Section 6.10.  This\n \
    \     attribute MUST be used for all references to a participant within\n    \
    \  a CS-Group, and MAY be used to reference the same participant more\n      globally.\n\
    \   This document does not specify other attributes relating to\n   participants\
    \ (e.g., participant role, participant type).  An SRC that\n   has information\
    \ regarding these attributes can provide this\n   information as part of extension\
    \ data to the 'participant' XML\n   element from the SRC to the SRS.\n"
- title: 6.5.2.  Linkages
  contents:
  - "6.5.2.  Linkages\n   The participant class is linked to the MS and CS classes\
    \ by using an\n   association relationship.  The association between the participant\n\
    \   and the MS allows the following:\n   o  A participant will receive zero or\
    \ more media streams.\n   o  A participant will send zero or more media streams.\
    \  (The same\n      participant provides multiple streams, e.g., audio and video.)\n\
    \   o  A media stream will be received by zero or more participants.  It\n   \
    \   is possible, though perhaps unlikely, that a stream is generated\n      but\
    \ sent only to the SRC and SRS, not to any participant -- for\n      example,\
    \ in conferencing where all participants are on hold and\n      the SRC is collocated\
    \ with the focus.  Also, a media stream may be\n      received by multiple participants\
    \ (e.g., \"whisper\" calls, side\n      conversations).\n   o  A media stream\
    \ will be sent by one or more participants (pre-mixed\n      streams).\n   An\
    \ example of a case where a participant receives zero or more\n   streams is where\
    \ a supervisor may have a side conversation with an\n   agent while the agent\
    \ converses with a customer.\n"
- title: 6.6.  Participant-CS Association
  contents:
  - "6.6.  Participant-CS Association\n                         1..*             0..*\n\
    \         Communication\n               Session -----------+----------- Participant\n\
    \                                  |\n                                  |\n  \
    \                                |\n                    +---------------------------+\n\
    \                    | Participant-CS Association|\n                    |    \
    \                       |\n                    |                           |\n\
    \                    +---------------------------+\n                    | associate-time\
    \            |\n                    | disassociate-time         |\n          \
    \          | param                     |\n                    | participant_id\
    \            |\n                    | session_id                |\n          \
    \          +---------------------------+\n   The Participant-CS Association class\
    \ describes the association of a\n   participant to a CS for a period of time.\
    \  A participant may be\n   associated to and dissociated from a CS several times\
    \ (for example,\n   connecting to a conference, then disconnecting, then connecting\n\
    \   again).\n   The Participant-CS Association object is represented in the XML\n\
    \   schema using the 'participantsessionassoc' element.\n"
- title: 6.6.1.  Attributes
  contents:
  - "6.6.1.  Attributes\n   The Participant-CS Association class has the following\
    \ attributes:\n   o  associate-time - associate-time is calculated by the SRC\
    \ as the\n      time it sees a participant associated to a CS.\n   o  disassociate-time\
    \ - disassociate-time is calculated by the SRC as\n      the time it sees a participant\
    \ disassociate from a CS.  It is\n      possible that a given participant can\
    \ have multiple associate\n      times / disassociate times within a given communication\
    \ session.\n   o  param - The capabilities here are those that are indicated in\
    \ the\n      Contact header as defined in Section 9 of [RFC3840].  For example,\n\
    \      in a CS (which can be a conference), you can have participants who\n  \
    \    are playing the role of \"focus\".  These participants do not\n      contribute\
    \ to media in the CS; however, they switch the media\n      received from one\
    \ participant to every other participant in the\n      CS.  Indicating the capabilities\
    \ of the participants (here,\n      \"focus\") would be useful for the recorder\
    \ to learn about these\n      kinds of participants.  The capabilities are represented\
    \ using the\n      'param' XML element in the metadata.  The 'param' XML element\n\
    \      encoding defined in [RFC4235] is used to represent the capability\n   \
    \   attributes in metadata.  Each participant may have zero or more\n      capabilities.\
    \  A participant may use different capabilities,\n      depending on the role\
    \ it plays at a particular instance -- for\n      example, if a participant moves\
    \ across different CSs (e.g., due to\n      transfer) or is simultaneously present\
    \ in different CSs with\n      different roles.\n   o  participant_id - This attribute\
    \ identifies the participant to\n      which this association belongs.\n   o \
    \ session_id - This attribute identifies the session to which this\n      association\
    \ belongs.\n"
- title: 6.6.2.  Linkages
  contents:
  - "6.6.2.  Linkages\n   The Participant-CS Association class is linked to the participant\
    \ and\n   CS classes.\n"
- title: 6.7.  Media Stream
  contents:
  - "6.7.  Media Stream\n                                      Participant\n     \
    \                             | 0..*       1..* |\n                          receives|\
    \                 |sends\n                                  | 0..*       0..*\
    \ |\n                              +-------------------------+\n             \
    \                 |        Media Stream     |\n                   0..1  0..* +-------------------------+\n\
    \    Communication ------------|                         |\n          Session\
    \             |  label                  |\n                              |  content-type\
    \           |\n                              |  stream_id              |\n   \
    \                           |  session_id             |\n                    \
    \          +-------------------------+\n                                     \
    \ 0..* |\n                                           |\n                     \
    \                      |\n                                      1..* |\n     \
    \                                Recording Session\n   A MS class (and its objects)\
    \ has the properties of media as seen by\n   the SRC and sent to the SRS.  Different\
    \ snapshots of MS objects may\n   be sent whenever there is a change in media\
    \ (e.g., a direction\n   change, like pause/resume, codec change, and/or participant\
    \ change).\n   The MS object is represented in the XML schema using the 'stream'\n\
    \   element.\n"
- title: 6.7.1.  Attributes
  contents:
  - "6.7.1.  Attributes\n   A MS class has the following attributes:\n   o  label\
    \ - The 'label' attribute within the 'stream' XML element\n      references an\
    \ SDP \"a=label\" attribute that identifies an m-line\n      within the RS SDP.\
    \  That m-line carries the media stream from the\n      SRC to the SRS.\n   o\
    \  content-type - The content of a MS element will be described in\n      terms\
    \ of the \"a=content\" attribute defined in Section 5 of\n      [RFC4796].  If\
    \ the SRC wishes to convey the content-type to the\n      SRS, it does so by including\
    \ an \"a=content\" attribute with the\n      m-line in the RS SDP.\n   o  stream_id\
    \ - Each 'stream' element has a unique 'stream_id'\n      attribute that helps\
    \ to uniquely identify the stream.  This\n      identifier is generated using\
    \ the rules mentioned in Section 6.10.\n   o  session_id - This attribute associates\
    \ the stream with a specific\n      'session' element.\n   The metadata model\
    \ can include media streams that are not being\n   delivered to the SRS.  For\
    \ example, an SRC offers audio and video\n   towards an SRS that accepts only\
    \ audio in response.  The metadata\n   snapshots sent from the SRC to the SRS\
    \ can continue to indicate the\n   changes to the video stream as well.\n"
- title: 6.7.2.  Linkages
  contents:
  - "6.7.2.  Linkages\n   A MS class is linked to the participant and CS classes by\
    \ using the\n   association relationship.  Details regarding associations with\
    \ the\n   participant are described in Section 6.5.  Details regarding\n   associations\
    \ with the CS are mentioned in Section 6.3.\n"
- title: 6.8.  Participant-Stream Association
  contents:
  - "6.8.  Participant-Stream Association\n   +-------------------------+\n   | Participant-Stream\
    \      |\n   | Association             |\n   +-------------------------+   +-----------Participant\n\
    \   | associate-time          |   |       0..* | 1..* |\n   | disassociate-time\
    \       |---+    receives|      |sends\n   | send                    |   |   \
    \    0..* | 0..* |\n   | recv                    |   |            |      |\n \
    \  | participant_id          |   |            |      |\n   +-------------------------+\
    \   |            |      |\n                                 +-----------Media\
    \ Stream\n   A Participant-Stream Association class describes the association\
    \ of a\n   participant to a MS for a period of time, as a sender or as a\n   receiver,\
    \ or both.\n   This class is represented in XML using the 'participantstreamassoc'\n\
    \   element.\n"
- title: 6.8.1.  Attributes
  contents:
  - "6.8.1.  Attributes\n   A Participant-Stream Association class has the following\
    \ attributes:\n   o  associate-time - This attribute indicates the time a participant\n\
    \      started contributing to a MS.\n   o  disassociate-time - This attribute\
    \ indicates the time a\n      participant stopped contributing to a MS.\n   o\
    \  send - This attribute indicates whether a participant is\n      contributing\
    \ to a stream or not.  This attribute has a value that\n      points to a stream\
    \ represented by its unique_id.  The presence of\n      this attribute indicates\
    \ that a participant is contributing to a\n      stream.  If a participant stops\
    \ contributing to a stream due to\n      changes in a CS, a snapshot MUST be sent\
    \ from the SRC to the SRS\n      with no 'send' element for that stream.\n   o\
    \  recv - This attribute indicates whether a participant is receiving\n      a\
    \ media stream or not.  This attribute has a value that points to\n      a stream\
    \ represented by its unique_id.  The presence of this\n      attribute indicates\
    \ that a participant is receiving a stream.  If\n      the participant stops receiving\
    \ a stream due to changes in a CS\n      (like hold), a snapshot MUST be sent\
    \ from the SRC to the SRS with\n      no 'recv' element for that stream.\n   o\
    \  participant_id - This attribute points to the participant with\n      which\
    \ a 'stream' element is associated.\n   The 'participantstreamassoc' XML element\
    \ is used to represent a\n   participant association with a stream.  The 'send'\
    \ and 'recv' XML\n   elements MUST be used to indicate whether a participant is\n\
    \   contributing to a stream or receiving a stream.  There MAY be\n   multiple\
    \ instances of the 'send' and 'recv' XML elements inside a\n   'participantstreamassoc'\
    \ element.  If a metadata snapshot is sent\n   with a 'participantstreamassoc'\
    \ element that does not have any 'send'\n   and 'recv' elements, it means that\
    \ the participant is neither\n   contributing to any streams nor receiving any\
    \ streams.\n"
- title: 6.8.2.  Linkages
  contents:
  - "6.8.2.  Linkages\n   The Participant-Stream Association class is linked to the\
    \ participant\n   and MS classes.\n"
- title: 6.9.  Syntax of XML Elements for Date and Time
  contents:
  - "6.9.  Syntax of XML Elements for Date and Time\n   The XML elements 'associate-time',\
    \ 'disassociate-time', 'start-time',\n   and 'stop-time' contain strings representing\
    \ the date and time.  The\n   value of these elements MUST follow the Instant\
    \ Messaging and\n   Presence Protocol (IMPP) date-time format [RFC3339].  Timestamps\
    \ that\n   contain \"T\" or \"Z\" MUST use the capitalized forms.\n   As a security\
    \ measure, the 'timestamp' element MUST be included in\n   all tuples, unless\
    \ the exact time of the status change cannot be\n   determined.\n"
- title: 6.10.  Format of Unique ID
  contents:
  - "6.10.  Format of Unique ID\n   A unique_id is generated in two steps:\n   o \
    \ The Universally Unique Identifier (UUID) is created using any of\n      the\
    \ procedures mentioned in Sections 4.3, 4.4, and 4.5 of\n      [RFC4122].  The\
    \ algorithm MUST ensure that it does not use any\n      potentially personally\
    \ identifying information to generate the\n      UUIDs.  If implementations are\
    \ using a Name-Based UUID as defined\n      in Section 4.3 of [RFC4122], a namespace\
    \ ID generated using the\n      guidance in Section 4.2 or 4.5 of [RFC4122] might\
    \ be a good\n      choice.\n   o  The UUID is encoded using base64 as defined\
    \ in [RFC4648].\n   The above-mentioned unique_id mechanism SHOULD be used for\
    \ each\n   metadata element.  Multiple SRCs can refer to the same element/UUID\n\
    \   (how each SRC learns the UUID here is beyond the scope of this\n   document).\
    \  If two SRCs use the same UUID, they MUST retain the\n   UUID/element mapping.\
    \  If the SRS detects that a UUID is mapped to\n   more than one element at any\
    \ point in time, it MUST treat this as an\n   error.  For example, the SRS may\
    \ choose to reject or ignore the\n   portions of metadata where it detects that\
    \ the same UUID is mapped to\n   an element that is different than the expected\
    \ element (the SRS\n   learns the mapped UUID when it sees an element for the\
    \ first time in\n   a metadata instance).\n"
- title: 6.11.  Metadata Version Indicator
  contents:
  - "6.11.  Metadata Version Indicator\n   The Metadata version is defined to help\
    \ the SRC and SRS know the\n   version of metadata XML schema used.  SRCs and\
    \ SRSs that support this\n   specification MUST use version 1 in the namespace\n\
    \   (urn:ietf:params:xml:ns:recording:1) in all the XML documents.\n   Implementations\
    \ may not interoperate if the version implemented by\n   the sender is not known\
    \ by the receiver.  No negotiation of versions\n   is provided.  The version number\
    \ has no significance, although\n   documents that update or obsolete this document\
    \ (possibly including\n   drafts of such documents) should include a higher version\
    \ number if\n   the metadata XML schema changes.\n"
- title: 7.  Recording Metadata Snapshot Request Format
  contents:
  - "7.  Recording Metadata Snapshot Request Format\n   The SRS can explicitly request\
    \ a metadata snapshot from the SRC.  To\n   request a metadata snapshot, the SRS\
    \ MUST send a SIP request message\n   with an XML document having the namespace\n\
    \   urn:ietf:params:xml:ns:recording:1.  The XML document has the\n   following\
    \ elements:\n   o  A 'requestsnapshot' XML element MUST be present as the top-level\n\
    \      element in the XML document.\n   o  A 'requestreason' XML element that\
    \ indicates the reason (as a\n      string) for requesting the snapshot MAY be\
    \ present as a child XML\n      element of 'requestsnapshot'.\n   The example\
    \ below shows a metadata snapshot request from the SRS.\n   <?xml version=\"1.0\"\
    \ encoding=\"UTF-8\"?>\n     <requestsnapshot xmlns='urn:ietf:params:xml:ns:recording:1'>\n\
    \     <requestreason xml:lang=\"it\">SRS internal error</requestreason>\n   </requestsnapshot>\n\
    \             Example Metadata Snapshot Request from SRS to SRC\n"
- title: 8.  SIP Recording Metadata Examples
  contents:
  - '8.  SIP Recording Metadata Examples

    '
- title: 8.1.  Complete SIP Recording Metadata Example
  contents:
  - "8.1.  Complete SIP Recording Metadata Example\n   The following example provides\
    \ all the tuples involved in the\n   recording metadata XML body.\n   <?xml version=\"\
    1.0\" encoding=\"UTF-8\"?>\n     <recording xmlns='urn:ietf:params:xml:ns:recording:1'>\n\
    \     <datamode>complete</datamode>\n     <group group_id=\"7+OTCyoxTmqmqyA/1weDAg==\"\
    >\n       <associate-time>2010-12-16T23:41:07Z</associate-time>\n       <!-- Standardized\
    \ extension -->\n       <call-center xmlns='urn:ietf:params:xml:ns:callcenter'>\n\
    \             <supervisor>sip:alice@atlanta.com</supervisor>\n       </call-center>\n\
    \       <mydata xmlns='http://example.com/my'>\n             <structure>FOO!</structure>\n\
    \             <whatever>bar</whatever>\n       </mydata>\n     </group>\n    \
    \ <session session_id=\"hVpd7YQgRW2nD22h7q60JQ==\">\n           <sipSessionID>ab30317f1a784dc48ff824d0d3715d86;\n\
    \           remote=47755a9de7794ba387653f2099600ef2</sipSessionID>\n         \
    \  <group-ref>7+OTCyoxTmqmqyA/1weDAg==</group-ref>\n           <!-- Standardized\
    \ extension -->\n       <mydata xmlns='http://example.com/my'>\n             <structure>FOO!</structure>\n\
    \              <whatever>bar</whatever>\n           </mydata>\n     </session>\n\
    \     <participant participant_id=\"srfBElmCRp2QB23b7Mpk0w==\">\n           <nameID\
    \ aor=\"sip:bob@biloxi.com\">\n              <name xml:lang=\"it\">Bob</name>\n\
    \           </nameID>\n           <!-- Standardized extension -->\n          \
    \ <mydata xmlns='http://example.com/my'>\n                   <structure>FOO!</structure>\n\
    \                   <whatever>bar</whatever>\n           </mydata>\n     </participant>\n\
    \     <participant participant_id=\"zSfPoSvdSDCmU3A3TRDxAw==\">\n           <nameID\
    \ aor=\"sip:Paul@biloxi.com\">\n             <name xml:lang=\"it\">Paul</name>\n\
    \           </nameID>\n           <!-- Standardized extension -->\n          \
    \ <mydata xmlns='http://example.com/my'>\n              <structure>FOO!</structure>\n\
    \              <whatever>bar</whatever>\n           </mydata>\n     </participant>\n\
    \     <stream stream_id=\"UAAMm5GRQKSCMVvLyl4rFw==\"\n             session_id=\"\
    hVpd7YQgRW2nD22h7q60JQ==\">\n           <label>96</label>\n     </stream>\n  \
    \   <stream stream_id=\"i1Pz3to5hGk8fuXl+PbwCw==\"\n              session_id=\"\
    hVpd7YQgRW2nD22h7q60JQ==\">\n            <label>97</label>\n     </stream>\n \
    \    <stream stream_id=\"8zc6e0lYTlWIINA6GR+3ag==\"\n              session_id=\"\
    hVpd7YQgRW2nD22h7q60JQ==\">\n           <label>98</label>\n     </stream>\n  \
    \   <stream stream_id=\"EiXGlc+4TruqqoDaNE76ag==\"\n              session_id=\"\
    hVpd7YQgRW2nD22h7q60JQ==\">\n           <label>99</label>\n     </stream>\n  \
    \   <sessionrecordingassoc session_id=\"hVpd7YQgRW2nD22h7q60JQ==\">\n        \
    \           <associate-time>2010-12-16T23:41:07Z</associate-time>\n     </sessionrecordingassoc>\n\
    \     <participantsessionassoc\n          participant_id=\"srfBElmCRp2QB23b7Mpk0w==\"\
    \n          session_id=\"hVpd7YQgRW2nD22h7q60JQ==\">\n           <associate-time>2010-12-16T23:41:07Z</associate-time>\n\
    \     </participantsessionassoc>\n     <participantsessionassoc\n          participant_id=\"\
    zSfPoSvdSDCmU3A3TRDxAw==\"\n          session_id=\"hVpd7YQgRW2nD22h7q60JQ==\"\
    >\n              <associate-time>2010-12-16T23:41:07Z</associate-time>\n     </participantsessionassoc>\n\
    \     <participantstreamassoc\n          participant_id=\"srfBElmCRp2QB23b7Mpk0w==\"\
    >\n              <send>i1Pz3to5hGk8fuXl+PbwCw==</send>\n              <send>UAAMm5GRQKSCMVvLyl4rFw==</send>\n\
    \              <recv>8zc6e0lYTlWIINA6GR+3ag==</recv>\n              <recv>EiXGlc+4TruqqoDaNE76ag==</recv>\n\
    \     </participantstreamassoc>\n     <participantstreamassoc\n          participant_id=\"\
    zSfPoSvdSDCmU3A3TRDxAw==\">\n              <send>8zc6e0lYTlWIINA6GR+3ag==</send>\n\
    \              <send>EiXGlc+4TruqqoDaNE76ag==</send>\n              <recv>UAAMm5GRQKSCMVvLyl4rFw==</recv>\n\
    \              <recv>i1Pz3to5hGk8fuXl+PbwCw==</recv>\n     </participantstreamassoc>\n\
    \   </recording>\n                 Example Metadata Snapshot from SRC to SRS\n"
- title: 8.2.  Partial Update of Recording Metadata XML Body
  contents:
  - "8.2.  Partial Update of Recording Metadata XML Body\n   The following example\
    \ provides a partial update in the recording\n   metadata XML body for the above\
    \ example.  The example has a snapshot\n   that carries the disassociate-time\
    \ for a participant from a session.\n   <?xml version=\"1.0\" encoding=\"UTF-8\"\
    ?>\n     <recording xmlns='urn:ietf:params:xml:ns:recording:1'>\n       <datamode>partial</datamode>\n\
    \         <participant\n           participant_id=\"srfBElmCRp2QB23b7Mpk0w==\"\
    >\n           <nameID aor=\"sip:bob@biloxi.com\">\n                     <name\
    \ xml:lang=\"it\">Bob</name>\n               </nameID>\n         </participant>\n\
    \         <participantsessionassoc\n            participant_id=\"srfBElmCRp2QB23b7Mpk0w==\"\
    \n            session_id=\"hVpd7YQgRW2nD22h7q60JQ==\">\n           <disassociate-time>2010-12-16T23:41:07Z</disassociate-time>\n\
    \         </participantsessionassoc>\n     </recording>\n             Partial\
    \ Update of SIP Recording Example XML Body\n"
- title: 9.  XML Schema Definition for Recording Metadata
  contents:
  - "9.  XML Schema Definition for Recording Metadata\n   This section defines the\
    \ XML schema for the recording metadata\n   document.\n"
- title: <?xml version="1.0" encoding="UTF-8"?>
  contents:
  - "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n   <xs:schema targetNamespace=\"\
    urn:ietf:params:xml:ns:recording:1\"\n      xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
    \n      xmlns:tns=\"urn:ietf:params:xml:ns:recording:1\"\n      elementFormDefault=\"\
    qualified\"\n      attributeFormDefault=\"unqualified\">\n    <!-- This import\
    \ brings in the XML language attribute xml:lang -->\n    <xs:import namespace=\"\
    http://www.w3.org/XML/1998/namespace\"\n                 schemaLocation=\"https://www.w3.org/2001/xml.xsd\"\
    />\n    <xs:element name=\"recording\" type=\"tns:recording\"/>\n    <xs:complexType\
    \ name=\"recording\">\n        <xs:sequence>\n            <xs:element name=\"\
    datamode\" type=\"tns:dataMode\"\n                  minOccurs=\"0\"/>\n      \
    \      <xs:element name=\"group\" type=\"tns:group\"\n                  minOccurs=\"\
    0\" maxOccurs=\"unbounded\"/>\n            <xs:element name=\"session\" type=\"\
    tns:session\"\n                  minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n \
    \           <xs:element name=\"participant\" type=\"tns:participant\"\n      \
    \            minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n            <xs:element\
    \ name=\"stream\" type=\"tns:stream\"\n                  minOccurs=\"0\" maxOccurs=\"\
    unbounded\"/>\n            <xs:element name=\"sessionrecordingassoc\"\n      \
    \            type=\"tns:sessionrecordingassoc\"\n                  minOccurs=\"\
    0\" maxOccurs=\"unbounded\"/>\n            <xs:element name=\"participantsessionassoc\"\
    \n                  type=\"tns:participantsessionassoc\"\n                  minOccurs=\"\
    0\" maxOccurs=\"unbounded\"/>\n            <xs:element name=\"participantstreamassoc\"\
    \n                  type=\"tns:participantstreamassoc\"\n                  minOccurs=\"\
    0\" maxOccurs=\"unbounded\"/>\n            <xs:any namespace='##other'\n     \
    \                minOccurs='0'\n                     maxOccurs='unbounded'\n \
    \                    processContents='lax'/>\n         </xs:sequence>\n    </xs:complexType>\n\
    \    <xs:complexType name=\"group\">\n        <xs:sequence>\n           <xs:element\
    \ name=\"associate-time\" type=\"xs:dateTime\"\n              minOccurs=\"0\"\
    />\n           <xs:element name=\"disassociate-time\" type=\"xs:dateTime\"\n \
    \             minOccurs=\"0\"/>\n          <xs:any namespace='##other'\n     \
    \                minOccurs='0'\n                     maxOccurs='unbounded'\n \
    \                    processContents='lax'/>\n        </xs:sequence>\n       \
    \ <xs:attribute name=\"group_id\" type=\"xs:base64Binary\"\n              use=\"\
    required\"/>\n    </xs:complexType>\n    <xs:complexType name=\"session\">\n \
    \       <xs:sequence>\n           <xs:element name=\"sipSessionID\" type=\"xs:string\"\
    \n                  minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n           <xs:element\
    \ name=\"reason\" type=\"tns:reason\"\n                  minOccurs=\"0\" maxOccurs=\"\
    unbounded\"/>\n           <xs:element name=\"group-ref\" type=\"xs:base64Binary\"\
    \n                  minOccurs=\"0\" maxOccurs=\"1\"/>\n           <xs:element\
    \ name=\"start-time\" type=\"xs:dateTime\"\n                  minOccurs=\"0\"\
    \ maxOccurs=\"1\"/>\n           <xs:element name=\"stop-time\" type=\"xs:dateTime\"\
    \n                  minOccurs=\"0\" maxOccurs=\"1\"/>\n              <xs:any namespace='##other'\n\
    \                     minOccurs='0'\n                     maxOccurs='unbounded'\n\
    \                     processContents='lax'/>\n        </xs:sequence>\n      \
    \  <xs:attribute name=\"session_id\" type=\"xs:base64Binary\"\n              use=\"\
    required\"/>\n    </xs:complexType>\n    <xs:complexType name=\"sessionrecordingassoc\"\
    >\n        <xs:sequence>\n           <xs:element name=\"associate-time\" type=\"\
    xs:dateTime\"\n                  minOccurs=\"0\"/>\n           <xs:element name=\"\
    disassociate-time\" type=\"xs:dateTime\"\n                  minOccurs=\"0\"/>\n\
    \           <xs:any namespace='##other'\n                     minOccurs='0'\n\
    \                     maxOccurs='unbounded'\n                     processContents='lax'/>\n\
    \        </xs:sequence>\n        <xs:attribute name=\"session_id\" type=\"xs:base64Binary\"\
    \n              use=\"required\"/>\n    </xs:complexType>\n    <xs:complexType\
    \ name=\"participant\">\n        <xs:sequence>\n             <xs:element name=\"\
    nameID\" type=\"tns:nameID\"\n                     maxOccurs='unbounded'/>\n \
    \       <xs:any namespace='##other'\n                     minOccurs='0'\n    \
    \                 maxOccurs='unbounded'\n                     processContents='lax'/>\n\
    \        </xs:sequence>\n        <xs:attribute name=\"participant_id\" type=\"\
    xs:base64Binary\"\n              use=\"required\"/>\n    </xs:complexType>\n \
    \   <xs:complexType name=\"participantsessionassoc\">\n        <xs:sequence>\n\
    \        <xs:element name=\"associate-time\" type=\"xs:dateTime\"\n          \
    \        minOccurs=\"0\"/>\n        <xs:element name=\"disassociate-time\" type=\"\
    xs:dateTime\"\n                  minOccurs=\"0\"/>\n        <xs:element name=\"\
    param\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:complexType>\n\
    \                <xs:attribute name=\"pname\" type=\"xs:string\"\n           \
    \       use=\"required\"/>\n                <xs:attribute name=\"pval\" type=\"\
    xs:string\"\n                  use=\"required\"/>\n            </xs:complexType>\n\
    \        </xs:element>\n        <xs:any namespace='##other'\n                minOccurs='0'\n\
    \                maxOccurs='unbounded'\n                processContents='lax'/>\n\
    \        </xs:sequence>\n        <xs:attribute name=\"participant_id\" type=\"\
    xs:base64Binary\"\n              use=\"required\"/>\n        <xs:attribute name=\"\
    session_id\" type=\"xs:base64Binary\"\n              use=\"required\"/>\n    </xs:complexType>\n\
    \    <xs:complexType name=\"participantstreamassoc\">\n        <xs:sequence>\n\
    \            <xs:element name=\"send\" type=\"xs:base64Binary\"\n            \
    \   minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n            <xs:element name=\"\
    recv\" type=\"xs:base64Binary\"\n               minOccurs=\"0\" maxOccurs=\"unbounded\"\
    />\n               <xs:element name=\"associate-time\" type=\"xs:dateTime\"\n\
    \                  minOccurs=\"0\"/>\n            <xs:element name=\"disassociate-time\"\
    \ type=\"xs:dateTime\"\n                  minOccurs=\"0\"/>\n               <xs:any\
    \ namespace='##other'\n                     minOccurs='0'\n                  \
    \   maxOccurs='unbounded'\n                     processContents='lax'/>\n    \
    \    </xs:sequence>\n        <xs:attribute name=\"participant_id\" type=\"xs:base64Binary\"\
    \n              use=\"required\"/>\n    </xs:complexType>\n    <xs:complexType\
    \ name=\"stream\">\n        <xs:sequence>\n           <xs:element name=\"label\"\
    \ type=\"xs:string\"\n               minOccurs=\"0\" maxOccurs=\"1\"/>\n     \
    \       <xs:any namespace='##other'\n                     minOccurs='0'\n    \
    \                 maxOccurs='unbounded'\n                     processContents='lax'/>\n\
    \        </xs:sequence>\n        <xs:attribute name=\"stream_id\" type=\"xs:base64Binary\"\
    \n              use=\"required\"/>\n        <xs:attribute name=\"session_id\"\
    \ type=\"xs:base64Binary\"/>\n    </xs:complexType>\n    <xs:simpleType name=\"\
    dataMode\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration\
    \ value=\"complete\"/>\n                <xs:enumeration value=\"partial\"/>\n\
    \        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"\
    nameID\">\n      <xs:sequence>\n        <xs:element name=\"name\" type =\"tns:name\"\
    \ minOccurs=\"0\"\n                            maxOccurs=\"1\"/>\n      </xs:sequence>\n\
    \      <xs:attribute name=\"aor\" type=\"xs:anyURI\" use=\"required\"/>\n    </xs:complexType>\n\
    \   <xs:complexType name=\"name\">\n    <xs:simpleContent>\n        <xs:extension\
    \ base=\"xs:string\">\n           <xs:attribute ref=\"xml:lang\" use=\"optional\"\
    />\n        </xs:extension>\n    </xs:simpleContent>\n   </xs:complexType>\n \
    \  <xs:complexType name=\"reason\">\n      <xs:simpleContent>\n       <xs:extension\
    \ base=\"xs:string\">\n          <xs:attribute type=\"xs:short\" name=\"cause\"\
    \ use=\"required\"/>\n          <xs:attribute type=\"xs:string\" name=\"protocol\"\
    \ default=\"SIP\"/>\n       </xs:extension>\n      </xs:simpleContent>\n   </xs:complexType>\n\
    \   <xs:element name=\"requestsnapshot\" type=\"tns:requestsnapshot\"/>\n    <xs:complexType\
    \ name=\"requestsnapshot\">\n       <xs:sequence>\n          <xs:element name=\"\
    requestreason\" type=\"tns:name\"\n            minOccurs=\"0\"/>\n          <xs:any\
    \ namespace='##other'\n            minOccurs='0'\n            maxOccurs='unbounded'\n\
    \            processContents='lax'/>\n       </xs:sequence>\n    </xs:complexType>\n"
- title: </xs:schema>
  contents:
  - '</xs:schema>

    '
- title: 10.  Security Considerations
  contents:
  - "10.  Security Considerations\n   This document describes an extensive set of\
    \ metadata that may be\n   recorded by the SRS.  Most of the metadata could be\
    \ considered\n   private data.  The procedures mentioned in the Security\n   Considerations\
    \ section of [RFC7866] MUST be followed by the SRC and\n   the SRS for mutual\
    \ authentication and to protect the content of the\n   metadata in the RS.\n \
    \  An SRC MAY, by policy, choose to limit the parts of the metadata sent\n   to\
    \ the SRS for recording.  Also, the policy of the SRS might not\n   require recording\
    \ all the metadata it receives.  For the sake of data\n   minimization, the SRS\
    \ MUST NOT record additional metadata that is not\n   explicitly required by local\
    \ policy.  Metadata in storage needs to be\n   provided with a level of security\
    \ that is comparable to that of the\n   recording session.\n"
- title: 11.  IANA Considerations
  contents:
  - "11.  IANA Considerations\n   This specification registers a new XML namespace\
    \ and a new XML\n   schema.\n"
- title: 11.1.  SIP Recording Metadata Schema Registration
  contents:
  - "11.1.  SIP Recording Metadata Schema Registration\n   URI: urn:ietf:params:xml:ns:recording:1\n\
    \   Registrant Contact:  IETF SIPREC working group, Ram Mohan R\n      (rmohanr@cisco.com)\n\
    \   XML: The registered XML schema is contained in Section 9.\n   Its first line\
    \ is <?xml version=\"1.0\" encoding=\"UTF-8\"?>, and its\n   last line is </xs:schema>.\n"
- title: 12.  References
  contents:
  - '12.  References

    '
- title: 12.1.  Normative References
  contents:
  - "12.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC3261]  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston,\n    \
    \          A., Peterson, J., Sparks, R., Handley, M., and E.\n              Schooler,\
    \ \"SIP: Session Initiation Protocol\", RFC 3261,\n              DOI 10.17487/RFC3261,\
    \ June 2002,\n              <http://www.rfc-editor.org/info/rfc3261>.\n   [RFC3339]\
    \  Klyne, G. and C. Newman, \"Date and Time on the Internet:\n              Timestamps\"\
    , RFC 3339, DOI 10.17487/RFC3339, July 2002,\n              <http://www.rfc-editor.org/info/rfc3339>.\n\
    \   [RFC3840]  Rosenberg, J., Schulzrinne, H., and P. Kyzivat,\n             \
    \ \"Indicating User Agent Capabilities in the Session\n              Initiation\
    \ Protocol (SIP)\", RFC 3840,\n              DOI 10.17487/RFC3840, August 2004,\n\
    \              <http://www.rfc-editor.org/info/rfc3840>.\n   [RFC4122]  Leach,\
    \ P., Mealling, M., and R. Salz, \"A Universally\n              Unique IDentifier\
    \ (UUID) URN Namespace\", RFC 4122,\n              DOI 10.17487/RFC4122, July\
    \ 2005,\n              <http://www.rfc-editor.org/info/rfc4122>.\n   [RFC4566]\
    \  Handley, M., Jacobson, V., and C. Perkins, \"SDP: Session\n              Description\
    \ Protocol\", RFC 4566, DOI 10.17487/RFC4566,\n              July 2006, <http://www.rfc-editor.org/info/rfc4566>.\n\
    \   [RFC4574]  Levin, O. and G. Camarillo, \"The Session Description\n       \
    \       Protocol (SDP) Label Attribute\", RFC 4574,\n              DOI 10.17487/RFC4574,\
    \ August 2006,\n              <http://www.rfc-editor.org/info/rfc4574>.\n   [RFC4648]\
    \  Josefsson, S., \"The Base16, Base32, and Base64 Data\n              Encodings\"\
    , RFC 4648, DOI 10.17487/RFC4648, October 2006,\n              <http://www.rfc-editor.org/info/rfc4648>.\n\
    \   [RFC4796]  Hautakorpi, J. and G. Camarillo, \"The Session Description\n  \
    \            Protocol (SDP) Content Attribute\", RFC 4796,\n              DOI\
    \ 10.17487/RFC4796, February 2007,\n              <http://www.rfc-editor.org/info/rfc4796>.\n\
    \   [RFC7866]  Portman, L., Lum, H., Ed., Eckel, C., Johnston, A., and A.\n  \
    \            Hutton, \"Session Recording Protocol\", RFC 7866,\n             \
    \ DOI 10.17487/RFC7866, May 2016,\n              <http://www.rfc-editor.org/info/rfc7866>.\n"
- title: 12.2.  Informative References
  contents:
  - "12.2.  Informative References\n   [RFC3325]  Jennings, C., Peterson, J., and\
    \ M. Watson, \"Private\n              Extensions to the Session Initiation Protocol\
    \ (SIP) for\n              Asserted Identity within Trusted Networks\", RFC 3325,\n\
    \              DOI 10.17487/RFC3325, November 2002,\n              <http://www.rfc-editor.org/info/rfc3325>.\n\
    \   [RFC3326]  Schulzrinne, H., Oran, D., and G. Camarillo, \"The Reason\n   \
    \           Header Field for the Session Initiation Protocol (SIP)\",\n      \
    \        RFC 3326, DOI 10.17487/RFC3326, December 2002,\n              <http://www.rfc-editor.org/info/rfc3326>.\n\
    \   [RFC3966]  Schulzrinne, H., \"The tel URI for Telephone Numbers\",\n     \
    \         RFC 3966, DOI 10.17487/RFC3966, December 2004,\n              <http://www.rfc-editor.org/info/rfc3966>.\n\
    \   [RFC4235]  Rosenberg, J., Schulzrinne, H., and R. Mahy, Ed., \"An\n      \
    \        INVITE-Initiated Dialog Event Package for the Session\n             \
    \ Initiation Protocol (SIP)\", RFC 4235,\n              DOI 10.17487/RFC4235,\
    \ November 2005,\n              <http://www.rfc-editor.org/info/rfc4235>.\n  \
    \ [RFC6341]  Rehor, K., Ed., Portman, L., Ed., Hutton, A., and R. Jain,\n    \
    \          \"Use Cases and Requirements for SIP-Based Media Recording\n      \
    \        (SIPREC)\", RFC 6341, DOI 10.17487/RFC6341, August 2011,\n          \
    \    <http://www.rfc-editor.org/info/rfc6341>.\n   [RFC7245]  Hutton, A., Ed.,\
    \ Portman, L., Ed., Jain, R., and K. Rehor,\n              \"An Architecture for\
    \ Media Recording Using the Session\n              Initiation Protocol\", RFC\
    \ 7245, DOI 10.17487/RFC7245,\n              May 2014, <http://www.rfc-editor.org/info/rfc7245>.\n\
    \   [SessionID]\n              Jones, P., Salgueiro, G., Pearce, C., and P. Giralt,\n\
    \              \"End-to-End Session Identification in IP-Based Multimedia\n  \
    \            Communication Networks\", Work in Progress,\n              draft-ietf-insipid-session-id-22,\
    \ April 2016.\n   [UML]      Object Management Group, \"OMG Unified Modeling Language\n\
    \              (UML)\", 2011, <http://www.omg.org/spec/UML/2.4/>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Thanks to John Elwell, Henry Lum, Leon Portman, De Villiers\
    \ de Wet,\n   Andrew Hutton, Deepanshu Gautam, Charles Eckel, Muthu Arul Mozhi\n\
    \   Perumal, Michael Benenson, Hadriel Kaplan, Brian Rosen, Scott Orton,\n   Ofir\
    \ Roth, Mary Barnes, Ken Rehor, Gonzalo Salgueiro, Yaron Pdut,\n   Alissa Cooper,\
    \ Stephen Farrell, and Ben Campbell for their valuable\n   comments and inputs.\n\
    \   Thanks to Joe Hildebrand, Peter Saint-Andre, and Matt Miller for\n   helping\
    \ in writing the XML schema, and to Martin Thomson for\n   validating the XML\
    \ schema and providing comments on the same.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Ram Mohan Ravindranath\n   Cisco Systems\n   Cessna Business\
    \ Park\n   Bangalore, Karnataka\n   India\n   Email: rmohanr@cisco.com\n   Parthasarathi\
    \ Ravindran\n   Nokia Networks\n   Bangalore, Karnataka\n   India\n   Email: partha@parthasarathi.co.in\n\
    \   Paul Kyzivat\n   Huawei\n   Hudson, MA\n   United States\n   Email: pkyzivat@alum.mit.edu\n"
