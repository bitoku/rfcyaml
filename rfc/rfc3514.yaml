- title: __initial_text__
  contents:
  - '                  The Security Flag in the IPv4 Header

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   Firewalls, packet filters, intrusion detection systems, and the\
    \ like\n   often have difficulty distinguishing between packets that have\n  \
    \ malicious intent and those that are merely unusual.  We define a\n   security\
    \ flag in the IPv4 header as a means of distinguishing the two\n   cases.\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   Firewalls [CBR03], packet filters, intrusion detection systems,\
    \ and\n   the like often have difficulty distinguishing between packets that\n\
    \   have malicious intent and those that are merely unusual.  The problem\n  \
    \ is that making such determinations is hard.  To solve this problem,\n   we define\
    \ a security flag, known as the \"evil\" bit, in the IPv4\n   [RFC791] header.\
    \  Benign packets have this bit set to 0; those that\n   are used for an attack\
    \ will have the bit set to 1.\n"
- title: 1.1. Terminology
  contents:
  - "1.1. Terminology\n   The keywords MUST, MUST NOT, REQUIRED, SHALL, SHALL NOT,\
    \ SHOULD,\n   SHOULD NOT, RECOMMENDED, MAY, and OPTIONAL, when they appear in\
    \ this\n   document, are to be interpreted as described in [RFC2119].\n"
- title: 2. Syntax
  contents:
  - "2. Syntax\n   The high-order bit of the IP fragment offset field is the only\
    \ unused\n   bit in the IP header.  Accordingly, the selection of the bit position\n\
    \   is not left to IANA.\n   The bit field is laid out as follows:\n         \
    \    0\n            +-+\n            |E|\n            +-+\n   Currently-assigned\
    \ values are defined as follows:\n   0x0  If the bit is set to 0, the packet has\
    \ no evil intent.  Hosts,\n        network elements, etc., SHOULD assume that\
    \ the packet is\n        harmless, and SHOULD NOT take any defensive measures.\
    \  (We note\n        that this part of the spec is already implemented by many\
    \ common\n        desktop operating systems.)\n   0x1  If the bit is set to 1,\
    \ the packet has evil intent.  Secure\n        systems SHOULD try to defend themselves\
    \ against such packets.\n        Insecure systems MAY chose to crash, be penetrated,\
    \ etc.\n"
- title: 3. Setting the Evil Bit
  contents:
  - "3. Setting the Evil Bit\n   There are a number of ways in which the evil bit\
    \ may be set.  Attack\n   applications may use a suitable API to request that\
    \ it be set.\n   Systems that do not have other mechanisms MUST provide such an\
    \ API;\n   attack programs MUST use it.\n   Multi-level insecure operating systems\
    \ may have special levels for\n   attack programs; the evil bit MUST be set by\
    \ default on packets\n   emanating from programs running at such levels.  However,\
    \ the system\n   MAY provide an API to allow it to be cleared for non-malicious\n\
    \   activity by users who normally engage in attack behavior.\n   Fragments that\
    \ by themselves are dangerous MUST have the evil bit\n   set.  If a packet with\
    \ the evil bit set is fragmented by an\n   intermediate router and the fragments\
    \ themselves are not dangerous,\n   the evil bit MUST be cleared in the fragments,\
    \ and MUST be turned\n   back on in the reassembled packet.\n   Intermediate systems\
    \ are sometimes used to launder attack\n   connections.  Packets to such systems\
    \ that are intended to be relayed\n   to a target SHOULD have the evil bit set.\n\
    \   Some applications hand-craft their own packets.  If these packets are\n  \
    \ part of an attack, the application MUST set the evil bit by itself.\n   In networks\
    \ protected by firewalls, it is axiomatic that all\n   attackers are on the outside\
    \ of the firewall.  Therefore, hosts\n   inside the firewall MUST NOT set the\
    \ evil bit on any packets.\n   Because NAT [RFC3022] boxes modify packets, they\
    \ SHOULD set the evil\n   bit on such packets.  \"Transparent\" http and email\
    \ proxies SHOULD set\n   the evil bit on their reply packets to the innocent client\
    \ host.\n   Some hosts scan other hosts in a fashion that can alert intrusion\n\
    \   detection systems.  If the scanning is part of a benign research\n   project,\
    \ the evil bit MUST NOT be set.  If the scanning per se is\n   innocent, but the\
    \ ultimate intent is evil and the destination site\n   has such an intrusion detection\
    \ system, the evil bit SHOULD be set.\n"
- title: 4. Processing of the Evil Bit
  contents:
  - "4. Processing of the Evil Bit\n   Devices such as firewalls MUST drop all inbound\
    \ packets that have the\n   evil bit set.  Packets with the evil bit off MUST\
    \ NOT be dropped.\n   Dropped packets SHOULD be noted in the appropriate MIB variable.\n\
    \   Intrusion detection systems (IDSs) have a harder problem.  Because of\n  \
    \ their known propensity for false negatives and false positives, IDSs\n   MUST\
    \ apply a probabilistic correction factor when evaluating the evil\n   bit.  If\
    \ the evil bit is set, a suitable random number generator\n   [RFC1750] must be\
    \ consulted to determine if the attempt should be\n   logged.  Similarly, if the\
    \ bit is off, another random number\n   generator must be consulted to determine\
    \ if it should be logged\n   despite the setting.\n   The default probabilities\
    \ for these tests depends on the type of IDS.\n   Thus, a signature-based IDS\
    \ would have a low false positive value but\n   a high false negative value. \
    \ A suitable administrative interface\n   MUST be provided to permit operators\
    \ to reset these values.\n   Routers that are not intended as as security devices\
    \ SHOULD NOT\n   examine this bit.  This will allow them to pass packets at higher\n\
    \   speeds.\n   As outlined earlier, host processing of evil packets is operating-\n\
    \   system dependent; however, all hosts MUST react appropriately\n   according\
    \ to their nature.\n"
- title: 5. Related Work
  contents:
  - "5. Related Work\n   Although this document only defines the IPv4 evil bit, there\
    \ are\n   complementary mechanisms for other forms of evil.  We sketch some of\n\
    \   those here.\n   For IPv6 [RFC2460], evilness is conveyed by two options. \
    \ The first,\n   a hop-by-hop option, is used for packets that damage the network,\n\
    \   such as DDoS packets.  The second, an end-to-end option, is for\n   packets\
    \ intended to damage destination hosts.  In either case, the\n   option contains\
    \ a 128-bit strength indicator, which says how evil the\n   packet is, and a 128-bit\
    \ type code that describes the particular type\n   of attack intended.\n   Some\
    \ link layers, notably those based on optical switching, may\n   bypass routers\
    \ (and hence firewalls) entirely.  Accordingly, some\n   link-layer scheme MUST\
    \ be used to denote evil.  This may involve evil\n   lambdas, evil polarizations,\
    \ etc.\n   DDoS attack packets are denoted by a special diffserv code point.\n\
    \   An application/evil MIME type is defined for Web- or email-carried\n   mischief.\
    \  Other MIME types can be embedded inside of evil sections;\n   this permit easy\
    \ encoding of word processing documents with macro\n   viruses, etc.\n"
- title: 6. IANA Considerations
  contents:
  - "6. IANA Considerations\n   This document defines the behavior of security elements\
    \ for the 0x0\n   and 0x1 values of this bit.  Behavior for other values of the\
    \ bit may\n   be defined only by IETF consensus [RFC2434].\n"
- title: 7. Security Considerations
  contents:
  - "7. Security Considerations\n   Correct functioning of security mechanisms depend\
    \ critically on the\n   evil bit being set properly.  If faulty components do\
    \ not set the\n   evil bit to 1 when appropriate, firewalls will not be able to\
    \ do\n   their jobs properly.  Similarly, if the bit is set to 1 when it\n   shouldn't\
    \ be, a denial of service condition may occur.\n"
- title: 8. References
  contents:
  - "8. References\n   [CBR03]   W.R. Cheswick, S.M. Bellovin, and A.D. Rubin, \"\
    Firewalls\n             and Internet Security: Repelling the Wily Hacker\", Second\n\
    \             Edition, Addison-Wesley, 2003.\n   [RFC791]  Postel, J., \"Internet\
    \ Protocol\", STD 5, RFC 791, September\n             1981.\n   [RFC1750] Eastlake,\
    \ D., 3rd, Crocker, S. and J. Schiller, \"Randomness\n             Recommendations\
    \ for Security\", RFC 1750, December 1994.\n   [RFC2119] Bradner, S., \"Key words\
    \ for use in RFCs to Indicate\n             Requirement Levels\", BCP 14, RFC\
    \ 2119, March 1997.\n   [RFC2434] Narten, T. and H. Alvestrand, \"Guidelines for\
    \ Writing an\n             IANA Considerations Section in RFCs\", BCP 26, RFC\
    \ 2434,\n             October 1998.\n   [RFC2460] Deering, S. and R. Hinden, \"\
    Internet Protocol, Version 6\n             (IPv6) Specification\", RFC 2460, December\
    \ 1998.\n   [RFC3022] Srisuresh, P. and K. Egevang, \"Traditional IP Network\n\
    \             Address Translator (Traditional NAT)\", RFC 3022, January\n    \
    \         2001.\n"
- title: 9. Author's Address
  contents:
  - "9. Author's Address\n   Steven M. Bellovin\n   AT&T Labs Research\n   Shannon\
    \ Laboratory\n   180 Park Avenue\n   Florham Park, NJ 07932\n   Phone: +1 973-360-8656\n\
    \   EMail: bellovin@acm.org\n"
- title: 10. Full Copyright Statement
  contents:
  - "10. Full Copyright Statement\n   Copyright (C) The Internet Society (2003). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
