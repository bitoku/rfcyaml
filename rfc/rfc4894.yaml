- title: __initial_text__
  contents:
  - '    Use of Hash Algorithms in Internet Key Exchange (IKE) and IPsec

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2007).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes how the IKEv1 (Internet Key Exchange version\n\
    \   1), IKEv2, and IPsec protocols use hash functions, and explains the\n   level\
    \ of vulnerability of these protocols to the reduced collision\n   resistance\
    \ of the MD5 and SHA-1 hash algorithms.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n   2.  Hashes in IKEv1 and IKEv2  . . . . . . . . . . . . .\
    \ . . . . .  2\n   3.  Hashes in IPsec  . . . . . . . . . . . . . . . . . . .\
    \ . . . .  3\n   4.  PKIX Certificates in IKEv1 and IKEv2 . . . . . . . . . .\
    \ . . .  3\n   5.  Choosing Cryptographic Functions . . . . . . . . . . . . .\
    \ . .  3\n     5.1.  Different Cryptographic Functions  . . . . . . . . . . .\
    \ .  4\n     5.2.  Specifying Cryptographic Functions in the Protocol . . . .\
    \  4\n     5.3.  Specifying Cryptographic Functions in Authentication . . .  5\n\
    \   6.  Suggested Changes  . . . . . . . . . . . . . . . . . . . . . .  6\n  \
    \   6.1.  Suggested Changes for the Protocols  . . . . . . . . . . .  6\n    \
    \ 6.2.  Suggested Changes for Implementors . . . . . . . . . . . .  7\n   7. \
    \ Security Considerations  . . . . . . . . . . . . . . . . . . .  7\n   8.  Informative\
    \ References . . . . . . . . . . . . . . . . . . . .  8\n   Appendix A.  Acknowledgments\
    \ . . . . . . . . . . . . . . . . . . . 10\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Recently, attacks on the collision-resistance properties\
    \ of MD5 and\n   SHA-1 hash functions have been discovered; [HashAttacks] summarizes\n\
    \   the discoveries.  The security community is now reexamining how\n   various\
    \ Internet protocols use hash functions.  The goal of this\n   reexamination is\
    \ to be sure that the current usage is safe in the\n   face of these new attacks,\
    \ and whether protocols can easily use new\n   hash functions when they become\
    \ recommended.\n   Different protocols use hash functions quite differently. \
    \ Because of\n   this, the IETF has asked for reviews of all protocols that use\
    \ hash\n   functions.  This document reviews the many ways that three protocols\n\
    \   (IKEv1 [IKEv1], IKEv2 [IKEv2], and IPsec [ESP] and [AH]) use hash\n   functions.\n\
    \   In this document, \"IKEv1\" refers to only \"Phase 1\" of IKEv1 and the\n\
    \   agreement process.  \"IKEv2\" refers to the IKE_SA_INIT and IKE_AUTH\n   exchanges.\
    \  \"IPsec\" refers to IP encapsulated in either the\n   Authentication Header\
    \ (AH) or Encapsulating Security Payload (ESP).\n"
- title: 2.  Hashes in IKEv1 and IKEv2
  contents:
  - "2.  Hashes in IKEv1 and IKEv2\n   Both IKEv1 and IKEv2 can use hash functions\
    \ as pseudo-random\n   functions (PRFs).  The inputs to the PRFs always contain\
    \ nonce values\n   from both the initiator and the responder that the other party\
    \ cannot\n   predict in advance.  In IKEv1, the length of this nonce is at least\n\
    \   64 bits; in IKEv2, it is at least 128 bits.  Because of this, the use\n  \
    \ of hash functions in IKEv1 and IKEv2 are not susceptible to any known\n   collision-reduction\
    \ attack.\n   IKEv1 also uses hash functions on the inputs to the PRF.  The inputs\n\
    \   are a combination of values from both the initiator and responder,\n   and\
    \ thus the hash function here is not susceptible to any known\n   collision-reduction\
    \ attack.\n   In IKEv2, hashes are used as integrity protection for all messages\n\
    \   after the IKE_SA_INIT Exchange.  These hashes are used in Hashed\n   Message\
    \ Authentication Codes (HMACs).  As described in\n   [HMAC-reduction], MD5 used\
    \ in HMACs is susceptible to forgery, and it\n   is suspected that full SHA-1\
    \ used in HMAC is susceptible to forgery.\n   There is no known reason for the\
    \ person who creates legitimate\n   integrity protection to want to spoof it.\n\
    \   Both IKEv1 and IKEv2 have authentication modes that use digital\n   signatures.\
    \  Digital signatures use hashes to make unique digests of\n   the message being\
    \ signed.  With the current known attacks, the only\n   party that can create\
    \ the two messages that collide is the IKE entity\n   that generates the message.\
    \  As shown in [Target-collisions], an\n   attacker can create two different Public\
    \ Key Infrastructure using\n   X.509 (PKIX) certificates with different identities\
    \ that have the\n   same signatures.\n   IKEv1 has two modes, \"public key encryption\"\
    \ and \"revised public key\n   encryption\", that use hashes to identify the public\
    \ key used.  The\n   hash function here is used simply to reduce the size of the\n\
    \   identifier.  In IKEv2 with public-key certificates, a hash function\n   is\
    \ used for similar purposes, both for identifying the sender's\n   public key\
    \ and the trust anchors.  Using a collision-reduction\n   attack, an individual\
    \ could create two public keys that have the same\n   hash value.  This is not\
    \ considered to be a useful attack because the\n   key generator holds both private\
    \ keys.\n   IKEv1 can be used together with Network Access Translator (NAT)\n\
    \   traversal support, as described in [NAT-T]; IKEv2 includes this NAT\n   traversal\
    \ support.  In both of these cases, hash functions are used\n   to obscure the\
    \ IP addresses used by the initiator and/or the\n   responder.  The hash function\
    \ here is not susceptible to any known\n   collision-reduction attack.\n"
- title: 3.  Hashes in IPsec
  contents:
  - "3.  Hashes in IPsec\n   AH uses hash functions for authenticating packets; the\
    \ same is true\n   for ESP when ESP is using its own authentication.  For both\
    \ uses of\n   IPsec, hash functions are always used in hashed MACs (HMACs).  As\n\
    \   described in [HMAC-reduction], MD5 used in HMACs is susceptible to\n   forgery,\
    \ and it is suspected that full SHA-1 used in HMAC is\n   susceptible to forgery.\
    \  There is no known reason for the person who\n   creates legitimate packet authentication\
    \ to want to spoof it.\n"
- title: 4.  PKIX Certificates in IKEv1 and IKEv2
  contents:
  - "4.  PKIX Certificates in IKEv1 and IKEv2\n   Some implementations of IKEv1 and\
    \ IKEv2 use PKIX certificates for\n   authentication.  Any weaknesses in PKIX\
    \ certificates due to\n   particular ways hash functions are used, or due to weaknesses\
    \ in\n   particular hash functions used in certificates, will be inherited in\n\
    \   IKEv1 and IKEv2 implementations that use PKIX-based authentication.\n"
- title: 5.  Choosing Cryptographic Functions
  contents:
  - "5.  Choosing Cryptographic Functions\n   Recently, there has been more discussion\
    \ in the IETF about the\n   ability of one party in a protocol to tell the other\
    \ party which\n   cryptographic functions the first party prefers the second party\
    \ to\n   use.  The discussion was spurred in part by [Deploying].  Although\n\
    \   that paper focuses on hash functions, it is relevant to other\n   cryptographic\
    \ functions as well.\n   There are (at least) three distinct subtopics related\
    \ to choosing\n   cryptographic functions in protocols:\n   o  The ability to\
    \ pick between different cryptographic functions\n      instead of having just\
    \ one specified in the protocol\n   o  If there are multiple functions, the ability\
    \ to agree on which\n      function will be used in the main protocol\n   o  The\
    \ ability to suggest to the other party which kinds of\n      cryptographic functions\
    \ should be used in the other party's public\n      key certificates\n"
- title: 5.1.  Different Cryptographic Functions
  contents:
  - "5.1.  Different Cryptographic Functions\n   Protocols that use cryptographic\
    \ functions can either specify a\n   single function, or can allow different functions.\
    \  Protocols in the\n   first category are susceptible to attack if the specified\
    \ function is\n   later found to be too weak for the stated purpose; protocols\
    \ in the\n   second category can usually avoid such attacks, but at a cost of\n\
    \   increased protocol complexity.  In the IETF, protocols that allow a\n   choice\
    \ of cryptographic functions are strongly preferred.\n   IKEv1, IKEv2, and IPsec\
    \ already allow different hash functions in\n   every significant place where\
    \ hash functions are used (that is, in\n   every place that has any susceptibility\
    \ to a collision-reduction\n   attack).\n"
- title: 5.2.  Specifying Cryptographic Functions in the Protocol
  contents:
  - "5.2.  Specifying Cryptographic Functions in the Protocol\n   Protocols that allow\
    \ a choice of cryptographic functions need to have\n   a way for all parties to\
    \ agree on which function is going to be used.\n   Some protocols, such as secure\
    \ electronic mail, allow the initiator\n   to simply pick a set of cryptographic\
    \ functions; if the responder\n   does not understand the functions used, the\
    \ transmission fails.\n   Other protocols allow for the two parties to agree on\
    \ which\n   cryptographic functions will be used.  This is sometimes called\n\
    \   \"negotiation\", but the term \"negotiation\" is inappropriate for\n   protocols\
    \ in which one party (the \"proposer\") lists all the functions\n   it is willing\
    \ to use, and the other party (the \"chooser\") simply\n   picks the ones that\
    \ will be used.\n   When a new cryptographic function is introduced, one party\
    \ may want\n   to tell the other party that they can use the new function.  If\
    \ it is\n   the proposer who wants to use the new function, the situation is\n\
    \   easy: the proposer simply adds the new function to its list, possibly\n  \
    \ removing other parallel functions that the proposer no longer wants\n   to use.\n\
    \   On the other hand, if it is the chooser who wants to use the new\n   function\
    \ and the proposer didn't list it, the chooser may want to\n   signal the proposer\
    \ that they are capable of using the new function\n   or the chooser may want\
    \ to say that it is only willing to use the new\n   function.  If a protocol wants\
    \ to handle either of these cases, it\n   has to have a way for the chooser to\
    \ specify this information to the\n   proposer in its acceptance and/or rejection\
    \ message.\n   It is not clear from a design standpoint how important it might\
    \ be to\n   let the chooser specify the additional functions it knows.  As long\n\
    \   as the proposer offers all the functions it wants to use, there is no\n  \
    \ reason for the chooser to say \"I know one you don't know\".  The only\n   place\
    \ where the chooser is able to signal the proposer with different\n   functions\
    \ is in protocols where listing all the functions might be\n   prohibitive, such\
    \ as where they would add additional round trips or\n   significant packet length.\n\
    \   IKEv1 and IKEv2 allow the proposer to list all functions.  Neither\n   allows\
    \ the chooser to specify which functions that were not proposed\n   it could have\
    \ used, either in a successful or unsuccessful Security\n   Association (SA) establishment.\n"
- title: 5.3.  Specifying Cryptographic Functions in Authentication
  contents:
  - "5.3.  Specifying Cryptographic Functions in Authentication\n   Passing public\
    \ key certificates and signatures used in authentication\n   creates additional\
    \ issues for protocols.  When specifying\n   cryptographic functions for a protocol,\
    \ it is an agreement between\n   the proposer and the chooser.  When choosing\
    \ cryptographic functions\n   for public key certificates, however, the proposer\
    \ and the chooser\n   are beholden to functions used by the trusted third parties,\
    \ the\n   certification authorities (CAs).  It doesn't really matter what\n  \
    \ either party wants the other party to use, since the other party is\n   not\
    \ the one issuing the certificates.\n   In this discussion, the term \"certificate\"\
    \ does not necessarily mean\n   a PKIX certificate.  Instead, it means any message\
    \ that binds an\n   identity to a public key, where the message is signed by a\
    \ trusted\n   third party.  This can be non-PKIX certificates or other types of\n\
    \   cryptographic identity-binding structures that may be used in the\n   future.\n\
    \   The question of specifying cryptographic functions is only relevant\n   if\
    \ one party has multiple certificates or signatures with different\n   cryptographic\
    \ functions.  In this section, the terms \"proposer\" and\n   \"chooser\" have\
    \ a different meaning than in the previous section.\n   Here, both parties act\
    \ as proposers of the identity they want to use\n   and the certificates with\
    \ which they are backing up that identity,\n   and both parties are choosers of\
    \ the other party's identity and\n   certificate.\n   Some protocols allow the\
    \ proposer to send multiple certificates or\n   signatures, while other protocols\
    \ only allow the proposer to send a\n   single certificate or signature.  Some\
    \ protocols allow the proposer\n   to send multiple certificates but advise against\
    \ it, given that\n   certificates can be fairly large (particularly when the CA\
    \ loads the\n   certificate with lots of information).\n   IKEv1 and IKEv2 allow\
    \ both parties to list all the certificates that\n   they want to use.  [PKI4IPsec]\
    \ proposes to restrict this by saying\n   that all the certificates for a proposer\
    \ have to have the same\n   identity.\n"
- title: 6.  Suggested Changes
  contents:
  - "6.  Suggested Changes\n   In investigating how protocols use hash functions,\
    \ the IETF is\n   looking at (at least) two areas of possible changes to individual\n\
    \   protocols: how the IETF might need to change the protocols, and how\n   implementors\
    \ of current protocols might change what they do.  This\n   section describes\
    \ both of these areas with respect to IKEv1, IKEv2,\n   and IPsec.\n"
- title: 6.1.  Suggested Changes for the Protocols
  contents:
  - "6.1.  Suggested Changes for the Protocols\n   Protocols might need to be changed\
    \ if they rely on the collision-\n   resistance of particular hash functions.\
    \  They might also need to be\n   changed if they do not allow for the agreement\
    \ of hash functions\n   because it is expected that the \"preferred\" hash function\
    \ for\n   different users will change over time.\n   IKEv1 and IKEv2 already allow\
    \ for the agreement of hash functions for\n   both IKE and IPsec, and thus do\
    \ not need any protocol change.\n   IKEv1 and IKEv2, when used with public key\
    \ authentication, already\n   allow each party to send multiple PKIX certificates,\
    \ and thus do not\n   need any protocol change.\n   There are known weaknesses\
    \ in PKIX with respect to collision-\n   resistance of some hash functions.  Because\
    \ of this, it is hoped that\n   there will be changes to PKIX fostered by the\
    \ PKIX Working Group.\n   Some of the changes to PKIX may be usable in IKEv1 and\
    \ IKEv2 without\n   having to change IKEv1 and IKEv2.  Other changes to PKIX may\
    \ require\n   changes to IKEv1 and IKEv2 in order to incorporate them, but that\n\
    \   will not be known until the changes to PKIX are finalized.\n"
- title: 6.2.  Suggested Changes for Implementors
  contents:
  - "6.2.  Suggested Changes for Implementors\n   As described in earlier sections,\
    \ IKE and IPsec themselves are not\n   susceptible to any known collision-reduction\
    \ attacks on hash\n   functions.  Thus, implementors do not need to make changes\
    \ such as\n   prohibiting the use of MD5 or SHA-1.  The mandatory and suggested\n\
    \   algorithms for IKEv2 and IPsec are given in [IKEv2Algs] and\n   [IPsecAlgs].\n\
    \   Note that some IKE and IPsec users will misunderstand the relevance\n   of\
    \ the known attacks and want to use \"stronger\" hash functions.\n   Thus, implementors\
    \ should strongly consider adding support for\n   alternatives, particularly the\
    \ AES-XCBC-PRF-128 [AES-PRF] and AES-\n   XCBC-MAC-96 [AES-MAC] algorithms, as\
    \ well as forthcoming algorithms\n   based on the SHA-2 family [SHA2-HMAC].\n\
    \   Implementations of IKEv1 and IKEv2 that use PKIX certificates for\n   authentication\
    \ may be susceptible to attacks based on weaknesses in\n   PKIX.  It is widely\
    \ expected that PKIX certificates in the future\n   will use hash functions other\
    \ than MD5 and SHA-1.  Implementors of\n   IKE that allow certificate authentication\
    \ should strongly consider\n   allowing the use of certificates that are signed\
    \ with the SHA-256,\n   SHA-384, and SHA-512 hash algorithms.  Similarly, those\
    \ implementors\n   should also strongly consider allowing the sending of multiple\n\
    \   certificates for identification.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   This entire document is about the security implications\
    \ of reduced\n   collision-resistance of common hash algorithms for the IKE and\
    \ IPsec\n   protocols.\n   The Security Considerations section of [HashAttacks]\
    \ gives much more\n   detail about the security of hash functions.\n"
- title: 8.  Informative References
  contents:
  - "8.  Informative References\n   [AES-MAC]            Frankel, S. and H. Herbert,\
    \ \"The AES-XCBC-MAC-96\n                        Algorithm and Its Use With IPsec\"\
    , RFC 3566,\n                        September 2003.\n   [AES-PRF]           \
    \ Hoffman, P., \"The AES-XCBC-PRF-128 Algorithm for\n                        the\
    \ Internet Key Exchange Protocol (IKE)\",\n                        RFC 4434, February\
    \ 2006.\n   [AH]                 Kent, S., \"IP Authentication Header\", RFC 4302,\n\
    \                        December 2005.\n   [Deploying]          Bellovin, S.\
    \ and E. Rescorla, \"Deploying a New\n                        Hash Algorithm\"\
    , NDSS '06, February 2006.\n   [ESP]                Kent, S., \"IP Encapsulating\
    \ Security Payload\n                        (ESP)\", RFC 4303, December 2005.\n\
    \   [HashAttacks]        Hoffman, P. and B. Schneier, \"Attacks on\n         \
    \               Cryptographic Hashes in Internet Protocols\",\n              \
    \          RFC 4270, November 2005.\n   [HMAC-reduction]     Contini, S. and YL.\
    \ Yin, \"Forgery and Partial\n                        Key-Recovery Attacks on\
    \ HMAC and NMAC Using Hash\n                        Collisions\", Cryptology ePrint\
    \ Report 2006/319,\n                        September 2006.\n   [IKEv1]      \
    \        Harkins, D. and D. Carrel, \"The Internet Key\n                     \
    \   Exchange (IKE)\", RFC 2409, November 1998.\n   [IKEv2]              Kaufman,\
    \ C., Ed., \"Internet Key Exchange (IKEv2)\n                        Protocol\"\
    , RFC 4306, December 2005.\n   [IKEv2Algs]          Schiller, J., \"Cryptographic\
    \ Algorithms for use\n                        in the Internet Key Exchange Version\
    \ 2\",\n                        RFC 4307, December 2005.\n   [IPsecAlgs]     \
    \     Eastlake, D., \"Cryptographic Algorithm\n                        Implementation\
    \ Requirements For ESP And AH\",\n                        RFC 4305, December 2005.\n\
    \   [NAT-T]              Kivinen, T., Swander, B., Huttunen, A., and V.\n    \
    \                    Volpe, \"Negotiation of NAT-Traversal in the\n          \
    \              IKE\", RFC 3947, January 2005.\n   [PKI4IPsec]          Korver,\
    \ B., \"The Internet IP Security PKI\n                        Profile of IKEv1/ISAKMP,\
    \ IKEv2, and PKIX\", Work\n                        in Progress, April 2007.\n\
    \   [SHA2-HMAC]          Kelly, S. and S. Frankel, \"Using HMAC-SHA-256,\n   \
    \                     HMAC-SHA-384, and HMAC-SHA-512 With IPsec\",\n         \
    \               RFC 4868, May 2007.\n   [Target-collisions]  Stevens, M., Lenstra,\
    \ A., and B. de Weger,\n                        \"Target Collisions for MD5 and\
    \ Colliding X.509\n                        Certificates for Different Identities\"\
    ,\n                        Cryptology ePrint Report 2006/360, October 2006.\n"
- title: Appendix A.  Acknowledgments
  contents:
  - "Appendix A.  Acknowledgments\n   Tero Kivinen helped with ideas in the first\
    \ version of this document.\n   Many participants on the SAAG and IPsec mailing\
    \ lists contributed\n   ideas in later versions.  In particular, suggestions were\
    \ made by\n   Alfred Hoenes, Michael Richardson, Hugo Krawczyk, Steve Bellovin,\n\
    \   David McGrew, Russ Housley, Arjen Lenstra, and Pasi Eronen.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Paul Hoffman\n   VPN Consortium\n   127 Segre Place\n  \
    \ Santa Cruz, CA  95060\n   US\n   EMail: paul.hoffman@vpnc.org\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
