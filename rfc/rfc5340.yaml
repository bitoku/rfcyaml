- title: __initial_text__
  contents:
  - '                             OSPF for IPv6

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes the modifications to OSPF to support version\n\
    \   6 of the Internet Protocol (IPv6).  The fundamental mechanisms of\n   OSPF\
    \ (flooding, Designated Router (DR) election, area support, Short\n   Path First\
    \ (SPF) calculations, etc.) remain unchanged.  However, some\n   changes have\
    \ been necessary, either due to changes in protocol\n   semantics between IPv4\
    \ and IPv6, or simply to handle the increased\n   address size of IPv6.  These\
    \ modifications will necessitate\n   incrementing the protocol version from version\
    \ 2 to version 3.  OSPF\n   for IPv6 is also referred to as OSPF version 3 (OSPFv3).\n\
    \   Changes between OSPF for IPv4, OSPF Version 2, and OSPF for IPv6 as\n   described\
    \ herein include the following.  Addressing semantics have\n   been removed from\
    \ OSPF packets and the basic Link State\n   Advertisements (LSAs).  New LSAs have\
    \ been created to carry IPv6\n   addresses and prefixes.  OSPF now runs on a per-link\
    \ basis rather\n   than on a per-IP-subnet basis.  Flooding scope for LSAs has\
    \ been\n   generalized.  Authentication has been removed from the OSPF protocol\n\
    \   and instead relies on IPv6's Authentication Header and Encapsulating\n   Security\
    \ Payload (ESP).\n   Even with larger IPv6 addresses, most packets in OSPF for\
    \ IPv6 are\n   almost as compact as those in OSPF for IPv4.  Most fields and packet-\n\
    \   size limitations present in OSPF for IPv4 have been relaxed.  In\n   addition,\
    \ option handling has been made more flexible.\n   All of OSPF for IPv4's optional\
    \ capabilities, including demand\n   circuit support and Not-So-Stubby Areas (NSSAs),\
    \ are also supported\n   in OSPF for IPv6.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  4\n     1.1.  Requirements Notation  . . . . . . . . . . . . .\
    \ . . . . .  4\n     1.2.  Terminology  . . . . . . . . . . . . . . . . . . .\
    \ . . . .  4\n   2.  Differences from OSPF for IPv4 . . . . . . . . . . . . .\
    \ . . .  5\n     2.1.  Protocol Processing Per-Link, Not Per-Subnet . . . . .\
    \ . .  5\n     2.2.  Removal of Addressing Semantics  . . . . . . . . . . . .\
    \ .  5\n     2.3.  Addition of Flooding Scope . . . . . . . . . . . . . . . .\
    \  6\n     2.4.  Explicit Support for Multiple Instances per Link . . . . .  6\n\
    \     2.5.  Use of Link-Local Addresses  . . . . . . . . . . . . . . .  7\n  \
    \   2.6.  Authentication Changes . . . . . . . . . . . . . . . . . .  7\n    \
    \ 2.7.  Packet Format Changes  . . . . . . . . . . . . . . . . . .  8\n     2.8.\
    \  LSA Format Changes . . . . . . . . . . . . . . . . . . . .  9\n     2.9.  Handling\
    \ Unknown LSA Types . . . . . . . . . . . . . . . . 10\n     2.10. Stub/NSSA Area\
    \ Support . . . . . . . . . . . . . . . . . . 11\n     2.11. Identifying Neighbors\
    \ by Router ID . . . . . . . . . . . . 11\n   3.  Differences with RFC 2740  .\
    \ . . . . . . . . . . . . . . . . . 11\n     3.1.  Support for Multiple Interfaces\
    \ on the Same Link . . . . . 11\n     3.2.  Deprecation of MOSPF for IPv6  . .\
    \ . . . . . . . . . . . . 12\n     3.3.  NSSA Specification . . . . . . . . .\
    \ . . . . . . . . . . . 12\n     3.4.  Stub Area Unknown LSA Flooding Restriction\
    \ Deprecated  . . 12\n     3.5.  Link LSA Suppression . . . . . . . . . . . .\
    \ . . . . . . . 12\n     3.6.  LSA Options and Prefix Options Updates . . . .\
    \ . . . . . . 13\n     3.7.  IPv6 Site-Local Addresses  . . . . . . . . . . .\
    \ . . . . . 13\n   4.  Implementation Details . . . . . . . . . . . . . . . .\
    \ . . . . 13\n     4.1.  Protocol Data Structures . . . . . . . . . . . . . .\
    \ . . . 14\n       4.1.1.  The Area Data Structure  . . . . . . . . . . . . .\
    \ . . 15\n       4.1.2.  The Interface Data Structure . . . . . . . . . . . .\
    \ . 15\n       4.1.3.  The Neighbor Data Structure  . . . . . . . . . . . . .\
    \ 16\n     4.2.  Protocol Packet Processing . . . . . . . . . . . . . . . . 17\n\
    \       4.2.1.  Sending Protocol Packets . . . . . . . . . . . . . . . 17\n  \
    \       4.2.1.1.  Sending Hello Packets  . . . . . . . . . . . . . . 18\n    \
    \     4.2.1.2.  Sending Database Description Packets . . . . . . . 19\n      \
    \ 4.2.2.  Receiving Protocol Packets . . . . . . . . . . . . . . 19\n        \
    \ 4.2.2.1.  Receiving Hello Packets  . . . . . . . . . . . . . 21\n     4.3. \
    \ The Routing table Structure  . . . . . . . . . . . . . . . 22\n       4.3.1.\
    \  Routing Table Lookup . . . . . . . . . . . . . . . . . 23\n     4.4.  Link\
    \ State Advertisements  . . . . . . . . . . . . . . . . 23\n       4.4.1.  The\
    \ LSA Header . . . . . . . . . . . . . . . . . . . . 23\n       4.4.2.  The Link-State\
    \ Database  . . . . . . . . . . . . . . . 24\n       4.4.3.  Originating LSAs\
    \ . . . . . . . . . . . . . . . . . . . 25\n         4.4.3.1.  LSA Options  .\
    \ . . . . . . . . . . . . . . . . . . 27\n         4.4.3.2.  Router-LSAs  . .\
    \ . . . . . . . . . . . . . . . . . 27\n         4.4.3.3.  Network-LSAs . . .\
    \ . . . . . . . . . . . . . . . . 29\n         4.4.3.4.  Inter-Area-Prefix-LSAs\
    \ . . . . . . . . . . . . . . 30\n         4.4.3.5.  Inter-Area-Router-LSAs .\
    \ . . . . . . . . . . . . . 31\n         4.4.3.6.  AS-External-LSAs . . . . .\
    \ . . . . . . . . . . . . 32\n         4.4.3.7.  NSSA-LSAs  . . . . . . . . .\
    \ . . . . . . . . . . . 33\n         4.4.3.8.  Link-LSAs  . . . . . . . . . .\
    \ . . . . . . . . . . 34\n         4.4.3.9.  Intra-Area-Prefix-LSAs . . . . .\
    \ . . . . . . . . . 36\n       4.4.4.  Future LSA Validation  . . . . . . . .\
    \ . . . . . . . . 40\n     4.5.  Flooding . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . 40\n       4.5.1.  Receiving Link State Update Packets  . . .\
    \ . . . . . . 40\n       4.5.2.  Sending Link State Update Packets  . . . . .\
    \ . . . . . 41\n       4.5.3.  Installing LSAs in the Database  . . . . . . .\
    \ . . . . 43\n     4.6.  Definition of Self-Originated LSAs . . . . . . . . .\
    \ . . . 43\n     4.7.  Virtual Links  . . . . . . . . . . . . . . . . . . . .\
    \ . . 44\n     4.8.  Routing Table Calculation  . . . . . . . . . . . . . . .\
    \ . 44\n       4.8.1.  Calculating the Shortest-Path Tree for an Area . . . .\
    \ 45\n       4.8.2.  The Next-Hop Calculation . . . . . . . . . . . . . . . 44\n\
    \       4.8.3.  Calculating the Inter-Area Routes  . . . . . . . . . . 47\n  \
    \     4.8.4.  Examining Transit Areas' Summary-LSAs  . . . . . . . . 48\n    \
    \   4.8.5.  Calculating AS External and NSSA Routes  . . . . . . . 48\n     4.9.\
    \  Multiple Interfaces to a Single Link . . . . . . . . . . . 48\n       4.9.1.\
    \  Standby Interface State  . . . . . . . . . . . . . . . 50\n   5.  Security\
    \ Considerations  . . . . . . . . . . . . . . . . . . . 52\n   6.  Manageability\
    \ Considerations . . . . . . . . . . . . . . . . . 52\n   7.  IANA Considerations\
    \  . . . . . . . . . . . . . . . . . . . . . 52\n     7.1.  MOSPF for OSPFv3 Deprecation\
    \ IANA Considerations . . . . . 53\n   8.  Acknowledgments  . . . . . . . . .\
    \ . . . . . . . . . . . . . . 53\n   9.  References . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . 55\n     9.1.  Normative References . . . . . . .\
    \ . . . . . . . . . . . . 55\n     9.2.  Informative References . . . . . . .\
    \ . . . . . . . . . . . 56\n   Appendix A.  OSPF Data Formats . . . . . . . .\
    \ . . . . . . . . . . 57\n     A.1.  Encapsulation of OSPF Packets  . . . . .\
    \ . . . . . . . . . 57\n     A.2.  The Options Field  . . . . . . . . . . . .\
    \ . . . . . . . . 58\n     A.3.  OSPF Packet Formats  . . . . . . . . . . . .\
    \ . . . . . . . 60\n       A.3.1.  The OSPF Packet Header . . . . . . . . . .\
    \ . . . . . . 60\n       A.3.2.  The Hello Packet . . . . . . . . . . . . . .\
    \ . . . . . 62\n       A.3.3.  The Database Description Packet  . . . . . . .\
    \ . . . . 63\n       A.3.4.  The Link State Request Packet  . . . . . . . . .\
    \ . . . 65\n       A.3.5.  The Link State Update Packet . . . . . . . . . . .\
    \ . . 66\n       A.3.6.  The Link State Acknowledgment Packet . . . . . . . .\
    \ . 67\n     A.4.  LSA Formats  . . . . . . . . . . . . . . . . . . . . . . .\
    \ 68\n       A.4.1.  IPv6 Prefix Representation . . . . . . . . . . . . . . 69\n\
    \         A.4.1.1.  Prefix Options . . . . . . . . . . . . . . . . . . 69\n  \
    \     A.4.2.  The LSA Header . . . . . . . . . . . . . . . . . . . . 70\n    \
    \     A.4.2.1.  LSA Type . . . . . . . . . . . . . . . . . . . . . 72\n      \
    \ A.4.3.  Router-LSAs  . . . . . . . . . . . . . . . . . . . . . 73\n       A.4.4.\
    \  Network-LSAs . . . . . . . . . . . . . . . . . . . . . 76\n       A.4.5.  Inter-Area-Prefix-LSAs\
    \ . . . . . . . . . . . . . . . . 77\n       A.4.6.  Inter-Area-Router-LSAs .\
    \ . . . . . . . . . . . . . . . 78\n       A.4.7.  AS-External-LSAs . . . . .\
    \ . . . . . . . . . . . . . . 79\n       A.4.8.  NSSA-LSAs  . . . . . . . . .\
    \ . . . . . . . . . . . . . 82\n       A.4.9.  Link-LSAs  . . . . . . . . . .\
    \ . . . . . . . . . . . . 82\n       A.4.10. Intra-Area-Prefix-LSAs . . . . .\
    \ . . . . . . . . . . . 84\n   Appendix B.  Architectural Constants . . . . .\
    \ . . . . . . . . . . 86\n   Appendix C.  Configurable Constants  . . . . . .\
    \ . . . . . . . . . 86\n     C.1.  Global Parameters  . . . . . . . . . . . .\
    \ . . . . . . . . 86\n     C.2.  Area Parameters  . . . . . . . . . . . . . .\
    \ . . . . . . . 87\n     C.3.  Router Interface Parameters  . . . . . . . . .\
    \ . . . . . . 88\n     C.4.  Virtual Link Parameters  . . . . . . . . . . . .\
    \ . . . . . 90\n     C.5.  NBMA Network Parameters  . . . . . . . . . . . . .\
    \ . . . . 91\n     C.6.  Point-to-Multipoint Network Parameters . . . . . . .\
    \ . . . 92\n     C.7.  Host Route Parameters  . . . . . . . . . . . . . . . .\
    \ . . 92\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document describes the modifications to OSPF to support\
    \ version\n   6 of the Internet Protocol (IPv6).  The fundamental mechanisms of\n\
    \   OSPF (flooding, Designated Router (DR) election, area support,\n   (Shortest\
    \ Path First) SPF calculations, etc.) remain unchanged.\n   However, some changes\
    \ have been necessary, either due to changes in\n   protocol semantics between\
    \ IPv4 and IPv6, or simply to handle the\n   increased address size of IPv6. \
    \ These modifications will necessitate\n   incrementing the protocol version from\
    \ version 2 to version 3.  OSPF\n   for IPv6 is also referred to as OSPF version\
    \ 3 (OSPFv3).\n   This document is organized as follows.  Section 2 describes\
    \ the\n   differences between OSPF for IPv4 (OSPF version 2) and OSPF for IPv6\n\
    \   (OSPF version 3) in detail.  Section 3 describes the difference\n   between\
    \ RFC 2740 and this document.  Section 4 provides\n   implementation details for\
    \ the changes.  Appendix A gives the OSPF\n   for IPv6 packet and Link State Advertisement\
    \ (LSA) formats.  Appendix\n   B lists the OSPF architectural constants.  Appendix\
    \ C describes\n   configuration parameters.\n"
- title: 1.1.  Requirements Notation
  contents:
  - "1.1.  Requirements Notation\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC-KEYWORDS].\n"
- title: 1.2.  Terminology
  contents:
  - "1.2.  Terminology\n   This document attempts to use terms from both the OSPF\
    \ for IPv4\n   specification ([OSPFV2]) and the IPv6 protocol specifications\n\
    \   ([IPV6]).  This has produced a mixed result.  Most of the terms used\n   both\
    \ by OSPF and IPv6 have roughly the same meaning (e.g.,\n   interfaces).  However,\
    \ there are a few conflicts.  IPv6 uses \"link\"\n   similarly to IPv4 OSPF's\
    \ \"subnet\" or \"network\".  In this case, we\n   have chosen to use IPv6's \"\
    link\" terminology.  \"Link\" replaces OSPF's\n   \"subnet\" and \"network\" in\
    \ most places in this document, although\n   OSPF's network-LSA remains unchanged\
    \ (and possibly unfortunately, a\n   new link-LSA has also been created).\n  \
    \ The names of some of the OSPF LSAs have also changed.  See\n   Section 2.8 for\
    \ details.\n   In the context of this document, an OSPF instance is a separate\n\
    \   protocol instance complete with its own protocol data structures\n   (e.g.,\
    \ areas, interfaces, neighbors), link-state database, protocol\n   state machines,\
    \ and protocol processing (e.g., SPF calculation).\n"
- title: 2.  Differences from OSPF for IPv4
  contents:
  - "2.  Differences from OSPF for IPv4\n   Most of the algorithms from OSPF for IPv4\
    \ [OSPFV2] have been\n   preserved in OSPF for IPv6.  However, some changes have\
    \ been\n   necessary, either due to changes in protocol semantics between IPv4\n\
    \   and IPv6, or simply to handle the increased address size of IPv6.\n   The\
    \ following subsections describe the differences between this\n   document and\
    \ [OSPFV2].\n"
- title: 2.1.  Protocol Processing Per-Link, Not Per-Subnet
  contents:
  - "2.1.  Protocol Processing Per-Link, Not Per-Subnet\n   IPv6 uses the term \"\
    link\" to indicate \"a communication facility or\n   medium over which nodes can\
    \ communicate at the link layer\" ([IPV6]).\n   \"Interfaces\" connect to links.\
    \  Multiple IPv6 subnets can be assigned\n   to a single link, and two nodes can\
    \ talk directly over a single link,\n   even if they do not share a common IPv6\
    \ subnet (IPv6 prefix).\n   For this reason, OSPF for IPv6 runs per-link instead\
    \ of the IPv4\n   behavior of per-IP-subnet.  The terms \"network\" and \"subnet\"\
    \ used in\n   the IPv4 OSPF specification ([OSPFV2]) should generally be replaced\n\
    \   by link.  Likewise, an OSPF interface now connects to a link instead\n   of\
    \ an IP subnet.\n   This change affects the receiving of OSPF protocol packets,\
    \ the\n   contents of Hello packets, and the contents of network-LSAs.\n"
- title: 2.2.  Removal of Addressing Semantics
  contents:
  - "2.2.  Removal of Addressing Semantics\n   In OSPF for IPv6, addressing semantics\
    \ have been removed from the\n   OSPF protocol packets and the main LSA types,\
    \ leaving a network-\n   protocol-independent core.  In particular:\n   o  IPv6\
    \ addresses are not present in OSPF packets, except in LSA\n      payloads carried\
    \ by the Link State Update packets.  See\n      Section 2.7 for details.\n   o\
    \  Router-LSAs and network-LSAs no longer contain network addresses,\n      but\
    \ simply express topology information.  See Section 2.8 for\n      details.\n\
    \   o  OSPF Router IDs, Area IDs, and LSA Link State IDs remain at the\n     \
    \ IPv4 size of 32 bits.  They can no longer be assigned as (IPv6)\n      addresses.\n\
    \   o  Neighboring routers are now always identified by Router ID.\n      Previously,\
    \ they had been identified by an IPv4 address on\n      broadcast, NBMA (Non-Broadcast\
    \ Multi-Access), and point-to-\n      multipoint links.\n"
- title: 2.3.  Addition of Flooding Scope
  contents:
  - "2.3.  Addition of Flooding Scope\n   Flooding scope for LSAs has been generalized\
    \ and is now explicitly\n   coded in the LSA's LS type field.  There are now three\
    \ separate\n   flooding scopes for LSAs:\n   o  Link-local scope.  LSA is only\
    \ flooded on the local link and no\n      further.  Used for the new link-LSA.\
    \  See Section 4.4.3.8 for\n      details.\n   o  Area scope.  LSA is only flooded\
    \ throughout a single OSPF area.\n      Used for router-LSAs, network-LSAs, inter-area-prefix-LSAs,\
    \ inter-\n      area-router-LSAs, and intra-area-prefix-LSAs.\n   o  AS scope.\
    \  LSA is flooded throughout the routing domain.  Used for\n      AS-external-LSAs.\
    \  A router that originates AS scoped LSAs is\n      considered an AS Boundary\
    \ Router (ASBR) and will set its E-bit in\n      router-LSAs for regular areas.\n"
- title: 2.4.  Explicit Support for Multiple Instances per Link
  contents:
  - "2.4.  Explicit Support for Multiple Instances per Link\n   OSPF now supports\
    \ the ability to run multiple OSPF protocol instances\n   on a single link.  For\
    \ example, this may be required on a NAP segment\n   shared between several providers.\
    \  Providers may be supporting\n   separate OSPF routing domains that wish to\
    \ remain separate even\n   though they have one or more physical network segments\
    \ (i.e., links)\n   in common.  In OSPF for IPv4, this was supported in a haphazard\n\
    \   fashion using the authentication fields in the OSPF for IPv4 header.\n   Another\
    \ use for running multiple OSPF instances is if you want, for\n   one reason or\
    \ another, to have a single link belong to two or more\n   OSPF areas.\n   Support\
    \ for multiple protocol instances on a link is accomplished via\n   an \"Instance\
    \ ID\" contained in the OSPF packet header and OSPF\n   interface data structures.\
    \  Instance ID solely affects the reception\n   of OSPF packets and applies to\
    \ normal OSPF interfaces and virtual\n   links.\n"
- title: 2.5.  Use of Link-Local Addresses
  contents:
  - "2.5.  Use of Link-Local Addresses\n   IPv6 link-local addresses are for use on\
    \ a single link, for purposes\n   of neighbor discovery, auto-configuration, etc.\
    \  IPv6 routers do not\n   forward IPv6 datagrams having link-local source addresses\
    \ [IP6ADDR].\n   Link-local unicast addresses are assigned from the IPv6 address\
    \ range\n   FE80/10.\n   OSPF for IPv6 assumes that each router has been assigned\
    \ link-local\n   unicast addresses on each of the router's attached physical links\n\
    \   [IP6ADDR].  On all OSPF interfaces except virtual links, OSPF packets\n  \
    \ are sent using the interface's associated link-local unicast address\n   as\
    \ the source address.  A router learns the link-local addresses of\n   all other\
    \ routers attached to its links and uses these addresses as\n   next-hop information\
    \ during packet forwarding.\n   On virtual links, a global scope IPv6 address\
    \ MUST be used as the\n   source address for OSPF protocol packets.\n   Link-local\
    \ addresses appear in OSPF link-LSAs (see Section 4.4.3.8).\n   However, link-local\
    \ addresses are not allowed in other OSPF LSA\n   types.  In particular, link-local\
    \ addresses MUST NOT be advertised in\n   inter-area-prefix-LSAs (Section 4.4.3.4),\
    \ AS-external-LSAs\n   (Section 4.4.3.6), NSSA-LSAs (Section 4.4.3.7), or intra-area-prefix-\n\
    \   LSAs (Section 4.4.3.9).\n"
- title: 2.6.  Authentication Changes
  contents:
  - "2.6.  Authentication Changes\n   In OSPF for IPv6, authentication has been removed\
    \ from the OSPF\n   protocol.  The \"AuType\" and \"Authentication\" fields have\
    \ been removed\n   from the OSPF packet header, and all authentication-related\
    \ fields\n   have been removed from the OSPF area and interface data structures.\n\
    \   When running over IPv6, OSPF relies on the IP Authentication Header\n   (see\
    \ [IPAUTH]) and the IP Encapsulating Security Payload (see\n   [IPESP]) as described\
    \ in [OSPFV3-AUTH] to ensure integrity and\n   authentication/confidentiality\
    \ of routing exchanges.\n   Protection of OSPF packet exchanges against accidental\
    \ data\n   corruption is provided by the standard IPv6 Upper-Layer checksum (as\n\
    \   described in Section 8.1 of [IPV6]), covering the entire OSPF packet\n   and\
    \ prepended IPv6 pseudo-header (see Appendix A.3.1).\n"
- title: 2.7.  Packet Format Changes
  contents:
  - "2.7.  Packet Format Changes\n   OSPF for IPv6 runs directly over IPv6.  Aside\
    \ from this, all\n   addressing semantics have been removed from the OSPF packet\
    \ headers,\n   making it essentially \"network-protocol-independent\".  All addressing\n\
    \   information is now contained in the various LSA types only.\n   In detail,\
    \ changes in OSPF packet format consist of the following:\n   o  The OSPF version\
    \ number has been incremented from 2 to 3.\n   o  The Options field in Hello packets\
    \ and Database Description\n      packets has been expanded to 24 bits.\n   o\
    \  The Authentication and AuType fields have been removed from the\n      OSPF\
    \ packet header (see Section 2.6).\n   o  The Hello packet now contains no address\
    \ information at all.\n      Rather, it now includes an Interface ID that the\
    \ originating\n      router has assigned to uniquely identify (among its own\n\
    \      interfaces) its interface to the link.  This Interface ID will be\n   \
    \   used as the network-LSA's Link State ID if the router becomes the\n      Designated\
    \ Router on the link.\n   o  Two Options bits, the \"R-bit\" and the \"V6-bit\"\
    , have been added to\n      the Options field for processing router-LSAs during\
    \ the SPF\n      calculation (see Appendix A.2).  If the \"R-bit\" is clear, an\
    \ OSPF\n      speaker can participate in OSPF topology distribution without\n\
    \      being used to forward transit traffic; this can be used in multi-\n   \
    \   homed hosts that want to participate in the routing protocol.  The\n     \
    \ V6-bit specializes the R-bit; if the V6-bit is clear, an OSPF\n      speaker\
    \ can participate in OSPF topology distribution without\n      being used to forward\
    \ IPv6 datagrams.  If the R-bit is set and the\n      V6-bit is clear, IPv6 datagrams\
    \ are not forwarded but datagrams\n      belonging to another protocol family\
    \ may be forwarded.\n   o  The OSPF packet header now includes an \"Instance ID\"\
    \ that allows\n      multiple OSPF protocol instances to be run on a single link\
    \ (see\n      Section 2.4).\n"
- title: 2.8.  LSA Format Changes
  contents:
  - "2.8.  LSA Format Changes\n   All addressing semantics have been removed from\
    \ the LSA header,\n   router-LSAs, and network-LSAs.  These two LSAs now describe\
    \ the\n   routing domain's topology in a network-protocol-independent manner.\n\
    \   New LSAs have been added to distribute IPv6 address information and\n   data\
    \ required for next-hop resolution.  The names of some of IPv4's\n   LSAs have\
    \ been changed to be more consistent with each other.\n   In detail, changes in\
    \ LSA format consist of the following:\n   o  The Options field has been removed\
    \ from the LSA header, expanded\n      to 24 bits, and moved into the body of\
    \ router-LSAs, network-LSAs,\n      inter-area-router-LSAs, and link-LSAs.  See\
    \ Appendix A.2 for\n      details.\n   o  The LSA Type field has been expanded\
    \ (into the former Options\n      space) to 16 bits, with the upper three bits\
    \ encoding flooding\n      scope and the handling of unknown LSA types (see Section\
    \ 2.9).\n   o  Addresses in LSAs are now expressed as [prefix, prefix length]\n\
    \      instead of [address, mask] (see Appendix A.4.1).  The default\n      route\
    \ is expressed as a prefix with length 0.\n   o  Router-LSAs and network-LSAs\
    \ now have no address information and\n      are network protocol independent.\n\
    \   o  Router interface information MAY be spread across multiple router-\n  \
    \    LSAs.  Receivers MUST concatenate all the router-LSAs originated\n      by\
    \ a given router when running the SPF calculation.\n   o  A new LSA called the\
    \ link-LSA has been introduced.  Link-LSAs have\n      link-local flooding scope;\
    \ they are never flooded beyond the link\n      with which they are associated.\
    \  Link-LSAs have three purposes: 1)\n      they provide the router's link-local\
    \ address to all other routers\n      attached to the link, 2) they inform other\
    \ routers attached to the\n      link of a list of IPv6 prefixes to associate\
    \ with the link, and 3)\n      they allow the router to advertise a collection\
    \ of Options bits to\n      associate with the network-LSA that will be originated\
    \ for the\n      link.  See Section 4.4.3.8 for details.\n   o  In IPv4, the router-LSA\
    \ carries a router's IPv4 interface\n      addresses, the IPv4 equivalent of link-local\
    \ addresses.  These are\n      only used when calculating next hops during the\
    \ OSPF routing\n      calculation (see Section 16.1.1 of [OSPFV2]), so they do\
    \ not need\n      to be flooded past the local link.  Hence, using link-LSAs to\n\
    \      distribute these addresses is more efficient.  Note that link-\n      local\
    \ addresses cannot be learned through the reception of Hellos\n      in all cases.\
    \  On NBMA links, next-hop routers do not necessarily\n      exchange Hellos.\
    \  Rather, these routers learn of each other's\n      existence by way of the\
    \ Designated Router (DR).\n   o  The Options field in the network LSA is set to\
    \ the logical OR of\n      the Options that each router on the link advertises\
    \ in its link-\n      LSA.\n   o  Type-3 summary-LSAs have been renamed \"inter-area-prefix-LSAs\"\
    .\n      Type-4 summary LSAs have been renamed \"inter-area-router-LSAs\".\n \
    \  o  The Link State ID in inter-area-prefix-LSAs, inter-area-router-\n      LSAs,\
    \ NSSA-LSAs, and AS-external-LSAs has lost its addressing\n      semantics and\
    \ now serves solely to identify individual pieces of\n      the Link State Database.\
    \  All addresses or Router IDs that were\n      formerly expressed by the Link\
    \ State ID are now carried in the LSA\n      bodies.\n   o  Network-LSAs and link-LSAs\
    \ are the only LSAs whose Link State ID\n      carries additional meaning.  For\
    \ these LSAs, the Link State ID is\n      always the Interface ID of the originating\
    \ router on the link\n      being described.  For this reason, network-LSAs and\
    \ link-LSAs are\n      now the only LSAs whose size cannot be limited: a network-LSA\
    \ MUST\n      list all routers connected to the link and a link-LSA MUST list\n\
    \      all of a router's addresses on the link.\n   o  A new LSA called the intra-area-prefix-LSA\
    \ has been introduced.\n      This LSA carries all IPv6 prefix information that\
    \ in IPv4 is\n      included in router-LSAs and network-LSAs.  See Section 4.4.3.9\
    \ for\n      details.\n   o  Inclusion of a forwarding address or external route\
    \ tag in AS-\n      external-LSAs is now optional.  In addition, AS-external-LSAs\
    \ can\n      now reference another LSA, for inclusion of additional route\n  \
    \    attributes that are outside the scope of the OSPF protocol.  For\n      example,\
    \ this reference could be used to attach BGP path\n      attributes to external\
    \ routes.\n"
- title: 2.9.  Handling Unknown LSA Types
  contents:
  - "2.9.  Handling Unknown LSA Types\n   Handling of unknown LSA types has been made\
    \ more flexible so that,\n   based on the LS type, unknown LSA types are either\
    \ treated as having\n   link-local flooding scope, or are stored and flooded as\
    \ if they were\n   understood.  This behavior is explicitly coded in the LSA Handling\n\
    \   bit of the link state header's LS type field (see the U-bit in\n   Appendix\
    \ A.4.2.1).\n   The IPv4 OSPF behavior of simply discarding unknown types is\n\
    \   unsupported due to the desire to mix router capabilities on a single\n   link.\
    \  Discarding unknown types causes problems when the Designated\n   Router supports\
    \ fewer options than the other routers on the link.\n"
- title: 2.10.  Stub/NSSA Area Support
  contents:
  - "2.10.  Stub/NSSA Area Support\n   In OSPF for IPv4, stub and NSSA areas were\
    \ designed to minimize link-\n   state database and routing table sizes for the\
    \ areas' internal\n   routers.  This allows routers with minimal resources to\
    \ participate\n   in even very large OSPF routing domains.\n   In OSPF for IPv6,\
    \ the concept of stub and NSSA areas is retained.  In\n   IPv6, of the mandatory\
    \ LSA types, stub areas carry only router-LSAs,\n   network-LSAs, inter-area-prefix-LSAs,\
    \ link-LSAs, and intra-area-\n   prefix-LSAs.  NSSA areas are restricted to these\
    \ types and, of\n   course, NSSA-LSAs.  This is the IPv6 equivalent of the LSA\
    \ types\n   carried in IPv4 stub areas: router-LSAs, network-LSAs, type 3\n  \
    \ summary-LSAs and for NSSA areas: stub area types and NSSA-LSAs.\n"
- title: 2.11.  Identifying Neighbors by Router ID
  contents:
  - "2.11.  Identifying Neighbors by Router ID\n   In OSPF for IPv6, neighboring routers\
    \ on a given link are always\n   identified by their OSPF Router ID.  This contrasts\
    \ with the IPv4\n   behavior where neighbors on point-to-point networks and virtual\
    \ links\n   are identified by their Router IDs while neighbors on broadcast,\n\
    \   NBMA, and point-to-multipoint links are identified by their IPv4\n   interface\
    \ addresses.\n   This change affects the reception of OSPF packets (see Section\
    \ 8.2 of\n   [OSPFV2]), the lookup of neighbors (Section 10 of [OSPFV2]), and\
    \ the\n   reception of Hello packets (Section 10.5 of [OSPFV2]).\n   The Router\
    \ ID of 0.0.0.0 is reserved and SHOULD NOT be used.\n"
- title: 3.  Differences with RFC 2740
  contents:
  - "3.  Differences with RFC 2740\n   OSPFv3 implementations based on RFC 2740 will\
    \ fully interoperate with\n   implementations based on this specification.  There\
    \ are, however,\n   some protocol additions and changes (all of which are backward\n\
    \   compatible).\n"
- title: 3.1.  Support for Multiple Interfaces on the Same Link
  contents:
  - "3.1.  Support for Multiple Interfaces on the Same Link\n   This protocol feature\
    \ was only partially specified in the RFC 2740.\n   The level of specification\
    \ was insufficient to implement the feature.\n   Section 4.9 specifies the additions\
    \ and clarifications necessary for\n   implementation.  They are fully compatible\
    \ with RFC 2740.\n"
- title: 3.2.  Deprecation of MOSPF for IPv6
  contents:
  - "3.2.  Deprecation of MOSPF for IPv6\n   This protocol feature was only partially\
    \ specified in RFC 2740.  The\n   level of specification was insufficient to implement\
    \ the feature.\n   There are no known implementations.  Multicast Extensions to\
    \ OSPF\n   (MOSPF) support and its attendant protocol fields have been\n   deprecated\
    \ from OSPFv3.  Refer to Section 4.4.3.2, Section 4.4.3.4,\n   Section 4.4.3.6,\
    \ Section 4.4.3.7, Appendix A.2, Appendix A.4.2.1,\n   Appendix A.4.3, Appendix\
    \ A.4.1.1, and Section 7.1.\n"
- title: 3.3.  NSSA Specification
  contents:
  - "3.3.  NSSA Specification\n   This protocol feature was only partially specified\
    \ in RFC 2740.  The\n   level of specification was insufficient to implement the\
    \ function.\n   This document includes an NSSA specification unique to OSPFv3.\
    \  This\n   specification coupled with [NSSA] provide sufficient specification\n\
    \   for implementation.  Refer to Section 4.8.5, Appendix A.4.3,\n   Appendix\
    \ A.4.8, and [NSSA].\n"
- title: 3.4.  Stub Area Unknown LSA Flooding Restriction Deprecated
  contents:
  - "3.4.  Stub Area Unknown LSA Flooding Restriction Deprecated\n   In RFC 2740 [OSPFV3],\
    \ flooding of unknown LSA was restricted within\n   stub and NSSA areas.  The\
    \ text describing this restriction is\n   included below.\n        However, unlike\
    \ in IPv4, IPv6 allows LSAs with unrecognized\n        LS types to be labeled\
    \ \"Store and flood the LSA, as if type\n        understood\" (see the U-bit in\
    \ Appendix A.4.2.1).  Uncontrolled\n        introduction of such LSAs could cause\
    \ a stub area's link-state\n        database to grow larger than its component\
    \ routers' capacities.\n        To guard against this, the following rule regarding\
    \ stub areas\n        has been established: an LSA whose LS type is unrecognized\
    \ can\n        only be flooded into/throughout a stub area if both a) the LSA\n\
    \        has area or link-local flooding scope and b) the LSA has U-bit\n    \
    \    set to 0.  See Section 3.5 for details.\n   This restriction has been deprecated.\
    \  OSPFv3 routers will flood link\n   and area scope LSAs whose LS type is unrecognized\
    \ and whose U-bit is\n   set to 1 throughout stub and NSSA areas.  There are no\
    \ backward-\n   compatibility issues other than OSPFv3 routers still supporting\
    \ the\n   restriction may not propagate newly defined LSA types.\n"
- title: 3.5.  Link LSA Suppression
  contents:
  - "3.5.  Link LSA Suppression\n   The LinkLSASuppression interface configuration\
    \ parameter has been\n   added.  If LinkLSASuppression is configured for an interface\
    \ and the\n   interface type is not broadcast or NBMA, origination of the link-LSA\n\
    \   may be suppressed.  The LinkLSASuppression interface configuration\n   parameter\
    \ is described in Appendix C.3.  Section 4.8.2 and\n   Section 4.4.3.8 were updated\
    \ to reflect the parameter's usage.\n"
- title: 3.6.  LSA Options and Prefix Options Updates
  contents:
  - "3.6.  LSA Options and Prefix Options Updates\n   The LSA Options and Prefix Options\
    \ fields have been updated to\n   reflect recent protocol additions.  Specifically,\
    \ bits related to\n   MOSPF have been deprecated, Options field bits common with\
    \ OSPFv2\n   have been reserved, and the DN-bit has been added to the prefix-\n\
    \   options.  Refer to Appendix A.2 and Appendix A.4.1.1.\n"
- title: 3.7.  IPv6 Site-Local Addresses
  contents:
  - "3.7.  IPv6 Site-Local Addresses\n   All references to IPv6 site-local addresses\
    \ have been removed.\n"
- title: 4.  Implementation Details
  contents:
  - "4.  Implementation Details\n   When going from IPv4 to IPv6, the basic OSPF mechanisms\
    \ remain\n   unchanged from those documented in [OSPFV2].  These mechanisms are\n\
    \   briefly outlined in Section 4 of [OSPFV2].  Both IPv6 and IPv4 have a\n  \
    \ link-state database composed of LSAs and synchronized between\n   adjacent routers.\
    \  Initial synchronization is performed through the\n   Database Exchange process,\
    \ which includes the exchange of Database\n   Description, Link State Request,\
    \ and Link State Update packets.\n   Thereafter, database synchronization is maintained\
    \ via flooding,\n   utilizing Link State Update and Link State Acknowledgment\
    \ packets.\n   Both IPv6 and IPv4 use OSPF Hello packets to discover and maintain\n\
    \   neighbor relationships, as well as to elect Designated Routers and\n   Backup\
    \ Designated Routers on broadcast and NBMA links.  The decision\n   as to which\
    \ neighbor relationships become adjacencies, and the basic\n   ideas behind inter-area\
    \ routing, importing external information in\n   AS-external-LSAs, and the various\
    \ routing calculations are also the\n   same.\n   In particular, the following\
    \ IPv4 OSPF functionality described in\n   [OSPFV2] remains completely unchanged\
    \ for IPv6:\n   o  Both IPv4 and IPv6 use OSPF packet types described in Section\
    \ 4.3\n      of [OSPFV2], namely: Hello, Database Description, Link State\n  \
    \    Request, Link State Update, and Link State Acknowledgment packets.\n    \
    \  While in some cases (e.g., Hello packets) their format has changed\n      somewhat,\
    \ the functions of the various packet types remain the\n      same.\n   o  The\
    \ system requirements for an OSPF implementation remain\n      unchanged, although\
    \ OSPF for IPv6 requires an IPv6 protocol stack\n      (from the network layer\
    \ on down) since it runs directly over the\n      IPv6 network layer.\n   o  The\
    \ discovery and maintenance of neighbor relationships, and the\n      selection\
    \ and establishment of adjacencies, remain the same.  This\n      includes election\
    \ of the Designated Router and Backup Designated\n      Router on broadcast and\
    \ NBMA links.  These mechanisms are\n      described in Sections 7, 7.1, 7.2,\
    \ 7.3, 7.4, and 7.5 of [OSPFV2].\n   o  The link types (or equivalently, interface\
    \ types) supported by\n      OSPF remain unchanged, namely: point-to-point, broadcast,\
    \ NBMA,\n      point-to-multipoint, and virtual links.\n   o  The interface state\
    \ machine, including the list of OSPF interface\n      states and events, and\
    \ the Designated Router and Backup Designated\n      Router election algorithm\
    \ remain unchanged.  These are described\n      in Sections 9.1, 9.2, 9.3, and\
    \ 9.4 of [OSPFV2].\n   o  The neighbor state machine, including the list of OSPF\
    \ neighbor\n      states and events, remains unchanged.  The neighbor state machine\n\
    \      is described in Sections 10.1, 10.2, 10.3, and 10.4 of [OSPFV2].\n   o\
    \  Aging of the link-state database, as well as flushing LSAs from\n      the\
    \ routing domain through the premature aging process, remains\n      unchanged\
    \ from the description in Sections 14 and 14.1 of\n      [OSPFV2].\n   However,\
    \ some OSPF protocol mechanisms have changed as previously\n   described in Section\
    \ 2 herein.  These changes are explained in detail\n   in the following subsections,\
    \ making references to the appropriate\n   sections of [OSPFV2].\n   The following\
    \ subsections provide a recipe for turning an IPv4 OSPF\n   implementation into\
    \ an IPv6 OSPF implementation.\n"
- title: 4.1.  Protocol Data Structures
  contents:
  - "4.1.  Protocol Data Structures\n   The major OSPF data structures are the same\
    \ for both IPv4 and IPv6:\n   areas, interfaces, neighbors, the link-state database,\
    \ and the\n   routing table.  The top-level data structures for IPv6 remain those\n\
    \   listed in Section 5 of [OSPFV2], with the following modifications:\n   o \
    \ All LSAs with known LS type and AS flooding scope appear in the\n      top-level\
    \ data structure, instead of belonging to a specific area\n      or link.  AS-external-LSAs\
    \ are the only LSAs defined by this\n      specification that have AS flooding\
    \ scope.  LSAs with unknown LS\n      type, U-bit set to 1 (flood even when unrecognized),\
    \ and AS\n      flooding scope also appear in the top-level data structure.\n"
- title: 4.1.1.  The Area Data Structure
  contents:
  - "4.1.1.  The Area Data Structure\n   The IPv6 area data structure contains all\
    \ elements defined for IPv4\n   areas in Section 6 of [OSPFV2].  In addition,\
    \ all LSAs of known type\n   that have area flooding scope are contained in the\
    \ IPv6 area data\n   structure.  This always includes the following LSA types:\
    \ router-\n   LSAs, network-LSAs, inter-area-prefix-LSAs, inter-area-router-LSAs,\n\
    \   and intra-area-prefix-LSAs.  LSAs with unknown LS type, U-bit set to\n   1\
    \ (flood even when unrecognized), and area scope also appear in the\n   area data\
    \ structure.  NSSA-LSAs are also included in an NSSA area's\n   data structure.\n"
- title: 4.1.2.  The Interface Data Structure
  contents:
  - "4.1.2.  The Interface Data Structure\n   In OSPF for IPv6, an interface connects\
    \ a router to a link.  The IPv6\n   interface structure modifies the IPv4 interface\
    \ structure (as defined\n   in Section 9 of [OSPFV2]) as follows:\n   Interface\
    \ ID\n      Every interface is assigned an Interface ID, which uniquely\n    \
    \  identifies the interface with the router.  For example, some\n      implementations\
    \ MAY be able to use the MIB-II IfIndex ([INTFMIB])\n      as the Interface ID.\
    \  The Interface ID appears in Hello packets\n      sent out the interface, the\
    \ link-local-LSA originated by the\n      router for the attached link, and the\
    \ router-LSA originated by the\n      router-LSA for the associated area.  It\
    \ will also serve as the\n      Link State ID for the network-LSA that the router\
    \ will originate\n      for the link if the router is elected Designated Router.\n\
    \      The Interface ID for a virtual link is independent of the\n      Interface\
    \ ID of the outgoing interface it traverses in the transit\n      area.\n   Instance\
    \ ID\n      Every interface is assigned an Instance ID.  This should default\n\
    \      to 0.  It is only necessary to assign a value other than 0 on\n      those\
    \ links that will contain multiple separate communities of\n      OSPF routers.\
    \  For example, suppose that there are two communities\n      of routers on a\
    \ given ethernet segment that you wish to keep\n      separate.\n      The first\
    \ community is assigned an Instance ID of 0 and all the\n      routers in the\
    \ first community will be assigned 0 as the Instance\n      ID for interfaces\
    \ connected to the ethernet segment.  An Instance\n      ID of 1 is assigned to\
    \ the other routers' interfaces connected to\n      the ethernet segment.  The\
    \ OSPF transmit and receive processing\n      (see Section 4.2) will then keep\
    \ the two communities separate.\n   List of LSAs with link-local scope\n     \
    \ All LSAs with link-local scope and that were originated/flooded on\n      the\
    \ link belong to the interface structure that connects to the\n      link.  This\
    \ includes the collection of the link's link-LSAs.\n   IP interface address\n\
    \      For IPv6, the IPv6 address appearing in the source of OSPF packets\n  \
    \    sent on the interface is almost always a link-local address.  The\n     \
    \ one exception is for virtual links that MUST use one of the\n      router's\
    \ own global IPv6 addresses as IP interface address.\n   List of link prefixes\n\
    \      A list of IPv6 prefixes can be configured for the attached link.\n    \
    \  These will be advertised by the router in link-LSAs, so that they\n      can\
    \ be advertised by the link's Designated Router in intra-area-\n      prefix-LSAs.\n\
    \   In OSPF for IPv6, each router interface has a single metric\n   representing\
    \ the cost of sending packets on the interface.  In\n   addition, OSPF for IPv6\
    \ relies on the IP Authentication Header (see\n   [IPAUTH]) and the IP Encapsulating\
    \ Security Payload (see [IPESP]) as\n   described in [OSPFV3-AUTH] to ensure integrity\
    \ and authentication/\n   confidentiality of routing exchanges.  For this reason,\
    \ AuType and\n   Authentication key are not associated with IPv6 OSPF interfaces.\n\
    \   Interface states, events, and the interface state machine remain\n   unchanged\
    \ from IPv4 as documented in Sections 9.1, 9.2, and 9.3 of\n   [OSPFV2] respectively.\
    \  The Designated Router and Backup Designated\n   Router election algorithm also\
    \ remains unchanged from the IPv4\n   election in Section 9.4 of [OSPFV2].\n"
- title: 4.1.3.  The Neighbor Data Structure
  contents:
  - "4.1.3.  The Neighbor Data Structure\n   The neighbor structure performs the same\
    \ function in both IPv6 and\n   IPv4.  Namely, it collects all information required\
    \ to form an\n   adjacency between two routers when such an adjacency becomes\n\
    \   necessary.  Each neighbor structure is bound to a single OSPF\n   interface.\
    \  The differences between the IPv6 neighbor structure and\n   the neighbor structure\
    \ defined for IPv4 in Section 10 of [OSPFV2]\n   are:\n   Neighbor's Interface\
    \ ID\n      The Interface ID that the neighbor advertises in its Hello packets\n\
    \      must be recorded in the neighbor structure.  The router will\n      include\
    \ the neighbor's Interface ID in the router's router-LSA\n      when either a)\
    \ advertising a point-to-point or point-to-multipoint\n      link to the neighbor\
    \ or b) advertising a link to a network where\n      the neighbor has become the\
    \ Designated Router.\n   Neighbor IP address\n      The neighbor's IPv6 address\
    \ contained as the source address in\n      OSPF for IPv6 packets.  This will\
    \ be an IPv6 link-local address\n      for all link types except virtual links.\n\
    \   Neighbor's Designated Router\n      The neighbor's choice of Designated Router\
    \ is now encoded as a\n      Router ID instead of as an IP address.\n   Neighbor's\
    \ Backup Designated Router\n      The neighbor's choice of Backup Designated Router\
    \ is now encoded\n      as a Router ID instead of as an IP address.\n   Neighbor\
    \ states, events, and the neighbor state machine remain\n   unchanged from IPv4\
    \ as documented in Sections 10.1, 10.2, and 10.3 of\n   [OSPFV2] respectively.\
    \  The decision as to which adjacencies to form\n   also remains unchanged from\
    \ the IPv4 logic documented in Section 10.4\n   of [OSPFV2].\n"
- title: 4.2.  Protocol Packet Processing
  contents:
  - "4.2.  Protocol Packet Processing\n   OSPF for IPv6 runs directly over IPv6's\
    \ network layer.  As such, it\n   is encapsulated in one or more IPv6 headers\
    \ with the Next Header\n   field of the immediately encapsulating IPv6 header\
    \ set to the value\n   89.\n   As for OSPF for IPv4, OSPF for IPv6 OSPF routing\
    \ protocol packets are\n   sent along adjacencies only (with the exception of\
    \ Hello packets,\n   which are used to discover the adjacencies).  OSPF packet\
    \ types and\n   functions are the same in both IPv4 and IPv6, encoded by the Type\n\
    \   field of the standard OSPF packet header.\n"
- title: 4.2.1.  Sending Protocol Packets
  contents:
  - "4.2.1.  Sending Protocol Packets\n   When an IPv6 router sends an OSPF routing\
    \ protocol packet, it fills\n   in the fields of the standard OSPF for IPv6 packet\
    \ header (see\n   Appendix A.3.1) as follows:\n   Version #\n      Set to 3, the\
    \ version number of the protocol as documented in this\n      specification.\n\
    \   Type\n      The type of OSPF packet, such as Link State Update or Hello\n\
    \      packet.\n   Packet length\n      The length of the entire OSPF packet in\
    \ bytes, including the\n      standard OSPF packet header.\n   Router ID\n   \
    \   The identity of the router itself (who is originating the packet).\n   Area\
    \ ID\n      The OSPF area for the interface on which the packet is being sent.\n\
    \   Instance ID\n      The OSPF Instance ID associated with the interface out\
    \ of which\n      the packet is being sent.\n   Checksum\n      The standard IPv6\
    \ Upper-Layer checksum (as described in Section\n      8.1 of [IPV6]) covering\
    \ the entire OSPF packet and prepended IPv6\n      pseudo-header (see Appendix\
    \ A.3.1).\n   Selection of OSPF routing protocol packets' IPv6 source and\n  \
    \ destination addresses is performed identically to the IPv4 logic in\n   Section\
    \ 8.1 of [OSPFV2].  The IPv6 destination address is chosen from\n   among the\
    \ addresses AllSPFRouters, AllDRouters, and the Neighbor IP\n   address associated\
    \ with the other end of the adjacency (which in\n   IPv6, for all links except\
    \ virtual links, is an IPv6 link-local\n   address).\n   The sending of Link State\
    \ Request packets and Link State\n   Acknowledgment packets remains unchanged\
    \ from the IPv4 procedures\n   documented in Sections 10.9 and 13.5 of [OSPFV2]\
    \ respectively.\n   Sending Hello packets is documented in Section 4.2.1.1, and\
    \ the\n   sending of Database Description packets in Section 4.2.1.2.  The\n \
    \  sending of Link State Update packets is documented in Section 4.5.2.\n"
- title: 4.2.1.1.  Sending Hello Packets
  contents:
  - "4.2.1.1.  Sending Hello Packets\n   IPv6 changes the way OSPF Hello packets are\
    \ sent in the following\n   ways (compare to Section 9.5 of [OSPFV2]):\n   o \
    \ Before the Hello packet is sent on an interface, the interface's\n      Interface\
    \ ID MUST be copied into the Hello packet.\n   o  The Hello packet no longer contains\
    \ an IP network mask since OSPF\n      for IPv6 runs per-link instead of per-subnet.\n\
    \   o  The choice of Designated Router and Backup Designated Router is\n     \
    \ now indicated within Hellos by their Router IDs instead of by\n      their IP\
    \ interface addresses.  Advertising the Designated Router\n      (or Backup Designated\
    \ Router) as 0.0.0.0 indicates that the\n      Designated Router (or Backup Designated\
    \ Router) has not yet been\n      chosen.\n   o  The Options field within Hello\
    \ packets has moved around, getting\n      larger in the process.  More Options\
    \ bits are now possible.  Those\n      that MUST be set correctly in Hello packets\
    \ are as follows.  The\n      E-bit is set if and only if the interface attaches\
    \ to a regular\n      area, i.e., not a stub or NSSA area.  Similarly, the N-bit\
    \ is set\n      if and only if the interface attaches to an NSSA area (see\n \
    \     [NSSA]).  Finally, the DC-bit is set if and only if the router\n      wishes\
    \ to suppress the sending of future Hellos over the interface\n      (see [DEMAND]).\
    \  Unrecognized bits in the Hello packet's Options\n      field should be cleared.\n\
    \   Sending Hello packets on NBMA networks proceeds for IPv6 in exactly\n   the\
    \ same way as for IPv4, as documented in Section 9.5.1 of [OSPFV2].\n"
- title: 4.2.1.2.  Sending Database Description Packets
  contents:
  - "4.2.1.2.  Sending Database Description Packets\n   The sending of Database Description\
    \ packets differs from Section 10.8\n   of [OSPFV2] in the following ways:\n \
    \  o  The Options field within Database Description packets has moved\n      around,\
    \ getting larger in the process.  More Options bits are now\n      possible. \
    \ Those that MUST be set correctly in Database\n      Description packets are\
    \ as follows.  The DC-bit is set if and only\n      if the router wishes to suppress\
    \ the sending of Hellos over the\n      interface (see [DEMAND]).  Unrecognized\
    \ bits in the Database\n      Description packet's Options field should be cleared.\n"
- title: 4.2.2.  Receiving Protocol Packets
  contents:
  - "4.2.2.  Receiving Protocol Packets\n   Whenever a router receives an OSPF protocol\
    \ packet, it is marked with\n   the interface on which it was received.  For routers\
    \ that have\n   virtual links configured, it may not be immediately obvious with\n\
    \   which interface to associate the packet.  For example, consider the\n   Router\
    \ RT11 depicted in Figure 6 of [OSPFV2].  If RT11 receives an\n   OSPF protocol\
    \ packet on its interface to Network N8, it may want to\n   associate the packet\
    \ with the interface to Area 2, or with the\n   virtual link to Router RT10 (which\
    \ is part of the backbone).  In the\n   following, we assume that the packet is\
    \ initially associated with the\n   non-virtual link.\n   In order for the packet\
    \ to be passed to OSPF for processing, the\n   following tests must be performed\
    \ on the encapsulating IPv6 headers:\n   o  The packet's IP destination address\
    \ MUST be one of the IPv6\n      unicast addresses associated with the receiving\
    \ interface (this\n      includes link-local addresses), one of the IPv6 multicast\n\
    \      addresses AllSPFRouters or AllDRouters, or an IPv6 global address\n   \
    \   (for virtual links).\n   o  The Next Header field of the immediately encapsulating\
    \ IPv6 header\n      MUST specify the OSPF protocol (89).\n   o  Any encapsulating\
    \ IP Authentication Headers (see [IPAUTH]) and the\n      IP Encapsulating Security\
    \ Payloads (see [IPESP]) MUST be processed\n      and/or verified to ensure integrity\
    \ and authentication/\n      confidentiality of OSPF routing exchanges.  This\
    \ is described in\n      [OSPFV3-AUTH].\n   After processing the encapsulating\
    \ IPv6 headers, the OSPF packet\n   header is processed.  The fields specified\
    \ in the header must match\n   those configured for the receiving OSPFv3 interface.\
    \  If they do not,\n   the packet SHOULD be discarded:\n   o  The version number\
    \ field MUST specify protocol version 3.\n   o  The IPv6 Upper-Layer checksum\
    \ (as described in Section 8.1 of\n      [IPV6]), covering the entire OSPF packet\
    \ and prepended IPv6\n      pseudo-header, must be verified (see Appendix A.3.1).\n\
    \   o  The Area ID and Instance ID found in the OSPF header must be\n      verified.\
    \  If both of the following cases fail, the packet should\n      be discarded.\
    \  The Area ID and Instance ID specified in the header\n      must either:\n \
    \     1.  Match one of the Area ID(s) and Interface Instance ID(s) for\n     \
    \     the receiving link.  Unlike IPv4, the IPv6 source address is\n         \
    \ not restricted to lie within the same IPv6 subnet as the\n          receiving\
    \ link.  IPv6 OSPF runs per-link instead of per-IP-\n          subnet.\n     \
    \ 2.  Match the backbone area and other criteria for a configured\n          virtual\
    \ link.  The receiving router must be an ABR (Area\n          Border Router) and\
    \ the Router ID specified in the packet (the\n          source router) must be\
    \ the other end of a configured virtual\n          link.  Additionally, the receiving\
    \ link must have an OSPFv3\n          interface that attaches to the virtual link's\
    \ configured\n          transit area and the Instance ID must match the virtual\
    \ link's\n          Instance ID.  If all of these checks succeed, the packet is\n\
    \          accepted and is associated with the virtual link (and the\n       \
    \   backbone area).\n   o  Locally originated packets SHOULD NOT be processed\
    \ by OSPF except\n      for support of multiple interfaces attached to the same\
    \ link as\n      described in Section 4.9.  Locally originated packets have a\n\
    \      source address equal to one of the router's local addresses.\n   o  Packets\
    \ whose IPv6 destination is AllDRouters should only be\n      accepted if the\
    \ state of the receiving OSPFv3 interface is DR or\n      Backup (see Section\
    \ 9.1 [OSPFV2]).\n   After header processing, the packet is further processed\
    \ according to\n   its OSPF packet type.  OSPF packet types and functions are\
    \ the same\n   for both IPv4 and IPv6.\n   If the packet type is Hello, it should\
    \ then be further processed by\n   the Hello packet processing as described in\
    \ Section 4.2.2.1.  All\n   other packet types are sent/received only on adjacencies.\
    \  This means\n   that the packet must have been sent by one of the router's active\n\
    \   neighbors.  The neighbor is identified by the Router ID appearing in\n   the\
    \ received packet's OSPF header.  Packets not matching any active\n   neighbor\
    \ are discarded.\n   The receive processing of Database Description packets, Link\
    \ State\n   Request packets, and Link State Acknowledgment packets is almost\n\
    \   identical to the IPv4 procedures documented in Sections 10.6, 10.7,\n   and\
    \ 13.7 of [OSPFV2] respectively with the exceptions noted below.\n   o  LSAs with\
    \ unknown LS types in Database Description packets that\n      have an acceptable\
    \ flooding scope are processed the same as LSAs\n      with known LS types.  In\
    \ OSPFv2 [OSPFV2], these would result in\n      the adjacency being brought down\
    \ with a SequenceMismatch event.\n   The receiving of Hello packets is documented\
    \ in Section 4.2.2.1 and\n   the receiving of Link State Update packets is documented\
    \ in\n   Section 4.5.1.\n"
- title: 4.2.2.1.  Receiving Hello Packets
  contents:
  - "4.2.2.1.  Receiving Hello Packets\n   The receive processing of Hello packets\
    \ differs from Section 10.5 of\n   [OSPFV2] in the following ways:\n   o  On all\
    \ link types (e.g., broadcast, NBMA, point-to-point, etc.),\n      neighbors are\
    \ identified solely by their OSPF Router ID.  For all\n      link types except\
    \ virtual links, the Neighbor IP address is set to\n      the IPv6 source address\
    \ in the IPv6 header of the received OSPF\n      Hello packet.\n   o  There is\
    \ no longer a Network Mask field in the Hello packet.\n   o  The neighbor's choice\
    \ of Designated Router and Backup Designated\n      Router is now encoded as an\
    \ OSPF Router ID instead of an IP\n      interface address.\n"
- title: 4.3.  The Routing table Structure
  contents:
  - "4.3.  The Routing table Structure\n   The routing table used by OSPF for IPv4\
    \ is defined in Section 11 of\n   [OSPFV2].  For IPv6, there are analogous routing\
    \ table entries: there\n   are routing table entries for IPv6 address prefixes\
    \ and also for AS\n   boundary routers.  The latter routing table entries are\
    \ only used to\n   hold intermediate results during the routing table build process\
    \ (see\n   Section 4.8).\n   Also, to hold the intermediate results during the\
    \ shortest-path\n   calculation for each area, there is a separate routing table\
    \ for each\n   area holding the following entries:\n   o  An entry for each router\
    \ in the area.  Routers are identified by\n      their OSPF Router ID.  These\
    \ routing table entries hold the set of\n      shortest paths through a given\
    \ area to a given router, which in\n      turn allows calculation of paths to\
    \ the IPv6 prefixes advertised\n      by that router in intra-area-prefix-LSAs.\
    \  If the router is also\n      an area border router, these entries are also\
    \ used to calculate\n      paths for inter-area address prefixes.  If in addition\
    \ the router\n      is the other endpoint of a virtual link, the routing table\
    \ entry\n      describes the cost and viability of the virtual link.\n   o  An\
    \ entry for each transit link in the area.  Transit links have\n      associated\
    \ network-LSAs.  Both the transit link and the network-\n      LSA are identified\
    \ by a combination of the Designated Router's\n      Interface ID on the link\
    \ and the Designated Router's OSPF Router\n      ID.  These routing table entries\
    \ allow later calculation of paths\n      to IP prefixes advertised for the transit\
    \ link in intra-area-\n      prefix-LSAs.\n   The fields in the IPv4 OSPF routing\
    \ table (see Section 11 of\n   [OSPFV2]) remain valid for IPv6: optional capabilities\
    \ (routers\n   only), path type, cost, type 2 cost, link state origin, and for\
    \ each\n   of the equal cost paths to the destination, the next-hop and\n   advertising\
    \ routers.\n   For IPv6, the link-state origin field in the routing table entry\
    \ is\n   the router-LSA or network-LSA that has directly or indirectly\n   produced\
    \ the routing table entry.  For example, if the routing table\n   entry describes\
    \ a route to an IPv6 prefix, the link state origin is\n   the router-LSA or network-LSA\
    \ that is listed in the body of the\n   intra-area-prefix-LSA that has produced\
    \ the route (see\n   Appendix A.4.10).\n"
- title: 4.3.1.  Routing Table Lookup
  contents:
  - "4.3.1.  Routing Table Lookup\n   Routing table lookup (i.e., determining the\
    \ best matching routing\n   table entry during IP forwarding) is the same for\
    \ IPv6 as for IPv4.\n"
- title: 4.4.  Link State Advertisements
  contents:
  - "4.4.  Link State Advertisements\n   For IPv6, the OSPF LSA header has changed\
    \ slightly, with the LS type\n   field expanding and the Options field being moved\
    \ into the body of\n   appropriate LSAs.  Also, the formats of some LSAs have\
    \ changed\n   somewhat (namely, router-LSAs, network-LSAs, AS-external-LSAs, and\n\
    \   NSSA-LSAs), while the names of other LSAs have been changed (type 3\n   and\
    \ 4 summary-LSAs are now inter-area-prefix-LSAs and inter-area-\n   router-LSAs\
    \ respectively) and additional LSAs have been added (link-\n   LSAs and intra-area-prefix-LSAs).\
    \  Type of Service (TOS) has been\n   removed from the OSPFv2 specification [OSPFV2]\
    \ and is not encoded\n   within OSPF for IPv6's LSAs.\n   These changes will be\
    \ described in detail in the following\n   subsections.\n"
- title: 4.4.1.  The LSA Header
  contents:
  - "4.4.1.  The LSA Header\n   In both IPv4 and IPv6, all OSPF LSAs begin with a\
    \ standard 20-byte\n   LSA header.  However, the contents of this 20-byte header\
    \ have\n   changed in IPv6.  The LS age, Advertising Router, LS Sequence Number,\n\
    \   LS checksum, and length fields within the LSA header remain\n   unchanged,\
    \ as documented in Sections 12.1.1, 12.1.5, 12.1.6, 12.1.7,\n   and A.4.1 of [OSPFV2],\
    \ respectively.  However, the following fields\n   have changed for IPv6:\n  \
    \ Options\n      The Options field has been removed from the standard 20-byte\
    \ LSA\n      header and moved into the body of router-LSAs, network-LSAs,\n  \
    \    inter-area-router-LSAs, and link-LSAs.  The size of the Options\n      field\
    \ has increased from 8 to 24 bits, and some of the bit\n      definitions have\
    \ changed (see Appendix A.2).  Additionally, a\n      separate PrefixOptions field,\
    \ 8 bits in length, is attached to\n      each prefix advertised within the body\
    \ of an LSA.\n   LS type\n      The size of the LS type field has increased from\
    \ 8 to 16 bits,\n      with high-order bit encoding the handling of unknown types\
    \ and the\n      next two bits encoding flooding scope.  See Appendix A.4.2.1\
    \ for\n      the current coding of the LS type field.\n   Link State ID\n    \
    \  The Link State ID remains at 32 bits in length.  However, except\n      for\
    \ network-LSAs and link-LSAs, the Link State ID has shed any\n      addressing\
    \ semantics.  For example, an IPv6 router originating\n      multiple AS-external-LSAs\
    \ could start by assigning the first a\n      Link State ID of 0.0.0.1, the second\
    \ a Link State ID of 0.0.0.2,\n      and so on.  Instead of the IPv4 behavior\
    \ of encoding the network\n      number within the AS-external-LSA's Link State\
    \ ID, the IPv6 Link\n      State ID simply serves as a way to differentiate multiple\
    \ LSAs\n      originated by the same router.\n      For network-LSAs, the Link\
    \ State ID is set to the Designated\n      Router's Interface ID on the link.\
    \  When a router originates a\n      link-LSA for a given link, its Link State\
    \ ID is set equal to the\n      router's Interface ID on the link.\n"
- title: 4.4.2.  The Link-State Database
  contents:
  - "4.4.2.  The Link-State Database\n   In IPv6, as in IPv4, individual LSAs are\
    \ identified by a combination\n   of their LS type, Link State ID, and Advertising\
    \ Router fields.\n   Given two instances of an LSA, the most recent instance is\
    \ determined\n   by examining the LSAs' LS sequence number, using LS checksum\
    \ and LS\n   age as tiebreakers (see Section 13.1 of [OSPFV2]).\n   In IPv6, the\
    \ link-state database is split across three separate data\n   structures.  LSAs\
    \ with AS flooding scope are contained within the\n   top-level OSPF data structure\
    \ (see Section 4.1) as long as either\n   their LS type is known or their U-bit\
    \ is 1 (flood even when\n   unrecognized); this includes the AS-external-LSAs.\
    \  LSAs with area\n   flooding scope are contained within the appropriate area\
    \ structure\n   (see Section 4.1.1) as long as either their LS type is known or\
    \ their\n   U-bit is 1 (flood even when unrecognized); this includes router-LSAs,\n\
    \   network-LSAs, inter-area-prefix-LSAs, inter-area-router-LSAs, NSSA-\n   LSAs,\
    \ and intra-area-prefix-LSAs.  LSAs with an unknown LS type, the\n   U-bit set\
    \ to 0, and/or link-local flooding scope are contained within\n   the appropriate\
    \ interface structure (see Section 4.1.2); this\n   includes link-LSAs.\n   To\
    \ look up or install an LSA in the database, you first examine the\n   LS type\
    \ and the LSA's context (i.e., the area or link to which the\n   LSA belongs).\
    \  This information allows you to find the correct\n   database of LSAs where\
    \ you then search based on the LSA's type, Link\n   State ID, and Advertising\
    \ Router.\n"
- title: 4.4.3.  Originating LSAs
  contents:
  - "4.4.3.  Originating LSAs\n   The process of reoriginating an LSA in IPv6 is the\
    \ same as in IPv4:\n   the LSA's LS sequence number is incremented, its LS age\
    \ is set to 0,\n   its LS checksum is calculated, and the LSA is added to the\
    \ link state\n   database and flooded on the appropriate interfaces.\n   The list\
    \ of events causing LSAs to be reoriginated for IPv4 is given\n   in Section 12.4\
    \ of [OSPFV2].  The following events and/or actions are\n   added for IPv6:\n\
    \   o  The state or interface ID of one of the router's interfaces\n      changes.\
    \  The router may need to (re)originate or flush its link-\n      LSA and one\
    \ or more router-LSAs and/or intra-area-prefix-LSAs.  If\n      the router is\
    \ the Designated Router, the router may also need to\n      (re)originate and/or\
    \ flush the network-LSA corresponding to the\n      interface.\n   o  The identity\
    \ of a link's Designated Router changes.  The router\n      may need to (re)originate\
    \ or flush the link's network-LSA and one\n      or more router-LSAs and/or intra-area-prefix-LSAs.\n\
    \   o  A neighbor transitions to/from \"Full\" state.  The router may need\n \
    \     to (re)originate or flush the link's network-LSA and one or more\n     \
    \ router-LSAs and/or intra-area-prefix-LSAs.\n   o  The Interface ID of a neighbor\
    \ changes.  This may cause a new\n      instance of a router-LSA to be originated\
    \ for the associated area.\n   o  A new prefix is added to an attached link, or\
    \ a prefix is deleted\n      (both through configuration).  This causes the router\
    \ to\n      reoriginate its link-LSA for the link or, if it is the only router\n\
    \      attached to the link, causes the router to reoriginate an intra-\n    \
    \  area-prefix-LSA.\n   o  A new link-LSA is received, causing the link's collection\
    \ of\n      prefixes to change.  If the router is the Designated Router for\n\
    \      the link, it originates a new intra-area-prefix-LSA.\n   o  A new link-LSA\
    \ is received, causing the logical OR of LSA options\n      advertised by adjacent\
    \ routers on the link to change.  If the\n      router is the Designated Router\
    \ for the link, it originates a new\n      network-LSA.\n   Detailed construction\
    \ of the seven required IPv6 LSA types is\n   supplied by the following subsections.\
    \  In order to display example\n   LSAs, the network map in Figure 15 of [OSPFV2]\
    \ has been reworked to\n   show IPv6 addressing, resulting in Figure 1.  The OSPF\
    \ cost of each\n   interface is displayed in Figure 1.  The assignment of IPv6\
    \ prefixes\n   to network links is shown in Table 1.  A single area address range\n\
    \   has been configured for Area 1, so that outside of Area 1 all of its\n   prefixes\
    \ are covered by a single route to 2001:0db8:c001::/48.  The\n   OSPF interface\
    \ IDs and the link-local addresses for the router\n   interfaces in Figure 1 are\
    \ given in Table 2.\n          ..........................................\n  \
    \        .                                  Area 1.\n          .     +       \
    \                           .\n          .     |                             \
    \     .\n          .     | 3+---+1                          .\n          .  N1\
    \ |--|RT1|-----+                     .\n          .     |  +---+      \\     \
    \               .\n          .     |              \\  ______           .\n   \
    \       .     +               \\/       \\      1+---+\n          .          \
    \           *    N3   *------|RT4|------\n          .     +               /\\\
    _______/       +---+\n          .     |              /     |             .\n \
    \         .     | 3+---+1     /      |             .\n          .  N2 |--|RT2|-----+\
    \      1|             .\n          .     |  +---+           +---+           .\n\
    \          .     |                  |RT3|----------------\n          .     + \
    \                 +---+           .\n          .                          |2 \
    \           .\n          .                          |             .\n        \
    \  .                   +------------+       .\n          .                   \
    \       N4            .\n          ..........................................\n\
    \          Figure 1: Area 1 with IP Addresses Shown\n                 Network\
    \   IPv6 prefix\n                 -----------------------------------\n      \
    \           N1        2001:0db8:c001:0200::/56\n                 N2        2001:0db8:c001:0300::/56\n\
    \                 N3        2001:0db8:c001:0100::/56\n                 N4    \
    \    2001:0db8:c001:0400::/56\n          Table 1: IPv6 Link Prefixes for Sample\
    \ Network\n               Router   Interface   Interface ID   link-local address\n\
    \               -------------------------------------------------------\n    \
    \           RT1      to N1       1              fe80:0001::RT1\n             \
    \           to N3       2              fe80:0002::RT1\n               RT2    \
    \  to N2       1              fe80:0001::RT2\n                        to N3  \
    \     2              fe80:0002::RT2\n               RT3      to N3       1   \
    \           fe80:0001::RT3\n                        to N4       2            \
    \  fe80:0002::RT3\n               RT4      to N3       1              fe80:0001::RT4\n\
    \          Table 2: OSPF Interface IDs and Link-Local Addresses\n            \
    \                     Figure 1\n"
- title: 4.4.3.1.  LSA Options
  contents:
  - "4.4.3.1.  LSA Options\n   The Options field in LSAs should be coded as follows.\
    \  The V6-bit\n   should be set unless the router will not participate in transit\
    \ IPv6\n   routing.  The E-bit should be clear if and only if the attached area\n\
    \   is an OSPF stub or OSPF NSSA area.  The E-bit should always be set in\n  \
    \ AS scoped LSAs.  The N-bit should be set if and only if the attached\n   area\
    \ is an OSPF NSSA area.  The R-bit should be set unless the router\n   will not\
    \ participate in any transit routing.  The DC-bit should be\n   set if and only\
    \ if the router can correctly process the DoNotAge bit\n   when it appears in\
    \ the LS age field of LSAs (see [DEMAND]).  All\n   unrecognized bits in the Options\
    \ field should be cleared.\n   The V6-bit and R-bit are only examined in Router-LSAs\
    \ during the SPF\n   computation.  In other LSA types containing options, they\
    \ are set for\n   informational purposes only.\n"
- title: 4.4.3.2.  Router-LSAs
  contents:
  - "4.4.3.2.  Router-LSAs\n   The LS type of a router-LSA is set to the value 0x2001.\
    \  Router-LSAs\n   have area flooding scope.  A router MAY originate one or more\
    \ router-\n   LSAs for a given area.  Each router-LSA contains an integral number\n\
    \   of interface descriptions.  Taken together, the collection of router-\n  \
    \ LSAs originated by the router for an area describes the collected\n   states\
    \ of all the router's interfaces attached to the area.  When\n   multiple router-LSAs\
    \ are used, they are distinguished by their Link\n   State ID fields.\n   To the\
    \ left of the Options field, the router capability bits V, E,\n   and B should\
    \ be set according to Section 12.4.1 of [OSPFV2].\n   Each of the router's interfaces\
    \ to the area is then described by\n   appending \"link descriptions\" to the\
    \ router-LSA.  Each link\n   description is 16 bytes long, consisting of five\
    \ fields: (link) Type,\n   Metric, Interface ID, Neighbor Interface ID, and Neighbor\
    \ Router ID\n   (see Appendix A.4.3).  Interfaces in the state \"Down\" or \"\
    Loopback\"\n   are not described (although looped back interfaces can contribute\n\
    \   prefixes to intra-area-prefix-LSAs), nor are interfaces without any\n   full\
    \ adjacencies described (except in the case of multiple Standby\n   Interfaces\
    \ as described in Section 4.9).  All other interfaces to the\n   area add zero,\
    \ one, or more link descriptions.  The number and\n   content of these depend\
    \ on the interface type.  Within each link\n   description, the Metric field is\
    \ always set to the interface's output\n   cost, and the Interface ID field is\
    \ set to the interface's OSPF\n   Interface ID.\n   Point-to-point interfaces\n\
    \      If the neighboring router is fully adjacent, add a Type 1 link\n      description\
    \ (point-to-point).  The Neighbor Interface ID field is\n      set to the Interface\
    \ ID advertised by the neighbor in its Hello\n      packets, and the Neighbor\
    \ Router ID field is set to the neighbor's\n      Router ID.\n   Broadcast and\
    \ NBMA interfaces\n      If the router is fully adjacent to the link's Designated\
    \ Router or\n      if the router itself is the Designated Router and is fully\n\
    \      adjacent to at least one other router, add a single Type 2 link\n     \
    \ description (transit network).  The Neighbor Interface ID field is\n      set\
    \ to the Interface ID advertised by the Designated Router in its\n      Hello\
    \ packets, and the Neighbor Router ID field is set to the\n      Designated Router's\
    \ Router ID.\n   Virtual links\n      If the neighboring router is fully adjacent,\
    \ add a Type 4 link\n      description (virtual).  The Neighbor Interface ID field\
    \ is set to\n      the Interface ID advertised by the neighbor in its Hello packets,\n\
    \      and the Neighbor Router ID field is set to the neighbor's Router\n    \
    \  ID.  Note that the output cost of a virtual link is calculated\n      during\
    \ the routing table calculation (see Section 4.7).\n   Point-to-Multipoint interfaces\n\
    \      For each fully adjacent neighbor associated with the interface,\n     \
    \ add a separate Type 1 link description (point-to-point) with the\n      Neighbor\
    \ Interface ID field set to the Interface ID advertised by\n      the neighbor\
    \ in its Hello packets and the Neighbor Router ID field\n      set to the neighbor's\
    \ Router ID.\n   As an example, consider the router-LSA that router RT3 would\n\
    \   originate for Area 1 in Figure 1.  Only a single interface must be\n   described,\
    \ namely, that which connects to the transit network N3.  It\n   assumes that\
    \ RT4 has been elected the Designated Router of Network\n   N3.\n        ; RT3's\
    \ router-LSA for Area 1\n        LS age = 0                     ;newly (re)originated\n\
    \        LS type = 0x2001               ;router-LSA\n        Link State ID = 0\
    \              ;first fragment\n        Advertising Router = 192.0.2.3 ;RT3's\
    \ Router ID\n        bit E = 0                      ;not an AS boundary router\n\
    \        bit B = 1                      ;area border router\n        Options =\
    \ (V6-bit|E-bit|R-bit)\n            Type = 2                     ;connects to\
    \ N3\n            Metric = 1                   ;cost to N3\n            Interface\
    \ ID = 1             ;RT3's Interface ID on N3\n            Neighbor Interface\
    \ ID = 1    ;RT4's Interface ID on N3\n            Neighbor Router ID = 192.0.2.4\
    \ ; RT4's Router ID\n                        RT3's router-LSA for Area 1\n   For\
    \ example, if another router was added to Network N4, RT3 would\n   have to advertise\
    \ a second link description for its connection to\n   (the now transit) network\
    \ N4.  This could be accomplished by\n   reoriginating the above router-LSA, this\
    \ time with two link\n   descriptions.  Or, a separate router-LSA could be originated\
    \ with a\n   separate Link State ID (e.g., using a Link State ID of 1) to describe\n\
    \   the connection to N4.\n   Host routes for stub networks no longer appear in\
    \ the router-LSA.\n   Rather, they are included in intra-area-prefix-LSAs.\n"
- title: 4.4.3.3.  Network-LSAs
  contents:
  - "4.4.3.3.  Network-LSAs\n   The LS type of a network-LSA is set to the value 0x2002.\
    \  Network-\n   LSAs have area flooding scope.  A network-LSA is originated for\
    \ every\n   broadcast or NBMA link with an elected Designated Router that is\n\
    \   fully adjacent with at least one other router on the link.  The\n   network-LSA\
    \ is originated by the link's Designated Router and lists\n   all routers on the\
    \ link with which it is fully adjacent.\n   The procedure for originating network-LSAs\
    \ in IPv6 is the same as the\n   IPv4 procedure documented in Section 12.4.2 of\
    \ [OSPFV2], with the\n   following exceptions:\n   o  An IPv6 network-LSA's Link\
    \ State ID is set to the Interface ID of\n      the Designated Router on the link.\n\
    \   o  IPv6 network-LSAs do not contain a Network Mask.  All addressing\n    \
    \  information formerly contained in the IPv4 network-LSA has now\n      been\
    \ consigned to intra-Area-Prefix-LSAs originated by the link's\n      Designated\
    \ Router.\n   o  The Options field in the network-LSA is set to the logical OR\
    \ of\n      the Options fields contained within the link's associated link-\n\
    \      LSAs corresponding to fully adjacent neighbors.  In this way, the\n   \
    \   network link exhibits a capability when at least one fully\n      adjacent\
    \ neighbor on the link requests that the capability be\n      advertised.\n  \
    \ As an example, assuming that Router RT4 has been elected the\n   Designated\
    \ Router of Network N3 in Figure 1, the following network-\n   LSA is originated:\n\
    \        ; Network-LSA for Network N3\n        LS age = 0                    \
    \ ;newly (re)originated\n        LS type = 0x2002               ;network-LSA\n\
    \        Link State ID = 1              ;RT4's Interface ID on N3\n        Advertising\
    \ Router = 192.0.2.4 ;RT4's Router ID\n        Options = (V6-bit|E-bit|R-bit)\n\
    \               Attached Router = 192.0.2.4    ;Router ID\n               Attached\
    \ Router = 192.0.2.1    ;Router ID\n               Attached Router = 192.0.2.2\
    \    ;Router ID\n               Attached Router = 192.0.2.3    ;Router ID\n  \
    \                      Network-LSA for Network N3\n"
- title: 4.4.3.4.  Inter-Area-Prefix-LSAs
  contents:
  - "4.4.3.4.  Inter-Area-Prefix-LSAs\n   The LS type of an inter-area-prefix-LSA\
    \ is set to the value 0x2003.\n   Inter-area-prefix-LSAs have area flooding scope.\
    \  In IPv4, inter-\n   area-prefix-LSAs were called type 3 summary-LSAs.  Each\
    \ inter-area-\n   prefix-LSA describes a prefix external to the area, yet internal\
    \ to\n   the Autonomous System.\n   The procedure for originating inter-area-prefix-LSAs\
    \ in IPv6 is the\n   same as the IPv4 procedure documented in Sections 12.4.3\
    \ and 12.4.3.1\n   of [OSPFV2], with the following exceptions:\n   o  The Link\
    \ State ID of an inter-area-prefix-LSA has lost all of its\n      addressing semantics\
    \ and simply serves to distinguish multiple\n      inter-area-prefix-LSAs that\
    \ are originated by the same router.\n   o  The prefix is described by the PrefixLength,\
    \ PrefixOptions, and\n      Address Prefix fields embedded within the LSA body.\
    \  Network Mask\n      is no longer specified.\n   o  The NU-bit in the PrefixOptions\
    \ field should be clear.\n   o  Link-local addresses MUST never be advertised\
    \ in inter-area-\n      prefix-LSAs.\n   As an example, the following shows the\
    \ inter-area-prefix-LSA that\n   Router RT4 originates into the OSPF backbone\
    \ area, condensing all of\n   Area 1's prefixes into the single prefix 2001:0db8:c001::/48.\
    \  The\n   cost is set to 4, which is the maximum cost of all of the individual\n\
    \   component prefixes.  The prefix is padded out to an even number of\n   32-bit\
    \ words, so that it consumes 64 bits of space instead of 48\n   bits.\n      \
    \     ; Inter-area-prefix-LSA for Area 1 addresses\n           ; originated by\
    \ Router RT4 into the backbone\n           LS age = 0                  ;newly\
    \ (re)originated\n           LS type = 0x2003            ;inter-area-prefix-LSA\n\
    \           Advertising Router = 192.0.2.4       ;RT4's ID\n           Metric\
    \ = 4                  ;maximum to components\n           PrefixLength = 48\n\
    \           PrefixOptions = 0\n           Address Prefix = 2001:0db8:c001 ;padded\
    \ to 64-bits\n          Inter-area-prefix-LSA for Area 1 addresses originated\n\
    \       by Router\n                           RT4 into the backbone\n"
- title: 4.4.3.5.  Inter-Area-Router-LSAs
  contents:
  - "4.4.3.5.  Inter-Area-Router-LSAs\n   The LS type of an inter-area-router-LSA\
    \ is set to the value 0x2004.\n   Inter-area-router-LSAs have area flooding scope.\
    \  In IPv4, inter-\n   area-router-LSAs were called type 4 summary-LSAs.  Each\
    \ inter-area-\n   router-LSA describes a path to a destination OSPF router (i.e.,\
    \ an AS\n   Boundary Router (ASBR)) that is external to the area yet internal\
    \ to\n   the Autonomous System.\n   The procedure for originating inter-area-router-LSAs\
    \ in IPv6 is the\n   same as the IPv4 procedure documented in Section 12.4.3 of\
    \ [OSPFV2],\n   with the following exceptions:\n   o  The Link State ID of an\
    \ inter-area-router-LSA is no longer the\n      destination router's OSPF Router\
    \ ID and now simply serves to\n      distinguish multiple inter-area-router-LSAs\
    \ that are originated by\n      the same router.  The destination router's Router\
    \ ID is now found\n      in the body of the LSA.\n   o  The Options field in an\
    \ inter-area-router-LSA should be set equal\n      to the Options field contained\
    \ in the destination router's own\n      router-LSA.  The Options field thus describes\
    \ the capabilities\n      supported by the destination router.\n   As an example,\
    \ consider the OSPF Autonomous System depicted in Figure\n   6 of [OSPFV2].  Router\
    \ RT4 would originate into Area 1 the following\n   inter-area-router-LSA for\
    \ destination router RT7.\n        ; inter-area-router-LSA for AS boundary router\
    \ RT7\n        ; originated by Router RT4 into Area 1\n        LS age = 0    \
    \              ;newly (re)originated\n        LS type = 0x2004            ;inter-area-router-LSA\n\
    \        Advertising Router = 192.0.2.4  ;RT4's ID\n        Options = (V6-bit|E-bit|R-bit)\
    \  ;RT7's capabilities\n        Metric = 14                     ;cost to RT7\n\
    \        Destination Router ID = Router RT7's ID\n   Inter-area-router-LSA for\
    \ AS boundary router RT7 originated by Router\n                              RT4\
    \ into Area 1\n"
- title: 4.4.3.6.  AS-External-LSAs
  contents:
  - "4.4.3.6.  AS-External-LSAs\n   The LS type of an AS-external-LSA is set to the\
    \ value 0x4005.  AS-\n   external-LSAs have AS flooding scope.  Each AS-external-LSA\
    \ describes\n   a path to a prefix external to the Autonomous System.\n   The\
    \ procedure for originating AS-external-LSAs in IPv6 is the same as\n   the IPv4\
    \ procedure documented in Section 12.4.4 of [OSPFV2], with the\n   following exceptions:\n\
    \   o  The Link State ID of an AS-external-LSA has lost all of its\n      addressing\
    \ semantics and simply serves to distinguish multiple AS-\n      external-LSAs\
    \ that are originated by the same router.\n   o  The prefix is described by the\
    \ PrefixLength, PrefixOptions, and\n      Address Prefix fields embedded within\
    \ the LSA body.  Network Mask\n      is no longer specified.\n   o  The NU-bit\
    \ in the PrefixOptions field should be clear.\n   o  Link-local addresses can\
    \ never be advertised in AS-external-LSAs.\n   o  The forwarding address is present\
    \ in the AS-external-LSA if and\n      only if the AS-external-LSA's bit F is\
    \ set.\n   o  The external route tag is present in the AS-external-LSA if and\n\
    \      only if the AS-external-LSA's bit T is set.\n   o  The capability for an\
    \ AS-external-LSA to reference another LSA has\n      been supported through the\
    \ inclusion of the Referenced LS Type\n      field and the optional Referenced\
    \ Link State ID field (the latter\n      present if and only if the Referenced\
    \ LS Type is non-zero).  This\n      capability is for future use; the Referenced\
    \ LS Type should be set\n      to 0, and received non-zero values for this field\
    \ should be\n      ignored until its use is defined.\n   As an example, consider\
    \ the OSPF Autonomous System depicted in Figure\n   6 of [OSPFV2].  Assume that\
    \ RT7 has learned its route to N12 via BGP\n   and that it wishes to advertise\
    \ a Type 2 metric into the AS.  Also\n   assume that the IPv6 prefix for N12 is\
    \ the value 2001:0db8:0a00::/40.\n   RT7 would then originate the following AS-external-LSA\
    \ for the\n   external network N12.  Note that within the AS-external-LSA, N12's\n\
    \   prefix occupies 64 bits of space in order to maintain 32-bit\n   alignment.\n\
    \        ; AS-external-LSA for Network N12,\n        ; originated by Router RT7\n\
    \        LS age = 0                  ;newly (re)originated\n        LS type =\
    \ 0x4005            ;AS-external-LSA\n        Link State ID = 123         ;LSA\
    \ type/scope unique identifier\n        Advertising Router = Router RT7's ID\n\
    \        bit E = 1                   ;Type 2 metric\n        bit F = 0       \
    \            ;no forwarding address\n        bit T = 1                   ;external\
    \ route tag included\n        Metric = 2\n        PrefixLength = 40\n        PrefixOptions\
    \ = 0\n        Referenced LS Type = 0      ;no Referenced Link State ID\n    \
    \    Address Prefix = 2001:0db8:0a00 ;padded to 64-bits\n        External Route\
    \ Tag = as per BGP/OSPF interaction\n         AS-external-LSA for Network N12,\
    \ originated by Router RT7\n"
- title: 4.4.3.7.  NSSA-LSAs
  contents:
  - "4.4.3.7.  NSSA-LSAs\n   The LS type of an NSSA-LSA is set to the value 0x2007.\
    \  NSSA-LSAs\n   have area flooding scope.  Each NSSA-LSA describes a path to\
    \ a prefix\n   external to the Autonomous System whose flooding scope is restricted\n\
    \   to a single NSSA area.\n   The procedure for originating NSSA-LSAs in IPv6\
    \ is the same as the\n   IPv4 procedure documented in [NSSA], with the following\
    \ exceptions:\n   o  The Link State ID of an NSSA-LSA has lost all of its addressing\n\
    \      semantics and simply serves to distinguish multiple NSSA-LSAs that\n  \
    \    are originated by the same router in the same area.\n   o  The prefix is\
    \ described by the PrefixLength, PrefixOptions, and\n      Address Prefix fields\
    \ embedded within the LSA body.  Network Mask\n      is no longer specified.\n\
    \   o  The NU-bit in the PrefixOptions field should be clear.\n   o  Link-local\
    \ addresses can never be advertised in NSSA-LSAs.\n   o  The forwarding address\
    \ is present in the NSSA-LSA if and only if\n      the NSSA-LSA's bit F is set.\n\
    \   o  The external route tag is present in the NSSA-LSA if and only if\n    \
    \  the NSSA-LSA's bit T is set.\n   o  The capability for an NSSA-LSA to reference\
    \ another LSA has been\n      supported through the inclusion of the Referenced\
    \ LS Type field\n      and the optional Referenced Link State ID field (the latter\n\
    \      present if and only if the Referenced LS Type is non-zero).  This\n   \
    \   capability is for future use; the Referenced LS Type should be set\n     \
    \ to 0, and received non-zero values for this field should be\n      ignored until\
    \ its use is defined.\n   An example of an NSSA-LSA would only differ from an\
    \ AS-external-LSA\n   in that the LS type would be 0x2007 rather than 0x4005.\n"
- title: 4.4.3.8.  Link-LSAs
  contents:
  - "4.4.3.8.  Link-LSAs\n   The LS type of a link-LSA is set to the value 0x0008.\
    \  Link-LSAs have\n   link-local flooding scope.  A router originates a separate\
    \ link-LSA\n   for each attached link that supports two or more (including the\n\
    \   originating router itself) routers.  Link-LSAs SHOULD NOT be\n   originated\
    \ for virtual links.\n   Link-LSAs have three purposes:\n   1.  They provide the\
    \ router's link-local address to all other routers\n       attached to the link.\n\
    \   2.  They inform other routers attached to the link of a list of IPv6\n   \
    \    prefixes to associate with the link.\n   3.  They allow the router to advertise\
    \ a collection of Options bits\n       in the network-LSA originated by the Designated\
    \ Router on a\n       broadcast or NBMA link.\n   A link-LSA for a given Link\
    \ L is built in the following fashion:\n   o  The Link State ID is set to the\
    \ router's Interface ID on Link L.\n   o  The Router Priority of the router's\
    \ interface to Link L is\n      inserted into the link-LSA.\n   o  The link-LSA's\
    \ Options field is set to reflect the router's\n      capabilities.  On multi-access\
    \ links, the Designated Router will\n      logically OR the link-LSA Options fields\
    \ for all fully adjacent\n      neighbors in Link L's network-LSA.\n   o  The\
    \ router inserts its link-local address on Link L into the link-\n      LSA. \
    \ This information will be used when the other routers on Link\n      L do their\
    \ next-hop calculations (see Section 4.8.2).\n   o  Each IPv6 address prefix that\
    \ has been configured on Link L is\n      added to the link-LSA by specifying\
    \ values for the PrefixLength,\n      PrefixOptions, and Address Prefix fields.\n\
    \   After building a link-LSA for a given link, the router installs the\n   link-LSA\
    \ into the associated interface data structure and floods the\n   link-LSA on\
    \ the link.  All other routers on the link will receive the\n   link-LSA, but\
    \ they will not flood the link-LSA on other links.\n   If LinkLSASuppression is\
    \ configured for the interface and the\n   interface type is not broadcast or\
    \ NBMA, origination of the link-LSA\n   may be suppressed.  This implies that\
    \ other routers on the link will\n   ascertain the router's next-hop address using\
    \ a mechanism other than\n   the link-LSA (see Section 4.8.2).  Refer to Appendix\
    \ C.3 for a\n   description of the LinkLSASuppression interface configuration\n\
    \   parameter.\n   As an example, consider the link-LSA that RT3 will build for\
    \ N3 in\n   Figure 1.  Suppose that the prefix 2001:0db8:c001:0100::/56 has been\n\
    \   configured within RT3 for N3.  This will result in the following\n   link-LSA\
    \ that RT3 will flood only on N3.  Note that not all routers\n   on N3 need be\
    \ configured with the prefix; those not configured will\n   learn the prefix when\
    \ receiving RT3's link-LSA.\n        ; RT3's link-LSA for N3\n        LS age =\
    \ 0                  ;newly (re)originated\n        LS type = 0x0008         \
    \   ;link-LSA\n        Link State ID = 1           ;RT3's Interface ID on N3\n\
    \        Advertising Router = 192.0.2.3 ;RT3's Router ID\n        Rtr Priority\
    \ = 1            ;RT3's N3 Router Priority\n        Options = (V6-bit|E-bit|R-bit)\n\
    \        Link-local Interface Address = fe80:0001::RT3\n        # prefixes = 1\n\
    \        PrefixLength = 56\n        PrefixOptions = 0\n        Address Prefix\
    \ = 2001:0db8:c001:0100 ;pad to 64-bits\n                           RT3's link-LSA\
    \ for N3\n"
- title: 4.4.3.9.  Intra-Area-Prefix-LSAs
  contents:
  - "4.4.3.9.  Intra-Area-Prefix-LSAs\n   The LS type of an intra-area-prefix-LSA\
    \ is set to the value 0x2009.\n   Intra-area-prefix-LSAs have area flooding scope.\
    \  An intra-area-\n   prefix-LSA has one of two functions.  It either associates\
    \ a list of\n   IPv6 address prefixes with a transit network link by referencing\
    \ a\n   network-LSA, or associates a list of IPv6 address prefixes with a\n  \
    \ router by referencing a router-LSA.  A stub link's prefixes are\n   associated\
    \ with its attached router.\n   A router MAY originate multiple intra-area-prefix-LSAs\
    \ for a given\n   area.  Each intra-area-prefix-LSA has a unique Link State ID\
    \ and\n   contains an integral number of prefix descriptions.\n   A link's Designated\
    \ Router originates one or more intra-area-prefix-\n   LSAs to advertise the link's\
    \ prefixes throughout the area.  For a\n   link L, L's Designated Router builds\
    \ an intra-area-prefix-LSA in the\n   following fashion:\n   o  In order to indicate\
    \ that the prefixes are to be associated with\n      the Link L, the fields Referenced\
    \ LS Type, Referenced Link State\n      ID, and Referenced Advertising Router\
    \ are set to the corresponding\n      fields in Link L's network-LSA (namely,\
    \ LS type, Link State ID,\n      and Advertising Router respectively).  This means\
    \ that the\n      Referenced LS Type is set to 0x2002, the Referenced Link State\
    \ ID\n      is set to the Designated Router's Interface ID on Link L, and the\n\
    \      Referenced Advertising Router is set to the Designated Router's\n     \
    \ Router ID.\n   o  Each link-LSA associated with Link L is examined (these are\
    \ in the\n      Designated Router's interface structure for Link L).  If the link-\n\
    \      LSA's Advertising Router is fully adjacent to the Designated\n      Router\
    \ and the Link State ID matches the neighbor's interface ID,\n      the list of\
    \ prefixes in the link-LSA is copied into the intra-\n      area-prefix-LSA that\
    \ is being built.  Prefixes having the NU-bit\n      and/or LA-bit set in their\
    \ Options field SHOULD NOT be copied, nor\n      should link-local addresses be\
    \ copied.  Each prefix is described\n      by the PrefixLength, PrefixOptions,\
    \ and Address Prefix fields.\n      Multiple prefixes having the same PrefixLength\
    \ and Address Prefix\n      are considered to be duplicates.  In this case, their\n\
    \      PrefixOptions fields should be logically OR'ed together, and a\n      single\
    \ instance of the duplicate prefix should be included in the\n      intra-area-prefix-LSA.\
    \  The Metric field for all prefixes is set\n      to 0.\n   o  The \"# prefixes\"\
    \ field is set to the number of prefixes that the\n      router has copied into\
    \ the LSA.  If necessary, the list of\n      prefixes can be spread across multiple\
    \ intra-area-prefix-LSAs in\n      order to keep the LSA size small.\n   A router\
    \ builds an intra-area-prefix-LSA to advertise prefixes for\n   its attached stub\
    \ links, looped-back interfaces, and hosts.  A Router\n   RTX would build its\
    \ intra-area-prefix-LSA in the following fashion:\n   o  In order to indicate\
    \ that the prefixes are to be associated with\n      the Router RTX itself, RTX\
    \ sets the Referenced LS Type to 0x2001,\n      the Referenced Link State ID to\
    \ 0, and the Referenced Advertising\n      Router to RTX's own Router ID.\n  \
    \ o  Router RTX examines its list of interfaces to the area.  If the\n      interface\
    \ is in the state Down, its prefixes are not included.  If\n      the interface\
    \ has been reported in RTX's router-LSA as a Type 2\n      link description (link\
    \ to transit network), prefixes that will be\n      included in the intra-area-prefix-LSA\
    \ for the link are skipped.\n      However, any prefixes that would normally have\
    \ the LA-bit set\n      SHOULD be advertised independent of whether or not the\
    \ interface\n      is advertised as a transit link.  If the interface type is\
    \ point-\n      to-multipoint or the interface is in the state Loopback, the\n\
    \      global scope IPv6 addresses associated with the interface (if any)\n  \
    \    are copied into the intra-area-prefix-LSA with the PrefixOptions\n      LA-bit\
    \ set, the PrefixLength set to 128, and the metric set to 0.\n      Otherwise,\
    \ the list of global prefixes configured in RTX for the\n      link are copied\
    \ into the intra-area-prefix-LSA by specifying the\n      PrefixLength, PrefixOptions,\
    \ and Address Prefix fields.  The\n      Metric field for each of these prefixes\
    \ is set to the interface's\n      output cost.\n   o  RTX adds the IPv6 prefixes\
    \ for any directly attached hosts\n      belonging to the area (see Appendix C.7)\
    \ to the intra-area-prefix-\n      LSA.\n   o  If RTX has one or more virtual\
    \ links configured through the area,\n      it includes one of its global scope\
    \ IPv6 interface addresses in\n      the LSA (if it hasn't already), setting the\
    \ LA-bit in the\n      PrefixOptions field, the PrefixLength to 128, and the Metric\
    \ to 0.\n      This information will be used later in the routing calculation\
    \ so\n      that the two ends of the virtual link can discover each other's\n\
    \      IPv6 addresses.\n   o  The \"# prefixes\" field is set to the number of\
    \ prefixes that the\n      router has copied into the LSA.  If necessary, the\
    \ list of\n      prefixes can be spread across multiple intra-area-prefix-LSAs\
    \ in\n      order to keep the LSA size small.\n   For example, the intra-area-prefix-LSA\
    \ originated by RT4 for Network\n   N3 (assuming that RT4 is N3's Designated Router)\
    \ and the intra-area-\n   prefix-LSA originated into Area 1 by Router RT3 for\
    \ its own prefixes\n   are pictured below.\n        ; RT4's Intra-area-prefix-LSA\
    \ for network link N3\n        LS age = 0                  ;newly (re)originated\n\
    \        LS type = 0x2009            ;Intra-area-prefix-LSA\n        Link State\
    \ ID = 5           ;LSA type/scope unique identifier\n        Advertising Router\
    \ = 192.0.2.4 ;RT4's Router ID\n        # prefixes = 1\n        Referenced LS\
    \ Type = 0x2002 ;network-LSA reference\n        Referenced Link State ID = 1\n\
    \        Referenced Advertising Router = 192.0.2.4\n        PrefixLength = 56\
    \           ;N3's prefix\n        PrefixOptions = 0\n        Metric = 0\n    \
    \    Address Prefix = 2001:0db8:c001:0100 ;pad\n        ; RT3's Intra-area-prefix-LSA\
    \ for its own prefixes\n        LS age = 0                  ;newly (re)originated\n\
    \        LS type = 0x2009            ;Intra-area-prefix-LSA\n        Link State\
    \ ID = 177         ;LSA type/scope unique identifier\n        Advertising Router\
    \ = 192.0.2.3 ;RT3's Router ID\n        # prefixes = 1\n        Referenced LS\
    \ Type = 0x2001 ;router-LSA reference\n        Referenced Link State ID = 0\n\
    \        Referenced Advertising Router = 192.0.2.3\n        PrefixLength = 56\
    \           ;N4's prefix\n        PrefixOptions = 0\n        Metric = 2      \
    \            ;N4 interface cost\n        Address Prefix = 2001:0db8:c001:0400\
    \ ;pad\n                 Intra-area-prefix-LSA for Network Link N3\n   When network\
    \ conditions change, it may be necessary for a router to\n   move prefixes from\
    \ one intra-area-prefix-LSA to another.  For\n   example, if the router is the\
    \ Designated Router for a link but the\n   link has no other attached routers,\
    \ the link's prefixes are\n   advertised in an intra-area-prefix-LSA referring\
    \ to the Designated\n   Router's router-LSA.  When additional routers appear on\
    \ the link, a\n   network-LSA is originated for the link and the link's prefixes\
    \ are\n   moved to an intra-area-prefix-LSA referring to the network-LSA.\n  \
    \ Note that in the intra-area-prefix-LSA, the Referenced Advertising\n   Router\
    \ is always equal to the router that is originating the intra-\n   area-prefix-LSA\
    \ (i.e., the LSA's Advertising Router).  The reason the\n   Referenced Advertising\
    \ Router field appears is that, even though it\n   is currently redundant, it\
    \ may not be in the future.  We may sometime\n   want to use the same LSA format\
    \ to advertise address prefixes for\n   other protocol suites.  In this case,\
    \ the Designated Router may not\n   be running the other protocol suite, and so\
    \ another of the link's\n   routers may need to originate the intra-area-prefix-LSA.\
    \  In that\n   case, the Referenced Advertising Router and Advertising Router\
    \ would\n   be different.\n"
- title: 4.4.4.  Future LSA Validation
  contents:
  - "4.4.4.  Future LSA Validation\n   It is expected that new LSAs will be defined\
    \ that will not be\n   processed during the Shortest Path First (SPF) calculation\
    \ as\n   described in Section 4.8, for example, OSPFv3 LSAs corresponding to\n\
    \   information advertised in OSPFv2 using opaque LSAs [OPAQUE].  In\n   general,\
    \ the new information advertised in future LSAs should not be\n   used unless\
    \ the OSPFv3 router originating the LSA is reachable.\n   However, depending on\
    \ the application and the data advertised, this\n   reachability validation MAY\
    \ be done less frequently than every SPF\n   calculation.\n   To facilitate inter-area\
    \ reachability validation, any OSPFv3 router\n   originating AS scoped LSAs is\
    \ considered an AS Boundary Router\n   (ASBR).\n"
- title: 4.5.  Flooding
  contents:
  - "4.5.  Flooding\n   Most of the flooding algorithm remains unchanged from the\
    \ IPv4\n   flooding mechanisms described in Section 13 of [OSPFV2].  In\n   particular,\
    \ the protocol processes for determining which LSA instance\n   is newer (Section\
    \ 13.1 of [OSPFV2]), responding to updates of self-\n   originated LSAs (Section\
    \ 13.4 of [OSPFV2]), sending Link State\n   Acknowledgment packets (Section 13.5\
    \ of [OSPFV2]), retransmitting\n   LSAs (Section 13.6 of [OSPFV2]), and receiving\
    \ Link State\n   Acknowledgment packets (Section 13.7 of [OSPFV2]), are exactly\
    \ the\n   same for IPv6 and IPv4.\n   However, the addition of flooding scope\
    \ and unknown LSA type handling\n   (see Appendix A.4.2.1) has caused some changes\
    \ in the OSPF flooding\n   algorithm: the reception of Link State Updates (Section\
    \ 13 in\n   [OSPFV2]) and the sending of Link State Updates (Section 13.3 of\n\
    \   [OSPFV2]) must take into account the LSA's scope and U-bit setting.\n   Also,\
    \ installation of LSAs into the OSPF database (Section 13.2 of\n   [OSPFV2]) causes\
    \ different events in IPv6, due to the reorganization\n   of LSA types and the\
    \ IPv6 LSA contents.  These changes are described\n   in detail below.\n"
- title: 4.5.1.  Receiving Link State Update Packets
  contents:
  - "4.5.1.  Receiving Link State Update Packets\n   The encoding of flooding scope\
    \ in the LS type and the need to process\n   unknown LS types cause modifications\
    \ to the processing of received\n   Link State Update packets.  As in IPv4, each\
    \ LSA in a received Link\n   State Update packet is examined.  In IPv4, eight\
    \ steps are executed\n   for each LSA, as described in Section 13 of [OSPFV2].\
    \  For IPv6, all\n   the steps are the same, except that Steps 2 and 3 are modified\
    \ as\n   follows:\n      (2)   Examine the LSA's LS type.  Discard the LSA and\
    \ get\n            the next one from the Link State Update packet if the\n   \
    \         interface area has been configured as a stub or\n            NSSA area\
    \ and the LS type indicates \"AS flooding scope\".\n            This generalizes\
    \ the IPv4 behavior where AS-external-LSAs\n            and AS-scoped opaque LSAs\
    \ [OPAQUE] are not flooded\n            throughout stub or NSSA areas.\n     \
    \ (3)   Else if the flooding scope in the LSA's LS type is set to\n          \
    \  \"reserved\", discard the LSA and get the next one from\n            the Link\
    \ State Update packet.\n   Steps 5b (sending Link State Update packets) and 5d\
    \ (installing LSAs\n   in the link-state database) in Section 13 of [OSPFV2] are\
    \ also\n   somewhat different for IPv6, as described in Sections 4.5.2 and 4.5.3\n\
    \   below.\n"
- title: 4.5.2.  Sending Link State Update Packets
  contents:
  - "4.5.2.  Sending Link State Update Packets\n   The sending of Link State Update\
    \ packets is described in Section 13.3\n   of [OSPFV2].  For IPv4 and IPv6, the\
    \ steps for sending a Link State\n   Update packet are the same (steps 1 through\
    \ 5 of Section 13.3 in\n   [OSPFV2]).  However, the list of eligible interfaces\
    \ on which to\n   flood the LSA is different.  For IPv6, the eligible interfaces\
    \ are\n   selected based on the following factors:\n   o  The LSA's flooding scope.\n\
    \   o  For LSAs with area or link-local flooding scope, the particular\n     \
    \ area or interface with which the LSA is associated.\n   o  Whether the LSA has\
    \ a recognized LS type.\n   o  The setting of the U-bit in the LS type.  If the\
    \ U-bit is set to\n      0, unrecognized LS types are treated as having link-local\
    \ scope.\n      If set to 1, unrecognized LS types are stored and flooded as if\n\
    \      they were recognized.\n   Choosing the set of eligible interfaces then\
    \ breaks into the\n   following cases:\n   Case 1\n      The LSA's LS type is\
    \ recognized.  In this case, the set of\n      eligible interfaces is set depending\
    \ on the flooding scope encoded\n      in the LS type.  If the flooding scope\
    \ is \"AS flooding scope\", the\n      eligible interfaces are all router interfaces\
    \ excepting virtual\n      links.  In addition, AS-external-LSAs are not flooded\
    \ on\n      interfaces connecting to stub or NSSA areas.  If the flooding\n  \
    \    scope is \"area flooding scope\", the eligible interfaces are those\n   \
    \   interfaces connecting to the LSA's associated area.  If the\n      flooding\
    \ scope is \"link-local flooding scope\", then there is a\n      single eligible\
    \ interface, the one connecting to the LSA's\n      associated link (which is\
    \ also the interface on which the LSA was\n      received in a Link State Update\
    \ packet).\n   Case 2\n      The LS type is unrecognized and the U-bit in the\
    \ LS type is set to\n      0 (treat the LSA as if it had link-local flooding scope).\
    \  In this\n      case, there is a single eligible interface, namely, the interface\n\
    \      on which the LSA was received.\n   Case 3\n      The LS type is unrecognized,\
    \ and the U-bit in the LS type is set\n      to 1 (store and flood the LSA as\
    \ if the type is understood).  In\n      this case, select the eligible interfaces\
    \ based on the encoded\n      flooding scope the same as in Case 1 above.\n  \
    \ A further decision must sometimes be made before adding an LSA to a\n   given\
    \ neighbor's link-state retransmission list (Step 1d in Section\n   13.3 of [OSPFV2]).\
    \  If the LS type is recognized by the router but\n   not by the neighbor (as\
    \ can be determined by examining the Options\n   field that the neighbor advertised\
    \ in its Database Description\n   packet) and the LSA's U-bit is set to 0, then\
    \ the LSA should be added\n   to the neighbor's link-state retransmission list\
    \ if and only if that\n   neighbor is the Designated Router or Backup Designated\
    \ Router for the\n   attached link.  The LS types described in detail by this\
    \ document,\n   namely, router-LSAs (LS type 0x2001), network-LSAs (0x2002), inter-\n\
    \   area-prefix-LSAs (0x2003), inter-area-router-LSAs (0x2004), NSSA-LSAs\n  \
    \ (0x2007), AS-external-LSAs (0x4005), link-LSAs (0x0008), and Intra-\n   Area-Prefix-LSAs\
    \ (0x2009), are assumed to be understood by all\n   routers.  However, all LS\
    \ types MAY not be understood by all routers.\n   For example, a new LSA type\
    \ with its U-bit set to 0 MAY only be\n   understood by a subset of routers. \
    \ This new LS type should only be\n   flooded to an OSPF neighbor that understands\
    \ the LS type or when the\n   neighbor is the Designated Router or Backup Designated\
    \ Router for the\n   attached link.\n   The previous paragraph solves a problem\
    \ for IPv4 OSPF extensions,\n   which require that the Designated Router support\
    \ the extension in\n   order to have the new LSA types flooded across broadcast\
    \ and NBMA\n   networks.\n"
- title: 4.5.3.  Installing LSAs in the Database
  contents:
  - "4.5.3.  Installing LSAs in the Database\n   There are three separate places to\
    \ store LSAs, depending on their\n   flooding scope.  LSAs with AS flooding scope\
    \ are stored in the global\n   OSPF data structure (see Section 4.1) as long as\
    \ their LS type is\n   known or their U-bit is 1.  LSAs with area flooding scope\
    \ are stored\n   in the appropriate area data structure (see Section 4.1.1) as\
    \ long as\n   their LS type is known or their U-bit is 1.  LSAs with link-local\n\
    \   flooding scope, and those LSAs with unknown LS type and U-bit set to\n   0\
    \ (treat the LSA as if it had link-local flooding scope), are stored\n   in the\
    \ appropriate interface data structure.\n   When storing the LSA into the link-state\
    \ database, a check must be\n   made to see whether the LSA's contents have changed.\
    \  Changes in\n   contents are indicated exactly as in Section 13.2 of [OSPFV2].\
    \  When\n   an LSA's contents have been changed, the following parts of the\n\
    \   routing table must be recalculated, based on the LSA's LS type:\n   Router-LSAs,\
    \ Network-LSAs, Intra-Area-Prefix-LSAs, and Link-LSAs\n      The entire routing\
    \ table is recalculated, starting with the\n      shortest-path calculation for\
    \ each area (see Section 4.8).\n   Inter-Area-Prefix-LSAs and Inter-Area-Router-LSAs\n\
    \      The best route to the destination described by the LSA must be\n      recalculated\
    \ (see Section 16.5 in [OSPFV2]).  If this destination\n      is an AS boundary\
    \ router, it may also be necessary to re-examine\n      all the AS-external-LSAs.\n\
    \   AS-external-LSAs and NSSA-LSAs\n      The best route to the destination described\
    \ by the AS-external-LSA\n      or NSSA-LSA must be recalculated (see Section\
    \ 16.6 in [OSPFV2] and\n      Section 2.0 in [NSSA]).\n   As in IPv4, any old\
    \ instance of the LSA must be removed from the\n   database when the new LSA is\
    \ installed.  This old instance must also\n   be removed from all neighbors' link-state\
    \ retransmission lists.\n"
- title: 4.6.  Definition of Self-Originated LSAs
  contents:
  - "4.6.  Definition of Self-Originated LSAs\n   In IPv6, the definition of a self-originated\
    \ LSA has been simplified\n   from the IPv4 definition appearing in Sections 13.4\
    \ and 14.1 of\n   [OSPFV2].  For IPv6, self-originated LSAs are those LSAs whose\n\
    \   Advertising Router is equal to the router's own Router ID.\n"
- title: 4.7.  Virtual Links
  contents:
  - "4.7.  Virtual Links\n   OSPF virtual links for IPv4 are described in Section\
    \ 15 of [OSPFV2].\n   Virtual links are the same in IPv6, with the following exceptions:\n\
    \   o  LSAs having AS flooding scope are never flooded over virtual\n      adjacencies,\
    \ nor are LSAs with AS flooding scope summarized over\n      virtual adjacencies\
    \ during the database exchange process.  This is\n      a generalization of the\
    \ IPv4 treatment of AS-external-LSAs.\n   o  The IPv6 interface address of a virtual\
    \ link MUST be an IPv6\n      address having global scope, instead of the link-local\
    \ addresses\n      used by other interface types.  This address is used as the\
    \ IPv6\n      source for OSPF protocol packets sent over the virtual link.\n \
    \     Hence, a link-LSA SHOULD NOT be originated for a virtual link\n      since\
    \ the virtual link has no link-local address or associated\n      prefixes.\n\
    \   o  Likewise, the virtual neighbor's IPv6 address is an IPv6 address\n    \
    \  with global scope.  To enable the discovery of a virtual\n      neighbor's\
    \ IPv6 address during the routing calculation, the\n      neighbor advertises\
    \ its virtual link's IPv6 interface address in\n      an intra-area-prefix-LSA\
    \ originated for the virtual link's transit\n      area (see Section 4.4.3.9 and\
    \ Section 4.8.1).\n   o  Like all other IPv6 OSPF interfaces, virtual links are\
    \ assigned\n      unique (within the router) Interface IDs.  These are advertised\
    \ in\n      Hellos sent over the virtual link and in the router's router-LSAs.\n"
- title: 4.8.  Routing Table Calculation
  contents:
  - "4.8.  Routing Table Calculation\n   The IPv6 OSPF routing calculation proceeds\
    \ along the same lines as\n   the IPv4 OSPF routing calculation, following the\
    \ five steps specified\n   by Section 16 of [OSPFV2].  High-level differences\
    \ between the IPv6\n   and IPv4 calculations include:\n   o  Prefix information\
    \ has been removed from router-LSAs and network-\n      LSAs and is now advertised\
    \ in intra-area-prefix-LSAs.  Whenever\n      [OSPFV2] specifies that stub networks\
    \ within router-LSAs be\n      examined, IPv6 will instead examine prefixes within\
    \ intra-area-\n      prefix-LSAs.\n   o  Type 3 and 4 summary-LSAs have been renamed\
    \ inter-area-prefix-LSAs\n      and inter-area-router-LSAs respectively.\n   o\
    \  Addressing information is no longer encoded in Link State IDs and\n      is\
    \ now only found within the body of LSAs.\n   o  In IPv6, a router can originate\
    \ multiple router-LSAs,\n      distinguished by Link State ID, within a single\
    \ area.  These\n      router-LSAs MUST be treated as a single aggregate by the\
    \ area's\n      shortest-path calculation (see Section 4.8.1).\n   For each area,\
    \ the shortest-path tree calculation creates routing\n   table entries for the\
    \ area's routers and transit links (see\n   Section 4.8.1).  These entries are\
    \ then used when processing intra-\n   area-prefix-LSAs, inter-area-prefix-LSAs,\
    \ and inter-area-router-LSAs,\n   as described in Section 4.8.3.\n   Events generated\
    \ as a result of routing table changes (Section 16.7\n   of [OSPFV2]) and the\
    \ equal-cost multipath logic (Section 16.8 of\n   [OSPFV2]) are identical for\
    \ both IPv4 and IPv6.\n"
- title: 4.8.1.  Calculating the Shortest-Path Tree for an Area
  contents:
  - "4.8.1.  Calculating the Shortest-Path Tree for an Area\n   The IPv4 shortest-path\
    \ calculation is contained in Section 16.1 of\n   [OSPFV2].  The graph used by\
    \ the shortest-path tree calculation is\n   identical for both IPv4 and IPv6.\
    \  The graph's vertices are routers\n   and transit links, represented by router-LSAs\
    \ and network-LSAs\n   respectively.  A router is identified by its OSPF Router\
    \ ID, while a\n   transit link is identified by its Designated Router's Interface\
    \ ID\n   and OSPF Router ID.  Both routers and transit links have associated\n\
    \   routing table entries within the area (see Section 4.3).\n   Section 16.1\
    \ of [OSPFV2] splits up the shortest-path calculations\n   into two stages.  First,\
    \ the Dijkstra calculation is performed, and\n   then the stub links are added\
    \ onto the tree as leaves.  The IPv6\n   calculation maintains this split.\n \
    \  The Dijkstra calculation for IPv6 is identical to that specified for\n   IPv4,\
    \ with the following exceptions (referencing the steps from the\n   Dijkstra calculation\
    \ as described in Section 16.1 of [OSPFV2]):\n   o  The Vertex ID for a router\
    \ is the OSPF Router ID.  The Vertex ID\n      for a transit network is a combination\
    \ of the Interface ID and\n      OSPF Router ID of the network's Designated Router.\n\
    \   o  In Step 2, when a router Vertex V has just been added to the\n      shortest-path\
    \ tree, there may be multiple LSAs associated with the\n      router.  All router-LSAs\
    \ with the Advertising Router set to V's\n      OSPF Router ID MUST be processed\
    \ as an aggregate, treating them as\n      fragments of a single large router-LSA.\
    \  The Options field and the\n      router type bits (bits Nt, V, E, and B) should\
    \ always be taken\n      from the router-LSA with the smallest Link State ID.\n\
    \   o  Step 2a is not needed in IPv6, as there are no longer stub network\n  \
    \    links in router-LSAs.\n   o  In Step 2b, if W is a router and the router-LSA\
    \ V6-bit or R-bit is\n      not set in the LSA options, the transit link W is\
    \ ignored and V's\n      next link is examined.\n   o  In Step 2b, if W is a router,\
    \ there may again be multiple LSAs\n      associated with the router.  All router-LSAs\
    \ with the Advertising\n      Router set to W's OSPF Router ID MUST be processed\
    \ as an\n      aggregate, treating them as fragments of a single large router-\n\
    \      LSA.\n   o  In Step 4, there are now per-area routing table entries for\
    \ each\n      of an area's routers rather than just the area border routers.\n\
    \      These entries subsume all the functionality of IPv4's area border\n   \
    \   router routing table entries, including the maintenance of virtual\n     \
    \ links.  When the router added to the area routing table in this\n      step\
    \ is the other end of a virtual link, the virtual neighbor's IP\n      address\
    \ is set as follows: The collection of intra-area-prefix-\n      LSAs originated\
    \ by the virtual neighbor is examined, with the\n      virtual neighbor's IP address\
    \ being set to the first prefix\n      encountered with the LA-bit set.\n   o\
    \  Routing table entries for transit networks, which are no longer\n      associated\
    \ with IP networks, are also calculated in Step 4 and\n      added to the per-area\
    \ routing table.\n   The next stage of the shortest-path calculation proceeds\
    \ similarly to\n   the two steps of the second stage of Section 16.1 in [OSPFV2].\n\
    \   However, instead of examining the stub links within router-LSAs, the\n   list\
    \ of the area's intra-area-prefix-LSAs is examined.  A prefix\n   advertisement\
    \ whose NU-bit is set SHOULD NOT be included in the\n   routing calculation. \
    \ The cost of any advertised prefix is the sum of\n   the prefix's advertised\
    \ metric plus the cost to the transit vertex\n   (either router or transit network)\
    \ identified by intra-area-prefix-\n   LSA's Referenced LS Type, Referenced Link\
    \ State ID, and Referenced\n   Advertising Router fields.  This latter cost is\
    \ stored in the transit\n   vertex's routing table entry for the area.\n   This\
    \ specification does not require that the above algorithm be used\n   to calculate\
    \ the intra-area shortest-path tree.  However, if another\n   algorithm or optimization\
    \ is used, an identical shortest-path tree\n   must be produced.  It is also important\
    \ that any alternate algorithm\n   or optimization maintain the requirement that\
    \ transit vertices must\n   be bidirectional for inclusion in the tree.  Alternate\
    \ algorithms and\n   optimizations are beyond the scope of this specification.\n"
- title: 4.8.2.  The Next-Hop Calculation
  contents:
  - "4.8.2.  The Next-Hop Calculation\n   In IPv6, the calculation of the next-hop's\
    \ IPv6 address (which will\n   be a link-local address) proceeds along the same\
    \ lines as the IPv4\n   next-hop calculation (see Section 16.1.1 of [OSPFV2]).\
    \  However,\n   there are some differences.  When calculating the next-hop IPv6\n\
    \   address for a router (call it Router X) that shares a link with the\n   calculating\
    \ router, the calculating router assigns the next-hop IPv6\n   address to be the\
    \ link-local interface address contained in Router\n   X's link-LSA (see Appendix\
    \ A.4.9) for the link.  This procedure is\n   necessary for some link types, for\
    \ example NBMA, where the two\n   routers need not be neighbors and might not\
    \ be exchanging OSPF Hello\n   packets.  For other link types, the next-hop address\
    \ may be\n   determined via the IPv6 source address in the neighbor's Hello\n\
    \   packet.\n   Additionally, when calculating routes for the area's intra-area-\n\
    \   prefix-LSAs, the parent vertex can be either a router-LSA or network-\n  \
    \ LSA.  This is in contrast to the second stage of the OSPFv2 intra-\n   area\
    \ SPF (Section 16.1 in [OSPFV2]) where the parent vertex is always\n   a router-LSA.\
    \  In the case where the intra-area-prefix-LSA's\n   referenced LSA is a directly\
    \ connected network-LSA, the prefixes are\n   also considered to be directly connected.\
    \  In this case, the next hop\n   is solely the outgoing link and no IPv6 next-hop\
    \ address is selected.\n"
- title: 4.8.3.  Calculating the Inter-Area Routes
  contents:
  - "4.8.3.  Calculating the Inter-Area Routes\n   Calculation of inter-area routes\
    \ for IPv6 proceeds along the same\n   lines as the IPv4 calculation in Section\
    \ 16.2 of [OSPFV2], with the\n   following modifications:\n   o  The names of\
    \ the Type 3 summary-LSAs and Type 4 summary-LSAs have\n      been changed to\
    \ inter-area-prefix-LSAs and inter-area-router-LSAs\n      respectively.\n   o\
    \  The Link State ID of the above LSA types no longer encodes the\n      network\
    \ or router described by the LSA.  Instead, an address\n      prefix is contained\
    \ in the body of an inter-area-prefix-LSA and an\n      advertised AS boundary\
    \ router's OSPF Router ID is carried in the\n      body of an inter-area-router-LSA.\n\
    \   o  Prefixes having the NU-bit set in their PrefixOptions field should\n  \
    \    be ignored by the inter-area route calculation.\n   When a single inter-area-prefix-LSA\
    \ or inter-area-router-LSA has\n   changed, the incremental calculations outlined\
    \ in Section 16.5 of\n   [OSPFV2] can be performed instead of recalculating the\
    \ entire routing\n   table.\n"
- title: 4.8.4.  Examining Transit Areas' Summary-LSAs
  contents:
  - "4.8.4.  Examining Transit Areas' Summary-LSAs\n   Examination of transit areas'\
    \ summary-LSAs in IPv6 proceeds along the\n   same lines as the IPv4 calculation\
    \ in Section 16.3 of [OSPFV2],\n   modified in the same way as the IPv6 inter-area\
    \ route calculation in\n   Section 4.8.3.\n"
- title: 4.8.5.  Calculating AS External and NSSA Routes
  contents:
  - "4.8.5.  Calculating AS External and NSSA Routes\n   The IPv6 AS external route\
    \ calculation proceeds along the same lines\n   as the IPv4 calculation in Section\
    \ 16.4 of [OSPFV2] and Section 2.5\n   of [NSSA], with the following exceptions:\n\
    \   o  The Link State ID of the AS-external-LSA and NSSA-LSA types no\n      longer\
    \ encodes the network described by the LSA.  Instead, an\n      address prefix\
    \ is contained in the body of the LSA.\n   o  The default route in AS-external-LSAs\
    \ or NSSA-LSAs is advertised\n      by a zero-length prefix.\n   o  Instead of\
    \ comparing the AS-external-LSA's or NSSA-LSA's\n      Forwarding Address field\
    \ to 0.0.0.0 to see whether a forwarding\n      address has been used, the bit\
    \ F in the respective LSA is\n      examined.  A forwarding address is in use\
    \ if and only if bit F is\n      set.\n   o  Prefixes having the NU-bit set in\
    \ their PrefixOptions field should\n      be ignored by the inter-area route calculation.\n\
    \   o  AS Boundary Router (ASBR) and forwarding address selection will\n     \
    \ proceed the same as if RFC1583Compatibility is disabled.\n      Furthermore,\
    \ RFC1583Compatibility is not an OSPF for IPv6\n      configuration parameter.\
    \  Refer to Appendix C.1.\n   When a single AS-external-LSA or NSSA-LSA has changed,\
    \ the\n   incremental calculations outlined in Section 16.6 of [OSPFV2] can be\n\
    \   performed instead of recalculating the entire routing table.\n"
- title: 4.9.  Multiple Interfaces to a Single Link
  contents:
  - "4.9.  Multiple Interfaces to a Single Link\n   In OSPF for IPv6, a router may\
    \ have multiple interfaces to a single\n   link associated with the same OSPF\
    \ instance and area.  All interfaces\n   will be used for the reception and transmission\
    \ of data traffic while\n   only a single interface sends and receives OSPF control\
    \ traffic.  In\n   more detail:\n   o  Each of the multiple interfaces is assigned\
    \ a different Interface\n      ID.  A router will automatically detect that multiple\
    \ interfaces\n      are attached to the same link when a Hello packet is received\
    \ with\n      one of the router's link-local addresses as the source address and\n\
    \      an Interface ID other than the Interface ID of the receiving\n      interface.\n\
    \   o  Each of the multiple interfaces MUST be configured with the same\n    \
    \  Interface Instance ID to be considered on the same link.  If an\n      interface\
    \ has multiple Instance IDs, it will be grouped with other\n      interfaces based\
    \ on matching Instance IDs.  Each Instance ID will\n      be treated uniquely\
    \ with respect to groupings of multiple\n      interfaces on the same link.  For\
    \ example, if interface A is\n      configured with Instance IDs 1 and 35, and\
    \ interface B is\n      configured with Instance ID 35, interface B may be the\
    \ Active\n      Interface for Instance ID 35 but interface A will be active for\n\
    \      Instance ID 1.\n   o  The router will ignore OSPF packets other than Hello\
    \ packets on\n      all but one of the interfaces attached to the link.  It will\
    \ only\n      send its OSPF control packets (including Hello packets) on a\n \
    \     single interface.  This interface is designated the Active\n      Interface\
    \ and other interfaces attached to the same link will be\n      designated Standby\
    \ Interfaces.  The choice of the Active Interface\n      is implementation dependent.\
    \  For example, the interface with the\n      highest Interface ID could be chosen.\
    \  If the router is elected\n      Designated Router, it will be the Active Interface's\
    \ Interface ID\n      that will be used as the network-LSA's Link State ID.\n\
    \   o  All of the interfaces to the link (Active and Standby) will appear\n  \
    \    in the router-LSA.  In addition, a link-LSA will be generated for\n     \
    \ each of the interfaces.  In this way, all interfaces will be\n      included\
    \ in OSPF's routing calculations.\n   o  Any link-local scope LSAs that are originated\
    \ for a Standby\n      Interface will be flooded over the Active Interface.\n\
    \      If a Standby Interface goes down, then the link-local scope LSAs\n    \
    \  originated for the Standby Interfaces MUST be flushed on the\n      Active\
    \ Interface.\n   o  Prefixes on Standby Interfaces will be processed the same\
    \ way as\n      prefixes on the Active Interface.  For example, if the router\
    \ is\n      the DR for the link, the Active Interface's prefixes are included\n\
    \      in an intra-area-prefix-LSA which is associated with the Active\n     \
    \ Interface's network-LSA; prefixes from Standby Interfaces on the\n      link\
    \ will also be included in that intra-area-prefix LSA.\n      Similarly, if the\
    \ link is a stub link, then the prefixes for the\n      Active and Standby Interfaces\
    \ will all be included in the same\n      intra-area-prefix-LSA that is associated\
    \ with the router-LSA.\n   o  If the Active Interface fails, a new Active Interface\
    \ will have to\n      take over.  The new Active Interface SHOULD form all new\
    \ neighbor\n      adjacencies with routers on the link.  This failure can be\n\
    \      detected when the router's other interfaces to the Active\n      Interface's\
    \ link cease to hear the router's Hellos or through\n      internal mechanisms,\
    \ e.g., monitoring the Active Interface's\n      status.\n   o  If the network\
    \ becomes partitioned with different local interfaces\n      attaching to different\
    \ network partitions, multiple interfaces\n      will become Active Interfaces\
    \ and function independently.\n   o  During the SPF calculation when a network-LSA\
    \ for a network that\n      is directly connected to the root vertex is being\
    \ examined, all of\n      the multiple interfaces to the link of adjacent router-LSAs\
    \ must\n      be used in the next-hop calculation.\n      This can be accomplished\
    \ during the back link check (see Section\n      16.1, Step 2 (B), in [OSPFV2])\
    \ by examining each link of the\n      router-LSA and making a list of the links\
    \ that point to the\n      network-LSA.  The Interface IDs for links in this list\
    \ are then\n      used to find the corresponding link-LSAs and the link-local\n\
    \      addresses used as next hops when installing equal-cost paths in\n     \
    \ the routing table.\n   o  The interface state machine is modified to add the\
    \ state Standby.\n      See Section 4.9.1 for a description of the Standby state.\n"
- title: 4.9.1.  Standby Interface State
  contents:
  - "4.9.1.  Standby Interface State\n   In this state, the interface is one of multiple\
    \ interfaces to a link\n   and this interface is designated Standby and is not\
    \ sending or\n   receiving control packets.  The interface will continue to receive\n\
    \   the Hello packets sent by the Active Interface.  The interface will\n   maintain\
    \ a timer, the Active Interface Timer, with the same interval\n   as the RouterDeadInterval.\
    \  This timer will be reset whenever an OSPF\n   Hello packet is received from\
    \ the Active Interface to the link.\n   Two new events are added to the list of\
    \ events that cause interface\n   state changes: MultipleInterfacesToLink and\
    \ ActiveInterfaceDead.  The\n   descriptions of these events are as follows:\n\
    \   MultipleInterfacesToLink\n      An interfaces on the router has received a\
    \ Hello packet from\n      another interface on the same router.  One of the interfaces\
    \ is\n      designated as the Active Interface and the other interface is\n  \
    \    designated as a Standby Interface.  The Standby Interface\n      transitions\
    \ to the Standby state.\n   ActiveInterfaceDead\n      There has been an indication\
    \ that a Standby Interface is no longer\n      on a link with an Active Interface.\
    \  The firing of the Active\n      Interface Timer is one indication of this event,\
    \ as it indicates\n      that the Standby Interface has not received an OSPF Hello\
    \ packet\n      from the Active Interface for the RouterDeadInterval.  Other\n\
    \      indications may come from internal notifications, such as the\n      Active\
    \ Interface being disabled through a configuration change.\n      Any indication\
    \ internal to the router, such that the router knows\n      the Active Interface\
    \ is no longer active on the link, can trigger\n      the ActiveInterfaceDead\
    \ event for a Standby Interface.\n   Interface state machine additions include:\n\
    \        State(s):  Waiting, DR Other, Backup, or DR\n           Event:  MultipleInterfacesToLink\n\
    \       New state:  Standby\n          Action:  All interface variables are reset\
    \ and interface\n                   timers disabled.  Also, all neighbor connections\n\
    \                   associated with the interface are destroyed.  This\n     \
    \              is done by generating the event KillNbr on all\n              \
    \     associated neighbors.  The Active Interface Timer is\n                 \
    \  started and the interface will listen for OSPF Hello\n                   packets\
    \ from the link's Active Interface.\n        State(s):  Standby\n           Event:\
    \  ActiveInterfaceDead\n       New state:  Down\n          Action:  The Active\
    \ Interface Timer is first disabled.  Then\n                   the InterfaceUp\
    \ event is invoked.\n                 Standby Interface State Machine Additions\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   When running over IPv6, OSPFv3 relies on the\
    \ IP Authentication Header\n   (see [IPAUTH]) and the IP Encapsulating Security\
    \ Payload (see\n   [IPESP]) to ensure integrity and authentication/confidentiality\
    \ of\n   protocol packets.  This is described in [OSPFV3-AUTH].\n   Most OSPFv3\
    \ implementations will be running on systems that support\n   multiple protocols\
    \ with their own independent security assumptions\n   and domains.  When IPsec\
    \ is used to protect OSPFv3 packets, it is\n   important for the implementation\
    \ to check the IPsec Security\n   Association (SA) and local SA database to ensure\
    \ the OSPF packet\n   originated from a source that is trusted for OSPFv3.  This\
    \ is\n   required to eliminate the possibility that the packet was\n   authenticated\
    \ using an SA defined for another protocol running on the\n   same system.\n \
    \  The mechanisms in [OSPFV3-AUTH] do not provide protection against\n   compromised,\
    \ malfunctioning, or misconfigured routers.  Such routers\n   can, either accidentally\
    \ or deliberately, cause malfunctions\n   affecting the whole routing domain.\
    \  The reader is encouraged to\n   consult [GENERIC-THREATS] for a more comprehensive\
    \ description of\n   threats to routing protocols.\n"
- title: 6.  Manageability Considerations
  contents:
  - "6.  Manageability Considerations\n   The Management Information Base (MIB) for\
    \ OSPFv3 is defined in\n   [OSPFV3-MIB].\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   Most OSPF for IPv6 IANA considerations are documented\
    \ in [OSPF-IANA].\n   IANA has updated the reference for RFC 2740 to this document.\n\
    \   Additionally, this document introduces the following IANA\n   requirements\
    \ that were not present in [OSPFV3]:\n   o  Reserves the options with the values\
    \ 0x000040 and 0x000080 for\n      migrated OSPFv2 options in the OSPFv3 Options\
    \ registry defined in\n      [OSPF-IANA].  For information on the OSPFv3 Options\
    \ field, refer\n      to Appendix A.2.\n   o  Adds the prefix option P-bit with\
    \ value 0x08 to the OSPFv3 Prefix\n      Options registry defined in [OSPF-IANA].\
    \  For information on\n      OSPFv3 Prefix Options, refer to Appendix A.4.1.1.\n\
    \   o  Adds the prefix option DN-bit with value 0x10 to the OSPFv3 Prefix\n  \
    \    Options registry defined in [OSPF-IANA].  For information on\n      OSPFv3\
    \ Prefix Options, refer to Appendix A.4.1.1.\n"
- title: 7.1.  MOSPF for OSPFv3 Deprecation IANA Considerations
  contents:
  - "7.1.  MOSPF for OSPFv3 Deprecation IANA Considerations\n   With the deprecation\
    \ of MOSPF for OSPFv3, the following code points\n   are available for reassignment.\
    \  Refer to [OSPF-IANA] for information\n   on the respective registries.  This\
    \ document:\n   o  Deprecates the MC-bit with value 0x000004 in the OSPFv3 Options\n\
    \      registry.\n   o  Deprecates Group-membership-LSA with value 6 in OSPFv3\
    \ LSA\n      Function Code registry.\n   o  Deprecates MC-bit with value 0x04\
    \ in the OSPFv3 Prefix Options\n      registry.\n   The W-bit in the OSPFv3 Router\
    \ Properties has also been deprecated.\n   This requires a new registry for OSPFv3\
    \ router properties since it\n   will diverge from the OSPFv2 Router Properties.\n\
    \      Registry Name: OSPFv3 Router Properties Registry\n      Reference: RFC\
    \ 5340\n      Registration Procedures: Standards Action\n      Registry:\n   \
    \   Value   Description    Reference\n      ------  -------------  ---------\n\
    \      0x01    B-bit          RFC 5340\n      0x02    E-bit          RFC 5340\n\
    \      0x04    V-bit          RFC 5340\n      0x08    Deprecated     RFC 5340\n\
    \      0x10    Nt-bit         RFC 5340\n                     OSPFv3 Router Properties\
    \ Registry\n"
- title: 8.  Acknowledgments
  contents:
  - "8.  Acknowledgments\n   The RFC text was produced using Marshall Rose's xml2rfc\
    \ tool.\n   The following individuals contributed comments that were incorporated\n\
    \   into this document:\n   o  Harold Rabbie for his description of protocol details\
    \ that needed\n      to be clarified for OSPFv3 NSSA support.\n   o  Nic Neate\
    \ for his pointing out that there needed to be changes for\n      unknown LSA\
    \ types handling in the processing of Database\n      Description packets.\n \
    \  o  Jacek Kwiatkowski for being the first to point out that the V6-\n      and\
    \ R-bits are not taken into account in the OSPFv3 intra-area SPF\n      calculation.\n\
    \   o  Michael Barnes recognized that the support for multiple interfaces\n  \
    \    to a single link was broken (see Section 4.9) and provided the\n      description\
    \ of the current protocol mechanisms.  Abhay Roy\n      reviewed and suggested\
    \ improvements to the mechanisms.\n   o  Alan Davey reviewed and commented on\
    \ document revisions.\n   o  Vivek Dubey reviewed and commented on document revisions.\n\
    \   o  Manoj Goyal and Vivek Dubey complained enough about link-LSAs\n      being\
    \ unnecessary to compel introduction of the LinkLSASuppression\n      interface\
    \ configuration parameter.\n   o  Manoj Goyal for pointing out that the next-hop\
    \ calculation for\n      intra-area-prefix-LSAs corresponding to network vertices\
    \ was\n      unclear.\n   o  Ramana Koppula reviewed and commented on document\
    \ revisions.\n   o  Paul Wells reviewed and commented on document revisions.\n\
    \   o  Amir Khan reviewed and commented on document revisions.\n   o  Dow Street\
    \ and Wayne Wheeler commented on the addition of the DN-\n      bit to OSPFv3.\n\
    \   o  Mitchell Erblichs provided numerous editorial comments.\n   o  Russ White\
    \ provided numerous editorial comments.\n   o  Kashima Hiroaki provided editorial\
    \ comments.\n   o  Sina Mirtorabi suggested that OSPFv3 should be aligned with\
    \ OSPFv2\n      with respect to precedence and should map it to IPv6 traffic class\n\
    \      as specified in RFC 2474.  Steve Blake helped with the text.\n   o  Faraz\
    \ Shamin reviewed a late version of the document and provided\n      editorial\
    \ comments.\n   o  Christian Vogt performed the General Area Review Team (Gen-ART)\n\
    \      review and provided comments.\n   o  Dave Ward, Dan Romascanu, Tim Polk,\
    \ Ron Bonica, Pasi Eronen, and\n      Lars Eggert provided comments during the\
    \ IESG review.  Also,\n      thanks to Pasi for the text in Section 5 relating\
    \ to routing\n      threats.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [DEMAND]           Moy, J., \"Extending OSPF to\
    \ Support Demand\n                      Circuits\", RFC 1793, April 1995.\n  \
    \ [DIFF-SERV]        Nichols, K., Blake, S., Baker, F., and D. Black,\n      \
    \                \"Definition of the Differentiated Services Field\n         \
    \             (DS Field) in the IPv4 and IPv6 Headers\",\n                   \
    \   RFC 2474, December 1998.\n   [DN-BIT]           Rosen, E., Peter, P., and\
    \ P. Pillay-Esnault,\n                      \"Using a Link State Advertisement\
    \ (LSA) Options\n                      Bit to Prevent Looping in BGP/MPLS IP Virtual\n\
    \                      Private Networks (VPNs)\", RFC 4576, June 2006.\n   [INTFMIB]\
    \          McCloghrie, K. and F. Kastenholz, \"The Interfaces\n              \
    \        Group MIB\", RFC 2863, June 2000.\n   [IP6ADDR]          Hinden, R. and\
    \ S. Deering, \"IP Version 6\n                      Addressing Architecture\"\
    , RFC 4291, February 2006.\n   [IPAUTH]           Kent, S., \"IP Authentication\
    \ Header\", RFC 4302,\n                      December 2005.\n   [IPESP]      \
    \      Kent, S., \"IP Encapsulating Security Payload\n                      (ESP)\"\
    , RFC 4303, December 2005.\n   [IPV4]             Postal, J., \"Internet Protocol\"\
    , STD 5, RFC 791,\n                      September 1981.\n   [IPV6]          \
    \   Deering, S. and R. Hinden, \"Internet Protocol,\n                      Version\
    \ 6 (IPv6) Specification\", RFC 2460,\n                      December 1998.\n\
    \   [NSSA]             Murphy, P., \"The OSPF Not-So-Stubby Area (NSSA)\n    \
    \                  Option\", RFC 3101, January 2003.\n   [OSPF-IANA]        Kompella,\
    \ K. and B. Fenner, \"IANA Considerations\n                      for OSPF\", BCP\
    \ 130, RFC 4940, July 2007.\n   [OSPFV2]           Moy, J., \"OSPF Version 2\"\
    , STD 54, RFC 2328,\n                      April 1998.\n   [OSPFV3-AUTH]     \
    \ Gupta, M. and N. Melam, \"Authentication/\n                      Confidentiality\
    \ for OSPFv3\", RFC 4552, June 2006.\n   [RFC-KEYWORDS]     Bradner, S., \"Key\
    \ words for use in RFCs to\n                      Indicate Requirement Levels\"\
    , BCP 14, RFC 2119,\n                      March 1997.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [GENERIC-THREATS]  Barbir, A., Murphy, S., and\
    \ Y. Yang, \"Generic\n                      Threats to Routing Protocols\", RFC\
    \ 4593,\n                      October 2006.\n   [MOSPF]            Moy, J., \"\
    Multicast Extensions to OSPF\", RFC 1584,\n                      March 1994.\n\
    \   [MTUDISC]          Mogul, J. and S. Deering, \"Path MTU discovery\",\n   \
    \                   RFC 1191, November 1990.\n   [OPAQUE]           Coltun, R.,\
    \ \"The OSPF Opaque LSA Option\",\n                      RFC 2370, July 1998.\n\
    \   [OSPFV3]           Coltun, R., Ferguson, D., and J. Moy, \"OSPF for\n    \
    \                  IPv6\", RFC 2740, December 1999.\n   [OSPFV3-MIB]       Joyal,\
    \ D. and V. Manral, \"Management Information\n                      Base for OSPFv3\"\
    , Work in Progress,\n                      September 2007.\n   [SERV-CLASS]  \
    \     Babiarz, J., Chan, K., and F. Baker,\n                      \"Configuration\
    \ Guidelines for DiffServ Service\n                      Classes\", RFC 4594,\
    \ August 2006.\n"
- title: Appendix A.  OSPF Data Formats
  contents:
  - "Appendix A.  OSPF Data Formats\n   This appendix describes the format of OSPF\
    \ protocol packets and OSPF\n   LSAs.  The OSPF protocol runs directly over the\
    \ IPv6 network layer.\n   Before any data formats are described, the details of\
    \ the OSPF\n   encapsulation are explained.\n   Next, the OSPF Options field is\
    \ described.  This field describes\n   various capabilities that may or may not\
    \ be supported by pieces of\n   the OSPF routing domain.  The OSPF Options field\
    \ is contained in OSPF\n   Hello packets, Database Description packets, and OSPF\
    \ LSAs.\n   OSPF packet formats are detailed in Section A.3.\n   A description\
    \ of OSPF LSAs appears in Section A.4.  This section\n   describes how IPv6 address\
    \ prefixes are represented within LSAs,\n   details the standard LSA header, and\
    \ then provides formats for each\n   of the specific LSA types.\n"
- title: A.1.  Encapsulation of OSPF Packets
  contents:
  - "A.1.  Encapsulation of OSPF Packets\n   OSPF runs directly over the IPv6's network\
    \ layer.  OSPF packets are\n   therefore encapsulated solely by IPv6 and local\
    \ data-link headers.\n   OSPF does not define a way to fragment its protocol packets,\
    \ and\n   depends on IPv6 fragmentation when transmitting packets larger than\n\
    \   the link MTU.  If necessary, the length of OSPF packets can be up to\n   65,535\
    \ bytes.  The OSPF packet types that are likely to be large\n   (Database Description,\
    \ Link State Request, Link State Update, and\n   Link State Acknowledgment packets)\
    \ can usually be split into multiple\n   protocol packets without loss of functionality.\
    \  This is recommended;\n   IPv6 fragmentation should be avoided whenever possible.\
    \  Using this\n   reasoning, an attempt should be made to limit the size of OSPF\n\
    \   packets sent over virtual links to 1280 bytes unless Path MTU\n   Discovery\
    \ is being performed [MTUDISC].\n   The other important features of OSPF's IPv6\
    \ encapsulation are:\n   o  Use of IPv6 multicast.  Some OSPF messages are multicast\
    \ when sent\n      over broadcast networks.  Two distinct IP multicast addresses\
    \ are\n      used.  Packets sent to these multicast addresses should never be\n\
    \      forwarded; they are meant to travel a single hop only.  As such,\n    \
    \  the multicast addresses have been chosen with link-local scope and\n      packets\
    \ sent to these addresses should have their IPv6 Hop Limit\n      set to 1. b\n\
    \      AllSPFRouters\n         This multicast address has been assigned the value\
    \ FF02::5.\n         All routers running OSPF should be prepared to receive packets\n\
    \         sent to this address.  Hello packets are always sent to this\n     \
    \    destination.  Also, certain OSPF protocol packets are sent to\n         this\
    \ address during the flooding procedure.\n      AllDRouters\n         This multicast\
    \ address has been assigned the value FF02::6.\n         Both the Designated Router\
    \ and Backup Designated Router must be\n         prepared to receive packets destined\
    \ to this address.  Certain\n         OSPF protocol packets are sent to this address\
    \ during the\n         flooding procedure.\n   o  OSPF is IP protocol 89.  This\
    \ number SHOULD be inserted in the\n      Next Header field of the encapsulating\
    \ IPv6 header.\n   o  The OSPFv2 specification (Appendix A.1 in [OSPFV2]) indicates\
    \ that\n      OSPF protocol packets are sent with IP precedence set to\n     \
    \ Internetwork Control (B'110') [IPV4].  If routers in the OSPF\n      routing\
    \ domain map their IPv6 Traffic Class octet to the\n      Differentiated Services\
    \ Code Point (DSCP) as specified in\n      [DIFF-SERV], then OSPFv3 packets SHOULD\
    \ be sent with their DSCP\n      set to CS6 (B'110000'), as specified in [SERV-CLASS].\
    \  In networks\n      supporting this mapping, OSPF packets will be given precedence\n\
    \      over IPv6 data traffic.\n"
- title: A.2.  The Options Field
  contents:
  - "A.2.  The Options Field\n   The 24-bit OSPF Options field is present in OSPF\
    \ Hello packets,\n   Database Description packets, and certain LSAs (router-LSAs,\
    \ network-\n   LSAs, inter-area-router-LSAs, and link-LSAs).  The Options field\n\
    \   enables OSPF routers to support (or not support) optional\n   capabilities,\
    \ and to communicate their capability level to other OSPF\n   routers.  Through\
    \ this mechanism, routers of differing capabilities\n   can be mixed within an\
    \ OSPF routing domain.\n   An option mismatch between routers can cause a variety\
    \ of behaviors,\n   depending on the particular option.  Some option mismatches\
    \ prevent\n   neighbor relationships from forming (e.g., the E-bit below); these\n\
    \   mismatches are discovered through the sending and receiving of Hello\n   packets.\
    \  Some option mismatches prevent particular LSA types from\n   being flooded\
    \ across adjacencies; these are discovered through the\n   sending and receiving\
    \ of Database Description packets.  Some option\n   mismatches prevent routers\
    \ from being included in one or more of the\n   various routing calculations because\
    \ of their reduced functionality;\n   these mismatches are discovered by examining\
    \ LSAs.\n   Seven bits of the OSPF Options field have been assigned.  Each bit\
    \ is\n   described briefly below.  Routers should reset (i.e., clear)\n   unrecognized\
    \ bits in the Options field when sending Hello packets or\n   Database Description\
    \ packets and when originating LSAs.  Conversely,\n   routers encountering unrecognized\
    \ Options bits in received Hello\n   packets, Database Description packets, or\
    \ LSAs should ignore the\n   unrecognized bits and process the packet or LSA normally.\n\
    \                               1                    2\n           0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8  9 0 1  2  3\n          +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+--+-+-+-+--+--+\n\
    \          | | | | | | | | | | | | | | | | |*|*|DC|R|N|x| E|V6|\n          +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+--+-+-+-+--+--+\n\
    \                           The Options field\n                             The\
    \ Options field\n   V6-bit\n      If this bit is clear, the router/link should\
    \ be excluded from IPv6\n      routing calculations.  See Section 4.8 for details.\n\
    \   E-bit\n      This bit describes the way AS-external-LSAs are flooded, as\n\
    \      described in Sections 3.6, 9.5, 10.8, and 12.1.2 of [OSPFV2].\n   x-Bit\n\
    \      This bit was previously used by MOSPF (see [MOSPF]), which has\n      been\
    \ deprecated for OSPFv3.  The bit should be set to 0 and\n      ignored when received.\
    \  It may be reassigned in the future.\n   N-bit\n      This bit indicates whether\
    \ or not the router is attached to an\n      NSSA as specified in [NSSA].\n  \
    \ R-bit\n      This bit (the `Router' bit) indicates whether the originator is\
    \ an\n      active router.  If the router bit is clear, then routes that\n   \
    \   transit the advertising node cannot be computed.  Clearing the\n      router\
    \ bit would be appropriate for a multi-homed host that wants\n      to participate\
    \ in routing, but does not want to forward non-\n      locally addressed packets.\n\
    \   DC-bit\n      This bit describes the router's handling of demand circuits,\
    \ as\n      specified in [DEMAND].\n   *-bit\n      These bits are reserved for\
    \ migration of OSPFv2 protocol\n      extensions.\n"
- title: A.3.  OSPF Packet Formats
  contents:
  - "A.3.  OSPF Packet Formats\n   There are five distinct OSPF packet types.  All\
    \ OSPF packet types\n   begin with a standard 16-byte header.  This header is\
    \ described\n   first.  Each packet type is then described in a succeeding section.\n\
    \   In these sections, each packet's format is displayed and the packet's\n  \
    \ component fields are defined.\n   All OSPF packet types (other than the OSPF\
    \ Hello packets) deal with\n   lists of LSAs.  For example, Link State Update\
    \ packets implement the\n   flooding of LSAs throughout the OSPF routing domain.\
    \  The format of\n   LSAs is described in Section A.4.\n   The receive processing\
    \ of OSPF packets is detailed in Section 4.2.2.\n   The sending of OSPF packets\
    \ is explained in Section 4.2.1.\n"
- title: A.3.1.  The OSPF Packet Header
  contents:
  - "A.3.1.  The OSPF Packet Header\n   Every OSPF packet starts with a standard 16-byte\
    \ header.  Together\n   with the encapsulating IPv6 headers, the OSPF header contains\
    \ all the\n   information necessary to determine whether the packet should be\n\
    \   accepted for further processing.  This determination is described in\n   Section\
    \ 4.2.2.\n       0                   1                   2                   3\n\
    \       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    \
    \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \   Version #   |     Type      |         Packet length         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                         Router ID                             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                          Area ID                              |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |          Checksum             |  Instance ID  |      0        |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      \
    \                    The OSPF Packet Header\n   Version #\n      The OSPF version\
    \ number.  This specification documents version 3\n      of the OSPF protocol.\n\
    \   Type\n      The OSPF packet types are as follows.  See Appendix A.3.2 through\n\
    \      Appendix A.3.6 for details.\n            Type   Description\n         \
    \   ---------------------------------\n            1      Hello\n            2\
    \      Database Description\n            3      Link State Request\n         \
    \   4      Link State Update\n            5      Link State Acknowledgment\n \
    \  Packet length\n      The length of the OSPF protocol packet in bytes.  This\
    \ length\n      includes the standard OSPF header.\n   Router ID\n      The Router\
    \ ID of the packet's source.\n   Area ID\n      A 32-bit number identifying the\
    \ area to which this packet belongs.\n      All OSPF packets are associated with\
    \ a single area.  Most travel a\n      single hop only.  Packets traversing a\
    \ virtual link are labeled\n      with the backbone Area ID of 0.\n   Checksum\n\
    \      OSPF uses the standard checksum calculation for IPv6 applications:\n  \
    \    The 16-bit one's complement of the one's complement sum of the\n      entire\
    \ contents of the packet, starting with the OSPF packet\n      header, and prepending\
    \ a \"pseudo-header\" of IPv6 header fields, as\n      specified in Section 8.1\
    \ of [IPV6].  The \"Upper-Layer Packet\n      Length\" in the pseudo-header is\
    \ set to the value of the OSPF\n      packet header's length field.  The Next\
    \ Header value used in the\n      pseudo-header is 89.  If the packet's length\
    \ is not an integral\n      number of 16-bit words, the packet is padded with\
    \ a byte of zero\n      before checksumming.  Before computing the checksum, the\
    \ checksum\n      field in the OSPF packet header is set to 0.\n   Instance ID\n\
    \      Enables multiple instances of OSPF to be run over a single link.\n    \
    \  Each protocol instance would be assigned a separate Instance ID;\n      the\
    \ Instance ID has link-local significance only.  Received\n      packets whose\
    \ Instance ID is not equal to the receiving\n      interface's Instance ID are\
    \ discarded.\n   0\n      These fields are reserved.  They SHOULD be set to 0\
    \ when sending\n      protocol packets and MUST be ignored when receiving protocol\n\
    \      packets.\n"
- title: A.3.2.  The Hello Packet
  contents:
  - "A.3.2.  The Hello Packet\n   Hello packets are OSPF packet type 1.  These packets\
    \ are sent\n   periodically on all interfaces (including virtual links) in order\
    \ to\n   establish and maintain neighbor relationships.  In addition, Hello\n\
    \   packets are multicast on those links having a multicast or broadcast\n   capability,\
    \ enabling dynamic discovery of neighboring routers.\n   All routers connected\
    \ to a common link must agree on certain\n   parameters (HelloInterval and RouterDeadInterval).\
    \  These parameters\n   are included in Hello packets allowing differences to\
    \ inhibit the\n   forming of neighbor relationships.  The Hello packet also contains\n\
    \   fields used in Designated Router election (Designated Router ID and\n   Backup\
    \ Designated Router ID), and fields used to detect bidirectional\n   communication\
    \ (the Router IDs of all neighbors whose Hellos have been\n   recently received).\n\
    \       0                   1                   2                   3\n      \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |      3        |       1       |         Packet Length         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                         Router ID                             |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                          Area ID                              |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \          Checksum             | Instance ID   |     0         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                        Interface ID                           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \ Rtr Priority  |             Options                           |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |        HelloInterval          |       RouterDeadInterval      |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                   Designated Router ID                        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                Backup Designated Router ID                    |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                         Neighbor ID                           |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                        ...                                    |\n   \
    \                        The OSPF Hello Packet\n   Interface ID\n      32-bit\
    \ number uniquely identifying this interface among the\n      collection of this\
    \ router's interfaces.  For example, in some\n      implementations it may be\
    \ possible to use the MIB-II IfIndex\n      ([INTFMIB]).\n   Rtr Priority\n  \
    \    This router's Router Priority.  Used in (Backup) Designated Router\n    \
    \  election.  If set to 0, the router will be ineligible to become\n      (Backup)\
    \ Designated Router.\n   Options\n      The optional capabilities supported by\
    \ the router, as documented\n      in Section A.2.\n   HelloInterval\n      The\
    \ number of seconds between this router's Hello packets.\n   RouterDeadInterval\n\
    \      The number of seconds before declaring a silent router down.\n   Designated\
    \ Router ID\n      The sending router's view of the identity of the Designated\
    \ Router\n      for this network.  The Designated Router is identified by its\n\
    \      Router ID.  It is set to 0.0.0.0 if there is no Designated Router.\n  \
    \ Backup Designated Router ID\n      The sending router's view of the identity\
    \ of the Backup Designated\n      Router for this network.  The Backup Designated\
    \ Router is\n      identified by its IP Router ID.  It is set to 0.0.0.0 if there\
    \ is\n      no Backup Designated Router.\n   Neighbor ID\n      The Router IDs\
    \ of each router on the network with neighbor state\n      1-Way or greater.\n"
- title: A.3.3.  The Database Description Packet
  contents:
  - "A.3.3.  The Database Description Packet\n   Database Description packets are\
    \ OSPF packet type 2.  These packets\n   are exchanged when an adjacency is being\
    \ initialized.  They describe\n   the contents of the link-state database.  Multiple\
    \ packets may be\n   used to describe the database.  For this purpose, a poll-response\n\
    \   procedure is used.  One of the routers is designated to be the master\n  \
    \ and the other is the slave.  The master sends Database Description\n   packets\
    \ (polls) that are acknowledged by Database Description packets\n   sent by the\
    \ slave (responses).  The responses are linked to the polls\n   via the packets'\
    \ DD sequence numbers.\n       0                   1                   2     \
    \              3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+--+\n\
    \      |      3        |       2       |        Packet Length           |\n  \
    \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+--+\n    \
    \  |                           Router ID                            |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+--+\n\
    \      |                             Area ID                            |\n  \
    \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+--+\n    \
    \  |           Checksum            |  Instance ID  |      0         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+--+\n\
    \      |       0       |               Options                          |\n  \
    \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+--+\n    \
    \  |        Interface MTU          |      0        |0|0|0|0|0|I|M|MS|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+--+\n\
    \      |                    DD sequence number                          |\n  \
    \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+--+\n    \
    \  |                                                                |\n      +-\
    \                                                              -+\n      |   \
    \                                                             |\n      +-    \
    \                 An LSA Header                            -+\n      |       \
    \                                                         |\n      +-        \
    \                                                      -+\n      |           \
    \                                                     |\n      +-            \
    \                                                  -+\n      |               \
    \                                                 |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+--+\n\
    \      |                       ...                                      |\n  \
    \                 The OSPF Database Description Packet\n   The format of the Database\
    \ Description packet is very similar to both\n   the Link State Request packet\
    \ and the Link State Acknowledgment\n   packet.  The main part of all three is\
    \ a list of items, each item\n   describing a piece of the link-state database.\
    \  The sending of\n   Database Description packets is documented in Section 10.8\
    \ of\n   [OSPFV2].  The reception of Database Description packets is\n   documented\
    \ in Section 10.6 of [OSPFV2].\n   Options\n      The optional capabilities supported\
    \ by the router, as documented\n      in Section A.2.\n   Interface MTU\n    \
    \  The size in bytes of the largest IPv6 datagram that can be sent\n      out\
    \ the associated interface without fragmentation.  The MTUs of\n      common Internet\
    \ link types can be found in Table 7-1 of [MTUDISC].\n      Interface MTU should\
    \ be set to 0 in Database Description packets\n      sent over virtual links.\n\
    \   I-bit\n      The Init bit.  When set to 1, this packet is the first in the\n\
    \      sequence of Database Description packets.\n   M-bit\n      The More bit.\
    \  When set to 1, it indicates that more Database\n      Description packets are\
    \ to follow.\n   MS-bit\n      The Master/Slave bit.  When set to 1, it indicates\
    \ that the router\n      is the master during the Database Exchange process. \
    \ Otherwise,\n      the router is the slave.\n   DD sequence number\n      Used\
    \ to sequence the collection of Database Description packets.\n      The initial\
    \ value (indicated by the Init bit being set) should be\n      unique.  The DD\
    \ sequence number then increments until the complete\n      database for both\
    \ the master and slave routers have been\n      exchanged.\n   The rest of the\
    \ packet consists of a (possibly partial) list of the\n   link-state database's\
    \ pieces.  Each LSA in the database is described\n   by its LSA header.  The LSA\
    \ header is documented in Appendix A.4.2.\n   It contains all the information\
    \ required to uniquely identify both\n   the LSA and the LSA's current instance.\n"
- title: A.3.4.  The Link State Request Packet
  contents:
  - "A.3.4.  The Link State Request Packet\n   Link State Request packets are OSPF\
    \ packet type 3.  After exchanging\n   Database Description packets with a neighboring\
    \ router, a router may\n   find that parts of its link-state database are out-of-date.\
    \  The Link\n   State Request packet is used to request the pieces of the neighbor's\n\
    \   database that are more up-to-date.  Multiple Link State Request\n   packets\
    \ may need to be used.\n   A router that sends a Link State Request packet has\
    \ in mind the\n   precise instance of the database pieces it is requesting.  Each\n\
    \   instance is defined by its LS sequence number, LS checksum, and LS\n   age,\
    \ although these fields are not specified in the Link State\n   Request packet\
    \ itself.  The router may receive even more recent LSA\n   instances in response.\n\
    \   The sending of Link State Request packets is documented in Section\n   10.9\
    \ of [OSPFV2].  The reception of Link State Request packets is\n   documented\
    \ in Section 10.7 of [OSPFV2].\n       0                   1                 \
    \  2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |      3        |       3       |        Packet Length          |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                             Router ID                         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                             Area ID                           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \          Checksum             |  Instance ID  |      0        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |              0                |        LS Type                |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                         Link State ID                         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                       Advertising Router                      |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                                 ...                           |\n          \
    \          The OSPF Link State Request Packet\n   Each LSA requested is specified\
    \ by its LS type, Link State ID, and\n   Advertising Router.  This uniquely identifies\
    \ the LSA without\n   specifying its instance.  Link State Request packets are\
    \ understood\n   to be requests for the most recent instance of the specified\
    \ LSAs.\n"
- title: A.3.5.  The Link State Update Packet
  contents:
  - "A.3.5.  The Link State Update Packet\n   Link State Update packets are OSPF packet\
    \ type 4.  These packets\n   implement the flooding of LSAs.  Each Link State\
    \ Update packet\n   carries a collection of LSAs one hop further from their origin.\n\
    \   Several LSAs may be included in a single packet.\n   Link State Update packets\
    \ are multicast on those physical networks\n   that support multicast/broadcast.\
    \  In order to make the flooding\n   procedure reliable, flooded LSAs are acknowledged\
    \ in Link State\n   Acknowledgment packets.  If retransmission of certain LSAs\
    \ is\n   necessary, the retransmitted LSAs are always carried by unicast Link\n\
    \   State Update packets.  For more information on the reliable flooding\n   of\
    \ LSAs, consult Section 4.5.\n       0                   1                   2\
    \                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |      3        |       4       |         Packet Length         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                         Router ID                             |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                          Area ID                              |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \          Checksum             |  Instance ID  |      0        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                           # LSAs                              |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                                                               |\n      +-  \
    \                                                          +-+\n      |      \
    \                      LSAs                               |\n      +-        \
    \                                                    +-+\n      |            \
    \                 ...                               |\n                     The\
    \ OSPF Link State Update Packet\n   # LSAs\n      The number of LSAs included\
    \ in this update.\n   The body of the Link State Update packet consists of a list\
    \ of LSAs.\n   Each LSA begins with a common 20-byte header, described in\n  \
    \ Appendix A.4.2.  Detailed formats of the different types of LSAs are\n   described\
    \ Appendix A.4.\n"
- title: A.3.6.  The Link State Acknowledgment Packet
  contents:
  - "A.3.6.  The Link State Acknowledgment Packet\n   Link State Acknowledgment packets\
    \ are OSPF packet type 5.  To make\n   the flooding of LSAs reliable, flooded\
    \ LSAs are explicitly or\n   implicitly acknowledged.  Explicit acknowledgment\
    \ is accomplished\n   through the sending and receiving of Link State Acknowledgment\n\
    \   packets.  The sending of Link State Acknowledgment packets is\n   documented\
    \ in Section 13.5 of [OSPFV2].  The reception of Link State\n   Acknowledgment\
    \ packets is documented in Section 13.7 of [OSPFV2].\n   Multiple LSAs MAY be\
    \ acknowledged in a single Link State\n   Acknowledgment packet.  Depending on\
    \ the state of the sending\n   interface and the sender of the corresponding Link\
    \ State Update\n   packet, a Link State Acknowledgment packet is sent to the multicast\n\
    \   address AllSPFRouters, the multicast address AllDRouters, or to a\n   neighbor's\
    \ unicast address (see Section 13.5 of [OSPFV2] for\n   details).\n   The format\
    \ of this packet is similar to that of the Data Description\n   packet.  The body\
    \ of both packets is simply a list of LSA headers.\n       0                 \
    \  1                   2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |      3        |       5       |        Packet Length          |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                         Router ID                             |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                          Area ID                              |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \          Checksum             |  Instance ID  |      0        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                                                               |\n   \
    \   +-                                                             -+\n      |\
    \                                                               |\n      +-  \
    \                      An LSA Header                        -+\n      |      \
    \                                                         |\n      +-        \
    \                                                     -+\n      |            \
    \                                                   |\n      +-              \
    \                                               -+\n      |                  \
    \                                             |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                              ...                              |\n   \
    \              The OSPF Link State Acknowledgment Packet\n   Each acknowledged\
    \ LSA is described by its LSA header.  The LSA header\n   is documented in Appendix\
    \ A.4.2.  It contains all the information\n   required to uniquely identify both\
    \ the LSA and the LSA's current\n   instance.\n"
- title: A.4.  LSA Formats
  contents:
  - "A.4.  LSA Formats\n   This document defines eight distinct types of LSAs.  Each\
    \ LSA begins\n   with a standard 20-byte LSA header.  This header is explained\
    \ in\n   Appendix A.4.2.  Succeeding sections describe each LSA type\n   individually.\n\
    \   Each LSA describes a piece of the OSPF routing domain.  Every router\n   originates\
    \ a router-LSA.  A network-LSA is advertised for each link\n   by its Designated\
    \ Router.  A router's link-local addresses are\n   advertised to its neighbors\
    \ in link-LSAs.  IPv6 prefixes are\n   advertised in intra-area-prefix-LSAs, inter-area-prefix-LSAs,\
    \ AS-\n   external-LSAs, and NSSA-LSAs.  Location of specific routers can be\n\
    \   advertised across area boundaries in inter-area-router-LSAs.  All\n   LSAs\
    \ are then flooded throughout the OSPF routing domain.  The\n   flooding algorithm\
    \ is reliable, ensuring that all routers common to a\n   flooding scope have the\
    \ same collection of LSAs associated with that\n   flooding scope.  (See Section\
    \ 4.5 for more information concerning the\n   flooding algorithm.)  This collection\
    \ of LSAs is called the link-\n   state database.\n   From the link-state database,\
    \ each router constructs a shortest-path\n   tree with itself as root.  This yields\
    \ a routing table (see Section\n   11 of [OSPFV2]).  For details on the routing\
    \ table build process, see\n   Section 4.8.\n"
- title: A.4.1.  IPv6 Prefix Representation
  contents:
  - "A.4.1.  IPv6 Prefix Representation\n   IPv6 addresses are bit strings of length\
    \ 128.  IPv6 routing\n   protocols, and OSPF for IPv6 in particular, advertise\
    \ IPv6 address\n   prefixes.  IPv6 address prefixes are bit strings whose length\
    \ ranges\n   between 0 and 128 bits (inclusive).\n   Within OSPF, IPv6 address\
    \ prefixes are always represented by a\n   combination of three fields: PrefixLength,\
    \ PrefixOptions, and Address\n   Prefix.  PrefixLength is the length in bits of\
    \ the prefix.\n   PrefixOptions is an 8-bit field describing various capabilities\n\
    \   associated with the prefix (see Appendix A.4.1.1).  Address Prefix is\n  \
    \ an encoding of the prefix itself as an even multiple of 32-bit words,\n   padding\
    \ with zero bits as necessary.  This encoding consumes\n   ((PrefixLength + 31)\
    \ / 32) 32-bit words.\n   The default route is represented by a prefix of length\
    \ 0.\n   Examples of IPv6 Prefix representation in OSPF can be found in\n   Appendix\
    \ A.4.5, Appendix A.4.7, Appendix A.4.8, Appendix A.4.9, and\n   Appendix A.4.10.\n"
- title: A.4.1.1.  Prefix Options
  contents:
  - "A.4.1.1.  Prefix Options\n   Each prefix is advertised along with an 8-bit field\
    \ of capabilities.\n   These serve as input to the various routing calculations.\
    \  For\n   example, they can indicate that prefixes are to be ignored in some\n\
    \   cases or are to be marked as not readvertisable in others.\n             \
    \        0  1  2  3  4  5  6  7\n                    +--+--+--+--+--+-+--+--+\n\
    \                    |  |  |  |DN| P|x|LA|NU|\n                    +--+--+--+--+--+-+--+--+\n\
    \                          The PrefixOptions Field\n   NU-bit\n      The \"no\
    \ unicast\" capability bit.  If set, the prefix should be\n      excluded from\
    \ IPv6 unicast calculations.  If not set, it should be\n      included.\n   LA-bit\n\
    \      The \"local address\" capability bit.  If set, the prefix is\n      actually\
    \ an IPv6 interface address of the Advertising Router.\n      Advertisement of\
    \ local interface addresses is described in\n      Section 4.4.3.9.  An implementation\
    \ MAY also set the LA-bit for\n      prefixes advertised with a host PrefixLength\
    \ (128).\n   x-bit\n      This bit was previously defined as a \"multicast\" capability\
    \ bit.\n      However, the use was never adequately specified and has been\n \
    \     deprecated for OSPFv3.  The bit should be set to 0 and ignored\n      when\
    \ received.  It may be reassigned in the future.\n   P-bit\n      The \"propagate\"\
    \ bit.  Set on NSSA area prefixes that should be\n      readvertised by the translating\
    \ NSSA area border [NSSA].\n   DN-bit\n      This bit controls an inter-area-prefix-LSAs\
    \ or AS-external-LSAs\n      re-advertisement in a VPN environment as specified\
    \ in [DN-BIT].\n"
- title: A.4.2.  The LSA Header
  contents:
  - "A.4.2.  The LSA Header\n   All LSAs begin with a common 20-byte header.  This\
    \ header contains\n   enough information to uniquely identify the LSA (LS type,\
    \ Link State\n   ID, and Advertising Router).  Multiple instances of the LSA may\
    \ exist\n   in the routing domain at the same time.  It is then necessary to\n\
    \   determine which instance is more recent.  This is accomplished by\n   examining\
    \ the LS age, LS sequence number, and LS checksum fields that\n   are also contained\
    \ in the LSA header.\n       0                   1                   2       \
    \            3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |           LS Age              |           LS Type             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                       Link State ID                           |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                    Advertising Router                         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                    LS Sequence Number                         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |        LS Checksum            |             Length            |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      \
    \                        The LSA Header\n   LS Age\n      The time in seconds\
    \ since the LSA was originated.\n   LS Type\n      The LS type field indicates\
    \ the function performed by the LSA.\n      The high-order three bits of LS type\
    \ encode generic properties of\n      the LSA, while the remainder (called LSA\
    \ function code) indicate\n      the LSA's specific functionality.  See Appendix\
    \ A.4.2.1 for a\n      detailed description of LS type.\n   Link State ID\n  \
    \    The originating router's identifier for the LSA.  The combination\n     \
    \ of the Link State ID, LS type, and Advertising Router uniquely\n      identify\
    \ the LSA in the link-state database.\n   Advertising Router\n      The Router\
    \ ID of the router that originated the LSA.  For example,\n      in network-LSAs\
    \ this field is equal to the Router ID of the\n      network's Designated Router.\n\
    \   LS sequence number\n      Successive instances of an LSA are given successive\
    \ LS sequence\n      numbers.  The sequence number can be used to detect old or\n\
    \      duplicate LSA instances.  See Section 12.1.6 in [OSPFV2] for more\n   \
    \   details.\n   LS checksum\n      The Fletcher checksum of the complete contents\
    \ of the LSA,\n      including the LSA header but excluding the LS age field.\
    \  See\n      Section 12.1.7 in [OSPFV2] for more details.\n   length\n      The\
    \ length in bytes of the LSA.  This includes the 20-byte LSA\n      header.\n"
- title: A.4.2.1.  LSA Type
  contents:
  - "A.4.2.1.  LSA Type\n   The LS type field indicates the function performed by\
    \ the LSA.  The\n   high-order three bits of LS type encode generic properties\
    \ of the\n   LSA, while the remainder (called LSA function code) indicate the\n\
    \   LSA's specific functionality.  The format of the LS type is as\n   follows:\n\
    \              0  1  2  3  4  5  6  7  8  9  0  1  2  3  4  5\n            +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n\
    \            |U |S2|S1|           LSA Function Code          |\n            +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n\
    \                                 LSA Type\n   The U-bit indicates how the LSA\
    \ should be handled by a router that\n   does not recognize the LSA's function\
    \ code.  Its values are:\n        U-bit   LSA Handling\n        -------------------------------------------------------------\n\
    \        0       Treat the LSA as if it had link-local flooding scope\n      \
    \  1       Store and flood the LSA as if the type is understood\n            \
    \                       U-Bit\n   The S1 and S2 bits indicate the flooding scope\
    \ of the LSA.  The\n   values are:\n     S2  S1   Flooding Scope\n     -------------------------------------------------------------\n\
    \     0  0    Link-Local Scoping - Flooded only on originating link\n     0  1\
    \    Area Scoping - Flooded only in originating area\n     1  0    AS Scoping\
    \ - Flooded throughout AS\n     1  1    Reserved\n                           \
    \   Flooding Scope\n   The LSA function codes are defined as follows.  The origination\
    \ and\n   processing of these LSA function codes are defined elsewhere in this\n\
    \   document, except for the NSSA-LSA (see [NSSA]) and 0x2006, which was\n   previously\
    \ used by MOSPF (see [MOSPF]).  MOSPF has been deprecated\n   for OSPFv3.  As\
    \ shown below, each LSA function b code also implies a\n   specific setting for\
    \ the U, S1, and S2 bits.\n            LSA Function Code   LS Type   Description\n\
    \            ----------------------------------------------------\n          \
    \  1                   0x2001    Router-LSA\n            2                   0x2002\
    \    Network-LSA\n            3                   0x2003    Inter-Area-Prefix-LSA\n\
    \            4                   0x2004    Inter-Area-Router-LSA\n           \
    \ 5                   0x4005    AS-External-LSA\n            6               \
    \    0x2006    Deprecated (may be reassigned)\n            7                 \
    \  0x2007    NSSA-LSA\n            8                   0x0008    Link-LSA\n  \
    \          9                   0x2009    Intra-Area-Prefix-LSA\n             \
    \                LSA Function Code\n"
- title: A.4.3.  Router-LSAs
  contents:
  - "A.4.3.  Router-LSAs\n   Router-LSAs have LS type equal to 0x2001.  Each router\
    \ in an area\n   originates one or more router-LSAs.  The complete collection\
    \ of\n   router-LSAs originated by the router describe the state and cost of\n\
    \   the router's interfaces to the area.  For details concerning the\n   construction\
    \ of router-LSAs, see Section 4.4.3.2.  Router-LSAs are\n   only flooded throughout\
    \ a single area.\n       0                    1                   2          \
    \         3\n       0 1 2 3  4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1\n      +-+-+-+--+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |           LS Age               |0|0|1|         1               |\n  \
    \    +-+-+-+--+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \  |                       Link State ID                            |\n      +-+-+-+--+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                    Advertising Router                          |\n  \
    \    +-+-+-+--+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \  |                    LS Sequence Number                          |\n      +-+-+-+--+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |        LS Checksum             |            Length             |\n  \
    \    +-+-+-+--+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \  |  0  |Nt|x|V|E|B|            Options                            |\n      +-+-+-+--+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     Type       |       0       |          Metric               |\n  \
    \    +-+-+-+--+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \  |                      Interface ID                              |\n      +-+-+-+--+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                   Neighbor Interface ID                        |\n  \
    \    +-+-+-+--+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \  |                    Neighbor Router ID                          |\n      +-+-+-+--+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                             ...                                |\n  \
    \    +-+-+-+--+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \  |     Type       |       0       |          Metric               |\n      +-+-+-+--+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                      Interface ID                              |\n  \
    \    +-+-+-+--+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \  |                   Neighbor Interface ID                        |\n      +-+-+-+--+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                    Neighbor Router ID                          |\n  \
    \    +-+-+-+--+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \  |                             ...                                |\n      \
    \                       Router-LSA Format\n   A single router may originate one\
    \ or more router-LSAs, distinguished\n   by their Link State IDs (which are chosen\
    \ arbitrarily by the\n   originating router).  The Options field and V, E, and\
    \ B bits should\n   be the same in all router-LSAs from a single originator. \
    \ However, in\n   the case of a mismatch, the values in the LSA with the lowest\
    \ Link\n   State ID take precedence.  When more than one router-LSA is received\n\
    \   from a single router, the links are processed as if concatenated into\n  \
    \ a single LSA.\n   Bit V\n      When set, the router is an endpoint of one or\
    \ more fully adjacent\n      virtual links having the described area as transit\
    \ area (V is for\n      virtual link endpoint).\n   Bit E\n      When set, the\
    \ router is an AS boundary router (E is for external).\n   Bit B\n      When set,\
    \ the router is an area border router (B is for border).\n   Bit x\n      This\
    \ bit was previously used by MOSPF (see [MOSPF]) and has been\n      deprecated\
    \ for OSPFv3.  The bit should be set to 0 and ignored\n      when received.  It\
    \ may be reassigned in the future.\n   Bit Nt\n      When set, the router is an\
    \ NSSA border router that is\n      unconditionally translating NSSA-LSAs into\
    \ AS-external-LSAs (Nt\n      stands for NSSA translation).  Note that such routers\
    \ have their\n      NSSATranslatorRole area configuration parameter set to Always.\n\
    \      (See [NSSA].)\n   Options\n      The optional capabilities supported by\
    \ the router, as documented\n      in Appendix A.2.\n   The following fields are\
    \ used to describe each router interface.  The\n   Type field indicates the kind\
    \ of interface being described.  It may\n   be an interface to a transit network,\
    \ a point-to-point connection to\n   another router, or a virtual link.  The values\
    \ of all the other\n   fields describing a router interface depend on the interface's\
    \ Type\n   field.\n   Type\n      The kind of interface being described.  One\
    \ of the following:\n             Type   Description\n             ---------------------------------------------------\n\
    \             1      Point-to-point connection to another router\n           \
    \  2      Connection to a transit network\n             3      Reserved\n    \
    \         4      Virtual link\n                              Router Link Types\n\
    \   Metric\n      The cost of using this router interface for outbound traffic.\n\
    \   Interface ID\n      The Interface ID assigned to the interface being described.\
    \  See\n      Section 4.1.2 and Appendix C.3.\n   Neighbor Interface ID\n    \
    \  The Interface ID the neighbor router has associated with the link,\n      as\
    \ advertised in the neighbor's Hello packets.  For transit (type\n      2) links,\
    \ the link's Designated Router is the neighbor described.\n      For other link\
    \ types, the sole adjacent neighbor is described.\n   Neighbor Router ID\n   \
    \   The Router ID the of the neighbor router.  For transit (type 2)\n      links,\
    \ the link's Designated Router is the neighbor described.\n      For other link\
    \ types, the sole adjacent neighbor is described.\n   For transit (Type 2) links,\
    \ the combination of Neighbor Interface ID\n   and Neighbor Router ID allows the\
    \ network-LSA for the attached link\n   to be found in the link-state database.\n"
- title: A.4.4.  Network-LSAs
  contents:
  - "A.4.4.  Network-LSAs\n   Network-LSAs have LS type equal to 0x2002.  A network-LSA\
    \ is\n   originated for each broadcast and NBMA link in the area that includes\n\
    \   two or more adjacent routers.  The network-LSA is originated by the\n   link's\
    \ Designated Router.  The LSA describes all routers attached to\n   the link including\
    \ the Designated Router itself.  The LSA's Link\n   State ID field is set to the\
    \ Interface ID that the Designated Router\n   has been advertising in Hello packets\
    \ on the link.\n   The distance from the network to all attached routers is zero.\
    \  This\n   is why the Metric fields need not be specified in the network-LSA.\n\
    \   For details concerning the construction of network-LSAs, see\n   Section 4.4.3.3.\n\
    \       0                   1                   2                   3\n      \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |           LS Age              |0|0|1|          2              |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                       Link State ID                           |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                    Advertising Router                         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                    LS Sequence Number                         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |        LS Checksum            |            Length             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \      0        |              Options                          |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                       Attached Router                         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                             ...                               |\n          \
    \                  Network-LSA Format\n   Attached Router\n      The Router IDs\
    \ of each of the routers attached to the link.\n      Actually, only those routers\
    \ that are fully adjacent to the\n      Designated Router are listed.  The Designated\
    \ Router includes\n      itself in this list.  The number of routers included\
    \ can be\n      deduced from the LSA header's length field.\n"
- title: A.4.5.  Inter-Area-Prefix-LSAs
  contents:
  - "A.4.5.  Inter-Area-Prefix-LSAs\n   Inter-area-prefix-LSAs have LS type equal\
    \ to 0x2003.  These LSAs are\n   the IPv6 equivalent of OSPF for IPv4's type 3\
    \ summary-LSAs (see\n   Section 12.4.3 of [OSPFV2]).  Originated by area border\
    \ routers, they\n   describe routes to IPv6 address prefixes that belong to other\
    \ areas.\n   A separate inter-area-prefix-LSA is originated for each IPv6 address\n\
    \   prefix.  For details concerning the construction of inter-area-\n   prefix-LSAs,\
    \ see Section 4.4.3.4.\n   For stub areas, inter-area-prefix-LSAs can also be\
    \ used to describe a\n   (per-area) default route.  Default summary routes are\
    \ used in stub\n   areas instead of flooding a complete set of external routes.\
    \  When\n   describing a default summary route, the inter-area-prefix-LSA's\n\
    \   PrefixLength is set to 0.\n       0                   1                  \
    \ 2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |           LS Age              |0|0|1|          3              |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                       Link State ID                           |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                    Advertising Router                         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                    LS Sequence Number                         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |        LS Checksum            |            Length             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \      0        |                  Metric                       |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      | PrefixLength  | PrefixOptions |              0                |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                        Address Prefix                         |\n      |   \
    \                          ...                               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                       Inter-Area-Prefix-LSA Format\n   Metric\n      The cost\
    \ of this route.  Expressed in the same units as the\n      interface costs in\
    \ router-LSAs.  When the inter-area-prefix-LSA is\n      describing a route to\
    \ a range of addresses (see Appendix C.2), the\n      cost is set to the maximum\
    \ cost to any reachable component of the\n      address range.\n   PrefixLength,\
    \ PrefixOptions, and Address Prefix\n      Representation of the IPv6 address\
    \ prefix, as described in\n      Appendix A.4.1.\n"
- title: A.4.6.  Inter-Area-Router-LSAs
  contents:
  - "A.4.6.  Inter-Area-Router-LSAs\n   Inter-area-router-LSAs have LS type equal\
    \ to 0x2004.  These LSAs are\n   the IPv6 equivalent of OSPF for IPv4's type 4\
    \ summary-LSAs (see\n   Section 12.4.3 of [OSPFV2]).  Originated by area border\
    \ routers, they\n   describe routes to AS boundary routers in other areas.  To\
    \ see why it\n   is necessary to advertise the location of each ASBR, consult\
    \ Section\n   16.4 in [OSPFV2].  Each LSA describes a route to a single router.\n\
    \   For details concerning the construction of inter-area-router-LSAs,\n   see\
    \ Section 4.4.3.5.\n       0                   1                   2         \
    \          3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |           LS Age              |0|0|1|        4                |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                       Link State ID                           |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                    Advertising Router                         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                    LS Sequence Number                         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |        LS Checksum            |            Length             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \      0        |                 Options                       |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |      0        |                 Metric                        |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                    Destination Router ID                      |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                       Inter-Area-Router-LSA Format\n   Options\n      The optional\
    \ capabilities supported by the router, as documented\n      in Appendix A.2.\n\
    \   Metric\n      The cost of this route.  Expressed in the same units as the\n\
    \      interface costs in router-LSAs.\n   Destination Router ID\n      The Router\
    \ ID of the router being described by the LSA.\n"
- title: A.4.7.  AS-External-LSAs
  contents:
  - "A.4.7.  AS-External-LSAs\n   AS-external-LSAs have LS type equal to 0x4005. \
    \ These LSAs are\n   originated by AS boundary routers and describe destinations\
    \ external\n   to the AS.  Each LSA describes a route to a single IPv6 address\n\
    \   prefix.  For details concerning the construction of AS-external-LSAs,\n  \
    \ see Section 4.4.3.6.\n   AS-external-LSAs can be used to describe a default\
    \ route.  Default\n   routes are used when no specific route exists to the destination.\n\
    \   When describing a default route, the AS-external-LSA's PrefixLength\n   is\
    \ set to 0.\n       0                   1                   2                \
    \   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   \
    \   |           LS Age              |0|1|0|          5              |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                       Link State ID                           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                    Advertising Router                         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                    LS Sequence Number                         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \        LS Checksum            |            Length             |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |         |E|F|T|                Metric                         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \ PrefixLength  | PrefixOptions |     Referenced LS Type        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                        Address Prefix                         |\n   \
    \   |                             ...                               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                                                               |\n   \
    \   +-                                                             -+\n      |\
    \                                                               |\n      +-  \
    \              Forwarding Address (Optional)                -+\n      |      \
    \                                                         |\n      +-        \
    \                                                     -+\n      |            \
    \                                                   |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |              External Route Tag (Optional)                    |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \               Referenced Link State ID (Optional)             |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                          AS-external-LSA Format\n   bit E\n      The type of\
    \ external metric.  If bit E is set, the metric\n      specified is a Type 2 external\
    \ metric.  This means the metric is\n      considered larger than any intra-AS\
    \ path.  If bit E is zero, the\n      specified metric is a Type 1 external metric.\
    \  This means that it\n      is expressed in the same units as other LSAs (i.e.,\
    \ the same units\n      as the interface costs in router-LSAs).\n   bit F\n  \
    \    If set, a Forwarding Address has been included in the LSA.\n   bit T\n  \
    \    If set, an External Route Tag has been included in the LSA.\n   Metric\n\
    \      The cost of this route.  Interpretation depends on the external\n     \
    \ type indication (bit E above).\n   PrefixLength, PrefixOptions, and Address\
    \ Prefix\n      Representation of the IPv6 address prefix, as described in\n \
    \     Appendix A.4.1.\n   Referenced LS Type\n      If non-zero, an LSA with this\
    \ LS type is to be associated with\n      this LSA (see Referenced Link State\
    \ ID below).\n   Forwarding address\n      A fully qualified IPv6 address (128\
    \ bits).  Included in the LSA if\n      and only if bit F has been set.  If included,\
    \ data traffic for the\n      advertised destination will be forwarded to this\
    \ address.  It MUST\n      NOT be set to the IPv6 Unspecified Address (0:0:0:0:0:0:0:0)\
    \ or an\n      IPv6 Link-Local Address (Prefix FE80/10).  While OSPFv3 routes\
    \ are\n      normally installed with link-local addresses, an OSPFv3\n      implementation\
    \ advertising a forwarding address MUST advertise a\n      global IPv6 address.\
    \  This global IPv6 address may be the next-hop\n      gateway for an external\
    \ prefix or may be obtained through some\n      other method (e.g., configuration).\n\
    \   External Route Tag\n      A 32-bit field that MAY be used to communicate additional\n\
    \      information between AS boundary routers.  Included in the LSA if\n    \
    \  and only if bit T has been set.\n   Referenced Link State ID\n      Included\
    \ if and only if Reference LS Type is non-zero.  If\n      included, additional\
    \ information concerning the advertised\n      external route can be found in\
    \ the LSA having LS type equal to\n      \"Referenced LS Type\", Link State ID\
    \ equal to \"Referenced Link\n      State ID\", and Advertising Router the same\
    \ as that specified in\n      the AS-external-LSA's link-state header.  This additional\n\
    \      information is not used by the OSPF protocol itself.  It may be\n     \
    \ used to communicate information between AS boundary routers.  The\n      precise\
    \ nature of such information is outside the scope of this\n      specification.\n\
    \   All, none, or some of the fields labeled Forwarding address, External\n  \
    \ Route Tag, and Referenced Link State ID MAY be present in the AS-\n   external-LSA\
    \ (as indicated by the setting of bit F, bit T, and\n   Referenced LS Type respectively).\
    \  When present, Forwarding Address\n   always comes first, External Route Tag\
    \ next, and the Referenced Link\n   State ID last.\n"
- title: A.4.8.  NSSA-LSAs
  contents:
  - "A.4.8.  NSSA-LSAs\n   NSSA-LSAs have LS type equal to 0x2007.  These LSAs are\
    \ originated by\n   AS boundary routers within an NSSA and describe destinations\
    \ external\n   to the AS that may or may not be propagated outside the NSSA (refer\n\
    \   to [NSSA]).  Other than the LS type, their format is exactly the same\n  \
    \ as AS-external LSAs as described in Appendix A.4.7.\n   A global IPv6 address\
    \ MUST be selected as forwarding address for\n   NSSA-LSAs that are to be propagated\
    \ by NSSA area border routers.  The\n   selection should proceed the same as OSPFv2\
    \ NSSA support [NSSA] with\n   additional checking to ensure IPv6 link-local address\
    \ are not\n   selected.\n"
- title: A.4.9.  Link-LSAs
  contents:
  - "A.4.9.  Link-LSAs\n   Link-LSAs have LS type equal to 0x0008.  A router originates\
    \ a\n   separate link-LSA for each attached physical link.  These LSAs have\n\
    \   link-local flooding scope; they are never flooded beyond the\n   associated\
    \ link.  Link-LSAs have three purposes:\n   1.  They provide the router's link-local\
    \ address to all other routers\n       attached to the link.\n   2.  They inform\
    \ other routers attached to the link of a list of IPv6\n       prefixes to associate\
    \ with the link.\n   3.  They allow the router to advertise a collection of Options\
    \ bits\n       in the network-LSA originated by the Designated Router on a\n \
    \      broadcast or NBMA link.\n   For details concerning the construction of\
    \ links-LSAs, see\n   Section 4.4.3.8.\n   A link-LSA's Link State ID is set equal\
    \ to the originating router's\n   Interface ID on the link.\n       0        \
    \           1                   2                   3\n       0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |           LS Age              |0|0|0|          8              |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                       Link State ID                           |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                     Advertising Router                        |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                     LS Sequence Number                        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |        LS Checksum            |            Length             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \ Rtr Priority  |                Options                        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                                                               |\n   \
    \   +-                                                             -+\n      |\
    \                                                               |\n      +-  \
    \              Link-local Interface Address                 -+\n      |      \
    \                                                         |\n      +-        \
    \                                                     -+\n      |            \
    \                                                   |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                         # prefixes                            |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \  PrefixLength | PrefixOptions |             0                 |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                        Address Prefix                         |\n   \
    \   |                             ...                               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                             ...                               |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \  PrefixLength | PrefixOptions |             0                 |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                        Address Prefix                         |\n   \
    \   |                             ...                               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                              Link-LSA Format\n   Rtr Priority\n      The Router\
    \ Priority of the interface attaching the originating\n      router to the link.\n\
    \   Options\n      The set of Options bits that the router would like set in the\n\
    \      network-LSA that will be originated by the Designated Router on\n     \
    \ broadcast or NBMA links.\n   Link-local Interface Address\n      The originating\
    \ router's link-local interface address on the link.\n   # prefixes\n      The\
    \ number of IPv6 address prefixes contained in the LSA.\n   The rest of the link-LSA\
    \ contains a list of IPv6 prefixes to be\n   associated with the link.\n   PrefixLength,\
    \ PrefixOptions, and Address Prefix\n      Representation of an IPv6 address prefix,\
    \ as described in\n      Appendix A.4.1.\n"
- title: A.4.10.  Intra-Area-Prefix-LSAs
  contents:
  - "A.4.10.  Intra-Area-Prefix-LSAs\n   Intra-area-prefix-LSAs have LS type equal\
    \ to 0x2009.  A router uses\n   intra-area-prefix-LSAs to advertise one or more\
    \ IPv6 address prefixes\n   that are associated with a local router address, an\
    \ attached stub\n   network segment, or an attached transit network segment. \
    \ In IPv4,\n   the first two were accomplished via the router's router-LSA and\
    \ the\n   last via a network-LSA.  In OSPF for IPv6, all addressing information\n\
    \   that was advertised in router-LSAs and network-LSAs has been removed\n   and\
    \ is now advertised in intra-area-prefix-LSAs.  For details\n   concerning the\
    \ construction of intra-area-prefix-LSA, see\n   Section 4.4.3.9.\n   A router\
    \ can originate multiple intra-area-prefix-LSAs for each\n   router or transit\
    \ network.  Each such LSA is distinguished by its\n   unique Link State ID.\n\
    \       0                   1                   2                   3\n      \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |           LS Age              |0|0|1|            9            |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                       Link State ID                           |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                    Advertising Router                         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                    LS Sequence Number                         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |        LS Checksum            |             Length            |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \         # Prefixes            |     Referenced LS Type        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                  Referenced Link State ID                     |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \               Referenced Advertising Router                   |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |  PrefixLength | PrefixOptions |          Metric               |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                       Address Prefix                          |\n      |   \
    \                          ...                               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                             ...                               |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \  PrefixLength | PrefixOptions |          Metric               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                       Address Prefix                          |\n   \
    \   |                             ...                               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                       Intra-Area-Prefix LSA Format\n   # prefixes\n      The\
    \ number of IPv6 address prefixes contained in the LSA.\n   Referenced LS Type,\
    \ Referenced Link State ID, and Referenced\n      Advertising Router\n      Identifies\
    \ the router-LSA or network-LSA with which the IPv6\n      address prefixes should\
    \ be associated.  If Referenced LS Type is\n      0x2001, the prefixes are associated\
    \ with a router-LSA, Referenced\n      Link State ID should be 0, and Referenced\
    \ Advertising Router\n      should be the originating router's Router ID.  If\
    \ Referenced LS\n      Type is 0x2002, the prefixes are associated with a network-LSA,\n\
    \      Referenced Link State ID should be the Interface ID of the link's\n   \
    \   Designated Router, and Referenced Advertising Router should be the\n     \
    \ Designated Router's Router ID.\n   The rest of the intra-area-prefix-LSA contains\
    \ a list of IPv6\n   prefixes to be associated with the router or transit link,\
    \ as well as\n   their associated costs.\n   PrefixLength, PrefixOptions, and\
    \ Address Prefix\n      Representation of an IPv6 address prefix, as described\
    \ in\n      Appendix A.4.1.\n   Metric\n      The cost of this prefix.  Expressed\
    \ in the same units as the\n      interface costs in router-LSAs.\n"
- title: Appendix B.  Architectural Constants
  contents:
  - "Appendix B.  Architectural Constants\n   Architectural constants for the OSPF\
    \ protocol are defined in Appendix\n   B of [OSPFV2].  The only difference for\
    \ OSPF for IPv6 is that\n   DefaultDestination is encoded as a prefix with length\
    \ 0 (see\n   Appendix A.4.1).\n"
- title: Appendix C.  Configurable Constants
  contents:
  - "Appendix C.  Configurable Constants\n   The OSPF protocol has quite a few configurable\
    \ parameters.  These\n   parameters are listed below.  They are grouped into general\n\
    \   functional categories (area parameters, interface parameters, etc.).\n   Sample\
    \ values are given for some of the parameters.\n   Some parameter settings need\
    \ to be consistent among groups of\n   routers.  For example, all routers in an\
    \ area must agree on that\n   area's parameters.  Similarly, all routers attached\
    \ to a network must\n   agree on that network's HelloInterval and RouterDeadInterval.\n\
    \   Some parameters may be determined by router algorithms outside of\n   this\
    \ specification (e.g., the address of a host connected to the\n   router via a\
    \ SLIP line).  From OSPF's point of view, these items are\n   still configurable.\n"
- title: C.1.  Global Parameters
  contents:
  - "C.1.  Global Parameters\n   In general, a separate copy of the OSPF protocol\
    \ is run for each\n   area.  Because of this, most configuration parameters are\
    \ defined on\n   a per-area basis.  The few global configuration parameters are\
    \ listed\n   below.\n   Router ID\n      This is a 32-bit number that uniquely\
    \ identifies the router in the\n      Autonomous System.  If a router's OSPF Router\
    \ ID is changed, the\n      router's OSPF software should be restarted before\
    \ the new Router\n      ID takes effect.  Before restarting due to a Router ID\
    \ change, the\n      router should flush its self-originated LSAs from the routing\n\
    \      domain (see Section 14.1 of [OSPFV2]).  Otherwise, they will\n      persist\
    \ for up to MaxAge seconds.\n   Because the size of the Router ID is smaller than\
    \ an IPv6 address, it\n   cannot be set to one of the router's IPv6 addresses\
    \ (as is commonly\n   done for IPv4).  Possible Router ID assignment procedures\
    \ for IPv6\n   include: a) assign the IPv6 Router ID as one of the router's IPv4\n\
    \   addresses or b) assign IPv6 Router IDs through some local\n   administrative\
    \ procedure (similar to procedures used by manufacturers\n   to assign product\
    \ serial numbers).\n   The Router ID of 0.0.0.0 is reserved and SHOULD NOT be\
    \ used.\n"
- title: C.2.  Area Parameters
  contents:
  - "C.2.  Area Parameters\n   All routers belonging to an area must agree on that\
    \ area's\n   configuration.  Disagreements between two routers will lead to an\n\
    \   inability for adjacencies to form between them, with a resulting\n   hindrance\
    \ to the flow of both routing protocol information and data\n   traffic.  The\
    \ following items must be configured for an area:\n   Area ID\n      This is a\
    \ 32-bit number that identifies the area.  The Area ID of\n      0 is reserved\
    \ for the backbone.\n   List of address ranges\n      Address ranges control the\
    \ advertisement of routes across area\n      boundaries.  Each address range consists\
    \ of the following items:\n      [IPv6 prefix, prefix length]\n         Describes\
    \ the collection of IPv6 addresses contained in the\n         address range.\n\
    \      Status\n         Set to either Advertise or DoNotAdvertise.  Routing information\n\
    \         is condensed at area boundaries.  External to the area, at most\n  \
    \       a single route is advertised (via a inter-area-prefix-LSA) for\n     \
    \    each address range.  The route is advertised if and only if the\n       \
    \  address range's Status is set to Advertise.  Unadvertised\n         ranges\
    \ allow the existence of certain networks to be\n         intentionally hidden\
    \ from other areas.  Status is set to\n         Advertise by default.\n   ExternalRoutingCapability\n\
    \      Whether AS-external-LSAs will be flooded into/throughout the area.\n  \
    \    If AS-external-LSAs are excluded from the area, the area is called\n    \
    \  a stub area or NSSA.  Internal to stub areas, routing to external\n      destinations\
    \ will be based solely on a default inter-area route.\n      The backbone cannot\
    \ be configured as a stub or NSSA area.  Also,\n      virtual links cannot be\
    \ configured through stub or NSSA areas.\n      For more information, see Section\
    \ 3.6 of [OSPFV2] and [NSSA].\n   StubDefaultCost\n      If the area has been\
    \ configured as a stub area, and the router\n      itself is an area border router,\
    \ then the StubDefaultCost\n      indicates the cost of the default inter-area-prefix-LSA\
    \ that the\n      router should advertise into the area.  See Section 12.4.3.1\
    \ of\n      [OSPFV2] for more information.\n   NSSATranslatorRole and TranslatorStabilityInterval\n\
    \      These area parameters are described in Appendix D of [NSSA].\n      Additionally,\
    \ an NSSA Area Border Router (ABR) is also required to\n      allow configuration\
    \ of whether or not an NSSA default route is\n      advertised in an NSSA-LSA.\
    \  If advertised, its metric and metric\n      type are configurable.  These requirements\
    \ are also described in\n      Appendix D of [NSSA].\n   ImportSummaries\n   \
    \   When set to enabled, prefixes external to the area are imported\n      into\
    \ the area via the advertisement of inter-area-prefix-LSAs.\n      When set to\
    \ disabled, inter-area routes are not imported into the\n      area.  The default\
    \ setting is enabled.  This parameter is only\n      valid for stub or NSSA areas.\n"
- title: C.3.  Router Interface Parameters
  contents:
  - "C.3.  Router Interface Parameters\n   Some of the configurable router interface\
    \ parameters (such as Area\n   ID, HelloInterval, and RouterDeadInterval) actually\
    \ imply properties\n   of the attached links.  Therefore, these parameters must\
    \ be\n   consistent across all the routers attached to that link.  The\n   parameters\
    \ that must be configured for a router interface are:\n   IPv6 link-local address\n\
    \      The IPv6 link-local address associated with this interface.  May\n    \
    \  be learned through auto-configuration.\n   Area ID\n      The OSPF area to\
    \ which the attached link belongs.\n   Instance ID\n      The OSPF protocol instance\
    \ associated with this OSPF interface.\n      Defaults to 0.\n   Interface ID\n\
    \      32-bit number uniquely identifying this interface among the\n      collection\
    \ of this router's interfaces.  For example, in some\n      implementations it\
    \ may be possible to use the MIB-II IfIndex\n      ([INTFMIB]).\n   IPv6 prefixes\n\
    \      The list of IPv6 prefixes to associate with the link.  These will\n   \
    \   be advertised in intra-area-prefix-LSAs.\n   Interface output cost(s)\n  \
    \    The cost of sending a packet on the interface, expressed in the\n      link-state\
    \ metric.  This is advertised as the link cost for this\n      interface in the\
    \ router's router-LSA.  The interface output cost\n      MUST always be greater\
    \ than 0.\n   RxmtInterval\n      The number of seconds between LSA retransmissions\
    \ for adjacencies\n      belonging to this interface.  Also used when retransmitting\n\
    \      Database Description and Link State Request packets.  This should\n   \
    \   be well over the expected round-trip delay between any two routers\n     \
    \ on the attached link.  The setting of this value should be\n      conservative\
    \ or needless retransmissions will result.  Sample\n      value for a local area\
    \ network: 5 seconds.\n   InfTransDelay\n      The estimated number of seconds\
    \ it takes to transmit a Link State\n      Update packet over this interface.\
    \  LSAs contained in the update\n      packet must have their age incremented\
    \ by this amount before\n      transmission.  This value should take into account\
    \ the\n      transmission and propagation delays of the interface.  It MUST be\n\
    \      greater than 0.  Sample value for a local area network: 1 second.\n   Router\
    \ Priority\n      An 8-bit unsigned integer.  When two routers attached to a network\n\
    \      both attempt to become the Designated Router, the one with the\n      highest\
    \ Router Priority takes precedence.  If there is still a\n      tie, the router\
    \ with the highest Router ID takes precedence.  A\n      router whose Router Priority\
    \ is set to 0 is ineligible to become\n      the Designated Router on the attached\
    \ link.  Router Priority is\n      only configured for interfaces to broadcast\
    \ and NBMA networks.\n   HelloInterval\n      The length of time, in seconds,\
    \ between Hello packets that the\n      router sends on the interface.  This value\
    \ is advertised in the\n      router's Hello packets.  It MUST be the same for\
    \ all routers\n      attached to a common link.  The smaller the HelloInterval,\
    \ the\n      faster topological changes will be detected.  However, more OSPF\n\
    \      routing protocol traffic will ensue.  Sample value for a X.25 PDN:\n  \
    \    30 seconds.  Sample value for a local area network (LAN): 10\n      seconds.\n\
    \   RouterDeadInterval\n      After ceasing to hear a router's Hello packets,\
    \ the number of\n      seconds before its neighbors declare the router down. \
    \ This is\n      also advertised in the router's Hello packets in their\n    \
    \  RouterDeadInterval field.  This should be some multiple of the\n      HelloInterval\
    \ (e.g., 4).  This value again MUST be the same for\n      all routers attached\
    \ to a common link.\n   LinkLSASuppression\n      Indicates whether or not origination\
    \ of a link-LSA is suppressed.\n      If set to \"enabled\" and the interface\
    \ type is not broadcast or\n      NBMA, the router will not originate a link-LSA\
    \ for the link.  This\n      implies that other routers on the link will ascertain\
    \ the router's\n      next-hop address using a mechanism other than the link-LSA\
    \ (see\n      Section 4.8.2).  The default value is \"disabled\" for interface\n\
    \      types described in this specification.  It is implicitly\n      \"disabled\"\
    \ if the interface type is broadcast or NBMA.  Future\n      interface types MAY\
    \ specify a different default.\n"
- title: C.4.  Virtual Link Parameters
  contents:
  - "C.4.  Virtual Link Parameters\n   Virtual links are used to restore/increase\
    \ connectivity of the\n   backbone.  Virtual links may be configured between any\
    \ pair of area\n   border routers having interfaces to a common (non-backbone)\
    \ area.\n   The virtual link appears as a point-to-point link with no global IPv6\n\
    \   addresses in the graph for the backbone.  The virtual link must be\n   configured\
    \ in both of the area border routers.\n   A virtual link appears in router-LSAs\
    \ (for the backbone) as if it\n   were a separate router interface to the backbone.\
    \  As such, it has\n   most of the parameters associated with a router interface\
    \ (see\n   Appendix C.3).  Virtual links do not have link-local addresses, but\n\
    \   instead use one of the router's global-scope IPv6 addresses as the IP\n  \
    \ source in OSPF protocol packets it sends on the virtual link.  Router\n   Priority\
    \ is not used on virtual links.  Interface output cost is not\n   configured on\
    \ virtual links, but is dynamically set to be the cost of\n   the transit area\
    \ intra-area path between the two endpoint routers.\n   The parameter RxmtInterval\
    \ may be configured and should be well over\n   the expected round-trip delay\
    \ between the two routers.  This may be\n   hard to estimate for a virtual link;\
    \ it is better to err on the side\n   of making it too long.\n   A virtual link\
    \ is defined by the following two configurable\n   parameters: the Router ID of\
    \ the virtual link's other endpoint and\n   the (non-backbone) area that the virtual\
    \ link traverses (referred to\n   as the virtual link's transit area).  Virtual\
    \ links cannot be\n   configured through stub or NSSA areas.  Additionally, an\
    \ Instance ID\n   may be configured for virtual links from different protocol\
    \ instances\n   in order to utilize the same transit area (without requiring\n\
    \   different Router IDs for demultiplexing).\n"
- title: C.5.  NBMA Network Parameters
  contents:
  - "C.5.  NBMA Network Parameters\n   OSPF treats an NBMA network much like it treats\
    \ a broadcast network.\n   Since there may be many routers attached to the network,\
    \ a Designated\n   Router is selected for the network.  This Designated Router\
    \ then\n   originates a network-LSA listing all routers attached to the NBMA\n\
    \   network.\n   However, due to the lack of broadcast capabilities, it may be\n\
    \   necessary to use configuration parameters in the Designated Router\n   selection.\
    \  These parameters will only need to be configured in those\n   routers that\
    \ are themselves eligible to become the Designated Router\n   (i.e., those routers\
    \ whose Router Priority for the network is non-\n   zero), and then only if no\
    \ automatic procedure for discovering\n   neighbors exists:\n   List of all other\
    \ attached routers\n      The list of all other routers attached to the NBMA network.\
    \  Each\n      router is configured with its Router ID and IPv6 link-local\n \
    \     address on the network.  Also, for each router listed, that\n      router's\
    \ eligibility to become the Designated Router must be\n      defined.  When an\
    \ interface to an NBMA network first comes up, the\n      router only sends Hello\
    \ packets to those neighbors eligible to\n      become the Designated Router until\
    \ such time that a Designated\n      Router is elected.\n   PollInterval\n   \
    \   If a neighboring router has become inactive (Hello packets have\n      not\
    \ been seen for RouterDeadInterval seconds), it may still be\n      necessary\
    \ to send Hello packets to the dead neighbor.  These Hello\n      packets will\
    \ be sent at the reduced rate PollInterval, which\n      should be much larger\
    \ than HelloInterval.  Sample value for a PDN\n      X.25 network: 2 minutes.\n"
- title: C.6.  Point-to-Multipoint Network Parameters
  contents:
  - "C.6.  Point-to-Multipoint Network Parameters\n   On point-to-multipoint networks,\
    \ it may be necessary to configure the\n   set of neighbors that are directly\
    \ reachable over the point-to-\n   multipoint network.  Each neighbor is configured\
    \ with its Router ID\n   and IPv6 link-local address on the network.  Designated\
    \ Routers are\n   not elected on point-to-multipoint networks, so the Designated\
    \ Router\n   eligibility of configured neighbors is not defined.\n"
- title: C.7.  Host Route Parameters
  contents:
  - "C.7.  Host Route Parameters\n   Host prefixes are advertised in intra-area-prefix-LSAs.\
    \  They\n   indicate either local router addresses, router interfaces to point-\n\
    \   to-point networks, looped router interfaces, or IPv6 hosts that are\n   directly\
    \ connected to the router (e.g., via a PPP connection).  For\n   each host directly\
    \ connected to the router, the following items must\n   be configured:\n   Host\
    \ IPv6 prefix\n      An IPv6 prefix belonging to the directly connected host.\
    \  This\n      must not be a valid IPv6 global prefix.\n   Cost of link to host\n\
    \      The cost of sending a packet to the host, in terms of the link-\n     \
    \ state metric.  However, since the host probably has only a single\n      connection\
    \ to the Internet, the actual configured cost(s) in many\n      cases is unimportant\
    \ (i.e., will have no effect on routing).\n   Area ID\n      The OSPF area to\
    \ which the host's prefix belongs.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Rob Coltun\n   Acoustra Productions\n   3204 Brooklawn\
    \ Terrace\n   Chevy Chase, MD  20815\n   USA\n   Dennis Ferguson\n   Juniper Networks\n\
    \   1194 N. Mathilda Avenue\n   Sunnyvale, CA  94089\n   USA\n   EMail: dennis@juniper.net\n\
    \   John Moy\n   Sycamore Networks, Inc\n   10 Elizabeth Drive\n   Chelmsford,\
    \ MA  01824\n   USA\n   EMail: jmoy@sycamorenet.com\n   Acee Lindem (editor)\n\
    \   Redback Networks\n   102 Carric Bend Court\n   Cary, NC  27519\n   USA\n \
    \  EMail: acee@redback.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
