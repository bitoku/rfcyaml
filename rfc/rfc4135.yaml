- title: __initial_text__
  contents:
  - '             Goals of Detecting Network Attachment in IPv6

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   When a host establishes a new link-layer connection, it may or may\n\
    \   not have a valid IP configuration for Internet connectivity.  The\n   host\
    \ may check for link change (i.e., determine whether a link change\n   has occurred),\
    \ and then, based on the result, it can automatically\n   decide whether its IP\
    \ configuration is still valid.  During link\n   identity detection, the host\
    \ may also collect necessary information\n   to initiate a new IP configuration\
    \ if the IP subnet has changed.  In\n   this memo, this procedure is called Detecting\
    \ Network Attachment\n   (DNA).  DNA schemes should be precise, sufficiently fast,\
    \ secure, and\n   of limited signaling.\n"
- title: Table of Contents
  contents:
  - 'Table of Contents

    '
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   When a host has established a new link-layer connection,\
    \ it can send\n   and receive some IPv6 packets on the link, including those used\
    \ for\n   configuration.  On the other hand, the host has Internet connectivity\n\
    \   only when it is able to exchange packets with off-link destinations.\n   When\
    \ a link-layer connection is established or re-established, the\n   host may not\
    \ know whether its existing IP configuration is still\n   valid for Internet connectivity.\
    \  A subnet change might have occurred\n   when the host changed its point of\
    \ attachment.\n   In practice, the host doesn't know which of its addresses are\
    \ valid\n   on the newly attached link.  It also doesn't know whether its\n  \
    \ existing default router is on this link or whether its neighbor cache\n   entries\
    \ are valid.  Correct configuration of each of these components\n   is necessary\
    \ in order to send packets on and off the link.\n   To examine the status of the\
    \ existing configuration, a host may check\n   whether a 'link change' has occurred.\
    \  In this document, the term\n   'link' is as defined in RFC 2461 [1].  The notion\
    \ 'link' is not\n   identical with the notion 'subnet', as defined in RFC 3753\
    \ [2].  For\n   example, there may be more than one subnet on a link, and a host\n\
    \   connected to a link may be part of one or more of the subnets on the\n   link.\n\
    \   Today, a link change necessitates an IP configuration change.\n   Whenever\
    \ a host detects that it has remained at the same link, it can\n   usually assume\
    \ its IP configuration is still valid.  Otherwise, the\n   existing one is no\
    \ longer valid, and a new configuration must be\n   acquired.  Therefore, to examine\
    \ the validity of an IP configuration,\n   all that is required is that the host\
    \ checks for link change.\n   In the process of checking for link change, a host\
    \ may collect some\n   of the necessary information for a new IP configuration,\
    \ such as on-\n   link prefixes.  So, when an IP subnet change has occurred, the\
    \ host\n   can immediately initiate the process of getting a new IP\n   configuration.\
    \  This may reduce handoff delay and minimize signaling.\n   Rapid attachment\
    \ detection is required for a device that changes\n   subnet while having on-going\
    \ sessions.  This may be the case if a\n   host is connected intermittently, is\
    \ a mobile node, or has urgent\n   data to transmit upon attachment to a link.\n\
    \   Detecting Network Attachment (DNA) is the process by which a host\n   collects\
    \ the appropriate information and detects the identity of its\n   currently attached\
    \ link to ascertain the validity of its IP\n   configuration.\n   DNA schemes\
    \ are typically run per interface.  When a host has\n   multiple interfaces, the\
    \ host separately checks for link changes on\n   each interface.\n   It is important\
    \ to note that DNA process does not include the actual\n   IP configuration procedure.\
    \  For example, with respect to DHCP, the\n   DNA process may determine that the\
    \ host needs to get some\n   configuration information from a DHCP server.  However,\
    \ the process\n   of actually retrieving the information from a DHCP server falls\n\
    \   beyond the scope of DNA.\n   This document considers the DNA procedure only\
    \ from the IPv6 point of\n   view, unless explicitly mentioned otherwise.  Thus,\
    \ the term \"IP\" is\n   to be understood to denote IPv6, by default.  For the\
    \ IPv4 case,\n   refer to [7].\n"
- title: 2.  Problems in Detecting Network Attachment
  contents:
  - "2.  Problems in Detecting Network Attachment\n   A number of issues make DNA\
    \ complicated.  First, wireless\n   connectivity is not as clear-cut as wired\
    \ connectivity.  Second, it's\n   difficult for a single Router Advertisement\
    \ (RA) message to indicate\n   a link change.  Third, the current Router Discovery\
    \ specification\n   specifies that routers wait a random delay of 0-.5 seconds\
    \ prior to\n   responding with a solicited RA.  This delay can be significant\
    \ and\n   may result in service disruption.\n"
- title: 2.1.  Wireless Link Properties
  contents:
  - "2.1.  Wireless Link Properties\n   Unlike in wired environments, what constitutes\
    \ a wireless link is\n   variable both in time and space.  Wireless links do not\
    \ have clear\n   boundaries.  This may be illustrated by the fact that a host\
    \ may be\n   within the coverage area of multiple (802.11) access points at the\n\
    \   same time.  Moreover, connectivity on a wireless link can be very\n   volatile,\
    \ which may make link identity detection hard.  For example,\n   it takes time\
    \ for a host to check for link change.  If the host\n   ping-pongs between two\
    \ links and doesn't stay long enough at a given\n   link, it can't complete the\
    \ DNA procedure.\n"
- title: 2.2.  Link Identity Detection with a Single RA
  contents:
  - "2.2.  Link Identity Detection with a Single RA\n   Usually, a host gets the information\
    \ necessary for IP configuration\n   from RA messages.  Based on the current definition\
    \ [1], it's\n   difficult for a host to check for link change upon receipt of\
    \ a\n   single RA.\n   To detect link identity, a host may compare the information\
    \ in an RA,\n   such as router address or prefixes, with the locally stored\n\
    \   information.\n   The host may use received router addresses to check for link\
    \ change.\n   The router address in the source address field of an RA is of link-\n\
    \   local scope, however, so its uniqueness is not guaranteed outside a\n   link.\
    \  If it happens that two different router interfaces on\n   different links have\
    \ the same link-local address, the host can't\n   detect that it has moved from\
    \ one link to another by checking the\n   router address in RA messages.\n   The\
    \ set of all global prefixes assigned to a link can represent link\n   identity.\
    \  The host may compare the prefixes in an incoming RA with\n   the currently\
    \ stored ones.  An unsolicited RA message, however, can\n   omit some prefixes\
    \ for convenience [1], and it's not easy for a host\n   to attain and retain all\
    \ the prefixes on a link with certainty.\n   Therefore, neither the absence of\
    \ a previously known prefix nor the\n   presence of a previously unknown prefix\
    \ in the RA guarantees that a\n   link change has occurred.\n"
- title: 2.3.  Delays
  contents:
  - "2.3.  Delays\n   The following issues cause DNA delay that may result in communication\n\
    \   disruption.\n   1) Delay for receiving a hint\n   A hint is an indication\
    \ that a link change might have occurred.  This\n   hint itself doesn't confirm\
    \ a link change, but initiates appropriate\n   DNA procedures to detect the identity\
    \ of the currently attached link.\n   Hints come in various forms and differ in\
    \ how they indicate a\n   possible link change.  They can be link-layer event\
    \ notifications\n   [6], the lack of RA from the default router, or the receipt\
    \ of a new\n   RA.  The time taken to receive a hint also varies.\n   As soon\
    \ as a new link-layer connection has been made, the link layer\n   may send a\
    \ link-up notification to the IP layer.  A host may\n   interpret the new link-layer\
    \ connection as a hint for a possible link\n   change.  With link-layer support,\
    \ a host can receive such a hint\n   almost instantly.\n   Mobile IPv6 [4] defines\
    \ the use of RA Interval Timer expiry for a\n   hint.  A host keeps monitoring\
    \ for periodic RAs and interprets the\n   lack of them as a hint.  It may implement\
    \ its own policy to determine\n   the number of missing RAs needed to interpret\
    \ that as a hint.  Thus,\n   the delay depends on the Router Advertisement interval.\n\
    \   Without schemes such as those above, a host must receive a new RA\n   from\
    \ a new router to detect a possible link change.  The detection\n   time then\
    \ also depends on the Router Advertisement frequency.\n   Periodic RA beaconing\
    \ transmits packets within an interval varying\n   randomly between MinRtrAdvInterval\
    \ to MaxRtrAdvInterval seconds.\n   Because a network attachment is unrelated\
    \ to the advertisement time\n   on the new link, hosts are expected to arrive,\
    \ on average, halfway\n   through the interval.  This is approximately 1.75 seconds\
    \ with\n   Neighbor Discovery [1] advertisement rates.\n   2) Random delay execution\
    \ for RS/RA exchange\n   Router Solicitation and Router Advertisement messages\
    \ are used for\n   Router Discovery.  According to [1], it is sometimes necessary\
    \ for a\n   host to wait a random amount of time before it may send an RS, and\n\
    \   for a router to wait before it may reply with an RA.\n   According to RFC\
    \ 2461 [1], the following apply:\n   -  Before a host sends an initial solicitation,\
    \ it SHOULD delay the\n      transmission for a random amount of time between\
    \ 0 and\n      MAX_RTR_SOLICITATION_DELAY (1 second).\n   -  Furthermore, any\
    \ RA sent in response to a Router Solicitation MUST\n      be delayed by a random\
    \ time between 0 and MAX_RA_DELAY_TIME (0.5\n      seconds).\n"
- title: 3.  Goals for Detecting Network Attachment
  contents:
  - "3.  Goals for Detecting Network Attachment\n   The DNA working group has been\
    \ chartered to define an improved scheme\n   for detecting IPv6 network attachment.\
    \  In this section, we define\n   the goals that any such solution should aim\
    \ to fulfill.\n   DNA solutions should correctly determine whether a link change\
    \ has\n   occurred.  Additionally, they should be sufficiently fast so that\n\
    \   there would be no or at most minimal service disruption.  They should\n  \
    \ neither flood the link with related signaling nor introduce new\n   security\
    \ holes.\n   When defining new solutions, it is necessary to investigate the usage\n\
    \   of available tools, Neighbor Solicitation/Neighbor Advertisement\n   messages,\
    \ RS/RA messages, link-layer event notifications [6], and\n   other features.\
    \  This will allow precise description of procedures\n   for efficient DNA Schemes.\n"
- title: 3.1.  Goals List
  contents:
  - "3.1.  Goals List\n   G1  DNA schemes should detect the identity of the currently\
    \ attached\n       link to ascertain the validity of the existing IP configuration.\n\
    \       They should recognize and determine whether a link change has\n      \
    \ occurred and initiate the process of acquiring a new\n       configuration if\
    \ necessary.\n   G2  DNA schemes should detect the identity of an attached link\
    \ with\n       minimal latency lest there should be service disruption.\n   G3\
    \  If a host has not changed a link, DNA schemes should not falsely\n       assume\
    \ a link change, and an IP configuration change should not\n       occur.\n  \
    \ G4  DNA schemes should not cause undue signaling on a link.\n   G5  DNA schemes\
    \ should make use of existing signaling mechanisms\n       where available.\n\
    \   G6  DNA schemes should make use of signaling within the link\n       (particularly\
    \ link-local scope messages), because communication\n       off-link may not be\
    \ achievable in the case of a link change.\n   G7  DNA schemes should be compatible\
    \ with security schemes such as\n       Secure Neighbor Discovery [3].\n   G8\
    \  DNA schemes should not introduce new security vulnerabilities.\n       The\
    \ node supporting DNA schemes should not expose itself or other\n       nodes\
    \ on a link to additional man-in-the-middle, identity-\n       revealing, or denial-of-service\
    \ attacks.\n   G9  Nodes (such as routers or hosts) that support DNA schemes should\n\
    \       work appropriately with unmodified nodes that do not.\n   G10 Hosts, especially\
    \ in wireless environments, may perceive routers\n       reachable on different\
    \ links.  DNA schemes should take into\n       consideration the case where a\
    \ host is attached to more than one\n       link at the same time.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   The DNA process is intimately related to the\
    \ Neighbor Discovery\n   protocol [1] and its trust model and threats have much\
    \ in common with\n   those presented in RFC 3756 [5].  Nodes connected over wireless\n\
    \   interfaces may be particularly susceptible to jamming, monitoring,\n   and\
    \ packet-insertion attacks.\n   With unsecured DNA schemes, it is inadvisable\
    \ for a host to adjust\n   its security based on which network it believes it\
    \ is attached to.\n   For example, it would be inappropriate for a host to disable\
    \ its\n   personal firewall because it believed that it had connected to a home\n\
    \   network.\n   Even in the case where authoritative information (routing and\
    \ prefix\n   state) are advertised, wireless network attackers may still prevent\n\
    \   soliciting nodes from receiving packets.  This may cause unnecessary\n   IP\
    \ configuration change in some devices.  Such attacks may be used to\n   make\
    \ a host preferentially select a particular configuration or\n   network access.\n\
    \   Devices receiving confirmations of reachability (for example, from\n   upper-layer\
    \ protocols) should be aware that unless these indications\n   are sufficiently\
    \ authenticated, reachability may falsely be asserted\n   by an attacker.  Similarly,\
    \ even if such reachability tests are known\n   to originate from a trusted source,\
    \ they should be ignored for\n   reachability confirmation if the packets are\
    \ not fresh or have been\n   replayed.  This may reduce the effective window for\
    \ attackers\n   replaying otherwise authentic data.\n   It may be dangerous to\
    \ receive link-change notifications from the\n   link layer and network layer,\
    \ if they are received from devices that\n   are insufficiently authenticated.\
    \  In particular, notifications that\n   authentication has completed at the link\
    \ layer may not imply that a\n   security relationship is available at the network\
    \ layer.  Additional\n   authentication may be required at the network layer to\
    \ justify\n   modification of IP configuration.\n"
- title: 5.  Acknowledgements
  contents:
  - "5.  Acknowledgements\n   Erik Nordmark has contributed significantly to work\
    \ predating this\n   document.  Also Ed Remmell's comments on the inconsistency\
    \ of RA\n   information were most illuminating.  The authors wish to express our\n\
    \   appreciation to Pekka Nikander for valuable feedback.  We gratefully\n   acknowledge\
    \ the generous assistance we received from Shubhranshu\n   Singh for clarifying\
    \ the structure of the arguments.  Thanks to Brett\n   Pentland, Nick Moore, Youn-Hee\
    \ Han, JaeHoon Kim, Alper Yegin, Jim\n   Bound, and Jari Arkko for their contributions\
    \ to this document.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [1]  Narten, T., Nordmark, E., and W. Simpson,\
    \ \"Neighbor Discovery\n        for IP Version 6 (IPv6)\", RFC 2461, December\
    \ 1998.\n   [2]  Manner, J. and M. Kojo, \"Mobility Related Terminology\", RFC\n\
    \        3753, June 2004.\n   [3]  Arkko, J., Kempf, J., Zill, B., and P. Nikander,\
    \ \"SEcure\n        Neighbor Discovery (SEND)\", RFC 3971, March 2005.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [4]  Johnson, D., Perkins, C., and J. Arkko,\
    \ \"Mobility Support in\n        IPv6\", RFC 3775, June 2004.\n   [5]  Nikander,\
    \ P., Kempf, J., and E. Nordmark, \"IPv6 Neighbor\n        Discovery (ND) Trust\
    \ Models and Threats\", RFC 3756, May 2004.\n   [6]  Yegin, A., \"Link-layer Event\
    \ Notifications for Detecting Network\n        Attachments\", work in progress,\
    \ July 2005.\n   [7]  Aboba, B., \"Detecting Network Attachment (DNA) in IPv4\"\
    , work in\n        progress, June 2005.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   JinHyeock Choi\n   Samsung AIT\n   Communication & N/W\
    \ Lab\n   P.O.Box 111 Suwon 440-600\n   KOREA\n   Phone: +82 31 280 9233\n   EMail:\
    \ jinchoe@samsung.com\n   Greg Daley\n   CTIE Monash University\n   Centre for\
    \ Telecommunications and Information Engineering\n   Monash University\n   Clayton\
    \ 3800 Victoria\n   Australia\n   Phone: +61 3 9905 4655\n   EMail: greg.daley@eng.monash.edu.au\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
