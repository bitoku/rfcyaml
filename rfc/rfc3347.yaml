- title: __initial_text__
  contents:
  - "  Small Computer Systems Interface protocol over the Internet (iSCSI)\n     \
    \           Requirements and Design Considerations\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2002).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies the requirements iSCSI and its related\n\
    \   infrastructure should satisfy and the design considerations guiding\n   the\
    \ iSCSI protocol development efforts.  In the interest of timely\n   adoption\
    \ of the iSCSI protocol, the IPS group has chosen to focus the\n   first version\
    \ of the protocol to work with the existing SCSI\n   architecture and commands,\
    \ and the existing TCP/IP transport layer.\n   Both these protocols are widely-deployed\
    \ and well-understood.  The\n   thought is that using these mature protocols will\
    \ entail a minimum of\n   new invention, the most rapid possible adoption, and\
    \ the greatest\n   compatibility with Internet architecture, protocols, and equipment.\n"
- title: Conventions used in this document
  contents:
  - "Conventions used in this document\n   This document describes the requirements\
    \ for a protocol design, but\n   does not define a protocol standard.  Nevertheless,\
    \ the key words\n   \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\"\
    , \"SHOULD\",\n   \"SHOULD NOT\", \"RECOMMENDED\",  \"MAY\", and \"OPTIONAL\"\
    \ in this document\n   are to be interpreted as described in RFC-2119 [2].\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.   Introduction.................................................2\n\
    \   2.   Summary of Requirements......................................3\n   3.\
    \   iSCSI Design Considerations..................................7\n   3.1. General\
    \ Discussion...........................................7\n   3.2. Performance/Cost.............................................9\n\
    \   3.3. Framing.....................................................11\n   3.4.\
    \ High bandwidth, bandwidth aggregation.......................13\n   4.   Ease\
    \ of implementation/complexity of protocol...............14\n   5.   Reliability\
    \ and Availability................................15\n   5.1. Detection of Data\
    \ Corruption................................15\n   5.2. Recovery....................................................15\n\
    \   6.   Interoperability............................................16\n   6.1.\
    \ Internet infrastructure.....................................16\n   6.2. SCSI........................................................16\n\
    \   7.   Security Considerations.....................................18\n   7.1.\
    \ Extensible Security.........................................18\n   7.2. Authentication..............................................18\n\
    \   7.3. Data Integrity..............................................19\n   7.4.\
    \ Data Confidentiality........................................19\n   8.   Management..................................................19\n\
    \   8.1. Naming......................................................20\n   8.2.\
    \ Discovery...................................................21\n   9.   Internet\
    \ Accessibility......................................21\n   9.1. Denial of Service...........................................21\n\
    \   9.2. NATs, Firewalls and Proxy servers...........................22\n   9.3.\
    \ Congestion Control and Transport Selection..................22\n   10.  Definitions.................................................22\n\
    \   11.  References..................................................23\n   12.\
    \  Acknowledgements............................................24\n   13.  Author's\
    \ Addresses..........................................25\n   14.  Full Copyright\
    \ Statement....................................26\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   The IP Storage Working group is chartered with developing\n\
    \   comprehensive technology to transport block storage data over IP\n   protocols.\
    \  This effort includes a protocol to transport the Small\n   Computer Systems\
    \ Interface (SCSI) protocol over the Internet (iSCSI).\n   The initial version\
    \ of the iSCSI protocol will define a mapping of\n   SCSI transport protocol over\
    \ TCP/IP so that SCSI storage controllers\n   (principally disk and tape arrays\
    \ and libraries) can be attached to\n   IP networks, notably Gigabit Ethernet\
    \ (GbE) and 10 Gigabit Ethernet\n   (10 GbE).\n   The iSCSI protocol is a mapping\
    \ of SCSI to TCP, and constitutes a\n   \"SCSI transport\" as defined by the ANSI\
    \ T10 document SCSI SAM-2\n   document [SAM2, p. 3, \"Transport Protocols\"].\n"
- title: 2. Summary of Requirements
  contents:
  - "2. Summary of Requirements\n   The iSCSI standard:\n   From section 3.2 Performance/Cost:\n\
    \      MUST allow implementations to equal or improve on the current\n      state\
    \ of the art for SCSI interconnects.\n      MUST enable cost competitive implementations.\n\
    \      SHOULD minimize control overhead to enable low delay\n      communications.\n\
    \      MUST provide high bandwidth and bandwidth aggregation.\n      MUST have\
    \ low host CPU utilizations, equal to or better than\n      current technology.\n\
    \      MUST be possible to build I/O adapters that handle the entire SCSI\n  \
    \    task.\n      SHOULD permit direct data placement architectures.\n      MUST\
    \ NOT impose complex operations on host software.\n      MUST provide for full\
    \ utilization of available link bandwidth.\n      MUST allow an implementation\
    \ to exploit parallelism (multiple\n      connections) at the device interfaces\
    \ and within the interconnect\n      fabric.\n   From section 3.4 High Bandwidth/Bandwidth\
    \ Aggregation:\n      MUST operate over a single TCP connection.\n      SHOULD\
    \ support 'connection binding', and it MUST be optional to\n      implement.\n\
    \   From section 4 Ease of Implementation/Complexity of Protocol:\n      SHOULD\
    \ keep the protocol simple.\n      SHOULD minimize optional features.\n      MUST\
    \ specify feature negotiation at session establishment (login).\n      MUST operate\
    \ correctly when no optional features are negotiated as\n      well as when individual\
    \ option negotions are unsuccessful.\n   From section 5.1 Detection of Data Corruption:\n\
    \      MUST support a data integrity check format for use in digest\n      generation.\n\
    \      MAY use separate digest for data and headers.\n      iSCSI header format\
    \ SHOULD be extensible to include other data\n      integrity digest calculation\
    \ methods.\n   From section 5.2 Recovery:\n      MUST specify mechanisms to recover\
    \ in a timely fashion from\n      failures on the initiator, target, or connecting\
    \ infrastructure.\n      MUST specify recovery methods for non-idempotent requests.\n\
    \      SHOULD take into account fail-over schemes for mirrored targets or\n  \
    \    highly available storage configurations.\n      SHOULD provide a method for\
    \ sessions to be gracefully terminated\n      and restarted that can be initiated\
    \ by either the initiator or\n      target.\n   From section 6 Interoperability:\n\
    \      iSCSI protocol document MUST be clear and unambiguous.\n   From section\
    \ 6.1 Internet Infrastructure:\n      MUST:\n      -- be compatible with both\
    \ IPv4 and IPv6\n      -- use TCP connections conservatively, keeping in mind\
    \ there may\n         be many other users of TCP on a given machine.\n      MUST\
    \ NOT require changes to existing Internet protocols.\n      SHOULD minimize required\
    \ changes to existing TCP/IP\n      implementations.\n      MUST be designed to\
    \ allow future substitution of SCTP (for TCP) as\n      an IP transport protocol\
    \ with minimal changes to iSCSI protocol\n      operation, protocol data unit\
    \ (PDU) structures and formats.\n   From section 6.2 SCSI:\n      Any feature\
    \ SAM2 requires in a valid transport mapping MUST be\n      specified by iSCSI.\n\
    \      MUST specify strictly ordered delivery of SCSI commands over an\n     \
    \ iSCSI session between an initiator/target pair.\n      The command ordering\
    \ mechanism SHOULD seek to minimize the amount\n      of communication necessary\
    \ across multiple adapters doing\n      transport off-load.\n      MUST specify\
    \ for each feature whether it is OPTIONAL, RECOMMENDED\n      or REQUIRED to implement\
    \ and/or use.\n      MUST NOT require changes to the SCSI-3 command sets and SCSI\n\
    \      client code except except where SCSI specifications point to\n      \"\
    transport dependent\" fields and behavior.\n      SHOULD track changes to SCSI\
    \ and the SCSI Architecture Model.\n      MUST be capable of supporting all SCSI-3\
    \ command sets and device\n      types.\n      SHOULD support ACA implementation.\n\
    \      MUST allow for the construction of gateways to other SCSI\n      transports\n\
    \      MUST reliably transport SCSI commands from the initiator to the\n     \
    \ target.\n      MUST correctly deal with iSCSI packet drop, duplication,\n  \
    \    corruption, stale packets, and re-ordering.\n   From section 7.1 Extensible\
    \ Security:\n      SHOULD require minimal configuration and overhead in the insecure\n\
    \      operation.\n      MUST provide for strong authentication when increased\
    \ security is\n      required.\n      SHOULD allow integration of new security\
    \ mechanisms without\n      breaking backwards compatible operation.\n   From\
    \ section 7.2 Authentication:\n      MAY support various levels of authentication\
    \ security.\n      MUST support private authenticated login.\n      iSCSI authenticated\
    \ login MUST be resilient against attacks.\n      MUST support data origin authentication\
    \ of its communications;\n      data origin authentication MAY be optional to\
    \ use.\n   From section 7.3 Data Integrity:\n      SHOULD NOT preclude use of\
    \ additional data integrity protection\n      protocols (IPSec, TLS).\n   From\
    \ section 7.4 Data Confidentiality:\n      MUST provide for the use of a data\
    \ encryption protocol such as TLS\n      or IPsec ESP to provide data confidentiality\
    \ between iSCSI\n      endpoints\n   From section 8 Management:\n      SHOULD\
    \ be manageable using standard IP-based management protocols.\n      iSCSI protocol\
    \ document MUST NOT define the management\n      architecture for iSCSI, or make\
    \ explicit references to management\n      objects such as MIB variables.\n  \
    \ From section 8.1 Naming:\n      MUST support the naming architecture of SAM-2.\
    \ The means by which\n      an iSCSI resource is located MUST use or extend existing\
    \ Internet\n      standard resource location methods.\n      MUST provide a means\
    \ of identifying iSCSI targets by a unique\n      identifier that is independent\
    \ of the path on which it is found.\n      The format for the iSCSI names MUST\
    \ use existing naming\n      authorities.\n      An iSCSI name SHOULD be a human\
    \ readable string in an\n      international character set encoding.\n      Standard\
    \ Internet lookup services SHOULD be used to resolve iSCSI\n      names.\n   \
    \   SHOULD deal with the complications of the new SCSI security\n      architecture.\n\
    \      iSCSI naming architecture MUST address support of SCSI 3rd party\n    \
    \  operations such as EXTENDED COPY.\n   From section 8.2 Discovery:\n      MUST\
    \ have no impact on the use of current IP network discovery\n      techniques.\n\
    \      MUST provide some means of determining whether an iSCSI service is\n  \
    \    available through an IP address.\n      SCSI protocol-dependent techniques\
    \ SHOULD be used for further\n      discovery beyond the iSCSI layer.\n      MUST\
    \ provide a method of discovering, given an IP end point on its\n      well-known\
    \ port, the list of SCSI targets available to the\n      requestor.  The use of\
    \ this discovery service MUST be optional.\n   From section 9 Internet Accessability.\n\
    \      SHOULD be scrutinized for denial of service issues and they should\n  \
    \    be addressed.\n   From section 9.2 Firewalls and Proxy Servers\n      SHOULD\
    \ allow deployment where functional and optimizing middle-\n      boxes such as\
    \ firewalls, proxy servers and NATs are present.\n      use of IP addresses and\
    \ TCP ports SHOULD be firewall friendly.\n   From section 9.3 Congestion Control\
    \ and Transport Selection\n      MUST be a good network citizen with TCP-compatible\
    \ congestion\n      control (as defined in [RFC2914]).\n      iSCSI implementations\
    \ MUST NOT use multiple connections as a means\n      to avoid transport-layer\
    \ congestion control.\n"
- title: 3. iSCSI Design Considerations
  contents:
  - '3. iSCSI Design Considerations

    '
- title: 3.1. General Discussion
  contents:
  - "3.1. General Discussion\n   Traditionally, storage controllers (e.g., disk array\
    \ controllers,\n   tape library controllers) have supported the SCSI-3 protocol\
    \ and have\n   been attached to computers by SCSI parallel bus or Fibre Channel.\n\
    \   The IP infrastructure offers compelling advantages for volume/\n   block-oriented\
    \ storage attachment.  It offers the opportunity to take\n   advantage of the\
    \ performance/cost benefits provided by competition in\n   the Internet marketplace.\
    \  This could reduce the cost of storage\n   network infrastructure by providing\
    \ economies arising from the need\n   to install and operate only a single type\
    \ of network.\n   In addition, the IP protocol suite offers the opportunity for\
    \ a rich\n   array of management, security and QoS solutions.  Organizations may\n\
    \   initially choose to operate storage networks based on iSCSI that are\n   independent\
    \ of (isolated from) their current data networks except for\n   secure routing\
    \ of storage management traffic.  These organizations\n   anticipated benefits\
    \ from the high performance/cost of IP equipment\n   and the opportunity for a\
    \ unified management architecture.  As\n   security and QoS evolve, it becomes\
    \ reasonable to build combined\n   networks with shared infrastructure; nevertheless,\
    \ it is likely that\n   sophisticated users will choose to keep their storage\
    \ sub-networks\n   isolated to afford the best control of security and QoS to\
    \ ensure a\n   high-performance environment tuned to storage traffic.\n   Mapping\
    \ SCSI over IP also provides:\n      -- Extended distance ranges\n      -- Connectivity\
    \ to \"carrier class\" services that support IP\n   The following applications\
    \ for iSCSI are contemplated:\n      -- Local storage access, consolidation, clustering\
    \ and pooling (as\n         in the data center)\n      -- Network client access\
    \ to remote storage (eg. a \"storage service\n         provider\")\n      -- Local\
    \ and remote synchronous and asynchronous mirroring between\n         storage\
    \ controllers\n      -- Local and remote backup and recovery\n   iSCSI will support\
    \ the following topologies:\n      -- Point-to-point direct connections\n    \
    \  -- Dedicated storage LAN, consisting of one or more LAN segments\n      --\
    \ Shared LAN, carrying a mix of traditional LAN traffic plus\n         storage\
    \ traffic\n      -- LAN-to-WAN extension using IP routers or carrier-provided\
    \ \"IP\n         Datatone\"\n      -- Private networks and the public Internet\n\
    \   IP LAN-WAN routers may be used to extend the IP storage network to\n   the\
    \ wide area, permitting remote disk access (as for a storage\n   utility), synchronous\
    \ and asynchronous remote mirroring, and remote\n   backup and restore (as for\
    \ tape vaulting).  In the WAN,  using TCP\n   end-to-end avoids the need for specialized\
    \ equipment for protocol\n   conversion, ensures data reliability, copes with\
    \ network congestion,\n   and provides retransmission strategies adapted to WAN\
    \ delays.\n   The iSCSI technology deployment will involve the following elements:\n\
    \   (1)  Conclusion of a complete protocol standard and supporting\n        implementations;\n\
    \   (2)  Development of Ethernet storage NICs and related driver and\n       \
    \ protocol software; [NOTE: high-speed applications of iSCSI are\n        expected\
    \ to require significant portions of the iSCSI/TCP/IP\n        implementation\
    \ in hardware to achieve the necessary throughput.]\n   (3)  Development of compatible\
    \ storage controllers; and\n   (4)  The likely development of translating gateways\
    \ to provide\n        connectivity between the Ethernet storage network and the\
    \ Fibre\n        Channel and/or parallel-bus SCSI domains.\n   (5)  Development\
    \ of specifications for iSCSI device management such\n        as MIBs, LDAP or\
    \ XML schemas, etc.\n   (6)  Development of management and directory service applications\
    \ to\n        support a robust SAN infrastructure.\n   Products could initially\
    \ be offered for Gigabit Ethernet attachment,\n   with rapid migration to 10 GbE.\
    \  For performance competitive with\n   alternative SCSI transports, it will be\
    \ necessary to implement the\n   performance path of the full protocol stack in\
    \ hardware.  These new\n   storage NICs might perform full-stack processing of\
    \ a complete SCSI\n   task, analogous to today's SCSI and Fibre Channel HBAs,\
    \ and might\n   also support all host protocols that use TCP (NFS, CIFS, HTTP,\
    \ etc).\n   The charter of the IETF IP Storage Working Group (IPSWG) describes\n\
    \   the broad goal of mapping SCSI to IP using a transport that has\n   proven\
    \ congestion avoidance behavior and broad implementation on a\n   variety of platforms.\
    \  Within that broad charter, several transport\n   alternatives may be considered.\
    \  Initial IPS work focuses on TCP, and\n   this requirements document is restricted\
    \ to that domain of interest.\n"
- title: 3.2. Performance/Cost
  contents:
  - "3.2. Performance/Cost\n   In general, iSCSI MUST allow implementations to equal\
    \ or improve on\n   the current state of the art for SCSI interconnects.  This\
    \ goal\n   breaks down into several types of requirement:\n   Cost competitive\
    \ with alternative storage network technologies:\n   In order to be adopted by\
    \ vendors and the user community, the iSCSI\n   protocol MUST enable cost competitive\
    \ implementations when compared\n   to other SCSI transports (Fibre Channel).\n\
    \   Low delay communication:\n   Conventional storage access is of a stop-and-wait\
    \ remote procedure\n   call type.  Applications typically employ very little pipelining\
    \ of\n   their storage accesses, and so storage access delay directly impacts\n\
    \   performance.  The delay imposed by current storage interconnects,\n   including\
    \ protocol processing, is generally in the range of 100\n   microseconds.  The\
    \ use of caching in storage controllers means that\n   many storage accesses complete\
    \ almost instantly, and so the delay of\n   the interconnect can have a high relative\
    \ impact on overall\n   performance.  When stop-and-wait IO is used, the delay\
    \ of the\n   interconnect will affect performance.  The iSCSI protocol SHOULD\n\
    \   minimize control overhead, which adds to delay.\n   Low host CPU utilization,\
    \ equal to or better than current technology:\n   For competitive performance,\
    \ the iSCSI protocol MUST allow three key\n   implementation goals to be realized:\n\
    \   (1)  iSCSI MUST make it possible to build I/O adapters that handle an\n  \
    \      entire SCSI task, as alternative SCSI transport implementations\n     \
    \   do.\n   (2)  The protocol SHOULD permit direct data placement (\"zero-copy\"\
    \n        memory architectures, where the I/O adapter reads or writes host\n \
    \       memory exactly once per disk transaction.\n   (3)  The protocol SHOULD\
    \ NOT impose complex operations on the host\n        software, which would increase\
    \ host instruction path length\n        relative to alternatives.\n   Direct data\
    \ placement (zero-copy iSCSI):\n   Direct data placement refers to iSCSI data\
    \ being placed directly \"off\n   the wire\" into the allocated location in memory\
    \ with no intermediate\n   copies.  Direct data placement significantly reduces\
    \ the memory bus\n   and I/O bus loading in the endpoint systems, allowing improved\n\
    \   performance.  It reduces the memory required for NICs, possibly\n   reducing\
    \ the cost of these solutions.\n   This is an important implementation goal. \
    \ In an iSCSI system, each\n   of the end nodes (for example host computer and\
    \ storage controller)\n   should have ample memory, but the intervening nodes\
    \ (NIC, switches)\n   typically will not.\n   High bandwidth, bandwidth aggregation:\n\
    \   The bandwidth (transfer rate, MB/sec) supported by storage\n   controllers\
    \ is rapidly increasing, due to several factors:\n      1. Increase in disk spindle\
    \ and controller performance;\n      2. Use of ever-larger caches, and improved\
    \ caching algorithms;\n      3. Increased scale of storage controllers (number\
    \ of supported\n         spindles, speed of interconnects).\n   The iSCSI protocol\
    \ MUST provide for full utilization of available\n   link bandwidth.  The protocol\
    \ MUST also allow an implementation to\n   exploit parallelism (multiple connections)\
    \ at the device interfaces\n   and within the interconnect fabric.\n   The next\
    \ two sections further discuss the need for direct data\n   placement and high\
    \ bandwidth.\n"
- title: 3.3. Framing
  contents:
  - "3.3. Framing\n   Framing refers to the addition of information in a header, or\
    \ the\n   data stream to allow implementations to locate the boundaries of an\n\
    \   iSCSI protocol data unit (PDU) within the TCP byte stream.  There are\n  \
    \ two technical requirements driving framing: interfacing needs, and\n   accelerated\
    \ processing needs.\n   A framing solution that addresses the \"interfacing needs\"\
    \ of the\n   iSCSI protocol will facilitate the implementation of a message-based\n\
    \   upper layer protocol (iSCSI) on top of an underlying byte streaming\n   protocol\
    \ (TCP).  Since TCP is a reliable transport, this can be\n   accomplished by including\
    \ a length field in the iSCSI header. Finding\n   the protocol frame assumes that\
    \ the receiver will parse from the\n   beginning of the TCP data stream, and never\
    \ make a mistake (lose\n   alignment on packet headers).\n   The other technical\
    \ requirement for framing, \"accelerated\n   processing\", stems from the need\
    \ to handle increasingly higher data\n   rates in the physical media interface.\
    \  Two needs arise from higher\n   data rates:\n   (1)  LAN environment - NIC\
    \ vendors seek ways to provide \"zero-copy\"\n        methods of moving data directly\
    \ from the wire into application\n        buffers.\n   (2)  WAN environment- the\
    \ emergence of high bandwidth, high latency,\n        low bit error rate physical\
    \ media places huge buffer\n        requirements on the physical interface solutions.\n\
    \   First, vendors are producing network processing hardware that\n   offloads\
    \ network protocols to hardware solutions to achieve higher\n   data rates.  The\
    \ concept of \"zero-copy\" seeks to store blocks of data\n   in appropriate memory\
    \ locations (aligned) directly off the wire, even\n   when data is reordered due\
    \ to packet loss.  This is necessary to\n   drive actual data rates of 10 Gigabit/sec\
    \ and beyond.\n   Secondly, in order for iSCSI to be successful in the WAN arena\
    \ it\n   must be possible to operate efficiently in high bandwidth, high delay\n\
    \   networks.  The emergence of multi-gigabit IP networks with latencies\n   in\
    \ the tens to hundreds of milliseconds presents a challenge.  To\n   fill such\
    \ large pipes, it is necessary to have tens of megabytes of\n   outstanding requests\
    \ from the application.  In addition, some\n   protocols potentially require tens\
    \ of megabytes at the transport\n   layer to deal with buffering for reassembly\
    \ of data when packets are\n   received out-of-order.\n   In both cases, the issue\
    \ is the desire to minimize the amount of\n   memory and memory bandwidth required\
    \ for iSCSI hardware solutions.\n   Consider that a network pipe at 10 Gbps x\
    \ 200 msec holds 250 MB.\n   [Assume land-based communication with a spot half\
    \ way around the\n   world at the equator.  Ignore additional distance due to\
    \ cable\n   routing.  Ignore repeater and switching delays; consider only a\n\
    \   speed-of-light delay of 5 microsec/km.  The circumference of the\n   globe\
    \ at the equator is approx. 40000 km (round-trip delay must be\n   considered\
    \ to keep the pipe full).  10 Gb/sec x 40000 km x 5\n   microsec/km x B / 8b =\
    \ 250 MB].  In a conventional TCP\n   implementation, loss of a TCP segment means\
    \ that stream processing\n   MUST stop until that segment is recovered, which\
    \ takes at least a\n   time of <network round trip> to accomplish.  Following\
    \ the example\n   above, an implementation would be obliged to catch 250 MB of\
    \ data\n   into an anonymous buffer before resuming stream processing; later,\n\
    \   this data would need to be moved to its proper location.  Some\n   proponents\
    \ of iSCSI seek some means of putting data directly where it\n   belongs, and\
    \ avoiding extra data movement in the case of segment\n   drop.  This is a key\
    \ concept in understanding the debate behind\n   framing methodologies.\n   The\
    \ framing of the iSCSI protocol impacts both the \"interfacing\n   needs\" and\
    \ the \"accelerated processing needs\", however, while\n   including a length\
    \ in a header may suffice for the \"interfacing\n   needs\", it will not serve\
    \ the direct data placement needs.  The\n   framing mechanism developed should\
    \ allow resynchronization of packet\n   boundaries even in the case where a packet\
    \ is temporarily missing in\n   the incoming data stream.\n"
- title: 3.4. High bandwidth, bandwidth aggregation
  contents:
  - "3.4. High bandwidth, bandwidth aggregation\n   At today's block storage transport\
    \ throughput, any single link can be\n   saturated by the volume of storage traffic.\
    \  Scientific data\n   applications and data replication are examples of storage\n\
    \   applications that push the limits of throughput.\n   Some applications, such\
    \ as log updates, streaming tape, and\n   replication, require ordering of updates\
    \ and thus ordering of SCSI\n   commands.  An initiator may maintain ordering\
    \ by waiting for each\n   update to complete before issuing the next (a.k.a. synchronous\n\
    \   updates).  However, the throughput of synchronous updates decreases\n   inversely\
    \ with increases in network distances.\n   For greater throughput, the SCSI task\
    \ queuing mechanism allows an\n   initiator to have multiple commands outstanding\
    \ at the target\n   simultaneously and to express ordering constraints on the\
    \ execution\n   of those commands.  The task queuing mechanism is only effective\
    \ if\n   the commands arrive at the target in the order they were presented to\n\
    \   the initiator (FIFO order).  The iSCSI standard must provide an\n   ordered\
    \ transport of SCSI commands, even when commands are sent along\n   different\
    \ network paths (see Section 5.2 SCSI).  This is referred to\n   as \"command\
    \ ordering\".\n   The iSCSI protocol MUST operate over a single TCP connection\
    \ to\n   accommodate lower cost implementations.  To enable higher performance\n\
    \   storage devices, the protocol should specify a means to allow\n   operation\
    \ over multiple connections while maintaining the behavior of\n   a single SCSI\
    \ port.  This would allow the initiator and target to use\n   multiple network\
    \ interfaces and multiple paths through the network\n   for increased throughput.\
    \  There are a few potential ways to satisfy\n   the multiple path and ordering\
    \ requirements.\n   A popular way to satisfy the multiple-path requirement is\
    \ to have a\n   driver above the SCSI layer instantiate multiple copies of the\
    \ SCSI\n   transport, each communicating to the target along a different path.\n\
    \   \"Wedge\" drivers use this technique today to attain high performance.\n \
    \  Unfortunately, wedge drivers must wait for acknowledgement of\n   completion\
    \ of each request (stop-and-wait) to ensure ordered updates.\n   Another approach\
    \ might be for iSCSI protocol to use multiple\n   instances of its underlying\
    \ transport (e.g. TCP).  The iSCSI layer\n   would make these independent transport\
    \ instances appear as one SCSI\n   transport instance and maintain the ability\
    \ to do ordered SCSI\n   command queuing.  The document will refer to this technique\
    \ as\n   \"connection binding\" for convenience.\n   The iSCSI protocol SHOULD\
    \ support connection binding, and it MUST be\n   optional to implement.\n   In\
    \ the presence of connection binding, there are two ways to assign\n   features\
    \ to connections.  In the symmetric approach, all the\n   connections are identical\
    \ from a feature standpoint.  In the\n   asymmetric model, connections have different\
    \ features.  For example,\n   some connections may be used primarily for data\
    \ transfers whereas\n   others are used primarily for SCSI commands.\n   Since\
    \ the iSCSI protocol must support the case where there was only\n   one transport\
    \ connection, the protocol must have command, data, and\n   status travel over\
    \ the same connection.\n   In the case of multiple connections, the iSCSI protocol\
    \ must keep the\n   command and its associated data and status on the same connection\n\
    \   (connection allegiance).  Sending data and status on the same\n   connection\
    \ is desirable because this guarantees that status is\n   received after the data\
    \ (TCP provides ordered delivery).  In the case\n   where each connection is managed\
    \ by a separate processor, allegiance\n   decreases the need for inter-processor\
    \ communication.  This symmetric\n   approach is a natural extension of the single\
    \ connection approach.\n   An alternate approach that was extensively discussed\
    \ involved sending\n   all commands on a single connection and the associated\
    \ data and\n   status on a different connection (asymmetric approach).  In this\n\
    \   scheme, the transport ensures the commands arrive in order.  The\n   protocol\
    \ on the data and status connections is simpler, perhaps\n   lending itself to\
    \ a simpler realization in hardware.  One\n   disadvantage of this approach is\
    \ that the recovery procedure is\n   different if a command connection fails vs.\
    \ a data connection.  Some\n   argued that this approach would require greater\
    \ inter-processor\n   communication when connections are spread across processors.\n\
    \   The reader may reference the mail archives of the IPS mailing list\n   between\
    \ June and September of 2000 for extensive discussions on\n   symmetric vs asymmetric\
    \ connection models.\n"
- title: 4. Ease of implementation/complexity of protocol
  contents:
  - "4. Ease of implementation/complexity of protocol\n   Experience has shown that\
    \ adoption of a protocol by the Internet\n   community is inversely proportional\
    \ to its complexity.  In addition,\n   the simpler the protocol, the easier it\
    \ is to diagnose problems. The\n   designers of iSCSI SHOULD strive to fulfill\
    \ the requirements of the\n   creating a SCSI transport over IP, while keeping\
    \ the protocol as\n   simple as possible.\n   In the interest of simplicity, iSCSI\
    \ SHOULD minimize optional\n   features.  When features are deemed necessary,\
    \ the protocol MUST\n   specify feature negotiation at session establishment (login).\
    \  The\n   iSCSI transport MUST operate correctly when no optional features are\n\
    \   negotiated as well as when individual option negotiations are\n   unsuccessful.\n"
- title: 5. Reliability and Availability
  contents:
  - '5. Reliability and Availability

    '
- title: 5.1. Detection of Data Corruption
  contents:
  - "5.1. Detection of Data Corruption\n   There have been several research papers\
    \ that suggest that the TCP\n   checksum calculation allows a certain number of\
    \ bit errors to pass\n   undetected [10] [11].\n   In order to protect against\
    \ data corruption, the iSCSI protocol MUST\n   support a data integrity check\
    \ format for use in digest generation.\n   The iSCSI protocol MAY use separate\
    \ digests for data and headers.  In\n   an iSCSI proxy or gateway situation, the\
    \ iSCSI headers are removed\n   and re-built, and the TCP stream is terminated\
    \ on either side.  This\n   means that even the TCP checksum is removed and recomputed\
    \ within the\n   gateway.  To ensure the protection of commands, data, and status\
    \ the\n   iSCSI protocol MUST include a CRC or other digest mechanism that is\n\
    \   computed on the SCSI data block itself, as well as on each command\n   and\
    \ status message.  Since gateways may strip iSCSI headers and\n   rebuild them,\
    \ a separate header CRC is required.  Two header digests,\n   one for invariant\
    \ portions of the header (addresses) and one for the\n   variant portion would\
    \ provide protection against changes to portions\n   of the header that should\
    \ never be changed by middle boxes (eg,\n   addresses).\n   The iSCSI header format\
    \ SHOULD be extensible to include other digest\n   calculation methods.\n"
- title: 5.2. Recovery
  contents:
  - "5.2. Recovery\n   The SCSI protocol was originally designed for a parallel bus\n\
    \   transport that was highly reliable.  SCSI applications tend to assume\n  \
    \ that transport errors never happen, and when they do, SCSI\n   application recovery\
    \ tends to be expensive in terms of time and\n   computational resources.\n  \
    \ iSCSI protocol design, while placing an emphasis on simplicity, MUST\n   lead\
    \ to timely recovery from failure of initiator, target, or\n   connecting network\
    \ infrastructure (cabling, data path equipment such\n   as routers, etc).\n  \
    \ iSCSI MUST specify recovery methods for non-idempotent requests, such\n   as\
    \ operations on tape drives.\n   The iSCSI protocol error recover mechanism SHOULD\
    \ take into account\n   fail-over schemes for mirrored targets or highly available\
    \ storage\n   configurations that provide paths to target data through multiple\n\
    \   \"storage servers\".  This would provide a basis for layered\n   technologies\
    \ like high availability and clustering.\n   The iSCSI protocol SHOULD also provide\
    \ a method for sessions to be\n   gracefully terminated and restarted that can\
    \ be initiated by either\n   the initiator or target.  This provides the ability\
    \ to gracefully\n   fail over an initiator or target, or reset a target after\
    \ performing\n   maintenance tasks such as upgrading software.\n"
- title: 6. Interoperability
  contents:
  - "6. Interoperability\n   It must be possible for initiators and targets that implement\
    \ the\n   required portions of the iSCSI specification to interoperate.  While\n\
    \   this requirement is so obvious that it doesn't seem worth mentioning,\n  \
    \ if the protocol specification contains ambiguous wording, different\n   implementations\
    \ may not interoperate.  The iSCSI protocol document\n   MUST be clear and unambiguous.\n"
- title: 6.1. Internet infrastructure
  contents:
  - "6.1. Internet infrastructure\n   The iSCSI protocol MUST:\n      -- be compatible\
    \ with both IPv4 and IPv6.\n      -- use TCP connections conservatively, keeping\
    \ in mind there may\n         be many other users of TCP on a given machine.\n\
    \   The iSCSI protocol MUST NOT require changes to existing Internet\n   protocols\
    \ and SHOULD minimize required changes to existing TCP/IP\n   implementations.\n\
    \   iSCSI MUST be designed to allow future substitution of SCTP (for TCP)\n  \
    \ as an IP transport protocol with minimal changes to iSCSI protocol\n   operation,\
    \ protocol data unit (PDU) structures and formats. Although\n   not widely implemented\
    \ today, SCTP has many design features that make\n   it a desirable choice for\
    \ future iSCSI enhancement.\n"
- title: 6.2. SCSI
  contents:
  - "6.2. SCSI\n   In order to be considered a SCSI transport, the iSCSI standard\
    \ must\n   comply with the requirements of the SCSI Architecture Model [SAM-2]\n\
    \   for a SCSI transport.  Any feature SAM2 requires in a valid transport\n  \
    \ mapping MUST be specified by iSCSI.  The iSCSI protocol document MUST\n   specify\
    \ for each feature whether it is OPTIONAL, RECOMMENDED or\n   REQUIRED to implement\
    \ and/or use.\n   The SCSI Architectural Model [SAM-2] indicates an expectation\
    \ that\n   the SCSI  transport provides ordering of commands on an initiator\n\
    \   target-LUN granularity.  There has been much discussion on the IPS\n   reflector\
    \ and in working group meetings regarding the means to ensure\n   this ordering.\
    \  The rough consensus is that iSCSI MUST specify\n   strictly ordered delivery\
    \ of SCSI commands over an iSCSI session\n   between an initiator/target pair,\
    \ even in the presence of transport\n   errors.  This command ordering mechanism\
    \ SHOULD seek to minimize the\n   amount of communication necessary across multiple\
    \ adapters doing\n   transport off-load.  If an iSCSI implementation does not\
    \ require\n   ordering it can instantiate multiple sessions per initiator-target\n\
    \   pair.\n   iSCSI is intended to be a new SCSI \"transport\" [SAM2].  As a mapping\n\
    \   of SCSI over TCP, iSCSI requires interaction with both T10 and IETF.\n   However,\
    \ the iSCSI protocol MUST NOT require changes to the SCSI-3\n   command sets and\
    \ SCSI client code except where SCSI specifications\n   point to \"transport dependent\"\
    \ fields and behavior.  For example,\n   changes to SCSI documents will be necessary\
    \ to reflect lengthier\n   iSCSI target names and potentially lengthier timeouts.\
    \ Collaboration\n   with T10 will be necessary to achieve this requirement.\n\
    \   The iSCSI protocol SHOULD track changes to SCSI and the SCSI\n   Architecture\
    \ Model.\n   The iSCSI protocol MUST be capable of supporting all SCSI-3 command\n\
    \   sets and device types. The primary focus is on supporting 'larger'\n   devices:\
    \ host computers and storage controllers (disk arrays, tape\n   libraries).  However,\
    \ other command sets (printers, scanners) must be\n   supported.  These requirements\
    \ MUST NOT be construed to mean that\n   iSCSI must be natively implementable\
    \ on all of today's SCSI devices,\n   which might have limited processing power\
    \ or memory.\n   ACA (Auto Contingent Allegiance) is an optional SCSI mechanism\
    \ that\n   stops execution of a sequence of dependent SCSI commands when one of\n\
    \   them fails.  The situation surrounding it is complex - T10 specifies\n   ACA\
    \ in SAM2, and hence iSCSI must support it and endeavor to make\n   sure that\
    \ ACA gets implemented sufficiently (two independent\n   interoperable implementations)\
    \ to avoid dropping ACA in the\n   transition from Proposed Standard to Draft\
    \ Standard.  This implies\n   iSCSI SHOULD support ACA implementation.\n   The\
    \ iSCSI protocol MUST allow for the construction of gateways to\n   other SCSI\
    \ transports, including parallel SCSI [SPI-X] and to SCSI\n   FCP[FCP, FCP-2].\
    \  It MUST be possible to construct \"translating\"\n   gateways so that iSCSI\
    \ hosts can interoperate with SCSI-X devices; so\n   that SCSI-X devices can communicate\
    \ over an iSCSI network; and so\n   that SCSI-X hosts can use iSCSI targets (where\
    \ SCSI-X refers to\n   parallel SCSI, SCSI-FCP, or SCSI over any other transport).\
    \  This\n   requirement is implied by support for SAM-2, but is worthy of\n  \
    \ emphasis.  These are true application protocol gateways, and not just\n   bridge/routers.\
    \  The different standards have only the SCSI-3 command\n   set layer in common.\
    \  These gateways are not mere packet forwarders.\n   The iSCSI protocol MUST\
    \ reliably transport SCSI commands from the\n   initiator to the target.  According\
    \ to [SAM-2, p. 17.] \"The function\n   of the service delivery subsystem is to\
    \ transport an error-free copy\n   of the request or response between the sender\
    \ and the receiver\"\n   [SAM-2, p. 22].  The iSCSI protocol MUST correctly deal\
    \ with iSCSI\n   packet drop, duplication, corruption, stale packets, and re-ordering.\n"
- title: 7. Security Considerations
  contents:
  - "7. Security Considerations\n   In the past, directly attached storage systems\
    \ have implemented\n   minimal security checks because the physical connection\
    \ offered\n   little chance for attack.  Transporting block storage (SCSI) over\
    \ IP\n   opens a whole new opportunity for a variety of malicious attacks.\n \
    \  Attacks can take the active form (identity spoofing, man-in-the-\n   middle)\
    \ or the passive form (eavesdropping).\n"
- title: 7.1. Extensible Security
  contents:
  - "7.1. Extensible Security\n   The security services required for communications\
    \ depends on the\n   individual network configurations and environments.  Organizations\n\
    \   are setting up Virtual Private Networks(VPN), also known as\n   Intranets,\
    \ that will require one set of security functions for\n   communications within\
    \ the VPN and possibly many different security\n   functions for communications\
    \ outside the VPN to support\n   geographically separate components.  The iSCSI\
    \ protocol is applicable\n   to a wide range of internet working environments\
    \ that may employ\n   different security policies.  iSCSI MUST provide for strong\n\
    \   authentication when increased security is required.  The protocol\n   SHOULD\
    \ require minimal configuration and overhead in the insecure\n   operation, and\
    \ allow integration of new security mechanisms without\n   breaking backwards\
    \ compatible operation.\n"
- title: 7.2. Authentication
  contents:
  - "7.2. Authentication\n   The iSCSI protocol MAY support various levels of authentication\n\
    \   security, ranging from no authentication to secure authentication\n   using\
    \ public or private keys.\n   The iSCSI protocol MUST support private authenticated\
    \ login.\n   Authenticated login aids the target in blocking the unauthorized\
    \ use\n   of SCSI resources.  \"Private\" authenticated login mandates protected\n\
    \   identity exchange (no clear text passwords at a minimum).  Since\n   block\
    \ storage confidentiality is considered critical in enterprises\n   and many IP\
    \ networks may have access holes, organizations will want\n   to protect their\
    \ iSCSI resources.\n   The iSCSI authenticated login MUST be resilient against\
    \ attacks since\n   many IP networks are vulnerable to packet inspection.\n  \
    \ In addition, the iSCSI protocol MUST support data origin\n   authentication\
    \ of its communications; data origin authentication MAY\n   be optional to use.\
    \  Data origin authentication is critical since IP\n   networks are vulnerable\
    \ to source spoofing, where a malicious third\n   party pretends to send packets\
    \ from the initiator's IP address. These\n   requirements should be met using\
    \ standard Internet protocols such as\n   IPsec or TLS.  The endpoints may negotiate\
    \ the authentication method,\n   optionally none.\n"
- title: 7.3. Data Integrity
  contents:
  - "7.3. Data Integrity\n   The iSCSI protocol SHOULD NOT preclude use of additional\
    \ data\n   integrity protection protocols (IPSec, TLS).\n"
- title: 7.4. Data Confidentiality
  contents:
  - "7.4. Data Confidentiality\n   Block storage is used for storing sensitive information,\
    \ where data\n   confidentiality is critical.  An application may encrypt the\
    \ data\n   blocks before writing them to storage - this provides the best\n  \
    \ protection for the application.  Even if the storage or\n   communications are\
    \ compromised, the attacker will have difficulty\n   reading the data.\n   In\
    \ certain environments, encryption may be desired to provide an\n   extra assurance\
    \ of confidentiality.  An iSCSI implementation MUST\n   provide for the use of\
    \ a data encryption protocol such as TLS or\n   IPsec ESP to provide data confidentiality\
    \ between iSCSI endpoints.\n"
- title: 8. Management
  contents:
  - "8. Management\n   iSCSI implementations SHOULD be manageable using standard IP-based\n\
    \   management protocols.  However, the iSCSI protocol document MUST NOT\n   define\
    \ the management architecture for iSCSI within the network\n   infrastructure.\
    \  iSCSI will be yet another resource service within a\n   complex environment\
    \ of network resources (printers, file servers,\n   NAS, application servers,\
    \ etc).  There will certainly be efforts to\n   design how the \"block storage\
    \ service\" that iSCSI devices provide is\n   integrated into a comprehensive,\
    \ shared model, network management\n   environment.  A \"network administrator\"\
    \ (or \"storage administrator\")\n   will desire to have integrated applications\
    \ for assigning user names,\n   resource names, etc. and indicating access rights.\
    \  iSCSI devices\n   presumably will want to interact with these integrated network\n\
    \   management applications.  The iSCSI protocol document will not\n   attempt\
    \ to solve that set of problems, or specify means for devices\n   to provide management\
    \ agents.  In fact, there should be no mention of\n   MIBs or any other means\
    \ of managing iSCSI devices as explicit\n   references in the iSCSI protocol document,\
    \ because management data\n   and protocols change with the needs of the environment\
    \ and the\n   business models of the management applications.\n"
- title: 8.1. Naming
  contents:
  - "8.1. Naming\n   Whenever possible, iSCSI MUST support the naming architecture\
    \ of\n   SAM-2.  Deviations and uncertainties MUST be made explicit, and\n   comments\
    \ and resolutions worked out between ANSI T10 and the IPS\n   working group.\n\
    \   The means by which an iSCSI resource is located MUST use or extend\n   existing\
    \ Internet standard resource location methods.  RFC 2348 [12]\n   specifies URL\
    \ syntax and semantics which should be sufficiently\n   extensible for the iSCSI\
    \ resource.\n   The iSCSI protocol MUST provide a means of identifying an iSCSI\n\
    \   storage device by a unique identifier that is independent of the path\n  \
    \ on which it is found.  This name will be used to correlate alternate\n   paths\
    \ to the same device.  The format for the iSCSI names MUST use\n   existing naming\
    \ authorities, to avoid creating new central\n   administrative tasks.  An iSCSI\
    \ name SHOULD be a human readable\n   string in an international character set\
    \ encoding.\n   Standard Internet lookup services SHOULD be used to resolve names.\n\
    \   For example, Domain Name Services (DNS) MAY be used to resolve the\n   <hostname>\
    \ portion of a URL to one or multiple IP addresses.  When a\n   hostname resolves\
    \ to multiple addresses, these addresses should be\n   equivalent for functional\
    \ (possibly not performance) purposes.  This\n   means that the addresses can\
    \ be used interchangeably as long as\n   performance isn't a concern.  For example,\
    \ the same set of SCSI\n   targets MUST be accessible from each of these addresses.\n\
    \   An iSCSI device naming scheme MUST interact correctly with the\n   proposed\
    \ SCSI security architecture [99-245r9].  Particular attention\n   must be directed\
    \ to the proxy naming architecture defined by the new\n   security model.  In\
    \ this new model,  a host is identified by an\n   Access ID, and SCSI Logical\
    \ Unit Numbers (LUNs) can be mapped in a\n   manner that gives each AccessID a\
    \ unique LU map.  Thus, a given LU\n   within a target may be addressed by different\
    \ LUNs.\n   The iSCSI naming architecture MUST address support of SCSI 3rd party\n\
    \   operations such as EXTENDED COPY.  The key issue here relates to the\n   naming\
    \ architecture for SCSI LUs - iSCSI must provide a means of\n   passing a name\
    \ or handle between parties.  iSCSI must specify a means\n   of providing a name\
    \ or handle that could be used in the XCOPY command\n   and fit within the available\
    \ space allocated by that command.  And it\n   must be possible, of course, for\
    \ the XCOPY target (the third party)\n   to de-reference the name to the correct\
    \ target and LU.\n"
- title: 8.2. Discovery
  contents:
  - "8.2. Discovery\n   iSCSI MUST have no impact on the use of current IP network\
    \ discovery\n   techniques.  Network management platforms discover IP addresses\
    \ and\n   have various methods of probing the services available through these\n\
    \   IP addresses.  An iSCSI service should be evident using similar\n   techniques.\n\
    \   The iSCSI specifications MUST provide some means of determining\n   whether\
    \ an iSCSI service is available through an IP address.  It is\n   expected that\
    \ iSCSI will be a point of service in a host, just as\n   SNMP, etc are points\
    \ of services, associated with a well known port\n   number.\n   SCSI protocol-dependent\
    \ techniques SHOULD be used for further\n   discovery beyond the iSCSI layer.\
    \  Discovery is a complex, multi-\n   layered process.  The SCSI protocol specifications\
    \ provide specific\n   commands for discovering LUs and the commands associated\
    \ with this\n   process will also work over iSCSI.\n   The iSCSI protocol MUST\
    \ provide a method of discovering, given an IP\n   end point on its well-known\
    \ port, the list of SCSI targets available\n   to the requestor.  The use of this\
    \ discovery service MUST be\n   optional.\n   Further discovery guidelines are\
    \ outside the scope of this document\n   and may be addressed in separate Informational\
    \ documents.\n"
- title: 9. Internet Accessibility
  contents:
  - '9. Internet Accessibility

    '
- title: 9.1. Denial of Service
  contents:
  - "9.1. Denial of Service\n   As with all services, the denial of service by either\
    \ incorrect\n   implementations or malicious agents is always a concern.  All\
    \ aspects\n   of the iSCSI protocol SHOULD be scrutinized for potential denial\
    \ of\n   service issues, and guarded against as much as possible.\n"
- title: 9.2. NATs, Firewalls and Proxy servers
  contents:
  - "9.2. NATs, Firewalls and Proxy servers\n   NATs (Network Address Translator),\
    \ firewalls, and proxy servers are a\n   reality in today's Internet.  These devices\
    \ present a number of\n   challenges to device access methods being developed\
    \ for iSCSI.  For\n   example, specifying a URL syntax for iSCSI resource connection\
    \ allows\n   an initiator to address an iSCSI target device both directly and\n\
    \   through an iSCSI proxy server or NAT.  iSCSI SHOULD allow deployment\n   where\
    \ functional and optimizing middle-boxes such as firewalls, proxy\n   servers\
    \ and NATs are present.\n   The iSCSI protocol's use of IP addressing and TCP\
    \ port numbers MUST\n   be firewall friendly.  This means that all connection\
    \ requests should\n   normally be addressed to a specific, well-known TCP port.\
    \  That way,\n   firewalls can filter based on source and destination IP addresses,\n\
    \   and destination (target) port number.  Additional TCP connections\n   would\
    \ require different source port numbers (for uniqueness), but\n   could be opened\
    \ after a security dialogue on the control channel.\n   It's important that iSCSI\
    \ operate through a firewall to provide a\n   possible means of defending against\
    \ Denial of Service (DoS) assaults\n   from less-trusted areas of the network.\
    \  It is assumed that a\n   firewall will have much greater processing power for\
    \ dismissing bogus\n   connection requests than end nodes.\n"
- title: 9.3. Congestion Control and Transport Selection
  contents:
  - "9.3. Congestion Control and Transport Selection\n   The iSCSI protocol MUST be\
    \ a good network citizen with proven\n   congestion control (as defined in [RFC2914]).\
    \  In addition, iSCSI\n   implementations MUST NOT use multiple connections as\
    \ a means to avoid\n   transport-layer congestion control.\n"
- title: 10. Definitions
  contents:
  - "10. Definitions\n   Certain definitions are offered here, with references to\
    \ the original\n   document where applicable, in order to clarify the discussion\
    \ of\n   requirements.  Definitions without references are the work of the\n \
    \  authors and reviewers of this document.\n   Logical Unit (LU): A target-resident\
    \ entity that implements a device\n   model and executes SCSI commands sent by\
    \ an application client [SAM-\n   2, sec. 3.1.50, p. 7].\n   Logical Unit Number\
    \ (LUN): A 64-bit identifier for a logical unit\n   [SAM-2, sec. 3.1.52, p. 7].\n\
    \   SCSI Device:  A device that is connected to a service delivery\n   subsystem\
    \ and supports a SCSI application protocol [SAM-2, sec.\n   3.1.78, p. 9].\n \
    \  Service Delivery Port (SDP): A device-resident interface used by the\n   application\
    \ client, device server, or task manager to enter and\n   retrieve requests and\
    \ responses from the service delivery subsystem.\n   Synonymous with port (SAM-2\
    \ sec. 3.1.61) [SAM-2, sec. 3.1.89, p. 9].\n   Target: A SCSI device that receives\
    \ a SCSI command and directs it to\n   one or more logical units for execution\
    \ [SAM-2 sec. 3.1.97, p. 10].\n   Task: An object within the logical unit representing\
    \ the work\n   associated with a command or a group of linked commands [SAM-2,\
    \ sec.\n   3.1.98, p. 10].\n   Transaction: A cooperative interaction between\
    \ two objects, involving\n   the exchange of information or the execution of some\
    \ service by one\n   object on behalf of the other [SAM-2, sec. 3.1.109, p. 10].\n"
- title: 11.  References
  contents:
  - "11.  References\n   1.   Bradner, S., \"The Internet Standards Process -- Revision\
    \ 3\", BCP\n        9, RFC 2026, October 1996.\n   2.   Bradner, S., \"Key words\
    \ for use in RFCs to Indicate Requirement\n        Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   3.   [SAM-2] ANSI NCITS.  Weber, Ralph O., editor.  SCSI Architecture\n\
    \        Model -2 (SAM-2).  T10 Project 1157-D.  rev 23, 16 Mar 2002.\n   4. \
    \  [SPC-2] ANSI NCITS.  Weber, Ralph O., editor.  SCSI Primary\n        Commands\
    \   2 (SPC-2).  T10 Project 1236-D.  rev 20, 18 July\n        2001.\n   5.   [CAM-3]\
    \ ANSI NCITS.  Dallas, William D., editor.  Information\n        Technology -\
    \ Common Access Method - 3 (CAM-3)).  X3T10 Project\n        990D.  rev 3, 16\
    \ Mar 1998.\n   6.   [99-245r8] Hafner, Jim.  A Detailed Proposal for Access\n\
    \        Controls.  T10/99-245 revision 9, 26 Apr 2000.\n   7.   [SPI-X] ANSI\
    \ NCITS.  SCSI Parallel Interface - X.\n   8.   [FCP] ANSI NCITS.  SCSI-3 Fibre\
    \ Channel Protocol [ANSI\n        X3.269:1996].\n   9.   [FCP-2] ANSI NCITS. \
    \ SCSI-3 Fibre Channel Protocol - 2\n        [T10/1144-D].\n   10.  Paxon, V.\
    \ End-to-end internet packet dynamics, IEEE Transactions\n        on Networking\
    \ 7,3 (June 1999) pg 277-292.\n   11.  Stone J., Partridge, C. When the CRC and\
    \ TCP checksum disagree,\n        ACM Sigcomm (Sept. 2000).\n   12.  Malkin, G.\
    \ and A. Harkin, \"TFTP Blocksize Option\", RFC 2348, May\n        1998.\n   13.\
    \  Floyd, S., \"Congestion Control Principles\", BCP 14, RFC 2914,\n        September\
    \ 2000.\n"
- title: 12.  Acknowledgements
  contents:
  - "12.  Acknowledgements\n   Special thanks to Julian Satran, IBM and David Black,\
    \ EMC for their\n   extensive review comments.\n"
- title: 13.  Author's Addresses
  contents:
  - "13.  Author's Addresses\n   Address comments to:\n   Marjorie Krueger\n   Hewlett-Packard\
    \ Corporation\n   8000 Foothills Blvd\n   Roseville, CA 95747-5668, USA\n   Phone:\
    \ +1 916 785-2656\n   EMail: marjorie_krueger@hp.com\n   Randy Haagens\n   Hewlett-Packard\
    \ Corporation\n   8000 Foothills Blvd\n   Roseville, CA 95747-5668, USA\n   Phone:\
    \ +1 916 785-4578\n   EMail: Randy_Haagens@hp.com\n   Costa Sapuntzakis\n   Stanford\
    \ University\n   353 Serra Mall Dr #407\n   Stanford, CA 94305\n   Phone: 650-723-2458\n\
    \   EMail: csapuntz@stanford.edu\n   Mark Bakke\n   Cisco Systems, Inc.\n   6450\
    \ Wedgwood Road\n   Maple Grove, MN 55311\n   Phone: +1 763 398-1054\n   EMail:\
    \ mbakke@cisco.com\n"
- title: 14.  Full Copyright Statement
  contents:
  - "14.  Full Copyright Statement\n   Copyright (C) The Internet Society (2002).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
