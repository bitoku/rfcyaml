- title: __initial_text__
  contents:
  - "          IANA Considerations for Remote Procedure Call (RPC)\n           Network\
    \ Identifiers and Universal Address Formats\n"
- title: Abstract
  contents:
  - "Abstract\n   This document lists IANA Considerations for Remote Procedure Call\n\
    \   (RPC) Network Identifiers (netids) and RPC Universal Network\n   Addresses\
    \ (uaddrs).  This document updates, but does not replace, RFC\n   1833.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5665.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction and Motivation .....................................3\n\
    \   2. Requirements Language ...........................................3\n  \
    \ 3. Considerations for the Netid of the Stream Control\n      Transmission Protocol\
    \ ...........................................3\n   4. Security Considerations\
    \ .........................................3\n   5. IANA Considerations .............................................3\n\
    \      5.1. IANA Considerations for Netids .............................4\n  \
    \         5.1.1. Initial Registry ....................................6\n    \
    \       5.1.2. Updating Registrations ..............................8\n      5.2.\
    \ IANA Considerations for Uaddr Formats ......................8\n           5.2.1.\
    \ Initial Registry ....................................9\n           5.2.2. Updating\
    \ Registrations .............................10\n           5.2.3. Uaddr Formats\
    \ ......................................10\n                  5.2.3.1. Uaddr Format\
    \ for System V Release\n                           4 Loopback Transports .....................10\n\
    \                  5.2.3.2. Uaddr Format for Netid \"-\" ................10\n\
    \                  5.2.3.3. Uaddr Format for Most IPv4 Transports .....11\n  \
    \                5.2.3.4. Uaddr Format for Most IPv6 Transports .....11\n    \
    \              5.2.3.5. Uaddr Format for ICMP over IPv4 and IPv6 ..11\n      5.3.\
    \ Cross Referencing between the Netid and Format Registry ...12\n      5.4. Port\
    \ Assignment for NFS over SCTP .........................12\n   6. References .....................................................12\n\
    \      6.1. Normative References ......................................12\n  \
    \    6.2. Informative References ....................................12\n   Appendix\
    \ A.  Acknowledgments ......................................14\n"
- title: 1.  Introduction and Motivation
  contents:
  - "1.  Introduction and Motivation\n   The concepts of an RPC (defined in RFC 5531\
    \ [4]) Network Identifier\n   (netid) and an RPC Universal Address (uaddr) were\
    \ introduced in RFC\n   1833 [1] for distinguishing network addresses of multiple\
    \ protocols\n   and representing those addresses in a canonical form.  RFC 1833\n\
    \   states that a netid \"is defined by a system administrator based on\n   local\
    \ conventions, and cannot be depended on to have the same value\n   on every system\"\
    .  (The netid is contained in the field r_netid of\n   the data type rpcb_entry,\
    \ and the uaddr is contained in the field\n   r_addr of the same data type, where\
    \ rpcb_entry is defined in RFC\n   1833.)  Since the publication of RFC 1833,\
    \ it has been found that\n   protocols like Network File System version 4 (NFSv4.0)\
    \ [5] and RPC/\n   RDMA (Remote Direct Memory Access) [6] depend on consistent\
    \ values of\n   netids and representations of uaddrs.  Current practices tend\
    \ to\n   ensure this consistency.  Thus, this document identifies the\n   considerations\
    \ for IANA to establish registries of netids and uaddr\n   formats for RPC and\
    \ specifies the initial content of the two\n   registries.\n"
- title: 2.  Requirements Language
  contents:
  - "2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [2].\n"
- title: 3.  Considerations for the Netid of the Stream Control Transmission
  contents:
  - "3.  Considerations for the Netid of the Stream Control Transmission\n    Protocol\n\
    \   The Stream Control Transmission Protocol (SCTP) (described in RFC\n   4960\
    \ [7]) is a connection-oriented protocol that supports both byte-\n   streamed\
    \ and record-oriented data transfer.  When the \"sctp\" and\n   \"sctp6\" netids\
    \ are used, the Open Network Computing (ONC) RPC Record\n   Marking standard (see\
    \ Section 11 of RFC 5531 [4]) is not used;\n   instead, SCTP's native record-oriented\
    \ data transfer is used.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   Since this document is only concerned with the\
    \ IANA management of the\n   Network Identifier (netid) and Universal Network\
    \ Addresses (uaddrs)\n   format registry, it raises no new security issues.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This section uses terms that are defined in RFC 5226\
    \ [8].\n"
- title: 5.1.  IANA Considerations for Netids
  contents:
  - "5.1.  IANA Considerations for Netids\n   IANA has created a registry called \"\
    ONC RPC Netids\".  The remainder\n   of this section describes the registry.\n\
    \   All assignments to the ONC RPC Netids registry are made on one of two\n  \
    \ bases:\n   o  A First Come First Served basis subregistry per Section 4.1 of\
    \ RFC\n      5226.\n   o  A Standards Action basis subregistry per Section 4.1\
    \ of RFC 5226.\n   The eXternal Data Representation (XDR) encoding allows netids\
    \ to be\n   up to 2^32 - 1 octets in length, but the registry will only allow\
    \ a\n   much shorter length.  Assignments made on a Standards Action basis\n \
    \  should be assigned netids 1 to 8 octets long.  Assignments made on a\n   First\
    \ Come First Served basis should be assigned netids 9 to 128\n   octets long.\
    \  Some exceptions are listed in Table 2.\n   Some portion of the netid name space\
    \ is Reserved:\n   o  All netids, regardless of length, that start with the prefixes\n\
    \      \"STDS\" or \"FCFS\" are Reserved, in order to extend the name space\n\
    \      of either Standards Action or First Come First Served bases.\n   o  To\
    \ give the IESG the flexibility in the future to permit Private\n      and Experimental\
    \ Uses, all netids with the prefixes \"PRIV\" or\n      \"EXPE\" are Reserved.\n\
    \   o  To prevent confusion with the control protocol by the same name\n     \
    \ [9], netids with the prefix \"ICMP\" are Reserved.\n   o  Since netids are not\
    \ constructed in an explicit hierarchical\n      manner, this document does not\
    \ provide for Hierarchical Allocation\n      of netids.  Nonetheless, all netids\
    \ containing the octet \".\" are\n      Reserved for future possible provision\
    \ of Hierarchical Allocation.\n   o  The zero length netid is Reserved.\n   A\
    \ recommended convention for netids corresponding to transports that\n   work\
    \ over the IPv6 protocol is to have \"6\" as the last character in\n   the netid's\
    \ name.\n   There are two subregistries of netids: one for Standards Action\n\
    \   assignments and one for First Come First Served assignments.  Each\n   registry\
    \ of netids is a list of assignments, each containing five\n   fields for each\
    \ assignment.\n   1.  A US-ASCII string name that is the actual netid.  The netid\n\
    \       should be 1 to 8 octets long for the Standards Action\n       subregistry,\
    \ and 9 to 128 octets long for the First Come First\n       Served subregistry.\
    \  The netid MUST NOT conflict with any other\n       registered netid.  Despite\
    \ the fact that netids are case\n       sensitive, the netid, when mapped to all\
    \ upper case, MUST NOT\n       conflict with the value of any other registered\
    \ netid after the\n       registered netid is mapped to upper case.  In addition,\
    \ when\n       mapped to upper case, the prefix of the netid MUST NOT be equal\n\
    \       to a Reserved prefix.\n   2.  A constant name that can be used for software\
    \ programs that wish\n       to use the transport protocol associated with the\
    \ netid.  The\n       name of the constant typically has the prefix \"NC_\", and\
    \ a suffix\n       equal to the upper-case version of the netid.  This constant\
    \ name\n       should be a constant that is valid in the 'C' programming\n   \
    \    language.  This constant name MUST NOT conflict with any other\n       netid\
    \ constant name.  Constant names with the prefix \"NC_STDS\",\n       \"NC_FCFS\"\
    , \"NC_PRIV\", \"NC_EXPE\", and \"NC_ICMP\" are Reserved.\n       Constant names\
    \ with a prefix of \"NC_\" and a total length of 11\n       characters or less\
    \ should be for assignments made on the\n       Standards Action basis.  The constant\
    \ \"NC_\" is Reserved.  The\n       constant name can be 1 to 131 octets long.\n\
    \       Given the typical derivation of the constant name from the netid,\n  \
    \     the registration of the constant might be considered redundant.\n      \
    \ This is not always true.  For example, a netid might use a\n       character\
    \ that is not valid in the programming language.  The\n       first entry of Table\
    \ 1 provides such an example.\n   3.  A description and/or a reference to a description\
    \ of how the\n       netid will be used.  For assignments made on a First Come\
    \ First\n       Served basis, the description should include, if applicable, a\n\
    \       reference to the transport and network protocols corresponding to\n  \
    \     the netid.  For assignments made on a Standards Action basis, the\n    \
    \   description field must include the RFC numbers of the protocol\n       associated\
    \ with the netid, including, if applicable, RFC numbers\n       of the transport\
    \ and network protocols.\n   4.  A point of contact of the registrant.  For assignments\
    \ made on a\n       First Come First Served basis:\n       *  the point of contact\
    \ should include an email address.\n       *  subject to authorization by a Designated\
    \ Expert, the point of\n          contact may be omitted for extraordinary situations,\
    \ such as\n          the registration of a commonly used netid where the owner\
    \ is\n          unknown.\n       For assignments made on a Standards Action basis,\
    \ the point of\n       contact is always determined by IESG.\n   5.  A numerical\
    \ value, used to cross reference the netid assignment\n       with an assignment\
    \ in the uaddr format registry (see\n       Section 5.2).  If the registrant is\
    \ registering a netid that\n       cross references an existing assignment in\
    \ the uaddr format\n       registry, then the registrant provides the actual value\
    \ of the\n       cross reference along with the date the registrant retrieved\
    \ the\n       cross reference value from the uaddr format registry.  If the\n\
    \       registrant is registering both a new netid and new uaddr format,\n   \
    \    then the registrant provides a value of TBD1 in the netid\n       request,\
    \ and uses TBD1 in the uaddr format request.  IANA will\n       then substitute\
    \ TBD1 for the cross reference number IANA\n       allocates.  Note that if a\
    \ document requests multiple netid and\n       uaddr assignments, each additional\
    \ uaddr format cross reference\n       will be identified as TBD2, TBD3, ...,\
    \ etc.\n"
- title: 5.1.1.  Initial Registry
  contents:
  - "5.1.1.  Initial Registry\n   The initial list of netids is broken into two subregistries:\
    \ those\n   assigned on a First Come First Served basis in Table 1 and those\n\
    \   assigned on a Standards Action basis in Table 2.  These lists will\n   change\
    \ as IANA registers additional netids as needed, and the\n   authoritative list\
    \ of registered netids will always live with IANA.\n   +-------------+--------------+---------------------------+-----+----+\n\
    \   | Netid       | Constant     | Description and/or        | PoC | CR |\n  \
    \ |             | Name         | Reference                 |     |    |\n   +-------------+--------------+---------------------------+-----+----+\n\
    \   | \"-\"         | NC_NOPROTO   | RFC1833 [1],              |     | 1  |\n\
    \   |             |              | Section 5.2.3.2 of RFC    |     |    |\n  \
    \ |             |              | 5665                      |     |    |\n   |\
    \ \"ticlts\"    | NC_TICLTS    | The loop back             |     | 0  |\n   |\
    \             |              | connectionless transport  |     |    |\n   |  \
    \           |              | used in System V Release  |     |    |\n   |    \
    \         |              | 4 and other operating     |     |    |\n   |      \
    \       |              | systems.  Although this   |     |    |\n   |        \
    \     |              | assignment is made on a   |     |    |\n   |          \
    \   |              | First Come First Served   |     |    |\n   |            \
    \ |              | basis and is fewer than   |     |    |\n   |             |\
    \              | nine characters long, the |     |    |\n   |             |  \
    \            | exception is authorized.  |     |    |\n   |             |    \
    \          | See [10].                 |     |    |\n   | \"ticots\"    | NC_TICOTS\
    \    | The loop back             |     | 0  |\n   |             |            \
    \  | connection-oriented       |     |    |\n   |             |              |\
    \ transport used in System  |     |    |\n   |             |              | V\
    \ Release 4 and other     |     |    |\n   |             |              | operating\
    \ systems.  See   |     |    |\n   |             |              | [10].  Although\
    \ this      |     |    |\n   |             |              | assignment is made\
    \ on a   |     |    |\n   |             |              | First Come First Served\
    \   |     |    |\n   |             |              | basis and is fewer than  \
    \ |     |    |\n   |             |              | nine characters long, the |\
    \     |    |\n   |             |              | exception is authorized.  |  \
    \   |    |\n   | \"ticotsord\" | NC_TICOTSORD | The loop back             |  \
    \   | 0  |\n   |             |              | connection-oriented with  |    \
    \ |    |\n   |             |              | orderly-release transport |     |\
    \    |\n   |             |              | used in System V Release  |     |  \
    \  |\n   |             |              | 4 and other operating     |     |    |\n\
    \   |             |              | systems.  See [10].       |     |    |\n  \
    \ +-------------+--------------+---------------------------+-----+----+\n    \
    \    Table 1: Initial First Come First Served Netid Assignments\n   PoC: Point\
    \ of Contact.\n   CR: Cross Reference to the Uaddr Format Registry.\n   +---------+----------+----------------------------------+------+----+\n\
    \   | Netid   | Constant | RFC(s) and Description (if       | PoC  | CR |\n  \
    \ |         | Name     | needed)                          |      |    |\n   +---------+----------+----------------------------------+------+----+\n\
    \   | \"rdma\"  | NC_RDMA  | RFC 5666 [6], RFC 791 [11]       | IESG | 2  |\n\
    \   | \"rdma6\" | NC_RDMA6 | RFC 5666 [6], RFC 2460 [12]      | IESG | 3  |\n\
    \   | \"sctp\"  | NC_SCTP  | RFC 4960 [7], RFC 791 [11],      | IESG | 2  |\n\
    \   |         |          | Section 3 of RFC 5665            |      |    |\n  \
    \ | \"sctp6\" | NC_SCTP6 | RFC 4960 [7], RFC 2460 [12],     | IESG | 3  |\n  \
    \ |         |          | Section 3 of RFC 5665            |      |    |\n   |\
    \ \"tcp\"   | NC_TCP   | RFC 793 [13], RFC 791 [11],      | IESG | 2  |\n   |\
    \         |          | Section 11 of RFC 5531 [4]       |      |    |\n   | \"\
    tcp6\"  | NC_TCP6  | RFC 793 [13], RFC 2460 [12],     | IESG | 3  |\n   |    \
    \     |          | Section 11 of RFC 5531 [4]       |      |    |\n   | \"udp\"\
    \   | NC_UDP   | RFC 768 [14], RFC 791 [11]       | IESG | 2  |\n   | \"udp6\"\
    \  | NC_UDP6  | RFC 768 [14], RFC 2460 [12]      | IESG | 3  |\n   +---------+----------+----------------------------------+------+----+\n\
    \            Table 2: Initial Standards Action Netid Assignments\n"
- title: 5.1.2.  Updating Registrations
  contents:
  - "5.1.2.  Updating Registrations\n   Per Section 5.2 of RFC 5226, the registrant\
    \ is always permitted to\n   update a registration made on a First Come First\
    \ Served basis\n   \"subject to the same constraints and review as with new\n\
    \   registrations\".  The IESG or a Designated Expert is permitted to\n   update\
    \ any registration made on a First Come First Served basis,\n   which normally\
    \ is done when the PoC cannot be reached in order to\n   make necessary updates.\
    \  Examples where an update would be needed\n   include, but are not limited to:\
    \ the email address or other contact\n   information becomes invalid; the reference\
    \ to the corresponding\n   protocol becomes obsolete or unavailable; RFC 1833\
    \ is updated or\n   replaced in such a way that the scope of netids changes, requiring\n\
    \   additional fields in the assignment.\n   Only the IESG, on the advice of a\
    \ Designated Expert, can update a\n   registration made on a Standards Action\
    \ basis.\n"
- title: 5.2.  IANA Considerations for Uaddr Formats
  contents:
  - "5.2.  IANA Considerations for Uaddr Formats\n   IANA has created a registry called\
    \ \"ONC RPC Uaddr Format Registry\"\n   (called the \"format registry\" for the\
    \ remainder of this document).\n   The remainder of this section describes the\
    \ registry.\n   All assignments to the format registry are made on one of two\
    \ bases:\n   o  First Come First Served basis per Section 4.1 of RFC 5226.\n \
    \  o  Standards Action per Section 4.1 of RFC 5226.\n   The registry of formats\
    \ is a list of assignments, each containing\n   four fields for each assignment.\n\
    \   1.  The basis for the assignment, which can be either FCFS for First\n   \
    \    Come First Served assignments or STDS for Standards Action\n       assignments.\n\
    \   2.  A description and/or reference to a description of the actual\n      \
    \ uaddr format.  Assignments made on a Standards Action basis\n       always have\
    \ a reference to an RFC.\n   3.  For assignments made on a First Come First Served\
    \ basis, a point\n       of contact, including an email address.  Subject to authorization\n\
    \       by a Designated Expert, the point of contact may be omitted for\n    \
    \   extraordinary situations, such as the registration of a commonly\n       used\
    \ format where the owner is unknown.  For assignments made on\n       a Standards\
    \ Action basis, the point of contact is always\n       determined by the IESG.\n\
    \   4.  A numerical value, used to cross reference the format assignment\n   \
    \    with an assignment in the netid registry.  The registrant\n       provides\
    \ a value of TBD1 for the cross reference field when\n       requesting an assignment.\
    \  IANA will assign TBD1 to a real value.\n       Note that if a document requests\
    \ multiple uaddr assignments, each\n       additional uaddr format cross reference\
    \ will be identified as\n       TBD2, TBD3, ..., etc.\n   All requests for assignments\
    \ to the format registry on a Standards\n   Action basis are only for Standards\
    \ Track RFCs approved by the IESG.\n"
- title: 5.2.1.  Initial Registry
  contents:
  - "5.2.1.  Initial Registry\n   The initial list of formats is in Table 3.  This\
    \ list will change as\n   IANA registers additional formats as needed, and the\
    \ authoritative\n   list of registered formats will always live with IANA.\n \
    \  +-------+-----------------------------------------------+------+----+\n   |\
    \ Basis | Description and/or Reference                  | PoC  | CR |\n   +-------+-----------------------------------------------+------+----+\n\
    \   | FCFS  | System V Release 4 loopback transport uaddr   |      | 0  |\n  \
    \ |       | format.  Section 5.2.3.1 of RFC 5665          |      |    |\n   |\
    \ FCFS  | Uaddr format for NC_NOPROTO.  Section 5.2.3.2 |      | 1  |\n   |  \
    \     | of RFC 5665                                   |      |    |\n   | STDS\
    \  | Uaddr format for IPv4 transports.             | IESG | 2  |\n   |       |\
    \ Section 5.2.3.3 of RFC 5665                   |      |    |\n   | STDS  | Uaddr\
    \ format for IPv6 transports.             | IESG | 3  |\n   |       | Section\
    \ 5.2.3.4 of RFC 5665                   |      |    |\n   +-------+-----------------------------------------------+------+----+\n\
    \                    Table 3: Initial Format Assignments\n"
- title: 5.2.2.  Updating Registrations
  contents:
  - "5.2.2.  Updating Registrations\n   The registrant is always permitted to update\
    \ a registration made on a\n   First Come First Served basis \"subject to the\
    \ same constraints and\n   review as with new registrations.\"  The IESG is permitted\
    \ to update\n   any registration made on a First Come First Served basis, which\n\
    \   normally is done when the PoC cannot be reached in order to make\n   necessary\
    \ updates.  Examples where an update would be needed include,\n   but are not\
    \ limited to: the email address or other contact\n   information becomes invalid;\
    \ the reference to the format description\n   becomes obsolete or unavailable;\
    \ RFC 1833 is updated or replaced in\n   such a way that the scope of uaddr formats\
    \ changes, requiring\n   additional fields in the assignment.\n   Only the IESG,\
    \ on the advice of a Designated Expert, can update a\n   registration made on\
    \ a Standards Action basis.\n"
- title: 5.2.3.  Uaddr Formats
  contents:
  - '5.2.3.  Uaddr Formats

    '
- title: 5.2.3.1.  Uaddr Format for System V Release 4 Loopback Transports
  contents:
  - "5.2.3.1.  Uaddr Format for System V Release 4 Loopback Transports\n   Although\
    \ RFC 1833 specifies the uaddr as the XDR data type string\n   (hence, limited\
    \ to US-ASCII), implementations of the System V Release\n   4 loopback transports\
    \ will use an opaque string of octets.  Thus, the\n   format of a loopback transport\
    \ address is any non-zero length array\n   of octets.\n"
- title: 5.2.3.2.  Uaddr Format for Netid "-"
  contents:
  - "5.2.3.2.  Uaddr Format for Netid \"-\"\n   There is no address format for netid\
    \ \"-\".  This netid is apparently\n   for internal use for supporting some implementations\
    \ of RFC 1833.\n"
- title: 5.2.3.3.  Uaddr Format for Most IPv4 Transports
  contents:
  - "5.2.3.3.  Uaddr Format for Most IPv4 Transports\n   Most transport protocols\
    \ that operate over IPv4 use 16-bit port\n   numbers, including RDMA [6], SCTP\
    \ [7], TCP [13], and UDP [14].  The\n   format of the uaddr for the above 16-bit\
    \ port transports (when used\n   over IPv4) is the US-ASCII string:\n      h1.h2.h3.h4.p1.p2\n\
    \   The prefix \"h1.h2.h3.h4\" is the standard textual form for\n   representing\
    \ an IPv4 address, which is always four octets long.\n   Assuming big-endian ordering,\
    \ h1, h2, h3, and h4 are, respectively,\n   the first through fourth octets each\
    \ converted to ASCII-decimal.  The\n   suffix \"p1.p2\" is a textual form for\
    \ representing a service port.\n   Assuming big-endian ordering, p1 and p2 are,\
    \ respectively, the first\n   and second octets each converted to ASCII-decimal.\
    \  For example, if a\n   host, in big-endian order, has an address in hexadecimal\
    \ of\n   0xC0000207 and there is a service listening on, in big-endian order,\n\
    \   port 0xCB51 (decimal 52049), then the complete uaddr is\n   \"192.0.2.7.203.81\"\
    .\n"
- title: 5.2.3.4.  Uaddr Format for Most IPv6 Transports
  contents:
  - "5.2.3.4.  Uaddr Format for Most IPv6 Transports\n   Most transport protocols\
    \ that operate over IPv6 use 16-bit port\n   numbers, including RDMA [6], SCTP\
    \ [7], TCP [13], and UDP [14].  The\n   format of the uaddr for the above 16-bit\
    \ port transports (when used\n   over IPv6) is the US-ASCII string:\n      x1:x2:x3:x4:x5:x6:x7:x8.p1.p2\n\
    \   The suffix \"p1.p2\" is the service port, and is computed the same way\n \
    \  as with uaddrs for transports over IPv4 (see Section 5.2.3.3).  The\n   prefix\
    \ \"x1:x2:x3:x4:x5:x6:x7:x8\" is the preferred textual form for\n   representing\
    \ an IPv6 address as defined in Section 2.2 of RFC 4291\n   [3].  Additionally,\
    \ the two alternative forms specified in Section\n   2.2 of RFC 4291 are also\
    \ acceptable.\n"
- title: 5.2.3.5.  Uaddr Format for ICMP over IPv4 and IPv6
  contents:
  - "5.2.3.5.  Uaddr Format for ICMP over IPv4 and IPv6\n   As ICMP is not a true\
    \ transport, there is no uaddr format for ICMP.\n   The netid assignments \"icmp\"\
    \ and \"icmp6\" and their shared uaddr\n   \"format\" are listed to prevent any\
    \ registrant from allocating the\n   netids \"icmp\" and \"icmp6\" for a purpose\
    \ that would likely cause\n   confusion.\n"
- title: 5.3.  Cross Referencing between the Netid and Format Registry
  contents:
  - "5.3.  Cross Referencing between the Netid and Format Registry\n   The last field\
    \ of the netids registry is used to cross reference with\n   the last field of\
    \ the format registry.  IANA is under no obligation\n   to maintain the same numeric\
    \ values in cross references when updating\n   each registry; i.e., IANA is free\
    \ to \"re-number\" these corresponding\n   fields.  However, if IANA does so,\
    \ both the netid and format\n   registries must be updated atomically.\n"
- title: 5.4.  Port Assignment for NFS over SCTP
  contents:
  - "5.4.  Port Assignment for NFS over SCTP\n   Port 2049 is assigned to NFS over\
    \ SCTP for the sctp and sctp6 netids.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [1]   Srinivasan, R., \"Binding Protocols for\
    \ ONC RPC Version 2\",\n         RFC 1833, August 1995.\n   [2]   Bradner, S.,\
    \ \"Key words for use in RFCs to Indicate Requirement\n         Levels\", BCP\
    \ 14, RFC 2119, March 1997.\n   [3]   Hinden, R. and S. Deering, \"IP Version\
    \ 6 Addressing\n         Architecture\", RFC 4291, February 2006.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [4]   Thurlow, R., \"RPC: Remote Procedure Call\
    \ Protocol Specification\n         Version 2\", RFC 5531, May 2009.\n   [5]  \
    \ Shepler, S., Callaghan, B., Robinson, D., Thurlow, R., Beame,\n         C.,\
    \ Eisler, M., and D. Noveck, \"Network File System (NFS)\n         version 4 Protocol\"\
    , RFC 3530, April 2003.\n   [6]   Talpey, T. and B. Callaghan, \"Remote Direct\
    \ Memory Access\n         Transport for Remote Procedure Call\", RFC 5666, January\
    \ 2010.\n   [7]   Stewart, R., Ed., \"Stream Control Transmission Protocol\",\n\
    \         RFC 4960, September 2007.\n   [8]   Narten, T. and H. Alvestrand, \"\
    Guidelines for Writing an IANA\n         Considerations Section in RFCs\", BCP\
    \ 26, RFC 5226, May 2008.\n   [9]   Postel, J., \"Internet Control Message Protocol\"\
    , STD 5,\n         RFC 792, September 1981.\n   [10]  American Telephone and Telegraph\
    \ Company, \"UNIX System V,\n         Release 4 Programmer's Guide: Networking\
    \ Interfaces, ISBN\n         0139470786\", 1990.\n   [11]  Postel, J., \"Internet\
    \ Protocol\", STD 5, RFC 791,\n         September 1981.\n   [12]  Deering, S.\
    \ and R. Hinden, \"Internet Protocol, Version 6 (IPv6)\n         Specification\"\
    , RFC 2460, December 1998.\n   [13]  Postel, J., \"Transmission Control Protocol\"\
    , STD 7, RFC 793,\n         September 1981.\n   [14]  Postel, J., \"User Datagram\
    \ Protocol\", STD 6, RFC 768,\n         August 1980.\n"
- title: Appendix A.  Acknowledgments
  contents:
  - "Appendix A.  Acknowledgments\n   Lisa Dusseault, Lars Eggert, Pasi Eronen, Tim\
    \ Polk, Juergen\n   Schoenwaelder, and Robert Sparks reviewed the document and\
    \ gave\n   valuable feedback.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Mike Eisler\n   NetApp\n   5765 Chase Point Circle\n   Colorado\
    \ Springs, CO  80919\n   US\n   Phone: +1-719-599-9026\n   EMail: mike@eisler.com\n"
