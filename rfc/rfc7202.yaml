- title: __initial_text__
  contents:
  - "                      Securing the RTP Framework:\n       Why RTP Does Not Mandate\
    \ a Single Media Security Solution\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo discusses the problem of securing real-time multimedia\n\
    \   sessions.  It also explains why the Real-time Transport Protocol\n   (RTP)\
    \ and the associated RTP Control Protocol (RTCP) do not mandate a\n   single media\
    \ security mechanism.  This is relevant for designers and\n   reviewers of future\
    \ RTP extensions to ensure that appropriate\n   security mechanisms are mandated\
    \ and that any such mechanisms are\n   specified in a manner that conforms with\
    \ the RTP architecture.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7202.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n   2.  RTP Applications and Deployment Scenarios . . . . . .\
    \ . . . .   3\n   3.  RTP Media Security  . . . . . . . . . . . . . . . . . .\
    \ . . .   4\n   4.  RTP Session Establishment and Key Management  . . . . . .\
    \ . .   5\n   5.  On the Requirement for Strong Security in Framework Protocols\
    \   5\n   6.  Securing the RTP Framework  . . . . . . . . . . . . . . . . .  \
    \ 6\n   7.  Conclusions . . . . . . . . . . . . . . . . . . . . . . . . .   8\n\
    \   8.  Security Considerations . . . . . . . . . . . . . . . . . . .   8\n  \
    \ 9.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .   8\n   10.\
    \ Informative References  . . . . . . . . . . . . . . . . . . .   8\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Real-time Transport Protocol (RTP) [RFC3550] is widely\
    \ used for\n   voice over IP, Internet television, video conferencing, and other\n\
    \   real-time and streaming media applications.  Despite this use, the\n   basic\
    \ RTP specification provides only limited options for media\n   security and defines\
    \ no standard key exchange mechanism.  Rather, a\n   number of extensions are\
    \ defined that can provide confidentiality and\n   authentication of RTP media\
    \ streams and RTP Control Protocol (RTCP)\n   messages.  Other mechanisms define\
    \ key exchange protocols.  This memo\n   outlines why it is appropriate that multiple\
    \ extension mechanisms are\n   defined rather than mandating a single security\
    \ and keying mechanism\n   for all users of RTP.\n   The IETF policy \"Strong\
    \ Security Requirements for Internet\n   Engineering Task Force Standard Protocols\"\
    \ [RFC3365] (the so-called\n   \"Danvers Doctrine\") states that \"we MUST implement\
    \ strong security in\n   all protocols to provide for the all too frequent day\
    \ when the\n   protocol comes into widespread use in the global Internet\".  The\n\
    \   security mechanisms defined for use with RTP allow these requirements\n  \
    \ to be met.  However, since RTP is a protocol framework that is\n   suitable\
    \ for a wide variety of use cases, there is no single security\n   mechanism that\
    \ is suitable for every scenario.  This memo outlines\n   why this is the case\
    \ and discusses how users of RTP can meet the\n   requirement for strong security.\n\
    \   This document provides high-level guidance on how to handle security\n   issues\
    \ for the various types of components within the RTP framework\n   as well as\
    \ the role of the service or application using RTP to ensure\n   strong security\
    \ is implemented.  This document does not provide the\n   guidance that an individual\
    \ implementer, or even specifier of an RTP\n   application, really can use to\
    \ determine what security mechanism they\n   need to use; that is not intended\
    \ with this document.\n   A non-exhaustive list of the RTP security options available\
    \ at the\n   time of this writing is outlined in [RFC7201].  This document gives\n\
    \   an overview of the available RTP solutions and provides guidance on\n   their\
    \ applicability for different application domains.  It also\n   attempts to provide\
    \ an indication of actual and intended usage at the\n   time of writing as additional\
    \ input to help with considerations such\n   as interoperability, availability\
    \ of implementations, etc.\n"
- title: 2.  RTP Applications and Deployment Scenarios
  contents:
  - "2.  RTP Applications and Deployment Scenarios\n   The range of application and\
    \ deployment scenarios where RTP has been\n   used includes, but is not limited\
    \ to, the following:\n   o  Point-to-point voice telephony;\n   o  Point-to-point\
    \ video conferencing and telepresence;\n   o  Centralized group video conferencing\
    \ and telepresence, using a\n      Multipoint Conference Unit (MCU) or similar\
    \ central middlebox;\n   o  Any Source Multicast (ASM) video conferencing using\
    \ the\n      lightweight sessions model (e.g., the Mbone conferencing tools);\n\
    \   o  Point-to-point streaming audio and/or video (e.g., on-demand TV or\n  \
    \    movie streaming);\n   o  Source-Specific Multicast (SSM) streaming to large\
    \ receiver groups\n      (e.g., IPTV streaming by residential ISPs or the Third\
    \ Generation\n      Partnership Project (3GPP) Multimedia/Broadcast Multicast\
    \ Service\n      [T3GPP.26.346]);\n   o  Replicated unicast streaming to a group\
    \ of receivers;\n   o  Interconnecting components in music production studios\
    \ and video\n      editing suites;\n   o  Interconnecting components of distributed\
    \ simulation systems; and\n   o  Streaming real-time sensor data (e.g., electronic\
    \ Very Long\n      Baseline Interferometry (e-VLBI) radio astronomy).\n   As can\
    \ be seen, these scenarios vary from point-to-point sessions to\n   very large\
    \ multicast groups, from interactive to non-interactive, and\n   from low bandwidth\
    \ (kilobits per second) telephony to high bandwidth\n   (multiple gigabits per\
    \ second) video and data streaming.  While most\n   of these applications run\
    \ over UDP [RFC0768], some use TCP [RFC0793]\n   [RFC4614] or the Datagram Congestion\
    \ Control Protocol (DCCP)\n   [RFC4340] as their underlying transport.  Some run\
    \ on highly reliable\n   optical networks, while others use low-rate unreliable\
    \ wireless\n   networks.  Some applications of RTP operate entirely within a single\n\
    \   trust domain, while others run interdomain with untrusted (and, in\n   some\
    \ cases, potentially unknown) users.  The range of scenarios is\n   wide and growing\
    \ both in number and in heterogeneity.\n"
- title: 3.  RTP Media Security
  contents:
  - "3.  RTP Media Security\n   The wide range of application scenarios where RTP\
    \ is used has led to\n   the development of multiple solutions for securing RTP\
    \ media streams\n   and RTCP control messages, considering different requirements.\n\
    \   Perhaps the most widely applicable of these security options is the\n   Secure\
    \ RTP (SRTP) framework [RFC3711].  This is an application-level\n   media security\
    \ solution, encrypting the media payload data (but not\n   the RTP headers) to\
    \ provide confidentiality and supporting source\n   origin authentication as an\
    \ option.  SRTP was carefully designed to\n   be low overhead, including operating\
    \ on links subject to RTP header\n   compression, and to support the group communication\
    \ and third-party\n   performance monitoring features of RTP across a range of\
    \ networks.\n   SRTP is not the only media security solution for RTP, however,\
    \ and\n   alternatives can be more appropriate in some scenarios, perhaps due\n\
    \   to ease of integration with other parts of the complete system.  In\n   addition,\
    \ SRTP does not address all possible security requirements,\n   and other solutions\
    \ are needed in cases where SRTP is not suitable.\n   For example, ISMACryp payload-level\
    \ confidentiality [ISMACryp2] is\n   appropriate for some types of streaming video\
    \ application, but is not\n   suitable for voice telephony, and uses features\
    \ that are not provided\n   by SRTP.\n   The range of available RTP security options,\
    \ and their applicability\n   to different scenarios, is outlined in [RFC7201].\
    \  At the time of\n   this writing, there is no media security protocol that is\
    \ appropriate\n   for all the environments where RTP is used.  Multiple RTP media\n\
    \   security protocols are expected to remain in wide use for the\n   foreseeable\
    \ future.\n"
- title: 4.  RTP Session Establishment and Key Management
  contents:
  - "4.  RTP Session Establishment and Key Management\n   A range of different protocols\
    \ for RTP session establishment and key\n   exchange exist, matching the diverse\
    \ range of use cases for the RTP\n   framework.  These mechanisms can be split\
    \ into two categories: those\n   that operate in band on the media path and those\
    \ that are out of band\n   and operate as part of the session establishment signaling\
    \ channel.\n   The requirements for these two classes of solutions are different,\n\
    \   and a wide range of solutions have been developed in this space.\n   A more-detailed\
    \ survey of requirements for media security management\n   protocols can be found\
    \ in [RFC5479].  As can be seen from that memo,\n   the range of use cases is\
    \ wide, and there is no single key management\n   protocol that is appropriate\
    \ for all scenarios.  The solutions have\n   been further diversified by the existence\
    \ of infrastructure elements,\n   such as authentication systems, that are tied\
    \ to the key management.\n   The most important and widely used keying options\
    \ for RTP sessions at\n   the time of this writing are described in [RFC7201].\n"
- title: 5.  On the Requirement for Strong Security in Framework Protocols
  contents:
  - "5.  On the Requirement for Strong Security in Framework Protocols\n   The IETF\
    \ requires that all protocols provide a strong, mandatory-to-\n   implement security\
    \ solution [RFC3365].  This is essential for the\n   overall security of the Internet\
    \ to ensure that all implementations\n   of a protocol can interoperate in a secure\
    \ way.  Framework protocols\n   offer a challenge for this mandate, however, since\
    \ they are designed\n   to be used by different classes of applications in a wide\
    \ range of\n   different environments.  The different use cases for the framework\n\
    \   have different security requirements, and implementations designed\n   for\
    \ different environments are generally not expected to interwork.\n   RTP is an\
    \ example of a framework protocol with wide applicability.\n   The wide range\
    \ of scenarios described in Section 2 show the issues\n   that arise in mandating\
    \ a single security mechanism for this type of\n   framework.  It would be desirable\
    \ if a single media security\n   solution, and a single key management solution,\
    \ could be developed\n   that is suitable for applications across this range of\
    \ use scenarios.\n   The authors are not aware of any such solution, however,\
    \ and believe\n   it is unlikely that any such solution will be developed.  In\
    \ part,\n   this is because applications in the different domains are not\n  \
    \ intended to interwork, so there is no incentive to develop a single\n   mechanism.\
    \  More importantly, though, the security requirements for\n   the different usage\
    \ scenarios vary widely, and an appropriate\n   security mechanism in one scenario\
    \ simply does not work for some\n   other scenarios.\n   For a framework protocol,\
    \ it appears that the only sensible solution\n   to the strong security requirement\
    \ of [RFC3365] is to develop and use\n   building blocks for the basic security\
    \ services of confidentiality,\n   integrity protection, authorization, authentication,\
    \ and so on.  When\n   new uses for the framework protocol arise, they need to\
    \ be studied to\n   determine if the existing security building blocks can satisfy\
    \ the\n   requirements, or if new building blocks need to be developed.\n   Therefore,\
    \ when considering the strong and mandatory-to-implement\n   security mechanism\
    \ for a specific class of applications, one has to\n   consider what security\
    \ building blocks need to be integrated, or if\n   any new mechanisms need to\
    \ be defined to address specific issues\n   relating to this new class of application.\
    \  To maximize\n   interoperability, it is important that common media security\
    \ and key\n   management mechanisms are defined for classes of application with\n\
    \   similar requirements.  The IETF needs to participate in this\n   selection\
    \ of security building blocks for each class of applications\n   that use the\
    \ protocol framework and are expected to interoperate, in\n   cases where the\
    \ IETF has the appropriate knowledge of the class of\n   applications.\n"
- title: 6.  Securing the RTP Framework
  contents:
  - "6.  Securing the RTP Framework\n   The IETF requires that protocols specify mandatory-to-implement\
    \ (MTI)\n   strong security [RFC3365].  This applies to the specification of each\n\
    \   interoperable class of application that makes use of RTP.  However,\n   RTP\
    \ is a framework protocol, so the arguments made in Section 5 also\n   apply.\
    \  Given the variability of the classes of application that use\n   RTP, and the\
    \ variety of the currently available security mechanisms\n   described in [RFC7201],\
    \ no one set of MTI security options can\n   realistically be specified that apply\
    \ to all classes of RTP\n   applications.\n   Documents that define an interoperable\
    \ class of applications using\n   RTP are subject to [RFC3365], and thus need\
    \ to specify MTI security\n   mechanisms.  This is because such specifications\
    \ do fully specify\n   interoperable applications that use RTP.  Examples of such\
    \ documents\n   under development in the IETF at the time of this writing are\
    \ \"WebRTC\n   Security Architecture\" [WebRTC-SEC] and \"Real Time Streaming\
    \ Protocol\n   2.0 (RTSP)\" [RTSP].  It is also expected that a similar document\
    \ will\n   be produced for voice-over-IP applications using SIP and RTP.\n   The\
    \ RTP framework includes several extension points.  Some extensions\n   can significantly\
    \ change the behavior of the protocol to the extent\n   that applications using\
    \ the extension form a separate interoperable\n   class of applications to those\
    \ that have not been extended.  Other\n   extension points are defined in such\
    \ a manner that they can be used\n   (largely) independently of the class of applications\
    \ using RTP.  Two\n   important extension points that are independent of the class\
    \ of\n   applications are RTP payload formats and RTP profiles.\n   An RTP payload\
    \ format defines how the output of a media codec can be\n   used with RTP.  At\
    \ the time of this writing, there are over 70 RTP\n   payload formats defined\
    \ in published RFCs, with more in development.\n   It is appropriate for an RTP\
    \ payload format to discuss the specific\n   security implications of using that\
    \ media codec with RTP.  However,\n   an RTP payload format does not specify an\
    \ interoperable class of\n   applications that use RTP since, in the vast majority\
    \ of cases, a\n   media codec and its associated RTP payload format can be used\
    \ with\n   many different classes of application.  As such, an RTP payload\n \
    \  format is neither secure in itself nor something to which [RFC3365]\n   applies.\
    \  Future RTP payload format specifications need to explicitly\n   state this\
    \ and include a reference to this memo for explanation.  It\n   is not appropriate\
    \ for an RTP payload format to mandate the use of\n   SRTP [RFC3711], or any other\
    \ security building blocks, since that RTP\n   payload format might be used by\
    \ different classes of application that\n   use RTP and that have different security\
    \ requirements.\n   RTP profiles are larger extensions that adapt the RTP framework\
    \ for\n   use with particular classes of application.  In some cases, those\n\
    \   classes of application might share common security requirements so\n   that\
    \ it could make sense for an RTP profile to mandate particular\n   security options\
    \ and building blocks (the RTP/SAVP profile [RFC3711]\n   is an example of this\
    \ type of RTP profile).  In other cases, though,\n   an RTP profile is applicable\
    \ to such a wide range of applications\n   that it would not make sense for that\
    \ profile to mandate particular\n   security building blocks be used (the RTP/AVPF\
    \ profile [RFC4585] is\n   an example of this type of RTP profile, since it provides\
    \ building\n   blocks that can be used in different styles of application).  A\
    \ new\n   RTP profile specification needs to discuss whether or not it makes\n\
    \   sense to mandate particular security building blocks that need to be\n   used\
    \ with all implementations of that profile; however, there is no\n   expectation\
    \ that all RTP profiles will mandate particular security\n   solutions.  RTP profiles\
    \ that do not specify an interoperable usage\n   for a particular class of RTP\
    \ applications are neither secure in\n   themselves nor something to which [RFC3365]\
    \ applies; any future RTP\n   profiles in this category need to explicitly state\
    \ this with\n   justification and include a reference to this memo.\n"
- title: 7.  Conclusions
  contents:
  - "7.  Conclusions\n   The RTP framework is used in a wide range of different scenarios\
    \ with\n   no common security requirements.  Accordingly, neither SRTP [RFC3711]\n\
    \   nor any other single media security solution or keying mechanism can\n   be\
    \ mandated for all uses of RTP.  In the absence of a single common\n   security\
    \ solution, it is important to consider what mechanisms can be\n   used to provide\
    \ strong and interoperable security for each different\n   scenario where RTP\
    \ applications are used.  This will require analysis\n   of each class of application\
    \ to determine the security requirements\n   for the scenarios in which they are\
    \ to be used, followed by the\n   selection of MTI security building blocks for\
    \ that class of\n   application, including the desired RTP traffic protection\
    \ and key\n   management.  A non-exhaustive list of the RTP security options\n\
    \   available at the time of this writing is outlined in [RFC7201].  It\n   is\
    \ expected that each class of application will be supported by a\n   memo describing\
    \ what security options are mandatory to implement for\n   that usage scenario.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   This entire memo is about mandatory-to-implement\
    \ security.\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   Thanks to Ralph Blom, Hannes Tschofenig, Dan York, Alfred\
    \ Hoenes,\n   Martin Ellis, Ali Begen, Keith Drage, Ray van Brandenburg, Stephen\n\
    \   Farrell, Sean Turner, John Mattsson, and Benoit Claise for their\n   feedback.\n"
- title: 10.  Informative References
  contents:
  - "10.  Informative References\n   [ISMACryp2]  Internet Streaming Media Alliance\
    \ (ISMA), \"ISMA\n                Encryption and Authentication Version 2.0\"\
    , November\n                2007, <http://www.oipf.tv/images/site/DOCS/mpegif/ISMA/\n\
    \                isma_easpec2.0.pdf>.\n   [RFC0768]    Postel, J., \"User Datagram\
    \ Protocol\", STD 6, RFC 768,\n                August 1980.\n   [RFC0793]    Postel,\
    \ J., \"Transmission Control Protocol\", STD 7, RFC\n                793, September\
    \ 1981.\n   [RFC3365]    Schiller, J., \"Strong Security Requirements for Internet\n\
    \                Engineering Task Force Standard Protocols\", BCP 61, RFC\n  \
    \              3365, August 2002.\n   [RFC3550]    Schulzrinne, H., Casner, S.,\
    \ Frederick, R., and V.\n                Jacobson, \"RTP: A Transport Protocol\
    \ for Real-Time\n                Applications\", STD 64, RFC 3550, July 2003.\n\
    \   [RFC3711]    Baugher, M., McGrew, D., Naslund, M., Carrara, E., and\n    \
    \            K.  Norrman, \"The Secure Real-time Transport Protocol\n        \
    \        (SRTP)\", RFC 3711, March 2004.\n   [RFC4340]    Kohler, E., Handley,\
    \ M., and S. Floyd, \"Datagram\n                Congestion Control Protocol (DCCP)\"\
    , RFC 4340, March\n                2006.\n   [RFC4585]    Ott, J., Wenger, S.,\
    \ Sato, N., Burmeister, C., and J.\n                Rey, \"Extended RTP Profile\
    \ for Real-time Transport\n                Control Protocol (RTCP)-Based Feedback\
    \ (RTP/AVPF)\", RFC\n                4585, July 2006.\n   [RFC4614]    Duke, M.,\
    \ Braden, R., Eddy, W., and E. Blanton, \"A\n                Roadmap for Transmission\
    \ Control Protocol (TCP)\n                Specification Documents\", RFC 4614,\
    \ September 2006.\n   [RFC5479]    Wing, D., Fries, S., Tschofenig, H., and F.\
    \ Audet,\n                \"Requirements and Analysis of Media Security Management\n\
    \                Protocols\", RFC 5479, April 2009.\n   [RFC7201]    Westerlund,\
    \ M. and C. Perkins, \"Options for Securing RTP\n                Sessions\", RFC\
    \ 7201, April 2014.\n   [RTSP]       Schulzrinne, H., Rao, A., Lanphier, R., Westerlund,\
    \ M.,\n                and M. Stiemerling, \"Real Time Streaming Protocol 2.0\n\
    \                (RTSP)\", Work in Progress, February 2014.\n   [T3GPP.26.346]\n\
    \                3GPP, \"Multimedia Broadcast/Multicast Service (MBMS);\n    \
    \            Protocols and codecs\", 3GPP TS 26.346 10.7.0, March\n          \
    \      2013,\n                <http://www.3gpp.org/ftp/Specs/html-info/26346.htm>.\n\
    \   [WebRTC-SEC] Rescorla, E., \"WebRTC Security Architecture\", Work in\n   \
    \             Progress, February 2014.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Colin Perkins\n   University of Glasgow\n   School of\
    \ Computing Science\n   Glasgow  G12 8QQ\n   United Kingdom\n   EMail: csp@csperkins.org\n\
    \   URI:   http://csperkins.org/\n   Magnus Westerlund\n   Ericsson\n   Farogatan\
    \ 6\n   Kista  SE-164 80\n   Sweden\n   EMail: magnus.westerlund@ericsson.com\n"
