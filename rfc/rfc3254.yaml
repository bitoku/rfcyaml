- title: __initial_text__
  contents:
  - '               Definitions for talking about directories

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2002).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   When discussing systems for making information accessible through\
    \ the\n   Internet in standardized ways, it may be useful if the people who are\n\
    \   discussing it have a common understanding of the terms they use.\n   For example,\
    \ a reference to this document would give one the power to\n   agree that the\
    \ DNS (Domain Name System) is a global lookup repository\n   with perimeter integrity\
    \ and loose, converging consistency.  On the\n   other hand, a LDAP (Lightweight\
    \ Directory Access Protocol) directory\n   server is a local, centralized repository\
    \ with both lookup and search\n   capability.\n   This document discusses one\
    \ group of such systems which is known\n   under the term, \"directories\".\n"
- title: 1. Introduction and basic terms
  contents:
  - "1. Introduction and basic terms\n   We suggest using the following terms for\
    \ the remainder of this\n   document:\n   -  Information: Facts and ideas which\
    \ can be represented (encoded) as\n      data in various forms.\n   -  Data: Information\
    \ in a specific physical representation, usually a\n      sequence of symbols\
    \ that have meaning; especially a representation\n      of information that can\
    \ be processed or produced by a computer.\n      (From [SEC].)\n   -  Repository:\
    \ An amount of data that is accessible through one or\n      more access methods.\n\
    \   -  Requester: Entity that may (try to) access data in a repository.\n    \
    \  Note that no assumption is made that the requester is animal,\n      vegetable,\
    \ or mineral.\n   -  Maintainer: Entity that causes changes to the data in the\n\
    \      repository. Usually, all maintainers are requesters, since they\n     \
    \ need to look at the data too, however, the roles are distinct.\n   -  Access\
    \ method: Well-defined series of operations that will cause\n      data available\
    \ from a repository to be obtained by the requester.\n   -  Site: Entity that\
    \ hosts all or part of a repository, and makes it\n      available through one\
    \ or more access methods.  A site may in\n      various contexts be a machine,\
    \ a datacenter, a network of\n      datacenters, or a single device.\n   This\
    \ document is not intended to be either comprehensive or\n   definitive, but is\
    \ intended to give some aid in mutual comprehension\n   when discussing information\
    \ access methods to be incorporated into\n   Internet Standards-Track documents.\n"
- title: 2. Dimensions of classification
  contents:
  - '2. Dimensions of classification

    '
- title: 2.1 Uniqueness and scope
  contents:
  - "2.1 Uniqueness and scope\n   Some information systems are global, in the sense\
    \ that only one can\n   sensibly exist in the world.\n   Others are inherently\
    \ local, in that each locality, site or even box\n   will run its own information\
    \ store, independent of all others.\n   The following terms are suggested:\n \
    \  -  Global repository: A repository that there can be only one of in\n     \
    \ the world.  The world itself is a prime example; the public\n      telephone\
    \ system's number assignments according to E.164 is\n      another.\n   -  Local\
    \ repository: A class of repository of which multiple\n      instances can exist,\
    \ each with information relevant to that\n      particular repository, with no\
    \ need for coordination between them.\n   -  Centralized repository: A repository\
    \ where all access to data has\n      to pass through some single site.\n   -\
    \  Distributed repository: A repository that is not centralized; that\n      is,\
    \ access to data can occur through multiple sites.\n   -  Replicated repository:\
    \ A distributed repository where all sites\n      have the same information.\n\
    \   -  Cooperative repository: A distributed repository where not all\n      sites\
    \ have all the information, but where mechanisms exist to get\n      the info\
    \ to the requester, even when it is not available to the\n      site originally\
    \ asked.\n   Note: The term \"global\" is often a matter of social or legal context;\n\
    \   for instance, the E.164 telephone numbering system is global by\n   international\
    \ treaty, while the debate about whether the Domain Name\n   System is global\
    \ in fact or just a local repository with ambitions\n   has proved bait for too\
    \ many discussions to enumerate.\n   Some claim that globality is in the eye of\
    \ the beholder; \"everything\n   is local to some context\".  When discussing\
    \ technology, it may be\n   wise to use \"very widely deployed\" instead.\n  \
    \ Note: Locating the repositories changes with the scale of\n   consideration.\
    \  For instance, the global DNS system is considered a\n   distributed cooperative\
    \ repository, built out of zone repositories\n   that themselves may be distributed,\
    \ and are always replicated when\n   distributed.\n"
- title: 2.2 Search, Lookup, Query and Notify
  contents:
  - "2.2 Search, Lookup, Query and Notify\n   A different consideration when describing\
    \ repositories is the types\n   of method they offer to find information.\n  \
    \ The chief classifications are:\n   -  Lookup methods require the user to know\
    \ or guess some exact value\n      before asking for information, sometimes called\
    \ a \"lookup key\" or\n      \"identifier\" and sometimes called a \"name\". \
    \ The word \"name\" is\n      NOT recommended, since it conflicts with other uses\
    \ of that word\n      The response to a successful lookup is a single group of\n\
    \      information, often called \"information about the identified\n      entity\"\
    . A lookup method is binary (yes/no) in recall: It either\n      returns one result\
    \ or no result; if it returns a result, that\n      result is the right result\
    \ for that lookup key, so it is also of\n      binary precision (no info or completely\
    \ relevant info).\n   -  Search methods require the user to know some approximate\
    \ value of\n      some information.  They usually return zero, one, or more\n\
    \      responses that match the information supplied according to some\n     \
    \ algorithm. Where the repository is structured around \"entities\",\n      the\
    \ information can be about zero, one, or many entities.\n   In database terms,\
    \ a lookup method corresponds to a query exactly\n   matching a unique key on\
    \ a table; all other database queries would be\n   classified as \"search\" methods.\n\
    \   In general, repositories that offer more flexible search methods may\n   also\
    \ give room for ad-hoc queries, refinements from a previous query,\n   approximate\
    \ matching and other aids; this may lead to many different\n   combinations of\
    \ precision and recall.\n   One may define terms to enumerate what one gets out\
    \ of these\n   repositories:\n      .  Precision is the degree to which what you\
    \ asked for is what you\n         wanted (no extraneous information)\n      .\
    \  Recall is the ability to assure oneself that all relevant data\n         from\
    \ the repository is returned\n      .  Type I errors occurs when relevant data\
    \  exists in the\n         repository, but is not returned\n      .  Type II errors\
    \ occur when irrelevant data is returned with a\n         query result\n   Note\
    \ that these concepts can only be applied when the property\n   \"relevance\"\
    \ is well defined; that is, it depends on what the\n   repository is used for.\
    \  A further discussion of these topics is\n   found in [KORFHAGE].\n   An orthogonal\
    \ dimension has to do with time:\n   -  Query repositories will answer a request\
    \ with a response, and once\n      that is over with, will do nothing more.\n\
    \   -  Notify repositories will get a request from a user to have\n      information\
    \ returned at some later time when it becomes available,\n      current or whatever,\
    \ and will respond at that time with a\n      notification that information is\
    \ available.\n   -  Subscription repositories are like notify repositories, but\
    \ will\n      transfer the actual information when available.\n"
- title: 2.3 Consistency models
  contents:
  - "2.3 Consistency models\n   Consistency (or the lack thereof) is a property of\
    \ distributed\n   repositories; for this particular discussion, we ignore the\
    \ subject\n   of semantically inconsistent data (such as occurrences of pregnant\n\
    \   men), and focus on the problem of consistency where inconsistency is\n   defined\
    \ as having the same request, using the same credentials, be\n   answered with\
    \ different data at different sites.\n   Distributed repositories may have:\n\
    \   -  Strict consistency, where the problem above never arises.  This is\n  \
    \    quite difficult; repositories that exhibit this property are\n      usually\
    \ quite constrained and/or quite expensive.\n   -  Strict internal consistency,\
    \ where the replies always reflect a\n      consistent picture of the total repository,\
    \ but some sites may\n      reflect an earlier version of the repository than\
    \ others.\n   -  Loose, converging consistency, where different parts of the\n\
    \      repository may be updated at different times as seen from a single\n  \
    \    site, but the process is designed in such a way that if one stops\n     \
    \ making changes to the repository, all sites will sooner or later\n      present\
    \ the same information.\n   -  Inconsistency, where no guarantee can be made whatsoever\n\
    \   One interesting variant is subset consistency, where the system is\n   consistent\
    \ (according to one of the definitions above), but not all\n   questions will\
    \ be answered at all sites; possibly because different\n   sites have different\
    \ policies on what they make available (NetNews),\n   or because different sites\
    \ only need different subsets of the \"whole\n   picture\" (BGP).\n"
- title: 2.4 Security models
  contents:
  - "2.4 Security models\n   Its harder to describe security models in a few sentences\
    \ than other\n   properties of information systems.  There also exists a large\n\
    \   specialized literature on terminology for security, including [SEC].\n   Some\
    \ thoughts, though:\n   On trust in data: Why do we trust a piece of data to be\
    \ correct?\n   -  Because it's in the repository (and therefore must have been\n\
    \      authorized).\n      This is perimeter (or Eggshell) integrity.\n   -  Because\
    \ it contains internal integrity checks, usually involving\n      digital signatures\
    \ by verifiable identities.  This is item\n      integrity; the granularity of\
    \ the integrity and the ability to do\n      integrity checks on the relationships\
    \ between objects is extremely\n      important and extremely hard to get right,\
    \ as is establishing the\n      roots of the trust chains.\n   -  Because it fits\
    \ other available information, and causes the right\n      things to happen when\
    \ I use it.\n      This is hopeful integrity.\n   Which integrity model to choose\
    \ is a matter of evaluating the cost of\n   implementing the integrity (cost),\
    \ the value to you of integrity of\n   the resource being protected (value), and\
    \ the impact of cost on doing\n   business (risk).\n   On access to information,\
    \ the usual categories apply:\n   -  Open access: Anyone can get the information.\n\
    \   -  Property-based access: Access because of what you are, or where\n     \
    \ you are.  For example limited to \"same network\", \"physically\n      present\"\
    , or \"resolvable DNS name\"\n   -  Identity-based access: Access because of who\
    \ you are (or\n      successfully claim to be).  (I.e., username/password, personal\n\
    \      certificates or other verifiable information.)\n      These are then backed\
    \ up by a layer specifying what the identity\n      you have proven yourself to\
    \ be has access to.\n   -  Token-based access: Access because of what you have.\
    \  Hardware\n      tokens, smartcards, certificates, or capability keys.\n   \
    \   In this case, access is given to all who can present that\n      credential,\
    \ without caring about their identity.\n   The most common approaches are identity-based\
    \ and open access;\n   however, \"what you have\" access is commonly used informally\
    \ in, for\n   example, password-protected FTP or Web sites where the password\
    \ is\n   shared between all members of a group.\n"
- title: 2.5 Update models
  contents:
  - "2.5 Update models\n   A few examples:\n   -  Read-only repositories have no standard\
    \ means of changing the\n      information in them.  This is usually accomplished\
    \ through some\n      other interface than the standard interface.\n   -  Read-mostly\
    \ repositories are designed based on a theory that reads\n      will greatly outnumber\
    \ updates; this may, for instance, be\n      reflected in relatively slow consistency-updating\
    \ protocols.\n   -  Read-write repositories assume that the updates and the read\n\
    \      operations are of the same order of magnitude.\n   -  Write-mostly repositories\
    \ are designed to store an incoming stream\n      of data, and when needed reproduce\
    \ a relevant piece of data from\n      the stream.  Typical examples are insurance\
    \ company databases and\n      audit logs.\n"
- title: 2.6 The term "Directory"
  contents:
  - "2.6 The term \"Directory\"\n   The definitions above never used the term \"Directory\"\
    .\n   In most common usages, the properties that a repository must have in\n \
    \  order to be worthy of being called a directory are:\n   - Search\n   - Convergent\
    \ consistency\n   All the other terms above may vary across the set of things\
    \ that are\n   called \"directories\".\n"
- title: 3. Classification of some real systems
  contents:
  - '3. Classification of some real systems

    '
- title: 3.1 The Domain Name System
  contents:
  - "3.1 The Domain Name System\n   The DNS [DNS] is a global cooperative lookup repository\
    \ with loose,\n   converging consistency and query capability only.\n   It is\
    \ either strictly read-only or read-mostly (with Dynamic DNS),\n   has an open\
    \ access model, and mainly perimeter integrity (some would\n   say hopeful integrity).\
    \  DNSSEC [DNSSEC] aims to give it item\n   integrity.\n   The DNS is built out\
    \ of zone repositories that themselves may be\n   distributed, and are always\
    \ replicated when distributed.\n   Note that like many other systems, the DNS\
    \ has some features that do\n   not fit neatly in the classification; for instance,\
    \ there is a\n   (deprecated and not widely used) function called IQUERY, which\
    \ allows\n   a very limited query capability.\n   If one opens up the box and\
    \ looks at the relationship between primary\n   and secondary nameservers, that\
    \ can be seen as a limited form of\n   notify capability, but this is not available\
    \ to end-users of the\n   total system.\n"
- title: 3.2 The (imagined) X.500 Global Directory
  contents:
  - "3.2 The (imagined) X.500 Global Directory\n   X.500 [X500] was intended to be\
    \ a global search repository with\n   loose, converging consistency.\n   It was\
    \ intended to be read-mostly, perimeter secure and query-\n   capable.\n"
- title: 3.3 The Global BGP Routing Information Database
  contents:
  - "3.3 The Global BGP Routing Information Database\n   The Global or top-level BGP\
    \ routing information database [BGP1] is\n   often viewed as a global read-write\
    \ repository with loose, converging\n   subset consistency (not all routes are\
    \ carried everywhere) and very\n   limited integrity control, mostly intended\
    \ to be perimeter integrity\n   based on, \"access control based on what you are\"\
    .\n   One can argue that BGP [BGP2] is better viewed as a global mechanism\n \
    \  for updating a set of local read/write repositories, since far from\n   all\
    \ routing information is carried everywhere, and the decision on\n   what routes\
    \ to accept is always considered a local policy matter.\n   But from a security\
    \ model perspective, a lot of the controls are\n   applied at the periphery of\
    \ the routing system, not at each local\n   repository; this still makes it interesting\
    \ to consider properties\n   that apply to the BGP system as a whole.\n"
- title: 3.4 The NetNews system
  contents:
  - "3.4 The NetNews system\n   NetNews [NEWS] is a global read-write repository with\
    \ loose (non-\n   converging) subset consistency (not all sites carry all articles,\
    \ and\n   article retention times differ).  Between sites it offers\n   subscription\
    \ capability; to users it offers both search and lookup\n   functionality.\n"
- title: 3.5 SNMP MIBs
  contents:
  - "3.5 SNMP MIBs\n   An SNMP [SNMP] agent can be thought of as a local, centralized\n\
    \   repository offering lookup functionality.\n   With SNMPv3, it offers all kinds\
    \ of access models, but mostly,\n   \"access because of what you have\", seems\
    \ popular.\n"
- title: 4. Security Considerations
  contents:
  - "4. Security Considerations\n   Security is a very relevant question when considering\
    \ information\n   access systems.\n      Some issues to consider are:\n      -\
    \ Controlled access to information\n      - Controlled rights to update information\n\
    \      - Protection of the information path from provider to consumer\n      -\
    \ With personal information, privacy issues\n      - Interactions between multiple\
    \ ways to access the same\n        information\n   It is probably a Good Thing\
    \ to consider carefully the security models\n   from section 2.4 when designing\
    \ repositories or repository access\n   protocols.\n"
- title: 5. Acknowledgement
  contents:
  - "5. Acknowledgement\n   The author wishes to thank all who contributed to this\
    \ document,\n   including Patrik Faltstrom, Eric A. Hall, James Benedict, Ted\
    \ Hardie,\n   Urs Eppenberger, John Klensin, and many others.\n"
- title: 6. References
  contents:
  - "6. References\n   [SEC]       Shirey, R., \"Internet Security Glossary\", FYI\
    \ 36, RFC\n               2828, May 2000.\n   [DNS]       Mockapetris, P., \"\
    Domain names - concepts and\n               facilities\", STD 13, RFC 1034, November\
    \ 1987.\n   [DNSSEC]    Eastlake, D., \"Domain Name System Security Extensions\"\
    ,\n               RFC 2535, March 1999.\n   [E164]      ITU-T Recommendation E.164/I.331\
    \ (05/97): The\n               International Public Telecommunication Numbering\
    \ Plan.\n               1997.\n   [BGP1]     \"Analyzing the Internet's BGP Routing\
    \ Table\", published in\n               \"The Internet Protocol Journal\", Volume\
    \ 4, No 1, April\n               2001.  At the time of writing, available at\n\
    \               http://www.telstra.net/gih/papers/ipj/4-1-bgp.pdf\n   [BGP2] \
    \     Rekhter, Y. and T. Li, \"A Border Gateway Protocol 4\n               (BGP-4)\"\
    , RFC 1771, March 1995.\n   [NEWS]      Kantor, B. and P. Lapsley, \"Network News\
    \ Transfer\n               Protocol\", RFC 977, February 1986.\n   [SNMP]    \
    \  Case, J., Mundy, R., Partain, D. and B. Stewart,\n               \"Introduction\
    \ to Version 3 of the Internet-standard\n               Network Management Framework\"\
    , RFC 2570, April 1999.\n   [X500]      Weider, C. and J. Reynolds, \"Executive\
    \ Introduction to\n               Directory Services Using the X.500 Protocol\"\
    , FYI 13, RFC\n               1308, March 1992.\n   [KORFHAGE] \"Information Storage\
    \ and Retrieval\", Robert R. Korfhage,\n               Wiley 1997.  See page 194\
    \ for \"precision\" and \"recall\"\n               definitions.\n"
- title: 7. Author's Address
  contents:
  - "7. Author's Address\n   Harald Tveit Alvestrand\n   Cisco Systems\n   Weidemanns\
    \ vei 27\n   N-7043 Trondheim\n   NORWAY\n   Phone: +47 41 44 29 94\n   EMail:\
    \ Harald@alvestrand.no\n"
- title: 8.  Full Copyright Statement
  contents:
  - "8.  Full Copyright Statement\n   Copyright (C) The Internet Society (2002). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
