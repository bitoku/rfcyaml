- title: __initial_text__
  contents:
  - "          RTP Payload Formats for European Telecommunications\n             \
    \ Standards Institute (ETSI) European Standard\n                 ES 202 050, ES\
    \ 202 211, and ES 202 212\n                Distributed Speech Recognition Encoding\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies RTP payload formats for encapsulating\n\
    \   European Telecommunications Standards Institute (ETSI) European\n   Standard\
    \ ES 202 050 DSR Advanced Front-end (AFE), ES 202 211 DSR\n   Extended Front-end\
    \ (XFE), and ES 202 212 DSR Extended Advanced\n   Front-end (XAFE) signal processing\
    \ feature streams for distributed\n   speech recognition (DSR) systems.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \      1.1. Conventions and Acronyms ...................................3\n  \
    \ 2. ETSI DSR Front-end Codecs .......................................4\n    \
    \  2.1. ES 202 050 Advanced DSR Front-end Codec ....................4\n      2.2.\
    \ ES 202 211 Extended DSR Front-end Codec ....................4\n      2.3. ES\
    \ 202 212 Extended Advanced DSR Front-end Codec ...........5\n   3. DSR RTP Payload\
    \ Formats .........................................6\n      3.1. Common Considerations\
    \ of the Three DSR RTP Payload\n           Formats ....................................................6\n\
    \           3.1.1. Number of FPs in Each RTP Packet ....................6\n  \
    \         3.1.2. Support for Discontinuous Transmission ..............6\n    \
    \       3.1.3. RTP Header Usage ....................................6\n      3.2.\
    \ Payload Format for ES 202 050 DSR ..........................7\n           3.2.1.\
    \ Frame Pair Formats ..................................7\n      3.3. Payload Format\
    \ for ES 202 211 DSR ..........................9\n           3.3.1. Frame Pair\
    \ Formats ..................................9\n      3.4. Payload Format for ES\
    \ 202 212 DSR .........................11\n           3.4.1. Frame Pair Formats\
    \ .................................12\n   4. IANA Considerations ............................................14\n\
    \      4.1. Mapping MIME Parameters into SDP ..........................15\n  \
    \    4.2. Usage in Offer/Answer .....................................16\n    \
    \  4.3. Congestion Control ........................................16\n   5. Security\
    \ Considerations ........................................16\n   6. Acknowledgments\
    \ ................................................16\n   7. References .....................................................16\n\
    \      7.1. Normative References ......................................16\n  \
    \    7.2. Informative References ....................................17\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Distributed speech recognition (DSR) technology is intended\
    \ for a\n   remote device acting as a thin client (a.k.a. the front-end) to\n\
    \   communicate with a speech recognition server (a.k.a. a speech\n   engine),\
    \ over a network connection to obtain speech recognition\n   services.  More details\
    \ on DSR over Internet can be found in RFC 3557\n   [10].\n   To achieve interoperability\
    \ with different client devices and speech\n   engines, the first ETSI standard\
    \ DSR front-end ES 201 108 was\n   published in early 2000 [11].  An RTP packetization\
    \ for ES 201 108\n   frames is defined in RFC 3557 [10] by IETF.\n   In ES 202\
    \ 050 [1], ETSI issues another standard for an Advanced DSR\n   front-end that\
    \ provides substantially improved recognition\n   performance when background\
    \ noise is present.  The codecs in ES 202\n   050 use a slightly different frame\
    \ format from that of ES 201 108 and\n   thus the two do not inter-operate with\
    \ each other.\n   The RTP packetization for ES 202 050 front-end defined in this\n\
    \   document uses the same RTP packet format layout as that defined in\n   RFC\
    \ 3557 [10].  The differences are in the DSR codec frame bit\n   definition and\
    \ the payload type MIME registration.\n   The two further standards, ES 202 211\
    \ and ES 202 212, provide\n   extensions to each of the DSR front-end standards.\
    \  The extensions\n   allow the speech waveform to be reconstructed for human\
    \ audition and\n   can also be used to improve recognition performance for tonal\n\
    \   languages.  This is done by sending additional pitch and voicing\n   information\
    \ for each frame along with the recognition features.\n   The RTP packet format\
    \ for these extended standards is also defined in\n   this document.\n   It is\
    \ worthwhile to note that the performance of most speech\n   recognizers are extremely\
    \ sensitive to consecutive frame losses and\n   DSR speech recognizers are no\
    \ exception.  If a DSR over RTP session\n   is expected to endure high packet\
    \ loss ratio between the front-end\n   and the speech engine, one should consider\
    \ limiting the maximum\n   number of DSR frames allowed in a packet, or employing\
    \ other loss\n   management techniques, such as FEC or interleaving, to minimize\
    \ the\n   chance of losing consecutive frames.\n"
- title: 1.1.  Conventions and Acronyms
  contents:
  - "1.1.  Conventions and Acronyms\n   The keywords MUST, MUST NOT, REQUIRED, SHALL,\
    \ SHALL NOT, SHOULD,\n   SHOULD NOT, RECOMMENDED, NOT RECOMMENDED, MAY, and OPTIONAL,\
    \ when\n   they appear in this document, are to be interpreted as described in\n\
    \   RFC 2119 [4].\n   The following acronyms are used in this document:\n    \
    \  DSR  - Distributed Speech Recognition\n      ETSI - the European Telecommunications\
    \ Standards Institute\n      FP   - Frame Pair\n      DTX  - Discontinuous Transmission\n\
    \      VAD  - Voice Activity Detection\n"
- title: 2.  ETSI DSR Front-end Codecs
  contents:
  - "2.  ETSI DSR Front-end Codecs\n   Some relevant characteristics of ES 202 050\
    \ Advanced, ES 202 211\n   Extended, and ES 202 212 Extended Advanced DSR front-end\
    \ codecs are\n   summarized below.\n"
- title: 2.1.  ES 202 050 Advanced DSR Front-end Codec
  contents:
  - "2.1.  ES 202 050 Advanced DSR Front-end Codec\n   The front-end calculation is\
    \ a frame-based scheme that produces an\n   output vector every 10 ms.  In the\
    \ front-end feature extraction,\n   noise reduction by two stages of Wiener filtering\
    \ is performed first.\n   Then, waveform processing is applied to the de-noised\
    \ signal and\n   mel-cepstral features are calculated.  At the end, blind equalization\n\
    \   is applied to the cepstral features.  The front-end algorithm\n   produces\
    \ at its output a mel-cepstral representation in the same\n   format as ES 210\
    \ 108, i.e., 12 cepstral coefficients [C1 - C12], C0\n   and log Energy.  Voice\
    \ activity detection (VAD) for the\n   classification of each frame as speech\
    \ or non-speech is also\n   implemented in Feature Extraction.  The VAD information\
    \ is included\n   in the payload format for each frame pair to be sent to the\
    \ remote\n   recognition engine as part of the payload.  This information may\n\
    \   optionally be used by the receiving recognition engine to drop\n   non-speech\
    \ frames.  The front-end supports three raw sampling rates:\n   8 kHz, 11 kHz,\
    \ and 16 kHz (Note that unlike some other speech codecs,\n   the feature frame\
    \ size of DSR presented to RTP packetization is not\n   dependent on the number\
    \ of speech samples used in each 10 ms sample\n   frame.  This will become more\
    \ evident in the following sections).\n   After calculation of the mel-cepstral\
    \ representation, the\n   representation is first quantized via split-vector quantization\
    \ to\n   reduce the data rate of the encoded stream.  Then, the quantized\n  \
    \ vectors from two consecutive frames are put into a FP, as described\n   in more\
    \ detail in Section 3.2.\n"
- title: 2.2.  ES 202 211 Extended DSR Front-end Codec
  contents:
  - "2.2.  ES 202 211 Extended DSR Front-end Codec\n   Some relevant characteristics\
    \ of ES 202 211 Extended DSR front-end\n   codec are summarized below.\n   ES\
    \ 202 211 is an extension of the mel-cepstrum DSR Front-end standard\n   ES 201\
    \ 108 [11].  The mel-cepstrum front-end provides the features\n   for speech recognition\
    \ but these are not available for human\n   listening.  The purpose of the extension\
    \ is allow the reconstruction\n   of the speech waveform from these features so\
    \ that they can be\n   replayed.  The front-end feature extraction part of the\
    \ processing is\n   exactly the same as for ES 201 108.  To allow speech reconstruction\n\
    \   additional fundamental frequency (perceived as pitch) and voicing\n   class\
    \ (e.g., non-speech, voiced, unvoiced and mixed) information is\n   needed.  This\
    \ extra information is provided by the extended front-end\n   processing algorithms\
    \ at the device side.  It is compressed and\n   transmitted along with the front-end\
    \ features to the server.  This\n   extra information may also be useful for improved\
    \ speech recognition\n   performance with tonal languages such as Mandarin, Cantonese\
    \ and\n   Thai.\n   Full information about the client side signal processing algorithms\n\
    \   used in the standard are described in the specification ES 202 211\n   [2].\n\
    \   The additional fundamental frequency and voicing class information is\n  \
    \ compressed for each frame pair.  The pitch for the first frame of the\n   FP\
    \ is quantized to 7 bits and the second frame is differentially\n   quantized\
    \ to 7 bits.  The voicing class is indicated with one bit for\n   each frame.\
    \  The total for the extension information for a frame pair\n   therefore consists\
    \ of 14 bits plus an additional 2 bits of CRC error\n   protection computed over\
    \ these extension bits only.\n   The total information for the frame pair is made\
    \ up of 92 bits for\n   the two compressed front-end feature frames (including\
    \ 4 bits for\n   their CRC) plus 16 bits for the extension (including 2 bits for\
    \ their\n   CRC) and 4 bits of null padding to give a total of 14 octets per\n\
    \   frame pair.  As for ES 201 208 the extended frame pair also\n   corresponds\
    \ to 20ms of speech.  The extended front-end supports three\n   raw sampling rates:\
    \ 8 kHz, 11 kHz, and 16 kHz.\n   The quantized vectors from two consecutive frames\
    \ are put into an FP,\n   as described in more detail in Section 3.3 below.\n\
    \   The parameters received at the remote server from the RTP extended\n   DSR\
    \ payload specified here can be used to synthesize an intelligible\n   speech\
    \ waveform for replay.  The algorithms to do this are described\n   in the specification\
    \ ES 202 211 [2].\n"
- title: 2.3.  ES 202 212 Extended Advanced DSR Front-end Codec
  contents:
  - "2.3.  ES 202 212 Extended Advanced DSR Front-end Codec\n   ES 202 212 is the\
    \ extension for the DSR Advanced Front-end ES 202 050\n   [1].  It provides the\
    \ same capabilities as the extended mel-cepstrum\n   front-end described in Section\
    \ 2.2 but for the DSR Advanced\n   Front-end.\n"
- title: 3.  DSR RTP Payload Formats
  contents:
  - '3.  DSR RTP Payload Formats

    '
- title: 3.1.  Common Considerations of the Three DSR RTP Payload Formats
  contents:
  - "3.1.  Common Considerations of the Three DSR RTP Payload Formats\n   The three\
    \ DSR RTP payload formats defined in this document share the\n   following consideration\
    \ or behaviours.\n"
- title: 3.1.1.  Number of FPs in Each RTP Packet
  contents:
  - "3.1.1.  Number of FPs in Each RTP Packet\n   Any number of FPs MAY be aggregate\
    \ together in an RTP payload and\n   they MUST be consecutive in time.  However,\
    \ one SHOULD always keep\n   the RTP payload size smaller than the MTU in order\
    \ to avoid IP\n   fragmentation and SHOULD follow the recommendations given in\
    \ Section\n   3.1 in RFC 3557 [10] when determining the proper number of FPs in\
    \ an\n   RTP payload.\n"
- title: 3.1.2.  Support for Discontinuous Transmission
  contents:
  - "3.1.2.  Support for Discontinuous Transmission\n   Same considerations described\
    \ in Section 3.2 of RFC 3557 [10] apply\n   to all the three DSR RTP payloads\
    \ defined in this document.\n"
- title: 3.1.3.  RTP Header Usage
  contents:
  - "3.1.3.  RTP Header Usage\n   The format of the RTP header is specified in RFC\
    \ 3550 [8].  The three\n   payload formats defined here use the fields of the\
    \ header in a manner\n   consistent with that specification.\n   The RTP timestamp\
    \ corresponds to the sampling instant of the first\n   sample encoded for the\
    \ first FP in the packet.  The timestamp clock\n   frequency is the same as the\
    \ sampling frequency, so the timestamp\n   unit is in samples.\n   As defined\
    \ by all three front-end codecs, the duration of one FP is\n   20 ms, corresponding\
    \ to 160, 220, or 320 encoded samples with a\n   sampling rate of 8, 11, or 16\
    \ kHz being used at the front-end,\n   respectively.  Thus, the timestamp is increased\
    \ by 160, 220, or 320\n   for each consecutive FP, respectively.\n   The DSR payload\
    \ for all three front-end codecs is always an integral\n   number of octets. \
    \ If additional padding is required for some other\n   purpose, then the P bit\
    \ in the RTP header may be set and padding\n   appended as specified in RFC 3550\
    \ [8].\n   The RTP header marker bit (M) MUST be set following the general rules\n\
    \   for audio codecs, as defined in Section 4.1 in RFC 3551 [9].\n   This document\
    \ does not specify the assignment of an RTP payload type\n   for these three new\
    \ packet formats.  It is expected that the RTP\n   profile under which any of\
    \ these payload formats is being used will\n   assign a payload type for this\
    \ encoding or will specify that the\n   payload type is to be bound dynamically.\n"
- title: 3.2.  Payload Format for ES 202 050 DSR
  contents:
  - "3.2.  Payload Format for ES 202 050 DSR\n   An ES 202 050 DSR RTP payload datagram\
    \ uses exactly the same layout\n   as defined in Section 3 of RFC 3557 [10], i.e.,\
    \ a standard RTP header\n   followed by a DSR payload containing a series of DSR\
    \ FPs.\n   The size of each ES 202 050 FP remains 96 bits or 12 octets, as\n \
    \  defined in the following sections.  This ensures that a DSR RTP\n   payload\
    \ will always end on an octet boundary.\n"
- title: 3.2.1.  Frame Pair Formats
  contents:
  - '3.2.1.  Frame Pair Formats

    '
- title: 3.2.1.1.  Format of Speech and Non-speech FPs
  contents:
  - "3.2.1.1.  Format of Speech and Non-speech FPs\n   The following mel-cepstral\
    \ frame MUST be used, as defined in [1]:\n   Pairs of the quantized 10ms mel-cepstral\
    \ frames MUST be grouped\n   together and protected with a 4-bit CRC forming a\
    \ 92-bit long FP.  At\n   the end, each FP MUST be padded with 4 zeros to the\
    \ MSB 4 bits of the\n   last octet in order to make the FP aligned to the octet\
    \ boundary.\n   The following diagram shows a complete ES 202 050 FP:\n     Frame\
    \ #1 in FP:\n     ===============\n        (MSB)                             \
    \        (LSB)\n          0     1     2     3     4     5     6     7\n      \
    \ +-----+-----+-----+-----+-----+-----+-----+-----+\n       :  idx(2,3) |    \
    \        idx(0,1)               |    Octet 1\n       +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \       :       idx(4,5)        |     idx(2,3) (cont)   :    Octet 2\n       +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \       |             idx(6,7)              |idx(4,5)(cont)  Octet 3\n       +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \   idx(10,11)| VAD |              idx(8,9)             |    Octet 4\n       +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \       :       idx(12,13)      |   idx(10,11) (cont)   :    Octet 5\n       +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \                               |   idx(12,13) (cont)   :    Octet 6/1\n     \
    \                          +-----+-----+-----+-----+\n    Frame #2 in FP:\n  \
    \  ===============\n        (MSB)                                     (LSB)\n\
    \          0     1     2     3     4     5     6     7\n       +-----+-----+-----+-----+\n\
    \       :        idx(0,1)       |                            Octet 6/2\n     \
    \  +-----+-----+-----+-----+-----+-----+-----+-----+\n       |              idx(2,3)\
    \             |idx(0,1)(cont)  Octet 7\n       +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \       :  idx(6,7) |              idx(4,5)             |    Octet 8\n       +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \       :        idx(8,9)       |      idx(6,7) (cont)  :    Octet 9\n       +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \       |          idx(10,11)         | VAD |idx(8,9)(cont)  Octet 10\n      \
    \ +-----+-----+-----+-----+-----+-----+-----+-----+\n       |                \
    \   idx(12,13)                  |    Octet 11\n       +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \    CRC for Frame #1 and Frame #2 and padding in FP:\n    ================================================\n\
    \        (MSB)                                     (LSB)\n          0     1  \
    \   2     3     4     5     6     7\n       +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \       |  0  |  0  |  0  |  0  |          CRC          |    Octet 12\n      \
    \ +-----+-----+-----+-----+-----+-----+-----+-----+\n   The 4-bit CRC in the FP\
    \ MUST be calculated using the formula\n   (including the bit-order rules) defined\
    \ in 7.2 in [1].\n   Therefore, each FP represents 20ms of original speech.  Note\
    \ that\n   each FP MUST be padded with 4 zeros to the MSB 4 bits of the last\n\
    \   octet in order to make the FP aligned to the octet boundary, as shown\n  \
    \ above.  This makes the total size of an FP 96 bits, or 12 octets.\n   Note that\
    \ this padding is separate from padding indicated by the P\n   bit in the RTP\
    \ header.\n   The definition of the indices and 'VAD' flag are described in [1]\
    \ and\n   their value is only set and examined by the codecs in the front-end\n\
    \   client and the recognizer.\n"
- title: 3.2.1.2.  Format of Null FP
  contents:
  - "3.2.1.2.  Format of Null FP\n   Null FPs are sent to mark the end of a transmission\
    \ segment.  Details\n   on transmission segment and the use of Null FPs can be\
    \ found in RFC\n   3557 [10].\n   A Null FP for the ES 202 050 front-end codec\
    \ is defined by setting\n   the content of the first and second frame in the FP\
    \ to null (i.e.,\n   filling the first 88 bits of the FP with zeros).  The 4-bit\
    \ CRC MUST\n   be calculated the same way as described in Section 7.2.4 of [1],\
    \ and\n   4 zeros MUST be padded to the end of the Null FP in order to make it\n\
    \   aligned to the octet boundary.\n"
- title: 3.3.  Payload Format for ES 202 211 DSR
  contents:
  - "3.3.  Payload Format for ES 202 211 DSR\n   An ES 202 211 DSR RTP payload datagram\
    \ is very similar to that\n   defined in Section 3 of RFC 3557 [10], i.e., a standard\
    \ RTP header\n   followed by a DSR payload containing a series of DSR FPs.\n \
    \  The size of each ES 202 211 FP is 112 bits or 14 octets, as defined\n   in\
    \ the following sections.  This ensures that a DSR RTP payload will\n   always\
    \ end on an octet boundary.\n"
- title: 3.3.1.  Frame Pair Formats
  contents:
  - '3.3.1.  Frame Pair Formats

    '
- title: 3.3.1.1.  Format of Speech and Non-speech FPs
  contents:
  - "3.3.1.1.  Format of Speech and Non-speech FPs\n   The following mel-cepstral\
    \ frame MUST be used, as defined in Section\n   6.2.4 in [2]:\n   Immediately\
    \ following two frames (Frame #1 and Frame #2) worth of\n   codebook indices (or\
    \ 88 bits), there is a 4-bit CRC calculated on\n   these 88 bits.  The pitch indices\
    \ of the first frame (Pidx1: 7 bits)\n   and the second frame (Pidx2: 5 bits)\
    \ of the frame pair then follow.\n   The class indices of the two frames in the\
    \ frame pair worth 1 bit\n   each (Cidx1 and Cidx2) next follow.  Finally, a 2-bit\
    \ CRC calculated\n   on the pitch and class bits (total: 14 bits) of the frame\
    \ pair is\n   included (PC-CRC).  The total number of bits in a frame pair packet\n\
    \   is therefore 44 + 44 + 4 + 7 + 5 + 1 + 1 + 2 = 108.  At the end, each\n  \
    \ FP MUST be padded with 4 zeros to the MSB 4 bits of the last octet in\n   order\
    \ to make the FP aligned to the octet boundary.\n   The following diagram shows\
    \ a complete ES 202 211 FP:\n     Frame #1 in FP:\n     ===============\n    \
    \   (MSB)                                     (LSB)\n         0     1     2  \
    \   3     4     5     6     7\n      +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \      :  idx(2,3) |            idx(0,1)               |    Octet 1\n      +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \      :       idx(4,5)        |     idx(2,3) (cont)   :    Octet 2\n      +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \      |             idx(6,7)              |idx(4,5)(cont)  Octet 3\n      +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \       idx(10,11) |              idx(8,9)             |    Octet 4\n      +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \      :       idx(12,13)      |   idx(10,11) (cont)   :    Octet 5\n      +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \                              |   idx(12,13) (cont)   :    Octet 6/1\n      \
    \                        +-----+-----+-----+-----+\n    Frame #2 in FP:\n    ===============\n\
    \       (MSB)                                     (LSB)\n         0     1    \
    \ 2     3     4     5     6     7\n      +-----+-----+-----+-----+\n      :  \
    \      idx(0,1)       |                            Octet 6/2\n      +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \      |              idx(2,3)             |idx(0,1)(cont)  Octet 7\n      +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \      :  idx(6,7) |              idx(4,5)             |    Octet 8\n      +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \      :        idx(8,9)       |      idx(6,7) (cont)  :    Octet 9\n      +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \      |          idx(10,11)               |idx(8,9)(cont)  Octet 10\n      +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \      |                   idx(12,13)                  |    Octet 11\n      +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \    CRC for Frame #1 and Frame #2 in FP:\n    ====================================\n\
    \       (MSB)                                     (LSB)\n         0     1    \
    \ 2     3     4     5     6     7\n                              +-----+-----+-----+-----+\n\
    \                              |          CRC          |    Octet 12/1\n     \
    \                         +-----+-----+-----+-----+\n    Extension information\
    \ and padding in FP:\n    ========================================\n       (MSB)\
    \                                     (LSB)\n         0     1     2     3    \
    \ 4     5     6     7\n      +-----+-----+-----+-----+\n      :       Pidx1  \
    \         |                            Octet 12/2\n      +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \      |            Pidx2            |   Pidx1 (cont)  :    Octet 13\n      +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \      |  0  |  0  |  0  |  0  |  PC-CRC   |Cidx2|Cidx1|    Octet 14\n      +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \   The 4-bit CRC and the 2-bit PC-CRC in the FP MUST be calculated using\n  \
    \ the formula (including the bit-order rules) defined in 6.2.4 in [2].\n   Therefore,\
    \ each FP represents 20ms of original speech.  Note, as\n   shown above, each\
    \ FP MUST be padded with 4 zeros to the MSB 4 bits of\n   the last octet in order\
    \ to make the FP aligned to the octet boundary.\n   This makes the total size\
    \ of an FP 112 bits, or 14 octets.  Note,\n   this padding is separate from padding\
    \ indicated by the P bit in the\n   RTP header.\n"
- title: 3.3.1.2.  Format of Null FP
  contents:
  - "3.3.1.2.  Format of Null FP\n   A Null FP for the ES 202 211 front-end codec\
    \ is defined by setting\n   all the 112 bits of the FP with zeros.  Null FPs are\
    \ sent to mark the\n   end of a transmission segment.  Details on transmission\
    \ segment and\n   the use of Null FPs can be found in RFC 3557 [10].\n"
- title: 3.4.  Payload Format for ES 202 212 DSR
  contents:
  - "3.4.  Payload Format for ES 202 212 DSR\n   Similar to other ETSI DSR front-end\
    \ encoding schemes, the encoded DSR\n   feature stream of ES 202 212 is transmitted\
    \ in a sequence of FPs,\n   where each FP represents two consecutive original\
    \ voice frames.\n   An ES 202 212 DSR RTP payload datagram is very similar to\
    \ that\n   defined in Section 3 of RFC 3557 [10], i.e., a standard RTP header\n\
    \   followed by a DSR payload containing a series of DSR FPs.\n   The size of\
    \ each ES 202 212 FP is 112 bits or 14 octets, as defined\n   in the following\
    \ sections.  This ensures that an ES 202 212 DSR RTP\n   payload will always end\
    \ on an octet boundary.\n"
- title: 3.4.1.  Frame Pair Formats
  contents:
  - '3.4.1.  Frame Pair Formats

    '
- title: 3.4.1.1.  Format of Speech and Non-speech FPs
  contents:
  - "3.4.1.1.  Format of Speech and Non-speech FPs\n   The following mel-cepstral\
    \ frame MUST be used, as defined in Section\n   7.2.4 of [3]:\n   Immediately\
    \ following two frames (Frame #1 and Frame #2) worth of\n   codebook indices (or\
    \ 88 bits), there is a 4-bit CRC calculated on\n   these 88 bits.  The pitch indices\
    \ of the first frame (Pidx1: 7 bits)\n   and the second frame (Pidx2: 5 bits)\
    \ of the frame pair then follow.\n   The class indices of the two frames in the\
    \ frame pair worth 1 bit\n   each next follow (Cidx1 and Cidx2).  Finally, a 2-bit\
    \ CRC (PC-CRC)\n   calculated on the pitch and class bits (total: 14 bits) of\
    \ the frame\n   pair is included.  The total number of bits in frame pair packet\
    \ is\n   therefore 44 + 44 + 4 + 7 + 5 + 1 + 1 + 2 = 108.  At the end, each FP\n\
    \   MUST be padded with 4 zeros to the MSB 4 bits of the last octet in\n   order\
    \ to make the FP aligned to the octet boundary.  The padding\n   brings the total\
    \ size of a FP to 112 bits, or 14 octets.  Note that\n   this padding is separate\
    \ from padding indicated by the P bit in the\n   RTP header.\n   The following\
    \ diagram shows a complete ES 202 212 FP:\n     Frame #1 in FP:\n     ===============\n\
    \        (MSB)                                     (LSB)\n          0     1  \
    \   2     3     4     5     6     7\n       +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \       :  idx(2,3) |            idx(0,1)               |    Octet 1\n       +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \       :       idx(4,5)        |     idx(2,3) (cont)   :    Octet 2\n       +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \       |             idx(6,7)              |idx(4,5)(cont)  Octet 3\n       +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \   idx(10,11)| VAD |              idx(8,9)             |    Octet 4\n       +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \       :       idx(12,13)      |   idx(10,11) (cont)   :    Octet 5\n       +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \                               |   idx(12,13) (cont)   :    Octet 6/1\n     \
    \                          +-----+-----+-----+-----+\n    Frame #2 in FP:\n  \
    \  ===============\n        (MSB)                                     (LSB)\n\
    \          0     1     2     3     4     5     6     7\n       +-----+-----+-----+-----+\n\
    \       :        idx(0,1)       |                            Octet 6/2\n     \
    \  +-----+-----+-----+-----+-----+-----+-----+-----+\n       |              idx(2,3)\
    \             |idx(0,1)(cont)  Octet 7\n       +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \       :  idx(6,7) |              idx(4,5)             |    Octet 8\n       +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \       :        idx(8,9)       |      idx(6,7) (cont)  :    Octet 9\n       +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \       |          idx(10,11)         | VAD |idx(8,9)(cont)  Octet 10\n      \
    \ +-----+-----+-----+-----+-----+-----+-----+-----+\n       |                \
    \   idx(12,13)                  |    Octet 11\n       +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \    CRC for Frame #1 and Frame #2 in FP:\n    ====================================\n\
    \        (MSB)                                     (LSB)\n          0     1  \
    \   2     3     4     5     6     7\n                               +-----+-----+-----+-----+\n\
    \                               |          CRC          |    Octet 12/1\n    \
    \                           +-----+-----+-----+-----+\n    Extension information\
    \ and padding in FP:\n    ========================================\n        (MSB)\
    \                                     (LSB)\n          0     1     2     3   \
    \  4     5     6     7\n       +-----+-----+-----+-----+\n       :       Pidx1\
    \           |                            Octet 12/2\n       +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \       |            Pidx2            |   Pidx1 (cont)  :    Octet 13\n      \
    \ +-----+-----+-----+-----+-----+-----+-----+-----+\n       |  0  |  0  |  0 \
    \ |  0  |  PC-CRC   |Cidx2|Cidx1|    Octet 14\n       +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \   The codebook indices, VAD flag, pitch index, and class index are\n   specified\
    \ in Section 6 of [3].  The 4-bit CRC and the 2-bit PC-CRC in\n   the FP MUST\
    \ be calculated using the formula (including the bit-order\n   rules) defined\
    \ in 7.2.4 in [3].\n"
- title: 3.4.1.2.  Format of Null FP
  contents:
  - "3.4.1.2.  Format of Null FP\n   A Null FP for the ES 202 212 front-end codec\
    \ is defined by setting\n   all 112 bits of the FP with zeros.  Null FPs are sent\
    \ to mark the end\n   of a transmission segment.  Details on transmission segments\
    \ and the\n   use of Null FPs can be found in RFC 3557 [10].\n"
- title: 4.  IANA Considerations
  contents:
  - "4.  IANA Considerations\n   For each of the three ETSI DSR front-end codecs covered\
    \ in this\n   document, a new MIME subtype registration has been registered by\
    \ the\n   IANA for the corresponding payload type, as described below.\n   Media\
    \ Type name: audio\n   Media subtype names:\n         dsr-es202050 (for ES 202\
    \ 050 front-end)\n         dsr-es202211 (for ES 202 211 front-end)\n         dsr-es202212\
    \ (for ES 202 212 front-end)\n   Required parameters: none\n   Optional parameters:\n\
    \   rate: Indicates the sample rate of the speech.  Valid values include:\n  \
    \    8000, 11000, and 16000.  If this parameter is not present, 8000\n      sample\
    \ rate is assumed.\n   maxptime: see RFC 3267 [7].  If this parameter is not present,\n\
    \      maxptime is assumed to be 80ms.\n      Note, since the performance of most\
    \ speech recognizers are\n      extremely sensitive to consecutive FP losses,\
    \ if the user of the\n      payload format expects a high packet loss ratio for\
    \ the session,\n      it MAY consider to explicitly choose a maxptime value for\
    \ the\n      session that is shorter than the default value.\n   ptime: see RFC\
    \ 2327 [5].\n   Encoding considerations: These types are defined for transfer\
    \ via RTP\n      [8] as described in Section 3 of RFC 4060.\n   Security considerations:\
    \ See Section 5 of RFC 4060.\n   Person & email address to contact for further\
    \ information:\n      Qiaobing.Xie@motorola.com\n   Intended usage: COMMON.  It\
    \ is expected that many VoIP applications\n      (as well as mobile applications)\
    \ will use this type.\n   Author: Qiaobing.Xie@motorola.com\n   Change controller:\
    \ IETF Audio/Video transport working group\n"
- title: 4.1.  Mapping MIME Parameters into SDP
  contents:
  - "4.1.  Mapping MIME Parameters into SDP\n   The information carried in the MIME\
    \ media type specification has a\n   specific mapping to fields in the Session\
    \ Description Protocol (SDP)\n   [5], which is commonly used to describe RTP sessions.\
    \  When SDP is\n   used to specify sessions employing ES 202 050, ES 202 211,\
    \ or ES 202\n   212 DSR codec, the mapping is as follows:\n   o  The MIME type\
    \ (\"audio\") goes in SDP \"m=\" as the media name.\n   o  The MIME subtype (\"\
    dsr-es202050\", \"dsr-es202211\", or\n      \"dsr-es202212\") goes in SDP \"a=rtpmap\"\
    \ as the encoding name.\n   o  The optional parameter \"rate\" also goes in \"\
    a=rtpmap\" as clock\n      rate.  If no rate is given, then the default value\
    \ (i.e., 8000) is\n      used in SDP.\n   o  The optional parameters \"ptime\"\
    \ and \"maxptime\" go in the SDP\n      \"a=ptime\" and \"a=maxptime\" attributes,\
    \ respectively.\n   Example of usage of ES 202 050 DSR:\n     m=audio 49120 RTP/AVP\
    \ 101\n     a=rtpmap:101 dsr-es202050/8000\n     a=maxptime:40\n   Example of\
    \ usage of ES 202 211 DSR:\n     m=audio 49120 RTP/AVP 101\n     a=rtpmap:101\
    \ dsr-es202211/8000\n     a=maxptime:40\n   Example of usage of ES 202 212 DSR:\n\
    \     m=audio 49120 RTP/AVP 101\n     a=rtpmap:101 dsr-es202212/8000\n     a=maxptime:40\n"
- title: 4.2.  Usage in Offer/Answer
  contents:
  - "4.2.  Usage in Offer/Answer\n   All SDP parameters in this payload format are\
    \ declarative, and all\n   reasonable values are expected to be supported.  Thus,\
    \ the standard\n   usage of Offer/Answer as described in RFC 3264 [6] should be\n\
    \   followed.\n"
- title: 4.3.  Congestion Control
  contents:
  - "4.3.  Congestion Control\n   Congestion control for RTP MUST be used in accordance\
    \ with RFC 3550\n   [8], and in any applicable RTP profile, e.g., RFC 3551 [9].\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   Implementations using the payload defined in\
    \ this specification are\n   subject to the security considerations discussed\
    \ in the RTP\n   specification RFC 3550 [8] and any RTP profile, e.g., RFC 3551\
    \ [9].\n   This payload does not specify any different security services.\n"
- title: 6.  Acknowledgments
  contents:
  - "6.  Acknowledgments\n   The design presented here is based on that of RFC 3557\
    \ [10].  The\n   authors wish to thank Magnus Westerlund and others for their\
    \ reviews\n   and comments.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [1]   European Telecommunications Standards Institute\
    \ (ETSI) Standard\n         ES 202 050, \"Speech Processing, Transmission and\
    \ Quality\n         Aspects (STQ); Distributed Speech Recognition; Advanced Front-\n\
    \         end Feature Extraction Algorithm; Compression Algorithms\",\n      \
    \   http://pda.etsi.org/pda/.\n   [2]   European Telecommunications Standards\
    \ Institute (ETSI) Standard\n         ES 202 211, \"Speech Processing, Transmission\
    \ and Quality\n         Aspects (STQ); Distributed Speech Recognition; Extended\
    \ front-\n         end feature extraction algorithm; Compression algorithms; Back-\n\
    \         end speech reconstruction algorithm\", http://pda.etsi.org/pda/.\n \
    \  [3]   European Telecommunications Standards Institute (ETSI) Standard\n   \
    \      ES 202 212, \"Speech Processing, Transmission and Quality\n         aspects\
    \ (STQ); Distributed speech recognition; Extended\n         advanced front-end\
    \ feature extraction algorithm; Compression\n         algorithms; Back-end speech\
    \ reconstruction algorithm\",\n         http://pda.etsi.org/pda/.\n   [4]   Bradner,\
    \ S., \"Key words for use in RFCs to Indicate Requirement\n         Levels\",\
    \ BCP 14, RFC 2119, March 1997.\n   [5]   Handley, M. and V. Jacobson, \"SDP:\
    \ Session Description\n         Protocol\", RFC 2327, April 1998.\n   [6]   Rosenberg,\
    \ J. and H. Schulzrinne, \"An Offer/Answer Model with\n         the Session Description\
    \ Protocol (SDP)\", RFC 3264, June 2002.\n   [7]   Sjoberg, J., Westerlund, M.,\
    \ Lakaniemi, A., and Q. Xie,\n         \"Real-Time Transport Protocol (RTP) Payload\
    \ Format and File\n         Storage Format for the Adaptive Multi-Rate (AMR) and\
    \ Adaptive\n         Multi-Rate Wideband (AMR-WB) Audio Codecs\", RFC 3267,\n\
    \         June 2002.\n   [8]   Schulzrinne, H., Casner, S., Frederick, R., and\
    \ V. Jacobson,\n         \"RTP: A Transport Protocol for Real-Time Applications\"\
    , STD 64,\n         RFC 3550, July 2003.\n   [9]   Schulzrinne, H. and S. Casner,\
    \ \"RTP Profile for Audio and Video\n         Conferences with Minimal Control\"\
    , STD 65, RFC 3551, July 2003.\n   [10]  Xie, Q., \"RTP Payload Format for European\
    \ Telecommunications\n         Standards Institute (ETSI) European Standard ES\
    \ 201 108\n         Distributed Speech Recognition Encoding\", RFC 3557, July\
    \ 2003.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [11]  European Telecommunications Standards\
    \ Institute (ETSI) Standard\n         ES 201 108, \"Speech Processing, Transmission\
    \ and Quality\n         Aspects (STQ); Distributed Speech Recognition; Front-end\n\
    \         Feature Extraction Algorithm; Compression Algorithms\",\n         http://pda.etsi.org/pda/.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Qiaobing Xie\n   Motorola, Inc.\n   1501 W. Shure Drive,\
    \ 2-F9\n   Arlington Heights, IL  60004\n   US\n   Phone: +1-847-632-3028\n  \
    \ EMail: qxie1@email.mot.com\n   David Pearce\n   Motorola Labs\n   UK Research\
    \ Laboratory\n   Jays Close\n   Viables Industrial Estate\n   Basingstoke, HANTS\
    \  RG22 4PD\n   UK\n   Phone: +44 (0)1256 484 436\n   EMail: bdp003@motorola.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
