- title: __initial_text__
  contents:
  - '                     Tags for Identifying Languages

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet Best Current Practices\
    \ for the\n   Internet Community, and requests discussion and suggestions for\n\
    \   improvements.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes the structure, content, construction, and\n\
    \   semantics of language tags for use in cases where it is desirable to\n   indicate\
    \ the language used in an information object.  It also\n   describes how to register\
    \ values for use in language tags and the\n   creation of user-defined extensions\
    \ for private interchange.  This\n   document, in combination with RFC 4647, replaces\
    \ RFC 3066, which\n   replaced RFC 1766.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. The Language Tag ................................................4\n  \
    \    2.1. Syntax .....................................................4\n    \
    \  2.2. Language Subtag Sources and Interpretation .................7\n      \
    \     2.2.1. Primary Language Subtag .............................8\n        \
    \   2.2.2. Extended Language Subtags ..........................10\n          \
    \ 2.2.3. Script Subtag ......................................11\n           2.2.4.\
    \ Region Subtag ......................................11\n           2.2.5. Variant\
    \ Subtags ....................................13\n           2.2.6. Extension\
    \ Subtags ..................................14\n           2.2.7. Private Use\
    \ Subtags ................................16\n           2.2.8. Preexisting RFC\
    \ 3066 Registrations .................16\n           2.2.9. Classes of Conformance\
    \ .............................17\n   3. Registry Format and Maintenance ................................18\n\
    \      3.1. Format of the IANA Language Subtag Registry ...............18\n  \
    \    3.2. Language Subtag Reviewer ..................................24\n    \
    \  3.3. Maintenance of the Registry ...............................24\n      3.4.\
    \ Stability of IANA Registry Entries ........................25\n      3.5. Registration\
    \ Procedure for Subtags ........................29\n      3.6. Possibilities for\
    \ Registration ............................32\n      3.7. Extensions and Extensions\
    \ Registry ........................34\n      3.8. Initialization of the Registries\
    \ ..........................37\n   4. Formation and Processing of Language Tags\
    \ ......................38\n      4.1. Choice of Language Tag ....................................38\n\
    \      4.2. Meaning of the Language Tag ...............................40\n  \
    \    4.3. Length Considerations .....................................41\n    \
    \       4.3.1. Working with Limited Buffer Sizes ..................42\n      \
    \     4.3.2. Truncation of Language Tags ........................43\n      4.4.\
    \ Canonicalization of Language Tags .........................44\n      4.5. Considerations\
    \ for Private Use Subtags ....................45\n   5. IANA Considerations ............................................46\n\
    \      5.1. Language Subtag Registry ..................................46\n  \
    \    5.2. Extensions Registry .......................................47\n   6.\
    \ Security Considerations ........................................48\n   7. Character\
    \ Set Considerations ...................................48\n   8. Changes from\
    \ RFC 3066 ..........................................49\n   9. References .....................................................52\n\
    \      9.1. Normative References ......................................52\n  \
    \    9.2. Informative References ....................................53\n   Appendix\
    \ A. Acknowledgements ......................................55\n   Appendix B.\
    \ Examples of Language Tags (Informative) ...............56\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Human beings on our planet have, past and present, used\
    \ a number of\n   languages.  There are many reasons why one would want to identify\
    \ the\n   language used when presenting or requesting information.\n   A user's\
    \ language preferences often need to be identified so that\n   appropriate processing\
    \ can be applied.  For example, the user's\n   language preferences in a Web browser\
    \ can be used to select Web pages\n   appropriately.  Language preferences can\
    \ also be used to select among\n   tools (such as dictionaries) to assist in the\
    \ processing or\n   understanding of content in different languages.\n   In addition,\
    \ knowledge about the particular language used by some\n   piece of information\
    \ content might be useful or even required by some\n   types of processing; for\
    \ example, spell-checking, computer-\n   synthesized speech, Braille transcription,\
    \ or high-quality print\n   renderings.\n   One means of indicating the language\
    \ used is by labeling the\n   information content with an identifier or \"tag\"\
    .  These tags can be\n   used to specify user preferences when selecting information\
    \ content,\n   or for labeling additional attributes of content and associated\n\
    \   resources.\n   Tags can also be used to indicate additional language attributes\
    \ of\n   content.  For example, indicating specific information about the\n  \
    \ dialect, writing system, or orthography used in a document or\n   resource may\
    \ enable the user to obtain information in a form that\n   they can understand,\
    \ or it can be important in processing or\n   rendering the given content into\
    \ an appropriate form or style.\n   This document specifies a particular identifier\
    \ mechanism (the\n   language tag) and a registration function for values to be\
    \ used to\n   form tags.  It also defines a mechanism for private use values and\n\
    \   future extension.\n   This document, in combination with [RFC4647], replaces\
    \ [RFC3066],\n   which replaced [RFC1766].  For a list of changes in this document,\n\
    \   see Section 8.\n   The keywords \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
- title: 2.  The Language Tag
  contents:
  - "2.  The Language Tag\n   Language tags are used to help identify languages, whether\
    \ spoken,\n   written, signed, or otherwise signaled, for the purpose of\n   communication.\
    \  This includes constructed and artificial languages,\n   but excludes languages\
    \ not intended primarily for human\n   communication, such as programming languages.\n"
- title: 2.1.  Syntax
  contents:
  - "2.1.  Syntax\n   The language tag is composed of one or more parts, known as\n\
    \   \"subtags\".  Each subtag consists of a sequence of alphanumeric\n   characters.\
    \  Subtags are distinguished and separated from one another\n   by a hyphen (\"\
    -\", ABNF [RFC4234] %x2D).  A language tag consists of a\n   \"primary language\"\
    \ subtag and a (possibly empty) series of subsequent\n   subtags, each of which\
    \ refines or narrows the range of languages\n   identified by the overall tag.\n\
    \   Usually, each type of subtag is distinguished by length, position in\n   the\
    \ tag, and content: subtags can be recognized solely by these\n   features.  The\
    \ only exception to this is a fixed list of\n   grandfathered tags registered\
    \ under RFC 3066 [RFC3066].  This makes\n   it possible to construct a parser\
    \ that can extract and assign some\n   semantic information to the subtags, even\
    \ if the specific subtag\n   values are not recognized.  Thus, a parser need not\
    \ have an up-to-\n   date copy (or any copy at all) of the subtag registry to\
    \ perform most\n   searching and matching operations.\n   The syntax of the language\
    \ tag in ABNF [RFC4234] is:\n   Language-Tag  = langtag\n                 / privateuse\
    \             ; private use tag\n                 / grandfathered          ; grandfathered\
    \ registrations\n   langtag       = (language\n                    [\"-\" script]\n\
    \                    [\"-\" region]\n                    *(\"-\" variant)\n  \
    \                  *(\"-\" extension)\n                    [\"-\" privateuse])\n\
    \   language      = (2*3ALPHA [ extlang ]) ; shortest ISO 639 code\n         \
    \        / 4ALPHA                 ; reserved for future use\n                \
    \ / 5*8ALPHA               ; registered language subtag\n   extlang       = *3(\"\
    -\" 3ALPHA)         ; reserved for future use\n   script        = 4ALPHA     \
    \            ; ISO 15924 code\n   region        = 2ALPHA                 ; ISO\
    \ 3166 code\n                 / 3DIGIT                 ; UN M.49 code\n   variant\
    \       = 5*8alphanum            ; registered variants\n                 / (DIGIT\
    \ 3alphanum)\n   extension     = singleton 1*(\"-\" (2*8alphanum))\n   singleton\
    \     = %x41-57 / %x59-5A / %x61-77 / %x79-7A / DIGIT\n                 ; \"a\"\
    -\"w\" / \"y\"-\"z\" / \"A\"-\"W\" / \"Y\"-\"Z\" / \"0\"-\"9\"\n             \
    \    ; Single letters: x/X is reserved for private use\n   privateuse    = (\"\
    x\"/\"X\") 1*(\"-\" (1*8alphanum))\n   grandfathered = 1*3ALPHA 1*2(\"-\" (2*8alphanum))\n\
    \                   ; grandfathered registration\n                   ; Note: i\
    \ is the only singleton\n                   ; that starts a grandfathered tag\n\
    \   alphanum      = (ALPHA / DIGIT)       ; letters and numbers\n            \
    \            Figure 1: Language Tag ABNF\n   Note: There is a subtlety in the\
    \ ABNF for 'variant': variants\n   starting with a digit MAY be four characters\
    \ long, while those\n   starting with a letter MUST be at least five characters\
    \ long.\n   All subtags have a maximum length of eight characters and whitespace\n\
    \   is not permitted in a language tag.  For examples of language tags,\n   see\
    \ Appendix B.\n   Note that although [RFC4234] refers to octets, the language\
    \ tags\n   described in this document are sequences of characters from the\n \
    \  US-ASCII [ISO646] repertoire.  Language tags MAY be used in documents\n   and\
    \ applications that use other encodings, so long as these encompass\n   the US-ASCII\
    \ repertoire.  An example of this would be an XML document\n   that uses the UTF-16LE\
    \ [RFC2781] encoding of [Unicode].\n   The tags and their subtags, including private\
    \ use and extensions, are\n   to be treated as case insensitive: there exist conventions\
    \ for the\n   capitalization of some of the subtags, but these MUST NOT be taken\
    \ to\n   carry meaning.\n   For example:\n   o  [ISO639-1] recommends that language\
    \ codes be written in lowercase\n      ('mn' Mongolian).\n   o  [ISO3166-1] recommends\
    \ that country codes be capitalized ('MN'\n      Mongolia).\n   o  [ISO15924]\
    \ recommends that script codes use lowercase with the\n      initial letter capitalized\
    \ ('Cyrl' Cyrillic).\n   However, in the tags defined by this document, the uppercase\
    \ US-ASCII\n   letters in the range 'A' through 'Z' are considered equivalent\
    \ and\n   mapped directly to their US-ASCII lowercase equivalents in the range\n\
    \   'a' through 'z'.  Thus, the tag \"mn-Cyrl-MN\" is not distinct from\n   \"\
    MN-cYRL-mn\" or \"mN-cYrL-Mn\" (or any other combination), and each of\n   these\
    \ variations conveys the same meaning: Mongolian written in the\n   Cyrillic script\
    \ as used in Mongolia.\n   Although case distinctions do not carry meaning in\
    \ language tags,\n   consistent formatting and presentation of the tags will aid\
    \ users.\n   The format of the tags and subtags in the registry is RECOMMENDED.\n\
    \   In this format, all non-initial two-letter subtags are uppercase, all\n  \
    \ non-initial four-letter subtags are titlecase, and all other subtags\n   are\
    \ lowercase.\n"
- title: 2.2.  Language Subtag Sources and Interpretation
  contents:
  - "2.2.  Language Subtag Sources and Interpretation\n   The namespace of language\
    \ tags and their subtags is administered by\n   the Internet Assigned Numbers\
    \ Authority (IANA) [RFC2860] according to\n   the rules in Section 5 of this document.\
    \  The Language Subtag\n   Registry maintained by IANA is the source for valid\
    \ subtags: other\n   standards referenced in this section provide the source material\
    \ for\n   that registry.\n   Terminology in this section:\n   o  Tag or tags refers\
    \ to a complete language tag, such as\n      \"fr-Latn-CA\".  Examples of tags\
    \ in this document are enclosed in\n      double-quotes (\"en-US\").\n   o  Subtag\
    \ refers to a specific section of a tag, delimited by hyphen,\n      such as the\
    \ subtag 'Latn' in \"fr-Latn-CA\".  Examples of subtags in\n      this document\
    \ are enclosed in single quotes ('Latn').\n   o  Code or codes refers to values\
    \ defined in external standards (and\n      that are used as subtags in this document).\
    \  For example, 'Latn'\n      is an [ISO15924] script code that was used to define\
    \ the 'Latn'\n      script subtag for use in a language tag.  Examples of codes\
    \ in\n      this document are enclosed in single quotes ('en', 'Latn').\n   The\
    \ definitions in this section apply to the various subtags within\n   the language\
    \ tags defined by this document, excepting those\n   \"grandfathered\" tags defined\
    \ in Section 2.2.8.\n   Language tags are designed so that each subtag type has\
    \ unique length\n   and content restrictions.  These make identification of the\
    \ subtag's\n   type possible, even if the content of the subtag itself is\n  \
    \ unrecognized.  This allows tags to be parsed and processed without\n   reference\
    \ to the latest version of the underlying standards or the\n   IANA registry and\
    \ makes the associated exception handling when\n   parsing tags simpler.\n   Subtags\
    \ in the IANA registry that do not come from an underlying\n   standard can only\
    \ appear in specific positions in a tag.\n   Specifically, they can only occur\
    \ as primary language subtags or as\n   variant subtags.\n   Note that sequences\
    \ of private use and extension subtags MUST occur\n   at the end of the sequence\
    \ of subtags and MUST NOT be interspersed\n   with subtags defined elsewhere in\
    \ this document.\n   Single-letter and single-digit subtags are reserved for current\
    \ or\n   future use.  These include the following current uses:\n   o  The single-letter\
    \ subtag 'x' is reserved to introduce a sequence\n      of private use subtags.\
    \  The interpretation of any private use\n      subtags is defined solely by private\
    \ agreement and is not defined\n      by the rules in this section or in any standard\
    \ or registry\n      defined in this document.\n   o  All other single-letter\
    \ subtags are reserved to introduce\n      standardized extension subtag sequences\
    \ as described in\n      Section 3.7.\n   The single-letter subtag 'i' is used\
    \ by some grandfathered tags, such\n   as \"i-enochian\", where it always appears\
    \ in the first position and\n   cannot be confused with an extension.\n"
- title: 2.2.1.  Primary Language Subtag
  contents:
  - "2.2.1.  Primary Language Subtag\n   The primary language subtag is the first\
    \ subtag in a language tag\n   (with the exception of private use and certain\
    \ grandfathered tags)\n   and cannot be omitted.  The following rules apply to\
    \ the primary\n   language subtag:\n   1.  All two-character language subtags\
    \ were defined in the IANA\n       registry according to the assignments found\
    \ in the standard ISO\n       639 Part 1, \"ISO 639-1:2002, Codes for the representation\
    \ of\n       names of languages -- Part 1: Alpha-2 code\" [ISO639-1], or using\n\
    \       assignments subsequently made by the ISO 639 Part 1 maintenance\n    \
    \   agency or governing standardization bodies.\n   2.  All three-character language\
    \ subtags were defined in the IANA\n       registry according to the assignments\
    \ found in ISO 639 Part 2,\n       \"ISO 639-2:1998 - Codes for the representation\
    \ of names of\n       languages -- Part 2: Alpha-3 code - edition 1\" [ISO639-2],\
    \ or\n       assignments subsequently made by the ISO 639 Part 2 maintenance\n\
    \       agency or governing standardization bodies.\n   3.  The subtags in the\
    \ range 'qaa' through 'qtz' are reserved for\n       private use in language tags.\
    \  These subtags correspond to codes\n       reserved by ISO 639-2 for private\
    \ use.  These codes MAY be used\n       for non-registered primary language subtags\
    \ (instead of using\n       private use subtags following 'x-').  Please refer\
    \ to Section 4.5\n       for more information on private use subtags.\n   4. \
    \ All four-character language subtags are reserved for possible\n       future\
    \ standardization.\n   5.  All language subtags of 5 to 8 characters in length\
    \ in the IANA\n       registry were defined via the registration process in Section\
    \ 3.5\n       and MAY be used to form the primary language subtag.  At the time\n\
    \       this document was created, there were no examples of this kind of\n  \
    \     subtag and future registrations of this type will be discouraged:\n    \
    \   primary languages are strongly RECOMMENDED for registration with\n       ISO\
    \ 639, and proposals rejected by ISO 639/RA will be closely\n       scrutinized\
    \ before they are registered with IANA.\n   6.  The single-character subtag 'x'\
    \ as the primary subtag indicates\n       that the language tag consists solely\
    \ of subtags whose meaning is\n       defined by private agreement.  For example,\
    \ in the tag \"x-fr-CH\",\n       the subtags 'fr' and 'CH' SHOULD NOT be taken\
    \ to represent the\n       French language or the country of Switzerland (or any\
    \ other value\n       in the IANA registry) unless there is a private agreement\
    \ in\n       place to do so.  See Section 4.5.\n   7.  The single-character subtag\
    \ 'i' is used by some grandfathered\n       tags (see Section 2.2.8) such as \"\
    i-klingon\" and \"i-bnn\".  (Other\n       grandfathered tags have a primary language\
    \ subtag in their first\n       position.)\n   8.  Other values MUST NOT be assigned\
    \ to the primary subtag except by\n       revision or update of this document.\n\
    \   Note: For languages that have both an ISO 639-1 two-character code\n   and\
    \ an ISO 639-2 three-character code, only the ISO 639-1 two-\n   character code\
    \ is defined in the IANA registry.\n   Note: For languages that have no ISO 639-1\
    \ two-character code and for\n   which the ISO 639-2/T (Terminology) code and\
    \ the ISO 639-2/B\n   (Bibliographic) codes differ, only the Terminology code\
    \ is defined in\n   the IANA registry.  At the time this document was created,\
    \ all\n   languages that had both kinds of three-character code were also\n  \
    \ assigned a two-character code; it is not expected that future\n   assignments\
    \ of this nature will occur.\n   Note: To avoid problems with versioning and subtag\
    \ choice as\n   experienced during the transition between RFC 1766 and RFC 3066,\
    \ as\n   well as the canonical nature of subtags defined by this document, the\n\
    \   ISO 639 Registration Authority Joint Advisory Committee (ISO 639/\n   RA-JAC)\
    \ has included the following statement in [iso639.prin]:\n   \"A language code\
    \ already in ISO 639-2 at the point of freezing ISO\n   639-1 shall not later\
    \ be added to ISO 639-1.  This is to ensure\n   consistency in usage over time,\
    \ since users are directed in Internet\n   applications to employ the alpha-3\
    \ code when an alpha-2 code for that\n   language is not available.\"\n   In order\
    \ to avoid instability in the canonical form of tags, if a\n   two-character code\
    \ is added to ISO 639-1 for a language for which a\n   three-character code was\
    \ already included in ISO 639-2, the two-\n   character code MUST NOT be registered.\
    \  See Section 3.4.\n   For example, if some content were tagged with 'haw' (Hawaiian),\
    \ which\n   currently has no two-character code, the tag would not be invalidated\n\
    \   if ISO 639-1 were to assign a two-character code to the Hawaiian\n   language\
    \ at a later date.\n   For example, one of the grandfathered IANA registrations\
    \ is\n   \"i-enochian\".  The subtag 'enochian' could be registered in the IANA\n\
    \   registry as a primary language subtag (assuming that ISO 639 does not\n  \
    \ register this language first), making tags such as \"enochian-AQ\" and\n   \"\
    enochian-Latn\" valid.\n"
- title: 2.2.2.  Extended Language Subtags
  contents:
  - "2.2.2.  Extended Language Subtags\n   The following rules apply to the extended\
    \ language subtags:\n   1.  Three-letter subtags immediately following the primary\
    \ subtag are\n       reserved for future standardization, anticipating work that\
    \ is\n       currently under way on ISO 639.\n   2.  Extended language subtags\
    \ MUST follow the primary subtag and\n       precede any other subtags.\n   3.\
    \  There MAY be up to three extended language subtags.\n   4.  Extended language\
    \ subtags MUST NOT be registered or used to form\n       language tags.  Their\
    \ syntax is described here so that\n       implementations can be compatible with\
    \ any future revision of\n       this document that does provide for their registration.\n\
    \   Extended language subtag records, once they appear in the registry,\n   MUST\
    \ include exactly one 'Prefix' field indicating an appropriate\n   language subtag\
    \ or sequence of subtags that MUST always appear as a\n   prefix to the extended\
    \ language subtag.\n   Example: In a future revision or update of this document,\
    \ the tag\n   \"zh-gan\" (registered under RFC 3066) might become a valid non-\n\
    \   grandfathered (that is, redundant) tag in which the subtag 'gan'\n   might\
    \ represent the Chinese dialect 'Gan'.\n"
- title: 2.2.3.  Script Subtag
  contents:
  - "2.2.3.  Script Subtag\n   Script subtags are used to indicate the script or writing\
    \ system\n   variations that distinguish the written forms of a language or its\n\
    \   dialects.  The following rules apply to the script subtags:\n   1.  All four-character\
    \ subtags were defined according to\n       [ISO15924]--\"Codes for the representation\
    \ of names of scripts\":\n       alpha-4 script codes, or subsequently assigned\
    \ by the ISO 15924\n       maintenance agency or governing standardization bodies,\
    \ denoting\n       the script or writing system used in conjunction with this\n\
    \       language.\n   2.  Script subtags MUST immediately follow the primary language\n\
    \       subtag and all extended language subtags and MUST occur before\n     \
    \  any other type of subtag described below.\n   3.  The script subtags 'Qaaa'\
    \ through 'Qabx' are reserved for private\n       use in language tags.  These\
    \ subtags correspond to codes reserved\n       by ISO 15924 for private use. \
    \ These codes MAY be used for non-\n       registered script values.  Please refer\
    \ to Section 4.5 for more\n       information on private use subtags.\n   4. \
    \ Script subtags MUST NOT be registered using the process in\n       Section 3.5\
    \ of this document.  Variant subtags MAY be considered\n       for registration\
    \ for that purpose.\n   5.  There MUST be at most one script subtag in a language\
    \ tag, and\n       the script subtag SHOULD be omitted when it adds no\n     \
    \  distinguishing value to the tag or when the primary language\n       subtag's\
    \ record includes a Suppress-Script field listing the\n       applicable script\
    \ subtag.\n   Example: \"sr-Latn\" represents Serbian written using the Latin\
    \ script.\n"
- title: 2.2.4.  Region Subtag
  contents:
  - "2.2.4.  Region Subtag\n   Region subtags are used to indicate linguistic variations\
    \ associated\n   with or appropriate to a specific country, territory, or region.\n\
    \   Typically, a region subtag is used to indicate regional dialects or\n   usage,\
    \ or region-specific spelling conventions.  A region subtag can\n   also be used\
    \ to indicate that content is expressed in a way that is\n   appropriate for use\
    \ throughout a region, for instance, Spanish\n   content tailored to be useful\
    \ throughout Latin America.\n   The following rules apply to the region subtags:\n\
    \   1.  Region subtags MUST follow any language, extended language, or\n     \
    \  script subtags and MUST precede all other subtags.\n   2.  All two-character\
    \ subtags following the primary subtag were\n       defined in the IANA registry\
    \ according to the assignments found\n       in [ISO3166-1] (\"Codes for the representation\
    \ of names of\n       countries and their subdivisions -- Part 1: Country codes\"\
    ) using\n       the list of alpha-2 country codes, or using assignments\n    \
    \   subsequently made by the ISO 3166 maintenance agency or governing\n      \
    \ standardization bodies.\n   3.  All three-character subtags consisting of digit\
    \ (numeric)\n       characters following the primary subtag were defined in the\
    \ IANA\n       registry according to the assignments found in UN Standard\n  \
    \     Country or Area Codes for Statistical Use [UN_M.49] or\n       assignments\
    \ subsequently made by the governing standards body.\n       Note that not all\
    \ of the UN M.49 codes are defined in the IANA\n       registry.  The following\
    \ rules define which codes are entered\n       into the registry as valid subtags:\n\
    \       A.  UN numeric codes assigned to 'macro-geographical\n           (continental)'\
    \ or sub-regions MUST be registered in the\n           registry.  These codes\
    \ are not associated with an assigned\n           ISO 3166 alpha-2 code and represent\
    \ supra-national areas,\n           usually covering more than one nation, state,\
    \ province, or\n           territory.\n       B.  UN numeric codes for 'economic\
    \ groupings' or 'other\n           groupings' MUST NOT be registered in the IANA\
    \ registry and\n           MUST NOT be used to form language tags.\n       C.\
    \  UN numeric codes for countries or areas with ambiguous ISO\n           3166\
    \ alpha-2 codes, when entered into the registry, MUST be\n           defined according\
    \ to the rules in Section 3.4 and MUST be\n           used to form language tags\
    \ that represent the country or\n           region for which they are defined.\n\
    \       D.  UN numeric codes for countries or areas for which there is an\n  \
    \         associated ISO 3166 alpha-2 code in the registry MUST NOT be\n     \
    \      entered into the registry and MUST NOT be used to form\n           language\
    \ tags.  Note that the ISO 3166-based subtag in the\n           registry MUST\
    \ actually be associated with the UN M.49 code in\n           question.\n    \
    \   E.  UN numeric codes and ISO 3166 alpha-2 codes for countries or\n       \
    \    areas listed as eligible for registration in [RFC4645] but\n           not\
    \ presently registered MAY be entered into the IANA\n           registry via the\
    \ process described in Section 3.5.  Once\n           registered, these codes\
    \ MAY be used to form language tags.\n       F.  All other UN numeric codes for\
    \ countries or areas that do not\n           have an associated ISO 3166 alpha-2\
    \ code MUST NOT be entered\n           into the registry and MUST NOT be used\
    \ to form language tags.\n           For more information about these codes, see\
    \ Section 3.4.\n   4.  Note: The alphanumeric codes in Appendix X of the UN document\n\
    \       MUST NOT be entered into the registry and MUST NOT be used to\n      \
    \ form language tags.  (At the time this document was created,\n       these values\
    \ matched the ISO 3166 alpha-2 codes.)\n   5.  There MUST be at most one region\
    \ subtag in a language tag and the\n       region subtag MAY be omitted, as when\
    \ it adds no distinguishing\n       value to the tag.\n   6.  The region subtags\
    \ 'AA', 'QM'-'QZ', 'XA'-'XZ', and 'ZZ' are\n       reserved for private use in\
    \ language tags.  These subtags\n       correspond to codes reserved by ISO 3166\
    \ for private use.  These\n       codes MAY be used for private use region subtags\
    \ (instead of\n       using a private use subtag sequence).  Please refer to\n\
    \       Section 4.5 for more information on private use subtags.\n   \"de-CH\"\
    \ represents German ('de') as used in Switzerland ('CH').\n   \"sr-Latn-CS\" represents\
    \ Serbian ('sr') written using Latin script\n   ('Latn') as used in Serbia and\
    \ Montenegro ('CS').\n   \"es-419\" represents Spanish ('es') appropriate to the\
    \ UN-defined\n   Latin America and Caribbean region ('419').\n"
- title: 2.2.5.  Variant Subtags
  contents:
  - "2.2.5.  Variant Subtags\n   Variant subtags are used to indicate additional,\
    \ well-recognized\n   variations that define a language or its dialects that are\
    \ not\n   covered by other available subtags.  The following rules apply to the\n\
    \   variant subtags:\n   1.  Variant subtags are not associated with any external\
    \ standard.\n       Variant subtags and their meanings are defined by the\n  \
    \     registration process defined in Section 3.5.\n   2.  Variant subtags MUST\
    \ follow all of the other defined subtags, but\n       precede any extension or\
    \ private use subtag sequences.\n   3.  More than one variant MAY be used to form\
    \ the language tag.\n   4.  Variant subtags MUST be registered with IANA according\
    \ to the\n       rules in Section 3.5 of this document before being used to form\n\
    \       language tags.  In order to distinguish variants from other types\n  \
    \     of subtags, registrations MUST meet the following length and\n       content\
    \ restrictions:\n       1.  Variant subtags that begin with a letter (a-z, A-Z)\
    \ MUST be\n           at least five characters long.\n       2.  Variant subtags\
    \ that begin with a digit (0-9) MUST be at\n           least four characters long.\n\
    \   Variant subtag records in the language subtag registry MAY include\n   one\
    \ or more 'Prefix' fields, which indicate the language tag or tags\n   that would\
    \ make a suitable prefix (with other subtags, as\n   appropriate) in forming a\
    \ language tag with the variant.  For\n   example, the subtag 'nedis' has a Prefix\
    \ of \"sl\", making it suitable\n   to form language tags such as \"sl-nedis\"\
    \ and \"sl-IT-nedis\", but not\n   suitable for use in a tag such as \"zh-nedis\"\
    \ or \"it-IT-nedis\".\n   \"sl-nedis\" represents the Natisone or Nadiza dialect\
    \ of Slovenian.\n   \"de-CH-1996\" represents German as used in Switzerland and\
    \ as written\n   using the spelling reform beginning in the year 1996 C.E.\n \
    \  Most variants that share a prefix are mutually exclusive.  For\n   example,\
    \ the German orthographic variations '1996' and '1901' SHOULD\n   NOT be used\
    \ in the same tag, as they represent the dates of different\n   spelling reforms.\
    \  A variant that can meaningfully be used in\n   combination with another variant\
    \ SHOULD include a 'Prefix' field in\n   its registry record that lists that other\
    \ variant.  For example, if\n   another German variant 'example' were created\
    \ that made sense to use\n   with '1996', then 'example' should include two Prefix\
    \ fields: \"de\"\n   and \"de-1996\".\n"
- title: 2.2.6.  Extension Subtags
  contents:
  - "2.2.6.  Extension Subtags\n   Extensions provide a mechanism for extending language\
    \ tags for use in\n   various applications.  See Section 3.7.  The following rules\
    \ apply to\n   extensions:\n   1.   Extension subtags are separated from the other\
    \ subtags defined\n        in this document by a single-character subtag (\"singleton\"\
    ).\n        The singleton MUST be one allocated to a registration authority\n\
    \        via the mechanism described in Section 3.7 and MUST NOT be the\n    \
    \    letter 'x', which is reserved for private use subtag sequences.\n   2.  \
    \ Note: Private use subtag sequences starting with the singleton\n        subtag\
    \ 'x' are described in Section 2.2.7 below.\n   3.   An extension MUST follow\
    \ at least a primary language subtag.\n        That is, a language tag cannot\
    \ begin with an extension.\n        Extensions extend language tags, they do not\
    \ override or replace\n        them.  For example, \"a-value\" is not a well-formed\
    \ language tag,\n        while \"de-a-value\" is.\n   4.   Each singleton subtag\
    \ MUST appear at most one time in each tag\n        (other than as a private use\
    \ subtag).  That is, singleton\n        subtags MUST NOT be repeated.  For example,\
    \ the tag\n        \"en-a-bbb-a-ccc\" is invalid because the subtag 'a' appears\n\
    \        twice.  Note that the tag \"en-a-bbb-x-a-ccc\" is valid because\n   \
    \     the second appearance of the singleton 'a' is in a private use\n       \
    \ sequence.\n   5.   Extension subtags MUST meet all of the requirements for the\n\
    \        content and format of subtags defined in this document.\n   6.   Extension\
    \ subtags MUST meet whatever requirements are set by the\n        document that\
    \ defines their singleton prefix and whatever\n        requirements are provided\
    \ by the maintaining authority.\n   7.   Each extension subtag MUST be from two\
    \ to eight characters long\n        and consist solely of letters or digits, with\
    \ each subtag\n        separated by a single '-'.\n   8.   Each singleton MUST\
    \ be followed by at least one extension\n        subtag.  For example, the tag\
    \ \"tlh-a-b-foo\" is invalid because\n        the first singleton 'a' is followed\
    \ immediately by another\n        singleton 'b'.\n   9.   Extension subtags MUST\
    \ follow all language, extended language,\n        script, region, and variant\
    \ subtags in a tag.\n   10.  All subtags following the singleton and before another\
    \ singleton\n        are part of the extension.  Example: In the tag \"fr-a-Latn\"\
    , the\n        subtag 'Latn' does not represent the script subtag 'Latn'\n   \
    \     defined in the IANA Language Subtag Registry.  Its meaning is\n        defined\
    \ by the extension 'a'.\n   11.  In the event that more than one extension appears\
    \ in a single\n        tag, the tag SHOULD be canonicalized as described in\n\
    \        Section 4.4.\n   For example, if the prefix singleton 'r' and the shown\
    \ subtags were\n   defined, then the following tag would be a valid example:\n\
    \   \"en-Latn-GB-boont-r-extended-sequence-x-private\".\n"
- title: 2.2.7.  Private Use Subtags
  contents:
  - "2.2.7.  Private Use Subtags\n   Private use subtags are used to indicate distinctions\
    \ in language\n   important in a given context by private agreement.  The following\n\
    \   rules apply to private use subtags:\n   1.  Private use subtags are separated\
    \ from the other subtags defined\n       in this document by the reserved single-character\
    \ subtag 'x'.\n   2.  Private use subtags MUST conform to the format and content\n\
    \       constraints defined in the ABNF for all subtags.\n   3.  Private use subtags\
    \ MUST follow all language, extended language,\n       script, region, variant,\
    \ and extension subtags in the tag.\n       Another way of saying this is that\
    \ all subtags following the\n       singleton 'x' MUST be considered private use.\
    \  Example: The\n       subtag 'US' in the tag \"en-x-US\" is a private use subtag.\n\
    \   4.  A tag MAY consist entirely of private use subtags.\n   5.  No source is\
    \ defined for private use subtags.  Use of private use\n       subtags is by private\
    \ agreement only.\n   6.  Private use subtags are NOT RECOMMENDED where alternatives\
    \ exist\n       or for general interchange.  See Section 4.5 for more information\n\
    \       on private use subtag choice.\n   For example: Users who wished to utilize\
    \ codes from the Ethnologue\n   publication of SIL International for language\
    \ identification might\n   agree to exchange tags such as \"az-Arab-x-AZE-derbend\"\
    .  This example\n   contains two private use subtags.  The first is 'AZE' and\
    \ the second\n   is 'derbend'.\n"
- title: 2.2.8.  Preexisting RFC 3066 Registrations
  contents:
  - "2.2.8.  Preexisting RFC 3066 Registrations\n   Existing IANA-registered language\
    \ tags from RFC 1766 and/or RFC 3066\n   maintain their validity.  These tags\
    \ will be maintained in the\n   registry in records of either the \"grandfathered\"\
    \ or \"redundant\"\n   type.  Grandfathered tags contain one or more subtags that\
    \ are not\n   defined in the Language Subtag Registry (see Section 3).  Redundant\n\
    \   tags consist entirely of subtags defined above and whose independent\n   registration\
    \ is superseded by this document.  For more information,\n   see Section 3.8.\n\
    \   It is important to note that all language tags formed under the\n   guidelines\
    \ in this document were either legal, well-formed tags or\n   could have been\
    \ registered under RFC 3066.\n"
- title: 2.2.9.  Classes of Conformance
  contents:
  - "2.2.9.  Classes of Conformance\n   Implementations sometimes need to describe\
    \ their capabilities with\n   regard to the rules and practices described in this\
    \ document.  There\n   are two classes of conforming implementations described\
    \ by this\n   document: \"well-formed\" processors and \"validating\" processors.\n\
    \   Claims of conformance SHOULD explicitly reference one of these\n   definitions.\n\
    \   An implementation that claims to check for well-formed language tags\n   MUST:\n\
    \   o  Check that the tag and all of its subtags, including extension and\n  \
    \    private use subtags, conform to the ABNF or that the tag is on the\n    \
    \  list of grandfathered tags.\n   o  Check that singleton subtags that identify\
    \ extensions do not\n      repeat.  For example, the tag \"en-a-xx-b-yy-a-zz\"\
    \ is not well-\n      formed.\n   Well-formed processors are strongly encouraged\
    \ to implement the\n   canonicalization rules contained in Section 4.4.\n   An\
    \ implementation that claims to be validating MUST:\n   o  Check that the tag\
    \ is well-formed.\n   o  Specify the particular registry date for which the implementation\n\
    \      performs validation of subtags.\n   o  Check that either the tag is a grandfathered\
    \ tag, or that all\n      language, script, region, and variant subtags consist\
    \ of valid\n      codes for use in language tags according to the IANA registry\
    \ as\n      of the particular date specified by the implementation.\n   o  Specify\
    \ which, if any, extension RFCs as defined in Section 3.7\n      are supported,\
    \ including version, revision, and date.\n   o  For any such extensions supported,\
    \ check that all subtags used in\n      that extension are valid.\n   o  For variant\
    \ and extended language subtags, if the registry\n      contains one or more 'Prefix'\
    \ fields for that subtag, check that\n      the tag matches at least one prefix.\
    \  The tag matches if all the\n      subtags in the 'Prefix' also appear in the\
    \ tag.  For example, the\n      prefix \"es-CO\" matches the tag \"es-Latn-CO-x-private\"\
    \ because both\n      the 'es' language subtag and 'CO' region subtag appear in\
    \ the tag.\n"
- title: 3.  Registry Format and Maintenance
  contents:
  - "3.  Registry Format and Maintenance\n   This section defines the Language Subtag\
    \ Registry and the maintenance\n   and update procedures associated with it, as\
    \ well as a registry for\n   extensions to language tags (Section 3.7).\n   The\
    \ Language Subtag Registry contains a comprehensive list of all of\n   the subtags\
    \ valid in language tags.  This allows implementers a\n   straightforward and\
    \ reliable way to validate language tags.  The\n   Language Subtag Registry will\
    \ be maintained so that, except for\n   extension subtags, it is possible to validate\
    \ all of the subtags that\n   appear in a language tag under the provisions of\
    \ this document or its\n   revisions or successors.  In addition, the meaning\
    \ of the various\n   subtags will be unambiguous and stable over time.  (The meaning\
    \ of\n   private use subtags, of course, is not defined by the IANA registry.)\n"
- title: 3.1.  Format of the IANA Language Subtag Registry
  contents:
  - "3.1.  Format of the IANA Language Subtag Registry\n   The IANA Language Subtag\
    \ Registry (\"the registry\") consists of a text\n   file that is machine readable\
    \ in the format described in this\n   section, plus copies of the registration\
    \ forms approved in accordance\n   with the process described in Section 3.5.\
    \  The existing registration\n   forms for grandfathered and redundant tags taken\
    \ from RFC 3066 will\n   be maintained as part of the obsolete RFC 3066 registry.\
    \  The\n   remaining set of initial subtags will not have registration forms\n\
    \   created for them.\n   The registry is in the text format described below.\
    \  This format was\n   based on the record-jar format described in [record-jar].\n\
    \   Each line of text is limited to 72 characters, including all\n   whitespace.\
    \  Records are separated by lines containing only the\n   sequence \"%%\" (%x25.25).\n\
    \   Each field can be viewed as a single, logical line of ASCII\n   characters,\
    \ comprising a field-name and a field-body separated by a\n   COLON character\
    \ (%x3A).  For convenience, the field-body portion of\n   this conceptual entity\
    \ can be split into a multiple-line\n   representation; this is called \"folding\"\
    .  The format of the registry\n   is described by the following ABNF (per [RFC4234]):\n\
    \   registry   = record *(\"%%\" CRLF record)\n   record     = 1*( field-name\
    \ *SP \":\" *SP field-body CRLF )\n   field-name = (ALPHA / DIGIT) [*(ALPHA /\
    \ DIGIT / \"-\") (ALPHA / DIGIT)]\n   field-body = *(ASCCHAR/LWSP)\n   ASCCHAR\
    \    = %x21-25 / %x27-7E / UNICHAR ; Note: AMPERSAND is %x26\n   UNICHAR    =\
    \ \"&#x\" 2*6HEXDIG \";\"\n                      Figure 2: Registry Format ABNF\n\
    \   The sequence '..' (%x2E.2E) in a field-body denotes a range of\n   values.\
    \  Such a range represents all subtags of the same length that\n   are in alphabetic\
    \ or numeric order within that range, including the\n   values explicitly mentioned.\
    \  For example 'a..c' denotes the values\n   'a', 'b', and 'c' and '11..13' denotes\
    \ the values '11', '12', and\n   '13'.\n   Characters from outside the US-ASCII\
    \ [ISO646] repertoire, as well as\n   the AMPERSAND character (\"&\", %x26) when\
    \ it occurs in a field-body,\n   are represented by a \"Numeric Character Reference\"\
    \ using hexadecimal\n   notation in the style used by [XML10] (see\n   <http://www.w3.org/TR/REC-xml/#dt-charref>).\
    \  This consists of the\n   sequence \"&#x\" (%x26.23.78) followed by a hexadecimal\
    \ representation\n   of the character's code point in [ISO10646] followed by a\
    \ closing\n   semicolon (%x3B).  For example, the EURO SIGN, U+20AC, would be\n\
    \   represented by the sequence \"&#x20AC;\".  Note that the hexadecimal\n   notation\
    \ MAY have between two and six digits.\n   All fields whose field-body contains\
    \ a date value use the \"full-date\"\n   format specified in [RFC3339].  For example:\
    \ \"2004-06-28\" represents\n   June 28, 2004, in the Gregorian calendar.\n  \
    \ The first record in the file contains the single field whose field-\n   name\
    \ is \"File-Date\" (see Figure 3).  The field-body of this record\n   contains\
    \ the last modification date of this copy of the registry,\n   making it possible\
    \ to compare different versions of the registry.\n   The registry on the IANA\
    \ website is the most current.  Versions with\n   an older date than that one\
    \ are not up-to-date.\n   File-Date: 2004-06-28\n   %%\n                 Figure\
    \ 3: Example of the File-Date Record\n   Subsequent records represent subtags\
    \ in the registry.  Each of the\n   fields in each record MUST occur no more than\
    \ once, unless otherwise\n   noted below.  Each record MUST contain the following\
    \ fields:\n   o  'Type'\n      *  Type's field-value MUST consist of one of the\
    \ following\n         strings: \"language\", \"extlang\", \"script\", \"region\"\
    , \"variant\",\n         \"grandfathered\", and \"redundant\" and denotes the\
    \ type of tag or\n         subtag.\n   o  Either 'Subtag' or 'Tag'\n      *  Subtag's\
    \ field-value contains the subtag being defined.  This\n         field MUST only\
    \ appear in records of whose 'Type' has one of\n         these values: \"language\"\
    , \"extlang\", \"script\", \"region\", or\n         \"variant\".\n      *  Tag's\
    \ field-value contains a complete language tag.  This field\n         MUST only\
    \ appear in records whose 'Type' has one of these\n         values: \"grandfathered\"\
    \ or \"redundant\".  Note that the field-\n         value will always follow the\
    \ 'grandfathered' production in the\n         ABNF in Section 2.1\n   o  Description\n\
    \      *  Description's field-value contains a non-normative description\n   \
    \      of the subtag or tag.\n   o  Added\n      *  Added's field-value contains\
    \ the date the record was added to\n         the registry.\n   The 'Subtag' or\
    \ 'Tag' field MUST use lowercase letters to form the\n   subtag or tag, with two\
    \ exceptions.  Subtags whose 'Type' field is\n   'script' (in other words, subtags\
    \ defined by ISO 15924) MUST use\n   titlecase.  Subtags whose 'Type' field is\
    \ 'region' (in other words,\n   subtags defined by ISO 3166) MUST use uppercase.\
    \  These exceptions\n   mirror the use of case in the underlying standards.\n\
    \   The field 'Description' MAY appear more than one time and contains a\n   description\
    \ of the tag or subtag in the record.  At least one of the\n   'Description' fields\
    \ MUST be written or transcribed into the Latin\n   script; the same or additional\
    \ fields MAY also include a description\n   in a non-Latin script.  The 'Description'\
    \ field is used for\n   identification purposes and SHOULD NOT be taken to represent\
    \ the\n   actual native name of the language or variation or to be in any\n  \
    \ particular language.  Most descriptions are taken directly from\n   source standards\
    \ such as ISO 639 or ISO 3166.\n   Note: Descriptions in registry entries that\
    \ correspond to ISO 639,\n   ISO 15924, ISO 3166, or UN M.49 codes are intended\
    \ only to indicate\n   the meaning of that identifier as defined in the source\
    \ standard at\n   the time it was added to the registry.  The description does\
    \ not\n   replace the content of the source standard itself.  The descriptions\n\
    \   are not intended to be the English localized names for the subtags.\n   Localization\
    \ or translation of language tag and subtag descriptions\n   is out of scope of\
    \ this document.\n   Each record MAY also contain the following fields:\n   o\
    \  Preferred-Value\n      *  For fields of type 'language', 'extlang', 'script',\
    \ 'region',\n         and 'variant', 'Preferred-Value' contains the subtag of\
    \ the\n         same 'Type' that is preferred for forming the language tag.\n\
    \      *  For fields of type 'grandfathered' and 'redundant', a canonical\n  \
    \       mapping to a complete language tag.\n   o  Deprecated\n      *  Deprecated's\
    \ field-value contains the date the record was\n         deprecated.\n   o  Prefix\n\
    \      *  Prefix's field-value contains a language tag with which this\n     \
    \    subtag MAY be used to form a new language tag, perhaps with\n         other\
    \ subtags as well.  This field MUST only appear in records\n         whose 'Type'\
    \ field-value is 'variant' or 'extlang'.  For\n         example, the 'Prefix'\
    \ for the variant 'nedis' is 'sl', meaning\n         that the tags \"sl-nedis\"\
    \ and \"sl-IT-nedis\" might be appropriate\n         while the tag \"is-nedis\"\
    \ is not.\n   o  Comments\n      *  Comments contains additional information about\
    \ the subtag, as\n         deemed appropriate for understanding the registry and\n\
    \         implementing language tags using the subtag or tag.\n   o  Suppress-Script\n\
    \      *  Suppress-Script contains a script subtag that SHOULD NOT be\n      \
    \   used to form language tags with the associated primary language\n        \
    \ subtag.  This field MUST only appear in records whose 'Type'\n         field-value\
    \ is 'language'.  See Section 4.1.\n   The field 'Deprecated' MAY be added to\
    \ any record via the maintenance\n   process described in Section 3.3 or via the\
    \ registration process\n   described in Section 3.5.  Usually, the addition of\
    \ a 'Deprecated'\n   field is due to the action of one of the standards bodies,\
    \ such as\n   ISO 3166, withdrawing a code.  In some historical cases, it might\
    \ not\n   have been possible to reconstruct the original deprecation date.  For\n\
    \   these cases, an approximate date appears in the registry.  Although\n   valid\
    \ in language tags, subtags and tags with a 'Deprecated' field\n   are deprecated\
    \ and validating processors SHOULD NOT generate these\n   subtags.  Note that\
    \ a record that contains a 'Deprecated' field and\n   no corresponding 'Preferred-Value'\
    \ field has no replacement mapping.\n   The field 'Preferred-Value' contains a\
    \ mapping between the record in\n   which it appears and another tag or subtag.\
    \  The value in this field\n   is STRONGLY RECOMMENDED as the best choice to represent\
    \ the value of\n   this record when selecting a language tag.  These values form\
    \ three\n   groups:\n   1.  ISO 639 language codes that were later withdrawn in\
    \ favor of\n       other codes.  These values are mostly a historical curiosity.\n\
    \   2.  ISO 3166 region codes that have been withdrawn in favor of a new\n   \
    \    code.  This sometimes happens when a country changes its name or\n      \
    \ administration in such a way that warrants a new region code.\n   3.  Tags grandfathered\
    \ from RFC 3066.  In many cases, these tags have\n       become obsolete because\
    \ the values they represent were later\n       encoded by ISO 639.\n   Records\
    \ that contain a 'Preferred-Value' field MUST also have a\n   'Deprecated' field.\
    \  This field contains a date of deprecation.\n   Thus, a language tag processor\
    \ can use the registry to construct the\n   valid, non-deprecated set of subtags\
    \ for a given date.  In addition,\n   for any given tag, a processor can construct\
    \ the set of valid\n   language tags that correspond to that tag for all dates\
    \ up to the\n   date of the registry.  The ability to do these mappings MAY be\n\
    \   beneficial to applications that are matching, selecting, for\n   filtering\
    \ content based on its language tags.\n   Note that 'Preferred-Value' mappings\
    \ in records of type 'region'\n   sometimes do not represent exactly the same\
    \ meaning as the original\n   value.  There are many reasons for a country code\
    \ to be changed, and\n   the effect this has on the formation of language tags\
    \ will depend on\n   the nature of the change in question.\n   In particular,\
    \ the 'Preferred-Value' field does not imply retagging\n   content that uses the\
    \ affected subtag.\n   The field 'Preferred-Value' MUST NOT be modified once created\
    \ in the\n   registry.  The field MAY be added to records of type \"grandfathered\"\
    \n   and \"region\" according to the rules in Section 3.3.  Otherwise the\n  \
    \ field MUST NOT be added to any record already in the registry.\n   The 'Preferred-Value'\
    \ field in records of type \"grandfathered\" and\n   \"redundant\" contains whole\
    \ language tags that are strongly\n   RECOMMENDED for use in place of the record's\
    \ value.  In many cases,\n   the mappings were created by deprecation of the tags\
    \ during the\n   period before this document was adopted.  For example, the tag\n\
    \   \"no-nyn\" was deprecated in favor of the ISO 639-1-defined language\n   code\
    \ 'nn'.\n   Records of type 'variant' MAY have more than one field of type\n \
    \  'Prefix'.  Additional fields of this type MAY be added to a 'variant'\n   record\
    \ via the registration process.\n   Records of type 'extlang' MUST have _exactly_\
    \ one 'Prefix' field.\n   The field-value of the 'Prefix' field consists of a\
    \ language tag\n   whose subtags are appropriate to use with this subtag.  For\
    \ example,\n   the variant subtag '1996' has a 'Prefix' field of \"de\".  This\
    \ means\n   that tags starting with the sequence \"de-\" are appropriate with\
    \ this\n   subtag, so \"de-Latg-1996\" and \"de-CH-1996\" are both acceptable,\
    \ while\n   the tag \"fr-1996\" is an inappropriate choice.\n   The field of type\
    \ 'Prefix' MUST NOT be removed from any record.  The\n   field-value for this\
    \ type of field MUST NOT be modified.\n   The field 'Comments' MAY appear more\
    \ than once per record.  This\n   field MAY be inserted or changed via the registration\
    \ process and no\n   guarantee of stability is provided.  The content of this\
    \ field is not\n   restricted, except by the need to register the information,\
    \ the\n   suitability of the request, and by reasonable practical size\n   limitations.\n\
    \   The field 'Suppress-Script' MUST only appear in records whose 'Type'\n   field-value\
    \ is 'language'.  This field MUST NOT appear more than one\n   time in a record.\
    \  This field indicates a script used to write the\n   overwhelming majority of\
    \ documents for the given language and that\n   therefore adds no distinguishing\
    \ information to a language tag.  It\n   helps ensure greater compatibility between\
    \ the language tags\n   generated according to the rules in this document and\
    \ language tags\n   and tag processors or consumers based on RFC 3066.  For example,\n\
    \   virtually all Icelandic documents are written in the Latin script,\n   making\
    \ the subtag 'Latn' redundant in the tag \"is-Latn\".\n"
- title: 3.2.  Language Subtag Reviewer
  contents:
  - "3.2.  Language Subtag Reviewer\n   The Language Subtag Reviewer is appointed\
    \ by the IESG for an\n   indefinite term, subject to removal or replacement at\
    \ the IESG's\n   discretion.  The Language Subtag Reviewer moderates the ietf-\n\
    \   languages mailing list, responds to requests for registration, and\n   performs\
    \ the other registry maintenance duties described in\n   Section 3.3.  Only the\
    \ Language Subtag Reviewer is permitted to\n   request IANA to change, update,\
    \ or add records to the Language Subtag\n   Registry.\n   The performance or decisions\
    \ of the Language Subtag Reviewer MAY be\n   appealed to the IESG under the same\
    \ rules as other IETF decisions\n   (see [RFC2026]).  The IESG can reverse or\
    \ overturn the decision of\n   the Language Subtag Reviewer, provide guidance,\
    \ or take other\n   appropriate actions.\n"
- title: 3.3.  Maintenance of the Registry
  contents:
  - "3.3.  Maintenance of the Registry\n   Maintenance of the registry requires that\
    \ as codes are assigned or\n   withdrawn by ISO 639, ISO 15924, ISO 3166, and\
    \ UN M.49, the Language\n   Subtag Reviewer MUST evaluate each change, determine\
    \ whether it\n   conflicts with existing registry entries, and submit the information\n\
    \   to IANA for inclusion in the registry.  If a change takes place and\n   the\
    \ Language Subtag Reviewer does not do this in a timely manner,\n   then any interested\
    \ party MAY use the procedure in Section 3.5 to\n   register the appropriate update.\n\
    \   Note: The redundant and grandfathered entries together are the\n   complete\
    \ list of tags registered under [RFC3066].  The redundant tags\n   are those that\
    \ can now be formed using the subtags defined in the\n   registry together with\
    \ the rules of Section 2.2.  The grandfathered\n   entries include those that\
    \ can never be legal under those same\n   provisions.\n   The set of redundant\
    \ and grandfathered tags is permanent and stable:\n   new entries in this section\
    \ MUST NOT be added and existing entries\n   MUST NOT be removed.  Records of\
    \ type 'grandfathered' MAY have their\n   type converted to 'redundant'; see item\
    \ 12 in Section 3.6 for more\n   information.  The decision-making process about\
    \ which tags were\n   initially grandfathered and which were made redundant is\
    \ described in\n   [RFC4645].\n   RFC 3066 tags that were deprecated prior to\
    \ the adoption of this\n   document are part of the list of grandfathered tags,\
    \ and their\n   component subtags were not included as registered variants (although\n\
    \   they remain eligible for registration).  For example, the tag\n   \"art-lojban\"\
    \ was deprecated in favor of the language subtag 'jbo'.\n   The Language Subtag\
    \ Reviewer MUST ensure that new subtags meet the\n   requirements in Section 4.1\
    \ or submit an appropriate alternate subtag\n   as described in that section.\
    \  When either a change or addition to\n   the registry is needed, the Language\
    \ Subtag Reviewer MUST prepare the\n   complete record, including all fields,\
    \ and forward it to IANA for\n   insertion into the registry.  Each record being\
    \ modified or inserted\n   MUST be forwarded in a separate message.\n   If a record\
    \ represents a new subtag that does not currently exist in\n   the registry, then\
    \ the message's subject line MUST include the word\n   \"INSERT\".  If the record\
    \ represents a change to an existing subtag,\n   then the subject line of the\
    \ message MUST include the word \"MODIFY\".\n   The message MUST contain both\
    \ the record for the subtag being\n   inserted or modified and the new File-Date\
    \ record.  Here is an\n   example of what the body of the message might contain:\n\
    \   LANGUAGE SUBTAG MODIFICATION\n   File-Date: 2005-01-02\n   %%\n   Type: variant\n\
    \   Subtag: nedis\n   Description: Natisone dialect\n   Description: Nadiza dialect\n\
    \   Added: 2003-10-09\n   Prefix: sl\n   Comments: This is a comment shown\n \
    \    as an example.\n   %%\n         Figure 4: Example of a Language Subtag Modification\
    \ Form\n   Whenever an entry is created or modified in the registry, the\n   'File-Date'\
    \ record at the start of the registry is updated to reflect\n   the most recent\
    \ modification date in the [RFC3339] \"full-date\"\n   format.\n   Before forwarding\
    \ a new registration to IANA, the Language Subtag\n   Reviewer MUST ensure that\
    \ values in the 'Subtag' field match case\n   according to the description in\
    \ Section 3.1.\n"
- title: 3.4.  Stability of IANA Registry Entries
  contents:
  - "3.4.  Stability of IANA Registry Entries\n   The stability of entries and their\
    \ meaning in the registry is\n   critical to the long-term stability of language\
    \ tags.  The rules in\n   this section guarantee that a specific language tag's\
    \ meaning is\n   stable over time and will not change.\n   These rules specifically\
    \ deal with how changes to codes (including\n   withdrawal and deprecation of\
    \ codes) maintained by ISO 639, ISO\n   15924, ISO 3166, and UN M.49 are reflected\
    \ in the IANA Language\n   Subtag Registry.  Assignments to the IANA Language\
    \ Subtag Registry\n   MUST follow the following stability rules:\n   1.   Values\
    \ in the fields 'Type', 'Subtag', 'Tag', 'Added',\n        'Deprecated' and 'Preferred-Value'\
    \ MUST NOT be changed and are\n        guaranteed to be stable over time.\n  \
    \ 2.   Values in the 'Description' field MUST NOT be changed in a way\n      \
    \  that would invalidate previously-existing tags.  They MAY be\n        broadened\
    \ somewhat in scope, changed to add information, or\n        adapted to the most\
    \ common modern usage.  For example, countries\n        occasionally change their\
    \ official names; a historical example\n        of this would be \"Upper Volta\"\
    \ changing to \"Burkina Faso\".\n   3.   Values in the field 'Prefix' MAY be added\
    \ to records of type\n        'variant' via the registration process.\n   4. \
    \  Values in the field 'Prefix' MAY be modified, so long as the\n        modifications\
    \ broaden the set of prefixes.  That is, a prefix\n        MAY be replaced by\
    \ one of its own prefixes.  For example, the\n        prefix \"en-US\" could be\
    \ replaced by \"en\", but not by the\n        prefixes \"en-Latn\", \"fr\", or\
    \ \"en-US-boont\".  If one of those\n        prefixes were needed, a new Prefix\
    \ SHOULD be registered.\n   5.   Values in the field 'Prefix' MUST NOT be removed.\n\
    \   6.   The field 'Comments' MAY be added, changed, modified, or removed\n  \
    \      via the registration process or any of the processes or\n        considerations\
    \ described in this section.\n   7.   The field 'Suppress-Script' MAY be added\
    \ or removed via the\n        registration process.\n   8.   Codes assigned by\
    \ ISO 639, ISO 15924, and ISO 3166 that do not\n        conflict with existing\
    \ subtags of the associated type and whose\n        meaning is not the same as\
    \ an existing subtag of the same type\n        are entered into the IANA registry\
    \ as new records.\n   9.   Codes assigned by ISO 639, ISO 15924, or ISO 3166 that\
    \ are\n        withdrawn by their respective maintenance or registration\n   \
    \     authority remain valid in language tags.  A 'Deprecated' field\n       \
    \ containing the date of withdrawal is added to the record.  If a\n        new\
    \ record of the same type is added that represents a\n        replacement value,\
    \ then a 'Preferred-Value' field MAY also be\n        added.  The registration\
    \ process MAY be used to add comments\n        about the withdrawal of the code\
    \ by the respective standard.\n        Example\n           The region code 'TL'\
    \ was assigned to the country 'Timor-\n           Leste', replacing the code 'TP'\
    \ (which was assigned to 'East\n           Timor' when it was under administration\
    \ by Portugal).  The\n           subtag 'TP' remains valid in language tags, but\
    \ its record\n           contains the a 'Preferred-Value' of 'TL' and its field\n\
    \           'Deprecated' contains the date the new code was assigned\n       \
    \    ('2004-07-06').\n   10.  Codes assigned by ISO 639, ISO 15924, or ISO 3166\
    \ that conflict\n        with existing subtags of the associated type, including\
    \ subtags\n        that are deprecated, MUST NOT be entered into the registry.\
    \  The\n        following additional considerations apply to subtag values that\n\
    \        are reassigned:\n        A.  For ISO 639 codes, if the newly assigned\
    \ code's meaning is\n            not represented by a subtag in the IANA registry,\
    \ the\n            Language Subtag Reviewer, as described in Section 3.5, SHALL\n\
    \            prepare a proposal for entering in the IANA registry as soon\n  \
    \          as practical a registered language subtag as an alternate\n       \
    \     value for the new code.  The form of the registered language\n         \
    \   subtag will be at the discretion of the Language Subtag\n            Reviewer\
    \ and MUST conform to other restrictions on language\n            subtags in this\
    \ document.\n        B.  For all subtags whose meaning is derived from an external\n\
    \            standard (i.e., ISO 639, ISO 15924, ISO 3166, or UN M.49),\n    \
    \        if a new meaning is assigned to an existing code and the new\n      \
    \      meaning broadens the meaning of that code, then the meaning\n         \
    \   for the associated subtag MAY be changed to match.  The\n            meaning\
    \ of a subtag MUST NOT be narrowed, however, as this\n            can result in\
    \ an unknown proportion of the existing uses of\n            a subtag becoming\
    \ invalid.  Note: ISO 639 maintenance\n            agency/registration authority\
    \ (MA/RA) has adopted a similar\n            stability policy.\n        C.  For\
    \ ISO 15924 codes, if the newly assigned code's meaning is\n            not represented\
    \ by a subtag in the IANA registry, the\n            Language Subtag Reviewer,\
    \ as described in Section 3.5, SHALL\n            prepare a proposal for entering\
    \ in the IANA registry as soon\n            as practical a registered variant\
    \ subtag as an alternate\n            value for the new code.  The form of the\
    \ registered variant\n            subtag will be at the discretion of the Language\
    \ Subtag\n            Reviewer and MUST conform to other restrictions on variant\n\
    \            subtags in this document.\n        D.  For ISO 3166 codes, if the\
    \ newly assigned code's meaning is\n            associated with the same UN M.49\
    \ code as another 'region'\n            subtag, then the existing region subtag\
    \ remains as the\n            preferred value for that region and no new entry\
    \ is created.\n            A comment MAY be added to the existing region subtag\n\
    \            indicating the relationship to the new ISO 3166 code.\n        E.\
    \  For ISO 3166 codes, if the newly assigned code's meaning is\n            associated\
    \ with a UN M.49 code that is not represented by an\n            existing region\
    \ subtag, then the Language Subtag Reviewer,\n            as described in Section\
    \ 3.5, SHALL prepare a proposal for\n            entering the appropriate UN M.49\
    \ country code as an entry in\n            the IANA registry.\n        F.  For\
    \ ISO 3166 codes, if there is no associated UN numeric\n            code, then\
    \ the Language Subtag Reviewer SHALL petition the\n            UN to create one.\
    \  If there is no response from the UN\n            within ninety days of the\
    \ request being sent, the Language\n            Subtag Reviewer SHALL prepare\
    \ a proposal for entering in the\n            IANA registry as soon as practical\
    \ a registered variant\n            subtag as an alternate value for the new code.\
    \  The form of\n            the registered variant subtag will be at the discretion\
    \ of\n            the Language Subtag Reviewer and MUST conform to other\n   \
    \         restrictions on variant subtags in this document.  This\n          \
    \  situation is very unlikely to ever occur.\n   11.  UN M.49 has codes for both\
    \ countries and areas (such as '276'\n        for Germany) and geographical regions\
    \ and sub-regions (such as\n        '150' for Europe).  UN M.49 country or area\
    \ codes for which\n        there is no corresponding ISO 3166 code SHOULD NOT\
    \ be\n        registered, except as a surrogate for an ISO 3166 code that is\n\
    \        blocked from registration by an existing subtag.  If such a code\n  \
    \      becomes necessary, then the registration authority for ISO 3166\n     \
    \   SHOULD first be petitioned to assign a code to the region.  If\n        the\
    \ petition for a code assignment by ISO 3166 is refused or not\n        acted\
    \ on in a timely manner, the registration process described\n        in Section\
    \ 3.5 MAY then be used to register the corresponding UN\n        M.49 code.  At\
    \ the time this document was written, there were\n        only four such codes:\
    \ 830 (Channel Islands), 831 (Guernsey), 832\n        (Jersey), and 833 (Isle\
    \ of Man).  This way, UN M.49 codes remain\n        available as the value of\
    \ last resort in cases where ISO 3166\n        reassigns a deprecated value in\
    \ the registry.\n   12.  Stability provisions apply to grandfathered tags with\
    \ this\n        exception: should all of the subtags in a grandfathered tag\n\
    \        become valid subtags in the IANA registry, then the field 'Type'\n  \
    \      in that record is changed from 'grandfathered' to 'redundant'.\n      \
    \  Note that this will not affect language tags that match the\n        grandfathered\
    \ tag, since these tags will now match valid\n        generative subtag sequences.\
    \  For example, if the subtag 'gan'\n        in the language tag \"zh-gan\" were\
    \ to be registered as an\n        extended language subtag, then the grandfathered\
    \ tag \"zh-gan\"\n        would be deprecated (but existing content or implementations\n\
    \        that use \"zh-gan\" would remain valid).\n"
- title: 3.5.  Registration Procedure for Subtags
  contents:
  - "3.5.  Registration Procedure for Subtags\n   The procedure given here MUST be\
    \ used by anyone who wants to use a\n   subtag not currently in the IANA Language\
    \ Subtag Registry.\n   Only subtags of type 'language' and 'variant' will be considered\
    \ for\n   independent registration of new subtags.  Handling of subtags needed\n\
    \   for stability and subtags necessary to keep the registry synchronized\n  \
    \ with ISO 639, ISO 15924, ISO 3166, and UN M.49 within the limits\n   defined\
    \ by this document are described in Section 3.3.  Stability\n   provisions are\
    \ described in Section 3.4.\n   This procedure MAY also be used to register or\
    \ alter the information\n   for the 'Description', 'Comments', 'Deprecated', or\
    \ 'Prefix' fields\n   in a subtag's record as described in Section 3.4.  Changes\
    \ to all\n   other fields in the IANA registry are NOT permitted.\n   Registering\
    \ a new subtag or requesting modifications to an existing\n   tag or subtag starts\
    \ with the requester filling out the registration\n   form reproduced below. \
    \ Note that each response is not limited in\n   size so that the request can adequately\
    \ describe the registration.\n   The fields in the \"Record Requested\" section\
    \ SHOULD follow the\n   requirements in Section 3.1.\n   LANGUAGE SUBTAG REGISTRATION\
    \ FORM\n   1. Name of requester:\n   2. E-mail address of requester:\n   3. Record\
    \ Requested:\n      Type:\n      Subtag:\n      Description:\n      Prefix:\n\
    \      Preferred-Value:\n      Deprecated:\n      Suppress-Script:\n      Comments:\n\
    \   4. Intended meaning of the subtag:\n   5. Reference to published description\n\
    \      of the language (book or article):\n   6. Any other relevant information:\n\
    \              Figure 5: The Language Subtag Registration Form\n   The subtag\
    \ registration form MUST be sent to\n   <ietf-languages@iana.org> for a two-week\
    \ review period before it can\n   be submitted to IANA.  (This is an open list\
    \ and can be joined by\n   sending a request to <ietf-languages-request@iana.org>.)\n\
    \   Variant subtags are usually registered for use with a particular\n   range\
    \ of language tags.  For example, the subtag 'rozaj' is intended\n   for use with\
    \ language tags that start with the primary language\n   subtag \"sl\", since\
    \ Resian is a dialect of Slovenian.  Thus, the\n   subtag 'rozaj' would be appropriate\
    \ in tags such as \"sl-Latn-rozaj\"\n   or \"sl-IT-rozaj\".  This information\
    \ is stored in the 'Prefix' field\n   in the registry.  Variant registration requests\
    \ SHOULD include at\n   least one 'Prefix' field in the registration form.\n \
    \  Extended language subtags are reserved for future standardization.\n   These\
    \ subtags will be REQUIRED to include exactly one 'Prefix' field\n   once they\
    \ are allowed for registration.\n   The 'Prefix' field for a given registered\
    \ subtag exists in the IANA\n   registry as a guide to usage.  Additional prefixes\
    \ MAY be added by\n   filing an additional registration form.  In that form, the\
    \ \"Any other\n   relevant information:\" field MUST indicate that it is the addition\
    \ of\n   a prefix.\n   Requests to add a prefix to a variant subtag that imply\
    \ a different\n   semantic meaning will probably be rejected.  For example, a\
    \ request\n   to add the prefix \"de\" to the subtag 'nedis' so that the tag\n\
    \   \"de-nedis\" represented some German dialect would be rejected.  The\n   'nedis'\
    \ subtag represents a particular Slovenian dialect and the\n   additional registration\
    \ would change the semantic meaning assigned to\n   the subtag.  A separate subtag\
    \ SHOULD be proposed instead.\n   The 'Description' field MUST contain a description\
    \ of the tag being\n   registered written or transcribed into the Latin script;\
    \ it MAY also\n   include a description in a non-Latin script.  Non-ASCII characters\n\
    \   MUST be escaped using the syntax described in Section 3.1.  The\n   'Description'\
    \ field is used for identification purposes and doesn't\n   necessarily represent\
    \ the actual native name of the language or\n   variation or to be in any particular\
    \ language.\n   While the 'Description' field itself is not guaranteed to be stable\n\
    \   and errata corrections MAY be undertaken from time to time, attempts\n   to\
    \ provide translations or transcriptions of entries in the registry\n   itself\
    \ will probably be frowned upon by the community or rejected\n   outright, as\
    \ changes of this nature have an impact on the provisions\n   in Section 3.4.\n\
    \   When the two-week period has passed, the Language Subtag Reviewer\n   either\
    \ forwards the record to be inserted or modified to\n   iana@iana.org according\
    \ to the procedure described in Section 3.3, or\n   rejects the request because\
    \ of significant objections raised on the\n   list or due to problems with constraints\
    \ in this document (which MUST\n   be explicitly cited).  The Language Subtag\
    \ Reviewer MAY also extend\n   the review period in two-week increments to permit\
    \ further\n   discussion.  The Language Subtag Reviewer MUST indicate on the list\n\
    \   whether the registration has been accepted, rejected, or extended\n   following\
    \ each two-week period.\n   Note that the Language Subtag Reviewer MAY raise objections\
    \ on the\n   list if he or she so desires.  The important thing is that the\n\
    \   objection MUST be made publicly.\n   The applicant is free to modify a rejected\
    \ application with\n   additional information and submit it again; this restarts\
    \ the two-\n   week comment period.\n   Decisions made by the Language Subtag\
    \ Reviewer MAY be appealed to the\n   IESG [RFC2028] under the same rules as other\
    \ IETF decisions\n   [RFC2026].\n   All approved registration forms are available\
    \ online in the directory\n   http://www.iana.org/numbers.html under \"languages\"\
    .\n   Updates or changes to existing records follow the same procedure as\n  \
    \ new registrations.  The Language Subtag Reviewer decides whether\n   there is\
    \ consensus to update the registration following the two-week\n   review period;\
    \ normally, objections by the original registrant will\n   carry extra weight\
    \ in forming such a consensus.\n   Registrations are permanent and stable.  Once\
    \ registered, subtags\n   will not be removed from the registry and will remain\
    \ a valid way in\n   which to specify a specific language or variant.\n   Note:\
    \ The purpose of the \"Description\" in the registration form is to\n   aid people\
    \ trying to verify whether a language is registered or what\n   language or language\
    \ variation a particular subtag refers to.  In\n   most cases, reference to an\
    \ authoritative grammar or dictionary of\n   that language will be useful; in\
    \ cases where no such work exists,\n   other well-known works describing that\
    \ language or in that language\n   MAY be appropriate.  The Language Subtag Reviewer\
    \ decides what\n   constitutes \"good enough\" reference material.  This requirement\
    \ is\n   not intended to exclude particular languages or dialects due to the\n\
    \   size of the speaker population or lack of a standardized orthography.\n  \
    \ Minority languages will be considered equally on their own merits.\n"
- title: 3.6.  Possibilities for Registration
  contents:
  - "3.6.  Possibilities for Registration\n   Possibilities for registration of subtags\
    \ or information about\n   subtags include:\n   o  Primary language subtags for\
    \ languages not listed in ISO 639 that\n      are not variants of any listed or\
    \ registered language MAY be\n      registered.  At the time this document was\
    \ created, there were no\n      examples of this form of subtag.  Before attempting\
    \ to register a\n      language subtag, there MUST be an attempt to register the\
    \ language\n      with ISO 639.  Subtags MUST NOT be registered for codes that\
    \ exist\n      in ISO 639-1 or ISO 639-2, that are under consideration by the\
    \ ISO\n      639 maintenance or registration authorities, or that have never\n\
    \      been attempted for registration with those authorities.  If ISO\n     \
    \ 639 has previously rejected a language for registration, it is\n      reasonable\
    \ to assume that there must be additional, very\n      compelling evidence of\
    \ need before it will be registered in the\n      IANA registry (to the extent\
    \ that it is very unlikely that any\n      subtags will be registered of this\
    \ type).\n   o  Dialect or other divisions or variations within a language, its\n\
    \      orthography, writing system, regional or historical usage,\n      transliteration\
    \ or other transformation, or distinguishing\n      variation MAY be registered\
    \ as variant subtags.  An example is the\n      'rozaj' subtag (the Resian dialect\
    \ of Slovenian).\n   o  The addition or maintenance of fields (generally of an\n\
    \      informational nature) in Tag or Subtag records as described in\n      Section\
    \ 3.1 and subject to the stability provisions in\n      Section 3.4.  This includes\
    \ descriptions, comments, deprecation\n      and preferred values for obsolete\
    \ or withdrawn codes, or the\n      addition of script or extlang information\
    \ to primary language\n      subtags.\n   o  The addition of records and related\
    \ field value changes necessary\n      to reflect assignments made by ISO 639,\
    \ ISO 15924, ISO 3166, and\n      UN M.49 as described in Section 3.4.\n   Subtags\
    \ proposed for registration that would cause all or part of a\n   grandfathered\
    \ tag to become redundant but whose meaning conflicts\n   with or alters the meaning\
    \ of the grandfathered tag MUST be rejected.\n   This document leaves the decision\
    \ on what subtags or changes to\n   subtags are appropriate (or not) to the registration\
    \ process\n   described in Section 3.5.\n   Note: four-character primary language\
    \ subtags are reserved to allow\n   for the possibility of alpha4 codes in some\
    \ future addition to the\n   ISO 639 family of standards.\n   ISO 639 defines\
    \ a maintenance agency for additions to and changes in\n   the list of languages\
    \ in ISO 639.  This agency is:\n   International Information Centre for Terminology\
    \ (Infoterm)\n   Aichholzgasse 6/12, AT-1120\n   Wien, Austria\n   Phone: +43\
    \ 1 26 75 35 Ext. 312 Fax: +43 1 216 32 72\n   ISO 639-2 defines a maintenance\
    \ agency for additions to and changes\n   in the list of languages in ISO 639-2.\
    \  This agency is:\n   Library of Congress\n   Network Development and MARC Standards\
    \ Office\n   Washington, D.C. 20540 USA\n   Phone: +1 202 707 6237 Fax: +1 202\
    \ 707 0115\n   URL: http://www.loc.gov/standards/iso639-2\n   The maintenance\
    \ agency for ISO 3166 (country codes) is:\n   ISO 3166 Maintenance Agency\n  \
    \ c/o International Organization for Standardization\n   Case postale 56\n   CH-1211\
    \ Geneva 20 Switzerland\n   Phone: +41 22 749 72 33 Fax: +41 22 749 73 49\n  \
    \ URL: http://www.iso.org/iso/en/prods-services/iso3166ma/index.html\n   The registration\
    \ authority for ISO 15924 (script codes) is:\n   Unicode Consortium Box 391476\n\
    \   Mountain View, CA 94039-1476, USA\n   URL: http://www.unicode.org/iso15924\n\
    \   The Statistics Division of the United Nations Secretariat maintains\n   the\
    \ Standard Country or Area Codes for Statistical Use and can be\n   reached at:\n\
    \   Statistical Services Branch\n   Statistics Division\n   United Nations, Room\
    \ DC2-1620\n   New York, NY 10017, USA\n   Fax: +1-212-963-0623\n   E-mail: statistics@un.org\n\
    \   URL: http://unstats.un.org/unsd/methods/m49/m49alpha.htm\n"
- title: 3.7.  Extensions and Extensions Registry
  contents:
  - "3.7.  Extensions and Extensions Registry\n   Extension subtags are those introduced\
    \ by single-character subtags\n   (\"singletons\") other than 'x'.  They are reserved\
    \ for the generation\n   of identifiers that contain a language component and\
    \ are compatible\n   with applications that understand language tags.\n   The\
    \ structure and form of extensions are defined by this document so\n   that implementations\
    \ can be created that are forward compatible with\n   applications that might\
    \ be created using singletons in the future.\n   In addition, defining a mechanism\
    \ for maintaining singletons will\n   lend stability to this document by reducing\
    \ the likely need for\n   future revisions or updates.\n   Single-character subtags\
    \ are assigned by IANA using the \"IETF\n   Consensus\" policy defined by [RFC2434].\
    \  This policy requires the\n   development of an RFC, which SHALL define the\
    \ name, purpose,\n   processes, and procedures for maintaining the subtags.  The\n\
    \   maintaining or registering authority, including name, contact email,\n   discussion\
    \ list email, and URL location of the registry, MUST be\n   indicated clearly\
    \ in the RFC.  The RFC MUST specify or include each\n   of the following:\n  \
    \ o  The specification MUST reference the specific version or revision\n     \
    \ of this document that governs its creation and MUST reference this\n      section\
    \ of this document.\n   o  The specification and all subtags defined by the specification\n\
    \      MUST follow the ABNF and other rules for the formation of tags and\n  \
    \    subtags as defined in this document.  In particular, it MUST\n      specify\
    \ that case is not significant and that subtags MUST NOT\n      exceed eight characters\
    \ in length.\n   o  The specification MUST specify a canonical representation.\n\
    \   o  The specification of valid subtags MUST be available over the\n      Internet\
    \ and at no cost.\n   o  The specification MUST be in the public domain or available\
    \ via a\n      royalty-free license acceptable to the IETF and specified in the\n\
    \      RFC.\n   o  The specification MUST be versioned, and each version of the\n\
    \      specification MUST be numbered, dated, and stable.\n   o  The specification\
    \ MUST be stable.  That is, extension subtags,\n      once defined by a specification,\
    \ MUST NOT be retracted or change\n      in meaning in any substantial way.\n\
    \   o  The specification MUST include in a separate section the\n      registration\
    \ form reproduced in this section (below) to be used in\n      registering the\
    \ extension upon publication as an RFC.\n   o  IANA MUST be informed of changes\
    \ to the contact information and\n      URL for the specification.\n   IANA will\
    \ maintain a registry of allocated single-character\n   (singleton) subtags. \
    \ This registry MUST use the record-jar format\n   described by the ABNF in Section\
    \ 3.1.  Upon publication of an\n   extension as an RFC, the maintaining authority\
    \ defined in the RFC\n   MUST forward this registration form to iesg@ietf.org,\
    \ who MUST\n   forward the request to iana@iana.org.  The maintaining authority\
    \ of\n   the extension MUST maintain the accuracy of the record by sending an\n\
    \   updated full copy of the record to iana@iana.org with the subject\n   line\
    \ \"LANGUAGE TAG EXTENSION UPDATE\" whenever content changes.  Only\n   the 'Comments',\
    \ 'Contact_Email', 'Mailing_List', and 'URL' fields MAY\n   be modified in these\
    \ updates.\n   Failure to maintain this record, maintain the corresponding registry,\n\
    \   or meet other conditions imposed by this section of this document MAY\n  \
    \ be appealed to the IESG [RFC2028] under the same rules as other IETF\n   decisions\
    \ (see [RFC2026]) and MAY result in the authority to maintain\n   the extension\
    \ being withdrawn or reassigned by the IESG.\n   %%\n   Identifier:\n   Description:\n\
    \   Comments:\n   Added:\n   RFC:\n   Authority:\n   Contact_Email:\n   Mailing_List:\n\
    \   URL:\n   %%\n    Figure 6: Format of Records in the Language Tag Extensions\
    \ Registry\n   'Identifier' contains the single-character subtag (singleton)\n\
    \   assigned to the extension.  The Internet-Draft submitted to define\n   the\
    \ extension SHOULD specify which letter or digit to use, although\n   the IESG\
    \ MAY change the assignment when approving the RFC.\n   'Description' contains\
    \ the name and description of the extension.\n   'Comments' is an OPTIONAL field\
    \ and MAY contain a broader description\n   of the extension.\n   'Added' contains\
    \ the date the RFC was published in the \"full-date\"\n   format specified in\
    \ [RFC3339].  For example: 2004-06-28 represents\n   June 28, 2004, in the Gregorian\
    \ calendar.\n   'RFC' contains the RFC number assigned to the extension.\n   'Authority'\
    \ contains the name of the maintaining authority for the\n   extension.\n   'Contact_Email'\
    \ contains the email address used to contact the\n   maintaining authority.\n\
    \   'Mailing_List' contains the URL or subscription email address of the\n   mailing\
    \ list used by the maintaining authority.\n   'URL' contains the URL of the registry\
    \ for this extension.\n   The determination of whether an Internet-Draft meets\
    \ the above\n   conditions and the decision to grant or withhold such authority\
    \ rests\n   solely with the IESG and is subject to the normal review and appeals\n\
    \   process associated with the RFC process.\n   Extension authors are strongly\
    \ cautioned that many (including most\n   well-formed) processors will be unaware\
    \ of any special relationships\n   or meaning inherent in the order of extension\
    \ subtags.  Extension\n   authors SHOULD avoid subtag relationships or canonicalization\n\
    \   mechanisms that interfere with matching or with length restrictions\n   that\
    \ sometimes exist in common protocols where the extension is used.\n   In particular,\
    \ applications MAY truncate the subtags in doing\n   matching or in fitting into\
    \ limited lengths, so it is RECOMMENDED\n   that the most significant information\
    \ be in the most significant\n   (left-most) subtags and that the specification\
    \ gracefully handle\n   truncated subtags.\n   When a language tag is to be used\
    \ in a specific, known, protocol, it\n   is RECOMMENDED that the language tag\
    \ not contain extensions not\n   supported by that protocol.  In addition, note\
    \ that some protocols\n   MAY impose upper limits on the length of the strings\
    \ used to store or\n   transport the language tag.\n"
- title: 3.8.  Initialization of the Registries
  contents:
  - "3.8.  Initialization of the Registries\n   Upon adoption of this document, an\
    \ initial version of the Language\n   Subtag Registry containing the various subtags\
    \ initially valid in a\n   language tag is necessary.  This collection of subtags,\
    \ along with a\n   description of the process used to create it, is described\
    \ by\n   [RFC4645].  IANA SHALL publish the initial version of the registry\n\
    \   described by this document from the content of [RFC4645].  Once\n   published\
    \ by IANA, the maintenance procedures, rules, and\n   registration processes described\
    \ in this document will be available\n   for new registrations or updates.\n \
    \  Registrations that are in process under the rules defined in\n   [RFC3066]\
    \ when this document is adopted MAY be completed under the\n   former rules, at\
    \ the discretion of the Language Tag Reviewer (as\n   described in [RFC3066]).\
    \  Until the IESG officially appoints a\n   Language Subtag Reviewer, the existing\
    \ Language Tag Reviewer SHALL\n   serve as the Language Subtag Reviewer.\n   Any\
    \ new registrations submitted using the RFC 3066 forms or format\n   after the\
    \ adoption of this document and publication of the registry\n   by IANA MUST be\
    \ rejected.\n   An initial version of the Language Tag Extensions Registry described\n\
    \   in Section 3.7 is also needed.  The Language Tag Extensions Registry\n   SHALL\
    \ be initialized with a single record containing a single field\n   of type \"\
    File-Date\" as a placeholder for future assignments.\n"
- title: 4.  Formation and Processing of Language Tags
  contents:
  - "4.  Formation and Processing of Language Tags\n   This section addresses how\
    \ to use the information in the registry\n   with the tag syntax to choose, form,\
    \ and process language tags.\n"
- title: 4.1.  Choice of Language Tag
  contents:
  - "4.1.  Choice of Language Tag\n   One is sometimes faced with the choice between\
    \ several possible tags\n   for the same body of text.\n   Interoperability is\
    \ best served when all users use the same language\n   tag in order to represent\
    \ the same language.  If an application has\n   requirements that make the rules\
    \ here inapplicable, then that\n   application risks damaging interoperability.\
    \  It is strongly\n   RECOMMENDED that users not define their own rules for language\
    \ tag\n   choice.\n   Subtags SHOULD only be used where they add useful distinguishing\n\
    \   information; extraneous subtags interfere with the meaning,\n   understanding,\
    \ and processing of language tags.  In particular, users\n   and implementations\
    \ SHOULD follow the 'Prefix' and 'Suppress-Script'\n   fields in the registry\
    \ (defined in Section 3.1): these fields provide\n   guidance on when specific\
    \ additional subtags SHOULD (and SHOULD NOT)\n   be used in a language tag.\n\
    \   Of particular note, many applications can benefit from the use of\n   script\
    \ subtags in language tags, as long as the use is consistent for\n   a given context.\
    \  Script subtags were not formally defined in RFC\n   3066 and their use can\
    \ affect matching and subtag identification by\n   implementations of RFC 3066,\
    \ as these subtags appear between the\n   primary language and region subtags.\
    \  For example, if a user requests\n   content in an implementation of Section\
    \ 2.5 of [RFC3066] using the\n   language range \"en-US\", content labeled \"\
    en-Latn-US\" will not match\n   the request.  Therefore, it is important to know\
    \ when script subtags\n   will customarily be used and when they ought not be\
    \ used.  In the\n   registry, the Suppress-Script field helps ensure greater\n\
    \   compatibility between the language tags generated according to the\n   rules\
    \ in this document and language tags and tag processors or\n   consumers based\
    \ on RFC 3066 by defining when users SHOULD NOT include\n   a script subtag with\
    \ a particular primary language subtag.\n   Extended language subtags (type 'extlang'\
    \ in the registry; see\n   Section 3.1) also appear between the primary language\
    \ and region\n   subtags and are reserved for future standardization.  Applications\n\
    \   might benefit from their judicious use in forming language tags in\n   the\
    \ future.  Similar recommendations are expected to apply to their\n   use as apply\
    \ to script subtags.\n   Standards, protocols, and applications that reference\
    \ this document\n   normatively but apply different rules to the ones given in\
    \ this\n   section MUST specify how the procedure varies from the one given\n\
    \   here.\n   The choice of subtags used to form a language tag SHOULD be guided\
    \ by\n   the following rules:\n   1.  Use as precise a tag as possible, but no\
    \ more specific than is\n       justified.  Avoid using subtags that are not important\
    \ for\n       distinguishing content in an application.\n       *  For example,\
    \ 'de' might suffice for tagging an email written\n          in German, while\
    \ \"de-CH-1996\" is probably unnecessarily\n          precise for such a task.\n\
    \   2.  The script subtag SHOULD NOT be used to form language tags unless\n  \
    \     the script adds some distinguishing information to the tag.  The\n     \
    \  field 'Suppress-Script' in the primary language record in the\n       registry\
    \ indicates which script subtags do not add distinguishing\n       information\
    \ for most applications.\n       *  For example, the subtag 'Latn' should not\
    \ be used with the\n          primary language 'en' because nearly all English\
    \ documents are\n          written in the Latin script and it adds no distinguishing\n\
    \          information.  However, if a document were written in English\n    \
    \      mixing Latin script with another script such as Braille\n          ('Brai'),\
    \ then it might be appropriate to choose to indicate\n          both scripts to\
    \ aid in content selection, such as the\n          application of a style sheet.\n\
    \   3.  If a tag or subtag has a 'Preferred-Value' field in its registry\n   \
    \    entry, then the value of that field SHOULD be used to form the\n       language\
    \ tag in preference to the tag or subtag in which the\n       preferred value\
    \ appears.\n       *  For example, use 'he' for Hebrew in preference to 'iw'.\n\
    \   4.  The 'und' (Undetermined) primary language subtag SHOULD NOT be\n     \
    \  used to label content, even if the language is unknown.  Omitting\n       the\
    \ language tag altogether is preferred to using a tag with a\n       primary language\
    \ subtag of 'und'.  The 'und' subtag MAY be useful\n       for protocols that\
    \ require a language tag to be provided.  The\n       'und' subtag MAY also be\
    \ useful when matching language tags in\n       certain situations.\n   5.  The\
    \ 'mul' (Multiple) primary language subtag SHOULD NOT be used\n       whenever\
    \ the protocol allows the separate tags for multiple\n       languages, as is\
    \ the case for the Content-Language header in\n       HTTP.  The 'mul' subtag\
    \ conveys little useful information:\n       content in multiple languages SHOULD\
    \ individually tag the\n       languages where they appear or otherwise indicate\
    \ the actual\n       language in preference to the 'mul' subtag.\n   6.  The same\
    \ variant subtag SHOULD NOT be used more than once within\n       a language tag.\n\
    \       *  For example, do not use \"de-DE-1901-1901\".\n   To ensure consistent\
    \ backward compatibility, this document contains\n   several provisions to account\
    \ for potential instability in the\n   standards used to define the subtags that\
    \ make up language tags.\n   These provisions mean that no language tag created\
    \ under the rules in\n   this document will become obsolete.\n"
- title: 4.2.  Meaning of the Language Tag
  contents:
  - "4.2.  Meaning of the Language Tag\n   The relationship between the tag and the\
    \ information it relates to is\n   defined by the context in which the tag appears.\
    \  Accordingly, this\n   section gives only possible examples of its usage.\n\
    \   o  For a single information object, the associated language tags\n      might\
    \ be interpreted as the set of languages that is necessary for\n      a complete\
    \ comprehension of the complete object.  Example: Plain\n      text documents.\n\
    \   o  For an aggregation of information objects, the associated language\n  \
    \    tags could be taken as the set of languages used inside components\n    \
    \  of that aggregation.  Examples: Document stores and libraries.\n   o  For information\
    \ objects whose purpose is to provide alternatives,\n      the associated language\
    \ tags could be regarded as a hint that the\n      content is provided in several\
    \ languages and that one has to\n      inspect each of the alternatives in order\
    \ to find its language or\n      languages.  In this case, the presence of multiple\
    \ tags might not\n      mean that one needs to be multi-lingual to get complete\n\
    \      understanding of the document.  Example: MIME multipart/\n      alternative.\n\
    \   o  In markup languages, such as HTML and XML, language information\n     \
    \ can be added to each part of the document identified by the markup\n      structure\
    \ (including the whole document itself).  For example, one\n      could write\
    \ <span lang=\"fr\">C'est la vie.</span> inside a\n      Norwegian document; the\
    \ Norwegian-speaking user could then access\n      a French-Norwegian dictionary\
    \ to find out what the marked section\n      meant.  If the user were listening\
    \ to that document through a\n      speech synthesis interface, this formation\
    \ could be used to signal\n      the synthesizer to appropriately apply French\
    \ text-to-speech\n      pronunciation rules to that span of text, instead of applying\
    \ the\n      inappropriate Norwegian rules.\n   Language tags are related when\
    \ they contain a similar sequence of\n   subtags.  For example, if a language\
    \ tag B contains language tag A as\n   a prefix, then B is typically \"narrower\"\
    \ or \"more specific\" than A.\n   Thus, \"zh-Hant-TW\" is more specific than\
    \ \"zh-Hant\".\n   This relationship is not guaranteed in all cases: specifically,\n\
    \   languages that begin with the same sequence of subtags are NOT\n   guaranteed\
    \ to be mutually intelligible, although they might be.  For\n   example, the tag\
    \ \"az\" shares a prefix with both \"az-Latn\"\n   (Azerbaijani written using\
    \ the Latin script) and \"az-Cyrl\"\n   (Azerbaijani written using the Cyrillic\
    \ script).  A person fluent in\n   one script might not be able to read the other,\
    \ even though the text\n   might be identical.  Content tagged as \"az\" most\
    \ probably is written\n   in just one script and thus might not be intelligible\
    \ to a reader\n   familiar with the other script.\n"
- title: 4.3.  Length Considerations
  contents:
  - "4.3.  Length Considerations\n   [RFC3066] did not provide an upper limit on the\
    \ size of language\n   tags.  While RFC 3066 did define the semantics of particular\
    \ subtags\n   in such a way that most language tags consisted of language and\n\
    \   region subtags with a combined total length of up to six characters,\n   larger\
    \ registered tags were not only possible but were actually\n   registered.\n \
    \  Neither the language tag syntax nor other requirements in this\n   document\
    \ impose a fixed upper limit on the number of subtags in a\n   language tag (and\
    \ thus an upper bound on the size of a tag).  The\n   language tag syntax suggests\
    \ that, depending on the specific\n   language, more subtags (and thus a longer\
    \ tag) are sometimes\n   necessary to completely identify the language for certain\n\
    \   applications; thus, it is possible to envision long or complex subtag\n  \
    \ sequences.\n"
- title: 4.3.1.  Working with Limited Buffer Sizes
  contents:
  - "4.3.1.  Working with Limited Buffer Sizes\n   Some applications and protocols\
    \ are forced to allocate fixed buffer\n   sizes or otherwise limit the length\
    \ of a language tag.  A conformant\n   implementation or specification MAY refuse\
    \ to support the storage of\n   language tags that exceed a specified length.\
    \  Any such limitation\n   SHOULD be clearly documented, and such documentation\
    \ SHOULD include\n   what happens to longer tags (for example, whether an error\
    \ value is\n   generated or the language tag is truncated).  A protocol that allows\n\
    \   tags to be truncated at an arbitrary limit, without giving any\n   indication\
    \ of what that limit is, has the potential for causing harm\n   by changing the\
    \ meaning of tags in substantial ways.\n   In practice, most language tags do\
    \ not require more than a few\n   subtags and will not approach reasonably sized\
    \ buffer limitations;\n   see Section 4.1.\n   Some specifications or protocols\
    \ have limits on tag length but do not\n   have a fixed length limitation.  For\
    \ example, [RFC2231] has no\n   explicit length limitation: the length available\
    \ for the language tag\n   is constrained by the length of other header components\
    \ (such as the\n   charset's name) coupled with the 76-character limit in [RFC2047].\n\
    \   Thus, the \"limit\" might be 50 or more characters, but it could\n   potentially\
    \ be quite small.\n   The considerations for assigning a buffer limit are:\n \
    \     Implementations SHOULD NOT truncate language tags unless the\n      meaning\
    \ of the tag is purposefully being changed, or unless the\n      tag does not\
    \ fit into a limited buffer size specified by a\n      protocol for storage or\
    \ transmission.\n      Implementations SHOULD warn the user when a tag is truncated\
    \ since\n      truncation changes the semantic meaning of the tag.\n      Implementations\
    \ of protocols or specifications that are space\n      constrained but do not\
    \ have a fixed limit SHOULD use the longest\n      possible tag in preference\
    \ to truncation.\n      Protocols or specifications that specify limited buffer\
    \ sizes for\n      language tags MUST allow for language tags of up to 33 characters.\n\
    \      Protocols or specifications that specify limited buffer sizes for\n   \
    \   language tags SHOULD allow for language tags of at least 42\n      characters.\n\
    \   The following illustration shows how the 42-character recommendation\n   was\
    \ derived.  The combination of language and extended language\n   subtags was\
    \ chosen for future compatibility.  At up to 15 characters,\n   this combination\
    \ is longer than the longest possible primary language\n   subtag (8 characters):\n\
    \   language      =  3 (ISO 639-2; ISO 639-1 requires 2)\n   extlang1      = \
    \ 4 (each subsequent subtag includes '-')\n   extlang2      =  4 (unlikely: needs\
    \ prefix=\"language-extlang1\")\n   extlang3      =  4 (extremely unlikely)\n\
    \   script        =  5 (if not suppressed: see Section 4.1)\n   region       \
    \ =  4 (UN M.49; ISO 3166 requires 3)\n   variant1      =  9 (MUST have language\
    \ as a prefix)\n   variant2      =  9 (MUST have language-variant1 as a prefix)\n\
    \   total         = 42 characters\n              Figure 7: Derivation of the Limit\
    \ on Tag Length\n"
- title: 4.3.2.  Truncation of Language Tags
  contents:
  - "4.3.2.  Truncation of Language Tags\n   Truncation of a language tag alters the\
    \ meaning of the tag, and thus\n   SHOULD be avoided.  However, truncation of\
    \ language tags is sometimes\n   necessary due to limited buffer sizes.  Such\
    \ truncation MUST NOT\n   permit a subtag to be chopped off in the middle or the\
    \ formation of\n   invalid tags (for example, one ending with the \"-\" character).\n\
    \   This means that applications or protocols that truncate tags MUST do\n   so\
    \ by progressively removing subtags along with their preceding \"-\"\n   from\
    \ the right side of the language tag until the tag is short enough\n   for the\
    \ given buffer.  If the resulting tag ends with a single-\n   character subtag,\
    \ that subtag and its preceding \"-\" MUST also be\n   removed.  For example:\n\
    \   Tag to truncate: zh-Latn-CN-variant1-a-extend1-x-wadegile-private1\n   1.\
    \ zh-Latn-CN-variant1-a-extend1-x-wadegile\n   2. zh-Latn-CN-variant1-a-extend1\n\
    \   3. zh-Latn-CN-variant1\n   4. zh-Latn-CN\n   5. zh-Latn\n   6. zh\n      \
    \              Figure 8: Example of Tag Truncation\n"
- title: 4.4.  Canonicalization of Language Tags
  contents:
  - "4.4.  Canonicalization of Language Tags\n   Since a particular language tag is\
    \ sometimes used by many processes,\n   language tags SHOULD always be created\
    \ or generated in a canonical\n   form.\n   A language tag is in canonical form\
    \ when:\n   1.  The tag is well-formed according the rules in Section 2.1 and\n\
    \       Section 2.2.\n   2.  Subtags of type 'Region' that have a Preferred-Value\
    \ mapping in\n       the IANA registry (see Section 3.1) SHOULD be replaced with\
    \ their\n       mapped value.  Note: In rare cases, the mapped value will also\n\
    \       have a Preferred-Value.\n   3.  Redundant or grandfathered tags that have\
    \ a Preferred-Value\n       mapping in the IANA registry (see Section 3.1) MUST\
    \ be replaced\n       with their mapped value.  These items either are deprecated\n\
    \       mappings created before the adoption of this document (such as\n     \
    \  the mapping of \"no-nyn\" to \"nn\" or \"i-klingon\" to \"tlh\") or are\n \
    \      the result of later registrations or additions to this document\n     \
    \  (for example, \"zh-guoyu\" might be mapped to a language-extlang\n       combination\
    \ such as \"zh-cmn\" by some future update of this\n       document).\n   4. \
    \ Other subtags that have a Preferred-Value mapping in the IANA\n       registry\
    \ (see Section 3.1) MUST be replaced with their mapped\n       value.  These items\
    \ consist entirely of clerical corrections to\n       ISO 639-1 in which the deprecated\
    \ subtags have been maintained\n       for compatibility purposes.\n   5.  If\
    \ more than one extension subtag sequence exists, the extension\n       sequences\
    \ are ordered into case-insensitive ASCII order by\n       singleton subtag.\n\
    \   Example: The language tag \"en-A-aaa-B-ccc-bbb-x-xyz\" is in canonical\n \
    \  form, while \"en-B-ccc-bbb-A-aaa-X-xyz\" is well-formed but not in\n   canonical\
    \ form.\n   Example: The language tag \"en-BU\" (English as used in Burma) is\
    \ not\n   canonical because the 'BU' subtag has a canonical mapping to 'MM'\n\
    \   (Myanmar), although the tag \"en-BU\" maintains its validity.\n   Canonicalization\
    \ of language tags does not imply anything about the\n   use of upper or lowercase\
    \ letters when processing or comparing\n   subtags (and as described in Section\
    \ 2.1).  All comparisons MUST be\n   performed in a case-insensitive manner.\n\
    \   When performing canonicalization of language tags, processors MAY\n   regularize\
    \ the case of the subtags (that is, this process is\n   OPTIONAL), following the\
    \ case used in the registry.  Note that this\n   corresponds to the following\
    \ casing rules: uppercase all non-initial\n   two-letter subtags; titlecase all\
    \ non-initial four-letter subtags;\n   lowercase everything else.\n   Note: Case\
    \ folding of ASCII letters in certain locales, unless\n   carefully handled, sometimes\
    \ produces non-ASCII character values.\n   The Unicode Character Database file\
    \ \"SpecialCasing.txt\" defines the\n   specific cases that are known to cause\
    \ problems with this.  In\n   particular, the letter 'i' (U+0069) in Turkish and\
    \ Azerbaijani is\n   uppercased to U+0130 (LATIN CAPITAL LETTER I WITH DOT ABOVE).\n\
    \   Implementers SHOULD specify a locale-neutral casing operation to\n   ensure\
    \ that case folding of subtags does not produce this value,\n   which is illegal\
    \ in language tags.  For example, if one were to\n   uppercase the region subtag\
    \ 'in' using Turkish locale rules, the\n   sequence U+0130 U+004E would result\
    \ instead of the expected 'IN'.\n   Note: if the field 'Deprecated' appears in\
    \ a registry record without\n   an accompanying 'Preferred-Value' field, then\
    \ that tag or subtag is\n   deprecated without a replacement.  Validating processors\
    \ SHOULD NOT\n   generate tags that include these values, although the values\
    \ are\n   canonical when they appear in a language tag.\n   An extension MUST\
    \ define any relationships that exist between the\n   various subtags in the extension\
    \ and thus MAY define an alternate\n   canonicalization scheme for the extension's\
    \ subtags.  Extensions MAY\n   define how the order of the extension's subtags\
    \ are interpreted.  For\n   example, an extension could define that its subtags\
    \ are in canonical\n   order when the subtags are placed into ASCII order: that\
    \ is,\n   \"en-a-aaa-bbb-ccc\" instead of \"en-a-ccc-bbb-aaa\".  Another extension\n\
    \   might define that the order of the subtags influences their semantic\n   meaning\
    \ (so that \"en-b-ccc-bbb-aaa\" has a different value from\n   \"en-b-aaa-bbb-ccc\"\
    ).  However, extension specifications SHOULD be\n   designed so that they are\
    \ tolerant of the typical processes described\n   in Section 3.7.\n"
- title: 4.5.  Considerations for Private Use Subtags
  contents:
  - "4.5.  Considerations for Private Use Subtags\n   Private use subtags, like all\
    \ other subtags, MUST conform to the\n   format and content constraints in the\
    \ ABNF.  Private use subtags have\n   no meaning outside the private agreement\
    \ between the parties that\n   intend to use or exchange language tags that employ\
    \ them.  The same\n   subtags MAY be used with a different meaning under a separate\
    \ private\n   agreement.  They SHOULD NOT be used where alternatives exist and\n\
    \   SHOULD NOT be used in content or protocols intended for general use.\n   Private\
    \ use subtags are simply useless for information exchange\n   without prior arrangement.\
    \  The value and semantic meaning of private\n   use tags and of the subtags used\
    \ within such a language tag are not\n   defined by this document.\n   Subtags\
    \ defined in the IANA registry as having a specific private use\n   meaning convey\
    \ more information that a purely private use tag\n   prefixed by the singleton\
    \ subtag 'x'.  For applications, this\n   additional information MAY be useful.\n\
    \   For example, the region subtags 'AA', 'ZZ', and in the ranges\n   'QM'-'QZ'\
    \ and 'XA'-'XZ' (derived from ISO 3166 private use codes) MAY\n   be used to form\
    \ a language tag.  A tag such as \"zh-Hans-XQ\" conveys a\n   great deal of public,\
    \ interchangeable information about the language\n   material (that it is Chinese\
    \ in the simplified Chinese script and is\n   suitable for some geographic region\
    \ 'XQ').  While the precise\n   geographic region is not known outside of private\
    \ agreement, the tag\n   conveys far more information than an opaque tag such\
    \ as \"x-someLang\",\n   which contains no information about the language subtag\
    \ or script\n   subtag outside of the private agreement.\n   However, in some\
    \ cases content tagged with private use subtags MAY\n   interact with other systems\
    \ in a different and possibly unsuitable\n   manner compared to tags that use\
    \ opaque, privately defined subtags,\n   so the choice of the best approach sometimes\
    \ depends on the\n   particular domain in question.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This section deals with the processes and requirements\
    \ necessary for\n   IANA to undertake to maintain the subtag and extension registries\
    \ as\n   defined by this document and in accordance with the requirements of\n\
    \   [RFC2434].\n   The impact on the IANA maintainers of the two registries defined\
    \ by\n   this document will be a small increase in the frequency of new\n   entries\
    \ or updates.\n"
- title: 5.1.  Language Subtag Registry
  contents:
  - "5.1.  Language Subtag Registry\n   Upon adoption of this document, the registry\
    \ will be initialized by a\n   companion document: [RFC4645].  The criteria and\
    \ process for\n   selecting the initial set of records are described in that document.\n\
    \   The initial set of records represents no impact on IANA, since the\n   work\
    \ to create it will be performed externally.\n   The new registry MUST be listed\
    \ under \"Language Tags\" at\n   <http://www.iana.org/numbers.html>, replacing\
    \ the existing\n   registrations defined by [RFC3066].  The existing set of registration\n\
    \   forms and RFC 3066 registrations MUST be relabeled as \"Language Tags\n  \
    \ (Obsolete)\" and maintained (but not added to or modified).\n   Future work\
    \ on the Language Subtag Registry SHALL be limited to\n   inserting or replacing\
    \ whole records preformatted for IANA by the\n   Language Subtag Reviewer as described\
    \ in Section 3.3 of this document\n   and archiving the forwarded registration\
    \ form.\n   Each record MUST be sent to iana@iana.org with a subject line\n  \
    \ indicating whether the enclosed record is an insertion of a new\n   record (indicated\
    \ by the word \"INSERT\" in the subject line) or a\n   replacement of an existing\
    \ record (indicated by the word \"MODIFY\" in\n   the subject line).  Records\
    \ MUST NOT be deleted from the registry.\n   IANA MUST place any inserted or modified\
    \ records into the appropriate\n   section of the language subtag registry, grouping\
    \ the records by\n   their 'Type' field.  Inserted records MAY be placed anywhere\
    \ in the\n   appropriate section; there is no guarantee of the order of the\n\
    \   records beyond grouping them together by 'Type'.  Modified records\n   MUST\
    \ overwrite the record they replace.\n   Included in any request to insert or\
    \ modify records MUST be a new\n   File-Date record.  This record MUST be placed\
    \ first in the registry.\n   In the event that the File-Date record present in\
    \ the registry has a\n   later date than the record being inserted or modified,\
    \ the existing\n   record MUST be preserved.\n"
- title: 5.2.  Extensions Registry
  contents:
  - "5.2.  Extensions Registry\n   The Language Tag Extensions Registry will also\
    \ be generated and sent\n   to IANA as described in Section 3.7.  This registry\
    \ can contain at\n   most 35 records, and thus changes to this registry are expected\
    \ to be\n   very infrequent.\n   Future work by IANA on the Language Tag Extensions\
    \ Registry is\n   limited to two cases.  First, the IESG MAY request that new\
    \ records\n   be inserted into this registry from time to time.  These requests\n\
    \   MUST include the record to insert in the exact format described in\n   Section\
    \ 3.7.  In addition, there MAY be occasional requests from the\n   maintaining\
    \ authority for a specific extension to update the contact\n   information or\
    \ URLs in the record.  These requests MUST include the\n   complete, updated record.\
    \  IANA is not responsible for validating the\n   information provided, only that\
    \ it is properly formatted.  It should\n   reasonably be seen to come from the\
    \ maintaining authority named in\n   the record present in the registry.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   Language tags used in content negotiation, like\
    \ any other information\n   exchanged on the Internet, might be a source of concern\
    \ because they\n   might be used to infer the nationality of the sender, and thus\n\
    \   identify potential targets for surveillance.\n   This is a special case of\
    \ the general problem that anything sent is\n   visible to the receiving party\
    \ and possibly to third parties as well.\n   It is useful to be aware that such\
    \ concerns can exist in some cases.\n   The evaluation of the exact magnitude\
    \ of the threat, and any possible\n   countermeasures, is left to each application\
    \ protocol (see BCP 72\n   [RFC3552] for best current practice guidance on security\
    \ threats and\n   defenses).\n   The language tag associated with a particular\
    \ information item is of\n   no consequence whatsoever in determining whether\
    \ that content might\n   contain possible homographs.  The fact that a text is\
    \ tagged as being\n   in one language or using a particular script subtag provides\
    \ no\n   assurance whatsoever that it does not contain characters from scripts\n\
    \   other than the one(s) associated with or specified by that language\n   tag.\n\
    \   Since there is no limit to the number of variant, private use, and\n   extension\
    \ subtags, and consequently no limit on the possible length\n   of a tag, implementations\
    \ need to guard against buffer overflow\n   attacks.  See Section 4.3 for details\
    \ on language tag truncation,\n   which can occur as a consequence of defenses\
    \ against buffer overflow.\n   Although the specification of valid subtags for\
    \ an extension (see\n   Section 3.7) MUST be available over the Internet, implementations\n\
    \   SHOULD NOT mechanically depend on it being always accessible, to\n   prevent\
    \ denial-of-service attacks.\n"
- title: 7.  Character Set Considerations
  contents:
  - "7.  Character Set Considerations\n   The syntax in this document requires that\
    \ language tags use only the\n   characters A-Z, a-z, 0-9, and HYPHEN-MINUS, which\
    \ are present in most\n   character sets, so the composition of language tags\
    \ should not have\n   any character set issues.\n   Rendering of characters based\
    \ on the content of a language tag is not\n   addressed in this memo.  Historically,\
    \ some languages have relied on\n   the use of specific character sets or other\
    \ information in order to\n   infer how a specific character should be rendered\
    \ (notably this\n   applies to language- and culture-specific variations of Han\n\
    \   ideographs as used in Japanese, Chinese, and Korean).  When language\n   tags\
    \ are applied to spans of text, rendering engines sometimes use\n   that information\
    \ in deciding which font to use in the absence of\n   other information, particularly\
    \ where languages with distinct writing\n   traditions use the same characters.\n"
- title: 8.  Changes from RFC 3066
  contents:
  - "8.  Changes from RFC 3066\n   The main goals for this revision of language tags\
    \ were the following:\n   *Compatibility.* All RFC 3066 language tags (including\
    \ those in the\n   IANA registry) remain valid in this specification.  The changes\
    \ in\n   this document represent additional constraints on language tags.\n  \
    \ That is, in no case is the syntax more permissive and processors\n   based on\
    \ the ABNF and other provisions of RFC 3066 (such as those\n   described in [XMLSchema])\
    \ will be able to process the tags described\n   by this document.  In addition,\
    \ this document defines language tags\n   in such as way as to ensure future compatibility.\n\
    \   *Stability.* Because of changes in the past in the underlying ISO\n   standards,\
    \ a valid RFC 3066 language tag could become invalid or have\n   its meaning change.\
    \  This has the potential of invalidating content\n   that may have an extensive\
    \ shelf-life.  In this specification, once a\n   language tag is valid, it remains\
    \ valid forever.\n   *Validity.* The structure of language tags defined by this\
    \ document\n   makes it possible to determine if a particular tag is well-formed\n\
    \   without regard for the actual content or \"meaning\" of the tag as a\n   whole.\
    \  This is important because the registry grows and underlying\n   standards change\
    \ over time.  In addition, it must be possible to\n   determine if a tag is valid\
    \ (or not) for a given point in time in\n   order to provide reproducible, testable\
    \ results.  This process must\n   not be error-prone; otherwise implementations\
    \ might give different\n   results.  By having an authoritative registry with\
    \ specific\n   versioning information, the validity of language tags at any point\
    \ in\n   time can be precisely determined (instead of interpolating values\n \
    \  from many separate sources).\n   *Utility.* It is sometimes important to be\
    \ able to differentiate\n   between written forms of a language -- for many implementations\
    \ this\n   is more important than distinguishing between the spoken variants of\n\
    \   a language.  Languages are written in a wide variety of different\n   scripts,\
    \ so this document provides for the generative use of ISO\n   15924 script codes.\
    \  Like the generative use of ISO language and\n   country codes in RFC 3066,\
    \ this allows combinations to be produced\n   without resorting to the registration\
    \ process.  The addition of UN\n   M.49 codes provides for the generation of language\
    \ tags with regional\n   scope, which is also required by some applications.\n\
    \   The recast of the registry from containing whole language tags to\n   subtags\
    \ is a key part of this.  An important feature of RFC 3066 was\n   that it allowed\
    \ generative use of subtags.  This allows people to\n   meaningfully use generated\
    \ tags, without the delays in registering\n   whole tags or the need to register\
    \ all of the combinations that might\n   be useful.\n   The choice of placing\
    \ the extended language and script subtags\n   between the primary language and\
    \ region subtags was widely debated.\n   This design was chosen because the prevalent\
    \ matching and content\n   negotiation schemes rely on the subtags being arranged\
    \ in order of\n   increasing specificity.  That is, the subtags that mark a greater\n\
    \   barrier to mutual intelligibility appear left-most in a tag.  For\n   example,\
    \ when selecting content written in Azerbaijani, the script\n   (Arabic, Cyrillic,\
    \ or Latin) represents a greater barrier to\n   understanding than any regional\
    \ variations (those associated with\n   Azerbaijan or Iran, for example).  Individuals\
    \ who prefer documents\n   in a particular script, but can deal with the minor\
    \ regional\n   differences, can therefore select appropriate content.  Applications\n\
    \   that do not deal with written content will continue to omit these\n   subtags.\n\
    \   *Extensibility.* Because of the widespread use of language tags, it\n   is\
    \ disruptive to have periodic revisions of the core specification,\n   even in\
    \ the face of demonstrated need.  The extension mechanism\n   provides for a way\
    \ for independent RFCs to define extensions to\n   language tags.  These extensions\
    \ have a very constrained, well-\n   defined structure that prevents extensions\
    \ from interfering with\n   implementations of language tags defined in this document.\n\
    \   The document also anticipates features of ISO 639-3 with the addition\n  \
    \ of the extended language subtags, as well as the possibility of other\n   ISO\
    \ 639 parts becoming useful for the formation of language tags in\n   the future.\n\
    \   The use and definition of private use tags have also been modified,\n   to\
    \ allow people to use private use subtags to extend or modify\n   defined tags\
    \ and to move as much information as possible out of\n   private use and into\
    \ the regular structure.\n   The goal for each of these modifications is to reduce\
    \ or eliminate\n   the need for future revisions of this document.\n   The specific\
    \ changes in this document to meet these goals are:\n   o  Defines the ABNF and\
    \ rules for subtags so that the category of all\n      subtags can be determined\
    \ without reference to the registry.\n   o  Adds the concept of well-formed vs.\
    \ validating processors,\n      defining the rules by which an implementation\
    \ can claim to be one\n      or the other.\n   o  Replaces the IANA language tag\
    \ registry with a language subtag\n      registry that provides a complete list\
    \ of valid subtags in the\n      IANA registry.  This allows for robust implementation\
    \ and ease of\n      maintenance.  The language subtag registry becomes the canonical\n\
    \      source for forming language tags.\n   o  Provides a process that guarantees\
    \ stability of language tags, by\n      handling reuse of values by ISO 639, ISO\
    \ 15924, and ISO 3166 in\n      the event that they register a previously used\
    \ value for a new\n      purpose.\n   o  Allows ISO 15924 script code subtags\
    \ and allows them to be used\n      generatively.  Defines a method for indicating\
    \ in the registry\n      when script subtags are necessary for a given language\
    \ tag.\n   o  Adds the concept of a variant subtag and allows variants to be\n\
    \      used generatively.\n   o  Adds the ability to use a class of UN M.49 tags\
    \ for supra-national\n      regions and to resolve conflicts in the assignment\
    \ of ISO 3166\n      codes.\n   o  Defines the private use tags in ISO 639, ISO\
    \ 15924, and ISO 3166\n      as the mechanism for creating private use language,\
    \ script, and\n      region subtags, respectively.\n   o  Adds a well-defined\
    \ extension mechanism.\n   o  Defines an extended language subtag, possibly for\
    \ use with certain\n      anticipated features of ISO 639-3.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [ISO10646]     International Organization for\
    \ Standardization,\n                  \"ISO/IEC 10646:2003. Information technology\
    \ --\n                  Universal Multiple-Octet Coded Character Set (UCS)\",\n\
    \                  2003.\n   [ISO15924]     International Organization for Standardization,\
    \ \"ISO\n                  15924:2004. Information and documentation -- Codes\
    \ for\n                  the representation of names of scripts\", January 2004.\n\
    \   [ISO3166-1]    International Organization for Standardization, \"ISO\n   \
    \               3166-1:1997. Codes for the representation of names of\n      \
    \            countries and their subdivisions -- Part 1: Country\n           \
    \       codes\", 1997.\n   [ISO639-1]     International Organization for Standardization,\
    \ \"ISO\n                  639-1:2002. Codes for the representation of names of\n\
    \                  languages -- Part 1: Alpha-2 code\", 2002.\n   [ISO639-2] \
    \    International Organization for Standardization, \"ISO\n                 \
    \ 639-2:1998. Codes for the representation of names of\n                  languages\
    \ -- Part 2: Alpha-3 code, first edition\",\n                  1998.\n   [ISO646]\
    \       International Organization for Standardization,\n                  \"\
    ISO/IEC 646:1991, Information technology -- ISO 7-bit\n                  coded\
    \ character set for information interchange.\",\n                  1991.\n   [RFC2026]\
    \      Bradner, S., \"The Internet Standards Process --\n                  Revision\
    \ 3\", BCP 9, RFC 2026, October 1996.\n   [RFC2028]      Hovey, R. and S. Bradner,\
    \ \"The Organizations Involved\n                  in the IETF Standards Process\"\
    , BCP 11, RFC 2028,\n                  October 1996.\n   [RFC2119]      Bradner,\
    \ S., \"Key words for use in RFCs to Indicate\n                  Requirement Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [RFC2434]      Narten, T. and H. Alvestrand,\
    \ \"Guidelines for Writing\n                  an IANA Considerations Section in\
    \ RFCs\", BCP 26,\n                  RFC 2434, October 1998.\n   [RFC2860]   \
    \   Carpenter, B., Baker, F., and M. Roberts, \"Memorandum\n                 \
    \ of Understanding Concerning the Technical Work of the\n                  Internet\
    \ Assigned Numbers Authority\", RFC 2860,\n                  June 2000.\n   [RFC3339]\
    \      Klyne, G., Ed. and C. Newman, \"Date and Time on the\n                \
    \  Internet: Timestamps\", RFC 3339, July 2002.\n   [RFC4234]      Crocker, D.,\
    \ Ed. and P. Overell, \"Augmented BNF for\n                  Syntax Specifications:\
    \ ABNF\", RFC 4234, October 2005.\n   [UN_M.49]      Statistics Division, United\
    \ Nations, \"Standard Country\n                  or Area Codes for Statistical\
    \ Use\", UN Standard\n                  Country or Area Codes for Statistical\
    \ Use, Revision 4\n                  (United Nations publication, Sales No. 98.XVII.9,\n\
    \                  June 1999.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [RFC1766]      Alvestrand, H., \"Tags for the\
    \ Identification of\n                  Languages\", RFC 1766, March 1995.\n  \
    \ [RFC2047]      Moore, K., \"MIME (Multipurpose Internet Mail\n             \
    \     Extensions) Part Three: Message Header Extensions for\n                \
    \  Non-ASCII Text\", RFC 2047, November 1996.\n   [RFC2231]      Freed, N. and\
    \ K. Moore, \"MIME Parameter Value and\n                  Encoded Word Extensions:\
    \ Character Sets, Languages,\n                  and Continuations\", RFC 2231,\
    \ November 1997.\n   [RFC2781]      Hoffman, P. and F. Yergeau, \"UTF-16, an encoding\
    \ of\n                  ISO 10646\", RFC 2781, February 2000.\n   [RFC3066]  \
    \    Alvestrand, H., \"Tags for the Identification of\n                  Languages\"\
    , BCP 47, RFC 3066, January 2001.\n   [RFC3552]      Rescorla, E. and B. Korver,\
    \ \"Guidelines for Writing\n                  RFC Text on Security Considerations\"\
    , BCP 72,\n                  RFC 3552, July 2003.\n   [RFC4645]      Ewell, D.,\
    \ Ed., \"Initial Language Subtag Registry\",\n                  RFC 4645, September\
    \ 2006.\n   [RFC4647]      Phillips, A., Ed. and M. Davis, Ed., \"Matching of\n\
    \                  Language Tags\", BCP 47, RFC 4647, September 2006.\n   [Unicode]\
    \      Unicode Consortium, \"The Unicode Standard, Version\n                 \
    \ 5.0\", Boston, MA, Addison-Wesley, 2007. ISBN 0-321-\n                  48091-0.\n\
    \   [XML10]        Bray (et al), T., \"Extensible Markup Language (XML)\n    \
    \              1.0\", 02 2004.\n   [XMLSchema]    Biron, P., Ed. and A. Malhotra,\
    \ Ed., \"XML Schema Part\n                  2: Datatypes Second Edition\", 10\
    \ 2004, <\n                  http://www.w3.org/TR/xmlschema-2/>.\n   [iso639.prin]\
    \  ISO 639 Joint Advisory Committee, \"ISO 639 Joint\n                  Advisory\
    \ Committee:  Working principles for ISO 639\n                  maintenance\"\
    , March 2000, <http://www.loc.gov/\n                  standards/iso639-2/iso639jac_n3r.html>.\n\
    \   [record-jar]   Raymond, E., \"The Art of Unix Programming\", 2003,\n     \
    \             <urn:isbn:0-13-142901-9>.\n"
- title: Appendix A.  Acknowledgements
  contents:
  - "Appendix A.  Acknowledgements\n   Any list of contributors is bound to be incomplete;\
    \ please regard the\n   following as only a selection from the group of people\
    \ who have\n   contributed to make this document what it is today.\n   The contributors\
    \ to RFC 3066 and RFC 1766, the precursors of this\n   document, made enormous\
    \ contributions directly or indirectly to this\n   document and are generally\
    \ responsible for the success of language\n   tags.\n   The following people (in\
    \ alphabetical order) contributed to this\n   document or to RFCs 1766 and 3066:\n\
    \   Glenn Adams, Harald Tveit Alvestrand, Tim Berners-Lee, Marc Blanchet,\n  \
    \ Nathaniel Borenstein, Karen Broome, Eric Brunner, Sean M. Burke, M.T.\n   Carrasco\
    \ Benitez, Jeremy Carroll, John Clews, Jim Conklin, Peter\n   Constable, John\
    \ Cowan, Mark Crispin, Dave Crocker, Elwyn Davies,\n   Martin Duerst, Frank Ellerman,\
    \ Michael Everson, Doug Ewell, Ned\n   Freed, Tim Goodwin, Dirk-Willem van Gulik,\
    \ Marion Gunn, Joel Halpren,\n   Elliotte Rusty Harold, Paul Hoffman, Scott Hollenbeck,\
    \ Richard\n   Ishida, Olle Jarnefors, Kent Karlsson, John Klensin, Erkki\n   Kolehmainen,\
    \ Alain LaBonte, Eric Mader, Ira McDonald, Keith Moore,\n   Chris Newman, Masataka\
    \ Ohta, Dylan Pierce, Randy Presuhn, George\n   Rhoten, Felix Sasaki, Markus Scherer,\
    \ Keld Jorn Simonsen, Thierry\n   Sourbier, Otto Stolz, Tex Texin, Andrea Vine,\
    \ Rhys Weatherley, Misha\n   Wolf, Francois Yergeau and many, many others.\n \
    \  Very special thanks must go to Harald Tveit Alvestrand, who\n   originated\
    \ RFCs 1766 and 3066, and without whom this document would\n   not have been possible.\
    \  Special thanks must go to Michael Everson,\n   who has served as Language Tag\
    \ Reviewer for almost the complete\n   period since the publication of RFC 1766.\
    \  Special thanks to Doug\n   Ewell, for his production of the first complete\
    \ subtag registry, and\n   his work in producing a test parser for verifying language\
    \ tags.\n"
- title: Appendix B.  Examples of Language Tags (Informative)
  contents:
  - "Appendix B.  Examples of Language Tags (Informative)\n   Simple language subtag:\n\
    \      de (German)\n      fr (French)\n      ja (Japanese)\n      i-enochian (example\
    \ of a grandfathered tag)\n   Language subtag plus Script subtag:\n      zh-Hant\
    \ (Chinese written using the Traditional Chinese script)\n      zh-Hans (Chinese\
    \ written using the Simplified Chinese script)\n      sr-Cyrl (Serbian written\
    \ using the Cyrillic script)\n      sr-Latn (Serbian written using the Latin script)\n\
    \   Language-Script-Region:\n      zh-Hans-CN (Chinese written using the Simplified\
    \ script as used in\n      mainland China)\n      sr-Latn-CS (Serbian written\
    \ using the Latin script as used in\n      Serbia and Montenegro)\n   Language-Variant:\n\
    \      sl-rozaj (Resian dialect of Slovenian\n      sl-nedis (Nadiza dialect of\
    \ Slovenian)\n   Language-Region-Variant:\n      de-CH-1901 (German as used in\
    \ Switzerland using the 1901 variant\n      [orthography])\n      sl-IT-nedis\
    \ (Slovenian as used in Italy, Nadiza dialect)\n   Language-Script-Region-Variant:\n\
    \      sl-Latn-IT-nedis (Nadiza dialect of Slovenian written using the\n     \
    \ Latin script as used in Italy.  Note that this tag is NOT\n      RECOMMENDED\
    \ because subtag 'sl' has a Suppress-Script value of\n      'Latn')\n   Language-Region:\n\
    \      de-DE (German for Germany)\n      en-US (English as used in the United\
    \ States)\n      es-419 (Spanish appropriate for the Latin America and Caribbean\n\
    \      region using the UN region code)\n   Private use subtags:\n      de-CH-x-phonebk\n\
    \      az-Arab-x-AZE-derbend\n   Extended language subtags (examples ONLY: extended\
    \ languages MUST be\n   defined by revision or update to this document):\n   \
    \   zh-min\n      zh-min-nan-Hant-CN\n   Private use registry values:\n      x-whatever\
    \ (private use using the singleton 'x')\n      qaa-Qaaa-QM-x-southern (all private\
    \ tags)\n      de-Qaaa (German, with a private script)\n      sr-Latn-QM (Serbian,\
    \ Latin-script, private region)\n      sr-Qaaa-CS (Serbian, private script, for\
    \ Serbia and Montenegro)\n   Tags that use extensions (examples ONLY: extensions\
    \ MUST be defined\n   by revision or update to this document or by RFC):\n   \
    \   en-US-u-islamCal\n      zh-CN-a-myExt-x-private\n      en-a-myExt-b-another\n\
    \   Some Invalid Tags:\n      de-419-DE (two region tags)\n      a-DE (use of\
    \ a single-character subtag in primary position; note\n      that there are a\
    \ few grandfathered tags that start with \"i-\" that\n      are valid)\n     \
    \ ar-a-aaa-b-bbb-a-ccc (two extensions with same single-letter\n      prefix)\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Addison Phillips (Editor)\n   Yahoo! Inc.\n   EMail: addison@inter-locale.com\n\
    \   Mark Davis (Editor)\n   Google\n   EMail: mark.davis@macchiato.com or mark.davis@google.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
