- title: __initial_text__
  contents:
  - '                      POP3 AUTHentication command

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   This document describes the optional AUTH command, for indicating\
    \ an\n   authentication mechanism to the server, performing an authentication\n\
    \   protocol exchange, and optionally negotiating a protection mechanism\n   for\
    \ subsequent protocol interactions.  The authentication and\n   protection mechanisms\
    \ used by the POP3 AUTH command are those used by\n   IMAP4.\n"
- title: 2. The AUTH command
  contents:
  - "2. The AUTH command\n   AUTH mechanism\n         Arguments:\n             a string\
    \ identifying an IMAP4 authentication mechanism,\n             such as defined\
    \ by [IMAP4-AUTH].  Any use of the string\n             \"imap\" used in a server\
    \ authentication identity in the\n             definition of an authentication\
    \ mechanism is replaced with\n             the string \"pop\".\n         Restrictions:\n\
    \             may only be given in the AUTHORIZATION state\n         Discussion:\n\
    \             The AUTH command indicates an authentication mechanism to\n    \
    \         the server.  If the server supports the requested\n             authentication\
    \ mechanism, it performs an authentication\n             protocol exchange to\
    \ authenticate and identify the user.\n             Optionally, it also negotiates\
    \ a protection mechanism for\n             subsequent protocol interactions. \
    \ If the requested\n             authentication mechanism is not supported, the\
    \ server\n             should reject the AUTH command by sending a negative\n\
    \             response.\n             The authentication protocol exchange consists\
    \ of a series\n             of server challenges and client answers that are specific\n\
    \             to the authentication mechanism.  A server challenge,\n        \
    \     otherwise known as a ready response, is a line consisting\n            \
    \ of a \"+\" character followed by a single space and a BASE64\n             encoded\
    \ string.  The client answer consists of a line\n             containing a BASE64\
    \ encoded string.  If the client wishes\n             to cancel an authentication\
    \ exchange, it should issue a\n             line with a single \"*\".  If the\
    \ server receives such an\n             answer, it must reject the AUTH command\
    \ by sending a\n             negative response.\n             A protection mechanism\
    \ provides integrity and privacy\n             protection to the protocol session.\
    \  If a protection\n             mechanism is negotiated, it is applied to all\
    \ subsequent\n             data sent over the connection.  The protection mechanism\n\
    \             takes effect immediately following the CRLF that concludes\n   \
    \          the authentication exchange for the client, and the CRLF of\n     \
    \        the positive response for the server.  Once the protection\n        \
    \     mechanism is in effect, the stream of command and response\n           \
    \  octets is processed into buffers of ciphertext.  Each\n             buffer\
    \ is transferred over the connection as a stream of\n             octets prepended\
    \ with a four octet field in network byte\n             order that represents\
    \ the length of the following data.\n             The maximum ciphertext buffer\
    \ length is defined by the\n             protection mechanism.\n             The\
    \ server is not required to support any particular\n             authentication\
    \ mechanism, nor are authentication mechanisms\n             required to support\
    \ any protection mechanisms.  If an AUTH\n             command fails with a negative\
    \ response, the session remains\n             in the AUTHORIZATION state and client\
    \ may try another\n             authentication mechanism by issuing another AUTH\
    \ command,\n             or may attempt to authenticate by using the USER/PASS\
    \ or\n             APOP commands.  In other words, the client may request\n  \
    \           authentication types in decreasing order of preference,\n        \
    \     with the USER/PASS or APOP command as a last resort.\n             Should\
    \ the client successfully complete the authentication\n             exchange,\
    \ the POP3 server issues a positive response and\n             the POP3 session\
    \ enters the TRANSACTION state.\n         Possible Responses:\n             +OK\
    \ maildrop locked and ready\n             -ERR authentication exchange failed\n\
    \         Examples:\n             S: +OK POP3 server ready\n             C: AUTH\
    \ KERBEROS_V4\n             S: + AmFYig==\n             C: BAcAQU5EUkVXLkNNVS5FRFUAOCAsho84kLN3/IJmrMG+25a4DT\n\
    \                +nZImJjnTNHJUtxAA+o0KPKfHEcAFs9a3CL5Oebe/ydHJUwYFd\n        \
    \        WwuQ1MWiy6IesKvjL5rL9WjXUb9MwT9bpObYLGOKi1Qh\n             S: + or//EoAADZI=\n\
    \             C: DiAF5A4gA+oOIALuBkAAmw==\n             S: +OK Kerberos V4 authentication\
    \ successful\n                ...\n             C: AUTH FOOBAR\n             S:\
    \ -ERR Unrecognized authentication type\n              Note: the line breaks in\
    \ the first client answer  are\n              for editorial clarity and are not\
    \ in real authentica-\n              tors.\n"
- title: 3. Formal Syntax
  contents:
  - "3. Formal Syntax\n   The following syntax specification uses the augmented Backus-Naur\n\
    \   Form (BNF) notation as specified in RFC 822.\n   Except as noted otherwise,\
    \ all alphabetic characters are case-\n   insensitive.  The use of upper or lower\
    \ case characters to define\n   token strings is for editorial clarity only. \
    \ Implementations MUST\n   accept these strings in a case-insensitive fashion.\n\
    \   ATOM_CHAR       ::= <any CHAR except atom_specials>\n   atom_specials   ::=\
    \ \"(\" / \")\" / \"{\" / SPACE / CTLs / \"%\" / \"*\" /\n                   \
    \    <\"> / \"\\\"\n   auth            ::= \"AUTH\" 1*(SPACE / TAB) auth_type\
    \ *(CRLF base64)\n                       CRLF\n   auth_type       ::= 1*ATOM_CHAR\n\
    \   base64          ::= *(4base64_CHAR) [base64_terminal]\n   base64_char    \
    \ ::= \"A\" / \"B\" / \"C\" / \"D\" / \"E\" / \"F\" / \"G\" / \"H\" /\n      \
    \     \"I\" / \"J\" / \"K\" / \"L\" / \"M\" / \"N\" / \"O\" / \"P\" /\n      \
    \                 \"Q\" / \"R\" / \"S\" / \"T\" / \"U\" / \"V\" / \"W\" / \"X\"\
    \ /\n                       \"Y\" / \"Z\" /\n                       \"a\" / \"\
    b\" / \"c\" / \"d\" / \"e\" / \"f\" / \"g\" / \"h\" /\n                      \
    \ \"i\" / \"j\" / \"k\" / \"l\" / \"m\" / \"n\" / \"o\" / \"p\" /\n          \
    \             \"q\" / \"r\" / \"s\" / \"t\" / \"u\" / \"v\" / \"w\" / \"x\" /\n\
    \                       \"y\" / \"z\" /\n                       \"0\" / \"1\"\
    \ / \"2\" / \"3\" / \"4\" / \"5\" / \"6\" / \"7\" /\n                       \"\
    8\" / \"9\" / \"+\" / \"/\"\n                       ;; Case-sensitive\n   base64_terminal\
    \ ::= (2base64_char \"==\") / (3base64_char \"=\")\n   CHAR            ::= <any\
    \ 7-bit US-ASCII character except NUL,\n                        0x01 - 0x7f>\n\
    \   continue_req    ::= \"+\" SPACE base64 CRLF\n   CR              ::= <ASCII\
    \ CR, carriage return, 0x0C>\n   CRLF            ::= CR LF\n   CTL           \
    \  ::= <any ASCII control character and DEL,\n                        0x00 - 0x1f,\
    \ 0x7f>\n   LF              ::= <ASCII LF, line feed, 0x0A>\n   SPACE        \
    \   ::= <ASCII SP, space, 0x20>\n   TAB             ::= <ASCII HT, tab, 0x09>\n"
- title: 4. References
  contents:
  - "4. References\n   [IMAP4-AUTH]  Myers, J., \"IMAP4 Authentication Mechanisms\"\
    , RFC 1731,\n   Carnegie Mellon, December 1994.\n"
- title: 5. Security Considerations
  contents:
  - "5. Security Considerations\n   Security issues are discussed throughout this\
    \ memo.\n"
- title: 6. Author's Address
  contents:
  - "6. Author's Address\n   John G. Myers\n   Carnegie-Mellon University\n   5000\
    \ Forbes Ave\n   Pittsburgh, PA 15213\n   EMail: jgm+@cmu.edu\n"
