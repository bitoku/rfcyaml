- title: __initial_text__
  contents:
  - ''
- title: Application-Layer Traffic Optimization (ALTO) Deployment Considerations
  contents:
  - 'Application-Layer Traffic Optimization (ALTO) Deployment Considerations

    '
- title: Abstract
  contents:
  - "Abstract\n   Many Internet applications are used to access resources such as\n\
    \   pieces of information or server processes that are available in\n   several\
    \ equivalent replicas on different hosts.  This includes, but\n   is not limited\
    \ to, peer-to-peer file sharing applications.  The goal\n   of Application-Layer\
    \ Traffic Optimization (ALTO) is to provide\n   guidance to applications that\
    \ have to select one or several hosts\n   from a set of candidates capable of\
    \ providing a desired resource.\n   This memo discusses deployment-related issues\
    \ of ALTO.  It addresses\n   different use cases of ALTO such as peer-to-peer\
    \ file sharing and\n   Content Delivery Networks (CDNs) and presents corresponding\
    \ examples.\n   The document also includes recommendations for network administrators\n\
    \   and application designers planning to deploy ALTO, such as\n   recommendations\
    \ on how to generate ALTO map information.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7971.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \   2. General Considerations ..........................................4\n  \
    \    2.1. ALTO Entities ..............................................4\n    \
    \       2.1.1. Baseline Scenario ...................................4\n      \
    \     2.1.2. Placement of ALTO Entities ..........................6\n      2.2.\
    \ Classification of Deployment Scenarios .....................8\n           2.2.1.\
    \ Roles in ALTO Deployments ...........................8\n           2.2.2. Information\
    \ Exposure ...............................11\n           2.2.3. More-Advanced\
    \ Deployments ..........................12\n   3. Deployment Considerations by\
    \ ISPs ..............................15\n      3.1. Objectives for the Guidance\
    \ to Applications ...............15\n           3.1.1. General Objectives for\
    \ Traffic Optimization ........15\n           3.1.2. Inter-Network Traffic Localization\
    \ .................16\n           3.1.3. Intra-Network Traffic Localization .................17\n\
    \           3.1.4. Network Offloading .................................18\n  \
    \         3.1.5. Application Tuning .................................19\n    \
    \  3.2. Provisioning of ALTO Topology Data ........................20\n      \
    \     3.2.1. High-Level Process and Requirements ................20\n        \
    \   3.2.2. Data Collection from Data Sources ..................21\n          \
    \ 3.2.3. Partitioning and Grouping of IP Address Ranges .....24\n           3.2.4.\
    \ Rating Criteria and/or Cost Calculation ............25\n      3.3. ALTO Focus\
    \ and Scope ......................................29\n           3.3.1. Limitations\
    \ of Using ALTO beyond Design\n                  Assumptions ........................................29\n\
    \           3.3.2. Limitations of Map-Based Services and\n                  Potential\
    \ Solutions ................................30\n           3.3.3. Limitations\
    \ of Non-Map-Based Services and\n                  Potential Solutions ................................32\n\
    \      3.4. Monitoring ALTO ...........................................33\n  \
    \         3.4.1. Impact and Observation on Network Operation ........33\n    \
    \       3.4.2. Measurement of the Impact ..........................33\n      \
    \     3.4.3. System and Service Performance .....................34\n        \
    \   3.4.4. Monitoring Infrastructures .........................35\n      3.5.\
    \ Abstract Map Examples for Different Types of ISPs .........36\n           3.5.1.\
    \ Small ISP with Single Internet Uplink ..............36\n           3.5.2. ISP\
    \ with Several Fixed-Access Networks .............39\n           3.5.3. ISP with\
    \ Fixed and Mobile Network ..................40\n      3.6. Comprehensive Example\
    \ for Map Calculation .................42\n           3.6.1. Example Network ....................................42\n\
    \           3.6.2. Potential Input Data Processing and Storage ........44\n  \
    \         3.6.3. Calculation of Network Map from the Input Data .....47\n    \
    \       3.6.4. Calculation of Cost Map ............................49\n      3.7.\
    \ Deployment Experiences ....................................50\n   4. Using ALTO\
    \ for P2P Traffic Optimization ........................52\n      4.1. Overview\
    \ ..................................................52\n           4.1.1. Usage\
    \ Scenario .....................................52\n           4.1.2. Applicability\
    \ of ALTO ..............................53\n      4.2. Deployment Recommendations\
    \ ................................55\n           4.2.1. ALTO Services ......................................55\n\
    \           4.2.2. Guidance Considerations ............................56\n  \
    \ 5. Using ALTO for CDNs ............................................58\n    \
    \  5.1. Overview ..................................................58\n      \
    \     5.1.1. Usage Scenario .....................................58\n        \
    \   5.1.2. Applicability of ALTO ..............................60\n      5.2.\
    \ Deployment Recommendations ................................62\n           5.2.1.\
    \ ALTO Services ......................................62\n           5.2.2. Guidance\
    \ Considerations ............................63\n   6. Other Use Cases ................................................64\n\
    \      6.1. Application Guidance in Virtual Private Networks (VPNs) ...64\n  \
    \    6.2. In-Network Caching ........................................66\n    \
    \  6.3. Other Application-Based Network Operations ................68\n   7. Security\
    \ Considerations ........................................68\n      7.1. ALTO as\
    \ a Protocol Crossing Trust Boundaries ..............68\n      7.2. Information\
    \ Leakage from the ALTO Server ..................69\n      7.3. ALTO Server Access\
    \ ........................................70\n      7.4. Faking ALTO Guidance\
    \ ......................................71\n   8. References .....................................................72\n\
    \      8.1. Normative References ......................................72\n  \
    \    8.2. Informative References ....................................73\n   Acknowledgments\
    \ ...................................................76\n   Authors' Addresses\
    \ ................................................77\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Many Internet applications are used to access resources\
    \ such as\n   pieces of information or server processes that are available in\n\
    \   several equivalent replicas on different hosts.  This includes, but\n   is\
    \ not limited to, peer-to-peer (P2P) file sharing applications and\n   Content\
    \ Delivery Networks (CDNs).  The goal of Application-Layer\n   Traffic Optimization\
    \ (ALTO) is to provide guidance to applications\n   that have to select one or\
    \ several hosts from a set of candidates\n   capable of providing a desired resource.\
    \  The basic ideas and problem\n   space of ALTO is described in [RFC5693] and\
    \ the set of requirements\n   is discussed in [RFC6708].  The ALTO protocol is\
    \ specified in\n   [RFC7285].  An ALTO server discovery procedure is defined in\n\
    \   [RFC7286].\n   This document discusses use cases and operational issues that\
    \ can be\n   expected when ALTO gets deployed.  This includes, but is not limited\n\
    \   to, location of the ALTO server, imposed load to the ALTO server, and\n  \
    \ who initiates the queries.  This document provides guidance on which\n   ALTO\
    \ services to use, and it summarizes known challenges as well as\n   deployment\
    \ experiences, including potential processes to generate\n   ALTO network and\
    \ cost maps.  It thereby complements the management\n   considerations in the\
    \ protocol specification [RFC7285], which are\n   independent of any specific\
    \ use of ALTO.\n"
- title: 2.  General Considerations
  contents:
  - '2.  General Considerations

    '
- title: 2.1.  ALTO Entities
  contents:
  - '2.1.  ALTO Entities

    '
- title: 2.1.1.  Baseline Scenario
  contents:
  - "2.1.1.  Baseline Scenario\n   The ALTO protocol [RFC7285] is a client/server\
    \ protocol, operating\n   between a number of ALTO clients and an ALTO server,\
    \ as sketched in\n   Figure 1.  Below, the baseline deployment scenario for ALTO\
    \ entities\n   is first reviewed independently of the actual use case.  Specific\n\
    \   examples are then discussed in the remainder of this document.\n         \
    \        +----------+\n                 |  ALTO    |\n                 |  Server\
    \  |\n                 +----------+\n                       ^\n              \
    \  _.-----|------.\n            ,-''       |       `--.\n          ,'        \
    \   |           `.\n         (     Network |             )\n          `.     \
    \      |           ,'\n            `--.       |       _.-'\n                `------|-----''\n\
    \                       v\n    +----------+  +----------+   +----------+\n   \
    \ |  ALTO    |  |  ALTO    |...|  ALTO    |\n    |  Client  |  |  Client  |  \
    \ |  Client  |\n    +----------+  +----------+   +----------+\n   Figure 1: Baseline\
    \ Deployment Scenario of the ALTO Protocol\n   This document uses the terminology\
    \ introduced in [RFC5693].  In\n   particular, the following terms are defined\
    \ by [RFC5693]:\n   o  ALTO Service: Several resource providers may be able to\
    \ provide\n      the same resource.  The ALTO service gives guidance to a resource\n\
    \      consumer and/or resource directory about which resource\n      provider(s)\
    \ to select in order to optimize the client's\n      performance or quality of\
    \ experience, while improving resource\n      consumption in the underlying network\
    \ infrastructure.\n   o  ALTO Server: A logical entity that provides interfaces\
    \ to satisfy\n      the queries about a particular ALTO service.\n   o  ALTO Client:\
    \ The logical entity that sends ALTO queries.\n      Depending on the architecture\
    \ of the application, one may embed it\n      in the resource consumer and/or\
    \ in the resource directory.\n   o  Resource Consumer: For P2P applications, a\
    \ resource consumer is a\n      specific peer that needs to access resources.\
    \  For client-server\n      or hybrid applications, a consumer is a client that\
    \ needs to\n      access resources.\n   o  Resource Directory: An entity that\
    \ is logically separate from the\n      resource consumer and that assists the\
    \ resource consumer to\n      identify a set of resource providers.  Some P2P\
    \ applications refer\n      to the resource directory as a P2P tracker.\n   We\
    \ differentiate between an ALTO Client and a Resource Consumer as\n   follows:\
    \ the resource consumer is specific instance of a software\n   (\"process\") running\
    \ on a specific host.  It is a client instance of a\n   client/server application\
    \ or a peer of a peer-to-peer application.\n   It is the given (constant) endpoint\
    \ of the data transmissions to be\n   optimized using ALTO.  The optimization\
    \ is done by wisely choosing\n   the other ends of these data flows (i.e., the\
    \ server(s) in a client/\n   server application or the peers in a peer-to-peer\
    \ application), using\n   guidance from ALTO and possibly other information. \
    \ An ALTO client is\n   a piece of software (e.g., a software library) that implements\
    \ the\n   client entity of the ALTO protocol as specified in [RFC7285].  It\n\
    \   consists of data structures that are suitable for representing ALTO\n   queries,\
    \ replies, network and cost maps, etc.  Furthermore, it has to\n   implement an\
    \ HTTP client and a JSON encoder/decoder, or it has to\n   include other software\
    \ libraries that provide these building blocks.\n   In the simplest case, this\
    \ ALTO client library can be linked (or\n   otherwise incorporated) into the resource\
    \ consumer, in order to\n   retrieve information from an ALTO server and thereby\
    \ satisfy the\n   resource consumer's need for guidance.  However, other configurations\n\
    \   are possible as well, as discussed in Section 2.1.2 and other\n   sections\
    \ of this document.\n   According to these definitions, both an ALTO server and\
    \ an ALTO\n   client are logical entities.  A particular ALTO service may be\n\
    \   offered by more than one ALTO server.  In ALTO deployments, the\n   functionality\
    \ of an ALTO server can therefore be realized by several\n   server instances,\
    \ e.g., by using load balancing between different\n   physical servers.  The term\
    \ ALTO server should not be confused with\n   use of a single physical server.\n\
    \   This document uses the term \"Resource Directory\" as defined in\n   [RFC5693].\
    \  This term and its meaning is not to be confused with the\n   \"Information\
    \ Resource Directory (IRD)\" defined as a part of the ALTO\n   protocol [RFC7285],\
    \ i.e., a list of available information resources\n   offered by a specific ALTO\
    \ service and the URIs at which each can be\n   accessed.\n"
- title: 2.1.2.  Placement of ALTO Entities
  contents:
  - "2.1.2.  Placement of ALTO Entities\n   The ALTO server and ALTO clients may be\
    \ situated at various places in\n   a network topology.  An important differentiation\
    \ is whether the ALTO\n   client is located on the host that is the endpoint of\
    \ the data\n   transmissions to be optimized with ALTO (see Figure 2) or whether\
    \ the\n   ALTO client is located on a resource directory, which assists peers\n\
    \   or clients in finding other peers or servers, respectively, but does\n   not\
    \ directly take part in the data transmission (see Figure 3).\n              \
    \                                +--------------+\n                          \
    \                    |     App      |\n                                      \
    \        +-----------+  |\n                                          ===>|ALTO\
    \ Client|  |****\n                                       ===    +-----------+--+\
    \   *\n                                    ===                    *     *\n  \
    \                               ===                       *     *\n      +-------+\
    \     +-------+<===             +--------------+   *\n      |       |     |  \
    \     |                 |     App      |   *\n      |       |.....|       |<========\
    \        +-----------+  |   *\n      |       |     |       |        ========>|ALTO\
    \ Client|  |   *\n      +-------+     +-------+<===             +-----------+--+\
    \   *\n      Source of       ALTO       ==                        *     *\n  \
    \    topological    Server        ==                      *     *\n      information\
    \                    ==       +--------------+   *\n                         \
    \              ==     |     App      |   *\n                                 \
    \        ==   +-----------+  |****\n                                         \
    \  ==>|ALTO Client|  |\n                                              +-----------+--+\n\
    \                                                Application\n      Legend:\n\
    \      === ALTO protocol\n      *** Application protocol\n      ... Provisioning\
    \ protocol\n     Figure 2: Overview of Protocol Interaction between ALTO Elements\n\
    \                       without a Resource Directory\n   Figure 2 shows the operational\
    \ model for an ALTO client running at\n   endpoints.  An example would be a peer-to-peer\
    \ file sharing\n   application that does not use a tracker, such as edonkey. \
    \ In\n   addition, ALTO clients at peers could also be used in a similar way\n\
    \   even if there is a tracker, as further discussed in Section 4.1.2.\n     \
    \                                                  +-----+\n                 \
    \                                    **| App |****\n                         \
    \                          **  +-----+   *\n                                 \
    \                **       *      *\n                                         \
    \      **         *      *\n      +-------+     +-------+     +--------------+\
    \        *      *\n      |       |     |       |     |              |     +-----+\
    \   *\n      |       |.....|       |     +-----------+  |*****| App |   *\n  \
    \    |       |     |       |<===>|ALTO Client|  |     +-----+   *\n      +-------+\
    \     +-------+     +-----------+--+        *      *\n      Source of       ALTO\
    \          Resource   **         *      *\n      topological    Server       \
    \  directory    **       *      *\n      information                         \
    \         **  +-----+   *\n                                                  \
    \   **| App |****\n                                                       +-----+\n\
    \                                                     Application\n      Legend:\n\
    \      === ALTO protocol\n      *** Application protocol\n      ... Provisioning\
    \ protocol\n            Figure 3: Overview of Protocol Interaction between\n \
    \                 ALTO Elements with a Resource Directory\n   In Figure 3, a use\
    \ case with a resource directory is illustrated,\n   e.g., a tracker in a peer-to-peer\
    \ file-sharing application such as\n   BitTorrent.  Both deployment scenarios\
    \ may differ in the number of\n   ALTO clients that access an ALTO service.  If\
    \ an ALTO client is\n   implemented in a resource directory, an ALTO server may\
    \ be accessed\n   by a limited and less dynamic set of clients, whereas in the\
    \ general\n   case any host could be an ALTO client.  This use case is further\n\
    \   detailed in Section 4.\n   Using ALTO in CDNs may be similar to a resource\
    \ directory [CDN-USE].\n   The ALTO server can also be queried by CDN entities\
    \ to get guidance\n   about where a particular client accessing data in the CDN\
    \ is located\n   in the Internet Service Provider's network, as discussed in\n\
    \   Section 5.\n"
- title: 2.2.  Classification of Deployment Scenarios
  contents:
  - '2.2.  Classification of Deployment Scenarios

    '
- title: 2.2.1.  Roles in ALTO Deployments
  contents:
  - "2.2.1.  Roles in ALTO Deployments\n   ALTO is a general-purpose protocol and\
    \ it is intended to be used by a\n   wide range of applications.  In different\
    \ use cases, applications,\n   resource directories, etc., can correspond to different\n\
    \   functionality.  The use cases listed in this document are not meant\n   to\
    \ be comprehensive.  This also implies that there are different\n   possibilities\
    \ where the ALTO entities are actually located, i.e., if\n   the ALTO clients\
    \ and the ALTO server are in the same Internet Service\n   Provider (ISP) domain,\
    \ or if the clients and the ALTO server are\n   managed/owned/located in different\
    \ domains.\n   An ALTO deployment involves four kinds of entities:\n   1.  Source\
    \ of topological information\n   2.  ALTO server\n   3.  ALTO client\n   4.  Resource\
    \ consumer\n   Each of these entities corresponds to a certain role, which results\n\
    \   in requirements and constraints on the interaction between the\n   entities.\n\
    \   A key design objective of the ALTO service is that each of these four\n  \
    \ roles can be separated, i.e., they can be realized by different\n   organizations\
    \ or disjoint system components.  ALTO is inherently\n   designed for use in multi-domain\
    \ environments.  Most importantly,\n   ALTO is designed to enable deployments\
    \ in which the ALTO server and\n   the ALTO client are not located within the\
    \ same administrative\n   domain.\n   As explained in [RFC5693], from this follows\
    \ that at least three\n   different kinds of entities can operate an ALTO server:\n\
    \   1.  Network operators.  Network Service Providers (NSPs) such as ISPs\n  \
    \     may have detailed knowledge of their network topology and\n       policies.\
    \  In this case, the source of the topology information\n       and the provider\
    \ of the ALTO server may be part of the same\n       organization.\n   2.  Third\
    \ parties.  Topology information could also be collected by\n       companies\
    \ or organizations that are distinct from the network\n       operators, yet have\
    \ arranged certain legal agreements with one or\n       more network operators,\
    \ regarding access to their topology\n       information and/or doing measurements\
    \ in their networks.\n       Examples of such entities could be CDN operators\
    \ or companies\n       specialized in offering ALTO services on behalf of ISPs.\n\
    \   3.  User communities.  User communities could run distributed\n       measurements\
    \ for estimating the topology of the Internet.  In\n       this case, the topology\
    \ information may not originate from ISP\n       data.\n   Regarding the interaction\
    \ between ALTO server and client, ALTO\n   deployments can be differentiated according\
    \ to the following aspects:\n   1.  Applicable trust model: The deployment of\
    \ ALTO can differ\n       depending on whether or not the ALTO client and ALTO\
    \ server are\n       operated within the same organization and/or network.  This\n\
    \       affects a number of constraints because the trust model is very\n    \
    \   different.  For instance, as discussed later in this memo, the\n       level\
    \ of detail of maps can depend on who the involved parties\n       actually are.\n\
    \   2.  Composition of the user group: The main use case of ALTO is to\n     \
    \  provide guidance to any Internet application.  However, an\n       operator\
    \ of an ALTO server could also decide to offer guidance\n       only to a set\
    \ of well-known ALTO clients, e.g., after\n       authentication and authorization.\
    \  In the peer-to-peer\n       application use case, this could imply that only\
    \ selected\n       trackers are allowed to access the ALTO server.  The security\n\
    \       implications of using ALTO in closed groups differ from the\n       public\
    \ Internet.\n   3.  Covered destinations: In general, an ALTO server has to be\
    \ able\n       to provide guidance for all potential destinations.  Yet, in\n\
    \       practice, a given ALTO client may only be interested in a subset\n   \
    \    of destinations, e.g., only in the network cost between a limited\n     \
    \  set of resource providers.  For instance, CDN optimization may\n       not\
    \ need the full ALTO cost maps because traffic between\n       individual residential\
    \ users is not in scope.  This may imply\n       that an ALTO server only has\
    \ to provide the costs that matter for\n       a given user, e.g., by customized\
    \ maps.\n   The following sections enumerate different classes of use cases for\n\
    \   ALTO, and they discuss deployment implications of each of them.  In\n   principle,\
    \ an ALTO server can be operated by any organization, and\n   there is no requirement\
    \ that an ALTO server be deployed and operated\n   by an ISP.  Yet, since the\
    \ ALTO solution is designed for ISPs, most\n   examples in this document assume\
    \ that the operator of an ALTO server\n   is a network operator (e.g., an ISP\
    \ or the network department in a\n   large enterprise) that offers ALTO guidance\
    \ in particular to users of\n   this network.\n   It must be emphasized that any\
    \ application using ALTO must also work\n   if no ALTO servers can be found or\
    \ if no responses to ALTO queries\n   are received, e.g., due to connectivity\
    \ problems or overload\n   situations (see also [RFC6708]).\n"
- title: 2.2.2.  Information Exposure
  contents:
  - "2.2.2.  Information Exposure\n   There are basically two different approaches\
    \ to how an ALTO server\n   can provide network information and guidance:\n  \
    \ 1.  The ALTO server provides maps that contain provider-defined cost\n     \
    \  values between network location groupings (e.g., sets of IP\n       prefixes).\
    \  These maps can be retrieved by clients via the ALTO\n       protocol, and the\
    \ actual processing of the map data is done\n       inside the client.  Since\
    \ the maps contain (aggregated) cost\n       information for all endpoints, the\
    \ client does not have to reveal\n       any internal operational data, such as\
    \ the IP addresses of\n       candidate resource providers.  The ALTO protocol\
    \ supports this\n       mode of operation by the Network and Cost Map Service.\n\
    \   2.  The ALTO server provides a query interface that returns costs or\n   \
    \    rankings for explicitly specified endpoints.  This means that the\n     \
    \  query of the ALTO client has to include additional information\n       (e.g.,\
    \ a list of IP addresses).  The server then calculates and\n       returns costs\
    \ or rankings for the endpoints specified in the\n       request (e.g., a sorted\
    \ list of the IP addresses).  In ALTO, this\n       approach can be realized by\
    \ the Endpoint Cost Service (ECS) and\n       other related services.\n   Both\
    \ approaches have different privacy implications for the server\n   and client:\n\
    \   For the client, approach 1 has the advantage that all operational\n   information\
    \ stays within the client and is not revealed to the\n   provider of the server.\
    \  However, this service implies that a network\n   operator providing an ALTO\
    \ server has to expose a certain amount of\n   information about its network structure\
    \ (e.g., IP prefixes or\n   topology information in general).\n   For the operator\
    \ of a server, approach 2 has the advantage that the\n   query responses reveal\
    \ less topology information to ALTO clients.\n   However, it should be noted that\
    \ collaborating ALTO clients could\n   gather more information than expected by\
    \ aggregating and correlating\n   responses to multiple queries sent to the ALTO\
    \ server (see\n   Section 5.2.1, item (3) of [RFC6708]).  Furthermore, this method\n\
    \   requires that clients send internal operational information to the\n   server,\
    \ such as the IP addresses of hosts also running the\n   application.  For clients,\
    \ such data can be sensitive.\n   As a result, both approaches have their pros\
    \ and cons, as further\n   detailed in Section 3.3.\n"
- title: 2.2.3.  More-Advanced Deployments
  contents:
  - "2.2.3.  More-Advanced Deployments\n   From an ALTO client's perspective, there\
    \ are different ways to use\n   ALTO:\n   1.  Single-service instance with single-metric\
    \ guidance: An ALTO\n       client only obtains guidance regarding a single metric\
    \ (e.g.,\n       \"routingcost\") from a single ALTO service, e.g., an ALTO server\n\
    \       that is offered by the network service provider of the\n       corresponding\
    \ access network.  Corresponding ALTO server\n       instances can be discovered,\
    \ e.g., by ALTO server discovery\n       [RFC7286] [XDOM-DISC].  Since the ALTO\
    \ protocol is an HTTP-based,\n       REST-ful (Representational State Transfer)\
    \ protocol, the operator\n       of an ALTO may use well-known techniques for\
    \ serving large web\n       sites, such as load balancers, in order to serve a\
    \ large number\n       of ALTO queries.  The ALTO protocol also supports the use\
    \ of\n       different URIs for different ALTO features and thereby the\n    \
    \   distribution of the service onto several servers.\n   2.  Single service instance\
    \ with multiple metric guidance: An ALTO\n       client could also query an ALTO\
    \ service for different kinds of\n       information, e.g., cost maps with different\
    \ metrics.  The ALTO\n       protocol is extensible and permits such operation.\
    \  However, ALTO\n       does not define how a client shall deal with different\
    \ forms of\n       guidance, and it is up to the client to interpret the received\n\
    \       information accordingly.\n   3.  Multiple service instances: An ALTO client\
    \ can also decide to\n       access multiple ALTO servers providing guidance,\
    \ possibly from\n       different operators or organizations.  Each of these services\
    \ may\n       only offer partial guidance, e.g., for a certain network\n     \
    \  partition.  In that case, it may be difficult for an ALTO client\n       to\
    \ compare the guidance from different services.  Different\n       organization\
    \ may use different methods to determine maps, and\n       they may also have\
    \ different (possibly even contradicting or\n       competing) guidance objectives.\
    \  How to discover multiple ALTO\n       servers and how to deal with conflicting\
    \ guidance is an open\n       issue.\n   There are also different options regarding\
    \ the synchronization of\n   guidance offered by an ALTO service:\n   1.  Authoritative\
    \ servers: An ALTO server instance can provide\n       guidance for all destinations\
    \ for all kinds of ALTO clients.\n   2.  Cascaded servers: An ALTO server may\
    \ itself include an ALTO\n       client and query other ALTO servers, e.g., for\
    \ certain\n       destinations.  This results is a cascaded deployment of ALTO\n\
    \       servers, as further explained below.\n   3.  Inter-server synchronization:\
    \ Different ALTO servers may\n       communicate by other means.  This approach\
    \ is not further\n       discussed in this document.\n   An assumption of the\
    \ ALTO design is that ISPs operate ALTO servers\n   independently, irrespective\
    \ of other ISPs.  This may be true for most\n   envisioned deployments of ALTO,\
    \ but there may be certain deployments\n   that may have different settings. \
    \ Figure 4 shows such a setting with\n   a university network that is connected\
    \ to two upstream providers.\n   NREN is a National Research and Education Network,\
    \ which provides\n   cheap high-speed connectivity to specific destinations, e.g.,\
    \ other\n   universities.  ISP is a commercial upstream provider from which the\n\
    \   university buys connectivity to all destinations that cannot be\n   reached\
    \ via the NREN.  The university, as well as ISP, are operating\n   their own ALTO\
    \ server.  The ALTO clients, located on the peers in the\n   university network\
    \ will contact the ALTO server located at the\n   university.\n          +-----------+\n\
    \          |    ISP    |\n          |   ALTO    |<==========================++\n\
    \          |  Server   |                           ||\n          +-----------+\
    \                           ||\n            ,-------.            ,------.    \
    \     ||\n         ,-'         `-.      ,-'         `-.     ||\n        /   Commercial\
    \  \\    /               \\    ||\n       (    Upstream     )  (       NREN  \
    \    )   ||\n        \\   ISP         /    \\               /    ||\n        \
    \ `-.         ,-'      `-.         ,-'     ||\n            `---+---'         \
    \   `+------'        ||\n                |                 |               ||\n\
    \                |                 |               ||\n                |,-------------.\
    \  |               \\/\n              ,-+               `-+          +-----------+\n\
    \            ,'      University     `.        |University |\n           (    \
    \    Network          )       |   ALTO    |\n            `.                  \
    \    /        |  Server   |\n              `-.               +--'         +-----------+\n\
    \                 `+------------'|              /\\     /\\\n                \
    \  |             |              ||     ||\n         +--------+-+         +-+--------+\
    \     ||     ||\n         |   Peer1  |         |   PeerN  |<====++     ||\n  \
    \       +----------+         +----------+            ||\n              /\\   \
    \                                   ||\n              ||                     \
    \                 ||\n              ++======================================++\n\
    \      Legend:\n      === ALTO protocol\n                Figure 4: Example of\
    \ a Cascaded ALTO Server\n   In this setting, all destinations that can be reached\
    \ via the NREN\n   are preferred in the rating of the university's ALTO server.\
    \  In\n   contrast, all traffic that is not routed via the NREN will be handled\n\
    \   by the commercial upstream ISP and is in general less preferred due\n   to\
    \ the associated costs.  Yet, there may be significant differences\n   between\
    \ various destinations reached via the ISP.  Therefore, the\n   ALTO server at\
    \ the university may also include the guidance given by\n   the ISP ALTO server\
    \ in its replies to the ALTO clients.  This is an\n   example for cascaded ALTO\
    \ servers.\n"
- title: 3.  Deployment Considerations by ISPs
  contents:
  - '3.  Deployment Considerations by ISPs

    '
- title: 3.1.  Objectives for the Guidance to Applications
  contents:
  - '3.1.  Objectives for the Guidance to Applications

    '
- title: 3.1.1.  General Objectives for Traffic Optimization
  contents:
  - "3.1.1.  General Objectives for Traffic Optimization\n   The Internet consists\
    \ of many networks.  The networks are owned and\n   managed by different network\
    \ operators, such as commercial ISPs,\n   enterprise IT departments, universities,\
    \ and other organizations.\n   These network operators provide network connectivity,\
    \ e.g., by access\n   networks, such as cable networks, xDSL networks, 3G/4G mobile\n\
    \   networks, etc.  Network operators need to manage, control, and audit\n   the\
    \ traffic.  Therefore, it is important to understand how to deploy\n   an ALTO\
    \ service and what its expected impact might be.\n   The general objective of\
    \ ALTO is to give guidance to applications on\n   what endpoints (e.g., IP addresses\
    \ or IP prefixes) are to be\n   preferred according to the operator of the ALTO\
    \ server.  The ALTO\n   protocol gives means to let the ALTO server operator express\
    \ its\n   preference, whatever this preference is.\n   ALTO enables network operators\
    \ to support application-level traffic\n   engineering by influencing application\
    \ resource provider selection.\n   This traffic engineering can have different\
    \ objectives:\n   1.  Inter-network traffic localization: ALTO can help to reduce\n\
    \       inter-domain traffic.  The networks of different network\n       operators\
    \ are interconnected through peering points.  From a\n       business view, the\
    \ inter-network settlement is needed for\n       exchanging traffic between these\
    \ networks.  These peering\n       agreements can be costly.  To reduce these\
    \ costs, a simple\n       objective is to decrease the traffic exchange across\
    \ the peering\n       points and thus keep the traffic in the own network or Autonomous\n\
    \       System (AS) as far as possible.\n   2.  Intra-network traffic localization:\
    \ In case of large network\n       operators, the network may be grouped into\
    \ several networks,\n       domains, or ASes.  The core network includes one or\
    \ several\n       backbone networks, which are connected to multiple aggregation,\n\
    \       metro, and access networks.  If traffic can be limited to certain\n  \
    \     areas such as access networks, this decreases the usage of\n       backbone\
    \ and thus helps to save resources and costs.\n   3.  Network offloading: Compared\
    \ to fixed networks, mobile networks\n       have some special characteristics,\
    \ including lower link\n       bandwidth, high cost, limited radio frequency resource,\
    \ and\n       limited terminal battery.  In mobile networks, wireless links\n\
    \       should be used efficiently.  For example, in the case of a P2P\n     \
    \  service, it is likely that hosts should prefer retrieving data\n       from\
    \ hosts in fixed networks, and avoid retrieving data from\n       mobile hosts.\n\
    \   4.  Application tuning: ALTO is also a tool to optimize the\n       performance\
    \ of applications that depend on the network and\n       perform resource provider\
    \ selection decisions among network\n       endpoints; an example is the network-aware\
    \ selection of CDN\n       caches.\n   In the following, these objectives are\
    \ explained in more detail with\n   examples.\n"
- title: 3.1.2.  Inter-Network Traffic Localization
  contents:
  - "3.1.2.  Inter-Network Traffic Localization\n   ALTO guidance can be used to keep\
    \ traffic local in a network, for\n   instance, in order to reduce peering costs.\
    \  An ALTO server can let\n   applications prefer other hosts within the same\
    \ network operator's\n   network instead of randomly connecting to other hosts\
    \ that are\n   located in another operator's network.  Here, a network operator\n\
    \   would always express its preference for hosts in its own network,\n   while\
    \ hosts located outside its own network are to be avoided (i.e.,\n   they are\
    \ undesired to be considered by the applications).  Figure 5\n   shows such a\
    \ scenario where hosts prefer hosts in the same network\n   (e.g., Host 1 and\
    \ Host 2 in ISP1 and Host 3 and Host 4 in ISP2).\n                           \
    \ ,-------.         +-----------+\n          ,---.          ,-'         `-.  \
    \    |   Host 1  |\n       ,-'     `-.      /     ISP 1   ########|ALTO Client|\n\
    \      /           \\    /              #  \\    +-----------+\n     /    ISP\
    \ X    \\   |              #  |    +-----------+\n    /               \\  \\ \
    \             ########|   Host 2  |\n   ;             +----------------------------|ALTO\
    \ Client|\n   |             |   |   `-.         ,-'      +-----------+\n   | \
    \            |   |      `-------'\n   |     Inter-  |   |      ,-------.     \
    \    +-----------+\n   :     network |   ;   ,-'         `########|   Host 3 \
    \ |\n    \\    traffic |  /   /     ISP 2   # \\     |ALTO Client|\n     \\  \
    \         | /   /              #  \\    +-----------+\n      \\          |/  \
    \  |              #  |    +-----------+\n       `-.     ,-|     \\           \
    \   ########|   Host 4  |\n          `---'  +----------------------------|ALTO\
    \ Client|\n                         `-.         ,-'      +-----------+\n     \
    \                       `-------'\n       Legend:\n       ### preferred \"connections\"\
    \n       --- non-preferred \"connections\"\n               Figure 5: Inter-Network\
    \ Traffic Localization\n   Examples for corresponding ALTO maps can be found in\
    \ Section 3.5.\n   Depending on the application characteristics, it may not be\
    \ possible\n   or even desirable to completely localize all traffic.\n"
- title: 3.1.3.  Intra-Network Traffic Localization
  contents:
  - "3.1.3.  Intra-Network Traffic Localization\n   The previous section describes\
    \ the results of the ALTO guidance on an\n   inter-network level.  In the same\
    \ way, ALTO can also be used for\n   intra-network localization.  In this case,\
    \ ALTO provides guidance on\n   which internal hosts are to be preferred inside\
    \ a single network\n   (e.g., one AS).  This application-level traffic engineering\
    \ can\n   reduce the capacity requirements in the core network of an ISP.\n  \
    \ Figure 6 shows such a scenario where Host 1 and Host 2 are located in\n   an\
    \ access net 1 of ISP 1 and connect via a low capacity link to the\n   core of\
    \ the same ISP 1.  If Host 1 and Host 2 exchange their data\n   with remote hosts,\
    \ they would probably congest the bottleneck link.\n              Bottleneck \
    \   ,-------.         +-----------+\n          ,---.     |    ,-'         `-.\
    \      |   Host 1  |\n       ,-'     `-.  |   /     ISP 1   ########|ALTO Client|\n\
    \      /           \\ |  /    (Access   #  \\    +-----------+\n     /    ISP\
    \ 1    \\|  |     net 1)   #  |    +-----------+\n    /   (Core       V  \\  \
    \            ########|   Host 2  |\n   ;    network) +--X~~~X---------------------|ALTO\
    \ Client|\n   |             |   |   `-.         ,-'      +-----------+\n   | \
    \            |   |      `-------'\n   |             |   |      ,-------.     \
    \    +-----------+\n   :             |   ;   ,-'         `########|   Host 3 \
    \ |\n    \\            |  /   /     ISP 1   # \\     |ALTO Client|\n     \\  \
    \         | /   /     (Access  #  \\    +-----------+\n      \\          |/  \
    \  |      net 2)  #  |    +-----------+\n       `-.     ,-X     \\           \
    \   ########|   Host 4  |\n          `---'  ~~~~~~~X---------------------|ALTO\
    \ Client|\n                   ^     `-.         ,-'      +-----------+\n     \
    \              |        `-------'\n                Bottleneck\n       Legend:\n\
    \       ### preferred \"connections\"\n       --- non-preferred \"connections\"\
    \n               Figure 6: Intra-Network Traffic Localization\n   In such a situation,\
    \ the operator can guide the hosts to try local\n   hosts in the same network\
    \ islands first, avoiding or at least\n   lowering the effect on the bottleneck\
    \ link, as shown in Figure 6.\n   The objective is to avoid bottlenecks by optimized\
    \ endpoint selection\n   at the application level.  That said, it must be understood\
    \ that ALTO\n   is not a general-purpose method to deal with the congestion at\
    \ the\n   bottleneck.\n"
- title: 3.1.4.  Network Offloading
  contents:
  - "3.1.4.  Network Offloading\n   Another scenario is offloading traffic from networks.\
    \  This use of\n   ALTO can be beneficial in particular in mobile networks.  A\
    \ network\n   operator may have the desire to guide hosts in its mobile network\
    \ to\n   use hosts outside this mobile network.  One reason could be that the\n\
    \   wireless network or the mobile hosts were not designed for direct\n   peer-to-peer\
    \ communications between mobile hosts, and therefore, it\n   makes sense for peers\
    \ to fetch content from remote peers in other\n   parts of the Internet.\n   \
    \                         ,-------.         +-----------+\n          ,---.   \
    \       ,-'         `-.      |   Host 1  |\n       ,-'     `-.      /     ISP\
    \ 1   +-------|ALTO Client|\n      /           \\    /    (Mobile   |  \\    +-----------+\n\
    \     /    ISP X    \\   |    network)  |  |    +-----------+\n    /         \
    \      \\  \\              +-------|   Host 2  |\n   ;             #############################|ALTO\
    \ Client|\n   |             #   |   `-.         ,-'      +-----------+\n   | \
    \            #   |      `-------'\n   |             #   |      ,-------.\n   :\
    \             #   ;   ,-'         `-.\n    \\            #  /   /     ISP 2  \
    \   \\\n     \\           # /   /     (Fixed      \\\n      \\          #/   \
    \ |     network)    |    +-----------+\n       `-.     ,-#     \\            \
    \     /    |   Host 3  |\n          `---'  #############################|ALTO\
    \ Client|\n                         `-.         ,-'      +-----------+\n     \
    \                       `-------'\n       Legend:\n       ### preferred \"connections\"\
    \n       --- non-preferred \"connections\"\n              Figure 7: ALTO Traffic\
    \ Network De-localization\n   Figure 7 shows the result of such a guidance process\
    \ where Host 2\n   prefers a connection with Host 3 instead of Host 1, as shown\
    \ in\n   Figure 5.\n   A realization of this scenario may have certain limitations\
    \ and may\n   not be possible in all cases.  For instance, it may require the\
    \ ALTO\n   server to distinguish mobile and non-mobile hosts based on their IP\n\
    \   address.  This may depend on mobility solutions and may not be\n   possible\
    \ or accurate.  In general, ALTO is not intended as a fine-\n   grained traffic\
    \ engineering solution for individual hosts.  Instead,\n   it typically works\
    \ on aggregates (e.g., if it is known that certain\n   IP prefixes are often assigned\
    \ to mobile users).\n"
- title: 3.1.5.  Application Tuning
  contents:
  - "3.1.5.  Application Tuning\n   ALTO can also provide guidance to optimize the\
    \ application-level\n   topology of networked applications, e.g., by exposing\
    \ network\n   performance information.  Applications can often run their own\n\
    \   measurements to determine network performance, e.g., by active delay\n   measurements\
    \ or bandwidth probing, but such measurements result in\n   overhead and complexity.\
    \  Accessing an ALTO server can be a simpler\n   alternative.  In addition, an\
    \ ALTO server may also expose network\n   information that applications cannot\
    \ easily measure or reverse-\n   engineer.\n"
- title: 3.2.  Provisioning of ALTO Topology Data
  contents:
  - '3.2.  Provisioning of ALTO Topology Data

    '
- title: 3.2.1.  High-Level Process and Requirements
  contents:
  - "3.2.1.  High-Level Process and Requirements\n   A process to generate ALTO topology\
    \ information typically comprises\n   several steps.  The first step is to gather\
    \ information, which is\n   described in the following section.  The subsequent\
    \ sections describe\n   how the gathered data can be processed and which methods\
    \ can be\n   applied to generate the information exposed by ALTO, such as network\n\
    \   and cost maps.\n   Providing ALTO guidance can result in a win-win situation\
    \ for network\n   providers and users of the ALTO information.  Applications possibly\n\
    \   get a better performance, while the network provider has means to\n   optimize\
    \ the traffic engineering and thus its costs.  Yet, there can\n   be security\
    \ concerns with exposing topology data.  Corresponding\n   limitations are discussed\
    \ in Section 7.2.\n   ISPs may have important privacy requirements when deploying\
    \ ALTO,\n   which have to be taken into account when processing ALTO topology\n\
    \   data.  In particular, an ISP may not be willing to expose sensitive\n   operational\
    \ details of its network.  The topology abstraction of ALTO\n   enables an ISP\
    \ to expose the network topology at a desired\n   granularity only, determined\
    \ by security policies.\n   With the ECS, the ALTO client does not have to implement\
    \ any specific\n   algorithm or mechanism in order to retrieve, maintain and process\n\
    \   network topology information (of any kind).  The complexity of the\n   network\
    \ topology (computation, maintenance and distribution) is kept\n   in the ALTO\
    \ server and ECS is delivered on demand.  This allows the\n   ALTO server to enhance\
    \ and modify the way the topology information\n   sources are used and combined.\
    \  This simplifies the enforcement of\n   privacy policies of the ISP.\n   The\
    \ ALTO Network and Cost Map Service expose an abstract view on the\n   ISP network\
    \ topology.  Therefore, care is needed when constructing\n   those maps in order\
    \ to take privacy policies into account, as further\n   discussed in Section 3.2.3.\
    \  The ALTO protocol also supports further\n   features such as endpoint properties,\
    \ which could also be used to\n   expose topology guidance.  The privacy considerations\
    \ for ALTO maps\n   also apply to such ALTO extensions.\n"
- title: 3.2.2.  Data Collection from Data Sources
  contents:
  - "3.2.2.  Data Collection from Data Sources\n   The first step in the process of\
    \ generating ALTO information is to\n   gather the required information from the\
    \ network.  An ALTO server can\n   collect topological information from a variety\
    \ of sources in the\n   network and provides a cohesive, abstract view of the\
    \ network\n   topology to applications using an ALTO client.  Topology data sources\n\
    \   may include routing protocols, network policies, state and\n   performance\
    \ information, geolocation, etc.  An ALTO server requires\n   at least some topology\
    \ and/or routing information, i.e., information\n   about existing endpoints and\
    \ their interconnection.  With this\n   information, it is in principle possible\
    \ to compute paths between all\n   known endpoints.  Based on such basic data,\
    \ the ALTO server builds an\n   ALTO-specific network topology that represents\
    \ the network as it\n   should be understood and utilized by applications (resource\n\
    \   consumers) at endpoints using ALTO services (e.g., Network and Cost\n   Map\
    \ Service or ECS).  A basic dataset can be extended by many other\n   information\
    \ obtainable from the network.\n   The ALTO protocol does not assume a specific\
    \ network technology or\n   topology.  In principle, ALTO can be used with various\
    \ types of\n   addresses (Endpoint Addresses).  [RFC7285] defines the use of IPv4/\n\
    \   IPv6 addresses or prefixes in ALTO, but further address types could\n   be\
    \ added by extensions.  In this document, only the use of IPv4/IPv6\n   addresses\
    \ is considered.\n   The exposure of network topology information is controlled\
    \ and\n   managed by the ALTO server.  ALTO abstract network topologies can be\n\
    \   automatically generated from the physical or logical topology of the\n   network,\
    \ e.g., using \"live\" network data.  The generation would\n   typically be based\
    \ on policies and rules set by the network operator.\n   The maps and the guidance\
    \ can significantly differ depending on the\n   use case, the network architecture,\
    \ and the trust relationship\n   between ALTO server and ALTO client, etc.  Besides\
    \ the security\n   requirements that consist of not delivering any confidential\
    \ or\n   critical information about the infrastructure, there are efficiency\n\
    \   requirements in terms of what aspects of the network are visible and\n   required\
    \ by the given use case and/or application.\n   The ALTO server operator has to\
    \ ensure that the ALTO topology does\n   not reveal any details that would endanger\
    \ the network integrity and\n   security.  For instance, ALTO is not intended\
    \ to leak raw Interior\n   Gateway Protocol (IGP) or Border Gateway Protocol (BGP)\
    \ databases to\n   ALTO clients.\n                 +--------+   +--------+\n \
    \                |  ALTO  |   |  ALTO  |\n                 | Client |   | Client\
    \ |\n                 +--------+   +--------+\n                        /\\   \
    \  /\\\n                        ||     || ALTO protocol\n                    \
    \    ||     ||\n                        \\/     \\/\n                       +---------+\n\
    \                       |  ALTO   |\n                       | Server  |\n    \
    \                   +---------+\n                        : :   : :\n         \
    \               : :   : :\n             +..........+ :   : +..........+ Provisioning\n\
    \             :            :   :            : protocol\n             :       \
    \     :   :            :\n     +---------+ +---------+ +---------+ +---------+\n\
    \     |   BGP   | |   I2RS  | |   PCE   | |   NMS   | Potential\n     | Speaker\
    \ | |  Client | |         | |   OSS   | data sources\n     +---------+ +---------+\
    \ +---------+ +---------+\n          ^           ^           ^           ^\n \
    \         |           |           |           |\n     Link-State     I2RS    \
    \     TED     Topology and traffic-related\n      NLRI for      data         data\
    \    data from SNMP, NETCONF,\n      IGP/BGP                            RESTCONF,\
    \ REST, IPFIX, etc.\n                 Figure 8: Potential Data Sources for ALTO\n\
    \   As illustrated in Figure 8, the topology data used by an ALTO server\n   can\
    \ originate from different data sources:\n   o  Relevant information sources are\
    \ IGPs or BGP.  An ALTO server\n      could get network routing information by\
    \ listening to IGPs and/or\n      peering with BGP speakers.  For data collection,\
    \ link-state\n      protocols are more suitable since every router propagates\
    \ its\n      information throughout the whole network.  Hence, it is possible\n\
    \      to obtain information about all routers and their neighbors from\n    \
    \  one single router in the network.  In contrast, distance-vector\n      protocols\
    \ are less suitable since routing information is only\n      shared among neighbors.\
    \  To obtain the whole topology with\n      distance-vector routing protocols\
    \ it is necessary to retrieve\n      routing information from every router in\
    \ the network.\n   o  [RFC7752] describes a mechanism by which link-state and\
    \ Traffic\n      Engineering (TE) information can be collected from networks and\n\
    \      shared with external components using the BGP routing protocol.\n     \
    \ This is achieved using a new BGP Network Layer Reachability\n      Information\
    \ (NLRI) encoding format.  The mechanism is applicable\n      to physical and\
    \ virtual IGP links and can also include TE data.\n      For instance, prefix\
    \ data can be carried and originated in BGP,\n      while TE data is originated\
    \ and carried in an IGP.  The mechanism\n      described is subject to policy\
    \ control.\n   o  The Interface to the Routing System (I2RS) is a solution for\
    \ state\n      transfer in and out of the Internet's routing system [RFC7921].\n\
    \      An ALTO server could use an I2RS client to observe routing-related\n  \
    \    information.  With the rise of Software-Defined Networking (SDN)\n      and\
    \ a decoupling of network data and control plane, topology\n      information\
    \ could also be fetched from an SDN controller.  If I2RS\n      is used, [RFC7922]\
    \ provides traceability for these interactions.\n      This scenario is not further\
    \ discussed in the remainder of this\n      document.\n   o  Another potential\
    \ source of topology information could be a Path\n      Computation Element (PCE)\
    \ [RFC4655].  Topology and traffic-related\n      information can be retrieved\
    \ from the Traffic Engineering Database\n      (TED) and Label Switched Path Database\
    \ (LSP-DB).  This scenario is\n      not further discussed in the remainder of\
    \ this document.\n   o  An ALTO server can also leverage a Network Management\
    \ System (NMS)\n      or an Operations Support System (OSS) as data sources. \
    \ NMS or OSS\n      solutions are used to control, operate, and manage a network,\n\
    \      e.g., using the Simple Network Management Protocol (SNMP) or\n      Network\
    \ Configuration Protocol (NETCONF).  As explained for\n      instance in [RFC7491],\
    \ the NMS and OSS can be consumers of network\n      events reported and can act\
    \ on these reports as well as displaying\n      them to users and raising alarms.\
    \  In addition, NMS and OSS\n      systems may have access to routing information\
    \ and network\n      inventory data (e.g., links, nodes, or link properties not\
    \ visible\n      to routing protocols, such as Shared Risk Link Groups).\n   \
    \   Furthermore, Operations, Administration, and Maintenance (OAM)\n      information\
    \ can be leveraged, including traffic utilization\n      obtained from IP Flow\
    \ Information Export (IPFIX), event\n      notifications (e.g., via syslog), liveness\
    \ detection (e.g.,\n      bidirectional forwarding detection, BFD).  NMS or OSS\
    \ systems also\n      may have functions to correlate and orchestrate information\n\
    \      originating from other data sources.  For instance, it could be\n     \
    \ required to correlate IP prefixes with routers (Provider, Provider\n      Edge,\
    \ Customer Edge, etc.), IGP areas, VLAN IDs, or policies.\n   In the context of\
    \ the provisioning protocol, topology information\n   could be modeled in a YANG\
    \ data model [NETWORK-TOPO].\n   The data sources mentioned so far are only a\
    \ subset of potential\n   topology sources and protocols.  Depending on the network\
    \ type,\n   (e.g., mobile, satellite network) different hardware and protocols\n\
    \   are in operation to form and maintain the network.\n   In general, it is challenging\
    \ to gather detailed information about\n   the whole Internet, since the network\
    \ consists of multiple domains\n   and in many cases it is not possible to collect\
    \ information across\n   network borders.  Hence, potential information sources\
    \ may be limited\n   to a certain domain.\n"
- title: 3.2.3.  Partitioning and Grouping of IP Address Ranges
  contents:
  - "3.2.3.  Partitioning and Grouping of IP Address Ranges\n   ALTO introduces provider-defined\
    \ network location identifiers called\n   Provider-defined Identifiers (PIDs)\
    \ to aggregate network endpoints in\n   the Map Services.  Endpoints within one\
    \ PID may be treated as single\n   entity, assuming proximity based on network\
    \ topology or other\n   similarity.  A key use case of PIDs is to specify network\
    \ preferences\n   (costs) between PIDs instead of individual endpoints.  It is\
    \ up to\n   the operator of the ALTO server how to group endpoints and how to\n\
    \   assign PIDs.  For example, a PID may denote a subnet, a set of\n   subnets,\
    \ a metropolitan area, a POP, an autonomous system, or a set\n   of autonomous\
    \ systems.\n   This document only considers deployment scenarios in which PIDs\n\
    \   expand to a set of IP address ranges (CIDR).  A PID is characterized\n   by\
    \ a string identifier and its associated set of endpoint addresses\n   [RFC7285].\
    \  If an ALTO server offers the Map Service, corresponding\n   identifiers have\
    \ to be configured.\n   An automated ALTO implementation may use dynamic algorithms\
    \ to\n   aggregate network topology.  However, it is often desirable to have a\n\
    \   mechanism through which the network operator can control the level\n   and\
    \ details of network aggregation based on a set of requirements and\n   constraints.\
    \  This will typically be governed by policies that\n   enforce a certain level\
    \ of abstraction and prevent leakage of\n   sensitive operational data.\n   For\
    \ instance, an ALTO server may leverage BGP information that is\n   available\
    \ in a network's service provider network layer and compute\n   the group of prefix.\
    \  An example being BGP communities, which are\n   used in MPLS/IP networks as\
    \ a common mechanism to aggregate and group\n   prefixes.  A BGP community is\
    \ an attribute used to tag a prefix to\n   group prefixes based on mostly any\
    \ criteria (as an example, most ISP\n   networks originate BGP prefixes with communities\
    \ identifying the\n   Point of Presence (PoP) where the prefix has been originated).\
    \  These\n   BGP communities could be used to map IP address ranges to PIDs. \
    \ By\n   an additional policy, the ALTO server operator may decide an\n   arbitrary\
    \ cost defined between groups.  Alternatively, there are\n   algorithms that allow\
    \ the dynamic computation of costs between\n   groups.  The ALTO protocol itself\
    \ is independent of such algorithms\n   and policies.\n"
- title: 3.2.4.  Rating Criteria and/or Cost Calculation
  contents:
  - "3.2.4.  Rating Criteria and/or Cost Calculation\n   An ALTO server indicates\
    \ preferences amongst network locations in the\n   form of abstract costs.  These\
    \ costs are generic costs and can be\n   internally computed by the operator of\
    \ the ALTO server according to\n   its own policy.  For a given ALTO network map,\
    \ an ALTO cost map\n   defines directional costs pairwise amongst the set of source\
    \ and\n   destination network locations defined by the PIDs.\n   The ALTO protocol\
    \ permits the use of different cost types.  An ALTO\n   cost type is defined by\
    \ the combination of a cost metric and a cost\n   mode.  The cost metric identifies\
    \ what the costs represent.  The cost\n   mode identifies how the costs should\
    \ be interpreted, i.e., whether\n   returned costs should be interpreted as numerical\
    \ values or ordinal\n   rankings.  The ALTO protocol also allows the definition\
    \ of additional\n   constraints defining which elements of a cost map shall be\
    \ returned.\n   The ALTO protocol specification [RFC7285] defines the \"routingcost\"\
    \n   cost metric as the basic set of rating criteria, which has to be\n   supported\
    \ by all implementations.  This cost metric conveys a generic\n   measure for\
    \ the cost of routing traffic from a source to a\n   destination.  A lower value\
    \ indicates a higher preference for traffic\n   to be sent from a source to a\
    \ destination.  How that metric is\n   calculated is up to the ALTO server.\n\
    \   It is possible to calculate the \"routingcost\" cost metric based on\n   actual\
    \ routing protocol information.  Typically, IGPs provide details\n   about endpoints\
    \ and links within a given network, while the BGP is\n   used to provide details\
    \ about links to endpoints in other networks.\n   Besides topology and routing\
    \ information, networks have a multitude\n   of other attributes about their state,\
    \ condition, and operation that\n   comprises but is not limited to attributes\
    \ like link utilization,\n   bandwidth and delay, ingress/egress points of data\
    \ flows from/towards\n   endpoints outside of the network up to the location of\
    \ nodes and\n   endpoints.\n   In order to enable use of extended information,\
    \ there is a protocol\n   extension procedure to add new ALTO cost types.  The\
    \ following list\n   gives an overview on further rating criteria that have been\
    \ proposed\n   or that are in use by ALTO-related prototype implementations. \
    \ This\n   list is not intended as normative text.  Instead, its only purpose\
    \ is\n   to document and discuss rating criteria that have been proposed so\n\
    \   far.  Whether such rating criteria are useful and whether the\n   corresponding\
    \ information would actually be made available by ISPs\n   can also depend on\
    \ the use case of ALTO.  A list of rating criteria\n   for which normative specifications\
    \ exist and which have successfully\n   passed the IETF review process can be\
    \ found at IANA's \"ALTO Cost\n   Metric Registry\", available from [ALTO-REG].\n\
    \   Distance-related rating criteria:\n   o  Relative topological distance: The\
    \ term relative means that a\n      larger numerical value means greater distance,\
    \ but it is up to the\n      ALTO service how to compute the values, and the ALTO\
    \ client will\n      not be informed about the nature of the computation.  One\
    \ way to\n      determine relative topological distance may be counting AS hops,\n\
    \      but when querying this parameter, the ALTO client must not assume\n   \
    \   that the numbers actually are AS hops.  In addition to the AS\n      path,\
    \ a relative cost value could also be calculated taking into\n      account other\
    \ routing protocol parameters, such as BGP local\n      preference or Multi-Exit\
    \ Discriminator (MED) attributes.\n   o  Absolute topological distance, expressed\
    \ in the number of\n      traversed autonomous systems.\n   o  Absolute topological\
    \ distance, expressed in the number of router\n      hops (i.e., how much the\
    \ TTL value of an IP packet will be\n      decreased during transit).\n   o  Absolute\
    \ physical distance, based on knowledge of the approximate\n      geolocation\
    \ (e.g., continent, country) of an IP address.\n   Performance-related rating\
    \ criteria:\n   o  The minimum achievable throughput between the resource consumer\n\
    \      and the candidate resource provider, which is considered useful by\n  \
    \    the application (only in ALTO queries).\n   o  An arbitrary upper bound for\
    \ the throughput from/to the candidate\n      resource provider (only in ALTO\
    \ responses).  This may be, but is\n      not necessarily, the provisioned access\
    \ bandwidth of the candidate\n      resource provider.\n   o  The maximum Round-Trip\
    \ Time (RTT) between resource consumer and\n      the candidate resource provider,\
    \ which is acceptable for the\n      application for useful communication with\
    \ the candidate resource\n      provider (only in ALTO queries).\n   o  An arbitrary\
    \ lower bound for the RTT between resource consumer and\n      the candidate resource\
    \ provider (only in ALTO responses).  This\n      may be, for example, based on\
    \ measurements of the propagation\n      delay in a completely unloaded network.\n\
    \   Charging-related rating criteria:\n   o  Metrics representing an abstract\
    \ cost, e.g., determined by\n      policies that distinguish \"cheap\" from \"\
    expensive\" IP subnet\n      ranges without detailing the cost function.  According\
    \ to\n      [RFC7285], the abstract metric \"routingcost\" is an example for a\n\
    \      metric for which the cost function does not have to be disclosed.\n   o\
    \  Traffic volume caps, in case the Internet access of the resource\n      consumer\
    \ is not charged with a \"flat rate\".  For each candidate\n      resource location,\
    \ the ALTO service could indicate the amount of\n      data or the bitrate that\
    \ may be transferred from/to this resource\n      location until a given point\
    \ in time, and how much of this amount\n      has already been consumed.  Furthermore,\
    \ an ALTO server may have\n      to indicate how excess traffic would be handled\
    \ (e.g., blocked,\n      throttled, or charged separately at an indicated price),\
    \ e.g., by\n      a new endpoint property.  This is outside the scope of this\n\
    \      document.  Also, it is left for further study how several\n      applications\
    \ would interact if only some of them use this\n      criterion.  Also left for\
    \ further study is the use of such a\n      criterion in resource directories\
    \ that issue ALTO queries on\n      behalf of other endpoints.\n   All the above-listed\
    \ rating criteria are subject to the remarks\n   below:\n   The ALTO client must\
    \ be aware that with high probability the actual\n   performance values will differ\
    \ from whatever an ALTO server exposes.\n   In particular, an ALTO client must\
    \ not consider a throughput\n   parameter as a permission to send data at the\
    \ indicated rate without\n   using congestion control mechanisms.\n   The discrepancies\
    \ are due to various reasons, including, but not\n   limited to the following\
    \ facts:\n   o  The ALTO service is not an admission control system.\n   o  The\
    \ ALTO service may not know the instantaneous congestion status\n      of the\
    \ network.\n   o  The ALTO service may not know all link bandwidths, i.e., where\
    \ the\n      bottleneck really is, and there may be shared bottlenecks.\n   o\
    \  The ALTO service may not have all information about the actual\n      routing.\n\
    \   o  The ALTO service may not know whether the candidate endpoint\n      itself\
    \ is overloaded.\n   o  The ALTO service may not know whether the candidate endpoint\n\
    \      throttles the bandwidth it devotes for the considered application.\n  \
    \ o  The ALTO service may not know whether the candidate endpoint will\n     \
    \ throttle the data it sends to the client (e.g., because of some\n      fairness\
    \ algorithm, such as tit for tat).\n   Because of these inaccuracies and the lack\
    \ of complete, instantaneous\n   state information, which are inherent to the\
    \ ALTO service, the\n   application must use other mechanisms (such as passive\
    \ measurements\n   on actual data transmissions) to assess the currently achievable\n\
    \   throughput, and it must use appropriate congestion control mechanisms\n  \
    \ in order to avoid a congestion collapse.  Nevertheless, the rating\n   criteria\
    \ may provide a useful shortcut for quickly excluding\n   candidate resource providers\
    \ from such probing, if it is known in\n   advance that connectivity is in any\
    \ case worse than what is\n   considered the minimum useful value by the respective\
    \ application.\n   Rating criteria that should not be defined for and used by\
    \ the ALTO\n   service include:\n   o  Performance metrics that are closely related\
    \ to the instantaneous\n      congestion status.  The definition of alternate\
    \ approaches for\n      congestion control is explicitly out of the scope of ALTO.\n\
    \      Instead, other appropriate means, such as using TCP-based\n      transport,\
    \ have to be used to avoid congestion.  In other words,\n      ALTO is a service\
    \ to provide network and policy information, with\n      update intervals that\
    \ are possibly several orders of magnitude\n      slower than congestion-control\
    \ loops (e.g., in TCP) can react on\n      changes in network congestion state.\
    \  This clear separation of\n      responsibilities avoids traffic oscillations\
    \ and can help for\n      network stability and cost optimization.\n   o  Performance\
    \ metrics that raise privacy concerns.  For instance, it\n      has been questioned\
    \ whether an ALTO service should publicly expose\n      the provisioned access\
    \ bandwidth of cable/DSL customers, as this\n      could enable identification\
    \ of \"premium customers\" of an ISP.\n"
- title: 3.3.  ALTO Focus and Scope
  contents:
  - "3.3.  ALTO Focus and Scope\n   The purpose of this section is ensure that administrators\
    \ and users\n   of ALTO services are aware of the objectives of the ALTO protocol\n\
    \   design.  Using ALTO beyond this scope may limit its efficiency.\n   Likewise,\
    \ Map-based and Endpoint-based ALTO Services may face certain\n   issues during\
    \ deployment.  This section explains these limitations\n   and also outlines potential\
    \ solutions.\n"
- title: 3.3.1.  Limitations of Using ALTO beyond Design Assumptions
  contents:
  - "3.3.1.  Limitations of Using ALTO beyond Design Assumptions\n   ALTO is designed\
    \ as a protocol between clients integrated in\n   applications and servers that\
    \ provide network information and\n   guidance (e.g., basic network location structure\
    \ and preferences of\n   network paths).  The objective is to modify network resource\n\
    \   consumption patterns at application level while maintaining or\n   improving\
    \ application performance.  This design focus results in a\n   number of characteristics\
    \ of ALTO:\n   o  Endpoint focus: In typical ALTO use cases, neither the consumer\
    \ of\n      the topology information (i.e., the ALTO client) nor the\n      considered\
    \ resources (e.g., files at endpoints) are part of the\n      network.  The ALTO\
    \ server presents an abstract network topology\n      containing only information\
    \ relevant to an application overlay for\n      better-than-random resource provider\
    \ selection among its\n      endpoints.  The ALTO protocol specification [RFC7285]\
    \ is not\n      designed to expose network internals such as routing tables or\n\
    \      configuration data that are not relevant for application-level\n      resource\
    \ provider selection decisions in network endpoints.\n   o  Abstraction: The ALTO\
    \ services such as the Network and Cost Map\n      Service or the ECS provide\
    \ an abstract view of the network only.\n      The operator of the ALTO server\
    \ has full control over the\n      granularity (e.g., by defining policies how\
    \ to aggregate subnets\n      into PIDs) and the level of detail of the abstract\
    \ network\n      representation (e.g., by deciding what cost types to support).\n\
    \   o  Multiple administrative domains: The ALTO protocol is designed for\n  \
    \    use cases where the ALTO server and client can be located in\n      different\
    \ organizations or trust domains.  ALTO assumes a loose\n      coupling between\
    \ server and client.  In addition, ALTO does not\n      assume that an ALTO client\
    \ has any a priori knowledge about the\n      ALTO server and its supported features.\
    \  An ALTO server can be\n      discovered automatically.\n   o  Read-only: ALTO\
    \ is a query/response protocol to retrieve guidance\n      information.  Neither\
    \ network/cost map queries nor queries to the\n      ECS are designed to affect\
    \ state in the network.\n   If ALTO shall be deployed for use cases beyond the\
    \ scope defined by\n   these assumptions, the protocol design may result in limitations.\n\
    \   For instance, in an Application-Based Network Operations (ABNO)\n   environment,\
    \ the application could issue an explicit service request\n   to the network [RFC7491].\
    \  In this case, the application would\n   require detailed knowledge about the\
    \ internal network topology and\n   the actual state.  A network configuration\
    \ would also require a\n   corresponding security solution for authentication\
    \ and authorization.\n   ALTO is not designed for operations to control, operate,\
    \ and manage a\n   network.\n   Such deployments could be addressed by network\
    \ management solutions,\n   e.g., based on SNMP [RFC3411] or NETCONF [RFC6241]\
    \ and YANG\n   [RFC6020], that are typically designed to manipulate configuration\n\
    \   state.  [RFC7491] contains a more detailed discussion of interfaces\n   between\
    \ components such as Element Management System (EMS), Network\n   Management System\
    \ (NMS), Operational Support System (OSS), Traffic\n   Engineering Database (TED),\
    \ Label Switched Path Database (LSP-DB),\n   Path Computation Element (PCE), and\
    \ other Operations, Administration,\n   and Maintenance (OAM) components.\n"
- title: 3.3.2.  Limitations of Map-Based Services and Potential Solutions
  contents:
  - "3.3.2.  Limitations of Map-Based Services and Potential Solutions\n   The specification\
    \ of the Map Service in the ALTO protocol [RFC7285]\n   is based on the concept\
    \ of network maps.  A network map partitions\n   the network into PIDs that group\
    \ one or more endpoints (e.g.,\n   subnetworks) to a single aggregate.  The \"\
    costs\" between the various\n   PIDs are stored in a cost map.  Map-based approaches\
    \ such as the ALTO\n   Network and Cost Map Service lower the signaling load on\
    \ the server\n   as maps have to be retrieved only if they change.\n   One main\
    \ assumption for map-based approaches is that the information\n   provided in\
    \ these maps is static for a long period of time.  This\n   assumption is fine\
    \ as long as the network operator does not change\n   any parameter, e.g., routing\
    \ within the network and to the upstream\n   peers, and IP address assignment\
    \ stays stable (and thus the mapping\n   to the partitions).  However, there are\
    \ several cases where this\n   assumption is not valid:\n   1.  ISPs reallocate\
    \ IP subnets from time to time.\n   2.  ISPs reallocate IP subnets on short notice.\n\
    \   3.  IP prefix blocks may be assigned to a router that serves a\n       variety\
    \ of access networks.\n   4.  Network costs between IP prefixes may change depending\
    \ on the\n       ISP's routing and traffic engineering.\n   These effects can\
    \ be explained as follows:\n   Case 1: ISPs may reallocate IP subnets within their\
    \ infrastructure\n   from time to time, partly to ensure the efficient usage of\
    \ IPv4\n   addresses (a scarce resource), and partly to enable efficient route\n\
    \   tables within their network routers.  The frequency of these\n   \"renumbering\
    \ events\" depends on the growth in number of subscribers\n   and the availability\
    \ of address space within the ISP.  As a result, a\n   subscriber's household\
    \ device could retain an IP address for as short\n   as a few minutes or for months\
    \ at a time or even longer.\n   It has been suggested that ISPs providing ALTO\
    \ services could\n   subdivide their subscribers' devices into different IP subnets\
    \ (or\n   certain IP address ranges) based on the purchased service tier, as\n\
    \   well as based on the location in the network topology.  The problem\n   is\
    \ that this sub-allocation of IP subnets tends to decrease the\n   efficiency\
    \ of IP address allocation, in particular for IPv4.  A\n   growing ISP that needs\
    \ to maintain high efficiency of IP address\n   utilization may be reluctant to\
    \ jeopardize their future acquisition\n   of IP address space.\n   However, this\
    \ is not an issue for map-based approaches if changes are\n   applied in the order\
    \ of days.\n   Case 2: ISPs can use techniques that allow the reallocation of\
    \ IP\n   prefixes on very short notice, i.e., within minutes.  An IP prefix\n\
    \   that has no IP address assignment to a host anymore can be\n   reallocated\
    \ to areas where there is currently a high demand for IP\n   addresses.\n   Case\
    \ 3: In residential access networks (e.g., DSL, cable), IP\n   prefixes are assigned\
    \ to broadband gateways, which are the first IP-\n   hop in the access-network\
    \ between the Customer Premises Equipment\n   (CPE) and the Internet.  The access-network\
    \ between CPE and broadband\n   gateway (called aggregation network) can have\
    \ varying characteristics\n   (and thus associated costs), but still using the\
    \ same IP prefix.  For\n   instance, one IP address IP1 out of a given CIDR prefix\
    \ can be\n   assigned to a VDSL access line (e.g., 2 Mbit/s uplink) while another\n\
    \   IP address IP2 within the same given CIDR prefix is assigned to a\n   slow\
    \ ADSL line (e.g., 128 kbit/s uplink).  These IP addresses may be\n   assigned\
    \ on a first come first served basis, i.e., a single IP\n   address out of the\
    \ same CIDR prefix can change its associated costs\n   quite fast.  This may not\
    \ be an issue with respect to the used\n   upstream provider (thus the cross ISP\
    \ traffic), but, depending on the\n   capacity of the aggregation network, this\
    \ may raise to an issue.\n   Case 4: The routing and traffic engineering inside\
    \ an ISP network, as\n   well as the peering with other autonomous systems, can\
    \ change\n   dynamically and affect the information exposed by an ALTO server.\
    \  As\n   a result, cost maps and possibly also network maps can change.\n   One\
    \ solution to deal with map changes is to use incremental ALTO\n   updates [UPDATE-SSE].\n"
- title: 3.3.3.  Limitations of Non-Map-Based Services and Potential Solutions
  contents:
  - "3.3.3.  Limitations of Non-Map-Based Services and Potential Solutions\n   The\
    \ specification of the ALTO protocol [RFC7285] also includes the\n   ECS mechanism.\
    \  ALTO clients can ask the ALTO server for guidance for\n   specific IP addresses,\
    \ thereby avoiding the need of processing maps.\n   This can mitigate some of\
    \ the problems mentioned in the previous\n   section.\n   However, frequent requests,\
    \ particularly with long lists of IP\n   addresses, may overload the ALTO server.\
    \  The server has to rank each\n   received IP address, which causes load at the\
    \ server.  This may be\n   amplified when a large number of ALTO clients are asking\
    \ for\n   guidance.  The results of the ECS are also more difficult to cache\n\
    \   than ALTO maps.  Therefore, the ALTO client may have to await the\n   server\
    \ response before starting a communication, which results in an\n   additional\
    \ delay.\n   Caching of IP addresses at the ALTO client or the use of the H12\n\
    \   approach [ALTO-H12] in conjunction with caching may lower the query\n   load\
    \ on the ALTO server.\n   When an ALTO server receives an ECS request, it may\
    \ not have the most\n   appropriate topology information in order to accurately\
    \ determine the\n   ranking.  [RFC7285] generally assumes that a server can always\
    \ offer\n   some guidance.  In such a case, the ALTO server could adopt one of\n\
    \   the following strategies:\n   o  Reply with available information (best effort).\n\
    \   o  Query another ALTO server presumed to have better topology\n      information\
    \ and return that response (cascaded servers).\n   o  Redirect the request to\
    \ another ALTO server presumed to have\n      better topology information (redirection).\n\
    \   The protocol mechanisms and decision processes that would be used to\n   determine\
    \ if redirection is necessary and which mode to use is out of\n   the scope of\
    \ this document, since protocol extensions could be\n   required.\n"
- title: 3.4.  Monitoring ALTO
  contents:
  - '3.4.  Monitoring ALTO

    '
- title: 3.4.1.  Impact and Observation on Network Operation
  contents:
  - "3.4.1.  Impact and Observation on Network Operation\n   ALTO presents a new opportunity\
    \ for managing network traffic by\n   providing additional information to clients.\
    \  In particular, the\n   deployment of an ALTO server may shift network traffic\
    \ patterns, and\n   the potential impact to network operation can be large.  An\
    \ ISP\n   providing ALTO may want to assess the benefits of ALTO as part of the\n\
    \   management and operations (cf.  [RFC7285]).  For instance, the ISP\n   might\
    \ be interested in understanding whether the provided ALTO maps\n   are effective\
    \ in order to decide whether an adjustment of the ALTO\n   configuration would\
    \ be useful.  Such insight can be obtained from a\n   monitoring infrastructure.\
    \  An ISP offering ALTO could consider the\n   impact on (or integration with)\
    \ traffic engineering and the\n   deployment of a monitoring service to observe\
    \ the effects of ALTO\n   operations.  The measurement of impacts can be challenging\
    \ because\n   ALTO-enabled applications may not provide related information back\
    \ to\n   the ALTO service provider.\n   To construct an effective monitoring infrastructure,\
    \ the ALTO service\n   provider should decide how to monitor the performance of\
    \ ALTO and\n   identify and deploy data sources to collect data to compute the\n\
    \   performance metrics.  In certain trusted deployment environments, it\n   may\
    \ be possible to collect information directly from ALTO clients.\n   It may also\
    \ be possible to vary or selectively disable ALTO guidance\n   for a portion of\
    \ ALTO clients either by time, geographical region, or\n   some other criteria\
    \ to compare the network traffic characteristics\n   with and without ALTO.  Monitoring\
    \ an ALTO service could also be\n   realized by third parties.  In this case,\
    \ insight into ALTO data may\n   require a trust relationship between the monitoring\
    \ system operator\n   and the network service provider offering an ALTO service.\n\
    \   The required monitoring depends on the network infrastructure and the\n  \
    \ use of ALTO, and an exhaustive description is outside the scope of\n   this\
    \ document.\n"
- title: 3.4.2.  Measurement of the Impact
  contents:
  - "3.4.2.  Measurement of the Impact\n   ALTO realizes an interface between the\
    \ network and applications.\n   This implies that an effective monitoring infrastructure\
    \ may have to\n   deal with both network and application performance metrics.\
    \  This\n   document does not comprehensively list all performance metrics that\n\
    \   could be relevant, nor does it formally specify metrics.\n   The impact of\
    \ ALTO can be classified regarding a number of different\n   criteria:\n   o \
    \ Total amount and distribution of traffic: ALTO enables ISPs to\n      influence\
    \ and localize traffic of applications that use the ALTO\n      service.  Therefore,\
    \ an ISP may be interested in analyzing the\n      impact on the traffic, i.e.,\
    \ whether network traffic patterns are\n      shifted.  For instance, if ALTO\
    \ shall be used to reduce the inter-\n      domain P2P traffic, it makes sense\
    \ to evaluate the total amount of\n      inter-domain traffic of an ISP.  Then,\
    \ one possibility is to study\n      how the introduction of ALTO reduces the\
    \ total inter-domain\n      traffic (inbound and/our outbound).  If the ISP's\
    \ intention is to\n      localize the traffic inside his network, the network-internal\n\
    \      traffic distribution will be of interest.  Effectiveness of\n      localization\
    \ can be quantified in different ways, e.g., by the\n      load on core routers\
    \ and backbone links or by considering more-\n      advanced effects, such as\
    \ the average number of hops that traffic\n      traverses inside a domain.\n\
    \   o  Application performance: The objective of ALTO is to improve\n      application\
    \ performance.  ALTO can be used by very different types\n      of applications,\
    \ with different communication characteristics and\n      requirements.  For instance,\
    \ if ALTO guidance achieves traffic\n      localization, one would expect that\
    \ applications achieve a higher\n      throughput and/or smaller delays to retrieve\
    \ data.  If\n      application-specific performance characteristics (e.g., video\
    \ or\n      audio quality) can be monitored, such metrics related to user\n  \
    \    experience could also help to analyze the benefit of an ALTO\n      deployment.\
    \  If available, selected statistics from the TCP/IP\n      stack in hosts could\
    \ be leveraged, too.\n   Of potential interest can also be the share of applications\
    \ or\n   customers that actually use an offered ALTO service, i.e., the\n   adoption\
    \ of the service.\n   Monitoring statistics can be aggregated, averaged, and normalized\
    \ in\n   different ways.  This document does not mandate specific ways how to\n\
    \   calculate metrics.\n"
- title: 3.4.3.  System and Service Performance
  contents:
  - "3.4.3.  System and Service Performance\n   A number of interesting parameters\
    \ can be measured at the ALTO\n   server.  [RFC7285] suggests certain ALTO-specific\
    \ metrics to be\n   monitored:\n   o  Requests and responses for each service\
    \ listed in an Information\n      Directory (total counts and size in bytes).\n\
    \   o  CPU and memory utilization\n   o  ALTO map updates\n   o  Number of PIDs\n\
    \   o  ALTO map sizes (in-memory size, encoded size, number of entries)\n   This\
    \ data characterizes the workload, the system performance as well\n   as the map\
    \ data.  Obviously, such data will depend on the\n   implementation and the actual\
    \ deployment of the ALTO service.\n   Logging is also recommended in [RFC7285].\n"
- title: 3.4.4.  Monitoring Infrastructures
  contents:
  - "3.4.4.  Monitoring Infrastructures\n   Understanding the impact of ALTO may require\
    \ interaction between\n   different systems operating at different layers.  Some\
    \ information\n   discussed in the preceding sections is only visible to an ISP,\
    \ while\n   application-level performance can hardly be measured inside the\n\
    \   network.  It is possible that not all information of potential\n   interest\
    \ can directly be measured, either because no corresponding\n   monitoring infrastructure\
    \ or measurement method exists or because it\n   is not easily accessible.\n \
    \  One way to quantify the benefit of deploying ALTO is to measure\n   before\
    \ and after enabling the ALTO service.  In addition to passive\n   monitoring,\
    \ some data could also be obtained by active measurements,\n   but due to the\
    \ resulting overhead, the latter should be used with\n   care.  Yet, in all monitoring\
    \ activities, an ALTO service provider\n   has to take into account that ALTO\
    \ clients are not bound to ALTO\n   server guidance as ALTO is only one source\
    \ of information, and any\n   measurement result may thus be biased.\n   Potential\
    \ sources for monitoring the use of ALTO include:\n   o  Network monitoring and\
    \ performance management systems: Many ISPs\n      deploy systems to monitor the\
    \ network traffic, which may have\n      insight into traffic volumes, network\
    \ topology, bandwidth\n      information inside the management area.  Data can\
    \ be obtained by\n      SNMP, NETCONF, IP Flow Information Export (IPFIX), syslog,\
    \ etc.\n      On-demand OAM tests (such as Ping or BDF) could also be used.\n\
    \   o  Applications/clients: Relevant data could be obtained by\n      instrumentation\
    \ of applications.\n   o  ALTO server: If available, log files or other statistics\
    \ data\n      could be analyzed.\n   o  Other application entities: In several\
    \ use cases, there are other\n      application entities that could provide data\
    \ as well.  For\n      instance, there may be centralized log servers that collect\
    \ data.\n   In many ALTO use cases, some data sources are located within an ISP\n\
    \   network while some other data is gathered at the application level.\n   Correlation\
    \ of data could require a collaboration agreement between\n   the ISP and an application\
    \ owner, including agreements of data\n   interchange formats, methods of delivery,\
    \ etc.  In practice, such a\n   collaboration may not be possible in all use cases\
    \ of ALTO, because\n   the monitoring data can be sensitive and because the interacting\n\
    \   entities may have different priorities.  Details of how to build an\n   overarching\
    \ monitoring system for evaluating the benefits of ALTO are\n   outside the scope\
    \ of this memo.\n"
- title: 3.5.  Abstract Map Examples for Different Types of ISPs
  contents:
  - '3.5.  Abstract Map Examples for Different Types of ISPs

    '
- title: 3.5.1.  Small ISP with Single Internet Uplink
  contents:
  - "3.5.1.  Small ISP with Single Internet Uplink\n   The ALTO protocol does not\
    \ mandate how to determine costs between\n   endpoints and/or determine map data.\
    \  In complex usage scenarios,\n   this can be a non-trivial problem.  In order\
    \ to show the basic\n   principle, this and the following sections explain for\
    \ different\n   deployment scenarios how ALTO maps could be structured.\n   For\
    \ a small ISP, the inter-domain traffic optimizing problem is how\n   to decrease\
    \ the traffic exchanged with other ISPs, because of high\n   settlement costs.\
    \  By using the ALTO service to optimize traffic, a\n   small ISP can define two\
    \ \"optimization areas\": one is its own network\n   and the other one consists\
    \ of all other network destinations.  The\n   cost map can be defined as follows:\
    \ the cost of a link between\n   clients of the inner ISP's network is lower than\
    \ between clients of\n   the outer ISP's network and clients of inner ISP's network.\
    \  As a\n   result, a host with an ALTO client inside the network of this ISP\n\
    \   will prefer retrieving data from hosts connected to the same ISP.\n   An example\
    \ is given in Figure 9.  It is assumed that ISP A is a small\n   ISP only having\
    \ one access network.  As operator of the ALTO service,\n   ISP A can define its\
    \ network to be one optimization area, named as\n   PID1, and define other networks\
    \ to be the other optimization area,\n   named as PID2.  C1 is denoted as the\
    \ cost inside the network of ISP\n   A.  C2 is denoted as the cost from PID2 to\
    \ PID1, and C3 from PID1 to\n   PID2.  In the following, C2=C3 is assumed for\
    \ the sake of simplicity.\n   In order to keep traffic local inside ISP A, it\
    \ makes sense to define\n   C1<C2.\n              -----------\n          ////\
    \           \\\\\\\\\n        //                   \\\\\n      //            \
    \           \\\\                  /-----------\\\n     | +---------+         \
    \      |             ////             \\\\\\\\\n     | | ALTO    |  ISP A    \
    \    |    C2      |    Other Networks   |\n    |  | Service |  PID 1         <-----------\
    \     PID 2\n     | +---------+  C1           |----------->|                 \
    \    |\n     |                           |  C3 (=C2)   \\\\\\\\             ////\n\
    \      \\\\                       //                  \\-----------/\n       \
    \ \\\\                   //\n          \\\\\\\\           ////\n             \
    \ -----------\n             Figure 9: Example ALTO Deployment for a Small ISP\n\
    \   A simplified extract of the corresponding ALTO network and cost maps\n   is\
    \ listed in Figures 10 and 11, assuming that the network of ISP A\n   has the\
    \ IPv4 address ranges 192.0.2.0/24 and 198.51.100.0/25, as well\n   as the IPv6\
    \ address range 2001:db8:100::/48.  In this example, the\n   cost values C1 and\
    \ C2 can be set to any number C1<C2.\n      HTTP/1.1 200 OK\n      ...\n     \
    \ Content-Type: application/alto-networkmap+json\n      {\n       ...\n      \
    \  \"network-map\" : {\n          \"PID1\" : {\n            \"ipv4\" : [\n   \
    \           \"192.0.2.0/24\",\n              \"198.51.100.0/25\"\n           \
    \ ],\n            \"ipv6\" : [\n              \"2001:db8:100::/48\"\n        \
    \    ]\n          },\n          \"PID2\" : {\n            \"ipv4\" : [\n     \
    \         \"0.0.0.0/0\"\n            ],\n            \"ipv6\" : [\n          \
    \    \"::/0\"\n            ]\n          }\n        }\n      }\n              \
    \      Figure 10: Example ALTO Network Map\n      HTTP/1.1 200 OK\n      ...\n\
    \      Content-Type: application/alto-costmap+json\n      {\n          ...\n \
    \         \"cost-type\" : {\"cost-mode\"  : \"numerical\",\n                 \
    \        \"cost-metric\": \"routingcost\"\n          }\n        },\n        \"\
    cost-map\" : {\n          \"PID1\": { \"PID1\": C1,  \"PID2\": C2 },\n       \
    \   \"PID2\": { \"PID1\": C2,  \"PID2\": 0 },\n        }\n      }\n          \
    \           Figure 11: Example ALTO Cost Map\n"
- title: 3.5.2.  ISP with Several Fixed-Access Networks
  contents:
  - "3.5.2.  ISP with Several Fixed-Access Networks\n   This example discusses a P2P\
    \ application traffic optimization use\n   case for a larger ISP with a fixed\
    \ network comprising several access\n   networks and a core network.  The traffic\
    \ optimizing objectives\n   include (1) using the backbone network efficiently,\
    \ (2) adjusting the\n   traffic balance in different access networks according\
    \ to traffic\n   conditions and management policies, and (3) achieving a reduction\
    \ of\n   settlement costs with other ISPs.\n   Such a large ISP deploying an ALTO\
    \ service may want to optimize its\n   traffic according to the network topology\
    \ of its access networks.\n   For example, each access network could be defined\
    \ to be one\n   optimization area, i.e., traffic should be kept local withing\
    \ that\n   area if possible.  This can be achieved by mapping each area to a\n\
    \   PID.  Then, the costs between those access networks can be defined\n   according\
    \ to a corresponding traffic optimizing requirement by this\n   ISP.  One example\
    \ setup is further described below and also shown in\n   Figure 12.\n   In this\
    \ example, ISP A has one backbone network and three access\n   networks, named\
    \ as AN A, AN B, and AN C.  A P2P application is used\n   in this example.  For\
    \ a reasonable application-level traffic\n   optimization, the first requirement\
    \ could be a decrease of the P2P\n   traffic on the backbone network inside the\
    \ AS of ISP A and the second\n   requirement could be a decrease of the P2P traffic\
    \ to other ISPs,\n   i.e., other ASes.  The second requirement can be assumed\
    \ to have\n   priority over the first one.  Also, we assume that the settlement\n\
    \   rate with ISP B is lower than with other ISPs.  ISP A can deploy an\n   ALTO\
    \ service to meet these traffic distribution requirements.  In the\n   following,\
    \ we will give an example of an ALTO setting and\n   configuration according to\
    \ these requirements.\n   In the network of ISP A, the operator of the ALTO server\
    \ can define\n   each access network to be one optimization area, and assign one\
    \ PID\n   to each access network, such as PID 1, PID 2, and PID 3.  Because of\n\
    \   different peerings with different outer ISPs, one can define ISP B to\n  \
    \ be one additional optimization area and assign PID 4 to it.  All\n   other networks\
    \ can be added to a PID to be one further optimization\n   area (PID 5).\n   In\
    \ the setup, costs (C1, C2, C3, C4, C5, C6, C7, C8) can be assigned\n   as shown\
    \ in Figure 12.  Cost C1 is denoted as the link cost in inner\n   AN A (PID 1),\
    \ and C2 and C3 are defined accordingly.  C4 is denoted\n   as the link cost from\
    \ PID 1 to PID 2, and C5 is the corresponding\n   cost from PID 3, which is assumed\
    \ to have a similar value.  C6 is the\n   cost between PID 1 and PID 3.  For simplicity,\
    \ this scenario assumes\n   symmetrical costs between the AN this example.  C7\
    \ is denoted as the\n   link cost from the ISP B to ISP A.  C8 is the link cost\
    \ from other\n   networks to ISP A.\n   According to previous discussion of the\
    \ first requirement and the\n   second requirement, the relationship of these\
    \ costs will be defined\n   as: (C1, C2, C3) < (C4, C5, C6) < (C7) < (C8)\n  \
    \  +------------------------------------+         +----------------+\n    | ISP\
    \ A   +---------------+          |         |                |\n    |         |\
    \    Backbone   |          |   C7    |      ISP B     |\n    |     +---+    Network\
    \    +----+     |<--------+      PID 4     |\n    |     |   +-------+-------+\
    \    |     |         |                |\n    |     |           |            |\
    \     |         |                |\n    |     |           |            |     |\
    \         +----------------+\n    | +---+--+     +--+---+     +--+---+ |\n   \
    \ | |AN A  |  C4 |AN B  |  C5 |AN C  | |\n    | |PID 1 +<--->|PID 2 |<--->+PID\
    \ 3 | |\n    | |C1    |     |C2    |     |C3    | |         +----------------+\n\
    \    | +---+--+     +------+     +--+---+ |         |                |\n    |\
    \     ^                        ^     |   C8    | Other Networks |\n    |     |\
    \                        |     |<--------+ PID 5          |\n    |     +------------------------+\
    \     |         |                |\n    |                  C6                |\
    \         |                |\n    +------------------------------------+     \
    \    +----------------+\n           Figure 12: ALTO Deployment in Large ISPs with\
    \ Layered\n                         Fixed-Network Structures\n"
- title: 3.5.3.  ISP with Fixed and Mobile Network
  contents:
  - "3.5.3.  ISP with Fixed and Mobile Network\n   An ISP with both mobile network\
    \ and fixed network may focus on\n   optimizing the mobile traffic by keeping\
    \ traffic in the fixed network\n   as much as possible, because wireless bandwidth\
    \ is a scarce resource\n   and traffic is costly in mobile network.  In such a\
    \ case, the main\n   requirement of traffic optimization could be decreasing the\
    \ usage of\n   radio resources in the mobile network.  An ALTO service can be\n\
    \   deployed to meet these needs.\n   Figure 13 shows an example: ISP A operates\
    \ one mobile network, which\n   is connected to a backbone network.  The ISP also\
    \ runs two fixed-\n   access networks AN A and AN B, which are also connected\
    \ to the\n   backbone network.  In this network structure, the mobile network\
    \ can\n   be defined as one optimization area, and PID 1 can be assigned to it.\n\
    \   Access networks AN A and B can also be defined as optimization areas,\n  \
    \ and PID 2 and PID 3 can be assigned, respectively.  The cost values\n   are\
    \ then defined as shown in Figure 13.\n   To decrease the usage of wireless link,\
    \ the relationship of these\n   costs can be defined as follows:\n   From view\
    \ of mobile network: C4 < C1 and C4 = C8.  This means that\n   clients in mobile\
    \ network requiring data resources from other clients\n   will prefer clients\
    \ in AN A or B to clients in the mobile network.\n   This policy can decrease\
    \ the usage of wireless link and power\n   consumption in terminals.\n   From\
    \ view of AN A: C2 < C6, C5 = maximum cost.  This means that\n   clients in other\
    \ optimization area will avoid retrieving data from\n   the mobile network.\n\
    \   From view of AN B: Analog to the view of AN A, C3 < C8 and C9 =\n   maximum\
    \ cost.\n   +-----------------------------------------------------------------+\n\
    \   |                                                                 |\n   |\
    \  ISP A                 +-------------+                          |\n   |    \
    \           +--------+   ALTO      +---------+                |\n   |        \
    \       |        |   Service   |         |                |\n   |            \
    \   |        +------+------+         |                |\n   |               |\
    \               |                |                |\n   |               |    \
    \           |                |                |\n   |               |        \
    \       |                |                |\n   |       +-------+-------+    \
    \   | C6    +--------+------+         |\n   |       |     AN A      |<--------------|\
    \      AN B     |         |\n   |       |     PID 2     |   C7  |       |    \
    \  PID 3    |         |\n   |       |     C2        |-------------->|      C3\
    \       |         |\n   |       +---------------+       |       +---------------+\
    \         |\n   |             ^    |            |              |     ^       \
    \     |\n   |             |    |            |              |     |           \
    \ |\n   |             |    | C4         |           C8 |     |            |\n\
    \   |          C5 |    |            |              |     | C9         |\n   |\
    \             |    |   +--------+---------+    |     |            |\n   |    \
    \         |    +-->|  Mobile Network  |<---+     |            |\n   |        \
    \     |        |  PID 1           |          |            |\n   |            \
    \ +------- |  C1              |----------+            |\n   |                \
    \      +------------------+                       |\n   +-----------------------------------------------------------------+\n\
    \          Figure 13: ALTO Deployment in ISPs with Mobile Network\n   These examples\
    \ show that for ALTO in particular the relationships\n   between different costs\
    \ matter; the operator of the server has\n   several degrees of freedom how to\
    \ set the absolute values.\n"
- title: 3.6.  Comprehensive Example for Map Calculation
  contents:
  - "3.6.  Comprehensive Example for Map Calculation\n   In addition to the previous,\
    \ abstract examples, this section presents\n   a more detailed scenario with a\
    \ realistic IGP and BGP routing\n   protocol configuration.  This example was\
    \ first described in\n   [MAP-CALC].\n"
- title: 3.6.1.  Example Network
  contents:
  - "3.6.1.  Example Network\n   Figure 14 depicts a network that is used to explain\
    \ the steps carried\n   out in the course of this example.  The network consists\
    \ of nine\n   routers (R1 to R9).  Two of them are border routers (R1 + R8)\n\
    \   connected to neighbored networks (AS 2 to AS 4).  Furthermore, AS 4\n   is\
    \ not directly connected to the local network, but has AS 3 as\n   transit network.\
    \  The links between the routers are point-to-point\n   connections.  These connections\
    \ also form the core network with the\n   2001:db8:1:0::/56 prefix.  This prefix\
    \ is large enough to provide\n   addresses for all router interconnections.  In\
    \ addition to the core\n   network, the local network also has five client networks\
    \ attached to\n   five different routers (R2, R5, R6, R7 and R9).  Each client\
    \ network\n   has a /56 prefix with 2001:db8:1:x00:: (x = [1..5]) as network\n\
    \   address.\n   +-------------------+    +-----+    +-----+    +-------------------+\n\
    \   |2001:db8:1:200::/56+----+ R6  |    | R7  +----+2001:db8:1:300::/56|\n   +-------------------+\
    \    +--+--+    +--+--+    +-------------------+\n                           \
    \    |          |\n   +---------------+           |          |\n   |      AS 2\
    \     |           |          |\n   |2001:db8:2::/48|           | 10       | 10\n\
    \   +------------+--+           |          |\n                |              |\
    \          |\n                |              |          |\n             +--+--+\
    \   15   +--+--+    +--+--+    +-------------------+\n             | R1  +--------+\
    \ R3  +----+ R5  |----+2001:db8:1:400::/56|\n             +--+--+        +--+--+\
    \ 5  +--+--+    +-------------------+\n                |   \\      /   |     \
    \     |\n                |    \\    / 15 |          |\n                |     \\\
    \  /     |          |           +---------------+\n                |      \\/\
    \      |          |           |      AS 4     |\n                | 20   /\\  \
    \    | 5        | 10        |2001:db8:4::/48|\n                |     /  \\   \
    \  |          |           +-------+-------+\n                |    /    \\ 20 |\
    \          |                   |\n                |   /      \\   |          |\
    \                   |\n             +--+--+        +--+--+    +--+--+        +-------+-------+\n\
    \             | R2  |        | R4  |    | R8  +--------+      AS 3     |\n   \
    \          +--+--+        +--+--+    +--+--+        |2001:db8:3::/48|\n      \
    \          |              |          |           +---------------+\n         \
    \       |              |          | 10\n                |              | 20  \
    \     |\n   +------------+------+       |       +--+--+    +-------------------+\n\
    \   |2001:db8:1:100::/56|       +-------+ R9  +----+2001:db8:1:500::/56|\n   +-------------------+\
    \               +-----+    +-------------------+\n                        Figure\
    \ 14: Example Network\n   The example network utilizes two different routing protocols,\
    \ one for\n   IGP and another for EGP routing.  The used IGP is a link-state\n\
    \   protocol such as IS-IS.  The applied link weights are annotated in\n   the\
    \ graph and additionally shown in Figure 15.  All links are\n   bidirectional\
    \ and their weights are symmetric.  To obtain the\n   topology and routing information\
    \ from the network, the topology data\n   source must be connected directly to\
    \ one of the routers (R1...R9).\n   Furthermore, the topology data source must\
    \ be enabled to communicate\n   with the router and vice versa.\n   The BGP is\
    \ used in this scenario to route between autonomous systems.\n   External BGP\
    \ is running on the two border routers R1 and R8.\n   Furthermore, internal BGP\
    \ is used to propagate external as well as\n   internal prefixes within the network\
    \ boundaries; it is running on\n   every router with an attached client network\
    \ (R2, R5, R6, R7 and R9).\n   Since no route reflector is present it is necessary\
    \ to fetch routes\n   from each BGP router separately.\n              R1   R2\
    \   R3   R4   R5   R6   R7   R8   R9\n          R1   0   15   15   20    -   \
    \ -    -    -    -\n          R2  15    0   20    -    -    -    -    -    -\n\
    \          R3  15   20    0    5    5   10    -    -    -\n          R4  20  \
    \  -    5    0    5    -    -    -   20\n          R5   -    -    5    5    0\
    \    -   10   10    -\n          R6   -    -   10    -    -    0    -    -   \
    \ -\n          R7   -    -    -    -   10    -    0    -    -\n          R8  \
    \ -    -    -    -   10    -    -    0   10\n          R9   -    -    -   20 \
    \   -    -    -   10    0\n                  Figure 15: Example Network Link Weights\n\
    \   For monitoring purposes, it is possible to enable, e.g., SNMP or\n   NETCONF\
    \ on the routers within the network.  This way an ALTO server\n   may obtain several\
    \ additional information about the state of the\n   network.  For example, utilization,\
    \ latency, and bandwidth\n   information could be retrieved periodically from\
    \ the network\n   components to get and keep an up-to-date view on the network\n\
    \   situation.\n   In the following, it is assumed that the listed attributes\
    \ are\n   collected from the network:\n   o  IS-IS: topology, link weights\n \
    \  o  BGP: prefixes, AS numbers, AS distances, or other BGP metrics\n   o  SNMP:\
    \ latency, utilization, bandwidth\n"
- title: 3.6.2.  Potential Input Data Processing and Storage
  contents:
  - "3.6.2.  Potential Input Data Processing and Storage\n   Due to the variety of\
    \ data sources available in a network, it may be\n   necessary to aggregate the\
    \ information and define a suitable data\n   model that can hold the information\
    \ efficiently and easily\n   accessible.  One potential model is an annotated\
    \ directed graph that\n   represents the topology.  The attributes can be annotated\
    \ at the\n   corresponding positions in the graph.  The following shows how such\
    \ a\n   topology graph could describe the example topology.\n   In the topology\
    \ graph, a node represents a router in the network,\n   while the edges stand\
    \ for the links that connect the routers.  Both\n   routers and links have a set\
    \ of attributes that store information\n   gathered from the network.\n   Each\
    \ router could be associated with a basic set of information, such\n   as:\n \
    \  o  ID: Unique ID within the network to identify the router.\n   o  Neighbor\
    \ IDs: List of directly connected routers.\n   o  Endpoints: List of connected\
    \ endpoints.  The endpoints may also\n      have further attributes themselves\
    \ depending on the network and\n      address type.  Such potential attributes\
    \ are costs for reaching\n      the endpoint from the router, AS numbers, or AS\
    \ distances.\n   In addition to the basic set, many more attributes may be assigned\
    \ to\n   router nodes.  This mainly depends on the utilized data sources.\n  \
    \ Examples for such additional attributes are geographic location, host\n   name\
    \ and/or interface types, just to name a few.\n   The example network shown in\
    \ Figure 14 represents such an internal\n   network graph where the routers R1\
    \ to R9 represent the nodes and the\n   connections between them are the links.\
    \  For instance, R2 has one\n   directly attached IPv6 endpoint that belongs to\
    \ its own AS, as shown\n   in Figure 16.\n      ID:  2\n      Neighbor IDs:  1,3\
    \ (R1, R3)\n      Endpoints:\n         Endpoint:  2001:db8:1:100::/56\n      \
    \   Weight:  10 (e.g., the default IGP metric value)\n         ASNumber:  1 (our\
    \ own AS)\n         ASDistance:  0\n      Host Name:  R2\n                   \
    \    Figure 16: Example Router R2\n   Router R8 has two attached IPv6 endpoints,\
    \ as explained in Figure 17.\n   The first one belongs to a directly neighbored\
    \ AS with AS number 3.\n   The AS distance from our network to AS3 is 1.  The\
    \ second endpoint\n   belongs to an AS (AS4) that is no direct neighbor but directly\n\
    \   connected to AS3.  To reach endpoints in AS4, it is necessary to\n   cross\
    \ AS3, which increases the AS distance by one.\n      ID:  8\n      Neighbor IDs:\
    \  5,9 (R5, R9)\n      Endpoints:\n         Endpoint:  2001:db8:3::/48\n     \
    \    Weight:  100\n         ASNumber:  3\n         ASDistance:  1\n         Endpoint:\
    \  2001:db8:4::/48\n         Weight:  200\n         ASNumber:  4\n         ASDistance:\
    \  2\n      Host Name:  R8\n                       Figure 17: Example Router R8\n\
    \   A potential set of attributes for a link is described in the\n   following\
    \ list:\n   o  Source ID: ID of the source router of the link.\n   o  Destination\
    \ ID: ID of the destination router of the link.\n   o  Weight: The cost to cross\
    \ the link, e.g., defined by the used IGP.\n   Additional attributes that provide\
    \ technical details and state\n   information can be assigned to links as well.\
    \  The availability of\n   such additional attributes depends on the utilized\
    \ data sources.\n   Such attributes can be characteristics like maximum bandwidth,\n\
    \   utilization, or latency on the link as well as the link type.\n   In the example,\
    \ the link attributes are equal for all links and only\n   their values differ.\
    \  It is assumed that the attributes utilization,\n   bandwidth, and latency are\
    \ collected, e.g., via SNMP or NETCONF.  In\n   the topology of Figure 14, the\
    \ links between R1 and R2 would then\n   have the following link attributes explained\
    \ in Figure 18:\n      R1->R2:\n      Source ID:  1\n      Destination ID:  2\n\
    \      Weight:  15\n      Bandwidth:  10 Gbit/s\n      Utilization:  0.1\n   \
    \   Latency:  2 ms\n      R2->R1:\n      Source ID:  2\n      Destination ID:\
    \  1\n      Weight:  15\n      Bandwidth:  10 Gbit/s\n      Utilization:  0.55\n\
    \      Latency:  5 ms\n                        Figure 18: Link Attributes\n  \
    \ It has to be emphasized that values for utilization and latency can\n   be very\
    \ volatile.\n"
- title: 3.6.3.  Calculation of Network Map from the Input Data
  contents:
  - "3.6.3.  Calculation of Network Map from the Input Data\n   The goal of the ALTO\
    \ map calculation process is to get from the graph\n   representation of the network\
    \ to a coarser-grained and abstract\n   matrix representation.  The first step\
    \ is to generate the network\n   map.  Only after the network map has been generated\
    \ is it possible to\n   compute the cost map since it relies on the network map.\n\
    \   To generate an ALTO network map, a grouping function is required.  A\n   grouping\
    \ function processes information from the network graph to\n   group endpoints\
    \ into PIDs.  The way of grouping is manifold and\n   algorithms can utilize any\
    \ information provided by the network graph\n   to perform the grouping.  The\
    \ functions may omit certain endpoints in\n   order to simplify the map or in\
    \ order to hide details about the\n   network that are not intended to be published\
    \ in the resulting ALTO\n   network map.\n   For IP endpoints, which are either\
    \ an IP (version 4 or version 6)\n   address or prefix, [RFC7285] requires the\
    \ use of a longest-prefix\n   matching algorithm to map IPs to PIDs.  This requirement\
    \ results in\n   the constraints that every IP must be mapped to a PID and the\
    \ same\n   prefix or address not be mapped to more than one PID.  To meet the\n\
    \   first constraint, every calculated map must provide a default PID\n   that\
    \ contains the prefixes 0.0.0.0/0 for IPv4 and ::/0 for IPv6.\n   Both prefixes\
    \ cover their entire address space, and if no other PID\n   matches an IP endpoint,\
    \ the default PID will.  The second constraint\n   must be met by the grouping\
    \ function that assigns endpoints to PIDs.\n   In case of collision, the grouping\
    \ function must decide to which PID\n   an endpoint is assigned.  These or other\
    \ constraints may apply to\n   other endpoint types depending on the used matching\
    \ algorithm.\n   A simple example for such grouping is to compose PIDs by host\
    \ names.\n   For instance, each router's host name is selected as the name for\
    \ a\n   PID and the attached endpoints are the member endpoints of the\n   corresponding\
    \ PID.  Additionally, backbone prefixes should not appear\n   in the map so they\
    \ are filtered out.  The following table in\n   Figure 19 shows the resulting\
    \ ALTO network map, using the network in\n   Figure 14 as example:\n         \
    \ PID  |  Endpoints\n      ---------+-----------------------------------\n   \
    \        R1  |  2001:db8:2::/48\n           R2  |  2001:db8:1:100::/56\n     \
    \      R5  |  2001:db8:1:400::/56\n           R6  |  2001:db8:1:200::/56\n   \
    \        R7  |  2001:db8:1:300::/56\n           R8  |  2001:db8:3::/48, 2001:db8:4::/48\n\
    \           R9  |  2001:db8:1:500::/56\n       default |  0.0.0.0/0, ::/0\n  \
    \                  Figure 19: Example ALTO Network Map\n   Since router R3 and\
    \ R4 have no endpoints assigned, they are not\n   represented in the network map.\
    \  Furthermore, as previously\n   mentioned, the \"default\" PID was added to\
    \ represent all endpoints\n   that are not part of the example network.\n"
- title: 3.6.4.  Calculation of Cost Map
  contents:
  - "3.6.4.  Calculation of Cost Map\n   After successfully creating the network map,\
    \ the typical next step is\n   to calculate the costs between the generated PIDs,\
    \ which form the\n   cost map.  Those costs are calculated by cost functions.\
    \  A cost\n   function may calculate unidirectional values, which means it is\n\
    \   necessary to compute the costs from every PID to every PID.  In\n   general,\
    \ it is possible to use all available information in the\n   network graph to\
    \ compute the costs.  In case a PID contains more than\n   one IP address or prefix,\
    \ the cost function may first calculate a set\n   of cost values for each source/destination\
    \ IP pair.  In that case, a\n   tiebreaker function is required to decide the\
    \ resulting cost value,\n   as [RFC7285] allows one cost value only between two\
    \ PIDs.  Such a\n   tiebreaker can be a simple function such as minimum, maximum,\
    \ or\n   average value.\n   No matter what metric the cost function uses, the\
    \ path from source to\n   destination is usually defined by the path with minimum\
    \ weight.  When\n   the link weight is represented by an additive metric, the\
    \ path weight\n   is the sum of link weights of all traversed links.  The path\
    \ may be\n   determined, for instance, with the Bellman-Ford or Dijkstra\n   algorithms.\
    \  The latter progressively builds the shortest path in\n   terms of cumulated\
    \ link lengths.  In our example, the link lengths\n   are link weights with values\
    \ illustrated in Figure 15.  Hence, the\n   cost function generally extracts the\
    \ optimal path with respect to a\n   chosen metric, such as the IGP link weight.\
    \  It is also possible that\n   more than one path with the same minimum weight\
    \ exists, which means\n   it is not entirely clear which path is going to be selected\
    \ by the\n   network.  Hence, a tiebreaker similar to the one used to resolve\n\
    \   costs for PIDs with multiple endpoints is necessary.\n   An important note\
    \ is that [RFC7285] does not require cost maps to\n   provide costs for every\
    \ PID pair, so if no path cost can be\n   calculated for a certain pair, the corresponding\
    \ field in the cost\n   map is left out.  Administrators may also not want to\
    \ provide cost\n   values for some PID pairs due to various reasons.  Such pairs\
    \ may be\n   defined before the cost calculation is performed.\n   Based on the\
    \ network map example shown in the previous section, it is\n   possible to calculate\
    \ the cost maps.  Figure 20 provides an example\n   where the selected metric\
    \ for the cost map is the minimum number of\n   hops necessary to get from the\
    \ endpoints in the source PID to\n   endpoints in the destination PID.  Our chosen\
    \ tiebreaker selects the\n   minimum hop count when more than one value is returned\
    \ by the cost\n   function.\n         PID  | default | R1  | R2  | R5  | R6  |\
    \ R7  | R8  | R9  |\n      --------+---------+-----+-----+-----+-----+-----+-----+-----|\n\
    \      default |    x    |  x  |  x  |  x  |  x  |  x  |  x  |  x  |\n       \
    \  R1   |    x    |  0  |  2  |  3  |  3  |  4  |  4  |  3  |\n         R2   |\
    \    x    |  2  |  0  |  3  |  3  |  4  |  4  |  4  |\n         R5   |    x  \
    \  |  3  |  3  |  0  |  3  |  2  |  2  |  3  |\n         R6   |    x    |  3 \
    \ |  3  |  3  |  0  |  4  |  4  |  4  |\n         R7   |    x    |  4  |  4  |\
    \  2  |  4  |  0  |  3  |  4  |\n         R8   |    x    |  4  |  4  |  2  | \
    \ 4  |  3  |  0  |  2  |\n         R9   |    x    |  3  |  4  |  3  |  4  |  4\
    \  |  2  |  0  |\n                Figure 20: Example ALTO Hop Count Cost Map\n\
    \   It should be mentioned that R1->R9 has several paths with equal path\n   weights.\
    \  The paths R1->R3->R5->R8->R9, R1->R3->R4->R9, and\n   R1->R4->R9 all have a\
    \ path weight of 40.  Due to the minimum hop\n   count value tiebreaker, 3 hops\
    \ is chosen as value for the path\n   R1->R4->R9.  Furthermore, since the \"default\"\
    \ PID is, in a sense, a\n   virtual PID with no endpoints that are part of the\
    \ example network,\n   no cost values are calculated for other PIDs from or towards\
    \ it.\n"
- title: 3.7.  Deployment Experiences
  contents:
  - "3.7.  Deployment Experiences\n   There are multiple interoperable implementations\
    \ of the ALTO\n   protocol.  Some experiences in implementing and using ALTO for\
    \ large-\n   scale networks have been documented in [MAP-CALC] and are here\n\
    \   summarized:\n   o  Data collection: Retrieving topology information typically\n\
    \      requires implementing several protocols other than ALTO for data\n    \
    \  collection.  For such other protocols, ALTO deployments faced\n      protocol\
    \ behaviors that were different from what would be expected\n      from the specification\
    \ of the corresponding protocol.  This\n      includes behavior caused by older\
    \ versions of the protocol\n      specification, a lax interpretation on the remote\
    \ side or simply\n      incompatibility with the corresponding standard.  This\
    \ sort of\n      problems in collecting data can make an ALTO deployment more\n\
    \      complicated, even if it is unrelated to ALTO protocol itself.\n   o  Data\
    \ processing: Processing network information can be very\n      complex and quite\
    \ resource demanding.  Gathering information from\n      an autonomous system\
    \ connected to the Internet may imply that a\n      server must store and process\
    \ hundreds of thousands of prefixes,\n      several hundreds of megabytes of IPFIX/Netflow\
    \ information per\n      minute, and information from hundreds of routers and\
    \ attributes of\n      thousands of links.  A lot of disk memory, RAM, and CPU\
    \ cycles as\n      well as efficient algorithms are required to process the\n\
    \      information.  Operators of an ALTO server have to be aware that\n     \
    \ significant compute resources are not only required for the ALTO\n      server,\
    \ but also for the corresponding data collection.\n   o  Network map calculation:\
    \ Large IP-based networks consist of\n      hundreds of thousands of prefixes\
    \ that have to be mapped to PIDs\n      in the process of network map calculation.\
    \  As a result, network\n      maps get very large (up to tens of megabytes).\
    \  However, depending\n      on the design of the network and the chosen grouping\
    \ function the\n      calculated network maps contains redundancy that can be\
    \ removed.\n      There are at least two ways to reduce the size by removing\n\
    \      redundancy.  First, adjacent IP prefixes can be merged.  When a\n     \
    \ PID has two adjacent prefix entries it can merge them together to\n      one\
    \ larger prefix.  It is mandatory that both prefixes be in the\n      same PID.\
    \  However, the large prefix being assigned to another PID\n      cannot be ruled\
    \ out.  This must be checked, and it is up to the\n      grouping function whether\
    \ or not to merge the prefixes and remove\n      the larger prefix from the other\
    \ PID.  A simple example, when a\n      PID comprises the prefixes 2001:db8:0:0::/64\
    \ and 2001:db8:0:1::/64\n      it can easily merge them to 2001:db8:0:0::/63.\
    \  Second, a prefix\n      and its next-longest-prefix match may be in the same\
    \ PID.  In this\n      case, the smaller prefix can simply be removed since it\
    \ is\n      redundant for obvious reasons.  A simple example, a PID comprises\n\
    \      the prefixes 2001:db8:0:0::/62 and 2001:db8:0:1::/64 and the /62\n    \
    \  is the next-longer prefix match of the /64, the /64 prefix can\n      simply\
    \ be removed.  In contrast, if another PID contains the\n      2001:db8:0:0::/63\
    \ prefix, the entry 2001:db8:0:1::/64 cannot be\n      removed since the next-longest\
    \ prefix is not in the same PID\n      anymore.  Operators of an ALTO server thus\
    \ have to analyze whether\n      their address assignment schemes allows such\
    \ tuning.\n   o  Cost map calculation: One known implementation challenge with\
    \ cost\n      map calculations is the vast amount of CPU cycles that may be\n\
    \      required to calculate the costs in large networks.  This is\n      particular\
    \ problematic if costs are calculated between the\n      endpoints of each source-destination\
    \ PID pair.  Very often several\n      to many endpoints of a PID are attached\
    \ to the same node, so the\n      same path cost is calculated several times.\
    \  This is clearly\n      inefficient.  A remedy could be more sophisticated algorithms,\n\
    \      such as looking up the routers the endpoints of each PID are\n      connected\
    \ to in our network graph and calculated cost map based on\n      the costs between\
    \ the routers.  When deploying and configuring\n      ALTO servers, administrators\
    \ should consider the impact of huge\n      cost maps and possibly ensure that\
    \ map sizes do not get too large.\n   In addition, further deployment experiences\
    \ have been documented.\n   One real example is described in greater detail in\
    \ reference\n   [CHINA-TRIAL].\n   Also, experiments have been conducted with\
    \ ALTO-like deployments in\n   ISP networks.  For instance, NTT performed tests\
    \ with their HINT\n   server implementation and dummy nodes to gain insight on\
    \ how an ALTO-\n   like service can influence peer-to-peer systems [RFC6875].\
    \  The\n   results of an early experiment conducted in the Comcast network are\n\
    \   documented in [RFC5632].\n"
- title: 4.  Using ALTO for P2P Traffic Optimization
  contents:
  - '4.  Using ALTO for P2P Traffic Optimization

    '
- title: 4.1.  Overview
  contents:
  - '4.1.  Overview

    '
- title: 4.1.1.  Usage Scenario
  contents:
  - "4.1.1.  Usage Scenario\n   Originally, P2P applications were the main driver\
    \ for the development\n   of ALTO.  In this use case, it is assumed that one party\
    \ (usually the\n   operator of a \"managed\" IP network domain) will disclose\
    \ information\n   about the network through ALTO.  The application overlay will\
    \ query\n   this information and optimize its behavior in order to improve\n \
    \  performance or Quality of Experience in the application while\n   reducing\
    \ the utilization of the underlying network infrastructure.\n   The resulting\
    \ win-win situation is assumed to be the incentive for\n   both parties to provide\
    \ or consume the ALTO information,\n   respectively.\n   P2P systems can be built\
    \ with or without use of a centralized\n   resource directory (\"tracker\"). \
    \ The scope of this section is the\n   interaction of P2P applications with the\
    \ ALTO service.  In this\n   scenario, the resource consumer (\"peer\") asks the\
    \ resource directory\n   for a list of candidates that can provide the desired\
    \ resource.\n   There are different options for how ALTO can be deployed in such\
    \ use\n   cases with a centralized resource directory.\n   For efficiency reasons\
    \ (i.e., message size), only a subset of all\n   resource providers known to the\
    \ resource directory will be returned\n   to the resource consumer.  Some or all\
    \ of these resource providers,\n   plus further resource providers learned by\
    \ other means such as direct\n   communication between peers, will be contacted\
    \ by the resource\n   consumer for accessing the resource.  The purpose of ALTO\
    \ is giving\n   guidance on this peer selection, which should yield better-than-\n\
    \   random results.  The tracker response as well as the ALTO guidance\n   are\
    \ most beneficial in the initial phase after the resource consumer\n   has decided\
    \ to access a resource, as long as only few resource\n   providers are known.\
    \  Later, when the resource consumer has already\n   exchanged some data with\
    \ other peers and measured the transmission\n   speed, the relative importance\
    \ of ALTO may dwindle.\n"
- title: 4.1.2.  Applicability of ALTO
  contents:
  - "4.1.2.  Applicability of ALTO\n   A tracker-based P2P application can leverage\
    \ ALTO in different ways.\n   In the following, the different alternatives and\
    \ their pros and cons\n   are discussed.\n                            ,-------.\
    \         +-----------+\n          ,---.          ,-'         ========>|   Peer\
    \ 1  |********\n       ,-'     `-.      /     ISP 1  V  \\     |ALTO Client| \
    \      *\n      /           \\    / +-------------+ \\    +-----------+      \
    \ *\n     /    ISP X    \\   | + ALTO Server | |    +-----------+       *\n  \
    \  /               \\  \\ +-------------+<====>|   Peer 2  |       *\n   ;   +---------+\
    \   :  \\               /     |ALTO Client|****** *\n   |   | Global  |   |  \
    \ `-.         ,-'      +-----------+     * *\n   |   | Tracker |   |      `-------'\
    \                           * *\n   |   +---------+   |      ,-------.       \
    \  +-----------+     * *\n   :        *        ;   ,-'         ========>|   Peer\
    \ 3  |     * *\n    \\       *       /   /     ISP 2  V  \\     |ALTO Client|****\
    \ * *\n     \\      *      /   / +-------------+ \\    +-----------+   * * *\n\
    \      \\     *     /    | | ALTO Server | |    +-----------+   * * *\n      \
    \ `-.  *  ,-'     \\ +-------------+<====>|   Peer 4  |** * * *\n          `-*-'\
    \         \\               /     |ALTO Client| * * * *\n            *        \
    \    `-.         ,-'      +-----------+ * * * *\n            *               `-------'\
    \                       * * * *\n            *                               \
    \                * * * *\n            *******************************************************\n\
    \       Legend:\n       === ALTO protocol\n       *** Application protocol\n \
    \            Figure 21: Global Tracker and Local ALTO Servers\n   Figure 21 depicts\
    \ a tracker-based P2P system with several peers.  The\n   peers (i.e., resource\
    \ consumers) embed an ALTO client to improve the\n   resource provider selection.\
    \  The tracker (i.e., resource directory)\n   itself may be hosted and operated\
    \ by another entity.  A tracker\n   external to the ISPs of the peers may be a\
    \ typical use case.  For\n   instance, a tracker like Pirate Bay can serve BitTorrent\
    \ peers\n   worldwide.  The figure only shows one tracker instance, but\n   deployments\
    \ with several trackers could be possible, too.\n   The scenario depicted in Figure\
    \ 21 lets the peers directly\n   communicate with their ISP's ALTO server (i.e.,\
    \ ALTO client embedded\n   in the peers), thus giving the peers the most control\
    \ on which\n   information they query for, as they can integrate information\n\
    \   received from one tracker or several trackers and through direct\n   peer-to-peer\
    \ knowledge exchange.  For instance, the latter approach\n   is called peer exchange\
    \ (PEX) in BitTorrent.  In this deployment\n   scenarios, the peers have to discover\
    \ a suitable ALTO server (e.g.,\n   offered by their ISP, as described in [RFC7286]).\n\
    \   There are also tracker-less P2P system architectures that do not rely\n  \
    \ on centralized resource directories, e.g., unstructured P2P networks.\n   Regarding\
    \ the use of ALTO, their deployment would be similar to\n   Figure 21, since the\
    \ ALTO client would be embedded in the peers as\n   well.  This option is not\
    \ further considered in this memo.\n                                 ,-------.\n\
    \          ,---.               ,-'         `-.   +-----------+\n       ,-'   \
    \  `-.           /     ISP 1     \\  |   Peer 1  |********\n      /          \
    \ \\         / +-------------+ \\ |           |       *\n     /    ISP X    \\\
    \   ++====>| ALTO Server |  )+-----------+       *\n    /               \\  ||\
    \   \\ +-------------+ / +-----------+       *\n   ; +-----------+   : ||    \\\
    \               /  |   Peer 2  |       *\n   | |  Tracker  |<====++     `-.  \
    \       ,-'   |           |****** *\n   | |ALTO Client|   |           `-------'\
    \      +-----------+     * *\n   | +-----------+<====++        ,-------.     \
    \                   * *\n   :        *        ; ||     ,-'         `-.   +-----------+\
    \     * *\n    \\       *       /  ||    /     ISP 2     \\  |   Peer 3  |   \
    \  * *\n     \\      *      /   ||   / +-------------+ \\ |           |**** *\
    \ *\n      \\     *     /    ++====>| ALTO Server |  )+-----------+   * * *\n\
    \       `-.  *  ,-'          \\ +-------------+ / +-----------+   * * *\n    \
    \      `-*-'              \\               /  |   Peer 4  |** * * *\n        \
    \    *                 `-.         ,-'   |           | * * * *\n            *\
    \                    `-------'      +-----------+ * * * *\n            *     \
    \                                            * * * *\n            *          \
    \                                       * * * *\n            *********************************************************\n\
    \       Legend:\n       === ALTO protocol\n       *** Application protocol\n \
    \     Figure 22: Global Tracker Accessing ALTO Server at Various ISPs\n   An alternative\
    \ deployment scenario for a tracker-based system is\n   depicted in Figure 22.\
    \  Here, the tracker embeds the ALTO client.\n   When the tracker receives a request\
    \ from a querying peer, it first\n   discovers the ALTO server responsible for\
    \ the querying peer.  This\n   discovery can be done by using various ALTO server\
    \ discovery\n   mechanisms [RFC7286] [XDOM-DISC].  The ALTO client subsequently\
    \ sends\n   to the querying peer only those peers that are preferred by the ALTO\n\
    \   server responsible for the querying peer.  The peers do not query the\n  \
    \ ALTO servers themselves.  This gives the peers a better initial\n   selection\
    \ of candidates, but does not consider peers learned through\n   direct peer-to-peer\
    \ knowledge exchange.\n                      ISP 1  ,-------.         +-----------+\n\
    \           ,---.          +-------------+******|   Peer 1  |\n        ,-'   \
    \  `-.      /|   Tracker   |\\     |           |\n       /           \\    / +-------------+****\
    \  +-----------+\n      /    ISP X    \\   |       ===       | *  +-----------+\n\
    \     /               \\  \\ +-------------+ / *  |   Peer 2  |\n    ;   +---------+\
    \   :  \\| ALTO Server |/  ***|           |\n    |   | Global  |   |   +-------------+\
    \      +-----------+\n    |   | Tracker |   |      `-------'\n    |   +---------+\
    \   |                        +-----------+\n    :        *        ;      ,-------.\
    \         |   Peer 3  |\n     \\       *       /    +-------------+  ****|   \
    \        |\n      \\      *      /    /|   Tracker   |***   +-----------+\n  \
    \     \\     *     /    / +-------------+ \\    +-----------+\n        `-.  *\
    \  ,-'     |       ===       |    |   Peer 4  |**\n           `-*-'        \\\
    \ +-------------+ /    |           | *\n             *           \\| ALTO Server\
    \ |/     +-----------+ *\n             *            +-------------+          \
    \          *\n             *        ISP 2  `-------'                       *\n\
    \             *************************************************\n        Legend:\n\
    \        === ALTO protocol\n        *** Application protocol\n      Figure 23:\
    \ Local Trackers and Local ALTO Servers (P4P Approach)\n   There are some attempts\
    \ to let ISPs deploy their own trackers, as\n   shown in Figure 23.  In this case,\
    \ the client cannot get guidance\n   from the ALTO server other than by talking\
    \ to the ISP's tracker,\n   which in turn communicates with the ALTO server using\
    \ the ALTO\n   protocol.  It should be noted that the peers are still allowed\
    \ to\n   contact other trackers operated by entities other than the peer's\n \
    \  ISP, but in this case they cannot benefit from ALTO guidance.\n"
- title: 4.2.  Deployment Recommendations
  contents:
  - '4.2.  Deployment Recommendations

    '
- title: 4.2.1.  ALTO Services
  contents:
  - "4.2.1.  ALTO Services\n   The ALTO protocol specification [RFC7285] details how\
    \ an ALTO client\n   can query an ALTO server for guiding information and receive\
    \ the\n   corresponding replies.  In case of peer-to-peer networks, two\n   different\
    \ ALTO services can be used: the cost map service is often\n   preferred as solution\
    \ by peer-to-peer software implementors and\n   users, since it avoids disclosing\
    \ peer IP addresses to a centralized\n   entity.  Alternatively, network operators\
    \ may have a preference for\n   the ECS, since it does not require exposure of\
    \ the network topology.\n   For actual use of ALTO in P2P applications, both software\
    \ vendors and\n   network operators have to agree which ALTO services to use.\
    \  The ALTO\n   protocol is flexible and supports both services.  Note that for\
    \ other\n   use cases of ALTO, in particular in more controlled environments,\n\
    \   both the cost map service and the ECS might be feasible; it is more\n   of\
    \ an engineering trade-off whether to use a map-based or query-based\n   ALTO\
    \ service.\n"
- title: 4.2.2.  Guidance Considerations
  contents:
  - "4.2.2.  Guidance Considerations\n   As explained in Section 4.1.2, for a tracker-based\
    \ P2P application,\n   there are two fundamentally different possibilities where\
    \ to place\n   the ALTO client:\n   1.  ALTO client in the resource consumer (\"\
    peer\")\n   2.  ALTO client in the resource directory (\"tracker\")\n   Both approaches\
    \ have advantages and drawbacks that have to be\n   considered.  If the ALTO client\
    \ is in the resource consumer\n   (Figure 21), a potentially very large number\
    \ of clients has to be\n   deployed.  Instead, when using an ALTO client in the\
    \ resource\n   directory (Figures 22 and 23), ostensibly peers do not have to\n\
    \   directly query the ALTO server.  In this case, an ALTO server could\n   even\
    \ not permit access to peers.\n   However, it seems to be beneficial for all participants\
    \ to let the\n   peers directly query the ALTO server.  Considering the plethora\
    \ of\n   different applications that could use ALTO, e.g., multiple-tracker-\n\
    \   based or non-tracker-based P2P systems or other applications\n   searching\
    \ for relays, this renders the ALTO service more useful.  The\n   peers are also\
    \ the single point having all operational knowledge to\n   decide whether to use\
    \ the ALTO guidance and how to use the ALTO\n   guidance.  For a given peer, one\
    \ can also expect that an ALTO server\n   of the corresponding ISP provides useful\
    \ guidance and can be\n   discovered.\n   Yet, ALTO clients in the resource consumer\
    \ also have drawbacks\n   compared to use in the resource directory.  In the following,\
    \ both\n   scenarios are compared more in detail in order to explain the impact\n\
    \   on ALTO guidance and the need for third-party ALTO queries.\n   In the first\
    \ scenario (see Figure 24), the peer (resource consumer)\n   queries the tracker\
    \ (resource directory) for the desired resource\n   (F1).  The resource directory\
    \ returns a list of potential resource\n   providers without considering ALTO\
    \ (F2).  It is then the duty of the\n   resource consumer to invoke ALTO (F3/F4),\
    \ in order to solicit\n   guidance regarding this list.\n   Peer w. ALTO cli.\
    \            Tracker               ALTO Server\n   --------+--------       --------+--------\
    \       --------+--------\n           | F1 Tracker query      |              \
    \         |\n           |======================>|                       |\n  \
    \         | F2 Tracker reply      |                       |\n           |<======================|\
    \                       |\n           | F3 ALTO protocol query               \
    \         |\n           |---------------------------------------------->|\n  \
    \         | F4 ALTO protocol reply                        |\n           |<----------------------------------------------|\n\
    \           |                       |                       |\n   ====  Application\
    \ protocol (i.e., tracker-based P2P app protocol)\n   ----  ALTO protocol\n  \
    \              Figure 24: Basic Message Sequence Chart for\n                 \
    \ Resource-Consumer-Initiated ALTO Query\n   In the second scenario (see Figure\
    \ 25), the resource directory has an\n   embedded ALTO client, which we will refer\
    \ to as Resource Directory\n   ALTO Client (RDAC) in this document.  After receiving\
    \ a query for a\n   given resource (F1), the resource directory invokes the RDAC\
    \ to\n   evaluate all resource providers it knows (F2/F3).  Then, it returns\n\
    \   a, possibly shortened, list containing the \"best\" resource providers\n \
    \  to the resource consumer (F4).\n         Peer               Tracker w. RDAC\
    \           ALTO Server\n   --------+--------       --------+--------       --------+--------\n\
    \           | F1 Tracker query      |                       |\n           |======================>|\
    \                       |\n           |                       | F2 ALTO cli. p.\
    \ query |\n           |                       |---------------------->|\n    \
    \       |                       | F3 ALTO cli. p. reply |\n           |      \
    \                 |<----------------------|\n           | F4 Tracker reply   \
    \   |                       |\n           |<======================|          \
    \             |\n           |                       |                       |\n\
    \   ====  Application protocol (i.e., tracker-based P2P app protocol)\n   ----\
    \  ALTO protocol\n    Figure 25: Basic Message Sequence Chart for Third-Party\
    \ ALTO Query\n   Note: The message sequences depicted in Figures 24 and 25 may\
    \ occur\n   both in the target-aware and the target-independent query mode (cf.\n\
    \   [RFC6708]).  In the target-independent query mode, no message\n   exchange\
    \ with the ALTO server might be needed after the tracker\n   query, because the\
    \ candidate resource providers could be evaluated\n   using a locally cached \"\
    map\", which has been retrieved from the ALTO\n   server some time ago.\n   The\
    \ first approach has the following problem: While the resource\n   directory might\
    \ know thousands of peers taking part in a swarm, the\n   list returned to the\
    \ resource consumer is usually shortened for\n   efficiency reasons.  Therefore,\
    \ the \"best\" (in the sense of ALTO)\n   potential resource providers might not\
    \ be contained in that list\n   anymore, even before ALTO can consider them.\n\
    \   Much better traffic optimization could be achieved if the tracker\n   would\
    \ evaluate all known peers using ALTO.  This list would then\n   include a significantly\
    \ higher fraction of \"good\" peers.  If the\n   tracker returned \"good\" peers\
    \ only, there might be a risk that the\n   swarm might disconnect and split into\
    \ several disjunct partitions.\n   However, finding the right mix of ALTO-biased\
    \ and random peer\n   selection is out of the scope of this document.\n   Therefore,\
    \ from an overall optimization perspective, the second\n   scenario with the ALTO\
    \ client embedded in the resource directory is\n   advantageous, because it is\
    \ ensured that the addresses of the \"best\"\n   resource providers are actually\
    \ delivered to the resource consumer.\n   An architectural implication of this\
    \ insight is that the ALTO server\n   discovery procedures must support third-party\
    \ discovery.  That is, as\n   the tracker issues ALTO queries on behalf of the\
    \ peer that contacted\n   the tracker, the tracker must be able to discover an\
    \ ALTO server that\n   can give guidance suitable for that respective peer (see\n\
    \   [XDOM-DISC]).\n   In principle, a combined approach could also be possible.\
    \  For\n   instance, a tracker could use a coarse-grained \"global\" ALTO server\n\
    \   to find the peers in the general vicinity of the requesting peer,\n   while\
    \ peers could use \"local\" ALTO servers for a more fine-grained\n   guidance.\
    \  Yet, there is no known deployment experience for such a\n   combined approach.\n"
- title: 5.  Using ALTO for CDNs
  contents:
  - '5.  Using ALTO for CDNs

    '
- title: 5.1.  Overview
  contents:
  - '5.1.  Overview

    '
- title: 5.1.1.  Usage Scenario
  contents:
  - "5.1.1.  Usage Scenario\n   This section briefly introduces the usage of ALTO\
    \ for CDNs, as\n   explained in [CDN-USE].  CDNs are used in the delivery of some\n\
    \   Internet services (e.g., delivery of websites, software updates, and\n   video\
    \ delivery) from a location closer to the location of the user.\n   A CDN typically\
    \ consists of a network of servers often attached to\n   ISP networks.  The point\
    \ of attachment is often as close to content\n   consumers and peering points\
    \ as economically or operationally\n   feasible in order to decrease traffic load\
    \ on the ISP backbone and to\n   provide better user experience measured by reduced\
    \ latency and higher\n   throughput.\n   CDNs use several techniques to redirect\
    \ a client to a server\n   (surrogate).  A request-routing function within a CDN\
    \ is responsible\n   for receiving content requests from user agents, obtaining\
    \ and\n   maintaining necessary information about a set of candidate\n   surrogates,\
    \ and selecting and redirecting the user agent to the\n   appropriate surrogate.\
    \  One common way is relying on the DNS system,\n   but there are many other ways,\
    \ see [RFC3568].\n   +--------------------+\n   | CDN Request Router |\n   | \
    \ with ALTO Client  |\n   +--------------------+\n             /\\\n         \
    \    || ALTO protocol\n             ||\n             \\/\n         +---------+\n\
    \         |  ALTO   |\n         | Server  |\n         +---------+\n          \
    \    :\n              : Provisioning protocol\n              :\n        ,-----------.\n\
    \     ,-'  Source of  `-.\n    (    topological    )\n     `-. information ,-'\n\
    \        `-----------'\n        Figure 26: Use of ALTO Information for CDN Request\
    \ Routing\n   In order to derive the optimal benefit from a CDN, it is preferable\n\
    \   to deliver content from the servers (caches) that are \"closest\" to\n   the\
    \ end user requesting the content.  The definition of \"closest\" may\n   be as\
    \ simple as geographical or IP topology distance, but it may also\n   consider\
    \ other combinations of metrics and CDN or ISP policies.  As\n   illustrated in\
    \ Figure 26, ALTO could provide this information.\n   User Agent             \
    \     Request Router                 Surrogate\n        |                    \
    \         |                           |\n        |     F1 Initial Request    \
    \  |                           |\n        +---------------------------->|    \
    \                       |\n        |                             +--+        \
    \                |\n        |                             |  | F2 Surrogate Selection\
    \ |\n        |                             |<-+       (using ALTO)     |\n   \
    \     |   F3 Redirection Response   |                           |\n        |<----------------------------+\
    \                           |\n        |                             |       \
    \                    |\n        |     F4 Content Request      |              \
    \             |\n        +-------------------------------------------------------->|\n\
    \        |                             |                           |\n       \
    \ |                             |          F5 Content       |\n        |<--------------------------------------------------------+\n\
    \        |                             |                           |\n       \
    \        Figure 27: Example of CDN Surrogate Selection\n   Figure 27 illustrates\
    \ the interaction between a user agent, a request\n   router, and a surrogate\
    \ for the delivery of content in a single CDN.\n   As explained in [CDN-USE],\
    \ the user agent makes an initial request to\n   the CDN (F1).  This may be an\
    \ application-level request (e.g., HTTP)\n   or a DNS request.  In the second\
    \ step (F2), the request router\n   selects an appropriate surrogate (or set of\
    \ surrogates) based on the\n   user agent's (or its proxy's) IP address, the request\
    \ router's\n   knowledge of the network topology (which can be obtained by ALTO)\
    \ and\n   reachability cost between CDN caches and end users, and any\n   additional\
    \ CDN policies.  Then, the request router responds to the\n   initial request\
    \ with an appropriate response containing a redirection\n   to the selected cache\
    \ (F3), for example, by returning an appropriate\n   DNS A/AAAA record or an HTTP\
    \ 302 redirect, etc.  The user agent uses\n   this information to connect directly\
    \ to the surrogate and request the\n   desired content (F4), which is then delivered\
    \ (F5).\n"
- title: 5.1.2.  Applicability of ALTO
  contents:
  - "5.1.2.  Applicability of ALTO\n   The most simple use case for ALTO in a CDN\
    \ context is to improve the\n   selection of a CDN surrogate or origin.  In this\
    \ case, the CDN makes\n   use of an ALTO server to choose a better CDN surrogate\
    \ or origin than\n   would otherwise be the case.  Although it is possible to\
    \ obtain raw\n   network map and cost information in other ways, for example,\n\
    \   passively listening to the ISP's routing protocols or use of active\n   probing,\
    \ the use of an ALTO service to expose that information may\n   provide additional\
    \ control to the ISP over how their network map/cost\n   is exposed.  Additionally,\
    \ it may enable the ISP to maintain a\n   functional separation between their\
    \ routing plane and network map\n   computation functions.  This may be attractive\
    \ for a number of\n   reasons, for example:\n   o  The ALTO service could provide\
    \ a filtered view of the network and/\n      or cost map that relates to CDN locations\
    \ and their proximity to\n      end users, for example, to allow the ISP to control\
    \ the level of\n      topology detail they are willing to share with the CDN.\n\
    \   o  The ALTO service could apply additional policies to the network\n     \
    \ map and cost information to provide a CDN-specific view of the\n      network\
    \ map/cost, for example, to allow the ISP to encourage the\n      CDN to use network\
    \ links that would not ordinarily be preferred by\n      a Shortest Path First\
    \ routing calculation.\n   o  The routing plane may be operated and controlled\
    \ by a different\n      operational entity (even within a single ISP) than the\
    \ CDN.\n      Therefore, the CDN may not be able to passively listen to routing\n\
    \      protocols, nor may it have access to other network topology data\n    \
    \  (e.g., inventory databases).\n   When CDN servers are deployed outside of an\
    \ ISP's network or in a\n   small number of central locations within an ISP's\
    \ network, a\n   simplified view of the ISP's topology or an approximation of\n\
    \   proximity is typically sufficient to enable the CDN to serve end\n   users\
    \ from the optimal server/location.  As CDN servers are deployed\n   deeper within\
    \ ISP networks, it becomes necessary for the CDN to have\n   more detailed knowledge\
    \ of the underlying network topology and costs\n   between network locations in\
    \ order to enable the CDN to serve end\n   users from the optimal servers for\
    \ the ISP.\n   The request router in a CDN will typically also take into account\n\
    \   criteria and constraints that are not related to network topology,\n   such\
    \ as the current load of CDN surrogates, content owner policies,\n   end user\
    \ subscriptions, etc.  This document only discusses use of\n   ALTO for network\
    \ information.\n   A general issue for CDNs is that the CDN logic has to match\
    \ the\n   client's IP address with the closest CDN surrogate, for approaches\n\
    \   that are both DNS or HTTP redirect based (see, for instance,\n   [ALTO-CDN]).\
    \  This matching is not trivial, for example, in DNS-based\n   approaches, where\
    \ the IP address of the DNS original requester is\n   unknown (see [RFC7871] for\
    \ a discussion of this and a solution\n   approach).\n   In addition to use by\
    \ a single CDN, ALTO can also be used in\n   scenarios that interconnect several\
    \ CDNs.  This use case is detailed\n   in [CDNI-FCI].\n"
- title: 5.2.  Deployment Recommendations
  contents:
  - '5.2.  Deployment Recommendations

    '
- title: 5.2.1.  ALTO Services
  contents:
  - "5.2.1.  ALTO Services\n   In its simplest form, an ALTO server would provide\
    \ an ISP with the\n   capability to offer a service to a CDN that provides network\
    \ map and\n   cost information.  The CDN can use that data to enhance its surrogate\n\
    \   and/or origin selection.  If an ISP offers an ALTO Network and Cost\n   Map\
    \ Service to expose a cost mapping/ranking between end user IP\n   subnets (within\
    \ that ISP's network) and CDN surrogate IP subnets/\n   locations, periodic updates\
    \ of the maps may be needed.  As introduced\n   in Section 3.3), it is common\
    \ for broadband subscribers to obtain\n   their IP addresses dynamically, and\
    \ in many deployments, the IP\n   subnets allocated to a particular network region\
    \ can change\n   relatively frequently, even if the network topology itself is\n\
    \   reasonably static.\n   An alternative would be to use the ALTO ECS: when an\
    \ end user\n   requests a given content, the CDN request router issues an ECS\n\
    \   request with the endpoint address (IPv4/IPv6) of the end user\n   (content\
    \ requester) and the set of endpoint addresses of the\n   surrogate (content targets).\
    \  The ALTO server receives the request\n   and ranks the addresses based on their\
    \ distance from the content\n   requester.  Once the request router obtained from\
    \ the ALTO server the\n   ranked list of locations (for the specific user), it\
    \ can incorporate\n   this information into its selection mechanisms in order\
    \ to point the\n   user to the most appropriate surrogate.\n   Since CDNs operate\
    \ in a controlled environment, the ALTO Network and\n   Cost Map Service and ECS\
    \ have a similar level of security and\n   confidentiality of network-internal\
    \ information.  However, the\n   Network and Cost Map Service and ECS differ in\
    \ the way the ALTO\n   service is delivered and address a different set of requirements\
    \ in\n   terms of topology information and network operations.\n   If a CDN already\
    \ has means to model connectivity policies, the map-\n   based approaches could\
    \ possibly be integrated into that.  If the ECS\n   service is preferred, a request\
    \ router that uses ECS could cache the\n   results of ECS queries for later usage\
    \ in order to address the\n   scalability limitations of ECS and to reduce the\
    \ number of\n   transactions between the CDN and ALTO server.  The ALTO server\
    \ may\n   indicate in the reply message how long the content of the message is\n\
    \   to be considered reliable and insert a lifetime value that will be\n   used\
    \ by the CDN in order to cache (and then flush or refresh) the\n   entry.\n"
- title: 5.2.2.  Guidance Considerations
  contents:
  - "5.2.2.  Guidance Considerations\n   The following discusses how a CDN could make\
    \ use of ALTO services.\n   In one deployment scenario, ALTO could expose ISP\
    \ end-user\n   reachability to a CDN.  The request router needs to have information\n\
    \   about which end-user IP subnets are reachable via which networks or\n   network\
    \ locations.  The network map services offered by ALTO could be\n   used to expose\
    \ this topology information while avoiding routing-plane\n   peering between the\
    \ ISP and the CDN.  For example, if CDN surrogates\n   are deployed within the\
    \ access or aggregation network, the ISP is\n   likely to want to utilize the\
    \ surrogates deployed in the same access/\n   aggregation region in preference\
    \ to surrogates deployed elsewhere, in\n   order to alleviate the cost and/or\
    \ improve the user experience.\n   In addition, CDN surrogates could also use\
    \ ALTO guidance, e.g., if\n   there is more than one upstream source of content\
    \ or several origins.\n   In this case, ALTO could help a surrogate with the decision\
    \ about\n   which upstream source to use.  This specific variant of using ALTO\
    \ is\n   not further detailed in this document.\n   If content can be provided\
    \ by several CDNs, there may be a need to\n   interconnect these CDNs.  In this\
    \ case, ALTO can be used as an\n   interface [CDNI-FCI], in particular, for footprint\
    \ and capabilities\n   advertisement.\n   Other, and more advanced, scenarios\
    \ of deploying ALTO are also listed\n   in [CDN-USE] and [ALTO-CDN].\n   The granularity\
    \ of ALTO information required depends on the specific\n   deployment of the CDN.\
    \  For example, an \"over-the-top\" CDN whose\n   surrogates are deployed only\
    \ within the Internet backbone may only\n   require knowledge of which end-user\
    \ IP subnets are reachable via\n   which ISP's networks, whereas a CDN deployed\
    \ within a particular\n   ISP's network requires a finer granularity of knowledge.\n\
    \   An ALTO server ranks addresses based on topology information it\n   acquires\
    \ from the network.  By default, according to [RFC7285],\n   distance in ALTO\
    \ represents an abstract \"routingcost\" that can be\n   computed, for instance,\
    \ from routing protocol information.  But an\n   ALTO server may also take into\
    \ consideration other criteria or other\n   information sources for policy, state,\
    \ and performance information\n   (e.g., geolocation), as explained in Section\
    \ 3.2.2.\n   The different methods and algorithms through which the ALTO server\n\
    \   computes topology information and rankings is out of the scope of\n   this\
    \ document.  If rankings are based on routing protocol\n   information, it is\
    \ obvious that network events may impact the ranking\n   computation.  Due to\
    \ internal redundancy and resilience mechanisms\n   inside current networks, most\
    \ of the network events happening in the\n   infrastructure will be handled internally\
    \ in the network, and they\n   should have limited impact on a CDN.  However,\
    \ catastrophic events\n   such as main trunks failures or backbone partitioning\
    \ will have to be\n   taken into account by the ALTO server to redirect traffic\
    \ away from\n   the impacted area.\n   An ALTO server implementation may want\
    \ to keep state about ALTO\n   clients in order to inform and signal to these\
    \ clients when a major\n   network event happened, e.g., by a notification mechanism.\
    \  In a CDN/\n   ALTO interworking architecture with few CDN components interacting\n\
    \   with the ALTO server, there are less scalability issues in\n   maintaining\
    \ state about clients in the ALTO server, compared to ALTO\n   guidance to any\
    \ Internet user.\n"
- title: 6.  Other Use Cases
  contents:
  - "6.  Other Use Cases\n   This section briefly surveys and references other use\
    \ cases that have\n   been tested or suggested for ALTO deployments.\n"
- title: 6.1.  Application Guidance in Virtual Private Networks (VPNs)
  contents:
  - "6.1.  Application Guidance in Virtual Private Networks (VPNs)\n   Virtual Private\
    \ Network (VPN) technology is widely used in public and\n   private networks to\
    \ create groups of users that are separated from\n   other users of the network\
    \ and allows these users to communicate\n   among themselves as if they are on\
    \ a private network.  Network\n   Service Providers (NSPs) offer different types\
    \ of VPNs.  [RFC4026]\n   distinguishes between Layer 2 VPN (L2VPN) and Layer\
    \ 3 VPN (L3VPN)\n   using different sub-types.  In the following, the term \"\
    VPN\" is used\n   to refer to provider supplied virtual private networking.\n\
    \   From the perspective of an application at an endpoint, a VPN may not\n   be\
    \ very different from any other IP connectivity solution, but there\n   are a\
    \ number of specific applications that could benefit from ALTO\n   topology exposure\
    \ and guidance in VPNs.  As, in the general Internet,\n   one advantage is that\
    \ applications do not have to perform excessive\n   measurements on their own.\
    \  For instance, potential use cases for\n   ALTO application guidance in VPN\
    \ environments are:\n   o  Enterprise application optimization: Enterprise customers\
    \ often\n      run distributed applications that exchange large amounts of data,\n\
    \      e.g., for synchronization of replicated data bases.  Network\n      topology\
    \ information could be useful for placement of replicas as\n      well as for\
    \ the scheduling of transfers.\n   o  Private cloud computing solution: An enterprise\
    \ customer could run\n      its own data centers at several sites.  The cloud\
    \ management\n      system could want to understand the network costs between\n\
    \      different sites for intelligent routing and placement decisions of\n  \
    \    Virtual Machines (VMs) among the VPN sites.\n   o  Cloud-bursting: One or\
    \ more VPN endpoints could be located in a\n      public cloud.  If an enterprise\
    \ customer needs additional\n      resources, they could be provided by a public\
    \ cloud, which is\n      accessed through the VPN.  Network topology awareness\
    \ would help\n      to decide in which data center of the public cloud those resources\n\
    \      should be allocated.\n   These examples focus on enterprises, which are\
    \ typical users of VPNs.\n   VPN customers typically have no insight into the\
    \ network topology\n   that transports the VPN.  Similar to other ALTO use cases,\
    \ better-\n   than-random application-level decisions would be enabled by an ALTO\n\
    \   server offered by the NSP, as illustrated in Figure 28.\n                \
    \       +---------------+\n                       |  Customer's   |\n        \
    \               |   management  |\n                       |  application  |.\n\
    \                       | (ALTO client) |  .\n                       +---------------+\
    \    .  VPN provisioning\n                              /\\              . (out-of-scope)\n\
    \                              || ALTO           .\n                         \
    \     \\/                  .\n                    +---------------------+    \
    \   +----------------+\n                    |     ALTO server     |       | VPN\
    \ portal/OSS |\n                    |   provided by NSP   |       | (out-of-scope)\
    \ |\n                    +---------------------+       +----------------+\n  \
    \                             : VPN network\n                               :\
    \ and cost maps\n                               :\n                     /---------:---------\\\
    \ Network service provider\n                     |         :         |\n     \
    \   +-------+   _______________________   +-------+\n        | App a | ()_____.\
    \ .________. .____() | App d |\n        +-------+    |   | |        | |  |   \
    \ +-------+\n                     \\---| |--------| |--/\n                   \
    \      | |        | |\n                         |^|        |^| Customer VPN\n\
    \                          V          V\n                      +-------+  +-------+\n\
    \                      | App b |  | App c |\n                      +-------+ \
    \ +-------+\n                       Figure 28: Using ALTO in VPNs\n   A common\
    \ characteristic of these use cases is that applications will\n   not necessarily\
    \ run in the public Internet, and that the relationship\n   between the provider\
    \ and customer of the VPN is rather well defined.\n   Since VPNs often run in\
    \ a managed environment, an ALTO server may\n   have access to topology information\
    \ (e.g., traffic engineering data)\n   that would not be available for the public\
    \ Internet, and it may\n   expose it to the customer of the VPN only.\n   Also,\
    \ a VPN will not necessarily be static.  The customer could\n   possibly modify\
    \ the VPN and add new VPN sites by a Web portal,\n   network management systems,\
    \ or other OSS solutions.  Prior to adding\n   a new VPN site, an application\
    \ will not have connectivity to that\n   site, i.e., an ALTO server could offer\
    \ access to information that an\n   application cannot measure on its own (e.g.,\
    \ expected delay to a new\n   VPN site).\n   The VPN use cases, requirements,\
    \ and solutions are further detailed\n   in [VPN-SERVICE].\n"
- title: 6.2.  In-Network Caching
  contents:
  - "6.2.  In-Network Caching\n   Deployment of intra-domain P2P caches has been proposed\
    \ for\n   cooperation between the network operator and the P2P service\n   providers,\
    \ e.g., to reduce the bandwidth consumption in access\n   networks [ALTO-P2PCACHE].\n\
    \            +--------------+                +------+\n            | ISP 1 network+----------------+Peer\
    \ 1|\n            +-----+--------+                +------+\n            |\n  \
    \ +--------+------------------------------------------------------+\n   |    \
    \    |                                      ISP 2 network   |\n   |  +---------+\
    \                                                  |\n   |  |L1 Cache |      \
    \                                            |\n   |  +-----+---+            \
    \                                      |\n   |        +--------------------+----------------------+\
    \          |\n   |        |                    |                      |      \
    \    |\n   | +------+------+      +------+-------+       +------+-------+  |\n\
    \   | | AN1         |      | AN2          |       | AN3          |  |\n   | |\
    \ +---------+ |      | +----------+ |       |              |  |\n   | | |L2 Cache\
    \ | |      | |L2 Cache  | |       |              |  |\n   | | +---------+ |  \
    \    | +----------+ |       |              |  |\n   | +------+------+      +------+-------+\
    \       +------+-------+  |\n   |        |                                   \
    \        |          |\n   |        +--------------------+                    \
    \  |          |\n   |        |                    |                      |   \
    \       |\n   | +------+------+      +------+-------+       +------+-------+ \
    \ |\n   | | SUB-AN11    |      | SUB-AN12     |       | SUB-AN31     |  |\n  \
    \ | | +---------+ |      |              |       |              |  |\n   | | |L3\
    \ Cache | |      |              |       |              |  |\n   | | +---------+\
    \ |      |              |       |              |  |\n   | +------+------+    \
    \  +------+-------+       +------+-------+  |\n   |        |                 \
    \   |                      |          |\n   +--------+--------------------+----------------------+----------+\n\
    \            |                    |                      |\n        +---+---+\
    \            +---+---+                  |\n        |       |            |    \
    \   |                  |\n     +--+--+ +--+--+      +--+--+ +--+--+          \
    \  +--+--+\n     |Peer2| |Peer3|      |Peer4| |Peer5|            |Peer6|\n   \
    \  +-----+ +-----+      +-----+ +-----+            +-----+\n            Figure\
    \ 29: General Architecture of Intra-ISP Caches\n   Figure 29 depicts the overall\
    \ architecture of potential P2P cache\n   deployments inside an ISP 2 with various\
    \ access network types.  As\n   shown in the figure, P2P caches may be deployed\
    \ at various levels,\n   including the interworking gateway linking with other\
    \ ISPs, internal\n   access network gateways linking with different types of accessing\n\
    \   networks (e.g., WLAN, cellular, and wired), and even within an\n   accessing\
    \ network at the entries of individual WLAN subnetworks.\n   Moreover, depending\
    \ on the network context and the operator's policy,\n   each cache can be a Forwarding\
    \ Cache or a Bidirectional Cache\n   [ALTO-P2PCACHE].\n   In such a cache architecture,\
    \ the locations of caches could be used\n   as dividers of different PIDs to guide\
    \ intra-ISP network abstraction\n   and mark costs among them according to the\
    \ location and type of\n   relevant caches.\n   Further details and deployment\
    \ considerations can be found in\n   [ALTO-P2PCACHE].\n"
- title: 6.3.  Other Application-Based Network Operations
  contents:
  - "6.3.  Other Application-Based Network Operations\n   An ALTO server can be part\
    \ of an overall framework for Application-\n   Based Network Operations (ABNO)\
    \ [RFC7491] that brings together\n   different technologies.  Such an architecture\
    \ may include additional\n   components such as a PCE for on-demand and application-specific\n\
    \   reservation of network connectivity, reliability, and resources (such\n  \
    \ as bandwidth).  Some use cases how to leverage ALTO for joint network\n   and\
    \ application-layer optimization are explained in [RFC7491].\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Security concerns were extensively discussed\
    \ from the very beginning\n   of the development of the ALTO protocol, and they\
    \ have been\n   considered in detail in the ALTO requirements document [RFC6708]\
    \ as\n   well as in the ALTO protocol specification document [RFC7285].  The\n\
    \   two main security concerns are related to the unwanted disclosure of\n   information\
    \ through ALTO and the negative impact of specially\n   crafted, wrong (\"faked\"\
    ) guidance presented to an ALTO client.  In\n   addition to this, the usual concerns\
    \ related to the operation of any\n   networked application apply.\n   This section\
    \ focuses on the peer-to-peer use case, which is -- from a\n   security perspective\
    \ -- probably the most difficult ALTO use case\n   that has been considered. \
    \ Special attention is given to the two main\n   security concerns.\n"
- title: 7.1.  ALTO as a Protocol Crossing Trust Boundaries
  contents:
  - "7.1.  ALTO as a Protocol Crossing Trust Boundaries\n   The optimization of peer-to-peer\
    \ applications was the first use case\n   and the impetus for the development\
    \ of the ALTO protocol, in\n   particular, file sharing applications such as BitTorrent\
    \ [RFC5594].\n   As explained in Section 4.1.1, for the publisher of the ALTO\n\
    \   information (i.e., the ALTO server operator), it may not be apparent\n   who\
    \ is in charge of the P2P application overlay.  Some P2P\n   applications do not\
    \ have any central control entity and the whole\n   overlay consists only of the\
    \ peers, which are under control of the\n   individual users.  Other P2P applications\
    \ may have some control\n   entities such as super peers or trackers, but these\
    \ may be located in\n   foreign countries and under the control of unknown organizations.\
    \  As\n   outlined in Section 4.2.2, in some scenarios, it may be very\n   beneficial\
    \ to forward ALTO information to such trackers, super peers,\n   etc., located\
    \ in remote networks.  This situation is aggravated by\n   the vast number of\
    \ different P2P applications that are evolving\n   quickly and often without any\
    \ coordination with the network\n   operators.\n   In summary, it can be said\
    \ that in many instances of the P2P use\n   case, the ALTO protocol bridges the\
    \ border between the \"managed\" IP\n   network infrastructure under strict administrative\
    \ control and one or\n   more \"unmanaged\" application overlays, i.e., overlays\
    \ for which it is\n   hard to tell who is in charge of them.  This differs from\
    \ more-\n   controlled environments (e.g., in the CDN use case), in which\n  \
    \ bilateral agreements between the producer and consumer of guidance\n   are possible.\n"
- title: 7.2.  Information Leakage from the ALTO Server
  contents:
  - "7.2.  Information Leakage from the ALTO Server\n   An ALTO server will be provisioned\
    \ with information about the ISP's\n   network and possibly also with information\
    \ about neighboring ISPs.\n   This information (e.g., network topology, business\
    \ relations, etc.)\n   is often considered to be confidential to the ISP and can\
    \ include\n   very sensitive information.  ALTO does not require any particular\n\
    \   level of details of information disclosure; hence, the provider\n   should\
    \ evaluate how much information is revealed and the associated\n   risks.\n  \
    \ Furthermore, if the ALTO information is very fine grained, it may\n   also be\
    \ considered sensitive with respect to user privacy.  For\n   example, consider\
    \ a hypothetical endpoint property \"provisioned\n   access link bandwidth\" or\
    \ \"access technology (ADSL, VDSL, FTTH,\n   etc.)\" and an ALTO service that\
    \ publishes this property for\n   individual IP addresses.  This information could\
    \ not only be used for\n   traffic optimization but, for example, also for targeted\
    \ advertising\n   to residential users with exceptionally good (or bad) connectivity,\n\
    \   such as special banner ads.  For an advertisement system, it would be\n  \
    \ more complex to obtain such information otherwise, e.g., by bandwidth\n   probing.\n\
    \   Different scenarios related to the unwanted disclosure of an ALTO\n   server's\
    \ information have been itemized and categorized in RFC 6708,\n   Section 5.2.1.,\
    \ cases (1)-(3) [RFC6708].\n   In some use cases, it is not possible to use access\
    \ control (see\n   Section 7.3) to limit the distribution of ALTO knowledge to\
    \ a small\n   set of trusted clients.  In these scenarios, it seems tempting not\
    \ to\n   use network maps and cost maps at all, and instead completely rely on\n\
    \   ECS and endpoint ranking in the ALTO server.  While this practice may\n  \
    \ indeed reduce the amount of information that is disclosed to an\n   individual\
    \ ALTO client, some issues should be considered: first, when\n   using the map-based\
    \ approach, it is trivial to analyze the maximum\n   amount of information that\
    \ could be disclosed to a client -- the full\n   maps.  In contrast, when providing\
    \ endpoint-cost service only, the\n   ALTO server operator could be prone to a\
    \ false feeling of security,\n   while clients use repeated queries and/or collaboration\
    \ to gather\n   more information than they are expected to get (see Section 5.2.1.,\n\
    \   case (3) in [RFC6708]).  Second, the ECS reveals more information\n   about\
    \ the user or application behavior to the ALTO server, e.g.,\n   which other hosts\
    \ are considered as peers for the exchange of a\n   significant amount of data\
    \ (see Section 5.2.1., cases (4)-(6) in\n   [RFC6708]).\n   Consequently, users\
    \ may be more reluctant to use the ALTO service at\n   all if it is based on the\
    \ ECS instead of providing network and cost\n   maps.  Given that some popular\
    \ P2P applications are sometimes used\n   for purposes such as distribution of\
    \ files without the explicit\n   permission from the copyright owner, it may also\
    \ be in the interest\n   of the ALTO server operator that an ALTO server cannot\
    \ infer the\n   behavior of the application to be optimized.  One possible conclusion\n\
    \   could be to publish network and cost maps through ALTO that are so\n   coarse\
    \ grained that they do not violate the network operator's or the\n   user's interests.\n\
    \   In other use cases, in more-controlled environments (e.g., in the CDN\n  \
    \ use case) bilateral agreements, access control (see Section 7.3), and\n   encryption\
    \ could be used to reduce the risk of information leakage.\n"
- title: 7.3.  ALTO Server Access
  contents:
  - "7.3.  ALTO Server Access\n   Depending on the use case of ALTO, it may be desired\
    \ to apply access\n   restrictions to an ALTO server, i.e., by requiring client\n\
    \   authentication.  According to [RFC7285], ALTO requires that HTTP\n   Digest\
    \ Authentication be supported, in order to achieve client\n   authentication and\
    \ possibly to limit the number of parties with whom\n   ALTO information is directly\
    \ shared.  TLS Client Authentication may\n   also be supported.\n   In general,\
    \ well-known security management techniques and best\n   current practices [RFC4778]\
    \ for operational ISP infrastructure also\n   apply to an ALTO service, including\
    \ functions to protect the system\n   from unauthorized access, key management,\
    \ reporting security-relevant\n   events, and authorizing user access and privileges.\n\
    \   For peer-to-peer applications, a potential deployment scenario is\n   that\
    \ an ALTO server is solely accessible by peers from the ISP\n   network (as shown\
    \ in Figure 21).  For instance, the source IP address\n   can be used to grant\
    \ only access from that ISP network to the server.\n   This will \"limit\" the\
    \ number of peers able to attack the server to\n   the user's of the ISP (however,\
    \ including compromised computers that\n   are part of a botnet).\n   If the ALTO\
    \ server has to be accessible by parties not located in the\n   ISP's network\
    \ (see Figure 22), e.g., by a third-party tracker or by a\n   CDN system outside\
    \ the ISP's network, the access restrictions have to\n   be looser.  In the extreme\
    \ case, i.e., no access restrictions, each\n   and every host in the Internet\
    \ can access the ALTO server.  This\n   might not be the intention of the ISP,\
    \ as the server is not only\n   subject to more possible attacks, but also the\
    \ server load could\n   increase, since possibly more ALTO clients have to be\
    \ served.\n   There are also use cases where the access to the ALTO server has\
    \ to\n   be much more strictly controlled, i.e., where an authentication and\n\
    \   authorization of the ALTO client to the server may be needed.  For\n   instance,\
    \ in case of CDN optimization, the provider of an ALTO\n   service as well as\
    \ potential users are possibly well-known.  Only CDN\n   entities may need ALTO\
    \ access; access to the ALTO servers by\n   residential users may neither be necessary\
    \ nor be desired.\n   Access control can also help to prevent Denial-of-Service\
    \ (DoS)\n   attacks by arbitrary hosts from the Internet.  DoS can both affect\
    \ an\n   ALTO server and an ALTO client.  A server can get overloaded if too\n\
    \   many requests hit the server, or if the query load of the server\n   surpasses\
    \ the maximum computing capacity.  An ALTO client can get\n   overloaded if the\
    \ responses from the sever are, either intentionally\n   or due to an implementation\
    \ mistake, too large to be handled by that\n   particular client.\n"
- title: 7.4.  Faking ALTO Guidance
  contents:
  - "7.4.  Faking ALTO Guidance\n   The ALTO services enables an ALTO service provider\
    \ to influence the\n   behavior of network applications.  An attacker who is able\
    \ to\n   generate false replies, or e.g. an attacker who can intercept the\n \
    \  ALTO server discovery procedure, can provide faked ALTO guidance.\n   Here\
    \ is a list of examples of how the ALTO guidance could be faked\n   and what possible\
    \ consequences may arise:\n   Sorting:  An attacker could change the sorting order\
    \ of the ALTO\n      guidance (given that the order is of importance; otherwise,\
    \ the\n      ranking mechanism is of interest), i.e., declaring peers located\n\
    \      outside the ISP as peers to be preferred.  This will not pose a\n     \
    \ big risk to the network or peers, as it would mimic the \"regular\"\n      peer\
    \ operation without traffic localization, apart from the\n      communication/processing\
    \ overhead for ALTO.  However, it could\n      mean that ALTO is reaching the\
    \ opposite goal of shuffling more\n      data across ISP boundaries, incurring\
    \ more costs for the ISP.  In\n      another example, fake guidance could give\
    \ unrealistically low\n      costs to devices in an ISP's mobile network, thus\
    \ encouraging\n      other devices to contact them, thereby degrading the ISP's\
    \ mobile\n      network and causing customer dissatisfaction.\n   Preference of\
    \ a single peer:  A single IP address (thus a peer) could\n      be marked as\
    \ to be preferred over all other peers.  This peer can\n      be located within\
    \ the local ISP or also in other parts of the\n      Internet (e.g., a web server).\
    \  This could lead to the case that\n      quite a number of peers to trying to\
    \ contact this IP address,\n      possibly causing a DoS attack.\n   The ALTO\
    \ protocol protects the authenticity and integrity of ALTO\n   information while\
    \ in transit by leveraging the authenticity and\n   integrity protection mechanisms\
    \ in TLS (see Section 8.3.5 of\n   [RFC7285]).  It has not yet been investigated\
    \ how wrong ALTO guidance\n   given by an authenticated ALTO server can impact\
    \ the operation of the\n   network and the applications.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [ALTO-REG]\n              IANA, \"Application-Layer\
    \ Traffic Optimization (ALTO)\n              Protocol\",\n              <http://www.iana.org/assignments/alto-protocol>.\n\
    \   [RFC5693]  Seedorf, J. and E. Burger, \"Application-Layer Traffic\n      \
    \        Optimization (ALTO) Problem Statement\", RFC 5693,\n              DOI\
    \ 10.17487/RFC5693, October 2009,\n              <http://www.rfc-editor.org/info/rfc5693>.\n\
    \   [RFC6708]  Kiesel, S., Ed., Previdi, S., Stiemerling, M., Woundy, R.,\n  \
    \            and Y. Yang, \"Application-Layer Traffic Optimization\n         \
    \     (ALTO) Requirements\", RFC 6708, DOI 10.17487/RFC6708,\n              September\
    \ 2012, <http://www.rfc-editor.org/info/rfc6708>.\n   [RFC7285]  Alimi, R., Ed.,\
    \ Penno, R., Ed., Yang, Y., Ed., Kiesel, S.,\n              Previdi, S., Roome,\
    \ W., Shalunov, S., and R. Woundy,\n              \"Application-Layer Traffic\
    \ Optimization (ALTO) Protocol\",\n              RFC 7285, DOI 10.17487/RFC7285,\
    \ September 2014,\n              <http://www.rfc-editor.org/info/rfc7285>.\n \
    \  [RFC7286]  Kiesel, S., Stiemerling, M., Schwan, N., Scharf, M., and\n     \
    \         H. Song, \"Application-Layer Traffic Optimization (ALTO)\n         \
    \     Server Discovery\", RFC 7286, DOI 10.17487/RFC7286,\n              November\
    \ 2014, <http://www.rfc-editor.org/info/rfc7286>.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [ALTO-CDN]\n              Penno, R., Medved,\
    \ J., Alimi, R., Yang, R., and S.\n              Previdi, \"ALTO and Content Delivery\
    \ Networks\", Work in\n              Progress, draft-penno-alto-cdn-03, March\
    \ 2011.\n   [ALTO-H12]\n              Kiesel, S. and M. Stiemerling, \"ALTO H12\"\
    , Work in\n              Progress, draft-kiesel-alto-h12-02, March 2010.\n   [ALTO-P2PCACHE]\n\
    \              Lingli, D., Chen, W., Yi, Q., and Y. Zhang,\n              \"Considerations\
    \ for ALTO with network-deployed P2P\n              caches\", Work in Progress,\
    \ draft-deng-alto-p2pcache-03,\n              February 2014.\n   [CDN-USE]  Niven-Jenkins,\
    \ B., Watson, G., Bitar, N., Medved, J., and\n              S. Previdi, \"Use\
    \ Cases for ALTO within CDNs\", Work in\n              Progress, draft-jenkins-alto-cdn-use-cases-03,\
    \ June 2012.\n   [CDNI-FCI]\n              Seedorf, J., Yang, Y., and J. Peterson,\
    \ \"CDNI Footprint\n              and Capabilities Advertisement using ALTO\"\
    , Work in\n              Progress, draft-seedorf-cdni-request-routing-alto-08,\n\
    \              March 2015.\n   [CHINA-TRIAL]\n              Li, K. and G. Jian,\
    \ \"ALTO and DECADE service trial within\n              China Telecom\", Work\
    \ in Progress,\n              draft-lee-alto-chinatelecom-trial-04, March 2012.\n\
    \   [MAP-CALC]\n              Seidel, H., \"ALTO map calculation from live network\
    \ data\",\n              Work in Progress, draft-seidel-alto-map-calculation-00,\n\
    \              October 2015.\n   [NETWORK-TOPO]\n              Clemm, A., Medved,\
    \ J., Varga, R., Tkacik, T., Bahadur, N.,\n              Ananthakrishnan, H.,\
    \ and X. Liu, \"A Data Model for Network\n              Topologies\", Work in\
    \ Progress,\n              draft-ietf-i2rs-yang-network-topo-06, September 2016.\n\
    \   [RFC3411]  Harrington, D., Presuhn, R., and B. Wijnen, \"An\n            \
    \  Architecture for Describing Simple Network Management\n              Protocol\
    \ (SNMP) Management Frameworks\", STD 62, RFC 3411,\n              DOI 10.17487/RFC3411,\
    \ December 2002,\n              <http://www.rfc-editor.org/info/rfc3411>.\n  \
    \ [RFC3568]  Barbir, A., Cain, B., Nair, R., and O. Spatscheck, \"Known\n    \
    \          Content Network (CN) Request-Routing Mechanisms\",\n              RFC\
    \ 3568, DOI 10.17487/RFC3568, July 2003,\n              <http://www.rfc-editor.org/info/rfc3568>.\n\
    \   [RFC4026]  Andersson, L. and T. Madsen, \"Provider Provisioned Virtual\n \
    \             Private Network (VPN) Terminology\", RFC 4026,\n              DOI\
    \ 10.17487/RFC4026, March 2005,\n              <http://www.rfc-editor.org/info/rfc4026>.\n\
    \   [RFC4655]  Farrel, A., Vasseur, J., and J. Ash, \"A Path Computation\n   \
    \           Element (PCE)-Based Architecture\", RFC 4655,\n              DOI 10.17487/RFC4655,\
    \ August 2006,\n              <http://www.rfc-editor.org/info/rfc4655>.\n   [RFC4778]\
    \  Kaeo, M., \"Operational Security Current Practices in\n              Internet\
    \ Service Provider Environments\", RFC 4778,\n              DOI 10.17487/RFC4778,\
    \ January 2007,\n              <http://www.rfc-editor.org/info/rfc4778>.\n   [RFC5594]\
    \  Peterson, J. and A. Cooper, \"Report from the IETF Workshop\n             \
    \ on Peer-to-Peer (P2P) Infrastructure, May 28, 2008\",\n              RFC 5594,\
    \ DOI 10.17487/RFC5594, July 2009,\n              <http://www.rfc-editor.org/info/rfc5594>.\n\
    \   [RFC5632]  Griffiths, C., Livingood, J., Popkin, L., Woundy, R., and\n   \
    \           Y. Yang, \"Comcast's ISP Experiences in a Proactive Network\n    \
    \          Provider Participation for P2P (P4P) Technical Trial\",\n         \
    \     RFC 5632, DOI 10.17487/RFC5632, September 2009,\n              <http://www.rfc-editor.org/info/rfc5632>.\n\
    \   [RFC6020]  Bjorklund, M., Ed., \"YANG - A Data Modeling Language for\n   \
    \           the Network Configuration Protocol (NETCONF)\", RFC 6020,\n      \
    \        DOI 10.17487/RFC6020, October 2010,\n              <http://www.rfc-editor.org/info/rfc6020>.\n\
    \   [RFC6241]  Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,\n  \
    \            and A. Bierman, Ed., \"Network Configuration Protocol\n         \
    \     (NETCONF)\", RFC 6241, DOI 10.17487/RFC6241, June 2011,\n              <http://www.rfc-editor.org/info/rfc6241>.\n\
    \   [RFC6875]  Kamei, S., Momose, T., Inoue, T., and T. Nishitani, \"The\n   \
    \           P2P Network Experiment Council's Activities and\n              Experiments\
    \ with Application-Layer Traffic Optimization\n              (ALTO) in Japan\"\
    , RFC 6875, DOI 10.17487/RFC6875, February\n              2013, <http://www.rfc-editor.org/info/rfc6875>.\n\
    \   [RFC7491]  King, D. and A. Farrel, \"A PCE-Based Architecture for\n      \
    \        Application-Based Network Operations\", RFC 7491,\n              DOI\
    \ 10.17487/RFC7491, March 2015,\n              <http://www.rfc-editor.org/info/rfc7491>.\n\
    \   [RFC7752]  Gredler, H., Ed., Medved, J., Previdi, S., Farrel, A., and\n  \
    \            S. Ray, \"North-Bound Distribution of Link-State and\n          \
    \    Traffic Engineering (TE) Information Using BGP\", RFC 7752,\n           \
    \   DOI 10.17487/RFC7752, March 2016,\n              <http://www.rfc-editor.org/info/rfc7752>.\n\
    \   [RFC7871]  Contavalli, C., van der Gaast, W., Lawrence, D., and W.\n     \
    \         Kumari, \"Client Subnet in DNS Queries\", RFC 7871,\n              DOI\
    \ 10.17487/RFC7871, May 2016,\n              <http://www.rfc-editor.org/info/rfc7871>.\n\
    \   [RFC7921]  Atlas, A., Halpern, J., Hares, S., Ward, D., and T.\n         \
    \     Nadeau, \"An Architecture for the Interface to the Routing\n           \
    \   System\", RFC 7921, DOI 10.17487/RFC7921, June 2016,\n              <http://www.rfc-editor.org/info/rfc7921>.\n\
    \   [RFC7922]  Clarke, J., Salgueiro, G., and C. Pignataro, \"Interface to\n \
    \             the Routing System (I2RS) Traceability: Framework and\n        \
    \      Information Model\", RFC 7922, DOI 10.17487/RFC7922, June\n           \
    \   2016, <http://www.rfc-editor.org/info/rfc7922>.\n   [UPDATE-SSE]\n       \
    \       Roome, W. and Y. Yang, \"ALTO Incremental Updates Using\n            \
    \  Server-Sent Events (SSE)\", Work in Progress,\n              draft-ietf-alto-incr-update-sse-03,\
    \ September 2016.\n   [VPN-SERVICE]\n              Scharf, M., Gurbani, V., Soprovich,\
    \ G., and V. Hilt, \"The\n              Virtual Private Network (VPN) Service\
    \ in ALTO: Use Cases,\n              Requirements and Extensions\", Work in Progress,\n\
    \              draft-scharf-alto-vpn-service-02, February 2014.\n   [XDOM-DISC]\n\
    \              Kiesel, S. and M. Stiemerling, \"Application Layer Traffic\n  \
    \            Optimization (ALTO) Cross-Domain Server Discovery\", Work\n     \
    \         in Progress, draft-kiesel-alto-xdom-disc-02, July 2016.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   This memo is the result of contributions made by several\
    \ people:\n   o  Xianghue Sun, Lee Kai, and Richard Yang contributed text on ISP\n\
    \      deployment requirements and monitoring.\n   o  Rich Woundy contributed\
    \ text to Section 3.3.\n   o  Lingli Deng, Wei Chen, Qiuchao Yi, and Yan Zhang\
    \ contributed\n      Section 6.2.\n   Thomas-Rolf Banniza, Vinayak Hegde, Qin\
    \ Wu, Wendy Roome, and Sabine\n   Randriamasy provided very useful comments and\
    \ reviewed the document.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Martin Stiemerling\n   Hochschule Darmstadt\n   Email:\
    \ mls.ietf@gmail.com\n   URI:   http://ietf.stiemerling.org\n   Sebastian Kiesel\n\
    \   University of Stuttgart Information Center\n   Networks and Communication\
    \ Systems Department\n   Allmandring 30\n   Stuttgart  70550\n   Germany\n   Email:\
    \ ietf-alto@skiesel.de\n   Michael Scharf\n   Nokia\n   Lorenzstrasse 10\n   Stuttgart\
    \  70435\n   Germany\n   Email: michael.scharf@nokia.com\n   Hans Seidel\n   BENOCS\
    \ GmbH\n   Winterfeldtstrasse 21\n   Berlin  10781\n   Germany\n   Email: hseidel@benocs.com\n\
    \   Stefano Previdi\n   Cisco Systems, Inc.\n   Via Del Serafico 200\n   Rome\
    \  00191\n   Italy\n   Email: sprevidi@cisco.com\n"
