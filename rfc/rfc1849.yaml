- title: __initial_text__
  contents:
  - ''
- title: Independent Submission                                        H. Spencer
  contents:
  - 'Independent Submission                                        H. Spencer

    '
- title: 'Obsoleted by: 5536, 5537                                      March 2010'
  contents:
  - "Obsoleted by: 5536, 5537                                      March 2010\n  \
    \        \"Son of 1036\": News Article Format and Transmission\n"
- title: Abstract
  contents:
  - "Abstract\n   By the early 1990s, it had become clear that RFC 1036, then the\n\
    \   specification for the Interchange of USENET Messages, was badly in\n   need\
    \ of repair.  This \"Internet-Draft-to-be\", though never formally\n   published\
    \ at that time, was widely circulated and became the de facto\n   standard for\
    \ implementors of News Servers and User Agents, rapidly\n   acquiring the nickname\
    \ \"Son of 1036\".  Indeed, under that name, it\n   could fairly be described\
    \ as the best-known Internet Draft (n)ever\n   published, and it formed the starting\
    \ point for the recently adopted\n   Proposed Standards for Netnews.\n   It is\
    \ being published now in order to provide the historical\n   background out of\
    \ which those standards have grown.  Present-day\n   implementors should be aware\
    \ that it is NOT NOW APPROPRIATE for use\n   in current implementations.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n    published for the historical record.\n   This document defines a\
    \ Historic Document for the Internet community.\n   This is a contribution to\
    \ the RFC Series, independently of any other\n   RFC stream.  The RFC Editor has\
    \ chosen to publish this document at\n   its discretion and makes no statement\
    \ about its value for\n   implementation or deployment.  Documents approved for\
    \ publication by\n   the RFC Editor are not a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc1849.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n   This document\
    \ may not be modified, and derivative works of it may not\n   be created, except\
    \ to format it for publication as an RFC or to\n   translate it into languages\
    \ other than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   Preface ............................................................5\n\
    \   Original Abstract ..................................................6\n  \
    \ 1. Introduction ....................................................6\n   2.\
    \ Definitions, Notations, and Conventions .........................8\n      2.1.\
    \ Textual Notations ..........................................8\n      2.2. Syntax\
    \ Notation ............................................9\n      2.3. Definitions\
    \ ...............................................10\n      2.4. End-of-Line ...............................................13\n\
    \      2.5. Case-Sensitivity ..........................................13\n  \
    \    2.6. Language ..................................................13\n   3.\
    \ Relation to MAIL (RFC822, etc.) ................................14\n   4. Basic\
    \ Format ...................................................15\n      4.1. Overall\
    \ Syntax ............................................15\n      4.2. Headers ...................................................16\n\
    \           4.2.1. Names and Contents .................................16\n  \
    \         4.2.2. Undesirable Headers ................................18\n    \
    \       4.2.3. White Space and Continuations ......................18\n      4.3.\
    \ Body ......................................................19\n           4.3.1.\
    \ Body Format Issues .................................19\n           4.3.2. Body\
    \ Conventions ...................................20\n      4.4. Characters and\
    \ Character Sets .............................23\n      4.5. Non-ASCII Characters\
    \ in Headers ...........................26\n      4.6. Size Limits ...............................................28\n\
    \      4.7. Example ...................................................30\n  \
    \ 5. Mandatory Headers ..............................................30\n    \
    \  5.1. Date ......................................................31\n      5.2.\
    \ From ......................................................33\n      5.3. Message-ID\
    \ ................................................35\n      5.4. Subject ...................................................36\n\
    \      5.5. Newsgroups ................................................38\n  \
    \    5.6. Path ......................................................42\n   6.\
    \ Optional Headers ...............................................45\n      6.1.\
    \ Followup-To ...............................................45\n      6.2. Expires\
    \ ...................................................46\n      6.3. Reply-To ..................................................47\n\
    \      6.4. Sender ....................................................47\n  \
    \    6.5. References ................................................48\n    \
    \  6.6. Control ...................................................50\n      6.7.\
    \ Distribution ..............................................51\n      6.8. Keywords\
    \ ..................................................52\n      6.9. Summary ...................................................53\n\
    \      6.10. Approved .................................................53\n  \
    \    6.11. Lines ....................................................54\n    \
    \  6.12. Xref .....................................................55\n      6.13.\
    \ Organization .............................................56\n      6.14. Supersedes\
    \ ...............................................57\n      6.15. Also-Control\
    \ .............................................57\n      6.16. See-Also .................................................58\n\
    \      6.17. Article-Names ............................................58\n  \
    \    6.18. Article-Updates ..........................................60\n   7.\
    \ Control Messages ...............................................60\n      7.1.\
    \ cancel ....................................................61\n      7.2. ihave,\
    \ sendme .............................................64\n      7.3. newgroup\
    \ ..................................................66\n      7.4. rmgroup ...................................................68\n\
    \      7.5. sendsys, version, whogets .................................68\n  \
    \    7.6. checkgroups ...............................................73\n   8.\
    \ Transmission Formats ...........................................74\n      8.1.\
    \ Batches ...................................................74\n      8.2. Encoded\
    \ Batches ...........................................75\n      8.3. News within\
    \ Mail ..........................................76\n      8.4. Partial Batches\
    \ ...........................................77\n   9. Propagation and Processing\
    \ .....................................77\n      9.1. Relayer General Issues ....................................78\n\
    \      9.2. Article Acceptance and Propagation ........................80\n  \
    \    9.3. Administrator Contact .....................................82\n   10.\
    \ Gatewaying ....................................................83\n      10.1.\
    \ General Gatewaying Issues ................................83\n      10.2. Header\
    \ Synthesis .........................................85\n      10.3. Message ID\
    \ Mapping .......................................86\n      10.4. Mail to and from\
    \ News ....................................88\n      10.5. Gateway Administration\
    \ ...................................89\n   11. Security and Related Issues ...................................90\n\
    \      11.1. Leakage ..................................................90\n  \
    \    11.2. Attacks ..................................................91\n    \
    \  11.3. Anarchy ..................................................92\n      11.4.\
    \ Liability ................................................92\n   12. References\
    \ ....................................................93\n   Appendix A. Archaeological\
    \ Notes ..................................96\n      A.1. \"A News\" Article Format\
    \ ...................................96\n      A.2. Early \"B News\" Article Format\
    \ .............................96\n      A.3. Obsolete Headers ..........................................97\n\
    \      A.4. Obsolete Control Messages .................................97\n  \
    \ Appendix B. A Quick Tour of MIME ..................................98\n   Appendix\
    \ C. Summary of Changes Since RFC 1036 ....................103\n   Appendix D.\
    \ Summary of Completely New Features ...................104\n   Appendix E. Summary\
    \ of Differences from RFCs 822 and 1123.........105\n"
- title: Preface
  contents:
  - "Preface\n   Although [RFC1036] was published in 1987, for many years it remained\n\
    \   the only formally published specification for Netnews format and\n   processing.\
    \  It was widely considered obsolete within a few years,\n   and it has now been\
    \ superseded by the work of the USEFOR Working\n   Group, leading to the publication\
    \ of [RFC5536] and [RFC5537].\n   However, there was an intermediate step that\
    \ is of some historical\n   interest.\n   In 1993-4, Henry Spencer wrote and informally\
    \ circulated a document\n   that became known as \"Son of 1036\", meant as a first\
    \ draft of a\n   replacement for [RFC1036].  It went no further at the time (although,\n\
    \   more recently, the USEFOR Working Group started from it), but has\n   nevertheless\
    \ seen considerable use as a technical reference and even\n   a de facto standard,\
    \ despite its informal status.\n   The USEFOR work has eliminated any further\
    \ relevance of Son of 1036\n   as a technical reference, but it remains of historical\
    \ interest.  The\n   USEFOR Working Group has asked that it be published as an\
    \ Historic\n   RFC, to ensure its preservation in an accessible form and facilitate\n\
    \   referencing it.\n   This document is identical to the last distributed version\
    \ of Son of\n   1036, dated 2 June 1994, except for reformatting, correction of\
    \ a few\n   minor factual or formatting errors, completion of the then-empty\n\
    \   Appendix D and of the References section, minor editing to match\n   preferred\
    \ RFC style, and changes to leading and trailing material.\n   Remarks enclosed\
    \ within \"{...}\" indicate explanatory material not\n   present in the original\
    \ version.  References to the current MIME\n   standards (and a few others) have\
    \ been added (that was an unresolved\n   issue in 1994).\n   The technical content\
    \ remains unchanged, including the references to\n   the document itself as a\
    \ Draft rather than an RFC and the presence of\n   unresolved issues.  The original\
    \ section numbering has been\n   preserved, although the original pagination has\
    \ not (among other\n   reasons, it did not fully follow IETF formatting standards).\n\
    \   READERS ARE CAUTIONED THAT THIS DOCUMENT IS OBSOLETE AND SHOULD NOT\n   BE\
    \ USED AS A TECHNICAL REFERENCE.  Although Son of 1036 largely\n   documented\
    \ existing practice, it also proposed some changes, some of\n   which did not\
    \ catch on or are no longer considered good ideas.  (Of\n   particular note, the\
    \ MIME type \"message/news\" should not be used.)\n   Consult [RFC5536] and [RFC5537]\
    \ for modern technical information.\n   Although a number of people contributed\
    \ useful comments or criticism\n   during the preparation of this document, its\
    \ contents are entirely\n   the opinions of the author circa 1994.  Not even the\
    \ author himself\n   agrees with them all now.\n   The author thanks Charles Lindsey\
    \ for his assistance in getting this\n   document cleaned up and formally published\
    \ at last (not least, for\n   supplying some prodding to actually get it done!).\n\
    \   The author thanks Luc Rooijakkers for supplying the MIME summary that\n  \
    \ Appendix B is based on.\n"
- title: Original Abstract
  contents:
  - "Original Abstract\n   This Draft defines the format and procedures for interchange\
    \ of\n   network news articles.  It is hoped that a later version of this\n  \
    \ Draft will obsolete RFC 1036, reflecting more recent experience and\n   accommodating\
    \ future directions.\n   Network news articles resemble mail messages but are\
    \ broadcast to\n   potentially large audiences, using a flooding algorithm that\n\
    \   propagates one copy to each interested host (or group thereof),\n   typically\
    \ stores only one copy per host, and does not require any\n   central administration\
    \ or systematic registration of interested\n   users.  Network news originated\
    \ as the medium of communication for\n   Usenet, circa 1980.  Since then, Usenet\
    \ has grown explosively, and\n   many Internet sites participate in it.  In addition,\
    \ the news\n   technology is now in widespread use for other purposes, on the\n\
    \   Internet and elsewhere.\n   This Draft primarily codifies and organizes existing\
    \ practice.  A few\n   small extensions have been added in an attempt to solve\
    \ problems that\n   are considered serious.  Major extensions (e.g., cryptographic\n\
    \   authentication) that need significant development effort are left to\n   be\
    \ undertaken as independent efforts.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Network news articles resemble mail messages but are broadcast\
    \ to\n   potentially large audiences, using a flooding algorithm that\n   propagates\
    \ one copy to each interested host (or groups thereof),\n   typically stores only\
    \ one copy per host, and does not require any\n   central administration or systematic\
    \ registration of interested\n   users.  Network news originated as the medium\
    \ of communication for\n   Usenet, circa 1980.  Since then, Usenet has grown explosively,\
    \ and\n   many Internet sites participate in it.  In addition, the news\n   technology\
    \ is now in widespread use for other purposes, on the\n   Internet and elsewhere.\n\
    \   The earliest news interchange used the so-called \"A News\" article\n   format.\
    \  Shortly thereafter, an article format vaguely resembling\n   Internet mail\
    \ was devised and used briefly.  Both of those formats\n   are completely obsolete;\
    \ they are documented in Appendix A for\n   historical reasons only.  With the\
    \ publication of [RFC850] in 1983,\n   news articles came to closely resemble\
    \ Internet mail messages, with\n   some restrictions and some additional headers.\
    \  In 1987, [RFC1036]\n   updated [RFC850] without making major changes.\n   In\
    \ the intervening five years, the [RFC1036] article format has\n   proven quite\
    \ satisfactory, although minor extensions appear desirable\n   to match recent\
    \ developments in areas such as multi-media mail.\n   [RFC1036] itself has not\
    \ proven quite so satisfactory.  It is often\n   rather vague and does not address\
    \ some issues at all; this has caused\n   significant interoperability problems\
    \ at times, and implementations\n   have diverged somewhat.  Worse, although it\
    \ was intended primarily to\n   document existing practice, it did not precisely\
    \ match existing\n   practice even at the time it was published, and the deviations\
    \ have\n   grown since.\n   This Draft attempts to specify the format of articles,\
    \ and the\n   procedures used to exchange them and process them, in sufficient\n\
    \   detail to allow full interoperability.  In addition, some tentative\n   suggestions\
    \ are made about directions for future development, in an\n   attempt to avert\
    \ unnecessary divergence and consequent loss of\n   interoperability.  Major extensions\
    \ (e.g., cryptographic\n   authentication) that need significant development effort\
    \ are left to\n   be undertaken as independent efforts.\n      NOTE: One question\
    \ all of this may raise is: why is there no News-\n      Version header, analogous\
    \ to MIME-Version, specifying a version\n      number corresponding to this specification?\
    \  The answer is: it\n      doesn't appear to be useful, given news's backward-compatibility\n\
    \      constraints.  The major use of a version number is indicating\n      which\
    \ of several INCOMPATIBLE interpretations is relevant.  The\n      impossibility\
    \ of orchestrating any sort of simultaneous change\n      over news's installed\
    \ base makes it necessary to avoid such\n      incompatible changes (as opposed\
    \ to extensions) entirely.  MIME\n      has a version number mostly because it\
    \ introduced incompatible\n      changes to the interpretation of several \"Content-\"\
    \ headers.  This\n      Draft attempts no changes in interpretation, and it appears\n\
    \      doubtful that future Drafts will find it feasible to introduce\n      any.\n\
    \      UNRESOLVED ISSUE: Should this be reconsidered?  Only if the header\n  \
    \    has SPECIFIC IDENTIFIABLE uses today.  Otherwise, it's just\n      useless\
    \ added bulk.\n   As in this Draft's predecessors, the exact means used to transmit\n\
    \   articles from one host to another is not specified.  Network News\n   Transfer\
    \ Protocol (NNTP) [RFC977] {since replaced by [RFC3977]} is\n   probably the most\
    \ common transmission method on the Internet, but a\n   number of others are known\
    \ to be in use, including the Unix-To-Unix\n   Copy Protocol [UUCP], which was\
    \ extensively used in the early days of\n   Usenet and is still much used on its\
    \ fringes today.\n   Several of the mechanisms described in this Draft may seem\
    \ somewhat\n   strange or even bizarre at first reading.  As with Internet mail,\n\
    \   there is no reasonable possibility of updating the entire installed\n   base\
    \ of news software promptly, so interoperability with old software\n   is crucial\
    \ and will remain so.  Compatibility with existing practice\n   and robustness\
    \ in an imperfect world necessarily take priority over\n   elegance.\n"
- title: 2.  Definitions, Notations, and Conventions
  contents:
  - '2.  Definitions, Notations, and Conventions

    '
- title: 2.1.  Textual Notations
  contents:
  - "2.1.  Textual Notations\n   Throughout this Draft, \"MAIL\" is short for \"[RFC822]\
    \ as amended by\n   [RFC1123]\".  ([RFC1123]'s amendments are mostly relatively\
    \ small, but\n   they are not insignificant.)  See also the discussion in Section\
    \ 3\n   about this Draft's relationship to MAIL.  \"MIME\" is short for\n   \"\
    [RFC1341] and [RFC1342]\" (or their {since} updated replacements\n   {[RFC2045],\
    \ [RFC2046], and [RFC2047]}).\n      UNRESOLVED ISSUE: Update these numbers {now\
    \ resolved!}.\n      {NOTE: Since the original publication of this Draft [RFC822]\
    \ has\n      been updated, firstly to [RFC2822] and more recently to [RFC5322];\n\
    \      however, this Draft is firmly rooted in the original [RFC822].\n      Similarly,\
    \ [RFC821] has also received two upgrades in the\n      meantime.}\n   \"ASCII\"\
    \ is short for \"the ANSI X3.4 character set\" [X3.4].  While\n   \"ASCII\" is\
    \ often misused to refer to various character sets somewhat\n   similar to X3.4,\
    \ in this Draft, \"ASCII\" means [X3.4] and only [X3.4].\n      NOTE: The name\
    \ is traditional (to the point where the ANSI\n      standard sanctions it), even\
    \ though it is no longer an acronym for\n      the name of the standard.\n   \
    \   NOTE: ASCII, X3.4, contains 128 characters, not all of them\n      printable.\
    \  Character sets with more characters are not ASCII,\n      although they may\
    \ include it as a subset.\n   Certain words used to define the significance of\
    \ individual\n   requirements are capitalized.  \"MUST\" means that the item is\
    \ an\n   absolute requirement of the specification.  \"SHOULD\" means that the\n\
    \   item is a strong recommendation: there may be valid reasons to ignore\n  \
    \ it in unusual circumstances, but this should be done only after\n   careful\
    \ study of the full implications and a firm conclusion that it\n   is necessary,\
    \ because there are serious disadvantages to doing so.\n   \"MAY\" means that\
    \ the item is truly optional, and implementors and\n   users are warned that conformance\
    \ is possible but not to be relied\n   on.\n   The term \"compliant\", applied\
    \ to implementations, etc., indicates\n   satisfaction of all relevant \"MUST\"\
    \ and \"SHOULD\" requirements.  The\n   term \"conditionally compliant\" indicates\
    \ satisfaction of all relevant\n   \"MUST\" requirements but violation of at least\
    \ one relevant \"SHOULD\"\n   requirement.\n   This Draft contains explanatory\
    \ notes using the following format.\n   These may be skipped by persons interested\
    \ solely in the content of\n   the specification.  The purpose of the notes is\
    \ to explain why\n   choices were made, to place them in context, or to suggest\
    \ possible\n   implementation techniques.\n      NOTE: While such explanatory\
    \ notes may seem superfluous in\n      principle, they often help the less-than-omniscient\
    \ reader grasp\n      the purpose of the specification and the constraints involved.\n\
    \      Given the limitations of natural language for descriptive\n      purposes,\
    \ this improves the probability that implementors and\n      users will understand\
    \ the true intent of the specification in\n      cases where the wording is not\
    \ entirely clear.\n   All numeric values are given in decimal unless otherwise\
    \ indicated.\n   Octets are assumed to be unsigned values for this purpose.  Large\n\
    \   numbers are written using the North American convention, in which \",\"\n\
    \   separates groups of three digits but otherwise has no significance.\n"
- title: 2.2.  Syntax Notation
  contents:
  - "2.2.  Syntax Notation\n   Although the mechanisms specified in this Draft are\
    \ all described in\n   prose, most are also described formally in the modified\
    \ BNF notation\n   of [RFC822].  Implementors will need to be familiar with this\n\
    \   notation to fully understand this specification and are referred to\n   [RFC822]\
    \ for a complete explanation of the modified BNF notation.\n   Here is a brief\
    \ illustrative example:\n      sentence  = clause *( punct clause ) \".\"\n  \
    \    punct     = \":\" / \";\"\n      clause    = 1*word [ \"(\" clause \")\"\
    \ / \",\" 1*word ]\n      word      = <any English word>\n   This defines a sentence\
    \ as some clauses separated by puncts and ended\n   by a period, a punct as a\
    \ colon or semicolon, a clause as at least\n   one <word> optionally followed\
    \ by either a parenthesized clause or a\n   comma and at least one more <word>,\
    \ and a <word> as (informally) any\n   English word.  The characters \"<>\" are\
    \ used to enclose names when\n   (and only when) distinguishing them from surrounding\
    \ text is useful.\n   The full form of the repetition notation is \"<m>*<n><thing>\"\
    ,\n   denoting <m> through <n> repetitions of <thing>; <m> defaults to\n   zero,\
    \ <n> to infinity, and the \"*\" and <n> can be omitted if <m> and\n   <n> are\
    \ equal, so 1*word is one or more words, 1*5word is one through\n   five words,\
    \ and 2word is exactly two words.\n   The character \"\\\" is not special in any\
    \ way in this notation.\n   This Draft is intended to be self-contained; all syntax\
    \ rules used in\n   it are defined within it, and a rule with the same name as\
    \ one found\n   in MAIL does not necessarily have the same definition.  The lexical\n\
    \   layer of MAIL is NOT, repeat NOT, used in this Draft, and its\n   presence\
    \ must not be assumed; notably, this Draft spells out all\n   places where white\
    \ space is permitted/required and all places where\n   constructs resembling MAIL\
    \ comments can occur.\n      NOTE: News parsers historically have been much less\
    \ permissive\n      than MAIL parsers.\n"
- title: 2.3.  Definitions
  contents:
  - "2.3.  Definitions\n   The term \"character set\", wherever it is used in this\
    \ Draft, refers\n   to a coded character set, in the sense of ISO character set\n\
    \   standardization work, and must not be misinterpreted as meaning\n   merely\
    \ \"a set of characters\".\n   In this Draft, ASCII character 32 is referred to\
    \ as \"blank\"; the word\n   \"space\" has a more generic meaning.\n   An \"article\"\
    \ is the unit of news, analogous to a MAIL \"message\".\n   A \"poster\" is a\
    \ human being (or software equivalent) submitting a\n   possibly compliant article\
    \ to be \"posted\", i.e., made available for\n   reading on all relevant hosts.\
    \  A \"posting agent\" is software that\n   assists posters to prepare articles,\
    \ including determining whether\n   the final article is compliant, passing it\
    \ on to a relayer for\n   posting if so, and returning it to the poster with an\
    \ explanation if\n   not.  A \"relayer\" is software that receives allegedly compliant\n\
    \   articles from posting agents and/or other relayers, files copies in a\n  \
    \ \"news database\", and possibly passes copies on to other relayers.\n      NOTE:\
    \ While the same software may well function both as a relayer\n      and as part\
    \ of a posting agent, the two functions are distinct and\n      should not be\
    \ confused.  The posting agent's purpose is (in part)\n      to validate an article,\
    \ supply header information that can or\n      should be supplied automatically,\
    \ and generally take reasonable\n      actions in an attempt to transform the\
    \ poster's submission into a\n      compliant article.  The relayer's purpose\
    \ is to move already-\n      compliant articles around efficiently without damaging\
    \ them.\n   A \"reader\" is a human being reading news articles.  A \"reading\
    \ agent\"\n   is software that presents articles to a reader.\n      NOTE: Informal\
    \ usage often uses \"reader\" for both these meanings,\n      but this introduces\
    \ considerable potential for confusion and\n      misunderstanding, so this Draft\
    \ takes care to make the\n      distinction.\n   A \"newsgroup\" is a single news\
    \ forum, a logical bulletin board,\n   having a name and nominally intended for\
    \ articles on a specific\n   topic.  An article is \"posted to\" a single newsgroup\
    \ or several\n   newsgroups.  When an article is posted to more than one newsgroup,\
    \ it\n   is said to be \"cross-posted\"; note that this differs from posting the\n\
    \   same text as part of each of several articles, one per newsgroup.  A\n   \"\
    hierarchy\" is the set of all newsgroups whose names share a first\n   component\
    \ (see the name syntax in Section 5.5).\n   A newsgroup may be \"moderated\",\
    \ in which case submissions are not\n   posted directly, but mailed to a \"moderator\"\
    \ for consideration and\n   possible posting.  Moderators are typically human\
    \ but may be\n   implemented partially or entirely in software.\n   A \"followup\"\
    \ is an article containing a response to the contents of\n   an earlier article\
    \ (the followup's \"precursor\").  A \"followup agent\"\n   is a combination of\
    \ reading agent and posting agent that aids in the\n   preparation and posting\
    \ of a followup.\n   Text comparisons are \"case-sensitive\" if they consider\
    \ uppercase\n   letters (e.g., \"A\") different from lowercase letters (e.g.,\
    \ \"a\"), and\n   \"case-insensitive\" if letters differing only in case (e.g.,\
    \ \"A\" and\n   \"a\") are considered identical.  Categories of text are said\
    \ to be\n   case-(in)sensitive if comparisons of such texts to others are case-\n\
    \   (in)sensitive.\n   A \"cooperating subnet\" is a set of news-exchanging hosts\
    \ that is\n   sufficiently well-coordinated (typically via a central administration\n\
    \   of some sort) that stronger assumptions can be made about hosts in\n   the\
    \ set than about news hosts in general.  This is typically used to\n   relax restrictions\
    \ that are otherwise required for worst-case\n   interoperability; members of\
    \ a cooperating subnet MAY interchange\n   articles that do not conform to this\
    \ Draft's specifications, provided\n   all members have agreed to this and provided\
    \ the articles are not\n   permitted to leak out of the subnet.  The word \"subnet\"\
    \ is used to\n   emphasize that a cooperating subnet is typically not an isolated\n\
    \   universe; care must be taken that traffic leaving the subnet complies\n  \
    \ with the restrictions of the larger net, not just those of the\n   cooperating\
    \ subnet.\n   A \"message ID\" is a unique identifier for an article, usually\n\
    \   supplied by the posting agent that posted it.  It distinguishes the\n   article\
    \ from every other article ever posted anywhere (in theory).\n   Articles with\
    \ the same message ID are treated as identical copies of\n   the same article\
    \ even if they are not in fact identical.\n   A \"gateway\" is software that receives\
    \ news articles and converts them\n   to messages of some other kind (e.g., mail\
    \ to a mailing list), or\n   vice versa; in essence, it is a translating relayer\
    \ that straddles\n   boundaries between different methods of message exchange.\
    \  The most\n   common type of gateway connects newsgroup(s) to mailing list(s),\n\
    \   either unidirectionally or bidirectionally, but there are also\n   gateways\
    \ between news networks using this Draft's news format and\n   those using other\
    \ formats.\n   A \"control message\" is an article that is marked as containing\n\
    \   control information; a relayer receiving such an article will\n   (subject\
    \ to permissions, etc.) take actions beyond just filing and\n   passing on the\
    \ article.\n      NOTE: \"Control article\" would be more consistent terminology,\
    \ but\n      \"control message\" is already well established.\n   An article's\
    \ \"reply address\" is the address to which mailed replies\n   should be sent.\
    \  This is the address specified in the article's From\n   header (see Section\
    \ 5.2), unless it also has a Reply-To header (see\n   Section 6.3).\n   The notation\
    \ (for example) \"(ASCII 17)\" following a name means \"this\n   name refers to\
    \ the ASCII character having value 17\".  An \"ASCII\n   printable character\"\
    \ is an ASCII character in the range 33-126.  An\n   \"ASCII control character\"\
    \ is an ASCII character in the range 0-31, or\n   the character DEL (ASCII 127).\
    \  A \"non-ASCII character\" is a\n   character having a value exceeding 127.\n\
    \      NOTE: Blank is neither an \"ASCII printable character\" nor an\n      \"\
    ASCII control character\".\n"
- title: 2.4.  End-of-Line
  contents:
  - "2.4.  End-of-Line\n   How the end of a text line is represented depends on the\
    \ context and\n   the implementation.  For Internet transmission via protocols\
    \ such as\n   SMTP [RFC821], an end-of-line is a CR (ASCII 13) followed by an\
    \ LF\n   (ASCII 10).  ISO C [ISO/IEC9899] and many modern operating systems\n\
    \   indicate end-of-line with a single character, typically ASCII LF (aka\n  \
    \ \"newline\"), and this is the normal convention when news is\n   transmitted\
    \ via UUCP.  A variety of other methods are in use,\n   including out-of-band\
    \ methods in which there is no specific character\n   that means end-of-line.\n\
    \   This Draft does not constrain how end-of-line is represented in news,\n  \
    \ except that characters other than CR and LF MUST NOT be usurped for\n   use\
    \ in end-of-line representations.  Also, obviously, all software\n   dealing with\
    \ a particular copy of an article must agree on the\n   convention to be used.\
    \  \"EOL\" is used to mean \"whatever end-of-line\n   representation is appropriate\"\
    ; it is not necessarily a character or\n   sequence of characters.\n      NOTE:\
    \ If faced with picking an EOL representation in the absence\n      of other constraints,\
    \ use of a single character simplifies\n      processing, and the ASCII standard\
    \ [X3.4] specifies that if one\n      character is to be used for this purpose,\
    \ it should be LF (ASCII\n      10).\n      NOTE: Inside MIME encodings, use of\
    \ the Internet canonical EOL\n      representation (CR followed by LF) is mandatory.\
    \  See [RFC2049].\n"
- title: 2.5.  Case-Sensitivity
  contents:
  - "2.5.  Case-Sensitivity\n   Text in newsgroup names, header parameters, etc. is\
    \ case-sensitive\n   unless stated otherwise.\n      NOTE: This is at variance\
    \ with MAIL, which is case-insensitive\n      unless stated otherwise, but is\
    \ consistent with news historical\n      practice and existing news software.\
    \  See the comments on backward\n      compatibility in Section 1.\n"
- title: 2.6.  Language
  contents:
  - "2.6.  Language\n   Various constant strings in this Draft, such as header names\
    \ and\n   month names, are derived from English words.  Despite their\n   derivation,\
    \ these words do NOT change when the poster or reader\n   employing them is interacting\
    \ in a language other than English.\n   Posting and reading agents SHOULD translate\
    \ as appropriate in their\n   interaction with the poster or reader, but the forms\
    \ that actually\n   appear in articles are always the English-derived ones defined\
    \ in\n   this Draft.\n"
- title: 3.  Relation to MAIL (RFC822, etc.)
  contents:
  - "3.  Relation to MAIL (RFC822, etc.)\n   The primary intent of this Draft is to\
    \ completely describe the news\n   article format as a subset of MAIL's message\
    \ format (augmented by\n   some new headers).  Unless explicitly noted otherwise,\
    \ the intent\n   throughout is that an article MUST also be a valid MAIL message.\n\
    \      NOTE: Despite obvious similarities between news and mail, opinions\n  \
    \    vary on whether it is possible or desirable to unify them into a\n      single\
    \ service.  However, it is unquestionably both possible and\n      useful to employ\
    \ some of the same tools for manipulating both mail\n      messages and news articles,\
    \ so there is specific advantage to be\n      had in defining them compatibly.\
    \  Furthermore, there is no\n      apparent need to re-invent the wheel when slight\
    \ extensions to an\n      existing definition will suffice.\n   Given that this\
    \ Draft attempts to be self-contained, it inevitably\n   contains considerable\
    \ repetition of information found in MAIL.  This\n   raises the possibility of\
    \ unintentional conflicts.  Unless\n   specifically noted otherwise, any wording\
    \ in this Draft that permits\n   behavior that is not MAIL-compliant is erroneous\
    \ and should be\n   followed only to the extent that the result remains compliant\
    \ with\n   MAIL.\n      NOTE: [RFC1036] said \"where this standard conflicts with\
    \ the\n      Internet Standard, RFC 822 should be considered correct and this\n\
    \      standard in error\".  Taken literally, this was obviously\n      incorrect,\
    \ since [RFC1036] imposed a number of restrictions not\n      found in [RFC822].\
    \  The intent, however, was reasonable: to\n      indicate that UNINTENTIONAL\
    \ differences were errors in [RFC1036].\n   Implementors and users should note\
    \ that MAIL is deliberately an\n   extensible standard, and most extensions devised\
    \ for mail are also\n   relevant to (and compatible with) news.  Note particularly\
    \ MIME,\n   summarized briefly in Appendix B, which extends MAIL in a number of\n\
    \   useful ways that are definitely relevant to news.  Also of note is\n   the\
    \ work in progress on reconciling Privacy Enhanced Mail (PEM),\n   which defines\
    \ extensions for authentication and security) with MIME,\n   after which this\
    \ may also be relevant to news.\n      UNRESOLVED ISSUE: Update the MIME/PEM information.\n\
    \   Similarly, descriptions here of MIME facilities should be considered\n   correct\
    \ only to the extent that they do not require or legitimize\n   practices that\
    \ would violate those RFCs.  (Note that this Draft does\n   extend the application\
    \ of some MIME facilities, but this is an\n   extension rather than an alteration.)\n"
- title: 4.  Basic Format
  contents:
  - '4.  Basic Format

    '
- title: 4.1.  Overall Syntax
  contents:
  - "4.1.  Overall Syntax\n   The overall syntax of a news article is:\n      article\
    \         = 1*header separator body\n      header          = start-line *continuation\n\
    \      start-line      = header-name \":\" space [ nonblank-text ] eol\n     \
    \ continuation    = space nonblank-text eol\n      header-name     = 1*name-character\
    \ *( \"-\" 1*name-character )\n      name-character  = letter / digit\n      letter\
    \          = <ASCII letter A-Z or a-z>\n      digit           = <ASCII digit 0-9>\n\
    \      separator       = eol\n      body            = *( [ nonblank-text / space\
    \ ] eol )\n      eol             = <EOL>\n      nonblank-text   = [ space ] text-character\
    \ *( space-or-text )\n      text-character  = <any ASCII character except NUL\
    \ (ASCII 0),\n                          HT (ASCII 9), LF (ASCII 10), CR (ASCII\
    \ 13),\n                          or blank (ASCII 32)>\n      space          \
    \ = 1*( <HT (ASCII 9)> / <blank (ASCII 32)> )\n      space-or-text   = space /\
    \ text-character\n   An article consists of some headers followed by a body. \
    \ An empty\n   line separates the two.  The headers contain structured information\n\
    \   about the article and its transmission.  A header begins with a\n   header\
    \ name identifying it, and can be continued onto subsequent\n   lines by beginning\
    \ the continuation line(s) with white space.  (Note\n   that Section 4.2.3 adds\
    \ some restrictions to the header syntax\n   indicated here.)  The body is largely\
    \ unstructured text significant\n   only to the poster and the readers.\n    \
    \  NOTE: Terminology here follows the current custom in the news\n      community,\
    \ rather than the MAIL convention of (sometimes)\n      referring to what is here\
    \ called a \"header\" as a \"header field\" or\n      \"field\".\n   Note that\
    \ the separator line must be truly empty, and not just a line\n   containing white\
    \ space.  Further empty lines following it are part of\n   the body, as are empty\
    \ lines at the end of the article.\n      NOTE: Some systems make no distinction\
    \ between empty lines and\n      lines consisting entirely of white space; indeed,\
    \ some systems\n      cannot represent entirely empty lines.  The grammar's requirement\n\
    \      that header continuation lines contain some printable text is\n      meant\
    \ to ensure that the empty/space distinction cannot confuse\n      identification\
    \ of the separator line.\n      NOTE: It is tempting to authorize posting agents\
    \ to strip empty\n      lines at the beginning and end of the body, but such empty\
    \ lines\n      could possibly be part of a preformatted document.\n   Implementors\
    \ are warned that trailing white space, whether alone on\n   the line or not,\
    \ MAY be significant in the body, notably in early\n   versions of the \"uuencode\"\
    \ encoding for binary data.  Trailing white\n   space MUST be preserved unless\
    \ the article is known to have\n   originated within a cooperating subnet that\
    \ avoids using significant\n   trailing white space, and SHOULD be preserved regardless.\
    \  Posters\n   SHOULD avoid using conventions or encodings that make trailing\
    \ white\n   space significant; for encoding of binary data, MIME's \"base64\"\n\
    \   encoding is recommended.  Implementors are warned that ISO C\n   implementations\
    \ are not required to preserve trailing white space,\n   and special precautions\
    \ may be necessary in implementations that do\n   not.\n      NOTE: Unfortunately,\
    \ the signature-delimiter convention (described\n      in Section 4.3.2) does\
    \ use significant trailing white space.  It's\n      too late to fix this; there\
    \ is work underway on defining an\n      organized signature convention as part\
    \ of MIME, which is a\n      preferable solution in the long run.\n   Posters\
    \ are warned that some very old relayer software misbehaves\n   when the first\
    \ non-empty line of an article body begins with white\n   space.\n"
- title: 4.2.  Headers
  contents:
  - '4.2.  Headers

    '
- title: 4.2.1.  Names and Contents
  contents:
  - "4.2.1.  Names and Contents\n   Despite the restrictions on header-name syntax\
    \ imposed by the\n   grammar, relayers and reading agents SHOULD tolerate header\
    \ names\n   containing any ASCII printable character other than colon (\":\",\n\
    \   ASCII 58).\n      NOTE: MAIL header names can contain any ASCII printable\
    \ character\n      (other than colon) in theory, but in practice, arbitrary header\n\
    \      names are known to cause trouble for some news software.  Section\n   \
    \   4.1's restriction to alphanumeric sequences separated by hyphens\n      is\
    \ believed to permit all widely used header names without causing\n      problems\
    \ for any widely used software.  Software is nevertheless\n      encouraged to\
    \ cope correctly with the full range of possibilities,\n      since aberrations\
    \ are known to occur.\n   Relayers MUST disregard headers not described in this\
    \ Draft (that is,\n   with header names not mentioned in this Draft) and pass\
    \ them on\n   unaltered.\n   Posters wishing to convey non-standard information\
    \ in headers SHOULD\n   use header names beginning with \"X-\".  No standard header\
    \ name will\n   ever be of this form.  Reading agents SHOULD ignore \"X-\" headers,\
    \ or\n   at least treat them with great care.\n   The order of headers in an article\
    \ is not significant.  However,\n   posting agents are encouraged to put mandatory\
    \ headers (see\n   Section 5) first, followed by optional headers (see Section\
    \ 6),\n   followed by headers not defined in this Draft.\n      NOTE: While relayers\
    \ and reading agents must be prepared to handle\n      any order, having the significant\
    \ headers (the precise definition\n      of \"significant\" depends on context)\
    \ first can noticeably improve\n      efficiency, especially in memory-limited\
    \ environments where it is\n      difficult to buffer up an arbitrary quantity\
    \ of headers while\n      searching for the few that matter.\n   Header names\
    \ are case-insensitive.  There is a preferred case\n   convention, which posters\
    \ and posting agents SHOULD use: each hyphen-\n   separated \"word\" has its initial\
    \ letter (if any) in uppercase and the\n   rest in lowercase, except that some\
    \ abbreviations have all letters\n   uppercase (e.g., \"Message-ID\" and \"MIME-Version\"\
    ).  The forms used in\n   this Draft are the preferred forms for the headers described\
    \ herein.\n   Relayers and reading agents are warned that articles might not obey\n\
    \   this convention.\n      NOTE: Although software must be prepared for the possibility\
    \ of\n      random use of case in header names (and other case-independent\n \
    \     text), establishing a preferred convention reduces pointless\n      diversity\
    \ and may permit optimized software that looks for the\n      preferred forms\
    \ before resorting to less-efficient case-\n      insensitive searches.\n   In\
    \ general, a header can consist of several lines, with each\n   continuation line\
    \ beginning with white space.  The EOLs preceding\n   continuation lines are ignored\
    \ when processing such a header,\n   effectively combining the start-line and\
    \ the continuations into a\n   single logical line.  The logical line, less the\
    \ header name, colon,\n   and any white space following the colon, is the \"header\
    \ content\".\n"
- title: 4.2.2.  Undesirable Headers
  contents:
  - "4.2.2.  Undesirable Headers\n   A header whose content is empty is said to be\
    \ an empty header.\n   Relayers and reading agents SHOULD NOT consider presence\
    \ or absence\n   of an empty header to alter the semantics of an article (although\n\
    \   syntactic rules, such as requirements that certain header names\n   appear\
    \ at most once in an article, MUST still be satisfied).  Posting\n   agents SHOULD\
    \ delete empty headers from articles before posting them.\n   Headers that merely\
    \ state defaults explicitly (e.g., a Followup-To\n   header with the same content\
    \ as the Newsgroups header, or a MIME\n   Content-Type header with contents \"\
    text/plain; charset=us-ascii\") or\n   state information that reading agents can\
    \ typically determine easily\n   themselves (e.g., the length of the body in octets)\
    \ are redundant,\n   conveying no information whatsoever.  Headers that state\
    \ information\n   that cannot possibly be of use to a significant number of relayers,\n\
    \   reading agents, or readers (e.g., the name of the software package\n   used\
    \ as the posting agent) are useless and pointless.  Posters and\n   posting agents\
    \ SHOULD avoid including redundant or useless headers in\n   articles.\n     \
    \ NOTE: Information that someone, somewhere, might someday find\n      useful\
    \ is best omitted from headers.  (There's quite enough of it\n      in article\
    \ bodies.)  Headers should contain information of known\n      utility only. \
    \ This is not meant to preclude inclusion of\n      information primarily meant\
    \ for news-software debugging, but such\n      information should be included\
    \ only if there is real reason,\n      preferably based on experience, to suspect\
    \ that it may be\n      genuinely useful.  Articles passing through gateways are\
    \ the only\n      obvious case where inclusion of debugging information appears\n\
    \      clearly legitimate.  (See Section 10.1.)\n      NOTE: A useful rule of\
    \ thumb for software implementors is: \"if I\n      had to pay a dollar a day\
    \ for the transmission of this header,\n      would I still think it worthwhile?\"\
    .\n"
- title: 4.2.3.  White Space and Continuations
  contents:
  - "4.2.3.  White Space and Continuations\n   The colon following the header name\
    \ on the start-line MUST be\n   followed by white space, even if the header is\
    \ empty.  If the header\n   is not empty, at least some of the content MUST appear\
    \ on the start-\n   line.  Posting agents MUST enforce these restrictions, but\
    \ relayers\n   (etc.) SHOULD accept even articles that violate them.\n      NOTE:\
    \ MAIL does not require white space after the colon, but it is\n      usual. [RFC1036]\
    \ required the white space, even in empty headers,\n      and some existing software\
    \ demands it.  In MAIL, and arguably in\n      [RFC1036] (although the wording\
    \ is vague), it is technically\n      legitimate for the white space to be part\
    \ of a continuation line\n      rather than the start-line, but not all existing\
    \ software will\n      accept this.  Deleting empty headers and placing some content\
    \ on\n      the start-line avoids this issue; this is desirable because\n    \
    \  trailing blanks, easily deleted by accident, are best not made\n      significant\
    \ in headers.\n   In general, posters and posting agents SHOULD use blank (ASCII\
    \ 32),\n   not tab (ASCII 9), where white space is desired in headers.  Existing\n\
    \   software does not consistently accept tab as synonymous with blank in\n  \
    \ all contexts.  In particular, [RFC1036] appeared to specify that the\n   character\
    \ immediately following the colon after a header name was\n   required to be a\
    \ blank, and some news software insists on that, so\n   this character MUST be\
    \ a blank.  Again, posting agents MUST enforce\n   these restrictions but relayers\
    \ SHOULD be more tolerant.\n   Since the white space beginning a continuation\
    \ line remains a part of\n   the logical line, headers can be \"broken\" into\
    \ multiple lines only at\n   white space.  Posting agents SHOULD NOT break headers\
    \ unnecessarily.\n   Relayers SHOULD preserve existing header breaks, and SHOULD\
    \ NOT\n   introduce new breaks.  Breaking headers SHOULD be a last resort;\n \
    \  relayers and reading agents SHOULD handle long header lines\n   gracefully.\
    \  (See the discussion of size limits in Section 4.6.)\n"
- title: 4.3.  Body
  contents:
  - "4.3.  Body\n   Although the article body is unstructured for most of the purposes\
    \ of\n   this Draft, structure MAY be imposed on it by other means, notably\n\
    \   MIME headers (see Appendix B).\n"
- title: 4.3.1.  Body Format Issues
  contents:
  - "4.3.1.  Body Format Issues\n   The body of an article MAY be empty, although\
    \ posting agents SHOULD\n   consider this an error condition (meriting returning\
    \ the article to\n   the poster for revision).  A posting agent that does not\
    \ reject such\n   an article SHOULD issue a warning message to the poster and\
    \ supply a\n   non-empty body.  Note that the separator line MUST be present even\
    \ if\n   the body is empty.\n      NOTE: An empty body is probably a poster error\
    \ except, arguably,\n      for some control messages, and even they really ought\
    \ to have a\n      body explaining the reason for the control message.  Some old\n\
    \      reading agents are known to generate empty bodies for \"cancel\"\n    \
    \  control messages, so posting agents might opt not to reject\n      bodyless\
    \ articles in such cases (although it would be better to\n      fix the reading\
    \ agents to request a body).  However, some existing\n      news software is known\
    \ to react badly to bodyless articles, hence\n      the request for posting agents\
    \ to insert a body in such cases.\n      NOTE: A possible posting-agent-supplied\
    \ body text (already used by\n      one widespread posting agent) is \"This article\
    \ was probably\n      generated by a buggy news reader\".  (The use of \"reader\"\
    \ to refer\n      to the reading agent is traditional, although this Draft uses\
    \ more\n      precise terminology.)\n      NOTE: The requirement for the separator\
    \ line even in a bodyless\n      article is inherited from MAIL and also distinguishes\
    \ legitimately\n      bodyless articles from articles accidentally truncated in\
    \ the\n      middle of the headers.\n   Note that an article body is a sequence\
    \ of lines terminated by EOLs,\n   not arbitrary binary data, and in particular\
    \ it MUST end with an EOL.\n   However, relayers SHOULD treat the body of an article\
    \ as an\n   uninterpreted sequence of octets (except as mandated by changes of\n\
    \   EOL representation and by control-message processing) and SHOULD\n   avoid\
    \ imposing constraints on it.  See also Section 4.6.\n"
- title: 4.3.2.  Body Conventions
  contents:
  - "4.3.2.  Body Conventions\n   Although body lines can in principle be very long\
    \ (see Section 4.6\n   for some discussion of length limits), posters SHOULD restrict\
    \ body\n   line lengths to circa 70-75 characters.  On systems where text is\n\
    \   conventionally stored with EOLs only at paragraph breaks and other\n   \"\
    hard return\" points, with software breaking lines as appropriate for\n   display\
    \ or manipulation, posting agents SHOULD insert EOLs as\n   necessary so that\
    \ posted articles comply with this restriction.\n      NOTE: News originated in\
    \ environments where line breaks in plain\n      text files were supplied by the\
    \ user, not the software.  Be this\n      good or bad, much reading-agent and\
    \ posting-agent software assumes\n      that news articles follow this convention,\
    \ so it is often\n      inconvenient to read or respond to articles that violate\
    \ it.  The\n      \"70-75\" number comes from the widespread use of display devices\n\
    \      that are 80 columns wide (with the number reduced to provide a bit\n  \
    \    of margin for quoting, see below).\n   Reading agents confronted with body\
    \ lines much longer than the\n   available output-device width SHOULD break lines\
    \ as appropriate.\n   Posters are warned that such breaks may not occur exactly\
    \ where the\n   poster intends.\n      NOTE: \"As appropriate\" would typically\
    \ include breaking lines when\n      supplying the text of an article to be quoted\
    \ in a reply or\n      followup, something that line-breaking reading agents often\n\
    \      neglect to do now.\n   Although styles vary widely, for plain text it is\
    \ usual to use no\n   left margin, leave the right edge ragged, use a single empty\
    \ line to\n   separate paragraphs, and employ normal natural-language usage on\n\
    \   matters such as upper/lowercase.  (In particular, articles SHOULD NOT\n  \
    \ be written entirely in uppercase.  In environments where posters have\n   access\
    \ only to uppercase, posting agents SHOULD translate it to\n   lowercase.)\n \
    \     NOTE: Most people find substantial bodies of text entirely in\n      uppercase\
    \ relatively hard to read, while all-lowercase text merely\n      looks slightly\
    \ odd.  The common association of uppercase with\n      strong emphasis adds to\
    \ this.\n   Tone of voice does not carry well in written text, and\n   misunderstandings\
    \ are common when sarcasm, parody, or exaggeration\n   for humorous effect is\
    \ attempted without explicit warning.  It has\n   become conventional to use the\
    \ sequence \":-)\", which (on most output\n   devices) resembles a rotated \"\
    smiley face\" symbol, as a marker for\n   text not meant to be taken literally,\
    \ especially when humor is\n   intended.  This practice aids communication and\
    \ averts unintended\n   ill-will; posters are urged to use it.  A variety of analogous\n\
    \   sequences are used with less-standardized meanings [Sanderson].\n   The order\
    \ of arrival of news articles at a particular host depends\n   somewhat on transmission\
    \ paths, and occasionally articles are lost\n   for various reasons.  When responding\
    \ to a previous article, posters\n   SHOULD NOT assume that all readers understand\
    \ the exact context.  It\n   is common to quote some of the previous article to\
    \ establish context.\n   This SHOULD be done by prefacing each quoted line (even\
    \ if it is\n   empty) with the character \">\".  This will result in multiple\
    \ levels\n   of \">\" when quoted context itself contains quoted context.\n  \
    \    NOTE: It may seem superfluous to put a prefix on empty lines, but\n     \
    \ it simplifies implementation of functions such as \"skip all quoted\n      text\"\
    \ in reading agents.\n   Readability is enhanced if quoted text and new text are\
    \ separated by\n   an empty line.\n   Posters SHOULD edit quoted context to trim\
    \ it down to the minimum\n   necessary.  However, posting agents SHOULD NOT attempt\
    \ to enforce\n   this by imposing overly simplistic rules like \"no more than\
    \ 50% of\n   the lines should be quotes\".\n      NOTE: While encouraging trimming\
    \ is desirable, the 50% rule\n      imposed by some old posting agents is both\
    \ inadequate and\n      counterproductive.  Posters do not respond to it by being\
    \ more\n      selective about quoting; they respond by padding short responses,\n\
    \      or by using different quoting styles to defeat automatic analysis.\n  \
    \    The former adds unnecessary noise and volume, while the latter\n      also\
    \ defeats more useful forms of automatic analysis that reading\n      agents might\
    \ wish to do.\n      NOTE: At the very least, if a minimum-unquoted quota is being\
    \ set,\n      article bodies shorter than (say) 20 lines, or perhaps articles\n\
    \      that exceed the quota by only a few lines, should be exempt.  This\n  \
    \    avoids the ridiculous situation of complaining about a 5-line\n      response\
    \ to a 6-line quote.\n      NOTE: A more subtle posting-agent rule, suggested\
    \ for experimental\n      use, is to reject articles that appear to contain quoted\n\
    \      signatures (see below).  This is almost certainly the result of a\n   \
    \   careless poster not bothering to trim down quoted context.  Also,\n      if\
    \ a posting agent or followup agent presents an article template\n      to the\
    \ poster for editing, it really should take note of whether\n      the poster\
    \ actually made any changes, and refrain from posting an\n      unmodified template.\n\
    \   Some followup agents supply \"attribution\" lines for quoted context,\n  \
    \ indicating where it first appeared and under whose name.  When\n   multiple\
    \ levels of quoting are present and quoted context is edited\n   for brevity,\
    \ \"inner\" attribution lines are not always retained.  The\n   editing process\
    \ is also somewhat error-prone.  Reading agents (and\n   readers) are warned not\
    \ to assume that attributions are accurate.\n      UNRESOLVED ISSUE: Should a\
    \ standard format for attribution lines\n      be defined?  There is already considerable\
    \ diversity, but\n      automatic news analysis would be substantially aided by\
    \ a standard\n      convention.\n   Early difficulties in inferring return addresses\
    \ from article headers\n   led to \"signatures\": short closing texts, automatically\
    \ added to the\n   end of articles by posting agents, identifying the poster and\
    \ giving\n   his network addresses, etc.  If a poster or posting agent does append\n\
    \   a signature to an article, the signature SHOULD be preceded with a\n   delimiter\
    \ line containing (only) two hyphens (ASCII 45) followed by\n   one blank (ASCII\
    \ 32).  Posting agents SHOULD limit the length of\n   signatures, since verbose\
    \ excess bordering on abuse is common if no\n   restraint is imposed; 4 lines\
    \ is a common limit.\n      NOTE: While signatures are arguably a blemish, they\
    \ are a well-\n      understood convention, and conveying the same information\
    \ in\n      headers exposes it to mangling and makes it rather less\n      conspicuous.\
    \  A standard delimiter line makes it possible for\n      reading agents to handle\
    \ signatures specially if desired.\n      (This is unfortunately hampered by extensive\
    \ misunderstanding of,\n      and misuse of, the delimiter.)\n      NOTE: The\
    \ choice of delimiter is somewhat unfortunate, since it\n      relies on preservation\
    \ of trailing white space, but it is too\n      well-established to change.  There\
    \ is work underway to define a\n      more sophisticated signature scheme as part\
    \ of MIME, and this will\n      presumably supersede the current convention in\
    \ due time.\n      NOTE: Four 75-column lines of signature text is 300 characters,\n\
    \      which is ample to convey name and mail-address information in all\n   \
    \   but the most bizarre situations.\n"
- title: 4.4.  Characters and Character Sets
  contents:
  - "4.4.  Characters and Character Sets\n   Header and body lines MAY contain any\
    \ ASCII characters other than CR\n   (ASCII 13), LF (ASCII 10), and NUL (ASCII\
    \ 0).\n      NOTE: CR and LF are excluded because they clash with common EOL\n\
    \      conventions.  NUL is excluded because it clashes with the C\n      end-of-string\
    \ convention, which is significant to most existing\n      news software.  These\
    \ three characters are unlikely to be\n      transmitted successfully.\n   However,\
    \ posters SHOULD avoid using ASCII control characters except\n   for tab (ASCII\
    \ 9), formfeed (ASCII 12), and backspace (ASCII 8).  Tab\n   signifies sufficient\
    \ horizontal white space to reach the next of a\n   set of fixed positions; posters\
    \ are warned that there is no standard\n   set of positions, so tabs should be\
    \ avoided if precise spacing is\n   essential.  Formfeed signifies a point at\
    \ which a reading agent\n   SHOULD pause and await reader interaction before displaying\
    \ further\n   text.  Backspace SHOULD be used only for underlining, done by a\n\
    \   sequence of underscores (ASCII 95) followed by an equal number of\n   backspaces,\
    \ signifying that the same number of text characters\n   following are to be underlined.\
    \  Posters are warned that underlining\n   is not available on all output devices\
    \ and is best not relied on for\n   essential meaning.  Reading agents SHOULD\
    \ recognize underlining and\n   translate it to the appropriate commands for devices\
    \ that support it.\n      NOTE: Interpretation of almost all control characters\
    \ is device-\n      specific to some degree, and devices differ.  Tabs and underlining\n\
    \      are supported, to some extent, by most modern devices and reading\n   \
    \   agents, hence the cautious exemptions for them.  The underlining\n      method\
    \ is specified because the inverse method, text and then\n      underscores, is\
    \ tempting to the naive; however, if sent unaltered\n      to a device that shows\
    \ only the most recent of several overstruck\n      characters rather than a composite,\
    \ the result can be utterly\n      unreadable.\n      NOTE: A common interpretation\
    \ of tab is that it is a request to\n      space forward to the next position\
    \ whose number is one more than a\n      multiple of 8, with positions numbered\
    \ sequentially starting at 1.\n      (So tab positions are 9, 17, 25, ...)  Reading\
    \ agents not\n      constrained by existing system conventions might wish to use\
    \ this\n      interpretation.\n      NOTE: It will typically be necessary for\
    \ a reading agent to catch\n      and interpret formfeed, not just send it to\
    \ the output device.\n      The actions performed by typical output devices on\
    \ receiving a\n      formfeed are neither adequate for, nor appropriate to, the\
    \ pause-\n      for-interaction meaning.\n   Cooperating subnets that wish to\
    \ employ non-ASCII character sets by\n   using escape sequences (employing, e.g.,\
    \ ESC (ASCII 27), SO\n   (ASCII 14), and SI (ASCII 15)) to alter the meaning of\
    \ superficially\n   ASCII characters MAY do so, but MUST use MIME headers to alert\n\
    \   reading agents to the particular character set(s) and escape\n   sequences\
    \ in use.  A reading agent SHOULD NOT pass such an escape\n   sequence through,\
    \ unaltered, to the output device unless the agent\n   confirms that the sequence\
    \ is one used to affect character sets and\n   has reason to believe that the\
    \ device is capable of interpreting that\n   particular sequence properly.\n \
    \     NOTE: Cooperating-subnet organizers are warned that some very old\n    \
    \  relayers strip certain control characters out of articles they\n      pass\
    \ along.  ESC is known to be among the affected characters.\n      NOTE: There\
    \ are now standard Internet encodings for Japanese\n      [RFC1345] and Vietnamese\
    \ [RFC1456] in particular.\n   Articles MUST NOT contain any octet with value\
    \ exceeding 127, i.e.,\n   any octet that is not an ASCII character.\n      NOTE:\
    \ This rule, like others, may be relaxed by unanimous consent\n      of the members\
    \ of a cooperating subnet, provided suitable\n      precautions are taken to ensure\
    \ that rule-violating articles do\n      not leak out of the subnet.  (This has\
    \ already been done in many\n      areas where ASCII is not adequate for the local\
    \ language(s).)\n      Beware that articles containing non-ASCII octets in headers\
    \ are a\n      violation of the MAIL specifications and are not valid MAIL\n \
    \     messages.  MIME offers a way to encode non-ASCII characters in\n      ASCII\
    \ for use in headers; see Section 4.5.\n      NOTE: While there is great interest\
    \ in using 8-bit character sets,\n      not all software can yet handle them correctly,\
    \ hence the\n      restriction to cooperating subnets.  MIME encodings can be\
    \ used to\n      transmit such characters while remaining within the octet\n \
    \     restriction.\n   In anticipation of the day when it is possible to use non-ASCII\n\
    \   characters safely anywhere, and to provide for the (substantial)\n   cooperating\
    \ subnets that are already using them, transmission paths\n   SHOULD treat news\
    \ articles as uninterpreted sequences of octets\n   (except perhaps for transformations\
    \ between EOL representations) and\n   relayers SHOULD treat non-ASCII characters\
    \ in articles as ordinary\n   characters.\n      NOTE: 8-bit enthusiasts are warned\
    \ that not all software conforms\n      to these recommendations yet.  In particular,\
    \ standard NNTP\n      [RFC977] is a 7-bit protocol {but in [RFC3977] it has been\
    \ upped\n      to 8-bit}, and there may be implementations that enforce this\n\
    \      rule.  Be warned, also, that it will never be safe to send raw\n      binary\
    \ data in the body of news articles, because changes of EOL\n      representation\
    \ may (will!) corrupt it.\n   Except where cooperating subnets permit more direct\
    \ approaches, MIME\n   headers and encodings SHOULD be used to transmit non-ASCII\
    \ content\n   using ASCII characters; see Section 4.5, Appendix B, and the MIME\n\
    \   RFCs for details.  If article content can be expressed in ASCII, it\n   SHOULD\
    \ be.  Failing that, the order of preference for character sets\n   is that described\
    \ in MIME.\n      NOTE: Using the MIME facilities, it is possible to transmit\
    \ ANY\n      character set, and ANY form of binary data, using only ASCII\n  \
    \    characters.  Equally important, such articles are self-describing\n     \
    \ and the reading agent can tell which octet-to-symbol mapping is\n      intended!\
    \  Designation of some preferred character sets is\n      intended to minimize\
    \ the number of character sets that a reading\n      agent must understand in\
    \ order to display most articles properly.\n   Articles containing non-ASCII characters,\
    \ articles using ASCII\n   characters (values 0 through 127) to refer to non-ASCII\
    \ symbols, and\n   articles using escape sequences to shift character sets SHOULD\n\
    \   include MIME headers indicating which character set(s) and\n   conventions\
    \ are being used.  They MUST do so unless such articles are\n   strictly confined\
    \ to a cooperating subnet that has its own pre-agreed\n   conventions.  MIME encodings\
    \ are preferred over all of these\n   techniques.  If it comes to a relayer's\
    \ attention that it is being\n   asked to pass an article using such techniques\
    \ outward across what it\n   knows to be the boundary of such a cooperating subnet,\
    \ it MUST report\n   this error to its administrator and MAY refuse to pass the\
    \ article\n   beyond the subnet boundary.  If it does pass the article, it MUST\n\
    \   re-encode it with MIME encodings to make it conform to this Draft.\n     \
    \ NOTE: Such re-encoding is a non-trivial task, due to MIME rules\n      such\
    \ as the prohibition of nested encodings.  It's not just a\n      matter of pouring\
    \ the body through a simple filter.\n   Reading agents SHOULD note MIME headers\
    \ and attempt to show the\n   reader the closest possible approximation to the\
    \ intended content.\n   They SHOULD NOT just send the octets of the article to\
    \ the output\n   device unaltered, unless there is reason to believe that the\
    \ output\n   device will indeed interpret them correctly.  Reading agents MUST\
    \ NOT\n   pass ASCII control characters or escape sequences, other than as\n \
    \  discussed above, unaltered to the output device; only by chance would\n   the\
    \ result be the desired one, and there is serious potential for\n   harmful side\
    \ effects, either accidental or malicious.\n      NOTE: Exactly what to do with\
    \ unwanted control\n      characters/sequences depends on the philosophy of the\
    \ reading\n      agent, but passing them straight to the output device is almost\n\
    \      always wrong.  If the reading agent wants to mark the presence of\n   \
    \   such a character/sequence in circumstances where only ASCII\n      printable\
    \ characters are available, translating it to \"#\" might be\n      a suitable\
    \ method; \"#\" is a conspicuous character seldom used in\n      normal text.\n\
    \      NOTE: Reading agents should be aware that many old output devices\n   \
    \   (or the transmission paths to them) zero out the top bit of octets\n     \
    \ sent to them.  This can transform non-ASCII characters into ASCII\n      control\
    \ characters.\n   Followup agents MUST be careful to apply appropriate transformations\n\
    \   of representation to the outbound followup as well as the inbound\n   precursor.\
    \  A followup to an article containing non-ASCII material is\n   very likely to\
    \ contain non-ASCII material itself.\n"
- title: 4.5.  Non-ASCII Characters in Headers
  contents:
  - "4.5.  Non-ASCII Characters in Headers\n   All octets found in headers MUST be\
    \ ASCII characters.  However, it is\n   desirable to have a way of encoding non-ASCII\
    \ characters, especially\n   in \"human-readable\" headers such as Subject.  MIME\
    \ provides a way to\n   do this.  Full details may be found in the MIME specifications;\n\
    \   herewith a quick summary to alert software authors to the issues.\n      encoded-word\
    \  = \"=?\" charset \"?\" encoding \"?\" codes \"?=\"\n      charset       = 1*tag-char\n\
    \      encoding      = 1*tag-char\n      tag-char      = < ASCII printable character\
    \ except\n                                !()<>@,;:\\\"[]/?= >\n      codes  \
    \       = 1*code-char\n      code-char     = <ASCII printable character except\
    \ ?>\n   An encoded word is a sequence of ASCII printable characters that\n  \
    \ specifies the character set, encoding method, and bits of\n   (potentially)\
    \ non-ASCII characters.  Encoded words are allowed only\n   in certain positions\
    \ in certain headers.  Specific headers impose\n   restrictions on the content\
    \ of encoded words beyond that specified in\n   this section.  Posting agents\
    \ MUST ensure that any material\n   resembling an encoded word (complete with\
    \ all delimiters), in a\n   context where encoded words may appear, really is\
    \ an encoded word.\n      NOTE: The syntax is a bit ugly, but it was designed\
    \ to minimize\n      chances of confusion with legitimate header contents, and\
    \ to\n      satisfy difficult constraints on use within existing headers.\n  \
    \ An encoded word MUST NOT be more than 75 octets long.  Each line of a\n   header\
    \ containing encoded word(s) MUST be at most 76 octets long, not\n   counting\
    \ the EOL.\n      NOTE: These limits are meant to bound the lookahead needed to\n\
    \      determine whether text that begins with \"=?\" is really an encoded\n \
    \     word.\n   The details of charsets and encodings are defined by MIME; the\n\
    \   sequence of preferred character sets is the same as MIME's.  Encoded\n   words\
    \ SHOULD NOT be used for content expressible in ASCII.\n   When an encoded word\
    \ is used, other than in a newsgroup name (see\n   Section 5.5), it MUST be separated\
    \ from any adjacent non-space\n   characters (including other encoded words) by\
    \ white space.  Reading\n   agents displaying the contents of encoded words (as\
    \ opposed to their\n   encoded form) should ignore white space adjacent to encoded\
    \ words.\n      UNRESOLVED ISSUE: Should this section be deleted entirely, or\
    \ made\n      much more terse?  The material is relevant, but too complex to\n\
    \      discuss fully.\n      NOTE: The deletion of intervening white space permits\
    \ using\n      multiple encoded words, implicitly concatenated by the deletion,\n\
    \      to encode text that will not fit within a single 75-character\n      encoded\
    \ word.\n   Reading-agent implementors are warned that although this Draft\n \
    \  completely specifies where encoded words may appear in the headers it\n   defines,\
    \ there are other headers (e.g., the MIME Content-Description\n   header) that\
    \ MAY contain them.\n"
- title: 4.6.  Size Limits
  contents:
  - "4.6.  Size Limits\n   Implementations SHOULD avoid fixed constraints on the sizes\
    \ of lines\n   within an article and on the size of the entire article.\n   Relayers\
    \ SHOULD treat the body of an article as an uninterpreted\n   sequence of octets\
    \ (except as mandated by changes of EOL\n   representation and processing of control\
    \ messages), not to be altered\n   or constrained in any way.\n   If it is absolutely\
    \ necessary for an implementation to impose a limit\n   on the length of header\
    \ lines, body lines, or header logical lines,\n   that limit shall be at least\
    \ 1000 octets, including EOL\n   representations.  Relayers and transmission paths\
    \ confronted with\n   lines beyond their internal limits (if any) MUST NOT simply\
    \ inject\n   EOLs at random places; they MAY break headers (as described in\n\
    \   Section 4.2.3) as a last resort, and otherwise they MUST either pass\n   the\
    \ long lines through unaltered, or refuse to pass the article at\n   all (see\
    \ Section 9.1 for further discussion).\n      NOTE: The limit here is essentially\
    \ the same minimum as that\n      specified for SMTP mail [RFC821].  Implementors\
    \ are warned that\n      Path (see Section 5.6) and References (see Section 6.5)\
    \ headers,\n      in particular, often become several hundred characters long,\
    \ so\n      1000 is not an overly generous limit.\n   All implementations MUST\
    \ be able to handle an article totalling at\n   least 65,000 octets, including\
    \ headers and EOL representations,\n   gracefully and efficiently.  All implementations\
    \ SHOULD be able to\n   handle an article totalling at least 1,000,000 (one million)\
    \ octets,\n   including headers and EOL representations, gracefully and\n   efficiently.\
    \  \"Gracefully and efficiently\" is intended to preclude\n   not only failures,\
    \ but also major loss of performance, serious\n   problems in error recovery,\
    \ or resource consumption beyond what is\n   reasonably necessary.\n      NOTE:\
    \ The intent here is to prohibit lowering the existing de\n      facto limit any\
    \ further, while strongly encouraging movement\n      towards a higher one.  Actually,\
    \ although improvements are\n      desirable in some cases, much news software\
    \ copes reasonably well\n      with very large articles.  The same cannot be said\
    \ of the\n      communications software and protocols used to transmit news from\n\
    \      one host to another, especially when slow communications links are\n  \
    \    involved.  Occasional huge articles that appear now (by accident\n      or\
    \ through ignorance) typically leave trails of failing software,\n      system\
    \ problems, and irate administrators in their wake.\n      NOTE: It is intended\
    \ that the successor to this Draft will raise\n      the \"MUST\" limit to 1,000,000\
    \ and the \"SHOULD\" limit still\n      further.\n   Posters SHOULD limit posted\
    \ articles to at most 60,000 octets,\n   including headers and EOL representations,\
    \ unless the articles are\n   being posted only within a cooperating subnet that\
    \ is known to be\n   capable of handling larger articles gracefully.  Posting\
    \ agents\n   presented with a large article SHOULD warn the poster and request\n\
    \   confirmation.\n      NOTE: The difference between this and the earlier \"\
    MUST\" limit is\n      due to margin for header growth, differing EOL representations,\n\
    \      and transmission overheads.\n      NOTE: Disagreeable though these limits\
    \ are, it is a fact that in\n      current networks, an article larger than 64K\
    \ (after header growth,\n      etc.) simply is not transmitted reliably.  Note\
    \ also the comments\n      above on the trauma caused by single extremely large\
    \ articles now;\n      the problems are real and current.  These problems arguably\
    \ should\n      be fixed, but this will not happen network-wide in the immediate\n\
    \      future, hence the restriction of larger articles to cooperating\n     \
    \ subnets, for now.\n   Posters using non-ASCII characters in their text MUST\
    \ take into\n   account the overhead involved in MIME encoding, unless the article's\n\
    \   propagation will be entirely limited to a cooperating subnet that\n   does\
    \ not use MIME encodings for non-ASCII characters.  For example,\n   MIME base64\
    \ encoding involves growth by a factor of approximately\n   4/3, so an article\
    \ that would likely have to use this encoding should\n   be at most about 45,000\
    \ octets before encoding.\n   Posters SHOULD use MIME \"message/partial\" conventions\
    \ to facilitate\n   automatic reassembly of a large document split into smaller\
    \ pieces\n   for posting.  It is recommended that the content identifier used\n\
    \   should be a message ID, generated by the same means as article\n   message\
    \ IDs (see Section 5.3), and that all parts should have a\n   See-Also header\
    \ (see Section 6.16) giving the message IDs of at least\n   the previous parts\
    \ and preferably all of the parts.\n      NOTE: See-Also is more correct for this\
    \ purpose than References,\n      although References is in common use today (with\
    \ less-formal\n      reassembly arrangements).  MIME reassemblers should probably\n\
    \      examine articles suggested by References headers if See-Also\n      headers\
    \ are not present to indicate the whereabouts of the other\n      parts of \"\
    message/partial\" articles.\n   To repeat: implementations SHOULD avoid fixed\
    \ constraints on the\n   sizes of lines within an article and on the size of the\
    \ entire\n   article.\n"
- title: 4.7.  Example
  contents:
  - "4.7.  Example\n   Here is a sample article:\n      From: jerry@eagle.ATT.COM\
    \ (Jerry Schwarz)\n      Path: cbosgd!mhuxj!mhuxt!eagle!jerry\n      Newsgroups:\
    \ news.announce\n      Subject: Usenet Etiquette -- Please Read\n      Message-ID:\
    \ <642@eagle.ATT.COM>\n      Date: Mon, 17 Jan 1994 11:14:55 -0500 (EST)\n   \
    \   Followup-To: news.misc\n      Expires: Wed, 19 Jan 1994 00:00:00 -0500\n \
    \     Organization: AT&T Bell Laboratories, Murray Hill\n      body\n      body\n\
    \      body\n"
- title: 5.  Mandatory Headers
  contents:
  - "5.  Mandatory Headers\n   An article MUST have one, and only one, of each of\
    \ the following\n   headers: Date, From, Message-ID, Subject, Newsgroups, Path.\n\
    \      NOTE: MAIL specifies (if read most carefully) that there must be\n    \
    \  exactly one Date header and exactly one From header, but otherwise\n      does\
    \ not restrict multiple appearances of headers.  (Notably, it\n      permits multiple\
    \ Message-ID headers!)  This appears singularly\n      useless, or even harmful,\
    \ in the context of news, and much current\n      news software will not tolerate\
    \ multiple appearances of mandatory\n      headers.\n   Note also that there are\
    \ situations, discussed in the relevant parts\n   of Section 6, where References,\
    \ Sender, or Approved headers are\n   mandatory.\n   In the discussions of the\
    \ individual headers, the content of each is\n   specified using the syntax notation.\
    \  The convention used is that the\n   content of, for example, the Subject header\
    \ is defined as\n   <Subject-content>.\n"
- title: 5.1.  Date
  contents:
  - "5.1.  Date\n   The Date header contains the date and time when the article was\n\
    \   submitted for transmission:\n      Date-content  = [ weekday \",\" space ]\
    \ date space time\n      weekday       = \"Mon\" / \"Tue\" / \"Wed\" / \"Thu\"\
    \n                    / \"Fri\" / \"Sat\" / \"Sun\"\n      date          = day\
    \ space month space year\n      day           = 1*2digit\n      month        \
    \ = \"Jan\" / \"Feb\" / \"Mar\" / \"Apr\" / \"May\" / \"Jun\"\n              \
    \      / \"Jul\" / \"Aug\" / \"Sep\" / \"Oct\" / \"Nov\" / \"Dec\"\n      year\
    \          = 4digit / 2digit\n      time          = hh \":\" mm [ \":\" ss ] space\
    \ timezone\n      timezone      = \"UT\" / \"GMT\"\n                    / ( \"\
    +\" / \"-\" ) hh mm [ space \"(\" zone-name \")\" ]\n      hh            = 2digit\n\
    \      mm            = 2digit\n      ss            = 2digit\n      zone-name \
    \    = 1*( <ASCII printable character except ()\\>\n                    / space\
    \ )\n   This is a restricted subset of the MAIL date format.\n   If a weekday\
    \ is given, it MUST be consistent with the date.  The\n   modern Gregorian calendar\
    \ is used, and dates MUST be consistent with\n   its usual conventions; for example,\
    \ if the month is May, the day must\n   be between 1 and 31 inclusive.  The year\
    \ SHOULD be given as four\n   digits, and posting agents SHOULD enforce this;\
    \ however, relayers\n   MUST accept the two-digit form, and MUST interpret it\
    \ as having the\n   implicit prefix \"19\".\n      NOTE: Two-digit year numbers\
    \ can, should, and must be phased out\n      by 1999.\n   The time is given on\
    \ the 24-hour clock, e.g., two hours before\n   midnight is \"22:00\" or \"22:00:00\"\
    .  The hh must be between 00 and 23\n   inclusive, the mm between 0 and 59 inclusive,\
    \ and the ss between 0\n   and 60 inclusive.\n      NOTE: Leap seconds very occasionally\
    \ result in minutes that are 61\n      seconds long.\n   The date and time SHOULD\
    \ be given in the poster's local time zone,\n   including a specification of that\
    \ time zone as a numeric offset\n   (which SHOULD include the time zone name,\
    \ e.g., \"EST\", supplied in\n   parentheses like a MAIL comment).  If not, they\
    \ MUST be given in\n   Universal Time (abbreviated \"UT\"; \"GMT\" is a historical\
    \ synonym for\n   \"UT\").  The time zone name in parentheses, if present, is\
    \ a comment;\n   software MUST ignore it, except that reading agents might wish\
    \ to\n   display it to the reader.  Time zone names other than \"UT\" and \"GMT\"\
    \n   MUST appear only in the comment.\n      NOTE: Attempts to deal with a full\
    \ set of time zone names have all\n      foundered on the vast number of such\
    \ names in use and the\n      duplications (for example, there are at least FIVE\
    \ different time\n      zones called \"EST\" by somebody).  Even the limited set\
    \ of North\n      American zone names authorized by MAIL is subject to confusion\
    \ and\n      misinterpretation, hence the flat ban on non-UT time zone names,\n\
    \      except as comments.\n      NOTE: [RFC1036] specified that use of GMT (aka\
    \ UT, UTC) was\n      preferred.  However, the local time (in the poster's time\
    \ zone) is\n      arguably information of possible interest to the reader, and\
    \ this\n      requires some indication of the poster's time zone.  Numeric\n \
    \     offsets are an unambiguous way of doing this, and their use was\n      indeed\
    \ sanctioned by [RFC1036] (that is, this is a change of\n      preference only).\n\
    \      NOTE: There is frequent confusion, including errors in some news\n    \
    \  software, regarding the sign of numeric time zones.  Zones west of\n      Greenwich\
    \ have negative offsets.  For example, North American\n      Eastern Standard\
    \ Time is zone -0500 and North American Eastern\n      Daylight Time is zone -0400.\n\
    \      NOTE: Implementors are warned that the hh in a time zone can go up\n  \
    \    to about 14; it is not limited to 12.  This is because the\n      International\
    \ Date Line does not run exactly along the boundary\n      between zone -1200\
    \ and zone +1200.\n      NOTE: The comments in Section 2.6 regarding translation\
    \ to other\n      languages are relevant here.  The Date-content format, and the\n\
    \      spellings of its components, as found in articles themselves, are\n   \
    \   always as defined in this Draft, regardless of the language used\n      to\
    \ interact with readers and posters.  Reading and posting agents\n      should\
    \ translate as appropriate.  Actually, even English-language\n      reading and\
    \ posting agents will probably want to do some degree of\n      translation on\
    \ dates, if only to abbreviate the lengthy format and\n      (perhaps) translate\
    \ to and from the reader's time zone.\n"
- title: 5.2.  From
  contents:
  - "5.2.  From\n   The From header contains the electronic address, and possibly\
    \ the\n   full name, of the article's author:\n      From-content  = address [\
    \ space \"(\" paren-phrase \")\" ]\n                    /  [ plain-phrase space\
    \ ] \"<\" address \">\"\n      paren-phrase  = 1*( paren-char / space / encoded-word\
    \ )\n      paren-char    = <ASCII printable character except ()<>\\>\n      plain-phrase\
    \  = plain-word *( space plain-word )\n      plain-word    = unquoted-word / quoted-word\
    \ / encoded-word\n      unquoted-word = 1*unquoted-char\n      unquoted-char =\
    \ <ASCII printable character except !()<>@,;:\\\".[]>\n      quoted-word   = quote\
    \ 1*( quoted-char / space ) quote\n      quote         = <\" (ASCII 34)>\n   \
    \   quoted-char   = <ASCII printable character except \"()<>\\>\n      address\
    \       = local-part \"@\" domain\n      local-part    = unquoted-word *( \".\"\
    \ unquoted-word )\n      domain        = unquoted-word *( \".\" unquoted-word\
    \ )\n   (Encoded words are described in Section 4.5.)  The full name is\n   distinguished\
    \ from the electronic address either by enclosing the\n   former in parentheses\
    \ (making it resemble a MAIL comment, after the\n   address) or by enclosing the\
    \ latter in angle brackets.  The second\n   form is preferred.  In the first form,\
    \ encoded words inside the full\n   name MUST be composed entirely of <paren-char>s.\
    \  In the second form,\n   encoded words inside the full name may not contain\
    \ characters other\n   than letters (of either case), digits, and the characters\
    \ \"!\", \"*\",\n   \"+\", \"-\", \"/\", \"=\", and \"_\".  The local part is\
    \ case-sensitive\n   (except that all case counterparts of \"postmaster\" are\
    \ deemed\n   equivalent), the domain is case-insensitive, and all other parts\
    \ of\n   the From content are comments that MUST be ignored by news software\n\
    \   (except insofar as reading agents may wish to display them to the\n   reader).\
    \  Posters and posting agents MUST restrict themselves to this\n   subset of the\
    \ MAIL From syntax; relayers MAY accept a broader subset,\n   but see the discussion\
    \ in Section 9.1.\n      NOTE: The syntax here is a restricted subset of the MAIL\
    \ From\n      syntax, with quoting particularly restricted, for simple parsing.\n\
    \      In particular, the presence of \"<\" in the From content indicates\n  \
    \    that the second form is being used; otherwise, the first form is\n      being\
    \ used.  The major restrictions here are those already de\n      facto imposed\
    \ by existing software.\n      NOTE: Overly lenient posting agents sometimes permit\
    \ the second\n      form with a full name containing \"(\" or \")\", but it is\
    \ extremely\n      rare for a full name to contain \"<\" or \">\", even in mail.\n\
    \      Accordingly, reading agents wishing to robustly determine which\n     \
    \ form is in use in a particular article should key on the presence\n      or\
    \ absence of \"<\", not the presence or absence of \"(\".\n   The address SHOULD\
    \ be a valid and complete Internet domain address,\n   capable of being successfully\
    \ mailed to by an Internet host (possibly\n   via an MX (Mail Exchange) record\
    \ and a forwarder).  The pseudo-domain\n   \".uucp\" MAY be used for hosts registered\
    \ in the UUCP maps (e.g., name\n   \"xyz.uucp\" for registered site \"xyz\"),\
    \ but such hosts SHOULD\n   discontinue this usage (either by arranging a proper\
    \ Internet address\n   and forwarder, or by using the \"% hack\" (see below)),\
    \ as soon as\n   possible.  Bitnet hosts SHOULD use Internet addresses, avoiding\
    \ the\n   obsolescent \".bitnet\" pseudo-domain.  Other forms of address MUST\
    \ NOT\n   be used.\n      NOTE: \"Other forms\" specifically include UK-style\
    \ \"backward\"\n      domains (\"uk.oxbridge.cs\" is in the Czech Republic, not\
    \ the UK),\n      pure-UUCP addressing (\"knee!shin!foot\" instead of\n      \"\
    foot%shin@knee.uucp\"), and abbreviated domains (\"zebra.zoo\"\n      instead\
    \ of \"zebra.zoo.toronto.edu\").\n   If it is necessary to use the local part\
    \ to specify a routing\n   relative to the nearest Internet host, this MUST be\
    \ done using the \"%\n   hack\", using \"%\" as a secondary \"@\".  For example,\
    \ to specify that\n   mail to the address should go to Internet host \"foo.bar.edu\"\
    , then to\n   non-Internet host \"ein\", then to non-Internet host \"deux\", for\n\
    \   delivery there to mailbox \"fred\", a suitable address would be:\n      fred%deux%ein@foo.bar.edu\n\
    \   Analogous forms using \"!\" in the local part MUST NOT be used, as they\n\
    \   are ambiguous; they should be expressed in the \"%\" form.\n      NOTE: \"\
    a!b@c\" can be interpreted as either \"b%c@a\" or \"b%a@c\", and\n      there\
    \ is no consistency in which choice is made.  Such addresses\n      consequently\
    \ are unreliable.  The \"%\" form does not suffer from\n      this problem, and\
    \ although its use is officially discouraged, it\n      is a de facto standard,\
    \ to the point that MAIL recognizes it.\n   Relayers MUST NOT, repeat MUST NOT,\
    \ repeat MUST NOT, rewrite From\n   lines, in any way, however minor or seemingly\
    \ innocent.  Trying to\n   \"fix\" a non-conforming address has a very high probability\
    \ of making\n   things worse.  Either pass it along unchanged or reject the article.\n\
    \      NOTE: An additional reason for banning the use of \"!\"  addressing\n \
    \     is that it has a much higher probability of being rewritten into\n     \
    \ mangled unrecognizability by old relayers.\n   Posters and posting agents SHOULD\
    \ avoid use of the characters \"!\" and\n   \"@\" in full names, as they may trigger\
    \ unwanted header rewriting by\n   old, simple-minded news software.\n      NOTE:\
    \ Also, the characters \".\" and \",\", not infrequently found in\n      names\
    \ (e.g., \"John W. Campbell, Jr.\"), are NOT, repeat NOT,\n      allowed in an\
    \ unquoted word.  A From header like the following\n      MUST NOT be written\
    \ without the quotation marks:\n      From: \"John W. Campbell, Jr.\" <editor@analog.com>\n"
- title: 5.3.  Message-ID
  contents:
  - "5.3.  Message-ID\n   The Message-ID header contains the article's message ID,\
    \ a unique\n   identifier distinguishing the article from every other article:\n\
    \      Message-ID-content  = message-id\n      message-id          = \"<\" local-part\
    \ \"@\" domain \">\"\n   As with From addresses, a message ID's local part is\
    \ case-sensitive,\n   and its domain is case-insensitive.  The \"<\" and \">\"\
    \ are parts of the\n   message ID, not peculiarities of the Message-ID header.\n\
    \      NOTE: News message IDs are a restricted subset of MAIL message\n      IDs.\
    \  In particular, no existing news software copes properly with\n      MAIL quoting\
    \ conventions within the local part, so they are\n      forbidden.  This is unfortunate,\
    \ particularly for X.400 gateways\n      that often wish to include characters\
    \ that are not legal in\n      unquoted message IDs, but it is impossible to fix\
    \ net-wide.  See\n      the notes on gatewaying in Section 10.\n   The domain\
    \ in the message ID SHOULD be the full Internet domain name\n   of the posting\
    \ agent's host.  Use of the \".uucp\" pseudo-domain (for\n   hosts registered\
    \ in the UUCP maps) or the \".bitnet\" pseudo-domain\n   (for Bitnet hosts) is\
    \ permissible but SHOULD be avoided.\n   Posters and posting agents MUST generate\
    \ the local part of a message\n   ID using an algorithm that obeys the specified\
    \ syntax (words\n   separated by \".\", with certain characters not permitted)\
    \ (see Section\n   5.2 for details) and will not repeat itself (ever).  The algorithm\n\
    \   SHOULD NOT generate message IDs that differ only in case of letters.\n   Note\
    \ the specification in Section 6.5 of a recommended convention for\n   indicating\
    \ subject changes.  Otherwise, the algorithm is up to the\n   implementor.\n \
    \     NOTE: The crucial use of message IDs is to distinguish circulating\n   \
    \   articles from each other and from articles circulated recently.\n      They\
    \ are also potentially useful as permanent indexing keys, hence\n      the requirement\
    \ for permanent uniqueness, but indexers cannot\n      absolutely rely on this\
    \ because the earlier RFCs urged it but did\n      not demand it.  All major implementations\
    \ have always generated\n      permanently unique message IDs by design, but in\
    \ some cases this\n      is sensitive to proper administration, and duplicates\
    \ may have\n      occurred by accident.\n      NOTE: The most popular method of\
    \ generating local parts is to use\n      the date and time, plus some way of\
    \ distinguishing between\n      simultaneous postings on the same host (e.g.,\
    \ a process number),\n      and encode them in a suitably restricted alphabet.\
    \  An older but\n      now less-popular alternative is to use a sequence number,\n\
    \      incremented each time the host generates a new message ID; this is\n  \
    \    workable but requires careful design to cope properly with\n      simultaneous\
    \ posting attempts, and it is not as robust in the\n      presence of crashes\
    \ and other malfunctions.\n      NOTE: Some buggy news software considers message\
    \ IDs completely\n      case-insensitive, hence the advice to avoid relying on\
    \ case\n      distinctions.  The restrictions placed on the \"alphabet\" of local\n\
    \      parts and domains in Section 5.2 have the useful side effect of\n     \
    \ making it unnecessary to parse message IDs in complex ways to\n      break them\
    \ into case-sensitive and case-insensitive portions.\n   The local part of a message\
    \ ID MUST NOT be \"postmaster\" or any other\n   string that would compare equal\
    \ to \"postmaster\" in a case-insensitive\n   comparison.  Message IDs MUST be\
    \ no longer than 250 octets, including\n   the \"<\" and \">\".\n      NOTE: \"\
    Postmaster\" is an irksome exception to case-sensitivity in\n      local parts,\
    \ inherited from MAIL, and simply avoiding it is the\n      best way to deal with\
    \ it (not that it's likely, but the issue\n      needs to be dealt with).  The\
    \ length limit is undesirable but is\n      present in widely used existing software.\
    \  The limit is actually\n      255, but a small safety margin is wise.\n"
- title: 5.4.  Subject
  contents:
  - "5.4.  Subject\n   The Subject header's content (the \"subject\" of the article)\
    \ is a\n   short phrase describing the topic of the article:\n      Subject-content\
    \  = [ \"Re: \" ] nonblank-text\n   Encoded words MAY appear in this header.\n\
    \   If the article is a followup, the subject SHOULD begin with \"Re: \" (a\n\
    \   \"back reference\").  If the article is not a followup, the subject\n   MUST\
    \ NOT begin with a back reference.  Back references are case-\n   insensitive,\
    \ although \"Re: \" is the preferred form.  A followup agent\n   assisting a poster\
    \ in preparing a followup SHOULD prepend a back\n   reference, UNLESS the subject\
    \ already begins with one.  If the poster\n   determines that the topic of the\
    \ followup differs significantly from\n   what is described in the subject, a\
    \ new, more descriptive subject\n   SHOULD be substituted (with no back reference).\
    \  An article whose\n   subject begins with a back reference MUST have a References\
    \ header\n   referencing the precursor.\n      NOTE: A back reference is FOUR\
    \ characters, the fourth being a\n      blank. [RFC1036] was confused about this.\
    \  Observe also that only\n      ONE back reference should be present.\n     \
    \ NOTE: There is a semi-standard convention, often used, in which a\n      subject\
    \ change is flagged by making the new Subject-content of the\n      form:\n  \
    \    new topic (was: old topic)\n      possibly with \"old topic\" somewhat truncated.\
    \  Posters wishing to\n      do something like this are urged to use this exact\
    \ form, to\n      simplify automated analysis.\n   For historical reasons, the\
    \ subject MUST NOT begin with \"cmsg \" (note\n   that this sequence ends with\
    \ a blank).\n      NOTE: Some old news software takes a subject beginning with\n\
    \      \"cmsg \" as an indication that the article is a control message\n    \
    \  (see Sections 6.6 and 7).  This mechanism is obsolete and\n      undesirable,\
    \ but accidental triggering of it is still possible.\n   The subject SHOULD be\
    \ terse.  Posters SHOULD avoid trying to cram\n   their entire article into the\
    \ headers; even the simplest query\n   usually benefits from a sentence or two\
    \ of elaboration and context,\n   and the details of header display vary widely\
    \ among reading agents.\n      NOTE: All-in-the-subject articles are sometimes\
    \ the result of\n      misunderstandings over the interaction protocol of a posting\n\
    \      agent.  Posting agents might wish to give special attention to the\n  \
    \    possibility that a poster specifying a very long subject might\n      have\
    \ thought he was typing the body of the article.\n"
- title: 5.5.  Newsgroups
  contents:
  - "5.5.  Newsgroups\n   The Newsgroups header's content specifies to which newsgroup(s)\
    \ the\n   article is posted:\n      Newsgroups-content  = newsgroup-name *( ng-delim\
    \ newsgroup-name )\n      newsgroup-name      = plain-component *( \".\" component\
    \ )\n      component           = plain-component / encoded-word\n      plain-component\
    \     = component-start *13component-rest\n      component-start     = lowercase\
    \ / digit\n      lowercase           = <letter a-z>\n      component-rest    \
    \  = component-start / \"+\" / \"-\" / \"_\"\n      ng-delim            = \",\"\
    \n   Encoded words used in newsgroup names MUST NOT contain characters\n   other\
    \ than letters, digits, \"+\", \"-\", \"/\", \"_\", \"=\", and \"?\"\n   (although\
    \ they may encode them).\n   A newsgroup name consists of one or more components,\
    \ which may be\n   plain components or (except for the first) encoded words. \
    \ A plain\n   component MUST contain at least one letter, MUST begin with a letter\n\
    \   or digit, and MUST NOT be longer than 14 characters.  The first\n   component\
    \ MUST begin with a letter; subsequent components SHOULD\n   begin with a letter.\
    \  Newsgroup names MUST NOT contain uppercase\n   letters, except where required\
    \ by encodings in encoded words.  The\n   sequences \"all\" and \"ctl\" MUST NOT\
    \ be used as components.\n      NOTE: The alphabet and syntax specified encompasses\
    \ all existing\n      names of widespread newsgroups, while avoiding various forms\
    \ that\n      are known to cause problems.  Important existing software uses\n\
    \      various non-alphanumeric characters as punctuation adjacent to\n      newsgroup\
    \ names.  (It would, in fact, be preferable to ban \"+\"\n      from newsgroup\
    \ names, were it not that several widespread\n      newsgroups related to the\
    \ C++ programming language already use\n      it.)\n      NOTE: Much existing\
    \ software converts the newsgroup name into a\n      directory path and stores\
    \ the articles themselves using numeric\n      filenames, so all-digit name components\
    \ can be troublesome; the\n      \"Great Renaming\" early in the history of Usenet\
    \ included revisions\n      of several newsgroup names to eliminate such components.\n\
    \      NOTE: The same storage technique is the reason for the\n      14-character\
    \ limit.  The limit is now largely historical, since\n      most modern systems\
    \ have much larger limits on the length of a\n      directory entry's name, but\
    \ many old systems are still in use.\n      Systems with shorter limits also exist,\
    \ but news software on such\n      systems has had to deal with the problem already,\
    \ since there are\n      several widespread newsgroups with 14-character components\
    \ in\n      their names.  Implementors are warned that it is intended that the\n\
    \      successor to this Draft will increase the 14-character limit, and\n   \
    \   they are urged to fix their software to handle longer names\n      gracefully\
    \ (if such fixes are necessary, given the intended domain\n      of application\
    \ of the particular software).\n      NOTE: The requirement that the first character\
    \ of a name be a\n      letter accommodates existing software that assumes it\
    \ can tell the\n      difference between a newsgroup name and other possible syntactic\n\
    \      entities by inspecting the first character.  Similar\n      considerations\
    \ motivate excluding \"+\", \"-\", and \"_\" from coming\n      first in a component,\
    \ and the preference for components that do\n      not begin with digits.  The\
    \ \"all\" sequence is used as a wildcard\n      symbol in much existing software,\
    \ and the \"ctl\" sequence was\n      involved in an obsolete historical mechanism\
    \ for marking control\n      messages, so they are best avoided.\n      NOTE:\
    \ Possibly newsgroup names should have been case-insensitive,\n      but all existing\
    \ software treats them as case-sensitive.\n      ([RFC977] claims that they are\
    \ case-insensitive in NNTP, but\n      existing implementations are believed to\
    \ ignore this.)  The\n      simplest solution is just to ban use of uppercase\
    \ letters, since\n      no widespread newsgroup name uses them anyway; this avoids\
    \ any\n      possibility of confusion.\n      NOTE: The syntax has the disadvantage\
    \ of containing no white\n      space, making it impossible to continue a Newsgroups\
    \ header across\n      several lines.  Implementors of relayers and reading agents\
    \ are\n      warned that it is intended that the successor to this Draft will\n\
    \      change the definition of ng-delim to:\n      ng-delim = \",\" [ space ]\n\
    \      and are urged to fix their software to handle (i.e., ignore) white\n  \
    \    space following the commas.  Meanwhile, posters must avoid\n      inserting\
    \ such space (despite the natural-language convention that\n      permits it),\
    \ and posting agents should strip it out.\n      NOTE: Encoded words as components\
    \ are somewhat problematic but are\n      clearly desirable for use in non-English-speaking\
    \ nations.  They\n      are not subject to the 14-character limit, and this (plus\
    \ the\n      possibility of \"/\" within them) may require special handling in\n\
    \      news software.\n   Encoded words are allowed in newsgroup names ONLY where\
    \ non-ASCII\n   characters are necessary to the name, and they must use the \"\
    b\"\n   encoding [RFC2045] and the first suitable character set in the MIME\n\
    \   order of preferred character sets [RFC2047] {ASCII before ISO-8859-*\n   before\
    \ anything else}.\n      NOTE: Since the newsgroup name is the encoded form, NOT\
    \ the\n      underlying non-ASCII form, there is room for terrible confusion\n\
    \      here if the choice of encoding for a particular name is not fully\n   \
    \   standardized.\n   Posters SHOULD use only the names of existing newsgroups\
    \ in the\n   Newsgroups header, because newsgroups are NOT created simply by being\n\
    \   posted to.  However, it is legitimate to cross-post to newsgroup(s)\n   that\
    \ do not exist on the posting agent's host, provided that at least\n   one of\
    \ the newsgroups DOES exist there, and followup agents MUST\n   accept this (posting\
    \ agents MAY accept it, but SHOULD at least alert\n   the poster to the situation\
    \ and request confirmation).  Relayers MUST\n   NOT rewrite Newsgroups headers\
    \ in any way, even if some or all of the\n   newsgroups do not exist on the relayer's\
    \ host.\n      NOTE: Early experience with news software that created newsgroups\n\
    \      when they were mentioned in a Newsgroups header was thoroughly\n      negative:\
    \ posters frequently mistype newsgroup names.\n      NOTE: While it is legitimate\
    \ for some of an article's newsgroups\n      not to exist on the host where it\
    \ is posted, this IS a rather\n      unusual situation except in followups (which\
    \ should go to all\n      newsgroups the precursor was posted to, even if not\
    \ all of them\n      reach the site where the followup is being posted).\n   \
    \   NOTE: Rewriting Newsgroups headers to strip locally unknown\n      newsgroups\
    \ is superficially attractive.  However, early experience\n      with exactly\
    \ that policy was thoroughly negative: news propagation\n      is more redundant\
    \ and much less orderly than many people imagine,\n      and in particular it\
    \ is not unheard of for the (sometimes) fastest\n      path between two (say)\
    \ University of Toronto sites to pass outside\n      the University of Toronto,\
    \ in which case newsgroup stripping can\n      cause incomplete propagation. \
    \ Having an article's set of\n      newsgroups change as it propagates can also\
    \ result in followups\n      not achieving the same propagation as the original.\
    \  It's been\n      tried; it's more trouble than it's worth; don't do it.\n \
    \     NOTE: In particular, newsgroup stripping superficially looks like\n    \
    \  a solution to the problem of duplicate regional newsgroup names.\n      For\
    \ example, both the University of Toronto and the University of\n      Texas have\
    \ \"ut.general\" newsgroups, and material cross-posted to\n      that name and\
    \ a global newsgroup appears in both universities'\n      local newsgroups.  However,\
    \ the side effects of stripping are\n      sufficiently unacceptable to disqualify\
    \ it for this purpose.\n      Don't do it.\n   Cross-posting an article to several\
    \ relevant newsgroups is far\n   superior to posting separate articles with duplicated\
    \ content to each\n   newsgroup, because reading agents can detect the situation\
    \ and show\n   the article to a reader only once.  Posters SHOULD cross-post rather\n\
    \   than duplicate-post.\n      NOTE: On the other hand, cross-posting to a large\
    \ number of\n      newsgroups usually indicates that the poster has not thought\
    \ about\n      his audience; articles are rarely pertinent to more than (say)\n\
    \      half a dozen newsgroups.  Posting agents might wish to request\n      confirmation\
    \ when the number of newsgroups exceeds (say) five in\n      the presence of a\
    \ Followup-To header, or (say) two in the absence\n      of such a header.\n \
    \     NOTE: One problem with cross-postings is what to do with an\n      article\
    \ cross-posted to a set of newsgroups including both\n      moderated and unmoderated\
    \ ones.  Posters tend to expect such an\n      article to show up immediately\
    \ in the unmoderated newsgroups,\n      especially if they do not realize that\
    \ one or more of the\n      newsgroups is moderated.  However, since it is not\
    \ possible for a\n      moderator to retroactively add an already-posted article\
    \ to a\n      moderated newsgroup, the only correct action is to mail such an\n\
    \      article to one (and only one) of the moderators for action.  It is\n  \
    \    probably best for the posting agent to detect this situation and\n      ask\
    \ the poster what action is preferred.  The acceptable choices\n      are to alter\
    \ the newsgroup list or to mail to a moderator of the\n      poster's choice;\
    \ the posting agent should NOT offer duplicate-\n      posting as an easy-to-request\
    \ option (if only because many\n      moderators will reject a submission that\
    \ has already been posted\n      to unmoderated newsgroups).\n      NOTE: An article\
    \ cross-posted to multiple moderated newsgroups\n      really should have approval\
    \ from all of the moderators involved.\n      In practice, the only straightforward\
    \ way to do this is to send\n      the article to one of them and have him consult\
    \ the others.\n   A newsgroup SHOULD NOT appear more than once in the Newsgroups\n\
    \   header.\n   Newsgroup names having only one component are reserved for newsgroups\n\
    \   whose propagation is restricted to a single host (or the\n   administrative\
    \ equivalent).  It is inadvisable to name a newsgroup\n   \"poster\" because that\
    \ word has special meaning in the Followup-To\n   header (see Section 6.1).  The\
    \ names \"control\" and \"junk\" are\n   frequently used for pseudo-newsgroups\
    \ internal to relayer\n   implementations, and hence are also best avoided.\n\
    \      NOTE: Beware of the duplicate-regional-newsgroup-names problem\n      mentioned\
    \ above.  In particular, there are many, many hosts with a\n      newsgroup named\
    \ \"general\", and some surprising things show up in\n      such newsgroups when\
    \ people cross-post.  It is probably better to\n      use multi-component names,\
    \ which are less likely to be duplicated.\n      Fred's Widget House should use\
    \ \"fwh.general\" rather than just\n      \"general\" as its in-house general-topics\
    \ newsgroup.\n   It is conventional to reserve newsgroup names beginning with\
    \ \"to.\"\n   for test messages sent on an essentially point-to-point basis (see\n\
    \   also the ihave/sendme protocol described in Section 7.2); newsgroup\n   names\
    \ beginning with \"to.\" SHOULD NOT be used for any other purpose.\n   The second\
    \ (and possibly later) components of such a name should,\n   together, comprise\
    \ the relayer name (see Section 5.6) of a relayer.\n   The newsgroup exists only\
    \ at the named relayer and its neighbors.\n   The neighbors all pass that newsgroup\
    \ to the named relayer, while the\n   named relayer does not pass it to anyone.\n\
    \   The order of newsgroup names in the Newsgroups header is not\n   significant.\n"
- title: 5.6.  Path
  contents:
  - "5.6.  Path\n   The Path header's content indicates which relayers the article\
    \ has\n   already visited, so that unnecessary redundant transmission can be\n\
    \   avoided:\n      Path-content    = [ path-list path-delimiter ] local-part\n\
    \      path-list       = relayer-name *( path-delimiter relayer-name )\n     \
    \ relayer-name    = 1*rn-char\n      rn-char         = letter / digit / \".\"\
    \ / \"-\" / \"_\"\n      path-delimiter  = \"!\"\n   The Path content is a list\
    \ of relayer names, separated by path\n   delimiters, followed (after a final\
    \ delimiter) by the local part of a\n   mailing address.  Each relayer MUST prepend\
    \ its name, and a\n   delimiter, to the Path content in all articles it processes.\
    \  A\n   relayer MUST NOT pass an article to a neighboring relayer whose name\n\
    \   is already mentioned in an article's path list, unless this is\n   explicitly\
    \ requested by the neighbor in some way.  The Path content\n   is case-sensitive.\n\
    \      NOTE: The Path header supplied by a posting agent should normally\n   \
    \   contain only the local part.  The relayer that the posting agent\n      passes\
    \ the article to for posting will prepend its relayer name to\n      get the path\
    \ list started.\n      NOTE: Observe that the trailing local part is NOT part\
    \ of the path\n      list.  This Path header:\n         Path: fee!fie!foe!fum\n\
    \      contains three relayer names: \"fee\", \"fie\", and \"foe\".  A relayer\n\
    \      named \"fum\" is still eligible to be sent this article.\n      NOTE: This\
    \ syntax has the disadvantage of containing no white\n      space, making it impossible\
    \ to continue a Path header across\n      several lines.  Implementors of relayers\
    \ and reading agents are\n      warned that it is intended that the successor\
    \ to this Draft will\n      change the definition of path delimiter to:\n    \
    \     path-delimiter = \"!\" [ space ]\n      and are urged to fix their software\
    \ to handle (i.e., ignore) white\n      space following the exclamation points.\
    \  They are urged to hurry;\n      some ill-behaved systems reportedly already\
    \ feel free to add such\n      white space.\n      NOTE: [RFC1036] allows considerably\
    \ more flexibility in choice of\n      delimiter, in theory, but this flexibility\
    \ has never been used,\n      and most news software does not implement it properly.\
    \  The\n      grammar reflects the current reality.  Note, in particular, that\n\
    \      [RFC1036] treats \"_\" as a delimiter, but in fact it is known to\n   \
    \   appear in relayer names occasionally.\n   Because an article will not propagate\
    \ to a relayer already mentioned\n   in its path list, the path list MUST NOT\
    \ contain any names other than\n   those of relayers the article has passed through\
    \ AS NEWS.  This is\n   trivially obvious for normal news articles but requires\
    \ attention\n   from the moderators of moderated newsgroups and the implementors\
    \ and\n   maintainers of gateways.\n      NOTE: For the same reason, a relayer\
    \ and its neighbors need to\n      agree on the choice of relayer name, and names\
    \ should not be\n      changed without notifying neighbors.\n   Relayer names\
    \ need to be unique among all relayers that will ever see\n   the articles using\
    \ them.  A relayer name is normally either an\n   \"official\" name for the host\
    \ the relayer runs on, or some other\n   \"official\" name controlled by the same\
    \ organization.  Except in\n   cooperating subnets that agree to some other convention\
    \ and don't let\n   articles using it escape beyond the subnet, a relayer name\
    \ MUST be\n   either a UUCP name registered in the UUCP maps (without any domain\n\
    \   suffix such as \".UUCP\") or a complete Internet domain name.  Use of a\n\
    \   (registered) UUCP name is recommended, where practical, to keep the\n   length\
    \ of the path list down.\n   The use of Internet domain names in the path list\
    \ presents one\n   problem: domain names are case-insensitive, but the path list\
    \ is\n   case-sensitive.  Relayers using domain names as their relayer names\n\
    \   MUST pick a standard form for the name and use that form consistently\n  \
    \ to the exclusion of all others.  The preferred form for this purpose,\n   which\
    \ relayers SHOULD use, is the all-lowercase form.\n      NOTE: It is arguably\
    \ unfortunate that the path list is case-\n      sensitive, but it is much too\
    \ late to change this.  Most Internet\n      sites do, in any event, use one standardized\
    \ form of their name\n      almost everywhere.\n   In the ordinary case, where\
    \ the poster is the author of the article,\n   the local part following the path\
    \ list SHOULD be the local part of\n   the poster's full Internet domain mailing\
    \ address.\n      NOTE: It should be just the local part, not the full address.\
    \  The\n      character \"@\" does not appear in a Path header.\n   The Path content\
    \ somewhat resembles a mailing address, particularly\n   in the UUCP world with\
    \ its manual routing and \"!\" address syntax.\n   Historically, this resemblance\
    \ was important, and the Path content\n   was often used as a reply address. \
    \ This practice has always been\n   somewhat unreliable, since news paths are\
    \ not always mail paths and\n   news relayer names are not always recognized by\
    \ mail handlers, and\n   its reliability has generally worsened in recent times.\
    \  The\n   widespread use of and recognition of Internet domain addresses, even\n\
    \   outside the actual Internet, has largely eliminated the problem.\n   Readers\
    \ SHOULD NOT use the Path content as a reply address.  On the\n   other hand,\
    \ relayer administrators are urged not to break this usage\n   without good reason;\
    \ where practical, paths followed by news SHOULD\n   be traversable by mail, and\
    \ mail handlers SHOULD recognize relayer\n   names as host names.\n   It will\
    \ typically be difficult or impractical for gateways and\n   moderators to supply\
    \ a Path content that is useful as a reply address\n   for the author, bearing\
    \ in mind that the path list they supply will\n   normally be empty.  (To reiterate:\
    \ the path list MUST NOT contain any\n   names other than those of relayers the\
    \ article has passed through AS\n   NEWS.)  They SHOULD supply a local part that\
    \ will result in replies\n   to a Path-derived address being returned to the sender\
    \ with a brief\n   explanation.  Software permitting, the local part \"not-for-mail\"\
    \ is\n   recommended.\n      NOTE: A moderator or gateway administrator who supplies\
    \ a local\n      part that delivers such mail to an administrative mailbox will\n\
    \      quickly discover why it should be bounced automatically!  It is\n     \
    \ best, however, for the returned message to include an explanation\n      of\
    \ what has probably happened, rather than just a mysterious\n      \"undeliverable\
    \ mail\" complaint, since the sender may not be aware\n      that his/her software\
    \ is unwisely using the Path content as a\n      reply address.  Reply software\
    \ might wish to question attempts to\n      reply to a Path-derived address ending\
    \ in \"not-for-mail\" (which is\n      why a specific name is being recommended\
    \ here).\n"
- title: 6.  Optional Headers
  contents:
  - "6.  Optional Headers\n   Many MAIL headers, and many of those specified in present\
    \ and future\n   MAIL extensions, are potentially applicable to news.  Headers\n\
    \   specific to MAIL's point-to-point transmission paradigm, e.g., To and\n  \
    \ Cc, SHOULD NOT appear in news articles.  (Gateways wishing to\n   preserve such\
    \ information for debugging probably SHOULD hide it under\n   different names;\
    \ prefixing \"X-\" to the original headers, resulting in\n   forms like \"X-To\"\
    , is suggested.)\n   The following optional headers are either specific to news\
    \ or of\n   particular note in news articles; an article MAY contain some or all\n\
    \   of them.  (Note that there are some circumstances in which some of\n   them\
    \ are mandatory; these are explained under the individual\n   headers.)  An article\
    \ MUST NOT contain two or more headers with any\n   one of these header names.\n\
    \      NOTE: The ban on duplicate header names does not apply to headers\n   \
    \   not specified in this Draft, such as \"X-\" headers.  Software\n      should\
    \ not assume that all header names in a given article are\n      unique.\n"
- title: 6.1.  Followup-To
  contents:
  - "6.1.  Followup-To\n   The Followup-To header contents specify to which newsgroup(s)\n\
    \   followups should be posted:\n      Followup-To-content = Newsgroups-content\
    \ / \"poster\"\n   The syntax is the same as that of the Newsgroups content, with\
    \ the\n   exception that the magic word \"poster\" means that followups should\
    \ be\n   mailed to the article's reply address rather than posted.  In the\n \
    \  absence of Followup-To, the default newsgroup(s) for a followup are\n   those\
    \ in the Newsgroups header.\n      NOTE: The way to request that followups be\
    \ mailed to a specific\n      address other than that in the From line is to supply\n\
    \      \"Followup-To: poster\" and a Reply-To header.  Putting a mailing\n   \
    \   address in the Followup-To line is incorrect; posting agents\n      should\
    \ reject or rewrite such headers.\n      NOTE: There is no syntax for \"no followups\
    \ allowed\" because\n      \"Followup-To: poster\" accomplishes this effect without\
    \ extra\n      machinery.\n   Although it is generally desirable to limit followups\
    \ to the smallest\n   reasonable set of newsgroups, especially when the precursor\
    \ was\n   cross-posted widely, posting agents SHOULD NOT supply a Followup-To\n\
    \   header except at the poster's explicit request.\n      NOTE: In particular,\
    \ it is incorrect for the posting agent to\n      assume that followups to a cross-posted\
    \ article should be directed\n      to the first newsgroup only.  Trimming the\
    \ list of newsgroups\n      should be the poster's decision, not the posting agent's.\n\
    \      However, when an article is to be cross-posted to a considerable\n    \
    \  number of newsgroups, a posting agent might wish to SUGGEST to the\n      poster\
    \ that followups go to a shorter list.\n"
- title: 6.2.  Expires
  contents:
  - "6.2.  Expires\n   The Expires header content specifies a date and time when the\
    \ article\n   is deemed to be no longer useful and should be removed (\"expired\"\
    ):\n      Expires-content = Date-content\n   The content syntax is the same as\
    \ that of the Date content.  In the\n   absence of Expires, the default is decided\
    \ by the administrators of\n   each host the article reaches, who MAY also restrict\
    \ the extent to\n   which the Expires header is honored.\n   The Expires header\
    \ has two main applications: removing articles whose\n   utility ends on a specific\
    \ date (e.g., event announcements that can\n   be removed once the day of the\
    \ event has passed) and preserving\n   articles expected to be of prolonged usefulness\
    \ (e.g., information\n   aimed at new readers of a newsgroup).  The latter application\
    \ is\n   sometimes abused.  Since individual hosts have local policies for\n \
    \  expiration of news (depending on available disk space, for instance),\n   posters\
    \ SHOULD NOT provide Expires headers for articles unless there\n   is a natural\
    \ expiration date associated with the topic.  Posting\n   agents MUST NOT provide\
    \ a default Expires header.  Leave it out and\n   allow local policies to be used\
    \ unless there is a good reason not to.\n   Expiry dates are properly the decision\
    \ of individual host\n   administrators; posters and moderators SHOULD set only\
    \ expiry dates\n   with which most administrators would agree.\n      NOTE: A\
    \ poster preparing an Expires header for an article whose\n      utility ends\
    \ on a specific day should typically specify the NEXT\n      day as the expiry\
    \ date.  A meeting on July 7th remains of interest\n      on the 7th.\n"
- title: 6.3.  Reply-To
  contents:
  - "6.3.  Reply-To\n   The Reply-To header content specifies a reply address different\
    \ from\n   the author's address given in the From header:\n      Reply-To-content\
    \ = From-content\n   In the absence of Reply-To, the reply address is the address\
    \ in the\n   From header.\n   Use of a Reply-To header is preferable to including\
    \ a similar request\n   in the article body, because reply-preparation software\
    \ can take\n   account of Reply-To automatically.\n"
- title: 6.4.  Sender
  contents:
  - "6.4.  Sender\n   The Sender header identifies the poster, in the event that this\n\
    \   differs from the author identified in the From header:\n      Sender-content\
    \ = From-content\n   In the absence of Sender, the default poster is the author\
    \ (named in\n   the From header).\n      NOTE: The intent is that the Sender header\
    \ have a fairly high\n      probability of identifying the person who really posted\
    \ the\n      article.  The ability to specify a From header naming someone\n \
    \     other than the poster is useful but can be abused.\n   If the poster supplies\
    \ a From header, the posting agent MUST ensure\n   that a Sender header is present,\
    \ unless it can verify that the\n   mailing address in the From header is a valid\
    \ mailing address for the\n   poster.  A poster-supplied Sender header MAY be\
    \ used, if its mailing\n   address is verifiably a valid mailing address for the\
    \ poster;\n   otherwise, the posting agent MUST supply a Sender header and delete\n\
    \   (or rename, for example, to X-Unverifiable-Sender) any poster-\n   supplied\
    \ Sender header.\n      NOTE: It might be useful to preserve a poster-supplied\
    \ Sender\n      header so that the poster can supply the full-name part of the\n\
    \      content.  The mailing address, however, must be right, hence, the\n   \
    \   posting agent must generate the Sender header if it is unable to\n      verify\
    \ the mailing address of a poster-supplied one.\n      NOTE: NNTP implementors,\
    \ in particular, are urged to note this\n      requirement (which would eliminate\
    \ the need for ad hoc headers\n      like NNTP-Posting-Host), although there are\
    \ admittedly some\n      implementation difficulties.  A user name from an [RFC1413]\
    \ server\n      and a host name from an inverse mapping of the address, perhaps\n\
    \      with a \"full name\" comment noting the origin of the information,\n  \
    \    would be at least a first approximation:\n      Sender: fred@zoo.toronto.edu\
    \ (RFC-1413@reverse-lookup;\n                                    not verified)\n\
    \   While this does not completely meet the specs, it comes a lot closer\n   than\
    \ not having a Sender header at all.  Even just supplying a\n   placeholder for\
    \ the user name:\n      Sender: somebody@zoo.toronto.edu (user name unknown)\n\
    \   would be better than nothing.\n"
- title: 6.5.  References
  contents:
  - "6.5.  References\n   The References header content lists message IDs of precursors:\n\
    \      References-content = message-id *( space message-id )\n   A followup MUST\
    \ have a References header, and an article that is not\n   a followup MUST NOT\
    \ have a References header.  The References-content\n   of a followup MUST be\
    \ the precursor's References-content (if any)\n   followed by the precursor's\
    \ message ID.\n      NOTE: Use the See-Also header (Section 6.16) for interconnection\n\
    \      of articles that are not in a followup relationship to each other.\n  \
    \    NOTE: In retrospect, RFCs 850 and 1036, and the implementations\n      whose\
    \ practice they represented, erred here.  The proper MAIL\n      header to use\
    \ for references to precursors is In-Reply-To, and the\n      References header\
    \ is meant to be used for the purposes here\n      ascribed to See-Also.  This\
    \ incompatibility is far too solidly\n      established to be fixed, unfortunately.\
    \  The best that can be done\n      is to provide a clear mapping between the\
    \ two and urge gateways to\n      do the transformation.  The news usage is (now)\
    \ a deliberate\n      violation of the MAIL specifications; articles containing\
    \ news\n      References headers are technically not valid MAIL messages,\n  \
    \    although it is unlikely that much MAIL software will notice\n      because\
    \ the incompatibility is at a subtle semantic level that\n      does not affect\
    \ the syntax.\n      UNRESOLVED ISSUE: Would it be better to just give up and\
    \ admit\n      that news uses References for both purposes?\n      UNRESOLVED\
    \ ISSUE: Should the syntax be generalized to include URLs\n      as alternatives\
    \ to message IDs?  Perhaps not; too many things know\n      about References already.\
    \  And non-articles can't be precursors of\n      articles, not really.\n   Followup\
    \ agents SHOULD NOT shorten References headers.  If it is\n   absolutely necessary\
    \ to shorten the header, as a desperate last\n   resort, a followup agent MAY\
    \ do this by deleting some of the message\n   IDs.  However, it MUST NOT delete\
    \ the first message ID, the last\n   three message IDs (including that of the\
    \ immediate precursor), or any\n   message ID mentioned in the body of the followup.\
    \  If it is possible\n   for the followup agent to determine the Subject content\
    \ of the\n   articles identified in the References header, it MUST NOT delete\
    \ the\n   message ID of any article where the Subject content changed (other\n\
    \   than by prepending of a back reference).  The followup agent MUST NOT\n  \
    \ delete any message ID whose local part ends with \"_-_\" (underscore\n   (ASCII\
    \ 95), hyphen (ASCII 45), underscore); followup agents are urged\n   to use this\
    \ form to mark subject changes and to avoid using it\n   otherwise.\n      NOTE:\
    \ As software capable of exploiting References chains has\n      grown more common,\
    \ the random shortening permitted by [RFC1036]\n      has become increasingly\
    \ troublesome.  ANY shortening is\n      undesirable, and software should do it\
    \ only in cases of dire\n      necessity.  In such cases, these rules attempt\
    \ to limit the\n      damage.\n      NOTE: The first message ID is very important\
    \ as the starting point\n      of the \"thread\" of discussion and absolutely\
    \ should not be\n      deleted.  Keeping the last three message IDs gives thread-\n\
    \      following software a fighting chance to reconstruct a full thread\n   \
    \   even if an article or two is missing.  Keeping message IDs\n      mentioned\
    \ in the body is obviously desirable.\n      NOTE: Subject changes are difficult\
    \ to determine, but they are\n      significant as possible beginnings of new\
    \ threads.  The \"_-_\"\n      convention is provided so that posting agents (which\
    \ have more\n      information about subjects) can flag articles containing a\
    \ subject\n      change in a way that followup agents can detect without access\
    \ to\n      the articles themselves.  The sequence is chosen as one that is\n\
    \      fairly unlikely to occur by accident.\n      UNRESOLVED ISSUE: Is \"_-_\"\
    \ really worth having?\n   When a References header is shortened, at least three\
    \ blanks SHOULD\n   be left between adjacent message IDs at each point where deletions\n\
    \   were made.  Software preparing new References headers SHOULD preserve\n  \
    \ multiple blanks in older References content.\n      NOTE: It's desirable to\
    \ have some marker of where deletions\n      occurred, but the restricted syntax\
    \ of the header makes this\n      difficult.  Extra white space is not a very\
    \ good marker, since it\n      may be deleted by software that ill-advisedly rewrites\
    \ headers,\n      but at least it doesn't break existing software.\n   To repeat:\
    \ followup agents SHOULD NOT shorten References headers.\n      NOTE: Unfortunately,\
    \ reading agents and other software analyzing\n      References patterns have\
    \ to be prepared for the worst anyway.  The\n      worst includes random deletions\
    \ and the possibility of circular\n      References chains (when References is\
    \ misused in place of See-Also\n      (Section 6.16)).\n"
- title: 6.6.  Control
  contents:
  - "6.6.  Control\n   The Control header content marks the article as a control message\
    \ and\n   specifies the desired actions (other than the usual ones of filing\n\
    \   and passing on the article):\n      Control-content  = verb *( space argument\
    \ )\n      verb             = 1*( letter / digit )\n      argument         = 1*<ASCII\
    \ printable character>\n   The verb indicates what action should be taken, and\
    \ the argument(s)\n   (if any) supply details.  In some cases, the body of the\
    \ article may\n   also contain details.  Section 7 describes the standard verbs.\
    \  See\n   also the Also-Control header (Section 6.15).\n      NOTE: Control messages\
    \ are often processed and filed rather\n      differently than normal articles.\n\
    \      NOTE: The restriction of verbs to letters and digits is new but is\n  \
    \    consistent with existing practice and potentially simplifies\n      implementation\
    \ by avoiding characters significant to command\n      interpreters.  Beware that\
    \ the arguments are under no such\n      restriction in general.\n      NOTE:\
    \ Two other conventions for distinguishing control messages\n      from normal\
    \ articles were formerly in use: a three-component\n      newsgroup name ending\
    \ in \".ctl\" or a subject beginning with\n      \"cmsg \" was considered to imply\
    \ that the article was a control\n      message.  These conventions are obsolete.\
    \  Do not use them.\n   An article with a Control header MUST NOT have an Also-Control\
    \ or\n   Supersedes header.\n"
- title: 6.7.  Distribution
  contents:
  - "6.7.  Distribution\n   The Distribution header content specifies geographic or\n\
    \   organizational limits on an article's propagation:\n      Distribution-content\
    \  = distribution *( dist-delim distribution )\n      dist-delim            =\
    \ \",\"\n      distribution          = plain-component\n   A distribution is syntactically\
    \ identical to a one-component\n   newsgroup name and must satisfy the same rules\
    \ and restrictions.  In\n   the absence of Distribution, the default distribution\
    \ is \"world\".\n      NOTE: This syntax has the disadvantage of containing no\
    \ white\n      space, making it impossible to continue a Distribution header\n\
    \      across several lines.  Implementors of relayers and reading agents\n  \
    \    are warned that it is intended that the successor to this Draft\n      will\
    \ change the definition of dist delimiter to:\n         dist-delim = \",\" [ space\
    \ ]\n      and are urged to fix their software to handle (i.e., ignore) white\n\
    \      space following the commas.\n   A relayer MUST NOT pass an article to another\
    \ relayer unless\n   configuration information specifies transmission to that\
    \ other\n   relayer of BOTH (a) at least one of the article's newsgroup(s), and\n\
    \   (b) at least one of the article's distribution(s).  In effect, the\n   only\
    \ role of distributions is to limit propagation, by preventing\n   transmission\
    \ of articles that would have been transmitted had the\n   decision been based\
    \ solely on newsgroups.\n   A posting agent might wish to present a menu of possible\n\
    \   distributions, or suggest a default, but normally SHOULD NOT supply a\n  \
    \ default without giving the poster a chance to override it.  A\n   followup agent\
    \ SHOULD initially supply the same Distribution header\n   as found in the precursor,\
    \ although the poster MAY alter this if\n   appropriate.\n   Despite the syntactic\
    \ similarity and some historical confusion,\n   distributions are NOT newsgroup\
    \ names.  The whole point of putting a\n   distribution on an article is that\
    \ it is DIFFERENT from the\n   newsgroup(s).  In general, a meaningful distribution\
    \ corresponds to\n   some sort of region of propagation: a geographical area,\
    \ an\n   organization, or a cooperating subnet.\n      NOTE: Distributions have\
    \ historically suffered from the completely\n      uncontrolled nature of their\
    \ name space, the lack of feedback to\n      posters on incomplete propagation\
    \ resulting from use of random\n      trash in Distribution headers, and confusion\
    \ with newsgroups\n      (arising partly because many regions and organizations\
    \ DO have\n      internal newsgroups with names resembling their internal\n  \
    \    distributions).  This has resulted in much garbage in Distribution\n    \
    \  headers, notably the pointless practice of automatically supplying\n      the\
    \ first component of the newsgroup name as a distribution (which\n      is MOST\
    \ unlikely to restrict propagation!).  Many sites have opted\n      to maximize\
    \ propagation of such ill-formed articles by essentially\n      ignoring distributions.\
    \  This unfortunately interferes with\n      legitimate uses.  The situation is\
    \ bad enough that distributions\n      must be considered largely useless except\
    \ within cooperating\n      subnets that make an organized effort to restrain\
    \ propagation of\n      their internal distributions.\n      NOTE: The distributions\
    \ \"world\" and \"local\" have no standard magic\n      meaning (except that the\
    \ former is the default distribution if\n      none is given).  Some pieces of\
    \ software do assign such meanings\n      to them.\n"
- title: 6.8.  Keywords
  contents:
  - "6.8.  Keywords\n   The Keywords header content is one or more phrases intended\
    \ to\n   describe some aspect of the content of the article:\n      Keywords-content\
    \ = plain-phrase *( \",\" [ space ] plain-phrase )\n   Keywords, separated by\
    \ commas, each follow the <plain-phrase> syntax\n   defined in Section 5.2.  Encoded\
    \ words in keywords MUST NOT contain\n   characters other than letters (of either\
    \ case), digits, and the\n   characters \"!\", \"*\", \"+\", \"-\", \"/\", \"\
    =\", and \"_\".\n      NOTE: Posters and posting agents are asked to take note\
    \ that\n      keywords are separated by commas, not by white space.  The\n   \
    \   following Keywords header contains only one keyword (a rather\n      unlikely\
    \ and improbable one):\n      Keywords: Thompson Ritchie Multics Linux\n     \
    \ and should probably have been written:\n      Keywords: Thompson, Ritchie, Multics,\
    \ Linux\n      This particular error is unfortunately rather widespread.\n   \
    \   NOTE: Reading agents and archivers preparing indexes of articles\n      should\
    \ bear in mind that user-chosen keywords are notoriously poor\n      for indexing\
    \ purposes unless the keywords are picked from a\n      predefined set (which\
    \ they are not in this case).  Also, some\n      followup agents unwisely propagate\
    \ the Keywords header from the\n      precursor into the followup by default.\
    \  At least one news-based\n      experiment has found the contents of Keywords\
    \ headers to be\n      completely valueless for indexing.\n"
- title: 6.9.  Summary
  contents:
  - "6.9.  Summary\n   The Summary header content is a short phrase summarizing the\n\
    \   article's content:\n      Summary-content = nonblank-text\n   As with the\
    \ subject, no restriction is placed on the content since it\n   is intended solely\
    \ for display to humans.\n      NOTE: Reading agents should be aware that the\
    \ Summary header is\n      often used as a sort of secondary Subject header, and\
    \ (if present)\n      its contents should perhaps be displayed when the subject\
    \ is\n      displayed.\n   The summary SHOULD be terse.  Posters SHOULD avoid\
    \ trying to cram\n   their entire article into the headers; even the simplest\
    \ query\n   usually benefits from a sentence or two of elaboration and context,\n\
    \   and not all reading agents display all headers.\n"
- title: 6.10.  Approved
  contents:
  - "6.10.  Approved\n   The Approved header content indicates the mailing addresses\
    \ (and\n   possibly the full names) of the persons or entities approving the\n\
    \   article for posting:\n      Approved-content = From-content *( \",\" [ space\
    \ ] From-content )\n   An Approved header is required in all postings to moderated\n\
    \   newsgroups; the presence or absence of this header allows a posting\n   agent\
    \ to distinguish between articles posted by the moderator (which\n   are normal\
    \ articles to be posted normally) and attempted\n   contributions by others (which\
    \ should be mailed to the moderator for\n   approval).  An Approved header is\
    \ also required in certain control\n   messages, to reduce the probability of\
    \ accidental posting of same;\n   see the relevant parts of Section 7.\n     \
    \ NOTE: There is, at present, no way to authenticate Approved\n      headers to\
    \ ensure that the claimed approval really was bestowed.\n      Nor is there an\
    \ established mechanism for even maintaining a list\n      of legitimate approvers\
    \ (such a list would quickly become out of\n      date if it had to be maintained\
    \ by hand).  Such mechanisms,\n      presumably relying on cryptographic authentication,\
    \ would be a\n      worthwhile extension to this Draft, and experimental work\
    \ in this\n      area is encouraged.  (The problem is harder than it sounds because\n\
    \      news is used on many systems that do not have real-time access to\n   \
    \   key servers.)\n      NOTE: Relayer implementors, please note well: it is the\
    \ POSTING\n      AGENT that is authorized to distinguish between moderator postings\n\
    \      and attempted contributions, and to mail the latter to the\n      moderator.\
    \  As discussed in Section 9.1, relayers MUST NOT, repeat\n      MUST NOT, send\
    \ such mail; on receipt of an unApproved article in a\n      moderated newsgroup,\
    \ they should discard the article, NOT\n      transform it into a mail message\
    \ (except perhaps to a local\n      administrator).\n      NOTE: [RFC1036] restricted\
    \ Approved to a single From-content.\n      However, multiple moderation is no\
    \ longer rare, and multi-\n      moderator Approved headers are already in use.\n"
- title: 6.11.  Lines
  contents:
  - "6.11.  Lines\n   The Lines header content indicates the number of lines in the\
    \ body of\n   the article:\n      Lines-content = 1*digit\n   The line count includes\
    \ all body lines, including the signature (if\n   any) and including empty lines\
    \ (if any) at the beginning or end of\n   the body.  (The single empty separator\
    \ line between the headers and\n   the body is not part of the body.)  The \"\
    body\" here is the body as\n   found in the posted article, AFTER all transformations\
    \ such as MIME\n   encodings.\n   Reading agents SHOULD NOT rely on the presence\
    \ of this header, since\n   it is optional (and some posting agents do not supply\
    \ it).  They MUST\n   NOT rely on it being precise, since it frequently is not.\n\
    \      NOTE: The average line length in article bodies is surprisingly\n     \
    \ consistent at about 40 characters, and since the line count\n      typically\
    \ is used only for approximate judgements (\"is this too\n      long to read quickly?\"\
    ), dividing the byte count of the body by 40\n      gives an estimate of the body\
    \ line count that is adequate for\n      normal use.  This estimate is NOT adequate\
    \ if the body has been\n      MIME encoded, but neither is the Lines header: at\
    \ least one major\n      relayer will add a Lines header to an article that lacks\
    \ one,\n      without considering the possibility of MIME encodings when\n   \
    \   computing the line count.\n      NOTE: It would be better to have a Content-Size\
    \ header as part of\n      MIME, so that body parts could have their own sizes,\
    \ and so that\n      the units used could be appropriate to the data type (line\
    \ count\n      is not a useful measure of the size of an encoded image, for\n\
    \      example).  Doing this is preferable to trying to fix Lines.\n      UNRESOLVED\
    \ ISSUE: Update on Content-Size?\n   Relayers SHOULD discard this header if they\
    \ find it necessary to\n   re-encode the article in such a way that the original\
    \ Lines header\n   would be rendered incorrect.\n"
- title: 6.12.  Xref
  contents:
  - "6.12.  Xref\n   The Xref header content indicates where an article was filed\
    \ by the\n   last relayer to process it:\n      Xref-content     = relayer 1*(\
    \ space location )\n      relayer          = relayer-name\n      location    \
    \     = newsgroup-name \":\" article-locator\n      article-locator  = 1*<ASCII\
    \ printable character>\n   The relayer's name is included so that software can\
    \ determine which\n   relayer generated the header (and specifically, whether\
    \ it really was\n   the one that filed the copy being examined).  The locations\
    \ specify\n   what newsgroups the article was filed under (which may differ from\n\
    \   those in the Newsgroups header) and where it was filed under them.\n   The\
    \ exact form of an article locator is implementation-specific.\n      NOTE: Reading\
    \ agents can exploit this information to avoid\n      presenting the same article\
    \ to a reader several times.  The\n      information is sometimes available in\
    \ system databases, but having\n      it in the article is convenient.  Relayers\
    \ traditionally generate\n      an Xref header only if the article is cross-posted,\
    \ but this is\n      not mandatory, and there is at least one new application\n\
    \      (\"mirroring\": keeping news databases on two hosts identical) where\n\
    \      the header is useful in all articles.\n      NOTE: The traditional form\
    \ of an article locator is a decimal\n      number, with articles in each newsgroup\
    \ numbered consecutively\n      starting from 1.  NNTP [RFC977] demands that such\
    \ a model be\n      provided, and there may be other software that expects it,\
    \ but it\n      seems desirable to permit flexibility for unorthodox\n      implementations.\n\
    \   A relayer inserting an Xref header into an article MUST delete any\n   previous\
    \ Xref header.  A relayer that is not inserting its own Xref\n   header SHOULD\
    \ delete any previous Xref header.  A relayer MAY delete\n   the Xref header when\
    \ passing an article on to another relayer.\n      NOTE: [RFC1036] specified that\
    \ the Xref header was not transmitted\n      when an article was passed to another\
    \ relayer, but the major news\n      implementations have never obeyed this rule,\
    \ and applications like\n      mirroring depend on this disobedience.\n   A relayer\
    \ MUST use the same name in Xref headers as it uses in Path\n   headers.  Reading\
    \ agents MUST ignore an Xref header containing a\n   relayer name that differs\
    \ from the one that begins the path list.\n"
- title: 6.13.  Organization
  contents:
  - "6.13.  Organization\n   The Organization header content is a short phrase identifying\
    \ the\n   poster's organization:\n      Organization-content = nonblank-text\n\
    \   This header is typically supplied by the posting agent.  The\n   Organization\
    \ content SHOULD mention geographical location (e.g., city\n   and country) when\
    \ it is not obvious from the organization's name.\n      NOTE: The motive here\
    \ is that the organization is often difficult\n      to guess from the mailing\
    \ address, is not always supplied in a\n      signature, and can help identify\
    \ the poster to the reader.\n      NOTE: There is no \"s\" in \"Organization\"\
    .\n   The Organization content is provided for identification only and does\n\
    \   not imply that the poster speaks for the organization or that the\n   article\
    \ represents organization policy.  Posting agents SHOULD permit\n   the poster\
    \ to override a local default Organization header.\n"
- title: 6.14.  Supersedes
  contents:
  - "6.14.  Supersedes\n   The Supersedes header content specifies articles to be\
    \ cancelled on\n   arrival of this one:\n      Supersedes-content = message-id\
    \ *( space message-id )\n   Supersedes is equivalent to Also-Control (Section\
    \ 6.15) with an\n   implicit verb of \"cancel\" (Section 7.1).\n      NOTE: Supersedes\
    \ is normally used where the article is an updated\n      version of the one(s)\
    \ being cancelled.\n      NOTE: Although the ability to use multiple message IDs\
    \ in\n      Supersedes is highly desirable (see Section 7.1), posters are\n  \
    \    warned that existing implementations often do not correctly handle\n    \
    \  more than one.\n      NOTE: There is no \"c\" in \"Supersedes\".\n   An article\
    \ with a Supersedes header MUST NOT have an Also-Control or\n   Control header.\n"
- title: 6.15.  Also-Control
  contents:
  - "6.15.  Also-Control\n   The Also-Control header content marks the article as\
    \ being a control\n   message IN ADDITION to being a normal news article and specifies\
    \ the\n   desired actions:\n      Also-Control-content = Control-content\n   An\
    \ article with an Also-Control header is filed and passed on\n   normally, but\
    \ the content of the Also-Control header is processed as\n   if it were found\
    \ in a Control header.\n      NOTE: It is sometimes desirable to piggyback control\
    \ actions on a\n      normal article, so that the article will be filed normally\
    \ but\n      will also be acted on as a control message.  This header is\n   \
    \   essentially a generalization of Supersedes.\n      NOTE: Be warned that some\
    \ old relayers do not implement\n      Also-Control.\n   An article with an Also-Control\
    \ header MUST NOT have a Control or\n   Supersedes header.\n"
- title: 6.16.  See-Also
  contents:
  - "6.16.  See-Also\n   The See-Also header content lists message IDs of articles\
    \ that are\n   related to this one but are not its precursors:\n      See-Also-content\
    \ = message-id *( space message-id )\n   See-Also resembles References, but without\
    \ the restrictions imposed\n   on References by the followup rules.\n      NOTE:\
    \ See-Also provides a way to group related articles, such as\n      the parts\
    \ of a single document that had to be split across\n      multiple articles due\
    \ to its size, or to cross-reference between\n      parallel threads.\n      NOTE:\
    \ See the discussion (in Section 6.5) on MAIL compatibility\n      issues of References\
    \ and See-Also.\n      NOTE: In the specific case where it is desired to essentially\
    \ make\n      another article PART of the current one, e.g., for annotation of\n\
    \      the other article, MIME's \"message/external-body\" convention can\n  \
    \    be used to do so without actual inclusion.  \"news-message-ID\" was\n   \
    \   registered as a standard external-body access method, with a\n      mandatory\
    \ NAME parameter giving the message ID and an optional\n      SITE parameter suggesting\
    \ an NNTP site that might have the article\n      available (if it is not available\
    \ locally), by IANA 22 June 1993.\n      UNRESOLVED ISSUE: Could the syntax be\
    \ generalized to include URLs\n      as alternatives to message IDs?  Here it\
    \ makes much more sense\n      than in References.\n"
- title: 6.17.  Article-Names
  contents:
  - "6.17.  Article-Names\n   The Article-Names header content indicates any special\
    \ significance\n   the article may have in particular newsgroups:\n      Article-Names-content\
    \  = 1*( name-clause space )\n      name-clause            = newsgroup-name \"\
    :\" article-name\n      article-name           = letter 1*( letter / digit / \"\
    -\" )\n   Each name clause specifies a newsgroup (which SHOULD be among those\n\
    \   in the Newsgroups header) and an article name local to that\n   newsgroup.\
    \  Article names MAY be used by relayers to file the article\n   in special ways,\
    \ or they MAY just be noted for possible special\n   attention by reading agents.\
    \  Article names are case-sensitive.\n      NOTE: This header provides a way to\
    \ mark special postings, such as\n      introductions, frequently-asked-question\
    \ lists, etc., so that\n      reading agents have a way of finding them automatically.\
    \  The\n      newsgroup name is specified for each article name because the\n\
    \      names may be newsgroup-specific; for example, many frequently-\n      asked-question\
    \ lists are posted to \"news.answers\" in addition to\n      their \"home\" newsgroup,\
    \ and they would not be known by the same\n      name(s) in both newsgroups.\n\
    \   The Article-Names header SHOULD be ignored unless the article also\n   contains\
    \ an Approved header.\n      NOTE: This stipulation is made in anticipation of\
    \ the possibility\n      that Approved headers will be involved in cryptographic\n\
    \      authentication.\n   The presence of an Article-Names header does not necessarily\
    \ imply\n   that the article will be retained unusually long before expiration,\n\
    \   or that previous article(s) with similar Article-Names headers will\n   be\
    \ cancelled by its arrival.  Posters preparing special postings\n   SHOULD include\
    \ appropriate other headers, such as Expires and\n   Supersedes, to request such\
    \ actions.\n   Different networks MAY establish different sets of article names\
    \ for\n   the special postings they deem significant; it is preferable for\n \
    \  usage to be standardized within networks, although it might be\n   desirable\
    \ for individual newsgroups to have different naming\n   conventions in some situations.\
    \  Article names MUST be 14 characters\n   or less.  The following names are suggested\
    \ but are not mandatory:\n   intro       Introduction to the newsgroup for newcomers.\n\
    \   charter     Charter, rules, organization, moderation policies, etc.\n   background\
    \  Biographies of special participants, history of the\n               newsgroup,\
    \ notes on related newsgroups, etc.\n   subgroups   Descriptions of sub-newsgroups\
    \ under this newsgroup,\n               e.g., \"sci.space.news\" under \"sci.space\"\
    .\n   facts       Information relating to the purpose of the newsgroup,\n    \
    \           e.g., an acronym glossary in \"sci.space\".\n   references  Where\
    \ to get more information: books, journals, FTP\n               repositories,\
    \ etc.\n   faq         Answers to frequently asked questions.\n   menu       \
    \ If present, a list of all of the other article names\n               local to\
    \ this newsgroup, with brief descriptions of their\n               contents.\n\
    \   Such articles may be divided into subsections using the MIME\n   \"multipart/mixed\"\
    \ conventions.  If size considerations make it\n   necessary to split such articles,\
    \ names ending in a hyphen and a part\n   number are suggested; for example, a\
    \ three-part frequently-asked-\n   questions list could have article names \"\
    faq-1\", \"faq-2\", and\n   \"faq-3\".\n      NOTE: It is somewhat premature to\
    \ attempt to standardize article\n      names, since this is essentially a new\
    \ feature with no experience\n      behind it.  However, if reading agents are\
    \ to attach special\n      significance to these names, some attempt at standard\
    \ conventions\n      is imperative.  This is a first attempt at providing some.\n"
- title: 6.18.  Article-Updates
  contents:
  - "6.18.  Article-Updates\n   The Article-Updates header content indicates what\
    \ previous articles\n   this one is deemed (by the poster) to update (i.e., replace):\n\
    \      Article-Updates-content  = message-id *( space message-id )\n   Each message\
    \ ID identifies a previous article that this one is deemed\n   to update.  This\
    \ MUST NOT cause the previous article(s) to be\n   cancelled or otherwise altered,\
    \ unless this is implied by other\n   headers (e.g., Supersedes); Article-Updates\
    \ is merely an advisory\n   that MAY be noted for special attention by reading\
    \ agents.\n      NOTE: This header provides a way to mark articles that are only\n\
    \      minor updates of previous ones, containing no significant new\n      information\
    \ and not worth reading if the previous ones have been\n      read.\n      NOTE:\
    \ If suitable conventions using MIME multipart bodies and the\n      \"message/external-body\"\
    \ body-part type can be developed, a\n      replacing article might contain only\
    \ differences between the old\n      text and the new text, rather than a complete\
    \ new copy.  This is\n      the motivation for not making Article-Updates also\
    \ function as\n      Supersedes does: the replacing article might depend on the\n\
    \      continued presence of the replaced article.\n"
- title: 7.  Control Messages
  contents:
  - "7.  Control Messages\n   The following sections document the currently defined\
    \ control\n   messages.  \"Message\" is used herein as a synonym for \"article\"\
    \ unless\n   context indicates otherwise.\n   Posting agents are warned that since\
    \ certain control messages require\n   article bodies in quite specific formats,\
    \ signatures SHOULD NOT be\n   appended to such articles, and it may be wise to\
    \ take greater care\n   than usual to avoid unintended (although perhaps well-meaning)\n\
    \   alterations to text supplied by the poster.  Relayers MUST assume\n   that\
    \ control messages mean what they say; they MAY be obeyed as is or\n   rejected,\
    \ but MUST NOT be reinterpreted.\n   The execution of the actions requested by\
    \ control messages is subject\n   to local administrative restrictions, which\
    \ MAY deny requests or\n   refer them to an administrator for approval.  The descriptions\
    \ below\n   are generally phrased in terms suggesting mandatory actions, but any\n\
    \   or all of these MAY be subject to local administrative approval\n   (either\
    \ as a class or case-by-case).  Analogously, where the\n   description below specifies\
    \ that a message or portion thereof is to\n   be ignored, this action MAY include\
    \ reporting it to an administrator.\n      NOTE: The exact choice of local action\
    \ might depend on what action\n      the control message requests, who it claims\
    \ to come from, etc.\n   Relayers MUST propagate even control messages they do\
    \ not understand.\n   In the following sections, each type of control message\
    \ is defined\n   syntactically by defining its arguments and its body.  For example,\n\
    \   \"cancel\" is defined by defining cancel-arguments and cancel-body.\n"
- title: 7.1.  cancel
  contents:
  - "7.1.  cancel\n   The cancel message requests that one or more previous articles\
    \ be\n   \"cancelled\":\n      cancel-arguments  = message-id *( space message-id\
    \ )\n      cancel-body       = body\n   The argument(s) identify the articles\
    \ to be cancelled, by message ID.\n   The body is a comment, which software MUST\
    \ ignore, and SHOULD contain\n   an indication of why the cancellation was requested.\
    \  The cancel\n   message SHOULD be posted to the same newsgroup(s), with the\
    \ same\n   distribution(s), as the article(s) it is attempting to cancel.\n  \
    \    NOTE: Using the same newsgroups and distributions maximizes the\n      chances\
    \ of the cancel message propagating everywhere the target\n      articles went.\n\
    \      NOTE: [RFC1036] permitted only a single message-id in a cancel\n      message.\
    \  Support for cancelling multiple articles is highly\n      desirable, especially\
    \ for use with Supersedes (see Section 6.14).\n      If several revisions of an\
    \ article appear in fast succession, each\n      using Supersedes to cancel the\
    \ previous one, it is possible for a\n      middle revision to be destroyed by\
    \ cancellation before it is\n      propagated onward to cancel its predecessor.\
    \  Allowing each\n      article to cancel several predecessors greatly alleviates\
    \ this\n      problem.  (Posting agents preparing a cancel of an article that\n\
    \      itself cancels other articles might wish to add those articles to\n   \
    \   the cancel-arguments.)  However, posters should be aware that much\n     \
    \ old software does not implement multiple cancellation properly and\n      should\
    \ avoid using it when reliable cancellation is vitally\n      important.\n   When\
    \ an article (the \"target article\") is to be cancelled, there are\n   four cases\
    \ of interest: the article hasn't arrived yet, it has\n   arrived and been filed\
    \ and is available for reading, it has expired\n   and been archived on some less-accessible\
    \ storage medium, or it has\n   expired and been deleted.  The next few paragraphs\
    \ discuss each case\n   in turn (in reverse order, which is convenient for the\
    \ explanation).\n   EXPIRED AND DELETED.  Take no action.\n   EXPIRED AND ARCHIVED.\
    \  If the article is readily accessible and can\n   be deleted or made unreadable\
    \ easily, treat as under AVAILABLE below.\n   Otherwise, treat as under EXPIRED\
    \ AND DELETED.\n      NOTE: While it is desirable for archived articles to be\n\
    \      cancellable, this can easily involve rewriting an entire archive\n    \
    \  volume just to get rid of one article, perhaps with manual actions\n      required\
    \ to arrange it.  It is difficult to envision a situation\n      so dire as to\
    \ require such measures from hundreds or thousands of\n      administrators, or\
    \ for that matter one in which widespread\n      compliance with such a request\
    \ is likely.\n   AVAILABLE.  Compare the mailing addresses from the From lines\
    \ of the\n   cancel message and the target article, bearing in mind that local\n\
    \   parts (except for \"postmaster\") are case-sensitive and domains are\n   case-insensitive.\
    \  If they do not match, either refer the issue to an\n   administrator for a\
    \ case-by-case decision, or treat as if they\n   matched.\n      NOTE: It is generally\
    \ trivial to forge articles, so nothing short\n      of cryptographic authentication\
    \ is really adequate to ensure that\n      a cancel came from the original article's\
    \ author.  Moreover, it is\n      highly desirable to permit authorities other\
    \ than the author to\n      cancel articles, to allow for cases in which the author\
    \ is\n      unavailable, uncooperative, or malicious, and in which damage\n  \
    \    and/or legal problems may be minimized by prompt cancellation.\n      Reliable\
    \ authentication that would permit such administrative\n      cancels would be\
    \ a worthwhile extension to this Draft, and\n      experimental work in this area\
    \ is encouraged.\n      NOTE: Meanwhile, a simple check of addresses is useful\
    \ accident\n      prevention and catches at least the most simple-minded forgers.\n\
    \      Since the intent is accident prevention rather than ironclad\n      security,\
    \ use of the From address is appropriate, all the more so\n      because in the\
    \ presence of gateways (especially redundant multiple\n      gateways), the author\
    \ may not have full control over Sender\n      headers.\n      NOTE: The \"refer...\
    \ or treat as if they matched\" rule is intended\n      to specifically forbid\
    \ quietly ignoring cancels with mismatched\n      addresses.\n   If the addresses\
    \ match, then if technically possible, the relayer\n   MUST delete the target\
    \ article completely and immediately.  Failing\n   that, it MUST make the target\
    \ article unreadable (preferably to\n   everyone, minimally to everyone but the\
    \ administrator) and either\n   arrange for it to be deleted as soon as possible\
    \ or notify an\n   administrator at once.\n      NOTE: To allow for events such\
    \ as criminal actions, malicious\n      forgeries, and copyright infringements,\
    \ where damage and/or legal\n      problems may be minimized by prompt cancellation,\
    \ complete removal\n      is strongly preferred over merely making the target\
    \ article\n      unreadable.  The potential for malice is outweighed by the\n\
    \      importance of really getting rid of the target article in some\n      legitimate\
    \ cases.  (In cases of inadvertent copyright violation in\n      particular, the\
    \ ability to quickly remedy the violation is of\n      considerable legal importance.)\
    \  Failing that, making it\n      unreadable is better than nothing.\n      NOTE:\
    \ Merely annotating the article so that readers see an\n      indication that\
    \ the author wanted it cancelled is not acceptable.\n      Making the article\
    \ unreadable is the minimum action.\n      NOTE: There have been experiments with\
    \ making cancelled articles\n      unreadable, so that local news administrators\
    \ could reverse\n      cancellations.  In practice, administrators almost never\
    \ find\n      cause to do so.  Removal appears to be clearly preferable where\n\
    \      technically feasible.\n   NOT ARRIVED YET.  If practical, retain the cancel\
    \ message until the\n   target article does arrive, or until there is no further\
    \ possibility\n   of it arriving and being accepted (see Section 9.2), and then\
    \ treat\n   as under AVAILABLE.  Failing that, arrange for the target article\
    \ to\n   be rejected and discarded if it does arrive.\n      NOTE: It may well\
    \ be impractical to retain the control message,\n      given uncertainty about\
    \ whether the target article will ever\n      arrive.  Existing practice in such\
    \ cases is to assume that\n      addresses would match and arrange the equivalent\
    \ of deletion.\n      This is often done by making a spurious entry in a database\
    \ of\n      already-seen message IDs (see Section 9.3), so that if the article\n\
    \      does arrive, it will be rejected as a duplicate.\n   The cancel message\
    \ MUST be propagated onward in the usual fashion,\n   regardless of which of the\
    \ four cases applied, so that the target\n   article will be cancelled everywhere\
    \ even if cancellation and target\n   article follow different routes.\n     \
    \ NOTE: [RFC1036] appeared to require stopping cancel propagation in\n      the\
    \ NOT ARRIVED YET case, although the wording was somewhat\n      unclear.  This\
    \ appears to have been an unwise decision; there are\n      known cases of important\
    \ cancellations (in situations of\n      inadvertent copyright violation, for\
    \ example) achieving rather\n      poorer propagation than the target article.\
    \  News propagation is\n      often a much less orderly process than the authors\
    \ of [RFC1036]\n      apparently envisioned.  Modern implementations generally\
    \ propagate\n      the cancellation regardless.\n   Posting agents meant for use\
    \ by ordinary posters SHOULD reject an\n   attempt to post a cancel message if\
    \ the target article is available\n   and the mailing address in its From header\
    \ does not match the one in\n   the cancel message's From header.\n      NOTE:\
    \ This, again, is primarily accident prevention.\n"
- title: 7.2.  ihave, sendme
  contents:
  - "7.2.  ihave, sendme\n   The ihave and sendme control messages implement a crude\
    \ batched\n   predecessor of the NNTP [RFC977] protocol.  They are largely obsolete\n\
    \   in the Internet but still see use in the UUCP environment, especially\n  \
    \ for backup feeds that normally are active only when a primary feed\n   path\
    \ has failed.\n      NOTE: The ihave and sendme messages defined here have ABSOLUTELY\n\
    \      NOTHING TO DO WITH NNTP, despite similarities of terminology.\n   The two\
    \ messages share the same syntax:\n      ihave-arguments   = *( message-id space\
    \ ) relayer-name\n      sendme-arguments  = ihave-arguments\n      ihave-body\
    \        = *( message-id eol )\n      sendme-body       = ihave-body\n   Message\
    \ IDs MUST appear in either the arguments or the body, but not\n   both.  Relayers\
    \ SHOULD generate the form putting message IDs in the\n   body, but the other\
    \ form MUST be supported for backward\n   compatibility.\n      NOTE: [RFC1036]\
    \ made the relayer name optional, but difficulties\n      could easily ensue in\
    \ determining the origin of the message, and\n      this option is believed to\
    \ be unused nowadays.  Putting the\n      message IDs in the body is strongly\
    \ preferred over putting them in\n      the arguments because it lends itself\
    \ much better to large numbers\n      of message IDs and avoids the empty-body\
    \ problem mentioned in\n      Section 4.3.1.\n   The ihave message states that\
    \ the named relayer has filed articles\n   with the specified message IDs, which\
    \ may be of interest to the\n   relayer(s) receiving the ihave message.  The sendme\
    \ message requests\n   that the relayer receiving it send the articles having\
    \ the specified\n   message IDs to the named relayer.\n   These control messages\
    \ are normally sent essentially as point-to-\n   point messages, by using \"to.\"\
    \ newsgroups (see Section 5.5) that are\n   sent only to the relayer for which\
    \ the messages are intended.  The\n   two relayers MUST be neighbors, exchanging\
    \ news directly with each\n   other.  Each relayer advertises its new arrivals\
    \ to the other using\n   ihave messages, and each uses sendme messages to request\
    \ the articles\n   it lacks.\n      NOTE: Arguably these point-to-point control\
    \ messages should flow\n      by some other protocol, e.g., mail, but administrative\
    \ and\n      interfacing issues are simplified if the news system doesn't need\n\
    \      to talk to the mail system.\n   To reduce overhead, ihave and sendme messages\
    \ SHOULD be sent\n   relatively infrequently and SHOULD contain substantial numbers\
    \ of\n   message IDs.  If ihave and sendme are being used to implement a\n   backup\
    \ feed, it may be desirable to insert a delay between reception\n   of an ihave\
    \ and generation of a sendme, so that a slightly slow\n   primary feed will not\
    \ cause large numbers of articles to be requested\n   unnecessarily via sendme.\n"
- title: 7.3.  newgroup
  contents:
  - "7.3.  newgroup\n   The newgroup control message requests that a new newsgroup\
    \ be\n   created:\n      newgroup-arguments  = newsgroup-name [ space moderation\
    \ ]\n      moderation          = \"moderated\" / \"unmoderated\"\n      newgroup-body\
    \       = body\n                          / [ body ] descriptor [ body ]\n   \
    \   descriptor          = descriptor-tag eol description-line eol\n      descriptor-tag\
    \      = \"For your newsgroups file:\"\n      description-line    = newsgroup-name\
    \ space description\n      description         = nonblank-text [ \" (Moderated)\"\
    \ ]\n   The first argument names the newsgroup to be created, and the second\n\
    \   one (if present) indicates whether it is moderated.  If there is no\n   second\
    \ argument, the default is \"unmoderated\".\n      NOTE: Implementors are warned\
    \ that there is occasional use of\n      other forms in the second argument. \
    \ It is suggested that such\n      violations of this Draft, which are also violations\
    \ of [RFC1036],\n      cause the newgroup message to be ignored. [RFC1036] was\
    \ slightly\n      vague about how second arguments other than \"moderated\" were\
    \ to be\n      treated (specifically, whether they were illegal or just ignored),\n\
    \      but it is thought that all existing major implementations will\n      handle\
    \ \"unmoderated\" correctly, and it appears desirable to\n      tighten up the\
    \ specs to make it possible for other forms to be\n      used in future.\n   The\
    \ body is a comment, which software MUST ignore, except that if it\n   contains\
    \ a descriptor, the description line is intended to be\n   suitable for addition\
    \ to a list of newsgroup descriptions.  The\n   description cannot be continued\
    \ onto later lines but is not\n   constrained to any particular length.  Moderated\
    \ newsgroups have\n   descriptions that end with the string \" (Moderated)\" (note\
    \ that this\n   string begins with a blank).\n      NOTE: It is unfortunate that\
    \ the description line is part of the\n      body, rather than being supplied\
    \ in a header, but this is\n      established practice.  Newsgroup creators are\
    \ cautioned that the\n      descriptor tag must be reproduced exactly as given\
    \ above, must be\n      alone on a line, and that it is case-sensitive.  (To reduce\
    \ errors\n      in this regard, posting agents might wish to question or reject\n\
    \      newgroup messages that do not contain a descriptor.)  Given the\n     \
    \ desire for short lines, description writers should avoid content-\n      free\
    \ phrases like \"discussion of\" and \"news about\", and stick to\n      defining\
    \ what the newsgroup is about.\n   The remainder of the body SHOULD contain an\
    \ explanation of the\n   purpose of the newsgroup and the decision to create it.\n\
    \      NOTE: Criteria for newsgroup creation vary widely and are outside\n   \
    \   the scope of this Draft, but if formal procedures of one kind or\n      another\
    \ were followed in the decision, the body should mention\n      this.  Administrators\
    \ often look for such information when\n      deciding whether to comply with\
    \ creation/deletion requests.\n   A newgroup message that lacks an Approved header\
    \ MUST be ignored.\n      NOTE: It would also be desirable to ignore a newgroup\
    \ message\n      unless its Approved header names a person who is authorized (in\n\
    \      some sense) to create such a newsgroup.  A cooperating subnet with\n  \
    \    sufficiently strong coordination to maintain a correct and current\n    \
    \  list of authorized creators might wish to do so for its internal\n      newsgroups.\
    \  It also (or alternatively) might wish to ignore a\n      newgroup message for\
    \ an internal newsgroup that was posted (or\n      cross-posted) to a non-internal\
    \ newsgroup.\n      NOTE: As mentioned in Section 6.10, some form of (cryptographic?)\n\
    \      authentication of Approved headers would be highly desirable,\n      especially\
    \ for control messages.\n   It would be desirable to provide some way of supplying\
    \ a moderator's\n   address in a newgroup message for a moderated newsgroup, but\
    \ this\n   will cause problems unless effective authentication is available, so\n\
    \   it is left for future work.\n      NOTE: This leaves news administrators stuck\
    \ with the annoying\n      chore of arranging proper mailing of moderated-newsgroup\n\
    \      submissions.  On Usenet, this can be simplified by exploiting a\n     \
    \ forwarding facility that some major sites provide: they maintain\n      forwarding\
    \ addresses, each the name of a moderated newsgroup with\n      all periods (\"\
    .\", ASCII 46) replaced by hyphens (\"-\", ASCII 45),\n      which forward mail\
    \ to the current newsgroup moderators.  More\n      advice on the subject of forwarding\
    \ to moderators can be found in\n      the document titled \"How to Construct\
    \ the Mailpaths File\", posted\n      regularly to the Usenet newsgroups news.lists,\
    \ news.admin.misc,\n      and news.answers.\n   A newgroup message naming a newsgroup\
    \ that already exists is\n   requesting a change in the moderation status or description\
    \ of the\n   newsgroup.  The same rules apply.\n"
- title: 7.4.  rmgroup
  contents:
  - "7.4.  rmgroup\n   The rmgroup message requests that a newsgroup be deleted:\n\
    \      rmgroup-arguments  = newsgroup-name\n      rmgroup-body       = body\n\
    \   The sole argument is the newsgroup name.  The body is a comment,\n   which\
    \ software MUST ignore; it SHOULD contain an explanation of the\n   decision to\
    \ delete the newsgroup.\n      NOTE: Criteria for newsgroup deletion vary widely\
    \ and are outside\n      the scope of this Draft, but if formal procedures of\
    \ one kind or\n      another were followed in the decision, the body should mention\n\
    \      this.  Administrators often look for such information when\n      deciding\
    \ whether to comply with creation/deletion requests.\n   A rmgroup message that\
    \ lacks an Approved header MUST be ignored.\n      NOTE: It would also be desirable\
    \ to ignore a rmgroup message\n      unless its Approved header names a person\
    \ who is authorized (in\n      some sense) to delete such a newsgroup.  A cooperating\
    \ subnet with\n      sufficiently strong coordination to maintain a correct and\
    \ current\n      list of authorized deleters might wish to do so for its internal\n\
    \      newsgroups.  It also (or alternatively) might wish to ignore a\n      rmgroup\
    \ message for an internal newsgroup that was posted (or\n      cross-posted) to\
    \ a non-internal newsgroup.\n   Unexpected deletion of a newsgroup being a disruptive\
    \ action,\n   implementations are strongly advised to refer rmgroup messages to\
    \ an\n   administrator by default, unless perhaps the message can be\n   determined\
    \ to have originated within a cooperating subnet whose\n   members are considered\
    \ trustworthy.  Abuses have occurred.\n"
- title: 7.5.  sendsys, version, whogets
  contents:
  - "7.5.  sendsys, version, whogets\n   The sendsys message requests that a description\
    \ of the relayer's news\n   feeds to other relayers be mailed to the article's\
    \ reply address:\n      sendsys-arguments  = [ relayer-name ]\n      sendsys-body\
    \       = body\n   If there is an argument, relayers other than the one named\
    \ by the\n   argument MUST NOT respond.  The body is a comment, which software\n\
    \   MUST ignore; it SHOULD contain an explanation of the reason for the\n   request.\n\
    \   The version message requests that the name and version of the relayer\n  \
    \ software be mailed to the reply address:\n      version-arguments  =\n     \
    \ version-body       = body\n   There are no arguments.  The body is a comment,\
    \ which software MUST\n   ignore; it SHOULD contain an explanation of the reason\
    \ for the\n   request.\n   The whogets message requests that a description of\
    \ the relayer and\n   its news feeds to other relayers be mailed to the article's\
    \ reply\n   address:\n      whogets-arguments  = newsgroup-name [ space relayer-name\
    \ ]\n      whogets-body       = body\n   The first argument is the name of the\
    \ \"target newsgroup\", specifying\n   the newsgroup for which propagation information\
    \ is desired.  This\n   MUST be a complete newsgroup name, not the name of a hierarchy\
    \ or a\n   portion of a newsgroup name that is not itself the name of a\n   newsgroup.\
    \  If there is a second argument, only the relayer named by\n   that argument\
    \ should respond.  The body is a comment, which software\n   MUST ignore; it SHOULD\
    \ contain an explanation of the reason for the\n   request.\n      NOTE: Whogets\
    \ is intended as a replacement for sendsys (and\n      version) with a precisely\
    \ specified reply format.  Since the\n      syntax for specifying what newsgroups\
    \ get sent to what other\n      relayers varies widely between different forms\
    \ of relayer\n      software, the only practical way to standardize the reply\
    \ format\n      is to indicate a specific newsgroup and ask where THAT newsgroup\n\
    \      propagates.  The requirement that it be a complete newsgroup name\n   \
    \   is intended to (largely) avoid the problem of having to answer\n      \"yes\
    \ and no\" in cases where not all newsgroups in a hierarchy are\n      sent.\n\
    \   Any of these messages lacking an Approved header MUST be ignored.\n   Response\
    \ to any of these messages SHOULD be delayed for at least\n   24 hours, and no\
    \ response should be attempted if the message has been\n   cancelled in that time.\
    \  Also, no response SHOULD be attempted unless\n   the local part of the destination\
    \ address is \"newsmap\".  News\n   administrators SHOULD arrange for mail to\
    \ \"newsmap\" on their systems\n   to be discarded (without reply) unless legitimate\
    \ use is in progress.\n      NOTE: Because these messages can cause many, many\
    \ relayers to send\n      mail to one person, such messages, specifying mailing\
    \ to an\n      innocent person's mailbox, have been forged as a half-witted\n\
    \      practical joke.  A delay gives administrators time to notice a\n      fraudulent\
    \ message and act (by cancelling the message, preparing\n      to divert the flood\
    \ of mail into the bit bucket, or both).\n      Restriction of the destination\
    \ address to \"newsmap\" reduces the\n      appeal of fraud by making it impossible\
    \ to use it to harass a\n      normal user.  (A site that does NOT discard mail\
    \ to \"newsmap\", but\n      rather bounces it back, may incur higher communications\
    \ costs than\n      if the mail had been accepted into a user's mailbox, but a\n\
    \      malicious forger could accomplish this anyway, by using an address\n  \
    \    whose local part is very unlikely to be a legitimate mailbox\n      name.)\n\
    \      NOTE: [RFC1036] did not require the Approved header for these\n      control\
    \ messages.  This has been added because of the possibility\n      that cryptographic\
    \ authentication of Approved headers will become\n      available.\n   The body\
    \ of the reply to a sendsys message SHOULD be of the form:\n      sendsys-reply\
    \      = responder 1*sys-line\n      responder          = \"Responding-System:\"\
    \ space domain eol\n      sys-line           = relayer-name \":\" newsgroup-patterns\n\
    \                                   [ \":\" text ] eol\n      newsgroup-patterns\
    \ = newsgroup-name *( \",\" newsgroup-name )\n   The first line identifies the\
    \ responding system, using a syntax\n   resembling a header (but note that it\
    \ is part of the BODY).\n   Remaining lines indicate what newsgroups are sent\
    \ to what other\n   systems.  The syntax of newsgroup patterns is not well standardized;\n\
    \   the form described is common (often with newsgroup names only\n   partially\
    \ given, denoting all names starting with a particular set of\n   components)\
    \ but not universal.  The whogets message provides a\n   better-defined alternative.\n\
    \   The reply to a version message is of somewhat ill-defined form, with\n   a\
    \ body normally consisting of a single line of text that somehow\n   describes\
    \ the version of the relayer software.  The whogets message\n   provides a better-defined\
    \ alternative.\n   The body of the reply to a whogets message MUST be of the form:\n\
    \      whogets-reply      = responder-domain responder-relayer\n             \
    \              response-date responding-to arrived-via\n                     \
    \      responder-version whogets-delimiter\n                           *pass-line\n\
    \      responder-domain   = \"Responding-System:\" space domain eol\n      responder-relayer\
    \  = \"Responding-Relayer:\" space relayer-name eol\n      response-date     \
    \ = \"Response-Date:\" space date eol\n      responding-to      = \"Responding-To:\"\
    \ space message-id eol\n      arrived-via        = \"Arrived-Via:\" path-list\
    \ eol\n      responder-version  = \"Responding-Version:\" space nonblank-text\
    \ eol\n      whogets-delimiter  = eol\n      pass-line          = relayer-name\
    \ [ space domain ] eol\n   The first six lines identify the responding relayer\
    \ by its Internet\n   domain name (use of the \".uucp\" and \".bitnet\" pseudo-domains\
    \ is\n   permissible, for registered hosts in them, but discouraged) and its\n\
    \   relayer name; specify the date when the reply was generated and the\n   message\
    \ ID of the whogets message being replied to; give the path\n   list (from the\
    \ Path header) of the whogets message (which MAY, if\n   absolutely necessary,\
    \ be truncated to a convenient length, but MUST\n   contain at least the leading\
    \ three relayer names); and indicate the\n   version of relayer software responding.\
    \  Note that these lines are\n   part of the BODY even though their format resembles\
    \ that of headers.\n   Despite the apparently fixed order specified by the syntax\
    \ above,\n   they can appear in any order, but there must be exactly one of each.\n\
    \   After those preliminaries, and an empty line to unambiguously define\n   their\
    \ end, the remaining lines are the relayer names (which MAY be\n   accompanied\
    \ by the corresponding domain names, if known) of systems\n   to which the responding\
    \ system passes the target newsgroup.  Only the\n   names of news relayers are\
    \ to be included.\n      NOTE: It is desirable for a reply to identify its source\
    \ by both\n      domain name and relayer name because news propagation is governed\n\
    \      by the latter but location in a broader context is best determined\n  \
    \    by the former.  The date and whogets message ID should, in\n      principle,\
    \ be present in the MAIL headers but are included in the\n      body for robustness\
    \ in the presence of uncooperative mail systems.\n      The reason for the path\
    \ list is discussed below.  Adding version\n      information eliminates the need\
    \ for a separate message to gather\n      it.\n      NOTE: The limitation of pass\
    \ lines to contain only names of news\n      relayers is meant to exclude names\
    \ used within a single host (as\n      identifiers for mail gateways, portions\
    \ of ihave/sendme\n      implementations, etc.), which do not actually refer to\
    \ other\n      hosts.\n   A relayer that is unaware of the existence of the target\
    \ newsgroup\n   MUST NOT reply to a whogets message at all, although this MUST\
    \ NOT\n   influence decisions on whether to pass the article on to other\n   relayers.\n\
    \      NOTE: While this may result in discontinuous maps in cases where\n    \
    \  some hosts have not honored requests for creation of a newsgroup,\n      it\
    \ will also prevent a flood of useless responses in the event\n      that a whogets\
    \ message intended to map a small region \"leaks\" out\n      to a larger one.\
    \  The possibility of discontinuous recognition of\n      a newsgroup does make\
    \ it important that the whogets message itself\n      continue to propagate (if\
    \ other criteria permit).  This is also\n      the reason for the inclusion of\
    \ the whogets message's path list,\n      or at least the leading portion of it,\
    \ in the reply: to permit\n      reconstruction of at least small gaps in maps.\n\
    \   Different networks set different rules for the legitimacy of these\n   messages,\
    \ given that they may reveal details of organization-internal\n   topology that\
    \ are sometimes considered proprietary.\n      NOTE: On Usenet, in particular,\
    \ willingness to respond to these\n      messages is held to be a condition of\
    \ network membership: the\n      topology of Usenet is public information.  Organizations\
    \ wishing\n      to belong to such networks while keeping their internal topology\n\
    \      confidential might wish to organize their internal news software\n    \
    \  so that all articles reaching outsiders appear to be from a single\n      \"\
    gatekeeper\" system, with the details of internal topology hidden\n      behind\
    \ that system.\n      UNRESOLVED ISSUE: It might be useful to have a way to set\
    \ some\n      sort of hop limit for these.\n"
- title: 7.6.  checkgroups
  contents:
  - "7.6.  checkgroups\n   The checkgroups control message contains a supposedly authoritative\n\
    \   list of the valid newsgroups within some subset of the newsgroup name\n  \
    \ space:\n      checkgroups-arguments  =\n      checkgroups-body       = [ invalidation\
    \ ] valid-groups\n                             / invalidation\n      invalidation\
    \           = \"!\" plain-component\n                               *( \",\" plain-component\
    \ ) eol\n      valid-groups           = 1*( description-line eol )\n   There are\
    \ no arguments.  The body lines (except possibly for an\n   initial invalidation)\
    \ each contain a description line for a\n   newsgroup, as defined under the newgroup\
    \ message (Section 7.3).\n      NOTE: Some other, ill-defined, forms of the checkgroups\
    \ body were\n      formerly used.  See Appendix A.\n   The checkgroups message\
    \ applies to all hierarchies containing any of\n   the newsgroups listed in the\
    \ body.  The checkgroups message asserts\n   that the newsgroups it lists are\
    \ the only newsgroups in those\n   hierarchies.  If there is an invalidation,\
    \ it asserts that the\n   hierarchies it names no longer contain any newsgroups.\n\
    \   Processing a checkgroups message MAY cause a local list of newsgroup\n   descriptions\
    \ to be updated.  It SHOULD also cause the local lists of\n   newsgroups (and\
    \ their moderation statuses) in the mentioned\n   hierarchies to be checked against\
    \ the message.  The results of the\n   check MAY be used for automatic corrective\
    \ action or MAY be reported\n   to the news administrator in some way.\n     \
    \ NOTE: Automatically updating descriptions of existing newsgroups\n      is relatively\
    \ safe.  In the case of newsgroup additions or\n      deletions, simply notifying\
    \ the administrator is generally the\n      wisest action, unless perhaps the\
    \ message can be determined to\n      have originated within a cooperating subnet\
    \ whose members are\n      considered trustworthy.\n      NOTE: There is a problem\
    \ with the checkgroups concept: not all\n      newsgroups in a hierarchy necessarily\
    \ propagate to the same set of\n      machines.  (Notably, there is a set of newsgroups\
    \ known as the\n      \"inet\" newsgroups, which have relatively limited distribution\
    \ but\n      coexist in several hierarchies with more widely distributed\n   \
    \   newsgroups.)  The advice of checkgroups should always be taken\n      with\
    \ a grain of salt and should never be followed blindly.\n"
- title: 8.  Transmission Formats
  contents:
  - "8.  Transmission Formats\n   While this Draft does not specify transmission methods,\
    \ except to\n   place a few constraints on them, there are some data formats used\n\
    \   only for transmission that are unique to news.\n"
- title: 8.1.  Batches
  contents:
  - "8.1.  Batches\n   For efficient bulk transmission and processing of news articles,\
    \ it\n   is often desirable to transmit a number of them as a single block of\n\
    \   data, i.e., a \"batch\".  The format of a batch is:\n      batch         =\
    \ 1*( batch-header article )\n      batch-header  = \"#! rnews \" article-size\
    \ eol\n      article-size  = 1*digit\n   A batch is a sequence of articles, each\
    \ prefixed by a header line\n   that includes its size.  The article size is a\
    \ decimal count of the\n   octets in the article, counting each EOL as one octet\
    \ regardless of\n   how it is actually represented.\n      NOTE: A relayer might\
    \ wish to accept either a single article or a\n      batch as input.  Since \"\
    #\" cannot appear in a header name,\n      examination of the first octet of the\
    \ input will reveal its\n      nature.\n      NOTE: In the header line, there\
    \ is exactly one blank before\n      \"rnews\", there is exactly one blank after\
    \ \"rnews\", and the EOL\n      immediately follows the article size.  Beware\
    \ that some software\n      inserts non-standard trash after the size.\n     \
    \ NOTE: Despite the similarity of this format to the executable-\n      script\
    \ format used by some operating systems, it is EXTREMELY\n      unwise to just\
    \ feed incoming batches to a command interpreter in\n      the anticipation that\
    \ it will run a command named \"rnews\" to\n      process the batch.  Unless arrangements\
    \ are made to very tightly\n      restrict the range of commands that can be executed\
    \ by this means,\n      the security implications are disastrous.\n"
- title: 8.2.  Encoded Batches
  contents:
  - "8.2.  Encoded Batches\n   When transmitting news, especially over communications\
    \ links that are\n   slow or are billed by the bit, it is often desirable to batch\
    \ news\n   and apply data compression to the batches.  Transmission links\n  \
    \ sending compressed batches SHOULD use out-of-band means of\n   communication\
    \ to specify the compression algorithm being used.  If\n   there is no way to\
    \ send out-of-band information along with a batch,\n   the following encapsulation\
    \ for a compressed batch MAY be used:\n         ec-batch             = \"#! \"\
    \ compression-keyword eol\n                                compressed-batch\n\
    \         compression-keyword  = \"cunbatch\"\n   A line containing a keyword\
    \ indicating the type of compression is\n   followed by the compressed batch.\
    \  The only truly widespread\n   compression keyword at present is \"cunbatch\"\
    , indicating compression\n   using the widely distributed \"compress\" program.\
    \  Other compression\n   keywords MAY be used by mutual agreement between the\
    \ hosts involved.\n      NOTE: An encapsulated compressed batch is NOT, in general,\
    \ a text\n      file, despite having an initial text line.  This combination of\n\
    \      text and non-text data is often awkward to handle; for example,\n     \
    \ standard decompression programs cannot be used without first\n      stripping\
    \ off the initial line, and that in turn is painful to do\n      because many\
    \ text-handling tools that are superficially suited to\n      the job do not cope\
    \ well with non-text data, hence the\n      recommendation that out-of-band communication\
    \ be used instead when\n      possible.\n      NOTE: For UUCP transmission, where\
    \ a batch is typically\n      transmitted by invoking the remote command \"rnews\"\
    \ with the batch\n      as its input stream, a plausible out-of-band method for\
    \ indicating\n      a compression type would be to give a compression keyword\
    \ in an\n      option to \"rnews\", perhaps in the form:\n      rnews -d decompressor\n\
    \      where \"decompressor\" is the name of a decompression program (e.g.,\n\
    \      \"uncompress\" for a batch compressed with \"compress\" or \"gunzip\"\n\
    \      for a batch compressed with \"gzip\").  How this decompression\n      program\
    \ is located and invoked by the receiving relayer is\n      implementation-specific.\n\
    \      NOTE: See the notes in Section 8.1 on the inadvisability of\n      feeding\
    \ batches directly to command interpreters.\n      NOTE: There is exactly one\
    \ blank between \"#!\" and the compression\n      keyword, and the EOL immediately\
    \ follows the keyword.\n"
- title: 8.3.  News within Mail
  contents:
  - "8.3.  News within Mail\n   It is often desirable to transmit news as mail, either\
    \ for the\n   convenience of a human recipient or because that is the only type\
    \ of\n   transmission available on a restrictive communication path.\n   Given\
    \ the similarity between the news format and the MAIL format, it\n   is superficially\
    \ attractive to just send the news article as a mail\n   message.  This is typically\
    \ a mistake: mail-handling software often\n   feels free to manipulate various\
    \ headers in undesirable ways (in some\n   cases, such as Sender, such manipulation\
    \ is actually mandatory), and\n   mail transmission problems, etc. MUST be reported\
    \ to the\n   administrators responsible for the mail transmission rather than\
    \ to\n   the article's author.  In general, news sent as mail should be\n   encapsulated\
    \ to separate the MAIL headers and the news headers.\n   When the intended recipient\
    \ is a human, any convenient form of\n   encapsulation may be used.  Recommended\
    \ practice is to use MIME\n   encapsulation with a content type of \"message/news\"\
    , given that news\n   articles have additional semantics beyond what \"message/rfc822\"\
    \n   implies.\n      NOTE: \"message/news\" was registered as a standard subtype\
    \ by IANA\n      22 June 1993.\n   When mail is being used as a transmission path\
    \ between two relayers,\n   however, a standard method is desirable.  Currently\
    \ the standard\n   method is to send the mail to an address whose local part is\
    \ \"rnews\",\n   with whatever MAIL headers are necessary for successful transmission.\n\
    \   The news article (including its headers) is sent as the body of the\n   mail\
    \ message, with an \"N\" prepended to each line.\n      NOTE: The \"N\" reduces\
    \ the probability of an innocent line in a\n      news article being taken as\
    \ a magic command to mail software and\n      makes it easy for receiving software\
    \ to strip off any lines added\n      by mail software (e.g., the trailing empty\
    \ line added by some UUCP\n      mail software).\n   This method has its weaknesses.\
    \  In particular, it assumes that the\n   mail transmission channel can transmit\
    \ nearly arbitrary body text\n   undamaged.  When mail is being used as a transmission\
    \ path of last\n   resort, however, the mail system often has inconvenient preconceived\n\
    \   notions about the format of message bodies.  Various ad hoc encoding\n   schemes\
    \ have been used to avoid such problems.  The recommended\n   method is to send\
    \ a news article or batch as the body of a MIME mail\n   message, using content\
    \ type \"application/news-transmission\" and\n   MIME's \"base64\" encoding (which\
    \ is specifically designed to survive\n   all known major mail systems).\n   \
    \   NOTE: In the process, MIME conventions could be used to fragment\n      and\
    \ reassemble an article that is too large to be sent as a single\n      mail message\
    \ over a transmission path that restricts message\n      length.  In addition,\
    \ the \"conversions\" parameter to the content\n      type could be used to indicate\
    \ what (if any) compression method\n      has been used.  Also, the Content-MD5\
    \ header [RFC1544] can be used\n      as a \"checksum\" to provide high confidence\
    \ of detecting accidental\n      damage to the contents.\n      UNRESOLVED ISSUE:\
    \ The \"conversions\" parameter no longer exists.\n      What should be done about\
    \ this, if anything?\n      NOTE: It might look tempting to use a content type\
    \ such as\n      \"message/X-netnews\", but MIME bans non-trivial encodings of\
    \ the\n      entire body of messages with content type \"message\".  The intent\n\
    \      is to avoid obscuring nested structure underneath encodings.  For\n   \
    \   inter-relayer news transmission, there is no nested structure of\n      interest,\
    \ and it is important that the entire article (including\n      its headers, not\
    \ just its body) be protected against the vagaries\n      of intervening mail\
    \ software.  This situation appears to fit the\n      MIME description of circumstances\
    \ in which \"application\" is the\n      proper content type.\n      NOTE: \"\
    application/news-transmission\", with a \"conversions\"\n      parameter, was\
    \ registered as a standard subtype by IANA\n      22 June 1993.\n      UNRESOLVED\
    \ ISSUE: The \"conversions\" parameter no longer exists in\n      MIME.  What\
    \ should we do about this?\n"
- title: 8.4.  Partial Batches
  contents:
  - "8.4.  Partial Batches\n      UNRESOLVED ISSUE: The existing batch conventions\
    \ assemble\n      (potentially) many articles into one batch.  Handling very large\n\
    \      articles would be substantially less troublesome if there was also\n  \
    \    a fragmentation convention for splitting a large article into\n      several\
    \ batches.  Is this worth defining at this time?\n"
- title: 9.  Propagation and Processing
  contents:
  - "9.  Propagation and Processing\n   Most aspects of news propagation and processing\
    \ are implementation-\n   specific.  The basic propagation algorithms, and certain\
    \ details of\n   how they are implemented, nevertheless need to be standard.\n\
    \   There are two important principles that news implementors (and\n   administrators)\
    \ need to keep in mind.  The first is the well-known\n   Internet Robustness Principle:\n\
    \      Be liberal in what you accept, and conservative in what you send.\n   However,\
    \ in the case of news there is an even more important\n   principle, derived from\
    \ a much older code of practice, the\n   Hippocratic Oath (we will thus call this\
    \ the Hippocratic Principle):\n      First, do no harm.\n   It is VITAL to realize\
    \ that decisions that might be merely suboptimal\n   in a smaller context can\
    \ become devastating mistakes when amplified\n   by the actions of thousands of\
    \ hosts within a few hours.\n"
- title: 9.1.  Relayer General Issues
  contents:
  - "9.1.  Relayer General Issues\n   Relayers MUST NOT alter the content of articles\
    \ unnecessarily.  Well-\n   intentioned attempts to \"improve\" headers, in particular,\
    \ typically\n   do more harm than good.  It is necessary for a relayer to prepend\
    \ its\n   own name to the Path content (see Section 5.6) and permissible for it\n\
    \   to rewrite or delete the Xref header (see Section 6.12).  Relayers\n   MAY\
    \ delete the thoroughly obsolete headers described in Appendix A.3,\n   although\
    \ this behavior no longer seems useful enough to encourage.\n   Other alterations\
    \ SHOULD be avoided at all costs, as per the\n   Hippocratic Principle.\n    \
    \  NOTE: As discussed in Section 2.3, tidying up the headers of a\n      user-prepared\
    \ article is the job of the posting agent, not the\n      relayer.  The relayer's\
    \ purpose is to move already-compliant\n      articles around efficiently without\
    \ damaging them.  Note that in\n      existing implementations, specific programs\
    \ may contain both\n      posting-agent functions and relayer functions.  The\
    \ distinction is\n      that posting-agent functions are invoked only on articles\
    \ posted\n      by local posters, never on articles received from other relayers.\n\
    \      NOTE: A particular corollary of this rule is that relayers should\n   \
    \   not add headers unless truly necessary.  In particular, this is\n      not\
    \ SMTP; do not add Received headers.\n   Relayers MUST NOT pass non-conforming\
    \ articles on to other relayers,\n   except perhaps in a cooperating subnet that\
    \ has agreed to permit\n   certain kinds of non-conforming behavior.  This is\
    \ a direct\n   consequence of the Internet Robustness Principle.\n   The two preceding\
    \ paragraphs may appear to be in conflict.  What is\n   to be done when a non-conforming\
    \ article is received?  The Robustness\n   Principle argues that it should be\
    \ accepted but must not be passed on\n   to other relayers while still non-conforming,\
    \ and the Hippocratic\n   Principle strongly discourages attempts at repair. \
    \ The conclusion\n   that this appears to lead to is correct: a non-conforming\
    \ article MAY\n   be accepted for local filing and processing, or it MAY be discarded\n\
    \   entirely, but it MUST NOT be passed on to other relayers.\n   A relayer MUST\
    \ NOT respond to the arrival of an article by sending\n   mail to any destination,\
    \ other than a local administrator, except by\n   explicit prearrangement with\
    \ the recipient.  Neither posting an\n   article (other than certain types of\
    \ control messages; see\n   Section 7.5) nor being the moderator of a moderated\
    \ newsgroup\n   constitutes such prearrangement.  UNDER NO CIRCUMSTANCES WHATSOEVER\n\
    \   may a relayer attempt to send mail to either an article's originator\n   or\
    \ a moderator.\n      NOTE: Reporting apparent errors in message composition is\
    \ the job\n      of a posting agent, not a relayer.  The same is true of mailing\n\
    \      moderated-newsgroup postings to moderators.  In networks of\n      thousands\
    \ of cooperating relayers, it is simply unacceptable for\n      there to be any\
    \ circumstance whatsoever that causes any\n      significant fraction of them\
    \ to simultaneously send mail to the\n      same destination.  (Some control messages\
    \ are exceptions, although\n      perhaps ill-advised ones.)  What might, in a\
    \ smaller network, be a\n      useful notification or forwarding becomes a deluge\
    \ of nearly\n      identical messages that can bring mail software to its knees\
    \ and\n      severely inconvenience recipients.  Moderators, in particular,\n\
    \      historically have suffered grievously from this.\n   Notification of problems\
    \ in incoming articles MAY go to local\n   administrators, or at most (by prearrangement!)\
    \  to the\n   administrators of the neighboring relayer(s) that passed on the\n\
    \   problematic articles.\n      NOTE: It would be desirable to notify the author\
    \ that his posting\n      is not propagating as he expects.  However, there is\
    \ no known\n      method for doing this that will scale up gracefully.  (In\n\
    \      particular, \"notify only if within N relayers of the originator\"\n  \
    \    falls down in the presence of commercial news services like UUNET:\n    \
    \  there may be hundreds or thousands of relayers within a couple of\n      hops\
    \ of the originator.)  The best that can be done right now is\n      to notify\
    \ neighbors, in hopes that the word will eventually\n      propagate up the line,\
    \ or organize regional monitoring at major\n      hubs.\n   If it is necessary\
    \ to alter an article, e.g., translate it to another\n   character set or alter\
    \ its EOL representation, strenuous efforts\n   should be made to ensure that\
    \ such transformations are reversible,\n   and that relayers or other software\
    \ that might wish to reverse them\n   know exactly how to do so.\n      NOTE:\
    \ For example, a cooperating subnet that exchanges articles\n      using a non-ASCII\
    \ character set like EBCDIC should define a\n      standard, reversible ASCII-EBCDIC\
    \ mapping and take pains to see\n      that it is used at all points where the\
    \ subnet meets the outside.\n      If the only reason for using EBCDIC is that\
    \ the readers typically\n      employ EBCDIC devices, it would be more robust\
    \ to employ ASCII as\n      the interchange format and do the transformation in\
    \ the reading\n      and posting agents.\n"
- title: 9.2.  Article Acceptance and Propagation
  contents:
  - "9.2.  Article Acceptance and Propagation\n   When a relayer first receives an\
    \ article, it must decide whether to\n   accept it.  (This applies regardless\
    \ of whether the article arrived\n   by itself or as part of a batch, and in principle\
    \ regardless of\n   whether it originated as a local posting or as traffic from\
    \ another\n   relayer.)  In a cooperating subnet with well-controlled propagation\n\
    \   paths, some of the tests specified here MAY be delegated to centrally\n  \
    \ located relayers; that is, relayers that can receive news ONLY via\n   one of\
    \ the central relayers might simplify acceptance testing based\n   on the assumption\
    \ that incoming traffic has already passed the full\n   set of tests at a central\
    \ relayer.\n   The wording that follows is based on a model in which articles\
    \ arrive\n   on a relayer's host before acceptance tests are done.  However,\n\
    \   depending on the degree of integration of the transport mechanisms\n   and\
    \ the relayer, some or all of these tests MAY be done before the\n   article is\
    \ actually transmitted, so that articles that definitely\n   will not be accepted\
    \ need not be transmitted at all.\n   The wording that follows also specifies\
    \ a particular order for the\n   acceptance tests.  While this order is the obvious\
    \ one, the tests MAY\n   be done in any order.\n   First, the relayer MUST verify\
    \ that the article is a legal news\n   article, with all mandatory headers present\
    \ with legal contents.\n      NOTE: This check in principle is done by the first\
    \ relayer to see\n      an article, so an article received from another relayer\
    \ should\n      always be legal, but there is enough old software still\n    \
    \  operational that this cannot be taken for granted; see the\n      discussion\
    \ of the Internet Robustness Principle in Section 9.1.\n   Second, the relayer\
    \ MUST determine whether it has already seen this\n   article (identified by its\
    \ message ID).  This is normally done by\n   retaining a history of all article\
    \ message IDs seen in the last\n   N days, where the value of N is decided by\
    \ the relayer's\n   administrator but SHOULD be at least 7.  Since N cannot practically\n\
    \   be infinite, articles whose Date content indicates that they are\n   older\
    \ than N days are declared \"stale\" and are deemed to have been\n   seen already.\n\
    \      NOTE: This check is important because news propagation topology is\n  \
    \    typically redundant, often highly so, and it is not at all\n      uncommon\
    \ for a relayer to receive the same article from several\n      neighbors.  The\
    \ history of already-seen message IDs can get quite\n      large, hence, the desire\
    \ to limit its length, but it is important\n      that it be long enough that\
    \ slowly propagating articles are not\n      classed as stale.  News propagation\
    \ within the Internet is\n      normally very rapid, but when UUCP links are involved,\
    \ end-to-end\n      delays of several days are not rare, so a week is not a\n\
    \      particularly generous minimum.\n      NOTE: Despite generally more rapid\
    \ propagation in recent times, it\n      is still not unheard of for some propagation\
    \ paths to be very\n      slow.  This can introduce the possibility of old articles\
    \ arriving\n      again after they are gone from the history, hence the \"stale\"\
    \n      rule.\n   Third, the relayer MUST determine whether any of the article's\n\
    \   newsgroups are \"subscribed to\" by the host, i.e., fit a description\n  \
    \ of what hierarchies or newsgroups the site wants to receive.\n      NOTE: This\
    \ check is significant because information on what\n      newsgroups a relayer\
    \ wishes to receive is often stored at its\n      neighbors, who may not have\
    \ up-to-date information or may simplify\n      the rules for implementation reasons.\
    \  As a hedge against the\n      possibility of missed or delayed newgroup control\
    \ messages,\n      relayers may wish to observe a notion of a newsgroup subscription\n\
    \      that is independent of the list of newsgroups actually known to\n     \
    \ the relayer.  This would permit reception and relaying of articles\n      in\
    \ newsgroups that the relayer is not (yet) aware of, subject to\n      more general\
    \ criteria indicating that they are likely to be of\n      interest.\n   Once\
    \ an article has been accepted, it may be passed on to other\n   relayers.  The\
    \ fundamental news propagation rule is a flooding\n   algorithm: on receiving\
    \ and accepting an article, send it to all\n   neighboring relayers not already\
    \ in its path list that are sent its\n   newsgroup(s) and distribution(s).\n \
    \     NOTE: The path list's role in loop prevention may appear\n      relatively\
    \ unimportant, given that looping articles would\n      typically be rejected\
    \ as duplicates anyway.  However, the path\n      list's role in preventing superfluous\
    \ transmissions is not\n      trivial.  In particular, the path list is the only\
    \ thing that\n      prevents relayer X, on receiving an article from relayer Y,\
    \ from\n      sending it back to Y again.  (Indeed, the usual symptom of\n   \
    \   confusion about relayer names is that incoming news loops back in\n      this\
    \ manner.)  The looping articles would be rejected as\n      duplicates, but doubling\
    \ the communications load on every news\n      transmission path is not to be\
    \ taken lightly!\n   In general, relayers SHOULD NOT make propagation decisions\
    \ by\n   \"anticipation\": relayer X, noting that the article's path list\n  \
    \ already contains relayer Y, decides not to send it to relayer Z\n   because\
    \ X anticipates that Z will get the article by a better path.\n   If that is generally\
    \ true, then why is there a news feed from X to Z\n   at all?  In fact, the \"\
    better path\" may be running slowly or may be\n   down.  News propagation is very\
    \ robust precisely because some\n   redundant transmission is done \"just in case\"\
    .  If it is imperative\n   to limit unnecessary traffic on a path, use of NNTP\
    \ [RFC977] or\n   ihave/sendme (see Section 7.2) to pass articles only when necessary\n\
    \   is better than arbitrary decisions not to pass articles at all.\n   Anticipation\
    \ is occasionally justified in special cases.  Such cases\n   should involve both\
    \ (1) a cooperating subnet whose propagation paths\n   are well-understood and\
    \ well-monitored, with failures and slowdowns\n   noticed and dealt with promptly,\
    \ and (2) a persistent pattern of\n   heavy unnecessary traffic on a path that\
    \ is either slow or costly.\n   In addition, there should be some reason why neither\
    \ NNTP nor\n   ihave/sendme is suitable as a solution to the problem.\n"
- title: 9.3.  Administrator Contact
  contents:
  - "9.3.  Administrator Contact\n   It is desirable to have a standardized contact\
    \ address for a\n   relayer's administrators, in the spirit of the \"postmaster\"\
    \ address\n   for mail administrators.  Mail addressed to \"newsmaster\" on a\n\
    \   relayer's host MUST go to the administrator(s) of that relayer.  Mail\n  \
    \ addressed to \"usenet\" on the relayer's host SHOULD be handled\n   likewise.\
    \  Mail addressed to either address on other hosts using the\n   same news database\
    \ SHOULD be handled likewise.\n      NOTE: These addresses are case-sensitive,\
    \ although it would be\n      desirable for sequences equivalent to them using\
    \ case-insensitive\n      comparison to be handled likewise.  While \"newsmaster\"\
    \ seems the\n      preferred network-independent address, by analogy to \"postmaster\"\
    ,\n      there is an existing practice of using \"usenet\" for this purpose,\n\
    \      and so \"usenet\" should be supported if at all possible (especially\n\
    \      on hosts belonging to Usenet!).  The address \"news\" is also\n      sometimes\
    \ used for purposes like this, but less consistently.\n"
- title: 10.  Gatewaying
  contents:
  - "10.  Gatewaying\n   Gatewaying of traffic between news networks using this Draft\
    \ and\n   those using other exchange mechanisms can be useful but must be done\n\
    \   cautiously.  Gateway administrators are taking on significant\n   responsibilities\
    \ and must recognize that the consequences of error\n   can be quite serious.\n"
- title: 10.1.  General Gatewaying Issues
  contents:
  - "10.1.  General Gatewaying Issues\n   This section will primarily address the\
    \ problems of gatewaying\n   traffic INTO news networks.  Little can be said about\
    \ the other\n   direction without some specific knowledge of the network(s) involved.\n\
    \   However, the two issues are not entirely independent: if a non-news\n   network\
    \ is gatewayed into a news network at more than one point,\n   traffic injected\
    \ into the non-news network by one gateway may appear\n   at another as a candidate\
    \ for injection back into the news network.\n   This raises a more general principle,\
    \ the single most important issue\n   for gatewaying:\n      Above all, prevent\
    \ loops.\n   The normal loop prevention of news transmission is vitally dependent\n\
    \   on the Message-ID header.  Any gateway that finds it necessary to\n   remove\
    \ this header, alter it, or supersede it (by moving it into the\n   body) MUST\
    \ take equally effective precautions against looping.\n      NOTE: There are few\
    \ things more effective at turning news readers\n      into a lynch mob than a\
    \ malfunctioning gateway, or pair of\n      gateways, that takes in news articles,\
    \ mangles them just enough to\n      prevent news relayers from recognizing them\
    \ as duplicates, and\n      regurgitates them back into the news stream.  This\
    \ happens rather\n      too often.\n   Gateway implementors should realize that\
    \ gateways have all of the\n   responsibilities of relayers, plus the added complications\
    \ introduced\n   by transformations between different information formats.  Much\
    \ of\n   the discussion in Section 9 about relayer issues is relevant to\n   gateways\
    \ as well.  In particular, gateways SHOULD keep a history of\n   recently seen\
    \ articles, as described in Section 9.2, and not assume\n   that articles will\
    \ never reappear.  This is particularly important\n   for networks that have their\
    \ own concept analogous to message IDs: a\n   gateway should keep a history of\
    \ traffic seen from BOTH directions.\n   If at all possible, articles entering\
    \ the non-news network SHOULD be\n   marked in some way so that they will NOT\
    \ be re-gatewayed back into\n   news.  Multiple gateways obviously must agree\
    \ on the marking method\n   used; if it is done by having them know each others'\
    \ names, name\n   changes MUST be coordinated with great care.  If marking cannot\
    \ be\n   done, all transformations MUST be reversible so that a re-gatewayed\n\
    \   article is identical to the original (except perhaps for a longer\n   Path\
    \ header).\n   Gateways MUST NOT pass control messages (articles containing Control,\n\
    \   Also-Control, or Supersedes headers) without removing the headers\n   that\
    \ make them control messages, unless there are compelling reasons\n   to believe\
    \ that they are relevant to both sides and that conventions\n   are compatible.\
    \  If it is truly desirable to pass them unaltered,\n   suitable precautions MUST\
    \ be taken to ensure that there is NO\n   POSSIBILITY of a looping control message.\n\
    \      NOTE: The damage done by looping articles is multiplied a\n      thousandfold\
    \ if one of the affected articles is something like a\n      sendsys message (see\
    \ Section 7.5) that requests multiple automatic\n      replies.  Most gateways\
    \ simply should not pass control messages at\n      all.  If some unusual reason\
    \ dictates doing so, gateway\n      implementors and administrators are urged\
    \ to consider bulletproof\n      rate-limiting measures for the more destructive\
    \ ones like sendsys,\n      e.g., passing only one per hour no matter how many\
    \ are offered.\n   Gateways, like relayers, SHOULD make determined efforts to\
    \ avoid\n   mangling articles unnecessarily.  In the case of gateways, some\n\
    \   transformations may be inevitable, but keeping them to a minimum and\n   ensuring\
    \ that they are reversible is still highly desirable.\n   Gateways MUST avoid\
    \ destroying information.  In particular, the\n   restrictions of Section 4.2.2\
    \ are best taken with a grain of salt in\n   the context of gateways.  Information\
    \ that does not translate\n   directly into news headers SHOULD be retained, perhaps\
    \ in \"X-\"\n   headers, both because it may be of interest to sophisticated readers\n\
    \   and because it may be crucial to tracing propagation problems.\n   Gateway\
    \ implementors should take particular note of the discussion of\n   mailed replies,\
    \ or more precisely the ban on same, in Section 9.1.\n   Gateway problems MUST\
    \ be reported to the local administration, not to\n   the innocent originator\
    \ of traffic.  \"Gateway problems\" here includes\n   all forms of propagation\
    \ anomaly on the non-news side of the gateway,\n   e.g., unreachable addresses\
    \ on a mailing list.  Note that this\n   requires consideration of possible misbehavior\
    \ of \"downstream\" hosts,\n   not just the gateway host.\n"
- title: 10.2.  Header Synthesis
  contents:
  - "10.2.  Header Synthesis\n   News articles prepared by gateways MUST be legal\
    \ news articles.  In\n   particular, they MUST include all of the mandatory headers\
    \ (see\n   Section 5) and MUST fully conform to the restrictions on said\n   headers.\
    \  This often requires that a gateway function not only as a\n   relayer but also\
    \ partly as a posting agent, aiding in the synthesis\n   of a conforming article\
    \ from non-conforming input.\n      NOTE: The full-conformance requirement needs\
    \ particularly careful\n      attention when gatewaying mailing lists to news,\
    \ because a number\n      of constructs that are legal in MAIL headers are NOT\
    \ permissible\n      in news headers.  (Note also that not all mail traffic fully\n\
    \      conforms to even the MAIL specification.)  The rest of this\n      section\
    \ will be phrased in terms of mail-to-news gatewaying, but\n      most of it is\
    \ more generally applicable.\n   The mandatory headers generally present few problems.\n\
    \   If no date information is available, the gateway should supply a Date\n  \
    \ header with the gateway's current date.  If only partial information\n   is\
    \ available (e.g., date but not time), this should be fleshed out to\n   a full\
    \ Date header by adding default values, not by mixing in parts\n   of the gateway's\
    \ current date.  (Defaults should be chosen so that\n   fleshed-out dates will\
    \ not be in the future!)  It may be necessary to\n   map time zone information\
    \ to the restricted forms permitted in the\n   news Date header.  See Section\
    \ 5.1.\n      NOTE: The prohibition of mixing dates is on the theory that it is\n\
    \      better to admit ignorance than to lie.\n   If the author's address as supplied\
    \ in the original message is not\n   suitable for inclusion in a From header,\
    \ the gateway MUST transform\n   it so it is (for example, by use of the \"% hack\"\
    \ and the domain\n   address of the gateway).  The desire to preserve information\
    \ is NOT\n   an excuse for violating the rules.  If the transformation is drastic\n\
    \   enough that there is reason to suspect loss of information, it may be\n  \
    \ desirable to include the original form in an \"X-\" header, but the\n   From\
    \ header's contents MUST be as specified in Section 5.2.\n   If the message contains\
    \ a Message-ID header, the contents should be\n   dealt with as discussed in Section\
    \ 10.3.  If there is no message ID\n   present, it will be necessary to synthesize\
    \ one, following the news\n   rules (see Section 5.3).\n   Every effort should\
    \ be made to produce a meaningful Subject header;\n   see Section 5.4.  Many news\
    \ readers select articles to read based on\n   Subject headers, and inserting\
    \ a placeholder like \"<no subject\n   available>\" is considered highly objectionable.\
    \  Even synthesizing a\n   Subject header by picking out the first half-dozen\
    \ nouns and\n   adjectives in the article body is better than using a placeholder,\n\
    \   since it offers SOME indication of what the article might contain.\n   The\
    \ contents of the Newsgroups header (Section 5.5) are usually\n   predetermined\
    \ by gateway configuration, but a gateway to a network\n   that has its own concept\
    \ of newsgroups or discussions might have to\n   make transformations.  Such transformations\
    \ should be reversible;\n   otherwise, confusion is likely on both sides.\n  \
    \ It will rarely be possible for gateways to provide a Path header that\n   is\
    \ both an accurate history of the relayers the article has passed\n   through\
    \ AS NEWS and a usable reply address.  The history function\n   MUST be given\
    \ priority; see the discussion in Section 5.6.  It will\n   usually be necessary\
    \ for a gateway to supply an empty path list,\n   abandoning the reply function.\n\
    \   It is desirable for gatewayed articles to convey as much useful\n   information\
    \ as possible, e.g., by use of optional news headers (see\n   Section 6) when\
    \ the relevant information is available.  Synthesis of\n   optional headers can\
    \ generally follow similar rules.\n   Software synthesizing References headers\
    \ should note the discussion\n   in Section 6.5 concerning the incompatibility\
    \ between MAIL and news.\n   Also of interest is the possibility of incorporating\
    \ information from\n   In-Reply-To headers and from attribution lines in the body;\
    \ an\n   incomplete or somewhat conjectural References header is much better\n\
    \   than none at all, and reading agents already have to cope with\n   incomplete\
    \ or slightly erroneous References lists.\n"
- title: 10.3.  Message ID Mapping
  contents:
  - "10.3.  Message ID Mapping\n   This section, like the previous one, is phrased\
    \ in terms of mail\n   being gatewayed into news, but most of the discussion should\
    \ be more\n   generally applicable.\n   A particularly sticky problem of gatewaying\
    \ mail into news is\n   supplying legal news message IDs.  Note, in particular,\
    \ that not all\n   MAIL message IDs are legal in news; the news syntax (specified\
    \ in\n   Section 5.3, with related material in Section 5.2) is more\n   restrictive.\
    \  Generating a fully conforming news article from a mail\n   message may require\
    \ transforming the message ID somewhat.\n   Generation and transformation of message\
    \ IDs assumes particular\n   importance if a given mailing list (or whatever)\
    \ is being handled by\n   more than one gateway.  It is highly desirable that\
    \ the same article\n   contents not appear twice in the same newsgroup, which\
    \ requires that\n   they receive the same message ID from all gateways.  Gateways\
    \ SHOULD\n   use the following algorithm (possibly modified by the later\n   discussion\
    \ of gatewaying into more than one newsgroup) unless local\n   considerations\
    \ dictate another:\n      1. Separate message ID from surroundings, if necessary.\
    \  A\n         plausible method for this is to start at the first \"<\", end at\n\
    \         the next \">\", and reject the message if no \">\" is found or a\n \
    \        second \"<\" is seen before the \">\".  Also reject the message if\n\
    \         the message ID contains no \"@\" or more than one \"@\", or if it\n\
    \         contains no \".\".  Also reject the message if the message ID\n    \
    \     contains non-ASCII characters, ASCII control characters, or\n         white\
    \ space.\n            NOTE: Any legitimate domain will include at least one \"\
    .\".\n            [RFC822], Section 6.2.2, forbids white space in this context\n\
    \            when passing mail on to non-MAIL software.\n      2. Delete the leading\
    \ \"<\" and trailing \">\".  Separate message ID\n         into local part and\
    \ domain at the \"@\".\n      3. In both components, transliterate leading dots\
    \ (\".\", ASCII 46),\n         trailing dots, and dots after the first in sequences\
    \ of two or\n         more consecutive dots, into underscores (ASCII 95).\n  \
    \    4. In both components, transliterate disallowed characters other\n      \
    \   than dots (see the definition of <unquoted-char> in\n         Section 5.2)\
    \ to underscores (ASCII 95).\n      5. Form the message ID as\n            \"\
    <\" local-part \"@\" domain \">\"\n      NOTE: This algorithm is approximately\
    \ that of Rich Salz's\n      successful gatewaying package.\n   Despite the desire\
    \ to keep message IDs consistent across multiple\n   gateways, there is also a\
    \ more subtle issue that can require a\n   different approach.  If the same articles\
    \ are being gatewayed into\n   more than one newsgroup, and it is not possible\
    \ to arrange that all\n   gateways gateway them to the same cross-posted set of\
    \ newsgroups,\n   then the message IDs in the different newsgroups MUST be DIFFERENT.\n\
    \      NOTE: Otherwise, arrival of an article in one newsgroup will\n      prevent\
    \ it from appearing in another, and which newsgroup a\n      particular article\
    \ appears in will be an accident of which\n      direction it arrives from first.\
    \  It is very difficult to maintain\n      a coherent discussion when each participant\
    \ sees a randomly\n      selected 50% of the traffic.  The fundamental problem\
    \ here is that\n      the basic assumption behind message IDs is being violated:\
    \ the\n      gateways are assigning the same message ID to articles that differ\n\
    \      in an important respect (Newsgroups header).\n   In such cases, it is suggested\
    \ that the newsgroup name, or an agreed-\n   on abbreviation thereof, be prepended\
    \ to the local part of the\n   message ID (with a separating \".\") by the gateway.\
    \  This will ensure\n   that multiple gateways generate the same message ID, while\
    \ also\n   ensuring that different newsgroups can be read independently.\n   \
    \   NOTE: It is preferable to have the gateway(s) cross-post the\n      article,\
    \ avoiding the issue altogether, but this may not be\n      feasible, especially\
    \ if one newsgroup is widespread and the other\n      is purely local.\n"
- title: 10.4.  Mail to and from News
  contents:
  - "10.4.  Mail to and from News\n   Gatewaying mail to news, and vice versa, is\
    \ the most obvious form of\n   news gatewaying.  It is common to set up gateways\
    \ between news and\n   mail rather too casually.\n   It is hard to go very wrong\
    \ in gatewaying news into a mailing list,\n   except for the non-trivial matter\
    \ of making sure that error reports\n   go to the local administration rather\
    \ than to the authors of news\n   articles.  (This requires attention to the \"\
    envelope address\" as well\n   as to the message headers.)  Doing the reverse\
    \ connection correctly\n   is much harder than it looks.\n      NOTE: In particular,\
    \ just feeding the mail message to \"inews -h\"\n      or the equivalent is NOT,\
    \ repeat NOT, adequate to gateway mail to\n      news.  Significant gatewaying\
    \ software is necessary to do it\n      right.  Not all headers of mail messages\
    \ conform to even the MAIL\n      specifications, never mind the stricter rules\
    \ for news.\n   It is useful to distinguish between two different forms of\n \
    \  mail-to-news gatewaying: gatewaying a mailing list into a newsgroup,\n   and\
    \ operating a \"post-by-mail\" service in which individual articles\n   can be\
    \ posted to a newsgroup by mailing them to a specific address.\n   In the first\
    \ case, the message is already being \"broadcast\", and the\n   situation can\
    \ be viewed as gatewaying one form of news into another.\n   The second case is\
    \ closer to that of a moderator posting submissions\n   to a moderated newsgroup.\n\
    \   In either case, the discussions in the preceding two sections are\n   relevant,\
    \ as is the Hippocratic Principle of Section 9.  However,\n   some additional\
    \ considerations are specific to mail-to-news\n   gatewaying.\n   As mentioned\
    \ in Section 6, point-to-point headers like To and Cc\n   SHOULD NOT appear as\
    \ such in news, although it is suggested that they\n   be transformed to \"X-\"\
    \ headers, e.g., X-To and X-Cc, to preserve\n   their information content for\
    \ possible use by readers or\n   troubleshooters.  The Received header is entirely\
    \ specific to MAIL\n   and SHOULD be deleted completely during gatewaying, except\
    \ perhaps\n   for the Received header supplied by the gateway host itself.\n \
    \  The Sender header is a tricky case, one where mailing-list and post-\n   by-mail\
    \ practice should differ.  For gatewaying mailing lists, the\n   mailing-list\
    \ host should be considered a relayer, and the From and\n   Sender headers supplied\
    \ in its transmissions left strictly untouched.\n   For post-by-mail, as for a\
    \ moderator posting a mailed submission, the\n   Sender header should reflect\
    \ the poster rather than the author.  If a\n   post-by-mail gateway receives a\
    \ message with its own Sender header,\n   it might wish to preserve the content\
    \ in an X-Sender header.\n   It will generally be necessary to transform between\
    \ mail's\n   In-Reply-To/References convention and news's References/See-Also\n\
    \   convention, to preserve correct semantics of cross references.  This\n   also\
    \ requires attention when going the other way, from news to mail.\n   See the\
    \ discussion of the difference in Section 6.5.\n"
- title: 10.5.  Gateway Administration
  contents:
  - "10.5.  Gateway Administration\n   Any news system will benefit from an attentive\
    \ administrator,\n   preferably assisted by automated monitoring for anomalies.\
    \  This is\n   particularly true of gateways.  Gateway software SHOULD be\n  \
    \ instrumented so that unusual occurrences, such as sudden massive\n   surges\
    \ in traffic, are reported promptly.  It is desirable, in fact,\n   to go further:\
    \ gateway software SHOULD endeavor to limit damage in\n   the event that the administrator\
    \ does not respond promptly.\n      NOTE: For example, software might limit the\
    \ gatewaying rate by\n      queueing incoming traffic and emptying the queue at\
    \ a finite\n      maximum rate (well below the maximum that the host is capable\
    \ of!)\n      that is set by the administrator and is not raised automatically.\n\
    \   Traffic gatewayed into a news network SHOULD include a suitable\n   header,\
    \ perhaps X-Gateway-Administrator, giving an electronic address\n   that can be\
    \ used to report problems.  This SHOULD be an address that\n   goes directly to\
    \ a human, and not to a \"routine administrative\n   issues\" mailbox that is\
    \ examined only occasionally, since the point\n   is to be able to reach the administrator\
    \ quickly in an emergency.\n   Gateway administrators SHOULD arrange substitutes\
    \ to cover gateway\n   operation (with suitable redirection of mail) when they\
    \ are on\n   vacation, etc.\n"
- title: 11.  Security and Related Issues
  contents:
  - "11.  Security and Related Issues\n   Although the interchange format itself raises\
    \ no significant security\n   issues, the wider context does.\n"
- title: 11.1.  Leakage
  contents:
  - "11.1.  Leakage\n   The most obvious form of security problem with news is \"\
    leakage\" of\n   articles that are intended to have only restricted circulation.\
    \  The\n   flooding algorithm is EXTREMELY good at finding any path by which\n\
    \   articles can leave a subnet with supposedly restrictive boundaries.\n   Substantial\
    \ administrative effort is required to ensure that local\n   newsgroups remain\
    \ local, unless connections to the outside world are\n   tightly restricted.\n\
    \   A related problem is that the sendme control message can be used to\n   ask\
    \ for any article by its message ID.  The usefulness of this has\n   declined\
    \ as message-ID generation algorithms have become less\n   predictable, but it\
    \ remains a potential problem for \"secure\"\n   newsgroups.  Hosts with such\
    \ newsgroups may wish to disable the\n   sendme control message entirely.\n  \
    \ The sendsys, version, and whogets control messages also allow\n   \"outsiders\"\
    \ to request information from \"inside\", which may reveal\n   details of internal\
    \ topology (etc.)  that are considered\n   confidential.  (Note that at least\
    \ limited openness about such\n   matters may be a condition of membership in\
    \ such networks, e.g.,\n   Usenet.)\n   Organizations wishing to control these\
    \ forms of leakage are strongly\n   advised to designate a small number of \"\
    official gateway\" hosts to\n   handle all news exchange with the outside world,\
    \ so that a bounded\n   amount of administrative effort is needed to control propagation\
    \ and\n   eliminate problems.  Attempts to keep news out entirely, by refusing\n\
    \   to support an official gateway, typically result in large numbers of\n   unofficial\
    \ partial gateways appearing over time.  Such a\n   configuration is much more\
    \ difficult to troubleshoot.\n   A somewhat related problem is the possibility\
    \ of proprietary material\n   being disclosed unintentionally by a poster who\
    \ does not realize how\n   far his words will propagate, either from sheer misunderstanding\
    \ or\n   because of errors made (by human or software) in followup\n   preparation.\
    \  There is little that can be done about this except\n   education.\n"
- title: 11.2.  Attacks
  contents:
  - "11.2.  Attacks\n   Although the limitations of the medium restrict what can be\
    \ done to\n   attack a host via news, some possibilities exist, most of them\n\
    \   problems news shares with mail.\n   If reading agents are careless about transmitting\
    \ non-printable\n   characters to output devices, malicious posters may post articles\n\
    \   containing control sequences (\"letterbombs\") meant to have various\n   destructive\
    \ effects on output devices.  Possible effects depend on\n   the device, but they\
    \ can include hardware damage (e.g., by repeated\n   writing of values into configuration\
    \ memories that can tolerate only\n   a limited number of write cycles) and security\
    \ violation (e.g., by\n   reprogramming function keys potentially used by privileged\
    \ readers).\n   A more sophisticated variation on the letterbomb is inclusion\
    \ of\n   \"Trojan horses\" in programs.  Obviously, readers must be cautious\n\
    \   about using software found in news, but more subtly, reading agents\n   must\
    \ also exercise care.  MIME messages can include material that is\n   executable\
    \ in some sense, such as PostScript documents (which are\n   programs!), and letterbombs\
    \ may be introduced into such material.\n   Given the presence of finite resources\
    \ and other software\n   limitations, some degree of system disruption can be\
    \ achieved by\n   posting otherwise-innocent material in great volume, either\
    \ in single\n   huge articles (see Section 4.6) or in a stream of modest-sized\n\
    \   articles.  (Some would say that the steady growth of Usenet volume\n   constitutes\
    \ a subtle and unintentional attack of the latter type;\n   certainly it can have\
    \ disruptive effects if administrators are\n   inattentive.)  Systems need some\
    \ ability to cope with surges, because\n   single huge articles occur occasionally\
    \ as the result of software\n   error, innocent misunderstanding, or deliberate\
    \ malice; and downtime\n   at upstream hosts can cause droughts, followed by floods,\
    \ of\n   legitimate articles.  (There is also a certain amount of normal\n   variation;\
    \ for example, Usenet traffic is noticeably lighter on\n   weekends and during\
    \ Christmas holidays, and rises noticeably at the\n   start of the school term\
    \ of North American universities.)  However, a\n   site that normally receives\
    \ little traffic may be quite vulnerable to\n   \"swamping\" attack if its software\
    \ is insufficiently careful.\n   In general, careless implementation may open\
    \ doors that are not\n   intrinsic to news.  In particular, implementation of\
    \ control messages\n   (see Sections 6.6 and 7) and unbatchers (see Sections 8.1\
    \ and 8.2)\n   via a command interpreter requires substantial precautions to ensure\n\
    \   that only the intended capabilities are available.  Care must also be\n  \
    \ taken that article-supplied text is not fed to programs that have\n   escapes\
    \ to command interpreters.\n   Finally, there is considerable potential for malice\
    \ in the sendsys,\n   version, and whogets control messages.  They are not harmful\
    \ to the\n   hosts receiving them as news, but they can be used to enlist those\n\
    \   hosts (by the thousands) as unwitting allies in a mail-swamping\n   attack\
    \ on a victim who may not even receive news.  The precautions\n   discussed in\
    \ Section 7.5 can reduce the potential for such attacks\n   considerably, but\
    \ the hazard cannot be eliminated as long as these\n   control messages exist.\n"
- title: 11.3.  Anarchy
  contents:
  - "11.3.  Anarchy\n   The highly distributed nature of news propagation, and the\
    \ lack of\n   adequate authentication protocols (especially for use over the less-\n\
    \   interactive transport mechanisms such as UUCP), make article forgery\n   relatively\
    \ straightforward.  It may be possible to at least track a\n   forgery to its\
    \ source, once it is recognized as such, but clever\n   forgers can make even\
    \ that relatively difficult.  The assumption that\n   forgeries will be recognized\
    \ as such is also not to be taken for\n   granted; readers are notoriously prone\
    \ to blindly assuming\n   authenticity.  If a forged article's initial path list\
    \ includes the\n   relayer name of the supposed poster's host, the article will\
    \ never be\n   sent to that host, and the alleged author may learn about the forgery\n\
    \   secondhand or not at all.\n   A particularly noxious form of forgery is the\
    \ forged \"cancel\" control\n   message.  Notably, it is relatively straightforward\
    \ to write software\n   that will automatically send out a (forged) cancel message\
    \ for any\n   article meeting some criterion, e.g., written by a specific author.\n\
    \   The authentication problems discussed in Section 7.1 make it\n   difficult\
    \ to solve this without crippling cancel's important\n   functionality.\n   A\
    \ related problem is the possibility of disagreements over newsgroup\n   creation,\
    \ on networks where such things are not decided by central\n   authorities.  There\
    \ have been cases of \"rmgroup wars\", where one\n   poster persistently sends\
    \ out newgroup messages to create a newsgroup\n   and another, equally persistently,\
    \ sends out rmgroup messages asking\n   that it be removed.  This is not particularly\
    \ damaging, if relayers\n   are configured to be cautious, but it can cause serious\
    \ confusion\n   among innocent third parties who just want to know whether or\
    \ not\n   they can use the newsgroup for communication.\n"
- title: 11.4.  Liability
  contents:
  - "11.4.  Liability\n   News shares the legal uncertainty surrounding other forms\
    \ of\n   electronic communication: what rules apply to this new medium of\n  \
    \ information exchange?  News is a particularly problematic case\n   because it\
    \ is a broadcast medium rather than a point-to-point one\n   like mail, and analogies\
    \ to older forms of communication are\n   particularly weak.\n   Are news-carrying\
    \ hosts common carriers, like the phone companies,\n   providing communications\
    \ paths without having either authority over\n   or responsibility for content?\
    \  Or are they publishers, responsible\n   for the content regardless of whether\
    \ they are aware of it or not?\n   Or something in between?  Such questions are\
    \ particularly significant\n   when the content is technically criminal, e.g.,\
    \ some types of\n   sexually oriented material in some jurisdictions, in which\
    \ case\n   ignorance of its presence may not be an adequate defense.\n   Even\
    \ in milder situations such as libel or copyright violation, the\n   responsibilities\
    \ of the poster, his host, and other hosts carrying\n   the traffic are unclear.\
    \  Note, in particular, the problems arising\n   when the article is a forgery,\
    \ or when the alleged author claims it\n   is a forgery but cannot prove this.\n"
- title: 12.  References
  contents:
  - "12.  References\n   [ISO/IEC9899]  \"Information technology - Programming Language\
    \ C\",\n                  ISO/IEC 9899:1990 {more recently 9899:1999}, 1990.\n\
    \   [Metamail]     Borenstein, N.,\n                  <http://ftp.funet.fi/pub/unix/mail/metamail/ANNOUNCE>,\n\
    \                  February 1994.\n   [RFC821]       Postel, J., \"Simple Mail\
    \ Transfer Protocol\", STD 10,\n                  RFC 821, August 1982.\n   [RFC822]\
    \       Crocker, D., \"STANDARD FOR THE FORMAT OF ARPA INTERNET\n            \
    \      TEXT MESSAGES\", STD 11, RFC 822, August 1982.\n   [RFC850]       Horton,\
    \ M., \"Standard for interchange of Usenet\n                  messages\", RFC\
    \ 850, June 1983.\n   [RFC977]       Kantor, B. and P. Lapsley, \"Network News\
    \ Transfer\n                  Protocol - A Proposed Standard for the Stream-Based\n\
    \                  Transmission of News\", RFC 977, February 1986.\n   [RFC1036]\
    \      Horton, M. and R. Adams, \"Standard for interchange of\n              \
    \    USENET Messages\", RFC 1036, December 1987.\n   [RFC1123]      Braden, R.,\
    \ Ed., \"Requirements for Internet Hosts -\n                  Application and\
    \ Support\", STD 3, RFC 1123,\n                  October 1989.\n   [RFC1341] \
    \     Borenstein, N. and N. Freed, \"MIME (Multipurpose\n                  Internet\
    \ Mail Extensions): Mechanisms for Specifying\n                  and Describing\
    \ the Format of Internet Message Bodies\",\n                  RFC 1341, June 1992.\n\
    \   [RFC1342]      Moore, K., \"Representation of Non-ASCII Text in\n        \
    \          Internet Message Headers\", RFC 1342, June 1992.\n   [RFC1345]    \
    \  Simonsen, K., \"Character Mnemonics and Character\n                  Sets\"\
    , RFC 1345, June 1992.\n   [RFC1413]      St. Johns, M., \"Identification Protocol\"\
    , RFC 1413,\n                  February 1993.\n   [RFC1456]      Vietnamese Standardization\
    \ Working Group, \"Conventions\n                  for Encoding the Vietnamese\
    \ Language\", RFC 1456,\n                  May 1993.\n   [RFC1544]      Rose,\
    \ M., \"The Content-MD5 Header Field\", RFC 1544,\n                  November\
    \ 1993.\n   [RFC1896]      Resnick, P. and A. Walker, \"The text/enriched MIME\n\
    \                  Content-type\", RFC 1896, February 1996.\n   [RFC2045]    \
    \  Freed, N. and N. Borenstein, \"Multipurpose Internet\n                  Mail\
    \ Extensions (MIME) Part One: Format of Internet\n                  Message Bodies\"\
    , RFC 2045, November 1996.\n   [RFC2046]      Freed, N. and N. Borenstein, \"\
    Multipurpose Internet\n                  Mail Extensions (MIME) Part Two: Media\
    \ Types\",\n                  RFC 2046, November 1996.\n   [RFC2047]      Moore,\
    \ K., \"MIME (Multipurpose Internet Mail\n                  Extensions) Part Three:\
    \ Message Header Extensions for\n                  Non-ASCII Text\", RFC 2047,\
    \ November 1996.\n   [RFC2049]      Freed, N. and N. Borenstein, \"Multipurpose\
    \ Internet\n                  Mail Extensions (MIME) Part Five: Conformance Criteria\n\
    \                  and Examples\", RFC 2049, November 1996.\n   [RFC2822]    \
    \  Resnick, P., Ed., \"Internet Message Format\", RFC 2822,\n                \
    \  April 2001.\n   [RFC3977]      Feather, C., \"Network News Transfer Protocol\
    \ (NNTP)\",\n                  RFC 3977, October 2006.\n   [RFC5322]      Resnick,\
    \ P., Ed., \"Internet Message Format\", RFC 5322,\n                  October 2008.\n\
    \   [RFC5536]      Murchison, K., Ed., Lindsey, C., and D. Kohn, \"Netnews\n \
    \                 Article Format\", RFC 5536, November 2009.\n   [RFC5537]   \
    \   Allbery, R., Ed., and C. Lindsey, \"Netnews\n                  Architecture\
    \ and Protocols\", RFC 5537, November 2009.\n   [Sanderson]    David Sanderson,\
    \ Smileys, O'Reilly & Associates Ltd.,\n                  1993.\n   [UUCP]   \
    \      Tim O'Reilly and Grace Todino, Managing UUCP and\n                  Usenet,\
    \ O'Reilly & Associates Ltd., January 1992.\n   [X3.4]         \"American National\
    \ Standard for Information Systems -\n                  Coded Character Sets -\
    \ 7-Bit American National\n                  Standard Code for Information Interchange\
    \ (7-Bit\n                  ASCII)\", ANSI X3.4, March 1986.\n"
- title: Appendix A.  Archaeological Notes
  contents:
  - 'Appendix A.  Archaeological Notes

    '
- title: A.1.  "A News" Article Format
  contents:
  - "A.1.  \"A News\" Article Format\n   The obsolete \"A News\" article format consisted\
    \ of exactly five lines\n   of header information, followed by the body.  For\
    \ example:\n      Aeagle.642\n      news.misc\n      cbosgd!mhuxj!mhuxt!eagle!jerry\n\
    \      Fri Nov 19 16:14:55 1982\n      Usenet Etiquette - Please Read\n      body\n\
    \      body\n      body\n   The first line consisted of an \"A\" followed by an\
    \ article ID\n   (analogous to a message ID and used for similar purposes).  The\n\
    \   second line was the list of newsgroups.  The third line was the path.\n  \
    \ The fourth was the date, in the format above (all fields fixed\n   width), resembling\
    \ an Internet date but not quite the same.  The\n   fifth was the subject.\n \
    \  This format is documented for archaeological purposes only.  Do not\n   generate\
    \ articles in this format.\n"
- title: A.2.  Early "B News" Article Format
  contents:
  - "A.2.  Early \"B News\" Article Format\n   This obsolete pseudo-Internet article\
    \ format, used briefly during the\n   transition between the A News format and\
    \ the modern format, followed\n   the general outline of a MAIL message but with\
    \ some non-standard\n   headers.  For example:\n      From: cbosgd!mhuxj!mhuxt!eagle!jerry\
    \ (Jerry Schwarz)\n      Newsgroups: news.misc\n      Title: Usenet Etiquette\
    \ -- Please Read\n      Article-I.D.: eagle.642\n      Posted: Fri Nov 19 16:14:55\
    \ 1982\n      Received: Fri Nov 19 16:59:30 1982\n      Expires: Mon Jan 1 00:00:00\
    \ 1990\n      body\n      body\n      body\n   The From header contained the information\
    \ now found in the Path\n   header, plus possibly the full name now typically\
    \ found in the From\n   header.  The Title header contained what is now the Subject\
    \ content.\n   The Posted header contained what is now the Date content.  The\n\
    \   Article-I.D. header contained an article ID, analogous to a message\n   ID\
    \ and used for similar purposes.  The Newsgroups and Expires headers\n   were\
    \ approximately as they are now.  The Received header contained\n   the date when\
    \ the latest relayer to process the article first saw it.\n   All dates were in\
    \ the above format, with all fields fixed width,\n   resembling an Internet date\
    \ but not quite the same.\n   This format is documented for archaeological purposes\
    \ only.  Do not\n   generate articles in this format.\n"
- title: A.3.  Obsolete Headers
  contents:
  - "A.3.  Obsolete Headers\n   Early versions of news software following the modern\
    \ format sometimes\n   generated headers like the following:\n      Relay-Version:\
    \ version B 2.10 2/13/83; site cbosgd.UUCP\n      Posting-Version: version B 2.10\
    \ 2/13/83; site eagle.UUCP\n      Date-Received: Friday, 19-Nov-82 16:59:30 EST\n\
    \   Relay-Version contained version information about the relayer that\n   last\
    \ processed the article.  Posting-Version contained version\n   information about\
    \ the posting agent that posted the article.  Date-\n   Received contained the\
    \ date when the last relayer to process the\n   article first saw it (in a slightly\
    \ nonstandard format).\n   These headers are documented for archaeological purposes\
    \ only.  Do\n   not generate articles using them.\n"
- title: A.4.  Obsolete Control Messages
  contents:
  - "A.4.  Obsolete Control Messages\n   There once was a senduuname control message,\
    \ resembling sendsys but\n   requesting transmission of the list of hosts to which\
    \ the receiving\n   host had UUCP connections.  This rapidly ceased to be of much\
    \ use,\n   and many organizations consider information about their internal\n\
    \   connectivity to be confidential.\n   Historically, a checkgroups body consisting\
    \ of one or two lines, the\n   first of the form \"-n newsgroup\", caused checkgroups\
    \ to apply to only\n   that single newsgroup.  This form is documented for archaeological\n\
    \   purposes only; do not use it.\n   Historically, an article posted to a newsgroup\
    \ whose name had exactly\n   three components of which the third was \"ctl\" signified\
    \ that article\n   was to be taken as a control message.  The Subject header specified\n\
    \   the actions in the same way the Control header does now.  This form\n   is\
    \ documented for archaeological purposes only; do not use it; do not\n   implement\
    \ it.\n"
- title: Appendix B.  A Quick Tour of MIME
  contents:
  - "Appendix B.  A Quick Tour of MIME\n   (The editor wishes to thank Luc Rooijakkers;\
    \ most of this appendix is\n   a lightly edited version of a summary he kindly\
    \ supplied.)\n   MIME (Multipurpose Internet Mail Extensions) is an upward-compatible\n\
    \   set of extensions to [RFC822], currently documented in [RFC2045],\n   [RFC2046],\
    \ and [RFC2047].  This appendix summarizes these documents.\n   See the MIME RFCs\
    \ for more information; they are very readable.\n      UNRESOLVED ISSUE: These\
    \ RFC numbers (here and elsewhere in this\n      Draft) need updating when the\
    \ new MIME RFCs come out {now\n      resolved!}.\n   MIME defines the following\
    \ new headers:\n      MIME-Version\n      Content-Type\n      Content-Transfer-Encoding\n\
    \      Content-ID\n      Content-Description\n   The MIME-Version header is mandatory\
    \ for all messages conforming to\n   the MIME specification and carries the version\
    \ number of the MIME\n   specification.  Example:\n      MIME-Version: 1.0\n \
    \  The Content-Type header indicates the content type of the message.\n   Content\
    \ types are split into a top-level type and a subtype,\n   separated by a slash.\
    \  Auxiliary information can also be supplied,\n   using an attribute-value notation.\
    \  Example:\n      Content-Type: text/plain; charset=us-ascii\n   (In the absence\
    \ of a Content-Type header this is in fact the default\n   content type.)\n  \
    \ Important type/subtype combinations are:\n   text/plain              Plain text,\
    \ possibly in a non-ASCII character\n                           set.\n   text/enriched\
    \           A very simple wordprocessor-like language\n                      \
    \     supporting character attributes (e.g.,\n                           underlining),\
    \ justification control, and\n                           multiple character sets.\
    \  (This proposal has\n                           gone through several iterations\
    \ and has\n                           recently split off from the main MIME RFCs\n\
    \                           into a separate document [RFC1896].)\n   message/rfc822\
    \          A mail message conforming to a slightly\n                         \
    \  relaxed version of [RFC822].\n   message/partial         Part of a message\
    \ (supporting the transparent\n                           splitting and joining\
    \ of messages when they\n                           are too large to be handled\
    \ by some transport\n                           agent).\n   message/external-body\
    \   A message whose body is external.  Possible\n                           access\
    \ methods include via mail, FTP, local\n                           file, etc.\n\
    \   multipart/mixed         A message whose body consists of multiple\n      \
    \                     parts, possibly of different types, intended\n         \
    \                  to be viewed in serial order.  Each part\n                \
    \           looks like an [RFC822] message, consisting of\n                  \
    \         headers and a body.  Most of the [RFC822]\n                        \
    \   headers have no defined semantics for body\n                           parts.\n\
    \   multipart/parallel      Likewise, except that the parts are intended\n   \
    \                        to be viewed in parallel (on user agents that\n     \
    \                      support it).\n   multipart/alternative   Likewise, except\
    \ that the parts are intended\n                           to be semantically equivalent\
    \ such that the\n                           part that best matches the capabilities\
    \ of\n                           the environment should be displayed.  For\n \
    \                          example, a message may include plain-text,\n      \
    \                     enriched-text, and postscript versions of\n            \
    \               some document.\n   multipart/digest        A variant of multipart/mixed\
    \ especially\n                           intended for message digests (the default\n\
    \                           type of the parts is message/rfc822 instead\n    \
    \                       of text/plain, saving on the number of\n             \
    \              headers for the parts).\n   application/postscript  A PostScript\
    \ document.  (PostScript is a\n                           trademark of Adobe.)\n\
    \   Other top-level types exist for still images, audio, and video\n   samples.\n\
    \   Some of the above types require the ability to transport binary data.\n  \
    \ Since the existing message systems usually do not support this, MIME\n   provides\
    \ a Content-Transfer-Encoding header to indicate the kind of\n   encoding used.\
    \  The possible encodings are:\n   7bit              No encoding; the data consists\
    \ of short (less than\n                     1000 characters) lines of 7-bit ASCII\
    \ data,\n                     delimited by EOL sequences.  This is the default\n\
    \                     encoding.\n   8bit              Like 7bit, except that bytes\
    \ with the high-order\n                     bit set may be present.  Many transmission\
    \ paths\n                     are incapable of carrying messages that use this\n\
    \                     encoding.\n   binary            No encoding; any sequence\
    \ of bytes may be present.\n                     Many transmission paths are incapable\
    \ of carrying\n                     messages that use this encoding.\n   base64\
    \            The data is encoded by representing every group of\n            \
    \         3 bytes as 4 characters from the alphabet\n                     \"A-Za-z0-9+/\"\
    , which was chosen for its high\n                     robustness through mail\
    \ gateways (the alphabet used\n                     by uuencode does not survive\
    \ ASCII-EBCDIC-ASCII\n                     translations).  In the final group\
    \ of 4 characters,\n                     \"=\" is used for those characters not\
    \ representing\n                     data bytes.  Line length is limited, and\
    \ EOLs in\n                     the encoded form are ignored.\n   quoted-printable\
    \  Any byte can be represented by a three-character\n                     \"=XX\"\
    \ sequence where the X's are uppercase\n                     hexadecimal digits.\
    \  Bytes representing printable\n                     7-bit US-ASCII characters\
    \ except \"=\" may be\n                     represented literally.  Tabs and blanks\
    \ may be\n                     represented literally if not at the end of a line.\n\
    \                     Line length is limited, and an EOL preceded by \"=\"\n \
    \                    was inserted for this purpose and is not present in\n   \
    \                  the original.\n   The base64 and quoted-printable encodings\
    \ are applied to data in\n   Internet canonical form, which means that any EOL\
    \ encoded as anything\n   but EOL must be an Internet canonical EOL: CR followed\
    \ by LF.\n   The Content-Description header allows further description of a body\n\
    \   part, analogous to the use of Subject for messages.\n   Finally, the Content-ID\
    \ header can be used to assign an\n   identification to body parts, analogous\
    \ to the assignment of\n   identifications to messages by Message-ID.\n   Note\
    \ that most of these headers are structured header fields, as\n   defined in [RFC822].\
    \  Consequently, comments are allowed in their\n   values.  The following is a\
    \ legal MIME header:\n      Content-Type: (a comment) text (yeah)   /\n      \
    \        plain    (and now some params:) ; charset= (guess what)\n         iso-8859-1\
    \ (we don't have iso-10646 yet, pity)\n      NOTE: Although the MIME specification\
    \ was developed for mail,\n      there is nothing precluding its use for news\
    \ as well.  While it\n      might simplify implementation to restrict the MIME\
    \ headers\n      somewhat, in the same way that other news headers (e.g., From)\
    \ are\n      restricted subsets of the [RFC822] originals, this would add yet\n\
    \      another divergence between two formats that ought to be as\n      compatible\
    \ as possible.  In the case of the MIME headers, there is\n      no body of existing\
    \ code posing compatibility concerns.  A full-\n      featured MIME reading agent\
    \ needs a full [RFC822] parser anyway,\n      to properly handle body parts of\
    \ types like message/rfc822, so\n      there is little gain from restricting MIME\
    \ headers.  Adopting the\n      MIME specification unchanged seems best.  However,\
    \ article-level\n      MIME headers must still comply with the overall news header\
    \ syntax\n      given in Section 4, so that news software that is NOT interested\n\
    \      in MIME need not contain a full [RFC822] parser.\n   \"MIME (Multipurpose\
    \ Internet Mail Extensions) Part Three: Message\n   Header Extensions for Non-ASCII\
    \ Text\" [RFC2047] addresses the problem\n   of non-ASCII characters in headers.\
    \  An example of a header using the\n   [RFC2047] mechanism is\n      From: =?ISO-8859-1?Q?Andr=E9_?=\
    \ Pirard <PIRARD@vm1.ulg.ac.be>\n   Such encodings are allowed in selected headers,\
    \ subject to the\n   restrictions listed in [RFC2047].\n   The MIME effort has\
    \ also produced an RFC defining a Content-MD5\n   header [RFC1544] containing\
    \ an MD5-based \"checksum\" of the contents\n   of an article or body part, giving\
    \ high confidence of detecting\n   accidental modifications to the contents.\n\
    \   The \"metamail\" software package [Metamail] helps provide MIME support\n\
    \   with minimal changes to mailers and may also be relevant to news\n   reading\
    \ agents.\n   The PEM (Privacy Enhanced Mail) effort is pursuing analogous\n \
    \  facilities to offer stronger guarantees against malicious\n   modifications,\
    \ unauthorized eavesdropping, and forgery.  This work\n   too may be applicable\
    \ to news, once it is reconciled with MIME (by\n   efforts now underway).\n"
- title: Appendix C.  Summary of Changes Since RFC 1036
  contents:
  - "Appendix C.  Summary of Changes Since RFC 1036\n   This Draft is much longer\
    \ than [RFC1036], so there is obviously much\n   change in content.  Much of this\
    \ is just increased precision and\n   rigor.  Noteworthy changes and additions\
    \ include:\n      + restrictions on article bodies (Section 4.3)\n      + all\
    \ references to MIME facilities\n      + size limits on articles\n      + precise\
    \ specification of Date-content syntax\n      + message IDs must never be re-used,\
    \ ever\n      + \"!\" is the only Path delimiter\n      + multiple moderators\
    \ in the Approved header\n      + rules on References trimming, and the _-_ mechanism\n\
    \      + generalization of the Xref rules\n      + multiple message IDs in Cancel\
    \ and Supersedes\n      + Also-Control\n      + See-Also\n      + Article-Names\n\
    \      + Article-Updates\n      + more precise rules for cancellation\n      +\
    \ cancellation authorization based on From, not Sender\n      + \"unmoderated\"\
    \ and descriptors in newgroup messages\n      + restrictive rules on handling\
    \ of sendsys and version messages\n      + the whogets control message\n     \
    \ + precise specification of checkgroups messages\n      + compression type preferably\
    \ specified out-of-band\n      + rules for encapsulating news in MIME mail\n \
    \     + tighter specification of relayer functioning (Section 9.1)\n      + the\
    \ \"newsmaster\" contact address\n      + rules for gatewaying (Section 10)\n\
    \      + discussion of security issues (Section 11)\n"
- title: Appendix D.  Summary of Completely New Features
  contents:
  - "Appendix D.  Summary of Completely New Features\n   Most of this Draft merely\
    \ documents existing practice, preferred\n   versions thereof, or straightforward\
    \ generalizations of it, but there\n   are a few outright inventions.  These are:\n\
    \      + the _-_ mechanism for References trimming\n      + Also-Control\n   \
    \   + See-Also\n      + Article-Names\n      + Article-Updates\n      + the whogets\
    \ control message\n"
- title: Appendix E.  Summary of Differences from RFCs 822 and 1123
  contents:
  - "Appendix E.  Summary of Differences from RFCs 822 and 1123\n   The following\
    \ are noteworthy differences between this Draft's\n   articles and MAIL messages:\n\
    \      + generally less-permissive header syntax\n      + notably, limited From\
    \ syntax\n      + MAIL header comments allowed in only a few contexts\n      +\
    \ slightly more restricted message-ID syntax\n      + several more mandatory headers\n\
    \      + duplicate headers forbidden\n      + References/See-Also versus In-Reply-To/References\
    \ (Section 6.5)\n      + case sensitivity in some contexts\n      + point-to-point\
    \ headers, e.g., To and Cc, forbidden (Section 6)\n      + several new headers\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Henry Spencer\n   SP Systems\n   Box 280 Stn. A\n   Toronto,\
    \ Ontario M5W1B2\n   Canada\n   EMail: henry@zoo.utoronto.ca\n"
