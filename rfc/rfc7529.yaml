- title: __initial_text__
  contents:
  - "     Non-Gregorian Recurrence Rules in the Internet Calendaring and\n       \
    \     Scheduling Core Object Specification (iCalendar)\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines extensions to the Internet Calendaring and\n\
    \   Scheduling Core Object Specification (iCalendar) (RFC 5545) to\n   support\
    \ use of non-Gregorian recurrence rules.  It also defines how\n   Calendaring\
    \ Extensions to WebDAV (CalDAV) (RFC 4791) servers and\n   clients can be extended\
    \ to support these new recurrence rules.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7529.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n   2.  Conventions Used in This Document . . . . . . . . . .\
    \ . . . .   3\n   3.  Overview  . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .   4\n   4.  Extended RRULE Property . . . . . . . . . . . . . . . . .\
    \ . .   6\n     4.1.  Skipping Invalid Dates  . . . . . . . . . . . . . . . .\
    \ .   6\n     4.2.  Handling Leap Months  . . . . . . . . . . . . . . . . . .\
    \   9\n     4.3.  Examples  . . . . . . . . . . . . . . . . . . . . . . . .  10\n\
    \   5.  Registering Calendar Systems  . . . . . . . . . . . . . . . .  13\n  \
    \ 6.  Compatibility . . . . . . . . . . . . . . . . . . . . . . . .  13\n   7.\
    \  Use with iTIP . . . . . . . . . . . . . . . . . . . . . . . .  14\n   8.  Use\
    \ with xCal . . . . . . . . . . . . . . . . . . . . . . . .  15\n   9.  Use with\
    \ jCal . . . . . . . . . . . . . . . . . . . . . . . .  15\n   10. Use with CalDAV\
    \ . . . . . . . . . . . . . . . . . . . . . . .  16\n     10.1.  CALDAV:supported-rscale-set\
    \ Property . . . . . . . . . .  17\n   11. Security Considerations . . . . . .\
    \ . . . . . . . . . . . . .  18\n   12. References  . . . . . . . . . . . . .\
    \ . . . . . . . . . . . .  18\n     12.1.  Normative References . . . . . . .\
    \ . . . . . . . . . . .  18\n     12.2.  Informative References . . . . . . .\
    \ . . . . . . . . . .  19\n   Appendix A.  xCal RELAX NG Schema Update  . . .\
    \ . . . . . . . . .  20\n   Acknowledgments . . . . . . . . . . . . . . . . .\
    \ . . . . . . . .  21\n   Authors' Addresses  . . . . . . . . . . . . . . . .\
    \ . . . . . . .  21\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The iCalendar [RFC5545] data format is in widespread use\
    \ to represent\n   calendar data.  iCalendar represents dates and times using\
    \ the\n   Gregorian calendar system only.  It does provide a way to use non-\n\
    \   Gregorian calendar systems via a \"CALSCALE\" property, but this has\n   never\
    \ been used.  However, there is a need to support at least non-\n   Gregorian\
    \ recurrence patterns to cover anniversaries, and many local,\n   religious, or\
    \ civil holidays based on non-Gregorian dates.\n   There are several disadvantages\
    \ to using the existing \"CALSCALE\"\n   property in iCalendar for implementing\
    \ non-Gregorian calendars:\n   1.  The \"CALSCALE\" property exists in the top-level\
    \ \"VCALENDAR\"\n       objects and thus applies to all components within that\
    \ object.\n       In today's multi-cultural society, that restricts the ability\
    \ to\n       mix events from different calendar systems within the same\n    \
    \   iCalendar object, e.g., it would prevent having both the\n       Gregorian\
    \ New Year and Chinese New Year in the same iCalendar\n       object.\n   2. \
    \ Time zone and daylight saving time rules are typically published\n       using\
    \ Gregorian calendar dates and rules (e.g., \"the 3rd Sunday\n       in March\"\
    ) and are thus converted to iCalendar \"VTIMEZONE\"\n       components using Gregorian\
    \ dates and recurrence rules.  This\n       results in the problem whereby one\
    \ component (the \"VTIMEZONE\") is\n       fixed to the Gregorian calendar system,\
    \ and another (a \"VEVENT\")\n       wants to use a different non-Gregorian calendar\
    \ scale; thus, the\n       single top-level \"CALSCALE\" property is again inadequate.\n\
    \   This specification solves these issues by allowing the \"CALSCALE\" to\n \
    \  remain set to Gregorian but redefining the \"RRULE\" recurrence rule\n   property\
    \ to accept new items, including one that allows non-Gregorian\n   calendar systems\
    \ to be used.  With this, all the \"DATE\", \"DATE-TIME\",\n   and \"PERIOD\"\
    \ values in the iCalendar object would remain specified\n   using the Gregorian\
    \ calendar system, but repeating patterns in other\n   calendar systems could\
    \ be defined.  It is then up to calendar user\n   agents and servers to map between\
    \ Gregorian and non-Gregorian\n   calendar systems in order to expand out recurrence\
    \ instances.  The\n   non-Gregorian recurrence rules can be used in any iCalendar\
    \ component\n   that allows the \"RRULE\" property to be specified, including\n\
    \   \"VTIMEZONE\" components (to allow for possible future use of non-\n   Gregorian\
    \ rules in published daylight saving time data).\n   This specification does not\
    \ itself define calendar systems; rather,\n   it utilizes the calendar system\
    \ registry defined by the Unicode\n   Consortium in their Common Locale Data Repository\
    \ (CLDR) project\n   [UNICODE.CLDR], as implemented in the Unicode (International\n\
    \   Components for Unicode (ICU)) Library [UNICODE.ICU].\n   This specification\
    \ makes the following updates:\n      It updates iCalendar [RFC5545], the XML\
    \ format for iCalendar\n      (xCal) [RFC6321], and the JSON format for iCalendar\
    \ (jCal)\n      [RFC7265], to extend the \"RRULE\" property definition.\n    \
    \  It clarifies use of the iCalendar Transport-Independent\n      Interoperability\
    \ Protocol (iTIP) [RFC5546] to specify how the\n      extended \"RRULE\" property\
    \ should be handled in iTIP messages.\n      It extends CalDAV [RFC4791] to specify\
    \ how the extended \"RRULE\"\n      property can be supported by CalDAV servers\
    \ and clients.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be\
    \ interpreted as described in\n   [RFC2119].\n   The notation used in this memo\
    \ is the ABNF notation of [RFC5234] as\n   used by iCalendar [RFC5545].  Any syntax\
    \ elements shown below that\n   are not explicitly defined in this specification\
    \ come from iCalendar\n   [RFC5545], iTIP [RFC5546], and CalDAV [RFC4791].\n \
    \  When XML element types in the namespaces \"DAV:\" and\n   \"urn:ietf:params:xml:ns:caldav\"\
    \ are referenced in this document\n   outside of the context of an XML fragment,\
    \ the string \"DAV:\" and\n   \"CALDAV:\" will be prefixed to the element type\
    \ names, respectively.\n   When a Gregorian calendar date is shown in text, it\
    \ will use the\n   format \"YYYYMMDD\", where \"YYYY\" is the 4-digit year, \"\
    MM\" the 2-digit\n   month, and \"DD\" the 2-digit day (this is the same format\
    \ used in\n   iCalendar [RFC5545]).  The Chinese calendar will be used as an\n\
    \   example of a non-Gregorian calendar for illustrative purposes.  When\n   a\
    \ Chinese calendar date is shown in text, it will use the format\n   \"{C}YYYYMM[L]DD\"\
    \ -- i.e., the same format as Gregorian but with a\n   \"{C}\" prefix, and an\
    \ optional \"L\" character after the month element\n   to indicate a leap month.\
    \  Similarly, {E} and {H} are used in other\n   examples as prefixes for Ethiopic\
    \ (Amete Mihret) and Hebrew dates,\n   respectively.  The \"{}\" prefix is used\
    \ for purely illustrative\n   purposes and never appears in actual dates used\
    \ in iCalendar or\n   related specifications.  Note that the Chinese calendar\
    \ years shown\n   in the examples are based on the Unicode (ICU) [UNICODE.ICU]\n\
    \   library's Chinese calendar epoch.  While there are several different\n   Chinese\
    \ calendar epochs in common use, the choice of one over another\n   does not impact\
    \ the actual calculation of the Gregorian equivalent\n   dates, provided conversion\
    \ is always done using the same epoch.\n"
- title: 3.  Overview
  contents:
  - "3.  Overview\n   In the Gregorian calendar system, each year is composed of a\
    \ fixed\n   number of months (12), with each month having a fixed number of days\n\
    \   (between 30 and 31), except for the second month (February), which\n   contains\
    \ either 28 or 29 days (the latter in a leap year).  Weeks are\n   composed of\
    \ 7 days, with day names Monday, Tuesday, Wednesday,\n   Thursday, Friday, Saturday,\
    \ and Sunday.  Years can have either 365 or\n   366 days (the latter in a leap\
    \ year).  The number of whole weeks in a\n   year is 52 (though the [ISO.8601.2004]\
    \ week numbering scheme used by\n   iCalendar [RFC5545] can have a numeric count\
    \ up to 53).\n   In iCalendar, the \"RECUR\" value type defines various fields\
    \ used to\n   express a recurrence pattern, and those fields are given limits\
    \ based\n   on those of the Gregorian calendar system.  Since other calendar\n\
    \   systems can have different limits and other behaviors that need to be\n  \
    \ accounted for, the maximum values for the elements in the \"RECUR\"\n   value\
    \ are not covered by this specification.\n   To generate a set of recurring instances\
    \ in a non-Gregorian calendar\n   system, the following principles are used:\n\
    \   1.  iCalendar data continues to use the \"GREGORIAN\" calendar system,\n \
    \      so all \"DATE\", \"DATE-TIME\", and \"PERIOD\" values continue to use\n\
    \       the Gregorian format and limits.\n   2.  The \"RRULE\" property is extended\
    \ to include an \"RSCALE\" element\n       in its value that specifies the calendar\
    \ system to use for the\n       recurrence pattern.  The existing elements of\
    \ the \"RRULE\" value\n       type are used, but modified to support different\
    \ upper limits,\n       based on the \"RSCALE\" value, as well as a modification\
    \ to month\n       numbers to allow a leap month to be specified.  Existing\n\
    \       requirements for the use of \"RRULE\" all still apply (e.g., the\n   \
    \    \"RRULE\" has to match the \"DTSTART\" value of the master instance).\n \
    \      Other recurrence properties such as \"RECURRENCE-ID\", \"RDATE\", and\n\
    \       \"EXDATE\" continue to use the Gregorian date format as \"CALSCALE\"\n\
    \       is unchanged.\n   When generating instances, the following procedure might\
    \ be used:\n   1.  Convert the \"DTSTART\" property value of the master recurring\n\
    \       component into the date and time components for the calendar\n       system\
    \ specified by the \"RSCALE\" element in the \"RRULE\" value.\n       This provides\
    \ the \"seed\" value for generating subsequent\n       recurrence instances.\n\
    \   2.  Iteratively generate instances using the \"RRULE\" value applied to\n\
    \       the year, month, and day components of the date in the new\n       calendar\
    \ system.\n   3.  For each generated instance, convert the dates and times back\n\
    \       from the non-Gregorian form into Gregorian and use those values\n    \
    \   for other properties such as \"RECURRENCE-ID\".\n   Consider the following\
    \ example for an event representing the Chinese\n   New Year:\n   DTSTART;VALUE=DATE:20130210\n\
    \   RRULE:RSCALE=CHINESE;FREQ=YEARLY\n   SUMMARY:Chinese New Year\n   To generate\
    \ instances, first the \"DTSTART\" value \"20130210\" is\n   converted into the\
    \ Chinese calendar system giving \"{C}46500101\".\n   Next, the year component\
    \ is incremented by one to give \"{C}46510101\",\n   and that is then converted\
    \ back into Gregorian as \"20140131\".\n   Additional instances are generated\
    \ by iteratively increasing the year\n   component in the Chinese date and converting\
    \ back to Gregorian.\n"
- title: 4.  Extended RRULE Property
  contents:
  - "4.  Extended RRULE Property\n   This specification extends the existing \"RRULE\"\
    \ iCalendar property\n   value to include a new \"RSCALE\" element that can be\
    \ used to indicate\n   the calendar system used for generating the recurrence\
    \ pattern.\n   When \"RSCALE\" is present, the other changes to \"RRULE\" are:\n\
    \   1.  Elements that include numeric values (e.g., \"BYYEARDAY\") have\n    \
    \   numeric ranges defined by the \"RSCALE\" value (i.e., in some\n       calendar\
    \ systems there might be more than 366 days in a year).\n   2.  Month numbers\
    \ can include an \"L\" suffix to indicate that the\n       specified month is\
    \ a leap month in the corresponding calendar\n       system (see Section 4.2).\n\
    \   3.  A \"SKIP\" element is added to define how \"missing\" instances are\n\
    \       handled (see Section 4.1).\n   The syntax for the \"RECUR\" value is modified\
    \ in the following\n   fashion:\n   ; recur-rule-part is extended from RFC 5545\n\
    \   recur-rule-part =/   (\"RSCALE\" \"=\" rscale)\n                      / (\"\
    SKIP\" \"=\" skip)\n   rscale          = (iana-token  ; A CLDR-registered calendar\
    \ system\n                                  ; name.\n                    / x-name)\
    \     ; A non-standard, experimental\n                                  ; calendar\
    \ system name.\n                                  ; Names are case insensitive,\n\
    \                                  ; but uppercase values are preferred.\n   skip\
    \            = (\"OMIT\" / \"BACKWARD\" / \"FORWARD\")\n                    ;\
    \ Optional, with default value \"OMIT\", and\n                    ; MUST NOT be\
    \ present unless \"RSCALE\" is present.\n   monthnum        = 1*2DIGIT  [\"L\"\
    ]\n                    ; Existing element modified to include a leap\n       \
    \             ; month indicator suffix.\n"
- title: 4.1.  Skipping Invalid Dates
  contents:
  - "4.1.  Skipping Invalid Dates\n   In every calendar system, only certain combinations\
    \ of day-of-month\n   and month values are valid for a given year, e.g., in the\
    \ Gregorian\n   calendar system, January 31st is valid but February 31st is not.\n\
    \   Similarly, February 29th is valid in a leap year but invalid in a\n   non-leap\
    \ year.  Other calendar systems can also include leap months\n   (see Section\
    \ 4.2), which vary from year to year.  This poses a\n   problem for recurring\
    \ events where the frequency of recurrence might\n   give rise to an invalid date.\
    \  For example, a recurring event that\n   starts on January 31st and is set to\
    \ repeat monthly will generate\n   invalid dates for months with fewer than 31\
    \ days.  The iCalendar\n   [RFC5545] specification requires recurrence rule generators\
    \ to ignore\n   any invalid dates generated when iterating the rule.  However,\
    \ that\n   behavior might be surprising to a calendar user born on a leap day\n\
    \   and whose birthday event only appears on their calendar every four\n   years.\
    \  There are common conventions used by humans to determine what\n   to do in\
    \ such cases, but those conventions can differ from calendar\n   system to calendar\
    \ system, as well as within the same calendar\n   system, depending on the nature\
    \ of the event.  Typically, humans will\n   expect the \"missing\" events to be\
    \ moved to an earlier or later\n   (valid) date.\n   This specification introduces\
    \ a new \"RRULE\" element, \"SKIP\", for use\n   only when the \"RSCALE\" element\
    \ is present.  The \"SKIP\" element allows\n   the calendar user agent to specify\
    \ new options for handling invalid\n   dates.\n      \"SKIP=OMIT\": this is the\
    \ default option and corresponds to the\n      existing iCalendar behavior of\
    \ simply ignoring the invalid date.\n      \"SKIP=BACKWARD\": when this option\
    \ is set, a date with an invalid\n      month is changed to the previous (valid)\
    \ month.  A date with an\n      invalid day-of-month is changed to the previous\
    \ (valid)\n      day-of-month.\n      \"SKIP=FORWARD\": when this option is set,\
    \ a date with an invalid\n      month is changed to the next (valid) month.  A\
    \ date with an\n      invalid day-of-month is changed to the next (valid) day-of-month.\n\
    \   Note that for both \"BACKWARD\" and \"FORWARD\", if the month is changed\n\
    \   and results in an invalid day-of-month, then the skip behavior will\n   be\
    \ reapplied as per the day-of-month rules, according to the\n   processing order\
    \ defined below.\n   The month and day-of-month skip behavior is only applied\
    \ at specific\n   points during the processing of an \"RRULE\" as determined by\
    \ the order\n   in which any \"BYxxx\" elements are processed.  The order is as\
    \ follows\n   (based on the \"RRULE\" element processing order defined in\n  \
    \ Section 3.3.10 of [RFC5545]):\n   o  BYMONTH\n   o  SKIP (for invalid month\
    \ only)\n   o  BYWEEKNO\n   o  BYYEARDAY\n   o  BYMONTHDAY\n   o  SKIP (for invalid\
    \ day)\n   o  BYDAY\n   o  BYHOUR\n   o  BYMINUTE\n   o  BYSECOND\n   o  BYSETPOS\n\
    \   o  COUNT\n   o  UNTIL\n   It is often possible to avoid having to deal with\
    \ invalid dates by\n   determining the real intent of a human user, e.g., a human\
    \ creating a\n   monthly recurring event that starts on January 31st likely intends\n\
    \   the event to occur on the last day of every month, in which case that\n  \
    \ could be encoded into an \"RRULE\" by using the \"BYMONTHDAY=-1\"\n   element.\n\
    \   Only a few types of recurrence patterns are likely to need the use of\n  \
    \ \"SKIP\".  The following is a list of some situations where it might be\n  \
    \ needed:\n   1.  The start date of the recurrence is a leap day in the specified\n\
    \       calendar system.\n   2.  The start date of the recurrence is in a leap\
    \ month in the\n       specified calendar system.\n   3.  The start date of the\
    \ recurrence has a day-of-month value greater\n       than the smallest day-of-month\
    \ value for any month in any year in\n       the specified calendar system.\n\
    \   4.  A \"BYMONTHDAY\" element in an \"RRULE\" has a day-of-month value\n  \
    \     greater than the smallest day-of-month value for any month in any\n    \
    \   year in the specified calendar system.\n   5.  A \"BYMONTH\" element in an\
    \ \"RRULE\" has a value corresponding to a\n       leap month in the specified\
    \ calendar system.\n   6.  A combination of a \"BYMONTHDAY\" element and a \"\
    BYMONTH\" element\n       in an \"RRULE\" has a value corresponding to a leap\
    \ day in the\n       specified calendar system.\n   7.  A \"BYYEARDAY\" element\
    \ in an \"RRULE\" has an absolute value greater\n       than the smallest number\
    \ of days in any year in the specified\n       calendar system.\n   8.  A \"BYWEEKNO\"\
    \ element in an \"RRULE\" has an absolute value greater\n       than the smallest\
    \ number of weeks in any year in the specified\n       calendar system.\n   Examples\
    \ of using \"SKIP\" for some common use cases appear in\n   Section 4.3.\n"
- title: 4.2.  Handling Leap Months
  contents:
  - "4.2.  Handling Leap Months\n   Leap months can occur in different calendar systems.\
    \  For such\n   calendar systems, the following rules are applied for \"identifying\"\
    \n   months:\n   1.  Numeric values 1 through N are used to identify regular,\
    \ non-\n       leap, months (where N is the number of months in a regular, non-\n\
    \       leap, year).\n   2.  The suffix \"L\" is added to the regular month number\
    \ to indicate a\n       leap month that follows the regular month, e.g., \"5L\"\
    \ is a leap\n       month that follows the 5th regular month in the year.\n  \
    \ Care has to be taken when mapping the month identifiers used here\n   with those\
    \ of any underlying calendar system library being used.  In\n   particular, the\
    \ Hebrew calendar system used by Unicode (ICU)\n   [UNICODE.ICU] uses a month\
    \ number scheme of 1 through 13, with month\n   6 being the leap month, and in\
    \ non-leap years, month 6 is skipped.\n   Thus, ICU months 1 through 5 map to\
    \ iCalendar months 1 through 5, ICU\n   month 6 maps to iCalendar month \"5L\"\
    , and ICU months 7 through 13 map\n   to iCalendar months 6 through 12.\n"
- title: 4.3.  Examples
  contents:
  - '4.3.  Examples

    '
- title: 4.3.1.  Chinese New Year
  contents:
  - "4.3.1.  Chinese New Year\n   Consider the following set of iCalendar properties\
    \ (from the example\n   above):\n   DTSTART;VALUE=DATE:20130210\n   RRULE:RSCALE=CHINESE;FREQ=YEARLY\n\
    \   SUMMARY:Chinese New Year\n   These define a recurring event for the Chinese\
    \ New Year, with the\n   first instance being the one in Gregorian year 2013.\n\
    \   The Chinese date corresponding to the first instance is\n   \"{C}46500101\"\
    .  The table below shows the initial instance and the\n   next four, each of which\
    \ is determined by adding the appropriate\n   amount to the year component of\
    \ the Chinese date.  Also shown is the\n   conversion back to the Gregorian date:\n\
    \                +--------------+--------------------------+\n               \
    \ | Chinese Date | Gregorian Date           |\n                +--------------+--------------------------+\n\
    \                | {C}46500101  | 20130210 - DTSTART value |\n               \
    \ | {C}46510101  | 20140131                 |\n                | {C}46520101 \
    \ | 20150219                 |\n                | {C}46530101  | 20160208    \
    \             |\n                | {C}46540101  | 20170128                 |\n\
    \                +--------------+--------------------------+\n"
- title: 4.3.2.  Ethiopic 13th Month
  contents:
  - "4.3.2.  Ethiopic 13th Month\n   Consider the following set of iCalendar properties:\n\
    \   DTSTART;VALUE=DATE:20130906\n   RRULE:RSCALE=ETHIOPIC;FREQ=MONTHLY;BYMONTH=13\n\
    \   SUMMARY:First day of 13th month\n   These define a recurring event for the\
    \ first day of the 13th month,\n   with the first instance being the one in Gregorian\
    \ year 2013.  While\n   there are a number of alternative ways of writing the\
    \ \"RRULE\" above\n   to achieve the same pattern of recurring dates, the one\
    \ above was\n   chosen to illustrate a \"BYMONTH\" value exceeding the limit of\
    \ 12,\n   previously described in iCalendar (Section 3.3.10 of [RFC5545]).\n \
    \  The Ethiopic date corresponding to the first instance is\n   \"{E}20051301\"\
    .  The table below shows the initial instance and the\n   next four, each of which\
    \ is determined by adding the appropriate\n   amount to the year component of\
    \ the Ethiopic date.  Also shown is the\n   conversion back to the Gregorian date:\n\
    \               +---------------+--------------------------+\n               |\
    \ Ethiopic Date | Gregorian Date           |\n               +---------------+--------------------------+\n\
    \               | {E}20051301   | 20130906 - DTSTART value |\n               |\
    \ {E}20061301   | 20140906                 |\n               | {E}20071301   |\
    \ 20150906                 |\n               | {E}20081301   | 20160906      \
    \           |\n               | {E}20091301   | 20170906                 |\n \
    \              +---------------+--------------------------+\n   Note that in this\
    \ example, the value of the \"BYMONTH\" component in\n   the \"RRULE\" matches\
    \ the Ethiopic month value and not the Gregorian\n   month.\n"
- title: 4.3.3.  Hebrew Anniversary Starting in a Leap Month
  contents:
  - "4.3.3.  Hebrew Anniversary Starting in a Leap Month\n   Consider the following\
    \ set of iCalendar properties:\n   DTSTART;VALUE=DATE:20140208\n   RRULE:RSCALE=HEBREW;FREQ=YEARLY;BYMONTH=5L;BYMONTHDAY=8;SKIP=FORWARD\n\
    \   SUMMARY:Anniversary\n   These define a recurring event for the 8th day of\
    \ the Hebrew month of\n   Adar I (the leap month identified by \"5L\"), with the\
    \ first instance\n   being the one in Gregorian year 2014.\n   The Hebrew date\
    \ corresponding to the first instance is\n   \"{H}577405L08\", which is a leap\
    \ month in year 5774.  The table below\n   shows the initial instance and the\
    \ next four, each of which is\n   determined by adding the appropriate amount\
    \ to the year component of\n   the Hebrew date, taking into account that only\
    \ year 5776 is a leap\n   year.  Thus, in other years the Hebrew month component\
    \ is adjusted\n   forward to month 6.  Also shown is the conversion back to the\n\
    \   Gregorian date:\n                +--------------+--------------------------+\n\
    \                | Hebrew Date  | Gregorian Date           |\n               \
    \ +--------------+--------------------------+\n                | {H}577405L08\
    \ | 20140208 - DTSTART value |\n                | {H}57750608  | 20150227    \
    \             |\n                | {H}577605L08 | 20160217                 |\n\
    \                | {H}57770608  | 20170306                 |\n               \
    \ | {H}57780608  | 20180223                 |\n                +--------------+--------------------------+\n"
- title: 4.3.4.  Gregorian Leap Day with SKIP
  contents:
  - "4.3.4.  Gregorian Leap Day with SKIP\n   Consider the following set of iCalendar\
    \ properties:\n   DTSTART;VALUE=DATE:20120229\n   RRULE:FREQ=YEARLY\n   SUMMARY:Anniversary\n\
    \   These define a recurring event for the 29th of February, 2012, in the\n  \
    \ standard iCalendar calendar scale -- Gregorian.  The standard\n   iCalendar\
    \ behavior is that non-existent dates in a recurrence set are\n   ignored.  Thus,\
    \ the properties above would only generate instances in\n   leap years (2016,\
    \ 2020, etc.), which is likely not what users expect.\n   The new \"RSCALE\" option\
    \ defined by this specification provides the\n   \"SKIP\" element, which can be\
    \ used to \"fill in\" the missing instances\n   in an appropriate fashion.  The\
    \ set of iCalendar properties below\n   does that:\n   DTSTART;VALUE=DATE:20120229\n\
    \   RRULE:RSCALE=GREGORIAN;FREQ=YEARLY;SKIP=FORWARD\n   SUMMARY:Anniversary\n\
    \   With these properties, the \"missing\" instances in non-leap years now\n \
    \  appear on the 1st of March in those years:\n      +-------------------------------+----------------------------+\n\
    \      | Instances (with SKIP=FORWARD) | Instances (without RSCALE) |\n      +-------------------------------+----------------------------+\n\
    \      | 20120229                      | 20120229 - DTSTART value   |\n      |\
    \ 20130301                      |                            |\n      | 20140301\
    \                      |                            |\n      | 20150301      \
    \                |                            |\n      | 20160229            \
    \          | 20160229                   |\n      | 20170301                  \
    \    |                            |\n      +-------------------------------+----------------------------+\n"
- title: 5.  Registering Calendar Systems
  contents:
  - "5.  Registering Calendar Systems\n   This specification uses the Unicode Consortium's\
    \ registry of calendar\n   systems [UNICODE.CLDR] to define valid values for the\
    \ \"RSCALE\"\n   element of an \"RRULE\".  Note that the underscore character\
    \ \"_\" is\n   never used in CLDR-based calendar system names.  New values can\
    \ be\n   added to this registry following Unicode Consortium rules.  It is\n \
    \  expected that many implementations of non-Gregorian calendars will\n   use\
    \ software libraries provided by Unicode (ICU) [UNICODE.ICU], and\n   hence it\
    \ makes sense to reuse their registry rather than creating a\n   new one.  \"\
    RSCALE\" values are case insensitive, but uppercase is\n   preferred.\n   CLDR\
    \ supports the use of \"alias\" values as alternative names for\n   specific calendar\
    \ systems.  These alias values can be used as\n   \"RSCALE\" values and are treated\
    \ the same as the equivalent CLDR\n   calendar system they are an alias for.\n\
    \   When using the CLDR data, calendar agents SHOULD take into account\n   the\
    \ \"deprecated\" value and use the alternative \"preferred\" calendar\n   system.\
    \  In particular, the \"islamicc\" calendar system is considered\n   deprecated\
    \ in favor of the \"islamic-civil\" calendar system.\n"
- title: 6.  Compatibility
  contents:
  - "6.  Compatibility\n   For calendar user agents that do not support the \"RSCALE\"\
    \ element, or\n   do not support the calendar system specified by the \"RSCALE\"\
    \ element\n   value, the following behaviors are possible when processing iCalendar\n\
    \   data:\n   1.  The calendar user agent can reject the entire iCalendar object\n\
    \       within which at least one iCalendar component uses the\n       unrecognized\
    \ \"RSCALE\" element or element value.\n   2.  The calendar user agent can reject\
    \ just the iCalendar components\n       containing an unrecognized \"RSCALE\"\
    \ element or element value.\n       Note that any overridden components associated\
    \ with those\n       rejected components MUST also be rejected (i.e., any other\n\
    \       components with the same \"UID\" property value as the one with the\n\
    \       unrecognized \"RSCALE\" element or element value).\n   3.  The calendar\
    \ user agent can fall back to a non-recurring behavior\n       for the iCalendar\
    \ component containing the unrecognized \"RSCALE\"\n       element or element\
    \ value (effectively ignoring the \"RRULE\"\n       property).  However, any overridden\
    \ components SHOULD be rejected\n       as they would represent \"orphaned\" instances\
    \ that would seem to\n       be out of place.\n   In general, the best choice\
    \ for a calendar user agent would be option\n   (2) above, as it would be the\
    \ least disruptive choice.  Note that\n   when processing iTIP [RFC5546] messages,\
    \ the manner of the rejection\n   is covered as discussed in the next section.\n"
- title: 7.  Use with iTIP
  contents:
  - "7.  Use with iTIP\n   iTIP [RFC5546] defines how iCalendar data can be sent between\n\
    \   calendar user agents to schedule calendar components between calendar\n  \
    \ users.  It is often not possible to know the capabilities of a\n   calendar\
    \ user agent to which an iTIP message is being sent, but iTIP\n   defines fallback\
    \ behavior in such cases.\n   For calendar user agents that do not support the\
    \ \"RSCALE\" element,\n   the following can occur when iTIP messages containing\
    \ an \"RSCALE\"\n   element are received:\n      The receiving calendar user agent\
    \ can reject the entire iTIP\n      message and return an iTIP reply with a \"\
    REQUEST-STATUS\" property\n      set to the \"3.1\" status code (as per Section\
    \ 3.6.14 of [RFC5546]).\n      The receiving calendar user agent can fall back\
    \ to a non-recurring\n      behavior for the calendar component (effectively ignoring\
    \ the\n      \"RRULE\" property) and return an iTIP reply with a \"REQUEST-STATUS\"\
    \n      property set to the \"2.3\", \"2.5\", \"2.8\", or \"2.10\" status codes\n\
    \      (as per Sections 3.6.4, 3.6.6, 3.6.9, or 3.6.11, respectively, of\n   \
    \   [RFC5546]).\n   For calendar user agents that support the \"RSCALE\" element\
    \ but do not\n   support the calendar system specified by the \"RSCALE\" element\
    \ value,\n   the following can occur:\n      The iTIP message SHOULD be rejected,\
    \ returning a \"REQUEST-STATUS\"\n      property set to the \"3.1\" status code\
    \ (as per Section 3.6.14 of\n      [RFC5546]).\n      If the iTIP message is accepted\
    \ and the calendar component treated\n      as non-recurring, an iTIP reply with\
    \ a \"REQUEST-STATUS\" property\n      set to the \"2.8\" or \"2.10\" status codes\
    \ (as per Sections 3.6.9 or\n      3.6.11, respectively, of [RFC5546]) SHOULD\
    \ be returned.\n   As noted in Section 6, the best choice is to reject the entire\
    \ iTIP\n   message.\n"
- title: 8.  Use with xCal
  contents:
  - "8.  Use with xCal\n   xCal [RFC6321] defines how iCalendar data is represented\
    \ in XML.\n   This specification extends the <recur> XML element in Section 3.6.10\n\
    \   of [RFC6321] in the following manner:\n   1.  A new <rscale> XML element is\
    \ defined as a child element of\n       <recur>.  The content of this element\
    \ MUST be a string whose\n       value is the \"RSCALE\" element value of the\
    \ \"RRULE\", with case\n       preserved.\n   2.  A new <skip> XML element is\
    \ defined as a child element of\n       <recur>.  The content of this element\
    \ MUST be a string whose\n       value is the \"SKIP\" element value of the \"\
    RRULE\", with case\n       preserved.\n   3.  The <bymonth> XML element is redefined\
    \ to support either numeric\n       or string values as its content (as per Section\
    \ 4.2).\n   Extensions to the RELAX NG schema in Appendix A of [RFC6321] are\n\
    \   defined in Appendix A of this document.\n   Example: the iCalendar \"RRULE\"\
    \ property:\n   RRULE:RSCALE=GREGORIAN;FREQ=YEARLY;SKIP=FORWARD\n   would be represented\
    \ in XML as:\n   <rrule>\n     <recur>\n       <rscale>GREGORIAN</rscale>\n  \
    \     <freq>YEARLY</freq>\n       <skip>FORWARD</skip>\n     </recur>\n   </rrule>\n"
- title: 9.  Use with jCal
  contents:
  - "9.  Use with jCal\n   jCal [RFC7265] defines how iCalendar data is represented\
    \ in JSON.\n   This specification extends the \"recur\" JSON object defined in\n\
    \   Section 3.6.10 of [RFC7265] in the following manner:\n   1.  A new \"rscale\"\
    \ child member is defined.  This MUST be a string\n       whose value is the \"\
    RSCALE\" element value of the \"RRULE\", with\n       case preserved.\n   2. \
    \ A new \"skip\" child member is defined.  This MUST be a string\n       whose\
    \ value is the \"SKIP\" element value of the \"RRULE\", with case\n       preserved.\n\
    \   3.  The \"bymonth\" child member is redefined to support either numeric\n\
    \       or string values.  If the \"BYMONTH\" element value is an integer,\n \
    \      then a numeric JSON value MUST be used.  If the \"BYMONTH\" element\n \
    \      value is an integer with the \"L\" suffix (as per Section 4.2),\n     \
    \  then a JSON string value MUST be used.\n   Example: the iCalendar \"RRULE\"\
    \ property:\n   RRULE:RSCALE=GREGORIAN;FREQ=YEARLY;SKIP=FORWARD\n   would be represented\
    \ in JSON as:\n   [\n     \"rrule\",\n     {},\n     \"recur\",\n     {\n    \
    \   \"rscale\": \"GREGORIAN\",\n       \"freq\": \"YEARLY\",\n       \"skip\"\
    : \"FORWARD\"\n     }\n   ]\n"
- title: 10.  Use with CalDAV
  contents:
  - "10.  Use with CalDAV\n   The CalDAV [RFC4791] calendar access protocol allows\
    \ clients and\n   servers to exchange iCalendar data.  In addition, CalDAV clients\
    \ are\n   able to query calendar data stored on the server, including time-\n\
    \   based queries.  Since an \"RSCALE\" element value determines the time\n  \
    \ ranges for recurring instances in a calendar component, CalDAV\n   servers need\
    \ to support it to interoperate with clients also using\n   the \"RSCALE\" element.\n\
    \   A CalDAV server advertises a CALDAV:supported-rscale-set Web\n   Distributed\
    \ Authoring and Versioning (WebDAV) property on calendar\n   home or calendar\
    \ collections if it supports use of the \"RSCALE\"\n   element as described in\
    \ this specification.  The server can advertise\n   a specific set of supported\
    \ calendar systems by including one or more\n   CALDAV:supported-rscale XML elements\
    \ within the\n   CALDAV:supported-rscale-set XML element.  If no\n   CALDAV:supported-rscale\
    \ XML elements are included in the WebDAV\n   property, then clients can try any\
    \ calendar system value but need to\n   be prepared for a failure when attempting\
    \ to store the calendar data.\n   Clients MUST NOT attempt to store iCalendar\
    \ data containing \"RSCALE\"\n   elements if the CALDAV:supported-rscale-set WebDAV\
    \ property is not\n   advertised by the server.\n   The server SHOULD return an\
    \ HTTP 403 response with a DAV:error\n   element containing a CALDAV:supported-rscale\
    \ XML element, if a client\n   attempts to store iCalendar data with an \"RSCALE\"\
    \ element value not\n   supported by the server.\n   It is possible for an \"\
    RSCALE\" value to be present in calendar data\n   on the server being accessed\
    \ by a client that does not support an\n   \"RSCALE\" element or its specified\
    \ value.  It is expected that\n   existing clients, unaware of \"RSCALE\", will\
    \ fail gracefully by\n   ignoring the calendar component, while still processing\
    \ other\n   calendar data on the server (as per option (2) in Section 6).\n"
- title: 10.1.  CALDAV:supported-rscale-set Property
  contents:
  - "10.1.  CALDAV:supported-rscale-set Property\n   Name:  supported-rscale-set\n\
    \   Namespace:  urn:ietf:params:xml:ns:caldav\n   Purpose:  Enumerates the set\
    \ of supported iCalendar \"RSCALE\" element\n      values supported by the server.\n\
    \   Protected:  This property MUST be protected and SHOULD NOT be\n      returned\
    \ by a PROPFIND allprop request (as defined in Section 14.2\n      of [RFC4918]).\n\
    \   Description:  See above.\n   Definition:\n   <!ELEMENT supported-rscale-set\
    \ (supported-rscale*)>\n   <!ELEMENT supported-rscale (#PCDATA)>\n   <!-- PCDATA\
    \ value: string - case insensitive but\n        uppercase preferred -->\n   Example:\n\
    \   <C:supported-rscale-set\n        xmlns:C=\"urn:ietf:params:xml:ns:caldav\"\
    >\n     <C:supported-rscale>GREGORIAN</C:supported-rscale>\n     <C:supported-rscale>CHINESE</C:supported-rscale>\n\
    \     <C:supported-rscale>ISLAMIC-CIVIL</C:supported-rscale>\n     <C:supported-rscale>HEBREW</C:supported-rscale>\n\
    \     <C:supported-rscale>ETHIOPIC</C:supported-rscale>\n   </C:supported-rscale-set>\n"
- title: 11.  Security Considerations
  contents:
  - "11.  Security Considerations\n   This specification does not introduce any additional\
    \ security\n   concerns beyond those described in [RFC5545], [RFC5546], and\n\
    \   [RFC4791].\n"
- title: 12.  References
  contents:
  - '12.  References

    '
- title: 12.1.  Normative References
  contents:
  - "12.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC4791]\
    \  Daboo, C., Desruisseaux, B., and L. Dusseault,\n              \"Calendaring\
    \ Extensions to WebDAV (CalDAV)\", RFC 4791,\n              March 2007, <http://www.rfc-editor.org/info/rfc4791>.\n\
    \   [RFC4918]  Dusseault, L., Ed., \"HTTP Extensions for Web Distributed\n   \
    \           Authoring and Versioning (WebDAV)\", RFC 4918, June 2007,\n      \
    \        <http://www.rfc-editor.org/info/rfc4918>.\n   [RFC5234]  Crocker, D.,\
    \ Ed. and P. Overell, \"Augmented BNF for Syntax\n              Specifications:\
    \ ABNF\", STD 68, RFC 5234, January 2008,\n              <http://www.rfc-editor.org/info/rfc5234>.\n\
    \   [RFC5545]  Desruisseaux, B., Ed., \"Internet Calendaring and\n           \
    \   Scheduling Core Object Specification (iCalendar)\", RFC\n              5545,\
    \ September 2009,\n              <http://www.rfc-editor.org/info/rfc5545>.\n \
    \  [RFC5546]  Daboo, C., Ed., \"iCalendar Transport-Independent\n            \
    \  Interoperability Protocol (iTIP)\", RFC 5546, December\n              2009,\
    \ <http://www.rfc-editor.org/info/rfc5546>.\n   [RFC6321]  Daboo, C., Douglass,\
    \ M., and S. Lees, \"xCal: The XML\n              Format for iCalendar\", RFC\
    \ 6321, August 2011,\n              <http://www.rfc-editor.org/info/rfc6321>.\n\
    \   [RFC7265]  Kewisch, P., Daboo, C., and M. Douglass, \"jCal: The JSON\n   \
    \           Format for iCalendar\", RFC 7265, May 2014,\n              <http://www.rfc-editor.org/info/rfc7265>.\n\
    \   [UNICODE.CLDR]\n              The Unicode Consortium, \"CLDR calendar.xml\
    \ Data\", Unicode\n              Consortium CLDR,\n              <http://www.unicode.org/repos/cldr/tags/latest/common/\n\
    \              bcp47/calendar.xml>.\n"
- title: 12.2.  Informative References
  contents:
  - "12.2.  Informative References\n   [ISO.8601.2004]\n              International\
    \ Organization for Standardization, \"Data\n              elements and interchange\
    \ formats - Information interchange\n              - Representation of dates and\
    \ times\", ISO Standard 8601,\n              December 2004.\n   [UNICODE.ICU]\n\
    \              \"International Components for Unicode\", April 2014,\n       \
    \       <http://site.icu-project.org>.\n"
- title: Appendix A.  xCal RELAX NG Schema Update
  contents:
  - "Appendix A.  xCal RELAX NG Schema Update\n   The following changes are made to\
    \ the RELAX NG schema defined in\n   Appendix A of [RFC6321].\n   # 3.3.10 RECUR\n\
    \   # This extension adds type-rscale and type-skip,\n   # and modifies type-bymonth\n\
    \   value-recur = element recur {\n       type-rscale?,\n       type-freq,\n \
    \      (type-until | type-count)?,\n       element interval {\n           xsd:positiveInteger\n\
    \       }?,\n       type-bysecond*,\n       type-byminute*,\n       type-byhour*,\n\
    \       type-byday*,\n       type-bymonthday*,\n       type-byyearday*,\n    \
    \   type-byweekno*,\n       type-bymonth*,\n       type-bysetpos*,\n       element\
    \ wkst { type-weekday }?,\n       type-skip?\n   }\n   type-rscale = element rscale\
    \ {\n       xsd:string\n   }\n   type-bymonth = element bymonth {\n       xsd:positiveInteger\
    \ |\n       xsd:string\n   }\n   type-skip = element skip {\n       \"OMIT\" |\n\
    \       \"BACKWARD\" |\n       \"FORWARD\"\n   }\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   Thanks to the following for feedback: Mark Davis, Mike Douglass,\n\
    \   Donald Eastlake, Peter Edberg, Marten Gajda, Philipp Kewisch, Barry\n   Leiba,\
    \ Jonathan Lennox, Ken Murchison, Arnaud Quillaud, Dave Thewlis,\n   and Umaoka\
    \ Yoshito.\n   This specification originated from work at the Calendaring and\n\
    \   Scheduling Consortium, which has helped with the development and\n   testing\
    \ of implementations.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Cyrus Daboo\n   Apple Inc.\n   1 Infinite Loop\n   Cupertino,\
    \ CA  95014\n   United States\n   EMail: cyrus@daboo.name\n   URI:   http://www.apple.com/\n\
    \   Gregory Yakushev\n   Google Inc.\n   Brandschenkestrasse 100\n   8002 Zurich\n\
    \   Switzerland\n   EMail: gyakushev@yahoo.com\n   URI:   http://www.google.com/\n"
