- title: __initial_text__
  contents:
  - '                         IP Version 6 over PPP

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   The Point-to-Point Protocol (PPP) [1] provides a standard method\
    \ of\n   encapsulating Network Layer protocol information over point-to-point\n\
    \   links.  PPP also defines an extensible Link Control Protocol, and\n   proposes\
    \ a family of Network Control Protocols (NCPs) for\n   establishing and configuring\
    \ different network-layer protocols.\n   This document defines the method for\
    \ transmission of IP Version 6 [2]\n   packets over PPP links as well as the Network\
    \ Control Protocol (NCP)\n   for establishing and configuring the IPv6 over PPP.\
    \ It also specifies\n   the method of forming IPv6 link-local addresses on PPP\
    \ links.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.     Introduction ..........................................\
    \    2\n        1.1.  Specification of Requirements .....................    2\n\
    \   2.     Sending IPv6 Datagrams ................................    2\n   3.\
    \     A PPP Network Control Protocol for IPv6 ...............    3\n   4.    \
    \ IPV6CP Configuration Options ..........................    4\n        4.1. \
    \ Interface-Identifier ..............................    4\n        4.2.  IPv6-Compression-Protocol..........................\
    \    9\n   5.     Stateless Autoconfiguration and Link-Local Addresses ..   10\n\
    \   6      Security Considerations ...............................   11\n   7\
    \      Acknowledgments .......................................   11\n   8    \
    \  Changes from RFC-2023 .................................   11\n   9      References\
    \ ............................................   12\n   10     Authors' Addresses\
    \ ....................................   13\n   11     Full Copyright Statement\
    \ ..............................   14\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   PPP has three main components:\n   1) A method for encapsulating\
    \ datagrams over serial links.\n   2) A Link Control Protocol (LCP) for establishing,\
    \ configuring, and\n     testing the data-link connection.\n   3) A family of\
    \ Network Control Protocols (NCPs) for establishing and\n     configuring different\
    \ network-layer protocols.\n   In order to establish communications over a point-to-point\
    \ link, each\n   end of the PPP link must first send LCP packets to configure\
    \ and test\n   the data link.  After the link has been established and optional\n\
    \   facilities have been negotiated as needed by the LCP, PPP must send\n   NCP\
    \ packets to choose and configure one or more network-layer\n   protocols.  Once\
    \ each of the chosen network-layer protocols has been\n   configured, datagrams\
    \ from each network-layer protocol can be sent\n   over the link.\n   In this\
    \ document, the NCP for establishing and configuring the IPv6\n   over PPP is\
    \ referred as the IPv6 Control Protocol (IPV6CP).\n   The link will remain configured\
    \ for communications until explicit LCP\n   or NCP packets close the link down,\
    \ or until some external event\n   occurs (power failure at the other end, carrier\
    \ drop, etc.).\n"
- title: 1.1.  Specification of Requirements
  contents:
  - "1.1.  Specification of Requirements\n   In this document, several words are used\
    \ to signify the requirements\n   of the specification.\n   The key words \"MUST\"\
    , \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD\
    \ NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document are to\
    \ be interpreted as described in [7].\n"
- title: 2.  Sending IPv6 Datagrams
  contents:
  - "2.  Sending IPv6 Datagrams\n   Before any IPv6 packets may be communicated, PPP\
    \ MUST reach the\n   Network-Layer Protocol phase, and the IPv6 Control Protocol\
    \ MUST\n   reach the Opened state.\n   Exactly one IPv6 packet is encapsulated\
    \ in the Information field of\n   PPP Data Link Layer frames where the Protocol\
    \ field indicates type\n   hex 0057 (Internet Protocol Version 6).\n   The maximum\
    \ length of an IPv6 packet transmitted over a PPP link is\n   the same as the\
    \ maximum length of the Information field of a PPP data\n   link layer frame.\
    \  PPP links supporting IPv6 MUST allow the\n   information field at least as\
    \ large as the minimum link MTU size\n   required for IPv6 [2].\n"
- title: 3.  A PPP Network Control Protocol for IPv6
  contents:
  - "3.  A PPP Network Control Protocol for IPv6\n   The IPv6 Control Protocol (IPV6CP)\
    \ is responsible for configuring,\n   enabling, and disabling the IPv6 protocol\
    \ modules on both ends of the\n   point-to-point link.  IPV6CP uses the same packet\
    \ exchange mechanism\n   as the Link Control Protocol (LCP).  IPV6CP packets may\
    \ not be\n   exchanged until PPP has reached the Network-Layer Protocol phase.\n\
    \   IPV6CP packets received before this phase is reached should be\n   silently\
    \ discarded.\n   The IPv6 Control Protocol is exactly the same as the Link Control\n\
    \   Protocol [1] with the following exceptions:\n     Data Link Layer Protocol\
    \ Field\n          Exactly one IPV6CP packet is encapsulated in the Information\n\
    \          field of PPP Data Link Layer frames where the Protocol field\n    \
    \      indicates type hex 8057 (IPv6 Control Protocol).\n     Code field\n   \
    \       Only Codes 1 through 7 (Configure-Request, Configure-Ack,\n          Configure-Nak,\
    \ Configure-Reject, Terminate-Request,\n          Terminate-Ack and Code-Reject)\
    \ are used.  Other Codes should\n          be treated as unrecognized and should\
    \ result in Code-Rejects.\n     Timeouts\n          IPV6CP packets may not be\
    \ exchanged until PPP has reached the\n          Network-Layer Protocol phase.\
    \  An implementation should be\n          prepared to wait for Authentication\
    \ and Link Quality\n          Determination to finish before timing out waiting\
    \ for a\n          Configure-Ack or other response.  It is suggested that an\n\
    \          implementation give up only after user intervention or a\n        \
    \  configurable amount of time.\n     Configuration Option Types\n          IPV6CP\
    \ has a distinct set of Configuration Options.\n"
- title: 4.  IPV6CP Configuration Options
  contents:
  - "4.  IPV6CP Configuration Options\n   IPV6CP Configuration Options allow negotiation\
    \ of desirable IPv6\n   parameters.  IPV6CP uses the same Configuration Option\
    \ format defined\n   for LCP [1], with a separate set of Options.  If a Configuration\n\
    \   Option is not included in a Configure-Request packet, the default\n   value\
    \ for that Configuration Option is assumed.\n   Up-to-date values of the IPV6CP\
    \ Option Type field are specified in\n   the most recent \"Assigned Numbers\"\
    \ RFC [4].  Current values are\n   assigned as follows:\n       1       Interface-Identifier\n\
    \       2       IPv6-Compression-Protocol\n   The only IPV6CP options defined\
    \ in this document are Interface-\n   Identifier and IPv6-Compression-Protocol.\
    \  Any other IPV6CP\n   configuration options that can be defined over time are\
    \ to be defined\n   in separate documents.\n"
- title: 4.1.  Interface-Identifier
  contents:
  - "4.1.  Interface-Identifier\n   Description\n     This Configuration Option provides\
    \ a way to negotiate a unique 64-\n     bit interface identifier to be used for\
    \ the address\n     autoconfiguration [3] at the local end of the link (see section\
    \ 5).\n     A Configure-Request MUST contain exactly one instance of the\n   \
    \  Interface-Identifier option [1].  The interface identifier MUST be\n     unique\
    \ within the PPP link; i.e.  upon completion of the\n     negotiation different\
    \ Interface-Identifier values are to be\n     selected for the ends of the PPP\
    \ link.  The interface identifier\n     MAY also be unique over a broader scope.\n\
    \     Before this Configuration Option is requested, an implementation\n     chooses\
    \ its tentative Interface-Identifier. The non-zero value of\n     the tentative\
    \ Interface-Identifier SHOULD be chosen such that the\n     value is both unique\
    \ to the link and, if possible, consistently\n     reproducible across initializations\
    \ of the IPV6CP finite state\n     machine (administrative Close and reOpen, reboots,\
    \ etc).  The\n     rationale for preferring a consistently reproducible unique\n\
    \     interface identifier to a completely random interface identifier is\n  \
    \   to provide stability to global scope addresses that can be formed\n     from\
    \ the interface identifier.\n     Assuming that interface identifier bits are\
    \ numbered from 0 to 63\n     in canonical bit order where the most significant\
    \ bit is the bit\n     number 0, the bit number 6 is the \"u\"  bit  (universal/local\
    \  bit\n     in  IEEE EUI-64 [5] terminology) which indicates whether or not the\n\
    \     interface identifier is based on a globally unique IEEE identifier\n   \
    \  (EUI-48  or EUI-64  [5])  (see  the  case  1  below).  It is set to\n     one\
    \ (1) if a globally unique IEEE identifier is  used  to  derive\n     the  interface\
    \ identifier, and it is set to zero (0) otherwise.\n     The following are methods\
    \ for choosing the tentative Interface\n     Identifier in the preference order:\n\
    \     1) If an IEEE global identifier (EUI-48 or EUI-64) is\n        available\
    \ anywhere on the node, it should be used to construct\n        the tentative\
    \ Interface-Identifier due to its uniqueness\n        properties.  When extracting\
    \ an IEEE global identifier from\n        another device on the node, care should\
    \ be taken to that the\n        extracted identifier is presented in canonical\
    \ ordering [8].\n        The only transformation from an EUI-64 identifier is\
    \ to invert\n        the \"u\" bit (universal/local bit in IEEE EUI-64 terminology).\n\
    \        For example, for a globally unique EUI-64 identifier of the\n       \
    \ form:\n   most-significant                                    least-significant\n\
    \   bit                                                               bit\n  \
    \ |0              1|1              3|3              4|4              6|\n   |0\
    \              5|6              1|2              7|8              3|\n   +----------------+----------------+----------------+----------------+\n\
    \   |cccccc0gcccccccc|cccccccceeeeeeee|eeeeeeeeeeeeeeee|eeeeeeeeeeeeeeee|\n  \
    \ +----------------+----------------+----------------+----------------+\n    \
    \    where \"c\" are the bits of the assigned company_id, \"0\" is the\n     \
    \   value of the universal/local bit to indicate global scope, \"g\"\n       \
    \ is group/individual bit, and \"e\" are the bits of the extension\n        identifier,\n\
    \        the IPv6 interface identifier would be of the form:\n   most-significant\
    \                                    least-significant\n   bit               \
    \                                                bit\n   |0              1|1 \
    \             3|3              4|4              6|\n   |0              5|6   \
    \           1|2              7|8              3|\n   +----------------+----------------+----------------+----------------+\n\
    \   |cccccc1gcccccccc|cccccccceeeeeeee|eeeeeeeeeeeeeeee|eeeeeeeeeeeeeeee|\n  \
    \ +----------------+----------------+----------------+----------------+\n    \
    \    The only change is inverting the value of the universal/local\n        bit.\n\
    \        In the case of a EUI-48 identifier, it is first converted to the\n  \
    \      EUI-64 format by inserting two bytes, with hexadecimal values of\n    \
    \    0xFF and 0xFE, in the middle of the 48 bit MAC (between the\n        company_id\
    \ and extension-identifier portions of the EUI-48\n        value).  For example,\
    \ for a globally unique 48 bit EUI-48\n        identifier of the form:\n   most-significant\
    \                   least-significant\n   bit                                \
    \              bit\n   |0              1|1              3|3              4|\n\
    \   |0              5|6              1|2              7|\n   +----------------+----------------+----------------+\n\
    \   |cccccc0gcccccccc|cccccccceeeeeeee|eeeeeeeeeeeeeeee|\n   +----------------+----------------+----------------+\n\
    \        where \"c\" are the bits of the assigned company_id, \"0\" is the\n \
    \       value of the universal/local bit to indicate global scope, \"g\"\n   \
    \     is group/individual bit, and \"e\" are the bits of the extension\n     \
    \   identifier, the IPv6 interface identifier would be of the form:\n   most-significant\
    \                                    least-significant\n   bit               \
    \                                                bit\n   |0              1|1 \
    \             3|3              4|4              6|\n   |0              5|6   \
    \           1|2              7|8              3|\n   +----------------+----------------+----------------+----------------+\n\
    \   |cccccc1gcccccccc|cccccccc11111111|11111110eeeeeeee|eeeeeeeeeeeeeeee|\n  \
    \ +----------------+----------------+----------------+----------------+\n    \
    \ 2) If an IEEE global identifier is not available a different source\n      \
    \  of uniqueness should be used.  Suggested sources of uniqueness\n        include\
    \ link-layer addresses, machine serial numbers, et cetera.\n        In this case\
    \ the \"u\" bit of the interface identifier MUST be set\n        to zero (0).\n\
    \     3) If a good source of uniqueness cannot be found, it is\n        recommended\
    \ that a random number be generated.  In this case the\n        \"u\" bit of the\
    \ interface identifier MUST be set to zero (0).\n     Good sources [1] of uniqueness\
    \ or randomness are required for the\n     Interface-Identifier negotiation to\
    \ succeed.  If neither a unique\n     number or a random number can be generated\
    \ it is recommended that a\n     zero value be used for the Interface-Identifier\
    \ transmitted in the\n     Configure-Request.  In this case the PPP peer may provide\
    \ a valid\n     non-zero Interface-Identifier in its response as described below.\n\
    \     Note that if at least one of the PPP peers is able to generate\n     separate\
    \ non-zero numbers for itself and its peer, the identifier\n     negotiation will\
    \ succeed.\n     When a Configure-Request is received with the Interface-Identifier\n\
    \     Configuration Option and the receiving peer implements this option,\n  \
    \   the received Interface-Identifier is compared with the Interface-\n     Identifier\
    \ of the last Configure-Request sent to the peer.\n     Depending on the result\
    \ of the comparison an implementation MUST\n     respond in one of the following\
    \ ways:\n     If the two Interface-Identifiers are different but the received\n\
    \     Interface-Identifier is zero, a Configure-Nak is sent with a non-\n    \
    \ zero Interface-Identifier value suggested for use by the remote\n     peer.\
    \  Such a suggested Interface-Identifier MUST be different from\n     the Interface-Identifier\
    \ of the last Configure-Request sent to the\n     peer.  It is recommended that\
    \ the value suggested be consistently\n     reproducible across initializations\
    \ of the IPV6CP finite state\n     machine (administrative Close and reOpen, reboots,\
    \ etc). The \"u\"\n     universal/local) bit of the suggested identifier MUST\
    \ be set to\n     zero (0) regardless of its source unless the globally unique\
    \ EUI-\n     48/EUI-64 derived identifier is provided for the exclusive use by\n\
    \     the remote peer.\n     If the two Interface-Identifiers are different and\
    \ the received\n     Interface-Identifier is not zero, the Interface-Identifier\
    \ MUST be\n     acknowledged, i.e.  a Configure-Ack is sent with the requested\n\
    \     Interface-Identifier, meaning that the responding peer agrees with\n   \
    \  the Interface-Identifier requested.\n     If the two Interface-Identifiers\
    \ are equal and are not zero, a\n     Configure-Nak MUST be sent specifying a\
    \ different non-zero\n     Interface-Identifier value suggested for use by the\
    \ remote peer.\n     It is recommended that the value suggested be consistently\n\
    \     reproducible across initializations of the IPV6CP finite state\n     machine\
    \ (administrative Close and reOpen, reboots, etc).  The \"u\"\n     universal/local)\
    \ bit of the suggested identifier MUST be set to\n     zero (0) regardless of\
    \ its source unless the globally unique EUI-\n     48/EUI-64 derived identifier\
    \ is provided for the exclusive use by\n     the remote peer.\n     If the two\
    \ Interface-Identifiers are equal to zero, the Interface-\n     Identifiers negotiation\
    \ MUST be terminated by transmitting the\n     Configure-Reject with the Interface-Identifier\
    \ value set to zero.\n     In this case a unique Interface-Identifier can not\
    \ be negotiated.\n     If a Configure-Request is received with the Interface-Identifier\n\
    \     Configuration Option and the receiving peer does not implement this\n  \
    \   option, Configure-Rej is sent.\n     A new Configure-Request SHOULD NOT be\
    \ sent to the peer until normal\n     processing would cause it to be sent (that\
    \ is, until a Configure-\n     Nak is received or the Restart timer runs out).\n\
    \     A new Configure-Request MUST NOT contain the Interface-Identifier\n    \
    \ option if a valid Interface-Identifier Configure-Reject is\n     received.\n\
    \     Reception of a Configure-Nak with a suggested Interface-Identifier\n   \
    \  different from that of the last Configure-Nak sent to the peer\n     indicates\
    \ a unique Interface-Identifier.  In this case a new\n     Configure-Request MUST\
    \ be sent with the identifier value suggested\n     in the last Configure-Nak\
    \ from the peer.  But if the received\n     Interface-Identifier is equal to the\
    \ one sent in the last\n     Configure-Nak, a new Interface-Identifier MUST be\
    \ chosen.  In this\n     case, a new Configure-Request SHOULD be sent with the\
    \ new tentative\n     Interface-Identifier.  This sequence (transmit Configure-Request,\n\
    \     receive Configure-Request, transmit Configure-Nak, receive\n     Configure-Nak)\
    \ might occur a few times, but it is extremely\n     unlikely to occur repeatedly.\
    \  More likely, the Interface-\n     Identifiers chosen at either end will quickly\
    \ diverge, terminating\n     the sequence.\n     If negotiation of the Interface-Identifier\
    \ is required, and the\n     peer did not provide the option in its Configure-Request,\
    \ the\n     option SHOULD be appended to a Configure-Nak.  The tentative value\n\
    \     of the Interface-Identifier given must be acceptable as the remote\n   \
    \  Interface-Identifier; i.e.  it should be different from the\n     identifier\
    \ value selected for the local end of the PPP link.  The\n     next Configure-Request\
    \ from the peer may include this option.  If\n     the next Configure-Request\
    \ does not include this option the peer\n     MUST NOT send another Configure-Nak\
    \ with this option included.  It\n     should assume that the peer's implementation\
    \ does not support this\n     option.\n     By default, an implementation SHOULD\
    \ attempt to negotiate the\n     Interface-Identifier for its end of the PPP connection.\n\
    \   A summary of the Interface-Identifier Configuration Option format is\n   shown\
    \ below.  The fields are transmitted from left to right.\n   0               \
    \    1                   2                   3\n   0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     | Interface-Identifier (MS Bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                        Interface-Identifier (cont)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Interface-Identifier (LS Bytes) |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     Type\n       1\n     Length\n       10\n     Interface-Identifier\n    \
    \   The 64-bit Interface-Identifier which is very likely to be unique on\n   \
    \    the link or zero if a good source of uniqueness can not be found.\n     Default\n\
    \       If no valid interface identifier can be successfully negotiated, no\n\
    \       default Interface-Identifier value should be assumed. The procedures\n\
    \       for recovering from such a case are unspecified.  One approach is to\n\
    \       manually configure the interface identifier of the interface.\n"
- title: 4.2.  IPv6-Compression-Protocol
  contents:
  - "4.2.  IPv6-Compression-Protocol\n   Description\n     This Configuration Option\
    \ provides a way to negotiate the use of a\n     specific IPv6 packet compression\
    \ protocol.  The\n     IPv6-Compression-Protocol Configuration Option is used\
    \ to indicate the\n     ability to receive compressed packets.  Each end of the\
    \ link must\n     separately request this option if bi-directional compression\
    \ is\n     desired.  By default, compression is not enabled.\n     IPv6 compression\
    \ negotiated with this option is specific to IPv6\n     datagrams and is not to\
    \ be confused with compression resulting from\n     negotiations via Compression\
    \ Control Protocol (CCP), which potentially\n     effect all datagrams.\n   A\
    \ summary of the IPv6-Compression-Protocol Configuration Option format\n   is\
    \ shown below.  The fields are transmitted from left to right.\n   0         \
    \          1                   2                   3\n   0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |   IPv6-Compression-Protocol   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Data ...\n   +-+-+-+-+\n     Type\n       2\n     Length\n       >= 4\n\
    \     IPv6-Compression-Protocol\n       The IPv6-Compression-Protocol field is\
    \ two octets and indicates\n       the compression protocol desired.  Values for\
    \ this field are\n       always the same as the PPP Data Link Layer Protocol field\
    \ values\n       for that same compression protocol.\n       No IPv6-Compression-Protocol\
    \ field values are currently assigned.\n       Specific assignments will be made\
    \ in documents that define\n       specific compression algorithms.\n     Data\n\
    \       The Data field is zero or more octets and contains additional\n      \
    \ data as determined by the particular compression protocol.\n     Default\n \
    \      No IPv6 compression protocol enabled.\n"
- title: 5.  Stateless Autoconfiguration and Link-Local Addresses
  contents:
  - "5.  Stateless Autoconfiguration and Link-Local Addresses\n   The Interface Identifier\
    \ of IPv6 unicast addresses [6] of a PPP\n   interface, SHOULD be negotiated in\
    \ the IPV6CP phase of the PPP\n   connection setup (see section 4.1). If no valid\
    \ Interface Identifier\n   has been successfully negotiated, procedures for recovering\
    \ from such\n   a case are unspecified.  One approach is to manually configure\
    \ the\n   Interface Identifier of the interface.\n   As long as the Interface\
    \ Identifier is negotiated in the IPV6CP phase\n   of the PPP connection setup,\
    \ it is redundant to perform duplicate\n   address detection as a part of the\
    \ IPv6 Stateless Autoconfiguration\n   protocol [3].  Therefore it is recommended\
    \ that for PPP links with\n   the IPV6CP Interface-Identifier option enabled the\
    \ default value of\n   the DupAddrDetectTransmits autoconfiguration variable [3]\
    \ be zero.\n   Link-local addresses of PPP interfaces have the following format:\n\
    \   | 10 bits  |        54 bits         |          64 bits            |\n   +----------+------------------------+-----------------------------+\n\
    \   |1111111010|           0            |    Interface Identifier     |\n   +----------+------------------------+-----------------------------+\n\
    \   The most significant 10 bits of the address is the Link-Local prefix\n   FE80::.\
    \  54 zero bits pad out the address between the Link-Local\n   prefix and the\
    \ Interface Identifier fields.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   The IPv6 Control Protocol extension to PPP can\
    \ be used with all\n   defined PPP authentication and encryption mechanisms.\n"
- title: 7.  Acknowledgments
  contents:
  - "7.  Acknowledgments\n   This document borrows from the Magic-Number LCP option\
    \ and as such is\n   partially based on previous work done by the PPP working\
    \ group.\n"
- title: 8.  Changes from RFC-2023
  contents:
  - "8.  Changes from RFC-2023\n   The following changes were made from RFC-2023 \"\
    IP Version 6 over\n   PPP\":\n   - Changed to use \"Interface Identifier\" instead\
    \ of the \"Interface\n     Token\" term according to the terminology adopted in\
    \ [6].\n   - Increased the size of Interface Identifier to 64 bits according to\n\
    \     the newly adopted IPv6 addressing architecture [6].\n   - Added methods\
    \ for selection of an interface identifier that is\n     consistently reproducible\
    \ across initializations of the IPV6CP\n     finite state machine.\n   - Added\
    \ the interface identifier selection methods for generating\n     globally unique\
    \ interface identifier from an unique an IEEE global\n     identifier when it\
    \ is available anywhere on the node.\n   - Changed to send a Configure-Nak instead\
    \ a Configure-Ack in response\n     to receiving a Configure-Request with a zero\
    \ Interface-Identifier\n     value.\n   - Replaced the value assignment of the\
    \ IPv6-Compression-Protocol\n     field of the IPv6-Compression-Protocol Configuration\
    \ option with\n     the text stating that no IPv6-Compression-Protocol field values\
    \ are\n     currently assigned and that specific assignments will be made in\n\
    \     documents that define specific compression algorithms.\n   - Added new and\
    \ updated references.\n   - Minor text clarifications and improvements.\n"
- title: 9.  References
  contents:
  - "9.  References\n   [1]  Simpson, W., \"The Point-to-Point Protocol\", STD 51,\
    \ RFC\n        1661, July 1994.\n   [2]  Deering, S., and R. Hinden, Editors,\
    \ \"Internet Protocol, Version\n        6 (IPv6) Specification\", RFC 2460, December\
    \ 1998.\n   [3]  Thomson, S., and T. Narten, \"IPv6 Stateless Address\n      \
    \  Autoconfiguration\", RFC 2462, December 1998.\n   [4]  Reynolds, J., and J.\
    \ Postel, \"Assigned Numbers\", STD 2, RFC\n        1700, October 1994.  See also:\
    \ http://www.iana.org/numbers.html\n   [5]  IEEE, \"Guidelines for 64-bit Global\
    \ Identifier (EUI-64)\n        Registration Authority\",\n        http://standards.ieee.org/db/oui/tutorials/EUI64.html,\
    \ March\n        1997.\n   [6]  Hinden, R., and S. Deering, \"IP Version 6 Addressing\n\
    \        Architecture\", RFC 2373, July 1998.\n   [7]  Bradner, S., \"Key words\
    \ for use in RFCs to Indicate Requirement\n        Levels,\" BCP 14, RFC 2119,\
    \ March 1997.\n   [8]  Narten T., and C. Burton, \"A Caution On The Canonical\
    \ Ordering\n        Of Link-Layer Addresses\", RFC 2469, December 1998.\n"
- title: 10.  Authors' Addresses
  contents:
  - "10.  Authors' Addresses\n   Dimitry Haskin\n   Bay Networks, Inc.\n   600 Technology\
    \ Park\n   Billerica, MA 01821\n   EMail: dhaskin@baynetworks.com\n   Ed Allen\n\
    \   Bay Networks, Inc.\n   600 Technology Park\n   Billerica, MA 01821\n   EMail:\
    \ eallen@baynetworks.com\n"
- title: 11.  Full Copyright Statement
  contents:
  - "11.  Full Copyright Statement\n   Copyright (C) The Internet Society (1998).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
