- title: __initial_text__
  contents:
  - "The Use of 'Set Data Type' Transaction in File Transfer Protocol\n    As mentioned\
    \ in RFC 265, the opcode of '00' is set aside for the\nclarify the use of 'set\
    \ data type' in file transfer operations.\n    In many systems such as Multics\
    \ at MIT, there is no provision to\nidentify the type of data (i.e., ASCII or\
    \ numeric) stored in files.\nThe manner in which the data is handled is context\
    \ dependent.  ASCII\ncharacters are stored as four 9-bit characters per 36-bit\
    \ word, right\njustified with left most bit as zero.  As efficient conversion\n\
    programs exists in Multics for conversion of data from Multics' ASCII\ninto Network\
    \ ASCII, it would be useful for a user to be able to\ninstruct the Multics server\
    \ to convert data into Network ASCII in\nretrieve operations.  It is suggested\
    \ that the 'set data type'\ntransaction be used for this purpose.\n    The 'set\
    \ data type' transaction preceding a retrieve request\nshould be interpreted by\
    \ a server to mean that the user wants to\nreceive his data in that form.  If\
    \ the server is unable to convert the\ndata into the desired form, it should return\
    \ a 'set data type' of\n       [ This RFC was put into machine readable form for\
    \ entry ]\n       [ into the online RFC archives by BBN Corp. under the   ]\n\
    \       [ direction of Alex McKenzie.                   12/96   ]\n    The following\
    \ examples should clarify the use of 'set data\ntype' transactions.\n1.      \
    \  USER                                             SERVER\n          ----   \
    \                                          ------\n                    Set data\
    \ type '02' (Network ASCII)\n                    ------------------------------------->\n\
    \                    Store File X\n                    ------------------------------------->\n\
    \                    File X (in Network ASCII)\n                    ------------------------------------->\n\
    \                    End of File\n                    ------------------------------------->\n\
    \                    Acknowledge\n                    <-------------------------------------\n\
    \                    Retrieve File X\n                    ------------------------------------->\n\
    \                    File X in Network ASCII\n                    <-------------------------------------\n\
    \                    End of File\n                    <-------------------------------------\n\
    2.        USER                                             SERVER\n          ----\
    \                                             ------\n                    Set\
    \ data type'03' (EBCDIC)\n                    ------------------------------------->\n\
    \                    Retrieve File Y\n                    ------------------------------------->\n\
    \                    Set data type '00' (\"bit-stream\")\n                   \
    \ <-------------------------------------\n                    File Y as stored\
    \ (no conversion)\n                    <-------------------------------------\n\
    \                    End of File\n                    <-------------------------------------\n\
    \                    Set data type '02' (Network ASCII)\n                    ------------------------------------->\n\
    \                    Retrieve File Z\n                    ------------------------------------->\n\
    \                    File Z in Network ASCII\n                    <-------------------------------------\n\
    \                    End of File\n                    <-------------------------------------\n"
