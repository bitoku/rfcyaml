- title: __initial_text__
  contents:
  - '      Protection of BGP Sessions via the TCP MD5 Signature Option

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: IESG Note
  contents:
  - "IESG Note\n   This document describes currrent existing practice for securing\
    \ BGP\n   against certain simple attacks.  It is understood to have security\n\
    \   weaknesses against concerted attacks.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo describes a TCP extension to enhance security for BGP.\
    \  It\n   defines a new TCP option for carrying an MD5 [RFC1321] digest in a\n\
    \   TCP segment.  This digest acts like a signature for that segment,\n   incorporating\
    \ information known only to the connection end points.\n   Since BGP uses TCP\
    \ as its transport, using this option in the way\n   described in this paper significantly\
    \ reduces the danger from certain\n   security attacks on BGP.\n"
- title: 1.0  Introduction
  contents:
  - "1.0  Introduction\n   The primary motivation for this option is to allow BGP\
    \ to protect\n   itself against the introduction of spoofed TCP segments into\
    \ the\n   connection stream.  Of particular concern are TCP resets.\n   To spoof\
    \ a connection using the scheme described in this paper, an\n   attacker would\
    \ not only have to guess TCP sequence numbers, but would\n   also have had to\
    \ obtain the password included in the MD5 digest.\n   This password never appears\
    \ in the connection stream, and the actual\n   form of the password is up to the\
    \ application.  It could even change\n   during the lifetime of a particular connection\
    \ so long as this change\n   was synchronized on both ends (although retransmission\
    \ can become\n   problematical in some TCP implementations with changing passwords).\n\
    \   Finally, there is no negotiation for the use of this option in a\n   connection,\
    \ rather it is purely a matter of site policy whether or\n   not its connections\
    \ use the option.\n"
- title: 2.0  Proposal
  contents:
  - "2.0  Proposal\n   Every segment sent on a TCP connection to be protected against\n\
    \   spoofing will contain the 16-byte MD5 digest produced by applying the\n  \
    \ MD5 algorithm to these items in the following order:\n       1. the TCP pseudo-header\
    \ (in the order: source IP address,\n          destination IP address, zero-padded\
    \ protocol number, and\n          segment length)\n       2. the TCP header, excluding\
    \ options, and assuming a checksum of\n          zero\n       3. the TCP segment\
    \ data (if any)\n       4. an independently-specified key or password, known to\
    \ both TCPs\n          and presumably connection-specific\n   The header and pseudo-header\
    \ are in network byte order.  The nature\n   of the key is deliberately left unspecified,\
    \ but it must be known by\n   both ends of the connection.  A particular TCP implementation\
    \ will\n   determine what the application may specify as the key.\n   Upon receiving\
    \ a signed segment, the receiver must validate it by\n   calculating its own digest\
    \ from the same data (using its own key) and\n   comparing the two digest.  A\
    \ failing comparison must result in the\n   segment being dropped and must not\
    \ produce any response back to the\n   sender.  Logging the failure is probably\
    \ advisable.\n   Unlike other TCP extensions (e.g., the Window Scale option\n\
    \   [RFC1323]), the absence of the option in the SYN,ACK segment must not\n  \
    \ cause the sender to disable its sending of signatures.  This\n   negotiation\
    \ is typically done to prevent some TCP implementations\n   from misbehaving upon\
    \ receiving options in non-SYN segments.  This is\n   not a problem for this option,\
    \ since the SYN,ACK sent during\n   connection negotiation will not be signed\
    \ and will thus be ignored.\n   The connection will never be made, and non-SYN\
    \ segments with options\n   will never be sent.  More importantly, the sending\
    \ of signatures must\n   be under the complete control of the application, not\
    \ at the mercy of\n   the remote host not understanding the option.\n"
- title: 3.0  Syntax
  contents:
  - "3.0  Syntax\n   The proposed option has the following format:\n             +---------+---------+-------------------+\n\
    \             | Kind=19 |Length=18|   MD5 digest...   |\n             +---------+---------+-------------------+\n\
    \             |                                       |\n             +---------------------------------------+\n\
    \             |                                       |\n             +---------------------------------------+\n\
    \             |                                       |\n             +-------------------+-------------------+\n\
    \             |                   |\n             +-------------------+\n   The\
    \ MD5 digest is always 16 bytes in length, and the option would\n   appear in\
    \ every segment of a connection.\n"
- title: 4.0  Some Implications
  contents:
  - '4.0  Some Implications

    '
- title: 4.1  Connectionless Resets
  contents:
  - "4.1  Connectionless Resets\n   A connectionless reset will be ignored by the\
    \ receiver of the reset,\n   since the originator of that reset does not know\
    \ the key, and so\n   cannot generate the proper signature for the segment.  This\
    \ means,\n   for example, that connection attempts by a TCP which is generating\n\
    \   signatures to a port with no listener will time out instead of being\n   refused.\
    \  Similarly, resets generated by a TCP in response to\n   segments sent on a\
    \ stale connection will also be ignored.\n   Operationally this can be a problem\
    \ since resets help BGP recover\n   quickly from peer crashes.\n"
- title: 4.2  Performance
  contents:
  - "4.2  Performance\n   The performance hit in calculating digests may inhibit the\
    \ use of\n   this option.  Some measurements of a sample implementation showed\n\
    \   that on a 100 MHz R4600, generating a signature for simple ACK\n   segment\
    \ took an average of 0.0268 ms, while generating a signature\n   for a data segment\
    \ carrying 4096 bytes of data took 0.8776 ms on\n   average.  These times would\
    \ be applied to both the input and output\n   paths, with the input path also\
    \ bearing the cost of a 16-byte\n   compare.\n"
- title: 4.3  TCP Header Size
  contents:
  - "4.3  TCP Header Size\n   As with other options that are added to every segment,\
    \ the size of\n   the MD5 option must be factored into the MSS offered to the\
    \ other\n   side during connection negotiation.  Specifically, the size of the\n\
    \   header to subtract from the MTU (whether it is the MTU of the\n   outgoing\
    \ interface or IP's minimal MTU of 576 bytes) is now at least\n   18 bytes larger.\n\
    \   The total header size is also an issue.  The TCP header specifies\n   where\
    \ segment data starts with a 4-bit field which gives the total\n   size of the\
    \ header (including options) in 32-byte words.  This means\n   that the total\
    \ size of the header plus option must be less than or\n   equal to 60 bytes --\
    \ this leaves 40 bytes for options.\n   As a concrete example, 4.4BSD defaults\
    \ to sending window-scaling and\n   timestamp information for connections it initiates.\
    \  The most loaded\n   segment will be the initial SYN packet to start the connection.\
    \  With\n   MD5 signatures, the SYN packet will contain the following:\n     \
    \  -- 4 bytes MSS option\n       -- 4 bytes window scale option (3 bytes padded\
    \ to 4 in 4.4BSD)\n       -- 12 bytes for timestamp (4.4BSD pads the option as\
    \ recommended\n          in RFC 1323 Appendix A)\n       -- 18 bytes for MD5 digest\n\
    \       -- 2 bytes for end-of-option-list, to pad to a 32-bit boundary.\n    \
    \   This sums to 40 bytes, which just makes it.\n"
- title: 4.4  MD5 as a Hashing Algorithm
  contents:
  - "4.4  MD5 as a Hashing Algorithm\n   Since this memo was first issued (under a\
    \ different title), the MD5\n   algorithm has been found to be vulnerable to collision\
    \ search attacks\n   [Dobb], and is considered by some to be insufficiently strong\
    \ for\n   this type of application.\n   This memo still specifies the MD5 algorithm,\
    \ however, since the\n   option has already been deployed operationally, and there\
    \ was no\n   \"algorithm type\" field defined to allow an upgrade using the same\n\
    \   option number.  The original document did not specify a type field\n   since\
    \ this would require at least one more byte, and it was felt at\n   the time that\
    \ taking 19 bytes for the complete option (which would\n   probably be padded\
    \ to 20 bytes in TCP implementations) would be too\n   much of a waste of the\
    \ already limited option space.\n   This does not prevent the deployment of another\
    \ similar option which\n   uses another hashing algorithm (like SHA-1).  Also,\
    \ if most\n   implementations pad the 18 byte option as defined to 20 bytes anyway,\n\
    \   it would be just as well to define a new option which contains an\n   algorithm\
    \ type field.\n   This would need to be addressed in another document, however.\n"
- title: 4.5 Key configuration
  contents:
  - "4.5 Key configuration\n   It should be noted that the key configuration mechanism\
    \ of routers\n   may restrict the possible keys that may be used between peers.\
    \  It is\n   strongly recommended that an implementation be able to support at\n\
    \   minimum a key composed of a string of printable ASCII of 80 bytes or\n   less,\
    \ as this is current practice.\n"
- title: 5.0 Security Considerations
  contents:
  - "5.0 Security Considerations\n   This document defines a weak but currently practiced\
    \ security\n   mechanism for BGP.  It is anticipated that future work will provide\n\
    \   different stronger mechanisms for dealing with these issues.\n"
- title: 6.0  References
  contents:
  - "6.0  References\n   [RFC1321] Rivest, R., \"The MD5 Message-Digest Algorithm,\"\
    \ RFC 1321,\n             April 1992.\n   [RFC1323] Jacobson, V., Braden, R.,\
    \ and D. Borman, \"TCP Extensions\n             for High Performance\", RFC 1323,\
    \ May 1992.\n   [Dobb] H. Dobbertin, \"The Status of MD5 After a Recent Attack\"\
    , RSA\n             Labs' CryptoBytes, Vol. 2 No. 2, Summer 1996.\n          \
    \   http://www.rsa.com/rsalabs/pubs/cryptobytes.html\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Andy Heffernan\n   cisco Systems\n   170 West Tasman Drive\n\
    \   San Jose, CA  95134  USA\n   Phone:  +1 408 526-8115\n   EMail:  ahh@cisco.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (1998).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
