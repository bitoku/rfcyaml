- contents:
  - '             Sieve Notification Using Presence Information

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This is a further extension to the Sieve mail filtering language\n
    \  Notification extension, defining presence information that may be\n   checked
    through the notify_method_capability feature.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6132.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . . . 2\n     1.1.  Terminology Used in This Document . . . . . . . . .
    . . . . 2\n   2.  Testing Presence Information  . . . . . . . . . . . . . . .
    . . 2\n   3.  Examples  . . . . . . . . . . . . . . . . . . . . . . . . . . .
    4\n   4.  Security Considerations . . . . . . . . . . . . . . . . . . . . 6\n
    \  5.  IANA Considerations . . . . . . . . . . . . . . . . . . . . . . 6\n   6.
    \ Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . . 7\n   7.  References
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . 7\n     7.1.  Normative
    References  . . . . . . . . . . . . . . . . . . . 7\n     7.2.  Informative References
    \ . . . . . . . . . . . . . . . . . . 8\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Sometimes, it's desirable to tailor Sieve [RFC5228] notifications
    to\n   a user's current situation.  Presence information provides some\n   information
    about the user that would be useful to have access to in\n   these cases.  The
    Notification extension [RFC5435] defines a\n   mechanism to test for presence
    (the notify_method_capability\n   feature), and defines one test for presence
    (the \"online\"\n   notification-capability, described in Section 5 of RFC 5435).
    \ This\n   extension defines more presence tests by registering additional\n   notification-capability
    parameters in the IANA registry, allowing\n   testing of a wider variety of presence
    information.\n"
  - contents:
    - "1.1.  Terminology Used in This Document\n   The upper-case key words \"MUST\",
      \"MUST NOT\", \"REQUIRED\", \"SHALL\",\n   \"SHALL NOT\", \"SHOULD\", \"SHOULD
      NOT\", \"RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to
      be interpreted as described in\n   [RFC2119].\n"
    title: 1.1.  Terminology Used in This Document
  title: 1.  Introduction
- contents:
  - "2.  Testing Presence Information\n   This extension uses the notify_method_capability
    test, as defined in\n   the Sieve [RFC5228] Notify extension [RFC5435], to test
    presence\n   information.  When a Sieve event occurs (mail arrives) for a user,
    a\n   Sieve script running on behalf of that user can present the user's\n   presence
    URI (in the \"notification-uri\" parameter) and test a\n   specific item of notification
    presence as defined below (in the\n   \"notification-capability\" parameter) against
    one or more values (in\n   the \"key-list\" parameter).\n   This document defines
    an initial set of items of notification\n   presence, which may be specified in
    the notification-capability\n   parameter.  It is expected that future extensions
    will add additional\n   presence items derived from diverse sources, including
    calendar\n   information, geographic location, and so on.\n   Note that, while
    the items below are documented as similar to items\n   in Extensible Messaging
    and Presence Protocol (XMPP) [RFC6121], it is\n   not the intent that this extension
    be tied to XMPP, nor to any\n   particular source of presence, and flexible implementations
    will be\n   ready for future extensions.  Useful informational references for\n
    \  presence data and formats include Presence Information Data Format\n   (PIDF)
    [RFC3863], RPID: Rich Presence Extensions to PIDF [RFC4480],\n   and GEOPRIV Presence
    Information Data Format Location Object\n   (PIDF-LO) [RFC5491].\n   The script
    tests the values of notification presence items in the\n   key-list parameter.
    \ The values that each item may have are specified\n   in the list below.  Note
    that in addition to the presence values, any\n   item may have the value \"unknown\"
    if it is not possible to determine\n   the correct presence value of the item.\n
    \  If a particular presence item is tested multiple times within the\n   same
    script execution context, implementations MUST present the same\n   value each
    time (for example, by caching the value on first use).\n   This provides consistency
    within a single execution.\n   Supported presence items are as follows:\n   busy:
    \   An indication of whether the user is considered \"busy\" now\n            (the
    value \"yes\") or not (the value \"no\"), or \"unknown\" if\n            it cannot
    be determined.  The meaning of \"busy\" is left to\n            the implementation,
    and may be a state that's synthesized\n            from other information (including
    \"show\", below).\n   show:    The availability status of the user, formally specified.\n
    \           Note that this is similar to the presence element with the\n            same
    name that's defined in Section 4.7.2.1 of RFC 6121\n            [RFC6121].  The
    value of this item is one of the following:\n            away:    The user is
    temporarily away.\n            chat:    The user is online and actively interested
    in\n                     chatting.\n            dnd:     Do Not Disturb; the user
    does not wish to be\n                     disturbed now.\n            offline:
    The user is offline.\n            xa:      The user is away for an extended period
    (xa =\n                     \"eXtended Away\").\n            unknown: The correct
    presence value could not be determined.\n   status:  A human-readable description
    of the user's availability\n            status, in natural language.  There is
    no formal definition\n            for the values this item may take.  It is free-form,
    and may\n            be in any language.  Direct comparisons against the value
    of\n            this field are unlikely to be useful; rather, it is provided\n
    \           to enable extraction of the value into a variable [RFC5229]\n            for
    use elsewhere (see example 3 in Section 3).  Note that\n            this is similar
    to the presence element with the same name\n            that's defined in Section
    4.7.2.2 of RFC 6121 [RFC6121], and\n            to the <note> element defined
    in section 4.1.6 of PIDF\n            [RFC3863].\n            Because this is
    a free-form value that might be created\n            directly by a user, no value,
    including \"unknown\", can have\n            any special meaning.  If the Sieve
    processor is unable to\n            determine the value of this item, it might
    be best to leave\n            it as an empty string.  In any case, it is not meant
    for\n            machine-readable processing, beyond possible XML\n            interpretation.\n
    \  There is no capability string associated with this extension, but\n   this
    requires support for \"enotify\" [RFC5435].  If the implementation\n   does not
    support the item being tested (that is, the specified\n   notification-capability
    item is not known to the Sieve interpreter),\n   RFC 5435 already specifies that
    the test fail without an error.\n   Although this feature was conceived to assist
    in notifications, and\n   the test requires support of the Sieve Notify feature,
    it is only a\n   condition test, and any Sieve action can appear inside it.  There
    are\n   no Sieve actions that conflict with this extension.\n"
  title: 2.  Testing Presence Information
- contents:
  - "3.  Examples\n   1.  This example will send a notification only if the recipient
    is\n       not \"busy\".  If the test for \"busy\" is not supported, this\n       example
    will not send a notification.\n   require [\"enotify\"];\n   if notify_method_capability
    \"xmpp:tim@example.com\" \"busy\" \"no\"\n     {\n       notify :message \"You
    got mail\"\n           \"xmpp:tim@example.com?message;subject=SIEVE\";\n     }\n
    \  2.  This example will send a notification only if the recipient is\n       not
    \"busy\".  If the test for \"busy\" is not supported, this\n       example will
    send a notification.\n   require [\"enotify\"];\n   if not notify_method_capability
    \"xmpp:tim@example.com\" \"busy\" \"yes\"\n     {\n       notify :message \"You
    got mail\"\n           \"xmpp:tim@example.com?message;subject=SIEVE\";\n     }\n
    \  3.  This example uses the vacation extension [RFC5230] to generate an\n       auto-reply
    [RFC6133] if the sender is in the recipient's address\n       book [RFC6134] and
    the recipient's presence shows \"extended\n       away\".  The variables extension
    [RFC5229] is used to extract the\n       value of the recipient's presence status
    message, which will be\n       used in the response to the sender.  If the test
    for \"show\" is\n       not supported, this example will not send an auto-reply.\n
    \  require [\"extlists\", \"vacation\", \"enotify\", \"variables\"];\n   if allof
    (\n       envelope :list \"from\" \":addrbook:default\",\n       notify_method_capability
    \"xmpp:myjid@example.com\" \"show\" \"xa\"\n     ) {\n       # :matches \"*\"
    is used here to extract the value\n       if notify_method_capability :matches\n
    \          \"xmpp:myjid@example.com\" \"status\" \"*\" {\n         set \"resp_msg\"
    \"${1}\";\n       } else {\n         set \"resp_msg\" \"I'm away from email for
    a while.\"\n       }\n       vacation :handle \"ext-away\" \"${resp_msg}\";\n
    \    }\n"
  title: 3.  Examples
- contents:
  - "4.  Security Considerations\n   Security considerations for Sieve [RFC5228] and
    the Notify extension\n   [RFC5435] apply equally here.  In addition, implementations
    MUST\n   ensure that users cannot create scripts that access the presence\n   information
    of others without the proper access controls.\n   In some situations, scripts
    may act on some of the recipient's\n   presence information that the sender of
    the triggering message is not\n   allowed to see.  This can be a benefit to the
    recipient in many\n   cases, but it can also present an opportunity for a sender
    to use\n   messages to probe the recipient's presence (if, for example, messages\n
    \  sometimes result in auto-replies, and sometimes do not).  Script\n   authors
    should take care in considering this aspect of presence-\n   triggered actions.\n
    \  It's possible for a large number of messages to arrive at or around\n   the
    same time and be processed by Sieve scripts that all test\n   presence.  If many
    of the users share the same presence server, such\n   a burst could put an unexpectedly
    heavy load on the presence server.\n   Implementations might consider providing
    options for rate limiting,\n   or for caching presence tests for periods of time,
    even across Sieve\n   script instances.  When caching presence tests, the server
    must be\n   careful not to violate access controls that the presence server might\n
    \  have.  Thus, cached results MUST NOT be used outside the context in\n   which
    they were retrieved.  If, for example, a script running on\n   behalf of Adam
    requests presence information for Barbara, that\n   information MAY be cached
    for a future script running on behalf of\n   Adam, but MUST NOT be used to satisfy
    the same query in a script\n   running on behalf of Cindy -- because the presence
    server will have\n   to decide whether Cindy has access to that information.\n"
  title: 4.  Security Considerations
- contents:
  - "5.  IANA Considerations\n   This registers each presence item as a notification-capability\n
    \  parameter.  Future extensions that add new presence items should\n   register
    those items similarly, using the instructions in Section 9.3\n   of RFC 5435 [RFC5435].\n
    \  To:  iana@iana.org\n   Subject:  Registration of a new notification-capability
    parameter\n   Capability name:  busy\n   Description:  An indication of whether
    the user is considered \"busy\"\n        now (the value \"yes\") or not (the value
    \"no\").  The meaning of\n        \"busy\" is left to the implementation, and
    may be a state that's\n        synthesized from other information.\n   Syntax:
    \ Has one of the values \"yes\", \"no\", or \"unknown\".  The value\n        MUST
    be in lower case.\n   Permanent and readily available reference(s):  RFC 6132\n
    \  Contact information:  The Sieve discussion list, <sieve@ietf.org>\n   To:  iana@iana.org\n
    \  Subject:  Registration of a new notification-capability parameter\n   Capability
    name:  show\n   Description:  The availability status of the user.  This is similar\n
    \       to the presence element with the same name that's defined in\n        Section
    4.7.2.1 of RFC 6121.\n   Syntax:  Has one of the values \"away\", \"chat\", \"dnd\",
    \"offline\",\n        \"xa\", or \"unknown\".  The value MUST be in lower case.\n
    \  Permanent and readily available reference(s):  RFC 6132\n   Contact information:
    \ The Sieve discussion list, <sieve@ietf.org>\n   To:  iana@iana.org\n   Subject:
    \ Registration of a new notification-capability parameter\n   Capability name:
    \ status\n   Description:  A human-readable description of the user's availability\n
    \       status.  This is similar to the presence element with the same\n        name
    that's defined in Section 4.7.2.2 of RFC 6121.\n   Syntax:  There is no formal
    definition for the values this item may\n        take.  It is free-form and may
    be in any language, and is meant\n        for human consumption.\n   Permanent
    and readily available reference(s):  RFC 6132\n   Contact information:  The Sieve
    discussion list, <sieve@ietf.org>\n"
  title: 5.  IANA Considerations
- contents:
  - "6.  Acknowledgments\n   The authors thank Alexey Melnikov for significant early
    feedback and\n   suggestions.\n"
  title: 6.  Acknowledgments
- contents:
  - '7.  References

    '
  - contents:
    - "7.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
      1997.\n   [RFC5228]  Guenther, P. and T. Showalter, \"Sieve: An Email Filtering\n
      \             Language\", RFC 5228, January 2008.\n   [RFC5435]  Melnikov, A.,
      Leiba, B., Segmuller, W., and T. Martin,\n              \"Sieve Email Filtering:
      Extension for Notifications\",\n              RFC 5435, January 2009.\n   [RFC6121]
      \ Saint-Andre, P., \"Extensible Messaging and Presence\n              Protocol
      (XMPP): Instant Messaging and Presence\", RFC\n              6121, March 2011.\n"
    title: 7.1.  Normative References
  - contents:
    - "7.2.  Informative References\n   [RFC3863]  Sugano, H., Fujimoto, S., Klyne,
      G., Bateman, A., Carr,\n              W., and J. Peterson, \"Presence Information
      Data Format\n              (PIDF)\", RFC 3863, August 2004.\n   [RFC4480]  Schulzrinne,
      H., Gurbani, V., Kyzivat, P., and J.\n              Rosenberg, \"RPID: Rich
      Presence Extensions to the Presence\n              Information Data Format (PIDF)\",
      RFC 4480, July 2006.\n   [RFC5229]  Homme, K., \"Sieve Email Filtering: Variables
      Extension\",\n              RFC 5229, January 2008.\n   [RFC5230]  Showalter,
      T. and N. Freed, \"Sieve Email Filtering:\n              Vacation Extension\",
      RFC 5230, January 2008.\n   [RFC5491]  Winterbottom, J., Thomson, M., and H.
      Tschofenig, \"GEOPRIV\n              Presence Information Data Format Location
      Object (PIDF-LO)\n              Usage Clarification, Considerations, and Recommendations\",\n
      \             RFC 5491, March 2009.\n   [RFC6133]  George, R., Leiba, B., and
      A. Melnikov, \"Sieve Email\n              Filtering: Use of Presence Information
      with Auto-Responder\n              Functionality\", RFC 6134, July 2011.\n   [RFC6134]
      \ Melnikov, A. and B. Leiba, \"Sieve Extension: Externally\n              Stored
      Lists\", RFC 6134, July 2011.\n"
    title: 7.2.  Informative References
  title: 7.  References
- contents:
  - "Authors' Addresses\n   Robins George\n   Huawei Technologies\n   Bangalore, Karnataka
    \ 560071\n   India\n   Phone: +91-080-41117676\n   EMail: robinsgv@gmail.com\n
    \  Barry Leiba\n   Huawei Technologies\n   Phone: +1 646 827 0648\n   EMail: barryleiba@computer.org\n
    \  URI:   http://internetmessagingtechnology.org/\n"
  title: Authors' Addresses
