- title: __initial_text__
  contents:
  - "              RTP Profile for Audio and Video Conferences\n                 \
    \         with Minimal Control\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes a profile called \"RTP/AVP\" for the use\
    \ of the\n   real-time transport protocol (RTP), version 2, and the associated\n\
    \   control protocol, RTCP, within audio and video multiparticipant\n   conferences\
    \ with minimal control.  It provides interpretations of\n   generic fields within\
    \ the RTP specification suitable for audio and\n   video conferences.  In particular,\
    \ this document defines a set of\n   default mappings from payload type numbers\
    \ to encodings.\n   This document also describes how audio and video data may\
    \ be carried\n   within RTP.  It defines a set of standard encodings and their\
    \ names\n   when used within RTP.  The descriptions provide pointers to reference\n\
    \   implementations and the detailed standards.  This document is meant\n   as\
    \ an aid for implementors of audio, video and other real-time\n   multimedia applications.\n\
    \   This memorandum obsoletes RFC 1890.  It is mostly backwards-\n   compatible\
    \ except for functions removed because two interoperable\n   implementations were\
    \ not found.  The additions to RFC 1890 codify\n   existing practice in the use\
    \ of payload formats under this profile\n   and include new payload formats defined\
    \ since RFC 1890 was published.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction .................................................\
    \  3\n       1.1  Terminology .............................................  3\n\
    \   2.  RTP and RTCP Packet Forms and Protocol Behavior ..............  4\n  \
    \ 3.  Registering Additional Encodings .............................  6\n   4.\
    \  Audio ........................................................  8\n       4.1\
    \  Encoding-Independent Rules ..............................  8\n       4.2  Operating\
    \ Recommendations ...............................  9\n       4.3  Guidelines for\
    \ Sample-Based Audio Encodings ............. 10\n       4.4  Guidelines for Frame-Based\
    \ Audio Encodings .............. 11\n       4.5  Audio Encodings .........................................\
    \ 12\n            4.5.1   DVI4 ............................................ 13\n\
    \            4.5.2   G722 ............................................ 14\n  \
    \          4.5.3   G723 ............................................ 14\n    \
    \        4.5.4   G726-40, G726-32, G726-24, and G726-16 .......... 18\n      \
    \      4.5.5   G728 ............................................ 19\n        \
    \    4.5.6   G729 ............................................ 20\n          \
    \  4.5.7   G729D and G729E ................................. 22\n            4.5.8\
    \   GSM ............................................. 24\n            4.5.9  \
    \ GSM-EFR ......................................... 27\n            4.5.10  L8\
    \ .............................................. 27\n            4.5.11  L16 .............................................\
    \ 27\n            4.5.12  LPC ............................................. 27\n\
    \            4.5.13  MPA ............................................. 28\n  \
    \          4.5.14  PCMA and PCMU ................................... 28\n    \
    \        4.5.15  QCELP ........................................... 28\n      \
    \      4.5.16  RED ............................................. 29\n        \
    \    4.5.17  VDVI ............................................ 29\n   5.  Video\
    \ ........................................................ 30\n       5.1  CelB\
    \ .................................................... 30\n       5.2  JPEG ....................................................\
    \ 30\n       5.3  H261 .................................................... 30\n\
    \       5.4  H263 .................................................... 31\n  \
    \     5.5  H263-1998 ............................................... 31\n    \
    \   5.6  MPV ..................................................... 31\n      \
    \ 5.7  MP2T .................................................... 31\n       5.8\
    \  nv ...................................................... 32\n   6.  Payload\
    \ Type Definitions ..................................... 32\n   7.  RTP over TCP\
    \ and Similar Byte Stream Protocols ............... 34\n   8.  Port Assignment\
    \ .............................................. 34\n   9.  Changes from RFC 1890\
    \ ........................................ 35\n   10. Security Considerations\
    \ ...................................... 38\n   11. IANA Considerations ..........................................\
    \ 39\n   12. References ................................................... 39\n\
    \       12.1 Normative References .................................... 39\n  \
    \     12.2 Informative References .................................. 39\n   13.\
    \ Current Locations of Related Resources ....................... 41\n   14. Acknowledgments\
    \ .............................................. 42\n   15. Intellectual Property\
    \ Rights Statement ....................... 43\n   16. Authors' Addresses ...........................................\
    \ 43\n   17. Full Copyright Statement ..................................... 44\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   This profile defines aspects of RTP left unspecified in the\
    \ RTP\n   Version 2 protocol definition (RFC 3550) [1].  This profile is\n   intended\
    \ for the use within audio and video conferences with minimal\n   session control.\
    \  In particular, no support for the negotiation of\n   parameters or membership\
    \ control is provided.  The profile is\n   expected to be useful in sessions where\
    \ no negotiation or membership\n   control are used (e.g., using the static payload\
    \ types and the\n   membership indications provided by RTCP), but this profile\
    \ may also\n   be useful in conjunction with a higher-level control protocol.\n\
    \   Use of this profile may be implicit in the use of the appropriate\n   applications;\
    \ there may be no explicit indication by port number,\n   protocol identifier\
    \ or the like.  Applications such as session\n   directories may use the name\
    \ for this profile specified in Section\n   11.\n   Other profiles may make different\
    \ choices for the items specified\n   here.\n   This document also defines a set\
    \ of encodings and payload formats for\n   audio and video.  These payload format\
    \ descriptions are included here\n   only as a matter of convenience since they\
    \ are too small to warrant\n   separate documents.  Use of these payload formats\
    \ is NOT REQUIRED to\n   use this profile.  Only the binding of some of the payload\
    \ formats to\n   static payload type numbers in Tables 4 and 5 is normative.\n"
- title: 1.1 Terminology
  contents:
  - "1.1 Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [2] and\n   indicate requirement levels for implementations compliant with\
    \ this\n   RTP profile.\n   This document defines the term media type as dividing\
    \ encodings of\n   audio and video content into three classes: audio, video and\n\
    \   audio/video (interleaved).\n"
- title: 2. RTP and RTCP Packet Forms and Protocol Behavior
  contents:
  - "2. RTP and RTCP Packet Forms and Protocol Behavior\n   The section \"RTP Profiles\
    \ and Payload Format Specifications\" of RFC\n   3550 enumerates a number of items\
    \ that can be specified or modified\n   in a profile.  This section addresses\
    \ these items.  Generally, this\n   profile follows the default and/or recommended\
    \ aspects of the RTP\n   specification.\n   RTP data header: The standard format\
    \ of the fixed RTP data\n      header is used (one marker bit).\n   Payload types:\
    \ Static payload types are defined in Section 6.\n   RTP data header additions:\
    \ No additional fixed fields are\n      appended to the RTP data header.\n   RTP\
    \ data header extensions: No RTP header extensions are\n      defined, but applications\
    \ operating under this profile MAY use\n      such extensions.  Thus, applications\
    \ SHOULD NOT assume that the\n      RTP header X bit is always zero and SHOULD\
    \ be prepared to ignore\n      the header extension.  If a header extension is\
    \ defined in the\n      future, that definition MUST specify the contents of the\
    \ first 16\n      bits in such a way that multiple different extensions can be\n\
    \      identified.\n   RTCP packet types: No additional RTCP packet types are\
    \ defined\n      by this profile specification.\n   RTCP report interval: The\
    \ suggested constants are to be used for\n      the RTCP report interval calculation.\
    \  Sessions operating under\n      this profile MAY specify a separate parameter\
    \ for the RTCP traffic\n      bandwidth rather than using the default fraction\
    \ of the session\n      bandwidth.  The RTCP traffic bandwidth MAY be divided\
    \ into two\n      separate session parameters for those participants which are\n\
    \      active data senders and those which are not.  Following the\n      recommendation\
    \ in the RTP specification [1] that 1/4 of the RTCP\n      bandwidth be dedicated\
    \ to data senders, the RECOMMENDED default\n      values for these two parameters\
    \ would be 1.25% and 3.75%,\n      respectively.  For a particular session, the\
    \ RTCP bandwidth for\n      non-data-senders MAY be set to zero when operating\
    \ on\n      unidirectional links or for sessions that don't require feedback\n\
    \      on the quality of reception.  The RTCP bandwidth for data senders\n   \
    \   SHOULD be kept non-zero so that sender reports can still be sent\n      for\
    \ inter-media synchronization and to identify the source by\n      CNAME.  The\
    \ means by which the one or two session parameters for\n      RTCP bandwidth are\
    \ specified is beyond the scope of this memo.\n   SR/RR extension: No extension\
    \ section is defined for the RTCP SR\n      or RR packet.\n   SDES use: Applications\
    \ MAY use any of the SDES items described\n      in the RTP specification.  While\
    \ CNAME information MUST be sent\n      every reporting interval, other items\
    \ SHOULD only be sent every\n      third reporting interval, with NAME sent seven\
    \ out of eight times\n      within that slot and the remaining SDES items cyclically\
    \ taking up\n      the eighth slot, as defined in Section 6.2.2 of the RTP\n \
    \     specification.  In other words, NAME is sent in RTCP packets 1, 4,\n   \
    \   7, 10, 13, 16, 19, while, say, EMAIL is used in RTCP packet 22.\n   Security:\
    \ The RTP default security services are also the default\n      under this profile.\n\
    \   String-to-key mapping: No mapping is specified by this profile.\n   Congestion:\
    \ RTP and this profile may be used in the context of\n      enhanced network service,\
    \ for example, through Integrated Services\n      (RFC 1633) [4] or Differentiated\
    \ Services (RFC 2475) [5], or they\n      may be used with best effort service.\n\
    \      If enhanced service is being used, RTP receivers SHOULD monitor\n     \
    \ packet loss to ensure that the service that was requested is\n      actually\
    \ being delivered.  If it is not, then they SHOULD assume\n      that they are\
    \ receiving best-effort service and behave\n      accordingly.\n      If best-effort\
    \ service is being used, RTP receivers SHOULD monitor\n      packet loss to ensure\
    \ that the packet loss rate is within\n      acceptable parameters.  Packet loss\
    \ is considered acceptable if a\n      TCP flow across the same network path and\
    \ experiencing the same\n      network conditions would achieve an average throughput,\
    \ measured\n      on a reasonable timescale, that is not less than the RTP flow\
    \ is\n      achieving.  This condition can be satisfied by implementing\n    \
    \  congestion control mechanisms to adapt the transmission rate (or\n      the\
    \ number of layers subscribed for a layered multicast session),\n      or by arranging\
    \ for a receiver to leave the session if the loss\n      rate is unacceptably\
    \ high.\n      The comparison to TCP cannot be specified exactly, but is intended\n\
    \      as an \"order-of-magnitude\" comparison in timescale and throughput.\n\
    \      The timescale on which TCP throughput is measured is the round-\n     \
    \ trip time of the connection.  In essence, this requirement states\n      that\
    \ it is not acceptable to deploy an application (using RTP or\n      any other\
    \ transport protocol) on the best-effort Internet which\n      consumes bandwidth\
    \ arbitrarily and does not compete fairly with\n      TCP within an order of magnitude.\n\
    \   Underlying protocol: The profile specifies the use of RTP over\n      unicast\
    \ and multicast UDP as well as TCP.  (This does not preclude\n      the use of\
    \ these definitions when RTP is carried by other lower-\n      layer protocols.)\n\
    \   Transport mapping: The standard mapping of RTP and RTCP to\n      transport-level\
    \ addresses is used.\n   Encapsulation: This profile leaves to applications the\n\
    \      specification of RTP encapsulation in protocols other than UDP.\n"
- title: 3.  Registering Additional Encodings
  contents:
  - "3.  Registering Additional Encodings\n   This profile lists a set of encodings,\
    \ each of which is comprised of\n   a particular media data compression or representation\
    \ plus a payload\n   format for encapsulation within RTP.  Some of those payload\
    \ formats\n   are specified here, while others are specified in separate RFCs.\
    \  It\n   is expected that additional encodings beyond the set listed here will\n\
    \   be created in the future and specified in additional payload format\n   RFCs.\n\
    \   This profile also assigns to each encoding a short name which MAY be\n   used\
    \ by higher-level control protocols, such as the Session\n   Description Protocol\
    \ (SDP), RFC 2327 [6], to identify encodings\n   selected for a particular RTP\
    \ session.\n   In some contexts it may be useful to refer to these encodings in\
    \ the\n   form of a MIME content-type.  To facilitate this, RFC 3555 [7]\n   provides\
    \ registrations for all of the encodings names listed here as\n   MIME subtype\
    \ names under the \"audio\" and \"video\" MIME types through\n   the MIME registration\
    \ procedure as specified in RFC 2048 [8].\n   Any additional encodings specified\
    \ for use under this profile (or\n   others) may also be assigned names registered\
    \ as MIME subtypes with\n   the Internet Assigned Numbers Authority (IANA).  This\
    \ registry\n   provides a means to insure that the names assigned to the additional\n\
    \   encodings are kept unique.  RFC 3555 specifies the information that\n   is\
    \ required for the registration of RTP encodings.\n   In addition to assigning\
    \ names to encodings, this profile also\n   assigns static RTP payload type numbers\
    \ to some of them.  However,\n   the payload type number space is relatively small\
    \ and cannot\n   accommodate assignments for all existing and future encodings.\n\
    \   During the early stages of RTP development, it was necessary to use\n   statically\
    \ assigned payload types because no other mechanism had been\n   specified to\
    \ bind encodings to payload types.  It was anticipated\n   that non-RTP means\
    \ beyond the scope of this memo (such as directory\n   services or invitation\
    \ protocols) would be specified to establish a\n   dynamic mapping between a payload\
    \ type and an encoding.  Now,\n   mechanisms for defining dynamic payload type\
    \ bindings have been\n   specified in the Session Description Protocol (SDP) and\
    \ in other\n   protocols such as ITU-T Recommendation H.323/H.245.  These mechanisms\n\
    \   associate the registered name of the encoding/payload format, along\n   with\
    \ any additional required parameters, such as the RTP timestamp\n   clock rate\
    \ and number of channels, with a payload type number.  This\n   association is\
    \ effective only for the duration of the RTP session in\n   which the dynamic\
    \ payload type binding is made.  This association\n   applies only to the RTP\
    \ session for which it is made, thus the\n   numbers can be re-used for different\
    \ encodings in different sessions\n   so the number space limitation is avoided.\n\
    \   This profile reserves payload type numbers in the range 96-127\n   exclusively\
    \ for dynamic assignment.  Applications SHOULD first use\n   values in this range\
    \ for dynamic payload types.  Those applications\n   which need to define more\
    \ than 32 dynamic payload types MAY bind\n   codes below 96, in which case it\
    \ is RECOMMENDED that unassigned\n   payload type numbers be used first.  However,\
    \ the statically assigned\n   payload types are default bindings and MAY be dynamically\
    \ bound to\n   new encodings if needed.  Redefining payload types below 96 may\
    \ cause\n   incorrect operation if an attempt is made to join a session without\n\
    \   obtaining session description information that defines the dynamic\n   payload\
    \ types.\n   Dynamic payload types SHOULD NOT be used without a well-defined\n\
    \   mechanism to indicate the mapping.  Systems that expect to\n   interoperate\
    \ with others operating under this profile SHOULD NOT make\n   their own assignments\
    \ of proprietary encodings to particular, fixed\n   payload types.\n   This specification\
    \ establishes the policy that no additional static\n   payload types will be assigned\
    \ beyond the ones defined in this\n   document.  Establishing this policy avoids\
    \ the problem of trying to\n   create a set of criteria for accepting static assignments\
    \ and\n   encourages the implementation and deployment of the dynamic payload\n\
    \   type mechanisms.\n   The final set of static payload type assignments is provided\
    \ in\n   Tables 4 and 5.\n"
- title: 4.  Audio
  contents:
  - '4.  Audio

    '
- title: 4.1  Encoding-Independent Rules
  contents:
  - "4.1  Encoding-Independent Rules\n   Since the ability to suppress silence is\
    \ one of the primary\n   motivations for using packets to transmit voice, the\
    \ RTP header\n   carries both a sequence number and a timestamp to allow a receiver\
    \ to\n   distinguish between lost packets and periods of time when no data was\n\
    \   transmitted.  Discontiguous transmission (silence suppression) MAY be\n  \
    \ used with any audio payload format.  Receivers MUST assume that\n   senders\
    \ may suppress silence unless this is restricted by signaling\n   specified elsewhere.\
    \  (Even if the transmitter does not suppress\n   silence, the receiver should\
    \ be prepared to handle periods when no\n   data is present since packets may\
    \ be lost.)\n   Some payload formats (see Sections 4.5.3 and 4.5.6) define a \"\
    silence\n   insertion descriptor\" or \"comfort noise\" frame to specify parameters\n\
    \   for artificial noise that may be generated during a period of silence\n  \
    \ to approximate the background noise at the source.  For other payload\n   formats,\
    \ a generic Comfort Noise (CN) payload format is specified in\n   RFC 3389 [9].\
    \  When the CN payload format is used with another\n   payload format, different\
    \ values in the RTP payload type field\n   distinguish comfort-noise packets from\
    \ those of the selected payload\n   format.\n   For applications which send either\
    \ no packets or occasional comfort-\n   noise packets during silence, the first\
    \ packet of a talkspurt, that\n   is, the first packet after a silence period\
    \ during which packets have\n   not been transmitted contiguously, SHOULD be distinguished\
    \ by setting\n   the marker bit in the RTP data header to one.  The marker bit\
    \ in all\n   other packets is zero.  The beginning of a talkspurt MAY be used\
    \ to\n   adjust the playout delay to reflect changing network delays.\n   Applications\
    \ without silence suppression MUST set the marker bit to\n   zero.\n   The RTP\
    \ clock rate used for generating the RTP timestamp is\n   independent of the number\
    \ of channels and the encoding; it usually\n   equals the number of sampling periods\
    \ per second.  For N-channel\n   encodings, each sampling period (say, 1/8,000\
    \ of a second) generates\n   N samples.  (This terminology is standard, but somewhat\
    \ confusing, as\n   the total number of samples generated per second is then the\
    \ sampling\n   rate times the channel count.)\n   If multiple audio channels are\
    \ used, channels are numbered left-to-\n   right, starting at one.  In RTP audio\
    \ packets, information from\n   lower-numbered channels precedes that from higher-numbered\
    \ channels.\n   For more than two channels, the convention followed by the AIFF-C\n\
    \   audio interchange format SHOULD be followed [3], using the following\n   notation,\
    \ unless some other convention is specified for a particular\n   encoding or payload\
    \ format:\n      l  left\n      r  right\n      c  center\n      S  surround\n\
    \      F  front\n      R  rear\n      channels  description  channel\n       \
    \                         1     2   3   4   5   6\n      _________________________________________________\n\
    \      2         stereo          l     r\n      3                         l  \
    \   r   c\n      4                         l     c   r   S\n      5          \
    \              Fl     Fr  Fc  Sl  Sr\n      6                         l     lc\
    \  c   r   rc  S\n         Note: RFC 1890 defined two conventions for the ordering\
    \ of four\n         audio channels.  Since the ordering is indicated implicitly\
    \ by\n         the number of channels, this was ambiguous.  In this revision,\n\
    \         the order described as \"quadrophonic\" has been eliminated to\n   \
    \      remove the ambiguity.  This choice was based on the observation\n     \
    \    that quadrophonic consumer audio format did not become popular\n        \
    \ whereas surround-sound subsequently has.\n   Samples for all channels belonging\
    \ to a single sampling instant MUST\n   be within the same packet.  The interleaving\
    \ of samples from\n   different channels depends on the encoding.  General guidelines\
    \ are\n   given in Section 4.3 and 4.4.\n   The sampling frequency SHOULD be drawn\
    \ from the set:  8,000, 11,025,\n   16,000, 22,050, 24,000, 32,000, 44,100 and\
    \ 48,000 Hz.  (Older Apple\n   Macintosh computers had a native sample rate of\
    \ 22,254.54 Hz, which\n   can be converted to 22,050 with acceptable quality by\
    \ dropping 4\n   samples in a 20 ms frame.)  However, most audio encodings are\
    \ defined\n   for a more restricted set of sampling frequencies.  Receivers SHOULD\n\
    \   be prepared to accept multi-channel audio, but MAY choose to only\n   play\
    \ a single channel.\n"
- title: 4.2  Operating Recommendations
  contents:
  - "4.2  Operating Recommendations\n   The following recommendations are default\
    \ operating parameters.\n   Applications SHOULD be prepared to handle other values.\
    \  The ranges\n   given are meant to give guidance to application writers, allowing\
    \ a\n   set of applications conforming to these guidelines to interoperate\n \
    \  without additional negotiation.  These guidelines are not intended to\n   restrict\
    \ operating parameters for applications that can negotiate a\n   set of interoperable\
    \ parameters, e.g., through a conference control\n   protocol.\n   For packetized\
    \ audio, the default packetization interval SHOULD have\n   a duration of 20 ms\
    \ or one frame, whichever is longer, unless\n   otherwise noted in Table 1 (column\
    \ \"ms/packet\").  The packetization\n   interval determines the minimum end-to-end\
    \ delay; longer packets\n   introduce less header overhead but higher delay and\
    \ make packet loss\n   more noticeable.  For non-interactive applications such\
    \ as lectures\n   or for links with severe bandwidth constraints, a higher\n \
    \  packetization delay MAY be used.  A receiver SHOULD accept packets\n   representing\
    \ between 0 and 200 ms of audio data.  (For framed audio\n   encodings, a receiver\
    \ SHOULD accept packets with a number of frames\n   equal to 200 ms divided by\
    \ the frame duration, rounded up.)  This\n   restriction allows reasonable buffer\
    \ sizing for the receiver.\n"
- title: 4.3  Guidelines for Sample-Based Audio Encodings
  contents:
  - "4.3  Guidelines for Sample-Based Audio Encodings\n   In sample-based encodings,\
    \ each audio sample is represented by a\n   fixed number of bits.  Within the\
    \ compressed audio data, codes for\n   individual samples may span octet boundaries.\
    \  An RTP audio packet\n   may contain any number of audio samples, subject to\
    \ the constraint\n   that the number of bits per sample times the number of samples\
    \ per\n   packet yields an integral octet count.  Fractional encodings produce\n\
    \   less than one octet per sample.\n   The duration of an audio packet is determined\
    \ by the number of\n   samples in the packet.\n   For sample-based encodings producing\
    \ one or more octets per sample,\n   samples from different channels sampled at\
    \ the same sampling instant\n   SHOULD be packed in consecutive octets.  For example,\
    \ for a two-\n   channel encoding, the octet sequence is (left channel, first\
    \ sample),\n   (right channel, first sample), (left channel, second sample), (right\n\
    \   channel, second sample), ....  For multi-octet encodings, octets\n   SHOULD\
    \ be transmitted in network byte order (i.e., most significant\n   octet first).\n\
    \   The packing of sample-based encodings producing less than one octet\n   per\
    \ sample is encoding-specific.\n   The RTP timestamp reflects the instant at which\
    \ the first sample in\n   the packet was sampled, that is, the oldest information\
    \ in the\n   packet.\n"
- title: 4.4  Guidelines for Frame-Based Audio Encodings
  contents:
  - "4.4  Guidelines for Frame-Based Audio Encodings\n   Frame-based encodings encode\
    \ a fixed-length block of audio into\n   another block of compressed data, typically\
    \ also of fixed length.\n   For frame-based encodings, the sender MAY choose to\
    \ combine several\n   such frames into a single RTP packet.  The receiver can\
    \ tell the\n   number of frames contained in an RTP packet, if all the frames\
    \ have\n   the same length, by dividing the RTP payload length by the audio\n\
    \   frame size which is defined as part of the encoding.  This does not\n   work\
    \ when carrying frames of different sizes unless the frame sizes\n   are relatively\
    \ prime.  If not, the frames MUST indicate their size.\n   For frame-based codecs,\
    \ the channel order is defined for the whole\n   block.  That is, for two-channel\
    \ audio, right and left samples SHOULD\n   be coded independently, with the encoded\
    \ frame for the left channel\n   preceding that for the right channel.\n   All\
    \ frame-oriented audio codecs SHOULD be able to encode and decode\n   several\
    \ consecutive frames within a single packet.  Since the frame\n   size for the\
    \ frame-oriented codecs is given, there is no need to use\n   a separate designation\
    \ for the same encoding, but with different\n   number of frames per packet.\n\
    \   RTP packets SHALL contain a whole number of frames, with frames\n   inserted\
    \ according to age within a packet, so that the oldest frame\n   (to be played\
    \ first) occurs immediately after the RTP packet header.\n   The RTP timestamp\
    \ reflects the instant at which the first sample in\n   the first frame was sampled,\
    \ that is, the oldest information in the\n   packet.\n"
- title: 4.5 Audio Encodings
  contents:
  - "4.5 Audio Encodings\n   name of                              sampling       \
    \       default\n   encoding  sample/frame  bits/sample      rate  ms/frame  ms/packet\n\
    \   __________________________________________________________________\n   DVI4\
    \      sample        4                var.                   20\n   G722     \
    \ sample        8              16,000                   20\n   G723      frame\
    \         N/A             8,000        30         30\n   G726-40   sample    \
    \    5               8,000                   20\n   G726-32   sample        4\
    \               8,000                   20\n   G726-24   sample        3     \
    \          8,000                   20\n   G726-16   sample        2          \
    \     8,000                   20\n   G728      frame         N/A             8,000\
    \       2.5         20\n   G729      frame         N/A             8,000     \
    \   10         20\n   G729D     frame         N/A             8,000        10\
    \         20\n   G729E     frame         N/A             8,000        10     \
    \    20\n   GSM       frame         N/A             8,000        20         20\n\
    \   GSM-EFR   frame         N/A             8,000        20         20\n   L8\
    \        sample        8                var.                   20\n   L16    \
    \   sample        16               var.                   20\n   LPC       frame\
    \         N/A             8,000        20         20\n   MPA       frame     \
    \    N/A              var.      var.\n   PCMA      sample        8           \
    \     var.                   20\n   PCMU      sample        8                var.\
    \                   20\n   QCELP     frame         N/A             8,000     \
    \   20         20\n   VDVI      sample        var.             var.          \
    \         20\n   Table 1: Properties of Audio Encodings (N/A: not applicable;\
    \ var.:\n            variable)\n   The characteristics of the audio encodings\
    \ described in this document\n   are shown in Table 1; they are listed in order\
    \ of their payload type\n   in Table 4.  While most audio codecs are only specified\
    \ for a fixed\n   sampling rate, some sample-based algorithms (indicated by an\
    \ entry of\n   \"var.\" in the sampling rate column of Table 1) may be used with\n\
    \   different sampling rates, resulting in different coded bit rates.\n   When\
    \ used with a sampling rate other than that for which a static\n   payload type\
    \ is defined, non-RTP means beyond the scope of this memo\n   MUST be used to\
    \ define a dynamic payload type and MUST indicate the\n   selected RTP timestamp\
    \ clock rate, which is usually the same as the\n   sampling rate for audio.\n"
- title: 4.5.1 DVI4
  contents:
  - "4.5.1 DVI4\n   DVI4 uses an adaptive delta pulse code modulation (ADPCM) encoding\n\
    \   scheme that was specified by the Interactive Multimedia Association\n   (IMA)\
    \ as the \"IMA ADPCM wave type\".  However, the encoding defined\n   here as DVI4\
    \ differs in three respects from the IMA specification:\n   o  The RTP DVI4 header\
    \ contains the predicted value rather than the\n      first sample value contained\
    \ the IMA ADPCM block header.\n   o  IMA ADPCM blocks contain an odd number of\
    \ samples, since the first\n      sample of a block is contained just in the header\
    \ (uncompressed),\n      followed by an even number of compressed samples.  DVI4\
    \ has an\n      even number of compressed samples only, using the `predict' word\n\
    \      from the header to decode the first sample.\n   o  For DVI4, the 4-bit\
    \ samples are packed with the first sample in\n      the four most significant\
    \ bits and the second sample in the four\n      least significant bits.  In the\
    \ IMA ADPCM codec, the samples are\n      packed in the opposite order.\n   Each\
    \ packet contains a single DVI block.  This profile only defines\n   the 4-bit-per-sample\
    \ version, while IMA also specified a 3-bit-per-\n   sample encoding.\n   The\
    \ \"header\" word for each channel has the following structure:\n      int16 \
    \ predict;  /* predicted value of first sample\n                          from\
    \ the previous block (L16 format) */\n      u_int8 index;    /* current index\
    \ into stepsize table */\n      u_int8 reserved; /* set to zero by sender, ignored\
    \ by receiver */\n   Each octet following the header contains two 4-bit samples,\
    \ thus the\n   number of samples per packet MUST be even because there is no means\n\
    \   to indicate a partially filled last octet.\n   Packing of samples for multiple\
    \ channels is for further study.\n   The IMA ADPCM algorithm was described in\
    \ the document IMA Recommended\n   Practices for Enhancing Digital Audio Compatibility\
    \ in Multimedia\n   Systems (version 3.0).  However, the Interactive Multimedia\n\
    \   Association ceased operations in 1997.  Resources for an archived\n   copy\
    \ of that document and a software implementation of the RTP DVI4\n   encoding\
    \ are listed in Section 13.\n"
- title: 4.5.2 G722
  contents:
  - "4.5.2 G722\n   G722 is specified in ITU-T Recommendation G.722, \"7 kHz audio-coding\n\
    \   within 64 kbit/s\".  The G.722 encoder produces a stream of octets,\n   each\
    \ of which SHALL be octet-aligned in an RTP packet.  The first bit\n   transmitted\
    \ in the G.722 octet, which is the most significant bit of\n   the higher sub-band\
    \ sample, SHALL correspond to the most significant\n   bit of the octet in the\
    \ RTP packet.\n   Even though the actual sampling rate for G.722 audio is 16,000\
    \ Hz,\n   the RTP clock rate for the G722 payload format is 8,000 Hz because\n\
    \   that value was erroneously assigned in RFC 1890 and must remain\n   unchanged\
    \ for backward compatibility.  The octet rate or sample-pair\n   rate is 8,000\
    \ Hz.\n"
- title: 4.5.3 G723
  contents:
  - "4.5.3 G723\n   G723 is specified in ITU Recommendation G.723.1, \"Dual-rate speech\n\
    \   coder for multimedia communications transmitting at 5.3 and 6.3\n   kbit/s\"\
    .  The G.723.1 5.3/6.3 kbit/s codec was defined by the ITU-T\n   as a mandatory\
    \ codec for ITU-T H.324 GSTN videophone terminal\n   applications.  The algorithm\
    \ has a floating point specification in\n   Annex B to G.723.1, a silence compression\
    \ algorithm in Annex A to\n   G.723.1 and a scalable channel coding scheme for\
    \ wireless\n   applications in G.723.1 Annex C.\n   This Recommendation specifies\
    \ a coded representation that can be used\n   for compressing the speech signal\
    \ component of multi-media services\n   at a very low bit rate.  Audio is encoded\
    \ in 30 ms frames, with an\n   additional delay of 7.5 ms due to look-ahead. \
    \ A G.723.1 frame can be\n   one of three sizes:  24 octets (6.3 kb/s frame),\
    \ 20 octets (5.3 kb/s\n   frame), or 4 octets.  These 4-octet frames are called\
    \ SID frames\n   (Silence Insertion Descriptor) and are used to specify comfort\
    \ noise\n   parameters.  There is no restriction on how 4, 20, and 24 octet\n\
    \   frames are intermixed.  The least significant two bits of the first\n   octet\
    \ in the frame determine the frame size and codec type:\n         bits  content\
    \                      octets/frame\n         00    high-rate speech (6.3 kb/s)\
    \            24\n         01    low-rate speech  (5.3 kb/s)            20\n  \
    \       10    SID frame                               4\n         11    reserved\n\
    \   It is possible to switch between the two rates at any 30 ms frame\n   boundary.\
    \  Both (5.3 kb/s and 6.3 kb/s) rates are a mandatory part of\n   the encoder\
    \ and decoder.  Receivers MUST accept both data rates and\n   MUST accept SID\
    \ frames unless restriction of these capabilities has\n   been signaled.  The\
    \ MIME registration for G723 in RFC 3555 [7]\n   specifies parameters that MAY\
    \ be used with MIME or SDP to restrict to\n   a single data rate or to restrict\
    \ the use of SID frames.  This coder\n   was optimized to represent speech with\
    \ near-toll quality at the above\n   rates using a limited amount of complexity.\n\
    \   The packing of the encoded bit stream into octets and the\n   transmission\
    \ order of the octets is specified in Rec. G.723.1 and is\n   the same as that\
    \ produced by the G.723 C code reference\n   implementation.  For the 6.3 kb/s\
    \ data rate, this packing is\n   illustrated as follows, where the header (HDR)\
    \ bits are always \"0 0\"\n   as shown in Fig. 1 to indicate operation at 6.3\
    \ kb/s, and the Z bit\n   is always set to zero.  The diagrams show the bit packing\
    \ in \"network\n   byte order\", also known as big-endian order.  The bits of\
    \ each 32-bit\n   word are numbered 0 to 31, with the most significant bit on\
    \ the left\n   and numbered 0.  The octets (bytes) of each word are transmitted\
    \ most\n   significant octet first.  The bits of each data field are numbered\
    \ in\n   the order of the bit stream representation of the encoding (least\n \
    \  significant bit first).  The vertical bars indicate the boundaries\n   between\
    \ field fragments.\n    0                   1                   2            \
    \       3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |  \
    \  LPC    |HDR|      LPC      |      LPC      |    ACL0   |LPC|\n   |        \
    \   |   |               |               |           |   |\n   |0 0 0 0 0 0|0 0|1\
    \ 1 1 1 0 0 0 0|2 2 1 1 1 1 1 1|0 0 0 0 0 0|2 2|\n   |5 4 3 2 1 0|   |3 2 1 0\
    \ 9 8 7 6|1 0 9 8 7 6 5 4|5 4 3 2 1 0|3 2|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  ACL2   |ACL|A| GAIN0 |ACL|ACL|    GAIN0      |    GAIN1      |\n   |  \
    \       | 1 |C|       | 3 | 2 |               |               |\n   |0 0 0 0 0|0\
    \ 0|0|0 0 0 0|0 0|0 0|1 1 0 0 0 0 0 0|0 0 0 0 0 0 0 0|\n   |4 3 2 1 0|1 0|6|3\
    \ 2 1 0|1 0|6 5|1 0 9 8 7 6 5 4|7 6 5 4 3 2 1 0|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | GAIN2 | GAIN1 |     GAIN2     |     GAIN3     | GRID  | GAIN3 |\n   |  \
    \     |       |               |               |       |       |\n   |0 0 0 0|1\
    \ 1 0 0|1 1 0 0 0 0 0 0|0 0 0 0 0 0 0 0|0 0 0 0|1 1 0 0|\n   |3 2 1 0|1 0 9 8|1\
    \ 0 9 8 7 6 5 4|7 6 5 4 3 2 1 0|3 2 1 0|1 0 9 8|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   MSBPOS    |Z|POS|  MSBPOS   |     POS0      |POS|   POS0    |\n   |  \
    \           | | 0 |           |               | 1 |           |\n   |0 0 0 0 0\
    \ 0 0|0|0 0|1 1 1 0 0 0|0 0 0 0 0 0 0 0|0 0|1 1 1 1 1 1|\n   |6 5 4 3 2 1 0| |1\
    \ 0|2 1 0 9 8 7|9 8 7 6 5 4 3 2|1 0|5 4 3 2 1 0|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     POS1      | POS2  | POS1  |     POS2      | POS3  | POS2  |\n   |  \
    \             |       |       |               |       |       |\n   |0 0 0 0 0\
    \ 0 0 0|0 0 0 0|1 1 1 1|1 1 0 0 0 0 0 0|0 0 0 0|1 1 1 1|\n   |9 8 7 6 5 4 3 2|3\
    \ 2 1 0|3 2 1 0|1 0 9 8 7 6 5 4|3 2 1 0|5 4 3 2|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     POS3      |   PSIG0   |POS|PSIG2|  PSIG1  |  PSIG3  |PSIG2|\n   |  \
    \             |           | 3 |     |         |         |     |\n   |1 1 0 0 0\
    \ 0 0 0|0 0 0 0 0 0|1 1|0 0 0|0 0 0 0 0|0 0 0 0 0|0 0 0|\n   |1 0 9 8 7 6 5 4|5\
    \ 4 3 2 1 0|3 2|2 1 0|4 3 2 1 0|4 3 2 1 0|5 4 3|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                  Figure 1: G.723 (6.3 kb/s) bit packing\n   For the 5.3 kb/s\
    \ data rate, the header (HDR) bits are always \"0 1\",\n   as shown in Fig. 2,\
    \ to indicate operation at 5.3 kb/s.\n    0                   1              \
    \     2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    LPC    |HDR|      LPC      |      LPC      |   ACL0    |LPC|\n   |  \
    \         |   |               |               |           |   |\n   |0 0 0 0 0\
    \ 0|0 1|1 1 1 1 0 0 0 0|2 2 1 1 1 1 1 1|0 0 0 0 0 0|2 2|\n   |5 4 3 2 1 0|   |3\
    \ 2 1 0 9 8 7 6|1 0 9 8 7 6 5 4|5 4 3 2 1 0|3 2|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  ACL2   |ACL|A| GAIN0 |ACL|ACL|     GAIN0     |     GAIN1     |\n   |  \
    \       | 1 |C|       | 3 | 2 |               |               |\n   |0 0 0 0 0|0\
    \ 0|0|0 0 0 0|0 0|0 0|1 1 0 0 0 0 0 0|0 0 0 0 0 0 0 0|\n   |4 3 2 1 0|1 0|6|3\
    \ 2 1 0|1 0|6 5|1 0 9 8 7 6 5 4|7 6 5 4 3 2 1 0|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | GAIN2 | GAIN1 |     GAIN2     |    GAIN3      | GRID  | GAIN3 |\n   |  \
    \     |       |               |               |       |       |\n   |0 0 0 0|1\
    \ 1 0 0|1 1 0 0 0 0 0 0|0 0 0 0 0 0 0 0|0 0 0 0|1 1 0 0|\n   |3 2 1 0|1 0 9 8|1\
    \ 0 9 8 7 6 5 4|7 6 5 4 3 2 1 0|4 3 2 1|1 0 9 8|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     POS0      | POS1  | POS0  |     POS1      |     POS2      |\n   |  \
    \             |       |       |               |               |\n   |0 0 0 0 0\
    \ 0 0 0|0 0 0 0|1 1 0 0|1 1 0 0 0 0 0 0|0 0 0 0 0 0 0 0|\n   |7 6 5 4 3 2 1 0|3\
    \ 2 1 0|1 0 9 8|1 0 9 8 7 6 5 4|7 6 5 4 3 2 1 0|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | POS3  | POS2  |     POS3      | PSIG1 | PSIG0 | PSIG3 | PSIG2 |\n   |  \
    \     |       |               |       |       |       |       |\n   |0 0 0 0|1\
    \ 1 0 0|1 1 0 0 0 0 0 0|0 0 0 0|0 0 0 0|0 0 0 0|0 0 0 0|\n   |3 2 1 0|1 0 9 8|1\
    \ 0 9 8 7 6 5 4|3 2 1 0|3 2 1 0|3 2 1 0|3 2 1 0|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                  Figure 2: G.723 (5.3 kb/s) bit packing\n   The packing of G.723.1\
    \ SID (silence) frames, which are indicated by\n   the header (HDR) bits having\
    \ the pattern \"1 0\", is depicted in Fig.\n   3.\n    0                   1 \
    \                  2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    LPC    |HDR|      LPC      |      LPC      |   GAIN    |LPC|\n   |  \
    \         |   |               |               |           |   |\n   |0 0 0 0 0\
    \ 0|1 0|1 1 1 1 0 0 0 0|2 2 1 1 1 1 1 1|0 0 0 0 0 0|2 2|\n   |5 4 3 2 1 0|   |3\
    \ 2 1 0 9 8 7 6|1 0 9 8 7 6 5 4|5 4 3 2 1 0|3 2|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                   Figure 3: G.723 SID mode bit packing\n"
- title: 4.5.4  G726-40, G726-32, G726-24, and G726-16
  contents:
  - "4.5.4  G726-40, G726-32, G726-24, and G726-16\n   ITU-T Recommendation G.726\
    \ describes, among others, the algorithm\n   recommended for conversion of a single\
    \ 64 kbit/s A-law or mu-law PCM\n   channel encoded at 8,000 samples/sec to and\
    \ from a 40, 32, 24, or 16\n   kbit/s channel.  The conversion is applied to the\
    \ PCM stream using an\n   Adaptive Differential Pulse Code Modulation (ADPCM)\
    \ transcoding\n   technique.  The ADPCM representation consists of a series of\n\
    \   codewords with a one-to-one correspondence to the samples in the PCM\n   stream.\
    \  The G726 data rates of 40, 32, 24, and 16 kbit/s have\n   codewords of 5, 4,\
    \ 3, and 2 bits, respectively.\n   The 16 and 24 kbit/s encodings do not provide\
    \ toll quality speech.\n   They are designed for used in overloaded Digital Circuit\n\
    \   Multiplication Equipment (DCME).  ITU-T G.726 recommends that the 16\n   and\
    \ 24 kbit/s encodings should be alternated with higher data rate\n   encodings\
    \ to provide an average sample size of between 3.5 and 3.7\n   bits per sample.\n\
    \   The encodings of G.726 are here denoted as G726-40, G726-32, G726-24,\n  \
    \ and G726-16.  Prior to 1990, G721 described the 32 kbit/s ADPCM\n   encoding,\
    \ and G723 described the 40, 32, and 16 kbit/s encodings.\n   Thus, G726-32 designates\
    \ the same algorithm as G721 in RFC 1890.\n   A stream of G726 codewords contains\
    \ no information on the encoding\n   being used, therefore transitions between\
    \ G726 encoding types are not\n   permitted within a sequence of packed codewords.\
    \  Applications MUST\n   determine the encoding type of packed codewords from\
    \ the RTP payload\n   identifier.\n   No payload-specific header information SHALL\
    \ be included as part of\n   the audio data.  A stream of G726 codewords MUST\
    \ be packed into\n   octets as follows:  the first codeword is placed into the\
    \ first octet\n   such that the least significant bit of the codeword aligns with\
    \ the\n   least significant bit in the octet, the second codeword is then\n  \
    \ packed so that its least significant bit coincides with the least\n   significant\
    \ unoccupied bit in the octet.  When a complete codeword\n   cannot be placed\
    \ into an octet, the bits overlapping the octet\n   boundary are placed into the\
    \ least significant bits of the next\n   octet.  Packing MUST end with a completely\
    \ packed final octet.  The\n   number of codewords packed will therefore be a\
    \ multiple of 8, 2, 8,\n   and 4 for G726-40, G726-32, G726-24, and G726-16, respectively.\
    \  An\n   example of the packing scheme for G726-32 codewords is as shown,\n \
    \  where bit 7 is the least significant bit of the first octet, and bit\n   A3\
    \ is the least significant bit of the first codeword:\n          0           \
    \        1\n          0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \         |B B B B|A A A A|D D D D|C C C C| ...\n         |0 1 2 3|0 1 2 3|0 1\
    \ 2 3|0 1 2 3|\n         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n   An example of\
    \ the packing scheme for G726-24 codewords follows, where\n   again bit 7 is the\
    \ least significant bit of the first octet, and bit\n   A2 is the least significant\
    \ bit of the first codeword:\n          0                   1                \
    \   2\n          0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\n         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \         |C C|B B B|A A A|F|E E E|D D D|C|H H H|G G G|F F| ...\n         |1 2|0\
    \ 1 2|0 1 2|2|0 1 2|0 1 2|0|0 1 2|0 1 2|0 1|\n         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   Note that the \"little-endian\" direction in which samples are packed\n  \
    \ into octets in the G726-16, -24, -32 and -40 payload formats\n   specified here\
    \ is consistent with ITU-T Recommendation X.420, but is\n   the opposite of what\
    \ is specified in ITU-T Recommendation I.366.2\n   Annex E for ATM AAL2 transport.\
    \  A second set of RTP payload formats\n   matching the packetization of I.366.2\
    \ Annex E and identified by MIME\n   subtypes AAL2-G726-16, -24, -32 and -40 will\
    \ be specified in a\n   separate document.\n"
- title: 4.5.5 G728
  contents:
  - "4.5.5 G728\n   G728 is specified in ITU-T Recommendation G.728, \"Coding of speech\
    \ at\n   16 kbit/s using low-delay code excited linear prediction\".\n   A G.278\
    \ encoder translates 5 consecutive audio samples into a 10-bit\n   codebook index,\
    \ resulting in a bit rate of 16 kb/s for audio sampled\n   at 8,000 samples per\
    \ second.  The group of five consecutive samples\n   is called a vector.  Four\
    \ consecutive vectors, labeled V1 to V4\n   (where V1 is to be played first by\
    \ the receiver), build one G.728\n   frame.  The four vectors of 40 bits are packed\
    \ into 5 octets, labeled\n   B1 through B5.  B1 SHALL be placed first in the RTP\
    \ packet.\n   Referring to the figure below, the principle for bit order is\n\
    \   \"maintenance of bit significance\".  Bits from an older vector are\n   more\
    \ significant than bits from newer vectors.  The MSB of the frame\n   goes to\
    \ the MSB of B1 and the LSB of the frame goes to LSB of B5.\n                \
    \   1         2         3        3\n         0         0         0         0 \
    \       9\n         ++++++++++++++++++++++++++++++++++++++++\n         <---V1---><---V2---><---V3---><---V4--->\
    \ vectors\n         <--B1--><--B2--><--B3--><--B4--><--B5--> octets\n        \
    \ <------------- frame 1 ---------------->\n   In particular, B1 contains the\
    \ eight most significant bits of V1,\n   with the MSB of V1 being the MSB of B1.\
    \  B2 contains the two least\n   significant bits of V1, the more significant\
    \ of the two in its MSB,\n   and the six most significant bits of V2.  B1 SHALL\
    \ be placed first in\n   the RTP packet and B5 last.\n"
- title: 4.5.6 G729
  contents:
  - "4.5.6 G729\n   G729 is specified in ITU-T Recommendation G.729, \"Coding of speech\
    \ at\n   8 kbit/s using conjugate structure-algebraic code excited linear\n  \
    \ prediction (CS-ACELP)\".  A reduced-complexity version of the G.729\n   algorithm\
    \ is specified in Annex A to Rec. G.729.  The speech coding\n   algorithms in\
    \ the main body of G.729 and in G.729 Annex A are fully\n   interoperable with\
    \ each other, so there is no need to further\n   distinguish between them.  An\
    \ implementation that signals or accepts\n   use of G729 payload format may implement\
    \ either G.729 or G.729A\n   unless restricted by additional signaling specified\
    \ elsewhere related\n   specifically to the encoding rather than the payload format.\
    \  The\n   G.729 and G.729 Annex A codecs were optimized to represent speech\n\
    \   with high quality, where G.729 Annex A trades some speech quality for\n  \
    \ an approximate 50% complexity reduction [10].  See the next Section\n   (4.5.7)\
    \ for other data rates added in later G.729 Annexes.  For all\n   data rates,\
    \ the sampling frequency (and RTP timestamp clock rate) is\n   8,000 Hz.\n   A\
    \ voice activity detector (VAD) and comfort noise generator (CNG)\n   algorithm\
    \ in Annex B of G.729 is RECOMMENDED for digital simultaneous\n   voice and data\
    \ applications and can be used in conjunction with G.729\n   or G.729 Annex A.\
    \  A G.729 or G.729 Annex A frame contains 10 octets,\n   while the G.729 Annex\
    \ B comfort noise frame occupies 2 octets.\n   Receivers MUST accept comfort noise\
    \ frames if restriction of their\n   use has not been signaled.  The MIME registration\
    \ for G729 in RFC\n   3555 [7] specifies a parameter that MAY be used with MIME\
    \ or SDP to\n   restrict the use of comfort noise frames.\n   A G729 RTP packet\
    \ may consist of zero or more G.729 or G.729 Annex A\n   frames, followed by zero\
    \ or one G.729 Annex B frames.  The presence\n   of a comfort noise frame can\
    \ be deduced from the length of the RTP\n   payload.  The default packetization\
    \ interval is 20 ms (two frames),\n   but in some situations it may be desirable\
    \ to send 10 ms packets.  An\n   example would be a transition from speech to\
    \ comfort noise in the\n   first 10 ms of the packet.  For some applications,\
    \ a longer\n   packetization interval may be required to reduce the packet rate.\n\
    \       0                   1                   2                   3\n      \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |L|      L1     |    L2   |    L3   |       P1      |P|    C1   |\n   \
    \   |0|             |         |         |               |0|         |\n      |\
    \ |0 1 2 3 4 5 6|0 1 2 3 4|0 1 2 3 4|0 1 2 3 4 5 6 7| |0 1 2 3 4|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |       C1      |  S1   | GA1 |  GB1  |    P2   |      C2       |\n   \
    \   |          1 1 1|       |     |       |         |               |\n      |5\
    \ 6 7 8 9 0 1 2|0 1 2 3|0 1 2|0 1 2 3|0 1 2 3 4|0 1 2 3 4 5 6 7|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |   C2    |  S2   | GA2 |  GB2  |\n      |    1 1 1|       |     |    \
    \   |\n      |8 9 0 1 2|0 1 2 3|0 1 2|0 1 2 3|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                    Figure 4: G.729 and G.729A bit packing\n   The transmitted\
    \ parameters of a G.729/G.729A 10-ms frame, consisting\n   of 80 bits, are defined\
    \ in Recommendation G.729, Table 8/G.729.  The\n   mapping of the these parameters\
    \ is given below in Fig. 4.  The\n   diagrams show the bit packing in \"network\
    \ byte order\", also known as\n   big-endian order.  The bits of each 32-bit word\
    \ are numbered 0 to 31,\n   with the most significant bit on the left and numbered\
    \ 0.  The octets\n   (bytes) of each word are transmitted most significant octet\
    \ first.\n   The bits of each data field are numbered in the order as produced\
    \ by\n   the G.729 C code reference implementation.\n   The packing of the G.729\
    \ Annex B comfort noise frame is shown in Fig.\n   5.\n          0           \
    \        1\n          0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \         |L|  LSF1   |  LSF2 |   GAIN  |R|\n         |S|         |       |  \
    \       |E|\n         |F|         |       |         |S|\n         |0|0 1 2 3 4|0\
    \ 1 2 3|0 1 2 3 4|V|    RESV = Reserved (zero)\n         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                       Figure 5: G.729 Annex B bit packing\n"
- title: 4.5.7 G729D and G729E
  contents:
  - "4.5.7 G729D and G729E\n   Annexes D and E to ITU-T Recommendation G.729 provide\
    \ additional data\n   rates.  Because the data rate is not signaled in the bitstream,\
    \ the\n   different data rates are given distinct RTP encoding names which are\n\
    \   mapped to distinct payload type numbers.  G729D indicates a 6.4\n   kbit/s\
    \ coding mode (G.729 Annex D, for momentary reduction in channel\n   capacity),\
    \ while G729E indicates an 11.8 kbit/s mode (G.729 Annex E,\n   for improved performance\
    \ with a wide range of narrow-band input\n   signals, e.g., music and background\
    \ noise).  Annex E has two\n   operating modes, backward adaptive and forward\
    \ adaptive, which are\n   signaled by the first two bits in each frame (the most\
    \ significant\n   two bits of the first octet).\n   The voice activity detector\
    \ (VAD) and comfort noise generator (CNG)\n   algorithm specified in Annex B of\
    \ G.729 may be used with Annex D and\n   Annex E frames in addition to G.729 and\
    \ G.729 Annex A frames.  The\n   algorithm details for the operation of Annexes\
    \ D and E with the Annex\n   B CNG are specified in G.729 Annexes F and G.  Note\
    \ that Annexes F\n   and G do not introduce any new encodings.  Receivers MUST\
    \ accept\n   comfort noise frames if restriction of their use has not been\n \
    \  signaled.  The MIME registrations for G729D and G729E in RFC 3555 [7]\n   specify\
    \ a parameter that MAY be used with MIME or SDP to restrict the\n   use of comfort\
    \ noise frames.\n   For G729D, an RTP packet may consist of zero or more G.729\
    \ Annex D\n   frames, followed by zero or one G.729 Annex B frame.  Similarly,\
    \ for\n   G729E, an RTP packet may consist of zero or more G.729 Annex E\n   frames,\
    \ followed by zero or one G.729 Annex B frame.  The presence of\n   a comfort\
    \ noise frame can be deduced from the length of the RTP\n   payload.\n   A single\
    \ RTP packet must contain frames of only one data rate,\n   optionally followed\
    \ by one comfort noise frame.  The data rate may be\n   changed from packet to\
    \ packet by changing the payload type number.\n   G.729 Annexes D, E and H describe\
    \ what the encoding and decoding\n   algorithms must do to accommodate a change\
    \ in data rate.\n   For G729D, the bits of a G.729 Annex D frame are formatted\
    \ as shown\n   below in Fig. 6 (cf.  Table D.1/G.729).  The frame length is 64\
    \ bits.\n       0                   1                   2                   3\n\
    \       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    \
    \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |L|\
    \      L1     |    L2   |    L3   |        P1     |     C1    |\n      |0|   \
    \          |         |         |               |           |\n      | |0 1 2 3\
    \ 4 5 6|0 1 2 3 4|0 1 2 3 4|0 1 2 3 4 5 6 7|0 1 2 3 4 5|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      | C1  |S1 | GA1 | GB1 |  P2   |        C2       |S2 | GA2 | GB2 |\n   \
    \   |     |   |     |     |       |                 |   |     |     |\n      |6\
    \ 7 8|0 1|0 1 2|0 1 2|0 1 2 3|0 1 2 3 4 5 6 7 8|0 1|0 1 2|0 1 2|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                     Figure 6: G.729 Annex D bit packing\n   The net bit rate\
    \ for the G.729 Annex E algorithm is 11.8 kbit/s and a\n   total of 118 bits are\
    \ used.  Two bits are appended as \"don't care\"\n   bits to complete an integer\
    \ number of octets for the frame.  For\n   G729E, the bits of a data frame are\
    \ formatted as shown in the next\n   two diagrams (cf. Table E.1/G.729).  The\
    \ fields for the G729E forward\n   adaptive mode are packed as shown in Fig. 7.\n\
    \       0                   1                   2                   3\n      \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |0 0|L|      L1     |    L2   |    L3   |        P1     |P| C0_1|\n   \
    \   |   |0|             |         |         |               |0|     |\n      |\
    \   | |0 1 2 3 4 5 6|0 1 2 3 4|0 1 2 3 4|0 1 2 3 4 5 6 7| |0 1 2|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |       |   C1_1      |     C2_1    |   C3_1      |    C4_1     |\n   \
    \   |       |             |             |             |             |\n      |3\
    \ 4 5 6|0 1 2 3 4 5 6|0 1 2 3 4 5 6|0 1 2 3 4 5 6|0 1 2 3 4 5 6|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      | GA1 |  GB1  |    P2   |   C0_2      |     C1_2    |   C2_2    |\n   \
    \   |     |       |         |             |             |           |\n      |0\
    \ 1 2|0 1 2 3|0 1 2 3 4|0 1 2 3 4 5 6|0 1 2 3 4 5 6|0 1 2 3 4 5|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      | |    C3_2     |     C4_2    | GA2 | GB2   |DC |\n      | |          \
    \   |             |     |       |   |\n      |6|0 1 2 3 4 5 6|0 1 2 3 4 5 6|0\
    \ 1 2|0 1 2 3|0 1|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \         Figure 7: G.729 Annex E (forward adaptive mode) bit packing\n   The\
    \ fields for the G729E backward adaptive mode are packed as shown\n   in Fig.\
    \ 8.\n       0                   1                   2                   3\n \
    \      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |1\
    \ 1|       P1      |P|       C0_1              |     C1_1      |\n      |   |\
    \               |0|                    1 1 1|               |\n      |   |0 1\
    \ 2 3 4 5 6 7|0|0 1 2 3 4 5 6 7 8 9 0 1 2|0 1 2 3 4 5 6 7|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |   |  C2_1       | C3_1        | C4_1        |GA1  | GB1   |P2 |\n   \
    \   |   |             |             |             |     |       |   |\n      |8\
    \ 9|0 1 2 3 4 5 6|0 1 2 3 4 5 6|0 1 2 3 4 5 6|0 1 2|0 1 2 3|0 1|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     |          C0_2           |       C1_2        |    C2_2   |\n   \
    \   |     |                    1 1 1|                   |           |\n      |2\
    \ 3 4|0 1 2 3 4 5 6 7 8 9 0 1 2|0 1 2 3 4 5 6 7 8 9|0 1 2 3 4 5|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      | |    C3_2     |     C4_2    | GA2 | GB2   |DC |\n      | |          \
    \   |             |     |       |   |\n      |6|0 1 2 3 4 5 6|0 1 2 3 4 5 6|0\
    \ 1 2|0 1 2 3|0 1|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \         Figure 8: G.729 Annex E (backward adaptive mode) bit packing\n"
- title: 4.5.8 GSM
  contents:
  - "4.5.8 GSM\n   GSM (Group Speciale Mobile) denotes the European GSM 06.10 standard\n\
    \   for full-rate speech transcoding, ETS 300 961, which is based on\n   RPE/LTP\
    \ (residual pulse excitation/long term prediction) coding at a\n   rate of 13\
    \ kb/s [11,12,13].  The text of the standard can be obtained\n   from:\n   ETSI\
    \ (European Telecommunications Standards Institute)\n   ETSI Secretariat: B.P.152\n\
    \   F-06561 Valbonne Cedex\n   France\n   Phone: +33 92 94 42 00\n   Fax:   +33\
    \ 93 65 47 16\n   Blocks of 160 audio samples are compressed into 33 octets, for\
    \ an\n   effective data rate of 13,200 b/s.\n"
- title: 4.5.8.1  General Packaging Issues
  contents:
  - "4.5.8.1  General Packaging Issues\n   The GSM standard (ETS 300 961) specifies\
    \ the bit stream produced by\n   the codec, but does not specify how these bits\
    \ should be packed for\n   transmission.  The packetization specified here has\
    \ subsequently been\n   adopted in ETSI Technical Specification TS 101 318.  Some\
    \ software\n   implementations of the GSM codec use a different packing than that\n\
    \   specified here.\n               field  field name  bits  field  field name\
    \  bits\n               ________________________________________________\n   \
    \            1      LARc[0]     6     39     xmc[22]     3\n               2 \
    \     LARc[1]     6     40     xmc[23]     3\n               3      LARc[2]  \
    \   5     41     xmc[24]     3\n               4      LARc[3]     5     42   \
    \  xmc[25]     3\n               5      LARc[4]     4     43     Nc[2]       7\n\
    \               6      LARc[5]     4     44     bc[2]       2\n              \
    \ 7      LARc[6]     3     45     Mc[2]       2\n               8      LARc[7]\
    \     3     46     xmaxc[2]    6\n               9      Nc[0]       7     47 \
    \    xmc[26]     3\n               10     bc[0]       2     48     xmc[27]   \
    \  3\n               11     Mc[0]       2     49     xmc[28]     3\n         \
    \      12     xmaxc[0]    6     50     xmc[29]     3\n               13     xmc[0]\
    \      3     51     xmc[30]     3\n               14     xmc[1]      3     52\
    \     xmc[31]     3\n               15     xmc[2]      3     53     xmc[32]  \
    \   3\n               16     xmc[3]      3     54     xmc[33]     3\n        \
    \       17     xmc[4]      3     55     xmc[34]     3\n               18     xmc[5]\
    \      3     56     xmc[35]     3\n               19     xmc[6]      3     57\
    \     xmc[36]     3\n               20     xmc[7]      3     58     xmc[37]  \
    \   3\n               21     xmc[8]      3     59     xmc[38]     3\n        \
    \       22     xmc[9]      3     60     Nc[3]       7\n               23     xmc[10]\
    \     3     61     bc[3]       2\n               24     xmc[11]     3     62 \
    \    Mc[3]       2\n               25     xmc[12]     3     63     xmaxc[3]  \
    \  6\n               26     Nc[1]       7     64     xmc[39]     3\n         \
    \      27     bc[1]       2     65     xmc[40]     3\n               28     Mc[1]\
    \       2     66     xmc[41]     3\n               29     xmaxc[1]    6     67\
    \     xmc[42]     3\n               30     xmc[13]     3     68     xmc[43]  \
    \   3\n               31     xmc[14]     3     69     xmc[44]     3\n        \
    \       32     xmc[15]     3     70     xmc[45]     3\n               33     xmc[16]\
    \     3     71     xmc[46]     3\n               34     xmc[17]     3     72 \
    \    xmc[47]     3\n               35     xmc[18]     3     73     xmc[48]   \
    \  3\n               36     xmc[19]     3     74     xmc[49]     3\n         \
    \      37     xmc[20]     3     75     xmc[50]     3\n               38     xmc[21]\
    \     3     76     xmc[51]     3\n                      Table 2: Ordering of GSM\
    \ variables\n   Octet  Bit 0   Bit 1   Bit 2   Bit 3   Bit 4   Bit 5   Bit 6 \
    \  Bit 7\n   _____________________________________________________________________\n\
    \       0    1       1       0       1    LARc0.0 LARc0.1 LARc0.2 LARc0.3\n  \
    \     1 LARc0.4 LARc0.5 LARc1.0 LARc1.1 LARc1.2 LARc1.3 LARc1.4 LARc1.5\n    \
    \   2 LARc2.0 LARc2.1 LARc2.2 LARc2.3 LARc2.4 LARc3.0 LARc3.1 LARc3.2\n      \
    \ 3 LARc3.3 LARc3.4 LARc4.0 LARc4.1 LARc4.2 LARc4.3 LARc5.0 LARc5.1\n       4\
    \ LARc5.2 LARc5.3 LARc6.0 LARc6.1 LARc6.2 LARc7.0 LARc7.1 LARc7.2\n       5  Nc0.0\
    \   Nc0.1   Nc0.2   Nc0.3   Nc0.4   Nc0.5   Nc0.6  bc0.0\n       6  bc0.1   Mc0.0\
    \   Mc0.1  xmaxc00 xmaxc01 xmaxc02 xmaxc03 xmaxc04\n       7 xmaxc05 xmc0.0  xmc0.1\
    \  xmc0.2  xmc1.0  xmc1.1  xmc1.2  xmc2.0\n       8 xmc2.1  xmc2.2  xmc3.0  xmc3.1\
    \  xmc3.2  xmc4.0  xmc4.1  xmc4.2\n       9 xmc5.0  xmc5.1  xmc5.2  xmc6.0  xmc6.1\
    \  xmc6.2  xmc7.0  xmc7.1\n      10 xmc7.2  xmc8.0  xmc8.1  xmc8.2  xmc9.0  xmc9.1\
    \  xmc9.2  xmc10.0\n      11 xmc10.1 xmc10.2 xmc11.0 xmc11.1 xmc11.2 xmc12.0 xmc12.1\
    \ xcm12.2\n      12  Nc1.0   Nc1.1   Nc1.2   Nc1.3   Nc1.4   Nc1.5   Nc1.6   bc1.0\n\
    \      13  bc1.1   Mc1.0   Mc1.1  xmaxc10 xmaxc11 xmaxc12 xmaxc13 xmaxc14\n  \
    \    14 xmax15  xmc13.0 xmc13.1 xmc13.2 xmc14.0 xmc14.1 xmc14.2 xmc15.0\n    \
    \  15 xmc15.1 xmc15.2 xmc16.0 xmc16.1 xmc16.2 xmc17.0 xmc17.1 xmc17.2\n      16\
    \ xmc18.0 xmc18.1 xmc18.2 xmc19.0 xmc19.1 xmc19.2 xmc20.0 xmc20.1\n      17 xmc20.2\
    \ xmc21.0 xmc21.1 xmc21.2 xmc22.0 xmc22.1 xmc22.2 xmc23.0\n      18 xmc23.1 xmc23.2\
    \ xmc24.0 xmc24.1 xmc24.2 xmc25.0 xmc25.1 xmc25.2\n      19  Nc2.0   Nc2.1   Nc2.2\
    \   Nc2.3   Nc2.4   Nc2.5   Nc2.6   bc2.0\n      20  bc2.1   Mc2.0   Mc2.1  xmaxc20\
    \ xmaxc21 xmaxc22 xmaxc23 xmaxc24\n      21 xmaxc25 xmc26.0 xmc26.1 xmc26.2 xmc27.0\
    \ xmc27.1 xmc27.2 xmc28.0\n      22 xmc28.1 xmc28.2 xmc29.0 xmc29.1 xmc29.2 xmc30.0\
    \ xmc30.1 xmc30.2\n      23 xmc31.0 xmc31.1 xmc31.2 xmc32.0 xmc32.1 xmc32.2 xmc33.0\
    \ xmc33.1\n      24 xmc33.2 xmc34.0 xmc34.1 xmc34.2 xmc35.0 xmc35.1 xmc35.2 xmc36.0\n\
    \      25 Xmc36.1 xmc36.2 xmc37.0 xmc37.1 xmc37.2 xmc38.0 xmc38.1 xmc38.2\n  \
    \    26  Nc3.0   Nc3.1   Nc3.2   Nc3.3   Nc3.4   Nc3.5   Nc3.6   bc3.0\n     \
    \ 27  bc3.1   Mc3.0   Mc3.1  xmaxc30 xmaxc31 xmaxc32 xmaxc33 xmaxc34\n      28\
    \ xmaxc35 xmc39.0 xmc39.1 xmc39.2 xmc40.0 xmc40.1 xmc40.2 xmc41.0\n      29 xmc41.1\
    \ xmc41.2 xmc42.0 xmc42.1 xmc42.2 xmc43.0 xmc43.1 xmc43.2\n      30 xmc44.0 xmc44.1\
    \ xmc44.2 xmc45.0 xmc45.1 xmc45.2 xmc46.0 xmc46.1\n      31 xmc46.2 xmc47.0 xmc47.1\
    \ xmc47.2 xmc48.0 xmc48.1 xmc48.2 xmc49.0\n      32 xmc49.1 xmc49.2 xmc50.0 xmc50.1\
    \ xmc50.2 xmc51.0 xmc51.1 xmc51.2\n                        Table 3: GSM payload\
    \ format\n   In the GSM packing used by RTP, the bits SHALL be packed beginning\n\
    \   from the most significant bit.  Every 160 sample GSM frame is coded\n   into\
    \ one 33 octet (264 bit) buffer.  Every such buffer begins with a\n   4 bit signature\
    \ (0xD), followed by the MSB encoding of the fields of\n   the frame.  The first\
    \ octet thus contains 1101 in the 4 most\n   significant bits (0-3) and the 4\
    \ most significant bits of F1 (0-3) in\n   the 4 least significant bits (4-7).\
    \  The second octet contains the 2\n   least significant bits of F1 in bits 0-1,\
    \ and F2 in bits 2-7, and so\n   on.  The order of the fields in the frame is\
    \ described in Table 2.\n"
- title: 4.5.8.2   GSM Variable Names and Numbers
  contents:
  - "4.5.8.2   GSM Variable Names and Numbers\n   In the RTP encoding we have the\
    \ bit pattern described in Table 3,\n   where F.i signifies the ith bit of the\
    \ field F, bit 0 is the most\n   significant bit, and the bits of every octet\
    \ are numbered from 0 to 7\n   from most to least significant.\n"
- title: 4.5.9 GSM-EFR
  contents:
  - "4.5.9 GSM-EFR\n   GSM-EFR denotes GSM 06.60 enhanced full rate speech transcoding,\n\
    \   specified in ETS 300 726 which is available from ETSI at the address\n   given\
    \ in Section 4.5.8.  This codec has a frame length of 244 bits.\n   For transmission\
    \ in RTP, each codec frame is packed into a 31 octet\n   (248 bit) buffer beginning\
    \ with a 4-bit signature 0xC in a manner\n   similar to that specified here for\
    \ the original GSM 06.10 codec.  The\n   packing is specified in ETSI Technical\
    \ Specification TS 101 318.\n"
- title: 4.5.10 L8
  contents:
  - "4.5.10 L8\n   L8 denotes linear audio data samples, using 8-bits of precision\
    \ with\n   an offset of 128, that is, the most negative signal is encoded as\n\
    \   zero.\n"
- title: 4.5.11 L16
  contents:
  - "4.5.11 L16\n   L16 denotes uncompressed audio data samples, using 16-bit signed\n\
    \   representation with 65,535 equally divided steps between minimum and\n   maximum\
    \ signal level, ranging from -32,768 to 32,767.  The value is\n   represented\
    \ in two's complement notation and transmitted in network\n   byte order (most\
    \ significant byte first).\n   The MIME registration for L16 in RFC 3555 [7] specifies\
    \ parameters\n   that MAY be used with MIME or SDP to indicate that analog pre-\n\
    \   emphasis was applied to the signal before quantization or to indicate\n  \
    \ that a multiple-channel audio stream follows a different channel\n   ordering\
    \ convention than is specified in Section 4.1.\n"
- title: 4.5.12 LPC
  contents:
  - "4.5.12 LPC\n   LPC designates an experimental linear predictive encoding contributed\n\
    \   by Ron Frederick, which is based on an implementation written by Ron\n   Zuckerman\
    \ posted to the Usenet group comp.dsp on June 26, 1992.  The\n   codec generates\
    \ 14 octets for every frame.  The framesize is set to\n   20 ms, resulting in\
    \ a bit rate of 5,600 b/s.\n"
- title: 4.5.13 MPA
  contents:
  - "4.5.13 MPA\n   MPA denotes MPEG-1 or MPEG-2 audio encapsulated as elementary\n\
    \   streams.  The encoding is defined in ISO standards ISO/IEC 11172-3\n   and\
    \ 13818-3.  The encapsulation is specified in RFC 2250 [14].\n   The encoding\
    \ may be at any of three levels of complexity, called\n   Layer I, II and III.\
    \  The selected layer as well as the sampling rate\n   and channel count are indicated\
    \ in the payload.  The RTP timestamp\n   clock rate is always 90,000, independent\
    \ of the sampling rate.\n   MPEG-1 audio supports sampling rates of 32, 44.1,\
    \ and 48 kHz (ISO/IEC\n   11172-3, section 1.1; \"Scope\").  MPEG-2 supports sampling\
    \ rates of\n   16, 22.05 and 24 kHz.  The number of samples per frame is fixed,\
    \ but\n   the frame size will vary with the sampling rate and bit rate.\n   The\
    \ MIME registration for MPA in RFC 3555 [7] specifies parameters\n   that MAY\
    \ be used with MIME or SDP to restrict the selection of layer,\n   channel count,\
    \ sampling rate, and bit rate.\n"
- title: 4.5.14 PCMA and PCMU
  contents:
  - "4.5.14 PCMA and PCMU\n   PCMA and PCMU are specified in ITU-T Recommendation\
    \ G.711.  Audio\n   data is encoded as eight bits per sample, after logarithmic\
    \ scaling.\n   PCMU denotes mu-law scaling, PCMA A-law scaling.  A detailed\n\
    \   description is given by Jayant and Noll [15].  Each G.711 octet SHALL\n  \
    \ be octet-aligned in an RTP packet.  The sign bit of each G.711 octet\n   SHALL\
    \ correspond to the most significant bit of the octet in the RTP\n   packet (i.e.,\
    \ assuming the G.711 samples are handled as octets on the\n   host machine, the\
    \ sign bit SHALL be the most significant bit of the\n   octet as defined by the\
    \ host machine format).  The 56 kb/s and 48\n   kb/s modes of G.711 are not applicable\
    \ to RTP, since PCMA and PCMU\n   MUST always be transmitted as 8-bit samples.\n\
    \   See Section 4.1 regarding silence suppression.\n"
- title: 4.5.15 QCELP
  contents:
  - "4.5.15 QCELP\n   The Electronic Industries Association (EIA) & Telecommunications\n\
    \   Industry Association (TIA) standard IS-733, \"TR45: High Rate Speech\n   Service\
    \ Option for Wideband Spread Spectrum Communications Systems\",\n   defines the\
    \ QCELP audio compression algorithm for use in wireless\n   CDMA applications.\
    \  The QCELP CODEC compresses each 20 milliseconds\n   of 8,000 Hz, 16-bit sampled\
    \ input speech into one of four different\n   size output frames:  Rate 1 (266\
    \ bits), Rate 1/2 (124 bits), Rate 1/4\n   (54 bits) or Rate 1/8 (20 bits).  For\
    \ typical speech patterns, this\n   results in an average output of 6.8 kb/s for\
    \ normal mode and 4.7 kb/s\n   for reduced rate mode.  The packetization of the\
    \ QCELP audio codec is\n   described in [16].\n"
- title: 4.5.16 RED
  contents:
  - "4.5.16 RED\n   The redundant audio payload format \"RED\" is specified by RFC\
    \ 2198\n   [17].  It defines a means by which multiple redundant copies of an\n\
    \   audio packet may be transmitted in a single RTP stream.  Each packet\n   in\
    \ such a stream contains, in addition to the audio data for that\n   packetization\
    \ interval, a (more heavily compressed) copy of the data\n   from a previous packetization\
    \ interval.  This allows an approximation\n   of the data from lost packets to\
    \ be recovered upon decoding of a\n   subsequent packet, giving much improved\
    \ sound quality when compared\n   with silence substitution for lost packets.\n"
- title: 4.5.17 VDVI
  contents:
  - "4.5.17 VDVI\n   VDVI is a variable-rate version of DVI4, yielding speech bit\
    \ rates of\n   between 10 and 25 kb/s.  It is specified for single-channel operation\n\
    \   only.  Samples are packed into octets starting at the most-\n   significant\
    \ bit.  The last octet is padded with 1 bits if the last\n   sample does not fill\
    \ the last octet.  This padding is distinct from\n   the valid codewords.  The\
    \ receiver needs to detect the padding\n   because there is no explicit count\
    \ of samples in the packet.\n   It uses the following encoding:\n            DVI4\
    \ codeword  VDVI bit pattern\n            _______________________________\n  \
    \                      0  00\n                        1  010\n               \
    \         2  1100\n                        3  11100\n                        4\
    \  111100\n                        5  1111100\n                        6  11111100\n\
    \                        7  11111110\n                        8  10\n        \
    \                9  011\n                       10  1101\n                   \
    \    11  11101\n                       12  111101\n                       13 \
    \ 1111101\n                       14  11111101\n                       15  11111111\n"
- title: 5.  Video
  contents:
  - "5.  Video\n   The following sections describe the video encodings that are defined\n\
    \   in this memo and give their abbreviated names used for\n   identification.\
    \  These video encodings and their payload types are\n   listed in Table 5.\n\
    \   All of these video encodings use an RTP timestamp frequency of 90,000\n  \
    \ Hz, the same as the MPEG presentation time stamp frequency.  This\n   frequency\
    \ yields exact integer timestamp increments for the typical\n   24 (HDTV), 25\
    \ (PAL), and 29.97 (NTSC) and 30 Hz (HDTV) frame rates\n   and 50, 59.94 and 60\
    \ Hz field rates.  While 90 kHz is the RECOMMENDED\n   rate for future video encodings\
    \ used within this profile, other rates\n   MAY be used.  However, it is not sufficient\
    \ to use the video frame\n   rate (typically between 15 and 30 Hz) because that\
    \ does not provide\n   adequate resolution for typical synchronization requirements\
    \ when\n   calculating the RTP timestamp corresponding to the NTP timestamp in\n\
    \   an RTCP SR packet.  The timestamp resolution MUST also be sufficient\n   for\
    \ the jitter estimate contained in the receiver reports.\n   For most of these\
    \ video encodings, the RTP timestamp encodes the\n   sampling instant of the video\
    \ image contained in the RTP data packet.\n   If a video image occupies more than\
    \ one packet, the timestamp is the\n   same on all of those packets.  Packets\
    \ from different video images\n   are distinguished by their different timestamps.\n\
    \   Most of these video encodings also specify that the marker bit of the\n  \
    \ RTP header SHOULD be set to one in the last packet of a video frame\n   and\
    \ otherwise set to zero.  Thus, it is not necessary to wait for a\n   following\
    \ packet with a different timestamp to detect that a new\n   frame should be displayed.\n"
- title: 5.1  CelB
  contents:
  - "5.1  CelB\n   The CELL-B encoding is a proprietary encoding proposed by Sun\n\
    \   Microsystems.  The byte stream format is described in RFC 2029 [18].\n"
- title: 5.2 JPEG
  contents:
  - "5.2 JPEG\n   The encoding is specified in ISO Standards 10918-1 and 10918-2.\
    \  The\n   RTP payload format is as specified in RFC 2435 [19].\n"
- title: 5.3 H261
  contents:
  - "5.3 H261\n   The encoding is specified in ITU-T Recommendation H.261, \"Video\
    \ codec\n   for audiovisual services at p x 64 kbit/s\".  The packetization and\n\
    \   RTP-specific properties are described in RFC 2032 [20].\n"
- title: 5.4 H263
  contents:
  - "5.4 H263\n   The encoding is specified in the 1996 version of ITU-T Recommendation\n\
    \   H.263, \"Video coding for low bit rate communication\".  The\n   packetization\
    \ and RTP-specific properties are described in RFC 2190\n   [21].  The H263-1998\
    \ payload format is RECOMMENDED over this one for\n   use by new implementations.\n"
- title: 5.5 H263-1998
  contents:
  - "5.5 H263-1998\n   The encoding is specified in the 1998 version of ITU-T Recommendation\n\
    \   H.263, \"Video coding for low bit rate communication\".  The\n   packetization\
    \ and RTP-specific properties are described in RFC 2429\n   [22].  Because the\
    \ 1998 version of H.263 is a superset of the 1996\n   syntax, this payload format\
    \ can also be used with the 1996 version of\n   H.263, and is RECOMMENDED for\
    \ this use by new implementations.  This\n   payload format does not replace RFC\
    \ 2190, which continues to be used\n   by existing implementations, and may be\
    \ required for backward\n   compatibility in new implementations.  Implementations\
    \ using the new\n   features of the 1998 version of H.263 MUST use the payload\
    \ format\n   described in RFC 2429.\n"
- title: 5.6 MPV
  contents:
  - "5.6 MPV\n   MPV designates the use of MPEG-1 and MPEG-2 video encoding elementary\n\
    \   streams as specified in ISO Standards ISO/IEC 11172 and 13818-2,\n   respectively.\
    \  The RTP payload format is as specified in RFC 2250\n   [14], Section 3.\n \
    \  The MIME registration for MPV in RFC 3555 [7] specifies a parameter\n   that\
    \ MAY be used with MIME or SDP to restrict the selection of the\n   type of MPEG\
    \ video.\n"
- title: 5.7 MP2T
  contents:
  - "5.7 MP2T\n   MP2T designates the use of MPEG-2 transport streams, for either\
    \ audio\n   or video.  The RTP payload format is described in RFC 2250 [14],\n\
    \   Section 2.\n"
- title: 5.8 nv
  contents:
  - "5.8 nv\n   The encoding is implemented in the program `nv', version 4, developed\n\
    \   at Xerox PARC by Ron Frederick.  Further information is available\n   from\
    \ the author:\n   Ron Frederick\n   Blue Coat Systems Inc.\n   650 Almanor Avenue\n\
    \   Sunnyvale, CA 94085\n   United States\n   EMail: ronf@bluecoat.com\n"
- title: 6.  Payload Type Definitions
  contents:
  - "6.  Payload Type Definitions\n   Tables 4 and 5 define this profile's static\
    \ payload type values for\n   the PT field of the RTP data header.  In addition,\
    \ payload type\n   values in the range 96-127 MAY be defined dynamically through\
    \ a\n   conference control protocol, which is beyond the scope of this\n   document.\
    \  For example, a session directory could specify that for a\n   given session,\
    \ payload type 96 indicates PCMU encoding, 8,000 Hz\n   sampling rate, 2 channels.\
    \  Entries in Tables 4 and 5 with payload\n   type \"dyn\" have no static payload\
    \ type assigned and are only used\n   with a dynamic payload type.  Payload type\
    \ 2 was assigned to G721 in\n   RFC 1890 and to its equivalent successor G726-32\
    \ in draft versions of\n   this specification, but its use is now deprecated and\
    \ that static\n   payload type is marked reserved due to conflicting use for the\n\
    \   payload formats G726-32 and AAL2-G726-32 (see Section 4.5.4).\n   Payload\
    \ type 13 indicates the Comfort Noise (CN) payload format\n   specified in RFC\
    \ 3389 [9].  Payload type 19 is marked \"reserved\"\n   because some draft versions\
    \ of this specification assigned that\n   number to an earlier version of the\
    \ comfort noise payload format.\n   The payload type range 72-76 is marked \"\
    reserved\" so that RTCP and\n   RTP packets can be reliably distinguished (see\
    \ Section \"Summary of\n   Protocol Constants\" of the RTP protocol specification).\n\
    \   The payload types currently defined in this profile are assigned to\n   exactly\
    \ one of three categories or media types:  audio only, video\n   only and those\
    \ combining audio and video.  The media types are marked\n   in Tables 4 and 5\
    \ as \"A\", \"V\" and \"AV\", respectively.  Payload types\n   of different media\
    \ types SHALL NOT be interleaved or multiplexed\n   within a single RTP session,\
    \ but multiple RTP sessions MAY be used in\n   parallel to send multiple media\
    \ types.  An RTP source MAY change\n   payload types within the same media type\
    \ during a session.  See the\n   section \"Multiplexing RTP Sessions\" of RFC\
    \ 3550 for additional\n   explanation.\n               PT   encoding    media\
    \ type  clock rate   channels\n                    name                    (Hz)\n\
    \               ___________________________________________________\n        \
    \       0    PCMU        A            8,000       1\n               1    reserved\
    \    A\n               2    reserved    A\n               3    GSM         A \
    \           8,000       1\n               4    G723        A            8,000\
    \       1\n               5    DVI4        A            8,000       1\n      \
    \         6    DVI4        A           16,000       1\n               7    LPC\
    \         A            8,000       1\n               8    PCMA        A      \
    \      8,000       1\n               9    G722        A            8,000     \
    \  1\n               10   L16         A           44,100       2\n           \
    \    11   L16         A           44,100       1\n               12   QCELP  \
    \     A            8,000       1\n               13   CN          A          \
    \  8,000       1\n               14   MPA         A           90,000       (see\
    \ text)\n               15   G728        A            8,000       1\n        \
    \       16   DVI4        A           11,025       1\n               17   DVI4\
    \        A           22,050       1\n               18   G729        A       \
    \     8,000       1\n               19   reserved    A\n               20   unassigned\
    \  A\n               21   unassigned  A\n               22   unassigned  A\n \
    \              23   unassigned  A\n               dyn  G726-40     A         \
    \   8,000       1\n               dyn  G726-32     A            8,000       1\n\
    \               dyn  G726-24     A            8,000       1\n               dyn\
    \  G726-16     A            8,000       1\n               dyn  G729D       A \
    \           8,000       1\n               dyn  G729E       A            8,000\
    \       1\n               dyn  GSM-EFR     A            8,000       1\n      \
    \         dyn  L8          A            var.        var.\n               dyn \
    \ RED         A                        (see text)\n               dyn  VDVI  \
    \      A            var.        1\n               Table 4: Payload types (PT)\
    \ for audio encodings\n               PT      encoding    media type  clock rate\n\
    \                       name                    (Hz)\n               _____________________________________________\n\
    \               24      unassigned  V\n               25      CelB        V  \
    \         90,000\n               26      JPEG        V           90,000\n    \
    \           27      unassigned  V\n               28      nv          V      \
    \     90,000\n               29      unassigned  V\n               30      unassigned\
    \  V\n               31      H261        V           90,000\n               32\
    \      MPV         V           90,000\n               33      MP2T        AV \
    \         90,000\n               34      H263        V           90,000\n    \
    \           35-71   unassigned  ?\n               72-76   reserved    N/A    \
    \     N/A\n               77-95   unassigned  ?\n               96-127  dynamic\
    \     ?\n               dyn     H263-1998   V           90,000\n             \
    \  Table 5: Payload types (PT) for video and combined\n                      \
    \  encodings\n   Session participants agree through mechanisms beyond the scope\
    \ of\n   this specification on the set of payload types allowed in a given\n \
    \  session.  This set MAY, for example, be defined by the capabilities\n   of\
    \ the applications used, negotiated by a conference control protocol\n   or established\
    \ by agreement between the human participants.\n   Audio applications operating\
    \ under this profile SHOULD, at a minimum,\n   be able to send and/or receive\
    \ payload types 0 (PCMU) and 5 (DVI4).\n   This allows interoperability without\
    \ format negotiation and ensures\n   successful negotiation with a conference\
    \ control protocol.\n"
- title: 7.  RTP over TCP and Similar Byte Stream Protocols
  contents:
  - "7.  RTP over TCP and Similar Byte Stream Protocols\n   Under special circumstances,\
    \ it may be necessary to carry RTP in\n   protocols offering a byte stream abstraction,\
    \ such as TCP, possibly\n   multiplexed with other data.  The application MUST\
    \ define its own\n   method of delineating RTP and RTCP packets (RTSP [23] provides\
    \ an\n   example of such an encapsulation specification).\n"
- title: 8.  Port Assignment
  contents:
  - "8.  Port Assignment\n   As specified in the RTP protocol definition, RTP data\
    \ SHOULD be\n   carried on an even UDP port number and the corresponding RTCP\
    \ packets\n   SHOULD be carried on the next higher (odd) port number.\n   Applications\
    \ operating under this profile MAY use any such UDP port\n   pair.  For example,\
    \ the port pair MAY be allocated randomly by a\n   session management program.\
    \  A single fixed port number pair cannot\n   be required because multiple applications\
    \ using this profile are\n   likely to run on the same host, and there are some\
    \ operating systems\n   that do not allow multiple processes to use the same UDP\
    \ port with\n   different multicast addresses.\n   However, port numbers 5004\
    \ and 5005 have been registered for use with\n   this profile for those applications\
    \ that choose to use them as the\n   default pair.  Applications that operate\
    \ under multiple profiles MAY\n   use this port pair as an indication to select\
    \ this profile if they\n   are not subject to the constraint of the previous paragraph.\n\
    \   Applications need not have a default and MAY require that the port\n   pair\
    \ be explicitly specified.  The particular port numbers were\n   chosen to lie\
    \ in the range above 5000 to accommodate port number\n   allocation practice within\
    \ some versions of the Unix operating\n   system, where port numbers below 1024\
    \ can only be used by privileged\n   processes and port numbers between 1024 and\
    \ 5000 are automatically\n   assigned by the operating system.\n"
- title: 9.  Changes from RFC 1890
  contents:
  - "9.  Changes from RFC 1890\n   This RFC revises RFC 1890.  It is mostly backwards-compatible\
    \ with\n   RFC 1890 except for functions removed because two interoperable\n \
    \  implementations were not found.  The additions to RFC 1890 codify\n   existing\
    \ practice in the use of payload formats under this profile.\n   Since this profile\
    \ may be used without using any of the payload\n   formats listed here, the addition\
    \ of new payload formats in this\n   revision does not affect backwards compatibility.\
    \  The changes are\n   listed below, categorized into functional and non-functional\
    \ changes.\n   Functional changes:\n   o  Section 11, \"IANA Considerations\"\
    \ was added to specify the\n      registration of the name for this profile. \
    \ That appendix also\n      references a new Section 3 \"Registering Additional\
    \ Encodings\"\n      which establishes a policy that no additional registration\
    \ of\n      static payload types for this profile will be made beyond those\n\
    \      added in this revision and included in Tables 4 and 5.  Instead,\n    \
    \  additional encoding names may be registered as MIME subtypes for\n      binding\
    \ to dynamic payload types.  Non-normative references were\n      added to RFC\
    \ 3555 [7] where MIME subtypes for all the listed\n      payload formats are registered,\
    \ some with optional parameters for\n      use of the payload formats.\n   o \
    \ Static payload types 4, 16, 17 and 34 were added to incorporate\n      IANA\
    \ registrations made since the publication of RFC 1890, along\n      with the\
    \ corresponding payload format descriptions for G723 and\n      H263.\n   o  Following\
    \ working group discussion, static payload types 12 and 18\n      were added along\
    \ with the corresponding payload format\n      descriptions for QCELP and G729.\
    \  Static payload type 13 was\n      assigned to the Comfort Noise (CN) payload\
    \ format defined in RFC\n      3389.  Payload type 19 was marked reserved because\
    \ it had been\n      temporarily allocated to an earlier version of Comfort Noise\n\
    \      present in some draft revisions of this document.\n   o  The payload format\
    \ for G721 was renamed to G726-32 following the\n      ITU-T renumbering, and\
    \ the payload format description for G726 was\n      expanded to include the -16,\
    \ -24 and -40 data rates.  Because of\n      confusion regarding draft revisions\
    \ of this document, some\n      implementations of these G726 payload formats\
    \ packed samples into\n      octets starting with the most significant bit rather\
    \ than the\n      least significant bit as specified here.  To partially resolve\n\
    \      this incompatibility, new payload formats named AAL2-G726-16, -24,\n  \
    \    -32 and -40 will be specified in a separate document (see note in\n     \
    \ Section 4.5.4), and use of static payload type 2 is deprecated as\n      explained\
    \ in Section 6.\n   o  Payload formats G729D and G729E were added following the\
    \ ITU-T\n      addition of Annexes D and E to Recommendation G.729.  Listings\n\
    \      were added for payload formats GSM-EFR, RED, and H263-1998\n      published\
    \ in other documents subsequent to RFC 1890.  These\n      additional payload\
    \ formats are referenced only by dynamic payload\n      type numbers.\n   o  The\
    \ descriptions of the payload formats for G722, G728, GSM, VDVI\n      were expanded.\n\
    \   o  The payload format for 1016 audio was removed and its static\n      payload\
    \ type assignment 1 was marked \"reserved\" because two\n      interoperable implementations\
    \ were not found.\n   o  Requirements for congestion control were added in Section\
    \ 2.\n   o  This profile follows the suggestion in the revised RTP spec that\n\
    \      RTCP bandwidth may be specified separately from the session\n      bandwidth\
    \ and separately for active senders and passive receivers.\n   o  The mapping\
    \ of a user pass-phrase string into an encryption key\n      was deleted from\
    \ Section 2 because two interoperable\n      implementations were not found.\n\
    \   o  The \"quadrophonic\" sample ordering convention for four-channel\n    \
    \  audio was removed to eliminate an ambiguity as noted in Section\n      4.1.\n\
    \   Non-functional changes:\n   o  In Section 4.1, it is now explicitly stated\
    \ that silence\n      suppression is allowed for all audio payload formats.  (This\
    \ has\n      always been the case and derives from a fundamental aspect of\n \
    \     RTP's design and the motivations for packet audio, but was not\n      explicit\
    \ stated before.)  The use of comfort noise is also\n      explained.\n   o  In\
    \ Section 4.1, the requirement level for setting of the marker\n      bit on the\
    \ first packet after silence for audio was changed from\n      \"is\" to \"SHOULD\
    \ be\", and clarified that the marker bit is set only\n      when packets are\
    \ intentionally not sent.\n   o  Similarly, text was added to specify that the\
    \ marker bit SHOULD be\n      set to one on the last packet of a video frame,\
    \ and that video\n      frames are distinguished by their timestamps.\n   o  RFC\
    \ references are added for payload formats published after RFC\n      1890.\n\
    \   o  The security considerations and full copyright sections were\n      added.\n\
    \   o  According to Peter Hoddie of Apple, only pre-1994 Macintosh used\n    \
    \  the 22254.54 rate and none the 11127.27 rate, so the latter was\n      dropped\
    \ from the discussion of suggested sampling frequencies.\n   o  Table 1 was corrected\
    \ to move some values from the \"ms/packet\"\n      column to the \"default ms/packet\"\
    \ column where they belonged.\n   o  Since the Interactive Multimedia Association\
    \ ceased operations, an\n      alternate resource was provided for a referenced\
    \ IMA document.\n   o  A note has been added for G722 to clarify a discrepancy\
    \ between\n      the actual sampling rate and the RTP timestamp clock rate.\n\
    \   o  Small clarifications of the text have been made in several places,\n  \
    \    some in response to questions from readers.  In particular:\n      -  A definition\
    \ for \"media type\" is given in Section 1.1 to allow\n         the explanation\
    \ of multiplexing RTP sessions in Section 6 to be\n         more clear regarding\
    \ the multiplexing of multiple media.\n      -  The explanation of how to determine\
    \ the number of audio frames\n         in a packet from the length was expanded.\n\
    \      -  More description of the allocation of bandwidth to SDES items\n    \
    \     is given.\n      -  A note was added that the convention for the order of\
    \ channels\n         specified in Section 4.1 may be overridden by a particular\n\
    \         encoding or payload format specification.\n      -  The terms MUST,\
    \ SHOULD, MAY, etc. are used as defined in RFC\n         2119.\n   o  A second\
    \ author for this document was added.\n"
- title: 10. Security Considerations
  contents:
  - "10. Security Considerations\n   Implementations using the profile defined in\
    \ this specification are\n   subject to the security considerations discussed\
    \ in the RTP\n   specification [1].  This profile does not specify any different\n\
    \   security services.  The primary function of this profile is to list a\n  \
    \ set of data compression encodings for audio and video media.\n   Confidentiality\
    \ of the media streams is achieved by encryption.\n   Because the data compression\
    \ used with the payload formats described\n   in this profile is applied end-to-end,\
    \ encryption may be performed\n   after compression so there is no conflict between\
    \ the two operations.\n   A potential denial-of-service threat exists for data\
    \ encodings using\n   compression techniques that have non-uniform receiver-end\n\
    \   computational load.  The attacker can inject pathological datagrams\n   into\
    \ the stream which are complex to decode and cause the receiver to\n   be overloaded.\n\
    \   As with any IP-based protocol, in some circumstances a receiver may\n   be\
    \ overloaded simply by the receipt of too many packets, either\n   desired or\
    \ undesired.  Network-layer authentication MAY be used to\n   discard packets\
    \ from undesired sources, but the processing cost of\n   the authentication itself\
    \ may be too high.  In a multicast\n   environment, source pruning is implemented\
    \ in IGMPv3 (RFC 3376) [24]\n   and in multicast routing protocols to allow a\
    \ receiver to select\n   which sources are allowed to reach it.\n"
- title: 11. IANA Considerations
  contents:
  - "11. IANA Considerations\n   The RTP specification establishes a registry of profile\
    \ names for use\n   by higher-level control protocols, such as the Session Description\n\
    \   Protocol (SDP), RFC 2327 [6], to refer to transport methods.  This\n   profile\
    \ registers the name \"RTP/AVP\".\n   Section 3 establishes the policy that no\
    \ additional registration of\n   static RTP payload types for this profile will\
    \ be made beyond those\n   added in this document revision and included in Tables\
    \ 4 and 5.  IANA\n   may reference that section in declining to accept any additional\n\
    \   registration requests.  In Tables 4 and 5, note that types 1 and 2\n   have\
    \ been marked reserved and the set of \"dyn\" payload types included\n   has been\
    \ updated.  These changes are explained in Sections 6 and 9.\n"
- title: 12.  References
  contents:
  - '12.  References

    '
- title: 12.1 Normative References
  contents:
  - "12.1 Normative References\n   [1]  Schulzrinne, H., Casner, S., Frederick, R.\
    \ and V. Jacobson,\n        \"RTP:  A Transport Protocol for Real-Time Applications\"\
    , RFC\n        3550, July 2003.\n   [2]  Bradner, S., \"Key Words for Use in RFCs\
    \ to Indicate Requirement\n        Levels\", BCP 14, RFC 2119, March 1997.\n \
    \  [3]  Apple Computer, \"Audio Interchange File Format AIFF-C\", August\n   \
    \     1991.  (also ftp://ftp.sgi.com/sgi/aiff-c.9.26.91.ps.Z).\n"
- title: 12.2 Informative References
  contents:
  - "12.2 Informative References\n   [4]  Braden, R., Clark, D. and S. Shenker, \"\
    Integrated Services in\n        the Internet Architecture: an Overview\", RFC\
    \ 1633, June 1994.\n   [5]  Blake, S., Black, D., Carlson, M., Davies, E., Wang,\
    \ Z. and W.\n        Weiss, \"An Architecture for Differentiated Service\", RFC\
    \ 2475,\n        December 1998.\n   [6]  Handley, M. and V. Jacobson, \"SDP: Session\
    \ Description\n        Protocol\", RFC 2327, April 1998.\n   [7]  Casner, S. and\
    \ P. Hoschka, \"MIME Type Registration of RTP\n        Payload Types\", RFC 3555,\
    \ July 2003.\n   [8]  Freed, N., Klensin, J. and J. Postel, \"Multipurpose Internet\n\
    \        Mail Extensions (MIME) Part Four: Registration Procedures\", BCP\n  \
    \      13, RFC 2048, November 1996.\n   [9]  Zopf, R., \"Real-time Transport Protocol\
    \ (RTP) Payload for\n        Comfort Noise (CN)\", RFC 3389, September 2002.\n\
    \   [10] Deleam, D. and J.-P. Petit, \"Real-time implementations of the\n    \
    \    recent ITU-T low bit rate speech coders on the TI TMS320C54X\n        DSP:\
    \ results, methodology, and applications\", in Proc. of\n        International\
    \ Conference on Signal Processing, Technology, and\n        Applications (ICSPAT)\
    \ , (Boston, Massachusetts), pp. 1656--1660,\n        October 1996.\n   [11] Mouly,\
    \ M. and M.-B. Pautet, The GSM system for mobile\n        communications Lassay-les-Chateaux,\
    \ France: Europe Media\n        Duplication, 1993.\n   [12] Degener, J., \"Digital\
    \ Speech Compression\", Dr. Dobb's Journal,\n        December 1994.\n   [13] Redl,\
    \ S., Weber, M. and M. Oliphant, An Introduction to GSM\n        Boston: Artech\
    \ House, 1995.\n   [14] Hoffman, D., Fernando, G., Goyal, V. and M. Civanlar,\
    \ \"RTP\n        Payload Format for MPEG1/MPEG2 Video\", RFC 2250, January 1998.\n\
    \   [15] Jayant, N. and P. Noll, Digital Coding of Waveforms--Principles\n   \
    \     and Applications to Speech and Video Englewood Cliffs, New\n        Jersey:\
    \ Prentice-Hall, 1984.\n   [16] McKay, K., \"RTP Payload Format for PureVoice(tm)\
    \ Audio\", RFC\n        2658, August 1999.\n   [17] Perkins, C., Kouvelas, I.,\
    \ Hodson, O., Hardman, V., Handley, M.,\n        Bolot, J.-C., Vega-Garcia, A.\
    \ and S. Fosse-Parisis, \"RTP Payload\n        for Redundant Audio Data\", RFC\
    \ 2198, September 1997.\n   [18] Speer, M. and D. Hoffman, \"RTP Payload Format\
    \ of Sun's CellB\n        Video Encoding\", RFC 2029, October 1996.\n   [19] Berc,\
    \ L., Fenner, W., Frederick, R., McCanne, S. and P. Stewart,\n        \"RTP Payload\
    \ Format for JPEG-Compressed Video\", RFC 2435,\n        October 1998.\n   [20]\
    \ Turletti, T. and C. Huitema, \"RTP Payload Format for H.261 Video\n        Streams\"\
    , RFC 2032, October 1996.\n   [21] Zhu, C., \"RTP Payload Format for H.263 Video\
    \ Streams\", RFC 2190,\n        September 1997.\n   [22] Bormann, C., Cline, L.,\
    \ Deisher, G., Gardos, T., Maciocco, C.,\n        Newell, D., Ott, J., Sullivan,\
    \ G., Wenger, S. and C. Zhu, \"RTP\n        Payload Format for the 1998 Version\
    \ of ITU-T Rec. H.263 Video\n        (H.263+)\", RFC 2429, October 1998.\n   [23]\
    \ Schulzrinne, H., Rao, A. and R. Lanphier, \"Real Time Streaming\n        Protocol\
    \ (RTSP)\", RFC 2326, April 1998.\n   [24] Cain, B., Deering, S., Kouvelas, I.,\
    \ Fenner, B. and A.\n        Thyagarajan, \"Internet Group Management Protocol,\
    \ Version 3\",\n        RFC 3376, October 2002.\n"
- title: 13. Current Locations of Related Resources
  contents:
  - "13. Current Locations of Related Resources\n   Note:  Several sections below\
    \ refer to the ITU-T Software Tool\n   Library (STL).  It is available from the\
    \ ITU Sales Service, Place des\n   Nations, CH-1211 Geneve 20, Switzerland (also\
    \ check\n   http://www.itu.int).  The ITU-T STL is covered by a license defined\n\
    \   in ITU-T Recommendation G.191, \"Software tools for speech and audio\n   coding\
    \ standardization\".\n   DVI4\n   An archived copy of the document IMA Recommended\
    \ Practices for\n   Enhancing Digital Audio Compatibility in Multimedia Systems\
    \ (version\n   3.0), which describes the IMA ADPCM algorithm, is available at:\n\
    \      http://www.cs.columbia.edu/~hgs/audio/dvi/\n   An implementation is available\
    \ from Jack Jansen at\n      ftp://ftp.cwi.nl/local/pub/audio/adpcm.shar\n   G722\n\
    \   An implementation of the G.722 algorithm is available as part of the\n   ITU-T\
    \ STL, described above.\n   G723\n   The reference C code implementation defining\
    \ the G.723.1 algorithm\n   and its Annexes A, B, and C are available as an integral\
    \ part of\n   Recommendation G.723.1 from the ITU Sales Service, address listed\n\
    \   above.  Both the algorithm and C code are covered by a specific\n   license.\
    \  The ITU-T Secretariat should be contacted to obtain such\n   licensing information.\n\
    \   G726\n   G726 is specified in the ITU-T Recommendation G.726, \"40, 32, 24,\
    \ and\n   16 kb/s Adaptive Differential Pulse Code Modulation (ADPCM)\".  An\n\
    \   implementation of the G.726 algorithm is available as part of the\n   ITU-T\
    \ STL, described above.\n   G729\n   The reference C code implementation defining\
    \ the G.729 algorithm and\n   its Annexes A through I are available as an integral\
    \ part of\n   Recommendation G.729 from the ITU Sales Service, listed above. \
    \ Annex\n   I contains the integrated C source code for all G.729 operating\n\
    \   modes.  The G.729 algorithm and associated C code are covered by a\n   specific\
    \ license.  The contact information for obtaining the license\n   is available\
    \ from the ITU-T Secretariat.\n   GSM\n   A reference implementation was written\
    \ by Carsten Bormann and Jutta\n   Degener (then at TU Berlin, Germany).  It is\
    \ available at\n      http://www.dmn.tzi.org/software/gsm/\n   Although the RPE-LTP\
    \ algorithm is not an ITU-T standard, there is a C\n   code implementation of\
    \ the RPE-LTP algorithm available as part of the\n   ITU-T STL.  The STL implementation\
    \ is an adaptation of the TU Berlin\n   version.\n   LPC\n   An implementation\
    \ is available at\n      ftp://parcftp.xerox.com/pub/net-research/lpc.tar.Z\n\
    \   PCMU, PCMA\n   An implementation of these algorithms is available as part\
    \ of the\n   ITU-T STL, described above.\n"
- title: 14. Acknowledgments
  contents:
  - "14. Acknowledgments\n   The comments and careful review of Simao Campos, Richard\
    \ Cox and AVT\n   Working Group participants are gratefully acknowledged.  The\
    \ GSM\n   description was adopted from the IMTC Voice over IP Forum Service\n\
    \   Interoperability Implementation Agreement (January 1997).  Fred Burg\n   and\
    \ Terry Lyons helped with the G.729 description.\n"
- title: 15. Intellectual Property Rights Statement
  contents:
  - "15. Intellectual Property Rights Statement\n   The IETF takes no position regarding\
    \ the validity or scope of any\n   intellectual property or other rights that\
    \ might be claimed to\n   pertain to the implementation or use of the technology\
    \ described in\n   this document or the extent to which any license under such\
    \ rights\n   might or might not be available; neither does it represent that it\n\
    \   has made any effort to identify any such rights.  Information on the\n   IETF's\
    \ procedures with respect to rights in standards-track and\n   standards-related\
    \ documentation can be found in BCP-11.  Copies of\n   claims of rights made available\
    \ for publication and any assurances of\n   licenses to be made available, or\
    \ the result of an attempt made to\n   obtain a general license or permission\
    \ for the use of such\n   proprietary rights by implementors or users of this\
    \ specification can\n   be obtained from the IETF Secretariat.\n   The IETF invites\
    \ any interested party to bring to its attention any\n   copyrights, patents or\
    \ patent applications, or other proprietary\n   rights which may cover technology\
    \ that may be required to practice\n   this standard.  Please address the information\
    \ to the IETF Executive\n   Director.\n"
- title: 16. Authors' Addresses
  contents:
  - "16. Authors' Addresses\n   Henning Schulzrinne\n   Department of Computer Science\n\
    \   Columbia University\n   1214 Amsterdam Avenue\n   New York, NY 10027\n   United\
    \ States\n   EMail: schulzrinne@cs.columbia.edu\n   Stephen L. Casner\n   Packet\
    \ Design\n   3400 Hillview Avenue, Building 3\n   Palo Alto, CA 94304\n   United\
    \ States\n   EMail: casner@acm.org\n"
- title: 17. Full Copyright Statement
  contents:
  - "17. Full Copyright Statement\n   Copyright (C) The Internet Society (2003). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
