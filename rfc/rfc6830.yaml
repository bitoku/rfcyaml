- title: __initial_text__
  contents:
  - '               The Locator/ID Separation Protocol (LISP)

    '
- title: Abstract
  contents:
  - "Abstract\n   This document describes a network-layer-based protocol that enables\n\
    \   separation of IP addresses into two new numbering spaces: Endpoint\n   Identifiers\
    \ (EIDs) and Routing Locators (RLOCs).  No changes are\n   required to either\
    \ host protocol stacks or to the \"core\" of the\n   Internet infrastructure.\
    \  The Locator/ID Separation Protocol (LISP)\n   can be incrementally deployed,\
    \ without a \"flag day\", and offers\n   Traffic Engineering, multihoming, and\
    \ mobility benefits to early\n   adopters, even when there are relatively few\
    \ LISP-capable sites.\n   Design and development of LISP was largely motivated\
    \ by the problem\n   statement produced by the October 2006 IAB Routing and Addressing\n\
    \   Workshop.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for examination, experimental implementation, and\n   evaluation.\n\
    \   This document defines an Experimental Protocol for the Internet\n   community.\
    \  This document is a product of the Internet Engineering\n   Task Force (IETF).\
    \  It represents the consensus of the IETF\n   community.  It has received public\
    \ review and has been approved for\n   publication by the Internet Engineering\
    \ Steering Group (IESG).  Not\n   all documents approved by the IESG are a candidate\
    \ for any level of\n   Internet Standard; see Section 2 of RFC 5741.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6830.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Requirements Notation ...........................................5\n  \
    \ 3. Definition of Terms .............................................5\n   4.\
    \ Basic Overview .................................................10\n      4.1.\
    \ Packet Flow Sequence ......................................13\n   5. LISP Encapsulation\
    \ Details .....................................15\n      5.1. LISP IPv4-in-IPv4\
    \ Header Format ...........................16\n      5.2. LISP IPv6-in-IPv6 Header\
    \ Format ...........................17\n      5.3. Tunnel Header Field Descriptions\
    \ ..........................18\n      5.4. Dealing with Large Encapsulated Packets\
    \ ...................22\n           5.4.1. A Stateless Solution to MTU Handling\
    \ ...............22\n           5.4.2. A Stateful Solution to MTU Handling ................23\n\
    \      5.5. Using Virtualization and Segmentation with LISP ...........24\n  \
    \ 6. EID-to-RLOC Mapping ............................................25\n    \
    \  6.1. LISP IPv4 and IPv6 Control-Plane Packet Formats ...........25\n      \
    \     6.1.1. LISP Packet Type Allocations .......................27\n        \
    \   6.1.2. Map-Request Message Format .........................27\n          \
    \ 6.1.3. EID-to-RLOC UDP Map-Request Message ................30\n           6.1.4.\
    \ Map-Reply Message Format ...........................31\n           6.1.5. EID-to-RLOC\
    \ UDP Map-Reply Message ..................35\n           6.1.6. Map-Register Message\
    \ Format ........................37\n           6.1.7. Map-Notify Message Format\
    \ ..........................39\n           6.1.8. Encapsulated Control Message\
    \ Format ................41\n      6.2. Routing Locator Selection .................................42\n\
    \      6.3. Routing Locator Reachability ..............................44\n  \
    \         6.3.1. Echo Nonce Algorithm ...............................46\n    \
    \       6.3.2. RLOC-Probing Algorithm .............................48\n      6.4.\
    \ EID Reachability within a LISP Site .......................49\n      6.5. Routing\
    \ Locator Hashing ...................................49\n      6.6. Changing the\
    \ Contents of EID-to-RLOC Mappings .............50\n           6.6.1. Clock Sweep\
    \ ........................................51\n           6.6.2. Solicit-Map-Request\
    \ (SMR) ..........................52\n           6.6.3. Database Map-Versioning\
    \ ............................53\n   7. Router Performance Considerations ..............................54\n\
    \   8. Deployment Scenarios ...........................................55\n  \
    \    8.1. First-Hop/Last-Hop Tunnel Routers .........................56\n    \
    \  8.2. Border/Edge Tunnel Routers ................................56\n      8.3.\
    \ ISP Provider Edge (PE) Tunnel Routers .....................57\n      8.4. LISP\
    \ Functionality with Conventional NATs .................58\n      8.5. Packets\
    \ Egressing a LISP Site .............................58\n   9. Traceroute Considerations\
    \ ......................................58\n      9.1. IPv6 Traceroute ...........................................59\n\
    \      9.2. IPv4 Traceroute ...........................................60\n  \
    \    9.3. Traceroute Using Mixed Locators ...........................60\n   10.\
    \ Mobility Considerations .......................................61\n      10.1.\
    \ Site Mobility ............................................61\n      10.2. Slow\
    \ Endpoint Mobility ...................................61\n      10.3. Fast Endpoint\
    \ Mobility ...................................61\n      10.4. Fast Network Mobility\
    \ ....................................63\n      10.5. LISP Mobile Node Mobility\
    \ ................................64\n   11. Multicast Considerations ......................................64\n\
    \   12. Security Considerations .......................................65\n  \
    \ 13. Network Management Considerations .............................67\n   14.\
    \ IANA Considerations ...........................................67\n      14.1.\
    \ LISP ACT and Flag Fields .................................67\n      14.2. LISP\
    \ Address Type Codes ..................................68\n      14.3. LISP UDP\
    \ Port Numbers ....................................68\n      14.4. LISP Key ID\
    \ Numbers ......................................68\n   15. Known Open Issues and\
    \ Areas of Future Work ....................68\n   16. References ....................................................70\n\
    \      16.1. Normative References .....................................70\n  \
    \    16.2. Informative References ...................................71\n   Appendix\
    \ A. Acknowledgments .......................................74\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document describes the Locator/Identifier Separation\
    \ Protocol\n   (LISP), which provides a set of functions for routers to exchange\n\
    \   information used to map from Endpoint Identifiers (EIDs) that are not\n  \
    \ globally routable to routable Routing Locators (RLOCs).  It also\n   defines\
    \ a mechanism for these LISP routers to encapsulate IP packets\n   addressed with\
    \ EIDs for transmission across a network infrastructure\n   that uses RLOCs for\
    \ routing and forwarding.\n   Creation of LISP was initially motivated by discussions\
    \ during the\n   IAB-sponsored Routing and Addressing Workshop held in Amsterdam\
    \ in\n   October 2006 (see [RFC4984]).  A key conclusion of the workshop was\n\
    \   that the Internet routing and addressing system was not scaling well\n   in\
    \ the face of the explosive growth of new sites; one reason for this\n   poor\
    \ scaling is the increasing number of multihomed sites and other\n   sites that\
    \ cannot be addressed as part of topology-based or provider-\n   based aggregated\
    \ prefixes.  Additional work that more completely\n   describes the problem statement\
    \ may be found in [RADIR].\n   A basic observation, made many years ago in early\
    \ networking research\n   such as that documented in [CHIAPPA] and [RFC4984],\
    \ is that using a\n   single address field for both identifying a device and for\n\
    \   determining where it is topologically located in the network requires\n  \
    \ optimization along two conflicting axes: for routing to be efficient,\n   the\
    \ address must be assigned topologically; for collections of\n   devices to be\
    \ easily and effectively managed, without the need for\n   renumbering in response\
    \ to topological change (such as that caused by\n   adding or removing attachment\
    \ points to the network or by mobility\n   events), the address must explicitly\
    \ not be tied to the topology.\n   The approach that LISP takes to solving the\
    \ routing scalability\n   problem is to replace IP addresses with two new types\
    \ of numbers:\n   Routing Locators (RLOCs), which are topologically assigned to\
    \ network\n   attachment points (and are therefore amenable to aggregation) and\n\
    \   used for routing and forwarding of packets through the network; and\n   Endpoint\
    \ Identifiers (EIDs), which are assigned independently from\n   the network topology,\
    \ are used for numbering devices, and are\n   aggregated along administrative\
    \ boundaries.  LISP then defines\n   functions for mapping between the two numbering\
    \ spaces and for\n   encapsulating traffic originated by devices using non-routable\
    \ EIDs\n   for transport across a network infrastructure that routes and\n   forwards\
    \ using RLOCs.  Both RLOCs and EIDs are syntactically\n   identical to IP addresses;\
    \ it is the semantics of how they are used\n   that differs.\n   This document\
    \ describes the protocol that implements these functions.\n   The database that\
    \ stores the mappings between EIDs and RLOCs is\n   explicitly a separate \"module\"\
    \ to facilitate experimentation with a\n   variety of approaches.  One database\
    \ design that is being developed\n   for experimentation as part of the LISP working\
    \ group work is\n   [RFC6836].  Others that have been described include [CONS],\
    \ [EMACS],\n   and [RFC6837].  Finally, [RFC6833] documents a general-purpose\n\
    \   service interface for accessing a mapping database; this interface is\n  \
    \ intended to make the mapping database modular so that different\n   approaches\
    \ can be tried without the need to modify installed LISP-\n   capable devices\
    \ in LISP sites.\n   This experimental specification has areas that require additional\n\
    \   experience and measurement.  It is NOT RECOMMENDED for deployment\n   beyond\
    \ experimental situations.  Results of experimentation may lead\n   to modifications\
    \ and enhancements of protocol mechanisms defined in\n   this document.  See Section\
    \ 15 for specific, known issues that are in\n   need of further work during development,\
    \ implementation, and\n   experimentation.\n   An examination of the implications\
    \ of LISP on Internet traffic,\n   applications, routers, and security is for\
    \ future study.  This\n   analysis will explain what role LISP can play in scalable\
    \ routing and\n   will also look at scalability and levels of state required for\n\
    \   encapsulation, decapsulation, liveness, and so on.\n"
- title: 2.  Requirements Notation
  contents:
  - "2.  Requirements Notation\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 3.  Definition of Terms
  contents:
  - "3.  Definition of Terms\n   Provider-Independent (PI) Addresses:   PI addresses\
    \ are an address\n      block assigned from a pool where blocks are not associated\
    \ with\n      any particular location in the network (e.g., from a particular\n\
    \      service provider) and are therefore not topologically aggregatable\n  \
    \    in the routing system.\n   Provider-Assigned (PA) Addresses:   PA addresses\
    \ are an address block\n      assigned to a site by each service provider to which\
    \ a site\n      connects.  Typically, each block is a sub-block of a service\n\
    \      provider Classless Inter-Domain Routing (CIDR) [RFC4632] block and\n  \
    \    is aggregated into the larger block before being advertised into\n      the\
    \ global Internet.  Traditionally, IP multihoming has been\n      implemented\
    \ by each multihomed site acquiring its own globally\n      visible prefix.  LISP\
    \ uses only topologically assigned and\n      aggregatable address blocks for\
    \ RLOCs, eliminating this\n      demonstrably non-scalable practice.\n   Routing\
    \ Locator (RLOC):   An RLOC is an IPv4 [RFC0791] or IPv6\n      [RFC2460] address\
    \ of an Egress Tunnel Router (ETR).  An RLOC is\n      the output of an EID-to-RLOC\
    \ mapping lookup.  An EID maps to one\n      or more RLOCs.  Typically, RLOCs\
    \ are numbered from topologically\n      aggregatable blocks that are assigned\
    \ to a site at each point to\n      which it attaches to the global Internet;\
    \ where the topology is\n      defined by the connectivity of provider networks,\
    \ RLOCs can be\n      thought of as PA addresses.  Multiple RLOCs can be assigned\
    \ to the\n      same ETR device or to multiple ETR devices at a site.\n   Endpoint\
    \ ID (EID):   An EID is a 32-bit (for IPv4) or 128-bit (for\n      IPv6) value\
    \ used in the source and destination address fields of\n      the first (most\
    \ inner) LISP header of a packet.  The host obtains\n      a destination EID the\
    \ same way it obtains a destination address\n      today, for example, through\
    \ a Domain Name System (DNS) [RFC1034]\n      lookup or Session Initiation Protocol\
    \ (SIP) [RFC3261] exchange.\n      The source EID is obtained via existing mechanisms\
    \ used to set a\n      host's \"local\" IP address.  An EID used on the public\
    \ Internet\n      must have the same properties as any other IP address used in\
    \ that\n      manner; this means, among other things, that it must be globally\n\
    \      unique.  An EID is allocated to a host from an EID-Prefix block\n     \
    \ associated with the site where the host is located.  An EID can be\n      used\
    \ by a host to refer to other hosts.  EIDs MUST NOT be used as\n      LISP RLOCs.\
    \  Note that EID blocks MAY be assigned in a\n      hierarchical manner, independent\
    \ of the network topology, to\n      facilitate scaling of the mapping database.\
    \  In addition, an EID\n      block assigned to a site may have site-local structure\n\
    \      (subnetting) for routing within the site; this structure is not\n     \
    \ visible to the global routing system.  In theory, the bit string\n      that\
    \ represents an EID for one device can represent an RLOC for a\n      different\
    \ device.  As the architecture is realized, if a given bit\n      string is both\
    \ an RLOC and an EID, it must refer to the same\n      entity in both cases. \
    \ When used in discussions with other\n      Locator/ID separation proposals,\
    \ a LISP EID will be called an\n      \"LEID\".  Throughout this document, any\
    \ references to \"EID\" refer\n      to an LEID.\n   EID-Prefix:   An EID-Prefix\
    \ is a power-of-two block of EIDs that are\n      allocated to a site by an address\
    \ allocation authority.\n      EID-Prefixes are associated with a set of RLOC\
    \ addresses that make\n      up a \"database mapping\".  EID-Prefix allocations\
    \ can be broken up\n      into smaller blocks when an RLOC set is to be associated\
    \ with the\n      larger EID-Prefix block.  A globally routed address block (whether\n\
    \      PI or PA) is not inherently an EID-Prefix.  A globally routed\n      address\
    \ block MAY be used by its assignee as an EID block.  The\n      converse is not\
    \ supported.  That is, a site that receives an\n      explicitly allocated EID-Prefix\
    \ may not use that EID-Prefix as a\n      globally routed prefix.  This would\
    \ require coordination and\n      cooperation with the entities managing the mapping\
    \ infrastructure.\n      Once this has been done, that block could be removed\
    \ from the\n      globally routed IP system, if other suitable transition and\
    \ access\n      mechanisms are in place.  Discussion of such transition and access\n\
    \      mechanisms can be found in [RFC6832] and [LISP-DEPLOY].\n   End-system:\
    \   An end-system is an IPv4 or IPv6 device that originates\n      packets with\
    \ a single IPv4 or IPv6 header.  The end-system\n      supplies an EID value for\
    \ the destination address field of the IP\n      header when communicating globally\
    \ (i.e., outside of its routing\n      domain).  An end-system can be a host computer,\
    \ a switch or router\n      device, or any network appliance.\n   Ingress Tunnel\
    \ Router (ITR):   An ITR is a router that resides in a\n      LISP site.  Packets\
    \ sent by sources inside of the LISP site to\n      destinations outside of the\
    \ site are candidates for encapsulation\n      by the ITR.  The ITR treats the\
    \ IP destination address as an EID\n      and performs an EID-to-RLOC mapping\
    \ lookup.  The router then\n      prepends an \"outer\" IP header with one of\
    \ its globally routable\n      RLOCs in the source address field and the result\
    \ of the mapping\n      lookup in the destination address field.  Note that this\n\
    \      destination RLOC MAY be an intermediate, proxy device that has\n      better\
    \ knowledge of the EID-to-RLOC mapping closer to the\n      destination EID. \
    \ In general, an ITR receives IP packets from site\n      end-systems on one side\
    \ and sends LISP-encapsulated IP packets\n      toward the Internet on the other\
    \ side.\n      Specifically, when a service provider prepends a LISP header for\n\
    \      Traffic Engineering purposes, the router that does this is also\n     \
    \ regarded as an ITR.  The outer RLOC the ISP ITR uses can be based\n      on\
    \ the outer destination address (the originating ITR's supplied\n      RLOC) or\
    \ the inner destination address (the originating host's\n      supplied EID).\n\
    \   TE-ITR:   A TE-ITR is an ITR that is deployed in a service provider\n    \
    \  network that prepends an additional LISP header for Traffic\n      Engineering\
    \ purposes.\n   Egress Tunnel Router (ETR):   An ETR is a router that accepts\
    \ an IP\n      packet where the destination address in the \"outer\" IP header\
    \ is\n      one of its own RLOCs.  The router strips the \"outer\" header and\n\
    \      forwards the packet based on the next IP header found.  In\n      general,\
    \ an ETR receives LISP-encapsulated IP packets from the\n      Internet on one\
    \ side and sends decapsulated IP packets to site\n      end-systems on the other\
    \ side.  ETR functionality does not have to\n      be limited to a router device.\
    \  A server host can be the endpoint\n      of a LISP tunnel as well.\n   TE-ETR:\
    \   A TE-ETR is an ETR that is deployed in a service provider\n      network that\
    \ strips an outer LISP header for Traffic Engineering\n      purposes.\n   xTR:\
    \   An xTR is a reference to an ITR or ETR when direction of data\n      flow\
    \ is not part of the context description. \"xTR\" refers to the\n      router\
    \ that is the tunnel endpoint and is used synonymously with\n      the term \"\
    Tunnel Router\".  For example, \"An xTR can be located at\n      the Customer\
    \ Edge (CE) router\" indicates both ITR and ETR\n      functionality at the CE\
    \ router.\n   LISP Router:   A LISP router is a router that performs the functions\n\
    \      of any or all of the following: ITR, ETR, Proxy-ITR (PITR), or\n      Proxy-ETR\
    \ (PETR).\n   EID-to-RLOC Cache:   The EID-to-RLOC Cache is a short-lived,\n \
    \     on-demand table in an ITR that stores, tracks, and is responsible\n    \
    \  for timing out and otherwise validating EID-to-RLOC mappings.\n      This cache\
    \ is distinct from the full \"database\" of EID-to-RLOC\n      mappings; it is\
    \ dynamic, local to the ITR(s), and relatively\n      small, while the database\
    \ is distributed, relatively static, and\n      much more global in scope.\n \
    \  EID-to-RLOC Database:   The EID-to-RLOC Database is a global\n      distributed\
    \ database that contains all known EID-Prefix-to-RLOC\n      mappings.  Each potential\
    \ ETR typically contains a small piece of\n      the database: the EID-to-RLOC\
    \ mappings for the EID-Prefixes\n      \"behind\" the router.  These map to one\
    \ of the router's own\n      globally visible IP addresses.  The same database\
    \ mapping entries\n      MUST be configured on all ETRs for a given site.  In\
    \ a steady\n      state, the EID-Prefixes for the site and the Locator-Set for\
    \ each\n      EID-Prefix MUST be the same on all ETRs.  Procedures to enforce\n\
    \      and/or verify this are outside the scope of this document.  Note\n    \
    \  that there MAY be transient conditions when the EID-Prefix for the\n      site\
    \ and Locator-Set for each EID-Prefix may not be the same on\n      all ETRs.\
    \  This has no negative implications, since a partial set\n      of Locators can\
    \ be used.\n   Recursive Tunneling:   Recursive Tunneling occurs when a packet\
    \ has\n      more than one LISP IP header.  Additional layers of tunneling MAY\n\
    \      be employed to implement Traffic Engineering or other re-routing\n    \
    \  as needed.  When this is done, an additional \"outer\" LISP header\n      is\
    \ added, and the original RLOCs are preserved in the \"inner\"\n      header.\
    \  Any references to tunnels in this specification refer to\n      dynamic encapsulating\
    \ tunnels; they are never statically\n      configured.\n   Re-encapsulating Tunnels:\
    \   Re-encapsulating Tunneling occurs when an\n      ETR removes a LISP header,\
    \ then acts as an ITR to prepend another\n      LISP header.  Doing this allows\
    \ a packet to be re-routed by the\n      re-encapsulating router without adding\
    \ the overhead of additional\n      tunnel headers.  Any references to tunnels\
    \ in this specification\n      refer to dynamic encapsulating tunnels; they are\
    \ never statically\n      configured.  When using multiple mapping database systems,\
    \ care\n      must be taken to not create re-encapsulation loops through\n   \
    \   misconfiguration.\n   LISP Header:   LISP header is a term used in this document\
    \ to refer\n      to the outer IPv4 or IPv6 header, a UDP header, and a LISP-\n\
    \      specific 8-octet header that follow the UDP header and that an ITR\n  \
    \    prepends or an ETR strips.\n   Address Family Identifier (AFI):   AFI is\
    \ a term used to describe an\n      address encoding in a packet.  An address\
    \ family currently\n      pertains to an IPv4 or IPv6 address.  See [AFI] and\
    \ [RFC3232] for\n      details.  An AFI value of 0 used in this specification\
    \ indicates\n      an unspecified encoded address where the length of the address\
    \ is\n      0 octets following the 16-bit AFI value of 0.\n   Negative Mapping\
    \ Entry:   A negative mapping entry, also known as a\n      negative cache entry,\
    \ is an EID-to-RLOC entry where an EID-Prefix\n      is advertised or stored with\
    \ no RLOCs.  That is, the Locator-Set\n      for the EID-to-RLOC entry is empty\
    \ or has an encoded Locator count\n      of 0.  This type of entry could be used\
    \ to describe a prefix from\n      a non-LISP site, which is explicitly not in\
    \ the mapping database.\n      There are a set of well-defined actions that are\
    \ encoded in a\n      Negative Map-Reply (Section 6.1.5).\n   Data-Probe:   A\
    \ Data-Probe is a LISP-encapsulated data packet where\n      the inner-header\
    \ destination address equals the outer-header\n      destination address used\
    \ to trigger a Map-Reply by a decapsulating\n      ETR.  In addition, the original\
    \ packet is decapsulated and\n      delivered to the destination host if the destination\
    \ EID is in the\n      EID-Prefix range configured on the ETR.  Otherwise, the\
    \ packet is\n      discarded.  A Data-Probe is used in some of the mapping database\n\
    \      designs to \"probe\" or request a Map-Reply from an ETR; in other\n   \
    \   cases, Map-Requests are used.  See each mapping database design\n      for\
    \ details.  When using Data-Probes, by sending Map-Requests on\n      the underlying\
    \ routing system, EID-Prefixes must be advertised.\n      However, this is discouraged\
    \ if the core is to scale by having\n      less EID-Prefixes stored in the core\
    \ router's routing tables.\n   Proxy-ITR (PITR):   A PITR is defined and described\
    \ in [RFC6832].  A\n      PITR acts like an ITR but does so on behalf of non-LISP\
    \ sites that\n      send packets to destinations at LISP sites.\n   Proxy-ETR\
    \ (PETR):   A PETR is defined and described in [RFC6832].  A\n      PETR acts\
    \ like an ETR but does so on behalf of LISP sites that\n      send packets to\
    \ destinations at non-LISP sites.\n   Route-returnability:  Route-returnability\
    \ is an assumption that the\n      underlying routing system will deliver packets\
    \ to the destination.\n      When combined with a nonce that is provided by a\
    \ sender and\n      returned by a receiver, this limits off-path data insertion.\
    \  A\n      route-returnability check is verified when a message is sent with\n\
    \      a nonce, another message is returned with the same nonce, and the\n   \
    \   destination of the original message appears as the source of the\n      returned\
    \ message.\n   LISP site:  LISP site is a set of routers in an edge network that\
    \ are\n      under a single technical administration.  LISP routers that reside\n\
    \      in the edge network are the demarcation points to separate the\n      edge\
    \ network from the core network.\n   Client-side:  Client-side is a term used\
    \ in this document to indicate\n      a connection initiation attempt by an EID.\
    \  The ITR(s) at the LISP\n      site are the first to get involved in obtaining\
    \ database Map-Cache\n      entries by sending Map-Request messages.\n   Server-side:\
    \  Server-side is a term used in this document to indicate\n      that a connection\
    \ initiation attempt is being accepted for a\n      destination EID.  The ETR(s)\
    \ at the destination LISP site are the\n      first to send Map-Replies to the\
    \ source site initiating the\n      connection.  The ETR(s) at this destination\
    \ site can obtain\n      mappings by gleaning information from Map-Requests, Data-Probes,\n\
    \      or encapsulated packets.\n   Locator-Status-Bits (LSBs):  Locator-Status-Bits\
    \ are present in the\n      LISP header.  They are used by ITRs to inform ETRs\
    \ about the up/\n      down status of all ETRs at the local site.  These bits\
    \ are used as\n      a hint to convey up/down router status and not path reachability\n\
    \      status.  The LSBs can be verified by use of one of the Locator\n      reachability\
    \ algorithms described in Section 6.3.\n   Anycast Address:  Anycast Address is\
    \ a term used in this document to\n      refer to the same IPv4 or IPv6 address\
    \ configured and used on\n      multiple systems at the same time.  An EID or\
    \ RLOC can be an\n      anycast address in each of their own address spaces.\n"
- title: 4.  Basic Overview
  contents:
  - "4.  Basic Overview\n   One key concept of LISP is that end-systems (hosts) operate\
    \ the same\n   way they do today.  The IP addresses that hosts use for tracking\n\
    \   sockets and connections, and for sending and receiving packets, do\n   not\
    \ change.  In LISP terminology, these IP addresses are called\n   Endpoint Identifiers\
    \ (EIDs).\n   Routers continue to forward packets based on IP destination\n  \
    \ addresses.  When a packet is LISP encapsulated, these addresses are\n   referred\
    \ to as Routing Locators (RLOCs).  Most routers along a path\n   between two hosts\
    \ will not change; they continue to perform routing/\n   forwarding lookups on\
    \ the destination addresses.  For routers between\n   the source host and the\
    \ ITR as well as routers from the ETR to the\n   destination host, the destination\
    \ address is an EID.  For the routers\n   between the ITR and the ETR, the destination\
    \ address is an RLOC.\n   Another key LISP concept is the \"Tunnel Router\". \
    \ A Tunnel Router\n   prepends LISP headers on host-originated packets and strips\
    \ them\n   prior to final delivery to their destination.  The IP addresses in\n\
    \   this \"outer header\" are RLOCs.  During end-to-end packet exchange\n   between\
    \ two Internet hosts, an ITR prepends a new LISP header to each\n   packet, and\
    \ an ETR strips the new header.  The ITR performs\n   EID-to-RLOC lookups to determine\
    \ the routing path to the ETR, which\n   has the RLOC as one of its IP addresses.\n\
    \   Some basic rules governing LISP are:\n   o  End-systems (hosts) only send\
    \ to addresses that are EIDs.  They\n      don't know that addresses are EIDs\
    \ versus RLOCs but assume that\n      packets get to their intended destinations.\
    \  In a system where\n      LISP is deployed, LISP routers intercept EID-addressed\
    \ packets and\n      assist in delivering them across the network core where EIDs\n\
    \      cannot be routed.  The procedure a host uses to send IP packets\n     \
    \ does not change.\n   o  EIDs are always IP addresses assigned to hosts.\n  \
    \ o  LISP routers mostly deal with Routing Locator addresses.  See\n      details\
    \ in Section 4.1 to clarify what is meant by \"mostly\".\n   o  RLOCs are always\
    \ IP addresses assigned to routers, preferably\n      topologically oriented addresses\
    \ from provider CIDR (Classless\n      Inter-Domain Routing) blocks.\n   o  When\
    \ a router originates packets, it may use as a source address\n      either an\
    \ EID or RLOC.  When acting as a host (e.g., when\n      terminating a transport\
    \ session such as Secure SHell (SSH),\n      TELNET, or the Simple Network Management\
    \ Protocol (SNMP)), it may\n      use an EID that is explicitly assigned for that\
    \ purpose.  An EID\n      that identifies the router as a host MUST NOT be used\
    \ as an RLOC;\n      an EID is only routable within the scope of a site.  A typical\
    \ BGP\n      configuration might demonstrate this \"hybrid\" EID/RLOC usage where\n\
    \      a router could use its \"host-like\" EID to terminate iBGP sessions\n \
    \     to other routers in a site while at the same time using RLOCs to\n     \
    \ terminate eBGP sessions to routers outside the site.\n   o  Packets with EIDs\
    \ in them are not expected to be delivered\n      end-to-end in the absence of\
    \ an EID-to-RLOC mapping operation.\n      They are expected to be used locally\
    \ for intra-site communication\n      or to be encapsulated for inter-site communication.\n\
    \   o  EID-Prefixes are likely to be hierarchically assigned in a manner\n   \
    \   that is optimized for administrative convenience and to facilitate\n     \
    \ scaling of the EID-to-RLOC mapping database.  The hierarchy is\n      based\
    \ on an address allocation hierarchy that is independent of\n      the network\
    \ topology.\n   o  EIDs may also be structured (subnetted) in a manner suitable\
    \ for\n      local routing within an Autonomous System (AS).\n   An additional\
    \ LISP header MAY be prepended to packets by a TE-ITR\n   when re-routing of the\
    \ path for a packet is desired.  A potential\n   use-case for this would be an\
    \ ISP router that needs to perform\n   Traffic Engineering for packets flowing\
    \ through its network.  In such\n   a situation, termed \"Recursive Tunneling\"\
    , an ISP transit acts as an\n   additional ITR, and the RLOC it uses for the new\
    \ prepended header\n   would be either a TE-ETR within the ISP (along an intra-ISP\
    \ traffic\n   engineered path) or a TE-ETR within another ISP (an inter-ISP traffic\n\
    \   engineered path, where an agreement to build such a path exists).\n   In order\
    \ to avoid excessive packet overhead as well as possible\n   encapsulation loops,\
    \ this document mandates that a maximum of two\n   LISP headers can be prepended\
    \ to a packet.  For initial LISP\n   deployments, it is assumed that two headers\
    \ is sufficient, where the\n   first prepended header is used at a site for Location/Identity\n\
    \   separation and the second prepended header is used inside a service\n   provider\
    \ for Traffic Engineering purposes.\n   Tunnel Routers can be placed fairly flexibly\
    \ in a multi-AS topology.\n   For example, the ITR for a particular end-to-end\
    \ packet exchange\n   might be the first-hop or default router within a site for\
    \ the source\n   host.  Similarly, the ETR might be the last-hop router directly\n\
    \   connected to the destination host.  Another example, perhaps for a\n   VPN\
    \ service outsourced to an ISP by a site, the ITR could be the\n   site's border\
    \ router at the service provider attachment point.\n   Mixing and matching of\
    \ site-operated, ISP-operated, and other Tunnel\n   Routers is allowed for maximum\
    \ flexibility.  See Section 8 for more\n   details.\n"
- title: 4.1.  Packet Flow Sequence
  contents:
  - "4.1.  Packet Flow Sequence\n   This section provides an example of the unicast\
    \ packet flow with the\n   following conditions:\n   o  Source host \"host1.abc.example.com\"\
    \ is sending a packet to\n      \"host2.xyz.example.com\", exactly what host1\
    \ would do if the site\n      was not using LISP.\n   o  Each site is multihomed,\
    \ so each Tunnel Router has an address\n      (RLOC) assigned from the service\
    \ provider address block for each\n      provider to which that particular Tunnel\
    \ Router is attached.\n   o  The ITR(s) and ETR(s) are directly connected to the\
    \ source and\n      destination, respectively, but the source and destination\
    \ can be\n      located anywhere in the LISP site.\n   o  Map-Requests can be\
    \ sent on the underlying routing system\n      topology, to a mapping database\
    \ system, or directly over an\n      Alternative Logical Topology [RFC6836]. \
    \ A Map-Request is sent for\n      an external destination when the destination\
    \ is not found in the\n      forwarding table or matches a default route.\n  \
    \ o  Map-Replies are sent on the underlying routing system topology.\n   Client\
    \ host1.abc.example.com wants to communicate with server\n   host2.xyz.example.com:\n\
    \   1.  host1.abc.example.com wants to open a TCP connection to\n       host2.xyz.example.com.\
    \  It does a DNS lookup on\n       host2.xyz.example.com.  An A/AAAA record is\
    \ returned.  This\n       address is the destination EID.  The locally assigned\
    \ address of\n       host1.abc.example.com is used as the source EID.  An IPv4\
    \ or IPv6\n       packet is built and forwarded through the LISP site as a normal\n\
    \       IP packet until it reaches a LISP ITR.\n   2.  The LISP ITR must be able\
    \ to map the destination EID to an RLOC\n       of one of the ETRs at the destination\
    \ site.  The specific method\n       used to do this is not described in this\
    \ example.  See [RFC6836]\n       or [CONS] for possible solutions.\n   3.  The\
    \ ITR will send a LISP Map-Request.  Map-Requests SHOULD be\n       rate-limited.\n\
    \   4.  When an alternate mapping system is not in use, the Map-Request\n    \
    \   packet is routed through the underlying routing system.\n       Otherwise,\
    \ the Map-Request packet is routed on an alternate\n       logical topology, for\
    \ example, the [RFC6836] database mapping\n       system.  In either case, when\
    \ the Map-Request arrives at one of\n       the ETRs at the destination site,\
    \ it will process the packet as a\n       control message.\n   5.  The ETR looks\
    \ at the destination EID of the Map-Request and\n       matches it against the\
    \ prefixes in the ETR's configured\n       EID-to-RLOC mapping database.  This\
    \ is the list of EID-Prefixes\n       the ETR is supporting for the site it resides\
    \ in.  If there is no\n       match, the Map-Request is dropped.  Otherwise, a\
    \ LISP Map-Reply\n       is returned to the ITR.\n   6.  The ITR receives the\
    \ Map-Reply message, parses the message (to\n       check for format validity),\
    \ and stores the mapping information\n       from the packet.  This information\
    \ is stored in the ITR's\n       EID-to-RLOC mapping cache.  Note that the map-cache\
    \ is an\n       on-demand cache.  An ITR will manage its map-cache in such a way\n\
    \       that optimizes for its resource constraints.\n   7.  Subsequent packets\
    \ from host1.abc.example.com to\n       host2.xyz.example.com will have a LISP\
    \ header prepended by the\n       ITR using the appropriate RLOC as the LISP header\
    \ destination\n       address learned from the ETR.  Note that the packet MAY\
    \ be sent\n       to a different ETR than the one that returned the Map-Reply\
    \ due\n       to the source site's hashing policy or the destination site's\n\
    \       Locator-Set policy.\n   8.  The ETR receives these packets directly (since\
    \ the destination\n       address is one of its assigned IP addresses), checks\
    \ the validity\n       of the addresses, strips the LISP header, and forwards\
    \ packets to\n       the attached destination host.\n   In order to defer the\
    \ need for a mapping lookup in the reverse\n   direction, an ETR MAY create a\
    \ cache entry that maps the source EID\n   (inner-header source IP address) to\
    \ the source RLOC (outer-header\n   source IP address) in a received LISP packet.\
    \  Such a cache entry is\n   termed a \"gleaned\" mapping and only contains a\
    \ single RLOC for the\n   EID in question.  More complete information about additional\
    \ RLOCs\n   SHOULD be verified by sending a LISP Map-Request for that EID.  Both\n\
    \   the ITR and the ETR may also influence the decision the other makes\n   in\
    \ selecting an RLOC.  See Section 6 for more details.\n"
- title: 5.  LISP Encapsulation Details
  contents:
  - "5.  LISP Encapsulation Details\n   Since additional tunnel headers are prepended,\
    \ the packet becomes\n   larger and can exceed the MTU of any link traversed from\
    \ the ITR to\n   the ETR.  It is RECOMMENDED in IPv4 that packets do not get\n\
    \   fragmented as they are encapsulated by the ITR.  Instead, the packet\n   is\
    \ dropped and an ICMP Too Big message is returned to the source.\n   This specification\
    \ RECOMMENDS that implementations provide support\n   for one of the proposed\
    \ fragmentation and reassembly schemes.  Two\n   existing schemes are detailed\
    \ in Section 5.4.\n   Since IPv4 or IPv6 addresses can be either EIDs or RLOCs,\
    \ the LISP\n   architecture supports IPv4 EIDs with IPv6 RLOCs (where the inner\n\
    \   header is in IPv4 packet format and the outer header is in IPv6\n   packet\
    \ format) or IPv6 EIDs with IPv4 RLOCs (where the inner header\n   is in IPv6\
    \ packet format and the outer header is in IPv4 packet\n   format).  The next\
    \ sub-sections illustrate packet formats for the\n   homogeneous case (IPv4-in-IPv4\
    \ and IPv6-in-IPv6), but all 4\n   combinations MUST be supported.\n"
- title: 5.1.  LISP IPv4-in-IPv4 Header Format
  contents:
  - "5.1.  LISP IPv4-in-IPv4 Header Format\n        0                   1        \
    \           2                   3\n        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     / |Version|  IHL  |Type of Service|          Total Length         |\n  \
    \  /  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |\
    \   |         Identification        |Flags|      Fragment Offset    |\n   |  \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   OH  |\
    \  Time to Live | Protocol = 17 |         Header Checksum       |\n   |   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   |                    Source Routing Locator                     |\n  \
    \  \\  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   \
    \  \\ |                 Destination Routing Locator                   |\n    \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     /\
    \ |       Source Port = xxxx      |       Dest Port = 4341        |\n   UDP +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     \\ |           UDP Length          |        UDP Checksum           |\n \
    \      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   L\
    \   |N|L|E|V|I|flags|            Nonce/Map-Version                  |\n   I \\\
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   S / |\
    \                 Instance ID/Locator-Status-Bits               |\n   P   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     / |Version|  IHL  |Type of Service|          Total Length         |\n  \
    \  /  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |\
    \   |         Identification        |Flags|      Fragment Offset    |\n   |  \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   IH  |\
    \  Time to Live |    Protocol   |         Header Checksum       |\n   |   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   |                           Source EID                          |\n  \
    \  \\  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   \
    \  \\ |                         Destination EID                       |\n    \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      \
    \ IHL = IP-Header-Length\n"
- title: 5.2.  LISP IPv6-in-IPv6 Header Format
  contents:
  - "5.2.  LISP IPv6-in-IPv6 Header Format\n        0                   1        \
    \           2                   3\n        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     / |Version| Traffic Class |           Flow Label                  |\n  \
    \  /  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |\
    \   |         Payload Length        | Next Header=17|   Hop Limit   |\n   v  \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |\
    \                                                               |\n   O   +  \
    \                                                             +\n   u   |    \
    \                                                           |\n   t   +      \
    \               Source Routing Locator                    +\n   e   |        \
    \                                                       |\n   r   +          \
    \                                                     +\n       |            \
    \                                                   |\n   H   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   d   |                                                               |\n  \
    \ r   +                                                               +\n    \
    \   |                                                               |\n   ^  \
    \ +                  Destination Routing Locator                  +\n   |   |\
    \                                                               |\n    \\  + \
    \                                                              +\n     \\ |  \
    \                                                             |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     / |       Source Port = xxxx      |       Dest Port = 4341        |\n  \
    \ UDP +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \ \\ |           UDP Length          |        UDP Checksum           |\n     \
    \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   L   |N|L|E|V|I|flags|\
    \            Nonce/Map-Version                  |\n   I \\ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   S / |                 Instance ID/Locator-Status-Bits               |\n  \
    \ P   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \ / |Version| Traffic Class |           Flow Label                  |\n    / \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   /   |\
    \         Payload Length        |  Next Header  |   Hop Limit   |\n   v   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |                                                               |\n  \
    \ I   +                                                               +\n   n\
    \   |                                                               |\n   n  \
    \ +                          Source EID                           +\n   e   |\
    \                                                               |\n   r   +  \
    \                                                             +\n       |    \
    \                                                           |\n   H   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   d   |                                                               |\n  \
    \ r   +                                                               +\n    \
    \   |                                                               |\n   ^  \
    \ +                        Destination EID                        +\n   \\   |\
    \                                                               |\n    \\  + \
    \                                                              +\n     \\ |  \
    \                                                             |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 5.3.  Tunnel Header Field Descriptions
  contents:
  - "5.3.  Tunnel Header Field Descriptions\n   Inner Header (IH):  The inner header\
    \ is the header on the datagram\n      received from the originating host.  The\
    \ source and destination IP\n      addresses are EIDs [RFC0791] [RFC2460].\n \
    \  Outer Header: (OH)  The outer header is a new header prepended by an\n    \
    \  ITR.  The address fields contain RLOCs obtained from the ingress\n      router's\
    \ EID-to-RLOC Cache.  The IP protocol number is \"UDP (17)\"\n      from [RFC0768].\
    \  The setting of the Don't Fragment (DF) bit\n      'Flags' field is according\
    \ to rules listed in Sections 5.4.1 and\n      5.4.2.\n   UDP Header:  The UDP\
    \ header contains an ITR selected source port when\n      encapsulating a packet.\
    \  See Section 6.5 for details on the hash\n      algorithm used to select a source\
    \ port based on the 5-tuple of the\n      inner header.  The destination port\
    \ MUST be set to the well-known\n      IANA-assigned port value 4341.\n   UDP\
    \ Checksum:  The 'UDP Checksum' field SHOULD be transmitted as zero\n      by\
    \ an ITR for either IPv4 [RFC0768] or IPv6 encapsulation\n      [UDP-TUNNELS]\
    \ [UDP-ZERO].  When a packet with a zero UDP checksum\n      is received by an\
    \ ETR, the ETR MUST accept the packet for\n      decapsulation.  When an ITR transmits\
    \ a non-zero value for the UDP\n      checksum, it MUST send a correctly computed\
    \ value in this field.\n      When an ETR receives a packet with a non-zero UDP\
    \ checksum, it MAY\n      choose to verify the checksum value.  If it chooses\
    \ to perform\n      such verification, and the verification fails, the packet\
    \ MUST be\n      silently dropped.  If the ETR chooses not to perform the\n  \
    \    verification, or performs the verification successfully, the\n      packet\
    \ MUST be accepted for decapsulation.  The handling of UDP\n      checksums for\
    \ all tunneling protocols, including LISP, is under\n      active discussion within\
    \ the IETF.  When that discussion\n      concludes, any necessary changes will\
    \ be made to align LISP with\n      the outcome of the broader discussion.\n \
    \  UDP Length:  The 'UDP Length' field is set for an IPv4-encapsulated\n     \
    \ packet to be the sum of the inner-header IPv4 Total Length plus\n      the UDP\
    \ and LISP header lengths.  For an IPv6-encapsulated packet,\n      the 'UDP Length'\
    \ field is the sum of the inner-header IPv6 Payload\n      Length, the size of\
    \ the IPv6 header (40 octets), and the size of\n      the UDP and LISP headers.\n\
    \   N: The N-bit is the nonce-present bit.  When this bit is set to 1,\n     \
    \ the low-order 24 bits of the first 32 bits of the LISP header\n      contain\
    \ a Nonce.  See Section 6.3.1 for details.  Both N- and\n      V-bits MUST NOT\
    \ be set in the same packet.  If they are, a\n      decapsulating ETR MUST treat\
    \ the 'Nonce/Map-Version' field as\n      having a Nonce value present.\n   L:\
    \ The L-bit is the 'Locator-Status-Bits' field enabled bit.  When\n      this\
    \ bit is set to 1, the Locator-Status-Bits in the second\n      32 bits of the\
    \ LISP header are in use.\n     x 1 x x 0 x x x\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |N|L|E|V|I|flags|            Nonce/Map-Version                  |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                      Locator-Status-Bits                      |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   E: The E-bit is the echo-nonce-request bit.  This bit MUST be ignored\n  \
    \    and has no meaning when the N-bit is set to 0.  When the N-bit is\n     \
    \ set to 1 and this bit is set to 1, an ITR is requesting that the\n      nonce\
    \ value in the 'Nonce' field be echoed back in LISP-\n      encapsulated packets\
    \ when the ITR is also an ETR.  See\n      Section 6.3.1 for details.\n   V: The\
    \ V-bit is the Map-Version present bit.  When this bit is set to\n      1, the\
    \ N-bit MUST be 0.  Refer to Section 6.6.3 for more details.\n      This bit indicates\
    \ that the LISP header is encoded in this\n      case as:\n     0 x 0 1 x x x\
    \ x\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n \
    \   |N|L|E|V|I|flags|  Source Map-Version   |   Dest Map-Version    |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                 Instance ID/Locator-Status-Bits               |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   I: The I-bit is the Instance ID bit.  See Section 5.5 for more\n      details.\
    \  When this bit is set to 1, the 'Locator-Status-Bits'\n      field is reduced\
    \ to 8 bits and the high-order 24 bits are used as\n      an Instance ID.  If\
    \ the L-bit is set to 0, then the low-order\n      8 bits are transmitted as zero\
    \ and ignored on receipt.  The format\n      of the LISP header would look like\
    \ this:\n     x x x x 1 x x x\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |N|L|E|V|I|flags|            Nonce/Map-Version                  |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                 Instance ID                   |     LSBs      |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   flags:  The 'flags' field is a 3-bit field reserved for future flag\n    \
    \  use.  It MUST be set to 0 on transmit and MUST be ignored on\n      receipt.\n\
    \   LISP Nonce:  The LISP 'Nonce' field is a 24-bit value that is\n      randomly\
    \ generated by an ITR when the N-bit is set to 1.  Nonce\n      generation algorithms\
    \ are an implementation matter but are\n      required to generate different nonces\
    \ when sending to different\n      destinations.  However, the same nonce can\
    \ be used for a period of\n      time to the same destination.  The nonce is also\
    \ used when the\n      E-bit is set to request the nonce value to be echoed by\
    \ the other\n      side when packets are returned.  When the E-bit is clear but\
    \ the\n      N-bit is set, a remote ITR is either echoing a previously\n     \
    \ requested echo-nonce or providing a random nonce.  See\n      Section 6.3.1\
    \ for more details.\n   LISP Locator-Status-Bits (LSBs):  When the L-bit is also\
    \ set, the\n      'Locator-Status-Bits' field in the LISP header is set by an\
    \ ITR to\n      indicate to an ETR the up/down status of the Locators in the\n\
    \      source site.  Each RLOC in a Map-Reply is assigned an ordinal\n      value\
    \ from 0 to n-1 (when there are n RLOCs in a mapping entry).\n      The Locator-Status-Bits\
    \ are numbered from 0 to n-1 from the least\n      significant bit of the field.\
    \  The field is 32 bits when the I-bit\n      is set to 0 and is 8 bits when the\
    \ I-bit is set to 1.  When a\n      Locator-Status-Bit is set to 1, the ITR is\
    \ indicating to the ETR\n      that the RLOC associated with the bit ordinal has\
    \ up status.  See\n      Section 6.3 for details on how an ITR can determine the\
    \ status of\n      the ETRs at the same site.  When a site has multiple EID-Prefixes\n\
    \      that result in multiple mappings (where each could have a\n      different\
    \ Locator-Set), the Locator-Status-Bits setting in an\n      encapsulated packet\
    \ MUST reflect the mapping for the EID-Prefix\n      that the inner-header source\
    \ EID address matches.  If the LSB for\n      an anycast Locator is set to 1,\
    \ then there is at least one RLOC\n      with that address, and the ETR is considered\
    \ 'up'.\n   When doing ITR/PITR encapsulation:\n   o  The outer-header 'Time to\
    \ Live' field (or 'Hop Limit' field, in\n      the case of IPv6) SHOULD be copied\
    \ from the inner-header 'Time to\n      Live' field.\n   o  The outer-header 'Type\
    \ of Service' field (or the 'Traffic Class'\n      field, in the case of IPv6)\
    \ SHOULD be copied from the inner-header\n      'Type of Service' field (with\
    \ one exception; see below).\n   When doing ETR/PETR decapsulation:\n   o  The\
    \ inner-header 'Time to Live' field (or 'Hop Limit' field, in\n      the case\
    \ of IPv6) SHOULD be copied from the outer-header 'Time to\n      Live' field,\
    \ when the Time to Live value of the outer header is\n      less than the Time\
    \ to Live value of the inner header.  Failing to\n      perform this check can\
    \ cause the Time to Live of the inner header\n      to increment across encapsulation/decapsulation\
    \ cycles.  This\n      check is also performed when doing initial encapsulation,\
    \ when a\n      packet comes to an ITR or PITR destined for a LISP site.\n   o\
    \  The inner-header 'Type of Service' field (or the 'Traffic Class'\n      field,\
    \ in the case of IPv6) SHOULD be copied from the outer-header\n      'Type of\
    \ Service' field (with one exception; see below).\n   Note that if an ETR/PETR\
    \ is also an ITR/PITR and chooses to\n   re-encapsulate after decapsulating, the\
    \ net effect of this is that\n   the new outer header will carry the same Time\
    \ to Live as the old\n   outer header minus 1.\n   Copying the Time to Live (TTL)\
    \ serves two purposes: first, it\n   preserves the distance the host intended\
    \ the packet to travel;\n   second, and more importantly, it provides for suppression\
    \ of looping\n   packets in the event there is a loop of concatenated tunnels\
    \ due to\n   misconfiguration.  See Section 9.3 for TTL exception handling for\n\
    \   traceroute packets.\n   The Explicit Congestion Notification ('ECN') field\
    \ occupies bits 6\n   and 7 of both the IPv4 'Type of Service' field and the IPv6\
    \ 'Traffic\n   Class' field [RFC3168].  The 'ECN' field requires special treatment\n\
    \   in order to avoid discarding indications of congestion [RFC3168].\n   ITR\
    \ encapsulation MUST copy the 2-bit 'ECN' field from the inner\n   header to the\
    \ outer header.  Re-encapsulation MUST copy the 2-bit\n   'ECN' field from the\
    \ stripped outer header to the new outer header.\n   If the 'ECN' field contains\
    \ a congestion indication codepoint (the\n   value is '11', the Congestion Experienced\
    \ (CE) codepoint), then ETR\n   decapsulation MUST copy the 2-bit 'ECN' field\
    \ from the stripped outer\n   header to the surviving inner header that is used\
    \ to forward the\n   packet beyond the ETR.  These requirements preserve CE indications\n\
    \   when a packet that uses ECN traverses a LISP tunnel and becomes\n   marked\
    \ with a CE indication due to congestion between the tunnel\n   endpoints.\n"
- title: 5.4.  Dealing with Large Encapsulated Packets
  contents:
  - "5.4.  Dealing with Large Encapsulated Packets\n   This section proposes two mechanisms\
    \ to deal with packets that exceed\n   the path MTU between the ITR and ETR.\n\
    \   It is left to the implementor to decide if the stateless or stateful\n   mechanism\
    \ should be implemented.  Both or neither can be used, since\n   it is a local\
    \ decision in the ITR regarding how to deal with MTU\n   issues, and sites can\
    \ interoperate with differing mechanisms.\n   Both stateless and stateful mechanisms\
    \ also apply to Re-encapsulating\n   and Recursive Tunneling, so any actions below\
    \ referring to an ITR\n   also apply to a TE-ITR.\n"
- title: 5.4.1.  A Stateless Solution to MTU Handling
  contents:
  - "5.4.1.  A Stateless Solution to MTU Handling\n   An ITR stateless solution to\
    \ handle MTU issues is described as\n   follows:\n   1.  Define H to be the size,\
    \ in octets, of the outer header an ITR\n       prepends to a packet.  This includes\
    \ the UDP and LISP header\n       lengths.\n   2.  Define L to be the size, in\
    \ octets, of the maximum-sized packet\n       an ITR can send to an ETR without\
    \ the need for the ITR or any\n       intermediate routers to fragment the packet.\n\
    \   3.  Define an architectural constant S for the maximum size of a\n       packet,\
    \ in octets, an ITR must receive so the effective MTU can\n       be met.  That\
    \ is, S = L - H.\n   When an ITR receives a packet from a site-facing interface\
    \ and adds H\n   octets worth of encapsulation to yield a packet size greater\
    \ than L\n   octets, it resolves the MTU issue by first splitting the original\n\
    \   packet into 2 equal-sized fragments.  A LISP header is then prepended\n  \
    \ to each fragment.  The size of the encapsulated fragments is then\n   (S/2 +\
    \ H), which is less than the ITR's estimate of the path MTU\n   between the ITR\
    \ and its correspondent ETR.\n   When an ETR receives encapsulated fragments,\
    \ it treats them as two\n   individually encapsulated packets.  It strips the\
    \ LISP headers and\n   then forwards each fragment to the destination host of\
    \ the\n   destination site.  The two fragments are reassembled at the\n   destination\
    \ host into the single IP datagram that was originated by\n   the source host.\
    \  Note that reassembly can happen at the ETR if the\n   encapsulated packet was\
    \ fragmented at or after the ITR.\n   This behavior is performed by the ITR when\
    \ the source host originates\n   a packet with the 'DF' field of the IP header\
    \ set to 0.  When the\n   'DF' field of the IP header is set to 1, or the packet\
    \ is an IPv6\n   packet originated by the source host, the ITR will drop the packet\n\
    \   when the size is greater than L and send an ICMP Too Big message to\n   the\
    \ source with a value of S, where S is (L - H).\n   When the outer-header encapsulation\
    \ uses an IPv4 header, an\n   implementation SHOULD set the DF bit to 1 so ETR\
    \ fragment reassembly\n   can be avoided.  An implementation MAY set the DF bit\
    \ in such headers\n   to 0 if it has good reason to believe there are unresolvable\
    \ path MTU\n   issues between the sending ITR and the receiving ETR.\n   This\
    \ specification RECOMMENDS that L be defined as 1500.\n"
- title: 5.4.2.  A Stateful Solution to MTU Handling
  contents:
  - "5.4.2.  A Stateful Solution to MTU Handling\n   An ITR stateful solution to handle\
    \ MTU issues is described as follows\n   and was first introduced in [OPENLISP]:\n\
    \   1.  The ITR will keep state of the effective MTU for each Locator per\n  \
    \     Map-Cache entry.  The effective MTU is what the core network can\n     \
    \  deliver along the path between the ITR and ETR.\n   2.  When an IPv6-encapsulated\
    \ packet, or an IPv4-encapsulated packet\n       with the DF bit set to 1, exceeds\
    \ what the core network can\n       deliver, one of the intermediate routers on\
    \ the path will send an\n       ICMP Too Big message to the ITR.  The ITR will\
    \ parse the ICMP\n       message to determine which Locator is affected by the\
    \ effective\n       MTU change and then record the new effective MTU value in\
    \ the\n       Map-Cache entry.\n   3.  When a packet is received by the ITR from\
    \ a source inside of the\n       site and the size of the packet is greater than\
    \ the effective MTU\n       stored with the Map-Cache entry associated with the\
    \ destination\n       EID the packet is for, the ITR will send an ICMP Too Big\
    \ message\n       back to the source.  The packet size advertised by the ITR in\
    \ the\n       ICMP Too Big message is the effective MTU minus the LISP\n     \
    \  encapsulation length.\n   Even though this mechanism is stateful, it has advantages\
    \ over the\n   stateless IP fragmentation mechanism, by not involving the\n  \
    \ destination host with reassembly of ITR fragmented packets.\n"
- title: 5.5.  Using Virtualization and Segmentation with LISP
  contents:
  - "5.5.  Using Virtualization and Segmentation with LISP\n   When multiple organizations\
    \ inside of a LISP site are using private\n   addresses [RFC1918] as EID-Prefixes,\
    \ their address spaces MUST remain\n   segregated due to possible address duplication.\
    \  An Instance ID in\n   the address encoding can aid in making the entire AFI-based\
    \ address\n   unique.  See IANA Considerations (Section 14.2) for details on\n\
    \   possible address encodings.\n   An Instance ID can be carried in a LISP-encapsulated\
    \ packet.  An ITR\n   that prepends a LISP header will copy a 24-bit value used\
    \ by the LISP\n   router to uniquely identify the address space.  The value is\
    \ copied\n   to the 'Instance ID' field of the LISP header, and the I-bit is set\n\
    \   to 1.\n   When an ETR decapsulates a packet, the Instance ID from the LISP\n\
    \   header is used as a table identifier to locate the forwarding table\n   to\
    \ use for the inner destination EID lookup.\n   For example, an 802.1Q VLAN tag\
    \ or VPN identifier could be used as a\n   24-bit Instance ID.\n"
- title: 6.  EID-to-RLOC Mapping
  contents:
  - '6.  EID-to-RLOC Mapping

    '
- title: 6.1.  LISP IPv4 and IPv6 Control-Plane Packet Formats
  contents:
  - "6.1.  LISP IPv4 and IPv6 Control-Plane Packet Formats\n   The following UDP packet\
    \ formats are used by the LISP control plane.\n       0                   1  \
    \                 2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |Version|  IHL  |Type of Service|          Total Length         |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |         Identification        |Flags|      Fragment Offset    |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |\
    \  Time to Live | Protocol = 17 |         Header Checksum       |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |                    Source Routing Locator                     |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |                 Destination Routing Locator                   |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     / |\
    \           Source Port         |         Dest Port             |\n   UDP +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     \\ |           UDP Length          |        UDP Checksum           |\n \
    \      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   \
    \    |                                                               |\n     \
    \  |                         LISP Message                          |\n       |\
    \                                                               |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \        0                   1                   2                   3\n     \
    \   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |Version| Traffic Class |           Flow Label                  |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |         Payload Length        | Next Header=17|   Hop Limit   |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |\
    \                                                               |\n       +  \
    \                                                             +\n       |    \
    \                                                           |\n       +      \
    \               Source Routing Locator                    +\n       |        \
    \                                                       |\n       +          \
    \                                                     +\n       |            \
    \                                                   |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |                                                               |\n  \
    \     +                                                               +\n    \
    \   |                                                               |\n      \
    \ +                  Destination Routing Locator                  +\n       |\
    \                                                               |\n       +  \
    \                                                             +\n       |    \
    \                                                           |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     / |           Source Port         |         Dest Port             |\n  \
    \ UDP +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \ \\ |           UDP Length          |        UDP Checksum           |\n     \
    \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |\
    \                                                               |\n       |  \
    \                       LISP Message                          |\n       |    \
    \                                                           |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The LISP UDP-based messages are the Map-Request and Map-Reply\n   messages.\
    \  When a UDP Map-Request is sent, the UDP source port is\n   chosen by the sender\
    \ and the destination UDP port number is set to\n   4342.  When a UDP Map-Reply\
    \ is sent, the source UDP port number is\n   set to 4342 and the destination UDP\
    \ port number is copied from the\n   source port of either the Map-Request or\
    \ the invoking data packet.\n   Implementations MUST be prepared to accept packets\
    \ when either the\n   source port or destination UDP port is set to 4342 due to\
    \ NATs\n   changing port number values.\n   The 'UDP Length' field will reflect\
    \ the length of the UDP header and\n   the LISP Message payload.\n   The UDP checksum\
    \ is computed and set to non-zero for Map-Request,\n   Map-Reply, Map-Register,\
    \ and Encapsulated Control Message (ECM)\n   control messages.  It MUST be checked\
    \ on receipt, and if the checksum\n   fails, the packet MUST be dropped.\n   The\
    \ format of control messages includes the UDP header so the\n   checksum and length\
    \ fields can be used to protect and delimit message\n   boundaries.\n"
- title: 6.1.1.  LISP Packet Type Allocations
  contents:
  - "6.1.1.  LISP Packet Type Allocations\n   This section will be the authoritative\
    \ source for allocating LISP\n   Type values and for defining LISP control message\
    \ formats.  Current\n   allocations are:\n       Reserved:                   \
    \       0    b'0000'\n       LISP Map-Request:                  1    b'0001'\n\
    \       LISP Map-Reply:                    2    b'0010'\n       LISP Map-Register:\
    \                 3    b'0011'\n       LISP Map-Notify:                   4  \
    \  b'0100'\n       LISP Encapsulated Control Message: 8    b'1000'\n"
- title: 6.1.2.  Map-Request Message Format
  contents:
  - "6.1.2.  Map-Request Message Format\n        0                   1           \
    \        2                   3\n        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |Type=1 |A|M|P|S|p|s|    Reserved     |   IRC   | Record Count  |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |                         Nonce . . .                           |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |\
    \                         . . . Nonce                           |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |         Source-EID-AFI        |   Source EID Address  ...     |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |         ITR-RLOC-AFI 1        |    ITR-RLOC Address 1  ...    |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |\
    \                              ...                              |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |         ITR-RLOC-AFI n        |    ITR-RLOC Address n  ...    |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \ / |   Reserved    | EID mask-len  |        EID-Prefix-AFI         |\n   Rec\
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     \\ |\
    \                       EID-Prefix  ...                         |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |                   Map-Reply Record  ...                       |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Packet\
    \ field descriptions:\n   Type:   1 (Map-Request)\n   A: This is an authoritative\
    \ bit, which is set to 0 for UDP-based\n      Map-Requests sent by an ITR.  It\
    \ is set to 1 when an ITR wants the\n      destination site to return the Map-Reply\
    \ rather than the mapping\n      database system.\n   M: This is the map-data-present\
    \ bit.  When set, it indicates that a\n      Map-Reply Record segment is included\
    \ in the Map-Request.\n   P: This is the probe-bit, which indicates that a Map-Request\
    \ SHOULD\n      be treated as a Locator reachability probe.  The receiver SHOULD\n\
    \      respond with a Map-Reply with the probe-bit set, indicating that\n    \
    \  the Map-Reply is a Locator reachability probe reply, with the\n      nonce\
    \ copied from the Map-Request.  See Section 6.3.2 for more\n      details.\n \
    \  S: This is the Solicit-Map-Request (SMR) bit.  See Section 6.6.2 for\n    \
    \  details.\n   p: This is the PITR bit.  This bit is set to 1 when a PITR sends\
    \ a\n      Map-Request.\n   s: This is the SMR-invoked bit.  This bit is set to\
    \ 1 when an xTR is\n      sending a Map-Request in response to a received SMR-based\n\
    \      Map-Request.\n   Reserved:  This field MUST be set to 0 on transmit and\
    \ MUST be\n      ignored on receipt.\n   IRC:  This 5-bit field is the ITR-RLOC\
    \ Count, which encodes the\n      additional number of ('ITR-RLOC-AFI', 'ITR-RLOC\
    \ Address') fields\n      present in this message.  At least one (ITR-RLOC-AFI,\n\
    \      ITR-RLOC-Address) pair MUST be encoded.  Multiple 'ITR-RLOC\n      Address'\
    \ fields are used, so a Map-Replier can select which\n      destination address\
    \ to use for a Map-Reply.  The IRC value ranges\n      from 0 to 31.  For a value\
    \ of 0, there is 1 ITR-RLOC address\n      encoded; for a value of 1, there are\
    \ 2 ITR-RLOC addresses encoded,\n      and so on up to 31, which encodes a total\
    \ of 32 ITR-RLOC\n      addresses.\n   Record Count:  This is the number of records\
    \ in this Map-Request\n      message.  A record is comprised of the portion of\
    \ the packet that\n      is labeled 'Rec' above and occurs the number of times\
    \ equal to\n      Record Count.  For this version of the protocol, a receiver\
    \ MUST\n      accept and process Map-Requests that contain one or more records,\n\
    \      but a sender MUST only send Map-Requests containing one record.\n     \
    \ Support for requesting multiple EIDs in a single Map-Request\n      message\
    \ will be specified in a future version of the protocol.\n   Nonce:  This is an\
    \ 8-octet random value created by the sender of the\n      Map-Request.  This\
    \ nonce will be returned in the Map-Reply.  The\n      security of the LISP mapping\
    \ protocol critically depends on the\n      strength of the nonce in the Map-Request\
    \ message.  The nonce\n      SHOULD be generated by a properly seeded pseudo-random\
    \ (or strong\n      random) source.  See [RFC4086] for advice on generating security-\n\
    \      sensitive random data.\n   Source-EID-AFI:  This is the address family\
    \ of the 'Source EID\n      Address' field.\n   Source EID Address:  This is the\
    \ EID of the source host that\n      originated the packet that caused the Map-Request.\
    \  When\n      Map-Requests are used for refreshing a Map-Cache entry or for\n\
    \      RLOC-Probing, an AFI value 0 is used and this field is of zero\n      length.\n\
    \   ITR-RLOC-AFI:  This is the address family of the 'ITR-RLOC Address'\n    \
    \  field that follows this field.\n   ITR-RLOC Address:  This is used to give\
    \ the ETR the option of\n      selecting the destination address from any address\
    \ family for the\n      Map-Reply message.  This address MUST be a routable RLOC\
    \ address\n      of the sender of the Map-Request message.\n   EID mask-len: \
    \ This is the mask length for the EID-Prefix.\n   EID-Prefix-AFI:  This is the\
    \ address family of the EID-Prefix\n      according to [AFI].\n   EID-Prefix:\
    \  This prefix is 4 octets for an IPv4 address family and\n      16 octets for\
    \ an IPv6 address family.  When a Map-Request is sent\n      by an ITR because\
    \ a data packet is received for a destination\n      where there is no mapping\
    \ entry, the EID-Prefix is set to the\n      destination IP address of the data\
    \ packet, and the 'EID mask-len'\n      is set to 32 or 128 for IPv4 or IPv6,\
    \ respectively.  When an xTR\n      wants to query a site about the status of\
    \ a mapping it already has\n      cached, the EID-Prefix used in the Map-Request\
    \ has the same mask\n      length as the EID-Prefix returned from the site when\
    \ it sent a\n      Map-Reply message.\n   Map-Reply Record:  When the M-bit is\
    \ set, this field is the size of a\n      single \"Record\" in the Map-Reply format.\
    \  This Map-Reply record\n      contains the EID-to-RLOC mapping entry associated\
    \ with the Source\n      EID.  This allows the ETR that will receive this Map-Request\
    \ to\n      cache the data if it chooses to do so.\n"
- title: 6.1.3.  EID-to-RLOC UDP Map-Request Message
  contents:
  - "6.1.3.  EID-to-RLOC UDP Map-Request Message\n   A Map-Request is sent from an\
    \ ITR when it needs a mapping for an EID,\n   wants to test an RLOC for reachability,\
    \ or wants to refresh a mapping\n   before TTL expiration.  For the initial case,\
    \ the destination IP\n   address used for the Map-Request is the data packet's\
    \ destination\n   address (i.e., the destination EID) that had a mapping cache\
    \ lookup\n   failure.  For the latter two cases, the destination IP address used\n\
    \   for the Map-Request is one of the RLOC addresses from the Locator-Set\n  \
    \ of the Map-Cache entry.  The source address is either an IPv4 or IPv6\n   RLOC\
    \ address, depending on whether the Map-Request is using an IPv4\n   or IPv6 header,\
    \ respectively.  In all cases, the UDP source port\n   number for the Map-Request\
    \ message is a 16-bit value selected by the\n   ITR/PITR, and the UDP destination\
    \ port number is set to the well-\n   known destination port number 4342.  A successful\
    \ Map-Reply, which is\n   one that has a nonce that matches an outstanding Map-Request\
    \ nonce,\n   will update the cached set of RLOCs associated with the EID-Prefix\n\
    \   range.\n   One or more Map-Request ('ITR-RLOC-AFI', 'ITR-RLOC-Address') fields\n\
    \   MUST be filled in by the ITR.  The number of fields (minus 1) encoded\n  \
    \ MUST be placed in the 'IRC' field.  The ITR MAY include all locally\n   configured\
    \ Locators in this list or just provide one locator address\n   from each address\
    \ family it supports.  If the ITR erroneously\n   provides no ITR-RLOC addresses,\
    \ the Map-Replier MUST drop the\n   Map-Request.\n   Map-Requests can also be\
    \ LISP encapsulated using UDP destination\n   port 4342 with a LISP Type value\
    \ set to \"Encapsulated Control\n   Message\", when sent from an ITR to a Map-Resolver.\
    \  Likewise,\n   Map-Requests are LISP encapsulated the same way from a Map-Server\
    \ to\n   an ETR.  Details on Encapsulated Map-Requests and Map-Resolvers can\n\
    \   be found in [RFC6833].\n   Map-Requests MUST be rate-limited.  It is RECOMMENDED\
    \ that a\n   Map-Request for the same EID-Prefix be sent no more than once per\n\
    \   second.\n   An ITR that is configured with mapping database information (i.e.,\
    \ it\n   is also an ETR) MAY optionally include those mappings in a\n   Map-Request.\
    \  When an ETR configured to accept and verify such\n   \"piggybacked\" mapping\
    \ data receives such a Map-Request and it does\n   not have this mapping in the\
    \ map-cache, it MAY originate a \"verifying\n   Map-Request\", addressed to the\
    \ map-requesting ITR and the ETR MAY add\n   a Map-Cache entry.  If the ETR has\
    \ a Map-Cache entry that matches the\n   \"piggybacked\" EID and the RLOC is in\
    \ the Locator-Set for the entry,\n   then it may send the \"verifying Map-Request\"\
    \ directly to the\n   originating Map-Request source.  If the RLOC is not in the\n\
    \   Locator-Set, then the ETR MUST send the \"verifying Map-Request\" to\n   the\
    \ \"piggybacked\" EID.  Doing this forces the \"verifying Map-Request\"\n   to\
    \ go through the mapping database system to reach the authoritative\n   source\
    \ of information about that EID, guarding against RLOC-spoofing\n   in the \"\
    piggybacked\" mapping data.\n"
- title: 6.1.4.  Map-Reply Message Format
  contents:
  - "6.1.4.  Map-Reply Message Format\n        0                   1             \
    \      2                   3\n        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |Type=2 |P|E|S|          Reserved               | Record Count  |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |                         Nonce . . .                           |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |\
    \                         . . . Nonce                           |\n   +-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   |                          Record TTL                           |\n  \
    \ |   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   R\
    \   | Locator Count | EID mask-len  | ACT |A|      Reserved         |\n   e  \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   c   |\
    \ Rsvd  |  Map-Version Number   |       EID-Prefix-AFI          |\n   o   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   r   |                          EID-Prefix                           |\n  \
    \ d   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |\
    \  /|    Priority   |    Weight     |  M Priority   |   M Weight    |\n   | L\
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   | o |\
    \        Unused Flags     |L|p|R|           Loc-AFI             |\n   | c +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  \\|                             Locator                           |\n \
    \  +-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Packet\
    \ field descriptions:\n   Type:   2 (Map-Reply)\n   P: This is the probe-bit,\
    \ which indicates that the Map-Reply is in\n      response to a Locator reachability\
    \ probe Map-Request.  The 'Nonce'\n      field MUST contain a copy of the nonce\
    \ value from the original\n      Map-Request.  See Section 6.3.2 for more details.\n\
    \   E: This bit indicates that the ETR that sends this Map-Reply message\n   \
    \   is advertising that the site is enabled for the Echo-Nonce Locator\n     \
    \ reachability algorithm.  See Section 6.3.1 for more details.\n   S: This is\
    \ the Security bit.  When set to 1, the following\n      authentication information\
    \ will be appended to the end of the\n      Map-Reply.  The detailed format of\
    \ the Authentication Data Content\n      is for further study.\n     0       \
    \            1                   2                   3\n     0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |    AD Type    |       Authentication Data Content . . .       |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Reserved:  This field MUST be set to 0 on transmit and MUST be\n      ignored\
    \ on receipt.\n   Record Count:  This is the number of records in this reply message.\n\
    \      A record is comprised of that portion of the packet labeled\n      'Record'\
    \ above and occurs the number of times equal to Record\n      Count.\n   Nonce:\
    \  This is a 24-bit value set in a Data-Probe packet, or a\n      64-bit value\
    \ from the Map-Request is echoed in this 'Nonce' field\n      of the Map-Reply.\
    \  When a 24-bit value is supplied, it resides in\n      the low-order 64 bits\
    \ of the 'Nonce' field.\n   Record TTL:  This is the time in minutes the recipient\
    \ of the\n      Map-Reply will store the mapping.  If the TTL is 0, the entry\n\
    \      SHOULD be removed from the cache immediately.  If the value is\n      0xffffffff,\
    \ the recipient can decide locally how long to store the\n      mapping.\n   Locator\
    \ Count:  This is the number of Locator entries.  A Locator\n      entry comprises\
    \ what is labeled above as 'Loc'.  The Locator count\n      can be 0, indicating\
    \ that there are no Locators for the\n      EID-Prefix.\n   EID mask-len:  This\
    \ is the mask length for the EID-Prefix.\n   ACT:  This 3-bit field describes\
    \ Negative Map-Reply actions.  In any\n      other message type, these bits are\
    \ set to 0 and ignored on\n      receipt.  These bits are used only when the 'Locator\
    \ Count' field\n      is set to 0.  The action bits are encoded only in Map-Reply\n\
    \      messages.  The actions defined are used by an ITR or PITR when a\n    \
    \  destination EID matches a negative Map-Cache entry.  Unassigned\n      values\
    \ should cause a Map-Cache entry to be created, and when\n      packets match\
    \ this negative cache entry, they will be dropped.\n      The current assigned\
    \ values are:\n      (0) No-Action:  The map-cache is kept alive, and no packet\n\
    \                      encapsulation occurs.\n      (1) Natively-Forward:  The\
    \ packet is not encapsulated or dropped\n                             but natively\
    \ forwarded.\n      (2) Send-Map-Request:  The packet invokes sending a Map-Request.\n\
    \      (3) Drop:  A packet that matches this map-cache entry is dropped.\n   \
    \              An ICMP Destination Unreachable message SHOULD be sent.\n   A:\
    \ The Authoritative bit, when sent, is always set to 1 by an ETR.\n      When\
    \ a Map-Server is proxy Map-Replying [RFC6833] for a LISP site,\n      the Authoritative\
    \ bit is set to 0.  This indicates to requesting\n      ITRs that the Map-Reply\
    \ was not originated by a LISP node managed\n      at the site that owns the EID-Prefix.\n\
    \   Map-Version Number:  When this 12-bit value is non-zero, the\n      Map-Reply\
    \ sender is informing the ITR what the version number is\n      for the EID record\
    \ contained in the Map-Reply.  The ETR can\n      allocate this number internally\
    \ but MUST coordinate this value\n      with other ETRs for the site.  When this\
    \ value is 0, there is no\n      versioning information conveyed.  The Map-Version\
    \ Number can be\n      included in Map-Request and Map-Register messages.  See\n\
    \      Section 6.6.3 for more details.\n   EID-Prefix-AFI:  Address family of\
    \ the EID-Prefix according to [AFI].\n   EID-Prefix:  This prefix is 4 octets\
    \ for an IPv4 address family and\n      16 octets for an IPv6 address family.\n\
    \   Priority:  Each RLOC is assigned a unicast Priority.  Lower values\n     \
    \ are more preferable.  When multiple RLOCs have the same Priority,\n      they\
    \ MAY be used in a load-split fashion.  A value of 255 means\n      the RLOC MUST\
    \ NOT be used for unicast forwarding.\n   Weight:  When priorities are the same\
    \ for multiple RLOCs, the Weight\n      indicates how to balance unicast traffic\
    \ between them.  Weight is\n      encoded as a relative weight of total unicast\
    \ packets that match\n      the mapping entry.  For example, if there are 4 Locators\
    \ in a\n      Locator-Set, where the Weights assigned are 30, 20, 20, and 10,\n\
    \      the first Locator will get 37.5% of the traffic, the 2nd and 3rd\n    \
    \  Locators will get 25% of the traffic, and the 4th Locator will get\n      12.5%\
    \ of the traffic.  If all Weights for a Locator-Set are equal,\n      the receiver\
    \ of the Map-Reply will decide how to load-split the\n      traffic.  See Section\
    \ 6.5 for a suggested hash algorithm to\n      distribute the load across Locators\
    \ with the same Priority and\n      equal Weight values.\n   M Priority:  Each\
    \ RLOC is assigned a multicast Priority used by an\n      ETR in a receiver multicast\
    \ site to select an ITR in a source\n      multicast site for building multicast\
    \ distribution trees.  A value\n      of 255 means the RLOC MUST NOT be used for\
    \ joining a multicast\n      distribution tree.  For more details, see [RFC6831].\n\
    \   M Weight:  When priorities are the same for multiple RLOCs, the\n      Weight\
    \ indicates how to balance building multicast distribution\n      trees across\
    \ multiple ITRs.  The Weight is encoded as a relative\n      weight (similar to\
    \ the unicast Weights) of the total number of\n      trees built to the source\
    \ site identified by the EID-Prefix.  If\n      all Weights for a Locator-Set\
    \ are equal, the receiver of the\n      Map-Reply will decide how to distribute\
    \ multicast state across\n      ITRs.  For more details, see [RFC6831].\n   Unused\
    \ Flags:  These are set to 0 when sending and ignored on\n      receipt.\n   L:\
    \ When this bit is set, the Locator is flagged as a local Locator to\n      the\
    \ ETR that is sending the Map-Reply.  When a Map-Server is doing\n      proxy\
    \ Map-Replying [RFC6833] for a LISP site, the L-bit is set to\n      0 for all\
    \ Locators in this Locator-Set.\n   p: When this bit is set, an ETR informs the\
    \ RLOC-Probing ITR that the\n      locator address for which this bit is set is\
    \ the one being\n      RLOC-probed and MAY be different from the source address\
    \ of the\n      Map-Reply.  An ITR that RLOC-probes a particular Locator MUST\
    \ use\n      this Locator for retrieving the data structure used to store the\n\
    \      fact that the Locator is reachable.  The p-bit is set for a single\n  \
    \    Locator in the same Locator-Set.  If an implementation sets more\n      than\
    \ one p-bit erroneously, the receiver of the Map-Reply MUST\n      select the\
    \ first Locator.  The p-bit MUST NOT be set for\n      Locator-Set records sent\
    \ in Map-Request and Map-Register messages.\n   R: This is set when the sender\
    \ of a Map-Reply has a route to the\n      Locator in the Locator data record.\
    \  This receiver may find this\n      useful to know if the Locator is up but\
    \ not necessarily reachable\n      from the receiver's point of view.  See also\
    \ Section 6.4 for\n      another way the R-bit may be used.\n   Locator:  This\
    \ is an IPv4 or IPv6 address (as encoded by the\n      'Loc-AFI' field) assigned\
    \ to an ETR.  Note that the destination\n      RLOC address MAY be an anycast\
    \ address.  A source RLOC can be an\n      anycast address as well.  The source\
    \ or destination RLOC MUST NOT\n      be the broadcast address (255.255.255.255\
    \ or any subnet broadcast\n      address known to the router) and MUST NOT be\
    \ a link-local\n      multicast address.  The source RLOC MUST NOT be a multicast\n\
    \      address.  The destination RLOC SHOULD be a multicast address if it\n  \
    \    is being mapped from a multicast destination EID.\n"
- title: 6.1.5.  EID-to-RLOC UDP Map-Reply Message
  contents:
  - "6.1.5.  EID-to-RLOC UDP Map-Reply Message\n   A Map-Reply returns an EID-Prefix\
    \ with a prefix length that is less\n   than or equal to the EID being requested.\
    \  The EID being requested is\n   either from the destination field of an IP header\
    \ of a Data-Probe or\n   the EID record of a Map-Request.  The RLOCs in the Map-Reply\
    \ are\n   globally routable IP addresses of all ETRs for the LISP site.  Each\n\
    \   RLOC conveys status reachability but does not convey path\n   reachability\
    \ from a requester's perspective.  Separate testing of\n   path reachability is\
    \ required.  See Section 6.3 for details.\n   Note that a Map-Reply may contain\
    \ different EID-Prefix granularity\n   (prefix + length) than the Map-Request\
    \ that triggers it.  This might\n   occur if a Map-Request were for a prefix that\
    \ had been returned by an\n   earlier Map-Reply.  In such a case, the requester\
    \ updates its cache\n   with the new prefix information and granularity.  For\
    \ example, a\n   requester with two cached EID-Prefixes that are covered by a\n\
    \   Map-Reply containing one less-specific prefix replaces the entry with\n  \
    \ the less-specific EID-Prefix.  Note that the reverse, replacement of\n   one\
    \ less-specific prefix with multiple more-specific prefixes, can\n   also occur,\
    \ not by removing the less-specific prefix but rather by\n   adding the more-specific\
    \ prefixes that, during a lookup, will\n   override the less-specific prefix.\n\
    \   When an ETR is configured with overlapping EID-Prefixes, a\n   Map-Request\
    \ with an EID that best matches any EID-Prefix MUST be\n   returned in a single\
    \ Map-Reply message.  For instance, if an ETR had\n   database mapping entries\
    \ for EID-Prefixes:\n     10.0.0.0/8\n     10.1.0.0/16\n     10.1.1.0/24\n   \
    \  10.1.2.0/24\n   A Map-Request for EID 10.1.1.1 would cause a Map-Reply with\
    \ a record\n   count of 1 to be returned with a mapping record EID-Prefix of\n\
    \   10.1.1.0/24.\n   A Map-Request for EID 10.1.5.5 would cause a Map-Reply with\
    \ a record\n   count of 3 to be returned with mapping records for EID-Prefixes\n\
    \   10.1.0.0/16, 10.1.1.0/24, and 10.1.2.0/24.\n   Note that not all overlapping\
    \ EID-Prefixes need to be returned but\n   only the more-specific entries (note\
    \ that in the second example above\n   10.0.0.0/8 was not returned for requesting\
    \ EID 10.1.5.5) for the\n   matching EID-Prefix of the requesting EID.  When more\
    \ than one\n   EID-Prefix is returned, all SHOULD use the same Time to Live value\
    \ so\n   they can all time out at the same time.  When a more-specific\n   EID-Prefix\
    \ is received later, its Time to Live value in the Map-Reply\n   record can be\
    \ stored even when other less-specific entries exist.\n   When a less-specific\
    \ EID-Prefix is received later, its map-cache\n   expiration time SHOULD be set\
    \ to the minimum expiration time of any\n   more-specific EID-Prefix in the map-cache.\
    \  This is done so the\n   integrity of the EID-Prefix set is wholly maintained\
    \ and so no more-\n   specific entries are removed from the map-cache while keeping\
    \ less-\n   specific entries.\n   Map-Replies SHOULD be sent for an EID-Prefix\
    \ no more often than once\n   per second to the same requesting router.  For scalability,\
    \ it is\n   expected that aggregation of EID addresses into EID-Prefixes will\n\
    \   allow one Map-Reply to satisfy a mapping for the EID addresses in the\n  \
    \ prefix range, thereby reducing the number of Map-Request messages.\n   Map-Reply\
    \ records can have an empty Locator-Set.  A Negative\n   Map-Reply is a Map-Reply\
    \ with an empty Locator-Set.  Negative\n   Map-Replies convey special actions\
    \ by the sender to the ITR or PITR\n   that have solicited the Map-Reply.  There\
    \ are two primary\n   applications for Negative Map-Replies.  The first is for\
    \ a\n   Map-Resolver to instruct an ITR or PITR when a destination is for a\n\
    \   LISP site versus a non-LISP site, and the other is to source quench\n   Map-Requests\
    \ that are sent for non-allocated EIDs.\n   For each Map-Reply record, the list\
    \ of Locators in a Locator-Set MUST\n   appear in the same order for each ETR\
    \ that originates a Map-Reply\n   message.  The Locator-Set MUST be sorted in\
    \ order of ascending IP\n   address where an IPv4 locator address is considered\
    \ numerically 'less\n   than' an IPv6 locator address.\n   When sending a Map-Reply\
    \ message, the destination address is copied\n   from one of the 'ITR-RLOC' fields\
    \ from the Map-Request.  The ETR can\n   choose a locator address from one of\
    \ the address families it\n   supports.  For Data-Probes, the destination address\
    \ of the Map-Reply\n   is copied from the source address of the Data-Probe message\
    \ that is\n   invoking the reply.  The source address of the Map-Reply is one\
    \ of\n   the local IP addresses chosen to allow Unicast Reverse Path\n   Forwarding\
    \ (uRPF) checks to succeed in the upstream service provider.\n   The destination\
    \ port of a Map-Reply message is copied from the source\n   port of the Map-Request\
    \ or Data-Probe, and the source port of the\n   Map-Reply message is set to the\
    \ well-known UDP port 4342.\n"
- title: 6.1.5.1.  Traffic Redirection with Coarse EID-Prefixes
  contents:
  - "6.1.5.1.  Traffic Redirection with Coarse EID-Prefixes\n   When an ETR is misconfigured\
    \ or compromised, it could return coarse\n   EID-Prefixes in Map-Reply messages\
    \ it sends.  The EID-Prefix could\n   cover EID-Prefixes that are allocated to\
    \ other sites, redirecting\n   their traffic to the Locators of the compromised\
    \ site.\n   To solve this problem, there are two basic solutions that could be\n\
    \   used.  The first is to have Map-Servers proxy Map-Reply on behalf of\n   ETRs\
    \ so their registered EID-Prefixes are the ones returned in\n   Map-Replies. \
    \ Since the interaction between an ETR and Map-Server is\n   secured with shared\
    \ keys, it is easier for an ETR to detect\n   misbehavior.  The second solution\
    \ is to have ITRs and PITRs cache\n   EID-Prefixes with mask lengths that are\
    \ greater than or equal to a\n   configured prefix length.  This limits the damage\
    \ to a specific width\n   of any EID-Prefix advertised but needs to be coordinated\
    \ with the\n   allocation of site prefixes.  These solutions can be used\n   independently\
    \ or at the same time.\n   At the time of this writing, other approaches are being\
    \ considered\n   and researched.\n"
- title: 6.1.6.  Map-Register Message Format
  contents:
  - "6.1.6.  Map-Register Message Format\n   The usage details of the Map-Register\
    \ message can be found in\n   specification [RFC6833].  This section solely defines\
    \ the message\n   format.\n   The message is sent in UDP with a destination UDP\
    \ port of 4342 and a\n   randomly selected UDP source port number.\n   The Map-Register\
    \ message format is:\n        0                   1                   2      \
    \             3\n        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |Type=3 |P|            Reserved               |M| Record Count  |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |                         Nonce . . .                           |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |\
    \                         . . . Nonce                           |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |            Key ID             |  Authentication Data Length   |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   ~                     Authentication Data                       ~\n   +->\
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |   |\
    \                          Record TTL                           |\n   |   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   R   | Locator Count | EID mask-len  | ACT |A|      Reserved         |\n  \
    \ e   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   c\
    \   | Rsvd  |  Map-Version Number   |        EID-Prefix-AFI         |\n   o  \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   r   |\
    \                          EID-Prefix                           |\n   d   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  /|    Priority   |    Weight     |  M Priority   |   M Weight    |\n  \
    \ | L +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |\
    \ o |        Unused Flags     |L|p|R|           Loc-AFI             |\n   | c\
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |  \\\
    |                             Locator                           |\n   +-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Packet field descriptions:\n   Type:   3 (Map-Register)\n   P: This is the\
    \ proxy Map-Reply bit.  When set to 1, an ETR sends a\n      Map-Register message\
    \ requesting the Map-Server to proxy a\n      Map-Reply.  The Map-Server will\
    \ send non-authoritative Map-Replies\n      on behalf of the ETR.  Details on\
    \ this usage can be found in\n      [RFC6833].\n   Reserved:  This field MUST\
    \ be set to 0 on transmit and MUST be\n      ignored on receipt.\n   M: This is\
    \ the want-map-notify bit.  When set to 1, an ETR is\n      requesting a Map-Notify\
    \ message to be returned in response to\n      sending a Map-Register message.\
    \  The Map-Notify message sent by a\n      Map-Server is used to acknowledge receipt\
    \ of a Map-Register\n      message.\n   Record Count:  This is the number of records\
    \ in this Map-Register\n      message.  A record is comprised of that portion\
    \ of the packet\n      labeled 'Record' above and occurs the number of times equal\
    \ to\n      Record Count.\n   Nonce:  This 8-octet 'Nonce' field is set to 0 in\
    \ Map-Register\n      messages.  Since the Map-Register message is authenticated,\
    \ the\n      'Nonce' field is not currently used for any security function but\n\
    \      may be in the future as part of an anti-replay solution.\n   Key ID:  This\
    \ is a configured ID to find the configured Message\n      Authentication Code\
    \ (MAC) algorithm and key value used for the\n      authentication function. \
    \ See Section 14.4 for codepoint\n      assignments.\n   Authentication Data Length:\
    \  This is the length in octets of the\n      'Authentication Data' field that\
    \ follows this field.  The length\n      of the 'Authentication Data' field is\
    \ dependent on the MAC\n      algorithm used.  The length field allows a device\
    \ that doesn't\n      know the MAC algorithm to correctly parse the packet.\n\
    \   Authentication Data:  This is the message digest used from the output\n  \
    \    of the MAC algorithm.  The entire Map-Register payload is\n      authenticated\
    \ with this field preset to 0.  After the MAC is\n      computed, it is placed\
    \ in this field.  Implementations of this\n      specification MUST include support\
    \ for HMAC-SHA-1-96 [RFC2404],\n      and support for HMAC-SHA-256-128 [RFC4868]\
    \ is RECOMMENDED.\n   The definition of the rest of the Map-Register can be found\
    \ in\n   Section 6.1.4.\n"
- title: 6.1.7.  Map-Notify Message Format
  contents:
  - "6.1.7.  Map-Notify Message Format\n   The usage details of the Map-Notify message\
    \ can be found in\n   specification [RFC6833].  This section solely defines the\
    \ message\n   format.\n   The message is sent inside a UDP packet with source\
    \ and destination\n   UDP ports equal to 4342.\n   The Map-Notify message format\
    \ is:\n        0                   1                   2                   3\n\
    \        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   \
    \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     \
    \  |Type=4 |              Reserved                 | Record Count  |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |                         Nonce . . .                           |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |                         . . . Nonce                           |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |\
    \            Key ID             |  Authentication Data Length   |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       ~                     Authentication Data                       ~\n  \
    \ +-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |\
    \   |                          Record TTL                           |\n   |  \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   R   |\
    \ Locator Count | EID mask-len  | ACT |A|      Reserved         |\n   e   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   c   | Rsvd  |  Map-Version Number   |         EID-Prefix-AFI        |\n  \
    \ o   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   r\
    \   |                          EID-Prefix                           |\n   d  \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |  /|\
    \    Priority   |    Weight     |  M Priority   |   M Weight    |\n   | L +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | o |        Unused Flags     |L|p|R|           Loc-AFI             |\n  \
    \ | c +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |\
    \  \\|                             Locator                           |\n   +->\
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Packet\
    \ field descriptions:\n   Type:   4 (Map-Notify)\n   The Map-Notify message has\
    \ the same contents as a Map-Register\n   message.  See the Map-Register section\
    \ for field descriptions.\n"
- title: 6.1.8.  Encapsulated Control Message Format
  contents:
  - "6.1.8.  Encapsulated Control Message Format\n   An Encapsulated Control Message\
    \ (ECM) is used to encapsulate control\n   packets sent between xTRs and the mapping\
    \ database system described\n   in [RFC6833].\n        0                   1 \
    \                  2                   3\n        0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     / |                       IPv4 or IPv6 Header                     |\n  \
    \ OH  |                      (uses RLOC addresses)                    |\n    \
    \ \\ |                                                               |\n     \
    \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     / |\
    \       Source Port = xxxx      |       Dest Port = 4342        |\n   UDP +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     \\ |           UDP Length          |        UDP Checksum           |\n \
    \      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   LH\
    \  |Type=8 |S|                  Reserved                           |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     / |                       IPv4 or IPv6 Header                     |\n  \
    \ IH  |                  (uses RLOC or EID addresses)                 |\n    \
    \ \\ |                                                               |\n     \
    \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     / |\
    \       Source Port = xxxx      |       Dest Port = yyyy        |\n   UDP +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     \\ |           UDP Length          |        UDP Checksum           |\n \
    \      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   LCM\
    \ |                      LISP Control Message                     |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Packet header descriptions:\n   OH:   The outer IPv4 or IPv6 header, which\
    \ uses RLOC addresses in the\n         source and destination header address fields.\n\
    \   UDP:  The outer UDP header with destination port 4342.  The source\n     \
    \    port is randomly allocated.  The checksum field MUST be\n         non-zero.\n\
    \   LH:   Type 8 is defined to be a \"LISP Encapsulated Control Message\",\n \
    \        and what follows is either an IPv4 or IPv6 header as encoded by\n   \
    \      the first 4 bits after the 'Reserved' field.\n   S:    This is the Security\
    \ bit.  When set to 1, the field following\n         the 'Reserved' field will\
    \ have the following format.  The\n         detailed format of the Authentication\
    \ Data Content is for\n         further study.\n     0                   1   \
    \                2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |    AD Type    |       Authentication Data Content . . .       |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   IH:   The inner IPv4 or IPv6 header, which can use either RLOC or EID\n  \
    \       addresses in the header address fields.  When a Map-Request is\n     \
    \    encapsulated in this packet format, the destination address in\n        \
    \ this header is an EID.\n   UDP:  The inner UDP header, where the port assignments\
    \ depend on the\n         control packet being encapsulated.  When the control\
    \ packet is\n         a Map-Request or Map-Register, the source port is selected\
    \ by\n         the ITR/PITR and the destination port is 4342.  When the\n    \
    \     control packet is a Map-Reply, the source port is 4342 and the\n       \
    \  destination port is assigned from the source port of the\n         invoking\
    \ Map-Request.  Port number 4341 MUST NOT be assigned to\n         either port.\
    \  The checksum field MUST be non-zero.\n   LCM:  The format is one of the control\
    \ message formats described in\n         this section.  At this time, only Map-Request\
    \ messages are\n         allowed to be encapsulated.  In the future, PIM Join/Prune\n\
    \         messages [RFC6831] might be allowed.  Encapsulating other types\n  \
    \       of LISP control messages is for further study.  When\n         Map-Requests\
    \ are sent for RLOC-Probing purposes (i.e., the\n         probe-bit is set), they\
    \ MUST NOT be sent inside Encapsulated\n         Control Messages.\n"
- title: 6.2.  Routing Locator Selection
  contents:
  - "6.2.  Routing Locator Selection\n   Both the client-side and server-side may\
    \ need control over the\n   selection of RLOCs for conversations between them.\
    \  This control is\n   achieved by manipulating the 'Priority' and 'Weight' fields\
    \ in\n   EID-to-RLOC Map-Reply messages.  Alternatively, RLOC information MAY\n\
    \   be gleaned from received tunneled packets or EID-to-RLOC Map-Request\n   messages.\n\
    \   The following are different scenarios for choosing RLOCs and the\n   controls\
    \ that are available:\n   o  The server-side returns one RLOC.  The client-side\
    \ can only use\n      one RLOC.  The server-side has complete control of the selection.\n\
    \   o  The server-side returns a list of RLOCs where a subset of the list\n  \
    \    has the same best Priority.  The client can only use the subset\n      list\
    \ according to the weighting assigned by the server-side.  In\n      this case,\
    \ the server-side controls both the subset list and\n      load-splitting across\
    \ its members.  The client-side can use RLOCs\n      outside of the subset list\
    \ if it determines that the subset list\n      is unreachable (unless RLOCs are\
    \ set to a Priority of 255).  Some\n      sharing of control exists: the server-side\
    \ determines the\n      destination RLOC list and load distribution while the\
    \ client-side\n      has the option of using alternatives to this list if RLOCs\
    \ in the\n      list are unreachable.\n   o  The server-side sets a Weight of\
    \ 0 for the RLOC subset list.  In\n      this case, the client-side can choose\
    \ how the traffic load is\n      spread across the subset list.  Control is shared\
    \ by the server-\n      side determining the list and the client determining load\n\
    \      distribution.  Again, the client can use alternative RLOCs if the\n   \
    \   server-provided list of RLOCs is unreachable.\n   o  Either side (more likely\
    \ the server-side ETR) decides not to send\n      a Map-Request.  For example,\
    \ if the server-side ETR does not send\n      Map-Requests, it gleans RLOCs from\
    \ the client-side ITR, giving the\n      client-side ITR responsibility for bidirectional\
    \ RLOC reachability\n      and preferability.  Server-side ETR gleaning of the\
    \ client-side\n      ITR RLOC is done by caching the inner-header source EID and\
    \ the\n      outer-header source RLOC of received packets.  The client-side ITR\n\
    \      controls how traffic is returned and can alternate using an outer-\n  \
    \    header source RLOC, which then can be added to the list the\n      server-side\
    \ ETR uses to return traffic.  Since no Priority or\n      Weights are provided\
    \ using this method, the server-side ETR MUST\n      assume that each client-side\
    \ ITR RLOC uses the same best Priority\n      with a Weight of zero.  In addition,\
    \ since EID-Prefix encoding\n      cannot be conveyed in data packets, the EID-to-RLOC\
    \ Cache on\n      Tunnel Routers can grow to be very large.\n   o  A \"gleaned\"\
    \ Map-Cache entry, one learned from the source RLOC of a\n      received encapsulated\
    \ packet, is only stored and used for a few\n      seconds, pending verification.\
    \  Verification is performed by\n      sending a Map-Request to the source EID\
    \ (the inner-header IP\n      source address) of the received encapsulated packet.\
    \  A reply to\n      this \"verifying Map-Request\" is used to fully populate\
    \ the\n      Map-Cache entry for the \"gleaned\" EID and is stored and used for\n\
    \      the time indicated from the 'TTL' field of a received Map-Reply.\n    \
    \  When a verified Map-Cache entry is stored, data gleaning no longer\n      occurs\
    \ for subsequent packets that have a source EID that matches\n      the EID-Prefix\
    \ of the verified entry.\n   RLOCs that appear in EID-to-RLOC Map-Reply messages\
    \ are assumed to be\n   reachable when the R-bit for the Locator record is set\
    \ to 1.  When\n   the R-bit is set to 0, an ITR or PITR MUST NOT encapsulate to\
    \ the\n   RLOC.  Neither the information contained in a Map-Reply nor that\n \
    \  stored in the mapping database system provides reachability\n   information\
    \ for RLOCs.  Note that reachability is not part of the\n   mapping system and\
    \ is determined using one or more of the Routing\n   Locator reachability algorithms\
    \ described in the next section.\n"
- title: 6.3.  Routing Locator Reachability
  contents:
  - "6.3.  Routing Locator Reachability\n   Several mechanisms for determining RLOC\
    \ reachability are currently\n   defined:\n   1.  An ETR may examine the Locator-Status-Bits\
    \ in the LISP header of\n       an encapsulated data packet received from an ITR.\
    \  If the ETR is\n       also acting as an ITR and has traffic to return to the\
    \ original\n       ITR site, it can use this status information to help select\
    \ an\n       RLOC.\n   2.  An ITR may receive an ICMP Network Unreachable or Host\n\
    \       Unreachable message for an RLOC it is using.  This indicates that\n  \
    \     the RLOC is likely down.  Note that trusting ICMP messages may\n       not\
    \ be desirable, but neither is ignoring them completely.\n       Implementations\
    \ are encouraged to follow current best practices\n       in treating these conditions.\n\
    \   3.  An ITR that participates in the global routing system can\n       determine\
    \ that an RLOC is down if no BGP Routing Information Base\n       (RIB) route\
    \ exists that matches the RLOC IP address.\n   4.  An ITR may receive an ICMP\
    \ Port Unreachable message from a\n       destination host.  This occurs if an\
    \ ITR attempts to use\n       interworking [RFC6832] and LISP-encapsulated data\
    \ is sent to a\n       non-LISP-capable site.\n   5.  An ITR may receive a Map-Reply\
    \ from an ETR in response to a\n       previously sent Map-Request.  The RLOC\
    \ source of the Map-Reply is\n       likely up, since the ETR was able to send\
    \ the Map-Reply to the\n       ITR.\n   6.  When an ETR receives an encapsulated\
    \ packet from an ITR, the\n       source RLOC from the outer header of the packet\
    \ is likely up.\n   7.  An ITR/ETR pair can use the Locator reachability algorithms\n\
    \       described in this section, namely Echo-Noncing or RLOC-Probing.\n   When\
    \ determining Locator up/down reachability by examining the\n   Locator-Status-Bits\
    \ from the LISP-encapsulated data packet, an ETR\n   will receive up-to-date status\
    \ from an encapsulating ITR about\n   reachability for all ETRs at the site. \
    \ CE-based ITRs at the source\n   site can determine reachability relative to\
    \ each other using the site\n   IGP as follows:\n   o  Under normal circumstances,\
    \ each ITR will advertise a default\n      route into the site IGP.\n   o  If\
    \ an ITR fails or if the upstream link to its PE fails, its\n      default route\
    \ will either time out or be withdrawn.\n   Each ITR can thus observe the presence\
    \ or lack of a default route\n   originated by the others to determine the Locator-Status-Bits\
    \ it sets\n   for them.\n   RLOCs listed in a Map-Reply are numbered with ordinals\
    \ 0 to n-1.  The\n   Locator-Status-Bits in a LISP-encapsulated packet are numbered\
    \ from 0\n   to n-1 starting with the least significant bit.  For example, if\
    \ an\n   RLOC listed in the 3rd position of the Map-Reply goes down (ordinal\n\
    \   value 2), then all ITRs at the site will clear the 3rd least\n   significant\
    \ bit (xxxx x0xx) of the 'Locator-Status-Bits' field for\n   the packets they\
    \ encapsulate.\n   When an ETR decapsulates a packet, it will check for any change\
    \ in\n   the 'Locator-Status-Bits' field.  When a bit goes from 1 to 0, the\n\
    \   ETR, if acting also as an ITR, will refrain from encapsulating\n   packets\
    \ to an RLOC that is indicated as down.  It will only resume\n   using that RLOC\
    \ if the corresponding Locator-Status-Bit returns to a\n   value of 1.  Locator-Status-Bits\
    \ are associated with a Locator-Set\n   per EID-Prefix.  Therefore, when a Locator\
    \ becomes unreachable, the\n   Locator-Status-Bit that corresponds to that Locator's\
    \ position in the\n   list returned by the last Map-Reply will be set to zero\
    \ for that\n   particular EID-Prefix.\n   When ITRs at the site are not deployed\
    \ in CE routers, the IGP can\n   still be used to determine the reachability of\
    \ Locators, provided\n   they are injected into the IGP.  This is typically done\
    \ when a /32\n   address is configured on a loopback interface.\n   When ITRs\
    \ receive ICMP Network Unreachable or Host Unreachable\n   messages as a method\
    \ to determine unreachability, they will refrain\n   from using Locators that\
    \ are described in Locator lists of\n   Map-Replies.  However, using this approach\
    \ is unreliable because many\n   network operators turn off generation of ICMP\
    \ Destination Unreachable\n   messages.\n   If an ITR does receive an ICMP Network\
    \ Unreachable or Host\n   Unreachable message, it MAY originate its own ICMP Destination\n\
    \   Unreachable message destined for the host that originated the data\n   packet\
    \ the ITR encapsulated.\n   Also, BGP-enabled ITRs can unilaterally examine the\
    \ RIB to see if a\n   locator address from a Locator-Set in a mapping entry matches\
    \ a\n   prefix.  If it does not find one and BGP is running in the Default-\n\
    \   Free Zone (DFZ), it can decide to not use the Locator even though the\n  \
    \ Locator-Status-Bits indicate that the Locator is up.  In this case,\n   the\
    \ path from the ITR to the ETR that is assigned the Locator is not\n   available.\
    \  More details are in [LOC-ID-ARCH].\n   Optionally, an ITR can send a Map-Request\
    \ to a Locator, and if a\n   Map-Reply is returned, reachability of the Locator\
    \ has been\n   determined.  Obviously, sending such probes increases the number\
    \ of\n   control messages originated by Tunnel Routers for active flows, so\n\
    \   Locators are assumed to be reachable when they are advertised.\n   This assumption\
    \ does create a dependency: Locator unreachability is\n   detected by the receipt\
    \ of ICMP Host Unreachable messages.  When a\n   Locator has been determined to\
    \ be unreachable, it is not used for\n   active traffic; this is the same as if\
    \ it were listed in a Map-Reply\n   with Priority 255.\n   The ITR can test the\
    \ reachability of the unreachable Locator by\n   sending periodic Requests.  Both\
    \ Requests and Replies MUST be rate-\n   limited.  Locator reachability testing\
    \ is never done with data\n   packets, since that increases the risk of packet\
    \ loss for end-to-end\n   sessions.\n   When an ETR decapsulates a packet, it\
    \ knows that it is reachable from\n   the encapsulating ITR because that is how\
    \ the packet arrived.  In\n   most cases, the ETR can also reach the ITR but cannot\
    \ assume this to\n   be true, due to the possibility of path asymmetry.  In the\
    \ presence\n   of unidirectional traffic flow from an ITR to an ETR, the ITR SHOULD\n\
    \   NOT use the lack of return traffic as an indication that the ETR is\n   unreachable.\
    \  Instead, it MUST use an alternate mechanism to\n   determine reachability.\n"
- title: 6.3.1.  Echo Nonce Algorithm
  contents:
  - "6.3.1.  Echo Nonce Algorithm\n   When data flows bidirectionally between Locators\
    \ from different\n   sites, a data-plane mechanism called \"nonce echoing\" can\
    \ be used to\n   determine reachability between an ITR and ETR.  When an ITR wants\
    \ to\n   solicit a nonce echo, it sets the N- and E-bits and places a 24-bit\n\
    \   nonce [RFC4086] in the LISP header of the next encapsulated data\n   packet.\n\
    \   When this packet is received by the ETR, the encapsulated packet is\n   forwarded\
    \ as normal.  When the ETR next sends a data packet to the\n   ITR, it includes\
    \ the nonce received earlier with the N-bit set and\n   E-bit cleared.  The ITR\
    \ sees this \"echoed nonce\" and knows that the\n   path to and from the ETR is\
    \ up.\n   The ITR will set the E-bit and N-bit for every packet it sends while\n\
    \   in the echo-nonce-request state.  The time the ITR waits to process\n   the\
    \ echoed nonce before it determines the path is unreachable is\n   variable and\
    \ is a choice left for the implementation.\n   If the ITR is receiving packets\
    \ from the ETR but does not see the\n   nonce echoed while being in the echo-nonce-request\
    \ state, then the\n   path to the ETR is unreachable.  This decision may be overridden\
    \ by\n   other Locator reachability algorithms.  Once the ITR determines that\n\
    \   the path to the ETR is down, it can switch to another Locator for\n   that\
    \ EID-Prefix.\n   Note that \"ITR\" and \"ETR\" are relative terms here.  Both\
    \ devices MUST\n   be implementing both ITR and ETR functionality for the echo\
    \ nonce\n   mechanism to operate.\n   The ITR and ETR may both go into the echo-nonce-request\
    \ state at the\n   same time.  The number of packets sent or the time during which\
    \ echo\n   nonce requests are sent is an implementation-specific setting.\n  \
    \ However, when an ITR is in the echo-nonce-request state, it can echo\n   the\
    \ ETR's nonce in the next set of packets that it encapsulates and\n   subsequently\
    \ continue sending echo-nonce-request packets.\n   This mechanism does not completely\
    \ solve the forward path\n   reachability problem, as traffic may be unidirectional.\
    \  That is, the\n   ETR receiving traffic at a site may not be the same device\
    \ as an ITR\n   that transmits traffic from that site, or the site-to-site traffic\
    \ is\n   unidirectional so there is no ITR returning traffic.\n   The echo-nonce\
    \ algorithm is bilateral.  That is, if one side sets the\n   E-bit and the other\
    \ side is not enabled for echo-noncing, then the\n   echoing of the nonce does\
    \ not occur and the requesting side may\n   erroneously consider the Locator unreachable.\
    \  An ITR SHOULD only set\n   the E-bit in an encapsulated data packet when it\
    \ knows the ETR is\n   enabled for echo-noncing.  This is conveyed by the E-bit\
    \ in the\n   Map-Reply message.\n   Note that other Locator reachability mechanisms\
    \ are being researched\n   and can be used to compliment or even override the\
    \ echo nonce\n   algorithm.  See the next section for an example of control-plane\n\
    \   probing.\n"
- title: 6.3.2.  RLOC-Probing Algorithm
  contents:
  - "6.3.2.  RLOC-Probing Algorithm\n   RLOC-Probing is a method that an ITR or PITR\
    \ can use to determine the\n   reachability status of one or more Locators that\
    \ it has cached in a\n   Map-Cache entry.  The probe-bit of the Map-Request and\
    \ Map-Reply\n   messages is used for RLOC-Probing.\n   RLOC-Probing is done in\
    \ the control plane on a timer basis, where an\n   ITR or PITR will originate\
    \ a Map-Request destined to a locator\n   address from one of its own locator\
    \ addresses.  A Map-Request used as\n   an RLOC-probe is NOT encapsulated and\
    \ NOT sent to a Map-Server or to\n   the mapping database system as one would\
    \ when soliciting mapping\n   data.  The EID record encoded in the Map-Request\
    \ is the EID-Prefix of\n   the Map-Cache entry cached by the ITR or PITR.  The\
    \ ITR may include a\n   mapping data record for its own database mapping information\
    \ that\n   contains the local EID-Prefixes and RLOCs for its site.  RLOC-probes\n\
    \   are sent periodically using a jittered timer interval.\n   When an ETR receives\
    \ a Map-Request message with the probe-bit set, it\n   returns a Map-Reply with\
    \ the probe-bit set.  The source address of\n   the Map-Reply is set according\
    \ to the procedure described in\n   Section 6.1.5.  The Map-Reply SHOULD contain\
    \ mapping data for the\n   EID-Prefix contained in the Map-Request.  This provides\
    \ the\n   opportunity for the ITR or PITR that sent the RLOC-probe to get\n  \
    \ mapping updates if there were changes to the ETR's database mapping\n   entries.\n\
    \   There are advantages and disadvantages of RLOC-Probing.  The greatest\n  \
    \ benefit of RLOC-Probing is that it can handle many failure scenarios\n   allowing\
    \ the ITR to determine when the path to a specific Locator is\n   reachable or\
    \ has become unreachable, thus providing a robust\n   mechanism for switching\
    \ to using another Locator from the cached\n   Locator.  RLOC-Probing can also\
    \ provide rough Round-Trip Time (RTT)\n   estimates between a pair of Locators,\
    \ which can be useful for network\n   management purposes as well as for selecting\
    \ low delay paths.  The\n   major disadvantage of RLOC-Probing is in the number\
    \ of control\n   messages required and the amount of bandwidth used to obtain\
    \ those\n   benefits, especially if the requirement for failure detection times\n\
    \   is very small.\n   Continued research and testing will attempt to characterize\
    \ the\n   tradeoffs of failure detection times versus message overhead.\n"
- title: 6.4.  EID Reachability within a LISP Site
  contents:
  - "6.4.  EID Reachability within a LISP Site\n   A site may be multihomed using\
    \ two or more ETRs.  The hosts and\n   infrastructure within a site will be addressed\
    \ using one or more\n   EID-Prefixes that are mapped to the RLOCs of the relevant\
    \ ETRs in the\n   mapping system.  One possible failure mode is for an ETR to\
    \ lose\n   reachability to one or more of the EID-Prefixes within its own site.\n\
    \   When this occurs when the ETR sends Map-Replies, it can clear the\n   R-bit\
    \ associated with its own Locator.  And when the ETR is also an\n   ITR, it can\
    \ clear its Locator-Status-Bit in the encapsulation data\n   header.\n   It is\
    \ recognized that there are no simple solutions to the site\n   partitioning problem\
    \ because it is hard to know which part of the\n   EID-Prefix range is partitioned\
    \ and which Locators can reach any\n   sub-ranges of the EID-Prefixes.  This problem\
    \ is under investigation\n   with the expectation that experiments will tell us\
    \ more.  Note that\n   this is not a new problem introduced by the LISP architecture.\
    \  The\n   problem exists today when a multihomed site uses BGP to advertise its\n\
    \   reachability upstream.\n"
- title: 6.5.  Routing Locator Hashing
  contents:
  - "6.5.  Routing Locator Hashing\n   When an ETR provides an EID-to-RLOC mapping\
    \ in a Map-Reply message to\n   a requesting ITR, the Locator-Set for the EID-Prefix\
    \ may contain\n   different Priority values for each locator address.  When more\
    \ than\n   one best Priority Locator exists, the ITR can decide how to load-\n\
    \   share traffic against the corresponding Locators.\n   The following hash algorithm\
    \ may be used by an ITR to select a\n   Locator for a packet destined to an EID\
    \ for the EID-to-RLOC mapping:\n   1.  Either a source and destination address\
    \ hash or the traditional\n       5-tuple hash can be used.  The traditional 5-tuple\
    \ hash includes\n       the source and destination addresses; source and destination\
    \ TCP,\n       UDP, or Stream Control Transmission Protocol (SCTP) port numbers;\n\
    \       and the IP protocol number field or IPv6 next-protocol fields of\n   \
    \    a packet that a host originates from within a LISP site.  When a\n      \
    \ packet is not a TCP, UDP, or SCTP packet, the source and\n       destination\
    \ addresses only from the header are used to compute\n       the hash.\n   2.\
    \  Take the hash value and divide it by the number of Locators\n       stored\
    \ in the Locator-Set for the EID-to-RLOC mapping.\n   3.  The remainder will yield\
    \ a value of 0 to \"number of Locators\n       minus 1\".  Use the remainder to\
    \ select the Locator in the\n       Locator-Set.\n   Note that when a packet is\
    \ LISP encapsulated, the source port number\n   in the outer UDP header needs\
    \ to be set.  Selecting a hashed value\n   allows core routers that are attached\
    \ to Link Aggregation Groups\n   (LAGs) to load-split the encapsulated packets\
    \ across member links of\n   such LAGs.  Otherwise, core routers would see a single\
    \ flow, since\n   packets have a source address of the ITR, for packets that are\n\
    \   originated by different EIDs at the source site.  A suggested setting\n  \
    \ for the source port number computed by an ITR is a 5-tuple hash\n   function\
    \ on the inner header, as described above.\n   Many core router implementations\
    \ use a 5-tuple hash to decide how to\n   balance packet load across members of\
    \ a LAG.  The 5-tuple hash\n   includes the source and destination addresses of\
    \ the packet and the\n   source and destination ports when the protocol number\
    \ in the packet\n   is TCP or UDP.  For this reason, UDP encoding is used for\
    \ LISP\n   encapsulation.\n"
- title: 6.6.  Changing the Contents of EID-to-RLOC Mappings
  contents:
  - "6.6.  Changing the Contents of EID-to-RLOC Mappings\n   Since the LISP architecture\
    \ uses a caching scheme to retrieve and\n   store EID-to-RLOC mappings, the only\
    \ way an ITR can get a more up-to-\n   date mapping is to re-request the mapping.\
    \  However, the ITRs do not\n   know when the mappings change, and the ETRs do\
    \ not keep track of\n   which ITRs requested its mappings.  For scalability reasons,\
    \ we want\n   to maintain this approach but need to provide a way for ETRs to\n\
    \   change their mappings and inform the sites that are currently\n   communicating\
    \ with the ETR site using such mappings.\n   When adding a new Locator record\
    \ in lexicographic order to the end of\n   a Locator-Set, it is easy to update\
    \ mappings.  We assume that new\n   mappings will maintain the same Locator ordering\
    \ as the old mapping\n   but will just have new Locators appended to the end of\
    \ the list.  So,\n   some ITRs can have a new mapping while other ITRs have only\
    \ an old\n   mapping that is used until they time out.  When an ITR has only an\n\
    \   old mapping but detects bits set in the Locator-Status-Bits that\n   correspond\
    \ to Locators beyond the list it has cached, it simply\n   ignores them.  However,\
    \ this can only happen for locator addresses\n   that are lexicographically greater\
    \ than the locator addresses in the\n   existing Locator-Set.\n   When a Locator\
    \ record is inserted in the middle of a Locator-Set, to\n   maintain lexicographic\
    \ order, the SMR procedure in Section 6.6.2 is\n   used to inform ITRs and PITRs\
    \ of the new Locator-Status-Bit mappings.\n   When a Locator record is removed\
    \ from a Locator-Set, ITRs that have\n   the mapping cached will not use the removed\
    \ Locator because the xTRs\n   will set the Locator-Status-Bit to 0.  So, even\
    \ if the Locator is in\n   the list, it will not be used.  For new mapping requests,\
    \ the xTRs\n   can set the Locator AFI to 0 (indicating an unspecified address),\
    \ as\n   well as setting the corresponding Locator-Status-Bit to 0.  This\n  \
    \ forces ITRs with old or new mappings to avoid using the removed\n   Locator.\n\
    \   If many changes occur to a mapping over a long period of time, one\n   will\
    \ find empty record slots in the middle of the Locator-Set and new\n   records\
    \ appended to the Locator-Set.  At some point, it would be\n   useful to compact\
    \ the Locator-Set so the Locator-Status-Bit settings\n   can be efficiently packed.\n\
    \   We propose here three approaches for Locator-Set compaction: one\n   operational\
    \ mechanism and two protocol mechanisms.  The operational\n   approach uses a\
    \ clock sweep method.  The protocol approaches use the\n   concept of Solicit-Map-Requests\
    \ and Map-Versioning.\n"
- title: 6.6.1.  Clock Sweep
  contents:
  - "6.6.1.  Clock Sweep\n   The clock sweep approach uses planning in advance and\
    \ the use of\n   count-down TTLs to time out mappings that have already been cached.\n\
    \   The default setting for an EID-to-RLOC mapping TTL is 24 hours.  So,\n   there\
    \ is a 24-hour window to time out old mappings.  The following\n   clock sweep\
    \ procedure is used:\n   1.  24 hours before a mapping change is to take effect,\
    \ a network\n       administrator configures the ETRs at a site to start the clock\n\
    \       sweep window.\n   2.  During the clock sweep window, ETRs continue to\
    \ send Map-Reply\n       messages with the current (unchanged) mapping records.\
    \  The TTL\n       for these mappings is set to 1 hour.\n   3.  24 hours later,\
    \ all previous cache entries will have timed out,\n       and any active cache\
    \ entries will time out within 1 hour.  During\n       this 1-hour window, the\
    \ ETRs continue to send Map-Reply messages\n       with the current (unchanged)\
    \ mapping records with the TTL set to\n       1 minute.\n   4.  At the end of\
    \ the 1-hour window, the ETRs will send Map-Reply\n       messages with the new\
    \ (changed) mapping records.  So, any active\n       caches can get the new mapping\
    \ contents right away if not cached,\n       or in 1 minute if they had the mapping\
    \ cached.  The new mappings\n       are cached with a TTL equal to the TTL in\
    \ the Map-Reply.\n"
- title: 6.6.2.  Solicit-Map-Request (SMR)
  contents:
  - "6.6.2.  Solicit-Map-Request (SMR)\n   Soliciting a Map-Request is a selective\
    \ way for ETRs, at the site\n   where mappings change, to control the rate they\
    \ receive requests for\n   Map-Reply messages.  SMRs are also used to tell remote\
    \ ITRs to update\n   the mappings they have cached.\n   Since the ETRs don't keep\
    \ track of remote ITRs that have cached their\n   mappings, they do not know which\
    \ ITRs need to have their mappings\n   updated.  As a result, an ETR will solicit\
    \ Map-Requests (called an\n   SMR message) from those sites to which it has been\
    \ sending\n   encapsulated data for the last minute.  In particular, an ETR will\n\
    \   send an SMR to an ITR to which it has recently sent encapsulated\n   data.\n\
    \   An SMR message is simply a bit set in a Map-Request message.  An ITR\n   or\
    \ PITR will send a Map-Request when they receive an SMR message.\n   Both the\
    \ SMR sender and the Map-Request responder MUST rate-limit\n   these messages.\
    \  Rate-limiting can be implemented as a global rate-\n   limiter or one rate-limiter\
    \ per SMR destination.\n   The following procedure shows how an SMR exchange occurs\
    \ when a site\n   is doing Locator-Set compaction for an EID-to-RLOC mapping:\n\
    \   1.  When the database mappings in an ETR change, the ETRs at the site\n  \
    \     begin to send Map-Requests with the SMR bit set for each Locator\n     \
    \  in each Map-Cache entry the ETR caches.\n   2.  A remote ITR that receives\
    \ the SMR message will schedule sending\n       a Map-Request message to the source\
    \ locator address of the SMR\n       message or to the mapping database system.\
    \  A newly allocated\n       random nonce is selected, and the EID-Prefix used\
    \ is the one\n       copied from the SMR message.  If the source Locator is the\
    \ only\n       Locator in the cached Locator-Set, the remote ITR SHOULD send a\n\
    \       Map-Request to the database mapping system just in case the\n       single\
    \ Locator has changed and may no longer be reachable to\n       accept the Map-Request.\n\
    \   3.  The remote ITR MUST rate-limit the Map-Request until it gets a\n     \
    \  Map-Reply while continuing to use the cached mapping.  When\n       Map-Versioning\
    \ as described in Section 6.6.3 is used, an SMR\n       sender can detect if an\
    \ ITR is using the most up-to-date database\n       mapping.\n   4.  The ETRs\
    \ at the site with the changed mapping will reply to the\n       Map-Request with\
    \ a Map-Reply message that has a nonce from the\n       SMR-invoked Map-Request.\
    \  The Map-Reply messages SHOULD be rate-\n       limited.  This is important\
    \ to avoid Map-Reply implosion.\n   5.  The ETRs at the site with the changed\
    \ mapping record the fact\n       that the site that sent the Map-Request has\
    \ received the new\n       mapping data in the Map-Cache entry for the remote\
    \ site so the\n       Locator-Status-Bits are reflective of the new mapping for\
    \ packets\n       going to the remote site.  The ETR then stops sending SMR\n\
    \       messages.\n   Experimentation is in progress to determine the appropriate\
    \ rate-\n   limit parameters.\n   For security reasons, an ITR MUST NOT process\
    \ unsolicited\n   Map-Replies.  To avoid Map-Cache entry corruption by a third\
    \ party, a\n   sender of an SMR-based Map-Request MUST be verified.  If an ITR\n\
    \   receives an SMR-based Map-Request and the source is not in the\n   Locator-Set\
    \ for the stored Map-Cache entry, then the responding\n   Map-Request MUST be\
    \ sent with an EID destination to the mapping\n   database system.  Since the\
    \ mapping database system is a more secure\n   way to reach an authoritative ETR,\
    \ it will deliver the Map-Request to\n   the authoritative source of the mapping\
    \ data.\n   When an ITR receives an SMR-based Map-Request for which it does not\n\
    \   have a cached mapping for the EID in the SMR message, it MAY not send\n  \
    \ an SMR-invoked Map-Request.  This scenario can occur when an ETR\n   sends SMR\
    \ messages to all Locators in the Locator-Set it has stored\n   in its map-cache\
    \ but the remote ITRs that receive the SMR may not be\n   sending packets to the\
    \ site.  There is no point in updating the ITRs\n   until they need to send, in\
    \ which case they will send Map-Requests to\n   obtain a Map-Cache entry.\n"
- title: 6.6.3.  Database Map-Versioning
  contents:
  - "6.6.3.  Database Map-Versioning\n   When there is unidirectional packet flow\
    \ between an ITR and ETR, and\n   the EID-to-RLOC mappings change on the ETR,\
    \ it needs to inform the\n   ITR so encapsulation to a removed Locator can stop\
    \ and can instead be\n   started to a new Locator in the Locator-Set.\n   An ETR,\
    \ when it sends Map-Reply messages, conveys its own Map-Version\n   Number.  This\
    \ is known as the Destination Map-Version Number.  ITRs\n   include the Destination\
    \ Map-Version Number in packets they\n   encapsulate to the site.  When an ETR\
    \ decapsulates a packet and\n   detects that the Destination Map-Version Number\
    \ is less than the\n   current version for its mapping, the SMR procedure described\
    \ in\n   Section 6.6.2 occurs.\n   An ITR, when it encapsulates packets to ETRs,\
    \ can convey its own\n   Map-Version Number.  This is known as the Source Map-Version\
    \ Number.\n   When an ETR decapsulates a packet and detects that the Source\n\
    \   Map-Version Number is greater than the last Map-Version Number sent\n   in\
    \ a Map-Reply from the ITR's site, the ETR will send a Map-Request\n   to one\
    \ of the ETRs for the source site.\n   A Map-Version Number is used as a sequence\
    \ number per EID-Prefix, so\n   values that are greater are considered to be more\
    \ recent.  A value of\n   0 for the Source Map-Version Number or the Destination\
    \ Map-Version\n   Number conveys no versioning information, and an ITR does no\n\
    \   comparison with previously received Map-Version Numbers.\n   A Map-Version\
    \ Number can be included in Map-Register messages as\n   well.  This is a good\
    \ way for the Map-Server to assure that all ETRs\n   for a site registering to\
    \ it will be synchronized according to\n   Map-Version Number.\n   See [RFC6834]\
    \ for a more detailed analysis and description of\n   Database Map-Versioning.\n"
- title: 7.  Router Performance Considerations
  contents:
  - "7.  Router Performance Considerations\n   LISP is designed to be very \"hardware-based\
    \ forwarding friendly\".  A\n   few implementation techniques can be used to incrementally\
    \ implement\n   LISP:\n   o  When a tunnel-encapsulated packet is received by\
    \ an ETR, the outer\n      destination address may not be the address of the router.\
    \  This\n      makes it challenging for the control plane to get packets from\
    \ the\n      hardware.  This may be mitigated by creating special Forwarding\n\
    \      Information Base (FIB) entries for the EID-Prefixes of EIDs served\n  \
    \    by the ETR (those for which the router provides an RLOC\n      translation).\
    \  These FIB entries are marked with a flag indicating\n      that control-plane\
    \ processing should be performed.  The forwarding\n      logic of testing for\
    \ particular IP protocol number values is not\n      necessary.  There are a few\
    \ proven cases where no changes to\n      existing deployed hardware were needed\
    \ to support the LISP data-\n      plane.\n   o  On an ITR, prepending a new IP\
    \ header consists of adding more\n      octets to a MAC rewrite string and prepending\
    \ the string as part\n      of the outgoing encapsulation procedure.  Routers\
    \ that support\n      Generic Routing Encapsulation (GRE) tunneling [RFC2784]\
    \ or 6to4\n      tunneling [RFC3056] may already support this action.\n   o  A\
    \ packet's source address or interface the packet was received on\n      can be\
    \ used to select VRF (Virtual Routing/Forwarding).  The VRF's\n      routing table\
    \ can be used to find EID-to-RLOC mappings.\n   For performance issues related\
    \ to map-cache management, see\n   Section 12.\n"
- title: 8.  Deployment Scenarios
  contents:
  - "8.  Deployment Scenarios\n   This section will explore how and where ITRs and\
    \ ETRs can be deployed\n   and will discuss the pros and cons of each deployment\
    \ scenario.  For\n   a more detailed deployment recommendation, refer to [LISP-DEPLOY].\n\
    \   There are two basic deployment tradeoffs to consider: centralized\n   versus\
    \ distributed caches; and flat, Recursive, or Re-encapsulating\n   Tunneling.\
    \  When deciding on centralized versus distributed caching,\n   the following\
    \ issues should be considered:\n   o  Are the Tunnel Routers spread out so that\
    \ the caches are spread\n      across all the memories of each router?  A centralized\
    \ cache is\n      when an ITR keeps a cache for all the EIDs it is encapsulating\
    \ to.\n      The packet takes a direct path to the destination Locator.  A\n \
    \     distributed cache is when an ITR needs help from other\n      re-encapsulating\
    \ routers because it does not store all the cache\n      entries for the EIDs\
    \ it is encapsulating to.  So, the packet takes\n      a path through re-encapsulating\
    \ routers that have a different set\n      of cache entries.\n   o  Should management\
    \ \"touch points\" be minimized by only choosing a\n      few Tunnel Routers,\
    \ just enough for redundancy?\n   o  In general, using more ITRs doesn't increase\
    \ management load,\n      since caches are built and stored dynamically.  On the\
    \ other hand,\n      using more ETRs does require more management, since EID-Prefix-to-\n\
    \      RLOC mappings need to be explicitly configured.\n   When deciding on flat,\
    \ Recursive, or Re-encapsulating Tunneling, the\n   following issues should be\
    \ considered:\n   o  Flat tunneling implements a single tunnel between the source\
    \ site\n      and destination site.  This generally offers better paths between\n\
    \      sources and destinations with a single tunnel path.\n   o  Recursive Tunneling\
    \ is when tunneled traffic is again further\n      encapsulated in another tunnel,\
    \ either to implement VPNs or to\n      perform Traffic Engineering.  When doing\
    \ VPN-based tunneling, the\n      site has some control, since the site is prepending\
    \ a new tunnel\n      header.  In the case of TE-based tunneling, the site may\
    \ have\n      control if it is prepending a new tunnel header, but if the site's\n\
    \      ISP is doing the TE, then the site has no control.  Recursive\n      Tunneling\
    \ generally will result in suboptimal paths but with the\n      benefit of steering\
    \ traffic to parts of the network that have more\n      resources available.\n\
    \   o  The technique of re-encapsulation ensures that packets only\n      require\
    \ one tunnel header.  So, if a packet needs to be re-routed,\n      it is first\
    \ decapsulated by the ETR and then re-encapsulated with\n      a new tunnel header\
    \ using a new RLOC.\n   The next sub-sections will examine where Tunnel Routers\
    \ can reside in\n   the network.\n"
- title: 8.1.  First-Hop/Last-Hop Tunnel Routers
  contents:
  - "8.1.  First-Hop/Last-Hop Tunnel Routers\n   By locating Tunnel Routers close\
    \ to hosts, the EID-Prefix set is at\n   the granularity of an IP subnet.  So,\
    \ at the expense of more\n   EID-Prefix-to-RLOC sets for the site, the caches\
    \ in each Tunnel\n   Router can remain relatively small.  But caches always depend\
    \ on the\n   number of non-aggregated EID destination flows active through these\n\
    \   Tunnel Routers.\n   With more Tunnel Routers doing encapsulation, the increase\
    \ in control\n   traffic grows as well: since the EID granularity is greater,\
    \ more\n   Map-Requests and Map-Replies are traveling between more routers.\n\
    \   The advantage of placing the caches and databases at these stub\n   routers\
    \ is that the products deployed in this part of the network\n   have better price-memory\
    \ ratios than their core router counterparts.\n   Memory is typically less expensive\
    \ in these devices, and fewer routes\n   are stored (only IGP routes).  These\
    \ devices tend to have excess\n   capacity, both for forwarding and routing states.\n\
    \   LISP functionality can also be deployed in edge switches.  These\n   devices\
    \ generally have layer-2 ports facing hosts and layer-3 ports\n   facing the Internet.\
    \  Spare capacity is also often available in these\n   devices.\n"
- title: 8.2.  Border/Edge Tunnel Routers
  contents:
  - "8.2.  Border/Edge Tunnel Routers\n   Using Customer Edge (CE) routers for tunnel\
    \ endpoints allows the EID\n   space associated with a site to be reachable via\
    \ a small set of RLOCs\n   assigned to the CE routers for that site.  This is\
    \ the default\n   behavior envisioned in the rest of this specification.\n   This\
    \ offers the opposite benefit of the first-hop/last-hop Tunnel\n   Router scenario:\
    \ the number of mapping entries and network management\n   touch points is reduced,\
    \ allowing better scaling.\n   One disadvantage is that fewer network resources\
    \ are used to reach\n   host endpoints, thereby centralizing the point-of-failure\
    \ domain and\n   creating network choke points at the CE router.\n   Note that\
    \ more than one CE router at a site can be configured with\n   the same IP address.\
    \  In this case, an RLOC is an anycast address.\n   This allows resilience between\
    \ the CE routers.  That is, if a CE\n   router fails, traffic is automatically\
    \ routed to the other routers\n   using the same anycast address.  However, this\
    \ comes with the\n   disadvantage where the site cannot control the entrance point\
    \ when\n   the anycast route is advertised out from all border routers.  Another\n\
    \   disadvantage of using anycast Locators is the limited advertisement\n   scope\
    \ of /32 (or /128 for IPv6) routes.\n"
- title: 8.3.  ISP Provider Edge (PE) Tunnel Routers
  contents:
  - "8.3.  ISP Provider Edge (PE) Tunnel Routers\n   The use of ISP PE routers as\
    \ tunnel endpoint routers is not the\n   typical deployment scenario envisioned\
    \ in this specification.  This\n   section attempts to capture some of the reasoning\
    \ behind this\n   preference for implementing LISP on CE routers.\n   The use\
    \ of ISP PE routers as tunnel endpoint routers gives an ISP,\n   rather than a\
    \ site, control over the location of the egress tunnel\n   endpoints.  That is,\
    \ the ISP can decide whether the tunnel endpoints\n   are in the destination site\
    \ (in either CE routers or last-hop routers\n   within a site) or at other PE\
    \ edges.  The advantage of this case is\n   that two tunnel headers can be avoided.\
    \  By having the PE be the\n   first router on the path to encapsulate, it can\
    \ choose a TE path\n   first, and the ETR can decapsulate and re-encapsulate for\
    \ a tunnel to\n   the destination end site.\n   An obvious disadvantage is that\
    \ the end site has no control over\n   where its packets flow or over the RLOCs\
    \ used.  Other disadvantages\n   include difficulty in synchronizing path liveness\
    \ updates between CE\n   and PE routers.\n   As mentioned in earlier sections,\
    \ a combination of these scenarios is\n   possible at the expense of extra packet\
    \ header overhead; if both site\n   and provider want control, then Recursive\
    \ or Re-encapsulating Tunnels\n   are used.\n"
- title: 8.4.  LISP Functionality with Conventional NATs
  contents:
  - "8.4.  LISP Functionality with Conventional NATs\n   LISP routers can be deployed\
    \ behind Network Address Translator (NAT)\n   devices to provide the same set\
    \ of packet services hosts have today\n   when they are addressed out of private\
    \ address space.\n   It is important to note that a locator address in any LISP\
    \ control\n   message MUST be a globally routable address and therefore SHOULD\
    \ NOT\n   contain [RFC1918] addresses.  If a LISP router is configured with\n\
    \   private addresses, they MUST be used only in the outer IP header so\n   the\
    \ NAT device can translate properly.  Otherwise, EID addresses MUST\n   be translated\
    \ before encapsulation is performed.  Both NAT\n   translation and LISP encapsulation\
    \ functions could be co-located in\n   the same device.\n   More details on LISP\
    \ address translation can be found in [RFC6832].\n"
- title: 8.5.  Packets Egressing a LISP Site
  contents:
  - "8.5.  Packets Egressing a LISP Site\n   When a LISP site is using two ITRs for\
    \ redundancy, the failure of one\n   ITR will likely shift outbound traffic to\
    \ the second.  This second\n   ITR's cache may not be populated with the same\
    \ EID-to-RLOC mapping\n   entries as the first.  If this second ITR does not have\
    \ these\n   mappings, traffic will be dropped while the mappings are retrieved\n\
    \   from the mapping system.  The retrieval of these messages may\n   increase\
    \ the load of requests being sent into the mapping system.\n   Deployment and\
    \ experimentation will determine whether this issue\n   requires more attention.\n"
- title: 9.  Traceroute Considerations
  contents:
  - "9.  Traceroute Considerations\n   When a source host in a LISP site initiates\
    \ a traceroute to a\n   destination host in another LISP site, it is highly desirable\
    \ for it\n   to see the entire path.  Since packets are encapsulated from the\
    \ ITR\n   to the ETR, the hop across the tunnel could be viewed as a single\n\
    \   hop.  However, LISP traceroute will provide the entire path so the\n   user\
    \ can see 3 distinct segments of the path from a source LISP host\n   to a destination\
    \ LISP host:\n      Segment 1 (in source LISP site based on EIDs):\n         \
    \ source host ---> first hop ... next hop ---> ITR\n      Segment 2 (in the core\
    \ network based on RLOCs):\n          ITR ---> next hop ... next hop ---> ETR\n\
    \      Segment 3 (in the destination LISP site based on EIDs):\n          ETR\
    \ ---> next hop ... last hop ---> destination host\n   For segment 1 of the path,\
    \ ICMP Time Exceeded messages are returned\n   in the normal manner as they are\
    \ today.  The ITR performs a TTL\n   decrement and tests for 0 before encapsulating.\
    \  Therefore, the ITR's\n   hop is seen by the traceroute source as having an\
    \ EID address (the\n   address of the site-facing interface).\n   For segment\
    \ 2 of the path, ICMP Time Exceeded messages are returned\n   to the ITR because\
    \ the TTL decrement to 0 is done on the outer\n   header, so the destinations\
    \ of the ICMP messages are the ITR RLOC\n   address and the source RLOC address\
    \ of the encapsulated traceroute\n   packet.  The ITR looks inside of the ICMP\
    \ payload to inspect the\n   traceroute source so it can return the ICMP message\
    \ to the address of\n   the traceroute client and also retain the core router\
    \ IP address in\n   the ICMP message.  This is so the traceroute client can display\
    \ the\n   core router address (the RLOC address) in the traceroute output.  The\n\
    \   ETR returns its RLOC address and responds to the TTL decrement to 0,\n   as\
    \ the previous core routers did.\n   For segment 3, the next-hop router downstream\
    \ from the ETR will be\n   decrementing the TTL for the packet that was encapsulated,\
    \ sent into\n   the core, decapsulated by the ETR, and forwarded because it isn't\
    \ the\n   final destination.  If the TTL is decremented to 0, any router on the\n\
    \   path to the destination of the traceroute, including the next-hop\n   router\
    \ or destination, will send an ICMP Time Exceeded message to the\n   source EID\
    \ of the traceroute client.  The ICMP message will be\n   encapsulated by the\
    \ local ITR and sent back to the ETR in the\n   originated traceroute source site,\
    \ where the packet will be delivered\n   to the host.\n"
- title: 9.1.  IPv6 Traceroute
  contents:
  - "9.1.  IPv6 Traceroute\n   IPv6 traceroute follows the procedure described above,\
    \ since the\n   entire traceroute data packet is included in the ICMP Time Exceeded\n\
    \   message payload.  Therefore, only the ITR needs to pay special\n   attention\
    \ to forwarding ICMP messages back to the traceroute source.\n"
- title: 9.2.  IPv4 Traceroute
  contents:
  - "9.2.  IPv4 Traceroute\n   For IPv4 traceroute, we cannot follow the above procedure,\
    \ since IPv4\n   ICMP Time Exceeded messages only include the invoking IP header\
    \ and\n   8 octets that follow the IP header.  Therefore, when a core router\n\
    \   sends an IPv4 Time Exceeded message to an ITR, all the ITR has in the\n  \
    \ ICMP payload is the encapsulated header it prepended, followed by a\n   UDP\
    \ header.  The original invoking IP header, and therefore the\n   identity of\
    \ the traceroute source, is lost.\n   The solution we propose to solve this problem\
    \ is to cache traceroute\n   IPv4 headers in the ITR and to match them up with\
    \ corresponding IPv4\n   Time Exceeded messages received from core routers and\
    \ the ETR.  The\n   ITR will use a circular buffer for caching the IPv4 and UDP\
    \ headers\n   of traceroute packets.  It will select a 16-bit number as a key\
    \ to\n   find them later when the IPv4 Time Exceeded messages are received.\n\
    \   When an ITR encapsulates an IPv4 traceroute packet, it will use the\n   16-bit\
    \ number as the UDP source port in the encapsulating header.\n   When the ICMP\
    \ Time Exceeded message is returned to the ITR, the UDP\n   header of the encapsulating\
    \ header is present in the ICMP payload,\n   thereby allowing the ITR to find\
    \ the cached headers for the\n   traceroute source.  The ITR puts the cached headers\
    \ in the payload\n   and sends the ICMP Time Exceeded message to the traceroute\
    \ source\n   retaining the source address of the original ICMP Time Exceeded\n\
    \   message (a core router or the ETR of the site of the traceroute\n   destination).\n\
    \   The signature of a traceroute packet comes in two forms.  The first\n   form\
    \ is encoded as a UDP message where the destination port is\n   inspected for\
    \ a range of values.  The second form is encoded as an\n   ICMP message where\
    \ the IP identification field is inspected for a\n   well-known value.\n"
- title: 9.3.  Traceroute Using Mixed Locators
  contents:
  - "9.3.  Traceroute Using Mixed Locators\n   When either an IPv4 traceroute or IPv6\
    \ traceroute is originated and\n   the ITR encapsulates it in the other address\
    \ family header, one\n   cannot get all 3 segments of the traceroute.  Segment\
    \ 2 of the\n   traceroute cannot be conveyed to the traceroute source, since it\
    \ is\n   expecting addresses from intermediate hops in the same address format\n\
    \   for the type of traceroute it originated.  Therefore, in this case,\n   segment\
    \ 2 will make the tunnel look like one hop.  All the ITR has to\n   do to make\
    \ this work is to not copy the inner TTL to the outer,\n   encapsulating header's\
    \ TTL when a traceroute packet is encapsulated\n   using an RLOC from a different\
    \ address family.  This will cause no\n   TTL decrement to 0 to occur in core\
    \ routers between the ITR and ETR.\n"
- title: 10.  Mobility Considerations
  contents:
  - "10.  Mobility Considerations\n   There are several kinds of mobility, of which\
    \ only some might be of\n   concern to LISP.  Essentially, they are as follows.\n"
- title: 10.1.  Site Mobility
  contents:
  - "10.1.  Site Mobility\n   A site wishes to change its attachment points to the\
    \ Internet, and\n   its LISP Tunnel Routers will have new RLOCs when it changes\
    \ upstream\n   providers.  Changes in EID-to-RLOC mappings for sites are expected\
    \ to\n   be handled by configuration, outside of LISP.\n"
- title: 10.2.  Slow Endpoint Mobility
  contents:
  - "10.2.  Slow Endpoint Mobility\n   An individual endpoint wishes to move but is\
    \ not concerned about\n   maintaining session continuity.  Renumbering is involved.\
    \  LISP can\n   help with the issues surrounding renumbering [RFC4192] [LISA96]\
    \ by\n   decoupling the address space used by a site from the address spaces\n\
    \   used by its ISPs [RFC4984].\n"
- title: 10.3.  Fast Endpoint Mobility
  contents:
  - "10.3.  Fast Endpoint Mobility\n   Fast endpoint mobility occurs when an endpoint\
    \ moves relatively\n   rapidly, changing its IP-layer network attachment point.\
    \  Maintenance\n   of session continuity is a goal.  This is where the Mobile\
    \ IPv4\n   [RFC5944] and Mobile IPv6 [RFC6275] [RFC4866] mechanisms are used and\n\
    \   primarily where interactions with LISP need to be explored.\n   The problem\
    \ is that as an endpoint moves, it may require changes to\n   the mapping between\
    \ its EID and a set of RLOCs for its new network\n   location.  When this is added\
    \ to the overhead of Mobile IP binding\n   updates, some packets might be delayed\
    \ or dropped.\n   In IPv4 mobility, when an endpoint is away from home, packets\
    \ to it\n   are encapsulated and forwarded via a home agent that resides in the\n\
    \   home area the endpoint's address belongs to.  The home agent will\n   encapsulate\
    \ and forward packets either directly to the endpoint or to\n   a foreign agent\
    \ that resides where the endpoint has moved to.\n   Packets from the endpoint\
    \ may be sent directly to the correspondent\n   node, may be sent via the foreign\
    \ agent, or may be reverse-tunneled\n   back to the home agent for delivery to\
    \ the mobile node.  As the\n   mobile node's EID or available RLOC changes, LISP\
    \ EID-to-RLOC\n   mappings are required for communication between the mobile node\
    \ and\n   the home agent, whether via the foreign agent or not.  As a mobile\n\
    \   endpoint changes networks, up to three LISP mapping changes may be\n   required:\n\
    \   o  The mobile node moves from an old location to a new visited\n      network\
    \ location and notifies its home agent that it has done so.\n      The Mobile\
    \ IPv4 control packets the mobile node sends pass through\n      one of the new\
    \ visited network's ITRs, which needs an EID-to-RLOC\n      mapping for the home\
    \ agent.\n   o  The home agent might not have the EID-to-RLOC mappings for the\n\
    \      mobile node's \"care-of\" address or its foreign agent in the new\n   \
    \   visited network, in which case it will need to acquire them.\n   o  When packets\
    \ are sent directly to the correspondent node, it may\n      be that no traffic\
    \ has been sent from the new visited network to\n      the correspondent node's\
    \ network, and the new visited network's\n      ITR will need to obtain an EID-to-RLOC\
    \ mapping for the\n      correspondent node's site.\n   In addition, if the IPv4\
    \ endpoint is sending packets from the new\n   visited network using its original\
    \ EID, then LISP will need to\n   perform a route-returnability check on the new\
    \ EID-to-RLOC mapping\n   for that EID.\n   In IPv6 mobility, packets can flow\
    \ directly between the mobile node\n   and the correspondent node in either direction.\
    \  The mobile node uses\n   its \"care-of\" address (EID).  In this case, the\
    \ route-returnability\n   check would not be needed but one more LISP mapping\
    \ lookup may be\n   required instead:\n   o  As above, three mapping changes may\
    \ be needed for the mobile node\n      to communicate with its home agent and\
    \ to send packets to the\n      correspondent node.\n   o  In addition, another\
    \ mapping will be needed in the correspondent\n      node's ITR, in order for\
    \ the correspondent node to send packets to\n      the mobile node's \"care-of\"\
    \ address (EID) at the new network\n      location.\n   When both endpoints are\
    \ mobile, the number of potential mapping\n   lookups increases accordingly.\n\
    \   As a mobile node moves, there are not only mobility state changes in\n   the\
    \ mobile node, correspondent node, and home agent, but also state\n   changes\
    \ in the ITRs and ETRs for at least some EID-Prefixes.\n   The goal is to support\
    \ rapid adaptation, with little delay or packet\n   loss for the entire system.\
    \  Also, IP mobility can be modified to\n   require fewer mapping changes.  In\
    \ order to increase overall system\n   performance, there may be a need to reduce\
    \ the optimization of one\n   area in order to place fewer demands on another.\n\
    \   In LISP, one possibility is to \"glean\" information.  When a packet\n   arrives,\
    \ the ETR could examine the EID-to-RLOC mapping and use that\n   mapping for all\
    \ outgoing traffic to that EID.  It can do this after\n   performing a route-returnability\
    \ check, to ensure that the new\n   network location does have an internal route\
    \ to that endpoint.\n   However, this does not cover the case where an ITR (the\
    \ node assigned\n   the RLOC) at the mobile-node location has been compromised.\n\
    \   Mobile IP packet exchange is designed for an environment in which all\n  \
    \ routing information is disseminated before packets can be forwarded.\n   In\
    \ order to allow the Internet to grow to support expected future\n   use, we are\
    \ moving to an environment where some information may have\n   to be obtained\
    \ after packets are in flight.  Modifications to IP\n   mobility should be considered\
    \ in order to optimize the behavior of\n   the overall system.  Anything that\
    \ decreases the number of new\n   EID-to-RLOC mappings needed when a node moves,\
    \ or maintains the\n   validity of an EID-to-RLOC mapping for a longer time, is\
    \ useful.\n"
- title: 10.4.  Fast Network Mobility
  contents:
  - "10.4.  Fast Network Mobility\n   In addition to endpoints, a network can be mobile,\
    \ possibly changing\n   xTRs.  A \"network\" can be as small as a single router\
    \ and as large as\n   a whole site.  This is different from site mobility in that\
    \ it is\n   fast and possibly short-lived, but different from endpoint mobility\n\
    \   in that a whole prefix is changing RLOCs.  However, the mechanisms\n   are\
    \ the same, and there is no new overhead in LISP.  A map request\n   for any endpoint\
    \ will return a binding for the entire mobile prefix.\n   If mobile networks become\
    \ a more common occurrence, it may be useful\n   to revisit the design of the\
    \ mapping service and allow for dynamic\n   updates of the database.\n   The issue\
    \ of interactions between mobility and LISP needs to be\n   explored further.\
    \  Specific improvements to the entire system will\n   depend on the details of\
    \ mapping mechanisms.  Mapping mechanisms\n   should be evaluated on how well\
    \ they support session continuity for\n   mobile nodes.\n"
- title: 10.5.  LISP Mobile Node Mobility
  contents:
  - "10.5.  LISP Mobile Node Mobility\n   A mobile device can use the LISP infrastructure\
    \ to achieve mobility\n   by implementing the LISP encapsulation and decapsulation\
    \ functions\n   and acting as a simple ITR/ETR.  By doing this, such a \"LISP\
    \ mobile\n   node\" can use topologically independent EID IP addresses that are\
    \ not\n   advertised into and do not impose a cost on the global routing\n   system.\
    \  These EIDs are maintained at the edges of the mapping system\n   (in LISP Map-Servers\
    \ and Map-Resolvers) and are provided on demand to\n   only the correspondents\
    \ of the LISP mobile node.\n   Refer to [LISP-MN] for more details.\n"
- title: 11.  Multicast Considerations
  contents:
  - "11.  Multicast Considerations\n   A multicast group address, as defined in the\
    \ original Internet\n   architecture, is an identifier of a grouping of topologically\n\
    \   independent receiver host locations.  The address encoding itself\n   does\
    \ not determine the location of the receiver(s).  The multicast\n   routing protocol,\
    \ and the network-based state the protocol creates,\n   determine where the receivers\
    \ are located.\n   In the context of LISP, a multicast group address is both an\
    \ EID and\n   a Routing Locator.  Therefore, no specific semantic or action needs\n\
    \   to be taken for a destination address, as it would appear in an IP\n   header.\
    \  Therefore, a group address that appears in an inner IP\n   header built by\
    \ a source host will be used as the destination EID.\n   The outer IP header (the\
    \ destination Routing Locator address),\n   prepended by a LISP router, will use\
    \ the same group address as the\n   destination Routing Locator.\n   Having said\
    \ that, only the source EID and source Routing Locator need\n   to be dealt with.\
    \  Therefore, an ITR merely needs to put its own IP\n   address in the source\
    \ 'Routing Locator' field when prepending the\n   outer IP header.  This source\
    \ Routing Locator address, like any other\n   Routing Locator address, MUST be\
    \ globally routable.\n   Therefore, an EID-to-RLOC mapping does not need to be\
    \ performed by an\n   ITR when a received data packet is a multicast data packet\
    \ or when\n   processing a source-specific Join (either by IGMPv3 or PIM).  But\
    \ the\n   source Routing Locator is decided by the multicast routing protocol\n\
    \   in a receiver site.  That is, an EID-to-RLOC translation is done at\n   control\
    \ time.\n   Another approach is to have the ITR not encapsulate a multicast\n\
    \   packet and allow the packet built by the host to flow into the core\n   even\
    \ if the source address is allocated out of the EID namespace.  If\n   the RPF-Vector\
    \ TLV [RFC5496] is used by PIM in the core, then core\n   routers can RPF to the\
    \ ITR (the locator address, which is injected\n   into core routing) rather than\
    \ the host source address (the EID\n   address, which is not injected into core\
    \ routing).\n   To avoid any EID-based multicast state in the network core, the\
    \ first\n   approach is chosen for LISP-Multicast.  Details for LISP-Multicast\n\
    \   and interworking with non-LISP sites are described in [RFC6831] and\n   [RFC6832].\n"
- title: 12.  Security Considerations
  contents:
  - "12.  Security Considerations\n   It is believed that most of the security mechanisms\
    \ will be part of\n   the mapping database service when using control-plane procedures\
    \ for\n   obtaining EID-to-RLOC mappings.  For data-plane-triggered mappings,\n\
    \   as described in this specification, protection is provided against\n   ETR\
    \ spoofing by using route-returnability (see Section 3) mechanisms\n   evidenced\
    \ by the use of a 24-bit 'Nonce' field in the LISP\n   encapsulation header and\
    \ a 64-bit 'Nonce' field in the LISP control\n   message.\n   The nonce, coupled\
    \ with the ITR accepting only solicited Map-Replies,\n   provides a basic level\
    \ of security, in many ways similar to the\n   security experienced in the current\
    \ Internet routing system.  It is\n   hard for off-path attackers to launch attacks\
    \ against these LISP\n   mechanisms, as they do not have the nonce values.  Sending\
    \ a large\n   number of packets to accidentally find the right nonce value is\n\
    \   possible but would already by itself be a denial-of-service (DoS)\n   attack.\
    \  On-path attackers can perform far more serious attacks, but\n   on-path attackers\
    \ can launch serious attacks in the current Internet\n   as well, including eavesdropping,\
    \ blocking, or redirecting traffic.\n   See more discussion on this topic in Section\
    \ 6.1.5.1.\n   LISP does not rely on a PKI or a more heavyweight authentication\n\
    \   system.  These systems challenge one of the primary design goals of\n   LISP\
    \ -- scalability.\n   DoS attack prevention will depend on implementations rate-limiting\n\
    \   Map-Requests and Map-Replies to the control plane as well as\n   rate-limiting\
    \ the number of data-triggered Map-Replies.\n   An incorrectly implemented or\
    \ malicious ITR might choose to ignore\n   the Priority and Weights provided by\
    \ the ETR in its Map-Reply.  This\n   traffic-steering would be limited to the\
    \ traffic that is sent by this\n   ITR's site and no more severe than if the site\
    \ initiated a bandwidth\n   DoS attack on (one of) the ETR's ingress links.  The\
    \ ITR's site would\n   typically gain no benefit from not respecting the Weights\
    \ and would\n   likely receive better service by abiding by them.\n   To deal\
    \ with map-cache exhaustion attempts in an ITR/PITR, the\n   implementation should\
    \ consider putting a maximum cap on the number of\n   entries stored with a reserve\
    \ list for special or frequently accessed\n   sites.  This should be a configuration\
    \ policy control set by the\n   network administrator who manages ITRs and PITRs.\
    \  When overlapping\n   EID-Prefixes occur across multiple Map-Cache entries,\
    \ the integrity\n   of the set must be wholly maintained.  So, if a more-specific\
    \ entry\n   cannot be added due to reaching the maximum cap, then none of the\n\
    \   less-specific entries should be stored in the map-cache.\n   Given that the\
    \ ITR/PITR maintains a cache of EID-to-RLOC mappings,\n   cache sizing and maintenance\
    \ are issues to be kept in mind during\n   implementation.  It is a good idea\
    \ to have instrumentation in place\n   to detect thrashing of the cache.  Implementation\
    \ experimentation\n   will be used to determine which cache management strategies\
    \ work\n   best.  In general, it is difficult to defend against cache-thrashing\n\
    \   attacks.  It should be noted that an undersized cache in an ITR/PITR\n   not\
    \ only causes adverse effects on the site or region it supports but\n   may also\
    \ cause increased Map-Request loads on the mapping system.\n   \"Piggybacked\"\
    \ mapping data as discussed in Section 6.1.3 specifies\n   how to handle such\
    \ mappings and includes the possibility for an ETR\n   to temporarily accept such\
    \ a mapping before verification when running\n   in \"trusted\" environments.\
    \  In such cases, there is a potential\n   threat that a fake mapping could be\
    \ inserted (even if only for a\n   short period) into a map-cache.  As noted in\
    \ Section 6.1.3, an ETR\n   MUST be specifically configured to run in such a mode\
    \ and might\n   usefully only consider some specific ITRs as also running in that\n\
    \   same trusted environment.\n   There is a security risk implicit in the fact\
    \ that ETRs generate the\n   EID-Prefix to which they are responding.  An ETR\
    \ can claim a shorter\n   prefix than it is actually responsible for.  Various\
    \ mechanisms to\n   ameliorate or resolve this issue will be examined in the future\n\
    \   [LISP-SEC].\n   Spoofing of inner-header addresses of LISP-encapsulated packets\
    \ is\n   possible, as with any tunneling mechanism.  ITRs MUST verify the\n  \
    \ source address of a packet to be an EID that belongs to the site's\n   EID-Prefix\
    \ range prior to encapsulation.  An ETR must only\n   decapsulate and forward\
    \ datagrams with an inner-header destination\n   that matches one of its EID-Prefix\
    \ ranges.  If, upon receipt and\n   decapsulation, the destination EID of a datagram\
    \ does not match one\n   of the ETR's configured EID-Prefixes, the ETR MUST drop\
    \ the datagram.\n   If a LISP-encapsulated packet arrives at an ETR, it SHOULD\
    \ compare\n   the inner-header source EID address and the outer-header source\
    \ RLOC\n   address with the mapping that exists in the mapping database.  Then,\n\
    \   when spoofing attacks occur, the outer-header source RLOC address can\n  \
    \ be used to trace back the attack to the source site, using existing\n   operational\
    \ tools.\n   This experimental specification does not address automated key\n\
    \   management (AKM).  BCP 107 [RFC4107] provides guidance in this area.\n   In\
    \ addition, at the time of this writing, substantial work is being\n   undertaken\
    \ to improve security of the routing system [RFC6518]\n   [RFC6480] [BGP-SEC]\
    \ [LISP-SEC].  Future work on LISP should address\n   the issues discussed in\
    \ BCP 107 as well as other open security\n   considerations, which may require\
    \ changes to this specification.\n"
- title: 13.  Network Management Considerations
  contents:
  - "13.  Network Management Considerations\n   Considerations for network management\
    \ tools exist so the LISP\n   protocol suite can be operationally managed.  These\
    \ mechanisms can be\n   found in [LISP-MIB] and [RFC6835].\n"
- title: 14.  IANA Considerations
  contents:
  - "14.  IANA Considerations\n   This section provides guidance to the Internet Assigned\
    \ Numbers\n   Authority (IANA) regarding registration of values related to the\
    \ LISP\n   specification, in accordance with BCP 26 [RFC5226].\n   There are four\
    \ namespaces (listed in the sub-sections below) in LISP\n   that have been registered.\n\
    \   o  LISP IANA registry allocations should not be made for purposes\n      unrelated\
    \ to LISP routing or transport protocols.\n   o  The following policies are used\
    \ here with the meanings defined in\n      BCP 26: \"Specification Required\"\
    , \"IETF Review\", \"Experimental\n      Use\", and \"First Come First Served\"\
    .\n"
- title: 14.1.  LISP ACT and Flag Fields
  contents:
  - "14.1.  LISP ACT and Flag Fields\n   New ACT values (Section 6.1.4) can be allocated\
    \ through IETF review\n   or IESG approval.  Four values have already been allocated\
    \ by this\n   specification (Section 6.1.4).\n   In addition, LISP has a number\
    \ of flag fields and reserved fields,\n   such as the LISP header flags field\
    \ (Section 5.3).  New bits for\n   flags in these fields can be implemented after\
    \ IETF review or IESG\n   approval, but these need not be managed by IANA.\n"
- title: 14.2.  LISP Address Type Codes
  contents:
  - "14.2.  LISP Address Type Codes\n   LISP Address [LCAF] type codes have a range\
    \ from 0 to 255.  New type\n   codes MUST be allocated consecutively, starting\
    \ at 0.  Type Codes\n   0-127 are to be assigned by IETF review or IESG approval.\n\
    \   Type Codes 128-255 are available according to the [RFC5226] First\n   Come\
    \ First Served policy.\n   This registry, initially empty, is constructed for\
    \ future use in\n   experimental work related to LISP Canonical Address Format\
    \ (LCAF)\n   values.  See [LCAF] for details of other possible unapproved address\n\
    \   encodings.  The unapproved LCAF encodings are an area for further\n   study\
    \ and experimentation.\n"
- title: 14.3.  LISP UDP Port Numbers
  contents:
  - "14.3.  LISP UDP Port Numbers\n   The IANA registry has allocated UDP port numbers\
    \ 4341 and 4342 for\n   lisp-data and lisp-control operation, respectively.  IANA\
    \ has updated\n   the description for UDP ports 4341 and 4342 as follows:\n  \
    \     lisp-data      4341 udp    LISP Data Packets\n       lisp-control   4342\
    \ udp    LISP Control Packets\n"
- title: 14.4.  LISP Key ID Numbers
  contents:
  - "14.4.  LISP Key ID Numbers\n   The following Key ID values are defined by this\
    \ specification as used\n   in any packet type that references a 'Key ID' field:\n\
    \       Name                 Number          Defined in\n       -----------------------------------------------\n\
    \       None                 0               n/a\n       HMAC-SHA-1-96       \
    \ 1               [RFC2404]\n       HMAC-SHA-256-128     2               [RFC4868]\n\
    \   Number values are in the range of 0 to 65535.  The allocation of\n   values\
    \ is on a first come first served basis.\n"
- title: 15.  Known Open Issues and Areas of Future Work
  contents:
  - "15.  Known Open Issues and Areas of Future Work\n   As an experimental specification,\
    \ this work is, by definition,\n   incomplete.  Specific areas where additional\
    \ experience and work are\n   needed include the following:\n   o  At present,\
    \ only [RFC6836] is defined for implementing a database\n      of EID-to-RLOC\
    \ mapping information.  Additional research on other\n      mapping database systems\
    \ is strongly encouraged.\n   o  Failure and recovery of LISP site partitioning\
    \ (see Section 6.4)\n      in the presence of redundant configuration (see Section\
    \ 8.5) needs\n      further research and experimentation.\n   o  The characteristics\
    \ of map-cache management under exceptional\n      conditions, such as denial-of-service\
    \ attacks, are not fully\n      understood.  Further experience is needed to determine\
    \ whether\n      current caching methods are practical or in need of further\n\
    \      development.  In particular, the performance, scaling, and\n      security\
    \ characteristics of the map-cache will be discovered as\n      part of this experiment.\
    \  Performance metrics to be observed are\n      packet reordering associated\
    \ with the LISP Data-Probe and loss of\n      the first packet in a flow associated\
    \ with map-caching.  The\n      impact of these upon TCP will be observed.  See\
    \ Section 12 for\n      additional thoughts and considerations.\n   o  Preliminary\
    \ work has been done to ensure that sites employing LISP\n      can interconnect\
    \ with the rest of the Internet.  This work is\n      documented in [RFC6832],\
    \ but further experimentation and\n      experience are needed.\n   o  At present,\
    \ no mechanism for automated key management for message\n      authentication\
    \ is defined.  Addressing automated key management is\n      necessary before\
    \ this specification can be developed into a\n      Standards Track RFC.  See\
    \ Section 12 for further details regarding\n      security considerations.\n \
    \  o  In order to maintain security and stability, Internet protocols\n      typically\
    \ isolate the control and data planes.  Therefore, user\n      activity cannot\
    \ cause control-plane state to be created or\n      destroyed.  LISP does not\
    \ maintain this separation.  The degree to\n      which the loss of separation\
    \ impacts security and stability is a\n      topic for experimental observation.\n\
    \   o  LISP allows for the use of different mapping database systems.\n      While\
    \ only one [RFC6836] is currently well defined, each mapping\n      database will\
    \ likely have some impact on the security of the\n      EID-to-RLOC mappings.\
    \  How each mapping database system's security\n      properties impact LISP overall\
    \ is for further study.\n   o  An examination of the implications of LISP on Internet\
    \ traffic,\n      applications, routers, and security is needed.  This will help\n\
    \      implementors understand the consequences for network stability,\n     \
    \ routing protocol function, routing scalability, migration and\n      backward\
    \ compatibility, and implementation scalability (as\n      influenced by additional\
    \ protocol components; additional state;\n      and additional processing for\
    \ encapsulation, decapsulation, and\n      liveness).\n   o  Experiments need\
    \ to verify that LISP produces no significant\n      change in the behavior of\
    \ protocols run between end-systems over a\n      LISP infrastructure versus being\
    \ run directly between those same\n      end-systems.\n   o  Experiments need\
    \ to verify that the issues raised in the Critique\n      section of [RFC6115]\
    \ are either insignificant or have been\n      addressed by updates to LISP.\n\
    \   Other LISP documents may also include open issues and areas for\n   future\
    \ work.\n"
- title: 16.  References
  contents:
  - '16.  References

    '
- title: 16.1.  Normative References
  contents:
  - "16.1.  Normative References\n   [RFC0768]  Postel, J., \"User Datagram Protocol\"\
    , STD 6, RFC 768,\n              August 1980.\n   [RFC0791]  Postel, J., \"Internet\
    \ Protocol\", STD 5, RFC 791,\n              September 1981.\n   [RFC1918]  Rekhter,\
    \ Y., Moskowitz, R., Karrenberg, D., Groot, G., and\n              E. Lear, \"\
    Address Allocation for Private Internets\",\n              BCP 5, RFC 1918, February\
    \ 1996.\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n\
    \              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2404]\
    \  Madson, C. and R. Glenn, \"The Use of HMAC-SHA-1-96 within\n              ESP\
    \ and AH\", RFC 2404, November 1998.\n   [RFC2460]  Deering, S. and R. Hinden,\
    \ \"Internet Protocol, Version 6\n              (IPv6) Specification\", RFC 2460,\
    \ December 1998.\n   [RFC3168]  Ramakrishnan, K., Floyd, S., and D. Black, \"\
    The Addition\n              of Explicit Congestion Notification (ECN) to IP\"\
    ,\n              RFC 3168, September 2001.\n   [RFC3232]  Reynolds, J., \"Assigned\
    \ Numbers: RFC 1700 is Replaced by\n              an On-line Database\", RFC 3232,\
    \ January 2002.\n   [RFC4086]  Eastlake, D., Schiller, J., and S. Crocker, \"\
    Randomness\n              Requirements for Security\", BCP 106, RFC 4086, June\
    \ 2005.\n   [RFC4632]  Fuller, V. and T. Li, \"Classless Inter-domain Routing\n\
    \              (CIDR): The Internet Address Assignment and Aggregation\n     \
    \         Plan\", BCP 122, RFC 4632, August 2006.\n   [RFC4868]  Kelly, S. and\
    \ S. Frankel, \"Using HMAC-SHA-256,\n              HMAC-SHA-384, and HMAC-SHA-512\
    \ with IPsec\", RFC 4868,\n              May 2007.\n   [RFC5226]  Narten, T. and\
    \ H. Alvestrand, \"Guidelines for Writing an\n              IANA Considerations\
    \ Section in RFCs\", BCP 26, RFC 5226,\n              May 2008.\n   [RFC5496]\
    \  Wijnands, IJ., Boers, A., and E. Rosen, \"The Reverse Path\n              Forwarding\
    \ (RPF) Vector TLV\", RFC 5496, March 2009.\n   [RFC5944]  Perkins, C., \"IP Mobility\
    \ Support for IPv4, Revised\",\n              RFC 5944, November 2010.\n   [RFC6115]\
    \  Li, T., \"Recommendation for a Routing Architecture\",\n              RFC 6115,\
    \ February 2011.\n   [RFC6275]  Perkins, C., Johnson, D., and J. Arkko, \"Mobility\
    \ Support\n              in IPv6\", RFC 6275, July 2011.\n   [RFC6833]  Farinacci,\
    \ D. and V. Fuller, \"Locator/ID Separation\n              Protocol (LISP) Map-Server\
    \ Interface\", RFC 6833,\n              January 2013.\n   [RFC6834]  Iannone,\
    \ L., Saucez, D., and O. Bonaventure, \"Locator/ID\n              Separation Protocol\
    \ (LISP) Map-Versioning\", RFC 6834,\n              January 2013.\n   [RFC6836]\
    \  Farinacci, D., Fuller, V., Meyer, D., and D. Lewis,\n              \"Locator/ID\
    \ Separation Protocol Alternative Logical\n              Topology (LISP+ALT)\"\
    , RFC 6836, January 2013.\n"
- title: 16.2.  Informative References
  contents:
  - "16.2.  Informative References\n   [AFI]      IANA, \"Address Family Numbers\"\
    ,\n              <http://www.iana.org/assignments/address-family-numbers>.\n \
    \  [BGP-SEC]  Lepinski, M. and S. Turner, \"An Overview of BGPSEC\", Work\n  \
    \            in Progress, May 2012.\n   [CHIAPPA]  Chiappa, J., \"Endpoints and\
    \ Endpoint names: A Proposed\n              Enhancement to the Internet Architecture\"\
    , 1999,\n              <http://mercury.lcs.mit.edu/~jnc/tech/endpoints.txt>.\n\
    \   [CONS]     Brim, S., Chiappa, N., Farinacci, D., Fuller, V., Lewis,\n    \
    \          D., and D. Meyer, \"LISP-CONS: A Content distribution\n           \
    \   Overlay Network Service for LISP\", Work in Progress,\n              April\
    \ 2008.\n   [EMACS]    Brim, S., Farinacci, D., Meyer, D., and J. Curran, \"EID\n\
    \              Mappings Multicast Across Cooperating Systems for LISP\",\n   \
    \           Work in Progress, November 2007.\n   [LCAF]     Farinacci, D., Meyer,\
    \ D., and J. Snijders, \"LISP Canonical\n              Address Format (LCAF)\"\
    , Work in Progress, January 2013.\n   [LISA96]   Lear, E., Tharp, D., Katinsky,\
    \ J., and J. Coffin,\n              \"Renumbering: Threat or Menace?\", Usenix\
    \ Tenth System\n              Administration Conference (LISA 96), October 1996.\n\
    \   [LISP-DEPLOY]\n              Jakab, L., Cabellos-Aparicio, A., Coras, F.,\n\
    \              Domingo-Pascual, J., and D. Lewis, \"LISP Network Element\n   \
    \           Deployment Considerations\", Work in Progress,\n              October\
    \ 2012.\n   [LISP-MIB] Schudel, G., Jain, A., and V. Moreno, \"LISP MIB\", Work\n\
    \              in Progress, January 2013.\n   [LISP-MN]  Farinacci, D., Lewis,\
    \ D., Meyer, D., and C. White, \"LISP\n              Mobile Node\", Work in Progress,\
    \ October 2012.\n   [LISP-SEC] Maino, F., Ermagan, V., Cabellos, A., Saucez, D.,\
    \ and O.\n              Bonaventure, \"LISP-Security (LISP-SEC)\", Work in Progress,\n\
    \              October 2012.\n   [LOC-ID-ARCH]\n              Meyer, D. and D.\
    \ Lewis, \"Architectural Implications of\n              Locator/ID Separation\"\
    , Work in Progress, January 2009.\n   [OPENLISP] Iannone, L., Saucez, D., and\
    \ O. Bonaventure, \"OpenLISP\n              Implementation Report\", Work in Progress,\
    \ July 2008.\n   [RADIR]    Narten, T., \"On the Scalability of Internet Routing\"\
    , Work\n              in Progress, February 2010.\n   [RFC1034]  Mockapetris,\
    \ P., \"Domain names - concepts and facilities\",\n              STD 13, RFC 1034,\
    \ November 1987.\n   [RFC2784]  Farinacci, D., Li, T., Hanks, S., Meyer, D., and\
    \ P.\n              Traina, \"Generic Routing Encapsulation (GRE)\", RFC 2784,\n\
    \              March 2000.\n   [RFC3056]  Carpenter, B. and K. Moore, \"Connection\
    \ of IPv6 Domains\n              via IPv4 Clouds\", RFC 3056, February 2001.\n\
    \   [RFC3261]  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston,\n    \
    \          A., Peterson, J., Sparks, R., Handley, M., and E.\n              Schooler,\
    \ \"SIP: Session Initiation Protocol\", RFC 3261,\n              June 2002.\n\
    \   [RFC4107]  Bellovin, S. and R. Housley, \"Guidelines for Cryptographic\n \
    \             Key Management\", BCP 107, RFC 4107, June 2005.\n   [RFC4192]  Baker,\
    \ F., Lear, E., and R. Droms, \"Procedures for\n              Renumbering an IPv6\
    \ Network without a Flag Day\", RFC 4192,\n              September 2005.\n   [RFC4866]\
    \  Arkko, J., Vogt, C., and W. Haddad, \"Enhanced Route\n              Optimization\
    \ for Mobile IPv6\", RFC 4866, May 2007.\n   [RFC4984]  Meyer, D., Zhang, L.,\
    \ and K. Fall, \"Report from the IAB\n              Workshop on Routing and Addressing\"\
    , RFC 4984,\n              September 2007.\n   [RFC6480]  Lepinski, M. and S.\
    \ Kent, \"An Infrastructure to Support\n              Secure Internet Routing\"\
    , RFC 6480, February 2012.\n   [RFC6518]  Lebovitz, G. and M. Bhatia, \"Keying\
    \ and Authentication for\n              Routing Protocols (KARP) Design Guidelines\"\
    , RFC 6518,\n              February 2012.\n   [RFC6831]  Farinacci, D., Meyer,\
    \ D., Zwiebel, J., and S. Venaas, \"The\n              Locator/ID Separation Protocol\
    \ (LISP) for Multicast\n              Environments\", RFC 6831, January 2013.\n\
    \   [RFC6832]  Lewis, D., Meyer, D., Farinacci, D., and V. Fuller,\n         \
    \     \"Interworking between Locator/ID Separation Protocol\n              (LISP)\
    \ and Non-LISP Sites\", RFC 6832, January 2013.\n   [RFC6835]  Farinacci, D. and\
    \ D. Meyer, \"The Locator/ID Separation\n              Protocol Internet Groper\
    \ (LIG)\", RFC 6835, January 2013.\n   [RFC6837]  Lear, E., \"NERD: A Not-so-novel\
    \ Endpoint ID (EID) to\n              Routing Locator (RLOC) Database\", RFC 6837,\
    \ January 2013.\n   [UDP-TUNNELS]\n              Eubanks, M., Chimento, P., and\
    \ M. Westerlund, \"IPv6 and\n              UDP Checksums for Tunneled Packets\"\
    , Work in Progress,\n              January 2013.\n   [UDP-ZERO] Fairhurst, G.\
    \ and M. Westerlund, \"Applicability Statement\n              for the use of IPv6\
    \ UDP Datagrams with Zero Checksums\",\n              Work in Progress, December\
    \ 2012.\n"
- title: Appendix A.  Acknowledgments
  contents:
  - "Appendix A.  Acknowledgments\n   An initial thank you goes to Dave Oran for planting\
    \ the seeds for the\n   initial ideas for LISP.  His consultation continues to\
    \ provide value\n   to the LISP authors.\n   A special and appreciative thank\
    \ you goes to Noel Chiappa for\n   providing architectural impetus over the past\
    \ decades on separation\n   of location and identity, as well as detailed reviews\
    \ of the LISP\n   architecture and documents, coupled with enthusiasm for making\
    \ LISP a\n   practical and incremental transition for the Internet.\n   The authors\
    \ would like to gratefully acknowledge many people who have\n   contributed discussions\
    \ and ideas to the making of this proposal.\n   They include Scott Brim, Andrew\
    \ Partan, John Zwiebel, Jason Schiller,\n   Lixia Zhang, Dorian Kim, Peter Schoenmaker,\
    \ Vijay Gill, Geoff Huston,\n   David Conrad, Mark Handley, Ron Bonica, Ted Seely,\
    \ Mark Townsley,\n   Chris Morrow, Brian Weis, Dave McGrew, Peter Lothberg, Dave\
    \ Thaler,\n   Eliot Lear, Shane Amante, Ved Kafle, Olivier Bonaventure, Luigi\n\
    \   Iannone, Robin Whittle, Brian Carpenter, Joel Halpern, Terry\n   Manderson,\
    \ Roger Jorgensen, Ran Atkinson, Stig Venaas, Iljitsch van\n   Beijnum, Roland\
    \ Bless, Dana Blair, Bill Lynch, Marc Woolward, Damien\n   Saucez, Damian Lezama,\
    \ Attilla De Groot, Parantap Lahiri, David\n   Black, Roque Gagliano, Isidor Kouvelas,\
    \ Jesper Skriver, Fred Templin,\n   Margaret Wasserman, Sam Hartman, Michael Hofling,\
    \ Pedro Marques, Jari\n   Arkko, Gregg Schudel, Srinivas Subramanian, Amit Jain,\
    \ Xu Xiaohu,\n   Dhirendra Trivedi, Yakov Rekhter, John Scudder, John Drake, Dimitri\n\
    \   Papadimitriou, Ross Callon, Selina Heimlich, Job Snijders, Vina\n   Ermagan,\
    \ Albert Cabellos, Fabio Maino, Victor Moreno, Chris White,\n   Clarence Filsfils,\
    \ and Alia Atlas.\n   This work originated in the Routing Research Group (RRG)\
    \ of the IRTF.\n   An individual submission was converted into the IETF LISP working\n\
    \   group document that became this RFC.\n   The LISP working group would like\
    \ to give a special thanks to Jari\n   Arkko, the Internet Area AD at the time\
    \ that the set of LISP\n   documents were being prepared for IESG last call, and\
    \ for his\n   meticulous reviews and detailed commentaries on the 7 working group\n\
    \   last call documents progressing toward experimental RFCs.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Dino Farinacci\n   Cisco Systems\n   Tasman Drive\n  \
    \ San Jose, CA  95134\n   USA\n   EMail: farinacci@gmail.com\n   Vince Fuller\n\
    \   EMail: vaf@vaf.net\n   Dave Meyer\n   Cisco Systems\n   170 Tasman Drive\n\
    \   San Jose, CA\n   USA\n   EMail: dmm@1-4-5.net\n   Darrel Lewis\n   Cisco Systems\n\
    \   170 Tasman Drive\n   San Jose, CA\n   USA\n   EMail: darlewis@cisco.com\n"
