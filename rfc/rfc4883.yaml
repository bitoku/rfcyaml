- title: __initial_text__
  contents:
  - '   Benchmarking Terminology for Resource Reservation Capable Routers

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2007).\n"
- title: Abstract
  contents:
  - "Abstract\n   The primary purpose of this document is to define terminology\n\
    \   specific to the benchmarking of resource reservation signaling of\n   Integrated\
    \ Services (IntServ) IP routers.  These terms can be used in\n   additional documents\
    \ that define benchmarking methodologies for\n   routers that support resource\
    \ reservation or reporting formats for\n   the benchmarking measurements.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Existing Definitions ............................................3\n  \
    \ 3. Definition of Terms .............................................4\n    \
    \  3.1. Traffic Flow Types .........................................4\n      \
    \     3.1.1. Data Flow ...........................................4\n        \
    \   3.1.2. Distinguished Data Flow .............................4\n          \
    \ 3.1.3. Best-Effort Data Flow ...............................5\n      3.2. Resource\
    \ Reservation Protocol Basics .......................5\n           3.2.1. QoS\
    \ Session .........................................5\n           3.2.2. Resource\
    \ Reservation Protocol .......................6\n           3.2.3. Resource Reservation\
    \ Capable Router .................7\n           3.2.4. Reservation State ...................................7\n\
    \           3.2.5. Resource Reservation Protocol Orientation ...........8\n  \
    \    3.3. Router Load Factors ........................................9\n    \
    \       3.3.1. Best-Effort Traffic Load Factor .....................9\n      \
    \     3.3.2. Distinguished Traffic Load Factor ..................10\n        \
    \   3.3.3. Session Load Factor ................................11\n          \
    \ 3.3.4. Signaling Intensity Load Factor ....................11\n           3.3.5.\
    \ Signaling Burst Load Factor ........................12\n      3.4. Performance\
    \ Metrics .......................................13\n           3.4.1. Signaling\
    \ Message Handling Time ....................13\n           3.4.2. Distinguished\
    \ Traffic Delay ........................14\n           3.4.3. Best-effort Traffic\
    \ Delay ..........................15\n           3.4.4. Signaling Message Deficit\
    \ ..........................15\n           3.4.5. Session Maintenance Capacity\
    \ .......................16\n      3.5. Router Load Conditions and Scalability\
    \ Limit ..............17\n           3.5.1. Loss-Free Condition ................................17\n\
    \           3.5.2. Lossy Condition ....................................18\n  \
    \         3.5.3. QoS Compliant Condition ............................19\n    \
    \       3.5.4. Not QoS Compliant Condition ........................20\n      \
    \     3.5.5. Scalability Limit ..................................20\n   4. Security\
    \ Considerations ........................................21\n   5. Acknowledgements\
    \ ...............................................21\n   6. References .....................................................21\n\
    \      6.1. Normative References ......................................21\n  \
    \    6.2. Informative References ....................................21\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Signaling-based resource reservation using the IntServ paradigm\
    \ [4]\n   is an important part of the different Quality of Service (QoS)\n   provisioning\
    \ approaches.  Therefore, network operators who are\n   planning to deploy signaling-based\
    \ resource reservation may want to\n   examine the scalability limitations of\
    \ reservation capable routers\n   and the impact of signaling on their data forwarding\
    \ performance.\n   An objective way of quantifying the scalability constraints\
    \ of QoS\n   signaling is to perform measurements on routers that are capable\
    \ of\n   IntServ-based resource reservation.  This document defines\n   terminology\
    \ for a specific set of tests that vendors or network\n   operators can carry\
    \ out to measure and report the signaling\n   performance characteristics of router\
    \ devices that support resource\n   reservation protocols.  The results of these\
    \ tests provide comparable\n   data for different products, and thus support the\
    \ decision-making\n   process before purchase.  Moreover, these measurements provide\
    \ input\n   characteristics for the dimensioning of a network in which resources\n\
    \   are provisioned dynamically by signaling.  Finally, the tests are\n   applicable\
    \ for characterizing the impact of the resource reservation\n   signaling on the\
    \ forwarding performance of the routers.\n   This benchmarking terminology document\
    \ is based on the knowledge\n   gained by examination of (and experimentation\
    \ with) different\n   resource reservation protocols: the IETF standard Resource\n\
    \   ReSerVation Protocol (RSVP) [5], Next Steps in Signaling (NSIS)\n   [6][7][8][9],\
    \ and several experimental ones, such as YESSIR (Yet\n   Another Sender Session\
    \ Internet Reservation) [10], ST2+ [11], Session\n   Description Protocol (SDP)\
    \ [12], Boomerang [13], and Ticket [14].\n   Some of these protocols were also\
    \ analyzed by the IETF NSIS working\n   group [15].  Although at the moment the\
    \ authors are only aware of\n   resource reservation capable router products that\
    \ interpret RSVP,\n   this document defines terms that are valid in general and\
    \ not\n   restricted to any of the protocols listed above.\n   In order to avoid\
    \ any confusion, we would like to emphasize that this\n   terminology considers\
    \ only signaling protocols that provide IntServ\n   resource reservation; for\
    \ example, techniques in the DiffServ toolbox\n   are predominantly beyond our\
    \ scope.\n"
- title: 2.  Existing Definitions
  contents:
  - "2.  Existing Definitions\n   RFC 1242 \"Benchmarking Terminology for Network\
    \ Interconnection\n   Devices\" [1] and RFC 2285 \"Benchmarking Terminology for\
    \ LAN Switching\n   Devices\" [3] contain discussions and definitions for a number\
    \ of\n   terms relevant to the benchmarking of signaling performance of\n   reservation-capable\
    \ routers and should be consulted before attempting\n   to make use of this document.\n\
    \   Additionally, this document defines terminology in a way that is\n   consistent\
    \ with the terms used by the Next Steps in Signaling working\n   group laid out\
    \ in [6][7][8].\n   For the sake of clarity and continuity, this document adopts\
    \ the\n   template for definitions set out in Section 2 of RFC 1242.\n   Definitions\
    \ are indexed and grouped together into different sections\n   for ease of reference.\n\
    \   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\"\
    ,\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",  \"MAY\", and \"OPTIONAL\"\
    \ in this\n   document are to be interpreted as described in RFC 2119 [2].\n"
- title: 3.  Definition of Terms
  contents:
  - '3.  Definition of Terms

    '
- title: 3.1.  Traffic Flow Types
  contents:
  - "3.1.  Traffic Flow Types\n   This group of definitions describes traffic flow\
    \ types forwarded by\n   resource reservation capable routers.\n"
- title: 3.1.1.  Data Flow
  contents:
  - "3.1.1.  Data Flow\n   Definition:\n      A data flow is a stream of data packets\
    \ from one sender to one or\n      more receivers, where each packet has a flow\
    \ identifier unique to\n      the flow.\n   Discussion:\n      The flow identifier\
    \ can be an arbitrary subset of the packet\n      header fields that uniquely\
    \ distinguishes the flow from others.\n      For example, the 5-tuple \"source\
    \ address; source port; destination\n      address; destination port; protocol\
    \ number\" is commonly used for\n      this purpose (where port numbers are applicable).\
    \  It is also\n      possible to take advantage of the Flow Label field of IPv6\n\
    \      packets.  For more comments on flow identification, refer to [6].\n"
- title: 3.1.2.  Distinguished Data Flow
  contents:
  - "3.1.2.  Distinguished Data Flow\n   Definition:\n      Distinguished data flows\
    \ are flows that resource reservation\n      capable routers intentionally treat\
    \ better or worse than best-\n      effort data flows, according to a QoS agreement\
    \ defined for the\n      distinguished flow.\n   Discussion:\n      Routers classify\
    \ the packets of distinguished data flows and\n      identify the data flow to\
    \ which they belong.\n      The most common usage of the distinguished data flow\
    \ is to get\n      higher-priority treatment than that of best-effort data flows\
    \ (see\n      the next definition).  In these cases, a distinguished data flow\n\
    \      is sometimes referred to as a \"premium data flow\".  Nevertheless,\n \
    \     theoretically it is possible to require worse treatment than that\n    \
    \  of best-effort flows.\n"
- title: 3.1.3.  Best-Effort Data Flow
  contents:
  - "3.1.3.  Best-Effort Data Flow\n   Definition:\n      Best-effort data flows are\
    \ flows that are not treated in any\n      special manner by resource reservation\
    \ capable routers; thus,\n      their packets are served (forwarded) in some default\
    \ way.\n   Discussion:\n      \"Best-effort\" means that the router makes its\
    \ best effort to\n      forward the data packet quickly and safely, but does not\
    \ guarantee\n      anything (e.g., delay or loss probability).  This type of traffic\n\
    \      is the most common in today's Internet.\n      Packets that belong to best-effort\
    \ data flows need not be\n      classified by the routers; that is, the routers\
    \ don't need to find\n      a related reservation session in order to find out\
    \ to which\n      treatment the packet is entitled.\n"
- title: 3.2.  Resource Reservation Protocol Basics
  contents:
  - "3.2.  Resource Reservation Protocol Basics\n   This group of definitions applies\
    \ to signaling-based resource\n   reservation protocols implemented by IP router\
    \ devices.\n"
- title: 3.2.1.  QoS Session
  contents:
  - "3.2.1.  QoS Session\n   Definition:\n      A QoS session is an application layer\
    \ concept, shared between a\n      set of network nodes, that pertains to a specific\
    \ set of data\n      flows.  The information associated with the session includes\
    \ the\n      data required to identify the set of data flows in addition to a\n\
    \      specification of the QoS treatment they require.\n   Discussion:\n    \
    \  A QoS session is an end-to-end relationship.  Whenever end-nodes\n      decide\
    \ to obtain special QoS treatment for their data\n      communication, they set\
    \ up a QoS session.  As part of the process,\n      they or their proxies make\
    \ a QoS agreement with the network,\n      specifying their data flows and the\
    \ QoS treatment that the flows\n      require.\n      It is possible for the same\
    \ QoS session to span multiple network\n      domains that have different resource\
    \ provisioning architectures.\n      In this document, however, we only deal with\
    \ the case where the\n      QoS session is realized over an IntServ architecture.\
    \  It is\n      assumed that sessions will be established using signaling messages\n\
    \      of a resource reservation protocol.\n      QoS sessions must have unique\
    \ identifiers; it must be possible to\n      determine to which QoS session a\
    \ given signaling message pertains.\n      Therefore, each signaling message should\
    \ include the identifier of\n      its corresponding session.  As an example,\
    \ in the case of RSVP,\n      the \"session specification\" identifies the QoS\
    \ session plus refers\n      to the data flow; the \"flowspec\" specifies the\
    \ desired QoS\n      treatment and the \"filter spec\" defines the subset of data\
    \ packets\n      in the data flow that receive the QoS defined by the flowspec.\n\
    \      QoS sessions can be unicast or multicast depending on the number\n    \
    \  of participants.  In a multicast group, there can be several data\n      traffic\
    \ sources and destinations.  Here the QoS agreement does not\n      have to be\
    \ the same for each branch of the multicast tree\n      forwarding the data flow\
    \ of the group.  Instead, a dedicated\n      network resource in a router can\
    \ be shared among many traffic\n      sources from the same multicast group (cf.\
    \ multicast reservation\n      styles in the case of RSVP).\n   Issues:\n    \
    \  Even though QoS sessions are considered to be unique, resource\n      reservation\
    \ capable routers might aggregate them and allocate\n      network resources to\
    \ these aggregated sessions at once.  The\n      aggregation can be based on similar\
    \ data flow attributes (e.g.,\n      similar destination addresses) or it can\
    \ combine arbitrary\n      sessions as well.  While reservation aggregation significantly\n\
    \      lightens the signaling processing task of a resource reservation\n    \
    \  capable router, it also requires the administration of the\n      aggregated\
    \ QoS sessions and might also lead to the violation of\n      the quality guaranties\
    \ referring to individual data flows within\n      an aggregation [16].\n"
- title: 3.2.2.  Resource Reservation Protocol
  contents:
  - "3.2.2.  Resource Reservation Protocol\n   Definition:\n      Resource reservation\
    \ protocols define signaling messages and\n      message processing rules used\
    \ to control resource allocation in\n      IntServ architectures.\n   Discussion:\n\
    \      It is the signaling messages of a resource reservation protocol\n     \
    \ that carry the information related to QoS sessions.  This\n      information\
    \ includes a session identifier, the actual QoS\n      parameters, and possibly\
    \ flow descriptors.\n      The message processing rules of the signaling protocols\
    \ ensure\n      that signaling messages reach all network nodes concerned.  Some\n\
    \      resource reservation protocols (e.g., RSVP, NSIS QoS NSLP [8]) are\n  \
    \    only concerned with this, i.e., carrying the QoS-related\n      information\
    \ to all the appropriate network nodes, without being\n      aware of its content.\
    \  This latter approach allows changing the\n      way the QoS parameters are\
    \ described, and different kinds of\n      provisioning can be realized without\
    \ the need to change the\n      protocol itself.\n"
- title: 3.2.3.  Resource Reservation Capable Router
  contents:
  - "3.2.3.  Resource Reservation Capable Router\n   Definition:\n      A router is\
    \ resource reservation capable (it supports resource\n      reservation) if it\
    \ is able to interpret signaling messages of a\n      resource reservation protocol,\
    \ and based on these messages is able\n      to adjust the management of its flow\
    \ classifiers and network\n      resources so as to conform to the content of\
    \ the signaling\n      messages.\n   Discussion:\n      Routers capture signaling\
    \ messages and manipulate reservation\n      states and/or reserved network resources\
    \ according to the content\n      of the messages.  This ensures that the flows\
    \ are treated as their\n      specified QoS requirements indicate.\n"
- title: 3.2.4.  Reservation State
  contents:
  - "3.2.4.  Reservation State\n   Definition:\n      A reservation state is the set\
    \ of entries in the router's memory\n      that contain all relevant information\
    \ about a given QoS session\n      registered with the router.\n   Discussion:\n\
    \      States are needed because IntServ-related resource reservation\n      protocols\
    \ require the routers to keep track of QoS session and\n      data-flow-related\
    \ metadata.  The reservation state includes the\n      parameters of the QoS treatment,\
    \ the description of how and where\n      to forward the incoming signaling messages,\
    \ refresh timing\n      information, etc.\n      Based on how reservation states\
    \ are stored in a reservation\n      capable router, the routers can be categorized\
    \ into two classes:\n      Hard-state resource reservation protocols (e.g., ST2\
    \ [11]) require\n      routers to store the reservation states permanently, established\n\
    \      by a setup signaling primitive, until the router is explicitly\n      informed\
    \ that the QoS session is canceled.\n      There are also soft-state resource\
    \ reservation capable routers,\n      where there are no permanent reservation\
    \ states, and each state\n      has to be regularly refreshed by appropriate refresh\
    \ signaling\n      messages.  If no refresh signaling message arrives during a\n\
    \      certain period, then the router stops the maintenance of the QoS\n    \
    \  session assuming that the end-points do not intend to keep the\n      session\
    \ up any longer or the communication lines are broken\n      somewhere along the\
    \ data path.  This feature makes soft-state\n      resource reservation capable\
    \ routers more robust than hard-state\n      routers, since no failures can cause\
    \ resources to stay permanently\n      stuck in the routers.  (Note that it is\
    \ still possible to have an\n      explicit teardown message in soft-state protocols\
    \ for quicker\n      resource release.)\n   Issues:\n      Based on the initiating\
    \ point of the refresh messages, soft-state\n      resource reservation protocols\
    \ can be divided into two groups.\n      First, there are protocols where it is\
    \ the responsibility of the\n      end-points or their proxies to initiate refresh\
    \ messages.  These\n      messages are forwarded along the path of the data flow\
    \ refreshing\n      the corresponding reservation states in each router affected\
    \ by\n      the flow.  Second, there are other protocols, where routers and\n\
    \      end-points have their own schedule for the reservation state\n      refreshes\
    \ and they signal these refreshes to the neighboring\n      routers.\n"
- title: 3.2.5.  Resource Reservation Protocol Orientation
  contents:
  - "3.2.5.  Resource Reservation Protocol Orientation\n   Definition:\n      The\
    \ orientation of a resource reservation protocol tells which end\n      of the\
    \ protocol communication initiates the allocation of the\n      network resources.\
    \  Thus, the protocol can be sender- or\n      receiver-oriented, depending on\
    \ the location of the data flow\n      source (sender) and destination (receiver)\
    \ compared to the\n      reservation initiator.\n   Discussion:\n      In the\
    \ case of sender-oriented protocols (in some sources referred\n      to as sender-initiated\
    \ protocols), the resource reservation\n      propagates in the same direction(s)\
    \ as of the data flow(s).\n      Consequently, in the case of receiver-oriented\
    \ protocols, the\n      signaling messages reserving resources are forwarded backward\
    \ on\n      the path of the data flow.  Due to the asymmetric routing nature\n\
    \      of the Internet, in this latter case, the path of the desired data\n  \
    \    flow should be known before the reservation initiator would be\n      able\
    \ to send the resource allocation messages.  For example, in\n      the case of\
    \ RSVP, the RSVP PATH message, traveling from the data\n      flow sources towards\
    \ the destinations, first marks the path of the\n      data flow on which the\
    \ resource allocation messages will travel\n      backward.\n      This definition\
    \ considers only protocols that reserve resources\n      for just one data flow\
    \ between the end-nodes.  The reservation\n      orientation of protocols that\
    \ reserve more than one data flow is\n      not defined here.\n   Issues:\n  \
    \    The location of the reservation initiator affects the basics of\n      the\
    \ resource reservation protocols and therefore is an important\n      aspect of\
    \ characterization.  Most importantly, in the case of\n      multicast QoS sessions,\
    \ the sender-oriented protocols require the\n      traffic sources to maintain\
    \ a list of receivers and send their\n      allocation messages considering the\
    \ different requirements of the\n      receivers.  Using multicast QoS sessions,\
    \ the receiver-oriented\n      protocols enable the receivers to manage their\
    \ own resource\n      allocation requests and thus ease the task of the sources.\n"
- title: 3.3.  Router Load Factors
  contents:
  - "3.3.  Router Load Factors\n      When a router is under \"load\", it means that\
    \ there are tasks its\n      CPU(s) must attend to, and/or that its memory contains\
    \ data it\n      must keep track of, and/or that its interface buffers are utilized\n\
    \      to some extent, etc.  Unfortunately, we cannot assume that the\n      full\
    \ internal state of a router can be monitored during a\n      benchmark; rather,\
    \ we must consider the router to be a black box.\n      We need to look at router\
    \ \"load\" in a way that makes this \"load\"\n      measurable and controllable.\
    \  Instead of focusing on the internal\n      processes of a router, we will consider\
    \ the external, and\n      therefore observable, measurable and controllable processes\
    \ that\n      result in \"load\".\n      In this section we introduce several\
    \ ways of creating \"load\" on a\n      router; we will refer to these as \"load\
    \ factors\" henceforth.\n      These load factors are defined so that they each\
    \ impact the\n      performance of the router in a different way (or by different\n\
    \      means), by utilizing different components of a resource\n      reservation\
    \ capable router as separately as possible.\n      During a benchmark, the performance\
    \ of the device under test will\n      have to be measured under different controlled\
    \ load conditions,\n      that is, with different values of these load factors.\n"
- title: 3.3.1.  Best-Effort Traffic Load Factor
  contents:
  - "3.3.1.  Best-Effort Traffic Load Factor\n   Definition:\n      The best-effort\
    \ traffic load factor is defined as the number and\n      length of equal-sized\
    \ best-effort data packets that traverse the\n      router in a second.\n   Discussion:\n\
    \      Forwarding the best-effort data packets, which requires obtaining\n   \
    \   the routing information and transferring the data packet between\n      network\
    \ interfaces, requires processing power.  This load factor\n      creates load\
    \ on the CPU(s) and buffers of the router.\n      For the purpose of benchmarking,\
    \ we define a traffic flow as a\n      stream of equal-sized packets with even\
    \ interpacket delay.  It is\n      possible to specify traffic with varying packet\
    \ sizes as a\n      superposition of multiple best-effort traffic flows as they\
    \ are\n      defined here.\n   Issues:\n      The same amount of data segmented\
    \ into differently sized packets\n      causes different amounts of load on the\
    \ router, which has to be\n      considered during benchmarking measurements.\
    \  The measurement unit\n      of this load factor reflects this as well.\n  \
    \ Measurement unit:\n      This load factor has a composite unit of [packets per\
    \ second\n      (pps); bytes].  For example, [5 pps; 100 bytes] means five pieces\n\
    \      of one-hundred-byte packets per second.\n"
- title: 3.3.2.  Distinguished Traffic Load Factor
  contents:
  - "3.3.2.  Distinguished Traffic Load Factor\n   Definition:\n      The distinguished\
    \ traffic load factor is defined as the number and\n      length of the distinguished\
    \ data packets that traverse the router\n      in a second.\n   Discussion:\n\
    \      Similarly to the best-effort data, forwarding the distinguished\n     \
    \ data packets requires obtaining the routing information and\n      transferring\
    \ the data packet between network interfaces.  However,\n      in this case packets\
    \ have to be classified as well, which requires\n      additional processing capacity.\n\
    \      For the purpose of benchmarking, we define a traffic flow as a\n      stream\
    \ of equal-sized packets with even interpacket delay.  It is\n      possible to\
    \ specify traffic with varying packet sizes as a\n      superposition of multiple\
    \ distinguished traffic flows as they are\n      defined here.\n   Issues:\n \
    \     Just as in the best-effort case, the same amount of data segmented\n   \
    \   into differently sized packets causes different amounts of load on\n     \
    \ the router, which has to be considered during the benchmarking\n      measurements.\
    \  The measurement unit of this load factor reflects\n      this as well.\n  \
    \ Measurement unit:\n      This load factor has a composite unit of [packets per\
    \ second\n      (pps); bytes].  For example, [5 pps; 100 bytes] means five pieces\n\
    \      of one-hundred-byte packets per second.\n"
- title: 3.3.3.  Session Load Factor
  contents:
  - "3.3.3.  Session Load Factor\n   Definition:\n      The session load factor is\
    \ the number of QoS sessions the router\n      is keeping track of.\n   Discussion:\n\
    \      Resource reservation capable routers maintain reservation states\n    \
    \  to keep track of QoS sessions.  Obviously, the more reservation\n      states\
    \ are registered with the router, the more complex the\n      traffic classification\
    \ becomes, and the more time it takes to look\n      up the corresponding resource\
    \ reservation state.  Moreover, not\n      only the traffic flows, but also the\
    \ signaling messages that\n      control the reservation states have to be identified\
    \ first, before\n      taking any other action, and this kind of classification\
    \ also\n      means extra work for the router.\n      In the case of soft-state\
    \ resource reservation protocols, the\n      session load also affects reservation\
    \ state maintenance.  For\n      example, the supervision of timers that watchdog\
    \ the reservation\n      state refreshes may cause further load on the router.\n\
    \      This load factor utilizes the CPU(s), the main memory, and the\n      session\
    \ management logic (e.g., content addressable memory), if\n      any, of the resource\
    \ reservation capable router.\n   Measurement unit:\n      This load component\
    \ is measured by the number of QoS sessions that\n      impact the router.\n"
- title: 3.3.4.  Signaling Intensity Load Factor
  contents:
  - "3.3.4.  Signaling Intensity Load Factor\n   Definition:\n      The signaling\
    \ intensity load factor is the number of signaling\n      messages that are presented\
    \ at the input interfaces of the router\n      during one second.\n   Discussion:\n\
    \      The processing of signaling messages requires processor power that\n  \
    \    raises the load on the control plane of the router.\n      In routers where\
    \ the control plane and the data plane are not\n      totally independent (e.g.,\
    \ certain parts of the tasks are served\n      by the same processor; or the architecture\
    \ has common memory\n      buffers, transfer buses or any other resources) the\
    \ signaling load\n      can have an impact on the router's packet forwarding performance\n\
    \      as well.\n      Naturally, just as everywhere else in this document, the\
    \ term\n      \"signaling messages\" refer only to the resource reservation\n\
    \      protocol related primitives.\n   Issues:\n      Most resource reservation\
    \ protocols have several protocol\n      primitives realized by different signaling\
    \ message types.  Each of\n      these message types may require a different amount\
    \ of processing\n      power from the router.  This fact has to be considered\
    \ during the\n      benchmarking measurements.\n   Measurement unit:\n      The\
    \ unit of this factor is signaling messages/second.\n"
- title: 3.3.5.  Signaling Burst Load Factor
  contents:
  - "3.3.5.  Signaling Burst Load Factor\n   Definition:\n      The signaling burst\
    \ load factor is defined as the number of\n      signaling messages that arrive\
    \ to one input port of the router\n      back-to-back ([1]), causing persistent\
    \ load on the signaling\n      message handler.\n   Discussion:\n      The definition\
    \ focuses on one input port only and does not\n      consider the traffic arriving\
    \ at the other input ports.  As a\n      consequence, a set of messages arriving\
    \ at different ports, but\n      with such a timing that would be a burst if the\
    \ messages arrived\n      at the same port, is not considered to be a burst. \
    \ The reason for\n      this is that it is not guaranteed in a black-box test\
    \ that this\n      would have the same effect on the router as a burst (incoming\
    \ at\n      the same interface) has.\n      This definition conforms to the burst\
    \ definition given in [3].\n   Issues:\n      Most of the resource reservation\
    \ protocols have several protocol\n      primitives realized by different signaling\
    \ message types.  Bursts\n      built up of different messages may have a different\
    \ effect on the\n      router.  Consequently, during measurements the content\
    \ of the\n      burst has to be considered as well.\n      Likewise, the first\
    \ one of multiple idempotent signaling messages\n      that each accomplish exactly\
    \ the same end will probably not take\n      the same amount of time to be processed\
    \ as subsequent ones.\n      Benchmarking methodology will have to consider the\
    \ intended effect\n      of the signaling messages, as well as the state of the\
    \ router at\n      the time of their arrival.\n   Measurement unit:\n      This\
    \ load factor is characterized by the number of messages in the\n      burst.\n"
- title: 3.4.  Performance Metrics
  contents:
  - "3.4.  Performance Metrics\n   This group of definitions is a collection of measurable\
    \ quantities\n   that describe the performance impact the different load components\n\
    \   have on the router.\n   During a benchmark, the values of these metrics will\
    \ have to be\n   measured under different load conditions.\n"
- title: 3.4.1.  Signaling Message Handling Time
  contents:
  - "3.4.1.  Signaling Message Handling Time\n   Definition:\n      The signaling\
    \ message handling time (or, in short, signal handling\n      time) is the latency\
    \ ([1], for store-and-forward devices) of a\n      signaling message passing through\
    \ the router.\n   Discussion:\n      The router interprets the signaling messages,\
    \ acts based on their\n      content and usually forwards them in an unmodified\
    \ or modified\n      form.  Thus the message handling time is usually longer than\
    \ the\n      forwarding time of data packets of the same size.\n      There might\
    \ be signaling message primitives, however, that are\n      drained or generated\
    \ by the router, like certain refresh messages.\n      In this case, the signal\
    \ handling time is not necessarily\n      measureable, therefore it is not defined\
    \ for such messages.\n      In the case of signaling messages that carry information\n\
    \      pertaining to multicast flows, the router might issue multiple\n      signaling\
    \ messages after processing them.  In this case, by\n      definition, the signal\
    \ handling time is the latency between the\n      incoming signaling message and\
    \ the last outgoing signaling message\n      related to the received one.\n  \
    \    The signal handling time is an important characteristic as it\n      directly\
    \ affects the setup time of a QoS session.\n   Issues:\n      The signal handling\
    \ time may be dependent on the type of the\n      signaling message.  For example,\
    \ it usually takes a shorter time\n      for the router to remove a reservation\
    \ state than to set it up.\n      This fact has to be considered during the benchmarking\
    \ process.\n      As noted above, the first one of multiple idempotent signaling\n\
    \      messages that each accomplish exactly the same end will probably\n    \
    \  not take the same amount of time to be processed as subsequent\n      ones.\
    \  Benchmarking methodology will have to consider the intended\n      effect of\
    \ the signaling messages, as well as the state of the\n      router at the time\
    \ of their arrival.\n   Measurement unit:\n      The dimension of the signaling\
    \ message handling time is the\n      second, reported with a resolution sufficient\
    \ to distinguish\n      between different events/DUTs (e.g., milliseconds).  Reported\n\
    \      results MUST clearly indicate the time unit used.\n"
- title: 3.4.2.  Distinguished Traffic Delay
  contents:
  - "3.4.2.  Distinguished Traffic Delay\n   Definition:\n      Distinguished traffic\
    \ delay is the latency ([1], for store-and-\n      forward devices) of a distinguished\
    \ data packet passing through\n      the tested router device.\n   Discussion:\n\
    \      Distinguished traffic packets must be classified first in order to\n  \
    \    assign the network resources dedicated to the flow.  The time of\n      the\
    \ classification is added to the usual forwarding time\n      (including the queuing)\
    \ that a router would spend on the packet\n      without any resource reservation\
    \ capability.  This classification\n      procedure might be quite time consuming\
    \ in routers with vast\n      amounts of reservation states.\n      There are\
    \ routers where the processing power is shared between the\n      control plane\
    \ and the data plane.  This means that the processing\n      of signaling messages\
    \ may have an impact on the data forwarding\n      performance of the router.\
    \  In this case, the distinguished\n      traffic delay metric also indicates\
    \ the influence the two planes\n      have on each other.\n   Issues:\n      Queuing\
    \ of the incoming data packets in routers can bias this\n      metric, so the\
    \ measurement procedures have to consider this\n      effect.\n   Measurement\
    \ unit:\n      The dimension of the distinguished traffic delay time is the\n\
    \      second, reported with resolution sufficient to distinguish between\n  \
    \    different events/DUTs (e.g., millisecond units).  Reported results\n    \
    \  MUST clearly indicate the time unit used.\n"
- title: 3.4.3.  Best-effort Traffic Delay
  contents:
  - "3.4.3.  Best-effort Traffic Delay\n   Definition:\n      Best-effort traffic\
    \ delay is the latency of a best-effort data\n      packet traversing the tested\
    \ router device.\n   Discussion:\n      If the processing power of the router\
    \ is shared between the\n      control and data plane, then the processing of\
    \ signaling messages\n      may have an impact on the data forwarding performance\
    \ of the\n      router.  In this case, the best-effort traffic delay metric is\
    \ an\n      indicator of the influence the two planes have on each other.\n  \
    \ Issues:\n      Queuing of the incoming data packets in routers can bias this\n\
    \      metric as well, so measurement procedures have to consider this\n     \
    \ effect.\n   Measurement unit:\n      The dimension of the best-effort traffic\
    \ delay is the second,\n      reported with resolution sufficient to distinguish\
    \ between\n      different events/DUTs (e.g., millisecond units).  Reported results\n\
    \      MUST clearly indicate the time unit used.\n"
- title: 3.4.4.  Signaling Message Deficit
  contents:
  - "3.4.4.  Signaling Message Deficit\n   Definition:\n      Signaling message deficit\
    \ is one minus the ratio of the actual and\n      the expected number of signaling\
    \ messages leaving a resource\n      reservation capable router.\n   Discussion:\n\
    \      This definition gives the same value as the ratio of the lost\n      (that\
    \ is, not forwarded or not generated) and the expected\n      messages.  The above\
    \ calculation must be used because the number\n      of lost messages cannot be\
    \ measured directly.\n      There are certain types of signaling messages that\
    \ reservation\n      capable routers are required to forward as soon as their\n\
    \      processing is finished.  However, due to lack of resources or\n      other\
    \ reasons, the forwarding or even the processing of these\n      signaling messages\
    \ might not take place.\n      Certain other kinds of signaling messages must\
    \ be generated by the\n      router in the absence of any corresponding incoming\
    \ message.  It\n      is possible that an overloaded router does not have the\
    \ resources\n      necessary to generate such a message.\n      To characterize\
    \ these situations we introduce the signaling\n      message deficit metric that\
    \ expresses the ratio of the signaling\n      messages that have actually left\
    \ the router and those ones that\n      were expected to leave the router.  We\
    \ subtract this ratio from\n      one in order to obtain a loss-type metric instead\
    \ of a \"message\n      survival metric\".\n      Since the most frequent reason\
    \ for signaling message deficit is\n      high router load, this metric is suitable\
    \ for sounding out the\n      scalability limits of resource reservation capable\
    \ routers.\n      During the measurements one must be able to determine whether\
    \ a\n      signaling message is still in the queues of the router or if it\n \
    \     has already been dropped.  For this reason we define a signaling\n     \
    \ message as lost if no forwarded signaling message is emitted\n      within a\
    \ reasonably long time period.  This period is defined\n      along with the benchmarking\
    \ methodology.\n   Measurement unit:\n      This measure has no unit; it is expressed\
    \ as a real number, which\n      is between zero and one, including the limits.\n"
- title: 3.4.5.  Session Maintenance Capacity
  contents:
  - "3.4.5.  Session Maintenance Capacity\n   Definition:\n      The session maintenance\
    \ capacity metric is used in the case of\n      soft-state resource reservation\
    \ protocols only.  It is defined as\n      the ratio of the number of QoS sessions\
    \ actually being maintained\n      and the number of QoS sessions that should\
    \ have been maintained.\n   Discussion:\n      For soft-state protocols maintaining\
    \ a QoS session means\n      refreshing the reservation states associated with\
    \ it.\n      When a soft-state resource reservation capable router is\n      overloaded,\
    \ it may happen that the router is not able to refresh\n      all the registered\
    \ reservation states, because it does not have\n      the time to run the state\
    \ refresh task.  In this case, sooner or\n      later some QoS sessions will be\
    \ lost even if the endpoints still\n      require their maintenance.\n      The\
    \ session maintenance capacity sounds out the maximal number of\n      QoS sessions\
    \ that the router is capable of maintaining.\n   Issues:\n      The actual process\
    \ of session maintenance is protocol and\n      implementation dependent, thus\
    \ so is the method to examine whether\n      a session is maintained or not.\n\
    \      In the case of soft-state resource reservation protocols, where\n     \
    \ the network nodes are responsible for generating the refresh\n      messages,\
    \ a router that fails to maintain a QoS session may not\n      emit refresh signaling\
    \ messages either.  This has direct\n      consequences on the signaling message\
    \ deficit metric.\n   Measurement unit:\n      This measure has no unit; it is\
    \ expressed as a real number, which\n      is between zero and one (including\
    \ the limits).\n"
- title: 3.5.  Router Load Conditions and Scalability Limit
  contents:
  - "3.5.  Router Load Conditions and Scalability Limit\n   Depending mainly, but\
    \ not exclusively, on the overall load of a\n   router, it can be in exactly one\
    \ of the following four conditions at\n   a time: loss-free and QoS compliant;\
    \ lossy and QoS compliant; loss-\n   free but not QoS compliant; and neither loss-free\
    \ nor QoS compliant.\n   These conditions are defined below, along with the scalability\
    \ limit.\n"
- title: 3.5.1.  Loss-Free Condition
  contents:
  - "3.5.1.  Loss-Free Condition\n   Definition:\n      A router is in loss-free condition,\
    \ or loss-free state, if and\n      only if it is able to perform its tasks correctly\
    \ and in a timely\n      fashion.\n   Discussion:\n      All existing routers\
    \ have finite buffer memory and finite\n      processing power.  If a router is\
    \ in loss-free state, the buffers\n      of the router still contain enough free\
    \ space to accommodate the\n      next incoming packet when it arrives.  Also,\
    \ the router has enough\n      processing power to cope with all its tasks, thus\
    \ all required\n      operations are carried out within the time the protocol\n\
    \      specification allows; or, if this time is not specified by the\n      protocol,\
    \ then in \"reasonable time\" (which is then defined in the\n      benchmarks).\
    \  Similar considerations can be applied to other\n      resources a router may\
    \ have, if any; in loss-free states, the\n      utilization of these resources\
    \ still allows the router to carry\n      out its tasks in accordance with applicable\
    \ protocol\n      specifications and in \"reasonable time\".\n      Note that\
    \ loss-free states as defined above are not related to the\n      reservation\
    \ states of resource reservation protocols.  The word\n      \"state\" is used\
    \ to mean \"condition\".\n      Also note that it is irrelevant what internal\
    \ reason causes a\n      router to fail to perform in accordance with protocol\n\
    \      specifications or in \"reasonable time\"; if it is not high load but\n\
    \      -- for example -- an implementation error that causes the device\n    \
    \  to perform inadequately, it still cannot be said to be in a loss-\n      free\
    \ state.  The same applies to the random early dropping of\n      packets in order\
    \ to prevent congestion.  In a black-box\n      measurement it is impossible to\
    \ determine whether a packet was\n      dropped as part of a congestion control\
    \ mechanism or because the\n      router was unable to forward it; therefore,\
    \ if packet loss is\n      observed except as noted below, the router is by definition\
    \ in\n      lossy state (lossy condition).\n      If a distinguished data flow\
    \ exceeds its allotted bandwidth, it is\n      acceptable for routers to drop\
    \ excess packets.  Thus, a router\n      that is QoS Compliant (see below) is\
    \ also loss-free provided that\n      it only drops packets from distinguished\
    \ data flows.\n      If a device is not in a loss-free state, it is in a lossy\n\
    \      condition/state.\n   Related definitions:\n      Lossy Condition\n    \
    \  QoS Compliant Condition\n      Not QoS Compliant Condition\n      Scalability\
    \ Limit\n"
- title: 3.5.2.  Lossy Condition
  contents:
  - "3.5.2.  Lossy Condition\n   Definition:\n      A router is in a lossy condition,\
    \ or lossy state, if it cannot\n      perform its duties adequately for some reason;\
    \ that is, if it does\n      not meet protocol specifications (except QoS guarantees,\
    \ which are\n      treated separately), or -- if time-related specifications are\n\
    \      missing -- doesn't complete some operations in \"reasonable time\"\n  \
    \    (which is then defined in the benchmarks).\n   Discussion:\n      A router\
    \ may be in a lossy state for several reasons, including\n      but not necessarily\
    \ limited to the following:\n      a) Buffer memory has run out, so either an\
    \ incoming or a buffered\n         packet has to be dropped.\n      b) The router\
    \ doesn't have enough processing power to cope with\n         all its duties.\
    \  Some required operations are skipped, aborted\n         or suffer unacceptable\
    \ delays.\n      c) Some other finite internal resource is exhausted.\n      d)\
    \ The router runs a defective (non-conforming) protocol\n         implementation.\n\
    \      e) Hardware malfunction.\n      f) A congestion control mechanism is active.\n\
    \      Loss can mean the loss of data packets as well as signaling\n      message\
    \ deficit.\n      A router that does not lose data packets and does not experience\n\
    \      signaling message deficit but fails to meet required QoS\n      parameters\
    \ is in the loss-free, but not in the QoS compliant\n      state.\n      If a\
    \ device is not in a lossy state, it is in a loss-free\n      condition/state.\n\
    \   Related definitions:\n      Loss-Free Condition (especially the discussion\
    \ of congestion\n         control mechanisms that cause packet loss)\n      Scalability\
    \ Limit\n      Signaling Message Deficit\n      QoS Compliant Condition\n    \
    \  Not QoS Compliant Condition\n"
- title: 3.5.3.  QoS Compliant Condition
  contents:
  - "3.5.3.  QoS Compliant Condition\n   Definition:\n      A router is in the QoS\
    \ compliant state if and only if all\n      distinguished data flows receive the\
    \ QoS treatment they are\n      entitled to.\n   Discussion:\n      Defining what\
    \ specific QoS guarantees must be upheld is beyond the\n      scope of this document\
    \ because every reservation model may specify\n      a different set of such parameters.\n\
    \      Loss, delay, jitter etc. of best-effort data flows are irrelevant\n   \
    \   when considering whether a router is in the QoS compliant state.\n   Related\
    \ definitions:\n      Loss-Free Condition\n      Lossy Condition\n      Not QoS\
    \ Compliant Condition\n      Scalability Limit\n"
- title: 3.5.4.  Not QoS Compliant Condition
  contents:
  - "3.5.4.  Not QoS Compliant Condition\n   Definition:\n      A router is in the\
    \ not QoS compliant state if and only if it is\n      not in the QoS compliant\
    \ condition.\n   Related definitions:\n      Loss-Free Condition\n      Lossy\
    \ Condition\n      QoS Compliant Condition\n      Scalability Limit\n"
- title: 3.5.5.  Scalability Limit
  contents:
  - "3.5.5.  Scalability Limit\n   Definition:\n      The scalability limits of a\
    \ router are the boundary load\n      conditions where the router is still in\
    \ the loss-free and QoS\n      compliant state, but the smallest amount of additional\
    \ load would\n      drive it to a state that is either QoS compliant but not loss-\n\
    \      free, or not QoS compliant but loss-free, or neither loss-free nor\n  \
    \    QoS compliant.\n   Discussion:\n      An unloaded router that operates correctly\
    \ is in a loss-free and\n      QoS compliant state.  As load increases, the resources\
    \ of the\n      router are becoming more and more utilized.  At a certain point,\n\
    \      the router enters a state that is either not QoS compliant, or not\n  \
    \    loss-free, or neither QoS compliant nor loss-free.  Note that such\n    \
    \  a point may be impossible to reach in some cases (for example if\n      the\
    \ bandwidth of the physical medium prevents increasing the\n      traffic load\
    \ any further).\n      A particular load condition can be identified by the corresponding\n\
    \      values of the load factors (as defined in 3.3 Router Load Factors)\n  \
    \    impacting the router.  These values can be represented as a 7-\n      tuple\
    \ of numbers (there are only five load factors, but the\n      traffic load factors\
    \ have composite units and thus require two\n      numbers each to express). \
    \ We can think of these tuples as vectors\n      that correspond to a state that\
    \ is either both loss free and QoS\n      compliant, or not loss-free (but QoS\
    \ compliant), or not QoS\n      compliant (but loss-free), or neither loss-free\
    \ nor QoS compliant.\n      The scalability limit of the router is, then, the\
    \ boundary between\n      the sets of vectors corresponding to the loss-free and\
    \ QoS\n      compliant states and all other states.  Finding these boundary\n\
    \      points is one of the objectives of benchmarking.\n      Benchmarks may\
    \ try to separately identify the boundaries of the\n      loss-free and of the\
    \ QoS compliant conditions in the (seven-\n      dimensional) space defined by\
    \ the load-vectors.\n   Related definitions:\n      Lossy Condition\n      Loss-Free\
    \ Condition\n      QoS Compliant Condition\n      Non QoS Compliant Condition\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   As this document only provides terminology and\
    \ does not describe a\n   protocol, an implementation, or a procedure, there are\
    \ no security\n   considerations associated with it.\n"
- title: 5.  Acknowledgements
  contents:
  - "5.  Acknowledgements\n   We would like to thank Telia Research AB, Sweden and\
    \ the High Speed\n   Networks Laboratory at the Department of Telecommunication\
    \ and Media\n   Informatics of the Budapest University of Technology and Economics,\n\
    \   Hungary for their support in the research and development work, which\n  \
    \ contributed to the creation of this document.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [1]  Bradner, S., \"Benchmarking Terminology for\
    \ Network\n        Interconnection Devices\", RFC 1242, July 1991.\n   [2]  Bradner,\
    \ S., \"Key words for use in RFCs to Indicate Requirement\n        Levels\", BCP\
    \ 14, RFC 2119, March 1997.\n   [3]  Mandeville, R., \"Benchmarking Terminology\
    \ for LAN Switching\n        Devices\", RFC 2285, February 1998.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [4]  Braden, R., Clark, D., and S. Shenker,\
    \ \"Integrated Services in\n        the Internet Architecture: an Overview\",\
    \ RFC 1633, June 1994.\n   [5]  Braden, R., Ed., Zhang, L., Berson, S., Herzog,\
    \ S., and S.\n        Jamin, \"Resource ReSerVation Protocol (RSVP) -- Version\
    \ 1\n        Functional Specification\", RFC 2205, September 1997.\n   [6]  Hancock,\
    \ R., Karagiannis, G., Loughney, J., and S. Van den\n        Bosch, \"Next Steps\
    \ in Signaling (NSIS): Framework\", RFC 4080,\n        June 2005.\n   [7]  Schulzrinne,\
    \ H. and R. Hancock, \"GIST:  General Internet\n        Signaling Transport\"\
    , Work in Progress, April 2007.\n   [8]  Manner, J., Ed., Karagiannis, G., and\
    \ A. McDonald, \"NSLP for\n        Quality-of-Service Signaling\", Work in Progress,\
    \ June 2007.\n   [9]  Ash, J., Bader, A., Kappler, C., and D. Oran, \"QoS NSLP\
    \ QSPEC\n        Template\", Work in Progress, March 2007.\n   [10] P. Pan, H.\
    \ Schulzrinne, \"YESSIR: A Simple Reservation Mechanism\n        for the Internet\"\
    , Computer Communication Review, on-line\n        version, volume 29, number 2,\
    \ April 1999\n   [11] Delgrossi, L. and L. Berger, \"Internet Stream Protocol\
    \ Version 2\n        (ST2) Protocol Specification - Version ST2+\", RFC 1819,\
    \ August\n        1995.\n   [12] P. White, J. Crowcroft, \"A Case for Dynamic\
    \ Sender-Initiated\n        Reservation in the Internet\", Journal on High Speed\
    \ Networks,\n        Special Issue on QoS Routing and Signaling, Vol. 7 No. 2,\
    \ 1998\n   [13] J. Bergkvist, D. Ahlard, T. Engborg, K. Nemeth, G. Feher, I.\n\
    \        Cselenyi, M. Maliosz, \"Boomerang : A Simple Protocol for\n        Resource\
    \ Reservation in IP Networks\", Vancouver, IEEE Real-Time\n        Technology\
    \ and Applications Symposium, June 1999\n   [14] A. Eriksson, C. Gehrmann, \"\
    Robust and Secure Light-weight\n        Resource Reservation for Unicast IP Traffic\"\
    , International WS\n        on QoS'98, IWQoS'98, May 18-20, 1998\n   [15] Manner,\
    \ J. and X. Fu, \"Analysis of Existing Quality-of-Service\n        Signaling Protocols\"\
    , RFC 4094, May 2005.\n   [16] Baker, F., Iturralde, C., Le Faucheur, F., and\
    \ B. Davie,\n        \"Aggregation of RSVP for IPv4 and IPv6 Reservations\", RFC\
    \ 3175,\n        September 2001.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Gabor Feher\n   Budapest University of Technology and\
    \ Economics\n   Department of Telecommunications and Media Informatics\n   Magyar\
    \ Tudosok krt. 2, H-1117, Budapest, Hungary\n   Phone: +36 1 463-1538\n   EMail:\
    \ Gabor.Feher@tmit.bme.hu\n   Krisztian Nemeth\n   Budapest University of Technology\
    \ and Economics\n   Department of Telecommunications and Media Informatics\n \
    \  Magyar Tudosok krt. 2, H-1117, Budapest, Hungary\n   Phone: +36 1 463-1565\n\
    \   EMail: Krisztian.Nemeth@tmit.bme.hu\n   Andras Korn\n   Budapest University\
    \ of Technology and Economics\n   Department of Telecommunication and Media Informatics\n\
    \   Magyar Tudosok krt. 2, H-1117, Budapest, Hungary\n   Phone: +36 1 463-2664\n\
    \   EMail: Andras.Korn@tmit.bme.hu\n   Istvan Cselenyi\n   TeliaSonera International\
    \ Carrier\n   Vaci ut 22-24, H-1132 Budapest, Hungary\n   Phone: +36 1 412-2705\n\
    \   EMail: Istvan.Cselenyi@teliasonera.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
