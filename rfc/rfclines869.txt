RFC 869 A Host Monitoring Protocol Robert M. Hinden BBN Communications Corporation
24 A.3   Message Type 3:
35 B.2   Message Type 2:
38 B.3   Message Type 3:
64 C.6   Message Type 6:
A Host Monitoring Protocol 1  Introduction
The Host Monitoring   Protocol  (HMP)  is  used  to  collect information  from  hosts   in   various   networks.
A  host is defined as an addressable  Internet  entity  that  can  send  and receive  messages;  this  includes  hosts
such  as server hosts, personal work stations, terminal concentrators, packet  switches, and  gateways.
At present  the Host Monitoring Protocol is being used to collect information from Internet Gateways and TACs,  and implementations  are  being  designed  for  other  hosts.
It is designed to monitor hosts spread over the  internet  as
well  as hosts in a single network.
This document is organized into three parts.
Section 2  and 3  contains a general description of the Host Monitoring protocol and its relationship to other  protocols.
Section  4  describes how  it  operates.
Section 5 and 6 contain the descriptions and formats of the HMP messages.
These are  followed  by  appendices containing the formats of messages sent by some of the hosts that use the HMP  to  collect  their  monitoring  information.
These appendicies included as examples only and are not part of the HMP protocol.
This document replaces the previous HMP document "IEN 197, A Host Monitoring Protocol.
" 2  General Description The  Host
Protocol  is  a  transaction oriented (i.e.,  connection less)  transport protocol.
It was designed to facilitate  certain  simple  interactions  between
two  internet entities,  one  of which may be considered to be "monitoring" the other.
(In discussing the protocol we will sometimes speak of  a "monitoring host" and a "monitored entity".)
HMP was intended to be a useful transport protocol for applications that involve  any or all of the following three different kinds of interactions: The monitored entity sometimes  needs  to  send  unsolicited datagrams  to
The  monitoring host should be able to tell  when  messages  from  the  monitored entity  have  been lost in transit, and it should be able to determine the order in which the messages were sent, but the application  does  not require that all messages be received or that they be received strictly in the  same  sequence  in which they were sent.
The monitoring host needs to gather data from the  monitored entity by using a query response protocol at the application level.
It is important to be able to determine which  query is being answered by a particular response, and to determine whether successive  responses  are  duplicates  of  previous ones.
The monitoring host must be able to initiate certain control functions  in  the  monitored entity, possibly including the setting  of  parameters  in  the  monitored   entity.
The monitoring  host  needs  to know if the control function has been carried out.
In addition, we assume that a given monitoring host  may  be monitoring  several  different  types of entities simultaneously, and may be gathering several different types of data from a given type of monitored entity.
Several different monitoring hosts may be monitoring a given entity, and several processes on  the  same host may even be monitoring the same entity.
Messages from the monitoring host to
the  monitored  entity are  called  "polls".
They need to contain enough information to allow the monitored entity to make the following determinations: The monitored entity must be able  to  determine  that  this message  is  in  fact  a  poll  from a monitoring host.
The "system type," "message type," and "password" fields in
the HMP header have been defined to meet this need.
The monitored entity may need to be  able  to  identify  the particular  process  on  the  monitoring host that sent this poll, so it can send its response back to the right process.
The  "port  number" field in the HMP header has been defined to meet this need.
The monitored  entity  must  be  able  to  indicate  to
the monitoring  host,  in its response, precisely which query is being answered by  a  particular  response.
The  "sequence number field" has been defined to meet this need.
The monitored entity must be able  to  determine  just  what kind  of action the monitoring host is requesting.
That is, the  HMP  transport
must  provide  some  way   of multiplexing  and  demultiplexing  the  various higher level applications which use it.
The  "R message  type"  and  "R  subtype"  fields of the polling message have been defined to meet this need.
Messages from the monitored entity to  the  monitoring  host need  to contain enough information to enable the monitoring host to make the following determination: The monitoring host must be able to route  this  message  to the  correct  process.
The  "port number" field meets this need.
The monitoring host  must  be  able  to  match  up
received messages  with  the  polls, if any, that elicited them.
The "returned sequence number" field in the HMP header has  been defined to meet this need.
The monitoring host must be able to determine  which  higher level  application should receive a particular message.
The "system type" and "message type" fields are  used  for  this purpose.
The monitoring host must be able to determine  whether  some messages  of
a given type were lost in transit, and whether messages  have  arrived  out  of  sequence.
Although  this function,  strictly speaking, belongs to the application and not to the  transport  layer,  the  HMP  header  contains  a "sequence number" for this purpose.
In addition, a simple one's complement checksum is  provided in the HMP header to detect data corruption during transmission.
3  Relationship to Other Protocols
Protocol  is  a  transport   protocol designed  to  fit into the layered internet protocol environment.
It operates on  top  of  the  Internet/ICMP  protocol  and  under applications  that  require  its  services.
This relationship is illustrated in the following diagram:
If internetwork services are not required it should  be  possible to  run  the HMP without an Internetwork layer.
As long as HMPs' service requirnments (addressing,  protocol  demultiplexing,  and occasional  delivery)
it  should run over a variety of protocols.
The  HMP  is  built  around  the  idea
that  most  of   the intelligence  needed  to  monitor  a  host
should  reside  in  a monitoring center, not in the host.
The host should be  required only to collect data and send it to the monitoring center, either spontaneously or on request from the monitoring center.
The host is  not  responsible  for insuring that the data arrives reliably (except that it checksums  the  data);  instead,  the  monitoring center  is  responsible for ensuring that the data it requests is received correctly.
Consequently,  the  HMP  is  based  on  polling  hosts   for messages.
When the monitoring center requires a particular type of data (e.g., throughput data), it sends  a  poll  to  the  host requesting  that  type  of  report.
The host, upon receiving the poll, responds with its latest set of  collected  data.
If  the host  finds that the poll is incorrect (e.g., if the poll was for throughput data and the host is not collecting throughput  data), it responds with an error message.
The monitoring center waits a reasonable length of time for the host to answer its poll.
If no response  is  received,  it sends another poll for the same data.
In this way, if either a  poll  or  the  response  is  lost,  the correct data is still collected.
The HMP is used to collect three different classes of data:  Spontaneous Events (or Traps)
Current status  Statistical data collected over time
These classes of data allow a host to send data in a manner  best suited  to  the  data.
For instance, the host may quickly inform the monitoring center that a particular  event  has  happened  by sending  a  trap message, while the monitoring center is reliably collecting the host's throughput and accounting data.
Traps report spontaneous  events,  as  they  occur,  to  the monitoring center.
In order to insure their prompt delivery, the traps are  sent  as  datagrams  with
no  reliability  mechanisms (except  checksums)  such as acknowledgments and retransmissions.
Trap messages usually contain an  identifier  to  indicate  which event  is  being  reported,  the  local time in the host that the event occured, and data pertinent to the event.
The data portion is intended to be host and event specific.
Status information, the second type of data collected by the Host Monitoring Protocol describes the current state of the host.
Status information is useful at one point, but it does  not  have to be collected cumulatively over a certain period of time.
Only the latest status is of interest; old status provides  no  useful information.
The  monitoring center collects status information by sending a poll for status to a host.
Upon receiving the poll, the  host  responds  with  its  latest status information, always creating a new status message.
If the monitoring center does not receive  a  response  to  its  poll,  it sends another poll.
The monitoring center can decide if the host is up or down  based  on whether the host responds to its polls.
The third type of data collected by the HMP  is  statistical data.
These are measurements taken over time, such as the number of packets sent or received by a host and the  count  of  packets dropped  for  a  particular reason.
It is important that none of this type of data be lost.
Statistical data is  collected  in  a host  over  a  time  interval.
When the collection time interval expires, the current data is copied  to  another  area,  and  the counters  are cleared.
The copied data is sent to the monitoring center when the  host  receives  a  poll  requesting  statistical information.
If  another poll is received before the collection time interval has expired, the data in the buffer is sent  again.
The  monitoring center can detect duplicate messages by using the sequence number in the header of the message, since each type  of statistical data has its own sequence number counter.
The collection frequency  for  statistics  messages  from  a particular  host  must be relatively long compared to the average round trip message time between the monitoring  center  and  that host inorder to allow the monitoring center to re poll if it does not receive an answer.
With  this  restriction,  it  should  be possible   to
avoid  missing  any  statistics  messages.
Each statistics message contains a field giving the  local  time  when the  data  was  collected  and  the time at which the message was sent.
This information allows the monitoring center to  schedule when  it sends a poll so that the poll arrives near the beginning of each collection period.
This ensures that  if  a  message  is lost,  the  monitoring  center  will have sufficient time to poll again for the statistics message for that period.
The HMP also includes a provision to send data to  and  read parameters  in  hosts.
The  data may be used to set switches or interval timers used to control measurements in  a  host,  or  to control  the  host itself (e.g. a restart switch).
The format of the data and parameters is host specific.
To send data to a host, the monitoring center sends the host a  poll  for a control acknowledgment message.
This poll message includes the type of the data and the data being sent.
When  the host  receives this poll, it processes the data and responds with a control acknowledgment message.
To read parameters in a host,  the  monitoring  center  will send  a  poll for parameters to the host.
This poll includes the type of the parameters being read.
When the host  receives  this poll,  it
will  send the parameters of the requested type to the monitoring center in a parameters message.
5.1  IP Headers HMP messages are sent using the version 4 IP header as  described in  RFC 791  "Internet  Protocol."
The HMP protocol number is 20 (decimal).
The time to live field should be set to a  reasonable value for the hosts being monitored.
All other fields should be set as specified in RFC 791.
The combination  of system type and message type  determines the format of the data in the monitoring message.
The system types which have been defined are: System Type
The message types currently defined are:
This field can be used to multiplex similar messages to/from different processes in one host.
This field is used to pass control  information.
Currently Bit  15  is  defined  as  the  "More bit" which is used in a message in responce to a poll to indicate that there is more data to poll for.
Every message contains  a  sequence  number.
The  sequence number  is incremented when each new message of that type is sent.
Password or Returned Sequence Number
The  Password field of a polling message from an  monitoring center  contains a password to  verify  that the  monitoring center is  allowed  to  gather  information.
this   field   for identification and round trip time calculations.
The  Checksum  field  is  the one's complement of the  one's complement  sum of all the 16 bit words in  the  header  and data  area.
HMP Monitoring Center Message Formats 6.1  Message Type 100:
The monitoring center will send polls to  the  hosts  it  is monitoring  to  collect their monitoring data.
When the host receives a poll it will  return
It   will  only  answer a poll with the correct system type and password and will return  an  error  message (Message  Type  101)  if  it  receives  a poll for the wrong system type or an unsupported message type.
The Poll message includes a  facility  to  send  data  to  a monitored host.
The poll message to send data consists of a poll  for  a  Control  Acknowledgment  message
(type   102) followed  by  the data.
The R Subtype specifies the type of the data that  is  being  sent.
When  the  monitored  host receives  a  Poll for a Control acknowledgment, it processes the data, and then responds with an  Control  acknowledgment message.
If the monitored host can not process the data, it should respond with an error message.
A poll to read parameters consists a poll for  a  Parameters message.
the type of parameters being read.
When the monitored host receives a poll  for  a Parameters  message,  it  responds with a Parameters message containing the requested information.
The type of machine being polled.
100 Port Number Unused Control Flag Unused Sequence Number
The sequence number identifies  the  polling  request.
The Monitoring  Center  will  maintain separate sequence numbers for each host it monitors.
This sequence number is returned in the response to a poll and the monitoring center will use this information to associate polls with their responses and to determine round trip times.
POLL FIELDS R Message Type
This field is used when sending data and reading  parameters and
it  specifies  the  type  of
the  data  being  sent or parameters being read.
When  the  poll  is  requesting
a  Control   Acknowledgment message,  data  is included in the poll message.
A poll for any other type of message does not include any data  .
The contents of the data is host specific.
Message Type 101: Error in Poll Description
This message is sent  in  response  to  a  faulty
poll  and specifies the nature of the error.
The type of machine sending message.
101 Port Number Unused Control Flag Unused Sequence Number A 16 bit number incremented each time an  error
The Sequence Number of the polling message which caused  the error.
ERROR MESSAGE FIELDS Error Type
This field specifies the nature of the error  in  the  poll.
The following error types have been defined.
Invalid parameter value 6   Invalid parameter/value format 7   Machine in Loader R Message Type R Subtype
These fields identify the poll request in error.
This message is sent in response to a poll for this type  of message.
It  is used to acknowledge poll messages that are used to set parameters in the monitored host.
The Control acknowledgment has no fields other than the  HMP header.
The type of the system sending the message.
102 Port Number Unused Control Flag Unused Sequence Number A
each   time   a   Control acknowledgment message is sent.
The Sequence Number of the polling message  which  requested this message.
A  Appendix A IMP Monitoring A.1  Message Type 1:
IMP Trap Description When a trap occurs, it is buffered in the IMP  and  sent  as soon  as possible.
If traps happen in close sequence, several traps may be sent  in  one message.
Through the use of sequence numbers, it will be possible  to determine   how  many  traps
If  it  is discovered that many are lost, a  polling  scheme  might  be implemented for traps.
# of traps lost Under certain conditions, an IMP may overflow  its  internal trap
be  unable  to save traps to send.
This counter keeps track of such occurrences.
There can be several blocks of trap data  in  each  message.
The format for each such block is below.
Size Size is the number of 16 bit words in the trap, not counting the size field.
The time (in 640 ms. units)  at  which  the  trap  occurred.
This  field  is  used to sequence the traps in a message and associate groups of traps.
This is usually the program counter at  the  trap.
The  ID identifies  the  trap,  and
does  not  have to be a program counter, provided it uniquely identifies the trap.
The IMP returns data giving more information about the trap.
There are usually two entries: the values in the accumulator and the index register at the occurrence of the trap.
The status message gives a quick summary of the state of the IMP.
Status  of the most important features of the IMP are reported  as
well  as  the  current  configuration  of  the machine.
HMP FIELDS System Type IMP   2 Message Type IMP status message   2 Port Number Unused Control Flag Unused Sequence Number A 16 bit number incremented each time a  status
The password contains the sequence  number  of
the  polling message to which this message responds.
IMP STATUS FIELDS Software Version Number
Last Trap Message Contains the sequence number of the last trap
message  sent to  the  HM.
This will allow the HM to detect how many trap messages are being lost.
The number of configured hosts in this system.
The number of configured modems in this system.
The maximum possible number  of  IMP IMP  channels  in  this system.
The maximum possible number of IMPs in this system.
This is a bit encoded word that reports the set of  packages currently loaded in the system.
The table below defines the bits.
Bit    Package (octal) (1st Word)
the   circumstances   surrounding   an unexpected  crash.
The  first word reports the location of the crash and the following two  are  the  contents  of  the accumulator and index registers.
Anomalies Anomalies is a collection of bit  flags
that  indicate  the state  of  various  switches or processes in the IMP.
These are  very  machine  dependent  and  only  a   representative sampling of bits is listed below.
These are four bytes  of  counters  indicating  the  current usage  of  buffers in the IMP.
The four counters are: free buffers, store and forward buffers, reassembly  buffers  and allocated buffers.
gives   the   state   of   the corresponding host.
The  first field (4 bits) indicates the line speed; the second field (4 bits) is the number  of  the modem
that is used by the neighboring IMP on this line; the third field (8 bits) is the number of  line  protocol
ticks covered  by  this  report; the fourth (1 bit) indicates line down(1) or up(0); the fifth (7 bits) is the  IMP  number  of neighbor  IMP on the line; and the sixth (8 bits) is a count of missed protocol packets over the  interval
specified  in the third field.
message reports traffic statistics  for each modem in the system.
The IMP will collect these data at regular intervals and save them awaiting a poll from the HM.
If  a  period  is  missed  by the HM, the new results simply overwrite the old.
Two time stamps bracket  the  collection interval
(data time  and prev time) and are an indicator of missed reports.
In addition, mess time indicates  the  time at which the message was sent.
The modem throughput message will accommodate up to fourteen modems  in  one  packet.
A provision is made to split this into multiple packets by including a modem
the first  entry  in  the packet.
This field is not immediately useful, but if machine sizes grow beyond fourteen modems  or if  modem  statistics become more detailed and use more than three words per modem, this can be used to keep the  message within a single ARPANET packet.
HMP FIELDS System Type IMP   2 Message Type IMP Modem Throughput message   3
Port Number Unused Control Flag Unused Sequence
Number A 16 bit number  incremented  at  each  collection  interval (i.e.  when  a new throughput message is assembled).
The HM will be  able  to  detect  lost  or  duplicate  messages  by checking the sequence numbers.
Password The password contains the sequence  number  of
the  polling message to which this message responds.
units) at which the message was sent  to the HM.
Data Time Data time is the time (in 640ms.
when  this  set  of data was collected.
Prev time is the time (in 640 ms.  units)  of  the  previous collection of data (and therefore, is the time when the data in this message began accumulating.)
This is the number of modems in the system.
This Modem is the number of the first modem reported in this message.
that  are unable to fit all their modem reports into a single packet
may  use  this  field  to separate their message into smaller chunks to take advantage of single packet message efficiencies.
Modem Throughput Modem  throughput  consists   of
three   words   of   data reporting  packets  and  words
The first  word  counts packets  output and
the  following  two count  word  throughput.
The  double  precision  words are arranged high order first.
(Note  also that  messages  from Honeywell  type machines (316s, 516s and C30s) use a fifteen bit low order word.)
The first block reports output on  the modem
The  following blocks report on consecutive modems.
The host throughput message reports
statistics  for each host in the system.
The IMP will collect these data at regular intervals and save them awaiting a poll from the HM.
If  a  period  is  missed  by the HM, the new results simply overwrite the old.
Two time stamps bracket  the  collection interval
(data time  and prev time) and are an indicator of missed reports.
In addition, mess time indicates  the  time at which the message was sent.
The host throughput format will hold  only  three  hosts  if packet  boundaries are to be respected.
A provision is made to split this into multiple  packets  by  including  a  host number for the first entry in the packet.
HMP FIELDS System Type IMP   2 Message Type IMP host Throughput message   4
Port Number Unused Control Flag Unused Sequence
Number A 16 bit number  incremented  at  each  collection  interval (i.e.  when  a new throughput message is assembled).
The HM will be  able  to  detect  lost  or  duplicate  messages  by checking the sequence numbers.
Password The password contains the sequence  number  of
the  polling message to which this message responds.
units) at which the message was sent  to the HM.
Data Time Data time is the time (in 640ms.
when  this  set  of data was collected.
Prev time is the time (in 640 ms.  units)  of  the  previous collection of data (and therefore, is the time when the data in this message began accumulating.)
The total number of hosts in this system.
This host is the number of the first host reported  in  this message.
that  are unable to fit all their host reports into a single packet
may  use  this  field  to separate their message into smaller chunks to take advantage of single packet message efficiencies.
Each host throughput message will contain several blocks  of data.
The  first  block  will  contain  data  for the host specified in  First  Host  Number.
Following  blocks  will contain data for consecutive hosts.
All counters are single precision.
TAC Trap Message Description When a trap occurs, it is buffered in the TAC  and  sent  as soon  as possible.
If traps happen in close sequence, several traps may be sent  in  one message.
Through the use of sequence numbers, it will be possible  to determine   how  many  traps
If  it  is discovered that many are lost, a  polling  scheme  might  be implemented for traps.
Message Type TAC Trap Message
Port Number Unused Control Flag Unused Password or Returned Sequence Number Unused Sequence Number A 16 bit number incremented each time a trap message is sent
that  the  HM  can  order the received trap messages and detect missed messages.
# of the TAC Software.
There can be several blocks of trap data in each message.
units) at which the trap occurred.
This field  is  used  to  sequence
the  traps  in  a message and associate groups of traps.
the program counter at the trap.
The  ID identifies  the  trap,  and
does  not  have to be a program counter, provided that it uniquely identifies the trap.
The TAC returns data giving more information about the trap.
There are usually two entries: the values in the accumulator and the index register at the occurrence of the trap.
Count The TAC Counts repetitions of the same trap
B.2  Message Type 2: TAC Status Description
The status message gives a quick summary of the state of the TAC.
Status  of the most important features of the TAC are reported  as
well  as  the  current  configuration  of  the machine.
Message Type TAC Status Message
2 Port Number Unused Control Flag Unused Sequence Number A 16 bit number incremented each time a  status
the  polling  message requesting this report.
TAC STATUS FIELDS Version Number
The TAC's software version number.
Last Trap Message Contains the sequence number of the last trap
message  sent to  the  HM.
This will allow the HM to detect how many trap messages are being lost.
There are sixteen bit  flags  available  for  reporting
the state  of  various  switches
(hardware and software) in the TAC.
The bits are numbered as follows for purposes  of  the discussion below.
3 4 5 6 7 8 9 0 1 2 3 4 5
The bit flags report the status of the following:
> DDT override off; 1
> Sense Switch n is off;
Traps to remote monitor; 1
Free MBLK count The number of MBLKs on the free queue.
# of TCP connections # of NCP connections
The number of open connections for each protocol.
These three fields report the values retained by an INA 1011 instruction  in  a  C/30.
This  instruction  returns micro  machine status and  errors.
In  a  #316,  the  fields  are meaningless.
the   circumstances   surrounding   an unexpected  crash.
The  first word reports the location of the crash and the following two  are  the  contents  of  the accumulator and index registers.
the various modules of the TAC.
The TAC will collect these data at regular intervals and save them awaiting a poll from  the HM.
If a period is missed by the HM, the new results simply overwrite the old.
Two time stamps bracket  the  collection interval
(data time  and prev time) and are an indicator of missed reports.
In addition, mess time indicates  the  time at which the message was sent.
Message Type TAC Throughput Message
Port Number Unused Control Flag Unused Sequence Number
A 16 bit number  incremented  at  each  collection  interval (i.e.  when  a new throughput message is assembled).
The HM will be  able  to  detect  lost  or  duplicate  messages  by checking the sequence numbers.
the  polling  message requesting this report.
units) at which the message was sent  to the HM.
Data Time Data time is the time (in 640ms.
when  this  set  of data was collected.
Prev time is the time (in 640 ms.  units)  of  the  previous collection of data (and therefore, is the time when the data in this message began accumulating.)
The TAC's software version number.
Last Trap Message Contains the sequence number of the last trap
message  sent to  the  HM.
This will allow the HM to detect how many trap messages are being lost.
There are sixteen bit  flags  available  for  reporting
the state  of  various  switches
(hardware and software) in the TAC.
The bits are numbered as follows for purposes  of  the discussion below.
3 4 5 6 7 8 9 0 1 2 3 4 5
The bit flags report the status of the following:
> DDT override off; 1
> Sense Switch n is off;
Traps to remote monitor; 1
Free MBLK count The number of MBLKs on the free queue.
# of TCP connections # of NCP connections
The number of open connections for each protocol.
These  six  fields  report  statistics
the operation  of  the  1822 protocol module, i.e. the interface between the TAC and its IMP.
These five fields report statistics which  concern  Internet Protocol in the TAC.
These  six  fields  report  statistics
which  concern   TCP protocol in the TAC.
C  Appendix C Gateway Monitoring C.1
The gateway supports parameters to set Throughput  and  Host traffic matrix measurements.
The type of parameters and the parameter and data pairs are as follows:
Host Traffic Matrix Type   4 Parm.
: Gateway Trap Description When traps occur in the gateway they  are  buffered.
At  a fixed  time interval (currently 10 seconds) the gateway will send any traps that are in  the  buffer  to  the  monitoring center.
The traps are sent as unsolicited messages.
A Gateway trap message has the following format:
Message Type Gateway Trap Message   1
Port Number Unused Control Flag Unused Password or Returned Sequence Number Unused Sequence Number
A 16 bit number incremented each time a trap message is sent
so  that  the  monitoring center can order the received trap messages and detect missed messages.
GATEWAY TRAP FIELDS Gateway Version
# The software version number of the gateway sending the trap.
The remainder of the  trap  message  consists  of  the  trap reports.
Each consists of the following fields: Size of Trap Entry
The size  in  16 bit  words  of  the  trap
entry,  not including the size field.
The time in (in 1/60 sec.
ticks)  at  which  the  trap occurred.
The number of the trap which is used  to  identify  the trap.
The identifier of the process that executed the trap.
The registers of the machine at the occurrence  of  the trap.
The number of times that this trap occurred.
The gateway status message gives a summary of the status  of the  gateway.
It reports information such as version number of the gateway, buffer memory usage,  interface  status  and neighbor gateway status.
A Gateway Status message has the following format:
Size of n'th Block (in bytes)
Time since last Status Change
HMP FIELDS System Type Gateway   4 Message Type Gateway Status Message   2 Port Number Unused Control Flag Unused Password or Returned Sequence Number Unused Sequence Number
A 16 bit number incremented each time a trap message is sent
so  that  the  monitoring center can order the received trap messages and detect missed messages.
GATEWAY STATUS FIELDS Version Number
The  version  number  of  the  gateway  sending  the  Status message.
The patch version number of the gateway.
The time in minutes since the gateway was last restarted  or reloaded.
Measurement Flags Flags that, if set, indicate which measurements  are  turned on.
The sequence number of the last routing update sent by  this gateway.
# The version number of the access control table.
Load Sharing Table Version # The version number of the load sharing table.
The number of bytes of buffer memory that are  currently  in use.
The  number  of  bytes  of  buffer  memory
that  have  been allocated but are currently idle.
The number of bytes of  buffer  memory
that  has  not  been allocated.
The next part of the status message contains information  on the buffer pools in the gateway.
The fields are: # of Blocks
The number of different buffer pools.
The size of this block in bytes.
The number of  blocks  of  this  size
The number of blocks of this size that are idle.
The next part of the status message are fields that  provide information about the gateway's interfaces.
The fields are: # of Interfaces
The number of network interfaces that the gateway has.
Interface Flags Flags that indicate the status of this interface.
The current values are: Bit 0   1 Up/0
The numbers on this interfaces write queue.
Time Since Last Status Change
The time in minutes since this interface changed status (Up/Down).
The number of buffers allocated for this interface.
The buffer size required for this interface.
The Internet address of this interface.
The final part of the status message consists of information about this gateway's neighbor gateways.
The fields are: # of Neighbors
The number of gateways that are  neighbor
UP/DN Flags Bit flags to indicate if the neighbor is up or down.
The Internet address of the neighbor gateway.
The gateway collects throughput statistics for the  gateway, its interfaces, and its neighbor gateways.
It collects them for regular intervals and will save them for collection  via a  Poll  message  from the Monitoring host.
If they are not collected by the end of the next interval, they will be lost because another copy will be put into the saved area.
A Gateway Throughput message has the following format:
Pkts from US sent to/via Neig
Message Type Gateway Throughput Message   3
Port Number Unused Control Flag Unused Password or Returned Sequence Number Unused Sequence Number A 16 bit number incremented each time a trap message is sent
that  the  HM  can  order the received trap messages and detect missed messages.
GATEWAY THROUGHPUT FIELDS Gateway Version Number
The software version number of the gateway sending the trap.
The time period in minutes in which the throughput  data  is to be collected.
The number of interfaces this gateway has.
The number of neighbor gateways this gateway has.
The  number  of  packets  dropped  because
The number  of  packets  dropped  because  the  Network  was unreachable.
The next part of the Throughput  message  contains  counters for   the  gateways  interfaces.
has  the following fields: Interface Address
The Internet address of this interface.
The number  of  packets  on  input  to  this  interface because there were not enough buffers.
The number of packets received with bad IP headers.
Count of Datagrams for Us
The number of  datagrams  received  addressed  to  this gateway.
The number of datagrams were not for this  gateway  and should be sent out another interface.
Count of Datagrams Looped The number of datagrams that were received on and  sent out of this interface.
The number of bytes received on this interface.
Count of Datagrams From Us
The  number  of  datagrams  that  originated  at   this gateway.
Count that were Forwarded The number of datagrams that were forwarded to  another gateway.
Count of Local Net Dropped
The number of packets  that  were  dropped  because  of local network flow control restrictions.
Count of Queue full Dropped
The number of packets that  were  dropped  because  the output queue was full.
The number of bytes sent out on this interface.
The last part of the Throughput message are counts for  each neighbor gateway.
The fields are: Neighbor Address
The Internet address of this neighbor gateway.
Count of Routing Updates TO The number of routing updates  sent  to  this  neighbor gateway.
Count of Routing Updates FROM The  number  of  routing  updates  received  from  this neighbor gateway.
Pkts from US sent to/via Neig
The number of packets from this gateway sent to or  via this neighbor gateway.
The number of packets forwarded to or via this neighbor gateway.
The  number  of  datagrams  dropped  to  this  neighbor gateway   because   of   local   network  flow  control restrictions.
The  number  of  datagrams  dropped  to  this  neighbor because the output queue was full.
Count of Bytes send to Neighbor
The number of bytes sent to this neighbor gateway.
Gateway Host Traffic Matrix Description
The Host Traffic Matrix (HTM) message  contains  information about  the  traffic
that  flows  through the gateway.
Each entry consists of the number of datagrams sent and  received for a particular source/destination pair.
A Gateway HTM message has the following format:
Message Type Gateway HTM Message   4 Port Number Unused Control Flag Unused Password or Returned Sequence Number Unused Sequence Number
A 16 bit number incremented each time a trap message is sent
that  the  HM  can  order the received trap messages and detect missed messages.
GATEWAY HTM FIELDS Gateway Version Number
The software version number of this gateway.
The number of HTM entries lost because the  HTM  buffer  was full.
The time period in minutes in which the HTM  data  is  being collected.
The number of HTM reports included in this message.
The remainder of the HTM message consists of the actual  HTM entries.
Each entry consists of the following fields: IP Source Address
The source Internet  address  of  the  datagrams  being counted.
The destination Internet address of the datagrams being counted.
The protocol number of the datagrams.
The  number  of  datagrams  sent  in  the   Source   to Destination address direction.
Counter for DST   SRC datagrams
The number of datagrams  sent  in
the  Destination  to Source address direction.
The Routing message contains information  about  routes  the gateway  has  to the networks that make up the Internet.
It includes information about its interfaces and  its  neighbor gateways.
A Gateway Routing message has the following format:
Message Type Gateway Trap Message   6
Port Number Unused Control Flag Unused Password or Returned Sequence Number Unused Sequence Number A 16 bit number incremented each time a trap message is sent
that  the  HM  can  order the received trap messages and detect missed messages.
GATEWAY ROUTING FIELDS Gateway Version
# The software version number of the gateway sending the trap.
The first part of the routing message  contains  information about  the  gateway's  interfaces.
There  is data for each interface.
The fields are: # of Interfaces
The number of interfaces that this gateway has.
UP/DN Flags Bit flags to indicate if the Interface is up or down.
The Internet address of the Interface.
The next part of the routing  message  contains  information about this gateway's neighbor gateways.
The fields are: # of Neighbors
The number of gateways that are  neighbor
UP/DN Flags Bit flags to indicate if the neighbor is up or down.
The Internet address of the neighbor gateway.
The last part of the routing  message  contains  information about
this  gateway's  routes  to  other  networks.
This includes the distance to each  network  and  which  neighbor gateway is the route to the network.
The fields are: # of Networks
The number of networks that  are  reachable  from  this gateway.
part  of  the Internet address and may be one, two, or three bytes in length depending on  whether  it is a Class A, B, or C address.
The distance in hops to this network.
Zero hops  means that the network is directly connected to this gateway.
A negative number means that the network  is  currently unreachable.
Neighbor # The neighbor gateway that is the next hop to reach this network.
This   is   an   index  into  the  previous information on this gateway's neighbor gateways.
This field  is  only  valid  if the Distance is greater than zero.
