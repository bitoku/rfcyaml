- title: __initial_text__
  contents:
  - "          PKCS #9: Selected Object Classes and Attribute Types\n            \
    \                  Version 2.0\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo represents a republication of PKCS #9 v2.0 from RSA\n\
    \   Laboratories' Public-Key Cryptography Standards (PKCS) series, and\n   change\
    \ control is retained within the PKCS process.  The body of this\n   document,\
    \ except for the security considerations section, is taken\n   directly from that\
    \ specification.\n   This memo provides a selection of object classes and attribute\
    \ types\n   for use in conjunction with public-key cryptography and Lightweight\n\
    \   Directory Access Protocol (LDAP) accessible directories.  It also\n   includes\
    \ ASN.1 syntax for all constructs.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   5.1  Attribute types for use with the \"pkcsEntity\" object\
    \ class .. 6\n   5.2  Attribute types for use with the \"naturalPerson\" object\
    \ class 7\n   5.4  Attribute types for use in PKCS #10 certificate requests ...\
    \ 16\n   5.5  Attribute types for use in PKCS #12 \"PFX\" PDUs or PKCS #15\n \
    \       tokens ..................................................... 17\n   5.6\
    \  Attributes defined in S/MIMIE .............................. 18\n   6.  Matching\
    \ rules .............................................. 19\n   6.1  Case ignore\
    \ match .......................................... 19\n   6.2  Signing time match\
    \ ......................................... 20\n   7.  Security Considerations\
    \ ..................................... 20\n   8.  Authors' Addresses ..........................................\
    \ 21\n   A.  ASN.1 module ................................................ 22\n\
    \   B.  BNF schema summary .......................................... 30\n   B.1\
    \  Syntaxes ................................................... 30\n   B.2  Object\
    \ classes ............................................. 31\n   B.3  Attribute\
    \ types ............................................ 32\n   B.4  Matching rules\
    \ ............................................. 36\n   C.  Intellectual property\
    \ considerations ........................ 37\n   D.  Revision history ............................................\
    \ 37\n   E.  References .................................................. 39\n\
    \   F.  Contact information & About PKCS ............................ 41\n   Full\
    \ Copyright Statement ........................................ 41\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   This document defines two new auxiliary object classes, pkcsEntity\n\
    \   and naturalPerson, and selected attribute types for use with these\n   classes.\
    \  It also defines some attribute types for use in conjunction\n   with PKCS #7\
    \ [14] (and S/MIME CMS [3]) digitally signed messages,\n   PKCS #10 [16] certificate-signing\
    \ requests, PKCS #12 [17] personal\n   information exchanges and PKCS #15 [18]\
    \ cryptographic tokens.\n   Matching rules for use with these attributes are also\
    \ defined,\n   whenever necessary.\n"
- title: 2. Definitions, notation and document conventions
  contents:
  - "2. Definitions, notation and document conventions\n 2.1 Definitions\n   For the\
    \ purposes of this document, the following definitions apply.\n   ASN.1      \
    \     Abstract Syntax Notation One, as defined in [5].\n   Attributes      An\
    \ ASN.1 type that specifies a set of attributes.\n                   Each attribute\
    \ contains an attribute type (specified\n                   by object identifier)\
    \ and one or more attribute\n                   values.  Some attribute types\
    \ are restricted in their\n                   definition to have a single value;\
    \ others may have\n                   multiple values.  This type is defined in\
    \ [7].\n   CertificationRequestInfo\n                   An ASN.1 type that specifies\
    \ a subject name, a public\n                   key, and a set of attributes. \
    \ This type is defined\n                   in [16].\n   ContentInfo     An ASN.1\
    \ type that specifies content exchanged\n                   between entities.\
    \  The contentType field, which has\n                   type OBJECT IDENTIFIER,\
    \ specifies the content type,\n                   and the content field, whose\
    \ type is defined by the\n                   contentType field, contains the content\
    \ value.  This\n                   type is defined in [14] and [3].\n   PrivateKeyInfo\
    \  A type that specifies a private key and a set of\n                   extended\
    \ attributes.  This type and the associated\n                   EncryptedPrivateKeyInfo\
    \ type are defined in [15].\n   SignerInfo      A type that specifies per-signer\
    \ information in the\n                   signed-data content type, including a\
    \ set of\n                   attributes authenticated by the signer, and a set\
    \ of\n                   attributes not authenticated by the signer.  This\n \
    \                  type is defined in [14] and [3].\n   DER             Distinguished\
    \ Encoding Rules for ASN.1, as defined in\n                   [6].\n   UCS   \
    \          Universal Multiple-Octet Coded Character Set, as\n                \
    \   defined in [11].\n   UTF8String      UCS Transformation Format encoded string.\
    \  The UTF-8\n                   encoding is defined in [11].\n 2.2 Notation and\
    \ document conventions\n   In this document, all attribute type and object class\
    \ definitions are\n   written in the ASN.1 value notation defined in [5].  Appendix\
    \ B\n   contains most of these definitions written in the augmented BNF\n   notation\
    \ defined in [2] as well.  This has been done in an attempt to\n   simplify the\
    \ task of integrating this work into LDAP [22] development\n   environments.\n\
    \   The keywords \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\"\
    ,\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in\
    \ this\n   document are to be interpreted as described in [1].\n"
- title: 3. Overview
  contents:
  - "3. Overview\n   This document specifies two new auxiliary object classes, pkcsEntity\n\
    \   and naturalPerson, and some new attribute types and matching rules.\n   All\
    \ ASN.1 object classes, attributes, matching rules and types are\n   exported\
    \ for use in other environments.\n   Attribute types defined in this document\
    \ that are useful in\n   conjunction with storage of PKCS-related data and the\
    \ pkcsEntity\n   object class includes PKCS #12 PFX PDUs, PKCS #15 tokens and\n\
    \   encrypted private keys.\n   Attribute types defined in this document that\
    \ are useful in\n   conjunction with PKCS #10 certificate requests and the naturalPerson\n\
    \   object class includes electronic-mail address, pseudonym,\n   unstructured\
    \ name, and unstructured address.\n   Attribute types defined in this document\
    \ that are useful in PKCS #7\n   digitally signed messages are content type, message\
    \ digest, signing\n   time, sequence number, random nonce and countersignature.\
    \  The\n   attributes would be used in the authenticatedAttributes and\n   unauthenticatedAttributes\
    \ fields of a SignerInfo or an\n   AuthenticatedData ([3]) value.\n   Attribute\
    \ types that are useful especially in PKCS #10 certification\n   requests are\
    \ the challenge password and the extension-request\n   attribute.  The attributes\
    \ would be used in the attributes field of a\n   CertificationRequestInfo value.\n\
    \   Note - The attributes types (from [8]) in Table 1, and probably\n   several\
    \ others, might also be helpful in PKCS #10, PKCS #12 and PKCS\n   #15-aware applications.\n\
    \       businessCategory            preferredDeliveryMethod\n       commonName\
    \                  presentationAddress\n       countryName                 registeredAddress\n\
    \       description                 roleOccupant\n       destinationIndicator\
    \        serialNumber\n       facsimileTelephoneNumber    stateOrProvinceName\n\
    \       iSDNAddress                 streetAddress\n       localityName       \
    \         supportedApplicationContext\n       member                      surname\n\
    \       objectClass                 telephoneNumber\n       organizationName \
    \           teletexTerminalIdentifier\n       physicalDeliveryOfficeName  telexNumber\n\
    \       postalAddress               title\n       postalCode                 \
    \ x121Address\n       postOfficeBox\n   Table 1: ISO/IEC 9594-6 attribute types\
    \ useful in PKCS documents\n"
- title: 4. Auxiliary object classes
  contents:
  - "4. Auxiliary object classes\n   This document defines two new auxiliary object\
    \ classes: pkcsEntity\n   and naturalPerson.\n 4.1 The pkcsEntity auxiliary object\
    \ class\n   The pkcsEntity object class is a general-purpose auxiliary object\n\
    \   class that is intended to hold attributes about PKCS-related\n   entities.\
    \  It has been designed for use within directory services\n   based on the LDAP\
    \ protocol [22] and the X.500 family of protocols,\n   where support for PKCS-defined\
    \ attributes is considered useful.\n   pkcsEntity OBJECT-CLASS ::=     {\n   \
    \        SUBCLASS OF { top }\n           KIND auxiliary\n           MAY CONTAIN\
    \ { PKCSEntityAttributeSet }\n           ID pkcs-9-oc-pkcsEntity\n   }\n   PKCSEntityAttributeSet\
    \ ATTRIBUTE ::= {\n           pKCS7PDU |\n           userPKCS12 |\n          \
    \ pKCS15Token |\n           encryptedPrivateKeyInfo,\n           ... -- For future\
    \ extensions\n   }\n   Attributes in the PKCSEntityAttributeSet are defined in\
    \ Section 5.\n 4.2 The naturalPerson auxiliary object class\n   The naturalPerson\
    \ object class is a general-purpose auxiliary object\n   class that is intended\
    \ to hold attributes about human beings.  It has\n   been designed for use within\
    \ directory services based on the LDAP\n   protocol [22] and the X.500 family\
    \ of protocols, where support for\n   these attributes is considered useful.\n\
    \   naturalPerson OBJECT-CLASS      ::=     {\n           SUBCLASS OF { top }\n\
    \           KIND auxiliary\n           MAY CONTAIN { NaturalPersonAttributeSet\
    \ }\n           ID pkcs-9-oc-naturalPerson\n   }\n   NaturalPersonAttributeSet\
    \ ATTRIBUTE ::= {\n           emailAddress |\n           unstructuredName |\n\
    \           unstructuredAddress |\n           dateOfBirth |\n           placeOfBirth\
    \ |\n           gender |\n           countryOfCitizenship |\n           countryOfResidence\
    \ |\n           pseudonym |\n           serialNumber,\n           ... -- For future\
    \ extensions\n   }\n   Attributes in the NaturalPersonAttributeSet are defined\
    \ in Section 5.\n"
- title: 5. Selected attribute types
  contents:
  - "5. Selected attribute types\n 5.1 Attribute types for use with the \"pkcsEntity\"\
    \ object class\n  5.1.1 PKCS #7 PDU\n   PKCS #7 provides several formats for enveloped,\
    \ signed and otherwise\n   protected data.  When such information is stored in\
    \ a directory\n   service, the pKCS7PDU attribute may be used.\n   pKCS7PDU ATTRIBUTE\
    \ ::= {\n           WITH SYNTAX ContentInfo\n           ID pkcs-9-at-pkcs7PDU\n\
    \   }\n  5.1.2 PKCS #12 token\n   PKCS #12 provides a format for exchange of personal\
    \ identity\n   information.  When such information is stored in a directory service,\n\
    \   the userPKCS12 attribute should be used.\n   userPKCS12 ATTRIBUTE ::= {\n\
    \           WITH SYNTAX PFX\n           ID pkcs-9-at-userPKCS12\n   }\n   This\
    \ type was originally defined in [20].\n  5.1.3 PKCS #15 token\n   PKCS #15 provides\
    \ a format for cryptographic tokens.  When software\n   variants of such tokens\
    \ are stored in a directory service, the\n   pKCS15Token attribute should be used.\n\
    \   pKCS15Token ATTRIBUTE ::= {\n           WITH SYNTAX PKCS15Token\n        \
    \   ID pkcs-9-at-pkcs15Token\n   }\n  5.1.4 PKCS #8 encrypted private key information\n\
    \   PKCS #8 provides a format for encrypted private keys.  When such\n   information\
    \ is stored in a directory service, the\n   encryptedPrivateKeyInfo attribute\
    \ should be used.\n   encryptedPrivateKeyInfo ATTRIBUTE ::= {\n           WITH\
    \ SYNTAX EncryptedPrivateKeyInfo\n           ID pkcs-9-at-encryptedPrivateKeyInfo\n\
    \   }\n 5.2 Attribute types for use with the \"naturalPerson\" object class\n\
    \  5.2.1 Electronic-mail address\n   The emailAddress attribute type specifies\
    \ the electronic-mail address\n   or addresses of a subject as an unstructured\
    \ ASCII string.  The\n   interpretation of electronic-mail addresses is intended\
    \ to be\n   specified by certificate issuers etc.; no particular interpretation\n\
    \   is required.\n   emailAddress ATTRIBUTE ::= {\n           WITH SYNTAX IA5String\
    \ (SIZE(1..pkcs-9-ub-emailAddress))\n           EQUALITY MATCHING RULE pkcs9CaseIgnoreMatch\n\
    \           ID pkcs-9-at-emailAdress\n   }\n   An electronic-mail address attribute\
    \ can have multiple attribute\n   values.  When comparing two email addresses,\
    \ case is irrelevant.  The\n   pkcs9CaseIgnoreMatch is defined in Section 6.\n\
    \   Note - It is likely that other standards bodies overseeing\n   electronic-mail\
    \ systems will, or have, registered electronic-mail\n   address attribute types\
    \ specific to their system.  The electronic-\n   mail address attribute type defined\
    \ here was intended as a short-term\n   substitute for those specific attribute\
    \ types, but is included here\n   for backwards-compatibility reasons.\n  5.2.2\
    \ Unstructured name\n   The unstructuredName attribute type specifies the name\
    \ or names of a\n   subject as an unstructured ASCII string.  The interpretation\
    \ of\n   unstructured names is intended to be specified by certificate issuers\n\
    \   etc.; no particular interpretation is required.\n   unstructuredName ATTRIBUTE\
    \ ::= {\n           WITH SYNTAX PKCS9String {pkcs-9-ub-unstructuredName}\n   \
    \        EQUALITY MATCHING RULE pkcs9CaseIgnoreMatch\n           ID pkcs-9-at-unstructuredName\n\
    \   }\n   PKCS9String { INTEGER : maxSize} ::= CHOICE {\n           ia5String\
    \       IA5String (SIZE(1..maxSize)),\n           directoryString DirectoryString\
    \ {maxSize}\n   }\n   An unstructured-name attribute can have multiple attribute\
    \ values.\n   When comparing two unstructured names, case is irrelevant.\n   The\
    \ PKCS9String type is defined as a choice of IA5String and\n   DirectoryString.\
    \  Applications SHOULD use the IA5String type when\n   generating attribute values\
    \ in accordance with this version of this\n   document, unless internationalization\
    \ issues makes this impossible.\n   In that case, the UTF8String alternative of\
    \ the DirectoryString\n   alternative is the preferred choice.  PKCS #9-attribute\
    \ processing\n   systems MUST be able to recognize and process all string types\
    \ in\n   PKCS9String values.\n   Note - Version 1.1 of this document defined unstructuredName\
    \ as\n   having the syntax IA5String, but did contain a note explaining that\n\
    \   this might be changed to a CHOICE of different string types in future\n  \
    \ versions.  To better accommodate international names, this type has\n   been\
    \ extended to also include a directory string in this version of\n   this document.\
    \  Since [21] does not support a directory string type\n   containing IA5Strings,\
    \ a separate syntax object identifier has been\n   defined (see [21] and Appendix\
    \ B).\n  5.2.3 Unstructured address\n   The unstructuredAddress attribute type\
    \ specifies the address or\n   addresses of a subject as an unstructured directory\
    \ string.  The\n   interpretation of unstructured addresses is intended to be\
    \ specified\n   by certificate issuers etc; no particular interpretation is required.\n\
    \   A likely interpretation is as an alternative to the postalAddress\n   attribute\
    \ type defined in [8].\n   unstructuredAddress ATTRIBUTE ::= {\n           WITH\
    \ SYNTAX DirectoryString {pkcs-9-ub-unstructuredAddress}\n           EQUALITY\
    \ MATCHING RULE caseIgnoreMatch\n           ID pkcs-9-at-unstructuredAddress\n\
    \   }\n   An unstructured-address attribute can have multiple attribute values.\n\
    \   The caseIgnoreMatch matching rule is defined in [8].\n   Note 1 - It is recommended\
    \ to use the ASN.1 type TeletexString's\n   new-line character (hexadecimal code\
    \ 0d) as a line separator in\n   multi-line addresses.\n   Note 2 - Previous versions\
    \ of this document defined\n   unstructuredAddress as having the following syntax:\n\
    \   CHOICE {\n           teletexString TeletexString,\n           printableString\
    \ PrintableString,\n   }\n   But also mentioned the possibility of a future definition\
    \ as follows:\n   CHOICE {\n           teletexString TeletexString,\n        \
    \   printableString PrintableString,\n           universalString UniversalString\n\
    \   }\n   In this version of this document, the X.520 type DirectoryString has\n\
    \   been used in order to be more aligned with international standards\n   and\
    \ current practice.  When generating attribute values in accordance\n   with this\
    \ version of this document, applications SHOULD use the\n   PrintableString alternative\
    \ unless internationalization issues makes\n   this impossible.  In those cases,\
    \ the UTF8String alternative SHOULD\n   be used.  PKCS #9-attribute processing\
    \ systems MUST be able to\n   recognize and process all string types in DirectoryString\
    \ values.\n  5.2.4 Date of birth\n   The dateOfBirth attribute specifies the date\
    \ of birth for the subject\n   it is associated with.\n   dateOfBirth ATTRIBUTE\
    \ ::= {\n           WITH SYNTAX GeneralizedTime\n           EQUALITY MATCHING\
    \ RULE generalizedTimeMatch\n           SINGLE VALUE TRUE\n           ID pkcs-9-at-dateOfBirth\n\
    \   }\n   dateOfBirth attributes must be single-valued.  The\n   generalizedTimeMatch\
    \ matching rule is defined in [8].\n  5.2.5 Place of birth\n   The placeOfBirth\
    \ attribute specifies the place of birth for the\n   subject it is associated\
    \ with.\n   placeOfBirth ATTRIBUTE ::= {\n           WITH SYNTAX DirectoryString\
    \ {pkcs-9-ub-placeOfBirth}\n           EQUALITY MATCHING RULE caseExactMatch\n\
    \           SINGLE VALUE TRUE\n           ID pkcs-9-at-placeOfBirth\n   }\n  \
    \ placeOfBirth attributes must be single-valued.  The caseExactMatch\n   matching\
    \ rule is defined in [8].\n  5.2.6 Gender\n   The gender attribute specifies the\
    \ gender of the subject it is\n   associated with.\n   gender ATTRIBUTE ::= {\n\
    \           WITH SYNTAX PrintableString (SIZE(1) ^\n                       FROM\
    \ (\"M\" | \"F\" | \"m\" | \"f\"))\n           EQUALITY MATCHING RULE caseIgnoreMatch\n\
    \           SINGLE VALUE TRUE\n           ID pkcs-9-at-gender\n   }\n   The letter\
    \ \"M\" (or \"m\") represents \"male\" and the letter \"F\" (or \"f\")\n   represents\
    \ \"female\".  gender attributes must be single-valued.\n  5.2.7 Country of citizenship\n\
    \   The countryOfCitizenship attribute specifies the (claimed) countries\n   of\
    \ citizenship for the subject it is associated with.  It SHALL be a\n   2-letter\
    \ acronym of a country in accordance with [4].\n   countryOfCitizenship ATTRIBUTE\
    \ ::= {\n           WITH SYNTAX PrintableString (SIZE(2) ^ CONSTRAINED BY {\n\
    \           -- Must be a two-letter country acronym in accordance with\n     \
    \      -- ISO/IEC 3166 --})\n           EQUALITY MATCHING RULE caseIgnoreMatch\n\
    \           ID pkcs-9-at-countryOfCitizenship\n   }\n   Attributes of this type\
    \ need not be single-valued.\n  5.2.8 Country of residence\n   The countryOfResidence\
    \ attribute specifies the (claimed) country of\n   residence for the subject is\
    \ associated with.  It SHALL be a 2-letter\n   acronym of a country in accordance\
    \ with [4].\n   countryOfResidence ATTRIBUTE ::= {\n           WITH SYNTAX PrintableString\
    \ (SIZE(2) ^ CONSTRAINED BY {\n           -- Must be a two-letter country acronym\
    \ in accordance with\n           -- ISO/IEC 3166 --})\n           EQUALITY MATCHING\
    \ RULE caseIgnoreMatch\n           ID pkcs-9-at-countryOfResidence\n   }\n   Attributes\
    \ of this type need not be single-valued, since it is\n   possible to be a resident\
    \ of several countries.\n  5.2.9 Pseudonym\n   The pseudonym attribute type shall\
    \ contain a pseudonym of a subject.\n   The exact interpretation of pseudonyms\
    \ is intended to be specified by\n   certificate issuers etc.; no particular interpretation\
    \ is required.\n   pseudonym ATTRIBUTE ::= {\n           WITH SYNTAX DirectoryString\
    \ {pkcs-9-ub-pseudonym}\n           EQUALITY MATCHING RULE caseExactMatch\n  \
    \         ID id-at-pseudonym\n   }\n   Note - The pseudonym attribute has received\
    \ an object identifier in\n   the joint-iso-itu-t object identifier tree.\n  \
    \ The caseExactMatch matching rule is defined in [8].\n  5.2.10 Serial number\n\
    \   The serialNumber attribute is defined in [8].\n 5.3 Attribute types for use\
    \ in PKCS #7 data\n  5.3.1 Content type\n   The contentType attribute type specifies\
    \ the content type of the\n   ContentInfo value being signed in PKCS #7 (or S/MIME\
    \ CMS) digitally\n   signed data.  In such data, the contentType attribute type\
    \ is\n   required if there are any PKCS #7 authenticated attributes.\n   contentType\
    \ ATTRIBUTE ::= {\n           WITH SYNTAX ContentType\n           EQUALITY MATCHING\
    \ RULE objectIdentifierMatch\n           SINGLE VALUE TRUE\n           ID pkcs-9-at-contentType\n\
    \   }\n   ContentType ::= OBJECT IDENTIFIER\n   As indicated, content-type attributes\
    \ must have a single attribute\n   value.  For two content-type values to match,\
    \ their octet string\n   representation must be of equal length and corresponding\
    \ octets\n   identical.  The objectIdentifierMatch matching rule is defined in\n\
    \   [7].\n   Note - This attribute type is described in [3] as well.\n  5.3.2\
    \ Message digest\n   The messageDigest attribute type specifies the message digest\
    \ of the\n   contents octets of the DER-encoding of the content field of the\n\
    \   ContentInfo value being signed in PKCS #7 digitally signed data,\n   where\
    \ the message digest is computed under the signer's message\n   digest algorithm.\
    \  The message-digest attribute type is required in\n   these cases if there are\
    \ any PKCS #7 authenticated attributes\n   present.\n   messageDigest ATTRIBUTE\
    \ ::= {\n           WITH SYNTAX MessageDigest\n           EQUALITY MATCHING RULE\
    \ octetStringMatch\n           SINGLE VALUE TRUE\n           ID pkcs-9-at-messageDigest\n\
    \   }\n   MessageDigest ::= OCTET STRING\n   As indicated, a message-digest attribute\
    \ must have a single attribute\n   value.  For two messageDigest values to match,\
    \ their octet string\n   representation must be of equal length and corresponding\
    \ octets\n   identical.  The octetStringMatch matching rule is defined in [8].\n\
    \   Note - This attribute is described in [3] as well.\n  5.3.3 Signing time\n\
    \   The signingTime attribute type is intended for PKCS #7 digitally\n   signed\
    \ data.  It specifies the time at which the signer (purportedly)\n   performed\
    \ the signing process.\n   signingTime ATTRIBUTE ::= {\n           WITH SYNTAX\
    \ SigningTime\n           EQUALITY MATCHING RULE signingTimeMatch\n          \
    \ SINGLE VALUE TRUE\n           ID pkcs-9-at-signingTime\n   }\n   SigningTime\
    \ ::= Time -- imported from ISO/IEC 9594-8\n   A signing-time attribute must have\
    \ a single attribute value.\n   The signingTimeMatch matching rule (defined in\
    \ Section 6.1) returns\n   TRUE if an attribute value represents the same time\
    \ as a presented\n   value.\n   Quoting from [3]:\n   \"Dates between 1 January\
    \ 1950 and 31 December 2049 (inclusive) MUST\n   be encoded as UTCTime.  Any dates\
    \ with year values before 1950 or\n   after 2049 MUST be encoded as GeneralizedTime.\
    \  [Further,] UTCTime\n   values MUST be expressed in Greenwich Mean Time (Zulu)\
    \ and MUST\n   include seconds (i.e., times are YYMMDDHHMMSSZ), even where the\n\
    \   number of seconds is zero.  Midnight (GMT) must be represented as\n   \"YYMMDD000000Z\"\
    .  Century information is implicit, and the century\n   shall be determined as\
    \ follows:\n   - Where YY is greater than or equal to 50, the year shall be\n\
    \     interpreted as 19YY; and\n   - Where YY is less than 50, the year shall\
    \ be interpreted as 20YY.\n   GeneralizedTime values shall be expressed in Greenwich\
    \ Mean Time\n   (Zulu) and must include seconds (i.e., times are YYYYMMDDHHMMSSZ),\n\
    \   even where the number of seconds is zero.  GeneralizedTime values\n   must\
    \ not include fractional seconds.\"\n   Note 1 - The definition of SigningTime\
    \ matches the definition of Time\n   specified in [10].\n   Note 2 - No requirement\
    \ is imposed concerning the correctness of the\n   signing time, and acceptance\
    \ of a purported signing time is a matter\n   of a recipient's discretion.  It\
    \ is expected, however, that some\n   signers, such as time-stamp servers, will\
    \ be trusted implicitly.\n  5.3.4 Random nonce\n   The randomNonce attribute type\
    \ is intended for PKCS #7 digitally\n   signed data.  It may be used by a signer\
    \ unable (or unwilling) to\n   specify the time at which the signing process was\
    \ performed.  Used in\n   a correct manner, it will make it possible for the signer\
    \ to protect\n   against certain attacks, i.e. replay attacks.\n   randomNonce\
    \ ATTRIBUTE ::= {\n           WITH SYNTAX RandomNonce\n           EQUALITY MATCHING\
    \ RULE octetStringMatch\n           SINGLE VALUE TRUE\n           ID pkcs-9-at-randomNonce\n\
    \   }\n   RandomNonce ::= OCTET STRING (SIZE(4..MAX))\n           -- At least\
    \ four bytes long\n   A random nonce attribute must have a single attribute value.\n\
    \  5.3.5 Sequence number\n   The sequenceNumber attribute type is intended for\
    \ PKCS #7 digitally\n   signed data.  A signer wishing to associate a sequence\
    \ number to all\n   signature operations (much like a physical checkbook) may\
    \ use it as\n   an alternative to the randomNonce attribute.  Used in a correct\n\
    \   manner, it will make it possible for the signer to protect against\n   certain\
    \ attacks, i.e. replay attacks.\n   sequenceNumber ATTRIBUTE ::= {\n         \
    \  WITH SYNTAX SequenceNumber\n           EQUALITY MATCHING RULE integerMatch\n\
    \           SINGLE VALUE TRUE\n           ID pkcs-9-at-sequenceNumber\n   }\n\
    \   SequenceNumber ::= INTEGER (1..MAX)\n   A sequence number attribute must have\
    \ a single attribute value.\n   The integerMatch matching rule is defined in [8].\n\
    \  5.3.6 Countersignature\n   The counterSignature attribute type specifies one\
    \ or more signatures\n   on the content octets of the DER encoding of the encryptedDigest\n\
    \   field of a SignerInfo value in PKCS #7 digitally signed data.  Thus,\n   the\
    \ countersignature attribute type countersigns (signs in serial)\n   another signature.\
    \  The countersignature attribute must be an\n   unauthenticated PKCS #7 attribute;\
    \ it cannot be an authenticated\n   attribute.\n   counterSignature ATTRIBUTE\
    \ ::= {\n           WITH SYNTAX SignerInfo\n           ID pkcs-9-at-counterSignature\n\
    \   }\n   Countersignature values have the same meaning as SignerInfo values\n\
    \   for ordinary signatures (see Section 9 of [14] and Section 5.3 of\n   [3]),\
    \ except that:\n   1. The authenticatedAttributes field must contain a messageDigest\n\
    \   attribute if it contains any other attributes, but need not contain a\n  \
    \ contentType attribute, as there is no content type for\n   countersignatures;\
    \ and\n   2. The input to the message-digesting process is the content octets\n\
    \   of the DER encoding of the signatureValue field of the SignerInfo\n   value\
    \ with which the attribute is associated.\n   A countersignature attribute can\
    \ have multiple attribute values.\n   Note 1 - The fact that a countersignature\
    \ is computed on a signature\n   (encrypted digest) means that the countersigning\
    \ process need not\n   know the original content input to the signing process.\
    \  This has\n   advantages both in efficiency and in confidentiality.\n   Note\
    \ 2 - A countersignature, since it has type SignerInfo, can itself\n   contain\
    \ a countersignature attribute.  Thus it is possible to\n   construct arbitrarily\
    \ long series of countersignatures.\n 5.4 Attribute types for use with PKCS #10\
    \ certificate requests\n  5.4.1 Challenge password\n   The challengePassword attribute\
    \ type specifies a password by which an\n   entity may request certificate revocation.\
    \  The interpretation of\n   challenge passwords is intended to be specified by\
    \ certificate\n   issuers etc; no particular interpretation is required.\n   challengePassword\
    \ ATTRIBUTE ::= {\n           WITH SYNTAX DirectoryString {pkcs-9-ub-challengePassword}\n\
    \           EQUALITY MATCHING RULE caseExactMatch\n           SINGLE VALUE TRUE\n\
    \           ID pkcs-9-at-challengePassword\n   }\n   A challenge-password attribute\
    \ must have a single attribute value.\n   ChallengePassword attribute values generated\
    \ in accordance with this\n   version of this document SHOULD use the PrintableString\
    \ encoding\n   whenever possible.  If internationalization issues make this\n\
    \   impossible, the UTF8String alternative SHOULD be used.  PKCS #9-\n   attribute\
    \ processing systems MUST be able to recognize and process\n   all string types\
    \ in DirectoryString values.\n   Note - Version 1.1 of this document defined challengePassword\
    \ as\n   having the syntax CHOICE {PrintableString, T61String}, but did\n   contain\
    \ a note explaining that this might be changed to a CHOICE of\n   different string\
    \ types in the future See also Note 2 in section\n   5.2.3.\n  5.4.2 Extension\
    \ request\n   The extensionRequest attribute type may be used to carry information\n\
    \   about certificate extensions the requester wishes to be included in a\n  \
    \ certificate.\n   extensionRequest ATTRIBUTE ::= {\n           WITH SYNTAX ExtensionRequest\n\
    \           SINGLE VALUE TRUE\n           ID pkcs-9-at-extensionRequest\n   }\n\
    \   ExtensionRequest ::= Extensions\n   The Extensions type is imported from [10].\n\
    \  5.4.3 Extended-certificate attributes (deprecated)\n   The extendedCertificateAttributes\
    \ attribute type specified a set of\n   attributes for a PKCS #6 [13] extended\
    \ certificate in a PKCS #10\n   certification request (the value of the extended\
    \ certificate-\n   attributes attribute would become the extension in the requested\
    \ PKCS\n   #6 extended certificate).  Since the status of PKCS #6 is historic\n\
    \   after the introduction of X.509 v3 certificates [10], the use of this\n  \
    \ attribute is deprecated.\n   extendedCertificateAttributes ATTRIBUTE ::= {\n\
    \           WITH SYNTAX SET OF Attribute\n           SINGLE VALUE TRUE\n     \
    \      ID pkcs-9-at-extendedCertificateAttributes\n   }\n   An extended certificate\
    \ attributes attribute must have a single\n   attribute value (that value is a\
    \ set, which itself may contain\n   multiple values, but there must be only one\
    \ set).\n 5.5 Attributes for use in PKCS #12 \"PFX\" PDUs or PKCS #15 tokens\n\
    \  5.5.1 Friendly name\n   The friendlyName attribute type specifies a user-friendly\
    \ name of the\n   object it belongs to.  It is referenced in [17].\n   friendlyName\
    \ ATTRIBUTE ::= {\n           WITH SYNTAX BMPString (SIZE(1..pkcs-9-ub-friendlyName))\n\
    \           EQUALITY MATCHING RULE caseIgnoreMatch\n           SINGLE VALUE TRUE\n\
    \           ID pkcs-9-at-friendlyName\n   }\n   As indicated, friendlyName attributes\
    \ must have a single attribute\n   value.\n  5.5.2 Local key identifier\n   The\
    \ localKeyId attribute type specifies an identifier for a\n   particular key.\
    \  It is only to be used locally in applications.  This\n   attribute is referenced\
    \ in [17].\n   localKeyId ATTRIBUTE ::= {\n           WITH SYNTAX OCTET STRING\n\
    \           EQUALITY MATCHING RULE octetStringMatch\n           SINGLE VALUE TRUE\n\
    \           ID pkcs-9-at-localKeyId\n   }\n   As indicated, localKeyId attributes\
    \ must have a single attribute\n   value.  For two localKeyId values to match,\
    \ their octet string\n   representation must be of equal length and corresponding\
    \ octets\n   identical.\n 5.6 Attributes defined in S/MIME\n   S/MIME (c.f. [12])\
    \ defines some attributes and object identifiers in\n   the PKCS #9 object identifier\
    \ tree.  For completeness, they are\n   mentioned here.\n  5.6.1 Signing description\n\
    \   The signingDescription attribute is intended to provide a short\n   synopsis\
    \ of a message that can be used to present a user with an\n   additional confirmation\
    \ step before committing to a cryptographic\n   operation.  In most cases, the\
    \ replication of the \"Subject:\" line\n   from the header of a message should\
    \ be sufficient and is recommended.\n   signingDescription ATTRIBUTE ::= {\n \
    \          WITH SYNTAX DirectoryString {pkcs-9-ub-signingDescription}\n      \
    \     EQUALITY MATCHING RULE caseIgnoreMatch\n           SINGLE VALUE TRUE\n \
    \          ID pkcs-9-at-signingDescription\n   }\n  5.6.2 S/MIME capabilities\n\
    \   The syntax and semantics of the smimeCapabilities attribute is\n   defined\
    \ in [12].  It is included here for the sake of completeness.\n   smimeCapabilities\
    \ ATTRIBUTE ::= {\n           WITH SYNTAX SMIMECapabilities\n           SINGLE\
    \ VALUE\n           ID pkcs-9-at-smimeCapabilities\n   }\n   SMIMECapabilities\
    \ ::= SEQUENCE OF SMIMECapability\n   SMIMECapability ::= SEQUENCE {\n       \
    \    algorithm  ALGORITHM.&id ({SMIMEv3Algorithms}),\n           parameters ALGORITHM.&Type\
    \ ({SMIMEv3Algorithms}{@algorithm})\n   }\n   SMIMEv3Algorithms ALGORITHM ::=\
    \ {... -- See RFC 2633 -- }\n"
- title: 6. Matching rules
  contents:
  - "6. Matching rules\n   This section defines matching rules used in the definition\
    \ of\n   attributes in this document.\n 6.1 Case ignore match\n   The pkcs9CaseIgnoreMatch\
    \ rule compares for equality a presented\n   string with an attribute value of\
    \ type PKCS9String, without regard to\n   the case (upper or lower) of the strings\
    \ (e.g. \"Pkcs\" and \"PKCS\"\n   match).\n   pkcs9CaseIgnoreMatch MATCHING-RULE\
    \ ::= {\n           SYNTAX  PKCS9String {pkcs9-ub-match}\n           ID      \
    \        id-mr-pkcs9CaseIgnoreMatch\n   }\n   The rule returns TRUE if the strings\
    \ are the same length and\n   corresponding characters are identical except possibly\
    \ with regard to\n   case.\n   Where the strings being matched are of different\
    \ ASN.1 syntax, the\n   comparison proceeds as normal so long as the corresponding\
    \ characters\n   are in both character sets.  Otherwise matching fails.\n 6.2\
    \ Signing time match\n   The signingTimeMatch rule compares for equality a presented\
    \ value\n   with an attribute value of type SigningTime.\n   signingTimeMatch\
    \ MATCHING-RULE ::= {\n           SYNTAX SigningTime\n           ID pkcs-9-mr-signingTimeMatch\n\
    \   }\n   The rule returns TRUE if the attribute value represents the same time\n\
    \   as the presented value.  If a time is specified with seconds (or\n   fractional\
    \ seconds) absent, the number of seconds (fractional\n   seconds) is assumed to\
    \ be zero.\n   Where the strings being matched are of different ASN.1 syntax,\
    \ the\n   comparison proceeds as follows:\n   a) Convert both values to DER-encoded\
    \ values of type GeneralizedTime,\n     coordinated universal time.  If this is\
    \ not possible the matching\n     fails.\n   b) Compare the strings for equality.\
    \  The rule returns TRUE if and\n     only if the strings are of the same length\
    \ and corresponding octets\n     are identical.\n"
- title: 7. Security Considerations
  contents:
  - "7. Security Considerations\n   Attributes of directory entries are used to provide\
    \ descriptive\n   information about the real-world objects they represent, which\
    \ can be\n   people, organizations or devices.  Most countries have privacy laws\n\
    \   regarding the publication of information about people.\n   The challengePassword\
    \ attribute should not be stored un-encrypted in\n   a directory.\n   Users of\
    \ directory-aware applications making use of attributes\n   defined for use with\
    \ the pkcsEntity object class should make sure\n   that the class's attributes\
    \ are adequately protected, since they may\n   potentially be read by third parties.\
    \  If a password-protected value\n   is stored (PKCS #8, #12 or #15), the directory\
    \ should authenticate\n   the requester before delivering the value to prevent\
    \ an off-line\n   password-search attack.  Note that this potentially raises non-\n\
    \   repudiation issues since the directory itself can try a password\n   search\
    \ to recover a private value, if stored this way.\n"
- title: 8. Authors' Addresses
  contents:
  - "8. Authors' Addresses\n   Magnus Nystrom\n   RSA Security\n   Box 10704\n   S-121\
    \ 29 Stockholm\n   Sweden\n   EMail: magnus@rsasecurity.com\n   Burt Kaliski\n\
    \   RSA Security\n   20 Crosby Drive\n   Bedford, MA 01730 USA\n   EMail: bkaliski@rsasecurity.com\n"
- title: APPENDICES
  contents:
  - 'APPENDICES

    '
- title: A. ASN.1 module
  contents:
  - "A. ASN.1 module\n   This appendix includes all of the ASN.1 type and value definitions\n\
    \   contained in this document in the form of the ASN.1 module PKCS-9.\n   PKCS-9\
    \ {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1)\n   pkcs-9(9) modules(0)\
    \ pkcs-9(1)}\n   DEFINITIONS IMPLICIT TAGS ::=\n   BEGIN\n   -- EXPORTS All --\n\
    \   -- All types and values defined in this module is exported for use\n   --\
    \ in other ASN.1 modules.\n   IMPORTS\n   informationFramework, authenticationFramework,\n\
    \   selectedAttributeTypes, upperBounds , id-at\n           FROM UsefulDefinitions\
    \ {joint-iso-itu-t ds(5) module(1)\n           usefulDefinitions(0) 3}\n   ub-name\n\
    \           FROM UpperBounds upperBounds\n   OBJECT-CLASS, ATTRIBUTE, MATCHING-RULE,\
    \ Attribute, top,\n   objectIdentifierMatch\n           FROM InformationFramework\
    \ informationFramework\n   ALGORITHM, Extensions, Time\n           FROM AuthenticationFramework\
    \ authenticationFramework\n   DirectoryString, octetStringMatch, caseIgnoreMatch,\
    \ caseExactMatch,\n   generalizedTimeMatch, integerMatch, serialNumber\n     \
    \      FROM SelectedAttributeTypes selectedAttributeTypes\n   ContentInfo, SignerInfo\n\
    \           FROM CryptographicMessageSyntax {iso(1) member-body(2) us(840)\n \
    \          rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) modules(0) cms(1)}\n   EncryptedPrivateKeyInfo\n\
    \           FROM PKCS-8 {iso(1) member-body(2) us(840) rsadsi(113549)\n      \
    \     pkcs(1) pkcs-8(8) modules(1) pkcs-8(1)}\n   PFX\n           FROM PKCS-12\
    \ {iso(1) member-body(2) us(840) rsadsi(113549)\n           pkcs(1) pkcs-12(12)\
    \ modules(0) pkcs-12(1)}\n   PKCS15Token\n           FROM PKCS-15 {iso(1) member-body(2)\
    \ us(840) rsadsi(113549)\n           pkcs(1) pkcs-15(15) modules(1) pkcs-15(1)};\n\
    \   -- Upper bounds\n   pkcs-9-ub-pkcs9String         INTEGER ::= 255\n   pkcs-9-ub-emailAddress\
    \        INTEGER ::= pkcs-9-ub-pkcs9String\n   pkcs-9-ub-unstructuredName    INTEGER\
    \ ::= pkcs-9-ub-pkcs9String\n   pkcs-9-ub-unstructuredAddress INTEGER ::= pkcs-9-ub-pkcs9String\n\
    \   pkcs-9-ub-challengePassword   INTEGER ::= pkcs-9-ub-pkcs9String\n   pkcs-9-ub-friendlyName\
    \        INTEGER ::= pkcs-9-ub-pkcs9String\n   pkcs-9-ub-signingDescription  INTEGER\
    \ ::= pkcs-9-ub-pkcs9String\n   pkcs-9-ub-match               INTEGER ::= pkcs-9-ub-pkcs9String\n\
    \   pkcs-9-ub-pseudonym           INTEGER ::= ub-name\n   pkcs-9-ub-placeOfBirth\
    \        INTEGER ::= ub-name\n   -- Object Identifiers\n   pkcs-9 OBJECT IDENTIFIER\
    \ ::= {iso(1) member-body(2) us(840)\n                                 rsadsi(113549)\
    \ pkcs(1) 9}\n     -- Main arcs\n   pkcs-9-mo OBJECT IDENTIFIER ::= {pkcs-9 0}\
    \  -- Modules branch\n   pkcs-9-oc OBJECT IDENTIFIER ::= {pkcs-9 24} -- Object\
    \ class branch\n   pkcs-9-at OBJECT IDENTIFIER ::= {pkcs-9 25} -- Attribute branch,\
    \ for\n                                               -- new  attributes\n   pkcs-9-sx\
    \ OBJECT IDENTIFIER ::= {pkcs-9 26} -- For syntaxes (RFC 2252)\n   pkcs-9-mr OBJECT\
    \ IDENTIFIER ::= {pkcs-9 27} -- Matching rules\n     -- Object classes\n   pkcs-9-oc-pkcsEntity\
    \    OBJECT IDENTIFIER ::= {pkcs-9-oc 1}\n   pkcs-9-oc-naturalPerson OBJECT IDENTIFIER\
    \ ::= {pkcs-9-oc 2}\n     -- Attributes\n   pkcs-9-at-emailAddress        OBJECT\
    \ IDENTIFIER ::= {pkcs-9 1}\n   pkcs-9-at-unstructuredName    OBJECT IDENTIFIER\
    \ ::= {pkcs-9 2}\n   pkcs-9-at-contentType         OBJECT IDENTIFIER ::= {pkcs-9\
    \ 3}\n   pkcs-9-at-messageDigest       OBJECT IDENTIFIER ::= {pkcs-9 4}\n   pkcs-9-at-signingTime\
    \         OBJECT IDENTIFIER ::= {pkcs-9 5}\n   pkcs-9-at-counterSignature    OBJECT\
    \ IDENTIFIER ::= {pkcs-9 6}\n   pkcs-9-at-challengePassword   OBJECT IDENTIFIER\
    \ ::= {pkcs-9 7}\n   pkcs-9-at-unstructuredAddress OBJECT IDENTIFIER ::= {pkcs-9\
    \ 8}\n   pkcs-9-at-extendedCertificateAttributes\n                           \
    \      OBJECT IDENTIFIER ::= {pkcs-9 9}\n   -- Obsolete (?) attribute identifiers,\
    \ purportedly from \"tentative\n   -- PKCS #9 draft\"\n   -- pkcs-9-at-issuerAndSerialNumber\
    \ OBJECT IDENTIFIER ::= {pkcs-9 10}\n   -- pkcs-9-at-passwordCheck         OBJECT\
    \ IDENTIFIER ::= {pkcs-9 11}\n   -- pkcs-9-at-publicKey             OBJECT IDENTIFIER\
    \ ::= {pkcs-9 12}\n   pkcs-9-at-signingDescription       OBJECT IDENTIFIER ::=\
    \ {pkcs-9 13}\n   pkcs-9-at-extensionRequest         OBJECT IDENTIFIER ::= {pkcs-9\
    \ 14}\n   pkcs-9-at-smimeCapabilities        OBJECT IDENTIFIER ::= {pkcs-9 15}\n\
    \   -- Unused (?)\n   -- pkcs-9-at-?                     OBJECT IDENTIFIER ::=\
    \ {pkcs-9 17}\n   -- pkcs-9-at-?                     OBJECT IDENTIFIER ::= {pkcs-9\
    \ 18}\n   -- pkcs-9-at-?                     OBJECT IDENTIFIER ::= {pkcs-9 19}\n\
    \   pkcs-9-at-friendlyName             OBJECT IDENTIFIER ::= {pkcs-9 20}\n   pkcs-9-at-localKeyId\
    \               OBJECT IDENTIFIER ::= {pkcs-9 21}\n   pkcs-9-at-userPKCS12   \
    \            OBJECT IDENTIFIER ::=\n                                         {2\
    \ 16 840 1 113730 3 1 216}\n   pkcs-9-at-pkcs15Token              OBJECT IDENTIFIER\
    \ ::= {pkcs-9-at 1}\n   pkcs-9-at-encryptedPrivateKeyInfo  OBJECT IDENTIFIER ::=\
    \ {pkcs-9-at 2}\n   pkcs-9-at-randomNonce              OBJECT IDENTIFIER ::= {pkcs-9-at\
    \ 3}\n   pkcs-9-at-sequenceNumber           OBJECT IDENTIFIER ::= {pkcs-9-at 4}\n\
    \   pkcs-9-at-pkcs7PDU                 OBJECT IDENTIFIER ::= {pkcs-9-at 5}\n \
    \    -- IETF PKIX Attribute branch\n   ietf-at                            OBJECT\
    \ IDENTIFIER ::=\n                                         {1 3 6 1 5 5 7 9}\n\
    \   pkcs-9-at-dateOfBirth              OBJECT IDENTIFIER ::= {ietf-at 1}\n   pkcs-9-at-placeOfBirth\
    \             OBJECT IDENTIFIER ::= {ietf-at 2}\n   pkcs-9-at-gender         \
    \          OBJECT IDENTIFIER ::= {ietf-at 3}\n   pkcs-9-at-countryOfCitizenship\
    \     OBJECT IDENTIFIER ::= {ietf-at 4}\n   pkcs-9-at-countryOfResidence     \
    \  OBJECT IDENTIFIER ::= {ietf-at 5}\n     -- Syntaxes (for use with LDAP accessible\
    \ directories)\n   pkcs-9-sx-pkcs9String              OBJECT IDENTIFIER ::= {pkcs-9-sx\
    \ 1}\n   pkcs-9-sx-signingTime              OBJECT IDENTIFIER ::= {pkcs-9-sx 2}\n\
    \     -- Matching rules\n   pkcs-9-mr-caseIgnoreMatch          OBJECT IDENTIFIER\
    \ ::= {pkcs-9-mr 1}\n   pkcs-9-mr-signingTimeMatch         OBJECT IDENTIFIER ::=\
    \ {pkcs-9-mr 2}\n     -- Arcs with attributes defined elsewhere\n   smime    \
    \                          OBJECT IDENTIFIER ::= {pkcs-9 16}\n     -- Main arc\
    \ for S/MIME (RFC 2633)\n   certTypes                          OBJECT IDENTIFIER\
    \ ::= {pkcs-9 22}\n     -- Main arc for certificate types defined in PKCS #12\n\
    \   crlTypes                           OBJECT IDENTIFIER ::= {pkcs-9 23}\n   \
    \  -- Main arc for crl types defined in PKCS #12\n     -- Other object identifiers\n\
    \   id-at-pseudonym                    OBJECT IDENTIFIER ::= {id-at 65}\n   --\
    \ Useful types\n   PKCS9String {INTEGER : maxSize} ::= CHOICE {\n           ia5String\
    \ IA5String (SIZE(1..maxSize)),\n           directoryString DirectoryString {maxSize}\n\
    \   }\n   -- Object classes\n   pkcsEntity OBJECT-CLASS ::= {\n           SUBCLASS\
    \ OF     { top }\n           KIND            auxiliary\n           MAY CONTAIN\
    \     { PKCSEntityAttributeSet }\n           ID              pkcs-9-oc-pkcsEntity\n\
    \   }\n   naturalPerson OBJECT-CLASS ::= {\n           SUBCLASS OF     { top }\n\
    \           KIND            auxiliary\n           MAY CONTAIN     { NaturalPersonAttributeSet\
    \ }\n           ID              pkcs-9-oc-naturalPerson\n   }\n   -- Attribute\
    \ sets\n   PKCSEntityAttributeSet ATTRIBUTE ::= {\n           pKCS7PDU |\n   \
    \        userPKCS12 |\n           pKCS15Token |\n           encryptedPrivateKeyInfo,\n\
    \           ... -- For future extensions\n   }\n   NaturalPersonAttributeSet ATTRIBUTE\
    \ ::= {\n           emailAddress |\n           unstructuredName |\n          \
    \ unstructuredAddress |\n           dateOfBirth |\n           placeOfBirth |\n\
    \           gender |\n           countryOfCitizenship |\n           countryOfResidence\
    \ |\n           pseudonym |\n           serialNumber,\n           ... -- For future\
    \ extensions\n   }\n   -- Attributes\n   pKCS7PDU ATTRIBUTE ::= {\n          \
    \ WITH SYNTAX ContentInfo\n           ID pkcs-9-at-pkcs7PDU\n   }\n   userPKCS12\
    \ ATTRIBUTE ::= {\n           WITH SYNTAX PFX\n           ID pkcs-9-at-userPKCS12\n\
    \   }\n   pKCS15Token ATTRIBUTE ::= {\n           WITH SYNTAX PKCS15Token\n  \
    \         ID pkcs-9-at-pkcs15Token\n   }\n   encryptedPrivateKeyInfo ATTRIBUTE\
    \ ::= {\n           WITH SYNTAX EncryptedPrivateKeyInfo\n           ID pkcs-9-at-encryptedPrivateKeyInfo\n\
    \   }\n   emailAddress ATTRIBUTE ::= {\n           WITH SYNTAX IA5String (SIZE(1..pkcs-9-ub-emailAddress))\n\
    \           EQUALITY MATCHING RULE pkcs9CaseIgnoreMatch\n           ID pkcs-9-at-emailAddress\n\
    \   }\n   unstructuredName ATTRIBUTE ::= {\n           WITH SYNTAX PKCS9String\
    \ {pkcs-9-ub-unstructuredName}\n           EQUALITY MATCHING RULE pkcs9CaseIgnoreMatch\n\
    \           ID pkcs-9-at-unstructuredName\n   }\n   unstructuredAddress ATTRIBUTE\
    \ ::= {\n           WITH SYNTAX DirectoryString {pkcs-9-ub-unstructuredAddress}\n\
    \           EQUALITY MATCHING RULE caseIgnoreMatch\n           ID pkcs-9-at-unstructuredAddress\n\
    \   }\n   dateOfBirth ATTRIBUTE ::= {\n           WITH SYNTAX GeneralizedTime\n\
    \           EQUALITY MATCHING RULE generalizedTimeMatch\n           SINGLE VALUE\
    \ TRUE\n           ID pkcs-9-at-dateOfBirth\n   }\n   placeOfBirth ATTRIBUTE ::=\
    \ {\n           WITH SYNTAX DirectoryString {pkcs-9-ub-placeOfBirth}\n       \
    \    EQUALITY MATCHING RULE caseExactMatch\n           SINGLE VALUE TRUE\n   \
    \        ID pkcs-9-at-placeOfBirth\n   }\n   gender ATTRIBUTE ::= {\n        \
    \   WITH SYNTAX PrintableString (SIZE(1) ^\n                       FROM (\"M\"\
    \ | \"F\" | \"m\" | \"f\"))\n           EQUALITY MATCHING RULE caseIgnoreMatch\n\
    \           SINGLE VALUE TRUE\n           ID pkcs-9-at-gender\n   }\n   countryOfCitizenship\
    \ ATTRIBUTE ::= {\n           WITH SYNTAX PrintableString (SIZE(2))(CONSTRAINED\
    \ BY {\n           -- Must be a two-letter country acronym in accordance with\n\
    \           -- ISO/IEC 3166 --})\n           EQUALITY MATCHING RULE caseIgnoreMatch\n\
    \           ID pkcs-9-at-countryOfCitizenship\n   }\n   countryOfResidence ATTRIBUTE\
    \ ::= {\n           WITH SYNTAX PrintableString (SIZE(2))(CONSTRAINED BY {\n \
    \          -- Must be a two-letter country acronym in accordance with\n      \
    \     -- ISO/IEC 3166 --})\n           EQUALITY MATCHING RULE caseIgnoreMatch\n\
    \           ID pkcs-9-at-countryOfResidence\n   }\n   pseudonym ATTRIBUTE ::=\
    \ {\n           WITH SYNTAX DirectoryString {pkcs-9-ub-pseudonym}\n          \
    \ EQUALITY MATCHING RULE caseExactMatch\n           ID id-at-pseudonym\n   }\n\
    \   contentType ATTRIBUTE ::= {\n           WITH SYNTAX ContentType\n        \
    \   EQUALITY MATCHING RULE objectIdentifierMatch\n           SINGLE VALUE TRUE\n\
    \           ID pkcs-9-at-contentType\n   }\n   ContentType ::= OBJECT IDENTIFIER\n\
    \   messageDigest ATTRIBUTE ::= {\n           WITH SYNTAX MessageDigest\n    \
    \       EQUALITY MATCHING RULE octetStringMatch\n           SINGLE VALUE TRUE\n\
    \           ID pkcs-9-at-messageDigest\n   }\n   MessageDigest ::= OCTET STRING\n\
    \   signingTime ATTRIBUTE ::= {\n           WITH SYNTAX SigningTime\n        \
    \   EQUALITY MATCHING RULE signingTimeMatch\n           SINGLE VALUE TRUE\n  \
    \         ID pkcs-9-at-signingTime\n   }\n   SigningTime ::= Time -- imported\
    \ from ISO/IEC 9594-8\n   randomNonce ATTRIBUTE ::= {\n           WITH SYNTAX\
    \ RandomNonce\n           EQUALITY MATCHING RULE octetStringMatch\n          \
    \ SINGLE VALUE TRUE\n           ID pkcs-9-at-randomNonce\n   }\n   RandomNonce\
    \ ::= OCTET STRING (SIZE(4..MAX))\n           -- At least four bytes long\n  \
    \ sequenceNumber ATTRIBUTE ::= {\n           WITH SYNTAX SequenceNumber\n    \
    \       EQUALITY MATCHING RULE integerMatch\n           SINGLE VALUE TRUE\n  \
    \         ID pkcs-9-at-sequenceNumber\n   }\n   SequenceNumber ::= INTEGER (1..MAX)\n\
    \   counterSignature ATTRIBUTE ::= {\n           WITH SYNTAX SignerInfo\n    \
    \       ID pkcs-9-at-counterSignature\n   }\n   challengePassword ATTRIBUTE ::=\
    \ {\n           WITH SYNTAX DirectoryString {pkcs-9-ub-challengePassword}\n  \
    \         EQUALITY MATCHING RULE caseExactMatch\n           SINGLE VALUE TRUE\n\
    \           ID pkcs-9-at-challengePassword\n   }\n   extensionRequest ATTRIBUTE\
    \ ::= {\n           WITH SYNTAX ExtensionRequest\n           SINGLE VALUE TRUE\n\
    \           ID pkcs-9-at-extensionRequest\n   }\n   ExtensionRequest ::= Extensions\n\
    \   extendedCertificateAttributes ATTRIBUTE ::= {\n           WITH SYNTAX SET\
    \ OF Attribute\n           SINGLE VALUE TRUE\n           ID pkcs-9-at-extendedCertificateAttributes\n\
    \   }\n   friendlyName ATTRIBUTE ::= {\n           WITH SYNTAX BMPString (SIZE(1..pkcs-9-ub-friendlyName))\n\
    \           EQUALITY MATCHING RULE caseIgnoreMatch\n           SINGLE VALUE TRUE\n\
    \           ID pkcs-9-at-friendlyName\n   }\n   localKeyId ATTRIBUTE ::= {\n \
    \          WITH SYNTAX OCTET STRING\n           EQUALITY MATCHING RULE octetStringMatch\n\
    \           SINGLE VALUE TRUE\n           ID pkcs-9-at-localKeyId\n   }\n   signingDescription\
    \ ATTRIBUTE ::= {\n           WITH SYNTAX DirectoryString {pkcs-9-ub-signingDescription}\n\
    \           EQUALITY MATCHING RULE caseIgnoreMatch\n           SINGLE VALUE TRUE\n\
    \           ID pkcs-9-at-signingDescription\n   }\n   smimeCapabilities ATTRIBUTE\
    \ ::= {\n           WITH SYNTAX SMIMECapabilities\n           SINGLE VALUE TRUE\n\
    \           ID pkcs-9-at-smimeCapabilities\n   }\n   SMIMECapabilities ::= SEQUENCE\
    \ OF SMIMECapability\n   SMIMECapability ::= SEQUENCE {\n           algorithm\
    \  ALGORITHM.&id ({SMIMEv3Algorithms}),\n           parameters ALGORITHM.&Type\
    \ ({SMIMEv3Algorithms}{@algorithm})\n   }\n   SMIMEv3Algorithms ALGORITHM ::=\
    \ {...-- See RFC 2633 --}\n    -- Matching rules\n   pkcs9CaseIgnoreMatch MATCHING-RULE\
    \ ::= {\n           SYNTAX PKCS9String {pkcs-9-ub-match}\n           ID pkcs-9-mr-caseIgnoreMatch\n\
    \   }\n   signingTimeMatch MATCHING-RULE ::= {\n           SYNTAX SigningTime\n\
    \           ID pkcs-9-mr-signingTimeMatch\n   }\n   END\n"
- title: B. BNF schema summary This appendix provides augmented BNF [2]
  contents:
  - "B. BNF schema summary This appendix provides augmented BNF [2]\n   definitions\
    \ of the object class and most attribute types specified in\n   this document\
    \ along with their associated syntaxes and matching\n   rules.  The ABNF definitions\
    \ have been done in accordance with [21],\n   in an attempt to ease integration\
    \ with LDAP-accessible Directory\n   systems.  Lines have been folded in some\
    \ cases to improve\n   readability.\n B.1 Syntaxes\n   This section defines all\
    \ syntaxes that are used in this document.\n  B.1.1 PKCS9String\n   (\n      \
    \     1.2.840.113549.1.9.26.1\n           DESC 'PKCS9String'\n   )\n   The encoding\
    \ of a value in this syntax is the string value itself.\n  B.1.2 SigningTime\n\
    \   (\n           1.2.840.113549.1.9.26.2\n           DESC 'SigningTime'\n   )\n\
    \   Values in this syntax are encoded as printable strings, represented\n   as\
    \ specified in [5].  Note that the time zone must be specified.  For\n   example,\
    \ \"199412161032Z\".\n B.2 Object classes\n  B.2.1 pkcsEntity\n   (\n        \
    \   1.2.840.113549.1.9.24.1\n           NAME 'pkcsEntity'\n           SUP top\n\
    \           AUXILIARY\n           MAY (\n           pKCS7PDU $ userPKCS12 $ pKCS15Token\
    \ $ encryptedPrivateKeyInfo\n           )\n   )\n  B.2.2 naturalPerson\n   (\n\
    \           1.2.840.113549.1.9.24.2\n           NAME 'naturalPerson'\n       \
    \    SUP top\n           AUXILIARY\n           MAY (\n           emailAddress\
    \ $ unstructuredName $ unstructuredAddress $\n           dateOfBirth & placeOfBirth\
    \ & gender & countryOfCitizenship &\n           countryOfResidence & pseudonym\
    \ & serialNumber\n           )\n   )\n B.3 Attribute types\n  B.3.1 pKCS7PDU\n\
    \   This attribute is to be stored and requested in binary form, as\n   pKCS7PDU;binary.\
    \  The attribute values are BER- or DER-encoded\n   ContentInfo values.\n   (\n\
    \           1.2.840.113549.1.9.25.5\n           NAME 'pKCS7PDU'\n           DESC\
    \ 'PKCS #7 ContentInfo PDU'\n           SYNTAX 1.3.6.1.4.1.1466.115.121.1.5\n\
    \   )\n  B.3.2 userPKCS12\n   This attribute is to be stored and requested in\
    \ binary form, as\n   userPKCS12;binary.  The attribute values are PFX PDUs stored\
    \ as\n   binary (BER- or DER-encoded) data.\n   (\n           2.16.840.1.113730.3.1.216\n\
    \           NAME 'userPKCS12'\n           DESC 'PKCS #12 PFX PDU for exchange\
    \ of personal information'\n           SYNTAX 1.3.6.1.4.1.1466.115.121.1.5\n \
    \  )\n  B.3.3 pKCS15Token\n   This attribute is to be stored and requested in\
    \ binary form, as\n   pKCS15Token;binary.  The attribute values are PKCS15Token\
    \ PDUs stored\n   as binary (BER- or DER-encoded) data.\n   (\n           1.2.840.113549.1.9.25.1\n\
    \           NAME 'pKCS15Token'\n           DESC 'PKCS #15 token PDU'\n       \
    \    SYNTAX 1.3.6.1.4.1.1466.115.121.1.5\n   )\n  B.3.4 encryptedPrivateKeyInfo\n\
    \   This attribute is to be stored and requested in binary form, as\n   encryptedPrivateKeyInfo;binary.\
    \  The attribute values are\n   EncryptedPrivateKeyInfo PDUs stored as binary\
    \ (BER- or DER-encoded)\n   data.\n   (\n           1.2.840.113549.1.9.25.2\n\
    \           NAME 'encryptedPrivateKeyInfo'\n           DESC 'PKCS #8 encrypted\
    \ private key info'\n           SYNTAX 1.3.6.1.4.1.1466.115.121.1.5\n   )\n  B.3.5\
    \ emailAddress\n   (\n           1.2.840.113549.1.9.1\n           NAME 'emailAddress'\n\
    \           DESC 'Email address'\n           EQUALITY pkcs9CaseIgnoreMatch\n \
    \          SYNTAX 1.3.6.1.4.1.1466.115.121.1.26\n   )\n  B.3.6 unstructuredName\n\
    \   (\n           1.2.840.113549.1.9.2\n           NAME 'unstructuredName'\n \
    \          DESC 'PKCS #9 unstructured name'\n           EQUALITY pkcs9CaseIgnoreMatch\n\
    \           SYNTAX 1.2.840.113549.1.9.26.1\n   )\n  B.3.7 unstructuredAddress\n\
    \   (\n           1.2.840.113549.1.9.8\n           NAME 'unstructuredAddress'\n\
    \           DESC 'PKCS #9 unstructured address'\n           EQUALITY caseIgnoreMatch\n\
    \           SYNTAX 1.3.6.1.4.1.1466.115.121.1.15\n   )\n  B.3.8 dateOfBirth\n\
    \   (\n           1.3.6.1.5.5.7.9.1\n           NAME 'dateOfBirth'\n         \
    \  DESC 'Date of birth'\n           EQUALITY generalizedTimeMatch\n          \
    \ SYNTAX 1.3.6.1.4.1.1466.115.121.1.24\n           SINGLE-VALUE\n   )\n  B.3.9\
    \ placeOfBirth\n   (\n           1.3.6.1.5.5.7.9.2\n           NAME 'placeOfBirth'\n\
    \           DESC 'Place of birth'\n           EQUALITY caseExactMatch\n      \
    \     SYNTAX 1.3.6.1.4.1.1466.115.121.1.15\n           SINGLE-VALUE\n   )\n  B.3.10\
    \ gender\n   (\n           1.3.6.1.5.5.7.9.3\n           NAME 'gender'\n     \
    \      DESC 'Gender'\n           EQUALITY caseIgnoreMatch\n           SYNTAX 1.3.6.1.4.1.1466.115.121.1.44\n\
    \           SINGLE-VALUE\n   )\n  B.3.11 countryOfCitizenship\n   (\n        \
    \   1.3.6.1.5.5.7.9.4\n           NAME 'countryOfCitizenship'\n           DESC\
    \ 'Country of citizenship'\n           EQUALITY caseIgnoreMatch\n           SYNTAX\
    \ 1.3.6.1.4.1.1466.115.121.1.44\n   )\n  B.3.12 countryOfResidence\n   (\n   \
    \        1.3.6.1.5.5.7.9.5\n           NAME 'countryOfResidence'\n           DESC\
    \ 'Country of residence'\n           EQUALITY caseIgnoreMatch\n           SYNTAX\
    \ 1.3.6.1.4.1.1466.115.121.1.44\n   )\n  B.3.13 pseudonym\n   (\n           2.5.4.65\n\
    \           NAME 'pseudonym'\n           DESC 'Pseudonym'\n           EQUALITY\
    \ caseExactMatch\n           SYNTAX 1.3.6.1.4.1.1466.115.121.1.15\n   )\n  B.3.14\
    \ contentType\n   In the (highly unlikely) event of this attribute being stored\
    \ in a\n   Directory it is to be stored and requested in binary form, as\n   contentType;binary.\
    \  Attribute values shall be OCTET STRINGs stored\n   as binary (BER- or DER-encoded)\
    \ data.\n   (\n           1.2.840.113549.1.9.3\n           NAME 'contentType'\n\
    \           DESC 'PKCS #7 content type attribute'\n           EQUALITY objectIdentifierMatch\n\
    \           SYNTAX 1.3.6.1.4.1.1466.115.121.1.38\n           SINGLE-VALUE\n  \
    \ )\n  B.3.15 messageDigest\n   In the (highly unlikely) event of this attribute\
    \ being stored in a\n   Directory it is to be stored and requested in binary form,\
    \ as\n   messageDigest;binary.  Attribute values shall be OCTET STRINGs stored\n\
    \   as binary (BER- or DER-encoded) data.\n   (\n           1.2.840.113549.1.9.4\n\
    \           NAME 'messageDigest'\n           DESC 'PKCS #7 mesage digest attribute'\n\
    \           EQUALITY octetStringMatch\n           SYNTAX 1.3.6.1.4.1.1466.115.121.1.5\n\
    \           SINGLE-VALUE\n   )\n  B.3.16 signingTime\n   (\n           1.2.840.113549.1.9.5\n\
    \           NAME 'signingTime'\n           DESC 'PKCS #7 signing time'\n     \
    \      EQUALITY signingTimeMatch\n           SYNTAX 1.2.840.113549.1.9.26.2\n\
    \           SINGLE-VALUE\n   )\n  B.3.17 counterSignature\n   In the (highly unlikely)\
    \ event that this attribute is to be stored in\n   a directory, it is to be stored\
    \ and requested in binary form, as\n   counterSignature;binary.  Attribute values\
    \ shall be stored as binary\n   (BER- or DER-encoded) data.\n   (\n          \
    \ 1.2.840.113549.1.9.6\n           NAME 'counterSignature'\n           DESC 'PKCS\
    \ #7 countersignature'\n           SYNTAX 1.3.6.1.4.1.1466.115.121.1.5\n   )\n\
    \  B.3.18 challengePassword\n   (\n           1.2.840.113549.1.9.7\n         \
    \  NAME 'challengePassword'\n           DESC 'Challenge password for certificate\
    \ revocations'\n           EQUALITY caseExactMatch\n           SYNTAX 1.3.6.1.4.1.1466.115.121.1.15\n\
    \           SINGLE-VALUE\n   )\n   Note - It is not recommended to store unprotected\
    \ values of this\n   attribute in a directory.\n B.4 Matching rules\n  B.4.1 pkcs9CaseIgnoreMatch\n\
    \   (\n           1.2.840.113549.1.9.27.1\n           NAME 'pkcs9CaseIgnoreMatch'\n\
    \           SYNTAX 1.2.840.113549.1.9.26.1\n   )\n  B.4.2 signingTimeMatch\n \
    \  (\n           1.2.840.113549.1.9.27.3\n           NAME 'signingTimeMatch'\n\
    \           SYNTAX 1.2.840.113549.1.9.26.2\n   )\n"
- title: C. Intellectual property considerations
  contents:
  - "C. Intellectual property considerations\n   RSA Security makes no patent claims\
    \ on the general constructions\n   described in this document, although specific\
    \ underlying techniques\n   may be covered.\n   License to copy this document\
    \ is granted provided that it is\n   identified as \"RSA Security Inc.  Public-Key\
    \ Cryptography Standards\n   (PKCS)\" in all material mentioning or referencing\
    \ this document.\n   RSA Security makes no representations regarding intellectual\
    \ property\n   claims by other parties.  Such determination is the responsibility\
    \ of\n   the user.\n"
- title: D. Revision history
  contents:
  - "D. Revision history\n   Version 1.0\n      Version 1.0 was part of the June 3,\
    \ 1991 initial public release of\n      PKCS.  Version 1.0 was also published\
    \ as NIST/OSI Implementors'\n      Workshop document SEC-SIG-91-24.\n      Version\
    \ 1.1\n      Version 1.1 incorporated several editorial changes, including\n \
    \     updates to the references and the addition of a revision history.\n    \
    \  The following substantive changes were made:\n      - Section 6: challengePassword,\
    \ unstructuredAddress, and\n        extendedCertificateAttributes attribute types\
    \ were added\n      - Section 7: challengePassword, unstructuredAddress, and\n\
    \        extendedCertificateAttributes object identifiers were added\n   Version\
    \ 2.0\n   Version 2.0 incorporates several editorial changes as well.  In\n  \
    \ addition, the following substantive changes have been made:\n      - Addition\
    \ of a Section defining two new auxiliary object classes,\n        pkcsEntity\
    \ and naturalPerson\n      - Addition of several new attribute types and matching\
    \ rules for\n        use in conjunction with these object classes and elsewhere\n\
    \      - Update of all ASN.1 to be in line with the 1997 version of this\n   \
    \     syntax\n      - Addition a \"compilable\" ASN.1 module\n      - Addition,\
    \ in accordance with [21], an ABNF description of all\n        attributes and\
    \ object classes\n      - Addition of an intellectual property considerations\
    \ section\n"
- title: E. References
  contents:
  - "E. References\n   [1]  Bradner, S., \"Key words for use in RFCs to Indicate Requirement\n\
    \        Levels\", BCP 14, RFC 2119, March 1997.\n   [2]  Crocker, D. and P. Overell,\
    \ \"Augmented BNF for Syntax\n        Specifications: ABNF\", RFC 2234, November\
    \ 1997.\n   [3]  Housley, R., \"Cryptographic Message Syntax CMS\", RFC 2630,\
    \ June\n        1999.\n   [4]  ISO/IEC 3166-1:Codes for the representation of\
    \ names of\n        countries and their subdivisions - Part 1: Country codes.\
    \ 1997.\n   [5]  ISO/IEC 8824-1:1999: Information technology - Abstract Syntax\n\
    \        Notation One (ASN.1) - Specification of basic notation.1999.\n   [6]\
    \  ISO/IEC 8825-1:1999: Information technology - ASN.1 Encoding\n        Rules:\
    \ Specification of Basic Encoding Rules (BER), Canonical\n        Encoding Rules\
    \ (CER) and Distinguished Encoding Rules (DER).\n        1999.\n   [7]  ISO/IEC\
    \ 9594-2:1997: Information technology - Open Systems\n        Interconnection\
    \ - The Directory: Models. 1997.\n   [8]  ISO/IEC 9594-6:1997: Information technology\
    \ - Open Systems\n        Interconnection - The Directory: Selected attribute\
    \ types. 1997.\n   [9]  ISO/IEC 9594-7:1997: Information technology - Open Systems\n\
    \        Interconnection - The Directory: Selected object classes. 1997.\n   [10]\
    \ ISO/IEC 9594-8:1997: Information technology - Open Systems\n        Interconnection\
    \ - The Directory: Authentication framework. 1997.\n   [11] ISO/IEC 10646-1: Information\
    \ Technology - Universal Multiple-\n        Octet Coded Character Set (UCS) -\
    \ Part 1: Architecture and Basic\n        Multilingual Plane. 1993.\n   [12] Ramsdell,\
    \ R., \"S/MIME Version 3 Message Specification\", RFC\n        2633, June 1999.\n\
    \   [13] RSA Laboratories. PKCS #6: Extended-Certificate Syntax Standard.\n  \
    \      Version 1.5, November 1993.\n   [14] RSA Laboratories. PKCS #7: Cryptographic\
    \ Message Syntax\n        Standard. Version 1.5, November 1993.\n   [15] RSA Laboratories.\
    \ PKCS #8: Private-Key Information Syntax\n        Standard. Version 1.2, November\
    \ 1993.\n   [16] RSA Laboratories. PKCS #10: Certification Request Syntax\n  \
    \      Standard. Version 1.0, November 1993.\n   [17] RSA Laboratories. PKCS #12:\
    \ Personal Information Exchange Syntax\n        Standard. Version 1.0, June 1999.\n\
    \   [18] RSA Laboratories. PKCS #15: Cryptographic Token Information\n       \
    \ Format Standard. Version 1.1, June 2000.\n   [19] Santesson, S., Polk, W., Barzin,\
    \ P. and M. Nystrom, \"Internet\n        X.509 Public Key Infrastructure - Qualified\
    \ Certificates\n        Profile\", Work in Progress.\n   [20] Smith, M. \"Definition\
    \ of the inetOrgPerson LDAP Object Class\",\n        RFC 2798, April 2000.\n \
    \  [21] Wahl, M., Coulbeck, A., Howes, T. and S. Kille, \"Lightweight\n      \
    \  Directory Access Protocol (v3): Attribute Syntax Definitions\",\n        RFC\
    \ 2252, December 1997.\n   [22] Wahl, M., Howes, T. and S. Kille, \"Lightweight\
    \ Directory Access\n        Protocol (v3)\", RFC 2251, December 1997.\n"
- title: F. Contact information & About PKCS
  contents:
  - "F. Contact information & About PKCS\n   The Public-Key Cryptography Standards\
    \ are specifications produced by\n   RSA Laboratories in cooperation with secure\
    \ systems developers\n   worldwide for the purpose of accelerating the deployment\
    \ of public-\n   key cryptography.  First published in 1991 as a result of meetings\n\
    \   with a small group of early adopters of public-key technology, the\n   PKCS\
    \ documents have become widely referenced and implemented.\n   Contributions from\
    \ the PKCS series have become part of many formal\n   and de facto standards,\
    \ including ANSI X9 documents, PKIX, SET,\n   S/MIME, and SSL.\n   Further development\
    \ of PKCS occurs through mailing list discussions\n   and occasional workshops,\
    \ and suggestions for improvement are\n   welcome.  For more information, contact:\n\
    \   PKCS Editor\n   RSA Laboratories\n   20 Crosby Drive\n   Bedford, MA  01730\
    \ USA\n   pkcs-editor@rsasecurity.com\n   http://www.rsasecurity.com/rsalabs/PKCS\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2000).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others provided that the above copyright notice and this paragraph\n\
    \   are included on all such copies.  However, this document itself may\n   not\
    \ be modified in any way, such as by removing the copyright notice\n   or references\
    \ to the Internet Society or other Internet\n   organizations, except as required\
    \ to translate it into languages\n   other than English.\n   The limited permissions\
    \ granted above are perpetual and will not be\n   revoked by the Internet Society\
    \ or its successors or assigns.\n   This document and the information contained\
    \ herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY AND THE\
    \ INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR  IMPLIED,\
    \ INCLUDING\n   BUT NOT  LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n\
    \   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY  IMPLIED WARRANTIES OF\n   MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
