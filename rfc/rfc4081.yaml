- title: __initial_text__
  contents:
  - '          Security Threats for Next Steps in Signaling (NSIS)

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   This threats document provides a detailed analysis of the security\n\
    \   threats relevant to the Next Steps in Signaling (NSIS) protocol\n   suite.\
    \  It calls attention to, and helps with the understanding of,\n   various security\
    \ considerations in the NSIS Requirements, Framework,\n   and Protocol proposals.\
    \  This document does not describe\n   vulnerabilities of specific parts of the\
    \ NSIS protocol suite.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   5. Security Considerations ........................................23\n\
    \   6. Contributors ...................................................24\n  \
    \ 7. Acknowledgements ...............................................24\n   8.\
    \ References .....................................................25\n      8.1.\
    \ Normative References ......................................25\n      8.2. Informative\
    \ References ....................................25\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Whenever a new protocol is developed or existing protocols\
    \ are\n   modified, threats to their security should be evaluated.  To address\n\
    \   security in the NSIS working group, a number of steps have been\n   taken:\n\
    \      NSIS Analysis Activities (see [RSVP-SEC] and [SIG-ANAL])\n      Security\
    \ Threats for NSIS\n      NSIS Requirements (see [RFC3726])\n      NSIS Framework\
    \ (see [RFC4080])\n      NSIS Protocol Suite (see GIMPS [GIMPS], NAT/Firewall\
    \ NSLP\n      [NATFW-NSLP] and QoS NSLP [QOS-NSLP])\n   This document identifies\
    \ the basic security threats that need to be\n   addressed during the design of\
    \ the NSIS protocol suite.  Even if the\n   base protocol is secure, certain extensions\
    \ may cause problems when\n   used in a particular environment.\n   This document\
    \ cannot provide detailed threats for all possible NSIS\n   Signaling Layer Protocols\
    \ (NSLPs).  QoS [QOS-NSLP], NAT/Firewall\n   [NATFW-NSLP], and other NSLP documents\
    \ need to provide a description\n   of their trust models and a threat assessment\
    \ for their specific\n   application domain.  This document aims to provide some\
    \ help for the\n   subsequent design of the NSIS protocol suite.  Investigations\
    \ of\n   security threats in a specific architecture or context are outside\n\
    \   the scope of this document.\n   We use the NSIS terms defined in [RFC3726]\
    \ and in [RFC4080].\n"
- title: 2.  Communications Models
  contents:
  - "2.  Communications Models\n   The NSIS suite of protocols is envisioned to support\
    \ various\n   signaling applications that need to install and/or manipulate state\n\
    \   at nodes along the data flow path through the network.  As such, the\n   NSIS\
    \ protocol suite involves the communication between different\n   entities.\n\
    \   This section offers terminology for common communication models that\n   are\
    \ relevant to securing the NSIS protocol suite.\n   An abstract network topology\
    \ with its administrative domains is shown\n   in Figure 1, and in Figure 2 the\
    \ relationship between NSIS entities\n   along the path is shown.  For illustrative\
    \ reasons, only end-to-end\n   NSIS signaling is depicted, yet it might be used\
    \ in other variations\n   as well.  Signaling can start at any place and might\
    \ terminate at any\n   other place within the network.  Depending on the trust\
    \ relationship\n   between NSIS entities and the traversed network parts, different\n\
    \   security problems arise.\n   The notion of trust and trust relationship used\
    \ in this document is\n   informal and can best be captured by the definition\
    \ provided in\n   Section 1.1 of [RFC3756].  For completeness we include the definition\n\
    \   of a trust relationship, which denotes a mutual a priori relationship\n  \
    \ between the involved organizations or parties wherein the parties\n   believe\
    \ that the other parties will behave correctly even in the\n   future.\n   An\
    \ important observation for NSIS is that a certain degree of trust\n   has to\
    \ be placed into intermediate NSIS nodes along the path between\n   an NSIS Initiator\
    \ and an NSIS Responder, specifically so that they\n   perform message processing\
    \ and take the necessary actions.  A\n   complete lack of trust between any of\
    \ the participating entities will\n   cause NSIS signaling to fail.\n   Note that\
    \ it is not possible to describe a trust model completely\n   without considering\
    \ the details and behavior of the NTLP, the NSLP\n   (e.g., QoS NSLP), and the\
    \ deployment environment.  For example,\n   securing the communication between\
    \ an end host (which acts as the\n   NSIS Initiator) and the first NSIS node (which\
    \ might be in the\n   attached network or even a number of networks away) is impacted\
    \ by\n   the trust relationships between these entities.  In a corporate\n   network\
    \ environment, a stronger degree of trust typically exists than\n   in an unmanaged\
    \ network.\n   Figure 1 introduces convenient abbreviations for network parts\
    \ with\n   similar properties: first-peer, last-peer, intra-domain, or\n   inter-domain.\n\
    \     +------------------+   +---------------+   +------------------+\n     |\
    \                  |   |               |   |                  |\n     |  Administrative\
    \  |   | Intermediate  |   |  Administrative  |\n     |     Domain A     |   |\
    \   Domains     |   |     Domain B     |\n     |                  |   |      \
    \         |   |                  |\n     |                 (Inter-domain Communication)\
    \                |\n     |        +-------->+---+<------------->+---+<--------+\
    \        |\n     |  (Intra-domain   |   |               |   | (Intra-domain  \
    \  |\n     |   Communication) |   |               |   |  Communication)  |\n \
    \    |        |         |   |               |   |         |        |\n     | \
    \       v         |   |               |   |         v        |\n     +--------+---------+\
    \   +---------------+   +---------+--------+\n              ^                \
    \                           ^\n              |                               \
    \            |\n     First Peer Communication               Last Peer Communication\n\
    \              |                                           |\n              v\
    \                                           v\n        +-----+-----+         \
    \                      +-----+-----+\n        |   NSIS    |                  \
    \             |   NSIS    |\n        | Initiator |                           \
    \    | Responder |\n        +-----------+                               +-----------+\n\
    \                 Figure 1: Communication patterns in NSIS\n   First-Peer/Last-Peer\
    \ Communication:\n      The end-to-end communication scenario depicted in Figure\
    \ 1\n      includes the communication between the end hosts and their nearest\n\
    \      NSIS hops.  \"First-peer communications\" refers to the peer-to-peer\n\
    \      interaction between a signaling message originator, the NSIS\n      Initiator\
    \ (NI), and the first NSIS-aware entity along the path.\n      This \"first-peer\
    \ communications\" commonly comes with specific\n      security requirements that\
    \ are especially important for addressing\n      security issues between the end\
    \ host (and a user) and the network\n      it is attached to.\n      To illustrate\
    \ this, in roaming environments, it is difficult to\n      assume the existence\
    \ of a pre-established security association\n      directly available for NSIS\
    \ peers involved in first-peer\n      communications, because these peers cannot\
    \ be assumed to have any\n      pre-existing relationship with each other.  In\
    \ contrast, in\n      enterprise networks usually there is a fairly strong\n \
    \     (pre-established) trust relationship between the peers.\n      Enterprise\
    \ network administrators usually have some degree of\n      freedom to select\
    \ the appropriate security protection and to\n      enforce it.  The choice of\
    \ selecting a security mechanism is\n      therefore often influenced by the infrastructure\
    \ already\n      available, and per-session negotiation of security mechanisms\
    \ is\n      often not required (although, in contrast, it is required in a\n \
    \     roaming environment).\n      Last-Peer communication is a variation of First-Peer\
    \ communication\n      in which the roles are reversed.\n   Intra-Domain Communication:\n\
    \      After verification of the NSIS signaling message at the border of\n   \
    \   an administrative domain, an NSIS signaling message traverses the\n      network\
    \ within the same administrative domain to which the first\n      peer belongs.\
    \  It might not be necessary to repeat the\n      authorization procedure of the\
    \ NSIS initiator again at every NSIS\n      node within this domain.  Key management\
    \ within the administrative\n      domain might also be simpler.\n      Security\
    \ protection is still required to prevent threats by\n      non-NSIS nodes in\
    \ this network.\n   Inter-Domain Communication:\n      Inter-Domain communication\
    \ deals with the interaction between\n      administrative domains.  For some\
    \ NSLPs (for example, QoS NSLP),\n      this interaction is likely to take place\
    \ between neighboring\n      domains, whereas in other NSLPs (such as the NAT/Firewall\
    \ NSLP),\n      the core network is usually not involved.\n      If signaling\
    \ messages are conveyed transparently in the core\n      network (i.e., if they\
    \ are neither intercepted nor processed in\n      the core network), then the\
    \ signaling message communications\n      effectively takes place between access\
    \ networks.  This might place\n      a burden on authorization handling and on\
    \ the key management\n      infrastructure required between these access networks,\
    \ which might\n      not know of each other in advance.\n   To refine the above\
    \ differentiation based on the network parts that\n   NSIS signaling may traverse,\
    \ we subsequently consider relationships\n   between involved entities.  Because\
    \ a number of NSIS nodes might\n   actively participate in a specific protocol\
    \ exchange, a larger number\n   of possible relationships need to be analyzed\
    \ than in other\n   protocols.  Figure 2 illustrates possible relationships between\
    \ the\n   entities involved in the NSIS protocol suite.\n                 ****************************************\n\
    \                 *                                      *\n            +----+-----+\
    \       +----------+        +----+-----+\n      +-----+  NSIS    +-------+  NSIS\
    \    +--------+  NSIS    +-----+\n      |     |  Node 1  |       |  Node 2  |\
    \        |  Node 3  |     |\n      |     +----------+       +----+-----+     \
    \   +----------+     |\n      |                             ~                \
    \               |\n      |  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~                     \
    \          |\n      |  ~                                                     \
    \     |\n   +--+--+-----+                                          +---------+-+\n\
    \   |   NSIS    +//////////////////////////////////////////+   NSIS    |\n   |\
    \ Initiator |                                          | Responder |\n   +-----------+\
    \                                          +-----------+\n    Legend:\n     -----:\
    \ Peer-to-Peer Relationship\n     /////: End-to-End Relationship\n     *****:\
    \ Middle-to-Middle Relationship\n     ~~~~~: End-to-Middle Relationship\n    \
    \               Figure 2: Possible NSIS Relationships\n   End-to-Middle Communications:\n\
    \      The scenario in which one NSIS entity involved is an end-entity\n     \
    \ (Initiator or Responder) and the other entity is any intermediate\n      hop\
    \ other than the immediately adjacent peer is typically called\n      the end-to-middle\
    \ scenario (see Figure 2).  A motivation for\n      including this scenario can,\
    \ for example, be found in SIP\n      [RFC3261].\n      An example of end-to-middle\
    \ interaction might be an explicit\n      authorization from the NSIS Initiator\
    \ to some intermediate node.\n      Threats specific to this scenario may be introduced\
    \ by some\n      intermediate NSIS hops that are not allowed to eavesdrop or modify\n\
    \      certain objects.\n   Middle-to-Middle Communications:\n      Middle-to-middle\
    \ communication refers to the exchange of\n      information between two non-neighboring\
    \ NSIS nodes along the path.\n      Intermediate NSIS hops may have to deal with\
    \ specific security\n      threats that do not involve the NSIS Initiator or the\
    \ NSIS\n      Responder directly.\n   End-to-End Communications:\n      NSIS aims\
    \ to signal information from an Initiator to some NSIS\n      nodes along the\
    \ path to a data receiver.  In the case of\n      end-to-end NSIS signaling, the\
    \ last node is the NSIS Responder, as\n      it is the data receiver.  The NSIS\
    \ protocol suite is not an\n      end-to-end protocol used to exchange information\
    \ purely between\n      end hosts.\n      Typically, it is not required to protect\
    \ NSIS messages\n      cryptographically between the NSIS Initiator and the NSIS\n\
    \      Responder.  Protecting the entire signaling message end-to-end\n      might\
    \ not be feasible since intermediate NSIS nodes need to add,\n      inspect, modify,\
    \ or delete objects from the signaling message.\n"
- title: 3.  Generic Threats
  contents:
  - "3.  Generic Threats\n   This section provides scenarios of threats that are applicable\
    \ to\n   signaling protocols in general.  Note that some of these scenarios\n\
    \   use the term \"user\" instead of \"NSIS Initiator\".  This is mainly\n   because\
    \ security protocols allow differentiation between entities\n   that are hosts\
    \ and those that are users (based on the identifiers\n   used).\n   For the following\
    \ subsections, we use the general distinction in two\n   cases in which attacks\
    \ may occur.  These are according to the\n   separate steps, or phases, normally\
    \ encountered when applying\n   protocol security (with, e.g., IPsec, TLS, Kerberos,\
    \ or SSH).\n   Therefore, this section starts by briefly describing a motivation\
    \ for\n   this separation.\n   Security protection of protocols is often separated\
    \ into two steps.\n   The first step primarily provides entity authentication\
    \ and key\n   establishment (which result in a persistent state often called a\n\
    \   security association), whereas the second step provides message\n   protection\
    \ (some combination of data origin authentication, data\n   integrity, confidentiality,\
    \ and replay protection) using the\n   previously established security association.\
    \  The first step tends to\n   be more expensive than the second, which is the\
    \ main reason for the\n   separation.  If messages are transmitted infrequently,\
    \ then these two\n   steps may be collapsed into a single and usually rather costly\
    \ one.\n   One such example is e-mail protection via S/MIME.  The two steps may\n\
    \   be tightly bound into a single protocol, as in TLS, or defined in\n   separate\
    \ protocols, as with IKE and IPsec.  We use this separation to\n   cover the different\
    \ threats in more detail.\n"
- title: 3.1.  Man-in-the-Middle Attacks
  contents:
  - "3.1.  Man-in-the-Middle Attacks\n   This section describes both security threats\
    \ that exist if two peers\n   do not already share a security association or do\
    \ not use security\n   mechanisms at all, and threats that are applicable when\
    \ a security\n   association is already established.\n   Attacks during NSIS SA\
    \ Establishment:\n      While establishing a security association, an adversary\
    \ fools the\n      signaling message Initiator with respect to the entity to which\
    \ it\n      has to authenticate.  The Initiator authenticates to the man-in-\n\
    \      the-middle adversary, who is then able to modify signaling\n      messages\
    \ to mount DoS attacks or to steal services that get billed\n      to the Initiator.\
    \  In addition, the adversary may be able to\n      terminate the Initiator's\
    \ NSIS messages and to inject messages to\n      a peer itself, thereby acting\
    \ as the peer to the Initiator and as\n      the Initiator to the peer.  As a\
    \ result, the Initiator wrongly\n      believes that it is talking to the \"real\"\
    \ network, whereas it is\n      actually attached to an adversary.  For this attack\
    \ to be\n      successful, pre-conditions that are described in the following\n\
    \      three cases have to hold:\n      Missing Authentication:\n         In the\
    \ first case, this threat can be carried out because of\n         missing authentication\
    \ between neighboring peers: without\n         authentication, an NI, NR, or NF\
    \ is unable to detect an\n         adversary.  However, in some practical cases,\
    \ authentication\n         might be difficult to accomplish, either because the\
    \ next peer\n         is unknown, because there are misbelieved trust relationships\n\
    \         in parts of the network, or because of the inability to\n         establish\
    \ proper security protection (inter-domain signaling\n         messages, dynamic\
    \ establishment of a security association,\n         etc.).  If one of the communicating\
    \ endpoints is unknown, then\n         for some security mechanisms it is either\
    \ impossible or\n         impractical to apply appropriate security protection.\n\
    \         Sometimes network administrators use intra-domain signaling\n      \
    \   messages without proper security.  This configuration allows an\n        \
    \ adversary on a compromised non-NSIS-aware node to interfere\n         with nodes\
    \ running an NSIS signaling protocol.  Note that this\n         type of threat\
    \ goes beyond those caused by malicious NSIS nodes\n         (described in Section\
    \ 4.7).\n      Unilateral Authentication:\n         In the case of unilateral\
    \ authentication, the NSIS entity that\n         does not authenticate its peer\
    \ is unable to discover a man-in-\n         the-middle adversary.  Although mutual\
    \ authentication of\n         signaling messages should take place between each\
    \ peer\n         participating in the protocol operation, special attention is\n\
    \         given here to first-peer communications.  Unilateral\n         authentication\
    \ between an end host and the first peer (just\n         authenticating the end\
    \ host) is still common today, but it\n         opens up many possibilities for\
    \ man-in-the-middle attackers\n         impersonating either the end host or the\
    \ (administrative domain\n         represented by the) first peer.\n         Missing\
    \ or unilateral authentication, as described above, is\n         part of a general\
    \ problem of network access with inadequate\n         authentication, and it should\
    \ not be considered something\n         unique to the NSIS signaling protocol.\
    \  Obviously, there is a\n         strong need to address this correctly in a\
    \ future NSIS protocol\n         suite.  The signaling protocols addressed by\
    \ NSIS are different\n         from other protocols in which only two entities\
    \ are involved.\n         Note that first-peer authentication is especially important\n\
    \         because a security breach there could impact nodes beyond the\n    \
    \     entities directly involved (or even beyond a local network).\n         Finally,\
    \ note that the signaling protocol should be considered\n         a peer-to-peer\
    \ protocol, wherein the roles of Initiator and\n         Responder can be reversed\
    \ at any time.  Thus, unilateral\n         authentication is not particularly\
    \ useful for such a protocol.\n         However, some form of asymmetry might\
    \ be needed in the\n         authentication process, whereby one entity uses an\n\
    \         authentication mechanism different from that of the other one.\n   \
    \      As an example, the combination of symmetric and asymmetric\n         cryptography\
    \ should be mentioned.\n      Weak Authentication:\n         In the case of weak\
    \ authentication, the threat can be carried\n         out because information\
    \ transmitted during the NSIS SA\n         establishment process may leak passwords\
    \ or allow offline\n         dictionary attacks.  This threat is applicable to\
    \ NSIS for the\n         process of selecting certain security mechanisms.\n \
    \  Finally, we conclude with a description of a man-in-the-middle (MITM)\n   attack\
    \ during the discovery phase.  This attack benefits from the\n   fact that NSIS\
    \ nodes are likely to be unaware of the network\n   topology.  Furthermore, an\
    \ authorization problem might arise if an\n   NSIS QoS NSLP node pretends to be\
    \ an NSIS NAT/Firewall-specific node\n   or vice versa.\n   An adversary might\
    \ inject a bogus reply message, forcing the\n   discovery message initiator to\
    \ start a messaging association\n   establishment with either an adversary or\
    \ with another NSIS node that\n   is not along the path.  Figure 3 describes the\
    \ attack in more detail\n   for peer-to-peer addressed messages with a discovery\
    \ mechanism.  For\n   end-to-end addressed messages, the attack is also applicable,\n\
    \   particularly if the adversary is located along the path and able to\n   intercept\
    \ the discovery message that traverses the adversary.  The\n   man-in-the-middle\
    \ adversary might redirect to another legitimate NSIS\n   node.  A malicious NSIS\
    \ node can be detected with the corresponding\n   security mechanisms, but a legitimate\
    \ NSIS node that is not the next\n   NSIS node along the path cannot be detected\
    \ without topology\n   knowledge.\n                      +-----------+   Messaging\
    \ Association\n     Message          | Adversary |   Establishment\n     Association\
    \ +--->+           +<----------------+\n     Establish-  |    +----+------+  \
    \               |(4)\n      ment       |     IPx |                        |\n\
    \              (3)|         |Discovery Reply         v\n                 |   \
    \      | (IPx)              +---+-------+\n                 v         |  (2) \
    \              |  NSIS     |\n          +------+-----+   |       /----------->+\
    \  Node B   +--------\n          | NSIS       +<--+      / Discovery   +-----------+\n\
    \          | Node A     +---------/  Request          IPr\n          +------------+\
    \             (1)\n              IPi\n            Figure 3: MITM Attack during\
    \ the Discovery Exchange\n   This attack assumes that the adversary is able to\
    \ eavesdrop on the\n   initial discovery message sent by the sender of the discovery\n\
    \   message.  Furthermore, we assume that the discovery reply message by\n   the\
    \ adversary returns to the discovery message initiator faster than\n   the real\
    \ response.  This represents some race condition\n   characteristics if the next\
    \ NSIS node is very close (in IP-hop terms)\n   to the initiator.  Note that the\
    \ problem is self-healing since the\n   discovery process is periodically repeated.\
    \  If an adversary is\n   unable to mount this attack with every discovery message,\
    \ then the\n   correct next NSIS node along the path will be discovered again.\
    \  A\n   ping-pong behavior might be the consequence.\n   As shown in message\
    \ step (2) in Figure 3, the adversary returns a\n   discovery reply message with\
    \ its own IP address as the next NSIS-\n   aware node along the path.  Without\
    \ any additional information, the\n   discovery message initiator has to trust\
    \ this information.  Then a\n   messaging association is established with an entity\
    \ at a given IP\n   address IPx (i.e., with the adversary) in step (3).  The adversary\n\
    \   then establishes a messaging association with a further NSIS node and\n  \
    \ forwards the signaling message.  Note that the adversary might just\n   modify\
    \ the Discovery Reply message to force NSIS Node A to establish\n   a messaging\
    \ association with another NSIS node that is not along the\n   path.  This can\
    \ then be exploited by the adversary.  The interworking\n   with NSIS-unaware\
    \ NATs in particular might cause additional\n   unexpected problems.\n   As a\
    \ variant of this attack, an adversary not able to eavesdrop on\n   transmitted\
    \ discovery requests could flood a node with bogus\n   discovery reply messages.\
    \  If the discovery message sender\n   accidentally accepts one of those bogus\
    \ messages, then a MITM attack\n   as described in Figure 3 is possible.\n"
- title: 3.2.  Replay of Signaling Messages
  contents:
  - "3.2.  Replay of Signaling Messages\n   This threat scenario covers the case in\
    \ which an adversary\n   eavesdrops, collects signaling messages, and replays\
    \ them at a later\n   time (or at a different place, or uses parts of them at\
    \ a different\n   place or in a different way; e.g., cut-and-paste attacks). \
    \ Without\n   proper replay protection, an adversary might mount man-in-the-middle,\n\
    \   denial of service, and theft of service attacks.\n   A more difficult attack\
    \ (that may cause problems even if there is\n   replay protection) requires that\
    \ the adversary crash an NSIS-aware\n   node, causing it to lose state information\
    \ (sequence numbers,\n   security associations, etc.), and then replay old signaling\
    \ messages.\n   This attack takes advantage of re-synchronization deficiencies.\n"
- title: 3.3.  Injecting or Modifying Messages
  contents:
  - "3.3.  Injecting or Modifying Messages\n   This type of threat involves integrity\
    \ violations, whereby an\n   adversary modifies signaling messages (e.g., by acting\
    \ as a\n   man-in-the-middle) in order to cause unexpected network behavior.\n\
    \   Possible actions an adversary might consider for its attack are\n   reordering,\
    \ delaying, dropping, injecting, truncating, and otherwise\n   modifying messages.\n\
    \   An adversary may inject a signaling message requesting a large amount\n  \
    \ of resources (possibly using a different user's identity).  Other\n   resource\
    \ requests may then be rejected.  In combination with identity\n   spoofing, it\
    \ is possible to carry out fraud.  This attack is only\n   feasible in the absence\
    \ of authentication and signaling message\n   protection.\n   Some threats directly\
    \ related to these are described in Sections 4.4,\n   4.7, and 4.8.\n"
- title: 3.4.  Insecure Parameter Exchange and Negotiation
  contents:
  - "3.4.  Insecure Parameter Exchange and Negotiation\n   First, protocols may be\
    \ useful in a variety of scenarios with\n   different security requirements. \
    \ Second, different users (e.g., a\n   university, a hospital, a commercial enterprise,\
    \ or a government\n   ministry) have inherently different security requirements.\
    \  Third,\n   different parts of a network (e.g., within a building, across a\n\
    \   public carrier's network, or over a private microwave link) may need\n   different\
    \ levels of protection.  It is often difficult to meet these\n   (sometimes conflicting)\
    \ requirements with a single security mechanism\n   or fixed set of security parameters,\
    \ so often a selection of\n   mechanisms and parameters is offered.  Therefore,\
    \ a protocol is\n   required to agree on certain security mechanisms and parameters.\
    \  An\n   insecure parameter exchange or security negotiation protocol can help\n\
    \   an adversary to mount a downgrading attack to force selection of\n   mechanisms\
    \ weaker than those mutually desired.  Thus, without binding\n   the negotiation\
    \ process to the legitimate parties and protecting it,\n   an NSIS protocol suite\
    \ might only be as secure as the weakest\n   mechanism provided (e.g., weak authentication),\
    \ and the benefits of\n   defining configuration parameters and a negotiation\
    \ protocol are\n   lost.\n"
- title: 4.  NSIS-Specific Threat Scenarios
  contents:
  - "4.  NSIS-Specific Threat Scenarios\n   This section describes eleven threat scenarios\
    \ in terms of attacks on\n   and security deficiencies in the NSIS signaling protocol.\
    \  A number\n   of security deficiencies might enable an attack.  Fraud is an\
    \ example\n   of an attack that might be enabled by missing replay protection,\n\
    \   missing protection of authorization tokens, identity spoofing,\n   missing\
    \ authentication, and other deficiencies that help an adversary\n   steal resources.\
    \  Different threat scenarios based on deficiencies\n   that could enable an attack\
    \ are addressed in this section.\n   The threat scenarios are not independent.\
    \  Some of them (e.g., denial\n   of service) are well-established security terms\
    \ and, as such, need to\n   be addressed, but they are often enabled by one or\
    \ more deficiencies\n   described under other scenarios.\n"
- title: 4.1.  Threats during NSIS SA Usage
  contents:
  - "4.1.  Threats during NSIS SA Usage\n   Once a security association is established\
    \ (and used) to protect\n   signaling messages, many basic attacks are prevented.\
    \  However, a\n   malicious NSIS node is still able to perform various attacks\
    \ as\n   described in Section 4.7.  Replay attacks may be possible when an\n \
    \  NSIS node crashes, restarts, and performs state re-establishment.\n   Proper\
    \ re-synchronization of the security mechanism must therefore be\n   provided\
    \ to address this problem.\n"
- title: 4.2.  Flooding
  contents:
  - "4.2.  Flooding\n   This section describes attacks that allow an adversary to\
    \ flood an\n   NSIS node with bogus signaling messages to cause a denial of service\n\
    \   attack.\n   We will discuss this threat at different layers in the NSIS protocol\n\
    \   suite:\n   Processing of Router Alert Options:\n      The processing of Router\
    \ Alert Option (RAO) requires that a router\n      do some additional processing\
    \ by intercepting packets with IP\n      options, which might lead to additional\
    \ delay for legitimate\n      requests, or even rejection of some of them.  A\
    \ router being\n      flooded with a large number of bogus messages requires resources\n\
    \      before finding out that these messages have to be dropped.\n      If the\
    \ protocol is based on using interception for message\n      delivery, this threat\
    \ cannot be completely eliminated, but the\n      protocol design should attempt\
    \ to limit the processing that has to\n      be done on the RAO-bearing packet\
    \ so that it is as similar as\n      possible to that for an arbitrary packet\
    \ addressed directly to one\n      of the router interfaces.\n   Attacks against\
    \ the Transport Layer Protocol:\n      Certain attacks can be mounted against\
    \ transport protocols by\n      flooding a node with bogus requests, or even to\
    \ finish the\n      handshake phase to establish a transport layer association.\
    \  These\n      types of threats are also addressed in Section 4.11.\n   Force\
    \ NTLP to Do More Processing:\n      Some protocol fields might allow an adversary\
    \ to force an NTLP\n      node to perform more processing.  Additionally it might\
    \ be\n      possible to interfere with the flow control or the congestion\n  \
    \    control procedure.  These types of threats are also addressed in\n      Section\
    \ 4.11.\n      Furthermore, it might be possible to force the NTLP node to\n \
    \     perform some computations or signaling message exchanges by\n      injecting\
    \ \"trigger\" events (which are unprotected).\n   Force NSLP to Do More Processing:\n\
    \      An adversary might benefit from flooding an NSLP node with\n      messages\
    \ that must be stored (e.g., due to fragmentation handling)\n      before verifying\
    \ the correctness of signaling messages.\n      Furthermore, causing memory allocation\
    \ and computational efforts\n      might allow an adversary to harm NSIS entities.\
    \  If a signaling\n      message contains, for example, a digital signature, then\
    \ some\n      additional processing is required for the cryptographic\n      verification.\
    \  An adversary can easily create a random bit\n      sequence instead of a digital\
    \ signature to force an NSIS node into\n      heavy computation.\n      Idempotent\
    \ signaling messages are particularly vulnerable to this\n      type of attack.\
    \  The term \"idempotent\" refers to messages that\n      contain the same amount\
    \ of information as the original message.\n      An example would be a refresh\
    \ message that is equivalent to a\n      create message.  This property allows\
    \ a refresh message to create\n      state along a new path, where no previous\
    \ state is available.  For\n      this to work, specific classes of cryptographic\
    \ mechanisms\n      supporting this behavior are needed.  An example is a scheme\
    \ based\n      on digital signatures, which, however, should be used with care\n\
    \      due to possible denial of service attacks.\n      Problems with the usage\
    \ of public-key-based cryptosystems in\n      protocols are described in [AN97]\
    \ and in [ALN00].\n      In addition to the threat scenario described above, an\
    \ incoming\n      signaling message might trigger communication with third-party\n\
    \      nodes such as policy servers, LDAP servers, or AAA servers.  If an\n  \
    \    adversary is able to transmit a large number of signaling messages\n    \
    \  (for example, with QoS reservation requests) with invalid\n      credentials,\
    \ then the verifying node may not be able to process\n      other reservation\
    \ messages from legitimate users.\n"
- title: 4.3.  Eavesdropping and Traffic Analysis
  contents:
  - "4.3.  Eavesdropping and Traffic Analysis\n   This section covers threats whereby\
    \ an adversary is able to eavesdrop\n   on signaling messages.  The signaling\
    \ packets collected may allow\n   traffic analysis or be used later to mount replay\
    \ attacks, as\n   described in Section 3.2.  The eavesdropper might learn QoS\n\
    \   parameters, communication patterns, policy rules for firewall\n   traversal,\
    \ policy information, application identifiers, user\n   identities, NAT bindings,\
    \ authorization objects, network\n   configuration and performance information,\
    \ and more.\n   An adversary's capability to eavesdrop on signaling messages might\n\
    \   violate a user's preference for privacy, particularly if unprotected\n   authentication\
    \ or authorization information (including policies and\n   profile information)\
    \ is exchanged.\n   Because the NSIS protocol signals messages through a number\
    \ of nodes,\n   it is possible to differentiate between nodes actively participating\n\
    \   in the NSIS protocol and those that do not.  For certain objects or\n   messages,\
    \ it might be desirable to permit actively participating\n   intermediate NSIS\
    \ nodes to eavesdrop.  On the other hand, it might be\n   desirable that only\
    \ the intended end points (NSIS Initiator and NSIS\n   Responder) be able to read\
    \ certain other objects.\n"
- title: 4.4.  Identity Spoofing
  contents:
  - "4.4.  Identity Spoofing\n   Identity spoofing relevant for NSIS occurs in three\
    \ forms: First,\n   identity spoofing can happen during the establishment of a\
    \ security\n   association based on a weak authentication mechanism.  Second,\
    \ an\n   adversary can modify the flow identifier carried within a signaling\n\
    \   message.  Third, it can spoof data traffic.\n   In the first case, Eve, acting\
    \ as an adversary, may claim to be the\n   registered user Alice by spoofing Alice's\
    \ identity.  Eve thereby\n   causes the network to charge Alice for the network\
    \ resources\n   consumed.  This type of attack is possible if authentication is\
    \ based\n   on a simple username identifier (i.e., in absence of cryptographic\n\
    \   authentication), or if authentication is provided for hosts, and\n   multiple\
    \ users have access to a single host.  This attack could also\n   be classified\
    \ as theft of service.\n   In the second case, an adversary may be able to exploit\
    \ the\n   established flow identifiers (required for QoS and NAT/FW NSLP).\n \
    \  These identifiers are, among others, IP addresses, transport protocol\n   type\
    \ (UDP, TCP), port numbers, and flow labels (see [RFC1809] and\n   [RFC3697]).\
    \  Modification of these flow identifiers allows\n   adversaries to exploit or\
    \ to render ineffective quality of service\n   reservations or policy rules at\
    \ middleboxes.  An adversary could\n   mount an attack by modifying the flow identifier\
    \ of a signaling\n   message.\n   In the third case, an adversary may spoof data\
    \ traffic.  NSIS\n   signaling messages contain some sort of flow identifier that\
    \ is\n   associated with a specified behavior (e.g., a particular flow\n   experiences\
    \ QoS treatment or allows packets to traverse a firewall).\n   An adversary might,\
    \ therefore, use IP spoofing and inject data\n   packets to benefit from previously\
    \ installed flow identifiers.\n   We will provide an example of the latter threat.\
    \  After NSIS nodes\n   along the path between the NSIS initiator and the NSIS\
    \ receiver\n   processes a properly protected reservation request, transmitted\
    \ by\n   the legitimate user Alice, a QoS reservation is installed at the\n  \
    \ corresponding NSIS nodes (for example, the edge router).  The flow\n   identifier\
    \ is used for flow identification and allows data traffic\n   originated from\
    \ a given source to be assigned to this QoS\n   reservation.  The adversary Eve\
    \ now spoofs Alice's IP address.  In\n   addition, Alice's host may be crashed\
    \ by the adversary with a denial\n   of service attack or may lose connectivity\
    \ (for example, because of\n   mobility).  If Eve is able to perform address spoofing,\
    \ then she is\n   able to receive and transmit data (for example, RTP data traffic)\n\
    \   that receives preferential QoS treatment based on the previous\n   reservation.\
    \  Depending on the installed flow identifier granularity,\n   Eve might have\
    \ more possibilities to exploit the QoS reservation or a\n   pin-holed firewall.\
    \  Assuming the soft state paradigm, whereby\n   periodic refresh messages are\
    \ required, Alice's absence will not be\n   detected until a refresh message is\
    \ required, forcing Eve to respond\n   with a protected signaling message.  Again,\
    \ this attack is applicable\n   not only to QoS traffic, but also to a Firewall\
    \ control protocol,\n   with a different consequence.\n   The ability for an adversary\
    \ to inject data traffic that matches a\n   certain flow identifier established\
    \ by a legitimate user and to get\n   some benefit from injecting that traffic\
    \ often also requires the\n   ability to receive the data traffic or to have one's\
    \ correspondent\n   receive it.  For example, an adversary in an unmanaged network\n\
    \   observes a NAT/Firewall signaling message towards a corporate\n   network.\
    \  After the signaling message exchange was successful, the\n   user Alice is\
    \ allowed to traverse the company firewall based on the\n   establish packet filter\
    \ in order to contact her internal mail server.\n   Now, the adversary Eve, who\
    \ was monitoring the signaling exchange, is\n   able to build a data packet towards\
    \ this mail server that will pass\n   the company firewall.  The packet will hit\
    \ the mail server and cause\n   some actions, and the mail server will reply with\
    \ some response\n   messages.  Depending on the exact location of the adversary\
    \ and the\n   degree of routing asymmetry, the adversary might even see the\n\
    \   response messages.  Note that for this attack to work, Alice does not\n  \
    \ need to participate in the exchange of signaling messages.\n   We could imagine\
    \ using attributes of a flow identifier that is not\n   related to source and\
    \ destination addresses.  For example, we could\n   think of a flow identifier\
    \ for which only the 21-bit Flow ID is used\n   (without source and destination\
    \ IP address).  Identity spoofing and\n   injecting traffic is much easier since\
    \ a packet only needs to be\n   marked and an adversary can use a nearly arbitrary\
    \ endpoint\n   identifier to achieve the desired result.  Obviously, though, the\n\
    \   endpoint identifiers are not irrelevant, because the messages have to\n  \
    \ hit some nodes in the network where NSIS signaling messages installed\n   state\
    \ (in the above example, they would have to hit the same\n   firewall).\n   Data\
    \ traffic marking based on DiffServ is such an example.  Whenever\n   an ingress\
    \ router uses only marked incoming data traffic for\n   admission control procedures,\
    \ various attacks are possible.  These\n   problems have been known in the DiffServ\
    \ community for a long time\n   and have been documented in various DiffServ-related\
    \ documents.  The\n   IPsec protection of DiffServ Code Points is described in\
    \ Section 6.2\n   of [RFC2745].  Related security issues (for example denial of\
    \ service\n   attacks) are described in Section 6.1 of the same document.\n"
- title: 4.5.  Unprotected Authorization Information
  contents:
  - "4.5.  Unprotected Authorization Information\n   Authorization is an important\
    \ criterion for providing resources such\n   as QoS reservations, NAT bindings,\
    \ and pinholes through firewalls.\n   Authorization information might be delivered\
    \ to the NSIS-\n   participating entities in a number of ways.\n   Typically,\
    \ the authenticated identity is used to assist during the\n   authorization procedure\
    \ (as described in [RFC3182], for example).\n   Depending on the chosen authentication\
    \ protocol, certain threats may\n   exist.  Section 3 discusses a number of issues\
    \ related to this\n   approach when the authentication and key exchange protocol\
    \ is used to\n   establish session keys for signaling message protection.\n  \
    \ Another approach is to use some sort of authorization token.  The\n   functionality\
    \ and structure of such an authorization token for RSVP\n   is described in [RFC3520]\
    \ and [RFC3521].\n   Achieving secure interaction between different protocols\
    \ based on\n   authorization tokens, however, requires some care.  By using such\
    \ an\n   authorization token, it is possible to link state information between\n\
    \   different protocols.  Returning an unprotected authorization token to\n  \
    \ the end host might allow an adversary (for example, an eavesdropper)\n   to\
    \ steal resources.  An adversary might also use the token to monitor\n   communication\
    \ patterns.  Finally, an untrustworthy end host might\n   also modify the token\
    \ content.\n   The Session/Reservation Ownership problem can also be regarded\
    \ as an\n   authorization problem.  Details are described in Section 4.10.  In\n\
    \   enterprise networks, authorization is often coupled with membership\n   in\
    \ a particular class of users or groups.  This type of information\n   either\
    \ can be delivered as part of the authentication and key\n   agreement procedure\
    \ or has to be retrieved via separate protocols\n   from other entities.  If an\
    \ adversary manages to modify information\n   relevant to determining authorization\
    \ or the outcome of the\n   authorization process itself, then theft of service\
    \ might be\n   possible.\n"
- title: 4.6.  Missing Non-Repudiation
  contents:
  - "4.6.  Missing Non-Repudiation\n   Signaling for QoS often involves three parties:\
    \ the user, a network\n   that offers QoS reservations (referred to as \"service\
    \ provider\") and\n   a third party that guarantees that the party making the\
    \ reservation\n   actually receives a financial compensation (referred to as \"\
    trusted\n   third party\").\n   In this context,\"repudiation\" refers to a problem\
    \ where either the\n   user or the service provider later deny the existence or\
    \ some\n   parameters (e.g., volume or price) of a QoS reservation towards the\n\
    \   trusted third party.  Problems stemming from a lack of non-\n   repudiation\
    \ appear in two forms:\n   Service provider's point-of-view:\n      A user may\
    \ deny having issued a reservation request for which it\n      was charged.  The\
    \ service provider may then want to be able to\n      prove that a particular\
    \ user issued the reservation request in\n      question.\n   User's point-of-view:\n\
    \      A service provider may claim to have received a number of\n      reservation\
    \ requests from a particular user.  The user in question\n      may want to show\
    \ that such reservation requests have never been\n      issued and may want to\
    \ see correct service usage records for a\n      given set of QoS parameters.\n\
    \   In today's networks, non-repudiation is not provided.  Therefore, it\n   might\
    \ be difficult to introduce with NSIS signaling.  The user has to\n   trust the\
    \ network operator to meter the traffic correctly, to collect\n   and merge accounting\
    \ data, and to ensure that no unforeseen problems\n   occur.  If a signaling protocol\
    \ with the non-repudiation property is\n   desired for establishing QoS reservations,\
    \ then it certainly impacts\n   the protocol design.\n   Non-repudiation functionality\
    \ places additional requirements on the\n   security mechanisms.  Thus, a solution\
    \ would normally increase the\n   overhead of a security solution.  Threats related\
    \ to missing non-\n   repudiation are only considered relevant in certain specific\n\
    \   scenarios and for specific NSLPs.\n"
- title: 4.7.  Malicious NSIS Entity
  contents:
  - "4.7.  Malicious NSIS Entity\n   Network elements within a domain (intra-domain)\
    \ experience a\n   different trust relationship with regard to the security protection\n\
    \   of signaling messages from that of edge NSIS entities.  It is assumed\n  \
    \ that edge NSIS entities are responsible for performing cryptographic\n   processing\
    \ (authentication, integrity and replay protection,\n   authorization, and accounting)\
    \ for signaling messages arriving from\n   the outside.  This prevents unprotected\
    \ signaling messages from\n   appearing within the internal network.  If, however,\
    \ an adversary\n   manages to take over an edge router, then the security of the\
    \ entire\n   network is compromised.  An adversary is then able to launch a number\n\
    \   of attacks, including denial of service; integrity violations; replay\n  \
    \ and reordering of objects and messages; bundling of messages;\n   deletion of\
    \ data packets; and various others.  A rogue firewall can\n   harm other firewalls\
    \ by modifying policy rules.  The chain-of-trust\n   principle applied in peer-to-peer\
    \ security protection cannot protect\n   against a malicious NSIS node.  An adversary\
    \ with access to an NSIS\n   router is also able to get access to security associations\
    \ and to\n   transmit secured signaling messages.  Note that even non-peer-to-peer\n\
    \   security protection might not be able to prevent this problem fully.\n   Because\
    \ an NSIS node might issue signaling messages on behalf of\n   someone else (by\
    \ acting as a proxy), additional problems need to be\n   considered.\n   An NSIS-aware\
    \ edge router is a critical component that requires\n   strong security protection.\
    \  A strong security policy applied at the\n   edge does not imply that other\
    \ routers within an intra-domain network\n   do not need to verify signaling messages\
    \ cryptographically.  If the\n   chain-of-trust principle is deployed, then the\
    \ security protection of\n   the entire path (in this case, within the network\
    \ of a single\n   administrative domain) is only as strong as the weakest link.\
    \  In the\n   case under consideration, the edge router is the most critical\n\
    \   component of this network, and it may also act as a security gateway\n   or\
    \ firewall for incoming and outgoing traffic.  For outgoing traffic,\n   this\
    \ device has to implement the security policy of the local domain\n   and to apply\
    \ the appropriate security protection.\n   For an adversary to mount this attack,\
    \ either an existing NSIS-aware\n   node along the path has to be attacked successfully,\
    \ or an adversary\n   must succeed in convincing another NSIS node to make it\
    \ the next NSIS\n   peer (man-in-the-middle attack).\n"
- title: 4.8.  Denial of Service Attacks
  contents:
  - "4.8.  Denial of Service Attacks\n   A number of denial of service (DoS) attacks\
    \ can cause NSIS nodes to\n   malfunction.  Other attacks that could lead to DoS,\
    \ such as man-in-\n   the-middle attacks, replay attacks, and injection or modification\
    \ of\n   signaling messages, etc., are mentioned throughout this document.\n \
    \  Path Finding:\n      Some signaling protocols establish state (e.g., routing\
    \ state) and\n      perform some actions (e.g., querying resources) at a number\
    \ of\n      NSIS nodes without requiring authorization (or even proper\n     \
    \ authentication) based on a single message (e.g., PATH message in\n      RSVP).\n\
    \      An adversary can utilize this fact to transmit a large number of\n    \
    \  signaling messages to allocate state at nodes along the path and\n      to\
    \ cause resource consumption.\n      An NSIS responder might not be able to determine\
    \ the NSIS\n      initiator and might even tend to respond to such a signaling\n\
    \      message with a corresponding reservation message.\n   Discovery Phase:\n\
    \      Conveying signaling information to a large number of entities\n      along\
    \ a data path requires some sort of discovery.  This discovery\n      process\
    \ is vulnerable to a number of attacks because it is\n      difficult to secure.\
    \  An adversary can use the discovery\n      mechanisms to convince one entity\
    \ to signal information to another\n      entity that is not along the data path,\
    \ or to cause the discovery\n      process to fail.  In the first case, the signaling\
    \ protocol could\n      appear to continue correctly, except that policy rules\
    \ are\n      installed at the incorrect firewalls or QoS resource reservations\n\
    \      take place at the wrong entities.  For an end host, this means\n      that\
    \ the protocol failed for unknown reasons.\n   Faked Error or Response Messages:\n\
    \      An adversary may be able to inject false error or response\n      messages\
    \ as part of a DoS attack.  This could be at the signaling\n      message protocol\
    \ layer (NTLP), the layer of each client layer\n      protocol (e.g., QoS NSLP\
    \ or NAT/Firewall NSLP), or the transport\n      protocol layer.  An adversary\
    \ might cause unexpected protocol\n      behavior or might succeed with a DoS\
    \ attack.  The discovery\n      protocol, especially, exhibits vulnerabilities\
    \ with regard to this\n      threat scenario (see the above discussion on discovery).\
    \  If no\n      separate discovery protocol is used and signaling messages are\n\
    \      addressed to end hosts only (with a Router Alert Option to\n      intercept\
    \ message as NSIS aware nodes), an error message might be\n      used to indicate\
    \ a path change.  Such a design combines a\n      discovery protocol with a signaling\
    \ message exchange protocol.\n"
- title: 4.9.  Disclosing the Network Topology
  contents:
  - "4.9.  Disclosing the Network Topology\n   In some organizations or enterprises\
    \ there is a desire not to reveal\n   internal network structure (or other related\
    \ information) outside of\n   a closed community.  An adversary might be able\
    \ to use NSIS messages\n   for network mapping (e.g., discovering which nodes\
    \ exist, which use\n   NSIS, what version, what resources are allocated, what\
    \ capabilities\n   nodes along a path have, etc.).  Discovery messages, traceroute,\n\
    \   diagnostic messages (see [RFC2745] for a description of diagnostic\n   message\
    \ functionality for RSVP), and query messages, in addition to\n   record route\
    \ and route objects, provide potential assistance to an\n   adversary.  Thus,\
    \ the requirement of not disclosing a network\n   topology might conflict with\
    \ other requirements to provide means for\n   discovering NSIS-aware nodes automatically\
    \ or to provide diagnostic\n   facilities (used for network monitoring and administration).\n"
- title: 4.10.  Unprotected Session or Reservation Ownership
  contents:
  - "4.10.  Unprotected Session or Reservation Ownership\n   Figure 4 shows an NSIS\
    \ Initiator that has established state\n   information at NSIS nodes along a path\
    \ as part of the signaling\n   procedure.  As a result, Access Router 1, Router\
    \ 3, and Router 4 (and\n   other nodes) have stored session-state information,\
    \ including the\n   Session Identifier SID-x.\n                              \
    \               Session ID(SID-x)\n                                       +--------+\n\
    \                     +-----------------+ Router +------------>\n    Session ID(SID-x)|\
    \                 |   4    |\n                 +---+----+            +--------+\n\
    \                 | Router |\n          +------+   3    +*******\n          |\
    \      +---+----+      *\n          |                      *\n          | Session\
    \ ID(SID-x)    * Session ID(SID-x)\n      +---+----+             +---+----+\n\
    \      | Access |             | Access |\n      | Router |             | Router\
    \ |\n      |   1    |             |   2    |\n      +---+----+             +---+----+\n\
    \          |                      *\n          | Session ID(SID-x)    * Session\
    \ ID(SID-x)\n     +----+------+          +----+------+\n     |  NSIS     |   \
    \       | Adversary |\n     | Initiator |          |           |\n     +-----------+\
    \          +-----------+\n                Figure 4: Session or Reservation Ownership\n\
    \   The Session Identifier is included in signaling messages to reference\n  \
    \ to the established state.\n   If an adversary were able to obtain the Session\
    \ Identifier (for\n   example, by eavesdropping on signaling messages), it would\
    \ be able to\n   add the same Session Identifier SID-x to a new signaling message.\n\
    \   When the new signaling message hits Router 3 (as shown in Figure 4),\n   existing\
    \ state information can be modified.  The adversary can then\n   modify or delete\
    \ the established reservation and cause unexpected\n   behavior for the legitimate\
    \ user.\n   The source of the problem is that Router 3 (a cross-over router) is\n\
    \   unable to decide whether the new signaling message was initiated from\n  \
    \ the owner of the session or reservation.\n   In addition, nodes other than the\
    \ initial signaling message\n   originator are allowed to signal information during\
    \ the lifetime of\n   an established session.  As part of the protocol, any NSIS-aware\
    \ node\n   along the path (and the path might change over time) could initiate\
    \ a\n   signaling message exchange.  It might, for example, be necessary to\n\
    \   provide mobility support or to trigger a local repair procedure.  If\n   only\
    \ the initial signaling message originator were allowed to trigger\n   signaling\
    \ message exchanges, some protocol behavior would not be\n   possible.\n   If\
    \ this threat scenario is not addressed, an adversary can launch\n   DoS, theft\
    \ of service, and various other attacks.\n"
- title: 4.11.  Attacks against the NTLP
  contents:
  - "4.11.  Attacks against the NTLP\n   In [2LEVEL], a two-level architecture is\
    \ proposed, that would split\n   an NSIS protocol into layers: a signaling message\
    \ transport-specific\n   layer and an application-specific layer.  This is further\
    \ developed\n   in the NSIS Framework [RFC4080].  Most of the threats described\
    \ in\n   this threat analysis are applicable to the NSLP application-specific\n\
    \   part (e.g., QoS NSLP).  There are, however, some threats that are\n   applicable\
    \ to the NTLP.\n   Network and transport layer protocols lacking protection mechanisms\n\
    \   are vulnerable to certain attacks, such as header manipulation, DoS,\n   spoofing\
    \ of identities, session hijacking, unexpected aborts, etc.\n   Malicious nodes\
    \ can attack the congestion control mechanism to force\n   NSIS nodes into a congestion\
    \ avoidance state.\n   Threats that address parts of the NTLP that are not related\
    \ to\n   attacks against the use of transport layer protocols are covered in\n\
    \   various sections throughout this document, such as Section 4.2.\n   If existing\
    \ transport layer protocols are used for exchanging NSIS\n   signaling messages,\
    \ security vulnerabilities known for these\n   protocols need to be considered.\
    \  A detailed threat description of\n   these protocols is outside the scope of\
    \ this document.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This entire memo discusses security issues relevant\
    \ for NSIS protocol\n   design.  It begins by identifying the components of a\
    \ network running\n   NSIS (Initiator, Responder, and different Administrative\
    \ Domains\n   between them).  It then considers five cases in which communications\n\
    \   take place between these components, and it examines the trust\n   relationships\
    \ presumed to exist in each case: First-Peer\n   Communications, End-to-Middle\
    \ Communications, Intra-Domain\n   Communications, Inter-Domain Communications,\
    \ and End-to-End\n   Communications.  This analysis helps determine the security\
    \ needs and\n   the relative seriousness of different threats in the different\
    \ cases.\n   The document points out the need for different protocol security\n\
    \   measures: authentication, key exchange, message integrity, replay\n   protection,\
    \ confidentiality, authorization, and some precautions\n   against denial of service.\
    \  The threats are subdivided into generic\n   ones (e.g., man-in-the-middle attacks,\
    \ replay attacks, tampering and\n   forgery, and attacks on security negotiation\
    \ protocols) and eleven\n   threat scenarios that are particularly applicable\
    \ to the NSIS\n   protocol.  Denial of service, for example, is covered in the\n\
    \   NSIS-specific section, not because it cannot be carried out against\n   other\
    \ protocols, but because the methods used to carry out denial of\n   service attacks\
    \ tend to be protocol specific.  Numerous illustrative\n   examples provide insight\
    \ into what can happen if these threats are\n   not mitigated.\n   This document\
    \ repeatedly points out that not all of the threats are\n   equally serious in\
    \ every context.  It does attempt to identify the\n   scenarios in which security\
    \ failures may have the highest impact.\n   However, it is difficult for the protocol\
    \ designer to foresee all the\n   ways in which NSIS protocols will be used or\
    \ to anticipate the\n   security concerns of a wide variety of likely users. \
    \ Therefore, the\n   protocol designer needs to offer a full range of security\n\
    \   capabilities and ways for users to negotiate and select what they\n   need,\
    \ on a case-by-case basis.  To counter these threats, security\n   requirements\
    \ have been listed in [RFC3726].\n"
- title: 6.  Contributors
  contents:
  - "6.  Contributors\n   We especially thank Richard Graveman, who provided text\
    \ for the\n   security considerations section, as well as a detailed review of\
    \ the\n   document.\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   We would like to thank (in alphabetical order) Marcus\
    \ Brunner, Jorge\n   Cuellar, Mehmet Ersue, Xiaoming Fu, and Robert Hancock for\
    \ their\n   comments on an initial version of this document.  Jorge and Robert\n\
    \   gave us an extensive list of comments and provided information on\n   additional\
    \ threats.\n   Jukka Manner, Martin Buechli, Roland Bless, Marcus Brunner, Michael\n\
    \   Thomas, Cedric Aoun, John Loughney, Rene Soltwisch, Cornelia Kappler,\n  \
    \ Ted Wiederhold, Vishal Sankhla, Mohan Parthasarathy, and Andrew\n   McDonald\
    \ provided comments on more recent versions of this document.\n   Their input\
    \ helped improve the content of this document.  Roland\n   Bless, Michael Thomas,\
    \ Joachim Kross, and Cornelia Kappler, in\n   particular, provided good proposals\
    \ for regrouping and restructuring\n   the material.\n   A final review was given\
    \ by Michael Richardson.  We thank him for his\n   detailed comments.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC4080]     Hancock, R., Karagiannis, G., Loughney,\
    \ J., and S. van\n                 den Bosch, \"Next Steps in Signaling (NSIS):\
    \ Framework\",\n                 RFC 4080, June 2005.\n   [RFC3726]     Brunner,\
    \ M., \"Requirements for Signaling Protocols\",\n                 RFC 3726, April\
    \ 2004.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [ALN00]       Aura, T., Leiwo, J., and P. Nikander,\
    \ \"Towards Network\n                 Denial of Service Resistant Protocols, In\
    \ Proceedings\n                 of the 15th International Information Security\n\
    \                 Conference (IFIP/SEC 2000), Beijing, China\",\n            \
    \     August 2000.\n   [AN97]        Aura, T. and P. Nikander, \"Stateless Connections\"\
    , In\n                 Proceedings of the International Conference on\n      \
    \           Information and Communications Security (ICICS'97),\n            \
    \     Lecture Notes in Computer Science 1334, Springer\",\n                 1997.\n\
    \   [2LEVEL]      Braden, R. and B. Lindell, \"A Two-Level Architecture\n    \
    \             for Internet Signaling\", Work in Progress,\n                 November\
    \ 2002.\n   [RFC3697]     Rajahalme, J., Conta, A., Carpenter, B., and S.\n  \
    \               Deering, \"IPv6 Flow Label Specification\", RFC 3697,\n      \
    \           March 2004.\n   [NATFW-NSLP]  Stiemerling, M., \"A NAT/Firewall NSIS\
    \ Signaling Layer\n                 Protocol (NSLP)\", Work in Progress, February\
    \ 2005.\n   [GIMPS]       Schulzrinne, H., \"GIMPS: General Internet Messaging\n\
    \                 Protocol for Signaling\", Work in Progress,\n              \
    \   February 2005.\n   [QOS-NSLP]    Bosch, S., Karagiannis, G., and A. McDonald,\
    \ \"NSLP for\n                 Quality-of-Service signaling\", Work in Progress,\n\
    \                 February 2005.\n   [RSVP-SEC]    Tschofenig, H., \"RSVP Security\
    \ Properties\", Work in\n                 Progress, February 2005.\n   [SIG-ANAL]\
    \    Manner, J. and X. Fu, \"Analysis of Existing Quality-\n                 of-Service\
    \ Signaling Protocols\", RFC 4094, May 2005.\n   [RFC1809]     Partridge, C.,\
    \ \"Using the Flow Label Field in IPv6\",\n                 RFC 1809, June 1995.\n\
    \   [RFC2745]     Terzis, A., Braden, B., Vincent, S., and L. Zhang,\n       \
    \          \"RSVP Diagnostic Messages\", RFC 2745, January 2000.\n   [RFC3182]\
    \     Yadav, S., Yavatkar, R., Pabbati, R., Ford, P., Moore,\n               \
    \  T., Herzog, S., and R. Hess, \"Identity Representation\n                 for\
    \ RSVP\", RFC 3182, October 2001.\n   [RFC3261]     Rosenberg, J., Schulzrinne,\
    \ H., Camarillo, G.,\n                 Johnston, A., Peterson, J., Sparks, R.,\
    \ Handley, M.,\n                 and E.  Schooler, \"SIP: Session Initiation Protocol\"\
    ,\n                 RFC 3261, June 2002.\n   [RFC3520]     Hamer, L-N., Gage,\
    \ B., Kosinski, B., and H. Shieh,\n                 \"Session Authorization Policy\
    \ Element\", RFC 3520,\n                 April 2003.\n   [RFC3521]     Hamer,\
    \ L-N., Gage, B., and H. Shieh, \"Framework for\n                 Session Set-up\
    \ with Media Authorization\", RFC 3521,\n                 April 2003.\n   [RFC3756]\
    \     Nikander, P., Kempf, J., and E. Nordmark, \"IPv6\n                 Neighbor\
    \ Discovery (ND) Trust Models and Threats\",\n                 RFC 3756, May 2004.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Hannes Tschofenig\n   Siemens\n   Otto-Hahn-Ring 6\n \
    \  Munich, Bavaria  81739\n   Germany\n   EMail: Hannes.Tschofenig@siemens.com\n\
    \   Dirk Kroeselberg\n   Siemens\n   Otto-Hahn-Ring 6\n   Munich, Bavaria  81739\n\
    \   Germany\n   EMail: Dirk.Kroeselberg@siemens.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
