- contents:
  - "                     Loss and Delay Measurement in\n          Transparent Interconnection
    of Lots of Links (TRILL)\n"
  title: __initial_text__
- contents:
  - "Abstract\n   Performance Monitoring (PM) is a key aspect of Operations,\n   Administration,
    and Maintenance (OAM).  It allows network operators\n   to verify the Service
    Level Agreement (SLA) provided to customers and\n   to detect network anomalies.
    \ This document specifies mechanisms for\n   Loss Measurement and Delay Measurement
    in Transparent Interconnection\n   of Lots of Links (TRILL) networks.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7456.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \  2. Conventions Used in this Document ...............................4\n      2.1.
    Key Words ..................................................4\n      2.2. Definitions
    ................................................4\n      2.3. Abbreviations ..............................................5\n
    \  3. Loss and Delay Measurement in the TRILL Architecture ............6\n      3.1.
    Performance Monitoring Granularity .........................6\n      3.2. One-Way
    vs. Two-Way Performance Monitoring .................6\n           3.2.1. One-Way
    Performance Monitoring ......................7\n           3.2.2. Two-Way Performance
    Monitoring ......................7\n      3.3. Point-to-Point vs. Point-to-Multipoint
    PM ..................8\n   4. Loss Measurement ................................................8\n
    \     4.1. One-Way Loss Measurement ...................................8\n           4.1.1.
    1SL Message Transmission ............................9\n           4.1.2. 1SL
    Message Reception ..............................10\n      4.2. Two-Way Loss Measurement
    ..................................11\n           4.2.1. SLM Message Transmission
    ...........................12\n           4.2.2. SLM Message Reception ..............................12\n
    \          4.2.3. SLR Message Reception ..............................13\n   5.
    Delay Measurement ..............................................14\n      5.1.
    One-Way Delay Measurement .................................14\n           5.1.1.
    1DM Message Transmission ...........................15\n           5.1.2. 1DM
    Message Reception ..............................16\n      5.2. Two-Way Delay Measurement
    .................................16\n           5.2.1. DMM Message Transmission
    ...........................17\n           5.2.2. DMM Message Reception ..............................17\n
    \          5.2.3. DMR Message Reception ..............................18\n   6.
    Packet Formats .................................................19\n      6.1.
    TRILL OAM Encapsulation ...................................19\n      6.2. Loss
    Measurement Packet Formats ...........................21\n           6.2.1. Counter
    Format .....................................21\n           6.2.2. 1SL Packet Format
    ..................................21\n           6.2.3. SLM Packet Format ..................................22\n
    \          6.2.4. SLR Packet Format ..................................23\n      6.3.
    Delay Measurement Packet Formats ..........................24\n           6.3.1.
    Timestamp Format ...................................24\n           6.3.2. 1DM
    Packet Format ..................................24\n           6.3.3. DMM Packet
    Format ..................................25\n           6.3.4. DMR Packet Format
    ..................................26\n      6.4. OpCode Values .............................................27\n
    \  7. Performance Monitoring Process .................................28\n   8.
    Security Considerations ........................................29\n   9. References
    .....................................................29\n      9.1. Normative
    References ......................................29\n      9.2. Informative References
    ....................................30\n   Acknowledgments ...................................................31\n
    \  Authors' Addresses ................................................32\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   TRILL [TRILL] is a protocol for transparent least-cost routing,
    where\n   Routing Bridges (RBridges) route traffic to their destination based\n
    \  on least cost, using a TRILL encapsulation header with a hop count.\n   Operations,
    Administration, and Maintenance [OAM] is a set of tools\n   for detecting, isolating,
    and reporting connection failures and\n   performance degradation.  Performance
    Monitoring (PM) is a key aspect\n   of OAM.  PM allows network operators to detect
    and debug network\n   anomalies and incorrect behavior.  PM consists of two main
    building\n   blocks: Loss Measurement and Delay Measurement.  PM may also include\n
    \  other derived metrics such as Packet Delivery Rate, and Inter-Frame\n   Delay
    Variation.\n   The requirements of OAM in TRILL networks are defined in [OAM-REQ],\n
    \  and the TRILL OAM framework is described in [OAM-FRAMEWK].  These two\n   documents
    also highlight the main requirements in terms of\n   Performance Monitoring.\n
    \  This document defines protocols for Loss Measurement and for Delay\n   Measurement
    in TRILL networks.  These protocols are based on the\n   Performance Monitoring
    functionality defined in ITU-T G.8013/Y.1731\n   [Y.1731-2013].\n   o  Loss Measurement:
    the Loss Measurement protocol measures packet\n      loss between two RBridges.
    \ The measurement is performed by\n      sending a set of synthetic packets and
    counting the number of\n      packets transmitted and received during the test.
    \ The frame loss\n      is calculated by comparing the numbers of transmitted
    and received\n      packets.  This provides a statistical estimate of the packet
    loss\n      between the involved RBridges, with a margin of error that can be\n
    \     controlled by varying the number of transmitted synthetic packets.\n      This
    document does not define procedures for packet loss\n      computation based on
    counting user data for the reasons given in\n      Section 5.1 of [OAM-FRAMEWK].\n
    \  o  Delay Measurement: the Delay Measurement protocol measures the\n      packet
    delay and packet delay variation between two RBridges.  The\n      measurement
    is performed using timestamped OAM messages.\n"
  title: 1.  Introduction
- contents:
  - '2.  Conventions Used in this Document

    '
  - contents:
    - "2.1.  Key Words\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
      \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and
      \"OPTIONAL\" in this\n   document are to be interpreted as described in [KEYWORDS].\n
      \  The requirement level of PM in [OAM-REQ] is 'SHOULD'.  Nevertheless,\n   this
      memo uses the entire range of requirement levels, including\n   'MUST'; the
      requirements in this memo are to be read as 'A MEP\n   (Maintenance End Point)
      that implements TRILL PM\n   MUST/SHOULD/MAY/...'.\n"
    title: 2.1.  Key Words
  - contents:
    - "2.2.  Definitions\n   o  One-way packet delay (based on [IPPM-1DM]) - the time
      elapsed from\n      the start of transmission of the first bit of a packet by
      an\n      RBridge until the reception of the last bit of the packet by the\n
      \     remote RBridge.\n   o  Two-way packet delay (based on [IPPM-2DM]) - the
      time elapsed from\n      the start of transmission of the first bit of a packet
      from the\n      local RBridge, receipt of the packet at the remote RBridge,
      the\n      transmission of a response packet from the remote RBridge back to\n
      \     the local RBridge, and receipt of the last bit of that response\n      packet
      by the local RBridge.\n   o  Packet loss (based on [IPPM-Loss] -  the number
      of packets sent by\n      a source RBridge and not received by the destination
      RBridge.  In\n      the context of this document, packet loss is measured at
      a\n      specific probe instance and a specific observation period.  As in\n
      \     [Y.1731-2013], this document distinguishes between near-end and\n      far-end
      packet loss.  Note that this semantic distinction\n      specifies the direction
      of packet loss but does not affect the\n      nature of the packet loss metric,
      which is defined in [IPPM-Loss].\n   o  Far-end packet loss - the number of
      packets lost on the path from\n      the local RBridge to the remote RBridge
      in a specific probe\n      instance and a specific observation period.\n   o
      \ Near-end packet loss - the number of packets lost on the path from\n      the
      remote RBridge to the local RBridge in a specific probe\n      instance and
      a specific observation period.\n"
    title: 2.2.  Definitions
  - contents:
    - "2.3.  Abbreviations\n   1DM      One-way Delay Measurement\n   1SL      One-way
      Synthetic Loss Measurement\n   DMM      Delay Measurement Message\n   DMR      Delay
      Measurement Reply\n   DoS      Denial of Service\n   FGL      Fine-Grained Label
      [FGL]\n   MD       Maintenance Domain\n   MD-L     Maintenance Domain Level\n
      \  MEP      Maintenance End Point\n   MIP      Maintenance Intermediate Point\n
      \  MP       Maintenance Point\n   OAM      Operations, Administration, and Maintenance
      [OAM]\n   PM       Performance Monitoring\n   SLM      Synthetic Loss Measurement
      Message\n   SLR      Synthetic Loss Measurement Reply\n   TLV      Type-Length-Value\n
      \  TRILL    Transparent Interconnection of Lots of Links [TRILL]\n"
    title: 2.3.  Abbreviations
  title: 2.  Conventions Used in this Document
- contents:
  - "3.  Loss and Delay Measurement in the TRILL Architecture\n   As described in
    [OAM-FRAMEWK], OAM protocols in a TRILL campus\n   operate over two types of Maintenance
    Points (MPs): Maintenance End\n   Points (MEPs) and Maintenance Intermediate Points
    (MIPs).\n              +-------+     +-------+     +-------+\n              |
    \      |     |       |     |       |\n              |  RB1  |<===>|  RB3  |<===>|
    \ RB2  |\n              |       |     |       |     |       |\n              +-------+
    \    +-------+     +-------+\n                 MEP           MIP           MEP\n
    \           Figure 1: Maintenance Points in a TRILL Campus\n   Performance Monitoring
    (PM) allows a MEP to perform Loss and Delay\n   Measurements on any other MEP
    in the campus.  Performance Monitoring\n   is performed in the context of a specific
    Maintenance Domain (MD).\n   The PM functionality defined in this document is
    not applicable to\n   MIPs.\n"
  - contents:
    - "3.1.  Performance Monitoring Granularity\n   As defined in [OAM-FRAMEWK], PM
      can be applied at three levels of\n   granularity: Network, Service, and Flow.\n
      \  o  Network-level PM: the PM protocol is run over a dedicated test\n      VLAN
      or FGL [FGL].\n   o  Service-level PM: the PM protocol is used to perform measurements\n
      \     of actual user VLANs or FGLs.\n   o  Flow-level PM: the PM protocol is
      used to perform measurements on\n      a per-flow basis.  A flow, as defined
      in [OAM-REQ], is a set of\n      packets that share the same path and per-hop
      behavior (such as\n      priority).  As defined in [OAM-FRAMEWK], flow-based
      monitoring\n      uses a Flow Entropy field that resides at the beginning of
      the OAM\n      packet header (see Section 6.1) and mimics the forwarding behavior\n
      \     of the monitored flow.\n"
    title: 3.1.  Performance Monitoring Granularity
  - contents:
    - "3.2.  One-Way vs. Two-Way Performance Monitoring\n   Paths in a TRILL network
      are not necessarily symmetric, that is, a\n   packet sent from RB1 to RB2 does
      not necessarily traverse the same\n   set of RBridges or links as a packet sent
      from RB2 to RB1.  Even\n   within a given flow, packets from RB1 to RB2 do not
      necessarily\n   traverse the same path as packets from RB2 to RB1.\n"
    - contents:
      - "3.2.1.  One-Way Performance Monitoring\n   In one-way PM, RB1 sends PM messages
        to RB2, allowing RB2 to monitor\n   the performance on the path from RB1 to
        RB2.\n   A MEP that implements TRILL PM SHOULD support one-way Performance\n
        \  Monitoring.  A MEP that implements TRILL PM SHOULD support both the\n   PM
        functionality of the sender, RB1, and the PM functionality of the\n   receiver,
        RB2.\n   One-way PM can be applied either proactively or on-demand, although\n
        \  the more typical scenario is the proactive mode, where RB1 and RB2\n   periodically
        transmit PM messages to each other, allowing each of\n   them to monitor the
        performance on the incoming path from the peer\n   MEP.\n"
      title: 3.2.1.  One-Way Performance Monitoring
    - contents:
      - "3.2.2.  Two-Way Performance Monitoring\n   In two-way PM, a sender, RB1,
        sends PM messages to a reflector, RB2,\n   and RB2 responds to these messages,
        allowing RB1 to monitor the\n   performance of:\n   o  The path from RB1 to
        RB2.\n   o  The path from RB2 to RB1.\n   o  The two-way path from RB1 to
        RB2, and back to RB1.\n   Note that in some cases it may be interesting for
        RB1 to monitor only\n   the path from RB1 to RB2.  Two-way PM allows the sender,
        RB1, to\n   monitor the path from RB1 to RB2, as opposed to one-way PM\n   (Section
        3.2.1), which allows the receiver, RB2, to monitor this\n   path.\n   A MEP
        that implements TRILL PM MUST support two-way PM.  A MEP that\n   implements
        TRILL PM MUST support both the sender and the reflector PM\n   functionality.\n
        \  As described in Section 3.1, flow-based PM uses the Flow Entropy\n   field
        as one of the parameters that identify a flow.  In two-way PM,\n   the Flow
        Entropy of the path from RB1 to RB2 is typically different\n   from the Flow
        Entropy of the path from RB2 to RB1.  This document\n   uses the Reflector
        Entropy TLV [TRILL-FM], which allows the sender to\n   specify the Flow Entropy
        value to be used in the response message.\n   Two-way PM can be applied either
        proactively or on-demand.\n"
      title: 3.2.2.  Two-Way Performance Monitoring
    title: 3.2.  One-Way vs. Two-Way Performance Monitoring
  - contents:
    - "3.3.  Point-to-Point vs. Point-to-Multipoint PM\n   PM can be applied either
      as a point-to-point measurement protocol, or\n   as a point-to-multi-point measurement
      protocol.\n   The point-to-point approach measures the performance between two\n
      \  RBridges using unicast PM messages.\n   In the point-to-multipoint approach,
      an RBridge RB1 sends PM messages\n   to multiple RBridges using multicast messages.
      \ The reflectors (in\n   two-way PM) respond to RB1 using unicast messages.
      \ To protect\n   against reply storms, the reflectors MUST send the response
      messages\n   after a random delay in the range of 0 to 2 seconds.  This ensures\n
      \  that the responses are staggered in time and that the initiating\n   RBridge
      is not overwhelmed with responses.  Moreover, an RBridge\n   Scope TLV [TRILL-FM]
      can be used to limit the set of RBridges from\n   which a response is expected,
      thus reducing the impact of potential\n   response bursts.\n"
    title: 3.3.  Point-to-Point vs. Point-to-Multipoint PM
  title: 3.  Loss and Delay Measurement in the TRILL Architecture
- contents:
  - "4.  Loss Measurement\n   The Loss Measurement protocol has two modes of operation:
    one-way\n   Loss Measurement and two-way Loss Measurement.\n   Note: The terms
    'one-way' and 'two-way' Loss Measurement should not\n   be confused with the terms
    'single-ended' and 'dual-ended' Loss\n   Measurement used in [Y.1731-2013].  As
    defined in Section 3.2, the\n   terms 'one-way' and 'two-way' specify whether
    the protocol monitors\n   performance on one direction or on both directions.
    \ The terms\n   'single-ended' and 'dual-ended', on the other hand, describe whether\n
    \  the protocol is asymmetric or symmetric, respectively.\n"
  - contents:
    - "4.1.  One-Way Loss Measurement\n   One-way Loss Measurement measures the one-way
      packet loss from one\n   MEP to another.  The loss ratio is measured using a
      set of One-way\n   Synthetic Loss Measurement (1SL) messages.  The packet format
      of the\n   1SL message is specified in Section 6.2.2.  Figure 2 illustrates
      a\n   one-way Loss Measurement message exchange.\n                        TXp
      \             TXc\n          Sender    --------------------------------------\n
      \                         \\                \\\n                           \\
      1SL   . . .    \\ 1SL\n                            \\                \\\n                            \\/
      \              \\/\n          Receiver  --------------------------------------\n
      \                           RXp              RXc\n                     Figure
      2: One-Way Loss Measurement\n   The one-way Loss Measurement procedure uses
      a set of 1SL messages to\n   measure the packet loss.  The figure shows two
      non-consecutive\n   messages from the set.\n   The sender maintains a counter
      of transmitted 1SL messages, and\n   includes the value of this counter, TX,
      in each 1SL message it\n   transmits.  The receiver maintains a counter of received
      1SL\n   messages, RX, and can calculate the loss by comparing its counter\n
      \  values to the counter values received in the 1SL messages.\n   In Figure
      2, the subscript 'c' is an abbreviation for current, and\n   'p' is an abbreviation
      for previous.\n"
    - contents:
      - "4.1.1.  1SL Message Transmission\n   One-way Loss Measurement can be applied
        either proactively or on-\n   demand, although as mentioned in Section 3.2.1,
        it is more likely to\n   be applied proactively.\n   The term 'on-demand'
        in the context of one-way Loss Measurement\n   implies that the sender transmits
        a fixed set of 1SL messages,\n   allowing the receiver to perform the measurement
        based on this set.\n   A MEP that supports one-way Loss Measurement MUST support
        unicast\n   transmission of 1SL messages.\n   A MEP that supports one-way
        Loss Measurement MAY support multicast\n   transmission of 1SL messages.\n
        \  The sender MUST maintain a packet counter for each peer MEP and probe\n
        \  instance (test ID).  Every time the sender transmits a 1SL packet, it\n
        \  increments the corresponding counter and then integrates the value of\n
        \  the counter into the Counter TX field of the 1SL packet.\n   The 1SL message
        MAY be sent with a variable-size Data TLV, allowing\n   Loss Measurement for
        various packet sizes.\n"
      title: 4.1.1.  1SL Message Transmission
    - contents:
      - "4.1.2.  1SL Message Reception\n   The receiver MUST maintain a reception
        counter for each peer MEP and\n   probe instance (test ID).  Upon receiving
        a 1SL packet, the receiver\n   MUST verify that:\n   o  The 1SL packet is
        destined to the current MEP.\n   o  The packet's MD level matches the MEP's
        MD level.\n   If both conditions are satisfied, the receiver increments the\n
        \  corresponding reception counter and records the new value of the\n   counter,
        RX1.\n   A MEP that supports one-way Loss Measurement MUST support reception\n
        \  of both unicast and multicast 1SL messages.\n   The receiver computes the
        one-way packet loss with respect to a probe\n   instance measurement interval.
        \ A probe instance measurement interval\n   includes a sequence of 1SL messages
        with the same test ID.  The one-\n   way packet loss is computed by comparing
        the counter values TXp and\n   RXp at the beginning of the measurement interval
        and the counter\n   values TXc and RXc at the end of the measurement interval
        (see\n   Figure 2):\n            one-way packet loss = (TXc-TXp) - (RXc-RXp)
        \    (1)\n   The calculation in Equation (1) is based on counter value\n   differences,
        implying that the sender's counter, TX, and the\n   receiver's counter, RX,
        are not required to be synchronized with\n   respect to a common initial value.\n
        \  It is noted that if the sender or receiver resets one of the\n   counters,
        TX or RX, the calculation in Equation (1) produces a false\n   measurement
        result.  Hence, the sender and receiver SHOULD NOT clear\n   the TX and RX
        counters during a measurement interval.\n   When the receiver calculates the
        packet loss per Equation (1), it\n   MUST perform a wraparound check.  If
        the receiver detects that one of\n   the counters has wrapped around, the
        receiver adjusts the result of\n   Equation (1) accordingly.\n   A 1SL receiver
        MUST support reception of 1SL messages with a Data\n   TLV.\n   Since synthetic
        one-way Loss Measurement is performed using 1SL\n   messages, obviously, some
        1SL messages may be dropped during a\n   measurement interval.  Thus, when
        the receiver does not receive a\n   1SL, the receiver cannot perform the calculations
        in Equation (1) for\n   that specific 1SL message.\n"
      title: 4.1.2.  1SL Message Reception
    title: 4.1.  One-Way Loss Measurement
  - contents:
    - "4.2.  Two-Way Loss Measurement\n   Two-way Loss Measurement allows a MEP to
      measure the packet loss on\n   the paths to and from a peer MEP.  Two-way Loss
      Measurement uses a\n   set of Synthetic Loss Measurement Messages (SLMs) to
      compute the\n   packet loss.  Each SLM is answered with a Synthetic Loss Measurement\n
      \  Reply (SLR).  The packet formats of the SLM and SLR packets are\n   specified
      in Sections 6.2.3 and 6.2.4, respectively.  Figure 3\n   illustrates a two-way
      Loss Measurement message exchange.\n                   TXp       RXp             TXc
      \      RXc\n     Sender     -----------------------------------------------\n
      \                    \\       /\\                \\       /\\\n                      \\
      \     /      . . .       \\      /\n                   SLM \\    / SLR            SLM
      \\    / SLR\n                       \\/  /                     \\/  /\n     Reflector
      \ -----------------------------------------------\n                        TRXp
      \                     TRXc\n                     Figure 3: Two-Way Loss Measurement\n
      \  The two-way Loss Measurement procedure uses a set of SLM-SLR\n   handshakes.
      \ The figure shows two non-consecutive handshakes from the\n   set.\n   The
      sender maintains a counter of transmitted SLM messages and\n   includes the
      value of this counter, TX, in each transmitted SLM\n   message.  The reflector
      maintains a counter of received SLM messages,\n   TRX.  The reflector generates
      an SLR and incorporates TRX into the\n   SLR packet.  The sender maintains a
      counter of received SLR messages,\n   RX.  Upon receiving an SLR message, the
      sender can calculate the loss\n   by comparing the local counter values to the
      counter values received\n   in the SLR messages.\n   The subscript 'c' is an
      abbreviation for current, and 'p' is an\n   abbreviation for previous.\n"
    - contents:
      - "4.2.1.  SLM Message Transmission\n   Two-way Loss Measurement can be applied
        either proactively or on-\n   demand.\n   A MEP that supports two-way Loss
        Measurement MUST support unicast\n   transmission of SLM messages.\n   A MEP
        that supports two-way Loss Measurement MAY support multicast\n   transmission
        of SLM messages.\n   The sender MUST maintain a counter of transmitted SLM
        packets for\n   each peer MEP and probe instance (test ID).  Every time the
        sender\n   transmits an SLM packet, it increments the corresponding counter
        and\n   then integrates the value of the counter into the Counter TX field
        of\n   the SLM packet.\n   A sender MAY include a Reflector Entropy TLV in
        an SLM message.  The\n   Reflector Entropy TLV format is specified in [TRILL-FM].\n
        \  An SLM message MAY be sent with a Data TLV, allowing Loss Measurement\n
        \  for various packet sizes.\n"
      title: 4.2.1.  SLM Message Transmission
    - contents:
      - "4.2.2.  SLM Message Reception\n   The reflector MUST maintain a reception
        counter, TRX, for each peer\n   MEP and probe instance (test ID).\n   Upon
        receiving an SLM packet, the reflector MUST verify that:\n   o  The SLM packet
        is destined to the current MEP.\n   o  The packet's MD level matches the MEP's
        MD level.\n   If both conditions are satisfied, the reflector increments the\n
        \  corresponding packet counter and records the value of the new\n   counter,
        TRX.  The reflector then generates an SLR message that is\n   identical to
        the received SLM, except for the following\n   modifications:\n   o  The reflector
        incorporates TRX into the Counter TRX field of the\n      SLR.\n   o  The
        OpCode field in the OAM header is set to the SLR OpCode.\n   o  The reflector
        assigns its MEP ID in the Reflector MEP ID field.\n   o  If the received SLM
        includes a Reflector Entropy TLV [TRILL-FM],\n      the reflector copies the
        value of the Flow Entropy from the TLV\n      into the Flow Entropy field
        of the SLR message.  The outgoing SLR\n      message does not include a Reflector
        Entropy TLV.\n   o  The TRILL Header and transport header are modified to
        reflect the\n      source and destination of the SLR packet.  The SLR is always
        a\n      unicast message.\n   A MEP that supports two-way Loss Measurement
        MUST support reception\n   of both unicast and multicast SLM messages.\n   A
        reflector MUST support reception of SLM packets with a Data TLV.\n   When
        receiving an SLM with a Data TLV, the reflector includes the\n   unmodified
        TLV in the SLR.\n"
      title: 4.2.2.  SLM Message Reception
    - contents:
      - "4.2.3.  SLR Message Reception\n   The sender MUST maintain a reception counter,
        RX, for each peer MEP\n   and probe instance (test ID).\n   Upon receiving
        an SLR message, the sender MUST verify that:\n   o  The SLR packet is destined
        to the current MEP.\n   o  The Sender MEP ID field in the SLR packet matches
        the current MEP.\n   o  The packet's MD level matches the MEP's MD level.\n
        \  If the conditions above are met, the sender increments the\n   corresponding
        reception counter, and records the new value, RX.\n   The sender computes
        the packet loss with respect to a probe instance\n   measurement interval.
        \ A probe instance measurement interval includes\n   a sequence of SLM messages
        and their corresponding SLR messages, all\n   with the same test ID.  The
        packet loss is computed by comparing the\n   counters at the beginning of
        the measurement interval, denoted with a\n   subscript 'p', and the counters
        at the end of the measurement\n   interval, denoted with a subscript 'c' (as
        illustrated in Figure 3).\n            far-end packet loss = (TXc-TXp) - (TRXc-TRXp)
        \    (2)\n            near-end packet loss = (TRXc-TRXp) - (RXc-RXp)     (3)\n
        \  Note: The total two-way packet loss is the sum of the far-end and\n   near-end
        packet losses, that is (TXc-TXp) - (RXc-RXp).\n   The calculations in the
        two equations above are based on counter\n   value differences, implying that
        the sender's counters, TX and RX,\n   and the reflector's counter, TRX, are
        not required to be synchronized\n   with respect to a common initial value.\n
        \  It is noted that if the sender or reflector resets one of the\n   counters,
        TX, TRX, or RX, the calculation in Equations (2) and (3)\n   produces a false
        measurement result.  Hence, the sender and reflector\n   SHOULD NOT clear
        the TX, TRX, and RX counters during a measurement\n   interval.\n   When the
        sender calculates the packet loss per Equations (2) and (3),\n   it MUST perform
        a wraparound check.  If the reflector detects that\n   one of the counters
        has wrapped around, the reflector adjusts the\n   result of Equations (2)
        and (3) accordingly.\n   Since synthetic two-way Loss Measurement is performed
        using SLM and\n   SLR messages, obviously, some SLM and SLR messages may be
        dropped\n   during a measurement interval.  When an SLM or an SLR is dropped,
        the\n   corresponding two-way handshake (Figure 3) is not completed\n   successfully;
        thus, the reflector does not perform the calculations\n   in Equations (2)
        and (3) for that specific message exchange.\n   A sender MAY choose to monitor
        only the far-end packet loss, that is,\n   perform the computation in Equation
        (2), and ignore the computation\n   in Equation (3).  Note that, in this case,
        the sender can run flow-\n   based PM of the path to the peer MEP without
        using the Reflector\n   Entropy TLV.\n"
      title: 4.2.3.  SLR Message Reception
    title: 4.2.  Two-Way Loss Measurement
  title: 4.  Loss Measurement
- contents:
  - "5.  Delay Measurement\n   The Delay Measurement protocol has two modes of operation:
    one-way\n   Delay Measurement and two-way Delay Measurement.\n"
  - contents:
    - "5.1.  One-Way Delay Measurement\n   One-way Delay Measurement is used for computing
      the one-way packet\n   delay from one MEP to another.  The packet format used
      in one-way\n   Delay Measurement is referred to as 1DM and is specified in Section\n
      \  6.3.2.  The one-way Delay Measurement message exchange is illustrated\n   in
      Figure 4.\n                               T1\n                Sender    -------------------
      \        ----> time\n                                \\\n                                 \\
      1DM\n                                  \\\n                                  \\/\n
      \               Receiver  -------------------\n                                  T2\n
      \             Figure 4: One-Way Delay Measurement\n   The sender transmits a
      1DM message incorporating its time of\n   transmission, T1.  The receiver then
      receives the message at time T2,\n   and calculates the one-way delay as:\n
      \           one-way delay = T2-T1       (4)\n   Equation (4) implies that T2
      and T1 are measured with respect to a\n   common reference time.  Hence, two
      MEPs running a one-way Delay\n   Measurement protocol MUST be time-synchronized.
      \ The method used for\n   synchronizing the clocks associated with the two MEPs
      is outside the\n   scope of this document.\n"
    - contents:
      - "5.1.1.  1DM Message Transmission\n   1DM packets can be transmitted proactively
        or on-demand, although, as\n   mentioned in Section 3.2.1, they are typically
        transmitted\n   proactively.\n   A MEP that supports one-way Delay Measurement
        MUST support unicast\n   transmission of 1DM messages.\n   A MEP that supports
        one-way Delay Measurement MAY support multicast\n   transmission of 1DM messages.\n
        \  A 1DM message MAY be sent with a variable size Data TLV, allowing\n   packet
        Delay Measurement for various packet sizes.\n   The sender incorporates the
        1DM packet's time of transmission into\n   the Timestamp T1 field.\n"
      title: 5.1.1.  1DM Message Transmission
    - contents:
      - "5.1.2.  1DM Message Reception\n   Upon receiving a 1DM packet, the receiver
        records its time of\n   reception, T2.  The receiver MUST verify two conditions:\n
        \  o  The 1DM packet is destined to the current MEP.\n   o  The packet's MD
        level matches the MEP's MD level.\n   If both conditions are satisfied, the
        receiver terminates the packet\n   and calculates the one-way delay as specified
        in Equation (4).\n   A MEP that supports one-way Delay Measurement MUST support
        reception\n   of both unicast and multicast 1DM messages.\n   A 1DM receiver
        MUST support reception of 1DM messages with a Data\n   TLV.\n   When one-way
        Delay Measurement packets are received periodically, the\n   receiver MAY
        compute the packet delay variation based on multiple\n   measurements.  Note
        that packet delay variation can be computed even\n   when the two peer MEPs
        are not time-synchronized.\n"
      title: 5.1.2.  1DM Message Reception
    title: 5.1.  One-Way Delay Measurement
  - contents:
    - "5.2.  Two-Way Delay Measurement\n   Two-way Delay Measurement uses a two-way
      handshake for computing the\n   two-way packet delay between two MEPs.  The
      handshake includes two\n   packets: a Delay Measurement Message (DMM) and a
      Delay Measurement\n   Reply (DMR).  The DMM and DMR packet formats are specified
      in\n   Sections 6.3.3 and 6.3.4, respectively.\n   The two-way Delay Measurement
      message exchange is illustrated in\n   Figure 5.\n                              T1
      \         T4\n               Sender     -----------------------       ---->
      time\n                               \\          /\\\n                                \\
      \        /\n                             DMM \\       / DMR\n                                 \\/
      \    /\n               Reflector  -----------------------\n                                 T2
      \   T3\n               Figure 5: Two-Way Delay Measurement\n   The sender generates
      a DMM message incorporating its time of\n   transmission, T1.  The reflector
      receives the DMM message and records\n   its time of reception, T2.  The reflector
      then generates a DMR\n   message, incorporating T1, T2, and the DMR's transmission
      time, T3.\n   The sender receives the DMR message at T4, and using the four\n
      \  timestamps, it calculates the two-way packet delay.\n"
    - contents:
      - "5.2.1.  DMM Message Transmission\n   DMM packets can be transmitted periodically
        or on-demand.\n   A MEP that supports two-way Delay Measurement MUST support
        unicast\n   transmission of DMM messages.\n   A MEP that supports two-way
        Delay Measurement MAY support multicast\n   transmission of DMM messages.\n
        \  A sender MAY include a Reflector Entropy TLV in a DMM message.  The\n   Reflector
        Entropy TLV format is specified in [TRILL-FM].\n   A DMM MAY be sent with
        a variable size Data TLV, allowing packet\n   Delay Measurement for various
        packet sizes.\n   The sender incorporates the DMM packet's time of transmission
        into\n   the Timestamp T1 field.\n"
      title: 5.2.1.  DMM Message Transmission
    - contents:
      - "5.2.2.  DMM Message Reception\n   Upon receiving a DMM packet, the reflector
        records its time of\n   reception, T2.  The reflector MUST verify two conditions:\n
        \  o  The DMM packet is destined to the current MEP.\n   o  The packet's MD
        level matches the MEP's MD level.\n   If both conditions are satisfied, the
        reflector terminates the packet\n   and generates a DMR packet.  The DMR is
        identical to the received\n   DMM, except for the following modifications:\n
        \  o  The reflector incorporates T2 into the Timestamp T2 field of the\n      DMR.\n
        \  o  The reflector incorporates the DMR's transmission time, T3, into\n      the
        Timestamp T3 field of the DMR.\n   o  The OpCode field in the OAM header is
        set to the DMR OpCode.\n   o  If the received DMM includes a Reflector Entropy
        TLV [TRILL-FM],\n      the reflector copies the value of the Flow Entropy
        from the TLV\n      into the Flow Entropy field of the DMR message.  The outgoing
        DMR\n      message does not include a Reflector Entropy TLV.\n   o  The TRILL
        Header and transport header are modified to reflect the\n      source and
        destination of the DMR packet.  The DMR is always a\n      unicast message.\n
        \  A MEP that supports two-way Delay Measurement MUST support reception\n
        \  of both unicast and multicast DMM messages.\n   A reflector MUST support
        reception of DMM packets with a Data TLV.\n   When receiving a DMM with a
        Data TLV, the reflector includes the\n   unmodified TLV in the DMR.\n"
      title: 5.2.2.  DMM Message Reception
    - contents:
      - "5.2.3.  DMR Message Reception\n   Upon receiving the DMR message, the sender
        records its time of\n   reception, T4.  The sender MUST verify:\n   o  The
        DMR packet is destined to the current MEP.\n   o  The packet's MD level matches
        the MEP's MD level.\n   If both conditions above are met, the sender uses
        the four timestamps\n   to compute the two-way delay:\n            two-way
        delay = (T4-T1) - (T3-T2)       (5)\n   Note that two-way delay can be computed
        even when the two peer MEPs\n   are not time-synchronized.  One-way Delay
        Measurement, on the other\n   hand, requires the two MEPs to be synchronized.\n
        \  Two MEPs running a two-way Delay Measurement protocol MAY be time-\n   synchronized.
        \ If two-way Delay Measurement is run between two time-\n   synchronized MEPs,
        the sender MAY compute the one-way delays as\n   follows:\n            one-way
        delay {sender->reflector} = T2 - T1       (6)\n            one-way delay {reflector->sender}
        = T4 - T3       (7)\n   When two-way Delay Measurement is run periodically,
        the sender MAY\n   also compute the delay variation based on multiple measurements.\n
        \  A sender MAY choose to monitor only the sender->reflector delay, that\n
        \  is, perform the computation in Equation (6) and ignore the\n   computations
        in Equations (5) and (7).  Note that in this case, the\n   sender can run
        flow-based PM of the path to the peer MEP without\n   using the Reflector
        Entropy TLV.\n"
      title: 5.2.3.  DMR Message Reception
    title: 5.2.  Two-Way Delay Measurement
  title: 5.  Delay Measurement
- contents:
  - '6.  Packet Formats

    '
  - contents:
    - "6.1.  TRILL OAM Encapsulation\n   The TRILL OAM packet format is generally
      discussed in [OAM-FRAMEWK]\n   and specified in detail in [TRILL-FM].  It is
      quoted in this document\n   for convenience.\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |                               |\n      .    Link  Header               .
      (variable)\n      |                               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |                               |\n      +    TRILL Header               +
      6 or more bytes\n      |                               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |                               |\n      .   Flow Entropy                .
      96 bytes\n      .                               .\n      |                               |\n
      \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |   OAM Ethertype               |\n
      \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |                               |\n
      \     .   OAM Message Channel         . Variable\n      .                               .\n
      \     |                               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |     Link Trailer              | Variable\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \      Figure 6: TRILL OAM Encapsulation\n   The OAM Message Channel used in
      this document is defined in\n   [TRILL-FM] and has the following structure:\n
      \      0                   1                   2                   3\n       0
      1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |MD-L | Version | OpCode        |     Flags     |FirstTLVOffset |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |                                                               |\n      .
      \        OpCode-specific fields                                .\n      |                                                               |\n
      \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |
      \                                                              |\n      .         TLVs
      \                                                 .\n      |                                                               |\n
      \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                        Figure
      7: OAM Packet Format\n   The first four octets of the OAM Message Channel are
      common to all\n   OpCodes, whereas the rest is OpCode-specific.  Below is a
      brief\n   summary of the fields in the first 4 octets:\n   o  MD-L: Maintenance
      Domain Level.\n   o  Version: indicates the version of this protocol.  Always
      zero in\n      the context of this document.\n   o  OpCode: Operation Code (8
      bits).  Specifies the operation\n      performed by the message.  Specific packet
      formats are presented\n      in Sections 6.2 and 6.3 of this document.  A list
      of the PM\n      message OpCodes is provided in Section 6.4.\n   o  Flags: The
      definition of flags is OpCode-specific.  The value of\n      this field is zero
      unless otherwise stated.\n   o  FirstTLVOffset: defines the location of the
      first TLV, in octets,\n      starting from the end of the FirstTLVOffset field.\n
      \  o  TLVs: one or more TLV fields.  The last TLV field is always an End\n      TLV.\n
      \  For further details about the OAM packet format, including the format\n   of
      TLVs, see [TRILL-FM].\n"
    title: 6.1.  TRILL OAM Encapsulation
  - contents:
    - '6.2.  Loss Measurement Packet Formats

      '
    - contents:
      - "6.2.1.  Counter Format\n   Loss Measurement packets use a 32-bit packet counter
        field.  When a\n   counter is incremented beyond its maximal value, 0xFFFFFFFF,
        it wraps\n   around back to 0.\n"
      title: 6.2.1.  Counter Format
    - contents:
      - "6.2.2.  1SL Packet Format\n       0                   1                   2
        \                  3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2
        3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |MD-L | Ver (0) | OpCode        |  Flags (0)    |FirstTLVOffset |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |        Sender MEP ID          |         Reserved (0)          |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |                           Test ID                             |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |                          Counter TX                           |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |                         Reserved (0)                          |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |                                                               |\n
        \     .         TLVs                                                  .\n
        \     |                                                               |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \                       Figure 8: 1SL Packet Format\n   For fields not listed
        below, see Section 6.1.\n   o  OpCode: see Section 6.4.\n   o  FirstTLVOffset:
        defines the location of the first TLV, in octets,\n      starting from the
        end of the FirstTLVOffset field.  The value of\n      this field MUST be 16
        in 1SL packets.\n   o  Sender MEP ID: the MEP ID of the MEP that initiated
        the 1SL.\n   o  Reserved (0): set to 0 by the sender and ignored by the receiver.\n
        \  o  Test ID: a 32-bit unique test identifier.\n   o  Counter TX: the value
        of the sender's transmission counter,\n      including this packet, at the
        time of transmission.\n"
      title: 6.2.2.  1SL Packet Format
    - contents:
      - "6.2.3.  SLM Packet Format\n       0                   1                   2
        \                  3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2
        3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |MD-L | Ver (0) | OpCode        |  Flags (0)    |FirstTLVOffset |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |        Sender MEP ID          | Reserved for Reflector MEP ID |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |                           Test ID                             |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |                          Counter TX                           |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |                Reserved for SLR: Counter TRX (0)              |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |                                                               |\n
        \     .         TLVs                                                  .\n
        \     |                                                               |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \                       Figure 9: SLM Packet Format\n   For fields not listed
        below, see Section 6.1.\n   o  OpCode: see Section 6.4.\n   o  FirstTLVOffset:
        defines the location of the first TLV, in octets,\n      starting from the
        end of the FirstTLVOffset field.  The value of\n      this field MUST be 16
        in SLM packets.\n   o  Sender MEP ID: the MEP ID of the MEP that initiated
        this packet.\n   o  Reserved for Reflector MEP ID: this field is reserved
        for the\n      reflector's MEP ID, to be added in the SLR.\n   o  Test ID:
        a 32-bit unique test identifier.\n   o  Counter TX: the value of the sender's
        transmission counter,\n      including this packet, at the time of transmission.\n
        \  o  Reserved for SLR: this field is reserved for the SLR corresponding\n
        \     to this packet.  The reflector uses this field in the SLR for\n      carrying
        TRX, the value of its reception counter.\n"
      title: 6.2.3.  SLM Packet Format
    - contents:
      - "6.2.4.  SLR Packet Format\n       0                   1                   2
        \                  3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2
        3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |MD-L | Ver (0) | OpCode        |  Flags (0)    |FirstTLVOffset |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |        Sender MEP ID          |       Reflector MEP ID        |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |                           Test ID                             |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |                          Counter TX                           |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |                          Counter TRX                          |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |                                                               |\n
        \     .         TLVs                                                  .\n
        \     |                                                               |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \                       Figure 10: SLR Packet Format\n   For fields not listed
        below, see Section 6.1.\n   o  OpCode: see Section 6.4.\n   o  FirstTLVOffset:
        defines the location of the first TLV, in octets,\n      starting from the
        end of the FirstTLVOffset field.  The value of\n      this field MUST be 16
        in SLR packets.\n   o  Sender MEP ID: the MEP ID of the MEP that initiated
        the SLM that\n      this SLR replies to.\n   o  Reflector MEP ID: the MEP
        ID of the MEP that transmits this SLR\n      message.\n   o  Test ID: a 32-bit
        unique test identifier, copied from the\n      corresponding SLM message.\n
        \  o  Counter TX: the value of the sender's transmission counter at the\n
        \     time of the SLM transmission.\n   o  Counter TRX: the value of the reflector's
        reception counter,\n      including this packet, at the time of reception
        of the\n      corresponding SLM packet.\n"
      title: 6.2.4.  SLR Packet Format
    title: 6.2.  Loss Measurement Packet Formats
  - contents:
    - '6.3.  Delay Measurement Packet Formats

      '
    - contents:
      - "6.3.1.  Timestamp Format\n   The timestamps used in Delay Measurement packets
        are 64 bits long.\n   These timestamps use the 64 least significant bits of
        the IEEE\n   1588-2008 (1588v2) Precision Time Protocol timestamp format\n
        \  [IEEE1588v2].\n   This truncated format consists of a 32-bit seconds field
        followed by\n   a 32-bit nanoseconds field.  This truncated format is also
        used in\n   IEEE 1588v1 [IEEE1588v1], in [Y.1731-2013], and in [MPLS-LM-DM].\n"
      title: 6.3.1.  Timestamp Format
    - contents:
      - "6.3.2.  1DM Packet Format\n       0                   1                   2
        \                  3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2
        3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |MD-L | Ver (1) | OpCode        | Reserved (0)|T|FirstTLVOffset |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |                         Timestamp T1                          |\n
        \     |                                                               |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |           Reserved for 1DM receiving equipment (0)            |\n
        \     |                      (for Timestamp T2)                       |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |                                                               |\n
        \     .         TLVs                                                  .\n
        \     |                                                               |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \                       Figure 11: 1DM Packet Format\n   For fields not listed
        below, see Section 6.1.\n   o  OpCode: see Section 6.4.\n   o  Reserved (0):
        Upper part of Flags field.  Set to 0 by the sender\n      and ignored by the
        receiver.\n   o  T: Type flag.  When this flag is set, it indicates proactive\n
        \     operation; when cleared, it indicates on-demand mode.\n   o  FirstTLVOffset:
        defines the location of the first TLV, in octets,\n      starting from the
        end of the FirstTLVOffset field.  The value of\n      this field MUST be 16
        in 1DM packets.\n   o  Timestamp T1: specifies the time of transmission of
        this packet.\n   o  Reserved for 1DM: this field is reserved for internal
        usage of the\n      1DM receiver.  The receiver can use this field for carrying
        T2,\n      the time of reception of this packet.\n"
      title: 6.3.2.  1DM Packet Format
    - contents:
      - "6.3.3.  DMM Packet Format\n       0                   1                   2
        \                  3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2
        3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |MD-L | Ver (1) | OpCode        | Reserved (0)|T|FirstTLVOffset |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |                         Timestamp T1                          |\n
        \     |                                                               |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |           Reserved for DMM receiving equipment (0)            |\n
        \     |                      (for Timestamp T2)                       |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |                     Reserved for DMR (0)                      |\n
        \     |                      (for Timestamp T3)                       |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |            Reserved for DMR receiving equipment               |\n
        \     |                                                               |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |                                                               |\n
        \     .         TLVs                                                  .\n
        \     |                                                               |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \                       Figure 12: DMM Packet Format\n   For fields not listed
        below, see Section 6.1.\n   o  OpCode: see Section 6.4.\n   o  Reserved (0):
        Upper part of Flags field.  Set to 0 by the sender\n      and ignored by the
        receiver.\n   o  T: Type flag.  When this flag is set, it indicates proactive\n
        \     operation; when cleared, it indicates on-demand mode.\n   o  FirstTLVOffset:
        defines the location of the first TLV, in octets,\n      starting from the
        end of the FirstTLVOffset field.  The value of\n      this field MUST be 32
        in DMM packets.\n   o  Timestamp T1: specifies the time of transmission of
        this packet.\n   o  Reserved for DMM: this field is reserved for internal
        usage of the\n      MEP that receives the DMM (the reflector).  The reflector
        can use\n      this field for carrying T2, the time of reception of this packet.\n
        \  o  Reserved for DMR: two timestamp fields are reserved for the DMR\n      message.
        \ One timestamp field is reserved for T3, the DMR\n      transmission time,
        and the other field is reserved for internal\n      usage of the MEP that
        receives the DMR.\n"
      title: 6.3.3.  DMM Packet Format
    - contents:
      - "6.3.4.  DMR Packet Format\n       0                   1                   2
        \                  3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2
        3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |MD-L | Ver (1) | OpCode        | Reserved (0)|T|FirstTLVOffset |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |                         Timestamp T1                          |\n
        \     |                                                               |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |                         Timestamp T2                          |\n
        \     |                                                               |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |                         Timestamp T3                          |\n
        \     |                                                               |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |            Reserved for DMR receiving equipment               |\n
        \     |                      (for Timestamp T4)                       |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |                                                               |\n
        \     .         TLVs                                                  .\n
        \     |                                                               |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \                       Figure 13: DMR Packet Format\n   For fields not listed
        below, see Section 6.1.\n   o  OpCode: see Section 6.4.\n   o  Reserved (0):
        Upper part of Flags field.  Set to 0 by the sender\n      and ignored by the
        receiver.\n   o  T: Type flag.  When this flag is set, it indicates proactive\n
        \     operation; when cleared, it indicates on-demand mode.\n   o  FirstTLVOffset:
        defines the location of the first TLV, in octets,\n      starting from the
        end of the FirstTLVOffset field.  The value of\n      this field MUST be 32
        in DMR packets.\n   o  Timestamp T1: specifies the time of transmission of
        the DMM packet\n      that this DMR replies to.\n   o  Timestamp T2: specifies
        the time of reception of the DMM packet\n      that this DMR replies to.\n
        \  o  Timestamp T3: specifies the time of transmission of this DMR\n      packet.\n
        \  o  Reserved for DMR: this field is reserved for internal usage of the\n
        \     MEP that receives the DMR (the sender).  The sender can use this\n      field
        for carrying T4, the time of reception of this packet.\n"
      title: 6.3.4.  DMR Packet Format
    title: 6.3.  Delay Measurement Packet Formats
  - contents:
    - "6.4.  OpCode Values\n   As the OAM packets specified herein conform to [Y.1731-2013],
      the\n   same OpCodes are used:\n      OpCode   OAM packet\n      value    type\n
      \     ------   ----------\n      45       1DM\n      46       DMR\n      47
      \      DMM\n      53       1SL\n      54       SLR\n      55       SLM\n   These
      OpCodes are from the range of values that has been allocated by\n   IEEE 802.1
      [802.1Q] for control by ITU-T.\n"
    title: 6.4.  OpCode Values
  title: 6.  Packet Formats
- contents:
  - "7.  Performance Monitoring Process\n   The Performance Monitoring process is
    made up of a number of\n   Performance Monitoring instances, known as PM Sessions.
    \ A PM session\n   can be initiated between two MEPs on a specific flow and be
    defined\n   as either a Loss Measurement session or Delay Measurement session.\n
    \  The Loss Measurement session can be used to determine the performance\n   metrics
    Frame Loss Ratio, availability, and resiliency.  The Delay\n   Measurement session
    can be used to determine the performance metrics\n   Frame Delay, Inter-Frame
    Delay Variation, Frame Delay Range, and Mean\n   Frame Delay.\n   The PM session
    is defined by the specific PM function (PM tool) being\n   run and also by the
    Start Time, Stop Time, Message Period,\n   Measurement Interval, and Repetition
    Time.  These terms are defined\n   as follows:\n   o  Start Time - the time that
    the PM session begins.\n   o  Stop Time - the time that the measurement ends.\n
    \  o  Message Period - the message transmission frequency (the time\n      between
    message transmissions).\n   o  Measurement Interval - the time period over which
    measurements are\n      gathered and then summarized.  The Measurement Interval
    can align\n      with the PM Session duration, but it doesn't need to.  PM messages\n
    \     are only transmitted during a PM Session.\n   o  Repetition Time - the time
    between start times of the Measurement\n      Intervals.\n          Measurement
    Interval     Measurement Interval\n          (Completed, Historic)    (In Process,
    Current)\n      |                         |\n      |                         |\n
    \      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     ^                 ^ ^                                         ^\n      |
    \                | |                                         |\n    Start Time
    \         Message                               Stop Time\n   (service enabled)
    \   Period                        (Service disabled)\n         Figure 14: Relationship
    between Different Timing Parameters\n"
  title: 7.  Performance Monitoring Process
- contents:
  - "8.  Security Considerations\n   The security considerations of TRILL OAM are
    discussed in [OAM-REQ],\n   [OAM-FRAMEWK], and [TRILL-FM].  General TRILL security
    considerations\n   are discussed in [TRILL].\n   As discussed in [OAM-Over], an
    attack on a PM protocol can falsely\n   indicate nonexistent performance issues
    or prevent the detection of\n   actual ones, consequently resulting in DoS (Denial
    of Service).\n   Furthermore, synthetic PM messages can be used maliciously as
    a means\n   to implement DoS attacks on RBridges.  Another security aspect is\n
    \  network reconnaissance; by passively eavesdropping on PM messages, an\n   attacker
    can gather information that can be used maliciously to\n   attack the network.\n
    \  As in [TRILL-FM], TRILL PM OAM messages MAY include the OAM\n   Authentication
    TLV.  It should be noted that an Authentication TLV\n   requires a cryptographic
    algorithm, which may have performance\n   implications on the RBridges that take
    part in the protocol; thus,\n   they may, in some cases, affect the measurement
    results.  Based on a\n   system-specific threat assessment, the benefits of the
    security TLV\n   must be weighed against the potential measurement inaccuracy
    it may\n   inflict, and based on this trade-off, operators should make a\n   decision
    on whether or not to use authentication.\n"
  title: 8.  Security Considerations
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [KEYWORDS]    Bradner, S., \"Key words for use
      in RFCs to Indicate\n                 Requirement Levels\", BCP 14, RFC 2119,
      March 1997,\n                 <http://www.rfc-editor.org/info/rfc2119>.\n   [TRILL]
      \      Perlman, R., Eastlake 3rd, D., Dutt, D., Gai, S., and\n                 A.
      Ghanwani, \"Routing Bridges (RBridges): Base Protocol\n                 Specification\",
      RFC 6325, July 2011,\n                 <http://www.rfc-editor.org/info/rfc6325>.\n
      \  [FGL]         Eastlake 3rd, D., Zhang, M., Agarwal, P., Perlman, R.,\n                 and
      D. Dutt, \"Transparent Interconnection of Lots of\n                 Links (TRILL):
      Fine-Grained Labeling\", RFC 7172, May\n                 2014, <http://www.rfc-editor.org/info/rfc7172>.\n
      \  [TRILL-FM]    Senevirathne, T., Finn, N., Salam, S., Kumar, D.,\n                 Eastlake
      3rd, D., Aldrin, S., and Y. Li, \"Transparent\n                 Interconnection
      of Lots of Links (TRILL): Fault\n                 Management\", RFC 7455, March
      2015,\n                 <http://www.rfc-editor.org/info/rfc7455>.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2. Informative References\n   [OAM-REQ]     Senevirathne, T., Bond, D., Aldrin,
      S., Li, Y., and R.\n                 Watve, \"Requirements for Operations, Administration,\n
      \                and Maintenance (OAM) in Transparent Interconnection of\n                 Lots
      of Links (TRILL)\", RFC 6905, March 2013,\n                 <http://www.rfc-editor.org/info/rfc6905>.\n
      \  [OAM-FRAMEWK] Salam, S., Senevirathne, T., Aldrin, S., and D.\n                 Eastlake
      3rd, \"Transparent Interconnection of Lots of\n                 Links (TRILL)
      Operations, Administration, and\n                 Maintenance (OAM) Framework\",
      RFC 7174, May 2014,\n                 <http://www.rfc-editor.org/info/rfc7174>.\n
      \  [Y.1731-2013] ITU-T, \"OAM functions and mechanisms for Ethernet based\n
      \                Networks\", ITU-T Recommendation G.8013/Y.1731, November\n
      \                2013.\n   [802.1Q]      IEEE, \"IEEE Standard for Local and
      metropolitan area\n                 networks -- Bridges and Bridged Networks\",
      IEEE Std\n                 802.1Q, December 2014.\n   [IEEE1588v1]  IEEE, \"IEEE
      Standard for a Precision Clock\n                 Synchronization Protocol for
      Networked Measurement and\n                 Control Systems Version 1\", IEEE
      Standard 1588, 2002.\n   [IEEE1588v2]  IEEE, \"IEEE Standard for a Precision
      Clock\n                 Synchronization Protocol for Networked Measurement and\n
      \                Control Systems Version 2\", IEEE Standard 1588, 2008.\n   [MPLS-LM-DM]
      \ Frost, D. and S. Bryant, \"Packet Loss and Delay\n                 Measurement
      for MPLS Networks\", RFC 6374, September\n                 2011, <http://www.rfc-editor.org/info/rfc6374>.\n
      \  [OAM]         Andersson, L., van Helvoort, H., Bonica, R., Romascanu,\n                 D.,
      and S. Mansfield, \"Guidelines for the Use of the\n                 \"OAM\"
      Acronym in the IETF\", BCP 161, RFC 6291, June\n                 2011, <http://www.rfc-editor.org/info/rfc6291>.\n
      \  [IPPM-1DM]    Almes, G., Kalidindi, S., and M. Zekauskas, \"A One-way\n                 Delay
      Metric for IPPM\", RFC 2679, September 1999,\n                 <http://www.rfc-editor.org/info/rfc2679>.\n
      \  [IPPM-2DM]    Almes, G., Kalidindi, S., and M. Zekauskas, \"A Round-\n                 trip
      Delay Metric for IPPM\", RFC 2681, September 1999,\n                 <http://www.rfc-editor.org/info/rfc2681>.\n
      \  [IPPM-Loss]   Almes, G., Kalidindi, S., and M. Zekauskas, \"A One-way\n                 Packet
      Loss Metric for IPPM\", RFC 2680, September 1999,\n                 <http://www.rfc-editor.org/info/rfc2680>.\n
      \  [OAM-Over]    Mizrahi, T., Sprecher, N., Bellagamba, E., and Y.\n                 Weingarten,
      \"An Overview of Operations, Administration,\n                 and Maintenance
      (OAM) Tools\", RFC 7276, June 2014,\n                 <http://www.rfc-editor.org/info/rfc7276>.\n"
    title: 9.2. Informative References
  title: 9.  References
- contents:
  - "Acknowledgments\n   The authors gratefully acknowledge Adrian Farrel, Alexey
    Melnikov,\n   Jan Novak, Carlos Pignataro, Gagan Mohan Goel, Pete Resnick, and\n
    \  Prabhu Raj for their helpful comments.\n"
  title: Acknowledgments
- contents:
  - "Authors' Addresses\n   Tal Mizrahi\n   Marvell\n   6 Hamada St.\n   Yokneam,
    20692\n   Israel\n   EMail: talmi@marvell.com\n   Tissa Senevirathne\n   Cisco\n
    \  375 East Tasman Drive\n   San Jose, CA 95134\n   United States\n   EMail: tsenevir@cisco.com\n
    \  Samer Salam\n   Cisco\n   595 Burrard Street, Suite 2123\n   Vancouver, BC
    V7X 1J1\n   Canada\n   EMail: ssalam@cisco.com\n   Deepak Kumar\n   Cisco\n   510
    McCarthy Blvd,\n   Milpitas, CA 95035\n   United States\n   Phone : +1 408-853-9760\n
    \  EMail: dekumar@cisco.com\n   Donald Eastlake 3rd\n   Huawei Technologies\n
    \  155 Beaver Street\n   Milford, MA 01757\n   United States\n   Phone: +1-508-333-2270\n
    \  EMail: d3e3e3@gmail.com\n"
  title: Authors' Addresses
