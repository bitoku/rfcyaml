- title: __initial_text__
  contents:
  - "                   Internet Printing Protocol (IPP):\n                   The\
    \ 'collection' attribute syntax\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2002).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies an OPTIONAL attribute syntax called\n  \
    \ 'collection' for use with the Internet Printing Protocol (IPP/1.0 and\n   IPP/1.1).\
    \  A 'collection' is a container holding one or more named\n   values, which are\
    \ called \"member\" attributes.  A collection allows\n   data to be grouped like\
    \ a PostScript dictionary or a Java Map.  This\n   document also specifies the\
    \ conformance requirements for a definition\n   document that defines a collection\
    \ attribute.  Finally, this document\n   gives some illustrative example collection\
    \ attribute definitions that\n   are not intended as actual attribute specifications.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   3.2 Nested Collections.............................................9\n\
    \   4 Collection Attributes as Attributes in Operations................9\n   4.1\
    \ General Rules..................................................9\n   4.2 Unsupported\
    \ Values.............................................9\n   5 Example definition\
    \ of a collection attribute.....................9\n   5.1 media-col (collection)........................................10\n\
    \   5.1.1 media-color (type3 keyword | name(MAX)......................10\n   5.1.2\
    \ media-size (collection).....................................11\n   5.2 media-col-default\
    \ (collection)................................11\n   5.3 media-col-ready (1setOf\
    \ collection)...........................12\n   5.4 media-col-supported (1setOf\
    \ type2 keyword)....................12\n   6 A Second Example Definition Of A\
    \ Collection Attribute...........12\n   7 Encoding........................................................13\n\
    \   7.1 Additional tags defined for representing a collection\n       attribute\
    \ value...............................................13\n   7.2 Example encoding:\
    \ \"media-col\" (collection)....................14\n   8 Legacy issues...................................................20\n\
    \   9 IANA Considerations.............................................20\n   10\
    \ Internationalization Considerations............................20\n   11 Security\
    \ Considerations........................................21\n   12 References.....................................................21\n\
    \   Appendix A: Encoding Example of a Simple Collection (Informative).22\n   Appendix\
    \ B: Encoding Example of 1setOf Collection (Informative)...25\n   Appendix C:\
    \ Encoding Example of Collection containing 1setOf XXX\n               attribute\
    \ (Informative)...............................31\n   Appendix D: Description of\
    \ the Base IPP Documents (Informative)...35\n   Authors' Addresses................................................36\n\
    \   Full Copyright Statement..........................................38\n"
- title: Table of Tables
  contents:
  - "Table of Tables\n   Table 1 - \"media-col\" member attributes...........................10\n\
    \   Table 2 - \"media-size\" collection member attributes...............11\n \
    \  Table 3 - Tags defined for encoding the 'collection' attribute\n          \
    \   syntax .................................................13\n   Table 4 - Overview\
    \ Encoding of \"media-col\" collection.............15\n   Table 5 - Example Encoding\
    \ of \"media-col\" collection..............16\n   Table 6 - Overview Encoding\
    \ of simple collection..................22\n   Table 7 - Example Encoding of simple\
    \ collection...................22\n   Table 8 - Overview Encoding of 1setOf collection..................25\n\
    \   Table 9 - Example Encoding of 1setOf collection...................26\n   Table\
    \ 10 - Overview Encoding of collection with 1setOf value......31\n   Table 11\
    \ - Example Encoding of collection with 1setOf value.......32\n"
- title: 1 Introduction
  contents:
  - "1 Introduction\n   This document is an OPTIONAL extension to IPP/1.0 [RFC2565,\
    \ RFC2566]\n   and IPP/1.1 [RFC2911, RFC2910].  For a description of the base\
    \ IPP\n   documents see Appendix D.\n"
- title: 1.1 Problem Statement
  contents:
  - "1.1 Problem Statement\n   The IPP Model and Semantics [RFC2911] supports most\
    \ of the common\n   data structures that are available in programming languages.\
    \  It\n   lacks a mechanism for grouping several attributes of different types.\n\
    \   The Java language uses the Map to solve this problem and PostScript\n   has\
    \ a dictionary.  The new mechanism for grouping attributes together\n   (called\
    \ 'collection' mechanism) must allow for optional members and\n   the subsequent\
    \ addition of new members.\n   The 'collection' mechanism must be encoded in a\
    \ manner consistent\n   with existing 1.0 and 1.1 parsing rules (see [RFC2910]).\
    \  Current 1.0\n   and 1.1 parsers that don't support the 'collection' mechanism\
    \ must\n   not confuse collections or parts of a collection they receive with\n\
    \   other attributes.\n"
- title: 1.2 Solution
  contents:
  - "1.2 Solution\n   The new mechanism is a new IPP attribute syntax called a\n \
    \  'collection'.  As such, each collection value is a value of an\n   attribute\
    \ whose attribute syntax type is defined to be a\n   'collection'.  Such an attribute\
    \ is called a collection attribute.\n   The name of the collection attribute serves\
    \ to identify the\n   collection value in an operation request or response, as\
    \ with any\n   attribute value.\n   The 'collection' attribute syntax is a container\
    \ holding one or more\n   named values (i.e., attributes), which are called member\
    \ attributes.\n   Each collection attribute definition document lists the mandatory\
    \ and\n   optional member attributes of each collection value.  A collection\n\
    \   value is similar to an IPP attribute group in a request or a\n   response,\
    \ such as the operation attributes group.  They both consist\n   of a set of attributes.\n\
    \   As with any attribute syntax, the document that defines a collection\n   attribute\
    \ specifies whether the attribute is single-valued\n   (collection) or multi-valued\
    \ (1setOf collection).  If the attribute\n   is multi-valued (1setOf collection),\
    \ each collection value MUST be a\n   separate instance of a single definition\
    \ of a collection, i.e., it\n   MUST have the same member attributes except for\
    \ OPTIONAL member\n   attributes.  If we view each collection definition as a\
    \ separate\n   syntax type, this rule continues the IPP/1.1 notion that each\n\
    \   attribute has a single type or pattern (e.g., \"keyword | name\" is a\n  \
    \ pattern).  Without this rule, the supported values would be more\n   difficult\
    \ to describe and the mechanism defined in item 4 of section\n   3.1 would not\
    \ be sufficient.\n   The name of each member attribute MUST be unique for a collection\n\
    \   attribute, but MAY be the same as the name of a member attribute in\n   another\
    \ collection attribute and/or MAY be the same as the name of an\n   attribute\
    \ that is not a member of a collection.  The rules for naming\n   member attributes\
    \ are given in section 3.1.\n   Each member attribute can have any attribute syntax\
    \ type, including\n   'collection', and can be either single-valued or multi-valued.\
    \  The\n   length of a collection value is not limited.  However, the length of\n\
    \   each member attribute MUST NOT exceed the limit of its attribute\n   syntax.\n\
    \   The member attributes in a collection MAY be in any order in a\n   request\
    \ or response.  When a client sends a collection attribute to\n   the Printer,\
    \ the order that the Printer stores the member attributes\n   of the collection\
    \ value and the order returned in a response MAY be\n   different from the order\
    \ sent by the client.\n   A collection value MUST NOT contain two or more member\
    \ attributes\n   with the same attribute name.  Such a collection is mal-formed.\n\
    \   Clients MUST NOT submit such malformed requests and Printers MUST NOT\n  \
    \ return such malformed responses.  If such a malformed request is\n   submitted\
    \ to a Printer, the Printer MUST (depending on\n   implementation) either (1)\
    \ reject the request with the 'client-\n   error-bad-request' status code (see\
    \ [RFC2911] section 13.1.4.1), or\n   (2) accept the request and use only one\
    \ of each duplicate member\n   attributes.\n"
- title: 2 Terminology
  contents:
  - "2 Terminology\n   This section defines terminology used throughout this document.\n"
- title: 2.1 Conformance Terminology
  contents:
  - "2.1 Conformance Terminology\n   Capitalized terms, such as MUST, MUST NOT, REQUIRED,\
    \ SHOULD, SHOULD\n   NOT, MAY, NEED NOT, and OPTIONAL, have special meaning relating\
    \ to\n   conformance as defined in BCP 14, RFC 2119 [RFC2119] and [RFC2911],\n\
    \   section 12.1.  If an implementation supports the extension defined in\n  \
    \ this document, then these terms apply; otherwise, they do not.  These\n   terms\
    \ define conformance to this document only; they do not affect\n   conformance\
    \ to other documents, unless explicitly stated otherwise.\n"
- title: 2.2 Other terminology
  contents:
  - "2.2 Other terminology\n   This document uses terms such as Job object (or Job),\
    \ IPP Printer\n   object (or Printer), \"operation\", \"request\", response\"\
    , \"attributes\",\n   \"keywords\", and \"support\".  These terms have special\
    \ meaning and are\n   defined in the model terminology [RFC2911] section 12.2.\
    \  The\n   following additional terms are introduced in this document:\n     \
    \ collection: an attribute syntax in which each attribute value is a\n       \
    \  set of attributes, called member attributes.\n      member attribute: an attribute\
    \ that is defined to be used as one\n         of the attributes in a collection.\n\
    \      collection attribute: an attribute whose definition specifies the\n   \
    \      'collection' attribute syntax and each of the member attributes\n     \
    \    that MAY occur in a collection attribute value.\n"
- title: 3 Definition of a Collection Attribute
  contents:
  - "3 Definition of a Collection Attribute\n   This section describes the requirements\
    \ for any collection attribute\n   definition.\n"
- title: 3.1 Information to Include
  contents:
  - "3.1 Information to Include\n   When a specification document defines an \"xxx\"\
    \ collection attribute,\n   i.e., an attribute whose attribute syntax type is\
    \ 'collection' or\n   '1setOf collection'; the definition document MUST include\
    \ the\n   following aspects of the attribute semantics.  Suppose the \"xxx\"\n\
    \   collection attribute contains N member attributes named  \"aaa1\",\n   \"\
    aaa2\", ..., \"aaaN\" (\"aaaI\" represents any one of these N member\n   attributes).\n\
    \   1. The name of the collection attribute MUST be specified  (e.g.,\n      \"\
    xxx\").  The selection of the name \"xxx\" MUST follow the same\n      rules for\
    \ uniqueness as for attributes of any other syntax type,\n      (as defined by\
    \ IPP/1.1) unless \"xxx\" is a member attribute of\n      another collection.\
    \  Then the selection of the name \"xxx\" MUST\n      follow the rules for uniqueness\
    \ defined in item 5a) of this list.\n   2. The collection attribute syntax MUST\
    \ be of type 'collection' or\n      '1setOf collection'.\n   3. The context of\
    \ the collection attribute MUST be specified, i.e.,\n      whether the attribute\
    \ is an operation attribute, a Job Template\n      attribute, a Job Description\
    \ attribute, a Printer Description\n      attribute, a member attribute of a particular\
    \ collection\n      attribute, etc.\n   4. An \"xxx-supported\" attribute MUST\
    \ be specified and it has one of\n      the following two forms:\n      a) \"\
    xxx-supported\" is a \"1setOf collection\", which enumerates all\n         of\
    \ the supported collection values of \"xxx\".  If a collection\n         of this\
    \ form contains a nested collection, it MUST be of the\n         same form.\n\
    \         For example, \"media-size-supported\" might have the values {{x-\n \
    \        dimension:210, y-dimension:297},{x-dimension:297, y-\n         dimension:420}}\
    \ to show that it supports two values of \"media\n         size\": A4 (210x297)\
    \ and A3 (297x420).  It does not support\n         other combinations of \"x-dimension\"\
    \ and \"y-dimension\" member\n         attributes, such as 210x420 or 297x297,\
    \ and it does not support\n         non-enumerated values, such as 420x595.\n\
    \      b) \"xxx-supported\" is a \"1setOf type2 keyword\", which enumerates\n\
    \         the names of all of the member attributes of \"xxx\": \"aaa1\",\n  \
    \       \"aaa2\", ..., \"aaaN\".  If a collection of this form contains a\n  \
    \       nested collection, it MAY be of either form.  See item 5f)\n         below\
    \ for details on supported values of member attributes.\n         For example,\
    \ \"media-col-supported\" might have the keyword\n         values: \"media-size\"\
    \ and \"media-color\".\n   5. The member attributes MUST be defined.  For each\
    \ member attribute,\n      the definition document MUST provide the following\
    \ information:\n      a) The member attribute's name (e.g., \"aaa\") MUST be unique\
    \ within\n         the collection being defined and MUST either:\n           i)\
    \ reuse the attribute name of another attribute (that is\n              unique\
    \ across the entire IPP attribute name space) and\n              have the same\
    \ syntax and semantics as the reused attribute\n              (if the condition\
    \ of item 4b) above is met).  For example,\n              a member attribute definition\
    \ could reuse the IPP/1.1\n              \"media\" attribute.\n          ii) potentially\
    \ occur elsewhere in the entire IPP attribute\n              name space.  (if\
    \ the condition of item 4a) above is met).\n              For example, a member\
    \ attribute could be \"x-dimension\",\n              which could potentially occur\
    \ in another collection or as\n              an attribute outside of a collection.\n\
    \         iii) be unique across the entire IPP attribute name space (if\n    \
    \          the condition of item 4b) above is met).  For example, a\n        \
    \      member attribute could be \"media-color\" which must be\n             \
    \ unique across the entire IPP attribute name space.\n      b) Whether the member\
    \ attribute is REQUIRED or OPTIONAL for the\n         Printer to support.\n  \
    \    c) Whether the member attribute is REQUIRED or OPTIONAL for the\n       \
    \  client to supply in a request.\n      d) The member attribute's syntax type,\
    \ which can be any attribute\n         syntax, including '1setOf X', 'collection',\
    \ and '1setOf\n         collection'.  If this attribute name reuses the name of\
    \ another\n         attribute (case of item a1 above), it MUST have the same\n\
    \         attribute syntax, including cardinality (whether or not\n         1setOf).\n\
    \      e) The semantics of the \"aaa\" member attribute.  The semantic\n     \
    \    definition MUST include a description of any constraint or\n         boundary\
    \ conditions the member attribute places on the\n         associated attribute,\
    \ especially if the attribute reuses the\n         name of another attribute (case\
    \ of item a1 above).\n      f) The supported values for each \"aaaI\" member attribute\
    \ (of the\n         member attributes  \"aaa1\", \"aaa2\", ..., \"aaaN\") is specified\
    \ by\n         one of two mechanisms.\n           i) If \"xxx-supported\" is a\
    \ \"1setOf collection\" (see item 4a)\n              above), the value for each\
    \ \"aaaI\" is specified in each\n              collection value of \"xxx-supported\"\
    , in the context of\n              other member attributes.  That is, \"xxx-supported\"\
    \n              enumerates all supported values of \"xxx\".\n          ii) If\
    \ the value of \"xxx-supported\" is a \"1setOf type2\n              keyword\"\
    \ (see item 4b) above), the supported values of\n              \"aaaI\" are the\
    \ values specified by either i) the \"aaaI-\n              supported\" attribute\
    \ or ii) the definition of the member\n              attribute \"aaaI\" within\
    \ the document defining the \"xxx\"\n              attribute.  The values of each\
    \ member attribute \"aaaI\" are\n              specified independently of other\
    \ member attributes, though\n              a Printer is not required to support\
    \ all combinations of\n              supported values.\n              For example,\
    \ \"media-col-supported\" might have the keyword\n              values: \"media-size\"\
    \ and \"media-color\".  Using the first\n              method for defining supported\
    \ values (an \"aaaI-supported\"\n              attribute), the collection values\
    \ of \"media-col\" are\n              combinations of values of \"media-size-supported\"\
    \ and\n              \"media-color-supported\".  If \"media-size-supported\" has\n\
    \              the values of '210x297' and '297x420' and \"media-color-\n    \
    \          supported\" has the values of 'white' and 'pink', the\n           \
    \   Printer might support only the combinations 'white-\n              210x297',\
    \ 'pink-210x297' and 'white-297x420', and not\n              'pink-297x420'.\n\
    \              If a collection contains a member \"aaaI\", whose syntax\n    \
    \          type is \"text\", the supported values would probably be\n        \
    \      defined by the definition of \"xxx\" rather than by the\n             \
    \ attribute \"aaaI-supported\".\n      g) the default value of each \"aaaI\" member\
    \ attribute if it is\n         OPTIONAL for a client to supply the \"aaa\" member\
    \ attribute in a\n         request.  The default value is specified by the attribute's\n\
    \         definition within a document and MUST be one of the following:\n   \
    \        i) a fixed default\n          ii) a mechanism by which the Printer determines\
    \ default\n         iii) an indefinite default that is left to the implementation.\n\
    \          iv) an attribute that the Printer uses to determine the\n         \
    \     default\n   6. The default value of \"xxx\", if a client does not supply\
    \ it.  The\n      default value is specified by the attribute's definition within\
    \ a\n      document and MUST be one of the following:\n      a) a fixed default\n\
    \      b) a mechanism by which the Printer determines default\n      c) an indefinite\
    \ default that is left to the implementation\n      d) a Printer attribute \"\
    xxx-default\" which is a collection with\n         the same member attributes\
    \ as \"xxx\".  If optional member\n         attributes are absent, the Printer\
    \ uses the defaulting rules of\n         item 5g) above.\n   7. The \"xxx-ready\
    \ (1setOf collection)\" attribute, if human\n      intervention is required to\
    \ make many of the supported values\n      available.  For example, \"media-col\"\
    \ is an attribute which has a\n      \"ready\" attribute.  Most attributes do\
    \ not have a \"ready\"\n      attribute.\n"
- title: 3.2 Nested Collections
  contents:
  - "3.2 Nested Collections\n   A member attribute may have a syntax type of 'collection'\
    \ or '1setOf\n   collection', in which case it is called a nested collection\n\
    \   attribute.  The rules for a nested collection attribute are the same\n   as\
    \ for a collection attribute as specified in section 3.1.\n"
- title: 4 Collection Attributes as Attributes in Operations
  contents:
  - '4 Collection Attributes as Attributes in Operations

    '
- title: 4.1 General Rules
  contents:
  - "4.1 General Rules\n   A collection value is like any other IPP/1.1 value, except\
    \ that it is\n   structured.  The rules for attributes with collection values\
    \ are the\n   same as for attributes of any other syntax type (see IPP/1.1), be\n\
    \   they in any group of a request of a response.\n"
- title: 4.2 Unsupported Values
  contents:
  - "4.2 Unsupported Values\n   The rules for returning an unsupported collection\
    \ attribute are an\n   extension to the current rules:\n   1. If the entire collection\
    \ attribute is unsupported, then the\n      Printer returns just the collection\
    \ attribute name with the\n      'unsupported' out-of-band value (see the beginning\
    \ of [RFC2911]\n      section 4.1) in the Unsupported Attributes Group.\n   2.\
    \ If a collection contains unrecognized, unsupported member\n      attributes\
    \ and/or conflicting values, the attribute returned in\n      the Unsupported\
    \ Group is a collection containing the unrecognized,\n      unsupported member\
    \ attributes, and/or conflicting values.  The\n      unrecognized member attributes\
    \ have an out-of-band value of\n      'unsupported' (see the beginning of [RFC2911]\
    \ section 4.1).  The\n      unsupported member attributes and conflicting values\
    \ have their\n      unsupported or conflicting values.\n"
- title: 5 Example definition of a collection attribute
  contents:
  - "5 Example definition of a collection attribute\n   In some printing environments,\
    \ it is desirable to allow the client to\n   select the media by its properties,\
    \ e.g., weight, color, size, etc.,\n   instead of by name.  In IPP/1.1 (see [RFC2911]),\
    \ the \"media (type3\n   keyword | name) Job Template attribute allows selection\
    \ by name.  It\n   is tempting to extend the \"media\" attribute syntax to include\n\
    \   \"collection\", but then existing clients could not understand default\n \
    \  or supported media values that use the collection value.  To preserve\n   interoperability,\
    \ a new attribute MUST BE added, e.g., \"media-col\n   (collection)\".  The following\
    \ subsections contain a sample definition\n   of a simplified \"media-col\" attribute.\
    \  The definition follows the\n   rules in section 3.\n   All of the example attribute\
    \ definitions in this document are\n   illustrative examples, rather than actual\
    \ definitions.  These\n   examples are intended to illustrate how to define collection\n\
    \   attributes.  Other documents MUST define collection attributes for\n   use\
    \ in actual interchange.  Such definitions may be very similar to\n   the examples\
    \ in this document, since we attempted to pick useful\n   examples.\n   Note:\
    \ we picked the name \"media-col\" because the name \"media\" is\n   already in\
    \ use.  Ordinarily the collection attribute would have a\n   name like any other\
    \ attribute and would not end in \"col\".\n   The member attributes of \"media-col\"\
    \ attribute (\"media-color (type 3\n   keyword)\" and \"media-size (collection)\"\
    ) both follow the naming rules\n   of item 4a3 of section 3, i.e., the names are\
    \ unique across the\n   entire IPP attribute name space.  The member attributes\
    \ of the\n   \"media-size (collection)\" member attribute (\"x-dimension\n   (integer(0:MAX))\"\
    \ and \"y-dimension (integer(0:MAX))\") both follow the\n   naming rules of item\
    \ 4a2 of section 3, i.e., they potentially occur\n   elsewhere in the IPP attribute\
    \ name space.\n"
- title: 5.1 media-col (collection)
  contents:
  - "5.1 media-col (collection)\n   The \"media-col\" (collection) attribute augments\
    \ the IPP/1.1 [RFC2911]\n   \"media\" attribute.  This collection attribute enables\
    \ a client end\n   user to submit a list of media characteristics to the Printer.\
    \  When\n   the client specifies media using the \"media-col\" collection\n  \
    \ attribute, the Printer object MUST match the requested media exactly.\n   The\
    \ 'collection' consists of the following member attributes:\n                \
    \  Table 1 - \"media-col\" member attributes\n        Attribute name  attribute\
    \ syntax             request  Printer\n                                      \
    \                        Support\n        media-color     type3 keyword | name\
    \ (MAX)   MAY      MUST\n        media-size      collection                  \
    \ MUST     MUST\n   The definitions for the member attributes is given in the\
    \ following\n   sub-sections:\n"
- title: 5.1.1 media-color (type3 keyword | name(MAX)
  contents:
  - "5.1.1 media-color (type3 keyword | name(MAX)\n   This member attribute identifies\
    \ the color of the media.  Valid\n   values are 'red', 'white' and 'blue'.\n \
    \  The \"media-color-supported\" (1setOf (type3 keyword | name(MAX)))\n   Printer\
    \ attribute identifies the values of this \"media-color\" member\n   attribute\
    \ that the Printer supports, i.e., the colors supported.\n   If the client omits\
    \ this member attribute, the Printer determines the\n   value in an implementation\
    \ dependent manner.\n"
- title: 5.1.2 media-size (collection)
  contents:
  - "5.1.2 media-size (collection)\n   This member attribute identifies the size of\
    \ the media.  The\n   'collection' consists of the member attributes shown in\
    \ Table 2:\n            Table 2 - \"media-size\" collection member attributes\n\
    \        Attribute name    attribute syntax      request   Printer\n         \
    \                                                 Support\n        x-dimension\
    \       integer (0:MAX)       MUST      MUST\n        y-dimension       integer\
    \ (0:MAX)       MUST      MUST\n   The definitions for the member attributes are\
    \ given in the following\n   sub-sections:\n"
- title: 5.1.2.1  x-dimension (integer(0:MAX))
  contents:
  - "5.1.2.1  x-dimension (integer(0:MAX))\n   This attribute identifies the width\
    \ of the media in inch units along\n   the X axis.\n"
- title: 5.1.2.2  y-dimension (integer(0:MAX))
  contents:
  - "5.1.2.2  y-dimension (integer(0:MAX))\n   This attribute identifies the height\
    \ of the media in inch units along\n   the Y axis.\n   The \"media-size-supported\"\
    \ (1setOf collection) Printer attribute\n   identifies the values of this \"media-size\"\
    \ member attribute that the\n   Printer supports, i.e., the size combinations\
    \ supported.  The names\n   of the member attributes are the same as the member\
    \ attributes of the\n   \"media-size\" collection attribute, namely \"x-dimension\"\
    , and \"y-\n   dimension\", since they have the same attribute syntax and the\
    \ same\n   semantics.\n"
- title: 5.2 media-col-default (collection)
  contents:
  - "5.2 media-col-default (collection)\n   The \"media-col-default\" Printer attribute\
    \ specifies the media that\n   the Printer uses, if any, if the client omits the\
    \ \"media-col\" and\n   \"media\".  Job Template attributes in the Job Creation\
    \ operation and\n   the PDL do not include a media specification.  The member\
    \ attributes\n   are defined in Table 1.  A Printer MUST support the same member\n\
    \   attributes for this default collection attribute as it supports for\n   the\
    \ corresponding \"media-col\" Job Template attribute.\n"
- title: 5.3 media-col-ready (1setOf collection)
  contents:
  - "5.3 media-col-ready (1setOf collection)\n   The \"media-col-ready\" Printer attribute\
    \ identifies the media that are\n   available for use without human intervention,\
    \ i.e., the media that\n   are ready to be used without human intervention.  The\
    \ collection\n   value MUST have all of the member attributes that are supported\
    \ in\n   Table 1.\n"
- title: 5.4 media-col-supported (1setOf type2 keyword)
  contents:
  - "5.4 media-col-supported (1setOf type2 keyword)\n   The \"media-col-supported\"\
    \ Printer attribute identifies the keyword\n   names of the member attributes\
    \ supported in the \"media-col\"\n   collection Job Template attribute, i.e.,\
    \ the keyword names of the\n   member attributes in Table 1 that the Printer supports.\n"
- title: 6 A Second Example Definition Of A Collection Attribute
  contents:
  - "6 A Second Example Definition Of A Collection Attribute\n   All of the example\
    \ attribute definitions in this document are\n   illustrative examples, rather\
    \ than actual definitions.  These\n   examples are intended to illustrate how\
    \ to define collection\n   attributes.  Other documents MUST define collection\
    \ attributes for\n   use in actual interchange.  Such definitions may be very\
    \ similar to\n   the examples in this document, since we attempted to pick useful\n\
    \   examples.\n   In some printing environments, it is desirable to allow the\
    \ client to\n   select the media for the job start sheet.  The reason for not\
    \ adding\n   the 'collection' attribute syntax to the existing \"job-sheets\"\
    \ Job\n   Template attribute is the same as for \"media\".  Instead, a new Job\n\
    \   Template attribute is introduced, e.g., \"job-sheet-col (collection)\".\n\
    \   The member attributes of \"job-sheet-col\" attribute (\"job-sheets (type\n\
    \   3 keyword)\" and \"media (type3 keyword | name)\") both follow the\n   naming\
    \ rules of item 4a1 of section 3, i.e., they reuse existing IPP\n   attributes.\
    \  According to the rules, their supported values come from\n   the existing IPP\
    \ attributes: \"job-sheets-supported\" and \"media-\n   supported\".  However,\
    \ their default values do not come from \"job-\n   sheets-default\" and \"media-default\"\
    , respectively.  Rather, the\n   definition of \"job-sheet-col\" says that \"\
    job-sheets (type 3 keyword)\"\n   is required and if \"media (type3 keyword |\
    \ name)\" is absent, the\n   Printer uses the same media as the rest of the job\
    \ uses.\n   If \"job-sheet-col\" attribute was defined to contain the member\n\
    \   attribute \"job-sheet-media (type3 keyword | name)\" instead of \"media\n\
    \   (type3 keyword | name)\", then the definition would also have to\n   specify\
    \ a \"job-sheet-media-supported (1setOf (type3 keyword | name))\"\n   whose values\
    \ would be independent of \"media-supported (1setOf (type3\n   keyword | name))\"\
    \ and would be set separately by a System\n   Administrator.\n   The actual text\
    \ for the definition of the attribute is left as an\n   exercise for the reader.\n"
- title: 7 Encoding
  contents:
  - "7 Encoding\n   This section defines the additional encoding tags used according\
    \ to\n   [RFC2910] and gives an example of their use.  The encoding tags\n   defined\
    \ in this document MUST be used by all collection attributes\n   defined in other\
    \ documents.  However, the example of their use is\n   illustrative only.\n"
- title: 7.1 Additional tags defined for representing a collection attribute
  contents:
  - "7.1 Additional tags defined for representing a collection attribute\n    value\n\
    \   The 'collection' attribute syntax uses the tags defined in Table 3.\n   Table\
    \ 3 - Tags defined for encoding the 'collection' attribute syntax\n        Tag\
    \ name         Tag\n                         value     Meaning\n        begCollection\
    \    0x34      Begin the collection attribute value.\n        endCollection  \
    \  0x37      End the collection attribute value.\n        memberAttrName   0x4A\
    \      The value is the name of the\n                                   collection\
    \ member attribute\n   When encoding a collection attribute \"xxx\" that contains\
    \ an attribute\n   \"aaa\" and is not inside another collection, the encoding\
    \ follows\n   these rules:\n   1. The beginning of the collection is indicated\
    \ with a value tag that\n      MUST be syntax type 'begCollection' (0x34) with\
    \ a name length and\n      Name field that represent the name of the collection\
    \ attribute\n      (\"xxx\") as with any attribute, followed by a value.  The\
    \ Printer\n      MAY ignore the value and its length MAY be 0.  In the future,\n\
    \      however, this field MAY contain useful information, such as the\n     \
    \ collection name (cf. the name of a C struct).\n   2. Each member attribute is\
    \ encoded as a sequence of two or more\n      values that appear to be part of\
    \ a single multi-valued attribute,\n      i.e., 1setOf.  The first value after\
    \ the 'begCollection' value has\n      the attribute syntax, 'memberAttrName'\
    \ (0x4A), and its value holds\n      the name of the first member attribute (e.g.,\
    \ \"aaa\").  The second\n      value holds the first member's attribute value,\
    \ which can be of\n      any attribute syntax, except 'memberAttrName' or 'endCollection'.\n\
    \      If the first member's attribute value is multi-valued, the third\n    \
    \  value holds the second value of the first member's value.\n      Otherwise,\
    \ the third value holds the name of second member\n      attribute (e.g., \"bbb\"\
    ), and its attribute syntax is\n      'memberAttrName'.  In this case, the fourth\
    \ member's value is the\n      value of \"bbb\".\n      Note that the technique\
    \ of encoding a 'collection' as a '1setOf'\n      makes it easy for a Printer\
    \ that doesn't support a particular\n      collection attribute (or the collection\
    \ attribute syntax at all)\n      to simply skip over the entire collection value.\n\
    \   3. The end of the collection is indicated with a value tag that MUST\n   \
    \   be syntax type 'endCollection' (e.g., 0x37) and MAY have a zero\n      name\
    \ length and a zero value length.  In the future, this field\n      MAY contain\
    \ useful information, such as the collection name that\n      matches the one\
    \ in the 'begCollection' .\n   4. It is valid to have a member attribute that\
    \ is itself, a\n      collection attribute, i.e., collections can be nested within\n\
    \      collections.  This is represented by the occurrence of a member\n     \
    \ attribute that is of attribute syntax type 'begCollection'.  Such\n      a collection\
    \ is terminated by a matching 'endCollection'.  The\n      name of such a member\
    \ attribute is in the immediately preceding\n      value, whose syntax type is\
    \ 'memberAttrName'.\n   5. It is valid for a collection attribute to be multi-valued,\
    \ i.e.,\n      have more than one collection value.  If the next attribute\n \
    \     immediately following the 'endCollection' has a zero name length\n     \
    \ and a tag of 'begCollection', then the collection attribute is a\n      multi-valued\
    \ collection, as with any attribute.  This statement\n      applies to collections\
    \ within collections and collections that are\n      not in collections.\n"
- title: '7.2 Example encoding: "media-col" (collection)'
  contents:
  - "7.2 Example encoding: \"media-col\" (collection)\n   The collection specified\
    \ in section 5 is used for the encoding\n   example shown in Table 5.  The example\
    \ also shows nested collections,\n   since the \"media-size\" member attribute\
    \ is a 'collection.  The\n   encoding example represents a blue 4x6-index card\
    \ and takes 216\n   octets.  The Appendices contain more complex examples.\n \
    \  Additional examples have been included in the appendices.\n   The overall structure\
    \ of the two collection values can be pictorially\n   represented as:\n      \"\
    media-col\" =\n        {  \"media-color\" =  'blue';\n           \"media-size\"\
    \ =\n           {    \"x-dimension\" = 6;\n                \"y-dimension\" = 4\n\
    \             }\n        },\n   The full encoding is in table 5.  A simplified\
    \ view of the encoding\n   looks like this:\n           Table 4 - Overview Encoding\
    \ of \"media-col\" collection\n      Tag Value             Name              \
    \    Value\n      begCollection         media-col             \"\"\n      memberAttrName\
    \        \"\"                    media-color\n      keyword               \"\"\
    \                    blue\n      memberAttrName        \"\"                  \
    \  media-size\n      begCollection         \"\"                    \"\"\n    \
    \  memberAttrName        \"\"                    x-dimension\n      integer  \
    \             \"\"                    6\n      memberAttrName        \"\"    \
    \                y-dimension\n      integer               \"\"               \
    \     4\n      endCollection         \"\"                    \"\"\n      endCollection\
    \         \"\"                    \"\"\n           Table 5 - Example Encoding\
    \ of \"media-col\" collection\n      Octets       Symbolic Value  Protocol   comments\n\
    \                                   field\n      0x34         begCollection  \
    \ value-tag  beginning of the \"media-\n                                     \
    \         col\" collection attribute\n      0x0009                       name-\
    \      length of (collection)\n                                   length     attribute\
    \ name\n      media-col    media-col       name       name of (collection)\n \
    \                                             attribute\n      0x0000        \
    \               value-     defined to be 0 for this\n                        \
    \           length     type\n                                              no\
    \ value (since value-\n                                              length was\
    \ 0)\n      0x4A         memberAttrName  value-tag  starts a new member\n    \
    \                                          attribute: \"media-color\"\n      0x0000\
    \                       name-      defined to be 0 for this\n                \
    \                   length     type, so part of 1setOf\n                     \
    \                         no name (since name-length\n                       \
    \                       was 0)\n      0x000B                       value-    \
    \ length of \"media-color\"\n                                   length     keyword\n\
    \      media-color  media-color     value      value is name of 1st\n        \
    \                                      member attribute\n      0x44         keyword\
    \ type    value-tag  keyword type\n      0x0000                       name-  \
    \    0 indicates 1setOf\n                                   length\n         \
    \                                     no name (since name-length\n           \
    \                                   was 0)\n      Octets       Symbolic Value\
    \  Protocol   comments\n                                   field\n      0x0004\
    \                       value-\n                                   length\n  \
    \    blue         blue            value      value of 1st member\n           \
    \                                   attribute\n      0x4A         memberAttrName\
    \  value-tag  starts a new member\n                                          \
    \    attribute: \"media-size\"\n      0x0000                       name-     \
    \ defined to be 0 for this\n                                   length     type,\
    \ so part of 1setOf\n                                              no name (since\
    \ name-length\n                                              was 0)\n      0x000A\
    \                       value-     length of \"media-size\"\n                \
    \                   length     keyword\n      media-size   media-size      value\
    \      Name of 2nd member\n                                              attribute\n\
    \      0x34         begCollection   value-tag  Beginning of the \"media-\n   \
    \                                           size\" collection attribute\n    \
    \                                          which is a sub-collection\n      0x0000\
    \                       name-      0 indicates 1setOf\n                      \
    \             length\n                                              no name (since\
    \ name-length\n                                              was 0)\n      0x0000\
    \                       value-     collection attribute names\n              \
    \                     length     have no value\n                             \
    \                 no value (since value-\n                                   \
    \           length was 0)\n      0x4A         memberAttrName  value-tag  starts\
    \ a new member\n                                              attribute: \"x-dimension\"\
    \n      Octets       Symbolic Value  Protocol   comments\n                   \
    \                field\n      0x0000                       name-      defined\
    \ to be 0 for this\n                                   length     type, so part\
    \ of 1setOf\n                                              no name (since name-length\n\
    \                                              was 0)\n      0x000B          \
    \             value-     length of \"x-dimension\"\n                         \
    \          length     keyword\n      x-dimension  x-dimension     value      name\
    \ of  1st sub-\n                                              collection member\n\
    \                                              attribute\n      0x21         integer\
    \ type    value-tag  attribute type\n      0x0000                       name-\
    \      0 indicates 1setOf\n                                   length\n       \
    \                                       no name (since name-length\n         \
    \                                     was 0)\n      0x0004                   \
    \    value-     length of an integer = 4\n                                   length\n\
    \      0x0006                       value      value of  1st sub-\n          \
    \                                    collection member\n                     \
    \                         attribute\n      0x4A         memberAttrName  value-tag\
    \  starts a new member\n                                              attribute:\
    \ \"y-dimension\"\n      0x0000                       name-      defined to be\
    \ 0 for this\n                                   length     type, so part of 1setOf\n\
    \                                              no name (since name-length\n  \
    \                                            was 0)\n      0x000B            \
    \           value-     length of the \"y-\n                                  \
    \ length     dimension\" keyword\n      Octets       Symbolic Value  Protocol\
    \   comments\n                                   field\n      y-dimension  y-dimension\
    \     value      name of  2nd sub-\n                                         \
    \     collection member\n                                              attribute\n\
    \      0x21         integer type    value-tag  attribute type\n      0x0000  \
    \                     name-      0 indicates 1setOf\n                        \
    \           length\n                                              no name (since\
    \ name-length\n                                              was 0)\n      0x0004\
    \                       value-     length of an integer = 4\n                \
    \                   length\n      0x0004                       value      value\
    \ of  2nd sub-\n                                              collection member\n\
    \                                              attribute\n      0x37         endCollection\
    \   value-tag  end of the sub-collection\n      0x0000                       name-\
    \      defined to be 0 for this\n                                   length   \
    \  type, so part of 1setOf\n                                              no name\
    \ (since name-length\n                                              was 0)\n \
    \     0x0000                       value-     defined to be 0 for this\n     \
    \                              length     type\n                             \
    \                 no value (since value-\n                                   \
    \           length was 0)\n      0x37         endCollection   value-tag  end of\
    \ the 1st collection\n                                              value in 1setOf\n\
    \      0x0000                       name-      defined to be 0 for this\n    \
    \                               length     type, so part of 1setOf\n      Octets\
    \       Symbolic Value  Protocol   comments\n                                \
    \   field\n                                              no name (since name-length\n\
    \                                              was 0)\n      0x0000          \
    \             value-     defined to be 0 for this\n                          \
    \         length     type\n                                              no value\
    \ (since value-\n                                              length was 0)\n"
- title: 8 Legacy issues
  contents:
  - "8 Legacy issues\n   IPP 1.x Printers and Clients will gracefully ignore collections\
    \ and\n   its member attributes if it does not understand the collection.  The\n\
    \   begCollection and endCollection elements each look like an attribute\n   with\
    \ an attribute syntax that the recipient doesn't support and so\n   should ignore\
    \ the entire attribute.  The individual member attributes\n   and their values\
    \ will look like a 1setOf values of the collection\n   attribute, so that the\
    \ Printer simply ignores the entire attribute\n   and all of its values.  Returning\
    \ unsupported attributes is also\n   simple, since only the name of the collection\
    \ attribute is returned\n   with the 'unsupported' out-of-band value (see section\
    \ 4.2).\n"
- title: 9 IANA Considerations
  contents:
  - "9 IANA Considerations\n   The following table provides registration for the 'collection'\n\
    \   attribute syntax defined in this document.  This is to be registered\n   according\
    \ to the procedures in RFC 2911 [RFC2911] section 6.3.\n   Tag value:      Attribute\
    \ Syntaxes:            Ref.      Section:\n   collection                     \
    \                RFC 3382         3\n     0x34          begCollection        \
    \          RFC 3382       7.1\n     0x37          endCollection              \
    \    RFC 3382       7.1\n     0x4A          memberAttrName                 RFC\
    \ 3382       7.1\n   The resulting attribute syntax registration will be published\
    \ in the\n   http://www.iana.org/assignments/ipp-registrations registry.\n"
- title: 10 Internationalization Considerations
  contents:
  - "10 Internationalization Considerations\n   This attribute syntax by itself has\
    \ no impact on\n   internationalization.  However, the member attributes that\
    \ are\n   subsequently defined for use in a collection may have\n   internationalization\
    \ considerations, as may any attribute, according\n   to [RFC2911].\n"
- title: 11 Security Considerations
  contents:
  - "11 Security Considerations\n   This attribute syntax causes no more security\
    \ concerns than any other\n   attribute syntax.  It is only the attributes that\
    \ are subsequently\n   defined, to use this or any other attribute syntax, that\
    \ may have\n   security concerns, depending on the semantics of the attribute,\n\
    \   according to [RFC2911].\n"
- title: 12 References
  contents:
  - '12 References

    '
- title: 12.1 Normative References
  contents:
  - "12.1 Normative References\n   [RFC2910] Herriot, R., Butler, S., Moore, P. and\
    \ R. Turner, \"Internet\n             Printing Protocol/1.1: Encoding and Transport\"\
    , RFC 2910,\n             September 2000.\n   [RFC2911] Isaacson, S., deBry, R.,\
    \ Hastings, T., Herriot, R. and P.\n             Powell, \"Internet Printing Protocol/1.1:\
    \ Model and\n             Semantics\", RFC 2911, September 2000.\n"
- title: 12.2 Informative References
  contents:
  - "12.2 Informative References\n   [RFC2565] Herriot, R., Butler, S., Moore, P.\
    \ and R. Tuner, \"Internet\n             Printing Protocol/1.0: Encoding and Transport\"\
    , RFC 2565,\n             April 1999.\n   [RFC2566] deBry, R., Hastings, T., Herriot,\
    \ R., Isaacson, S. and P.\n             Powell, \"Internet Printing Protocol/1.0:\
    \ Model and\n             Semantics\", RFC 2566, April 1999.\n   [RFC2567] Wright,\
    \ D., \"Design Goals for an Internet Printing\n             Protocol\", RFC 2567,\
    \ April 1999.\n   [RFC2568] Zilles, S., \"Rationale for the Structure and Model\
    \ and\n             Protocol for the Internet Printing Protocol\", RFC 2568,\n\
    \             April 1999.\n   [RFC2569] Herriot, R., Hastings, T., Jacobs, N.\
    \ and J. Martin,\n             \"Mapping between LPD and IPP Protocols\", RFC\
    \ 2569, April\n             1999.\n   [RFC2616] Fielding, R., Gettys, J., Mogul,\
    \ J., Frystyk, H., Masinter,\n             L., Leach, P. and T. Berners-Lee, \"\
    Hypertext Transfer\n             Protocol - HTTP/1.1\", RFC 2616, June 1999.\n\
    \   [RFC3196] Hastings, T., Manros, C., Zehler, P., Kugler, C. and H.\n      \
    \       Holst, \"Internet Printing Protocol/1.1: Implementor's\n             Guide\"\
    , RFC 3196, November 2001.\n"
- title: 'Appendix A: Encoding Example of a Simple Collection (Informative)'
  contents:
  - "Appendix A: Encoding Example of a Simple Collection (Informative)\n   The overall\
    \ structure of the collection value can be pictorially\n   represented as:\n \
    \     \"media-size\" =\n        {  \"x-dimension\" = 6;\n           \"y-dimension\"\
    \ = 4\n        }\n   A simplified view of the encoding would look like this:\n\
    \             Table 6 - Overview Encoding of simple collection\n      Tag Value\
    \             Name                  Value\n      begCollection         media-size\
    \            \"\"\n      memberAttrName        \"\"                    x-dimension\n\
    \      integer               \"\"                    6\n      memberAttrName \
    \       \"\"                    y-dimension\n      integer               \"\"\
    \                    4\n      endCollection         \"\"                    \"\
    \"\n      Note: \"\" represents a name or value whose length is 0.\n         \
    \     Table 7 - Example Encoding of simple collection\n      Octets       Symbolic\
    \ Value  Protocol   comments\n                                   field\n     \
    \ 0x34         begCollection   value-tag  beginning of the \"media-\n        \
    \                                      size\" collection attribute\n      0x000A\
    \                       name-      length of (collection)\n                  \
    \                 length     attribute name\n      media-size   media-size   \
    \   name       name of (collection)\n                                        \
    \      attribute\n      Octets       Symbolic Value  Protocol   comments\n   \
    \                                field\n      0x0000                       value-\
    \     defined to be 0 for this\n                                   length    \
    \ type\n                                              no value (since value-\n\
    \                                              length was 0)\n      0x4A     \
    \    memberAttrName  value-tag  starts member attribute:\n                   \
    \                           \"x-dimension\"\n      0x0000                    \
    \   name-      defined to be 0 for this\n                                   length\
    \     type, so part of 1setOf\n                                              no\
    \ name (since name-length\n                                              was 0)\n\
    \      0x000B                       value-     length of \"x-dimension\"\n   \
    \                                length     keyword\n      x-dimension  x-dimension\
    \     value      name of  1st collection\n                                   \
    \           member attribute\n      0x21         integer type    value-tag  attribute\
    \ type\n      0x0000                       name-      0 indicates 1setOf\n   \
    \                                length\n                                    \
    \          no name (since name-length\n                                      \
    \        was 0)\n      0x0004                       value-     length of an integer\
    \ = 4\n                                   length\n      0x0006               \
    \        value      value of  1st collection\n                               \
    \               member attribute\n      0x4A         memberAttrName  value-tag\
    \  starts a new member\n                                              attribute:\
    \ \"y-dimension\"\n      0x0000                       name-      defined to be\
    \ 0 for this\n                                   length     type, so part of 1setOf\n\
    \                                              no name (since name-length\n  \
    \                                            was 0)\n      Octets       Symbolic\
    \ Value  Protocol   comments\n                                   field\n     \
    \ 0x000B                       value-     length of the \"y-\n               \
    \                    length     dimension\" keyword\n      y-dimension  y-dimension\
    \     value      name of  2nd collection\n                                   \
    \           member attribute\n      0x21         integer type    value-tag  attribute\
    \ type\n      0x0000                       name-      0 indicates 1setOf for\n\
    \                                   length     media-size\n                  \
    \                            no name (since name-length\n                    \
    \                          was 0)\n      0x0004                       value- \
    \    length of an integer = 4\n                                   length\n   \
    \   0x0004                       value      value of  2nd collection\n       \
    \                                       member attribute\n      0x37         endCollection\
    \   value-tag  end of the collection\n      0x0000                       name-\
    \      defined to be 0 for this\n                                   length   \
    \  type, so part of 1setOf\n                                              no name\
    \ (since name-length\n                                              was 0)\n \
    \     0x0000                       value-     defined to be 0 for this\n     \
    \                              length     type\n                             \
    \                 no value (since value-\n                                   \
    \           length was 0)\n"
- title: 'Appendix B: Encoding Example of 1setOf Collection (Informative)'
  contents:
  - "Appendix B: Encoding Example of 1setOf Collection (Informative)\n   The overall\
    \ structure of the collection value can be pictorially\n   represented as:\n \
    \     \"media-size-supported\" =\n        {  \"x-dimension\" = 6;\n          \
    \ \"y-dimension\" = 4\n        },\n        {  \"x-dimension\" = 3;\n         \
    \  \"y-dimension\" = 5\n        };\n   A simplified view of the encoding would\
    \ look like this:\n             Table 8 - Overview Encoding of 1setOf collection\n\
    \      Tag Value              Name                 Value\n      begCollection\
    \          media-size-          \"\"\n                             supported\n\
    \      memberAttrName         \"\"                   x-dimension\n      integer\
    \                \"\"                   6\n      memberAttrName         \"\" \
    \                  y-dimension\n      integer                \"\"            \
    \       4\n      endCollection          \"\"                   \"\"\n      begCollection\
    \          \"\"                   \"\"\n      memberAttrName         \"\"    \
    \               x-dimension\n      integer                \"\"               \
    \    3\n      memberAttrName         \"\"                   y-dimension\n    \
    \  integer                \"\"                   5\n      endCollection      \
    \    \"\"                   \"\"\n              Table 9 - Example Encoding of\
    \ 1setOf collection\n      Octets       Symbolic Value  Protocol   comments\n\
    \                                   field\n      0x34         begCollection  \
    \ value-tag  beginning of the \"media-\n                                     \
    \         size-supported (1setOf\n                                           \
    \   collection\" attribute\n      0x00014                      name-      length\
    \ of (collection)\n                                   length     attribute name\n\
    \      media-size-  media-size-     name       name of (collection)\n      supported\
    \    supported                  attribute\n      0x0000                      \
    \ value-     defined to be 0 for this\n                                   length\
    \     type\n                                              no value (since value-\n\
    \                                              length was 0)\n      0x4A     \
    \    memberAttrName  value-tag  starts member attribute:\n                   \
    \                           \"x-dimension\"\n      0x0000                    \
    \   name-      defined to be 0 for this\n                                   length\
    \     type, so part of 1setOf\n                                              no\
    \ name (since name-length\n                                              was 0)\n\
    \      0x000B                       value-     length of \"x-dimension\"\n   \
    \                                length     keyword\n      x-dimension  x-dimension\
    \     value      name of  1st collection\n                                   \
    \           member attribute\n      0x21         integer type    value-tag  attribute\
    \ type\n      0x0000                       name-      0 indicates 1setOf\n   \
    \                                length\n                                    \
    \          no name (since name-length\n                                      \
    \        was 0)\n      Octets       Symbolic Value  Protocol   comments\n    \
    \                               field\n      0x0004                       value-\
    \     length of an integer = 4\n                                   length\n  \
    \    0x0006                       value      value of  1st collection\n      \
    \                                        member attribute\n      0x4A        \
    \ memberAttrName  value-tag  starts member attribute:\n                      \
    \                        \"y-dimension\"\n      0x0000                       name-\
    \      defined to be 0 for this\n                                   length   \
    \  type, so part of 1setOf\n                                              no name\
    \ (since name-length\n                                              was 0)\n \
    \     0x000B                       value-     length of the \"y-\n           \
    \                        length     dimension\" keyword\n      y-dimension  y-dimension\
    \     value      name of  2nd collection\n                                   \
    \           member attribute\n      0x21         integer type    value-tag  attribute\
    \ type\n      0x0000                       name-      0 indicates 1setOf\n   \
    \                                length\n                                    \
    \          no name (since name-length\n                                      \
    \        was 0)\n      0x0004                       value-     length of an integer\
    \ = 4\n                                   length\n      0x0004               \
    \        value      value of  2nd collection\n                               \
    \               member attribute\n      0x37         endCollection   value-tag\
    \  end of the collection\n      0x0000                       name-      defined\
    \ to be 0 for this\n                                   length     type, so part\
    \ of 1setOf\n                                              no name (since name-length\n\
    \                                              was 0)\n      Octets       Symbolic\
    \ Value  Protocol   comments\n                                   field\n     \
    \ 0x0000                       value-     defined to be 0 for this\n         \
    \                          length     type\n                                 \
    \             no value (since value-\n                                       \
    \       length was 0)\n      0x34         begCollection   value-tag  beginning\
    \ of the 2nd\n                                              member of the 1setOf\n\
    \                                              \"sizes-avail \" collection\n \
    \                                             attribute\n      0x0000        \
    \               name-      Zero length name indicates\n                      \
    \             length     this is member of previous\n                        \
    \                      attribute\n                                   name    \
    \   no name (since name-length\n                                             \
    \ was 0)\n      0x0000                       value-     defined to be 0 for this\n\
    \                                   length     type\n                        \
    \                      no value (since value-\n                              \
    \                length was 0)\n      0x4A         memberAttrName  value-tag \
    \ starts member attribute:\n                                              \"x-dimension\"\
    \n      0x0000                       name-      defined to be 0 for this\n   \
    \                                length     type, so part of 1setOf\n        \
    \                                      no name (since name-length\n          \
    \                                    was 0)\n      0x000B                    \
    \   value-     length of \"x-dimension\"\n                                   length\
    \     keyword\n      x-dimension  x-dimension     value      name of  1st collection\n\
    \                                              member attribute\n      0x21  \
    \       integer type    value-tag  attribute type\n      Octets       Symbolic\
    \ Value  Protocol   comments\n                                   field\n     \
    \ 0x0000                       name-      0 indicates 1setOf\n               \
    \                    length\n                                              no\
    \ name (since name-length\n                                              was 0)\n\
    \      0x0004                       value-     length of an integer = 4\n    \
    \                               length\n      0x0003                       value\
    \      value of  1st collection\n                                            \
    \  member attribute\n      0x4A         memberAttrName  value-tag  starts member\
    \ attribute:\n                                              \"y-dimension\"\n\
    \      0x0000                       name-      defined to be 0 for this\n    \
    \                               length     type, so part of 1setOf\n         \
    \                                     no name (since name-length\n           \
    \                                   was 0)\n      0x000B                     \
    \  value-     length of the \"y-\n                                   length  \
    \   dimension\" keyword\n      y-dimension  y-dimension     value      name of\
    \  2nd collection\n                                              member attribute\n\
    \      0x21         integer type    value-tag  attribute type\n      0x0000  \
    \                     name-      0 indicates 1setOf\n                        \
    \           length\n                                              no name (since\
    \ name-length\n                                              was 0)\n      0x0004\
    \                       value-     length of an integer = 4\n                \
    \                   length\n      0x0005                       value      value\
    \ of  2nd collection\n                                              member attribute\n\
    \      Octets       Symbolic Value  Protocol   comments\n                    \
    \               field\n      0x37         endCollection   value-tag  end of the\
    \ 1setOf\n                                              collection value\n   \
    \   0x0000                       name-      defined to be 0 for this\n       \
    \                            length     type, so part of 1setOf\n            \
    \                                  no name (since name-length\n              \
    \                                was 0)\n      0x0000                       value-\
    \     defined to be 0 for this\n                                   length    \
    \ type\n                                              no value (since value-\n\
    \                                              length was 0)\n"
- title: 'Appendix C: Encoding Example of Collection containing 1setOf XXX'
  contents:
  - "Appendix C: Encoding Example of Collection containing 1setOf XXX\n          \
    \  attribute (Informative)\n   The overall structure of the collection value can\
    \ be pictorially\n   represented as:\n      \"wagons\" =\n        {  \"colors\"\
    \ = red, blue;\n           \"sizes\" = 4, 6, 8\n        }\n   A simplified view\
    \ of the encoding would look like this:\n       Table 10 - Overview Encoding of\
    \ collection with 1setOf value\n            Tag Value                Name    \
    \            Value\n            begCollection            wagons              \"\
    \"\n            memberAttrName           \"\"                  colors\n      \
    \      keyword                  \"\"                  red\n            keyword\
    \                  \"\"                  blue\n            memberAttrName    \
    \       \"\"                  sizes\n            integer                  \"\"\
    \                  4\n            integer                  \"\"              \
    \    6\n            integer                  \"\"                  8\n       \
    \     endCollection            \"\"                  \"\"\n        Table 11 -\
    \ Example Encoding of collection with 1setOf value\n      Octets       Symbolic\
    \ Value  Protocol   comments\n                                   field\n     \
    \ 0x34         begCollection   value-tag  beginning of the \"wagons\"\n      \
    \                                        collection attribute\n      0x0005  \
    \                     name-      length of (collection)\n                    \
    \               length     attribute name\n      wagons       wagons         \
    \ name       name of (collection)\n                                          \
    \    attribute\n      0x0000                       value-     defined to be 0\
    \ for this\n                                   length     type\n             \
    \                                 no value (since value-\n                   \
    \                           length was 0)\n      0x4A         memberAttrName \
    \ value-tag  starts a new member\n                                           \
    \   attribute: \"colors\"\n      0x0000                       name-      defined\
    \ to be 0 for this\n                                   length     type, so part\
    \ of 1setOf\n                                              no name (since name-length\n\
    \                                              was 0)\n      0x0006          \
    \             value-     length of \"colors\" keyword\n                      \
    \             length\n      colors       colors          value      value is name\
    \ of 1st\n                                              member attribute\n   \
    \   0x44         keyword type    value-tag  keyword type\n      0x0000       \
    \                name-      0 indicates 1setOf wagons\n                      \
    \             length\n                                              no name (since\
    \ name-length\n                                              was 0)\n      0x0004\
    \                       value-\n                                   length\n  \
    \    Octets       Symbolic Value  Protocol   comments\n                      \
    \             field\n      blue         blue            value      value of 1st\
    \ member\n                                              attribute\n      0x44\
    \         keyword type    value-tag  keyword type\n      0x0000              \
    \         name-      0 indicates 1setOf wagons\n                             \
    \      length\n                                              no name (since name-length\n\
    \                                              was 0)\n      0x0003          \
    \             value-\n                                   length\n      red   \
    \       red             value      value of 1st member\n                     \
    \                         attribute\n      0x4A         memberAttrName  value-tag\
    \  starts a new member\n                                              attribute:\
    \ \"sizes\"\n      0x0000                       name-      defined to be 0 for\
    \ this\n                                   length     type, so part of 1setOf\n\
    \                                              no name (since name-length\n  \
    \                                            was 0)\n      0x0005            \
    \           value-     length of \"length-avail\"\n                          \
    \         length     keyword\n      sizes        sizes           value      Name\
    \ of 2nd member\n                                              attribute\n   \
    \   0x21         integer type    value-tag  attribute type\n      0x0000     \
    \                  name-      0 indicates 1setOf wagons\n                    \
    \               length\n                                              no name\
    \ (since name-length\n                                              was 0)\n \
    \     0x0004                       value-     length of an integer = 4\n     \
    \                              length\n      Octets       Symbolic Value  Protocol\
    \   comments\n                                   field\n      0x0004         \
    \              value      1st value for 1setOf\n                             \
    \                 integer attribute\n      0x21         integer type    value-tag\
    \  attribute type\n      0x0000                       name-      0 indicates 1setOf\n\
    \                                   length\n                                 \
    \             no name (since name-length\n                                   \
    \           was 0)\n      0x0004                       value-\n              \
    \                     length     length of an integer = 4\n      0x0006      \
    \                 value      2nd value for 1setOf\n                          \
    \                    integer attribute\n      0x21         integer type    value-tag\
    \  attribute type\n      0x0000                       name-      0 indicates 1setOf\n\
    \                                   length\n                                 \
    \             no name (since name-length\n                                   \
    \           was 0)\n      0x0004                       value-     length of an\
    \ integer = 4\n                                   length\n      0x0008       \
    \                value      3rd  value for 1setOf\n                          \
    \                    integer attribute\n      0x37         endCollection   value-tag\
    \  end of the collection\n      0x0000                       name-      defined\
    \ to be 0 for this\n                                   length     type, so part\
    \ of 1setOf\n                                              no name (since name-length\n\
    \                                              was 0)\n      0x0000          \
    \             value-     defined to be 0 for this\n                          \
    \         length     type\n      Octets       Symbolic Value  Protocol   comments\n\
    \                                   field\n                                  \
    \            no value (since value-\n                                        \
    \      length was 0)\n"
- title: 'Appendix D: Description of the Base IPP Documents (Informative)'
  contents:
  - "Appendix D: Description of the Base IPP Documents (Informative)\n   The base\
    \ set of IPP documents includes:\n      Design Goals for an Internet Printing\
    \ Protocol [RFC2567]\n      Rationale for the Structure and Model and Protocol\
    \ for the\n      Internet Printing Protocol [RFC2568]\n      Internet Printing\
    \ Protocol/1.1: Model and Semantics [RFC2911]\n      Internet Printing Protocol/1.1:\
    \ Encoding and Transport [RFC2910]\n      Internet Printing Protocol/1.1: Implementer's\
    \ Guide [RFC3196]\n      Mapping between LPD and IPP Protocols [RFC2569]\n   The\
    \ \"Design Goals for an Internet Printing Protocol\" document takes a\n   broad\
    \ look at distributed printing functionality, and it enumerates\n   real-life\
    \ scenarios that help to clarify the features that need to be\n   included in\
    \ a printing protocol for the Internet.  It identifies\n   requirements for three\
    \ types of users: end users, operators, and\n   administrators.  It calls out\
    \ a subset of end user requirements that\n   are satisfied in IPP/1.0 [RFC2566,\
    \ RFC2565].  A few OPTIONAL operator\n   operations have been added to IPP/1.1\
    \ [RFC2911, RFC2910].\n   The \"Rationale for the Structure and Model and Protocol\
    \ for the\n   Internet Printing Protocol\" document describes IPP from a high\
    \ level\n   view, defines a roadmap for the various documents that form the suite\n\
    \   of IPP specification documents, and gives background and rationale\n   for\
    \ the IETF IPP working group's major decisions.\n   The \"Internet Printing Protocol/1.1:\
    \ Model and Semantics\" document\n   describes a simplified model with abstract\
    \ objects, their attributes,\n   and their operations.  The model introduces a\
    \ Printer and a Job.  The\n   Job supports multiple documents per Job.  The model\
    \ document also\n   addresses how security, internationalization, and directory\
    \ issues\n   are addressed.\n   The \"Internet Printing Protocol/1.1: Encoding\
    \ and Transport\" document\n   is a formal mapping of the abstract operations\
    \ and attributes defined\n   in the model document onto HTTP/1.1 [RFC2616].  It\
    \ also defines the\n   encoding rules for a new Internet MIME media type called\n\
    \   \"application/ipp\".  This document also defines the rules for\n   transporting\
    \ over HTTP a message body whose Content-Type is\n   \"application/ipp\".  This\
    \ document defines the 'ipp' scheme for\n   identifying IPP printers and jobs.\n\
    \   The \"Internet Printing Protocol/1.1: Implementer's Guide\" document\n   gives\
    \ insight and advice to implementers of IPP clients and IPP\n   objects.  It is\
    \ intended to help them understand IPP/1.1 and some of\n   the considerations\
    \ that may assist them in the design of their client\n   and/or IPP object implementations.\
    \  For example, a typical order of\n   processing requests is given, including\
    \ error checking.  Motivation\n   for some of the specification decisions is also\
    \ included.\n   The \"Mapping between LPD and IPP Protocols\" document gives some\n\
    \   advice to implementers of gateways between IPP and LPD (Line Printer\n   Daemon)\
    \ implementations.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Roger deBry\n   Utah Valley State College\n   Orem, UT\
    \ 84058\n   Phone: (801) 222-8000\n   EMail: debryro@uvsc.edu\n   Tom Hastings\n\
    \   Xerox Corporation\n   737 Hawaii St.  ESAE 231\n   El Segundo, CA  90245\n\
    \   Phone: 310-333-6413\n   Fax: 310-333-5514\n   EMail: hastings@cp10.es.xerox.com\n\
    \   Robert Herriot\n   Consultant\n   706 Colorado Ave\n   Palo Alto, CA 94303\n\
    \   Phone: 650-327-4466\n   Fax: 650-327-4466\n   EMail: bob@herriot.com\n   Kirk\
    \ Ocke\n   Xerox Corp.\n   800 Phillips Rd\n   M/S 128-30E\n   Webster, NY 14580\n\
    \   Phone: (585) 442-4832\n   EMail: KOcke@crt.xerox.com\n   Peter Zehler\n  \
    \ Xerox Corp.\n   800 Phillips Rd\n   M/S 128-30E\n   Webster, NY 14580\n   Phone:\
    \ (585) 265-8755\n   EMail: PZehler@crt.xerox.com\n   IPP Web Page:  http://www.pwg.org/ipp/\n\
    \   IPP Mailing List:  ipp@pwg.org\n   To subscribe to the ipp mailing list, send\
    \ the following email:\n     1) send it to majordomo@pwg.org\n     2) leave the\
    \ subject line blank\n     3) put the following two lines in the message body:\n\
    \          subscribe ipp\n          end\n   Implementers of this specification\
    \ document are encouraged to join\n   the IPP Mailing List in order to participate\
    \ in any discussions of\n   clarification issues and review of registration proposals\
    \ for\n   additional attributes and values.  In order to reduce spam the\n   mailing\
    \ list rejects mail from non-subscribers, so you must subscribe\n   to the mailing\
    \ list in order to send a question or comment to the\n   mailing list.\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2002).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
