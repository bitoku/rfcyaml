- title: __initial_text__
  contents:
  - '    Goals for Internet Email to Support Diverse Service Environments

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document is a history capturing the background, motivation\
    \ and\n   thinking during the LEMONADE definition and design process.\n   The\
    \ LEMONADE Working Group -- Internet email to support diverse\n   service environments\
    \ -- is chartered to provide enhancements to\n   Internet mail to facilitate its\
    \ use by more diverse clients.  In\n   particular, by clients on hosts not only\
    \ operating in environments\n   with high latency/bandwidth-limited unreliable\
    \ links but also\n   constrained to limited resources.  The enhanced mail must\
    \ be\n   backwards compatible with existing Internet mail.\n   The primary motivation\
    \ for this effort is -- by making Internet mail\n   protocols richer and more\
    \ adaptable to varied media and environments\n   -- to allow mobile handheld devices\
    \ tetherless access to Internet\n   mail using only IETF mail protocols.\n   The\
    \ requirements for these devices drive a discussion of the possible\n   protocol\
    \ enhancements needed to support multimedia messaging on\n   limited-capability\
    \ hosts in diverse service environments.  A list of\n   general principles to\
    \ guide the design of the enhanced messaging\n   protocols is documented.  Finally,\
    \ additional issues of providing\n   seamless service between enhanced Internet\
    \ mail and the existing\n   separate mobile messaging infrastructure are briefly\
    \ listed.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  4\n   2.  Conventions Used in This Document  . . . . . . . . .\
    \ . . . . .  6\n   3.  Messaging Terminology and Simple Model (Client-to-Server\n\
    \       Aspect Only) . . . . . . . . . . . . . . . . . . . . . . . . .  6\n  \
    \   3.1.  Messaging Transaction Models . . . . . . . . . . . . . . .  6\n    \
    \ 3.2.  Mobile Messaging Transactions  . . . . . . . . . . . . . .  7\n      \
    \ 3.2.1.  Submission . . . . . . . . . . . . . . . . . . . . . .  7\n       3.2.2.\
    \  Notification . . . . . . . . . . . . . . . . . . . . .  7\n       3.2.3.  Retrieval\
    \  . . . . . . . . . . . . . . . . . . . . . .  8\n   4.  Profiles . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . .  8\n     4.1.  Existing Profiles \
    \ . . . . . . . . . . . . . . . . . . . .  8\n       4.1.1.  Voice Messaging (VPIMv2)\
    \ . . . . . . . . . . . . . . .  8\n       4.1.2.  iFax . . . . . . . . . . .\
    \ . . . . . . . . . . . . . .  9\n       4.1.3.  Internet Voice Mail (IVM)  .\
    \ . . . . . . . . . . . . .  9\n     4.2.  Putative Client Profiles . . . . .\
    \ . . . . . . . . . . . .  9\n       4.2.1.  TUI  . . . . . . . . . . . . . .\
    \ . . . . . . . . . . .  9\n       4.2.2.  Multi-Modal Clients  . . . . . . .\
    \ . . . . . . . . . . 11\n       4.2.3.  WUI  . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . 11\n   5.  General Principles . . . . . . . . . . . . . .\
    \ . . . . . . . . 13\n     5.1.  Protocol Conservation  . . . . . . . . . . .\
    \ . . . . . . . 13\n       5.1.1.  Reuse Existing Protocols . . . . . . . . .\
    \ . . . . . . 13\n       5.1.2.  Maintain Existing Protocol Integrity . . . .\
    \ . . . . . 13\n     5.2.  Sensible Reception/Sending Context . . . . . . . .\
    \ . . . . 13\n       5.2.1.  Reception Context  . . . . . . . . . . . . . . .\
    \ . . . 13\n       5.2.2.  Sending Context  . . . . . . . . . . . . . . . . .\
    \ . . 13\n     5.3.  Internet Infrastructure Preservation . . . . . . . . . .\
    \ . 14\n     5.4.  Voice Requirements (Near Real-Time Delivery) . . . . . . .\
    \ 14\n     5.5.  Fax Requirements (Guaranteed Delivery) . . . . . . . . . . 14\n\
    \     5.6.  Video Requirements (Scalable Message Size) . . . . . . . . 14\n  \
    \ 6.  Issues and Requirements: TUI Subset of WUI . . . . . . . . . . 14\n    \
    \ 6.1.  Requirements on the Message Retrieval Protocol . . . . . . 14\n      \
    \ 6.1.1.  Performance Issues . . . . . . . . . . . . . . . . . . 15\n       6.1.2.\
    \  Functional Issues  . . . . . . . . . . . . . . . . . . 16\n     6.2.  Requirements\
    \ on the Message Submission Protocol  . . . . . 18\n       6.2.1.  Forward without\
    \ Download Support . . . . . . . . . . . 18\n       6.2.2.  Quota by Context Enforcement\
    \ . . . . . . . . . . . . . 19\n       6.2.3.  Future Delivery Support with Cancel\
    \  . . . . . . . . . 19\n       6.2.4.  Support for Committed Message Delivery\
    \ . . . . . . . . 20\n     6.3.  Requirements on Message Notification . . . .\
    \ . . . . . . . 20\n       6.3.1.  Additional Requirements on Message Notification\
    \  . . . 21\n   7.  Issues and Requirements: WUI Mobility Aspects  . . . . . .\
    \ . . 21\n     7.1.  Wireless Considerations on Email . . . . . . . . . . . .\
    \ . 21\n       7.1.1.  Transport Considerations . . . . . . . . . . . . . . .\
    \ 21\n       7.1.2.  Handset-Resident Client Limitations  . . . . . . . . . 22\n\
    \       7.1.3.  Wireless Bandwidth and Network Utilization\n               Considerations\
    \ . . . . . . . . . . . . . . . . . . . . 22\n       7.1.4.  Content Display Considerations\
    \ . . . . . . . . . . . . 23\n     7.2.  Requirements to Enable Wireless Device\
    \ Support . . . . . . 24\n       7.2.1.  Transport Requirements . . . . . . .\
    \ . . . . . . . . . 24\n       7.2.2.  Enhanced Mobile Email Functionality  .\
    \ . . . . . . . . 24\n       7.2.3.  Client Requirements  . . . . . . . . . .\
    \ . . . . . . . 25\n       7.2.4.  Bandwidth Requirements . . . . . . . . . .\
    \ . . . . . . 25\n       7.2.5.  Media Handling Requirements  . . . . . . . .\
    \ . . . . . 25\n   8.  Interoperation with Existing Mobile Messaging  . . . .\
    \ . . . . 27\n     8.1.  Addressing of Mobile Devices . . . . . . . . . . . .\
    \ . . . 27\n     8.2.  Push Model of Message Retrieval  . . . . . . . . . . .\
    \ . . 27\n     8.3.  Message Notification . . . . . . . . . . . . . . . . . .\
    \ . 27\n     8.4.  Operator Issues  . . . . . . . . . . . . . . . . . . . . .\
    \ 27\n       8.4.1.  Support for End-to-End Delivery Reports and\n           \
    \    Message-Read Reports . . . . . . . . . . . . . . . . . 27\n       8.4.2.\
    \  Support for Selective Downloading  . . . . . . . . . . 27\n       8.4.3.  Transactions\
    \ and Operator Charging Units . . . . . . . 27\n       8.4.4.  Network Authentication\
    \ . . . . . . . . . . . . . . . . 28\n     8.5.  LEMONADE and MMS . . . . . .\
    \ . . . . . . . . . . . . . . . 28\n   9.  Security Considerations  . . . . .\
    \ . . . . . . . . . . . . . . 32\n   10. References . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . 32\n     10.1. Normative References . . . . . . .\
    \ . . . . . . . . . . . . 32\n     10.2. Informative References . . . . . . .\
    \ . . . . . . . . . . . 32\n   Appendix A.  Contributors  . . . . . . . . . .\
    \ . . . . . . . . . . 37\n   Appendix B.  Acknowledgements  . . . . . . . . .\
    \ . . . . . . . . . 38\n   Appendix C.  IAB Note: Unified Notification Protocol\n\
    \                Considerations  . . . . . . . . . . . . . . . . . . . 38\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Historically, a number of separate electronic messaging\
    \ systems\n   originated and evolved independently supporting different messaging\n\
    \   modes.  For example:\n   o  Internet mail systems ([4], [10], [25]) evolved\
    \ to support\n      networked computers with messages consisting of rich text\
    \ plus\n      attachments.\n   o  Voice mail systems utilized a client with a\
    \ telephone-based or an\n      answering machine style of user interface.  The\
    \ telephone network\n      was used for transport of recorded voice messages.\n\
    \   o  Fax store-and-forward users interface with a fax machine using a\n    \
    \  modified telephone-based interface.  Fax machines use the\n      telephone\
    \ network for transport of fax data via modems.\n   o  SMS (Short Message Service)\
    \ [58] enabled users to send short text\n      messages between their cellular\
    \ phones using the SS7 call control\n      infrastructure ([60], [61], [63], [64],\
    \ [65]) for transport.\n   In the recent past, IETF mail standards have evolved\
    \ to support\n   additional/merged functionality:\n   o  With MIME ([5], [6],\
    \ [7], [8], [9], [28]), Internet mail transport\n      was enhanced to carry any\
    \ kind of digital data\n   o  Internet mail protocols were extended and profiled\
    \ by VPIM ([13],\n      [14], [15], [34]) and iFAX ([16], [17], [18], [19], [20],\
    \ [21],\n      [23]) so that enabled voice mail systems and fax machines could\n\
    \      use the common email infrastructure to carry their messages over\n    \
    \  the Internet as an alternative to the telephone network.  These\n      enhancements\
    \ were such that the user's experience of reliability,\n      security, and responsiveness\
    \ was not diminished by transport over\n      the Internet.\n   These successes\
    \ -- making Internet mail transport the common\n   infrastructure supporting what\
    \ were separate messaging universes --\n   have encouraged a new vision: to provide,\
    \ over the Internet, a single\n   infrastructure, mailbox, and set of protocols\
    \ for a user to get,\n   respond to, and manipulate all of his or her messages\
    \ from a\n   collection of clients with varying capabilities, operating in diverse\n\
    \   environments ([46],[47]).\n   The LEMONADE effort -- Internet email to support\
    \ diverse service\n   environments -- realizes this vision further by enabling\
    \ Internet\n   mail support for mobile devices and facilitating its interoperability\n\
    \   with the existing mobile messaging universe.\n   In the recent past, the evolution\
    \ of messaging standards for\n   resource-limited mobile devices has been rapid:\n\
    \   o  In the cellular space, SMS was enhanced to EMS (Extended Message\n    \
    \  Service) [59] allowing longer text messages, images, and graphics.\n      With\
    \ an even richer feature set, MMS (Multimedia Messaging\n      Service) ([43],\
    \ [52], [53], [56], [57]) was developed as a\n      lightweight access mechanism\
    \ for the transmission of pictures,\n      audio, and motion pictures.  MMS protocols\
    \ are based in part on\n      Internet standards (both messaging and web [24])\
    \ as well as SMS.\n      The cellular messaging universe is a separate infrastructure\n\
    \      adapted to deliver appropriate functionality in a timely and\n      effective\
    \ manner to a special environment.\n   o  As well, the number of different mobile\
    \ clients that need to be\n      supported keeps proliferating. (e.g., besides\
    \ cellular phones\n      there are wireless-enabled PDAs, tablet computers, etc.)\n\
    \   These resource-limited mobile devices are less powerful both in\n   processing\
    \ speed and display capabilities than conventional\n   computers.  They are also\
    \ connected to the network by wireless links\n   whose bandwidth and reliability\
    \ are lower, latency is longer, and\n   costs are higher than those of traditional\
    \ wire-line links, hence the\n   stress on the need to support adaptation to a\
    \ whole different service\n   environment.\n   This document collects a number\
    \ the issues impeding Internet mail\n   protocols from directly supporting the\
    \ mobile service environment.\n   Considerations arising from these issues are\
    \ documented, and in some\n   cases possible approaches to solutions are suggested.\
    \  It turns out\n   that the enhancements to support mobile clients also offer\
    \ benefits\n   for some terminals in other environments.  In particular, the\n\
    \   enhancements address the needs of the following diverse clients:\n   o  A\
    \ wireless handheld device with an email client -- a Wireless User\n      Interface\
    \ (WUI) mode of user interaction is dictated by the\n      constraints of the\
    \ mobile wireless handheld operating environment.\n   o  Telephone-based voice\
    \ client -- a Telephone User Interface (TUI),\n      this is the user mode offered\
    \ by a POTS set\n      *  This is a subset of the WUI and is useful in other contexts.\n\
    \   o  A multi-modal messaging client providing a coordinated messaging\n    \
    \  session using display and audio modes simultaneously. (e.g., a\n      system\
    \ consisting of a PC with a phone, or a wireless phone with\n      both a voice\
    \ circuit and data channel requiring coordination).\n      *  This is also a subset\
    \ of the WUI and is useful in other\n         contexts.\n   The rest of this document\
    \ is structured as follows:\n   o  A brief survey of messaging profiles - both\
    \ existing and proposed.\n   o  A list of principles to be used to guide the design\
    \ of Internet\n      Messaging for diverse service environments.\n   o  Detailed\
    \ discussion on enhancements to Internet mail protocols to\n      support WUIs.\n\
    \   o  Some issues relating to the interoperation of enhanced Internet\n     \
    \ mail and the existing mobile messaging services.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   This document refers generically to\
    \ the sender of a message in the\n   masculine (he/him/his) and to the recipient\
    \ of the message in the\n   feminine (she/her/hers).  This convention is purely\
    \ for convenience\n   and makes no assumption about the gender of a message sender\
    \ or\n   recipient.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ RFC2119 [1].\n"
- title: 3.  Messaging Terminology and Simple Model (Client-to-Server Aspect
  contents:
  - "3.  Messaging Terminology and Simple Model (Client-to-Server Aspect\n    Only)\n\
    \   In the client-server model prevalent in existing messaging\n   architectures,\
    \ the client, also known as a \"user agent\", presents\n   messages to and accepts\
    \ messages from the user.  The server, also\n   known as a \"relay/server\" or\
    \ a \"proxy-relay\", provides storage and\n   delivery of messages.\n   For a\
    \ definitive description of Internet mail architecture, see [42].\n"
- title: 3.1.  Messaging Transaction Models
  contents:
  - "3.1.  Messaging Transaction Models\n   There are two basic transactional models.\
    \  In the \"pull\" model, the\n   component, rather than the data flow, initiates\
    \ the transaction.  For\n   example, a client may initiate a connection to a server\
    \ and issue\n   requests to the server to deliver incoming messages.  Conventional\n\
    \   email clients, web-mail clients, and WAP-based mobile clients use the\n  \
    \ \"pull\" model.\n   The \"push\" model differs in that the component initiating\
    \ the\n   transaction does so because of some data flow affecting it.  For\n \
    \  example, the arrival of a new message at the terminating server may\n   cause\
    \ a notification to be sent (\"pushed\") to a messaging client.\n"
- title: 3.2.  Mobile Messaging Transactions
  contents:
  - "3.2.  Mobile Messaging Transactions\n   The most common functions are: \"submission\"\
    , \"notification\", and\n   \"retrieval\".  There may be other functions, such\
    \ as \"delivery\n   reports\", \"read-reply reports\", \"forwarding\", \"view\
    \ mailbox\", \"store\n   message\", etc.  Each of these transactions can be implemented\
    \ in\n   either a pull or push model.  However, some transactions are more\n \
    \  naturally suited to one model or another.\n   The following figure depicts\
    \ a simple client-server model (no server-\n   to-server interactions are shown):\n\
    \      (1) Message submission\n      (2) Message notification\n      (3) & (4)\
    \ Message retrieval\n      +-------+                 +------+                \
    \       +-------+\n      |Mail   |-------(1)------>|      |-----------(2)-------->|Mail\
    \   |\n      |Client |   Submit msg    |      |     Notification     /|Client\
    \ |\n      +-------+                 |      |                     / +--+----+\n\
    \                                |      |                    /     ^\n       \
    \                         |      |<----------(3)-----+     /\n               \
    \                 |Server|   Retrieval request    /\n                        \
    \        |      |                       /\n                                | \
    \     |                      /\n                                |      |-----------(4)-------+\n\
    \                                |      |   Retrieval response\n             \
    \                   |      |\n                                +------+\n     \
    \                    Simple Messaging Model\n"
- title: 3.2.1.  Submission
  contents:
  - "3.2.1.  Submission\n   \"Submission\" is the transaction between a client and\
    \ a server by\n   which the user of the former sends a new message to another\
    \ user.\n   Submission is a push from client to server.\n"
- title: 3.2.2.  Notification
  contents:
  - "3.2.2.  Notification\n   \"Notification\" is the transaction by which the server\
    \ notifies the\n   client that it has received messages intended for that client.\n\
    \   Notification is a push from server to client.\n   All the larger mobile messaging\
    \ systems implement a push model for\n   the notification because data can be\
    \ presented to the user without\n   the user's experiencing network/transport\
    \ latencies, and without\n   tying up network resources for polling when there\
    \ is no new data.\n   Internet mail differs in that it has not yet seen the need\
    \ for a\n   standardized notification protocol.\n"
- title: 3.2.3.  Retrieval
  contents:
  - "3.2.3.  Retrieval\n   \"Retrieval\" is the transaction between a client and a\
    \ server by which\n   the client can obtain one or more messages from the server.\n\
    \   Retrieval can be push or pull.\n   Implemented in some mobile systems as an\
    \ option, the push model has\n   the advantage that the user is not necessarily\
    \ aware of transport or\n   network latencies.\n   The pull model, implemented\
    \ in most systems (mobile or conventional),\n   has the advantage that the user\
    \ can control what data is actually\n   sent to and stored by the client.\n"
- title: 4.  Profiles
  contents:
  - "4.  Profiles\n   Internet messaging can be made to support a variety of client\
    \ and\n   server types other than traditional email.  The clients may be\n   adapted\
    \ for host restrictions such as limited processing power,\n   message store, display\
    \ window size, etc.  Alternatively, clients may\n   be adapted for different functionality\
    \ (e.g., voice mail, fax, etc.).\n   Servers may support optional mail features\
    \ that would allow better\n   handling of different media (e.g., voice mail, fax,\
    \ video, etc.).  A\n   number of Internet mail profiles supporting specific application\n\
    \   niches have been defined or proposed.\n"
- title: 4.1.   Existing Profiles
  contents:
  - "4.1.   Existing Profiles\n   The following are examples of server-to-server profiles\
    \ of SMTP and\n   MIME.  Except for IVM, they do not address client-to-server\n\
    \   interactions.\n"
- title: 4.1.1.  Voice Messaging (VPIMv2)
  contents:
  - "4.1.1.  Voice Messaging (VPIMv2)\n   These profiles, RFC3801 [13] to RFC3803\
    \ [15], enable the transport of\n   voice messages using the Internet mail system.\
    \  The main driver for\n   this work was support of IP transport for voice mail\
    \ systems.  As\n   voice mail clients are accustomed to a higher degree of\n \
    \  responsiveness and certainty as to message delivery, the\n   functionality\
    \ added by VPIMv2 includes Message Disposition\n   Notification and Delivery Status\
    \ Message ([12], [3]).  Voice media\n   has also been added to multi-part message\
    \ bodies.\n"
- title: 4.1.2.  iFax
  contents:
  - "4.1.2.  iFax\n   This set of profiles ([16], [17], [18], [19], [20], [21]) enables\
    \ the\n   transport of fax using Internet mail protocols.  This work defined\n\
    \   the image/tiff MIME type.  Support for fax clients also required\n   extensions\
    \ to Message Delivery Notification.\n"
- title: 4.1.3.  Internet Voice Mail (IVM) [34]
  contents:
  - "4.1.3.  Internet Voice Mail (IVM) [34]\n   This proposed mail enhancement (whose\
    \ requirements are described in\n   RFC 3773 [30]) targets support for the interchange\
    \ of voice messaging\n   between the diverse components (clients as well as servers)\
    \ in\n   systems supporting voice mail.\n"
- title: 4.2.  Putative Client Profiles
  contents:
  - '4.2.  Putative Client Profiles

    '
- title: 4.2.1.  TUI
  contents:
  - "4.2.1.  TUI\n   It is desirable to replace proprietary protocols between telephone\n\
    \   user interface clients and message stores with standards-based\n   interfaces.\
    \  The proprietary protocols were created to provide media-\n   aware capabilities\
    \ as well as to provide the low-latency required by\n   some messaging applications.\n\
    \   An example of a TUI client is a voice mail client.  Because a POTS\n   phone\
    \ lacks any intelligence, the voice mail client functionality has\n   to be provided\
    \ by a user agent networked to the mail server.  The\n   main architectural difference\
    \ between a conventional voice mail\n   system and an Internet messaging system\
    \ supporting a TUI is that the\n   voice mail system uses a specialized message\
    \ store and protocols.\n   The following figure depicts the architecture of current\
    \ voice mail\n   systems implementing VPIMv2:\n                              \
    \                    |-------------|\n              |-------|     RFC-822/MIME\
    \          |             |\n              |   |   |---------------------------|\
    \     MTA     |\n              |   |   |     mail submission ->    |         \
    \    |(E)SMTP\n   Telephone--|TUI|TUA|                           |------|    \
    \  |-----to\n              |   |   |   Proprietary Protocol    |      |      |another\n\
    \              |   |   |---------------------------| MS   |      | email\n   \
    \           |-------|   < - mail retrieval      |      |      | server\n     \
    \                                             |-------------|\n              mail\
    \ client                          email server\n            |----------------voice\
    \ messaging system -------------|\n   Mail client consists of: TUI (Telephone\
    \ User Interface) and\n                            TUA (Telephone User Agent)\n\
    \      Communication between TUI and TUA is proprietary.\n   Email server consists\
    \ of: MS (Mail Store) and\n                             MTA (Message Transfer\
    \ Agent)\n      Communication between MS and MTA is proprietary.\n   It is proposed\
    \ that the Proprietary Protocol be replaced with an IETF\n   standard protocol:\n\
    \                                                  |-------------|\n         \
    \     |-------|     RFC-822/MIME          |             |\n              |   |\
    \   |---------------------------|     MTA     |\n              |   |   |   mail\
    \ submission ->      |             |(E)SMTP\n   Telephone--|TUI|TUA|         \
    \                  |------|      |-----to\n              |   |   |     IETF protocol\
    \         |      |      |another\n              |   |   |---------------------------|\
    \ MS   |      | mail\n              |-------|    <- mail retrieval      |    \
    \  |      | server\n                                                  |-------------|\n\
    \              mail client                          email server\n         |-\
    \ voice mail system-|                   |-mail server-|\n   Mail client consists\
    \ of: TUI (Telephone User Interface) and\n                            TUA (Telephone\
    \ User Agent)\n      Communication between TUI and TUA is proprietary.\n   Email\
    \ server consists of: MS (Mail Store) and\n                             MTA (Message\
    \ Transfer Agent)\n      Communication between MS and MTA is proprietary.\n"
- title: 4.2.2.  Multi-Modal Clients
  contents:
  - "4.2.2.  Multi-Modal Clients\n   Multi-modal clients offer the advantage of coordinated\
    \ voice and data\n   modes of user interaction.  Architecturally, the multi-modal\
    \ client\n   can be considered the union two user agent components -- one a TUI\n\
    \   client, the other a simple GUI client.  See the next figure.  The\n   Graphical\
    \ User Agent (GUA) helps maintain the text display while the\n   Telephone User\
    \ Agent (TUA) acts on behalf of the TUI functionality.\n   This model is the norm\
    \ with cellular devices supporting data access\n   because historically they evolved\
    \ from cell phones to which a data\n   channel was added.  The presentation of\
    \ multiple complementary modes\n   of interaction gives end-users their choice\
    \ of the most convenient\n   and natural working mode for a particular task. \
    \ There are other\n   situations where a multi-modal model is appropriate.  (For\
    \ example, a\n   telephone sales unit needs to provide a voice (telephone) mode\
    \ and\n   conventional desktop PC mode of interaction at the same time in an\n\
    \   integrated manner.)\n   A major issue in the design of multi-modal clients\
    \ -- the need to\n   synchronize the component user agents making up a client\
    \ -- is only\n   addressed by LEMONADE to a limited extent in Section 6.3.\n"
- title: 4.2.3.  WUI
  contents:
  - "4.2.3.  WUI\n   The Wireless User Interface is functionally equivalent to a\n\
    \   conventional email client on a personal workstation, but is optimized\n  \
    \ for clients on handheld tetherless devices.  Factors needing\n   consideration\
    \ include limited memory and processing power.  Limited\n   bandwidth is also\
    \ relatively high cost.  As already alluded to above,\n   in many cases (e.g.,\
    \ cellular devices), the mobile client is\n   multi-modal.  So WUIs can be modeled\
    \ as resource-and-link-limited\n   multi-modal clients.\n   These terminals require\
    \ the use of protocols that minimize the number\n   of over-the-air transactions\
    \ and reduce the amount of data that need\n   be transmitted over the air overall.\
    \  Such reduction in over-the-air\n   transmission is a combination of more efficient\
    \ protocol interaction\n   and richer message presentation choices, whereby a\
    \ user may more\n   intelligently select what should be downloaded and what should\
    \ remain\n   on the server.\n   Although not an explicit goal, providing equivalent\
    \ or superior\n   functionality to the wireless MMS service [43] (as defined by\
    \ 3GPP,\n   3GPP2, and the OMA) is desirable.\n   Proposed Wireless User Interface\
    \ (WUI)/Multi-modal Clients\n          |wireless GUI client|                 \
    \    email server\n                         (E)SMTP (client-server)  |-------------|\n\
    \              |-------|     RFC-822/MIME          |             |\n         \
    \     |   |   |---------------------------|             |\n              |   |\
    \   |   mail submission ->      |             |(E)SMTP\n             -|GUI|GUA|\
    \                           |             |-----to\n            | |   |   | IETF\
    \ standard protocol    |------------ |another\n            | |   |   |----------------------------to\
    \ MS below| | mail\n            | |-------|    <- mail retrieval      |------------\
    \ | server\n            |       |                             |             |\n\
    \   Handheld |       |                             |             |\n   Device\
    \   WUI     |                             |    MTA      |\n            |     \
    \  |                             |             |\n            |       |      \
    \                       |             |\n            | |-------|     RFC-822/MIME\
    \          |             |\n            | |   |   |---------------------------|\
    \             |\n            | |   |   |   mail submission ->      |         \
    \    |\n             -|TUI|TUA|                           |------|      |\n  \
    \            |   |   |  IETF standard protocol   |      |      |\n           \
    \   |   |   |---------------------------| MS   |      |\n              |-------|\
    \    <- mail retrieval      |      |      |\n                                \
    \                  |-------------|\n              TUI client                 \
    \         voice mail server\n         |----------------voice messaging system\
    \ ----------------|\n         |------WUI-----|                      |---mail server---|\n\
    \   Wireless GUI client consists of: GUI (Graphical User Interface) and\n    \
    \                                GUA (Graphical User Agent)\n      Communication\
    \ between UI and UA is proprietary.\n   TUI client consists of: TUI (Telephone\
    \ User Interface) and\n                           TUA (Telephone User Agent)\n\
    \      Communication between TUI and TUA is proprietary.\n      Communication\
    \ between GUA and TUA is proprietary.\n   Mail (email and voice mail) server consists\
    \ of:\n                                    MS (Mail Store) and\n             \
    \                       MTA (Message Transfer Agent)\n      Communication between\
    \ MS and MTA is proprietary.\n"
- title: 5.  General Principles
  contents:
  - "5.  General Principles\n   This is a list of principles to guide the design of\
    \ extensions for\n   Internet Messaging systems and protocols to support diverse\n\
    \   endpoints.\n"
- title: 5.1.  Protocol Conservation
  contents:
  - '5.1.  Protocol Conservation

    '
- title: 5.1.1.  Reuse Existing Protocols
  contents:
  - "5.1.1.  Reuse Existing Protocols\n   To the extent feasible, the enhanced messaging\
    \ framework SHOULD use\n   existing protocols whenever possible.\n"
- title: 5.1.2.  Maintain Existing Protocol Integrity
  contents:
  - "5.1.2.  Maintain Existing Protocol Integrity\n   In meeting the requirement \"\
    Reuse Existing Protocols\"\n   (Section 5.1.1), the enhanced messaging framework\
    \ MUST NOT redefine\n   the semantics of an existing protocol.\n   Extensions,\
    \ based on capability declaration by the server, will be\n   used to introduce\
    \ new functionality where required.\n   Said differently, we will not break existing\
    \ protocols.\n"
- title: 5.2.  Sensible Reception/Sending Context
  contents:
  - '5.2.  Sensible Reception/Sending Context

    '
- title: 5.2.1.  Reception Context
  contents:
  - "5.2.1.  Reception Context\n   When the user receives a message, that message\
    \ SHOULD receive the\n   treatment expected by the sender.  For example, if the\
    \ sender\n   believes he is sending a voice message, voice message semantics\n\
    \   should prevail to the extent that the receiving client can support\n   such\
    \ treatment.\n"
- title: 5.2.2.  Sending Context
  contents:
  - "5.2.2.  Sending Context\n   When the user sends a message, he SHOULD be able\
    \ to specify the\n   message context.  That is, whether the network should treat\
    \ the\n   message as an text message, voice message, video message, etc.\n   Again,\
    \ this can only be complied with to the extent that the\n   infrastructure and\
    \ receiving client can provide such treatment.  In\n   practice, this would imply\
    \ that the message should be in the form\n   desired by the sender up to delivery\
    \ to the receiving client.\n"
- title: 5.3.  Internet Infrastructure Preservation
  contents:
  - "5.3.  Internet Infrastructure Preservation\n   The infrastructure SHOULD change\
    \ only where required for new\n   functionality.  Existing functionality MUST\
    \ be preserved on the\n   existing infrastructure; that is, all extensions must\
    \ be backward\n   compatible to allow for the gradual introduction of the enhancements.\n\
    \   Messages created in an enhanced messaging context MUST NOT require\n   changes\
    \ to existing mail clients.  However, there may be a\n   degradation in functionality\
    \ in certain circumstances.\n   The enhanced messaging framework MUST be able\
    \ to handle messages\n   created in a non-enhanced messaging context; for example,\
    \ a simple,\n   RFC822 [2] text message.\n"
- title: 5.4.  Voice Requirements (Near Real-Time Delivery)
  contents:
  - "5.4.  Voice Requirements (Near Real-Time Delivery)\n   On the retrieval side,\
    \ there are significant real-time requirements\n   for retrieving a message for\
    \ voice playback.  More than any other\n   media type, including video, voice\
    \ is extremely sensitive to\n   variations in playback latency.  The enhanced\
    \ messaging framework\n   MUST address the real-time needs of voice.\n"
- title: 5.5.  Fax Requirements (Guaranteed Delivery)
  contents:
  - "5.5.  Fax Requirements (Guaranteed Delivery)\n   Fax users have a particular\
    \ expectation that is a challenge for\n   enhanced Internet messaging.  A person\
    \ who sends a fax expects the\n   recipient to receive the fax upon successful\
    \ transmission.  This\n   clearly is not the case for Internet Mail.\n   Addressing\
    \ this need is not in the scope of LEMONADE.\n"
- title: 5.6.  Video Requirements (Scalable Message Size)
  contents:
  - "5.6.  Video Requirements (Scalable Message Size)\n   Video mail has one outstanding\
    \ feature: Video messages are\n   potentially large!  The enhanced messaging framework\
    \ MUST scale for\n   very large messages.  Streaming from the server to the client,\
    \ in\n   both directions, MUST be supported.\n"
- title: '6.  Issues and Requirements: TUI Subset of WUI'
  contents:
  - '6.  Issues and Requirements: TUI Subset of WUI

    '
- title: 6.1.  Requirements on the Message Retrieval Protocol
  contents:
  - "6.1.  Requirements on the Message Retrieval Protocol\n   IMAP [10] is the Internet\
    \ protocol for rich message retrieval and\n   manipulation.  The project MUST\
    \ limit itself to extending IMAP where\n   necessary and MUST not create a new\
    \ protocol.\n"
- title: 6.1.1.  Performance Issues
  contents:
  - '6.1.1.  Performance Issues

    '
- title: 6.1.1.1.  Real-Time Playback
  contents:
  - "6.1.1.1.  Real-Time Playback\n   The real-time playback of a voice message MUST\
    \ be supported so that\n   the user experience does not differ noticeably from\
    \ that of a\n   conventional voice messaging system.\n   Possible solutions for\
    \ this include making use of the existing\n   incremental download capability\
    \ of the IMAP protocol, or utilizing a\n   companion streaming protocol.\n   The\
    \ IMAP protocol itself does not provide streaming by the strict\n   definition\
    \ of the term.  It does provide for the incremental download\n   of content in\
    \ blocks.  Most IMAP clients do not support this behavior\n   and instead download\
    \ the entire contents into a temporary file to be\n   passed to the application.\n\
    \   There are several approaches to achieve real-time playback.  The\n   first\
    \ approach is to implement an IMAP client that can pass data\n   incrementally\
    \ to the application as it is received from the network.\n   The application can\
    \ then read bytes from the network as needed to\n   maintain a play buffer.  Thus,\
    \ it would not require the full download\n   of contents.  This approach may require\
    \ server-side development to\n   support partial download efficiently (i.e., to\
    \ avoid re-opening files\n   and positioning to the requested location).\n   Alternatively,\
    \ the client can use the proposed IMAP channel extension\n   [32] to request that\
    \ the server make the selected content available\n   via an alternate transport\
    \ mechanism.  A client can then ask the\n   server to make the voice data available\
    \ to the client via a streaming\n   media protocol such as RTSP.  This requires\
    \ support on the client and\n   server of a common streaming protocol.\n"
- title: 6.1.1.2.  Avoid Content-Transfer-Encoding Data Inflation
  contents:
  - "6.1.1.2.  Avoid Content-Transfer-Encoding Data Inflation\n   Another important\
    \ performance optimization is enabling the transport\n   of data using more efficient\
    \ native coding rather than text-like\n   content-transfer encodings such as \"\
    base 64\".\n   Standard IMAP4 uses a text-based data representation scheme where\
    \ all\n   data is represented in a form that looks like text; that is, voice\n\
    \   data must be encoded using \"base 64\" into a transport encoding that\n  \
    \ adds 30% to the size of a message.  Downloading or appending large\n   messages\
    \ to the server already uses substantial bandwidth.\n   Possible Solutions:\n\
    \   Where IMAP channel is appropriate, the external channel may be binary\n  \
    \ capable; that is, the external access may not require re-encoding.\n   Mechanisms\
    \ such as HTTP [24], FTP, or RTSP are available for this\n   download.\n   The\
    \ IMAP binary extension standards proposal [31] extends the IMAP\n   fetch command\
    \ to retrieve data in the binary form.  This is\n   especially useful for large\
    \ attachments and other binary components.\n   Binary in conjunction with a streaming\
    \ client implementation may be\n   an attractive alternative to the channel extension.\n"
- title: 6.1.2.  Functional Issues
  contents:
  - '6.1.2.  Functional Issues

    '
- title: 6.1.2.1.  Mailbox Summary Support
  contents:
  - "6.1.2.1.  Mailbox Summary Support\n   The common TUI prompt, \"you have two new\
    \ voice messages, six unheard\n   messages, and one new fax message\", requires\
    \ more information than is\n   conveniently made available by current message\
    \ retrieval protocols.\n   The existing IMAP protocol's mailbox status command\
    \ does not include\n   a count by message context [26] [27].  A possible solution\
    \ is for the\n   mail server to keep track of these current counters and provide\
    \ a\n   status command that returns an arbitrary mailbox summary.  The IMAP\n\
    \   status command provides a count of new and total messages with\n   standardized\
    \ attributes extracted from the message headers.  This\n   predetermined information\
    \ does not currently include information\n   about the message type.  Without\
    \ additional conventions to the status\n   command, a client would have to download\
    \ the header for each message\n   to determine its type, a prohibitive cost where\
    \ latency or bandwidth\n   constraints exist.\n"
- title: 6.1.2.2.  Sort by Message Context Support
  contents:
  - "6.1.2.2.  Sort by Message Context Support\n   This functionality is required\
    \ to present new voice messages first\n   and then new fax messages within a single\
    \ logical queue as voice\n   mailboxes commonly do.  Again, this is a question\
    \ of convenience and\n   performance.  Adequate performance may only be possible\
    \ if the mail\n   server provides a sort by context or maintains a set of virtual\n\
    \   mailboxes (folders) corresponding to message types as for \"Mailbox\n   Summary\
    \ Support\", Section 6.1.2.1.\n   IMAP does not support this directly.  A straightforward\
    \ solution is\n   to define an extensible sort mechanism for sorting on arbitrary\n\
    \   header contents.\n"
- title: 6.1.2.3.  Status of Multiple Mailboxes Support
  contents:
  - "6.1.2.3.  Status of Multiple Mailboxes Support\n   Extension mailbox support\
    \ requires the ability to efficiently status\n   a mailbox other than the one\
    \ currently logged into.  This facility is\n   required to support sub-mailboxes,\
    \ where a common feature is to check\n   whether other sub-mailboxes in the same\
    \ family group have new\n   messages.\n   Current mechanisms are limited to logging\
    \ into each of set of\n   mailboxes, checking status, logging out, and repeating\
    \ until all\n   sub-mailboxes are processed.\n"
- title: 6.1.2.4.  Specialized Mailbox Support
  contents:
  - "6.1.2.4.  Specialized Mailbox Support\n   Applications that provide features\
    \ such as check receipt, deleted\n   message recovery, resave, and others, require\
    \ the ability to access\n   messages in predetermined mailboxes with specific\
    \ behaviors (e.g.,\n   Outbox, Sent Items, Deleted Items, Expired Items, Drafts).\n\
    \   IMAP provides only a single standardized folder, the inbox.  This\n   functionality\
    \ does not require new protocol additions per se, but\n   standardized usage and\
    \ naming conventions are necessary for\n   interoperability.  This functionality\
    \ requires that the server\n   provide the underlying logic to support these special\
    \ folders,\n   including automatic insertion, scheduled copying, and periodic\n\
    \   deletion.\n"
- title: 6.1.2.5.  CLID Restriction Indication/Preservation
  contents:
  - "6.1.2.5.  CLID Restriction Indication/Preservation\n   Many calling features\
    \ are dependent on collected caller-ID\n   information.  Clients -- such as the\
    \ TUI and other service supporting\n   user agents (e.g., WEB and WAP servers)\
    \ -- may need trusted access to\n   restricted caller-ID information for such\
    \ purposes as callback.\n   Untrusted clients must not be permitted to receive\
    \ this information.\n   A mechanism for establishing \"trust\" between appropriate\
    \ clients and\n   the server is required to restrict delivery of this information\
    \ to\n   the end-user only as allowed.\n   Further, when messages are sent between\
    \ servers within a network, a\n   means of communicating trust is needed so that\
    \ the identity of the\n   sender can be preserved for record-keeping and certain\
    \ features while\n   ensuring that the identity is not disclosed to the recipient\
    \ in an\n   inappropriate way.\n"
- title: 6.1.2.6.  Support for Multiple Access to Mailbox
  contents:
  - "6.1.2.6.  Support for Multiple Access to Mailbox\n   If the telephone answering\
    \ application client uses IMAP4 for greeting\n   access and message deposit, it\
    \ is essential that the server provide\n   support for simultaneous login.  It\
    \ is common in voice mail for an\n   incoming call to be serviced by the telephone\
    \ answering application\n   client at the same time the subscriber is logged into\
    \ her mailbox.\n   Further, new applications such as WEB and WAP access to voice\
    \ mail\n   may entail simultaneous login sessions, one from the TUI client and\n\
    \   one from the visual client.\n   The existing standard does not preclude multiple\
    \ accesses to a\n   mailbox, but it does not explicitly require support of the\
    \ practice.\n   The lack of explicit support requires the server and client to\
    \ adhere\n   to a common set of practices and behaviors to avoid undesirable and\n\
    \   unpredictable behaviors.  RFC2180 [29] describes a candidate set of\n   conventions\
    \ necessary to support this multiple-access technique.  It\n   or some other method\
    \ MUST be standardized as part of LEMONADE.\n"
- title: 6.2.  Requirements on the Message Submission Protocol [22]
  contents:
  - '6.2.  Requirements on the Message Submission Protocol [22]

    '
- title: 6.2.1.  Forward without Download Support
  contents:
  - "6.2.1.  Forward without Download Support\n   It is common to forward messages\
    \ or to reply to messages with a copy\n   of their attached content.  Today such\
    \ forwarding requires the sender\n   to download a complete copy of the original\
    \ message, attach it to the\n   reply or forward message, and resubmit the result.\
    \  For large\n   messages, this represents a substantial amount of bandwidth and\n\
    \   processing.  For clients connected via long-thin pipes, alternatives\n   are\
    \ required.\n   One approach is to define an extension to message submission to\n\
    \   request the submission server to resolve embedded URLs within a\n   message\
    \ before relaying the message to the final destination.  This\n   approach is\
    \ referred to as the pull approach because the message\n   submission server must\
    \ pull data from the IMAP server.\n   Another approach is to add a limited message\
    \ assembly and submission\n   capability to the IMAP server.  This approach muddies\
    \ the distinction\n   between the message submission protocol and that for message\
    \ storage\n   and retrieval (IMAP) because now message submission may be a side\n\
    \   effect of message store commands.  This approach is referred to as\n   the\
    \ push approach because in this case the IMAP server pushes data to\n   the message\
    \ submission server.\n   A detailed analysis of which of the two approaches is\
    \ preferable as\n   well as implementation details of both can be found in references\n\
    \   [36], [37], [38], [39], [40], and [41].\n"
- title: 6.2.2.  Quota by Context Enforcement
  contents:
  - "6.2.2.  Quota by Context Enforcement\n   It is common in a unified messaging\
    \ system to offer separate quotas\n   [11] for each of several message contexts\
    \ to avoid the condition\n   where a flood of email fills the mailbox and prevents\
    \ the subscriber\n   from receiving voice messages via the telephone.  It is necessary\
    \ to\n   extend the protocols to support the reporting of the \"mailbox full\"\
    \n   status based on the context of the submitted message.\n   An obvious security\
    \ issue needing consideration is the prevention of\n   the deliberate misidentification\
    \ of a message context with the\n   intention of overflowing a subscriber's mailbox.\
    \  It is envisioned\n   that the message submission protocol will require the\
    \ authentication\n   of trusted submission agents allowing only those so authorized\
    \ to\n   submit distinguished messages.\n   Voice mail system mailboxes commonly\
    \ contain voice and fax messages.\n   Sometimes, such systems also support email\
    \ messages (text, text with\n   attachments, and multimedia messages) in addition\
    \ to voice messages.\n   Similar to the required sort by message context, quota\
    \ management is\n   also required per message context.\n   One possible use case\
    \ is the prevention of multiple (large) messages\n   of one type (e.g., email\
    \ messages) from consuming all available\n   quota.  Consumption of all quota\
    \ by one type prevents the delivery of\n   other types (e.g., voice or fax messages)\
    \ to the mailbox.\n   One possible approach is to define a mechanism whereby a\
    \ trusted\n   client can declare the context of a message for the purpose of\n\
    \   utilizing a protected quota.  This may be by extensions to the\n   SMTP-submit\
    \ or LMTP[35] protocols.\n"
- title: 6.2.3.  Future Delivery Support with Cancel
  contents:
  - "6.2.3.  Future Delivery Support with Cancel\n   Traditionally messages sent with\
    \ \"future delivery\" are held in the\n   recipient's client \"outbox\" or its\
    \ equivalent until the appointed\n   submission time.  Thin clients used with\
    \ TUIs do not have such\n   persistent storage or may be intermittently connected\
    \ and must rely\n   upon server-based outbox queues.\n   Such support requires\
    \ extensions to message submission protocols to\n   identify a message as requiring\
    \ queuing for future delivery.\n   Extensions to IMAP4 or SMTP are required for\
    \ viewing and manipulating\n   the outbound queue, for such purposes as canceling\
    \ a future message.\n   Server support for managing such a queue is required so\
    \ that messages\n   are sent when they are intended.\n   Some of the architectural\
    \ issues here are the same as those in\n   \"Forward without Download Support\"\
    \ (Section 6.2.1).\n"
- title: 6.2.4.  Support for Committed Message Delivery
  contents:
  - "6.2.4.  Support for Committed Message Delivery\n   Voice messaging service has\
    \ provided a high degree of reliability and\n   performance for telephone answering\
    \ messages.  The expectation is\n   that once the caller has hung up, the message\
    \ is in the mailbox and\n   available for review.  The traditional Internet mail\
    \ architecture\n   suggests these messages should be sent to the mailbox via SMTP.\
    \  This\n   approach has two limitations.  The first and most manageable is that\n\
    \   the message forwarding may take more time than is tolerable by the\n   subscriber.\
    \  The second is that the message may fail to be delivered\n   to the mailbox.\
    \  Because there is no way to return notice to the\n   caller, the message is\
    \ \"lost\".\n   The standards community is working on an alternative to SMTP called\n\
    \   Local Message Transport Protocol (LMTP[35]).  This protocol addresses\n  \
    \ a number of limitations in SMTP when used to provide atomic delivery\n   to\
    \ a mailbox.  The failure modes in this proposal are carefully\n   controlled,\
    \ as are issues of per-message quota enforcement and\n   message storage quota-override\
    \ for designated administrative\n   messages.\n   An alternative approach is to\
    \ misuse the IMAP protocol and use an\n   IMAP-based submission mechanism to deposit\
    \ a message directly into\n   the recipient's inbox.  This append must be done\
    \ by a special\n   super-user with write permissions into the recipient mailbox.\n\
    \   Further, the message store must be able to trigger notification\n   events\
    \ upon insertion of a message into the mailbox via the Append\n   command.  The\
    \ historic limitation on using IMAP4 for message sending\n   involves the inability\
    \ of IMAP to communicate a full SMTP envelope.\n   For telephone answering, these\
    \ limitations are not significant.\n   However, the architectural issues raised\
    \ by this approach are\n   significant.  See \"Forward without Download Support\"\
    \ (Section 6.2.1).\n"
- title: 6.3.  Requirements on Message Notification
  contents:
  - "6.3.  Requirements on Message Notification\n   Clients keep local information\
    \ about the IMAP store.  This\n   information must be kept synchronized with the\
    \ state of the store.\n   For example, voice mail systems traditionally notify\
    \ subscribers of\n   certain events happening in their mailbox.  It is common\
    \ to send an\n   SMS or a pager notification for each message arrival event, message\n\
    \   read event, mailbox full event, etc.\n   When implemented over IMAP-based\
    \ message stores, the voice mail\n   client needs to be notified about these events.\
    \  Furthermore, when\n   other applications access/manipulate the store, these\
    \ events need to\n   be communicated to the mail client.  In some cases, the client\
    \ needs\n   to notify the user immediately.  In most cases, it is a question of\n\
    \   maintaining client/application consistency.  In the case of a\n   multimodal\
    \ client, it is especially important to provide a means of\n   coordinating the\
    \ client's different modal views of the state of the\n   store.\n   Email systems\
    \ have traditionally polled to update this information.\n   There may be advantages\
    \ to an event-driven approach in some cases.\n   The standards community is working\
    \ on a standard for bulk\n   server-to-client status notification.  An example\
    \ of such work is the\n   Simple Notification and Alarm Protocol (SNAP) [45],\
    \ which defines the\n   expected behavior of the message store for various events,\
    \ many of\n   them triggered by IMAP commands.\n"
- title: 6.3.1.  Additional Requirements on Message Notification
  contents:
  - "6.3.1.  Additional Requirements on Message Notification\n   A format for message\
    \ notification for servers reporting status\n   information to other servers (e.g.,\
    \ IMAP4 server to SMS or pager\n   server) MUST be defined.  The method for delivery\
    \ of these\n   notifications MUST also be specified.\n   The design for this MUST\
    \ take into account the IAB note: \"Unified\n   Notification Protocol Considerations\"\
    \ (Appendix C).\n"
- title: '7.  Issues and Requirements: WUI Mobility Aspects'
  contents:
  - '7.  Issues and Requirements: WUI Mobility Aspects

    '
- title: 7.1.  Wireless Considerations on Email
  contents:
  - '7.1.  Wireless Considerations on Email

    '
- title: 7.1.1.  Transport Considerations
  contents:
  - "7.1.1.  Transport Considerations\n   Compared to a LAN/WAN configuration or even\
    \ to a wire-line dial-up\n   connection, the probability of an interruption to\
    \ a wireless\n   connection is very high.\n   Interruptions can be due to handoff,\
    \ signal fading, or stepping\n   beyond cell coverage.\n   In addition, because\
    \ the mobile handset is also used for other types\n   of communications, there\
    \ is a relatively high probability that the\n   data session will be interrupted\
    \ either by incoming voice calls or by\n   \"pushed\" messages from services such\
    \ as SMS, MMS, and WAP.\n   It is also common in these environments that the device's\
    \ IP address\n   change within a session.\n"
- title: 7.1.2.  Handset-Resident Client Limitations
  contents:
  - "7.1.2.  Handset-Resident Client Limitations\n   Although the capabilities of\
    \ wireless handsets are rapidly improving,\n   the wireless handset remains limited\
    \ in its capability to host email\n   clients.  Currently, email access is restricted\
    \ to only high-end\n   wireless handsets.\n   These limitations include:\n   o\
    \  Client size\n         Handset-resident clients are limited in size because\
    \ either the\n         handset has limited storage space or the handset vendor/network\n\
    \         operator has set a limit on the size of client application that\n  \
    \       can reside on the handset.\n   o  Runtime memory\n         Wireless handsets\
    \ have limited runtime memory for the use of\n         the mobile email client.\n\
    \   o  CPU Speed\n         Wireless handsets have CPUs that are inferior to those\
    \ in\n         conventional systems (PCs) that run email clients.\n   o  User\
    \ Interface\n         Handsets have very limited input and output capabilities.\
    \  Most\n         of them have only a rudimentary keyboard (a keypad) and a\n\
    \         rudimentary pointing device (a text cursor).\n"
- title: 7.1.3.  Wireless Bandwidth and Network Utilization Considerations
  contents:
  - '7.1.3.  Wireless Bandwidth and Network Utilization Considerations

    '
- title: 7.1.3.1.  Low Bandwidth
  contents:
  - "7.1.3.1.  Low Bandwidth\n   2G mobile networks enabled wireless data communications,\
    \ but only at\n   very low bandwidths using circuit-switched data. 2.5G and 3G\
    \ networks\n   improve on this.  However, existing email clients require very\
    \ large\n   files (up to several MBs) -- encountered in multi-media attachments\n\
    \   such as presentations, images, voice, and video -- to be downloaded\n   even\
    \ though mobiles cannot exploit most of the data (because of color\n   depth and\
    \ screen size limitations).  Transferring such large files\n   over the air is\
    \ of questionable value even when higher wireless\n   bandwidth is available.\n"
- title: 7.1.3.2.  Price Sensitivity
  contents:
  - "7.1.3.2.  Price Sensitivity\n   In many cases, users of mobile data services\
    \ are charged by the\n   amount of data (e.g., kilobytes) downloaded to the handset.\
    \  Most\n   users currently experience a higher per-kilobyte data charge with\
    \ a\n   wireless service than they do over a wire-line service.  Users are\n \
    \  sensitive to the premium for wireless service.  This results in an\n   unwillingness\
    \ to download large amounts of unnecessary data to the\n   handset and the desire\
    \ to be able to download only selected content.\n"
- title: 7.1.3.3.  File Size Limitations
  contents:
  - "7.1.3.3.  File Size Limitations\n   In some cases, the size of file that can\
    \ be transmitted over the air\n   to the handset is limited.  This is a consequence\
    \ of handset\n   limitations (Section 7.1.2), wireless media and bandwidth issues\n\
    \   (Section 7.1.1 and Section 7.1.3.1), and price sensitivity\n   (Section 7.1.3.2).\n"
- title: 7.1.4.  Content Display Considerations
  contents:
  - '7.1.4.  Content Display Considerations

    '
- title: 7.1.4.1.  Display Size and Capabilities
  contents:
  - "7.1.4.1.  Display Size and Capabilities\n   Wireless terminals are currently\
    \ limited in their display size, color\n   depth, and ability to present multimedia\
    \ elements (i.e., if multiple\n   pictures are sent, the mobile can usually present\
    \ only one reduced-\n   sized picture element at a time rather than the several\
    \ picture\n   elements at once in the same display that a conventional PC email\n\
    \   client would be able to show).  Therefore, many email attachments\n   destined\
    \ for a mobile may require changes in size, color depth, and\n   presentation\
    \ method in order to be suitably displayed.\n"
- title: 7.1.4.2.  Supported Media Formats
  contents:
  - "7.1.4.2.  Supported Media Formats\n   Wireless handsets can only display a limited\
    \ set of media format\n   types.  Although PC clients support a large variety\
    \ of document types\n   (and allow on-demand \"codec\"/player download), mobiles\
    \ have very\n   limited support.  (For example, most only support WAV audio and\n\
    \   cannot play other formats such as AU, MP3 and AIFF.)  Furthermore,\n   although\
    \ almost all new handsets sold today can display images and\n   sound in some\
    \ advanced format, support for displaying other media or\n   application-specific\
    \ formats, such as MS Office (TM), is not expected\n   to be widespread in the\
    \ near future.\n"
- title: 7.1.4.3.  Handset Type Variety
  contents:
  - "7.1.4.3.  Handset Type Variety\n   As mentioned above, there are many handset\
    \ types available in the\n   market, and each has different display capabilities,\
    \ screen\n   characteristics, and processing capabilities.  The mobile email\n\
    \   service should be able to support as many handset types as possible.\n"
- title: 7.1.4.4.  Specific Attachment Display Scenarios
  contents:
  - "7.1.4.4.  Specific Attachment Display Scenarios\n   Handsets are unsuitable for\
    \ perusing entire lengthy documents or\n   presentations.  Rather than go through\
    \ the whole document, a mobile\n   user is more likely to look at several pages\
    \ of a document or several\n   slides of a presentation and then take action accordingly\
    \ (e.g.,\n   forward the email message to another recipient, print it, or leave\n\
    \   the document for later retrieval from another device).\n   Therefore, there\
    \ is a need to enable users to download not the entire\n   attachment but rather\
    \ just a selected part of it.  For example, users\n   should be able to download\
    \ the \"Table of Contents\" of a document; to\n   search within a document; to\
    \ download the first slide of a\n   presentation; the next slide of this presentation\
    \ or a range of\n   slides, etc.\n"
- title: 7.2.  Requirements to Enable Wireless Device Support
  contents:
  - "7.2.  Requirements to Enable Wireless Device Support\n   The following requirements\
    \ are derived from the considerations\n   mentioned above.\n"
- title: 7.2.1.  Transport Requirements
  contents:
  - "7.2.1.  Transport Requirements\n   The mobile email protocol must anticipate\
    \ transient losses of\n   connectivity and allow clients to recover (restore state)\
    \ from\n   interrupted connections quickly and easily.\n   IMAP4 Context\n   An\
    \ IMAP4 connection requires the communication socket to remain up\n   continuously\
    \ during an email session.  In case of transient loss of\n   communications, the\
    \ connection must be reestablished.  It is up to\n   the client to reconnect to\
    \ the server and return to an equivalent\n   state in the session.  This overhead\
    \ of restoring connections is very\n   costly in response time and additional\
    \ data transmission.\n"
- title: 7.2.2.  Enhanced Mobile Email Functionality
  contents:
  - '7.2.2.  Enhanced Mobile Email Functionality

    '
- title: 7.2.2.1.  Forward without Fetch
  contents:
  - "7.2.2.1.  Forward without Fetch\n   To minimize the downloading of data over\
    \ the air, the user MUST be\n   able to forward a message without initially downloading\
    \ it entirely\n   or at all to the handset.\n   The mobile email protocol MUST\
    \ support the ability to forward a\n   message without retrieving it.\n   This\
    \ requirement is identical to the TUI requirement described in\n   \"Forward Without\
    \ Download Support\" (Section 6.2.1).\n"
- title: 7.2.2.2.  Media Streaming
  contents:
  - "7.2.2.2.  Media Streaming\n   The mobile email protocol MUST provide a solution\
    \ that will enable\n   media streaming to the wireless handset.\n   This requirement\
    \ is similar to the TUI requirement described in\n   \"Real-Time Playback\" (Section\
    \ 6.1.1.1).\n"
- title: 7.2.3.  Client Requirements
  contents:
  - "7.2.3.  Client Requirements\n   IMAP4 clients are large because IMAP4 already\
    \ consists of a complex\n   set of functions (e.g., parsing of a broad variety\
    \ of MIME formats).\n   The mobile email client should be:\n   o  Small in size\n\
    \   o  Efficient in CPU consumption\n   o  Efficient in runtime memory consumption\n\
    \   To enable such extremely thin clients, in developing the mobile email\n  \
    \ protocol we should consider simplifying the IMAP functionality that\n   handsets\
    \ need to support.  However, any such simplification MUST NOT\n   limit interoperability\
    \ with full IMAP servers.\n"
- title: 7.2.4.  Bandwidth Requirements
  contents:
  - "7.2.4.  Bandwidth Requirements\n   The mobile email solution should minimize\
    \ the amount of data\n   transmitted over the air.  There are several ways of\
    \ pursuing this\n   goal that can be used in conjunction.\n   One way is the use\
    \ of content transcoding and media adaptation by the\n   server before message\
    \ retrieval in order to optimize the message for\n   the capabilities of the receiving\
    \ handset.\n   Another possible optimization is to make the mobile email protocol\n\
    \   itself simple, containing as little overhead as possible.\n   A third approach\
    \ is to minimize the bandwidth usage as described in\n   \"Avoid Content-Transfer-Encoding\
    \ Data Inflation\" (Section 6.1.1.2).\n"
- title: 7.2.5.  Media Handling Requirements
  contents:
  - "7.2.5.  Media Handling Requirements\n   As described above, wireless devices\
    \ have limited ability to handle\n   media.  Therefore, the server may be have\
    \ to perform media\n   manipulation activities to enable the terminal to display\
    \ the data\n   usefully.\n"
- title: 7.2.5.1.  Device Capabilities Negotiation
  contents:
  - "7.2.5.1.  Device Capabilities Negotiation\n   In order to support the different\
    \ characteristics and capabilities of\n   the various handset types available\
    \ in the market correctly, the\n   mobile email protocol must include provision\
    \ for email content\n   adaptation.  For example, the choice of supported file\
    \ formats, color\n   depth, and screen size.  Work on ESMTP transcoding (CONNEG[33])\
    \ may\n   address this issue.\n"
- title: 7.2.5.2.  Adjusting Message Attachments for Handset Abilities
  contents:
  - "7.2.5.2.  Adjusting Message Attachments for Handset Abilities\n   To support\
    \ wireless handsets, the server could transcode the message\n   attachments into\
    \ a representation that is more suitable for that\n   device.  This behavior should\
    \ be based on the device capabilities\n   negotiation as described in \"Device\
    \ Capabilities Negotiation\"\n   (Section 7.2.5.1).  For example, a device that\
    \ cannot display GIF\n   format, and can only display WBMP, should get a WBMP\
    \ image.  Devices\n   that cannot display a PDF file should get a text version\
    \ of the file.\n   The handset should control what transcoding, if any, is desired.\
    \  It\n   should be able to retrieve the original attachment without any\n   changes.\
    \  In addition, the device should be able to choose between\n   \"flavors\" of\
    \ the transcoding.  (\"Present the content as thumbnail\n   image\" is an example\
    \ of such a specific media manipulation.)\n   Again, work on ESMTP transcoding\
    \ (CONNEG[33]) may address this issue.\n"
- title: 7.2.5.3.  Handling Attachment Parts
  contents:
  - "7.2.5.3.  Handling Attachment Parts\n   A desirable feature (but out of scope\
    \ for the current LEMONADE\n   charter) is to enable users the choice of retrieving\
    \ parts of an\n   attachment file, not just the entire attachment.  The mobile\
    \ email\n   protocol should include the ability for the retrieving client to\n\
    \   specify selected elements of an attachment for download.  Such\n   elements\
    \ can be, for example, specific pages of a document, the\n   \"table of contents\"\
    \ of a document, or specific slides of a\n   presentation.\n"
- title: 8.  Interoperation with Existing Mobile Messaging
  contents:
  - "8.  Interoperation with Existing Mobile Messaging\n   LEMONADE's charter includes\
    \ the specification of how enhanced\n   Internet mail will interoperate with existing\
    \ mobile messaging\n   services (e.g., MMS) to deliver messages to mobile clients.\n"
- title: 8.1.  Addressing of Mobile Devices
  contents:
  - "8.1.  Addressing of Mobile Devices\n   E.164 addressing [62] is prevalent in\
    \ mobile messaging services to\n   address recipient mobiles.  Consideration should\
    \ be given to\n   supporting E.164 addressing for mobile devices in addition to\
    \ RFC822\n   addressing.\n"
- title: 8.2.  Push Model of Message Retrieval [49] [50] [51]
  contents:
  - "8.2.  Push Model of Message Retrieval [49] [50] [51]\n   MMS provides a \"push\"\
    \ option for message retrieval.  The option hides\n   network latencies and reduces\
    \ the need for user-handheld interaction.\n   If a level of support for mobiles\
    \ comparable to that of MMS is\n   desired, this mode of operation should be considered.\n"
- title: 8.3.  Message Notification [44] [55]
  contents:
  - "8.3.  Message Notification [44] [55]\n   Message notification was alluded to\
    \ in \"Requirements on Message\n   Notification\" (Section 6.3).  Internet mail\
    \ has not so far\n   standardized a server-to-client notification protocol although\
    \ most\n   existing wireless mail systems use notification to avoid needless\n\
    \   polling.  Client-to-server notification is not within the LEMONADE\n   charter.\n"
- title: 8.4.  Operator Issues
  contents:
  - '8.4.  Operator Issues

    '
- title: 8.4.1.  Support for End-to-End Delivery Reports and Message-Read Reports
  contents:
  - "8.4.1.  Support for End-to-End Delivery Reports and Message-Read Reports\n  \
    \ Support for committed delivery is described in Section 6.2.4, but\n   this is\
    \ different.\n"
- title: 8.4.2.  Support for Selective Downloading
  contents:
  - "8.4.2.  Support for Selective Downloading\n   If a push model of message retrieval\
    \ is supported, the need for\n   selective downloading and SPAM control is especially\
    \ important.\n"
- title: 8.4.3.  Transactions and Operator Charging Units
  contents:
  - "8.4.3.  Transactions and Operator Charging Units\n   Mobile network providers\
    \ often operate on a \"pay for use\" service\n   model.  This brings in requirements\
    \ for clearly delineated service\n   transactions that can be reported to billing\
    \ systems, and for\n   positive end-to-end acknowledgement of delivery or non-delivery\
    \ of\n   messages already mentioned in Section 8.4.1.  Note that billing is\n\
    \   specifically outside the scope of the IETF.\n"
- title: 8.4.4.  Network Authentication
  contents:
  - "8.4.4.  Network Authentication\n   Some mobile networks require network authentication\
    \ as well as\n   application authentication.\n"
- title: 8.5.  LEMONADE and MMS
  contents:
  - "8.5.  LEMONADE and MMS\n   The 3GPP MMS Reference Architecture ([48] [54]) defines\
    \ seven\n   interfaces labelled MM1 to MM7, as below:\n                   3GPP\
    \ MMS Reference Architecture (subset)\n            |---------|               \
    \           |------------|\n   wireless ||-------||                          |\
    \            |\n    device  || MMS   ||                          |           \
    \ |<- MM2 ->\n            || USER  |---------------------------|            |---------\n\
    \            || AGENT |<-         MM1           ->|            | to\n        \
    \    ||-------||                          |            | another\n           \
    \ |---------|                          |            | MMS\n                  \
    \                               |            | relay/\n             |--------|\
    \                          |            | server\n      e.g.,  |        |    \
    \                      |            |\n      Email, |EXTERNAL|               \
    \           |            |\n      Fax, or| SERVER |--------------------------|\
    \            |\n      UMS    |        |<-        MM3           ->|           \
    \ |\n             |--------|                          |            |\n       \
    \                                          |            |\n             |---------|\
    \                         |            |\n             |\"FOREIGN\"|         \
    \                |            |\n             | MMS     |-------------------------|\
    \            |\n             | relay/  |<-       MM4           ->|           \
    \ |\n             | server  |                         |            |\n       \
    \      |---------|                         |            |\n                  \
    \                               |    MMS     |\n             |-------|       \
    \                    |relay/server|\n             |       |                  \
    \         |            |\n             |  HLR  |---------------------------| \
    \           |\n             |       |<-         MM5           ->|            |\n\
    \             |-------|                           |            |\n           \
    \                                      |            |\n             |-------|\
    \                           |            |\n             |  MMS  |           \
    \                |            |\n             |  USER |---------------------------|\
    \            |\n             |  DBs  |<-         MM6           ->|           \
    \ |\n             |-------|                           |            |\n       \
    \                                          |            |\n             |-------|\
    \                           |            |\n             |  MMS  |           \
    \                |            |\n             |  VAS  |---------------------------|\
    \            |\n             |  APPs |<-         MM7           ->|           \
    \ |\n             |-------|                           |------------|\n       MMS\
    \ - Multimedia Messaging Service\n       UMS - Unified Messaging Service\n   \
    \    HLR - Home Location Register\n       DB  - Data Base\n       VAS - Value\
    \ Added Service\n       APP - Application\n   The LEMONADE profile provides an\
    \ enhanced IMAP mail retrieval\n   protocol suitable for use at interfaces MM1\
    \ and MM3.\n   In addition, if the wireless device uses a LEMONADE-enhanced IMAP\n\
    \   user agent, the enhanced IMAP protocol can be used to access Internet\n  \
    \ mail directly, as below.\n                   3GPP MMS Reference Architecture\
    \ (subset)\n            |---------|                          |------------|\n\
    \   wireless ||-------||                          |            |\n    device \
    \ || IMAP  ||                          |            |<- MM2 ->\n            ||\
    \ USER  ||                          |            |---------\n            || AGENT\
    \ ||                          |            | to\n            ||---^---||     \
    \                     |            | another\n            |----|---||        \
    \                  |            | MMS\n                 | LEMONADE Enhanced IMAP\
    \ and    |            | relay/\n             |---V----|          SMTP        \
    \    |            | server\n      e.g.,  |        |                          |\
    \            |\n      Email, |EXTERNAL|                          |           \
    \ |\n      Fax, or| SERVER |--------------------------|            |\n      UMS\
    \    |        |<-        MM3           ->|            |\n             |--------|\
    \                          |            |\n                                  \
    \               |            |\n             |---------|                     \
    \    |            |\n             |\"FOREIGN\"|                         |    \
    \        |\n             | MMS     |-------------------------|            |\n\
    \             | relay/  |<-       MM4           ->|            |\n           \
    \  | server  |                         |            |\n             |---------|\
    \                         |            |\n                                   \
    \              |    MMS     |\n             |-------|                        \
    \   |relay/server|\n             |       |                           |       \
    \     |\n             |  HLR  |---------------------------|            |\n   \
    \          |       |<-         MM5           ->|            |\n             |-------|\
    \                           |            |\n                                 \
    \                |            |\n             |-------|                      \
    \     |            |\n             |  MMS  |                           |     \
    \       |\n             |  USER |---------------------------|            |\n \
    \            |  DBs  |<-         MM6           ->|            |\n            \
    \ |-------|                           |            |\n                       \
    \                          |            |\n             |-------|            \
    \               |            |\n             |  MMS  |                       \
    \    |            |\n             |  VAS  |---------------------------|      \
    \      |\n             |  APPs |<-         MM7           ->|            |\n  \
    \           |-------|                           |------------|\n       MMS - Multimedia\
    \ Messaging Service\n       UMS - Unified Messaging Service\n       HLR - Home\
    \ Location Register\n       DB  - Data Base\n       VAS - Value Added Service\n\
    \       APP - Application\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   Security will be a very important part of enhanced\
    \ messaging.  The\n   goal, wherever possible, is to preserve the semantics of\
    \ existing\n   messaging systems and to meet the (existing) expectations of users\n\
    \   with respect to security and reliability.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [1]  Bradner, S., \"Key words for use in RFCs\
    \ to Indicate Requirement\n        Levels\", BCP 14, RFC 2119, March 1997.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [2]   Crocker, D., \"Standard for the format\
    \ of ARPA Internet text\n         messages\", STD 11, RFC 822, August 1982.\n\
    \   [3]   Moore, K., \"Simple Mail Transfer Protocol (SMTP) Service\n        \
    \ Extension for Delivery Status Notifications (DSNs)\", RFC 3461,\n         January\
    \ 2003.\n   [4]   Myers, J. and M. Rose, \"Post Office Protocol - Version 3\"\
    , STD\n         53, RFC 1939, May 1996.\n   [5]   Freed, N. and N. Borenstein,\
    \ \"Multipurpose Internet Mail\n         Extensions (MIME) Part One: Format of\
    \ Internet Message Bodies\",\n         RFC 2045, November 1996.\n   [6]   Freed,\
    \ N. and N. Borenstein, \"Multipurpose Internet Mail\n         Extensions (MIME)\
    \ Part Two: Media Types\", RFC 2046, November\n         1996.\n   [7]   Moore,\
    \ K., \"MIME (Multipurpose Internet Mail Extensions) Part\n         Three: Message\
    \ Header Extensions for Non-ASCII Text \", RFC\n         2047, November 1996.\n\
    \   [8]   Freed, N., Klensin, J., and J. Postel, \"Multipurpose Internet\n   \
    \      Mail Extensions (MIME) Part Four: Registration Procedures\", BCP\n    \
    \     13, RFC 2048, November 1996.\n   [9]   Freed, N. and N. Borenstein, \"Multipurpose\
    \ Internet Mail\n         Extensions (MIME) Part Five: Conformance Criteria and\n\
    \         Examples\", RFC 2049, November 1996.\n   [10]  Crispin, M., \"INTERNET\
    \ MESSAGE ACCESS PROTOCOL - VERSION\n         4rev1\", RFC 3501, March 2003.\n\
    \   [11]  Myers, J., \"IMAP4 QUOTA extension\", RFC 2087, January 1997.\n   [12]\
    \  Hansen, T. and G. Vaudreuil, \"Message Disposition\n         Notification\"\
    , RFC 3798, May 2004.\n   [13]  Vaudreuil, G. and G. Parsons, \"Voice Profile\
    \ for Internet Mail\n         - version 2 (VPIMv2)\", RFC 3801, June 2004.\n \
    \  [14]  Vaudreuil, G. and G. Parsons, \"Toll Quality Voice - 32 kbit/s\n    \
    \     Adaptive Differential Pulse Code Modulation (ADPCM) MIME Sub-\n        \
    \ type Registration\", RFC 3802, June 2004.\n   [15]  Vaudreuil, G. and G. Parsons,\
    \ \"Content Duration MIME Header\n         Definition\", RFC 3803, June 2004.\n\
    \   [16]  Buckley, R., Venable, D., McIntyre, L., Parsons, G., and J.\n      \
    \   Rafferty, \"File Format for Internet Fax\", RFC 3949, February\n         2005.\n\
    \   [17]  Parsons, G. and J. Rafferty, \"Tag Image File Format (TIFF) -\n    \
    \     image/tiff MIME Sub-type Registration\", RFC 3302, September\n         2002.\n\
    \   [18]  Allocchio, C., \"Minimal GSTN address format in Internet Mail\",\n \
    \        RFC 3191, October 2001.\n   [19]  Allocchio, C., \"Minimal FAX address\
    \ format in Internet Mail\",\n         RFC 3192, October 2001.\n   [20]  Toyoda,\
    \ K., Ohno, H., Murai, J., and D. Wing, \"A Simple Mode of\n         Facsimile\
    \ Using Internet Mail\", RFC 3965, December 2004.\n   [21]  Parsons, G. and J.\
    \ Rafferty, \"Tag Image File Format (TIFF) - F\n         Profile for Facsimile\"\
    , RFC 2306, March 1998.\n   [22]  Gellens, R. and J. Klensin, \"Message Submission\"\
    , RFC 2476,\n         December 1998.\n   [23]  Masinter, L. and D. Wing, \" Extended\
    \ Facsimile Using Internet\n         Mail\", RFC 2532, March 1999.\n   [24]  Fielding,\
    \ R., Gettys, J., Mogul, J., Frystyk, H., Masinter, L.,\n         Leach, P., and\
    \ T. Berners-Lee, \"Hypertext Transfer Protocol --\n         HTTP/1.1\", RFC 2616,\
    \ June 1999.\n   [25]  Klensin, J., \"Simple Mail Transfer Protocol\", RFC 2821,\
    \ April\n         2001.\n   [26]  Resnick, P., \"Internet Message Format\", RFC\
    \ 2822, April 2001.\n   [27]  Burger, E., Candell, E., Eliot, C., and G. Klyne,\
    \ \"Message\n         Context for Internet Mail\", RFC 3458, January 2003.\n \
    \  [28]  Burger, E., \"Critical Content Multi-purpose Internet Mail\n        \
    \ Extensions (MIME) Parameter\", RFC 3459, January 2003.\n   [29]  Gahrns, M.,\
    \ \"IMAP4 Multi-Accessed Mailbox Practice\", RFC 2180,\n         July 1997.\n\
    \   [30]  Candell, E., \"High-Level Requirements for Internet Voice Mail\",\n\
    \         RFC 3773, June 2004.\n   [31]  Nerenberg, L., \"IMAP4 Binary Content\
    \ Extension\", RFC 3516,\n         April 2003.\n   [32]  Nerenberg, \"IMAP4 Channel\
    \ Transport Mechanism\", Work in\n         Progress, November 2001.\n   [33] \
    \ Toyoda, K. and D. Crocker, \"SMTP Service Extensions for Fax\n         Content\
    \ Negotiation\", Work in Progress, February 2003.\n   [34]  McRae, S. and G. Parsons,\
    \ \"Internet Voice Messaging (IVM)\", RFC\n         4239, November 2005.\n   [35]\
    \  Murchison, K. and L. Greenfield, \"LMTP Service Extension for\n         Ignoring\
    \ Recipient Quotas\", Work in Progress, June 2002.\n   [36]  Crispin, M., \"Message\
    \ Submission\", Work in Progress,\n         February 2004.\n   [37]  Newman, C.,\
    \ \"Message Submission with Composition\", Work in\n         Progress, February\
    \ 2004.\n   [38]  Gellens, R., \"IMAP Message Submission\", Work in Progress,\n\
    \         December 2003.\n   [39]  Resnick, P., \"Internet Message Access Protocol\
    \ (IMAP) CATENATE\n         Extension\", Work in Progress, December 2003.\n  \
    \ [40]  Crispin, M. and C. Newman, \"Internet Message Access (IMAP) -\n      \
    \   URLAUTH Extension\", Work in Progress, July 2004.\n   [41]  Newman, D., \"\
    Message Submission BURL Extension\", Work in\n         Progress, July 2004.\n\
    \   [42]  Crocker, D., \"Internet Mail Architecture\", Work in Progress,\n   \
    \      July 2004.\n   [43]  Leuca, I., \"Multimedia Messaging Service\", Presentation\
    \ to the\n         VPIM WG, IETF53 Proceedings , April 2002.\n   [44]  Mahy, R.,\
    \ \"A Message Summary and Message Waiting Indication\n         Event Package for\
    \ the Session Initiation Protocol (SIP)\", RFC\n         3842, August 2004.\n\
    \   [45]  Shapira, N. and E. Aloni, \"Simple Notification and Alarm\n        \
    \ Protocol (SNAP)\", Work in Progress, December 2001.\n   [46]  Vaudreuil, G.,\
    \ \"Messaging profile for telephone-based Messaging\n         clients\", Work\
    \ in Progress, February 2002.\n   [47]  Burger, E., \"Internet Unified Messaging\
    \ Requirements\", Work in\n         Progress, February 2002.\n   [48]  OMA, \"\
    Multimedia Messaging Service Architecture Overview\n         Version 1.1\", Open\
    \ Mobile Alliance (OMA) OMA-WAP-MMS-ARCH-v1_1-\n         20021101-C, November\
    \ 2002.\n   [49]  OMA, \"Push Architectural Overview\", Open Mobile Alliance\n\
    \         (OMA) WAP-250-PushArchOverview-20010703-a, July 2001.\n   [50]  OMA,\
    \ \"Push Access Protocol Specification\", Open Mobile Alliance\n         (OMA)\
    \ WAP-247-PAP-20010429-a, April 2001.\n   [51]  OMA, \"Push Proxy Gateway Service\
    \ Specification\", Open Mobile\n         Alliance (OMA) WAP-249-PPGService-20010713a,\
    \ July 2001.\n   [52]  OMA, \"Multimedia Messaging Service; Client Transactions\
    \ Version\n         1.1\", Open Mobile Alliance\n         (OMA) OMA-WAP-MMS-CTR-v1_1-20021031-C,\
    \ October 2002.\n   [53]  OMA, \"Multimedia Messaging Service; Encapsulation Protocol\n\
    \         Version 1.1\", Open Mobile Alliance (OMA) OMA-MMS-ENC-v1_1-\n      \
    \   20021030-C, October 2002.\n   [54]  OMA, \"User Agent Profile, Version 1.1\"\
    , Open Mobile Alliance\n         (OMA) OMA-UAProf-v1_1-20021212-C, December 2002.\n\
    \   [55]  OMA, \"Email Notification Version 1.0\", Open Mobile Alliance\n    \
    \     (OMA) OMA-EMN-v1_0-20021031-C, October 2002.\n   [56]  3GPP, \"Third Generation\
    \ Partnership Project; Technical\n         Specification Group Services and System\
    \ Aspects; Service\n         aspects; Functional description; Stage 1 Multimedia\
    \ Messaging\n         Service\", 3GPP TS 22.140, 2001.\n   [57]  3GPP, \"Third\
    \ Generation Partnership Project; Technical\n         Specification Group Terminals;\
    \ Multimedia Messaging Service\n         (MMS); Functional description; Stage\
    \ 2\", 3GPP TS 23.140, 2001.\n   [58]  3GPP2, \"Short Message Service (SMS)\"\
    , 3GPP2 TSG C.S0015-0,\n         December 1999.\n   [59]  3GPP2, \"Enhanced Message\
    \ Service (EMS) Stage 1 Description\",\n         3GPP2 TSG S.R0051-0 v1.0,  July\
    \ 2001.\n   [60]  CCITT, \"Recommendations Q.700-Q.716: Specifications of\n  \
    \       Signalling System No. 7\", CCITT White Book, Volume VI,\n         Fascicle\
    \ VI.7.\n   [61]  CCITT, \"Recommendations Q.721-Q.766: Specifications of\n  \
    \       Signalling System No.7\", CCITT White Book, Volume VI,\n         Fascicle\
    \ VI.8.\n   [62]  ITU, \"E.164: The international public telecommunication\n \
    \        numbering plan\", ITU-T Recommendations Series E, May 1997.\n   [63]\
    \  ITU, \"Specifications of Signalling System Number 7\",  ITU White\n       \
    \  Book,  ITU-T Recommendation Q.763.\n   [64]  ITU, \"Interface between Data\
    \ Terminal Equipment (DTE) and Data\n         Circuit-terminating Equipment (DCE)\
    \ for terminals operating in\n         the packet mode and connected to public\
    \ data networks by\n         dedicated circuit\",  ITU-T Recommendation X.25,\
    \ October 1996.\n   [65]  BELLCORE, \"Specifications of Signalling System Number\
    \ 7\", GR-\n         246-CORE Issue 1, December 1994.\n"
- title: Appendix A.  Contributors
  contents:
  - "Appendix A.  Contributors\n   Eric Burger\n   Brooktrout Technology, Inc.\n \
    \  18 Keewaydin Dr.\n   Salem, MA  03079\n   USA\n   Phone: +1 603 890-7587\n\
    \   EMail: eburger@brooktrout.com\n   Yair Grosu\n   Comverse\n   29 Habarzel\
    \ St.\n   Tel-Aviv  69710\n   Israel\n   EMail: Yair.Grosu@comverse.com\n   Glenn\
    \ Parsons\n   Nortel Networks\n   P.O. Box 3511 Station C\n   Ottawa, ON K1Y 4H7\n\
    \   Canada\n   Phone: +1 613 763-7582\n   EMail: gparsons@nortelnetworks.com\n\
    \   Milt Roselinsky\n   Openwave Systems, Inc.\n   530 E. Montecito St.\n   Santa\
    \ Barbara, CA  93103\n   USA\n   Phone: +1 805 884-6207\n   EMail: milt.roselinsky@openwave.com\n\
    \   Dan Shoshani\n   Comverse\n   29 Habarzel St.\n   Tel-Aviv 69710\n   Israel\n\
    \   EMail: Dan.Shoshani@comverse.com\n   Alan K. Stebbens\n   Openwave Systems,\
    \ Inc.\n   530 E. Montecito St.\n   Santa Barbara, CA 93103\n   USA\n   Phone:\
    \ +1 805 884-3162\n   EMail: alan.stebbens@openwave.com\n   Gregory M. Vaudreuil\n\
    \   Lucent Technologies\n   7291 Williamson Rd.\n   Dallas, TX 75214\n   USA\n\
    \   Phone: +1 214 823-9325\n   EMail: GregV@ieee.org\n"
- title: Appendix B.  Acknowledgements
  contents:
  - "Appendix B.  Acknowledgements\n   Ari Erev and Noam Shapira (both from Comverse)\
    \ contributed\n   substantial requirements for IMAP to support a telephone-based\
    \ (TUI)\n   messaging client.  Meir Mendelovich (Comverse) helped in merging the\n\
    \   wireless requirements section.  Benjamin Ellsworth (Openwave)\n   contributed\
    \ to mobile messaging architectures and requirements.\n   Yaacov (Jerry) Weingarten\
    \ (Comverse) and Stephane Maes (Oracle)\n   provided detailed comments on the\
    \ final document.\n"
- title: 'Appendix C.  IAB Note: Unified Notification Protocol Considerations'
  contents:
  - "Appendix C.  IAB Note: Unified Notification Protocol Considerations\n   Note:\
    \ dated July 10, 2003\n   This note was formulated in response to an informal\
    \ IESG request to\n   look at the architectural issues surrounding a unified notification\n\
    \   protocol.  The following materials were used as reference:\n      * draft-dusseault-s2s-event-reqs-00.txt\
    \ (notification\n      requirements)\n      * meeting notes for the LEMONADE WG\
    \ from IETF 56.\n      * draft-shapira-snap-05.txt (protocol design for SNAP which\
    \ has\n      some aspects of a generic notification protocol)\n      * the LEMONADE\
    \ WG charter\n      * Recent email on the Lemonade list\n      * A few presentations\
    \ from the 1998 UCI workshop on Internet-wide\n      notification\n      * The\
    \ Web pages for KnowHow, a company founded by Rohit Khare\n      which has a proprietary\
    \ Internet-wide notification system.\n         Thanks to Lisa Dusseault for providing\
    \ these references.\n   Note that this opinion does not represent IAB concensus,\
    \ it is just\n   the opinion of the author after having reviewed the references.\n\
    \   After the reviewing the material, it seemed that the same kinds of\n   functionality\
    \ are being asked from a generic notification protocol as\n   are asked of desktop\
    \ application integration mechanisms, like OLAY/\n   COM on Windows or like Tooltalk\
    \ was on Solaris, but at the level of\n   messaging across the Internet.  The\
    \ desire is that various\n   distributed applications with different application\
    \ specific\n   mechanisms should be able to interoperate without having an n x\
    \ n\n   problem of having each application interact with each other\n   application.\
    \  The cannonical example, which is in a presentation by\n   Lisa Dusseault to\
    \ LEMONADE from IETF 56, is sending a notification\n   from one application, like\
    \ XMPP Instant Messaging, and having it\n   delivered on whatever device the recipient\
    \ happened to be using at\n   the time, like SMS on a cell phone.\n   The usual\
    \ problem with application intergration mechanisms on the\n   desktop is how to\
    \ get the various applications to actually use the\n   mechanism.  For Windows,\
    \ this is relatively easy, since most\n   application developers see major value-added\
    \ in their applications\n   being able to play nicely with Microsoft Office. \
    \ For Tooltalk,\n   unfortunatly, Solaris developers didn't see the 10x improvement,\
    \ and\n   so it was not used outside of Sun's internally maintained\n   applications\
    \ and a few flagship applications like Framemaker.  If the\n   generic notification\
    \ mechanism requires application developers and\n   other notification protocol\
    \ designers to make a major effort to\n   utilize it, including modifying their\
    \ applications or protocols in\n   some way, the protocol could become \"just\
    \ another notification\n   mechanism\" rather than a unifying device, because\
    \ most application\n   developers and other protocol designers could ignore it.\n\
    \   So the first architectural consideration is how do clients of a\n   particular\
    \ protocol (and the word \"client\" is used here to mean \"any\n   entity using\
    \ the protocol\", they may peers or they may be\n   client/server) actually utilize\
    \ the generic notification protocol?\n   Is there some code change required in\
    \ the client or can a legacy\n   client interoperate without change?\n   If you\
    \ look at Fig. 1 in draft-shapira-snap-05.txt, the answer seems\n   to be that\
    \ the notifying client uses the generic protocol, SNAP in\n   this case, to a\
    \ functional entity (server? module on the receiving\n   client?) called the \"\
    Notification Service\" that processes the generic\n   notification into an application\
    \ specific notification and sends that\n   notification to the client.  From this\
    \ figure it looks as if the\n   notifying client would require modification but\
    \ the receiving client\n   wouldn't.\n   Another characteristic of application\
    \ integration mechansims is that\n   they typically focus on very simple operations,\
    \ the semantics of\n   which are shared between different applications.  Examples\
    \ are\n   \"here's a rectangle, display yourself in it\" or \"put this styled\
    \ text\n   object into the clipboard\", and applications agree on what styled\n\
    \   text means.  More complicated semantics are hard to share because\n   each\
    \ application has its own particular twist on the meaning of a\n   particular\
    \ sequence of operations on a collection of objects.  The\n   result is a \"least\
    \ common denominator\" collection of integration\n   mechanisms, primarily focussed\
    \ on display integration and, to a\n   lesser extent, cut and paste integration.\n\
    \   In the context of a generic notification protocol, this raises\n   several\
    \ possible issues.  One is addressing, which is identified\n   draft-dusseault-s2s-event-reqs-00.txt,\
    \ but in a sense this is the\n   easiest to resolve, by using existing and perhaps\
    \ newly defined URIs.\n   A more complex problem is matching the semantics of\
    \ what\n   preconditions constitute the trigger for an event across different\n\
    \   application notification mechanisms.  This is of course necessary for\n  \
    \ translating notifications between the different event notification\n   mechanisms\
    \ and the generic mechanism, but, more problematically, it\n   is also required\
    \ for a subscription service whereby subscriptions can\n   be made to filter events\
    \ using the generic notification mechanism and\n   the subscriptions can be translated\
    \ to different application specific\n   mechanisms.  Any language for expressing\
    \ generic subscriptions is\n   unlikely to support expressing the fine points\
    \ in the different\n   application notification semantics.  Note that SNAP does\
    \ not seem to\n   support a subscription service so perhaps this isn't an issue\
    \ for\n   SNAP.\n   Another architectural issue, which was discussed earlier this\
    \ year on\n   the LEMONADE list w.r.t. some other topics, is gatewaying.  The\n\
    \   cannonical example above (message sent using XMPP and arriving via\n   SMS\
    \ on a cell phone) is actually a gateway example, because it would\n   require\
    \ translation between an IP-based messaging mechanism (XMPP) to\n   a PSTN based\
    \ mechanism (SMS).  The problem with using a unified\n   notification mechanism\
    \ for this purpose is that if there are other\n   functions common between the\
    \ two, it is likely that a gateway will be\n   built anyway.  In fact, one of\
    \ the work items for LEMONADE is to\n   investigate such gateways.  The value\
    \ of a generic notification\n   mechanism therefore needs to be assessed in the\
    \ light of this.\n   These are the primary architectural issues, but there are\
    \ a few\n   others that need consideration in any major system development\n \
    \  effort.  End to end security is one,\n   draft-dusseault-s2s-event-reqs-00.txt\
    \ talks about this quite\n   extensively, so it won't be repeated here.  The major\
    \ issue is how to\n   ensure that the end to end security properties are maintained\
    \ in the\n   face of movement of the notification through the generic intermediary\n\
    \   protocol.  Another issue is scalability.  Peer to peer v.s. server\n   based\
    \ mechanisms have implications for how scalable the notification\n   mechanism\
    \ would be, and this needs consideration.  Extensibility\n   needs careful consideration.\
    \  What is required to integrate a new\n   application?  Ideally, with time, application\
    \ developers will stop\n   \"rolling their own\" notification service and simply\
    \ use the generic\n   service, but this ideal may be extremely hard to achieve,\
    \ and may\n   depend to a large extent on market acceptance.\n   Finally, there\
    \ are some considerations that aren't architectural but\n   may impact the ultimate\
    \ success of a generic notification protocol,\n   in the sense that the protocol\
    \ becomes widely deployed and used.  The\n   author's experience is that IETF\
    \ has not had particular success in\n   introducing mechanisms that unify or supplant\
    \ existing proprietary\n   mechanisms unless strong vendor and service provider\
    \ by-in is there.\n   Two examples are instant messaging and service discovery.\
    \  With\n   instant messaging, it seems that a standarized, unified instant\n\
    \   messaging protocol has been delayed by the lack of committment from\n   major\
    \ service providers.  With service discovery, weak commitment\n   from vendors\
    \ has resulted in the continued introduction of vendor\n   specific service discovery\
    \ solutions even after an IETF standard is\n   in place.  The situation with service\
    \ discovery (with which the\n   author is most familiar) resulted from a lack\
    \ of major vendor\n   committment during the end phases of the standarization\
    \ process.\n   Applying these lessions to a generic notification protocol, having\n\
    \   important players with proprietary notification protocols on board\n   and\
    \ committed until the conclusion of the design process will be\n   crucial.  Major\
    \ committment is needed from various application\n   notification protocols before\
    \ a generic mechanism could succeed.\n   Given the amount of time and effort required\
    \ in any IETF\n   standardization work, assessing these with an objective eye\
    \ is\n   critical, otherwise, regardless of how technically well designed the\n\
    \   protocol is, deployment success may be lacking.  Having an elegently\n   design\
    \ solution that nobody deploys is an outcome that might be wise\n   to avoid.\n\
    \   James Kempf\n   July 2003\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Jin Kue Wong (Editor)\n   Nortel Networks\n   P.O. Box 3511\
    \ Station C\n   Ottawa, ON  K1Y 4H7\n   Canada\n   Phone: +1 613 763-2515\n  \
    \ EMail: j.k.wong@sympatico.ca\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
