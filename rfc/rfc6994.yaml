- title: __initial_text__
  contents:
  - '                 Shared Use of Experimental TCP Options

    '
- title: Abstract
  contents:
  - "Abstract\n   This document describes how the experimental TCP option codepoints\n\
    \   can concurrently support multiple TCP extensions, even within the\n   same\
    \ connection, using a new IANA TCP experiment identifier.  This\n   approach is\
    \ robust to experiments that are not registered and to\n   those that do not use\
    \ this sharing mechanism.  It is recommended for\n   all new TCP options that\
    \ use these codepoints.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6994.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Conventions Used in This Document ...............................3\n  \
    \ 3. TCP Experimental Option Structure ...............................4\n    \
    \  3.1. Selecting an ExID ..........................................5\n      3.2.\
    \ Impact on TCP Option Processing ............................6\n   4. Reducing\
    \ the Impact of False Positives ..........................7\n   5. Migration to\
    \ Assigned Options ...................................7\n   6. Rationale .......................................................8\n\
    \   7. Security Considerations .........................................9\n  \
    \ 8. IANA Considerations .............................................9\n   9.\
    \ References .....................................................10\n      9.1.\
    \ Normative References ......................................10\n      9.2. Informative\
    \ References ....................................10\n   10. Acknowledgments ...............................................11\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   TCP includes options to enable new protocol capabilities\
    \ that can be\n   activated only where needed and supported [RFC793].  The space\
    \ for\n   identifying such options is small -- 256 values, of which 30 are\n \
    \  assigned at the time of this document's publication [IANA].  Two of\n   these\
    \ codepoints (253, 254) are allocated to support experiments\n   [RFC4727].  These\
    \ values are intended for testing purposes or for use\n   when an assigned codepoint\
    \ is either not warranted or available,\n   e.g., based on the maturity status\
    \ of the defined capability (i.e.,\n   Experimental or Informational, rather than\
    \ Standards Track).\n   Here, the term \"experimental TCP options\" refers to\
    \ options that use\n   the TCP experimental option codepoints [RFC4727].  Such\
    \ experiments\n   can be described in an RFC of any status (e.g., Experimental,\n\
    \   Informational, etc.) and are intended to be used in controlled\n   environments\
    \ and are allowed in public deployments (when not enabled\n   as default [RFC3692]).\
    \  Nothing prohibits the deployment of multiple\n   experiments in the same environment\
    \ -- controlled or public.\n   Further, some protocols are specified in Experimental\
    \ or\n   Informational RFCs, which either include parameters or design choices\n\
    \   not yet understood or which might not be widely deployed [RFC2026].\n   Typically,\
    \ these TCP options are not eligible to receive assigned\n   codepoints [RFC2780],\
    \ so they need a way to share their use of the\n   experimental codepoints.\n\
    \   There is currently no mechanism to support shared use of the TCP\n   experimental\
    \ option codepoints, either by different experiments on\n   different connections\
    \ or for more than two experimental options in\n   the same connection.  Experimental\
    \ options 253 and 254 are already\n   deployed in operational code to support\
    \ an early version of TCP\n   authentication.  Option 253 is also documented for\
    \ the experimental\n   TCP Cookie Transaction option [RFC6013].  This shared use\
    \ results in\n   collisions in which a single codepoint can appear multiple times\
    \ in a\n   single TCP segment and for which each use is ambiguous.\n   Other codepoints\
    \ have been used without assignment (known as\n   \"squatting\"), notably 31-32\
    \ (TCP cookie transactions, as originally\n   distributed and in its API doc)\
    \ and 76-78 (tcpcrypt) [Bi11] [Si11].\n   Commercial products reportedly also\
    \ use unassigned options 33, 69-70,\n   and 76-78.  Even though these uses are\
    \ unauthorized, they currently\n   impact legitimate assignees.\n   Both such\
    \ misuses (squatting on both experimental and assigned\n   codepoints) are expected\
    \ to continue, but there are several\n   approaches that can alleviate the impact\
    \ on cooperating protocol\n   designers.  One proposal relaxes the requirements\
    \ for assignment of\n   TCP options, allowing them to be assigned more readily\
    \ for protocols\n   that have not been standardized through the IETF process [RFC5226].\n\
    \   Another proposal assigns a larger pool to the TCP experiment option\n   codepoints\
    \ and manages their sharing through IANA coordination\n   [Ed11].\n   The approach\
    \ proposed in this document does not require additional\n   TCP option codepoints\
    \ and is robust to those who choose either not to\n   support it or not to register\
    \ their experiments.  The solution adds a\n   field to the structure of the experimental\
    \ TCP option.  This field is\n   populated with an \"experiment identifier\" (ExID)\
    \ defined as part of a\n   specific option experiment.  The ExID helps reduce\
    \ the probability of\n   a collision of independent experimental uses of the same\
    \ option\n   codepoint, both for those who follow this document (using registered\n\
    \   ExIDs) and those who do not (squatters who either ignore this\n   extension\
    \ or do not register their ExIDs).\n   The solution proposed in this document\
    \ is recommended for all new\n   protocols that use TCP experimental option codepoints.\
    \  The\n   techniques described here may also enable shared use of other\n   experimental\
    \ codepoints, but that issue is out of scope for this\n   document.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n   In this document, these words will appear with that\
    \ interpretation\n   only when in ALL CAPS.  Lowercase uses of these words are\
    \ not to be\n   interpreted as carrying RFC 2119 significance.\n   In this document,\
    \ the characters \">>\" preceding an indented line(s)\n   indicates a compliance\
    \ requirement statement using the key words\n   listed above.  This convention\
    \ aids reviewers in quickly identifying\n   or finding the explicit compliance\
    \ requirements of this RFC.\n"
- title: 3.  TCP Experimental Option Structure
  contents:
  - "3.  TCP Experimental Option Structure\n   TCP options have the current common\
    \ structure [RFC793], in which the\n   first byte is the codepoint (Kind) and\
    \ the second byte is the length\n   of the option in bytes (Length):\n       \
    \             0          1          2          3\n                    01234567\
    \ 89012345 67890123 45678901\n                   +--------+--------+--------+--------+\n\
    \                   |  Kind  | Length |       ...       |\n                  \
    \ +--------+--------+--------+--------+\n                   |    ...\n       \
    \            +--------\n                     Figure 1.  TCP Option Structure [RFC793]\n\
    \   This document extends the option structure for experimental\n   codepoints\
    \ (253, 254) with an experiment identifier (ExID), which is\n   either 2 or 4\
    \ bytes in length.  The ExID is used to differentiate\n   experiments and is the\
    \ first field after Kind and Length, as follows:\n                    0      \
    \    1          2          3\n                    01234567 89012345 67890123 45678901\n\
    \                   +--------+--------+--------+--------+\n                  \
    \ |  Kind  | Length |       ExID      |\n                   +--------+--------+--------+--------+\n\
    \                   |  option contents...\n                   +--------+--------+--------+---\n\
    \               Figure 2.  TCP Experimental Option with a 16-bit ExID\n      \
    \              0          1          2          3\n                    01234567\
    \ 89012345 67890123 45678901\n                   +--------+--------+--------+--------+\n\
    \                   |  Kind  | Length |       ExID      |\n                  \
    \ +--------+--------+--------+--------+\n                   |   ExID (con't) \
    \ |  option contents...\n                   +--------+--------+--------+---\n\
    \               Figure 3.  TCP Experimental Option with a 32-bit ExID\n   This\
    \ mechanism is encouraged for all TCP options that are not yet\n   eligible for\
    \ assigned codepoints:\n   >> Protocols requiring new TCP option codepoints that\
    \ are not\n      eligible for assigned values SHOULD use the existing TCP\n  \
    \    experimental option codepoints (253, 254) with ExIDs as described\n     \
    \ in this document.\n   This mechanism is encouraged for all TCP options using\
    \ the current\n   experimental codepoints in controlled environments:\n   >> All\
    \ protocols using the TCP experimental option codepoints (253,\n      254), even\
    \ those deployed in controlled environments, SHOULD use\n      ExIDs as described\
    \ in this document.\n   This mechanism is required for all TCP options using the\
    \ current\n   experimental codepoints that are publicly deployed, whether enabled\n\
    \   by default or not:\n   >> All protocols using the TCP experimental option\
    \ codepoints (253,\n      254) that are deployed outside controlled environments,\
    \ such as in\n      the public Internet, MUST use ExIDs as described in this document.\n\
    \   Once a TCP option uses the mechanism in this document, registration\n   of\
    \ the ExID with IANA is required:\n   >> All protocols using ExIDs as described\
    \ in this document MUST\n      register those ExIDs with IANA.\n      Applicants\
    \ register their desired ExID by contacting IANA [IANA].\n"
- title: 3.1.  Selecting an ExID
  contents:
  - "3.1.  Selecting an ExID\n   ExIDs are selected at design time, when the protocol\
    \ designer first\n   implements or specifies the experimental option.  ExIDs can\
    \ be either\n   16 bits or 32 bits.  In both cases, the value is stored in the\
    \ header\n   in network-standard (big-endian) byte order.  ExIDs combine\n   properties\
    \ of IANA registered codepoints with \"magic numbers\".\n   >> All ExIDs MUST\
    \ be either 16 bits or 32 bits long.\n   Use of the ExID, whether 16 bit or 32\
    \ bit, helps reduce the\n   probability of a false positive collision with those\
    \ who either do\n   not register their experiment or who do not implement this\
    \ mechanism.\n   In order to conserve TCP option space, either for use within\
    \ a\n   specific option or to be available for other options:\n   >> Options implementing\
    \ the mechanism of this document SHOULD use\n      16-bit ExIDs, except where\
    \ explicitly motivating the need for\n      32-bit ExIDs, e.g., to avoid false\
    \ positives or maintain alignment\n      with an expected future assigned codepoint.\n\
    \   ExIDs are registered with IANA using \"first come, first served\"\n   (FCFS)\
    \ priority based on the first two bytes.  Those two bytes are\n   thus sufficient\
    \ to interpret which experimental option is contained\n   in the option field.\n\
    \   >> All ExIDs MUST be unique based on their first 16 bits.\n   The second two\
    \ bytes serve as a \"magic number\".  A magic number is a\n   self-selected codepoint\
    \ whose primary value is its unlikely collision\n   with values selected by others.\
    \  Magic numbers are used in other\n   protocols, e.g., bootstrap protocol (BOOTP)\
    \ [RFC951] and DHCP\n   [RFC2131].\n   Using the additional magic number bytes\
    \ helps the option contents\n   have the same byte alignment in the TCP header\
    \ as they would have if\n   (or when) a conventional (non-experiment) TCP option\
    \ codepoint is\n   assigned.  Use of the same alignment reduces the potential\
    \ for\n   implementation errors, especially in using the same word-alignment\n\
    \   padding, if the same software is later modified to use a conventional\n  \
    \ codepoint.  Use of the longer, 32-bit ExID further decreases the\n   probability\
    \ of such a false positive compared to those using shorter,\n   16-bit ExIDs.\n\
    \   Use of the ExID does consume TCP option space but enables concurrent\n   use\
    \ of the experimental codepoints and provides protection against\n   false positives,\
    \ leaving less space for other options (including\n   other experiments).  Use\
    \ of the longer, 32-bit ExID consumes more\n   space, but provides more protection\
    \ against false positives.\n"
- title: 3.2.  Impact on TCP Option Processing
  contents:
  - "3.2.  Impact on TCP Option Processing\n   The ExID number is considered part\
    \ of the TCP option, not the TCP\n   option header.  The presence of the ExID\
    \ increases the effective\n   option Length field by the size of the ExID.  The\
    \ presence of this\n   ExID is thus transparent to implementations that do not\
    \ support TCP\n   options.\n   During TCP processing, ExIDs in experimental options\
    \ are matched\n   against the ExIDs for each implemented protocol.  The remainder\
    \ of\n   the option is specified by the particular experimental protocol.\n  \
    \ >> Experimental options with ExIDs that do not match implemented\n      protocols\
    \ MUST be ignored.\n   The ExID mechanism must be coordinated during connection\n\
    \   establishment, just as with any TCP option.\n   >> TCP ExID, if used in any\
    \ TCP segment of a connection, MUST be\n      present in TCP SYN segments of that\
    \ connection.\n   >> TCP experimental option ExIDs, if used in any TCP segment\
    \ of a\n      connection, SHOULD be used in all TCP segments of that connection\n\
    \      in which any experimental option is present.\n   Use of an ExID uses additional\
    \ space in the TCP header and requires\n   additional protocol processing by experimental\
    \ protocols.  Because\n   these are experiments, neither consideration is a substantial\n\
    \   impediment; a finalized protocol can avoid both issues with the\n   assignment\
    \ of a dedicated option codepoint later.\n"
- title: 4.  Reducing the Impact of False Positives
  contents:
  - "4.  Reducing the Impact of False Positives\n   False positives occur where the\
    \ registered ExID of an experiment\n   matches the value of an option that does\
    \ not use ExIDs.  Such\n   collisions can cause an option to be interpreted by\
    \ the incorrect\n   processing routine.  Use of checksums or signatures may help\
    \ an\n   experiment use the shorter ExID while reducing the corresponding\n  \
    \ increased potential for false positives.\n   >> Experiments that are not robust\
    \ to ExID false positives SHOULD\n      implement other detection measures, such\
    \ as checksums or minimal\n      digital signatures over the experimental options\
    \ they support.\n"
- title: 5.  Migration to Assigned Options
  contents:
  - "5.  Migration to Assigned Options\n   Some experiments may transition away from\
    \ being experimental and\n   become eligible for an assigned TCP option codepoint.\
    \  This document\n   does not recommend a specific migration plan to transition\
    \ from use\n   of the experimental TCP options/ExIDs to use of an assigned\n \
    \  codepoint.\n   However, once an assigned codepoint is allocated, use of an\
    \ ExID\n   represents unnecessary overhead.  As a result:\n   >> Once a TCP option\
    \ codepoint is assigned to a protocol, that\n      protocol SHOULD NOT continue\
    \ to use an ExID as part of that\n      assigned codepoint.\n   This document\
    \ does not recommend whether or how an implementation of\n   an assigned codepoint\
    \ can be backward compatible with use of the\n   experimental codepoint/ExID.\n\
    \   However, some implementers may be tempted to include both the\n   experimental\
    \ and assigned codepoint in the same segment, e.g., in a\n   SYN to support backward\
    \ compatibility during connection\n   establishment.  This is a poor use of limited\
    \ resources; so, to\n   ensure conservation of the TCP option space:\n   >> A\
    \ TCP segment MUST NOT contain both an assigned TCP option\n      codepoint and\
    \ a TCP experimental option codepoint for the same\n      protocol.\n   Instead,\
    \ a TCP that intends backward compatibility might send\n   multiple SYNs with\
    \ alternates of the same option and discard all but\n   the most desired successful\
    \ connection.  Although this approach may\n   resolve more slowly or require additional\
    \ effort at the endpoints, it\n   is preferable to excessively consuming TCP option\
    \ space.\n"
- title: 6.  Rationale
  contents:
  - "6.  Rationale\n   The ExIDs described in this document combine properties of\
    \ IANA\n   FCFS-registered values with magic numbers.  Although IANA FCFS\n  \
    \ registries are common, so too are those who either fail to register\n   or who\
    \ 'squat' by deliberately using codepoints that are assigned to\n   others.  The\
    \ approach in this document is intended to recognize this\n   reality and be more\
    \ robust to its consequences than would be a\n   conventional IANA FCFS registry.\n\
    \   Existing ID spaces were considered as ExIDs in the development of\n   this\
    \ mechanism, including IEEE Organizationally Unique Identifier\n   (OUI) and IANA\
    \ Private Enterprise Numbers (PENs) [IEEE802] [OUI]\n   [RFC1155].\n   OUIs are\
    \ 24-bit identifiers that are combined with 24 to 40 bits of\n   privately assigned\
    \ space to create identifiers that are commonly\n   assigned to a unique piece\
    \ of hardware.  OUIs are already longer than\n   the smaller ExID value, and obtaining\
    \ an OUI is costly (currently\n   $1,885.00 USD).  An OUI could be obtained for\
    \ each experiment, but\n   this could be considered expensive.  An OUI already\
    \ assigned to an\n   organization could be shared if extended (to support multiple\n\
    \   experiments within an organization), but this would either require\n   coordination\
    \ within an organization or an IANA registry; the former\n   is prohibitive, and\
    \ the latter is more complicated than having IANA\n   manage the entire space.\n\
    \   PENs were originally used in the Simple Network Management Protocol\n   (SNMP)\
    \ [RFC1157].  PENs are identifiers that can be obtained without\n   cost from\
    \ IANA [PEN].  Despite the current registry, the size of the\n   PEN assignment\
    \ space is currently undefined and has only recently\n   been proposed (as 32\
    \ bits) [IANA-PEN].  PENs are currently assigned\n   to organizations, and there\
    \ is no current process for assigning them\n   to individuals.  Finally, if the\
    \ PENs are 32 bits as expected, they\n   would be larger than needed in many cases.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   The mechanism described in this document is not\
    \ intended to enhance,\n   nor does it weaken the existing state of security for\
    \ TCP option\n   processing.\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   IANA has created a \"TCP Experimental Option Experiment\
    \ Identifiers\n   (TCP ExIDs)\" registry.  The registry records both 16-bit and\
    \ 32-bit\n   ExIDs, as well as a reference (description, document pointer, or\n\
    \   assignee name and e-mail contact) for each entry.  ExIDs are\n   registered\
    \ for use with both of the TCP experimental option\n   codepoints, i.e., with\
    \ TCP options with values of 253 and 254.\n   Entries are assigned on a First\
    \ Come, First Served (FCFS) basis\n   [RFC5226].  The registry operates FCFS on\
    \ the first two bytes of the\n   ExID (in network-standard order) but records\
    \ the entire ExID (in\n   network-standard order).  Some examples are:\n   o \
    \ 0x12340000 collides with a previous registration of 0x1234abcd\n   o  0x5678\
    \ collides with a previous registration of 0x56780123\n   o  0xabcd1234 collides\
    \ with a previous registration of 0xabcd\n   IANA will advise applicants of duplicate\
    \ entries to select an\n   alternate value, as per typical FCFS processing.\n\
    \   IANA will record known duplicate uses to assist the community in both\n  \
    \ debugging assigned uses as well as correcting unauthorized duplicate\n   uses.\n\
    \   IANA should impose no requirements on making a registration other\n   than\
    \ indicating the desired codepoint and providing a point of\n   contact.  A short\
    \ description or acronym for the use is desired but\n   should not be required.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC793]   Postel, J., \"Transmission Control\
    \ Protocol\", STD 7, RFC\n              793, September 1981.\n   [RFC2119]  Bradner,\
    \ S., \"Key words for use in RFCs to Indicate\n              Requirement Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [RFC4727]  Fenner, B., \"Experimental Values\
    \ In IPv4, IPv6, ICMPv4,\n              ICMPv6, UDP, and TCP Headers\", RFC 4727,\
    \ November 2006.\n   [RFC5226]  Narten, T. and H. Alvestrand, \"Guidelines for\
    \ Writing an\n              IANA Considerations Section in RFCs\", BCP 26, RFC\
    \ 5226,\n              May 2008.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [Bi11]     Bittau, A., Boneh, D., Hamburg, M.,\
    \ Handley, M., Mazieres,\n              D., and Q. Slack, \"Cryptographic protection\
    \ of TCP\n              Streams\", Work in Progress, September 2012.\n   [Ed11]\n\
    \              Eddy, W., \"Additional TCP Experimental-Use Options\", Work\n \
    \             in Progress, August 2011.\n   [IANA]     IANA, <http://www.iana.org/>.\n\
    \   [IANA-PEN] Liang, P. and A. Melnikov, \"Private Enterprise Number\n      \
    \        (PEN) Practices and Internet Assigned Numbers: Authority\n          \
    \    (IANA) Considerations for Registration Procedures\", Work\n             \
    \ in Progress, June 2012.\n   [IEEE802]  IEEE, \"IEEE Standard for Local and Metropolitan\
    \ Area\n              Networks: Overview and Architecture\", IEEE 802-2001, 8\n\
    \              March 2002.\n   [OUI]      IEEE, \"Organizationally Unique Identifier\
    \ (OUI) or\n              'Company_ID'\",\n              <http://standards.ieee.org/develop/regauth/oui/>.\n\
    \   [PEN]      IANA, \"Private Enterprise Numbers\",\n              <http://www.iana.org/assignments/enterprise-numbers>.\n\
    \   [RFC951]   Croft, W. and J. Gilmore, \"Bootstrap Protocol\", RFC 951,\n  \
    \            September 1985.\n   [RFC1155]  Rose, M. and K. McCloghrie, \"Structure\
    \ and Identification\n              of Management Information for TCP/IP-Based\
    \ Internets\", STD\n              16, RFC 1155, May 1990.\n   [RFC1157]  Case,\
    \ J., Fedor, M., Schoffstall, M., and J. Davin,\n              \"Simple Network\
    \ Management Protocol (SNMP)\", RFC 1157, May\n              1990.\n   [RFC2026]\
    \  Bradner, S., \"The Internet Standards Process -- Revision\n              3\"\
    , BCP 9, RFC 2026, October 1996.\n   [RFC2131]  Droms, R., \"Dynamic Host Configuration\
    \ Protocol\", RFC\n              2131, March 1997.\n   [RFC2780]  Bradner, S.\
    \ and V. Paxson, \"IANA Allocation Guidelines For\n              Values In the\
    \ Internet Protocol and Related Headers\", BCP\n              37, RFC 2780, March\
    \ 2000.\n   [RFC3692]  Narten, T., \"Assigning Experimental and Testing Numbers\n\
    \              Considered Useful\", BCP 82, RFC 3692, January 2004.\n   [RFC6013]\
    \  Simpson, W., \"TCP Cookie Transactions (TCPCT)\", RFC 6013,\n             \
    \ January 2011.\n   [Si11]     Simpson, W., \"TCP Cookie Transactions (TCPCT)\
    \ Sockets\n              Application Program Interface (API)\", Work in Progress,\n\
    \              April 2011.\n"
- title: 10.  Acknowledgments
  contents:
  - "10.  Acknowledgments\n   This document was motivated by discussions on the IETF\
    \ TCPM mailing\n   list and by Wes Eddy's proposal [Ed11].  Yoshifumi Nishida,\
    \ Pasi\n   Sarolathi, and Michael Scharf provided detailed feedback.\n   This\
    \ document was originally prepared using 2-Word-v2.0.template.dot.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Joe Touch\n   USC/ISI\n   4676 Admiralty Way\n   Marina\
    \ del Rey, CA 90292-6695 U.S.A.\n   Phone: +1 (310) 448-9151\n   EMail: touch@isi.edu\n"
