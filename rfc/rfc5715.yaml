- title: __initial_text__
  contents:
  - '                 A Framework for Loop-Free Convergence

    '
- title: Abstract
  contents:
  - "Abstract\n   A micro-loop is a packet forwarding loop that may occur transiently\n\
    \   among two or more routers in a hop-by-hop packet forwarding paradigm.\n  \
    \ This framework provides a summary of the causes and consequences of\n   micro-loops\
    \ and enables the reader to form a judgement on whether\n   micro-looping is an\
    \ issue that needs to be addressed in specific\n   networks.  It also provides\
    \ a survey of the currently proposed\n   mechanisms that may be used to prevent\
    \ or to suppress the formation\n   of micro-loops when an IP or MPLS network undergoes\
    \ topology change\n   due to failure, repair, or management action.  When sufficiently\
    \ fast\n   convergence is not available and the topology is susceptible to\n \
    \  micro-loops, use of one or more of these mechanisms may be desirable.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc5715.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. The Nature of Micro-Loops .......................................4\n  \
    \ 3. Applicability ...................................................5\n   4.\
    \ Micro-Loop Control Strategies ...................................6\n   5. Loop\
    \ Mitigation .................................................8\n      5.1. Fast\
    \ Convergence ...........................................8\n      5.2. PLSN .......................................................8\n\
    \   6. Micro-Loop Prevention ..........................................10\n  \
    \    6.1. Incremental Cost Advertisement ............................10\n    \
    \  6.2. Nearside Tunneling ........................................12\n      6.3.\
    \ Farside Tunnels ...........................................13\n      6.4. Distributed\
    \ Tunnels .......................................14\n      6.5. Packet Marking\
    \ ............................................14\n      6.6. MPLS New Labels ...........................................15\n\
    \      6.7. Ordered FIB Update ........................................16\n  \
    \    6.8. Synchronised FIB Update ...................................18\n   7.\
    \ Using PLSN in Conjunction with Other Methods ...................18\n   8. Loop\
    \ Suppression ...............................................19\n   9. Compatibility\
    \ Issues ...........................................20\n   10. Comparison of Loop-Free\
    \ Convergence Methods ...................20\n   11. Security Considerations .......................................21\n\
    \   12. Acknowledgments ...............................................21\n  \
    \ 13. Informative References ........................................21\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   When there is a change to the network topology (due to the\
    \ failure or\n   restoration of a link or router, or as a result of management\n\
    \   action), the routers need to converge on a common view of the new\n   topology\
    \ and the paths to be used for forwarding traffic to each\n   destination.  During\
    \ this process, referred to as a routing\n   transition, packet delivery between\
    \ certain source/destination pairs\n   may be disrupted.  This occurs due to the\
    \ time it takes for the\n   topology change to be propagated around the network\
    \ together with the\n   time it takes each individual router to determine and\
    \ then update the\n   forwarding information base (FIB) for the affected destinations.\n\
    \   During this transition, packets may be lost due to the continuing\n   attempts\
    \ to use the failed component and due to forwarding loops.\n   Forwarding loops\
    \ arise due to the inconsistent FIBs that occur as a\n   result of the difference\
    \ in time taken by routers to execute the\n   transition process.  This is a problem\
    \ that may occur in both IP\n   networks and MPLS networks that use the label\
    \ distribution protocol\n   (LDP) [RFC5036] as the label switched path (LSP) signaling\
    \ protocol.\n   The service failures caused by routing transitions are largely\
    \ hidden\n   by higher-level protocols that retransmit the lost data.  However,\n\
    \   new Internet services could emerge that are more sensitive to the\n   packet\
    \ disruption that occurs during a transition.  To make the\n   transition transparent\
    \ to their users, these services would require a\n   short routing transition.\
    \  Ideally, routing transitions would be\n   completed in zero time with no packet\
    \ loss.\n   Regardless of how optimally the mechanisms involved have been\n  \
    \ designed and implemented, it is inevitable that a routing transition\n   will\
    \ take some minimum interval that is greater than zero.  This has\n   led to the\
    \ development of a traffic engineering (TE) fast-reroute\n   mechanism for MPLS\
    \ [RFC4090].  Alternative mechanisms that might be\n   deployed in an MPLS network\
    \ or an IP network are current work items\n   in the IETF [RFC5714].  The repair\
    \ mechanism may, however, be\n   disrupted by the formation of micro-loops during\
    \ the period between\n   the time when the failure is announced and the time when\
    \ all FIBs\n   have been updated to reflect the new topology.\n   One method of\
    \ mitigating the effects of micro-loops is to ensure that\n   the network reconverges\
    \ in a sufficiently short time that these\n   effects are inconsequential.  Another\
    \ method is to design the network\n   topology to minimise or even eliminate the\
    \ possibility of micro-\n   loops.\n   The propensity to form micro-loops is highly\
    \ topology dependent, and\n   algorithms are available to identify which links\
    \ in a network are\n   subject to micro-looping.  In topologies that are critically\n\
    \   susceptible to the formation of micro-loops, there is little point in\n  \
    \ introducing new mechanisms to provide fast reroute without also\n   deploying\
    \ mechanisms that prevent the disruptive effects of micro-\n   loops.  Unless\
    \ micro-loop prevention is used in these topologies,\n   packets may not reach\
    \ the repair and micro-looping packets may cause\n   congestion, resulting in\
    \ further packet loss.\n   The disruptive effect of micro-loops is not confined\
    \ to periods when\n   there is a component failure.  Micro-loops can, for example,\
    \ form\n   when a component is put back into service following repair.  Micro-\n\
    \   loops can also form as a result of a network-maintenance action such\n   as\
    \ adding a new network component, removing a network component, or\n   modifying\
    \ a link cost.\n   This framework provides a summary of the causes and consequences\
    \ of\n   micro-loops and enables the reader to form a judgement on whether\n \
    \  micro-looping is an issue that needs to be addressed in specific\n   networks.\
    \  It also provides a survey of the currently proposed micro-\n   loop mitigation\
    \ mechanisms.  When sufficiently fast convergence is\n   not available and the\
    \ topology is susceptible to micro-loops, use of\n   one or more of these mechanisms\
    \ may be desirable.\n"
- title: 2.  The Nature of Micro-Loops
  contents:
  - "2.  The Nature of Micro-Loops\n   A micro-loop is a packet forwarding loop that\
    \ may occur transiently\n   among two or more routers in a hop-by-hop, packet\
    \ forwarding\n   paradigm.\n   Micro-loops may form during the periods when a\
    \ network is re-\n   converging following ANY topology change and are caused by\n\
    \   inconsistent FIBs in the routers.  During the transition, micro-loops\n  \
    \ may occur over a single link between a pair of routers that\n   temporarily\
    \ use each other as the next hop for a prefix.  Micro-loops\n   may also form\
    \ when each router in a cycle of three or more routers\n   has the next router\
    \ in the cycle as a next hop for a given prefix.\n   Cyclic loops may occur if\
    \ one or more of the following conditions are\n   met:\n   1.  Asymmetric link\
    \ costs.\n   2.  An equal-cost path exists between a pair of routers, each of\n\
    \       which makes a different decision regarding which path to use for\n   \
    \    forwarding to a particular destination.  Note that even routers\n       that\
    \ do not implement equal-cost, multi-path (ECMP) forwarding\n       must make\
    \ a choice between the available equal-cost paths, and\n       unless they make\
    \ the same choice, the condition for cyclic loops\n       will be fulfilled.\n\
    \   3.  Topology changes affecting multiple links, including single node\n   \
    \    and line card failures.\n   Micro-loops have two undesirable side effects:\
    \ congestion and repair\n   starvation.\n   o  A looping packet consumes bandwidth\
    \ until it either escapes as a\n      result of the re-synchronization of the\
    \ FIBs or its time to live\n      (TTL) expires.  This transiently increases the\
    \ traffic over a link\n      by as much as 128 times, and may cause the link to\
    \ become\n      congested.  This congestion reduces the bandwidth available to\n\
    \      other traffic (which is not otherwise affected by the topology\n      change).\
    \  As a result, the \"innocent\" traffic using the link\n      experiences increased\
    \ latency and is liable to congestive packet\n      loss.\n   o  In cases where\
    \ the link or node failure has been protected by a\n      fast-reroute repair,\
    \ an inconsistency in the FIBs may prevent some\n      traffic from reaching the\
    \ failure, and hence being repaired.  The\n      repair may thus become starved\
    \ of traffic and thereby rendered\n      ineffective.\n   Although micro-loops\
    \ are usually considered in the context of a\n   failure, similar problems of\
    \ congestive packet loss and starvation\n   may also occur if the topology change\
    \ is the result of management\n   action.  For example, consider the case where\
    \ a link is to be taken\n   out of service by management action.  The link can\
    \ be retained in\n   service throughout the transition, thus avoiding the need\
    \ for any\n   repair.  However, if micro-loops form, they may cause congestion\
    \ loss\n   and may also prevent traffic from reaching the link.\n   Unless otherwise\
    \ controlled, micro-loops may form in any part of the\n   network that forwards\
    \ (or in the case of a new link, will forward)\n   packets over a path that includes\
    \ the affected topology change.  The\n   time taken to propagate the topology\
    \ change through the network, and\n   the non-uniform time taken by each router\
    \ to calculate the new\n   shortest path tree (SPT) and update its FIB, contribute\
    \ to the\n   duration of the packet disruption caused by the micro-loops.  In\
    \ some\n   cases, a packet may be subject to disruption from micro-loops that\n\
    \   occur sequentially at links along the path, thus further extending\n   the\
    \ period of disruption beyond that required to resolve a single\n   loop.\n"
- title: 3.  Applicability
  contents:
  - "3.  Applicability\n   Loop-free convergence techniques are applicable to any\
    \ situation in\n   which micro-loops may form, for example, the convergence of\
    \ a network\n   following:\n   1.  Component failure\n   2.  Component repair\n\
    \   3.  Management withdrawal of a component\n   4.  Management insertion or a\
    \ component\n   5.  Management change of link cost (either positive or negative)\n\
    \   6.  External cost change, for example, change of external gateway as\n   \
    \    a result of a BGP change\n   7.  A Shared Risk Link Group (SRLG) failure\n\
    \   In each case, a component may be a link, a set of links, or an entire\n  \
    \ router.  Throughout this document, we use the term SRLG when\n   describing\
    \ the procedure to be followed when multiple failures have\n   occurred, whether\
    \ or not they are members of an explicit SRLG.  In\n   the case of multiple independent\
    \ failures, the loop-prevention method\n   described for SRLG may be used, provided\
    \ it is known that all of\n   these failures have been repaired.\n   Loop-free\
    \ convergence techniques are applicable to both IP networks\n   and MPLS-enabled\
    \ networks that use LDP, including LDP networks that\n   use the single-hop tunnel\
    \ fast-reroute mechanism.\n   An assessment of whether loop-free convergence techniques\
    \ are\n   required should take into account whether or not the interior gateway\n\
    \   protocol (IGP) convergence is sufficiently fast that any micro-loops\n   are\
    \ of such short duration that they are not disruptive, and whether\n   or not\
    \ the topology is such that micro-loops are likely to form.\n"
- title: 4.  Micro-Loop Control Strategies
  contents:
  - "4.  Micro-Loop Control Strategies\n   Micro-loop control strategies fall into\
    \ four basic classes:\n   1.  Micro-loop mitigation\n   2.  Micro-loop prevention\n\
    \   3.  Micro-loop suppression\n   4.  Network design to minimise micro-loops\n\
    \   A micro-loop-mitigation scheme works by re-converging the network in\n   such\
    \ a way that it reduces, but does not eliminate, the formation of\n   micro-loops.\
    \  Such schemes cannot guarantee the productive forwarding\n   of packets during\
    \ the transition.\n   A micro-loop-prevention mechanism controls the re-convergence\
    \ of the\n   network in such a way that no micro-loops form.  Such a micro-loop-\n\
    \   prevention mechanism allows the continued use of any fast repair\n   method\
    \ until the network has converged on its new topology and\n   prevents the collateral\
    \ damage that occurs to other traffic for the\n   duration of each micro-loop.\n\
    \   A micro-loop-suppression mechanism attempts to eliminate the\n   collateral\
    \ damage caused by micro-loops to other traffic.  This may\n   be achieved by,\
    \ for example, using a packet-monitoring method that\n   detects that a packet\
    \ is looping and drops it.  Such schemes make no\n   attempt to productively forward\
    \ the packet throughout the network\n   transition.\n   Highly meshed topologies\
    \ are less susceptible to micro-loops, thus\n   networks may be designed to minimise\
    \ the occurrence of micro-loops by\n   appropriate link placement and metric settings.\
    \  However, this\n   approach may conflict with other design requirements, such\
    \ as cost\n   and traffic planning, and may not accurately track the evolution\
    \ of\n   the network or temporary changes due to outages.\n   Note that all known\
    \ micro-loop-prevention mechanisms and most micro-\n   loop-mitigation mechanisms\
    \ extend the duration of the re-convergence\n   process.  When the failed component\
    \ is protected by a fast-reroute\n   repair, this implies that the converging\
    \ network requires the repair\n   to remain in place for longer than would otherwise\
    \ be the case.  The\n   extended convergence time means any traffic that is not\
    \ repaired by\n   an imperfect repair experiences a significantly longer outage\
    \ than it\n   would experience with conventional convergence.\n   When a component\
    \ is returned to service, or when a network management\n   action has taken place,\
    \ this additional delay does not cause traffic\n   disruption because there is\
    \ no repair involved.  However, the\n   extended delay is undesirable because\
    \ it increases the time that the\n   network takes to be ready for another failure,\
    \ and hence leaves it\n   vulnerable to multiple failures.\n"
- title: 5.  Loop Mitigation
  contents:
  - "5.  Loop Mitigation\n   There are two approaches to loop mitigation.\n   o  Fast\
    \ convergence\n   o  A purpose-designed, loop-mitigation mechanism\n"
- title: 5.1.  Fast Convergence
  contents:
  - "5.1.  Fast Convergence\n   The duration of micro-loops is dependent on the speed\
    \ of convergence.\n   Improving the speed of convergence may therefore be seen\
    \ as a loop-\n   mitigation technique.\n"
- title: 5.2.  PLSN
  contents:
  - "5.2.  PLSN\n   The only known purpose-designed, loop-mitigation approach is the\
    \ Path\n   Locking with Safe-Neighbors (PLSN) method described in PLSN\n   [ANALYSIS].\
    \  In this method, a micro-loop-free next-hop safety\n   condition is defined\
    \ as follows:\n   In a symmetric-cost network, it is safe for router X to change\
    \ to the\n   use of neighbor Y as its next hop for a specific destination if the\n\
    \   path through Y to that destination satisfies both of the following\n   criteria:\n\
    \   1.  X considers Y as its loop-free neighbor based on the topology\n      \
    \ before the change, AND\n   2.  X considers Y as its downstream neighbor based\
    \ on the topology\n       after the change.\n   In an asymmetric-cost network,\
    \ a stricter safety condition is needed,\n   and the criterion is that:\n    \
    \  X considers Y as its downstream neighbor based on the topology\n      both\
    \ before and after the change.\n   Based on these criteria, destinations are classified\
    \ by each router\n   into three classes:\n   o  Type A destinations: Destinations\
    \ unaffected by the change (type\n      A1) and also destinations whose next hop\
    \ after the change\n      satisfies the safety criteria (type A2).\n   o  Type\
    \ B destinations: Destinations that cannot be sent via the new,\n      primary\
    \ next hop because the safety criteria are not satisfied,\n      but that can\
    \ be sent via another next hop that does satisfy the\n      safety criteria.\n\
    \   o  Type C destinations: All other destinations.\n   Following a topology change,\
    \ type A destinations are immediately\n   changed to go via the new topology.\
    \  Type B destinations are\n   immediately changed to go via the next hop that\
    \ satisfies the safety\n   criteria, even though this is not the shortest path.\
    \  Type B\n   destinations continue to go via this path until all routers have\n\
    \   changed their type C destinations over to the new next hop.  Routers\n   must\
    \ not change their type C destinations until all routers have\n   changed their\
    \ type A2 and B destinations to the new or intermediate\n   (safe) next hop.\n\
    \   Simulations indicate that this approach produces a significant\n   reduction\
    \ in the number of links that are subject to micro-looping.\n   However, unlike\
    \ all of the micro-loop-prevention methods, it is only\n   a partial solution.\
    \  In particular, micro-loops may form on any link\n   joining a pair of type\
    \ C routers.\n   Because routers delay updating their type C destination FIB entries,\n\
    \   they will continue to route towards the failure during the time when\n   the\
    \ routers are changing their type A and B destinations, and hence\n   will continue\
    \ to productively forward packets, provided that viable\n   repair paths exist.\n\
    \   A backwards-compatibility issue arises with PLSN.  If a router is not\n  \
    \ capable of micro-loop control, it will not correctly delay its FIB\n   update.\
    \  If all such routers had only type A destinations, this loop-\n   mitigation\
    \ mechanism would work as it was designed.  Alternatively,\n   if all such incapable\
    \ routers had only type C destinations, the\n   \"loop-prevention\" announcement\
    \ mechanism used to trigger the tunnel-\n   based schemes (see Sections 6.2 to\
    \ 6.4) could be used to cause the\n   type A and B destinations to be changed,\
    \ with the incapable routers\n   and routers having type C destinations delaying\
    \ until they received\n   the \"real\" announcement.  Unfortunately, these two\
    \ approaches are\n   mutually incompatible.\n   Note that simulations indicate\
    \ that in most topologies treating type\n   B destinations as type C results in\
    \ only a small degradation in loop\n   prevention.  Also note that simulation\
    \ results indicate that in\n   production networks where some, but not all, links\
    \ have asymmetric\n   costs, using the stricter asymmetric-cost criterion actually\
    \ reduces\n   the number of loop-free destinations because fewer destinations\
    \ can\n   be classified as type A or B.\n   This mechanism operates identically\
    \ for:\n   o  events that degrade the topology (e.g., link failure),\n   o  events\
    \ that improve the topology (e.g., link restoration), and\n   o  shared risk link\
    \ group (SRLG) failure.\n"
- title: 6.  Micro-Loop Prevention
  contents:
  - "6.  Micro-Loop Prevention\n   Eight micro-loop-prevention methods have been proposed:\n\
    \   1.  Incremental cost advertisement\n   2.  Nearside tunneling\n   3.  Farside\
    \ tunneling\n   4.  Distributed tunnels\n   5.  Packet marking\n   6.  New MPLS\
    \ labels\n   7.  Ordered FIB update\n   8.  Synchronized FIB update\n"
- title: 6.1.  Incremental Cost Advertisement
  contents:
  - "6.1.  Incremental Cost Advertisement\n   When a link fails, the cost of the link\
    \ is normally changed from its\n   assigned metric to \"infinity\" in one step.\
    \  However, it can be proved\n   [OPT] that no micro-loops will form if the link\
    \ cost is increased in\n   suitable increments, and the network is allowed to\
    \ stabilize before\n   the next cost increment is advertised.  Once the link cost\
    \ has been\n   increased to a value greater than that of the lowest alternative\
    \ cost\n   around the link, the link may be disabled without causing a micro-\n\
    \   loop.\n   The criterion for a link cost change to be safe is that any link\
    \ that\n   is subjected to a cost change of x can only cause loops in a part of\n\
    \   the network that has a cyclic cost less than or equal to x.  Because\n   there\
    \ may exist links that have a cost of one in each direction,\n   resulting in\
    \ a cyclic cost of two, this can result in the link cost\n   having to be raised\
    \ in increments of one.  However, the increment can\n   be larger where the minimum\
    \ cost permits.  Recent work [OPT] has\n   shown that there are a number of optimizations\
    \ that can be applied to\n   the problem in order to determine the exact set of\
    \ cost values\n   required, and hence minimise the number of increments.\n   It\
    \ will be appreciated that when a link is returned to service, its\n   cost is\
    \ reduced in small steps from \"infinity\" to its final cost,\n   thereby providing\
    \ similar micro-loop prevention during a \"good-news\"\n   event.  Note that the\
    \ link cost may be decreased from \"infinity\" to\n   any value greater than that\
    \ of the lowest alternative cost around the\n   link in one step without causing\
    \ a micro-loop.\n   When the failure is an SRLG, the link cost increments must\
    \ be\n   coordinated across all failing members of the SRLG.  This may be\n  \
    \ achieved by completing the transition of one link before starting the\n   next\
    \ or by interleaving the changes.\n   The incremental cost change approach has\
    \ the advantage over all other\n   currently known loop-prevention schemes in\
    \ that it requires no change\n   to the routing protocol.  It will work in any\
    \ network because it does\n   not require any cooperation from the other routers\
    \ in the network.\n   Where the micro-loop-prevention mechanism is being used\
    \ to support a\n   planned reconfiguration of the network, the extended total\n\
    \   reconvergence time resulting from the multiple increments is of\n   limited\
    \ consequence, particularly where the number of increments have\n   been optimized.\
    \  This, together with the ability to implement this\n   technique in isolation,\
    \ makes this method a good candidate for use\n   with such management-initiated\
    \ changes.\n   Where the micro-loop-prevention mechanism is being used to support\n\
    \   failure recovery, the number of increments required, and hence the\n   time\
    \ taken to fully converge, is significant even for small numbers\n   of increments.\
    \  This is because, for the duration of the transition,\n   some parts of the\
    \ network continue to use the old forwarding path,\n   and hence use any repair\
    \ mechanism for an extended period.  In the\n   case of a failure that cannot\
    \ be fully repaired, some destinations\n   may therefore become unreachable for\
    \ an extended period.  In\n   addition, the network may be vulnerable to a second\
    \ failure for the\n   duration of the controlled re-convergence.\n   Where large\
    \ metrics are used and no optimization (such as that\n   described above) is performed,\
    \ the incremental cost method can be\n   extremely slow.  However, in cases where\
    \ the per-link metric is\n   small, either because small values have been assigned\
    \ by the network\n   designers or because of restrictions implicit in the routing\
    \ protocol\n   (e.g., RIP restricts the metric, and BGP using the autonomous system\n\
    \   (AS) path length frequently uses an effective metric of one or a very\n  \
    \ small integer for each inter AS hop), the number of required\n   increments\
    \ can be acceptably small even without optimizations.\n"
- title: 6.2.  Nearside Tunneling
  contents:
  - "6.2.  Nearside Tunneling\n   This mechanism works by creating an overlay network\
    \ using tunnels\n   whose path is not affected by the topology change and then\
    \ carrying\n   the traffic affected by the change in that new network.  When all\
    \ the\n   traffic is in the new, tunnel-based network, the real network is\n \
    \  allowed to converge on the new topology.  Because all the traffic\n   that\
    \ would be affected by the change is carried in the overlay\n   network, no micro-loops\
    \ form.\n   When a failure is detected (or a link is withdrawn from service),\
    \ the\n   router adjacent to the failure issues a new \"loop-prevention\" routing\n\
    \   message announcing the topology change.  This message is propagated\n   through\
    \ the network by all routers but is only understood by routers\n   capable of\
    \ using one of the tunnel-based, micro-loop-prevention\n   mechanisms.\n   Each\
    \ of the micro-loop-preventing routers builds a tunnel to the\n   closest router\
    \ adjacent to the failure.  They then determine which of\n   their traffic would\
    \ transit the failure and place that traffic in the\n   tunnel.  When all of these\
    \ tunnels are in place (determined, for\n   example, by waiting a suitable interval),\
    \ the failure is announced as\n   normal.  Because these tunnels will be unaffected\
    \ by the transition\n   and because the routers protecting the link will continue\
    \ the repair\n   (or forward across the link being withdrawn), no traffic will\
    \ be\n   disrupted by the failure.  When the network has converged, these\n  \
    \ tunnels are withdrawn, allowing traffic to be forwarded along its\n   new, \"\
    natural\" path.  The order of tunnel insertion and withdrawal is\n   not important,\
    \ provided that the tunnels are all in place before the\n   normal announcement\
    \ is issued and that the repair remains in place\n   until normal convergence\
    \ has completed.\n   This method completes in bounded time and is generally much\
    \ faster\n   than the incremental cost method.  Depending on the exact design,\
    \ it\n   completes in two or three flood-SPF-FIB update cycles.\n   At the time\
    \ at which the failure is announced as normal, micro-loops\n   may form within\
    \ isolated islands of non-micro-loop-preventing\n   routers.  However, only traffic\
    \ entering the network via such routers\n   can micro-loop.  All traffic entering\
    \ the network via a micro-loop-\n   preventing router will be tunneled correctly\
    \ to the nearest repairing\n   router -- including, if necessary, being tunneled\
    \ via a non-micro-\n   loop-preventing router -- and will not micro-loop.\n  \
    \ Where there is no requirement to prevent the formation of micro-loops\n   involving\
    \ non-micro-loop-preventing routers, a single, \"normal\"\n   announcement may\
    \ be made and a local timer used to determine the time\n   at which transition\
    \ from tunneled forwarding to normal forwarding\n   over the new topology may\
    \ commence.\n   This technique has the disadvantage that it requires traffic to\
    \ be\n   tunneled during the transition.  This is an issue in IP networks\n  \
    \ because not all router designs are capable of high-performance IP\n   tunneling.\
    \  It is also an issue in MPLS networks because the\n   encapsulating router has\
    \ to know the label set that the decapsulating\n   router is distributing.\n \
    \  A further disadvantage of this method is that it requires cooperation\n   from\
    \ all the routers within the routing domain to fully protect the\n   network against\
    \ micro-loops.\n   When a new link is added, the mechanism is run in \"reverse\"\
    .  When\n   the loop-prevention announcement is heard, routers determine which\n\
    \   traffic they will send over the new link and tunnel that traffic to\n   the\
    \ router on the near side of that link.  This path will not be\n   affected by\
    \ the presence of the new link.  When the \"normal\"\n   announcement is heard,\
    \ they then update their FIB to send the traffic\n   normally, according to the\
    \ new topology.  Any traffic encountering a\n   router that has not yet updated\
    \ its FIB will be tunneled to the near\n   side of the link, and will therefore\
    \ not loop.\n   When a management change to the topology is required, again exactly\n\
    \   the same mechanism protects against micro-looping of packets by the\n   micro-loop-preventing\
    \ routers.\n   When the failure is an SRLG, the required strategy is to classify\n\
    \   traffic according the furthest failing member of the SRLG that it\n   will\
    \ traverse on its way to the destination, and to tunnel that\n   traffic to the\
    \ repairing router for that SRLG member.  This will\n   require multiple tunnel\
    \ destinations -- in the limiting case, one per\n   SRLG member.\n"
- title: 6.3.  Farside Tunnels
  contents:
  - "6.3.  Farside Tunnels\n   Farside tunneling loop prevention requires the loop-preventing\n\
    \   routers to place all of the traffic that would traverse the failure\n   in\
    \ one or more tunnels terminating at the router (or, in the case of\n   node failure,\
    \ routers) at the far side of the failure.  The\n   properties of this method\
    \ are a more uniform distribution of repair\n   traffic than is achieved using\
    \ the nearside tunnel method and, in the\n   case of node failure, a reduction\
    \ in the decapsulation load on any\n   single router.\n   Unlike the nearside\
    \ tunnel method (which uses normal routing to the\n   repairing router), this\
    \ method requires the use of a repair path to\n   the farside router.  This may\
    \ be provided by the not-via [NOT-VIA]\n   mechanism, in which case no further\
    \ computation is needed.\n   The mode of operation is otherwise identical to the\
    \ nearside\n   tunneling loop-prevention method (Section 6.2).\n"
- title: 6.4.  Distributed Tunnels
  contents:
  - "6.4.  Distributed Tunnels\n   In the distributed tunnels loop-prevention method,\
    \ each router\n   calculates its own repair and forwards traffic affected by the\n\
    \   failure using that repair.  Unlike the fast reroute (FRR) case, the\n   actual\
    \ failure is known at the time of the calculation.  The\n   objective of the loop-preventing\
    \ routers is to get the packets that\n   would have gone via the failure into\
    \ Q-space [FRR-TUNN] using routers\n   that are in P-space.  Because packets are\
    \ decapsulated on entry to\n   Q-space, rather than being forced to go to the\
    \ farside of the\n   failure, more optimum routing may be achieved.  This method\
    \ is\n   subject to the same reachability constraints described in [FRR-TUNN].\n\
    \   The mode of operation is otherwise identical to the nearside\n   tunneling\
    \ loop-prevention method (Section 6.2).\n   An alternative distributed tunnel\
    \ mechanism is for all routers to\n   tunnel to the not-via address [NOT-VIA]\
    \ associated with the failure.\n"
- title: 6.5.  Packet Marking
  contents:
  - "6.5.  Packet Marking\n   If packets could be marked in some way, this information\
    \ could be\n   used to assign them to one of:\n   o  the new topology,\n   o \
    \ the old topology, or\n   o  a transition topology.\n   They would then be correctly\
    \ forwarded during the transition.  This\n   mechanism works identically for both\
    \ \"bad-news\" and \"good-news\"\n   events.  It also works identically for SRLG\
    \ failure.  There are three\n   problems with this solution:\n   o  A packet-marking\
    \ bit may not be available, for example, a network\n      supporting both the\
    \ differentiated services architecture [RFC2475]\n      and explicit congestion\
    \ notification [RFC3168] uses all eight bits\n      of the IPv4 Type of Service\
    \ field.\n   o  The mechanism would introduce a non-standard forwarding procedure.\n\
    \   o  Packet marking using either the old or the new topology would\n      double\
    \ the size of the FIB; however, some optimizations may be\n      possible.\n"
- title: 6.6.  MPLS New Labels
  contents:
  - "6.6.  MPLS New Labels\n   In an MPLS network that is using [RFC5036] for label\
    \ distribution,\n   loop-free convergence can be achieved through the use of new\
    \ labels\n   when the path that a prefix will take through the network changes.\n\
    \   As described in Section 6.2, the repairing routers issue a loop-\n   prevention\
    \ announcement to start the loop-free convergence process.\n   All loop-preventing\
    \ routers calculate the new topology and determine\n   whether their FIB needs\
    \ to be changed.  If there is no change in the\n   FIB, they take no part in the\
    \ following process.\n   The routers that need to make a change to their FIB consider\
    \ each\n   change and check the new next hop to determine whether it will use\
    \ a\n   path in the OLD topology that reaches the destination without\n   traversing\
    \ the failure (i.e., the next hop is in P-space with respect\n   to the failure\
    \ [FRR-TUNN]).  If so, the FIB entry can be immediately\n   updated.  For all\
    \ of the remaining FIB entries, the router issues a\n   new label to each of its\
    \ neighbors.  This new label is used to lock\n   the path during the transition\
    \ in a similar manner to the previously\n   described method for loop-free convergence\
    \ with tunnels\n   (Section 6.2).  Routers receiving a new label install it in\
    \ their FIB\n   for MPLS label translation, but do not yet remove the old label\
    \ and\n   do not yet use this new label to forward IP packets, i.e., they\n  \
    \ prepare to forward using the new label on the new path but do not use\n   it\
    \ yet.  Any packets received continue to be forwarded the old way,\n   using the\
    \ old labels, towards the repair.\n   At some time after the loop-prevention announcement,\
    \ a normal routing\n   announcement of the failure is issued.  This announcement\
    \ must not be\n   issued until such time as all routers have carried out all of\
    \ their\n   activities that were triggered by the loop-prevention announcement.\n\
    \   On receipt of the normal announcement, all routers that were delaying\n  \
    \ convergence move to their new path for both the new and the old\n   labels.\
    \  This involves changing the IP address entries to use the new\n   labels AND\
    \ changing the old labels to forward using the new labels.\n   Because the new\
    \ label path was installed during the loop-prevention\n   phase, packets reach\
    \ their destinations as follows:\n   o  If they do not go via any router using\
    \ a new label, they go via\n      the repairing router and the repair.\n   o \
    \ If they meet any router that is using the new labels, they get\n      marked\
    \ with the new labels and reach their destination using the\n      new path, back-tracking\
    \ if necessary.\n   When all routers have changed to the new path, the network\
    \ is\n   converged.  At some later time, when it can be assumed that all\n   routers\
    \ have moved to using the new path, the FIB can be cleaned up\n   to remove the,\
    \ now redundant, old labels.\n   As with other methods, the new labels may be\
    \ modified to provide loop\n   prevention for \"good news\".  There are also a\
    \ number of optimizations\n   of this method.\n"
- title: 6.7.  Ordered FIB Update
  contents:
  - "6.7.  Ordered FIB Update\n   The ordered FIB loop prevention method is described\
    \ in \"Loop-free\n   convergence using oFIB\" [oFIB].  Micro-loops occur following\
    \ a\n   failure or a cost increase, when a router closer to the failed\n   component\
    \ revises its routes to take account of the failure before a\n   router that is\
    \ further away.  By analyzing the reverse shortest path\n   tree (rSPT) over which\
    \ traffic is directed to the failed component in\n   the old topology, it is possible\
    \ to determine a strict ordering that\n   ensures that nodes closer to the root\
    \ always process the failure\n   after any nodes further away, and hence micro-loops\
    \ are prevented.\n   When the failure has been announced, each router waits a\
    \ multiple of\n   the convergence timer [LF-TIMERS].  The multiple is determined\
    \ by the\n   node's position in the rSPT, and the delay value is chosen to\n \
    \  guarantee that a node can complete its processing within this time.\n   The\
    \ convergence time may be reduced by employing a signaling\n   mechanism to notify\
    \ the parent when all the children have completed\n   their processing, and hence\
    \ when it is safe for the parent to\n   instantiate its new routes.\n   The property\
    \ of this approach is therefore that it imposes a delay\n   that is bounded by\
    \ the network diameter, although in many cases it\n   will be much less.\n   When\
    \ a link is returned to service, the convergence process above is\n   reversed.\
    \  A router first determines its distance (in hops) from the\n   new link in the\
    \ NEW topology.  Before updating its FIB, it then waits\n   a time equal to the\
    \ value of that distance multiplied by the\n   convergence timer.\n   It will\
    \ be seen that network-management actions can similarly be\n   undertaken by treating\
    \ a cost increase in a manner similar to a\n   failure and a cost decrease similar\
    \ to a restoration.\n   The ordered FIB mechanism requires all nodes in the domain\
    \ to operate\n   according to these procedures, and the presence of non-cooperating\n\
    \   nodes can give rise to loops for any traffic that traverses them (not\n  \
    \ just traffic that is originated through them).  Without additional\n   mechanisms,\
    \ these loops could remain in place for a significant time.\n   It should be noted\
    \ that this method requires per-router ordering but\n   not per-prefix ordering.\
    \  A router must wait its turn to update its\n   FIB, but it should then update\
    \ its entire FIB.\n   When an SRLG failure occurs, a router must classify traffic\
    \ into the\n   classes that pass over each member of the SRLG.  Each router is\
    \ then\n   independently assigned a ranking with respect to each SRLG member for\n\
    \   which they have a traffic class.  These rankings may be different for\n  \
    \ each traffic class.  The prefixes of each class are then changed in\n   the\
    \ FIB according to the ordering of their specific ranking.  Again,\n   as for\
    \ the single failure case, signaling may be used to speed up the\n   convergence\
    \ process.\n   Note that the special SRLG case of a full or partial node failure\
    \ can\n   be dealt with without using per-prefix ordering by running a single\n\
    \   reverse-SPF computation rooted at the failed node (or common point of\n  \
    \ the subset of failing links in the partial case).\n   There are two classes\
    \ of signaling optimization that can be applied\n   to the ordered FIB loop-prevention\
    \ method:\n   o  When the router makes NO change, it can signal immediately. \
    \ This\n      significantly reduces the time taken by the network to process\n\
    \      long chains of routers that have no change to make to their FIB.\n   o\
    \  When a router HAS changed, it can signal that it has completed.\n      This\
    \ is more problematic since this may be difficult to determine,\n      particularly\
    \ in a distributed architecture, and the optimization\n      obtained is the difference\
    \ between the actual time taken to make\n      the FIB change and the worst-case\
    \ timer value.  This saving could\n      be of the order of one second per hop.\n\
    \   There is another method of executing ordered FIB that is based on\n   pure\
    \ signaling [SIG].  Methods that use signaling as an optimization\n   are safe\
    \ because eventually they fall back on the established IGP\n   mechanisms that\
    \ ensure that networks converge under conditions of\n   packet loss.  However,\
    \ a mechanism that relies on signaling in order\n   to converge requires a reliable\
    \ signaling mechanism that must be\n   proven to recover from any failure circumstance.\n"
- title: 6.8.  Synchronised FIB Update
  contents:
  - "6.8.  Synchronised FIB Update\n   Micro-loops form because of the asynchronous\
    \ nature of the FIB update\n   process during a network transition.  In many router\
    \ architectures,\n   it is the time taken to update the FIB itself that is the\
    \ dominant\n   term.  One approach would be to have two FIBs and, in a synchronized\n\
    \   action throughout the network, to switch from the old to the new.\n   One\
    \ way to achieve this synchronized change would be to signal or\n   otherwise\
    \ determine the wall clock time of the change and then\n   execute the change\
    \ at that time, using NTP [RFC1305] to synchronize\n   the wall clocks in the\
    \ routers.\n   This approach has a number of major issues.  Firstly, two complete\n\
    \   FIBs are needed, which may create a scaling issue; secondly, a\n   suitable\
    \ network-wide synchronization method is needed.  However,\n   neither of these\
    \ are insurmountable problems.\n   Since the FIB change synchronization will not\
    \ be perfect, there may\n   be some interval during which micro-loops form.  Whether\
    \ this scheme\n   is classified as a micro-loop-prevention mechanism or a micro-loop-\n\
    \   mitigation mechanism within this taxonomy is therefore dependent on\n   the\
    \ degree of synchronization achieved.\n   This mechanism works identically for\
    \ both \"bad-news\" and \"good-news\"\n   events.  It also works identically for\
    \ SRLG failure.  Further\n   consideration needs to be given to interoperating\
    \ with routers that\n   do not support this mechanism.  Without a suitable interoperating\n\
    \   mechanism, loops may form for the duration of the synchronization\n   delay.\n"
- title: 7.  Using PLSN in Conjunction with Other Methods
  contents:
  - "7.  Using PLSN in Conjunction with Other Methods\n   All of the tunnel methods\
    \ and packet marking can be combined with\n   PLSN (see Section 5.2 of this document\
    \ and [ANALYSIS]) to reduce the\n   traffic that needs to be protected by the\
    \ advanced method.\n   Specifically, all traffic could use PLSN except traffic\
    \ between a\n   pair of routers, both of which consider the destination to be\
    \ type C.\n   The type-C-to-type-C traffic would be protected from micro-looping\n\
    \   through the use of a loop-prevention method.\n   However, determining whether\
    \ the new next-hop router considers a\n   destination to be type C may be computationally\
    \ intensive.  An\n   alternative approach would be to use a loop-prevention method\
    \ for all\n   local type C destinations.  This would not require any additional\n\
    \   computation, but would require the additional loop-prevention method\n   to\
    \ be used in cases that would not have generated loops (i.e., when\n   the new\
    \ next-hop router considered this to be a type A or B\n   destination).\n   The\
    \ amount of traffic that would use PLSN is highly dependent on the\n   network\
    \ topology and the specific change, but would be expected to be\n   in the range\
    \ of 70% to 90% in typical networks.\n   However, PLSN cannot be combined safely\
    \ with ordered FIB.  Consider\n   the network fragment shown below:\n        \
    \              R\n                     /|\\\n                    / | \\\n    \
    \              1/ 2|  \\3\n                  /   |   \\    cost S->T = 10\n  \
    \         Y-----X----S----T   cost T->S = 1\n           |  1     2      |\n  \
    \         |1              |\n           D---------------+\n                  20\n\
    \   On failure of link XY, according to PLSN, S will regard R as a safe\n   neighbor\
    \ for traffic to D.  However, the ordered FIB rank of both R\n   and T will be\
    \ zero, and hence these can change their FIBs during the\n   same time interval.\
    \  If R changes before T, then a loop will form\n   around R, T, and S.  This\
    \ can be prevented by using a stronger safety\n   condition than PLSN currently\
    \ specifies, at the cost of introducing\n   more type C routers, and hence reducing\
    \ the PLSN coverage.\n"
- title: 8.  Loop Suppression
  contents:
  - "8.  Loop Suppression\n   A micro-loop-suppression mechanism recognizes that a\
    \ packet is\n   looping and drops it.  One such approach would be for a router\
    \ to\n   recognize, by some means, that it had seen the same packet before.\n\
    \   It is difficult to see how sufficiently reliable discrimination could\n  \
    \ be achieved without some form of per-router signature, such as route\n   recording.\
    \  A packet-recognizing approach therefore seems infeasible.\n   An alternative\
    \ approach would be to recognize that a packet was\n   looping by recognizing\
    \ that it was being sent back to the place from\n   which it had just come.  This\
    \ would work for the types of loop that\n   form in symmetric-cost networks, but\
    \ would not suppress the cyclic\n   loops that form in asymmetric networks or\
    \ as a result of multiple\n   failures.\n   This mechanism operates identically\
    \ for both \"bad-news\" events,\n   \"good-news\" events, and SRLG failure.\n"
- title: 9.  Compatibility Issues
  contents:
  - "9.  Compatibility Issues\n   Deployment of any micro-loop-control mechanism is\
    \ a major change to a\n   network.  Full consideration must be given to interoperation\
    \ between\n   routers that are capable of micro-loop control and those that are\n\
    \   not.  Additionally, there may be a desire to limit the complexity of\n   micro-loop\
    \ control by choosing a method based purely on its\n   simplicity.  Any such decision\
    \ must take into account that if a more\n   capable scheme is needed in the future,\
    \ its deployment might be\n   complicated by interaction with the scheme previously\
    \ deployed.\n"
- title: 10.  Comparison of Loop-Free Convergence Methods
  contents:
  - "10.  Comparison of Loop-Free Convergence Methods\n   PLSN [ANALYSIS] is an efficient\
    \ mechanism to prevent the formation of\n   micro-loops but is only a partial\
    \ solution.  It is a useful adjunct\n   to some of the complete solutions but\
    \ may need modification.\n   Incremental cost advertisement in its simplest form\
    \ is impractical as\n   a general solution because it takes too long to complete.\
    \  Optimized\n   incremental cost advertisement, however, completes in much less\
    \ time\n   and requires no assistance from other routers in the network.  It is\n\
    \   therefore useful for network-reconfiguration operations.\n   Packet marking\
    \ is probably impractical because of the need to find\n   the marking bit and\
    \ to change the forwarding behavior.\n   Of the remaining methods, distributed\
    \ tunnels is significantly more\n   complex than nearside or farside tunnels and\
    \ should only be\n   considered if there is a requirement to distribute the tunnel\n\
    \   decapsulation load.\n   Synchronised FIBs is a fast method but has the issue\
    \ that a suitable\n   synchronization mechanism needs to be defined.  One method\
    \ would be\n   to use NTP [RFC1305]; however, the coupling of routing convergence\
    \ to\n   a protocol that uses the network may be a problem.  During the\n   transition,\
    \ there will be some micro-looping for a short interval\n   because it is not\
    \ possible to achieve complete synchronization of the\n   FIB changeover.\n  \
    \ The ordered FIB mechanism has the major advantage that it is a\n   control-plane-only\
    \ solution.  However, SRLGs require a per-\n   destination calculation and the\
    \ convergence delay may be high,\n   bounded by the network diameter.  The use\
    \ of signaling as an\n   accelerator may reduce the number of destinations that\
    \ experience the\n   full delay, and hence reduce the total re-convergence time\
    \ to an\n   acceptable period.\n   The nearside and farside tunnel methods deal\
    \ relatively easily with\n   SRLGs and uncorrelated changes.  The convergence\
    \ delay would be\n   small.  However, these methods require the use of tunneled\n\
    \   forwarding, which is not supported on all router hardware, and raises\n  \
    \ issues of forwarding performance.  When used with PLSN, the amount of\n   traffic\
    \ that was tunneled would be significantly reduced, thus\n   reducing the forwarding\
    \ performance concerns.  If the selected repair\n   mechanism requires the use\
    \ of tunnels, then a tunnel-based loop\n   prevention scheme may be acceptable.\n"
- title: 11.  Security Considerations
  contents:
  - "11.  Security Considerations\n   This document analyzes the problem of micro-loops\
    \ and summarizes a\n   number of potential solutions that have been proposed.\
    \  These\n   solutions require only minor modifications to existing routing\n\
    \   protocols and therefore do not add additional security risks.\n   However,\
    \ a full security analysis would need to be provided within\n   the specification\
    \ of a particular solution proposed for deployment.\n"
- title: 12.  Acknowledgments
  contents:
  - "12.  Acknowledgments\n   The authors would like to acknowledge contributions\
    \ to this document\n   made by Clarence Filsfils.\n"
- title: 13.  Informative References
  contents:
  - "13.  Informative References\n   [ANALYSIS]   Zinin, A., \"Analysis and Minimization\
    \ of Microloops in\n                Link-state Routing Protocols\", Work in Progress,\n\
    \                October 2005.\n   [FRR-TUNN]   Bryant, S., Filsfils, C., Previdi,\
    \ S., and M. Shand, \"IP\n                Fast Reroute using tunnels\", Work in\
    \ Progress,\n                November 2007.\n   [LF-TIMERS]  Atlas, A., Bryant,\
    \ S., and M. Shand, \"Synchronisation of\n                Loop Free Timer Values\"\
    , Work in Progress,\n                February 2008.\n   [NOT-VIA]    Shand, M.,\
    \ Bryant, S., and S. Previdi, \"IP Fast Reroute\n                Using Not-via\
    \ Addresses\", Work in Progress, July 2009.\n   [OPT]        Francois, P., Shand,\
    \ M., and O. Bonaventure, \"Disruption\n                free topology reconfiguration\
    \ in OSPF networks\", IEEE\n                INFOCOM May 2007, Anchorage.\n   [RFC1305]\
    \    Mills, D., \"Network Time Protocol (Version 3)\n                Specification,\
    \ Implementation\", RFC 1305, March 1992.\n   [RFC2475]    Blake, S., Black, D.,\
    \ Carlson, M., Davies, E., Wang, Z.,\n                and W. Weiss, \"An Architecture\
    \ for Differentiated\n                Services\", RFC 2475, December 1998.\n \
    \  [RFC3168]    Ramakrishnan, K., Floyd, S., and D. Black, \"The Addition\n  \
    \              of Explicit Congestion Notification (ECN) to IP\",\n          \
    \      RFC 3168, September 2001.\n   [RFC4090]    Pan, P., Swallow, G., and A.\
    \ Atlas, \"Fast Reroute\n                Extensions to RSVP-TE for LSP Tunnels\"\
    , RFC 4090,\n                May 2005.\n   [RFC5036]    Andersson, L., Minei,\
    \ I., and B. Thomas, \"LDP\n                Specification\", RFC 5036, October\
    \ 2007.\n   [RFC5714]    Shand, M. and S. Bryant, \"IP Fast Reroute Framework\"\
    ,\n                RFC 5714, January 2010.\n   [SIG]        Francois, P. and O.\
    \ Bonaventure, \"Avoiding transient\n                loops during IGP convergence\"\
    , IEEE INFOCOM March 2005,\n                Miami.\n   [oFIB]       Francois,\
    \ P., \"Loop-free convergence using oFIB\", Work\n                in Progress,\
    \ February 2008.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Mike Shand\n   Cisco Systems\n   250, Longwater Ave,\n\
    \   Green Park, Reading,  RG2 6GB\n   United Kingdom\n   EMail: mshand@cisco.com\n\
    \   Stewart Bryant\n   Cisco Systems\n   250, Longwater Ave,\n   Green Park, Reading,\
    \  RG2 6GB\n   United Kingdom\n   EMail: stbryant@cisco.com\n"
