- title: __initial_text__
  contents:
  - '               RTP Payload Format for PureVoice(tm) Audio

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: ABSTRACT
  contents:
  - "ABSTRACT\n   This document describes the RTP payload format for PureVoice(tm)\n\
    \   Audio.  The packet format supports variable interleaving to reduce\n   the\
    \ effect of packet loss on audio quality.\n"
- title: 1 Introduction
  contents:
  - "1 Introduction\n   This document describes how compressed PureVoice audio as\
    \ produced by\n   the Qualcomm PureVoice CODEC [1] may be formatted for use as\
    \ an RTP\n   payload type.  A method is provided to interleave the output of the\n\
    \   compressor to reduce quality degradation due to lost packets.\n   Furthermore,\
    \ the sender may choose various interleave settings based\n   on the importance\
    \ of low end-to-end delay versus greater tolerance\n   for lost packets.\n   The\
    \ key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n\
    \   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",  \"MAY\", and \"OPTIONAL\" in\
    \ this\n   document are to be interpreted as described in RFC 2119 [3].\n"
- title: 2 Background
  contents:
  - "2 Background\n   The Electronic Industries Association (EIA) & Telecommunications\n\
    \   Industry Association (TIA) standard IS-733 [1] defines an audio\n   compression\
    \ algorithm for use in CDMA applications.  In addition to\n   being the standard\
    \ CODEC for all wireless CDMA terminals, the\n   Qualcomm PureVoice CODEC (a.k.a.\
    \ Qcelp) is used in several Internet\n   applications most notably JFax(tm), Apple(r)\
    \ QuickTime(tm), and\n   Eudora(r).\n   The Qcelp CODEC [1] compresses each 20\
    \ milliseconds of 8000 Hz, 16-\n   bit sampled input speech into one of four different\
    \ size output\n   frames:  Rate 1 (266 bits), Rate 1/2 (124 bits), Rate 1/4 (54\
    \ bits)\n   or Rate 1/8 (20 bits).  The CODEC chooses the output frame rate based\n\
    \   on analysis of the input speech and the current operating mode\n   (either\
    \ normal or reduced rate).  For typical speech patterns, this\n   results in an\
    \ average output of 6.8 k bits/sec for normal mode and\n   4.7 k bits/sec for\
    \ reduced rate mode.\n"
- title: 3 RTP/Qcelp Packet Format
  contents:
  - "3 RTP/Qcelp Packet Format\n   The RTP timestamp is in 1/8000 of a second units.\
    \  The RTP payload\n   data for the Qcelp CODEC has the following format:\n  \
    \  0                   1                   2                   3\n    0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      RTP Header [2]                           |\n   +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n\
    \   |RR | LLL | NNN |                                               |\n   +-+-+-+-+-+-+-+-+\
    \       one or more codec data frames           |\n   |                      \
    \       ....                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The RTP header has the expected values as described in [2].  The\n   extension\
    \ bit is not set and this payload type never sets the marker\n   bit.  The codec\
    \ data frames are aligned on octet boundaries.  When\n   interleaving is in use\
    \ and/or multiple codec data frames are present\n   in a single RTP packet, the\
    \ timestamp is, as always, that of the\n   oldest data represented in the RTP\
    \ packet.  The other fields have the\n   following meaning:\n   Reserved (RR):\
    \ 2 bits\n      MUST be set to zero by sender, SHOULD be ignored by receiver.\n\
    \   Interleave (LLL): 3 bits\n      MUST have a value between 0 and 5 inclusive.\
    \  The remaining two\n      values (6 and 7) MUST not be used by senders.  If\
    \ this field is\n      non-zero, interleaving is enabled.  All receivers MUST\
    \ support\n      interleaving.  Senders MAY support interleaving.  Senders that\
    \ do\n      not support interleaving MUST set field LLL and NNN to zero.\n   Interleave\
    \ Index (NNN): 3 bits\n      MUST have a value less than or equal to the value\
    \ of LLL.  Values\n      of NNN greater than the value of LLL are invalid.\n"
- title: 3.1 Receiving Invalid Values
  contents:
  - "3.1 Receiving Invalid Values\n   On receipt of an RTP packet with an invalid\
    \ value of the LLL or NNN\n   field, the RTP packet MUST be treated as lost by\
    \ the receiver for the\n   purpose of generating erasure frames as described in\
    \ section 4.\n"
- title: 3.2 CODEC data frame format
  contents:
  - "3.2 CODEC data frame format\n   The output of the Qcelp CODEC must be converted\
    \ into CODEC data\n   frames for inclusion in the RTP payload as follows:\n  \
    \ a. Octet 0 of the CODEC data frame indicates the rate and total size\n     \
    \ of the CODEC data frame as indicated in this table:\n      OCTET 0   RATE  \
    \    TOTAL CODEC data frame size (in octets)\n      -----------------------------------------------------------\n\
    \        0       Blank     1\n        1       1/8       4\n        2       1/4\
    \       8\n        3       1/2       17\n        4       1         35\n      \
    \  5       reserved  8 (SHOULD be treated as a reserved value)\n       14    \
    \   Erasure   1 (SHOULD NOT be transmitted by sender)\n       other    n/a   \
    \    reserved\n      Receipt of a CODEC data frame with a reserved value in octet\
    \ 0\n      MUST be considered invalid data as described in 3.1.\n   b. The bits\
    \ as numbered in the standard [1] from highest to lowest\n      are packed into\
    \ octets.  The highest numbered bit (265 for Rate 1,\n      123 for Rate 1/2,\
    \ 53 for Rate 1/4 and 19 for Rate 1/8) is placed\n      in the most significant\
    \ bit (Internet bit 0) of octet 1 of the\n      CODEC data frame.  The second\
    \ highest numbered bit (264 for Rate\n      1, etc.) is placed in the second most\
    \ significant bit (Internet\n      bit 1) of octet 1 of the data frame.  This\
    \ continues so that bit\n      258 from the standard Rate 1 frame is placed in\
    \ the least\n      significant bit of octet 1.  Bit 257 from the standard is placed\n\
    \      in the most significant bit of octet 2 and so on until bit 0 from\n   \
    \   the standard Rate 1 frame is placed in Internet bit 1 of octet 34\n      of\
    \ the CODEC data frame.  The remaining unused bits of the last\n      octet of\
    \ the CODEC data frame MUST be set to zero.\n      Here is a detail of how a Rate\
    \ 1/8 frame is converted into a CODEC\n      data frame:\n                   \
    \           CODEC data frame\n       0                   1                   2\
    \                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |               |1|1|1|1|1|1|1|1|1|1| | | | | | | | | | | | | | |\n   \
    \   | 1 (Rate 1/8)  |9|8|7|6|5|4|3|2|1|0|9|8|7|6|5|4|3|2|1|0|Z|Z|Z|Z|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Octet 0 of the data frame has value 1 (see table above) indicating\n  \
    \    the total data frame length (including octet 0) is 4 octets.  Bits\n    \
    \  19 through 0 from the standard Rate 1/8 frame are placed as\n      indicated\
    \ with bits marked with \"Z\" being set to zero.  The Rate\n      1, 1/4 and 1/2\
    \ standard frames are converted similarly.\n"
- title: 3.3 Bundling CODEC data frames
  contents:
  - "3.3 Bundling CODEC data frames\n   As indicated in section 3, more than one CODEC\
    \ data frame MAY be\n   included in a single RTP packet by a sender.  Receivers\
    \ MUST handle\n   bundles of up to 10 CODEC data frames in a single RTP packet.\n\
    \   Furthermore, senders have the following additional restrictions:\n   o  MUST\
    \ not bundle more CODEC data frames in a single RTP packet than\n      will fit\
    \ in the MTU of the RTP transport protocol.  For the\n      purpose of computing\
    \ the maximum bundling value, all CODEC data\n      frames should be assumed to\
    \ have the Rate 1 size.\n   o  MUST never bundle more than 10 CODEC data frames\
    \ in a single RTP\n      packet.\n   o  Once beginning transmission with a given\
    \ SSRC and given bundling\n      value, MUST NOT increase the bundling value.\
    \  If the bundling\n      value needs to be increased, a new SSRC number MUST\
    \ be used.\n   o  MAY decrease the bundling value only between interleave groups\n\
    \      (see section 3.4).  If the bundling value is decreased, it MUST\n     \
    \ NOT be increased (even to the original value), although it may be\n      decreased\
    \ again at a later time.\n"
- title: 3.3.1 Determining the number of bundled CODEC data frames
  contents:
  - "3.3.1 Determining the number of bundled CODEC data frames\n   Since no count\
    \ is transmitted as part of the RTP payload and the\n   CODEC data frames have\
    \ differing lengths, the only way to determine\n   how many CODEC data frames\
    \ are present in the RTP packet is to\n   examine octet 0 of each CODEC data frame\
    \ in sequence until the end of\n   the RTP packet is reached.\n"
- title: 3.4 Interleaving CODEC data frames
  contents:
  - "3.4 Interleaving CODEC data frames\n   Interleaving is meaningful only when more\
    \ than one CODEC data frame\n   is bundled into a single RTP packet.\n   All receivers\
    \ MUST support interleaving.  Senders MAY support\n   interleaving.\n   Given\
    \ a time-ordered sequence of output frames from the Qcelp CODEC\n   numbered 0..n,\
    \ a bundling value B, and an interleave value L where n\n   = B * (L+1) - 1, the\
    \ output frames are placed into RTP packets as\n   follows (the values of the\
    \ fields LLL and NNN are indicated for each\n   RTP packet):\n   First RTP Packet\
    \ in Interleave group:\n      LLL=L, NNN=0\n      Frame 0, Frame L+1, Frame 2(L+1),\
    \ Frame 3(L+1), ... for a total of\n      B frames\n   Second RTP Packet in Interleave\
    \ group:\n      LLL=L, NNN=1\n      Frame 1, Frame 1+L+1, Frame 1+2(L+1), Frame\
    \ 1+3(L+1), ... for a\n      total of B frames\n   This continues to the last\
    \ RTP packet in the interleave group:\n   L+1 RTP Packet in Interleave group:\n\
    \      LLL=L, NNN=L\n      Frame L, Frame L+L+1, Frame L+2(L+1), Frame L+3(L+1),\
    \ ... for a\n      total of B frames\n   Senders MUST transmit in timestamp-increasing\
    \ order.  Furthermore,\n   within each interleave group, the RTP packets making\
    \ up the\n   interleave group MUST be transmitted in value-increasing order of\
    \ the\n   NNN field.  While this does not guarantee reduced end-to-end delay on\n\
    \   the receiving end, when packets are delivered in order by the\n   underlying\
    \ transport, delay will be reduced to the minimum possible.\n   Additionally,\
    \ senders have the following restrictions:\n   o  Once beginning transmission\
    \ with a given SSRC and given interleave\n      value, MUST NOT increase the interleave\
    \ value.  If the interleave\n      value needs to be increased, a new SSRC number\
    \ MUST be used.\n   o  MAY decrease the interleave value only between interleave\
    \ groups.\n      If the interleave value is decreased, it MUST NOT be increased\n\
    \      (even to the original value), although it may be decreased again\n    \
    \  at a later time.\n"
- title: 3.5 Finding Interleave Group Boundaries
  contents:
  - "3.5 Finding Interleave Group Boundaries\n   Given an RTP packet with sequence\
    \ number S, interleave value (field\n   LLL) L, and interleave index value (field\
    \ NNN) N, the interleave\n   group consists of RTP packets with sequence numbers\
    \ from S-N to S-N+L\n   inclusive.  In other words, the Interleave group always\
    \ consists of\n   L+1 RTP packets with sequential sequence numbers.  The bundling\
    \ value\n   for all RTP packets in an interleave group MUST be the same.\n   The\
    \ receiver determines the expected bundling value for all RTP\n   packets in an\
    \ interleave group by the number of CODEC data frames\n   bundled in the first\
    \ RTP packet of the interleave group received.\n   Note that this may not be the\
    \ first RTP packet of the interleave\n   group sent if packets are delivered out\
    \ of order by the underlying\n   transport.\n   On receipt of an RTP packet in\
    \ an interleave group with other than\n   the expected bundling value, the receiver\
    \ MAY discard CODEC data\n   frames off the end of the RTP packet or add erasure\
    \ CODEC data frames\n   to the end of the packet in order to manufacture a substitute\
    \ packet\n   with the expected bundling value.  The receiver MAY instead choose\
    \ to\n   discard the whole interleave group and play silence.\n"
- title: 3.6 Reconstructing Interleaved Audio
  contents:
  - "3.6 Reconstructing Interleaved Audio\n   Given an RTP sequence number ordered\
    \ set of RTP packets in an\n   interleave group numbered 0..L, where L is the\
    \ interleave value and B\n   is the bundling value, and CODEC data frames within\
    \ each RTP packet\n   that are numbered in order from first to last with the numbers\
    \ 1..B,\n   the original, time-ordered sequence of output frames from the CODEC\n\
    \   may be reconstructed as follows:\n   First L+1 frames:\n      Frame 0 from\
    \ packet 0 of interleave group\n      Frame 0 from packet 1 of interleave group\n\
    \      And so on up to...\n      Frame 0 from packet L of interleave group\n \
    \  Second L+1 frames:\n      Frame 1 from packet 0 of interleave group\n     \
    \ Frame 1 from packet 1 of interleave group\n      And so on up to...\n      Frame\
    \ 1 from packet L of interleave group\n   And so on up to...\n   Bth L+1 frames:\n\
    \      Frame B from packet 0 of interleave group\n      Frame B from packet 1\
    \ of interleave group\n      And so on up to...\n      Frame B from packet L of\
    \ interleave group\n"
- title: 3.6.1 Additional Receiver Responsibility
  contents:
  - "3.6.1 Additional Receiver Responsibility\n   Assume that the receiver has begun\
    \ playing frames from an interleave\n   group.  The time has come to play frame\
    \ x from packet n of the\n   interleave group.  Further assume that packet n of\
    \ the interleave\n   group has not been received.  As described in section 4,\
    \ an erasure\n   frame will be sent to the Qcelp CODEC.\n   Now, assume that packet\
    \ n of the interleave group arrives before\n   frame x+1 of that packet is needed.\
    \  Receivers SHOULD use frame x+1\n   of the newly received packet n rather than\
    \ substituting an erasure\n   frame.  In other words, just because packet n wasn't\
    \ available the\n   first time it was needed to reconstruct the interleaved audio,\
    \ the\n   receiver SHOULD NOT assume it's not available when it's subsequently\n\
    \   needed for interleaved audio reconstruction.\n"
- title: 4 Handling lost RTP packets
  contents:
  - "4 Handling lost RTP packets\n   The Qcelp CODEC supports the notion of erasure\
    \ frames.  These are\n   frames that for whatever reason are not available.  When\n\
    \   reconstructing interleaved audio or playing back non-interleaved\n   audio,\
    \ erasure frames MUST be fed to the Qcelp CODEC for all of the\n   missing packets.\n\
    \   Receivers MUST use the timestamp clock to determine how many CODEC\n   data\
    \ frames are missing.  Each CODEC data frame advances the\n   timestamp clock\
    \ EXACTLY 160 counts.\n   Since the bundling value may vary (it can only decrease),\
    \ the\n   timestamp clock is the only reliable way to calculate exactly how\n\
    \   many CODEC data frames are missing when a packet is dropped.\n   Specifically\
    \ when reconstructing interleaved audio, a missing RTP\n   packet in the interleave\
    \ group should be treated as containing B\n   erasure CODEC data frames where\
    \ B is the bundling value for that\n   interleave group.\n"
- title: 5 Discussion
  contents:
  - "5 Discussion\n   The Qcelp CODEC interpolates the missing audio content when\
    \ given an\n   erasure frame.  However, the best quality is perceived by the\n\
    \   listener when erasure frames are not consecutive.  This makes\n   interleaving\
    \ desirable as it increases audio quality when dropped\n   packets are more likely.\n\
    \   On the other hand, interleaving can greatly increase the end-to-end\n   delay.\
    \  Where an interactive session is desired, an interleave (field\n   LLL) value\
    \ of 0 or 1 and a bundling factor of 4 or less is\n   recommended.\n   When end-to-end\
    \ delay is not a concern, a bundling value of at least\n   4 and an interleave\
    \ (field LLL) value of 4 or 5 is recommended\n   subject to MTU limitations.\n\
    \   The restrictions on senders set forth in sections 3.3 and 3.4\n   guarantee\
    \ that after receipt of the first payload packet from the\n   sender, the receiver\
    \ can allocate a well-known amount of buffer space\n   that will be sufficient\
    \ for all future reception from the same SSRC\n   value.  Less buffer space may\
    \ be required at some point in the future\n   if the sender decreases the bundling\
    \ value or interleave, but never\n   more buffer space.  This prevents the possibility\
    \ of the receiver\n   needing to allocate more buffer space (with the possible\
    \ result that\n   none is available) should the bundling value or interleave value\
    \ be\n   increased by the sender.  Also, were the interleave or bundling value\n\
    \   to increase, the receiver could be forced to pause playback while it\n   receives\
    \ the additional packets necessary for playback at an\n   increased bundling value\
    \ or increased interleave.\n"
- title: 6 Security Considerations
  contents:
  - "6 Security Considerations\n   RTP packets using the payload format defined in\
    \ this specification\n   are subject to the security considerations discussed\
    \ in the RTP\n   specification [2], and any appropriate profile (for example [4]).\n\
    \   This implies that confidentiality of the media streams is achieved by\n  \
    \ encryption.  Because the data compression used with this payload\n   format\
    \ is applied end-to-end, encryption may be performed after\n   compression so\
    \ there is no conflict between the two operations.\n   A potential denial-of-service\
    \ threat exists for data encodings using\n   compression techniques that have\
    \ non-uniform receiver-end\n   computational load.  The attacker can inject pathological\
    \ datagrams\n   into the stream which are complex to decode and cause the receiver\
    \ to\n   be overloaded.  However, this encoding does not exhibit any\n   significant\
    \ non-uniformity.\n   As with any IP-based protocol, in some circumstances, a\
    \ receiver may\n   be overloaded simply by the receipt of too many packets, either\n\
    \   desired or undesired.  Network-layer authentication may be used to\n   discard\
    \ packets from undesired sources, but the processing cost of\n   the authentication\
    \ itself may be too high.  In a multicast\n   environment, pruning of specific\
    \ sources may be implemented in future\n   versions of IGMP [5] and in multicast\
    \ routing protocols to allow a\n   receiver to select which sources are allowed\
    \ to reach it.\n"
- title: 7 References
  contents:
  - "7 References\n   [1]  TIA/EIA/IS-733.  TR45: High Rate Speech Service Option\
    \ for\n        Wideband Spread Spectrum Communications Systems.  Available from\n\
    \        Global Engineering +1 800 854 7179 or +1 303 792 2181.  May also\n  \
    \      be ordered online at http://www.eia.org/eng/.\n   [2]  Schulzrinne, H.,\
    \ Casner, S., Frederick, R. and V. Jacobson,\n        \"RTP:  A Transport Protocol\
    \ for Real-Time Applications\", RFC\n        1889, January 1996.\n   [3]  Bradner,\
    \ S., \"Key words for use in RFCs to Indicate Requirement\n        Levels\", BCP\
    \ 14, RFC 2119, March 1997.\n   [4]  Schulzrinne, H., \"RTP Profile for Audio\
    \ and Video Conferences\n        with Minimal Control\", RFC 1890, January 1996.\n\
    \   [5]  Deering, S., \"Host Extensions for IP Multicasting\", STD 5, RFC\n  \
    \      1112, August 1989.\n"
- title: 8 Author's Address
  contents:
  - "8 Author's Address\n   Kyle J. McKay\n   QUALCOMM Incorporated\n   5775 Morehouse\
    \ Drive\n   San Diego, CA 92121-1714\n   USA\n   Phone: +1 858 587 1121\n   EMail:\
    \ kylem@qualcomm.com\n"
- title: 9 Full Copyright Statement
  contents:
  - "9 Full Copyright Statement\n   Copyright (C) The Internet Society (1999).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
