- title: __initial_text__
  contents:
  - '      Multipath Issues in Unicast and Multicast Next-Hop Selection

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   Various routing protocols, including Open Shortest Path First (OSPF)\n\
    \   and Intermediate System to Intermediate System (ISIS), explicitly\n   allow\
    \ \"Equal-Cost Multipath\" (ECMP) routing.  Some router\n   implementations also\
    \ allow equal-cost multipath usage with RIP and\n   other routing protocols. \
    \ The effect of multipath routing on a\n   forwarder is that the forwarder potentially\
    \ has several next-hops for\n   any given destination and must use some method\
    \ to choose which next-\n   hop should be used for a given data packet.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Various routing protocols, including OSPF and ISIS, explicitly\
    \ allow\n   \"Equal-Cost Multipath\" routing.  Some router implementations also\n\
    \   allow equal-cost multipath usage with RIP and other routing\n   protocols.\
    \  Using equal-cost multipath means that if multiple equal-\n   cost routes to\
    \ the same destination exist, they can be discovered and\n   used to provide load\
    \ balancing among redundant paths.\n   The effect of multipath routing on a forwarder\
    \ is that the forwarder\n   potentially has several next-hops for any given destination\
    \ and must\n   use some method to choose which next-hop should be used for a given\n\
    \   data packet.  This memo summarizes current practices, problems, and\n   solutions.\n"
- title: 2.  Concerns
  contents:
  - "2.  Concerns\n   Several router implementations allow multipath forwarding. \
    \ This is\n   sometimes done naively via round-robin, where each packet matching\
    \ a\n   given destination route is forwarded using the subsequent next-hop,\n\
    \   in a round-robin fashion.  This does provide a form of load\n   balancing,\
    \ but there are several problems with approaches such as\n   round-robin or random:\n\
    \   Variable Path MTU\n         Since each of the redundant paths may have a different\
    \ MTU,\n         this means that the overall path MTU can change on a packet-\n\
    \         by-packet basis, negating the usefulness of path MTU discovery.\n  \
    \ Variable Latencies\n         Since each of the redundant paths may have a different\
    \ latency\n         involved, having packets take separate paths can cause packets\n\
    \         to always arrive out of order, increasing delivery latency and\n   \
    \      buffering requirements.\n         Packet reordering causes TCP to believe\
    \ that loss has taken\n         place when packets with higher sequence numbers\
    \ arrive before\n         an earlier one.  When three or more packets are received\
    \ before\n         a \"late\" packet, TCP enters a mode called \"fast-retransmit\"\
    \ [6]\n         which consumes extra bandwidth (which could potentially cause\n\
    \         more loss, decreasing throughput) as it attempts to\n         unnecessarily\
    \ retransmit the delayed packet(s).  Hence,\n         reordering can be detrimental\
    \ to network performance.\n   Debugging\n         Common debugging utilities such\
    \ as ping and traceroute are much\n         less reliable in the presence of multiple\
    \ paths and may even\n         present completely wrong results.\n   In multicast\
    \ routing, the problem with multiple paths is that\n   multicast routing protocols\
    \ prevent loops and duplicates by\n   constructing a single tree to all receivers\
    \ of the same group\n   address.  Multicast routing protocols deployed today (DVMRP,\
    \ PIM-DM,\n   PIM-SM) [2] construct shortest-path trees rooted at either the\n\
    \   source, or another router known as a Core or Rendezvous Point.\n   Hence,\
    \ the way they ensure that duplicates will not arise is that a\n   given tree\
    \ must use only a single next-hop towards the root of the\n   tree.\n"
- title: 3.  Requirements
  contents:
  - "3.  Requirements\n   In the remainder of this document, we will use the term\
    \ \"flow\" to\n   represent the granularity at which the router keeps state (if\
    \ at all)\n   for classes of traffic.  The exact definition of a flow may depend\
    \ on\n   the actual implementation.  For example, a flow might be identified\n\
    \   solely by destination address, or it might be identified by (source\n   address,\
    \ destination address, protocol id) triplet.  Hence \"flow\" is\n   not necessarily\
    \ synonymous with the term \"microflow\" as used in RFC\n   2474 [7], which also\
    \ includes port numbers.  Indeed, including\n   transport-layer information in\
    \ the next-hop selection process can\n   actually be problematic.  For example,\
    \ if packets are fragmented, the\n   transport-layer information may not be available\
    \ in every packet.\n   Furthermore, having the choice of path depend on transport-layer\n\
    \   fields may negate the benefit of caching information such as MTU for\n   use\
    \ in subsequent connections between the same endpoints.\n   All of the problems\
    \ outlined in the previous section arise when\n   packets in the same unicast\
    \ or multicast \"flow\" are split among\n   multiple paths.  The natural solution\
    \ is therefore to ensure that\n   packets for the same flow always use the same\
    \ path.\n   Two additional features are desirable:\n   Minimal disruption\n  \
    \       When multipath is used, meaning that multiple routes contribute\n    \
    \     valid next-hops, the chances are higher of routes being added\n        \
    \ and deleted from consideration than when only the \"best\" route\n         is\
    \ used (in which case metric changes in alternate routes have\n         no effect\
    \ on traffic paths).  Since a higher number of routes\n         may actually be\
    \ used for forwarding when multipath is in use,\n         the potential for packet\
    \ reordering and packet loss due to\n         route flaps can be much greater\
    \ than when not using multipath.\n         Hence, it is desirable to minimize\
    \ the number of active flows\n         affected by the addition or deletion of\
    \ another next-hop.\n   Fast implementation\n         The amount of additional\
    \ computation required to forward a\n         packet should be small.  For example,\
    \ when doing round-robin,\n         this computation might consist of incrementing\
    \ (modulo the\n         number of next-hops) a next-hop index.\n"
- title: 4.  Solutions
  contents:
  - "4.  Solutions\n   We now provide three possible methods for improving the performance\n\
    \   of multipath and then discuss their applicability to unicast and\n   multicast\
    \ forwarding.\n   Modulo-N Hash\n         To select a next-hop from the list of\
    \ N next-hops, the router\n         performs a modulo-N hash over the packet header\
    \ fields that\n         identify a flow.  This has the advantage of being fast,\
    \ at the\n         expense of (N-1)/N of all flows changing paths whenever a\n\
    \         next-hop is added or removed.\n   Hash-Threshold\n         The router\
    \ first selects a key by performing a hash over the\n         packet header fields\
    \ that identify the flow.  The N next-hops\n         have been assigned unique\
    \ regions in the hash function's output\n         space.  By comparing the hash\
    \ value against region boundaries\n         the router can determine which region\
    \ the hash value belongs to\n         and thus which next-hop to use.  This method\
    \ has the advantage\n         of only affecting flows near the region boundaries\
    \ (or\n         thresholds) when next-hops are added or removed.  For ECMP\n \
    \        hash-threshold's lookup can be done with a simple division\n        \
    \ (hash_value / fixed_region_size).  When a next-hop is added or\n         removed,\
    \ between 1/4 and 1/2 of all flows change paths.  An\n         analysis of this\
    \ method can be found in [3].\n   Highest Random Weight (HRW)\n         The router\
    \ computes a key for EACH next-hop by performing a\n         hash over the packet\
    \ header fields that identify the flow, as\n         well as over the address\
    \ of the next-hop.  The router then\n         chooses the next-hop with the highest\
    \ resulting key value [4].\n         This has the advantage of minimizing the\
    \ number of flows\n         affected by a next-hop addition or deletion (only\
    \ 1/N of them),\n         but is approximately N times as expensive as a modulo-N\
    \ hash.\n   The applicability of these three alternatives depends on (at least)\n\
    \   two factors: whether the forwarder maintains per-flow state, and how\n   precious\
    \ CPU is to a multipath forwarder.\n   Some routers may maintain per-flow state\
    \ for reasons other than for\n   supporting multipath.  For example, routers typically\
    \ keep per-flow\n   state for multicast flows so that they can maintain the list\
    \ of\n   interfaces to which packets in the flow should be copied.\n   If per-flow\
    \ state is maintained in a multipath forwarder, then\n   computation of the next-hop\
    \ can be done by the router at state\n   creation time.  This entails no additional\
    \ computations at packet\n   forwarding time compared with normal forwarding to\
    \ a single next-hop,\n   since the next-hop is precomputed.  In this case, any\
    \ method can be\n   used, including round-robin, random, modulo-N, hash-threshold\
    \ or HRW.\n   Hash functions such as modulo-N, hash-threshold and HRW are better\
    \ if\n   the forwarder state may be deleted for any reason during the lifetime\n\
    \   of a flow since subsequent next-hop computations by the router will\n   always\
    \ select the same path.  This also improves the usefulness of\n   debugging utilities\
    \ such as traceroute.  Finally, to maximize the\n   stability of paths (and hence\
    \ the usefulness of traceroute, etc.),\n   the use of HRW is recommended over\
    \ the other methods mentioned\n   herein.\n   If per-flow state is not maintained\
    \ by the forwarder, then using\n   multiple next-hops requires that the next-hop\
    \ be calculated at packet\n   arrival time.  When CPU is more precious than stability\
    \ of flow\n   paths, hash-threshold is recommended over the other methods mentioned\n\
    \   herein.\n"
- title: 4.1.  Unicast Forwarding
  contents:
  - "4.1.  Unicast Forwarding\n   Depending on the implementation, unicast forwarding\
    \ may or may not\n   keep per-flow state.  We recommend that where forwarder\n\
    \   implementations keep flow state, routers should use HRW at state\n   creation\
    \ time (and next-hop deletion time) to select the next-hop,\n   and that forwarders\
    \ without per-flow state use hash-threshold.\n"
- title: 4.2.  Multicast Forwarding
  contents:
  - "4.2.  Multicast Forwarding\n   Today's multicast forwarding engines use a cache\
    \ of forwarding\n   entries indexed by group (or group prefix) and source (or\
    \ source\n   prefix).  This means that today's multicast forwarder's always keep\n\
    \   per-flow state, although for some multicast routing protocols, the\n   \"\
    flow\" may be fairly coarse (e.g., traffic from all sources to the\n   same destination).\
    \  Since per-flow state is kept by the forwarder, it\n   is recommended that the\
    \ router always use HRW to select the next-hop.\n   Routers using explicit-joining\
    \ protocols such as PIM-SM [5] should\n   thus use the multipath information when\
    \ determining to which neighbor\n   a join message should be sent.  For example,\
    \ when multiple next-hops\n   exist for a given Rendezvous Point (RP) toward which\
    \ a (*,G) Join\n   should be sent, it is recommended that HRW be used to select\
    \ the\n   next-hop to use for each group.\n"
- title: 5.  Applicability
  contents:
  - "5.  Applicability\n   The algorithms discussed above (except round-robin) all\
    \ rely on some\n   form of hash function.  Equal flow distribution is achieved\
    \ when the\n   hash function is uniformly distributed.  Since the commonly used\
    \ hash\n   functions only become uniformly distributed when the number of inputs\n\
    \   is relatively large, these algorithms are more applicable to routers\n   used\
    \ to route many flows, than in, for example, a small business\n   setting.\n"
- title: 6.  Redundant Parallel Links
  contents:
  - "6.  Redundant Parallel Links\n   A related problem occurs when multiple parallel\
    \ links are used\n   between the same pair of routers.  A common solution is to\
    \ bundle the\n   two links together into a \"super\"-link when is then used for\
    \ routing.\n   For multicast forwarding, this results in the two links being reduced\n\
    \   to a single next-hop (over the combined link) which can be used to\n   prevent\
    \ duplicates.  When a unicast or multicast packet is queued to\n   the combined\
    \ link, some method, such as those discussed earlier, is\n   still required to\
    \ determine the physical link on which to transmit\n   the packet.  If the parallel\
    \ links are identical, then most of the\n   concerns discussed in this document\
    \ are avoided with the combined\n   link.  The exception is packet reordering,\
    \ which can still occur with\n   round-robin, adversely affecting TCP.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   This document discusses issues with various methods\
    \ of choosing a\n   next-hop from among multiple valid next-hops.  As such, it\
    \ does not\n   directly impact the security of the Internet infrastructure or\
    \ its\n   applications.\n   One issue that is worth mentioning, however, is that\
    \ when next-hop\n   selection is predictable, an attacker can synthesize traffic\
    \ that\n   will all hash the same, making it possible to launch a denial-of-\n\
    \   service attack that overloads a particular path.  Since a special\n   case\
    \ of this is when the same (single) next-hop is always selected,\n   such an attack\
    \ is easiest when multipath is not being used.\n   Introducing multipath routing\
    \ can make such an attack more difficult;\n   the more unpredictable the hash\
    \ is, the harder it becomes to conduct\n   a denial-of-service attack against\
    \ any single link.\n"
- title: 8.  References
  contents:
  - "8.  References\n   [1]  Moy, J., \"OSPF Version 2\", STD 54, RFC 2328, April\
    \ 1998.\n   [2]  Maufer, T., \"Deploying IP Multicast in the Enterprise\",\n \
    \       Prentice-Hall, 1998.\n   [3]  Hopps, C., \"Analysis of an Equal-Cost Multi-Path\
    \ Algorithm\", RFC\n        2992, November 2000.\n   [4]  Thaler, D., and C.V.\
    \ Ravishankar, \"Using Name-Based Mappings to\n        Increase Hit Rates\", IEEE/ACM\
    \ Transactions on Networking,\n        February 1998.\n   [5]  Estrin, D., Farinacci,\
    \ D., Helmy, A., Thaler, D., Deering, S.,\n        Handley, M., Jacobson, V.,\
    \ Liu, C., Sharma, P. and L. Wei,\n        \"Protocol Independent Multicast-Sparse\
    \ Mode (PIM-SM): Protocol\n        Specification\", RFC 2362, June 1998.\n   [6]\
    \  Allman, M., Paxson, V. and W. Stevens, \"TCP Congestion Control\",\n      \
    \  RFC 2581, April 1999.\n   [7]  Nichols, K., Blake, S., Baker, F. and D. Black.,\
    \ \"Definition of\n        the Differentiated Services Field (DS Field) in the\
    \ IPv4 and\n        IPv6 Headers\", RFC 2474, December 1998.\n"
- title: 9.  Authors' Addresses
  contents:
  - "9.  Authors' Addresses\n   Dave Thaler\n   Microsoft\n   One Microsoft Way\n\
    \   Redmond, WA  98052\n   Phone: +1 425 703 8835\n   EMail: dthaler@dthaler.microsoft.com\n\
    \   Christian E. Hopps\n   NextHop Technologies, Inc.\n   517 W. William Street\n\
    \   Ann Arbor, MI 48103-4943\n   U.S.A\n   Phone: +1 734 936 0291\n   EMail: chopps@nexthop.com\n"
- title: 10.  Full Copyright Statement
  contents:
  - "10.  Full Copyright Statement\n   Copyright (C) The Internet Society (2000).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
