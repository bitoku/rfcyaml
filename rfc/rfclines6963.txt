Abstract This document defines a Uniform Resource Name (URN)
namespace identifier enabling the generation of URNs that are appropriate for use in documentation and in URN related testing and experimentation.
The Uniform Resource Name (URN) technology [RFC2141] provides a way to generate persistent, location independent resource identifiers.
The primary "scope" of a URN is provided by its namespace identifier (NID).
As specified in [RFC3406], there are three kinds of NIDs: formal, informal, and experimental.
Most of the NIDs registered to date are formal.
As far as is known, the few informal namespaces have not been widely used, and the experimental namespaces are by definition unregistered.
The experimental namespaces take the form "X NID" (where "NID" is the desired namespace identifier).
Because the "X " convention has been deprecated in general [RFC6648], it seems sensible to achieve the same objective in a different way.
Therefore, this document registers a formal namespace identifier of "example", similar to "example.com" and other domain names [RFC2606].
Under the "example" NID, specification authors and code developers can mint URNs for use in documentation and in URN related testing and experimentation by assigning their own unique Namespace Specific Strings without fear of conflicts with current or future actual URNs.
Such URNs are intended for use as examples in documentation, testing of code for URN and URI processing, URN related experimentation, invalid URNs, and other similar uses.
They are not intended for testing non URI code or for building higher level applications for use over the Internet or private networks (e.g., as XML namespace names), since it is relatively easy to mint URIs whose authority component is a domain name controlled by the person or organization that wishes to engage in such testing and experimentation.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
Completed Namespace Definition Template 3.1.
The Namespace ID "example" has been assigned.
Registration Information Version 1 Date: 2013 04 24 3.3.
Declared Registrant of the Namespace Registering organization:
IETF Designated contact: IESG, iesg@ietf.org 3.4.
Declaration of Syntactic Structure URNs that use the "example" NID shall have the following structure:
example:{NSS} The Namespace Specific String (NSS) is a mandatory string of ASCII characters [RFC20] that conforms to the URN syntax requirements [RFC2141] and provides a name that is useful within the relevant documentation example, test suite, or other application.
Relevant Ancillary Documentation See [RFC6648] for information about deprecation of the "X " convention in protocol parameters and identifiers.
URNs ought to strive for uniqueness in the Namespace Specific String portion of the URN.
However, such uniqueness cannot be guaranteed through the assignment process.
Therefore, it is NOT RECOMMENDED for implementers to use example URNs for any purposes other than documentation, private testing, and truly experimental contexts.
Identifier Persistence Considerations Once minted, an example URN is immutable.
However, it is simply a string; and there is no guarantee that the documentation, test suite, or other application using the URN is immutable.
Process of Identifier Assignment Assignment is completely open, since anyone can mint example URNs for use in documentation, private testing, and other experimental contexts.
Process for Identifier Resolution Example URNs are not intended to be resolved, and the namespace will probably never be registered with a Resolution Discovery System (except to simply inform requesters that such URNs are merely examples).
No special considerations; the rules for lexical equivalence specified in [RFC2141] apply.
The scope of an example URN is limited to the documentation in which it is found, the test in which it is used, the experiment in which it appears, etc.
Example URNs have no meaning outside such strictly limited contexts.
No existing formal namespace enables entities to generate URNs that are appropriate for use as examples in documentation and in URN related testing and experimentation.
It could be argued that no such formal namespace is needed, given that experimental namespaces can be minted at will.
However, experimental namespaces run afoul of the trend away from using the "X " convention in the names of protocol parameters and identifiers [RFC6648].
Additionally, in practice, specification authors often mint examples using fake NIDs that go unregistered because they are never intended to be used.
To minimize the possibility of confusion, use of this dedicated example namespace is recommended for generating example URNs.
The "example" NID is intended to provide a clean, easily recognizable space for minting examples to be used in documentation and in URN related testing and experimentation.
The NSS is best as a unique string, generated by the person, organization, or other entity that creates the documentation, test suite, or other application.
There is no issuing authority for example URNs, and it is not intended that they can be resolved in any meaningful way.
The "example" NID does not obviate the need to coordinate with issuing authorities for existing namespaces (e.g., minting "urn:example:
xmpp:foo" instead of requesting issuance of "urn:xmpp:foo"), to register new namespace identifiers if existing namespaces do not match one's desired functionality (e.g., minting "urn:example:sha 1:29ead03e784b2f636a23ffff95ed12b56e2f2637" instead of registering the "sha 1" NID), or to respect the basic spirit of URN NID assignment (e.g., setting up shadow NIDs such as "urn:example:MyCompany: " instead of using, say, HTTP URIs).
This document introduces no additional security considerations beyond those associated with the use and resolution of URNs in general.
This document defines a URN NID registration of "example", which IANA has added to the "Formal URN Namespaces" registry.
The completed registration template can be found in Section 3.
