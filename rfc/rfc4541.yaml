- title: __initial_text__
  contents:
  - "      Considerations for Internet Group Management Protocol (IGMP)\n       and\
    \ Multicast Listener Discovery (MLD) Snooping Switches\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo describes the recommendations for Internet Group Management\n\
    \   Protocol (IGMP) and Multicast Listener Discovery (MLD) snooping\n   switches.\
    \  These are based on best current practices for IGMPv2, with\n   further considerations\
    \ for IGMPv3- and MLDv2-snooping.  Additional\n   areas of relevance, such as\
    \ link layer topology changes and\n   Ethernet-specific encapsulation issues,\
    \ are also considered.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The IEEE bridge standard [BRIDGE] specifies how LAN packets\
    \ are\n   'bridged', or as is more commonly used today, switched between LAN\n\
    \   segments.  The operation of a switch with respect to multicast\n   packets\
    \ can be summarized as follows.  When processing a packet whose\n   destination\
    \ MAC address is a multicast address, the switch will\n   forward a copy of the\
    \ packet into each of the remaining network\n   interfaces that are in the forwarding\
    \ state in accordance with\n   [BRIDGE].  The spanning tree algorithm ensures\
    \ that the application\n   of this rule at every switch in the network will make\
    \ the packet\n   accessible to all nodes connected to the network.\n   This behaviour\
    \ works well for broadcast packets that are intended to\n   be seen or processed\
    \ by all connected nodes.  In the case of\n   multicast packets, however, this\
    \ approach could lead to less\n   efficient use of network bandwidth, particularly\
    \ when the packet is\n   intended for only a small number of nodes.  Packets will\
    \ be flooded\n   into network segments where no node has any interest in receiving\
    \ the\n   packet.  While nodes will rarely incur any processing overhead to\n\
    \   filter packets addressed to unrequested group addresses, they are\n   unable\
    \ to transmit new packets onto the shared media for the period\n   of time that\
    \ the multicast packet is flooded.  In general,\n   significant bandwidth can\
    \ be wasted by flooding.\n   In recent years, a number of commercial vendors have\
    \ introduced\n   products described as \"IGMP snooping switches\" to the market.\
    \  These\n   devices do not adhere to the conceptual model that provides the\n\
    \   strict separation of functionality between different communications\n   layers\
    \ in the ISO model, and instead utilize information in the upper\n   level protocol\
    \ headers as factors to be considered in processing at\n   the lower levels. \
    \ This is analogous to the manner in which a router\n   can act as a firewall\
    \ by looking into the transport protocol's header\n   before allowing a packet\
    \ to be forwarded to its destination address.\n   In the case of IP multicast\
    \ traffic, an IGMP snooping switch provides\n   the benefit of conserving bandwidth\
    \ on those segments of the network\n   where no node has expressed interest in\
    \ receiving packets addressed\n   to the group address.  This is in contrast to\
    \ normal switch behavior\n   where multicast traffic is typically forwarded on\
    \ all interfaces.\n   Many switch datasheets state support for IGMP snooping,\
    \ but no\n   recommendations for this exist today.  It is the authors' hope that\n\
    \   the information presented in this document will supply this\n   foundation.\n\
    \   The recommendations presented here are based on the following\n   information\
    \ sources: The IGMP specifications [RFC1112], [RFC2236] and\n   [IGMPv3], vendor-supplied\
    \ technical documents [CISCO], bug reports\n   [MSOFT], discussions with people\
    \ involved in the design of IGMP\n   snooping switches, MAGMA mailing list discussions,\
    \ and on replies by\n   switch vendors to an implementation questionnaire.\n \
    \  Interoperability issues that arise between different versions of IGMP\n   are\
    \ not the focus of this document.  Interested readers are directed\n   to [IGMPv3]\
    \ for a thorough description of problem areas.\n   The suggestions in this document\
    \ are based on IGMP, which applies\n   only to IPv4.  For IPv6, Multicast Listener\
    \ Discovery [MLD] must be\n   used instead.  Because MLD is based on IGMP, we\
    \ do not repeat the\n   entire description and recommendations for MLD snooping\
    \ switches.\n   Instead, we point out the few cases where there are differences\
    \ from\n   IGMP.\n   Note that the IGMP snooping function should apply only to\
    \ IPv4\n   multicasts.  Other multicast packets, such as IPv6, might be\n   suppressed\
    \ by IGMP snooping if additional care is not taken in the\n   implementation as\
    \ mentioned in the recommendations section.  It is\n   desired not to restrict\
    \ the flow of non-IPv4 multicasts other than to\n   the degree which would happen\
    \ as a result of regular bridging\n   functions.  Likewise, MLD snooping switches\
    \ are discouraged from\n   using topological information learned from IPv6 traffic\
    \ to alter the\n   forwarding of IPv4 multicast packets.\n"
- title: 2.  IGMP Snooping Recommendations
  contents:
  - "2.  IGMP Snooping Recommendations\n   The following sections list the recommendations\
    \ for an IGMP snooping\n   switch.  The recommendation is stated and is supplemented\
    \ by a\n   description of a possible implementation approach.  All\n   implementation\
    \ discussions are examples only and there may well be\n   other ways to achieve\
    \ the same functionality.\n"
- title: 2.1.  Forwarding rules
  contents:
  - "2.1.  Forwarding rules\n   The IGMP snooping functionality is separated into\
    \ a control section\n   (IGMP forwarding) and a data section (Data forwarding).\n"
- title: 2.1.1.  IGMP Forwarding Rules
  contents:
  - "2.1.1.  IGMP Forwarding Rules\n   1) A snooping switch should forward IGMP Membership\
    \ Reports only to\n      those ports where multicast routers are attached.\n \
    \     Alternatively stated: a snooping switch should not forward IGMP\n      Membership\
    \ Reports to ports on which only hosts are attached.  An\n      administrative\
    \ control may be provided to override this\n      restriction, allowing the report\
    \ messages to be flooded to other\n      ports.\n      This is the main IGMP snooping\
    \ functionality for the control path.\n      Sending membership reports to other\
    \ hosts can result, for IGMPv1\n      and IGMPv2, in unintentionally preventing\
    \ a host from joining a\n      specific multicast group.\n      When an IGMPv1\
    \ or IGMPv2 host receives a membership report for a\n      group address that\
    \ it intends to join, the host will suppress its\n      own membership report\
    \ for the same group.  This join or message\n      suppression is a requirement\
    \ for IGMPv1 and IGMPv2 hosts.\n      However, if a switch does not receive a\
    \ membership report from the\n      host it will not forward multicast data to\
    \ it.\n      This is not a problem in an IGMPv3-only network because there is\n\
    \      no suppression of IGMP Membership reports.\n      The administrative control\
    \ allows IGMP Membership Report messages\n      to be processed by network monitoring\
    \ equipment such as packet\n      analyzers or port replicators.\n      The switch\
    \ supporting IGMP snooping must maintain a list of\n      multicast routers and\
    \ the ports on which they are attached.  This\n      list can be constructed in\
    \ any combination of the following ways:\n      a) This list should be built by\
    \ the snooping switch sending\n         Multicast Router Solicitation messages\
    \ as described in IGMP\n         Multicast Router Discovery [MRDISC].  It may\
    \ also snoop\n         Multicast Router Advertisement messages sent by and to\
    \ other\n         nodes.\n      b) The arrival port for IGMP Queries (sent by\
    \ multicast routers)\n         where the source address is not 0.0.0.0.\n    \
    \     The 0.0.0.0 address represents a special case where the switch\n       \
    \  is proxying IGMP Queries for faster network convergence, but is\n         not\
    \ itself the Querier.  The switch does not use its own IP\n         address (even\
    \ if it has one), because this would cause the\n         Queries to be seen as\
    \ coming from a newly elected Querier.  The\n         0.0.0.0 address is used\
    \ to indicate that the Query packets are\n         NOT from a multicast router.\n\
    \      c) Ports explicitly configured by management to be IGMP-forwarding\n  \
    \       ports, in addition to or instead of any of the above methods to\n    \
    \     detect router ports.\n   2) IGMP networks may also include devices that\
    \ implement \"proxy-\n      reporting\", in which reports received from downstream\
    \ hosts are\n      summarized and used to build internal membership states.  Such\n\
    \      proxy-reporting devices may use the all-zeros IP Source-Address\n     \
    \ when forwarding any summarized reports upstream.  For this reason,\n      IGMP\
    \ membership reports received by the snooping switch must not\n      be rejected\
    \ because the source IP address is set to 0.0.0.0.\n   3) The switch that supports\
    \ IGMP snooping must flood all unrecognized\n      IGMP messages to all other\
    \ ports and must not attempt to make use\n      of any information beyond the\
    \ end of the network layer header.\n      In addition, earlier versions of IGMP\
    \ should interpret IGMP fields\n      as defined for their versions and must not\
    \ alter these fields when\n      forwarding the message.  When generating new\
    \ messages, a given\n      IGMP version should set fields to the appropriate values\
    \ for its\n      own version.  If any fields are reserved or otherwise undefined\n\
    \      for a given IGMP version, the fields should be ignored when\n      parsing\
    \ the message and must be set to zeroes when new messages\n      are generated\
    \ by implementations of that IGMP version.  An\n      exception may occur if the\
    \ switch is performing a spoofing\n      function, and is aware of the settings\
    \ for new or reserved fields\n      that would be required to correctly spoof\
    \ for a different IGMP\n      version.\n      The reason to worry about these\
    \ trivialities is that IGMPv3\n      overloads the old IGMP query message using\
    \ the same type number\n      (0x11) but with an extended header.  Therefore there\
    \ is a risk\n      that IGMPv3 queries may be interpreted as older version queries\n\
    \      by, for example, IGMPv2 snooping switches.  This has already been\n   \
    \   reported [IETF56] and is discussed in section 2.2.\n   4) An IGMP snooping\
    \ switch should be aware of link layer topology\n      changes caused by Spanning\
    \ Tree operation.  When a port is enabled\n      or disabled by Spanning Tree,\
    \ a General Query may be sent on all\n      active non-router ports in order to\
    \ reduce network convergence\n      time.  Non-Querier switches should be aware\
    \ of whether the Querier\n      is in IGMPv3 mode.  If so, the switch should not\
    \ spoof any General\n      Queries unless it is able to send an IGMPv3 Query that\
    \ adheres to\n      the most recent information sent by the true Querier.  In\
    \ no case\n      should a switch introduce a spoofed IGMPv2 Query into an IGMPv3\n\
    \      network, as this may create excessive network disruption.\n      If the\
    \ switch is not the Querier, it should use the 'all-zeros' IP\n      Source Address\
    \ in these proxy queries (even though some hosts may\n      elect to not process\
    \ queries with a 0.0.0.0 IP Source Address).\n      When such proxy queries are\
    \ received, they must not be included in\n      the Querier election process.\n\
    \   5) An IGMP snooping switch must not make use of information in IGMP\n    \
    \  packets where the IP or IGMP headers have checksum or integrity\n      errors.\
    \  The switch should not flood such packets but if it does,\n      it should also\
    \ take some note of the event (i.e., increment a\n      counter).  These errors\
    \ and their processing are further discussed\n      in [IGMPv3], [MLD] and [MLDv2].\n\
    \   6) The snooping switch must not rely exclusively on the appearance of\n  \
    \    IGMP Group Leave announcements to determine when entries should be\n    \
    \  removed from the forwarding table.  It should implement a\n      membership\
    \ timeout mechanism such as the router-side functionality\n      of the IGMP protocol\
    \ as described in the IGMP and MLD\n      specifications (See Normative Reference\
    \ section for IGMPv1-3 and\n      MLDv1-2) on all its non-router ports.  This\
    \ timeout value should\n      be configurable.\n"
- title: 2.1.2.  Data Forwarding Rules
  contents:
  - "2.1.2.  Data Forwarding Rules\n   1) Packets with a destination IP address outside\
    \ 224.0.0.X which are\n      not IGMP should be forwarded according to group-based\
    \ port\n      membership tables and must also be forwarded on router ports.\n\
    \      This is the main IGMP snooping functionality for the data path.\n     \
    \ One approach that an implementation could take would be to\n      maintain separate\
    \ membership and multicast router tables in\n      software and then \"merge\"\
    \ these tables into a forwarding cache.\n   2) Packets with a destination IP (DIP)\
    \ address in the 224.0.0.X range\n      which are not IGMP must be forwarded on\
    \ all ports.\n      This recommendation is based on the fact that many host systems\
    \ do\n      not send Join IP multicast addresses in this range before sending\n\
    \      or listening to IP multicast packets.  Furthermore, since the\n      224.0.0.X\
    \ address range is defined as link-local (not to be\n      routed), it seems unnecessary\
    \ to keep the state for each address\n      in this range.  Additionally, some\
    \ routers operate in the\n      224.0.0.X address range without issuing IGMP Joins,\
    \ and these\n      applications would break if the switch were to prune them due\
    \ to\n      not having seen a Join Group message from the router.\n   3) An unregistered\
    \ packet is defined as an IPv4 multicast packet with\n      a destination address\
    \ which does not match any of the groups\n      announced in earlier IGMP Membership\
    \ Reports.\n      If a switch receives an unregistered packet, it must forward\
    \ that\n      packet on all ports to which an IGMP router is attached.  A switch\n\
    \      may default to forwarding unregistered packets on all ports.\n      Switches\
    \ that do not forward unregistered packets to all ports\n      must include a\
    \ configuration option to force the flooding of\n      unregistered packets on\
    \ specified ports.\n      In an environment where IGMPv3 hosts are mixed with\
    \ snooping\n      switches that do not yet support IGMPv3, the switch's failure\
    \ to\n      flood unregistered streams could prevent v3 hosts from receiving\n\
    \      their traffic.  Alternatively, in environments where the snooping\n   \
    \   switch supports all of the IGMP versions that are present,\n      flooding\
    \ unregistered streams may cause IGMP hosts to be\n      overwhelmed by multicast\
    \ traffic, even to the point of not\n      receiving Queries and failing to issue\
    \ new membership reports for\n      their own groups.\n      It is encouraged\
    \ that snooping switches at least recognize and\n      process IGMPv3 Join Reports,\
    \ even if this processing is limited to\n      the behavior for IGMPv2 Joins,\
    \ i.e., is done without considering\n      any additional \"include source\" or\
    \ \"exclude source\" filtering.\n      When IGMPv3 Joins are not recognized, a\
    \ snooping switch may\n      incorrectly prune off the unregistered data streams\
    \ for the groups\n      (as noted above); alternatively, it may fail to add in\
    \ forwarding\n      to any new IGMPv3 hosts if the group has previously been joined\
    \ as\n      IGMPv2 (because the data stream is seen as already having been\n \
    \     registered).\n   4) All non-IPv4 multicast packets should continue to be\
    \ flooded out\n      to all remaining ports in the forwarding state as per normal\
    \ IEEE\n      bridging operations.\n      This recommendation is a result of the\
    \ fact that groups made up of\n      IPv4 hosts and IPv6 hosts are completely\
    \ separate and distinct\n      groups.  As a result, information gleaned from\
    \ the topology\n      between members of an IPv4 group would not be applicable\
    \ when\n      forming the topology between members of an IPv6 group.\n   5) IGMP\
    \ snooping switches may maintain forwarding tables based on\n      either MAC\
    \ addresses or IP addresses.  If a switch supports both\n      types of forwarding\
    \ tables then the default behavior should be to\n      use IP addresses.  IP address\
    \ based forwarding is preferred\n      because the mapping between IP multicast\
    \ addresses and link-layer\n      multicast addresses is ambiguous.  In the case\
    \ of Ethernet, there\n      is a multiplicity of 1 Ethernet address to 32 IP addresses\n\
    \      [RFC1112].\n   6) Switches which rely on information in the IP header should\
    \ verify\n      that the IP header checksum is correct.  If the checksum fails,\n\
    \      the information in the packet must not be incorporated into the\n     \
    \ forwarding table.  Further, the packet should be discarded.\n   7) When IGMPv3\
    \ \"include source\" and \"exclude source\" membership\n      reports are received\
    \ on shared segments, the switch needs to\n      forward the superset of all received\
    \ membership reports on to the\n      shared segment.  Forwarding of traffic from\
    \ a particular source S\n      to a group G must happen if at least one host on\
    \ the shared\n      segment reports an IGMPv3 membership of the type INCLUDE(G,\n\
    \      Slist1) or EXCLUDE(G, Slist2), where S is an element of Slist1 and\n  \
    \    not an element of Slist2.\n      The practical implementation of the (G,S1,S2,...)\
    \ based data\n      forwarding tables are not within the scope of this document.\n\
    \      However, one possibility is to maintain two (G,S) forwarding\n      lists:\
    \ one for the INCLUDE filter where a match of a specific\n      (G,S) is required\
    \ before forwarding will happen, and one for the\n      EXCLUDE filter where a\
    \ match of a specific (G,S) will result in no\n      forwarding.\n"
- title: 2.2.  IGMP Snooping-Related Problems
  contents:
  - "2.2.  IGMP Snooping-Related Problems\n   A special problem arises in networks\
    \ consisting of IGMPv3 routers as\n   well as IGMPv2 and IGMPv3 hosts interconnected\
    \ by an IGMPv2 snooping\n   switch as recently reported [IETF56].  The router\
    \ will continue to\n   maintain IGMPv3 even in the presence of IGMPv2 hosts, and\
    \ thus the\n   network will not converge on IGMPv2.  But it is likely that the\n\
    \   IGMPv2 snooping switch will not recognize or process the IGMPv3\n   membership\
    \ reports.  Groups for these unrecognized reports will then\n   either be flooded\
    \ (with all of the problems that may create for hosts\n   in a network with a\
    \ heavy multicast load) or pruned by the snooping\n   switch.\n   Therefore, it\
    \ is recommended that in such a network, the multicast\n   router be configured\
    \ to use IGMPv2.  If this is not possible, and if\n   the snooping switch cannot\
    \ recognize and process the IGMPv3\n   membership reports, it is instead recommended\
    \ that the switch's IGMP\n   snooping functionality be disabled, as there is no\
    \ clear solution to\n   this problem.\n"
- title: 3.  IPv6 Considerations
  contents:
  - "3.  IPv6 Considerations\n   In order to avoid confusion, the previous discussions\
    \ have been based\n   on the IGMP protocol which only applies to IPv4 multicast.\
    \  In the\n   case of IPv6, most of the above discussions are still valid with\
    \ a\n   few exceptions that we will describe here.\n   The control and data forwarding\
    \ rules in the IGMP section can, with a\n   few considerations, also be applied\
    \ to MLD.  This means that the\n   basic functionality of intercepting MLD packets,\
    \ and building\n   membership lists and multicast router lists, is the same as\
    \ for IGMP.\n   In IPv6, the data forwarding rules are more straight forward because\n\
    \   MLD is mandated for addresses with scope 2 (link-scope) or greater.\n   The\
    \ only exception is the address FF02::1 which is the all hosts\n   link-scope\
    \ address for which MLD messages are never sent.  Packets\n   with the all hosts\
    \ link-scope address should be forwarded on all\n   ports.\n   MLD messages are\
    \ also not sent regarding groups with addresses in the\n   range FF00::/15 (which\
    \ encompasses both the reserved FF00::/16 and\n   node-local FF01::/16 IPv6 address\
    \ spaces).  These addresses should\n   never appear in packets on the link.\n\
    \   Equivalent to the IPv4 behaviors regarding the null IP Source\n   address,\
    \ MLD membership reports must not be rejected by an MLD\n   snooping switch because\
    \ of an unspecified IP source address (::).\n   Additionally, if a non-Querier\
    \ switch spoofs any General Queries (as\n   addressed in Section 2.1 above, for\
    \ Spanning Tree topology changes),\n   the switch should use the null IP source\
    \ address (::) when sending\n   said queries.  When such proxy queries are received,\
    \ they must not be\n   included in the Querier election process.\n   The three\
    \ major differences between IPv4 and IPv6 in relation to\n   multicast are:\n\
    \   -  The IPv6 protocol for multicast group maintenance is called\n      Multicast\
    \ Listener Discovery [MLDv2].  MLDv2 uses ICMPv6 message\n      types instead\
    \ of IGMP message types.\n   -  The RFCs [IPV6-ETHER] and [IPV6-FDDI] describe\
    \ how 32 of the 128\n      bit DIP addresses are used to form the 48 bit DMAC\
    \ addresses for\n      multicast groups, while [IPV6-TOKEN] describes the mapping\
    \ for\n      token ring DMAC addresses by using three low-order bits.  The\n \
    \     specification [IPV6-1394] makes use of a 6 bit channel number.\n   -  Multicast\
    \ router discovery is accomplished using the Multicast\n      Router Discovery\
    \ Protocol (MRDISC) defined in [MRDISC].\n   The IPv6 packet header does not include\
    \ a checksum field.\n   Nevertheless, the switch should detect other packet integrity\
    \ issues\n   such as address version and payload length consistencies if possible.\n\
    \   When the snooping switch detects such an error, it must not include\n   information\
    \ from the corresponding packet in the MLD forwarding\n   table.  The forwarding\
    \ code should instead drop the packet and take\n   further reasonable actions\
    \ as advocated above.\n   The fact that MLDv2 is using ICMPv6 adds new requirements\
    \ to a\n   snooping switch because ICMPv6 has multiple uses aside from MLD.\n\
    \   This means that it is no longer sufficient to detect that the next-\n   header\
    \ field of the IP header is ICMPv6 in order to identify packets\n   relevant for\
    \ MLD snooping.  A software-based implementation which\n   treats all ICMPv6 packets\
    \ as candidates for MLD snooping could easily\n   fill its receive queue and bog\
    \ down the CPU with irrelevant packets.\n   This would prevent the snooping functionality\
    \ from performing its\n   intended purpose and the non-MLD packets destined for\
    \ other hosts\n   could be lost.\n   A solution is either to require that the\
    \ snooping switch looks\n   further into the packets, or to be able to detect\
    \ a multicast DMAC\n   address in conjunction with ICMPv6.  The first solution\
    \ is desirable\n   when a configuration option allows the administrator to specify\
    \ which\n   ICMPv6 message types should trigger a CPU redirect and which should\n\
    \   not.  The reason is that a hardcoding of message types is inflexible\n   for\
    \ the introduction of new message types.  The second solution\n   introduces the\
    \ risk that new protocols that use ICMPv6 and multicast\n   DMAC addresses could\
    \ be incorrectly identified as MLD.  It is\n   suggested that solution one is\
    \ preferred when the configuration\n   option is provided.  If this is not the\
    \ case, then the implementor\n   should seriously consider making it available\
    \ since Neighbor\n   Discovery messages would be among those that fall into this\
    \ false\n   positive case and are vital for the operational integrity of IPv6\n\
    \   networks.\n   The mapping from IP multicast addresses to multicast DMAC addresses\n\
    \   introduces a potentially enormous overlap.  The structure of an IPv6\n   multicast\
    \ address is shown in the figure below.  As a result, there\n   are 2 ** (112\
    \ - 32), or more than 1.2e24 unique DIP addresses which\n   map into a single\
    \ DMAC address in Ethernet and FDDI.  This should be\n   compared to 2**5 in the\
    \ case of IPv4.\n   Initial allocation of IPv6 multicast addresses, as described\
    \ in\n   [RFC3307], however, cover only the lower 32 bits of group ID.  While\n\
    \   this reduces the problem of address ambiguity to group IDs with\n   different\
    \ flag and scope values for now, it should be noted that the\n   allocation policy\
    \ may change in the future.  Because of the potential\n   overlap it is recommended\
    \ that IPv6 address based forwarding is\n   preferred to MAC address based forwarding.\n\
    \      |   8    |  4 |  4 |             112 bits                  |\n      +--------+----+----+---------------------------------------+\n\
    \      |11111111|flgs|scop|             group ID                  |\n      +--------+----+----+---------------------------------------+\n"
- title: 4.  IGMP Questionnaire
  contents:
  - "4.  IGMP Questionnaire\n   As part of this work, the following questions were\
    \ asked on the MAGMA\n   discussion list and were sent to known switch vendors\
    \ implementing\n   IGMP snooping.  The individual contributions have been anonymized\n\
    \   upon request and do not necessarily apply to all of the vendors'\n   products.\n\
    \   The questions were:\n      Q1  Do your switches perform IGMP Join aggregation?\
    \  In other\n          words, are IGMP joins intercepted, absorbed by the\n  \
    \        hardware/software so that only one Join is forwarded to the\n       \
    \   querier?\n      Q2  Is multicast forwarding based on MAC addresses?  Would\n\
    \          datagrams addressed to multicast IP addresses 224.1.2.3 and\n     \
    \     239.129.2.3 be forwarded on the same ports-groups?\n      Q3  Is it possible\
    \ to forward multicast datagrams based on IP\n          addresses (not routed)?\
    \  In other words, could 224.1.2.3 and\n          239.129.2.3 be forwarded on\
    \ different port-groups with\n          unaltered TTL?\n      Q4  Are multicast\
    \ datagrams within the range 224.0.0.1 to\n          224.0.0.255 forwarded on\
    \ all ports whether or not IGMP Joins\n          have been sent?\n      Q5  Are\
    \ multicast frames within the MAC address range\n          01:00:5E:00:00:01 to\
    \ 01:00:5E:00:00:FF forwarded on all ports\n          whether or not IGMP joins\
    \ have been sent?\n      Q6  Does your switch support forwarding to ports on which\
    \ IP\n          multicast routers are attached in addition to the ports where\n\
    \          IGMP Joins have been received?\n      Q7  Is your IGMP snooping functionality\
    \ fully implemented in\n          hardware?\n      Q8  Is your IGMP snooping functionality\
    \ partly software\n          implemented?\n      Q9  Can topology changes (for\
    \ example spanning tree configuration\n          changes) be detected by the IGMP\
    \ snooping functionality so\n          that for example new queries can be sent\
    \ or tables can be\n          updated to ensure robustness?\n   The answers were:\n\
    \         ---------------------------+-----------------------+\n             \
    \                       |     Switch Vendor     |\n         ---------------------------+---+---+---+---+---+---+\n\
    \                                    | 1 | 2 | 3 | 4 | 5 | 6 |\n         ---------------------------+---+---+---+---+---+---+\n\
    \         Q1 Join aggregation        | x | x | x |   | x | x |\n         Q2 Layer-2\
    \ forwarding      | x | x | x | x |(1)|   |\n         Q3 Layer-3 forwarding  \
    \    |(1)|   |(1)|   |(1)| x |\n         Q4 224.0.0.X aware         |(1)| x |(1)|(2)|\
    \ x | x |\n         Q5 01:00:5e:00:00:XX aware | x | x | x |(2)| x | x |\n   \
    \      Q6 Mcast router list       | x | x | x | x | x | x |\n         Q7 Hardware\
    \ implemented    |   |   |   |   |   |   |\n         Q8 Software assisted    \
    \   | x | x | x | x | x | x |\n         Q9 Topology change aware   | x | x | x\
    \ | x |   |(2)|\n         ---------------------------+---+---+---+---+---+---+\n\
    \                   x  Means that the answer was Yes.\n     (1) In some products\
    \ (typically high-end) Yes; in others No.\n     (2) Not at the time that the questionnaire\
    \ was received\n         but expected in the near future.\n"
- title: 5.  References
  contents:
  - '5.  References

    '
- title: 5.1.  Normative References
  contents:
  - "5.1.  Normative References\n   [BRIDGE]     IEEE Std. 802.1D-2004 IEEE Standard\
    \ for Local and\n                metropolitan area networks, Media Access Control\
    \ (MAC)\n                Bridges\n   [IGMPv3]     Cain, B., Deering, S., Kouvelas,\
    \ I., Fenner, B., and A.\n                Thyagarajan, \"Internet Group Management\
    \ Protocol,\n                Version 3\", RFC 3376, October 2002.\n   [IPV6-1394]\
    \  Fujisawa, K. and A. Onoe, \"Transmission of IPv6 Packets\n                over\
    \ IEEE 1394 Networks\", RFC 3146, October 2001.\n   [IPV6-ETHER] Crawford, M.,\
    \ \"Transmission of IPv6 Packets over\n                Ethernet Networks\", RFC\
    \ 2464, December 1998.\n   [IPV6-FDDI]  Crawford, M., \"Transmission of IPv6 Packets\
    \ over FDDI\n                Networks\", RFC 2467, December 1998.\n   [IPV6-TOKEN]\
    \ Crawford, M., Narten, T., and S. Thomas, \"Transmission\n                of\
    \ IPv6 Packets over Token Ring Networks\", RFC 2470,\n                December\
    \ 1998.\n   [MLD]        Deering, S., Fenner, W., and B. Haberman, \"Multicast\n\
    \                Listener Discovery (MLD) for IPv6\", RFC 2710, October\n    \
    \            1999.\n   [MLDv2]      Vida, R. and L. Costa, \"Multicast Listener\
    \ Discovery\n                Version 2 (MLDv2) for IPv6\", RFC 3810, June 2004.\n\
    \   [MRDISC]     Haberman, B. and J. Martin, \"Multicast Router\n            \
    \    Discovery\", RFC 4286, December 2005.\n   [RFC1112]    Deering, S., \"Host\
    \ extensions for IP multicasting\", STD\n                5, RFC 1112, August 1989.\n\
    \   [RFC2236]    Fenner, W., \"Internet Group Management Protocol, Version\n \
    \               2\", RFC 2236, November 1997.\n   [RFC3307]    Haberman, B., \"\
    Allocation Guidelines for IPv6 Multicast\n                Addresses\", RFC 3307,\
    \ August 2002.\n"
- title: 5.2.  Informative References
  contents:
  - "5.2.  Informative References\n   [CISCO]      Cisco Tech Notes, \"Multicast In\
    \ a Campus Network: CGMP\n                and IGMP snooping\",\n             \
    \   http://www.cisco.com/warp/public/473/22.html\n   [IETF56]     Briefing by\
    \ Dave Thaler, Microsoft, presented to the\n                MAGMA WG at the 56'th\
    \ IETF meeting in San Francisco,\n                http://www.ietf.org/proceedings/03mar/index.html\n\
    \   [MSOFT]      Microsoft support article Q223136, \"Some LAN Switches\n    \
    \            with IGMP Snooping Stop Forwarding Multicast Packets on\n       \
    \         RRAS Startup\", http://support.microsoft.com/\n                support/articles/Q223/1/36.ASP\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   Under normal network operation, the snooping\
    \ switch is expected to\n   improve overall network performance by limiting the\
    \ scope of\n   multicast flooding to a smaller portion of the local network. \
    \ In the\n   event of forged IGMP messages, the benefits of using a snooping\n\
    \   switch might be reduced or eliminated.\n   Security considerations for IGMPv3\
    \ at the network layer of the\n   protocol stack are described in [IGMPv3].  The\
    \ introduction of IGMP\n   snooping functionality does not alter the handling\
    \ of multicast\n   packets by the router as it does not make use of link layer\n\
    \   information.\n   There are, however, changes in the way that the IGMP snooping\
    \ switch\n   handles multicast packets within the local network.  In particular:\n\
    \   -  A Query message with a forged source address which is less than\n     \
    \ that of the current Querier could cause snooping switches to\n      forward\
    \ subsequent Membership reports to the wrong network\n      interface.  It is\
    \ for this reason that IGMP Membership Reports\n      should be sent to all multicast\
    \ routers as well as the current\n      Querier.\n   -  It is possible for a host\
    \ on the local network to generate\n      Current-State Report Messages that would\
    \ cause the switch to\n      incorrectly believe that there is a multicast listener\
    \ on the same\n      network segment as the originator of the forged message.\
    \  This\n      will cause unrequested multicast packets to be forwarded into the\n\
    \      network segments between the source and the router.  If the router\n  \
    \    requires that all Multicast Report messages be authenticated as\n      described\
    \ in section 9.4 of [IGMPv3], it will discard the forged\n      Report message\
    \ from the host inside the network in the same way\n      that it would discard\
    \ one which originates from a remote location.\n      It is worth noting that\
    \ if the router accepts unauthenticated\n      Report messages by virtue of them\
    \ having arrived over a network\n      interface associated with the internal\
    \ network, investigating the\n      affected network segments will quickly narrow\
    \ the search for the\n      source of the forged messages.\n   -  As noted in\
    \ [IGMPv3], there is little motivation for an attacker\n      to forge a Membership\
    \ report message since joining a group is\n      generally an unprivileged operation.\
    \  The sender of the forged\n      Membership report will be the only recipient\
    \ of the multicast\n      traffic to that group.  This is in contrast to a shared\
    \ LAN\n      segment (HUB) or network without snooping switches, where all\n \
    \     other hosts on the same segment would be unable to transmit when\n     \
    \ the network segment is flooding the unwanted traffic.\n   The worst case result\
    \ for each attack would remove the performance\n   improvements that the snooping\
    \ functionality would otherwise provide.\n   It would, however, be no worse than\
    \ that experienced on a network\n   with switches that do not perform multicast\
    \ snooping.\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   We would like to thank Martin Bak, Les Bell, Yiqun Cai,\
    \ Ben Carter,\n   Paul Congdon, Toerless Eckert, Bill Fenner, Brian Haberman,\
    \ Edward\n   Hilquist, Hugh Holbrook, Kevin Humphries, Isidor Kouvelas, Pekka\n\
    \   Savola, Suzuki Shinsuke, Jaff Thomas, Rolland Vida, and Margaret\n   Wasserman\
    \ for comments and suggestions on this document.\n   Furthermore, the following\
    \ companies are acknowledged for their\n   contributions: 3Com, Alcatel, Cisco\
    \ Systems, Enterasys Networks,\n   Hewlett-Packard, Vitesse Semiconductor Corporation,\
    \ Thrane & Thrane.\n   The ordering of these names do not necessarily correspond\
    \ to the\n   column numbers in the response table.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Morten Jagd Christensen\n   Thrane & Thrane\n   Lundtoftegaardsvej\
    \ 93 D\n   2800 Lyngby\n   DENMARK\n   EMail: mjc@tt.dk\n   Karen Kimball\n  \
    \ Hewlett-Packard\n   8000 Foothills Blvd.\n   Roseville, CA 95747\n   USA\n \
    \  EMail: karen.kimball@hp.com\n   Frank Solensky\n   Calix\n   43 Nanog Park\n\
    \   Acton, MA 01720\n   USA\n   EMail: frank.solensky@calix.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
