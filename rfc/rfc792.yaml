- title: __initial_text__
  contents:
  - "                   INTERNET CONTROL MESSAGE PROTOCOL\n                      \
    \   DARPA INTERNET PROGRAM\n                         PROTOCOL SPECIFICATION\n"
- title: Introduction
  contents:
  - "Introduction\n   The Internet Protocol (IP) [1] is used for host-to-host datagram\n\
    \   service in a system of interconnected networks called the\n   Catenet [2].\
    \  The network connecting devices are called Gateways.\n   These gateways communicate\
    \ between themselves for control purposes\n   via a Gateway to Gateway Protocol\
    \ (GGP) [3,4].  Occasionally a\n   gateway or destination host will communicate\
    \ with a source host, for\n   example, to report an error in datagram processing.\
    \  For such\n   purposes this protocol, the Internet Control Message Protocol\
    \ (ICMP),\n   is used.  ICMP, uses the basic support of IP as if it were a higher\n\
    \   level protocol, however, ICMP is actually an integral part of IP, and\n  \
    \ must be implemented by every IP module.\n   ICMP messages are sent in several\
    \ situations:  for example, when a\n   datagram cannot reach its destination,\
    \ when the gateway does not have\n   the buffering capacity to forward a datagram,\
    \ and when the gateway\n   can direct the host to send traffic on a shorter route.\n\
    \   The Internet Protocol is not designed to be absolutely reliable.  The\n  \
    \ purpose of these control messages is to provide feedback about\n   problems\
    \ in the communication environment, not to make IP reliable.\n   There are still\
    \ no guarantees that a datagram will be delivered or a\n   control message will\
    \ be returned.  Some datagrams may still be\n   undelivered without any report\
    \ of their loss.  The higher level\n   protocols that use IP must implement their\
    \ own reliability procedures\n   if reliable communication is required.\n   The\
    \ ICMP messages typically report errors in the processing of\n   datagrams.  To\
    \ avoid the infinite regress of messages about messages\n   etc., no ICMP messages\
    \ are sent about ICMP messages.  Also ICMP\n   messages are only sent about errors\
    \ in handling fragment zero of\n   fragemented datagrams.  (Fragment zero has\
    \ the fragment offeset equal\n   zero).\n"
- title: RFC 792
  contents:
  - 'RFC 792

    '
- title: Message Formats
  contents:
  - "Message Formats\n   ICMP messages are sent using the basic IP header.  The first\
    \ octet of\n   the data portion of the datagram is a ICMP type field; the value\
    \ of\n   this field determines the format of the remaining data.  Any field\n\
    \   labeled \"unused\" is reserved for later extensions and must be zero\n   when\
    \ sent, but receivers should not use these fields (except to\n   include them\
    \ in the checksum).  Unless otherwise noted under the\n   individual format descriptions,\
    \ the values of the internet header\n   fields are as follows:\n   Version\n \
    \     4\n   IHL\n      Internet header length in 32-bit words.\n   Type of Service\n\
    \      0\n   Total Length\n      Length of internet header and data in octets.\n\
    \   Identification, Flags, Fragment Offset\n      Used in fragmentation, see [1].\n\
    \   Time to Live\n      Time to live in seconds; as this field is decremented\
    \ at each\n      machine in which the datagram is processed, the value in this\n\
    \      field should be at least as great as the number of gateways which\n   \
    \   this datagram will traverse.\n   Protocol\n      ICMP = 1\n   Header Checksum\n\
    \      The 16 bit one's complement of the one's complement sum of all 16\n   \
    \   bit words in the header.  For computing the checksum, the checksum\n     \
    \ field should be zero.  This checksum may be replaced in the\n      future.\n"
- title: RFC 792
  contents:
  - "RFC 792\n   Source Address\n      The address of the gateway or host that composes\
    \ the ICMP message.\n      Unless otherwise noted, this can be any of a gateway's\
    \ addresses.\n   Destination Address\n      The address of the gateway or host\
    \ to which the message should be\n      sent.\n"
- title: RFC 792
  contents:
  - 'RFC 792

    '
- title: Destination Unreachable Message
  contents:
  - "Destination Unreachable Message\n    0                   1                  \
    \ 2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |     Code      |          Checksum             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             unused                            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      Internet Header + 64 bits of Original Data Datagram      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   IP Fields:\n   Destination Address\n      The source network and address from\
    \ the original datagram's data.\n   ICMP Fields:\n   Type\n      3\n   Code\n\
    \      0 = net unreachable;\n      1 = host unreachable;\n      2 = protocol unreachable;\n\
    \      3 = port unreachable;\n      4 = fragmentation needed and DF set;\n   \
    \   5 = source route failed.\n   Checksum\n      The checksum is the 16-bit ones's\
    \ complement of the one's\n      complement sum of the ICMP message starting with\
    \ the ICMP Type.\n      For computing the checksum , the checksum field should\
    \ be zero.\n      This checksum may be replaced in the future.\n   Internet Header\
    \ + 64 bits of Data Datagram\n      The internet header plus the first 64 bits\
    \ of the original\n"
- title: RFC 792
  contents:
  - "RFC 792\n      datagram's data.  This data is used by the host to match the\n\
    \      message to the appropriate process.  If a higher level protocol\n     \
    \ uses port numbers, they are assumed to be in the first 64 data\n      bits of\
    \ the original datagram's data.\n   Description\n      If, according to the information\
    \ in the gateway's routing tables,\n      the network specified in the internet\
    \ destination field of a\n      datagram is unreachable, e.g., the distance to\
    \ the network is\n      infinity, the gateway may send a destination unreachable\
    \ message\n      to the internet source host of the datagram.  In addition, in\
    \ some\n      networks, the gateway may be able to determine if the internet\n\
    \      destination host is unreachable.  Gateways in these networks may\n    \
    \  send destination unreachable messages to the source host when the\n      destination\
    \ host is unreachable.\n      If, in the destination host, the IP module cannot\
    \ deliver the\n      datagram  because the indicated protocol module or process\
    \ port is\n      not active, the destination host may send a destination\n   \
    \   unreachable message to the source host.\n      Another case is when a datagram\
    \ must be fragmented to be forwarded\n      by a gateway yet the Don't Fragment\
    \ flag is on.  In this case the\n      gateway must discard the datagram and may\
    \ return a destination\n      unreachable message.\n      Codes 0, 1, 4, and 5\
    \ may be received from a gateway.  Codes 2 and\n      3 may be received from a\
    \ host.\n"
- title: RFC 792
  contents:
  - 'RFC 792

    '
- title: Time Exceeded Message
  contents:
  - "Time Exceeded Message\n    0                   1                   2        \
    \           3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |     Code      |          Checksum             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             unused                            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      Internet Header + 64 bits of Original Data Datagram      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   IP Fields:\n   Destination Address\n      The source network and address from\
    \ the original datagram's data.\n   ICMP Fields:\n   Type\n      11\n   Code\n\
    \      0 = time to live exceeded in transit;\n      1 = fragment reassembly time\
    \ exceeded.\n   Checksum\n      The checksum is the 16-bit ones's complement of\
    \ the one's\n      complement sum of the ICMP message starting with the ICMP Type.\n\
    \      For computing the checksum , the checksum field should be zero.\n     \
    \ This checksum may be replaced in the future.\n   Internet Header + 64 bits of\
    \ Data Datagram\n      The internet header plus the first 64 bits of the original\n\
    \      datagram's data.  This data is used by the host to match the\n      message\
    \ to the appropriate process.  If a higher level protocol\n      uses port numbers,\
    \ they are assumed to be in the first 64 data\n      bits of the original datagram's\
    \ data.\n   Description\n      If the gateway processing a datagram finds the\
    \ time to live field\n"
- title: RFC 792
  contents:
  - "RFC 792\n      is zero it must discard the datagram.  The gateway may also notify\n\
    \      the source host via the time exceeded message.\n      If a host reassembling\
    \ a fragmented datagram cannot complete the\n      reassembly due to missing fragments\
    \ within its time limit it\n      discards the datagram, and it may send a time\
    \ exceeded message.\n      If fragment zero is not available then no time exceeded\
    \ need be\n      sent at all.\n      Code 0 may be received from a gateway.  Code\
    \ 1 may be received\n      from a host.\n"
- title: RFC 792
  contents:
  - 'RFC 792

    '
- title: Parameter Problem Message
  contents:
  - "Parameter Problem Message\n    0                   1                   2    \
    \               3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |     Code      |          Checksum             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Pointer    |                   unused                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      Internet Header + 64 bits of Original Data Datagram      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   IP Fields:\n   Destination Address\n      The source network and address from\
    \ the original datagram's data.\n   ICMP Fields:\n   Type\n      12\n   Code\n\
    \      0 = pointer indicates the error.\n   Checksum\n      The checksum is the\
    \ 16-bit ones's complement of the one's\n      complement sum of the ICMP message\
    \ starting with the ICMP Type.\n      For computing the checksum , the checksum\
    \ field should be zero.\n      This checksum may be replaced in the future.\n\
    \   Pointer\n      If code = 0, identifies the octet where an error was detected.\n\
    \   Internet Header + 64 bits of Data Datagram\n      The internet header plus\
    \ the first 64 bits of the original\n      datagram's data.  This data is used\
    \ by the host to match the\n      message to the appropriate process.  If a higher\
    \ level protocol\n      uses port numbers, they are assumed to be in the first\
    \ 64 data\n      bits of the original datagram's data.\n"
- title: RFC 792
  contents:
  - "RFC 792\n   Description\n      If the gateway or host processing a datagram finds\
    \ a problem with\n      the header parameters such that it cannot complete processing\
    \ the\n      datagram it must discard the datagram.  One potential source of\n\
    \      such a problem is with incorrect arguments in an option.  The\n      gateway\
    \ or host may also notify the source host via the parameter\n      problem message.\
    \  This message is only sent if the error caused\n      the datagram to be discarded.\n\
    \      The pointer identifies the octet of the original datagram's header\n  \
    \    where the error was detected (it may be in the middle of an\n      option).\
    \  For example, 1 indicates something is wrong with the\n      Type of Service,\
    \ and (if there are options present) 20 indicates\n      something is wrong with\
    \ the type code of the first option.\n      Code 0 may be received from a gateway\
    \ or a host.\n"
- title: RFC 792
  contents:
  - 'RFC 792

    '
- title: Source Quench Message
  contents:
  - "Source Quench Message\n    0                   1                   2        \
    \           3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |     Code      |          Checksum             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             unused                            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      Internet Header + 64 bits of Original Data Datagram      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   IP Fields:\n   Destination Address\n      The source network and address of\
    \ the original datagram's data.\n   ICMP Fields:\n   Type\n      4\n   Code\n\
    \      0\n   Checksum\n      The checksum is the 16-bit ones's complement of the\
    \ one's\n      complement sum of the ICMP message starting with the ICMP Type.\n\
    \      For computing the checksum , the checksum field should be zero.\n     \
    \ This checksum may be replaced in the future.\n   Internet Header + 64 bits of\
    \ Data Datagram\n      The internet header plus the first 64 bits of the original\n\
    \      datagram's data.  This data is used by the host to match the\n      message\
    \ to the appropriate process.  If a higher level protocol\n      uses port numbers,\
    \ they are assumed to be in the first 64 data\n      bits of the original datagram's\
    \ data.\n   Description\n      A gateway may discard internet datagrams if it\
    \ does not have the\n      buffer space needed to queue the datagrams for output\
    \ to the next\n      network on the route to the destination network.  If a gateway\n"
- title: RFC 792
  contents:
  - "RFC 792\n      discards a datagram, it may send a source quench message to the\n\
    \      internet source host of the datagram.  A destination host may also\n  \
    \    send a source quench message if datagrams arrive too fast to be\n      processed.\
    \  The source quench message is a request to the host to\n      cut back the rate\
    \ at which it is sending traffic to the internet\n      destination.  The gateway\
    \ may send a source quench message for\n      every message that it discards.\
    \  On receipt of a source quench\n      message, the source host should cut back\
    \ the rate at which it is\n      sending traffic to the specified destination\
    \ until it no longer\n      receives source quench messages from the gateway.\
    \  The source host\n      can then gradually increase the rate at which it sends\
    \ traffic to\n      the destination until it again receives source quench messages.\n\
    \      The gateway or host may send the source quench message when it\n      approaches\
    \ its capacity limit rather than waiting until the\n      capacity is exceeded.\
    \  This means that the data datagram which\n      triggered the source quench\
    \ message may be delivered.\n      Code 0 may be received from a gateway or a\
    \ host.\n"
- title: RFC 792
  contents:
  - 'RFC 792

    '
- title: Redirect Message
  contents:
  - "Redirect Message\n    0                   1                   2             \
    \      3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |  \
    \   Type      |     Code      |          Checksum             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                 Gateway Internet Address                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      Internet Header + 64 bits of Original Data Datagram      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   IP Fields:\n   Destination Address\n      The source network and address of\
    \ the original datagram's data.\n   ICMP Fields:\n   Type\n      5\n   Code\n\
    \      0 = Redirect datagrams for the Network.\n      1 = Redirect datagrams for\
    \ the Host.\n      2 = Redirect datagrams for the Type of Service and Network.\n\
    \      3 = Redirect datagrams for the Type of Service and Host.\n   Checksum\n\
    \      The checksum is the 16-bit ones's complement of the one's\n      complement\
    \ sum of the ICMP message starting with the ICMP Type.\n      For computing the\
    \ checksum , the checksum field should be zero.\n      This checksum may be replaced\
    \ in the future.\n   Gateway Internet Address\n      Address of the gateway to\
    \ which traffic for the network specified\n      in the internet destination network\
    \ field of the original\n      datagram's data should be sent.\n"
- title: RFC 792
  contents:
  - "RFC 792\n   Internet Header + 64 bits of Data Datagram\n      The internet header\
    \ plus the first 64 bits of the original\n      datagram's data.  This data is\
    \ used by the host to match the\n      message to the appropriate process.  If\
    \ a higher level protocol\n      uses port numbers, they are assumed to be in\
    \ the first 64 data\n      bits of the original datagram's data.\n   Description\n\
    \      The gateway sends a redirect message to a host in the following\n     \
    \ situation.  A gateway, G1, receives an internet datagram from a\n      host\
    \ on a network to which the gateway is attached.  The gateway,\n      G1, checks\
    \ its routing table and obtains the address of the next\n      gateway, G2, on\
    \ the route to the datagram's internet destination\n      network, X.  If G2 and\
    \ the host identified by the internet source\n      address of the datagram are\
    \ on the same network, a redirect\n      message is sent to the host.  The redirect\
    \ message advises the\n      host to send its traffic for network X directly to\
    \ gateway G2 as\n      this is a shorter path to the destination.  The gateway\
    \ forwards\n      the original datagram's data to its internet destination.\n\
    \      For datagrams with the IP source route options and the gateway\n      address\
    \ in the destination address field, a redirect message is\n      not sent even\
    \ if there is a better route to the ultimate\n      destination than the next\
    \ address in the source route.\n      Codes 0, 1, 2, and 3 may be received from\
    \ a gateway.\n"
- title: RFC 792
  contents:
  - 'RFC 792

    '
- title: Echo or Echo Reply Message
  contents:
  - "Echo or Echo Reply Message\n    0                   1                   2   \
    \                3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |     Code      |          Checksum             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           Identifier          |        Sequence Number        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Data ...\n   +-+-+-+-+-\n   IP Fields:\n   Addresses\n      The address\
    \ of the source in an echo message will be the\n      destination of the echo\
    \ reply message.  To form an echo reply\n      message, the source and destination\
    \ addresses are simply reversed,\n      the type code changed to 0, and the checksum\
    \ recomputed.\n   IP Fields:\n   Type\n      8 for echo message;\n      0 for\
    \ echo reply message.\n   Code\n      0\n   Checksum\n      The checksum is the\
    \ 16-bit ones's complement of the one's\n      complement sum of the ICMP message\
    \ starting with the ICMP Type.\n      For computing the checksum , the checksum\
    \ field should be zero.\n      If the total length is odd, the received data is\
    \ padded with one\n      octet of zeros for computing the checksum.  This checksum\
    \ may be\n      replaced in the future.\n   Identifier\n      If code = 0, an\
    \ identifier to aid in matching echos and replies,\n      may be zero.\n   Sequence\
    \ Number\n"
- title: RFC 792
  contents:
  - "RFC 792\n      If code = 0, a sequence number to aid in matching echos and\n\
    \      replies, may be zero.\n   Description\n      The data received in the echo\
    \ message must be returned in the echo\n      reply message.\n      The identifier\
    \ and sequence number may be used by the echo sender\n      to aid in matching\
    \ the replies with the echo requests.  For\n      example, the identifier might\
    \ be used like a port in TCP or UDP to\n      identify a session, and the sequence\
    \ number might be incremented\n      on each echo request sent.  The echoer returns\
    \ these same values\n      in the echo reply.\n      Code 0 may be received from\
    \ a gateway or a host.\n"
- title: RFC 792
  contents:
  - 'RFC 792

    '
- title: Timestamp or Timestamp Reply Message
  contents:
  - "Timestamp or Timestamp Reply Message\n    0                   1             \
    \      2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |      Code     |          Checksum             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           Identifier          |        Sequence Number        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Originate Timestamp                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Receive Timestamp                                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Transmit Timestamp                                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   IP Fields:\n   Addresses\n      The address of the source in a timestamp message\
    \ will be the\n      destination of the timestamp reply message.  To form a timestamp\n\
    \      reply message, the source and destination addresses are simply\n      reversed,\
    \ the type code changed to 14, and the checksum\n      recomputed.\n   IP Fields:\n\
    \   Type\n      13 for timestamp message;\n      14 for timestamp reply message.\n\
    \   Code\n      0\n   Checksum\n      The checksum is the 16-bit ones's complement\
    \ of the one's\n      complement sum of the ICMP message starting with the ICMP\
    \ Type.\n      For computing the checksum , the checksum field should be zero.\n\
    \      This checksum may be replaced in the future.\n   Identifier\n"
- title: RFC 792
  contents:
  - "RFC 792\n      If code = 0, an identifier to aid in matching timestamp and\n\
    \      replies, may be zero.\n   Sequence Number\n      If code = 0, a sequence\
    \ number to aid in matching timestamp and\n      replies, may be zero.\n   Description\n\
    \      The data received (a timestamp) in the message is returned in the\n   \
    \   reply together with an additional timestamp.  The timestamp is 32\n      bits\
    \ of milliseconds since midnight UT.  One use of these\n      timestamps is described\
    \ by Mills [5].\n      The Originate Timestamp is the time the sender last touched\
    \ the\n      message before sending it, the Receive Timestamp is the time the\n\
    \      echoer first touched it on receipt, and the Transmit Timestamp is\n   \
    \   the time the echoer last touched the message on sending it.\n      If the\
    \ time is not available in miliseconds or cannot be provided\n      with respect\
    \ to midnight UT then any time can be inserted in a\n      timestamp provided\
    \ the high order bit of the timestamp is also set\n      to indicate this non-standard\
    \ value.\n      The identifier and sequence number may be used by the echo sender\n\
    \      to aid in matching the replies with the requests.  For example,\n     \
    \ the identifier might be used like a port in TCP or UDP to identify\n      a\
    \ session, and the sequence number might be incremented on each\n      request\
    \ sent.  The destination returns these same values in the\n      reply.\n    \
    \  Code 0 may be received from a gateway or a host.\n"
- title: RFC 792
  contents:
  - 'RFC 792

    '
- title: Information Request or Information Reply Message
  contents:
  - "Information Request or Information Reply Message\n    0                   1 \
    \                  2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |      Code     |          Checksum             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           Identifier          |        Sequence Number        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   IP Fields:\n   Addresses\n      The address of the source in a information\
    \ request message will be\n      the destination of the information reply message.\
    \  To form a\n      information reply message, the source and destination addresses\n\
    \      are simply reversed, the type code changed to 16, and the checksum\n  \
    \    recomputed.\n   IP Fields:\n   Type\n      15 for information request message;\n\
    \      16 for information reply message.\n   Code\n      0\n   Checksum\n    \
    \  The checksum is the 16-bit ones's complement of the one's\n      complement\
    \ sum of the ICMP message starting with the ICMP Type.\n      For computing the\
    \ checksum , the checksum field should be zero.\n      This checksum may be replaced\
    \ in the future.\n   Identifier\n      If code = 0, an identifier to aid in matching\
    \ request and replies,\n      may be zero.\n   Sequence Number\n      If code\
    \ = 0, a sequence number to aid in matching request and\n      replies, may be\
    \ zero.\n"
- title: RFC 792
  contents:
  - "RFC 792\n   Description\n      This message may be sent with the source network\
    \ in the IP header\n      source and destination address fields zero (which means\
    \ \"this\"\n      network).  The replying IP module should send the reply with\
    \ the\n      addresses fully specified.  This message is a way for a host to\n\
    \      find out the number of the network it is on.\n      The identifier and\
    \ sequence number may be used by the echo sender\n      to aid in matching the\
    \ replies with the requests.  For example,\n      the identifier might be used\
    \ like a port in TCP or UDP to identify\n      a session, and the sequence number\
    \ might be incremented on each\n      request sent.  The destination returns these\
    \ same values in the\n      reply.\n      Code 0 may be received from a gateway\
    \ or a host.\n"
- title: RFC 792
  contents:
  - 'RFC 792

    '
- title: Summary of Message Types
  contents:
  - "Summary of Message Types\n    0  Echo Reply\n    3  Destination Unreachable\n\
    \    4  Source Quench\n    5  Redirect\n    8  Echo\n   11  Time Exceeded\n  \
    \ 12  Parameter Problem\n   13  Timestamp\n   14  Timestamp Reply\n   15  Information\
    \ Request\n   16  Information Reply\n"
- title: RFC 792
  contents:
  - 'RFC 792

    '
- title: References
  contents:
  - "References\n   [1]  Postel, J. (ed.), \"Internet Protocol - DARPA Internet Program\n\
    \         Protocol Specification,\" RFC 791, USC/Information Sciences\n      \
    \   Institute, September 1981.\n   [2]   Cerf, V., \"The Catenet Model for Internetworking,\"\
    \ IEN 48,\n         Information Processing Techniques Office, Defense Advanced\n\
    \         Research Projects Agency, July 1978.\n   [3]   Strazisar, V., \"Gateway\
    \ Routing:  An Implementation\n         Specification\", IEN 30, Bolt Beranek\
    \ and Newman, April 1979.\n   [4]   Strazisar, V., \"How to Build a Gateway\"\
    , IEN 109, Bolt Beranek\n         and Newman, August 1979.\n   [5]   Mills, D.,\
    \ \"DCNET Internet Clock Service,\" RFC 778, COMSAT\n         Laboratories, April\
    \ 1981.\n"
