- title: __initial_text__
  contents:
  - '                 AppleTalk Management Information Base

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines objects for managing AppleTalk objects\
    \ for use with\n   the SNMP protocol.  This memo is a product of the AppleTalk-IP\n\
    \   Working Group of the Internet Engineering Task Force (IETF).  This\n   RFC\
    \ specifies an IAB standards track protocol for the Internet\n   community, and\
    \ requests discussion and suggestions for improvements.\n   Please refer to the\
    \ current edition of the \"IAB Official Protocol\n   Standards\" for the standardization\
    \ state and status of this protocol.\n   Distribution of this memo is unlimited.\n"
- title: Table of Contents
  contents:
  - 'Table of Contents

    '
- title: 1.  Abstract
  contents:
  - "1.  Abstract\n   This memo defines a portion of the Management Information Base\
    \ (MIB)\n   for use with network management protocols in TCP/IP-based internets.\n\
    \   In particular, it defines objects for managing AppleTalk networks.\n"
- title: 2.  The Network Management Framework
  contents:
  - "2.  The Network Management Framework\n   The Internet-standard Network Management\
    \ Framework consists of three\n   components.  They are:\n      RFC 1155 which\
    \ defines the SMI, the mechanisms used for describing\n      and naming objects\
    \ for the purpose of management.  RFC 1212\n      defines a more concise description\
    \ mechanism, which is wholly\n      consistent with the SMI.\n      RFC 1156 which\
    \ defines MIB-I, the core set of managed objects for\n      the Internet suite\
    \ of protocols.  RFC 1213, defines MIB-II, an\n      evolution of MIB-I based\
    \ on implementation experience and new\n      operational requirements.\n    \
    \  RFC 1157 which defines the SNMP, the protocol used for network\n      access\
    \ to managed objects.\n   The Framework permits new objects to be defined for\
    \ the purpose of\n   experimentation and evaluation.\n"
- title: 3.  Objects
  contents:
  - "3.  Objects\n   Managed objects are accessed via a virtual information store,\
    \ termed\n   the Management Information Base or MIB.  Objects in the MIB are\n\
    \   defined using the subset of Abstract Syntax Notation One (ASN.1) [7]\n   defined\
    \ in the SMI.  In particular, each object has a name, a syntax,\n   and an encoding.\
    \  The name is an object identifier, an\n   administratively assigned name, which\
    \ specifies an object type.  The\n   object type together with an object instance\
    \ serves to uniquely\n   identify a specific instantiation of the object.  For\
    \ human\n   convenience, we often use a textual string, termed the OBJECT\n  \
    \ DESCRIPTOR, to also refer to the object type.\n   The syntax of an object type\
    \ defines the abstract data structure\n   corresponding to that object type. \
    \ The ASN.1 language is used for\n   this purpose.  However, the SMI [3] purposely\
    \ restricts the ASN.1\n   constructs which may be used.  These restrictions are\
    \ explicitly made\n   for simplicity.\n   The encoding of an object type is simply\
    \ how that object type is\n   represented using the object type's syntax.  Implicitly\
    \ tied to the\n   notion of an object type's syntax and encoding is how the object\
    \ type\n   is represented when being transmitted on the network.\n   The SMI specifies\
    \ the use of the basic encoding rules of ASN.1 [8],\n   subject to the additional\
    \ requirements imposed by the SNMP.\n"
- title: 3.1.  Format of Definitions
  contents:
  - "3.1.  Format of Definitions\n   Section 5 contains the specification of all object\
    \ types contained in\n   this MIB module.  The object types are defined using\
    \ the conventions\n   defined in the SMI, as amended by the extensions specified\
    \ in [9,10].\n"
- title: 4.  Overview
  contents:
  - "4.  Overview\n   AppleTalk is a protocol suite which features an open peer-to-peer\n\
    \   architecture that runs over a variety of transmission media.\n   AppleTalk\
    \ is defined in [10].  This protocol suite interoperates with\n   the IP protocol\
    \ suite through various encapsulation methods.  As\n   large AppleTalk networks\
    \ are built that coexist with large IP\n   networks, a method to manage the AppleTalk\
    \ networks with SNMP becomes\n   necessary.  This MIB defines managed objects\
    \ to be used for managing\n   AppleTalk networks.\n"
- title: 4.1.  Structure of MIB
  contents:
  - "4.1.  Structure of MIB\n   The objects are arranged into the following groups:\n\
    \                      - LLAP\n                      - AARP\n                \
    \      - ATPort\n                      - DDP\n                      - RTMP\n \
    \                     - KIP\n                      - ZIP\n                   \
    \   - NBP\n                      - ATEcho\n   These groups are the basic unit\
    \ of conformance. If the semantics of a\n   group is applicable to an implementation,\
    \ then it must implement all\n   objects in that group.  For example, a managed\
    \ agent must implement\n   the KIP group if and only if it implements the KIP\
    \ protocol.\n   These groups are defined to provide a means of assigning object\n\
    \   identifiers, and to provide a method for managed agents to know which\n  \
    \ objects they must implement.\n"
- title: 4.2.  The LocalTalk Link Access Protocol Group
  contents:
  - "4.2.  The LocalTalk Link Access Protocol Group\n   The LocalTalk Link Access\
    \ Protocol (LLAP) is a medium-speed data-link\n   protocol designed for low cost\
    \ and plug-and-play operation.  The LLAP\n   group is designed to manage all interfaces\
    \ on a managed device that\n   use this protocol.\n"
- title: 4.3.  The AppleTalk Address Resolution Protocol Group
  contents:
  - "4.3.  The AppleTalk Address Resolution Protocol Group\n   The AppleTalk Address\
    \ Resolution Protocol (AARP) is used to map\n   between AppleTalk node addresses,\
    \ used by the Datagram Delivery\n   Protocol, and the addresses of the underlying\
    \ data link layer.  The\n   AARP table allows for management of the Address Mapping\
    \ Table on the\n   managed device.\n"
- title: 4.4.  The AppleTalk Port Group
  contents:
  - "4.4.  The AppleTalk Port Group\n   An AppleTalk Port is a logical connection\
    \ to a network over which\n   AppleTalk packets can be transmitted.  This group\
    \ allows the\n   management of the configuration of these AppleTalk ports.\n"
- title: 4.5.  The Datagram Delivery Protocol Group
  contents:
  - "4.5.  The Datagram Delivery Protocol Group\n   The Datagram Delivery Protocol\
    \ (DDP) is the network-layer protocol\n   that is responsible for the socket-to-socket\
    \ delivery of datagrams\n   over the AppleTalk Internet.  This group manages the\
    \ DDP layer on the\n   managed device.\n"
- title: 4.6.  The Routing Table Maintenance Protocol Group
  contents:
  - "4.6.  The Routing Table Maintenance Protocol Group\n   The Routing Table Maintenance\
    \ Protocol (RTMP) is used by AppleTalk\n   routers to create and maintain the\
    \ routing tables that dictate the\n   process of forwarding datagrams on the AppleTalk\
    \ internet.  The RTMP\n   group manages the RTMP protocol as well as the routing\
    \ tables\n   generated by this protocol.\n"
- title: 4.7.  The Kinetics Internet Protocol Group
  contents:
  - "4.7.  The Kinetics Internet Protocol Group\n   The Kinetics Internet Protocol\
    \ (KIP) is a protocol for encapsulating\n   and routing AppleTalk datagrams over\
    \ an IP internet.  This name is\n   historical.  The KIP group manages the KIP\
    \ routing protocol as well\n   as the routing tables generated by this protocol.\n"
- title: 4.8.  The Zone Information Protocol Group
  contents:
  - "4.8.  The Zone Information Protocol Group\n   The Zone Information Protocol (ZIP)\
    \ is used to maintain a mapping\n   between networks and zone names to facilitate\
    \ the name lookup process\n   performed by the Name Binding Protocol.  The ZIP\
    \ group manages this\n   protocol and the mapping it produces.\n"
- title: 4.9.  The Name Binding Protocol Group
  contents:
  - "4.9.  The Name Binding Protocol Group\n   The Name Binding Protocol (NBP) is\
    \ a transport-level protocol that is\n   used to convert human readable service\
    \ names into the numeric\n   AppleTalk network addresses needed for communicating\
    \ across the\n   AppleTalk network.  The NBP group manages this protocol and the\
    \ NBP\n   services that exist on the managed device.\n"
- title: 4.10.  The AppleTalk Echo Protocol Group
  contents:
  - "4.10.  The AppleTalk Echo Protocol Group\n   The AppleTalk Echo Protocol is a\
    \ transport-level protocol used to\n   test and verify the status of the AppleTalk\
    \ internet.  The AtEcho\n   group manages this protocol.\n"
- title: 4.11.  Textual Conventions
  contents:
  - "4.11.  Textual Conventions\n   A new data type is introduced as a textual convention\
    \ in this MIB\n   document.  This textual convention enhances the readability\
    \ of the\n   specification and can ease comparison with other specifications if\n\
    \   appropriate.  It should be noted that the introduction of this\n   textual\
    \ convention has no effect on either the syntax or the\n   semantics of any managed\
    \ objects.  The use of this is merely an\n   artifact of the explanatory method\
    \ used.  Objects defined in terms of\n   this method are always encoded by means\
    \ of the rules that define the\n   primitive type.  Hence, no changes to the SMI\
    \ or the SNMP are\n   necessary to accommodate this textual convention which is\
    \ adopted\n   merely for the convenience of readers and writers in pursuit of\
    \ the\n   elusive goal of clear, concise, and unambiguous MIB documents.\n   The\
    \ new data type is:\n                  DdpAddress ::=          -- 2 octets of\
    \ net number,\n                                          -- 1 octet of node number\n\
    \                          OCTET STRING (SIZE (3))\n"
- title: 5.  Definitions
  contents:
  - "5.  Definitions\n          RFC1243-MIB DEFINITIONS ::= BEGIN\n          IMPORTS\n\
    \                  Counter, IpAddress\n                          FROM RFC1155-SMI\n\
    \                  DisplayString, mib-2\n                      FROM RFC1213-MIB\n\
    \                  OBJECT-TYPE\n                          FROM RFC-1212;\n   \
    \       --  This MIB module uses the extended OBJECT-TYPE macro as\n         \
    \ --  defined in [9]\n          --  AppleTalk MIB\n                  appletalk\
    \    OBJECT IDENTIFIER ::= { mib-2 13 }\n                  DdpAddress ::=  --\
    \ 2 octets of net number\n                                  -- 1 octet of node\
    \ number\n                          OCTET STRING (SIZE (3))\n                \
    \  -- This data type is used for encoding a DDP protocol\n                  --\
    \ address.  The format of this address is a serial\n                  -- encoding\
    \ of the two octets of network number in\n                  -- network byte order,\
    \ followed by the 1 octet node\n                  -- number.\n               \
    \   llap     OBJECT IDENTIFIER ::= { appletalk 1 }\n                  aarp   \
    \  OBJECT IDENTIFIER ::= { appletalk 2 }\n                  atport   OBJECT IDENTIFIER\
    \ ::= { appletalk 3 }\n                  ddp      OBJECT IDENTIFIER ::= { appletalk\
    \ 4 }\n                  rtmp     OBJECT IDENTIFIER ::= { appletalk 5 }\n    \
    \              kip      OBJECT IDENTIFIER ::= { appletalk 6 }\n              \
    \    zip      OBJECT IDENTIFIER ::= { appletalk 7 }\n                  nbp   \
    \   OBJECT IDENTIFIER ::= { appletalk 8 }\n                  atecho   OBJECT IDENTIFIER\
    \ ::= { appletalk 9 }\n          -- The LLAP Group\n          llapTable OBJECT-TYPE\n\
    \                  SYNTAX SEQUENCE OF LlapEntry\n                  ACCESS not-accessible\n\
    \                  STATUS mandatory\n                  DESCRIPTION\n         \
    \             \"The list of LLAP entries.\"\n                  ::= { llap 1 }\n\
    \          llapEntry OBJECT-TYPE\n                  SYNTAX LlapEntry\n       \
    \           ACCESS not-accessible\n                  STATUS mandatory\n      \
    \            DESCRIPTION\n                      \"An LLAP entry containing objects\
    \ for the\n                      LocalTalk Link Access Protocol for a particular\n\
    \                      LocalTalk interface.\"\n                  INDEX { llapIfIndex\
    \ }\n                  ::= { llapTable 1 }\n          LlapEntry ::= SEQUENCE {\n\
    \                  llapIfIndex             INTEGER,\n                  llapInPkts\
    \              Counter,\n                  llapOutPkts             Counter,\n\
    \                  llapInNoHandlers        Counter,\n                  llapInLengthErrors\
    \      Counter,\n                  llapInBads              Counter,\n        \
    \          llapCollisions          Counter,\n                  llapDefers    \
    \          Counter,\n                  llapNoDataErrors        Counter,\n    \
    \              llapRandomCTSErrors     Counter,\n                  llapFCSErrors\
    \           Counter\n          }\n          llapIfIndex OBJECT-TYPE\n        \
    \          SYNTAX INTEGER\n                  ACCESS read-only\n              \
    \    STATUS mandatory\n                  DESCRIPTION\n                      \"\
    The LLAP interface to which this entry pertains.\n                      The interface\
    \ identified by a particular value of\n                      this index is the\
    \ same interface as identified\n                      by the same value of ifIndex.\"\
    \n                  ::= { llapEntry 1 }\n          llapInPkts OBJECT-TYPE\n  \
    \                SYNTAX Counter\n                  ACCESS read-only\n        \
    \          STATUS mandatory\n                  DESCRIPTION\n                 \
    \     \"The total number of good packets received on this\n                  \
    \    LocalTalk interface.\"\n                  ::= { llapEntry 2 }\n         \
    \ llapOutPkts OBJECT-TYPE\n                  SYNTAX Counter\n                \
    \  ACCESS read-only\n                  STATUS mandatory\n                  DESCRIPTION\n\
    \                      \"The total number of packets transmitted on this\n   \
    \                   LocalTalk interface.\"\n                  ::= { llapEntry\
    \ 3 }\n          llapInNoHandlers OBJECT-TYPE\n                  SYNTAX Counter\n\
    \                  ACCESS read-only\n                  STATUS mandatory\n    \
    \              DESCRIPTION\n                      \"The total number of good packets\
    \ received on this\n                      LocalTalk interface for which there\
    \ was no\n                      protocol handler.\"\n                  ::= { llapEntry\
    \ 4 }\n          llapInLengthErrors OBJECT-TYPE\n                  SYNTAX Counter\n\
    \                  ACCESS read-only\n                  STATUS mandatory\n    \
    \              DESCRIPTION\n                      \"The total number of packets\
    \ received on this\n                      LocalTalk interface whose actual length\
    \ did not\n                      match the length in the header.\"\n         \
    \         ::= { llapEntry 5 }\n          llapInErrors OBJECT-TYPE\n          \
    \        SYNTAX Counter\n                  ACCESS read-only\n                \
    \  STATUS mandatory\n                  DESCRIPTION\n                      \"The\
    \ total number of packets containing errors\n                      received on\
    \ this LocalTalk interface.\"\n                  ::= { llapEntry 6 }\n       \
    \   llapCollisions OBJECT-TYPE\n                  SYNTAX Counter\n           \
    \       ACCESS read-only\n                  STATUS mandatory\n               \
    \   DESCRIPTION\n                      \"The total number of collisions assumed\
    \ on this\n                      LocalTalk interface due to the lack of a lapCTS\n\
    \                      reply.\"\n                  ::= { llapEntry 7 }\n     \
    \     llapDefers OBJECT-TYPE\n                  SYNTAX Counter\n             \
    \     ACCESS read-only\n                  STATUS mandatory\n                 \
    \ DESCRIPTION\n                      \"The total number of times this LocalTalk\n\
    \                      interface deferred to other packets.\"\n              \
    \    ::= { llapEntry 8 }\n          llapNoDataErrors OBJECT-TYPE\n           \
    \       SYNTAX Counter\n                  ACCESS read-only\n                 \
    \ STATUS mandatory\n                  DESCRIPTION\n                      \"The\
    \ total number of times this LocalTalk\n                      interface received\
    \ a lapRTS packet and expected\n                      a data packet, but did not\
    \ receive any data\n                      packet.\"\n                  ::= { llapEntry\
    \ 9 }\n          llapRandomCTSErrors OBJECT-TYPE\n                  SYNTAX Counter\n\
    \                  ACCESS read-only\n                  STATUS mandatory\n    \
    \              DESCRIPTION\n                      \"The total number of times\
    \ this LocalTalk\n                      interface received a lapCTS packet that\
    \ was\n                      not solicited by a lapRTS packet.\"\n           \
    \       ::= { llapEntry 10 }\n          llapFCSErrors OBJECT-TYPE\n          \
    \        SYNTAX Counter\n                  ACCESS read-only\n                \
    \  STATUS mandatory\n                  DESCRIPTION\n                      \"The\
    \ total number of times this LocalTalk\n                      interface received\
    \ a packet with an FCS\n                      (Frame Check Sequence) error.\"\n\
    \                  ::= { llapEntry 11 }\n          -- The AARP Group\n       \
    \   aarpTable OBJECT-TYPE\n                  SYNTAX SEQUENCE OF AarpEntry\n  \
    \                ACCESS not-accessible\n                  STATUS mandatory\n \
    \                 DESCRIPTION\n                      \"The AppleTalk Address Translation\
    \ Table\n                      contains an equivalence of AppleTalk Network\n\
    \                      Addresses to the link layer physical address.\"\n     \
    \             ::= { aarp 1 }\n          aarpEntry OBJECT-TYPE\n              \
    \    SYNTAX AarpEntry\n                  ACCESS not-accessible\n             \
    \     STATUS mandatory\n                  DESCRIPTION\n                      \"\
    Each entry contains one AppleTalk Network\n                      Address to physical\
    \ address equivalence.\"\n                  INDEX { aarpIfIndex, aarpNetAddress\
    \ }\n                  ::= { aarpTable 1 }\n          AarpEntry ::= SEQUENCE {\n\
    \                  aarpIfIndex     INTEGER,\n                  aarpPhysAddress\
    \ OCTET STRING,\n                  aarpNetAddress  DdpAddress\n          }\n \
    \         aarpIfIndex OBJECT-TYPE\n                  SYNTAX INTEGER\n        \
    \          ACCESS read-only\n                  STATUS mandatory\n            \
    \      DESCRIPTION\n                      \"The interface on which this entry's\
    \ equivalence\n                      is effective.  The interface identified by\
    \ a\n                      particular value of this index is the same\n      \
    \                interface as identified by the same value of\n              \
    \        ifIndex.\"\n                  ::= { aarpEntry 1 }\n          aarpPhysAddress\
    \ OBJECT-TYPE\n                  SYNTAX OCTET STRING\n                  ACCESS\
    \ read-only\n                  STATUS mandatory\n                  DESCRIPTION\n\
    \                      \"The media-dependent physical address\"\n            \
    \      ::= { aarpEntry 2 }\n          aarpNetAddress OBJECT-TYPE\n           \
    \       SYNTAX DdpAddress\n                  ACCESS read-only\n              \
    \    STATUS mandatory\n                  DESCRIPTION\n                      \"\
    The AppleTalk Network Address corresponding to\n                      the media-dependent\
    \ physical address.\"\n                  ::= { aarpEntry 3 }\n          -- The\
    \ ATPort Group\n          atportTable OBJECT-TYPE\n                  SYNTAX SEQUENCE\
    \ OF AtportEntry\n                  ACCESS not-accessible\n                  STATUS\
    \ mandatory\n                  DESCRIPTION\n                      \"A list of\
    \ AppleTalk ports for this entity.\"\n                  ::= { atport 1 }\n   \
    \       atportEntry OBJECT-TYPE\n                  SYNTAX AtportEntry\n      \
    \            ACCESS not-accessible\n                  STATUS mandatory\n     \
    \             DESCRIPTION\n                      \"The description of one of the\
    \ AppleTalk\n                      ports on this entity.\"\n                 \
    \ INDEX { atportIndex }\n                  ::= { atportTable 1 }\n          AtportEntry\
    \ ::= SEQUENCE {\n                  atportIndex               INTEGER,\n     \
    \             atportDescr               DisplayString,\n                  atportType\
    \                INTEGER,\n                  atportNetStart            OCTET STRING\
    \ (SIZE(2)),\n                  atportNetEnd              OCTET STRING (SIZE(2)),\n\
    \                  atportNetAddress          DdpAddress,\n                  atportStatus\
    \              INTEGER,\n                  atportNetConfig           INTEGER,\n\
    \                  atportZoneConfig          INTEGER,\n                  atportZone\
    \                OCTET STRING,\n                  atportIfIndex             INTEGER\n\
    \          }\n          atportIndex OBJECT-TYPE\n                  SYNTAX INTEGER\n\
    \                  ACCESS read-only\n                  STATUS mandatory\n    \
    \              DESCRIPTION\n                      \"A unique value for each AppleTalk\
    \ port.\n                      Its value is between 1 and the total number of\n\
    \                      AppleTalk ports.  The value for each port must\n      \
    \                remain constant at least from the\n                      re-initialization\
    \ of the entity's network\n                      management system to the next\n\
    \                      re-initialization.\"\n                  ::= { atportEntry\
    \ 1 }\n          atportDescr OBJECT-TYPE\n                  SYNTAX DisplayString\n\
    \                  ACCESS read-only\n                  STATUS mandatory\n    \
    \              DESCRIPTION\n                      \"A text string containing information\
    \ about the\n                      port.  This string is intended for presentation\n\
    \                      to a human; it must not contain anything but\n        \
    \              printable ASCII characters.\"\n                  ::= { atportEntry\
    \ 2 }\n          atportType OBJECT-TYPE\n                  SYNTAX INTEGER {\n\
    \                       other(1),       -- none of the following\n           \
    \            localtalk(2),\n                       ethertalk1(3),\n          \
    \             ethertalk2(4),\n                       tokentalk(5),\n         \
    \              iptalk(6),\n                       serial-ppp(7),\n           \
    \            serial-nonstandard(8),\n                       virtual(9)\n     \
    \             }\n                  ACCESS read-write\n                  STATUS\
    \ mandatory\n                  DESCRIPTION\n                      \"The type of\
    \ port, distinguished by the protocol\n                      immediately below\
    \ DDP in the protocol stack.\"\n                  ::= { atportEntry 3 }\n    \
    \      atportNetStart OBJECT-TYPE\n                  SYNTAX OCTET STRING (SIZE(2))\n\
    \                  ACCESS read-write\n                  STATUS mandatory\n   \
    \               DESCRIPTION\n                      \"The first AppleTalk network\
    \ address in the range\n                      configured for this port.  This\
    \ is a two octet\n                      DDP network address in network byte order.\"\
    \n                  ::= { atportEntry 4 }\n          atportNetEnd OBJECT-TYPE\n\
    \                  SYNTAX OCTET STRING (SIZE(2))\n                  ACCESS read-write\n\
    \                  STATUS mandatory\n                  DESCRIPTION\n         \
    \             \"The last AppleTalk network address in the range\n            \
    \          configured for this port.  This is a two octet\n                  \
    \    DDP network address in network byte order.  If the\n                    \
    \  network to which this AppleTalk port is\n                      connected is\
    \ a Phase 1 network or a non-extended\n                      network, the value\
    \ for atportNetEnd shall be two\n                      octets of zero.\"\n   \
    \               ::= { atportEntry 5 }\n          atportNetAddress OBJECT-TYPE\n\
    \                  SYNTAX DdpAddress\n                  ACCESS read-write\n  \
    \                STATUS mandatory\n                  DESCRIPTION\n           \
    \           \"The AppleTalk network address configured for this\n            \
    \          port.\"\n                  ::= { atportEntry 6 }\n          atportStatus\
    \ OBJECT-TYPE\n                  SYNTAX INTEGER {\n                       operational(1),\n\
    \                       unconfigured(2),\n                       off(3),\n   \
    \                    invalid(4)\n                  }\n                  ACCESS\
    \ read-write\n                  STATUS mandatory\n                  DESCRIPTION\n\
    \                      \"The configuration status of this port.\n            \
    \          Setting this object to the value invalid(4)\n                     \
    \ has the effect of invalidating the corresponding\n                      entry\
    \ in the atportTable.  That is, it\n                      effectively disassociates\
    \ the mapping identified\n                      with said entry.  It is an\n \
    \                     implementation-specific matter as to whether the\n     \
    \                 agent removes an invalidated entry from the table.\n       \
    \               Accordingly, management stations must be\n                   \
    \   prepared to receive from agents tabular\n                      information\
    \ corresponding to entries not\n                      currently in use.  Proper\
    \ interpretation of such\n                      entries requires examination of\
    \ the relevant\n                      atportStatus object.\"\n               \
    \           ::= { atportEntry 7 }\n          atportNetConfig OBJECT-TYPE\n   \
    \               SYNTAX INTEGER {\n                      configured(1),  -- explicit\
    \ configuration.\n                      garnered(2),    -- assumed from inspection\
    \ of net.\n                      guessed(3),     -- a \"random\" configuration.\n\
    \                      unconfigured(4)\n                  }\n                \
    \  ACCESS read-only\n                  STATUS mandatory\n                  DESCRIPTION\n\
    \                      \"The configuration status of this port.\"\n          \
    \        ::= { atportEntry 8 }\n          atportZoneConfig OBJECT-TYPE\n     \
    \             SYNTAX INTEGER {\n                      configured(1),  -- explicit\
    \ configuration\n                      garnered(2),    -- assumed from inspection\
    \ of net.\n                      guessed(3),     -- a \"random\" configuration.\n\
    \                      unconfigured(4)\n                  }\n                \
    \  ACCESS read-only\n                  STATUS mandatory\n                  DESCRIPTION\n\
    \                      \"The configuration status of the zone information\n  \
    \                    for this port.\"\n                  ::= { atportEntry 9 }\n\
    \          atportZone OBJECT-TYPE\n                  SYNTAX OCTET STRING\n   \
    \               ACCESS read-write\n                  STATUS mandatory\n      \
    \            DESCRIPTION\n                      \"The zone name configured for\
    \ this AppleTalk\n                      port.\"\n                  ::= { atportEntry\
    \ 10 }\n          atportIfIndex OBJECT-TYPE\n                  SYNTAX INTEGER\n\
    \                  ACCESS read-write\n                  STATUS mandatory\n   \
    \               DESCRIPTION\n                      \"The physical interface associated\
    \ with this\n                      AppleTalk port.  The interface identified by\
    \ a\n                      particular value of this index is the same\n      \
    \                interface as identified by the same value of\n              \
    \        ifIndex.\"\n                  ::= { atportEntry 11 }\n          -- The\
    \ DDP Group\n          ddpOutRequests OBJECT-TYPE\n                  SYNTAX Counter\n\
    \                  ACCESS read-only\n                  STATUS mandatory\n    \
    \              DESCRIPTION\n                      \"The total number of DDP datagrams\
    \ which were\n                      supplied to DDP by local DDP clients in requests\n\
    \                      for transmission.  Note that this counter does\n      \
    \                not include any datagrams counted in\n                      ddpForwRequests.\"\
    \n                  ::= { ddp 1 }\n          ddpOutShorts OBJECT-TYPE\n      \
    \            SYNTAX Counter\n                  ACCESS read-only\n            \
    \      STATUS mandatory\n                  DESCRIPTION\n                     \
    \ \"The total number of short DDP datagrams which\n                      were\
    \ transmitted from this entity.\"\n                  ::= { ddp 2 }\n         \
    \ ddpOutLongs OBJECT-TYPE\n                  SYNTAX Counter\n                \
    \  ACCESS read-only\n                  STATUS mandatory\n                  DESCRIPTION\n\
    \                      \"The total number of long DDP datagrams which were\n \
    \                     transmitted from this entity.\"\n                  ::= {\
    \ ddp 3 }\n          ddpInReceives OBJECT-TYPE\n                  SYNTAX Counter\n\
    \                  ACCESS read-only\n                  STATUS mandatory\n    \
    \              DESCRIPTION\n                      \"The total number of input\
    \ datagrams received by\n                      DDP, including those received in\
    \ error.\"\n                  ::= { ddp 4 }\n          ddpForwRequests OBJECT-TYPE\n\
    \                  SYNTAX Counter\n                  ACCESS read-only\n      \
    \            STATUS mandatory\n                  DESCRIPTION\n               \
    \       \"The number of input datagrams for which this\n                     \
    \ entity was not their final DDP destination, as\n                      a result\
    \ of which an attempt was made to find a\n                      route to forward\
    \ them to that final destination.\"\n                  ::= { ddp 5 }\n       \
    \   ddpInLocalDatagrams OBJECT-TYPE\n                  SYNTAX Counter\n      \
    \            ACCESS read-only\n                  STATUS mandatory\n          \
    \        DESCRIPTION\n                      \"The total number of input DDP datagrams\
    \ for\n                      which this entity was their final DDP\n         \
    \             destination.\"\n                  ::= { ddp 6 }\n          ddpNoProtocolHandlers\
    \ OBJECT-TYPE\n                  SYNTAX Counter\n                  ACCESS read-only\n\
    \                  STATUS mandatory\n                  DESCRIPTION\n         \
    \             \"The total number of DDP datagrams addressed to\n             \
    \         this entity that were addressed to an upper\n                      layer\
    \ protocol for which no protocol handler\n                      existed.\"\n \
    \                 ::= { ddp 7 }\n          ddpOutNoRoutes OBJECT-TYPE\n      \
    \            SYNTAX Counter\n                  ACCESS read-only\n            \
    \      STATUS mandatory\n                  DESCRIPTION\n                     \
    \ \"The total number of DDP datagrams dropped\n                      because a\
    \ route could not be found to their\n                      final destination.\"\
    \n                  ::= { ddp 8 }\n          ddpTooShortErrors OBJECT-TYPE\n \
    \                 SYNTAX Counter\n                  ACCESS read-only\n       \
    \           STATUS mandatory\n                  DESCRIPTION\n                \
    \      \"The total number of input DDP datagrams dropped\n                   \
    \   because the received data length was less than\n                      the\
    \ data length specified in the DDP header or\n                      the received\
    \ data length was less than the\n                      length of the expected\
    \ DDP header.\"\n                  ::= { ddp 9 }\n          ddpTooLongErrors OBJECT-TYPE\n\
    \                  SYNTAX Counter\n                  ACCESS read-only\n      \
    \            STATUS mandatory\n                  DESCRIPTION\n               \
    \       \"The total number of input DDP datagrams dropped\n                  \
    \    because the received data length was greater\n                      than\
    \ the data length specified in the DDP header\n                      or because\
    \ they exceeded the maximum DDP\n                      datagram size.\"\n    \
    \              ::= { ddp 10 }\n          ddpBroadcastErrors OBJECT-TYPE\n    \
    \              SYNTAX Counter\n                  ACCESS read-only\n          \
    \        STATUS mandatory\n                  DESCRIPTION\n                   \
    \   \"The total number of input DDP datagrams dropped\n                      because\
    \ this entity was not their final\n                      destination and they\
    \ were addressed to the link\n                      level broadcast.\"\n     \
    \             ::= { ddp 11 }\n          ddpShortDDPErrors OBJECT-TYPE\n      \
    \            SYNTAX Counter\n                  ACCESS read-only\n            \
    \      STATUS mandatory\n                  DESCRIPTION\n                     \
    \ \"The total number of input DDP datagrams dropped\n                      because\
    \ this entity was not their final\n                      destination and their\
    \ type was short DDP.\"\n                  ::= { ddp 12 }\n          ddpHopCountErrors\
    \ OBJECT-TYPE\n                  SYNTAX Counter\n                  ACCESS read-only\n\
    \                  STATUS mandatory\n                  DESCRIPTION\n         \
    \             \"The total number of input DDP datagrams dropped\n            \
    \          because this entity was not their final\n                      destination\
    \ and their hop count would exceed 15.\"\n                  ::= { ddp 13 }\n \
    \         ddpChecksumErrors OBJECT-TYPE\n                  SYNTAX Counter\n  \
    \                ACCESS read-only\n                  STATUS mandatory\n      \
    \            DESCRIPTION\n                      \"The total number of input DDP\
    \ datagrams dropped\n                      because of a checksum error.\"\n  \
    \                ::= { ddp 14 }\n          -- The RTMP Group\n          rtmpTable\
    \ OBJECT-TYPE\n                  SYNTAX SEQUENCE OF RtmpEntry\n              \
    \    ACCESS not-accessible\n                  STATUS mandatory\n             \
    \     DESCRIPTION\n                      \"A list of Routing Table Maintenance\
    \ Protocol\n                      entries for this entity.\"\n               \
    \   ::= { rtmp 1 }\n          rtmpEntry OBJECT-TYPE\n                  SYNTAX\
    \ RtmpEntry\n                  ACCESS not-accessible\n                  STATUS\
    \ mandatory\n                  DESCRIPTION\n                      \"The route\
    \ entry to a particular network range.\"\n                  INDEX { rtmpRangeStart\
    \ }\n                  ::= { rtmpTable 1 }\n          RtmpEntry ::= SEQUENCE {\n\
    \                  rtmpRangeStart  OCTET STRING (SIZE(2)),\n                 \
    \ rtmpRangeEnd    OCTET STRING (SIZE(2)),\n                  rtmpNextHop     OCTET\
    \ STRING,\n                  rtmpType        INTEGER,\n                  rtmpPort\
    \        INTEGER,\n                  rtmpHops        INTEGER,\n              \
    \    rtmpState       INTEGER\n          }\n          rtmpRangeStart OBJECT-TYPE\n\
    \                  SYNTAX OCTET STRING (SIZE(2))\n                  ACCESS read-write\n\
    \                  STATUS mandatory\n                  DESCRIPTION\n         \
    \             \"The first DDP network address in the network\n               \
    \       range to which this routing entry pertains.\n                      This\
    \ is a two octet DDP network address in\n                      network byte order.\"\
    \n                  ::= { rtmpEntry 1 }\n          rtmpRangeEnd OBJECT-TYPE\n\
    \                  SYNTAX OCTET STRING (SIZE(2))\n                  ACCESS read-write\n\
    \                  STATUS mandatory\n                  DESCRIPTION\n         \
    \             \"The last DDP network address in the network range\n          \
    \            to which this routing entry pertains.  This is a\n              \
    \        two octet DDP network address in network byte\n                     \
    \ order.  If the network to which this routing\n                      entry pertains\
    \ is a Phase 1 network or a\n                      non-extended network, the value\
    \ for rtmpRangeEnd\n                      shall be two octets of zero.\"\n   \
    \               ::= { rtmpEntry 2 }\n          rtmpNextHop OBJECT-TYPE\n     \
    \             SYNTAX OCTET STRING\n                  ACCESS read-write\n     \
    \             STATUS mandatory\n                  DESCRIPTION\n              \
    \        \"The next hop in the route to this entry's\n                      destination\
    \ network.  If the type of this route\n                      is Appletalk, this\
    \ address takes the same form\n                      as DdpAddress.\"\n      \
    \            ::= { rtmpEntry 3 }\n          rtmpType OBJECT-TYPE\n           \
    \       SYNTAX INTEGER {\n                          other(1),\n              \
    \            appletalk(2),\n                          serial-ppp(3),\n       \
    \                   serial-nonstandard(4)\n                  }\n             \
    \     ACCESS read-write\n                  STATUS mandatory\n                \
    \  DESCRIPTION\n                      \"The type of network over which this route\n\
    \                      points.\"\n                  ::= { rtmpEntry 4 }\n    \
    \      rtmpPort OBJECT-TYPE\n                  SYNTAX INTEGER\n              \
    \    ACCESS read-write\n                  STATUS mandatory\n                 \
    \ DESCRIPTION\n                      \"The index of the AppleTalk port over which\n\
    \                      this route points.\"\n                  ::= { rtmpEntry\
    \ 5 }\n          rtmpHops OBJECT-TYPE\n                  SYNTAX INTEGER\n    \
    \              ACCESS read-write\n                  STATUS mandatory\n       \
    \           DESCRIPTION\n                      \"The number of hops required to\
    \ reach the\n                      destination network to which this routing\n\
    \                      entry pertains.\"\n                  ::= { rtmpEntry 6\
    \ }\n          rtmpState OBJECT-TYPE\n                  SYNTAX INTEGER {\n   \
    \                   good(1),\n                      suspect(2),\n            \
    \          goingBad(3),\n                      bad(4) -- may be removed from table\n\
    \                  }\n                  ACCESS read-write\n                  STATUS\
    \ mandatory\n                  DESCRIPTION\n                      \"The status\
    \ of the information contained in this\n                      route entry.\n \
    \                     Setting this object to the value bad(4) has the\n      \
    \                effect of invalidating the corresponding entry\n            \
    \          in the rtmpTable.  That is, it  effectively\n                     \
    \ disassociates the mapping identified with said\n                      entry.\
    \  It is an implementation-specific matter\n                      as to whether\
    \ the agent removes an invalidated\n                      entry from the table.\
    \  Accordingly, management\n                      stations must be prepared to\
    \ receive from agents\n                      tabular information corresponding\
    \ to entries not\n                      currently in use.  Proper interpretation\
    \ of such\n                      entries requires examination of the relevant\n\
    \                      rtmpState object.\"\n                  ::= { rtmpEntry\
    \ 7 }\n          -- The KIP Group\n          kipTable OBJECT-TYPE\n          \
    \        SYNTAX SEQUENCE OF KipEntry\n                  ACCESS not-accessible\n\
    \                  STATUS mandatory\n                  DESCRIPTION\n         \
    \             \"The table of routing information for KIP\n                   \
    \   networks.\"\n                  ::= { kip 1 }\n          kipEntry OBJECT-TYPE\n\
    \                  SYNTAX KipEntry\n                  ACCESS not-accessible\n\
    \                  STATUS mandatory\n                  DESCRIPTION\n         \
    \             \"An entry in the routing table for KIP networks.\"\n          \
    \        INDEX { kipNetStart }\n                  ::= { kipTable 1 }\n       \
    \   KipEntry ::= SEQUENCE {\n                  kipNetStart     OCTET STRING (SIZE(2)),\n\
    \                  kipNetEnd       OCTET STRING (SIZE(2)),\n                 \
    \ kipNextHop      IpAddress,\n                  kipHopCount     INTEGER,\n   \
    \               kipBCastAddr    IpAddress,\n                  kipCore        \
    \ INTEGER,\n                  kipType         INTEGER,\n                  kipState\
    \        INTEGER,\n                  kipShare        INTEGER\n          }\n  \
    \        kipNetStart OBJECT-TYPE\n                  SYNTAX OCTET STRING (SIZE(2))\n\
    \                  ACCESS read-write\n                  STATUS mandatory\n   \
    \               DESCRIPTION\n                      \"The first AppleTalk network\
    \ address in the\n                      range for this routing entry.  This address\
    \ is a\n                      two octet DDP network address in network byte\n\
    \                      order.\"\n                  ::= { kipEntry 1 }\n      \
    \    kipNetEnd OBJECT-TYPE\n                  SYNTAX OCTET STRING (SIZE(2))\n\
    \                  ACCESS read-write\n                  STATUS mandatory\n   \
    \               DESCRIPTION\n                      \"The last AppleTalk network\
    \ address in the range\n                      for this routing entry.  This address\
    \ is a two\n                      octet DDP network address in network byte order.\n\
    \                      If the network to which this AppleTalk port is\n      \
    \                connected is a Phase 1 network or a non-extended\n          \
    \            network, the value for kipNetEnd shall be two\n                 \
    \     octets of zero.\"\n                  ::= { kipEntry 2 }\n          kipNextHop\
    \ OBJECT-TYPE\n                  SYNTAX IpAddress\n                  ACCESS read-write\n\
    \                  STATUS mandatory\n                  DESCRIPTION\n         \
    \             \"The IP address of the next hop in the route to\n             \
    \         this entry's destination network.\"\n                  ::= { kipEntry\
    \ 3 }\n          kipHopCount OBJECT-TYPE\n                  SYNTAX INTEGER\n \
    \                 ACCESS read-write\n                  STATUS mandatory\n    \
    \              DESCRIPTION\n                      \"The number of hops required\
    \ to reach the\n                      destination network to which this entry\
    \ pertains.\"\n                  ::= { kipEntry 4 }\n          kipBCastAddr OBJECT-TYPE\n\
    \                  SYNTAX IpAddress\n                  ACCESS read-write\n   \
    \               STATUS mandatory\n                  DESCRIPTION\n            \
    \          \"The form of the IP address used to broadcast on\n               \
    \       this network.\"\n                  ::= { kipEntry 5 }\n          kipCore\
    \ OBJECT-TYPE\n                  SYNTAX INTEGER {\n                       core(1),\n\
    \                       notcore(2)\n                  }\n                  ACCESS\
    \ read-write\n                  STATUS mandatory\n                  DESCRIPTION\n\
    \                      \"The status of this network as a Kip Core\n          \
    \            network.\"\n                  ::= { kipEntry 6 }\n          kipType\
    \ OBJECT-TYPE\n                  SYNTAX INTEGER {\n                       kipRouter(1),\n\
    \                       net(2),\n                       host(3),\n           \
    \            other(4)\n                  }\n                  ACCESS read-write\n\
    \                  STATUS mandatory\n                  DESCRIPTION\n         \
    \             \"The type of the entity that this route points\n              \
    \        to.\"\n                  ::= { kipEntry 7 }\n          kipState OBJECT-TYPE\n\
    \                  SYNTAX INTEGER {\n                       configured(1),\n \
    \                      learned(2),\n                       invalid(3)\n      \
    \            }\n                  ACCESS read-write\n                  STATUS\
    \ mandatory\n                  DESCRIPTION\n                      \"The state\
    \ of this network entry.\n                      Setting this object to the value\
    \ invalid(3) has\n                      the effect of invalidating the corresponding\n\
    \                      entry in the kipTable.  That is, it effectively\n     \
    \                 disassociates the mapping identified with said\n           \
    \           entry.  It is an implementation-specific matter\n                \
    \      as to whether the agent removes an invalidated\n                      entry\
    \ from the table.\n                      Accordingly, management stations must\
    \ be\n                      prepared to receive from agents tabular\n        \
    \              information corresponding to entries not\n                    \
    \  currently in use.  Proper interpretation of such\n                      entries\
    \ requires examination of the relevant\n                      kipState object.\"\
    \n                  ::= { kipEntry 8 }\n          kipShare OBJECT-TYPE\n     \
    \             SYNTAX INTEGER {\n                       shared(1),\n          \
    \             private(2)\n                  }\n                  ACCESS read-write\n\
    \                  STATUS mandatory\n                  DESCRIPTION\n         \
    \             \"If the information in this entry is propagated\n             \
    \         to other routers as part of a routing protocol,\n                  \
    \    the value of this variable is equal to\n                      shared(1).\
    \  Otherwise its value is private(2).\"\n                  ::= { kipEntry 9 }\n\
    \          -- The ZIP Group\n          zipTable OBJECT-TYPE\n                \
    \  SYNTAX SEQUENCE OF ZipEntry\n                  ACCESS not-accessible\n    \
    \              STATUS mandatory\n                  DESCRIPTION\n             \
    \         \"The table of zone information for reachable\n                    \
    \  AppleTalk networks.\"\n                  ::= { zip 1 }\n          zipEntry\
    \ OBJECT-TYPE\n                  SYNTAX ZipEntry\n                  ACCESS not-accessible\n\
    \                  STATUS mandatory\n                  DESCRIPTION\n         \
    \             \"An entry of zone information for a particular\n              \
    \        zone and network combination.\"\n                  INDEX { zipZoneNetStart,\
    \ zipZoneIndex }\n                  ::= { zipTable 1 }\n          ZipEntry ::=\
    \ SEQUENCE {\n                  zipZoneName     OCTET STRING,\n              \
    \    zipZoneIndex    INTEGER,\n                  zipZoneNetStart OCTET STRING\
    \ (SIZE(2)),\n                  zipZoneNetEnd   OCTET STRING (SIZE(2)),\n    \
    \              zipZoneState    INTEGER\n          }\n          zipZoneName OBJECT-TYPE\n\
    \                  SYNTAX OCTET STRING\n                  ACCESS read-write\n\
    \                  STATUS mandatory\n                  DESCRIPTION\n         \
    \             \"The ASCII zone name of this entry.\"\n                  ::= {\
    \ zipEntry 1 }\n          zipZoneIndex OBJECT-TYPE\n                  SYNTAX INTEGER\n\
    \                  ACCESS read-only\n                  STATUS mandatory\n    \
    \              DESCRIPTION\n                      \"An integer that is unique\
    \ to the zipZoneName\n                      that is present in this entry.  For\
    \ any given\n                      zone name, every zipEntry that has an equal\
    \ zone\n                      name will have the same zipZoneIndex.\"\n      \
    \            ::= { zipEntry 2 }\n          zipZoneNetStart OBJECT-TYPE\n     \
    \             SYNTAX OCTET STRING (SIZE(2))\n                  ACCESS read-write\n\
    \                  STATUS mandatory\n                  DESCRIPTION\n         \
    \             \"The network that starts the range for this\n                 \
    \     entry.  This address is a two octet DDP network\n                      address\
    \ in network byte order.\"\n                  ::= { zipEntry 3 }\n          zipZoneNetEnd\
    \ OBJECT-TYPE\n                  SYNTAX OCTET STRING (SIZE(2))\n             \
    \     ACCESS read-write\n                  STATUS mandatory\n                \
    \  DESCRIPTION\n                      \"The network that ends the range for this\n\
    \                      entry.  This address is a two octet DDP network\n     \
    \                 address in network byte order.  If the network\n           \
    \           to which this zip entry pertains is a Phase 1\n                  \
    \    network or a non-extended network, the value for\n                      zipZoneNetEnd\
    \ shall be two bytes of zero.\"\n                  ::= { zipEntry 4 }\n      \
    \    zipZoneState OBJECT-TYPE\n                  SYNTAX INTEGER {\n          \
    \                valid(1),\n                          invalid(2)\n           \
    \       }\n                  ACCESS read-write\n                  STATUS mandatory\n\
    \                  DESCRIPTION\n                      \"The state of this zip\
    \ entry.\n                      Setting this object to the value invalid(2) has\n\
    \                      the effect of invalidating the corresponding\n        \
    \              entry in the zipTable.  That is, it effectively\n             \
    \         disassociates the mapping identified with said\n                   \
    \   entry.  It is an implementation-specific matter\n                      as\
    \ to whether the agent removes an invalidated\n                      entry from\
    \ the table.\n                      Accordingly, management stations must be\n\
    \                      prepared to receive from agents tabular\n             \
    \         information corresponding to entries not\n                      currently\
    \ in use.  Proper interpretation of\n                      such entries requires\
    \ examination of the\n                      relevant zipZoneState object.\"\n\
    \                  ::= { zipEntry 5 }\n          -- The NBP Group\n          nbpTable\
    \ OBJECT-TYPE\n                  SYNTAX SEQUENCE OF NbpEntry\n               \
    \   ACCESS not-accessible\n                  STATUS mandatory\n              \
    \    DESCRIPTION\n                      \"The table of NBP services registered\
    \ on this\n                      entity.\"\n                  ::= { nbp 1 }\n\
    \          nbpEntry OBJECT-TYPE\n                  SYNTAX NbpEntry\n         \
    \         ACCESS not-accessible\n                  STATUS mandatory\n        \
    \          DESCRIPTION\n                      \"The description of an NBP service\
    \ registered on\n                      this entity.\"\n                  INDEX\
    \ { nbpIndex }\n                  ::= { nbpTable  1 }\n           NbpEntry ::=\
    \ SEQUENCE {\n                  nbpIndex        INTEGER,\n                  nbpObject\
    \       OCTET STRING,\n                  nbpType         OCTET STRING,\n     \
    \             nbpZone         OCTET STRING,\n                  nbpState      \
    \  INTEGER\n           }\n          nbpIndex OBJECT-TYPE\n                  SYNTAX\
    \ INTEGER\n                  ACCESS read-only\n                  STATUS mandatory\n\
    \                  DESCRIPTION\n                      \"The index of this NBP\
    \ entry.  This value ranges\n                      from 1 to the number of NBP\
    \ entries currently\n                      registered on this entity.\"\n    \
    \              ::= { nbpEntry 1 }\n          nbpObject OBJECT-TYPE\n         \
    \         SYNTAX OCTET STRING\n                  ACCESS read-write\n         \
    \         STATUS mandatory\n                  DESCRIPTION\n                  \
    \    \"The name of the service described by this\n                      entity.\"\
    \n                  ::= { nbpEntry 2 }\n          nbpType OBJECT-TYPE\n      \
    \            SYNTAX OCTET STRING\n                  ACCESS read-write\n      \
    \            STATUS mandatory\n                  DESCRIPTION\n               \
    \       \"The type of the service described by this\n                      entity.\"\
    \n                  ::= { nbpEntry 3 }\n          nbpZone OBJECT-TYPE\n      \
    \            SYNTAX OCTET STRING\n                  ACCESS read-write\n      \
    \            STATUS mandatory\n                  DESCRIPTION\n               \
    \       \"The zone the service described by this entity is\n                 \
    \     registered in.\"\n                  ::= { nbpEntry 4 }\n          nbpState\
    \ OBJECT-TYPE\n                  SYNTAX INTEGER {\n                          valid(1),\n\
    \                          invalid(2)\n                  }\n                 \
    \ ACCESS read-write\n                  STATUS mandatory\n                  DESCRIPTION\n\
    \                      \"The state of this NBP entry.\n                      Setting\
    \ this object to the value invalid(2) has\n                      the effect of\
    \ invalidating the corresponding\n                      entry in the nbpTable.\
    \  That is, it effectively\n                      disassociates the mapping identified\
    \ with said\n                      entry.  It is an implementation-specific matter\n\
    \                      as to whether the agent removes an invalidated\n      \
    \                entry from the table.\n                      Accordingly, management\
    \ stations must be\n                      prepared to receive from agents tabular\n\
    \                      information corresponding to entries not\n            \
    \          currently in use.  Proper interpretation of\n                     \
    \ such entries requires examination of the\n                      relevant nbpState\
    \ object.\"\n                  ::= { nbpEntry 5 }\n          -- The ATEcho Group\n\
    \          atechoRequests OBJECT-TYPE\n                  SYNTAX Counter\n    \
    \              ACCESS read-only\n                  STATUS mandatory\n        \
    \          DESCRIPTION\n                      \"The number of AppleTalk echo requests\
    \ received.\"\n                  ::= { atecho 1 }\n          atechoReplies OBJECT-TYPE\n\
    \                  SYNTAX Counter\n                  ACCESS read-only\n      \
    \            STATUS mandatory\n                  DESCRIPTION\n               \
    \       \"The number of AppleTalk echo replies sent.\"\n                  ::=\
    \ { atecho 2 }\n          END\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   This document was produced by the IETF AppleTalk-IP\
    \ Working Group:\n               Terry Braun, Novell\n               Gregory Bruell,\
    \ Shiva\n               Philip Budne, Shiva\n               Rob Chandhok, CMU\n\
    \               Cyrus Chow, NASA\n               Bruce Crabill, UMD\n        \
    \       Peter DiCamillo, Brown\n               Robert Elz, U. of Melbourne\n \
    \              Tom Evans, Webster\n               Karen Frisa, CMU\n         \
    \      Russ Hobby, UC Davis\n               Tom Holodnik, CMU\n              \
    \ Peter Honeyman, U. of Michigan\n               Michael Horowitz, Shiva\n   \
    \            Van Jacobson, Lawrence Berkeley Labs\n               Doug Kerr, Novell\n\
    \               Holly Knight, Apple\n               Philip Koch, Dartmouth\n \
    \              Louise Laier, Apple\n               Nik Langrind, Shiva\n     \
    \          Joshua Littlefield, Cayman\n               Kanchei Loa, Motorola\n\
    \               John Mason, Apple\n               Leo McLaughlin, TWG\n      \
    \         Milo Medin, NASA\n               Greg Minshall, Novell\n           \
    \    Bob Morgan, Stanford\n               Ed Moy, Berkeley\n               Matthew\
    \ Nocifore, Drexel\n               Zbigniew Opalka, BBN\n               Alan Oppenheimer,\
    \ Apple\n               Brad Parker, Cayman\n               Greg Satz, Cisco\n\
    \               John Seligson, Apple\n               Frank Slaughter, Shiva\n\
    \               Zaw-Sing Su, SRZ\n               John Veizades, Apple\n      \
    \         Peter Vinsel, Apple\n               Jonathan Wenocur, Shiva\n      \
    \         Steven Willis, Wellfleet\n   In addition, the contribution of the following\
    \ individuals is also\n   acknowledged:\n               Karen Frisa, Carnegie\
    \ Mellon University\n               Greg Minshall, Novell, Inc.\n            \
    \   Marshall T. Rose, PSI\n"
- title: 7.  References
  contents:
  - "7.  References\n   [1] Cerf, V., \"IAB Recommendations for the Development of\
    \ Internet\n       Network Management Standards\", RFC 1052, NRI, April 1988.\n\
    \   [2] Cerf, V., \"Report of the Second Ad Hoc Network Management Review\n  \
    \     Group\", RFC 1109, NRI, August 1989.\n   [3] Rose M., and K. McCloghrie,\
    \ \"Structure and Identification of\n       Management Information for TCP/IP-based\
    \ internets\", RFC 1155,\n       Performance Systems International, Hughes LAN\
    \ Systems, May 1990.\n   [4] McCloghrie K., and M. Rose, \"Management Information\
    \ Base for\n       Network Management of TCP/IP-based internets\", RFC 1156, Hughes\n\
    \       LAN Systems, Performance Systems International, May 1990.\n   [5] Case,\
    \ J., Fedor, M., Schoffstall, M., and J. Davin, \"Simple\n       Network Management\
    \ Protocol\", RFC 1157, SNMP Research,\n       Performance Systems International,\
    \ Performance Systems\n       International, MIT Laboratory for Computer Science,\
    \ May 1990.\n   [6] McCloghrie K., and M. Rose, Editors, \"Management Information\
    \ Base\n       for Network Management of TCP/IP-based internets\", RFC 1213,\n\
    \       Performance Systems International, March 1991.\n   [7] Information processing\
    \ systems - Open Systems Interconnection -\n       Specification of Abstract Syntax\
    \ Notation One (ASN.1),\n       International Organization for Standardization,\
    \ International\n       Standard 8824, December 1987.\n   [8] Information processing\
    \ systems - Open Systems Interconnection -\n       Specification of Basic Encoding\
    \ Rules for Abstract Notation One\n       (ASN.1), International Organization\
    \ for Standardization,\n       International Standard 8825, December 1987.\n \
    \  [9] Rose, M., and K. McCloghrie, Editors, \"Concise MIB Definitions\",\n  \
    \     RFC 1212, Performance Systems International, Hughes LAN Systems,\n     \
    \  March 1991.\n  [10] Sidhu, G., Andrews, R., and A. Oppenheimer, \"Inside AppleTalk\"\
    ,\n       Second Edition, Addison Wesley, 1990.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 9.  Author's Address
  contents:
  - "9.  Author's Address\n   Steven Waldbusser\n   Carnegie Mellon University\n \
    \  4910 Forbes Ave.\n   Pittsburgh, PA 15213\n   EMail:  waldbusser@andrew.cmu.edu\n"
