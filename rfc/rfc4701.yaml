- title: __initial_text__
  contents:
  - "                A DNS Resource Record (RR) for Encoding\n   Dynamic Host Configuration\
    \ Protocol (DHCP) Information (DHCID RR)\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   It is possible for Dynamic Host Configuration Protocol (DHCP) clients\n\
    \   to attempt to update the same DNS Fully Qualified Domain Name (FQDN)\n   or\
    \ to update a DNS FQDN that has been added to the DNS for another\n   purpose\
    \ as they obtain DHCP leases.  Whether the DHCP server or the\n   clients themselves\
    \ perform the DNS updates, conflicts can arise.  To\n   resolve such conflicts,\
    \ RFC 4703 proposes storing client identifiers\n   in the DNS to unambiguously\
    \ associate domain names with the DHCP\n   clients to which they refer.  This\
    \ memo defines a distinct Resource\n   Record (RR) type for this purpose for use\
    \ by DHCP clients and\n   servers:  the \"DHCID\" RR.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Terminology .....................................................3\n  \
    \ 3. The DHCID RR ....................................................3\n    \
    \  3.1. DHCID RDATA Format .........................................3\n      3.2.\
    \ DHCID Presentation Format ..................................4\n      3.3. The\
    \ DHCID RR Identifier Type Codes .........................4\n      3.4. The DHCID\
    \ RR Digest Type Code ..............................4\n      3.5. Computation\
    \ of the RDATA ...................................5\n           3.5.1. Using the\
    \ Client's DUID .............................5\n           3.5.2. Using the Client\
    \ Identifier Option ..................6\n           3.5.3. Using the Client's\
    \ htype and chaddr .................6\n      3.6. Examples ...................................................6\n\
    \           3.6.1. Example 1 ...........................................6\n  \
    \         3.6.2. Example 2 ...........................................7\n    \
    \       3.6.3. Example 3 ...........................................7\n   4. Use\
    \ of the DHCID RR .............................................8\n   5. Updater\
    \ Behavior ................................................8\n   6. Security Considerations\
    \ .........................................8\n   7. IANA Considerations .............................................9\n\
    \   8. Acknowledgements ................................................9\n  \
    \ 9. References ......................................................9\n    \
    \  9.1. Normative References .......................................9\n      9.2.\
    \ Informative References ....................................10\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   A set of procedures to allow DHCP [7] [11] clients and servers\
    \ to\n   automatically update the DNS ([3], [4]) is proposed in [1].\n   Conflicts\
    \ can arise if multiple DHCP clients wish to use the same DNS\n   name or a DHCP\
    \ client attempts to use a name added for another\n   purpose.  To resolve such\
    \ conflicts, [1] proposes storing client\n   identifiers in the DNS to unambiguously\
    \ associate domain names with\n   the DHCP clients using them.  In the interest\
    \ of clarity, it is\n   preferable for this DHCP information to use a distinct\
    \ RR type.  This\n   memo defines a distinct RR for this purpose for use by DHCP\
    \ clients\n   or servers: the \"DHCID\" RR.\n   In order to obscure potentially\
    \ sensitive client identifying\n   information, the data stored is the result\
    \ of a one-way SHA-256 hash\n   computation.  The hash includes information from\
    \ the DHCP client's\n   message as well as the domain name itself, so that the\
    \ data stored in\n   the DHCID RR will be dependent on both the client identification\
    \ used\n   in the DHCP protocol interaction and the domain name.  This means\n\
    \   that the DHCID RDATA will vary if a single client is associated over\n   time\
    \ with more than one name.  This makes it difficult to 'track' a\n   client as\
    \ it is associated with various domain names.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [2].\n"
- title: 3.  The DHCID RR
  contents:
  - "3.  The DHCID RR\n   The DHCID RR is defined with mnemonic DHCID and type code\
    \ 49.  The\n   DHCID RR is only defined in the IN class.  DHCID RRs cause no\n\
    \   additional section processing.\n"
- title: 3.1.  DHCID RDATA Format
  contents:
  - "3.1.  DHCID RDATA Format\n   The RDATA section of a DHCID RR in transmission\
    \ contains RDLENGTH\n   octets of binary data.  The format of this data and its\n\
    \   interpretation by DHCP servers and clients are described below.\n   DNS software\
    \ should consider the RDATA section to be opaque.  DHCP\n   clients or servers\
    \ use the DHCID RR to associate a DHCP client's\n   identity with a DNS name,\
    \ so that multiple DHCP clients and servers\n   may deterministically perform\
    \ dynamic DNS updates to the same zone.\n   From the updater's perspective, the\
    \ DHCID resource record RDATA\n   consists of a 2-octet identifier type, in network\
    \ byte order,\n   followed by a 1-octet digest type, followed by one or more octets\n\
    \   representing the actual identifier:\n           < 2 octets >    Identifier\
    \ type code\n           < 1 octet >     Digest type code\n           < n octets\
    \ >    Digest (length depends on digest type)\n"
- title: 3.2.  DHCID Presentation Format
  contents:
  - "3.2.  DHCID Presentation Format\n   In DNS master files, the RDATA is represented\
    \ as a single block in\n   base-64 encoding identical to that used for representing\
    \ binary data\n   in [8], Section 3.  The data may be divided up into any number\
    \ of\n   white-space-separated substrings, down to single base-64 digits,\n  \
    \ which are concatenated to form the complete RDATA.  These substrings\n   can\
    \ span lines using the standard parentheses.\n"
- title: 3.3.  The DHCID RR Identifier Type Codes
  contents:
  - "3.3.  The DHCID RR Identifier Type Codes\n   The DHCID RR Identifier Type Code\
    \ specifies what data from the DHCP\n   client's request was used as input into\
    \ the hash function.  The\n   identifier type codes are defined in a registry\
    \ maintained by IANA,\n   as specified in Section 7.  The initial list of assigned\
    \ values for\n   the identifier type code and that type's identifier is:\n   +------------------+------------------------------------------------+\n\
    \   |  Identifier Type | Identifier                                     |\n  \
    \ |       Code       |                                                |\n   +------------------+------------------------------------------------+\n\
    \   |      0x0000      | The 1-octet 'htype' followed by 'hlen' octets  |\n  \
    \ |                  | of 'chaddr' from a DHCPv4 client's DHCPREQUEST |\n   |\
    \                  | [7].                                           |\n   |  \
    \    0x0001      | The data octets (i.e., the Type and            |\n   |    \
    \              | Client-Identifier fields) from a DHCPv4        |\n   |      \
    \            | client's Client Identifier option [10].        |\n   |      0x0002\
    \      | The client's DUID (i.e., the data octets of a  |\n   |              \
    \    | DHCPv6 client's Client Identifier option [11]  |\n   |                \
    \  | or the DUID field from a DHCPv4 client's       |\n   |                  |\
    \ Client Identifier option [6]).                 |\n   |  0x0003 - 0xfffe | Undefined;\
    \ available to be assigned by IANA.   |\n   |      0xffff      | Undefined; RESERVED.\
    \                           |\n   +------------------+------------------------------------------------+\n"
- title: 3.4.  The DHCID RR Digest Type Code
  contents:
  - "3.4.  The DHCID RR Digest Type Code\n   The DHCID RR Digest Type Code is an identifier\
    \ for the digest\n   algorithm used.  The digest is calculated over an identifier\
    \ and the\n   canonical FQDN as described in the next section.\n   The digest\
    \ type codes are defined in a registry maintained by IANA,\n   as specified in\
    \ Section 7.  The initial list of assigned values for\n   the digest type codes\
    \ is: value 0 is reserved, and value 1 is\n   SHA-256.  Reserving other types\
    \ requires IETF standards action.\n   Defining new values will also require IETF\
    \ standards action to\n   document how DNS updaters are to deal with multiple\
    \ digest types.\n"
- title: 3.5.  Computation of the RDATA
  contents:
  - "3.5.  Computation of the RDATA\n   The DHCID RDATA is formed by concatenating\
    \ the 2-octet identifier\n   type code with variable-length data.\n   The RDATA\
    \ for all type codes other than 0xffff, which is reserved for\n   future expansion,\
    \ is formed by concatenating the 2-octet identifier\n   type code, the 1-octet\
    \ digest type code, and the digest value (32\n   octets for SHA-256).\n      \
    \ < identifier-type > < digest-type > < digest >\n   The input to the digest hash\
    \ function is defined to be:\n       digest = SHA-256(< identifier > < FQDN >)\n\
    \   The FQDN is represented in the buffer in the canonical wire format as\n  \
    \ described in [9], Section 6.2.  The identifier type code and the\n   identifier\
    \ are related as specified in Section 3.3: the identifier\n   type code describes\
    \ the source of the identifier.\n   A DHCPv4 updater uses the 0x0002 type code\
    \ if a Client Identifier\n   option is present in the DHCPv4 messages and it is\
    \ encoded as\n   specified in [6].  Otherwise, the updater uses 0x0001 if a Client\n\
    \   Identifier option is present, and 0x0000 if not.\n   A DHCPv6 updater always\
    \ uses the 0x0002 type code.\n"
- title: 3.5.1.  Using the Client's DUID
  contents:
  - "3.5.1.  Using the Client's DUID\n   When the updater is using the Client's DUID\
    \ (either from a DHCPv6\n   Client Identifier option or from a portion of the\
    \ DHCPv4 Client\n   Identifier option encoded as specified in [6]), the first\
    \ two octets\n   of the DHCID RR MUST be 0x0002, in network byte order.  The third\n\
    \   octet is the digest type code (1 for SHA-256).  The rest of the DHCID\n  \
    \ RR MUST contain the results of computing the SHA-256 hash across the\n   octets\
    \ of the DUID followed by the FQDN.\n"
- title: 3.5.2.  Using the Client Identifier Option
  contents:
  - "3.5.2.  Using the Client Identifier Option\n   When the updater is using the\
    \ DHCPv4 Client Identifier option sent by\n   the client in its DHCPREQUEST message,\
    \ the first two octets of the\n   DHCID RR MUST be 0x0001, in network byte order.\
    \  The third octet is\n   the digest type code (1 for SHA-256).  The rest of the\
    \ DHCID RR MUST\n   contain the results of computing the SHA-256 hash across the\
    \ data\n   octets (i.e., the Type and Client-Identifier fields) of the option,\n\
    \   followed by the FQDN.\n"
- title: 3.5.3.  Using the Client's htype and chaddr
  contents:
  - "3.5.3.  Using the Client's htype and chaddr\n   When the updater is using the\
    \ client's link-layer address as the\n   identifier, the first two octets of the\
    \ DHCID RDATA MUST be zero.\n   The third octet is the digest type code (1 for\
    \ SHA-256).  To generate\n   the rest of the resource record, the updater computes\
    \ a one-way hash\n   using the SHA-256 algorithm across a buffer containing the\
    \ client's\n   network hardware type, link-layer address, and the FQDN data.\n\
    \   Specifically, the first octet of the buffer contains the network\n   hardware\
    \ type as it appeared in the DHCP 'htype' field of the\n   client's DHCPREQUEST\
    \ message.  All of the significant octets of the\n   'chaddr' field in the client's\
    \ DHCPREQUEST message follow, in the\n   same order in which the octets appear\
    \ in the DHCPREQUEST message.\n   The number of significant octets in the 'chaddr'\
    \ field is specified\n   in the 'hlen' field of the DHCPREQUEST message.  The\
    \ FQDN data, as\n   specified above, follows.\n"
- title: 3.6.  Examples
  contents:
  - '3.6.  Examples

    '
- title: 3.6.1.  Example 1
  contents:
  - "3.6.1.  Example 1\n   A DHCP server allocates the IPv6 address 2001:DB8::1234:5678\
    \ to a\n   client that included the DHCPv6 client-identifier option data 00:01:\n\
    \   00:06:41:2d:f1:66:01:02:03:04:05:06 in its DHCPv6 request.  The\n   server\
    \ updates the name \"chi6.example.com\" on the client's behalf and\n   uses the\
    \ DHCP client identifier option data as input in forming a\n   DHCID RR.  The\
    \ DHCID RDATA is formed by setting the two type octets\n   to the value 0x0002,\
    \ the 1-octet digest type to 1 for SHA-256, and\n   performing a SHA-256 hash\
    \ computation across a buffer containing the\n   14 octets from the client-id\
    \ option and the FQDN (represented as\n   specified in Section 3.5).\n     chi6.example.com.\
    \     AAAA    2001:DB8::1234:5678\n     chi6.example.com.     DHCID   ( AAIBY2/AuCccgoJbsaxcQc9TUapptP69l\n\
    \                                     OjxfNuVAA2kjEA= )\n   If the DHCID RR type\
    \ is not supported, the RDATA would be encoded\n   [13] as:\n     \\# 35 ( 000201636fc0b8271c82825bb1ac5c41cf5351aa69b4febd94e8f17cd\n\
    \             b95000da48c40 )\n"
- title: 3.6.2.  Example 2
  contents:
  - "3.6.2.  Example 2\n   A DHCP server allocates the IPv4 address 192.0.2.2 to a\
    \ client that\n   included the DHCP client-identifier option data 01:07:08:09:0a:0b:0c\n\
    \   in its DHCP request.  The server updates the name \"chi.example.com\"\n  \
    \ on the client's behalf and uses the DHCP client identifier option\n   data as\
    \ input in forming a DHCID RR.  The DHCID RDATA is formed by\n   setting the two\
    \ type octets to the value 0x0001, the 1-octet digest\n   type to 1 for SHA-256,\
    \ and performing a SHA-256 hash computation\n   across a buffer containing the\
    \ seven octets from the client-id option\n   and the FQDN (represented as specified\
    \ in Section 3.5).\n     chi.example.com.      A       192.0.2.2\n     chi.example.com.\
    \      DHCID   ( AAEBOSD+XR3Os/0LozeXVqcNc7FwCfQdW\n                         \
    \            L3b/NaiUDlW2No= )\n   If the DHCID RR type is not supported, the\
    \ RDATA would be encoded\n   [13] as:\n     \\# 35 ( 0001013920fe5d1dceb3fd0ba3379756a70d73b17009f41d58bddbfcd\n\
    \             6a2503956d8da )\n"
- title: 3.6.3.  Example 3
  contents:
  - "3.6.3.  Example 3\n   A DHCP server allocating the IPv4 address 192.0.2.3 to\
    \ a client with\n   the Ethernet MAC address 01:02:03:04:05:06 using domain name\n\
    \   \"client.example.com\" uses the client's link-layer address to identify\n\
    \   the client.  The DHCID RDATA is composed by setting the two type\n   octets\
    \ to zero, the 1-octet digest type to 1 for SHA-256, and\n   performing an SHA-256\
    \ hash computation across a buffer containing the\n   1-octet 'htype' value for\
    \ Ethernet, 0x01, followed by the six octets\n   of the Ethernet MAC address,\
    \ and the domain name (represented as\n   specified in Section 3.5).\n     client.example.com.\
    \   A       192.0.2.3\n     client.example.com.   DHCID   ( AAABxLmlskllE0MVjd57zHcWmEH3pCQ6V\n\
    \                                     ytcKD//7es/deY= )\n   If the DHCID RR type\
    \ is not supported, the RDATA would be encoded\n   [13] as:\n     \\# 35 ( 000001c4b9a5b249651343158dde7bcc77169841f7a4243a572b5c283\n\
    \             fffedeb3f75e6 )\n"
- title: 4.  Use of the DHCID RR
  contents:
  - "4.  Use of the DHCID RR\n   This RR MUST NOT be used for any purpose other than\
    \ that detailed in\n   [1].  Although this RR contains data that is opaque to\
    \ DNS servers,\n   the data must be consistent across all entities that update\
    \ and\n   interpret this record.  Therefore, new data formats may only be\n  \
    \ defined through actions of the DHC Working Group, as a result of\n   revising\
    \ [1].\n"
- title: 5.  Updater Behavior
  contents:
  - "5.  Updater Behavior\n   The data in the DHCID RR allows updaters to determine\
    \ whether more\n   than one DHCP client desires to use a particular FQDN.  This\
    \ allows\n   site administrators to establish policy about DNS updates.  The DHCID\n\
    \   RR does not establish any policy itself.\n   Updaters use data from a DHCP\
    \ client's request and the domain name\n   that the client desires to use to compute\
    \ a client identity hash, and\n   then compare that hash to the data in any DHCID\
    \ RRs on the name that\n   they wish to associate with the client's IP address.\
    \  If an updater\n   discovers DHCID RRs whose RDATA does not match the client\
    \ identity\n   that they have computed, the updater SHOULD conclude that a different\n\
    \   client is currently associated with the name in question.  The\n   updater\
    \ SHOULD then proceed according to the site's administrative\n   policy.  That\
    \ policy might dictate that a different name be selected,\n   or it might permit\
    \ the updater to continue.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   The DHCID record as such does not introduce any\
    \ new security problems\n   into the DNS.  In order to obscure the client's identity\
    \ information,\n   a one-way hash is used.  Further, in order to make it difficult\
    \ to\n   'track' a client by examining the names associated with a particular\n\
    \   hash value, the FQDN is included in the hash computation.  Thus, the\n   RDATA\
    \ is dependent on both the DHCP client identification data and on\n   each FQDN\
    \ associated with the client.\n   However, it should be noted that an attacker\
    \ that has some knowledge,\n   such as of MAC addresses commonly used in DHCP\
    \ client identification\n   data, may be able to discover the client's DHCP identify\
    \ by using a\n   brute-force attack.  Even without any additional knowledge, the\n\
    \   number of unknown bits used in computing the hash is typically only\n   48\
    \ to 80.\n   Administrators should be wary of permitting unsecured DNS updates\
    \ to\n   zones, whether or not they are exposed to the global Internet.  Both\n\
    \   DHCP clients and servers SHOULD use some form of update\n   authentication\
    \ (e.g., [12]) when performing DNS updates.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   IANA has allocated a DNS RR type number for the DHCID\
    \ record type.\n   This specification defines a new number-space for the 2-octet\n\
    \   identifier type codes associated with the DHCID RR.  IANA has\n   established\
    \ a registry of the values for this number-space.  Three\n   initial values are\
    \ assigned in Section 3.3, and the value 0xFFFF is\n   reserved for future use.\
    \  New DHCID RR identifier type codes are\n   assigned through Standards Action,\
    \ as defined in [5].\n   This specification defines a new number-space for the\
    \ 1-octet digest\n   type codes associated with the DHCID RR.  IANA has established\
    \ a\n   registry of the values for this number-space.  Two initial values are\n\
    \   assigned in Section 3.4.  New DHCID RR digest type codes are assigned\n  \
    \ through Standards Action, as defined in [5].\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   Many thanks to Harald Alvestrand, Ralph Droms, Olafur\
    \ Gudmundsson,\n   Sam Hartman, Josh Littlefield, Pekka Savola, and especially\
    \ Bernie\n   Volz for their review and suggestions.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [1]  Stapp, M. and B. Volz, \"Resolution of Fully\
    \ Qualified Domain\n        Name (FQDN) Conflicts among Dynamic Host Configuration\
    \ Protocol\n        (DHCP) Clients\", RFC 4703, October 2006.\n   [2]  Bradner,\
    \ S., \"Key words for use in RFCs to Indicate Requirement\n        Levels\", BCP\
    \ 14, RFC 2119, March 1997.\n   [3]  Mockapetris, P., \"Domain names - concepts\
    \ and facilities\",\n        STD 13, RFC 1034, November 1987.\n   [4]  Mockapetris,\
    \ P., \"Domain names - implementation and\n        specification\", STD 13, RFC\
    \ 1035, November 1987.\n   [5]  Narten, T. and H. Alvestrand, \"Guidelines for\
    \ Writing an IANA\n        Considerations Section in RFCs\", BCP 26, RFC 2434,\
    \ October 1998.\n   [6]  Lemon, T. and B. Sommerfeld, \"Node-specific Client Identifiers\n\
    \        for Dynamic Host Configuration Protocol Version Four (DHCPv4)\",\n  \
    \      RFC 4361, February 2006.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [7]   Droms, R., \"Dynamic Host Configuration\
    \ Protocol\", RFC 2131,\n         March 1997.\n   [8]   Josefsson, S., \"The Base16,\
    \ Base32, and Base64 Data Encodings\",\n         RFC 3548, July 2003.\n   [9]\
    \   Arends, R., Austein, R., Larson, M., Massey, D., and S. Rose,\n         \"\
    Resource Records for the DNS Security Extensions\", RFC 4034,\n         March\
    \ 2005.\n   [10]  Alexander, S. and R. Droms, \"DHCP Options and BOOTP Vendor\n\
    \         Extensions\", RFC 2132, March 1997.\n   [11]  Droms, R., Bound, J.,\
    \ Volz, B., Lemon, T., Perkins, C., and M.\n         Carney, \"Dynamic Host Configuration\
    \ Protocol for IPv6\n         (DHCPv6)\", RFC 3315, July 2003.\n   [12]  Vixie,\
    \ P., Gudmundsson, O., Eastlake, D., and B. Wellington,\n         \"Secret Key\
    \ Transaction Authentication for DNS (TSIG)\",\n         RFC 2845, May 2000.\n\
    \   [13]  Gustafsson, A., \"Handling of Unknown DNS Resource Record (RR)\n   \
    \      Types\", RFC 3597, September 2003.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Mark Stapp\n   Cisco Systems, Inc.\n   1414 Massachusetts\
    \ Ave.\n   Boxborough, MA  01719\n   USA\n   Phone: 978.936.1535\n   EMail: mjs@cisco.com\n\
    \   Ted Lemon\n   Nominum, Inc.\n   950 Charter St.\n   Redwood City, CA  94063\n\
    \   USA\n   EMail: mellon@nominum.com\n   Andreas Gustafsson\n   Araneus Information\
    \ Systems Oy\n   Ulappakatu 1\n   02320 Espoo\n   Finland\n   EMail: gson@araneus.fi\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
