- title: __initial_text__
  contents:
  - "              Lightweight Directory Access Protocol (v3):\n                 Extension\
    \ for Transport Layer Security\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines the \"Start Transport Layer Security (TLS)\n\
    \   Operation\" for LDAP [LDAPv3, TLS]. This operation provides for TLS\n   establishment\
    \ in an LDAP association and is defined in terms of an\n   LDAP extended request.\n"
- title: 1.  Conventions Used in this Document
  contents:
  - "1.  Conventions Used in this Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    ,  \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [ReqsKeywords].\n"
- title: 2.  The Start TLS Request
  contents:
  - "2.  The Start TLS Request\n   This section describes the Start TLS extended request\
    \ and extended\n   response themselves: how to form the request, the form of the\n\
    \   response, and enumerates the various result codes the client MUST be\n   prepared\
    \ to handle.\n   The section following this one then describes how to sequence\
    \ an\n   overall Start TLS Operation.\n"
- title: 2.1.  Requesting TLS Establishment
  contents:
  - "2.1.  Requesting TLS Establishment\n   A client may perform a Start TLS operation\
    \ by transmitting an LDAP\n   PDU containing an ExtendedRequest [LDAPv3] specifying\
    \ the OID for the\n   Start TLS operation:\n     1.3.6.1.4.1.1466.20037\n   An\
    \ LDAP ExtendedRequest is defined as follows:\n     ExtendedRequest ::= [APPLICATION\
    \ 23] SEQUENCE {\n             requestName             [0] LDAPOID,\n        \
    \     requestValue            [1] OCTET STRING OPTIONAL }\n   A Start TLS extended\
    \ request is formed by setting the requestName\n   field to the OID string given\
    \ above.  The requestValue field is\n   absent.  The client MUST NOT send any\
    \ PDUs on this connection\n   following this request until it receives a Start\
    \ TLS extended\n   response.\n   When a Start TLS extended request is made, the\
    \ server MUST return an\n   LDAP PDU containing a Start TLS extended response.\
    \  An LDAP\n   ExtendedResponse is defined as follows:\n     ExtendedResponse\
    \ ::= [APPLICATION 24] SEQUENCE {\n             COMPONENTS OF LDAPResult,\n  \
    \           responseName     [10] LDAPOID OPTIONAL,\n             response   \
    \      [11] OCTET STRING OPTIONAL }\n   A Start TLS extended response MUST contain\
    \ a responseName field which\n   MUST be set to the same string as that in the\
    \ responseName field\n   present in the Start TLS extended request. The response\
    \ field is\n   absent. The server MUST set the resultCode field to either success\
    \ or\n   one of the other values outlined in section 2.3.\n"
- title: 2.2.  "Success" Response
  contents:
  - "2.2.  \"Success\" Response\n   If the ExtendedResponse contains a resultCode\
    \ of success, this\n   indicates that the server is willing and able to negotiate\
    \ TLS. Refer\n   to section 3, below, for details.\n"
- title: 2.3.  Response other than "success"
  contents:
  - "2.3.  Response other than \"success\"\n   If the ExtendedResponse contains a\
    \ resultCode other than success,\n   this indicates that the server is unwilling\
    \ or unable to negotiate\n   TLS.\n   If the Start TLS extended request was not\
    \ successful, the resultCode\n   will be one of:\n   operationsError  (operations\
    \ sequencing incorrect; e.g. TLS already\n                    established)\n \
    \  protocolError    (TLS not supported or incorrect PDU structure)\n   referral\
    \         (this server doesn't do TLS, try this one)\n   unavailable      (e.g.\
    \ some major problem with TLS, or server is\n                    shutting down)\n\
    \   The server MUST return operationsError if the client violates any of\n   the\
    \ Start TLS extended operation sequencing requirements described in\n   section\
    \ 3, below.\n   If the server does not support TLS (whether by design or by current\n\
    \   configuration), it MUST set the resultCode to protocolError (see\n   section\
    \ 4.1.1 of [LDAPv3]), or to referral. The server MUST include\n   an actual referral\
    \ value in the LDAP Result if it returns a\n   resultCode of referral. The client's\
    \ current session is unaffected if\n   the server does not support TLS. The client\
    \ MAY proceed with any LDAP\n   operation, or it MAY close the connection.\n \
    \  The server MUST return unavailable if it supports TLS but cannot\n   establish\
    \ a TLS connection for some reason, e.g. the certificate\n   server not responding,\
    \ it cannot contact its TLS implementation, or\n   if the server is in process\
    \ of shutting down. The client MAY retry\n   the StartTLS operation, or it MAY\
    \ proceed with any other LDAP\n   operation, or it MAY close the connection.\n"
- title: 3.  Sequencing of the Start TLS Operation
  contents:
  - "3.  Sequencing of the Start TLS Operation\n   This section describes the overall\
    \ procedures clients and servers\n   MUST follow for TLS establishment. These\
    \ procedures take into\n   consideration various aspects of the overall security\
    \ of the LDAP\n   association including discovery of resultant security level\
    \ and\n   assertion of the client's authorization identity.\n   Note that the\
    \ precise effects, on a client's authorization identity,\n   of establishing TLS\
    \ on an LDAP association are described in detail in\n   section 5.\n"
- title: 3.1.  Requesting to Start TLS on an LDAP Association
  contents:
  - "3.1.  Requesting to Start TLS on an LDAP Association\n   The client MAY send\
    \ the Start TLS extended request at any time after\n   establishing an LDAP association,\
    \ except that in the following cases\n   the client MUST NOT send a Start TLS\
    \ extended request:\n     - if TLS is currently established on the connection,\
    \ or\n     - during a multi-stage SASL negotiation, or\n     - if there are any\
    \ LDAP operations outstanding on the connection.\n   The result of violating any\
    \ of these requirements is a resultCode of\n   operationsError, as described above\
    \ in section 2.3.\n   The client MAY have already performed a Bind operation when\
    \ it sends\n   a Start TLS request, or the client might have not yet bound.\n\
    \   If the client did not establish a TLS connection before sending any\n   other\
    \ requests, and the server requires the client to establish a TLS\n   connection\
    \ before performing a particular request, the server MUST\n   reject that request\
    \ with a confidentialityRequired or\n   strongAuthRequired result. The client\
    \ MAY send a Start TLS extended\n   request, or it MAY choose to close the connection.\n"
- title: 3.2.  Starting TLS
  contents:
  - "3.2.  Starting TLS\n   The server will return an extended response with the resultCode\
    \ of\n   success if it is willing and able to negotiate TLS.  It will return\n\
    \   other resultCodes, documented above, if it is unable.\n   In the successful\
    \ case, the client, which has ceased to transfer LDAP\n   requests on the connection,\
    \ MUST either begin a TLS negotiation or\n   close the connection. The client\
    \ will send PDUs in the TLS Record\n   Protocol directly over the underlying transport\
    \ connection to the\n   server to initiate TLS negotiation [TLS].\n"
- title: 3.3.  TLS Version Negotiation
  contents:
  - "3.3.  TLS Version Negotiation\n   Negotiating the version of TLS or SSL to be\
    \ used is a part of the TLS\n   Handshake Protocol, as documented in [TLS]. Please\
    \ refer to that\n   document for details.\n"
- title: 3.4.  Discovery of Resultant Security Level
  contents:
  - "3.4.  Discovery of Resultant Security Level\n   After a TLS connection is established\
    \ on an LDAP association, both\n   parties MUST individually decide whether or\
    \ not to continue based on\n   the privacy level achieved. Ascertaining the TLS\
    \ connection's privacy\n   level is implementation dependent, and accomplished\
    \ by communicating\n   with one's respective local TLS implementation.\n   If\
    \ the client or server decides that the level of authentication or\n   privacy\
    \ is not high enough for it to continue, it SHOULD gracefully\n   close the TLS\
    \ connection immediately after the TLS negotiation has\n   completed (see sections\
    \ 4.1 and 5.2, below).\n   The client MAY attempt to Start TLS again, or MAY send\
    \ an unbind\n   request, or send any other LDAP request.\n"
- title: 3.5.  Assertion of Client's Authorization Identity
  contents:
  - "3.5.  Assertion of Client's Authorization Identity\n   The client MAY, upon receipt\
    \ of a Start TLS extended response\n   indicating success, assert that a specific\
    \ authorization identity be\n   utilized in determining the client's authorization\
    \ status. The client\n   accomplishes this via an LDAP Bind request specifying\
    \ a SASL\n   mechanism of \"EXTERNAL\" [SASL]. See section 5.1.2, below.\n"
- title: 3.6.  Server Identity Check
  contents:
  - "3.6.  Server Identity Check\n   The client MUST check its understanding of the\
    \ server's hostname\n   against the server's identity as presented in the server's\n\
    \   Certificate message, in order to prevent man-in-the-middle attacks.\n   Matching\
    \ is performed according to these rules:\n   - The client MUST use the server\
    \ hostname it used to open the LDAP\n     connection as the value to compare against\
    \ the server name as\n     expressed in the server's certificate.  The client\
    \ MUST NOT use the\n     server's canonical DNS name or any other derived form\
    \ of name.\n   - If a subjectAltName extension of type dNSName is present in the\n\
    \     certificate, it SHOULD be used as the source of the server's\n     identity.\n\
    \   - Matching is case-insensitive.\n   - The \"*\" wildcard character is allowed.\
    \  If present, it applies only\n     to the left-most name component.\n   E.g.\
    \ *.bar.com would match a.bar.com, b.bar.com, etc. but not\n   bar.com.  If more\
    \ than one identity of a given type is present in the\n   certificate (e.g. more\
    \ than one dNSName name), a match in any one of\n   the set is considered acceptable.\n\
    \   If the hostname does not match the dNSName-based identity in the\n   certificate\
    \ per the above check, user-oriented clients SHOULD either\n   notify the user\
    \ (clients MAY give the user the opportunity to\n   continue with the connection\
    \ in any case) or terminate the connection\n   and indicate that the server's\
    \ identity is suspect. Automated clients\n   SHOULD close the connection, returning\
    \ and/or logging an error\n   indicating that the server's identity is suspect.\n\
    \   Beyond the server identity checks described in this section, clients\n   SHOULD\
    \ be prepared to do further checking to ensure that the server\n   is authorized\
    \ to provide the service it is observed to provide. The\n   client MAY need to\
    \ make use of local policy information.\n"
- title: 3.7.  Refresh of Server Capabilities Information
  contents:
  - "3.7.  Refresh of Server Capabilities Information\n   The client MUST refresh\
    \ any cached server capabilities information\n   (e.g. from the server's root\
    \ DSE; see section 3.4 of [LDAPv3]) upon\n   TLS session establishment. This is\
    \ necessary to protect against\n   active-intermediary attacks which may have\
    \ altered any server\n   capabilities information retrieved prior to TLS establishment.\
    \ The\n   server MAY advertise different capabilities after TLS establishment.\n"
- title: 4.  Closing a TLS Connection
  contents:
  - '4.  Closing a TLS Connection

    '
- title: 4.1.  Graceful Closure
  contents:
  - "4.1.  Graceful Closure\n   Either the client or server MAY terminate the TLS\
    \ connection on an\n   LDAP association by sending a TLS closure alert. This will\
    \ leave the\n   LDAP association intact.\n   Before closing a TLS connection,\
    \ the client MUST either wait for any\n   outstanding LDAP operations to complete,\
    \ or explicitly abandon them\n   [LDAPv3].\n   After the initiator of a close\
    \ has sent a closure alert, it MUST\n   discard any TLS messages until it has\
    \ received an alert from the\n   other party.  It will cease to send TLS Record\
    \ Protocol PDUs, and\n   following the receipt of the alert, MAY send and receive\
    \ LDAP PDUs.\n   The other party, if it receives a closure alert, MUST immediately\n\
    \   transmit a TLS closure alert.  It will subsequently cease to send TLS\n  \
    \ Record Protocol PDUs, and MAY send and receive LDAP PDUs.\n"
- title: 4.2.  Abrupt Closure
  contents:
  - "4.2.  Abrupt Closure\n   Either the client or server MAY abruptly close the entire\
    \ LDAP\n   association and any TLS connection established on it by dropping the\n\
    \   underlying TCP connection. A server MAY beforehand send the client a\n   Notice\
    \ of Disconnection [LDAPv3] in this case.\n"
- title: 5.  Effects of TLS on a Client's Authorization Identity
  contents:
  - "5.  Effects of TLS on a Client's Authorization Identity\n   This section describes\
    \ the effects on a client's authorization\n   identity brought about by establishing\
    \ TLS on an LDAP association.\n   The default effects are described first, and\
    \ next the facilities for\n   client assertion of authorization identity are discussed\
    \ including\n   error conditions. Lastly, the effects of closing the TLS connection\n\
    \   are described.\n   Authorization identities and related concepts are defined\
    \ in\n   [AuthMeth].\n"
- title: 5.1.  TLS Connection Establishment Effects
  contents:
  - '5.1.  TLS Connection Establishment Effects

    '
- title: 5.1.1.  Default Effects
  contents:
  - "5.1.1.  Default Effects\n   Upon establishment of the TLS connection onto the\
    \ LDAP association,\n   any previously established authentication and authorization\n\
    \   identities MUST remain in force, including anonymous state. This\n   holds\
    \ even in the case where the server requests client\n   authentication via TLS\
    \ -- e.g. requests the client to supply its\n   certificate during TLS negotiation\
    \ (see [TLS]).\n"
- title: 5.1.2.  Client Assertion of Authorization Identity
  contents:
  - "5.1.2.  Client Assertion of Authorization Identity\n   A client MAY either implicitly\
    \ request that its LDAP authorization\n   identity be derived from its authenticated\
    \ TLS credentials or it MAY\n   explicitly provide an authorization identity and\
    \ assert that it be\n   used in combination with its authenticated TLS credentials.\
    \ The\n   former is known as an implicit assertion, and the latter as an\n   explicit\
    \ assertion.\n"
- title: 5.1.2.1.  Implicit Assertion
  contents:
  - "5.1.2.1.  Implicit Assertion\n   An implicit authorization identity assertion\
    \ is accomplished after\n   TLS establishment by invoking a Bind request of the\
    \ SASL form using\n   the \"EXTERNAL\" mechanism name [SASL, LDAPv3] that SHALL\
    \ NOT include\n   the optional credentials octet string (found within the\n  \
    \ SaslCredentials sequence in the Bind Request). The server will derive\n   the\
    \ client's authorization identity from the authentication identity\n   supplied\
    \ in the client's TLS credentials (typically a public key\n   certificate) according\
    \ to local policy. The underlying mechanics of\n   how this is accomplished are\
    \ implementation specific.\n"
- title: 5.1.2.2.  Explicit Assertion
  contents:
  - "5.1.2.2.  Explicit Assertion\n   An explicit authorization identity assertion\
    \ is accomplished after\n   TLS establishment by invoking a Bind request of the\
    \ SASL form using\n   the \"EXTERNAL\" mechanism name [SASL, LDAPv3] that SHALL\
    \ include the\n   credentials octet string. This string MUST be constructed as\n\
    \   documented in section 9 of [AuthMeth].\n"
- title: 5.1.2.3.  Error Conditions
  contents:
  - "5.1.2.3.  Error Conditions\n   For either form of assertion, the server MUST\
    \ verify that the\n   client's authentication identity as supplied in its TLS\
    \ credentials\n   is permitted to be mapped to the asserted authorization identity.\
    \ The\n   server MUST reject the Bind operation with an invalidCredentials\n \
    \  resultCode in the Bind response if the client is not so authorized.\n   Additionally,\
    \ with either form of assertion, if a TLS session has not\n   been established\
    \ between the client and server prior to making the\n   SASL EXTERNAL Bind request\
    \ and there is no other external source of\n   authentication credentials (e.g.\
    \  IP-level security [IPSEC]), or if,\n   during the process of establishing the\
    \ TLS session, the server did\n   not request the client's authentication credentials,\
    \ the SASL\n   EXTERNAL bind MUST fail with a result code of\n   inappropriateAuthentication.\n\
    \   After the above Bind operation failures, any client authentication\n   and\
    \ authorization state of the LDAP association is lost, so the LDAP\n   association\
    \ is in an anonymous state after the failure.  TLS\n   connection state is unaffected,\
    \ though a server MAY end the TLS\n   connection, via a TLS close_notify message,\
    \ based on the Bind failure\n   (as it MAY at any time).\n"
- title: 5.2.  TLS Connection Closure Effects
  contents:
  - "5.2.  TLS Connection Closure Effects\n   Closure of the TLS connection MUST cause\
    \ the LDAP association to move\n   to an anonymous authentication and authorization\
    \ state regardless of\n   the state established over TLS and regardless of the\
    \ authentication\n   and authorization state prior to TLS connection establishment.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   The goals of using the TLS protocol with LDAP\
    \ are to ensure\n   connection confidentiality and integrity, and to optionally\
    \ provide\n   for authentication. TLS expressly provides these capabilities, as\n\
    \   described in [TLS].\n   All security gained via use of the Start TLS operation\
    \ is gained by\n   the use of TLS itself. The Start TLS operation, on its own,\
    \ does not\n   provide any additional security.\n   The use of TLS does not provide\
    \ or ensure for confidentiality and/or\n   non-repudiation of the data housed\
    \ by an LDAP-based directory server.\n   Nor does it secure the data from inspection\
    \ by the server\n   administrators.  Once established, TLS only provides for and\
    \ ensures\n   confidentiality and integrity of the operations and data in transit\n\
    \   over the LDAP association, and only if the implementations on the\n   client\
    \ and server support and negotiate it.\n   The level of security provided though\
    \ the use of TLS depends directly\n   on both the quality of the TLS implementation\
    \ used and the style of\n   usage of that implementation. Additionally, an active-intermediary\n\
    \   attacker can remove the Start TLS extended operation from the\n   supportedExtension\
    \ attribute of the root DSE. Therefore, both parties\n   SHOULD independently\
    \ ascertain and consent to the security level\n   achieved once TLS is established\
    \ and before beginning use of the TLS\n   connection. For example, the security\
    \ level of the TLS connection\n   might have been negotiated down to plaintext.\n\
    \   Clients SHOULD either warn the user when the security level achieved\n   does\
    \ not provide confidentiality and/or integrity protection, or be\n   configurable\
    \ to refuse to proceed without an acceptable level of\n   security.\n   Client\
    \ and server implementors SHOULD take measures to ensure proper\n   protection\
    \ of credentials and other confidential data where such\n   measures are not otherwise\
    \ provided by the TLS implementation.\n   Server implementors SHOULD allow for\
    \ server administrators to elect\n   whether and when connection confidentiality\
    \ and/or integrity is\n   required, as well as elect whether and when client authentication\
    \ via\n   TLS is required.\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   The authors thank Tim Howes, Paul Hoffman, John Kristian,\
    \ Shirish\n   Rai, Jonathan Trostle, Harald Alvestrand, and Marcus Leech for their\n\
    \   contributions to this document.\n"
- title: 8.  References
  contents:
  - "8.  References\n   [AuthMeth]     Wahl, M., Alvestrand, H., Hodges, J. and R.\
    \ Morgan,\n                  \"Authentication Methods for LDAP\", RFC 2829, May\
    \ 2000.\n   [IPSEC]        Kent, S. and R. Atkinson, \"Security Architecture for\n\
    \                  the Internet Protocol\", RFC 2401, November 1998.\n   [LDAPv3]\
    \       Wahl, M., Kille S. and T. Howes, \"Lightweight\n                  Directory\
    \ Access Protocol (v3)\", RFC 2251, December\n                  1997.\n   [ReqsKeywords]\
    \ Bradner, S., \"Key Words for use in RFCs to Indicate\n                  Requirement\
    \ Levels\", BCP 14, RFC 2119, March 1997.\n   [SASL]         Myers, J., \"Simple\
    \ Authentication and Security Layer\n                  (SASL)\", RFC 2222, October\
    \ 1997.\n   [TLS]          Dierks, T. and C. Allen. \"The TLS Protocol Version\n\
    \                  1.0\", RFC 2246, January 1999.\n"
- title: 9.  Authors' Addresses
  contents:
  - "9.  Authors' Addresses\n   Jeff Hodges\n   Oblix, Inc.\n   18922 Forge Drive\n\
    \   Cupertino, CA 95014\n   USA\n   Phone: +1-408-861-6656\n   EMail: JHodges@oblix.com\n\
    \   RL \"Bob\" Morgan\n   Computing and Communications\n   University of Washington\n\
    \   Seattle, WA\n   USA\n   Phone: +1-206-221-3307\n   EMail: rlmorgan@washington.edu\n\
    \   Mark Wahl\n   Sun Microsystems, Inc.\n   8911 Capital of Texas Hwy #4140\n\
    \   Austin TX 78759\n   USA\n   EMail: M.Wahl@innosoft.com\n"
- title: 10.  Intellectual Property Rights Notices
  contents:
  - "10.  Intellectual Property Rights Notices\n   The IETF takes no position regarding\
    \ the validity or scope of any\n   intellectual property or other rights that\
    \ might be claimed to\n   pertain to the implementation or use of the technology\
    \ described in\n   this document or the extent to which any license under such\
    \ rights\n   might or might not be available; neither does it represent that it\n\
    \   has made any effort to identify any such rights.  Information on the\n   IETF's\
    \ procedures with respect to rights in standards-track and\n   standards-related\
    \ documentation can be found in BCP-11.  Copies of\n   claims of rights made available\
    \ for publication and any assurances of\n   licenses to be made available, or\
    \ the result of an attempt made to\n   obtain a general license or permission\
    \ for the use of such\n   proprietary rights by implementors or users of this\
    \ specification can\n   be obtained from the IETF Secretariat.\n   The IETF invites\
    \ any interested party to bring to its attention any\n   copyrights, patents or\
    \ patent applications, or other proprietary\n   rights which may cover technology\
    \ that may be required to practice\n   this standard.  Please address the information\
    \ to the IETF Executive\n   Director.\n"
- title: 11.  Full Copyright Statement
  contents:
  - "11.  Full Copyright Statement\n   Copyright (C) The Internet Society (2000).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
