- title: __initial_text__
  contents:
  - "                     Definitions of Managed Objects\n                       \
    \ for Frame Relay Service\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo defines an extension to the Management Information Base\n\
    \   (MIB) for use with network management protocols in TCP/IP-based\n   internets.\
    \  In particular, it defines objects for managing the Frame\n   Relay Service.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. The SNMPv2 Network Management Framework ...............\
    \    2\n   2. Object Definitions ....................................    2\n \
    \  3. Overview ..............................................    2\n   3.1 Scope\
    \ of MIB .........................................    3\n   3.2 Frame Relay Service\
    \ MIB Terminology ..................    5\n   3.3 Apply MIB II to a Frame Relay\
    \ Service ................    7\n   4. Object Definitions ....................................\
    \   12\n   4.1 The Frame Relay Service Logical Port Group ...........   12\n \
    \  4.2 The Frame Relay Management VC Signaling Group ........   15\n   4.3 The\
    \ PVC End-Point Group ..............................   22\n   4.4 Frame Relay\
    \ PVC Connection Group .....................   30\n   4.5 Frame Relay Accounting\
    \ Groups ........................   37\n   5. Frame Relay Network Service TRAPS\
    \ .....................   40\n   6. Conformance Information ...............................\
    \   43\n   7. Acknowledgments .......................................   45\n \
    \  8. References ............................................   45\n   9. Security\
    \ Considerations ...............................   46\n   10. Author's Address\
    \ .....................................   46\n"
- title: 1.  The SNMPv2 Network Management Framework
  contents:
  - "1.  The SNMPv2 Network Management Framework\n   The SNMPv2 Network Management\
    \ Framework consists of four major\n   components.  They are:\n      o    RFC\
    \ 1442 which defines the SMI, the mechanisms used for\n           describing and\
    \ naming objects for the purpose of\n           management.\n      o    STD 17,\
    \ RFC 1213 defines MIB-II, the core set of managed\n           objects for the\
    \ Internet suite of protocols.\n      o    RFC 1445 which defines the administrative\
    \ and other\n           architectural aspects of the framework.\n      o    RFC\
    \ 1448 which defines the protocol used for network\n           access to managed\
    \ objects.\n   The Framework permits new objects to be defined for the purpose\
    \ of\n   experimentation and evaluation.\n"
- title: 2.  Object Definitions
  contents:
  - "2.  Object Definitions\n   Managed objects are accessed via a virtual information\
    \ store, termed\n   the Management Information Base or MIB.  Objects in the MIB\
    \ are\n   defined using the subset of Abstract Syntax Notation One (ASN.1)\n \
    \  defined in the SMI.  In particular, each object object type is named\n   by\
    \ an OBJECT IDENTIFIER, an administratively assigned name.  The\n   object type\
    \ together with an object instance serves to uniquely\n   identify a specific\
    \ instantiation of the object.  For human\n   convenience, we often use a textual\
    \ string, termed the descriptor, to\n   refer to the object type.\n"
- title: 3.  Overview
  contents:
  - "3.  Overview\n   These objects are used when the particular media being used\
    \ to manage\n   is Frame Relay Service.  At present, this applies to these values\
    \ of\n   the ifType variable in the Internet-standard MIB:\n          frameRelayService\
    \ (44)\n   This section provides an overview and background of how to use this\n\
    \   MIB and other potential MIBs when managing a Frame Relay Service.\n   Figure\
    \ 1 shows the MIB stack that could be followed for managing a\n   Frame Relay\
    \ Service.  This is only an example and not meant to be\n   inclusive.\n     \
    \           ____________________________________________________\n           \
    \     |              |              |       |            |\n                |\
    \              |              | SIP   |  RFC1490   |\n                |      \
    \        | X.25 MIB     | Relay | (no applic.|\n                |            \
    \  | for IW/Encap.| MIB   |  MIB)      |\n                |              |   \
    \           |       |            |\n                |    MIB II    |-----------------------------------|\n\
    \                |              |                                   |\n      \
    \          |   ifTable    |      Frame Relay Service MIB      |\n            \
    \    |  ifXTable    |                                   |\n                | ifStackTable\
    \ |___________________________________|\n                |              |    \
    \                     |         |\n                |              | Physical Layer\
    \ MIBs     | ATM MIB |\n                |              |  e.g., DS1/E1 MIB,  \
    \    |---------|\n                |              |  RS232-like MIB         | Phy.\
    \    |\n                |              |                         | Layer   |\n\
    \                |              |                         |  MIB    |\n      \
    \          |--------------|-------------------------|---------|\n            \
    \         Figure 1. Frame Relay MIB Architecture\n"
- title: 3.1.  Scope of MIB
  contents:
  - "3.1.  Scope of MIB\n   The Frame Relay Service MIB will only manage the Frame\
    \ Relay portion\n   of the network.  This MIB is based upon the Customer Network\n\
    \   Management concepts presented in the document \"Service Management\n   Architecture\
    \ for Virtual Connection Services\" [6].\n   This MIB will NOT be implemented\
    \ on User Equipment (e.g., DTE), and\n   the Frame Relay DTE MIB (RFC 1315) should\
    \ be used to manage those\n   devices [8].\n   Frame Relay Service MIB is intended\
    \ to be used for Customer Network\n   Management (CNM) of a Frame Relay Network\
    \ Service.  It provides\n   information that allows end-customers to obtain performance\n\
    \   monitoring, fault detection, and configuration information about\n   their\
    \ Frame Relay Service.  It is an implementation decision as to\n   whether this\
    \ MIB is used to create/delete/modify PVCs and to turn\n   PVCs on or off.\n \
    \  By using this and other related MIBs, a customer's NMS can monitor\n   their\
    \ PVCs and UNI/NNI logical ports.  Internal aspects of the\n   network (e.g.,\
    \ switching elements, line cards, and network routing\n   tables) are outside\
    \ the scope of this MIB.  The Customer's NMS will\n   typically access the SNMP\
    \ proxy-agent within the Frame Relay network\n   using SNMP over UDP over IP with\
    \ IP encapsulated in Frame Relay\n   according to RFC1490/ANSI T1.617 Annex F\
    \ [7,9].  The customer, thus,\n   has a PVC to the SNMP proxy-agent.  Alternate\
    \ access mechanisms and\n   SNMP agent implementations are possible.  The service\
    \ capabilities\n   include retrieving information and receiving TRAPs.  It is\
    \ beyond the\n   scope of this MIB to define managed objects to monitor the physical\n\
    \   layer.  Existing physical layer MIBs (e.g., DS1 MIB) and MIB II will\n   be\
    \ used as possible.  The Frame Relay Service SNMP MIB for CNM will\n   not contain\
    \ any managed objects to monitor the physical layer.  This\n   MIB primarily addresses\
    \ Frame Relay PVCs.  This MIB may be extended\n   at a later time to handle Frame\
    \ Relay SVCs.\n   This MIB is only used to manage a single Frame Relay Service\
    \ offering\n   from one network.  This MIB will typically be implemented on a\n\
    \   service provider's SNMP proxy-agent. The SNMP proxy-agent proxies for\n  \
    \ all Frame Relay equipment within one service provider's Frame Relay\n   network.\
    \  (Other SNMP agent implementations are not precluded.)\n   Therefore, this MIB\
    \ models a PVC segment through one Frame Relay\n   Network.  See Figure 2.  If\
    \ the customer's PVCs traverse multiple\n   networks, then the customer needs\
    \ to poll multiple network proxy-\n   agents within each Frame Relay Network to\
    \ retrieve their end-to-end\n   view of their service.  See Figure 2 and the Service\
    \ Management\n   Architecture [6].\n                +-------------------------------------+\n\
    \                | Customer Network Management Station |\n                |  \
    \          (SNMP based)             |\n                +-------------------------------------+\n\
    \                    ^              ^               ^\n                    | \
    \             |               |\n                    |              |        \
    \       |\n           UNI      |      NNI     |       NNI     |       UNI\n  \
    \          |       ^       |      ^        |      ^\n            | +-----------+\
    \ | +-----------+ | +-----------+ |\n            | |           | | |         \
    \  | | |           | |\n"
- title: Originating | |   FR      | | |   FR      | | |   FR      | |Terminating
  contents:
  - "Originating | |   FR      | | |   FR      | | |   FR      | |Terminating\n +--------+\
    \ | | Network I | | | Network J | | | Network K | | +--------+\n |        | |\
    \ |           | | |           | | |           | | |        |\n |        |---|\
    \           |---|           |---|           |---| User B |\n |        | | |  \
    \         | | |           | | |           | | |        |\n |     ////////////////////////////////////////////////////////////\
    \    |\n |        | | |           | | |           | | |           | | |      \
    \  |\n +--------+ | +-----------+ | +-----------+ | +-----------+ | +--------+\n\
    \            |               |               |               |\n            |\
    \               |               |               |\n            | PVC Segment 1\
    \ | PVC Segment 2 | PVC Segment 3 |\n            |<------------->|<------------->|<------------->|\n\
    \            |                                               |\n            |\
    \              Multi-network PVC                |\n            |<--------------------------------------------->|\n\
    \            |  NNI = Network-to Network Interface           |\n             \
    \  UNI = User-to-Network Interface\n                       Figure 2. Multi-network\
    \ PVC\n   Also, since the Frame Relay network is a shared network amongst many\n\
    \   Frame Relay subscribers, each subscriber will only have access to\n   their\
    \ information (e.g., information with respect to their interfaces\n   and PVCs).\
    \  Therefore, in order to provide this capability, the Frame\n   Relay PVC CNM\
    \ proxy agent should be able to support instance level\n   granularity for MIB\
    \ views.  See the Service Management Architecture.\n"
- title: 3.2.  Frame Relay Service MIB Terminology
  contents:
  - "3.2.  Frame Relay Service MIB Terminology\n   Access Channel - An access channel\
    \ generically refers to the DS1/E1\n   or DS3/E3-based UNI access channel or NNI\
    \ access channel across which\n   frame relay data transits. An access channel\
    \ is the access pathway\n   for a single stream of user data.\n   Within a given\
    \ T1 line, an access channel can denote any one of the\n   following:\n      o\
    \    Unchannelized T1 - the entire T1 line is considered an access\n         \
    \  channel. Each access channel is comprised of 24 T1 time\n           slots.\n\
    \      o    Channelized T1 - an access channel is any one of 24 channels.\n  \
    \         Each access channel is comprised of a single T1 time slot.\n      o\
    \    Fractional T1 - an access channel is a grouping of N T1 time\n          \
    \ slots (NX56/64 Kbps, where N = 1-23 T1 Time slots per FT1\n           Access\
    \ Channel) that may be assigned in consecutive or\n           non-consecutive\
    \ order.\n   Within a given E1 line, a channel can denote any one of the\n   following:\n\
    \      o    Unchannelized E1 - the entire E1 line is considered a single\n   \
    \        access channel.  Each access channel is comprised of 31 E1\n        \
    \   time slots.\n      o    Channelized E1 - an access channel is any one of 31\
    \ channels.\n           Each access channel is comprised of a single E1 time slot.\n\
    \      o    Fractional E1 - an access channel is a grouping of N E1 time\n   \
    \        slots (NX64 Kbps, where N = 1-30 E1 time slots per FE1 access\n     \
    \      channel) that may be assigned in consecutive or\n           non-consecutive\
    \ order.\n      in 3 Within a given unformatted line, the entire unformatted line\n\
    \      is considered an access channel. Examples include RS-232, V.35,\n     \
    \ V.36 and X.21 (non- switched).\n      Access Rate - The data rate of the access\
    \ channel, expressed in\n      bits/second.  The speed of the user access channel\
    \ determines how\n      rapidly the end user can inject data into the network.\n\
    \      Bc - The Committed Burst Size (Bc) is the maximum amount of\n      subscriber\
    \ data (expressed in bits) that the network agrees to\n      transfer, under normal\
    \ conditions, during a time interval Tc.\n      Be - The Excess Burst Size (Be)\
    \ is the maximum amount of\n      subscriber data (expressed in bits) in excess\
    \ of Bc that the\n      network will attempt to deliver during the time interval\
    \ Tc.  This\n      data (Be) is delivered in general with a lower probability\
    \ than\n      Bc.\n      CIR - The Committed Information Rate (CIR) is the subscriber\
    \ data\n      rate (expressed in bits/second) that the network commits to\n  \
    \    deliver under normal network conditions.  CIR is averaged over the\n    \
    \  time interval Tc (CIR = Bc/Tc).\n      DLCI - Data Link Connection Identifier\n\
    \      Logical Port - This term is used to model the Frame Relay\n      \"interface\"\
    \ on a device.\n      NNI - Network to Network Interface\n      Permanent Virtual\
    \ Connection (PVC) - A virtual connection that has\n      its end-points and bearer\
    \ capabilities defined at subscription\n      time.\n      Time slot (E1) - An\
    \ octet within the 256-bit information field in\n      each E1 frame is defined\
    \ as a time slot. Time slots are position\n      sensitive within the 256-bit\
    \ information field.  Fractional E1\n      service is provided in contiguous or\
    \ non- contiguous time slot\n      increments.\n      Time slot (T1) - An octet\
    \ within the 192-bit information field in\n      each T1 frame is defined as a\
    \ time slot. Time slots are position\n      sensitive within the 192-bit information\
    \ field.  Fractional T1\n      service is provided in contiguous or non- contiguous\
    \ time slot\n      increments.\n      UNI - User to Network Interface\n      N391\
    \ - Full status (status of all PVCs) polling counter\n      N392 - Error threshold\n\
    \      N393 - Monitored events count\n      T391 - Link integrity verification\
    \ polling timer\n      T392 - Polling verification timer\n      nT3 - Status enquiry\
    \ timer\n      nN3 - Maximum status enquiry counter\n"
- title: 3.3.  Apply MIB II to a Frame Relay Service
  contents:
  - "3.3.  Apply MIB II to a Frame Relay Service\n      Use the System Group to apply\
    \ to the SNMP proxy-agent, since the\n      proxy-agent may be monitoring many\
    \ Frame Relay devices in one\n      network.  System Group applies to only one\
    \ system.  This group is\n      not instantiated.\n          sysDescr:  ASCII\
    \ string describing the SNMP proxy-agent.\n                     Can be up to 255\
    \ characters long. This field is\n                     generally used to indicate\
    \ the network providers\n                     identification and type of service\
    \ offered.\n          sysObjectID:  Unique OBJECT IDENTIFIER (OID) for the SNMP\n\
    \                        proxy-agent.\n          sysUpTime:  Clock in the SNMP\
    \ proxy-agent; TimeTicks\n                      in 1/100s of a second.  Elapsed\
    \ type since\n                      the proxy-agent came on line.\n          sysContact:\
    \  Contact for the SNMP proxy-agent.\n                       ASCII string of up\
    \ to 255 characters.\n          sysName:  Domain name of the SNMP proxy-agent,\
    \ for example,\n                    acme.com\n          sysLocation:  Location\
    \ of the SNMP proxy-agent.\n                        ASCII string of up to 255\
    \ characters.\n          sysServices:  Services of the managed device.  The value\
    \ \"2\",\n                        which implies that\n                       \
    \ the Frame Relay network is providing\n                        a subnetwork level\
    \ service, is recommended.\n   This specifies how the Interfaces Group defined\
    \ in MIB II shall be\n   used for the management of Frame Relay based interfaces,\
    \ and in\n   conjunction with the Frame Relay Service MIB module. This memo\n\
    \   assumes the interpretation of the evolution of the Interfaces group\n   to\
    \ be in accordance with: \"The interfaces table (ifTable) contains\n   information\
    \ on the managed resource's interfaces.  Each sub-layer\n   below the internetwork\
    \ layer of a network interface is considered an\n   interface.\" Thus, the ifTable\
    \ allows the following Frame Relay-based\n   interfaces to be represented as table\
    \ entries:\n          - Frame Relay interfaces in the Frame Relay equipment (e.g.,\n\
    \            switches, routers or networks) with Frame Relay interfaces.\n   \
    \         This level is concerned with generic frame counts and\n            not\
    \ with individual virtual connections.\n   In accordance with the guidelines of\
    \ ifTable, frame counts per\n   virtual connection are not covered by ifTable,\
    \ and are considered\n   interface specific and covered in the Frame Relay Service\
    \ MIB module.\n   In order to interrelate the ifEntries properly, the Interfaces\
    \ Stack\n   Group shall be supported.\n   Some specific interpretations of ifTable\
    \ for Frame Relay follow.\n           Object   Use for the generic Frame Relay\
    \ layer\n           ======   =========================================\n     \
    \      ifIndex          Each Frame Relay port is represented\n               \
    \             by an ifEntry.\n           ifDescr          Description of the Frame\
    \ Relay interface.\n                            ASCII string describing the UNI/NNI\n\
    \                            logical port.  Can be up to\n                   \
    \         255 characters long.\n           ifType           The value allocated\
    \ for Frame Relay\n                            Service is equal to 44.\n     \
    \      ifMtu            Set to maximum frame size in octets for\n            \
    \                this frame relay logical port.\n           ifSpeed          Peak\
    \ bandwidth in bits per second\n                            available for use.\
    \  This could be the\n                            speed of the logical port and\
    \ not\n                            the access rate. Actual user information\n\
    \                            transfer rate (i.e., access rate) of the\n      \
    \                      UNI or NNI logical port in bits per second\n          \
    \                  (this is not the clocking speed).  For\n                  \
    \          example, it is 1,536,000 bits per\n                            second\
    \ for a DS1-based UNI/NNI logical\n                            port and 1,984,000\
    \ bits per second for an\n                            E1-based UNI/NNI logical\
    \ port.\n           ifPhysAddress    The primary address for this logical port\n\
    \                            assigned by the Frame Relay interface\n         \
    \                   provider.  An octet string of zero length\n              \
    \              if no address is used for this logical\n                      \
    \      port.\n           ifAdminStatus     The desired administrative status of\
    \ the\n                             frame relay logical port.\n           ifOperStatus\
    \      The current operational status of the\n                             Frame\
    \ Relay UNI or NNI logical port.\n           ifLastChange      The elapsed time\
    \ since the last\n                             re-initialization of the logical\
    \ port.\n                             The value of sysUpTime at the time the\n\
    \                             logical port entered its current\n             \
    \                operational state.  If the current\n                        \
    \     state was entered prior to the last\n                             re-initialization\
    \ of the local\n                             network management subsystem, then\n\
    \                             this object contains a zero value.\n           ifInOctets\
    \        The number of received octets.\n                             This counter\
    \ only counts octets from the\n                             beginning of the frame\
    \ relay header field\n                             to the end of user data.\n\
    \           ifInUcastPkts     The number of received unerrored,\n            \
    \                 unicast frames.\n           ifInDiscards      The number of\
    \ received frames discarded.\n                             Possible reasons are\
    \ as follows:\n                             policing, congestion.\n          \
    \ ifInErrors        The number of received frames that are\n                 \
    \            discarded, because of an error.\n                             Possible\
    \ errors can be the following: the\n                             frame relay frames\
    \ were too long or were\n                             too short, the frames had\
    \ an invalid or\n                             unrecognized DLCI values, or incorrect\n\
    \                             header values.\n           ifInUnknownProtos  The\
    \ number of packets discarded because\n                              of an unknown\
    \ or unsupported protocol.\n                              For Frame Relay Service\
    \ interfaces, this\n                              counter will always be zero.\n\
    \           ifOutOctets       The number of transmitted octets.\n            \
    \                 This counter only counts octets from the\n                 \
    \            beginning of the frame relay header field\n                     \
    \        to the end of user data.\n           ifOutUcastpkts    The number of\
    \ frames sent.\n           ifOutDiscards     The number of frames discarded in\
    \ the\n                             egress direction. Possible\n             \
    \                reasons are as follows:  policing,\n                        \
    \     congestion.\n           ifOutErrors       The number of frames discarded\
    \ in the\n                             egress direction, because of errors.\n\
    \                             Possible reason is transmit underruns.\n       \
    \    ifName            This variable is not applicable for\n                 \
    \            Frame Relay Service interfaces,\n                             therefore,\
    \ this variable contains a\n                             zero-length string.\n\
    \           ifInMulticastPkts  The number of received unerrored,\n           \
    \                   multicast frames.\n           ifInBroadcastPkts  This variable\
    \ is not applicable for\n                              Frame Relay Service interfaces,\n\
    \                              therefore, this counter is always zero.\n     \
    \      ifOutMulticastPkts  The number of sent unerrored,\n                   \
    \            multicast frames.\n           ifOutBroadcastPkts  This variable is\
    \ not applicable for\n                               Frame Relay Service interfaces,\n\
    \                               therefore, this counter is always zero.\n    \
    \       ifHCInOctets      Only used for DS3-based (and greater)\n            \
    \                 Frame Relay logical ports.\n                             The\
    \ number of received octets.\n                             This counter only counts\
    \ octets from the\n                             beginning of the frame relay header\
    \ field\n                             to the end of user data.\n           ifHCOutOctets\
    \     Only used for DS3-based (and greater)\n                             Frame\
    \ Relay logical ports.\n                             The number of transmitted\
    \ octets.\n                             This counter only counts octets from the\n\
    \                             beginning of the frame relay header field\n    \
    \                         to the end of user data.\n           ifLinkUpDownTrapEnble\
    \  The value of this object is\n                                  implementation\
    \ specific for Frame\n                                  Relay logical ports.\n\
    \           ifHighSpeed         Set to the user data rate of the frame\n     \
    \                          relay logical port in millions of\n               \
    \                bits per second.  If the user data rate\n                   \
    \            is less than 1 Mbps, then this value is\n                       \
    \        zero.\n           ifPromiscuousMode   Set to false(2).\n           ifConnectorPresent\
    \  Set to false(2).\n   Frame Relay Network Service interfaces support the Interface\
    \ Stack\n   Group.  Frame Relay Network Service interfaces do not support any\n\
    \   other groups or objects in the Interfaces group of MIB II.  Also,\n   supporting\
    \ the SNMP Group of MIB II is an implementation choice.\n"
- title: 4.  Object Definitions
  contents:
  - "4.  Object Definitions\n FRNETSERV-MIB DEFINITIONS ::= BEGIN\n IMPORTS\n    MODULE-IDENTITY,\
    \ OBJECT-TYPE, NOTIFICATION-TYPE,\n    Counter32, Integer32,\n    TimeTicks  \
    \                              FROM SNMPv2-SMI\n    DisplayString, PhysAddress,\n\
    \    TimeStamp, RowStatus                     FROM SNMPv2-TC\n    MODULE-COMPLIANCE,\
    \ OBJECT-GROUP          FROM SNMPv2-CONF\n    ifIndex, transmission          \
    \          FROM RFC-1213;\n frnetservMIB MODULE-IDENTITY\n      LAST-UPDATED \"\
    9311161200Z\"\n      ORGANIZATION \"IETF Frame Relay Network MIB Working Group\"\
    \n      CONTACT-INFO\n            \"   Tracy A. Brown\n                Bellcore\n\
    \                331 Newman Springs Rd.\n                Red Bank, NJ 07701 USA\n\
    \                Tel: 1-908-758-2107\n                Fax: 1-908-758-4177\n  \
    \              E-mail: tacox@mail.bellcore.com.\"\n      DESCRIPTION\n       \
    \        \"The MIB module to describe generic objects for\n               Frame\
    \ Relay Network Service.\"\n      ::= { transmission 44 }\n      IfIndex ::= TEXTUAL-CONVENTION\n\
    \            STATUS  current\n            DESCRIPTION\n               \"The value\
    \ of this object identifies the\n               interface for which this entry\
    \ contains\n               management information.  The value of this\n      \
    \         object for a particular interface has the same\n               value\
    \ as the ifIndex object, defined in RFC\n               1213, for the same interface.\"\
    \n            SYNTAX Integer32\n      frnetservObjects  OBJECT IDENTIFIER ::=\
    \ { frnetservMIB 1 }\n      frnetservTraps    OBJECT IDENTIFIER ::= { frnetservMIB\
    \ 2 }\n -- The Frame Relay Service Logical Port Group\n --  the Frame Relay Logical\
    \ Port Group\n --  This table is an interface specific addendum\n --  to the generic\
    \ ifTable from MIB-II.\n"
- title: frLportTable OBJECT-TYPE
  contents:
  - "frLportTable OBJECT-TYPE\n SYNTAX  SEQUENCE OF FrLportEntry\n MAX-ACCESS  not-accessible\n\
    \ STATUS  current\n DESCRIPTION\n         \"The Frame Relay Logical Port Information\
    \ table.\"\n ::= { frnetservObjects 1 }\n"
- title: frLportEntry OBJECT-TYPE
  contents:
  - "frLportEntry OBJECT-TYPE\n SYNTAX  FrLportEntry\n MAX-ACCESS  not-accessible\n\
    \ STATUS  current\n DESCRIPTION\n          \"An entry in the Frame Relay Logical\
    \ Port\n          Information table.\"\n INDEX   { ifIndex }\n ::= { frLportTable\
    \ 1 }\n"
- title: FrLportEntry ::=
  contents:
  - "FrLportEntry ::=\n  SEQUENCE {\n      frLportNumPlan\n          INTEGER,\n  \
    \    frLportContact\n          DisplayString,\n      frLportLocation\n       \
    \   DisplayString,\n      frLportType\n          INTEGER,\n      frLportAddrDLCILen\n\
    \          INTEGER,\n      frLportVCSigProtocol\n          INTEGER,\n      frLportVCSigPointer\n\
    \          OBJECT IDENTIFIER\n }\n frLportNumPlan OBJECT-TYPE\n     SYNTAX  INTEGER\
    \ {\n               other(1),\n               e164(2),\n               x121(3),\n\
    \               none(4)\n             }\n     MAX-ACCESS  read-only\n     STATUS\
    \  current\n     DESCRIPTION\n             \"The value of this object identifies\
    \ the network\n             address numbering plan for this UNI/NNI logical\n\
    \             port. The network address is the object\n             ifPhysAddress.\
    \ The value none implies that there\n             is no ifPhysAddress.  The SNMP\
    \ proxy-agent will\n             return an octet string of zero length for\n \
    \            ifPhysAddress. The value other means that an\n             address\
    \ has been assigned to this interface, but\n             the numbering plan is\
    \ not enumerated here.\"\n     ::= { frLportEntry 1 }\n frLportContact OBJECT-TYPE\n\
    \     SYNTAX  DisplayString (SIZE(0..255))\n     MAX-ACCESS  read-only\n     STATUS\
    \  current\n     DESCRIPTION\n             \"The value of this object identifies\
    \ the network\n             contact for this UNI/NNI logical port.\"\n     ::=\
    \ { frLportEntry 2 }\n frLportLocation OBJECT-TYPE\n     SYNTAX  DisplayString\
    \ (SIZE(0..255))\n     MAX-ACCESS  read-only\n     STATUS  current\n     DESCRIPTION\n\
    \             \"The value of this object identifies the Frame\n             Relay\
    \ network location for this UNI/NNI logical\n             port.\"\n     ::= {\
    \ frLportEntry 3 }\n frLportType OBJECT-TYPE\n     SYNTAX  INTEGER {\n       \
    \        uni(1),\n               nni(2)\n             }\n     MAX-ACCESS  read-only\n\
    \     STATUS  current\n     DESCRIPTION\n             \"The value of this object\
    \ identifies the type of\n             network interface for this logical port.\"\
    \n     ::= { frLportEntry 4 }\n frLportAddrDLCILen OBJECT-TYPE\n     SYNTAX  INTEGER\
    \ {\n      twoOctets10Bits(1),\n      threeOctets10Bits(2),\n      threeOctets16Bits(3),\n\
    \      fourOctets17Bits(4),\n      fourOctets23Bits(5)\n    }\n     MAX-ACCESS\
    \  read-only\n     STATUS  current\n     DESCRIPTION\n             \"The value\
    \ of this object identifies the Q.922\n             Address field length and DLCI\
    \ length for this\n             UNI/NNI logical port.\"\n     ::= { frLportEntry\
    \ 5 }\n frLportVCSigProtocol OBJECT-TYPE\n     SYNTAX  INTEGER {\n           \
    \    none(1),\n               lmi(2),\n               ansiT1617D(3),\n       \
    \        ansiT1617B(4),\n               ccittQ933A(5)\n             }\n     MAX-ACCESS\
    \  read-only\n     STATUS  current\n     DESCRIPTION\n             \"The value\
    \ of this object identifies the Local\n             In-Channel Signaling Protocol\
    \ that is used for\n             this frame relay UNI/NNI logical port.\"\n  \
    \   ::= { frLportEntry 6 }\n frLportVCSigPointer OBJECT-TYPE\n     SYNTAX  OBJECT\
    \ IDENTIFIER\n     MAX-ACCESS  read-only\n     STATUS  current\n     DESCRIPTION\n\
    \             \"The value of this object is used as a pointer to\n           \
    \  the table that contains the Local In-Channel\n             Signaling Protocol\
    \ parameters and errors for this\n             UNI/NNI logical port.  See the\
    \ Frame Relay\n             Management VC Signaling Parameters and Errors\n  \
    \           Group.\"\n     ::= { frLportEntry 7 }\n -- the Frame Relay Management\
    \ VC Signaling Group\n -- This Group contains managed objects for the\n -- Local\
    \ In-Channel Signaling Parameters and\n -- for signaling errors.\n frMgtVCSigTable\
    \ OBJECT-TYPE\n     SYNTAX  SEQUENCE OF FrMgtVCSigEntry\n     MAX-ACCESS  not-accessible\n\
    \     STATUS  current\n     DESCRIPTION\n             \"The Frame Relay Management\
    \ VC Signaling\n             Parameters and Errors table.\"\n     ::= { frnetservObjects\
    \ 2 }\n frMgtVCSigEntry OBJECT-TYPE\n     SYNTAX  FrMgtVCSigEntry\n     MAX-ACCESS\
    \  not-accessible\n     STATUS  current\n     DESCRIPTION\n             \"An entry\
    \ in the Frame Relay Management VC\n             Signaling Parameters Errors table.\"\
    \n     INDEX   { ifIndex }\n     ::= { frMgtVCSigTable 1 }\n FrMgtVCSigEntry ::=\n\
    \     SEQUENCE {\n         frMgtVCSigProced\n             INTEGER,\n         frMgtVCSigUserN391\n\
    \             INTEGER,\n         frMgtVCSigUserN392\n             INTEGER,\n \
    \        frMgtVCSigUserN393\n             INTEGER,\n         frMgtVCSigUserT391\n\
    \             INTEGER,\n         frMgtVCSigNetN392\n             INTEGER,\n  \
    \       frMgtVCSigNetN393\n             INTEGER,\n         frMgtVCSigNetT392\n\
    \             INTEGER,\n         frMgtVCSigNetnN4\n             INTEGER,\n   \
    \      frMgtVCSigNetnT3\n             INTEGER,\n         frMgtVCSigUserLinkRelErrors\n\
    \             Counter32,\n         frMgtVCSigUserProtErrors\n             Counter32,\n\
    \         frMgtVCSigUserChanInactive\n             Counter32,\n         frMgtVCSigNetLinkRelErrors\n\
    \             Counter32,\n         frMgtVCSigNetProtErrors\n             Counter32,\n\
    \         frMgtVCSigNetChanInactive\n             Counter32\n }\n frMgtVCSigProced\
    \ OBJECT-TYPE\n     SYNTAX  INTEGER {\n               u2nnet(1),\n           \
    \    bidirect(2)\n             }\n     MAX-ACCESS  read-only\n     STATUS  current\n\
    \     DESCRIPTION\n             \"The value of this object identifies the Local\n\
    \             In-Channel Signaling Procedure that is used for\n             this\
    \ UNI/NNI logical port.  The UNI/NNI logical\n             port can be performing\
    \ only user-to-network\n             network-side procedures or bidirectional\n\
    \             procedures.\"\n     ::= { frMgtVCSigEntry 1 }\n frMgtVCSigUserN391\
    \ OBJECT-TYPE\n     SYNTAX  INTEGER (1..255)\n     MAX-ACCESS  read-only\n   \
    \  STATUS  current\n     DESCRIPTION\n             \"The value of this object\
    \ identifies the User-side\n             N391 full status polling cycle value\
    \ for this\n             UNI/NNI logical port.  If the logical port is not\n \
    \            performing user-side procedures, then this value\n             is\
    \ equal to noSuchName. This object applies to\n             Q.933 Annex A and\
    \ T1.617 Annex D.\"\n     DEFVAL { 6 }\n     ::= { frMgtVCSigEntry 2 }\n frMgtVCSigUserN392\
    \ OBJECT-TYPE\n     SYNTAX  INTEGER (1..10)\n     MAX-ACCESS  read-only\n    \
    \ STATUS  current\n     DESCRIPTION\n             \"The value of this object identifies\
    \ the User-side\n             N392 error threshold value for this UNI/NNI\n  \
    \           logical port.  If the logical port is not\n             performing\
    \ user-side procedures, then this value\n             is equal to noSuchName.\
    \ This object applies to\n             Q.933 Annex A and T1.617 Annex D.\"\n \
    \    DEFVAL { 3 }\n     ::= { frMgtVCSigEntry 3 }\n frMgtVCSigUserN393 OBJECT-TYPE\n\
    \     SYNTAX  INTEGER (1..10)\n     MAX-ACCESS  read-only\n     STATUS  current\n\
    \     DESCRIPTION\n             \"The value of this object identifies the User-side\n\
    \             N393 monitored events count value for this UNI/NNI\n           \
    \  logical port.  If the logical port is not\n             performing user-side\
    \ procedures, then this value\n             is equal to noSuchName. This object\
    \ applies to\n             Q.933 Annex A and T1.617 Annex D.\"\n     DEFVAL {\
    \ 4 }\n     ::= { frMgtVCSigEntry 4 }\n frMgtVCSigUserT391 OBJECT-TYPE\n     SYNTAX\
    \  INTEGER (5..30)\n     MAX-ACCESS  read-only\n     STATUS  current\n     DESCRIPTION\n\
    \             \"The value of this object identifies the User-side\n          \
    \   T391 link integrity verification polling timer\n             value for this\
    \ UNI/NNI logical port.  If the\n             logical port is not performing user-side\n\
    \             procedures, then this value is equal to\n             noSuchName.\
    \ This object applies to Q.933 Annex A\n             and T1.617 Annex D.\"\n \
    \    DEFVAL { 10 }\n     ::= { frMgtVCSigEntry 5 }\n frMgtVCSigNetN392 OBJECT-TYPE\n\
    \     SYNTAX  INTEGER (1..10)\n     MAX-ACCESS  read-only\n     STATUS  current\n\
    \     DESCRIPTION\n             \"The value of this object identifies the Network-\n\
    \             side N392 error threshold value (nN2 for LMI) for\n            \
    \ this UNI/NNI logical port.  If the logical port is\n             not performing\
    \ network-side procedures, then this\n             value is equal to noSuchName.\
    \ This object applies\n             to Q.933 Annex A, T1.617 Annex D and LMI.\"\
    \n     DEFVAL { 3 }\n     ::= { frMgtVCSigEntry 6 }\n frMgtVCSigNetN393 OBJECT-TYPE\n\
    \     SYNTAX  INTEGER (1..10)\n     MAX-ACCESS  read-only\n     STATUS  current\n\
    \     DESCRIPTION\n             \"The value of this object identifies the Network-\n\
    \             side N393 monitored events count value (nN3 for\n             LMI)\
    \ for this UNI/NNI logical port.  If the\n             logical port is not performing\
    \ network-side\n             procedures, then this value is equal to\n       \
    \      noSuchName. This object applies to Q.933 Annex A,\n             T1.617\
    \ Annex D and LMI.\"\n     DEFVAL { 4 }\n     ::= { frMgtVCSigEntry 7 }\n frMgtVCSigNetT392\
    \ OBJECT-TYPE\n     SYNTAX  INTEGER (5..30)\n     MAX-ACCESS  read-only\n    \
    \ STATUS  current\n     DESCRIPTION\n             \"The value of this object identifies\
    \ the Network-\n             side T392 polling verification timer value (nT2\n\
    \             for LMI)  for this UNI/NNI logical port.  If the\n             logical\
    \ port is not performing network-side\n             procedures, then this value\
    \ is equal to\n             noSuchName. This object applies to Q.933 Annex A,\n\
    \             T1.617 Annex D and LMI.\"\n     DEFVAL { 15 }\n     ::= { frMgtVCSigEntry\
    \ 8 }\n frMgtVCSigNetnN4 OBJECT-TYPE\n     SYNTAX  INTEGER (5..5)\n     MAX-ACCESS\
    \  read-only\n     STATUS  current\n     DESCRIPTION\n             \"The value\
    \ of this object identifies the Network-\n             side nN4 maximum status\
    \ enquires received value\n             for this UNI/NNI logical port.  If the\
    \ logical\n             port is not performing network-side procedures or\n  \
    \           is not performing LMI procedures, then this value\n             is\
    \ equal to noSuchName. This object applies only\n             to LMI and always\
    \ has a value of 5.\"\n     ::= { frMgtVCSigEntry 9 }\n frMgtVCSigNetnT3 OBJECT-TYPE\n\
    \     SYNTAX  INTEGER (5 | 10 | 15 | 20 | 25 | 30)\n     MAX-ACCESS  read-only\n\
    \     STATUS  current\n     DESCRIPTION\n             \"The value of this object\
    \ identifies the Network-\n             side nT3 timer (for nN4 status enquires\
    \ received)\n             value for this UNI/NNI logical port.  If the\n     \
    \        logical port is not performing network-side\n             procedures\
    \ or is not performing LMI procedures,\n             then this value is equal\
    \ to noSuchName. This\n             object applies only to LMI.\"\n     DEFVAL\
    \ { 20 }\n     ::= { frMgtVCSigEntry 10 }\n frMgtVCSigUserLinkRelErrors OBJECT-TYPE\n\
    \     SYNTAX  Counter32\n     MAX-ACCESS  read-only\n     STATUS  current\n  \
    \   DESCRIPTION\n             \"The number of user-side local in-channel\n   \
    \          signaling link reliability errors (i.e., non-\n             receipt\
    \ of Status/Status Enquiry messages or\n             invalid sequence numbers\
    \ in a Link Integrity\n             Verification Information Element) for this\
    \ UNI/NNI\n             logical port.  If the logical port is not\n          \
    \   performing user-side procedures, then this value\n             is equal to\
    \ noSuchName.\"\n     ::= { frMgtVCSigEntry 11 }\n frMgtVCSigUserProtErrors OBJECT-TYPE\n\
    \     SYNTAX  Counter32\n     MAX-ACCESS  read-only\n     STATUS  current\n  \
    \   DESCRIPTION\n             \"The number of user-side local in-channel\n   \
    \          signaling protocol errors (i.e., protocol\n             discriminator,\
    \ message type, call reference, and\n             mandatory information element\
    \ errors) for this\n             UNI/NNI logical port.  If the logical port is\
    \ not\n             performing user-side procedures, then this value\n       \
    \      is equal to noSuchName.\"\n     ::= { frMgtVCSigEntry 12 }\n frMgtVCSigUserChanInactive\
    \ OBJECT-TYPE\n     SYNTAX  Counter32\n     MAX-ACCESS  read-only\n     STATUS\
    \  current\n     DESCRIPTION\n             \"The number of times the user-side\
    \ channel was\n             declared inactive (i.e., N392 errors in N393\n   \
    \          events) for this UNI/NNI logical port. If the\n             logical\
    \ port is not performing user-side\n             procedures, then this value is\
    \ equal to\n             noSuchName.\"\n     ::= { frMgtVCSigEntry 13 }\n frMgtVCSigNetLinkRelErrors\
    \ OBJECT-TYPE\n     SYNTAX  Counter32\n     MAX-ACCESS  read-only\n     STATUS\
    \  current\n     DESCRIPTION\n             \"The number of network-side local\
    \ in-channel\n             signaling link reliability errors (i.e., non-\n   \
    \          receipt of Status/Status Enquiry messages or\n             invalid\
    \ sequence numbers in a Link Integrity\n             Verification Information\
    \ Element) for this UNI/NNI\n             logical port.  If the logical port is\
    \ not\n             performing network-side procedures, then this\n          \
    \   value is equal to noSuchName.\"\n     ::= { frMgtVCSigEntry 14 }\n frMgtVCSigNetProtErrors\
    \ OBJECT-TYPE\n     SYNTAX  Counter32\n     MAX-ACCESS  read-only\n     STATUS\
    \  current\n     DESCRIPTION\n             \"The number of network-side local\
    \ in-channel\n             signaling protocol errors (i.e., protocol\n       \
    \      discriminator, message type, call reference, and\n             mandatory\
    \ information element errors) for this\n             UNI/NNI logical port.  If\
    \ the logical port is not\n             performing network-side procedures, then\
    \ this\n             value is equal to noSuchName.\"\n     ::= { frMgtVCSigEntry\
    \ 15 }\n frMgtVCSigNetChanInactive OBJECT-TYPE\n     SYNTAX  Counter32\n     MAX-ACCESS\
    \  read-only\n     STATUS  current\n     DESCRIPTION\n             \"The number\
    \ of times the network-side channel was\n             declared inactive (i.e.,\
    \ N392 errors in N393\n             events) for this UNI/NNI logical port.  If\
    \ the\n             logical port is not performing network-side\n            \
    \ procedures, then this value is equal to\n             noSuchName.\"\n     ::=\
    \ { frMgtVCSigEntry 16 }\n -- The PVC End-Point Group\n -- This table is used\
    \ to identify the traffic parameters\n -- for a bi-directional PVC segment end-point,\
    \ and it also\n -- provides statistics for a PVC segment\n -- end-point.\n --\
    \ A PVC segment end-point is identified by a UNI/NNI\n -- logical port index value\
    \ and DLCI index value.\n -- If the Frame Relay service provider allows\n -- the\
    \ Frame Relay CNM subscriber to create, modify\n -- or delete PVCs using SNMP,\
    \ then this table is used to identify\n -- and reserve\n -- the requested traffic\
    \ parameters of each\n -- PVC segment end-point.  The Connection table\n -- is\
    \ used to \"connect\" the end-points together.\n -- Not all implementations will\
    \ support the\n -- capability of creating/modifying/deleting\n -- PVCs using SNMP\
    \ as a feature of Frame Relay\n -- CNM service.\n -- Uni-directional PVCs are\
    \ modeled with zero\n -- valued traffic parameters in one of the\n -- directions\
    \ (In or Out direction) in this table.\n -- To create a PVC, the following procedures\n\
    \ -- shall be followed:\n -- 1). Create the entries for the PVC segment endpoints\
    \ in the\n --     frPVCEndptTable by specifying the traffic parameters\n --  \
    \   for the bi-directional PVC segment endpoints.\n --     As shown in the figure,\
    \ a point-to-point PVC has\n --     two endpoints, thus two entries in this table.\n\
    \ --     Uni-directional PVCs are modeled\n --     with zero valued traffic parameters\
    \ in one\n --     direction; all the `In' direction parameters\n --     for one\
    \ Frame Relay PVC End-point or\n --     all the `Out' direction\n --     parameters\
    \ for the other Frame Relay PVC\n --     End-point.\n --     In    ____________________________________\
    \ Out\n --    >>>>>>|                                   |>>>>>>>>\n --    ______|\
    \ Frame Relay Network               |__________\n --     Out  |              \
    \                     |  In\n --    <<<<<<|                                  \
    \ |<<<<<<<<\n --          |___________________________________|\n --  Frame Relay\
    \ PVC                            Frame Relay\n --   End-point                \
    \                 PVC  End-point\n -- 2). Go to the Frame Relay Connection Group.\n\
    \ --\n -- The Frame Relay PVC End-point Table\n frPVCEndptTable OBJECT-TYPE\n\
    \     SYNTAX  SEQUENCE OF FrPVCEndptEntry\n     MAX-ACCESS  not-accessible\n \
    \    STATUS  current\n     DESCRIPTION\n             \"The Frame Relay PVC End-Point\
    \ table.  This table\n             is used to model a PVC end-point.  This table\n\
    \             contains the traffic parameters and statistics for\n           \
    \  a PVC end-point.\"\n     ::= { frnetservObjects 3 }\n frPVCEndptEntry OBJECT-TYPE\n\
    \     SYNTAX  FrPVCEndptEntry\n     MAX-ACCESS  not-accessible\n     STATUS  current\n\
    \     DESCRIPTION\n             \"An entry in the Frame Relay PVC Endpoint table.\"\
    \n     INDEX   { ifIndex, frPVCEndptDLCIIndex }\n     ::= { frPVCEndptTable 1\
    \ }\n FrPVCEndptEntry ::=\n     SEQUENCE {\n         frPVCEndptDLCIIndex\n   \
    \          Integer32,\n         frPVCEndptInMaxFrameSize\n             Integer32,\n\
    \         frPVCEndptInBc\n             Integer32,\n         frPVCEndptInBe\n \
    \            Integer32,\n         frPVCEndptInCIR\n            Integer32,\n  \
    \       frPVCEndptOutMaxFrameSize\n             Integer32,\n         frPVCEndptOutBc\n\
    \             Integer32,\n         frPVCEndptOutBe\n             Integer32,\n\
    \         frPVCEndptOutCIR\n             Integer32,\n         frPVCEndptConnectIdentifier\n\
    \             Integer32,\n         frPVCEndptRowStatus\n             RowStatus,\n\
    \         frPVCEndptRcvdSigStatus\n             INTEGER,\n         frPVCEndptInFrames\n\
    \             Counter32,\n         frPVCEndptOutFrames\n             Counter32,\n\
    \         frPVCEndptInDEFrames\n             Counter32,\n         frPVCEndptInExcessFrames\n\
    \             Counter32,\n         frPVCEndptOutExcessFrames\n             Counter32,\n\
    \         frPVCEndptInDiscards\n             Counter32,\n         frPVCEndptInOctets\n\
    \             Counter32,\n         frPVCEndptOutOctets\n             Counter32\n\
    \     }\n frPVCEndptDLCIIndex OBJECT-TYPE\n     SYNTAX  Integer32\n     MAX-ACCESS\
    \  not-accessible\n     STATUS  current\n     DESCRIPTION\n             \"The\
    \ value of this object is equal to the DLCI\n             value for this PVC end-point.\"\
    \n     ::= { frPVCEndptEntry 1 }\n frPVCEndptInMaxFrameSize OBJECT-TYPE\n    \
    \ SYNTAX  Integer32\n     MAX-ACCESS  read-create\n     STATUS  current\n    \
    \ DESCRIPTION\n             \"The value of this object is the size in octets of\n\
    \             the largest frame relay information field for this\n           \
    \  PVC end-point in the ingress direction (into the\n             frame relay\
    \ network).  The value of\n             frPVCEndptInMaxFrameSize must be less\
    \ than or\n             equal to the corresponding ifMtu for this Frame\n    \
    \         Relay UNI/NNI logical port.\"\n     ::= { frPVCEndptEntry 2 }\n frPVCEndptInBc\
    \ OBJECT-TYPE\n     SYNTAX  Integer32\n     MAX-ACCESS  read-create\n     STATUS\
    \  current\n     DESCRIPTION\n             \"The value of this object is equal\
    \ to the\n             committed burst size (Bc) parameter (measured in\n    \
    \         bits) for this PVC end-point in the ingress\n             direction\
    \ (into the frame relay network).\"\n     ::= { frPVCEndptEntry 3 }\n frPVCEndptInBe\
    \ OBJECT-TYPE\n     SYNTAX  Integer32\n     MAX-ACCESS  read-create\n     STATUS\
    \  current\n     DESCRIPTION\n             \"The value of this object is equal\
    \ to the excess\n             burst size (Be) parameter (measured in bits) for\n\
    \             this PVC end-point in the ingress direction (into\n            \
    \ the frame relay network).\"\n     ::= { frPVCEndptEntry 4 }\n frPVCEndptInCIR\
    \ OBJECT-TYPE\n     SYNTAX  Integer32\n     MAX-ACCESS  read-create\n     STATUS\
    \  current\n     DESCRIPTION\n             \"The value of this object is equal\
    \ to the\n             committed information rate (CIR) parameter\n          \
    \   (measured in bits per second) for this PVC end-\n             point in the\
    \ ingress direction (into the frame\n             relay network).\"\n     ::=\
    \ { frPVCEndptEntry 5 }\n frPVCEndptOutMaxFrameSize OBJECT-TYPE\n     SYNTAX \
    \ Integer32\n     MAX-ACCESS  read-create\n     STATUS  current\n     DESCRIPTION\n\
    \             \"The value of this object is the size in octets of\n          \
    \   the largest frame relay information field for this\n             PVC end-point\
    \ in the egress direction (out of the\n             frame relay network).  The\
    \ value of\n             frPVCEndptOutMaxFrameSize must be less than or\n    \
    \         equal to the corresponding ifMtu for this Frame\n             Relay\
    \ UNI/NNI logical port.\"\n     ::= { frPVCEndptEntry 6 }\n frPVCEndptOutBc OBJECT-TYPE\n\
    \     SYNTAX  Integer32\n     MAX-ACCESS  read-create\n     STATUS  current\n\
    \     DESCRIPTION\n             \"The value of this object is equal to the\n \
    \            committed burst size (Bc) parameter (measured in\n             bits)\
    \ for this PVC end-point in the egress\n             direction (out of the frame\
    \ relay network).\"\n     ::= { frPVCEndptEntry 7 }\n frPVCEndptOutBe OBJECT-TYPE\n\
    \     SYNTAX  Integer32\n     MAX-ACCESS  read-create\n     STATUS  current\n\
    \     DESCRIPTION\n             \"The value of this object is equal to the excess\n\
    \             burst size (Be) parameter (measured in bits) for\n             this\
    \ PVC end-point in the egress direction (out of\n             the frame relay\
    \ network).\"\n     ::= { frPVCEndptEntry 8 }\n frPVCEndptOutCIR OBJECT-TYPE\n\
    \     SYNTAX  Integer32\n     MAX-ACCESS  read-create\n     STATUS  current\n\
    \     DESCRIPTION\n             \"The value of this object is equal to the\n \
    \            committed information rate (CIR) parameter\n             (measured\
    \ in bits per second) for this PVC end-\n             point in the egress direction\
    \ (out of the frame\n             relay network).\"\n     ::= { frPVCEndptEntry\
    \ 9 }\n frPVCEndptConnectIdentifier OBJECT-TYPE\n     SYNTAX  Integer32\n    \
    \ MAX-ACCESS  read-only\n     STATUS  current\n     DESCRIPTION\n            \
    \ \"This object is used to associate PVC end-points\n             as being part\
    \ of one PVC segment connection.  This\n             value of this object is equal\
    \ to the value of\n             frPVCConnectIndex, which is used as one of the\n\
    \             indices into the frPVCConnectTable.  The value of\n            \
    \ this object is provided by the agent, after the\n             associated entries\
    \ in the frPVCConnectTable have\n             been created.\"\n     ::= { frPVCEndptEntry\
    \ 10 }\n frPVCEndptRowStatus OBJECT-TYPE\n     SYNTAX  RowStatus\n     MAX-ACCESS\
    \  read-create\n     STATUS  current\n     DESCRIPTION\n             \"This object\
    \ is used to create new rows in this\n             table, modify existing rows,\
    \ and to delete\n             existing rows.  To create a new PVC, the entries\n\
    \             for the PVC segment end-points in the\n             frPVCEndptTable\
    \ must first be created.  Next, the\n             frPVCConnectTable is used to\
    \ associate the Frame\n             Relay PVC segment end-points.  In order for\
    \ the\n             manager to have the necessary error diagnostics,\n       \
    \      the frPVCEndptRowStatus object must initially be\n             set to `createAndWait'.\
    \  While the\n             frPVCEndptRowStatus object is in the\n            \
    \ `createAndWait' state, the manager can set each\n             columnar object\
    \ and get the necessary error\n             diagnostics.  The frPVCEndptRowStatus\
    \ object may\n             not be set to `active' unless the following\n     \
    \        columnar objects exist in this row:\n             frPVCEndptInMaxFrameSize,\
    \ frPVCEndptInBc,\n             frPVCEndptInBe, frPVCEndptInCIR,\n           \
    \  frPVCEndptOutMaxFrameSize, frPVCEndptOutBc,\n             frPVCEndptOutBe,\
    \ and frPVCEndptOutCIR.\"\n     ::= { frPVCEndptEntry 11 }\n frPVCEndptRcvdSigStatus\
    \ OBJECT-TYPE\n     SYNTAX  INTEGER {\n               deleted(1),\n          \
    \     active(2),\n               inactive(3),\n               none(4)\n      \
    \       }\n     MAX-ACCESS  read-only\n     STATUS  current\n     DESCRIPTION\n\
    \             \"The value of this object identifies the PVC\n             status\
    \ received via the local in-channel signaling\n             procedures for this\
    \ PVC end-point.  This object is\n             only pertinent for interfaces that\
    \ perform the\n             bidirectional procedures.  For user-to-network\n \
    \            network side procedures, the value of this object\n             should\
    \ be none.\"\n     ::= { frPVCEndptEntry 12 }\n frPVCEndptInFrames OBJECT-TYPE\n\
    \     SYNTAX  Counter32\n     MAX-ACCESS  read-only\n     STATUS  current\n  \
    \   DESCRIPTION\n             \"The number of frames received by the network\n\
    \             (ingress) for this PVC end-point. This includes\n             any\
    \ frames discarded by the network due to\n             submitting more than Bc\
    \ + Be data or due to any\n             network congestion recovery procedures.\"\
    \n     ::= { frPVCEndptEntry 13 }\n frPVCEndptOutFrames OBJECT-TYPE\n     SYNTAX\
    \  Counter32\n     MAX-ACCESS  read-only\n     STATUS  current\n     DESCRIPTION\n\
    \             \"The number of frames sent by the network (egress)\n          \
    \   regardless of whether they are Bc or Be frames for\n             this PVC\
    \ end-point.\"\n     ::= { frPVCEndptEntry 14 }\n frPVCEndptInDEFrames OBJECT-TYPE\n\
    \     SYNTAX  Counter32\n     MAX-ACCESS  read-only\n     STATUS  current\n  \
    \   DESCRIPTION\n             \"The number of frames received by the network\n\
    \             (ingress) with the DE bit set to (1) for this PVC\n            \
    \ end-point.\"\n     ::= { frPVCEndptEntry 15 }\n frPVCEndptInExcessFrames OBJECT-TYPE\n\
    \     SYNTAX  Counter32\n     MAX-ACCESS  read-only\n     STATUS  current\n  \
    \   DESCRIPTION\n             \"The number of frames received by the network\n\
    \             (ingress) for this PVC end-point which were\n             treated\
    \ as excess traffic.  Frames which are sent\n             to the network with\
    \ DE set to zero are treated as\n             excess when more than Bc bits are\
    \ submitted to the\n             network during the Committed Information Rate\n\
    \             Measurement Interval (Tc).  Excess traffic may or\n            \
    \ may not be discarded at the ingress if more than\n             Bc + Be bits\
    \ are submitted to the network during\n             Tc.  Traffic discarded at\
    \ the ingress is not\n             recorded in frPVCEndptInExcessFrames.  Frames\n\
    \             which are sent to the network with DE set to one\n             are\
    \ also treated as excess traffic.\"\n     ::= { frPVCEndptEntry 16 }\n frPVCEndptOutExcessFrames\
    \ OBJECT-TYPE\n     SYNTAX  Counter32\n     MAX-ACCESS  read-only\n     STATUS\
    \  current\n     DESCRIPTION\n             \"The number of frames sent by the\
    \ network (egress)\n             for this PVC end-point which were treated as\n\
    \             excess traffic.  (The DE bit may be set to one.)\"\n     ::= { frPVCEndptEntry\
    \ 17 }\n frPVCEndptInDiscards OBJECT-TYPE\n     SYNTAX  Counter32\n     MAX-ACCESS\
    \  read-only\n     STATUS  current\n     DESCRIPTION\n             \"The number\
    \ of frames received by the the network\n             (ingress) that were discarded\
    \ due to traffic\n             enforcement for this PVC end-point.\"\n     ::=\
    \ { frPVCEndptEntry 18 }\n frPVCEndptInOctets OBJECT-TYPE\n     SYNTAX  Counter32\n\
    \     MAX-ACCESS  read-only\n     STATUS  current\n     DESCRIPTION\n        \
    \     \"The number of octets received by the network\n             (ingress) for\
    \ this PVC end-point.  This counter\n             should only count octets from\
    \ the beginning of the\n             frame relay header field to the end of user\
    \ data.\n             If the network supporting Frame Relay can not\n        \
    \     count octets, then this count should be an\n             approximation.\"\
    \n     ::= { frPVCEndptEntry 19 }\n frPVCEndptOutOctets OBJECT-TYPE\n     SYNTAX\
    \  Counter32\n     MAX-ACCESS  read-only\n     STATUS  current\n     DESCRIPTION\n\
    \             \"The number of octets sent by the network (egress)\n          \
    \   for this PVC end-point.  This counter should only\n             count octets\
    \ from the beginning of the frame relay\n             header field to the end\
    \ of user data.  If the\n             network supporting Frame Relay can not count\n\
    \             octets, then this count should be an\n             approximation.\"\
    \n     ::= { frPVCEndptEntry 20 }\n -- The Frame Relay PVC Connection Group\n\
    \ -- The Frame Relay PVC Connection Group\n -- is used to model the bi-directional\n\
    \ -- PVC segment flows;\n -- point-to-point PVCs, point-to-multipoint\n -- PVCs,\
    \ and multipoint-to-multipoint\n -- PVCs.\n -- This table has read-create access\
    \ and\n -- is used to associate PVC end-points\n -- together as belonging to one\
    \ connection.\n -- The frPVCConnectIndex is used to associate\n -- all the bi-directional\
    \ flows.\n -- Not all implementations will support the\n -- capability of creating/modifying/deleting\n\
    \ -- PVCs using SNMP as a feature of Frame Relay\n -- CNM service.\n -- Once the\
    \ entries in the frPVCEndptTable\n -- are created, the following step are used\n\
    \ -- to associate the PVC end-points as belonging\n -- to one PVC connection:\n\
    \ -- 1). Obtain a unique frPVCConnectIndex\n --     using the frPVCConnectIndexValue\
    \ object.\n -- 2). Connect the PVC segment endpoints together\n --     with the\
    \ applicable frPVCConnectIndex value\n --     obtained via\n --     frPVCConnectIndexValue.\n\
    \ --     The entries in this table are created by using\n --     the frPVCConnectRowStatus\
    \ object.\n -- 3). The agent will provide the value of the\n --     corresponding\
    \ instances of\n --     frPVCEndptConnectIdentifier with the\n --     the frPVCConnectIndex\
    \ value.\n -- 4). Set frPVCConnectAdminStatus to `active' in all\n --     rows\
    \ for this PVC segment to\n --     turn the PVC on.\n -- For example, the Frame\
    \ Relay PVC Connection Group\n -- models a bi-directional, point-to-point PVC\
    \ segment\n -- as one entry in this table.\n -- Frame Relay Network          \
    \        Frame Relay Network\n --  Low Port ____________________________________\
    \ High Port\n --          |                                   |\n --    ______|\
    \ >> from low to high PVC flow   >> |____________\n --          | << from high\
    \ to low PVC flow   << |\n --          |___________________________________|\n\
    \ --\n -- The terms low and high are chosen to represent numerical\n -- ordering\
    \ of a PVC segment's endpoints for representation\n -- in this table.  That is,\
    \ the endpoint with the lower value\n -- of ifIndex is termed 'low', while the\
    \ opposite endpoint\n -- of the segment is termed 'high'.\n -- This terminology\
    \ is to provide directional information;\n -- for example the frPVCConnectL2hOperStatus\
    \ and\n -- frPVCConnectH2lOperStatus as illustrated above.\n -- If the Frame Relay\
    \ Connection table is used to model\n -- a unidirectional PVC, then one direction\
    \ (either from low to high\n -- or from high to low) has its Operational Status\
    \ equal to down.\n -- A PVC segment is a portion of a PVC\n -- that traverses\
    \ one Frame Relay Network, and\n -- a PVC segment is identified\n -- by its two\
    \ end-points (UNI/NNI logical port index\n -- value and DLCI index value)\n --\
    \ through one Frame Relay Network.\n frPVCConnectIndexValue OBJECT-TYPE\n    \
    \ SYNTAX  INTEGER (0..2147483647)\n     MAX-ACCESS  read-only\n     STATUS  current\n\
    \     DESCRIPTION\n             \"This object contains an appropriate value to\
    \ be\n             used for frPVCConnectIndex when creating entries\n        \
    \     in the frPVCConnectTable.  The value 0 indicates\n             that no unassigned\
    \ entries are available.  To\n             obtain the frPVCConnectIndex value\
    \ for a new\n             entry, the manager issues a management protocol\n  \
    \           retrieval operation to obtain the current value of\n             this\
    \ object.  After each retrieval, the agent\n             should modify the value\
    \ to the next unassigned\n             index.\"\n     ::= { frnetservObjects 4\
    \ }\n --  The Frame Relay PVC Connection Table\n frPVCConnectTable OBJECT-TYPE\n\
    \     SYNTAX  SEQUENCE OF FrPVCConnectEntry\n     MAX-ACCESS  not-accessible\n\
    \     STATUS  current\n     DESCRIPTION\n             \"The Frame Relay PVC Connect\
    \ table.  A bi-\n             directional PVC segment is modeled as one entry\
    \ in\n             this table.\"\n     ::= { frnetservObjects 5 }\n frPVCConnectEntry\
    \ OBJECT-TYPE\n     SYNTAX  FrPVCConnectEntry\n     MAX-ACCESS  not-accessible\n\
    \     STATUS  current\n     DESCRIPTION\n             \"An entry in the Frame\
    \ Relay PVC Connect table.\n             This entry is used to model a PVC segment\
    \ in two\n             directions.\"\n     INDEX { frPVCConnectIndex,\n      \
    \       frPVCConnectLowIfIndex, frPVCConnectLowDLCIIndex,\n             frPVCConnectHighIfIndex,\
    \ frPVCConnectHighDLCIIndex }\n     ::= { frPVCConnectTable 1 }\n FrPVCConnectEntry\
    \ ::=\n     SEQUENCE {\n         frPVCConnectIndex\n             Integer32,\n\
    \         frPVCConnectLowIfIndex\n             IfIndex,\n         frPVCConnectLowDLCIIndex\n\
    \             Integer32,\n         frPVCConnectHighIfIndex\n             IfIndex,\n\
    \         frPVCConnectHighDLCIIndex\n             Integer32,\n         frPVCConnectAdminStatus\n\
    \             INTEGER,\n         frPVCConnectL2hOperStatus\n             INTEGER,\n\
    \         frPVCConnectH2lOperStatus\n             INTEGER,\n         frPVCConnectL2hLastChange\n\
    \             TimeStamp,\n         frPVCConnectH2lLastChange\n             TimeStamp,\n\
    \         frPVCConnectRowStatus\n             RowStatus\n }\n frPVCConnectIndex\
    \ OBJECT-TYPE\n     SYNTAX  Integer32\n     MAX-ACCESS  not-accessible\n     STATUS\
    \  current\n     DESCRIPTION\n             \"The value of this object is equal\
    \ to the\n             frPVCConnectIndexValue obtained to uniquely\n         \
    \    identify this PVC segment connection.\"\n     ::= { frPVCConnectEntry 1 }\n\
    \ frPVCConnectLowIfIndex OBJECT-TYPE\n     SYNTAX  IfIndex\n     MAX-ACCESS  not-accessible\n\
    \     STATUS  current\n     DESCRIPTION\n             \"The value of this object\
    \ is equal to MIB II's\n             ifIndex value of the UNI/NNI logical port\
    \ for this\n             PVC segment.  The term low implies that this PVC\n  \
    \           segment end-point has the numerically lower\n             ifIndex\
    \ value than the connected/associated PVC\n             segment end-point.  If\
    \ the value is equal to zero,\n             then this logical port is not a Frame\
    \ Relay\n             UNI/NNI logical port.\"\n     ::= { frPVCConnectEntry 2\
    \ }\n frPVCConnectLowDLCIIndex OBJECT-TYPE\n     SYNTAX  Integer32\n     MAX-ACCESS\
    \  not-accessible\n     STATUS  current\n     DESCRIPTION\n             \"The\
    \ value of this object is equal to the DLCI\n             value for this end-point\
    \ of the PVC segment.  If\n             the value is equal to zero, then this\
    \ endpoint of\n             the PVC segment is not a Frame Relay connection.\"\
    \n     ::= { frPVCConnectEntry 3 }\n frPVCConnectHighIfIndex OBJECT-TYPE\n   \
    \  SYNTAX  IfIndex\n     MAX-ACCESS  not-accessible\n     STATUS  current\n  \
    \   DESCRIPTION\n             \"The value of this object is equal to MIB II's\n\
    \             ifIndex value for the UNI/NNI logical port for\n             this\
    \ PVC segment.  The term high implies that this\n             PVC segment end-point\
    \ has the numerically higher\n             ifIndex value than the connected/associated\
    \ PVC\n             segment end-point.\"\n     ::= { frPVCConnectEntry 4 }\n frPVCConnectHighDLCIIndex\
    \ OBJECT-TYPE\n     SYNTAX  Integer32\n     MAX-ACCESS  not-accessible\n     STATUS\
    \  current\n     DESCRIPTION\n             \"The value of this object is equal\
    \ to the egress\n             DLCI value for this end-point of the PVC segment.\"\
    \n     ::= { frPVCConnectEntry 5 }\n frPVCConnectAdminStatus OBJECT-TYPE\n   \
    \  SYNTAX  INTEGER {\n               active(1),\n               inactive(2),\n\
    \               testing(3)\n             }\n     MAX-ACCESS  read-create\n   \
    \  STATUS  current\n     DESCRIPTION\n             \"The value of this object\
    \ identifies the desired\n             administrative status of this bi-directional\
    \ PVC\n             segment.  The active state means the PVC segment\n       \
    \      is currently operational; the inactive state means\n             the PVC\
    \ segment is currently not operational; the\n             testing state means\
    \ the PVC segment is currently\n             undergoing a test.  This state is\
    \ set by an\n             administrative entity.  This value affects the PVC\n\
    \             status indicated across the ingress NNI/UNI of\n             both\
    \ end-points of the bi-directional PVC segment.\n             When a PVC segment\
    \ connection is created using\n             this table, this object is initially\
    \ set to\n             `inactive'.  After the frPVCConnectRowStatus\n        \
    \     object is set to `active' (and the\n             corresponding/associated\
    \ entries in the\n             frPVCEndptTable have their frPVCEndptRowStatus\n\
    \             object set to `active'), the\n             frPVCConnectAdminStatus\
    \ object may be set to\n             `active' to turn on the PVC segment connection.\"\
    \n     ::= { frPVCConnectEntry 6 }\n frPVCConnectL2hOperStatus OBJECT-TYPE\n \
    \    SYNTAX  INTEGER {\n               active(1),\n               inactive(2),\n\
    \               testing(3),\n               unknown(4)\n             }\n     MAX-ACCESS\
    \  read-only\n     STATUS  current\n     DESCRIPTION\n             \"The value\
    \ of this object identifies the current\n             operational status of the\
    \ PVC segment connection\n             in one direction; (i.e., in the low to\
    \ high\n             direction).  The active state means it is\n             currently\
    \ operational; the inactive state means it\n             is currently not operational;\
    \ the testing state\n             means it is currently undergoing a test; the\n\
    \             unknown state means the status of it currently can\n           \
    \  not be determined.  This value affects the PVC\n             status indicated\
    \ across the ingress NNI/UNI (low\n             side) of the PVC segment.\"\n\
    \     ::= { frPVCConnectEntry 7 }\n frPVCConnectH2lOperStatus OBJECT-TYPE\n  \
    \   SYNTAX  INTEGER {\n               active(1),\n               inactive(2),\n\
    \               testing(3),\n               unknown(4)\n             }\n     MAX-ACCESS\
    \  read-only\n     STATUS  current\n     DESCRIPTION\n             \"The value\
    \ of this object identifies the current\n             operational status of the\
    \ PVC segment connection\n             in one direction; (i.e., in the high to\
    \ low\n             direction).  The active state means it is\n             currently\
    \ operational; the inactive state means it\n             is currently not operational;\
    \ the testing state\n             means it is currently undergoing a test; the\n\
    \             unknown state means the status of it currently can\n           \
    \  not be determined.  This value affects the PVC\n             status indicated\
    \ across the ingress NNI/UNI (high\n             side) of the PVC segment.\"\n\
    \     ::= { frPVCConnectEntry 8 }\n frPVCConnectL2hLastChange OBJECT-TYPE\n  \
    \   SYNTAX  TimeStamp\n     MAX-ACCESS  read-only\n     STATUS  current\n    \
    \ DESCRIPTION\n             \"The value of MIB II's sysUpTime object at the\n\
    \             time this PVC segment entered its current\n             operational\
    \ state in the low to high direction.\n             If the current state was entered\
    \ prior to the last\n             re-initialization of the proxy-agent, then this\n\
    \             object contains a zero value.\"\n     ::= { frPVCConnectEntry 9\
    \ }\n frPVCConnectH2lLastChange OBJECT-TYPE\n     SYNTAX  TimeStamp\n     MAX-ACCESS\
    \  read-only\n     STATUS  current\n     DESCRIPTION\n             \"The value\
    \ of MIB II's sysUpTime object at the\n             time this PVC segment entered\
    \ its current\n             operational state in the high to low direction.\n\
    \             If the current state was entered prior to the last\n           \
    \  re-initialization of the proxy-agent, then this\n             object contains\
    \ a zero value.\"\n     ::= { frPVCConnectEntry 10 }\n frPVCConnectRowStatus OBJECT-TYPE\n\
    \     SYNTAX  RowStatus\n     MAX-ACCESS  read-create\n     STATUS  current\n\
    \     DESCRIPTION\n             \"The status of this entry in the\n          \
    \   frPVCConnectTable.  This variable is used to\n             create new connections\
    \ for the PVC end-points and\n             to change existing connections of the\
    \ PVC end-\n             points.  This object must be initially set to\n     \
    \        `createAndWait'.  In this state, the agent checks\n             the parameters\
    \ in the associated entries in the\n             frPVCEndptTable to verify that\
    \ the PVC end-points\n             can be connected (i.e., the In parameters for\
    \ one\n             PVC end-point are equal to the Out parameters for\n      \
    \       the other PVC end-point).  This object can not be\n             set to\
    \ `active' unless the following columnar\n             objects exist in this row:\
    \ frPVCConnectAdminStatus\n             and frPVCConnectGenericPointer.  The agent\
    \ also\n             supplies the associated value of frPVCConnectIndex\n    \
    \         for the frPVCEndptConnectIdentifier instances.  To\n             turn\
    \ on a PVC segment connection, the\n             frPVCConnectAdminStatus is set\
    \ to `active'.\"\n     ::= { frPVCConnectEntry 11 }\n -- The Frame Relay Accounting\
    \ Groups\n -- The groups are the following:\n --  Accounting on a PVC basis\n\
    \ --  Accounting on an Interface/Logical Port basis\n -- The Accounting on a Frame\
    \ Relay PVC basis Group\n -- The accounting information is collected for a PVC\n\
    \ -- segment end-point.\n frAccountPVCTable OBJECT-TYPE\n     SYNTAX  SEQUENCE\
    \ OF FrAccountPVCEntry\n     MAX-ACCESS  not-accessible\n     STATUS  current\n\
    \     DESCRIPTION\n             \"The Frame Relay Accounting PVC table.  This\
    \ table\n             is used to perform accounting on a PVC segment\n       \
    \      end-point basis.\"\n     ::= { frnetservObjects 6 }\n frAccountPVCEntry\
    \ OBJECT-TYPE\n     SYNTAX  FrAccountPVCEntry\n     MAX-ACCESS  not-accessible\n\
    \     STATUS  current\n     DESCRIPTION\n             \"An entry in the Frame\
    \ Relay Accounting PVC\n             table.\"\n     INDEX   { ifIndex, frAccountPVCDLCIIndex\
    \ }\n     ::= { frAccountPVCTable 1 }\n FrAccountPVCEntry ::=\n     SEQUENCE {\n\
    \         frAccountPVCDLCIIndex\n             Integer32,\n         frAccountPVCSegmentSize\n\
    \             Integer32,\n         frAccountPVCInSegments\n             Counter32,\n\
    \         frAccountPVCOutSegments\n             Counter32\n     }\n frAccountPVCDLCIIndex\
    \ OBJECT-TYPE\n     SYNTAX  Integer32\n     MAX-ACCESS  not-accessible\n     STATUS\
    \  current\n     DESCRIPTION\n             \"The value of this object is equal\
    \ to the DLCI\n             value for this PVC segment end-point.\"\n     ::=\
    \ { frAccountPVCEntry 1 }\n frAccountPVCSegmentSize OBJECT-TYPE\n     SYNTAX \
    \ Integer32\n     MAX-ACCESS  read-only\n     STATUS  current\n     DESCRIPTION\n\
    \             \"The value of this object is equal to the Segment\n           \
    \  Size for this PVC segment end-point.\"\n     ::= { frAccountPVCEntry 2 }\n\
    \ frAccountPVCInSegments OBJECT-TYPE\n     SYNTAX  Counter32\n     MAX-ACCESS\
    \  read-only\n     STATUS  current\n     DESCRIPTION\n             \"The value\
    \ of this object is equal to the number\n             of segments received by\
    \ this PVC segment end-\n             point.\"\n     ::= { frAccountPVCEntry 3\
    \ }\n  frAccountPVCOutSegments OBJECT-TYPE\n     SYNTAX  Counter32\n     MAX-ACCESS\
    \  read-only\n     STATUS  current\n     DESCRIPTION\n             \"The value\
    \ of this object is equal to the number\n             of segments sent by this\
    \ PVC segment end-point.\"\n     ::= { frAccountPVCEntry 4 }\n -- The Accounting\
    \ on a Frame Relay Logical Port basis Group\n frAccountLportTable OBJECT-TYPE\n\
    \     SYNTAX  SEQUENCE OF FrAccountLportEntry\n     MAX-ACCESS  not-accessible\n\
    \     STATUS  current\n     DESCRIPTION\n             \"The Frame Relay Accounting\
    \ Logical Port table.\n             This table is used to perform accounting on\
    \ a\n             UNI/NNI Logical Port basis.\"\n     ::= { frnetservObjects 7\
    \ }\n frAccountLportEntry OBJECT-TYPE\n     SYNTAX  FrAccountLportEntry\n    \
    \ MAX-ACCESS  not-accessible\n     STATUS  current\n     DESCRIPTION\n       \
    \      \"An entry in the Frame Relay Accounting Logical\n             Port table.\"\
    \n     INDEX   { ifIndex }\n     ::= { frAccountLportTable 1 }\n FrAccountLportEntry\
    \ ::=\n     SEQUENCE {\n         frAccountLportSegmentSize\n             Integer32,\n\
    \         frAccountLportInSegments\n             Counter32,\n         frAccountLportOutSegments\n\
    \             Counter32\n     }\n frAccountLportSegmentSize OBJECT-TYPE\n    \
    \ SYNTAX  Integer32\n     MAX-ACCESS  read-only\n     STATUS  current\n     DESCRIPTION\n\
    \             \"The value of this object is equal to the Segment\n           \
    \  Size for this UNI/NNI logical port.\"\n     ::= { frAccountLportEntry 1 }\n\
    \ frAccountLportInSegments OBJECT-TYPE\n     SYNTAX  Counter32\n     MAX-ACCESS\
    \  read-only\n     STATUS  current\n     DESCRIPTION\n             \"The value\
    \ of this object is equal to the number\n             of segments received by\
    \ this UNI/NNI logical\n             port.\"\n     ::= { frAccountLportEntry 2\
    \ }\n frAccountLportOutSegments OBJECT-TYPE\n     SYNTAX  Counter32\n     MAX-ACCESS\
    \  read-only\n     STATUS  current\n     DESCRIPTION\n             \"The value\
    \ of this object is equal to the number\n             of segments sent by this\
    \ UNI/NNI logical port.\"\n     ::= { frAccountLportEntry 3 }\n -- Frame Relay\
    \ Network Service TRAPS\n frPVCConnectStatusChange  NOTIFICATION-TYPE\n     OBJECTS\
    \ { frPVCConnectIndex,\n               frPVCConnectLowIfIndex, frPVCConnectLowDLCIIndex,\n\
    \               frPVCConnectHighIfIndex, frPVCConnectHighDLCIIndex,\n        \
    \       frPVCConnectL2hOperStatus, frPVCConnectH2lOperStatus,\n              \
    \ frPVCEndptRcvdSigStatus }\n     STATUS  current\n     DESCRIPTION\n        \
    \     \"This trap indicates that the indicated PVC has\n             changed state.\
    \  This trap is not sent if an FR-UNI\n             changes state; a linkDown\
    \ or linkUp trap should be\n             sent instead.\"\n     ::= { frnetservTraps\
    \ 1 }\n -- Conformance Information\n frnetservConformance  OBJECT IDENTIFIER ::=\
    \ { frnetservMIB 3 }\n frnetservGroups       OBJECT IDENTIFIER ::= { frnetservConformance\
    \ 1 }\n frnetservCompliances  OBJECT IDENTIFIER ::= { frnetservConformance 2 }\n\
    \ -- Compliance Statements\n frnetservCompliance MODULE-COMPLIANCE\n       STATUS\
    \  current\n       DESCRIPTION\n         \"The compliance statement for SNMPv2\
    \ entities\n         which have Frame Relay Network Service Interfaces.\"\n  \
    \     MODULE -- this module\n           MANDATORY-GROUPS { frnetservLportGroup,\n\
    \                              frnetservMgtVCSigGroup,\n                     \
    \         frnetservPVCEndptGroup,\n                              frnetservPVCConnectGroup\
    \ }\n           GROUP       frnetservAccountPVCGroup\n           DESCRIPTION\n\
    \                 \"This group is optional for Frame Relay interfaces.\n     \
    \            It is\n                 mandatory if and only if accounting is performed\n\
    \                 on a PVC\n                 basis this\n                 Frame\
    \ Relay interface.\"\n           GROUP       frnetservAccountLportGroup\n    \
    \       DESCRIPTION\n                 \"This group is optional for Frame Relay\
    \ interfaces.\n                 It is\n                 mandatory if and only\
    \ if accounting is\n                 performed on a\n                 logical\
    \ port basis this\n                 Frame Relay interface.\"\n           OBJECT\
    \      frPVCEndptInMaxFrameSize\n           SYNTAX      Integer32\n          \
    \ MIN-ACCESS  read-only\n           DESCRIPTION\n                 \"Write access\
    \ is not required.\"\n           OBJECT      frPVCEndptInBc\n           SYNTAX\
    \      Integer32\n           MIN-ACCESS  read-only\n           DESCRIPTION\n \
    \                \"Write access is not required.\"\n           OBJECT      frPVCEndptInBe\n\
    \           SYNTAX      Integer32\n           MIN-ACCESS  read-only\n        \
    \   DESCRIPTION\n                 \"Write access is not required.\"\n        \
    \   OBJECT      frPVCEndptInCIR\n           SYNTAX      Integer32\n          \
    \ MIN-ACCESS  read-only\n           DESCRIPTION\n                 \"Write access\
    \ is not required.\"\n           OBJECT      frPVCEndptOutMaxFrameSize\n     \
    \      SYNTAX      Integer32\n           MIN-ACCESS  read-only\n           DESCRIPTION\n\
    \                 \"Write access is not required.\"\n           OBJECT      frPVCEndptOutBc\n\
    \           SYNTAX      Integer32\n           MIN-ACCESS  read-only\n        \
    \   DESCRIPTION\n                 \"Write access is not required.\"\n        \
    \   OBJECT      frPVCEndptOutBe\n           SYNTAX      Integer32\n          \
    \ MIN-ACCESS  read-only\n           DESCRIPTION\n                 \"Write access\
    \ is not required.\"\n           OBJECT      frPVCEndptOutCIR\n           SYNTAX\
    \      Integer32\n           MIN-ACCESS  read-only\n           DESCRIPTION\n \
    \                \"Write access is not required.\"\n           OBJECT      frPVCEndptConnectIdentifier\n\
    \           SYNTAX      Integer32\n           MIN-ACCESS  read-only\n        \
    \   DESCRIPTION\n                 \"Write access is not required.\"\n        \
    \   OBJECT      frPVCEndptRowStatus\n           SYNTAX      INTEGER { active(1)\
    \ }  -- subset of RowStatus\n           MIN-ACCESS  read-only\n           DESCRIPTION\n\
    \                 \"Write access is not required, and only one of the\n      \
    \           six enumerated values for the RowStatus textual\n                \
    \ convention need be supported, specifically:\n                 active(1).\"\n\
    \           OBJECT      frPVCConnectAdminStatus\n           SYNTAX      INTEGER\
    \ {\n                         active(1),\n                         inactive(2),\n\
    \                         testing(3)\n                        }\n           MIN-ACCESS\
    \  read-only\n           DESCRIPTION\n                 \"Write access is not required.\"\
    \n           OBJECT      frPVCConnectGenericPointer\n           SYNTAX      OBJECT\
    \ IDENTIFIER\n           MIN-ACCESS  read-only\n           DESCRIPTION\n     \
    \            \"Write access is not required.\"\n           OBJECT      frPVCConnectRowStatus\n\
    \           SYNTAX      INTEGER { active(1) }  -- subset of RowStatus\n      \
    \     MIN-ACCESS  read-only\n           DESCRIPTION\n                 \"Write\
    \ access is not required, and only one of the\n                 six enumerated\
    \ values for the RowStatus textual\n                 convention need be supported,\
    \ specifically:\n                 active(1).\"\n       ::= { frnetservCompliances\
    \ 1 }\n -- Units of Conformance\n frnetservLportGroup  OBJECT-GROUP\n       OBJECTS\
    \ { frLportNumPlan, frLportContact, frLportLocation,\n                 frLportType,\n\
    \                 frLportAddrDLCILen, frLportVCSigProtocol,\n                \
    \ frLportVCSigPointer }\n       STATUS  current\n       DESCRIPTION\n        \
    \     \"A collection of objects providing information applicable\n           \
    \  to a Frame Relay Logical Port.\"\n       ::= { frnetservGroups 1 }\n frnetservMgtVCSigGroup\
    \  OBJECT-GROUP\n       OBJECTS { frMgtVCSigProced,\n                 frMgtVCSigUserN391,\n\
    \                 frMgtVCSigUserN392,\n                 frMgtVCSigUserN393,\n\
    \                 frMgtVCSigUserT391,\n                 frMgtVCSigNetN392,\n \
    \                frMgtVCSigNetN393,\n                 frMgtVCSigNetT392,\n   \
    \              frMgtVCSigNetnN4,\n                 frMgtVCSigNetnT3,\n       \
    \          frMgtVCSigUserLinkRelErrors,\n                 frMgtVCSigUserProtErrors,\n\
    \                 frMgtVCSigUserChanInactive,\n                 frMgtVCSigNetLinkRelErrors,\n\
    \                 frMgtVCSigNetProtErrors,\n                 frMgtVCSigNetChanInactive\
    \ }\n       STATUS  current\n       DESCRIPTION\n             \"A collection of\
    \ objects providing information\n             applicable to the\n            \
    \ Local In-Channel Signaling Procedures used for a\n             UNI/NNI logical\
    \ port.\"\n       ::= { frnetservGroups 2 }\n frnetservPVCEndptGroup  OBJECT-GROUP\n\
    \       OBJECTS { frPVCConnectIndexValue,\n                 frPVCEndptInMaxFrameSize,\
    \ frPVCEndptInBc,\n                 frPVCEndptInBe, frPVCEndptInCIR,\n       \
    \          frPVCEndptOutMaxFrameSize, frPVCEndptOutBc,\n                 frPVCEndptOutBe,\
    \ frPVCEndptOutCIR,\n                 frPVCEndptConnectIdentifier, frPVCEndptRowStatus,\n\
    \                 frPVCEndptRcvdSigStatus, frPVCEndptInFrames,\n             \
    \    frPVCEndptOutFrames, frPVCEndptInDEFrames,\n                 frPVCEndptInExcessFrames,\
    \ frPVCEndptOutExcessFrames,\n                 frPVCEndptInDiscards,\n       \
    \          frPVCEndptInOctets, frPVCEndptOutOctets }\n       STATUS  current\n\
    \       DESCRIPTION\n             \"A collection of objects providing information\
    \ application\n             to a Frame Relay PVC end-point.\"\n       ::= { frnetservGroups\
    \ 3 }\n frnetservPVCConnectGroup  OBJECT-GROUP\n       OBJECTS { frPVCConnectAdminStatus,\
    \ frPVCConnectL2hOperStatus,\n                 frPVCConnectH2lOperStatus, frPVCConnectL2hLastChange,\n\
    \                 frPVCConnectH2lLastChange,\n                 frPVCConnectGenericPointer,\
    \ frPVCConnectRowStatus }\n       STATUS  current\n       DESCRIPTION\n      \
    \       \"A collection of objects providing information applicable\n         \
    \    to a Frame Relay PVC connection.\"\n       ::= { frnetservGroups 4 }\n frnetservAccountPVCGroup\
    \  OBJECT-GROUP\n       OBJECTS { frAccountPVCSegmentSize, frAccountPVCInSegments,\n\
    \                 frAccountPVCOutSegments }\n       STATUS  current\n       DESCRIPTION\n\
    \             \"A collection of objects providing accounting\n             information\
    \ application\n             to a Frame Relay PVC end-point.\"\n       ::= { frnetservGroups\
    \ 5 }\n frnetservAccountLportGroup  OBJECT-GROUP\n       OBJECTS { frAccountLportSegmentSize,\
    \ frAccountLportInSegments,\n                 frAccountLportOutSegments }\n  \
    \     STATUS  current\n       DESCRIPTION\n             \"A collection of objects\
    \ providing accounting\n             information application\n             to\
    \ a Frame Relay logical port.\"\n       ::= { frnetservGroups 6 }\n END\n"
- title: 7.  Acknowledgments
  contents:
  - "7.  Acknowledgments\n   This document was produced jointly by the Frame Relay\
    \ Forum Technical\n   Committee MIB Working Group and the Frame Relay Service\
    \ MIB Working\n   Group.\n"
- title: 8.  References
  contents:
  - "8.  References\n   [1] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,\
    \ \"Structure\n       of Management Information for version 2 of the Simple Network\n\
    \       Management Protocol (SNMPv2)\", RFC 1442, SNMP Research, Inc.,\n     \
    \  Hughes LAN Systems, Dover Beach Consulting, Inc., Carnegie Mellon\n       University,\
    \ April 1993.\n   [2] Galvin, J., and K. McCloghrie, \"Administrative Model for\
    \ version\n       2 of the Simple Network Management Protocol (SNMPv2)\", RFC\
    \ 1445,\n       Trusted Information Systems, Hughes LAN Systems, April 1993.\n\
    \   [3] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, \"Protocol\n  \
    \     Operations for version 2 of the Simple Network Management\n       Protocol\
    \ (SNMPv2)\", RFC 1448, SNMP Research, Inc., Hughes LAN\n       Systems, Dover\
    \ Beach Consulting, Inc., Carnegie Mellon\n       University, April 1993.\n  \
    \ [4] McCloghrie, K., and M. Rose, \"Management Information Base for\n       Network\
    \ Management of TCP/IP-based internets - MIB-II\", STD 17,\n       RFC 1213, Hughes\
    \ LAN Systems, Performance Systems International,\n       March 1991.\n   [5]\
    \ McCloghrie, K.,  and F. Kastenholz, \"Evolution of Interfaces\n       Group\
    \ of MIB-II\", RFC 1573, Hughes LAN Systems, FTP Software,\n       January 1994.\n\
    \   [6] Rodemann, K., \"Service Management Architecture for Virtual\n       Connection\
    \ Services\", Work in Progress, July 1993.\n   [7] ANSI T1.617-1991, American\
    \ National Standard for\n       Telecommunications - Integrated Services Digital\
    \ Network (ISDN) -\n       Digital Subscriber Signaling System No. 1 (DSS1) -\
    \ Signaling\n       Specification for Frame Relay Bearer Service.\n   [8] Brown,\
    \ C., Baker, F., and C. Carvalho, \"Management Information\n       Base for Frame\
    \ Relay DTEs\", RFC 1315, Wellfleet Communications,\n       Inc., Advanced Computer\
    \ Communications, April 1992.\n   [9] Bradley, T., Brown, C., and A. Malis, \"\
    Multi-Protocol\n       Interconnect over Frame Relay\", RFC 1490, Wellfleet\n\
    \       Communications, Inc., Ascom Timeplex, Inc., July 1993.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 10.  Author's Address
  contents:
  - "10.  Author's Address\n   Tracy A. Brown\n   Bell Communications Research\n \
    \  331 Newman Springs Road\n   P.O. Box 7020\n   Red Bank, NJ  07701-7020\n  \
    \ Phone: (908) 758-2107\n   EMail: tacox@mail.bellcore.com\n"
