- title: __initial_text__
  contents:
  - '      Domain Certificates in the Session Initiation Protocol (SIP)

    '
- title: Abstract
  contents:
  - "Abstract\n   This document describes how to construct and interpret certain\n\
    \   information in a PKIX-compliant (Public Key Infrastructure using\n   X.509)\
    \ certificate for use in a Session Initiation Protocol (SIP)\n   over Transport\
    \ Layer Security (TLS) connection.  More specifically,\n   this document describes\
    \ how to encode and extract the identity of a\n   SIP domain in a certificate\
    \ and how to use that identity for SIP\n   domain authentication.  As such, this\
    \ document is relevant both to\n   implementors of SIP and to issuers of certificates.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5922.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Terminology .....................................................3\n  \
    \    2.1. Key Words ..................................................3\n   3.\
    \ Problem Statement ...............................................3\n   4. SIP\
    \ Domain to Host Resolution ...................................5\n   5. The Need\
    \ for Mutual Interdomain Authentication ..................6\n   6. Certificate\
    \ Usage by a SIP Service Provider .....................7\n   7. Behavior of SIP\
    \ Entities ........................................8\n      7.1. Finding SIP Identities\
    \ in a Certificate ....................8\n      7.2. Comparing SIP Identities\
    \ ...................................9\n      7.3. Client Behavior ...........................................10\n\
    \      7.4. Server Behavior ...........................................11\n  \
    \    7.5. Proxy Behavior ............................................12\n    \
    \  7.6. Registrar Behavior ........................................12\n      7.7.\
    \ Redirect Server Behavior ..................................12\n      7.8. Virtual\
    \ SIP Servers and Certificate Content ...............12\n   8. Security Considerations\
    \ ........................................13\n      8.1. Connection Authentication\
    \ Using Digest ....................13\n   9. Acknowledgments ................................................14\n\
    \   10. References ....................................................14\n  \
    \    10.1. Normative References .....................................14\n    \
    \  10.2. Informative References ...................................15\n   Appendix\
    \ A.  Editorial Guidance (Non-Normative) ...................16\n     A.1.  Additions\
    \ .................................................16\n     A.2.  Changes ...................................................16\n\
    \       A.2.1.  Changes to Section 26.3.1 .............................16\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   RFC 5246 [5] Transport Layer Security (TLS) is available\
    \ in an\n   increasing number of Session Initiation Protocol (SIP) RFC 3261 [2]\n\
    \   implementations.  In order to use the authentication capabilities of\n   TLS,\
    \ certificates as defined by the Internet X.509 Public Key\n   Infrastructure,\
    \ see RFC 5280 [6], are required.\n   Existing SIP specifications do not sufficiently\
    \ specify how to use\n   certificates for domain (as opposed to host) authentication.\
    \  This\n   document provides guidance to ensure interoperability and uniform\n\
    \   conventions for the construction and interpretation of certificates\n   used\
    \ to identify their holders as being authoritative for the domain.\n   The discussion\
    \ in this document is pertinent to an X.509 PKIX-\n   compliant certificate used\
    \ for a TLS connection; this document does\n   not define use of such certificates\
    \ for any other purpose (such as\n   Secure/Multipurpose Internet Mail Extensions\
    \ (S/MIME)).\n"
- title: 2.  Terminology
  contents:
  - '2.  Terminology

    '
- title: 2.1.  Key Words
  contents:
  - "2.1.  Key Words\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [1].\n   Additional definition(s):\n   SIP domain identity:  An identity\
    \ (e.g., \"sip:example.com\") contained\n      in an X.509 certificate bound to\
    \ a subject that identifies the\n      subject as an authoritative SIP server\
    \ for a domain.\n"
- title: 3.  Problem Statement
  contents:
  - "3.  Problem Statement\n   TLS uses RFC 5280 [6] X.509 Public Key Infrastructure\
    \ to bind an\n   identity or a set of identities, to the subject of an X.509\n\
    \   certificate.  While RFC 3261 provides adequate guidance on the use of\n  \
    \ X.509 certificates for S/MIME, it is relatively silent on the use of\n   such\
    \ certificates for TLS.  With respect to certificates for TLS, RFC\n   3261 (Section\
    \ 26.3.1) says:\n      Proxy servers, redirect servers, and registrars SHOULD\
    \ possess a\n      site certificate whose subject corresponds to their canonical\n\
    \      hostname.\n   The security properties of TLS and S/MIME as used in SIP\
    \ are\n   different: X.509 certificates for S/MIME are generally used for end-\n\
    \   to-end authentication and encryption; thus, they serve to bind the\n   identity\
    \ of a user to the certificate and RFC 3261 is sufficiently\n   clear that in\
    \ certificates used for S/MIME, the subjectAltName field\n   will contain the\
    \ appropriate identity.  On the other hand, X.509\n   certificates used for TLS\
    \ serve to bind the identities of the per-hop\n   domain sending or receiving\
    \ the SIP messages.  However, the lack of\n   guidelines in RFC 3261 on exactly\
    \ where to put identities -- in the\n   subjectAltName field or carried as a Common\
    \ Name (CN) in the Subject\n   field -- of an X.509 certificate created ambiguities.\
    \  Following the\n   accepted practice of the time, legacy X.509 certificates\
    \ were allowed\n   to store the identity in the CN field of the certificate instead\
    \ of\n   the currently specified subjectAltName extension.  Lack of further\n\
    \   guidelines on how to interpret the identities, which identity to\n   choose\
    \ if more than one identity is present in the certificate, the\n   behavior when\
    \ multiple identities with different schemes were present\n   in the certificate,\
    \ etc., lead to ambiguities when attempting to\n   interpret the certificate in\
    \ a uniform manner for TLS use.\n   This document shows how the certificates are\
    \ to be used for mutual\n   authentication when both the client and server possess\
    \ appropriate\n   certificates, and normative behavior for matching the DNS query\n\
    \   string with an identity stored in the X.509 certificate.\n   Furthermore,\
    \ a certificate can contain multiple identities for the\n   subject in the subjectAltName\
    \ extension (the \"subject\" of a\n   certificate identifies the entity associated\
    \ with the public key\n   stored in the public key field).  As such, this document\
    \ specifies\n   appropriate matching rules to encompass various subject identity\n\
    \   representation options.  And finally, this document also provides\n   guidelines\
    \ to service providers for assigning certificates to SIP\n   servers.\n   The\
    \ rest of this document is organized as follows: the next section\n   provides\
    \ an overview of the most primitive case of a client using DNS\n   to access a\
    \ SIP server and the resulting authentication steps.\n   Section 5 looks at the\
    \ reason why mutual inter-domain authentication\n   is desired in SIP, and the\
    \ lack of normative text and behavior in RFC\n   3261 for doing so.  Section 6\
    \ outlines normative guidelines for a\n   service provider assigning certificates\
    \ to SIP servers.  Section 7\n   provides normative behavior on the SIP entities\
    \ (user agent clients,\n   user agent servers, registrars, redirect servers, and\
    \ proxies) that\n   need perform authentication based on X.509 certificates. \
    \ Section 8\n   includes the security considerations.\n"
- title: 4.  SIP Domain to Host Resolution
  contents:
  - "4.  SIP Domain to Host Resolution\n   Routing in SIP is performed by having the\
    \ client execute RFC 3263 [8]\n   procedures on a URI, called the \"Application\
    \ Unique String (AUS)\"\n   (c.f.  Section 8 of RFC 3263 [8]).  These procedures\
    \ take as input a\n   SIP AUS (the SIP URI), extract the domain portion of that\
    \ URI for use\n   as a lookup key, and query the Domain Name Service (DNS) to\
    \ obtain an\n   ordered set of one or more IP addresses with a port number and\n\
    \   transport corresponding to each IP address in the set (the \"Expected\n  \
    \ Output\").  If the transport indicates the use of TLS, then a TLS\n   connection\
    \ is opened to the server on a specific IP address and port.\n   The server presents\
    \ an X.509 certificate to the client for\n   verification as part of the initial\
    \ TLS handshake.\n   The client extracts identifiers from the Subject and any\n\
    \   subjectAltName extension in the certificate (see Section 7.1) and\n   compares\
    \ these values to the domain part extracted from the original\n   SIP URI (the\
    \ AUS).  If any identifier match is found, the server is\n   considered to be\
    \ authenticated and subsequent signaling can now\n   proceed over the TLS connection.\
    \  Matching rules for X.509\n   certificates and the normative behavior for clients\
    \ is specified in\n   Section 7.3.\n   As an example, consider a request that\
    \ is to be routed to the SIP\n   address \"sips:alice@example.com\".  This address\
    \ requires a secure\n   connection to the SIP domain \"example.com\" (the 'sips'\
    \ scheme\n   mandates a secure connection).  Through a series of DNS\n   manipulations,\
    \ the domain name is mapped to a set of host addresses\n   and transports.  The\
    \ entity attempting to create the connection\n   selects an address appropriate\
    \ for use with TLS from this set.  When\n   the connection is established to that\
    \ server, the server presents a\n   certificate asserting the identity \"sip:example.com\"\
    .  Since the\n   domain part of the SIP AUS matches the subject of the certificate,\n\
    \   the server is authenticated (see Section 7.2 for the normative rules\n   that\
    \ govern this comparison).\n      Session Initiation Protocol Secure (SIPS) borrows\
    \ this pattern of\n      server certificate matching from HTTPS.  However, RFC\
    \ 2818 [7]\n      prefers that the identity be conveyed as a subjectAltName\n\
    \      extension of type dNSName rather than the common practice of\n      conveying\
    \ the identity in the CN field of the Subject field.\n      Similarly, this document\
    \ recommends that the SIP domain identity\n      be conveyed as a subjectAltName\
    \ extension of type\n      uniformResourceIdentifier (c.f.  Sections 6 and 7.1).\n\
    \      A domain name in an X.509 certificates is properly interpreted\n      only\
    \ as a sequence of octets to be compared to the URI used to\n      reach the host.\
    \  No inference can be made based on the DNS name\n      hierarchy.  For example,\
    \ a valid certificate for \"example.com\"\n      does not imply that the owner\
    \ of that certificate has any\n      relationship at all to \"subname.example.com\"\
    .\n"
- title: 5.  The Need for Mutual Interdomain Authentication
  contents:
  - "5.  The Need for Mutual Interdomain Authentication\n   Consider the SIP trapezoid\
    \ shown in Figure 1.\n     Proxy-A.example.com           Proxy-B.example.net\n\
    \        +-------+                    +-------+\n        | Proxy |--------------------|\
    \ Proxy |\n        +----+--+                    +---+---+\n             |    \
    \                       |\n             |                           |\n      \
    \       |                           |\n             |                        \
    \ +---+\n           0---0                       |   |\n            /-\\      \
    \                  |___|\n           +---+                      /    /\n     \
    \                                +----+\n      alice@example.com          bob@example.net\n\
    \               Figure 1: SIP Trapezoid\n   A user, alice@example.com, invites\
    \ bob@example.net for a multimedia\n   communication session.  Alice's outbound\
    \ proxy, Proxy-A.example.com,\n   uses normal RFC 3263 [8] resolution rules to\
    \ find a proxy -- Proxy-\n   B.example.net -- in the example.net domain that uses\
    \ TLS.  Proxy-A\n   actively establishes an interdomain TLS connection with Proxy-B\
    \ and\n   each presents a certificate to authenticate that connection.\n   RFC\
    \ 3261 [2], Section 26.3.2.2, \"Interdomain Requests\" states that\n   when a\
    \ TLS connection is created between two proxies:\n      Each side of the connection\
    \ SHOULD verify and inspect the\n      certificate of the other, noting the domain\
    \ name that appears in\n      the certificate for comparison with the header fields\
    \ of SIP\n      messages.\n   However, RFC 3261 is silent on whether to use the\
    \ subjectAltName or\n   CN of the certificate to obtain the domain name, and which\
    \ takes\n   precedence when there are multiple names identifying the holder of\n\
    \   the certificate.\n   The authentication problem for Proxy-A is straightforward:\
    \ in the\n   certificate Proxy-A receives from Proxy-B, Proxy-A looks for an\n\
    \   identity that is a SIP URI (\"sip:example.net\") or a DNS name\n   (\"example.net\"\
    ) that asserts Proxy-B's authority over the example.net\n   domain.  Normative\
    \ behavior for a TLS client like Proxy-A is\n   specified in Section 7.3.\n  \
    \ The problem for Proxy-B is slightly more complex since it accepts the\n   TLS\
    \ request passively.  Thus, Proxy-B does not possess an equivalent\n   AUS that\
    \ it can use as an anchor in matching identities from\n   Proxy-A's certificate.\n\
    \      RFC 3261 [2], Section 26.3.2.2, only tells Proxy-B to \"compare the\n \
    \     domain asserted by the certificate with the 'domainname' portion\n     \
    \ of the From header field in the INVITE request\".  The difficulty\n      with\
    \ that instruction is that the domainname in the From header\n      field is not\
    \ always that of the domain from which the request is\n      received.\n   The\
    \ normative behavior for a TLS server like Proxy-B that passively\n   accepts\
    \ a TLS connection and requires authentication of the sending\n   peer domain\
    \ is provided in Section 7.4.\n"
- title: 6.  Certificate Usage by a SIP Service Provider
  contents:
  - "6.  Certificate Usage by a SIP Service Provider\n   It is possible for service\
    \ providers to continue the practice of\n   using existing certificates for SIP\
    \ usage with the identity conveyed\n   only in the Subject field, but they should\
    \ carefully consider the\n   following advantages of conveying identity in the\
    \ subjectAltName\n   extension field:\n   o  The subjectAltName extension can\
    \ hold multiple values, so the same\n      certificate can identify multiple servers\
    \ or sip domains.\n   o  There is no fixed syntax specified for the Subject field,\
    \ so\n      issuers vary in how the field content is set.  This forces a\n   \
    \   recipient to use heuristics to extract the identity, again\n      increasing\
    \ opportunities for misinterpretation.\n   Because of these advantages, service\
    \ providers are strongly\n   encouraged to obtain certificates that contain the\
    \ identity or\n   identities in the subjectAltName extension field.\n   When assigning\
    \ certificates to authoritative servers, a SIP service\n   provider MUST ensure\
    \ that the SIP domain used to reach the server\n   appears as an identity in the\
    \ subjectAltName field, or for\n   compatibility with existing certificates, the\
    \ Subject field of the\n   certificate.  In practice, this means that a service\
    \ provider\n   distributes to its users SIP URIs whose domain portion corresponds\
    \ to\n   an identity for which the service provider has been issued a\n   certificate.\n"
- title: 7.  Behavior of SIP Entities
  contents:
  - "7.  Behavior of SIP Entities\n   This section normatively specifies the behavior\
    \ of SIP entities when\n   using X.509 certificates to determine an authenticated\
    \ SIP domain\n   identity.\n   The first two subsections apply to all SIP implementations\
    \ that use\n   TLS to authenticate the peer: Section 7.1 describes how to extract\
    \ a\n   set of SIP identities from the certificate obtained from a TLS peer,\n\
    \   and Section 7.2 specifies how to compare SIP identities.  The\n   remaining\
    \ subsections provide context for how and when these rules\n   are to be applied\
    \ by entities in different SIP roles.\n"
- title: 7.1.  Finding SIP Identities in a Certificate
  contents:
  - "7.1.  Finding SIP Identities in a Certificate\n   Implementations (both clients\
    \ and server) MUST determine the validity\n   of a certificate by following the\
    \ procedures described in RFC 5280\n   [6].\n   As specified by RFC 5280 [6],\
    \ Section 4.2.1.12, implementations MUST\n   check for restrictions on certificate\
    \ usage declared by any\n   extendedKeyUsage extensions in the certificate.  The\
    \ SIP Extended Key\n   Usage (EKU) document [12] defines an extendedKeyUsage for\
    \ SIP.\n   Given an X.509 certificate that the above checks have found to be\n\
    \   acceptable, the following describes how to determine what SIP domain\n   identity\
    \ or identities the certificate contains.  A single\n   certificate can serve\
    \ more than one purpose -- that is, the\n   certificate might contain identities\
    \ not acceptable as SIP, domain\n   identities and/or might contain one or more\
    \ identities that are\n   acceptable for use as SIP domain identities.\n   1.\
    \  Examine each value in the subjectAltName field.  The\n       subjectAltName\
    \ field and the constraints on its values are\n       defined in Section 4.2.1.6\
    \ of RFC 5280 [6].  The subjectAltName\n       field can be absent or can contain\
    \ one or more values.  Each\n       value in the subjectAltName has a type; the\
    \ only types acceptable\n       for encoding a SIP domain identity SHALL be:\n\
    \       URI   If the scheme of the URI is not \"sip\", then the\n            \
    \ implementation MUST NOT accept the value as a SIP domain\n             identity.\n\
    \             If the scheme of the URI value is \"sip\", and the URI value\n \
    \            that contains a userpart (there is an '@'), the\n             implementation\
    \ MUST NOT accept the value as a SIP domain\n             identity (a value with\
    \ a userpart identifies an individual\n             user, not a domain).\n   \
    \          If the scheme of the URI value is \"sip\", and there is no\n      \
    \       userinfo component in the URI (there is no '@'), then the\n          \
    \   implementation MUST accept the hostpart as a SIP domain\n             identity.\n\
    \             Note: URI scheme tokens are always case insensitive.\n       DNS\
    \   An implementation MUST accept a domain name system\n             identifier\
    \ as a SIP domain identity if and only if no other\n             identity is found\
    \ that matches the \"sip\" URI type described\n             above.\n   2.  If\
    \ and only if the subjectAltName does not appear in the\n       certificate, the\
    \ implementation MAY examine the CN field of the\n       certificate.  If a valid\
    \ DNS name is found there, the\n       implementation MAY accept this value as\
    \ a SIP domain identity.\n       Accepting a DNS name in the CN value is allowed\
    \ for backward\n       compatibility, but when constructing new certificates,\
    \ consider\n       the advantages of using the subjectAltName extension field\
    \ (see\n       Section 6).\n   The above procedure yields a set containing zero\
    \ or more identities\n   from the certificate.  A client uses these identities\
    \ to authenticate\n   a server (see Section 7.3) and a server uses them to authenticate\
    \ a\n   client (see Section 7.4).\n"
- title: 7.2.  Comparing SIP Identities
  contents:
  - "7.2.  Comparing SIP Identities\n   When an implementation (either client or server)\
    \ compares two values\n   as SIP domain identities:\n      Implementations MUST\
    \ compare only the DNS name component of each\n      SIP domain identifier; an\
    \ implementation MUST NOT use any scheme\n      or parameters in the comparison.\n\
    \      Implementations MUST compare the values as DNS names, which means\n   \
    \   that the comparison is case insensitive as specified by RFC 4343\n      [3].\
    \  Implementations MUST handle Internationalized Domain Names\n      (IDNs) in\
    \ accordance with Section 7.2 of RFC 5280 [6].\n      Implementations MUST match\
    \ the values in their entirety:\n         Implementations MUST NOT match suffixes.\
    \  For example,\n         \"foo.example.com\" does not match \"example.com\".\n\
    \         Implementations MUST NOT match any form of wildcard, such as a\n   \
    \      leading \".\" or \"*.\" with any other DNS label or sequence of\n     \
    \    labels.  For example, \"*.example.com\" matches only\n         \"*.example.com\"\
    \ but not \"foo.example.com\".  Similarly,\n         \".example.com\" matches\
    \ only \".example.com\", and does not match\n         \"foo.example.com\".\n \
    \           RFC 2818 [7] (HTTP over TLS) allows the dNSName component to\n   \
    \         contain a wildcard; e.g., \"DNS:*.example.com\".  RFC 5280\n       \
    \     [6], while not disallowing this explicitly, leaves the\n            interpretation\
    \ of wildcards to the individual specification.\n            RFC 3261 [2] does\
    \ not provide any guidelines on the presence\n            of wildcards in certificates.\
    \  Through the rule above, this\n            document prohibits such wildcards\
    \ in certificates for SIP\n            domains.\n"
- title: 7.3.  Client Behavior
  contents:
  - "7.3.  Client Behavior\n   A client uses the domain portion of the SIP AUS to\
    \ query a (possibly\n   untrusted) DNS to obtain a result set, which is one or\
    \ more SRV and A\n   records identifying the server for the domain (see Section\
    \ 4 for an\n   overview).\n   The SIP server, when establishing a TLS connection,\
    \ presents its\n   certificate to the client for authentication.  The client MUST\n\
    \   determine the SIP domain identities in the server certificate using\n   the\
    \ procedure in Section 7.1.  Then, the client MUST compare the\n   original domain\
    \ portion of the SIP AUS used as input to the RFC 3263\n   [8] server location\
    \ procedures to the SIP domain identities obtained\n   from the certificate.\n\
    \   o  If there were no identities found in the server certificate, the\n    \
    \  server is not authenticated.\n   o  If the domain extracted from the AUS matches\
    \ any SIP domain\n      identity obtained from the certificate when compared as\
    \ described\n      in Section 7.2, the server is authenticated for the domain.\n\
    \   If the server is not authenticated, the client MUST close the\n   connection\
    \ immediately.\n"
- title: 7.4.  Server Behavior
  contents:
  - "7.4.  Server Behavior\n   When a server accepts a TLS connection, the server\
    \ presents its own\n   X.509 certificate to the client.  Servers that wish to\
    \ authenticate\n   the client will ask the client for a certificate.  If the client\n\
    \   possesses a certificate, that certificate is presented to the server.\n  \
    \ If the client does not present a certificate, the client MUST NOT be\n   considered\
    \ authenticated.\n      Whether or not to close a connection if the client does\
    \ not\n      present a certificate is a matter of local policy, and depends on\n\
    \      the authentication needs of the server for the connection.  Some\n    \
    \  currently deployed servers use Digest authentication to\n      authenticate\
    \ individual requests on the connection, and choose to\n      treat the connection\
    \ as authenticated by those requests for some\n      purposes (but see Section\
    \ 8.1).\n      If the local server policy requires client authentication for some\n\
    \      local purpose, then one element of such a local policy might be to\n  \
    \    allow the connection only if the client is authenticated.  For\n      example,\
    \ if the server is an inbound proxy that has peering\n      relationships with\
    \ the outbound proxies of other specific domains,\n      the server might allow\
    \ only connections authenticated as coming\n      from those domains.\n   When\
    \ authenticating the client, the server MUST obtain the set of SIP\n   domain\
    \ identities from the client certificate as described in\n   Section 7.1.  Because\
    \ the server accepted the TLS connection\n   passively, unlike a client, the server\
    \ does not possess an AUS for\n   comparison.  Nonetheless, server policies can\
    \ use the set of SIP\n   domain identities gathered from the certificate in Section\
    \ 7.1 to\n   make authorization decisions.\n   For example, a very open policy\
    \ could be to accept an X.509\n   certificate and validate the certificate using\
    \ the procedures in RFC\n   5280 [6].  If the certificate is valid, the identity\
    \ set is logged.\n   Alternatively, the server could have a list of all SIP domains\
    \ the\n   server is allowed to accept connections from; when a client presents\n\
    \   its certificate, for each identity in the client certificate, the\n   server\
    \ searches for the identity in the list of acceptable domains to\n   decide whether\
    \ or not to accept the connection.  Other policies that\n   make finer distinctions\
    \ are possible.\n   The decision of whether or not the authenticated connection\
    \ to the\n   client is appropriate for use to route new requests to the client\n\
    \   domain is independent of whether or not the connection is\n   authenticated;\
    \ the connect-reuse [10] document discusses this aspect\n   in more detail.\n"
- title: 7.5.  Proxy Behavior
  contents:
  - "7.5.  Proxy Behavior\n   A proxy MUST use the procedures defined for a User Agent\
    \ Server (UAS)\n   in Section 7.4 when authenticating a connection from a client.\n\
    \   A proxy MUST use the procedures defined for a User Agent Client (UAC)\n  \
    \ in Section 7.3 when requesting an authenticated connection to a UAS.\n   If\
    \ a proxy adds a Record-Route when forwarding a request with the\n   expectation\
    \ that the route is to use secure connections, the proxy\n   MUST insert into\
    \ the Record-Route header a URI that corresponds to an\n   identity for which\
    \ the proxy has a certificate; if the proxy does not\n   insert such a URI, then\
    \ creation of a secure connection using the\n   value from the Record-Route as\
    \ the AUS will be impossible.\n"
- title: 7.6.  Registrar Behavior
  contents:
  - "7.6.  Registrar Behavior\n   A SIP registrar, acting as a server, follows the\
    \ normative behavior\n   of Section 7.4.  When the SIP registrar accepts a TLS\
    \ connection from\n   the client, the SIP registrar presents its certificate.\
    \  Depending on\n   the registrar policies, the SIP registrar can challenge the\
    \ client\n   with HTTP Digest.\n"
- title: 7.7.  Redirect Server Behavior
  contents:
  - "7.7.  Redirect Server Behavior\n   A SIP redirect server follows the normative\
    \ behavior of a UAS as\n   specified in Section 7.4.\n"
- title: 7.8.  Virtual SIP Servers and Certificate Content
  contents:
  - "7.8.  Virtual SIP Servers and Certificate Content\n   In the \"virtual hosting\"\
    \ cases where multiple domains are managed by\n   a single application, a certificate\
    \ can contain multiple subjects by\n   having distinct identities in the subjectAltName\
    \ field as specified\n   in RFC 4474 [9].  Clients seeking to authenticate a server\
    \ on such a\n   virtual host can still follow the directions in Section 7.3 to\
    \ find\n   the identity matching the SIP AUS used to query DNS.\n   Alternatively,\
    \ if the TLS client hello \"server_name\" extension as\n   defined in RFC 4366\
    \ [4] is supported, the client SHOULD use that\n   extension to request a certificate\
    \ corresponding to the specific\n   domain (from the SIP AUS) with which the client\
    \ is seeking to\n   establish a connection.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   The goals of TLS (when used with X.509 certificates)\
    \ include the\n   following security guarantees at the transport layer:\n   Confidentiality:\
    \  packets tunneled through TLS can be read only by\n      the sender and receiver.\n\
    \   Integrity:  packets tunneled through TLS cannot be undetectably\n      modified\
    \ on the connection between the sender and receiver.\n   Authentication:  each\
    \ principal is authenticated to the other as\n      possessing a private key for\
    \ which a certificate has been issued.\n      Moreover, this certificate has not\
    \ been revoked, and is verifiable\n      by a certificate chain leading to a (locally\
    \ configured) trust\n      anchor.\n   We expect appropriate processing of domain\
    \ certificates to provide\n   the following security guarantees at the application\
    \ level:\n   Confidentiality:  SIPS messages from alice@example.com to\n     \
    \ bob@example.net can be read only by alice@example.com,\n      bob@example.net,\
    \ and SIP proxies issued with domain certificates\n      for example.com or example.net.\n\
    \   Integrity:  SIPS messages from alice@example.com to bob@example.net\n    \
    \  cannot be undetectably modified on the links between\n      alice@example.com,\
    \ bob@example.net, and SIP proxies issued with\n      domain certificates for\
    \ example.com or example.net.\n   Authentication:  alice@example.com and proxy.example.com\
    \ are mutually\n      authenticated; moreover, proxy.example.com is authenticated\
    \ to\n      alice@example.com as an authoritative proxy for domain\n      example.com.\
    \  Similar mutual authentication guarantees are given\n      between proxy.example.com\
    \ and proxy.example.net and between\n      proxy.example.net and bob@example.net.\
    \  As a result,\n      alice@example.com is transitively mutually authenticated\
    \ to\n      bob@example.net (assuming trust in the authoritative proxies for\n\
    \      example.com and example.net).\n"
- title: 8.1.  Connection Authentication Using Digest
  contents:
  - "8.1.  Connection Authentication Using Digest\n   Digest authentication in SIP\
    \ provides for authentication of the\n   message sender to the challenging UAS.\
    \  As commonly deployed, digest\n   authentication provides only very limited\
    \ integrity protection of the\n   authenticated message, and has no provision\
    \ for binding the\n   authentication to any attribute of the transport.  Many\
    \ existing SIP\n   deployments have chosen to use the Digest authentication of\
    \ one or\n   more messages on a particular transport connection as a way to\n\
    \   authenticate the connection itself -- by implication, authenticating\n   other\
    \ (unauthenticated) messages on that connection.  Some even\n   choose to similarly\
    \ authenticate a UDP source address and port based\n   on the digest authentication\
    \ of another message received from that\n   address and port.  This use of digest\
    \ goes beyond the assurances that\n   the Digest Authentication mechanism was\
    \ designed to provide.  A SIP\n   implementation SHOULD NOT use the Digest Authentication\
    \ of one\n   message on a TCP connection or from a UDP peer to infer any\n   authentication\
    \ of any other messages on that connection or from that\n   peer.  Authentication\
    \ of the domain at the other end of a connection\n   SHOULD be accomplished using\
    \ TLS and the certificate validation rules\n   described by this specification\
    \ instead.\n"
- title: 9.  Acknowledgments
  contents:
  - "9.  Acknowledgments\n   The following IETF contributors provided substantive\
    \ input to this\n   document: Jeroen van Bemmel, Michael Hammer, Cullen Jennings,\
    \ Paul\n   Kyzivat, Derek MacDonald, Dave Oran, Jon Peterson, Eric Rescorla,\n\
    \   Jonathan Rosenberg, and Russ Housley.  Special acknowledgement goes\n   to\
    \ Stephen Kent for extensively reviewing document versions and\n   suggesting\
    \ invaluable feedback, edits, and comments.\n   Paul Hoffman, Eric Rescorla, and\
    \ Robert Sparks provided many valuable\n   WGLC comments.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [1]   Bradner, S., \"Key words for use in RFCs\
    \ to Indicate Requirement\n         Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [2]   Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston, A.,\n     \
    \    Peterson, J., Sparks, R., Handley, M., and E. Schooler, \"SIP:\n        \
    \ Session Initiation Protocol\", RFC 3261, June 2002.\n   [3]   Eastlake, D.,\
    \ \"Domain Name System (DNS) Case Insensitivity\n         Clarification\", RFC\
    \ 4343, January 2006.\n   [4]   Blake-Wilson, S., Nystrom, M., Hopwood, D., Mikkelsen,\
    \ J., and\n         T. Wright, \"Transport Layer Security (TLS) Extensions\",\n\
    \         RFC 4366, April 2006.\n   [5]   Dierks, T. and E. Rescorla, \"The Transport\
    \ Layer Security (TLS)\n         Protocol Version 1.2\", RFC 5246, August 2008.\n\
    \   [6]   Cooper, D., Santesson, S., Farrell, S., Boeyen, S., Housley,\n     \
    \    R., and W. Polk, \"Internet X.509 Public Key Infrastructure\n         Certificate\
    \ and Certificate Revocation List (CRL) Profile\",\n         RFC 5280, May 2008.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [7]   Rescorla, E., \"HTTP Over TLS\", RFC\
    \ 2818, May 2000.\n   [8]   Rosenberg, J. and H. Schulzrinne, \"Session Initiation\
    \ Protocol\n         (SIP): Locating SIP Servers\", RFC 3263, June 2002.\n   [9]\
    \   Peterson, J. and C. Jennings, \"Enhancements for Authenticated\n         Identity\
    \ Management in the Session Initiation Protocol (SIP)\",\n         RFC 4474, August\
    \ 2006.\n   [10]  Mahy, R., Gurbani, V., and B. Tate, \"Connection Reuse in the\n\
    \         Session Initiation Protocol\", RFC 5923, June 2010.\n   [11]  Drage,\
    \ K., \"A Process for Handling Essential Corrections to the\n         Session\
    \ Initiation Protocol (SIP)\", Work in Progress,\n         July 2008.\n   [12]\
    \  Lawrence, S. and V. Gurbani, \"Using Extended Key Usage (EKU)\n         for\
    \ Session Initiation Protocol (SIP) X.509 Certificates\",\n         RFC 5924,\
    \ June 2010.\n"
- title: Appendix A.  Editorial Guidance (Non-Normative)
  contents:
  - "Appendix A.  Editorial Guidance (Non-Normative)\n   This document is intended\
    \ to update RFC 3261 in accordance with the\n   SIP Working Group procedures described\
    \ in [11] or its successor.\n   This appendix provides guidance to the editor\
    \ of the next\n   comprehensive update to RFC 3261 [2] on how to incorporate the\n\
    \   changes provided by this document.\n"
- title: A.1.  Additions
  contents:
  - "A.1.  Additions\n   The content of Sections 4 through 7 inclusive can be incorporated\
    \ as\n   subsections within a section that describes SIP domain\n   authentication.\n\
    \   The contents of Section 8.1 can be incorporated into the Security\n   Considerations\
    \ section of the new document.\n   All normative references from this document\
    \ can be carried forward to\n   its successor.\n"
- title: A.2.  Changes
  contents:
  - "A.2.  Changes\n   The following subsections describe changes in specific sections\
    \ of\n   RFC 3261 [2] that need to be modified in the successor document to\n\
    \   align them with the content of this document.  In each of the\n   following,\
    \ the token <domain-authentication> is a reference to the\n   section added as\
    \ described in Appendix A.1.\n"
- title: A.2.1.  Changes to Section 26.3.1
  contents:
  - "A.2.1.  Changes to Section 26.3.1\n   The current text says:\n      Proxy servers,\
    \ redirect servers and registrars SHOULD possess a\n      site certificate whose\
    \ subject corresponds to their canonical\n      hostname.\n   The suggested replacement\
    \ for the above is:\n      Proxy servers, redirect servers, registrars, and any\
    \ other server\n      that is authoritative for some SIP purpose in a given domain\n\
    \      SHOULD possess a certificate whose subjects include the name of\n     \
    \ that SIP domain.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Vijay K. Gurbani\n   Bell Laboratories, Alcatel-Lucent\n\
    \   1960 Lucent Lane\n   Room 9C-533\n   Naperville, IL  60566\n   USA\n   Phone:\
    \ +1 630 224-0216\n   EMail: vkg@alcatel-lucent.com\n   Scott Lawrence\n   EMail:\
    \ scott-ietf@skrb.org\n   Alan S.A. Jeffrey\n   Bell Laboratories, Alcatel-Lucent\n\
    \   1960 Lucent Lane\n   Room 9C-533\n   Naperville, IL  60566\n   USA\n   EMail:\
    \ ajeffrey@alcatel-lucent.com\n"
