- contents:
  - ' Framework for Ethernet VPN Designated Forwarder Election Extensibility

    '
  title: __initial_text__
- contents:
  - "Abstract\n   An alternative to the default Designated Forwarder (DF) selection\n
    \  algorithm in Ethernet VPNs (EVPNs) is defined.  The DF is the\n   Provider
    Edge (PE) router responsible for sending Broadcast, Unknown\n   Unicast, and Multicast
    (BUM) traffic to a multihomed Customer Edge\n   (CE) device on a given VLAN on
    a particular Ethernet Segment (ES).\n   In addition, the ability to influence
    the DF election result for a\n   VLAN based on the state of the associated Attachment
    Circuit (AC) is\n   specified.  This document clarifies the DF election Finite
    State\n   Machine in EVPN services.  Therefore, it updates the EVPN\n   specification
    (RFC 7432).\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8584.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \     1.1. Conventions and Terminology ................................3\n      1.2.
    Default Designated Forwarder (DF) Election in EVPN\n           Services ...................................................5\n
    \     1.3. Problem Statement ..........................................8\n           1.3.1.
    Unfair Load Balancing and Service Disruption ........8\n           1.3.2. Traffic
    Black-Holing on Individual AC Failures .....10\n      1.4. The Need for Extending
    the Default DF Election in\n           EVPN Services .............................................12\n
    \  2. Designated Forwarder Election Protocol and BGP Extensions ......13\n      2.1.
    The DF Election Finite State Machine (FSM) ................13\n      2.2. The
    DF Election Extended Community ........................16\n           2.2.1. Backward
    Compatibility .............................19\n   3. The Highest Random Weight
    DF Election Algorithm ................19\n      3.1. HRW and Consistent Hashing
    ................................20\n      3.2. HRW Algorithm for EVPN DF Election
    ........................20\n   4. The AC-Influenced DF Election Capability .......................22\n
    \     4.1. AC-Influenced DF Election Capability for\n           VLAN-Aware Bundle
    Services ................................24\n   5. Solution Benefits ..............................................25\n
    \  6. Security Considerations ........................................26\n   7.
    IANA Considerations ............................................27\n   8. References
    .....................................................28\n      8.1. Normative
    References ......................................28\n      8.2. Informative References
    ....................................29\n   Acknowledgments ...................................................30\n
    \  Contributors ......................................................30\n   Authors'
    Addresses ................................................31\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The Designated Forwarder (DF) in Ethernet VPNs (EVPNs) is
    the\n   Provider Edge (PE) router responsible for sending Broadcast, Unknown\n
    \  Unicast, and Multicast (BUM) traffic to a multihomed Customer Edge\n   (CE)
    device on a given VLAN on a particular Ethernet Segment (ES).\n   The DF is elected
    from the set of multihomed PEs attached to a given\n   ES, each of which advertises
    an ES route for the ES as identified by\n   its Ethernet Segment Identifier (ESI).
    \ By default, the EVPN uses a\n   DF election algorithm referred to as \"service
    carving\".  The DF\n   election algorithm is based on a modulus function (V mod
    N) that\n   takes the number of PEs in the ES (N) and the VLAN value (V) as\n
    \  input.  This document addresses inefficiencies in the default DF\n   election
    algorithm by defining a new DF election algorithm and an\n   ability to influence
    the DF election result for a VLAN, depending on\n   the state of the associated
    Attachment Circuit (AC).  In order to\n   avoid any ambiguity with the identifier
    used in the DF election\n   algorithm, this document uses the term \"Ethernet
    Tag\" instead of\n   \"VLAN\".  This document also creates a registry with IANA
    for future\n   DF election algorithms and capabilities (see Section 7).  It also\n
    \  presents a formal definition and clarification of the DF election\n   Finite
    State Machine (FSM).  Therefore, this document updates\n   [RFC7432], and EVPN
    implementations MUST conform to the\n   prescribed FSM.\n   The procedures described
    in this document apply to DF election in all\n   EVPN solutions, including those
    described in [RFC7432] and [RFC8214].\n   Apart from the formal description of
    the FSM, this document does not\n   intend to update other procedures described
    in [RFC7432]; it only\n   aims to improve the behavior of the DF election on PEs
    that are\n   upgraded to follow the procedures described in this document.\n"
  - contents:
    - "1.1.  Conventions and Terminology\n   The key words \"MUST\", \"MUST NOT\",
      \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
      \"NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be
      interpreted as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when,
      they appear in all\n   capitals, as shown here.\n   o  AC: Attachment Circuit.
      \ An AC has an Ethernet Tag associated\n      with it.\n   o  ACS: Attachment
      Circuit Status.\n   o  BUM: Broadcast, unknown unicast, and multicast.\n   o
      \ DF: Designated Forwarder.\n   o  NDF: Non-Designated Forwarder.\n   o  BDF:
      Backup Designated Forwarder.\n   o  Ethernet A-D per ES route: Refers to Route
      Type 1 as defined in\n      [RFC7432] or to Auto-discovery per Ethernet Segment
      route.\n   o  Ethernet A-D per EVI route: Refers to Route Type 1 as defined
      in\n      [RFC7432] or to Auto-discovery per EVPN Instance route.\n   o  ES:
      Ethernet Segment.\n   o  ESI: Ethernet Segment Identifier.\n   o  EVI: EVPN
      Instance.\n   o  MAC-VRF: A Virtual Routing and Forwarding table for Media Access\n
      \     Control (MAC) addresses on a PE.\n   o  BD: Broadcast Domain.  An EVI
      may be comprised of one BD\n      (VLAN-based or VLAN Bundle services) or multiple
      BDs (VLAN-aware\n      Bundle services).\n   o  Bridge table: An instantiation
      of a BD on a MAC-VRF.\n   o  HRW: Highest Random Weight.\n   o  VID: VLAN Identifier.\n
      \  o  CE-VID: Customer Edge VLAN Identifier.\n   o  Ethernet Tag: Used to represent
      a BD that is configured on a given\n      ES for the purpose of DF election.
      \ Note that any of the following\n      may be used to represent a BD: VIDs
      (including Q-in-Q tags),\n      configured IDs, VNIs (Virtual Extensible Local
      Area Network\n      (VXLAN) Network Identifiers), normalized VIDs, I-SIDs (Service\n
      \     Instance Identifiers), etc., as long as the representation of the\n      BDs
      is configured consistently across the multihomed PEs attached\n      to that
      ES.  The Ethernet Tag value MUST be different from zero.\n   o  Ethernet Tag
      ID: Refers to the identifier used in the EVPN routes\n      defined in [RFC7432].
      \ Its value may be the same as the Ethernet\n      Tag value (see the definition
      for Ethernet Tag) when advertising\n      routes for VLAN-aware Bundle services.
      \ Note that in the case of\n      VLAN-based or VLAN Bundle services, the Ethernet
      Tag ID is zero.\n   o  DF election procedure: Also called \"DF election\".  Refers
      to the\n      process in its entirety, including the discovery of the PEs in
      the\n      ES, the creation and maintenance of the PE candidate list, and the\n
      \     selection of a PE.\n   o  DF algorithm: A component of the DF election
      procedure.  Strictly\n      refers to the selection of a PE for a given <ES,
      Ethernet Tag>.\n   o  RR: Route Reflector.  A network routing component for
      BGP\n      [RFC4456].  It offers an alternative to the logical full-mesh\n      requirement
      of the Internal Border Gateway Protocol (IBGP).  The\n      purpose of the RR
      is concentration.  Multiple BGP routers can peer\n      with a central point,
      the RR -- acting as a route reflector server\n      -- rather than peer with
      every other router in a full mesh.  This\n      results in an O(N) peering as
      opposed to O(N^2).\n   o  TTL: Time To Live.\n   This document also assumes
      that the reader is familiar with the\n   terminology provided in [RFC7432].\n"
    title: 1.1.  Conventions and Terminology
  - contents:
    - "1.2.  Default Designated Forwarder (DF) Election in EVPN Services\n   [RFC7432]
      defines the DF as the EVPN PE responsible for:\n   o  Flooding BUM traffic on
      a given Ethernet Tag on a particular ES to\n      the CE.  This is valid for
      Single-Active and All-Active EVPN\n      multihoming.\n   o  Sending unicast
      traffic on a given Ethernet Tag on a particular ES\n      to the CE.  This is
      valid for Single-Active multihoming.\n   Figure 1 illustrates an example that
      we will use to explain the DF\n   function.\n                        +---------------+\n
      \                       |   IP/MPLS     |\n                        |   Core
      \       |\n          +----+ ES1 +----+           +----+\n          | CE1|-----|
      \   |           |    |____ES2\n          +----+     | PE1|           | PE2|
      \   \\\n                     |    |           +----+     \\+----+\n                     +----+
      \            |         | CE2|\n                        |             +----+
      \    /+----+\n                        |             |    |____/   |\n                        |
      \            | PE3|    ES2 /\n                        |             +----+       /\n
      \                       |               |         /\n                        +-------------+----+
      \    /\n                                      | PE4|____/ES2\n                                      |
      \   |\n                                      +----+\n                        Figure
      1: EVPN Multihoming\n   Figure 1 illustrates a case where there are two ESes:
      ES1 and ES2.\n   PE1 is attached to CE1 via ES1, whereas PE2, PE3, and PE4 are\n
      \  attached to CE2 via ES2, i.e., PE2, PE3, and PE4 form a redundancy\n   group.
      \ Since CE2 is multihomed to different PEs on the same ES, it\n   is necessary
      for PE2, PE3, and PE4 to agree on a DF to satisfy the\n   above-mentioned requirements.\n
      \  The effect of forwarding loops in a Layer 2 network is particularly\n   severe
      because of the broadcast nature of Ethernet traffic and the\n   lack of a TTL.
      \ Therefore, it is very important that, in the case of\n   a multihomed CE,
      only one of the PEs be used to send BUM traffic\n   to it.\n   One of the prerequisites
      for this support is that participating PEs\n   must agree amongst themselves
      as to who would act as the DF.  This\n   needs to be achieved through a distributed
      algorithm in which each\n   participating PE independently and unambiguously
      selects one of the\n   participating PEs as the DF, and the result should be
      consistent and\n   unanimous.\n   The default algorithm for DF election defined
      by [RFC7432] at the\n   granularity of (ESI, EVI) is referred to as \"service
      carving\".  In\n   this document, service carving and the default DF election
      algorithm\n   are used interchangeably.  With service carving, it is possible
      to\n   elect multiple DFs per ES (one per EVI) in order to perform load\n   balancing
      of traffic destined to a given ES.  The objective is that\n   the load-balancing
      procedures should carve up the BD space among the\n   redundant PE nodes evenly,
      in such a way that every PE is the DF for\n   a distinct set of EVIs.\n   The
      DF election algorithm (as described in [RFC7432], Section 8.5) is\n   based
      on a modulus operation.  The PEs to which the ES (for which DF\n   election
      is to be carried out per EVI) is multihomed form an ordered\n   (ordinal) list
      in ascending order by PE IP address value.  For\n   example, there are N PEs:
      PE0, PE1,... PE(N-1) ranked as per\n   increasing IP addresses in the ordinal
      list; then, for each VLAN with\n   Ethernet Tag V, configured on ES1, PEx is
      the DF for VLAN V on ES1\n   when x equals (V mod N).  In the case of a VLAN
      Bundle, only the\n   lowest VLAN is used.  In the case when the planned density
      is high\n   (meaning there are a significant number of VLANs and the Ethernet\n
      \  Tags are uniformly distributed), the thinking is that the DF election\n   will
      be spread across the PEs hosting that ES and good load balancing\n   can be
      achieved.\n   However, the described default DF election algorithm has some\n
      \  undesirable properties and, in some cases, can be somewhat disruptive\n   and
      unfair.  This document describes some of those issues and defines\n   a mechanism
      for dealing with them.  These mechanisms do involve\n   changes to the default
      DF election algorithm, but they do not require\n   any changes to the EVPN route
      exchange, and changes in the EVPN\n   routes will be minimal.\n   In addition,
      there is a need to extend the DF election procedures so\n   that new algorithms
      and capabilities are possible.  A single\n   algorithm (the default DF election
      algorithm) may not meet the\n   requirements in all the use cases.\n   Note
      that while [RFC7432] elects a DF per <ES, EVI>, this document\n   elects a DF
      per <ES, BD>.  This means that unlike [RFC7432], where\n   for a VLAN-aware
      Bundle service EVI there is only one DF for the EVI,\n   this document specifies
      that there will be multiple DFs, one for each\n   BD configured in that EVI.\n"
    title: 1.2.  Default Designated Forwarder (DF) Election in EVPN Services
  - contents:
    - "1.3.  Problem Statement\n   This section describes some potential issues with
      the default DF\n   election algorithm.\n"
    - contents:
      - "1.3.1.  Unfair Load Balancing and Service Disruption\n   There are three
        fundamental problems with the current default DF\n   election algorithm.\n
        \  1.  The algorithm will not perform well when the Ethernet Tag follows\n
        \      a non-uniform distribution -- for instance, when the Ethernet\n       Tags
        are all even or all odd.  In such a case, let us assume that\n       the ES
        is multihomed to two PEs; one of the PEs will be elected\n       as the DF
        for all of the VLANs.  This is very suboptimal.  It\n       defeats the purpose
        of service carving, as the DFs are not really\n       evenly spread across
        the PEs hosting the ES.  In fact, in this\n       particular case, one of
        the PEs does not get elected as the DF at\n       all, so it does not participate
        in DF responsibilities at all.\n       Consider another example where, referring
        to Figure 1, let's\n       assume that (1) PE2, PE3, and PE4 are listed in
        ascending order\n       by IP address and (2) each VLAN configured on ES2
        is associated\n       with an Ethernet Tag of the form (3x+1), where x is
        an integer.\n       This will result in PE3 always being selected as the DF.\n
        \  2.  The Ethernet Tag that identifies the BD can be as large as 2^24;\n
        \      however, it is not guaranteed that the tenant BD on the ES will\n       conform
        to a uniform distribution.  In fact, it is up to the\n       customer what
        BDs they will configure on the ES.  Quoting\n       [Knuth]:\n          In
        general, we want to avoid values of M that divide r^k+a or\n          r^k-a,
        where k and a are small numbers and r is the radix of\n          the alphabetic
        character set (usually r=64, 256 or 100), since\n          a remainder modulo
        such a value of M tends to be largely a\n          simple superposition of
        key digits.  Such considerations\n          suggest that we choose M to be
        a prime number such that\n          r^k!=a(modulo)M or r^k!=?a(modulo)M for
        small k & a.\n       In our case, N is the number of PEs (Section 8.5 of [RFC7432]).\n
        \      N corresponds to M above.  Since N, N-1, or N+1 need not satisfy\n
        \      the primality properties of M, as per the modulo-based DF\n       assignment
        [RFC7432], whenever a PE goes down or a new PE boots\n       up (attached
        to the same ES), the modulo scheme will not\n       necessarily map BDs to
        PEs uniformly.\n   3.  Disruption is another problem.  Consider a case when
        the same ES\n       is multihomed to a set of PEs.  When the ES is DOWN in
        one of the\n       PEs, say PE1, or PE1 itself reboots, or the BGP process
        goes down\n       or the connectivity between PE1 and an RR goes down, the\n
        \      effective number of PEs in the system now becomes N-1, and DFs\n       are
        computed for all the VLANs that are configured on that ES.\n       In general,
        if the DF for a VLAN V happens not to be PE1, but\n       some other PE, say
        PE2, it is likely that some other PE\n       (different from PE1 and PE2)
        will become the new DF.  This is not\n       desirable.  Similarly, when a
        new PE hosts the same ES, the\n       mapping again changes because of the
        modulus operation.  This\n       results in needless churn.  Again referring
        to Figure 1, say V1,\n       V2, and V3 are VLANs configured on ES2 with associated
        Ethernet\n       Tags of values 999, 1000, and 1001, respectively.  So, PE1,
        PE2,\n       and PE3 are the DFs for V1, V2, and V3, respectively.  Now when\n
        \      PE3 goes down, PE2 will become the DF for V1 and PE1 will become\n
        \      the DF for V2.\n   One point to note is that the default DF election
        algorithm assumes\n   that all the PEs who are multihomed to the same ES (and
        interested in\n   the DF election by exchanging EVPN routes) use an Originating\n
        \  Router's IP address [RFC7432] of the same family.  This does not need\n
        \  to be the case, as the EVPN address family can be carried over an\n   IPv4
        or IPv6 peering, and the PEs attached to the same ES may use an\n   address
        of either family.\n   Mathematically, a conventional hash function maps a
        key k to a number\n   i representing one of m hash buckets through a function
        h(k), i.e.,\n   i = h(k).  In the EVPN case, h is simply a modulo-m hash function\n
        \  viz. h(V) = V mod N, where N is the number of PEs that are multihomed\n
        \  to the ES in question.  It is well known that for good hash\n   distribution
        using the modulus operation, the modulus N should be a\n   prime number not
        too close to a power of 2 [CLRS2009].  When the\n   effective number of PEs
        changes from N to N-1 (or vice versa), all\n   the objects (VLAN V) will be
        remapped except those for which V mod N\n   and V mod (N-1) refer to the same
        PE in the previous and subsequent\n   ordinal rankings, respectively.  From
        a forwarding perspective, this\n   is a churn, as it results in reprogramming
        the PE ports as either\n   blocking or non-blocking at the PEs where the DF
        state changes.\n   This document addresses this problem and furnishes a solution
        to this\n   undesirable behavior.\n"
      title: 1.3.1.  Unfair Load Balancing and Service Disruption
    - contents:
      - "1.3.2.  Traffic Black-Holing on Individual AC Failures\n   The default DF
        election algorithm defined by [RFC7432] takes into\n   account only two variables
        in the modulus function for a given ES:\n   the existence of the PE's IP address
        in the candidate list and the\n   locally provisioned Ethernet Tags.\n   If
        the DF for an <ESI, EVI> fails (due to physical link/node\n   failures), an
        ES route withdrawal will make the NDF PEs re-elect the\n   DF for that <ESI,
        EVI> and the service will be recovered.\n   However, the default DF election
        procedure does not provide\n   protection against \"logical\" failures or
        human errors that may occur\n   at the service level on the DF, while the
        list of active PEs for a\n   given ES does not change.  These failures may
        have an impact not only\n   on the local PE where the issue happens but also
        on the rest of the\n   PEs of the ES.  Some examples of such logical failures
        are listed\n   below:\n   (a)  A given individual AC defined in an ES is accidentally
        shut down\n        or is not provisioned yet (hence, the ACS is DOWN), while
        the ES\n        is operationally active (since the ES route is active).\n
        \  (b)  A given MAC-VRF with a defined ES is either shut down or not\n        provisioned
        yet, while the ES is operationally active (since the\n        ES route is
        active).  In this case, the ACS of all the ACs\n        defined in that MAC-VRF
        is considered to be DOWN.\n   Neither (a) nor (b) will trigger the DF re-election
        on the remote\n   multihomed PEs for a given ES, since the ACS is not taken
        into\n   account in the DF election procedures.  While the ACS is used as
        a DF\n   election tiebreaker and trigger in Virtual Private LAN Service (VPLS)\n
        \  multihoming procedures [VPLS-MH], there is no procedure defined in\n   the
        EVPN specification [RFC7432] to trigger the DF re-election based\n   on the
        ACS change on the DF.\n   Figure 2 shows an example of logical AC failure.\n
        \                              +---+\n                               |CE4|\n
        \                              +---+\n                                 |\n
        \                           PE4  |\n                           +-----+-----+\n
        \          +---------------|  +-----+  |---------------+\n           |               |
        \ | BD-1|  |               |\n           |               +-----------+               |\n
        \          |                                           |\n           |                   EVPN
        \                   |\n           |                                           |\n
        \          | PE1               PE2                PE3  |\n           | (NDF)
        \            (DF)               (NDF)|\n       +-----------+       +-----------+
        \      +-----------+\n       |  | BD-1|  |       |  | BD-1|  |       |  |
        BD-1|  |\n       |  +-----+  |-------|  +-----+  |-------|  +-----+  |\n       +-----------+
        \      +-----------+       +-----------+\n              AC1\\   ES12   /AC2
        \ AC3\\   ES23   /AC4\n                  \\        /          \\        /\n
        \                  \\      /            \\      /\n                    +----+
        \             +----+\n                    |CE12|              |CE23|\n                    +----+
        \             +----+\n          Figure 2: Default DF Election and Traffic
        Black-Holing\n   BD-1 is defined in PE1, PE2, PE3, and PE4.  CE12 is a multihomed
        CE\n   connected to ES12 in PE1 and PE2.  Similarly, CE23 is multihomed to\n
        \  PE2 and PE3 using ES23.  Both CE12 and CE23 are connected to BD-1\n   through
        VLAN-based service interfaces: CE12-VID 1 (VID 1 on CE12) is\n   associated
        with AC1 and AC2 in BD-1, whereas CE23-VID 1 is associated\n   with AC3 and
        AC4 in BD-1.  Assume that, although not represented,\n   there are other ACs
        defined on these ESes mapped to different BDs.\n   After executing the default
        DF election algorithm as described in\n   [RFC7432], PE2 turns out to be the
        DF for ES12 and ES23 in BD-1.  The\n   following issues may arise:\n   (a)
        \ If AC2 is accidentally shut down or is not configured yet, CE12\n        traffic
        will be impacted.  In the case of All-Active\n        multihoming, the BUM
        traffic to CE12 will be \"black-holed\",\n        whereas for Single-Active
        multihoming, all the traffic to/from\n        CE12 will be discarded.  This
        is because a logical failure in\n        PE2's AC2 may not trigger an ES route
        withdrawal for ES12 (since\n        there are still other ACs active on ES12);
        therefore, PE1 will\n        not rerun the DF election procedures.\n   (b)
        \ If the bridge table for BD-1 is administratively shut down or is\n        not
        configured yet on PE2, CE12 and CE23 will both be impacted:\n        BUM traffic
        to both CEs will be discarded in the case of\n        All-Active multihoming,
        and all traffic will be discarded\n        to/from the CEs in the case of
        Single-Active multihoming.  This\n        is because PE1 and PE3 will not
        rerun the DF election procedures\n        and will keep assuming that PE2
        is the DF.\n   Quoting [RFC7432], \"When an Ethernet tag is decommissioned
        on an\n   Ethernet segment, then the PE MUST withdraw the Ethernet A-D per
        EVI\n   route(s) announced for the <ESI, Ethernet tags> that are impacted
        by\n   the decommissioning.\"  However, while this A-D per EVI route\n   withdrawal
        is used at the remote PEs performing aliasing or backup\n   procedures, it
        is not used to influence the DF election for the\n   affected EVIs.\n   This
        document adds an optional modification of the DF election\n   procedure so
        that the ACS may be taken into account as a variable in\n   the DF election;
        therefore, EVPN can provide protection against\n   logical failures.\n"
      title: 1.3.2.  Traffic Black-Holing on Individual AC Failures
    title: 1.3.  Problem Statement
  - contents:
    - "1.4.  The Need for Extending the Default DF Election in EVPN Services\n   Section
      1.3 describes some of the issues that exist in the default DF\n   election procedures.
      \ In order to address those issues, this document\n   introduces a new DF election
      framework.  This framework allows the\n   PEs to agree on a common DF election
      algorithm, as well as the\n   capabilities to enable during the DF election
      procedure.  Generally,\n   \"DF election algorithm\" refers to the algorithm
      by which a number of\n   input parameters are used to determine the DF PE, while
      \"DF election\n   capability\" refers to an additional feature that can be used
      prior to\n   the invocation of the DF election algorithm, such as modifying
      the\n   inputs (or list of candidate PEs).\n   Within this framework, this document
      defines a new DF election\n   algorithm and a new capability that can influence
      the DF election\n   result:\n   o  The new DF election algorithm is referred
      to as \"Highest Random\n      Weight\" (HRW).  The HRW procedures are described
      in Section 3.\n   o  The new DF election capability is referred to as \"AC-Influenced
      DF\n      election\" (AC-DF).  The AC-DF procedures are described in\n      Section
      4.\n   o  HRW and AC-DF mechanisms are independent of each other.\n      Therefore,
      a PE may support either HRW or AC-DF independently or\n      may support both
      of them together.  A PE may also support the\n      AC-DF capability along with
      the default DF election algorithm per\n      [RFC7432].\n   In addition, this
      document defines a way to indicate the support of\n   HRW and/or AC-DF along
      with the EVPN ES routes advertised for a given\n   ES.  Refer to Section 2.2
      for more details.\n"
    title: 1.4.  The Need for Extending the Default DF Election in EVPN Services
  title: 1.  Introduction
- contents:
  - "2.  Designated Forwarder Election Protocol and BGP Extensions\n   This section
    describes the BGP extensions required to support the new\n   DF election procedures.
    \ In addition, since the EVPN specification\n   [RFC7432] leaves several questions
    open as to the precise FSM\n   behavior of the DF election, Section 2.1 precisely
    describes the\n   intended behavior.\n"
  - contents:
    - "2.1.  The DF Election Finite State Machine (FSM)\n   Per [RFC7432], the FSM
      shown in Figure 3 is executed per <ES, VLAN>\n   in the case of VLAN-based service
      or <ES, [VLANs in VLAN Bundle]> in\n   the case of a VLAN Bundle on each participating
      PE.  Note that the\n   FSM is conceptual.  Any design or implementation MUST
      comply with\n   behavior that is equivalent to the behavior outlined in this
      FSM.\n                     VLAN_CHANGE                VLAN_CHANGE\n                     RCVD_ES
      \                   RCVD_ES\n                     LOST_ES                    LOST_ES\n
      \                    +----+                     +-------+\n                     |
      \   |                     |       v\n                     |  +-+----+   ES_UP
      \      ++-------++\n                     +->+ INIT +-------------->+ DF_WAIT
      |\n                        ++-----+               +-------+-+\n                         ^
      \                            |\n     +-----------+       |                             |DF_TIMER\n
      \    | ANY_STATE +-------+         VLAN_CHANGE         |\n     +-----------+
      ES_DOWN    +-----------------+      |\n                              |    RCVD_ES
      \     v      v\n                     +--------++   LOST_ES     ++------+-+\n
      \                    | DF_DONE +<--------------+ DF_CALC +<-+\n                     +---------+
      \  CALCULATED  +-------+-+  |\n                                                       |
      \   |\n                                                       +----+\n                                                       VLAN_CHANGE\n
      \                                                      RCVD_ES\n                                                       LOST_ES\n
      \               Figure 3: DF Election Finite State Machine\n   Observe that
      each EVI is locally configured on each of the multihomed\n   PEs attached to
      a given ES and that the FSM does not provide any\n   protection against inconsistent
      configuration between these PEs.\n   That is, for a given EVI, one or more of
      the PEs are inadvertently\n   configured with a different set of VLANs for a
      VLAN-aware Bundle\n   service or with different VLANs for a VLAN-based service.\n
      \  The states and events shown in Figure 3 are defined as follows.\n   States:\n
      \  1.  INIT: Initial state.\n   2.  DF_WAIT: State in which the participant
      waits for enough\n       information to perform the DF election for the EVI/ESI/VLAN\n
      \      combination.\n   3.  DF_CALC: State in which the new DF is recomputed.\n
      \  4.  DF_DONE: State in which the corresponding DF for the EVI/ESI/VLAN\n       combination
      has been elected.\n   5.  ANY_STATE: Refers to any of the above states.\n   Events:\n
      \  1.  ES_UP: The ES has been locally configured as \"UP\".\n   2.  ES_DOWN:
      The ES has been locally configured as \"DOWN\".\n   3.  VLAN_CHANGE: The VLANs
      configured in a bundle (that uses the ES)\n       changed.  This event is necessary
      for VLAN Bundles only.\n   4.  DF_TIMER: DF timer [RFC7432] (referred to as
      \"Wait timer\" in this\n       document) has expired.\n   5.  RCVD_ES: A new
      or changed ES route is received in an Update\n       message with an MP_REACH_NLRI.
      \ Receiving an unchanged Update\n       MUST NOT trigger this event.\n   6.
      \ LOST_ES: An Update message with an MP_UNREACH_NLRI for a\n       previously
      received ES route has been received.  If such a\n       message is seen for
      a route that has not been advertised\n       previously, the event MUST NOT
      be triggered.\n   7.  CALCULATED: DF has been successfully calculated.\n   Corresponding
      actions when transitions are performed or states are\n   entered/exited:\n   1.
      \  ANY_STATE on ES_DOWN:\n        (i) Stop the DF Wait timer.\n        (ii)
      Assume an NDF for the local PE.\n   2.   INIT on ES_UP: Transition to DF_WAIT.\n
      \  3.   INIT on VLAN_CHANGE, RCVD_ES, or LOST_ES: Do nothing.\n   4.   DF_WAIT
      on entering the state:\n        (i) Start the DF Wait timer if not started already
      or expired.\n        (ii) Assume an NDF for the local PE.\n   5.   DF_WAIT on
      VLAN_CHANGE, RCVD_ES, or LOST_ES: Do nothing.\n   6.   DF_WAIT on DF_TIMER:
      Transition to DF_CALC.\n   7.   DF_CALC on entering or re-entering the state:\n
      \       (i) Rebuild the candidate list, perform a hash, and perform the\n        election.\n
      \       (ii) Afterwards, the FSM generates a CALCULATED event against\n        itself.\n
      \  8.   DF_CALC on VLAN_CHANGE, RCVD_ES, or LOST_ES: Do as prescribed in\n        Transition
      7.\n   9.   DF_CALC on CALCULATED: Mark the election result for the VLAN or\n
      \       bundle, and transition to DF_DONE.\n   10.  DF_DONE on exiting the state:
      If a new DF election is triggered\n        and the current DF is lost, then
      assume an NDF for the local PE\n        for the VLAN or VLAN Bundle.\n   11.
      \ DF_DONE on VLAN_CHANGE, RCVD_ES, or LOST_ES: Transition to\n        DF_CALC.\n
      \  The above events and transitions are defined for the default DF\n   election
      algorithm.  As described in Section 4, the use of the AC-DF\n   capability introduces
      additional events and transitions.\n"
    title: 2.1.  The DF Election Finite State Machine (FSM)
  - contents:
    - "2.2.  The DF Election Extended Community\n   For the DF election procedures
      to be consistent and unanimous, it is\n   necessary that all the participating
      PEs agree on the DF election\n   algorithm and capabilities to be used.  For
      instance, it is not\n   possible for some PEs to continue to use the default
      DF election\n   algorithm while some PEs use HRW.  For brownfield deployments
      and for\n   interoperability with legacy PEs, it is important that all PEs have\n
      \  the ability to fall back on the default DF election.  A PE can\n   indicate
      its willingness to support HRW and/or AC-DF by signaling a\n   DF Election Extended
      Community along with the ES route (Route\n   Type 4).\n   The DF Election Extended
      Community is a new BGP transitive Extended\n   Community attribute [RFC4360]
      that is defined to identify the DF\n   election procedure to be used for the
      ES.  Figure 4 shows the\n   encoding of the DF Election Extended Community.\n
      \     0                   1                   2                   3\n      0
      1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    | Type = 0x06   | Sub-Type(0x06)| RSV |  DF Alg |    Bitmap     ~\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    ~     Bitmap    |            Reserved                           |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \                Figure 4: DF Election Extended Community\n   Where:\n   o  Type:
      0x06, as registered with IANA (Section 7) for EVPN Extended\n      Communities.\n
      \  o  Sub-Type: 0x06.  \"DF Election Extended Community\", as registered\n      with
      IANA.\n   o  RSV/Reserved: Reserved bits for information that is specific to\n
      \     DF Alg.\n   o  DF Alg (5 bits): Encodes the DF election algorithm values
      (between\n      0 and 31) that the advertising PE desires to use for the ES.
      \ This\n      document creates an IANA registry called \"DF Alg\" (Section 7),\n
      \     which contains the following values:\n      -  Type 0: Default DF election
      algorithm, or modulus-based\n         algorithm as defined in [RFC7432].\n      -
      \ Type 1: HRW Algorithm (Section 3).\n      -  Types 2-30: Unassigned.\n      -
      \ Type 31: Reserved for Experimental Use.\n   o  Bitmap (2 octets): Encodes
      \"capabilities\" to use with the DF\n      election algorithm in the DF Alg
      field.  This document creates an\n      IANA registry (Section 7) for the Bitmap
      field, with values 0-15.\n      This registry is called \"DF Election Capabilities\"
      and includes\n      the bit values listed below.\n                              1
      1 1 1 1 1\n          0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \        | |A|                           |\n         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \      Figure 5: Bitmap Field in the DF Election Extended Community\n      -
      \ Bit 0 (corresponds to Bit 24 of the DF Election Extended\n         Community):
      Unassigned.\n      -  Bit 1: AC-DF Capability (AC-Influenced DF election; see\n
      \        Section 4).  When set to 1, it indicates the desire to use\n         AC-DF
      with the rest of the PEs in the ES.\n      -  Bits 2-15: Unassigned.\n   The
      DF Election Extended Community is used as follows:\n   o  A PE SHOULD attach
      the DF Election Extended Community to any\n      advertised ES route, and the
      Extended Community MUST be sent if\n      the ES is locally configured with
      a DF election algorithm other\n      than the default DF election algorithm
      or if a capability is\n      required to be used.  In the Extended Community,
      the PE indicates\n      the desired \"DF Alg\" algorithm and \"Bitmap\" capabilities
      to be\n      used for the ES.\n      -  Only one DF Election Extended Community
      can be sent along with\n         an ES route.  Note that the intent is not for
      the advertising\n         PE to indicate all the supported DF election algorithms
      and\n         capabilities but to signal the preferred one.\n      -  DF Alg
      values 0 and 1 can both be used with Bit 1 (AC-DF) set\n         to 0 or 1.\n
      \     -  In general, a specific DF Alg SHOULD determine the use of the\n         reserved
      bits in the Extended Community, which may be used in a\n         different way
      for a different DF Alg.  In particular, for DF\n         Alg values 0 and 1,
      the reserved bits are not set by the\n         advertising PE and SHOULD be
      ignored by the receiving PE.\n   o  When a PE receives the ES routes from all
      the other PEs for the ES\n      in question, it checks to see if all the advertisements
      have the\n      Extended Community with the same DF Alg and Bitmap:\n      -
      \ If they do, this particular PE MUST follow the procedures for\n         the
      advertised DF Alg and capabilities.  For instance, if all\n         ES routes
      for a given ES indicate DF Alg HRW and AC-DF set\n         to 1, then the PEs
      attached to the ES will perform the DF\n         election as per the HRW algorithm
      and following the AC-DF\n         procedures.\n      -  Otherwise, if even a
      single advertisement for Route Type 4 is\n         received without the locally
      configured DF Alg and capability,\n         the default DF election algorithm
      MUST be used as prescribed in\n         [RFC7432].  This procedure handles the
      case where participating\n         PEs in the ES disagree about the DF algorithm
      and capability to\n         be applied.\n      -  The absence of the DF Election
      Extended Community or the\n         presence of multiple DF Election Extended
      Communities (in the\n         same route) MUST be interpreted by a receiving
      PE as an\n         indication of the default DF election algorithm on the sending\n
      \        PE -- that is, DF Alg 0 and no DF election capabilities.\n   o  When
      all the PEs in an ES advertise DF Type 31, they will rely on\n      the local
      policy to decide how to proceed with the DF election.\n   o  For any new capability
      defined in the future, the applicability/\n      compatibility of this new capability
      to/with the existing DF Alg\n      values must be assessed on a case-by-case
      basis.\n   o  Likewise, for any new DF Alg defined in the future, its\n      applicability/compatibility
      to/with the existing capabilities must\n      be assessed on a case-by-case
      basis.\n"
    - contents:
      - "2.2.1.  Backward Compatibility\n   Implementations that comply with [RFC7432]
        only (i.e.,\n   implementations that predate this specification) will not
        advertise\n   the DF Election Extended Community.  That means that all other\n
        \  participating PEs in the ES will not receive DF preferences and will\n
        \  revert to the default DF election algorithm without AC-DF.\n   Similarly,
        an implementation that complies with [RFC7432] only and\n   that receives
        a DF Election Extended Community will ignore it and\n   will continue to use
        the default DF election algorithm.\n"
      title: 2.2.1.  Backward Compatibility
    title: 2.2.  The DF Election Extended Community
  title: 2.  Designated Forwarder Election Protocol and BGP Extensions
- contents:
  - "3.  The Highest Random Weight DF Election Algorithm\n   The procedure discussed
    in this section is applicable to the DF\n   election in EVPN services [RFC7432]
    and the EVPN Virtual Private Wire\n   Service (VPWS) [RFC8214].\n   HRW as defined
    in [HRW1999] is originally proposed in the context of\n   Internet caching and
    proxy server load balancing.  Given an object\n   name and a set of servers, HRW
    maps a request to a server using the\n   object-name (object-id) and server-name
    (server-id) rather than the\n   server states.  HRW forms a hash out of the server-id
    and the\n   object-id and forms an ordered list of the servers for the particular\n
    \  object-id.  The server for which the hash value is highest serves as\n   the
    primary server responsible for that particular object, and the\n   server with
    the next-highest value in that hash serves as the backup\n   server.  HRW always
    maps a given object name to the same server\n   within a given cluster; consequently,
    it can be used at client sites\n   to achieve global consensus on object-to-server
    mappings.  When that\n   server goes down, the backup server becomes the responsible\n
    \  designate.\n   Choosing an appropriate hash function that is statistically
    oblivious\n   to the key distribution and imparts a good uniform distribution
    of\n   the hash output is an important aspect of the algorithm.\n   Fortunately,
    many such hash functions exist.  [HRW1999] provides\n   pseudorandom functions
    based on the Unix utilities rand and srand and\n   easily constructed XOR functions
    that satisfy the desired hashing\n   properties.  HRW already finds use in multicast
    and ECMP [RFC2991]\n   [RFC2992].\n"
  - contents:
    - "3.1.  HRW and Consistent Hashing\n   HRW is not the only algorithm that addresses
      the object-to-server\n   mapping problem with goals of fair load distribution,
      redundancy, and\n   fast access.  There is another family of algorithms that
      also\n   addresses this problem; these fall under the umbrella of the\n   Consistent
      Hashing Algorithms [CHASH].  These will not be considered\n   here.\n"
    title: 3.1.  HRW and Consistent Hashing
  - contents:
    - "3.2.  HRW Algorithm for EVPN DF Election\n   This section describes the application
      of HRW to DF election.  Let\n   DF(V) denote the DF and BDF(V) denote the BDF
      for the Ethernet Tag V;\n   Si is the IP address of PE i; Es is the ESI; and
      Weight is a function\n   of V, Si, and Es.\n   Note that while the DF election
      algorithm provided in [RFC7432] uses\n   a PE address and VLAN as inputs, this
      document uses an Ethernet Tag,\n   PE address, and ESI as inputs.  This is because
      if the same set of\n   PEs are multihomed to the same set of ESes, then the
      DF election\n   algorithm used in [RFC7432] would result in the same PE being
      elected\n   DF for the same set of BDs on each ES; this could have adverse\n
      \  side effects on both load balancing and redundancy.  Including an ESI\n   in
      the DF election algorithm introduces additional entropy, which\n   significantly
      reduces the probability of the same PE being elected DF\n   for the same set
      of BDs on each ES.  Therefore, when using the HRW\n   algorithm for EVPN DF
      election, the ESI value in the Weight function\n   below SHOULD be set to that
      of the corresponding ES.\n   In the case of a VLAN Bundle service, V denotes
      the lowest VLAN,\n   similar to the \"lowest VLAN in bundle\" logic of [RFC7432].\n
      \  1.  DF(V) = Si| Weight(V, Es, Si) >= Weight(V, Es, Sj), for all j.\n       In
      the case of a tie, choose the PE whose IP address is\n       numerically the
      least.  Note that 0 <= i,j < number of PEs in the\n       redundancy group.\n
      \  2.  BDF(V) = Sk| Weight(V, Es, Si) >= Weight(V, Es, Sk), and\n       Weight(V,
      Es, Sk) >= Weight(V, Es, Sj).  In the case of a tie,\n       choose the PE whose
      IP address is numerically the least.\n   Where:\n   o  DF(V) is defined to be
      the address Si (index i) for which\n      Weight(V, Es, Si) is the highest;
      0 <= i < N-1.\n   o  BDF(V) is defined as that PE with address Sk for which
      the\n      computed Weight is the next highest after the Weight of the DF.\n
      \     j is the running index from 0 to N-1; i and k are selected values.\n   Since
      the Weight is a pseudorandom function with the domain as the\n   three-tuple
      (V, Es, S), it is an efficient and deterministic\n   algorithm that is independent
      of the Ethernet Tag V sample space\n   distribution.  Choosing a good hash function
      for the pseudorandom\n   function is an important consideration for this algorithm
      to perform\n   better than the default algorithm.  As mentioned previously,
      such\n   functions are described in [HRW1999].  We take as a candidate hash\n
      \  function the first one out of the two that are listed as preferred in\n   [HRW1999]:\n
      \     Wrand(V, Es, Si) = (1103515245((1103515245.Si+12345) XOR\n      D(V, Es))+12345)(mod
      2^31)\n   Here, D(V, Es) is the 31-bit digest (CRC-32 and discarding the\n   most
      significant bit (MSB), as noted in [HRW1999]) of the 14-octet\n   stream (the
      4-octet Ethernet Tag V followed by the 10-octet ESI).  It\n   is mandated that
      the 14-octet stream be formed by the concatenation\n   of the Ethernet Tag and
      the ESI in network byte order.  The CRC\n   should proceed as if the stream
      is in network byte order\n   (big-endian).  Si is the address of the ith server.
      \ The server's\n   IP address length does not matter, as only the low-order
      31 bits are\n   modulo significant.\n   A point to note is that the Weight function
      takes into consideration\n   the combination of the Ethernet Tag, the ES, and
      the PE IP address,\n   and the actual length of the server IP address (whether
      IPv4 or IPv6)\n   is not really relevant.  The default algorithm defined in
      [RFC7432]\n   cannot employ both IPv4 and IPv6 PE addresses, since [RFC7432]
      does\n   not specify how to decide on the ordering (the ordinal list) when\n
      \  both IPv4 and IPv6 PEs are present.\n   HRW solves the disadvantages pointed
      out in Section 1.3.1 of this\n   document and ensures that:\n   o  With very
      high probability, the task of DF election for the VLANs\n      configured on
      an ES is more or less equally distributed among the\n      PEs, even in the
      case of two PEs (see the first fundamental\n      problem listed in Section
      1.3.1).\n   o  If a PE that is not the DF or the BDF for that VLAN goes down
      or\n      its connection to the ES goes down, it does not result in a DF or\n
      \     BDF reassignment.  This saves computation, especially in the case\n      when
      the connection flaps.\n   o  More importantly, it avoids the third fundamental
      problem listed\n      in Section 1.3.1 (needless disruption) that is inherent
      in the\n      existing default DF election.\n   o  In addition to the DF, the
      algorithm also furnishes the BDF, which\n      would be the DF if the current
      DF fails.\n"
    title: 3.2.  HRW Algorithm for EVPN DF Election
  title: 3.  The Highest Random Weight DF Election Algorithm
- contents:
  - "4.  The AC-Influenced DF Election Capability\n   The procedure discussed in this
    section is applicable to the DF\n   election in EVPN services [RFC7432] and EVPN
    VPWS [RFC8214].\n   The AC-DF capability is expected to be generally applicable
    to any\n   future DF algorithm.  It modifies the DF election procedures by\n   removing
    from consideration any candidate PE in the ES that cannot\n   forward traffic
    on the AC that belongs to the BD.  This section is\n   applicable to VLAN-based
    and VLAN Bundle service interfaces.\n   Section 4.1 describes the procedures for
    VLAN-aware Bundle service\n   interfaces.\n   In particular, when used with the
    default DF algorithm, the AC-DF\n   capability modifies Step 3 in the DF election
    procedure described in\n   [RFC7432], Section 8.5, as follows:\n   3. When the
    timer expires, each PE builds an ordered candidate list\n      of the IP addresses
    of all the PE nodes attached to the ES\n      (including itself), in increasing
    numeric value.  The candidate\n      list is based on the Originating Router's
    IP addresses of the ES\n      routes but excludes any PE from whom no Ethernet
    A-D per ES route\n      has been received or from whom the route has been withdrawn.\n
    \     Afterwards, the DF election algorithm is applied on a per\n      <ES, Ethernet
    Tag>; however, the IP address for a PE will not be\n      considered to be a candidate
    for a given <ES, Ethernet Tag> until\n      the corresponding Ethernet A-D per
    EVI route has been received\n      from that PE.  In other words, the ACS on the
    ES for a given PE\n      must be UP so that the PE is considered to be a candidate
    for a\n      given BD.\n      If the default DF algorithm is used, every PE in
    the resulting\n      candidate list is then given an ordinal indicating its position
    in\n      the ordered list, starting with 0 as the ordinal for the PE with\n      the
    numerically lowest IP address.  The ordinals are used to\n      determine which
    PE node will be the DF for a given Ethernet Tag on\n      the ES, using the following
    rule:\n      Assuming a redundancy group of N PE nodes, for VLAN-based service,\n
    \     the PE with ordinal i is the DF for an <ES, Ethernet Tag V> when\n      (V
    mod N) = i.  In the case of a VLAN (-aware) Bundle service,\n      then the numerically
    lowest VLAN value in that bundle on that ES\n      MUST be used in the modulo
    function as the Ethernet Tag.\n      It should be noted that using the Originating
    Router's IP Address\n      field [RFC7432] in the ES route to get the PE IP address
    needed\n      for the ordered list allows for a CE to be multihomed across\n      different
    Autonomous Systems (ASes) if such a need ever arises.\n   The modified Step 3,
    above, differs from [RFC7432], Section 8.5,\n   Step 3 in two ways:\n   o  Any
    DF Alg can be used -- not only the described modulus-based DF\n      Alg (referred
    to as the default DF election or \"DF Alg 0\" in this\n      document).\n   o
    \ The candidate list is pruned based upon non-receipt of Ethernet\n      A-D routes:
    a PE's IP address MUST be removed from the ES\n      candidate list if its Ethernet
    A-D per ES route is withdrawn.  A\n      PE's IP address MUST NOT be considered
    to be a candidate DF for an\n      <ES, Ethernet Tag> if its Ethernet A-D per
    EVI route for the\n      <ES, Ethernet Tag> is withdrawn.\n   The following example
    illustrates the AC-DF behavior applied to the\n   default DF election algorithm,
    assuming the network in Figure 2:\n   (a)  When PE1 and PE2 discover ES12, they
    advertise an ES route for\n        ES12 with the associated ES-Import Extended
    Community and the DF\n        Election Extended Community indicating AC-DF = 1;
    they start a\n        DF Wait timer (independently).  Likewise, PE2 and PE3 advertise\n
    \       an ES route for ES23 with AC-DF = 1 and start a DF Wait timer.\n   (b)
    \ PE1 and PE2 advertise an Ethernet A-D per ES route for ES12.\n        PE2 and
    PE3 advertise an Ethernet A-D per ES route for ES23.\n   (c)  In addition, PE1,
    PE2, and PE3 advertise an Ethernet A-D per EVI\n        route for AC1, AC2, AC3,
    and AC4 as soon as the ACs are enabled.\n        Note that the AC can be associated
    with a single customer VID\n        (e.g., VLAN-based service interfaces) or a
    bundle of customer\n        VIDs (e.g., VLAN Bundle service interfaces).\n   (d)
    \ When the timer expires, each PE builds an ordered candidate list\n        of
    the IP addresses of all the PE nodes attached to the ES\n        (including itself)
    as explained in the modified Step 3 above.\n        Any PE from which an Ethernet
    A-D per ES route has not been\n        received is pruned from the list.\n   (e)
    \ When electing the DF for a given BD, a PE will not be considered\n        to
    be a candidate until an Ethernet A-D per EVI route has been\n        received
    from that PE.  In other words, the ACS on the ES for a\n        given PE must
    be UP so that the PE is considered to be a\n        candidate for a given BD.
    \ For example, PE1 will not consider\n        PE2 as a candidate for DF election
    for <ES12, VLAN-1> until an\n        Ethernet A-D per EVI route is received from
    PE2 for\n        <ES12, VLAN-1>.\n   (f)  Once the PEs with ACS = DOWN for a given
    BD have been removed\n        from the candidate list, the DF election can be
    applied for the\n        remaining N candidates.\n   Note that this procedure
    only modifies the existing EVPN control\n   plane by adding and processing the
    DF Election Extended Community\n   and by pruning the candidate list of PEs that
    take part in the DF\n   election.\n   In addition to the events defined in the
    FSM in Section 2.1, the\n   following events SHALL modify the candidate PE list
    and trigger the\n   DF re-election in a PE for a given <ES, Ethernet Tag>.  In
    the FSM\n   shown in Figure 3, the events below MUST trigger a transition from\n
    \  DF_DONE to DF_CALC:\n   1.  Local AC going DOWN/UP.\n   2.  Reception of a
    new Ethernet A-D per EVI route update/withdrawal\n       for the <ES, Ethernet
    Tag>.\n   3.  Reception of a new Ethernet A-D per ES route update/withdrawal\n
    \      for the ES.\n"
  - contents:
    - "4.1.  AC-Influenced DF Election Capability for VLAN-Aware Bundle\n      Services\n
      \  The procedure described in Section 4 works for VLAN-based and VLAN\n   Bundle
      service interfaces because, for those service types, a PE\n   advertises only
      one Ethernet A-D per EVI route per <ES, VLAN> or\n   <ES, VLAN Bundle>.  In
      Section 4, an Ethernet Tag represents a given\n   VLAN or VLAN Bundle for the
      purpose of DF election.  The withdrawal\n   of such a route means that the PE
      cannot forward traffic on that\n   particular <ES, VLAN> or <ES, VLAN Bundle>;
      therefore, the PE can be\n   removed from consideration for DF election.\n   According
      to [RFC7432], in VLAN-aware Bundle services, the PE\n   advertises multiple
      Ethernet A-D per EVI routes per <ES, VLAN Bundle>\n   (one route per Ethernet
      Tag), while the DF election is still\n   performed per <ES, VLAN Bundle>.  The
      withdrawal of an individual\n   route only indicates the unavailability of a
      specific AC and not\n   necessarily all the ACs in the <ES, VLAN Bundle>.\n
      \  This document modifies the DF election for VLAN-aware Bundle services\n   in
      the following ways:\n   o  After confirming that all the PEs in the ES advertise
      the AC-DF\n      capability, a PE will perform a DF election per <ES, VLAN>,
      as\n      opposed to per <ES, VLAN Bundle> as described in [RFC7432].  Now,\n
      \     the withdrawal of an Ethernet A-D per EVI route for a VLAN will\n      indicate
      that the advertising PE's ACS is DOWN and the rest of the\n      PEs in the
      ES can remove the PE from consideration for DF election\n      in the <ES, VLAN>.\n
      \  o  The PEs will now follow the procedures in Section 4.\n   For example,
      assuming three bridge tables in PE1 for the same MAC-VRF\n   (each one associated
      with a different Ethernet Tag, e.g., VLAN-1,\n   VLAN-2, and VLAN-3), PE1 will
      advertise three Ethernet A-D per EVI\n   routes for ES12.  Each of the three
      routes will indicate the status\n   of each of the three ACs in ES12.  PE1 will
      be considered to be a\n   valid candidate PE for DF election in <ES12, VLAN-1>,
      <ES12, VLAN-2>,\n   and <ES12, VLAN-3> as long as its three routes are active.
      \ For\n   instance, if PE1 withdraws the Ethernet A-D per EVI routes for\n   <ES12,
      VLAN-1>, the PEs in ES12 will not consider PE1 as a suitable\n   DF candidate
      for <ES12, VLAN-1>.  PE1 will still be considered for\n   <ES12, VLAN-2> and
      <ES12, VLAN-3>, since its routes are active.\n"
    title: 4.1.  AC-Influenced DF Election Capability for VLAN-Aware Bundle
  title: 4.  The AC-Influenced DF Election Capability
- contents:
  - "5.  Solution Benefits\n   The solution described in this document provides the
    following\n   benefits:\n   (a)  It extends the DF election as defined in [RFC7432]
    to address\n        the unfair load balancing and potential black-holing issues
    with\n        the default DF election algorithm.  The solution is applicable\n
    \       to the DF election in EVPN services [RFC7432] and EVPN VPWS\n        [RFC8214].\n
    \  (b)  It defines a way to signal the DF election algorithm and\n        capabilities
    intended by the advertising PE.  This is done by\n        defining the DF Election
    Extended Community, which allows the\n        advertising PE to indicate its support
    for the capabilities\n        defined in this document as well as any subsequently
    defined DF\n        election algorithms or capabilities.\n   (c)  It is backwards
    compatible with the procedures defined in\n        [RFC7432].  If one or more
    PEs in the ES do not support the new\n        procedures, they will all follow
    DF election as defined in\n        [RFC7432].\n"
  title: 5.  Solution Benefits
- contents:
  - "6.  Security Considerations\n   This document addresses some identified issues
    in the DF election\n   procedures described in [RFC7432] by defining a new DF
    election\n   framework.  In general, this framework allows the PEs that are part\n
    \  of the same ES to exchange additional information and agree on the DF\n   election
    type and capabilities to be used.\n   By following the procedures in this document,
    the operator will\n   minimize such undesirable situations as unfair load balancing,\n
    \  service disruption, and traffic black-holing.  Because such\n   situations
    could be purposely created by a malicious user with access\n   to the configuration
    of one PE, this document also enhances the\n   security of the network.  Note
    that the network will not benefit from\n   the new procedures if the DF election
    algorithm is not consistently\n   configured on all the PEs in the ES (if there
    is no unanimity among\n   all the PEs, the DF election algorithm falls back to
    the default DF\n   election as provided in [RFC7432]).  This behavior could be
    exploited\n   by an attacker that manages to modify the configuration of one PE
    in\n   the ES so that the DF election algorithm and capabilities in all the\n
    \  PEs in the ES fall back to the default DF election.  If that is the\n   case,
    the PEs will be exposed to the unfair load balancing, service\n   disruption,
    and black-holing mentioned earlier.\n   In addition, the new framework is extensible
    and allows for new\n   security enhancements in the future.  Note that such enhancements
    are\n   out of scope for this document.  Finally, since this document extends\n
    \  the procedures in [RFC7432], the same security considerations as\n   those
    described in [RFC7432] are valid for this document.\n"
  title: 6.  Security Considerations
- contents:
  - "7.  IANA Considerations\n   IANA has:\n   o  Allocated Sub-Type value 0x06 in
    the \"EVPN Extended Community\n      Sub-Types\" registry defined in [RFC7153]
    as follows:\n      Sub-Type Value    Name                             Reference\n
    \     --------------    ------------------------------   -------------\n      0x06
    \             DF Election Extended Community   This document\n   o  Set up a registry
    called \"DF Alg\" for the DF Alg field in the\n      Extended Community.  New
    registrations will be made through the\n      \"RFC Required\" procedure defined
    in [RFC8126].  Value 31 is for\n      experimental use and does not require any
    other RFC than this\n      document.  The following initial values in that registry
    exist:\n      Alg         Name                               Reference\n      ----
    \       -----------------------------      -------------\n      0           Default
    DF Election                This document\n      1           HRW Algorithm                      This
    document\n      2-30        Unassigned\n      31          Reserved for Experimental
    Use      This document\n   o  Set up a registry called \"DF Election Capabilities\"
    for the\n      2-octet Bitmap field in the Extended Community.  New registrations\n
    \     will be made through the \"RFC Required\" procedure defined in\n      [RFC8126].
    \ The following initial value in that registry exists:\n      Bit         Name
    \                            Reference\n      ----        ----------------                 -------------\n
    \     0           Unassigned\n      1           AC-DF Capability                 This
    document\n      2-15        Unassigned\n"
  title: 7.  IANA Considerations
- contents:
  - '8.  References

    '
  - contents:
    - "8.1.  Normative References\n   [RFC7432]  Sajassi, A., Ed., Aggarwal, R., Bitar,
      N., Isaac, A.,\n              Uttaro, J., Drake, J., and W. Henderickx, \"BGP
      MPLS-Based\n              Ethernet VPN\", RFC 7432, DOI 10.17487/RFC7432,\n
      \             February 2015, <https://www.rfc-editor.org/info/rfc7432>.\n   [RFC8214]
      \ Boutros, S., Sajassi, A., Salam, S., Drake, J., and J.\n              Rabadan,
      \"Virtual Private Wire Service Support in Ethernet\n              VPN\", RFC
      8214, DOI 10.17487/RFC8214, August 2017,\n              <https://www.rfc-editor.org/info/rfc8214>.\n
      \  [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement
      Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n
      \             <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC8174]  Leiba,
      B., \"Ambiguity of Uppercase vs Lowercase in\n              RFC 2119 Key Words\",
      BCP 14, RFC 8174,\n              DOI 10.17487/RFC8174, May 2017,\n              <https://www.rfc-editor.org/info/rfc8174>.\n
      \  [RFC4360]  Sangli, S., Tappan, D., and Y. Rekhter, \"BGP Extended\n              Communities
      Attribute\", RFC 4360, DOI 10.17487/RFC4360,\n              February 2006, <https://www.rfc-editor.org/info/rfc4360>.\n
      \  [RFC7153]  Rosen, E. and Y. Rekhter, \"IANA Registries for BGP\n              Extended
      Communities\", RFC 7153, DOI 10.17487/RFC7153,\n              March 2014, <https://www.rfc-editor.org/info/rfc7153>.\n
      \  [RFC8126]  Cotton, M., Leiba, B., and T. Narten, \"Guidelines for\n              Writing
      an IANA Considerations Section in RFCs\", BCP 26,\n              RFC 8126, DOI
      10.17487/RFC8126, June 2017,\n              <https://www.rfc-editor.org/info/rfc8126>.\n"
    title: 8.1.  Normative References
  - contents:
    - "8.2.  Informative References\n   [VPLS-MH]  Kothari, B., Kompella, K., Henderickx,
      W., Balus, F., and\n              J. Uttaro, \"BGP based Multi-homing in Virtual
      Private LAN\n              Service\", Work in Progress,\n              draft-ietf-bess-vpls-multihoming-03,
      March 2019.\n   [CHASH]    Karger, D., Lehman, E., Leighton, T., Panigrahy,
      R.,\n              Levine, M., and D. Lewin, \"Consistent Hashing and Random\n
      \             Trees: Distributed Caching Protocols for Relieving Hot\n              Spots
      on the World Wide Web\", ACM Symposium on Theory of\n              Computing,
      ACM Press, New York, DOI 10.1145/258533.258660,\n              May 1997.\n   [CLRS2009]
      Cormen, T., Leiserson, C., Rivest, R., and C. Stein,\n              \"Introduction
      to Algorithms (3rd Edition)\", MIT\n              Press, ISBN 0-262-03384-8,
      2009.\n   [RFC2991]  Thaler, D. and C. Hopps, \"Multipath Issues in Unicast
      and\n              Multicast Next-Hop Selection\", RFC 2991,\n              DOI
      10.17487/RFC2991, November 2000,\n              <https://www.rfc-editor.org/info/rfc2991>.\n
      \  [RFC2992]  Hopps, C., \"Analysis of an Equal-Cost Multi-Path\n              Algorithm\",
      RFC 2992, DOI 10.17487/RFC2992, November 2000,\n              <https://www.rfc-editor.org/info/rfc2992>.\n
      \  [RFC4456]  Bates, T., Chen, E., and R. Chandra, \"BGP Route\n              Reflection:
      An Alternative to Full Mesh Internal BGP\n              (IBGP)\", RFC 4456,
      DOI 10.17487/RFC4456, April 2006,\n              <https://www.rfc-editor.org/info/rfc4456>.\n
      \  [HRW1999]  Thaler, D. and C. Ravishankar, \"Using Name-Based Mappings\n              to
      Increase Hit Rates\", IEEE/ACM Transactions on\n              Networking, Volume
      6, No. 1, February 1998,\n              <https://www.microsoft.com/en-us/research/wp-content/\n
      \             uploads/2017/02/HRW98.pdf>.\n   [Knuth]    Knuth, D., \"The Art
      of Computer Programming: Volume 3:\n              Sorting and Searching\", 2nd
      Edition, Addison-Wesley,\n              Page 516, 1998.\n"
    title: 8.2.  Informative References
  title: 8.  References
- contents:
  - "Acknowledgments\n   The authors want to thank Ranganathan Boovaraghavan, Sami
    Boutros,\n   Luc Andre Burdet, Anoop Ghanwani, Mrinmoy Ghosh, Jakob Heitz, Leo\n
    \  Mermelstein, Mankamana Mishra, Tamas Mondal, Laxmi Padakanti, Samir\n   Thoria,
    and Sriram Venkateswaran for their review and contributions.\n   Special thanks
    to Stephane Litkowski for his thorough review and\n   detailed contributions.\n
    \  They would also like to thank their working group chairs, Matthew\n   Bocci
    and Stephane Litkowski, and their AD, Martin Vigoureux, for\n   their guidance
    and support.\n   Finally, they would like to thank the Directorate reviewers and
    the\n   ADs for their thorough reviews and probing questions, the answers to\n
    \  which have substantially improved the quality of the document.\n"
  title: Acknowledgments
- contents:
  - "Contributors\n   The following people have contributed substantially to this
    document\n   and should be considered coauthors:\n   Antoni Przygienda\n   Juniper
    Networks, Inc.\n   1194 N. Mathilda Ave.\n   Sunnyvale, CA  94089\n   United States
    of America\n   Email: prz@juniper.net\n   Vinod Prabhu\n   Nokia\n   Email: vinod.prabhu@nokia.com\n
    \  Wim Henderickx\n   Nokia\n   Email: wim.henderickx@nokia.com\n   Wen Lin\n
    \  Juniper Networks, Inc.\n   Email: wlin@juniper.net\n   Patrice Brissette\n
    \  Cisco Systems\n   Email: pbrisset@cisco.com\n   Keyur Patel\n   Arrcus, Inc.\n
    \  Email: keyur@arrcus.com\n   Autumn Liu\n   Ciena\n   Email: hliu@ciena.com\n"
  title: Contributors
- contents:
  - "Authors' Addresses\n   Jorge Rabadan (editor)\n   Nokia\n   777 E. Middlefield
    Road\n   Mountain View, CA  94043\n   United States of America\n   Email: jorge.rabadan@nokia.com\n
    \  Satya Mohanty (editor)\n   Cisco Systems, Inc.\n   225 West Tasman Drive\n
    \  San Jose, CA  95134\n   United States of America\n   Email: satyamoh@cisco.com\n
    \  Ali Sajassi\n   Cisco Systems, Inc.\n   225 West Tasman Drive\n   San Jose,
    CA  95134\n   United States of America\n   Email: sajassi@cisco.com\n   John Drake\n
    \  Juniper Networks, Inc.\n   1194 N. Mathilda Ave.\n   Sunnyvale, CA  94089\n
    \  United States of America\n   Email: jdrake@juniper.net\n   Kiran Nagaraj\n
    \  Nokia\n   701 E. Middlefield Road\n   Mountain View, CA  94043\n   United States
    of America\n   Email: kiran.nagaraj@nokia.com\n   Senthil Sathappan\n   Nokia\n
    \  701 E. Middlefield Road\n   Mountain View, CA  94043\n   United States of America\n
    \  Email: senthil.sathappan@nokia.com\n"
  title: Authors' Addresses
