- title: __initial_text__
  contents:
  - "    Definition of the Differentiated Services Field (DS Field)\n            \
    \          in the IPv4 and IPv6 Headers\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   Differentiated services enhancements to the Internet protocol are\n\
    \   intended to enable scalable service discrimination in the Internet\n   without\
    \ the need for per-flow state and signaling at every hop.  A\n   variety of services\
    \ may be built from a small, well-defined set of\n   building blocks which are\
    \ deployed in network nodes.  The services\n   may be either end-to-end or intra-domain;\
    \ they include both those\n   that can satisfy quantitative performance requirements\
    \ (e.g., peak\n   bandwidth) and those based on relative performance (e.g., \"\
    class\"\n   differentiation).  Services can be constructed by a combination of:\n\
    \   - setting bits in an IP header field at network boundaries\n     (autonomous\
    \ system boundaries, internal administrative boundaries,\n     or hosts),\n  \
    \ - using those bits to determine how packets are forwarded by the\n     nodes\
    \ inside the network, and\n   - conditioning the marked packets at network boundaries\
    \ in accordance\n     with the requirements or rules of each service.\n   The\
    \ requirements or rules of each service must be set through\n   administrative\
    \ policy mechanisms which are outside the scope of this\n   document.  A differentiated\
    \ services-compliant network node includes\n   a classifier that selects packets\
    \ based on the value of the DS field,\n   along with buffer management and packet\
    \ scheduling mechanisms capable\n   of delivering the specific packet forwarding\
    \ treatment indicated by\n   the DS field value.  Setting of the DS field and\
    \ conditioning of the\n   temporal behavior of marked packets need only be performed\
    \ at network\n   boundaries and may vary in complexity.\n   This document defines\
    \ the IP header field, called the DS (for\n   differentiated services) field.\
    \  In IPv4, it defines the layout of\n   the TOS octet; in IPv6, the Traffic Class\
    \ octet.  In addition, a base\n   set of packet forwarding treatments, or per-hop\
    \ behaviors, is\n   defined.\n   For a more complete understanding of differentiated\
    \ services, see\n   also the differentiated services architecture [ARCH].\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction .................................................\
    \  3\n   2.  Terminology Used in This Document ............................  5\n\
    \   3.  Differentiated Services Field Definition .....................  7\n  \
    \ 4.  Historical Codepoint Definitions and PHB Requirements ........  9\n    \
    \ 4.1  A Default PHB .............................................  9\n     4.2\
    \  Once and Future IP Precedence Field Use ................... 10\n       4.2.1\
    \  IP Precedence History and Evolution in Brief .......... 10\n       4.2.2  Subsuming\
    \ IP Precedence into Class Selector  .......... 11\n              Codepoints\n\
    \         4.2.2.1  The Class Selector Codepoints ..................... 11\n  \
    \       4.2.2.2  The Class Selector PHB Requirements ............... 11\n    \
    \     4.2.2.3  Using the Class Selector PHB Requirements ......... 12\n      \
    \            for IP Precedence Compatibility\n         4.2.2.4  Example Mechanisms\
    \ for Implementing Class ......... 12\n                  Selector Compliant PHB\
    \ Groups\n     4.3  Summary ...................................................\
    \ 13\n   5.  Per-Hop Behavior Standardization Guidelines .................. 13\n\
    \   6.  IANA Considerations .......................................... 14\n  \
    \ 7.  Security Considerations ...................................... 15\n    \
    \ 7.1  Theft and Denial of Service ............................... 15\n     7.2\
    \  IPsec and Tunneling Interactions .......................... 16\n   8.  Acknowledgments\
    \ .............................................. 17\n   9.  References ...................................................\
    \ 17\n   Authors' Addresses ............................................... 19\n\
    \   Full Copyright Statement ......................................... 20\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Differentiated services are intended  to provide a framework\
    \ and\n   building blocks to enable deployment of scalable service\n   discrimination\
    \ in the Internet.  The differentiated services approach\n   aims to speed deployment\
    \ by separating the architecture into two\n   major components, one of which is\
    \ fairly well-understood and the\n   other of which is just beginning to be understood.\
    \  In this, we are\n   guided by the original design of the Internet where the\
    \ decision was\n   made to separate the forwarding and routing components.  Packet\n\
    \   forwarding is the relatively simple task that needs to be performed\n   on\
    \ a per-packet basis as quickly as possible.  Forwarding uses the\n   packet header\
    \ to find an entry in a routing table that determines the\n   packet's output\
    \ interface.  Routing sets the entries in that table\n   and may need to reflect\
    \ a range of transit and other policies as well\n   as to keep track of route\
    \ failures.  Routing tables are maintained as\n   a background process to the\
    \ forwarding task.  Further, routing is the\n   more complex task and it has continued\
    \ to evolve over the past 20\n   years.\n   Analogously, the differentiated services\
    \ architecture contains two\n   main components.  One is the fairly well-understood\
    \ behavior in the\n   forwarding path and the other is the more complex and still\
    \ emerging\n   background policy and allocation component that configures parameters\n\
    \   used in the forwarding path.  The forwarding path behaviors include\n   the\
    \ differential treatment an individual packet receives, as\n   implemented by\
    \ queue service disciplines and/or queue management\n   disciplines.  These per-hop\
    \ behaviors are useful and required in\n   network nodes to deliver differentiated\
    \ treatment of packets no\n   matter how we construct end-to-end or intra-domain\
    \ services.  Our\n   focus is on the general semantics of the behaviors rather\
    \ than the\n   specific mechanisms used to implement them since these behaviors\
    \ will\n   evolve less rapidly than the mechanisms.\n   Per-hop behaviors and\
    \ mechanisms to select them on a per-packet basis\n   can be deployed in network\
    \ nodes today and it is this aspect of the\n   differentiated services architecture\
    \ that is being addressed first.\n   In addition, the forwarding path may require\
    \ that some monitoring,\n   policing, and shaping be done on the network traffic\
    \ designated for\n   \"special\" treatment in order to enforce requirements associated\
    \ with\n   the delivery of the special treatment.  Mechanisms for this kind of\n\
    \   traffic conditioning are also fairly well-understood.  The wide\n   deployment\
    \ of such traffic conditioners is also important to enable\n   the construction\
    \ of services, though their actual use in constructing\n   services may evolve\
    \ over time.\n   The configuration of network elements with respect to which packets\n\
    \   get special treatment and what kinds of rules are to be applied to\n   the\
    \ use of resources is much less well-understood.  Nevertheless, it\n   is possible\
    \ to deploy useful differentiated services in networks by\n   using simple policies\
    \ and static configurations.  As described in\n   [ARCH], there are a number of\
    \ ways to compose per-hop behaviors and\n   traffic conditioners to create services.\
    \  In the process, additional\n   experience is gained that will guide more complex\
    \ policies and\n   allocations.  The basic behaviors in the forwarding path can\
    \ remain\n   the same while this component of the architecture evolves.\n   Experiences\
    \ with the construction of such services will continue for\n   some time, thus\
    \ we avoid standardizing this construction as it is\n   premature.  Further, much\
    \ of the details of service construction are\n   covered by legal agreements between\
    \ different business entities and\n   we avoid this as it is very much outside\
    \ the scope of the IETF.\n   This document concentrates on the forwarding path\
    \ component.  In the\n   packet forwarding path, differentiated services are realized\
    \ by\n   mapping the codepoint contained in a field in the IP packet header to\n\
    \   a particular forwarding treatment, or per-hop behavior (PHB), at each\n  \
    \ network node along its path.  The codepoints may be chosen from a set\n   of\
    \ mandatory values defined later in this document, from a set of\n   recommended\
    \ values to be defined in future documents, or may have\n   purely local meaning.\
    \  PHBs are expected to be implemented by\n   employing a range of queue service\
    \ and/or queue management\n   disciplines on a network node's output interface\
    \ queue: for example\n   weighted round-robin (WRR) queue servicing or drop-preference\
    \ queue\n   management.\n   Marking is performed by traffic conditioners at network\
    \ boundaries,\n   including the edges of the network (first-hop router or source\
    \ host)\n   and administrative boundaries.  Traffic conditioners may include the\n\
    \   primitives of marking, metering, policing and shaping (these\n   mechanisms\
    \ are described in [ARCH]).  Services are realized by the\n   use of particular\
    \ packet classification and traffic conditioning\n   mechanisms at boundaries\
    \ coupled with the concatenation of per-hop\n   behaviors along the transit path\
    \ of the traffic.  A goal of the\n   differentiated services architecture is to\
    \ specify these building\n   blocks for future extensibility, both of the number\
    \ and type of the\n   building blocks and of the services built from them.\n \
    \  Terminology used in this memo is defined in Sec. 2.  The\n   differentiated\
    \ services field definition (DS field) is given in Sec.\n   3.  In Sec. 4, we\
    \ discuss the desire for partial backwards\n   compatibility with current use\
    \ of the IPv4 Precedence field.  As a\n   solution, we introduce Class Selector\
    \ Codepoints and Class Selector\n   Compliant PHBs.  Sec. 5 presents guidelines\
    \ for per-hop behavior\n   standardization.  Sec. 6 discusses guidelines for allocation\
    \ of\n   codepoints.  Sec. 7 covers security considerations.\n   This document\
    \ is a concise description of the DS field and its uses.\n   It is intended to\
    \ be read along with the differentiated services\n   architecture [ARCH].\n  \
    \ The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\"\
    ,\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",  \"MAY\", and \"OPTIONAL\"\
    \ in this\n   document are to be interpreted as described in [RFC2119].\n"
- title: 2.  Terminology Used in This Document
  contents:
  - "2.  Terminology Used in This Document\n   Behavior Aggregate: a collection of\
    \ packets with the same codepoint\n   crossing a link in a particular direction.\
    \  The terms \"aggregate\" and\n   \"behavior aggregate\" are used interchangeably\
    \ in this document.\n   Classifier: an entity which selects packets based on the\
    \ content of\n   packet headers according to defined rules.\n   Class Selector\
    \ Codepoint: any of the eight codepoints in the range '\n   xxx000' (where 'x'\
    \ may equal '0' or '1').  Class Selector Codepoints\n   are discussed in Sec.\
    \ 4.2.2.\n   Class Selector Compliant PHB: a per-hop behavior satisfying the Class\n\
    \   Selector PHB Requirements specified in Sec. 4.2.2.2.\n   Codepoint: a specific\
    \ value of the DSCP portion of the DS field.\n   Recommended codepoints SHOULD\
    \ map to specific, standardized PHBs.\n   Multiple codepoints MAY map to the same\
    \ PHB.\n   Differentiated Services Boundary: the edge of a DS domain, where\n\
    \   classifiers and traffic conditioners are likely to be deployed.  A\n   differentiated\
    \ services boundary can be further sub-divided into\n   ingress and egress nodes,\
    \ where the ingress/egress nodes are the\n   downstream/upstream nodes of a boundary\
    \ link in a given traffic\n   direction.  A differentiated services boundary typically\
    \ is found at\n   the ingress to the first-hop differentiated services-compliant\
    \ router\n   (or network node) that a host's packets traverse, or at the egress\
    \ of\n   the last-hop differentiated services-compliant router or network node\n\
    \   that packets traverse before arriving at a host.  This is sometimes\n   referred\
    \ to as the boundary at a leaf router.  A differentiated\n   services boundary\
    \ may be co-located with a host, subject to local\n   policy.  Also DS boundary.\n\
    \   Differentiated Services-Compliant: in compliance with the\n   requirements\
    \ specified in this document.  Also DS-compliant.\n   Differentiated Services\
    \ Domain: a contiguous portion of the Internet\n   over which a consistent set\
    \ of differentiated services policies are\n   administered in a coordinated fashion.\
    \  A differentiated services\n   domain can represent different administrative\
    \ domains or autonomous\n   systems, different trust regions, different network\
    \ technologies\n   (e.g., cell/frame), hosts and routers, etc.  Also DS domain.\n\
    \   Differentiated Services Field: the IPv4 header TOS octet or the IPv6\n   Traffic\
    \ Class octet when interpreted in conformance with the\n   definition given in\
    \ this document.  Also DS field.\n   Mechanism:  The implementation of one or\
    \ more per-hop behaviors\n   according to a particular algorithm.\n   Microflow:\
    \ a single instance of an application-to-application flow of\n   packets which\
    \ is identified by source address, destination address,\n   protocol id, and source\
    \ port, destination port (where applicable).\n   Per-hop Behavior (PHB): a description\
    \ of the externally observable\n   forwarding treatment applied at a differentiated\
    \ services-compliant\n   node to a behavior aggregate.  The description of a PHB\
    \ SHOULD be\n   sufficiently detailed to allow the construction of predictable\n\
    \   services, as documented in [ARCH].\n   Per-hop Behavior Group: a set of one\
    \ or more PHBs that can only be\n   meaningfully specified and implemented simultaneously,\
    \ due to a\n   common constraint applying to all PHBs in the set such as a queue\n\
    \   servicing or queue management policy.  Also PHB Group.\n   Traffic Conditioning:\
    \ control functions that can be applied to a\n   behavior aggregate, application\
    \ flow, or other operationally useful\n   subset of traffic, e.g., routing updates.\
    \  These MAY include\n   metering, policing, shaping, and packet marking.  Traffic\n\
    \   conditioning is used to enforce agreements between domains and to\n   condition\
    \ traffic to receive a differentiated service within a domain\n   by marking packets\
    \ with the appropriate codepoint in the DS field and\n   by monitoring and altering\
    \ the temporal characteristics of the\n   aggregate where necessary.  See [ARCH].\n\
    \   Traffic Conditioner: an entity that performs traffic conditioning\n   functions\
    \ and which MAY contain meters, policers, shapers, and\n   markers.  Traffic conditioners\
    \ are typically deployed in DS boundary\n   nodes (i.e., not in interior nodes\
    \ of a DS domain).\n   Service: a description of the overall treatment of (a subset\
    \ of) a\n   customer's traffic across a particular domain, across a set of\n \
    \  interconnected DS domains, or end-to-end.  Service descriptions are\n   covered\
    \ by administrative policy and services are constructed by\n   applying traffic\
    \ conditioning to create behavior aggregates which\n   experience a known PHB\
    \ at each node within the DS domain.  Multiple\n   services can be supported by\
    \ a single per-hop behavior used in\n   concert with a range of traffic conditioners.\n\
    \   To summarize, classifiers and traffic conditioners are used to select\n  \
    \ which packets are to be added to behavior aggregates.  Aggregates\n   receive\
    \ differentiated treatment in a DS domain and traffic\n   conditioners MAY alter\
    \ the temporal characteristics of the aggregate\n   to conform to some requirements.\
    \  A packet's DS field is used to\n   designate the packet's behavior aggregate\
    \ and is subsequently used to\n   determine which forwarding treatment the packet\
    \ receives.  A behavior\n   aggregate classifier which can select a PHB, for example\
    \ a\n   differential output queue servicing discipline, based on the\n   codepoint\
    \ in the DS field SHOULD be included in all network nodes in\n   a DS domain.\
    \  The classifiers and traffic conditioners at DS\n   boundaries are configured\
    \ in accordance with some service\n   specification, a matter of administrative\
    \ policy outside the scope of\n   this document.\n   Additional differentiated\
    \ services definitions are given in [ARCH].\n"
- title: 3.  Differentiated Services Field Definition
  contents:
  - "3.  Differentiated Services Field Definition\n   A replacement header field,\
    \ called the DS field, is defined, which is\n   intended to supersede the existing\
    \ definitions of the IPv4 TOS octet\n   [RFC791] and the IPv6 Traffic Class octet\
    \ [IPv6].\n   Six bits of the DS field are used as a codepoint (DSCP) to select\
    \ the\n   PHB a packet experiences at each node.  A two-bit currently unused\n\
    \   (CU) field is reserved and its definition and interpretation are\n   outside\
    \ the scope of this document.  The value of the CU bits are\n   ignored by differentiated\
    \ services-compliant nodes when determining\n   the per-hop behavior to apply\
    \ to a received packet.\n   The DS field structure is presented below:\n     \
    \   0   1   2   3   4   5   6   7\n      +---+---+---+---+---+---+---+---+\n \
    \     |         DSCP          |  CU   |\n      +---+---+---+---+---+---+---+---+\n\
    \        DSCP: differentiated services codepoint\n        CU:   currently unused\n\
    \   In a DSCP value notation 'xxxxxx' (where 'x' may equal '0' or '1')\n   used\
    \ in this document, the left-most bit signifies bit 0 of the DS\n   field (as\
    \ shown above), and the right-most bit signifies bit 5.\n   Implementors should\
    \ note that the DSCP field is six bits wide.  DS-\n   compliant nodes MUST select\
    \ PHBs by matching against the entire 6-bit\n   DSCP field, e.g., by treating\
    \ the value of the field as a table index\n   which is used to select a particular\
    \ packet handling mechanism which\n   has been implemented in that device.  The\
    \ value of the CU field MUST\n   be ignored by PHB selection.  The DSCP field\
    \ is defined as an\n   unstructured field to facilitate the definition of future\
    \ per-hop\n   behaviors.\n   With some exceptions noted below, the mapping of\
    \ codepoints to PHBs\n   MUST be configurable.  A DS-compliant node MUST support\
    \ the logical\n   equivalent of a configurable mapping table from codepoints to\
    \ PHBs.\n   PHB specifications MUST include a recommended default codepoint,\n\
    \   which MUST be unique for codepoints in the standard space (see Sec.\n   6).\
    \  Implementations should support the recommended codepoint-to-PHB\n   mappings\
    \ in their default configuration.  Operators may choose to use\n   different codepoints\
    \ for a PHB, either in addition to or in place of\n   the recommended default.\
    \  Note that if operators do so choose, re-\n   marking of DS fields may be necessary\
    \ at administrative boundaries\n   even if the same PHBs are implemented on both\
    \ sides of the boundary.\n   See [ARCH] for further discussion of re-marking.\n\
    \   The exceptions to general configurability are for codepoints 'xxx000'\n  \
    \ and are noted in Secs. 4.2.2 and 4.3.\n   Packets received with an unrecognized\
    \ codepoint SHOULD be forwarded\n   as if they were marked for the Default behavior\
    \ (see Sec. 4), and\n   their codepoints should not be changed.  Such packets\
    \ MUST NOT cause\n   the network node to malfunction.\n   The structure of the\
    \ DS field shown above is incompatible with the\n   existing definition of the\
    \ IPv4 TOS octet in [RFC791].  The\n   presumption is that DS domains protect\
    \ themselves by deploying re-\n   marking boundary nodes, as should networks using\
    \ the RFC 791\n   Precedence designations.  Correct operational procedure SHOULD\
    \ follow\n   [RFC791], which states: \"If the actual use of these precedence\n\
    \   designations is of concern to a particular network, it is the\n   responsibility\
    \ of that network to control the access to, and use of,\n   those precedence designations.\"\
    \  Validating the value of the DS field\n   at DS boundaries is sensible in any\
    \ case since an upstream node can\n   easily set it to any arbitrary value.  DS\
    \ domains that are not\n   isolated by suitably configured boundary nodes may\
    \ deliver\n   unpredictable service.\n   Nodes MAY rewrite the DS field as needed\
    \ to provide a desired local\n   or end-to-end service.  Specifications of DS\
    \ field translations at DS\n   boundaries are the subject of service level agreements\
    \ between\n   providers and users, and are outside the scope of this document.\n\
    \   Standardized PHBs allow providers to build their services from a\n   well-known\
    \ set of packet forwarding treatments that can be expected\n   to be present in\
    \ the equipment of many vendors.\n"
- title: 4.  Historical Codepoint Definitions and PHB Requirements
  contents:
  - "4.  Historical Codepoint Definitions and PHB Requirements\n   The DS field will\
    \ have a limited backwards compatibility with current\n   practice, as described\
    \ in this section.  Backwards compatibility is\n   addressed in two ways.  First,\
    \ there are per-hop behaviors that are\n   already in widespread use (e.g., those\
    \ satisfying the IPv4 Precedence\n   queueing requirements specified in [RFC1812]),\
    \ and we wish to permit\n   their continued use in DS-compliant nodes.  In addition,\
    \ there are\n   some codepoints that correspond to historical use of the IP\n\
    \   Precedence field and we reserve these codepoints to map to PHBs that\n   meet\
    \ the general requirements specified in Sec. 4.2.2.2, though the\n   specific\
    \ differentiated services PHBs mapped to by those codepoints\n   MAY have additional\
    \ specifications.\n   No attempt is made to maintain backwards compatibility with\
    \ the \"DTR\"\n   or TOS bits of the IPv4 TOS octet, as defined in [RFC791].\n"
- title: 4.1  A Default PHB
  contents:
  - "4.1  A Default PHB\n   A \"default\" PHB MUST be available in a DS-compliant\
    \ node.  This is\n   the common, best-effort forwarding behavior available in\
    \ existing\n   routers as standardized in [RFC1812].  When no other agreements\
    \ are\n   in place, it is assumed that packets belong to this aggregate.  Such\n\
    \   packets MAY be sent into a network without adhering to any particular\n  \
    \ rules and the network will deliver as many of these packets as\n   possible\
    \ and as soon as possible, subject to other resource policy\n   constraints. \
    \ A reasonable implementation of this PHB would be a\n   queueing discipline that\
    \ sends packets of this aggregate whenever the\n   output link is not required\
    \ to satisfy another PHB.  A reasonable\n   policy for constructing services would\
    \ ensure that the aggregate was\n   not \"starved\".  This could be enforced by\
    \ a mechanism in each node\n   that reserves some minimal resources (e.g, buffers,\
    \ bandwidth) for\n   Default behavior aggregates.  This permits senders that are\
    \ not\n   differentiated services-aware to continue to use the network in the\n\
    \   same manner as today.  The impact of the introduction of\n   differentiated\
    \ services into a domain on the service expectations of\n   its customers and\
    \ peers is a complex matter involving policy\n   decisions by the domain and is\
    \ outside the scope of this document.\n   The RECOMMENDED codepoint for the Default\
    \ PHB is the bit pattern '\n   000000'; the value '000000' MUST map to a PHB that\
    \ meets these\n   specifications.  The codepoint chosen for Default behavior is\n\
    \   compatible with existing practice [RFC791].  Where a codepoint is not\n  \
    \ mapped to a standardized or local use PHB, it SHOULD be mapped to the\n   Default\
    \ PHB.\n   A packet initially marked for the Default behavior MAY be re-marked\n\
    \   with another codepoint as it passes a boundary into a DS domain so\n   that\
    \ it will be forwarded using a different PHB within that domain,\n   possibly\
    \ subject to some negotiated agreement between the peering\n   domains.\n"
- title: 4.2  Once and Future IP Precedence Field Use
  contents:
  - "4.2  Once and Future IP Precedence Field Use\n   We wish to maintain some form\
    \ of backward compatibility with present\n   uses of the IP Precedence Field:\
    \ bits 0-2 of the IPv4 TOS octet.\n   Routers exist that use the IP Precedence\
    \ field to select different\n   per-hop forwarding treatments in a similar way\
    \ to the use proposed\n   here for the DSCP field.  Thus, a simple prototype differentiated\n\
    \   services architecture can be quickly deployed by appropriately\n   configuring\
    \ these routers.  Further, IP systems today understand the\n   location of the\
    \ IP Precedence field, and thus if these bits are used\n   in a similar manner\
    \ as DS-compliant equipment is deployed,\n   significant failures are not likely\
    \ during early deployment.  In\n   other words, strict DS-compliance need not\
    \ be ubiquitous even within\n   a single service provider's network if bits 0-2\
    \ of the DSCP field are\n   employed in a manner similar to, or subsuming, the\
    \ deployed uses of\n   the IP Precedence field.\n"
- title: 4.2.1  IP Precedence History and Evolution in Brief
  contents:
  - "4.2.1  IP Precedence History and Evolution in Brief\n   The IP Precedence field\
    \ is something of a forerunner of the DS field.\n   IP Precedence, and the IP\
    \ Precedence Field, were first defined in\n   [RFC791].  The values that the three-bit\
    \ IP Precedence Field might\n   take were assigned to various uses, including\
    \ network control\n   traffic, routing traffic, and various levels of privilege.\
    \  The least\n   level of privilege was deemed \"routine traffic\".  In [RFC791],\
    \ the\n   notion of Precedence was defined broadly as \"An independent measure\n\
    \   of the importance of this datagram.\"  Not all values of the IP\n   Precedence\
    \ field were assumed to have meaning across boundaries, for\n   instance \"The\
    \ Network Control precedence designation is intended to\n   be used within a network\
    \ only.  The actual use and control of that\n   designation is up to each network.\"\
    \ [RFC791]\n   Although early BBN IMPs implemented the Precedence feature, early\n\
    \   commercial routers and UNIX IP forwarding code generally did not.  As\n  \
    \ networks became more complex and customer requirements grew,\n   commercial\
    \ router vendors developed ways to implement various kinds\n   of queueing services\
    \ including priority queueing, which were\n   generally based on policies encoded\
    \ in filters in the routers, which\n   examined IP addresses, IP protocol numbers,\
    \ TCP or UDP ports, and\n   other header fields.  IP Precedence was and is among\
    \ the options such\n   filters can examine.\n   In short, IP Precedence is widely\
    \ deployed and widely used, if not in\n   exactly the manner intended in [RFC791].\
    \  This was recognized in\n   [RFC1122], which states that while the use of the\
    \ IP Precedence field\n   is valid, the specific assignment of the priorities\
    \ in [RFC791] were\n   merely historical.\n"
- title: 4.2.2  Subsuming IP Precedence into Class Selector Codepoints
  contents:
  - "4.2.2  Subsuming IP Precedence into Class Selector Codepoints\n   A specification\
    \ of the packet forwarding treatments selected by the\n   IP Precedence field\
    \ today would have to be quite general; probably\n   not specific enough to build\
    \ predictable services from in the\n   differentiated services framework.  To\
    \ preserve partial backwards\n   compatibility with known current uses of the\
    \ IP Precedence field\n   without sacrificing future flexibility, we have taken\
    \ the approach of\n   describing minimum requirements on a set of PHBs that are\
    \ compatible\n   with most of the deployed forwarding treatments selected by the\
    \ IP\n   Precedence field.  In addition, we give a set of codepoints that MUST\n\
    \   map to PHBs meeting these minimum requirements.  The PHBs mapped to\n   by\
    \ these codepoints MAY have a more detailed list of specifications\n   in addition\
    \ to the required ones stated here.  Other codepoints MAY\n   map to these same\
    \ PHBs.  We refer to this set of codepoints as the\n   Class Selector Codepoints,\
    \ and the minimum requirements for PHBs that\n   these codepoints may map to are\
    \ called the Class Selector PHB\n   Requirements.\n"
- title: 4.2.2.1  The Class Selector Codepoints
  contents:
  - "4.2.2.1  The Class Selector Codepoints\n   A specification of the packet forwarding\
    \ treatments selected by the\n   The DS field values of 'xxx000|xx', or DSCP =\
    \ 'xxx000' and CU\n   subfield unspecified, are reserved as a set of Class Selector\n\
    \   Codepoints.  PHBs which are mapped to by these codepoints MUST\n   satisfy\
    \ the Class Selector PHB requirements in addition to preserving\n   the Default\
    \ PHB requirement on codepoint '000000' (Sec. 4.1).\n"
- title: 4.2.2.2  The Class Selector PHB Requirements
  contents:
  - "4.2.2.2  The Class Selector PHB Requirements\n   We refer to a Class Selector\
    \ Codepoint with a larger numerical value\n   than another Class Selector Codepoint\
    \ as having a higher relative\n   order while a Class Selector Codepoint with\
    \ a smaller numerical value\n   than another Class Selector Codepoint is said\
    \ to have a lower\n   relative order.  The set of PHBs mapped to by the eight\
    \ Class\n   Selector Codepoints MUST yield at least two independently forwarded\n\
    \   classes of traffic, and PHBs selected by a Class Selector Codepoint\n   SHOULD\
    \ give packets a probability of timely forwarding that is not\n   lower than that\
    \ given to packets marked with a Class Selector\n   codepoint of lower relative\
    \ order, under reasonable operating\n   conditions and traffic loads.  A discarded\
    \ packet is considered to be\n   an extreme case of untimely forwarding.  In addition,\
    \ PHBs selected\n   by codepoints '11x000' MUST give packets a preferential forwarding\n\
    \   treatment by comparison to the PHB selected by codepoint '000000' to\n   preserve\
    \ the common usage of IP Precedence values '110' and '111' for\n   routing traffic.\n\
    \   Further, PHBs selected by distinct Class Selector Codepoints SHOULD\n   be\
    \ independently forwarded; that is, packets marked with different\n   Class Selector\
    \ Codepoints MAY be re-ordered.  A network node MAY\n   enforce limits on the\
    \ amount of the node's resources that can be\n   utilized by each of these PHBs.\n\
    \   PHB groups whose specification satisfy these requirements are\n   referred\
    \ to as Class Selector Compliant PHBs.\n   The Class Selector PHB Requirements\
    \ on codepoint '000000' are\n   compatible with those listed for the Default PHB\
    \ in Sec. 4.1.\n"
- title: 4.2.2.3  Using the Class Selector PHB Requirements for IP Precedence
  contents:
  - "4.2.2.3  Using the Class Selector PHB Requirements for IP Precedence\n      \
    \   Compatibility\n   A DS-compliant network node can be deployed with a set of\
    \ one or more\n   Class Selector Compliant PHB groups.  This document states that\
    \ the\n   set of codepoints 'xxx000' MUST map to such a set of PHBs.  As it is\n\
    \   also possible to map multiple codepoints to the same PHB, the vendor\n   or\
    \ the network administrator MAY configure the network node to map\n   codepoints\
    \ to PHBs irrespective of bits 3-5 of the DSCP field to\n   yield a network that\
    \ is compatible with historical IP Precedence use.\n   Thus, for example, codepoint\
    \ '011010' would map to the same PHB as\n   codepoint '011000'.\n"
- title: 4.2.2.4  Example Mechanisms for Implementing Class Selector Compliant
  contents:
  - "4.2.2.4  Example Mechanisms for Implementing Class Selector Compliant\n     \
    \    PHB Groups\n   Class Selector Compliant PHBs can be realized by a variety\
    \ of\n   mechanisms, including strict priority queueing, weighted fair\n   queueing\
    \ (WFQ), WRR, or variants [RPS, HPFQA, DRR], or Class-Based\n   Queuing [CBQ].\
    \  The distinction between PHBs and mechanisms is\n   described in more detail\
    \ in Sec. 5.\n   It is important to note that these mechanisms might be available\n\
    \   through other PHBs (standardized or not) that are available in a\n   particular\
    \ vendor's equipment.  For example, future documents may\n   standardize a Strict\
    \ Priority Queueing PHB group for a set of\n   recommended codepoints.  A network\
    \ administrator might configure\n   those routers to select the Strict Priority\
    \ Queueing PHBs with\n   codepoints 'xxx000' in conformance with the requirements\
    \ of this\n   document.\n   As a further example, another vendor might employ\
    \ a CBQ mechanism in\n   its routers.  The CBQ mechanism could be used to implement\
    \ the Strict\n   Priority Queueing PHBs as well as a set of Class Selector Compliant\n\
    \   PHBs with a wider range of features than would be available in a set\n   of\
    \ PHBs that did no more than meet the minimum Class Selector PHB\n   requirements.\n"
- title: 4.3  Summary
  contents:
  - "4.3  Summary\n   This document defines codepoints 'xxx000' as the Class Selector\n\
    \   codepoints, where PHBs selected by these codepoints MUST meet the\n   Class\
    \ Selector PHB Requirements described in Sec. 4.2.2.2.  This is\n   done to preserve\
    \ a useful level of backward compatibility with\n   current uses of the IP Precedence\
    \ field in the Internet without\n   unduly limiting future flexibility.  In addition,\
    \ codepoint '000000'\n   is used as the Default PHB value for the Internet and,\
    \ as such, is\n   not configurable.  The remaining seven non-zero Class Selector\n\
    \   codepoints are configurable only to the extent that they map to PHBs\n   that\
    \ meet the requirements in Sec. 4.2.2.2.\n"
- title: 5.  Per-Hop Behavior Standardization Guidelines
  contents:
  - "5.  Per-Hop Behavior Standardization Guidelines\n   The behavioral characteristics\
    \ of a PHB are to be standardized, and\n   not the particular algorithms or the\
    \ mechanisms used to implement\n   them.  A node may have a (possibly large) set\
    \ of parameters that can\n   be used to control how packets are scheduled onto\
    \ an output interface\n   (e.g., N separate queues with settable priorities, queue\
    \ lengths,\n   round-robin weights, drop algorithm, drop preference weights and\n\
    \   thresholds, etc).  To illustrate the distinction between a PHB and a\n   mechanism,\
    \ we point out that Class Selector Compliant PHBs might be\n   implemented by\
    \ several mechanisms, including: strict priority\n   queueing, WFQ, WRR, or variants\
    \ [HPFQA, RPS, DRR], or CBQ [CBQ], in\n   isolation or in combination.\n   PHBs\
    \ may be specified individually, or as a group (a single PHB is a\n   special\
    \ case of a PHB group).  A PHB group usually consists of a set\n   of two or more\
    \ PHBs that can only be meaningfully specified and\n   implemented simultaneously,\
    \ due to a common constraint applying to\n   each PHB within the group, such as\
    \ a queue servicing or queue\n   management policy.  A PHB group specification\
    \ SHOULD describe\n   conditions under which a packet might be re-marked to select\
    \ another\n   PHB within the group.  It is RECOMMENDED that PHB implementations\
    \ do\n   not introduce any packet re-ordering within a microflow.  PHB group\n\
    \   specifications MUST identify any possible packet re-ordering\n   implications\
    \ which may occur for each individual PHB, and which may\n   occur if different\
    \ packets within a microflow are marked for\n   different PHBs within the group.\n\
    \   Only those per-hop behaviors that are not described by an existing\n   PHB\
    \ standard, and have been implemented, deployed, and shown to be\n   useful, SHOULD\
    \ be standardized.  Since current experience with\n   differentiated services\
    \ is quite limited, it is premature to\n   hypothesize the exact specification\
    \ of these per-hop behaviors.\n   Each standardized PHB MUST have an associated\
    \ RECOMMENDED codepoint,\n   allocated out of a space of 32 codepoints (see Sec.\
    \ 6).  This\n   specification has left room in the codepoint space to allow for\n\
    \   evolution, thus the defined space ('xxx000') is intentionally sparse.\n  \
    \ Network equipment vendors are free to offer whatever parameters and\n   capabilities\
    \ are deemed useful or marketable.  When a particular,\n   standardized PHB is\
    \ implemented in a node, a vendor MAY use any\n   algorithm that satisfies the\
    \ definition of the PHB according to the\n   standard.  The node's capabilities\
    \ and its particular configuration\n   determine the different ways that packets\
    \ can be treated.\n   Service providers are not required to use the same node\
    \ mechanisms or\n   configurations to enable service differentiation within their\n\
    \   networks, and are free to configure the node parameters in whatever\n   way\
    \ that is appropriate for their service offerings and traffic\n   engineering\
    \ objectives.  Over time certain common per-hop behaviors\n   are likely to evolve\
    \ (i.e., ones that are particularly useful for\n   implementing end-to-end services)\
    \ and these MAY be associated with\n   particular EXP/LU PHB codepoints in the\
    \ DS field, allowing use across\n   domain boundaries (see Sec. 6).  These PHBs\
    \ are candidates for future\n   standardization.\n   It is RECOMMENDED that standardized\
    \ PHBs be specified in accordance\n   with the guidelines set out in [ARCH].\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   The DSCP field within the DS field is capable of\
    \ conveying 64\n   distinct codepoints.  The codepoint space is divided into three\
    \ pools\n   for the purpose of codepoint assignment and management: a pool of\
    \ 32\n   RECOMMENDED codepoints (Pool 1) to be assigned by Standards Action as\n\
    \   defined in [CONS], a pool of 16 codepoints (Pool 2) to be reserved\n   for\
    \ experimental or Local Use (EXP/LU) as defined in [CONS], and a\n   pool of 16\
    \ codepoints (Pool 3) which are initially available for\n   experimental or local\
    \ use, but which should be preferentially\n   utilized for standardized assignments\
    \ if Pool 1 is ever exhausted.\n   The pools are defined in the following table\
    \ (where 'x' refers to\n   either '0' or '1'):\n   Pool        Codepoint space\
    \          Assignment Policy\n   ----        ---------------          -----------------\n\
    \    1            xxxxx0                 Standards Action\n    2            xxxx11\
    \                 EXP/LU\n    3            xxxx01                 EXP/LU (*)\n\
    \   (*) may be utilized for future Standards Action allocations as\n       necessary\n\
    \   This document assigns eight RECOMMENDED codepoints ('xxx000') which\n   are\
    \ drawn from Pool 1 above.  These codepoints MUST be mapped, not to\n   specific\
    \ PHBs, but to PHBs that meet \"at least\" the requirements set\n   forth in Sec.\
    \ 4.2.2.2 to provide a minimal level of backwards\n   compatibility with IP Precedence\
    \ as defined in [RFC791] and as\n   deployed in some current equipment.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   This section considers security issues raised\
    \ by the introduction of\n   differentiated services, primarily the potential\
    \ for denial-of-\n   service attacks, and the related potential for theft of service\
    \ by\n   unauthorized traffic (Section 7.1).  Section 7.2 addresses the\n   operation\
    \ of differentiated services in the presence of IPsec\n   including its interaction\
    \ with IPsec tunnel mode and other tunnelling\n   protocols.  See [ARCH] for more\
    \ extensive treatment of the security\n   concerns raised by the overall differentiated\
    \ services architecture.\n"
- title: 7.1  Theft and Denial of Service
  contents:
  - "7.1  Theft and Denial of Service\n   The primary goal of differentiated services\
    \ is to allow different\n   levels of service to be provided for traffic streams\
    \ on a common\n   network infrastructure.  A variety of techniques may be used\
    \ to\n   achieve this, but the end result will be that some packets receive\n\
    \   different (e.g., better) service than others.  The mapping of network\n  \
    \ traffic to the specific behaviors that result in different (e.g.,\n   better\
    \ or worse) service is indicated primarily by the DS codepoint,\n   and hence\
    \ an adversary may be able to obtain better service by\n   modifying the codepoint\
    \ to values indicating behaviors used for\n   enhanced services or by injecting\
    \ packets with such codepoint values.\n   Taken to its limits, such theft-of-service\
    \ becomes a denial-of-\n   service attack when the modified or injected traffic\
    \ depletes the\n   resources available to forward it and other traffic streams.\n\
    \   The defense against this class of theft- and denial-of-service\n   attacks\
    \ consists of the combination of traffic conditioning at DS\n   domain boundaries\
    \ with security and integrity of the network\n   infrastructure within a DS domain.\
    \  DS domain boundary nodes MUST\n   ensure that all traffic entering the domain\
    \ is marked with codepoint\n   values appropriate to the traffic and the domain,\
    \ remarking the\n   traffic with new codepoint values if necessary.  These DS\
    \ boundary\n   nodes are the primary line of defense against theft- and denial-of-\n\
    \   service attacks based on modified codepoints, as success of any such\n   attack\
    \ indicates that the codepoints used by the attacking traffic\n   were inappropriate.\
    \  An important instance of a boundary node is that\n   any traffic-originating\
    \ node within a DS domain is the initial\n   boundary node for that traffic. \
    \ Interior nodes in a DS domain rely\n   on DS codepoints to associate traffic\
    \ with the forwarding PHBs, and\n   are NOT REQUIRED to check codepoint values\
    \ before using them.  As a\n   result, the interior nodes depend on the correct\
    \ operation of the DS\n   domain boundary nodes to prevent the arrival of traffic\
    \ with\n   inappropriate codepoints or in excess of provisioned levels that\n\
    \   would disrupt operation of the domain.\n"
- title: 7.2  IPsec and Tunnelling Interactions
  contents:
  - "7.2  IPsec and Tunnelling Interactions\n   The IPsec protocol, as defined in\
    \ [ESP, AH], does not include the IP\n   header's DS field in any of its cryptographic\
    \ calculations (in the\n   case of tunnel mode, it is the outer IP header's DS\
    \ field that is not\n   included).  Hence modification of the DS field by a network\
    \ node has\n   no effect on IPsec's end-to-end security, because it cannot cause\
    \ any\n   IPsec integrity check to fail.  As a consequence, IPsec does not\n \
    \  provide any defense against an adversary's modification of the DS\n   field\
    \ (i.e., a man-in-the-middle attack), as the adversary's\n   modification will\
    \ also have no effect on IPsec's end-to-end security.\n   IPsec's tunnel mode\
    \ provides security for the encapsulated IP\n   header's DS field.  A tunnel mode\
    \ IPsec packet contains two IP\n   headers: an outer header supplied by the tunnel\
    \ ingress node and an\n   encapsulated inner header supplied by the original source\
    \ of the\n   packet.  When an IPsec tunnel is hosted (in whole or in part) on\
    \ a\n   differentiated services network, the intermediate network nodes\n   operate\
    \ on the DS field in the outer header.  At the tunnel egress\n   node, IPsec processing\
    \ includes removing the outer header and\n   forwarding the packet (if required)\
    \ using the inner header.  The\n   IPsec protocol REQUIRES that the inner header's\
    \ DS field not be\n   changed by this decapsulation processing to ensure that\
    \ modifications\n   to the DS field cannot be used to launch theft- or denial-of-service\n\
    \   attacks across an IPsec tunnel endpoint.  This document makes no\n   change\
    \ to that requirement.  If the inner IP header has not been\n   processed by a\
    \ DS boundary node for the tunnel egress node's DS\n   domain, the tunnel egress\
    \ node is the boundary node for traffic\n   exiting the tunnel, and hence MUST\
    \ ensure that the resulting traffic\n   has appropriate DS codepoints.\n   When\
    \ IPsec tunnel egress decapsulation processing includes a\n   sufficiently strong\
    \ cryptographic integrity check of the encapsulated\n   packet (where sufficiency\
    \ is determined by local security policy),\n   the tunnel egress node can safely\
    \ assume that the DS field in the\n   inner header has the same value as it had\
    \ at the tunnel ingress node.\n   An important consequence is that otherwise insecure\
    \ links within a DS\n   domain can be secured by a sufficiently strong IPsec tunnel.\
    \  This\n   analysis and its implications apply to any tunnelling protocol that\n\
    \   performs integrity checks, but the level of assurance of the inner\n   header's\
    \ DS field depends on the strength of the integrity check\n   performed by the\
    \ tunnelling protocol.  In the absence of sufficient\n   assurance for a tunnel\
    \ that may transit nodes outside the current DS\n   domain (or is otherwise vulnerable),\
    \ the encapsulated packet MUST be\n   treated as if it had arrived at a boundary\
    \ from outside the DS\n   domain.\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   The authors would like to acknowledge the Differentiated\
    \ Services\n   Working Group for discussions which helped shape this document.\n"
- title: 9.  References
  contents:
  - "9.  References\n   [AH]        Kent, S. and R. Atkinson, \"IP Authentication\
    \ Header\",\n               RFC 2402, November 1998.\n   [ARCH]      Blake, S.,\
    \ Black, D., Carlson, M., Davies, E., Wang, Z.\n               and W. Weiss, \"\
    An Architecture for Differentiated\n               Services\", RFC 2475, December\
    \ 1998.\n   [CBQ]       S. Floyd and V. Jacobson, \"Link-sharing and Resource\n\
    \               Management Models for Packet Networks\", IEEE/ACM\n          \
    \     Transactions on Networking, Vol. 3 no. 4, pp. 365-386,\n               August\
    \ 1995.\n   [CONS]      Narten, T. and H. Alvestrand, \"Guidelines for Writing\
    \ an\n               IANA Considerations Section in RFCs\", RFC 2434, October\n\
    \               1998.\n   [DRR]       M. Shreedhar and G. Varghese, Efficient\
    \ Fair Queueing\n               using Deficit Round Robin\", Proc. ACM SIGCOMM\
    \ 95, 1995.\n   [ESP]       Kent, S. and R. Atkinson, \"IP Encapsulating Security\n\
    \               Payload (ESP)\", RFC 2406, November 1998.\n   [HPFQA]     J. Bennett\
    \ and Hui Zhang, \"Hierarchical Packet Fair\n               Queueing Algorithms\"\
    , Proc. ACM SIGCOMM 96, August 1996.\n   [IPv6]      Deering, S. and R. Hinden,\
    \ \"Internet Protocol, Version 6\n               (IPv6) Specification\", RFC 2460,\
    \ December 1998.\n   [RFC791]    Postel, J., Editor, \"Internet Protocol\", STD\
    \ 5, RFC 791,\n               September 1981.\n   [RFC1122]   Braden, R., \"Requirements\
    \ for Internet hosts -\n               communication layers\", STD 3, RFC 1122,\
    \ October 1989.\n   [RFC1812]   Baker, F., Editor, \"Requirements for IP Version\
    \ 4\n               Routers\", RFC 1812, June 1995.\n   [RFC2119]   Bradner, S.,\
    \ \"Key words for use in RFCs to Indicate\n               Requirement Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [RPS]       D. Stiliadis and A. Varma, \"\
    Rate-Proportional Servers:  A\n               Design Methodology for Fair Queueing\
    \ Algorithms\", IEEE/\n               ACM Trans. on Networking, April 1998.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Kathleen Nichols\n   Cisco Systems\n   170 West Tasman\
    \ Drive\n   San Jose, CA  95134-1706\n   Phone:  +1-408-525-4857\n   EMail: kmn@cisco.com\n\
    \   Steven Blake\n   Torrent Networking Technologies\n   3000 Aerial Center, Suite\
    \ 140\n   Morrisville, NC  27560\n   Phone:  +1-919-468-8466 x232\n   EMail: slblake@torrentnet.com\n\
    \   Fred Baker\n   Cisco Systems\n   519 Lado Drive\n   Santa Barbara, CA  93111\n\
    \   Phone:  +1-408-526-4257\n   EMail: fred@cisco.com\n   David L. Black\n   EMC\
    \ Corporation\n   35 Parkwood Drive\n   Hopkinton, MA  01748\n   Phone:  +1-508-435-1000\
    \ x76140\n   EMail: black_david@emc.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (1998).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
