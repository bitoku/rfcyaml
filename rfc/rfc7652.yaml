- title: __initial_text__
  contents:
  - '          Port Control Protocol (PCP) Authentication Mechanism

    '
- title: Abstract
  contents:
  - "Abstract\n   An IPv4 or IPv6 host can use the Port Control Protocol (PCP) to\n\
    \   flexibly manage the IP address-mapping and port-mapping information\n   on\
    \ Network Address Translators (NATs) or firewalls to facilitate\n   communication\
    \ with remote hosts.  However, the uncontrolled\n   generation or deletion of\
    \ IP address mappings on such network devices\n   may cause security risks and\
    \ should be avoided.  In some cases, the\n   client may need to prove that it\
    \ is authorized to modify, create, or\n   delete PCP mappings.  This document\
    \ describes an in-band\n   authentication mechanism for PCP that can be used in\
    \ those cases.\n   The Extensible Authentication Protocol (EAP) is used to perform\n\
    \   authentication between PCP devices.\n   This document updates RFC 6887.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7652.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   4\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   5\n   3.  Protocol Details  . . . . . . . . . . . . . . . . . . .\
    \ . . .   6\n     3.1.  Session Initiation  . . . . . . . . . . . . . . . . .\
    \ . .   6\n       3.1.1.  Authentication Triggered by the Client  . . . . . .\
    \ .   6\n       3.1.2.  Authentication Triggered by the Server  . . . . . . .\
    \   7\n       3.1.3.  Authentication Using EAP  . . . . . . . . . . . . . .  \
    \ 8\n     3.2.  Recovery from Lost PA Session . . . . . . . . . . . . . .  10\n\
    \     3.3.  Session Termination . . . . . . . . . . . . . . . . . . .  11\n  \
    \   3.4.  Session Re-authentication . . . . . . . . . . . . . . . .  11\n   4.\
    \  PA Security Association . . . . . . . . . . . . . . . . . . .  12\n   5.  Packet\
    \ Format . . . . . . . . . . . . . . . . . . . . . . . .  14\n     5.1.  Packet\
    \ Format of PCP Auth Messages  . . . . . . . . . . .  14\n     5.2.  Opcode-Specific\
    \ Information of AUTHENTICATION Opcode  . .  16\n     5.3.  NONCE Option  . .\
    \ . . . . . . . . . . . . . . . . . . . .  16\n     5.4.  AUTHENTICATION_TAG Option\
    \ . . . . . . . . . . . . . . . .  17\n     5.5.  PA_AUTHENTICATION_TAG Option\
    \  . . . . . . . . . . . . . .  18\n     5.6.  EAP_PAYLOAD Option  . . . . . .\
    \ . . . . . . . . . . . . .  19\n     5.7.  PRF Option  . . . . . . . . . . .\
    \ . . . . . . . . . . . .  19\n     5.8.  MAC_ALGORITHM Option  . . . . . . .\
    \ . . . . . . . . . . .  20\n     5.9.  SESSION_LIFETIME Option . . . . . . .\
    \ . . . . . . . . . .  20\n     5.10. RECEIVED_PAK Option . . . . . . . . . .\
    \ . . . . . . . . .  21\n     5.11. ID_INDICATOR Option . . . . . . . . . . .\
    \ . . . . . . . .  21\n   6.  Processing Rules  . . . . . . . . . . . . . . .\
    \ . . . . . . .  22\n     6.1.  Authentication Data Generation  . . . . . . .\
    \ . . . . . .  22\n     6.2.  Authentication Data Validation  . . . . . . . .\
    \ . . . . .  23\n     6.3.  Retransmission Policies for PA Messages . . . . .\
    \ . . . .  24\n     6.4.  Sequence Numbers for PCP Auth Messages  . . . . . .\
    \ . . .  25\n     6.5.  Sequence Numbers for Common PCP Messages  . . . . . .\
    \ . .  26\n     6.6.  MTU Considerations  . . . . . . . . . . . . . . . . . .\
    \ .  26\n   7.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .\
    \  27\n     7.1.  NONCE . . . . . . . . . . . . . . . . . . . . . . . . . .  28\n\
    \     7.2.  AUTHENTICATION_TAG  . . . . . . . . . . . . . . . . . . .  28\n  \
    \   7.3.  PA_AUTHENTICATION_TAG . . . . . . . . . . . . . . . . . .  29\n    \
    \ 7.4.  EAP_PAYLOAD . . . . . . . . . . . . . . . . . . . . . . .  29\n     7.5.\
    \  PRF . . . . . . . . . . . . . . . . . . . . . . . . . . .  29\n     7.6.  MAC_ALGORITHM\
    \ . . . . . . . . . . . . . . . . . . . . . .  30\n     7.7.  SESSION_LIFETIME\
    \  . . . . . . . . . . . . . . . . . . . .  30\n     7.8.  RECEIVED_PAK  . . .\
    \ . . . . . . . . . . . . . . . . . . .  30\n     7.9.  ID_INDICATOR  . . . .\
    \ . . . . . . . . . . . . . . . . . .  31\n   8.  Security Considerations . .\
    \ . . . . . . . . . . . . . . . . .  31\n   9.  References  . . . . . . . . .\
    \ . . . . . . . . . . . . . . . .  32\n     9.1.  Normative References  . . .\
    \ . . . . . . . . . . . . . . .  32\n     9.2.  Informative References  . . .\
    \ . . . . . . . . . . . . . .  33\n   Acknowledgements  . . . . . . . . . . .\
    \ . . . . . . . . . . . . .  33\n   Authors' Addresses  . . . . . . . . . . .\
    \ . . . . . . . . . . . .  34\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Using the Port Control Protocol (PCP) [RFC6887], an application\
    \ can\n   flexibly manage the IP address-mapping information on its network\n\
    \   address translators (NATs) and firewalls and can control their\n   policies\
    \ in processing incoming and outgoing IP packets.  Because\n   NATs and firewalls\
    \ both play important roles in network security\n   architectures, there are many\
    \ situations in which authentication and\n   access control are required to prevent\
    \ unauthorized users from\n   accessing such devices.  This document defines a\
    \ PCP security\n   extension that enables PCP servers to authenticate their clients\
    \ with\n   the Extensible Authentication Protocol (EAP).  The EAP messages are\n\
    \   encapsulated within PCP messages during transmission.\n   The following issues\
    \ are considered in the design of this extension:\n   o  Loss of EAP messages\
    \ during transmission.\n   o  Reordered delivery of EAP messages.\n   o  Generation\
    \ of transport keys.\n   o  Integrity protection and data origin authentication\
    \ for\n      PCP messages.\n   o  Algorithm agility.\n   The mechanism described\
    \ in this document meets the security\n   requirements to address the Advanced\
    \ Threat Model described in the\n   base PCP specification [RFC6887].  This mechanism\
    \ can be used to\n   secure PCP in the following situations:\n   o  On security\
    \ infrastructure equipment, such as corporate firewalls,\n      that does not\
    \ create implicit mappings for specific traffic.\n   o  On equipment (such as\
    \ Carrier-Grade NATs (CGNs) or service\n      provider firewalls) that serves\
    \ multiple administrative domains\n      and do not have a mechanism to securely\
    \ partition traffic from\n      those domains.\n   o  For any implementation that\
    \ wants to be more permissive in\n      authorizing applications to create mappings\
    \ for successful inbound\n      communications destined to machines located behind\
    \ a NAT or a\n      firewall.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [RFC2119].\n   Most of the terms used in this document are introduced in\
    \ [RFC6887].\n   PCP client: A PCP software instance that is responsible for issuing\n\
    \   PCP requests to a PCP server.  In this document, a PCP client is also\n  \
    \ an EAP peer [RFC3748], and it is the responsibility of a PCP client\n   to provide\
    \ the credentials when authentication is required.\n   PCP server: A PCP software\
    \ instance that resides on the\n   PCP-controlled device that receives PCP requests\
    \ from the PCP client\n   and creates appropriate state in response to that request.\
    \  In this\n   document, a PCP server is integrated with an EAP authenticator\n\
    \   [RFC3748].  Therefore, when necessary, a PCP server can verify the\n   credentials\
    \ provided by a PCP client and make an access control\n   decision based on the\
    \ authentication result.\n   PCP-Authentication (PA) session: A series of PCP\
    \ message exchanges\n   transferred between a PCP client and a PCP server.  The\
    \ PCP messages\n   that are part of a given session include the PA messages used\
    \ to\n   perform EAP authentication, key distribution, and session management,\n\
    \   as well as the common PCP messages secured with the keys distributed\n   during\
    \ authentication.  Each PA session is assigned a distinctive\n   Session ID.\n\
    \   Session partner: A PCP implementation involved in a PA session.  Each\n  \
    \ PA session has two session partners (a PCP server and a PCP client).\n   PCP\
    \ device: A PCP client or a PCP server.\n   Session lifetime: The lifetime associated\
    \ with a PA session.  The\n   session lifetime of the PA session decides the lifetime\
    \ of the\n   current authorization given to the PCP client.\n   PA Security Association\
    \ (PCP SA): An association formed between a\n   PCP client and a PCP server by\
    \ sharing cryptographic keying material\n   and associated context.  The formed\
    \ duplex security association is\n   used to protect the bidirectional PCP signaling\
    \ traffic between the\n   PCP client and PCP server.\n   Master Session Key (MSK):\
    \ A key derived by the partners of a\n   PA session, using an EAP key-generating\
    \ method (e.g., the method\n   defined in [RFC5448]).\n   PCP-Authentication (PA)\
    \ message: A PCP message containing an\n   AUTHENTICATION Opcode.  Specifically,\
    \ a PA message sent from a\n   PCP server to a PCP client is referred to as a\
    \ PA-Server message,\n   while a PA message sent from a PCP client to a PCP server\
    \ is referred\n   to as a PA-Client message.  Therefore, a PA-Server message is\n\
    \   actually a PCP response message as specified in [RFC6887], and a\n   PA-Client\
    \ message is a PCP request message.  This document specifies\n   an option --\
    \ the PA_AUTHENTICATION_TAG option defined in Section 5.5\n   for PCP authentication\
    \ -- to provide integrity protection and message\n   origin authentication for\
    \ PA messages.\n   Common PCP message: A PCP message that does not contain an\n\
    \   AUTHENTICATION Opcode.  This document specifies an AUTHENTICATION_TAG\n  \
    \ option to provide integrity protection and message origin\n   authentication\
    \ for the common PCP messages.\n"
- title: 3.  Protocol Details
  contents:
  - '3.  Protocol Details

    '
- title: 3.1.  Session Initiation
  contents:
  - "3.1.  Session Initiation\n   At the beginning of a PA session, a PCP client and\
    \ a PCP server need\n   to exchange a series of PA messages in order to perform\
    \ an EAP\n   authentication process.  Each PA message MUST contain an\n   AUTHENTICATION\
    \ Opcode and may optionally contain a set of options for\n   various purposes\
    \ (e.g., transporting authentication messages and\n   session management).  The\
    \ Opcode-specific information in an\n   AUTHENTICATION Opcode consists of two\
    \ fields: Session ID and Sequence\n   Number.  The Session ID field is used to\
    \ identify the PA session to\n   which the message belongs.  The Sequence Number\
    \ field is used to\n   detect whether reordering or duplication occurred during\
    \ message\n   delivery.\n"
- title: 3.1.1.  Authentication Triggered by the Client
  contents:
  - "3.1.1.  Authentication Triggered by the Client\n   When a PCP client intends\
    \ to proactively initiate a PA session with a\n   PCP server, it sends a PA-Initiation\
    \ message (a PA-Client message\n   with the result code INITIATION) to the PCP\
    \ server.  Section 5.1\n   updates the PCP request message format with result\
    \ codes for the PCP\n   authentication mechanism.  In the Opcode-specific information\
    \ of the\n   message, the Session ID and Sequence Number fields are set to zero.\n\
    \   The PA-Client message MUST also contain a NONCE option (defined in\n   Section\
    \ 5.3) that consists of a random nonce.\n   After receiving the PA-Initiation\
    \ message, if the PCP server agrees\n   to initiate a PA session with the PCP\
    \ client, it will reply with a\n   PA-Server message that contains an EAP request,\
    \ and the Result Code\n   field of this PA-Server message is set to AUTHENTICATION_REQUEST.\
    \  In\n   addition, the server MUST assign a unique session identifier to\n  \
    \ distinctly identify this session and insert the identifier into the\n   Session\
    \ ID field in the Opcode-specific information of the PA-Server\n   message.  The\
    \ Sequence Number field of the message is set to zero.\n   The PA-Server message\
    \ MUST contain a NONCE option so as to send the\n   nonce value back.  The nonce\
    \ will then be used by the PCP client to\n   check the freshness of this message.\
    \  Subsequent PCP messages within\n   this PA session MUST contain this session\
    \ identifier.\n          PCP                                               PCP\n\
    \         client                                            server\n         \
    \  |-- PA-Initiation ------------------------------->|\n           |    (Seq=0,\
    \ rc=INITIATION, Session ID=0)         |\n           |                       \
    \                          |\n           |<-- PA-Server -----------------------------------|\n\
    \           |     (Seq=0, Session ID=X, EAP request,          |\n           |\
    \      rc=AUTHENTICATION_REQUEST)                 |\n           |            \
    \                                     |\n           |-- PA-Client ----------------------------------->|\n\
    \           |    (Seq=1, Session ID=X, EAP response,          |\n           |\
    \     rc=AUTHENTICATION_REPLY)                    |\n           |            \
    \                                     |\n           |<-- PA-Server -----------------------------------|\n\
    \           |     (Seq=1, Session ID=X, EAP request,          |\n           |\
    \      rc=AUTHENTICATION_REQUEST)                 |\n"
- title: 3.1.2.  Authentication Triggered by the Server
  contents:
  - "3.1.2.  Authentication Triggered by the Server\n   In the scenario where a PCP\
    \ server receives a common PCP request\n   message from a PCP client that needs\
    \ to be authenticated, the\n   PCP server rejects the request with an AUTHENTICATION_REQUIRED\
    \ error\n   code and can reply with an unsolicited PA-Server message to initiate\n\
    \   a PA session.  The Result Code field of this PA-Server message is set\n  \
    \ to AUTHENTICATION_REQUEST.  In addition, the PCP server MUST assign a\n   Session\
    \ ID for the session and transfer it within the PA-Server\n   message.  The Sequence\
    \ Number field in the PA-Server message is set\n   to zero.  If the PCP client\
    \ retries the common request before EAP\n   authentication is successful, then\
    \ it will receive an\n   AUTHENTICATION_REQUIRED error code from the PCP server.\
    \  In\n   subsequent PA messages exchanged during this session, the Session ID\n\
    \   will be used in order to help session partners distinguish the\n   messages\
    \ within this session from those not within it.  When the\n   PCP client receives\
    \ this initial PA-Server message from the\n   PCP server, it can reply with a\
    \ PA-Client message or silently discard\n   the request message, according to\
    \ its local policies.  In the\n   PA-Client message, a NONCE option that consists\
    \ of a random nonce MAY\n   be appended.  If so, in the next PA-Server message,\
    \ the PCP server\n   MUST forward the nonce back within a NONCE option.\n    \
    \      PCP                                               PCP\n         client\
    \                                            server\n           |-- Common PCP\
    \ request -------------------------->|\n           |                         \
    \                        |\n           |<- Common PCP response --------------------------|\n\
    \           |    (rc=AUTHENTICATION_REQUIRED)                 |\n           |\
    \                                                 |\n           |<-- PA-Server\
    \ -----------------------------------|\n           |     (Seq=0, Session ID=X,\
    \ EAP request,          |\n           |      rc=AUTHENTICATION_REQUEST)      \
    \           |\n           |                                                 |\n\
    \           |-- PA-Client ----------------------------------->|\n           |\
    \    (Seq=0, Session ID=X, EAP response,          |\n           |     rc=AUTHENTICATION_REPLY)\
    \                    |\n           |                                         \
    \        |\n           |<-- PA-Server -----------------------------------|\n \
    \          |     (Seq=1, Session ID=X, EAP request,          |\n           | \
    \     rc=AUTHENTICATION_REQUEST)                 |\n"
- title: 3.1.3.  Authentication Using EAP
  contents:
  - "3.1.3.  Authentication Using EAP\n   In a PA session, an EAP request message\
    \ is transported within a\n   PA-Server message and an EAP response message is\
    \ transported within a\n   PA-Client message.  EAP relies on the underlying protocol\
    \ to provide\n   reliable transmission; any reordered delivery or loss of packets\n\
    \   occurring during transmission must be detected and addressed.\n   Therefore,\
    \ after sending out a PA-Server message, the PCP server will\n   not send a new\
    \ PA-Server message in the same PA session until it\n   receives a PA-Client message\
    \ with a proper sequence number from the\n   PCP client, and vice versa.  If a\
    \ PCP client receives a PA message\n   containing an EAP request and for some\
    \ reason cannot generate an EAP\n   response immediately (e.g., waiting for human\
    \ input in order to\n   construct an EAP message, or waiting for the additional\
    \ PA messages\n   in order to assemble a complete EAP message from fragmented\
    \ packets),\n   the PCP device MUST reply with a PA-Acknowledgement message (a\n\
    \   PA message with a RECEIVED_PAK option) to indicate that the message\n   has\
    \ been received.  This approach not only can avoid unnecessary\n   retransmission\
    \ of the PA message but also can guarantee reliable\n   message delivery in conditions\
    \ where a PCP device needs to receive\n   multiple PA messages carrying the fragmented\
    \ EAP request before\n   generating an EAP response.  The number of EAP messages\
    \ exchanged\n   between the PCP client and PCP server depends on the EAP method\
    \ used\n   for authentication.\n   In this approach, a PCP client and a PCP server\
    \ MUST perform a\n   key-generating EAP method in authentication.  Specifically,\
    \ a PCP\n   authentication implementation MUST support Extensible Authentication\n\
    \   Protocol Tunneled Transport Layer Security (EAP-TTLS) [RFC5281] and\n   SHOULD\
    \ support the Tunnel Extensible Authentication Protocol (TEAP)\n   [RFC7170].\
    \  Therefore, after a successful authentication procedure, a\n   Master Session\
    \ Key (MSK) will be generated.  If the PCP client and\n   the PCP server want\
    \ to generate a transport key using the MSK, they\n   need to agree upon a Pseudorandom\
    \ Function (PRF) for the transport\n   key derivation and a Message Authentication\
    \ Code (MAC) algorithm to\n   provide data origin authentication for subsequent\
    \ PCP messages.  In\n   order to do this, the PCP server needs to append a set\
    \ of PRF options\n   and MAC_ALGORITHM options to the initial PA-Server message.\
    \  Each PRF\n   option contains a PRF that the PCP server supports, and each\n\
    \   MAC_ALGORITHM option contains a MAC algorithm that the PCP server\n   supports.\
    \  Moreover, in the first PA-Server message, the server MAY\n   also attach an\
    \ ID_INDICATOR option (defined in Section 5.11) to\n   direct the client to choose\
    \ correct credentials.  After receiving the\n   options, the PCP client MUST select\
    \ the PRF and the MAC algorithm\n   that it would like to use; it then MUST add\
    \ the associated PRF and\n   MAC Algorithm options to the next PA-Client message.\n\
    \   After the EAP authentication, the PCP server sends out a PA-Server\n   message\
    \ to indicate the EAP authentication and PCP authorization\n   results.  If the\
    \ EAP authentication succeeds, the result code of the\n   PA-Server message is\
    \ AUTHENTICATION_SUCCEEDED.  In this case, before\n   sending out the PA-Server\
    \ message, the PCP server MUST update the\n   PCP SA with the MSK and transport\
    \ key and MUST use the derived\n   transport key to generate a digest for the\
    \ message.  The digest is\n   transported within a PA_AUTHENTICATION_TAG option\
    \ for PCP Auth.  A\n   more detailed description of generating the authentication\
    \ data can\n   be found in Section 6.1.  In addition, the PA-Server message MUST\n\
    \   also contain a SESSION_LIFETIME option (defined in Section 5.9) that\n   indicates\
    \ the lifetime of the PA session (i.e., the lifetime of the\n   MSK).  After receiving\
    \ the PA-Server message, the PCP client then\n   needs to generate a PA-Client\
    \ message in response.  If the PCP client\n   also authenticates the PCP server,\
    \ the result code of the PA-Client\n   message is AUTHENTICATION_SUCCEEDED.  In\
    \ addition, the PCP client\n   needs to update the PCP SA with the MSK and transport\
    \ key, and it\n   uses the derived transport key to secure the message.  From\
    \ then on,\n   all the PCP messages within the session are secured with the\n\
    \   transport key and the MAC algorithm specified in the PCP SA.  The\n   first\
    \ secure PA-Client message from the client MUST include the set\n   of PRF and\
    \ MAC_ALGORITHM options received from the PCP server.  The\n   PCP server determines\
    \ if the set of algorithms conveyed by the client\n   matches the set it had initially\
    \ sent, to detect an algorithm\n   downgrade attack.  If the server detects a\
    \ downgrade attack, then it\n   MUST send a PA-Server message with result code\n\
    \   DOWNGRADE_ATTACK_DETECTED and terminate the session.  If the\n   PCP client\
    \ sends a common PCP request within the PA session without\n   an AUTHENTICATION_TAG\
    \ option, then the PCP server rejects the request\n   by returning an AUTHENTICATION_REQUIRED\
    \ error code.\n   If a PCP client/server cannot authenticate its session partner,\
    \ the\n   device sends out a PA message with the result code\n   AUTHENTICATION_FAILED.\
    \  If the EAP authentication succeeds but\n   authorization fails, the device\
    \ making the decision sends out a\n   PA message with the result code AUTHORIZATION_FAILED.\
    \  In these two\n   cases, after the PA message is sent out, the PA session MUST\
    \ be\n   terminated immediately.  It is possible for independent PCP clients\n\
    \   on the host to create multiple PA sessions with the PCP server.\n"
- title: 3.2.  Recovery from Lost PA Session
  contents:
  - "3.2.  Recovery from Lost PA Session\n   If a PCP server resets or loses the PCP\
    \ SA due to reboot, power\n   failure, or any other reason, then it sends an unsolicited\
    \ ANNOUNCE\n   response, as explained in Section 14.1.3 of [RFC6887], to the\n\
    \   PCP client.  Upon receiving the ANNOUNCE response with an anomalous\n   Epoch\
    \ Time, the PCP client deduces that the server may have lost\n   state.  The ANNOUNCE\
    \ is either bogus (an attack), legitimate, or not\n   seen by the client.  These\
    \ three cases are described below:\n   o  The PCP client sends an integrity-protected\
    \ unicast ANNOUNCE\n      request to the PCP server to see whether the PCP server\
    \ has indeed\n      lost state or an attacker has sent the ANNOUNCE response.\n\
    \      *  If an integrity-protected success response is received from the\n  \
    \       PCP server, then the PCP client determines that the PCP server\n     \
    \    has not lost the PA session, and the unsolicited ANNOUNCE\n         response\
    \ was sent by an attacker.\n      *  If the PCP server responds to the ANNOUNCE\
    \ request with an\n         UNKNOWN_SESSION_ID error code, then the PCP client\
    \ MUST\n         initiate full EAP authentication with the PCP server, as\n  \
    \       explained in Section 3.1.1.  After EAP authentication is\n         successful,\
    \ the PCP client updates the PCP SA and issues new\n         common PCP requests\
    \ to recreate any lost mapping state.\n   o  In a scenario where the PCP server\
    \ has lost the PCP SA but did not\n      inform the PCP client, if the PCP client\
    \ sends an integrity-\n      protected PCP request, then the PCP server rejects\
    \ the request\n      with an UNKNOWN_SESSION_ID error code.  The PCP client then\n\
    \      initiates full EAP authentication with the PCP server, as\n      explained\
    \ in Section 3.1.1, and updates the PCP SA after\n      successful authentication.\n\
    \   If the PCP client resets or loses the PCP SA due to reboot, power\n   failure,\
    \ or any other reason and sends a common PCP request, then the\n   PCP server\
    \ rejects the request with an AUTHENTICATION_REQUIRED error\n   code.  The PCP\
    \ client MUST authenticate with the PCP server and,\n   after EAP authentication\
    \ is successful, retry the common PCP request\n   with an AUTHENTICATION_TAG option.\
    \  The PCP server MUST update the\n   PCP SA after successful EAP authentication.\n"
- title: 3.3.  Session Termination
  contents:
  - "3.3.  Session Termination\n   A PA session can be explicitly terminated by either\
    \ session partner.\n   A PCP server may explicitly request termination of the\
    \ session by\n   sending an unsolicited termination-indicating PA response (a\n\
    \   PA response with a result code of SESSION_TERMINATED).  Upon\n   receiving\
    \ a termination-indicating message, the PCP client MUST\n   respond with a termination-indicating\
    \ PA message and MUST then remove\n   the associated PCP SA.  To accommodate packet\
    \ loss, the PCP server\n   MAY transmit the termination-indicating PA response\
    \ up to ten times\n   (with an appropriate Epoch Time value in each to reflect\
    \ the passage\n   of time between transmissions), provided that (1) the interval\n\
    \   between the first two notifications is at least 250 ms and (2) each\n   interval\
    \ between subsequent notifications at least doubles.\n   A PCP client may explicitly\
    \ request termination of the session by\n   sending a termination-indicating PA\
    \ request (a PA request with a\n   result code of SESSION_TERMINATED).  After\
    \ receiving a termination-\n   indicating message from the PCP client, a PCP server\
    \ MUST respond\n   with a termination-indicating PA message and remove the PCP\
    \ SA\n   immediately.  When the PCP client receives the termination-indicating\n\
    \   PA response, it MUST remove the associated PCP SA immediately.\n"
- title: 3.4.  Session Re-authentication
  contents:
  - "3.4.  Session Re-authentication\n   A session partner may choose to perform EAP\
    \ re-authentication if it\n   would like to update the PCP SA without initiating\
    \ a new PA session.\n   For example, a re-authentication procedure could be triggered\
    \ for the\n   following reasons:\n   o  The session lifetime needs to be extended.\n\
    \   o  The sequence number is going to reach the maximum value.\n      Specifically,\
    \ when the sequence number reaches 2**32 - 2**16, the\n      session partner MUST\
    \ trigger re-authentication.\n   When the PCP server would like to initiate a\
    \ re-authentication, it\n   sends the PCP client a PA-Server message.  The result\
    \ code of the\n   message is set to RE-AUTHENTICATION, which indicates that the\
    \ message\n   is for a re-authentication process.  If the PCP client would like\
    \ to\n   start the re-authentication, it will send a PA-Client message to the\n\
    \   PCP server, with the result code of the PA-Client message set to\n   RE-AUTHENTICATION.\
    \  Then, the session partners exchange PA messages\n   to transfer EAP messages\
    \ for the re-authentication.  During the\n   re-authentication procedure, the\
    \ session partners protect the\n   integrity of PA messages with the key and MAC\
    \ algorithm specified in\n   the current PCP SA; the sequence numbers associated\
    \ with the message\n   will continue to keep increasing as specified in Section\
    \ 6.4.  The\n   result code for a PA-Server message carrying an EAP request will\
    \ be\n   set to AUTHENTICATION_REQUIRED, and a PA-Client message carrying an\n\
    \   EAP response will be set to AUTHENTICATION_REPLY.\n   If the EAP re-authentication\
    \ succeeds, the result code of the last\n   PA-Server message is AUTHENTICATION_SUCCEEDED.\
    \  In this case, before\n   sending out the PA-Server message, the PCP server\
    \ MUST update the SA\n   and use the new key to generate a digest for the PA-Server\
    \ message\n   and subsequent PCP messages.  In addition, the PA-Server message\
    \ MUST\n   be appended with a SESSION_LIFETIME option that indicates the new\n\
    \   lifetime of the PA session.  PA and PCP message sequence numbers must\n  \
    \ also be reset to zero.\n   If the EAP authentication fails, the result code\
    \ of the last\n   PA-Server message is AUTHENTICATION_FAILED.  If the EAP\n  \
    \ authentication succeeds but authorization fails, the result code of\n   the\
    \ last PA-Server message is AUTHORIZATION_FAILED.  In the latter\n   two cases,\
    \ the PA session MUST be terminated immediately after the\n   last PA message\
    \ exchange.  If for some unknown reason\n   re-authentication is not performed\
    \ and the session lifetime has\n   expired, then the PA session MUST be terminated\
    \ immediately.\n   During re-authentication, the session partners can also exchange\n\
    \   common PCP messages in parallel.  The common PCP messages MUST be\n   protected\
    \ with the current SA until the new SA has been generated.\n   The sequence of\
    \ EAP messages exchanged for re-authentication will not\n   change, regardless\
    \ of the PCP device triggering re-authentication.\n   If the PCP server receives\
    \ a re-authentication request from the\n   PCP client after the PCP server itself\
    \ had sent a re-authentication\n   request, then it should discard its request\
    \ and respond to the\n   re-authentication request from the PCP client.\n"
- title: 4.  PA Security Association
  contents:
  - "4.  PA Security Association\n   At the beginning of a new PA session, each PCP\
    \ device must create and\n   initialize state information for a new PA Security\
    \ Association\n   (PCP SA) to maintain its state information for the duration\
    \ of the\n   PA session.  The parameters of a PCP SA are as follows:\n   o  IP\
    \ address and UDP port number of the PCP client.\n   o  IP address and UDP port\
    \ number of the PCP server.\n   o  Session identifier.\n   o  Sequence number\
    \ for the next outgoing PA message.\n   o  Sequence number for the next incoming\
    \ PA message.\n   o  Sequence number for the next outgoing common PCP message.\n\
    \   o  Sequence number for the next incoming common PCP message.\n   o  Last outgoing\
    \ message payload.\n   o  Retransmission interval.\n   o  The Master Session Key\
    \ (MSK) generated by the EAP method.\n   o  The MAC algorithm that the transport\
    \ key should use to generate\n      digests for PCP messages.\n   o  The pseudorandom\
    \ function negotiated in the initial PA-Server and\n      PA-Client message exchange\
    \ for the transport key derivation.\n   o  The transport key derived from the\
    \ MSK to provide integrity\n      protection and data origin authentication for\
    \ the messages in the\n      PA session.  The lifetime of the transport key SHOULD\
    \ be identical\n      to the lifetime of the session.\n   o  The nonce selected\
    \ by the PCP client at the initiation of the\n      session.\n   o  The key ID\
    \ associated with the transport key.\n   Specifically, the transport key is computed\
    \ in the following way:\n   transport key = prf(MSK, \"IETF PCP\" || Session ID\
    \ || Nonce ||\n   key ID), where:\n   o  prf is the pseudorandom function assigned\
    \ in the PRF option\n      (Section 5.7).\n   o  MSK is the master session key\
    \ generated by the EAP method.\n   o  \"IETF PCP\" is the ASCII code representation\
    \ of the\n      non-null-terminated string (excluding the double quotes\n    \
    \  around it).\n   o  '||' is the concatenation operator.\n   o  Session ID is\
    \ the ID of the session from which the MSK is derived.\n   o  Nonce is the nonce\
    \ selected by the client and transported in the\n      initial PA-Client message.\n\
    \   o  Key ID is the ID assigned for the transport key.\n"
- title: 5.  Packet Format
  contents:
  - '5.  Packet Format

    '
- title: 5.1.  Packet Format of PCP Auth Messages
  contents:
  - "5.1.  Packet Format of PCP Auth Messages\n   The format of the PA-Server message\
    \ is identical to the response\n   message format specified in Section 7.2 of\
    \ [RFC6887].  The result\n   code for a PA-Server message carrying an EAP request\
    \ MUST be set to\n   AUTHENTICATION_REQUEST.\n   This document updates the Reserved\
    \ field (see Figure 1) in the\n   Request header specified in Section 7.1 of [RFC6887]\
    \ to carry\n   Opcode-specific data.\n      0                   1            \
    \       2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |  Version = 2  |R|   Opcode    |   Reserved    |Opcode-specific|\n    \
    \ |               | |             |               |   data        |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                 Requested Lifetime (32 bits)                  |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                                                             |\n     |      \
    \      PCP Client's IP Address (128 bits)                 |\n     |          \
    \                                                     |\n     |              \
    \                                                 |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     :                                                               :\n    \
    \ :                  Opcode-specific information                  :\n     :  \
    \                                                             :\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     :                                                               :\n    \
    \ :                   (optional) PCP Options                      :\n     :  \
    \                                                             :\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                      Figure 1: Request Packet Format\n   The PA-Client messages\
    \ (as shown in Figure 2) use the Request header\n   specified in Figure 1.  The\
    \ Opcode-specific data is used to transfer\n   the result codes (e.g., INITIATION,\
    \ AUTHENTICATION_FAILED).  Other\n   fields in Figure 2 are described in Section\
    \ 7.1 of [RFC6887].  The\n   result code for a PA-Client message carrying an EAP\
    \ response MUST be\n   set to AUTHENTICATION_REPLY.\n      0                 \
    \  1                   2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |  Version = 2  |R|   Opcode    |   Reserved    |  Result Code  |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \               Requested Lifetime (32 bits)                  |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                                                               |\n    \
    \ |            PCP Client's IP Address (128 bits)                 |\n     |  \
    \                                                             |\n     |      \
    \                                                         |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     :                                                               :\n    \
    \ :                  Opcode-specific information                  :\n     :  \
    \                                                             :\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     :                                                               :\n    \
    \ :                   (optional) PCP Options                      :\n     :  \
    \                                                             :\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                    Figure 2: PA-Client Message Format\n   The Requested Lifetime\
    \ field of a PA-Client message and the Lifetime\n   field of a PA-Server message\
    \ are both set to zero on transmission and\n   ignored on reception.\n"
- title: 5.2.  Opcode-Specific Information of AUTHENTICATION Opcode
  contents:
  - "5.2.  Opcode-Specific Information of AUTHENTICATION Opcode\n   The following\
    \ diagram shows the format of the Opcode-specific\n   information for the AUTHENTICATION\
    \ Opcode.\n       0                   1                   2                  \
    \ 3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   \
    \   |                       Session ID                              |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                     Sequence Number                           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      Session\
    \ ID: This field contains a 32-bit PA session identifier.\n      Sequence Number:\
    \ This field contains a 32-bit sequence number.  A\n      sequence number needs\
    \ to be incremented on every new\n      (non-retransmission) outgoing PA message\
    \ in order to provide an\n      ordering guarantee for PA messages.\n"
- title: 5.3.  NONCE Option
  contents:
  - "5.3.  NONCE Option\n   Because the session identifier of a PA session is determined\
    \ by the\n   PCP server, a PCP client does not know the session identifier that\n\
    \   will be used when it sends out a PA-Initiation message.  In order to\n   prevent\
    \ an attacker from interrupting the authentication process by\n   sending spoofed\
    \ PA-Server messages, the PCP client needs to generate\n   a random number as\
    \ a nonce in the PA-Initiation message.  The\n   PCP server will append the nonce\
    \ within the initial PA-Server\n   message.  If the PA-Server message does not\
    \ carry the correct nonce,\n   the message MUST be silently discarded.\n     \
    \  0                   1                   2                   3\n       0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |  Option Code  |  Reserved     |       Option-Length           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                         Nonce                                 |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Option Code: 4.\n      Reserved: 8 bits.  MUST be set to zero on transmission\
    \ and MUST be\n      ignored on reception.\n      Option-Length: 4 octets.\n \
    \     Nonce: A random 32-bit number that is transported within a\n      PA-Initiation\
    \ message and the corresponding reply message from the\n      PCP server.\n"
- title: 5.4.  AUTHENTICATION_TAG Option
  contents:
  - "5.4.  AUTHENTICATION_TAG Option\n       0                   1               \
    \    2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |  Option Code  |  Reserved     |       Option-Length           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                       Session ID                              |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                     Sequence Number                           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                          Key ID                               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                                                               |\n   \
    \   |                Authentication Data (Variable)                 |\n      ~\
    \                                                               ~\n      |   \
    \                                                            |\n      |      \
    \                                                         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Because there is no authentication Opcode in common PCP messages, the\n  \
    \ authentication tag for common PCP messages needs to carry the\n   Session ID\
    \ and Sequence Number.\n      Option Code: 5.\n      Reserved: 8 bits.  MUST be\
    \ set to zero on transmission and MUST be\n      ignored on reception.\n     \
    \ Option-Length: The length of the AUTHENTICATION_TAG option for the\n      common\
    \ PCP message (in octets), including the 12-octet\n      fixed-length header and\
    \ the variable-length authentication data.\n      Session ID: A 32-bit field used\
    \ to identify the session to which\n      the message belongs and identify the\
    \ secret key used to create the\n      message digest appended to the PCP message.\n\
    \      Sequence Number: A 32-bit sequence number.  In this option, a\n      sequence\
    \ number needs to be incremented on every new\n      (non-retransmission) outgoing\
    \ common PCP message in order to\n      provide an ordering guarantee for common\
    \ PCP messages.\n      Key ID: The ID associated with the transport key used to\
    \ generate\n      authentication data.  This field is filled with zeros if the\
    \ MSK\n      is directly used to secure the message.\n      Authentication Data:\
    \ A variable-length field that carries the\n      Message Authentication Code\
    \ for the common PCP message.  The\n      generation of the digest varies according\
    \ to the algorithms\n      specified in different PCP SAs.  This field MUST end\
    \ on a 32-bit\n      boundary, padded with zeros when necessary.\n"
- title: 5.5.  PA_AUTHENTICATION_TAG Option
  contents:
  - "5.5.  PA_AUTHENTICATION_TAG Option\n   This option is used to provide message\
    \ authentication for\n   PA messages.  In contrast to the AUTHENTICATION_TAG option\
    \ for common\n   PCP messages, the Session ID field and the Sequence Number field\
    \ are\n   removed because such information is provided in the Opcode-specific\n\
    \   information of the AUTHENTICATION Opcode.\n       0                   1  \
    \                 2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |  Option Code  |  Reserved     |       Option-Length           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                          Key ID                               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                                                               |\n   \
    \   |                Authentication Data (Variable)                 |\n      ~\
    \                                                               ~\n      |   \
    \                                                            |\n      |      \
    \                                                         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Option Code: 6.\n      Reserved: 8 bits.  MUST be set to zero on transmission\
    \ and MUST be\n      ignored on reception.\n      Option-Length: The length of\
    \ the PA_AUTHENTICATION option for the\n      PCP Auth message (in octets), including\
    \ the 4-octet fixed-length\n      header and the variable-length authentication\
    \ data.\n      Key ID: The ID associated with the transport key used to generate\n\
    \      authentication data.  This field is filled with zeros if the MSK\n    \
    \  is directly used to secure the message.\n      Authentication Data: A variable-length\
    \ field that carries the\n      Message Authentication Code for the PCP Auth message.\
    \  The\n      generation of the digest varies according to the algorithms\n  \
    \    specified in different PCP SAs.  This field MUST end on a 32-bit\n      boundary,\
    \ padded with null characters when necessary.\n"
- title: 5.6.  EAP_PAYLOAD Option
  contents:
  - "5.6.  EAP_PAYLOAD Option\n       0                   1                   2  \
    \                 3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |  Option Code  |  Reserved     |       Option-Length           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                                                               |\n      |   \
    \                        EAP Message                         |\n      ~      \
    \                                                         ~\n      |         \
    \                                                      |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Option Code: 7.\n      Reserved: 8 bits.  MUST be set to zero on transmission\
    \ and MUST be\n      ignored on reception.\n      Option-Length: Variable.\n \
    \     EAP Message: The EAP message transferred.  Note that this field\n      MUST\
    \ end on a 32-bit boundary, padded with zeros when necessary.\n"
- title: 5.7.  PRF Option
  contents:
  - "5.7.  PRF Option\n       0                   1                   2          \
    \         3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |  Option Code  |  Reserved     |       Option-Length           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                          PRF                                  |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Option Code: 8.\n      Reserved: 8 bits.  MUST be set to zero on transmission\
    \ and MUST be\n      ignored on reception.\n      Option-Length: 4 octets.\n \
    \     PRF: The pseudorandom function that the sender supports to\n      generate\
    \ an MSK.  This field contains a value indicating Internet\n      Key Exchange\
    \ Protocol version 2 (IKEv2) Transform Type 2 [RFC7296]\n      [RFC4868].  A PCP\
    \ implementation MUST support PRF_HMAC_SHA2_256\n      (transform ID = 5).\n"
- title: 5.8.  MAC_ALGORITHM Option
  contents:
  - "5.8.  MAC_ALGORITHM Option\n       0                   1                   2\
    \                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |  Option Code  |  Reserved     |       Option-Length           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                    MAC Algorithm ID                           |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Option Code: 9.\n      Reserved: 8 bits.  MUST be set to zero on transmission\
    \ and MUST be\n      ignored on reception.\n      Option-Length: 4 octets.\n \
    \     MAC Algorithm ID: Indicates the MAC algorithm that the sender\n      supports\
    \ to generate authentication data.  The MAC Algorithm ID\n      field contains\
    \ a value indicating IKEv2 Transform Type 3 [RFC7296]\n      [RFC4868].  A PCP\
    \ implementation MUST support\n      AUTH_HMAC_SHA2_256_128 (transform ID = 12).\n"
- title: 5.9.  SESSION_LIFETIME Option
  contents:
  - "5.9.  SESSION_LIFETIME Option\n       0                   1                 \
    \  2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |  Option Code  |  Reserved     |       Option-Length           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                   Session Lifetime                            |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Option Code: 10.\n      Reserved: 8 bits.  MUST be set to zero on transmission\
    \ and MUST be\n      ignored on reception.\n      Option-Length: 4 octets.\n \
    \     Session Lifetime: An unsigned 32-bit integer, in seconds, ranging\n    \
    \  from 0 to 2^32-1 seconds.  The lifetime of the PA session, which\n      is\
    \ decided by the authorization result.\n"
- title: 5.10.  RECEIVED_PAK Option
  contents:
  - "5.10.  RECEIVED_PAK Option\n   This option is used in a PA-Acknowledgement message\
    \ to indicate that\n   a PA message with the contained sequence number has been\
    \ received.\n       0                   1                   2                \
    \   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   \
    \   |  Option Code  |  Reserved     |       Option-Length           |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                   Received Sequence Number                    |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      Option\
    \ Code: 11.\n      Reserved: 8 bits.  MUST be set to zero on transmission and\
    \ MUST be\n      ignored on reception.\n      Option-Length: 4 octets.\n     \
    \ Received Sequence Number: The sequence number of the last received\n      PA\
    \ message.\n"
- title: 5.11.  ID_INDICATOR Option
  contents:
  - "5.11.  ID_INDICATOR Option\n   The ID_INDICATOR option is used by the PCP client\
    \ to determine which\n   credentials to provide to the PCP server.\n       0 \
    \                  1                   2                   3\n       0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |  Option Code  |  Reserved     |       Option-Length           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                                                               |\n      |   \
    \                       ID Indicator                         |\n      ~      \
    \                                                         ~\n      |         \
    \                                                      |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Option Code: 12.\n      Reserved: 8 bits.  MUST be set to zero on transmission\
    \ and MUST be\n      ignored on reception.\n      Option-Length: Variable.\n \
    \     ID Indicator: The identity of the authority that issued the EAP\n      credentials\
    \ to be used to authenticate the client.  The field\n      MUST NOT be null terminated,\
    \ and its length is indicated by the\n      Option-Length field.  In particular,\
    \ when a client receives an\n      ID_INDICATOR option, it MUST NOT rely on the\
    \ presence of a null\n      character in the wire format data to identify the\
    \ end of the\n      ID Indicator field.\n      The field MUST end on a 32-bit\
    \ boundary, padded with zeros when\n      necessary.  The ID Indicator field is\
    \ a UTF-8 encoded [RFC3629]\n      Unicode string conforming to the UsernameCaseMapped\
    \ profile of the\n      PRECIS IdentifierClass [RFC7613].  The PCP client validates\
    \ that\n      the ID Indicator field conforms to the UsernameCaseMapped profile\n\
    \      of the PRECIS IdentifierClass.  The PCP client enforces the rules\n   \
    \   specified in Section 3.2.2 of [RFC7613] to map the ID Indicator\n      field.\
    \  The PCP client compares the resulting string with the ID\n      indicators\
    \ stored locally on the PCP client to pick the\n      credentials for authentication.\
    \  The two indicator strings are to\n      be considered equivalent by the client\
    \ if and only if they are an\n      exact octet-for-octet match.\n"
- title: 6.  Processing Rules
  contents:
  - '6.  Processing Rules

    '
- title: 6.1.  Authentication Data Generation
  contents:
  - "6.1.  Authentication Data Generation\n   After a successful EAP authentication\
    \ process, every subsequent\n   PCP message within the PA session MUST carry an\
    \ authentication tag\n   that contains the digest of the PCP message for data\
    \ origin\n   authentication and integrity protection.\n   o  Before generating\
    \ a digest for a PA message, a device needs to\n      first locate the PCP SA\
    \ according to the session identifier and\n      then get the transport key. \
    \ Then, the device appends a\n      PA_AUTHENTICATION_TAG option for PCP Auth\
    \ at the end of the\n      PCP Auth message.  The length of the Authentication\
    \ Data field is\n      decided by the MAC algorithm adopted in the session.  The\
    \ device\n      then fills the Key ID field with the key ID of the transport key\n\
    \      and sets the Authentication Data field to zero.  After this, the\n    \
    \  device generates a digest for the entire PCP message (including\n      the\
    \ PCP header and PA_AUTHENTICATION_TAG option) using the\n      transport key\
    \ and the associated MAC algorithm, and inserts the\n      generated digest into\
    \ the Authentication Data field.\n   o  Similar to generating a digest for a PA\
    \ message, before generating\n      a digest for a common PCP message, a device\
    \ needs to first locate\n      the PCP SA according to the session identifier\
    \ and then get the\n      transport key.  Then, the device appends the AUTHENTICATION_TAG\n\
    \      option at the end of the common PCP message.  The length of the\n     \
    \ Authentication Data field is decided by the MAC algorithm adopted\n      in\
    \ the session.  The device then uses the corresponding values\n      derived from\
    \ the SA to fill the Session ID field, the Sequence\n      Number field, and the\
    \ Key ID field, and sets the Authentication\n      Data field to zero.  After\
    \ this, the device generates a digest for\n      the entire PCP message (including\
    \ the PCP header and\n      AUTHENTICATION_TAG option) using the transport key\
    \ and the\n      associated MAC algorithm, and inserts the generated digest into\n\
    \      the Authentication Data field.\n"
- title: 6.2.  Authentication Data Validation
  contents:
  - "6.2.  Authentication Data Validation\n   When a device receives a common PCP\
    \ message with an\n   AUTHENTICATION_TAG option for common PCP messages, the device\
    \ needs\n   to use the Session ID transported in the option to locate the proper\n\
    \   SA and then find the associated transport key (using the key ID in\n   the\
    \ option) and the MAC algorithm.  If no proper SA or transport key\n   is found\
    \ or the sequence number is invalid (see Section 6.5), the PCP\n   device stops\
    \ processing the PCP message and silently discards the\n   message.  After storing\
    \ the value of the Authentication field of the\n   AUTHENTICATION_TAG option,\
    \ the device fills the Authentication field\n   with zeros.  Then, the device\
    \ generates a digest for the message\n   (including the PCP header and AUTHENTICATION_TAG\
    \ option) with the\n   transport key and the MAC algorithm.  If the value of the\
    \ newly\n   generated digest is identical to the stored one, the device can\n\
    \   ensure that the message has not been tampered with, and the\n   validation\
    \ succeeds.  Otherwise, the PCP device stops processing the\n   PCP message and\
    \ silently discards the message.\n   Similarly, when a device receives a PA message\
    \ with a\n   PA_AUTHENTICATION_TAG option for PCP authentication, the device needs\n\
    \   to use the Session ID transported in the Opcode to locate the proper\n   SA\
    \ and then find the associated transport key (using the key ID in\n   the option)\
    \ and the MAC algorithm.  If no proper SA or transport key\n   is found or the\
    \ sequence number is invalid (see Section 6.4), the PCP\n   device stops processing\
    \ the PCP message and silently discards the\n   message.  After storing the value\
    \ of the Authentication field of the\n   PA_AUTHENTICATION_TAG option, the device\
    \ fills the Authentication\n   field with zeros.  Then, the device generates a\
    \ digest for the\n   message (including the PCP header and PA_AUTHENTICATION_TAG\
    \ option)\n   with the transport key and the MAC algorithm.  If the value of the\n\
    \   newly generated digest is identical to the stored one, the device can\n  \
    \ ensure that the message has not been tampered with, and the\n   validation succeeds.\
    \  Otherwise, the PCP device stops processing the\n   PCP message and silently\
    \ discards the message.\n"
- title: 6.3.  Retransmission Policies for PA Messages
  contents:
  - "6.3.  Retransmission Policies for PA Messages\n   Because EAP relies on the underlying\
    \ protocols to provide reliable\n   transmission, after sending a PA message,\
    \ a PCP client/server\n   MUST NOT send out any subsequent messages until it has\
    \ received a\n   PA message with a proper sequence number from the peer.  If no\
    \ such\n   message is received, the PCP device will resend the last message\n\
    \   according to retransmission policies.  This specification uses the\n   retransmission\
    \ policies specified in Section 8.1.1 of the base PCP\n   specification [RFC6887].\
    \  In base PCP, such retransmission policies\n   are only applied by PCP clients.\
    \  However, in this specification,\n   such retransmission policies are also applied\
    \ by the PCP servers.  If\n   the \"maximum retransmission\" duration (in seconds)\
    \ has elapsed and no\n   expected response is received, the device will terminate\
    \ the session\n   and discard the current SA.\n   As discussed in Section 3.1.3,\
    \ in order to avoid unnecessary\n   retransmission, the device receiving a PA\
    \ message MUST send a\n   PA-Acknowledgement message to the sender of the PA message\
    \ when it\n   cannot send a PA response immediately.  The PA-Acknowledgement\n\
    \   message is used to indicate the receipt of the PA message.  When the\n   sender\
    \ receives the PA-Acknowledgement message, it will stop the\n   retransmission.\n\
    \   Note that the last PA messages transported within the phases of\n   session\
    \ initiation, session re-authentication, and session\n   termination do not have\
    \ to follow the above policies, since the\n   devices sending out those messages\
    \ do not expect any further\n   PA messages.\n   When a device receives a retransmitted\
    \ last incoming PA message from\n   its session partner, it MUST try to answer\
    \ it by sending the last\n   outgoing PA message again.  However, if the duplicate\
    \ message has the\n   same sequence number but is not bitwise identical to the\
    \ original\n   message, then the device MUST discard it.  In order to perform\
    \ this\n   function, the device may need to maintain the last incoming message\n\
    \   and the associated outgoing messages.  In this case, if no outgoing\n   PA\
    \ message has been generated for the received duplicate PA message\n   yet, the\
    \ device needs to send a PA-Acknowledgement message.  The rate\n   of replying\
    \ to duplicate PA messages MUST be limited to provide\n   robustness against denial-of-service\
    \ (DoS) attacks.  The details of\n   rate limiting are outside the scope of this\
    \ specification.\n"
- title: 6.4.  Sequence Numbers for PCP Auth Messages
  contents:
  - "6.4.  Sequence Numbers for PCP Auth Messages\n   PCP uses UDP to transport signaling\
    \ messages.  As an unreliable\n   transport protocol, UDP does not guarantee ordered\
    \ packet delivery\n   and does not provide any protection from packet loss.  In\
    \ order to\n   ensure that the EAP messages are exchanged in a reliable way, every\n\
    \   PCP message exchanged during EAP authentication must carry a\n   monotonically\
    \ increasing sequence number.  During a PA session, a PCP\n   device needs to\
    \ maintain two sequence numbers for PA messages: one\n   for incoming PA messages\
    \ and one for outgoing PA messages.  When\n   generating an outgoing PA message,\
    \ the device adds the associated\n   outgoing sequence number to the message and\
    \ increments the sequence\n   number maintained in the SA by 1.  When receiving\
    \ a PA message from\n   its session partner, the device will not accept it if\
    \ the sequence\n   number carried in the message does not match the incoming sequence\n\
    \   number maintained in the device.  After confirming that the received\n   message\
    \ is valid, the device increments the incoming sequence number\n   maintained\
    \ in the SA by 1.\n   The above rules are not applicable to PA-Acknowledgement\
    \ messages\n   (i.e., PA messages containing a RECEIVED_PAK option).  A\n   PA-Acknowledgement\
    \ message does not transport any EAP message and\n   only indicates that a PA\
    \ message is received.  Therefore, reliable\n   transmission of PA-Acknowledgement\
    \ messages is not required.  For\n   instance, after sending out a PA-Acknowledgement\
    \ message, a device\n   generates an EAP response.  In this case, the device does\
    \ not have to\n   confirm whether the PA-Acknowledgement message has been received\
    \ by\n   its session partner or not.  Therefore, when receiving or sending out\n\
    \   a PA-Acknowledgement message, the device MUST NOT increase the\n   corresponding\
    \ sequence number stored in the SA.  Otherwise, loss of a\n   PA-Acknowledgement\
    \ message will cause a mismatch in sequence numbers.\n   Another exception is\
    \ the message retransmission scenario.  As\n   discussed in Section 6.3, when\
    \ a PCP device does not receive any\n   response from its session partner, it\
    \ needs to retransmit the last\n   outgoing PA message, following the retransmission\
    \ procedure specified\n   in Section 8.1.1 of [RFC6887].  The original message\
    \ and duplicate\n   messages MUST be bitwise identical.  When the device receives\
    \ such a\n   duplicate PA message from its session partner, it MUST send the last\n\
    \   outgoing PA message again.  In such cases, the maintained incoming\n   and\
    \ outgoing sequence numbers will not be affected by the message\n   retransmission.\n"
- title: 6.5.  Sequence Numbers for Common PCP Messages
  contents:
  - "6.5.  Sequence Numbers for Common PCP Messages\n   When transporting common PCP\
    \ messages within a PA session, a PCP\n   device needs to maintain a sequence\
    \ number for outgoing common\n   PCP messages and a sequence number for incoming\
    \ common PCP messages.\n   When generating a new outgoing PCP message, the PCP\
    \ device updates\n   the Sequence Number field in the AUTHENTICATION_TAG option\
    \ with the\n   outgoing sequence number maintained in the SA and increments the\n\
    \   outgoing sequence number by 1.\n   When receiving a PCP message from its session\
    \ partner, the PCP device\n   will not accept it if the sequence number carried\
    \ in the message is\n   smaller than the incoming sequence number maintained in\
    \ the device.\n   This approach can protect the PCP device from replay attacks.\
    \  After\n   confirming that the received message is valid, the PCP device will\n\
    \   update the incoming sequence number maintained in the PCP SA with the\n  \
    \ sequence number of the incoming message.\n   Note that the sequence number in\
    \ the incoming message may not exactly\n   match the incoming sequence number\
    \ maintained locally.  As discussed\n   in the base PCP specification [RFC6887],\
    \ if a PCP client is no longer\n   interested in the PCP transaction and has not\
    \ yet received a\n   PCP response from the server, then it will stop retransmitting\
    \ the\n   PCP request.  After that, the PCP client might generate new\n   PCP\
    \ requests for other purposes, using the current SA.  In this case,\n   the sequence\
    \ number in the new request will be larger than the\n   sequence number in the\
    \ old request and so will be larger than the\n   incoming sequence number maintained\
    \ in the PCP server.\n   Note that, as discussed in the base PCP specification\
    \ [RFC6887], a\n   PCP client needs to select a nonce in each MAP or PEER request,\
    \ and\n   the nonce is sent back in the response.  However, it is possible for\n\
    \   a client to use the same nonce in multiple MAP or PEER requests, and\n   this\
    \ may cause a potential risk of replay attacks.  This attack is\n   addressed\
    \ by using the sequence number in the PCP response.\n"
- title: 6.6.  MTU Considerations
  contents:
  - "6.6.  MTU Considerations\n   EAP methods are responsible for MTU handling, so\
    \ no special\n   facilities are required in PCP to deal with MTU issues.\n   Specifically,\
    \ EAP lower layers indicate to EAP methods and\n   Authentication, Authorization,\
    \ and Accounting (AAA) servers the MTU\n   of the lower layer.  EAP methods such\
    \ as EAP-TLS [RFC5216], TEAP\n   [RFC7170], and others that are likely to exceed\
    \ reasonable MTUs\n   provide support for fragmentation and reassembly.  Others,\
    \ such as\n   EAP - Generalized Pre-Shared Key (EAP-GPSK) [RFC5433], assume that\n\
    \   they will never send packets larger than the MTU and use small EAP\n   packets.\n\
    \   If an EAP message is too long to be transported within a single\n   PA message,\
    \ it will be divided into multiple sections and sent within\n   different PA messages.\
    \  Note that the receiver may not be able to\n   know what to do in the next step\
    \ until it has received all the\n   sections and reconstructed the complete EAP\
    \ message.  In this case,\n   in order to guarantee reliable message transmission,\
    \ after receiving\n   a PA message, the receiver replies with a PA-Acknowledgement\
    \ message\n   to notify the sender to send the next PA message.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   The following PCP Opcode has been allocated from\
    \ the Standards Action\n   range of the \"PCP Opcodes\" registry (which is maintained\
    \ in\n   <http://www.iana.org/assignments/pcp-parameters>):\n      3 AUTHENTICATION.\n\
    \   The following PCP result codes have been allocated from the Standards\n  \
    \ Action range of the \"PCP Result Codes\" registry (which is maintained\n   in\
    \ <http://www.iana.org/assignments/pcp-parameters>):\n      14 INITIATION: The\
    \ client includes this PCP result code in its\n      request to the server for\
    \ authentication.\n      15 AUTHENTICATION_REQUIRED: This error response is sent\
    \ to the\n      client if EAP authentication is required.\n      16 AUTHENTICATION_FAILED:\
    \ This error response is sent to the\n      client if EAP authentication failed.\n\
    \      17 AUTHENTICATION_SUCCEEDED: This success response is sent to the\n   \
    \   client if EAP authentication succeeded.\n      18 AUTHORIZATION_FAILED: This\
    \ error response is sent to the client\n      if EAP authentication succeeded\
    \ but authorization failed.\n      19 SESSION_TERMINATED: This PCP result code\
    \ indicates to the\n      partner that the PA session must be terminated.\n  \
    \    20 UNKNOWN_SESSION_ID: This error response is sent from the\n      PCP server\
    \ if there is no known PA session associated with the\n      Session ID sent in\
    \ the PA request or common PCP request from the\n      PCP client.\n      21 DOWNGRADE_ATTACK_DETECTED:\
    \ This PCP result code indicates to\n      the client that the server detected\
    \ a downgrade attack.\n      22 AUTHENTICATION_REQUEST: The server indicates to\
    \ the client that\n      the PA message contains an EAP request.\n      23 AUTHENTICATION_REPLY:\
    \ The client indicates to the server that\n      the PA message contains an EAP\
    \ response.\n   The following PCP options have been allocated from the Standards\n\
    \   Action range (the registry for PCP options is maintained in\n   <http://www.iana.org/assignments/pcp-parameters>):\n"
- title: 7.1.  NONCE
  contents:
  - "7.1.  NONCE\n   Name:  NONCE.\n   Value:  4.\n   Purpose:  See Section 5.3.\n\
    \   Valid for Opcodes:  AUTHENTICATION.\n   Length:  4 octets.\n   May appear\
    \ in:  Request and response.\n   Maximum occurrences:  1.\n"
- title: 7.2.  AUTHENTICATION_TAG
  contents:
  - "7.2.  AUTHENTICATION_TAG\n   Name:  AUTHENTICATION_TAG.\n   Value:  5.\n   Purpose:\
    \  See Section 5.4.\n   Valid for Opcodes:  MAP, PEER, ANNOUNCE.\n   Length: \
    \ variable.\n   May appear in:  Request and response.\n   Maximum occurrences:\
    \  1.\n"
- title: 7.3.  PA_AUTHENTICATION_TAG
  contents:
  - "7.3.  PA_AUTHENTICATION_TAG\n   Name:  PA_AUTHENTICATION_TAG.\n   Value:  6.\n\
    \   Purpose:  See Section 5.5.\n   Valid for Opcodes:  AUTHENTICATION.\n   Length:\
    \  variable.\n   May appear in:  Request and response.\n   Maximum occurrences:\
    \  1.\n"
- title: 7.4.  EAP_PAYLOAD
  contents:
  - "7.4.  EAP_PAYLOAD\n   Name:  EAP_PAYLOAD.\n   Value:  7.\n   Purpose:  See Section\
    \ 5.6.\n   Valid for Opcodes:  AUTHENTICATION.\n   Length:  variable.\n   May\
    \ appear in:  Request and response.\n   Maximum occurrences:  1.\n"
- title: 7.5.  PRF
  contents:
  - "7.5.  PRF\n   Name:  PRF.\n   Value:  8.\n   Purpose:  See Section 5.7.\n   Valid\
    \ for Opcodes:  AUTHENTICATION.\n   Length:  4 octets.\n   May appear in:  Request\
    \ and response.\n   Maximum occurrences:  as many as fit within maximum PCP message\
    \ size.\n"
- title: 7.6.  MAC_ALGORITHM
  contents:
  - "7.6.  MAC_ALGORITHM\n   Name:  MAC_ALGORITHM.\n   Value:  9.\n   Purpose:  See\
    \ Section 5.8.\n   Valid for Opcodes:  AUTHENTICATION.\n   Length:  4 octets.\n\
    \   May appear in:  Request and response.\n   Maximum occurrences:  as many as\
    \ fit within maximum PCP message size.\n"
- title: 7.7.  SESSION_LIFETIME
  contents:
  - "7.7.  SESSION_LIFETIME\n   Name:  SESSION_LIFETIME.\n   Value:  10.\n   Purpose:\
    \  See Section 5.9.\n   Valid for Opcodes:  AUTHENTICATION\n   Length:  4 octets.\n\
    \   May appear in:  Response.\n   Maximum occurrences:  1.\n"
- title: 7.8.  RECEIVED_PAK
  contents:
  - "7.8.  RECEIVED_PAK\n   Name:  RECEIVED_PAK.\n   Value:  11.\n   Purpose:  See\
    \ Section 5.10.\n   Valid for Opcodes:  AUTHENTICATION.\n   Length:  4 octets.\n\
    \   May appear in:  Request and response.\n   Maximum occurrences:  1.\n"
- title: 7.9.  ID_INDICATOR
  contents:
  - "7.9.  ID_INDICATOR\n   Name:  ID_INDICATOR.\n   Value:  12.\n   Purpose:  See\
    \ Section 5.11.\n   Valid for Opcodes:  AUTHENTICATION.\n   Length:  variable.\n\
    \   May appear in:  Response.\n   Maximum occurrences:  1.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   As described in this specification, after a successful\
    \ EAP\n   authentication process is performed between two PCP devices, an MSK\n\
    \   will be exported.  The MSK will be used to derive the transport keys\n   to\
    \ generate MAC digests for subsequent PCP message exchanges.\n   However, before\
    \ a transport key has been generated, the PA messages\n   exchanged within a PA\
    \ session have little cryptographic protection,\n   and if there is no already-established\
    \ security channel between two\n   session partners, these messages are subject\
    \ to man-in-the-middle\n   attacks and DoS attacks.  For instance, the initial\
    \ PA-Server and\n   PA-Client message exchange is vulnerable to spoofing attacks,\
    \ as\n   these messages are not authenticated and integrity protected.  In\n \
    \  addition, because the PRF and MAC algorithms are transported at this\n   stage,\
    \ an attacker may try to remove the PRF and MAC options\n   containing strong\
    \ algorithms from the initial PA-Server message and\n   force the client to choose\
    \ the weakest algorithms.  Therefore, the\n   server needs to guarantee that all\
    \ the PRF and MAC algorithms for\n   which it provides support are strong enough.\n\
    \   In order to prevent very basic DoS attacks, a PCP device SHOULD\n   generate\
    \ state information as little as possible in the initial\n   PA-Server and PA-Client\
    \ message exchanges.  The choice of EAP method\n   is also very important.  The\
    \ selected EAP method must (1) be\n   resilient to attacks that are possible in\
    \ an insecure network\n   environment, (2) provide user-identity confidentiality\
    \ and protection\n   against dictionary attacks, and (3) support session-key\n\
    \   establishment.\n   When a PCP proxy [RFC7648] is located between a PCP server\
    \ and\n   PCP clients, the proxy may perform authentication with the PCP server\n\
    \   before it processes requests from the clients.  In addition,\n   re-authentication\
    \ between the PCP proxy and PCP server will not\n   interrupt the service that\
    \ the proxy provides to the clients, since\n   the proxy is still allowed to send\
    \ common PCP messages to the\n   PCP server during that period.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC3629]  Yergeau, F., \"UTF-8, a transformation format of ISO\n        \
    \      10646\", STD 63, RFC 3629, DOI 10.17487/RFC3629, November\n           \
    \   2003, <http://www.rfc-editor.org/info/rfc3629>.\n   [RFC3748]  Aboba, B.,\
    \ Blunk, L., Vollbrecht, J., Carlson, J., and H.\n              Levkowetz, Ed.,\
    \ \"Extensible Authentication Protocol\n              (EAP)\", RFC 3748, DOI 10.17487/RFC3748,\
    \ June 2004,\n              <http://www.rfc-editor.org/info/rfc3748>.\n   [RFC4868]\
    \  Kelly, S. and S. Frankel, \"Using HMAC-SHA-256, HMAC-SHA-\n              384,\
    \ and HMAC-SHA-512 with IPsec\", RFC 4868,\n              DOI 10.17487/RFC4868,\
    \ May 2007,\n              <http://www.rfc-editor.org/info/rfc4868>.\n   [RFC5281]\
    \  Funk, P. and S. Blake-Wilson, \"Extensible Authentication\n              Protocol\
    \ Tunneled Transport Layer Security Authenticated\n              Protocol Version\
    \ 0 (EAP-TTLSv0)\", RFC 5281,\n              DOI 10.17487/RFC5281, August 2008,\n\
    \              <http://www.rfc-editor.org/info/rfc5281>.\n   [RFC6887]  Wing,\
    \ D., Ed., Cheshire, S., Boucadair, M., Penno, R., and\n              P. Selkirk,\
    \ \"Port Control Protocol (PCP)\", RFC 6887,\n              DOI 10.17487/RFC6887,\
    \ April 2013,\n              <http://www.rfc-editor.org/info/rfc6887>.\n   [RFC7170]\
    \  Zhou, H., Cam-Winget, N., Salowey, J., and S. Hanna,\n              \"Tunnel\
    \ Extensible Authentication Protocol (TEAP) Version\n              1\", RFC 7170,\
    \ DOI 10.17487/RFC7170, May 2014,\n              <http://www.rfc-editor.org/info/rfc7170>.\n\
    \   [RFC7296]  Kaufman, C., Hoffman, P., Nir, Y., Eronen, P., and T.\n       \
    \       Kivinen, \"Internet Key Exchange Protocol Version 2\n              (IKEv2)\"\
    , STD 79, RFC 7296, DOI 10.17487/RFC7296, October\n              2014, <http://www.rfc-editor.org/info/rfc7296>.\n\
    \   [RFC7613]  Saint-Andre, P. and A. Melnikov, \"Preparation,\n             \
    \ Enforcement, and Comparison of Internationalized Strings\n              Representing\
    \ Usernames and Passwords\", RFC 7613,\n              DOI 10.17487/RFC7613, August\
    \ 2015,\n              <http://www.rfc-editor.org/info/rfc7613>.\n   [RFC7648]\
    \  Perreault, S., Boucadair, M., Penno, R., Wing, D., and S.\n              Cheshire,\
    \ \"Port Control Protocol (PCP) Proxy Function\",\n              RFC 7648, DOI\
    \ 10.17487/RFC7648, September 2015,\n              <http://www.rfc-editor.org/info/rfc7648>.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [RFC5216]  Simon, D., Aboba, B., and R. Hurst,\
    \ \"The EAP-TLS\n              Authentication Protocol\", RFC 5216, DOI 10.17487/RFC5216,\n\
    \              March 2008, <http://www.rfc-editor.org/info/rfc5216>.\n   [RFC5433]\
    \  Clancy, T. and H. Tschofenig, \"Extensible Authentication\n              Protocol\
    \ - Generalized Pre-Shared Key (EAP-GPSK) Method\",\n              RFC 5433, DOI\
    \ 10.17487/RFC5433, February 2009,\n              <http://www.rfc-editor.org/info/rfc5433>.\n\
    \   [RFC5448]  Arkko, J., Lehtovirta, V., and P. Eronen, \"Improved\n        \
    \      Extensible Authentication Protocol Method for 3rd\n              Generation\
    \ Authentication and Key Agreement (EAP-AKA')\",\n              RFC 5448, DOI\
    \ 10.17487/RFC5448, May 2009,\n              <http://www.rfc-editor.org/info/rfc5448>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Thanks to Dan Wing, Prashanth Patil, Dave Thaler, Peter\
    \ Saint-Andre,\n   Carlos Pignataro, Brian Haberman, Paul Kyzivat, Jouni Korhonen,\n\
    \   Stephen Farrell, and Terry Manderson for their valuable comments.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Margaret Cullen\n   Painless Security\n   356 Abbott Street\n\
    \   North Andover, MA  01845\n   United States\n   Phone: +1 781 405 7464\n  \
    \ Email: margaret@painless-security.com\n   URI:   http://www.painless-security.com\n\
    \   Sam Hartman\n   Painless Security\n   356 Abbott Street\n   North Andover,\
    \ MA  01845\n   United States\n   Email: hartmans@painless-security.com\n   URI:\
    \   http://www.painless-security.com\n   Dacheng Zhang\n   Beijing, China\n  \
    \ China\n   Email: zhang_dacheng@hotmail.com\n   Tirumaleswar Reddy\n   Cisco\
    \ Systems, Inc.\n   Cessna Business Park, Varthur Hobli\n   Sarjapur Marathalli\
    \ Outer Ring Road\n   Bangalore, Karnataka  560103\n   India\n   Email: tireddy@cisco.com\n"
