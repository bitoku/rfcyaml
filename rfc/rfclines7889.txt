Abstract This document defines an extension to the IMAP service whereby a server can inform the client about maximum message upload sizes, allowing the client to avoid sending APPEND commands that will fail because the messages are too large.
Some IMAP servers have limits for message upload size, and those limits are not published to the email client.
When the email client APPENDs a message with huge attachments, using non synchronizing literals, the APPEND fails because of the upload limit, but the client has already sent the message data anyway.
This results in unnecessary resource usage.
Especially in the mobile device environment, appending a message with huge attachments consumes device resources like device battery power and mobile data.
The IMAP APPENDLIMIT extension provides the ability to advertise a maximum upload size allowed by the IMAP server, so that the email client knows the size limitation beforehand.
By implementing this extension, IMAP server side processing of huge attachments above the maximum upload size can be avoided.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
In examples, "C:" and "S:" indicate lines sent by the client and server, respectively.
If a single "C:" or "S:" label applies to multiple lines, then the line breaks between those lines are for editorial clarity only and are not part of the actual protocol exchange.
APPENDLIMIT Extension An IMAP server that supports the APPENDLIMIT extension advertises this by including the name APPENDLIMIT in its capability list in the authenticated state.
The server may also advertise this extension before the user has logged in.
If this capability is omitted, no information is conveyed about the server's fixed maximum size for mail uploads.
An IMAP server can publish the APPENDLIMIT capability in two formats.
This indicates that the IMAP server has the same upload limit for all mailboxes.
The following example demonstrates the APPENDLIMIT capability with the same upload limit for all mailboxes.
CAPABILITY IMAP4rev1 ID APPENDLIMIT 257890
t1 OK foo (b) APPENDLIMIT
The APPENDLIMIT capability without any value indicates that the IMAP server supports this extension, and that the client will need to discover upload limits for each mailbox, as they might differ from mailbox to mailbox.
The following example demonstrates the APPENDLIMIT capability without any value.
CAPABILITY IMAP4rev1 ID APPENDLIMIT S
In this case, the client can get an APPENDLIMIT value by either issuing a STATUS or a LIST command.
An IMAP client implementing this extension should be able to parse both mailbox specific and global APPENDLIMIT responses.
By looking at the upload size advertised by the IMAP server, a client can avoid trying to APPEND mail more than the advertised limit.
An IMAP server can have mailbox specific APPENDLIMIT values that will not be advertised as part of the CAPABILITY response.
The IMAP server can publish specific values for each mailbox, and it can publish "NIL" for a mailbox to convey that there is no APPENDLIMIT for that mailbox.
The following subsections describe the changes to the STATUS and LIST commands in support of this situation.
STATUS Response to the STATUS Command A new attribute APPENDLIMIT is added to get the limit set by the server for a mailbox as part of a STATUS command.
An IMAP client should issue a STATUS command with an APPENDLIMIT item to get the mailbox specific upload value.
The following example demonstrates its usage.
S: t1 OK STATUS completed In the above example
, APPENDLIMIT represents the maximum upload size for INBOX.
STATUS Response to the LIST Command
If the server advertises the LIST STATUS capability [RFC5819], the client can issue a LIST command in combination with the STATUS return option to get the mailbox specific upload value.
The following example demonstrates its usage.
"INBOX" S:   STATUS "INBOX" (APPENDLIMIT 257890)
The IMAP server MUST recognize the APPENDLIMIT attribute and include an appropriate STATUS response for each matching mailbox.
Refer to Section 5 for the syntax.
If the server does not support the STATUS return option on the LIST command, then the client should use the STATUS command instead.
APPENDLIMIT Behavior Computing the APPENDLIMIT should be fast and should not take Access Control Lists (ACLs), quotas, or other such information into account.
The APPENDLIMIT specifies one part of the policy, but an APPEND command can still fail due to issues related to ACLs and quotas, even if the message being appended is smaller than the APPENDLIMIT.
If a client uploads a message that exceeds the maximum upload size set for that mailbox, then the server SHALL reject the APPEND command with a tagged TOOBIG response code.
Refer to Section 4 of [RFC4469] for various APPEND response codes and their handling.
A client SHOULD avoid use of non synchronizing literals [RFC7888] when the maximum upload size supported by the IMAP server is unknown.
Refer to Section 4.2.2.3 of [RFC4549] for usage of non synchronizing literals and its risk for disconnected IMAP clients.
The following syntax specification uses the Augmented Backus Naur Form (ABNF) notation as specified in [RFC5234] including the core rules in Appendix B.1 of that document.
[RFC3501] defines the non  terminals "capability" and "status att", and [RFC4466] defines "status att val".
All alphabetic characters are case insensitive.
The use of uppercase or lowercase characters to define token strings is for editorial clarity only.
Implementations MUST accept these strings in a case  insensitive fashion.
The number indicates the fixed maximum message size in octets that the server will accept.
An APPENDLIMIT number of 0 indicates the server will not accept any APPEND commands at all for the affected mailboxes.
This extension provides additional information that cooperative clients can use as an optimization and does not introduce new security concerns.
This extension does not address abusive clients that intend to consume server resources, and servers will still have to take action to disconnect and/or restrict access to clients that exhibit abusive behavior.
IANA Considerations IANA has added "APPENDLIMIT" to the "IMAP Capabilities" registry, using this document as its reference.
