- title: __initial_text__
  contents:
  - '                 Requirements for IP Version 4 Routers

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: PREFACE
  contents:
  - "PREFACE\n   This document is an updated version of RFC 1716, the historical\n\
    \   Router Requirements document.  That RFC preserved the significant\n   work\
    \ that went into the working group, but failed to adequately\n   describe current\
    \ technology for the IESG to consider it a current\n   standard.\n   The current\
    \ editor had been asked to bring the document up to date,\n   so that it is useful\
    \ as a procurement specification and a guide to\n   implementors.  In this, he\
    \ stands squarely on the shoulders of those\n   who have gone before him, and\
    \ depends largely on expert contributors\n   for text.  Any credit is theirs;\
    \ the errors are his.\n   The content and form of this document are due, in large\
    \ part, to the\n   working group's chair, and document's original editor and author:\n\
    \   Philip Almquist.  It is also largely due to the efforts of its\n   previous\
    \ editor, Frank Kastenholz.  Without their efforts, this\n   document would not\
    \ exist.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.3.4 Configuration ....................................\
    \   14\n   1.4 Algorithms .........................................   16\n   2.\
    \ INTERNET ARCHITECTURE ...............................   16\n   2.1 Introduction\
    \ .......................................   16\n   2.2 Elements of the Architecture\
    \ .......................   17\n   2.2.1 Protocol Layering ................................\
    \   17\n   2.2.2 Networks .........................................   19\n   2.2.3\
    \ Routers ..........................................   20\n   2.2.4 Autonomous\
    \ Systems ...............................   21\n   2.2.5 Addressing Architecture\
    \ ..........................   21\n   2.2.5.1 Classical IP Addressing Architecture\
    \ ...........   21\n   2.2.5.2 Classless Inter Domain Routing (CIDR) ..........\
    \   23\n   2.2.6 IP Multicasting ..................................   24\n   2.2.7\
    \ Unnumbered Lines and Networks Prefixes ...........   25\n   2.2.8 Notable Oddities\
    \ .................................   26\n   2.2.8.1 Embedded Routers ...............................\
    \   26\n   2.2.8.2 Transparent Routers ............................   27\n   2.3\
    \ Router Characteristics .............................   28\n   2.4 Architectural\
    \ Assumptions ..........................   31\n   3. LINK LAYER ..........................................\
    \   32\n   3.1 INTRODUCTION .......................................   32\n   3.2\
    \ LINK/INTERNET LAYER INTERFACE ......................   33\n   3.3 SPECIFIC ISSUES\
    \ ....................................   34\n   3.3.1 Trailer Encapsulation ............................\
    \   34\n   3.3.2 Address Resolution Protocol - ARP ................   34\n   3.3.3\
    \ Ethernet and 802.3 Coexistence ...................   35\n   3.3.4 Maximum Transmission\
    \ Unit - MTU ..................   35\n   3.3.5 Point-to-Point Protocol - PPP ....................\
    \   35\n   3.3.5.1 Introduction ...................................   36\n   3.3.5.2\
    \ Link Control Protocol (LCP) Options ............   36\n   3.3.5.3 IP Control\
    \ Protocol (IPCP) Options .............   38\n   3.3.6 Interface Testing ................................\
    \   38\n   4. INTERNET LAYER - PROTOCOLS ..........................   39\n   4.1\
    \ INTRODUCTION .......................................   39\n   4.2 INTERNET PROTOCOL\
    \ - IP .............................   39\n   4.2.1 INTRODUCTION .....................................\
    \   39\n   4.2.2 PROTOCOL WALK-THROUGH ............................   40\n   4.2.2.1\
    \ Options: RFC 791 Section 3.2 ...................   40\n   4.2.2.2 Addresses\
    \ in Options: RFC 791 Section 3.1 ......   42\n   4.2.2.3 Unused IP Header Bits:\
    \ RFC 791 Section 3.1 .....   43\n   4.2.2.4 Type of Service: RFC 791 Section\
    \ 3.1 ...........   44\n   4.2.2.5 Header Checksum: RFC 791 Section 3.1 ...........\
    \   44\n   4.2.2.6 Unrecognized Header Options: RFC 791,\n           Section 3.1\
    \ ....................................   44\n   4.2.2.7 Fragmentation: RFC 791\
    \ Section 3.2 .............   45\n   4.2.2.8 Reassembly: RFC 791 Section 3.2 ................\
    \   46\n   4.2.2.9 Time to Live: RFC 791 Section 3.2 ..............   46\n   4.2.2.10\
    \ Multi-subnet Broadcasts: RFC 922 ..............   47\n   4.2.2.11 Addressing:\
    \ RFC 791 Section 3.2 ...............   47\n   4.2.3 SPECIFIC ISSUES ..................................\
    \   50\n   4.2.3.1 IP Broadcast Addresses .........................   50\n   4.2.3.2\
    \ IP Multicasting ................................   50\n   4.2.3.3 Path MTU Discovery\
    \ .............................   51\n   4.2.3.4 Subnetting .....................................\
    \   51\n   4.3 INTERNET CONTROL MESSAGE PROTOCOL - ICMP ...........   52\n   4.3.1\
    \ INTRODUCTION .....................................   52\n   4.3.2 GENERAL ISSUES\
    \ ...................................   53\n   4.3.2.1 Unknown Message Types ..........................\
    \   53\n   4.3.2.2 ICMP Message TTL ...............................   53\n   4.3.2.3\
    \ Original Message Header ........................   53\n   4.3.2.4 ICMP Message\
    \ Source Address ....................   53\n   4.3.2.5 TOS and Precedence .............................\
    \   54\n   4.3.2.6 Source Route ...................................   54\n   4.3.2.7\
    \ When Not to Send ICMP Errors ...................   55\n   4.3.2.8 Rate Limiting\
    \ ..................................   56\n   4.3.3 SPECIFIC ISSUES ..................................\
    \   56\n   4.3.3.1 Destination Unreachable ........................   56\n   4.3.3.2\
    \ Redirect .......................................   57\n   4.3.3.3 Source Quench\
    \ ..................................   57\n   4.3.3.4 Time Exceeded ..................................\
    \   58\n   4.3.3.5 Parameter Problem ..............................   58\n   4.3.3.6\
    \ Echo Request/Reply .............................   58\n   4.3.3.7 Information\
    \ Request/Reply ......................   59\n   4.3.3.8 Timestamp and Timestamp\
    \ Reply ..................   59\n   4.3.3.9 Address Mask Request/Reply .....................\
    \   61\n   4.3.3.10 Router Advertisement and Solicitations ........   62\n   4.4\
    \ INTERNET GROUP MANAGEMENT PROTOCOL - IGMP ..........   62\n   5. INTERNET LAYER\
    \ - FORWARDING .........................   63\n   5.1 INTRODUCTION .......................................\
    \   63\n   5.2 FORWARDING WALK-THROUGH ............................   63\n   5.2.1\
    \ Forwarding Algorithm .............................   63\n   5.2.1.1 General\
    \ ........................................   64\n   5.2.1.2 Unicast ........................................\
    \   64\n   5.2.1.3 Multicast ......................................   65\n   5.2.2\
    \ IP Header Validation .............................   67\n   5.2.3 Local Delivery\
    \ Decision ..........................   69\n   5.2.4 Determining the Next Hop\
    \ Address .................   71\n   5.2.4.1 IP Destination Address .........................\
    \   72\n   5.2.4.2 Local/Remote Decision ..........................   72\n   5.2.4.3\
    \ Next Hop Address ...............................   74\n   5.2.4.4 Administrative\
    \ Preference ......................   77\n   5.2.4.5 Load Splitting .................................\
    \   79\n   5.2.5 Unused IP Header Bits: RFC-791 Section 3.1 .......   79\n   5.2.6\
    \ Fragmentation and Reassembly:  RFC-791,\n         Section 3.2 ......................................\
    \   80\n   5.2.7 Internet Control Message Protocol - ICMP .........   80\n   5.2.7.1\
    \ Destination Unreachable ........................   80\n   5.2.7.2 Redirect .......................................\
    \   82\n   5.2.7.3 Time Exceeded ..................................   84\n   5.2.8\
    \ INTERNET GROUP MANAGEMENT PROTOCOL - IGMP ........   84\n   5.3 SPECIFIC ISSUES\
    \ ....................................   85\n   5.3.1 Time to Live (TTL) ...............................\
    \   85\n   5.3.2 Type of Service (TOS) ............................   86\n   5.3.3\
    \ IP Precedence ....................................   87\n   5.3.3.1 Precedence-Ordered\
    \ Queue Service ...............   88\n   5.3.3.2 Lower Layer Precedence Mappings\
    \ ................   89\n   5.3.3.3 Precedence Handling For All Routers ............\
    \   90\n   5.3.4 Forwarding of Link Layer Broadcasts ..............   92\n   5.3.5\
    \ Forwarding of Internet Layer Broadcasts ..........   92\n   5.3.5.1 Limited\
    \ Broadcasts .............................   93\n   5.3.5.2 Directed Broadcasts\
    \ ............................   93\n   5.3.5.3 All-subnets-directed Broadcasts\
    \ ................   94\n   5.3.5.4  Subnet-directed Broadcasts ....................\
    \   94\n   5.3.6 Congestion Control ...............................   94\n   5.3.7\
    \ Martian Address Filtering ........................   96\n   5.3.8 Source Address\
    \ Validation ........................   97\n   5.3.9 Packet Filtering and Access\
    \ Lists ................   97\n   5.3.10 Multicast Routing ...............................\
    \   98\n   5.3.11 Controls on Forwarding ..........................   98\n   5.3.12\
    \ State Changes ...................................   99\n   5.3.12.1 When a Router\
    \ Ceases Forwarding ...............   99\n   5.3.12.2 When a Router Starts Forwarding\
    \ ...............  100\n   5.3.12.3 When an Interface Fails or is Disabled ........\
    \  100\n   5.3.12.4 When an Interface is Enabled ..................  100\n   5.3.13\
    \ IP Options ......................................  101\n   5.3.13.1 Unrecognized\
    \ Options ..........................  101\n   5.3.13.2 Security Option ...............................\
    \  101\n   5.3.13.3 Stream Identifier Option ......................  101\n   5.3.13.4\
    \ Source Route Options ..........................  101\n   5.3.13.5 Record Route\
    \ Option ...........................  102\n   5.3.13.6 Timestamp Option ..............................\
    \  102\n   6. TRANSPORT LAYER .....................................  103\n   6.1\
    \ USER DATAGRAM PROTOCOL - UDP .......................  103\n   6.2 TRANSMISSION\
    \ CONTROL PROTOCOL - TCP ................  104\n   7. APPLICATION LAYER - ROUTING\
    \ PROTOCOLS ...............  106\n   7.1 INTRODUCTION .......................................\
    \  106\n   7.1.1 Routing Security Considerations ..................  106\n   7.1.2\
    \ Precedence .......................................  107\n   7.1.3 Message Validation\
    \ ...............................  107\n   7.2 INTERIOR GATEWAY PROTOCOLS .........................\
    \  107\n   7.2.1 INTRODUCTION .....................................  107\n   7.2.2\
    \ OPEN SHORTEST PATH FIRST - OSPF ..................  108\n   7.2.3 INTERMEDIATE\
    \ SYSTEM TO  INTERMEDIATE  SYSTEM  -\n         DUAL IS-IS .......................................\
    \  108\n   7.3  EXTERIOR GATEWAY PROTOCOLS ........................  109\n   7.3.1\
    \  INTRODUCTION ....................................  109\n   7.3.2 BORDER GATEWAY\
    \ PROTOCOL - BGP ....................  109\n   7.3.2.1 Introduction ...................................\
    \  109\n   7.3.2.2 Protocol Walk-through ..........................  110\n   7.3.3\
    \ INTER-AS ROUTING WITHOUT AN  EXTERIOR  PROTOCOL\n         ..................................................\
    \  110\n   7.4 STATIC ROUTING .....................................  111\n   7.5\
    \ FILTERING OF ROUTING INFORMATION ...................  112\n   7.5.1 Route Validation\
    \ .................................  113\n   7.5.2 Basic Route Filtering ............................\
    \  113\n   7.5.3 Advanced Route Filtering .........................  114\n   7.6\
    \ INTER-ROUTING-PROTOCOL INFORMATION EXCHANGE ........  114\n   8. APPLICATION\
    \ LAYER - NETWORK  MANAGEMENT  PROTOCOLS\n      .....................................................\
    \  115\n   8.1 The Simple Network Management Protocol - SNMP ......  115\n   8.1.1\
    \ SNMP Protocol Elements ...........................  115\n   8.2 Community Table\
    \ ....................................  116\n   8.3 Standard MIBS ......................................\
    \  118\n   8.4 Vendor Specific MIBS ...............................  119\n   8.5\
    \ Saving Changes .....................................  120\n   9. APPLICATION\
    \ LAYER - MISCELLANEOUS PROTOCOLS .........  120\n   9.1 BOOTP ..............................................\
    \  120\n   9.1.1 Introduction .....................................  120\n   9.1.2\
    \ BOOTP Relay Agents ...............................  121\n   10. OPERATIONS AND\
    \ MAINTENANCE .........................  122\n   10.1 Introduction ......................................\
    \  122\n   10.2 Router Initialization .............................  123\n   10.2.1\
    \ Minimum Router Configuration ....................  123\n   10.2.2 Address and\
    \ Prefix Initialization ...............  124\n   10.2.3 Network Booting using\
    \ BOOTP and TFTP ............  125\n   10.3 Operation and Maintenance .........................\
    \  126\n   10.3.1 Introduction ....................................  126\n   10.3.2\
    \ Out Of Band Access ..............................  127\n   10.3.2 Router O&M\
    \ Functions ............................  127\n   10.3.2.1 Maintenance - Hardware\
    \ Diagnosis ..............  127\n   10.3.2.2 Control - Dumping and Rebooting ...............\
    \  127\n   10.3.2.3 Control - Configuring the Router ..............  128\n   10.3.2.4\
    \ Net Booting of System Software ................  128\n   10.3.2.5 Detecting\
    \ and responding to misconfiguration\n            ...............................................\
    \  129\n   10.3.2.6 Minimizing Disruption .........................  130\n   10.3.2.7\
    \ Control - Troubleshooting Problems ............  130\n   10.4 Security Considerations\
    \ ...........................  131\n   10.4.1 Auditing and Audit Trails .......................\
    \  131\n   10.4.2 Configuration Control ...........................  132\n   11.\
    \ REFERENCES .........................................  133\n   APPENDIX A. REQUIREMENTS\
    \ FOR SOURCE-ROUTING HOSTS ......  145\n   APPENDIX B. GLOSSARY ...................................\
    \  146\n   APPENDIX C. FUTURE DIRECTIONS ..........................  152\n   APPENDIX\
    \ D. Multicast Routing Protocols ................  154\n   D.1 Introduction .......................................\
    \  154\n   D.2 Distance  Vector  Multicast  Routing  Protocol  -\n       DVMRP\
    \ ..............................................  154\n   D.3 Multicast Extensions\
    \ to OSPF - MOSPF ...............  154\n   D.4 Protocol Independent Multicast\
    \ - PIM ...............  155\n   APPENDIX E Additional Next-Hop  Selection  Algorithms\n\
    \        ...................................................  155\n   E.1. Some\
    \ Historical Perspective .......................  155\n   E.2. Additional Pruning\
    \ Rules ..........................  157\n   E.3 Some Route Lookup Algorithms .......................\
    \  159\n   E.3.1 The Revised Classic Algorithm ....................  159\n   E.3.2\
    \ The Variant Router Requirements Algorithm ........  160\n   E.3.3 The OSPF Algorithm\
    \ ...............................  160\n   E.3.4 The Integrated IS-IS Algorithm\
    \ ...................  162\n   Security Considerations ................................\
    \  163\n   APPENDIX F: HISTORICAL ROUTING PROTOCOLS ...............  164\n   F.1\
    \ EXTERIOR GATEWAY PROTOCOL - EGP ....................  164\n   F.1.1 Introduction\
    \ .....................................  164\n   F.1.2 Protocol Walk-through ............................\
    \  165\n   F.2 ROUTING INFORMATION PROTOCOL - RIP .................  167\n   F.2.1\
    \ Introduction .....................................  167\n   F.2.2 Protocol Walk-Through\
    \ ............................  167\n   F.2.3 Specific Issues ..................................\
    \  172\n   F.3 GATEWAY TO GATEWAY PROTOCOL - GGP ..................  173\n   Acknowledgments\
    \ ........................................  173\n   Editor's Address .......................................\
    \  175\n"
- title: 1. INTRODUCTION
  contents:
  - "1. INTRODUCTION\n  This memo replaces for RFC 1716, \"Requirements for Internet\
    \ Gateways\"\n  ([INTRO:1]).\n  This memo defines and discusses requirements for\
    \ devices that perform\n  the network layer forwarding function of the Internet\
    \ protocol suite.\n  The Internet community usually refers to such devices as\
    \ IP routers or\n  simply routers; The OSI community refers to such devices as\n\
    \  intermediate systems.  Many older Internet documents refer to these\n  devices\
    \ as gateways, a name which more recently has largely passed out\n  of favor to\
    \ avoid confusion with application gateways.\n  An IP router can be distinguished\
    \ from other sorts of packet switching\n  devices in that a router examines the\
    \ IP protocol header as part of\n  the switching process.  It generally removes\
    \ the Link Layer header a\n  message was received with, modifies the IP header,\
    \ and replaces the\n  Link Layer header for retransmission.\n  The authors of\
    \ this memo recognize, as should its readers, that many\n  routers support more\
    \ than one protocol.  Support for multiple protocol\n  suites will be required\
    \ in increasingly large parts of the Internet in\n  the future.  This memo, however,\
    \ does not attempt to specify Internet\n  requirements for protocol suites other\
    \ than TCP/IP.\n  This document enumerates standard protocols that a router connected\
    \ to\n  the Internet must use, and it incorporates by reference the RFCs and\n\
    \  other documents describing the current specifications for these\n  protocols.\
    \  It corrects errors in the referenced documents and adds\n  additional discussion\
    \ and guidance for an implementor.\n  For each protocol, this memo also contains\
    \ an explicit set of\n  requirements, recommendations, and options.  The reader\
    \ must\n  understand that the list of requirements in this memo is incomplete\
    \ by\n  itself.  The complete set of requirements for an Internet protocol\n \
    \ router is primarily defined in the standard protocol specification\n  documents,\
    \ with the corrections, amendments, and supplements contained\n  in this memo.\n\
    \  This memo should be read in conjunction with the Requirements for\n  Internet\
    \ Hosts RFCs ([INTRO:2] and [INTRO:3]).  Internet hosts and\n  routers must both\
    \ be capable of originating IP datagrams and receiving\n  IP datagrams destined\
    \ for them.  The major distinction between\n  Internet hosts and routers is that\
    \ routers implement forwarding\n  algorithms, while Internet hosts do not require\
    \ forwarding\n  capabilities.  Any Internet host acting as a router must adhere\
    \ to the\n  requirements contained in this memo.\n  The goal of open system interconnection\
    \ dictates that routers must\n  function correctly as Internet hosts when necessary.\
    \  To achieve this,\n  this memo provides guidelines for such instances.  For\
    \ simplification\n  and ease of document updates, this memo tries to avoid overlapping\n\
    \  discussions of host requirements with [INTRO:2] and [INTRO:3] and\n  incorporates\
    \ the relevant requirements of those documents by\n  reference.  In some cases\
    \ the requirements stated in [INTRO:2] and\n  [INTRO:3] are superseded by this\
    \ document.\n  A good-faith implementation of the protocols produced after careful\n\
    \  reading of the RFCs should differ from the requirements of this memo\n  in\
    \ only minor ways.  Producing such an implementation often requires\n  some interaction\
    \ with the Internet technical community, and must\n  follow good communications\
    \ software engineering practices.  In many\n  cases, the requirements in this\
    \ document are already stated or implied\n  in the standard protocol documents,\
    \ so that their inclusion here is,\n  in a sense, redundant.  They were included\
    \ because some past\n  implementation has made the wrong choice, causing problems\
    \ of\n  interoperability, performance, and/or robustness.\n  This memo includes\
    \ discussion and explanation of many of the\n  requirements and recommendations.\
    \  A simple list of requirements would\n  be dangerous, because:\n  o Some required\
    \ features are more important than others, and some\n     features are optional.\n\
    \  o Some features are critical in some applications of routers but\n     irrelevant\
    \ in others.\n  o There may be valid reasons why particular vendor products that\
    \ are\n     designed for restricted contexts might choose to use different\n \
    \    specifications.\n  However, the specifications of this memo must be followed\
    \ to meet the\n  general goal of arbitrary router interoperation across the diversity\n\
    \  and complexity of the Internet.  Although most current implementations\n  fail\
    \ to meet these requirements in various ways, some minor and some\n  major, this\
    \ specification is the ideal towards which we need to move.\n  These requirements\
    \ are based on the current level of Internet\n  architecture.  This memo will\
    \ be updated as required to provide\n  additional clarifications or to include\
    \ additional information in\n  those areas in which specifications are still evolving.\n"
- title: 1.1 Reading this Document
  contents:
  - '1.1 Reading this Document

    '
- title: 1.1.1 Organization
  contents:
  - "1.1.1 Organization\n  This memo emulates the layered organization used by [INTRO:2]\
    \ and\n  [INTRO:3].  Thus, Chapter 2 describes the layers found in the Internet\n\
    \  architecture.  Chapter 3 covers the Link Layer.  Chapters 4 and 5 are\n  concerned\
    \ with the Internet Layer protocols and forwarding algorithms.\n  Chapter 6 covers\
    \ the Transport Layer.  Upper layer protocols are\n  divided among Chapters 7,\
    \ 8, and 9.  Chapter 7 discusses the protocols\n  which routers use to exchange\
    \ routing information with each other.\n  Chapter 8 discusses network management.\
    \  Chapter 9 discusses other\n  upper layer protocols.  The final chapter covers\
    \ operations and\n  maintenance features.  This organization was chosen for simplicity,\n\
    \  clarity, and consistency with the Host Requirements RFCs.  Appendices\n  to\
    \ this memo include a bibliography, a glossary, and some conjectures\n  about\
    \ future directions of router standards.\n  In describing the requirements, we\
    \ assume that an implementation\n  strictly mirrors the layering of the protocols.\
    \  However, strict\n  layering is an imperfect model, both for the protocol suite\
    \ and for\n  recommended implementation approaches.  Protocols in different layers\n\
    \  interact in complex and sometimes subtle ways, and particular\n  functions\
    \ often involve multiple layers.  There are many design\n  choices in an implementation,\
    \ many of which involve creative breaking\n  of strict layering.  Every implementor\
    \ is urged to read [INTRO:4] and\n  [INTRO:5].\n  Each major section of this memo\
    \ is organized into the following\n  subsections:\n  (1) Introduction\n  (2) Protocol\
    \ Walk-Through - considers the protocol specification\n       documents section-by-section,\
    \ correcting errors, stating\n       requirements that may be ambiguous or ill-defined,\
    \ and providing\n       further clarification or explanation.\n  (3) Specific\
    \ Issues - discusses protocol design and implementation\n       issues that were\
    \ not included in the walk-through.\n  Under many of the individual topics in\
    \ this memo, there is\n  parenthetical material labeled DISCUSSION or IMPLEMENTATION.\
    \  This\n  material is intended to give a justification, clarification or\n  explanation\
    \ to the preceding requirements text.  The implementation\n  material contains\
    \ suggested approaches that an implementor may want to\n  consider.  The DISCUSSION\
    \ and IMPLEMENTATION sections are not part of\n  the standard.\n"
- title: 1.1.2 Requirements
  contents:
  - "1.1.2 Requirements\n  In this memo, the words that are used to define the significance\
    \ of\n  each particular requirement are capitalized.  These words are:\n  o MUST\n\
    \     This word means that the item is an absolute requirement of the\n     specification.\
    \  Violation of such a requirement is a fundamental\n     error; there is no case\
    \ where it is justified.\n  o MUST IMPLEMENT\n     This phrase means that this\
    \ specification requires that the item be\n     implemented, but does not require\
    \ that it be enabled by default.\n  o MUST NOT\n     This phrase means that the\
    \ item is an absolute prohibition of the\n     specification.\n  o SHOULD\n  \
    \   This word means that there may exist valid reasons in particular\n     circumstances\
    \ to ignore this item, but the full implications should\n     be understood and\
    \ the case carefully weighed before choosing a\n     different course.\n  o SHOULD\
    \ IMPLEMENT\n     This phrase is similar in meaning to SHOULD, but is used when\
    \ we\n     recommend that a particular feature be provided but does not\n    \
    \ necessarily recommend that it be enabled by default.\n  o SHOULD NOT\n     This\
    \ phrase means that there may exist valid reasons in particular\n     circumstances\
    \ when the described behavior is acceptable or even\n     useful.  Even so, the\
    \ full implications should be understood and\n     the case carefully weighed\
    \ before implementing any behavior\n     described with this label.\n  o MAY\n\
    \     This word means that this item is truly optional.  One vendor may\n    \
    \ choose to include the item because a particular marketplace\n     requires it\
    \ or because it enhances the product, for example;\n     another vendor may omit\
    \ the same item.\n"
- title: 1.1.3 Compliance
  contents:
  - "1.1.3 Compliance\n  Some requirements are applicable to all routers.  Other requirements\n\
    \  are applicable only to those which implement particular features or\n  protocols.\
    \  In the following paragraphs, relevant refers to the union\n  of the requirements\
    \ applicable to all routers and the set of\n  requirements applicable to a particular\
    \ router because of the set of\n  features and protocols it has implemented.\n\
    \  Note that not all Relevant requirements are stated directly in this\n  memo.\
    \  Various parts of this memo incorporate by reference sections of\n  the Host\
    \ Requirements specification, [INTRO:2] and [INTRO:3].  For\n  purposes of determining\
    \ compliance with this memo, it does not matter\n  whether a Relevant requirement\
    \ is stated directly in this memo or\n  merely incorporated by reference from\
    \ one of those documents.\n  An implementation is said to be conditionally compliant\
    \ if it\n  satisfies all the Relevant MUST, MUST IMPLEMENT, and MUST NOT\n  requirements.\
    \  An implementation is said to be unconditionally\n  compliant if it is conditionally\
    \ compliant and also satisfies all the\n  Relevant SHOULD, SHOULD IMPLEMENT, and\
    \ SHOULD NOT requirements.  An\n  implementation is not compliant if it is not\
    \ conditionally compliant\n  (i.e., it fails to satisfy one or more of the Relevant\
    \ MUST, MUST\n  IMPLEMENT, or MUST NOT requirements).\n  This specification occasionally\
    \ indicates that an implementation\n  SHOULD implement a management variable,\
    \ and that it SHOULD have a\n  certain default value.  An unconditionally compliant\
    \ implementation\n  implements the default behavior, and if there are other implemented\n\
    \  behaviors implements the variable.  A conditionally compliant\n  implementation\
    \ clearly documents what the default setting of the\n  variable is or, in the\
    \ absence of the implementation of a variable,\n  may be construed to be.  An\
    \ implementation that both fails to\n  implement the variable and chooses a different\
    \ behavior is not\n  compliant.\n  For any of the SHOULD and SHOULD NOT requirements,\
    \ a router may\n  provide a configuration option that will cause the router to\
    \ act other\n  than as specified by the requirement.  Having such a configuration\n\
    \  option does not void a router's claim to unconditional compliance if\n  the\
    \ option has a default setting, and that setting causes the router\n  to operate\
    \ in the required manner.\n  Likewise, routers may provide, except where explicitly\
    \ prohibited by\n  this memo, options which cause them to violate MUST or MUST\
    \ NOT\n  requirements.  A router that provides such options is compliant\n  (either\
    \ fully or conditionally) if and only if each such option has a\n  default setting\
    \ that causes the router to conform to the requirements\n  of this memo.  Please\
    \ note that the authors of this memo, although\n  aware of market realities, strongly\
    \ recommend against provision of\n  such options.  Requirements are labeled MUST\
    \ or MUST NOT because\n  experts in the field have judged them to be particularly\
    \ important to\n  interoperability or proper functioning in the Internet.  Vendors\n\
    \  should weigh carefully the customer support costs of providing options\n  that\
    \ violate those rules.\n  Of course, this memo is not a complete specification\
    \ of an IP router,\n  but rather is closer to what in the OSI world is called\
    \ a profile.\n  For example, this memo requires that a number of protocols be\n\
    \  implemented.  Although most of the contents of their protocol\n  specifications\
    \ are not repeated in this memo, implementors are\n  nonetheless required to implement\
    \ the protocols according to those\n  specifications.\n"
- title: 1.2 Relationships to Other Standards
  contents:
  - "1.2 Relationships to Other Standards\n  There are several reference documents\
    \ of interest in checking the\n  status of protocol specifications and standardization:\n\
    \    o INTERNET OFFICIAL PROTOCOL STANDARDS\n       This document describes the\
    \ Internet standards process and lists\n       the standards status of the protocols.\
    \  As of this writing, the\n       current version of this document is STD 1,\
    \ RFC 1780, [ARCH:7].\n       This document is periodically re-issued.  You should\
    \ always\n       consult an RFC repository and use the latest version of this\n\
    \       document.\n    o Assigned Numbers\n       This document lists the assigned\
    \ values of the parameters used in\n       the various protocols.  For example,\
    \ it lists IP protocol codes,\n       TCP port numbers, Telnet Option Codes, ARP\
    \ hardware types, and\n       Terminal Type names.  As of this writing, the current\
    \ version of\n       this document is STD 2, RFC 1700, [INTRO:7].  This document\
    \ is\n       periodically re-issued.  You should always consult an RFC\n     \
    \  repository and use the latest version of this document.\n    o Host Requirements\n\
    \       This pair of documents reviews the specifications that apply to\n    \
    \   hosts and supplies guidance and clarification for any\n       ambiguities.\
    \  Note that these requirements also apply to routers,\n       except where otherwise\
    \ specified in this memo.  As of this\n       writing, the current versions of\
    \ these documents are RFC 1122 and\n       RFC 1123 (STD 3), [INTRO:2] and [INTRO:3].\n\
    \    o Router Requirements (formerly Gateway Requirements)\n       This memo.\n\
    \   Note that these documents are revised and updated at different times;\n  \
    \ in case of differences between these documents, the most recent must\n   prevail.\n\
    \   These and other Internet protocol documents may be obtained from the:\n  \
    \                             The InterNIC\n                              DS.INTERNIC.NET\n\
    \                  InterNIC Directory and Database Service\n                 \
    \            info@internic.net\n                              +1-908-668-6587\n\
    \                       URL: http://ds.internic.net/\n"
- title: 1.3 General Considerations
  contents:
  - "1.3 General Considerations\n   There are several important lessons that vendors\
    \ of Internet software\n   have learned and which a new vendor should consider\
    \ seriously.\n"
- title: 1.3.1 Continuing Internet Evolution
  contents:
  - "1.3.1 Continuing Internet Evolution\n   The enormous growth of the Internet has\
    \ revealed problems of\n   management and scaling in a large datagram based packet\
    \ communication\n   system.  These problems are being addressed, and as a result\
    \ there\n   will be continuing evolution of the specifications described in this\n\
    \   memo.  New routing protocols, algorithms, and architectures are\n   constantly\
    \ being developed.  New internet layer protocols, and\n   modifications to existing\
    \ protocols, are also constantly being\n   devised.  Routers play a crucial role\
    \ in the Internet, and the number\n   of routers deployed in the Internet is much\
    \ smaller than the number\n   of hosts.  Vendors should therefore expect that\
    \ router standards will\n   continue to evolve much more quickly than host standards.\
    \  These\n   changes will be carefully planned and controlled since there is\n\
    \   extensive participation in this planning by the vendors and by the\n   organizations\
    \ responsible for operation of the networks.\n   Development, evolution, and revision\
    \ are characteristic of computer\n   network protocols today, and this situation\
    \ will persist for some\n   years.  A vendor who develops computer communications\
    \ software for\n   the Internet protocol suite (or any other protocol suite!)\
    \ and then\n   fails to maintain and update that software for changing\n   specifications\
    \ is going to leave a trail of unhappy customers.  The\n   Internet is a large\
    \ communication network, and the users are in\n   constant contact through it.\
    \  Experience has shown that knowledge of\n   deficiencies in vendor software\
    \ propagates quickly through the\n   Internet technical community.\n"
- title: 1.3.2 Robustness Principle
  contents:
  - "1.3.2 Robustness Principle\n   At every layer of the protocols, there is a general\
    \ rule (from\n   [TRANS:2] by Jon Postel) whose application can lead to enormous\n\
    \   benefits in robustness and interoperability:\n                      Be conservative\
    \ in what you do,\n                be liberal in what you accept from others.\n\
    \   Software should be written to deal with every conceivable error, no\n   matter\
    \ how unlikely.  Eventually a packet will come in with that\n   particular combination\
    \ of errors and attributes, and unless the\n   software is prepared, chaos can\
    \ ensue.  It is best to assume that the\n   network is filled with malevolent\
    \ entities that will send packets\n   designed to have the worst possible effect.\
    \  This assumption will\n   lead to suitably protective design.  The most serious\
    \ problems in the\n   Internet have been caused by unforeseen mechanisms triggered\
    \ by low\n   probability events; mere human malice would never have taken so\n\
    \   devious a course!\n   Adaptability to change must be designed into all levels\
    \ of router\n   software.  As a simple example, consider a protocol specification\n\
    \   that contains an enumeration of values for a particular header field\n   -\
    \ e.g., a type field, a port number, or an error code; this\n   enumeration must\
    \ be assumed to be incomplete.  If the protocol\n   specification defines four\
    \ possible error codes, the software must\n   not break when a fifth code is defined.\
    \  An undefined code might be\n   logged, but it must not cause a failure.\n \
    \  The second part of the principal is almost as important: software on\n   hosts\
    \ or other routers may contain deficiencies that make it unwise\n   to exploit\
    \ legal but obscure protocol features.  It is unwise to\n   stray far from the\
    \ obvious and simple, lest untoward effects result\n   elsewhere.  A corollary\
    \ of this is watch out for misbehaving hosts;\n   router software should be prepared\
    \ to survive in the presence of\n   misbehaving hosts.  An important function\
    \ of routers in the Internet\n   is to limit the amount of disruption such hosts\
    \ can inflict on the\n   shared communication facility.\n"
- title: 1.3.3 Error Logging
  contents:
  - "1.3.3 Error Logging\n   The Internet includes a great variety of systems, each\
    \ implementing\n   many protocols and protocol layers, and some of these contain\
    \ bugs\n   and misguided features in their Internet protocol software.  As a\n\
    \   result of complexity, diversity, and distribution of function, the\n   diagnosis\
    \ of problems is often very difficult.\n   Problem diagnosis will be aided if\
    \ routers include a carefully\n   designed facility for logging erroneous or strange\
    \ events.  It is\n   important to include as much diagnostic information as possible\
    \ when\n   an error is logged.  In particular, it is often useful to record the\n\
    \   header(s) of a packet that caused an error.  However, care must be\n   taken\
    \ to ensure that error logging does not consume prohibitive\n   amounts of resources\
    \ or otherwise interfere with the operation of the\n   router.\n   There is a\
    \ tendency for abnormal but harmless protocol events to\n   overflow error logging\
    \ files; this can be avoided by using a circular\n   log, or by enabling logging\
    \ only while diagnosing a known failure.\n   It may be useful to filter and count\
    \ duplicate successive messages.\n   One strategy that seems to work well is to\
    \ both:\n   o Always count abnormalities and make such counts accessible through\n\
    \      the management protocol (see Chapter 8); and\n   o Allow the logging of\
    \ a great variety of events to be selectively\n      enabled.  For example, it\
    \ might useful to be able to log\n      everything or to log everything for host\
    \ X.\n   This topic is further discussed in [MGT:5].\n"
- title: 1.3.4 Configuration
  contents:
  - "1.3.4 Configuration\n   In an ideal world, routers would be easy to configure,\
    \ and perhaps\n   even entirely self-configuring.  However, practical experience\
    \ in the\n   real world suggests that this is an impossible goal, and that many\n\
    \   attempts by vendors to make configuration easy actually cause\n   customers\
    \ more grief than they prevent.  As an extreme example, a\n   router designed\
    \ to come up and start routing packets without\n   requiring any configuration\
    \ information at all would almost certainly\n   choose some incorrect parameter,\
    \ possibly causing serious problems on\n   any networks unfortunate enough to\
    \ be connected to it.\n   Often this memo requires that a parameter be a configurable\
    \ option.\n   There are several reasons for this.  In a few cases there currently\n\
    \   is some uncertainty or disagreement about the best value and it may\n   be\
    \ necessary to update the recommended value in the future.  In other\n   cases,\
    \ the value really depends on external factors - e.g., the\n   distribution of\
    \ its communication load, or the speeds and topology of\n   nearby networks -\
    \ and self-tuning algorithms are unavailable and may\n   be insufficient.  In\
    \ some cases, configurability is needed because of\n   administrative requirements.\n\
    \   Finally, some configuration options are required to communicate with\n   obsolete\
    \ or incorrect implementations of the protocols, distributed\n   without sources,\
    \ that persist in many parts of the Internet.  To make\n   correct systems coexist\
    \ with these faulty systems, administrators\n   must occasionally misconfigure\
    \ the correct systems.  This problem\n   will correct itself gradually as the\
    \ faulty systems are retired, but\n   cannot be ignored by vendors.\n   When we\
    \ say that a parameter must be configurable, we do not intend\n   to require that\
    \ its value be explicitly read from a configuration\n   file at every boot time.\
    \  For many parameters, there is one value\n   that is appropriate for all but\
    \ the most unusual situations.  In such\n   cases, it is quite reasonable that\
    \ the parameter default to that\n   value if not explicitly set.\n   This memo\
    \ requires a particular value for such defaults in some\n   cases.  The choice\
    \ of default is a sensitive issue when the\n   configuration item controls accommodation\
    \ of existing, faulty,\n   systems.  If the Internet is to converge successfully\
    \ to complete\n   interoperability, the default values built into implementations\
    \ must\n   implement the official protocol, not misconfigurations to accommodate\n\
    \   faulty implementations.  Although marketing considerations have led\n   some\
    \ vendors to choose misconfiguration defaults, we urge vendors to\n   choose defaults\
    \ that will conform to the standard.\n   Finally, we note that a vendor needs\
    \ to provide adequate\n   documentation on all configuration parameters, their\
    \ limits and\n   effects.\n"
- title: 1.4 Algorithms
  contents:
  - "1.4 Algorithms\n   In several places in this memo, specific algorithms that a\
    \ router\n   ought to follow are specified.  These algorithms are not, per se,\n\
    \   required of the router.  A router need not implement each algorithm\n   as\
    \ it is written in this document.  Rather, an implementation must\n   present\
    \ a behavior to the external world that is the same as a\n   strict, literal,\
    \ implementation of the specified algorithm.\n   Algorithms are described in a\
    \ manner that differs from the way a good\n   implementor would implement them.\
    \  For expository purposes, a style\n   that emphasizes conciseness, clarity,\
    \ and independence from\n   implementation details has been chosen.  A good implementor\
    \ will\n   choose algorithms and implementation methods that produce the same\n\
    \   results as these algorithms, but may be more efficient or less\n   general.\n\
    \   We note that the art of efficient router implementation is outside\n   the\
    \ scope of this memo.\n"
- title: 2. INTERNET ARCHITECTURE
  contents:
  - "2. INTERNET ARCHITECTURE\n   This chapter does not contain any requirements.\
    \  However, it does\n   contain useful background information on the general architecture\
    \ of\n   the Internet and of routers.\n   General background and discussion on\
    \ the Internet architecture and\n   supporting protocol suite can be found in\
    \ the DDN Protocol Handbook\n   [ARCH:1]; for background see for example [ARCH:2],\
    \ [ARCH:3], and\n   [ARCH:4].  The Internet architecture and protocols are also\
    \ covered\n   in an ever-growing number of textbooks, such as [ARCH:5] and\n \
    \  [ARCH:6].\n"
- title: 2.1 Introduction
  contents:
  - "2.1 Introduction\n   The Internet system consists of a number of interconnected\
    \ packet\n   networks supporting communication among host computers using the\n\
    \   Internet protocols.  These protocols include the Internet Protocol\n   (IP),\
    \ the Internet Control Message Protocol (ICMP), the Internet\n   Group Management\
    \ Protocol (IGMP), and a variety transport and\n   application protocols that\
    \ depend upon them.  As was described in\n   Section [1.2], the Internet Engineering\
    \ Steering Group periodically\n   releases an Official Protocols memo listing\
    \ all the Internet\n   protocols.\n   All Internet protocols use IP as the basic\
    \ data transport mechanism.\n   IP is a datagram, or connectionless, internetwork\
    \ service and\n   includes provision for addressing, type-of-service specification,\n\
    \   fragmentation and reassembly, and security.  ICMP and IGMP are\n   considered\
    \ integral parts of IP, although they are architecturally\n   layered upon IP.\
    \  ICMP provides error reporting, flow control,\n   first-hop router redirection,\
    \ and other maintenance and control\n   functions.  IGMP provides the mechanisms\
    \ by which hosts and routers\n   can join and leave IP multicast groups.\n   Reliable\
    \ data delivery is provided in the Internet protocol suite by\n   Transport Layer\
    \ protocols such as the Transmission Control Protocol\n   (TCP), which provides\
    \ end-end retransmission, resequencing and\n   connection control.  Transport\
    \ Layer connectionless service is\n   provided by the User Datagram Protocol (UDP).\n"
- title: 2.2 Elements of the Architecture
  contents:
  - '2.2 Elements of the Architecture

    '
- title: 2.2.1 Protocol Layering
  contents:
  - "2.2.1 Protocol Layering\n   To communicate using the Internet system, a host\
    \ must implement the\n   layered set of protocols comprising the Internet protocol\
    \ suite.  A\n   host typically must implement at least one protocol from each\
    \ layer.\n   The protocol layers used in the Internet architecture are as follows\n\
    \   [ARCH:7]:\n   o Application Layer\n      The Application Layer is the top\
    \ layer of the Internet protocol\n      suite.  The Internet suite does not further\
    \ subdivide the\n      Application Layer, although some application layer protocols\
    \ do\n      contain some internal sub-layering.  The application layer of the\n\
    \      Internet suite essentially combines the functions of the top two\n    \
    \  layers - Presentation and Application - of the OSI Reference Model\n      [ARCH:8].\
    \  The Application Layer in the Internet protocol suite\n      also includes some\
    \ of the function relegated to the Session Layer\n      in the OSI Reference Model.\n\
    \      We distinguish two categories of application layer protocols: user\n  \
    \    protocols that provide service directly to users, and support\n      protocols\
    \ that provide common system functions.  The most common\n      Internet user\
    \ protocols are:\n      - Telnet (remote login)\n      - FTP (file transfer)\n\
    \      - SMTP (electronic mail delivery)\n      There are a number of other standardized\
    \ user protocols and many\n      private user protocols.\n      Support protocols,\
    \ used for host name mapping, booting, and\n      management include SNMP, BOOTP,\
    \ TFTP, the Domain Name System (DNS)\n      protocol, and a variety of routing\
    \ protocols.\n      Application Layer protocols relevant to routers are discussed\
    \ in\n      chapters 7, 8, and 9 of this memo.\n   o Transport Layer\n      The\
    \ Transport Layer provides end-to-end communication services.\n      This layer\
    \ is roughly equivalent to the Transport Layer in the OSI\n      Reference Model,\
    \ except that it also incorporates some of OSI's\n      Session Layer establishment\
    \ and destruction functions.\n      There are two primary Transport Layer protocols\
    \ at present:\n      - Transmission Control Protocol (TCP)\n      - User Datagram\
    \ Protocol (UDP)\n      TCP is a reliable connection-oriented transport service\
    \ that\n      provides end-to-end reliability, resequencing, and flow control.\n\
    \      UDP is a connectionless (datagram) transport service.  Other\n      transport\
    \ protocols have been developed by the research community,\n      and the set\
    \ of official Internet transport protocols may be\n      expanded in the future.\n\
    \      Transport Layer protocols relevant to routers are discussed in\n      Chapter\
    \ 6.\n   o Internet Layer\n      All Internet transport protocols use the Internet\
    \ Protocol (IP) to\n      carry data from source host to destination host.  IP\
    \ is a\n      connectionless or datagram internetwork service, providing no\n\
    \      end-to-end delivery guarantees.  IP datagrams may arrive at the\n     \
    \ destination host damaged, duplicated, out of order, or not at all.\n      The\
    \ layers above IP are responsible for reliable delivery service\n      when it\
    \ is required.  The IP protocol includes provision for\n      addressing, type-of-service\
    \ specification, fragmentation and\n      reassembly, and security.\n      The\
    \ datagram or connectionless nature of IP is a fundamental and\n      characteristic\
    \ feature of the Internet architecture.\n      The Internet Control Message Protocol\
    \ (ICMP) is a control protocol\n      that is considered to be an integral part\
    \ of IP, although it is\n      architecturally layered upon IP - it uses IP to\
    \ carry its data\n      end-to-end.  ICMP provides error reporting, congestion\
    \ reporting,\n      and first-hop router redirection.\n      The Internet Group\
    \ Management Protocol (IGMP) is an Internet layer\n      protocol used for establishing\
    \ dynamic host groups for IP\n      multicasting.\n      The Internet layer protocols\
    \ IP, ICMP, and IGMP are discussed in\n      chapter 4.\n   o Link Layer\n   \
    \   To communicate on a directly connected network, a host must\n      implement\
    \ the communication protocol used to interface to that\n      network.  We call\
    \ this a Link Layer protocol.\n      Some older Internet documents refer to this\
    \ layer as the Network\n      Layer, but it is not the same as the Network Layer\
    \ in the OSI\n      Reference Model.\n      This layer contains everything below\
    \ the Internet Layer and above\n      the Physical Layer (which is the media connectivity,\
    \ normally\n      electrical or optical, which encodes and transports messages).\n\
    \      Its responsibility is the correct delivery of messages, among\n      which\
    \ it does not differentiate.\n      Protocols in this Layer are generally outside\
    \ the scope of\n      Internet standardization; the Internet (intentionally) uses\n\
    \      existing standards whenever possible.  Thus, Internet Link Layer\n    \
    \  standards usually address only address resolution and rules for\n      transmitting\
    \ IP packets over specific Link Layer protocols.\n      Internet Link Layer standards\
    \ are discussed in chapter 3.\n"
- title: 2.2.2 Networks
  contents:
  - "2.2.2 Networks\n   The constituent networks of the Internet system are required\
    \ to\n   provide only packet (connectionless) transport.  According to the IP\n\
    \   service specification, datagrams can be delivered out of order, be\n   lost\
    \ or duplicated, and/or contain errors.\n   For reasonable performance of the\
    \ protocols that use IP (e.g., TCP),\n   the loss rate of the network should be\
    \ very low.  In networks\n   providing connection-oriented service, the extra\
    \ reliability provided\n   by virtual circuits enhances the end-end robustness\
    \ of the system,\n   but is not necessary for Internet operation.\n   Constituent\
    \ networks may generally be divided into two classes:\n     o Local-Area Networks\
    \ (LANs)\n        LANs may have a variety of designs.  LANs normally cover a small\n\
    \        geographical area (e.g., a single building or plant site) and\n     \
    \   provide high bandwidth with low delays.  LANs may be passive\n        (similar\
    \ to Ethernet) or they may be active (such as ATM).\n     o Wide-Area Networks\
    \ (WANs)\n        Geographically dispersed hosts and LANs are interconnected by\n\
    \        wide-area networks, also called long-haul networks.  These\n        networks\
    \ may have a complex internal structure of lines and\n        packet-switches,\
    \ or they may be as simple as point-to-point\n        lines.\n"
- title: 2.2.3 Routers
  contents:
  - "2.2.3 Routers\n   In the Internet model, constituent networks are connected together\
    \ by\n   IP datagram forwarders which are called routers or IP routers.  In\n\
    \   this document, every use of the term router is equivalent to IP\n   router.\
    \  Many older Internet documents refer to routers as gateways.\n   Historically,\
    \ routers have been realized with packet-switching\n   software executing on a\
    \ general-purpose CPU.  However, as custom\n   hardware development becomes cheaper\
    \ and as higher throughput is\n   required, special purpose hardware is becoming\
    \ increasingly common.\n   This specification applies to routers regardless of\
    \ how they are\n   implemented.\n   A router connects to two or more logical interfaces,\
    \ represented by\n   IP subnets or unnumbered point to point lines (discussed\
    \ in section\n   [2.2.7]).  Thus, it has at least one physical interface.  Forwarding\n\
    \   an IP datagram generally requires the router to choose the address\n   and\
    \ relevant interface of the next-hop router or (for the final hop)\n   the destination\
    \ host.  This choice, called relaying or forwarding\n   depends upon a route database\
    \ within the router.  The route database\n   is also called a routing table or\
    \ forwarding table.  The term\n   \"router\" derives from the process of building\
    \ this route database;\n   routing protocols and configuration interact in a process\
    \ called\n   routing.\n   The routing database should be maintained dynamically\
    \ to reflect the\n   current topology of the Internet system.  A router normally\n\
    \   accomplishes this by participating in distributed routing and\n   reachability\
    \ algorithms with other routers.\n   Routers provide datagram transport only,\
    \ and they seek to minimize\n   the state information necessary to sustain this\
    \ service in the\n   interest of routing flexibility and robustness.\n   Packet\
    \ switching devices may also operate at the Link Layer; such\n   devices are usually\
    \ called bridges.  Network segments that are\n   connected by bridges share the\
    \ same IP network prefix forming a\n   single IP subnet.  These other devices\
    \ are outside the scope of this\n   document.\n"
- title: 2.2.4 Autonomous Systems
  contents:
  - "2.2.4 Autonomous Systems\n   An Autonomous System (AS) is a connected segment\
    \ of a network\n   topology that consists of a collection of subnetworks (with\
    \ hosts\n   attached) interconnected by a set of routes.  The subnetworks and\
    \ the\n   routers are expected to be under the control of a single operations\n\
    \   and maintenance (O&M) organization.  Within an AS routers may use one\n  \
    \ or more interior routing protocols, and sometimes several sets of\n   metrics.\
    \  An AS is expected to present to other ASs an appearence of\n   a coherent interior\
    \ routing plan, and a consistent picture of the\n   destinations reachable through\
    \ the AS.  An AS is identified by an\n   Autonomous System number.\n   The concept\
    \ of an AS plays an important role in the Internet routing\n   (see Section 7.1).\n"
- title: 2.2.5 Addressing Architecture
  contents:
  - "2.2.5 Addressing Architecture\n   An IP datagram carries 32-bit source and destination\
    \ addresses, each\n   of which is partitioned into two parts - a constituent network\
    \ prefix\n   and a host number on that network.  Symbolically:\n      IP-address\
    \ ::= { <Network-prefix>, <Host-number> }\n   To finally deliver the datagram,\
    \ the last router in its path must map\n   the Host-number (or rest) part of an\
    \ IP address to the host's Link\n   Layer address.\n"
- title: 2.2.5.1 Classical IP Addressing Architecture
  contents:
  - "2.2.5.1 Classical IP Addressing Architecture\n   Although well documented elsewhere\
    \ [INTERNET:2], it is useful to\n   describe the historical use of the network\
    \ prefix.  The language\n   developed to describe it is used in this and other\
    \ documents and\n   permeates the thinking behind many protocols.\n   The simplest\
    \ classical network prefix is the Class A, B, C, D, or E\n   network prefix. \
    \ These address ranges are discriminated by observing\n   the values of the most\
    \ significant bits of the address, and break the\n   address into simple prefix\
    \ and host number fields.  This is described\n   in [INTERNET:18].  In short,\
    \ the classification is:\n        0xxx - Class A - general purpose unicast addresses\
    \ with standard\n        8 bit prefix\n        10xx - Class B - general purpose\
    \ unicast addresses with standard\n        16 bit prefix\n        110x - Class\
    \ C - general purpose unicast addresses with standard\n        24 bit prefix\n\
    \        1110 - Class D - IP Multicast Addresses - 28 bit prefix, non-\n     \
    \   aggregatable\n        1111 - Class E - reserved for experimental use\n   This\
    \ simple notion has been extended by the concept of subnets.\n   These were introduced\
    \ to allow arbitrary complexity of interconnected\n   LAN structures within an\
    \ organization, while insulating the Internet\n   system against explosive growth\
    \ in assigned network prefixes and\n   routing complexity.  Subnets provide a\
    \ multi-level hierarchical\n   routing structure for the Internet system.  The\
    \ subnet extension,\n   described in [INTERNET:2], is a required part of the Internet\n\
    \   architecture.  The basic idea is to partition the <Host-number> field\n  \
    \ into two parts: a subnet number, and a true host number on that\n   subnet:\n\
    \      IP-address ::=\n        { <Network-number>, <Subnet-number>, <Host-number>\
    \ }\n   The interconnected physical networks within an organization use the\n\
    \   same network prefix but different subnet numbers.  The distinction\n   between\
    \ the subnets of such a subnetted network is not normally\n   visible outside\
    \ of that network.  Thus, routing in the rest of the\n   Internet uses only the\
    \ <Network-prefix> part of the IP destination\n   address.  Routers outside the\
    \ network treat <Network-prefix> and\n   <Host-number> together as an uninterpreted\
    \ rest part of the 32-bit IP\n   address.  Within the subnetted network, the routers\
    \ use the extended\n   network prefix:\n      { <Network-number>, <Subnet-number>\
    \ }\n   The bit positions containing this extended network number have\n   historically\
    \ been indicated by a 32-bit mask called the subnet mask.\n   The <Subnet-number>\
    \ bits SHOULD be contiguous and fall between the\n   <Network-number> and the\
    \ <Host-number> fields.  More up to date\n   protocols do not refer to a subnet\
    \ mask, but to a prefix length; the\n   \"prefix\" portion of an address is that\
    \ which would be selected by a\n   subnet mask whose most significant bits are\
    \ all ones and the rest are\n   zeroes.  The length of the prefix equals the number\
    \ of ones in the\n   subnet mask.  This document assumes that all subnet masks\
    \ are\n   expressible as prefix lengths.\n   The inventors of the subnet mechanism\
    \ presumed that each piece of an\n   organization's network would have only a\
    \ single subnet number.  In\n   practice, it has often proven necessary or useful\
    \ to have several\n   subnets share a single physical cable.  For this reason,\
    \ routers\n   should be capable of configuring multiple subnets on the same\n\
    \   physical interfaces, and treat them (from a routing or forwarding\n   perspective)\
    \ as though they were distinct physical interfaces.\n"
- title: 2.2.5.2 Classless Inter Domain Routing (CIDR)
  contents:
  - "2.2.5.2 Classless Inter Domain Routing (CIDR)\n   The explosive growth of the\
    \ Internet has forced a review of address\n   assignment policies.  The traditional\
    \ uses of general purpose (Class\n   A, B, and C) networks have been modified\
    \ to achieve better use of\n   IP's 32-bit address space.  Classless Inter Domain\
    \ Routing (CIDR)\n   [INTERNET:15] is a method currently being deployed in the\
    \ Internet\n   backbones to achieve this added efficiency.  CIDR depends on\n\
    \   deploying and routing to arbitrarily sized networks.  In this model,\n   hosts\
    \ and routers make no assumptions about the use of addressing in\n   the internet.\
    \  The Class D (IP Multicast) and Class E (Experimental)\n   address spaces are\
    \ preserved, although this is primarily an\n   assignment policy.\n   By definition,\
    \ CIDR comprises three elements:\n     o topologically significant address assignment,\n\
    \     o routing protocols that are capable of aggregating network layer\n    \
    \    reachability information, and\n     o consistent forwarding algorithm (\"\
    longest match\").\n   The use of networks and subnets is now historical, although\
    \ the\n   language used to describe them remains in current use.  They have\n\
    \   been replaced by the more tractable concept of a network prefix.  A\n   network\
    \ prefix is, by definition, a contiguous set of bits at the\n   more significant\
    \ end of the address that defines a set of systems;\n   host numbers select among\
    \ those systems.  There is no requirement\n   that all the internet use network\
    \ prefixes uniformly.  To collapse\n   routing information, it is useful to divide\
    \ the internet into\n   addressing domains.  Within such a domain, detailed information\
    \ is\n   available about constituent networks; outside it, only the common\n \
    \  network prefix is advertised.\n   The classical IP addressing architecture\
    \ used addresses and subnet\n   masks to discriminate the host number from the\
    \ network prefix.  With\n   network prefixes, it is sufficient to indicate the\
    \ number of bits in\n   the prefix.  Both representations are in common use. \
    \ Architecturally\n   correct subnet masks are capable of being represented using\
    \ the\n   prefix length description.  They comprise that subset of all possible\n\
    \   bits patterns that have\n     o a contiguous string of ones at the more significant\
    \ end,\n     o a contiguous string of zeros at the less significant end, and\n\
    \     o no intervening bits.\n   Routers SHOULD always treat a route as a network\
    \ prefix, and SHOULD\n   reject configuration and routing information inconsistent\
    \ with that\n   model.\n      IP-address ::= { <Network-prefix>, <Host-number>\
    \ }\n   An effect of the use of CIDR is that the set of destinations\n   associated\
    \ with address prefixes in the routing table may exhibit\n   subset relationship.\
    \  A route describing a smaller set of\n   destinations (a longer prefix) is said\
    \ to be more specific than a\n   route describing a larger set of destinations\
    \ (a shorter prefix);\n   similarly, a route describing a larger set of destinations\
    \ (a shorter\n   prefix) is said to be less specific than a route describing a\
    \ smaller\n   set of destinations (a longer prefix).  Routers must use the most\n\
    \   specific matching route (the longest matching network prefix) when\n   forwarding\
    \ traffic.\n"
- title: 2.2.6 IP Multicasting
  contents:
  - "2.2.6 IP Multicasting\n   IP multicasting is an extension of Link Layer multicast\
    \ to IP\n   internets.  Using IP multicasts, a single datagram can be addressed\n\
    \   to multiple hosts without sending it to all.  In the extended case,\n   these\
    \ hosts may reside in different address domains.  This collection\n   of hosts\
    \ is called a multicast group.  Each multicast group is\n   represented as a Class\
    \ D IP address.  An IP datagram sent to the\n   group is to be delivered to each\
    \ group member with the same best-\n   effort delivery as that provided for unicast\
    \ IP traffic.  The sender\n   of the datagram does not itself need to be a member\
    \ of the\n   destination group.\n   The semantics of IP multicast group membership\
    \ are defined in\n   [INTERNET:4].  That document describes how hosts and routers\
    \ join and\n   leave multicast groups.  It also defines a protocol, the Internet\n\
    \   Group Management Protocol (IGMP), that monitors IP multicast group\n   membership.\n\
    \   Forwarding of IP multicast datagrams is accomplished either through\n   static\
    \ routing information or via a multicast routing protocol.\n   Devices that forward\
    \ IP multicast datagrams are called multicast\n   routers.  They may or may not\
    \ also forward IP unicasts.  Multicast\n   datagrams are forwarded on the basis\
    \ of both their source and\n   destination addresses.  Forwarding of IP multicast\
    \ packets is\n   described in more detail in Section [5.2.1].  Appendix D discusses\n\
    \   multicast routing protocols.\n"
- title: 2.2.7 Unnumbered Lines and Networks Prefixes
  contents:
  - "2.2.7 Unnumbered Lines and Networks Prefixes\n   Traditionally, each network\
    \ interface on an IP host or router has its\n   own IP address.  This can cause\
    \ inefficient use of the scarce IP\n   address space, since it forces allocation\
    \ of an IP network prefix to\n   every point-to-point link.\n   To solve this\
    \ problem, a number of people have proposed and\n   implemented the concept of\
    \ unnumbered point to point lines.  An\n   unnumbered point to point line does\
    \ not have any network prefix\n   associated with it.  As a consequence, the network\
    \ interfaces\n   connected to an unnumbered point to point line do not have IP\n\
    \   addresses.\n   Because the IP architecture has traditionally assumed that\
    \ all\n   interfaces had IP addresses, these unnumbered interfaces cause some\n\
    \   interesting dilemmas.  For example, some IP options (e.g., Record\n   Route)\
    \ specify that a router must insert the interface address into\n   the option,\
    \ but an unnumbered interface has no IP address.  Even more\n   fundamental (as\
    \ we shall see in chapter 5) is that routes contain the\n   IP address of the\
    \ next hop router.  A router expects that this IP\n   address will be on an IP\
    \ (sub)net to which the router is connected.\n   That assumption is of course\
    \ violated if the only connection is an\n   unnumbered point to point line.\n\
    \   To get around these difficulties, two schemes have been conceived.\n   The\
    \ first scheme says that two routers connected by an unnumbered\n   point to point\
    \ line are not really two routers at all, but rather two\n   half-routers that\
    \ together make up a single virtual router.  The\n   unnumbered point to point\
    \ line is essentially considered to be an\n   internal bus in the virtual router.\
    \  The two halves of the virtual\n   router must coordinate their activities in\
    \ such a way that they act\n   exactly like a single router.\n   This scheme fits\
    \ in well with the IP architecture, but suffers from\n   two important drawbacks.\
    \  The first is that, although it handles the\n   common case of a single unnumbered\
    \ point to point line, it is not\n   readily extensible to handle the case of\
    \ a mesh of routers and\n   unnumbered point to point lines.  The second drawback\
    \ is that the\n   interactions between the half routers are necessarily complex\
    \ and are\n   not standardized, effectively precluding the connection of equipment\n\
    \   from different vendors using unnumbered point to point lines.\n   Because\
    \ of these drawbacks, this memo has adopted an alternate\n   scheme, which has\
    \ been invented multiple times but which is probably\n   originally attributable\
    \ to Phil Karn.  In this scheme, a router that\n   has unnumbered point to point\
    \ lines also has a special IP address,\n   called a router-id in this memo.  The\
    \ router-id is one of the\n   router's IP addresses (a router is required to have\
    \ at least one IP\n   address).  This router-id is used as if it is the IP address\
    \ of all\n   unnumbered interfaces.\n"
- title: 2.2.8 Notable Oddities
  contents:
  - '2.2.8 Notable Oddities

    '
- title: 2.2.8.1 Embedded Routers
  contents:
  - "2.2.8.1 Embedded Routers\n   A router may be a stand-alone computer system, dedicated\
    \ to its IP\n   router functions.  Alternatively, it is possible to embed router\n\
    \   functions within a host operating system that supports connections to\n  \
    \ two or more networks.  The best-known example of an operating system\n   with\
    \ embedded router code is the Berkeley BSD system.  The embedded\n   router feature\
    \ seems to make building a network easy, but it has a\n   number of hidden pitfalls:\n\
    \   (1) If a host has only a single constituent-network interface, it\n      \
    \  should not act as a router.\n        For example, hosts with embedded router\
    \ code that gratuitously\n        forward broadcast packets or datagrams on the\
    \ same net often\n        cause packet avalanches.\n   (2) If a (multihomed) host\
    \ acts as a router, it is subject to the\n        requirements for routers contained\
    \ in this document.\n        For example, the routing protocol issues and the\
    \ router control\n        and monitoring problems are as hard and important for\
    \ embedded\n        routers as for stand-alone routers.\n        Internet router\
    \ requirements and specifications may change\n        independently of operating\
    \ system changes.  An administration\n        that operates an embedded router\
    \ in the Internet is strongly\n        advised to maintain and update the router\
    \ code.  This might\n        require router source code.\n   (3) When a host executes\
    \ embedded router code, it becomes part of the\n        Internet infrastructure.\
    \  Thus, errors in software or\n        configuration can hinder communication\
    \ between other hosts.  As\n        a consequence, the host administrator must\
    \ lose some autonomy.\n        In many circumstances, a host administrator will\
    \ need to disable\n        router code embedded in the operating system.  For\
    \ this reason,\n        it should be straightforward to disable embedded router\n\
    \        functionality.\n   (4) When a host running embedded router code is concurrently\
    \ used for\n        other services, the Operation and Maintenance requirements\
    \ for\n        the two modes of use may conflict.\n        For example, router\
    \ O&M will in many cases be performed remotely\n        by an operations center;\
    \ this may require privileged system\n        access that the host administrator\
    \ would not normally want to\n        distribute.\n"
- title: 2.2.8.2 Transparent Routers
  contents:
  - "2.2.8.2 Transparent Routers\n   There are two basic models for interconnecting\
    \ local-area networks\n   and wide-area (or long-haul) networks in the Internet.\
    \  In the first,\n   the local-area network is assigned a network prefix and all\
    \ routers\n   in the Internet must know how to route to that network.  In the\n\
    \   second, the local-area network shares (a small part of) the address\n   space\
    \ of the wide-area network.  Routers that support this second\n   model are called\
    \ address sharing routers or transparent routers.  The\n   focus of this memo\
    \ is on routers that support the first model, but\n   this is not intended to\
    \ exclude the use of transparent routers.\n   The basic idea of a transparent\
    \ router is that the hosts on the\n   local-area network behind such a router\
    \ share the address space of\n   the wide-area network in front of the router.\
    \  In certain situations\n   this is a very useful approach and the limitations\
    \ do not present\n   significant drawbacks.\n   The words in front and behind\
    \ indicate one of the limitations of this\n   approach: this model of interconnection\
    \ is suitable only for a\n   geographically (and topologically) limited stub environment.\
    \  It\n   requires that there be some form of logical addressing in the network\n\
    \   level addressing of the wide-area network.  IP addresses in the local\n  \
    \ environment map to a few (usually one) physical address in the wide-\n   area\
    \ network.  This mapping occurs in a way consistent with the { IP\n   address\
    \ <-> network address } mapping used throughout the wide-area\n   network.\n \
    \  Multihoming is possible on one wide-area network, but may present\n   routing\
    \ problems if the interfaces are geographically or\n   topologically separated.\
    \  Multihoming on two (or more) wide-area\n   networks is a problem due to the\
    \ confusion of addresses.\n   The behavior that hosts see from other hosts in\
    \ what is apparently\n   the same network may differ if the transparent router\
    \ cannot fully\n   emulate the normal wide-area network service.  For example,\
    \ the\n   ARPANET used a Link Layer protocol that provided a Destination Dead\n\
    \   indication in response to an attempt to send to a host that was off-\n   line.\
    \  However, if there were a transparent router between the\n   ARPANET and an\
    \ Ethernet, a host on the ARPANET would not receive a\n   Destination Dead indication\
    \ for Ethernet hosts.\n"
- title: 2.3 Router Characteristics
  contents:
  - "2.3 Router Characteristics\n   An Internet router performs the following functions:\n\
    \   (1) Conforms to specific Internet protocols specified in this\n        document,\
    \ including the Internet Protocol (IP), Internet Control\n        Message Protocol\
    \ (ICMP), and others as necessary.\n   (2) Interfaces to two or more packet networks.\
    \  For each connected\n        network the router must implement the functions\
    \ required by that\n        network.  These functions typically include:\n   \
    \     o Encapsulating and decapsulating the IP datagrams with the\n          \
    \ connected network framing (e.g., an Ethernet header and\n           checksum),\n\
    \        o Sending and receiving IP datagrams up to the maximum size\n       \
    \    supported by that network, this size is the network's Maximum\n         \
    \  Transmission Unit or MTU,\n        o Translating the IP destination address\
    \ into an appropriate\n           network-level address for the connected network\
    \ (e.g., an\n           Ethernet hardware address), if needed, and\n        o\
    \ Responding to network flow control and error indications, if\n           any.\n\
    \        See chapter 3 (Link Layer).\n   (3) Receives and forwards Internet datagrams.\
    \  Important issues in\n        this process are buffer management, congestion\
    \ control, and\n        fairness.\n        o Recognizes error conditions and generates\
    \ ICMP error and\n           information messages as required.\n        o Drops\
    \ datagrams whose time-to-live fields have reached zero.\n        o Fragments\
    \ datagrams when necessary to fit into the MTU of the\n           next network.\n\
    \        See chapter 4 (Internet Layer - Protocols) and chapter 5\n        (Internet\
    \ Layer - Forwarding) for more information.\n   (4) Chooses a next-hop destination\
    \ for each IP datagram, based on the\n        information in its routing database.\
    \  See chapter 5 (Internet\n        Layer - Forwarding) for more information.\n\
    \   (5) (Usually) supports an interior gateway protocol (IGP) to carry\n     \
    \   out distributed routing and reachability algorithms with the\n        other\
    \ routers in the same autonomous system.  In addition, some\n        routers will\
    \ need to support an exterior gateway protocol (EGP)\n        to exchange topological\
    \ information with other autonomous\n        systems.  See chapter 7 (Application\
    \ Layer - Routing Protocols)\n        for more information.\n   (6) Provides network\
    \ management and system support facilities,\n        including loading, debugging,\
    \ status reporting, exception\n        reporting and control.  See chapter 8 (Application\
    \ Layer -\n        Network Management Protocols) and chapter 10 (Operation and\n\
    \        Maintenance) for more information.\n   A router vendor will have many\
    \ choices on power, complexity, and\n   features for a particular router product.\
    \  It may be helpful to\n   observe that the Internet system is neither homogeneous\
    \ nor fully\n   connected.  For reasons of technology and geography it is growing\n\
    \   into a global interconnect system plus a fringe of LANs around the\n   edge.\
    \  More and more these fringe LANs are becoming richly\n   interconnected, thus\
    \ making them less out on the fringe and more\n   demanding on router requirements.\n\
    \   o The global interconnect system is composed of a number of wide-area\n  \
    \    networks to which are attached routers of several Autonomous\n      Systems\
    \ (AS); there are relatively few hosts connected directly to\n      the system.\n\
    \   o Most hosts are connected to LANs.  Many organizations have clusters\n  \
    \    of LANs interconnected by local routers.  Each such cluster is\n      connected\
    \ by routers at one or more points into the global\n      interconnect system.\
    \  If it is connected at only one point, a LAN\n      is known as a stub network.\n\
    \   Routers in the global interconnect system generally require:\n   o Advanced\
    \ Routing and Forwarding Algorithms\n      These routers need routing algorithms\
    \ that are highly dynamic,\n      impose minimal processing and communication\
    \ burdens, and offer\n      type-of-service routing.  Congestion is still not\
    \ a completely\n      resolved issue (see Section [5.3.6]).  Improvements in these\
    \ areas\n      are expected, as the research community is actively working on\n\
    \      these issues.\n   o High Availability\n      These routers need to be highly\
    \ reliable, providing 24 hours a\n      day, 7 days a week service.  Equipment\
    \ and software faults can\n      have a wide-spread (sometimes global) effect.\
    \  In case of failure,\n      they must recover quickly.  In any environment,\
    \ a router must be\n      highly robust and able to operate, possibly in a degraded\
    \ state,\n      under conditions of extreme congestion or failure of network\n\
    \      resources.\n   o Advanced O&M Features\n      Internet routers normally\
    \ operate in an unattended mode.  They\n      will typically be operated remotely\
    \ from a centralized monitoring\n      center.  They need to provide sophisticated\
    \ means for monitoring\n      and measuring traffic and other events and for diagnosing\
    \ faults.\n   o High Performance\n      Long-haul lines in the Internet today\
    \ are most frequently full\n      duplex 56 KBPS, DS1 (1.544 Mbps), or DS3 (45\
    \ Mbps) speeds.  LANs,\n      which are half duplex multiaccess media, are typically\
    \ Ethernet\n      (10Mbps) and, to a lesser degree, FDDI (100Mbps).  However,\n\
    \      network media technology is constantly advancing and higher speeds\n  \
    \    are likely in the future.\n   The requirements for routers used in the LAN\
    \ fringe (e.g., campus\n   networks) depend greatly on the demands of the local\
    \ networks.  These\n   may be high or medium-performance devices, probably competitively\n\
    \   procured from several different vendors and operated by an internal\n   organization\
    \ (e.g., a campus computing center).  The design of these\n   routers should emphasize\
    \ low average latency and good burst\n   performance, together with delay and\
    \ type-of-service sensitive\n   resource management.  In this environment there\
    \ may be less formal\n   O&M but it will not be less important.  The need for\
    \ the routing\n   mechanism to be highly dynamic will become more important as\
    \ networks\n   become more complex and interconnected.  Users will demand more\
    \ out\n   of their local connections because of the speed of the global\n   interconnects.\n\
    \   As networks have grown, and as more networks have become old enough\n   that\
    \ they are phasing out older equipment, it has become increasingly\n   imperative\
    \ that routers interoperate with routers from other vendors.\n   Even though the\
    \ Internet system is not fully interconnected, many\n   parts of the system need\
    \ to have redundant connectivity.  Rich\n   connectivity allows reliable service\
    \ despite failures of\n   communication lines and routers, and it can also improve\
    \ service by\n   shortening Internet paths and by providing additional capacity.\n\
    \   Unfortunately, this richer topology can make it much more difficult\n   to\
    \ choose the best path to a particular destination.\n"
- title: 2.4 Architectural Assumptions
  contents:
  - "2.4 Architectural Assumptions\n   The current Internet architecture is based\
    \ on a set of assumptions\n   about the communication system.  The assumptions\
    \ most relevant to\n   routers are as follows:\n   o The Internet is a network\
    \ of networks.\n      Each host is directly connected to some particular network(s);\
    \ its\n      connection to the Internet is only conceptual.  Two hosts on the\n\
    \      same network communicate with each other using the same set of\n      protocols\
    \ that they would use to communicate with hosts on distant\n      networks.\n\
    \   o Routers do not keep connection state information.\n      To improve the\
    \ robustness of the communication system, routers are\n      designed to be stateless,\
    \ forwarding each IP packet independently\n      of other packets.  As a result,\
    \ redundant paths can be exploited\n      to provide robust service in spite of\
    \ failures of intervening\n      routers and networks.\n      All state information\
    \ required for end-to-end flow control and\n      reliability is implemented in\
    \ the hosts, in the transport layer or\n      in application programs.  All connection\
    \ control information is\n      thus co-located with the end points of the communication,\
    \ so it\n      will be lost only if an end point fails.  Routers control message\n\
    \      flow only indirectly, by dropping packets or increasing network\n     \
    \ delay.\n      Note that future protocol developments may well end up putting\n\
    \      some more state into routers.  This is especially likely for\n      multicast\
    \ routing, resource reservation, and flow based\n      forwarding.\n   o Routing\
    \ complexity should be in the routers.\n      Routing is a complex and difficult\
    \ problem, and ought to be\n      performed by the routers, not the hosts.  An\
    \ important objective\n      is to insulate host software from changes caused\
    \ by the inevitable\n      evolution of the Internet routing architecture.\n \
    \  o The system must tolerate wide network variation.\n      A basic objective\
    \ of the Internet design is to tolerate a wide\n      range of network characteristics\
    \ - e.g., bandwidth, delay, packet\n      loss, packet reordering, and maximum\
    \ packet size.  Another\n      objective is robustness against failure of individual\
    \ networks,\n      routers, and hosts, using whatever bandwidth is still available.\n\
    \      Finally, the goal is full open system interconnection: an Internet\n  \
    \    router must be able to interoperate robustly and effectively with\n     \
    \ any other router or Internet host, across diverse Internet paths.\n      Sometimes\
    \ implementors have designed for less ambitious goals.\n      For example, the\
    \ LAN environment is typically much more benign\n      than the Internet as a\
    \ whole; LANs have low packet loss and delay\n      and do not reorder packets.\
    \  Some vendors have fielded\n      implementations that are adequate for a simple\
    \ LAN environment,\n      but work badly for general interoperation.  The vendor\
    \ justifies\n      such a product as being economical within the restricted LAN\n\
    \      market.  However, isolated LANs seldom stay isolated for long.\n      They\
    \ are soon connected to each other, to organization-wide\n      internets, and\
    \ eventually to the global Internet system.  In the\n      end, neither the customer\
    \ nor the vendor is served by incomplete\n      or substandard routers.\n    \
    \  The requirements in this document are designed for a full-function\n      router.\
    \  It is intended that fully compliant routers will be\n      usable in almost\
    \ any part of the Internet.\n"
- title: 3. LINK LAYER
  contents:
  - "3. LINK LAYER\n   Although [INTRO:1] covers Link Layer standards (IP over various\
    \ link\n   layers, ARP, etc.), this document anticipates that Link-Layer\n   material\
    \ will be covered in a separate Link Layer Requirements\n   document.  A Link-Layer\
    \ Requirements document would be applicable to\n   both hosts and routers.  Thus,\
    \ this document will not obsolete the\n   parts of [INTRO:1] that deal with link-layer\
    \ issues.\n"
- title: 3.1 INTRODUCTION
  contents:
  - "3.1 INTRODUCTION\n   Routers have essentially the same Link Layer protocol requirements\
    \ as\n   other sorts of Internet systems.  These requirements are given in\n \
    \  chapter 3 of Requirements for Internet Gateways [INTRO:1].  A router\n   MUST\
    \ comply with its requirements and SHOULD comply with its\n   recommendations.\
    \  Since some of the material in that document has\n   become somewhat dated,\
    \ some additional requirements and explanations\n   are included below.\n   DISCUSSION\n\
    \      It is expected that the Internet community will produce a\n      Requirements\
    \ for Internet Link Layer standard which will supersede\n      both this chapter\
    \ and the chapter entitled \"INTERNET LAYER\n      PROTOCOLS\" in [INTRO:1].\n"
- title: 3.2 LINK/INTERNET LAYER INTERFACE
  contents:
  - "3.2 LINK/INTERNET LAYER INTERFACE\n   This document does not attempt to specify\
    \ the interface between the\n   Link Layer and the upper layers.  However, note\
    \ well that other parts\n   of this document, particularly chapter 5, require\
    \ various sorts of\n   information to be passed across this layer boundary.\n\
    \   This section uses the following definitions:\n   o Source physical address\n\
    \      The source physical address is the Link Layer address of the host\n   \
    \   or router from which the packet was received.\n   o Destination physical address\n\
    \      The destination physical address is the Link Layer address to\n      which\
    \ the packet was sent.\n   The information that must pass from the Link Layer\
    \ to the\n   Internetwork Layer for each received packet is:\n   (1) The IP packet\
    \ [5.2.2],\n   (2) The length of the data portion (i.e., not including the Link-\n\
    \        Layer framing) of the Link Layer frame [5.2.2],\n   (3) The identity\
    \ of the physical interface from which the IP packet\n        was received [5.2.3],\
    \ and\n   (4) The classification of the packet's destination physical address\n\
    \        as a Link Layer unicast, broadcast, or multicast [4.3.2],\n        [5.3.4].\n\
    \   In addition, the Link Layer also should provide:\n   (5) The source physical\
    \ address.\n   The information that must pass from the Internetwork Layer to the\n\
    \   Link Layer for each transmitted packet is:\n   (1) The IP packet [5.2.1]\n\
    \   (2) The length of the IP packet [5.2.1]\n   (3) The destination physical interface\
    \ [5.2.1]\n   (4) The next hop IP address [5.2.1]\n   In addition, the Internetwork\
    \ Layer also should provide:\n   (5) The Link Layer priority value [5.3.3.2]\n\
    \   The Link Layer must also notify the Internetwork Layer if the packet\n   to\
    \ be transmitted causes a Link Layer precedence-related error\n   [5.3.3.3].\n"
- title: 3.3 SPECIFIC ISSUES
  contents:
  - '3.3 SPECIFIC ISSUES

    '
- title: 3.3.1 Trailer Encapsulation
  contents:
  - "3.3.1 Trailer Encapsulation\n   Routers that can connect to ten megabit Ethernets\
    \ MAY be able to\n   receive and forward Ethernet packets encapsulated using the\
    \ trailer\n   encapsulation described in [LINK:1].  However, a router SHOULD NOT\n\
    \   originate trailer encapsulated packets.  A router MUST NOT originate\n   trailer\
    \ encapsulated packets without first verifying, using the\n   mechanism described\
    \ in [INTRO:2], that the immediate destination of\n   the packet is willing and\
    \ able to accept trailer-encapsulated\n   packets.  A router SHOULD NOT agree\
    \ (using these mechanisms) to\n   accept trailer-encapsulated packets.\n"
- title: 3.3.2 Address Resolution Protocol - ARP
  contents:
  - "3.3.2 Address Resolution Protocol - ARP\n   Routers that implement ARP MUST be\
    \ compliant and SHOULD be\n   unconditionally compliant with the requirements\
    \ in [INTRO:2].\n   The link layer MUST NOT report a Destination Unreachable error\
    \ to IP\n   solely because there is no ARP cache entry for a destination; it\n\
    \   SHOULD queue up to a small number of datagrams breifly while\n   performing\
    \ the ARP request/reply sequence, and reply that the\n   destination is unreachable\
    \ to one of the queued datagrams only when\n   this proves fruitless.\n   A router\
    \ MUST not believe any ARP reply that claims that the Link\n   Layer address of\
    \ another host or router is a broadcast or multicast\n   address.\n"
- title: 3.3.3 Ethernet and 802.3 Coexistence
  contents:
  - "3.3.3 Ethernet and 802.3 Coexistence\n   Routers that can connect to ten megabit\
    \ Ethernets MUST be compliant\n   and SHOULD be unconditionally compliant with\
    \ the Ethernet\n   requirements of [INTRO:2].\n"
- title: 3.3.4 Maximum Transmission Unit - MTU
  contents:
  - "3.3.4 Maximum Transmission Unit - MTU\n   The MTU of each logical interface MUST\
    \ be configurable within the\n   range of legal MTUs for the interface.\n   Many\
    \ Link Layer protocols define a maximum frame size that may be\n   sent.  In such\
    \ cases, a router MUST NOT allow an MTU to be set which\n   would allow sending\
    \ of frames larger than those allowed by the Link\n   Layer protocol.  However,\
    \ a router SHOULD be willing to receive a\n   packet as large as the maximum frame\
    \ size even if that is larger than\n   the MTU.\n   DISCUSSION\n      Note that\
    \ this is a stricter requirement than imposed on hosts by\n      [INTRO:2], which\
    \ requires that the MTU of each physical interface\n      be configurable.\n \
    \     If a network is using an MTU smaller than the maximum frame size\n     \
    \ for the Link Layer, a router may receive packets larger than the\n      MTU\
    \ from misconfigured and incompletely initialized hosts.  The\n      Robustness\
    \ Principle indicates that the router should successfully\n      receive these\
    \ packets if possible.\n"
- title: 3.3.5 Point-to-Point Protocol - PPP
  contents:
  - "3.3.5 Point-to-Point Protocol - PPP\n   Contrary to [INTRO:1], the Internet does\
    \ have a standard point to\n   point line protocol: the Point-to-Point Protocol\
    \ (PPP), defined in\n   [LINK:2], [LINK:3], [LINK:4], and [LINK:5].\n   A point\
    \ to point interface is any interface that is designed to send\n   data over a\
    \ point to point line.  Such interfaces include telephone,\n   leased, dedicated\
    \ or direct lines (either 2 or 4 wire), and may use\n   point to point channels\
    \ or virtual circuits of multiplexed interfaces\n   such as ISDN.  They normally\
    \ use a standardized modem or bit serial\n   interface (such as RS-232, RS-449\
    \ or V.35), using either synchronous\n   or asynchronous clocking.  Multiplexed\
    \ interfaces often have special\n   physical interfaces.\n   A general purpose\
    \ serial interface uses the same physical media as a\n   point to point line,\
    \ but supports the use of link layer networks as\n   well as point to point connectivity.\
    \  Link layer networks (such as\n   X.25 or Frame Relay) use an alternative IP\
    \ link layer specification.\n   Routers that implement point to point or general\
    \ purpose serial\n   interfaces MUST IMPLEMENT PPP.\n   PPP MUST be supported\
    \ on all general purpose serial interfaces on a\n   router.  The router MAY allow\
    \ the line to be configured to use point\n   to point line protocols other than\
    \ PPP.  Point to point interfaces\n   SHOULD either default to using PPP when\
    \ enabled or require\n   configuration of the link layer protocol before being\
    \ enabled.\n   General purpose serial interfaces SHOULD require configuration\
    \ of the\n   link layer protocol before being enabled.\n"
- title: 3.3.5.1 Introduction
  contents:
  - "3.3.5.1 Introduction\n   This section provides guidelines to router implementors\
    \ so that they\n   can ensure interoperability with other routers using PPP over\
    \ either\n   synchronous or asynchronous links.\n   It is critical that an implementor\
    \ understand the semantics of the\n   option negotiation mechanism.  Options are\
    \ a means for a local device\n   to indicate to a remote peer what the local device\
    \ will accept from\n   the remote peer, not what it wishes to send.  It is up\
    \ to the remote\n   peer to decide what is most convenient to send within the\
    \ confines of\n   the set of options that the local device has stated that it\
    \ can\n   accept.  Therefore it is perfectly acceptable and normal for a remote\n\
    \   peer to ACK all the options indicated in an LCP Configuration Request\n  \
    \ (CR) even if the remote peer does not support any of those options.\n   Again,\
    \ the options are simply a mechanism for either device to\n   indicate to its\
    \ peer what it will accept, not necessarily what it\n   will send.\n"
- title: 3.3.5.2 Link Control Protocol (LCP) Options
  contents:
  - "3.3.5.2 Link Control Protocol (LCP) Options\n   The PPP Link Control Protocol\
    \ (LCP) offers a number of options that\n   may be negotiated.  These options\
    \ include (among others) address and\n   control field compression, protocol field\
    \ compression, asynchronous\n   character map, Maximum Receive Unit (MRU), Link\
    \ Quality Monitoring\n   (LQM), magic number (for loopback detection), Password\
    \ Authentication\n   Protocol (PAP), Challenge Handshake Authentication Protocol\
    \ (CHAP),\n   and the 32-bit Frame Check Sequence (FCS).\n   A router MAY use\
    \ address/control field compression on either\n   synchronous or asynchronous\
    \ links.  A router MAY use protocol field\n   compression on either synchronous\
    \ or asynchronous links.  A router\n   that indicates that it can accept these\
    \ compressions MUST be able to\n   accept uncompressed PPP header information\
    \ also.\n   DISCUSSION\n      These options control the appearance of the PPP\
    \ header.  Normally\n      the PPP header consists of the address, the control\
    \ field, and the\n      protocol field.  The address, on a point to point line,\
    \ is 0xFF,\n      indicating \"broadcast\".  The control field is 0x03, indicating\n\
    \      \"Unnumbered Information.\" The Protocol Identifier is a two byte\n   \
    \   value indicating the contents of the data area of the frame.  If a\n     \
    \ system negotiates address and control field compression it\n      indicates\
    \ to its peer that it will accept PPP frames that have or\n      do not have these\
    \ fields at the front of the header.  It does not\n      indicate that it will\
    \ be sending frames with these fields removed.\n      Protocol field compression,\
    \ when negotiated, indicates that the\n      system is willing to receive protocol\
    \ fields compressed to one\n      byte when this is legal.  There is no requirement\
    \ that the sender\n      do so.\n      Use of address/control field compression\
    \ is inconsistent with the\n      use of numbered mode (reliable) PPP.\n   IMPLEMENTATION\n\
    \      Some hardware does not deal well with variable length header\n      information.\
    \  In those cases it makes most sense for the remote\n      peer to send the full\
    \ PPP header.  Implementations may ensure this\n      by not sending the address/control\
    \ field and protocol field\n      compression options to the remote peer.  Even\
    \ if the remote peer\n      has indicated an ability to receive compressed headers\
    \ there is no\n      requirement for the local router to send compressed headers.\n\
    \   A router MUST negotiate the Asynchronous Control Character Map (ACCM)\n  \
    \ for asynchronous PPP links, but SHOULD NOT negotiate the ACCM for\n   synchronous\
    \ links.  If a router receives an attempt to negotiate the\n   ACCM over a synchronous\
    \ link, it MUST ACKnowledge the option and then\n   ignore it.\n   DISCUSSION\n\
    \      There are implementations that offer both synchronous and\n      asynchronous\
    \ modes of operation and may use the same code to\n      implement the option\
    \ negotiation.  In this situation it is\n      possible that one end or the other\
    \ may send the ACCM option on a\n      synchronous link.\n   A router SHOULD properly\
    \ negotiate the maximum receive unit (MRU).\n   Even if a system negotiates an\
    \ MRU smaller than 1,500 bytes, it MUST\n   be able to receive a 1,500 byte frame.\n\
    \   A router SHOULD negotiate and enable the link quality monitoring\n   (LQM)\
    \ option.\n   DISCUSSION\n      This memo does not specify a policy for deciding\
    \ whether the\n      link's quality is adequate.  However, it is important (see\
    \ Section\n      [3.3.6]) that a router disable failed links.\n   A router SHOULD\
    \ implement and negotiate the magic number option for\n   loopback detection.\n\
    \   A router MAY support the authentication options (PAP - Password\n   Authentication\
    \ Protocol, and/or CHAP - Challenge Handshake\n   Authentication Protocol).\n\
    \   A router MUST support 16-bit CRC frame check sequence (FCS) and MAY\n   support\
    \ the 32-bit CRC.\n"
- title: 3.3.5.3 IP Control Protocol (IPCP) Options
  contents:
  - "3.3.5.3 IP Control Protocol (IPCP) Options\n   A router MAY offer to perform\
    \ IP address negotiation.  A router MUST\n   accept a refusal (REJect) to perform\
    \ IP address negotiation from the\n   peer.\n   Routers operating at link speeds\
    \ of 19,200 BPS or less SHOULD\n   implement and offer to perform Van Jacobson\
    \ header compression.\n   Routers that implement VJ compression SHOULD implement\
    \ an\n   administrative control enabling or disabling it.\n"
- title: 3.3.6 Interface Testing
  contents:
  - "3.3.6 Interface Testing\n   A router MUST have a mechanism to allow routing software\
    \ to determine\n   whether a physical interface is available to send packets or\
    \ not; on\n   multiplexed interfaces where permanent virtual circuits are opened\n\
    \   for limited sets of neighbors, the router must also be able to\n   determine\
    \ whether the virtual circuits are viable.  A router SHOULD\n   have a mechanism\
    \ to allow routing software to judge the quality of a\n   physical interface.\
    \  A router MUST have a mechanism for informing the\n   routing software when\
    \ a physical interface becomes available or\n   unavailable to send packets because\
    \ of administrative action.  A\n   router MUST have a mechanism for informing\
    \ the routing software when\n   it detects a Link level interface has become available\
    \ or\n   unavailable, for any reason.\n   DISCUSSION\n      It is crucial that\
    \ routers have workable mechanisms for\n      determining that their network connections\
    \ are functioning\n      properly.  Failure to detect link loss, or failure to\
    \ take the\n      proper actions when a problem is detected, can lead to black\n\
    \      holes.\n      The mechanisms available for detecting problems with network\n\
    \      connections vary considerably, depending on the Link Layer\n      protocols\
    \ in use and the interface hardware.  The intent is to\n      maximize the capability\
    \ to detect failures within the Link-Layer\n      constraints.\n"
- title: 4. INTERNET LAYER - PROTOCOLS
  contents:
  - '4. INTERNET LAYER - PROTOCOLS

    '
- title: 4.1 INTRODUCTION
  contents:
  - "4.1 INTRODUCTION\n   This chapter and chapter 5 discuss the protocols used at\
    \ the Internet\n   Layer: IP, ICMP, and IGMP.  Since forwarding is obviously a\
    \ crucial\n   topic in a document discussing routers, chapter 5 limits itself\
    \ to\n   the aspects of the protocols that directly relate to forwarding.  The\n\
    \   current chapter contains the remainder of the discussion of the\n   Internet\
    \ Layer protocols.\n"
- title: 4.2 INTERNET PROTOCOL - IP
  contents:
  - '4.2 INTERNET PROTOCOL - IP

    '
- title: 4.2.1 INTRODUCTION
  contents:
  - "4.2.1 INTRODUCTION\n   Routers MUST implement the IP protocol, as defined by\
    \ [INTERNET:1].\n   They MUST also implement its mandatory extensions: subnets\
    \ (defined\n   in [INTERNET:2]), IP broadcast (defined in [INTERNET:3]), and\n\
    \   Classless Inter-Domain Routing (CIDR, defined in [INTERNET:15]).\n   Router\
    \ implementors need not consider compliance with the section of\n   [INTRO:2]\
    \ entitled \"Internet Protocol -- IP,\" as that section is\n   entirely duplicated\
    \ or superseded in this document.  A router MUST be\n   compliant, and SHOULD\
    \ be unconditionally compliant, with the\n   requirements of the section entitled\
    \ \"SPECIFIC ISSUES\" relating to IP\n   in [INTRO:2].\n   In the following, the\
    \ action specified in certain cases is to\n   silently discard a received datagram.\
    \  This means that the datagram\n   will be discarded without further processing\
    \ and that the router will\n   not send any ICMP error message (see Section [4.3])\
    \ as a result.\n   However, for diagnosis of problems a router SHOULD provide\
    \ the\n   capability of logging the error (see Section [1.3.3]), including the\n\
    \   contents of the silently discarded datagram, and SHOULD count\n   datagrams\
    \ discarded.\n"
- title: 4.2.2 PROTOCOL WALK-THROUGH
  contents:
  - "4.2.2 PROTOCOL WALK-THROUGH\n   RFC 791 [INTERNET:1] is the specification for\
    \ the Internet Protocol.\n"
- title: '4.2.2.1 Options: RFC 791 Section 3.2'
  contents:
  - "4.2.2.1 Options: RFC 791 Section 3.2\n   In datagrams received by the router\
    \ itself, the IP layer MUST\n   interpret IP options that it understands and preserve\
    \ the rest\n   unchanged for use by higher layer protocols.\n   Higher layer protocols\
    \ may require the ability to set IP options in\n   datagrams they send or examine\
    \ IP options in datagrams they receive.\n   Later sections of this document discuss\
    \ specific IP option support\n   required by higher layer protocols.\n   DISCUSSION\n\
    \      Neither this memo nor [INTRO:2] define the order in which a\n      receiver\
    \ must process multiple options in the same IP header.\n      Hosts and routers\
    \ originating datagrams containing multiple\n      options must be aware that\
    \ this introduces an ambiguity in the\n      meaning of certain options when combined\
    \ with a source-route\n      option.\n   Here are the requirements for specific\
    \ IP options:\n   (a) Security Option\n        Some environments require the Security\
    \ option in every packet\n        originated or received.  Routers SHOULD IMPLEMENT\
    \ the revised\n        security option described in [INTERNET:5].\n   DISCUSSION\n\
    \      Note that the security options described in [INTERNET:1] and RFC\n    \
    \  1038 ([INTERNET:16]) are obsolete.\n   (b) Stream Identifier Option\n     \
    \    This option is obsolete; routers SHOULD NOT place this option\n         in\
    \ a datagram that the router originates.  This option MUST be\n         ignored\
    \ in datagrams received by the router.\n   (c) Source Route Options\n        \
    \ A router MUST be able to act as the final destination of a\n         source\
    \ route.  If a router receives a packet containing a\n         completed source\
    \ route, the packet has reached its final\n         destination.  In such an option,\
    \ the pointer points beyond the\n         last field and the destination address\
    \ in the IP header\n         addresses the router.  The option as received (the\
    \ recorded\n         route) MUST be passed up to the transport layer (or to ICMP\n\
    \         message processing).\n         In the general case, a correct response\
    \ to a source-routed\n         datagram traverses the same route.  A router MUST\
    \ provide a\n         means whereby transport protocols and applications can reverse\n\
    \         the source route in a received datagram.  This reversed source\n   \
    \      route MUST be inserted into datagrams they originate (see\n         [INTRO:2]\
    \ for details) when the router is unaware of policy\n         constraints.  However,\
    \ if the router is policy aware, it MAY\n         select another path.\n     \
    \    Some applications in the router MAY require that the user be\n         able\
    \ to enter a source route.\n         A router MUST NOT originate a datagram containing\
    \ multiple\n         source route options.  What a router should do if asked to\n\
    \         forward a packet containing multiple source route options is\n     \
    \    described in Section [5.2.4.1].\n         When a source route option is created\
    \ (which would happen when\n         the router is originating a source routed\
    \ datagram or is\n         inserting a source route option as a result of a special\n\
    \         filter), it MUST be correctly formed even if it is being\n         created\
    \ by reversing a recorded route that erroneously includes\n         the source\
    \ host (see case (B) in the discussion below).\n   DISCUSSION\n      Suppose a\
    \ source routed datagram is to be routed from source _\bS to\n      destination\
    \ D via routers G1, G2, Gn.  Source S constructs a\n      datagram with G1's IP\
    \ address as its destination address, and a\n      source route option to get\
    \ the datagram the rest of the way to its\n      destination.  However, there\
    \ is an ambiguity in the specification\n      over whether the source route option\
    \ in a datagram sent out by S\n      should be (A) or (B):\n      (A): {>>G2,\
    \ G3, ... Gn, D} <--- CORRECT\n      (B): {S, >>G2, G3, ... Gn, D} <---- WRONG\n\
    \      (where >> represents the pointer).  If (A) is sent, the datagram\n    \
    \  received at D will contain the option: {G1, G2, ... Gn >>}, with S\n      and\
    \ D as the IP source and destination addresses.  If (B) were\n      sent, the\
    \ datagram received at D would again contain S and D as\n      the same IP source\
    \ and destination addresses, but the option would\n      be: {S, G1, ...Gn >>};\
    \ i.e., the originating host would be the\n      first hop in the route.\n   (d)\
    \ Record Route Option\n         Routers MAY support the Record Route option in\
    \ datagrams\n         originated by the router.\n   (e) Timestamp Option\n   \
    \      Routers MAY support the timestamp option in datagrams\n         originated\
    \ by the router.  The following rules apply:\n         o When originating a datagram\
    \ containing a Timestamp Option, a\n            router MUST record a timestamp\
    \ in the option if\n            - Its Internet address fields are not pre-specified\
    \ or\n            - Its first pre-specified address is the IP address of the\n\
    \               logical interface over which the datagram is being sent\n    \
    \           (or the router's router-id if the datagram is being sent\n       \
    \        over an unnumbered interface).\n         o If the router itself receives\
    \ a datagram containing a\n            Timestamp Option, the router MUST insert\
    \ the current time\n            into the Timestamp Option (if there is space in\
    \ the option\n            to do so) before passing the option to the transport\
    \ layer\n            or to ICMP for processing.  If space is not present, the\n\
    \            router MUST increment the Overflow Count in the option.\n       \
    \  o A timestamp value MUST follow the rules defined in [INTRO:2].\n   IMPLEMENTATION\n\
    \      To maximize the utility of the timestamps contained in the\n      timestamp\
    \ option, the timestamp inserted should be, as nearly as\n      practical, the\
    \ time at which the packet arrived at the router.\n      For datagrams originated\
    \ by the router, the timestamp inserted\n      should be, as nearly as practical,\
    \ the time at which the datagram\n      was passed to the Link Layer for transmission.\n\
    \      The timestamp option permits the use of a non-standard time clock,\n  \
    \    but the use of a non-synchronized clock limits the utility of the\n     \
    \ time stamp.  Therefore, routers are well advised to implement the\n      Network\
    \ Time Protocol for the purpose of synchronizing their\n      clocks.\n"
- title: '4.2.2.2 Addresses in Options: RFC 791 Section 3.1'
  contents:
  - "4.2.2.2 Addresses in Options: RFC 791 Section 3.1\n   Routers are called upon\
    \ to insert their address into Record Route,\n   Strict Source and Record Route,\
    \ Loose Source and Record Route, or\n   Timestamp Options.  When a router inserts\
    \ its address into such an\n   option, it MUST use the IP address of the logical\
    \ interface on which\n   the packet is being sent.  Where this rule cannot be\
    \ obeyed because\n   the output interface has no IP address (i.e., is an unnumbered\n\
    \   interface), the router MUST instead insert its router-id.  The\n   router's\
    \ router-id is one of the router's IP addresses.  The Router\n   ID may be specified\
    \ on a system basis or on a per-link basis.  Which\n   of the router's addresses\
    \ is used as the router-id MUST NOT change\n   (even across reboots) unless changed\
    \ by the network manager.\n   Relevant management changes include reconfiguration\
    \ of the router\n   such that the IP address used as the router-id ceases to be\
    \ one of\n   the router's IP addresses.  Routers with multiple unnumbered\n  \
    \ interfaces MAY have multiple router-id's.  Each unnumbered interface\n   MUST\
    \ be associated with a particular router-id.  This association\n   MUST NOT change\
    \ (even across reboots) without reconfiguration of the\n   router.\n   DISCUSSION\n\
    \      This specification does not allow for routers that do not have at\n   \
    \   least one IP address.  We do not view this as a serious\n      limitation,\
    \ since a router needs an IP address to meet the\n      manageability requirements\
    \ of Chapter [8] even if the router is\n      connected only to point-to-point\
    \ links.\n   IMPLEMENTATION\n      One possible method of choosing the router-id\
    \ that fulfills this\n      requirement is to use the numerically smallest (or\
    \ greatest) IP\n      address (treating the address as a 32-bit integer) that\
    \ is\n      assigned to the router.\n"
- title: '4.2.2.3 Unused IP Header Bits: RFC 791 Section 3.1'
  contents:
  - "4.2.2.3 Unused IP Header Bits: RFC 791 Section 3.1\n   The IP header contains\
    \ two reserved bits: one in the Type of Service\n   byte and the other in the\
    \ Flags field.  A router MUST NOT set either\n   of these bits to one in datagrams\
    \ originated by the router.  A router\n   MUST NOT drop (refuse to receive or\
    \ forward) a packet merely because\n   one or more of these reserved bits has\
    \ a non-zero value; i.e., the\n   router MUST NOT check the values of thes bits.\n\
    \   DISCUSSION\n      Future revisions to the IP protocol may make use of these\
    \ unused\n      bits.  These rules are intended to ensure that these revisions\
    \ can\n      be deployed without having to simultaneously upgrade all routers\n\
    \      in the Internet.\n"
- title: '4.2.2.4 Type of Service: RFC 791 Section 3.1'
  contents:
  - "4.2.2.4 Type of Service: RFC 791 Section 3.1\n   The Type-of-Service byte in\
    \ the IP header is divided into three\n   sections: the Precedence field (high-order\
    \ 3 bits), a field that is\n   customarily called Type of Service or TOS (next\
    \ 4 bits), and a\n   reserved bit (the low order bit).\n   Rules governing the\
    \ reserved bit were described in Section [4.2.2.3].\n   A more extensive discussion\
    \ of the TOS field and its use can be found\n   in [ROUTE:11].\n   The description\
    \ of the IP Precedence field is superseded by Section\n   [5.3.3].  RFC 795, Service\
    \ Mappings, is obsolete and SHOULD NOT be\n   implemented.\n"
- title: '4.2.2.5 Header Checksum: RFC 791 Section 3.1'
  contents:
  - "4.2.2.5 Header Checksum: RFC 791 Section 3.1\n   As stated in Section [5.2.2],\
    \ a router MUST verify the IP checksum of\n   any packet that is received, and\
    \ MUST discard messages containing\n   invalid checksums.  The router MUST NOT\
    \ provide a means to disable\n   this checksum verification.\n   A router MAY\
    \ use incremental IP header checksum updating when the\n   only change to the\
    \ IP header is the time to live.  This will reduce\n   the possibility of undetected\
    \ corruption of the IP header by the\n   router.  See [INTERNET:6] for a discussion\
    \ of incrementally updating\n   the checksum.\n   IMPLEMENTATION\n      A more\
    \ extensive description of the IP checksum, including\n      extensive implementation\
    \ hints, can be found in [INTERNET:6] and\n      [INTERNET:7].\n"
- title: '4.2.2.6 Unrecognized Header Options: RFC 791 Section 3.1'
  contents:
  - "4.2.2.6 Unrecognized Header Options: RFC 791 Section 3.1\n   A router MUST ignore\
    \ IP options which it does not recognize.  A\n   corollary of this requirement\
    \ is that a router MUST implement the End\n   of Option List option and the No\
    \ Operation option, since neither\n   contains an explicit length.\n   DISCUSSION\n\
    \      All future IP options will include an explicit length.\n"
- title: '4.2.2.7 Fragmentation: RFC 791 Section 3.2'
  contents:
  - "4.2.2.7 Fragmentation: RFC 791 Section 3.2\n   Fragmentation, as described in\
    \ [INTERNET:1], MUST be supported by a\n   router.\n   When a router fragments\
    \ an IP datagram, it SHOULD minimize the number\n   of fragments.  When a router\
    \ fragments an IP datagram, it SHOULD send\n   the fragments in order.  A fragmentation\
    \ method that may generate one\n   IP fragment that is significantly smaller than\
    \ the other MAY cause\n   the first IP fragment to be the smaller one.\n   DISCUSSION\n\
    \      There are several fragmentation techniques in common use in the\n     \
    \ Internet.  One involves splitting the IP datagram into IP\n      fragments with\
    \ the first being MTU sized, and the others being\n      approximately the same\
    \ size, smaller than the MTU.  The reason for\n      this is twofold.  The first\
    \ IP fragment in the sequence will be\n      the effective MTU of the current\
    \ path between the hosts, and the\n      following IP fragments are sized to minimize\
    \ the further\n      fragmentation of the IP datagram.  Another technique is to\
    \ split\n      the IP datagram into MTU sized IP fragments, with the last\n  \
    \    fragment being the only one smaller, as described in [INTERNET:1].\n    \
    \  A common trick used by some implementations of TCP/IP is to\n      fragment\
    \ an IP datagram into IP fragments that are no larger than\n      576 bytes when\
    \ the IP datagram is to travel through a router.\n      This is intended to allow\
    \ the resulting IP fragments to pass the\n      rest of the path without further\
    \ fragmentation.  This would,\n      though, create more of a load on the destination\
    \ host, since it\n      would have a larger number of IP fragments to reassemble\
    \ into one\n      IP datagram.  It would also not be efficient on networks where\
    \ the\n      MTU only changes once and stays much larger than 576 bytes.\n   \
    \   Examples include LAN networks such as an IEEE 802.5 network with a\n     \
    \ MTU of 2048 or an Ethernet network with an MTU of 1500).\n      One other fragmentation\
    \ technique discussed was splitting the IP\n      datagram into approximately\
    \ equal sized IP fragments, with the\n      size less than or equal to the next\
    \ hop network's MTU.  This is\n      intended to minimize the number of fragments\
    \ that would result\n      from additional fragmentation further down the path,\
    \ and assure\n      equal delay for each fragment.\n      Routers SHOULD generate\
    \ the least possible number of IP fragments.\n      Work with slow machines leads\
    \ us to believe that if it is\n      necessary to fragment messages, sending the\
    \ small IP fragment\n      first maximizes the chance of a host with a slow interface\
    \ of\n      receiving all the fragments.\n"
- title: '4.2.2.8 Reassembly: RFC 791 Section 3.2'
  contents:
  - "4.2.2.8 Reassembly: RFC 791 Section 3.2\n   As specified in the corresponding\
    \ section of [INTRO:2], a router MUST\n   support reassembly of datagrams that\
    \ it delivers to itself.\n"
- title: '4.2.2.9 Time to Live: RFC 791 Section 3.2'
  contents:
  - "4.2.2.9 Time to Live: RFC 791 Section 3.2\n   Time to Live (TTL) handling for\
    \ packets originated or received by the\n   router is governed by [INTRO:2]; this\
    \ section changes none of its\n   stipulations.  However, since the remainder\
    \ of the IP Protocol\n   section of [INTRO:2] is rewritten, this section is as\
    \ well.\n   Note in particular that a router MUST NOT check the TTL of a packet\n\
    \   except when forwarding it.\n   A router MUST NOT originate or forward a datagram\
    \ with a Time-to-Live\n   (TTL) value of zero.\n   A router MUST NOT discard a\
    \ datagram just because it was received\n   with TTL equal to zero or one; if\
    \ it is to the router and otherwise\n   valid, the router MUST attempt to receive\
    \ it.\n   On messages the router originates, the IP layer MUST provide a means\n\
    \   for the transport layer to set the TTL field of every datagram that\n   is\
    \ sent.  When a fixed TTL value is used, it MUST be configurable.\n   The number\
    \ SHOULD exceed the typical internet diameter, and current\n   wisdom suggests\
    \ that it should exceed twice the internet diameter to\n   allow for growth. \
    \ Current suggested values are normally posted in\n   the Assigned Numbers RFC.\
    \  The TTL field has two functions: limit the\n   lifetime of TCP segments (see\
    \ RFC 793 [TCP:1], p. 28), and terminate\n   Internet routing loops.  Although\
    \ TTL is a time in seconds, it also\n   has some attributes of a hop-count, since\
    \ each router is required to\n   reduce the TTL field by at least one.\n   TTL\
    \ expiration is intended to cause datagrams to be discarded by\n   routers, but\
    \ not by the destination host.  Hosts that act as routers\n   by forwarding datagrams\
    \ must therefore follow the router's rules for\n   TTL.\n   A higher-layer protocol\
    \ may want to set the TTL in order to implement\n   an \"expanding scope\" search\
    \ for some Internet resource.  This is used\n   by some diagnostic tools, and\
    \ is expected to be useful for locating\n   the \"nearest\" server of a given\
    \ class using IP multicasting, for\n   example.  A particular transport protocol\
    \ may also want to specify\n   its own TTL bound on maximum datagram lifetime.\n\
    \   A fixed default value must be at least big enough for the Internet\n   \"\
    diameter,\" i.e., the longest possible path.  A reasonable value is\n   about\
    \ twice the diameter, to allow for continued Internet growth.  As\n   of this\
    \ writing, messages crossing the United States frequently\n   traverse 15 to 20\
    \ routers; this argues for a default TTL value in\n   excess of 40, and 64 is\
    \ a common value.\n"
- title: '4.2.2.10 Multi-subnet Broadcasts: RFC 922'
  contents:
  - "4.2.2.10 Multi-subnet Broadcasts: RFC 922\n   All-subnets broadcasts (called\
    \ multi-subnet broadcasts in\n   [INTERNET:3]) have been deprecated.  See Section\
    \ [5.3.5.3].\n"
- title: '4.2.2.11 Addressing: RFC 791 Section 3.2'
  contents:
  - "4.2.2.11 Addressing: RFC 791 Section 3.2\n   As noted in 2.2.5.1, there are now\
    \ five classes of IP addresses:\n   Class A through Class E.  Class D addresses\
    \ are used for IP\n   multicasting [INTERNET:4], while Class E addresses are reserved\
    \ for\n   experimental use.  The distinction between Class A, B, and C\n   addresses\
    \ is no longer important; they are used as generalized\n   unicast network prefixes\
    \ with only historical interest in their\n   class.\n   An IP multicast address\
    \ is a 28-bit logical address that stands for a\n   group of hosts, and may be\
    \ either permanent or transient.  Permanent\n   multicast addresses are allocated\
    \ by the Internet Assigned Number\n   Authority [INTRO:7], while transient addresses\
    \ may be allocated\n   dynamically to transient groups.  Group membership is determined\n\
    \   dynamically using IGMP [INTERNET:4].\n   We now summarize the important special\
    \ cases for general purpose\n   unicast IP addresses, using the following notation\
    \ for an IP address:\n    { <Network-prefix>, <Host-number> }\n   and the notation\
    \ -1 for a field that contains all 1 bits and the\n   notation 0 for a field that\
    \ contains all 0 bits.\n   (a) { 0, 0 }\n        This host on this network.  It\
    \ MUST NOT be used as a source\n        address by routers, except the router\
    \ MAY use this as a source\n        address as part of an initialization procedure\
    \ (e.g., if the\n        router is using BOOTP to load its configuration information).\n\
    \        Incoming datagrams with a source address of { 0, 0 } which are\n    \
    \    received for local delivery (see Section [5.2.3]), MUST be\n        accepted\
    \ if the router implements the associated protocol and\n        that protocol\
    \ clearly defines appropriate action to be taken.\n        Otherwise, a router\
    \ MUST silently discard any locally-delivered\n        datagram whose source address\
    \ is { 0, 0 }.\n   DISCUSSION\n      Some protocols define specific actions to\
    \ take in response to a\n      received datagram whose source address is { 0,\
    \ 0 }.  Two examples\n      are BOOTP and ICMP Mask Request.  The proper operation\
    \ of these\n      protocols often depends on the ability to receive datagrams\
    \ whose\n      source address is { 0, 0 }.  For most protocols, however, it is\n\
    \      best to ignore datagrams having a source address of { 0, 0 } since\n  \
    \    they were probably generated by a misconfigured host or router.\n      Thus,\
    \ if a router knows how to deal with a given datagram having a\n      { 0, 0 }\
    \ source address, the router MUST accept it.  Otherwise,\n      the router MUST\
    \ discard it.\n   See also Section [4.2.3.1] for a non-standard use of { 0, 0\
    \ }.\n   (b) { 0, <Host-number> }\n         Specified host on this network.  It\
    \ MUST NOT be sent by routers\n         except that the router MAY use this as\
    \ a source address as part\n         of an initialization procedure by which the\
    \ it learns its own\n         IP address.\n   (c) { -1, -1 }\n         Limited\
    \ broadcast.  It MUST NOT be used as a source address.\n         A datagram with\
    \ this destination address will be received by\n         every host and router\
    \ on the connected physical network, but\n         will not be forwarded outside\
    \ that network.\n   (d) { <Network-prefix>, -1 }\n         Directed Broadcast\
    \ - a broadcast directed to the specified\n         network prefix.  It MUST NOT\
    \ be used as a source address.  A\n         router MAY originate Network Directed\
    \ Broadcast packets.  A\n         router MUST receive Network Directed Broadcast\
    \ packets; however\n         a router MAY have a configuration option to prevent\
    \ reception\n         of these packets.  Such an option MUST default to allowing\n\
    \         reception.\n    (e) { 127, <any> }\n         Internal host loopback\
    \ address.  Addresses of this form MUST\n         NOT appear outside a host.\n\
    \    The <Network-prefix> is administratively assigned so that its value\n   \
    \ will be unique in the routing domain to which the device is\n    connected.\n\
    \    IP addresses are not permitted to have the value 0 or -1 for the\n    <Host-number>\
    \ or <Network-prefix> fields except in the special cases\n    listed above.  This\
    \ implies that each of these fields will be at\n    least two bits long.\n   DISCUSSION\n\
    \      Previous versions of this document also noted that subnet numbers\n   \
    \   must be neither 0 nor -1, and must be at least two bits in length.\n     \
    \ In a CIDR world, the subnet number is clearly an extension of the\n      network\
    \ prefix and cannot be interpreted without the remainder of\n      the prefix.\
    \  This restriction of subnet numbers is therefore\n      meaningless in view\
    \ of CIDR and may be safely ignored.\n   For further discussion of broadcast addresses,\
    \ see Section [4.2.3.1].\n   When a router originates any datagram, the IP source\
    \ address MUST be\n   one of its own IP addresses (but not a broadcast or multicast\n\
    \   address).  The only exception is during initialization.\n   For most purposes,\
    \ a datagram addressed to a broadcast or multicast\n   destination is processed\
    \ as if it had been addressed to one of the\n   router's IP addresses; that is\
    \ to say:\n   o A router MUST receive and process normally any packets with a\n\
    \      broadcast destination address.\n   o A router MUST receive and process\
    \ normally any packets sent to a\n      multicast destination address that the\
    \ router has asked to\n      receive.\n   The term specific-destination address\
    \ means the equivalent local IP\n   address of the host.  The specific-destination\
    \ address is defined to\n   be the destination address in the IP header unless\
    \ the header\n   contains a broadcast or multicast address, in which case the\n\
    \   specific-destination is an IP address assigned to the physical\n   interface\
    \ on which the datagram arrived.\n   A router MUST silently discard any received\
    \ datagram containing an IP\n   source address that is invalid by the rules of\
    \ this section.  This\n   validation could be done either by the IP layer or (when\
    \ appropriate)\n   by each protocol in the transport layer.  As with any datagram\
    \ a\n   router discards, the datagram discard SHOULD be counted.\n   DISCUSSION\n\
    \      A misaddressed datagram might be caused by a Link Layer broadcast\n   \
    \   of a unicast datagram or by another router or host that is\n      confused\
    \ or misconfigured.\n"
- title: 4.2.3 SPECIFIC ISSUES
  contents:
  - '4.2.3 SPECIFIC ISSUES

    '
- title: 4.2.3.1 IP Broadcast Addresses
  contents:
  - "4.2.3.1 IP Broadcast Addresses\n   For historical reasons, there are a number\
    \ of IP addresses (some\n   standard and some not) which are used to indicate\
    \ that an IP packet\n   is an IP broadcast.  A router\n   (1) MUST treat as IP\
    \ broadcasts packets addressed to 255.255.255.255\n        or { <Network-prefix>,\
    \ -1 }.\n   (2) SHOULD silently discard on receipt (i.e., do not even deliver\
    \ to\n        applications in the router) any packet addressed to 0.0.0.0 or {\n\
    \        <Network-prefix>, 0 }.  If these packets are not silently\n        discarded,\
    \ they MUST be treated as IP broadcasts (see Section\n        [5.3.5]).  There\
    \ MAY be a configuration option to allow receipt\n        of these packets.  This\
    \ option SHOULD default to discarding\n        them.\n   (3) SHOULD (by default)\
    \ use the limited broadcast address\n        (255.255.255.255) when originating\
    \ an IP broadcast destined for\n        a connected (sub)network (except when\
    \ sending an ICMP Address\n        Mask Reply, as discussed in Section [4.3.3.9]).\
    \  A router MUST\n        receive limited broadcasts.\n   (4) SHOULD NOT originate\
    \ datagrams addressed to 0.0.0.0 or {\n        <Network-prefix>, 0 }.  There MAY\
    \ be a configuration option to\n        allow generation of these packets (instead\
    \ of using the relevant\n        1s format broadcast).  This option SHOULD default\
    \ to not\n        generating them.\n   DISCUSSION\n      In the second bullet,\
    \ the router obviously cannot recognize\n      addresses of the form { <Network-prefix>,\
    \ 0 } if the router has no\n      interface to that network prefix.  In that case,\
    \ the rules of the\n      second bullet do not apply because, from the point of\
    \ view of the\n      router, the packet is not an IP broadcast packet.\n"
- title: 4.2.3.2 IP Multicasting
  contents:
  - "4.2.3.2 IP Multicasting\n   An IP router SHOULD satisfy the Host Requirements\
    \ with respect to IP\n   multicasting, as specified in [INTRO:2].  An IP router\
    \ SHOULD support\n   local IP multicasting on all connected networks.  When a\
    \ mapping from\n   IP multicast addresses to link-layer addresses has been specified\n\
    \   (see the various IP-over-xxx specifications), it SHOULD use that\n   mapping,\
    \ and MAY be configurable to use the link layer broadcast\n   instead.  On point-to-point\
    \ links and all other interfaces,\n   multicasts are encapsulated as link layer\
    \ broadcasts.  Support for\n   local IP multicasting includes originating multicast\
    \ datagrams,\n   joining multicast groups and receiving multicast datagrams, and\n\
    \   leaving multicast groups.  This implies support for all of\n   [INTERNET:4]\
    \ including IGMP (see Section [4.4]).\n   DISCUSSION\n      Although [INTERNET:4]\
    \ is entitled Host Extensions for IP\n      Multicasting, it applies to all IP\
    \ systems, both hosts and\n      routers.  In particular, since routers may join\
    \ multicast groups,\n      it is correct for them to perform the host part of\
    \ IGMP, reporting\n      their group memberships to any multicast routers that\
    \ may be\n      present on their attached networks (whether or not they themselves\n\
    \      are multicast routers).\n      Some router protocols may specifically require\
    \ support for IP\n      multicasting (e.g., OSPF [ROUTE:1]), or may recommend\
    \ it (e.g.,\n      ICMP Router Discovery [INTERNET:13]).\n"
- title: 4.2.3.3 Path MTU Discovery
  contents:
  - "4.2.3.3 Path MTU Discovery\n   To eliminate fragmentation or minimize it, it\
    \ is desirable to know\n   what is the path MTU along the path from the source\
    \ to destination.\n   The path MTU is the minimum of the MTUs of each hop in the\
    \ path.\n   [INTERNET:14] describes a technique for dynamically discovering the\n\
    \   maximum transmission unit (MTU) of an arbitrary internet path.  For a\n  \
    \ path that passes through a router that does not support\n   [INTERNET:14], this\
    \ technique might not discover the correct Path\n   MTU, but it will always choose\
    \ a Path MTU as accurate as, and in many\n   cases more accurate than, the Path\
    \ MTU that would be chosen by older\n   techniques or the current practice.\n\
    \   When a router is originating an IP datagram, it SHOULD use the scheme\n  \
    \ described in [INTERNET:14] to limit the datagram's size.  If the\n   router's\
    \ route to the datagram's destination was learned from a\n   routing protocol\
    \ that provides Path MTU information, the scheme\n   described in [INTERNET:14]\
    \ is still used, but the Path MTU\n   information from the routing protocol SHOULD\
    \ be used as the initial\n   guess as to the Path MTU and also as an upper bound\
    \ on the Path MTU.\n"
- title: 4.2.3.4 Subnetting
  contents:
  - "4.2.3.4 Subnetting\n   Under certain circumstances, it may be desirable to support\
    \ subnets\n   of a particular network being interconnected only through a path\
    \ that\n   is not part of the subnetted network.  This is known as discontiguous\n\
    \   subnetwork support.\n   Routers MUST support discontiguous subnetworks.\n\
    \   IMPLEMENTATION\n      In classical IP networks, this was very difficult to\
    \ achieve; in\n      CIDR networks, it is a natural by-product.  Therefore, a\
    \ router\n      SHOULD NOT make assumptions about subnet architecture, but SHOULD\n\
    \      treat each route as a generalized network prefix.\n   DISCUSSION The Internet\
    \ has been growing at a tremendous rate of\n      late.  This has been placing\
    \ severe strains on the IP addressing\n      technology.  A major factor in this\
    \ strain is the strict IP\n      Address class boundaries.  These make it difficult\
    \ to efficiently\n      size network prefixes to their networks and aggregate\
    \ several\n      network prefixes into a single route advertisement.  By\n   \
    \   eliminating the strict class boundaries of the IP address and\n      treating\
    \ each route as a generalized network prefix, these strains\n      may be greatly\
    \ reduced.\n      The technology for currently doing this is Classless Inter Domain\n\
    \      Routing (CIDR) [INTERNET:15].\n   For similar reasons, an address block\
    \ associated with a given network\n   prefix could be subdivided into subblocks\
    \ of different sizes, so that\n   the network prefixes associated with the subblocks\
    \ would have\n   different length.  For example, within a block whose network\
    \ prefix\n   is 8 bits long, one subblock may have a 16 bit network prefix,\n\
    \   another may have an 18 bit network prefix, and a third a 14 bit\n   network\
    \ prefix.\n   Routers MUST support variable length network prefixes in both their\n\
    \   interface configurations and their routing databases.\n"
- title: 4.3 INTERNET CONTROL MESSAGE PROTOCOL - ICMP
  contents:
  - '4.3 INTERNET CONTROL MESSAGE PROTOCOL - ICMP

    '
- title: 4.3.1 INTRODUCTION
  contents:
  - "4.3.1 INTRODUCTION\n   ICMP is an auxiliary protocol, which provides routing,\
    \ diagnostic and\n   error functionality for IP.  It is described in [INTERNET:8].\
    \  A\n   router MUST support ICMP.\n   ICMP messages are grouped in two classes\
    \ that are discussed in the\n   following sections:\n   ICMP error messages:\n\
    \   Destination Unreachable     Section 4.3.3.1\n   Redirect                 \
    \   Section 4.3.3.2\n   Source Quench               Section 4.3.3.3\n   Time Exceeded\
    \               Section 4.3.3.4\n   Parameter Problem           Section 4.3.3.5\n\
    \   ICMP query messages:\n   Echo                        Section 4.3.3.6\n   Information\
    \                 Section 4.3.3.7\n   Timestamp                   Section 4.3.3.8\n\
    \   Address Mask                Section 4.3.3.9\n   Router Discovery         \
    \   Section 4.3.3.10\n   General ICMP requirements and discussion are in the next\
    \ section.\n"
- title: 4.3.2 GENERAL ISSUES
  contents:
  - '4.3.2 GENERAL ISSUES

    '
- title: 4.3.2.1 Unknown Message Types
  contents:
  - "4.3.2.1 Unknown Message Types\n   If an ICMP message of unknown type is received,\
    \ it MUST be passed to\n   the ICMP user interface (if the router has one) or\
    \ silently discarded\n   (if the router does not have one).\n"
- title: 4.3.2.2 ICMP Message TTL
  contents:
  - "4.3.2.2 ICMP Message TTL\n   When originating an ICMP message, the router MUST\
    \ initialize the TTL.\n   The TTL for ICMP responses must not be taken from the\
    \ packet that\n   triggered the response.\n"
- title: 4.3.2.3 Original Message Header
  contents:
  - "4.3.2.3 Original Message Header\n   Historically, every ICMP error message has\
    \ included the Internet\n   header and at least the first 8 data bytes of the\
    \ datagram that\n   triggered the error.  This is no longer adequate, due to the\
    \ use of\n   IP-in-IP tunneling and other technologies.  Therefore, the ICMP\n\
    \   datagram SHOULD contain as much of the original datagram as possible\n   without\
    \ the length of the ICMP datagram exceeding 576 bytes.  The\n   returned IP header\
    \ (and user data) MUST be identical to that which\n   was received, except that\
    \ the router is not required to undo any\n   modifications to the IP header that\
    \ are normally performed in\n   forwarding that were performed before the error\
    \ was detected (e.g.,\n   decrementing the TTL, or updating options).  Note that\
    \ the\n   requirements of Section [4.3.3.5] supersede this requirement in some\n\
    \   cases (i.e., for a Parameter Problem message, if the problem is in a\n   modified\
    \ field, the router must undo the modification).  See Section\n   [4.3.3.5]).\n"
- title: 4.3.2.4 ICMP Message Source Address
  contents:
  - "4.3.2.4 ICMP Message Source Address\n   Except where this document specifies\
    \ otherwise, the IP source address\n   in an ICMP message originated by the router\
    \ MUST be one of the IP\n   addresses associated with the physical interface over\
    \ which the ICMP\n   message is transmitted.  If the interface has no IP addresses\n\
    \   associated with it, the router's router-id (see Section [5.2.5]) is\n   used\
    \ instead.\n"
- title: 4.3.2.5 TOS and Precedence
  contents:
  - "4.3.2.5 TOS and Precedence\n   ICMP error messages SHOULD have their TOS bits\
    \ set to the same value\n   as the TOS bits in the packet that provoked the sending\
    \ of the ICMP\n   error message, unless setting them to that value would cause\
    \ the ICMP\n   error message to be immediately discarded because it could not\
    \ be\n   routed to its destination.  Otherwise, ICMP error messages MUST be\n\
    \   sent with a normal (i.e., zero) TOS.  An ICMP reply message SHOULD\n   have\
    \ its TOS bits set to the same value as the TOS bits in the ICMP\n   request that\
    \ provoked the reply.\n   ICMP Source Quench error messages, if sent at all, MUST\
    \ have their IP\n   Precedence field set to the same value as the IP Precedence\
    \ field in\n   the packet that provoked the sending of the ICMP Source Quench\n\
    \   message.  All other ICMP error messages (Destination Unreachable,\n   Redirect,\
    \ Time Exceeded, and Parameter Problem) SHOULD have their\n   precedence value\
    \ set to 6 (INTERNETWORK CONTROL) or 7 (NETWORK\n   CONTROL).  The IP Precedence\
    \ value for these error messages MAY be\n   settable.\n   An ICMP reply message\
    \ MUST have its IP Precedence field set to the\n   same value as the IP Precedence\
    \ field in the ICMP request that\n   provoked the reply.\n"
- title: 4.3.2.6 Source Route
  contents:
  - "4.3.2.6 Source Route\n   If the packet which provokes the sending of an ICMP\
    \ error message\n   contains a source route option, the ICMP error message SHOULD\
    \ also\n   contain a source route option of the same type (strict or loose),\n\
    \   created by reversing the portion before the pointer of the route\n   recorded\
    \ in the source route option of the original packet UNLESS the\n   ICMP error\
    \ message is an ICMP Parameter Problem complaining about a\n   source route option\
    \ in the original packet, or unless the router is\n   aware of policy that would\
    \ prevent the delivery of the ICMP error\n   message.\n   DISCUSSION\n      In\
    \ environments which use the U.S.  Department of Defense security\n      option\
    \ (defined in [INTERNET:5]), ICMP messages may need to\n      include a security\
    \ option.  Detailed information on this topic\n      should be available from\
    \ the Defense Communications Agency.\n"
- title: 4.3.2.7 When Not to Send ICMP Errors
  contents:
  - "4.3.2.7 When Not to Send ICMP Errors\n   An ICMP error message MUST NOT be sent\
    \ as the result of receiving:\n   o An ICMP error message, or\n   o A packet which\
    \ fails the IP header validation tests described in\n      Section [5.2.2] (except\
    \ where that section specifically permits\n      the sending of an ICMP error\
    \ message), or\n   o A packet destined to an IP broadcast or IP multicast address,\
    \ or\n   o A packet sent as a Link Layer broadcast or multicast, or\n   o A packet\
    \ whose source address has a network prefix of zero or is an\n      invalid source\
    \ address (as defined in Section [5.3.7]), or\n   o Any fragment of a datagram\
    \ other then the first fragment (i.e., a\n      packet for which the fragment\
    \ offset in the IP header is nonzero).\n   Furthermore, an ICMP error message\
    \ MUST NOT be sent in any case where\n   this memo states that a packet is to\
    \ be silently discarded.\n   NOTE: THESE RESTRICTIONS TAKE PRECEDENCE OVER ANY\
    \ REQUIREMENT\n   ELSEWHERE IN THIS DOCUMENT FOR SENDING ICMP ERROR MESSAGES.\n\
    \   DISCUSSION\n      These rules aim to prevent the broadcast storms that have\
    \ resulted\n      from routers or hosts returning ICMP error messages in response\
    \ to\n      broadcast packets.  For example, a broadcast UDP packet to a non-\n\
    \      existent port could trigger a flood of ICMP Destination\n      Unreachable\
    \ datagrams from all devices that do not have a client\n      for that destination\
    \ port.  On a large Ethernet, the resulting\n      collisions can render the network\
    \ useless for a second or more.\n      Every packet that is broadcast on the connected\
    \ network should\n      have a valid IP broadcast address as its IP destination\
    \ (see\n      Section [5.3.4] and [INTRO:2]).  However, some devices violate\n\
    \      this rule.  To be certain to detect broadcast packets, therefore,\n   \
    \   routers are required to check for a link-layer broadcast as well\n      as\
    \ an IP-layer address.\n   IMPLEMENTATION+ This requires that the link layer inform\
    \ the IP layer\n      when a link-layer broadcast packet has been received; see\
    \ Section\n      [3.1].\n"
- title: 4.3.2.8 Rate Limiting
  contents:
  - "4.3.2.8 Rate Limiting\n   A router which sends ICMP Source Quench messages MUST\
    \ be able to\n   limit the rate at which the messages can be generated.  A router\n\
    \   SHOULD also be able to limit the rate at which it sends other sorts\n   of\
    \ ICMP error messages (Destination Unreachable, Redirect, Time\n   Exceeded, Parameter\
    \ Problem).  The rate limit parameters SHOULD be\n   settable as part of the configuration\
    \ of the router.  How the limits\n   are applied (e.g., per router or per interface)\
    \ is left to the\n   implementor's discretion.\n   DISCUSSION\n      Two problems\
    \ for a router sending ICMP error message are:\n      (1) The consumption of bandwidth\
    \ on the reverse path, and\n      (2) The use of router resources (e.g., memory,\
    \ CPU time)\n      To help solve these problems a router can limit the frequency\
    \ with\n      which it generates ICMP error messages.  For similar reasons, a\n\
    \      router may limit the frequency at which some other sorts of\n      messages,\
    \ such as ICMP Echo Replies, are generated.\n   IMPLEMENTATION\n      Various\
    \ mechanisms have been used or proposed for limiting the\n      rate at which\
    \ ICMP messages are sent:\n      (1) Count-based - for example, send an ICMP error\
    \ message for\n           every N dropped packets overall or per given source\
    \ host.\n           This mechanism might be appropriate for ICMP Source Quench,\n\
    \           if used, but probably not for other types of ICMP messages.\n    \
    \  (2) Timer-based - for example, send an ICMP error message to a\n          \
    \ given source host or overall at most once per T milliseconds.\n      (3) Bandwidth-based\
    \ - for example, limit the rate at which ICMP\n           messages are sent over\
    \ a particular interface to some\n           fraction of the attached network's\
    \ bandwidth.\n"
- title: 4.3.3 SPECIFIC ISSUES
  contents:
  - '4.3.3 SPECIFIC ISSUES

    '
- title: 4.3.3.1 Destination Unreachable
  contents:
  - "4.3.3.1 Destination Unreachable\n   If a router cannot forward a packet because\
    \ it has no routes at all\n   (including no default route) to the destination\
    \ specified in the\n   packet, then the router MUST generate a Destination Unreachable,\
    \ Code\n   0 (Network Unreachable) ICMP message.  If the router does have routes\n\
    \   to the destination network specified in the packet but the TOS\n   specified\
    \ for the routes is neither the default TOS (0000) nor the\n   TOS of the packet\
    \ that the router is attempting to route, then the\n   router MUST generate a\
    \ Destination Unreachable, Code 11 (Network\n   Unreachable for TOS) ICMP message.\n\
    \   If a packet is to be forwarded to a host on a network that is\n   directly\
    \ connected to the router (i.e., the router is the last-hop\n   router) and the\
    \ router has ascertained that there is no path to the\n   destination host then\
    \ the router MUST generate a Destination\n   Unreachable, Code 1 (Host Unreachable)\
    \ ICMP message.  If a packet is\n   to be forwarded to a host that is on a network\
    \ that is directly\n   connected to the router and the router cannot forward the\
    \ packet\n   because no route to the destination has a TOS that is either equal\
    \ to\n   the TOS requested in the packet or is the default TOS (0000) then the\n\
    \   router MUST generate a Destination Unreachable, Code 12 (Host\n   Unreachable\
    \ for TOS) ICMP message.\n   DISCUSSION\n      The intent is that a router generates\
    \ the \"generic\" host/network\n      unreachable if it has no path at all (including\
    \ default routes) to\n      the destination.  If the router has one or more paths\
    \ to the\n      destination, but none of those paths have an acceptable TOS, then\n\
    \      the router generates the \"unreachable for TOS\" message.\n"
- title: 4.3.3.2 Redirect
  contents:
  - "4.3.3.2 Redirect\n   The ICMP Redirect message is generated to inform a local\
    \ host that it\n   should use a different next hop router for certain traffic.\n\
    \   Contrary to [INTRO:2], a router MAY ignore ICMP Redirects when\n   choosing\
    \ a path for a packet originated by the router if the router\n   is running a\
    \ routing protocol or if forwarding is enabled on the\n   router and on the interface\
    \ over which the packet is being sent.\n"
- title: 4.3.3.3 Source Quench
  contents:
  - "4.3.3.3 Source Quench\n   A router SHOULD NOT originate ICMP Source Quench messages.\
    \  As\n   specified in Section [4.3.2], a router that does originate Source\n\
    \   Quench messages MUST be able to limit the rate at which they are\n   generated.\n\
    \   DISCUSSION\n      Research seems to suggest that Source Quench consumes network\n\
    \      bandwidth but is an ineffective (and unfair) antidote to\n      congestion.\
    \  See, for example, [INTERNET:9] and [INTERNET:10].\n      Section [5.3.6] discusses\
    \ the current thinking on how routers\n      ought to deal with overload and network\
    \ congestion.\n   A router MAY ignore any ICMP Source Quench messages it receives.\n\
    \   DISCUSSION\n      A router itself may receive a Source Quench as the result\
    \ of\n      originating a packet sent to another router or host.  Such\n     \
    \ datagrams might be, e.g., an EGP update sent to another router, or\n      a\
    \ telnet stream sent to a host.  A mechanism has been proposed\n      ([INTERNET:11],\
    \ [INTERNET:12]) to make the IP layer respond\n      directly to Source Quench\
    \ by controlling the rate at which packets\n      are sent, however, this proposal\
    \ is currently experimental and not\n      currently recommended.\n"
- title: 4.3.3.4 Time Exceeded
  contents:
  - "4.3.3.4 Time Exceeded\n   When a router is forwarding a packet and the TTL field\
    \ of the packet\n   is reduced to 0, the requirements of section [5.2.3.8] apply.\n\
    \   When the router is reassembling a packet that is destined for the\n   router,\
    \ it is acting as an Internet host.  [INTRO:2]'s reassembly\n   requirements therefore\
    \ apply.\n   When the router receives (i.e., is destined for the router) a Time\n\
    \   Exceeded message, it MUST comply with [INTRO:2].\n"
- title: 4.3.3.5 Parameter Problem
  contents:
  - "4.3.3.5 Parameter Problem\n   A router MUST generate a Parameter Problem message\
    \ for any error not\n   specifically covered by another ICMP message.  The IP\
    \ header field or\n   IP option including the byte indicated by the pointer field\
    \ MUST be\n   included unchanged in the IP header returned with this ICMP message.\n\
    \   Section [4.3.2] defines an exception to this requirement.\n   A new variant\
    \ of the Parameter Problem message was defined in\n   [INTRO:2]:\n        Code\
    \ 1 = required option is missing.\n   DISCUSSION\n      This variant is currently\
    \ in use in the military community for a\n      missing security option.\n"
- title: 4.3.3.6 Echo Request/Reply
  contents:
  - "4.3.3.6 Echo Request/Reply\n   A router MUST implement an ICMP Echo server function\
    \ that receives\n   Echo Requests sent to the router, and sends corresponding\
    \ Echo\n   Replies.  A router MUST be prepared to receive, reassemble and echo\n\
    \   an ICMP Echo Request datagram at least as the maximum of 576 and the\n   MTUs\
    \ of all the connected networks.\n   The Echo server function MAY choose not to\
    \ respond to ICMP echo\n   requests addressed to IP broadcast or IP multicast\
    \ addresses.\n   A router SHOULD have a configuration option that, if enabled,\
    \ causes\n   the router to silently ignore all ICMP echo requests; if provided,\n\
    \   this option MUST default to allowing responses.\n   DISCUSSION\n      The\
    \ neutral provision about responding to broadcast and multicast\n      Echo Requests\
    \ derives from [INTRO:2]'s \"Echo Request/Reply\"\n      section.\n   As stated\
    \ in Section [10.3.3], a router MUST also implement a\n   user/application-layer\
    \ interface for sending an Echo Request and\n   receiving an Echo Reply, for diagnostic\
    \ purposes.  All ICMP Echo\n   Reply messages MUST be passed to this interface.\n\
    \   The IP source address in an ICMP Echo Reply MUST be the same as the\n   specific-destination\
    \ address of the corresponding ICMP Echo Request\n   message.\n   Data received\
    \ in an ICMP Echo Request MUST be entirely included in\n   the resulting Echo\
    \ Reply.\n   If a Record Route and/or Timestamp option is received in an ICMP\
    \ Echo\n   Request, this option (these options) SHOULD be updated to include the\n\
    \   current router and included in the IP header of the Echo Reply\n   message,\
    \ without truncation.  Thus, the recorded route will be for\n   the entire round\
    \ trip.\n   If a Source Route option is received in an ICMP Echo Request, the\n\
    \   return route MUST be reversed and used as a Source Route option for\n   the\
    \ Echo Reply message, unless the router is aware of policy that\n   would prevent\
    \ the delivery of the message.\n"
- title: 4.3.3.7 Information Request/Reply
  contents:
  - "4.3.3.7 Information Request/Reply\n   A router SHOULD NOT originate or respond\
    \ to these messages.\n   DISCUSSION\n      The Information Request/Reply pair\
    \ was intended to support self-\n      configuring systems such as diskless workstations,\
    \ to allow them\n      to discover their IP network prefixes at boot time.  However,\n\
    \      these messages are now obsolete.  The RARP and BOOTP protocols\n      provide\
    \ better mechanisms for a host to discover its own IP\n      address.\n"
- title: 4.3.3.8 Timestamp and Timestamp Reply
  contents:
  - "4.3.3.8 Timestamp and Timestamp Reply\n   A router MAY implement Timestamp and\
    \ Timestamp Reply.  If they are\n   implemented then:\n   o The ICMP Timestamp\
    \ server function MUST return a Timestamp Reply to\n      every Timestamp message\
    \ that is received.  It SHOULD be designed\n      for minimum variability in delay.\n\
    \   o An ICMP Timestamp Request message to an IP broadcast or IP\n      multicast\
    \ address MAY be silently discarded.\n   o The IP source address in an ICMP Timestamp\
    \ Reply MUST be the same\n      as the specific-destination address of the corresponding\
    \ Timestamp\n      Request message.\n   o If a Source Route option is received\
    \ in an ICMP Timestamp Request,\n      the return route MUST be reversed and used\
    \ as a Source Route\n      option for the Timestamp Reply message, unless the\
    \ router is aware\n      of policy that would prevent the delivery of the message.\n\
    \   o If a Record Route and/or Timestamp option is received in a\n      Timestamp\
    \ Request, this (these) option(s) SHOULD be updated to\n      include the current\
    \ router and included in the IP header of the\n      Timestamp Reply message.\n\
    \   o If the router provides an application-layer interface for sending\n    \
    \  Timestamp Request messages then incoming Timestamp Reply messages\n      MUST\
    \ be passed up to the ICMP user interface.\n   The preferred form for a timestamp\
    \ value (the standard value) is\n   milliseconds since midnight, Universal Time.\
    \  However, it may be\n   difficult to provide this value with millisecond resolution.\
    \  For\n   example, many systems use clocks that update only at line frequency,\n\
    \   50 or 60 times per second.  Therefore, some latitude is allowed in a\n   standard\
    \ value:\n   (a) A standard value MUST be updated at least 16 times per second\n\
    \        (i.e., at most the six low-order bits of the value may be\n        undefined).\n\
    \   (b) The accuracy of a standard value MUST approximate that of\n        operator-set\
    \ CPU clocks, i.e., correct within a few minutes.\n   IMPLEMENTATION\n      To\
    \ meet the second condition, a router may need to query some time\n      server\
    \ when the router is booted or restarted.  It is recommended\n      that the UDP\
    \ Time Server Protocol be used for this purpose.  A\n      more advanced implementation\
    \ would use the Network Time Protocol\n      (NTP) to achieve nearly millisecond\
    \ clock synchronization;\n      however, this is not required.\n"
- title: 4.3.3.9 Address Mask Request/Reply
  contents:
  - "4.3.3.9 Address Mask Request/Reply\n   A router MUST implement support for receiving\
    \ ICMP Address Mask\n   Request messages and responding with ICMP Address Mask\
    \ Reply\n   messages.  These messages are defined in [INTERNET:2].\n   A router\
    \ SHOULD have a configuration option for each logical\n   interface specifying\
    \ whether the router is allowed to answer Address\n   Mask Requests for that interface;\
    \ this option MUST default to\n   allowing responses.  A router MUST NOT respond\
    \ to an Address Mask\n   Request before the router knows the correct address mask.\n\
    \   A router MUST NOT respond to an Address Mask Request that has a\n   source\
    \ address of 0.0.0.0 and which arrives on a physical interface\n   that has associated\
    \ with it multiple logical interfaces and the\n   address masks for those interfaces\
    \ are not all the same.\n   A router SHOULD examine all ICMP Address Mask Replies\
    \ that it\n   receives to determine whether the information it contains matches\
    \ the\n   router's knowledge of the address mask.  If the ICMP Address Mask\n\
    \   Reply appears to be in error, the router SHOULD log the address mask\n   and\
    \ the sender's IP address.  A router MUST NOT use the contents of\n   an ICMP\
    \ Address Mask Reply to determine the correct address mask.\n   Because hosts\
    \ may not be able to learn the address mask if a router\n   is down when the host\
    \ boots up, a router MAY broadcast a gratuitous\n   ICMP Address Mask Reply on\
    \ each of its logical interfaces after it\n   has configured its own address masks.\
    \  However, this feature can be\n   dangerous in environments that use variable\
    \ length address masks.\n   Therefore, if this feature is implemented, gratuitous\
    \ Address Mask\n   Replies MUST NOT be broadcast over any logical interface(s)\
    \ which\n   either:\n   o Are not configured to send gratuitous Address Mask Replies.\
    \  Each\n      logical interface MUST have a configuration parameter controlling\n\
    \      this, and that parameter MUST default to not sending the\n      gratuitous\
    \ Address Mask Replies.\n   o Share subsuming (but not identical) network prefixes\
    \ and physical\n      interface.\n   The { <Network-prefix>, -1 } form of the\
    \ IP broadcast address MUST be\n   used for broadcast Address Mask Replies.\n\
    \   DISCUSSION\n      The ability to disable sending Address Mask Replies by routers\
    \ is\n      required at a few sites that intentionally lie to their hosts\n  \
    \    about the address mask.  The need for this is expected to go away\n     \
    \ as more and more hosts become compliant with the Host Requirements\n      standards.\n\
    \      The reason for both the second bullet above and the requirement\n     \
    \ about which IP broadcast address to use is to prevent problems\n      when multiple\
    \ IP network prefixes are in use on the same physical\n      network.\n"
- title: 4.3.3.10 Router Advertisement and Solicitations
  contents:
  - "4.3.3.10 Router Advertisement and Solicitations\n   An IP router MUST support\
    \ the router part of the ICMP Router\n   Discovery Protocol [INTERNET:13] on all\
    \ connected networks on which\n   the router supports either IP multicast or IP\
    \ broadcast addressing.\n   The implementation MUST include all the configuration\
    \ variables\n   specified for routers, with the specified defaults.\n   DISCUSSION\n\
    \      Routers are not required to implement the host part of the ICMP\n     \
    \ Router Discovery Protocol, but might find it useful for operation\n      while\
    \ IP forwarding is disabled (i.e., when operating as a host).\n   DISCUSSION We\
    \ note that it is quite common for hosts to use RIP\n      Version 1 as the router\
    \ discovery protocol.  Such hosts listen to\n      RIP traffic and use and use\
    \ information extracted from that\n      traffic to discover routers and to make\
    \ decisions as to which\n      router to use as a first-hop router for a given\
    \ destination.\n      While this behavior is discouraged, it is still common and\n\
    \      implementors should be aware of it.\n"
- title: 4.4 INTERNET GROUP MANAGEMENT PROTOCOL - IGMP
  contents:
  - "4.4 INTERNET GROUP MANAGEMENT PROTOCOL - IGMP\n   IGMP [INTERNET:4] is a protocol\
    \ used between hosts and multicast\n   routers on a single physical network to\
    \ establish hosts' membership\n   in particular multicast groups.  Multicast routers\
    \ use this\n   information, in conjunction with a multicast routing protocol,\
    \ to\n   support IP multicast forwarding across the Internet.\n   A router SHOULD\
    \ implement the host part of IGMP.\n"
- title: 5. INTERNET LAYER - FORWARDING
  contents:
  - '5. INTERNET LAYER - FORWARDING

    '
- title: 5.1 INTRODUCTION
  contents:
  - "5.1 INTRODUCTION\n   This section describes the process of forwarding packets.\n"
- title: 5.2 FORWARDING WALK-THROUGH
  contents:
  - "5.2 FORWARDING WALK-THROUGH\n   There is no separate specification of the forwarding\
    \ function in IP.\n   Instead, forwarding is covered by the protocol specifications\
    \ for the\n   internet layer protocols ([INTERNET:1], [INTERNET:2], [INTERNET:3],\n\
    \   [INTERNET:8], and [ROUTE:11]).\n"
- title: 5.2.1 Forwarding Algorithm
  contents:
  - "5.2.1 Forwarding Algorithm\n   Since none of the primary protocol documents describe\
    \ the forwarding\n   algorithm in any detail, we present it here.  This is just\
    \ a general\n   outline, and omits important details, such as handling of congestion,\n\
    \   that are dealt with in later sections.\n   It is not required that an implementation\
    \ follow exactly the\n   algorithms given in sections [5.2.1.1], [5.2.1.2], and\
    \ [5.2.1.3].\n   Much of the challenge of writing router software is to maximize\
    \ the\n   rate at which the router can forward packets while still achieving\n\
    \   the same effect of the algorithm.  Details of how to do that are\n   beyond\
    \ the scope of this document, in part because they are heavily\n   dependent on\
    \ the architecture of the router.  Instead, we merely\n   point out the order\
    \ dependencies among the steps:\n   (1) A router MUST verify the IP header, as\
    \ described in section\n        [5.2.2], before performing any actions based on\
    \ the contents of\n        the header.  This allows the router to detect and discard\
    \ bad\n        packets before the expenditure of other resources.\n   (2) Processing\
    \ of certain IP options requires that the router insert\n        its IP address\
    \ into the option.  As noted in Section [5.2.4],\n        the address inserted\
    \ MUST be the address of the logical\n        interface on which the packet is\
    \ sent or the router's router-id\n        if the packet is sent over an unnumbered\
    \ interface.  Thus,\n        processing of these options cannot be completed until\
    \ after the\n        output interface is chosen.\n   (3) The router cannot check\
    \ and decrement the TTL before checking\n        whether the packet should be\
    \ delivered to the router itself, for\n        reasons mentioned in Section [4.2.2.9].\n\
    \   (4) More generally, when a packet is delivered locally to the router,\n  \
    \      its IP header MUST NOT be modified in any way (except that a\n        router\
    \ may be required to insert a timestamp into any Timestamp\n        options in\
    \ the IP header).  Thus, before the router determines\n        whether the packet\
    \ is to be delivered locally to the router, it\n        cannot update the IP header\
    \ in any way that it is not prepared\n        to undo.\n"
- title: 5.2.1.1 General
  contents:
  - "5.2.1.1 General\n   This section covers the general forwarding algorithm.  This\
    \ algorithm\n   applies to all forms of packets to be forwarded: unicast, multicast,\n\
    \   and broadcast.\n   (1) The router receives the IP packet (plus additional\
    \ information\n        about it, as described in Section [3.1]) from the Link\
    \ Layer.\n   (2) The router validates the IP header, as described in Section\n\
    \        [5.2.2].  Note that IP reassembly is not done, except on IP\n       \
    \ fragments to be queued for local delivery in step (4).\n   (3) The router performs\
    \ most of the processing of any IP options.  As\n        described in Section\
    \ [5.2.4], some IP options require additional\n        processing after the routing\
    \ decision has been made.\n   (4) The router examines the destination IP address\
    \ of the IP\n        datagram, as described in Section [5.2.3], to determine how\
    \ it\n        should continue to process the IP datagram.  There are three\n \
    \       possibilities:\n        o The IP datagram is destined for the router,\
    \ and should be\n           queued for local delivery, doing reassembly if needed.\n\
    \        o The IP datagram is not destined for the router, and should be\n   \
    \        queued for forwarding.\n        o The IP datagram should be queued for\
    \ forwarding, but (a copy)\n           must also be queued for local delivery.\n"
- title: 5.2.1.2 Unicast
  contents:
  - "5.2.1.2 Unicast\n   Since the local delivery case is well covered by [INTRO:2],\
    \ the\n   following assumes that the IP datagram was queued for forwarding.  If\n\
    \   the destination is an IP unicast address:\n   (5) The forwarder determines\
    \ the next hop IP address for the packet,\n        usually by looking up the packet's\
    \ destination in the router's\n        routing table.  This procedure is described\
    \ in more detail in\n        Section [5.2.4].  This procedure also decides which\
    \ network\n        interface should be used to send the packet.\n   (6) The forwarder\
    \ verifies that forwarding the packet is permitted.\n        The source and destination\
    \ addresses should be valid, as\n        described in Section [5.3.7] and Section\
    \ [5.3.4] If the router\n        supports administrative constraints on forwarding,\
    \ such as those\n        described in Section [5.3.9], those constraints must\
    \ be\n        satisfied.\n   (7) The forwarder decrements (by at least one) and\
    \ checks the\n        packet's TTL, as described in Section [5.3.1].\n   (8) The\
    \ forwarder performs any IP option processing that could not be\n        completed\
    \ in step 3.\n   (9) The forwarder performs any necessary IP fragmentation, as\n\
    \        described in Section [4.2.2.7].  Since this step occurs after\n     \
    \   outbound interface selection (step 5), all fragments of the same\n       \
    \ datagram will be transmitted out the same interface.\n   (10) The forwarder\
    \ determines the Link Layer address of the packet's\n        next hop.  The mechanisms\
    \ for doing this are Link Layer-\n        dependent (see chapter 3).\n   (11)\
    \ The forwarder encapsulates the IP datagram (or each of the\n        fragments\
    \ thereof) in an appropriate Link Layer frame and queues\n        it for output\
    \ on the interface selected in step 5.\n   (12) The forwarder sends an ICMP redirect\
    \ if necessary, as described\n        in Section [4.3.3.2].\n"
- title: 5.2.1.3 Multicast
  contents:
  - "5.2.1.3 Multicast\n   If the destination is an IP multicast, the following steps\
    \ are taken.\n   Note that the main differences between the forwarding of IP unicasts\n\
    \   and the forwarding of IP multicasts are\n   o IP multicasts are usually forwarded\
    \ based on both the datagram's\n      source and destination IP addresses,\n \
    \  o IP multicast uses an expanding ring search,\n   o IP multicasts are forwarded\
    \ as Link Level multicasts, and\n   o ICMP errors are never sent in response to\
    \ IP multicast datagrams.\n   Note that the forwarding of IP multicasts is still\
    \ somewhat\n   experimental.  As a result, the algorithm presented below is not\n\
    \   mandatory, and is provided as an example only.\n   (5a) Based on the IP source\
    \ and destination addresses found in the\n        datagram header, the router\
    \ determines whether the datagram has\n        been received on the proper interface\
    \ for forwarding.  If not,\n        the datagram is dropped silently.  The method\
    \ for determining\n        the proper receiving interface depends on the multicast\
    \ routing\n        algorithm(s) in use.  In one of the simplest algorithms, reverse\n\
    \        path forwarding (RPF), the proper interface is the one that\n       \
    \ would be used to forward unicasts back to the datagram source.\n   (6a) Based\
    \ on the IP source and destination addresses found in the\n        datagram header,\
    \ the router determines the datagram's outgoing\n        interfaces.  To implement\
    \ IP multicast's expanding ring search\n        (see [INTERNET:4]) a minimum TTL\
    \ value is specified for each\n        outgoing interface.  A copy of the multicast\
    \ datagram is\n        forwarded out each outgoing interface whose minimum TTL\
    \ value is\n        less than or equal to the TTL value in the datagram header,\
    \ by\n        separately applying the remaining steps on each such interface.\n\
    \   (7a) The router decrements the packet's TTL by one.\n   (8a) The forwarder\
    \ performs any IP option processing that could not\n        be completed in step\
    \ (3).\n   (9a) The forwarder performs any necessary IP fragmentation, as\n  \
    \      described in Section [4.2.2.7].\n   (10a) The forwarder determines the\
    \ Link Layer address to use in the\n        Link Level encapsulation.  The mechanisms\
    \ for doing this are\n        Link Layer-dependent.  On LANs a Link Level multicast\
    \ or\n        broadcast is selected, as an algorithmic translation of the\n  \
    \      datagrams' IP multicast address.  See the various IP-over-xxx\n       \
    \ specifications for more details.\n   (11a) The forwarder encapsulates the packet\
    \ (or each of the fragments\n        thereof) in an appropriate Link Layer frame\
    \ and queues it for\n        output on the appropriate interface.\n"
- title: 5.2.2 IP Header Validation
  contents:
  - "5.2.2 IP Header Validation\n   Before a router can process any IP packet, it\
    \ MUST perform a the\n   following basic validity checks on the packet's IP header\
    \ to ensure\n   that the header is meaningful.  If the packet fails any of the\n\
    \   following tests, it MUST be silently discarded, and the error SHOULD\n   be\
    \ logged.\n   (1) The packet length reported by the Link Layer must be large enough\n\
    \        to hold the minimum length legal IP datagram (20 bytes).\n   (2) The\
    \ IP checksum must be correct.\n   (3) The IP version number must be 4.  If the\
    \ version number is not 4\n        then the packet may be another version of IP,\
    \ such as IPng or\n        ST-II.\n   (4) The IP header length field must be large\
    \ enough to hold the\n        minimum length legal IP datagram (20 bytes = 5 words).\n\
    \   (5) The IP total length field must be large enough to hold the IP\n      \
    \  datagram header, whose length is specified in the IP header\n        length\
    \ field.\n   A router MUST NOT have a configuration option that allows disabling\n\
    \   any of these tests.\n   If the packet passes the second and third tests, the\
    \ IP header length\n   field is at least 4, and both the IP total length field\
    \ and the\n   packet length reported by the Link Layer are at least 16 then,\n\
    \   despite the above rule, the router MAY respond with an ICMP Parameter\n  \
    \ Problem message, whose pointer points at the IP header length field\n   (if\
    \ it failed the fourth test) or the IP total length field (if it\n   failed the\
    \ fifth test).  However, it still MUST discard the packet\n   and still SHOULD\
    \ log the error.\n   These rules (and this entire document) apply only to version\
    \ 4 of the\n   Internet Protocol.  These rules should not be construed as\n  \
    \ prohibiting routers from supporting other versions of IP.\n   Furthermore, if\
    \ a router can truly classify a packet as being some\n   other version of IP then\
    \ it ought not treat that packet as an error\n   packet within the context of\
    \ this memo.\n   IMPLEMENTATION\n      It is desirable for purposes of error reporting,\
    \ though not always\n      entirely possible, to determine why a header was invalid.\
    \  There\n      are four possible reasons:\n      o The Link Layer truncated the\
    \ IP header\n      o The datagram is using a version of IP other than the standard\n\
    \         one (version 4).\n      o The IP header has been corrupted in transit.\n\
    \      o The sender generated an illegal IP header.\n      It is probably desirable\
    \ to perform the checks in the order\n      listed, since we believe that this\
    \ ordering is most likely to\n      correctly categorize the cause of the error.\
    \  For purposes of\n      error reporting, it may also be desirable to check if\
    \ a packet\n      that fails these tests has an IP version number indicating IPng\
    \ or\n      ST-II; these should be handled according to their respective\n   \
    \   specifications.\n   Additionally, the router SHOULD verify that the packet\
    \ length\n   reported by the Link Layer is at least as large as the IP total\n\
    \   length recorded in the packet's IP header.  If it appears that the\n   packet\
    \ has been truncated, the packet MUST be discarded, the error\n   SHOULD be logged,\
    \ and the router SHOULD respond with an ICMP\n   Parameter Problem message whose\
    \ pointer points at the IP total length\n   field.\n   DISCUSSION\n      Because\
    \ any higher layer protocol that concerns itself with data\n      corruption will\
    \ detect truncation of the packet data when it\n      reaches its final destination,\
    \ it is not absolutely necessary for\n      routers to perform the check suggested\
    \ above to maintain protocol\n      correctness.  However, by making this check\
    \ a router can simplify\n      considerably the task of determining which hop\
    \ in the path is\n      truncating the packets.  It will also reduce the expenditure\
    \ of\n      resources down-stream from the router in that down-stream systems\n\
    \      will not need to deal with the packet.\n   Finally, if the destination\
    \ address in the IP header is not one of\n   the addresses of the router, the\
    \ router SHOULD verify that the packet\n   does not contain a Strict Source and\
    \ Record Route option.  If a\n   packet fails this test (if it contains a strict\
    \ source route option),\n   the router SHOULD log the error and SHOULD respond\
    \ with an ICMP\n   Parameter Problem error with the pointer pointing at the offending\n\
    \   packet's IP destination address.\n   DISCUSSION\n      Some people might suggest\
    \ that the router should respond with a\n      Bad Source Route message instead\
    \ of a Parameter Problem message.\n      However, when a packet fails this test,\
    \ it usually indicates a\n      protocol error by the previous hop router, whereas\
    \ Bad Source\n      Route would suggest that the source host had requested a\n\
    \      nonexistent or broken path through the network.\n"
- title: 5.2.3 Local Delivery Decision
  contents:
  - "5.2.3 Local Delivery Decision\n   When a router receives an IP packet, it must\
    \ decide whether the\n   packet is addressed to the router (and should be delivered\
    \ locally)\n   or the packet is addressed to another system (and should be handled\n\
    \   by the forwarder).  There is also a hybrid case, where certain IP\n   broadcasts\
    \ and IP multicasts are both delivered locally and\n   forwarded.  A router MUST\
    \ determine which of the these three cases\n   applies using the following rules.\n\
    \   o An unexpired source route option is one whose pointer value does\n     \
    \ not point past the last entry in the source route.  If the packet\n      contains\
    \ an unexpired source route option, the pointer in the\n      option is advanced\
    \ until either the pointer does point past the\n      last address in the option\
    \ or else the next address is not one of\n      the router's own addresses.  In\
    \ the latter (normal) case, the\n      packet is forwarded (and not delivered\
    \ locally) regardless of the\n      rules below.\n   o The packet is delivered\
    \ locally and not considered for forwarding\n      in the following cases:\n \
    \     - The packet's destination address exactly matches one of the\n        \
    \ router's IP addresses,\n      - The packet's destination address is a limited\
    \ broadcast address\n         ({-1, -1}), or\n      - The packet's destination\
    \ is an IP multicast address which is\n         never forwarded (such as 224.0.0.1\
    \ or 224.0.0.2) and (at least)\n         one of the logical interfaces associated\
    \ with the physical\n         interface on which the packet arrived is a member\
    \ of the\n         destination multicast group.\n   o The packet is passed to\
    \ the forwarder AND delivered locally in the\n      following cases:\n      -\
    \ The packet's destination address is an IP broadcast address that\n         addresses\
    \ at least one of the router's logical interfaces but\n         does not address\
    \ any of the logical interfaces associated with\n         the physical interface\
    \ on which the packet arrived\n      - The packet's destination is an IP multicast\
    \ address which is\n         permitted to be forwarded (unlike 224.0.0.1 and 224.0.0.2)\
    \ and\n         (at least) one of the logical interfaces associated with the\n\
    \         physical interface on which the packet arrived is a member of\n    \
    \     the destination multicast group.\n   o The packet is delivered locally if\
    \ the packet's destination address\n      is an IP broadcast address (other than\
    \ a limited broadcast\n      address) that addresses at least one of the logical\
    \ interfaces\n      associated with the physical interface on which the packet\n\
    \      arrived.  The packet is ALSO passed to the forwarder unless the\n     \
    \ link on which the packet arrived uses an IP encapsulation that\n      does not\
    \ encapsulate broadcasts differently than unicasts (e.g.,\n      by using different\
    \ Link Layer destination addresses).\n   o The packet is passed to the forwarder\
    \ in all other cases.\n   DISCUSSION\n      The purpose of the requirement in\
    \ the last sentence of the fourth\n      bullet is to deal with a directed broadcast\
    \ to another network\n      prefix on the same physical cable.  Normally, this\
    \ works as\n      expected: the sender sends the broadcast to the router as a\
    \ Link\n      Layer unicast.  The router notes that it arrived as a unicast, and\n\
    \      therefore must be destined for a different network prefix than the\n  \
    \    sender sent it on.  Therefore, the router can safely send it as a\n     \
    \ Link Layer broadcast out the same (physical) interface over which\n      it\
    \ arrived.  However, if the router can't tell whether the packet\n      was received\
    \ as a Link Layer unicast, the sentence ensures that\n      the router does the\
    \ safe but wrong thing rather than the unsafe\n      but right thing.\n   IMPLEMENTATION\n\
    \      As described in Section [5.3.4], packets received as Link Layer\n     \
    \ broadcasts are generally not forwarded.  It may be advantageous to\n      avoid\
    \ passing to the forwarder packets it would later discard\n      because of the\
    \ rules in that section.\n      Some Link Layers (either because of the hardware\
    \ or because of\n      special code in the drivers) can deliver to the router\
    \ copies of\n      all Link Layer broadcasts and multicasts it transmits.  Use\
    \ of\n      this feature can simplify the implementation of cases where a\n  \
    \    packet has to both be passed to the forwarder and delivered\n      locally,\
    \ since forwarding the packet will automatically cause the\n      router to receive\
    \ a copy of the packet that it can then deliver\n      locally.  One must use\
    \ care in these circumstances to prevent\n      treating a received loop-back\
    \ packet as a normal packet that was\n      received (and then being subject to\
    \ the rules of forwarding,\n      etc.).\n      Even without such a Link Layer,\
    \ it is of course hardly necessary\n      to make a copy of an entire packet to\
    \ queue it both for forwarding\n      and for local delivery, though care must\
    \ be taken with fragments,\n      since reassembly is performed on locally delivered\
    \ packets but not\n      on forwarded packets.  One simple scheme is to associate\
    \ a flag\n      with each packet on the router's output queue that indicates\n\
    \      whether it should be queued for local delivery after it has been\n    \
    \  sent.\n"
- title: 5.2.4 Determining the Next Hop Address
  contents:
  - "5.2.4 Determining the Next Hop Address\n   When a router is going to forward\
    \ a packet, it must determine whether\n   it can send it directly to its destination,\
    \ or whether it needs to\n   pass it through another router.  If the latter, it\
    \ needs to determine\n   which router to use.  This section explains how these\
    \ determinations\n   are made.\n   This section makes use of the following definitions:\n\
    \   o LSRR - IP Loose Source and Record Route option\n   o SSRR - IP Strict Source\
    \ and Record Route option\n   o Source Route Option - an LSRR or an SSRR\n   o\
    \ Ultimate Destination Address - where the packet is being sent to:\n      the\
    \ last address in the source route of a source-routed packet, or\n      the destination\
    \ address in the IP header of a non-source-routed\n      packet\n   o Adjacent\
    \ - reachable without going through any IP routers\n   o Next Hop Address - the\
    \ IP address of the adjacent host or router to\n      which the packet should\
    \ be sent next\n   o IP Destination Address - the ultimate destination address,\
    \ except\n      in source routed packets, where it is the next address specified\n\
    \      in the source route\n   o Immediate Destination - the node, System, router,\
    \ end-system, or\n      whatever that is addressed by the IP Destination Address.\n"
- title: 5.2.4.1 IP Destination Address
  contents:
  - "5.2.4.1 IP Destination Address\n   If:\n   o the destination address in the IP\
    \ header is one of the addresses of\n      the router,\n   o the packet contains\
    \ a Source Route Option, and\n   o the pointer in the Source Route Option does\
    \ not point past the end\n      of the option,\n   then the next IP Destination\
    \ Address is the address pointed at by the\n   pointer in that option.  If:\n\
    \   o the destination address in the IP header is one of the addresses of\n  \
    \    the router,\n   o the packet contains a Source Route Option, and\n   o the\
    \ pointer in the Source Route Option points past the end of the\n      option,\n\
    \   then the message is addressed to the system analyzing the message.\n   A router\
    \ MUST use the IP Destination Address, not the Ultimate\n   Destination Address\
    \ (the last address in the source route option),\n   when determining how to handle\
    \ a packet.\n   It is an error for more than one source route option to appear\
    \ in a\n   datagram.  If it receives such a datagram, it SHOULD discard the\n\
    \   packet and reply with an ICMP Parameter Problem message whose pointer\n  \
    \ points at the beginning of the second source route option.\n"
- title: 5.2.4.2 Local/Remote Decision
  contents:
  - "5.2.4.2 Local/Remote Decision\n   After it has been determined that the IP packet\
    \ needs to be forwarded\n   according to the rules specified in Section [5.2.3],\
    \ the following\n   algorithm MUST be used to determine if the Immediate Destination\
    \ is\n   directly accessible (see [INTERNET:2]).\n   (1) For each network interface\
    \ that has not been assigned any IP\n       address (the unnumbered lines as described\
    \ in Section [2.2.7]),\n       compare the router-id of the other end of the line\
    \ to the IP\n       Destination Address.  If they are exactly equal, the packet\
    \ can\n       be transmitted through this interface.\n   DISCUSSION\n      In\
    \ other words, the router or host at the remote end of the line\n      is the\
    \ destination of the packet or is the next step in the source\n      route of\
    \ a source routed packet.\n   (2) If no network interface has been selected in\
    \ the first step, for\n       each IP address assigned to the router:\n   (a)\
    \ isolate the network prefix used by the interface.\n   IMPLEMENTATION\n     \
    \ The result of this operation will usually have been computed and\n      saved\
    \ during initialization.\n   (b) Isolate the corresponding set of bits from the\
    \ IP Destination\n      Address of the packet.\n   (c) Compare the resulting network\
    \ prefixes.  If they are equal to\n      each other, the packet can be transmitted\
    \ through the\n      corresponding network interface.\n   (3) If the destination\
    \ was neither the router-id of a neighbor on an\n       unnumbered interface nor\
    \ a member of a directly connected network\n       prefix, the IP Destination\
    \ is accessible only through some other\n       router.  The selection of the\
    \ router and the next hop IP address\n       is described in Section [5.2.4.3].\
    \  In the case of a host that is\n       not also a router, this may be the configured\
    \ default router.\n   Ongoing work in the IETF [ARCH:9, NRHP] considers some cases\
    \ such as\n   when multiple IP (sub)networks are overlaid on the same link layer\n\
    \   network.  Barring policy restrictions, hosts and routers using a\n   common\
    \ link layer network can directly communicate even if they are\n   not in the\
    \ same IP (sub)network, if there is adequate information\n   present.  The Next\
    \ Hop Routing Protocol (NHRP) enables IP entities to\n   determine the \"optimal\"\
    \ link layer address to be used to traverse\n   such a link layer network towards\
    \ a remote destination.\n   (4) If the selected \"next hop\" is reachable through\
    \ an interface\n   configured to use NHRP, then the following additional steps\
    \ apply:\n     (a) Compare the IP Destination Address to the destination addresses\n\
    \        in the NHRP cache.  If the address is in the cache, then send\n     \
    \   the datagram to the corresponding cached link layer address.\n     (b) If\
    \ the address is not in the cache, then construct an NHRP\n        request packet\
    \ containing the IP Destination Address.  This\n        message is sent to the\
    \ NHRP server configured for that\n        interface.  This may be a logically\
    \ separate process or entity\n        in the router itself.\n     (c) The NHRP\
    \ server will respond with the proper link layer address\n        to use to transmit\
    \ the datagram and subsequent datagrams to the\n        same destination.  The\
    \ system MAY transmit the datagram(s) to\n        the traditional \"next hop\"\
    \ router while awaiting the NHRP reply.\n"
- title: 5.2.4.3 Next Hop Address
  contents:
  - "5.2.4.3 Next Hop Address\n   EDITORS+COMMENTS\n      The router applies the algorithm\
    \ in the previous section to\n      determine if the IP Destination Address is\
    \ adjacent.  If so, the\n      next hop address is the same as the IP Destination\
    \ Address.\n      Otherwise, the packet must be forwarded through another router\
    \ to\n      reach its Immediate Destination.  The selection of this router is\n\
    \      the topic of this section.\n      If the packet contains an SSRR, the router\
    \ MUST discard the packet\n      and reply with an ICMP Bad Source Route error.\
    \  Otherwise, the\n      router looks up the IP Destination Address in its routing\
    \ table to\n      determine an appropriate next hop address.\n   DISCUSSION\n\
    \      Per the IP specification, a Strict Source Route must specify a\n      sequence\
    \ of nodes through which the packet must traverse; the\n      packet must go from\
    \ one node of the source route to the next,\n      traversing intermediate networks\
    \ only.  Thus, if the router is not\n      adjacent to the next step of the source\
    \ route, the source route\n      can not be fulfilled.  Therefore, the router\
    \ rejects such with an\n      ICMP Bad Source Route error.\n   The goal of the\
    \ next-hop selection process is to examine the entries\n   in the router's Forwarding\
    \ Information Base (FIB) and select the best\n   route (if there is one) for the\
    \ packet from those available in the\n   FIB.\n   Conceptually, any route lookup\
    \ algorithm starts out with a set of\n   candidate routes that consists of the\
    \ entire contents of the FIB.\n   The algorithm consists of a series of steps\
    \ that discard routes from\n   the set.  These steps are referred to as Pruning\
    \ Rules.  Normally,\n   when the algorithm terminates there is exactly one route\
    \ remaining in\n   the set.  If the set ever becomes empty, the packet is discarded\n\
    \   because the destination is unreachable.  It is also possible for the\n   algorithm\
    \ to terminate when more than one route remains in the set.\n   In this case,\
    \ the router may arbitrarily discard all but one of them,\n   or may perform \"\
    load-splitting\" by choosing whichever of the routes\n   has been least recently\
    \ used.\n   With the exception of rule 3 (Weak TOS), a router MUST use the\n \
    \  following Pruning Rules when selecting a next hop for a packet.  If a\n   router\
    \ does consider TOS when making next-hop decisions, the Rule 3\n   must be applied\
    \ in the order indicated below.  These rules MUST be\n   (conceptually) applied\
    \ to the FIB in the order that they are\n   presented.  (For some historical perspective,\
    \ additional pruning\n   rules, and other common algorithms in use, see Appendix\
    \ E.)\n   DISCUSSION\n      Rule 3 is optional in that Section [5.3.2] says that\
    \ a router only\n      SHOULD consider TOS when making forwarding decisions.\n\
    \      (1) Basic Match\n           This rule discards any routes to destinations\
    \ other than the\n           IP Destination Address of the packet.  For example,\
    \ if a\n           packet's IP Destination Address is 10.144.2.5, this step\n\
    \           would discard a route to net 128.12.0.0/16 but would retain\n    \
    \       any routes to the network prefixes 10.0.0.0/8 and\n           10.144.0.0/16,\
    \ and any default routes.\n           More precisely, we assume that each route\
    \ has a destination\n           attribute, called route.dest and a corresponding\
    \ prefix\n           length, called route.length, to specify which bits of\n \
    \          route.dest are significant.  The IP Destination Address of\n      \
    \     the packet being forwarded is ip.dest.  This rule discards\n           all\
    \ routes from the set of candidates except those for which\n           the most\
    \ significant route.length bits of route.dest and\n           ip.dest are equal.\n\
    \           For example, if a packet's IP Destination Address is\n           10.144.2.5\
    \ and there are network prefixes 10.144.1.0/24,\n           10.144.2.0/24, and\
    \ 10.144.3.0/24, this rule would keep only\n           10.144.2.0/24; it is the\
    \ only route whose prefix has the same\n           value as the corresponding\
    \ bits in the IP Destination Address\n           of the packet.\n      (2) Longest\
    \ Match\n           Longest Match is a refinement of Basic Match, described\n\
    \           above.  After performing Basic Match pruning, the algorithm\n    \
    \       examines the remaining routes to determine which among them\n        \
    \   have the largest route.length values.  All except these are\n           discarded.\n\
    \           For example, if a packet's IP Destination Address is\n           10.144.2.5\
    \ and there are network prefixes 10.144.2.0/24,\n           10.144.0.0/16, and\
    \ 10.0.0.0/8, then this rule would keep only\n           the first (10.144.2.0/24)\
    \ because its prefix length is\n           longest.\n      (3) Weak TOS\n    \
    \       Each route has a type of service attribute, called route.tos,\n      \
    \     whose possible values are assumed to be identical to those\n           used\
    \ in the TOS field of the IP header.  Routing protocols\n           that distribute\
    \ TOS information fill in route.tos\n           appropriately in routes they add\
    \ to the FIB; routes from\n           other routing protocols are treated as if\
    \ they have the\n           default TOS (0000).  The TOS field in the IP header\
    \ of the\n           packet being routed is called ip.tos.\n           The set\
    \ of candidate routes is examined to determine if it\n           contains any\
    \ routes for which route.tos = ip.tos.  If so, all\n           routes except those\
    \ for which route.tos = ip.tos are\n           discarded.  If not, all routes\
    \ except those for which\n           route.tos = 0000 are discarded from the set\
    \ of candidate\n           routes.\n           Additional discussion of routing\
    \ based on Weak TOS may be\n           found in [ROUTE:11].\n   DISCUSSION\n \
    \     The effect of this rule is to select only those routes that have a\n   \
    \   TOS that matches the TOS requested in the packet.  If no such\n      routes\
    \ exist then routes with the default TOS are considered.\n      Routes with a\
    \ non-default TOS that is not the TOS requested in the\n      packet are never\
    \ used, even if such routes are the only available\n      routes that go to the\
    \ packet's destination.\n     (4) Best Metric\n          Each route has a metric\
    \ attribute, called route.metric, and a\n          routing domain identifier,\
    \ called route.domain.  Each member\n          of the set of candidate routes\
    \ is compared with each other\n          member of the set.  If route.domain is\
    \ equal for the two\n          routes and route.metric is strictly inferior for\
    \ one when\n          compared with the other, then the one with the inferior\
    \ metric\n          is discarded from the set.  The determination of inferior\
    \ is\n          usually by a simple arithmetic comparison, though some\n     \
    \     protocols may have structured metrics requiring more complex\n         \
    \ comparisons.\n     (5) Vendor Policy\n          Vendor Policy is sort of a catch-all\
    \ to make up for the fact\n          that the previously listed rules are often\
    \ inadequate to\n          choose from the possible routes.  Vendor Policy pruning\
    \ rules\n          are extremely vendor-specific.  See section [5.2.4.4].\n  \
    \   This algorithm has two distinct disadvantages.  Presumably, a\n     router\
    \ implementor might develop techniques to deal with these\n     disadvantages\
    \ and make them a part of the Vendor Policy pruning\n     rule.\n     (1) IS-IS\
    \ and OSPF route classes are not directly handled.\n     (2) Path properties other\
    \ than type of service (e.g., MTU) are\n          ignored.\n     It is also worth\
    \ noting a deficiency in the way that TOS is\n     supported: routing protocols\
    \ that support TOS are implicitly\n     preferred when forwarding packets that\
    \ have non-zero TOS values.\n     The Basic Match and Longest Match pruning rules\
    \ generalize the\n     treatment of a number of particular types of routes.  These\
    \ routes\n     are selected in the following, decreasing, order of preference:\n\
    \     (1) Host Route: This is a route to a specific end system.\n     (2) Hierarchical\
    \ Network Prefix Routes: This is a route to a\n          particular network prefix.\
    \  Note that the FIB may contain\n          several routes to network prefixes\
    \ that subsume each other\n          (one prefix is the other prefix with additional\
    \ bits).  These\n          are selected in order of decreasing prefix length.\n\
    \     (5) Default Route: This is a route to all networks for which there\n   \
    \       are no explicit routes.  It is by definition the route whose\n       \
    \   prefix length is zero.\n     If, after application of the pruning rules, the\
    \ set of routes is\n     empty (i.e., no routes were found), the packet MUST be\
    \ discarded\n     and an appropriate ICMP error generated (ICMP Bad Source Route\
    \ if\n     the IP Destination Address came from a source route option;\n     otherwise,\
    \ whichever of ICMP Destination Host Unreachable or\n     Destination Network\
    \ Unreachable is appropriate, as described in\n     Section [4.3.3.1]).\n"
- title: 5.2.4.4 Administrative Preference
  contents:
  - "5.2.4.4 Administrative Preference\n     One suggested mechanism for the Vendor\
    \ Policy Pruning Rule is to\n     use administrative preference, which is a simple\
    \ prioritization\n     algorithm.  The idea is to manually prioritize the routes\
    \ that one\n     might need to select among.\n     Each route has associated with\
    \ it a preference value, based on\n     various attributes of the route (specific\
    \ mechanisms for assignment\n     of preference values are suggested below). \
    \ This preference value\n     is an integer in the range [0..255], with zero being\
    \ the most\n     preferred and 254 being the least preferred.  255 is a special\n\
    \     value that means that the route should never be used.  The first\n     step\
    \ in the Vendor Policy pruning rule discards all but the most\n     preferable\
    \ routes (and always discards routes whose preference\n     value is 255).\n \
    \    This policy is not safe in that it can easily be misused to create\n    \
    \ routing loops.  Since no protocol ensures that the preferences\n     configured\
    \ for a router is consistent with the preferences\n     configured in its neighbors,\
    \ network managers must exercise care in\n     configuring preferences.\n    \
    \ o Address Match\n        It is useful to be able to assign a single preference\
    \ value to\n        all routes (learned from the same routing domain) to any of\
    \ a\n        specified set of destinations, where the set of destinations is\n\
    \        all destinations that match a specified network prefix.\n     o Route\
    \ Class\n        For routing protocols which maintain the distinction, it is\n\
    \        useful to be able to assign a single preference value to all\n      \
    \  routes (learned from the same routing domain) which have a\n        particular\
    \ route class (intra-area, inter-area, external with\n        internal metrics,\
    \ or external with external metrics).\n     o Interface\n        It is useful\
    \ to be able to assign a single preference value to\n        all routes (learned\
    \ from a particular routing domain) that would\n        cause packets to be routed\
    \ out a particular logical interface on\n        the router (logical interfaces\
    \ generally map one-to-one onto the\n        router's network interfaces, except\
    \ that any network interface\n        that has multiple IP addresses will have\
    \ multiple logical\n        interfaces associated with it).\n     o Source router\n\
    \        It is useful to be able to assign a single preference value to\n    \
    \    all routes (learned from the same routing domain) that were\n        learned\
    \ from any of a set of routers, where the set of routers\n        are those whose\
    \ updates have a source address that match a\n        specified network prefix.\n\
    \     o Originating AS\n        For routing protocols which provide the information,\
    \ it is\n        useful to be able to assign a single preference value to all\n\
    \        routes (learned from a particular routing domain) which\n        originated\
    \ in another particular routing domain.  For BGP\n        routes, the originating\
    \ AS is the first AS listed in the route's\n        AS_PATH attribute.  For OSPF\
    \ external routes, the originating AS\n        may be considered to be the low\
    \ order 16 bits of the route's\n        external route tag if the tag's Automatic\
    \ bit is set and the\n        tag's Path Length is not equal to 3.\n     o External\
    \ route tag\n        It is useful to be able to assign a single preference value\
    \ to\n        all OSPF external routes (learned from the same routing domain)\n\
    \        whose external route tags match any of a list of specified\n        values.\
    \  Because the external route tag may contain a structured\n        value, it\
    \ may be useful to provide the ability to match\n        particular subfields\
    \ of the tag.\n     o AS path\n        It may be useful to be able to assign a\
    \ single preference value\n        to all BGP routes (learned from the same routing\
    \ domain) whose\n        AS path \"matches\" any of a set of specified values.\
    \  It is not\n        yet clear exactly what kinds of matches are most useful.\
    \  A\n        simple option would be to allow matching of all routes for which\n\
    \        a particular AS number appears (or alternatively, does not\n        appear)\
    \ anywhere in the route's AS_PATH attribute.  A more\n        general but somewhat\
    \ more difficult alternative would be to\n        allow matching all routes for\
    \ which the AS path matches a\n        specified regular expression.\n"
- title: 5.2.4.5 Load Splitting
  contents:
  - "5.2.4.5 Load Splitting\n     At the end of the Next-hop selection process, multiple\
    \ routes may\n     still remain.  A router has several options when this occurs.\
    \  It\n     may arbitrarily discard some of the routes.  It may reduce the\n \
    \    number of candidate routes by comparing metrics of routes from\n     routing\
    \ domains that are not considered equivalent.  It may retain\n     more than one\
    \ route and employ a load-splitting mechanism to divide\n     traffic among them.\
    \  Perhaps the only thing that can be said about\n     the relative merits of\
    \ the options is that load-splitting is useful\n     in some situations but not\
    \ in others, so a wise implementor who\n     implements load-splitting will also\
    \ provide a way for the network\n     manager to disable it.\n"
- title: '5.2.5 Unused IP Header Bits: RFC-791 Section 3.1'
  contents:
  - "5.2.5 Unused IP Header Bits: RFC-791 Section 3.1\n     The IP header contains\
    \ several reserved bits, in the Type of\n     Service field and in the Flags field.\
    \  Routers MUST NOT drop\n     packets merely because one or more of these reserved\
    \ bits has a\n     non-zero value.\n     Routers MUST ignore and MUST pass through\
    \ unchanged the values of\n     these reserved bits.  If a router fragments a\
    \ packet, it MUST copy\n     these bits into each fragment.\n   DISCUSSION\n \
    \     Future revisions to the IP protocol may make use of these unused\n     \
    \ bits.  These rules are intended to ensure that these revisions can\n      be\
    \ deployed without having to simultaneously upgrade all routers\n      in the\
    \ Internet.\n"
- title: '5.2.6 Fragmentation and Reassembly: RFC-791 Section 3.2'
  contents:
  - "5.2.6 Fragmentation and Reassembly: RFC-791 Section 3.2\n   As was discussed\
    \ in Section [4.2.2.7], a router MUST support IP\n   fragmentation.\n   A router\
    \ MUST NOT reassemble any datagram before forwarding it.\n   DISCUSSION\n    \
    \  A few people have suggested that there might be some topologies\n      where\
    \ reassembly of transit datagrams by routers might improve\n      performance.\
    \  The fact that fragments may take different paths to\n      the destination\
    \ precludes safe use of such a feature.\n      Nothing in this section should\
    \ be construed to control or limit\n      fragmentation or reassembly performed\
    \ as a link layer function by\n      the router.\n      Similarly, if an IP datagram\
    \ is encapsulated in another IP\n      datagram (e.g., it is tunnelled), that\
    \ datagram is in turn\n      fragmented, the fragments must be reassembled in\
    \ order to forward\n      the original datagram.  This section does not preclude\
    \ this.\n"
- title: 5.2.7 Internet Control Message Protocol - ICMP
  contents:
  - "5.2.7 Internet Control Message Protocol - ICMP\n   General requirements for ICMP\
    \ were discussed in Section [4.3].  This\n   section discusses ICMP messages that\
    \ are sent only by routers.\n"
- title: 5.2.7.1 Destination Unreachable
  contents:
  - "5.2.7.1 Destination Unreachable\n   The ICMP Destination Unreachable message\
    \ is sent by a router in\n   response to a packet which it cannot forward because\
    \ the destination\n   (or next hop) is unreachable or a service is unavailable.\
    \  Examples\n   of such cases include a message addressed to a host which is not\n\
    \   there and therefore does not respond to ARP requests, and messages\n   addressed\
    \ to network prefixes for which the router has no valid\n   route.\n   A router\
    \ MUST be able to generate ICMP Destination Unreachable\n   messages and SHOULD\
    \ choose a response code that most closely matches\n   the reason the message\
    \ is being generated.\n   The following codes are defined in [INTERNET:8] and\
    \ [INTRO:2]:\n   0 = Network Unreachable - generated by a router if a forwarding\
    \ path\n        (route) to the destination network is not available;\n   1 = Host\
    \ Unreachable - generated by a router if a forwarding path\n        (route) to\
    \ the destination host on a directly connected network\n        is not available\
    \ (does not respond to ARP);\n   2 = Protocol Unreachable - generated if the transport\
    \ protocol\n        designated in a datagram is not supported in the transport\
    \ layer\n        of the final destination;\n   3 = Port Unreachable - generated\
    \ if the designated transport protocol\n        (e.g., UDP) is unable to demultiplex\
    \ the datagram in the\n        transport layer of the final destination but has\
    \ no protocol\n        mechanism to inform the sender;\n   4 = Fragmentation Needed\
    \ and DF Set - generated if a router needs to\n        fragment a datagram but\
    \ cannot since the DF flag is set;\n   5 = Source Route Failed - generated if\
    \ a router cannot forward a\n        packet to the next hop in a source route\
    \ option;\n   6 = Destination Network Unknown - This code SHOULD NOT be generated\n\
    \        since it would imply on the part of the router that the\n        destination\
    \ network does not exist (net unreachable code 0\n        SHOULD be used in place\
    \ of code 6);\n   7 = Destination Host Unknown - generated only when a router\
    \ can\n        determine (from link layer advice) that the destination host\n\
    \        does not exist;\n   11 = Network Unreachable For Type Of Service - generated\
    \ by a router\n        if a forwarding path (route) to the destination network\
    \ with the\n        requested or default TOS is not available;\n   12 = Host Unreachable\
    \ For Type Of Service - generated if a router\n        cannot forward a packet\
    \ because its route(s) to the destination\n        do not match either the TOS\
    \ requested in the datagram or the\n        default TOS (0).\n   The following\
    \ additional codes are hereby defined:\n   13 = Communication Administratively\
    \ Prohibited - generated if a\n        router cannot forward a packet due to administrative\
    \ filtering;\n   14 = Host Precedence Violation.  Sent by the first hop router\
    \ to a\n        host to indicate that a requested precedence is not permitted\n\
    \        for the particular combination of source/destination host or\n      \
    \  network, upper layer protocol, and source/destination port;\n   15 = Precedence\
    \ cutoff in effect.  The network operators have imposed\n        a minimum level\
    \ of precedence required for operation, the\n        datagram was sent with a\
    \ precedence below this level;\n   NOTE: [INTRO:2] defined Code 8 for source host\
    \ isolated.  Routers\n   SHOULD NOT generate Code 8; whichever of Codes 0 (Network\n\
    \   Unreachable) and 1 (Host Unreachable) is appropriate SHOULD be used\n   instead.\
    \  [INTRO:2] also defined Code 9 for communication with\n   destination network\
    \ administratively prohibited and Code 10 for\n   communication with destination\
    \ host administratively prohibited.\n   These codes were intended for use by end-to-end\
    \ encryption devices\n   used by U.S military agencies.  Routers SHOULD use the\
    \ newly defined\n   Code 13 (Communication Administratively Prohibited) if they\n\
    \   administratively filter packets.\n   Routers MAY have a configuration option\
    \ that causes Code 13\n   (Communication Administratively Prohibited) messages\
    \ not to be\n   generated.  When this option is enabled, no ICMP error message\
    \ is\n   sent in response to a packet that is dropped because its forwarding\n\
    \   is administratively prohibited.\n   Similarly, routers MAY have a configuration\
    \ option that causes Code\n   14 (Host Precedence Violation) and Code 15 (Precedence\
    \ Cutoff in\n   Effect) messages not to be generated.  When this option is enabled,\n\
    \   no ICMP error message is sent in response to a packet that is dropped\n  \
    \ because of a precedence violation.\n   Routers MUST use Host Unreachable or\
    \ Destination Host Unknown codes\n   whenever other hosts on the same destination\
    \ network might be\n   reachable; otherwise, the source host may erroneously conclude\
    \ that\n   all hosts on the network are unreachable, and that may not be the\n\
    \   case.\n   [INTERNET:14] describes a slight modification the form of Destination\n\
    \   Unreachable messages containing Code 4 (Fragmentation needed and DF\n   set).\
    \  A router MUST use this modified form when originating Code 4\n   Destination\
    \ Unreachable messages.\n"
- title: 5.2.7.2 Redirect
  contents:
  - "5.2.7.2 Redirect\n   The ICMP Redirect message is generated to inform a local\
    \ host the it\n   should use a different next hop router for a certain class of\n\
    \   traffic.\n   Routers MUST NOT generate the Redirect for Network or Redirect\
    \ for\n   Network and Type of Service messages (Codes 0 and 2) specified in\n\
    \   [INTERNET:8].  Routers MUST be able to generate the Redirect for Host\n  \
    \ message (Code 1) and SHOULD be able to generate the Redirect for Type\n   of\
    \ Service and Host message (Code 3) specified in [INTERNET:8].\n   DISCUSSION\n\
    \      If the directly connected network is not subnetted (in the\n      classical\
    \ sense), a router can normally generate a network\n      Redirect that applies\
    \ to all hosts on a specified remote network.\n      Using a network rather than\
    \ a host Redirect may economize slightly\n      on network traffic and on host\
    \ routing table storage.  However,\n      the savings are not significant, and\
    \ subnets create an ambiguity\n      about the subnet mask to be used to interpret\
    \ a network Redirect.\n      In a CIDR environment, it is difficult to specify\
    \ precisely the\n      cases in which network Redirects can be used.  Therefore,\
    \ routers\n      must send only host (or host and type of service) Redirects.\n\
    \   A Code 3 (Redirect for Host and Type of Service) message is generated\n  \
    \ when the packet provoking the redirect has a destination for which\n   the path\
    \ chosen by the router would depend (in part) on the TOS\n   requested.\n   Routers\
    \ that can generate Code 3 redirects (Host and Type of Service)\n   MUST have\
    \ a configuration option (which defaults to on) to enable\n   Code 1 (Host) redirects\
    \ to be substituted for Code 3 redirects.  A\n   router MUST send a Code 1 Redirect\
    \ in place of a Code 3 Redirect if\n   it has been configured to do so.\n   If\
    \ a router is not able to generate Code 3 Redirects then it MUST\n   generate\
    \ Code 1 Redirects in situations where a Code 3 Redirect is\n   called for.\n\
    \   Routers MUST NOT generate a Redirect Message unless all the following\n  \
    \ conditions are met:\n   o The packet is being forwarded out the same physical\
    \ interface that\n      it was received from,\n   o The IP source address in the\
    \ packet is on the same Logical IP\n      (sub)network as the next-hop IP address,\
    \ and\n   o The packet does not contain an IP source route option.\n   The source\
    \ address used in the ICMP Redirect MUST belong to the same\n   logical (sub)net\
    \ as the destination address.\n   A router using a routing protocol (other than\
    \ static routes) MUST NOT\n   consider paths learned from ICMP Redirects when\
    \ forwarding a packet.\n   If a router is not using a routing protocol, a router\
    \ MAY have a\n   configuration that, if set, allows the router to consider routes\n\
    \   learned through ICMP Redirects when forwarding packets.\n   DISCUSSION\n \
    \     ICMP Redirect is a mechanism for routers to convey routing\n      information\
    \ to hosts.  Routers use other mechanisms to learn\n      routing information,\
    \ and therefore have no reason to obey\n      redirects.  Believing a redirect\
    \ which contradicted the router's\n      other information would likely create\
    \ routing loops.\n      On the other hand, when a router is not acting as a router,\
    \ it\n      MUST comply with the behavior required of a host.\n"
- title: 5.2.7.3 Time Exceeded
  contents:
  - "5.2.7.3 Time Exceeded\n   A router MUST generate a Time Exceeded message Code\
    \ 0 (In Transit)\n   when it discards a packet due to an expired TTL field.  A\
    \ router MAY\n   have a per-interface option to disable origination of these messages\n\
    \   on that interface, but that option MUST default to allowing the\n   messages\
    \ to be originated.\n"
- title: 5.2.8 INTERNET GROUP MANAGEMENT PROTOCOL - IGMP
  contents:
  - "5.2.8 INTERNET GROUP MANAGEMENT PROTOCOL - IGMP\n   IGMP [INTERNET:4] is a protocol\
    \ used between hosts and multicast\n   routers on a single physical network to\
    \ establish hosts' membership\n   in particular multicast groups.  Multicast routers\
    \ use this\n   information, in conjunction with a multicast routing protocol,\
    \ to\n   support IP multicast forwarding across the Internet.\n   A router SHOULD\
    \ implement the multicast router part of IGMP.\n"
- title: 5.3 SPECIFIC ISSUES
  contents:
  - '5.3 SPECIFIC ISSUES

    '
- title: 5.3.1 Time to Live (TTL)
  contents:
  - "5.3.1 Time to Live (TTL)\n   The Time-to-Live (TTL) field of the IP header is\
    \ defined to be a\n   timer limiting the lifetime of a datagram.  It is an 8-bit\
    \ field and\n   the units are seconds.  Each router (or other module) that handles\
    \ a\n   packet MUST decrement the TTL by at least one, even if the elapsed\n \
    \  time was much less than a second.  Since this is very often the case,\n   the\
    \ TTL is effectively a hop count limit on how far a datagram can\n   propagate\
    \ through the Internet.\n   When a router forwards a packet, it MUST reduce the\
    \ TTL by at least\n   one.  If it holds a packet for more than one second, it\
    \ MAY decrement\n   the TTL by one for each second.\n   If the TTL is reduced\
    \ to zero (or less), the packet MUST be\n   discarded, and if the destination\
    \ is not a multicast address the\n   router MUST send an ICMP Time Exceeded message,\
    \ Code 0 (TTL Exceeded\n   in Transit) message to the source.  Note that a router\
    \ MUST NOT\n   discard an IP unicast or broadcast packet with a non-zero TTL merely\n\
    \   because it can predict that another router on the path to the\n   packet's\
    \ final destination will decrement the TTL to zero.  However,\n   a router MAY\
    \ do so for IP multicasts, in order to more efficiently\n   implement IP multicast's\
    \ expanding ring search algorithm (see\n   [INTERNET:4]).\n   DISCUSSION\n   \
    \   The IP TTL is used, somewhat schizophrenically, as both a hop\n      count\
    \ limit and a time limit.  Its hop count function is critical\n      to ensuring\
    \ that routing problems can't melt down the network by\n      causing packets\
    \ to loop infinitely in the network.  The time limit\n      function is used by\
    \ transport protocols such as TCP to ensure\n      reliable data transfer.  Many\
    \ current implementations treat TTL as\n      a pure hop count, and in parts of\
    \ the Internet community there is\n      a strong sentiment that the time limit\
    \ function should instead be\n      performed by the transport protocols that\
    \ need it.\n      In this specification, we have reluctantly decided to follow\
    \ the\n      strong belief among the router vendors that the time limit\n    \
    \  function should be optional.  They argued that implementation of\n      the\
    \ time limit function is difficult enough that it is currently\n      not generally\
    \ done.  They further pointed to the lack of\n      documented cases where this\
    \ shortcut has caused TCP to corrupt\n      data (of course, we would expect the\
    \ problems created to be rare\n      and difficult to reproduce, so the lack of\
    \ documented cases\n      provides little reassurance that there haven't been\
    \ a number of\n      undocumented cases).\n      IP multicast notions such as\
    \ the expanding ring search may not\n      work as expected unless the TTL is\
    \ treated as a pure hop count.\n      The same thing is somewhat true of traceroute.\n\
    \      ICMP Time Exceeded messages are required because the traceroute\n     \
    \ diagnostic tool depends on them.\n      Thus, the tradeoff is between severely\
    \ crippling, if not\n      eliminating, two very useful tools and avoiding a very\
    \ rare and\n      transient data transport problem that may not occur at all.\
    \  We\n      have chosen to preserve the tools.\n"
- title: 5.3.2 Type of Service (TOS)
  contents:
  - "5.3.2 Type of Service (TOS)\n      The Type-of-Service byte in the IP header\
    \ is divided into three\n      sections: the Precedence field (high-order 3 bits),\
    \ a field that\n      is customarily called Type of Service or \"TOS (next 4 bits),\
    \ and a\n      reserved bit (the low order bit).  Rules governing the reserved\n\
    \      bit were described in Section [4.2.2.3].  The Precedence field\n      will\
    \ be discussed in Section [5.3.3].  A more extensive discussion\n      of the\
    \ TOS field and its use can be found in [ROUTE:11].\n      A router SHOULD consider\
    \ the TOS field in a packet's IP header\n      when deciding how to forward it.\
    \  The remainder of this section\n      describes the rules that apply to routers\
    \ that conform to this\n      requirement.\n      A router MUST maintain a TOS\
    \ value for each route in its routing\n      table.  Routes learned through a\
    \ routing protocol that does not\n      support TOS MUST be assigned a TOS of\
    \ zero (the default TOS).\n      To choose a route to a destination, a router\
    \ MUST use an algorithm\n      equivalent to the following:\n      (1) The router\
    \ locates in its routing table all available routes\n           to the destination\
    \ (see Section [5.2.4]).\n      (2) If there are none, the router drops the packet\
    \ because the\n           destination is unreachable.  See section [5.2.4].\n\
    \      (3) If one or more of those routes have a TOS that exactly matches\n  \
    \         the TOS specified in the packet, the router chooses the route\n    \
    \       with the best metric.\n      (4) Otherwise, the router repeats the above\
    \ step, except looking\n           at routes whose TOS is zero.\n      (5) If\
    \ no route was chosen above, the router drops the packet\n           because the\
    \ destination is unreachable.  The router returns\n           an ICMP Destination\
    \ Unreachable error specifying the\n           appropriate code: either Network\
    \ Unreachable with Type of\n           Service (code 11) or Host Unreachable with\
    \ Type of Service\n           (code 12).\n   DISCUSSION\n      Although TOS has\
    \ been little used in the past, its use by hosts is\n      now mandated by the\
    \ Requirements for Internet Hosts RFCs\n      ([INTRO:2] and [INTRO:3]).  Support\
    \ for TOS in routers may become\n      a MUST in the future, but is a SHOULD for\
    \ now until we get more\n      experience with it and can better judge both its\
    \ benefits and its\n      costs.\n      Various people have proposed that TOS\
    \ should affect other aspects\n      of the forwarding function.  For example:\n\
    \      (1) A router could place packets that have the Low Delay bit set\n    \
    \       ahead of other packets in its output queues.\n      (2) a router is forced\
    \ to discard packets, it could try to avoid\n           discarding those which\
    \ have the High Reliability bit set.\n      These ideas have been explored in\
    \ more detail in [INTERNET:17] but\n      we don't yet have enough experience\
    \ with such schemes to make\n      requirements in this area.\n"
- title: 5.3.3 IP Precedence
  contents:
  - "5.3.3 IP Precedence\n      This section specifies requirements and guidelines\
    \ for appropriate\n      processing of the IP Precedence field in routers.  Precedence\
    \ is a\n      scheme for allocating resources in the network based on the\n  \
    \    relative importance of different traffic flows.  The IP\n      specification\
    \ defines specific values to be used in this field for\n      various types of\
    \ traffic.\n      The basic mechanisms for precedence processing in a router are\n\
    \      preferential resource allocation, including both precedence-\n      ordered\
    \ queue service and precedence-based congestion control, and\n      selection\
    \ of Link Layer priority features.  The router also\n      selects the IP precedence\
    \ for routing, management and control\n      traffic it originates.  For a more\
    \ extensive discussion of IP\n      Precedence and its implementation see [FORWARD:6].\n\
    \      Precedence-ordered queue service, as discussed in this section,\n     \
    \ includes but is not limited to the queue for the forwarding\n      process and\
    \ queues for outgoing links.  It is intended that a\n      router supporting precedence\
    \ should also use the precedence\n      indication at whatever points in its processing\
    \ are concerned with\n      allocation of finite resources, such as packet buffers\
    \ or Link\n      Layer connections.  The set of such points is implementation-\n\
    \      dependent.\n   DISCUSSION\n      Although the Precedence field was originally\
    \ provided for use in\n      DOD systems where large traffic surges or major damage\
    \ to the\n      network are viewed as inherent threats, it has useful applications\n\
    \      for many non-military IP networks.  Although the traffic handling\n   \
    \   capacity of networks has grown greatly in recent years, the\n      traffic\
    \ generating ability of the users has also grown, and\n      network overload\
    \ conditions still occur at times.  Since IP-based\n      routing and management\
    \ protocols have become more critical to the\n      successful operation of the\
    \ Internet, overloads present two\n      additional risks to the network:\n  \
    \    (1) High delays may result in routing protocol packets being lost.\n    \
    \       This may cause the routing protocol to falsely deduce a\n           topology\
    \ change and propagate this false information to other\n           routers.  Not\
    \ only can this cause routes to oscillate, but an\n           extra processing\
    \ burden may be placed on other routers.\n      (2) High delays may interfere\
    \ with the use of network management\n           tools to analyze and perhaps\
    \ correct or relieve the problem\n           in the network that caused the overload\
    \ condition to occur.\n      Implementation and appropriate use of the Precedence\
    \ mechanism\n      alleviates both of these problems.\n"
- title: 5.3.3.1 Precedence-Ordered Queue Service
  contents:
  - "5.3.3.1 Precedence-Ordered Queue Service\n   Routers SHOULD implement precedence-ordered\
    \ queue service.\n   Precedence-ordered queue service means that when a packet\
    \ is selected\n   for output on a (logical) link, the packet of highest precedence\
    \ that\n   has been queued for that link is sent.  Routers that implement\n  \
    \ precedence-ordered queue service MUST also have a configuration\n   option to\
    \ suppress precedence-ordered queue service in the Internet\n   Layer.\n   Any\
    \ router MAY implement other policy-based throughput management\n   procedures\
    \ that result in other than strict precedence ordering, but\n   it MUST be configurable\
    \ to suppress them (i.e., use strict ordering).\n   As detailed in Section [5.3.6],\
    \ routers that implement precedence-\n   ordered queue service discard low precedence\
    \ packets before\n   discarding high precedence packets for congestion control\
    \ purposes.\n   Preemption (interruption of processing or transmission of a packet)\n\
    \   is not envisioned as a function of the Internet Layer.  Some\n   protocols\
    \ at other layers may provide preemption features.\n"
- title: 5.3.3.2 Lower Layer Precedence Mappings
  contents:
  - "5.3.3.2 Lower Layer Precedence Mappings\n   Routers that implement precedence-ordered\
    \ queuing MUST IMPLEMENT, and\n   other routers SHOULD IMPLEMENT, Lower Layer\
    \ Precedence Mapping.\n   A router that implements Lower Layer Precedence Mapping:\n\
    \   o MUST be able to map IP Precedence to Link Layer priority mechanisms\n  \
    \    for link layers that have such a feature defined.\n   o MUST have a configuration\
    \ option to select the Link Layer's default\n      priority treatment for all\
    \ IP traffic\n   o SHOULD be able to configure specific nonstandard mappings of\
    \ IP\n      precedence values to Link Layer priority values for each\n      interface.\n\
    \   DISCUSSION\n      Some research questions the workability of the priority\
    \ features\n      of some Link Layer protocols, and some networks may have faulty\n\
    \      implementations of the link layer priority mechanism.  It seems\n     \
    \ prudent to provide an escape mechanism in case such problems show\n      up\
    \ in a network.\n      On the other hand, there are proposals to use novel queuing\n\
    \      strategies to implement special services such as multimedia\n      bandwidth\
    \ reservation or low-delay service.  Special services and\n      queuing strategies\
    \ to support them are current research subjects\n      and are in the process\
    \ of standardization.\n      Implementors may wish to consider that correct link\
    \ layer mapping\n      of IP precedence is required by DOD policy for TCP/IP systems\
    \ used\n      on DOD networks.  Since these requirements are intended to\n   \
    \   encourage (but not force) the use of precedence features in the\n      hope\
    \ of providing better Internet service to all users, routers\n      supporting\
    \ precedence-ordered queue service should default to\n      maintaining strict\
    \ precedence ordering regardless of the type of\n      service requested.\n"
- title: 5.3.3.3 Precedence Handling For All Routers
  contents:
  - "5.3.3.3 Precedence Handling For All Routers\n   A router (whether or not it employs\
    \ precedence-ordered queue\n   service):\n   (1) MUST accept and process incoming\
    \ traffic of all precedence levels\n        normally, unless it has been administratively\
    \ configured to do\n        otherwise.\n   (2) MAY implement a validation filter\
    \ to administratively restrict\n        the use of precedence levels by particular\
    \ traffic sources.  If\n        provided, this filter MUST NOT filter out or cut\
    \ off the\n        following sorts of ICMP error messages: Destination Unreachable,\n\
    \        Redirect, Time Exceeded, and Parameter Problem.  If this filter\n   \
    \     is provided, the procedures required for packet filtering by\n        addresses\
    \ are required for this filter also.\n   DISCUSSION\n      Precedence filtering\
    \ should be applicable to specific\n      source/destination IP Address pairs,\
    \ specific protocols, specific\n      ports, and so on.\n   An ICMP Destination\
    \ Unreachable message with code 14 SHOULD be sent\n   when a packet is dropped\
    \ by the validation filter, unless this has\n   been suppressed by configuration\
    \ choice.\n   (3) MAY implement a cutoff function that allows the router to be\
    \ set\n        to refuse or drop traffic with precedence below a specified\n \
    \       level.  This function may be activated by management actions or\n    \
    \    by some implementation dependent heuristics, but there MUST be a\n      \
    \  configuration option to disable any heuristic mechanism that\n        operates\
    \ without human intervention.  An ICMP Destination\n        Unreachable message\
    \ with code 15 SHOULD be sent when a packet is\n        dropped by the cutoff\
    \ function, unless this has been suppressed\n        by configuration choice.\n\
    \        A router MUST NOT refuse to forward datagrams with IP precedence\n  \
    \      of 6 (Internetwork Control) or 7 (Network Control) solely due to\n    \
    \    precedence cutoff.  However, other criteria may be used in\n        conjunction\
    \ with precedence cutoff to filter high precedence\n        traffic.\n   DISCUSSION\n\
    \      Unrestricted precedence cutoff could result in an unintentional\n     \
    \ cutoff of routing and control traffic.  In the general case, host\n      traffic\
    \ should be restricted to a value of 5 (CRITIC/ECP) or\n      below; this is not\
    \ a requirement and may not be correct in certain\n      systems.\n   (4) MUST\
    \ NOT change precedence settings on packets it did not\n        originate.\n \
    \  (5) SHOULD be able to configure distinct precedence values to be used\n   \
    \     for each routing or management protocol supported (except for\n        those\
    \ protocols, such as OSPF, which specify which precedence\n        value must\
    \ be used).\n   (6) MAY be able to configure routing or management traffic precedence\n\
    \        values independently for each peer address.\n   (7) MUST respond appropriately\
    \ to Link Layer precedence-related error\n        indications where provided.\
    \  An ICMP Destination Unreachable\n        message with code 15 SHOULD be sent\
    \ when a packet is dropped\n        because a link cannot accept it due to a precedence-related\n\
    \        condition, unless this has been suppressed by configuration\n       \
    \ choice.\n   DISCUSSION\n      The precedence cutoff mechanism described in (3)\
    \ is somewhat\n      controversial.  Depending on the topological location of\
    \ the area\n      affected by the cutoff, transit traffic may be directed by routing\n\
    \      protocols into the area of the cutoff, where it will be dropped.\n    \
    \  This is only a problem if another path that is unaffected by the\n      cutoff\
    \ exists between the communicating points.  Proposed ways of\n      avoiding this\
    \ problem include providing some minimum bandwidth to\n      all precedence levels\
    \ even under overload conditions, or\n      propagating cutoff information in\
    \ routing protocols.  In the\n      absence of a widely accepted (and implemented)\
    \ solution to this\n      problem, great caution is recommended in activating\
    \ cutoff\n      mechanisms in transit networks.\n      A transport layer relay\
    \ could legitimately provide the function\n      prohibited by (4) above.  Changing\
    \ precedence levels may cause\n      subtle interactions with TCP and perhaps\
    \ other protocols; a\n      correct design is a non-trivial task.\n      The intent\
    \ of (5) and (6) (and the discussion of IP Precedence in\n      ICMP messages\
    \ in Section [4.3.2]) is that the IP precedence bits\n      should be appropriately\
    \ set, whether or not this router acts upon\n      those bits in any other way.\
    \  We expect that in the future\n      specifications for routing protocols and\
    \ network management\n      protocols will specify how the IP Precedence should\
    \ be set for\n      messages sent by those protocols.\n      The appropriate response\
    \ for (7) depends on the link layer\n      protocol in use.  Typically, the router\
    \ should stop trying to send\n      offensive traffic to that destination for\
    \ some period of time, and\n      should return an ICMP Destination Unreachable\
    \ message with code 15\n      (service not available for precedence requested)\
    \ to the traffic\n      source.  It also should not try to reestablish a preempted\
    \ Link\n      Layer connection for some time.\n"
- title: 5.3.4 Forwarding of Link Layer Broadcasts
  contents:
  - "5.3.4 Forwarding of Link Layer Broadcasts\n   The encapsulation of IP packets\
    \ in most Link Layer protocols (except\n   PPP) allows a receiver to distinguish\
    \ broadcasts and multicasts from\n   unicasts simply by examining the Link Layer\
    \ protocol headers (most\n   commonly, the Link Layer destination address).  The\
    \ rules in this\n   section that refer to Link Layer broadcasts apply only to\
    \ Link Layer\n   protocols that allow broadcasts to be distinguished; likewise,\
    \ the\n   rules that refer to Link Layer multicasts apply only to Link Layer\n\
    \   protocols that allow multicasts to be distinguished.\n   A router MUST NOT\
    \ forward any packet that the router received as a\n   Link Layer broadcast, unless\
    \ it is directed to an IP Multicast\n   address.  In this latter case, one would\
    \ presume that link layer\n   broadcast was used due to the lack of an effective\
    \ multicast service.\n   A router MUST NOT forward any packet which the router\
    \ received as a\n   Link Layer multicast unless the packet's destination address\
    \ is an IP\n   multicast address.\n   A router SHOULD silently discard a packet\
    \ that is received via a Link\n   Layer broadcast but does not specify an IP multicast\
    \ or IP broadcast\n   destination address.\n   When a router sends a packet as\
    \ a Link Layer broadcast, the IP\n   destination address MUST be a legal IP broadcast\
    \ or IP multicast\n   address.\n"
- title: 5.3.5 Forwarding of Internet Layer Broadcasts
  contents:
  - "5.3.5 Forwarding of Internet Layer Broadcasts\n   There are two major types of\
    \ IP broadcast addresses; limited\n   broadcast and directed broadcast.  In addition,\
    \ there are three\n   subtypes of directed broadcast: a broadcast directed to\
    \ a specified\n   network prefix, a broadcast directed to a specified subnetwork,\
    \ and a\n   broadcast directed to all subnets of a specified network.\n   Classification\
    \ by a router of a broadcast into one of these\n   categories depends on the broadcast\
    \ address and on the router's\n   understanding (if any) of the subnet structure\
    \ of the destination\n   network.  The same broadcast will be classified differently\
    \ by\n   different routers.\n   A limited IP broadcast address is defined to be\
    \ all-ones: { -1, -1 }\n   or 255.255.255.255.\n   A network-prefix-directed broadcast\
    \ is composed of the network prefix\n   of the IP address with a local part of\
    \ all-ones or { <Network-\n   prefix>, -1 }.  For example, a Class A net broadcast\
    \ address is\n   net.255.255.255, a Class B net broadcast address is net.net.255.255\n\
    \   and a Class C net broadcast address is net.net.net.255 where net is a\n  \
    \ byte of the network address.\n   The all-subnets-directed-broadcast is not well\
    \ defined in a CIDR\n   environment, and was deprecated in version 1 of this memo.\n\
    \   As was described in Section [4.2.3.1], a router may encounter certain\n  \
    \ non-standard IP broadcast addresses:\n   o 0.0.0.0 is an obsolete form of the\
    \ limited broadcast address\n   o { <Network-prefix>, 0 } is an obsolete form\
    \ of a network-prefix-\n      directed broadcast address.\n   As was described\
    \ in that section, packets addressed to any of these\n   addresses SHOULD be silently\
    \ discarded, but if they are not, they\n   MUST be treated according to the same\
    \ rules that apply to packets\n   addressed to the non-obsolete forms of the broadcast\
    \ addresses\n   described above.  These rules are described in the next few sections.\n"
- title: 5.3.5.1 Limited Broadcasts
  contents:
  - "5.3.5.1 Limited Broadcasts\n   Limited broadcasts MUST NOT be forwarded.  Limited\
    \ broadcasts MUST\n   NOT be discarded.  Limited broadcasts MAY be sent and SHOULD\
    \ be sent\n   instead of directed broadcasts where limited broadcasts will suffice.\n\
    \   DISCUSSION\n      Some routers contain UDP servers which function by resending\
    \ the\n      requests (as unicasts or directed broadcasts) to other servers.\n\
    \      This requirement should not be interpreted as prohibiting such\n      servers.\
    \  Note, however, that such servers can easily cause packet\n      looping if\
    \ misconfigured.  Thus, providers of such servers would\n      probably be well\
    \ advised to document their setup carefully and to\n      consider carefully the\
    \ TTL on packets that are sent.\n"
- title: 5.3.5.2 Directed Broadcasts
  contents:
  - "5.3.5.2 Directed Broadcasts\n   A router MUST classify as network-prefix-directed\
    \ broadcasts all\n   valid, directed broadcasts destined for a remote network\
    \ or an\n   attached nonsubnetted network.  Note that in view of CIDR, such\n\
    \   appear to be host addresses within the network prefix; we preclude\n   inspection\
    \ of the host part of such network prefixes.  Given a route\n   and no overriding\
    \ policy, then, a router MUST forward network-\n   prefix-directed broadcasts.\
    \  Network-Prefix-Directed broadcasts MAY\n   be sent.\n   A router MAY have an\
    \ option to disable receiving network-prefix-\n   directed broadcasts on an interface\
    \ and MUST have an option to\n   disable forwarding network-prefix-directed broadcasts.\
    \  These options\n   MUST default to permit receiving and forwarding network-prefix-\n\
    \   directed broadcasts.\n   DISCUSSION\n      There has been some debate about\
    \ forwarding or not forwarding\n      directed broadcasts.  In this memo we have\
    \ made the forwarding\n      decision depend on the router's knowledge of the\
    \ destination\n      network prefix.  Routers cannot determine that a message\
    \ is\n      unicast or directed broadcast apart from this knowledge.  The\n  \
    \    decision to forward or not forward the message is by definition\n      only\
    \ possible in the last hop router.\n"
- title: 5.3.5.3 All-subnets-directed Broadcasts
  contents:
  - "5.3.5.3 All-subnets-directed Broadcasts\n   The first version of this memo described\
    \ an algorithm for\n   distributing a directed broadcast to all the subnets of\
    \ a classical\n   network number.  This algorithm was stated to be \"broken,\"\
    \ and\n   certain failure cases were specified.\n   In a CIDR routing domain,\
    \ wherein classical IP network numbers are\n   meaningless, the concept of an\
    \ all-subnets-directed-broadcast is also\n   meaningless.  To the knowledge of\
    \ the working group, the facility was\n   never implemented or deployed, and is\
    \ now relegated to the dustbin of\n   history.\n"
- title: 5.3.5.4  Subnet-directed Broadcasts
  contents:
  - "5.3.5.4  Subnet-directed Broadcasts\n   The first version of this memo spelled\
    \ out procedures for dealing\n   with subnet-directed-broadcasts.  In a CIDR routing\
    \ domain, these are\n   indistinguishable from net-drected-broadcasts.  The two\
    \ are therefore\n   treated together in section [5.3.5.2 Directed Broadcasts],\
    \ and should\n   be viewed as network-prefix directed broadcasts.\n"
- title: 5.3.6 Congestion Control
  contents:
  - "5.3.6 Congestion Control\n   Congestion in a network is loosely defined as a\
    \ condition where\n   demand for resources (usually bandwidth or CPU time) exceeds\n\
    \   capacity.  Congestion avoidance tries to prevent demand from\n   exceeding\
    \ capacity, while congestion recovery tries to restore an\n   operative state.\
    \  It is possible for a router to contribute to both\n   of these mechanisms.\
    \  A great deal of effort has been spent studying\n   the problem.  The reader\
    \ is encouraged to read [FORWARD:2] for a\n   survey of the work.  Important papers\
    \ on the subject include\n   [FORWARD:3], [FORWARD:4], [FORWARD:5], [FORWARD:10],\
    \ [FORWARD:11],\n   [FORWARD:12], [FORWARD:13], [FORWARD:14], and [INTERNET:10],\
    \ among\n   others.\n   The amount of storage that router should have available\
    \ to handle\n   peak instantaneous demand when hosts use reasonable congestion\n\
    \   policies, such as described in [FORWARD:5], is a function of the\n   product\
    \ of the bandwidth of the link times the path delay of the\n   flows using the\
    \ link, and therefore storage should increase as this\n   Bandwidth*Delay product\
    \ increases.  The exact function relating\n   storage capacity to probability\
    \ of discard is not known.\n   When a router receives a packet beyond its storage\
    \ capacity it must\n   (by definition, not by decree) discard it or some other\
    \ packet or\n   packets.  Which packet to discard is the subject of much study\
    \ but,\n   unfortunately, little agreement so far.  The best wisdom to date\n\
    \   suggests discarding a packet from the data stream most heavily using\n   the\
    \ link.  However, a number of additional factors may be relevant,\n   including\
    \ the precedence of the traffic, active bandwidth\n   reservation, and the complexity\
    \ associated with selecting that\n   packet.\n   A router MAY discard the packet\
    \ it has just received; this is the\n   simplest but not the best policy.  Ideally,\
    \ the router should select\n   a packet from one of the sessions most heavily\
    \ abusing the link,\n   given that the applicable Quality of Service policy permits\
    \ this.  A\n   recommended policy in datagram environments using FIFO queues is\
    \ to\n   discard a packet randomly selected from the queue (see [FORWARD:5]).\n\
    \   An equivalent algorithm in routers using fair queues is to discard\n   from\
    \ the longest queue or that using the greatest virtual time (see\n   [FORWARD:13]).\
    \  A router MAY use these algorithms to determine which\n   packet to discard.\n\
    \   If a router implements a discard policy (such as Random Drop) under\n   which\
    \ it chooses a packet to discard from a pool of eligible packets:\n   o If precedence-ordered\
    \ queue service (described in Section\n      [5.3.3.1]) is implemented and enabled,\
    \ the router MUST NOT discard\n      a packet whose IP precedence is higher than\
    \ that of a packet that\n      is not discarded.\n   o A router MAY protect packets\
    \ whose IP headers request the maximize\n      reliability TOS, except where doing\
    \ so would be in violation of\n      the previous rule.\n   o A router MAY protect\
    \ fragmented IP packets, on the theory that\n      dropping a fragment of a datagram\
    \ may increase congestion by\n      causing all fragments of the datagram to be\
    \ retransmitted by the\n      source.\n   o To help prevent routing perturbations\
    \ or disruption of management\n      functions, the router MAY protect packets\
    \ used for routing\n      control, link control, or network management from being\
    \ discarded.\n      Dedicated routers (i.e., routers that are not also general\
    \ purpose\n      hosts, terminal servers, etc.) can achieve an approximation of\n\
    \      this rule by protecting packets whose source or destination is the\n  \
    \    router itself.\n   Advanced methods of congestion control include a notion\
    \ of fairness,\n   so that the 'user' that is penalized by losing a packet is\
    \ the one\n   that contributed the most to the congestion.  No matter what\n \
    \  mechanism is implemented to deal with bandwidth congestion control,\n   it\
    \ is important that the CPU effort expended be sufficiently small\n   that the\
    \ router is not driven into CPU congestion also.\n   As described in Section [4.3.3.3],\
    \ this document recommends that a\n   router SHOULD NOT send a Source Quench to\
    \ the sender of the packet\n   that it is discarding.  ICMP Source Quench is a\
    \ very weak mechanism,\n   so it is not necessary for a router to send it, and\
    \ host software\n   should not use it exclusively as an indicator of congestion.\n"
- title: 5.3.7 Martian Address Filtering
  contents:
  - "5.3.7 Martian Address Filtering\n   An IP source address is invalid if it is\
    \ a special IP address, as\n   defined in 4.2.2.11 or 5.3.7, or is not a unicast\
    \ address.\n   An IP destination address is invalid if it is among those defined\
    \ as\n   illegal destinations in 4.2.3.1, or is a Class E address (except\n  \
    \ 255.255.255.255).\n   A router SHOULD NOT forward any packet that has an invalid\
    \ IP source\n   address or a source address on network 0.  A router SHOULD NOT\n\
    \   forward, except over a loopback interface, any packet that has a\n   source\
    \ address on network 127.  A router MAY have a switch that\n   allows the network\
    \ manager to disable these checks.  If such a switch\n   is provided, it MUST\
    \ default to performing the checks.\n   A router SHOULD NOT forward any packet\
    \ that has an invalid IP\n   destination address or a destination address on network\
    \ 0.  A router\n   SHOULD NOT forward, except over a loopback interface, any packet\
    \ that\n   has a destination address on network 127.  A router MAY have a switch\n\
    \   that allows the network manager to disable these checks.  If such a\n   switch\
    \ is provided, it MUST default to performing the checks.\n   If a router discards\
    \ a packet because of these rules, it SHOULD log\n   at least the IP source address,\
    \ the IP destination address, and, if\n   the problem was with the source address,\
    \ the physical interface on\n   which the packet was received and the Link Layer\
    \ address of the host\n   or router from which the packet was received.\n"
- title: 5.3.8 Source Address Validation
  contents:
  - "5.3.8 Source Address Validation\n   A router SHOULD IMPLEMENT the ability to\
    \ filter traffic based on a\n   comparison of the source address of a packet and\
    \ the forwarding table\n   for a logical interface on which the packet was received.\
    \  If this\n   filtering is enabled, the router MUST silently discard a packet\
    \ if\n   the interface on which the packet was received is not the interface\n\
    \   on which a packet would be forwarded to reach the address contained\n   in\
    \ the source address.  In simpler terms, if a router wouldn't route\n   a packet\
    \ containing this address through a particular interface, it\n   shouldn't believe\
    \ the address if it appears as a source address in a\n   packet read from this\
    \ interface.\n   If this feature is implemented, it MUST be disabled by default.\n\
    \   DISCUSSION\n      This feature can provide useful security improvements in\
    \ some\n      situations, but can erroneously discard valid packets in\n     \
    \ situations where paths are asymmetric.\n"
- title: 5.3.9 Packet Filtering and Access Lists
  contents:
  - "5.3.9 Packet Filtering and Access Lists\n   As a means of providing security\
    \ and/or limiting traffic through\n   portions of a network a router SHOULD provide\
    \ the ability to\n   selectively forward (or filter) packets.  If this capability\
    \ is\n   provided, filtering of packets SHOULD be configurable either to\n   forward\
    \ all packets or to selectively forward them based upon the\n   source and destination\
    \ prefixes, and MAY filter on other message\n   attributes.  Each source and destination\
    \ address SHOULD allow\n   specification of an arbitrary prefix length.\n   DISCUSSION\n\
    \      This feature can provide a measure of privacy, where systems\n      outside\
    \ a boundary are not permitted to exchange certain protocols\n      with systems\
    \ inside the boundary, or are limited as to which\n      systems they may communicate\
    \ with.  It can also help prevent\n      certain classes of security breach, wherein\
    \ a system outside a\n      boundary masquerades as a system inside the boundary\
    \ and mimics a\n      session with it.\n   If supported, a router SHOULD be configurable\
    \ to allow one of an\n   o Include list - specification of a list of message definitions\
    \ to be\n      forwarded, or an\n   o Exclude list - specification of a list of\
    \ message definitions NOT\n      to be forwarded.\n   A \"message definition\"\
    , in this context, specifies the source and\n   destination network prefix, and\
    \ may include other identifying\n   information such as IP Protocol Type or TCP\
    \ port number.\n   A router MAY provide a configuration switch that allows a choice\n\
    \   between specifying an include or an exclude list, or other equivalent\n  \
    \ controls.\n   A value matching any address (e.g., a keyword any, an address\
    \ with a\n   mask of all 0's, or a network prefix whose length is zero) MUST be\n\
    \   allowed as a source and/or destination address.\n   In addition to address\
    \ pairs, the router MAY allow any combination of\n   transport and/or application\
    \ protocol and source and destination\n   ports to be specified.\n   The router\
    \ MUST allow packets to be silently discarded (i.e.,\n   discarded without an\
    \ ICMP error message being sent).\n   The router SHOULD allow an appropriate ICMP\
    \ unreachable message to be\n   sent when a packet is discarded.  The ICMP message\
    \ SHOULD specify\n   Communication Administratively Prohibited (code 13) as the\
    \ reason for\n   the destination being unreachable.\n   The router SHOULD allow\
    \ the sending of ICMP destination unreachable\n   messages (code 13) to be configured\
    \ for each combination of address\n   pairs, protocol types, and ports it allows\
    \ to be specified.\n   The router SHOULD count and SHOULD allow selective logging\
    \ of packets\n   not forwarded.\n"
- title: 5.3.10 Multicast Routing
  contents:
  - "5.3.10 Multicast Routing\n   An IP router SHOULD support forwarding of IP multicast\
    \ packets, based\n   either on static multicast routes or on routes dynamically\
    \ determined\n   by a multicast routing protocol (e.g., DVMRP [ROUTE:9]).  A router\n\
    \   that forwards IP multicast packets is called a multicast router.\n"
- title: 5.3.11 Controls on Forwarding
  contents:
  - "5.3.11 Controls on Forwarding\n   For each physical interface, a router SHOULD\
    \ have a configuration\n   option that specifies whether forwarding is enabled\
    \ on that\n   interface.  When forwarding on an interface is disabled, the router:\n\
    \   o MUST silently discard any packets which are received on that\n      interface\
    \ but are not addressed to the router\n   o MUST NOT send packets out that interface,\
    \ except for datagrams\n      originated by the router\n   o MUST NOT announce\
    \ via any routing protocols the availability of\n      paths through the interface\n\
    \   DISCUSSION\n      This feature allows the network manager to essentially turn\
    \ off an\n      interface but leaves it accessible for network management.\n \
    \     Ideally, this control would apply to logical rather than physical\n    \
    \  interfaces.  It cannot, because there is no known way for a router\n      to\
    \ determine which logical interface a packet arrived absent a\n      one-to-one\
    \ correspondence between logical and physical interfaces.\n"
- title: 5.3.12 State Changes
  contents:
  - "5.3.12 State Changes\n   During router operation, interfaces may fail or be manually\
    \ disabled,\n   or may become available for use by the router.  Similarly, forwarding\n\
    \   may be disabled for a particular interface or for the entire router\n   or\
    \ may be (re)enabled.  While such transitions are (usually)\n   uncommon, it is\
    \ important that routers handle them correctly.\n"
- title: 5.3.12.1 When a Router Ceases Forwarding
  contents:
  - "5.3.12.1 When a Router Ceases Forwarding\n   When a router ceases forwarding\
    \ it MUST stop advertising all routes,\n   except for third party routes.  It\
    \ MAY continue to receive and use\n   routes from other routers in its routing\
    \ domains.  If the forwarding\n   database is retained, the router MUST NOT cease\
    \ timing the routes in\n   the forwarding database.  If routes that have been\
    \ received from\n   other routers are remembered, the router MUST NOT cease timing\
    \ the\n   routes that it has remembered.  It MUST discard any routes whose\n \
    \  timers expire while forwarding is disabled, just as it would do if\n   forwarding\
    \ were enabled.\n   DISCUSSION\n      When a router ceases forwarding, it essentially\
    \ ceases being a\n      router.  It is still a host, and must follow all of the\n\
    \      requirements of Host Requirements [INTRO:2].  The router may still\n  \
    \    be a passive member of one or more routing domains, however.  As\n      such,\
    \ it is allowed to maintain its forwarding database by\n      listening to other\
    \ routers in its routing domain.  It may not,\n      however, advertise any of\
    \ the routes in its forwarding database,\n      since it itself is doing no forwarding.\
    \  The only exception to\n      this rule is when the router is advertising a\
    \ route that uses only\n      some other router, but which this router has been\
    \ asked to\n      advertise.\n   A router MAY send ICMP destination unreachable\
    \ (host unreachable)\n   messages to the senders of packets that it is unable\
    \ to forward.  It\n   SHOULD NOT send ICMP redirect messages.\n   DISCUSSION\n\
    \      Note that sending an ICMP destination unreachable (host\n      unreachable)\
    \ is a router action.  This message should not be sent\n      by hosts.  This\
    \ exception to the rules for hosts is allowed so\n      that packets may be rerouted\
    \ in the shortest possible time, and so\n      that black holes are avoided.\n"
- title: 5.3.12.2 When a Router Starts Forwarding
  contents:
  - "5.3.12.2 When a Router Starts Forwarding\n   When a router begins forwarding,\
    \ it SHOULD expedite the sending of\n   new routing information to all routers\
    \ with which it normally\n   exchanges routing information.\n"
- title: 5.3.12.3 When an Interface Fails or is Disabled
  contents:
  - "5.3.12.3 When an Interface Fails or is Disabled\n   If an interface fails or\
    \ is disabled a router MUST remove and stop\n   advertising all routes in its\
    \ forwarding database that make use of\n   that interface.  It MUST disable all\
    \ static routes that make use of\n   that interface.  If other routes to the same\
    \ destination and TOS are\n   learned or remembered by the router, the router\
    \ MUST choose the best\n   alternate, and add it to its forwarding database. \
    \ The router SHOULD\n   send ICMP destination unreachable or ICMP redirect messages,\
    \ as\n   appropriate, in reply to all packets that it is unable to forward due\n\
    \   to the interface being unavailable.\n"
- title: 5.3.12.4 When an Interface is Enabled
  contents:
  - "5.3.12.4 When an Interface is Enabled\n   If an interface that had not been available\
    \ becomes available, a\n   router MUST reenable any static routes that use that\
    \ interface.  If\n   routes that would use that interface are learned by the router,\
    \ then\n   these routes MUST be evaluated along with all the other learned\n \
    \  routes, and the router MUST make a decision as to which routes should\n   be\
    \ placed in the forwarding database.  The implementor is referred to\n   Chapter\
    \ [7], Application Layer - Routing Protocols for further\n   information on how\
    \ this decision is made.\n   A router SHOULD expedite the sending of new routing\
    \ information to\n   all routers with which it normally exchanges routing information.\n"
- title: 5.3.13 IP Options
  contents:
  - "5.3.13 IP Options\n   Several options, such as Record Route and Timestamp, contain\
    \ slots\n   into which a router inserts its address when forwarding the packet.\n\
    \   However, each such option has a finite number of slots, and therefore\n  \
    \ a router may find that there is not free slot into which it can\n   insert its\
    \ address.  No requirement listed below should be construed\n   as requiring a\
    \ router to insert its address into an option that has\n   no remaining slot to\
    \ insert it into.  Section [5.2.5] discusses how a\n   router must choose which\
    \ of its addresses to insert into an option.\n"
- title: 5.3.13.1 Unrecognized Options Unrecognized IP options in forwarded
  contents:
  - "5.3.13.1 Unrecognized Options Unrecognized IP options in forwarded\n   packets\
    \ MUST be passed through unchanged.\n"
- title: 5.3.13.2 Security Option
  contents:
  - "5.3.13.2 Security Option\n   Some environments require the Security option in\
    \ every packet; such a\n   requirement is outside the scope of this document and\
    \ the IP standard\n   specification.  Note, however, that the security options\
    \ described in\n   [INTERNET:1] and [INTERNET:16] are obsolete.  Routers SHOULD\n\
    \   IMPLEMENT the revised security option described in [INTERNET:5].\n   DISCUSSION\n\
    \      Routers intended for use in networks with multiple security levels\n  \
    \    should support packet filtering based on IPSO (RFC-1108) labels.\n      To\
    \ implement this support, the router would need to permit the\n      router administrator\
    \ to configure both a lower sensitivity limit\n      (e.g. Unclassified) and an\
    \ upper sensitivity limit (e.g. Secret)\n      on each interface.  It is commonly\
    \ but not always the case that\n      the two limits are the same (e.g. a single-level\
    \ interface).\n      Packets caught by an IPSO filter as being out of range should\
    \ be\n      silently dropped and a counter should note the number of packets\n\
    \      dropped because of out of range IPSO labels.\n"
- title: 5.3.13.3 Stream Identifier Option
  contents:
  - "5.3.13.3 Stream Identifier Option\n   This option is obsolete.  If the Stream\
    \ Identifier option is present\n   in a packet forwarded by the router, the option\
    \ MUST be ignored and\n   passed through unchanged.\n"
- title: 5.3.13.4 Source Route Options
  contents:
  - "5.3.13.4 Source Route Options\n   A router MUST implement support for source\
    \ route options in forwarded\n   packets.  A router MAY implement a configuration\
    \ option that, when\n   enabled, causes all source-routed packets to be discarded.\
    \  However,\n   such an option MUST NOT be enabled by default.\n   DISCUSSION\n\
    \      The ability to source route datagrams through the Internet is\n      important\
    \ to various network diagnostic tools.  However, source\n      routing may be\
    \ used to bypass administrative and security controls\n      within a network.\
    \  Specifically, those cases where manipulation of\n      routing tables is used\
    \ to provide administrative separation in\n      lieu of other methods such as\
    \ packet filtering may be vulnerable\n      through source routed packets.\n \
    \  EDITORS+COMMENTS\n      Packet filtering can be defeated by source routing\
    \ as well, if it\n      is applied in any router except one on the final leg of\
    \ the source\n      routed path.  Neither route nor packet filters constitute\
    \ a\n      complete solution for security.\n"
- title: 5.3.13.5 Record Route Option
  contents:
  - "5.3.13.5 Record Route Option\n   Routers MUST support the Record Route option\
    \ in forwarded packets.\n   A router MAY provide a configuration option that,\
    \ if enabled, will\n   cause the router to ignore (i.e., pass through unchanged)\
    \ Record\n   Route options in forwarded packets.  If provided, such an option\
    \ MUST\n   default to enabling the record-route.  This option should not affect\n\
    \   the processing of Record Route options in datagrams received by the\n   router\
    \ itself (in particular, Record Route options in ICMP echo\n   requests will still\
    \ be processed according to Section [4.3.3.6]).\n   DISCUSSION\n      There are\
    \ some people who believe that Record Route is a security\n      problem because\
    \ it discloses information about the topology of the\n      network.  Thus, this\
    \ document allows it to be disabled.\n"
- title: 5.3.13.6 Timestamp Option
  contents:
  - "5.3.13.6 Timestamp Option\n   Routers MUST support the timestamp option in forwarded\
    \ packets.  A\n   timestamp value MUST follow the rules given [INTRO:2].\n   If\
    \ the flags field = 3 (timestamp and prespecified address), the\n   router MUST\
    \ add its timestamp if the next prespecified address\n   matches any of the router's\
    \ IP addresses.  It is not necessary that\n   the prespecified address be either\
    \ the address of the interface on\n   which the packet arrived or the address\
    \ of the interface over which\n   it will be sent.\n   IMPLEMENTATION\n      To\
    \ maximize the utility of the timestamps contained in the\n      timestamp option,\
    \ it is suggested that the timestamp inserted be,\n      as nearly as practical,\
    \ the time at which the packet arrived at\n      the router.  For datagrams originated\
    \ by the router, the timestamp\n      inserted should be, as nearly as practical,\
    \ the time at which the\n      datagram was passed to the network layer for transmission.\n\
    \   A router MAY provide a configuration option which, if enabled, will\n   cause\
    \ the router to ignore (i.e., pass through unchanged) Timestamp\n   options in\
    \ forwarded datagrams when the flag word is set to zero\n   (timestamps only)\
    \ or one (timestamp and registering IP address).  If\n   provided, such an option\
    \ MUST default to off (that is, the router\n   does not ignore the timestamp).\
    \  This option should not affect the\n   processing of Timestamp options in datagrams\
    \ received by the router\n   itself (in particular, a router will insert timestamps\
    \ into Timestamp\n   options in datagrams received by the router, and Timestamp\
    \ options in\n   ICMP echo requests will still be processed according to Section\n\
    \   [4.3.3.6]).\n   DISCUSSION\n      Like the Record Route option, the Timestamp\
    \ option can reveal\n      information about a network's topology.  Some people\
    \ consider this\n      to be a security concern.\n"
- title: 6. TRANSPORT LAYER
  contents:
  - "6. TRANSPORT LAYER\n   A router is not required to implement any Transport Layer\
    \ protocols\n   except those required to support Application Layer protocols\n\
    \   supported by the router.  In practice, this means that most routers\n   implement\
    \ both the Transmission Control Protocol (TCP) and the User\n   Datagram Protocol\
    \ (UDP).\n"
- title: 6.1 USER DATAGRAM PROTOCOL - UDP
  contents:
  - "6.1 USER DATAGRAM PROTOCOL - UDP\n   The User Datagram Protocol (UDP) is specified\
    \ in [TRANS:1].\n   A router that implements UDP MUST be compliant, and SHOULD\
    \ be\n   unconditionally compliant, with the requirements of [INTRO:2], except\n\
    \   that:\n   o This specification does not specify the interfaces between the\n\
    \      various protocol layers.  Thus, a router's interfaces need not\n      comply\
    \ with [INTRO:2], except where compliance is required for\n      proper functioning\
    \ of Application Layer protocols supported by the\n      router.\n   o Contrary\
    \ to [INTRO:2], an application SHOULD NOT disable generation\n      of UDP checksums.\n\
    \   DISCUSSION\n      Although a particular application protocol may require that\
    \ UDP\n      datagrams it receives must contain a UDP checksum, there is no\n\
    \      general requirement that received UDP datagrams contain UDP\n      checksums.\
    \  Of course, if a UDP checksum is present in a received\n      datagram, the\
    \ checksum must be verified and the datagram discarded\n      if the checksum\
    \ is incorrect.\n"
- title: 6.2 TRANSMISSION CONTROL PROTOCOL - TCP
  contents:
  - "6.2 TRANSMISSION CONTROL PROTOCOL - TCP\n   The Transmission Control Protocol\
    \ (TCP) is specified in [TRANS:2].\n   A router that implements TCP MUST be compliant,\
    \ and SHOULD be\n   unconditionally compliant, with the requirements of [INTRO:2],\
    \ except\n   that:\n   o This specification does not specify the interfaces between\
    \ the\n      various protocol layers.  Thus, a router need not comply with the\n\
    \      following requirements of [INTRO:2] (except of course where\n      compliance\
    \ is required for proper functioning of Application Layer\n      protocols supported\
    \ by the router):\n      Use of Push: RFC-793 Section 2.8:\n           Passing\
    \ a received PSH flag to the application layer is now\n           OPTIONAL.\n\
    \      Urgent Pointer: RFC-793 Section 3.1:\n           A TCP MUST inform the\
    \ application layer asynchronously\n           whenever it receives an Urgent\
    \ pointer and there was\n           previously no pending urgent data, or whenever\
    \ the Urgent\n           pointer advances in the data stream.  There MUST be a\
    \ way for\n           the application to learn how much urgent data remains to\
    \ be\n           read from the connection, or at least to determine whether or\n\
    \           not more urgent data remains to be read.\n      TCP Connection Failures:\n\
    \           An application MUST be able to set the value for R2 for a\n      \
    \     particular connection.  For example, an interactive\n           application\
    \ might set R2 to ``infinity,'' giving the user\n           control over when\
    \ to disconnect.\n      TCP Multihoming:\n           If an application on a multihomed\
    \ host does not specify the\n           local IP address when actively opening\
    \ a TCP connection, then\n           the TCP MUST ask the IP layer to select a\
    \ local IP address\n           before sending the (first) SYN.  See the function\n\
    \           GET_SRCADDR() in Section 3.4.\n      IP Options:\n           An application\
    \ MUST be able to specify a source route when it\n           actively opens a\
    \ TCP connection, and this MUST take\n           precedence over a source route\
    \ received in a datagram.\n   o For similar reasons, a router need not comply\
    \ with any of the\n      requirements of [INTRO:2].\n   o The requirements concerning\
    \ the Maximum Segment Size Option in\n      [INTRO:2] are amended as follows:\
    \ a router that implements the\n      host portion of MTU discovery (discussed\
    \ in Section [4.2.3.3] of\n      this memo) uses 536 as the default value of SendMSS\
    \ only if the\n      path MTU is unknown; if the path MTU is known, the default\
    \ value\n      for SendMSS is the path MTU - 40.\n   o The requirements concerning\
    \ the Maximum Segment Size Option in\n      [INTRO:2] are amended as follows:\
    \ ICMP Destination Unreachable\n      codes 11 and 12 are additional soft error\
    \ conditions.  Therefore,\n      these message MUST NOT cause TCP to abort a connection.\n\
    \   DISCUSSION\n      It should particularly be noted that a TCP implementation\
    \ in a\n      router must conform to the following requirements of [INTRO:2]:\n\
    \      o Providing a configurable TTL.  [Time to Live: RFC-793 Section\n     \
    \    3.9]\n      o Providing an interface to configure keep-alive behavior, if\n\
    \         keep-alives are used at all.  [TCP Keep-Alives]\n      o Providing an\
    \ error reporting mechanism, and the ability to\n         manage it.  [Asynchronous\
    \ Reports]\n      o Specifying type of service.  [Type-of-Service]\n      The\
    \ general paradigm applied is that if a particular interface is\n      visible\
    \ outside the router, then all requirements for the\n      interface must be followed.\
    \  For example, if a router provides a\n      telnet function, then it will be\
    \ generating traffic, likely to be\n      routed in the external networks.  Therefore,\
    \ it must be able to\n      set the type of service correctly or else the telnet\
    \ traffic may\n      not get through.\n"
- title: 7. APPLICATION LAYER - ROUTING PROTOCOLS
  contents:
  - '7. APPLICATION LAYER - ROUTING PROTOCOLS

    '
- title: 7.1 INTRODUCTION
  contents:
  - "7.1 INTRODUCTION\n   For technical, managerial, and sometimes political reasons,\
    \ the\n   Internet routing system consists of two components - interior routing\n\
    \   and exterior routing.  The concept of an Autonomous System (AS), as\n   define\
    \ in Section 2.2.4 of this document, plays a key role in\n   separating interior\
    \ from an exterior routing, as this concept allows\n   to deliniate the set of\
    \ routers where a change from interior to\n   exterior routing occurs.  An IP\
    \ datagram may have to traverse the\n   routers of two or more Autonomous Systems\
    \ to reach its destination,\n   and the Autonomous Systems must provide each other\
    \ with topology\n   information to allow such forwarding.  Interior gateway protocols\n\
    \   (IGPs) are used to distribute routing information within an AS (i.e.,\n  \
    \ intra-AS routing).  Exterior gateway protocols are used to exchange\n   routing\
    \ information among ASs (i.e., inter-AS routing).\n"
- title: 7.1.1 Routing Security Considerations
  contents:
  - "7.1.1 Routing Security Considerations\n   Routing is one of the few places where\
    \ the Robustness Principle (be\n   liberal in what you accept) does not apply.\
    \  Routers should be\n   relatively suspicious in accepting routing data from\
    \ other routing\n   systems.\n   A router SHOULD provide the ability to rank routing\
    \ information\n   sources from most trustworthy to least trustworthy and to accept\n\
    \   routing information about any particular destination from the most\n   trustworthy\
    \ sources first.  This was implicit in the original\n   core/stub autonomous system\
    \ routing model using EGP and various\n   interior routing protocols.  It is even\
    \ more important with the\n   demise of a central, trusted core.\n   A router\
    \ SHOULD provide a mechanism to filter out obviously invalid\n   routes (such\
    \ as those for net 127).\n   Routers MUST NOT by default redistribute routing\
    \ data they do not\n   themselves use, trust or otherwise consider valid.  In\
    \ rare cases, it\n   may be necessary to redistribute suspicious information,\
    \ but this\n   should only happen under direct intercession by some human agency.\n\
    \   Routers must be at least a little paranoid about accepting routing\n   data\
    \ from anyone, and must be especially careful when they distribute\n   routing\
    \ information provided to them by another party.  See below for\n   specific guidelines.\n"
- title: 7.1.2 Precedence
  contents:
  - "7.1.2 Precedence\n   Except where the specification for a particular routing\
    \ protocol\n   specifies otherwise, a router SHOULD set the IP Precedence value\
    \ for\n   IP datagrams carrying routing traffic it originates to 6\n   (INTERNETWORK\
    \ CONTROL).\n   DISCUSSION\n      Routing traffic with VERY FEW exceptions should\
    \ be the highest\n      precedence traffic on any network.  If a system's routing\
    \ traffic\n      can't get through, chances are nothing else will.\n"
- title: 7.1.3 Message Validation
  contents:
  - "7.1.3 Message Validation\n   Peer-to-peer authentication involves several tests.\
    \  The application\n   of message passwords and explicit acceptable neighbor lists\
    \ has in\n   the past improved the robustness of the route database.  Routers\n\
    \   SHOULD IMPLEMENT management controls that enable explicit listing of\n   valid\
    \ routing neighbors.  Routers SHOULD IMPLEMENT peer-to-peer\n   authentication\
    \ for those routing protocols that support them.\n   Routers SHOULD validate routing\
    \ neighbors based on their source\n   address and the interface a message is received\
    \ on; neighbors in a\n   directly attached subnet SHOULD be restricted to communicate\
    \ with the\n   router via the interface that subnet is posited on or via unnumbered\n\
    \   interfaces.  Messages received on other interfaces SHOULD be silently\n  \
    \ discarded.\n   DISCUSSION\n      Security breaches and numerous routing problems\
    \ are avoided by\n      this basic testing.\n"
- title: 7.2 INTERIOR GATEWAY PROTOCOLS
  contents:
  - '7.2 INTERIOR GATEWAY PROTOCOLS

    '
- title: 7.2.1 INTRODUCTION
  contents:
  - "7.2.1 INTRODUCTION\n   An Interior Gateway Protocol (IGP) is used to distribute\
    \ routing\n   information between the various routers in a particular AS.\n  \
    \ Independent of the algorithm used to implement a particular IGP, it\n   should\
    \ perform the following functions:\n   (1) Respond quickly to changes in the internal\
    \ topology of an AS\n   (2) Provide a mechanism such that circuit flapping does\
    \ not cause\n        continuous routing updates\n   (3) Provide quick convergence\
    \ to loop-free routing\n   (4) Utilize minimal bandwidth\n   (5) Provide equal\
    \ cost routes to enable load-splitting\n   (6) Provide a means for authentication\
    \ of routing updates\n   Current IGPs used in the internet today are characterized\
    \ as either\n   being based on a distance-vector or a link-state algorithm.\n\
    \   Several IGPs are detailed in this section, including those most\n   commonly\
    \ used and some recently developed protocols that may be\n   widely used in the\
    \ future.  Numerous other protocols intended for use\n   in intra-AS routing exist\
    \ in the Internet community.\n   A router that implements any routing protocol\
    \ (other than static\n   routes) MUST IMPLEMENT OSPF (see Section [7.2.2]).  A\
    \ router MAY\n   implement additional IGPs.\n"
- title: 7.2.2 OPEN SHORTEST PATH FIRST - OSPF
  contents:
  - "7.2.2 OPEN SHORTEST PATH FIRST - OSPF\n   Shortest Path First (SPF) based routing\
    \ protocols are a class of\n   link-state algorithms that are based on the shortest-path\
    \ algorithm\n   of Dijkstra.  Although SPF based algorithms have been around since\n\
    \   the inception of the ARPANET, it is only recently that they have\n   achieved\
    \ popularity both inside both the IP and the OSI communities.\n   In an SPF based\
    \ system, each router obtains the entire topology\n   database through a process\
    \ known as flooding.  Flooding insures a\n   reliable transfer of the information.\
    \  Each router then runs the SPF\n   algorithm on its database to build the IP\
    \ routing table.  The OSPF\n   routing protocol is an implementation of an SPF\
    \ algorithm.  The\n   current version, OSPF version 2, is specified in [ROUTE:1].\
    \  Note\n   that RFC-1131, which describes OSPF version 1, is obsolete.\n   Note\
    \ that to comply with Section [8.3] of this memo, a router that\n   implements\
    \ OSPF MUST implement the OSPF MIB [MGT:14].\n"
- title: 7.2.3 INTERMEDIATE SYSTEM TO INTERMEDIATE SYSTEM - DUAL IS-IS
  contents:
  - "7.2.3 INTERMEDIATE SYSTEM TO INTERMEDIATE SYSTEM - DUAL IS-IS\n   The American\
    \ National Standards Institute (ANSI) X3S3.3 committee has\n   defined an intra-domain\
    \ routing protocol.  This protocol is titled\n   Intermediate System to Intermediate\
    \ System Routeing Exchange\n   Protocol.\n   Its application to an IP network\
    \ has been defined in [ROUTE:2], and\n   is referred to as Dual IS-IS (or sometimes\
    \ as Integrated IS-IS).\n   IS-IS is based on a link-state (SPF) routing algorithm\
    \ and shares all\n   the advantages for this class of protocols.\n"
- title: 7.3  EXTERIOR GATEWAY PROTOCOLS
  contents:
  - '7.3  EXTERIOR GATEWAY PROTOCOLS

    '
- title: 7.3.1  INTRODUCTION
  contents:
  - "7.3.1  INTRODUCTION\n   Exterior Gateway Protocols are utilized for inter-Autonomous\
    \ System\n   routing to exchange reachability information for a set of networks\n\
    \   internal to a particular autonomous system to a neighboring\n   autonomous\
    \ system.\n   The area of inter-AS routing is a current topic of research inside\n\
    \   the Internet Engineering Task Force.  The Exterior Gateway Protocol\n   (EGP)\
    \ described in Section [Appendix F.1] has traditionally been the\n   inter-AS\
    \ protocol of choice, but is now historical.  The Border\n   Gateway Protocol\
    \ (BGP) eliminates many of the restrictions and\n   limitations of EGP, and is\
    \ therefore growing rapidly in popularity.\n   A router is not required to implement\
    \ any inter-AS routing protocol.\n   However, if a router does implement EGP it\
    \ also MUST IMPLEMENT BGP.\n   Although it was not designed as an exterior gateway\
    \ protocol, RIP\n   (described in Section [7.2.4]) is sometimes used for inter-AS\n\
    \   routing.\n"
- title: 7.3.2 BORDER GATEWAY PROTOCOL - BGP
  contents:
  - '7.3.2 BORDER GATEWAY PROTOCOL - BGP

    '
- title: 7.3.2.1 Introduction
  contents:
  - "7.3.2.1 Introduction\n   The Border Gateway Protocol (BGP-4) is an inter-AS routing\
    \ protocol\n   that exchanges network reachability information with other BGP\n\
    \   speakers.  The information for a network includes the complete list\n   of\
    \ ASs that traffic must transit to reach that network.  This\n   information can\
    \ then be used to insure loop-free paths.  This\n   information is sufficient\
    \ to construct a graph of AS connectivity\n   from which routing loops may be\
    \ pruned and some policy decisions at\n   the AS level may be enforced.\n   BGP\
    \ is defined by [ROUTE:4].  [ROUTE:5] specifies the proper usage of\n   BGP in\
    \ the Internet, and provides some useful implementation hints\n   and guidelines.\
    \  [ROUTE:12] and [ROUTE:13] provide additional useful\n   information.\n   To\
    \ comply with Section [8.3] of this memo, a router that implements\n   BGP is\
    \ required to implement the BGP MIB [MGT:15].\n   To characterize the set of policy\
    \ decisions that can be enforced\n   using BGP, one must focus on the rule that\
    \ an AS advertises to its\n   neighbor ASs only those routes that it itself uses.\
    \  This rule\n   reflects the hop-by-hop routing paradigm generally used throughout\n\
    \   the current Internet.  Note that some policies cannot be supported by\n  \
    \ the hop-by-hop routing paradigm and thus require techniques such as\n   source\
    \ routing to enforce.  For example, BGP does not enable one AS\n   to send traffic\
    \ to a neighbor AS intending that traffic take a\n   different route from that\
    \ taken by traffic originating in the\n   neighbor AS.  On the other hand, BGP\
    \ can support any policy\n   conforming to the hop-by-hop routing paradigm.\n\
    \   Implementors of BGP are strongly encouraged to follow the\n   recommendations\
    \ outlined in Section 6 of [ROUTE:5].\n"
- title: 7.3.2.2 Protocol Walk-through
  contents:
  - "7.3.2.2 Protocol Walk-through\n   While BGP provides support for quite complex\
    \ routing policies (as an\n   example see Section 4.2 in [ROUTE:5]), it is not\
    \ required for all BGP\n   implementors to support such policies.  At a minimum,\
    \ however, a BGP\n   implementation:\n   (1) SHOULD allow an AS to control announcements\
    \ of the BGP learned\n        routes to adjacent AS's.  Implementations SHOULD\
    \ support such\n        control with at least the granularity of a single network.\n\
    \        Implementations SHOULD also support such control with the\n        granularity\
    \ of an autonomous system, where the autonomous system\n        may be either\
    \ the autonomous system that originated the route,\n        or the autonomous\
    \ system that advertised the route to the local\n        system (adjacent autonomous\
    \ system).\n   (2) SHOULD allow an AS to prefer a particular path to a destination\n\
    \        (when more than one path is available).  Such function SHOULD be\n  \
    \      implemented by allowing system administrator to assign weights\n      \
    \  to Autonomous Systems, and making route selection process to\n        select\
    \ a route with the lowest weight (where weight of a route\n        is defined\
    \ as a sum of weights of all AS's in the AS_PATH path\n        attribute associated\
    \ with that route).\n   (3) SHOULD allow an AS to ignore routes with certain AS's\
    \ in the\n        AS_PATH path attribute.  Such function can be implemented by\n\
    \        using technique outlined in (2), and by assigning infinity as\n     \
    \   weights for such AS's.  The route selection process must ignore\n        routes\
    \ that have weight equal to infinity.\n"
- title: 7.3.3 INTER-AS ROUTING WITHOUT AN EXTERIOR PROTOCOL
  contents:
  - "7.3.3 INTER-AS ROUTING WITHOUT AN EXTERIOR PROTOCOL\n   It is possible to exchange\
    \ routing information between two autonomous\n   systems or routing domains without\
    \ using a standard exterior routing\n   protocol between two separate, standard\
    \ interior routing protocols.\n   The most common way of doing this is to run\
    \ both interior protocols\n   independently in one of the border routers with\
    \ an exchange of route\n   information between the two processes.\n   As with\
    \ the exchange of information from an EGP to an IGP, without\n   appropriate controls\
    \ these exchanges of routing information between\n   two IGPs in a single router\
    \ are subject to creation of routing loops.\n"
- title: 7.4 STATIC ROUTING
  contents:
  - "7.4 STATIC ROUTING\n   Static routing provides a means of explicitly defining\
    \ the next hop\n   from a router for a particular destination.  A router SHOULD\
    \ provide\n   a means for defining a static route to a destination, where the\n\
    \   destination is defined by a network prefix.  The mechanism SHOULD\n   also\
    \ allow for a metric to be specified for each static route.\n   A router that\
    \ supports a dynamic routing protocol MUST allow static\n   routes to be defined\
    \ with any metric valid for the routing protocol\n   used.  The router MUST provide\
    \ the ability for the user to specify a\n   list of static routes that may or\
    \ may not be propagated through the\n   routing protocol.  In addition, a router\
    \ SHOULD support the following\n   additional information if it supports a routing\
    \ protocol that could\n   make use of the information.  They are:\n   o TOS,\n\
    \   o Subnet Mask, or\n   o Prefix Length, or\n   o A metric specific to a given\
    \ routing protocol that can import the\n      route.\n   DISCUSSION\n      We\
    \ intend that one needs to support only the things useful to the\n      given\
    \ routing protocol.  The need for TOS should not require the\n      vendor to\
    \ implement the other parts if they are not used.\n      Whether a router prefers\
    \ a static route over a dynamic route (or\n      vice versa) or whether the associated\
    \ metrics are used to choose\n      between conflicting static and dynamic routes\
    \ SHOULD be\n      configurable for each static route.\n      A router MUST allow\
    \ a metric to be assigned to a static route for\n      each routing domain that\
    \ it supports.  Each such metric MUST be\n      explicitly assigned to a specific\
    \ routing domain.  For example:\n           route 10.0.0.0/8 via 192.0.2.3 rip\
    \ metric 3\n           route 10.21.0.0/16 via 192.0.2.4 ospf inter-area metric\
    \ 27\n           route 10.22.0.0/16 via 192.0.2.5 egp 123 metric 99\n   DISCUSSION\n\
    \      It has been suggested that, ideally, static routes should have\n      preference\
    \ values rather than metrics (since metrics can only be\n      compared with metrics\
    \ of other routes in the same routing domain,\n      the metric of a static route\
    \ could only be compared with metrics\n      of other static routes).  This is\
    \ contrary to some current\n      implementations, where static routes really\
    \ do have metrics, and\n      those metrics are used to determine whether a particular\
    \ dynamic\n      route overrides the static route to the same destination.  Thus,\n\
    \      this document uses the term metric rather than preference.\n      This\
    \ technique essentially makes the static route into a RIP\n      route, or an\
    \ OSPF route (or whatever, depending on the domain of\n      the metric).  Thus,\
    \ the route lookup algorithm of that domain\n      applies.  However, this is\
    \ NOT route leaking, in that coercing a\n      static route into a dynamic routing\
    \ domain does not authorize the\n      router to redistribute the route into the\
    \ dynamic routing domain.\n      For static routes not put into a specific routing\
    \ domain, the\n      route lookup algorithm is:\n      (1) Basic match\n     \
    \ (2) Longest match\n      (3) Weak TOS (if TOS supported)\n      (4) Best metric\
    \ (where metric are implementation-defined)\n      The last step may not be necessary,\
    \ but it's useful in the case\n      where you want to have a primary static route\
    \ over one interface\n      and a secondary static route over an alternate interface,\
    \ with\n      failover to the alternate path if the interface for the primary\n\
    \      route fails.\n"
- title: 7.5 FILTERING OF ROUTING INFORMATION
  contents:
  - "7.5 FILTERING OF ROUTING INFORMATION\n   Each router within a network makes forwarding\
    \ decisions based upon\n   information contained within its forwarding database.\
    \  In a simple\n   network the contents of the database may be configured statically.\n\
    \   As the network grows more complex, the need for dynamic updating of\n   the\
    \ forwarding database becomes critical to the efficient operation\n   of the network.\n\
    \   If the data flow through a network is to be as efficient as possible,\n  \
    \ it is necessary to provide a mechanism for controlling the\n   propagation of\
    \ the information a router uses to build its forwarding\n   database.  This control\
    \ takes the form of choosing which sources of\n   routing information should be\
    \ trusted and selecting which pieces of\n   the information to believe.  The resulting\
    \ forwarding database is a\n   filtered version of the available routing information.\n\
    \   In addition to efficiency, controlling the propagation of routing\n   information\
    \ can reduce instability by preventing the spread of\n   incorrect or bad routing\
    \ information.\n   In some cases local policy may require that complete routing\n\
    \   information not be widely propagated.\n   These filtering requirements apply\
    \ only to non-SPF-based protocols\n   (and therefore not at all to routers which\
    \ don't implement any\n   distance vector protocols).\n"
- title: 7.5.1 Route Validation
  contents:
  - "7.5.1 Route Validation\n   A router SHOULD log as an error any routing update\
    \ advertising a\n   route that violates the specifications of this memo, unless\
    \ the\n   routing protocol from which the update was received uses those values\n\
    \   to encode special routes (such as default routes).\n"
- title: 7.5.2 Basic Route Filtering
  contents:
  - "7.5.2 Basic Route Filtering\n   Filtering of routing information allows control\
    \ of paths used by a\n   router to forward packets it receives.  A router should\
    \ be selective\n   in which sources of routing information it listens to and what\
    \ routes\n   it believes.  Therefore, a router MUST provide the ability to\n \
    \  specify:\n   o On which logical interfaces routing information will be accepted\n\
    \      and which routes will be accepted from each logical interface.\n   o Whether\
    \ all routes or only a default route is advertised on a\n      logical interface.\n\
    \   Some routing protocols do not recognize logical interfaces as a\n   source\
    \ of routing information.  In such cases the router MUST provide\n   the ability\
    \ to specify\n   o from which other routers routing information will be accepted.\n\
    \   For example, assume a router connecting one or more leaf networks to\n   the\
    \ main portion or backbone of a larger network.  Since each of the\n   leaf networks\
    \ has only one path in and out, the router can simply\n   send a default route\
    \ to them.  It advertises the leaf networks to the\n   main network.\n"
- title: 7.5.3 Advanced Route Filtering
  contents:
  - "7.5.3 Advanced Route Filtering\n   As the topology of a network grows more complex,\
    \ the need for more\n   complex route filtering arises.  Therefore, a router SHOULD\
    \ provide\n   the ability to specify independently for each routing protocol:\n\
    \   o Which logical interfaces or routers routing information (routes)\n     \
    \ will be accepted from and which routes will be believed from each\n      other\
    \ router or logical interface,\n   o Which routes will be sent via which logical\
    \ interface(s), and\n   o Which routers routing information will be sent to, if\
    \ this is\n      supported by the routing protocol in use.\n   In many situations\
    \ it is desirable to assign a reliability ordering\n   to routing information\
    \ received from another router instead of the\n   simple believe or don't believe\
    \ choice listed in the first bullet\n   above.  A router MAY provide the ability\
    \ to specify:\n   o A reliability or preference to be assigned to each route received.\n\
    \      A route with higher reliability will be chosen over one with lower\n  \
    \    reliability regardless of the routing metric associated with each\n     \
    \ route.\n   If a router supports assignment of preferences, the router MUST NOT\n\
    \   propagate any routes it does not prefer as first party information.\n   If\
    \ the routing protocol being used to propagate the routes does not\n   support\
    \ distinguishing between first and third party information, the\n   router MUST\
    \ NOT propagate any routes it does not prefer.\n   DISCUSSION\n      For example,\
    \ assume a router receives a route to network C from\n      router R and a route\
    \ to the same network from router S.  If router\n      R is considered more reliable\
    \ than router S traffic destined for\n      network C will be forwarded to router\
    \ R regardless of the route\n      received from router S.\n   Routing information\
    \ for routes which the router does not use (router\n   S in the above example)\
    \ MUST NOT be passed to any other router.\n"
- title: 7.6 INTER-ROUTING-PROTOCOL INFORMATION EXCHANGE
  contents:
  - "7.6 INTER-ROUTING-PROTOCOL INFORMATION EXCHANGE\n   Routers MUST be able to exchange\
    \ routing information between separate\n   IP interior routing protocols, if independent\
    \ IP routing processes\n   can run in the same router.  Routers MUST provide some\
    \ mechanism for\n   avoiding routing loops when routers are configured for bi-directional\n\
    \   exchange of routing information between two separate interior routing\n  \
    \ processes.  Routers MUST provide some priority mechanism for choosing\n   routes\
    \ from independent routing processes.  Routers SHOULD provide\n   administrative\
    \ control of IGP-IGP exchange when used across\n   administrative boundaries.\n\
    \   Routers SHOULD provide some mechanism for translating or transforming\n  \
    \ metrics on a per network basis.  Routers (or routing protocols) MAY\n   allow\
    \ for global preference of exterior routes imported into an IGP.\n   DISCUSSION\n\
    \      Different IGPs use different metrics, requiring some translation\n    \
    \  technique when introducing information from one protocol into\n      another\
    \ protocol with a different form of metric.  Some IGPs can\n      run multiple\
    \ instances within the same router or set of routers.\n      In this case metric\
    \ information can be preserved exactly or\n      translated.\n      There are\
    \ at least two techniques for translation between\n      different routing processes.\
    \  The static (or reachability)\n      approach uses the existence of a route\
    \ advertisement in one IGP to\n      generate a route advertisement in the other\
    \ IGP with a given\n      metric.  The translation or tabular approach uses the\
    \ metric in\n      one IGP to create a metric in the other IGP through use of\
    \ either\n      a function (such as adding a constant) or a table lookup.\n  \
    \    Bi-directional exchange of routing information is dangerous\n      without\
    \ control mechanisms to limit feedback.  This is the same\n      problem that\
    \ distance vector routing protocols must address with\n      the split horizon\
    \ technique and that EGP addresses with the\n      third-party rule.  Routing\
    \ loops can be avoided explicitly through\n      use of tables or lists of permitted/denied\
    \ routes or implicitly\n      through use of a split horizon rule, a no-third-party\
    \ rule, or a\n      route tagging mechanism.  Vendors are encouraged to use implicit\n\
    \      techniques where possible to make administration easier for\n      network\
    \ operators.\n"
- title: 8. APPLICATION LAYER - NETWORK MANAGEMENT PROTOCOLS
  contents:
  - "8. APPLICATION LAYER - NETWORK MANAGEMENT PROTOCOLS\n   Note that this chapter\
    \ supersedes any requirements stated under\n   \"REMOTE MANAGEMENT\" in [INTRO:3].\n"
- title: 8.1 The Simple Network Management Protocol - SNMP
  contents:
  - '8.1 The Simple Network Management Protocol - SNMP

    '
- title: 8.1.1 SNMP Protocol Elements
  contents:
  - "8.1.1 SNMP Protocol Elements\n   Routers MUST be manageable by SNMP [MGT:3].\
    \  The SNMP MUST operate\n   using UDP/IP as its transport and network protocols.\
    \  Others MAY be\n   supported (e.g., see [MGT:25, MGT:26, MGT:27, and MGT:28]).\
    \  SNMP\n   management operations MUST operate as if the SNMP was implemented\
    \ on\n   the router itself.  Specifically, management operations MUST be\n   effected\
    \ by sending SNMP management requests to any of the IP\n   addresses assigned\
    \ to any of the router's interfaces.  The actual\n   management operation may\
    \ be performed either by the router or by a\n   proxy for the router.\n   DISCUSSION\n\
    \      This wording is intended to allow management either by proxy,\n      where\
    \ the proxy device responds to SNMP packets that have one of\n      the router's\
    \ IP addresses in the packets destination address\n      field, or the SNMP is\
    \ implemented directly in the router itself\n      and receives packets and responds\
    \ to them in the proper manner.\n      It is important that management operations\
    \ can be sent to one of\n      the router's IP Addresses.  In diagnosing network\
    \ problems the\n      only thing identifying the router that is available may\
    \ be one of\n      the router's IP address; obtained perhaps by looking through\n\
    \      another router's routing table.\n   All SNMP operations (get, get-next,\
    \ get-response, set, and trap) MUST\n   be implemented.\n   Routers MUST provide\
    \ a mechanism for rate-limiting the generation of\n   SNMP trap messages.  Routers\
    \ MAY provide this mechanism through the\n   algorithms for asynchronous alert\
    \ management described in [MGT:5].\n   DISCUSSION\n      Although there is general\
    \ agreement about the need to rate-limit\n      traps, there is not yet consensus\
    \ on how this is best achieved.\n      The reference cited is considered experimental.\n"
- title: 8.2 Community Table
  contents:
  - "8.2 Community Table\n   For the purposes of this specification, we assume that\
    \ there is an\n   abstract `community table' in the router.  This table contains\n\
    \   several entries, each entry for a specific community and containing\n   the\
    \ parameters necessary to completely define the attributes of that\n   community.\
    \  The actual implementation method of the abstract\n   community table is, of\
    \ course, implementation specific.\n   A router's community table MUST allow for\
    \ at least one entry and\n   SHOULD allow for at least two entries.\n   DISCUSSION\n\
    \      A community table with zero capacity is useless.  It means that\n     \
    \ the router will not recognize any communities and, therefore, all\n      SNMP\
    \ operations will be rejected.\n      Therefore, one entry is the minimal useful\
    \ size of the table.\n      Having two entries allows one entry to be limited\
    \ to read-only\n      access while the other would have write capabilities.\n\
    \   Routers MUST allow the user to manually (i.e., without using SNMP)\n   examine,\
    \ add, delete and change entries in the SNMP community table.\n   The user MUST\
    \ be able to set the community name or construct a MIB\n   view.  The user MUST\
    \ be able to configure communities as read-only\n   (i.e., they do not allow SETs)\
    \ or read-write (i.e., they do allow\n   SETs).\n   The user MUST be able to define\
    \ at least one IP address to which\n   notifications are sent for each community\
    \ or MIB view, if traps are\n   used.  These addresses SHOULD be definable on\
    \ a community or MIB view\n   basis.  It SHOULD be possible to enable or disable\
    \ notifications on a\n   community or MIB view basis.\n   A router SHOULD provide\
    \ the ability to specify a list of valid\n   network managers for any particular\
    \ community.  If enabled, a router\n   MUST validate the source address of the\
    \ SNMP datagram against the\n   list and MUST discard the datagram if its address\
    \ does not appear.\n   If the datagram is discarded the router MUST take all actions\n\
    \   appropriate to an SNMP authentication failure.\n   DISCUSSION\n      This\
    \ is a rather limited authentication system, but coupled with\n      various forms\
    \ of packet filtering may provide some small measure\n      of increased security.\n\
    \   The community table MUST be saved in non-volatile storage.\n   The initial\
    \ state of the community table SHOULD contain one entry,\n   with the community\
    \ name string public and read-only access.  The\n   default state of this entry\
    \ MUST NOT send traps.  If it is\n   implemented, then this entry MUST remain\
    \ in the community table until\n   the administrator changes it or deletes it.\n\
    \   DISCUSSION\n      By default, traps are not sent to this community.  Trap\
    \ PDUs are\n      sent to unicast IP addresses.  This address must be configured\n\
    \      into the router in some manner.  Before the configuration occurs,\n   \
    \   there is no such address, so to whom should the trap be sent?\n      Therefore\
    \ trap sending to the public community defaults to be\n      disabled.  This can,\
    \ of course, be changed by an administrative\n      operation once the router\
    \ is operational.\n"
- title: 8.3 Standard MIBS
  contents:
  - "8.3 Standard MIBS\n   All MIBS relevant to a router's configuration are to be\
    \ implemented.\n   To wit:\n   o The System, Interface, IP, ICMP, and UDP groups\
    \ of MIB-II [MGT:2]\n      MUST be implemented.\n   o The Interface Extensions\
    \ MIB [MGT:18] MUST be implemented.\n   o The IP Forwarding Table MIB [MGT:20]\
    \ MUST be implemented.\n   o If the router implements TCP (e.g., for Telnet) then\
    \ the TCP group\n      of MIB-II [MGT:2] MUST be implemented.\n   o If the router\
    \ implements EGP then the EGP group of MIB-II [MGT:2]\n      MUST be implemented.\n\
    \   o If the router supports OSPF then the OSPF MIB [MGT:14] MUST be\n      implemented.\n\
    \   o If the router supports BGP then the BGP MIB [MGT:15] MUST be\n      implemented.\n\
    \   o If the router has Ethernet, 802.3, or StarLan interfaces then the\n    \
    \  Ethernet-Like MIB [MGT:6] MUST be implemented.\n   o If the router has 802.4\
    \ interfaces then the 802.4 MIB [MGT:7] MUST\n      be implemented.\n   o If the\
    \ router has 802.5 interfaces then the 802.5 MIB [MGT:8] MUST\n      be implemented.\n\
    \   o If the router has FDDI interfaces that implement ANSI SMT 7.3 then\n   \
    \   the FDDI MIB [MGT:9] MUST be implemented.\n   o If the router has FDDI interfaces\
    \ that implement ANSI SMT 6.2 then\n      the FDDI MIB [MGT:29] MUST be implemented.\n\
    \   o If the router has interfaces that use V.24 signalling, such as RS-\n   \
    \   232, V.10, V.11, V.35, V.36, or RS-422/423/449, then the RS-232\n      [MGT:10]\
    \ MIB MUST be implemented.\n   o If the router has T1/DS1 interfaces then the\
    \ T1/DS1 MIB [MGT:16]\n      MUST be implemented.\n   o If the router has T3/DS3\
    \ interfaces then the T3/DS3 MIB [MGT:17]\n      MUST be implemented.\n   o If\
    \ the router has SMDS interfaces then the SMDS Interface Protocol\n      MIB [MGT:19]\
    \ MUST be implemented.\n   o If the router supports PPP over any of its interfaces\
    \ then the PPP\n      MIBs [MGT:11], [MGT:12], and [MGT:13] MUST be implemented.\n\
    \   o If the router supports RIP Version 2 then the RIP Version 2 MIB\n      [MGT:21]\
    \ MUST be implemented.\n   o If the router supports X.25 over any of its interfaces\
    \ then the\n      X.25 MIBs [MGT:22, MGT:23 and MGT:24] MUST be implemented.\n"
- title: 8.4 Vendor Specific MIBS
  contents:
  - "8.4 Vendor Specific MIBS\n   The Internet Standard and Experimental MIBs do not\
    \ cover the entire\n   range of statistical, state, configuration and control\
    \ information\n   that may be available in a network element.  This information\
    \ is,\n   nevertheless, extremely useful.  Vendors of routers (and other\n   network\
    \ devices) generally have developed MIB extensions that cover\n   this information.\
    \  These MIB extensions are called Vendor Specific\n   MIBs.\n   The Vendor Specific\
    \ MIB for the router MUST provide access to all\n   statistical, state, configuration,\
    \ and control information that is\n   not available through the Standard and Experimental\
    \ MIBs that have\n   been implemented.  This information MUST be available for\
    \ both\n   monitoring and control operations.\n   DISCUSSION\n      The intent\
    \ of this requirement is to provide the ability to do\n      anything on the router\
    \ through SNMP that can be done through a\n      console, and vice versa.  A certain\
    \ minimal amount of\n      configuration is necessary before SNMP can operate\
    \ (e.g., the\n      router must have an IP address).  This initial configuration\
    \ can\n      not be done through SNMP.  However, once the initial configuration\n\
    \      is done, full capabilities ought to be available through network\n    \
    \  management.\n   The vendor SHOULD make available the specifications for all\
    \ Vendor\n   Specific MIB variables.  These specifications MUST conform to the\
    \ SMI\n   [MGT:1] and the descriptions MUST be in the form specified in\n   [MGT:4].\n\
    \   DISCUSSION\n      Making the Vendor Specific MIB available to the user is\
    \ necessary.\n      Without this information the users would not be able to configure\n\
    \      their network management systems to be able to access the Vendor\n    \
    \  Specific parameters.  These parameters would then be useless.\n      ne 2 The\
    \ format of the MIB specification is also specified.\n      Parsers that read\
    \ MIB specifications and generate the needed\n      tables for the network management\
    \ station are available.  These\n      parsers generally understand only the standard\
    \ MIB specification\n      format.\n"
- title: 8.5 Saving Changes
  contents:
  - "8.5 Saving Changes\n   Parameters altered by SNMP MAY be saved to non-volatile\
    \ storage.\n   DISCUSSION\n      Reasons why this requirement is a MAY:\n    \
    \  o The exact physical nature of non-volatile storage is not\n         specified\
    \ in this document.  Hence, parameters may be saved in\n         NVRAM/EEPROM,\
    \ local floppy or hard disk, or in some TFTP file\n         server or BOOTP server,\
    \ etc.  Suppose that this information is\n         in a file that is retrieved\
    \ through TFTP.  In that case, a\n         change made to a configuration parameter\
    \ on the router would\n         need to be propagated back to the file server\
    \ holding the\n         configuration file.  Alternatively, the SNMP operation\
    \ would\n         need to be directed to the file server, and then the change\n\
    \         somehow propagated to the router.  The answer to this problem\n    \
    \     does not seem obvious.\n         This also places more requirements on the\
    \ host holding the\n         configuration information than just having an available\
    \ TFTP\n         server, so much more that its probably unsafe for a vendor to\n\
    \         assume that any potential customer will have a suitable host\n     \
    \    available.\n      o The timing of committing changed parameters to non-volatile\n\
    \         storage is still an issue for debate.  Some prefer to commit\n     \
    \    all changes immediately.  Others prefer to commit changes to\n         non-volatile\
    \ storage only upon an explicit command.\n"
- title: 9. APPLICATION LAYER - MISCELLANEOUS PROTOCOLS
  contents:
  - "9. APPLICATION LAYER - MISCELLANEOUS PROTOCOLS\n   For all additional application\
    \ protocols that a router implements,\n   the router MUST be compliant and SHOULD\
    \ be unconditionally compliant\n   with the relevant requirements of [INTRO:3].\n"
- title: 9.1 BOOTP
  contents:
  - '9.1 BOOTP

    '
- title: 9.1.1 Introduction
  contents:
  - "9.1.1 Introduction\n   The Bootstrap Protocol (BOOTP) is a UDP/IP-based protocol\
    \ that allows\n   a booting host to configure itself dynamically and without user\n\
    \   supervision.  BOOTP provides a means to notify a host of its assigned\n  \
    \ IP address, the IP address of a boot server host, and the name of a\n   file\
    \ to be loaded into memory and executed ([APPL:1]).  Other\n   configuration information\
    \ such as the local prefix length or subnet\n   mask, the local time offset, the\
    \ addresses of default routers, and\n   the addresses of various Internet servers\
    \ can also be communicated to\n   a host using BOOTP ([APPL:2]).\n"
- title: 9.1.2 BOOTP Relay Agents
  contents:
  - "9.1.2 BOOTP Relay Agents\n   In many cases, BOOTP clients and their associated\
    \ BOOTP server(s) do\n   not reside on the same IP (sub)network.  In such cases,\
    \ a third-party\n   agent is required to transfer BOOTP messages between clients\
    \ and\n   servers.  Such an agent was originally referred to as a BOOTP\n   forwarding\
    \ agent.  However, to avoid confusion with the IP forwarding\n   function of a\
    \ router, the name BOOTP relay agent has been adopted\n   instead.\n   DISCUSSION\n\
    \      A BOOTP relay agent performs a task that is distinct from a\n      router's\
    \ normal IP forwarding function.  While a router normally\n      switches IP datagrams\
    \ between networks more-or-less transparently,\n      a BOOTP relay agent may\
    \ more properly be thought to receive BOOTP\n      messages as a final destination\
    \ and then generate new BOOTP\n      messages as a result.  One should resist\
    \ the notion of simply\n      forwarding a BOOTP message straight through like\
    \ a regular packet.\n   This relay-agent functionality is most conveniently located\
    \ in the\n   routers that interconnect the clients and servers (although it may\n\
    \   alternatively be located in a host that is directly connected to the\n   client\
    \ (sub)net).\n   A router MAY provide BOOTP relay-agent capability.  If it does,\
    \ it\n   MUST conform to the specifications in [APPL:3].\n   Section [5.2.3] discussed\
    \ the circumstances under which a packet is\n   delivered locally (to the router).\
    \  All locally delivered UDP\n   messages whose UDP destination port number is\
    \ BOOTPS (67) are\n   considered for special processing by the router's logical\
    \ BOOTP relay\n   agent.\n   Sections [4.2.2.11] and [5.3.7] discussed invalid\
    \ IP source\n   addresses.  According to these rules, a router must not forward\
    \ any\n   received datagram whose IP source address is 0.0.0.0.  However,\n  \
    \ routers that support a BOOTP relay agent MUST accept for local\n   delivery\
    \ to the relay agent BOOTREQUEST messages whose IP source\n   address is 0.0.0.0.\n"
- title: 10. OPERATIONS AND MAINTENANCE
  contents:
  - "10. OPERATIONS AND MAINTENANCE\n   This chapter supersedes any requirements of\
    \ [INTRO:3] relating to\n   \"Extensions to the IP Module.\"\n   Facilities to\
    \ support operation and maintenance (O&M) activities form\n   an essential part\
    \ of any router implementation.  Although these\n   functions do not seem to relate\
    \ directly to interoperability, they\n   are essential to the network manager\
    \ who must make the router\n   interoperate and must track down problems when\
    \ it doesn't.  This\n   chapter also includes some discussion of router initialization\
    \ and of\n   facilities to assist network managers in securing and accounting\
    \ for\n   their networks.\n"
- title: 10.1 Introduction
  contents:
  - "10.1 Introduction\n   The following kinds of activities are included under router\
    \ O&M:\n   o Diagnosing hardware problems in the router's processor, in its\n\
    \      network interfaces, or in its connected networks, modems, or\n      communication\
    \ lines.\n   o Installing new hardware\n   o Installing new software.\n   o Restarting\
    \ or rebooting the router after a crash.\n   o Configuring (or reconfiguring)\
    \ the router.\n   o Detecting and diagnosing Internet problems such as congestion,\n\
    \      routing loops, bad IP addresses, black holes, packet avalanches,\n    \
    \  and misbehaved hosts.\n   o Changing network topology, either temporarily (e.g.,\
    \ to bypass a\n      communication line problem) or permanently.\n   o Monitoring\
    \ the status and performance of the routers and the\n      connected networks.\n\
    \   o Collecting traffic statistics for use in (Inter-)network planning.\n   o\
    \ Coordinating the above activities with appropriate vendors and\n      telecommunications\
    \ specialists.\n   Routers and their connected communication lines are often operated\
    \ as\n   a system by a centralized O&M organization.  This organization may\n\
    \   maintain a (Inter-)network operation center, or NOC, to carry out its\n  \
    \ O&M functions.  It is essential that routers support remote control\n   and\
    \ monitoring from such a NOC through an Internet path, since\n   routers might\
    \ not be connected to the same network as their NOC.\n   Since a network failure\
    \ may temporarily preclude network access, many\n   NOCs insist that routers be\
    \ accessible for network management through\n   an alternative means, often dial-up\
    \ modems attached to console ports\n   on the routers.\n   Since an IP packet\
    \ traversing an internet will often use routers\n   under the control of more\
    \ than one NOC, Internet problem diagnosis\n   will often involve cooperation\
    \ of personnel of more than one NOC.  In\n   some cases, the same router may need\
    \ to be monitored by more than one\n   NOC, but only if necessary, because excessive\
    \ monitoring could impact\n   a router's performance.\n   The tools available\
    \ for monitoring at a NOC may cover a wide range of\n   sophistication.  Current\
    \ implementations include multi-window,\n   dynamic displays of the entire router\
    \ system.  The use of AI\n   techniques for automatic problem diagnosis is proposed\
    \ for the\n   future.\n   Router O&M facilities discussed here are only a part\
    \ of the large and\n   difficult problem of Internet management.  These problems\
    \ encompass\n   not only multiple management organizations, but also multiple\n\
    \   protocol layers.  For example, at the current stage of evolution of\n   the\
    \ Internet architecture, there is a strong coupling between host\n   TCP implementations\
    \ and eventual IP-level congestion in the router\n   system [OPER:1].  Therefore,\
    \ diagnosis of congestion problems will\n   sometimes require the monitoring of\
    \ TCP statistics in hosts.  There\n   are currently a number of R&D efforts in\
    \ progress in the area of\n   Internet management and more specifically router\
    \ O&M.  These R&D\n   efforts have already produced standards for router O&M.\
    \  This is also\n   an area in which vendor creativity can make a significant\n\
    \   contribution.\n"
- title: 10.2 Router Initialization
  contents:
  - '10.2 Router Initialization

    '
- title: 10.2.1 Minimum Router Configuration
  contents:
  - "10.2.1 Minimum Router Configuration\n   There exists a minimum set of conditions\
    \ that must be satisfied\n   before a router may forward packets.  A router MUST\
    \ NOT enable\n   forwarding on any physical interface unless either:\n   (1) The\
    \ router knows the IP address and associated subnet mask or\n        network prefix\
    \ length of at least one logical interface\n        associated with that physical\
    \ interface, or\n   (2) The router knows that the interface is an unnumbered interface\n\
    \        and knows its router-id.\n   These parameters MUST be explicitly configured:\n\
    \   o A router MUST NOT use factory-configured default values for its IP\n   \
    \   addresses, prefix lengths, or router-id, and\n   o A router MUST NOT assume\
    \ that an unconfigured interface is an\n      unnumbered interface.\n   DISCUSSION\n\
    \      There have been instances in which routers have been shipped with\n   \
    \   vendor-installed default addresses for interfaces.  In a few\n      cases,\
    \ this has resulted in routers advertising these default\n      addresses into\
    \ active networks.\n"
- title: 10.2.2 Address and Prefix Initialization
  contents:
  - "10.2.2 Address and Prefix Initialization\n   A router MUST allow its IP addresses\
    \ and their address masks or\n   prefix lengths to be statically configured and\
    \ saved in non-volatile\n   storage.\n   A router MAY obtain its IP addresses\
    \ and their corresponding address\n   masks dynamically as a side effect of the\
    \ system initialization\n   process (see Section 10.2.3]);\n   If the dynamic\
    \ method is provided, the choice of method to be used in\n   a particular router\
    \ MUST be configurable.\n   As was described in Section [4.2.2.11], IP addresses\
    \ are not\n   permitted to have the value 0 or -1 in the <Host-number> or\n  \
    \ <Network-prefix> fields.  Therefore, a router SHOULD NOT allow an IP\n   address\
    \ or address mask to be set to a value that would make any of\n   the these fields\
    \ above have the value zero or -1.\n   DISCUSSION\n      It is possible using\
    \ arbitrary address masks to create situations\n      in which routing is ambiguous\
    \ (i.e., two routes with different but\n      equally specific subnet masks match\
    \ a particular destination\n      address).  This is one of the strongest arguments\
    \ for the use of\n      network prefixes, and the reason the use of discontiguous\
    \ subnet\n      masks is not permitted.\n   A router SHOULD make the following\
    \ checks on any address mask it\n   installs:\n   o The mask is neither all ones\
    \ nor all zeroes (the prefix length is\n      neither zero nor 32).\n   o The\
    \ bits which correspond to the network prefix part of the address\n      are all\
    \ set to 1.\n   o The bits that correspond to the network prefix are contiguous.\n\
    \   DISCUSSION\n      The masks associated with routes are also sometimes called\
    \ subnet\n      masks, this test should not be applied to them.\n"
- title: 10.2.3 Network Booting using BOOTP and TFTP
  contents:
  - "10.2.3 Network Booting using BOOTP and TFTP\n   There has been much discussion\
    \ of how routers can and should be\n   booted from the network.  These discussions\
    \ have revolved around\n   BOOTP and TFTP.  Currently, there are routers that\
    \ boot with TFTP\n   from the network.  There is no reason that BOOTP could not\
    \ be used\n   for locating the server that the boot image should be loaded from.\n\
    \   BOOTP is a protocol used to boot end systems, and requires some\n   stretching\
    \ to accommodate its use with routers.  If a router is using\n   BOOTP to locate\
    \ the current boot host, it should send a BOOTP Request\n   with its hardware\
    \ address for its first interface, or, if it has been\n   previously configured\
    \ otherwise, with either another interface's\n   hardware address, or another\
    \ number to put in the hardware address\n   field of the BOOTP packet.  This is\
    \ to allow routers without hardware\n   addresses (like synchronous line only\
    \ routers) to use BOOTP for\n   bootload discovery.  TFTP can then be used to\
    \ retrieve the image\n   found in the BOOTP Reply.  If there are no configured\
    \ interfaces or\n   numbers to use, a router MAY cycle through the interface hardware\n\
    \   addresses it has until a match is found by the BOOTP server.\n   A router\
    \ SHOULD IMPLEMENT the ability to store parameters learned\n   through BOOTP into\
    \ local non-volatile storage.  A router MAY\n   implement the ability to store\
    \ a system image loaded over the network\n   into local stable storage.\n   A\
    \ router MAY have a facility to allow a remote user to request that\n   the router\
    \ get a new boot image.  Differentiation should be made\n   between getting the\
    \ new boot image from one of three locations: the\n   one included in the request,\
    \ from the last boot image server, and\n   using BOOTP to locate a server.\n"
- title: 10.3 Operation and Maintenance
  contents:
  - '10.3 Operation and Maintenance

    '
- title: 10.3.1 Introduction
  contents:
  - "10.3.1 Introduction\n   There is a range of possible models for performing O&M\
    \ functions on a\n   router.  At one extreme is the local-only model, under which\
    \ the O&M\n   functions can only be executed locally (e.g., from a terminal plugged\n\
    \   into the router machine).  At the other extreme, the fully remote\n   model\
    \ allows only an absolute minimum of functions to be performed\n   locally (e.g.,\
    \ forcing a boot), with most O&M being done remotely\n   from the NOC.  There\
    \ are intermediate models, such as one in which\n   NOC personnel can log into\
    \ the router as a host, using the Telnet\n   protocol, to perform functions that\
    \ can also be invoked locally.  The\n   local-only model may be adequate in a\
    \ few router installations, but\n   remote operation from a NOC is normally required,\
    \ and therefore\n   remote O&M provisions are required for most routers.\n   Remote\
    \ O&M functions may be exercised through a control agent\n   (program).  In the\
    \ direct approach, the router would support remote\n   O&M functions directly\
    \ from the NOC using standard Internet protocols\n   (e.g., SNMP, UDP or TCP);\
    \ in the indirect approach, the control agent\n   would support these protocols\
    \ and control the router itself using\n   proprietary protocols.  The direct approach\
    \ is preferred, although\n   either approach is acceptable.  The use of specialized\
    \ host hardware\n   and/or software requiring significant additional investment\
    \ is\n   discouraged; nevertheless, some vendors may elect to provide the\n  \
    \ control agent as an integrated part of the network in which the\n   routers\
    \ are a part.  If this is the case, it is required that a means\n   be available\
    \ to operate the control agent from a remote site using\n   Internet protocols\
    \ and paths and with equivalent functionality with\n   respect to a local agent\
    \ terminal.\n   It is desirable that a control agent and any other NOC software\
    \ tools\n   that a vendor provides operate as user programs in a standard\n  \
    \ operating system.  The use of the standard Internet protocols UDP and\n   TCP\
    \ for communicating with the routers should facilitate this.\n   Remote router\
    \ monitoring and (especially) remote router control\n   present important access\
    \ control problems that must be addressed.\n   Care must also be taken to ensure\
    \ control of the use of router\n   resources for these functions.  It is not desirable\
    \ to let router\n   monitoring take more than some limited fraction of the router\
    \ CPU\n   time, for example.  On the other hand, O&M functions must receive\n\
    \   priority so they can be exercised when the router is congested, since\n  \
    \ often that is when O&M is most needed.\n"
- title: 10.3.2 Out Of Band Access
  contents:
  - "10.3.2 Out Of Band Access\n   Routers MUST support Out-Of-Band (OOB) access.\
    \  OOB access SHOULD\n   provide the same functionality as in-band access.  This\
    \ access SHOULD\n   implement access controls, to prevent unauthorized access.\n\
    \   DISCUSSION\n      This Out-Of-Band access will allow the NOC a way to access\n\
    \      isolated routers during times when network access is not\n      available.\n\
    \      Out-Of-Band access is an important management tool for the network\n  \
    \    administrator.  It allows the access of equipment independent of\n      the\
    \ network connections.  There are many ways to achieve this\n      access.  Whichever\
    \ one is used it is important that the access is\n      independent of the network\
    \ connections.  An example of Out-Of-Band\n      access would be a serial port\
    \ connected to a modem that provides\n      dial up access to the router.\n  \
    \    It is important that the OOB access provides the same\n      functionality\
    \ as in-band access.  In-band access, or accessing\n      equipment through the\
    \ existing network connection, is limiting,\n      because most of the time, administrators\
    \ need to reach equipment\n      to figure out why it is unreachable.  In band\
    \ access is still very\n      important for configuring a router, and for troubleshooting\
    \ more\n      subtle problems.\n"
- title: 10.3.2 Router O&M Functions
  contents:
  - '10.3.2 Router O&M Functions

    '
- title: 10.3.2.1 Maintenance - Hardware Diagnosis
  contents:
  - "10.3.2.1 Maintenance - Hardware Diagnosis\n   Each router SHOULD operate as a\
    \ stand-alone device for the purposes\n   of local hardware maintenance.  Means\
    \ SHOULD be available to run\n   diagnostic programs at the router site using\
    \ only on-site tools.  A\n   router SHOULD be able to run diagnostics in case\
    \ of a fault.  For\n   suggested hardware and software diagnostics see Section\
    \ [10.3.3].\n"
- title: 10.3.2.2 Control - Dumping and Rebooting
  contents:
  - "10.3.2.2 Control - Dumping and Rebooting\n   A router MUST include both in-band\
    \ and out-of-band mechanisms to\n   allow the network manager to reload, stop,\
    \ and restart the router.  A\n   router SHOULD also contain a mechanism (such\
    \ as a watchdog timer)\n   which will reboot the router automatically if it hangs\
    \ due to a\n   software or hardware fault.\n   A router SHOULD IMPLEMENT a mechanism\
    \ for dumping the contents of a\n   router's memory (and/or other state useful\
    \ for vendor debugging after\n   a crash), and either saving them on a stable\
    \ storage device local to\n   the router or saving them on another host via an\
    \ up-line dump\n   mechanism such as TFTP (see [OPER:2], [INTRO:3]).\n"
- title: 10.3.2.3 Control - Configuring the Router
  contents:
  - "10.3.2.3 Control - Configuring the Router\n   Every router has configuration\
    \ parameters that may need to be set.\n   It SHOULD be possible to update the\
    \ parameters without rebooting the\n   router; at worst, a restart MAY be required.\
    \  There may be cases when\n   it is not possible to change parameters without\
    \ rebooting the router\n   (for instance, changing the IP address of an interface).\
    \  In these\n   cases, care should be taken to minimize disruption to the router\
    \ and\n   the surrounding network.\n   There SHOULD be a way to configure the\
    \ router over the network either\n   manually or automatically.  A router SHOULD\
    \ be able to upload or\n   download its parameters from a host or another router.\
    \  A means\n   SHOULD be provided, either as an application program or a router\n\
    \   function, to convert between the parameter format and a human-\n   editable\
    \ format.  A router SHOULD have some sort of stable storage\n   for its configuration.\
    \  A router SHOULD NOT believe protocols such as\n   RARP, ICMP Address Mask Reply,\
    \ and MAY not believe BOOTP.\n   DISCUSSION\n      It is necessary to note here\
    \ that in the future RARP, ICMP Address\n      Mask Reply, BOOTP and other mechanisms\
    \ may be needed to allow a\n      router to auto-configure.  Although routers\
    \ may in the future be\n      able to configure automatically, the intent here\
    \ is to discourage\n      this practice in a production environment until auto-configuration\n\
    \      has been tested more thoroughly.  The intent is NOT to discourage\n   \
    \   auto-configuration all together.  In cases where a router is\n      expected\
    \ to get its configuration automatically it may be wise to\n      allow the router\
    \ to believe these things as it comes up and then\n      ignore them after it\
    \ has gotten its configuration.\n"
- title: 10.3.2.4 Net Booting of System Software
  contents:
  - "10.3.2.4 Net Booting of System Software\n      A router SHOULD keep its system\
    \ image in local non-volatile\n      storage such as PROM, NVRAM, or disk.  It\
    \ MAY also be able to load\n      its system software over the network from a\
    \ host or another\n      router.\n      A router that can keep its system image\
    \ in local non-volatile\n      storage MAY be configurable to boot its system\
    \ image over the\n      network.  A router that offers this option SHOULD be configurable\n\
    \      to boot the system image in its non-volatile local storage if it\n    \
    \  is unable to boot its system image over the network.\n   DISCUSSION\n     \
    \ It is important that the router be able to come up and run on its\n      own.\
    \  NVRAM may be a particular solution for routers used in large\n      networks,\
    \ since changing PROMs can be quite time consuming for a\n      network manager\
    \ responsible for numerous or geographically\n      dispersed routers.  It is\
    \ important to be able to netboot the\n      system image because there should\
    \ be an easy way for a router to\n      get a bug fix or new feature more quickly\
    \ than getting PROMs\n      installed.  Also if the router has NVRAM instead of\
    \ PROMs, it will\n      netboot the image and then put it in NVRAM.\n      Routers\
    \ SHOULD perform some basic consistency check on any image\n      loaded, to detect\
    \ and perhaps prevent incorrect images.\n   A router MAY also be able to distinguish\
    \ between different\n   configurations based on which software it is running.\
    \  If\n   configuration commands change from one software version to another,\n\
    \   it would be helpful if the router could use the configuration that\n   was\
    \ compatible with the software.\n"
- title: 10.3.2.5 Detecting and responding to misconfiguration
  contents:
  - "10.3.2.5 Detecting and responding to misconfiguration\n   There MUST be mechanisms\
    \ for detecting and responding to\n   misconfigurations.  If a command is executed\
    \ incorrectly, the router\n   SHOULD give an error message.  The router SHOULD\
    \ NOT accept a poorly\n   formed command as if it were correct.\n   DISCUSSION\n\
    \      There are cases where it is not possible to detect errors: the\n      command\
    \ is correctly formed, but incorrect with respect to the\n      network.  This\
    \ may be detected by the router, but may not be\n      possible.\n   Another form\
    \ of misconfiguration is misconfiguration of the network\n   to which the router\
    \ is attached.  A router MAY detect\n   misconfigurations in the network.  The\
    \ router MAY log these findings\n   to a file, either on the router or a host,\
    \ so that the network\n   manager will see that there are possible problems on\
    \ the network.\n   DISCUSSION\n      Examples of such misconfigurations might\
    \ be another router with\n      the same address as the one in question or a router\
    \ with the wrong\n      address mask.  If a router detects such problems it is\
    \ probably\n      not the best idea for the router to try to fix the situation.\n\
    \      That could cause more harm than good.\n"
- title: 10.3.2.6 Minimizing Disruption
  contents:
  - "10.3.2.6 Minimizing Disruption\n   Changing the configuration of a router SHOULD\
    \ have minimal affect on\n   the network.  Routing tables SHOULD NOT be unnecessarily\
    \ flushed when\n   a simple change is made to the router.  If a router is running\n\
    \   several routing protocols, stopping one routing protocol SHOULD NOT\n   disrupt\
    \ other routing protocols, except in the case where one network\n   is learned\
    \ by more than one routing protocol.\n   DISCUSSION\n      It is the goal of a\
    \ network manager to run a network so that users\n      of the network get the\
    \ best connectivity possible.  Reloading a\n      router for simple configuration\
    \ changes can cause disruptions in\n      routing and ultimately cause disruptions\
    \ to the network and its\n      users.  If routing tables are unnecessarily flushed,\
    \ for instance,\n      the default route will be lost as well as specific routes\
    \ to sites\n      within the network.  This sort of disruption will cause\n  \
    \    significant downtime for the users.  It is the purpose of this\n      section\
    \ to point out that whenever possible, these disruptions\n      should be avoided.\n"
- title: 10.3.2.7 Control - Troubleshooting Problems
  contents:
  - "10.3.2.7 Control - Troubleshooting Problems\n      (1) A router MUST provide\
    \ in-band network access, but (except as\n           required by Section [8.2])\
    \ for security considerations this\n           access SHOULD be disabled by default.\
    \  Vendors MUST document\n           the default state of any in-band access.\
    \  This access SHOULD\n           implement access controls, to prevent unauthorized\
    \ access.\n   DISCUSSION\n      In-band access primarily refers to access through\
    \ the normal\n      network protocols that may or may not affect the permanent\n\
    \      operational state of the router.  This includes, but is not\n      limited\
    \ to Telnet/RLOGIN console access and SNMP operations.\n      This was a point\
    \ of contention between the operational out of the\n      box and secure out of\
    \ The box contingents.  Any automagic access\n      to the router may introduce\
    \ insecurities, but it may be more\n      important for the customer to have a\
    \ router that is accessible\n      over the network as soon as it is plugged in.\
    \  At least one vendor\n      supplies routers without any external console access\
    \ and depends\n      on being able to access the router through the network to\
    \ complete\n      its configuration.\n      It is the vendors call whether in-band\
    \ access is enabled by\n      default; but it is also the vendor's responsibility\
    \ to make its\n      customers aware of possible insecurities.\n      (2) A router\
    \ MUST provide the ability to initiate an ICMP echo.\n           The following\
    \ options SHOULD be implemented:\n           o Choice of data patterns\n     \
    \      o Choice of packet size\n           o Record route\n           and the\
    \ following additional options MAY be implemented:\n           o Loose source\
    \ route\n           o Strict source route\n           o Timestamps\n      (3)\
    \ A router SHOULD provide the ability to initiate a traceroute.\n           If\
    \ traceroute is provided, then the 3rd party traceroute\n           SHOULD be\
    \ implemented.\n   Each of the above three facilities (if implemented) SHOULD\
    \ have\n   access restrictions placed on it to prevent its abuse by unauthorized\n\
    \   persons.\n"
- title: 10.4 Security Considerations
  contents:
  - '10.4 Security Considerations

    '
- title: 10.4.1 Auditing and Audit Trails
  contents:
  - "10.4.1 Auditing and Audit Trails\n   Auditing and billing are the bane of the\
    \ network operator, but are\n   the two features most requested by those in charge\
    \ of network\n   security and those who are responsible for paying the bills.\
    \  In the\n   context of security, auditing is desirable if it helps you keep\
    \ your\n   network working and protects your resources from abuse, without\n \
    \  costing you more than those resources are worth.\n   (1) Configuration Changes\n\
    \        Router SHOULD provide a method for auditing a configuration\n       \
    \ change of a router, even if it's something as simple as\n        recording the\
    \ operator's initials and time of change.\n   DISCUSSION\n      Configuration\
    \ change logging (who made a configuration change,\n      what was changed, and\
    \ when) is very useful, especially when\n      traffic is suddenly routed through\
    \ Alaska on its way across town.\n      So is the ability to revert to a previous\
    \ configuration.\n      (2) Packet Accounting\n           Vendors should strongly\
    \ consider providing a system for\n           tracking traffic levels between\
    \ pairs of hosts or networks.\n           A mechanism for limiting the collection\
    \ of this information\n           to specific pairs of hosts or networks is also\
    \ strongly\n           encouraged.\n   DISCUSSION\n      A host traffic matrix\
    \ as described above can give the network\n      operator a glimpse of traffic\
    \ trends not apparent from other\n      statistics.  It can also identify hosts\
    \ or networks that are\n      probing the structure of the attached networks -\
    \ e.g., a single\n      external host that tries to send packets to every IP address\
    \ in\n      the network address range for a connected network.\n      (3) Security\
    \ Auditing\n           Routers MUST provide a method for auditing security related\n\
    \           failures or violations to include:\n           o Authorization Failures:\
    \ bad passwords, invalid SNMP\n              communities, invalid authorization\
    \ tokens,\n           o Violations of Policy Controls: Prohibited Source Routes,\n\
    \              Filtered Destinations, and\n           o Authorization Approvals:\
    \ good passwords - Telnet in-band\n              access, console access.\n   \
    \        Routers MUST provide a method of limiting or disabling such\n       \
    \    auditing but auditing SHOULD be on by default.  Possible\n           methods\
    \ for auditing include listing violations to a console\n           if present,\
    \ logging or counting them internally, or logging\n           them to a remote\
    \ security server through the SNMP trap\n           mechanism or the Unix logging\
    \ mechanism as appropriate.  A\n           router MUST implement at least one\
    \ of these reporting\n           mechanisms - it MAY implement more than one.\n"
- title: 10.4.2 Configuration Control
  contents:
  - "10.4.2 Configuration Control\n   A vendor has a responsibility to use good configuration\
    \ control\n   practices in the creation of the software/firmware loads for their\n\
    \   routers.  In particular, if a vendor makes updates and loads\n   available\
    \ for retrieval over the Internet, the vendor should also\n   provide a way for\
    \ the customer to confirm the load is a valid one,\n   perhaps by the verification\
    \ of a checksum over the load.\n   DISCUSSION\n      Many vendors currently provide\
    \ short notice updates of their\n      software products through the Internet.\
    \  This a good trend and\n      should be encouraged, but provides a point of\
    \ vulnerability in the\n      configuration control process.\n   If a vendor provides\
    \ the ability for the customer to change the\n   configuration parameters of a\
    \ router remotely, for example through a\n   Telnet session, the ability to do\
    \ so SHOULD be configurable and\n   SHOULD default to off.  The router SHOULD\
    \ require  valid\n   authentication before permitting remote reconfiguration.\
    \  This\n   authentication procedure SHOULD NOT transmit the authentication\n\
    \   secret over the network.  For example, if telnet is implemented, the\n   vendor\
    \ SHOULD IMPLEMENT Kerberos, S-Key, or a similar authentication\n   procedure.\n\
    \   DISCUSSION\n      Allowing your properly identified network operator to twiddle\
    \ with\n      your routers is necessary; allowing anyone else to do so is\n  \
    \    foolhardy.\n   A router MUST NOT have undocumented back door access and master\n\
    \   passwords.  A vendor MUST ensure any such access added for purposes\n   of\
    \ debugging or product development are deleted before the product is\n   distributed\
    \ to its customers.\n   DISCUSSION\n      A vendor has a responsibility to its\
    \ customers to ensure they are\n      aware of the vulnerabilities present in\
    \ its code by intention -\n      e.g., in-band access.  Trap doors, back doors\
    \ and master passwords\n      intentional or unintentional can turn a relatively\
    \ secure router\n      into a major problem on an operational network.  The supposed\n\
    \      operational benefits are not matched by the potential problems.\n"
- title: 11. REFERENCES
  contents:
  - "11. REFERENCES\n   Implementors should be aware that Internet protocol standards\
    \ are\n   occasionally updated.  These references are current as of this\n   writing,\
    \ but a cautious implementor will always check a recent\n   version of the RFC\
    \ index to ensure that an RFC has not been updated\n   or superseded by another,\
    \ more recent RFC.  Reference [INTRO:6]\n   explains various ways to obtain a\
    \ current RFC index.\n   APPL:1.\n        Croft, B., and J.  Gilmore, \"Bootstrap\
    \ Protocol (BOOTP)\", RFC\n        951, Stanford University, Sun Microsystems,\
    \ September 1985.\n   APPL:2.\n        Alexander, S., and R.  Droms, \"DHCP Options\
    \ and BOOTP Vendor\n        Extensions\", RFC 1533, Lachman Technology, Inc.,\
    \ Bucknell\n        University, October 1993.\n   APPL:3.\n        Wimer, W.,\
    \ \"Clarifications and Extensions for the Bootstrap\n        Protocol\", RFC 1542,\
    \ Carnegie Mellon University, October 1993.\n   ARCH:1.\n        DDN Protocol\
    \ Handbook, NIC-50004, NIC-50005, NIC-50006 (three\n        volumes), DDN Network\
    \ Information Center, SRI International,\n        Menlo Park, California, USA,\
    \ December 1985.\n   ARCH:2.\n        V.  Cerf and R.  Kahn, \"A Protocol for\
    \ Packet Network\n        Intercommunication\", IEEE Transactions on Communication,\
    \ May\n        1974.  Also included in [ARCH:1].\n   ARCH:3.\n        J.  Postel,\
    \ C.  Sunshine, and D.  Cohen, \"The ARPA Internet\n        Protocol\", Computer\
    \ Networks, volume 5, number 4, July 1981.\n        Also included in [ARCH:1].\n\
    \   ARCH:4.\n        B.  Leiner, J.  Postel, R.  Cole, and D.  Mills, :The DARPA\n\
    \        Internet Protocol Suite\", Proceedings of INFOCOM '85, IEEE,\n      \
    \  Washington, DC, March 1985.  Also in: IEEE Communications\n        Magazine,\
    \ March 1985.  Also available from the Information\n        Sciences Institute,\
    \ University of Southern California as\n        Technical Report ISI-RS-85-153.\n\
    \   ARCH:5.\n        D.  Comer, \"Internetworking With TCP/IP Volume 1: Principles,\n\
    \        Protocols, and Architecture\", Prentice Hall, Englewood Cliffs,\n   \
    \     NJ, 1991.\n   ARCH:6.\n        W.  Stallings, \"Handbook of Computer-Communications\
    \ Standards\n        Volume 3: The TCP/IP Protocol Suite\", Macmillan, New York,\
    \ NY,\n        1990.\n   ARCH:7.\n        Postel, J., \"Internet Official Protocol\
    \ Standards\", STD 1, RFC\n        1780, Internet Architecture Board, March 1995.\n\
    \   ARCH:8.\n        Information processing systems - Open Systems Interconnection\
    \ -\n        Basic Reference Model, ISO 7489, International Standards\n      \
    \  Organization, 1984.\n   ARCH:9\n        R.  Braden, J.  Postel, Y.  Rekhter,\
    \ \"Internet Architecture\n        Extensions for Shared Media\", 05/20/1994\n\
    \   FORWARD:1.\n        IETF CIP Working Group (C. Topolcic, Editor), \"Experimental\n\
    \        Internet Stream Protocol\", Version 2 (ST-II), RFC 1190, October\n  \
    \      1990.\n   FORWARD:2.\n        Mankin, A., and K.  Ramakrishnan, Editors,\
    \ \"Gateway Congestion\n        Control Survey\", RFC 1254, MITRE, Digital Equipment\
    \ Corporation,\n        August 1991.\n   FORWARD:3.\n        J.  Nagle, \"On Packet\
    \ Switches with Infinite Storage\", IEEE\n        Transactions on Communications,\
    \ volume COM-35, number 4, April\n        1987.\n   FORWARD:4.\n        R.  Jain,\
    \ K.  Ramakrishnan, and D.  Chiu, \"Congestion Avoidance\n        in Computer\
    \ Networks With a Connectionless Network Layer\",\n        Technical Report DEC-TR-506,\
    \ Digital Equipment Corporation.\n   FORWARD:5.\n        V.  Jacobson, \"Congestion\
    \ Avoidance and Control\", Proceedings of\n        SIGCOMM '88, Association for\
    \ Computing Machinery, August 1988.\n   FORWARD:6.\n        W.  Barns, \"Precedence\
    \ and Priority Access Implementation for\n        Department of Defense Data Networks\"\
    , Technical Report MTR-\n        91W00029, The Mitre Corporation, McLean, Virginia,\
    \ USA, July\n        1991.\n   FORWARD:7\n        Fang, Chen, Hutchins, \"Simulation\
    \ Results of TCP Performance\n        over ATM with and without Flow Control\"\
    , presentation to the ATM\n        Forum, November 15, 1993.\n   FORWARD:8\n \
    \       V.  Paxson, S.  Floyd \"Wide Area Traffic: the Failure of Poisson\n  \
    \      Modeling\", short version in SIGCOMM '94.\n   FORWARD:9\n        Leland,\
    \ Taqqu, Willinger and Wilson, \"On the Self-Similar Nature\n        of Ethernet\
    \ Traffic\", Proceedings of SIGCOMM '93, September,\n        1993.\n   FORWARD:10\n\
    \        S.  Keshav \"A Control Theoretic Approach to Flow Control\",\n      \
    \  SIGCOMM 91, pages 3-16\n   FORWARD:11\n        K.K.  Ramakrishnan and R.  Jain,\
    \ \"A Binary Feedback Scheme for\n        Congestion Avoidance in Computer Networks\"\
    , ACM Transactions of\n        Computer Systems, volume 8, number 2, 1980.\n \
    \  FORWARD:12\n        H.  Kanakia, P.  Mishara, and A.  Reibman].  \"An adaptive\n\
    \        congestion control scheme for real-time packet video transport\",\n \
    \       In Proceedings of ACM SIGCOMM 1994, pages 20-31, San Francisco,\n    \
    \    California, September 1993.\n   FORWARD:13\n        A.  Demers, S.  Keshav,\
    \ S.  Shenker, \"Analysis and Simulation of\n        a Fair Queuing Algorithm\"\
    ,\n         93 pages 1-12\n   FORWARD:14\n        Clark, D., Shenker, S., and\
    \ L.  Zhang, \"Supporting Real-Time\n        Applications in an Integrated Services\
    \ Packet Network:\n        Architecture and Mechanism\", 92 pages 14-26\n   INTERNET:1.\n\
    \        Postel, J., \"Internet Protocol\", STD 5, RFC 791, USC/Information\n\
    \        Sciences Institute, September 1981.\n   INTERNET:2.\n        Mogul, J.,\
    \ and J.  Postel, \"Internet Standard Subnetting\n        Procedure\", STD 5,\
    \ RFC 950, Stanford, USC/Information Sciences\n        Institute, August 1985.\n\
    \   INTERNET:3.\n        Mogul, J., \"Broadcasting Internet Datagrams in the Presence\
    \ of\n        Subnets\", STD 5, RFC 922, Stanford University, October 1984.\n\
    \   INTERNET:4.\n        Deering, S., \"Host Extensions for IP Multicasting\"\
    , STD 5, RFC\n        1112, Stanford University, August 1989.\n   INTERNET:5.\n\
    \        Kent, S., \"U.S.  Department of Defense Security Options for the\n  \
    \      Internet Protocol\", RFC 1108, BBN Communications, November 1991.\n   INTERNET:6.\n\
    \        Braden, R., Borman, D., and C.  Partridge, \"Computing the\n        Internet\
    \ Checksum\", RFC 1071, USC/Information Sciences\n        Institute, Cray Research,\
    \ BBN Communications, September 1988.\n   INTERNET:7.\n        Mallory T., and\
    \ A.  Kullberg, \"Incremental Updating of the\n        Internet Checksum\", RFC\
    \ 1141, BBN Communications, January 1990.\n   INTERNET:8.\n        Postel, J.,\
    \ \"Internet Control Message Protocol\", STD 5, RFC 792,\n        USC/Information\
    \ Sciences Institute, September 1981.\n   INTERNET:9.\n        A.  Mankin, G.\
    \  Hollingsworth, G.  Reichlen, K.  Thompson, R.\n        Wilder, and R.  Zahavi,\
    \ \"Evaluation of Internet Performance -\n        FY89\", Technical Report MTR-89W00216,\
    \ MITRE Corporation,\n        February, 1990.\n   INTERNET:10.\n        G.  Finn,\
    \ A \"Connectionless Congestion Control Algorithm\",\n        Computer Communications\
    \ Review, volume 19, number 5, Association\n        for Computing Machinery, October\
    \ 1989.\n   INTERNET:11.\n        Prue, W., and J. Postel, \"The Source Quench\
    \ Introduced Delay\n        (SQuID)\", RFC 1016, USC/Information Sciences Institute,\
    \ August\n        1987.\n   INTERNET:12.\n        McKenzie, A., \"Some comments\
    \ on SQuID\", RFC 1018, BBN Labs,\n        August 1987.\n   INTERNET:13.\n   \
    \     Deering, S., \"ICMP Router Discovery Messages\", RFC 1256, Xerox\n     \
    \   PARC, September 1991.\n   INTERNET:14.\n        Mogul J., and S.  Deering,\
    \ \"Path MTU Discovery\", RFC 1191,\n        DECWRL, Stanford University, November\
    \ 1990.\n   INTERNET:15\n        Fuller, V., Li, T., Yu, J., and K.  Varadhan,\
    \ \"Classless Inter-\n        Domain Routing (CIDR): an Address Assignment and\
    \ Aggregation\n        Strategy\" RFC 1519, BARRNet, cisco, Merit, OARnet, September\n\
    \        1993.\n   INTERNET:16\n        St.  Johns, M., \"Draft Revised IP Security\
    \ Option\", RFC 1038,\n        IETF, January 1988.\n   INTERNET:17\n        Prue,\
    \ W.,  and J.  Postel, \"Queuing Algorithm to Provide Type-\n        of-service\
    \ For IP Links\", RFC 1046, USC/Information Sciences\n        Institute, February\
    \ 1988.\n   INTERNET:18\n        Postel, J., \"Address Mappings\", RFC 796, USC/Information\n\
    \        Sciences Institute, September 1981.\n   INTRO:1.\n        Braden, R.,\
    \ and J.  Postel, \"Requirements for Internet\n        Gateways\", STD 4, RFC\
    \ 1009, USC/Information Sciences Institute,\n        June 1987.\n   INTRO:2.\n\
    \        Internet Engineering Task Force (R. Braden, Editor),\n        \"Requirements\
    \ for Internet Hosts - Communication Layers\", STD 3,\n        RFC 1122, USC/Information\
    \ Sciences Institute, October 1989.\n   INTRO:3.\n        Internet Engineering\
    \ Task Force (R. Braden, Editor),\n        \"Requirements for Internet Hosts -\
    \ Application and Support\", STD\n        3, RFC 1123, USC/Information Sciences\
    \ Institute, October 1989.\n   INTRO:4.\n        Clark, D., \"Modularity and Efficiency\
    \ in Protocol\n        Implementations\", RFC 817, MIT Laboratory for Computer\
    \ Science,\n        July 1982.\n   INTRO:5.\n        Clark, D., \"The Structuring\
    \ of Systems Using Upcalls\",\n        Proceedings of 10th ACM SOSP, December\
    \ 1985.\n   INTRO:6.\n        Jacobsen, O.,  and J.  Postel, \"Protocol Document\
    \ Order\n        Information\", RFC 980, SRI, USC/Information Sciences Institute,\n\
    \        March 1986.\n   INTRO:7.\n        Reynolds, J.,  and J.  Postel, \"Assigned\
    \ Numbers\", STD 2, RFC\n        1700, USC/Information Sciences Institute, October\
    \ 1994.  This\n        document is periodically updated and reissued with a new\
    \ number.\n        It is wise to verify occasionally that the version you have\
    \ is\n        still current.\n   INTRO:8.\n        DoD Trusted Computer System\
    \ Evaluation Criteria, DoD publication\n        5200.28-STD, U.S.  Department\
    \ of Defense, December 1985.\n   INTRO:9\n        Malkin, G., and T.  LaQuey Parker,\
    \ Editors, \"Internet Users'\n        Glossary\", FYI 18, RFC 1392, Xylogics,\
    \ Inc., UTexas, January\n        1993.\n   LINK:1.\n        Leffler, S., and M.\
    \  Karels, \"Trailer Encapsulations\", RFC 893,\n        University of California\
    \ at Berkeley, April 1984.\n   LINK:2\n        Simpson, W., \"The Point-to-Point\
    \ Protocol (PPP)\", STD 51, RFC\n        1661, Daydreamer July 1994.\n   LINK:3\n\
    \        McGregor, G., \"The PPP Internet Protocol Control Protocol\n        (IPCP)\"\
    , RFC 1332, Merit May 1992.\n   LINK:4\n        Lloyd, B., and W.  Simpson, \"\
    PPP Authentication Protocols\", RFC\n        1334, L&A, Daydreamer, May 1992.\n\
    \   LINK:5\n        Simpson, W., \"PPP Link Quality Monitoring\", RFC 1333,\n\
    \        Daydreamer, May 1992.\n   MGT:1.\n        Rose, M., and K.  McCloghrie,\
    \ \"Structure and Identification of\n        Management Information of TCP/IP-based\
    \ Internets\", STD 16, RFC\n        1155, Performance Systems International, Hughes\
    \ LAN Systems, May\n        1990.\n   MGT:2.\n        McCloghrie, K., and M. \
    \ Rose (Editors), \"Management Information\n        Base of TCP/IP-Based Internets:\
    \ MIB-II\", STD 16, RFC 1213,\n        Hughes LAN Systems, Inc., Performance Systems\
    \ International,\n        March 1991.\n   MGT:3.\n        Case, J., Fedor, M.,\
    \ Schoffstall, M., and J.  Davin, \"Simple\n        Network Management Protocol\"\
    , STD 15, RFC 1157, SNMP Research,\n        Performance Systems International,\
    \ MIT Laboratory for Computer\n        Science, May 1990.\n   MGT:4.\n       \
    \ Rose, M., and K.  McCloghrie (Editors), \"Towards Concise MIB\n        Definitions\"\
    , STD 16, RFC 1212, Performance Systems\n        International, Hughes LAN Systems,\
    \ March 1991.\n   MGT:5.\n        Steinberg, L., \"Techniques for Managing Asynchronously\
    \ Generated\n        Alerts\", RFC 1224, IBM Corporation, May 1991.\n   MGT:6.\n\
    \        Kastenholz, F., \"Definitions of Managed Objects for the\n        Ethernet-like\
    \ Interface Types\", RFC 1398, FTP Software, Inc.,\n        January 1993.\n  \
    \ MGT:7.\n        McCloghrie, K., and R. Fox \"IEEE 802.4 Token Bus MIB\", RFC\
    \ 1230,\n        Hughes LAN Systems, Inc., Synoptics, Inc., May 1991.\n   MGT:8.\n\
    \        McCloghrie, K., Fox R., and E. Decker, \"IEEE 802.5 Token Ring\n    \
    \    MIB\", RFC 1231, Hughes LAN Systems, Inc., Synoptics, Inc., cisco\n     \
    \   Systems, Inc., February 1993.\n   MGT:9.\n        Case, J., and A.  Rijsinghani,\
    \ \"FDDI Management Information\n        Base\", RFC 1512, The University of Tennesse\
    \ and SNMP Research,\n        Digital Equipment Corporation, September 1993.\n\
    \   MGT:10.\n        Stewart, B., Editor \"Definitions of Managed Objects for\
    \ RS-232-\n        like Hardware Devices\", RFC 1317, Xyplex, Inc., April 1992.\n\
    \   MGT:11.\n        Kastenholz, F., \"Definitions of Managed Objects for the\
    \ Link\n        Control Protocol of the Point-to-Point Protocol\", RFC 1471, FTP\n\
    \        Software, Inc., June 1992.\n   MGT:12.\n        Kastenholz, F., \"The\
    \ Definitions of Managed Objects for the\n        Security Protocols of the Point-to-Point\
    \ Protocol\", RFC 1472,\n        FTP Software, Inc., June 1992.\n   MGT:13.\n\
    \        Kastenholz, F., \"The Definitions of Managed Objects for the IP\n   \
    \     Network Control Protocol of the Point-to-Point Protocol\", RFC\n       \
    \ 1473, FTP Software, Inc., June 1992.\n   MGT:14.\n        Baker, F., and R.\
    \  Coltun, \"OSPF Version 2 Management\n        Information Base\", RFC 1253,\
    \ ACC, Computer Science Center,\n        August 1991.\n   MGT:15.\n        Willis,\
    \ S., and J.  Burruss, \"Definitions of Managed Objects for\n        the Border\
    \ Gateway Protocol (Version 3)\", RFC 1269, Wellfleet\n        Communications\
    \ Inc., October 1991.\n   MGT:16.\n        Baker, F., and J.  Watt, \"Definitions\
    \ of Managed Objects for the\n        DS1 and E1 Interface Types\", RFC 1406,\
    \ Advanced Computer\n        Communications, Newbridge Networks Corporation, January\
    \ 1993.\n   MGT:17.\n        Cox, T., and K.  Tesink, Editors \"Definitions of\
    \ Managed Objects\n        for the DS3/E3 Interface Types\", RFC 1407, Bell Communications\n\
    \        Research, January 1993.\n   MGT:18.\n        McCloghrie, K., \"Extensions\
    \ to the Generic-Interface MIB\", RFC\n        1229, Hughes LAN Systems, August\
    \ 1992.\n   MGT:19.\n        Cox, T., and K.  Tesink, \"Definitions of Managed\
    \ Objects for the\n        SIP Interface Type\", RFC 1304, Bell Communications\
    \ Research,\n        February 1992.\n   MGT:20\n        Baker, F., \"IP Forwarding\
    \ Table MIB\", RFC 1354, ACC, July 1992.\n   MGT:21.\n        Malkin, G., and\
    \ F.  Baker, \"RIP Version 2 MIB Extension\", RFC\n        1724, Xylogics, Inc.,\
    \ Cisco Systems, November 1994\n   MGT:22.\n        Throop, D., \"SNMP MIB Extension\
    \ for the X.25 Packet Layer\", RFC\n        1382, Data General Corporation, November\
    \ 1992.\n   MGT:23.\n        Throop, D., and F.  Baker, \"SNMP MIB Extension for\
    \ X.25 LAPB\",\n        RFC 1381, Data General Corporation, ACC, November 1992.\n\
    \   MGT:24.\n        Throop, D., and F.  Baker, \"SNMP MIB Extension for MultiProtocol\n\
    \        Interconnect over X.25\", RFC 1461, Data General Corporation, May\n \
    \       1993.\n   MGT:25.\n        Rose, M., \"SNMP over OSI\", RFC 1418, Dover\
    \ Beach Consulting,\n        Inc., March 1993.\n   MGT:26.\n        Minshall,\
    \ G., and M.  Ritter, \"SNMP over AppleTalk\", RFC 1419,\n        Novell, Inc.,\
    \ Apple Computer, Inc., March 1993.\n   MGT:27.\n        Bostock, S., \"SNMP over\
    \ IPX\", RFC 1420, Novell, Inc., March\n        1993.\n   MGT:28.\n        Schoffstall,\
    \ M., Davin, C., Fedor, M., and J.  Case, \"SNMP over\n        Ethernet\", RFC\
    \ 1089, Rensselaer Polytechnic Institute, MIT\n        Laboratory for Computer\
    \ Science, NYSERNet, Inc., University of\n        Tennessee at Knoxville, February\
    \ 1989.\n   MGT:29.\n        Case, J., \"FDDI Management Information Base\", RFC\
    \ 1285, SNMP\n        Research, Incorporated, January 1992.\n   OPER:1.\n    \
    \    Nagle, J., \"Congestion Control in IP/TCP Internetworks\", RFC\n        896,\
    \ FACC, January 1984.\n   OPER:2.\n        Sollins, K., \"TFTP Protocol (revision\
    \ 2)\", RFC 1350, MIT, July\n        1992.\n   ROUTE:1.\n        Moy, J., \"OSPF\
    \ Version 2\", RFC 1583, Proteon, March 1994.\n   ROUTE:2.\n        Callon, R.,\
    \ \"Use of OSI IS-IS for Routing in TCP/IP and Dual\n        Environments\", RFC\
    \ 1195, DEC, December 1990.\n   ROUTE:3.\n        Hedrick, C., \"Routing Information\
    \ Protocol\", RFC 1058, Rutgers\n        University, June 1988.\n   ROUTE:4.\n\
    \        Lougheed, K., and Y.  Rekhter, \"A Border Gateway Protocol 3\n      \
    \  (BGP-3)\", RFC 1267, cisco, T.J. Watson Research Center, IBM\n        Corp.,\
    \ October 1991.\n   ROUTE:5.\n        Gross, P, and Y.  Rekhter, \"Application\
    \ of the Border Gateway\n        Protocol in the Internet\", RFC 1772, T.J. Watson\
    \ Research\n        Center, IBM Corp., MCI, March 1995.\n   ROUTE:6.\n       \
    \ Mills, D., \"Exterior Gateway Protocol Formal Specification\", RFC\n       \
    \ 904, UDEL, April 1984.\n   ROUTE:7.\n        Rosen, E., \"Exterior Gateway Protocol\
    \ (EGP)\", RFC 827, BBN,\n        October 1982.\n   ROUTE:8.\n        Seamonson,\
    \ L, and E.  Rosen, \"STUB\" \"Exterior Gateway Protocol\",\n        RFC 888,\
    \ BBN, January 1984.\n   ROUTE:9.\n        Waitzman, D., Partridge, C., and S.\
    \  Deering, \"Distance Vector\n        Multicast Routing Protocol\", RFC 1075,\
    \ BBN, Stanford, November\n        1988.\n   ROUTE:10.\n        Deering, S., Multicast\
    \ Routing in Internetworks and Extended\n        LANs, Proceedings of '88, Association\
    \ for Computing Machinery,\n        August 1988.\n   ROUTE:11.\n        Almquist,\
    \ P., \"Type of Service in the Internet Protocol Suite\",\n        RFC 1349, Consultant,\
    \ July 1992.\n   ROUTE:12.\n        Rekhter, Y., \"Experience with the BGP Protocol\"\
    , RFC 1266, T.J.\n        Watson Research Center, IBM Corp., October 1991.\n \
    \  ROUTE:13.\n        Rekhter, Y., \"BGP Protocol Analysis\", RFC 1265, T.J. Watson\n\
    \        Research Center, IBM Corp., October 1991.\n   TRANS:1.\n        Postel,\
    \ J., \"User Datagram Protocol\", STD 6, RFC 768,\n        USC/Information Sciences\
    \ Institute, August 1980.\n   TRANS:2.\n        Postel, J., \"Transmission Control\
    \ Protocol\", STD 7, RFC 793,\n        USC/Information Sciences Institute, September\
    \ 1981.\n"
- title: APPENDIX A. REQUIREMENTS FOR SOURCE-ROUTING HOSTS
  contents:
  - "APPENDIX A. REQUIREMENTS FOR SOURCE-ROUTING HOSTS\n   Subject to restrictions\
    \ given below, a host MAY be able to act as an\n   intermediate hop in a source\
    \ route, forwarding a source-routed\n   datagram to the next specified hop.\n\
    \   However, in performing this router-like function, the host MUST obey\n   all\
    \ the relevant rules for a router forwarding source-routed\n   datagrams [INTRO:2].\
    \  This includes the following specific\n   provisions:\n   (A) TTL\n        The\
    \ TTL field MUST be decremented and the datagram perhaps\n        discarded as\
    \ specified for a router in [INTRO:2].\n   (B) ICMP Destination Unreachable\n\
    \        A host MUST be able to generate Destination Unreachable messages\n  \
    \      with the following codes:\n        4 (Fragmentation Required but DF Set)\
    \ when a source-routed\n          datagram cannot be fragmented to fit into the\
    \ target network;\n        5 (Source Route Failed) when a source-routed datagram\
    \ cannot be\n          forwarded, e.g., because of a routing problem or because\
    \ the\n          next hop of a strict source route is not on a connected\n   \
    \       network.\n   (C) IP Source Address\n        A source-routed datagram being\
    \ forwarded MAY (and normally will)\n        have a source address that is not\
    \ one of the IP addresses of the\n        forwarding host.\n   (D) Record Route\
    \ Option\n        A host that is forwarding a source-routed datagram containing\
    \ a\n        Record Route option MUST update that option, if it has room.\n  \
    \ (E) Timestamp Option\n        A host that is forwarding a source-routed datagram\
    \ containing a\n        Timestamp Option MUST add the current timestamp to that\
    \ option,\n        according to the rules for this option.\n   To define the rules\
    \ restricting host forwarding of source-routed\n   datagrams, we use the term\
    \ local source-routing if the next hop will\n   be through the same physical interface\
    \ through which the datagram\n   arrived; otherwise, it is non-local source-routing.\n\
    \   A host is permitted to perform local source-routing without\n   restriction.\n\
    \   A host that supports non-local source-routing MUST have a\n   configurable\
    \ switch to disable forwarding, and this switch MUST\n   default to disabled.\n\
    \   The host MUST satisfy all router requirements for configurable policy\n  \
    \ filters [INTRO:2] restricting non-local forwarding.\n   If a host receives a\
    \ datagram with an incomplete source route but\n   does not forward it for some\
    \ reason, the host SHOULD return an ICMP\n   Destination Unreachable (code 5,\
    \ Source Route Failed) message, unless\n   the datagram was itself an ICMP error\
    \ message.\n"
- title: APPENDIX B. GLOSSARY
  contents:
  - "APPENDIX B. GLOSSARY\n   This Appendix defines specific terms used in this memo.\
    \  It also\n   defines some general purpose terms that may be of interest.  See\
    \ also\n   [INTRO:9] for a more general set of definitions.\n   Autonomous System\
    \ (AS)\n        An Autonomous System (AS) is a connected segment of a network\n\
    \        topology that consists of a collection of subnetworks (with\n       \
    \ hosts attached) interconnected by a set of routes.  The\n        subnetworks\
    \ and the routers are expected to be under the control\n        of a single operations\
    \ and maintenance (O&M) organization.\n        Within an AS routers may use one\
    \ or more interior routing\n        protocols, and sometimes several sets of metrics.\
    \  An AS is\n        expected to present to other ASs an appearence of a coherent\n\
    \        interior routing plan, and a consistent picture of the\n        destinations\
    \ reachable through the AS.  An AS is identified by\n        an Autonomous System\
    \ number.\n   Connected Network\n        A network prefix to which a router is\
    \ interfaced is often known\n        as a local network or the subnetwork of that\
    \ router.  However,\n        these terms can cause confusion, and therefore we\
    \ use the term\n        Connected Network in this memo.\n   Connected (Sub)Network\n\
    \        A Connected (Sub)Network is an IP subnetwork to which a router\n    \
    \    is interfaced, or a connected network if the connected network\n        is\
    \ not subnetted.  See also Connected Network.\n   Datagram\n        The unit transmitted\
    \ between a pair of internet modules.  Data,\n        called datagrams, from sources\
    \ to destinations.  The Internet\n        Protocol does not provide a reliable\
    \ communication facility.\n        There are no acknowledgments either end-to-end\
    \ or hop-by-hop.\n        There is no error no retransmissions.  There is no flow\
    \ control.\n        See IP.\n   Default Route\n        A routing table entry that\
    \ is used to direct any data addressed\n        to any network prefixes not explicitly\
    \ listed in the routing\n        table.\n   Dense Mode\n        In multicast forwarding,\
    \ two paradigms are possible: in Dense\n        Mode forwarding, a network multicast\
    \ is forwarded as a data link\n        layer multicast to all interfaces except\
    \ that on which it was\n        received, unless and until the router is instructed\
    \ not to by a\n        multicast routing neighbor.  See Sparse Mode.\n   EGP\n\
    \        Exterior Gateway Protocol A protocol that distributes routing\n     \
    \   information to the gateways (routers) which connect autonomous\n        systems.\
    \  See IGP.\n   EGP-2\n        Exterior Gateway Protocol version 2 This is an\
    \ EGP routing\n        protocol developed to handle traffic between Autonomous\
    \ Systems\n        in the Internet.\n   Forwarder\n        The logical entity\
    \ within a router that is responsible for\n        switching packets among the\
    \ router's interfaces.  The Forwarder\n        also makes the decisions to queue\
    \ a packet for local delivery,\n        to queue a packet for transmission out\
    \ another interface, or\n        both.\n   Forwarding\n        Forwarding is the\
    \ process a router goes through for each packet\n        received by the router.\
    \  The packet may be consumed by the\n        router, it may be output on one\
    \ or more interfaces of the\n        router, or both.  Forwarding includes the\
    \ process of deciding\n        what to do with the packet as well as queuing it\
    \ up for\n        (possible) output or internal consumption.\n   Forwarding Information\
    \ Base (FIB)\n        The table containing the information necessary to forward\
    \ IP\n        Datagrams, in this document, is called the Forwarding\n        Information\
    \ Base.  At minimum, this contains the interface\n        identifier and next\
    \ hop information for each reachable\n        destination network prefix.\n  \
    \ Fragment\n        An IP datagram that represents a portion of a higher layer's\n\
    \        packet that was too large to be sent in its entirety over the\n     \
    \   output network.\n   General Purpose Serial Interface\n        A physical medium\
    \ capable of connecting exactly two systems, and\n        therefore configurable\
    \ as a point to point line, but also\n        configurable to support link layer\
    \ networking using protocols\n        such as X.25 or Frame Relay.  A link layer\
    \ network connects\n        another system to a switch, and a higher communication\
    \ layer\n        multiplexes virtual circuits on the connection.  See Point to\n\
    \        Point Line.\n   IGP\n        Interior Gateway Protocol A protocol that\
    \ distributes routing\n        information with an Autonomous System (AS).  See\
    \ EGP.\n   Interface IP Address\n        The IP Address and network prefix length\
    \ that is assigned to a\n        specific interface of a router.\n   Internet\
    \ Address\n        An assigned number that identifies a host in an internet. \
    \ It\n        has two parts: an IP address and a prefix length.  The prefix\n\
    \        length indicates how many of the most specific bits of the\n        address\
    \ constitute the network prefix.\n   IP\n        Internet Protocol The network\
    \ layer protocol for the Internet.\n        It is a packet switching, datagram\
    \ protocol defined in RFC 791.\n        IP does not provide a reliable communications\
    \ facility; that is,\n        there are no end-to-end of hop-by-hop acknowledgments.\n\
    \   IP Datagram\n        An IP Datagram is the unit of end-to-end transmission\
    \ in the\n        Internet Protocol.  An IP Datagram consists of an IP header\n\
    \        followed by all of higher-layer data (such as TCP, UDP, ICMP,\n     \
    \   and the like).  An IP Datagram is an IP header followed by a\n        message.\n\
    \        An IP Datagram is a complete IP end-to-end transmission unit.\n     \
    \   An IP Datagram is composed of one or more IP Fragments.\n        In this memo,\
    \ the unqualified term Datagram should be understood\n        to refer to an IP\
    \ Datagram.\n   IP Fragment\n        An IP Fragment is a component of an IP Datagram.\
    \  An IP Fragment\n        consists of an IP header followed by all or part of\
    \ the higher-\n        layer of the original IP Datagram.\n        One or more\
    \ IP Fragments comprises a single IP Datagram.\n        In this memo, the unqualified\
    \ term Fragment should be understood\n        to refer to an IP Fragment.\n  \
    \ IP Packet\n        An IP Datagram or an IP Fragment.\n        In this memo,\
    \ the unqualified term Packet should generally be\n        understood to refer\
    \ to an IP Packet.\n   Logical [network] interface\n        We define a logical\
    \ [network] interface to be a logical path,\n        distinguished by a unique\
    \ IP address, to a connected network.\n   Martian Filtering\n        A packet\
    \ that contains an invalid source or destination address\n        is considered\
    \ to be martian and discarded.\n   MTU (Maximum Transmission Unit)\n        The\
    \ size of the largest packet that can be transmitted or\n        received through\
    \ a logical interface.  This size includes the IP\n        header but does not\
    \ include the size of any Link Layer headers\n        or framing.\n   Multicast\n\
    \        A packet that is destined for multiple hosts.  See broadcast.\n   Multicast\
    \ Address\n        A special type of address that is recognizable by multiple\n\
    \        hosts.\n        A Multicast Address is sometimes known as a Functional\
    \ Address\n        or a Group Address.\n   Network Prefix\n        The portion\
    \ of an IP Address that signifies a set of systems.\n        It is selected from\
    \ the IP Address by logically ANDing a subnet\n        mask with the address,\
    \ or (equivalently) setting the bits of the\n        address not among the most\
    \ significant <prefix-length> bits of\n        the address to zero.\n   Originate\n\
    \        Packets can be transmitted by a router for one of two reasons:\n    \
    \    1) the packet was received and is being forwarded or 2) the\n        router\
    \ itself created the packet for transmission (such as route\n        advertisements).\
    \  Packets that the router creates for\n        transmission are said to originate\
    \ at the router.\n   Packet\n        A packet is the unit of data passed across\
    \ the interface between\n        the Internet Layer and the Link Layer.  It includes\
    \ an IP header\n        and data.  A packet may be a complete IP datagram or a\
    \ fragment\n        of an IP datagram.\n   Path\n        The sequence of routers\
    \ and (sub-)networks that a packet\n        traverses from a particular router\
    \ to a particular destination\n        host.  Note that a path is uni-directional;\
    \ it is not unusual to\n        have different paths in the two directions between\
    \ a given host\n        pair.\n   Physical Network\n        A Physical Network\
    \ is a network (or a piece of an internet)\n        which is contiguous at the\
    \ Link Layer.  Its internal structure\n        (if any) is transparent to the\
    \ Internet Layer.\n        In this memo, several media components that are connected\
    \ using\n        devices such as bridges or repeaters are considered to be a\n\
    \        single Physical Network since such devices are transparent to\n     \
    \   the IP.\n   Physical Network Interface\n        This is a physical interface\
    \ to a Connected Network and has a\n        (possibly unique) Link-Layer address.\
    \  Multiple Physical Network\n        Interfaces on a single router may share\
    \ the same Link-Layer\n        address, but the address must be unique for different\
    \ routers on\n        the same Physical Network.\n   Point to Point Line\n   \
    \     A physical medium capable of connecting exactly two systems.  In\n     \
    \   this document, it is only used to refer to such a line when used\n       \
    \ to connect IP entities.  See General Purpose Serial Interface.\n   router\n\
    \        A special-purpose dedicated computer that connects several\n        networks.\
    \  Routers switch packets between these networks in a\n        process known as\
    \ forwarding.  This process may be repeated\n        several times on a single\
    \ packet by multiple routers until the\n        packet can be delivered to the\
    \ final destination - switching the\n        packet from router to router to router...\
    \  until the packet gets\n        to its destination.\n   RPF\n        Reverse\
    \ Path Forwarding - A method used to deduce the next hops\n        for broadcast\
    \ and multicast packets.\n   Silently Discard\n        This memo specifies several\
    \ cases where a router is to Silently\n        Discard a received packet (or datagram).\
    \  This means that the\n        router should discard the packet without further\
    \ processing, and\n        that the router will not send any ICMP error message\
    \ (see\n        Section [4.3.2]) as a result.  However, for diagnosis of\n   \
    \     problems, the router should provide the capability of logging\n        the\
    \ error (see Section [1.3.3]), including the contents of the\n        silently\
    \ discarded packet, and should record the event in a\n        statistics counter.\n\
    \   Silently Ignore\n        A router is said to Silently Ignore an error or condition\
    \ if it\n        takes no action other than possibly generating an error report\n\
    \        in an error log or through some network management protocol, and\n  \
    \      discarding, or ignoring, the source of the error.  In\n        particular,\
    \ the router does NOT generate an ICMP error message.\n   Sparse Mode\n      \
    \  In multicast forwarding, two paradigms are possible: in Sparse\n        Mode\
    \ forwarding, a network layer multicast datagram is forwarded\n        as a data\
    \ link layer multicast frame to routers and hosts that\n        have asked for\
    \ it.  The initial forwarding state is the inverse\n        of dense-mode in that\
    \ it assumes no part  of the network wants\n        the data.  See Dense Mode.\n\
    \   Specific-destination address\n        This is defined to be the destination\
    \ address in the IP header\n        unless the header contains an IP broadcast\
    \ or IP multicast\n        address, in which case the specific-destination is\
    \ an IP address\n        assigned to the physical interface on which the packet\
    \ arrived.\n   subnet\n        A portion of a network, which may be a physically\
    \ independent\n        network, which shares a network address with other portions\
    \ of\n        the network and is distinguished by a subnet number.  A subnet\n\
    \        is to a network what a network is to an internet.\n   subnet number\n\
    \        A part of the internet address that designates a subnet.  It is\n   \
    \     ignored for the purposes internet routing, but is used for\n        intranet\
    \ routing.\n   TOS\n        Type Of Service A field in the IP header that represents\
    \ the\n        degree of reliability expected from the network layer by the\n\
    \        transport layer or application.\n   TTL\n        Time To Live A field\
    \ in the IP header that represents how long a\n        packet is considered valid.\
    \  It is a combination hop count and\n        timer value.\n"
- title: APPENDIX C. FUTURE DIRECTIONS
  contents:
  - "APPENDIX C. FUTURE DIRECTIONS\n   This appendix lists work that future revisions\
    \ of this document may\n   wish to address.\n   In the preparation of Router Requirements,\
    \ we stumbled across several\n   other architectural issues.  Each of these is\
    \ dealt with somewhat in\n   the document, but still ought to be classified as\
    \ an open issue in\n   the IP architecture.\n   Most of the he topics presented\
    \ here generally indicate areas where\n   the technology is still relatively new\
    \ and it is not appropriate to\n   develop specific requirements since the community\
    \ is still gaining\n   operational experience.\n   Other topics represent areas\
    \ of ongoing research and indicate areas\n   that the prudent developer would\
    \ closely monitor.\n   (1) SNMP Version 2\n   (2) Additional SNMP MIBs\n   (7)\
    \ More detailed requirements for leaking routes between routing\n        protocols\n\
    \   (8) Router system security\n   (9) Routing protocol security\n   (10) Internetwork\
    \ Protocol layer security.  There has been extensive\n        work refining the\
    \ security of IP since the original work writing\n        this document.  This\
    \ security work should be included in here.\n   (12) Load Splitting\n   (13) Sending\
    \ fragments along different paths\n   (15) Multiple logical (sub)nets on the same\
    \ wire.  Router\n        Requirements does not require support for this.  We made\
    \ some\n        attempt to identify pieces of the architecture (e.g., forwarding\n\
    \        of directed broadcasts and issuing of Redirects) where the\n        wording\
    \ of the rules has to be done carefully to make the right\n        thing happen,\
    \ and tried to clearly distinguish logical\n        interfaces from physical interfaces.\
    \  However, we did not study\n        this issue in detail, and we are not at\
    \ all confident that all\n        the rules in the document are correct in the\
    \ presence of\n        multiple logical (sub)nets on the same wire.\n   (15) Congestion\
    \ control and resource management.  On the advice of\n        the IETF's experts\
    \ (Mankin and Ramakrishnan) we deprecated\n        (SHOULD NOT) Source Quench\
    \ and said little else concrete\n        (Section 5.3.6).\n   (16) Developing\
    \ a Link-Layer requirements document that would be\n        common for both routers\
    \ and hosts.\n   (17) Developing a common PPP LQM algorithm.\n   (18) Investigate\
    \ of other information (above and beyond section\n        [3.2]) that passes between\
    \ the layers, such as physical network\n        MTU, mappings of IP precedence\
    \ to Link Layer priority values,\n        etc.\n   (19) Should the Link Layer\
    \ notify IP if address resolution failed\n        (just like it notifies IP when\
    \ there is a Link Layer priority\n        value problem)?\n   (20) Should all\
    \ routers be required to implement a DNS resolver?\n   (21) Should a human user\
    \ be able to use a host name anywhere you can\n        use an IP address when\
    \ configuring the router?  Even in ping and\n        traceroute?\n   (22) Almquist's\
    \ draft ruminations on the next hop and ruminations on\n        route leaking\
    \ need to be reviewed, brought up to date, and\n        published.\n   (23) Investigation\
    \ is needed to determine if a redirect message for\n        precedence is needed\
    \ or not.  If not, are the type-of-service\n        redirects acceptable?\n  \
    \ (24) RIPv2 and RIP+CIDR and variable length network prefixes.\n   (25) BGP-4\
    \ CIDR is going to be important, and everyone is betting on\n        BGP-4.  We\
    \ can't avoid mentioning it.  Probably need to describe\n        the differences\
    \ between BGP-3 and BGP-4, and explore upgrade\n        issues...\n   (26) Loose\
    \ Source Route Mobile IP and some multicasting may require\n        this.  Perhaps\
    \ it should be elevated to a SHOULD (per Fred\n        Baker's Suggestion).\n"
- title: APPENDIX D. Multicast Routing Protocols
  contents:
  - "APPENDIX D. Multicast Routing Protocols\n   Multicasting is a relatively new\
    \ technology within the Internet\n   Protocol family.  It is not widely deployed\
    \ or commonly in use yet.\n   Its importance, however, is expected to grow over\
    \ the coming years.\n   This Appendix describes some of the technologies being\
    \ investigated\n   for routing multicasts through the Internet.\n   A diligent\
    \ implementor will keep abreast of developments in this area\n   to properly develop\
    \ multicast facilities.\n   This Appendix does not specify any standards or requirements.\n"
- title: D.1 Introduction
  contents:
  - "D.1 Introduction\n   Multicast routing protocols enable the forwarding of IP\
    \ multicast\n   datagrams throughout a TCP/IP internet.  Generally these algorithms\n\
    \   forward the datagram based on its source and destination addresses.\n   Additionally,\
    \ the datagram may need to be forwarded to several\n   multicast group members,\
    \ at times requiring the datagram to be\n   replicated and sent out multiple interfaces.\n\
    \   The state of multicast routing protocols is less developed than the\n   protocols\
    \ available for the forwarding of IP unicasts.  Three\n   experimental multicast\
    \ routing protocols have been documented for\n   TCP/IP.  Each uses the IGMP protocol\
    \ (discussed in Section [4.4]) to\n   monitor multicast group membership.\n"
- title: D.2 Distance Vector Multicast Routing Protocol - DVMRP
  contents:
  - "D.2 Distance Vector Multicast Routing Protocol - DVMRP\n   DVMRP, documented\
    \ in [ROUTE:9], is based on Distance Vector or\n   Bellman-Ford technology.  It\
    \ routes multicast datagrams only, and\n   does so within a single Autonomous\
    \ System.  DVMRP is an\n   implementation of the Truncated Reverse Path Broadcasting\
    \ algorithm\n   described in [ROUTE:10].  In addition, it specifies the tunneling\
    \ of\n   IP multicasts through non-multicast-routing-capable IP domains.\n"
- title: D.3 Multicast Extensions to OSPF - MOSPF
  contents:
  - "D.3 Multicast Extensions to OSPF - MOSPF\n   MOSPF, currently under development,\
    \ is a backward-compatible addition\n   to OSPF that allows the forwarding of\
    \ both IP multicasts and unicasts\n   within an Autonomous System.  MOSPF routers\
    \ can be mixed with OSPF\n   routers within a routing domain, and they will interoperate\
    \ in the\n   forwarding of unicasts.  OSPF is a link-state or SPF-based protocol.\n\
    \   By adding link state advertisements that pinpoint group membership,\n   MOSPF\
    \ routers can calculate the path of a multicast datagram as a\n   tree rooted\
    \ at the datagram source.  Those branches that do not\n   contain group members\
    \ can then be discarded, eliminating unnecessary\n   datagram forwarding hops.\n"
- title: D.4 Protocol Independent Multicast - PIM
  contents:
  - "D.4 Protocol Independent Multicast - PIM\n   PIM, currently under development,\
    \ is a multicast routing protocol\n   that runs over an existing unicast infrastructure.\
    \  PIM provides for\n   both dense and sparse group membership.  It is different\
    \ from other\n   protocols, since it uses an explicit join model for sparse groups.\n\
    \   Joining occurs on a shared tree and can switch to a per-source tree.\n   Where\
    \ bandwidth is plentiful and group membership is dense, overhead\n   can be reduced\
    \ by flooding data out all links and later pruning\n   exception cases where there\
    \ are no group members.\n"
- title: APPENDIX E Additional Next-Hop Selection Algorithms
  contents:
  - "APPENDIX E Additional Next-Hop Selection Algorithms\n   Section [5.2.4.3] specifies\
    \ an algorithm that routers ought to use\n   when selecting a next-hop for a packet.\n\
    \   This appendix provides historical perspective for the next-hop\n   selection\
    \ problem.  It also presents several additional pruning rules\n   and next-hop\
    \ selection algorithms that might be found in the\n   Internet.\n   This appendix\
    \ presents material drawn from an earlier, unpublished,\n   work by Philip Almquist;\
    \ Ruminations on the Next Hop.\n   This Appendix does not specify any standards\
    \ or requirements.\n"
- title: E.1. Some Historical Perspective
  contents:
  - "E.1. Some Historical Perspective\n   It is useful to briefly review the history\
    \ of the topic, beginning\n   with what is sometimes called the \"classic model\"\
    \ of how a router\n   makes routing decisions.  This model predates IP.  In this\
    \ model, a\n   router speaks some single routing protocol such as RIP.  The protocol\n\
    \   completely determines the contents of the router's Forwarding\n   Information\
    \ Base (FIB).  The route lookup algorithm is trivial: the\n   router looks in\
    \ the FIB for a route whose destination attribute\n   exactly matches the network\
    \ prefix portion of the destination address\n   in the packet.  If one is found,\
    \ it is used; if none is found, the\n   destination is unreachable.  Because the\
    \ routing protocol keeps at\n   most one route to each destination, the problem\
    \ of what to do when\n   there are multiple routes that match the same destination\
    \ cannot\n   arise.\n   Over the years, this classic model has been augmented\
    \ in small ways.\n   With the deployment of default routes, subnets, and host\
    \ routes, it\n   became possible to have more than one routing table entry which\
    \ in\n   some sense matched the destination.  This was easily resolved by a\n\
    \   consensus that there was a hierarchy of routes: host routes should be\n  \
    \ preferred over subnet routes, subnet routes over net routes, and net\n   routes\
    \ over default routes.\n   With the deployment of technologies supporting variable\
    \ length subnet\n   masks (variable length network prefixes), the general approach\n\
    \   remained the same although its description became a little more\n   complicated;\
    \ network prefixes were introduced as a conscious\n   simplification and regularization\
    \ of the architecture.  We now say\n   that each route to a network prefix route\
    \ has a prefix length\n   associated with it.  This prefix length indicates the\
    \ number of bits\n   in the prefix.  This may also be represented using the classical\n\
    \   subnet mask.  A route cannot be used to route a packet unless each\n   significant\
    \ bit in the route's network prefix matches the\n   corresponding bit in the packet's\
    \ destination address.  Routes with\n   more bits set in their masks are preferred\
    \ over routes that have\n   fewer bits set in their masks.  This is simply a generalization\
    \ of\n   the hierarchy of routes described above, and will be referred to for\n\
    \   the rest of this memo as choosing a route by preferring longest\n   match.\n\
    \   Another way the classic model has been augmented is through a small\n   amount\
    \ of relaxation of the notion that a routing protocol has\n   complete control\
    \ over the contents of the routing table.  First,\n   static routes were introduced.\
    \  For the first time, it was possible\n   to simultaneously have two routes (one\
    \ dynamic and one static) to the\n   same destination.  When this happened, a\
    \ router had to have a policy\n   (in some cases configurable, and in other cases\
    \ chosen by the author\n   of the router's software) which determined whether\
    \ the static route\n   or the dynamic route was preferred.  However, this policy\
    \ was only\n   used as a tie-breaker when longest match didn't uniquely determine\n\
    \   which route to use.  Thus, for example, a static default route would\n   never\
    \ be preferred over a dynamic net route even if the policy\n   preferred static\
    \ routes over dynamic routes.\n   The classic model had to be further augmented\
    \ when inter-domain\n   routing protocols were invented.  Traditional routing\
    \ protocols came\n   to be called \"interior gateway protocols\" (IGPs), and at\
    \ each\n   Internet site there was a strange new beast called an \"exterior\n\
    \   gateway\", a router that spoke EGP to several \"BBN Core Gateways\" (the\n\
    \   routers that made up the Internet backbone at the time) at the same\n   time\
    \ as it spoke its IGP to the other routers at its site.  Both\n   protocols wanted\
    \ to determine the contents of the router's routing\n   table.  Theoretically,\
    \ this could result in a router having three\n   routes (EGP, IGP, and static)\
    \ to the same destination.  Because of\n   the Internet topology at the time,\
    \ it was resolved with little debate\n   that routers would be best served by\
    \ a policy of preferring IGP\n   routes over EGP routes.  However, the sanctity\
    \ of longest match\n   remained unquestioned: a default route learned from the\
    \ IGP would\n   never be preferred over a net route from learned EGP.\n   Although\
    \ the Internet topology, and consequently routing in the\n   Internet, have evolved\
    \ considerably since then, this slightly\n   augmented version of the classic\
    \ model has survived intact to this\n   day in the Internet (except that BGP has\
    \ replaced EGP).  Conceptually\n   (and often in implementation) each router has\
    \ a routing table and one\n   or more routing protocol processes.  Each of these\
    \ processes can add\n   any entry that it pleases, and can delete or modify any\
    \ entry that it\n   has created.  When routing a packet, the router picks the\
    \ best route\n   using longest match, augmented with a policy mechanism to break\
    \ ties.\n   Although this augmented classic model has served us well, it has a\n\
    \   number of shortcomings:\n   o It ignores (although it could be augmented to\
    \ consider) path\n      characteristics such as quality of service and MTU.\n\
    \   o It doesn't support routing protocols (such as OSPF and Integrated\n    \
    \  IS-IS) that require route lookup algorithms different than pure\n      longest\
    \ match.\n   o There has not been a firm consensus on what the tie-breaking\n\
    \      mechanism ought to be.  Tie-breaking mechanisms have often been\n     \
    \ found to be difficult if not impossible to configure in such a way\n      that\
    \ the router will always pick what the network manger considers\n      to be the\
    \ \"correct\" route.\n"
- title: E.2. Additional Pruning Rules
  contents:
  - "E.2. Additional Pruning Rules\n      Section [5.2.4.3] defined several pruning\
    \ rules to use to select\n      routes from the FIB.  There are other rules that\
    \ could also be\n      used.\n      o OSPF Route Class\n         Routing protocols\
    \ that have areas or make a distinction between\n         internal and external\
    \ routes divide their routes into classes\n         by the type of information\
    \ used to calculate the route.  A\n         route is always chosen from the most\
    \ preferred class unless\n         none is available, in which case one is chosen\
    \ from the second\n         most preferred class, and so on.  In OSPF, the classes\
    \ (in\n         order from most preferred to least preferred) are intra-area,\n\
    \         inter-area, type 1 external (external routes with internal\n       \
    \  metrics), and type 2 external.  As an additional wrinkle, a\n         router\
    \ is configured to know what addresses ought to be\n         accessible using\
    \ intra-area routes, and will not use inter-\n         area or external routes\
    \ to reach these destinations even when\n         no intra-area route is available.\n\
    \         More precisely, we assume that each route has a class\n         attribute,\
    \ called route.class, which is assigned by the routing\n         protocol.  The\
    \ set of candidate routes is examined to determine\n         if it contains any\
    \ for which route.class = intra-area.  If so,\n         all routes except those\
    \ for which route.class = intra-area are\n         discarded.  Otherwise, router\
    \ checks whether the packet's\n         destination falls within the address ranges\
    \ configured for the\n         local area.  If so, the entire set of candidate\
    \ routes is\n         deleted.  Otherwise, the set of candidate routes is examined\
    \ to\n         determine if it contains any for which route.class = inter-\n \
    \        area.  If so, all routes except those for which route.class =\n     \
    \    inter-area are discarded.  Otherwise, the set of candidate\n         routes\
    \ is examined to determine if it contains any for which\n         route.class\
    \ = type 1 external.  If so, all routes except those\n         for which route.class\
    \ = type 1 external are discarded.\n      o IS-IS Route Class\n         IS-IS\
    \ route classes work identically to OSPF's.  However, the\n         set of classes\
    \ defined by Integrated IS-IS is different, such\n         that there isn't a\
    \ one-to-one mapping between IS-IS route\n         classes and OSPF route classes.\
    \  The route classes used by\n         Integrated IS-IS are (in order from most\
    \ preferred to least\n         preferred) intra-area, inter-area, and external.\n\
    \         The Integrated IS-IS internal class is equivalent to the OSPF\n    \
    \     internal class.  Likewise, the Integrated IS-IS external class\n       \
    \  is equivalent to OSPF's type 2 external class.  However,\n         Integrated\
    \ IS-IS does not make a distinction between inter-area\n         routes and external\
    \ routes with internal metrics - both are\n         considered to be inter-area\
    \ routes.  Thus, OSPF prefers true\n         inter-area routes over external routes\
    \ with internal metrics,\n         whereas Integrated IS-IS gives the two types\
    \ of routes equal\n         preference.\n      o IDPR Policy\n         A specific\
    \ case of Policy.  The IETF's Inter-domain Policy\n         Routing Working Group\
    \ is devising a routing protocol called\n         Inter-Domain Policy Routing\
    \ (IDPR) to support true policy-based\n         routing in the Internet.  Packets\
    \ with certain combinations of\n         header attributes (such as specific combinations\
    \ of source and\n         destination addresses or special IDPR source route options)\
    \ are\n         required to use routes provided by the IDPR protocol.  Thus,\n\
    \         unlike other Policy pruning rules, IDPR Policy would have to be\n  \
    \       applied before any other pruning rules except Basic Match.\n         Specifically,\
    \ IDPR Policy examines the packet being forwarded\n         to ascertain if its\
    \ attributes require that it be forwarded\n         using policy-based routes.\
    \  If so, IDPR Policy deletes all\n         routes not provided by the IDPR protocol.\n"
- title: E.3 Some Route Lookup Algorithms
  contents:
  - "E.3 Some Route Lookup Algorithms\n      This section examines several route lookup\
    \ algorithms that are in\n      use or have been proposed.  Each is described\
    \ by giving the\n      sequence of pruning rules it uses.  The strengths and weaknesses\n\
    \      of each algorithm are presented\n"
- title: E.3.1 The Revised Classic Algorithm
  contents:
  - "E.3.1 The Revised Classic Algorithm\n      The Revised Classic Algorithm is the\
    \ form of the traditional\n      algorithm that was discussed in Section [E.1].\
    \  The steps of this\n      algorithm are:\n      1.  Basic match\n      2.  Longest\
    \ match\n      3.  Best metric\n      4.  Policy\n      Some implementations omit\
    \ the Policy step, since it is needed only\n      when routes may have metrics\
    \ that are not comparable (because they\n      were learned from different routing\
    \ domains).\n      The advantages of this algorithm are:\n      (1) It is widely\
    \ implemented.\n      (2) Except for the Policy step (which an implementor can\
    \ choose to\n           make arbitrarily complex) the algorithm is simple both\
    \ to\n           understand and to implement.\n      Its disadvantages are:\n\
    \      (1) It does not handle IS-IS or OSPF route classes, and therefore\n   \
    \        cannot be used for Integrated IS-IS or OSPF.\n      (2) It does not handle\
    \ TOS or other path attributes.\n      (3) The policy mechanisms are not standardized\
    \ in any way, and are\n           therefore are often implementation-specific.\
    \  This causes\n           extra work for implementors (who must invent appropriate\n\
    \           policy mechanisms) and for users (who must learn how to use\n    \
    \       the mechanisms. This lack of a standardized mechanism also\n         \
    \  makes it difficult to build consistent configurations for\n           routers\
    \ from different vendors. This presents a significant\n           practical deterrent\
    \ to multi-vendor interoperability.\n      (4) The proprietary policy mechanisms\
    \ currently provided by\n           vendors are often inadequate in complex parts\
    \ of the\n           Internet.\n      (5) The algorithm has not been written down\
    \ in any generally\n           available document or standard.  It is, in effect,\
    \ a part of\n           the Internet Folklore.\n"
- title: E.3.2 The Variant Router Requirements Algorithm
  contents:
  - "E.3.2 The Variant Router Requirements Algorithm\n      Some Router Requirements\
    \ Working Group members have proposed a\n      slight variant of the algorithm\
    \ described in the Section\n      [5.2.4.3].  In this variant, matching the type\
    \ of service\n      requested is considered to be more important, rather than\
    \ less\n      important, than matching as much of the destination address as\n\
    \      possible.  For example, this algorithm would prefer a default\n      route\
    \ that had the correct type of service over a network route\n      that had the\
    \ default type of service, whereas the algorithm in\n      [5.2.4.3] would make\
    \ the opposite choice.\n      The steps of the algorithm are:\n      1.  Basic\
    \ match\n      2.  Weak TOS\n      3.  Longest match\n      4.  Best metric\n\
    \      5.  Policy\n      Debate between the proponents of this algorithm and the\
    \ regular\n      Router Requirements Algorithm suggests that each side can show\n\
    \      cases where its algorithm leads to simpler, more intuitive routing\n  \
    \    than the other's algorithm does.  This variant has the same set of\n    \
    \  advantages and disadvantages that the algorithm specified in\n      [5.2.4.3]\
    \ does, except that pruning on Weak TOS before pruning on\n      Longest Match\
    \ makes this algorithm less compatible with OSPF and\n      Integrated IS-IS than\
    \ the standard Router Requirements Algorithm.\n"
- title: E.3.3 The OSPF Algorithm
  contents:
  - "E.3.3 The OSPF Algorithm\n      OSPF uses an algorithm that is virtually identical\
    \ to the Router\n      Requirements Algorithm except for one crucial difference:\
    \ OSPF\n      considers OSPF route classes.\n      The algorithm is:\n      1.\
    \  Basic match\n      2.  OSPF route class\n      3.  Longest match\n      4.\
    \  Weak TOS\n      5.  Best metric\n      6.  Policy\n      Type of service support\
    \ is not always present.  If it is not\n      present then, of course, the fourth\
    \ step would be omitted\n      This algorithm has some advantages over the Revised\
    \ Classic\n      Algorithm:\n      (1) It supports type of service routing.\n\
    \      (2) Its rules are written down, rather than merely being a part of\n  \
    \         the Internet folklore.\n      (3) It (obviously) works with OSPF.\n\
    \      However, this algorithm also retains some of the disadvantages of\n   \
    \   the Revised Classic Algorithm:\n      (1) Path properties other than type\
    \ of service (e.g., MTU) are\n           ignored.\n      (2) As in the Revised\
    \ Classic Algorithm, the details (or even the\n           existence) of the Policy\
    \ step are left to the discretion of\n           the implementor.\n      The OSPF\
    \ Algorithm also has a further disadvantage (which is not\n      shared by the\
    \ Revised Classic Algorithm).  OSPF internal (intra-\n      area or inter-area)\
    \ routes are always considered to be superior to\n      routes learned from other\
    \ routing protocols, even in cases where\n      the OSPF route matches fewer bits\
    \ of the destination address.\n      This is a policy decision that is inappropriate\
    \ in some networks.\n      Finally, it is worth noting that the OSPF Algorithm's\
    \ TOS support\n      suffers from a deficiency in that routing protocols that\
    \ support\n      TOS are implicitly preferred when forwarding packets that have\n\
    \      non-zero TOS values.  This may not be appropriate in some cases.\n"
- title: E.3.4 The Integrated IS-IS Algorithm
  contents:
  - "E.3.4 The Integrated IS-IS Algorithm\n   Integrated IS-IS uses an algorithm that\
    \ is similar to but not quite\n   identical to the OSPF Algorithm.  Integrated\
    \ IS-IS uses a different\n   set of route classes, and differs slightly in its\
    \ handling of type of\n   service.  The algorithm is:\n   1.  Basic Match\n  \
    \ 2.  IS-IS Route Classes\n   3.  Longest Match\n   4.  Weak TOS\n   5.  Best\
    \ Metric\n   6.  Policy\n   Although Integrated IS-IS uses Weak TOS, the protocol\
    \ is only capable\n   of carrying routes for a small specific subset of the possible\
    \ values\n   for the TOS field in the IP header.  Packets containing other values\n\
    \   in the TOS field are routed using the default TOS.\n   Type of service support\
    \ is optional; if disabled, the fourth step\n   would be omitted.  As in OSPF,\
    \ the specification does not include the\n   Policy step.\n   This algorithm has\
    \ some advantages over the Revised Classic\n   Algorithm:\n   (1) It supports\
    \ type of service routing.\n   (2) Its rules are written down, rather than merely\
    \ being a part of\n        the Internet folklore.\n   (3) It (obviously) works\
    \ with Integrated IS-IS.\n   However, this algorithm also retains some of the\
    \ disadvantages of the\n   Revised Classic Algorithm:\n   (1) Path properties\
    \ other than type of service (e.g., MTU) are\n        ignored.\n   (2) As in the\
    \ Revised Classic Algorithm, the details (or even the\n        existence) of the\
    \ Policy step are left to the discretion of the\n        implementor.\n   (3)\
    \ It doesn't work with OSPF because of the differences between IS-\n        IS\
    \ route classes and OSPF route classes.  Also, because IS-IS\n        supports\
    \ only a subset of the possible TOS values, some obvious\n        implementations\
    \ of the Integrated IS-IS algorithm would not\n        support OSPF's interpretation\
    \ of TOS.\n   The Integrated IS-IS Algorithm also has a further disadvantage (which\n\
    \   is not shared by the Revised Classic Algorithm): IS-IS internal\n   (intra-area\
    \ or inter-area) routes are always considered to be\n   superior to routes learned\
    \ from other routing protocols, even in\n   cases where the IS-IS route matches\
    \ fewer bits of the destination\n   address and doesn't provide the requested\
    \ type of service.  This is a\n   policy decision that may not be appropriate\
    \ in all cases.\n   Finally, it is worth noting that the Integrated IS-IS Algorithm's\
    \ TOS\n   support suffers from the same deficiency noted for the OSPF\n   Algorithm.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Although the focus of this document is interoperability\
    \ rather than\n   security, there are obviously many sections of this document\
    \ that\n   have some ramifications on network security.\n   Security means different\
    \ things to different people.  Security from a\n   router's point of view is anything\
    \ that helps to keep its own\n   networks operational and in addition helps to\
    \ keep the Internet as a\n   whole healthy.  For the purposes of this document,\
    \ the security\n   services we are concerned with are denial of service, integrity,\
    \ and\n   authentication as it applies to the first two.  Privacy as a security\n\
    \   service is important, but only peripherally a concern of a router -\n   at\
    \ least as of the date of this document.\n   In several places in this document\
    \ there are sections entitled ...\n   Security Considerations.  These sections\
    \ discuss specific\n   considerations that apply to the general topic under discussion.\n\
    \   Rarely does this document say do this and your router/network will be\n  \
    \ secure.  More likely, it says this is a good idea and if you do it,\n   it *may*\
    \ improve the security of the Internet and your local system\n   in general.\n\
    \   Unfortunately, this is the state-of-the-art AT THIS TIME.  Few if any\n  \
    \ of the network protocols a router is concerned with have reasonable,\n   built-in\
    \ security features.  Industry and the protocol designers have\n   been and are\
    \ continuing to struggle with these issues.  There is\n   progress, but only small\
    \ baby steps such as the peer-to-peer\n   authentication available in the BGP\
    \ and OSPF routing protocols.\n   In particular, this document notes the current\
    \ research into\n   developing and enhancing network security.  Specific areas\
    \ of\n   research, development, and engineering that are underway as of this\n\
    \   writing (December 1993) are in IP Security, SNMP Security, and common\n  \
    \ authentication technologies.\n   Notwithstanding all the above, there are things\
    \ both vendors and\n   users can do to improve the security of their router. \
    \ Vendors should\n   get a copy of Trusted Computer System Interpretation [INTRO:8].\
    \  Even\n   if a vendor decides not to submit their device for formal\n   verification\
    \ under these guidelines, the publication provides\n   excellent guidance on general\
    \ security design and practices for\n   computing devices.\n"
- title: 'APPENDIX F: HISTORICAL ROUTING PROTOCOLS'
  contents:
  - "APPENDIX F: HISTORICAL ROUTING PROTOCOLS\n   Certain routing protocols are common\
    \ in the Internet, but the authors\n   of this document cannot in good conscience\
    \ recommend their use.  This\n   is not because they do not work correctly, but\
    \ because the\n   characteristics of the Internet assumed in their design (simple\n\
    \   routing, no policy, a single \"core router\" network under common\n   administration,\
    \ limited complexity, or limited network diameter) are\n   not attributes of today's\
    \ Internet.  Those parts of the Internet that\n   still use them are generally\
    \ limited \"fringe\" domains with limited\n   complexity.\n   As a matter of good\
    \ faith, collected wisdom concerning their\n   implementation is recorded in this\
    \ section.\n"
- title: F.1 EXTERIOR GATEWAY PROTOCOL - EGP
  contents:
  - 'F.1 EXTERIOR GATEWAY PROTOCOL - EGP

    '
- title: F.1.1 Introduction
  contents:
  - "F.1.1 Introduction\n   The Exterior Gateway Protocol (EGP) specifies an EGP that\
    \ is used to\n   exchange reachability information between routers of the same\
    \ or\n   differing autonomous systems.  EGP is not considered a routing\n   protocol\
    \ since there is no standard interpretation (i.e. metric) for\n   the distance\
    \ fields in the EGP update message, so distances are\n   comparable only among\
    \ routers of the same AS.  It is however designed\n   to provide high-quality\
    \ reachability information, both about neighbor\n   routers and about routes to\
    \ non-neighbor routers.\n   EGP is defined by [ROUTE:6].  An implementor almost\
    \ certainly wants\n   to read [ROUTE:7] and [ROUTE:8] as well, for they contain\
    \ useful\n   explanations and background material.\n   DISCUSSION\n      The present\
    \ EGP specification has serious limitations, most\n      importantly a restriction\
    \ that limits routers to advertising only\n      those networks that are reachable\
    \ from within the router's\n      autonomous system.  This restriction against\
    \ propagating third\n      party EGP information is to prevent long-lived routing\
    \ loops.\n      This effectively limits EGP to a two-level hierarchy.\n      RFC-975\
    \ is not a part of the EGP specification, and should be\n      ignored.\n"
- title: F.1.2 Protocol Walk-through
  contents:
  - "F.1.2 Protocol Walk-through\n      Indirect Neighbors: RFC-888, page 26\n   \
    \      An implementation of EGP MUST include indirect neighbor\n         support.\n\
    \      Polling Intervals: RFC-904, page 10\n         The interval between Hello\
    \ command retransmissions and the\n         interval between Poll retransmissions\
    \ SHOULD be configurable\n         but there MUST be a minimum value defined.\n\
    \         The interval at which an implementation will respond to Hello\n    \
    \     commands and Poll commands SHOULD be configurable but there\n         MUST\
    \ be a minimum value defined.\n      Network Reachability: RFC-904, page 15\n\
    \   An implementation MUST default to not providing the external list of\n   routers\
    \ in other autonomous systems; only the internal list of\n   routers together\
    \ with the nets that are reachable through those\n   routers should be included\
    \ in an Update Response/Indication packet.\n   However, an implementation MAY\
    \ elect to provide a configuration\n   option enabling the external list to be\
    \ provided.  An implementation\n   MUST NOT include in the external list routers\
    \ that were learned\n   through the external list provided by a router in another\
    \ autonomous\n   system.  An implementation MUST NOT send a network back to the\n\
    \   autonomous system from which it is learned, i.e.  it MUST do split-\n   horizon\
    \ on an autonomous system level.\n   If more than 255 internal or 255 external\
    \ routers need to be\n   specified in a Network Reachability update, the networks\
    \ reachable\n   from routers that can not be listed MUST be merged into the list\
    \ for\n   one of the listed routers.  Which of the listed routers is chosen for\n\
    \   this purpose SHOULD be user configurable, but SHOULD default to the\n   source\
    \ address of the EGP update being generated.\n   An EGP update contains a series\
    \ of blocks of network numbers, where\n   each block contains a list of network\
    \ numbers reachable at a\n   particular distance through a particular router.\
    \  If more than 255\n   networks are reachable at a particular distance through\
    \ a particular\n   router, they are split into multiple blocks (all of which have\
    \ the\n   same distance).  Similarly, if more than 255 blocks are required to\n\
    \   list the networks reachable through a particular router, the router's\n  \
    \ address is listed as many times as necessary to include all the\n   blocks in\
    \ the update.\n"
- title: 'Unsolicited Updates: RFC-904, page 16'
  contents:
  - "Unsolicited Updates: RFC-904, page 16\n   If a network is shared with the peer,\
    \ an implementation MUST send an\n   unsolicited update upon entry to the Up state\
    \ if the source network\n   is the shared network.\n"
- title: 'Neighbor Reachability: RFC-904, page 6, 13-15'
  contents:
  - "Neighbor Reachability: RFC-904, page 6, 13-15\n   The table on page 6 that describes\
    \ the values of j and k (the\n   neighbor up and down thresholds) is incorrect.\
    \  It is reproduced\n   correctly here:\n      Name    Active  Passive Description\n\
    \      -----------------------------------------------\n       j         3   \
    \    1    neighbor-up threshold\n       k         1       0    neighbor-down threshold\n\
    \   The value for k in passive mode also specified incorrectly in RFC-\n   904,\
    \ page 14 The values in parenthesis should read:\n      (j = 1, k = 0, and T3/T1\
    \ = 4)\n   As an optimization, an implementation can refrain from sending a\n\
    \   Hello command when a Poll is due.  If an implementation does so, it\n   SHOULD\
    \ provide a user configurable option to disable this\n   optimization.\n"
- title: 'Abort timer: RFC-904, pages 6, 12, 13'
  contents:
  - "Abort timer: RFC-904, pages 6, 12, 13\n   An EGP implementation MUST include\
    \ support for the abort timer (as\n   documented in section 4.1.4 of RFC-904).\
    \  An implementation SHOULD\n   use the abort timer in the Idle state to automatically\
    \ issue a Start\n   event to restart the protocol machine.  Recommended values\
    \ are P4 for\n   a critical error (Administratively prohibited, Protocol Violation\
    \ and\n   Parameter Problem) and P5 for all others.  The abort timer SHOULD NOT\n\
    \   be started when a Stop event was manually initiated (such as through\n   a\
    \ network management protocol).\n"
- title: 'Cease command received in Idle state: RFC-904, page 13'
  contents:
  - "Cease command received in Idle state: RFC-904, page 13\n   When the EGP state\
    \ machine is in the Idle state, it MUST reply to\n   Cease commands with a Cease-ack\
    \ response.\n"
- title: 'Hello Polling Mode: RFC-904, page 11'
  contents:
  - "Hello Polling Mode: RFC-904, page 11\n   An EGP implementation MUST include support\
    \ for both active and\n   passive polling modes.\n"
- title: 'Neighbor Acquisition Messages: RFC-904, page 18'
  contents:
  - "Neighbor Acquisition Messages: RFC-904, page 18\n   As noted the Hello and Poll\
    \ Intervals should only be present in\n   Request and Confirm messages.  Therefore\
    \ the length of an EGP\n   Neighbor Acquisition Message is 14 bytes for a Request\
    \ or Confirm\n   message and 10 bytes for a Refuse, Cease or Cease-ack message.\n\
    \   Implementations MUST NOT send 14 bytes for Refuse, Cease or Cease-ack\n  \
    \ messages but MUST allow for implementations that send 14 bytes for\n   these\
    \ messages.\n"
- title: 'Sequence Numbers: RFC-904, page 10'
  contents:
  - "Sequence Numbers: RFC-904, page 10\n   Response or indication packets received\
    \ with a sequence number not\n   equal to S MUST be discarded.  The send sequence\
    \ number S MUST be\n   incremented just before the time a Poll command is sent\
    \ and at no\n   other times.\n"
- title: F.2 ROUTING INFORMATION PROTOCOL - RIP
  contents:
  - 'F.2 ROUTING INFORMATION PROTOCOL - RIP

    '
- title: F.2.1 Introduction
  contents:
  - "F.2.1 Introduction\n   RIP is specified in [ROUTE:3].  Although RIP is still\
    \ quite important\n   in the Internet, it is being replaced in sophisticated applications\n\
    \   by more modern IGPs such as the ones described above.  A router\n   implementing\
    \ RIP SHOULD implement RIP Version 2 [ROUTE:?], as it\n   supports CIDR routes.\
    \  If occasional access networking is in use, a\n   router implementing RIP SHOULD\
    \ implement Demand RIP [ROUTE:?].\n   Another common use for RIP is as a router\
    \ discovery protocol.\n   Section [4.3.3.10] briefly touches upon this subject.\n"
- title: F.2.2 Protocol Walk-Through
  contents:
  - "F.2.2 Protocol Walk-Through\n   Dealing with changes in topology: [ROUTE:3],\
    \ page 11\n        An implementation of RIP MUST provide a means for timing out\n\
    \        routes.  Since messages are occasionally lost, implementations\n    \
    \    MUST NOT invalidate a route based on a single missed update.\n        Implementations\
    \ MUST by default wait six times the update\n        interval before invalidating\
    \ a route.  A router MAY have\n        configuration options to alter this value.\n\
    \   DISCUSSION\n      It is important to routing stability that all routers in\
    \ a RIP\n      autonomous system use similar timeout value for invalidating\n\
    \      routes, and therefore it is important that an implementation\n      default\
    \ to the timeout value specified in the RIP specification.\n      However, that\
    \ timeout value is too conservative in environments\n      where packet loss is\
    \ reasonably rare.  In such an environment, a\n      network manager may wish\
    \ to be able to decrease the timeout period\n      to promote faster recovery\
    \ from failures.\n   IMPLEMENTATION\n      There is a very simple mechanism that\
    \ a router may use to meet the\n      requirement to invalidate routes promptly\
    \ after they time out.\n      Whenever the router scans the routing table to see\
    \ if any routes\n      have timed out, it also notes the age of the least recently\n\
    \      updated route that has not yet timed out.  Subtracting this age\n     \
    \ from the timeout period gives the amount of time until the router\n      again\
    \ needs to scan the table for timed out routes.\n"
- title: 'Split Horizon: [ROUTE:3], page 14-15'
  contents:
  - "Split Horizon: [ROUTE:3], page 14-15\n   An implementation of RIP MUST implement\
    \ split horizon, a scheme used\n   for avoiding problems caused by including routes\
    \ in updates sent to\n   the router from which they were learned.\n   An implementation\
    \ of RIP SHOULD implement Split horizon with poisoned\n   reverse, a variant of\
    \ split horizon that includes routes learned from\n   a router sent to that router,\
    \ but sets their metric to infinity.\n   Because of the routing overhead that\
    \ may be incurred by implementing\n   split horizon with poisoned reverse, implementations\
    \ MAY include an\n   option to select whether poisoned reverse is in effect. \
    \ An\n   implementation SHOULD limit the time in which it sends reverse routes\n\
    \   at an infinite metric.\n   IMPLEMENTATION\n      Each of the following algorithms\
    \ can be used to limit the time for\n      which poisoned reverse is applied to\
    \ a route.  The first algorithm\n      is more complex but does a more thorough\
    \ job of limiting poisoned\n      reverse to only those cases where it is necessary.\n\
    \      The goal of both algorithms is to ensure that poison reverse is\n     \
    \ done for any destination whose route has changed in the last Route\n      Lifetime\
    \ (typically 180 seconds), unless it can be sure that the\n      previous route\
    \ used the same output interface.  The Route Lifetime\n      is used because that\
    \ is the amount of time RIP will keep around an\n      old route before declaring\
    \ it stale.\n      The time intervals (and derived variables) used in the following\n\
    \      algorithms are as follows:\n      Tu The Update Timer; the number of seconds\
    \ between RIP updates.\n           This typically defaults to 30 seconds.\n  \
    \    Rl The Route Lifetime, in seconds.  This is the amount of time\n        \
    \   that a route is presumed to be good, without requiring an\n           update.\
    \  This typically defaults to 180 seconds.\n      Ul The Update Loss; the number\
    \ of consecutive updates that have to\n           be lost or fail to mention a\
    \ route before RIP deletes the\n           route.  Ul is calculated to be (Rl/Tu)+1.\
    \  The +1 is to\n           account for the fact that the first time the ifcounter\
    \ is\n           decremented will be less than Tu seconds after it is\n      \
    \     initialized.  Typically, Ul will be 7: (180/30)+1.\n      In The value to\
    \ set ifcounter to when a destination is newly\n           learned.  This value\
    \ is Ul-4, where the 4 is RIP's garbage\n           collection timer/30\n    \
    \  The first algorithm is:\n      - Associated with each destination is a counter,\
    \ called the\n         ifcounter below.  Poison reverse is done for any route\
    \ whose\n         destination's ifcounter is greater than zero.\n      - After\
    \ a regular (not triggered or in response to a request)\n         update is sent,\
    \ all the non-zero ifcounters are decremented by\n         one.\n      - When\
    \ a route to a destination is created, its ifcounter is set\n         as follows:\n\
    \         - If the new route is superseding a valid route, and the old\n     \
    \       route used a different (logical) output interface, then the\n        \
    \    ifcounter is set to Ul.\n         - If the new route is superseding a stale\
    \ route, and the old\n            route used a different (logical) output interface,\
    \ then the\n            ifcounter is set to MAX(0, Ul - INT(seconds that the route\n\
    \            has been stale/Ut).\n         - If there was no previous route to\
    \ the destination, the\n            ifcounter is set to In.\n         - Otherwise,\
    \ the ifcounter is set to zero\n      - RIP also maintains a timer, called the\
    \ resettimer below.  Poison\n         reverse is done on all routes whenever resettimer\
    \ has not\n         expired (regardless of the ifcounter values).\n      - When\
    \ RIP is started, restarted, reset, or otherwise has its\n         routing table\
    \ cleared, it sets the resettimer to go off in Rl\n         seconds.\n      The\
    \ second algorithm is identical to the first except that:\n      - The rules which\
    \ set the ifcounter to non-zero values are changed\n         to always set it\
    \ to Rl/Tu, and\n      - The resettimer is eliminated.\n Triggered updates: [ROUTE:3],\
    \ page 15-16; page 29\n      Triggered updates (also called flash updates) are\
    \ a mechanism for\n      immediately notifying a router's neighbors when the router\
    \ adds or\n      deletes routes or changes their metrics.  A router MUST send\
    \ a\n      triggered update when routes are deleted or their metrics are\n   \
    \   increased.  A router MAY send a triggered update when routes are\n      added\
    \ or their metrics decreased.\n      Since triggered updates can cause excessive\
    \ routing overhead,\n      implementations MUST use the following mechanism to\
    \ limit the\n      frequency of triggered updates:\n      (1) When a router sends\
    \ a triggered update, it sets a timer to a\n           random time between one\
    \ and five seconds in the future.  The\n           router must not generate additional\
    \ triggered updates before\n           this timer expires.\n      (2) If the router\
    \ would generate a triggered update during this\n           interval it sets a\
    \ flag indicating that a triggered update is\n           desired.  The router\
    \ also logs the desired triggered update.\n      (3) When the triggered update\
    \ timer expires, the router checks the\n           triggered update flag.  If\
    \ the flag is set then the router\n           sends a single triggered update\
    \ which includes all the\n           changes that were logged.  The router then\
    \ clears the flag\n           and, since a triggered update was sent, restarts\
    \ this\n           algorithm.\n      (4) The flag is also cleared whenever a regular\
    \ update is sent.\n      Triggered updates SHOULD include all routes that have\
    \ changed\n      since the most recent regular (non-triggered) update.  Triggered\n\
    \      updates MUST NOT include routes that have not changed since the\n     \
    \ most recent regular update.\n   DISCUSSION\n      Sending all routes, whether\
    \ they have changed recently or not, is\n      unacceptable in triggered updates\
    \ because the tremendous size of\n      many Internet routing tables could otherwise\
    \ result in\n      considerable bandwidth being wasted on triggered updates.\n"
- title: 'Use of UDP: [ROUTE:3], page 18-19.'
  contents:
  - "Use of UDP: [ROUTE:3], page 18-19.\n   RIP packets sent to an IP broadcast address\
    \ SHOULD have their initial\n   TTL set to one.\n   Note that to comply with Section\
    \ [6.1] of this memo, a router SHOULD\n   use UDP checksums in RIP packets that\
    \ it originates, MUST discard RIP\n   packets received with invalid UDP checksums,\
    \ but MUST NOT discard\n   received RIP packets simply because they do not contain\
    \ UDP\n   checksums.\n"
- title: 'Addressing Considerations: [ROUTE:3], page 22'
  contents:
  - "Addressing Considerations: [ROUTE:3], page 22\n   A RIP implementation SHOULD\
    \ support host routes.  If it does not, it\n   MUST (as described on page 27 of\
    \ [ROUTE:3]) ignore host routes in\n   received updates.  A router MAY log ignored\
    \ hosts routes.\n   The special address 0.0.0.0 is used to describe a default\
    \ route.  A\n   default route is used as the route of last resort (i.e., when\
    \ a route\n   to the specific net does not exist in the routing table).  The router\n\
    \   MUST be able to create a RIP entry for the address 0.0.0.0.\n"
- title: 'Input Processing - Response: [ROUTE:3], page 26'
  contents:
  - "Input Processing - Response: [ROUTE:3], page 26\n   When processing an update,\
    \ the following validity checks MUST be\n   performed:\n   o The response MUST\
    \ be from UDP port 520.\n   o The source address MUST be on a directly connected\
    \ subnet (or on a\n      directly connected, non-subnetted network) to be considered\
    \ valid.\n   o The source address MUST NOT be one of the router's addresses.\n\
    \   DISCUSSION\n      Some networks, media, and interfaces allow a sending node\
    \ to\n      receive packets that it broadcasts.  A router must not accept its\n\
    \      own packets as valid routing updates and process them.  The last\n    \
    \  requirement prevents a router from accepting its own routing\n      updates\
    \ and processing them (on the assumption that they were sent\n      by some other\
    \ router on the network).\n   An implementation MUST NOT replace an existing route\
    \ if the metric\n   received is equal to the existing metric except in accordance\
    \ with\n   the following heuristic.\n   An implementation MAY choose to implement\
    \ the following heuristic to\n   deal with the above situation.  Normally, it\
    \ is useless to change the\n   route to a network from one router to another if\
    \ both are advertised\n   at the same metric.  However, the route being advertised\
    \ by one of\n   the routers may be in the process of timing out.  Instead of waiting\n\
    \   for the route to timeout, the new route can be used after a specified\n  \
    \ amount of time has elapsed.  If this heuristic is implemented, it\n   MUST wait\
    \ at least halfway to the expiration point before the new\n   route is installed.\n"
- title: F.2.3 Specific Issues
  contents:
  - 'F.2.3 Specific Issues

    '
- title: RIP Shutdown
  contents:
  - "RIP Shutdown\n     An implementation of RIP SHOULD provide for a graceful shutdown\n\
    \     using the following steps:\n     (1) Input processing is terminated,\n \
    \    (2) Four updates are generated at random intervals of between two\n     \
    \     and four seconds, These updates contain all routes that were\n         \
    \ previously announced, but with some metric changes.  Routes\n          that\
    \ were being announced at a metric of infinity should\n          continue to use\
    \ this metric.  Routes that had been announced\n          with a non-infinite\
    \ metric should be announced with a metric\n          of 15 (infinity - 1).\n\
    \   DISCUSSION\n      The metric used for the above really ought to be 16 (infinity);\n\
    \      setting it to 15 is a kludge to avoid breaking certain old hosts\n    \
    \  that wiretap the RIP protocol.  Such a host will (erroneously)\n      abort\
    \ a TCP connection if it tries to send a datagram on the\n      connection while\
    \ the host has no route to the destination (even if\n      the period when the\
    \ host has no route lasts only a few seconds\n      while RIP chooses an alternate\
    \ path to the destination).\n"
- title: RIP Split Horizon and Static Routes
  contents:
  - "RIP Split Horizon and Static Routes\n   Split horizon SHOULD be applied to static\
    \ routes by default.  An\n   implementation SHOULD provide a way to specify, per\
    \ static route,\n   that split horizon should not be applied to this route.\n"
- title: F.3 GATEWAY TO GATEWAY PROTOCOL - GGP
  contents:
  - "F.3 GATEWAY TO GATEWAY PROTOCOL - GGP\n   The Gateway to Gateway protocol is\
    \ considered obsolete and SHOULD NOT\n   be implemented.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   O that we now had here\n   But one ten thousand of those\
    \ men in England\n   That do no work to-day!\n   What's he that wishes so?\n \
    \  My cousin Westmoreland? No, my fair cousin:\n   If we are mark'd to die, we\
    \ are enow\n   To do our country loss; and if to live,\n   The fewer men, the\
    \ greater share of honour.\n   God's will! I pray thee, wish not one man more.\n\
    \   By Jove, I am not covetous for gold,\n   Nor care I who doth feed upon my\
    \ cost;\n   It yearns me not if men my garments wear;\n   Such outward things\
    \ dwell not in my desires:\n   But if it be a sin to covet honour,\n   I am the\
    \ most offending soul alive.\n   No, faith, my coz, wish not a man from England:\n\
    \   God's peace! I would not lose so great an honour\n   As one man more, methinks,\
    \ would share from me\n   For the best hope I have. O, do not wish one more!\n\
    \   Rather proclaim it, Westmoreland, through my host,\n   That he which hath\
    \ no stomach to this fight,\n   Let him depart; his passport shall be made\n \
    \  And crowns for convoy put into his purse:\n   We would not die in that man's\
    \ company\n   That fears his fellowship to die with us.\n   This day is called\
    \ the feast of Crispian:\n   He that outlives this day, and comes safe home,\n\
    \   Will stand a tip-toe when the day is named,\n   And rouse him at the name\
    \ of Crispian.\n   He that shall live this day, and see old age,\n   Will yearly\
    \ on the vigil feast his neighbours,\n   And say 'To-morrow is Saint Crispian:'\n\
    \   Then will he strip his sleeve and show his scars.\n   And say 'These wounds\
    \ I had on Crispin's day.'\n   Old men forget: yet all shall be forgot,\n   But\
    \ he'll remember with advantages\n   What feats he did that day: then shall our\
    \ names.\n   Familiar in his mouth as household words\n   Harry the king, Bedford\
    \ and Exeter,\n   Warwick and Talbot, Salisbury and Gloucester,\n   Be in their\
    \ flowing cups freshly remember'd.\n   This story shall the good man teach his\
    \ son;\n   And Crispin Crispian shall ne'er go by,\n   From this day to the ending\
    \ of the world,\n   But we in it shall be remember'd;\n   We few, we happy few,\
    \ we band of brothers;\n   For he to-day that sheds his blood with me\n   Shall\
    \ be my brother; be he ne'er so vile,\n   This day shall gentle his condition:\n\
    \   And gentlemen in England now a-bed\n   Shall think themselves accursed they\
    \ were not here,\n   And hold their manhoods cheap whiles any speaks\n   That\
    \ fought with us upon Saint Crispin's day.\n                                 \
    \  -- William Shakespeare\n   This memo is a product of the IETF's Router Requirements\
    \ Working\n   Group.  A memo such as this one is of necessity the work of many\
    \ more\n   people than could be listed here.  A wide variety of vendors, network\n\
    \   managers, and other experts from the Internet community graciously\n   contributed\
    \ their time and wisdom to improve the quality of this\n   memo.  The editor wishes\
    \ to extend sincere thanks to all of them.\n   The current editor also wishes\
    \ to single out and extend his heartfelt\n   gratitude and appreciation to the\
    \ original editor of this document;\n   Philip Almquist.  Without Philip's work,\
    \ both as the original editor\n   and as the Chair of the working group, this\
    \ document would not have\n   been produced.  He also wishes to express deep and\
    \ heartfelt\n   gratitude to the previous editor, Frank Kastenholz.  Frank changed\n\
    \   the original document from a collection of information to a useful\n   description\
    \ of IP technology - in his words, a \"snapshot\" of the\n   technology in 1991.\
    \  One can only hope that this snapshot, of the\n   technology in 1994, is as\
    \ clear.\n   Philip Almquist, Jeffrey Burgan, Frank Kastenholz, and Cathy\n  \
    \ Wittbrodt each wrote major chapters of this memo.  Others who made\n   major\
    \ contributions to the document included Bill Barns, Steve\n   Deering, Kent England,\
    \ Jim Forster, Martin Gross, Jeff Honig, Steve\n   Knowles, Yoni Malachi, Michael\
    \ Reilly, and Walt Wimer.\n   Additional text came from Andy Malis, Paul Traina,\
    \ Art Berggreen,\n   John Cavanaugh, Ross Callon, John Lekashman, Brian Lloyd,\
    \ Gary\n   Malkin, Milo Medin, John Moy, Craig Partridge, Stephanie Price, Yakov\n\
    \   Rekhter, Steve Senum, Richard Smith, Frank Solensky, Rich Woundy, and\n  \
    \ others who have been inadvertently overlooked.\n   Some of the text in this\
    \ memo has been (shamelessly) plagiarized from\n   earlier documents, most notably\
    \ RFC-1122 by Bob Braden and the Host\n   Requirements Working Group, and RFC-1009\
    \ by Bob Braden and Jon\n   Postel.  The work of these earlier authors is gratefully\n\
    \   acknowledged.\n   Jim Forster was a co-chair of the Router Requirements Working\
    \ Group\n   during its early meetings, and was instrumental in getting the group\n\
    \   off to a good start.  Jon Postel, Bob Braden, and Walt Prue also\n   contributed\
    \ to the success by providing a wealth of good advice\n   before the group's first\
    \ meeting.  Later on, Phill Gross, Vint Cerf,\n   and Noel Chiappa all provided\
    \ valuable advice and support.\n   Mike St.  Johns coordinated the Working Group's\
    \ interactions with the\n   security community, and Frank Kastenholz coordinated\
    \ the Working\n   Group's interactions with the network management area.  Allison\n\
    \   Mankin and K.K.  Ramakrishnan provided expertise on the issues of\n   congestion\
    \ control and resource allocation.\n   Many more people than could possibly be\
    \ listed or credited here\n   participated in the deliberations of the Router\
    \ Requirements Working\n   Group, either through electronic mail or by attending\
    \ meetings.\n   However, the efforts of Ross Callon and Vince Fuller in sorting\
    \ out\n   the difficult issues of route choice and route leaking are especially\n\
    \   acknowledged.\n   The editor thanks his employer, Cisco Systems, for allowing\
    \ him to\n   spend the time necessary to produce the 1994 snapshot.\n"
- title: Editor's Address
  contents:
  - "Editor's Address\n   The address of the current editor of this document is\n\
    \      Fred Baker\n      Cisco Systems\n      519 Lado Drive\n      Santa Barbara,\
    \ California 93111\n      USA\n      Phone:+1 805-681-0115\n      EMail: fred@cisco.com\n"
