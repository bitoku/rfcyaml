- title: __initial_text__
  contents:
  - '                        SMTP Service Extensions

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This RFC specifies an IAB standards track protocol for\
    \ the Internet\n   community, and requests discussion and suggestions for improvements.\n\
    \   Please refer to the current edition of the \"IAB Official Protocol\n   Standards\"\
    \ for the standardization state and status of this protocol.\n   Distribution\
    \ of this memo is unlimited.\n"
- title: 1.  Abstract
  contents:
  - "1.  Abstract\n   This memo defines a framework for extending the SMTP service\
    \ by\n   defining a means whereby a server SMTP can inform a client SMTP as to\n\
    \   the service extensions it supports. Standard extensions to the SMTP\n   service\
    \ are registered with the Internet Assigned Numbers Authority\n   (IANA).  This\
    \ framework does not require modification of existing\n   SMTP clients or servers\
    \ unless the features of the service extensions\n   are to be requested or provided.\n"
- title: 2.  Introduction
  contents:
  - "2.  Introduction\n   The Simple Mail Transfer Protocol (SMTP) [1] has provided\
    \ a stable,\n   effective basis for the relay function of message transfer agents.\n\
    \   Although a decade old, SMTP has proven remarkably resilient.\n   Nevertheless,\
    \ the need for a number of protocol extensions has become\n   evident. Rather\
    \ than describing these extensions as separate and\n   haphazard entities, this\
    \ document enhances SMTP in a straightforward\n   fashion that provides a framework\
    \ in which all future extensions can\n   be built in a single consistent way.\n"
- title: 3.  Framework for SMTP Extensions
  contents:
  - "3.  Framework for SMTP Extensions\n   For the purpose of service extensions to\
    \ SMTP, SMTP relays a mail\n   object containing an envelope and a content.\n\
    \          (1)  The SMTP envelope is straightforward, and is sent as a\n     \
    \          series of SMTP protocol units: it consists of an\n               originator\
    \ address (to which error reports should be\n               directed); a delivery\
    \ mode (e.g., deliver to recipient\n               mailboxes); and, one or more\
    \ recipient addresses.\n          (2)  The SMTP content is sent in the SMTP DATA\
    \ protocol unit\n               and has two parts: the headers and the body. The\
    \ headers\n               form a collection of field/value pairs structured\n\
    \               according to RFC 822 [2], whilst the body, if structured,\n  \
    \             is defined according to MIME [3]. The content is textual\n     \
    \          in nature, expressed using the US ASCII repertoire (ANSI\n        \
    \       X3.4-1986). Although extensions (such as MIME) may relax\n           \
    \    this restriction for the content body, the content\n               headers\
    \ are always encoded using the US ASCII repertoire.\n               The algorithm\
    \ defined in [4] is used to represent header\n               values outside the\
    \ US ASCII repertoire, whilst still\n               encoding them using the US\
    \ ASCII repertoire.\n   Although SMTP is widely and robustly deployed, some parts\
    \ of the\n   Internet community might wish to extend the SMTP service.  This memo\n\
    \   defines a means whereby both an extended SMTP client and server may\n   recognize\
    \ each other as such and the server can inform the client as\n   to the service\
    \ extensions that it supports.\n   It must be emphasized that any extension to\
    \ the SMTP service should\n   not be considered lightly. SMTP's strength comes\
    \ primarily from its\n   simplicity.  Experience with many protocols has shown\
    \ that:\n               protocols with few options tend towards ubiquity, whilst\n\
    \               protocols with many options tend towards obscurity.\n   This means\
    \ that each and every extension, regardless of its benefits,\n   must be carefully\
    \ scrutinized with respect to its implementation,\n   deployment, and interoperability\
    \ costs. In many cases, the cost of\n   extending the SMTP service will likely\
    \ outweigh the benefit.\n   Given this environment, the framework for the extensions\
    \ described in\n   this memo consists of:\n          (1)  a new SMTP command (section\
    \ 4)\n          (2)  a registry of SMTP service extensions (section 5)\n     \
    \     (3)  additional parameters to the SMTP MAIL FROM and RCPT TO\n         \
    \      commands (section 6).\n"
- title: 4.  The EHLO command
  contents:
  - "4.  The EHLO command\n   A client SMTP supporting SMTP service extensions should\
    \ start an SMTP\n   session by issuing the EHLO command instead of the HELO command.\
    \ If\n   the SMTP server supports the SMTP service extensions it will give a\n\
    \   successful response (see section 4.1), a failure response (see 4.2),\n   or\
    \ an error response (4.3). If the SMTP server does not support any\n   SMTP service\
    \ extensions it will generate an error response (see\n   section 4.4).\n   The\
    \ syntax for this command, using the ABNF notation of [2], is:\n             \
    \  ehlo-cmd ::= \"EHLO\" SP domain CR LF\n   If successful, the server SMTP responds\
    \ with code 250.  On failure,\n   the server SMTP responds with code 550.  On\
    \ error, the server SMTP\n   responds with one of codes 500, 501, 502, 504, or\
    \ 421.\n   This command is issued instead of the HELO command, and may be issued\n\
    \   at any time that a HELO command would be appropriate.  That is, if\n   the\
    \ EHLO command is issued, and a successful response is returned,\n   then a subsequent\
    \ HELO or EHLO command will result in the server SMTP\n   replying with code 503.\
    \  A client SMTP must not cache any information\n   returned if the EHLO command\
    \ succeeds. That is, a client SMTP must\n   issue the EHLO command at the start\
    \ of each SMTP session if\n   information about extended facilities is needed.\n"
- title: 4.1.  Successful response
  contents:
  - "4.1.  Successful response\n   If the server SMTP implements and is able to perform\
    \ the EHLO\n   command, it will return code 250.  This indicates that both the\n\
    \   server and client SMTP are in the initial state, that is, there is no\n  \
    \ transaction in progress and all state tables and buffers are cleared.\n   Normally,\
    \ this response will be a multiline reply. Each line of the\n   response contains\
    \ a keyword and, optionally, one or more parameters.\n   The syntax for a positive\
    \ response, using the ABNF notation of [2],\n   is:\n         ehlo-ok-rsp  ::=\
    \      \"250\"    domain [ SP greeting ] CR LF\n                        / (  \
    \  \"250-\"   domain [ SP greeting ] CR LF\n                            *( \"\
    250-\"      ehlo-line           CR LF )\n                               \"250\"\
    \    SP ehlo-line           CR LF   )\n                      ; the usual HELO\
    \ chit-chat\n         greeting     ::= 1*<any character other than CR or LF>\n\
    \         ehlo-line    ::= ehlo-keyword *( SP ehlo-param )\n         ehlo-keyword\
    \ ::= (ALPHA / DIGIT) *(ALPHA / DIGIT / \"-\")\n                      ; syntax\
    \ and values depend on ehlo-keyword\n         ehlo-param   ::= 1*<any CHAR excluding\
    \ SP and all\n                             control characters (US ASCII 0-31\n\
    \                             inclusive)>\n         ALPHA        ::= <any one\
    \ of the 52 alphabetic characters\n                           (A through Z in\
    \ upper case, and,\n                            a through z in lower case)>\n\
    \         DIGIT        ::= <any one of the 10 numeric characters\n           \
    \                (0 through 9)>\n         CR           ::= <the carriage-return\
    \ character\n                           (ASCII decimal code 13)>\n         LF\
    \           ::= <the line-feed character\n                           (ASCII decimal\
    \ code 10)>\n         SP           ::= <the space character\n                \
    \           (ASCII decimal code 32)>\n   Although EHLO keywords may be specified\
    \ in upper, lower, or mixed\n   case, they must always be recognized and processed\
    \ in a case-\n   insensitive manner. This is simply an extension of practices\
    \ begun in\n   RFC 821.\n   The IANA maintains a registry of standard SMTP service\
    \ extensions.\n   Associated with each such extension is a corresponding EHLO\
    \ keyword\n   value. Each service extension registered with the IANA is defined\
    \ by\n   a standards-track RFC, and such a definition includes:\n          (1)\
    \  the textual name of the SMTP service extension;\n          (2)  the EHLO keyword\
    \ value associated with the extension;\n          (3)  the syntax and possible\
    \ values of parameters associated\n               with the EHLO keyword value;\n\
    \          (4)  any additional SMTP verbs associated with the extension\n    \
    \           (additional verbs will usually be, but are not required\n        \
    \       to be, the same as the EHLO keyword value);\n          (5)  any new parameters\
    \ the extension associates with the MAIL\n               FROM or RCPT TO verbs;\
    \ and,\n          (6)  how support for the extension affects the behavior of a\n\
    \               server and client SMTP.\n   In addition, any EHLO keyword value\
    \ that starts with an upper or\n   lower case \"X\" refers to a local SMTP service\
    \ extension, which is\n   used through bilateral, rather than standardized, agreement.\
    \ Keywords\n   beginning with \"X\" may not be used in a registered service extension.\n\
    \   Any keyword values presented in the EHLO response that do not begin\n   with\
    \ \"X\" must correspond to an SMTP service extension registered with\n   IANA.\
    \  A conforming server must not offer non \"X\" prefixed keyword\n   values that\
    \ are not described in a registered extension.\n   Additional verbs are bound\
    \ by the same rules as EHLO keywords;\n   specifically, verbs begining with \"\
    X\" are local extensions that may\n   not be standardized and verbs not beginning\
    \ with \"X\" must always be\n   registered.\n"
- title: 4.2.  Failure response
  contents:
  - "4.2.  Failure response\n   If for some reason the server SMTP is unable to list\
    \ the service\n   extensions it supports, it will return code 554.\n   In the\
    \ case of a failure response, the client SMTP should issue\n   either the HELO\
    \ or QUIT command.\n"
- title: 4.3.  Error responses from extended servers
  contents:
  - "4.3.  Error responses from extended servers\n   If the server SMTP recognizes\
    \ the EHLO command, but the command\n   argument is unacceptable, it will return\
    \ code 501.\n   If the server SMTP recognizes, but does not implement, the EHLO\n\
    \   command, it will return code 502.\n   If the server SMTP determines that the\
    \ SMTP service is no longer\n   available (e.g., due to imminent system shutdown),\
    \ it will return\n   code 421.\n   In the case of any error response, the client\
    \ SMTP should issue\n   either the HELO or QUIT command.\n"
- title: 4.4.  Responses from servers without extensions
  contents:
  - "4.4.  Responses from servers without extensions\n   A server SMTP that conforms\
    \ to RFC 821 but does not support the\n   extensions specified here will not recognize\
    \ the EHLO command and\n   will consequently return code 500, as specified in\
    \ RFC 821.\n"
- title: 5.  Initial IANA Registry
  contents:
  - "5.  Initial IANA Registry\n   The IANA's initial registry of SMTP service extensions\
    \ consists of\n   these entries:\n    Service Ext   EHLO Keyword Parameters Verb\
    \       Added Behavior\n    ------------- ------------ ---------- ---------- ------------------\n\
    \    Send             SEND         none       SEND    defined in RFC 821\n   \
    \ Send or Mail     SOML         none       SOML    defined in RFC 821\n    Send\
    \ and Mail    SAML         none       SAML    defined in RFC 821\n    Expand \
    \          EXPN         none       EXPN    defined in RFC 821\n    Help      \
    \       HELP         none       HELP    defined in RFC 821\n    Turn         \
    \    TURN         none       TURN    defined in RFC 821\n   which correspond to\
    \ those SMTP commands which are defined as optional\n   in [5].  (The mandatory\
    \ SMTP commands, according to [5], are HELO,\n   MAIL, RCPT, DATA, RSET, VRFY,\
    \ NOOP, and QUIT.)\n"
- title: 6.  MAIL FROM and RCPT TO Parameters
  contents:
  - "6.  MAIL FROM and RCPT TO Parameters\n   It is recognized that several of the\
    \ extensions planned for SMTP will\n   make use of additional parameters associated\
    \ with the MAIL FROM and\n   RCPT TO command. The syntax for these commands, again\
    \ using the ABNF\n   notation of [2] as well as underlying definitions from [1],\
    \ is:\n      esmtp-cmd        ::= inner-esmtp-cmd [SP esmtp-parameters] CR LF\n\
    \      esmtp-parameters ::= esmtp-parameter *(SP esmtp-parameter)\n      esmtp-parameter\
    \  ::= esmtp-keyword [\"=\" esmtp-value]\n      esmtp-keyword    ::= (ALPHA /\
    \ DIGIT) *(ALPHA / DIGIT / \"-\")\n                           ; syntax and values\
    \ depend on esmtp-keyword\n      esmtp-value      ::= 1*<any CHAR excluding \"\
    =\", SP, and all\n                              control characters (US ASCII 0-31\n\
    \                              inclusive)>\n                           ; The following\
    \ commands are extended to\n                           ; accept extended parameters.\n\
    \      inner-esmtp-cmd  ::= (\"MAIL FROM:<\" reverse-path \">\")   /\n       \
    \                    (\"RCPT TO:<\" forward-path \">\")\n   All esmtp-keyword\
    \ values must be registered as part of the IANA\n   registration process described\
    \ above. This definition only provides\n   the framework for future extension;\
    \ no extended MAIL FROM or RCPT TO\n   parameters are defined by this RFC.\n"
- title: 6.1.  Error responses
  contents:
  - "6.1.  Error responses\n   If the server SMTP does not recognize or cannot implement\
    \ one or more\n   of the parameters associated with a particular MAIL FROM or\
    \ RCPT TO\n   command, it will return code 555.\n   If for some reason the server\
    \ is temporarily unable to accomodate one\n   or more of the parameters associated\
    \ with a MAIL FROM or RCPT TO\n   command, and if the definition of the specific\
    \ parameter does not\n   mandate the use of another code, it should return code\
    \ 455.\n   Errors specific to particular parameters and their values will be\n\
    \   specified in the parameter's defining RFC.\n"
- title: '7.  Received: Header Field Annotation'
  contents:
  - "7.  Received: Header Field Annotation\n   SMTP servers are required to add an\
    \ appropriate Received: field to\n   the headers of all messages they receive.\
    \ A \"with ESMTP\" clause\n   should be added to this field when any SMTP service\
    \ extensions are\n   used. \"ESMTP\" is hereby added to the list of standard protocol\
    \ names\n   registered with IANA.\n"
- title: 8.  Usage Examples
  contents:
  - "8.  Usage Examples\n          (1)  An interaction of the form:\n            \
    \   S: <wait for connection on TCP port 25>\n               C: <open connection\
    \ to server>\n               S: 220 dbc.mtview.ca.us SMTP service ready\n    \
    \           C: EHLO ymir.claremont.edu\n               S: 250 dbc.mtview.ca.us\
    \ says hello\n                ...\n               indicates that the server SMTP\
    \ implements only those SMTP\n               commands which are defined as mandatory\
    \ in [5].\n          (2)  In contrast, an interaction of the form:\n         \
    \      S: <wait for connection on TCP port 25>\n               C: <open connection\
    \ to server>\n               S: 220 dbc.mtview.ca.us SMTP service ready\n    \
    \           C: EHLO ymir.claremont.edu\n               S: 250-dbc.mtview.ca.us\
    \ says hello\n               S: 250-EXPN\n               S: 250-HELP\n       \
    \        S: 250-8BITMIME\n               S: 250-XONE\n               S: 250 XVRB\n\
    \                ...\n               indicates that the server SMTP also implements\
    \ the SMTP\n               EXPN and HELP commands, one standard service extension\n\
    \               (8BITMIME), and two non-standard service extensions (XONE\n  \
    \             and XVRB).\n          (3)  Finally, a server that does not support\
    \ SMTP service\n               extensions would act as follows:\n            \
    \   S: <wait for connection on TCP port 25>\n               C: <open connection\
    \ to server>\n               S: 220 dbc.mtview.ca.us SMTP service ready\n    \
    \           C: EHLO ymir.claremont.edu\n               S: 500 Command not recognized:\
    \ EHLO\n                ...\n               The 500 response indicates that the\
    \ server SMTP does not\n               implement the extensions specified here.\
    \  The client\n               would normally send RSET to reset the connection,\
    \ and,\n               after getting a successful reply, send a HELO command and\n\
    \               proceed as specified in RFC 821.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   This RFC does not discuss security issues and\
    \ is not believed to\n   raise any security issues not already endemic in electronic\
    \ mail and\n   present in fully conforming implementations of RFC-821.  It does\n\
    \   provide an announcement of server mail capabilities via the response\n   to\
    \ the EHLO verb. However, all information provided by announcement\n   of any\
    \ of the initial set of service extensions defined by this RFC\n   can be readily\
    \ deduced by selective probing of the verbs required to\n   transport and deliver\
    \ mail. The security implications of service\n   extensions described in other\
    \ RFCs should be dealt with in those\n   RFCs.\n"
- title: 10.  Acknowledgements
  contents:
  - "10.  Acknowledgements\n   This document represents a synthesis of the ideas of\
    \ many people and\n   reactions to the ideas and proposals of others.  Randall\
    \ Atkinson,\n   Craig Everhart, Risto Kankkunen, and Greg Vaudreuil contributed\
    \ ideas\n   and text sufficient to be considered co-authors.  Other important\n\
    \   suggestions, text, or encouragement came from Harald Alvestrand, Jim\n   Conklin,\
    \ Mark Crispin, Frank da Cruz, 'Olafur Gudmundsson, Per\n   Hedeland, Christian\
    \ Huitma, Neil Katin, Eliot Lear, Harold A.\n   Miller, Dan Oscarsson, Julian\
    \ Onions, Rayan Zachariassen, and the\n   contributions of the entire IETF SMTP\
    \ Working Group. Of course, none\n   of the individuals are necessarily responsible\
    \ for the combination of\n   ideas represented here. Indeed, in some cases, the\
    \ response to a\n   particular criticism was to accept the problem identification\
    \ but to\n   include an entirely different solution from the one originally\n\
    \   proposed.\n"
- title: 11.  References
  contents:
  - "11.  References\n   [1] Postel, J., \"Simple Mail Transfer Protocol\", STD 10,\
    \ RFC 821,\n       USC/Information Sciences Institute, August 1982.\n   [2] Crocker,\
    \ D., \"Standard for the Format of ARPA Internet Text\n       Messages\", STD\
    \ 11, RFC 822, UDEL, August 1982.\n   [3] Borenstein, N., and N. Freed, \"Multipurpose\
    \ Internet Mail\n       Extensions\", RFC 1341, Bellcore, Innosoft, June 1992.\n\
    \   [4] Moore, K., \"Representation of Non-ASCII Text in Internet Message\n  \
    \     Headers\", RFC 1342, University of Tennessee, June 1992.\n   [5] Braden,\
    \ R., \"Requirements for Internet Hosts - Application and\n       Support\", STD\
    \ 3, RFC 1123, USC/Information Sciences Institute,\n       October 1989.\n"
- title: 12.  Chair, Editor, and Authors' Addresses
  contents:
  - "12.  Chair, Editor, and Authors' Addresses\n       John Klensin, WG Chair\n \
    \      United Nations University\n       PO Box 500, Charles Street Station\n\
    \       Boston, MA 02114-0500  USA\n       Phone: +1 617 227 8747\n       Fax:\
    \ +1 617 491 6266\n       Email: klensin@infoods.unu.edu\n       Ned Freed, Editor\n\
    \       Innosoft International, Inc.\n       250 West First Street, Suite 240\n\
    \       Claremont, CA 91711  USA\n       Phone: +1 909 624 7907\n       Fax: +1\
    \ 909 621 5319\n       Email: ned@innosoft.com\n       Marshall T. Rose\n    \
    \   Dover Beach Consulting, Inc.\n       420 Whisman Court\n       Moutain View,\
    \ CA  94043-2186  USA\n       Phone: +1 415 968 1052\n       Fax: +1 415 968 2510\n\
    \       Email: mrose@dbc.mtview.ca.us\n       Einar A. Stefferud\n       Network\
    \ Management Associates, Inc.\n       17301 Drey Lane\n       Huntington Beach,\
    \ CA, 92647-5615  USA\n       Phone: +1 714 842 3711\n       Fax: +1 714 848 2091\n\
    \       Email: stef@nma.com\n       David H. Crocker\n       The Branch Office\n\
    \       USA\n       Email: dcrocker@mordor.stanford.edu\n"
