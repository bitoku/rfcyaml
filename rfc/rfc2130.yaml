- title: __initial_text__
  contents:
  - "              The Report of the IAB Character Set Workshop\n                \
    \    held 29 February - 1 March, 1996\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The authors would like to sincerely thank Information Sciences\n\
    \   Institute (ISI), and in particular Joyce K. Reynolds for graciously\n   hosting\
    \ this event; Joe Kemp and Jeanine Yamazaki of ISI made sure\n   the facilities\
    \ met our needs.  We also wish to thank the Internet\n   Society, which underwrote\
    \ travel for participants who might not\n   otherwise have been able to attend.\
    \  Of course, we also wish to thank\n   the many experts who participated in the\
    \ workshop and on the mailing\n   list; a complete list of these people can be\
    \ found in Appendix D.\n   Bunyip Information Systems was kind enough to provide\
    \ mailing list\n   facilities for this work.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   Abstract\n   3.3:  Determining which values of CCS, CES,\
    \ and TES are used.....   9\n   3.4:  Recommended Defaults.......................................\
    \  10\n   3.5:  Guidelines for conversions between coded character sets....  13\n\
    \   4:    Presentation issues........................................  14\n  \
    \ 5:    Open issues................................................  14\n   5.1:\
    \  Language tags..............................................  15\n   5.2:  Public\
    \ identifiers.........................................  16\n   5.3:  Bi-directionality..........................................\
    \  16\n   6:    Security Considerations....................................  16\n\
    \   7:    Conclusions................................................  16\n  \
    \ 8:    Recommendations............................................  17\n   8.1:\
    \  To the IAB.................................................  17\n   8.2:  For\
    \ new Internet protocols.................................  18\n   8.3:  For registration\
    \ of new character sets.....................  18\n   Appendix A: List of protocols\
    \ affected by character set issues...  20\n   Appendix B: Acronyms.............................................\
    \  23\n   Appendix C: Glossary.............................................  24\n\
    \   Appendix D: References...........................................  25\n  \
    \ Appendix E: Recommended reading..................................  27\n   Appendix\
    \ F: Workshop attendee list...............................  29\n   Appendix G:\
    \ Authors' Addresses...................................  30\n"
- title: Abstract
  contents:
  - "Abstract\n   This report details the conclusions of an IAB-sponsored invitational\n\
    \   workshop held 29 February  - 1 March, 1996, to discuss the use of\n   character\
    \ sets on the Internet.  It motivates the need to have\n   character set handling\
    \ in Internet protocols which transmit text,\n   provides a conceptual framework\
    \ for specifying character sets,\n   recommends the use of MIME tagging for transmitted\
    \ text, recommends a\n   default character set *without* stating that there is\
    \ no need for\n   other character sets, and makes a series of recommendations\
    \ to the\n   IAB, IANA, and the IESG for furthering the integration of the\n \
    \  character set framework into text transmission protocols.\n"
- title: '0: Executive summary'
  contents:
  - "0: Executive summary\n   The term 'Character Set' means many things to many people.\
    \ Even the\n   MIME registry of character sets registers items that have great\n\
    \   differences in semantics and applicability. This workshop provides\n   guidance\
    \ to the IAB and IETF about the use of character sets on the\n   Internet and\
    \ provides a common framework for interoperability between\n   the many characters\
    \ in use there.\n   The framework consists of four components: an architecture\
    \ model,\n   which specifies components necessary for on-the-wire transmission\
    \ of\n   text; recommendations for tagging transmitted (and stored) text;\n  \
    \ recommended defaults for each level of the model; and a set of\n   recommendations\
    \ to the IAB, IANA, and the IESG for furthering the\n   integration of  this framework\
    \ into text transmission protocols.\n   The architectural model specifies 7 layers,\
    \ of which only three are\n   required for on-the-wire transmission. The Coded\
    \ Character Set is a\n   mapping from a set of abstract characters to a set of\
    \ integers. The\n   Character Encoding Scheme is a mapping from a Coded Character\
    \ Set (or\n   several) to a set of octets. The Transfer Encoding Syntax is a\n\
    \   transformation applied to data which has been encoded using a\n   Character\
    \ Encoding Scheme to allow it to be transmitted. These layers\n   should be specified\
    \ in a transmitted text stream by using the MIME\n   encoding mechanisms.\n  \
    \ This report recommends the use of ISO 10646 as the default Coded\n   Character\
    \ Set, and UTF-8 as the default Character Encoding Scheme in\n   the creation\
    \ of new protocols or new version of old protocols which\n   transmit text. These\
    \ defaults do not deprecate the use of other\n   character sets when and where\
    \ they are needed; they are simply\n   intended to provide guidance and a specification\
    \ for\n   interoperability.\n"
- title: '1:  Introduction'
  contents:
  - "1:  Introduction\n   This is the report of an IAB-sponsored invitational workshop\
    \ on the\n   use of Character Sets on the Internet, held 29 February - 1 March\n\
    \   1996 at Information Sciences Institute (ISI) in Marina del Rey,\n   California.\
    \  In addition, this report covers the discussion on the\n   mailing list up to\
    \ and slightly beyond the workshop itself.  The\n   goals of this workshop were\
    \ to provide guidance to the IAB and the\n   IETF about the use of character sets\
    \ on the Internet, and if possible\n   a common framework for interoperability\
    \ between the many character\n   sets in use there.  Both goals were achieved.\n"
- title: '2:  Character sets on the Internet - the problem'
  contents:
  - "2:  Character sets on the Internet - the problem\n   The term 'character set'\
    \ is typically applied to the contents of a\n   wide variety of text transmission\
    \ and display protocols used on the\n   Internet.  Because the term is used to\
    \ mean different things,\n   confusion has arisen.  For example, the MIME registry\
    \ of character\n   sets [MIME] contains items that may differ greatly in their\n\
    \   applicability and semantics in various Internet protocols.\n   In addition,\
    \ there is a vast profusion of different text encoding\n   schemes in use on the\
    \ Internet.  This per se is not a problem; each\n   scheme has evolved to meet\
    \ real needs.  However, information\n   applications such as mail, directories,\
    \ and the World Wide Web have\n   each developed different techniques for dealing\
    \ with the growing\n   number of schemes.  A robust information architecture for\
    \ the\n   Internet requires as much interoperability between these techniques\n\
    \   as possible.\n"
- title: '2.1:  Related topics deemed out of scope for this workshop'
  contents:
  - "2.1:  Related topics deemed out of scope for this workshop\n   Successful display\
    \ of plain text transmitted over the Internet\n   requires a lot of information\
    \ about the text itself, such as the\n   underlying character set, language, and\
    \ so forth.  An additional set\n   of formatting information is needed if the\
    \ receiving application\n   wishes to use local (cultural) conventions when it\
    \ presents the data\n   to the user.  This formatting includes information, that\
    \ provides the\n   data necessary to format certain  types of textual data (dates,\n\
    \   times, numbers and monetary notation) into a form which is familiar\n   to\
    \ the user.  The POSIX [POSIX] notation of locale encompasses\n   language, coded\
    \ character set and cultural conventions.\n   To avoid unfruitful discussion,\
    \ and to make the best use of the time\n   available for the workshop, we declared\
    \ the following  issues out of\n   scope for the purposes of this workshop:\n\
    \   -  glyphs\n   -  sorting\n   -  culture (e.g. do we present the American or\
    \ British spelling?)\n   -  user interface issues\n   -  internal representation\
    \ of textual data\n   -  included characters (why aren't certain characters available\
    \ in\n          any character set?)\n   -  locale (in the POSIX sense)\n   - \
    \ font registration\n   -  semantics\n   -  user input/output issues\n   -  Han\
    \ unification issues\n   There are some related issues which were included for\
    \ discussion,\n   most importantly the 'locale' components necessary for transport\
    \ and\n   identification of multilingual texts.\n"
- title: '2.2:  Character Set handling in existing protocols'
  contents:
  - "2.2:  Character Set handling in existing protocols\n   One of the group's overriding\
    \ concerns was that the framework\n   developed for character set handling not\
    \ break existing protocols.\n   With that in mind, the way character sets are\
    \ being used in existing\n   protocols was examined.  See Appendix A for a list\
    \ of those protocols\n   and some recommendations for change.\n"
- title: '2.2.1:  General comments'
  contents:
  - "2.2.1:  General comments\n   The problem areas here fall into three main categories:\
    \ protocols,\n   identifiers, and data.\n"
- title: '2.2.1.1:  Protocols'
  contents:
  - "2.2.1.1:  Protocols\n   The protocol machinery SHOULD NOT be changed; allowing,\
    \ for instance,\n   SMTP [SMTP] to use both MAIL FROM and POST FRA is dangerous\
    \ to the\n   protocols' stability.  However, many protocols carry error messages\n\
    \   and other information that is intended for human consumption; it\n   MIGHT\
    \ be an advantage to allow these to be localized into a specific\n   language\
    \ and character set, rather than staying in English and US-\n   ASCII [ASCII].\
    \  If this is done, new extensions should follow the\n   framework outlined below.\n"
- title: '2.2.1.2:  Identifiers.'
  contents:
  - "2.2.1.2:  Identifiers.\n   There is a strong statement of direction from the\
    \ IAB, RFC 1958 [RFC\n   1958],  which states:\n        4.3 Public (i.e. widely\
    \ visible) names should be in case\n            independent ASCII.  Specifically,\
    \ this refers to DNS names,\n            and to protocol elements that are transmitted\
    \ in text format.\n            ...\n        5.4 Designs should be fully international,\
    \ with support for\n            localization (adaptation to local character sets).\
    \ In\n            particular, there should be a uniform approach to character\n\
    \            set tagging for information content.\n   In protocols that up to\
    \ now have used US-ASCII only, UTF-8 [UTF-8]\n   forms a simple upgrade path;\
    \ however, its use should be negotiated\n   either by negotiating a protocol version\
    \ or by negotiating charset\n   usage, and a fallback to a US-ASCII compatible\
    \ representation such as\n   UTF-7 [UTF-7] MUST be available.\n   The need for\
    \ passing application data such as language on individual\n   identifiers varies\
    \ between applications; protocols SHOULD attempt to\n   evaluate this need when\
    \ designing mechanisms.  Applying the ASCII\n   requirement for identifiers that\
    \ are only used in a local context\n   (such as private mailbox folder names)\
    \ is both unrealistic and\n   unreasonable; in such cases, methods for consistency\
    \ in the handling\n   of character set should be considered.\n"
- title: '2.2.1.3:  Data'
  contents:
  - "2.2.1.3:  Data\n   Data that require character set handling includes text, databases,\n\
    \   and HTML [HTML] pages, for example.  In these the support for\n   multiple\
    \ character sets and proper application information is\n   absolutely vital, and\
    \ MUST be supported.\n"
- title: '2.3:  Architectural requirements'
  contents:
  - "2.3:  Architectural requirements\n   To address the issues enumerated for this\
    \ work, first an\n   architectural model was created which establishes the components\
    \ that\n   are required to fully specify the transmission of textual data. Many\n\
    \   of these components are already familiar to the users of encoding\n   protocols\
    \ such as MIME.  Not all of these are discussed in detail in\n   this report;\
    \ we restrict ourselves primarily to those components\n   which are required to\
    \ specify the 'on-the-wire' phase of text\n   transmission.\n   Mandating a single,\
    \ all-encompassing character set would not fit well\n   with the IETF philosophy\
    \ of planning for architectural diversity.\n   So, the best that can be done is\
    \ to provide a common *framework* for\n   identifying and using the multitude\
    \ of character sets available on\n   the Internet.  It would be an advantage if\
    \ the total number of Coded\n   Character Sets could be kept to a minimum.  This\
    \ framework should\n   meet the following requirements:\n   -  it should not break\
    \ existing protocols (because then the likelihood\n        of deployment is very\
    \ small),\n   -  it should allow the use of character sets currently used on the\n\
    \        Internet, and\n   -  it should be relatively easy to build into new protocols.\n"
- title: '3:  Architectural model'
  contents:
  - "3:  Architectural model\n   The basic architectural model which guided our discussions\
    \ is shown\n   in below.  A distinction was made between those segments which\
    \ were\n   necessary to successfully transmit character set data on-the-wire and\n\
    \   those needed to present that data to a user in a comprehensible\n   manner.\
    \  The discussions were primarily restricted to those segments\n   of the model\
    \ which specify the 'on-the-wire' transmission of textual\n   data.\n   User interface\
    \ issues: these are briefly discussed in Section 3.1.1.\n        Layout\n    \
    \    Culture\n        Locale\n        Language\n   On-the-wire: see section 3.2\
    \ for detailed discussion.\n        Transfer Syntax\n        Character Encoding\
    \ Scheme\n        Coded Character Set\n"
- title: '3.1:  Segments defined'
  contents:
  - '3.1:  Segments defined

    '
- title: '3.1:1:  User interface'
  contents:
  - '3.1:1:  User interface

    '
- title: '3.1.1.1:  Layout'
  contents:
  - "3.1.1.1:  Layout\n   Layout includes the elements needed for displaying text\
    \ to the user,\n   such as font selection, word-wrapping, etc.  It is similar\
    \ to the\n   'presentation' layer in the 7-layer ISO telecommunications model\n\
    \   [ISO-7498].\n"
- title: '3.1.1.2:  Culture'
  contents:
  - "3.1.1.2:  Culture\n   Culture includes information about cultural preferences,\
    \ which affect\n   spelling, word choice, and so forth.\n"
- title: '3.1.1.3:  Locale'
  contents:
  - "3.1.1.3:  Locale\n   The locale component includes the information necessary\
    \ to make\n   choices about text manipulation which will present the text to the\n\
    \   user in an expected format.  This information may include the display\n  \
    \ of date, time and monetary symbol preferences.  Notice that locale\n   modifications\
    \ are typically applied to a text stream before it is\n   presented to the user,\
    \ although they also are used to specify input\n   formats.\n"
- title: '3.1.1.4:  Language'
  contents:
  - "3.1.1.4:  Language\n   This component specifies the language of the transmitted\
    \ text.  At\n   times and in specific cases, language information may be required\
    \ to\n   achieve a particular level of quality for the purpose of displaying a\n\
    \   text stream.  For example, UTF-8 encoded Han may require transmission\n  \
    \ of a language tag to select the specific glyphs to be displayed at a\n   particular\
    \ level of quality.\n   Note that information other than language may be used\
    \ to achieve the\n   required level of quality in a display process.  In particular,\
    \ a\n   font tag is sufficient to produce identical results.  However, the\n \
    \  association of a language with a specific block of text has\n   usefulness\
    \ far beyond its use in display.  In particular, as the\n   amount of information\
    \ available in multiple languages on the World\n   Wide Web grows, it becomes\
    \ critical to specify which language is in\n   use in particular documents, to\
    \ assist automatic indexing and\n   retrieval of relevant documents.\n   The term\
    \ 'language tag' should be reserved for the short identifier\n   of RFC 1766 [RFC-1766]\
    \ that only serves to identify the language.\n   While there may be other text\
    \ attributes intimately associated with\n   the language of the document, such\
    \ as desired font or text direction,\n   these should be specified with other\
    \ identifiers rather than\n   overloading the language tag.\n"
- title: '3.2:  On the wire'
  contents:
  - "3.2:  On the wire\n   There are three segments of the model which are required\
    \ for\n   completely specifying the content of a transmitted text stream (with\n\
    \   the occasional exception of the Language component, mentioned above).\n  \
    \ These components are:\n   1)  Coded Character Set,\n   2)  Character Encoding\
    \ Scheme, and\n   3)  Transfer Encoding Syntax.\n   Each of these abstract components\
    \ must be explicitly specified by the\n   transmitter when the data is sent. \
    \ There may be instances of an\n   implicit specification due to the protocol/standard\
    \ being used (i.e.\n   ANSI/NISO Z39.50).  Also, in MIME, the Coded Character\
    \ Set and\n   Character Encoding Scheme are specified by the Charset parameter\
    \ to\n   the Content-Type header field, and Transfer Encoding Syntax is\n   specified\
    \ by the Content-Transfer-Encoding header field.\n"
- title: '3.2.1:  Coded Character Set'
  contents:
  - "3.2.1:  Coded Character Set\n   A Coded Character Set (CCS) is a mapping from\
    \ a set of abstract\n   characters to a set of integers.  Examples of coded character\
    \ sets\n   are ISO 10646 [ISO-10646], US-ASCII [ASCII], and ISO-8859 series\n\
    \   [ISO-8859].\n"
- title: '3.2.2:  Character Encoding Scheme'
  contents:
  - "3.2.2:  Character Encoding Scheme\n   A Character Encoding Scheme (CES) is a\
    \ mapping from a Coded Character\n   Set or several coded character sets to a\
    \ set of octets. Examples of\n   Character Encoding Schemes are ISO 2022 [ISO-2022]\
    \ and UTF-8 [UTF-8].\n   A given CES is typically associated with a single CCS;\
    \ for example,\n   UTF-8 applies only to ISO 10646.\n"
- title: '3.2.3:  Transfer Encoding Syntax'
  contents:
  - "3.2.3:  Transfer Encoding Syntax\n   It is frequently necessary to transform\
    \ encoded text into a format\n   which is transmissible by specific protocols.\
    \  The Transfer Encoding\n   Syntax (TES) is a transformation applied to character\
    \ data encoded\n   using a CCS and possibly a CES to allow it to be transmitted.\n\
    \   Examples of Transfer Encoding Syntaxes are Base64 Encoding [Base64],\n   gzip\
    \ encoding, and so forth.\n"
- title: '3.3:  Determining which values of CCS, CES, and TES are used'
  contents:
  - "3.3:  Determining which values of CCS, CES, and TES are used\n   To completely\
    \ specify which CCS, CES, and TES are used in a specific\n   text transmission,\
    \ there needs to be a consistent set of labels for\n   specifying which CCS, CES,\
    \ and TES are used.  Once the appropriate\n   mechanisms have been selected, there\
    \ are six techniques for attaching\n   these labels to the data.\n   The labels\
    \ themselves are named and registered, either with IANA\n   [IANA] or with some\
    \ other registry.  Ideally, their definitions are\n   retrievable from some registration\
    \ authority.\n   Labels may be determined in one of the following ways:\n   -\
    \  Determined by guessing, where the receiver of the text has to\n      guess\
    \ the values of the CCS, CES, and TES. For example: \"I got\n      this from Sweden\
    \ so it's probably  ISO-8859-1.\"  This is\n      obviously not a very foolproof\
    \ way to decode text.\n   -  Determined by the standard, where the protocol used\
    \ to transmit\n      the data has made documented choices of CCS, CES, and TES\
    \ in the\n      standard. Thus, the encodings used are known through the\n   \
    \   access protocol, for example HTTP [HTTP] uses (but is not\n      limited to)\
    \ ISO-8859-1, SMTP uses US-ASCII.\n   -  Attached to the transfer envelope, where\
    \ the descriptive labels are\n      attached to the wrapper placed around the\
    \ text for transport.\n      MIME headers are a good example of this technique.\n\
    \   -  Included in the data stream, where the data stream itself has\n      been\
    \ encoded in such a way as to signal the character set used.\n      For example,\
    \ ISO-2022 encodes the data with escape sequences to\n      provide information\
    \ on the character subset currently being used.\n   -  Agreed by prior bilateral\
    \ agreement, where some out-of-band\n      negotiation has allowed the text transmitter\
    \ and receiver to\n      determine the CCS, CES, and  TES for the transmitted\
    \ text.\n   -  Agreed to by negotiation during some phase, typically\n      initialization\
    \ of the protocol.\n"
- title: '3.3.1:  Recommendations for value specification mechanisms'
  contents:
  - "3.3.1:  Recommendations for value specification mechanisms\n   While each of\
    \ these techniques (with the  exception of guessing) is\n   useful in particular\
    \ situations, interoperability requires a more\n   consistent set of techniques.\
    \  Thus, we recommend that MIME\n   registered values be used for all tagging\
    \ of character sets and\n   languages UNLESS there is an existing mechanism for\
    \ determining the\n   required information using one of the other techniques (except\n\
    \   guessing).  This recommendation will require a fair bit of work on\n   the\
    \ part of protocol designers, implementors, the IETF, the IESG, and\n   the IAB.\n\
    \   However, it is important to point out that the MIME concept of\n   'charset'\
    \ in some cases cuts across several layers of components in\n   our model.  While\
    \ this can be accepted in existing registrations, we\n   also recommend that the\
    \ MIME registration procedure for character\n   sets be modified to show how a\
    \ proposed character set deals with the\n   CCS and the CES. Most 'charsets' have\
    \ a well defined CCS and CES,\n   they should merely be teased apart for the registration.\n\
    \   There are a number of other recommendations, but these will be\n   covered\
    \ in the next sections.\n"
- title: '3.4:  Recommended Defaults'
  contents:
  - "3.4:  Recommended Defaults\n   For a number of reasons, one cannot define a mandatory\
    \ set of\n   defaults for all Internet protocols.  There is a mass of current\n\
    \   practice, future protocols are likely to have different purposes,\n   which\
    \ may determine their handling of text, and protocols may need\n   specific variation\
    \ support.  For example, in mail, text is a\n   predominant data type and coded\
    \ character sets then become a major\n   issue for the protocol.  Also, since\
    \ e-mail is ubiquitous and users\n   expect to be able to send it to everyone,\
    \ the mail protocols need to\n   be quite adept at handling different character\
    \ set encodings.  On the\n   other hand, if strings are seldom used in a given\
    \ protocol, there is\n   no need to weigh the protocol down with a sophisticated\
    \ apparatus for\n   handling multiple character sets, assuming that the predicated\n\
    \   character set can handle all the protocol's needs. This observation\n   also\
    \ applies to the specification techniques for character set\n   parameters.  If\
    \ only one character set encoding is needed, it can be\n   made explicit in the\
    \ protocol specification.  Protocols with a\n   greater need for character set\
    \ support will need a more elaborate\n   specification technique.\n"
- title: '3.4.1:  Clarity of specification'
  contents:
  - "3.4.1:  Clarity of specification\n   We recommend that each protocol clearly\
    \ specify what it is using for\n   each of the layers of the transmission model.\
    \  Users (or clients)\n   should never have to guess what the parameter is for\
    \ a given layer.\n"
- title: '3.4.2:  Default Coded Character Set:'
  contents:
  - "3.4.2:  Default Coded Character Set:\n   The default Coded Character Set is the\
    \ repertoire of ISO-10646.\n"
- title: '3.4.3:   Default Character Encoding Scheme'
  contents:
  - "3.4.3:   Default Character Encoding Scheme\n   For text-oriented protocols, new\
    \ protocols should use UTF-8, and\n   protocols that have a backwards compatibility\
    \ requirement should use\n   the default of the existing protocol, e.g. US-ASCII\
    \ for mail, and\n   ISO-8859-1 for HTTP.  The recommended specification scheme\
    \ is the\n   MIME \"charset\" specification, using the IANA \"charset\"\n   specifications.\
    \  The MIME specifications will need to be clarified to\n   meet this model in\
    \ the future.\n   For other protocols, the default should be UTF-8 as this initially\n\
    \   allows US-ASCII to be entered as-is, and enables the full repertoire\n   of\
    \ ISO 10646.\n   Some protocols, such as those descended from SGML [SGML], have\
    \ other\n   natural notations for characters outside their \"natural\" repertoire;\n\
    \   for instance, HTML [HTML] allows the use of &#nnnn to refer to any\n   ISO\
    \ 10646 character.  Note that this, like all other encodings that\n   depend on\
    \ \"escape characters\", redefines at least one character from\n   the base character\
    \ set for use as an indicator of \"foreign\"\n   characters.  Use of this approach\
    \ must be weighed very carefully.\n"
- title: '3.4.4:   Default Transport Encoding Scheme'
  contents:
  - "3.4.4:   Default Transport Encoding Scheme\n   There is no recommended default\
    \ for this level.  For plain text\n   oriented protocols, the bytestream transport\
    \ format should be 8-bit\n   clean, possibly with normalization of end-of-line\
    \ indicators.  Some\n   special cases could be made for protocols that are not\
    \ 8-bit clean,\n   such as encoding it for transport over 7-bit connections. \
    \ For binary\n   the same recommendation holds as above.  The specification technique\n\
    \   should either be defined in the  protocol, if only one way is\n   permitted,\
    \ or by use of MIME content-transfer-encoding (CTE)\n   techniques, using IANA\
    \ registered values.\n"
- title: '3.4.5:  Default Language'
  contents:
  - "3.4.5:  Default Language\n   There is no recommended default for the language\
    \ level.  For human\n   readable text, there should always be a way to specify\
    \ the natural\n   language. The specification technique should be a MIME identifier\n\
    \   with IANA  registered values for languages.  If headers are used, the\n  \
    \ header should be 'Content-Language'.\n"
- title: '3.4.6:  Default Locale'
  contents:
  - "3.4.6:  Default Locale\n   The default should be the POSIX locale.  The specification\
    \ technique\n   should use the Cultural register of CEN ENV 12005 [CEN] for the\n\
    \   values.  If headers are used, the header should be 'Content-Locale'.\n"
- title: '3.4.7:  Default Culture'
  contents:
  - "3.4.7:  Default Culture\n   There is no recommended default for the Culture level.\
    \  The\n   specification  technique should be a MIME or MIME-like identifier\n\
    \   (e.g. Content-Culture) and should use the Cultural register of CEN\n   ENV\
    \ 12005 for its values.\n"
- title: '3.4.8:  Default Presentation'
  contents:
  - "3.4.8:  Default Presentation\n   There is no recommended default for the Presentation\
    \ level.  The\n   specification technique should be a MIME or MIME-like identifier\n\
    \   (e.g.  Content-Layout) and use the glyph register of ISO 10036 and\n   other\
    \ registers for its values.\n"
- title: '3.4.9:  Multiplexing'
  contents:
  - "3.4.9:  Multiplexing\n   In some cases, text transmission may require the use\
    \ of a number of\n   different values for a given parameter; for example, English\n\
    \   annotation of Japanese text might well require shifting the Content-\n   Language\
    \ parameter.  The way to switch the value of parameters within\n   a single body\
    \ of text depends on the application.  For instance, the\n   HTML I18N [I18N]\
    \ work defines a language attribute on most of its\n   elements, including <SPAN>,\
    \ <HTML>, and <BODY>, for the purpose of\n   switching between different languages.\
    \  When only one value is\n   needed, this value should be as general as possible,\
    \ and specified in\n   the protocol standard with reference to the IANA or other\
    \ registry\n   value.  All levels should be specified explicitly.\n"
- title: '3.4.10:  Storage'
  contents:
  - "3.4.10:  Storage\n   Because stored text may very well be stored without any\
    \ of the\n   additional information necessary for decoding, stored text SHOULD\
    \ be\n   tagged in a MIME compliant fashion.  This alleviates the problem of\n\
    \   being unable to interpret text which has been stored for a long time,\n  \
    \ or text whose provenance is not available.\n"
- title: '3.5:  Guidelines for conversions between coded character sets'
  contents:
  - "3.5:  Guidelines for conversions between coded character sets\n   This section\
    \ covers various algorithms to convert a source text S,\n   encoded in the coded\
    \ character set CCS(S), to a target text T,\n   encoded in the coded character\
    \ set CCS(T).\n   Rep(X) is the character repertoire of coded character set X,\
    \ i.e. the\n   set of characters which can be represented with X.\n"
- title: '3.5.1:  Exact conversion'
  contents:
  - "3.5.1:  Exact conversion\n   When Rep(CCS(S)) and Rep(CCS(T)) are equal or Rep(CCS(S))\
    \ is a subset\n   of Rep(CCS(T)), exact conversion is possible; i.e. T is equal\
    \ to S.\n   The octets just need to be remapped.  The algorithm for performing\n\
    \   this remapping is simple, if the IANA-registered definition tables\n   for\
    \ CCS(S) and CCS(T) are available.\n"
- title: '3.5.2:  Approximate conversion'
  contents:
  - "3.5.2:  Approximate conversion\n   In all other cases, any conversion creates\
    \ a text T which differs\n   from S.  There are different principles for how this\
    \ inevitable\n   difference should be handled.  A choice between them should be\
    \ made,\n   depending on the purpose and requirements of the conversion.  Where\n\
    \   possible, the client application should be given mechanisms to\n   determine\
    \ what has been done to the text.\n   3.5.2.1:  Length-modifying conversion for\
    \ human display\n   When the length of the target text T is allowed to differ\
    \ from the\n   length of the source text S, one should use a conversion method\
    \ in\n   which each source character is converted to one or several target\n \
    \  character(s), using a best resemblance criteria in the choice of that\n   target\
    \ character(s).\n   Examples:\n      LATIN CAPITAL LETTER [*] ->  AE\n      COPYRIGHT\
    \ SIGN       [*] -> (c)\n"
- title: '3.5.2.2:  Length-preserving conversion for human display'
  contents:
  - "3.5.2.2:  Length-preserving conversion for human display\n   Where the text T\
    \ must be presented and the length of T cannot differ\n   from the length of S,\
    \ one should use a conversion method where each\n   source character is converted\
    \ to one target character, using some\n   kind of best  resemblance criteria in\
    \ the choice of target character.\n   Examples:\n     LATIN CAPITAL LETTER  [*]\
    \ -> A\n     COPYRIGHT SIGN        [*] -> C\n"
- title: '3.5.2.3:  Conversion without data loss'
  contents:
  - "3.5.2.3:  Conversion without data loss\n   Where the conversion of the text S\
    \ into T must be completely\n   reversible, apply a Character Encoding Syntax\
    \ or other reversible\n   transformation method.  This case is most frequently\
    \ met in data\n   storage requirements.\n   Examples:\n     LATIN CAPITAL LETTER\
    \ [*] -> &AE\n     COPYRIGHT SIGN       [*] -> &(C\n   An alternate method, which\
    \ can be used if the size of Rep(CCS(T)) >=\n   Rep(CCS(S)), then for each character\
    \ in Rep(CCS(S)) which is not\n   present in Rep(CCS(T)), define a mapping into\
    \ a character in\n   Rep(CCS(T)) which is not present in Rep(CCS(S)).\n   Examples:\n\
    \     LATIN CAPITAL LETTER  [*] -> CYRILLIC CAPITAL LETTER [*]\n     COPYRIGHT\
    \ SIGN  [*] -> PARTIAL DIFFERENTIAL SIGN [*]\n   Note that conversion without\
    \ data loss requires redefining some\n   member of T to indicate \"the introduction\
    \ of character data outside\n   T\".  This effectively adds another level of CES\
    \ on top of CES(T).\n"
- title: '4: Presentation issues'
  contents:
  - "4: Presentation issues\n   There are a number of considerations to make in selecting\
    \ the base\n   character set.  One such consideration is the protocol's convenience\n\
    \   to users with limited equipment (for example only ISO 8859-1 or a\n   keyboard\
    \ without the ability to enter all the characters in ISO\n   10646).  Alternative\
    \ representation should be considered for these\n   users, both for input and\
    \ output.  Possible options for the\n   representation of characters that can\
    \ not be displayed include\n   transliteration (a la CEN/TC304 or ISO TC46/SC2\
    \ ), RFC 1345 [RFC-\n   1345] representative icons, or the WG2 short name (u+xxxx).\n"
- title: '5: Open issues'
  contents:
  - "5: Open issues\n   In addition to the issues declared out of scope and enumerated\
    \ in\n   section 2.1, the following issues are still open and will need to be\n\
    \   addressed in other forums.  These issues: language tags, public\n   identifiers\
    \ such as URL names, and bi-directionality are briefly\n   discussed below as\
    \ they repeatedly encroached the discussion.\n"
- title: '5.1: Language tags'
  contents:
  - "5.1: Language tags\n   Although the workshop decided not to explicitly address\
    \ the so-called\n   \"CJK issue\", a few members felt it was necessary to have\
    \ some\n   mechanism to address the problem of correct Han character display in\n\
    \   the ISO-10646 issue, and that saying that it was a \"font issue\" would\n\
    \   not suffice.\n   The \"CJK issue\" refers to the extended discussion about\
    \ \"Han\n   unification\", the use of a single ISO-10646 codepoint to represent\n\
    \   multiple national variants of a Chinese (Han) character.  ISO-10646\n   can\
    \ map uniquely to any single CJK national character set, but in the\n   absence\
    \ of additional  information an application can not display an\n   ISO-10646 text\
    \ using the proper national variants for that text.\n   It was agreed that language\
    \ tags would be sufficient to disambiguate\n   unified characters. There was not,\
    \ in our opinion, a significant\n   technical difference between the use of different\
    \ coded character\n   sets with overlapping codepoints, and a single coded character\
    \ set\n   with language tags.  Either way, the application has sufficient\n  \
    \ information to display the text properly.\n   It was observed that in contemporary\
    \ usage of MIME charsets, the\n   language is implied as well as the coded character\
    \ set and the\n   character encoding syntax.  We agreed that this is excessive\n\
    \   overloading of MIME charsets.\n   To specify the language used in a particular\
    \ block of text, we\n   recommend that the MIME tag \"Content-Language\" be used.\
    \  There are a\n   number of questions about this approach that need to be worked\
    \ out,\n   however:\n   -  Is Content-Language: actually suitable?\n   -  Is there\
    \ an overload between this function and the other\n        intended functions\
    \ of Content-Language: as described in RFC\n        1766?\n   -  What, precisely,\
    \ does \"Content-Language: zh-tw, ja, ko, zh-cn\"\n        mean in this context?\
    \ We believe it means that, in drawing a\n        Han character, the Taiwanese\
    \ variant (presumably traditional\n        Han) is preferred, followed by the\
    \ Japanese, Korean, and\n        mainland Chinese (presumably simplified Han)\
    \ variants. It does\n        *NOT* mean \"mixed text containing Taiwanese, Japanese,\
    \ Korean,\n        and mainland Chinese text with all the national variants in\n\
    \        each of these\".\n   Mixed CJK text, that simultaneously displays different\
    \ variants\n   occupying the same codepoint, requires language tags embedded in\
    \ the\n   data.  Ohta and Handa propose in RFC 1554 [RFC-1554] a MIME charset\n\
    \   using ISO-2022 shifts between multiple coded character sets; in\n   effect\
    \ this is an encoding that uses coded character sets for\n   displaying the appropriate\
    \ glyphs.\n   There is some speculation that states that mixed CJK text is\n \
    \  relatively infrequent, and that therefore it is acceptable to require\n   that\
    \ such text be represented using a rich text format that can\n   support language\
    \ tags.  In other words, that a simplifying assumption\n   can be made for TEXT/PLAIN\
    \ in  email using ISO-10646 that will not\n   require multiple display representations\
    \ for the same codepoint.  A\n   mechanism such as RFC 1554 could address this\
    \ need if it was\n   important; although arguably RFC 1554 should really be identified\
    \ as\n   TEXT/ISO-2022.\n   Note again that we recommend that support for language\
    \ tagging SHOULD\n   be built into new protocols, as this will become a critical\
    \ component\n   of the automated indexing and retrieval in information applications\n\
    \   of the future.\n"
- title: '5.2:   Public identifiers'
  contents:
  - "5.2:   Public identifiers\n   There is a considerable demand from the user community\
    \ for the\n   ability to use non-ASCII characters in URL names, IMAP mailbox names,\n\
    \   file names, and other public identifiers. This is still an open\n   problem.\n"
- title: '5.3:   Bi-directionality'
  contents:
  - "5.3:   Bi-directionality\n   It was realized that a consistent framework for\
    \ bi-directional text\n   was needed but there was no attempt to work on it in\
    \ this workshop.\n"
- title: '6:  Security Considerations'
  contents:
  - "6:  Security Considerations\n   There are no security considerations associated\
    \ with character sets.\n"
- title: '7:  Conclusions'
  contents:
  - "7:  Conclusions\n   This paper provides a conceptual framework and a set of\n\
    \   recommendations which, if adopted, should provide a solid foundation\n   for\
    \ interoperability on the Internet. There are, however, a number of\n   open issues\
    \ which will need to be addressed to provide ever better\n   use of text on the\
    \ Internet.\n"
- title: '8:  Recommendations'
  contents:
  - '8:  Recommendations

    '
- title: '8.1:  To the IAB'
  contents:
  - "8.1:  To the IAB\n   There were a number of recommendations to the IAB about\
    \ making the\n   standards process more aware of the need for character set\n\
    \   interoperability, and about the framework itself.\n   A: The IAB should trigger\
    \ the examination of all RFCs to determine\n   the way  they handle character\
    \ sets, and obsolete or annotate the\n   RFCs where necessary.\n   B: The IESG\
    \ should trigger the recommendation of procedures to the\n   RFC editor  to encourage\
    \ RFCs to specify character set handling if\n   they specify the  transmission\
    \ of text.\n   C: The IAB should trigger the production of a perspectives document\n\
    \   on the  character set work that has gone on in the past and relate it\n  \
    \ to the current framework.\n   D: Full ISO 10646 has a sufficiently broad repertoire,\
    \ and scope for\n   further extension, that it is sufficient for use in Internet\n\
    \   Protocols (without excluding the use of existing alternatives).\n   There\
    \ is no need for specific development of character set standards\n   for the Internet.\n\
    \   E: The IAB should encourage the IRTF to create a research group to\n   explore\
    \ the open issues of character sets on the Internet. This group\n   should set\
    \ its sights much higher than this workshop did.\n   F: The IANA (perhaps with\
    \ the help of an IETF or IRTF group) should\n   develop  procedures for the registration\
    \ of new character sets for\n   use in the Internet.\n   G: Register UTF-8 as\
    \ a Character Encoding Scheme for MIME.\n   H: The current use of the \"x-*\"\
    \ format for distinguishing\n   experimental tags should be continued for private\
    \ use among\n   consenting parties. All other namespaces should be allocated by\
    \ IANA.\n   I: Application protocol RFCs SHOULD include a section on\n   \"multilingual\
    \ Considerations\".\n   J: Application Protocol RFCs SHOULD indicate how to transfer\
    \ 'on the\n   wire' all characters in the character sets they use. They SHOULD\
    \ also\n   specify how to transfer other information that applications may need\n\
    \   to know about the data.\n   K: The IESG should trigger a set of extensions\
    \ to RFC 1522 to allow\n   language tagging of the free text parts of message\
    \ headers.\n"
- title: '8.2:  For new Internet protocols'
  contents:
  - "8.2:  For new Internet protocols\n   New protocols do not suffer from the need\
    \ to be compatible with old\n   7-bit pipes.  New protocol specifications SHOULD\
    \ use ISO 10646 as the\n   base charset unless there is an overriding need to\
    \ use a different\n   base character set.\n   New protocols SHOULD use values\
    \ from the IANA registries when\n   referring to parameter values.  The way these\
    \ values are carried in\n   the protocols is protocol dependent; if the protocol\
    \ uses RFC-822-\n   like headers, the header names already in use SHOULD be used.\n\
    \   For protocols with only a single choice for each component, the\n   protocol\
    \  should use the most general specification and should be\n   specified with\
    \ reference to the registered value in the protocol\n   standard.\n   Protocols\
    \ SHOULD tag text streams with the language of the text.\n"
- title: '8.3:  For the registration of new character sets'
  contents:
  - "8.3:  For the registration of new character sets\n   Ned Freed will be releasing\
    \ a new MIME registration document in\n   conjunction with this paper.\n"
- title: '8.3.1:   A definition table for a coded character set'
  contents:
  - "8.3.1:   A definition table for a coded character set\n   A definition table\
    \ for a coded character set A must for each\n   character C that is in the repertoire\
    \ of A give:\n   a) if C is present in ISO 10646, the code value (in hexadecimal\
    \ form)\n        for that character.\n   b) If C is not present in ISO 10646,\
    \ but may be constructed using ISO\n        10646 combining characters, the series\
    \ of code values (in\n        hexadecimal form) used to construct that character.\n\
    \   c) if C is not present in ISO 10646, a textual description of the\n      \
    \  character,  and a reference to its origin.\n"
- title: '8.3.2:   A definition of a character encoding scheme'
  contents:
  - "8.3.2:   A definition of a character encoding scheme\n   A definition of a character\
    \ encoding scheme consists of:\n   -  A description of an algorithm which transforms\
    \ every possible\n        sequence of octets to either a sequence of pairs <CCS,\
    \ code\n        value> or to the  error state \"illegal octet sequence\"\n   -\
    \  Specifications, either by reference to CCS's registered by IANA or\n      in\
    \ text, of each CCS upon which this CES is based.\n"
- title: 'Appendix A:'
  contents:
  - 'Appendix A:

    '
- title: 'A-1:  IETF Protocols'
  contents:
  - "A-1:  IETF Protocols\n   The following list describes how various existing protocols\
    \ handle\n   multiple character set information.\n   Email\n      SMTP\n     \
    \   See 8.2. ESMTP makes it easy to negotiate the use of alternate\n        language\
    \ and encoding if it is needed.\n      Headers\n        RFC 1522 forms an adequate\
    \ framework for supporting text; UTF-8\n        alone is not a possible solution,\
    \ because the mail pathways are\n        assumed to be 7-bit 'forever'. However,\
    \ RFC 1522 should be\n        extended to allow language tagging of the free text\
    \ parts of\n        message headers.\n      Bodies\n        Selection of charset\
    \ parameters for Email text bodies is\n        reasonably well covered by the\
    \ charset= parameter on Text/* MIME\n        types.  Language is defined by the\
    \ Content-language header of\n        RFC 1766.  Other information will have to\
    \ be added using body\n        part headers; due to the way MIME differentiates\
    \ between body\n        part headers and message headers, these will all have\
    \ to have\n        names starting with Content- .\n   NetNews\n      NNTP\n  \
    \      See 8.2. No strong tradition for negotiation of encoding in NNTP\n    \
    \    exists.\n      NetNews Messages\n        These should be able to leverage\
    \ off the mechanisms defined for\n        Email.  One difference is that nearly\
    \ all NNTP channels are 8-\n        bit clean; some NNTP newsgroups have a tradition\
    \ of using 8-bit\n        charsets in both headers and bodies. Defining character\
    \ set\n        default on a per newsgroup basis might be a suitable approach.\n\
    \   RTCP\n        The identifiers carried as information about parties are already\n\
    \        defined to be in UTF-8.\n   FTP\n      Protocol\n        See 8.2. The\
    \ common use of welcome banners in the login response\n        means that there\
    \ might be strong reason here to allow client and\n        server to negotiate\
    \ a language different from the default for\n        greetings and error messages.\
    \ This should be a simple protocol\n        extension.\n      Filenames\n    \
    \    Many fileservers now how have the capability of using non-ASCII\n       \
    \ characters in filenames, while the \"dir\" and \"get\" commands of\n       \
    \ are defined in terms of US-ASCII only. One possible solution\n        would\
    \ be to define a \"UTF-8\" mode for the transfer of filenames\n        and directory\
    \ information; this would need to be a negotiated\n        facility, with fallback\
    \ to US-ASCII if not negotiated. The\n        important point here is consistency\
    \ between all implementations;\n        a single charset is better here than the\
    \ ability to handle\n        multiple charsets.\n   World Wide Web\n      HTTP\n\
    \        See 8.2. The single-shot stype of HTTP makes negotiation more\n     \
    \   complex than it would otherwise be.\n      HTML\n        Internationalization\
    \ of HTML [I18N] seems fairly well covered in\n        the current \"I18N\" document.\
    \ It needs review to see if it needs\n        more specific details in order to\
    \ carry application information\n        apart from the language.\n   URLs\n \
    \       URLs are \"input identifiers\", and powerful arguments should be\n   \
    \     made if they are ever to be anything but US-ASCII.\n   IMAP\n        IMAP's\
    \ information objects are MIME Email objects, and therefore\n        are able\
    \ to use that standard's methods. However, IMAP folder\n        names are local\
    \ identifiers; there is strong reason to allow\n        non-ASCII characters in\
    \ these. A UTF-8 negotiation might be the\n        most appropriate thing, however,\
    \ UTF-8 is awkward to use.\n        Unfortunately, UTF-7 isn't suitable because\
    \ it conflicts with\n        popular hierarchy delimiters. The most recent IMAP\
    \ work in\n        progress specification describes a modified UTF-7 which avoids\n\
    \        this problem.\n   DNS\n        DNS names are the prime example of identifiers\
    \ that need to stay\n        in US-ASCII for global interoperability. However,\
    \ some DNS\n        information, in particular TXT records, may represent\n  \
    \      information (such as names) that is outside the ASCII range. A\n      \
    \  single solution is the best; problems resulting from UTF-8\n        should\
    \ be investigated.\n   WHOIS++\n        WHOIS++ version 1 is defined to use ISO\
    \ 8859-1. The next version\n        will use UTF-8. The currently designed changes\
    \ will also allow\n        the specification of individual attributes on attribute\
    \ names;\n        these will make the passing of application information about\
    \ the\n        values (such as language) easier. No immediate action seems\n \
    \       necessary.\n   WHOIS\n        This has been a stable protocol for so many\
    \ years now that it\n        seems unwise to suggest that it be modified. Furthermore,\n\
    \        compatible extensions exist in RWHOIS and WHOIS++; modification\n   \
    \     should rather be made to these protocols than to the WHOIS\n        protocol\
    \ itself.\n   Telnet\n        This is a prime example of protocol where character\
    \ set support\n        is necessary and nonexistent. The current work in progress\
    \ on\n        character set negotiation in Telnet seems adequate to the task;\n\
    \        the question of passing other application data that might be\n      \
    \  useful is still open.\n"
- title: 'A-2: Non-IETF protocols'
  contents:
  - "A-2: Non-IETF protocols\n   For these protocols, the IETF does not have any power\
    \ to change them.\n   However, the guidelines developed by the workshop may still\
    \ be useful\n   as input to the further development of the protocols.\n   Gopher:\
    \ Gopher, Gopher+\n   Prospero (Archie)\n   NFS:  Filesystem\n   CORBA, Finger,\
    \ GEDI, IRC, ISO 10160/1, Kerberos, LPR, RSTAT, RWhois,\n   SGML, TFTP, X11, X.500,\
    \ Z39.50\n"
- title: 'Appendix B: Acronyms'
  contents:
  - "Appendix B: Acronyms\n   ASCII       American National Standard Code for Information\
    \ Character\n                 Sets\n   CCS         Coded Character Sets\n   CEN\
    \ ENV     European Committee for Standardisation (CEN) European\n            \
    \     pre-standard (ENV)\n   CES         Character Encoding Scheme\n   CJK   \
    \      Chinese Japanese Korean\n   CORBA       Common Object Request Broker Architecture\n\
    \   CTE         Content Transfer Encoding\n   DNS         Domain Name Service\n\
    \   ESMTP       Extended SMTP\n   FTP         File Transfer Protocol\n   HTML\
    \        Hypertext Transfer Protocol\n   I18N        Internationalization (or\
    \ 18 characters between the first\n                 (I) and last (n)character)\n\
    \   IAB         Internet Activities Board\n   IANA        Internet Assigned Numbers\
    \ Authority\n   IESG        Internet Engineering Steering Group\n   IETF     \
    \   Internet Engineering Task Force\n   IMAP        Internet Message Access Protocol\n\
    \   IRC         Internet Relay Chat\n   IRTF        Internet Research Task Force\n\
    \   ISI         Information Sciences Institute\n   ISO         International Standards\
    \ Organization\n   MIME        Multipurpose Internet Mail Extensions\n   NFS \
    \        Networked File Server\n   NNTP        Net News Transfer Protocol\n  \
    \ POSIX       Portable Operating System Interface\n   RFC         Request for\
    \ Comments (Internet standards documents)\n   RPC         Remote Procedure Call\n\
    \   RSTAT       Remote Statistics\n   RTCP        Real-Time Transport Control\
    \ Protocol\n   Rwhois      Referral Whois\n   SGML        Standard Generalized\
    \ Mark-up Language\n   SMTP        Simple Mail Transfer Protocol\n   TES     \
    \    Transfer Encoding Syntax\n   TFTP        Trivial File Transfer Protocol\n\
    \   URL         Uniform Resource Locator\n   UTF         Universal Text/Translation\
    \ Format\n"
- title: 'Appendix C:  Glossary'
  contents:
  - "Appendix C:  Glossary\n   Bi-directionality -  A property of some text where\
    \ text written right-\n         to- left (Arabic or Hebrew) and text written left-to-right\n\
    \         (e.g. Latin) are intermixed in one and the same line.\n   Character\
    \ - A single graphic symbol represented by sequence of one or\n        more bytes.\n\
    \   Character Encoding Scheme - The mapping from a coded character set to\n  \
    \      an encoding which may be more suitable for specific purpose. For\n    \
    \    example, UTF-8 is a character encoding scheme for ISO 10646.\n   Character\
    \ Set - An enumerated group of symbols (e.g., letters, numbers\n        or glyphs)\n\
    \   Coded Character Set - The mapping from a set of integers to the\n        characters\
    \ of a character set.\n   Culture - Preferences in the display of text based on\
    \ cultural norms,\n        such as spelling and word choice.\n   Language - The\
    \ words and combinations of words the constitute a system\n        of expression\
    \ and communication among people with a shared\n        history or set of traditions.\n\
    \   Layout - Information needed to display text to the user, similar to\n    \
    \    the presentation layer in the ISO telecommunications model.\n   Locale -\
    \ The attributes of communication, such as language, character\n        set and\
    \ cultural conventions.\n   On-the-wire -  The data that actually gets put into\
    \ packets for\n        transmission to other computers.\n   Transfer Encoding\
    \ Syntax -  The mapping from a coded character set\n        which has been encoded\
    \ in a Character Encoding Scheme to an\n        encoding which may be more suitable\
    \ for transmission using\n        specific protocols. For example, Base64 is a\
    \ transfer encoding\n        syntax.\n"
- title: 'Appendix D:  References'
  contents:
  - 'Appendix D:  References

    '
- title: '[*]  Non-ASCII character'
  contents:
  - '[*]  Non-ASCII character

    '
- title: '[ASCII]  ANSI X3.4:1986  "Coded  Character Sets - 7 Bit American'
  contents:
  - "[ASCII]  ANSI X3.4:1986  \"Coded  Character Sets - 7 Bit American\n     National\
    \ Standard Code for Information Interchange (7-bit ASCII)\"\n"
- title: '[Base64]  Freed, N., and N. Borenstein, "Multipurpose Internet'
  contents:
  - "[Base64]  Freed, N., and N. Borenstein, \"Multipurpose Internet\n     Mail Extensions\
    \ (MIME) Part One: Format of Internet Message\n     Bodies\", RFC 2045, November\
    \ 1996.\n"
- title: '[CEN]  see http://tobbi.iti.is/TC304/welcome.html for current status.'
  contents:
  - '[CEN]  see http://tobbi.iti.is/TC304/welcome.html for current status.

    '
- title: '[HTML]  Berners-Lee, T., and D. Connolly, "Hypertext Markup Language -'
  contents:
  - "[HTML]  Berners-Lee, T., and D. Connolly, \"Hypertext Markup Language -\n   \
    \  2.0\", RFC 1866, November 1995.\n"
- title: '[HTTP]  Berners-Lee, T., Fielding, R., and H. Nielsen, "Hypertext'
  contents:
  - "[HTTP]  Berners-Lee, T., Fielding, R., and H. Nielsen, \"Hypertext\n     Transfer\
    \ Protocol -- HTTP/1.0\", RFC 1945, May 1996.\n"
- title: '[I18N]  Yergeau, F., et.al.,  "Internationalization of the Hypertext'
  contents:
  - "[I18N]  Yergeau, F., et.al.,  \"Internationalization of the Hypertext\n     Markup\
    \ Language\", RFC 2070, January 1997.\n"
- title: '[IANA] Reynolds, J., and J. Postel, "Assigned Numbers", STD 2, RFC'
  contents:
  - "[IANA] Reynolds, J., and J. Postel, \"Assigned Numbers\", STD 2, RFC\n     1700,\
    \ ISI, October 1994.\n"
- title: '[ISO-2022]  ISO/IEC 2022:1994,  "Information technology -- Character'
  contents:
  - "[ISO-2022]  ISO/IEC 2022:1994,  \"Information technology -- Character\n     Code\
    \ Structure and Extension Techniques\",  JTC1/SC2.\n"
- title: '[ISO-7498]  ISO/IEC 7498-1:1994,  "Information technology - Open Systems'
  contents:
  - "[ISO-7498]  ISO/IEC 7498-1:1994,  \"Information technology - Open Systems\n \
    \    Interconnection - Basic Reference Model:  The Basic Model\".\n"
- title: '[ISO-8859]  Information Processing -- 8-bit Single-Byte Coded Graphic'
  contents:
  - "[ISO-8859]  Information Processing -- 8-bit Single-Byte Coded Graphic\n     Character\
    \ Sets -- Part 1: Latin Alphabet no. 1,\n     ISO 8859-1:1987(E). Part 2: Latin\
    \ Alphabet no. 2, ISO 8859-2\n     1987(E). Part 3: Latin Alphabet no. 3, ISO\
    \ 8859-3:1988(E).\n     Part 4: Latin Alphabet no. 4, ISO 8859-4, 1988(E). Part\
    \ 5:\n     Latin/Cyrillic Alphabet ISO 8859-5, 1988(E). Part 6:\n     Latin/Arabic\
    \ Alphabet, ISO 8859-6, 1987(E). Part 7: Latin/Greek\n     Alphabet, ISO 8859-7,\
    \ 1987(E). Part 8: Latin/Hebrew Alphabet, ISO\n     8859-8-1988(E).Part 9: Latin\
    \ Alphabet no. 5, ISO 8859-9, 1990(E).\n     Part 10: Latin Alphabet no. 6, ISO\
    \ 8859-10:1992(E).\n"
- title: '[ISO-10646]  ISO/IEC 10646-1:1993(E ),  "Information technology --'
  contents:
  - "[ISO-10646]  ISO/IEC 10646-1:1993(E ),  \"Information technology --\n     Universal\
    \ Multiple-Octet Coded Character Set (UCS) -- Part 1:\n     Architecture and Basic\
    \ Multilingual Plane\".  JTC1/SC2, 1993\n"
- title: '[MIME]  See [Base64]'
  contents:
  - '[MIME]  See [Base64]

    '
- title: '[POSIX]  Institute of Electrical and Electronics Engineers.  "IEEE'
  contents:
  - "[POSIX]  Institute of Electrical and Electronics Engineers.  \"IEEE\n     standard\
    \ interpretations for IEEE standard portable operating\n     systems interface\
    \ for computer environments\". IEEE Std 1003.1\n     -1988/Int, 1992 edition.\
    \  Sponsor, Technical Committee on Operating\n     Systems of the IEEE Computer\
    \ Society.  New York, NY: Institute of\n     Electrical and Electronic Engineers,\
    \ 1992.\n"
- title: RFC 1340  See [IANA]
  contents:
  - 'RFC 1340  See [IANA]

    '
- title: '[RFC-1345]  Simonsen, K., "Character Mnemonics & Character Sets",'
  contents:
  - "[RFC-1345]  Simonsen, K., \"Character Mnemonics & Character Sets\",\n     RFC\
    \ 1345, Rationel Alim Planlaegning, June 1992.\n"
- title: '[RFC-1554]  Ohta, M., and K. Handa,  "ISO-2022-JP-2: Multilingual'
  contents:
  - "[RFC-1554]  Ohta, M., and K. Handa,  \"ISO-2022-JP-2: Multilingual\n     Extension\
    \ of ISO-2022-JP\",  Tokyo Institute of Technology, ETL,\n     December 1993.\n"
- title: RFC 1642  See [UTF-7]
  contents:
  - 'RFC 1642  See [UTF-7]

    '
- title: '[RFC-1766]  Alvestrad, H., "Tags for the Identification of Languages",'
  contents:
  - "[RFC-1766]  Alvestrad, H., \"Tags for the Identification of Languages\",\n  \
    \   RFC 1766, UNINETT, March 1995.\n"
- title: '[RFC 1958]  Carpenter, B. (ed.) "Architectural Principles of the'
  contents:
  - "[RFC 1958]  Carpenter, B. (ed.) \"Architectural Principles of the\n     Internet\"\
    , RFC 1958, IAB, June 1996.\n"
- title: '[SGML] ISO 8879:1986 "Information Processing - Text and Office Systems'
  contents:
  - "[SGML] ISO 8879:1986 \"Information Processing - Text and Office Systems\n   \
    \  - Standard Generalized Markup Language (SGML)\"\n"
- title: '[SMTP]   Postel, J., "Simple Mail Transfer Protocol", STD 10, RFC 821,'
  contents:
  - "[SMTP]   Postel, J., \"Simple Mail Transfer Protocol\", STD 10, RFC 821,\n  \
    \   August, 1982.\n"
- title: '[Unicode]  "The Unicode standard, version 2.0.  Unicode Consortium.'
  contents:
  - "[Unicode]  \"The Unicode standard, version 2.0.  Unicode Consortium.\n     Reading,\
    \ Mass.: Addison-Wesley Developers Press, 1996\n"
- title: '[UTF-7]  Goldsmith, D., and M. Davis, "UTF-7: A Mail Safe'
  contents:
  - "[UTF-7]  Goldsmith, D., and M. Davis, \"UTF-7: A Mail Safe\n     Transformation\
    \ Format of Unicode\", RFC 1642, Taligent, Inc., July\n     1994.\n"
- title: '[UTF-8]  International Standards Organization, Joint Technical'
  contents:
  - "[UTF-8]  International Standards Organization, Joint Technical\n     Committee\
    \ 1 (ISO/JTC1), \"Amendment 2:1993, UCS Transformation\n     Format 8 (UTF-8)\"\
    , in ISO/IEC 10646-1:1993 Information technology\n     - Universal Multiple-Octet\
    \ Coded Character Set (UCS) -- Part 1:\n     Architecture and Basic Multilingual\
    \ Plane.  JTC1/SC2, 1993.\n"
- title: 'Appendix E:  Recommended reading'
  contents:
  - 'Appendix E:  Recommended reading

    '
- title: Alvestrand, H., "Tags for the Identification of Languages", RFC 1766,
  contents:
  - "Alvestrand, H., \"Tags for the Identification of Languages\", RFC 1766,\n   \
    \  UNINETT, March 1995.\n"
- title: Alvestrand, H., "X.400 Use of Extended Character Sets", RFC 1502,
  contents:
  - "Alvestrand, H., \"X.400 Use of Extended Character Sets\", RFC 1502,\n     SINTEF\
    \ DELAB, August 1993.\n"
- title: Borenstein, N.,  "Implications of MIME for Internet Mail Gateways",
  contents:
  - "Borenstein, N.,  \"Implications of MIME for Internet Mail Gateways\",\n     RFC\
    \ 1344, Bellcore, June 1992.\n"
- title: Freed, N., and N. Borenstein, "Multipurpose Internet
  contents:
  - "Freed, N., and N. Borenstein, \"Multipurpose Internet\n     Mail Extensions (MIME)\
    \ Part One: Format of Internet Message\n     Bodies\", RFC 2045, November 1996.\n"
- title: Chernov, A., "Registration of a Cyrillic Character Set", RFC 1489,
  contents:
  - "Chernov, A., \"Registration of a Cyrillic Character Set\", RFC 1489,\n     RELCOM\
    \ Development Team, July 1993.\n"
- title: Choi, U., and K. Chan, "Korean Character Encoding for Internet
  contents:
  - "Choi, U., and K. Chan, \"Korean Character Encoding for Internet\n     Messages\"\
    , RFC 1557, KAIST, December 1993.\n"
- title: Freed, N., and N. Borenstein, "Multipurpose Internet Mail Extensions
  contents:
  - "Freed, N., and N. Borenstein, \"Multipurpose Internet Mail Extensions\n     (MIME)\
    \ Part Two: Media Types\", RFC 2046, November 1996.\n"
- title: Goldsmith, D., and M. Davis, "Transformation Format for Unicode",
  contents:
  - "Goldsmith, D., and M. Davis, \"Transformation Format for Unicode\",\n     RFC\
    \ 1642, Taligent, Inc., July 1994.\n"
- title: Goldsmith, D., and M. Davis, "Using Unicode with MIME", RFC 1641,
  contents:
  - "Goldsmith, D., and M. Davis, \"Using Unicode with MIME\", RFC 1641,\n     Taligent,\
    \ Inc., July 1994.\n"
- title: Jerman-Blazic, B. "Character handling in computer communication" in
  contents:
  - "Jerman-Blazic, B. \"Character handling in computer communication\" in\n     \"\
    user needs in information technology standards\", Computer Weekly\n     Professional\
    \ service, eds. C.D. Evans, B.L. Meed & R.S. Walker,\n     P.C. Butterworth Heineman,\
    \ 1993, Oxford, Boston, p. 102-129.\n"
- title: Jerman-Blazic, B. "Tool supporting the internationalization of the
  contents:
  - "Jerman-Blazic, B. \"Tool supporting the internationalization of the\n     generic\
    \ network services\", Computer Networks and ISDN Systems,\n     No. 27 (1994),\
    \ p. 429-435.\n"
- title: Jerman-Blazic, B., A. Gogala and D. Gabrijelcic, "Transparent language
  contents:
  - "Jerman-Blazic, B., A. Gogala and D. Gabrijelcic, \"Transparent language\n   \
    \  processing: A solution for internationalization of Internet\n     services\"\
    , The LISA Forum Newsletter, 5 (1996) p. 12-21\n"
- title: Lee, F., "HZ - A Data Format for Exchanging Files of Arbitrarily Mixed
  contents:
  - "Lee, F., \"HZ - A Data Format for Exchanging Files of Arbitrarily Mixed\n   \
    \  Chinese and ASCII Characters\", RFC 1843, Stanford University,\n     August\
    \ 1995.\n"
- title: McCarthy, J., "Arbitrary Character Sets", RFC 373, Stanford
  contents:
  - "McCarthy, J., \"Arbitrary Character Sets\", RFC 373, Stanford\n     University,\
    \ July 1972.\n"
- title: 'Moore, K., "MIME (Multipurpose Internet Mail Extensions) Part Two:'
  contents:
  - "Moore, K., \"MIME (Multipurpose Internet Mail Extensions) Part Two:\n     Message\
    \ Header Extensions for Non-ASCII Text\", RFC 1522,\n     September 1993.  (Obsoleted\
    \ by RFC 2047.)\n"
- title: 'Moore, K., "MIME (Multipurpose Internet Mail Extensions) Part Three:'
  contents:
  - "Moore, K., \"MIME (Multipurpose Internet Mail Extensions) Part Three:\n     Message\
    \ Header Extensions for Non-ASCII Text\", RFC 2047,\n     University of Tennessee,\
    \ November 1996.\n"
- title: Murai, J., Crispin, M., and E. von der Poel. "Japanese Character
  contents:
  - "Murai, J., Crispin, M., and E. von der Poel. \"Japanese Character\n     Encoding\
    \ for Internet Messages\", RFC 1468, Keio University &\n     Panda Programming,\
    \ June 1993.\n"
- title: Nussbacher, H., "Handling of Bi-directional Texts in MIME", Israeli
  contents:
  - "Nussbacher, H., \"Handling of Bi-directional Texts in MIME\", Israeli\n     Inter-University,\
    \ December 1993.\n"
- title: Nussbacher, H., and Y. Bourvine, "Hebrew Character Encoding for
  contents:
  - "Nussbacher, H., and Y. Bourvine, \"Hebrew Character Encoding for\n     Internet\
    \ Messages\", RFC 1555, Israeli Inter-University and\n     Hebrew University,\
    \ December 1993.\n"
- title: Ohta, M., "Character Sets ISO-10646 and ISO-10646-J-1", RFC 1815,
  contents:
  - "Ohta, M., \"Character Sets ISO-10646 and ISO-10646-J-1\", RFC 1815,\n     Tokyo\
    \ Institute of Technology, July 1995.\n"
- title: Postel, J., and J. Reynolds, "File Transfer Protocol (FTP)", STD 9,
  contents:
  - "Postel, J., and J. Reynolds, \"File Transfer Protocol (FTP)\", STD 9,\n     RFC\
    \ 959, ISI, October 1985.\n"
- title: Postel, J., and J. Reynolds, "Telnet Protocol Specification", STD 8,
  contents:
  - "Postel, J., and J. Reynolds, \"Telnet Protocol Specification\", STD 8,\n    \
    \ RFC 854, ISI, May 1983.\n"
- title: Reynolds, J., and J. Postel, "Assigned Numbers", STD 2, RFC 1700,
  contents:
  - "Reynolds, J., and J. Postel, \"Assigned Numbers\", STD 2, RFC 1700,\n     ISI,\
    \ October 1994. p.100-117.\n"
- title: Rose, M., "The Internet Message", Prentice Hall, 1992.
  contents:
  - 'Rose, M., "The Internet Message", Prentice Hall, 1992.

    '
- title: Simonsen, K., "Character Mnemonics & Character Sets", RFC 1345,
  contents:
  - "Simonsen, K., \"Character Mnemonics & Character Sets\", RFC 1345,\n     Rationel\
    \ Almen Planlaegning, June 1992.\n"
- title: Unicode Consortium.  "The Unicode standard, version 2.0.  Reading,
  contents:
  - "Unicode Consortium.  \"The Unicode standard, version 2.0.  Reading,\n     Mass.:\
    \ Addison-Wesley Developers Press, 1996\n"
- title: Wei, U., et.al.  "ASCII Printable Characters-Based Chinese Character
  contents:
  - "Wei, U., et.al.  \"ASCII Printable Characters-Based Chinese Character\n     Encoding\
    \ for Internet Messages\", RFC 1842, AsiInfo Services,\n     Inc., et.al.  August\
    \ 1995.\n"
- title: Yergeau, F. "UTF-8, a transformation format of Unicode and ISO 10646",
  contents:
  - "Yergeau, F. \"UTF-8, a transformation format of Unicode and ISO 10646\",\n  \
    \   RFC 2044, ALIS Technologies, October 1996.\n"
- title: Zhu, H., et.al., "Chinese Character Encoding for Internet Messages",
  contents:
  - "Zhu, H., et.al., \"Chinese Character Encoding for Internet Messages\",\n    \
    \ RFC 1922, Tsinghua University, et.al., March 1996.\n"
- title: 'Appendix F: Workshop attendee list'
  contents:
  - "Appendix F: Workshop attendee list\n   These people were participants on the\
    \ workshop mailing list.\n   An * indicates that the person attended the workshop\
    \ in person.\n     Glenn Adams <glenn@spyglass.com>\n   * Joan Aliprand <joan@unicode.org>\n\
    \   * Harald Alvestrand <Harald.T.Alvestrand@uninett.no>\n   * Ran Atkinson <ran@cisco.com>\n\
    \   * Bert Bos <bert@w3.org>\n   * Brian Carpenter <brian@dxcoms.cern.ch>\n  \
    \ * Mark Crispin <mrc@panda.com>\n     Makx Dekkers <dekkers@pica.nl>\n     Robert\
    \ Elz <kre@munnari.oz.au>\n     Patrik Faltstrom <paf@paf.se>\n   * Zhu Haifeng\
    \ <zhf@net.tsinghua.edu.cn>\n     Keniichi Handa<handa@etl.go.jp>\n     Olle Jarnefors\
    \ <ojarnef@admin.kth.se>\n     Borka Jerman-Blazic <borka@e5.ijs.si>\n     John\
    \ Klensin <klensin@mail1.reston.mci.net>\n   * Larry Masinter <masinter@parc.xerox.com>\n\
    \   * Rick McGowan <Rick_McGowan@next.com>\n   * Keith Moore <moore+charsets@cs.utk.edu>\n\
    \   * Lisa Moore <lisam@vnet.ibm.com>\n     Ruth Moulton <ruth@muswell.demon.co.uk>\n\
    \   * Cecilia Preston <cecilia@well.com>\n   * Joyce K. Reynolds <jkrey@isi.edu>\n\
    \   * Keld Simonsen <keld@dkuug.dk>\n   * Gary Smith <Gary_Smith@oclc.org>\n \
    \  * Peter Svanberg <psv@nada.kth.se>\n   * Chris Weider <cweider@microsoft.com\
    \ >\n"
- title: 'Appendix G: Authors'' Addresses'
  contents:
  - "Appendix G: Authors' Addresses\n   Chris Weider\n   Microsoft Corp.\n   1 Microsoft\
    \ Way\n   Redmond, WA 98052\n   USA\n   EMail: cweider@microsoft.com\n   Cecilia\
    \ Preston\n   Preston & Lynch\n   PO Box 8310\n   Emeryville, CA 94662\n   USA\n\
    \   EMail: cecilia@well.com\n   Keld Simonsen\n   DKUUG\n   Freubjergvey 3\n \
    \  DK-2100 Kxbenhavn X\n   Danmark\n   EMail: Keld@dkuug.dk\n   Harald T. Alvestrand\n\
    \   UNINETT\n   P.O.Box 6883 Elgeseter\n   N-7002 TRONDHEIM\n   NORWAY\n   EMail:\
    \ Harald.T.Alvestrand@uninett.no\n   Randall Atkinson\n   cisco Systems\n   170\
    \ West Tasman Drive\n   San Jose, CA 95134-1706\n   USA\n   EMail: rja@cisco.com\n\
    \   Mark Crispin\n   Networks & Distributed Computing\n   University of Washington\n\
    \   4545 15th Avenue NE\n   Seattle, WA  98105-4527\n   USA\n   EMail: mrc@cac.washington.edu\n\
    \   Peter Svanberg\n   Dept. of Numberical Analysis and Computing Science (Nada)\n\
    \   Royal Institute of Technology\n   SE-100 44 STOCKHOLM\n   SWEDEN\n   EMail:\
    \ psv@nada.kth.se\n"
