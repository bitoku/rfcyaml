- contents:
  - "                            Center for Information Technology Integration\n            The
    Use of HMAC-RIPEMD-160-96 within ESP and AH\n"
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This memo describes the use of the HMAC algorithm [RFC 2104] in\n
    \  conjunction with the RIPEMD-160 algorithm [RIPEMD-160] as an\n   authentication
    mechanism within the revised IPSEC Encapsulating\n   Security Payload [ESP] and
    the revised IPSEC Authentication Header\n   [AH].  HMAC with RIPEMD-160 provides
    data origin authentication and\n   integrity protection.\n   Further information
    on the other components necessary for ESP and AH\n   implementations is provided
    by [Thayer97a].\n"
  title: Abstract
- contents:
  - "1.  Introduction\n   This memo specifies the use of RIPEMD-160 [RIPEMD-160] combined
    with\n   HMAC [RFC 2104] as a keyed authentication mechanism within the\n   context
    of the Encapsulating Security Payload and the Authentication\n   Header.  The
    goal of HMAC-RIPEMD-160-96 is to ensure that the packet\n   is authentic and cannot
    be modified in transit.\n   HMAC is a secret key authentication algorithm.  Data
    integrity and\n   data origin authentication as provided by HMAC are dependent
    upon the\n   scope of the distribution of the secret key.  If only the source
    and\n   destination know the HMAC key, this provides both data origin\n   authentication
    and data integrity for packets sent between the two\n   parties; if the HMAC is
    correct, this proves that it must have been\n   added by the source.\n   In this
    memo, HMAC-RIPEMD-160-96 is used within the context of ESP\n   and AH.  For further
    information on how the various pieces of ESP -\n   including the confidentiality
    mechanism -- fit together to provide\n   security services, refer to [ESP] and
    [Thayer97a].  For further\n   information on AH, refer to [AH] and [Thayer97a].\n
    \  The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n
    \  \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",  \"MAY\", and \"OPTIONAL\" in
    this\n   document are to be interpreted as described in [RFC 2119].\n"
  title: 1.  Introduction
- contents:
  - "2. Algorithm and Mode\n   [RIPEMD-160] describes the underlying RIPEMD-160 algorithm,
    while\n   [RFC 2104] describes the HMAC algorithm.  The HMAC algorithm provides\n
    \  a framework for inserting various hashing algorithms such as RIPEMD-\n   160.\n
    \  HMAC-RIPEMD-160-96 operates on 64-byte blocks of data.  Padding\n   requirements
    are specified in [RIPEMD-160] and are part of the\n   RIPEMD-160 algorithm.  Padding
    bits are only necessary in computing\n   the HMAC-RIPEMD-160 authenticator value
    and MUST NOT be included in\n   the packet.\n   HMAC-RIPEMD-160-96 produces a
    160-bit authenticator value.  This\n   160-bit value can be truncated as described
    in RFC2104.  For use with\n   either ESP or AH, a truncated value using the first
    96 bits MUST be\n   supported.  Upon sending, the truncated value is stored within
    the\n   authenticator field.  Upon receipt, the entire 160-bit value is\n   computed
    and the first 96 bits are compared to the value stored in\n   the authenticator
    field.  No other authenticator value lengths are\n   supported by HMAC-RIPEMD-160-96.\n
    \  The length of 96 bits was selected because it is the default\n   authenticator
    length as specified in [AH] and meets the security\n   requirements described
    in [RFC 2104].\n"
  - contents:
    - "2.1  Performance\n   [Bellare96a] states that \"(HMAC) performance is essentially
      that of\n   the underlying hash function\".  [RIPEMD-160] provides some\n   performance
      analysis.  As of this writing no detailed performance\n   analysis has been
      done of HMAC or HMAC combined with RIPEMD-160.\n   [RFC 2104] outlines an implementation
      modification which can improve\n   per-packet performance without affecting
      interoperability.\n"
    title: 2.1  Performance
  title: 2. Algorithm and Mode
- contents:
  - "3. Keying Material\n   HMAC-RIPEMD-160-96 is a secret key algorithm.  While no
    fixed key\n   length is specified in [RFC 2104], for use with either ESP or AH
    a\n   fixed key length of 160-bits MUST be supported.  Key lengths other\n   than
    160-bits SHALL NOT be supported.  A key length of 160-bits was\n   chosen based
    on the recommendations in [RFC 2104] (i.e. key lengths\n   less than the authenticator
    length decrease security strength and\n   keys longer than the authenticator length
    do not significantly\n   increase security strength).\n   [RFC 2104] discusses
    requirements for key material, which includes a\n   discussion on requirements
    for strong randomness.  A strong pseudo-\n   random function MUST be used to generate
    the required 160-bit key.\n   Implementors should refer to RFC 1750 for guidance
    on the\n   requirements for such functions.\n   At the time of this writing there
    are no specified weak keys for use\n   with HMAC.  This does not mean to imply
    that weak keys do not exist.\n   If, at some point, a set of weak keys for HMAC
    are identified, the\n   use of these weak keys must be rejected followed by a
    request for\n   replacement keys or a newly negotiated Security Association.\n
    \  [ESP] describes the general mechanism to obtain keying material for\n   the
    ESP transform.  The derivation of the key from some amount of\n   keying material
    does not differ between the manual and automatic key\n   management mechanisms.\n
    \  In order to provide data origin authentication, the key distribution\n   mechanism
    must ensure that unique keys are allocated and that they\n   are distributed only
    to the parties participating in the\n   communication.\n   [RFC 2104] states that
    for \"minimally reasonable hash functions\" the\n   \"birthday attack\" is impractical.
    \ For a 64-byte block hash such as\n   HMAC-RIPEMD-160-96, an attack involving
    the successful processing of\n   2**64 blocks would be infeasible unless it were
    discovered that the\n   underlying hash had collisions after processing 2**30
    blocks.  (A\n   hash with such weak collision-resistance characteristics would\n
    \  generally be considered to be unusable.) No time-based attacks are\n   discussed
    in the document.\n   While it it still cryptographically prudent to perform frequent\n
    \  rekeying, current literature does not include any recommended key\n   lifetimes
    for HMAC-RIPEMD.  When recommendations for HMAC-RIPEMD key\n   lifetimes become
    available they will be included in a revised version\n   of this document.\n"
  title: 3. Keying Material
- contents:
  - "4.  Interaction with the ESP Cipher Mechanism\n   As of this writing, there are
    no known issues which preclude the use\n   of the HMAC-RIPEMD-160-96 algorithm
    with any specific cipher\n   algorithm.\n"
  title: 4.  Interaction with the ESP Cipher Mechanism
- contents:
  - "5.  Security Considerations\n   The security provided by HMAC-RIPEMD-160-96 is
    based upon the\n   strength of HMAC, and to a lesser degree, the strength of RIPEMD-160.\n
    \  At the time of this writing there are no known practical\n   cryptographic
    attacks against RIPEMD-160.\n   It is also important to consider that while RIPEMD-160
    was never\n   developed to be used as a keyed hash algorithm, HMAC had that\n
    \  criteria from the onset.\n   [RFC 2104] also discusses the potential additional
    security which is\n   provided by the truncation of the resulting hash.  Specifications\n
    \  which include HMAC are strongly encouraged to perform this hash\n   truncation.\n
    \  As [RFC 2104] provides a framework for incorporating various hash\n   algorithms
    with HMAC, it is possible to replace RIPEMD-160 with other\n   algorithms such
    as SHA-1.  [RFC 2104] contains a detailed discussion\n   on the strengths and
    weaknesses of HMAC algorithms.\n   As is true with any cryptographic algorithm,
    part of its strength\n   lies in the correctness of the algorithm implementation,
    the security\n   of the key management mechanism and its implementation, the strength\n
    \  of the associated secret key, and upon the correctness of the\n   implementation
    in all of the participating systems.  [Kapp97]\n   contains test vectors and example
    code to assist in verifying the\n   correctness of HMAC-RIPEMD-160-96 code.\n"
  title: 5.  Security Considerations
- contents:
  - "6.  Acknowledgements\n   This document is derived from work by C. Madson and
    R. Glenn and from\n   previous works by Jim Hughes, those people that worked with
    Jim on\n   the combined DES/CBC+HMAC-MD5 ESP transforms, the ANX bakeoff\n   participants,
    and the members of the IPsec working group.\n"
  title: 6.  Acknowledgements
- contents:
  - "7.  References\n   [RIPEMD-160]  3.ISO/IEC 10118-3:1998, \"Information technology
    -\n                 Security techniques - Hash-functions - Part 3:\n                 Dedicated
    hash-functions,\" International Organization\n                 for Standardization,
    Geneva, Switzerland, 1998.\n   [RFC 2104]    Krawczyk, H., Bellare, M. and R.
    Canetti, \"HMAC:\n                 Keyed-Hashing for Message Authentication\",
    RFC 2104,\n                 September, 1997.\n   [Bellare96a]  Bellare, M., Canetti,
    R., Krawczyk, H., \"Keying Hash\n                 Functions for Message Authentication\",
    Advances in\n                 Cryptography, Crypto96 Proceeding, June 1996.\n
    \  [ESP]         Kent, S. and R. Atkinson, \"IP Encapsulating Security\n                 Payload
    (ESP)\", RFC 2406, November 1998.\n   [AH]          Kent, S. and R. Atkinson,
    \"IP Authentication Header\",\n                 RFC 2402, November 1998.\n   [Thayer97a]
    \  Thayer, R., Doraswamy, N. and R. Glenn, \"IP Security\n                 Document
    Roadmap\", RFC 2411, November 1998.\n   [Kapp97]      Kapp, J., \"Test Cases for
    HMAC-RIPEMD160 and HMAC-\n                 RIPEMD128\", RFC 2286, March 1998.\n
    \  [RFC 1750]    Eastlake 3rd, D., Crocker, S. and J. Schiller,\n                 \"Randomness
    Recommendations for Security\", RFC 1750,\n                 December 1994.\n   [RFC
    2119]    Bradner, S., \"Key words for use in RFCs to Indicate\n                 Requirement
    Levels\", BCP 14, RFC 2119, March 1997.\n"
  title: 7.  References
- contents:
  - "8.  Authors' Addresses\n      Angelos D. Keromytis\n      Distributed Systems
    Lab\n      Computer and Information Science Department\n      University of Pennsylvania\n
    \     200 S. 33rd Street\n      Philadelphia, PA 19104 - 6389\n      EMail: angelos@dsl.cis.upenn.edu\n
    \     Niels Provos\n      Center for Information Technology Integration\n      University
    of Michigan\n      519 W. William\n      Ann Arbor, Michigan 48103 USA\n      EMail:
    provos@citi.umich.edu\n   The IPsec working group can be contacted through the
    chairs:\n      Robert Moskowitz\n      International Computer Security Association\n
    \     EMail: rgm@icsa.net\n      Ted T'so\n      VA Linux Systems\n      EMail:
    tytso@valinux.com\n"
  title: 8.  Authors' Addresses
- contents:
  - "9.  Full Copyright Statement\n   Copyright (C) The Internet Society (2000).  All
    Rights Reserved.\n   This document and translations of it may be copied and furnished
    to\n   others, and derivative works that comment on or otherwise explain it\n
    \  or assist in its implementation may be prepared, copied, published\n   and
    distributed, in whole or in part, without restriction of any\n   kind, provided
    that the above copyright notice and this paragraph are\n   included on all such
    copies and derivative works.  However, this\n   document itself may not be modified
    in any way, such as by removing\n   the copyright notice or references to the
    Internet Society or other\n   Internet organizations, except as needed for the
    purpose of\n   developing Internet standards in which case the procedures for\n
    \  copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: 9.  Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
