- title: __initial_text__
  contents:
  - '        The Session Initiation Protocol (SIP) "Replaces" Header

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines a new header for use with Session Initiation\n\
    \   Protocol (SIP) multi-party applications and call control.  The\n   Replaces\
    \ header is used to logically replace an existing SIP dialog\n   with a new SIP\
    \ dialog.  This primitive can be used to enable a\n   variety of features, for\
    \ example: \"Attended Transfer\" and \"Call\n   Pickup\".  Note that the definition\
    \ of these example features is non-\n   normative.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Overview. . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n   2.  Conventions . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   4\n   3.  User Agent Server Behavior: Receiving a Replaces Header\
    \ . . .   4\n   4.  User Agent Client Behavior: Sending a Replaces Header . .\
    \ . .   6\n   5.  Proxy Behavior. . . . . . . . . . . . . . . . . . . . . . .\
    \ .   7\n   6.  Syntax. . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \   7\n       6.1.  The Replaces Header . . . . . . . . . . . . . . . . . .  \
    \ 7\n       6.2.  New Option Tag for Require and Supported Headers. . . .   8\n\
    \   7.  Usage Examples. . . . . . . . . . . . . . . . . . . . . . . .   9\n  \
    \     7.1.  Replacing an Early Dialog at the Originator . . . . . .   9\n   8.\
    \  Security Considerations . . . . . . . . . . . . . . . . . . .  11\n   9.  IANA\
    \ Considerations . . . . . . . . . . . . . . . . . . . . .  13\n       9.1.  Registration\
    \ of \"Replaces\" SIP Header . . . . . . . . .  13\n       9.2.  Registration\
    \ of \"replaces\" SIP Option-tag . . . . . . .  13\n   10. Acknowledgments . .\
    \ . . . . . . . . . . . . . . . . . . . . .  13\n   11. References. . . . . .\
    \ . . . . . . . . . . . . . . . . . . . .  13\n       11.1. Normative References.\
    \ . . . . . . . . . . . . . . . . .  13\n       11.2. Informative References.\
    \ . . . . . . . . . . . . . . . .  14\n   12. Authors' Addresses. . . . . . .\
    \ . . . . . . . . . . . . . . .  15\n   13. Full Copyright Statement. . . . .\
    \ . . . . . . . . . . . . . .  16\n"
- title: 1.  Overview
  contents:
  - "1.  Overview\n   This document describes a SIP [1] extension header field as\
    \ part of\n   the SIP multiparty applications architecture framework [10].  The\n\
    \   Replaces header is used to logically replace an existing SIP dialog\n   with\
    \ a new SIP dialog.  This is especially useful in peer-to-peer\n   call control\
    \ environments.\n   One use of the \"Replaces\" header is to replace one participant\
    \ with\n   another in a multimedia conversation.  While this functionality is\n\
    \   already available using 3rd party call control [11] style call\n   control,\
    \ the 3pcc model requires a central point of control which may\n   not be desirable\
    \ in many environments.  As such, a method of\n   performing these same call control\
    \ primitives in a distributed,\n   peer-to-peer fashion is very desirable.\n \
    \  Use of a new INVITE with a new header for dialog matching was chosen\n   over\
    \ making implicit associations in an incoming INVITE based on\n   call-id or other\
    \ fields for the following reasons:\n   o  An INVITE already has the correct semantics\
    \ for a new call\n   o  Using an explicit Replaces header in a new request makes\
    \ the\n      intent of the request obvious.\n   o  A unique call-id may be given\
    \ to the replacement call.  This\n      avoids dialog matching problems in any\
    \ of the related User Agents.\n   o  There are no adverse effects if the header\
    \ is unsupported.\n   The Replaces header enables services such as attended call\
    \ transfer,\n   retrieve from park, and transition from locally mixed conferences\
    \ to\n   two party calls in a distributed peer-to-peer way.  This list of\n  \
    \ services is not exhaustive.  Although the Replaces header is\n   frequently\
    \ used in combination with the REFER [8] method as used in a\n   Transfer [12],\
    \ they may be used independently.\n   For example, Alice is talking to Bob from\
    \ phone1.  She transfers Bob\n   to a Parking Place while she goes to the lab.\
    \  When she gets there\n   she retrieves the \"parked\" call from phone2 by sending\
    \ an INVITE with\n   a Replaces header field to Bob with the dialog information\
    \ Bob shared\n   with the Parking Place.  Alice got this information using some\
    \ out of\n   band mechanism.  Perhaps she subscribed to this information from\
    \ the\n   Parking Place (using the session dialog package [13]), or went to a\n\
    \   website and clicked on a URI.  A short call flow for this example\n   follows.\
    \  (Via and Max-Forwards headers are omitted for clarity.)\n        Alice    \
    \      Alice                             Parking\n        phone1         phone2\
    \            Bob               Place\n        |               |              \
    \   |                   |\n        |<===============================>|       \
    \            |\n        |               |                 |                  \
    \ |\n        |        Alice transfers Bob to Parking Place         |\n       \
    \ |               |                 |                   |\n        |------------REFER/200----------->|\
    \    *1    *2       |\n        |<--NOTIFY/200 (trying)-----------|--INVITE/200/ACK-->|\n\
    \        |<--NOTIFY/200 (success)----------|<=================>|\n        |------------BYE/200------------->|\
    \                   |\n        |               |                 |           \
    \        |\n        |               |                 |                   |\n\
    \        |  Alice later retrieves call from another phone      |\n        |  \
    \             |                 |                   |\n        |            *3\
    \ |-INV w/Replaces->|                   |\n        |               |<--200-----------|\
    \                   |\n        |               |---ACK---------->|----BYE/200------->|\n\
    \        |               |<===============>|                   |\n        |  \
    \             |                 |                   |\n   Message *1: Bob-> Parking\
    \ Place\n   INVITE sip:parkingplace@example.org SIP/2.0\n   To: <sip:parkingplace@example.org>\n\
    \   From: <sip:bob@example.org>;tag=7743\n   Call-ID: 425928@bobster.example.org\n\
    \   CSeq: 1 INVITE\n   Contact: <sip:bob@bobster.example.org>\n   Referred-By:\
    \ <sip:alice@phone1.example.org>\n   Message *2: Parking Place -> Bob\n   SIP/2.0\
    \ 200 OK\n   To: <sip:parkingplace@example.org>;tag=6472\n   From: <sip:bob@example.org>;tag=7743\n\
    \   Call-ID: 425928@bobster.example.org\n   CSeq: 1 INVITE\n   Contact: <sip:parkplace@monopoly.example.org>\n\
    \   Message *3: Alice@phone2 -> Bob\n   INVITE sip:bob@bobster.example.org\n \
    \  To: <sip:bob@example.org>\n   From: <sip:alice@phone2.example.org>;tag=8983\n\
    \   Call-ID: 09870@phone2.example.org\n   CSeq: 1 INVITE\n   Contact: <sip:alice@phone2.example.org>\n\
    \   Require: replaces\n   Replaces: 425928@bobster.example.org;to-tag=7743;from-tag=6472\n"
- title: 2.  Conventions
  contents:
  - "2.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",  \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in BCP\
    \ 14, RFC 2119 [2].\n   This document refers frequently to the terms \"confirmed\
    \ dialog\" and\n   \"early dialog\".  These are defined in Section 12 of SIP [1].\n"
- title: '3.  User Agent Server Behavior: Receiving a Replaces Header'
  contents:
  - "3.  User Agent Server Behavior: Receiving a Replaces Header\n   The Replaces\
    \ header contains information used to match an existing\n   SIP dialog (call-id,\
    \ to-tag, and from-tag).  Upon receiving an INVITE\n   with a Replaces header,\
    \ the User Agent (UA) attempts to match this\n   information with a confirmed\
    \ or early dialog.  The User Agent Server\n   (UAS) matches the to-tag and from-tag\
    \ parameters as if they were tags\n   present in an incoming request.  In other\
    \ words, the to-tag parameter\n   is compared to the local tag, and the from-tag\
    \ parameter is compared\n   to the remote tag.\n   If more than one Replaces header\
    \ field is present in an INVITE, or if\n   a Replaces header field is present\
    \ in a request other than INVITE,\n   the UAS MUST reject the request with a 400\
    \ Bad Request response.\n   The Replaces header has specific call control semantics.\
    \  If both a\n   Replaces header field and another header field with contradictory\n\
    \   semantics are present in a request, the request MUST be rejected with\n  \
    \ a 400 \"Bad Request\" response.\n   If the Replaces header field matches more\
    \ than one dialog, the UA\n   MUST act as if no match is found.\n   If no match\
    \ is found, the UAS rejects the INVITE and returns a 481\n   Call/Transaction\
    \ Does Not Exist response.  Likewise, if the Replaces\n   header field matches\
    \ a dialog which was not created with an INVITE,\n   the UAS MUST reject the request\
    \ with a 481 response.\n   If the Replaces header field matches a dialog which\
    \ has already\n   terminated, the UA SHOULD decline the request with a 603 Declined\n\
    \   response.  (If the matched invitation was just terminated, the\n   replacement\
    \ request should fail as well.  Declining the request with\n   a 600-class response\
    \ prevents an irritating race-condition where the\n   UA rings or alerts for a\
    \ replacement call which is not wanted.)\n   If the Replaces header field matches\
    \ an active dialog, the UA MUST\n   verify that the initiator of the new INVITE\
    \ is authorized to replace\n   the matched dialog.  If the initiator of the new\
    \ INVITE has been\n   successfully authenticated as equivalent to the user who\
    \ is being\n   replaced, then the replacement is authorized.  For example, if\
    \ the\n   user being replaced and the initiator of the replacement dialog share\n\
    \   the same credentials for Digest authentication [6], or they sign the\n   replacement\
    \ request with S/MIME [7] with the same private key and\n   present the (same)\
    \ corresponding certificate used in the original\n   dialog, then the replacement\
    \ is authorized.\n   Alternatively, the Referred-By mechanism [4] defines a mechanism\
    \ that\n   the UAS can use to verify that a replacement request was sent on\n\
    \   behalf of the other participant in the matched dialog (in this case,\n   triggered\
    \ by a REFER request).  If the replacement request contains a\n   Referred-By\
    \ header that corresponds to the user being replaced, the\n   UA SHOULD treat\
    \ the replacement as if the replacement was authorized\n   by the replaced party.\
    \  The Referred-By header SHOULD reference a\n   corresponding, valid Refererred-By\
    \ Authenticated Identity Body [5].\n   The UA MAY apply other local policy to\
    \ authorize the remainder of the\n   request.  In other words, the UAS may apply\
    \ a different policy to the\n   replacement dialog than was applied to the replaced\
    \ dialog.\n   In addition, the UA MAY use other authorization mechanisms defined\n\
    \   for this purpose in standards track extensions.  Extensions could\n   define\
    \ other mechanisms for transitively asserting authorization of a\n   replacement.\n\
    \   If authorization is successful, the UA attempts to accept the new\n   INVITE,\
    \ reassign the user interface and other resources of the\n   matched dialog to\
    \ the new INVITE, and shut down the replaced dialog.\n   If the UA cannot accept\
    \ the new INVITE (for example: it cannot\n   establish required QoS or keying,\
    \ or it has incompatible media), the\n   UA MUST return an appropriate error response\
    \ and MUST leave the\n   matched dialog unchanged.\n   If the Replaces header\
    \ field matches a confirmed dialog, it checks\n   for the presence of the \"early-only\"\
    \ flag in the Replaces header\n   field.  (This flag allows the UAC to prevent\
    \ a potentially\n   undesirable race condition described in Section 7.1.) If the\
    \ flag is\n   present, the UA rejects the request with a 486 Busy response.\n\
    \   Otherwise, it accepts the new INVITE by sending a 200-class response,\n  \
    \ and shuts down the replaced dialog by sending a BYE.  If the Replaces\n   header\
    \ field matches an early dialog that was initiated by the UA, it\n   accepts the\
    \ new INVITE by sending a 200-class response, and shuts\n   down the replaced\
    \ dialog by sending a CANCEL.\n   If the Replaces header field matches an early\
    \ dialog that was not\n   initiated by this UA, it returns a 481 (Call/Transaction\
    \ Does Not\n   Exist) response to the new INVITE, and leaves the matched dialog\n\
    \   unchanged.  Note that since Replaces matches only a single dialog,\n   the\
    \ replacement dialog will not be retargeted according to the same\n   forking\
    \ logic as the original request which created the early dialog.\n   (Currently,\
    \ no use cases have been identified for replacing just a\n   single dialog in\
    \ this circumstance.)\n"
- title: '4.  User Agent Client Behavior: Sending a Replaces Header'
  contents:
  - "4.  User Agent Client Behavior: Sending a Replaces Header\n   A User Agent that\
    \ wishes to replace a single existing early or\n   confirmed dialog with a new\
    \ dialog of its own, MAY send the target\n   User Agent an INVITE request containing\
    \ a Replaces header field.  The\n   User Agent Client (UAC) places the Call-ID,\
    \ to-tag, and from-tag\n   information for the target dialog in a single Replaces\
    \ header field\n   and sends the new INVITE to the target.  If the user agent\
    \ only\n   wishes to replace an early dialog (as in the Call Pickup example in\n\
    \   Section 7.1), the UAC MAY also include the \"early-only\" parameter in\n \
    \  the Replaces header field.  A UAC MUST NOT send an INVITE with a\n   Replaces\
    \ header field that attempts to replace an early dialog which\n   was not originated\
    \ by the target of the INVITE with a Replaces header\n   field.\n   Note that\
    \ use of this mechanism does not provide a way to match\n   multiple dialogs,\
    \ nor does it provide a way to match an entire call,\n   an entire transaction,\
    \ or to follow a chain of proxy forking logic.\n   For example, if Alice replaces\
    \ Cathy in an early dialog with Bob, but\n   Bob does not answer, Alice's replacement\
    \ request will not match other\n   dialogs to which Bob's UA redirects, nor other\
    \ branches to which his\n   proxy forwards.  Although this specification takes\
    \ reasonable\n   precautions to prevent unexpected behavior in the face of forking,\n\
    \   implementations SHOULD only address replacement requests (i.e., set\n   the\
    \ Request-URI of the replacement request) to the SIP Contact URI of\n   the target.\n"
- title: 5.  Proxy behavior
  contents:
  - "5.  Proxy behavior\n   Proxy Servers do not require any new behavior to support\
    \ this\n   extension.  They simply pass the Replaces header field transparently\n\
    \   as described in the SIP specification.\n   Note that it is possible for a\
    \ proxy (especially when forking based\n   on some application layer logic, such\
    \ as caller screening or time-\n   of-day routing) to forward an INVITE request\
    \ containing a Replaces\n   header field to a completely orthogonal set of Contacts\
    \ other than\n   the original request it was intended to replace.  In this case,\
    \ the\n   INVITE request with the Replaces header field will fail.\n"
- title: 6.  Syntax
  contents:
  - '6.  Syntax

    '
- title: 6.1.  The Replaces Header
  contents:
  - "6.1.  The Replaces Header\n   The Replaces header field indicates that a single\
    \ dialog identified\n   by the header field is to be shut down and logically replaced\
    \ by the\n   incoming INVITE in which it is contained.  It is a request header\n\
    \   only, and defined only for INVITE requests.  The Replaces header\n   field\
    \ MAY be encrypted as part of end-to-end encryption.  Only a\n   single Replaces\
    \ header field value may be present in a SIP request.\n   This document adds the\
    \ following entry to Table 2 of [1].  Additions\n   to this table are also provided\
    \ for extension methods defined at the\n   time of publication of this document.\
    \  This is provided as a courtesy\n   to the reader and is not normative in any\
    \ way.  MESSAGE, SUBSCRIBE\n   and NOTIFY, REFER, INFO, UPDATE, PRACK, and PUBLISH\
    \ are defined\n   respectively in [15], [16], [8], [17], [18], [19], and [20].\n\
    \      Header field    where   proxy   ACK  BYE  CAN  INV  OPT  REG  MSG\n   \
    \   ------------    -----   -----   ---  ---  ---  ---  ---  ---  ---\n      Replaces\
    \          R              -    -    -    o    -    -    -\n                  \
    \                    SUB  NOT  REF  INF  UPD  PRA  PUB\n                     \
    \                 ---  ---  ---  ---  ---  ---  ---\n      Replaces          R\
    \              -    -    -    -    -    -    -\n   The following syntax specification\
    \ uses the augmented Backus-Naur\n   Form (BNF) as described in RFC 2234 [3].\
    \  The syntax below relies on\n   a number of productions from SIP [1].\n    \
    \  Replaces        = \"Replaces\" HCOLON callid *(SEMI replaces-param)\n     \
    \ replaces-param  = to-tag / from-tag / early-flag / generic-param\n      to-tag\
    \          = \"to-tag\" EQUAL token\n      from-tag        = \"from-tag\" EQUAL\
    \ token\n      early-flag      = \"early-only\"\n   A Replaces header field MUST\
    \ contain exactly one to-tag and exactly\n   one from-tag, as they are required\
    \ for unique dialog matching.  For\n   compatibility with dialogs initiated by\
    \ RFC 2543 [9] compliant UAs, a\n   tag of zero matches both tags of zero and\
    \ null.  A Replaces header\n   field MAY contain the early-flag.\n   Examples:\n\
    \      Replaces: 98732@sip.example.com\n                ;from-tag=r33th4x0r\n\
    \                ;to-tag=ff87ff\n      Replaces: 12adf2f34456gs5;to-tag=12345;from-tag=54321;early-only\n\
    \      Replaces: 87134@171.161.34.23;to-tag=24796;from-tag=0\n"
- title: 6.2.  New Option Tag for Require and Supported Headers
  contents:
  - "6.2.  New Option Tag for Require and Supported Headers\n   This specification\
    \ defines a new Require/Supported header option tag\n   \"replaces\".  UAs which\
    \ support the Replaces header MUST include the\n   \"replaces\" option tag in\
    \ a Supported header field.  UAs that want\n   explicit failure notification if\
    \ Replaces is not supported MAY\n   include the \"replaces\" option in a Require\
    \ header field.\n   Example:\n      Require: replaces, 100rel\n"
- title: 7.  Usage Examples
  contents:
  - "7.  Usage Examples\n   The following non-normative examples are not intended\
    \ to enumerate\n   all the possibilities for the usage of this extension, but\
    \ rather to\n   provide examples or ideas only.  For more examples, please see\
    \ SIP\n   Service Examples [14].  Via and Max-Forwards headers are omitted for\n\
    \   clarity and brevity.\n"
- title: 7.1.  Replacing an Early Dialog at the Originator
  contents:
  - "7.1.  Replacing an Early Dialog at the Originator\n   In this example, Bob just\
    \ arrived in the lab and hasn't registered\n   there yet.  He hears his desk phone\
    \ ring.  He quickly logs into a\n   software UA on a nearby computer.  Among other\
    \ things, the software\n   UA has access to the dialog state of his desk phone.\
    \  When it notices\n   that his phone is ringing, it offers him the choice of\
    \ taking the\n   call there.  The software UA sends an INVITE with Replaces to\
    \ Alice.\n   When Alice's UA receives this new INVITE, it CANCELs her original\n\
    \   INVITE and connects Alice to Bob.\n                              Bob     \
    \                 Bob\n       Alice                  desk                    \
    \ lab\n        |                       |                        |\n    *1  |-----INVITE----------->|\
    \                        |\n    *2  |<----180---------------|  Bob hears desk\
    \ phone  |\n        |                       |  ringing from lab but  |\n     \
    \   |                       |  isn't REGISTERed yet  |\n        |            \
    \           |                        |\n        |                       |<--fetch\
    \ dialog state --|\n        |                       |---response ----------->|\n\
    \   *3/4 |<-----INVITE with Replaces/200/ACK--------------|\n   *5/6 |------CANCEL/200------>|\
    \                        |\n   *7   |<-----487--------------|                \
    \        |\n        |------ACK------------->|                        |\n     \
    \   |                       |                        |\n        |            \
    \           |                        |\n   Message *1: Alice -> Bob's desk phone\n\
    \   INVITE sip:bob@example.org SIP/2.0\n   To: <sip:bob@example.org>\n   From:\
    \ <sip:alice@example.org>;tag=7743\n   Call-ID: 425928@phone.example.org\n   CSeq:\
    \ 1 INVITE\n   Contact: <sip:alice@phone.example.org>\n   Message *2: Bob's desk\
    \ phone -> Alice\n   SIP/2.0 180 Ringing\n   To: <sip:bob@example.org>;tag=6472\n\
    \   From: <sip:alice@example.org>;tag=7743\n   Call-ID: 425928@phone.example.org\n\
    \   CSeq: 1 INVITE\n   Contact: <sip:bob@bobster.example.org>\n   Message *3:\
    \ Bob in lab -> Alice\n   INVITE sip:alice@phone.example.org\n   To: <sip:alice@example.org>\n\
    \   From: <sip:bob@example.org>;tag=8983\n   Call-ID: 09870@labpc.example.org\n\
    \   CSeq: 1 INVITE\n   Contact: <sip:bob@labpc.example.org>\n   Replaces: 425928@phone.example.org\n\
    \    ;to-tag=7743;from-tag=6472;early-only\n   Message *4: Alice -> Bob in lab\n\
    \   SIP/2.0 200 OK\n   To: <sip:alice@example.org>;tag=9232\n   From: <sip:bob@example.org>;tag=8983\n\
    \   Call-ID: 09870@labpc.example.org\n   CSeq: 1 INVITE\n   Contact: <sip:alice@phone.example.org>\n\
    \   Message *5: Alice -> Bob's desk\n   CANCEL sip:bob@example.org SIP/2.0\n \
    \  To: <sip:bob@example.org>\n   From: <sip:alice@example.org>;tag=7743\n   Call-ID:\
    \ 425928@phone.example.org\n   CSeq: 1 CANCEL\n   Contact: <sip:alice@phone.example.org>\n\
    \   Message *6: Bob's desk -> Alice\n   SIP/2.0 200 OK\n   To: <sip:bob@example.org>\n\
    \   From: <sip:alice@example.org>;tag=7743\n   Call-ID: 425928@phone.example.org\n\
    \   CSeq: 1 CANCEL\n   Contact: <sip:bob@bobster.example.org>\n   Message *7:\
    \ Bob's desk -> Alice\n   SIP/2.0 487 Request Terminated\n   To: <sip:bob@example.org>;tag=6472\n\
    \   From: <sip:alice@example.org>;tag=7743\n   Call-ID: 425928@phone.example.org\n\
    \   CSeq: 1 INVITE\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   The extension specified in this document significantly\
    \ changes the\n   relative security of SIP devices.  Currently in SIP, even if\
    \ an\n   eavesdropper learns the Call-ID, To, and From headers of a dialog,\n\
    \   they cannot easily modify or destroy that dialog if Digest\n   authentication\
    \ or end-to-end message integrity are used.\n   This extension can be used to\
    \ disconnect participants or replace\n   participants in a multimedia conversation.\
    \  As such, invitations with\n   the Replaces header MUST only be accepted if\
    \ the peer requesting\n   replacement has been properly authenticated using a\
    \ standard SIP\n   mechanism (Digest or S/MIME), and authorized to request a replacement\n\
    \   of the target dialog.  All SIP implementations are already required\n   to\
    \ support Digest Authentication.  In addition, implementations which\n   support\
    \ the Replaces header SHOULD also implement the Referred-By\n   mechanism.\n \
    \  How a User Agent determines which requests are legitimately\n   authorized\
    \ to make dialog replacements is non-trivial and depends on\n   a considerable\
    \ amount of local policy configuration.  In general,\n   there are four cases\
    \ when an authorization for a replacement is\n   reasonable or warranted.\n  \
    \ 1. Replacement made by a party considered equivalent to the replaced\n     \
    \ party\n   2. Replacement made on behalf of the replaced party (perhaps\n   \
    \   transitively)\n   3. Replacement made by a former participant\n   4. Replacement\
    \ made by a specifically authorized party\n   Starting with #1 for example, if\
    \ an executive and an assistant both\n   receive requests for a shared address-of-record,\
    \ if so configured,\n   either should be able to replace dialogs of the other\
    \ for the shared\n   identity.  Both could even share the same keying material\
    \ (Digest or\n   S/MIME), or one could hold an authorization document signed by\
    \ the\n   other expressing this relationship.  Likewise, in a call center\n  \
    \ environment, each call center agent could possess credentials to\n   which supervisors\
    \ also have access.\n   The most common use case of a replacement is on the request\
    \ of the\n   replaced participant (who no longer wants to be involved).  This\
    \ is\n   the case in many features, such as completing an Attended Transfer\n\
    \   and converting a 3-way call to a point-to-point call.  Such\n   replacements\
    \ are typically triggered by a REFER [8] request from the\n   replaced participant.\
    \  The Referred-By [4] mechanism defines one way\n   to identify the apparent\
    \ original requester and can point to a SIP\n   Authenticated Identity Body [5]\
    \ (an S/MIME-based signed assertion) to\n   secure this information.\n   In the\
    \ example in section 1, Alice sends an INVITE with Replaces to\n   Bob.  Alice\
    \ was a former participant in the conversation and had a\n   previous dialog relationship\
    \ with Bob.  Alice can use the same Digest\n   or S/MIME credentials she used\
    \ to authenticate with Bob during the\n   original call to prove that she was\
    \ a former participant.  Note that\n   this justification for replacing calls\
    \ is more dangerous than the\n   others, and in most cases is another way to authorize\
    \ that the\n   replacing participant is available.  Implementations SHOULD NOT\
    \ rely\n   on this method as an authorization mechanism.\n   The last scenario\
    \ is the easiest to secure but the least likely to be\n   useful in practice.\
    \  It is unlikely that an arbitrary host in the\n   Internet is aware of any special\
    \ authorization relationship between\n   the replaced and the replacing parties.\
    \  However, this use case may\n   be useful in some environments.  Since this\
    \ usage does not\n   effectively degrade the security of the solution, it is still\n\
    \   allowed.\n   Some mechanisms for obtaining the dialog information needed by\
    \ the\n   Replaces header (Call-ID, to-tag, and from-tag) include URIs on a web\n\
    \   page, subscriptions to an appropriate event package, and\n   notifications\
    \ after a REFER request.  Since manipulating this dialog\n   information could\
    \ cause User Agents to replace the wrong dialog, use\n   of message integrity\
    \ protection for this information is STRONGLY\n   RECOMMENDED.  Use of end-to-end\
    \ security mechanisms to encrypt this\n   information is also RECOMMENDED.\n \
    \  This extension was designed to take advantage of future signature or\n   authorization\
    \ schemes defined in standards track extensions.  In\n   general, call control\
    \ features benefit considerably from such work.\n"
- title: 9.  IANA Considerations
  contents:
  - '9.  IANA Considerations

    '
- title: 9.1.  Registration of "Replaces" SIP header
  contents:
  - "9.1.  Registration of \"Replaces\" SIP header\n   Name of Header:          Replaces\n\
    \   Short form:              none\n   Normative description:   section 6.1 of\
    \ this document\n"
- title: 9.2.  Registration of "replaces" SIP Option-tag
  contents:
  - "9.2.  Registration of \"replaces\" SIP Option-tag\n   Name of option:       \
    \   replaces\n   Description:             Support for the SIP Replaces header\n\
    \   SIP headers defined:     Replaces\n   Normative description:   This document\n"
- title: 10.  Acknowledgments
  contents:
  - "10.  Acknowledgments\n   Thanks to Robert Sparks, Alan Johnston, Dan Petrie,\
    \ Ben Campbell, and\n   many other members of the SIP WG for their continued support\
    \ of the\n   cause of distributed call control in SIP.\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [1]  Rosenberg, J., Schulzrinne, H., Camarillo,\
    \ G., Johnston, A.,\n        Peterson, J., Sparks, R., Handley, M., and E. Schooler,\
    \ \"SIP:\n        Session Initiation Protocol\", RFC 3261, June 2002.\n   [2]\
    \  Bradner, S., \"Key words for use in RFCs to Indicate Requirement\n        Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [3]  Crocker, D. and P. Overell, \"Augmented\
    \ BNF for Syntax\n        Specifications: ABNF\", RFC 2234, November 1997.\n \
    \  [4]  Sparks, R., \"The Session Initiation Protocol (SIP) Referred-By\n    \
    \    Mechanism\", RFC 3892, September 2004.\n   [5]  Peterson, J., \"The Session\
    \ Initiation Protocol (SIP)\n        Authenticated Identity Body (AIB) Format\"\
    , RFC 3893, September\n        2004.\n   [6]  Franks, J., Hallam-Baker, P., Hostetler,\
    \ J., Lawrence, S.,\n        Leach, P., Luotonen, A., and L. Stewart, \"HTTP Authentication:\n\
    \        Basic and Digest Access Authentication\", RFC 2617, June 1999.\n   [7]\
    \  Ramsdell, B., \"Secure/Multipurpose Internet Mail Extensions\n        (S/MIME)\
    \ Version 3.1 Message Specification\", RFC 3851, July\n        2004.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [8]  Sparks, R., \"The Session Initiation Protocol\
    \ (SIP) Refer\n        Method\", RFC 3515, April 2003.\n   [9]  Handley, M., Schulzrinne,\
    \ H., Schooler, E., and J. Rosenberg,\n        \"SIP: Session Initiation Protocol\"\
    , RFC 2543, March 1999.\n   [10] Mahy, R., \"A Call Control and Multi-party usage\
    \ framework for\n        the Session Initiation Protocol (SIP)\", Work in Progress,\
    \ March\n        2003.\n   [11] Rosenberg, J., Peterson, J., Schulzrinne, H.,\
    \ and G. Camarillo,\n        \"Best Current Practices for Third Party Call Control\
    \ (3pcc) in\n        the Session Initiation Protocol (SIP)\", BCP 85, RFC 3725,\
    \ April\n        2004.\n   [12] Sparks, R. and A. Johnston, \"Session Initiation\
    \ Protocol Call\n        Control - Transfer\", Work in Progress, February 2003.\n\
    \   [13] Rosenberg, J. and H. Schulzrinne, \"An INVITE Initiated Dialog\n    \
    \    Event Package for the Session Initiation Protocol (SIP)\", Work\n       \
    \ in Progress, March 2003.\n   [14] Johnston, A. and S. Donovan, \"Session Initiation\
    \ Protocol\n        Service Examples\", Work in Progress, March 2003.\n   [15]\
    \ Campbell, B., Rosenberg, J., Schulzrinne, H., Huitema, C., and\n        D. Gurle,\
    \ \"Session Initiation Protocol (SIP) Extension for\n        Instant Messaging\"\
    , RFC 3428, December 2002.\n   [16] Roach, A., \"Session Initiation Protocol (SIP)-Specific\
    \ Event\n        Notification\", RFC 3265, June 2002.\n   [17] Donovan, S., \"\
    The SIP INFO Method\", RFC 2976, October 2000.\n   [18] Rosenberg, J., \"The Session\
    \ Initiation Protocol (SIP) UPDATE\n        Method\", RFC 3311, October 2002.\n\
    \   [19] Rosenberg, J. and H. Schulzrinne, \"Reliability of Provisional\n    \
    \    Responses in Session Initiation Protocol (SIP)\", RFC 3262, June\n      \
    \  2002.\n   [20] Campbell, B., \"SIMPLE Presence Publication Mechanism\", Work\
    \ in\n        Progress, February 2003.\n"
- title: 12.  Authors' Addresses
  contents:
  - "12.  Authors' Addresses\n   Rohan Mahy\n   Cisco Systems, Inc.\n   5617 Scotts\
    \ Valley Dr\n   Scotts Valley, CA  95066\n   USA\n   EMail: rohan@cisco.com\n\
    \   Billy Biggs\n   EMail: bbiggs@dumbterm.net\n   Rick Dean\n   EMail: rfc@fdd.com\n"
- title: 13.  Full Copyright Statement
  contents:
  - "13.  Full Copyright Statement\n   Copyright (C) The Internet Society (2004).\n\
    \   This document is subject to the rights, licenses and restrictions\n   contained\
    \ in BCP 78, and except as set forth therein, the authors\n   retain all their\
    \ rights.\n   This document and the information contained herein are provided\
    \ on an\n   \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/S HE\n  \
    \ REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE\n   INTERNET\
    \ ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR\n   IMPLIED, INCLUDING\
    \ BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL\
    \ NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR\
    \ FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ IETF's procedures with respect to rights in IETF Documents can\n   be found\
    \ in BCP 78 and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat\
    \ and any\n   assurances of licenses to be made available, or the result of an\n\
    \   attempt made to obtain a general license or permission for the use of\n  \
    \ such proprietary rights by implementers or users of this\n   specification can\
    \ be obtained from the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n\
    \   The IETF invites any interested party to bring to its attention any\n   copyrights,\
    \ patents or patent applications, or other proprietary\n   rights that may cover\
    \ technology that may be required to implement\n   this standard.  Please address\
    \ the information to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
