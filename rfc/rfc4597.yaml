- title: __initial_text__
  contents:
  - '                         Conferencing Scenarios

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes multimedia conferencing scenarios.  It\n\
    \   describes both basic and advanced conferencing scenarios involving\n   voice,\
    \ video, text, and interactive text sessions.  These scenarios\n   will help with\
    \ the definition and evaluation of the protocols being\n   developed in the centralized\
    \ conferencing XCON working group.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Basic Conferencing Scenarios ....................................3\n  \
    \    2.1. Ad Hoc Conferences .........................................4\n    \
    \  2.2. Extension of a Point-to-Point Call to a Multipoint Call ....4\n      2.3.\
    \ Reserved Conferences .......................................4\n   3. Advanced\
    \ Conferencing Scenarios .................................5\n      3.1. Extending\
    \ a Point-to-Point Call to a Multipoint Call .......5\n      3.2. Lecture Mode\
    \ Conferences ...................................5\n      3.3. Conference with\
    \ Conference-Aware and Unaware Participants ..6\n      3.4. A Reserved or Ad Hoc\
    \ Conference with\n           Conference-Aware Participants ..............................6\n\
    \      3.5. Advanced Conference Features ...............................6\n  \
    \ 4. Scenarios for Media Policy Control ..............................9\n    \
    \  4.1. Video Mixing Scenarios ....................................10\n      4.2.\
    \ Typical Video Conferencing Scenario .......................11\n      4.3. Conference\
    \ Sidebar Scenario ...............................11\n      4.4. Coaching Scenario\
    \ .........................................12\n      4.5. Presentation and Q &\
    \ A Session ............................12\n      4.6. Presence-Enabled Ad Hoc\
    \ Conference ........................13\n      4.7. Group Chat Text Conferencing\
    \ ..............................13\n      4.8. Interactive Text ..........................................13\n\
    \      4.9. Moderated Group Chat ......................................14\n  \
    \    4.10. Text Sidebars ............................................14\n    \
    \  4.11. Conference Announcements .................................14\n   5. Security\
    \ Considerations ........................................14\n   6. Acknowledgements\
    \ ...............................................15\n   7. Informative References\
    \ .........................................15\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document describes multimedia conferencing scenarios.\
    \  The\n   development of these scenarios is intended to help with the\n   definition\
    \ and evaluation of the requirements for the centralized\n   conferencing (XCON)\
    \ working group.  Although this document uses some\n   definitions and conventions\
    \ described in the SIP Conferencing\n   Framework document [1], these scenarios\
    \ are not specific to SIP.  The\n   document describes basic and advanced conferencing\
    \ scenarios.  The\n   advanced scenarios assume that the user agents support the\
    \ set of\n   XCON protocols, identified in the Framework and Data Model for\n\
    \   Centralized Conferencing [3], in order to take advantage of the\n   conference\
    \ functionality.  However, note that many of these features\n   can be implemented\
    \ today by using an interactive voice response (IVR)\n   or web interface to control\
    \ the conferencing application.\n   The entities comprising the Conferencing System\
    \ are the conference\n   that is the center point for signaling and the participants.\
    \  The\n   participant who initiated the conference is called the initiating\n\
    \   participant.\n   The scenarios described here demonstrate different conferencing\n\
    \   services.  These services can be offered in a multimedia environment\n   that\
    \ benefits from having some support in the user agents that enable\n   more robust\
    \ and easier-to-use conferencing services.  It is up to the\n   conferencing system\
    \ manufacturers and the conferencing service\n   provider to decide what services\
    \ can be built and which services are\n   offered to the end users.\n   The scenarios\
    \ describe multimedia examples, but they are applicable\n   to audio only as well\
    \ as to audio and video conferences.\n   Multimedia conferences may include any\
    \ combination of different media\n   types such as audio, video, text, interactive\
    \ text, or presentation\n   graphics.  The conference scenarios are similar, but\
    \ the media\n   handling may be dependent on the media type.\n"
- title: 2.  Basic Conferencing Scenarios
  contents:
  - "2.  Basic Conferencing Scenarios\n   These scenarios enable a conference-unaware\
    \ participant to create,\n   join, and participate in a conference.  The participant\
    \ may use out-\n   of-band signaling to participate in a conference, but this\
    \ is not\n   mandatory.  The Conferencing System has all the functionality it\n\
    \   needs in order to supply the service offered to the participants.\n   Typical\
    \ minimum requirements are that the participant support dual-\n   tone multi-frequency\
    \ (DTMF) tones/signal or provide voice responses\n   to an IVR system.\n"
- title: 2.1.  Ad Hoc Conferences
  contents:
  - "2.1.  Ad Hoc Conferences\n   A participant has a service provisioned to him that\
    \ enables him to\n   start an ad hoc conference when he calls the Conferencing\
    \ System.\n   When the participant wants to start a conference, he calls the\n\
    \   conference service.  The participant may be identified by different\n   means,\
    \ including request destination, authenticated identity, or an\n   IVR system\
    \ using DTMF.  The conference is created automatically with\n   the predefined\
    \ functionality.  The participant who has such a service\n   notifies the other\
    \ participants how to call the conference via\n   external means such as instant\
    \ message or email.\n   The participant may have Conferencing System functionality\
    \ and thus\n   can create an ad hoc conference using his own user agent.  An example\n\
    \   of such a conference is an audio conference initiated by a\n   participant\
    \ who has a conference service that enables him to start a\n   conference when\
    \ he calls a specific URI.  The conference may be\n   created by the first person\
    \ calling this URI, or it may be created\n   only after the owner is authenticated\
    \ using an IVR system.  In the\n   latter case, the other participants may get\
    \ an announcement and are\n   placed on hold if they call the conference before\
    \ the owner.\n"
- title: 2.2.  Extension of a Point-to-Point Call to a Multipoint Call
  contents:
  - "2.2.  Extension of a Point-to-Point Call to a Multipoint Call\n   This is a basic\
    \ case.  The initiating participant (PA) is in a\n   point-to-point call with\
    \ another participant (PB).  PA wants to add a\n   third participant (PC) to the\
    \ call.  PA cannot provide the\n   Conferencing System functionality on his user\
    \ agent nor can the other\n   participant PB.  PA and PB do not support call transfer.\
    \  PA has a\n   conferencing service that uses the methods described in 2.1. \
    \ PA\n   conveys the conference information to PB in the point-to-point call.\n\
    \   Both participants disconnect and call the Conferencing System.  The\n   Conferencing\
    \ System may support dial-out (for example, via DTMF),\n   allowing the initiating\
    \ participant PA to call the third party PC\n   through the Conferencing System.\n"
- title: 2.3.  Reserved Conferences
  contents:
  - "2.3.  Reserved Conferences\n   The reservation for this type of conference is\
    \ typically done by an\n   out-of-band mechanism in advance of the actual conference\
    \ time.  The\n   conference identification, which may be a URI or a phone number\
    \ with\n   a pin number, is allocated by the reservation system.  It is sent to\n\
    \   all participants through email, IM, etc.  The participants join by\n   using\
    \ the conference identification.  The conference identification\n   must be routable,\
    \ enabling the allocation of a conference with free\n   resources at the time\
    \ when the conference actually runs.  The\n   Conferencing System can also dial\
    \ out to the conference participants.\n   The participants may not be informed\
    \ that they are in a conference,\n   since their User Agent is not conference\
    \ aware.  The participants may\n   know, via announcement from the Conferencing\
    \ System, that they are in\n   a conference and who the other participants are.\n"
- title: 3.  Advanced Conferencing Scenarios
  contents:
  - "3.  Advanced Conferencing Scenarios\n   These scenarios assume user agents that\
    \ support at least call\n   transfer service and a way to communicate information\
    \ on events from\n   the Conferencing System to the user agent.  The Conferencing\
    \ System\n   may have the ability to discover the capabilities of the\n   participants,\
    \ for example, whether they support call transfer.  This\n   section specifies\
    \ the dependencies in each scenario.  An advanced\n   conference can be initiated\
    \ only by a user agent that has advanced\n   features, but some user agents in\
    \ the conference may have less\n   functionality.\n"
- title: 3.1.  Extending a Point-to-Point Call to a Multipoint Call
  contents:
  - "3.1.  Extending a Point-to-Point Call to a Multipoint Call\n   The initiating\
    \ participant PA is in a point-to-point call and wants\n   to add a third participant.\
    \  PA can start a multipoint call on a\n   conferencing bridge known to him. \
    \ The extension can be without\n   consultation, which means that PA moves the\
    \ point-to-point call to\n   the Conferencing System and then adds the third party\
    \ (this can be\n   done in various ways).  Alternatively the extension can be\
    \ done with\n   consultation, which means that PA puts his current party on hold,\n\
    \   calls the third party, asks him to join the conference, and then\n   transfers\
    \ all the participants to the Conferencing System.\n"
- title: 3.2.  Lecture Mode Conferences
  contents:
  - "3.2.  Lecture Mode Conferences\n   This conference scenario enables a conference\
    \ with a lecturer who\n   presents a topic and can allow questions.  The lecturer\
    \ needs to know\n   who the participants are and needs to be able to give them\
    \ the right\n   to speak.  The right to speak can be based on floor control or\
    \ an\n   out-of-band mechanism.\n   In general, the lecturer is seen/heard by\
    \ the conference participants\n   and often shares a presentation or application\
    \ with the other\n   participants.\n   A participant joining this type of conference\
    \ can get the identity of\n   the lecturer and often the identities of the audience\
    \ participants.\n   This type of conference may have multiple media streams. \
    \ For\n   example, if simultaneous language translation is available, a\n   participant\
    \ has the option of selecting the appropriate language\n   audio stream.  Multiple\
    \ video streams could include the speaker's\n   face and a whiteboard/demonstration\
    \ stream.\n"
- title: 3.3.  Conference with Conference-Aware and Unaware Participants
  contents:
  - "3.3.  Conference with Conference-Aware and Unaware Participants\n   A conference\
    \ can include a mix of participants that are conference-\n   aware and unaware.\
    \  Conference-unaware participants may be using a\n   proxy function that proxies\
    \ the advanced functionality between the\n   different protocols and the Conferencing\
    \ System.  For example, an IVR\n   system or a web page interface can be used\
    \ to provide additional\n   functionality.\n"
- title: 3.4.  A Reserved or Ad Hoc Conference with Conference-Aware Participants
  contents:
  - "3.4.  A Reserved or Ad Hoc Conference with Conference-Aware Participants\n  \
    \ In order to start the conference, the initiating participant calls\n   the Conferencing\
    \ System using, for example, a unique identifier.  The\n   Conferencing System\
    \ may use some authenticating method to qualify the\n   participant.  The other\
    \ participants may call the Conferencing System\n   and join the conference. \
    \ The Conferencing System is able to find the\n   capabilities of the participants.\
    \  In case of a reserved conference,\n   the Conferencing System starts the conference\
    \ at the scheduled time.\n   The participants may join by calling the conference\
    \ URI, or the\n   Conferencing System may call them.  The conference may have\
    \ privilege\n   levels associated with a specific conference or participant. \
    \ The\n   privileges are for the initiating participant and for a regular\n  \
    \ participant; the initiating participant may delegate privileges to\n   the other\
    \ participants.  The privileges allow functionality as\n   defined in the next\
    \ section.\n"
- title: 3.5.  Advanced Conference Features
  contents:
  - "3.5.  Advanced Conference Features\n   The following features can be used in\
    \ all the advanced conferencing\n   scenarios.  In the examples given in this\
    \ section, when referring to\n   a participant that has a functionality, it means\
    \ a participant with\n   the right privileges.  These scenarios may be available\
    \ in the\n   advanced conferencing scenarios and are common in many conferencing\n\
    \   applications.  This is not a requirement list, rather some examples\n   of\
    \ how specific functions may be used in a conference.\n   o  Add Participants\
    \ - A participant may add a new participant to the\n      conference.  This can\
    \ be done, for example, by instructing the\n      Conferencing System to call\
    \ the participant or by the first\n      participant calling the new participant\
    \ and pointing him to the\n      conference.\n   o  Delete Participant - A participant\
    \ may delete participants from\n      the conference if he can identify them.\n\
    \   o  Changing User Agent/Modes - During the course of a conference, a\n    \
    \  participant may switch between user agents with different\n      capabilities\
    \ while still remaining part of the conference.  For\n      example, a participant\
    \ may initially join using a mobile phone and\n      then switch to a desktop\
    \ phone.  Or a participant may join with a\n      phone, discover that the conference\
    \ has video streams available,\n      and switch to a video phone.\n   o  Changing\
    \ Media - During the conference, a participant may be able\n      to select different\
    \ media streams than the one he had when he\n      joined the conference.  An\
    \ example is a participant that initially\n      joined the conference as an audio\
    \ participant.  The participant is\n      unable to understand the conversation\
    \ properly, and he learns that\n      there is also an interactive text available.\
    \  He will ask to\n      receive the text stream also.\n   o  Authenticate participants\
    \ - A participant can authenticate other\n      participants who want to join\
    \ the conference.  This can be done,\n      for example, in a video conferencing\
    \ session by creating a sidebar\n      between the two participants, allowing\
    \ the authenticating\n      participant to talk with the new participant and verify\
    \ his\n      identity.\n   o  Authorize participants - A participant can authorize\
    \ other\n      participants in order to allow them to join the conference.  This\n\
    \      can be done implicitly by assigning a password to the conference\n    \
    \  or to each participant and letting the Conferencing System decide\n      if\
    \ the new participant is allowed to join.  The authorization can\n      be done\
    \ explicitly by directing the entered password to the\n      initiating participant\
    \ who will authorize each participant.  The\n      conferencing system may use\
    \ an authentication mechanism to\n      authenticate the participants.\n   o \
    \ Controlling the presentation of media - During the conference, the\n      participant\
    \ may be able to manage whose media is being sent to\n      each participant.\
    \  For example, the participant may be able to\n      decide that he wants to\
    \ be the speaker and all the rest to be\n      listeners; he may also specify\
    \ whose media he wants to receive.\n      The participant may be able to mute\
    \ a media stream during the\n      conference.\n   o  Giving privileges - During\
    \ the conference, the participant may\n      want to give a privilege to another\
    \ participant.  The assigning of\n      privileges may be implicit when requested\
    \ or explicit by asking\n      the participant to grant a privilege.\n   o  Side\
    \ conferences or sidebars - The participant may want to create\n      a side conference\
    \ that include some of the main conference\n      participants.  When the side\
    \ conference is finished, the\n      participants return to the main conference.\
    \  A sidebar may have\n      the same functionality as the main conference.  There\
    \ can be\n      several sidebar scenarios:\n      1.  A basic sidebar requires\
    \ that two participants have the\n          capability to have two calls at the\
    \ same time, with a point-\n          to-point call in parallel to the main conference.\
    \  It is user\n          agent implementation-specific whether both calls' streams\
    \ are\n          mixed automatically or the participants are allowed to\n    \
    \      manually switch between them.\n      2.  A conferencing-system-based sidebar\
    \ uses the Conferencing\n          System to create the sidebar and compose the\
    \ relevant sidebar\n          stream mixes.  These mixes can include the main\
    \ conference as\n          an incoming stream to the mix.  Mechanisms to signal\
    \ the\n          creation of the sidebar, invite participants, and control the\n\
    \          mixes should be available.\n          For example, participants in\
    \ an audio sidebar may not be heard\n          by the rest of the conference.\
    \  However, the main conference\n          audio may be mixed in the sidebar,\
    \ but at a lower volume, or\n          in a different channel.  As another example,\
    \ a sidebar can\n          have a different media type from the main conference:\
    \ a video\n          call can have an audio sidebar where the other participants\n\
    \          can see the sidebar participants talking but cannot hear them;\n  \
    \        or an audio or video conference may have a text sidebar.\n   o  Conference\
    \ information - When a participant joins the conference,\n      he is announced\
    \ to the participants.  An announcement may be\n      available when he leaves\
    \ the conference.  The participants may\n      query the conferencing system for\
    \ the current participants of a\n      specific conference.  This conference information\
    \ may include\n      other information, for example, the media streams available\
    \ in the\n      conference.\n   o  Extending of a conference - Reserved conferences\
    \ and ad hoc\n      conferences may have a time limit.  The Conferencing System\n\
    \      informs the participants when the limit is approaching and may\n      allow\
    \ the extension of the conference.\n   o  Adding and removing a media type to\
    \ the conference - A participant\n      may want to start a data presentation\
    \ during a conference.  He may\n      want to distribute this new media to all\
    \ the participants.  The\n      participant asks the Conferencing System to start\
    \ the new media\n      channel and to allow him to send data in the new channel.\n\
    \   o  Audio-only participants - In a multimedia conference, some of the\n   \
    \   participants who want to join may have no way to send and receive\n      all\
    \ the media types.  Typically, they can send and receive audio.\n      Such participants\
    \ join the conference as audio-only participants.\n      The general case is that\
    \ participants may send and receive only\n      part of the media streams available\
    \ in the multimedia conference.\n   o  Passive participants - In a conference,\
    \ some participants may be\n      listeners to all or part of the media streams,\
    \ but may be\n      invisible to all other participants.\n   o  Recorders - A\
    \ recorder can be added to the conference.  A recorder\n      can record all streams\
    \ or a subset of the streams.  Recorders may\n      be turned on and off during\
    \ the conference.  Recorders may be used\n      for a \"role call\" scenario in\
    \ order to record a participant's\n      name.  This name can be announced at\
    \ a later stage automatically\n      or based on a participant request.  A recorder\
    \ is a case of a\n      passive participant.\n   o  Whisper/Private Message -\
    \ A participant can send a one-way message\n      (text, audio, or even some other\
    \ media) to another participant\n      that is immediately rendered.  This differs\
    \ from a sidebar in that\n      it is immediate and creates no long-lived session.\n\
    \   o  Human operator - A participant may ask for assistance from a human\n  \
    \    operator during the conference.\n"
- title: 4.  Scenarios for Media Policy Control
  contents:
  - "4.  Scenarios for Media Policy Control\n   During a conference, media streams\
    \ may be controlled by authorized\n   participants using either a media control\
    \ protocol or a third-party\n   application.  This section describes some typical\
    \ media control\n   scenarios.  The conference can be of any size.  Some of the\
    \ media\n   control scenarios are typical of specific conference sizes.  As a\n\
    \   general rule, larger conferences scenarios tend to be more centrally\n   managed\
    \ or structured.\n   The mixing of media in a conference may start when the conference\n\
    \   starts or when the initiating participant joins.  In the later case,\n   early\
    \ participants may be put on hold and get \"music on hold\".\n   The scenarios\
    \ apply to audio conferences as well as to multimedia\n   conferences.  In the\
    \ sections below, there is some specific\n   information about the mixed video\
    \ layout and interactive text.\n"
- title: 4.1.  Video Mixing Scenarios
  contents:
  - "4.1.  Video Mixing Scenarios\n   For video, the participant selects one of a\
    \ set of predefined video\n   presentations offered by the server.  Each video\
    \ presentation is\n   identified by a textual description as well as an image\
    \ specifying\n   how the presentation appears on the screen.  In this scenario,\
    \ by\n   choosing a video presentation, the participant chooses how many video\n\
    \   streams (participants) are viewed at once and the layout of these\n   video\
    \ streams on the screen.\n   The contents of each sub-window can be defined by\
    \ a conference policy\n   and/or controlled by authorized participants.  It may\
    \ also be\n   possible to have multiple mixes per conference, possibly as many\
    \ as\n   there are participants.  (Note that the same flexibility may be\n   afforded\
    \ to audio mixes as well.)\n   The following is a list of typical video presentations.\
    \  Other\n   layouts are available today in commercial products.\n   - Single\
    \ view: This presentation typically shows the video of the\n     loudest speaker.\n\
    \   - Dual view: This presentation shows two streams.  If the streams are\n  \
    \   to be multiplexed in one image (typical of centralized servers),\n     the\
    \ multiplexing can be:\n     1.  Side-by-side windows, with no altered aspect\
    \ ratio.  Thus,\n         blanking of parts of the image might be necessary if\
    \ the\n         streams are to be combined as one image.\n     2.  Side-by-side\
    \ windows, with altered aspect ratios.  Thus,\n         blanking parts of the\
    \ image is not necessary.  The mixer\n         handles the cropping of the images.\n\
    \     3.  One window above the other, with no altered aspect ratio.\n     4. \
    \ One window above the other, with altered aspect ratios.\n   - Quadrate view:\
    \ This presentation shows 4 streams.  If the streams\n     are multiplexed into\
    \ one image (centralized server), they are\n     arranged in a 2x2 style.  Note\
    \ that in this style the aspect ratios\n     are maintained.\n   - 9 sub-picture\
    \ view: This presentation shows 9 streams.  If the\n     streams are to be multiplexed\
    \ in one image, they are arranged in a\n     3x3 style.  In the multiplexing case,\
    \ cropping is performed under\n     the discretion of the mixer.\n   - 16 sub-picture\
    \ view: This presentation shows 16 streams.  If the\n     streams are to be multiplexed\
    \ into one image, they are arranged in\n     a 4x4 style.  In this style, the\
    \ aspect ratios are maintained, and\n     no cropping or blanking is needed.\n\
    \   - 5+1 sub-picture view: This presentation shows 6 streams.  If the\n     streams\
    \ are to be multiplexed into one image, then the pictures are\n     laid so that\
    \ one sub-window occupies 4/9 of the screen while each\n     of the other five\
    \ occupies 1/9 of the screen.\n"
- title: 4.2.  Typical Video Conferencing Scenario
  contents:
  - "4.2.  Typical Video Conferencing Scenario\n   This scenario is known as voice-activated\
    \ video switch.  Every\n   participant hears the N loudest participants but does\
    \ not hear\n   himself.  All the participants see the loudest speaker; the loudest\n\
    \   speaker may see the previous loudest speaker.  This mode is typical\n   for\
    \ a small conference.\n   A participant with proper authorization can exclude\
    \ one or more\n   participants from the audio or video mix.  An indication that\
    \ they\n   are not being seen/heard might be displayed to the affected\n   participants.\n\
    \   A participant with proper authorization can manipulate the gain level\n  \
    \ associated with one or more audio streams in the mix.\n"
- title: 4.3.  Conference Sidebar Scenario
  contents:
  - "4.3.  Conference Sidebar Scenario\n   An authorized participant creates a sidebar.\
    \  The participant selects\n   whether the sidebar should include the media from\
    \ the main conference\n   or not and the audio gain level associated with the\
    \ main conference\n   audio.\n   A participant invites participants to the sidebar,\
    \ and upon\n   acceptance they start receiving the sidebar media as specified\
    \ by the\n   sidebar creator.  If the new participant is not a participant of\
    \ the\n   conference, but is just a participant of the sidebar, the participant\n\
    \   only receives the sidebar media without the media of the main\n   conference.\n\
    \   A participant with the right authorization can move another\n   participant\
    \ into the sidebar with no indication, in which case the\n   participant suddenly\
    \ starts receiving the sidebar media.\n   Sidebar participants with the right\
    \ authorization can select to hear\n   or not to hear the main conference audio\
    \ mixed with the sidebar\n   audio.\n   A participant can be a participant to\
    \ more than one sidebar but can\n   only actively participate in one.\n   A participant\
    \ can jump back and forth between the main conference and\n   one or more sidebars.\n"
- title: 4.4.  Coaching Scenario
  contents:
  - "4.4.  Coaching Scenario\n   This is a call center or a remote training session\
    \ where there is a\n   supervisor who can monitor the conference.  The supervised\n\
    \   participants may be the call center operators or the teachers.  A\n   participant\
    \ in the conference may be a supervised participant or a\n   \"customer\".\n \
    \  The supervisor is a hidden participant and is not part of the\n   participant\
    \ roster.\n   The supervised participants might get an announcement/tone indicating\n\
    \   that the supervisor has joined.  The other participants do not hear\n   the\
    \ announcement.\n   The supervisor listens to or sees the session but can only\
    \ be heard\n   or seen by the supervised participant.\n   The supervisor can become\
    \ a normal participant, in which case the\n   participants see the supervisor\
    \ as part of the roster and start\n   hearing and seeing him.\n"
- title: 4.5.  Presentation and Q & A Session
  contents:
  - "4.5.  Presentation and Q & A Session\n   An example is an earning call scenario\
    \ in which a group of presenters\n   delivers material to a group of people. \
    \ After the presentation is\n   finished, a Q & A session is opened.\n   The conference\
    \ is created as a panel, and the panel participants are\n   identified.  Only\
    \ their streams are mixed.\n   After the end of the presentation, the session\
    \ chair changes the\n   conference type to normal, and now streams from all participants\
    \ may\n   be mixed.  Alternatively, a floor control protocol can be used.  The\n\
    \   chair can grant the right to speak by adding the participant, whose\n   turn\
    \ it is to ask a question, to the conference mix.\n"
- title: 4.6.  Presence-Enabled Ad Hoc Conference
  contents:
  - "4.6.  Presence-Enabled Ad Hoc Conference\n   A presence-enabled ad hoc conference,\
    \ sometimes described as \"walkie\n   talkie\" service, is a scenario in which\
    \ a participant sends media to\n   the other participants of the conference after\
    \ receiving a\n   confirmation of the other participants' availability.  For example,\
    \ a\n   participant presses a talk button, which checks the presence of the\n\
    \   participants to see if they are available for communication.  If they\n  \
    \ are, a confirmation tone is played, and the participant can then\n   talk; as\
    \ a result, the media is sent to the other participants in the\n   conference.\
    \  These types of conferences tend to be long lived, hence\n   the need for presence\
    \ to ensure that the other participants are still\n   available.  The ad hoc nature\
    \ of the conference means that the\n   participant list can be changed at any\
    \ time.  Floor control can be\n   used to allow other participants to speak, as\
    \ the conference is\n   usually half-duplex in nature.\n"
- title: 4.7.  Group Chat Text Conferencing
  contents:
  - "4.7.  Group Chat Text Conferencing\n   Group chat is a common scenario for text\
    \ messaging in which a\n   participant joins (or enters) a chat room in which\
    \ text messages from\n   participants are rendered in a single window and attributed\
    \ to the\n   participant that sent the message.  Changes in conference membership\n\
    \   are often announced in the text window itself (e.g., \"Alice has just\n  \
    \ entered the room.  Bob has just departed.\").  Note that a real-time\n   transcription/closed\
    \ captioning service can provide a similar window\n   in which audio media is\
    \ converted into interactive text.  \"Nicknames\"\n   or aliases are often chosen\
    \ by participants or assigned by the\n   Conferencing System and used as handles\
    \ within the room.\n"
- title: 4.8.  Interactive Text
  contents:
  - "4.8.  Interactive Text\n   Interactive text uses RTP to carry text one character\
    \ at a time,\n   providing real-time interactivity, as described in RFC 4103 [2].\
    \  The\n   interactive text session may be the main conference itself, or it may\n\
    \   be used in conjunction with other media types.  Interactive text may\n   be\
    \ used to represent the audio in the conference using some\n   translation services.\
    \  There can be more than one such stream where\n   each text stream is in a different\
    \ language.  These text streams may\n   be used as subtitles to the audio stream.\
    \  The translation from to\n   text to speech and back is done by transcoders.\
    \  These transcoders\n   have similar functionality to transcoders between different\
    \ audio or\n   video algorithms.\n   The conference participants should be able\
    \ to select to receive text\n   streams with the conference audio or those without\
    \ it.\n"
- title: 4.9.  Moderated Group Chat
  contents:
  - "4.9.  Moderated Group Chat\n   A moderated group chat scenario for text messaging\
    \ is similar to\n   group chat, but all text messages sent to the group are filtered/\n\
    \   approved by a moderator.  Note that the moderator can be a human or\n   an\
    \ application.  The moderator also often has the ability to remove\n   participants\
    \ and provide feedback on their submissions (e.g., provide\n   warnings before\
    \ removal).\n"
- title: 4.10.  Text Sidebars
  contents:
  - "4.10.  Text Sidebars\n   Interactive text or instant messaging sidebars are perhaps\
    \ the most\n   common sidebars in conferences today.  Often the text sessions\
    \ are\n   separate from the conference.  However, there are some advantages to\n\
    \   having text sessions be a sidebar and as a result a part of the main\n   conference.\
    \  For example, a conference that is providing anonymity/\n   aliases to participants\
    \ can also provide anonymous/alias sidebars.  A\n   text sidebar can also benefit\
    \ from other security/logging/recording\n   services provided by the Conferencing\
    \ System.\n   Another use of a text sidebar is a text-only conversation/discussion\n\
    \   between two or more conference participants who are following the\n   main\
    \ conference at the same time.\n"
- title: 4.11.  Conference Announcements
  contents:
  - "4.11.  Conference Announcements\n   The conference moderator may be able to play\
    \ announcements to all the\n   conference participants.  An announcement may be\
    \ prerecorded or\n   composed by the moderator before it is sent.  The announcements\
    \ may\n   be text, audio, or audio-visual.  An example is a conference with\n\
    \   several audio break-out sessions going on.  At some point, the\n   moderator\
    \ wants to record an audio message like \"In 5 minutes,\n   everyone please come\
    \ back to the main meeting\" and then play that\n   message to all the breakout\
    \ sessions.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   Conferences generally have authorization rules\
    \ about who may or may\n   not join a conference, what type of media may or may\
    \ not be used,\n   etc.  This information, sometimes called the conference policy\
    \ or\n   common conference information, is used by the Conferencing System to\n\
    \   admit or deny participation in a conference.  For the conference\n   policy\
    \ to be implemented, the Conferencing System needs to be able to\n   authenticate\
    \ potential participants.  The methods used depend on the\n   signaling protocols\
    \ used by the conference.  This can include a\n   challenge/response mechanism,\
    \ certificates, shared secret, asserted\n   identity, etc.\n   Conferences often\
    \ require that their content be confidential.  In\n   addition, secure authorization\
    \ of participants is incomplete if\n   access to the media can be gained by unauthorized\
    \ participants.\n   Functions for securing the media and for key management and\n\
    \   distribution to authorized participants need to be provided by the\n   Conferencing\
    \ System.  In some cases, the functions used for\n   participant authorization\
    \ can be leveraged for this purpose.\n   Privacy is an important aspect of conferencing.\
    \  Users may wish to\n   join a conference without anyone knowing that they have\
    \ joined, in\n   order to silently listen in.  In other applications, a participant\n\
    \   may wish just to hide their identity from other participants, but\n   otherwise\
    \ let them know of their presence.  These functions need to\n   be provided by\
    \ the Conferencing System.\n   These conference-specific security requirements\
    \ are discussed further\n   in the XCON framework document.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   Thanks to Brian Rosen for contributing conferencing\
    \ scenarios.\n   Thanks to Alan Johnston for going over the document and adding\
    \ some\n   more scenarios; to Keith Lantz, Mary Barnes, and Dave Morgan for\n\
    \   carefully reading the document.\n"
- title: 7.  Informative References
  contents:
  - "7.  Informative References\n   [1]  Rosenberg, J., \"A Framework for Conferencing\
    \ with the Session\n        Initiation Protocol (SIP)\", RFC 4353, February 2006.\n\
    \   [2]  Hellstrom, G. and P. Jones, \"RTP Payload for Text Conversation\",\n\
    \        RFC 4103, June 2005.\n   [3]  Barnes, M., \"A Framework and Data Model\
    \ for Centralized\n        Conferencing\", Work in Progress, June 2006.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Roni Even\n   Polycom\n   94 Derech Em Hamoshavot\n  \
    \ Petach Tikva  49130\n   Israel\n   EMail: roni.even@polycom.co.il\n   Nermeen\
    \ Ismail\n   Cisco Systems, Inc.\n   170 West Tasman Drive\n   San Jose  95134\n\
    \   CA USA\n   EMail: nismail@cisco.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
