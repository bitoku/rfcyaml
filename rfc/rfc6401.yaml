- contents:
  - '                 RSVP Extensions for Admission Priority

    '
  title: __initial_text__
- contents:
  - "Abstract\n   Some applications require the ability to provide an elevated\n   probability
    of session establishment to specific sessions in times of\n   network congestion.
    \ When supported over the Internet Protocol suite,\n   this may be facilitated
    through a network-layer admission control\n   solution that supports prioritized
    access to resources (e.g.,\n   bandwidth).  These resources may be explicitly
    set aside for\n   prioritized sessions, or may be shared with other sessions.
    \ This\n   document specifies extensions to the Resource reSerVation Protocol\n
    \  (RSVP) that can be used to support such an admission priority\n   capability
    at the network layer.\n   Based on current security concerns, these extensions
    are intended for\n   use in a single administrative domain.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6401.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n   This document may contain
    material from IETF Documents or IETF\n   Contributions published or made publicly
    available before November\n   10, 2008.  The person(s) controlling the copyright
    in some of this\n   material may not have granted the IETF Trust the right to
    allow\n   modifications of such material outside the IETF Standards Process.\n
    \  Without obtaining an adequate license from the person(s) controlling\n   the
    copyright in such materials, this document may not be modified\n   outside the
    IETF Standards Process, and derivative works of it may\n   not be created outside
    the IETF Standards Process, except to format\n   it for publication as an RFC
    or to translate it into languages other\n   than English.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .
    . . . . . .  3\n     1.1.  Terminology  . . . . . . . . . . . . . . . . . . .
    . . . .  4\n   2.  Applicability Statement  . . . . . . . . . . . . . . . . .
    . .  4\n   3.  Requirements Language  . . . . . . . . . . . . . . . . . . . .
    \ 4\n   4.  Overview of RSVP Extensions and Operations . . . . . . . . . .  4\n
    \    4.1.  Operations of Admission Priority . . . . . . . . . . . . .  6\n   5.
    \ New Policy Elements  . . . . . . . . . . . . . . . . . . . . .  7\n     5.1.
    \ Admission Priority Policy Element  . . . . . . . . . . . .  8\n       5.1.1.
    \ Admission Priority Merging Rules . . . . . . . . . . .  9\n     5.2.  Application-Level
    Resource Priority Policy Element . . . . 10\n       5.2.1.  Application-Level
    Resource Priority Modifying and\n               Merging Rules  . . . . . . . .
    . . . . . . . . . . . . 11\n     5.3.  Default Handling . . . . . . . . . . .
    . . . . . . . . . . 12\n   6.  Security Considerations  . . . . . . . . . . .
    . . . . . . . . 12\n     6.1.  Use of RSVP Authentication between RSVP Neighbors
    \ . . . . 13\n     6.2.  Use of INTEGRITY object within the POLICY_DATA Object
    \ . . 13\n   7.  IANA Considerations  . . . . . . . . . . . . . . . . . . . .
    . 14\n   8.  Acknowledgments  . . . . . . . . . . . . . . . . . . . . . . . 16\n
    \  9.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 17\n     9.1.
    \ Normative References . . . . . . . . . . . . . . . . . . . 17\n     9.2.  Informative
    References . . . . . . . . . . . . . . . . . . 18\n   Appendix A.  Examples of
    Bandwidth Allocation Model for\n                Admission Priority  . . . . .
    . . . . . . . . . . . . 19\n     A.1.  Admission Priority with Maximum Allocation
    Model (MAM) . . 19\n     A.2.  Admission Priority with Russian Dolls Model (RDM)
    \ . . . . 23\n     A.3.  Admission Priority with Priority Bypass Model (PrBM)
    . . . 26\n   Appendix B.  Example Usages of RSVP Extensions . . . . . . . . .
    . 29\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Some applications require the ability to provide an elevated\n
    \  probability of session establishment to specific sessions in times of\n   network
    congestion.\n   Solutions to meet this requirement for elevated session establishment\n
    \  probability may involve session-layer capabilities prioritizing\n   access
    to resources controlled by the session control function.  As\n   an example, entities
    involved in session control (such as SIP user\n   agents, when the Session Initiation
    Protocol (SIP) [RFC3261], is the\n   session control protocol in use) can influence
    their treatment of\n   session establishment requests (such as SIP requests).
    \ This may\n   include the ability to \"queue\" session establishment requests
    when\n   those can not be immediately honored (in some cases with the notion\n
    \  of \"bumping\", or \"displacement\", of less important session\n   establishment
    requests from that queue).  It may include additional\n   mechanisms such as alternate
    routing and exemption from certain\n   network management controls.\n   Solutions
    to meet the requirement for elevated session establishment\n   probability may
    also take advantage of network-layer admission\n   control mechanisms supporting
    admission priority.  Networks usually\n   have engineered capacity limits that
    characterize the maximum load\n   that can be handled (say, on any given link)
    for a class of traffic\n   while satisfying the quality-of-service (QoS) requirements
    of that\n   traffic class.  Admission priority may involve setting aside some\n
    \  network resources (e.g., bandwidth) out of the engineered capacity\n   limits
    for the prioritized sessions only.  Or alternatively, it may\n   involve allowing
    the prioritized sessions to seize additional\n   resources beyond the engineered
    capacity limits applied to normal\n   sessions.  This document specifies the necessary
    extensions to\n   support such admission priority when network-layer admission
    control\n   is performed using the Resource reSerVation Protocol (RSVP)\n   [RFC2205].\n
    \  [RFC3181] specifies the Signaled Preemption Priority Policy Element\n   that
    can be signaled in RSVP so that network node may take into\n   account this policy
    element in order to preempt some previously\n   admitted low-priority sessions
    in order to make room for a newer,\n   higher-priority session.  In contrast,
    this document specifies new\n   RSVP extensions to increase the probability of
    session establishment\n   without preemption of existing sessions.  This is achieved
    by\n   engineered capacity techniques in the form of bandwidth allocation\n   models.
    \ In particular, this document specifies two new RSVP policy\n   elements allowing
    the admission priority to be conveyed inside RSVP\n   signaling messages so that
    RSVP nodes can enforce a selective\n   bandwidth admission control decision based
    on the session admission\n   priority.  Appendix A of this document also provides
    examples of\n   bandwidth allocation models that can be used by RSVP-routers to\n
    \  enforce such admission priority on every link.  A given reservation\n   may
    be signaled with the admission priority extensions specified in\n   the present
    document, with the preemption priority specified in\n   [RFC3181], or with both.\n"
  - contents:
    - "1.1.  Terminology\n   This document assumes the terminology defined in [RFC2753].
      \ For\n   convenience, the definitions of a few key terms are repeated here:\n
      \  o  Policy Decision Point (PDP): The point where policy decisions are\n      made.\n
      \  o  Local Policy Decision Point (LPDP): The PDP local to the network\n      element.\n
      \  o  Policy Enforcement Point (PEP): The point where the policy\n      decisions
      are actually enforced.\n   o  Policy Ignorant Node (PIN): A network element
      that does not\n      explicitly support policy control using the mechanisms
      defined in\n      [RFC2753].\n"
    title: 1.1.  Terminology
  title: 1.  Introduction
- contents:
  - "2.  Applicability Statement\n   A subset of RSVP messages are signaled with the
    Router Alert Option\n   (RAO) ([RFC2113], [RFC2711]).  The security aspects and
    common\n   practices around the use of the current IP Router Alert Option and\n
    \  consequences on the use of IP Router Alert by applications such as\n   RSVP
    are discussed in [RFC6398].  Based on those, the extensions\n   defined in this
    document are intended for use within a single\n   administrative domain.  Thus,
    in particular, the extensions defined\n   in this document are not intended for
    end-to-end use on the Internet.\n"
  title: 2.  Applicability Statement
- contents:
  - "3.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
    and \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC
    2119 [RFC2119].\n"
  title: 3.  Requirements Language
- contents:
  - "4.  Overview of RSVP Extensions and Operations\n   Let us consider the case where
    a session requires elevated\n   probability of establishment, and more specifically
    that the\n   preference to be granted to this session is in terms of network-layer\n
    \  \"admission priority\" (as opposed to preference granted through\n   preemption
    of existing sessions).  By \"admission priority\" we mean\n   allowing the priority
    session to seize network-layer resources from\n   the engineered capacity that
    has been set aside for priority sessions\n   (and not made available to normal
    sessions) or, alternatively,\n   allowing the priority session to seize additional
    resources beyond\n   the engineered capacity limits applied to normal sessions.\n
    \  Session establishment can be made conditional on resource-based and\n   policy-based
    network-layer admission control achieved via RSVP\n   signaling.  In the case
    where the session control protocol is SIP,\n   the use of RSVP-based admission
    control in conjunction with SIP is\n   specified in [RFC3312].\n   Devices involved
    in the session establishment are expected to be\n   aware of the application-level
    priority requirements of prioritized\n   sessions.  For example, considering the
    case where the session\n   control protocol is SIP, the SIP user agents may be
    made aware of the\n   resource priority requirements of a given session using
    the\n   \"Resource-Priority\" header mechanism specified in [RFC4412].  The\n
    \  end-devices involved in the upper-layer session establishment simply\n   need
    to copy the application-level resource priority requirements\n   (e.g., as communicated
    in the SIP \"Resource-Priority\" header) inside\n   the new RSVP Application-Level
    Resource Priority Policy Element\n   defined in this document.\n   Conveying the
    application-level resource priority requirements inside\n   the RSVP message allows
    this application-level requirement to be\n   mapped/remapped into a different
    RSVP \"admission priority\" at a\n   policy boundary based on the policy applicable
    in that policy area.\n   In a typical model (see [RFC2753]) where PDPs control
    PEPs at the\n   periphery of the policy area (e.g., on the first hop router),
    PDPs\n   would interpret the RSVP Application-Level Resource Priority Policy\n
    \  Element and map the requirement of the prioritized session into an\n   RSVP
    \"admission priority\" level.  Then, PDPs would convey this\n   information inside
    the new Admission Priority Policy Element defined\n   in this document.  This
    way, the RSVP admission priority can be\n   communicated to downstream PEPs (i.e.,
    RSVP routers) of the same\n   policy domain that have LPDPs but no controlling
    PDP.  In turn, this\n   means the necessary RSVP Admission priority can be enforced
    at every\n   RSVP hop, including all the (possibly many) hops that do not have
    any\n   understanding of application-level resource priority semantics.  It\n
    \  is not expected that the RSVP Application-Level Resource Priority\n   Header
    Policy Element would be taken into account at RSVP hops within\n   a given policy
    area.  It is expected to be used at policy area\n   boundaries only in order to
    set/reset the RSVP Admission Priority\n   Policy Element.\n   Remapping by PDPs
    of the Admission Priority Policy Element from the\n   Application-Level Resource
    Priority Policy Element may also be used\n   at boundaries with other signaling
    protocols, such as the NSIS\n   Signaling Layer Protocol (NSLP) for QoS Signaling
    [RFC5974].\n   As can be observed, the framework described above for mapping/\n
    \  remapping application-level resource priority requirements into an\n   RSVP
    admission priority can also be used together with [RFC3181] for\n   mapping/remapping
    application-level resource priority requirements\n   into an RSVP preemption priority
    (when preemption is indeed deemed\n   necessary by the prioritized session handling
    policy).  In that case,\n   when processing the RSVP Application-Level Resource
    Priority Policy\n   Element, the PDPs at policy boundaries (or between various
    QoS\n   signaling protocols) can map it into an RSVP \"preemption priority\"\n
    \  information.  This preemption priority information comprises a setup\n   preemption
    level and a defending preemption priority level that can\n   then be encoded inside
    the Preemption Priority Policy Element of\n   [RFC3181].\n   Appendix B provides
    examples of various hypothetical policies for\n   prioritized session handling,
    some of them involving admission\n   priority, some of them involving both admission
    priority and\n   preemption priority.  Appendix B also identifies how the application-\n
    \  level resource priority needs to be mapped into RSVP policy elements\n   by
    the PDPs to realize these policies.\n"
  - contents:
    - "4.1.  Operations of Admission Priority\n   The RSVP Admission Priority Policy
      Element defined in this document\n   allows admission bandwidth to be allocated
      preferentially to\n   prioritized sessions.  Multiple models of bandwidth allocation
      MAY be\n   used to that end.\n   A number of bandwidth allocation models have
      been defined in the IETF\n   for allocation of bandwidth across different classes
      of traffic\n   trunks in the context of Diffserv-aware MPLS Traffic Engineering.\n
      \  Those include the Maximum Allocation Model (MAM) defined in\n   [RFC4125],
      the Russian Dolls Model (RDM) specified in [RFC4127], and\n   the Maximum Allocation
      model with Reservation (MAR) defined in\n   [RFC4126].  However, these same
      models MAY be applied for allocation\n   of bandwidth across different levels
      of admission priority as defined\n   in this document.  Appendix A provides
      an illustration of how these\n   bandwidth allocation models can be applied
      for such purposes and also\n   introduces an additional bandwidth allocation
      model that we term the\n   Priority Bypass Model (PrBM).  It is important to
      note that the\n   models described and illustrated in Appendix A are only informative\n
      \  and do not represent a recommended course of action.\n   We can see in these
      examples how the RSVP Admission Priority can be\n   used by RSVP routers to
      influence their admission control decision\n   (for example, by determining
      which bandwidth pool is to be used by\n   RSVP for performing its bandwidth
      allocation) and therefore to\n   increase the probability of reservation establishment.
      \ In turn, this\n   increases the probability of application-level session establishment\n
      \  for the corresponding session.\n"
    title: 4.1.  Operations of Admission Priority
  title: 4.  Overview of RSVP Extensions and Operations
- contents:
  - "5.  New Policy Elements\n   The Framework document for policy-based admission
    control [RFC2753]\n   describes the various components that participate in policy
    decision\n   making (i.e., PDP, PEP, and LPDP).\n   As described in Section 4
    of the present document, the Application-\n   Level Resource Priority Policy Element
    and the Admission Priority\n   Policy Element serve different roles in this framework:\n
    \  o  The Application-Level Resource Priority Policy Element conveys\n      application-level
    information and is processed by PDPs.\n   o  The emphasis of Admission Priority
    Policy Element is to be simple,\n      stateless, and lightweight such that it
    can be processed\n      internally within a node's LPDP.  It can then be enforced\n
    \     internally within a node's PEP.  It is set by PDPs based on\n      processing
    of the Application-Level Resource Priority Policy\n      Element.\n   [RFC2750]
    defines extensions for supporting generic policy-based\n   admission control in
    RSVP.  These extensions include the standard\n   format of POLICY_DATA objects
    and a description of RSVP handling of\n   policy events.\n   The POLICY_DATA object
    contains one or more policy elements, each\n   representing a different (and perhaps
    orthogonal) policy.  As an\n   example, [RFC3181] specifies the Preemption Priority
    Policy Element.\n   This document defines two new policy elements called:\n   o
    \ the Admission Priority Policy Element\n   o  the Application-Level Resource
    Priority Policy Element\n"
  - contents:
    - "5.1.  Admission Priority Policy Element\n   The format of the Admission Priority
      Policy Element is as shown in\n   Figure 1:\n          0           0 0           1
      1           2 2           3\n          0   . . .   7 8   . . .   5 6   . . .
      \  3 4   . . .   1\n         +-------------+-------------+-------------+-------------+\n
      \        |     Length                | P-Type = ADMISSION_PRI    |\n         +-------------+-------------+-------------+-------------+\n
      \        | Flags       | M. Strategy | Error Code  | Reserved    |\n         +-------------+-------------+-------------+-------------+\n
      \        |              Reserved                   |Adm. Priority|\n         +---------------------------+---------------------------+\n
      \               Figure 1: Admission Priority Policy Element\n   where:\n   o
      \ Length: 16 bits\n      *  Always 12.  The overall length of the policy element,
      in bytes.\n   o  P-Type: 16 bits\n      *  ADMISSION_PRI = 0x05 (see the \"IANA
      Considerations\" section).\n   o  Flags: Reserved\n      *  SHALL be set to
      zero on transmit and SHALL be ignored on\n         reception.\n   o  Merge Strategy:
      8 bits (applicable to multicast flows)\n      *  values are defined in the corresponding
      registry maintained by\n         IANA (see the \"IANA Considerations\" section).\n
      \  o  Error code: 8 bits (applicable to multicast flows)\n      *  values are
      defined in the corresponding registry maintained by\n         IANA (see the
      \"IANA Considerations\" section).\n   o  Reserved: 8 bits\n      *  SHALL be
      set to zero on transmit and SHALL be ignored on\n         reception.\n   o  Reserved:
      24 bits\n      *  SHALL be set to zero on transmit and SHALL be ignored on\n
      \        reception\n   o  Adm. Priority (Admission Priority): 8 bits (unsigned)\n
      \     *  The admission control priority of the flow, in terms of access\n         to
      network bandwidth in order to provide higher probability of\n         session
      completion to selected flows.  Higher values represent\n         higher priority.
      \ Bandwidth allocation models such as those\n         described in Appendix
      A are to be used by the RSVP router to\n         achieve increased probability
      of session establishment.  The\n         admission priority value effectively
      indicates which bandwidth\n         constraint(s) of the bandwidth constraint
      model in use is/are\n         applicable to admission of this RSVP reservation.\n
      \  Note that the Admission Priority Policy Element does NOT indicate\n   that
      this RSVP reservation is to preempt any other RSVP reservation.\n   If a priority
      session justifies both admission priority and\n   preemption priority, the corresponding
      RSVP reservation needs to\n   carry both an Admission Priority Policy Element
      and a Preemption\n   Priority Policy Element.  The Admission Priority and Preemption\n
      \  Priority are handled by LPDPs and PEPs as separate mechanisms.  They\n   can
      be used one without the other, or they can be used both in\n   combination.\n"
    - contents:
      - "5.1.1.  Admission Priority Merging Rules\n   This section discusses alternatives
        for dealing with RSVP admission\n   priority in case of merging of reservations.
        \ As merging applies to\n   multicast, this section also applies to multicast
        sessions.\n   The rules for merging Admission Priority Policy Elements are
        defined\n   by the value encoded inside the Merge Strategy field in accordance\n
        \  with the corresponding IANA registry.  This registry applies both to\n
        \  the Merge Strategy field of the Admission Priority Policy Element\n   defined
        in the present document and to the Merge Strategy field of\n   the Preemption
        Priority Policy Element defined in [RFC3181].  The\n   registry initially
        contains the values already defined in [RFC3181]\n   (see the \"IANA Considerations\"
        section).\n   The only difference from [RFC3181] is that this document does
        not\n   recommend a given merge strategy over the others for Admission\n   Priority,
        while [RFC3181] recommends the first of these merge\n   strategies for Preemption
        Priority.  Note that with the Admission\n   Priority (as is the case with
        the Preemption Priority), \"take highest\n   priority\" translates into \"take
        the highest numerical value\".\n"
      title: 5.1.1.  Admission Priority Merging Rules
    title: 5.1.  Admission Priority Policy Element
  - contents:
    - "5.2.  Application-Level Resource Priority Policy Element\n   The format of
      the Application-Level Resource Priority Policy Element\n   is as shown in Figure
      2:\n          0           0 0           1 1           2 2           3\n          0
      \  . . .   7 8   . . .   5 6   . . .   3 4   . . .   1\n         +-------------+-------------+-------------+-------------+\n
      \        | Length                    | P-Type = APP_RESOURCE_PRI |\n         +-------------+-------------+-------------+-------------+\n
      \        //     ALRP List                                        //\n         +---------------------------+---------------------------+\n
      \      Figure 2: Application-Level Resource Priority Policy Element\n   where:\n
      \  o  Length:\n      *  The length of the policy element (including the Length
      and\n         P-Type) is in number of octets (MUST be a multiple of 4) and\n
      \        indicates the end of the ALRP list.\n   o  P-Type: 16 bits\n      *
      \ APP_RESOURCE_PRI = 0x06 (see the \"IANA Considerations\"\n         section).\n
      \  o  ALRP List:\n      *  List of ALRPs where each ALRP is encoded as shown
      in Figure 3.\n   ALRP:\n          0           0 0           1 1           2
      2           3\n          0   . . .   7 8   . . .   5 6   . . .   3 4   . . .
      \  1\n         +---------------------------+-------------+-------------+\n         |
      \    ALRP Namespace        | Reserved    |ALRP Value   |\n         +---------------------------+---------------------------+\n
      \              Figure 3: Application-Level Resource Priority\n   where:\n   o
      \ ALRP Namespace (Application-Level Resource Priority Namespace): 16\n      bits
      (unsigned)\n      *  Contains a numerical value identifying the namespace of
      the\n         application-level resource priority.  This value is encoded as\n
      \        per the \"Resource Priority Namespaces\" IANA registry.  (See the\n
      \        \"IANA Considerations\" section; IANA has extended the registry\n         to
      include this numerical value).\n   o  Reserved: 8 bits\n      *  SHALL be set
      to zero on transmit and SHALL be ignored on\n         reception.\n   o  ALRP
      Value (Application-Level Resource Priority Value): 8 bits\n      (unsigned)\n
      \     *  Contains the priority value within the namespace of the\n         application-level
      resource priority.  This value is encoded as\n         per the \"Resource Priority
      Priority-Value\" IANA registry.  (See\n         the \"IANA Considerations\"
      section; IANA has extended the\n         registry to include this numerical
      value).\n"
    - contents:
      - "5.2.1.  Application-Level Resource Priority Modifying and Merging Rules\n
        \  When POLICY_DATA objects are protected by integrity, LPDPs should not\n
        \  attempt to modify them.  They MUST be forwarded without modification\n
        \  to ensure their security envelope is not invalidated.\n   In case of multicast,
        when POLICY_DATA objects are not protected by\n   integrity, LPDPs MAY merge
        incoming Application-Level Resource\n   Priority Elements to reduce their
        size and number.  When they do\n   merge those elements, LPDPs MUST do so
        according to the following\n   rule:\n   o  The ALRP List in the outgoing
        APP_RESOURCE_PRI element MUST\n      contain all the ALRPs appearing in the
        ALRP List of an incoming\n      APP_RESOURCE_PRI element.  A given ALRP MUST
        NOT appear more than\n      once.  In other words, the outgoing ALRP List
        is the union of the\n      incoming ALRP Lists that are merged.\n   As merging
        applies to multicast, this rule also applies to multicast\n   sessions.\n"
      title: 5.2.1.  Application-Level Resource Priority Modifying and Merging Rules
    title: 5.2.  Application-Level Resource Priority Policy Element
  - contents:
    - "5.3.  Default Handling\n   As specified in Section 4.2 of [RFC2750], Policy
      Ignorant Nodes\n   (PINs) implement a default handling of POLICY_DATA objects
      ensuring\n   that those objects can traverse PINs in transit from one PEP to\n
      \  another.  This applies to the situations where POLICY_DATA objects\n   contain
      the Admission Priority Policy Element and the ALRP Policy\n   Element specified
      in this document, so that those objects can\n   traverse PINs.\n   Section 4.2
      of [RFC2750] also defines a similar default behavior for\n   policy-capable
      nodes that do not recognize a particular policy\n   element.  This applies to
      the Admission Priority Policy Element and\n   the ALRP Policy Element specified
      in this document, so that those\n   elements can traverse policy-capable nodes
      that do not support these\n   extensions defined in the present document.\n"
    title: 5.3.  Default Handling
  title: 5.  New Policy Elements
- contents:
  - "6.  Security Considerations\n   As this document defines extensions to RSVP,
    the security\n   considerations of RSVP apply.  Those are discussed in [RFC2205],\n
    \  [RFC4230], and [RFC6411].  Approaches for addressing those concerns\n   are
    discussed further below.\n   A subset of RSVP messages are signaled with the Router
    Alert Option\n   (RAO) ([RFC2113], [RFC2711]).  The security aspects and common\n
    \  practices around the use of the current IP Router Alert Option and\n   consequences
    on the use of IP Router Alert by applications such as\n   RSVP are discussed in
    [RFC6398].  As discussed in Section 2, the\n   extensions defined in this document
    are intended for use within a\n   single administrative domain.\n   [RFC6398]
    discusses router alert protection approaches for service\n   providers.  These
    approaches can be used to protect a given network\n   against the potential risks
    associated with the leaking of router\n   alert packets resulting from the use
    of the present extensions in\n   another domain.  Also, where RSVP is not used,
    by simply not enabling\n   RSVP on the routers of a given network, generally that
    network can\n   isolate itself from any RSVP signaling that may leak from another\n
    \  network that uses the present extensions (since the routers will then\n   typically
    ignore RSVP messages).  Where RSVP is to be used internally\n   within a given
    network, the network operator can activate, on the\n   edge of his network, mechanisms
    that either tunnel or, as a last\n   resort, drop incoming RSVP messages in order
    to protect the given\n   network from RSVP signaling that may leak from another
    network that\n   uses the present extensions.\n   The ADMISSION_PRI and APP_RESOURCE_PRI
    Policy Elements defined in\n   this document are signaled by RSVP through encapsulation
    in a\n   POLICY_DATA object as defined in [RFC2750].  Therefore, like any\n   other
    policy elements, their integrity can be protected as discussed\n   in Section
    6 of [RFC2750] by two optional security mechanisms.  The\n   first mechanism relies
    on RSVP authentication as specified in\n   [RFC2747] and [RFC3097] to provide
    a chain of trust when all RSVP\n   nodes are policy capable.  With this mechanism,
    the INTEGRITY object\n   is carried inside RSVP messages.  The second mechanism
    relies on the\n   INTEGRITY object within the POLICY_DATA object to guarantee
    integrity\n   between RSVP PEPs that are not RSVP neighbors.\n"
  - contents:
    - "6.1.  Use of RSVP Authentication between RSVP Neighbors\n   RSVP authentication
      can be used between RSVP neighbors that are\n   policy capable.  RSVP authentication
      (defined in [RFC2747] and\n   [RFC3097]) SHOULD be supported by an implementation
      of the present\n   document.\n   With RSVP authentication, the RSVP neighbors
      use shared keys to\n   compute the cryptographic signature of the RSVP message.
      \ [RFC6411]\n   discusses key types and key provisioning methods as well as
      their\n   respective applicabilities.\n"
    title: 6.1.  Use of RSVP Authentication between RSVP Neighbors
  - contents:
    - "6.2.  Use of INTEGRITY object within the POLICY_DATA Object\n   The INTEGRITY
      object within the POLICY_DATA object can be used to\n   guarantee integrity
      between non-neighboring RSVP PEPs.  This is\n   useful only when some RSVP nodes
      are Policy Ignorant Nodes (PINs).\n   The INTEGRITY object within the POLICY_DATA
      object MAY be supported\n   by an implementation of the present document.\n
      \  Details for computation of the content of the INTEGRITY object can be\n   found
      in Appendix B of [RFC2750].  This states that the Policy\n   Decision Point
      (PDP), at its discretion, and based on the destination\n   PEP/PDP or other
      criteria, selects an Authentication Key and the hash\n   algorithm to be used.
      \ Keys to be used between PDPs can be\n   distributed manually or via a standard
      key management protocol for\n   secure key distribution.\n   Note that where
      non-RSVP hops may exist in between RSVP hops, as well\n   as where RSVP-capable
      PINs may exist in between PEPs, it may be\n   difficult for the PDP to determine
      what is the destination PDP for a\n   POLICY_DATA object contained in some RSVP
      messages (such as a Path\n   message).  This is because in those cases the next
      PEP is not known\n   at the time of forwarding the message.  In this situation,
      key shared\n   across multiple PDPs may be used.  This is conceptually similar
      to\n   the use of a key shared across multiple RSVP neighbors as discussed\n
      \  in [RFC6411].  We observe also that this issue may not exist in some\n   deployment
      scenarios where a single (or low number of) PDP is used to\n   control all the
      PEPs of a region (such as an administrative domain).\n   In such scenarios,
      it may be easy for a PDP to determine what is the\n   next-hop PDP, even when
      the next-hop PEP is not known, simply by\n   determining what is the next region
      that will be traversed (say,\n   based on the destination address).\n"
    title: 6.2.  Use of INTEGRITY object within the POLICY_DATA Object
  title: 6.  Security Considerations
- contents:
  - "7.  IANA Considerations\n   As specified in [RFC2750], standard RSVP policy elements
    (P-type\n   values) are to be assigned by IANA as per \"IETF Consensus\" policy
    as\n   outlined in [RFC2434] (this policy is now called \"IETF Review\" as per\n
    \  [RFC5226]) .\n   IANA has allocated two P-Types from the standard RSVP policy
    element\n   range:\n   o  0x05 ADMISSION_PRI for the Admission Priority Policy
    Element\n   o  0x06 APP_RESOURCE_PRI for the Application-Level Resource Priority\n
    \     Policy Element\n   In Section 5.1, the present document defines a Merge
    Strategy field\n   inside the Admission Priority Policy Element.  This registry
    is to be\n   specified as also applicable to the Merge Strategy field of the\n
    \  Preemption Priority Policy Elements defined in [RFC3181].  Since it\n   is
    conceivable that, in the future, values will be added to the\n   registry that
    only apply to the Admission Priority Policy Element or\n   to the Preemption Priority
    Policy Element (but not to both), IANA has\n   listed the applicable documents
    for each value.  IANA has allocated\n   the following values:\n   o  0: Reserved\n
    \  o  1: Take priority of highest QoS [RFC3181] [RFC6401]\n   o  2: Take highest
    priority [RFC3181] [RFC6401]\n   o  3: Force Error on heterogeneous merge [RFC3181]
    [RFC6401]\n   Following the policies outlined in [RFC5226], numbers in the range\n
    \  0-127 are allocated according to the \"IETF Review\" policy, numbers in\n   the
    range 128-240 as \"First Come First Served\", and numbers in the\n   range 241-255
    are \"Reserved for Private Use\".\n   In Section 5.1, the present document defines
    an Error Code field\n   inside the Admission Priority Policy Element.  IANA has
    created a\n   registry for this field and allocate the following values:\n   o
    \ 0: NO_ERROR - Value used for regular ADMISSION_PRI elements\n   o  2: HETEROGENEOUS
    - This element encountered heterogeneous merge\n   Following the policies outlined
    in [RFC5226], numbers in the range\n   0-127 are allocated according to the \"IETF
    Review\" policy, numbers in\n   the range 128-240 as \"First Come First Served\",
    and numbers in the\n   range 241-255 are \"Reserved for Private Use\".  Value
    1 is Reserved\n   (for consistency with [RFC3181] Error Code values).\n   The
    present document defines an ALRP Namespace field in Section 5.2\n   that contains
    a numerical value identifying the namespace of the\n   application-level resource
    priority.  The IANA already maintains the\n   Resource-Priority Namespaces registry
    (under the SIP Parameters)\n   listing all such namespaces.  That registry has
    been updated to\n   allocate a numerical value to each namespace.  To be exact,
    the IANA\n   has extended the Resource-Priority Namespaces registry in the\n   following
    ways:\n   o  A new column has been added to the registry.\n   o  The title of
    the new column is \"Namespace Numerical Value *\".\n   o  In the Legend, a line
    has been added stating \"Namespace Numerical\n      Value = the unique numerical
    value identifying the namespace\".\n   o  In the Legend, a line has been added
    stating \"* : [RFC6401]\".\n   o  An actual numerical value has been allocated
    to each namespace in\n      the registry and is listed in the new \"Namespace
    Numerical Value\n      *\" column.\n   A numerical value has been allocated by
    IANA for all existing\n   namespaces.  In the future, IANA should automatically
    allocate a\n   numerical value to any new namespace added to the registry.\n   The
    present document defines an ALRP Priority field in Section 5.2\n   that contains
    a numerical value identifying the actual application-\n   level resource priority
    within the application-level resource\n   priority namespace.  The IANA already
    maintains the Resource-Priority\n   Priority-Values registry (under the SIP Parameters)
    listing all such\n   priorities.  That registry has been updated to allocate a
    numerical\n   value to each priority-value.  To be exact, the IANA has extended
    the\n   Resource-Priority Priority-Values registry in the following ways:\n   o
    \ For each namespace, the registry is structured with two columns.\n   o  The
    title of the first column is \"Priority Values (least to\n      greatest)\".\n
    \  o  The first column lists all the values currently defined in the\n      registry
    (e.g., for the drsn namespace: \"routine\", \"priority\",\n      \"immediate\",
    \"flash\", \"flash-override\", and \"flash-override-\n      override\")\n   o
    \ The title of the second column is \"Priority Numerical Value *\".\n   o  At
    the bottom of the registry, a \"Legend\" has been added with a\n      line stating
    \"Priority Numerical Value = the unique numerical\n      value identifying the
    priority within a namespace\".\n   o  In the Legend, a line has been added stating
    \"* : [RFC6401]\".\n   o  An actual numerical value has been allocated to each
    priority\n      value and is listed in the new \"Priority Numerical Value *\"\n
    \     column.\n   A numerical value has been allocated by IANA to all existing\n
    \  priorities.  In the future, IANA should automatically allocate a\n   numerical
    value to any new namespace added to the registry.  The\n   numerical value must
    be unique within each namespace.  Within each\n   namespace, values should be
    allocated in decreasing order ending with\n   0 (so that the greatest priority
    is always allocated value 0).  For\n   example, in the drsn namespace, \"routine\"
    is allocated numerical\n   value 5, and \"flash-override-override\" is allocated
    numerical value\n   0.\n"
  title: 7.  IANA Considerations
- contents:
  - "8.  Acknowledgments\n   We would like to thank An Nguyen for his encouragement
    to address\n   this topic and ongoing comments.  Also, this document borrows heavily\n
    \  from some of the work of S. Herzog on the Preemption Priority Policy\n   Element
    [RFC3181].  Dave Oran and Janet Gunn provided useful input\n   for this document.
    \ Ron Bonica, Magnus Westerlund, Cullen Jennings,\n   Ross Callon and Tim Polk
    provided specific guidance for the\n   applicability statement of the mechanisms
    defined in this document.\n"
  title: 8.  Acknowledgments
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
      1997.\n   [RFC2205]  Braden, B., Zhang, L., Berson, S., Herzog, S., and S.\n
      \             Jamin, \"Resource ReSerVation Protocol (RSVP) -- Version 1\n              Functional
      Specification\", RFC 2205, September 1997.\n   [RFC2434]  Narten, T. and H.
      Alvestrand, \"Guidelines for Writing an\n              IANA Considerations Section
      in RFCs\", BCP 26, RFC 2434,\n              October 1998.\n   [RFC2747]  Baker,
      F., Lindell, B., and M. Talwar, \"RSVP Cryptographic\n              Authentication\",
      RFC 2747, January 2000.\n   [RFC2750]  Herzog, S., \"RSVP Extensions for Policy
      Control\", RFC\n              2750, January 2000.\n   [RFC3097]  Braden, R.
      and L. Zhang, \"RSVP Cryptographic\n              Authentication -- Updated
      Message Type Value\", RFC 3097,\n              April 2001.\n   [RFC3181]  Herzog,
      S., \"Signaled Preemption Priority Policy Element\",\n              RFC 3181,
      October 2001.\n   [RFC3261]  Rosenberg, J., Schulzrinne, H., Camarillo, G.,
      Johnston,\n              A., Peterson, J., Sparks, R., Handley, M., and E.\n
      \             Schooler, \"SIP: Session Initiation Protocol\", RFC 3261,\n              June
      2002.\n   [RFC3312]  Camarillo, G., Marshall, W., and J. Rosenberg,\n              \"Integration
      of Resource Management and Session Initiation\n              Protocol (SIP)\",
      RFC 3312, October 2002.\n   [RFC4412]  Schulzrinne, H. and J. Polk, \"Communications
      Resource\n              Priority for the Session Initiation Protocol (SIP)\",
      RFC\n              4412, February 2006.\n   [RFC5226]  Narten, T. and H. Alvestrand,
      \"Guidelines for Writing an\n              IANA Considerations Section in RFCs\",
      BCP 26, RFC 5226,\n              May 2008.\n   [RFC6398]  Le Faucheur, F., Ed.,
      \"IP Router Alert Considerations and\n              Usage\", BCP 168, RFC 6398,
      October 2011.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [RFC2113]  Katz, D., \"IP Router Alert Option\",
      RFC 2113, February\n              1997.\n   [RFC2711]  Partridge, C. and A.
      Jackson, \"IPv6 Router Alert Option\",\n              RFC 2711, October 1999.\n
      \  [RFC2753]  Yavatkar, R., Pendarakis, D., and R. Guerin, \"A Framework\n              for
      Policy-based Admission Control\", RFC 2753, January\n              2000.\n   [RFC4125]
      \ Le Faucheur, F. and W. Lai, \"Maximum Allocation Bandwidth\n              Constraints
      Model for Diffserv-aware MPLS Traffic\n              Engineering\", RFC 4125,
      June 2005.\n   [RFC4126]  Ash, J., \"Max Allocation with Reservation Bandwidth\n
      \             Constraints Model for Diffserv-aware MPLS Traffic\n              Engineering
      & Performance Comparisons\", RFC 4126, June\n              2005.\n   [RFC4127]
      \ Le Faucheur, F., \"Russian Dolls Bandwidth Constraints\n              Model
      for Diffserv-aware MPLS Traffic Engineering\", RFC\n              4127, June
      2005.\n   [RFC4230]  Tschofenig, H. and R. Graveman, \"RSVP Security\n              Properties\",
      RFC 4230, December 2005.\n   [RFC4495]  Polk, J. and S. Dhesikan, \"A Resource
      Reservation Protocol\n              (RSVP) Extension for the Reduction of Bandwidth
      of a\n              Reservation Flow\", RFC 4495, May 2006.\n   [RFC5974]  Manner,
      J., Karagiannis, G., and A. McDonald, \"NSIS\n              Signaling Layer
      Protocol (NSLP) for Quality-of-Service\n              Signaling\", RFC 5974,
      October 2010.\n   [RFC6411]  Behringer, M., Le Faucheur, F., and B. Weis,\n
      \             \"Applicability of Keying Methods for RSVP Security\", RFC\n              6411,
      October 2011.\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - "Appendix A.  Examples of Bandwidth Allocation Model for Admission\n             Priority\n
    \  Appendices A.1 and A.2 respectively illustrate how the Maximum\n   Allocation
    Model (MAM) [RFC4125] and the Russian Dolls Model (RDM)\n   [RFC4127] can be used
    for support of admission priority.  The Maximum\n   Allocation model with Reservation
    (MAR) [RFC4126] can also be used in\n   a similar manner for support of admission
    priority.  Appendix A.3\n   illustrates how a simple \"Priority Bypass Model\"
    can also be used for\n   support of admission priority.\n   For simplicity, operations
    with only a single \"priority\" level\n   (beyond non-priority) are illustrated
    here; however, the reader will\n   appreciate that operations with multiple priority
    levels can easily\n   be supported with these models.\n   In all the figures below:\n
    \     \"x\" represents a non-priority session\n      \"o\" represents a priority
    session\n"
  - contents:
    - "A.1.  Admission Priority with Maximum Allocation Model (MAM)\n   This section
      illustrates operations of admission priority when a\n   Maximum Allocation Model
      (MAM) is used for bandwidth allocation\n   across non-priority traffic and priority
      traffic.  A property of the\n   Maximum Allocation Model is that priority traffic
      cannot use more\n   than the bandwidth made available to priority traffic (even
      if the\n   non-priority traffic is not using all of the bandwidth available
      for\n   it).\n                -----------------------\n           ^  ^  ^  |
      \             |  ^\n           .  .  .  |              |  .\n    Total  .  .
      \ .  |              |  .   Bandwidth\n          (1)(2)(3) |              |  .
      \  available\n    Engi-  .  .  .  |              |  .   for non-priority use\n
      \  neered  .or.or.  |              |  .\n           .  .  .  |              |
      \ .\n   Capacity.  .  .  |              |  .\n           v  .  .  |              |
      \ v\n              .  .  |--------------| ---\n              v  .  |              |
      \ ^\n                 .  |              |  .   Bandwidth available for\n                 v
      \ |              |  v   priority use\n                -------------------------\n
      \                   Figure 4: MAM Bandwidth Allocation\n   Figure 4 shows a
      link that is within a routed network and conforms to\n   this document.  On
      this link are two amounts of bandwidth available\n   to two types of traffic:
      non-priority and priority.\n   If the non-priority traffic load reaches the
      maximum bandwidth\n   available for non-priority, no additional non-priority
      sessions can\n   be accepted even if the bandwidth reserved for priority traffic
      is\n   not fully utilized currently.\n   With the Maximum Allocation Model,
      in the case where the priority\n   load reaches the maximum bandwidth reserved
      for priority sessions, no\n   additional priority sessions can be accepted.\n
      \  As illustrated in Figure 4, an operator may map the MAM to the\n   engineered
      capacity limits according to different policies.  At one\n   extreme, where
      the proportion of priority traffic is reliably known\n   to be fairly small
      at all times and where there may be some safety\n   margin factored in the engineered
      capacity limits, the operator may\n   decide to configure the bandwidth available
      for non-priority use to\n   the full engineered capacity limits, effectively
      allowing the\n   priority traffic to ride within the safety margin of this engineered\n
      \  capacity.  This policy can be seen as an economically attractive\n   approach
      as all of the engineered capacity is made available to non-\n   priority sessions.
      \ This policy is illustrated as (1) in Figure 4.\n   As an example, if the engineered
      capacity limit on a given link is X,\n   the operator may configure the bandwidth
      available to non-priority\n   traffic to X, and the bandwidth available to priority
      traffic to 5%\n   of X.  At the other extreme, where the proportion of priority
      traffic\n   may be significant at times and the engineered capacity limits are\n
      \  very tight, the operator may decide to configure the bandwidth\n   available
      to non-priority traffic and the bandwidth available to\n   priority traffic
      such that their sum is equal to the engineered\n   capacity limits.  This guarantees
      that the total load across non-\n   priority and priority traffic is always
      below the engineered capacity\n   and, in turn, guarantees there will never
      be any QoS degradation.\n   However, this policy is less attractive economically
      as it prevents\n   non-priority sessions from using the full engineered capacity,
      even\n   when there is no or little priority load, which is the majority of\n
      \  time.  This policy is illustrated as (3) in Figure 4.  As an example,\n   if
      the engineered capacity limit on a given link is X, the operator\n   may configure
      the bandwidth available to non-priority traffic to 95%\n   of X, and the bandwidth
      available to priority traffic to 5% of X.  Of\n   course, an operator may also
      strike a balance anywhere in between\n   these two approaches.  This policy
      is illustrated as (2) in Figure 4.\n   Figure 5 shows some of the non-priority
      capacity of this link being\n   used.\n                -----------------------\n
      \          ^  ^  ^  |              |  ^\n           .  .  .  |              |
      \ .\n    Total  .  .  .  |              |  .   Bandwidth\n           .  .  .
      \ |              |  .   available\n    Engi-  .  .  .  |              |  .   for
      non-priority use\n   neered  .or.or.  |xxxxxxxxxxxxxx|  .\n           .  .  .
      \ |xxxxxxxxxxxxxx|  .\n   Capacity.  .  .  |xxxxxxxxxxxxxx|  .\n           v
      \ .  .  |xxxxxxxxxxxxxx|  v\n              .  .  |--------------| ---\n              v
      \ .  |              |  ^\n                 .  |              |  .   Bandwidth
      available for\n                 v  |              |  v   priority use\n                -------------------------\n
      \              Figure 5: Partial Load of Non-Priority Calls\n   Figure 6 shows
      the same amount of non-priority load being used at\n   this link and a small
      amount of priority bandwidth being used.\n                -----------------------\n
      \          ^  ^  ^  |              |  ^\n           .  .  .  |              |
      \ .\n    Total  .  .  .  |              |  .   Bandwidth\n           .  .  .
      \ |              |  .   available\n    Engi-  .  .  .  |              |  .   for
      non-priority use\n   neered  .or.or.  |xxxxxxxxxxxxxx|  .\n           .  .  .
      \ |xxxxxxxxxxxxxx|  .\n   Capacity.  .  .  |xxxxxxxxxxxxxx|  .\n           v
      \ .  .  |xxxxxxxxxxxxxx|  v\n              .  .  |--------------| ---\n              v
      \ .  |              |  ^\n                 .  |              |  .   Bandwidth
      available for\n                 v  |oooooooooooooo|  v   priority use\n                -------------------------\n
      \    Figure 6: Partial Load of Non-Priority Calls and Partial Load of\n                              Priority
      Calls\n   Figure 7 shows the case where non-priority load equates or exceeds\n
      \  the maximum bandwidth available to non-priority traffic.  Note that\n   additional
      non-priority sessions would be rejected even if the\n   bandwidth reserved for
      priority sessions is not fully utilized.\n                -----------------------\n
      \          ^  ^  ^  |xxxxxxxxxxxxxx|  ^\n           .  .  .  |xxxxxxxxxxxxxx|
      \ .\n    Total  .  .  .  |xxxxxxxxxxxxxx|  .   Bandwidth\n           .  .  .
      \ |xxxxxxxxxxxxxx|  .   available\n    Engi-  .  .  .  |xxxxxxxxxxxxxx|  .   for
      non-priority use\n   neered  .or.or.  |xxxxxxxxxxxxxx|  .\n           .  .  .
      \ |xxxxxxxxxxxxxx|  .\n   Capacity.  .  .  |xxxxxxxxxxxxxx|  .\n           v
      \ .  .  |xxxxxxxxxxxxxx|  v\n              .  .  |--------------| ---\n              v
      \ .  |              |  ^\n                 .  |              |  .   Bandwidth
      available for\n                 v  |oooooooooooooo|  v   priority use\n                -------------------------\n
      \   Figure 7: Full Non-Priority Load and Partial Load of Priority Calls\n   Figure
      8 shows the case where the priority traffic equates or exceeds\n   the bandwidth
      reserved for such priority traffic.\n   In that case, additional priority sessions
      could not be accepted.\n   Note that this does not mean that such sessions are
      dropped\n   altogether: they may be handled by mechanisms, which are beyond
      the\n   scope of this particular document (such as establishment through\n   preemption
      of existing non-priority sessions or such as queueing of\n   new priority session
      requests until capacity becomes available again\n   for priority traffic).\n
      \               -----------------------\n           ^  ^  ^  |xxxxxxxxxxxxxx|
      \ ^\n           .  .  .  |xxxxxxxxxxxxxx|  .\n    Total  .  .  .  |xxxxxxxxxxxxxx|
      \ .   Bandwidth\n           .  .  .  |xxxxxxxxxxxxxx|  .   available\n    Engi-
      \ .  .  .  |xxxxxxxxxxxxxx|  .   for non-priority use\n   neered  .or.or.  |xxxxxxxxxxxxxx|
      \ .\n           .  .  .  |xxxxxxxxxxxxxx|  .\n   Capacity.  .  .  |              |
      \ .\n           v  .  .  |              |  v\n              .  .  |--------------|
      ---\n              v  .  |oooooooooooooo|  ^\n                 .  |oooooooooooooo|
      \ .   Bandwidth available for\n                 v  |oooooooooooooo|  v   priority
      use\n                -------------------------\n        Figure 8: Partial Non-Priority
      Load and Full Priority Load\n"
    title: A.1.  Admission Priority with Maximum Allocation Model (MAM)
  - contents:
    - "A.2.  Admission Priority with Russian Dolls Model (RDM)\n   This section illustrates
      operations of admission priority when a\n   Russian Dolls Model (RDM) is used
      for bandwidth allocation across\n   non-priority traffic and priority traffic.
      \ A property of the RDM is\n   that priority traffic can use the bandwidth that
      is not currently\n   used by non-priority traffic.\n   As with the MAM, an operator
      may map the RDM onto the engineered\n   capacity limits according to different
      policies.  The operator may\n   decide to configure the bandwidth available
      for non-priority use to\n   the full engineered capacity limits.  As an example,
      if the\n   engineered capacity limit on a given link is X, the operator may\n
      \  configure the bandwidth available to non-priority traffic to X, and\n   the
      bandwidth available to non-priority and priority traffic to 105%\n   of X.\n
      \  Alternatively, the operator may decide to configure the bandwidth\n   available
      to non-priority and priority traffic to the engineered\n   capacity limits.
      \ As an example, if the engineered capacity limit on\n   a given link is X,
      the operator may configure the bandwidth available\n   to non-priority traffic
      to 95% of X, and the bandwidth available to\n   non-priority and priority traffic
      to X.\n   Finally, the operator may decide to strike a balance in between.  The\n
      \  considerations presented for these policies in the previous section\n   in
      the MAM context are equally applicable to RDM.\n   Figure 9 shows the case where
      only some of the bandwidth available to\n   non-priority traffic is being used,
      and a small amount of priority\n   traffic is in place.  In that situation,
      both new non-priority\n   sessions and new priority sessions would be accepted.\n
      \              --------------------------------------\n               |xxxxxxxxxxxxxx|
      \ .                 ^\n               |xxxxxxxxxxxxxx|  . Bandwidth       .\n
      \              |xxxxxxxxxxxxxx|  . available for   .\n               |xxxxxxxxxxxxxx|
      \ . non-priority    .\n               |xxxxxxxxxxxxxx|  . use             .\n
      \              |xxxxxxxxxxxxxx|  .                 . Bandwidth\n               |
      \             |  .                 . available for\n               |              |
      \ v                 . non-priority\n               |--------------| ---                .
      and priority\n               |              |                    . use\n               |
      \             |                    .\n               |oooooooooooooo|                    v\n
      \              ---------------------------------------\n      Figure 9: Partial
      Non-Priority Load and Partial Aggregate Load\n   Figure 10 shows the case where
      all of the bandwidth available to non-\n   priority traffic is being used and
      a small amount of priority traffic\n   is in place.  In that situation, new
      priority sessions would be\n   accepted, but new non-priority sessions would
      be rejected.\n               --------------------------------------\n               |xxxxxxxxxxxxxx|
      \ .                 ^\n               |xxxxxxxxxxxxxx|  . Bandwidth       .\n
      \              |xxxxxxxxxxxxxx|  . available for   .\n               |xxxxxxxxxxxxxx|
      \ . non-priority    .\n               |xxxxxxxxxxxxxx|  . use             .\n
      \              |xxxxxxxxxxxxxx|  .                 . Bandwidth\n               |xxxxxxxxxxxxxx|
      \ .                 . available for\n               |xxxxxxxxxxxxxx|  v                 .
      non-priority\n               |--------------| ---                . and priority\n
      \              |              |                    . use\n               |              |
      \                   .\n               |oooooooooooooo|                    v\n
      \              ---------------------------------------\n       Figure 10: Full
      Non-Priority Load and Partial Aggregate Load\n   Figure 11 shows the case where
      only some of the bandwidth available\n   to non-priority traffic is being used,
      and a heavy load of priority\n   traffic is in place.  In that situation, both
      new non-priority\n   sessions and new priority sessions would be accepted.  Note
      that, as\n   illustrated in Figure 10, priority sessions use some of the bandwidth\n
      \  currently not used by non-priority traffic.\n               --------------------------------------\n
      \              |xxxxxxxxxxxxxx|  .                 ^\n               |xxxxxxxxxxxxxx|
      \ . Bandwidth       .\n               |xxxxxxxxxxxxxx|  . available for   .\n
      \              |xxxxxxxxxxxxxx|  . non-priority    .\n               |xxxxxxxxxxxxxx|
      \ . use             .\n               |              |  .                 .
      Bandwidth\n               |              |  .                 . available for\n
      \              |oooooooooooooo|  v                 . non-priority\n               |--------------|
      ---                . and priority\n               |oooooooooooooo|                    .
      use\n               |oooooooooooooo|                    .\n               |oooooooooooooo|
      \                   v\n               ---------------------------------------\n
      \      Figure 11: Partial Non-Priority Load and Heavy Aggregate Load\n   Figure
      12 shows the case where all of the bandwidth available to non-\n   priority
      traffic is being used, and all of the remaining available\n   bandwidth is used
      by priority traffic.  In that situation, new non-\n   priority sessions would
      be rejected, and new priority sessions could\n   not be accepted right away.
      \ Those priority sessions may be handled\n   by mechanisms, which are beyond
      the scope of this particular document\n   (such as established through preemption
      of existing non-priority\n   sessions or such as queueing of new priority session
      requests until\n   capacity becomes available again for priority traffic).\n
      \              --------------------------------------\n               |xxxxxxxxxxxxxx|
      \ .                 ^\n               |xxxxxxxxxxxxxx|  . Bandwidth       .\n
      \              |xxxxxxxxxxxxxx|  . available for   .\n               |xxxxxxxxxxxxxx|
      \ . non-priority    .\n               |xxxxxxxxxxxxxx|  . use             .\n
      \              |xxxxxxxxxxxxxx|  .                 . Bandwidth\n               |xxxxxxxxxxxxxx|
      \ .                 . available for\n               |xxxxxxxxxxxxxx|  v                 .
      non-priority\n               |--------------| ---                . and priority\n
      \              |oooooooooooooo|                    . use\n               |oooooooooooooo|
      \                   .\n               |oooooooooooooo|                    v\n
      \              ---------------------------------------\n         Figure 12:
      Full Non-Priority Load and Full Aggregate Load\n"
    title: A.2.  Admission Priority with Russian Dolls Model (RDM)
  - contents:
    - "A.3.  Admission Priority with Priority Bypass Model (PrBM)\n   This section
      illustrates operations of admission priority when a\n   simple Priority Bypass
      Model (PrBM) is used for bandwidth allocation\n   across non-priority traffic
      and priority traffic.  With the PrBM,\n   non-priority traffic is subject to
      resource-based admission control,\n   while priority traffic simply bypasses
      the resource-based admission\n   control.  In other words:\n   o  when a non-priority
      session arrives, this session is subject to\n      bandwidth admission control
      and is accepted if the current total\n      load (aggregate over non-priority
      and priority traffic) is below\n      the engineered/allocated bandwidth.\n
      \  o  when a priority session arrives, this session is admitted\n      regardless
      of the current load.\n   A property of this model is that a priority session
      is never\n   rejected.\n   The rationale for this simple scheme is that, in
      practice, in some\n   networks:\n   o  The volume of priority sessions is very
      low for the vast majority\n      of time, so it may not be economical to completely
      set aside\n      bandwidth for priority sessions and preclude the utilization
      of\n      this bandwidth by normal sessions in normal situations.\n   o  Even
      in congestion periods where priority sessions may be more\n      heavily used,
      those sessions always still represent a fairly small\n      proportion of the
      overall load that can be absorbed within the\n      safety margin of the engineered
      capacity limits.  Thus, even if\n      they are admitted beyond the engineered
      bandwidth threshold, they\n      are unlikely to result in noticeable QoS degradation.\n
      \  As with the MAM and RDM, an operator may map the PrBM onto the\n   engineered
      capacity limits according to different policies.  The\n   operator may decide
      to configure the bandwidth limit for admission of\n   non-priority traffic to
      the full engineered capacity limit.  As an\n   example, if the engineered capacity
      limit on a given link is X, the\n   operator may configure the bandwidth limit
      for non-priority traffic\n   to X.  Alternatively, the operator may decide to
      configure the\n   bandwidth limit for non-priority traffic to below the engineered\n
      \  capacity limits (so that the sum of the non-priority and priority\n   traffic
      stays below the engineered capacity).  As an example, if the\n   engineered
      capacity limit on a given link is X, the operator may\n   configure the bandwidth
      limit for non-priority traffic to 95% of X.\n    Finally, the operator may decide
      to strike a balance in between.\n   The considerations presented for these policies
      in the previous\n   sections in the MAM and RDM contexts are equally applicable
      to the\n   PrBM.\n   Figure 13 illustrates the bandwidth allocation with the
      PrBM.\n                -----------------------\n           ^     ^  |              |
      \ ^\n           .     .  |              |  .\n    Total  .     .  |              |
      \ .   Bandwidth limit\n          (1)   (2) |              |  .   (on non-priority
      + priority)\n    Engi-  .     .  |              |  .   for admission\n   neered
      \ . or  .  |              |  .   of non-priority traffic\n           .     .
      \ |              |  .\n   Capacity.     .  |              |  .\n           v
      \    .  |              |  v\n                 .  |--------------| ---\n                 .
      \ |              |\n                 v  |              |\n                    |
      \             |\n           Figure 13: Priority Bypass Model Bandwidth Allocation\n
      \  Figure 14 shows some of the non-priority capacity of this link being\n   used.
      \ In this situation, both new non-priority and new priority\n   sessions would
      be accepted.\n                -----------------------\n           ^     ^  |xxxxxxxxxxxxxx|
      \ ^\n           .     .  |xxxxxxxxxxxxxx|  .\n    Total  .     .  |xxxxxxxxxxxxxx|
      \ .   Bandwidth limit\n          (1)   (2) |xxxxxxxxxxxxxx|  .   (on non-priority
      + priority)\n    Engi-  .     .  |              |  .   for admission\n   neered
      \ . or  .  |              |  .   of non-priority traffic\n           .     .
      \ |              |  .\n   Capacity.     .  |              |  .\n           v
      \    .  |              |  v\n                 .  |--------------| ---\n                 .
      \ |              |\n                 v  |              |\n                    |
      \             |\n               Figure 14: Partial Load of Non-Priority Calls\n
      \  Figure 15 shows the same amount of non-priority load being used at\n   this
      link and a small amount of priority bandwidth being used.  In\n   this situation,
      both new non-priority and new priority sessions would\n   be accepted.\n                 -----------------------\n
      \          ^     ^  |xxxxxxxxxxxxxx|  ^\n           .     .  |xxxxxxxxxxxxxx|
      \ .\n    Total  .     .  |xxxxxxxxxxxxxx|  .   Bandwidth limit\n          (1)
      \  (2) |xxxxxxxxxxxxxx|  .   (on non-priority + priority)\n    Engi-  .     .
      \ |oooooooooooooo|  .   for admission\n   neered  . or  .  |              |
      \ .   of non-priority traffic\n           .     .  |              |  .\n   Capacity.
      \    .  |              |  .\n           v     .  |              |  v\n                 .
      \ |--------------| ---\n                 .  |              |\n                 v
      \ |              |\n                    |              |\n     Figure 15: Partial
      Load of Non-Priority Calls and Partial Load of\n                              Priority
      Calls\n   Figure 16 shows the case where aggregate non-priority and priority\n
      \  load exceeds the bandwidth limit for admission of non-priority\n   traffic.
      \ In this situation, any new non-priority session is\n   rejected, while any
      new priority session is admitted.\n                -----------------------\n
      \          ^     ^  |xxxxxxxxxxxxxx|  ^\n           .     .  |xxxxxxxxxxxxxx|
      \ .\n    Total  .     .  |xxxxxxxxxxxxxx|  .   Bandwidth limit\n          (1)
      \  (2) |xxxxxxxxxxxxxx|  .   (on non-priority + priority)\n    Engi-  .     .
      \ |oooooooooooooo|  .   for admission\n   neered  . or  .  |xxxooxxxooxxxo|
      \ .   of non-priority traffic\n           .     .  |xxoxxxxxxoxxxx|  .\n   Capacity.
      \    .  |oxxxooooxxxxoo|  .\n           v     .  |xxoxxxooxxxxxx|  v\n                 .
      \ |--------------| ---\n                 .  |oooooooooooooo|\n                 v
      \ |              |\n                    |              |\n                     Figure
      16: Full Non-Priority Load\n"
    title: A.3.  Admission Priority with Priority Bypass Model (PrBM)
  title: Appendix A.  Examples of Bandwidth Allocation Model for Admission
- contents:
  - "Appendix B.  Example Usages of RSVP Extensions\n   This section provides examples
    of how RSVP extensions defined in this\n   document can be used (in conjunction
    with other RSVP functionality\n   and SIP functionality) to enforce different
    hypothetical policies for\n   handling prioritized sessions in a given administrative
    domain.  This\n   appendix does not provide additional specification.  It is only\n
    \  included in this document for illustration purposes.\n   We assume an environment
    where SIP is used for session control and\n   RSVP is used for resource reservation.\n
    \  We refer here to \"Session Queueing\" as the set of \"session-layer\"\n   capabilities
    that may be implemented by SIP user agents to influence\n   their treatment of
    SIP requests.  This may include the ability to\n   \"queue\" session requests
    when those cannot be immediately honored (in\n   some cases with the notion of
    \"bumping\", or \"displacement\", of less\n   important session requests from
    that queue).  It may include\n   additional mechanisms such as alternate routing
    and exemption from\n   certain network management controls.\n   We only mention
    below the RSVP policy elements that are to be\n   enforced by PEPs.  It is assumed
    that these policy elements are set\n   at a policy area boundary by PDPs.  The
    Admission Priority and\n   Preemption Priority RSVP policy elements are set by
    PDPs as a result\n   of processing the Application-Level Resource Priority Policy
    Element\n   (which is carried in RSVP messages).\n   If one wants to implement
    a prioritized service purely based on\n   Session Queueing, one can achieve this
    by signaling prioritized\n   sessions:\n   o  using the \"Resource-Priority\"
    header in SIP\n   o  not using the Admission-Priority Policy Element in RSVP\n
    \  o  not using the Preemption Policy Element in RSVP\n   If one wants to implement
    a prioritized service based on Session\n   Queueing and \"prioritized access to
    network-layer resources\", one can\n   achieve this by signaling prioritized sessions:\n
    \  o  using the \"Resource-Priority\" header in SIP\n   o  using the Admission-Priority
    Policy Element in RSVP\n   o  not using the Preemption Policy Element in RSVP\n
    \  Establishment of prioritized sessions will not result in preemption\n   of
    any session.  Different bandwidth allocation models can be used to\n   offer different
    \"prioritized access to network-layer resources\".\n   Just as examples, this
    includes setting aside capacity exclusively\n   for prioritized sessions as well
    as simple bypass of admission limits\n   for prioritized sessions.\n   If one
    wants to implement a prioritized service based on Session\n   Queueing and \"prioritized
    access to network-layer resources\", and\n   wants to ensure that (say) \"Prioritized-1\"
    sessions can preempt\n   \"Prioritized-2\" sessions, but non-prioritized sessions
    are not\n   affected by preemption, one can do that by signaling prioritized\n
    \  sessions:\n   o  using the \"Resource-Priority\" header in SIP\n   o  using
    the Admission-Priority Policy Element in RSVP\n   o  using the Preemption Policy
    Element in RSVP with:\n      *  setup (Prioritized-1) > defending (Prioritized-2)\n
    \     *  setup (Prioritized-2) <= defending (Prioritized-1)\n      *  setup (Prioritized-1)
    <= defending (Non-Prioritized)\n      *  setup (Prioritized-2) <= defending (Non-Prioritized)\n
    \  If one wants to implement a prioritized service based on Session\n   Queueing
    and \"prioritized access to network-layer resources\", and\n   wants to ensure
    that prioritized sessions can preempt regular\n   sessions, one could do that
    by signaling Prioritized sessions:\n   o  using the \"Resource-Priority\" header
    in SIP\n   o  using the Admission-Priority Policy Element in RSVP\n   o  using
    the Preemption Policy Element in RSVP with:\n      *  setup (Prioritized) > defending
    (Non-Prioritized)\n      *  setup (Non-Prioritized) <= defending (Prioritized)\n
    \  If one wants to implement a prioritized service based on Session\n   Queueing
    and \"prioritized access to network-layer resources\", and\n   wants to ensure
    that prioritized sessions can partially preempt\n   regular sessions (i.e., reduce
    their reservation size), one could do\n   that by signaling prioritized sessions:\n
    \  o  using the \"Resource-Priority\" header in SIP\n   o  using the Admission-Priority
    Policy Element in RSVP\n   o  using the Preemption Policy Element in RSVP with:\n
    \     *  setup (Prioritized) > defending (Non-Prioritized)\n      *  setup (Non-Prioritized)
    <= defending (Prioritized)\n   o  activate [RFC4495] RSVP bandwidth reduction
    mechanisms\n"
  title: Appendix B.  Example Usages of RSVP Extensions
- contents:
  - "Authors' Addresses\n   Francois Le Faucheur\n   Cisco Systems\n   Greenside,
    400 Avenue de Roumanille\n   Sophia Antipolis  06410\n   France\n   Phone: +33
    4 97 23 26 19\n   EMail: flefauch@cisco.com\n   James Polk\n   Cisco Systems\n
    \  2200 East President George Bush Highway\n   Richardson, TX  75082-3550\n   United
    States\n   Phone: +1 972 813 5208\n   EMail: jmpolk@cisco.com\n   Ken Carlberg\n
    \  G11\n   123a Versailles Circle\n   Towson, MD  21204\n   United States\n   EMail:
    carlberg@g11.org.uk\n"
  title: Authors' Addresses
