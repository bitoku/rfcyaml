- contents:
  - '                           IMAP4 ID extension

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   The ID extension to the Internet Message Access Protocol - Version\n
    \  4rev1 (IMAP4rev1) protocol allows the server and client to exchange\n   identification
    information on their implementation in order to make\n   bug reports and usage
    statistics more complete.\n"
  title: Abstract
- contents:
  - "1. Introduction\n   The IMAP4rev1 protocol described in [IMAP4rev1] provides
    a method for\n   accessing remote mail stores, but it provides no facility to\n
    \  advertise what program a client or server uses to provide service.\n   This
    makes it difficult for implementors to get complete bug reports\n   from users,
    as it is frequently difficult to know what client or\n   server is in use.\n   Additionally,
    some sites may wish to assemble usage statistics based\n   on what clients are
    used, but in an an environment where users are\n   permitted to obtain and maintain
    their own clients this is difficult\n   to accomplish.\n   The ID command provides
    a facility to advertise information on what\n   programs are being used along
    with contact information (should bugs\n   ever occur).\n"
  title: 1. Introduction
- contents:
  - "2. Conventions Used in this Document\n   The key words \"MUST\", \"MUST NOT\",
    \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
    \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described
    in [KEYWORDS].\n   The conventions used in this document are the same as specified
    in\n   [IMAP4rev1].  In examples, \"C:\" and \"S:\" indicate lines sent by the\n
    \  client and server respectively.  Line breaks have been inserted for\n   readability.\n"
  title: 2. Conventions Used in this Document
- contents:
  - "3. Specification\n   The sole purpose of the ID extension is to enable clients
    and servers\n   to exchange information on their implementations for the purposes
    of\n   statistical analysis and problem determination.\n   This information is
    be submitted to a server by any client wishing to\n   provide information for
    statistical purposes, provided the server\n   advertises its willingness to take
    the information with the atom \"ID\"\n   included in the list of capabilities
    returned by the CAPABILITY\n   command.\n   Implementations MUST NOT make operational
    changes based on the data\n   sent as part of the ID command or response.  The
    ID command is for\n   human consumption only, and is not to be used in improving
    the\n   performance of clients or servers.\n   This includes, but is not limited
    to, the following:\n      Servers MUST NOT attempt to work around client bugs
    by using\n      information from the ID command.  Clients MUST NOT attempt to
    work\n      around server bugs based on the ID response.\n      Servers MUST NOT
    provide features to a client or otherwise\n      optimize for a particular client
    by using information from the ID\n      command.  Clients MUST NOT provide features
    to a server or\n      otherwise optimize for a particular server based on the
    ID\n      response.\n      Servers MUST NOT deny access to or refuse service for
    a client\n      based on information from the ID command.  Clients MUST NOT refuse\n
    \     to operate or limit their operation with a server based on the ID\n      response.\n
    \  Rationale: It is imperative that this extension not supplant IMAP's\n   CAPABILITY
    mechanism with a ad-hoc approach where implementations\n   guess each other's
    features based on who they claim to be.\n   Implementations MUST NOT send false
    information in an ID command.\n   Implementations MAY send less information than
    they have available or\n   no information at all.  Such behavior may be useful
    to preserve user\n   privacy.  See Security Considerations, section 7.\n"
  - contents:
    - "3.1. ID Command\n   Arguments:  client parameter list or NIL\n   Responses:
      \ OPTIONAL untagged response: ID\n   Result:     OK    identification information
      accepted\n               BAD   command unknown or arguments invalid\n   Implementation
      identification information is sent by the client with\n   the ID command.\n
      \  This command is valid in any state.\n   The information sent is in the form
      of a list of field/value pairs.\n   Fields are permitted to be any IMAP4 string,
      and values are permitted\n   to be any IMAP4 string or NIL.  A value of NIL
      indicates that the\n   client can not or will not specify this information.
      \ The client may\n   also send NIL instead of the list, indicating that it wants
      to send\n   no information, but would still accept a server response.\n   The
      available fields are defined in section 3.3.\n   Example:  C: a023 ID (\"name\"
      \"sodr\" \"version\" \"19.34\" \"vendor\"\n                 \"Pink Floyd Music
      Limited\")\n             S: * ID NIL\n             S: a023 OK ID completed\n"
    title: 3.1. ID Command
  - contents:
    - "3.2. ID Response\n   Contents:   server parameter list\n   In response to an
      ID command issued by the client, the server replies\n   with a tagged response
      containing information on its implementation.\n   The format is the same as
      the client list.\n   Example:  C: a042 ID NIL\n             S: * ID (\"name\"
      \"Cyrus\" \"version\" \"1.5\" \"os\" \"sunos\"\n                  \"os-version\"
      \"5.5\" \"support-url\"\n                  \"mailto:cyrus-bugs+@andrew.cmu.edu\")\n
      \            S: a042 OK ID command completed\n   A server MUST send a tagged
      ID response to an ID command.  However, a\n   server MAY send NIL in place of
      the list.\n"
    title: 3.2. ID Response
  - contents:
    - "3.3. Defined Field Values\n   Any string may be sent as a field, but the following
      are defined to\n   describe certain values that might be sent.  Implementations
      are free\n   to send none, any, or all of these.  Strings are not case-sensitive.\n
      \  Field strings MUST NOT be longer than 30 octets.  Value strings MUST\n   NOT
      be longer than 1024 octets.  Implementations MUST NOT send more\n   than 30
      field-value pairs.\n     name            Name of the program\n     version         Version
      number of the program\n     os              Name of the operating system\n     os-version
      \     Version of the operating system\n     vendor          Vendor of the client/server\n
      \    support-url     URL to contact for support\n     address         Postal
      address of contact/vendor\n     date            Date program was released, specified
      as a date-time\n                       in IMAP4rev1\n     command         Command
      used to start the program\n     arguments       Arguments supplied on the command
      line, if any\n                       if any\n     environment     Description
      of environment, i.e., UNIX environment\n                       variables or
      Windows registry settings\n   Implementations MUST NOT use contact information
      to submit automatic\n   bug reports.  Implementations may include information
      from an ID\n   response in a report automatically prepared, but are prohibited
      from\n   sending the report without user authorization.\n   It is preferable
      to find the name and version of the underlying\n   operating system at runtime
      in cases where this is possible.\n   Information sent via an ID response may
      violate user privacy.  See\n   Security Considerations, section 7.\n   Implementations
      MUST NOT send the same field name more than once.\n"
    title: 3.3. Defined Field Values
  title: 3. Specification
- contents:
  - "4. Formal Syntax\n   This  syntax is intended to augment the grammar specified
    in\n   [IMAP4rev1] in order to provide for the ID command.  This\n   specification
    uses the augmented Backus-Naur Form (BNF) notation as\n   used in [IMAP4rev1].\n
    \    command_any ::= \"CAPABILITY\" / \"LOGOUT\" / \"NOOP\" / x_command / id\n
    \        ;; adds id command to command_any in [IMAP4rev1]\n     id ::= \"ID\"
    SPACE id_params_list\n     id_response ::= \"ID\" SPACE id_params_list\n     id_params_list
    ::= \"(\" #(string SPACE nstring) \")\" / nil\n         ;; list of field value
    pairs\n     response_data ::= \"*\" SPACE (resp_cond_state / resp_cond_bye /\n
    \        mailbox_data / message_data / capability_data / id_response)\n"
  title: 4. Formal Syntax
- contents:
  - "5. Use of the ID extension with Firewalls and Other Intermediaries\n   There
    exist proxies, firewalls, and other intermediary systems that\n   can intercept
    an IMAP session and make changes to the data exchanged\n   in the session.  Such
    intermediaries are not anticipated by the IMAP4\n   protocol design and are not
    within the scope of the IMAP4 standard.\n   However, in order for the ID command
    to be useful in the presence of\n   such intermediaries, those intermediaries
    need to take special note\n   of the ID command and response.  In particular,
    if an intermediary\n   changes any part of the IMAP session it must also change
    the ID\n   command to advertise its presence.\n   A firewall MAY act to block
    transmission of specific information\n   fields in the ID command and response
    that it believes reveal\n   information that could expose a security vulnerability.
    \ However, a\n   firewall SHOULD NOT disable the extension, when present, entirely,\n
    \  and SHOULD NOT unconditionally remove either the client or server\n   list.\n
    \  Finally, it should be noted that a firewall, when handling a\n   CAPABILITY
    response, MUST NOT allow the names of extensions to be\n   returned to the client
    that the firewall has no knowledge of.\n"
  title: 5. Use of the ID extension with Firewalls and Other Intermediaries
- contents:
  - "6. References\n   [KEYWORDS]  Bradner, S., \"Key words for use in RFCs to Indicate\n
    \              Requirement Levels\", RFC 2119, March 1997.\n   [IMAP4rev1] Crispin,
    M., \"Internet Message Access Protocol - Version\n               4rev1\", RFC
    2060, October 1996.\n   [RFC-822]   Crocker, D., \"Standard for the Format of
    ARPA Internet\n               Text Messages\", STD 11, RFC 822, August 1982.\n"
  title: 6. References
- contents:
  - "7. Security Considerations\n   This extension has the danger of violating the
    privacy of users if\n   misused.  Clients and servers should notify users that
    they implement\n   and enable the ID command.\n   It is highly desirable that
    implementations provide a method of\n   disabling ID support, perhaps by not sending
    ID at all, or by sending\n   NIL as the argument to the ID command or response.\n
    \  Implementors must exercise extreme care in adding fields sent as part\n   of
    an ID command or response.  Some fields, including a processor ID\n   number,
    Ethernet address, or other unique (or mostly unique)\n   identifier allow tracking
    of users in ways that violate user privacy\n   expectations.\n   Having implementation
    information of a given client or server may\n   make it easier for an attacker
    to gain unauthorized access due to\n   security holes.\n   Since this command
    includes arbitrary data and does not require the\n   user to authenticate, server
    implementations are cautioned to guard\n   against an attacker sending arbitrary
    garbage data in order to fill\n   up the ID log.  In particular, if a server naively
    logs each ID\n   command to disk without inspecting it, an attacker can simply
    fire up\n   thousands of connections and send a few kilobytes of random data.\n
    \  Servers have to guard against this.  Methods include truncating\n   abnormally
    large responses; collating responses by storing only a\n   single copy, then keeping
    a counter of the number of times that\n   response has been seen; keeping only
    particularly interesting parts\n   of responses; and only logging responses of
    users who actually log\n   in.\n   Security is affected by firewalls which modify
    the IMAP protocol\n   stream; see section 5, Use of the ID Extension with Firewalls
    and\n   Other Intermediaries, for more information.\n"
  title: 7. Security Considerations
- contents:
  - "8. Author's Address\n   Tim Showalter\n   Mirapoint, Inc.\n   909 Hermosa Ct.\n
    \  Sunnyvale, CA 94095\n   EMail: tjs@mirapoint.com\n"
  title: 8. Author's Address
- contents:
  - "9.  Full Copyright Statement\n   Copyright (C) The Internet Society (2000).  All
    Rights Reserved.\n   This document and translations of it may be copied and furnished
    to\n   others, and derivative works that comment on or otherwise explain it\n
    \  or assist in its implementation may be prepared, copied, published\n   and
    distributed, in whole or in part, without restriction of any\n   kind, provided
    that the above copyright notice and this paragraph are\n   included on all such
    copies and derivative works.  However, this\n   document itself may not be modified
    in any way, such as by removing\n   the copyright notice or references to the
    Internet Society or other\n   Internet organizations, except as needed for the
    purpose of\n   developing Internet standards in which case the procedures for\n
    \  copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: 9.  Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
