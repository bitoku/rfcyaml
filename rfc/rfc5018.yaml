- title: __initial_text__
  contents:
  - '  Connection Establishment in the Binary Floor Control Protocol (BFCP)

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies how a Binary Floor Control Protocol (BFCP)\n\
    \   client establishes a connection to a BFCP floor control server\n   outside\
    \ the context of an offer/answer exchange.  Client and server\n   authentication\
    \ are based on Transport Layer Security (TLS).\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . 2\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . 2\n   3.  TCP Connection Establishment  . . . . . . . . . . . . .\
    \ . . . . 2\n   4.  TLS Usage . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . 4\n   5.  Authentication  . . . . . . . . . . . . . . . . . . . . . .\
    \ . . 4\n     5.1.  Certificate-Based Server Authentication . . . . . . . . .\
    \ . 4\n     5.2.  Client Authentication Based on a Pre-Shared Secret  . . . .\
    \ 5\n   6.  Security Considerations . . . . . . . . . . . . . . . . . . . . 5\n\
    \   7.  Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . . 7\n  \
    \ 8.  References  . . . . . . . . . . . . . . . . . . . . . . . . . . 7\n    \
    \ 8.1.  Normative References  . . . . . . . . . . . . . . . . . . . 7\n     8.2.\
    \  Informative References  . . . . . . . . . . . . . . . . . . 8\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   As discussed in the BFCP (Binary Floor Control Protocol)\n\
    \   specification [RFC4582], a given BFCP client needs a set of data in\n   order\
    \ to establish a BFCP connection to a floor control server.\n   These data include\
    \ the transport address of the server, the\n   conference identifier, and the\
    \ user identifier.\n   Once a client obtains this information, it needs to establish\
    \ a BFCP\n   connection to the floor control server.  The way this connection\
    \ is\n   established depends on the context of the client and the floor\n   control\
    \ server.  How to establish such a connection in the context of\n   an SDP (Session\
    \ Description Protocol) [RFC4566] offer/answer\n   [RFC3264] exchange between\
    \ a client and a floor control server is\n   specified in RFC 4583 [RFC4583].\
    \  This document specifies how a\n   client establishes a connection to a floor\
    \ control server outside the\n   context of an SDP offer/answer exchange.\n  \
    \ BFCP entities establishing a connection outside an SDP offer/answer\n   exchange\
    \ need different authentication mechanisms than entities using\n   offer/answer\
    \ exchanges.  This is because offer/answer exchanges\n   provide parties with\
    \ an initial integrity-protected channel that\n   clients and floor control servers\
    \ can use to exchange the\n   fingerprints of their self-signed certificates.\
    \  Outside the offer/\n   answer model, such a channel is not typically available.\
    \  This\n   document specifies how to authenticate clients using PSK (Pre-Shared\n\
    \   Key)-TLS (Transport Layer Security) [RFC4279] and how to authenticate\n  \
    \ servers using server certificates.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
- title: 3.  TCP Connection Establishment
  contents:
  - "3.  TCP Connection Establishment\n   As stated in Section 1, a given BFCP client\
    \ needs a set of data in\n   order to establish a BFCP connection to a floor control\
    \ server.\n   These data include the transport address of the server, the\n  \
    \ conference identifier, and the user identifier.  It is outside the\n   scope\
    \ of this document to specify how a client obtains this\n   information.  This\
    \ document assumes that the client obtains this\n   information using an out-of-band\
    \ method.\n   Once the client has the transport address (i.e., IP address and\
    \ port)\n   of the floor control server, it initiates a TCP connection towards\n\
    \   it.  That is, the client performs an active TCP open.\n   If the client is\
    \ provided with the floor control server's host name\n   instead of with its IP\
    \ address, the client MUST perform a DNS lookup\n   in order to resolve the host\
    \ name into an IP address.  Clients\n   eventually perform an A or AAAA DNS lookup\
    \ (or both) on the host\n   name.\n   In order to translate the target to the\
    \ corresponding set of IP\n   addresses, IPv6-only or dual-stack clients MUST\
    \ use name resolution\n   functions that implement the Source and Destination\
    \ Address Selection\n   algorithms specified in [RFC3484].  (On many hosts that\
    \ support IPv6,\n   APIs like getaddrinfo() provide this functionality and subsume\n\
    \   existing APIs like gethostbyname().)\n   The advantage of the additional complexity\
    \ is that this technique\n   will output an ordered list of IPv6/IPv4 destination\
    \ addresses based\n   on the relative merits of the corresponding source/destination\
    \ pairs.\n   This will result in the selection of a preferred destination address.\n\
    \   However, the Source and Destination Selection algorithms of [RFC3484]\n  \
    \ are dependent on broad operating system support and uniform\n   implementation\
    \ of the application programming interfaces that\n   implement this behavior.\n\
    \      Developers should carefully consider the issues described by Roy\n    \
    \  et al.  [RFC4943] with respect to address resolution delays and\n      address\
    \ selection rules.  For example, implementations of\n      getaddrinfo() may return\
    \ address lists containing IPv6 global\n      addresses at the top of the list\
    \ and IPv4 addresses at the bottom,\n      even when the host is only configured\
    \ with an IPv6 local scope\n      (e.g., link-local) and an IPv4 address.  This\
    \ will, of course,\n      introduce a delay in completing the connection.\n  \
    \ The BFCP specification [RFC4582] describes a number of situations\n   when the\
    \ TCP connection between a client and the floor control server\n   needs to be\
    \ reestablished.  However, that specification does not\n   describe the reestablishment\
    \ process because this process depends on\n   how the connection was established\
    \ in the first place.\n   When the existing TCP connection is closed following\
    \ the rules in\n   [RFC4582], the client SHOULD reestablish the connection towards\
    \ the\n   floor control server.  If a TCP connection cannot deliver a BFCP\n \
    \  message from the client to the floor control server and times out,\n   the\
    \ client SHOULD reestablish the TCP connection.\n"
- title: 4.  TLS Usage
  contents:
  - "4.  TLS Usage\n   [RFC4582] requires that all BFCP entities implement TLS [RFC4346]\
    \ and\n   recommends that they use it in all their connections.  TLS provides\n\
    \   integrity and replay protection, and optional confidentiality.  The\n   floor\
    \ control server MUST always act as the TLS server.\n   A floor control server\
    \ that receives a BFCP message over TCP (no TLS)\n   SHOULD request the use of\
    \ TLS by generating an Error message with an\n   Error code with a value of 9\
    \ (Use TLS).\n"
- title: 5.  Authentication
  contents:
  - "5.  Authentication\n   BFCP supports client authentication based on pre-shared\
    \ secrets and\n   server authentication based on server certificates.\n"
- title: 5.1.  Certificate-Based Server Authentication
  contents:
  - "5.1.  Certificate-Based Server Authentication\n   At TLS connection establishment,\
    \ the floor control server MUST\n   present its certificate to the client.  The\
    \ certificate provided at\n   the TLS level MUST either be directly signed by\
    \ one of the other\n   party's trust anchors or be validated using a certification\
    \ path that\n   terminates at one of the other party's trust anchors [RFC3280].\n\
    \   A client establishing a connection to a server knows the server's\n   host\
    \ name or IP address.  If the client knows the server's host name,\n   the client\
    \ MUST check it against the server's identity as presented\n   in the server's\
    \ Certificate message, in order to prevent man-in-the-\n   middle attacks.\n \
    \  If a subjectAltName extension of type dNSName is present, that MUST\n   be\
    \ used as the identity.  Otherwise, the (most specific) Common Name\n   field\
    \ in the Subject field of the certificate MUST be used.  Although\n   the use\
    \ of the Common Name is existing practice, it is deprecated and\n   Certification\
    \ Authorities are encouraged to use the subjectAltName\n   instead.\n   Matching\
    \ is performed using the matching rules specified by\n   [RFC3280].  If more than\
    \ one identity of a given type is present in\n   the certificate (e.g., more than\
    \ one dNSName name), a match in any\n   one of the set is considered acceptable.\
    \  Names in Common Name fields\n   may contain the wildcard character *, which\
    \ is considered to match\n   any single domain name component or component fragment\
    \ (e.g., *.a.com\n   matches foo.a.com but not bar.foo.a.com. f*.com matches foo.com\
    \ but\n   not bar.com).\n   If the client does not know the server's host name\
    \ and contacts the\n   server directly using the server's IP address, the iPAddress\n\
    \   subjectAltName must be present in the certificate and must exactly\n   match\
    \ the IP address known to the client.\n   If the host name or IP address known\
    \ to the client does not match the\n   identity in the certificate, user-oriented\
    \ clients MUST either notify\n   the user (clients MAY give the user the opportunity\
    \ to continue with\n   the connection in any case) or terminate the connection\
    \ with a bad\n   certificate error.  Automated clients MUST log the error to an\n\
    \   appropriate audit log (if available) and SHOULD terminate the\n   connection\
    \ (with a bad certificate error).  Automated clients MAY\n   provide a configuration\
    \ setting that disables this check, but MUST\n   provide a setting that enables\
    \ it.\n"
- title: 5.2.  Client Authentication Based on a Pre-Shared Secret
  contents:
  - "5.2.  Client Authentication Based on a Pre-Shared Secret\n   Client authentication\
    \ is based on a pre-shared secret between client\n   and server.  Authentication\
    \ is performed using PSK-TLS [RFC4279].\n   The BFCP specification mandates support\
    \ for the\n   TLS_RSA_WITH_AES_128_CBC_SHA ciphersuite.  Additionally, clients\
    \ and\n   servers supporting this specification MUST support the\n   TLS_RSA_PSK_WITH_AES_128_CBC_SHA\
    \ ciphersuite as well.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   Client and server authentication as specified\
    \ in this document are\n   based on the use of TLS.  Therefore, it is strongly\
    \ RECOMMENDED that\n   TLS with non-null encryption is always used.  Clients and\
    \ floor\n   control servers MAY use other security mechanisms as long as they\n\
    \   provide similar security properties (i.e., replay and integrity\n   protection,\
    \ confidentiality, and client and server authentication).\n   TLS PSK simply relies\
    \ on a pre-shared key without specifying the\n   nature of the key.  In practice,\
    \ such keys have two sources: text\n   passwords and randomly generated binary\
    \ keys.  When keys are derived\n   from passwords, TLS PSK mode is subject to\
    \ offline dictionary\n   attacks.  In DHE (Diffie-Hellman Exchange) and RSA modes,\
    \ an attacker\n   who can mount a single man-in-the-middle attack on a client/server\n\
    \   pair can then mount a dictionary attack on the password.  In modes\n   without\
    \ DHE or RSA, an attacker who can record communications between\n   a client/server\
    \ pair can mount a dictionary attack on the password.\n   Accordingly, it is RECOMMENDED\
    \ that, where possible, clients use\n   certificate-based server authentication\
    \ ciphersuites with password-\n   derived PSKs in order to defend against dictionary\
    \ attacks.\n   In addition, passwords SHOULD be chosen with enough entropy to\n\
    \   provide some protection against dictionary attacks.  Because the\n   entropy\
    \ of text varies dramatically and is generally far less than\n   that of an equivalent\
    \ random bitstring, no hard and fast rules about\n   password length are possible.\
    \  However, in general passwords SHOULD\n   be chosen to be at least 8 characters\
    \ and selected from a pool\n   containing both upper and lower case, numbers,\
    \ and special keyboard\n   characters (note that an 8-character ASCII password\
    \ has a maximum\n   entropy of 56 bits and in general far lower).  FIPS PUB 112\
    \ [PUB112]\n   provides some guidance on the relevant issues.  If possible,\n\
    \   passphrases are preferable to passwords.  It is RECOMMENDED that\n   implementations\
    \ support, at minimum, 16-character passwords or\n   passphrases.  In addition,\
    \ a cooperating client and server pair MAY\n   choose to derive the TLS PSK shared\
    \ key from the passphrase via a\n   password-based key derivation function such\
    \ as PBKDF2 [RFC2898].\n   Because such key derivation functions may incorporate\
    \ iteration\n   functions for key strengthening, they provide some additional\n\
    \   protection against dictionary attacks by increasing the amount of\n   work\
    \ that the attacker must perform.\n   When the keys are randomly generated and\
    \ of sufficient length,\n   dictionary attacks are not effective because such\
    \ keys are highly\n   unlikely to be in the attacker's dictionary.  Where possible,\
    \ keys\n   SHOULD be generated using a strong random number generator as\n   specified\
    \ in [RFC4086].  A minimum key length of 80 bits SHOULD be\n   used.\n   The remainder\
    \ of this section analyzes some of the threats against\n   BFCP and how they are\
    \ addressed.\n   An attacker may attempt to impersonate a client (a floor participant\n\
    \   or a floor chair) in order to generate forged floor requests or to\n   grant\
    \ or deny existing floor requests.  Client impersonation is\n   avoided by using\
    \ TLS.  The floor control server assumes that\n   attackers cannot hijack TLS\
    \ connections from authenticated clients.\n   An attacker may attempt to impersonate\
    \ a floor control server.  A\n   successful attacker would be able to make clients\
    \ think that they\n   hold a particular floor so that they would try to access\
    \ a resource\n   (e.g., sending media) without having legitimate rights to access\
    \ it.\n   Floor control server impersonation is avoided by having floor control\n\
    \   servers present their server certificates at TLS connection\n   establishment\
    \ time.\n   Attackers may attempt to modify messages exchanged by a client and\
    \ a\n   floor control server.  The integrity protection provided by TLS\n   connections\
    \ prevents this attack.\n   Attackers may attempt to pick messages from the network\
    \ to get access\n   to confidential information between the floor control server\
    \ and a\n   client (e.g., why a floor request was denied).  TLS confidentiality\n\
    \   prevents this attack.  Therefore, it is RECOMMENDED that TLS is used\n   with\
    \ a non-null encryption algorithm.\n"
- title: 7.  Acknowledgments
  contents:
  - "7.  Acknowledgments\n   Sam Hartman, David Black, Karim El Malki, and Vijay Gurbani\
    \ provided\n   useful comments on this document.  Eric Rescorla performed a detailed\n\
    \   security analysis of this document.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC3264]  Rosenberg, J. and H. Schulzrinne, \"An Offer/Answer Model\n\
    \              with Session Description Protocol (SDP)\", RFC 3264,\n        \
    \      June 2002.\n   [RFC3280]  Housley, R., Polk, W., Ford, W., and D. Solo,\
    \ \"Internet\n              X.509 Public Key Infrastructure Certificate and\n\
    \              Certificate Revocation List (CRL) Profile\", RFC 3280,\n      \
    \        April 2002.\n   [RFC3484]  Draves, R., \"Default Address Selection for\
    \ Internet\n              Protocol version 6 (IPv6)\", RFC 3484, February 2003.\n\
    \   [RFC4086]  Eastlake, D., Schiller, J., and S. Crocker, \"Randomness\n    \
    \          Requirements for Security\", BCP 106, RFC 4086, June 2005.\n   [RFC4279]\
    \  Eronen, P. and H. Tschofenig, \"Pre-Shared Key Ciphersuites\n             \
    \ for Transport Layer Security (TLS)\", RFC 4279,\n              December 2005.\n\
    \   [RFC4346]  Dierks, T. and E. Rescorla, \"The Transport Layer Security\n  \
    \            (TLS) Protocol Version 1.1\", RFC 4346, April 2006.\n   [RFC4566]\
    \  Handley, M., Jacobson, V., and C. Perkins, \"SDP: Session\n              Description\
    \ Protocol\", RFC 4566, July 2006.\n   [RFC4582]  Camarillo, G., Ott, J., and\
    \ K. Drage, \"The Binary Floor\n              Control Protocol (BFCP)\", RFC 4582,\
    \ November 2006.\n   [RFC4583]  Camarillo, G., \"Session Description Protocol\
    \ (SDP) Format\n              for Binary Floor Control Protocol (BFCP) Streams\"\
    ,\n              RFC 4583, November 2006.\n   [PUB112]   National Institute of\
    \ Standards and Technology (NIST),\n              \"Password Usage\", FIPS PUB\
    \ 112, May 1985.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [RFC2898]  Kaliski, B., \"PKCS #5: Password-Based\
    \ Cryptography\n              Specification Version 2.0\", RFC 2898, September\
    \ 2000.\n   [RFC4943]  Roy, S., Durand, A., and J. Paugh, \"IPv6 Neighbor\n  \
    \            Discovery On-Link Assumption Considered Harmful\",\n            \
    \  RFC 4943, September 2007.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Gonzalo Camarillo\n   Ericsson\n   Hirsalantie 11\n   Jorvas\
    \  02420\n   Finland\n   EMail: Gonzalo.Camarillo@ericsson.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
