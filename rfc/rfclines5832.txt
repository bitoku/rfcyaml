This document is intended to be a source of information about the Russian Federal standard for digital signatures (GOST R 34.10 2001), which is one of the Russian cryptographic standard algorithms (called GOST algorithms).
Recently, Russian cryptography is being used in Internet applications, and this document has been created as information for developers and users of GOST R 34.10 2001 for digital signature generation and verification.
[GOST3410] was developed by the Federal Agency for Government Communication and Information under the President of the Russian Federation with the participation of the All Russia Scientific and Research Institute of Standardization.
GOST R 34.10 2001 was submitted by Federal Agency for Government Communication and Information at President of the Russian Federation.
GOST R 34.10 2001 was accepted and activated by the Act 380 st of 12.09.2001 issued by the Government Committee of Russia for Standards.
GOST R 34.10 2001 was developed in accordance with the terminology and concepts of international standards
Data processing Vocabulary Part 2: Arithmetic and logic operations"
; ISO/IEC 9796:1991 "Information technology
Digital signature schemes giving message recovery"; ISO/IEC 14888 "Information technology Security techniques Digital signatures with appendix"; and ISO/IEC 10118 "Information technology Security techniques Hash functions".
GOST R 34.10 2001 replaces GOST R 34.10 94.
The Purpose of GOST R 34.10 2001
GOST R 34.10 2001 describes the generation and verification processes for digital signatures, based on operations with an elliptic curve points group, defined over a prime finite field.
GOST R 34.10 2001 has been developed to replace GOST R 34.10 94.
Necessity for this development is caused by the need to increase digital signature security against unauthorized modification.
Digital signature security is based on the complexity of discrete logarithm calculation in an elliptic curve points group and also on the security of the hash function used (according to [GOST3411]).
Terminologically and conceptually, GOST R 34.10 2001 is in accordance with international standards
[ISO2382 2], ISO/IEC 9796 [ISO9796 1991]
, ISO/IEC 14888 Parts 1 3 [ISO14888 1]
[ISO14888 3], and ISO/IEC 10118 Parts 1 4 [ISO10118 1] [ISO10118 4].
Note: the main part of GOST R 34.10 2001 is supplemented with three appendixes:
"Extra Terms in the Digital Signature Area" (Appendix A of this memo); "Test Examples" (Section 7 of this memo); "A Bibliography in the Digital Signature Area" (Section 9.2 of this memo).
Applicability GOST R 34.10 2001 defines an electronic digital signature (or simply digital signature) scheme, digital signature generation and verification processes for a given message (document), meant for transmission via insecure public telecommunication channels in data processing systems of different purposes.
Use of a digital signature based on GOST R 34.10 2001 makes transmitted messages more resistant to forgery and loss of integrity, in comparison with the digital signature scheme prescribed by the previous standard.
GOST R 34.10 2001 is obligatory to use in the Russian Federation in all data processing systems providing public services.
The following terms are used in the standard:
Bit string, formed by a digital signature and by the arbitrary text field [ISO14888 1].
Signature key: Element of secret data, specific to the subject and used only by this subject during the signature generation process [ISO14888 1].
Verification key: Element of data mathematically linked to the signature key data element, used by the verifier during the digital signature verification process [ISO14888 1].
Domain parameter: Element of data that is common for all the subjects of the digital signature scheme, known or accessible to all the subjects [ISO14888 1].
A set of data elements, which consists of the message and the appendix, which is a part of the message.
A sequence of numbers, which is obtained during some arithmetic (calculation) process, used in a specific case instead of a true random number sequence [ISO2382 2].
A sequence of numbers none of which can be predicted (calculated) using only the preceding numbers of the same sequence [ISO2382 2].
A process that uses the signed message, the verification key, and the digital signature scheme parameters as initial data and that gives the conclusion about digital signature validity or invalidity as a result [ISO14888 1].
A process that uses the message, the signature key, and the digital signature scheme parameters as initial data and that generates the digital signature as the result [ISO14888 1].
Witness: Element of data (resulting from the verification process) that states to the verifier whether the digital signature is valid or invalid [ISO148881 1]).
A number chosen from the definite number set in such a way that every number from the set can be chosen with equal probability [ISO2382 2].
String of bits of a limited length [ISO9796 1991].
String of bits that is a result of the hash function [ISO148881 1].
The function, mapping bit strings onto bit strings of fixed length observing the following properties: 1) it is difficult to calculate the input data, that is the pre  image of the given function value; 2) it is difficult to find another input data that is the pre  image of the same function value as is the given input data; 3) it is difficult to find a pair of different input data, producing the same hash function value.
Note: Property 1 in the context of the digital signature area means that it is impossible to recover the initial message using the digital signature; property 2 means that it is difficult to find another (falsified) message that produces the same digital signature as a given message; property 3 means that it is difficult to find some pair of different messages, which both produce the same signature.
String of bits obtained as a result of the signature generation process.
This string has an internal structure, depending on the specific signature generation mechanism.
In GOST R 34.10 2001 terms, "Digital signature" and "Electronic digital signature" are synonymous to save terminological succession to native legal documents currently in force and scientific publications.
In GOST R 34.10 2001, the following notations are used:
V256 set of all binary vectors of a 256 bit length V all set of all binary vectors of an arbitrary finite length Z set of all integers p prime number, p > 3 GF(p)
, M belongs to V all (H1    H2 ) concatenation of two binary vectors a,b elliptic curve coefficients m points of the elliptic curve group order q subgroup order of group of points of the elliptic curve O zero point of the elliptic curve P elliptic curve point of order q d integer a signature
key Q elliptic curve point a verification key ^
the power operator /  non equality sqrt square root zeta digital signature for the message M 4.
General Statements A commonly accepted digital signature scheme (model) (see Section 6 of [ISO/IEC14888 1]) consists of three processes: generation of a pair of keys (for signature generation and for signature verification); signature generation; signature verification.
In GOST R 34.10 2001, a process for generating a pair of keys (for signature and verification) is not defined.
Characteristics and ways of the process realization are defined by involved subjects, who determine corresponding parameters by their agreement.
The digital signature mechanism is defined by the realization of two main processes (see Section 7): signature generation (see Section 6.1) and signature verification (see Section 6.2).
The digital signature is meant for the authentication of the signatory of the electronic message.
Besides, digital signature usage gives an opportunity to provide the following properties during signed message transmission: realization of control of the transmitted signed message integrity, proof of the authorship of the signatory of the message, protection of the message against possible forgery.
A schematic representation of the signed message is shown in Figure 1.
The field "digital signature" is supplemented by the field "text" (see Figure 1), that can contain, for example, identifiers of the signatory of the message and/or time label.
The digital signature scheme determined in GOST R 34.10 2001 must be implemented using operations of the elliptic curve points group, defined over a finite prime field, and also with the use of hash function.
The cryptographic security of the digital signature scheme is based on the complexity of solving the problem of the calculation of the discrete logarithm in the elliptic curve points group and also on the security of the hash function used.
The hash function calculation algorithm is determined in [GOST3411].
The digital signature scheme parameters needed for signature generation and verification are determined in Section 5.2.
GOST R 34.10 2001 does not determine the process of generating parameters needed for the digital signature scheme.
Possible sets of these parameters are defined, for example, in [RFC4357].
The digital signature represented as a binary vector of a 512 bit length must be calculated using a definite set of rules, as stated in Section 6.1.
The digital signature of the received message is accepted or denied in accordance with the set of rules, as stated in Section 6.2.
To define a digital signature scheme, it is necessary to describe basic mathematical objects used in the signature generation and verification processes.
This section lays out basic mathematical definitions and requirements for the parameters of the digital signature scheme.
Mathematical Definitions Suppose a prime number p > 3 is given.
Then, an elliptic curve E, defined over a finite prime field GF(p), is the set of number pairs (x,y), x
An invariant of the elliptic curve is the value J(E), satisfying the equality: 4 a^3 J(E)   1728
a,b are defined in the following way using the invariant J(E):
The pairs (x,y) satisfying the identity (1) are called the elliptic curve E points;
x and y are called x  and y coordinates of the point, correspondingly.
We will denote elliptic curve points as Q(x,y) or just Q.  Two elliptic curve points are equal if their x  and y coordinates are equal.
For two arbitrary elliptic curve E points Q1 (x1, y1) and Q2 (x2, y2), we will consider several variants.
Suppose coordinates of points Q1 and Q2 satisfy the condition x1 /  x2.
(4)   y3 lambda (x1 x3)
If x1   x2 and y1   y2 /  0, then we will define point Q3 coordinates in the following way:
(5)   y3 lambda (x1 x3)
If x1   x2 and y1   y2 (mod p), then the sum of points Q1 and Q2 is called a zero point O, without determination of its x  and y  coordinates.
In this case, point Q2 is called a negative of point Q1.
For m, the following inequalities hold: p   1 2 sqrt(p)
The point Q is called a point of multiplicity k, or just a multiple point of the elliptic curve E, if for some point P the following equality holds:
The digital signature parameters are: prime number p is an elliptic curve modulus, satisfying the inequality p > 2^255.
The upper bound for this number must be determined for the specific realization of the digital signature scheme; elliptic curve E, defined by its invariant J(E) or by coefficients a, b belonging to GF(p).
integer m is an elliptic curve E points group order; prime number q is an order of a cyclic subgroup of the elliptic curve E points group, which satisfies the following conditions:   m   nq, n belongs to Z , n
< 2^256 point P /  O of an elliptic curve E, with coordinates (
x p, y p), satisfying the equality q P O. hash function
h(.):V all   V256, which maps the messages represented as binary vectors of arbitrary finite length onto binary vectors of a 256 bit length.
The hash function is determined in [GOST3411].
Every user of the digital signature scheme must have its personal keys: signature key, which is an integer d, satisfying the inequality 0 < d < q; verification key, which is an elliptic curve point Q with coordinates (x q, y q), satisfying the equality d P Q.
The previously introduced digital signature parameters must satisfy the following requirements: it is necessary that the condition p^t/  1 (mod q ) holds for all integers
To determine the digital signature generation and verification processes, it is necessary to map the set of integers onto the set of binary vectors of a 256 bit length.
Consider the following binary vector of a 256 bit length where low  order bits are placed on the right, and high order ones are placed on the left:
We will say that the number alpha belonging to Z is mapped onto the binary vector h, if the equality holds: alpha   alpha[0] 2^0
For two binary vectors H1 and H2, which correspond to integers alpha and beta, we define a concatenation (union) operation in the following way.
(13) that is a binary vector of 512 bit length, consisting of coefficients of the vectors H1 and H2.
On the other hand, the introduced formulae define a way to divide a binary vector H of 512 bit length into two binary vectors of 256 bit length, where H is the concatenation of the two.
In this section, the digital signature generation and verification processes of user's message are defined.
For the realization of the processes, it is necessary that all users know the digital signature scheme parameters, which satisfy the requirements of Section 5.2.
Besides, every user must have the signature key d and the verification key Q(x[q], y[q]), which also must satisfy the requirements of Section 5.2. 6.1.
It is necessary to perform the following actions (steps) according to Algorithm I to obtain the digital signature for the message M belonging to V all: Step 1 calculate the message hash code
(14) Step 2 calculate an integer alpha, binary representation of which is the vector H, and determine e   alpha (mod q ).
If e   0, then assign e   1.
Step 3 generate a random (pseudorandom) integer k, satisfying the inequality: 0 < k < q.
x coordinate of the point C.
If r   0, return to step 3.
Step 5 calculate the value:
If s   0, return to step 3.
Step 6 calculate the binary vectors R and S, corresponding to r and s, and determine the digital signature zeta
(R    S) as a concatenation of these two binary vectors.
The initial data of this process are the signature key d and the message M to be signed.
The output result is the digital signature zeta.
To verify digital signatures for the received message M belonging to V all, it is necessary to perform the following actions (steps) according to Algorithm II: Step 1 calculate the integers r and s using the received signature zeta.
If the inequalities 0 < r < q, 0 < s < q hold, go to the next step.
Otherwise, the signature is invalid.
Step 2 calculate the hash code of the received message M:
(19) Step 3 calculate the integer alpha, the binary representation of which is the vector H, and determine if: e   alpha (mod q).
If e   0, then assign e   1.
Step 4 calculate the value v   e^( 1) (mod q).
(21) Step 5 calculate the values:
z1    s v (mod q), z2    r v (mod q).
Step 7 if the equality R   r holds, then the signature is accepted.
Otherwise, the signature is invalid.
The input data of the process are the signed message M, the digital signature zeta, and the verification key Q.
The output result is the witness of the signature validity or invalidity.
Test Examples (Appendix to GOST R 34.10 2001)
This section is included in GOST R 34.10 2001 as a reference appendix but is not officially mentioned as a part of the standard.
The values given here for the parameters p, a, b, m, q, P, the signature key d, and the verification key Q are recommended only for testing the correctness of actual realizations of the algorithms described in GOST R 34.10 2001.
All numerical values are introduced in decimal and hexadecimal notations.
The numbers beginning with 0x are in hexadecimal notation.
For example, the notation: 12345\\ 67890 0x499602D2 represents 1234567890 in decimal and hexadecimal number systems, respectively.
The Digital Signature Scheme Parameters
The following parameters must be used for the digital signature generation and verification (see Section 5.2).
The following value is assigned to parameter p in this example: p
57896044618658097711785492504343953926\\ 634992332820282019728792003956564821041 p   0x8000000000000000000000000000\\ 000000000000000000000000000000000431
Elliptic Curve Coefficients Parameters a and b
take the following values in this example: a   7
942111794451039583252968842033849580414 b   0x5FBFF498AA938CE739B8E022FBAFEF40563\\ F6E6A3472FC2A514C0CE9DAE23B7E 7.1.3.
Elliptic Curve Points Group Order Parameter m takes the following value in this example: m   5789604461865809771178549250434395392\\ 7082934583725450622380973592137631069619
Order of Cyclic Subgroup of Elliptic Curve Points Group Parameter q takes the following value in this example:
q   5789604461865809771178549250434395392\\ 7082934583725450622380973592137631069619 q   0x80000000000000000000000000000001\\ 50FE8A1892976154C59CFC193ACCF5B3
Elliptic Curve Point Coordinates Point P coordinates take the following values in this example:
It is supposed, in this example, that the user has the following signature key d:
It is supposed, in this example, that the user has the verification key Q with the following coordinate values:
Digital Signature Process (Algorithm I) Suppose that after steps 1 3, according to Algorithm I (Section 6.1), are performed, the following numerical values are obtained: e
And the multiple point C
0x489C375A9941A3049E33B34361DD\\ 204172AD98C3E5916DE27695D22A61FAE46E Parameter r   x C(mod q) takes the value: r   297009809158179528743712049839382569\\
A41974053554A42767B83AD043FD39DC0493 Parameter s   (r d   k e)(mod q) takes the value: s
Verification Process of Digital Signature (Algorithm II) Suppose that after steps 1 3, according to Algorithm II (Section 6.2), are performed, the following numerical value is obtained: e
And the parameter v   e^( 1) (mod q) takes the value:
and z2    r v(mod q) take the values:
The point C   z1 P
z2 Q has the coordinates:
3284253527868466347709466532251708450\\ 6804721032454543268132854556539274060910 y[C]   0x489C375A9941A3049E33B34361DD\\ 204172AD98C3E5916DE27695D22A61FAE46E
Then the parameter R   x C (mod q) takes the value:
R   2970098091581795287437120498393825699\\ 0422752107994319651632687982059210933395 R   0x41AA28D2F1AB148280CD9ED56FED\\
A41974053554A42767B83AD043FD39DC0493 Since the equality R   r holds, the digital signature is accepted.
This entire document is about security considerations.
Current cryptographic resistance of GOST R 34.10 2001 digital signature algorithm is estimated as 2^128 operations of multiple elliptic curve point computations on prime modulus of order 2^256.
Appendix A.  Extra Terms in the Digital Signature Area
The appendix gives extra international terms applied in the considered and allied areas.
Extending a data string with extra bits [ISO10118 1].
Identification data: A list of data elements, including specific object identifier, that belongs to the object and is used for its denotation [ISO14888 1].
Signature equation: An equation, defined by the digital signature function [ISO14888 1].
A verification process function, defined by the verification key, which outputs a witness of the signature authenticity [ISO14888 1].
A function within a signature generation process, defined by the signature key and by the digital signature scheme parameters.
This function inputs a part of initial data and, probably, a pseudo random number sequence generator (randomizer), and outputs the second part of the digital signature.
Appendix B.  Contributors Dmitry Kabelev Cryptocom, Ltd. 14 Kedrova St., Bldg.
2 Moscow, 117218 Russian Federation EMail: kdb@cryptocom.ru Igor Ustinov Cryptocom, Ltd. 14 Kedrova St., Bldg.
2 Moscow, 117218 Russian Federation EMail: igus@cryptocom.ru Sergey Vyshensky Moscow State University Leninskie gory, 1 Moscow, 119991 Russian Federation EMail: svysh@pn.sinp.msu.ru
