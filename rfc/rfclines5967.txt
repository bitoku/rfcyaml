Abstract This document specifies a media type used to carry PKCS #10 certification requests as defined in RFC 2986.
It carries over the original specification from RFC 2311, which recently has been moved to Historic status, and properly links it to RFC 2986.
Introduction [RFC2311] first defined the application/pkcs10 media type.
When [RFC2633] was published, the application/pkcs10 section was dropped, but for some reason the text was not incorporated into the PKCS #10 document [RFC2986].
[RFC2311] was moved to Historic status by [RFC5751].
To ensure the IANA media type registration points to a non Historic document, this document updates [RFC2986] with the definition of the application/pkcs10 media type and an IANA registration based on [RFC4288].
The text for Section 2 is adapted from Section 3.7 of [RFC2311].
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
Creating a Certification Request A typical application that allows a user to generate cryptographic information has to submit that information to a Certification Authority (CA), who transforms it into a certificate.
[RFC2986] describes a syntax for certification requests.
The details of certification requests and the process of obtaining a certificate are beyond the scope of this memo.
Instead, only the format of data used in application/pkcs10 is defined.
pkcs10 Body PKCS #10 defines the ASN.1 type CertificationRequest for use in submitting a certification request.
For transfer to a CA, this abstract syntax needs to be encoded and identified in a unique manner.
When the media type application/pkcs10 is used, the body MUST be a CertificationRequest.
A robust application SHOULD output Distinguished Encoding Rules (DER), but allow Basic Encoding Rules (BER) or DER on input.
Data produced by BER or DER is 8 bit, but some transports are limited to 7 bit data.
In such cases, a suitable 7 bit transfer encoding MUST be applied; in MIME compatible transports, the base64 encoding [RFC4648] SHOULD be used with application/pkcs10, although any 7 bit transfer encoding may work.
Sending and Receiving an application/pkcs10 Body Part For sending a certificate signing request, the application/pkcs10 message format MUST be used to convey a PKCS #10 certificate signing request.
Note that for sending certificates and Certificate Revocation Lists (CRLs) without any signed content, the application/pkcs7 mime message format MUST be used to convey a degenerate PKCS #7
signedData "certs only" message [RFC5751].
To send an application/pkcs10 body, the application generates the cryptographic information for the user.
The details of the cryptographic information are beyond the scope of this memo.
The cryptographic information is placed within a PKCS #10 CertificationRequest.
The CertificationRequest is encoded according to BER or DER (preferred, DER).
As a typical step, the encoded CertificationRequest is also base64 encoded so that it is 7 bit data suitable for transfer in ESMTP.
This then becomes the body of an application/pkcs10 body part.
The result might look like this: Content Type: application/pkcs10; name smime.p10 Content Transfer Encoding:
base64 Content Disposition: attachment; filename smime.p10
A typical application only needs to send a certification request.
It is a Certification Authority that has to receive and process the request.
The steps for recovering the CertificationRequest from the message are straightforward but are not presented here.
The procedures for processing the certification request are beyond the scope of this document.
IANA Considerations IANA has updated the registration for the application/pkcs10 media subtype in the Application Media Types registry using the filled in template from BCP 13
Registration of Media Subtype application/
pkcs10 The media subtype for a PKCS #10 certification request is application/pkcs10.
pkcs10 Required parameters: None Optional parameters:
None Encoding considerations: binary; see Section 2.
Security considerations: Clients use a certification request to request that a Certification Authority certify a public key.
The certification request is digitally signed.
Applications which use this media type: Applications that support
: Person & email address to contact for further information:
Restrictions on usage: none Author: Sean Turner <turners@ieca.com
The security considerations of [RFC2986] and [RFC5751] apply; no new security considerations are introduced by this document.
