- title: __initial_text__
  contents:
  - "                   Returning Matched Values with the\n        Lightweight Directory\
    \ Access Protocol version 3 (LDAPv3)\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes a control for the Lightweight Directory\n\
    \   Access Protocol version 3 that is used to return a subset of\n   attribute\
    \ values from an entry.  Specifically, only those values that\n   match a \"values\
    \ return\" filter.  Without support for this control, a\n   client must retrieve\
    \ all of an attribute's values and search for\n   specific values locally.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   When reading an attribute from an entry using the Lightweight\n\
    \   Directory Access Protocol version 3 (LDAPv3) [2], it is normally only\n  \
    \ possible to read either the attribute type, or the attribute type and\n   all\
    \ its values.  It is not possible to selectively read just a few of\n   the attribute\
    \ values.  If an attribute holds many values, for\n   example, the userCertificate\
    \ attribute, or the subschema publishing\n   operational attributes objectClasses\
    \ and attributeTypes [3], then it\n   may be desirable for the user to be able\
    \ to selectively retrieve a\n   subset of the values, specifically, those attribute\
    \ values that match\n   some user defined selection criteria.  Without the control\
    \ specified\n   in this document, a client must read all of the attribute's values\n\
    \   and filter out the unwanted values, necessitating the client to\n   implement\
    \ the matching rules.  It also requires the client to\n   potentially read and\
    \ process many irrelevant values, which can be\n   inefficient if the values are\
    \ large or complex, or there are many\n   values stored per attribute.\n   This\
    \ document specifies an LDAPv3 control to enable a user to return\n   only those\
    \ values that matched (i.e., returned TRUE to) one or more\n   elements of a newly\
    \ defined \"values return\" filter.  This control can\n   be especially useful\
    \ when used in conjunction with extensible\n   matching rules that match on one\
    \ or more components of complex binary\n   attribute values.\n   The key words\
    \ \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\"\
    , \"SHOULD NOT\", \"RECOMMENDED\",  \"MAY\", and \"OPTIONAL\" in this\n   document\
    \ are to be interpreted as described in BCP 14, RFC 2119 [4].\n"
- title: 2.  The valuesReturnFilter Control
  contents:
  - "2.  The valuesReturnFilter Control\n   The valuesReturnFilter control is either\
    \ critical or non-critical as\n   determined by the user.  It only has meaning\
    \ for the Search\n   operation, and SHOULD only be added to the Search operation\
    \ by the\n   client.  If the server supports the control and it is present on\
    \ a\n   Search operation, the server MUST obey the control, regardless of the\n\
    \   value of the criticality flag.\n   If the control is marked as critical, and\
    \ either the server does not\n   support the control or the control is applied\
    \ to an operation other\n   than Search, the server MUST return an unavailableCriticalExtension\n\
    \   error.  If the control is not marked as critical, and either the\n   server\
    \ does not support the control or the control is applied to an\n   operation other\
    \ than Search, then the server MUST ignore the control.\n   The object identifier\
    \ for this control is 1.2.826.0.1.3344810.2.3.\n   The controlValue is an OCTET\
    \ STRING, whose value is the BER encoding\n   [6], as per Section 5.1 of RFC 2251\
    \ [2], of a value of the ASN.1 [5]\n   type ValuesReturnFilter.\n           ValuesReturnFilter\
    \ ::= SEQUENCE OF SimpleFilterItem\n           SimpleFilterItem ::= CHOICE {\n\
    \                   equalityMatch   [3] AttributeValueAssertion,\n           \
    \        substrings      [4] SubstringFilter,\n                   greaterOrEqual\
    \  [5] AttributeValueAssertion,\n                   lessOrEqual     [6] AttributeValueAssertion,\n\
    \                   present         [7] AttributeDescription,\n              \
    \     approxMatch     [8] AttributeValueAssertion,\n                   extensibleMatch\
    \ [9] SimpleMatchingAssertion }\n            SimpleMatchingAssertion ::= SEQUENCE\
    \ {\n                   matchingRule    [1] MatchingRuleId OPTIONAL,\n       \
    \            type            [2] AttributeDescription OPTIONAL,\n   --- at least\
    \ one of the above must be present\n                   matchValue      [3] AssertionValue}\n\
    \   All the above data types have their standard meanings as defined in\n   [2].\n\
    \   If the server supports this control, the server MUST make use of the\n   control\
    \ as follows:\n   1) The Search Filter is first executed in order to determine\
    \ which\n      entries satisfy the Search criteria (these are the filtered\n \
    \     entries).  The control has no impact on this step.\n   2) If the typesOnly\
    \ parameter of the Search Request is TRUE, the\n      control has no effect and\
    \ the Search Request is processed as if\n      the control had not been specified.\n\
    \   3) If the attributes parameter of the Search Request consists of a\n     \
    \ list containing only the attribute with OID \"1.1\" (specifying that\n     \
    \ no attributes are to be returned), the control has no effect and\n      the\
    \ Search Request is processed as if the control had not been\n      specified.\n\
    \   4) For each attribute listed in the attributes parameter of the\n      Search\
    \ Request, the server MUST apply the control as follows to\n      each entry in\
    \ the set of filtered entries:\n      i)  Every attribute value that evaluates\
    \ TRUE against one or more\n          elements of the ValuesReturnFilter is placed\
    \ in the\n          corresponding SearchResultEntry.\n      ii) Every attribute\
    \ value that evaluates FALSE or undefined\n          against all elements of the\
    \ ValuesReturnFilter is not placed\n          in the corresponding SearchResultEntry.\
    \  An attribute that has\n          no values selected is returned with an empty\
    \ set of values.\n   Note.  If the AttributeDescriptionList (see [2]) is empty\
    \ or\n   comprises \"*\", then the control MUST be applied against every user\n\
    \   attribute.  If the AttributeDescriptionList contains a \"+\", then the\n \
    \  control MUST be applied against every operational attribute.\n"
- title: 3.  Relationship to X.500
  contents:
  - "3.  Relationship to X.500\n   The control is a superset of the matchedValuesOnly\
    \ (MVO) boolean of\n   the X.500 Directory Access Protocol (DAP) [8] Search argument,\
    \ as\n   amended in the latest version [9].  Close examination of the\n   matchedValuesOnly\
    \ boolean by the LDAP Extensions (LDAPEXT) Working\n   Group revealed ambiguities\
    \ and complexities in the MVO boolean that\n   could not easily be resolved. \
    \ For example, it was not clear if the\n   MVO boolean governed only those attribute\
    \ values that contributed to\n   the overall truth of the filter, or all of the\
    \ attribute values, even\n   if the filter item containing the attribute was evaluated\
    \ as false.\n   For this reason the LDAPEXT group decided to replace the MVO boolean\n\
    \   with a simple filter that removes any uncertainty as to whether an\n   attribute\
    \ value has been selected or not.\n"
- title: 4.  Relationship to other LDAP Controls
  contents:
  - "4.  Relationship to other LDAP Controls\n   The purpose of this control is to\
    \ select zero, one, or more attribute\n   values from each requested attribute\
    \ in a filtered entry, and to\n   discard the remainder.  Once the attribute values\
    \ have been discarded\n   by this control, they MUST NOT be re-instated into the\
    \ Search results\n   by other controls.\n   This control acts independently of\
    \ other LDAP controls such as server\n   side sorting [13] and duplicate entries\
    \ [10].  However, there might\n   be interactions between this control and other\
    \ controls so that a\n   different set of Search Result Entries are returned,\
    \ or the entries\n   are returned in a different order, depending upon the sequencing\
    \ of\n   this control and other controls in the LDAP request.  For example,\n\
    \   with server side sorting, if sorting is done first, and value return\n   filtering\
    \ second, the set of Search Results may appear to be in the\n   wrong order since\
    \ the value filtering may remove the attribute values\n   upon which the ordering\
    \ was done.  (The sorting document specifies\n   that entries without any sort\
    \ key attribute values should be treated\n   as coming after all other attribute\
    \ values.)  Similarly with\n   duplicate entries, if duplication is performed\
    \ before value\n   filtering, the set of Search Result Entries may contain identical\n\
    \   duplicate entries, each with an empty set of attribute values,\n   because\
    \ the value filtering removed the attribute values that were\n   used to duplicate\
    \ the results.\n   For these reasons, the ValuesReturnFilter control in a SearchRequest\n\
    \   SHOULD precede other controls that affect the number and ordering of\n   SearchResultEntrys.\n"
- title: 5.  Examples
  contents:
  - "5.  Examples\n   All entries are provided in an LDAP Data Interchange Format\n\
    \   (LDIF)[11].\n   The string representation of the valuesReturnFilter in the\
    \ examples\n   below uses the following ABNF [15] notation:\n   valuesReturnFilter\
    \ = \"(\" 1*simpleFilterItem \")\"\n   simpleFilterItem = \"(\" item \")\"\n \
    \  where item is as defined below (adapted from RFC2254 [14]).\n      item   \
    \      = simple / present / substring / extensible\n      simple       = attr\
    \ filtertype value\n      filtertype   = equal / approx / greater / less\n   \
    \   equal        = \"=\"\n      approx       = \"~=\"\n      greater      = \"\
    >=\"\n      less         = \"<=\"\n      extensible   = attr [\":\" matchingrule]\
    \ \":=\" value\n                     / \":\" matchingrule \":=\" value\n     \
    \ present      = attr \"=*\"\n      substring    = attr \"=\" [initial] any [final]\n\
    \      initial      = value\n      any          = \"*\" *(value \"*\")\n     \
    \ final        = value\n      attr         = AttributeDescription from Section\
    \ 4.1.5 of [1]\n      matchingrule = MatchingRuleId from Section 4.1.9 of [1]\n\
    \      value        = AttributeValue from Section 4.1.6 of [1]\n   1) The first\
    \ example shows how the control can be set to return all\n      attribute values\
    \ from one attribute type (e.g., telephoneNumber)\n      and a subset of values\
    \ from another attribute type (e.g., mail).\n   The entries below represent organizationalPerson\
    \ object classes\n   located somewhere beneath the distinguished name dc=ac,dc=uk.\n\
    \   dn: cn=Sean Mullan,ou=people,dc=sun,dc=ac,dc=uk\n   cn: Sean Mullan\n   sn:\
    \ Mullan\n   objectClass: organizationalPerson\n   objectClass: person\n   objectClass:\
    \ inetOrgPerson\n   mail: sean.mullan@hotmail.com\n   mail: mullan@east.sun.com\n\
    \   telephoneNumber: + 781 442 0926\n   telephoneNumber: 555-9999\n   dn: cn=David\
    \ Chadwick,ou=isi,o=salford,dc=ac,dc=uk\n   cn: David Chadwick\n   sn: Chadwick\n\
    \   objectClass: organizationalPerson\n   objectClass: person\n   objectClass:\
    \ inetOrgPerson\n   mail: d.w.chadwick@salford.ac.uk\n   An LDAP search operation\
    \ is specified with a baseObject set to the DN\n   of the search base (i.e., dc=ac,dc=uk),\
    \ a subtree scope, a filter set\n   to (sn=mullan), and the list of attributes\
    \ to be returned set to\n   \"mail,telephoneNumber\" or \"*\".  In addition, a\
    \ ValuesReturnFilter\n   control is set to ((mail=*hotmail.com)(telephoneNumber=*)).\n\
    \   The search results returned by the server would consist of the\n   following\
    \ entry:\n   dn: cn=Sean Mullan,ou=people,dc=sun,dc=ac,dc=uk\n   mail: sean.mullan@hotmail.com\n\
    \   telephoneNumber: + 781 442 0926\n   telephoneNumber: 555-9999\n   Note that\
    \ the control has no effect on the values returned for the\n   \"telephoneNumber\"\
    \ attribute (all of the values are returned), since\n   the control specified\
    \ that all values should be returned.\n   2) The second example shows how one\
    \ might retrieve a single attribute\n      type subschema definition for the \"\
    gunk\" attribute with OID\n      1.2.3.4.5 from the subschema subentry.\n   Assume\
    \ the subschema subentry is held below the root entry with DN\n   cn=subschema\
    \ subentry,o=myorg and this holds an attributeTypes\n   operational attribute\
    \ holding the descriptions of the 35 attributes\n   known to this server (each\
    \ description is held as a single attribute\n   value of the attributeTypes attribute).\n\
    \   dn: cn=subschema subentry,o=myorg\n   cn: subschema subentry\n   objectClass:\
    \ subschema\n   attributeTypes: ( 2.5.4.3 NAME 'cn' SUP name )\n   attributeTypes:\
    \ ( 2.5.4.6 NAME 'c' SUP name SINGLE-VALUE )\n   attributeTypes: ( 2.5.4.0 NAME\
    \ 'objectClass' EQUALITY obj\n    ectIdentifierMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.38\
    \ )\n   attributeTypes: ( 2.5.18.2 NAME 'modifyTimestamp' EQUALITY gen\n    eralizedTimeMatch\
    \ ORDERING generalizedTimeOrderingMatch SYN\n    TAX 1.3.6.1.4.1.1466.115.121.1.24\
    \ SINGLE-VALUE NO-USER-\n    MODIFICATION USAGE directoryOperation )\n   attributeTypes:\
    \ ( 2.5.21.6 NAME 'objectClasses' EQUALITY obj\n    ectIdentifierFirstComponentMatch\
    \ SYNTAX 1.3.\n    6.1.4.1.1466.115.121.1.37 USAGE directoryOperation )\n   attributeTypes:\
    \ ( 1.2.3.4.5 NAME 'gunk' EQUALITY caseIgnoreMat\n    ch SUBSTR caseIgnoreSubstringsMatch\
    \ SYNTAX 1.3.\n    6.1.4.1.1466.115.121.1.44{64} )\n   attributeTypes: ( 2.5.21.5\
    \ NAME 'attributeTypes' EQUALITY obj\n    ectIdentifierFirstComponentMatch SYNTAX\
    \ 1.3.\n    6.1.4.1.1466.115.121.1.3 USAGE directoryOperation )\n   plus another\
    \ 28 - you get the idea.\n   The user creates an LDAP search operation with a\
    \ baseObject set to\n   cn=subschema subentry,o=myorg, a scope of base, a filter\
    \ set to\n   (objectClass=subschema), the list of attributes to be returned set\
    \ to\n   \"attributeTypes\", and the ValuesReturnFilter set to\n   ((attributeTypes=1.2.3.4.5))\n\
    \   The search result returned by the server would consist of the\n   following\
    \ entry:\n   dn: cn=subschema subentry,o=myorg\n   attributeTypes: ( 1.2.3.4.5\
    \ NAME 'gunk' EQUALITY caseIgnoreMat\n    ch SUBSTR caseIgnoreSubstringsMatch\
    \ SYNTAX 1.3.\n    6.1.4.1.1466.115.121.1.44{64} )\n   3) The final example shows\
    \ how the control can be used to match on a\n      userCertificate attribute value.\
    \  Note that this example requires\n      the LDAP server to support the certificateExactMatch\
    \ matching rule\n      defined in [12] as the EQUALITY matching rule for userCertificate.\n\
    \   The entry below represents a pkiUser object class stored in the\n   directory.\n\
    \   dn: cn=David Chadwick,ou=people,o=University of Salford,c=gb\n   cn: David\
    \ Chadwick\n   objectClass: person\n   objectClass: organizationalPerson\n   objectClass:\
    \ pkiUser\n   objectClass: inetOrgPerson\n   sn: Chadwick\n   mail: d.w.chadwick@salford.ac.uk\n\
    \   userCertificate;binary: {binary representation of a certificate with\n   a\
    \ serial number of 2468 issued by o=truetrust ltd,c=gb}\n   userCertificate;binary:\
    \ {binary representation of certificate with a\n   serial number of 1357 issued\
    \ by o=truetrust ltd,c=gb}\n   userCertificate;binary: {binary representation\
    \ of certificate with a\n   serial number of 1234 issued by dc=certsRus,dc=com}\n\
    \   An LDAP search operation is specified with a baseObject set to\n   o=University\
    \ of Salford,c=gb, a subtree scope, a filter set to\n   (sn=chadwick), and the\
    \ list of attributes to be returned set to\n   \"userCertificate;binary\".  In\
    \ addition, a ValuesReturnFilter control\n   is set to ((userCertificate=1357$o=truetrust\
    \ ltd,c=gb)).\n   The search result returned by the server would consist of the\n\
    \   following entry:\n   dn: cn=David Chadwick,ou=people,o=University of Salford,c=gb\n\
    \   userCertificate;binary: {binary representation of certificate with a\n   serial\
    \ number of 1357 issued by o=truetrust ltd,c=gb}\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   This document does not primarily discuss security\
    \ issues.\n   Note however that attribute values MUST only be returned if the\n\
    \   access controls applied by the LDAP server allow them to be returned,\n  \
    \ and in this respect the effect of the ValuesReturnFilter control is\n   of no\
    \ consequence.\n   Note that the ValuesReturnFilter control may have a positive\
    \ effect\n   on the deployment of public key infrastructures.  Certain PKI\n \
    \  operations, like searching for specific certificates, become more\n   scalable,\
    \ and more practical when combined with X.509 certificate\n   matching rules at\
    \ the server, since the control avoids the\n   downloading of potentially large\
    \ numbers of irrelevant certificates\n   which would have to be processed and\
    \ filtered locally (which in some\n   cases is very difficult to perform).\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   The Matched Values control as an LDAP Protocol Mechanism\
    \ [7] has been\n   registered as follows:\n      Subject: Request for LDAP Protocol\
    \ Mechanism Registration\n      Object Identifier: 1.2.826.0.1.3344810.2.3\n \
    \     Description: Matched Values Control\n      Person & email address to contact\
    \ for further information:\n        David Chadwick <d.w.chadwick@salford.ac.uk>\n\
    \      Usage: Control\n      Specification: RFC3876\n      Author/Change Controller:\
    \ IESG\n      Comments: none\n   This document uses the OID 1.2.826.0.1.3344810.2.3\
    \ to identify the\n   matchedValues control described here.  This OID was assigned\
    \ by\n   TrueTrust Ltd, under its BSI assigned English/Welsh Registered\n   Company\
    \ number [16].\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   The authors would like to thank members of the LDAPExt\
    \ list for their\n   constructive comments on earlier versions of this document,\
    \ and in\n   particular to Harald Alvestrand who first suggested having an\n \
    \  attribute return filter and Bruce Greenblatt who first proposed a\n   syntax\
    \ for this control.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [1]  Bradner, S., \"The Internet Standards Process\
    \ -- Revision 3\", BCP\n        9, RFC 2026, October 1996.\n   [2]  Wahl, M.,\
    \ Howes, T., and S. Kille, \"Lightweight Directory Access\n        Protocol (w3)\"\
    , RFC 2251, December 1997.\n   [3]  Wahl, M., Coulbeck, A., Howes, T., and S.\
    \ Kille, \"Lightweight\n        Directory Access Protocol (v3): Attribute Syntax\
    \ Definitions\",\n        RFC 2252, December 1997.\n   [4]  Bradner, S., \"Key\
    \ words for use in RFCs to Indicate Requirement\n        Levels\", BCP 14, RFC\
    \ 2119, March 1997.\n   [5]  ITU-T Recommendation X.680 (1997) | ISO/IEC 8824-1:1998,\n\
    \        Information Technology - Abstract Syntax Notation One (ASN.1):\n    \
    \    Specification of Basic Notation\n   [6]  ITU-T Recommendation X.690 (1997)\
    \ | ISO/IEC 8825-1,2,3:1998\n        Information technology - ASN.1 encoding rules:\
    \ Specification of\n        Basic Encoding Rules (BER), Canonical Encoding Rules\
    \ (CER) and\n        Distinguished Encoding Rules (DER)\n   [7]  Zeilenga, K.,\
    \ \"Internet Assigned Numbers Authority (IANA)\n        Considerations for the\
    \ Lightweight Directory Access Protocol\n        (LDAP)\", BCP 64, RFC 3383, September\
    \ 2002.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [8]  ITU-T Rec. X.511, \"The Directory: Abstract\
    \ Service Definition\",\n        1993.\n   [9]  ISO/IEC 9594 / ITU-T Rec X.511\
    \ (2001) The Directory: Abstract\n        Service Definition.\n   [10] Sermersheim,\
    \ J., \"LDAP Control for a Duplicate Entry\n        Representation of Search Results\"\
    , Work in Progress, October\n        2000.\n   [11] Good, G., \"The LDAP Data\
    \ Interchange Format (LDIF) - Technical\n        Specification\", RFC 2849, June\
    \ 2000.\n   [12] Chadwick, D. and S.Legg, \"Internet X.509 Public Key\n      \
    \  Infrastructure - Additional LDAP Schema for PKIs\", Work in\n        Progress,\
    \ June 2002\n   [13] Howes, T., Wahl, M., and A. Anantha, \"LDAP Control Extension\
    \ for\n        Server Side Sorting of Search Results\", RFC 2891, August 2000.\n\
    \   [14] Howes, T., \"The String Representation of LDAP Search Filters\",\n  \
    \      RFC 2254, December 1997.\n   [15] Crocker, D. and P. Overell, \"Augmented\
    \ BNF for Syntax\n        Specifications: ABNF\", RFC 2234, November 1997.\n \
    \  [16] BRITISH STANDARD BS 7453 Part 1. Procedures for UK Registration\n    \
    \    for Open System Standards Part 1: Procedures for the UK Name\n        Registration\
    \ Authority.\n"
- title: 10.  Authors' Addresses
  contents:
  - "10.  Authors' Addresses\n   David Chadwick\n   IS Institute\n   University of\
    \ Salford\n   Salford M5 4WT\n   England\n   Phone: +44 161 295 5351\n   EMail:\
    \ d.w.chadwick@salford.ac.uk\n   Sean Mullan\n   Sun Microsystems\n   One Network\
    \ Drive\n   Burlington, MA 01803\n   USA\n   EMail: sean.mullan@sun.com\n"
- title: 11.  Full Copyright Statement
  contents:
  - "11.  Full Copyright Statement\n   Copyright (C) The Internet Society (2004).\n\
    \   This document is subject to the rights, licenses and restrictions\n   contained\
    \ in BCP 78, and except as set forth therein, the authors\n   retain all their\
    \ rights.\n   This document and the information contained herein are provided\
    \ on an\n   \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/S HE\n  \
    \ REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE\n   INTERNET\
    \ ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR\n   IMPLIED, INCLUDING\
    \ BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL\
    \ NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR\
    \ FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ IETF's procedures with respect to rights in IETF Documents can\n   be found\
    \ in BCP 78 and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat\
    \ and any\n   assurances of licenses to be made available, or the result of an\n\
    \   attempt made to obtain a general license or permission for the use of\n  \
    \ such proprietary rights by implementers or users of this\n   specification can\
    \ be obtained from the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n\
    \   The IETF invites any interested party to bring to its attention any\n   copyrights,\
    \ patents or patent applications, or other proprietary\n   rights that may cover\
    \ technology that may be required to implement\n   this standard.  Please address\
    \ the information to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
