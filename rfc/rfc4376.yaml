- title: __initial_text__
  contents:
  - '                Requirements for Floor Control Protocols

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   Floor control is a means to manage joint or exclusive access to\n\
    \   shared resources in a (multiparty) conferencing environment.\n   Thereby,\
    \ floor control complements other functions -- such as\n   conference and media\
    \ session setup, conference policy manipulation,\n   and media control -- that\
    \ are realized by other protocols.  This\n   document defines the requirements\
    \ for a floor control protocol for\n   multiparty conferences in the context of\
    \ an existing framework.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Conventions Used in This Document ...............................3\n  \
    \ 3. Terminology .....................................................3\n   4.\
    \ Model ...........................................................4\n   5. Integration\
    \ with Conferencing ...................................5\n   6. Assumptions about\
    \ a Conference Policy ...........................6\n   7. Floor Control Protocol\
    \ Requirements .............................7\n      7.1. Communication between\
    \ Participant and Server ...............7\n      7.2. Communication between Chair\
    \ and Server .....................9\n      7.3. General Protocol Requirements\
    \ ..............................9\n   8. Security Considerations ........................................10\n\
    \   9. Acknowledgements ...............................................11\n  \
    \ 10. References ....................................................12\n    \
    \  10.1. Normative References .....................................12\n      10.2.\
    \ Informative References ...................................12\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Conference applications often have shared resources such\
    \ as the right\n   to talk, input access to a limited-bandwidth video channel,\
    \ or a\n   pointer or input focus in a shared application.\n   In many cases,\
    \ it is desirable to be able to control who can provide\n   input (send/write/control,\
    \ depending on the application) to the\n   shared resource.\n   Floor control\
    \ enables applications or users to gain safe and mutually\n   exclusive or non-exclusive\
    \ input access to the shared object or\n   resource.  The floor is an individual\
    \ temporary access or\n   manipulation permission for a specific shared resource\
    \ (or group of\n   resources) [6].\n   Floor control is an optional feature for\
    \ conferencing applications.\n   SIP [2] conferencing applications may also decide\
    \ not to support this\n   feature at all.  Two-party applications may use floor\
    \ control outside\n   conferencing, although the usefulness of this kind of scenario\
    \ is\n   limited.  Floor control may be used together with the conference\n  \
    \ policy control protocol (CPCP) [7], or it may be used as an\n   independent\
    \ stand-alone protocol, e.g., with SIP but without CPCP.\n   Floor control has\
    \ been studied extensively over the years (e.g., [8],\n   [6], and [5]); therefore,\
    \ earlier work can be leveraged here.\n   The present document describes the requirements\
    \ for a floor control\n   protocol.  As a requirements specification, the document\
    \ makes no\n   assumptions about the later implementation of the respective\n\
    \   requirements as parts of one or more protocols or about the entities\n   implementing\
    \ them and their roles.\n   This document may be used in conjunction with other\
    \ documents, such\n   as the conferencing framework document [3].  In particular,\
    \ when\n   speaking about a floor control server, this entity may be identical\n\
    \   to or co-located with the focus or a conference policy server defined\n  \
    \ in the framework document, while participants and floor chairs\n   referred\
    \ to in this specification may be regular participants as\n   introduced in the\
    \ conferencing framework document.  In this\n   specification, the term \"floor\
    \ control protocol\" is used in an\n   abstract sense and may ultimately be mapped\
    \ to any of the existing\n   conference control or other signaling protocols (including\
    \ CPCP and\n   SIP).  However, defining those relationships is left to a concrete\n\
    \   floor control protocol specification.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [1].\n"
- title: 3.  Terminology
  contents:
  - "3.  Terminology\n   This document uses the definitions from [3].\n   The following\
    \ additional definitions apply:\n   Floor: A permission to access or manipulate\
    \ a specific shared\n   resource or set of resources temporarily.\n   Conference\
    \ owner: A privileged user who controls the conference,\n   creates floors, and\
    \ assigns and deassigns floor chairs.  The\n   conference owner does not have\
    \ to be a member in a conference.\n   Floor chair: A user (or an entity) who manages\
    \ one floor (grants,\n   denies, or revokes a floor).  The floor chair does not\
    \ have to be a\n   member in a conference.\n   Floor control: A mechanism that\
    \ enables applications or users to gain\n   safe and mutually exclusive or non-exclusive\
    \ input access to the\n   shared object or resource.\n   Floor control server:\
    \ A logical entity that maintains the state of\n   the floor(s) including which\
    \ floors exists, who the floor chairs are,\n   who holds a floor, etc.  Requests\
    \ to manipulate a floor are directed\n   at the floor control server.\n   Floor\
    \ request set: A logical data structure holding all requests for\n   a particular\
    \ floor at a given point in time.\n   Floor holder set: A logical data structure\
    \ identifying all\n   participants who currently hold the floor.\n"
- title: 4.  Model
  contents:
  - "4.  Model\n   The model for floor control is composed of three logical entities:\
    \ a\n   single floor control server, one or more floor chairs (moderators),\n\
    \   and any number of regular conference participants.\n   A floor control protocol\
    \ is used to convey the floor control messages\n   among the floor chairs (moderators)\
    \ of the conference, the floor\n   control server, and the participants of the\
    \ conference.  A\n   centralized architecture is assumed in which all messages\
    \ go via one\n   point, the floor control server.  Processing (granting or rejecting)\n\
    \   floor control requests is done by the one or more floor chairs or by\n   the\
    \ server itself, depending on the policy.\n   Floor requests from the participants\
    \ are received by the floor\n   control server and kept (at the level of the floor\
    \ control protocol)\n   in a floor request set (i.e., are not ordered in any particular\n\
    \   fashion).  The current floor holders are reflected in a current floor\n  \
    \ holder set.  Floor chairs are capable of manipulating both sets to\n   grant,\
    \ revoke, reject, and pass the floor (for example).\n   The order in which requests\
    \ are processed, whether they are granted\n   or rejected, and how many participants\
    \ obtain a floor simultaneously\n   are determined by a higher-layer application\
    \ operating on these sets\n   and are not confined by the floor control protocol.\n\
    \   A floor is associated with one or more media sessions.  The\n   centralized\
    \ conference server manages the floors and thus controls\n   access to the media\
    \ sessions.  There are two aspects to this: 1) The\n   server maintains and distributes\
    \ consistent state information about\n   who has a certain floor at a certain\
    \ point in time and does so\n   following some rule set.  This provides all participants\
    \ with the\n   necessary information about who is allowed to speak (for example),\n\
    \   but relies on a cooperative behavior among all participants. 2) In\n   addition,\
    \ to prevent individuals from ignoring the \"hints\" given by\n   the floor control\
    \ server, the latter may (e.g., in cooperation with\n   other functional entities)\
    \ enforce compliance with floor status,\n   e.g., by blocking media streams from\
    \ participants not entitled to\n   speak.  The floor control server controls the\
    \ floors at least at the\n   signaling level.  In addition, actively controlling\
    \ the actual\n   (physical) media resources is highly recommended, but beyond\
    \ the\n   scope of this document.\n   As noted in the introduction, an actual\
    \ protocol specification\n   fulfilling the requirements defined in this memo\
    \ may map the\n   components of the above model onto the conferencing components\n\
    \   defined in the conferencing framework document.  Some of these\n   aspects\
    \ are discussed briefly in the next section.\n"
- title: 5.  Integration with Conferencing
  contents:
  - "5.  Integration with Conferencing\n   Floor control itself does not support privileges\
    \ such as creating\n   floors and appointing floor chairs and handing over chair\
    \ privileges\n   to other users (or taking them away).  Instead, some external\n\
    \   mechanism, such as conference management (e.g., CPCP or web interface\n  \
    \ for policy manipulation) is used for that.\n   The conference policy (and thus\
    \ the conference owner or creator)\n   defines whether floor control is in use\
    \ or not.  Actually enforcing\n   conference media distribution in line with the\
    \ respective media's\n   floor status (e.g., controlling an audio bridge) is beyond\
    \ the scope\n   of this document.  Floor control itself does not define media\n\
    \   enforcement.  It is up to the conference and media policies to define\n  \
    \ which media streams may be used in a conference and which ones are\n   floor\
    \ controlled.\n   Typically, the conference owner creates the floor(s) using the\n\
    \   conference policy control protocol (or some other mechanism) and\n   appoints\
    \ the floor chair.  The conference owner can remove the floor\n   anytime (so\
    \ that a media session is not floor-controlled anymore) or\n   change the floor\
    \ chair or floor parameters.\n   The floor chair just controls the access to the\
    \ floor(s), according\n   to the conference policy.\n   A floor control server\
    \ is a separate logical entity, typically\n   co-located with focus and/or conference\
    \ policy server.  Therefore,\n   the floor control server can interact with the\
    \ focus and conference\n   policy server and media servers as needed.  Communication\
    \ mechanisms\n   between the floor control server and other central conferencing\n\
    \   entities are not within the scope of the floor control protocol\n   requirements\
    \ described in this document.\n   Conferences may be cascaded, and hence a single\
    \ participant in one\n   conference may represent a second conference (called\
    \ subconference).\n   From a floor control perspective, there is no difference\
    \ between a\n   participant (identified by its URI) representing a single person\
    \ or\n   another (set of) subconference(s).\n   Note: In the latter case, it is\
    \ the responsibility of the\n   subconference to negotiate floor requests internally\
    \ before passing\n   on a request to the conference and to assign a floor internally\
    \ upon\n   receiving a floor grant.  This may be done recursively by employing\n\
    \   the floor control protocol with a different floor control server in\n   the\
    \ subconference.\n"
- title: 6.  Assumptions about a Conference Policy
  contents:
  - "6.  Assumptions about a Conference Policy\n   The floor control protocol is supposed\
    \ to be used to manage access to\n   shared resources in the context of a conference.\
    \  It is up to this\n   conference -- more precisely, its conference policy [4]\
    \ -- to define\n   the rules for the operation of the floor control protocol.\n\
    \   Furthermore, a conference policy control protocol [4] may define\n   mechanisms\
    \ that alter those rules during the course of a conference.\n   This section briefly\
    \ outlines the assumptions made by a floor control\n   protocol about the conference\
    \ policy and means for its modification.\n   The conference policy is expected\
    \ to define the rules for floor\n   control, which implies in particular that\
    \ it is not the\n   responsibility of the floor control protocol to establish\
    \ or\n   communicate those rules.\n   In general, it is assumed that the conference\
    \ policy also defines who\n   is allowed to create, change, and remove a floor\
    \ in a conference.\n   Conference participants and floor chairs should be able\
    \ to get and\n   set floor-related parameters.  The conference policy may restrict\
    \ who\n   may access or alter which parameters.  Note that not all parameters\n\
    \   maintained for a floor are also interpreted by the floor control\n   protocol\
    \ (e.g., floor policy descriptions may be stored associated\n   with a floor but\
    \ may be interpreted by a higher-layer application).\n   Note also that changes\
    \ to the floor control policy are outside the\n   scope of the floor control protocol\
    \ and are (for example) to be\n   carried out by a conference policy control protocol.\n\
    \   (For example, it may be useful to see who the floor chair is, what\n   kind\
    \ of policy is in use, time limits, number of simultaneous floor\n   holders,\
    \ and current floor holder.)\n   The following requirements on a conference policy\
    \ related to floor\n   control are identified in [4]:\n   REQ-F1: It MUST be possible\
    \ to define whether floor control is in use\n   or not.\n   REQ-F2: It MUST be\
    \ possible to define the algorithm to be used in\n   granting the floor.  (Note:\
    \ Examples of algorithms are moderator-\n   controlled, FCFS, or random.)\n  \
    \ Note: It must be possible to use an automated floor policy where the\n   floor\
    \ control server decides autonomously about granting and\n   rejecting floor requests\
    \ as well as revoking the floor.  It must also\n   be possible to use a chair-controlled\
    \ floor policy in which the floor\n   control server notifies the floor chair\
    \ and waits for the chair to\n   make a decision.  This enables the chair to fully\
    \ control who has the\n   floor.  The server MAY forward all requests immediately\
    \ to the floor\n   chair, or it may do filtering and send only occasional notifications\n\
    \   to the chair.\n   REQ-F3: It MUST be possible to define how many users can\
    \ have the\n   floor at the same time.\n   REQ-F4: It MUST be possible to have\
    \ one floor for one or more media\n   types.\n   REQ-F5: It MUST be possible to\
    \ have multiple floors in a conference.\n   REQ-F6: It MUST be possible to define\
    \ whether a floor is moderator-\n   controlled or not.\n   REQ-F7: If the floor\
    \ is moderator-controlled, it MUST be possible to\n   assign and replace the floor\
    \ moderator.\n"
- title: 7.  Floor Control Protocol Requirements
  contents:
  - "7.  Floor Control Protocol Requirements\n   This section covers the requirements\
    \ on a floor control protocol.\n   The requirements are grouped as follows: 1)\
    \ floor control protocol\n   between participant and server; 2) floor control\
    \ protocol between\n   floor chairs and server; 3) floor control server management;\
    \ and 4)\n   general protocol requirements.\n"
- title: 7.1.  Communication between Participant and Server
  contents:
  - "7.1.  Communication between Participant and Server\n   REQ-PS-1: Participants\
    \ MUST be able to request (claim) a floor.\n   REQ-PS-2: It SHOULD be possible\
    \ for a participant requesting a floor\n   to give additional information about\
    \ the request, such as the topic\n   of the question for an audio floor.  Note:\
    \ In some scenarios, the\n   floor control server or the floor chair may use this\
    \ information when\n   granting the floor to the user, or when manipulating the\
    \ floor sets\n   at the server.\n   REQ-PS-3: It MUST be possible for a participant\
    \ to modify (e.g.,\n   cancel) a previously placed floor request.\n   REQ-PS-4:\
    \ It SHOULD be possible for a participant to initiate a floor\n   control operation\
    \ (e.g., floor request, release) on behalf of another\n   participant (third-party\
    \ floor control) provided that he is\n   authorized to do so.\n   REQ-PS-5: A\
    \ participant MUST be informed that she has been granted\n   the floor.\n   REQ-PS-6:\
    \ A participant MUST be informed that his floor request has\n   been rejected.\n\
    \   REQ-PS-7: A participant MUST be informed that the floor was revoked\n   from\
    \ her.\n   REQ-PS-8: A participant SHOULD be informed that her floor request is\n\
    \   pending and will be processed later.\n   REQ-PS-9: A floor holder MUST be\
    \ able to release a floor.\n   REQ-PS-10: It MUST be possible to notify conference\
    \ participants of\n   (changes to) the floor holder(s).\n   REQ-PS-11: It MUST\
    \ be possible to notify conference participants when\n   a new floor request is\
    \ being made.\n   REQ-PS-12: It MUST be possible for a floor requester to request\n\
    \   privacy for claiming the floor.\n         anonymous: The participants (including\
    \ the floor chair) cannot\n         see the floor requester's identity.  The floor\
    \ chairs grant the\n         floor based on the claim id and the topic of the\
    \ claim.\n         known to the floor chair: Only the floor chair is able to see\n\
    \         the floor requester's identity; all other participants do not\n    \
    \     obtain this information.\n         public: All the participants can see\
    \ the floor requester's\n         identity.\n   REQ-PS-13: It MUST be possible\
    \ for a participant to request privacy\n   for holding the floor along with a\
    \ floor request.  Note that identity\n   information about the participant may\
    \ become available to others\n   through different means (e.g., application/media\
    \ protocols or the\n   media itself such as the voice).\n"
- title: 7.2.  Communication between Chair and Server
  contents:
  - "7.2.  Communication between Chair and Server\n   REQ-CS-1: It MUST be possible\
    \ to inform the floor chairs, if present,\n   about a participant's floor request.\n\
    \   It SHOULD be possible to convey additional information the\n   participant\
    \ may have provided along with her request.\n   It MUST be possible to hide the\
    \ requesting participant's identity\n   from the chair, i.e., not to include this\
    \ identity information in the\n   floor request.\n   REQ-CS-2: It MUST be possible\
    \ to grant a floor to a participant.\n   REQ-CS-3: It MUST be possible to reject\
    \ a participant's floor\n   request.\n   REQ-CS-4: The floor chair MUST be able\
    \ to revoke a floor from (one\n   of) its current holder(s).  Note that the floor\
    \ chair may also remove\n   pending floor requests from the request set (by rejecting\
    \ them).\n   REQ-CS-5: It MUST be possible to notify floor chairs about changes\
    \ to\n   the floor holder(s).\n   REQ-CS-6: There SHOULD be operations to manipulate\
    \ the request set\n   available for floor chair(s).  Such a request set SHOULD\
    \ at least\n   include creating, maintaining, and re-ordering floor requests in\
    \ a\n   queue and clearing the floor control queue.\n   REQ-CS-7: It MUST be possible\
    \ to hide the identity of a floor chair\n   from a subset or all participants\
    \ of a conference.\n   REQ-CS-8: It MUST be possible for a newly assigned floor\
    \ chair to\n   learn (e.g., inquire) about the existing floor request set.\n"
- title: 7.3.  General Protocol Requirements
  contents:
  - "7.3.  General Protocol Requirements\n   REQ-GEN-1: Bandwidth and terminal limitations\
    \ SHOULD be taken into\n   account in order to ensure that floor control can be\
    \ efficiently used\n   in mobile environments.\n   Note that efficient communication\
    \ by means of minimal-sized messages\n   may contradict the desire to express\
    \ reasons for requesting a floor\n   along with other information.  Therefore,\
    \ a floor control protocol\n   SHOULD be designed in a way that it allows for\
    \ expressive as well as\n   minimal messaging, as a (negotiable) configuration\
    \ option and/or\n   selectable on a per-message basis.\n   REQ-GEN-2: The floor\
    \ control MUST be a reliable client-server\n   protocol.  Hence, it MUST provide\
    \ a positive response indicating that\n   a request has been received or an error\
    \ response if an error has\n   occurred.\n   REQ-GEN-3: It MUST be possible for\
    \ the floor control server to\n   authenticate participants and chairs.\n   REQ-GEN-4:\
    \ It MUST be possible for the participants and chairs to\n   authenticate the\
    \ server.\n   REQ-GEN-5: It MUST be possible to ensure message integrity between\n\
    \   participants and chairs and the floor control server.\n   REQ-GEN-6: It MUST\
    \ be possible to ensure the privacy of messages\n   exchanged between participants\
    \ and chairs and the floor control\n   server.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   Floor control messages are exchanged on one hand\
    \ between regular\n   participants and the floor control server and on the other\
    \ hand\n   between the floor control server and the floor chair(s).\n   If enabled,\
    \ floor control mechanisms are used to control who may\n   contribute to a conference\
    \ in arbitrary ways (speak, be seen, write,\n   etc., as supported by the conferencing\
    \ applications).  It is\n   important that floor control messages be protected\
    \ because otherwise\n   an attacker could prevent participants from being \"heard\"\
    \ in the\n   conference (e.g., in scenarios where silence is considered consent)\n\
    \   or make participants be heard in a conference without their knowledge\n  \
    \ (e.g., eavesdropping on the participant's microphone).  Such\n   considerations\
    \ are particularly relevant when floor control is used\n   in conjunction with\
    \ one or more (central) entities (e.g., a media\n   mixer) controlled by the floor\
    \ control server to enforce floor\n   control decisions that may allow an attacker\
    \ to \"mute\" a participant\n   completely.\n   Communications between a conference\
    \ participant and the floor control\n   server are vulnerable to all kinds of\
    \ masquerading attacks.  If an\n   attacker can spoof the identity of the participant\
    \ or inject messages\n   on his behalf, it may generate floor requests (e.g.,\
    \ floor release)\n   and prevent proper participation of the participant.  If\
    \ an attacker\n   can inject messages to the participant, it may generate arbitrary\n\
    \   responses and false status information.  If an attacker can\n   impersonate\
    \ the floor control server, a participant's requests may\n   never reach the actual\
    \ floor control server.  If an attacker can\n   intercept either side's messages\
    \ (and hence become a man in the\n   middle (MITM)), it may suppress, alter, or\
    \ inject messages and thus\n   manipulate a participant's view of the conference\
    \ floor status as\n   well as the floor control server's view of a participant.\n\
    \   Similar considerations apply to the communications between the floor\n   control\
    \ server and the floor chair(s).  If an attacker can intercept\n   messages from\
    \ either side, it may defer or prevent responses to floor\n   control requests\
    \ (from a particular floor chair).  If it can inject\n   messages (particularly\
    \ in the direction from the floor chair to the\n   floor control server), it may\
    \ steer the assignment of conference\n   floors.  If interception and injection\
    \ is possible (man-in-the-middle\n   scenario), an attacker can create an arbitrary\
    \ image of the\n   conference for the floor chair.  If an attacker can impersonate\
    \ a\n   floor chair, it may rule the conference floor assignment (if there is\n\
    \   only a single chair) or disrupt the conference course by means of\n   arbitrary\
    \ and potentially conflicting requests/responses/assignments\n   (if there are\
    \ multiple floor chairs).  In the latter case, the amount\n   of damage a single\
    \ attacker can do depends on the floor control\n   policy.\n   Finally, attackers\
    \ may eavesdrop on the floor control communications\n   and learn which participants\
    \ are present, how active they are, who\n   are the floor chairs, etc.\n   To\
    \ mitigate the above threats, conference participants, floor control\n   servers,\
    \ and floor chairs SHOULD be authenticated upon initial\n   contact.  All floor\
    \ control messages SHOULD be authenticated and\n   integrity-protected to prevent\
    \ third-party intervention and MITM\n   attacks.  Floor control messages SHOULD\
    \ be encrypted to prevent\n   eavesdropping.\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   The authors would like to thank IETF conferencing design\
    \ team and\n   Keith Drage, Marcus Brunner, Sanjoy Sen, Eric Burger, Brian Rosen,\n\
    \   and Nermeen Ismail for their feedback.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [1]  Bradner, S., \"Key words for use in RFCs\
    \ to Indicate Requirement\n        Levels\", RFC 2119, BCD 14, March 1997.\n \
    \  [2]  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston, A.,\n       \
    \ Peterson, J., Sparks, R., Handley, M., and E. Schooler, \"SIP:\n        Session\
    \ Initiation Protocol\", RFC 3261, June 2002.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [3]  Rosenberg, J., \"A Framework for Conferencing\
    \ with the Session\n        Initiation Protocol (SIP)\", RFC 4353, February 2006.\n\
    \   [4]  Koskelainen, P. and H. Khartabil, \"Additional Requirements to\n    \
    \    Conferencing\", Work in Progress, August 2004.\n   [5]  Koskelainen, P.,\
    \ Schulzrinne, H., and X. Wu, \"A SIP-based\n        conference control framework\"\
    , NOSSDAV 2002, Miami Beach,\n        May 2002.\n   [6]  Dommel, H. and J. Garcia-Luna-Aceves,\
    \ \"Floor control for\n        activity coordination in networked multimedia applications\"\
    ,\n        Proc. of 2nd Asian-pacific Conference on Communications APPC,\n   \
    \     Osaka Japan, June 1995.\n   [7]  Koskelainen, P., Khartabil, H., and A.\
    \ Niemi, \"The Conference\n        Policy Control Protocol (CPCP)\", Work in Progress,\
    \ October 2004.\n   [8]  Borman, C., Kutscher, D., Ott, J., and D. Trossen, \"\
    Simple\n        conference control protocol service specification\", Work in\n\
    \        Progress, March 2001.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Petri Koskelainen\n   Nokia\n   102 Corporate Park Drive\n\
    \   White Plains, NY 10604\n   USA\n   EMail: petri.koskelainen@nokia.com\n  \
    \ Joerg Ott\n   Helsinki University of Technology\n   Networking Laboratory\n\
    \   Otakaari 5A\n   02150 Espoo\n   Finland\n   EMail: jo@netlab.hut.fi\n   Henning\
    \ Schulzrinne\n   Columbia University\n   1214 Amsterdam Avenue\n   New York \
    \ 10027\n   USA\n   EMail: hgs@cs.columbia.edu\n   Xiaotao Wu\n   Columbia University\n\
    \   1214 Amsterdam Avenue\n   New York  10027\n   USA\n   EMail: xiaotaow@cs.columbia.edu\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
