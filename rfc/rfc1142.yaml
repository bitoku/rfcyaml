- title: __initial_text__
  contents:
  - "\t        OSI IS-IS Intra-domain Routing Protocol\nStatus of this Memo\n   This\
    \ RFC is a republication of ISO DP 10589 as a service to the\n   Internet community.\
    \  This is not an Internet standard.\n   Distribution of this memo is unlimited.\n\
    NOTE:  This is a bad ASCII version of this document.  The official\ndocument is\
    \ the PostScript file, which has the diagrams in place.\nPlease use the PostScript\
    \ version of this memo.\nISO/IEC DIS 10589\nInformation technology Telecommunications\
    \ and information exchange\nbetween systems Interme diate system to Intermediate\
    \ system\nIntra-Domain routeing exchange protocol for use in Conjunction with\n\
    the Protocol for providing the Connectionless- mode Network Service\n(ISO 8473)\
    \ Technologies de l'information Communication de donnies et\nichange d'information\
    \ entre systhmes Protocole intra-domain de routage\nd'un systhme intermediare\
    \ ` un systhme intermediare ` utiliser\nconjointement avec le protocole fournissant\
    \ le service de riseau en\nmode sans connexion (ISO 8473) UDC 00000.000 : 000.0000000000\n\
    Descriptors:\nContents\n\tIntroduction\t\tiv\n\t1 \tScope and Field of Application\t\
    1\n\t2 \tReferences\t1\n\t3 \tDefinitions\t2\n\t4 \tSymbols and Abbreviations\
    \ \t3\n\t5 \tTypographical Conventions\t4\n\t6 \tOverview of the Protocol\t4\n\
    \t7 \tSubnetwork Independent Functions\t9\n\t8 \tSubnetwork Dependent Functions\t\
    35\n\t9 \tStructure and Encoding of PDUs\t47\n\t10 \tSystem Environment\t65\n\t\
    11 \tSystem Management \t67\n\t12 \tConformance\t95\n\tAnnex A \tPICS Proforma\t\
    99\n\tAnnex B \tSupporting Technical Material\t105\n\tAnnex C \tImplementation\
    \ Guidelines and Examples\t109\n\tAnnex D \tCongestion Control and Avoidance\t\
    115\nIntroduction\nThis Protocol is one of a set of International Standards produced\
    \ to\nfacilitate the interconnection of open systems. The set of standards\ncovers\
    \ the services and protocols re quired to achieve such\ninterconnection.  This\
    \ Protocol is positioned with respect to other\nrelated standards by the layers\
    \ defined in the ISO 7498 and by the\nstructure defined in the ISO 8648. In particular,\
    \ it is a protocol of\nthe Network Layer. This protocol permits Intermediate Systems\
    \ within a\nrouteing Domain to exchange configuration and routeing information\
    \ to\nfacilitate the operation of the route ing and relaying functions of\nthe\
    \ Network Layer.  The protocol is designed to operate in close\nconjunction with\
    \ ISO 9542 and ISO 8473.  ISO 9542 is used to establish\nconnectivity and reachability\
    \ between End Systems and Inter mediate\nSystems on individual Subnetworks. Data\
    \ is carried by ISO 8473.  The\nrelated algo rithms for route calculation and\
    \ maintenance are also\ndescribed.  The intra-domain ISIS routeing protocol is\
    \ intended to\nsupport large routeing domains consisting of combinations of many\n\
    types of subnetworks. This includes point-to-point links, multipoint\nlinks, X.25\
    \ subnetworks, and broadcast subnetworks such as ISO 8802\nLANs.  In order to\
    \ support large routeing domains, provision is made\nfor Intra-domain routeing\
    \ to be organised hierarchically. A large\ndomain may be administratively divided\
    \ into areas.  Each system\nresides in exactly one area. Routeing within an area\
    \ is referred to as\nLevel 1 routeing. Routeing between areas is referred to as\
    \ Level 2\nrouteing.  Level 2 Intermediate systems keep track of the paths to\n\
    destination areas. Level 1 Intermediate systems keep track of the\nrouteing within\
    \ their own area. For an NPDU destined to another area,\na Level 1 Intermediate\
    \ system sends the NPDU to the nearest level 2 IS\nin its own area, re gardless\
    \ of what the destination area is. Then the\nNPDU travels via level 2 routeing\
    \ to the destination area, where it\nagain travels via level 1 routeing to the\
    \ destination End System.\nInformation technology\nTelecommunications and information\
    \ exchange between systems\nIntermediate system to Intermediate system Intra-Domain\
    \ routeing\nexchange protocol for use in Conjunction with the Protocol for\nproviding\
    \ the Connectionless-mode Network Service (ISO 8473)\n1 Scope and Field of Application\n\
    This International Standard specifies a protocol which is used by\nNetwork Layer\
    \ entities operating ISO 8473 in In termediate Systems to\nmaintain routeing information\
    \ for the purpose of routeing within a\nsingle routeing domain. The protocol herein\
    \ described relies upon the\nprovision of a connectionless-mode underlying service.11See\
    \ ISO 8473\nand its Addendum 3 for the mechanisms necessary to realise this\n\
    service on subnetworks based on ISO 8208, ISO 8802, and the OSI Data\nLink Service.\n\
    This Standard specifies: \na)procedures for the transmission of configuration\
    \ and \nrouteing information between network entities resid\ning in Intermediate\
    \ Systems within a single routeing \ndomain; \nb)the encoding of the protocol\
    \ data units used for the \ntransmission of the configuration and routeing infor\n\
    mation; \nc)procedures for the correct interpretation of protocol \ncontrol information;\
    \ and \nd)the functional requirements for implementations \nclaiming conformance\
    \ to this Standard.\nThe procedures are defined in terms of: \na)the interactions\
    \ between Intermediate system Network \nentities through the exchange of protocol\
    \ data units; \nand \nb)the interactions between a Network entity and an un\n\
    derlying service provider through the exchange of \nsubnetwork service primitives.\n\
    c)the constraints on route determination which must be \nobserved by each Intermediate\
    \ system when each has \na routeing information base which is consistent with\
    \ \nthe others.\n2 References\n2.1  Normative References\nThe following standards\
    \ contain provisions which, through reference in\nthis text, constitute provisions\
    \ of this Interna tional Standard.  At\nthe time of publication, the editions\
    \ in dicated were valid. All\nstandards are subject to revision, and parties to\
    \ agreements based on\nthis International Stan dard are encouraged to investigate\
    \ the\npossibility of apply ing the most recent editions of the standards\nlisted\
    \ below.  Members of IEC and ISO maintain registers of currently\nvalid International\
    \ Standards.  ISO 7498:1984, Information processing\nsystems Open Systems Interconnection\
    \ Basic Reference Model.  ISO\n7498/Add.1:1984, Information processing systems\
    \ Open Systems\nInterconnection Basic Reference Model Addendum 1: Connectionless-mode\n\
    Transmission.  ISO 7498-3:1989, Information processing systems Open\nSystems Interconnection\
    \ Basic Reference Model Part 3: Naming and\nAddressing.  ISO 7498-4:1989, Information\
    \ processing systems Open\nSystems Interconnection Basic Reference Model Part\
    \ 4: Management\nFramework.  ISO 8348:1987, Information processing systems Data\n\
    communications Network Service Definition.  ISO 8348/Add.1:1987,\nInformation\
    \ processing systems Data communications Network Service\nDefinition Addendum\
    \ 1: Connectionless-mode transmission.  ISO\n8348/Add.2:1988, Information processing\
    \ systems Data communications\nNetwork Service Definition Addendum 2: Network\
    \ layer addressing.  ISO\n8473:1988, Information processing systems Data communications\
    \ Protocol\nfor providing the connectionless-mode network service.  ISO\n8473/Add.3:1989,\
    \ Information processing systems Telecommunications and\ninformation exchange\
    \ between\nsystems  Protocol for providing the connectionless-\nmode network service\
    \  Addendum 3: Provision of the \nunderlying service assumed by ISO 8473 over\
    \ \nsubnetworks which provide the OSI data link service.\nISO 8648:1988,  Information\
    \ processing systems  Open \nSystems Interconnection  Internal organisation of\
    \ the \nNetwork Layer.\nISO 9542:1988, Information processing systems  Tele\n\
    communications and information exchange between sys\ntems  End system to Intermediate\
    \ system Routeing ex\nchange protocol for use in conjunction with the protocol\
    \ \nfor providing the connectionless -mode network service \n(ISO 8473).\nISO\
    \ 8208:1984, Information processing systems  Data \ncommunications  X.25 packet\
    \ level protocol for Data \nterminal equipment\nISO 8802:1988, Information processing\
    \ systems  Tele\ncommunications and information exchange between sys\ntems  Local\
    \ area networks.\nISO/TR 9575:1989, Information technology   Telecom\nmunications\
    \ and information exchange between systems \n OSI Routeing Framework.\nISO/TR\
    \ 9577:1990, Information technology   Telecom\nmunications and information exchange\
    \ between systems \n Protocol Identification in the Network Layer.\nISO/IEC DIS\
    \ 10165-4:, Information technology  Open \nsystems interconnection  Management\
    \ Information Serv\nices  Structure of Management Information Part 4: \nGuidelines\
    \ for the Definition of Managed Objects.\nISO/IEC 10039:1990, IPS-T&IEBS  MAC\
    \ Service Defini\ntion.\n2.2 Other References\nThe following references are helpful\
    \ in describing some of \nthe routeing algorithms: \nMcQuillan, J. et. al., The\
    \ New Routeing Algorithm for the \nARPANET, IEEE Transactions on Communications,\
    \ May \n1980.\nPerlman, Radia, Fault-Tolerant Broadcast of Routeing In\nformation,\
    \ Computer Networks, Dec. 1983. Also in IEEE \nINFOCOM 83, April 1983.\nAho, Hopcroft,\
    \ and Ullman, Data Structures and Algo\nrithms, P204208  Dijkstra algorithm.\n\
    3 Definitions\n3.1 Reference Model definitions\nThis International Standard  makes\
    \ use of the following \nterms defined in ISO 7498:\na)Network Layer\nb)Network\
    \ Service access point\nc)Network Service access point address\nd)Network entity\n\
    e)Routeing\nf)Network protocol\ng)Network relay\nh)Network protocol data unit\n\
    3.2 Network Layer architecture \ndefinitions\nThis International Standard makes\
    \ use of the following \nterms defined in ISO 8648:\na)Subnetwork\nb)End system\n\
    c)Intermediate system\nd)Subnetwork service\ne)Subnetwork Access Protocol \nf)Subnetwork\
    \ Dependent Convergence Protocol \ng)Subnetwork Independent Convergence Protocol\n\
    3.3 Network Layer addressing \ndefinitions\nThis International Standard makes\
    \ use of the following \nterms defined in ISO 8348/Add.2:\na)Subnetwork address\n\
    b)Subnetwork point of attachment\nc)Network Entity Title\n3.4 Local Area Network\
    \ Definitions\n This International Standard makes use of the following \nterms\
    \ defined in ISO 8802: \na)Multi-destination address \nb)Media access control\n\
    c)Broadcast medium\n3.5 Routeing Framework Definitions\n This document makes use\
    \ of the following terms defined in \nISO/TR 9575: \na)Administrative Domain \n\
    b)Routeing Domain \nc)Hop \nd)Black hole \n3.6 Additional Definitions\nFor the\
    \ purposes of this International Standard, the follow\ning definitions apply:\
    \ \n3.6.1   \nArea: A routeing subdomain which maintains de\ntailed routeing information\
    \ about its own internal \ncomposition, and also maintains routeing informa\n\
    tion which allows it to reach other routeing subdo\nmains. It corresponds to the\
    \ Level 1 subdomain. \n3.6.2   \nNeighbour: An adjacent system reachable by tra\n\
    versal of a single subnetwork by a PDU. \n3.6.3   \nAdjacency: A portion of the\
    \ local routeing infor\nmation which pertains to the reachability of a sin\ngle\
    \ neighbour ES or IS over a single circuit.\nAdjacencies are used as input to\
    \ the Decision Proc\ness for forming paths through the routeing domain.\nA separate\
    \ adjacency is created for each neighbour \non a circuit, and for each level of\
    \ routeing (i.e. \nlevel 1 and level 2) on a broadcast circuit.\n3.6.4   \nCircuit:\
    \ The subset of the local routeing informa\ntion base pertinent to a single local\
    \ SNPA. \n3.6.5   \nLink: The communication path between two \nneighbours. \n\
    A Link is up when communication is possible \nbetween the two SNPAs.\n3.6.6  \
    \ \nDesignated IS: The Intermediate system on a \nLAN which is designated to perform\
    \ additional du\nties. In particular it generates Link State PDUs on \nbehalf\
    \ of the LAN, treating the LAN as a \npseudonode. \n3.6.7   \nPseudonode: Where\
    \ a broadcast subnetwork has n \nconnected Intermediate systems, the broadcast\
    \ \nsubnetwork itself is considered to be a \npseudonode. \nThe pseudonode has\
    \ links to each of the n Interme\ndiate systems and each of the ISs has a single\
    \ link \nto the pseudonode (rather than n-1 links to each of \nthe other Intermediate\
    \ systems). Link State PDUs \nare generated on behalf of the pseudonode by the\
    \ \nDesignated IS. This is depicted below in figure 1.\n3.6.8   \nBroadcast subnetwork:\
    \ A subnetwork which sup\nports an arbitrary number of End systems and In\ntermediate\
    \ systems and additionally is capable of \ntransmitting a single SNPDU to a subset\
    \ of these \nsystems in response to a single SN_UNITDATA \nrequest.  \n3.6.9 \
    \  \nGeneral topology subnetwork: A subnetwork \nwhich supports an arbitrary number\
    \ of End sys\n3.6.10   \nRouteing Subdomain: a set of Intermediate sys\ntems and\
    \ End systems located within the same \nRouteing domain.\n3.6.11   \nLevel 2 Subdomain:\
    \ the set of all Level 2 Inter\nmediate systems in a Routeing domain.\n4 Symbols\
    \ and Abbreviations \n4.1 Data Units\nPDU\tProtocol Data Unit\nSNSDU\tSubnetwork\
    \ Service Data Unit\nNSDU\tNetwork Service Data Unit\nNPDU\tNetwork Protocol Data\
    \ Unit\nSNPDU\tSubnetwork Protocol Data Unit\n4.2 Protocol Data Units\nESH PDU\t\
    ISO 9542 End System Hello Protocol Data \nUnit \nISH PDU\tISO 9542 Intermediate\
    \ System Hello Protocol \nData Unit\nRD PDU\tISO 9542 Redirect Protocol Data Unit\n\
    IIH\tIntermediate system to Intermediate system \nHello Protocol Data Unit\nLSP\t\
    Link State Protocol Data Unit \nSNP\tSequence Numbers Protocol Data Unit\nCSNP\t\
    Complete Sequence Numbers Protocol Data \nUnit\nPSNP\tPartial Sequence Numbers\
    \ Protocol Data Unit\n4.3 Addresses\nAFI\tAuthority and Format Indicator\nDSP\t\
    Domain Specific Part\nIDI\tInitial Domain Identifier\nIDP\tInitial Domain Part\n\
    NET\tNetwork Entity Title\nNSAP\tNetwork Service Access Point\nSNPA\tSubnetwork\
    \ Point of Attachment\n4.4 Miscellaneous\nDA\tDynamically Assigned\nDED\tDynamically\
    \ Established Data link\nDTE\tData Terminal Equipment\nES\tEnd System\nIS\tIntermediate\
    \ System\nL1\tLevel 1\nL2\tLevel 2\nLAN\tLocal Area Network\nMAC\tMedia Access\
    \ Control\nNLPID\tNetwork Layer Protocol Identifier\nPCI\tProtocol Control Information\n\
    QoS\tQuality of Service\nSN\tSubnetwork\nSNAcP\tSubnetwork Access Protocol\nSNDCP\t\
    Subnetwork Dependent Convergence Protocol\nSNICP\tSubnetwork Independent Convergence\
    \ Proto\ncol\nSRM\tSend Routeing Message\nSSN\tSend Sequence Numbers Message\n\
    SVC\tSwitched Virtual Circuit\n5 Typographical Conventions\nThis International\
    \ Standard makes use of the following ty\npographical conventions:\na)Important\
    \ terms and concepts appear in italic type \nwhen introduced for the first time;\n\
    b)Protocol constants and management parameters appear \nin sansSerif type with\
    \ multiple words run together. \nThe first word is lower case, with the first\
    \ character of \nsubsequent words capitalised;\nc)Protocol field names appear\
    \ in San Serif type with \neach word capitalised.\nd)Values of constants, parameters,\
    \ and protocol fields \nappear enclosed in double quotes.\n6 Overview of the Protocol\n\
    6.1 System Types\nThere are the following types of system:\nEnd Systems: These\
    \ systems deliver NPDUs to other sys\ntems and receive NPDUs from other systems,\
    \ but do \nnot relay NPDUs. This International Standard does \nnot specify any\
    \ additional End system functions be\nyond those supplied by ISO 8473 and ISO\
    \ 9542.\nLevel 1 Intermediate Systems: These systems deliver and \nreceive NPDUs\
    \ from other systems, and relay \nNPDUs from other source systems to other destina\n\
    tion systems. They route directly to systems within \ntheir own area, and route\
    \ towards a level 2 Interme\ndiate system when the destination system is in a\
    \ dif\nferent area.\nLevel 2 Intermediate Systems: These systems act as Level\
    \ 1 \nIntermediate systems in addition to acting as a sys\ntem in the subdomain\
    \ consisting of level 2 ISs. Sys\ntems in the level 2 subdomain route towards\
    \ a desti\nnation area, or another routeing domain.\n6.2 Subnetwork Types\nThere\
    \ are two generic types of subnetworks supported.\na)broadcast subnetworks: These\
    \ are multi-access \nsubnetworks that support the capability of addressing \n\
    a group of attached systems with a single NPDU, for \ninstance ISO 8802.3 LANs.\n\
    b)general topology subnetworks: These are modelled as \na set of point-to-point\
    \ links each of which connects \nexactly two systems.\nThere are several generic\
    \ types of general topology \nsubnetworks:\n1)multipoint links: These are links\
    \ between more \nthan two  systems, where one system is a primary  \nsystem, and\
    \ the remaining systems are secondary \n(or slave) systems. The primary is capable\
    \ of direct \ncommunication with any of the secondaries, but \nthe secondaries\
    \ cannot communicate directly \namong themselves. \n2)permanent point-to-point\
    \ links: These are links \nthat stay connected at all times (unless broken, or\
    \ \nturned off by system management), for instance \nleased lines or private links.\n\
    3)dynamically established data links (DEDs): these \nare links over connection\
    \ oriented facilities, for in\nstance X.25, X.21, ISDN, or PSTN networks.\nDynamically\
    \ established data links can be used in one \nof two ways:\ni)static point-to-point\
    \ (Static): The call is estab\nlished upon system management action and \ncleared\
    \ only on system management action (or \nfailure).\nii)dynamically assigned (DA):\
    \ The call is estab\nlished upon receipt of traffic, and brought \ndown on timer\
    \ expiration when idle. The ad\ndress to which the call is to be established is\
    \  \ndetermined dynamically from information in \nthe arriving NPDU(s). No ISIS\
    \ routeing \nPDUs are exchanged between ISs on a DA cir\ncuit.\nAll subnetwork\
    \ types are treated by the Subnetwork Inde\npendent functions as though they were\
    \ connectionless \nsubnetworks, using the Subnetwork Dependent Conver\ngence functions\
    \ of ISO 8473 where necessary to provide a \nconnectionless subnetwork service.\
    \ The  Subnetwork De\npendent functions do, however, operate differently on \n\
    connectionless and connection-oriented subnetworks.\n6.3 Topologies\nA single\
    \ organisation may wish to divide its Administrative \nDomain into a number of\
    \ separate Routeing Domains. \nThis has certain advantages, as described in ISO/TR\
    \ 9575. \nFurthermore, it is desirable for an intra-domain routeing \nprotocol\
    \ to aid in the operation of an inter-domain routeing \nprotocol, where such a\
    \ protocol exists for interconnecting \nmultiple administrative domains.\nIn order\
    \ to facilitate the construction of such multi-domain \ntopologies, provision\
    \ is made for the entering of static \ninter-domain routeing information. This\
    \ information is pro\nvided by a set of Reachable Address Prefixes entered by\
    \ \nSystem Management at the ISs which have links which \ncross routeing domain\
    \ boundaries. The prefix indicates that \nany NSAPs whose NSAP address matches\
    \ the prefix may \nbe reachable via  the SNPA with which the prefix is associ\n\
    ated. Where the subnetwork to which this SNPA is con\nnected is a general topology\
    \ subnetwork supporting dy\nnamically established data links, the prefix also\
    \ has associ\nated with it the required subnetwork addressing \ninformation, or\
    \ an indication that it may be derived from \nthe destination NSAP address (for\
    \ example, an X.121 DTE \naddress may sometimes be obtained from the IDI of the\
    \ \nNSAP address).\nThe Address Prefixes are handled by the level 2 routeing al\n\
    gorithm in the same way as information about a level 1 area \nwithin the domain.\
    \ NPDUs with a destination address \nmatching any of the prefixes present on any\
    \ Level 2 Inter\nmediate System within the domain can therefore be relayed \n\
    (using level 2 routeing) by that IS and delivered out of the \ndomain. (It is\
    \ assumed that the routeing functions of the \nother domain will then be able\
    \ to deliver the NPDU to its \ndestination.) \n6.4 Addresses\nWithin a routeing\
    \ domain that conforms to this standard, \nthe Network entity titles of Intermediate\
    \ systems shall be \nstructured as described in 7.1.1.\nAll systems shall be able\
    \ to generate and forward data \nPDUs containing NSAP addresses in any of the\
    \ formats \nspecified by ISO 8348/Add.2. However,  NSAP addresses \nof End systems\
    \ should be structured as described in 7.1.1 in \norder to take full advantage\
    \ of ISIS routeing. Within such \na domain it is still possible for some End Systems\
    \ to have \naddresses assigned which do not conform to 7.1.1, provided \nthey\
    \ meet the more general requirements of \nISO 8348/Add.2, but they may require\
    \ additional configura\ntion and be subject to inferior routeing performance.\n\
    6.5  Functional Organisation\nThe intra-domain ISIS routeing functions are divided\
    \ into \ntwo groups\n-Subnetwork Independent Functions \n-Subnetwork Dependent\
    \ Functions\n6.5.1 Subnetwork Independent Functions\nThe Subnetwork Independent\
    \ Functions supply full-duplex \nNPDU transmission between any pair of neighbour\
    \ sys\ntems. They are independent of the specific subnetwork or \ndata link service\
    \ operating below them, except for recognis\ning two generic types of subnetworks:\
    \ \n-General Topology Subnetworks, which include \nHDLC point-to-point, HDLC multipoint,\
    \ and dynami\ncally established data links (such as X.25, X.21, and \nPSTN links),\
    \ and  \n-Broadcast Subnetworks, which include ISO 8802 \nLANs.\nThe following\
    \ Subnetwork Independent Functions are iden\ntified\n-Routeing. The routeing function\
    \ determines NPDU \npaths. A path is the sequence of connected systems \nand links\
    \ between a source ES and a destination ES.\nThe combined knowledge of all the\
    \ Network Layer \nentities of all the Intermediate systems within a route\ning\
    \ domain is used to ascertain the existence of a path, \nand route the NPDU to\
    \ its destination. The routeing \ncomponent at an Intermediate system has the\
    \ follow\ning specific functions:\n7It extracts and interprets the routeing PCI\
    \ in an \nNPDU. \n7It performs NPDU forwarding based on the desti\nnation address.\
    \ \n7It manages the characteristics of the path. If a sys\ntem or link fails on\
    \ a path, it finds an alternate \nroute.  \n7It interfaces with the subnetwork\
    \ dependent func\ntions to receive reports concerning an SNPA \nwhich has become\
    \ unavailable, a system that has \nfailed, or the subsequent recovery of an SNPA\
    \ or \nsystem.  \n7It informs the ISO 8473 error reporting function \nwhen the\
    \ forwarding function cannot relay an \nNPDU, for instance when the destination\
    \ is un\nreachable or when the NPDU would have needed \nto be segmented and the\
    \ NPDU requested no seg\nmentation.\n-Congestion control. Congestion control manages\
    \ the \nresources used at each Intermediate system. \n6.5.2 Subnetwork Dependent\
    \ Functions \nThe subnetwork dependent functions mask the characteris\ntics of\
    \ the subnetwork or data link service from the \nsubnetwork independent functions.\
    \ These include:\n-Operation of the Intermediate system functions of \nISO 9542\
    \ on the particular subnetwork, in order to\n7Determine neighbour Network entity\
    \ title(s) and \nSNPA address(es) \n7Determine the SNPA address(s) of operational\
    \ In\ntermediate systems \n-Operation of the requisite Subnetwork Dependent \n\
    Convergence Function as defined in ISO 8473 and its \nAddendum 3, in order to\
    \ perform \n7Data link initialisation \n7Hop by hop fragmentation over subnetworks\
    \ with \nsmall maximum SNSDU sizes \n7Call establishment and clearing on dynamically\
    \ es\ntablished data links\n6.6 Design Goals\nThis International Standard supports\
    \ the following design \nrequirements. The correspondence with the goals for OSI\
    \ \nrouteing stated in ISO/TR 9575 are noted.\n-Network Layer Protocol Compatibility.\
    \ It is com\npatible with ISO 8473 and ISO 9542. (See clause 7.5 \nof ISO/TR 9575),\n\
    -Simple End systems: It requires no changes to end \nsystems, nor any functions\
    \ beyond those supplied by \nISO 8473 and ISO 9542. (See clause 7.2.1 of ISO/TR\
    \ \n9575),\n-Multiple Organisations: It allows for multiple route\ning and administrative\
    \ domains through the provision \nof static routeing information at domain boundaries.\
    \ \n(See clause 7.3 of ISO/TR 9575),\n-Deliverability It accepts and delivers\
    \ NPDUs ad\ndressed to reachable destinations and rejects NPDUs \naddressed to\
    \ destinations known to be unreachable. \n-Adaptability. It adapts to topological\
    \ changes within \nthe routeing domain, but not to traffic changes, except \n\
    potentially as indicated by local queue lengths. It \nsplits traffic load on multiple\
    \ equivalent paths. (See \nclause 7.7 of ISO/TR 9575),\n-Promptness. The period\
    \ of adaptation to topological \nchanges in the domain is a reasonable function\
    \ of the \ndomain diameter (that is, the maximum logical dis\ntance between End\
    \ Systems within the domain) and \nData link speeds. (See clause 7.4 of ISO/TR\
    \ 9575),\n-Efficiency. It is both processing and memory effi\ncient. It does not\
    \ create excessive routeing traffic \noverhead. (See clause 7.4 of ISO/TR 9575),\n\
    -Robustness. It recovers from transient errors such as \nlost or temporarily incorrect\
    \ routeing PDUs. It toler\nates imprecise parameter settings. (See clause 7.7\
    \ of \nISO/TR 9575),\n-Stability. It stabilises in finite time to good routes,\
    \ \nprovided no continuous topological changes or con\ntinuous data base corruptions\
    \ occur. \n-System Management control. System Management \ncan control many routeing\
    \ functions via parameter \nchanges, and inspect parameters, counters, and routes.\
    \ \nIt will not, however, depend on system management \naction for correct behaviour.\
    \ \n-Simplicity. It is sufficiently simple to permit perform\nance tuning and\
    \ failure isolation. \n-Maintainability. It provides mechanisms to detect, \n\
    isolate, and repair most common errors that may affect \nthe routeing computation\
    \ and data bases. (See clause \n7.8 of ISO/TR 9575),\n-Heterogeneity. It operates\
    \ over a mixture of network \nand system types, communication technologies, and\
    \ \ntopologies. It is capable of running over a wide variety \nof subnetworks,\
    \ including, but not limited to: ISO \n8802 LANs, ISO 8208 and X.25 subnetworks,\
    \ PSTN \nnetworks, and the OSI Data Link Service. (See clause \n7.1 of ISO/TR\
    \ 9575),\n-Extensibility. It accommodates increased routeing \nfunctions, leaving\
    \ earlier functions as a subset. \n-Evolution. It allows orderly transition from\
    \ algorithm \nto algorithm without shutting down an entire domain.\n-Deadlock\
    \ Prevention. The congestion control compo\nnent prevents buffer deadlock.\n-Very\
    \ Large Domains. With hierarchical routeing, and \na very large address space,\
    \ domains of essentially un\nlimited size can be supported. (See clause 7.2 of\
    \ \nISO/TR 9575),\n-Area Partition Repair. It permits the utilisation of \nlevel\
    \ 2 paths to repair areas which become partitioned \ndue to failing level 1 links\
    \ or ISs. (See clause 7.7 of \nISO/TR 9575),\n-Determinism. Routes are a function\
    \ only of the physi\ncal topology, and not of history. In other words, the \n\
    same topology will always converge to the same set of \nroutes. \n-Protection\
    \ from Mis-delivery. The probability of  \nmis-delivering a NPDU, i.e. delivering\
    \ it to a Trans\nport entity in the wrong End System, is extremely low. \n-Availability.\
    \ For domain topologies with cut set \ngreater than one, no single point of failure\
    \ will parti\ntion the domain. (See clause 7.7 of ISO/TR 9575),\n-Service Classes.\
    \ The service classes of transit delay, \nexpense22Expense is referred to as cost\
    \ in ISO 8473. The latter term is\nnot used here because of possible confusion\
    \ with the more general usage\nof the term to \nindicate path cost according to\
    \ any routeing metric.\n, and residual error probability of ISO 8473 \nare supported\
    \ through the optional inclusion of multi\nple routeing metrics.\n-Authentication.\
    \ The protocol is capable of carrying \ninformation to be used for the authentication\
    \ of Inter\nmediate systems in order to increase the security and \nrobustness\
    \ of a routeing domain. The specific mecha\nnism supported in this International\
    \ Standard how\never, only supports a weak form of authentication us\ning passwords,\
    \ and thus is useful only for protection \nagainst accidental misconfiguration\
    \ errors and does \nnot protect against any serious security threat. In the \n\
    future, the algorithms may be enhanced to provide \nstronger forms of authentication\
    \ than can be provided \nwith passwords without needing to change the PDU \nencoding\
    \ or the protocol exchange machinery.\n6.6.1 Non-Goals\nThe following are not\
    \ within the design scope of the intra-\ndomain ISIS routeing protocol described\
    \ in this Interna\ntional Standard:\n-Traffic adaptation. It does not automatically\
    \ modify \nroutes based on global traffic load.\n-Source-destination routeing.\
    \ It does not determine \nroutes by source as well as destination.\n-Guaranteed\
    \ delivery. It  does not guarantee delivery \nof all offered NPDUs. \n-Level 2\
    \ Subdomain Partition Repair. It will not util\nise Level 1 paths to repair a\
    \ level 2 subdomain parti\ntion. For full logical connectivity to be available,\
    \ a \nconnected level 2 subdomain is required.\n-Equal treatment for all ES Implementations.\
    \ The \nEnd system poll function defined in 8.4.5 presumes \nthat End systems\
    \ have implemented the Suggested ES \nConfiguration Timer option of ISO 9542.\
    \ An End sys\ntem which does not implement this option may experi\nence a temporary\
    \ loss of connectivity following cer\ntain types of topology changes on its local\
    \ \nsubnetwork.\n6.7 Environmental Requirements\nFor correct operation of the\
    \ protocol, certain guarantees are \nrequired from the local environment and the\
    \ Data Link \nLayer. \nThe required local environment guarantees are:\na)Resource\
    \ allocation such that the certain minimum re\nsource guarantees can be met, including\n\
    1)memory (for code, data, and buffers)\n2)processing;\nSee 12.2.5 for specific\
    \ performance levels required for \nconformance\nb)A quota of buffers sufficient\
    \ to perform routeing func\ntions;\nc)Access to a timer or notification of specific\
    \ timer expi\nration; and\nd)A very low probability of corrupting data.\nThe required\
    \ subnetwork guarantees for point-to-point links \nare: \na)Provision that both\
    \ source and destination systems \ncomplete start-up before PDU exchange can occur;\n\
    b)Detection of remote start-up;\nc)Provision that no old PDUs be received after\
    \ start-up \nis complete;\nd)Provision that no PDUs transmitted after a particular\
    \ \nstartup is complete are delivered out of sequence;\ne)Provision that failure\
    \ to deliver a specific subnetwork \nSDU will result in the timely disconnection\
    \ of the \nsubnetwork connection in both directions and that this \nfailure will\
    \ be reported to both systems;  and\nf)Reporting of other subnetwork failures\
    \ and degraded \nsubnetwork conditions.\nThe required subnetwork guarantees for\
    \ broadcast links are:\na)Multicast capability, i.e., the ability to address a\
    \ subset \nof all connected systems with a single PDU;\nb)The following events\
    \ are low probability, which \nmeans that they occur sufficiently rarely so as\
    \ not to \nimpact performance, on the order of once per  thou\nsand PDUs\n1)Routeing\
    \ PDU non-sequentiality, \n2)Routeing PDU loss due to detected corruption; and\n\
    3)Receiver overrun;\nc)The following events are very low probability, \nwhich\
    \ means performance will be impacted unless \nthey are extremely rare, on the\
    \ order of less than one \nevent per four years\n1)Delivery of NPDUs with undetected\
    \ data corrup\ntion; and\n2)Non-transitive connectivity, i.e. where system A \n\
    can receive transmissions from systems B and C, \nbut system B cannot receive\
    \ transmissions from \nsystem C. \nThe following services are assumed to be not\
    \ available \nfrom broadcast links:\na)Reporting of failures and degraded subnetwork\
    \ condi\ntions that result in NPDU loss, for instance receiver \nfailure. The\
    \ routeing functions are designed to account \nfor these failures.\n6.8 Functional\
    \ Organisation of \nSubnetwork Independent \nComponents\nThe Subnetwork Independent\
    \ Functions are broken down \ninto more specific functional components. These\
    \ are de\nscribed briefly in this sub-clause and in detail in clause 7. \nThis\
    \ International Standard uses a functional decomposition \nadapted from the model\
    \ of routeing presented in clause 5.1 \nof ISO/TR 9575. The decomposition is not\
    \ identical to that \nin ISO/TR 9575, since that model is more general and not\
    \ \nspecifically oriented toward a detailed description of intra-\ndomain routeing\
    \ functions such as supplied by this proto\ncol.\nThe functional decomposition\
    \ is shown below in figure 2.\n6.8.1 Routeing\nThe routeing processes are: \n\
    -Decision Process \n-Update Process\nNOTE  this comprises both the Information\
    \ Collection \nand Information Distribution components identified in \nISO/TR\
    \ 9575.\n-Forwarding Process \n-Receive Process\n6.8.1.1 Decision Process\nThis\
    \ process calculates routes to each destination in the do\nmain.  It is executed\
    \ separately for level 1 and level 2 route\ning, and separately within each level\
    \ for each of the route\ning metrics supported by the Intermediate system. It\
    \ uses \nthe Link State Database, which consists of information \nfrom the latest\
    \ Link State PDUs from every other Interme\ndiate system in the area, to compute\
    \ shortest paths from this \nIS to all other systems in the area  9in figure 2.\
    \ The \nLink State Data Base is maintained by the Update Process.\nExecution of\
    \ the Decision Process results in the determina\ntion of [circuit, neighbour]\
    \ pairs (known as adjacencies), \nwhich are stored in the appropriate Forwarding\
    \ Information \nbase  10  and used by the Forwarding process as paths \nalong\
    \ which to forward NPDUs.\nSeveral of the parameters in the routeing data base\
    \ that the \nDecision Process uses are determined by the implementa\ntion. These\
    \ include:\n-maximum number of Intermediate and End systems \nwithin the IS's\
    \ area;\n-maximum number of Intermediate and End system \nneighbours of the IS,\
    \ etc., \nso that databases can be sized appropriately. Also parame\nters such\
    \ as \n-routeing metrics for each circuit; and \n-timers \ncan be adjusted for\
    \ enhanced performance. The complete \nlist of System Management set-able parameters\
    \ is listed in \nclause 11. \n6.8.1.2 Update Process \nThis process constructs,\
    \ receives and propagates Link State \nPDUs. Each Link State PDU contains information\
    \ about the \nidentity and routeing metric values of the  adjacencies of \nthe\
    \ IS that originated the Link State PDU. \nThe Update Process receives Link State\
    \ and Sequence \nNumbers PDUs from the Receive Process  4in figure \n2. It places\
    \ new routeing information in the routeing infor\nmation base 6 and propagates\
    \ routeing information to \nother Intermediate systems  7and 8 .\nGeneral characteristics\
    \ of the Update Process are: \n-Link State PDUs are generated  as a result of\
    \ topologi\ncal changes, and also periodically. They may also be \ngenerated indirectly\
    \ as a result of System Manage\nment actions (such as changing one of the routeing\
    \ \nmetrics for a circuit). \n-Level 1 Link State PDUs are propagated to all Inter\n\
    mediate systems within an area, but are not propa\ngated out of an area. \n-Level\
    \ 2 Link State PDUs are propagated to all Level 2 \nIntermediate systems in the\
    \ domain.\n-Link State PDUs are not propagated outside of a do\nmain. \n-The update\
    \ process, through a set of System Manage\nment parameters, enforces an upper\
    \ bound on the \namount of routeing traffic overhead it generates.\n6.8.1.3 Forwarding\
    \ Process\nThis process supplies and manages the buffers necessary to \nsupport\
    \ NPDU relaying to all destinations. \nIt receives, via the Receive Process, ISO\
    \ 8473 PDUs to be \nforwarded  5 in figure 2.\nIt performs a lookup in the appropriate33The\
    \ appropriate Forwarding\nDatabase is selected by choosing a routeing metric based\
    \ on fields in\nthe QoS Maintenance option of ISO 8473.\n Forwarding Data\nbase\
    \  11  to determine the possible output adjacencies \nto use for forwarding to\
    \ a given destination, chooses one \nadjacency  12, generates error indications\
    \ to ISO 8473 \n 14 , and  signals ISO 9542 to issue Redirect PDUs  \n13.\n6.8.1.4\
    \ Receive Process\nThe Receive Process obtains its inputs from the following \n\
    sources\n-received PDUs with the NPID of Intra-Domain route\ning  2 in figure\
    \ 2, \n-routeing information derived by the ESIS protocol \nfrom the receipt of\
    \ ISO 9542 PDUs  1;  and\n-ISO 8473 data PDUs handed to the routeing function\
    \ \nby the ISO 8473 protocol machine  3. \nIt then performs the appropriate actions,\
    \ which may involve \npassing the PDU to some other function (e.g. to the For\n\
    warding Process for forwarding  5).\n7 Subnetwork Independent \nFunctions\nThis\
    \ clause describes the algorithms and associated data\nbases used by the routeing\
    \ functions. The managed objects \nand attributes defined for System Management\
    \ purposes are \ndescribed in clause 11.\nThe following processes and data bases\
    \ are used internally \nby the subnetwork independent functions. Following each\
    \ \nprocess or data base title, in parentheses, is the type of sys\ntems which\
    \ must keep the database. The system types are \nL2 (level 2 Intermediate system),\
    \ and L1 (level 1 Inter\nmediate system). Note that a level 2 Intermediate system\
    \ is \nalso a level 1 Intermediate system in its home area, so it \nmust keep\
    \ level 1 databases as well as level 2 databases. \nProcesses:\n-Decision Process\
    \ (L2, L1) \n-Update Process (L2, L1) \n-Forwarding Process (L2, L1) \n-Receive\
    \ Process (L2, L1)\nDatabases:\n-Level 1 Link State data base (L2, L1) \n-Level\
    \ 2 Link State data base (L2) \n-Adjacency Database (L2, L1) \n-Circuit Database\
    \ (L2, L1) \n-Level 1 Shortest Paths Database (L2, L1) \n-Level 2 Shortest Paths\
    \ Database (L2) \n-Level 1 Forwarding Databases  one per routeing \nmetric  (L2,\
    \ L1) \n-Level 2 Forwarding Database  one per routeing \nmetric  (L2)\n7.1 Addresses\
    \ \nThe NSAP addresses and NETs of systems are variable \nlength quantities that\
    \ conform to the requirements of ISO \n8348/Add.2. The corresponding NPAI contained\
    \ in ISO \n8473 PDUs and in this protocol's PDUs (such as LSPs and \nIIHs) must\
    \ use the preferred binary encoding; the underly\ning syntax for this information\
    \ may be either abstract binary \nsyntax or abstract decimal syntax. Any of the\
    \ AFIs and \ntheir corresponding DSP syntax may be used with this pro\ntocol.\n\
    7.1.1 NPAI Of Systems Within A Routeing \nDomain \nFigure 3 illustrates the structure\
    \ of an encoded NSAP ad\ndress or NET. \nThe structure of the NPAI will be interpreted\
    \ in the follow\ning way by the protocol described in this international stan\n\
    dard: \nArea Address \t\naddress of one area within a routeing domain  a \nvariable\
    \ length quantity consisting of the entire high-\norder part of the NPAI, excluding\
    \ the ID and SEL \nfields, defined below. \nID\tSystem identifier  a variable\
    \ length field from 1 to \n8 octets (inclusive). Each routeing domain employ\n\
    ing this protocol shall select a single size for the ID \nfield and all Intermediate\
    \ systems in the routeing do\nmain shall use this length for the system IDs of\
    \ all \nsystems in the routeing domain. \n\tThe set of ID lengths supported by\
    \ an implementa\ntion is an implementation choice, provided that at \nleast one\
    \ value in the permitted range can be ac\ncepted. The routeing domain administrator\
    \ must en\nsure that all ISs included in a routeing domain are \nable to use the\
    \ ID length chosen for that domain. \nSEL\tNSAP Selector  a 1-octet field which\
    \ acts as a se\nlector for the entity which is to receive the PDU(this \nmay be\
    \ a Transport entity or the Intermediate system \nNetwork entity itself). It is\
    \ the least significant (last) \noctet of the NPAI.\n7.1.2 Deployment of Systems\
    \ \nFor correct operation of the routeing protocol defined in \nthis international\
    \ standard, systems deployed in a routeing \ndomain must meet the following requirements:\n\
    a)For all systems:\n1)Each system in an area must have a unique sys\ntemID: that\
    \ is, no two systems (IS or ES) in an \narea can use the same ID value. \n2)Each\
    \ area address must be unique within the global \nOSIE: that is, a given area\
    \ address can be associ\nated with only one area. \n3)All systems having a given\
    \ value of area address \nmust be located in the same area. \nb)Additional Requirements\
    \ for Intermediate systems: \n1)Each Level 2 Intermediate system within a route\n\
    ing domain must have a unique value for its ID \nfield: that is, no two level\
    \ 2 ISs in a routeing do\nmain can have the same value in their ID fields. \n\
    c)Additional Requirements for End systems: \n1)No two End systems in an area may\
    \ have ad\ndresses that match in all but the SEL fields. \ntive authority to enforce\
    \ the requirements of 7.1.2. The pro\ntocol defined in this international standard\
    \ assumes that \nthese requirements are met, but has no means to verify \ncompliance\
    \ with them.\n7.1.3 Manual area addresses \nlevel 2 ISs to create a composite\
    \ list of all area addresses \nsupported within a given area. Level 2 ISs in turn\
    \ advertise \nthe composite list throughout the level 2 subdomain by in\ncluding\
    \ it in their Level 2 LSP's Area Addresses field, \nthus distributing information\
    \ on all the area addresses asso\nciated with the entire routeing domain. The\
    \ procedures for \nment to ensure that each area address associated with an IS\
    \ \ndestination system does not reside in the IS's area. Such \nPDUs will be routed\
    \ by level-2 routeing.\n7.1.4 Encoding of Level 2 Addresses\nWhen a full NSAP\
    \ address is encoded according to the pre\nferred binary encoding specified in\
    \ ISO 8348/Add.2, the \nIDI is padded with leading digits (if necessary) to obtain\
    \ the \nmaximum IDP length specified for that AFI.\nA Level 2 address prefix consists\
    \ of a leading sub-string of \na full NSAP address, such that it matches a set\
    \ of full \nNSAP addresses that have the same leading sub-string. \nHowever this\
    \ truncation and matching is performed on the \nNSAP represented by the abstract\
    \ syntax of the NSAP ad\ndress, not on the encoded (and hence padded) form.11An\
    \ example of\nprefix matching may be found in annex B, clause B.1.\nLevel 2 address\
    \ prefixes are encoded in LSPs in the same \nway as full NSAP addresses, except\
    \ when the end of the \nprefix falls within the IDP. In this case the prefix is\
    \ directly \nencoded as the string of semi-octets with no padding. \n7.1.5 Comparison\
    \ of Addresses\nUnless otherwise stated, numerical comparison of addresses \n\
    shall be performed on the encoded form of the address, by \npadding the shorter\
    \ address with trailing zeros to the length \nof the longer address, and then\
    \ performing a numerical \ncomparison.\nThe addresses to which this precedure\
    \ applies include \nNSAP addresses, Network Entity Titles, and SNPA ad\ndresses.\n\
    7.2 The Decision Process\nThis process uses the database of Link State information\
    \ to \ncalculate the forwarding database(s), from which the for\nwarding process\
    \ can know the proper next hop for each \nNPDU. The Level 1 Link State Database\
    \ is used for calcu\nlating the Level 1 Forwarding Database(s), and the Level\
    \ 2 \nLink State Database is used for calculating the Level 2 For\nwarding Database(s).\n\
    7.2.1 Input and output\nINPUT\n-Link State Database  This database is a set of\
    \ infor\nmation from the latest Link State PDUs from all \nknown Intermediate\
    \ systems (within this area, for \nLevel 1, or within the level 2 subdomain, for\
    \ Level 2). \nThis database is received from the Update Process.\n-Notification\
    \ of an Event  This is a signal from the \nUpdate Process that a change to a link\
    \ has occurred \nsomewhere in the domain.\n OUTPUT\n-Level 1 Forwarding Databases\
    \  one per routeing \nmetric\n-(Level 2 Intermediate systems only) Level 2 Forward\n\
    ing Databases   one per routeing metric\n-(Level 2 Intermediate systems only)\
    \ The Level 1 De\ncision Process informs the Level 2 Update Process of \nthe ID\
    \ of the Level 2 Intermediate system within the \narea with lowest ID reachable\
    \ with real level 1 links \n(as opposed to a virtual link consisting of a path\
    \ \nthrough the level 2 subdomain) \n-(Level 2 Intermediate systems only) If this\
    \ Intermedi\nate system is the Partition Designated Level 2 Inter\nmediate system\
    \ in this partition, the Level 2 Decision \nProcess informs the Level 1 Update\
    \ Process of the \nvalues of the default routeing metric to and ID of the \npartition\
    \ designated level 2 Intermediate system in \neach other partition of this area.\
    \ \n7.2.2 Routeing metrics\nThere are four routeing metrics defined, corresponding\
    \ to \nthe four possible orthogonal qualities of service defined by \nthe QoS\
    \ Maintenance field of ISO 8473. Each circuit ema\nnating from an Intermediate\
    \ system shall be assigned a \nvalue for one or more of these metrics by System\
    \ manage\nment. The four metrics are as follows:\na)Default metric: This is a\
    \ metric understood by every \nIntermediate system in the domain. Each circuit\
    \ shall \nhave a positive integral value assigned for this metric. \nThe value\
    \ may be associated with any objective func\ntion of the circuit, but by convention\
    \ is intended to \nmeasure the capacity of the circuit for handling traffic, \n\
    for example, its throughput in bits-per-second.  Higher \nvalues indicate a lower\
    \ capacity.\nb)Delay metric:  This metric measures the transit delay \nof the\
    \ associated circuit. It is an optional metric, which \nif assigned to a circuit\
    \ shall have a positive integral \nvalue. Higher values indicate a longer transit\
    \ delay.\nc)Expense metric: This metric measures the monetary \ncost of utilising\
    \ the associated circuit. It is an optional \nmetric, which if assigned to a circuit\
    \ shall have a posi\ntive integral value22The path computation algorithm utilised\
    \ in this\nInternational Standard requires that all circuits be assigned a\npositive\
    \ value for a metric. Therefore, it is \nnot possible to represent a free circuit\
    \ by a zero value of the expense\nmetric. By convention, the value 1 is used to\
    \ indicate a free circuit.\n. Higher values indicate a larger \nmonetary expense.\n\
    d)Error metric: This metric measures the residual error \nprobability of the associated\
    \ circuit. It is an optional \nmetric, which if assigned to a circuit shall have\
    \ a non-\nzero value. Higher values indicate a larger probability \nof undetected\
    \ errors on the circuit.\nNOTE - The decision process combines metric values by\
    \ \nsimple addition.  It is important, therefore, that the values of \nthe metrics\
    \ be chosen accordingly.\nEvery Intermediate system shall be capable of calculating\
    \ \nroutes based on the default metric. Support of any or all of \nthe other metrics\
    \ is optional. If an Intermediate system sup\nports the calculation of routes\
    \ based on a metric, its update \nprocess may report the metric value in the LSPs\
    \ for the as\nsociated circuit; otherwise, the IS shall not report the met\nric.\n\
    When calculating paths for one of the optional routeing \nmetrics, the decision\
    \ process only utilises LSPs with a \nvalue reported for the corresponding metric.\
    \ If no value is \nassociated with a metric for any of the IS's circuits the sys\n\
    tem shall not calculate routes based on that metric.\nNOTE - A consequence of\
    \ the above is that a system reach\nable via the default metric may not be reachable\
    \ by another \nmetric.\nSee 7.4.2 for a description of how the forwarding process\
    \ \nselects one of these metrics based on the contents of the \nISO 8473 QoS Maintenance\
    \ option.\nEach of the four metrics described above may be of two \ntypes: an\
    \  Internal metric or an External metric. Internal \nmetrics are used to describe\
    \ links/routes to destinations in\nternal to the routeing domain. External metrics\
    \ are used to \ndescribe links/routes to destinations outside of the routeing\
    \ \ndomain. These two types of metrics are not directly compa\nrable, except the\
    \ internal routes are always preferred over \nexternal routes. In other words\
    \ an internal route will always \nbe selected even if an external route with lower\
    \ total cost \nexists.\n7.2.3 Broadcast Subnetworks\nInstead of treating a broadcast\
    \ subnetwork as a fully con\nnected topology, the broadcast subnetwork is treated\
    \ as a \npseudonode, with links to each attached system. Attached \nsystems shall\
    \ only report their link to the pseudonode. The \ndesignated Intermediate system,\
    \ on behalf of the \npseudonode, shall construct Link State PDUs reporting the\
    \ \nlinks to all the systems on the broadcast subnetwork with a \nzero value for\
    \ each supported routeing metric33They are set to zero\nmetric values since they\
    \ have already been assigned  metrics by the\nlink to the pseudonode. Assigning\
    \ a non-zero value in the \npseudonode LSP would have the effect of doubling the\
    \ actual value.\n.\nThe pseudonode shall be identified by the sourceID of the\
    \ \nDesignated Intermediate system, followed by a non-zero \npseudonodeID assigned\
    \ by the Designated Intermediate \nsystem. The pseudonodeID is locally unique\
    \ to the Desig\nnated Intermediate system.\nDesignated Intermediate systems are\
    \ determined separately \nfor level 1 and level 2. They are known as the LAN Level\
    \ 1 \nDesignated IS and the LAN Level 2 Designated IS respec\ntively. See 8.4.4.\n\
    An Intermediate system may resign as Designated Interme\ndiate System on a broadcast\
    \ circuit either because it (or it's \nSNPA on the broadcast subnetwork) is being\
    \ shut down or \nbecause some other Intermediate system of higher priority \n\
    has taken over that function. When an Intermediate system \nresigns as Designated\
    \ Intermediate System, it shall initiate a \nnetwork wide purge of its pseudonode\
    \ Link State PDU(s) \nby setting their Remaining Lifetime to zero and performing\
    \ \nthe actions described in 7.3.16.4. A LAN Level 1 Desig\nnated Intermediate\
    \ System purges Level 1 Link State PDUs \nand a LAN Level 2 Designated Intermediate\
    \ System purges \nLevel 2 Link State PDUs.  An Intermediate system which \nhas\
    \ resigned as both Level 1 and Level 2 Designated Inter\nmediate System shall\
    \ purge both sets of LSPs.\nWhen an Intermediate system declares itself as designated\
    \ \nIntermediate system and it is in possession of a Link State \nPDU of the same\
    \ level issued by the previous Designated \nIntermediate System for that circuit\
    \ (if any), it shall initiate \na network wide purge of that (or those) Link State\
    \ PDU(s) \nas above.\n7.2.4 Links\nTwo Intermediate systems are not considered\
    \ neighbours \nunless each reports the other as directly reachable over one \n\
    of their SNPAs. On a Connection-oriented subnetwork \n(either point-to-point or\
    \ general topology), the two Interme\ndiate systems in question shall ascertain\
    \ their neighbour re\nlationship when a connection is established and hello PDUs\
    \ \nexchanged. A malfunctioning IS might, however, report an\nother IS to be a\
    \ neighbour when in fact it is not. To detect \nthis class of failure the decision\
    \ process checks that each \nlink reported as up in a LSP is so reported by both\
    \ Inter\nmediate systems. If an Intermediate system considers a link \ndown it\
    \ shall not mention the link in its Link State PDUs.\nOn broadcast subnetworks,\
    \ this class of failure shall be de\ntected by the designated IS, which has the\
    \ responsibility to \nascertain the set of Intermediate systems that can all com\n\
    municate on the subnetwork. The designated IS shall in\nclude these Intermediate\
    \ systems (and no others) in the \nLink State PDU it generates for the pseudonode\
    \ represent\ning the broadcast subnetwork.\n7.2.5 Multiple LSPs for the same system\n\
    The Update process is capable of dividing a single logical \nLSP into a number\
    \ of separate PDUs for the purpose of \nconserving link bandwidth and processing\
    \ (see 7.3.4).  The \nDecision Process, on the other hand, shall regard the LSP\
    \ \nwith LSP Number zero in a special way. If the LSP with \nLSP Number zero and\
    \ remaining lifetime > 0, is not present \nfor a particular system then the Decision\
    \ Process shall not \nprocess any LSPs with non-zero LSP Number which may \nbe\
    \ stored for that system. \nThe following information shall be taken only from\
    \ the LSP \nwith LSP Number zero. Any values which may be present \nin other LSPs\
    \ for that system shall be disregarded by the \nDecision Process.\na)The setting\
    \ of the LSP Database Overload bit. \nb)The value of the IS Type field. \nc)The\
    \ Area Addresses option.\n7.2.6 Routeing Algorithm Overview\nThe routeing algorithm\
    \ used by the Decision Process is a \nshortest path first (SPF) algorithm. Instances\
    \ of the algo\nrithm are run independently and concurrently by all Inter\nmediate\
    \ systems in a routeing domain. Intra-Domain route\ning of a PDU occurs on a hop-by-hop\
    \ basis: that is, the al\ngorithm determines only the next hop, not the complete\
    \ \npath, that a data PDU will take to reach its destination. To \nguarantee correct\
    \ and consistent route computation by \nevery Intermediate system in a routeing\
    \ domain, this Inter\nnational Standard depends on the following properties:\n\
    a)All Intermediate systems in the routeing domain con\nverge to using identical\
    \ topology information; and\nb)Each Intermediate system in the routeing domain\
    \ gen\nerates the same set of routes from the same input to\npology and set of\
    \ metrics.\nThe first property is necessary in order to prevent inconsis\ntent,\
    \ potentially looping paths. The second property is nec\nessary to meet the goal\
    \ of determinism stated in 6.6.\nA system executes the SPF algorithm to find a\
    \ set of legal \npaths to a destination system in the routeing domain. The \n\
    set may consist of:\na)a single path of minimum metric sum: these are \ntermed\
    \ minimum cost paths;\nb)a set of paths of equal minimum metric sum: these are\
    \ \ntermed equal minimum cost paths; or\nc)a set of paths which will get a PDU\
    \ closer to its desti\nnation than the local system: these are called down\nstream\
    \ paths.\nPaths which do not meet the above conditions are illegal \nand shall\
    \ not be used.\nThe Decision Process, in determining its paths, also ascer\ntains\
    \ the identity of the adjacency which lies on the first \nhop to the destination\
    \ on each path. These adjacencies are \nused to form the Forwarding Database,\
    \  which the forward\ning process uses for relaying PDUs.\nSeparate route calculations\
    \ are made for each pairing of a \nlevel in the routeing hierarchy (i.e. L1 and\
    \ L2) with a sup\nported routeing metric. Since there are four routeing metrics\
    \ \nand two levels some systems may execute multiple in\nstances of the SPF algorithm.\
    \ For example,\n-if an IS is a L2 Intermediate system which supports all \nfour\
    \ metrics and computes minimum cost paths for all \nmetrics, it would execute\
    \ the SPF calculation eight \ntimes.\n-if an IS is a L1 Intermediate system which\
    \ supports all \nfour metrics, and additionally computes downstream \npaths, it\
    \ would execute the algorithm  4 W (number of \nneighbours + 1) times.\nAny implementation\
    \ of an SPF algorithm meeting both the \nstatic and dynamic conformance requirements\
    \ of clause 12 \nof this International Standard may be used. Recommended \nNOTE\
    \ - The precise precedence among the paths is speci\nfied in order to meet the\
    \ goal of determinism defined in 6.6.\n-adjacency type: Paths associated with\
    \ End system or \nlevel 2 reachable address prefix adjacencies are re\ntained\
    \ in preference to other adjacencies\n-metric sum: Paths having a lesser metric\
    \ sum are re\ntained in preference to paths having a greater metric \nsum. By\
    \ metric sum is understood the sum of the \nmetrics along the path to the destination.\n\
    -neighbour ID: where two or more paths are associ\nated with adjacencies of the\
    \ same type, an adjacency \nwith a lower neighbour ID is retained in preference\
    \ to \nan adjacency with a higher neighbour id.\n-circuit ID: where two or more\
    \ paths are associated \nwith adjacencies of the same type, and same neigh\nbour\
    \ ID, an adjacency with a lower circuit ID is re\ntained in preference to an adjacency\
    \ with a higher cir\ncuit ID, where circuit ID is the value of:\n7ptPtCircuitID\
    \ for non-broadcast circuits, \n7l1CircuitID for broadcast circuits when running\
    \ \nthe Level 1 Decision Process, and \n7l2CircuitID for broadcast circuits when\
    \ running \nthe Level 2 Decision Process. \n-lANAddress: where two or more adjacencies\
    \ are of \nthe same type, same neighbour ID, and same circuit \nID (e.g. a system\
    \ with multiple LAN adapters on the \nsame circuit) an adjacency with a lower\
    \ lANAddress \nis retained in preference to an adjacency with a higher \nlANAddress.\n\
    7.2.8 Robustness Checks\n7.2.8.1 Computing Routes through Overloaded \nIntermediate\
    \ systems\nThe Decision Process shall not utilise a link to an Interme\ndiate\
    \ system neighbour from an IS whose LSPs have the \nLSP Database Overload indication\
    \ set. Such paths may in\ntroduce loops since the overloaded IS does not have\
    \ a com\nplete routeing information base. The Decision Process shall, \nhowever\
    \ utilise the link to reach End system neighbours \nsince these paths are guaranteed\
    \ to be non-looping.\n7.2.8.2 Two-way connectivity check\nThe Decision Process\
    \ shall not utilise a link between two \nIntermediate Systems unless both ISs\
    \ report the link. \nNOTE - the check is not applicable to links to an End Sys\n\
    tem.\nReporting the link indicates that it has a defined value for at \nleast\
    \ the default routeing metric. It is permissible for two \nendpoints to report\
    \ different defined values of the same \nmetric for the same link. In this case,\
    \ routes may be asym\nmetric.\n7.2.9 Construction of a Forwarding Database\nThe\
    \ information that is needed in the forwarding database \nfor routeing metric\
    \ k is the set of adjacencies for each sys\ntem N.\n7.2.9.1 Identification of\
    \ Nearest Level 2 IS by a \nLevel 1 IS\nLevel 1 Intermediate systems need one\
    \ additional piece of \ninformation per routeing metric: the next hop to the nearest\
    \ \nlevel 2 Intermediate system according to that routeing met\nric. A level 1\
    \ IS shall ascertain the set, R, of attached \n7.2.9.2 Setting the Attached Flag\
    \ in Level 2 \nIntermediate Systems\nIf a level 2 Intermediate system discovers,\
    \ after computing \nthe level 2 routes for metric k, that it cannot reach any\
    \ other \nareas using that metric, it shall:\n-set AttachedFlag for metric k to\
    \ False;\n-regenerate its Level 1 LSP with LSP number zero; and\n-compute the\
    \ nearest level 2 Intermediate system for \nmetric k for insertion in the appropriate\
    \ forwarding \ndatabase, according to the algorithm described in \n7.2.9.1 for\
    \ level 1 Intermediate systems.\nNOTE - AttachedFlag for each metric k is examined\
    \ by the \nUpdate Process, so that it will report the value in the ATT \nfield\
    \ of its Link State PDUs. \nIf a level 2 Intermediate system discovers, after\
    \ computing \nthe level 2 routes for metric k, that it can reach at least one\
    \ \nother area using that metric, it shall\n-set AttachedFlag for metric k to\
    \ True;\n-regenerate its Level 1 LSP with LSP number zero; and \n-set the level\
    \ 1 forwarding database entry for metric k \nwhich corresponds to nearest level\
    \ 2 Intermediate \nsystem to Self.\n7.2.10 Information for Repairing Partitioned\
    \ \nAreas\nAn area may become partitioned as a result of failure of one \nor more\
    \ links in the area. However, if each of the partitions \nhas a connection to\
    \ the level 2 subdomain, it is possible to \nrepair the partition via the level\
    \ 2 subdomain, provided that \nthe level 2 subdomain itself is not partitioned.\
    \ This is illus\ntrated in Figure 4.\nAll the systems A  I, R and P are in the\
    \ same area n. \nWhen the link between D and E is broken, the area be\ncomes partitioned.\
    \ Within each of the partitions the Parti\ntion Designated Level 2 Intermediate\
    \ system is selected \nfrom among the level 2 Intermediate systems in that parti\n\
    tion. In the case of partition 1 this is P, and in the case of \npartition 2 this\
    \ is R. The level 1 repair path is then estab\nlished between between these two\
    \ level 2 Intermediate sys\ntems. Note that the repaired link is now between P\
    \ and R, \nnot between D and E.\nThe Partition Designated Level 2 Intermediate\
    \ Systems re\npair the partition by forwarding NPDUs destined for other \npartitions\
    \ of the area through the level 2 subdomain. They \ndo this by acting in their\
    \ capacity as Level 1 Intermediate \nSystems and advertising in their Level 1\
    \ LSPs adjacencies \nto each Partition Designated Level 2 Intermediate System\
    \ \nin the area. This adjacency is known as a Virtual Adja\ncency or Virtual Link.\
    \ Thus other Level 1 Intermediate \nSystems in a partition calculate paths to\
    \ the other partitions \nthrough the Partition Designated Level 2 Intermediate\
    \ Sys\ntem. A Partition Designated Level 2 Intermediate System \nforwards the\
    \ Level 1 NPDUs through the level 2 subdomain \nby encapsulating them in 8473\
    \ Data NPDUs with its Virtual \nNetwork Entity Title as the source NSAP and the\
    \ adja\ncent Partition Designated Level 2 Intermediate System's \nVirtual Network\
    \ Entity Title as the destination NSAP. The \nfollowing sub-clauses describe this\
    \ in more detail.\n7.2.10.1 Partition Detection and Virtual Level 1 \nLink Creation\n\
    Partitions of a Level 1 area are detected by the Level 2 In\ntermediate System(s)\
    \ operating within the area.  In order to \nparticipate in the partition repair\
    \ process, these Level 2 In\ntermediate systems must also act as Level 1 Intermediate\
    \ \nsystems in the area. A partition of a given area exists when\never two or\
    \ more Level 2 ISs located in that area are re\nported in the L2 LSPs as being\
    \ a Partition Designated \nLevel 2 IS. Conversely, when only one Level 2 IS in\
    \ an \narea is reported as being the Partition Designated Level 2 \nIS, then that\
    \ area is not partitioned.  Partition repair is ac\ncomplished by the Partition\
    \ Designated Level 2 IS.  The \nelection of the Partition Designated Level 2 IS\
    \ as described \nin the next subsection must be done before the detection \nand\
    \ repair process can begin.\nIn order to repair a partition of a Level 1 area,\
    \ the Partition \ndesignated Level 2 IS creates a Virtual Network Entity to \n\
    represent the partition.  The Network Entity Title for this \nvirtual network\
    \ entity shall be constructed from the first \nlisted area address from its Level\
    \ 2 Link State PDU, and the \nID of the Partition Designated Level 2 IS.  The\
    \ IS shall also \nconstruct a virtual link (represented by a new Virtual Adja\n\
    cency managed object) to each Partition Designated Level 2 \nIS in the area, with\
    \ the NET of the partition recorded in the \nIdentifier attribute.  The virtual\
    \ links are the repair paths for \nthe partition.  They are reported by the Partition\
    \ Designated \nLevel 2 IS into the entire Level 1 area by adding the ID of \n\
    each adjacent Partition Designated Level 2 IS to the In\ntermediate System Neighbours\
    \ field of its Level 1 Link \nState PDU.  The Virtual Flag shall be set True for\
    \ these \nIntermediate System neighbours.  The metric value for this \nvirtual\
    \ link shall be the default metric value d(N) obtained \nfrom this system's Level\
    \ 2 PATHS database, where N is the \nadjacent Partition Designated Level 2 IS\
    \ via the Level 2 \nsubdomain.\nAn Intermediate System which operates as the Partition\
    \ \nDesignated Level 2 Intermediate System shall perform the \nfollowing steps\
    \ after completing the Level 2 shortest path \ncomputation in order to detect\
    \ partitions in the Level 1 area \ndoes not equal this system's ID, then inform\
    \ the level \n1 update process at this system of the identity of the \nPartition\
    \ Designated Level 2 Intermediate system, to\ngether with the path cost for the\
    \ default routeing met\nric to that Intermediate system.\nb)Continue examining\
    \ Level 2 LSPs until all Partition \nDesignated Level 2 Intermediate systems in\
    \ other par\ntitions of this area are found, and inform the Level 1 \nUpdate Process\
    \ of all of the other Partition Designated \nLevel 2 Intermediate systems in other\
    \ partitions of this \narea, so that\n1)Level 1 Link State PDUs can be propagated\
    \ to all \nother Partition designated level 2 Intermediate sys\ntems for this\
    \ area (via the level 2 subdomain). \n2)All the Partition Designated Level 2 Intermediate\
    \ \nsystems for other partitions of this area can be re\nported as adjacencies\
    \ in this system's Level 1 Link \nState PDUs.\nIf a partition has healed, the\
    \ IS shall destroy the associated \nvirtual network entity and virtual link by\
    \ deleting the Vir\ntual Adjacency.  The Partition Designated Level 2 IS de\n\
    tects a healed partition when another Partition Designated \nLevel 2 IS listed\
    \ as a virtual link in its Level 1 Link State \nPDU was not found after running\
    \ the partition detection and \nvirtual link creation algorithm described above.\n\
    If such a Virtual Adjacency is created or destroyed, the IS \nshall generate a\
    \ partitionVirtualLinkChange notification.\n7.2.10.2 Election of Partition Designated\
    \ Level 2 \nIntermediate System\n The Partition Designated Level 2 IS is a Level\
    \ 2 IS which:\n-reports itself as attached by the default metric in its \nLSPs;\n\
    -reports itself as implementing the partition repair op\ntion;\n-operates as a\
    \ Level 1 IS in the area;\n-is reachable via Level 1 routeing without traversing\
    \ \nany virtual links; and\n-has the lowest ID \nThe election of the Partition\
    \ Designated Level 2 IS is per\nformed by running the decision process algorithm\
    \ after the \nLevel 1 decision process has finished, and before the \nLevel 2\
    \ decision process to determine Level 2 paths is exe\ncuted.  \nIn order to guarantee\
    \ that the correct Partition Designated \nLevel 2 IS is elected, the decision\
    \ process is run using only \nthe Level 1 LSPs for the area, and by examining\
    \ only the \nIntermediate System Neighbours whose Virtual Flag is \nFALSE.  The\
    \ results of this decision process is a set of all \nthe Level 1 Intermediate\
    \ Systems in the area that can be \nreached via Level 1, non-virtual link routeing.\
    \  From this \nset, the Partition Designated Level 2 IS is selected by \nchoosing\
    \ the IS for which\n-IS Type (as reported in the Level 1 LSP) is Level 2 \nIntermediate\
    \ System;\n-ATT  indicates attached by the default metric;\n-P indicates support\
    \ for the partition repair option;  and\n-ID is the lowest among the subset of\
    \ attached Level 2 \nIntermediate Systems. \ngenerated.\n7.2.10.4 Encapsulation\
    \ of NPDUs Across the \nVirtual Link\nAll NPDUs sent over virtual links shall\
    \ be encapsulated as \nISO 8473 Data NPDUs.  The encapsulating Data NPDU \nshall\
    \ contain the Virtual Network Entity Title of the Parti\ntion Designated Level\
    \ 2 IS that is forwarding the NPDU \nover the virtual link in the Source Address\
    \ field, and the \nVirtual NET of the adjacent Partition Designated Level 2 \n\
    IS in the Destination Address field.  The SEL field in \nboth NSAPs shall contain\
    \ the IS-IS routeing selector \nvalue.  The QoS Maintenance field of the outer\
    \ PDU shall \nbe set to indicate forwarding via the default routeing metric \n\
    (see table 1 on page 32).  \nFor Data and  Error Report NPDUs the Segmentation\
    \ \nPermitted and Error Report flags and the Lifetime field  \nof the outer NPDU\
    \ shall be copied from the inner NPDU.  \nWhen the inner NPDU is decapsulated,\
    \ its Lifetime field  \nshall be set to the value of the Lifetime field in the\
    \ outer \nNPDU.\nFor LSPs and SNPs the Segmentation Permitted flag \nshall be\
    \ set to True and the Error Report flag shall be set \nto False.  The Lifetime\
    \ field shall be set to 255.  When an \ninner LSP is decapsulated, its remaining\
    \ lifetime shall be \ndecremented by half the difference between 255 and the \n\
    value of the Lifetime field in the outer NPDU.\nData NPDUs shall not be fragmented\
    \ before encapsulation, \nunless the total length of the Data NPDU (including\
    \ header) \nexceeds 65535 octets.  In that case, the original Data NPDU \nshall\
    \ first be fragmented, then encapsulated.  In all cases, \nthe encapsulated Data\
    \ NPDU may need to be fragmented \nby ISO 8473 before transmission in which case\
    \ it must be \nreassembled and decapsulated by the destination Partition \nDesignated\
    \ Level 2 IS.  The encapsulation is further de\nscribed as part of the forwarding\
    \ process in 7.4.3.2.  The \ndecapsulation is described as part of the Receive\
    \ process in \n7.4.4.\nIntermediate system's link state database.\nNOTE - This\
    \ includes all source systems, whether currently \nreachable or not. It also includes\
    \ the local Intermediate sys\ntem's own Level 1 LSP with LSP number zero.  \n\
    NOTE - There is no requirement for this set to be updated \nimmediately on each\
    \ change to the database contents. It is \n7.2.12 Order of Preference of Routes\n\
    If an Intermediate system takes part in level 1 routeing, and \ndetermines (by\
    \ looking at the area address) that a given des\ntination is reachable within\
    \ its area, then that destination \nwill be reached exclusively by use of level\
    \ 1 routeing. In \nparticular:\na)Level 1 routeing is always based on internal\
    \ metrics.\nb)Amongst routes in the area, routes on which the re\nquested QoS\
    \ (if any) is supported are always preferred \nto routes on which the requested\
    \ QoS is not supported.\nc)Amongst routes in the area of the same QoS, the short\n\
    est routes are preferred. For determination of the \nshortest path, if a route\
    \ with specific QoS support is \navailable, then the specified QoS metric is used,\
    \ other\nwise the default metric is used. \nd)Amongst routes of equal cost, load\
    \ splitting may be \nperformed.\nIf an Intermediate system takes part in level\
    \ 1 routeing, \ndoes not take part in level 2 routeing, and determines (by \n\
    looking at the area address) that a given destination is not \nreachable within\
    \ its area, and at least one attached level 2 \nIS is reachable in the area, then\
    \ that destination will be \nreached by routeing to a level 2 Intermediate system\
    \ as fol\nlows:\na)Level 1 routeing is always based on internal metrics.\nb)Amongst\
    \ routes in the area to attached level 2 ISs, \nroutes on which the requested\
    \ QoS (if any) is sup\nported are always preferred to routes on which the re\n\
    quested QoS is not supported.\nc)Amongst routes in the area of the same QoS to\
    \ at\ntached level 2 ISs, the shortest route is preferred. For \ndetermination\
    \ of the shortest path, if a route on which \nthe specified QoS is available,\
    \ then the specified QoS \nmetric is used, otherwise the default metric is used.\n\
    d)Amongst routes of equal cost, load splitting may be \nperformed.\nIf an Intermediate\
    \ system takes part in level 2 routeing and \nis attached, and the IS determines\
    \ (by looking at the area \naddress) that a given destination is not reachable\
    \ within its \narea, then that destination will be reached as follows:\na)Routes\
    \ on which the requested QoS (if any) is sup\nported are always preferred to routes\
    \ on which the re\nquested QoS is not supported.\nb)Amongst routes of the same\
    \ QoS, routes are priori\ntised as follows:\n1)Highest precedence: routes matching\
    \ the area ad\ndress of any area in the routeing domain\n2)Medium precedence:\
    \ Routes matching a reachable \naddress prefix with an internal metric. For destina\n\
    tions matching multiple reachable address prefix \nentries all with internal metrics,\
    \ the longest prefix \nshall be preferred.\n3)Lowest precedence: Routes matching\
    \ a reachable \naddress prefix with an external metric. For destina\ntions matching\
    \ multiple reachable address prefix \nentries all with external metrics, the longest\
    \ prefix \nshall be preferred.\nc)For routes with equal precedence as specified\
    \ above, \nthe shortest path shall be preferred. For determination \nof the shortest\
    \ path, a route supporting the specified \nQoS is used if available; otherwise\
    \ a route using the \ndefault metric shall be used. Amongst routes of equal \n\
    cost, load splitting may be performed.\n7.3 The Update Process\nThe Update Process\
    \ is responsible for generating and \npropagating Link State information reliably\
    \ throughout the \nrouteing domain.\nThe Link State information is used by the\
    \ Decision Process \nto calculate routes.\n7.3.1 Input and Output\nINPUT\n-Adjacency\
    \ Database  maintained by the Subnetwork \nDependent Functions \n-Reachable Address\
    \ managed objects - maintained by \nSystem Management\n-Notification of Adjacency\
    \ Database Change  notifi\ncation by the Subnetwork Dependent Functions that \n\
    an adjacency has come up, gone down, or changed \ncost. (Circuit up, Circuit down,\
    \ Adjacency Up, Adja\ncency Down, and Cost change events) \n-AttachedFlag  (level\
    \ 2 Intermediate systems only), \na flag computed by the Level 2 Decision Process\
    \ indi\ncating whether this system can reach (via level 2 \nrouteing) other areas\
    \ \n-Link State PDUs  The Receive Process passes Link \nState PDUs to the Update\
    \ Process, along with an indi\ncation of which adjacency it was received on. \n\
    -Sequence Numbers PDUs  The Receive Process \npasses Sequence Numbers PDUs to\
    \ the Update Proc\ness, along with an indication of which adjacency it \nwas received\
    \ on. \n-Other Partitions  The Level 2 Decision Process \nmakes available (to\
    \ the Level 1 Update Process on a \nLevel 2 Intermediate system) a list of aPartition\
    \ Desig\nnated Level 2 Intermediate system, Level 2 default \nmetric valueq pairs,\
    \ for other partitions of this area.\n OUTPUT\n-Link State Database\n-Signal to\
    \ the Decision Process of an event, which is \neither the receipt of a Link State\
    \ PDU with different \ninformation from the stored one, or the purging of a \n\
    Link State PDU from the database. The reception of a \nLink State PDU which has\
    \ a different sequence num\nber or Remaining Lifetime from one already stored\
    \ in \nthe database, but has an identical variable length por\ntion, shall not\
    \ cause such an event. \nNOTE - An implementation may compare the checksum of\
    \ \nthe stored Link State PDU, modified according to the \nchange in sequence\
    \ number, with the checksum of the re\nceived Link State PDU. If they differ,\
    \ it may assume that the \nvariable length portions are different and an event\
    \ signalled \nto the Decision Process. However, if the checksums are the \nsame,\
    \ an octet for octet comparison must be made in order \nto determine whether or\
    \ not to signal the event.\n7.3.2 Generation of Local Link State \nInformation\n\
    The Update Process is responsible for constructing a set of \nLink State PDUs.\
    \ The purpose of these Link State PDUs is \nto inform all the other Intermediate\
    \ systems (in the area, in \nthe case of Level 1, or in the Level 2 subdomain,\
    \ in the case \nof Level 2), of the state of the links between the Intermedi\n\
    ate system that generated the PDUs and its neighbours. \nThe Update Process in\
    \ an Intermediate system shall gener\nate one or more new Link State PDUs under\
    \ the following \ncircumstances:\na)upon timer expiration;\nb)when notified by\
    \ the Subnetwork Dependent Func\ntions of an Adjacency Database Change;\n7.3.3\
    \ Use of Manual Routeing Information\nManual routeing information is routeing\
    \ information en\ntered by system management. It may be specified in two \nforms.\n\
    a)Manual Adjacencies \nb)Reachable Addresses \nThese are described in the following\
    \ sub-clauses.\n7.3.3.1 Manual Adjacencies\nAn End system adjacency may be created\
    \ by System Man\nagement. Such an adjacency is termed a manual End sys\ntem adjacency.\
    \ In order to create a manual End system ad\njacency, system managements shall\
    \ specify:\na)the (set of) system IDs reachable over that adjacency; \nand \n\
    b)the corresponding SNPA Address.\n These adjacencies shall appear as adjacencies\
    \ with type \nManual, neighbourSystemType End system and  \nstate Up. Such adjacencies\
    \ provide input to the Update \nProcess in a similar way to adjacencies created\
    \ through the \noperation of ISO 9542. When the state changes to Up the \nadjacency\
    \ information is included in the Intermediate Sys\ntem's own Level 1 LSPs. \n\
    NOTE - Manual End system adjacencies shall not be in\ncluded in a Level 1 LSPs\
    \ issued on behalf of a pseudonode, \nsince that would presuppose that all Intermediate\
    \ systems on \na broadcast subnetwork had the same set of manual adjacen\ncies\
    \ as defined for this circuit.\nMetrics assigned to Manual adjacencies must be\
    \ Internal \nmetrics.\n7.3.3.2 Reachable Addresses\nA Level 2 Intermediate system\
    \ may have a number of \nReachable Address managed objects created by System \n\
    management. When a Reachable Address is in state On \nand its parent Circuit is\
    \ also in state On, the name and \neach of its defined routeing metrics shall\
    \ be included in \nLevel 2 LSPs generated by this system. \nMetrics assigned to\
    \ Reachable Address managed objects \nmay be either Internal or External.\nA reachable\
    \ address is considered to be active when all \nthe following conditions are true:\n\
    a)The parent circuit is in state On;\nb)the Reachable Address is in state On;\
    \ and\nc)the parent circuit is of type broadcast or is in data link \nstate Running.\n\
    Whenever a reachable address changes from being inac\ntive to active a signal\
    \ shall be generated to the Update \nprocess to cause it to include the Address\
    \ Prefix of the \nreachable address in the Level 2 LSPs generated by that \nsystem\
    \ as described in 7.3.9.\nWhenever a reachable address changes from being active\
    \ \nto inactive, a signal shall be generated to the Update \nprocess to cause\
    \ it to cease including the Address Prefix of \nIn such cases, a system may use\
    \ multiple LSPs to convey \nthis information. Each LSP in the set carries the\
    \ same \nsourceID field (see clause 9), but sets its own LSP Num\nber field individually.\
    \ Each of the several LSPs is handled \nindependently by the Update Process, thus\
    \ allowing distri\nbution of topology updates to be pipelined. However, the \n\
    Decision Process recognises that they all pertain to a com\nmon originating system\
    \ because they all use the same \nsourceID.\nNOTE - Even if the amount of information\
    \ is small enough \nto fit in a single LSP, a system may optionally choose to\
    \ use \nseveral LSPs to convey it; use of a single LSP in this situ\nation is\
    \ not mandatory.\nNOTE - In order to minimise the transmission of redundant \n\
    information, it is advisable for an IS to group Reachable  \nAddress Prefix information\
    \ by the circuit with which it is as\nsociated. Doing so will ensure that the\
    \ minimum  number of \nLSP fragments need be transmitted if a circuit to another\
    \ \nrouteing domain changes state.\ntem management. If this is not done, some\
    \ adjacencies will \nfail to initialise.\nThe IS shall treat the LSP with LSP\
    \ Number zero in a spe\ncial way, as follows:\na)The following fields are meaningful\
    \ to the decision \nprocess only when they are present in the LSP with \nLSP Number\
    \ zero:\n1)The setting of the LSP Database Overload bit. \n2)The value of the\
    \ IS Type field. \n3)The Area Addresses option. (This is only present \nin the\
    \ LSP with LSP Number zero, see below).\nb)When the values of any of the above\
    \ items are \nchanged, an Intermediate System shall re-issue the \nLSP with LSP\
    \ Number zero, to inform other Interme\ndiate Systems of the change. Other LSPs\
    \ need not be \nreissued.\nOnce a particular adjacency has been assigned to a\
    \ particu\nlar LSP Number, it is desirable that it not be moved to an\nother LSP\
    \ Number. This is because moving an adjacency \nfrom one LSP to another can cause\
    \ temporary loss of \nconnectivity to that system. This can occur if the new ver\n\
    sion of the LSP which originally contained information \nabout the adjacency (which\
    \ now does not contain that infor\nmation) is propagated before the new version\
    \ of the other \nLSP (which now contains the information about the adja\ncency).\
    \ In order to minimise the impact of this, the follow\ning restrictions are placed\
    \ on the assignment of information \nto LSPs.\na)The Area Addresses option field\
    \ shall occur only in \nthe LSP with LSP Number  zero.\nb)Intermediate System\
    \ Neighbours options shall occur \nafter the Area Addresses option and before\
    \ any End \nSystem (or in the case of Level 2, Prefix) Neigh\nbours options.\n\
    c)End System (or Prefix) Neighbour options (if any) \nshall occur after any Area\
    \ Address or Intermediate \nSystem Neighbour options.\nNOTE  In this context,\
    \ after means at a higher octet \nnumber from the start of the same LSP or in\
    \ an LSP with \na higher LSP Number. \nNOTE  An implementation is recommended\
    \ to ensure \nthat the number of LSPs generated for a particular system \nis within\
    \ approximately 10% of the optimal number \nwhich would be required if all LSPs\
    \ were densely packed \nwith neighbour options. Where possible this should be\
    \ \naccomplished by re-using space in LSPs with a lower \nLSP Number for new adjacencies.\
    \ If it is necessary to \nmove an adjacency from one LSP to another, the \nSRMflags\
    \ (see 7.3.15) for the two new LSPs shall be \nset as an atomic action.44If the\
    \ two SRMflags are not set atomically, a\nrace condition will exist in which one\
    \ of the two LSPs may be\npropagated quickly, while the other waits for \nan entire\
    \ propagation cycle. If this occurs, adjacencies will be\nfalsely eliminated from\
    \ the topology and routes may become unstable for\nperiod of time \npotentially\
    \ as large as maximumLSPGeneratonInterval.\nWhen some event requires changing\
    \ the LSP information \nfor a system, the system shall reissue that (or those)\
    \ LSPs \nwhich would have different contents. It is not required to \nreissue\
    \ the unchanged LSPs. Thus a single End system ad\n7.3.5 Periodic LSP Generation\n\
    The Update Process shall periodically re-generate and \npropagate on every circuit\
    \ with an IS adjacency of the ap\npropriate level (by setting SRMflag on each\
    \ circuit), all the \nLSPs (Level 1 and/or Level 2) for the local system and any\
    \ \nThese LSPs may all be generated on expiration of a single \ntimer or alternatively\
    \ separate timers may be kept for each \nLSP Number and the individual LSP generated\
    \ on expira\ntion of this timer. \n7.3.6 Event Driven LSP Generation\nIn addition\
    \ to the periodic generation of LSPs, an Interme\ndiate system shall generate\
    \ an LSP when an event occurs \nwhich would cause the information content to change.\
    \ The \nfollowing events may cause such a change.\n-an Adjacency or Circuit Up/Down\
    \ event\n-a change in Designated  Intermediate System status\n-a change in the\
    \ waiting status\nWhen such an event occurs the IS shall re-generate changed \n\
    LSP(s) with a new sequence number. If the event necessi\ntated the generation\
    \ of an LSP which had not previously \nbeen generated (for example, an adjacency\
    \ Up event for \nan adjacency which could not be accommodated in an exist\n7.3.7\
    \ Generation of Level 1 LSPs \n(non-pseudonode)\nThe Level 1 Link State PDU not\
    \ generated on behalf of a \nthe set of Intermediate system IDs of neighbouring\
    \ In\ntermediate systems formed from:\n7The set of neighbourSystemIDs with an\
    \ ap\npended zero octet (indicating non-pseudonode) \nfrom adjacencies in the\
    \ state Up, on circuits of \ntype Point-Point, In or Out, with\nxneighbourSystemType\
    \ L1 Intermediate \nSystem \nxneighbourSystemType L2 Intermediate \nSystem and\
    \ adjacencyUsage Level 2 or \nLevel1 and 2.\nThe metrics shall be set to the values\
    \ of Level 1 \nmetrick of the circuit for each supported routeing \nmetric.\n\
    7The set of l1CircuitIDs for all circuits of type \nBroadcast (i.e. the neighbouring\
    \ pseudonode \nIDs) .\nThe metrics shall be set to the values of Level 1 \nmetrick\
    \ of the circuit for each supported routeing \nmetric.\n7The set of IDs with an\
    \ appended zero octet derived \nfrom the Network Entity Titles of all Virtual\
    \ Adja\ncencies of this IS. (Note that the Virtual Flag is set \nwhen encoding\
    \ these entries in the LSP  see \n7.2.10.)\nThe default metric shall be set to\
    \ the total cost to \nthe virtual NET for the default routeing metric. \nThe remaining\
    \ metrics shall be set to the value in\ndicating unsupported.\n-In the End System\
    \ Neighbours option  the set of \nIDs of neighbouring End systems formed from:\n\
    7The systemID of the Intermediate System itself, \nwith a value of zero for all\
    \ supported metrics.\n7The set of endSystemIDs from all adjacencies \nwith type\
    \ Auto-configured, in state Up, on \ncircuits of type Point-to-Point, In or Out,\
    \ \nwith neighbourSystemType End system. \nThe metrics shall be set to the values\
    \ of Level 1 \nmetrick of the circuit for each supported routeing \nmetric.\n\
    7The set of endSystemIDs from all adjacencies \nwith type Manual in state Up,\
    \ on all circuits. \nThe metrics shall be set to the values of Level 1 \nmetrick\
    \ of the circuit for each supported routeing \nmetric.\n-In the Authentication\
    \ Information field  if the \nsystem's areaTransmitPassword is non-null, in\n\
    clude the Authentication Information field contain\ning an Authentication Type\
    \  of Password, and the \nvalue of the areaTransmitPassword.\n7.3.8 Generation\
    \ of Level 1 Pseudonode LSPs\nAn IS shall generate a  Level 1 pseudonode Link\
    \ State PDU \nfor each circuit for which this Intermediate System is the \nLevel\
    \ 1 LAN Designated Intermediate System. The LSP \nshall specify the following\
    \ information in its variable length \nfields. In all cases a value of zero shall\
    \ be used for all sup\nported routeing metrics\n-The Area Addresses option is\
    \ not present.\nNote - This information is not required since the set of \narea\
    \ addresses for the node issuing the pseudonode \nLSP will already have been made\
    \ available via its own \nnon-pseudonode LSP.\n-In the Intermediate System Neighbours\
    \ option  \nthe set of Intermediate System IDs of neighbouring In\ntermediate\
    \ Systems on the circuit for which this \npseudonode LSP is being generated formed\
    \ from:\n7The Designated Intermediate System's own sys\ntemID with an appended\
    \ zero octet (indicating \nnon-pseudonode). \n7The set of neighbourSystemIDs with\
    \ an ap\npended zero octet (indicating non-pseudonode) \nfrom adjacencies on this\
    \ circuit in the state Up, \nwith  \nxneighbourSystemType L1 Intermediate \nSystem\n\
    xL2 Intermediate System and adjacency\nUsage Level 1.\n-In the End System Neighbours\
    \ option  the set of \nIDs of neighbouring End systems formed from:\n7The set\
    \ of endSystemIDs from all adjacencies \nwith type Auto-configured, in state Up,\
    \ on \nthe circuit for which this pseudonode is being gen\nerated, with neighbourSystemType\
    \ End sys\ntem. \n-In the Authentication Information field  if the \nsystem's\
    \ areaTransmitPassword is non-null, in\nclude the Authentication Information field\
    \ contain\ning an Authentication Type  of Password, and the \nvalue of the areaTransmitPassword.\n\
    7.3.9 Generation of Level 2 LSPs \n(non-pseudonode)\nThe Level 2 Link State PDU\
    \ not generated on behalf of a \ndescribed in 7.2.11.\n-In the Partition Designated\
    \ Level 2 IS option  the \nID of the Partition Designated Level 2 Intermediate\
    \ \nSystem for the partition.\n-In the Intermediate System Neighbours option \
    \ \nthe set of Intermediate system IDs of neighbouring In\ntermediate systems\
    \ formed from:\n7The set of neighbourSystemIDs with an ap\npended zero octet (indicating\
    \ non-pseudonode) \nfrom adjacencies in the state Up, on circuits of \ntype Point-to-Point,\
    \ In or Out, with neigh\nbourSystemType L2 Intermediate System.\n7The set of l2CircuitIDs\
    \ for all circuits of type \nBroadcast. (i.e. the neighbouring pseudonode \nIDs)\n\
    The metric and metric type shall be set to the val\nues of Level 2 metrick of\
    \ the circuit for each sup\nported routeing metric.\n-In the Prefix Neighbours\
    \ option  the set of vari\nable length prefixes formed from: \n7The set of names\
    \ of all Reachable Address man\naged objects in state On, on all circuits in state\
    \ \nOn.\nThe metrics shall be set to the values of Level 2  \nmetrick for the\
    \ reachable address.\n-In the Authentication Information field  if the \nsystem's\
    \ domainTransmitPassword is non-null, \ninclude the Authentication Information\
    \ field con\ntaining an Authentication Type  of Password, and \nthe value of the\
    \ domainTransmitPassword.\n7.3.10 Generation of Level 2 Pseudonode LSPs\nA Level\
    \ 2 pseudonode Link State PDU is generated for \neach circuit for which this Intermediate\
    \ System is the \nLevel 2 LAN Designated Intermediate System and contains \nthe\
    \ following information in its variable length fields. In all \ncases a value\
    \ of zero shall be used for all supported route\ning metrics.\n-The Area Addresses\
    \ option is not present.\nNote - This information is not required since the set\
    \ of \narea addresses for the node issuing the pseudonode \nLSP will already have\
    \ been made available via its own \nnon-pseudonode LSP.\n-In the Intermediate\
    \ System Neighbours option  \nthe set of Intermediate System IDs of neighbouring\
    \ In\ntermediate Systems on the circuit for which this \npseudonode LSP is being\
    \ generated formed from: \n7The Designated Intermediate System's own sys\ntemID\
    \ with an appended zero octet (indicating \nnon-pseudonode). \n7The set of neighbourSystemIDs\
    \ with an ap\npended zero octet (indicating non-pseudonode) \nfrom adjacencies\
    \ on this circuit in the state Up \nwith neighbourSystemType L2 Intermediate \n\
    System.\n-The Prefix Neighbours option is not present.\n-In the Authentication\
    \ Information field  if the \nsystem's domainTransmitPassword is non-null, \n\
    include the Authentication Information field con\ntaining an Authentication Type\
    \  of Password, and \nthe value of the domainTransmitPassword.\n7.3.11 Generation\
    \ of the Checksum\nThis International Standard makes use of the checksum \nfunction\
    \ defined in ISO 8473.\nThe source IS shall compute the LSP Checksum when the\
    \ \nLSP is generated. The checksum shall never be modified by \nany other system.\
    \ The checksum allows the detection of \nmemory corruptions and thus prevents\
    \ both the use of in\ncorrect routeing information and its further propagation\
    \ by \nthe Update Process. \nThe checksum shall be computed over all fields in\
    \ the LSP \nwhich appear after the Remaining Lifetime field. This \nfield (and\
    \ those appearing before it) are excluded so that the \nLSP may be aged by systems\
    \ without requiring re-\ncomputation. \nAs an additional precaution against hardware\
    \ failure, when \nthe source computes the Checksum, it shall start with the \n\
    two checksum variables (C0 and C1) initialised to what \nthey would be after computing\
    \ for the systemID portion \n(i.e. the first 6 octets) of its Source ID. (This\
    \ value is com\nputed and stored when the Network entity is enabled and \nwhenever\
    \ systemID changes.) The IS shall then resume \nChecksum computation on the contents\
    \ of the PDU after \nthe first ID Length octets of the Source ID field.\nNOTE\
    \ - All Checksum calculations on the LSP are per\nformed treating the Source ID\
    \ field as the first octet. This \nprocedure prevents the source from accidentally\
    \ sending out \nLink State PDUs with some other system's ID as source. \n7.3.12\
    \ Initiating Transmission\nThe IS shall store the generated Link State PDU in\
    \ the Link \nState Database, overwriting any previous Link State PDU \nwith the\
    \ same LSP Number generated by this system. The \nIS shall then set all SRMflags\
    \ for that Link State PDU, in\ndicating it is to be propagated on all circuits\
    \ with Intermedi\nate System adjacencies. \nAn Intermediate system shall ensure\
    \ (by reserving re\nsources, or otherwise) that it will always be able to store\
    \ \nand internalise its own non-pseudonode zeroth LSP. In the \nevent that it\
    \ is not capable of storing and internalising one \nof its own LSPs it shall enter\
    \ the overloaded state as de\nscribed in 7.3.19.1.\nNOTE - It is recommended that\
    \ an Intermediate system en\nsure (by reserving resources, or otherwise) that\
    \ it will al\nways be able to store and internalise all its own (zero and \nnon-zero,\
    \ pseudonode and non-pseudonode) LSPs.\n7.3.13 Preservation of order\nWhen an\
    \ existing Link State PDU is re-transmitted (with \nthe same or a different sequence\
    \ number), but with the \nsame information content (i.e. the variable length part)\
    \ as a \nresult of there having been no changes in the local topology \ndatabases,\
    \ the order of the information in the variable \nlength part shall be the same\
    \ as that in the previously trans\nmitted LSP.\nNOTE - If a sequence of changes\
    \ result in the state of the \ndatabase returning to some previous value, there\
    \ is no re\nquirement to preserve the ordering. It is only required when \nthere\
    \ have been no changes whatever. This allows the re\nceiver to detect that there\
    \ has been no change in the infor\nmation content by performing an octet for octet\
    \ comparison \nof the variable length part, and hence not re-run the decision\
    \ \nprocess. \n7.3.14 Propagation of LSPs\nThe update process is responsible for\
    \ propagating Link \nState PDUs throughout the domain (or in the case of \nLevel\
    \ 1, throughout the area).\nThe basic mechanism is flooding, in which each Intermedi\n\
    ate system propagates to all its neighbour Intermediate sys\ntems except that\
    \ neighbour from which it received the \nPDU. Duplicates are detected and dropped.\n\
    Link state PDUs are received from the Receive Process. \nception, storage and\
    \ forwarding of received Link State \nPDUs and Sequence Numbers PDUs.)  If a control\
    \ PDU \nlarger than this size is received, it shall be treated as if it \nhad\
    \ an invalid checksum (i.e. ignored by the Update Proc\ness and a corruptedLSPReceived\
    \ notification generated).\nUpon receipt of a Link State PDU the Update Process\
    \ shall \nperform the following functions:\na)Level 2 Link State PDUs shall be\
    \ propagated on cir\ncuits which have at least one Level 2 adjacency. \nb)Level\
    \ 1 Link State PDUs shall be propagated on cir\ncuits which have at least one\
    \ Level 1 adjacency or at \nleast one Level 2 adjacency not marked Level 2 \n\
    only. \nc)When propagating a Level 1 Link State PDU on a \nbroadcast subnetwork,\
    \ the IS shall transmit to the \nmulti-destination subnetwork address AllL1IS.\
    \ \nd)When propagating a Level 2 Link State PDU on a \nbroadcast subnetwork, the\
    \ IS shall transmit to the \nmulti-destination subnetwork address AllL2IS.\nNOTE\
    \  When propagating a Link State PDU on a \ngeneral topology subnetwork the Data\
    \ Link Address \nis unambiguous (because Link State PDUs are not \npropagated\
    \ across Dynamically Assigned circuits). \ne)An Intermediate system receiving\
    \ a Link State PDU \nwith an incorrect LSP Checksum or with an invalid \nPDU syntax\
    \ shall \n1)log a circuit notification, corruptedLSPRe\nceived, \n2)overwrite\
    \ the Checksum and Remaining Lifetime \nwith 0, and \n3)treat the Link State PDU\
    \ as though its Remaining \nLifetime had expired (see 7.3.16.4.)\nf)A Intermediate\
    \ system receiving a Link State PDU \nwhich is new (as identified in 7.3.16) shall\n\
    1)store the Link State PDU into Link State database, \nand \n2)mark it as needing\
    \ to be propagated upon all cir\ncuits except that upon which it was received.\
    \ \ng)When a Intermediate system receives a Link State \nPDU from source S, which\
    \ it considers older than the \none stored in the database for S, it shall set\
    \ the \nSRMflag for S's Link State PDU associated with the \ncircuit from which\
    \ the older Link State PDU was re\nceived. This indicates that the stored Link\
    \ State PDU \nneeds to be sent on the link from which the older one \nwas received.\n\
    h)When a system receives a Link State PDU which is \nthe same (not newer or older)\
    \ as the one stored, the In\ntermediate system shall\n1)acknowledge it if necessary,\
    \ as described in 7.3.17, \nand \n2)clear the SRMflag for that circuit for that\
    \ Link \nState PDU. \ni)A Link State PDU received with a zero checksum \nshall\
    \ be treated as if the Remaining Lifetime were 0. \nThe age, if not 0, shall be\
    \ overwritten with 0.\nThe Update Process scans the Link State Database for Link\
    \ \nb)update lastSent.\n7.3.15 Manipulation of SRM and SSN Flags\nFor each Link\
    \ State PDU, and for each circuit over which \nrouteing messages are to be exchanged\
    \ (i.e. not on DA cir\ncuits), there are two flags:\nSend Routeing Message (SRMflag)\
    \  if set, indicates that \nLink State PDU should be transmitted on that cir\n\
    cuit.  On broadcast circuits SRMflag is cleared as \nsoon as the LSP has been\
    \ transmitted, but on non-\nbroadcast circuits SRMflag is only cleared on recep\n\
    tion of a Link State PDU or Sequence Numbers \nPDU as described below.\n\tSRMflag\
    \ shall never be set for an LSP with se\nquence number zero, nor on a circuit\
    \ whose exter\nnalDomain attribute is True (See 7.3.15.2).\nSend Sequence Numbers\
    \ (SSNflag)  if set, indicates that \ninformation about that Link State PDU should\
    \ be in\ncluded in a Partial Sequence Numbers PDU trans\nmitted on that circuit.\
    \  When the Sequence Numbers \nPDU has been transmitted SSNflag is cleared.  Note\
    \ \nthat the Partial Sequence Numbers PDU serves as an \nacknowledgement that\
    \ a Link State PDU was re\nceived.\n\tSSNflag shall never be set on a circuit\
    \ whose ex\nternalDomain attribute is True.\n7.3.15.1 Action on Receipt of a Link\
    \ State PDU\n When a Link State PDU is received on a circuit C, the IS \nshall\
    \ perform the following functions\na)Perform the following PDU acceptance tests:\n\
    1)If the LSP was received over a circuit whose ex\nternalDomain attribute is True,\
    \ the IS shall dis\ncard the PDU.\n2)If the ID Length field of the PDU is not\
    \ equal to \nthe value of the IS's routeingDomainIDLength, \nthe PDU shall be\
    \ discarded and an iDField\nLengthMismatch notification generated.\n3)If this\
    \ is a level 1 LSP, and the set of areaRe\nceivePasswords is non-null, then perform\
    \ the \nfollowing tests:\ni)If the PDU does not contain the Authentica\ntion Information\
    \ field then the PDU shall be \ndiscarded and an authenticationFailure no\ntification\
    \ generated.\nii)If the PDU contains the Authentication In\nformation field, but\
    \ the Authentication \nType is not equal to Password, then the \nPDU shall be\
    \ accepted unless the IS imple\nments the authenticatiion procedure indicated\
    \ \nby the Authentication Type. In this case \nwhether the IS accepts or ignores\
    \ the PDU is \noutside the scope of this International Stan\ndard.\niii)Otherwise,\
    \ the IS shall compare the password \nin the received PDU with the passwords in\
    \ the \nset of areaReceivePasswords, augmented \nby the value of the areaTransmitPassword.\
    \ \nIf the value in the PDU matches any of these \npasswords, the IS shall accept\
    \ the PDU for \nfurther processing. If the value in the PDU \ndoes not match any\
    \ of the above values, then \nthe IS shall ignore the PDU and generate an \nauthenticationFailure\
    \ notification.\n4)If this is a level 2 LSP, and the set of domainRe\nceivePasswords\
    \ is non-null, then perform the \nfollowing tests:\ni)If the PDU does not contain\
    \ the Authentica\ntion Information field then the PDU shall be \ndiscarded and\
    \ an authenticationFailure no\ntification generated.\nii)If the PDU contains the\
    \ Authentication In\nformation field, but the Authentication \nType is not equal\
    \ to Password, then the \nPDU shall be accepted unless the IS imple\nments the\
    \ authenticatiion procedure indicated \nby the Authentication Type. In this case\
    \ \nwhether the IS accepts or ignores the PDU is \noutside the scope of this International\
    \ Stan\ndard.\niii)Otherwise, the IS shall compare the password \nin the received\
    \ PDU with the passwords in the \nset of domainReceivePasswords, aug\nmented by\
    \ the value of the domainTransmit\nPassword. If the value in the PDU matches \n\
    any of these passwords, the IS shall accept the \nPDU for further processing.\
    \ If the value in the \nPDU does not match any of the above values, \nthen the\
    \ IS shall ignore the PDU and generate \nan authenticationFailure notification.\n\
    b)If the LSP has zero Remaining Lifetime, perform the \nactions described in 7.3.16.4.\n\
    c)If the source S of the LSP is an IS or pseudonode for \nwhich all but the last\
    \ octet are equal to the systemID \nof the receiving Intermediate System, and\
    \ the receiv\ning Intermediate System does not have that LSP in its \ndatabase,\
    \ or has that LSP, but no longer considers it to \nbe in the set of LSPs generated\
    \ by this system (e.g. it \nwas generated by a previous incarnation of the sys\n\
    tem), then initiate a network wide purge of that LSP as \ndescribed in 7.3.16.4.\n\
    d)If the source S of the LSP is a system (pseudonode or \notherwise) for which\
    \ the first ID Length octets are \nequal to the systemID of the receiving Intermediate\
    \ \nsystem, and the receiving Intermediate system has an \nLSP in the set of currently\
    \ generated LSPs from that \nsource in its database (i.e. it is an LSP generated\
    \ by \nthis Intermediate system), perform the actions de\nscribed in 7.3.16.1.\
    \ \ne)Otherwise, (the source S is some other system),\n1)If the LSP is newer than\
    \ the one in the database, or \nif an LSP from that source does not yet exist\
    \ in the \ndatabase: \ni)Store the new LSP in the database, overwriting \nthe\
    \ existing database LSP for that source (if \nany) with the received LSP. \nii)Set\
    \ SRMflag for that LSP for all circuits \nother than C. \niii)Clear SRMflag for\
    \ C. \niv)If C is a non-broadcast circuit, set SSNflag \nfor that LSP for C. \n\
    v)Clear SSNflag for that LSP for the circuits \nother than C.\n2)If the LSP is\
    \ equal to the one in the database (same \nSequence Number, Remaining Lifetimes\
    \ both zero \nor both non-zero, same checksums):\ni)Clear SRMflag for C. \nii)If\
    \ C is a non-broadcast circuit, set SSNflag \nfor that LSP for C.\n3)If the LSP\
    \ is older than the one in the database:\ni)Set SRMflag for C. \nii)Clear SSNflag\
    \ for C.\nWhen storing a new LSP, the Intermediate system shall first \nensure\
    \ that it has sufficient memory resources to both store \nthe LSP and generate\
    \ whatever internal data structures will \nbe required to process the LSP by the\
    \ Update Process.  If \nthese resources are not available the LSP shall be ignored.\
    \ \nIt shall neither be stored nor acknowledged. When an LSP \nis ignored for\
    \ this reason the IS shall enter the Waiting \nState. (See 7.3.19).\nWhen attempting\
    \ to store a new version of an existing LSP \n(with the same LSPID), which has\
    \ a length less than or \nequal to that of the existing LSP, the existing LSP\
    \ shall be \nremoved from the routeing information base and the new \nLSP stored\
    \ as a single atomic action. This ensures that such \nan LSP (which may be carrying\
    \ the LSP Database Overload \nindication from an overloaded IS) will never be\
    \ ignored as \na result of a lack of memory resources.\n7.3.15.2 Action on Receipt\
    \ of a Sequence Numbers \nPDU\nWhen a Sequence Numbers PDU (Complete or Partial,\
    \ see \n7.3.17) is received on circuit C the IS shall perform the fol\nlowing\
    \ functions:\na)Perform the following PDU acceptance tests:\n1)If the SNP was\
    \ received over a circuit whose ex\nternalDomain attribute is True, the IS shall\
    \ dis\ncard the PDU.\nceivePasswords is non-null, then perform the \nfollowing\
    \ tests:\ni)If the PDU does not contain the Authentica\ntion Information field\
    \ then the PDU shall be \ndiscarded and an authenticationFailure no\ntification\
    \ generated.\nii)If the PDU contains the Authentication In\nformation field, but\
    \ the Authentication \nType is not equal to Password, then the \nPDU shall be\
    \ accepted unless the IS imple\nments the authenticatiion procedure indicated\
    \ \nby the Authentication Type. In this case \nwhether the IS accepts or ignores\
    \ the PDU is \noutside the scope of this International Stan\ndard.\niii)Otherwise,\
    \ the IS shall compare the password \nin the received PDU with the passwords in\
    \ the \nset of areaReceivePasswords, augmented \nby the value of the areaTransmitPassword.\
    \ \nIf the value in the PDU matches any of these \npasswords, the IS shall accept\
    \ the PDU for \nfurther processing. If the value in the PDU \ndoes not match any\
    \ of the above values, then \nthe IS shall ignore the PDU and generate an \nauthenticationFailure\
    \ notification.\n4)If this is a level 2 SNP, and the set of domainRe\nceivePasswords\
    \ is non-null, then perform the \nfollowing tests:\ni)If the PDU does not contain\
    \ the Authentica\ntion Information field then the PDU shall be \ndiscarded and\
    \ an authenticationFailure no\ntification generated.\nii)If the PDU contains the\
    \ Authentication In\nformation field, but the Authentication \nType is not equal\
    \ to Password, then the \nPDU shall be accepted unless the IS imple\nments the\
    \ authenticatiion procedure indicated \nby the Authentication Type. In this case\
    \ \nwhether the IS accepts or ignores the PDU is \noutside the scope of this International\
    \ Stan\ndard.\niii)Otherwise, the IS shall compare the password \nin the received\
    \ PDU with the passwords in the \nset of domainReceivePasswords, aug\nmented by\
    \ the value of the domainTransmit\nPassword. If the value in the PDU matches \n\
    any of these passwords, the IS shall accept the \nPDU for further processing.\
    \ If the value in the \nPDU does not match any of the above values, \nthen the\
    \ IS shall ignore the PDU and generate \nan authenticationFailure notification.\n\
    b)For each LSP reported in the Sequence Numbers \nPDU:\n1)If the reported value\
    \ equals the database value and \nC is a non-broadcast circuit, Clear SRMflag\
    \ for C \nfor that LSP. \n2)If the reported value is older than the database \n\
    value, Clear SSNflag, and Set SRMflag.  \n3)If the reported value is newer than\
    \ the database \nvalue, Set SSNflag, and if C is a non-broadcast \ncircuit Clear\
    \ SRMflag. \n4)If no database entry exists for the LSP, and the re\nported Remaining\
    \ Lifetime, Checksum and Se\nquence Number fields of the LSP are all non-\nzero,\
    \ create an entry with sequence number 0 (see \n7.3.16.1), and set SSNflag for\
    \ that entry and cir\ncuit C.  Under no circumstances shall SRMflag be \nset for\
    \ such an LSP with zero sequence number. \nNOTE - This is because possessing a\
    \ zero sequence \nnumber LSP is semantically equivalent to having no \ninformation\
    \ about that LSP.  If such LSPs were \npropagated by setting SRMflag it would\
    \ result in an \nunnecessary consumption of both bandwidth and \nmemory resources.\n\
    c)If the Sequence Numbers PDU is a Complete Se\nquence Numbers PDU, Set SRMflags\
    \ for C for all \nLSPs in the database (except those with zero sequence \nnumber\
    \ or zero remaining lifetime) with LSPIDs \nwithin the range specified for the\
    \ CSNP by the Start \nLSPID and End LSPID fields, which were not men\ntioned in\
    \ the Complete Sequence Numbers PDU (i.e. \nLSPs this system has, which the neighbour\
    \ does not \nclaim to have).\n7.3.15.3 Action on expiration of Complete SNP \n\
    Interval\nThe IS shall perform the following actions every \nCompleteSNPInterval\
    \ seconds for circuit C:\na)If C is a broadcast circuit, then\n1)If this Intermediate\
    \ system is a Level 1 Designated \nIntermediate System on circuit C, transmit\
    \ a com\nplete set of Level 1 Complete Sequence Numbers \nPDUs on circuit C. Ignore\
    \ the setting of SSNflag \non Level 1 Link State PDUs.\nIf the value of the IS's\
    \ areaTransmitPassword \nis non-null, then the IS shall include the Authenti\n\
    cation Information field in the transmitted \nCSNP, indicating an Authentication\
    \ Type of \nPassword and containing the areaTransmit\nPassword as the authentication\
    \ value.\n2)If this Intermediate system is a Level 2 Designated \nIntermediate\
    \ System on circuit C, transmit a com\nplete set of Level 2 Complete Sequence\
    \ Numbers \nPDUs on circuit C. Ignore the setting of SSNflag \non Level 2 Link\
    \ State PDUs.\nIf the value of the IS's domainTransmitPass\nword is non-null,\
    \ then the IS shall include the \nAuthentication Information field in the trans\n\
    mitted CSNP, indicating an Authentication Type \nof Password and containing the\
    \ domainTrans\nmitPassword as the authentication value.\nA complete set of CSNPs\
    \ is a set whose startLSPID \nand endLSPID ranges cover the complete possible\
    \ \nrange of LSPIDs. (i.e. there is no possible LSPID \nvalue which does not appear\
    \ within the range of one \nb)Otherwise (C is a point to point circuit, including\
    \ non-\nDA DED circuits and virtual links), do nothing. \nCSNPs are only transmitted\
    \ on point to point circuits \nat initialisation.\n7.3.15.4 Action on expiration\
    \ of Partial SNP \nInterval\nonds for circuit C with jitter applied as described\
    \ in 10.1:\na)If C is a broadcast circuit, then\nC, transmit a Level 1 Partial\
    \ Sequence Numbers \nPDU on circuit C, containing entries for as many \nLevel\
    \ 1 Link State PDUs with SSNflag set as will \nfit in the PDU, and then clear\
    \ SSNflag for these \nentries. To avoid the possibility of starvation, the \n\
    scan of the LSP database for those with SSNflag \nset shall commence with the\
    \ next LSP which was \nnot included in the previous scan. If there were no \n\
    Level 1 Link State PDUs with SSNflag set, do \nnot transmit a Level 1 Partial\
    \ Sequence Numbers \nPDU. \nIf the value of the IS's areaTransmitPassword \nis\
    \ non-null, then the IS shall include the Authenti\ncation Information field in\
    \ the transmitted \nPSNP, indicating an Authentication Type of \nPassword and\
    \ containing the areaTransmit\nPassword as the authentication value.\n2)If this\
    \ Intermediate system is a Level 2 Intermedi\nate System, but is not a Level 2\
    \ Designated Inter\nmediate System on circuit C, transmit a Level 2 \nPartial\
    \ Sequence Numbers PDU on circuit C, con\ntaining entries for as many Level 2\
    \ Link State \nPDUs with SSNflag set as will fit in the PDU, \nand then clear\
    \ SSNflag for these entries. To avoid \nthe possibility of starvation, the scan\
    \ of the LSP \ndatabase for those with SSNflag set shall com\nmence with the next\
    \ LSP which was not included \nin the previous scan. If there were no Level 2\
    \ Link \nState PDUs with SSNflag set, do not transmit a \nLevel 2 Partial Sequence\
    \ Numbers PDU. \nIf the value of the IS's domainTransmitPass\nword is non-null,\
    \ then the IS shall include the \nAuthentication Information field in the trans\n\
    mitted PSNP, indicating an Authentication Type \nof Password and containing the\
    \ domainTrans\nmitPassword as the authentication value.\nb)Otherwise (C is a point\
    \ to point circuit, including non-\nDA DED circuits and virtual links)\n1)If this\
    \ system is a Level 1 Intermediate system, \ntransmit a Level 1 Partial Sequence\
    \ Numbers PDU \non circuit C, containing entries for as many Level \n1 Link State\
    \ PDUs with SSNflag set as will fit in \nthe PDU, and then clear SSNflag for these\
    \ en\ntries. To avoid the possibility of starvation, the \nscan of the LSP database\
    \ for those with SSNflag \nset shall commence with the next LSP which was \nnot\
    \ included in the previous scan. If there were no \nLevel 1 Link State PDUs with\
    \ SSNflag set, do \nnot transmit a Partial Sequence Numbers PDU.\nIf the value\
    \ of the IS's areaTransmitPassword \nis non-null, then the IS shall include the\
    \ Authenti\ncation Information field in the transmitted \nPSNP, indicating an\
    \ Authentication Type of \nPassword and containing the areaTransmit\nPassword\
    \ as the authentication value.\n2)If this system is a Level 2 Intermediate system,\
    \ \ntransmit a Level 2 Partial Sequence Numbers PDU \non circuit C, containing\
    \ entries for as many Level \n2 Link State PDUs with SSNflag set as will fit in\
    \ \nthe PDU, and then clear SSNflag for these en\ntries. To avoid the possibility\
    \ of starvation, the \nscan of the LSP database for those with SSNflag \nset shall\
    \ commence with the next LSP which was \nnot included in the previous scan. If\
    \ there were no \nLevel 2 Link State PDUs with SSNflag set, do \nnot transmit\
    \ a Partial Sequence Numbers PDU.\nIf the value of the IS's domainTransmitPass\n\
    word is non-null, then the IS shall include the \nAuthentication Information field\
    \ in the trans\nmitted PSNP, indicating an Authentication Type \nof Password and\
    \ containing the domainTrans\nmitPassword as the authentication value.\na)For\
    \ all Point to Point circuits C transmit all LSPs that \nhave SRMflag set on circuit\
    \ C, but do not clear the \nSRMflag. The SRMflag will subsequently be \ncleared\
    \ by receipt of a Complete or Partial Sequence \nSystem on the LAN.\nSetting SRMflags\
    \ on an LSP for a broadcast circuit does \nwhich have SRMflags set for this circuit,\
    \ one LSP shall be \nchosen at random. This LSP shall be multicast on the cir\n\
    cuit, and SRMflags cleared.\nNOTE - In practice it would be very inefficient to\
    \ scan the \nwhole database at this rate, particularly when only a few \nLSPs\
    \ had SRMflags set.  Implementations may require ad\nditional data structures\
    \ in order to reduce this overhead.\nNOTE - An IS is permitted to transmit a small\
    \ number of \nIn addition, the presence of any LSPs which have been re\nceived\
    \ on a particular circuit and are queued awaiting proc\nessing shall inhibit transmission\
    \ of LSPs on that circuit. \nHowever, LSPs may be transmitted at a minimum rate\
    \ of \none per second even in the presence of such a queue.\n7.3.16 Determining\
    \ the Latest Information\nThe Update Process is responsible for determining, given\
    \ a \nreceived link state PDU, whether that received PDU repre\nsents new, old,\
    \ or duplicate information with respect to \nwhat is stored in the database.\n\
    It is also responsible for generating the information upon \nwhich this determination\
    \ is based, for assigning a sequence \nnumber to its own Link State PDUs upon\
    \ generation, and \nfor correctly adjusting the Remaining Lifetime field upon\
    \ \nbroadcast of a link state PDU generated originally by any \nsystem in the\
    \ domain.\n7.3.16.1 Sequence Numbers\nThe sequence number is a 4 octet unsigned\
    \ value. Sequence \nnumbers shall increase from zero to (SequenceModulus \n- 1).\
    \ When a system initialises, it shall start with sequence \nnumber 1 for its own\
    \ Link State PDUs.55It starts with 1 rather than 0\nso that the value 0 can be\
    \ reserved to be guaranteed to be less than\nthe sequence number of any actually\
    \ generated Link State \nPDU. This is a useful property for Sequence Numbers PDUs.\n\
    The sequence numbers the Intermediate system generates \nfor its Link State PDUs\
    \ with different values for LSP num\nber are independent. The algorithm for choosing\
    \ the num\nbers is the same, but operationally the numbers will not be \nsynchronised.\
    \ \nIf an Intermediate system R somewhere in the domain has \ninformation that\
    \ the current sequence number for source S \nis greater than that held by S, R\
    \ will return to S a Link State \nPDU for S with R's value for the sequence number.\
    \ When S \nreceives this LSP it shall change its sequence number to be \nthe next\
    \ number greater than the new one received, and \nshall generate a link state\
    \ PDU.\nleast MaxAge + ZeroAgeLifetime, in order to be sure \nthat any versions\
    \ of this LSP with the high sequence num\nber have expired. When it is re-enabled\
    \ the IS shall start \nagain with sequence number 1.\n7.3.16.2 LSP Confusion\n\
    It is possible for an LSP generated by a system in a previ\nous incarnation to\
    \ be alive in the domain and have the same \nsequence number as the current LSP.\n\
    To ensure database consistency among the Intermediate \nSystems, it is essential\
    \ to distinguish two such PDUs. This \nis done efficiently by comparing the checksum\
    \ on a re\nceived LSP with the one stored in memory.\nIf the sequence numbers\
    \ match, but the checksums do not \nand the LSP is not in the current set of LSPs\
    \ generated by \nthe local system, then the system that notices the mismatch \n\
    shall treat the LSP as if its Remaining Lifetime had expired. \nIt shall store\
    \ one of the copies of the LSP, with zero written \nas the Remaining Lifetime,\
    \ and flood the LSP.\nIf the LSP is in the current set of LSPs generated by the\
    \ lo\ncal system then the IS shall change the LSP's sequence \nnumber to be the\
    \ next number greater than that of the re\nceived LSP and regenerate the LSP.\n\
    7.3.16.3 Remaining Lifetime field\nWhen the source generates a link state PDU,\
    \ it shall set the \nRemaining Lifetime to MaxAge. \nWhen a system holds the information\
    \ for some time before \nsuccessfully transmitting it to a neighbour, that system\
    \ shall \ndecrement the Remaining Lifetime field according to the \nholding time.\
    \ Before transmitting a link state PDU to a \nneighbour, a system shall decrement\
    \ the Remaining Life\ntime in the PDU being transmitted by at least 1, or more\
    \ \nthan 1  if the transit time to that neighbour is estimated to \nbe greater\
    \ than one second. When the Remaining Lifetime \nfield reaches 0, the system shall\
    \ purge that Link State PDU \nfrom its database. In order to keep the Intermediate\
    \ Sys\ntems' databases synchronised, the purging of an LSP due to \nRemaining\
    \ Lifetime expiration is synchronised by flooding \nan expired LSP. See 7.3.16.4.\n\
    If the RemainingLifetime of the received LSP is zero it \nshall be processed as\
    \ described in 7.3.16.4. If the Remain\ning Lifetime of the received LSP is non-zero,\
    \ but there is an \nLSP in the database with the same sequence number and \nzero\
    \ Remaining Lifetime, the LSP in the database shall be \nconsidered most recent.\
    \ Otherwise, the PDU with the larger \nsequence number shall be considered the\
    \ most recent.\nIf the value of Remaining Lifetime is greater than  \nMaxAge,\
    \ the LSP shall be processed as if there were a \nchecksum error.\n7.3.16.4  LSP\
    \ Expiration Synchronisation \nWhen the Remaining Lifetime on an LSP in memory\
    \ be\ncomes zero, the IS shall\na)set all SRMflags for that LSP, and \nb)retain\
    \ only the LSP header.\nc)record the time at which the Remaining Lifetime for\
    \ \nthis LSP became zero. When ZeroAgeLifetime has \nelapsed since the LSP Remaining\
    \ Lifetime became \nzero, the LSP header shall be purged from the data\nbase.\
    \ \nNOTE - A check of the checksum of a zero Remaining Life\ntime LSP succeeds\
    \ even though the data portion is not pre\nsent\nWhen a purge of an LSP with non-zero\
    \ Remaining Lifetime \nis initiated, the header shall be retained for MaxAge.\n\
    If an LSP from source S with zero Remaining Lifetime is \nreceived on circuit\
    \ C :\na)If no LSP from S is in memory, then the IS shall\n1)send an acknowledgement\
    \ of the LSP on circuit C, \nbut \n2)shall not retain the LSP after the acknowledgement\
    \ \nhas been sent. \nb)If an LSP from S is in the database, then\n1)If the received\
    \ LSP is newer than the one in the da\ntabase (i.e. received LSP has higher sequence\
    \ \nnumber, or same sequence number and database \nLSP has non-zero Remaining\
    \ Lifetime) the IS \nshall:\ni)overwrite the database LSP with the received \n\
    LSP, and note the time at which the zero Re\nmaining Lifetime LSP was received,\
    \ so that \nafter ZeroAgeLifetime has elapsed, that LSP \ncan be purged from the\
    \ database,  \nii)set SRMflag for that LSP for all circuits other \nthan C,\n\
    iii)clear SRMflag for C,\niv)if C is a non-broadcast circuit, set SSNflag \nfor\
    \ that LSP for C, and \nv)clear SSNflag for that LSP for the circuits \nother\
    \ than C.\n2)If the received LSP is equal to the one in the data\nbase (i.e. same\
    \ Sequence Number, Remaining \nLifetimes both zero) the IS shall:\ni)clear SRMflag\
    \ for C, and\nii)if C is a non-broadcast circuit, set SSNflag \nfor that LSP for\
    \ C.\n3)If the received LSP is older than the one in the da\ntabase (i.e. received\
    \ LSP has lower sequence num\nber) the IS shall:\ni)set SRMflag for C, and\nii)clear\
    \ SSNflag for C.\nc)If this system (or pseudonode) is S and there is an un-\n\
    expired LSP from S (i.e. its own LSP) in memory, \nthen the IS:\n1)shall not overwrite\
    \ with the received LSP, but \n2)shall change the sequence number of the un-\n\
    expired LSP from S as described in 7.3.16.1, \n3)generate a new LSP; and \n4)set\
    \ SRMflag on all circuits.\n7.3.17 Making the Update Reliable\nThe update process\
    \ is responsible for making sure the latest \nlink state PDUs reach every reachable\
    \ Intermediate System \nin the domain.\nOn point-to-point links the Intermediate\
    \ system shall send \nan explicit acknowledgement encoded as a Partial Sequence\
    \ \nNumbers PDU (PSNP) containing the following informa\ntion: \na)source's ID\
    \ \nb)PDU type (Level 1 or 2) \nc)sequence number \nd)Remaining Lifetime \ne)checksum\n\
    This shall be done for all received link state PDUs which \nare newer than the\
    \ one in the database, or duplicates of the \none in the database. Link state\
    \ PDUs which are older than \nthat stored in the database are answered instead\
    \ by a newer \nlink state PDU, as specified in 7.3.14 above. \nOn broadcast links,\
    \ instead of explicit acknowledgements \nfor each link state PDU by each Intermediate\
    \ system, a spe\ncial PDU known as a Complete Sequence Numbers PDU \n(CSNP), shall\
    \ be multicast periodically by the Designated \nIntermediate System. The PDU shall\
    \ contain a list of all \nLSPs in the database, together with enough information\
    \ so \nthat Intermediate systems receiving the CSNP can compare \nwith their LSP\
    \ database to determine whether they and the \nCSNP transmitter have synchronised\
    \ LSP databases.  The \nmation required to be transmitted in a single CSNP may\
    \ be \ngreater than will fit in a single PDU. Therefore each CSNP \ncarries an\
    \ inclusive range of LSPIDs to which it refers. The \ncomplete set of information\
    \ shall be conveyed by transmit\nting a series of individual CSNPs, each referring\
    \ to a subset \nof the complete range. The ranges of the complete set of \nCSNPs\
    \ shall be contiguous (though not necessarily trans\nmitted in order) and shall\
    \ cover the entire range of possible \nLSPIDs.\nThe  LAN Level 1 Designated Intermediate\
    \ System shall \nperiodically multicast complete sets of Level 1 CSNPs to \nthe\
    \ multi-destination address AllL1ISs. The LAN Level 2 \nDesignated Intermediate\
    \ System shall periodically multicast \ncomplete sets of Level 2 CSNPs to the\
    \ multi-destination ad\ndress AllL2ISs.\nAbsence of an LSPID from a Complete Sequence\
    \ Numbers \nPDU whose range includes that LSPID indicates total lack \nof information\
    \ about that LSPID.\nIf an Intermediate system, upon receipt of a Complete Se\n\
    quence Numbers PDU, detects that the transmitter was out \nof date, the receiver\
    \ shall multicast the missing information.\nNOTE - Receipt of a link state PDU\
    \ on a link is the same as \nsuccessfully transmitting the Link State PDU on that\
    \ link, so \nonce the first Intermediate system responds, no others will, \nunless\
    \ they have already transmitted replies.\nIf an Intermediate system detects that\
    \ the transmitter had \nmore up to date information, the receiving Intermediate\
    \ sys\ntem shall multicast a Partial Sequence Numbers PDU \n(PSNP), containing\
    \ information about LSPs for which it has \nolder information. This serves as\
    \ an implicit request for the \nmissing information. Although the PSNP is multicast,\
    \ only \nthe Designated Intermediate System of the appropriate level \nshall respond\
    \ to the PSNP. \nNOTE - This is equivalent to the PSNP being transmitted di\n\
    rectly to the Designated Intermediate System, in that it \navoids each Intermediate\
    \ System unnecessarily sending the \nsame LSP(s) in response. However, it has\
    \ the advantage of \npreserving the property that all routeing messages can be\
    \ re\nceived on the multi-destination addresses, and hence by a \nLAN adapter\
    \ dedicated to the multi-destination address.\nWhen a non-broadcast circuit (re)starts,\
    \ the IS shall:\na)set SRMflag for that circuit on all LSPs, and \nb)send a Complete\
    \ set of Complete Sequence Numbers \nPDUs on that circuit.\n7.3.18 Validation\
    \ of Databases\nAn Intermediate System shall not continue to operate for an \n\
    extended period with corrupted routeing information. The \nIS shall therefore\
    \ operate in a fail-stop manner. If a failure \nis detected, the Intermediate\
    \ system Network entity shall be \nchecksum of every LSP in the LSP database (except\
    \ \nthose with a Remaining Lifetime of zero) in order to \ndetect corruption of\
    \ the LSP while in memory. If the \nchecksum of any LSP is incorrect, the notification\
    \ \ncorruptedLSPDetected shall be logged, and as a \nminimum the entire Link State\
    \ Database shall be de\nleted and action taken to cause it to be re-acquired.\
    \ \nOne way to achieve this is to disable and re-enable the \nIS Network entity.\
    \ \nNOTE  On point to point links, this requires at least \nthat a CSNP be transmitted.\n\
    b)On completion of these checks the decision process \nshall be notified of an\
    \ event (even if any newly gener\nated LSPs have identical contents to the previous\
    \ \nones). This causes the decision process to be run and \nthe forwarding databases\
    \ re-computed, thus protecting \nagainst possible corruption of the forwarding\
    \ data\nbases in memory, which would not otherwise be de\ntected in a stable topology.\
    \ \nc)The IS shall reset the timer for a period of \nmaximumLSPGenerationInterval\
    \ with jitter ap\nplied as described in 10.1.\n7.3.19 LSP Database Overload\n\
    As a result of network mis-configuration, or certain transi\ntory conditions,\
    \ it is possible that there may be insufficient \nmemory resources available to\
    \ store a received Link State \nPDU. When this occurs, an IS needs to take certain\
    \ steps to \nensure that if its LSP database becomes inconsistent with \nthe other\
    \ ISs', that these ISs do not rely on forwarding \npaths through the overloaded\
    \ IS.\n7.3.19.1 Entering the Waiting State\nWhen an LSP cannot be stored, the\
    \ LSP shall be ignored \nand Waiting State shall be entered. A timer shall be\
    \ started \nfor waitingTime seconds, and the Intermediate System \nshall generate\
    \ and flood its own LSP with zero LSP number \nwith the LSP Database Overload\
    \ Bit set. This prevents \nthis Intermediate system from being considered as a\
    \ for\nwarding path by other Intermediate Systems. \nIt is possible that although\
    \ there are sufficient resources to \nstore an LSP and permit the operation of\
    \ the Update Proc\ness on that LSP, the Decision Process may subsequently re\n\
    quire further resources in order to complete. If these re\nsources are not available,\
    \ the Intermediate system shall then \n(i.e. during the attempt to run the Decision\
    \ Process) enter \nWaiting State until such time as they are available and \n\
    waitingTime seconds have elapsed since the last LSP was \nignored by the Update\
    \ Process. \nAn implementation shall partition the available memory re\nsources\
    \ between the Level 1 and Level 2 databases. An \noverload condition can therefore\
    \ exist independently for \nLevel 1 or Level 2 (or both). The status attributes\
    \ l1State \n7.3.19.2 Actions in Level 1 Waiting State\nWhile in Level 1 waiting\
    \ state\na)If a Link State PDU cannot be stored, the IS shall ig\nnore it and\
    \ restart the timer for waitingTime seconds.\nb)The IS shall continue to run the\
    \ Decision and For\n2)Clear the LSP Database Overload bit in its own \nLevel 1\
    \ LSP with zero LSP number and re-issue it.  \n3)Set the l1State to On.\n4)Resume\
    \ normal operation.\n7.3.19.3 Actions in Level 2 Waiting State\nWhile in Level\
    \ 2 waiting state\na)If a Link State PDU cannot be stored, the IS shall ig\nnore\
    \ it and restart the timer for waitingTime seconds. \nb)The IS shall continue\
    \ to run the Decision and For\n2)Clear the LSP Database Overload bit in its own\
    \ \nLevel 2 LSP with zero LSP number and re-issue it.  \n3)Set the l2State to\
    \ On.\n4)Resume normal operation.\n7.3.20 Use of the Link State Database\nThe\
    \ only portion of the database relevant to the  Decision \nProcess is the data\
    \ portion of the Link State PDUs.\nThe Update Process additionally uses the fields\
    \ Sequence \nNumber, Remaining Lifetime, and variable SRMflag. \nThe Remaining\
    \ Lifetimes in the stored link state PDUs can \neither be periodically decremented,\
    \ or converted upon re\nceipt into an internal timestamp, and converted back into\
    \ a \nRemaining Lifetime upon transmission.\n7.3.20.1 Synchronisation with the\
    \ Decision Process\nSince the Update Process and the Decision Process share \n\
    the Link State Database, care must be taken that the Update \nProcess does not\
    \ modify the Link State Database while the \nDecision Process is running.\nThere\
    \ are two approaches to this. In one approach, the De\ncision Process signals\
    \ when it is running. During this time, \nthe Update Process queues incoming Link\
    \ State PDUs, and \ndoes not write them into the Link State Database. If more\
    \ \nLink State PDUs arrive than can fit into the queue allotted \nwhile the Decision\
    \ Process is running, the Update Process \ndrops them and does not acknowledge\
    \ them.\nAnother approach is to have two copies of the Link State \nDatabase \
    \ one in which the Decision Process is comput\ning, and the other in which the\
    \ Update Process initially cop\nies over the first database, and in which all\
    \ new Link State \nPDUs are written. Additionally, depending on the hashing \n\
    scheme, it is likely that a second copy of the address hash \ntable will be required,\
    \ so that the Update Process can do a \nrehash occasionally for efficiency.\n\
    When the Decision Process is ready to run again, it locks \nthe new copy of the\
    \ Link State Database, leaving the Up\ndate Process to copy over the information\
    \ into the first area, \nand write new updates while the Decision Process runs\
    \ \nagain.\nThe advantage of the first approach is that it takes less \nmemory.\
    \ The advantage of the second approach is that Link \nState PDUs will never need\
    \ to be dropped.\nNOTE - If the decision process is implemented according to \n\
    the specification in C.2, a finer level of parallelism is possi\nble, as described\
    \ below.\nArrival of a Link State PDU for a system before that system \nhas been\
    \ put into TENT is permitted. The new Link State \nPDU is used when that system\
    \ is eventually put into TENT. \nSimilarly, arrival of a new Link State PDU for\
    \ a system af\nter that system has been put into PATHS is permitted. That \nsystem\
    \ has already been completely processed. The arrival \nof the new Link State PDU\
    \ is noted and the decision process \nre-executed when the current execution has\
    \ completed. An \nin-progress execution of the decision process shall not be \n\
    abandoned, since this could prevent the decision process \nfrom ever completing.\n\
    Arrival of a Link State PDU for a system between that sys\ntem being put on TENT\
    \ and being transferred to PATHS \nshall be treated as equivalent to one of the\
    \ previous two \ncases (for example, by buffering, or taking some corrective \n\
    action).\n7.3.20.2 Use of Buffers and Link Bandwidth\nImplementations shall have\
    \ a buffer management strategy \nthat does not prevent other clients of the buffering\
    \ service \nfrom acquiring buffers due to excessive use by the Update \nProcess.\
    \ They shall also ensure that the Update Process \ndoes not consume all the available\
    \ bandwidth of links. In \nparticular no type of traffic should experience starvation\
    \ for \nlonger than its acceptable latency. Acceptable latencies are \napproximately\
    \ as follows:\n-Hello traffic  Hello timer W 0.5 \n-Data Traffic  10 seconds.\n\
    NOTE - The first of these requirements can be met by re\nstricting the Update\
    \ process to the use of a single buffer on \neach circuit for transmission. This\
    \ may also cause the sec\nond requirement to be met, depending on the processor\
    \ \nspeed.\n7.3.21 Parameters\nMaxAge  This is the amount of time that may elapse\
    \ \nsince the estimated origination of the stored Link \nState PDU by the source\
    \ before the LSP is consid\ning Link State PDUs.\n\tMaxAge is an architectural\
    \ constant equal to 20 \nminutes.\nZeroAgeLifetime - This is the minimum amount\
    \ of time \nfor which the header of an expired LSP shall be re\ntained after it\
    \ has been flooded with zero Remaining \nLifetime.  A very safe value for this\
    \ would be \n2 W MaxAge.  However all that is required is that \nthe header be\
    \ retained until the zero Remaining Life\ntime LSP has been safely propagated\
    \ to all the \nneighbours.\n\tZeroAgeLifetime is an architectural constant with\
    \ \na value of 1 minute.\nmaximumLSPGenerationInterval  This is the maxi\nmum\
    \ amount of time allowed to elapse between gen\neration of Link State PDUs by\
    \ a source. It shall be \nless than MaxAge.\n\tSetting this parameter too fast\
    \ adds overhead to the \nalgorithms (a lot of Link State PDUs). Setting this \n\
    parameter too slow (and not violating constraints) \ncauses the algorithm to wait\
    \ a long time to recover \nin the unlikely event that incorrect Link State infor\n\
    mation exists somewhere in the domain about the \nsystem.\n\tA reasonable setting\
    \ is 15 minutes. \nminimumLSPGenerationInterval  This is the minimum \ntime interval\
    \ between generation of Link State \nPDUs.  A source Intermediate system shall\
    \ wait at \nleast this long before re-generating one of its own \nLink State PDUs.\n\
    \tSetting this too large causes a delay in reporting new \ninformation. Setting\
    \ this too small allows too much \nther propagating another Link State PDU from\
    \ the \nsame source system.\n\tSetting this too large causes a delay in propagation\
    \ \nof routeing information and stabilisation of the \nrouteing algorithm. Setting\
    \ this too small allows the \npossibility that the routeing algorithm, under low\
    \ \nCompleteSNPInterval  This is the amount of time be\ntween periodic transmissions\
    \ of a complete set of \nSequence Number PDUs by the Designated Interme\ndiate\
    \ system on a broadcast link. Setting this too low \nslows down the convergence\
    \ of the routeing algo\nrithm when Link State PDUs are lost due to the \ndatagram\
    \ environment of the Data Link layer on the \nbroadcast link.\n\tSetting this\
    \ too high results in extra control traffic \noverhead.\n\tA reasonable value\
    \ is 10 seconds. \n7.4 The Forwarding Process\nThe forwarding process is responsible\
    \ both for transmitting \nNPDUs originated by this system, and for forwarding\
    \ \nNPDUs originated by other systems\n7.4.1 Input and Output\nINPUT\n-NPDUs from\
    \ the ISO 8473 protocol machine \n-PDUs from Update Process \n-PDUs from Receive\
    \ Process \n-Forwarding Databases (Level 1 and 2)  one for each \nrouteing metric\n\
    OUTPUT\n-PDUs to Data Link Layer\n7.4.2 Routeing Metric Selection\nThe Forwarding\
    \ process selects a forwarding database for \neach NPDU to be relayed based on:\n\
    -the level at which the forwarding is to occur: level 1 \nor level 2; and\n-a\
    \ mapping of the ISO 8473 QoS Maintenance field \nonto one of the Intermediate\
    \ system's supported route\ning metrics. \nThe former selection is made by examining\
    \ the Destination \nAddress field of the NPDU.\nThe latter selection is made as\
    \ follows:\na)If the QoS Maintenance field is not present in the \nNPDU, then\
    \ the IS shall select the forwarding data\nbase calculated for the default metric.\n\
    b)If the QoS Maintenance field is present, the IS shall \nexamine bits 7 and 8\
    \ of the parameter value octet. If \nthese two bits specify any combination other\
    \ than 1 \n1 (meaning globally unique QoS), then the IS shall \nselect the forwarding\
    \ database calculated for the de\nfault metric, otherwise\nc)The IS shall select\
    \ a forwarding database by mapping \nthe values of bits 3, 2 and 1 of the parameter\
    \ value as \nshown below in table 1 and shall proceed as follows:\n1)If the IS\
    \ does not support the selected routeing \nmetric, the IS shall forward based\
    \ upon the default \nmetric;\n2)If the forwarding database for one of the optional\
    \ \nrouteing metrics is selected and the database either \ndoes not contain an\
    \ entry for the Destination Ad\ndress in the NPDU being relayed, or contains an\
    \ \nentry indicating that the destination is unreachable \nusing that metric,\
    \ then the IS shall attempt to for\nward based upon the default metric;\n3)Otherwise,\
    \ forward based on the selected optional \nmetric.\nTable 1 - QoS Maintenance\
    \ bits to routeing \nmetric mappingsSelected Routeing Metric\nbit 3\nbit 2\nbit\
    \ 1\nexpense metric\n0\n0\n0\ndefault metric\n0\n0\n1\nexpense metric\n0\n1\n\
    0\ndelay  metric\n1\n0\n0\nerror metric\n0\n1\n1\ndelay metric\n1\n0\n1\nerror\
    \ metric\n1\n1\n1\ndefault metric\n1\n1\n0\n7.4.3 Forwarding Decision\n7.4.3.1\
    \ Basic Operation\nLet DEST = the Network Layer destination address of the \n\
    PDU to be forwarded, or the next entry in the source route\ning field, if present.\
    \ It consists of sub-fields Area Address, \nID, and SEL. \nNOTE - The SEL field\
    \ in the destination address is not ex\namined by Intermediate Systems. It is\
    \ used by End Systems \nto select the proper Transport entity to which to deliver\
    \ NS\nDUs. \nThis system's (the one examining this PDU for proper for\nwarding\
    \ decision) address consists of sub-fields area ad\ndress  and ID.\na)If the local\
    \ system type is a level 1 Intermediate sys\ntem, or the local system type is\
    \ a level 2 Intermediate \nsystem and AttachedFlagk = False, then:\n1)If the Area\
    \ Address in the PDU to be forwarded \nmatches any one of the area addresses of\
    \ this IS, \nthen consult the level 1 forwarding database to de\ntermine the adjacency\
    \ which is the next hop on the \npath to the NPDU's destination. Forward the \n\
    NPDU on this adjacency.\n2)Otherwise, consult the level 1 forwarding database\
    \ \nto determine the adjacency which is the next hop \non the path to the nearest\
    \ level 2 is in the area, and \nforward the NPDU on this adjacency.\nb)If the\
    \ local system type is Level 2, and Attached\nFlagk = True then:\n1)If the Area\
    \ Address in the PDU to be forwarded \nmatches any one of the area addresses of\
    \ this IS, \nthen consult the level 1 forwarding database to de\ntermine the adjacency\
    \ which is the next hop on the \npath to the NPDU's destination. Forward the \n\
    NPDU on this adjacency.\n2)Otherwise, consult the level 2 forwarding database\
    \ \nto determine the adjacency which is the next hop \non the path to the destination\
    \ area, and forward the \nNPDU on this adjacency.\n7.4.3.2 Encapsulation for Partition\
    \ Repair\nIf this Intermediate system is the Partition Designated \nLevel 2 IS\
    \ for this partition, and the PDU is being for\nwarded onto the special adjacency\
    \ to a Partition Designated \nLevel 2 Intermediate system in a different partition\
    \ of this \narea, encapsulate the complete PDU as the data field of a \ndata NPDU\
    \ (i.e., with an additional layer of header), mak\ning this system the Source\
    \ address and the other Partition \nDesignated Level 2 Intermediate system (obtained\
    \ from the \nidentifier attribute of the Virtual Adjacency managed ob\nject) the\
    \ Destination Address field in the outer PDU \nheader. Set the QoS Maintenance\
    \ field of the outer PDU \nto indicate forwarding via the default routeing metric\
    \ (see \ntable 1). Then forward the encapsulated PDU onto an adja\ncency ADJ,\
    \ obtained by calling the Forward procedure, de\nscribed below. \n7.4.3.3 The\
    \ Procedure Forward\nThis procedure chooses, from a Level 1 forwarding data\n\
    base  if level is level1, or from a Level 2 forwarding da\ntabase  if level is\
    \ level2, an adjacency on which to for\nward NPDUs for destination dest. A pointer\
    \ to the adja\ncency is returned in adj, and the procedure returns the value \n\
    True. A destination of 0 at level 1 selects the adjacency \nfor the nearest level\
    \ 2 IS computed as described in 7.2.9.1.\nIf there are multiple possible adjacencies,\
    \ as a result of mul\ntiple minimum cost paths, then one of those adjacencies\
    \ \nshall be chosen. An implementation may chose the adja\ncency at random, or\
    \ may use the possible adjacencies in \nround robin fashion.\nIf there is no entry\
    \ in the selected forwarding database for \nthe address dest, and the NPDU originated\
    \ from the a local \nTransport entity  and the system has one or more Intermedi\n\
    ate System adjacencies, then one of those is chosen at ran\ndom (or in round robin\
    \ fashion) and the procedure returns \nthe value True. Otherwise the procedure\
    \ returns the value \nFalse.66This is done so that a system in the overloaded\
    \ state will\nstill be able to originate or forward NPDUs. If a system with a\
    \ partial\nrouteing information base \nwere prohibited from attempting to forward\
    \ to an unknown destination,\nsystem management would be unable to either communicate\
    \ with this system, or \nroute through it, for the purpose of diagnosing and/or\
    \ correcting the\nunderlying fault.\nNOTE -  Since the local adjacency database\
    \ is pre-loaded \ninto the decision process, there will always be an entry in\
    \ \nthe forwarding database for destinations to which an adja\ncency exists.\n\
    NOTE - The PDU to be forwarded may require fragmenta\ntion, depending on which\
    \ circuit it is to be forwarded over. \nGenerating Redirect PDUs\nIn addition\
    \ to forwarding an NPDU, the IS shall inform the \nlocal ISO 9542 protocol machine\
    \ to generate a Redirect \nPDU if the PDU is being forwarded onto the same circuit\
    \ \nfrom which it came, and if the source SNPA address of the \nNPDU indicates\
    \ that the NPDU was received from an End \nSystem. \n7.4.4 The Receive Process\n\
    The Receive Process is passed information from any of the \nfollowing sources.\n\
    -received PDUs with the NLPID of Intra-Domain \nrouteing, \n-configuration information\
    \ from the ISO 9542 protocol \nmachine, \n-ISO 8473 data PDUs handed to the routeing\
    \ function \nby the ISO 8473 protocol machine.\nWhen an area is partitioned, a\
    \ level 2 path is used as a \nlevel 1 link to repair the partitioned area. When\
    \ this occurs, \nall PDUs (between the neighbours which must utilise a \nmulti-hop\
    \ path for communication) shall be encapsulated in \na data NPDU, addressed to\
    \ the Intra-Domain routeing se\nlector. Control traffic (LSPs, Sequence Numbers\
    \ PDUs) \nshall also be encapsulated, as well as data NPDUs that are \nto be passed\
    \ between the neighbours.\nNOTE - It is not necessary to transmit encapsulated\
    \ IIH \nPDUs over a virtual link, since virtual adjacencies are estab\nlished\
    \ and monitored by the operation of the Decision Proc\ness and not the Subnetwork\
    \ Dependent functions \nThe Receive Process shall perform the following functions:\n\
    -If it is a data NPDU, addressed to this system with \nSEL = Intra-Domain routeing,\
    \ then \n7decapsulate the NPDU (remove the outer NPDU \nheader).\n7If the decapsulated\
    \ PDU is a data NPDU, move \nthe congestion indications to the decapsulated \n\
    NPDU, and pass it to the ISO 8473 protocol ma\nchine.\n7Otherwise, if the decapsulated\
    \ PDU is not an ISO \n8473 PDU, perform the following steps on the de\ncapsulated\
    \ PDU:\n-If it is a Link State PDU, pass it to the Update Process \n-If it is\
    \ a Sequence Numbers PDU, pass it to the Up\ndate Process \n-If it is an IIH PDU,\
    \ pass it to the appropriate \nSubnetwork Dependent Function \n-If it is a data\
    \ NPDU or Error Report for another desti\nnation, pass it to the Forwarding Process\n\
    -Otherwise, ignore the PDU\n7.5 Routeing Parameters\nThe routeing parameters setable\
    \ by System Management \nare listed for each managed object in clause 11.\n7.5.1\
    \ Architectural Constants\nThe architectural constants are described in Table\
    \ 2.\nTable 2 - Routeing architectural constantsName\nValue\nDescription\nMaxLinkMetric\n\
    63.\nMaximum value of a routeing metric assign\nable to a circuit\nMaxPathMetric\n\
    1023.\nMaximum total metric value for a complete \npath\nAllL1ISs\n01-80-C2-00-00-14\n\
    The multi-destination address All Level 1 In\ntermediate Systems\nAllL2ISs\n01-80-C2-00-00-15\n\
    The multi-destination address All Level 2 In\ntermediate Systems\nAllIntermediateSystems\n\
    09-00-2B-00-00-05\nThe multi-destination address All Intermedi\nate  Systems used\
    \ by ISO 9542\nISO-SAP\nFE\n10000011\nThe Network Layer Protocol Discriminator\
    \ \nassigned by ISO/TR 9577 for this Protocol\nIntradomainRouteing\nSelector\n\
    0.\nThe NSAP selector for the Intermediate Sys\ntem Network entity\nSequenceModulus\n\
    232\nThe size of LSP which all Intermediate sys\ntems must be capable of receiving.\n\
    MaxAge\n1200.\nNumber of seconds before LSP considered ex\npired.\nZeroAgeLifetime\n\
    60.\nNumber of seconds that an LSP with zero Re\nmaining Lifetime shall be retained\
    \ after \npropagating a purge.\nAllEndSystems\n09-00-2B-00-00-04\n3.\nThe maximum\
    \ number of area addresses \nwhich may exist for a single area.\nfor Point to\
    \ Point IIH PDUs.\nISISHoldingMultiplier\n10.\nThe number by which to multiply\
    \ iSISHel\nloTimer to obtain Holding Timer for Level 1 \nand Level 2 LAN IIH PDUs.\n\
    Jitter\n25.\nThe percentage of jitter which is applied to the \ngeneration of\
    \ periodic PDUs.\n8 Subnetwork Dependent \nFunctions\nThe Subnetwork Dependent\
    \ Functions mask the charac\nteristics of the different kinds of Subnetworks from\
    \ the \nSubnetwork Independent Routeing Functions. The only \ntwo types of circuits\
    \ the Subnetwork Independent Functions \nrecognise are broadcast and general topology.\n\
    The Subnetwork Dependent Functions include:\n-The use of the ISO 8473 Subnetwork\
    \ Dependent \nConvergence Functions (SNDCF) so that this proto\ncol may transmit\
    \ and receive PDUs over the same \nsubnetwork types, using the same techniques,\
    \ as does \nISO 8473.\n-Co-ordination with the operation of the ESIS proto\ncol\
    \ (ISO 9542) in order to determine the Network \nlayer addresses (and on Broadcast\
    \ subnetworks, the \nsubnetwork points of attachment) and identities (End \nSystem\
    \ or Intermediate System) of all adjacent neigh\nbours. This information is held\
    \ in the Adjacency data \nbase. It is used to construct Link State PDUs.\n-The\
    \ exchange of IIH PDUs. While it is possible for an \nIntermediate System to identify\
    \ that it has an Interme\ndiate System neighbour by the receipt of an ISO 9542\
    \ \nISH PDU, there is no provision within ISO 9542 to in\ndicate whether the neighbour\
    \ is a Level 1 or a Level 2 \nIntermediate System. Specific PDUs (LAN Level 1,\
    \ \nLAN Level 2 and Point to point IIH PDUs) are de\nfined to convey this information.\n\
    8.1 Multi-destination Circuits on ISs at \na Domain Boundary\nRouteing information\
    \ (e.g. Link State PDUs) is not ex\nchanged across a routeing domain boundary.\
    \ All routeing \ninformation relating to a circuit connected to another route\n\
    ing domain is therefore entered via the Reachable Address \nmanaged objects. This\
    \ information is disseminated to the \nrest of the routeing domain via Link State\
    \ PDUs as de\nscribed in 7.3.3.2. This has the effect of causing NPDUs \ndestined\
    \ for NSAPs which are included in the \naddressPrefixes of the Reachable Addresses\
    \ to be re\nlayed to that Intermediate System at the domain boundary. \nOn receipt\
    \ of such an NPDU the Intermediate system shall \nforward it onto the appropriate\
    \ circuit, based on its own \nLink State information. However in the case of multi-\n\
    destination subnetworks (such as an ISO 8208 subnetwork \nusing Dynamic Assignment,\
    \ a broadcast subnetwork, or a \nconnectionless subnetwork) it is necessary to\
    \ ascertain ad\nditional subnetwork dependent addressing information in \norder\
    \ to forward the NPDU to a suitable SNPA. (This may \nbe the target End system\
    \ or an Intermediate system within \nthe other domain.) \nIn general the SNPA\
    \ address to which an NPDU is to be \nforwarded can be derived from the destination\
    \ NSAP of the \nNPDU. It may be possible to perform some algorithmic ma\nnipulation\
    \ of the NSAP address in order to derive the \nSNPA address. However there may\
    \ be some NSAPs where \nthis is not possible. In these cases it is necessary to\
    \ have \npre-configured information relating an address prefix to a \nparticular\
    \ SNPA address.\nThis is achieved by additional information contained in the \n\
    Reachable Address managed object. The mappingType \nattribute may be specified\
    \ as Manual, in which case a \nparticular SNPA address or set of SNPA addresses\
    \ is speci\nfied in the SNPA Address characteristic.  Alternatively the \nname\
    \ of an SNPA address extraction algorithm may be \nspecified.\n8.2 Point to Point\
    \ Subnetworks\nThis clause describes the identification of neighbours on \nboth\
    \ point to point links and Static circuits.\nThe IS shall operate the ISO 9542\
    \ protocol, shall be able to \nreceive ISO 9542 ISH PDUs from other ISs, and shall\
    \ store \nthe information so obtained in the adjacency database.\n8.2.1 Receipt\
    \ of ESH PDUs  Database of End \nSystems\nAn IS shall enter an End system into\
    \ the adjacency database \nwhen an ESH PDU is received on a circuit. If an ESH\
    \ PDU  \nis received on the same circuit, but with a different NSAP \naddress,\
    \ the new address shall be added to the adjacency, \nwith a separate timer. A\
    \ single ESH PDU may contain more \nthan one NSAP address. When a new data link\
    \ address or \nNSAP address is added to the adjacency database, the IS \nshall\
    \ generate an adjacencyStateChange (Up) notifica\ntion on that adjacency.\nThe\
    \ IS shall set a timer for the value of Holding Time in \nthe received ESH PDU.\
    \ If another ESH PDU is not re\nceived from the ES before that timer expires,\
    \ the ES shall \nbe purged from the database, provided that the Subnetwork \n\
    Independent Functions associated with initialising the adja\ncency have been completed.\
    \ Otherwise the IS shall clear the \nadjacency as soon as those functions are\
    \ completed.\nWhen the adjacency is cleared, the Subnetwork Independ\nent Functions\
    \ shall be informed of an adjacencyState\nChange (Down) notification, and the\
    \ adjacency can be re-\nused after the Subnetwork Independent Functions associ\n\
    ated with bringing down the adjacency have been com\npleted.\n8.2.2 Receiving\
    \ ISH PDUs by an Intermediate \nSystem\nOn receipt of an ISH PDU by an Intermediate\
    \ System, the \nIS shall create an adjacency (with state Initialising and \nneighbourSystemType\
    \ Unknown), if one does not al\nready exist, and then perform the following actions:.\n\
    a)If the Adjacency state is Up  and the ID portion of \nthe NET field in the ISH\
    \ PDU does not match the \nneighbourID of the adjacency then the IS shall:\n1)generate\
    \ an adjacencyStateChange (Down) no\ntification;\n2)delete the adjacency; and\n\
    3)create a new adjacency with:\ni)state set to Initialising, and\nii)neighbourSystemType\
    \ set to Unknown.\n4)perform the following actions..\nb)If the Adjacency state\
    \ is Initialising, and the \nneighbourSystemType status is Intermediate Sys\n\
    tem, the ISH PDU shall be ignored.\nc)If the Adjacency state is Initialising and\
    \ the neigh\nbourSystemType status is not Intermediate Sys\ntem, a point to point\
    \ IIH PDU shall be transmitted as \ndescribed in 8.2.3.\nd)The neighbourSystemType\
    \ status shall be set to In\ntermediate System indicating that the neighbour is\
    \ an \nIntermediate system, but the type (L1 or L2) is, as yet, \nunknown.\n8.2.3\
    \ Sending Point to Point IIH PDUs\nAn IS shall send Point-to-Point IIH PDUs on\
    \ those Point-\nto-Point circuits whose externalDomain attribute is set \nFalse.\
    \ The IIH shall be constructed and transmitted as \nfollows:\na)The Circuit Type\
    \ field shall be set according to Ta\nble 3.\nb)The Local Circuit ID field shall\
    \ be set to a value as\nsigned by this Intermediate system when the circuit is\
    \ \ncreated. This value shall be unique among all the cir\ncuits of this Intermediate\
    \ system.\nc)The first Point to Point IIH PDU (i.e. that transmitted \nas a result\
    \ of receiving an ISH PDU, rather than as a \nresult of timer expiration) shall\
    \ be padded (with trail\ning PAD options containing arbitrary valued octets) so\
    \ \nthat the SNSDU containing the IIH PDU has a length \nof at least maxsize -\
    \ 1 octets77The minimum length of PAD which may be\nadded is 2 octets, since that\
    \ is the size of the option header. Where\npossible the PDU should be padded to\
    \ \nmaxsize, but if the PDU length is maxsize- 1 octets no padding is\npossible\
    \ (or required).\n where maxsize is the \nThis is done to ensure that an adjacency\
    \ will only be \nformed between systems which are capable of ex\nchanging PDUs\
    \ of length up to maxsize octets. In the \nabsence of this check, it would be\
    \ possible for an adja\ncency to exist with a lower maximum block size, with \n\
    the result that some LSPs and SNPs (i.e. those longer \nthan this maximum, but\
    \ less than maxsize) would not \nbe exchanged.\nNOTE - It is necessary for the\
    \ manager to ensure that the \nvalue of dataLinkBlocksize on a circuit which will\
    \ be \nused to form an Intermediate system to Intermediate sys\ntem adjacency\
    \ is set to a value greater than or equal to the \nmaximum of the LSPBufferSize\
    \ characteristics listed \nabove. If this is not done, the adjacency will fail\
    \ to initial\nise. It is not possible to enforce this requirement, since it \n\
    is not known until initialisation time whether or not the \nneighbour on the circuit\
    \ will be an End system or an In\ntermediate system. An End system adjacency may\
    \ oper\nate with a lower value for dataLinkBlocksize.\nd)If the value of the circuitTransmitPassword\
    \ for the \ncircuit is non-null, then the IS shall include the \nAuthentication\
    \ Information field in the transmitted \nIIH PDU, indicating an Authentication\
    \ Type of \nPassword and containing the circuitTransmit\nPassword as the authentication\
    \ value.\n8.2.4 Receiving Point to Point IIH PDUs\n8.2.4.1 PDU Acceptance Tests\n\
    On receipt of a Point-to-Point IIH PDU, perform the fol\nlowing PDU acceptance\
    \ tests:\na)If the IIH PDU was received over a circuit whose ex\nternalDomain\
    \ attribute is set True, the IS shall dis\ncard the PDU.\nb)If the ID Length field\
    \ of the PDU is not equal to the \nvalue of the IS's routeingDomainIDLength, the\
    \ \nPDU shall be discarded and an iDFieldLengthMis\nmatch notification generated.\n\
    c)If the set of  circuitReceivePasswords for this cir\ncuit is non-null, then\
    \ perform the following tests:\n1)If the PDU does not contain the Authentication\
    \ \nInformation field then the PDU shall be discarded \nand an authenticationFailure\
    \ notification gener\nated.\n2)If the PDU contains the Authentication Infor\n\
    mation field, but the Authentication Type is not \nequal to Password, then the\
    \ PDU shall be ac\ncepted unless the IS implements the authentica\ntiion procedure\
    \ indicated by the Authentication \nType. In this case whether the IS accepts\
    \ or ig\nnores the PDU is outside the scope of this Interna\ntional Standard.\n\
    3)Otherwise, the IS shall compare the password in \nthe received PDU with the\
    \ passwords in the set of \ncircuitReceivePasswords for the circuit on \nwhich\
    \ the PDU was received. If the value in the \nPDU matches any of these passwords,\
    \ the IS shall \naccept the PDU for further processing. If the value \nin the\
    \ PDU does not match any of the circuitRe\nceivePasswords, then the IS shall ignore\
    \ the \nPDU and generate an authenticationFailure no\ntification.\n8.2.4.2 IIH\
    \ PDU Processing\nWhen a Point to Point IIH PDU is received by an Interme\ndiate\
    \ system, the area addresses of the two Intermediate \nSystems shall be compared\
    \ to ascertain the validity of the \nadjacency. If the two Intermediate systems\
    \ have an area ad\ndress in common, the adjacency is valid for all combina\ntions\
    \ of Intermediate system types (except where a Level 1 \nIntermediate system is\
    \ connected to a Level 2 Intermediate \nsystem with manualL2OnlyMode set True).\
    \ However, \nif they have no area address in common, the adjacency is \nonly valid\
    \ if both Intermediate systems are Level 2, and the \nIS shall mark the adjacency\
    \ as Level 2 Only. This is de\nscribed in more detail below.\nhas the value True,\
    \ the IS shall perform the ac\ntion indicated by Table 6.\nby Table 7 (irrespective\
    \ of the value of manu\nalL2OnlyMode for this circuit).\nc)If the action taken\
    \ is Up, as detailed in the tables \nreferenced above, the IS shall compare the\
    \ Source ID \nfield of the PDU with the local systemID. \n1)If the local Intermediate\
    \ system has the higher \nSource ID, the IS shall set the Circuit CircuitID \n\
    status to the concatenation of the local systemID \nand the Local Circuit ID (as\
    \ sent in the Local Cir\ncuit ID field of point to point IIH PDUs from this \n\
    Intermediate System) of this circuit. \n2)If the remote Intermediate system has\
    \ the higher \nSource ID, the IS shall set the Circuit CircuitID \nstatus to the\
    \ concatenation of the remote system's \nSource ID (from the Source ID field of\
    \ the PDU), \nand the remote system's Local Circuit ID (from the \nLocal Circuit\
    \ ID field of the PDU). \n3)If the two source IDs are the same (i.e. the system\
    \ \nis initialising to itself), the local systemID is used.\nNOTE  The circuitID\
    \ status is not used to generate \nthe Local Circuit ID to be sent in the Local\
    \ Circuit \nID field of IIH PDUs transmitted by this Intermedi\nate system. The\
    \ Local Circuit ID value is assigned \nonce, when the circuit is created and is\
    \ not subse\nquently changed.\nd)If the action taken is Accept and the new value\
    \ com\nputed for the circuitID is different from that in the ex\nisting adjacency,\
    \ the IS shall\n1)generate an adjacencyStateChange(Down) noti\nfication, and \n\
    2)delete the adjacency.\ne)If the action taken is Up or Accept the IS shall\n\
    1)copy the Adjacency neighbourAreas entries \nfrom the PDU,\n2)set the holdingTimer\
    \ to the value of the Holding \nTime from the PDU, and\n3)set the neighbourSystemID\
    \ to the value of the \nbour is not heard from in that time, the IS shall\na)purge\
    \ it from the database; and \nb)generate an adjacencyStateChange (Down) notifi\n\
    cation.\n8.3 ISO 8208 Subnetworks\n8.3.1 Network Layer Protocols\nThe way in which\
    \ the underlying service assumed by ISO \n8473 is provided for ISO 8208 subnetworks\
    \ is described in \nclause 8 of ISO 8473. This defines a set of Subnetwork De\n\
    pendent Convergence Functions (SNDCFs) that relate the \nservice provided by specific\
    \ individual ISO-standard \nsubnetworks to the abstract underlying service defined\
    \ in \nclause 5.5 of ISO 8473. In particular 8.4.3 describes the \nSubnetwork\
    \ Dependent Convergence Functions used with \nISO 8208 Subnetworks.\n8.3.2 SVC\
    \ Establishment\n8.3.2.1 Use of ISO 8473 Subnetwork Dependent \nConvergence Functions\n\
    SVCs shall be established according to the procedures de\nfined in the ISO 8208\
    \ Subnetwork Dependent Convergence \nFunctions of ISO 8473 (this may be on system\
    \ management \naction or on arrival of data depending on the type of cir\ncuit).\
    \ The Call Request shall contain a Protocol Discrimina\ntor specifying ISO 8473\
    \ in the first octet of Call Userdata.\nIn the case of a static circuit, an SVC\
    \ shall be established \nonly upon system management action. The IS shall use\
    \ \nneighbourSNPAAddress as the called SNPA address.\nIn the case of a DA circuit,\
    \ the call establishment proce\ndures are initiated by the arrival of traffic\
    \ for the circuit.\n8.3.2.2 Dynamically Assigned Circuits\nA dynamically assigned\
    \ circuit has multiple adjacencies, \nand can therefore establish SVCs to multiple\
    \ SNPAs. In \ngeneral the SNPA address to which a call is to be estab\nlished\
    \ can be derived from the NSAP to which an NPDU is \nto be forwarded. In the case\
    \ where all the NSAPs accessible \nover the ISO 8208 subnetwork have IDIs which\
    \ are their \nSNPA addresses, the correct SNPA can be ascertained by \nextracting\
    \ the IDI. However there may be some NSAPs, \nwhich it is required to reach over\
    \ the ISO 8208 subnetwork, \nwhose IDI does not correspond to the SNPA address\
    \ of \ntheir point of attachment to the ISO 8208 subnetwork. The \nIDI may refer\
    \ to some other SNPA address which is sub-\noptimally connected to the target\
    \ NSAP (or not even con\nnected at all), or the IDP may not contain an X.121 address\
    \ \nat all (e.g. ISO DCC scheme). In these cases the IS shall \nhave pre-configured\
    \ information relating an IDP (or address \nprefix) to a particular SNPA address\
    \ to call.\nThis is achieved, as described in 8.1, by additional informa\ntion\
    \ contained in the Reachable Address managed object. \nThe address extraction\
    \ algorithm may be specified to ex\ntract the IDI portion where the IDI is the\
    \ required X.121 ad\n37 aaaaa\t\n37\t\n*\t\n37 D\t\nSNPA Address\n123X\nB\nY\n\
    Extract X.121 SNPA address\nR, S, T\nThis is interpreted as follows: \na)For the\
    \ ISO DCC prefix 39 123, call the SNPA ad\ndress X.\nb)For the X.121 IDI address\
    \ prefix 37 aaaaa, don't \ncall aaaaa, but call B instead.\nc)For all IDPs based\
    \ on SNPAs with DNIC D (i.e. with \naddress prefix 37 D), call the address Y (which\
    \ \nwould probably be a gateway to a subnetwork with \nDNIC D).\nd)For any other\
    \ X.121 IDI (i.e. address prefix 37)  call \nthe SNPA whose address is used as\
    \ the IDI.\ne)Anything else (* in table 8)  call one of the SNPA \naddresses R,\
    \ S or T. These would typically be the \nSNPA addresses of Level 2 Intermediate\
    \ Systems \nthrough which any other addresses could potentially \nbe reached.\n\
    NOTE - If a DA circuit is defined with a reachable address \nprefix which includes\
    \ the addresses reachable over a DCM \nor STATIC circuit, the cost(s) for the\
    \ DA circuit must be \ngreater than those of the STATIC circuit. If this is not\
    \ the \ncase, the DA circuit may be used to establish a call to the re\nmote SNPA\
    \ supporting the STATIC circuit, which would \nthen (wrongly) assume it was the\
    \ STATIC circuit.\n8.3.2.3 Initiating Calls (Level 2 Intermediate \nSystems) \n\
    When an NPDU is to be forwarded on a dynamically as\nsigned circuit, for destination\
    \ NSAP address D, the IS shall:\na)Calculate D's subnetwork address, either as\
    \ explicitly \nstated in the circuit database, or as extracted from the \nIDP.\n\
    1)If this system is an ES and there is an entry in the \nRedirectCache or ReversePathCache\
    \ for D, use the \nsubnetwork address in the cache entry. \n2)If this system is\
    \ an ES or Level 2 Intermediate sys\ntem, and the address matches one of the listed\
    \ \nreachable address prefixes (including *, if pre\nsent),  the subnetwork address\
    \ is that specified ac\ncording to the mappingType attribute (either \nManual,\
    \ indicating that the set of addresses in \nthe sNPAAddresses attribute of that\
    \ Reachable \nAddress are to be used, or Algorithm, indicating \nthat it is to\
    \ be extracted from the IDP using the \nspecified algorithm). If multiple SNPA\
    \ addresses \nare specified, and there is already an adjacency up \nto one of\
    \ those SNPA addresses, then choose that \nsubnetwork address, otherwise choose\
    \ the \nsubnetwork address with the oldest timestamp  as \ndescribed in 8.3.2.4.\n\
    3)If the address does not match one of the listed \nreachable address prefixes\
    \ (and there is no * en\ntry), invoke the ISO 8473 Discard PDU function.\nb)Scan\
    \ the adjacencies for one already open to D's \nsubnetwork address (i.e. reserveTimer\
    \ has not yet \nexpired). If one is found, transmit the NPDU on that \nadjacency.\n\
    c)If no adjacency has a call established to the required \nsubnetwork address,\
    \ but there is a free adjacency, at\ntempt to establish the call using that subnetwork\
    \ ad\ndress.\nd)If there is no free adjacency invoke the ISO 8473 Dis\ncard PDU\
    \ function.\nNOTE  Where possible, when an adjacency is reserved \n(when an SVC\
    \ has been cleared as a result of the \nidleTimer expiring, but the reserveTimer\
    \ has not yet ex\npired), resources within the subnetwork service provider \n\
    should be reserved, in order to minimise the probability \nthat the adjacency\
    \ will not be able to initiate a call when \nrequired. \n8.3.2.4 Call Attempt\
    \ Failures\nThe Reachable Address managed objects may contain a set \nof SNPA\
    \ addresses, each of which has an associated time-\nstamp. The time-stamps shall\
    \ be initialised to infinitely \nold.\nSome of the SNPAs in this set may be unreachable.\
    \ If a call \nattempt fails to one of the SNPA addresses listed, the IS \nshall\
    \ mark that entry in the list with the time of the latest \nfailed attempt. When\
    \ an SNPA address is to be chosen from \nthe list, the IS shall choose the one\
    \ with the oldest time-\nstamp , unless the oldest time-stamp is more recent than\
    \ \nrecallTimer. If the oldest time-stamp is more recent than \nrecallTimer, all\
    \ SNPAs in the set shall be assumed tempo\nrarily unreachable and no call attempt\
    \ is made. The IS shall \ninstead invoke the ISO 8473 Discard PDU function.\n\
    When attempting to establish a connection to a single spe\ncific subnetwork address\
    \ (not through one of a set of SNPA \naddresses), if a call attempt to a particular\
    \ SNPA address, \nA, fails for any reason, the IS shall invoke the ISO 8473 \n\
    Discard PDU function. Additionally the adjacency on \nwhich the call attempt was\
    \ placed shall be placed in \nFailed state, and the recall timer set. Until it\
    \ expires, the \nIS shall not attempt call establishment for future NPDUs to \n\
    be forwarded over subnetwork address A, but instead the IS \nshall invoke the\
    \ ISO 8473 Discard PDU function.\nWhen the recall timer expires, the IS shall\
    \ free the adja\ncency for calls to a different destination or retry attempts\
    \ to \nsubnetwork address A.\nNOTE - If an implementation can store the knowledge\
    \ of \nSNPA addresses that have failed along with the time since \nthe attempt\
    \ was made in a location other than the adjacency \non which the call was attempted,\
    \ then that adjacency can be \nused for other calls.\n8.3.3 Reverse Path Forwarding\
    \ on DA Circuits\nWhere a subdomain is attached to a Connection-oriented \nsubnetwork\
    \ by two or more SNPAs, the IDP for the ad\ndresses within the subdomain may be\
    \ chosen to be con\nstructed from the address of one of the points of attachment.\
    \ \n(It need not be. The whole subdomain could be multi-\nhomed by using both\
    \ SNPA addresses, or some other IDP \ncould be chosen; e.g. ISO DCC.) Traffic\
    \ to the subdomain \nfrom some other SNPA will cause a call to be established\
    \ to \nthe SNPA corresponding to the IDP of the addresses in the \nsubdomain.\
    \ Traffic from the subdomain may use either of \nthe SNPAs depending on the routeing\
    \ decisions made by \nthe subdomain. This is illustrated in the diagram below\
    \ (fig\nure 5). \nFigure 5 - B.xB.yC.zISO 8208 SubnetworkBACExample for reverse\
    \ path \nforwarding\nThe subdomain is attached to the connection-oriented \nsubnetwork\
    \ via SNPAs A and B. The addresses on the \nsubdomain are constructed using the\
    \ SNPA address of B as \nthe IDI. If traffic for C.z is sent from B.x, a call\
    \ will be es\ntablished from A to C. The reverse traffic from C.z to B.x \nwill\
    \ cause another call to be established from C to B. Thus \ntwo SVCs have been\
    \ established where only one is re\nquired.\nThis problem is prevented by the\
    \ local system retaining a \ncache (known as the ReversePathCache) of NSAP ad\n\
    dresses from which traffic has been received over each ad\njacency. When it has\
    \ traffic to forward over the connection-\noriented subnetwork, the IS shall it\
    \ first check to see if the \ndestination NSAP is in the cache of any of its adjacencies,\
    \ \nand if so forwards the traffic over that adjacency. An NSAP \nshall only be\
    \ added to the cache when the remote SNPA ad\ndress of the adjacency over which\
    \ it is received differs from \nthe SNPA address to be called which would be generated\
    \ \nby checking against the Circuit Reachable Addresses man\naged objects. If\
    \ the cache is full, the IS shall overwrite the \nleast recently used entry. The\
    \ ReversePathCache, if imple\nmented, shall have a size of at least one entry.\
    \ The IS shall \npurge the cache when the adjacency is taken down (i.e. \nwhen\
    \ the reserve timer expires).\n8.3.4 Use of ISO 9542 on ISO 8208 \nsubnetworks\
    \ \nSTATIC and DA circuits are equivalent to point to point \nlinks, and as such\
    \ permit the operation of ISO 9542 as de\nscribed for point to point links in\
    \ 8.2.\nFor DA circuits, it is impractical to use ISO 9542 to obtain \nconfiguration\
    \ information, such as the location of Interme\ndiate systems, since this would\
    \ require calls to be estab\nlished to all possible SNPA addresses.\nThe IS shall\
    \ not send ISO 9542 ISH PDUs on a DA circuit. \nThe IS shall take no action on\
    \ receipt of an ESH PDU or \nISH PDU, and the circuit shall complete initialisation\
    \ with\nout waiting  for their arrival.\nThe IS shall not send Point to point\
    \ IIH PDU on DA cir\ncuits. The IS shall ignore receipt of a point-point IIH PDU.\
    \ \n(This would only occur if a STATIC or DA circuit became \nerroneously connected\
    \ to an SVC being used for a DA cir\ncuit.) \n8.3.5 Interactions with the Update\
    \ Process\nA dynamically assigned circuit contains a list of <reachable \nis always\
    \ an internal metric, and is therefore directly com\nparable with the reachable\
    \ address metric only if the reach\nable address metric is also internal.\nWhen\
    \ the circuit is enabled, the Subnetwork Dependent \nfunctions in an Intermediate\
    \ system shall report (to the Up\ndate Process) adjacency cost change events for\
    \ all ad\ndress prefixes in the circuit Reachable Address managed \nThis causes\
    \ this information to be included in subsequently \ngenerated LSPs as described\
    \ in 7.3.3.2.\nRouteing PDUs (LSPs and Sequence number PDUs) shall \nnot be sent\
    \ on dynamically assigned circuits.\nNOTE - In the following sub-clauses, it is\
    \ assumed that the \nReachable Addresses referenced are only those which have\
    \ \nbeen enabled (i.e. that have state On), and whose parent \ncircuit is also\
    \ in state On.\n8.3.5.1 Adjacency Creation\naddressPrefixes listed with D as (one\
    \ of) the sNPAAd\ndress(es).\nFor Reachable Addresses with mappingType Algo\n\
    rithm, the IS shall construct an implied address prefix88i.e. some\naddress prefix\
    \ which matches the addressPrefix of the Reachable\nAddress, and which would generate\
    \ the SNPA Address D when the extrac\ntion algorithm is applied\nfrom the actual\
    \ remote SNPA address D and the address ex\ntraction algorithm. The IS shall generate\
    \ an Adjacency cost \nthe lower cost to be included in subsequently generated\
    \ \nLSPs. The effect of this is to encourage the use of already \nestablished\
    \ SVCs where possible.\n8.3.5.2 Adjacency Deletion\ncuit Reachable Address managed\
    \ objects for all those with \nmappingType Manual and (one of) their sNPAAd\n\
    dresses  equal to D. The IS shall generate Adjacency \ncost change events to the\
    \ Update Process for all such ad\ndress prefixes with the Reachable Address metrick\
    \ + Deltak \nincrement (where Deltak is the same as defined above). For \nReachable\
    \ Addresses with mappingType X.121 for \nwhich it is possible to construct an\
    \ implied address prefix \nas above, the IS shall generate an adjacencyState\n\
    Change notification for that implied prefix. \nA cost change event shall only\
    \ be generated when the count \nof the number of subnetwork addresses which have\
    \ an es\ntablished SVC changes between 1 and 0.\n8.3.5.3 Circuit Call Establishment\
    \ Increment \ncency cost change events for all address prefixes affected \nby\
    \ the change (i.e. those for which calls are not currently \nestablished). \n\
    The IS shall scan all the Reachable Address managed ob\njects of that Circuit.\
    \ If the Reachable Address has \nmappingType X.121, the IS shall generate an adja\n\
    IS shall scan all the Adjacencies of the Circuit for an Adja\ncency with sNPAAddress\
    \ equal to (one of) the sN\nPAAddresses of that Reachable Address. If no such\
    \ adja\ncency is found the IS shall generate an adjacency cost \nchange event\
    \ for that name with the Reachable Address \nmetrick + the new value of Deltak\
    \ (based on the new value \nof callEstlishmentMetrickIncrement).\n8.3.5.4 Reachable\
    \ Address Cost Change\nWhen the metrick characteristic of a Reachable Address\
    \ in \nstate On is changed by system management, the IS shall \ngenerate cost\
    \ change events to the Update Process to reflect \nthis change. \nIf the Reachable\
    \ Address has mappingType Manual, \nthe IS shall scan all the Adjacencies of the\
    \ Circuit for an \nAdjacency with sNPAAddress equal to (one of) the sN\nPAAddresses\
    \ of that Reachable Address. If one or more \nsuch adjacencies are found, the\
    \ IS shall generate an adja\ncency cost change event for that name with the new\
    \ \nReachable Address metrick. If no such adjacency is found \nthe IS shall generate\
    \ an adjacency cost change event for \nthat name with the new Reachable Address\
    \ metrick.\nIf the Reachable Address has mappingType X.121, the \nwith an sNPAAddress\
    \ for which an implied address pre\nfix can be generated for this Reachable Address,\
    \ the IS \nshall generate an adjacency cost change event for that im\nplied address\
    \ prefix and the new Reachable Address met\nrick.\n8.3.5.5 Disabling a Reachable\
    \ Address\nWhen a Reachable Address managed object is disabled via \nmanagement\
    \ action, the IS shall generate an  Adjacency \ndown event to the Update Process\
    \ for the name of that \nReachable Address and also for any implied prefixes asso\n\
    ciated with that Reachable Address.\n8.3.5.6 Enabling a Reachable Address\nWhen\
    \ a Reachable Address is enabled via system manage\nment action, the IS shall\
    \ generate Adjacency cost change \nevents as described for Reachable Address cost\
    \ change in \n8.3.5.4 above.\n8.4 Broadcast Subnetworks\n8.4.1 Broadcast Subnetwork\
    \ IIH PDUs\nAll Intermediate systems on broadcast circuits (both \nLevel 1 and\
    \ Level 2) shall transmit LAN IIH PDUs as de\nscribed in 8.4.3. Level 1 Intermediate\
    \ systems shall transmit \nonly Level 1 LAN IIH PDUs. Level 2 Intermediate Systems\
    \ \non circuits with manualL2OnlyMode set to the value \nTrue, shall transmit\
    \ only Level 2 LAN IIH PDUs. \nLevel 2 Intermediate systems on circuits with manu\n\
    alL2OnlyMode set to the value False, shall transmit \nboth.\nType Ln Intermediate\
    \ System (in state Initialising or \nUp) on this circuit.\nLAN IIH PDUs shall\
    \ be padded (with trailing PAD options \ncontaining arbitrary valued octets) so\
    \ that the SNSDU con\ntaining the IIH PDU has a length of at least maxsize- 1\
    \ oc\ntets99The minimum length of PAD which may be added is 2 octets, since\n\
    that is the size of the option header. Where possible the PDU should be padded\
    \ to \nmaxsize, but if the PDU length is maxsize- 1 octets no padding is\npossible\
    \ (or required).\n where maxsize for Level 1 IIH PDUs is the maximum \n-dataLinkBlocksize\
    \ \n-originatingL2LSPBufferSize\nThis is done to ensure that an adjacency will\
    \ only be \nformed between systems which are capable of exchanging \nPDUs of length\
    \ up to maxsize octets. In the absence of this \ncheck, it would be possible for\
    \ an adjacency to exist with a \nlower maximum block size, with the result that\
    \ some LSPs \nand SNPs (i.e. those longer than this maximum, but less \nthan maxsize)\
    \ would not be exchanged.\nNOTE - An example of a topology where this could occur\
    \ is \none where an extended LAN is constructed from LAN seg\nments with different\
    \ maximum block sizes. If, as a result of \nmis-configuration or some dynamic\
    \ reconfiguration, a path \nexists between two Intermediate systems on separate\
    \ LAN \nsegments having a large maximum block size, which in\nvolves transit of\
    \ a LAN segment with a smaller maximum \nblock size, loss of larger PDUs will\
    \ occur if the Intermediate \nsystems continue to use the larger maximum block\
    \ size. It is \nbetter to refuse to bring up the adjacency in these circum\nstances.\n\
    Level 1 Intermediate systems shall transmit Level 1 LAN \nIIH PDUs to the multi-destination\
    \ address AllL1ISs, and \nalso listen on that address. They shall also listen\
    \ for ESH \nPDUs on the multi-destination address AllIntermediateSys\ntems. The\
    \ list of neighbour Intermediate systems shall con\ntain only Level 1 Intermediate\
    \ Systems within the same \narea. (i.e. Adjacencies of neighbourSystemType L1\
    \ In\ntermediate System.) \nLevel 2 Only Intermediate systems (i.e. Level 2 Intermedi\n\
    ate systems which have the Circuit manualL2OnlyMode \ncharacteristic set to the\
    \ value True) shall transmit Level 2 \nLAN IIH PDUs to the multi-destination address\
    \ AllL2ISs, \nand also listen on that address. The list of neighbour Inter\nmediate\
    \ systems shall contain only Level 2 Intermediate \nsystems. (i.e. Adjacencies\
    \ of neighbourSystemType L2 \nIntermediate System.) \nLevel 2 Intermediate systems\
    \ (with manualL2OnlyMode \nFalse) shall perform both of the above actions. Separate\
    \ \nLevel 1 and Level 2 LAN IIH PDUs shall be sent to the \nmulti-destination\
    \ addresses AllL1ISs and AllL2ISs de\nscribing the neighbour Intermediate systems\
    \ for Level 1 \nand Level 2 respectively. Separate adjacencies shall be cre\n\
    ated by the receipt of Level 1 and Level 2 LAN IIH PDUs.\n8.4.1.1 IIH PDU Acceptance\
    \ Tests\nOn receipt of a Broadcast IIH PDU, perform the following \nPDU acceptance\
    \ tests:\na)If the IIH PDU was received over a circuit whose ex\nternalDomain\
    \ attribute is True, the IS shall discard \nthe PDU.\nb)If the ID Length field\
    \ of the PDU is not equal to the \nvalue of the IS's routeingDomainIDLength, the\
    \ \nPDU shall be discarded and an iDFieldLengthMis\nmatch notification generated.\n\
    c)If the set of circuitReceivePasswords for this cir\ncuit is non-null, then perform\
    \ the following tests:\n1)If the PDU does not contain the Authentication \nInformation\
    \ field then the PDU shall be discarded \nand an authenticationFailure notification\
    \ gener\nated.\n2)If the PDU contains the Authentication Infor\nmation field,\
    \ but the Authentication Type is not \nequal to Password, then the PDU shall be\
    \ ac\ncepted unless the IS implements the authentica\ntiion procedure indicated\
    \ by the Authentication \nType. In this case whether the IS accepts or ig\nnores\
    \ the PDU is outside the scope of this Interna\ntional Standard.\n3)Otherwise,\
    \ the IS shall compare the password in \nthe received PDU with the passwords in\
    \ the set of \ncircuitReceivePasswords for the circuit on \nwhich the PDU was\
    \ received. If the value in the \nPDU matches any of these passwords, the IS shall\
    \ \naccept the PDU for further processing. If the value \nin the PDU does not\
    \ match any of the circuitRe\nceivePasswords, then the IS shall ignore the \n\
    PDU and generate an authenticationFailure no\ntification.\n8.4.1.2 Receipt of\
    \ Level 1 IIH PDUs\nOn receipt of a Level 1 LAN IIH PDU on the multi-\ncal and\
    \ remote system have no area address in common), \nthe IS shall reject the adjacency\
    \ and generate an initialisa\ntionFailure (area mismatch) notification. Otherwise\
    \ (a \nmatch is found) the IS shall accept the adjacency and set the \nAdjacency\
    \ neighbourSystemType to L1 Intermediate \nSystem.\n8.4.1.3 Receipt of Level 2\
    \ IIH PDUs \nOn receipt of a Level 2 LAN IIH PDU on the multi-\ndestination address\
    \ AllL2ISs, the IS shall accept the adja\ncency, and set the Adjacency neighbourSystemType\
    \ to \nL2 Intermediate System.\n8.4.1.4 Existing Adjacencies\nWhen a Level n LAN\
    \ IIH PDU (Level 1 or Level 2) is re\nceived from an Intermediate system for which\
    \ there is al\nready an adjacency with\na)the Adjacency lANAddress equal to the\
    \ MAC Source \naddress of the PDU, and\nb)the Adjacency neighbourSystemID equal\
    \ to the \nSource ID field from the PDU and\nc)the neighbourSystemType equal to\
    \ Ln Intermedi\nate System, \nthe IS shall update the holding timer, LAN Priority\
    \ and \nneighbourAreas according to the values in the PDU.\n8.4.1.5 New Adjacencies\
    \ \nWhen \na)a Level n LAN IIH PDU (Level 1 or Level 2) is re\nceived (from Intermediate\
    \ system R), and \nb)there is no adjacency for which the Adjacency lANAd\ndress\
    \ is equal to the MAC Source address of the \nPDU; and\nc)the Adjacency neighbourSystemID\
    \ is equal to the \nSource ID field from the PDU, and \nd)neighbourSystemType\
    \ is Ln Intermediate System, \nthe IS shall create a new adjacency. However, if\
    \ there is in\nsufficient space in the adjacency database, to permit the \ncreation\
    \ of a new adjacency the IS shall instead perform the \nactions described in 8.4.2.\n\
    The IS shall \na)set neighbourSystemType status to Ln Intermedi\nate System (where\
    \ n is the level of the IIH PDU),  \nb)set the holding timer, LAN Priority, neighbourID\
    \ \nand neighbourAreas according to the values in the \nPDU., and \nc)set the\
    \ lANAddress according to the MAC source ad\ndress of the PDU.\nThe IS shall set\
    \ the state of the adjacency to initialising, \nuntil it is known that the communication\
    \ between this sys\ntem and the source of the PDU (R) is two-way. However R \n\
    shall be included in future Level n LAN IIH PDUs trans\nmitted by this system.\n\
    When R reports this circuit's lANAddress in its Level n \nLAN IIH PDUs, the IS\
    \ shall\na)set the adjacency's state to Up, and \nb)generate an adjacencyStateChange\
    \ (Up) notifica\nLevel n LAN IIH PDUs. If a neighbour is not heard from in \n\
    that time, the IS shall\na)purge it from the database; and \nb)generate an adjacencyStateChange\
    \ (Down) notifi\ncation.\nIf a Level n LAN IIH PDU is received from neighbour\
    \ N, \nand this system's lANAddress is no longer in N's IIH \nPDU, the IS shall\n\
    a)set the adjacency's state to initialising, and \nb)generate an adjacencyStateChange\
    \ (Down) notifi\ncation.\n8.4.2 Insufficient Space in Adjacency Database\nIf an\
    \ IS needs to create a new Intermediate system adja\ncency, but there is insufficient\
    \ space in the adjacency data\nbase, the adjacency of neighbourSystemType Ln Inter\n\
    mediate System with lowest lANPriority (or if more than \none adjacency has the\
    \ lowest priority, the adjacency with \nthe lowest lANAddress, from among those\
    \ with the lowest \npriority) shall be purged from the database. If the new adja\n\
    cency would have the lowest priority, it shall be ignored, \nand a rejectedAdjacency\
    \ notification generated.\nIf an old adjacency must be purged, the IS shall generate\
    \ an \nadjacencyStateChange (Down) notification for that adja\ncency. After the\
    \ Subnetwork Independent Functions issue \nan adjacency down complete, the IS\
    \ may create a new ad\njacency.\n8.4.3 Transmission of LAN IIH PDUs\nA Level 1\
    \ IS shall transmit a Level 1 LAN IIH PDU imme\ndiately when any circuit whose\
    \ externalDomain attribute \nis False has been enabled.  A Level 2 Intermediate\
    \ Sys\ntem shall transmit a Level 2 LAN IIH PDU. A Level 2 In\ntermediate System\
    \ shall also transmit a Level 1 LAN IIH \nPDU unless the circuit is marked as\
    \ manualL2OnlyMode \nTrue.\nThe IS shall also transmit a  LAN IIH PDU when at\
    \ least 1 \nsecond has transpired since the last transmission of a LAN \n is used\
    \ instead \nrapidly, \nor\nb)the contents of the next IIH PDU to be transmitted\
    \ \nwould differ from the contents of the previous IIH \nPDU transmitted by this\
    \ system, or \nc)this system has determined that it is to become or re\nsign as\
    \ LAN Designated Intermediate System for that \nlevel. \nTo minimise the possibility\
    \ of the IIH PDU transmissions \nof all Intermediate systems on the LAN becoming\
    \ synchro\nnised, the Hello Time timer shall only be reset when a IIH \nPDU is\
    \ transmitted as a result of timer expiration, or on be\ncoming or resigning as\
    \ Designated Intermediate System.\nWhere an Intermediate system is transmitting\
    \ both Level 1 \nand Level 2 LAN IIH PDUs, it shall maintain a separate \ntimer\
    \ (separately jittered) for the transmission of the \nLevel 1 and Level 2 IIH\
    \ PDUs. This avoids correlation be\ntween the Level 1 and Level 2 IIH PDUs and\
    \ allows the re\nception buffer requirements to be minimised.\nIf the value of\
    \ the circuitTransmitPassword for the cir\ncuit is non-null, then the IS shall\
    \ include the Authentica\ntion Information field in the transmitted IIH PDU, indicat\n\
    ing an Authentication Type of Password and contain\ning the circuitTransmitPassword\
    \ as the authentication \nvalue.\n8.4.4 LAN Designated Intermediate Systems\n\
    A LAN Designated Intermediate System is the highest pri\nority Intermediate system\
    \ in a particular set on the LAN, \nwith numerically highest MAC source lANAddress\
    \ break\ning ties. (See 7.1.5 for how to compare LAN addresses.) \nThere are,\
    \ in general, two LAN Designated Intermediate \nSystems on each LAN, namely the\
    \ LAN Level 1 Desig\nnated Intermediate System and the LAN Level 2 Desig\nnated\
    \ Intermediate System. They are elected as follows.\na)Level 1 Intermediate systems\
    \ elect the LAN Level 1 \ntem.\nc)Level 2 Intermediate systems (with manu\nalL2OnlyMode\
    \ False) elect both the LAN Level 1 \nand LAN Level 2 Designated Intermediate\
    \ Systems.\nThe set of Intermediate systems to be considered includes \nthe local\
    \ Intermediate system, together with all Intermedi\nate systems of the appropriate\
    \ type as follows.\na)For the LAN Level 1 Designated Intermediate System, \nit\
    \ is the set of Intermediate systems from which LAN \nLevel 1 IIH PDUs are received\
    \ and to which Level 1 \nadjacencies exist in state Up. When the local sys\nLevel\
    \ 1 Designated Intermediate System, it shall per\nform the following actions.\n\
    1)Generate and transmit Level 1 pseudonode LSPs \nusing the existing End system\
    \ configuration.\n2)Purge the Level 1 pseudonode LSPs issued by the \nprevious\
    \ LAN Level 1 Designated Intermediate \nSystem (if any) as described in 7.2.3.\n\
    3)Solicit the new End system configuration as de\nscribed in 8.4.5.\nb)For the\
    \ LAN Level 2 Designated Intermediate System, \nit is the set of Intermediate\
    \ systems from which LAN \nLevel 2 IIH PDUs are received and to which Level 2\
    \ \nadjacencies exist in state Up. When the local sys\nLevel 2 Designated Intermediate\
    \ System, it shall per\nform the following actions.\n1)Generate and transmit a\
    \ Level 2 pseudonode LSP. \n2)Purge the Level 2 pseudonode LSPs issued by the\
    \ \nprevious LAN Level 2 Designated Intermediate \nSystem (if any) as described\
    \ in 7.2.3.\nWhen an Intermediate system resigns as LAN Level 1 or \nLevel 2 Designated\
    \ Intermediate System it shall perform \nthe actions on Link State PDUs described\
    \ in 7.2.3.\nWhen the broadcast circuit is enabled on an Intermediate \nsystem\
    \ the IS shall perform the following actions. \na)Commence sending IIH PDUs with\
    \ the LAN ID field \nset to the concatenation of its own systemID and its \nlocally\
    \ assigned one octet Local Circuit ID. \nb)Solicit the End system configuration\
    \ as described in \n8.4.5. \nc)Start listening for ISO 9542 ISH PDUs and ESH \n\
    PDUs and acquire adjacencies as appropriate. Do not \nSystem election process\
    \ depending on the Intermedi\nate system type. This shall be run subsequently\
    \ when\never an IIH PDU is received or transmitted as de\nscribed in 8.4.3. (For\
    \ these purposes, the transmission \nof the system's own IIH PDU is equivalent\
    \ to receiv\ning it). If there has been no change to the information \non which\
    \ the election is performed since the last time \nit was run, the previous result\
    \ can be assumed. The \nrelevant information is\n1)the set of Intermediate system\
    \ adjacency states, \n2)the set of Intermediate System priorities (including \n\
    this system's) and \n3)the existence (or otherwise) of at least one Up  \nEnd\
    \ system (not including Manual Adjacencies) or \nIntermediate system adjacency\
    \ on the circuit.\nAn Intermediate system shall not declare itself to be a LAN\
    \ \nDesignated Intermediate system of any type until it has at \nleast one Up\
    \ End system (not including Manual Adjacen\ncies) or Intermediate system adjacency\
    \ on the circuit. (This \nprevents an Intermediate System which has a defective\
    \ re\nceiver and is incapable of receiving any PDUs from errone\nously electing\
    \ itself LAN Designated Intermediate System.) \nThe LAN ID field in the LAN IIH\
    \ PDUs transmitted by this \nsystem shall be set to the value of the LAN ID field\
    \ reported \nin the LAN IIH PDU (for the appropriate level) received \nfrom the\
    \ system which this system considers to be the Des\nignated Intermediate System.\
    \ This value shall also be \npassed to the Update Process, as the pseudonode ID,\
    \ to en\nable Link State PDUs to be issued for this system claiming \nconnectivity\
    \ to the pseudonode.\nIf this system, as a result of the Designated Intermediate\
    \ \nSystem election process, considers itself to be designated \nIntermediate\
    \ System, the LAN ID field shall be set to the \nconcatenation of this system's\
    \ own system ID and the lo\ncally assigned one octet Local Circuit ID.\n8.4.5\
    \ Soliciting the ES configuration\nWhen there is a change in the topology or configuration\
    \ of \nthe LAN (for example the partitioning of a LAN into two \nsegments by the\
    \ failure of a repeater or bridge), it is desir\nable for the (new) Designated\
    \ Intermediate System to ac\nquire the new End system configuration of the LAN\
    \ as \nquickly as possible in order that it may generate Link State \nPDUs which\
    \ accurately reflect the actual configuration. \nThis is achieved as follows.\n\
    When the circuit is enabled, or the Intermediate system de\ntects a change in\
    \ the set of Intermediate systems on the \nLAN, or a change in the Designated\
    \ Intermediate System \nother Intermediate systems which have detected the \n\
    change.) \nb)If (and only if) an Intermediate System had been re\nmoved from the\
    \ set of Intermediate systems on the \nLAN, reset the entryRemainingTime field\
    \ in the \nor the existing value whichever is the lower. (This \ncauses any End\
    \ systems which are no longer present \non the LAN to be rapidly timed out, but\
    \ not before \nthey have a chance to respond to the poll.)\nTimer value of defaultESHelloTimer.\n\
    8.4.6 Receipt of ESH PDUs  Database of End \nSystems\nAn IS shall enter an End\
    \ system into the adjacency database \nwhen an ESH PDU is received from a new\
    \ data link ad\ndress. If an ESH PDU is received with the same data link \naddress\
    \ as a current adjacency, but with a different NSAP \naddress, the new address\
    \ shall be added to the adjacency, \nwith a separate timer. A single ESH PDU may\
    \ contain more \nthan one NSAP address. When a new data link address or \nNSAP\
    \ address is added to the adjacency database, the IS \nshall generate an adjacencyStateChange\
    \ (Up) notifica\ntion on that adjacency.\nThe IS shall set a timer for the value\
    \ of the Holding Time \nfield in the received ESH PDU. If another ESH PDU is not\
    \ \nreceived from the ES before that timer expires, the ES shall \nbe purged from\
    \ the database, provided that the Subnetwork \nIndependent Functions associated\
    \ with initialising the adja\ncency have been completed. Otherwise the IS shall\
    \ clear the \nadjacency as soon as those functions are completed.\nWhen the adjacency\
    \ is cleared, the Subnetwork Independ\nent Functions shall be informed of an adjacencyState\n\
    Change (Down) notification, and the adjacency can be re-\nused after the Subnetwork\
    \ Independent Functions associ\nated with bringing down the adjacency have been\
    \ com\npleted.\n9 Structure and Encoding of PDUs\nThis clause describes the PDU\
    \ formats of the Intra-Domain \nRouteing protocol.\n9.1 General encoding Rules\n\
    Octets in a PDU are numbered starting from 1, in increasing \norder. Bits in a\
    \ octet are numbered from 1 to 8, where bit 1 \nis the least significant bit and\
    \ is pictured on the right. When \nconsecutive octets are used to represent a\
    \ number, the lower \noctet number has the most significant value.\nFields marked\
    \ Reserved (or simply R) are transmitted as \nzero, and ignored on receipt, unless\
    \ otherwise noted.\nValues are given in decimal. All numeric fields are un\nsigned\
    \ integers, unless otherwise noted.\n9.2 Encoding of Network Layer \nAddresses\n\
    Network Layer addresses (NSAP addresses, NETs, area ad\ndresses and Address Prefixes)\
    \ are encoded in PDUs accord\ning to the preferred binary encoding specified in\
    \ \nISO 8348/Add.2; the entire address, taken as a whole is rep\nresented explicitly\
    \ as a string of binary octets. This string is \nconveyed in its entirety in the\
    \ address fields of the PDUs. \nThe rules governing the generation of the preferred\
    \ binary \nencoding are described in ISO 8348/Add.2. The address so \ngenerated\
    \ is encoded with the most significant octet (i.e. the \nAFI) of the address being\
    \ the first octet transmitted, and the \nmore significant semi-octet of each pair\
    \ of semi-octets in \nthe address is encoded in the more significant semi-octet\
    \ of \neach octet (i.e. in the high order 4 bits). Thus the address \n/371234\
    \ is encoded as\nFigure 6 - 111No. of Octets3\n7\n1\n2\n3\n4\nAddress encoding\
    \ example\n9.3 Encoding of SNPA Addresses\nSNPA addresses (e.g. lANAddress) shall\
    \ be encoded ac\ncording to the rules specified for the particular type of \n\
    subnetwork being used. In the case of an ISO 8802 \nsubnetwork, the SNPA address\
    \ is the MAC address defined \nin ISO 10039, which is encoded according to the\
    \ binary \nrepresentation of MAC addresses specified in ISO 10039.\n9.4 PDU Types\n\
    The types of PDUs are: \n-Level 1 LAN IS to IS Hello PDU \n-Level 2 LAN IS to\
    \ IS Hello PDU \n-Point-to-Point IS to IS Hello PDU \n-Level 1 Link State PDU\n\
    -Level 2 Link State PDU\n-Level 1 Complete Sequence Numbers PDU\n-Level 2 Complete\
    \ Sequence Numbers PDU\n-Level 1 Partial Sequence Numbers PDU\n-Level 2 Partial\
    \ Sequence Numbers PDU\nThese are described in the following subclauses.\n9.5\
    \ Level 1 LAN IS to IS Hello PDU\nThis PDU is multicast by Intermediate systems\
    \ on broad\ncast circuits to the multi-destination address AllL1ISs.  \nThe purpose\
    \ of this PDU is for Intermediate systems on \nbroadcast circuits to discover\
    \ the identity of other Level 1 \nIntermediate systems on that circuit. Trailing\
    \ Pad options \nare inserted to make PDU Length equal to at least maxsize \n121VARIABLEIntradomain\
    \ Routeing \nProtocol Discriminator\nLength Indicator\nVersion/Protocol ID Extension\n\
    ID Length\nPDU Type\nR\nR\nR\nVersion\nECO\nUser ECO\nReserved/Circuit Type\n\
    Source ID\nHolding Time\nLAN ID\nPDU Length\nPriority\nR\nVARIABLE LENGTH FIELDS\n\
    -Intradomain Routeing Protocol Discriminator  \narchitectural constant\n-Length\
    \ Indicator  Length of the fixed header in oc\ntets\n-Version/Protocol ID Extension\
    \  1 \n-ID Length  Length of the ID field of NSAP ad\ndresses and NETs used in\
    \ this routeing domain. This \nfield shall take on one of the following values:\n\
    7An integer between 1 and 8, inclusive, indicating \nan ID field of the corresponding\
    \ length\n7The value zero, which indicates a 6 octet ID field \nlength\n7The value\
    \ 255, whhich means a null ID field (i.e. \nzero length)\nAll other values are\
    \ illegal and shall not be used.\n-PDU Type (bits 1 through 5)  15. Note bits\
    \ 6, 7 and \n8 are Reserved, which means they are transmitted as 0 \nand ignored\
    \ on receipt.\n-Version  1\n-ECO  transmitted as zero, ignored on receipt\n-User\
    \ ECO  transmitted as zero, ignored on receipt\n-Reserved/Circuit Type  Most significant\
    \ 6 bits re\nserved (Transmitted as zero, ignored on receipt). Low \norder bits\
    \ (bits 1 and 2) indicate: \n70  reserved value (if specified the entire PDU \n\
    shall be ignored) \n71  Level 1 only \n72  Level 2 only (sender is Level 2 Intermediate\
    \ \nsystem with manualL2OnlyMode set True for \nthis circuit, and will use this\
    \ link only for Level 2 \ntraffic) \n73  both Level 1 and Level 2 (sender is Level\
    \ 2 In\ntermediate system, and will use this link both for \nLevel 1 and Level\
    \ 2 traffic)\nNOTE  In a LAN Level 1 IIH PDU the Circuit \nType shall be either\
    \ 1 or 3.\n-Source ID  the system ID of transmitting Intermedi\nate system \n\
    -Holding Time  Holding Timer to be used for this In\ntermediate system \n-PDU\
    \ Length  Entire length of this PDU, in octets, \nincluding header\n-Reserved/Priority\
    \  Bit 8 reserved (Transmitted as \nzero, ignored on receipt). Bits 1 through\
    \ 7  priority \nfor being LAN Level 1 Designated Intermediate Sys\ntem. Higher\
    \ number has higher priority for being LAN \nLevel 1 Designated Intermediate System.\
    \ Unsigned \ninteger.\n-LAN ID  a field composed the system ID (18 octets) \n\
    of the LAN Level 1 Designated Intermediate System, \nplus a low order octet assigned\
    \ by LAN Level 1 Des\nignated Intermediate System. Copied from LAN \nLevel 1 Designated\
    \ Intermediate System's IIH PDU.\n-VARIABLE LENGTH FIELDS  fields of the form:11No.\
    \ of OctetsLENGTHCODE\nLENGTH\nVALUE\nAny codes in a received PDU that are not\
    \ recognised \nshall be ignored.\nxCODE  1 \nxLENGTH  total length of the value\
    \ field.\nxVALUE 1Address Length1Address LengthNo. of OctetsAddress Length\nArea\
    \ Address\nAddress Length\nArea Address\n7Address Length  Length of Area Ad\n\
    dress in octets.\n7Area Address  Area address.\n7Intermediate System Neighbours\
    \  This option \nfield can occur multiple times. The set of Interme\ndiate systems\
    \ on this LAN to which adjacencies of \nneighbourSystemType L1 Intermediate Sys\n\
    tem exist in state Up or Initialising (i.e.  \nthose from which Level 1 IIH PDUs\
    \ have been \nheard).\nxCODE  6 \nxLENGTH  total length of the value field.\n\
    xVALUE 66No. of OctetsLAN Address\nLAN Address\n7LAN Address  6 octet MAC Address\
    \ of \nIntermediate System neighbour.\n7Padding  This option may occur multiple\
    \ times. \nIt is used to pad the PDU to at least maxsize - 1.\nxCODE  8.\nxLENGTH\
    \  total length of the value field (may \nbe zero).\nxVALUE  LENGTH octets of\
    \ arbitrary value.\n7Authentication Information  information for \nperforming\
    \ authentication of the originator of the \nPDU.\nxCODE  10.\nxLENGTH  variable\
    \ from 1254 octets\nxVALUE 1VARIABLENo. of OctetsAuthentication Type\nAuthentication\
    \ Value\n7Authentication Type  a one octet iden\ntifier for the type of authentication\
    \ to be \ncarried out. The following values are de\nfined:\n0  RESERVED\n1  Cleartext\
    \ Password\n2254  RESERVED\n255  Routeing Domain private \nauthentication method\n\
    7Authentication Value  determined by \nthe value of the authentication type. If\
    \ \nCleartext Password as defined in this Inter\nnational Standard is used, then\
    \ the authenti\ncation value is an octet string.\n9.6 Level 2 LAN IS to IS Hello\
    \ PDU\nThis PDU is multicast by Intermediate systems on broad\ncast circuits to\
    \ the multi-destination address AllL2ISs.  \nThe purpose of this PDU is for Intermediate\
    \ systems on \nbroadcast circuits to discover the identity of other Level 2 \n\
    Intermediate systems on that circuit. Trailing Pad options \nare inserted to make\
    \ PDU Length equal to at least maxsize \n- 1 where\n-dataLinkBlocksize\n-originatingL2LSPBufferSize\n\
    (see 8.4.1). 11No. of Octets1111111ID Length2ID Length +\n121VARIABLEIntradomain\
    \ Routeing\nProtocol Discriminator\nLength Indicator\nVersion/Protocol ID Extension\n\
    ID Length\nPDU Type\nR\nR\nR\nVersion\nECO\nUser ECO\nReserved/Circuit Type\n\
    Source ID\nHolding Time\nLAN ID\nPDU Length\nPriority\nR\nVARIABLE LENGTH FIELDS\n\
    -Intradomain Routeing Protocol Discriminator  ar\nchitectural constant \n-Length\
    \ Indicator  Length of fixed header in octets \n-Version/Protocol ID Extension\
    \  1 \n-ID Length  Length of the ID field of NSAP ad\ndresses and NETs used in\
    \ this routeing domain. This \nfield shall take on one of the following values:\n\
    7An integer between 1 and 8, inclusive, indicating \nan ID field of the corresponding\
    \ length\n7The value zero, which indicates a 6 octet ID field \nlength\n7The value\
    \ 255, whhich means a null ID field (i.e. \nzero length)\nAll other values are\
    \ illegal and shall not be used.\n-PDU Type (bits 1 through 5)  16. Note bits\
    \ 6, 7 and \n8 are Reserved, which means they are transmitted as 0 \nand ignored\
    \ on receipt.\n-Version  1\n-ECO  transmitted as zero, ignored on receipt\n-User\
    \ ECO  transmitted as zero, ignored on receipt\n-Reserved/Circuit Type  Most significant\
    \ 6 bits re\nserved (Transmitted as zero, ignored on receipt). Low \norder bits\
    \ (bits 1 and 2) indicate:\n70  reserved value (if specified the entire PDU \n\
    shall be ignored) \n71  Level 1 only \n72  Level 2 only (sender is Level 2 Intermediate\
    \ \nSystem with manualL2OnlyMode set True for \nthis circuit, and will use this\
    \ link only for Level 2 \ntraffic) \n73  both Level 1 and Level 2 (sender is Level\
    \ 2 In\ntermediate System, and will use this link both for \nLevel 1 and Level\
    \ 2 traffic)\nNOTE  In a LAN Level 2 IIH PDU the Circuit Type \nshall be either\
    \ 2 or 3.\n-Source ID  the system ID of transmitting Intermedi\nate System \n\
    -Holding Time  Holding Timer to be used for this In\ntermediate System \n-PDU\
    \ Length  Entire length of this PDU, in octets, \nincluding header \n-Reserved/Priority\
    \  Bit 8 reserved (Transmitted as \nzero, ignored on receipt). Bits 1 through\
    \ 7  priority \nfor being LAN Level 2 Designated Intermediate Sys\ntem. Higher\
    \ number has higher priority for being LAN \nLevel 2 Designated Intermediate System.\
    \ Unsigned \ninteger.\n-LAN ID  a field composed the system ID (18 octets) \n\
    of the LAN Level 1 Designated Intermediate System, \nplus a low order octet assigned\
    \ by LAN Level 1 Des\nignated Intermediate System. Copied from LAN \nLevel 1 Designated\
    \ Intermediate System's IIH PDU.\n-VARIABLE LENGTH FIELDS  fields of the form:11No.\
    \ of OctetsLENGTHCODE\nLENGTH\nVALUE\nAny codes in a received PDU that are not\
    \ recognised \nshall be ignored.\nxCODE  1 \nxLENGTH  total length of the value\
    \ field.\nxVALUE 1Address Length1Address LengthNo. of OctetsAddress Length\nArea\
    \ Address\nAddress Length\nArea Address\n7Address Length  Length of area address\
    \ \nin octets.\n7Area Address  Area address.\n7Intermediate System Neighbours\
    \  This option \ncan occur multiple times. The set of Intermediate \nsystems on\
    \ this LAN to which adjacencies of \nneighbourSystemType L2 Intermediate Sys\n\
    tem exist in state Up or Initialising (i.e.  \nthose from which Level 2 IIH PDUs\
    \ have been \nheard).\nxCODE  6 \nxLENGTH  total length of the value field.\n\
    xVALUE 66No. of OctetsLAN Address\nLAN Address\nxLAN Address  6 octet MAC Address\
    \ of In\ntermediate System neighbour\n7Padding  This option may occur multiple\
    \ times. \nIt is used to pad the PDU to at least maxsize 1.\nxCODE  8.\nxLENGTH\
    \  total length of the value field (may \nbe zero).\nxVALUE  LENGTH octets of\
    \ arbitrary value.\n7Authentication Information  information for \nperforming\
    \ authentication of the originator of the \nPDU.\nxCODE  10.\nxLENGTH  variable\
    \ from 1254 octets\nxVALUE 1VARIABLENo. of OctetsAuthentication Type\nAuthentication\
    \ Value\n7Authentication Type  a one octet iden\ntifier for the type of authentication\
    \ to be \ncarried out. The following values are de\nfined:\n0  RESERVED\n1  Cleartext\
    \ Password\n2254  RESERVED\n255  Routeing Domain private \nauthentication method\n\
    7Authentication Value  determined by \nthe value of the authentication type. If\
    \ \nCleartext Password as defined in this Inter\nnational Standard is used, then\
    \ the authenti\ncation value is an octet string.\n9.7 Point-to-Point IS to IS\
    \ Hello PDU\nThis PDU is transmitted by Intermediate systems on non-\nbroadcast\
    \ circuits, after receiving an ISH PDU from the \nneighbour system. Its purpose\
    \ is to determine whether the \nneighbour is a Level 1 or a Level 2 Intermediate\
    \ System. \nTrailing pad options are inserted to make PDU Length \nequal to at\
    \ least maxsize  1 where maxsize is the maxi\n(see 8.2.3).11No. of Octets1111111ID\
    \ Length212VARIABLEIntradomain Routeing\nProtocol Discriminator\nLength Indicator\n\
    Version/Protocol ID Extension\nID Length\nPDU Type\nR\nR\nR\nVersion\nECO\nUser\
    \ ECO\nReserved/Circuit Type\nSource ID\nHolding Time\nLocal Circuit ID\nPDU Length\n\
    VARIABLE LENGTH FIELDS\n-Intradomain Routeing Protocol Discriminator  \narchitectural\
    \ constant \n-Length Indicator  Length of fixed header in octets \n-Version/Protocol\
    \ ID Extension  1 \n-ID Length  Length of the ID field of NSAP ad\ndresses and\
    \ NETs used in this routeing domain. This \nfield shall take on one of the following\
    \ values:\n7An integer between 1 and 8, inclusive, indicating \nan ID field of\
    \ the corresponding length\n7The value zero, which indicates a 6 octet ID field\
    \ \nlength\n7The value 255, whhich means a null ID field (i.e. \nzero length)\n\
    All other values are illegal and shall not be used.\n-PDU Type  (bits 1 through\
    \ 5)  17. Note bits 6, 7 \nand 8 are Reserved, which means they are transmitted\
    \ \nas 0 and ignored on receipt.\n-Version  1\n-ECO  transmitted as zero, ignored\
    \ on receipt\n-User ECO  transmitted as zero, ignored on receipt\n-Reserved/Circuit\
    \ Type  Most significant 6 bits re\nserved (Transmitted as zero, ignored on receipt).\
    \ Low \norder bits (bits 1 and 2) indicate:\n70  reserved value (if specified\
    \ the entire PDU \nshall be ignored) \n71  Level 1 only\n72  Level 2 only (sender\
    \ is Level 2 Intermediate \nsystem with manualL2OnlyMode set True for \nthis circuit,\
    \ and will use this link only for Level 2 \ntraffic) \n73  both Level 1 and Level\
    \ 2 (sender is Level 2 In\ntermediate system and will use this link both for \n\
    Level 1 and Level 2 traffic)\n-Source ID  the system ID of transmitting Intermedi\n\
    ate system \n-Holding Time  Holding Timer to be used for this In\ntermediate system\
    \ \n-PDU Length  Entire length of this PDU, in octets, \nincluding header \n-Local\
    \ Circuit ID  1 octet unique ID assigned to this \ncircuit when it is created\
    \ by this Intermediate system. \nThe actual ID by which the circuit is known to\
    \ both \nends of the link is determined by the Intermediate sys\ntem with the\
    \ lower Source ID.\n-VARIABLE LENGTH FIELDS  fields of the form:11No. of OctetsLENGTHCODE\n\
    LENGTH\nVALUE\nAny codes in a received PDU that are not recognised \nxCODE  1\
    \ \nxLENGTH  total length of the value field.\nxVALUE 1Address Length1Address\
    \ LengthNo. of OctetsAddress Length\nArea Address\nAddress Length\nArea Address\n\
    7Address Length  Length of area address \nin octets.\n7Area Address  Area address.\n\
    7Padding  This option may occur multiple times. \nIt is used to pad the PDU to\
    \ at least maxsize 1.\nxCODE  8.\nxLENGTH  total length of the value field (may\
    \ \nbe zero).\nxVALUE  LENGTH octets of arbitrary value.\n7Authentication Information\
    \  information for \nperforming authentication of the originator of the \nPDU.\n\
    xCODE  10.\nxLENGTH  variable from 1254 octets\nxVALUE 1VARIABLENo. of OctetsAuthentication\
    \ Type\nAuthentication Value\n7Authentication Type  a one octet iden\ntifier for\
    \ the type of authentication to be \ncarried out. The following values are de\n\
    fined:\n0  RESERVED\n1  Cleartext Password\n2254  RESERVED\n255  Routeing Domain\
    \ private \nauthentication method\n7Authentication Value  determined by \nthe\
    \ value of the authentication type. If \nCleartext Password as defined in this\
    \ Inter\nnational Standard is used, then the authenti\ncation value is an octet\
    \ string.\n9.8 Level 1 Link State PDU\nLevel 1 Link State PDUs are generated by\
    \ Level 1 and \nLevel 2 Intermediate systems, and propagated throughout \nan area.\
    \ The contents of the Level 1 Link State PDU indi\ncates the state of the adjacencies\
    \ to neighbour Intermediate \nSystems, or pseudonodes, and End systems of the\
    \ Interme\ndiate system that originally generated the PDU.11No. of\nOctets11111122ID\
    \ Length + 214VARIABLE2Intradomain Routeing \nProtocol Discriminator\nLength Indicator\n\
    Version/Protocol ID Extension\nID Length\nPDU Type\nR\nR\nR\nVersion\nECO\nUser\
    \ ECO\nPDU Length\nRemaining Lifetime\nLSP ID\nP\nSequence Number\nVARIABLE LENGTH\
    \ FIELDS\nLSPDBOL\nIS Type\nChecksum\nATT\n-Intradomain Routeing Protocol Discriminator\
    \  ar\nchitectural constant\n-Length Indicator  Length if fixed header in octets\
    \ \n-Version/Protocol ID Extension  1\n-ID Length  Length of the ID field of NSAP\
    \ ad\ndresses and NETs used in this routeing domain. This \nfield shall take on\
    \ one of the following values:\n7An integer between 1 and 8, inclusive, indicating\
    \ \nan ID field of the corresponding length\n7The value zero, which indicates\
    \ a 6 octet ID field \nlength\n7The value 255, whhich means a null ID field (i.e.\
    \ \nzero length)\nAll other values are illegal and shall not be used.\n-PDU Type\
    \ (bits 1 through 5)  18. Note bits 6, 7 and \n8 are Reserved, which means they\
    \ are transmitted as 0 \nand ignored on receipt.\n-Version  1 \n-ECO  transmitted\
    \ as zero, ignored on receipt \n-User ECO  transmitted as zero, ignored on receipt\
    \ \n-PDU Length  Entire Length of this PDU, in octets, \nincluding header \n-Remaining\
    \ Lifetime  Number of seconds before \nLSP considered expired \n-LSP ID  the system\
    \ ID of the source of the Link \nState PDU. It is structured as follows:ID Length1No.\
    \ of Octets1Source ID\nPseudonode ID\nLSP Number\n-Sequence Number  sequence number\
    \ of LSP \n-Checksum  Checksum of contents of LSP from \nSource ID to end. Checksum\
    \ is computed as de\nscribed in 7.3.11.\n-P/ATT/LSPDBOL/IS Type\n-P  Bit 8, indicates\
    \ when set that the issuing Interme\ndiate System supports the Partition Repair\
    \ optional \nfunction. \n7ATT - Bits 7-4 indicate, when set, that the issuing\
    \ \nIntermediate System is `attached' to other areas \nusing:\nxBit 4 - the Default\
    \ Metric\nxBit 5 - the Delay Metric\nxBit 6 - the Expense Metric\nxBit 7 - the\
    \ Error Metric. \n7LSPDBOL  Bit 3  A value of 0 indicates no \nLSP Database Overload,\
    \ and a value of 1 indicates \nthat the LSP Database is Overloaded. An LSP with\
    \ \nthis bit set will not be used by any decision proc\ness to calculate routes\
    \ to another IS through the \noriginating system.\n7IS Type  Bits 1 and 2 indicate\
    \ the type of Inter\nmediate System  One of the following values: \nx0  Unused\
    \ value\nx1  ( i.e. bit 1 set) Level 1 Intermediate system\nx2  Unused value \n\
    x3  (i.e. bits 1 and 2 set) Level 2 Intermediate \nsystem.\n-VARIABLE LENGTH FIELDS\
    \  fields of the form:11No. of OctetsLENGTHCODE\nLENGTH\nVALUE\nAny codes in a\
    \ received LSP that are not recognised \nLSPs not generated on behalf of the pseudonode\
    \ \nthis option shall always be present in the LSP with \nLSP number zero, and\
    \ shall never be present in an \nLSP with non-zero LSP number. It shall appear\
    \ \nbefore any Intermediate System Neighbours or \nEnd System Neighbours options.\
    \ This option \nshall never be present in pseudonode LSPs. \nxCODE  1 \nxLENGTH\
    \  total length of the value field.\nxVALUE 1Address Length1Address LengthNo.\
    \ of OctetsAddress Length\nArea Address\nAddress Length\nArea Address\n7Address\
    \ Length  Length of area address \nin octets.\n7Area Address  Area address. \n\
    7Intermediate System Neighbours  Intermedi\nate system and pseudonode neighbours.\n\
    This is permitted to appear multiple times, and in \nan LSP with any LSP number.\
    \ However, all the \nIntermediate System Neighbours options \nshall precede the\
    \ End System Neighbours op\ntions. i.e. they shall appear before any End system\
    \ \nNeighbour options in the same LSP and no End \nsystem Neighbour options shall\
    \ appear in an LSP \nwith lower LSP number.\nxCODE  2.\nxLENGTH  1. plus a multiple\
    \ of 11.\nxVALUE No. of Octets11ID Length + 11111ID Length + 1111Virtual Flag\n\
    Default Metric\nNeighbour ID\nDelay Metric\nExpense Metric\nError Metric\nI/E\n\
    0\nI/E\nS\nI/E\nS\nI/E\nS\nDefault Metric\nNeighbour ID\nDelay Metric\nExpense\
    \ Metric\nError Metric\nI/E\n0\nI/E\nS\nI/E\nS\nI/E\nS\n7Virtual Flag is a Boolean.\
    \ If equal to 1, this \nindicates the link is really a Level 2 path to \nrepair\
    \ an area partition. (Level 1 Intermedi\nate Systems would always report this\
    \ octet \nas 0 to all neighbours). \n7Default Metric is the value of the default\
    \ \nmetric for the link to the listed neighbour. \nBit 8  of this field is reserved.\
    \ Bit 7 of this \nfield (marked I/E) indicates the metric type, \nand shall contain\
    \ the value 0, indicating \nan Internal metric.\n7Delay Metric is the value of\
    \ the delay met\nric for the link to the listed neighbour.  If \nthis IS does\
    \ not support this metric it shall \nset the bit S to 1 to indicate that the met\n\
    ric is unsupported. Bit 7 of this field \n(marked I/E) indicates the metric type,\
    \ and \nshall contain the value 0, indicating an \nInternal metric.\n7Expense\
    \ Metric is the value of the ex\npense metric for the link to the listed neigh\n\
    bour.  If this IS does not support this metric \nit shall set the bit S to 1 to\
    \ indicate that \nthe metric is unsupported. Bit 7 of this field \n(marked I/E)\
    \ indicates the metric type, and \nshall contain the value 0, indicating an \n\
    Internal metric.\n7Error Metric is the value of the error metric \nfor the link\
    \ to the listed neighbour.  If this \nIS does not support this metric it shall\
    \ set \nthe bit S to 1 to indicate that the metric is \nunsupported. Bit 7 of\
    \ this field (marked \nI/E) indicates the metric type, and shall \ncontain the\
    \ value 0, indicating an Internal \nmetric.\n7Neighbour ID. For Intermediate System\
    \ \nneighbours, the first ID Length octets are \nthe neighbour's system ID, and\
    \ the last oc\ntet is 0. For pseudonode neighbours, the \nfirst ID Length octets\
    \ is the LAN Level 1 \nDesignated Intermediate System's ID, and \nthe last octet\
    \ is a non-zero quantity defined \nby the LAN Level 1 Designated Intermedi\nate\
    \ System. \n7End System Neighbours  End system neigh\nbours \nThis may appear\
    \ multiple times, and in an LSP \nwith any LSP number. See the description of\
    \ the \nIntermediate System Neighbours option \nabove for the relative ordering\
    \ constraints. Only \nadjacencies with identical costs can appear in the \nsame\
    \ list.\nxCODE  3.\nxLENGTH  4. plus a multiple of 6.\nxVALUE ID LengthNo. of\
    \ Octets1ID Length111Neighbour ID\nDefault Metric\nNeighbour ID\nDelay Metric\n\
    Expense Metric\nError Metric\nI/E\n0\nI/E\nS\nI/E\nS\nI/E\nS\n7Default Metric\
    \ is the value of the default \nmetric for the link to each of the listed \nneighbours.\
    \ Bit 8 of this field is reserved. \nBit 7 of this field (marked I/E) indicates\
    \ the \nmetric type, and shall contain the value 0, \nindicating an Internal metric.\n\
    7Delay Metric is the value of the delay met\nric for the link to each of the listed\
    \ neigh\nbours.  If this IS does not support this met\nric it shall set the bit\
    \ S to 1 to indicate \nthat the metric is unsupported. Bit 7 of this \nfield (marked\
    \ I/E) indicates the metric type, \nand shall contain the value 0, indicating\
    \ \nan Internal metric.\n7Expense Metric is the value of the ex\npense metric\
    \ for the link to each of the \nlisted neighbours.  If this IS does not sup\n\
    port this metric it shall set the bit S to 1 \nto indicate that the metric is\
    \ unsupported. \nBit 7 of this field (marked I/E) indicates the \nmetric type,\
    \ and shall contain the value 0, \nindicating an Internal metric.\n7Error Metric\
    \ is the value of the error metric \nfor the link to each of the listed neighbour.\
    \  \nIf this IS does not support this metric it \nshall set the bit S to 1 to\
    \ indicate that the \nmetric is unsupported. Bit 7 of this field \n(marked I/E)\
    \ indicates the metric type, and \nshall contain the value 0, indicating an \n\
    Internal metric.\n7Neighbour ID  system ID of End system \nneighbour.\n7Authentication\
    \ Information  information for \nperforming authentication of the originator of\
    \ the \nPDU.\nxCODE  10.\nxLENGTH  variable from 1254 octets\nxVALUE 1VARIABLENo.\
    \ of OctetsAuthentication Type\nAuthentication Value\n7Authentication Type  a\
    \ one octet iden\ntifier for the type of authentication to be \ncarried out. The\
    \ following values are de\nfined:\n0  RESERVED\n1  Cleartext Password\n2254  RESERVED\n\
    255  Routeing Domain private \nauthentication method\n7Authentication Value  determined\
    \ by \nthe value of the authentication type. If \nCleartext Password as defined\
    \ in this Inter\nnational Standard is used, then the authenti\ncation value is\
    \ an octet string.\n9.9 Level 2 Link State PDU\nLevel 2 Link State PDUs are generated\
    \ by Level 2 Interme\ndiate systems, and propagated throughout the level 2 do\n\
    main. The contents of the Level 2 Link State PDU indicates \nthe state of the\
    \ adjacencies to neighbour Level 2 Intermedi\nate Systems, or pseudonodes, and\
    \ to reachable address pre\nfixes of the Intermediate system that originally generated\
    \ \nthe PDU.11No. of Octets11111122ID Length + 214VARIABLE2Intradomain Routeing\
    \ \nProtocol Discriminator\nLength Indicator\nVersion/Protocol ID Extension\n\
    ID Length\nPDU Type\nR\nR\nR\nVersion\nECO\nUser ECO\nPDU Length\nRemaining Lifetime\n\
    LSP ID\nP\nSequence Number\nVARIABLE LENGTH FIELDS\nLSPDBOL\nIS Type\nChecksum\n\
    ATT\n-Intradomain Routeing Protocol Discriminator  ar\nchitectural constant \n\
    -Length Indicator  Length of fixed header in octets\n-Version/Protocol ID Extension\
    \  1\n-ID Length  Length of the ID field of NSAP ad\ndresses and NETs used in\
    \ this routeing domain. This \nfield shall take on one of the following values:\n\
    7An integer between 1 and 8, inclusive, indicating \nan ID field of the corresponding\
    \ length\n7The value zero, which indicates a 6 octet ID field \nlength\n7The value\
    \ 255, whhich means a null ID field (i.e. \nzero length)\nAll other values are\
    \ illegal and shall not be used.\n-PDU Type (bits 1 through 5)  20. Note bits\
    \ 6, 7 and \n8 are Reserved, which means they are transmitted as 0 \nand ignored\
    \ on receipt.\n-Version  1 \n-ECO  transmitted as zero, ignored on receipt \n\
    -User ECO  transmitted as zero, ignored on receipt \n-PDU Length  Entire Length\
    \ of this PDU, in octets, \nincluding header.\n-Remaining Lifetime  Number of\
    \ seconds before \nLSP considered expired \n-LSP ID  the system ID of the source\
    \ of the Link \nState PDU. It is structured as follows:ID Length1No. of Octets1Source\
    \ ID\nPseudonode ID\nLSP Number\n-Sequence Number  sequence number of LSP \n-Checksum\
    \  Checksum of contents of LSP from \nSource ID to end. Checksum is computed as\
    \ de\nscribed in 7.3.11.\n-P/ATT/LSPDBOL/IS Type\n7P  Bit 8, indicates when set\
    \ that the issuing Inter\nmediate System supports the Partition Repair op\ntional\
    \ function.\n7ATT - Bits 7-4 indicate, when set, that the issuing \nIntermediate\
    \ System is `attached' to other areas \nusing:\nxBit 4 - the Default Metric\n\
    xBit 5 - the Delay Metric\nxBit 6 - the Expense Metric\nxBit 7 - the Error Metric.\n\
    7LSPDBOL  Bit 3  A value of 0 indicates no \nLSP Database Overload, and a value\
    \ of 1 indicates \nthat the LSP Database is Overloaded. An LSP with \nthis bit\
    \ set will not be used by any decision proc\ness to calculate routes to another\
    \ IS through the \noriginating system.\n7IS Type  Bits 1 and 2 indicate the type\
    \ of Inter\nmediate System  One of the following values: \nx0  Unused value\n\
    x1  ( i.e. bit 1 set) Level 1 Intermediate system\nx2  Unused value \nx3  (i.e.\
    \ bits 1 and 2 set) Level 2 Intermediate \nsystem.\nNOTE  In a Level 2 Link State\
    \ PDU, IS Type \nshall be 3.\n-VARIABLE LENGTH FIELDS  fields of the form:11No.\
    \ of OctetsLENGTHCODE\nLENGTH\nVALUE\nAny codes in a received LSP that are not\
    \ recognised \npseudonode LSPs this option shall always be pre\nsent in the LSP\
    \ with LSP number zero, and shall \nnever be present in an LSP with non-zero LSP\
    \ \nnumber. It shall appear before any Intermediate \nSystem Neighbours or Prefix\
    \ Neighbours op\ntions. This option shall never be present in \npseudonode LSPs.\
    \ \nxCODE  1 \nxLENGTH  total length of the value field.\nxVALUE 1Address Length1Address\
    \ LengthNo. of OctetsAddress Length\nArea Address\nAddress Length\nArea Address\n\
    7Address Length  Length of area address \nin octets.\n7Area Address  Area address.\n\
    7Partition Designated Level 2 Intermediate \nSystem  ID of Designated Level 2\
    \ Intermediate \nSystem for the partition. For non-pseudonode \nLSPs issued by\
    \ Intermediate Systems which sup\nport the partition repair optional function\
    \ this op\ntion shall always be present in the LSP with LSP \nnumber zero, and\
    \ shall never be present in an LSP \nwith non-zero LSP number. It shall appear\
    \ before \nany Intermediate System Neighbours or Prefix \nNeighbours options.\
    \ This option shall never be \npresent in pseudonode LSPs.\nxCODE  4.\nxLENGTH\
    \  6 \nxVALUE  ID of Partition Designated Level 2 \nIntermediate System for the\
    \ partition.\n7Intermediate System Neighbours  Intermedi\nate system and pseudonode\
    \ neighbours.\nThis is permitted to appear multiple times, and in \nan LSP with\
    \ any LSP number. However, all the \nIntermediate System Neighbours options \n\
    shall precede the Prefix Neighbours options. \ni.e. they shall appear before any\
    \ Prefix Neighbour \noptions in the same LSP and no Prefix Neighbour \noptions\
    \ shall appear in an LSP with lower LSP \nnumber.\nxCODE  2.\nxLENGTH  1. plus\
    \ a multiple of 11.\nxVALUE No. of Octets11ID Length + 11111ID Length + 1111Virtual\
    \ Flag\nDefault Metric\nNeighbour ID\nDelay Metric\nExpense Metric\nError Metric\n\
    I/E\n0\nI/E\nS\nI/E\nS\nI/E\nS\nDefault Metric\nNeighbour ID\nDelay Metric\nExpense\
    \ Metric\nError Metric\nI/E\n0\nI/E\nS\nI/E\nS\nI/E\nS\n7Virtual Flag is a Boolean.\
    \ If equal to 1, this \nindicates the link is really a Level 2 path to \nrepair\
    \ an area partition. (Level 1 Intermedi\nate Systems would always report this\
    \ octet \nas 0 to all neighbours). \n7Default Metric is the value of the default\
    \ \nmetric for the link to the listed neighbour. \nBit 8  of this field is reserved.\
    \ Bit 7 of this \nfield (marked I/E) indicates the metric type, \nand shall contain\
    \ the value 0, indicating \nan Internal metric.\n7Delay Metric is the value of\
    \ the delay met\nric for the link to the listed neighbour.  If \nthis IS does\
    \ not support this metric it shall \nset bit S to 1 to indicate that the metric\
    \ is \nunsupported. Bit 7 of this field (marked \nI/E) indicates the metric type,\
    \ and shall \ncontain the value 0, indicating an Internal \nmetric.\n7Expense\
    \ Metric is the value of the ex\npense metric for the link to the listed neigh\n\
    bour.  If this IS does not support this metric \nit shall set bit S to 1 to indicate\
    \ that the \nmetric is unsupported. Bit 7 of this field \n(marked I/E) indicates\
    \ the metric type, and \nshall contain the value 0, indicating an \nInternal metric.\n\
    7Error Metric is the value of the error metric \nfor the link to the listed neighbour.\
    \  If this \nIS does not support this metric it shall set \nbit S to 1 to indicate\
    \ that the metric is un\nsupported. Bit 7 of this field (marked I/E) \nindicates\
    \ the metric type, and shall contain \nthe value 0, indicating an Internal metric.\n\
    7Neighbour ID. For Intermediate System \nneighbours, the first ID Length octets\
    \ are \nthe neighbour's system ID, and the last oc\ntet is 0. For pseudonode neighbours,\
    \ the \nfirst ID Length octets is the LAN Level 1 \nDesignated Intermediate System's\
    \ ID, and \nthe last octet is a non-zero quantity defined \nby the LAN Level 1\
    \ Designated Intermedi\nate System. \n7Prefix Neighbours  reachable address prefix\
    \ \nneighbours \nThis may appear multiple times, and in an LSP \nwith any LSP\
    \ number. See the description of the \nIntermediate System Neighbours option \n\
    above for the relative ordering constraints. Only \nadjacencies with identical\
    \ costs can appear in the \nsame list.\nxCODE  5. \nxLENGTH  Total length of the\
    \ VALUE field.\nxVALUE 1iAddress Prefix Length /2y1No. of OctetsiAddress Prefix\
    \ Length\n/2y1111Address Prefix Length\nAddress Prefix\nAddress Prefix Length\n\
    Address Prefix\nDefault Metric\nDelay Metric\nExpense Metric\nError Metric\nI/E\n\
    0\nI/E\nS\nI/E\nS\nI/E\nS\n7Default Metric is the value of the default \nmetric\
    \ for the link to each of the listed \nneighbours. Bit 8 of this field is reserved.\
    \ \nBit 7 (marked I/E) indicates the metric \ntype, and may be set to zero indicating\
    \ an \ninternal metric, or may be set to 1 indicat\ning an external metric.\n\
    7Delay Metric is the value of the delay met\nric for the link to each of the listed\
    \ neigh\nbours.  If this IS does not support this met\nric it shall set the bit\
    \ S to 1 to indicate \nthat the metric is unsupported. Bit 7 \n(marked I/E) indicates\
    \ the metric type, and \nmay be set to zero indicating an internal \nmetric, or\
    \ may be set to 1 indicating an ex\nternal metric.\n7Expense Metric is the value\
    \ of the ex\npense metric for the link to each of the \nlisted neighbours.  If\
    \ this IS does not sup\nport this metric it shall set the bit S to 1 \nto indicate\
    \ that the metric is unsupported. \nBit 7 (marked I/E) indicates the metric \n\
    type, and may be set to zero indicating an \ninternal metric, or may be set to\
    \ 1 indicat\ning an external metric.\n7Error Metric is the value of the error\
    \ metric \nfor the link to each of the listed neighbour.  \nIf this IS does not\
    \ support this metric it \nshall set the bit S to 1 to indicate that the \nmetric\
    \ is unsupported. Bit 7 (marked I/E) \nindicates the metric type, and may be set\
    \ to \nzero indicating an internal metric, or may \nbe set to 1 indicating an\
    \ external metric.\n7Address Prefix Length is the length in \nsemi-octets of the\
    \ following prefix. A \nlength of zero indicates a prefix that \nmatches all NSAPs.\n\
    7Address Prefix is a reachable address pre\nfix encoded as described in 7.1.4.\
    \ If the \nlength in semi-octets is odd, the prefix is \npadded out to an integral\
    \ number of octets \nwith a trailing zero semi-octet.\nNote that the area addresses\
    \ listed in the Area Ad\ndresses option of Level 2 Link State PDU with \nLSP number\
    \ zero, are understood to be reachable \naddress neighbours with cost 0. They\
    \ are not listed \nseparately in the Prefix Neighbours options.\n7Authentication\
    \ Information  information for \nperforming authentication of the originator of\
    \ the \nPDU.\nxCODE  10.\nxLENGTH  variable from 1254 octets\nxVALUE 1VARIABLENo.\
    \ of OctetsAuthentication Type\nAuthentication Value\n7Authentication Type  a\
    \ one octet iden\ntifier for the type of authentication to be \ncarried out. The\
    \ following values are de\nfined:\n0  RESERVED\n1  Cleartext Password\n2254  RESERVED\n\
    255  Routeing Domain private \nauthentication method\n7Authentication Value  determined\
    \ by \nthe value of the authentication type. If \nCleartext Password as defined\
    \ in this Inter\nnational Standard is used, then the authenti\ncation value is\
    \ an octet string.\n9.10 Level 1 Complete Sequence \nNumbers PDU11No. of Octets1111112ID\
    \ Length + 1ID Length + 2ID Length +\n2VARIABLEIntradomain Routeing \nProtocol\
    \ Discriminator\nLength Indicator\nVersion/Protocol ID Extension\nID Length\n\
    PDU Type\nR\nR\nR\nVersion\nECO\nUser ECO\nPDU Length\nSource ID\nStart LSP ID\n\
    End LSP ID\nVARIABLE LENGTH FIELDS\n-Intradomain Routeing Protocol Discriminator\
    \  ar\nchitectural constant \n-Length Indicator  Length of fixed header in octets\n\
    -Version/Protocol ID Extension  1 \n-ID Length  Length of the ID field of NSAP\
    \ ad\ndresses and NETs used in this routeing domain. This \nfield shall take on\
    \ one of the following values:\n7An integer between 1 and 8, inclusive, indicating\
    \ \nan ID field of the corresponding length\n7The value zero, which indicates\
    \ a 6 octet ID field \nlength\n7The value 255, whhich means a null ID field (i.e.\
    \ \nzero length)\nAll other values are illegal and shall not be used.\n-PDU Type\
    \ (bits 1 through 5)  24. Note bits 6, 7 and \n8 are Reserved, which means they\
    \ are transmitted as 0 \nand ignored on receipt.\n-Version  1 \n-ECO  transmitted\
    \ as zero, ignored on receipt \n-User ECO  transmitted as zero, ignored on receipt\
    \ \n-PDU Length  Entire Length of this PDU, in octets, \nincluding header \n-Source\
    \ ID  the system ID of Intermediate System \n(with zero Circuit ID) generating\
    \ this Sequence Num\nbers PDU.\n-Start LSP ID  the system ID of first LSP in the\
    \ \nrange covered by this Complete Sequence Numbers \nPDU.\n-End LSP ID  the system\
    \ ID of last LSP in the range \ncovered by this Complete Sequence Numbers PDU.\n\
    -VARIABLE LENGTH FIELDS  fields of the form:11No. of OctetsLENGTHCODE\nLENGTH\n\
    VALUE\nAny codes in a received CSNP that are not recognised \nare ignored.\nCurrently\
    \ defined codes are:\n7LSP Entries  This may appear multiple times. \nThe option\
    \ fields, if they appear more than once, \nshall appear sorted into ascending\
    \ LSPID order.\nxCODE  9\nxLENGTH  total length of the value field.\nxVALUE  a\
    \ list of LSP entries of the form:4No. of Octets2ID Length +\n2242ID Length +\
    \ 22LSP Sequence Number\nChecksum\nRemaining Lifetime\nLSP ID\nLSP Sequence Number\n\
    Checksum\nRemaining Lifetime\nLSP ID\n7Remaining Lifetime  Remaining Life\ntime\
    \ of LSP.\n7LSP ID  system ID of the LSP to which \nthis entry refers.\n7LSP Sequence\
    \ Number  Sequence \nnumber of LSP.\n7Checksum  Checksum reported in LSP.\nThe\
    \ entries shall be sorted into ascending \nLSPID order (the LSP number octet of\
    \ the \nLSPID is the least significant octet).\n7Authentication Information  information\
    \ for \nperforming authentication of the originator of the \nPDU.\nxCODE  10.\n\
    xLENGTH  variable from 1254 octets\nxVALUE 1VARIABLENo. of OctetsAuthentication\
    \ Type\nAuthentication Value\n7Authentication Type  a one octet iden\ntifier for\
    \ the type of authentication to be \ncarried out. The following values are de\n\
    fined:\n0  RESERVED\n1  Cleartext Password\n2254  RESERVED\n255  Routeing Domain\
    \ private \nauthentication method\n7Authentication Value  determined by \nthe\
    \ value of the authentication type. If \nCleartext Password as defined in this\
    \ Inter\nnational Standard is used, then the authenti\ncation value is an octet\
    \ string.\n9.11 Level 2 Complete Sequence \nNumbers PDU\n11No. of Octets1111112ID\
    \ Length + 1ID Length + 2ID Length +\n2VARIABLEIntradomain Routeing \nProtocol\
    \ Discriminator\nLength Indicator\nVersion/Protocol ID Extension\nID Length\n\
    PDU Type\nR\nR\nR\nVersion\nECO\nUser ECO\nPDU Length\nSource ID\nStart LSP ID\n\
    End LSP ID\nVARIABLE LENGTH FIELDS\n-Intradomain Routeing Protocol Discriminator\
    \  ar\nchitectural constant\n-Length Indicator  Length of fixed header in octets\
    \ \n-Version/Protocol ID Extension  1\n-ID Length  Length of the ID field of NSAP\
    \ ad\ndresses and NETs used in this routeing domain. This \nfield shall take on\
    \ one of the following values:\n7An integer between 1 and 8, inclusive, indicating\
    \ \nan ID field of the corresponding length\n7The value zero, which indicates\
    \ a 6 octet ID field \nlength\n7The value 255, whhich means a null ID field (i.e.\
    \ \nzero length)\nAll other values are illegal and shall not be used.\n-PDU Type\
    \ (bits 1 through 5)  25. Note bits 6, 7 and \n8 are Reserved, which means they\
    \ are transmitted as 0 \nand ignored on receipt.\n-Version  1 \n-ECO  transmitted\
    \ as zero, ignored on receipt \n-User ECO  transmitted as zero, ignored on receipt\
    \ \n-PDU Length  Entire Length of this PDU, in octets, \nincluding header \n-Source\
    \ ID  the system ID of Intermediate System \n(with zero Circuit ID) generating\
    \ this Sequence Num\nbers PDU.\n-Start LSP ID  the system ID of first LSP in the\
    \ \nrange covered by this Complete Sequence Numbers \nPDU.\n-End LSP ID  the system\
    \ ID of last LSP in the range \ncovered by this Complete Sequence Numbers PDU.\n\
    -VARIABLE LENGTH FIELDS  fields of the form:11No. of OctetsLENGTHCODE\nLENGTH\n\
    VALUE\nAny codes in a received CSNP that are not recognised \nare ignored.\nCurrently\
    \ defined codes are:\n7LSP Entries  this may appear multiple times. \nThe option\
    \ fields, if they appear more than once, \nshall appear sorted into ascending\
    \ LSPID order.\nxCODE  9\nxLENGTH  total length of the value field.\nxVALUE  a\
    \ list of LSP entries of the form:4No. of Octets2ID Length +\n2242ID Length +\
    \ 22LSP Sequence Number\nChecksum\nRemaining Lifetime\nLSP ID\nLSP Sequence Number\n\
    Checksum\nRemaining Lifetime\nLSP ID\n7Remaining Lifetime  Remaining Life\ntime\
    \ of LSP.\n7LSP ID  the system ID of the LSP to \nwhich this entry refers.\n7LSP\
    \ Sequence Number  Sequence \nnumber of LSP.\n7Checksum  Checksum reported in\
    \ LSP.\nThe entries shall be sorted into ascending \nLSPID order (the LSP number\
    \ octet of the \nLSPID is the least significant octet).\n7Authentication Information\
    \  information for \nperforming authentication of the originator of the \nPDU.\n\
    xCODE  10.\nxLENGTH  variable from 1254 octets\nxVALUE 1VARIABLENo. of OctetsAuthentication\
    \ Type\nAuthentication Value\n7Authentication Type  a one octet iden\ntifier for\
    \ the type of authentication to be \ncarried out. The following values are de\n\
    fined:\n0  RESERVED\n1  Cleartext Password\n2254  RESERVED\n255  Routeing Domain\
    \ private \nauthentication method\n7Authentication Value  determined by \nthe\
    \ value of the authentication type. If \nCleartext Password as defined in this\
    \ Inter\nnational Standard is used, then the authenti\ncation value is an octet\
    \ string.\n9.12 Level 1 Partial Sequence Numbers \nPDU\n11No. of Octets1111112ID\
    \ Length + 1VARIABLEIntradomain Routeing \nProtocol Discriminator\nLength Indicator\n\
    Version/Protocol ID Extension\nID Length\nPDU Type\nR\nR\nR\nVersion\nECO\nUser\
    \ ECO\nPDU Length\nSource ID\nVARIABLE LENGTH FIELDS\n-Intradomain Routeing Protocol\
    \ Discriminator  ar\nchitectural constant\n-Length Indicator  Length of fixed\
    \ header in octets\n-Version/Protocol ID Extension  1\n-ID Length  Length of the\
    \ ID field of NSAP ad\ndresses and NETs used in this routeing domain. This \n\
    field shall take on one of the following values:\n7An integer between 1 and 8,\
    \ inclusive, indicating \nan ID field of the corresponding length\n7The value\
    \ zero, which indicates a 6 octet ID field \nlength\n7The value 255, whhich means\
    \ a null ID field (i.e. \nzero length)\nAll other values are illegal and shall\
    \ not be used.\n-PDU Type (bits 1 through 5)  26. Note bits 6, 7 and \n8 are Reserved,\
    \ which means they are transmitted as 0 \nand ignored on receipt.\n-Version  1\
    \ \n-ECO  transmitted as zero, ignored on receipt \n-User ECO  transmitted as\
    \ zero, ignored on receipt \n-PDU Length  Entire Length of this PDU, in octets,\
    \ \nincluding header \n-Source ID  the system ID of Intermediate system \n(with\
    \ zero Circuit ID) generating this Sequence Num\nbers PDU.\n-VARIABLE LENGTH FIELDS\
    \  fields of the form:11No. of OctetsLENGTHCODE\nLENGTH\nVALUE\nAny codes in a\
    \ received PSNP that are not recognised \nare ignored.\nCurrently defined codes\
    \ are:\n7LSP Entries  this may appear multiple times. \nThe option fields, if\
    \ they appear more than once, \nshall appear sorted into ascending LSPID order.\n\
    xCODE  9\nxLENGTH  total length of the value field.\nxVALUE  a list of LSP entries\
    \ of the form:4No. of Octets2ID Length +\n2242ID Length + 22LSP Sequence Number\n\
    Checksum\nRemaining Lifetime\nLSP ID\nLSP Sequence Number\nChecksum\nRemaining\
    \ Lifetime\nLSP ID\n7Remaining Lifetime  Remaining Life\ntime of LSP.\n7LSP ID\
    \  the system ID of the LSP to \nwhich this entry refers.\n7LSP Sequence Number\
    \  Sequence \nnumber of LSP.\n7Checksum  Checksum reported in LSP.\nThe entries\
    \ shall be sorted into ascending \nLSPID order (the LSP number octet of the \n\
    LSPID is the least significant octet).\n7Authentication Information  information\
    \ for \nperforming authentication of the originator of the \nPDU.\nxCODE  10.\n\
    xLENGTH  variable from 1254 octets\nxVALUE 1VARIABLENo. of OctetsAuthentication\
    \ Type\nAuthentication Value\n7Authentication Type  a one octet iden\ntifier for\
    \ the type of authentication to be \ncarried out. The following values are de\n\
    fined:\n0  RESERVED\n1  Cleartext Password\n2254  RESERVED\n255  Routeing Domain\
    \ private \nauthentication method\n7Authentication Value  determined by \nthe\
    \ value of the authentication type. If \nCleartext Password as defined in this\
    \ Inter\nnational Standard is used, then the authenti\ncation value is an octet\
    \ string.\n9.13 Level 2 Partial Sequence Numbers \nPDU\n11No. of Octets1111112ID\
    \ Length + 1VARIABLEIntradomain Routeing \nProtocol Discriminator\nLength Indicator\n\
    Version/Protocol ID Extension\nID Length\nPDU Type\nR\nR\nR\nVersion\nECO\nUser\
    \ ECO\nPDU Length\nSource ID\nVARIABLE LENGTH FIELDS\n-Intradomain Routeing Protocol\
    \ Discriminator  ar\nchitectural constant\n-Length Indicator  Length of fixed\
    \ header in octets \n-Version/Protocol ID Extension  1 \n-ID Length  Length of\
    \ the ID field of NSAP ad\ndresses and NETs used in this routeing domain. This\
    \ \nfield shall take on one of the following values:\n7An integer between 1 and\
    \ 8, inclusive, indicating \nan ID field of the corresponding length\n7The value\
    \ zero, which indicates a 6 octet ID field \nlength\n7The value 255, whhich means\
    \ a null ID field (i.e. \nzero length)\nAll other values are illegal and shall\
    \ not be used.\n-PDU Type (bits 1 through 5)  27. Note bits 6, 7 and \n8 are Reserved,\
    \ which means they are transmitted as 0 \nand ignored on receipt.\n-Version  1\
    \ \n-ECO  transmitted as zero, ignored on receipt \n-User ECO  transmitted as\
    \ zero, ignored on receipt \n-PDU Length  Entire Length of this PDU, in octets,\
    \ \nincluding header \n-Source ID  the system ID of Intermediate system \n(with\
    \ zero Circuit ID) generating this Sequence Num\nbers PDU.\n-VARIABLE LENGTH FIELDS\
    \  fields of the form:11No. of OctetsLENGTHCODE\nLENGTH\nVALUE\nAny codes in a\
    \ received PSNP that are not recognised \nare ignored.\nCurrently defined codes\
    \ are:\n7LSP Entries  this may appear multiple times. \nThe option fields, if\
    \ they appear more than once, \nshall appear sorted into ascending LSPID order.\n\
    xCODE  9\nxLENGTH  total length of the value field.\nxVALUE  a list of LSP entries\
    \ of the form:4No. of Octets2ID Length +\n2242ID Length + 22LSP Sequence Number\n\
    Checksum\nRemaining Lifetime\nLSP ID\nLSP Sequence Number\nChecksum\nRemaining\
    \ Lifetime\nLSP ID\n7Remaining Lifetime  Remaining Life\ntime of LSP.\n7LSP ID\
    \  the system ID of the LSP to \nwhich this entry refers.\n7LSP Sequence Number\
    \  Sequence \nnumber of LSP.\n7Checksum  Checksum reported in LSP.\nThe entries\
    \ shall be sorted into ascending \nLSPID order (the LSP number octet of the \n\
    LSPID is the least significant octet).\n7Authentication Information  information\
    \ for \nperforming authentication of the originator of the \nPDU.\nxCODE  10.\n\
    xLENGTH  variable from 1254 octets\nxVALUE 1VARIABLENo. of OctetsAuthentication\
    \ Type\nAuthentication Value\n7Authentication Type  a one octet iden\ntifier for\
    \ the type of authentication to be \ncarried out. The following values are de\n\
    fined:\n0  RESERVED\n1  Cleartext Password\n2254  RESERVED\n255  Routeing Domain\
    \ private \nauthentication method\n7Authentication Value  determined by \nthe\
    \ value of the authentication type. If \nCleartext Password as defined in this\
    \ Inter\nnational Standard is used, then the authenti\ncation value is an octet\
    \ string.\n10 System Environment\n10.1 Generating Jitter on Timers\nWhen PDUs\
    \ are transmitted as a result of timer expiration, \nthere is a danger that the\
    \ timers of individual systems may \nbecome synchronised. The result of this is\
    \ that the traffic \ndistribution will contain peaks. Where there are a large\
    \ \nnumber of synchronised systems, this can cause overload\ning of both the transmission\
    \ medium and the systems re\nceiving the PDUs. In order to prevent this from occurring,\
    \ \nall periodic timers, the expiration of which can cause the \ntransmission\
    \ of PDUs, shall have jitter introduced as de\nfined in the following algorithm.\n\
    CONSTANT \nJitter = 25; \t\n(* The percentage jitter as defined in the architectural\
    \ \nconstant Jitter *)\nResolution = 100; \t\n(* The timer resolution in milliseconds\
    \ *)\nPROCEDURE Random(max : Integer): Integer;\n (* This procedure delivers a\
    \ Uniformly distributed \nrandom integer R such that 0 < R < max  *)\nPROCEDURE\
    \ \nDefineJitteredTimer(baseTimeValueInSeconds: Integer; \nexpirationAction :\
    \ Procedure);\nVAR\nbaseTimeValue, maximumTimeModifier, waitTime : \nInteger;\n\
    nextexpiration : Time;\nBEGIN\nbaseTimeValue := baseTimeValueInSeconds * 1000\
    \ / \nResolution;\nmaximumTimeModifier := baseTimeValue * Jitter / \n100; (* Compute\
    \ maximum possible jitter *)\nWHILE running DO \nBEGIN \n(* First compute next\
    \ expiration time *)\nrandomTimeModifier := \nRandom(maximumTimeModifier);\nwaitTime\
    \ := baseTimeValue - \nrandomTimeModifier;\nnextexpiration := CurrentTime + waitTime;\n\
    (* Then perform expiration Action *)\nexpirationAction; \nWaitUntil(nextexpiration);\n\
    END (* of Loop *)\nEND (* of DefineJitteredTimer *)\nThus the call DefineJitteredTimer(HelloTime,\
    \ SendHel\nloPDU); where HelloTime is 10 seconds, will cause the \naction SendHelloPDU\
    \ to be performed at random inter\nvals of between 7.5 and 10 seconds. The essential\
    \ point of \nthis algorithm is that the value of randomTimeModifier is \nrandomised\
    \ within the inner loop. Note that the new expira\ntion time is set immediately\
    \ on expiration of the last inter\nval, rather than when the expiration action\
    \ has been com\npleted. \nThe time resolution shall be less than or equal to 100\
    \ milli\nseconds. It is recommended to be less than or equal to 10 \nmilliseconds.\
    \ The time resolution is the maximum interval \nthat can elapse without there\
    \ being any change in the value \nof the timer. The periodic transmission period\
    \ shall be ran\ndom or pseudo-random in the specified range, with uniform \ndistribution\
    \ across similar implementations.\n10.2 Resolution of Timers\nAll timers specified\
    \ in units of seconds shall have a resolu\ntion of no less than 11 second.\nAll\
    \ timers specified in units of milliseconds shall have a \nresolution of no less\
    \ than 110 milliseconds\n10.3 Requirements on the Operation of \nISO 9542\nThis\
    \ International Standard places certain requirements on \nthe use of ISO 9542\
    \ by Intermediate systems which go be\nyond those mandatory requirements stated\
    \ in the \nconformance clause of ISO 9542. These requirements are:\na)The IS shall\
    \ operate the Configuration Information \nfunctions on all types of subnetworks\
    \ supported by the \nIS. This includes the reception of ESH PDUs, and the \nreception\
    \ and transmission of ISH PDUs.\nb)The IS shall enable the All Intermediate Systems\
    \ \nmulti-destination subnetwork address.\n11 System Management \n11.1 General\n\
    The operation of the Intra-domain ISIS routeing functions \nmay be monitored and\
    \ controlled using System Manage\nment. This clause is the management specification\
    \ for ISO \n10589 in the GDMO notation as defined in ISO 10165-4.\n11.1.1 Naming\
    \ Hierarchy\nThe containment hierarchy for ISO 10589 is illustrated be\nlow in\
    \ figure\n8NetworkVirtualAdjacencyAdjacencyDestinationSystemDestinationAreaCircuit\n\
    ReachableAddressEntityCLNS(ISO 10589 Package)(ISO 10589\nPackage)ManualAdjacencyLevel\
    \ 2 OnlyFigure 8 - Containment and Naming Hierarchy\n. \n11.1.2 Resetting of Timers\n\
    Many of the attributes defined herein represent the values \nof timers. They specify\
    \ the interval between certain events \nin the operation of the routeing state\
    \ machines. If the value \nof one of these characteristics is changed to a new\
    \ value t \nwhile the routeing state machine is in operation the imple\nmentation\
    \ shall take the necessary actions to ensure that for \nany time interval which\
    \ was in progress when the corre\nsponding attribute was changed, the next expiration\
    \ of that \ninterval takes place t seconds from the original start of that \n\
    interval, or immediately, whichever is the later.\nWhere this action is necessary\
    \ it is indicated in the applica\nble behaviour clause of the GDMO.  See 11.2.16\n\
    the managed object is enabled and it may be impossible to \nchange the allocation\
    \ without first disabling and re-enabling \nthe corresponding Network entity.\
    \ Therefore this Interna\ntional Standard only requires that system management\
    \ shall \nbe able to change these attributes when the managed object \nis disabled\
    \ (i.e. in the state off).\nHowever some implementations may be able to change\
    \ the \nallocation of resources without first disabling the Network \nentity.\
    \ In this case it is permitted to increase the value of \nthe characteristic at\
    \ any time, but it shall not be decreased \nbelow the currently used value of\
    \ the resource. For exam\nple, maximumSVCAdjacencies shall not be decreased \n\
    below the current number of SVCs which have been cre\nated.\nCharacteristics of\
    \ this type are indicated in the behaviour \nclause of the GDMO.  See 11.2.16.\n\
    11.2 GDMO Definition\n11.2.1 Name Bindings\niSO10589-NB NAME BINDING\nSUBORDINATE\
    \ OBJECT CLASS cLNS;\nNAMED BY\nSUPERIOR OBJECT CLASS \n\"ISO/IEC xxxxx\":networkEntity;\n\
    WITH ATTRIBUTE \n\"ISO/IEC xxxxx\":cLNS-MO-Name;\nCREATE with-automatic-instance-naming\
    \ \niSO10589-NB-p1;\nDELETE only-if-no-contained-objects;\nREGISTERED AS {ISO10589-ISIS.nboi\
    \ iSO10589-NB \n(1)};\nlevel1ISO10589Circuit-NB NAME BINDING\nSUBORDINATE OBJECT\
    \ CLASS circuit;\nNAMED BY\nSUPERIOR OBJECT CLASS cLNS;\nWITH ATTRIBUTE \n\"ISO/IEC\
    \ xxxxx\":circuit-MO-Name;\nCREATE with-reference-object  \niSO10589Circuit-MO-p1;\n\
    DELETE only-if-no-contained-objects;\nREGISTERED AS {ISO10589-ISIS.nboi \nlevel1ISO10589Circuit-NB\
    \ (2)};\ndestinationSystem-NB NAME BINDING\nSUBORDINATE OBJECT CLASS destinationSystem;\n\
    NAMED BY\nSUPERIOR OBJECT CLASS cLNS;\nWITH ATTRIBUTE networkEntityTitle;\nREGISTERED\
    \ AS {ISO10589-ISIS.nboi \ndestinationSystem-NB (3)};\ndestinationArea-NB NAME\
    \ BINDING\nSUBORDINATE OBJECT CLASS destinationArea;\nNAMED BY\nSUPERIOR OBJECT\
    \ CLASS cLNS;\nWITH ATTRIBUTE addressPrefix;\nBEHAVIOUR destinationArea-NB-B BEHAVIOUR\n\
    DEFINED AS This name binding is only applicable \nwhere the superior object has\
    \ an iSType of Level2;;\nREGISTERED AS {ISO10589-ISIS.nboi \ndestinationArea-NB\
    \ (4)};\nvirtualAdjacency-NB NAME BINDING\nSUBORDINATE OBJECT CLASS virtualAdjacency;\n\
    NAMED BY\nSUPERIOR OBJECT CLASS cLNS;\nWITH ATTRIBUTE networkEntityTitle;\nBEHAVIOUR\
    \ virtualAdjacency-NB-B BEHAVIOUR\nDEFINED AS This name binding is only applicable\
    \ \nwhere the superior  object has an iSType of Level2;;\nREGISTERED AS {ISO10589-ISIS.nboi\
    \ \nvirtualAdjacency-NB (5)};\nreachableAddress-NB NAME BINDING\nSUBORDINATE OBJECT\
    \ CLASS reachableAddress;\nNAMED BY\nSUPERIOR OBJECT CLASS circuit;\nWITH ATTRIBUTE\
    \ addressPrefix;\nBEHAVIOUR reachableAddress-NB-B BEHAVIOUR\nDEFINED AS This name\
    \ binding is only applicable \nwhere the superior object of the Circuit instance\
    \ is \nan object  with iSType level2IS;;\nCREATE with-reference-object  reachableAddressP1\
    \ \nreachableAddressP2;\nDELETE only-if-no-contained-objects;\nREGISTERED AS {ISO10589-ISIS.nboi\
    \ \nreachableAddress-NB (6)};\nadjacency-NB NAME BINDING\nSUBORDINATE OBJECT CLASS\
    \ adjacency;\nNAMED BY\nSUPERIOR OBJECT CLASS circuit;\nWITH ATTRIBUTE adjacencyName;\n\
    REGISTERED AS {ISO10589-ISIS.nboi adjacency-NB \n(7)};\nmanualAdjacency-NB NAME\
    \ BINDING\nSUBORDINATE OBJECT CLASS manualAdjacency;\nNAMED BY\nSUPERIOR OBJECT\
    \ CLASS circuit;\nWITH ATTRIBUTE adjacencyName;\nBEHAVIOUR manualAdjacency-NB-B\
    \ BEHAVIOUR\nDEFINED AS When an instance name is specified in \nthe CREATE operation,\
    \ that value shall be used for \nthe adjacencyName, otherwise automatic instance\
    \ \nnaming shall be used;;\nCREATE with-reference-object, \nwith-automatic-instance-naming\n\
    manualAdjacencyP1  manualAdjacencyP2;\nDELETE only-if-no-contained-objects;\n\
    REGISTERED AS {ISO10589-ISIS.nboi \nmanualAdjacency-NB (8)};\n11.2.2 The CLNS\
    \ Managed Object for ISO \n10589\ncLNS MANAGED OBJECT CLASS\nDERIVED FROM \"ISO/IEC\
    \ xxxx\":cLNS;\n-- To be replaced by the number of the network layer \nMO definitions\
    \ when assigned.\nCONDITIONAL PACKAGES\nlevel1ISO10589Package\nPRESENT IF The\
    \ Intermediate System is a Level 1 \nIntermediate System,\nlevel2ISO10589Package\n\
    PRESENT IF The Intermediate System is a Level 2 \nIntermediate System (i.e. the\
    \ value of iSType is \nLevel2),\npartitionRepairPackage\nPRESENT IF The Intermediate\
    \ System is a Level 2 \nIntermediate System and the partition repair option \n\
    is implemented,\nlevel1AuthenticationPackage\nPRESENT IF The authentication procedures\
    \ are im\nplemented,\nlevel2AuthenticationPackage\nPRESENT IF The Intermediate\
    \ System is a Level 2 \nIntermediate System and the authentication proce\ndures\
    \ are implemented;\nREGISTERED AS {ISO10589-ISIS.moi cLNS (1)};\nlevel1ISO10589Package\
    \ PACKAGE\nATTRIBUTES\nversion GET,\niSType GET,\nmaximumPathSplits\nREPLACE-WITH-DEFAULT\n\
    DEFAULT VALUE \nISO10589-ISIS.maximumPathSplits-Default\nPERMITTED VALUES \nISO10589-ISIS.MaximumPathSplits-Permitted\n\
    GET-REPLACE,\nmaximumBuffers\nREPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.maximumBuffers-Default\n\
    PERMITTED VALUES \nISO10589-ISIS.MaximumBuffers-Permitted\nGET-REPLACE,\nminimumLSPTransmissionInterval\n\
    REPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.minimumLSPTransmissionInterval-\n\
    Default\nPERMITTED VALUES \nISO10589-ISIS.MinimumLSPTransmissionInterval-\nPermitted\n\
    GET-REPLACE,\nmaximumLSPGenerationInterval\nREPLACE-WITH-DEFAULT\nDEFAULT VALUE\
    \ \nISO10589-ISIS.maximumLSPGenerationInterval-D\nefault\nPERMITTED VALUES \n\
    ISO10589-ISIS.MaximumLSPGenerationInterval-Pe\nrmitted\nGET-REPLACE,\nminimumBroadcastLSPTransmissionInterval\n\
    REPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.minimumBroadcastLSPTransmissio\n\
    nInterval-Default\nPERMITTED VALUES \nISO10589-ISIS.MinimumBroadcastLSPTransmissio\n\
    nInterval-Permitted\nGET-REPLACE,\n-- Note this is defined for all Circuits, but\
    \ would only \nbe required if one of them were a broadcast Circuit\ncompleteSNPInterval\n\
    REPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.completeSNPInterval-Default\n\
    PERMITTED VALUES \nISO10589-ISIS.CompleteSNPInterval-Permitted\nGET-REPLACE,\n\
    -- Ditto\noriginatingL1LSPBufferSize\nREPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.originatingL1LSPBufferSize-Defaul\n\
    t\nPERMITTED VALUES \nISO10589-ISIS.OriginatingL1LSPBufferSize-Permit\nted\nGET-REPLACE,\n\
    -- Note: redirectHoldingTime moved to \nISO9542ISPackage\nmanualAreaAddresses\n\
    REPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.manualAreaAddresses-Default\n\
    PERMITTED VALUES \nISO10589-ISIS.ManualAreaAddresses-Permitted\nGET ADD-REMOVE,\n\
    minimumLSPGenerationInterval\nREPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.minimumLSPGenerationInterval-De\n\
    fault\nPERMITTED VALUES \nISO10589-ISIS.MinimumLSPGenerationInterval-Pe\nrmitted\n\
    GET-REPLACE,\ndefaultESHelloTimer\nREPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.defaultESHelloTime-Default\n\
    PERMITTED VALUES \nISO10589-ISIS.DefaultESHelloTime-Permitted\nGET-REPLACE,\n\
    pollESHelloRate\nREPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.pollESHelloRate-Default\n\
    PERMITTED VALUES \nISO10589-ISIS.PollESHelloRate-Permitted\nGET-REPLACE,\npartialSNPInterval\n\
    REPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.partialSNPInterval-Default\n\
    PERMITTED VALUES \nISO10589-ISIS.PartialSNPInterval-Permitted\nGET-REPLACE,\n\
    waitingTime\nREPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.waitingTime-Default\n\
    PERMITTED VALUES \nISO10589-ISIS.WaitingTime-Permitted\nGET-REPLACE,\ndRISISHelloTimer\n\
    REPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.dRISISHelloTimer-Default\n\
    PERMITTED VALUES \nISO10589-ISIS.DRISISHelloTimer-Permitted\nGET-REPLACE,\nl1State\
    \ GET,\nareaAddresses GET,\n-- PDUFormatErrors now in network layer MO\ncorruptedLSPsDetected\
    \ GET,\nlSPL1DatabaseOverloads GET,\nmanualAddressesDroppedFromArea GET,\nattemptsToExceedMaximumSequenceNumber\
    \ GET,\nsequenceNumberSkips GET,\nownLSPPurges GET,\niDFieldLengthMismatches GET;\n\
    ATTRIBUTE GROUPS\ncounters\n-- PDUFormatErrors now in Network Layer MO\ncorruptedLSPsDetected\n\
    lSPL1DatabaseOverloads\nmanualAddressesDroppedFromArea\nattemptsToExceedMaximumSequenceNumber\n\
    sequenceNumberSkips\nownLSPPurges\niDFieldLengthMismatches;\n-- activate and deactivate\
    \ actions now in Network Layer \nMO\nNOTIFICATIONS\n\"ISO/IEC xxxxx\":pduFormatError\
    \ \nnotificationReceivingAdjacency,\n-- extra parameter for ISO 10589\ncorruptedLSPDetected,\n\
    lSPL1DatabaseOverload,\nmanualAddressDroppedFromArea,\nattemptToExceedMaximumSequenceNumber,\n\
    sequenceNumberSkip,\nownLSPPurge,\niDFieldLengthMismatch;\nREGISTERED AS {ISO10589-ISIS.poi\
    \ \nlevel1ISO10589Package (1)};\nlevel2ISO10589Package PACKAGE\nATTRIBUTES\noriginatingL2LSPBufferSize\n\
    REPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.originatingL2LSPBufferSize-Defaul\n\
    t\nPERMITTED VALUES \nISO10589-ISIS.OriginatingL2LSPBufferSize-Permit\nted\nGET-REPLACE,\n\
    l2State GET,\nlSPL2DatabaseOverloads GET;\nATTRIBUTE GROUPS\ncounters\nlSPL2DatabaseOverloads;\n\
    NOTIFICATIONS\nlSPL2DatabaseOverload;\nREGISTERED AS {ISO10589-ISIS.poi \nlevel2ISO10589Package\
    \ (2)};\npartitionRepairPackage PACKAGE\nBEHAVIOUR DEFINITIONS partitionRepairPackage-B\
    \ \nBEHAVIOUR\nDEFINED AS Present when the partition repair option \nis implemented;;\n\
    ATTRIBUTES\nmaximumVirtualAdjacencies\nREPLACE-WITH-DEFAULT\nDEFAULT VALUE \n\
    ISO10589-ISIS.maximumVirtualAdjacencies-Defau\nlt\nPERMITTED VALUES \nISO10589-ISIS.MaximumVirtualAdjacencies-Permi\n\
    tted\nGET-REPLACE,\npartitionAreaAddresses GET,\npartitionDesignatedL2IntermediateSystem\
    \ GET,\npartitionVirtualLinkChanges GET;\nATTRIBUTE GROUPS\ncounters\npartitionVirtualLinkChanges;\n\
    NOTIFICATIONS\npartitionVirtualLinkChange;\nREGISTERED AS {ISO10589-ISIS.poi \n\
    partitionRepairPackage (3)};\nlevel1AuthenticationPackage PACKAGE\nBEHAVIOUR DEFINITIONS\
    \ \nlevel1AuthenticationPackage-B BEHAVIOUR\nDEFINED AS Present when the authentication\
    \ proce\ndures option is implemented;;\nATTRIBUTES\nareaTransmitPassword\nREPLACE-WITH-DEFAULT\n\
    DEFAULT VALUE \nISO10589-ISIS.password-Default\nGET-REPLACE,\nareaReceivePasswords\n\
    REPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.passwords-Default\nGET-REPLACE\n\
    ADD-REMOVE,\nauthenticationFailures\nGET;\nATTRIBUTE GROUPS\ncounters\nauthenticationFailures;\n\
    NOTIFICATIONS\nauthenticationFailure;\nREGISTERED AS {ISO10589-ISIS.poi \nlevel1AuthenticationPackage\
    \ (4)};\nlevel2AuthenticationPackage PACKAGE\nBEHAVIOUR DEFINITIONS \nlevel2AuthenticationPackage-B\
    \ BEHAVIOUR\nDEFINED AS Present when the authentication proce\ndures option is\
    \ implemented and the value of the \niSType attribute is Level2;;\nATTRIBUTES\n\
    domainTransmitPassword\nREPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.password-Default\n\
    GET-REPLACE,\ndomainReceivePasswords\nREPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.passwords-Default\n\
    GET-REPLACE\nADD-REMOVE;\nREGISTERED AS {ISO10589-ISIS.poi \nlevel2AuthenticationPackage\
    \ (5)};\n11.2.3 The Circuit Managed Object for ISO \n10589\ncircuit MANAGED OBJECT\
    \ CLASS\nDERIVED FROM \"ISO/IEC xxxx\":circuit;\n-- xxxx to be replaced with the\
    \ number of the network \nlayer managed object definitions when one is \nassigned\n\
    CONDITIONAL PACKAGES\nlevel1ISO10589CircuitPackage\nPRESENT IF the Circuit is\
    \ a level 1 ISO 10589 Cir\ncuit,\nlevel1ISO10589BroadcastCircuitPackage\nPRESENT\
    \ IF the Circuit is a level 1 ISO 10589 \nbroadcast Circuit,\nlevel1ISO10589PtToPtCircuitPackage\n\
    PRESENT IF the Circuit is a level 1 ISO 10589 Point \nto Point Circuit,\nlevel2ISO10589DACircuitPackage\n\
    PRESENT IF the Circuit is a level 2 ISO 10589 X.25 \nDA Circuit,\nlevel1ISO10589StaticCircuitPackage\n\
    PRESENT IF the Circuit is a level 1 ISO10589 X.25 \nSTATIC Circuit (IN or OUT),\n\
    level1ISO10589StaticOutCircuitPackage\nPRESENT IF the Circuit is a level1 ISO\
    \ 10589 X.25 \nSTATIC OUT SNAP,\nlevel2ISO10589CircuitPackage\nPRESENT IF the\
    \ IS is a Level2 ISO 10589 IS,\nlevel2ISO10589BroadcastCircuitPackage\nPRESENT\
    \ IF the Circuit is a level 1 ISO 10589 \nbroadcast Circuit and the IS is a L2\
    \ IS,\ndACircuitCallEstablishmentMetricIncrementPackage\nPRESENT IF the Circuit\
    \ is an X.25 DA circuit and \nsupport is implemented for call establishement met\n\
    ric increment values greater than zero,\ncircuitAuthenticationPackage\nPRESENT\
    \ IF the authentication procedures are im\nplemented on this IS;\nREGISTERED AS\
    \ {ISO10589-ISIS.moi circuit (2)};\nlevel1ISO10589CircuitPackage PACKAGE\nATTRIBUTES\n\
    type GET,\nhelloTimer\nREPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.helloTimer-Default\n\
    PERMITTED VALUES \nISO10589-ISIS.HelloTimer-Permitted\nGET-REPLACE,\nl1DefaultMetric\n\
    REPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.defaultMetric-Default\nPERMITTED\
    \ VALUES \nISO10589-ISIS.DefaultMetric-Permitted\nGET-REPLACE,\nl1DelayMetric\n\
    REPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.optionalMetric-Default\nPERMITTED\
    \ VALUES \nISO10589-ISIS.OptionalMetric-Permitted\nGET-REPLACE,\nl1ExpenseMetric\n\
    REPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.optionalMetric-Default\nPERMITTED\
    \ VALUES \nISO10589-ISIS.OptionalMetric-Permitted\nGET-REPLACE,\nl1ErrorMetric\n\
    REPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.optionalMetric-Default\nPERMITTED\
    \ VALUES \nISO10589-ISIS.OptionalMetric-Permitted\nGET-REPLACE,\nexternalDomain\n\
    REPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.externalDomain-Default\nGET-REPLACE,\n\
    circuitChanges GET,\nchangesInAdjacencyState GET,\ninitializationFailures GET,\n\
    rejectedAdjacencies GET,\ncontrolPDUsSent GET,\ncontrolPDUsReceived GET,\niDFieldLengthMismatches\
    \ GET;\nATTRIBUTE GROUPS\ncounters\ncircuitChanges\nchangesInAdjacencyState\n\
    initializationFailures\nrejectedAdjacencies\ncontrolPDUsSent\ncontrolPDUsReceived\n\
    iDFieldLengthMismatches;\n-- Note: activate and deactivate are now imported from\
    \ \nthe network layer definition of circuit MO\nNOTIFICATIONS\ncircuitChange,\n\
    adjacencyStateChange,\ninitializationFailure,\nrejectedAdjacency,\niDFieldLengthMismatch;\n\
    REGISTERED AS {ISO10589-ISIS.poi \nlevel1ISO10589CircuitPackage (6)};\nlevel1ISO10589BroadcastCircuitPackage\
    \ PACKAGE\nBEHAVIOUR DEFINITIONS \nlevel1BroadcastCircuitPackage-B BEHAVIOUR\n\
    DEFINED AS Present when the Circuit is of type \nBroadcast;;\nATTRIBUTES\niSISHelloTimer\n\
    REPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.iSISHelloTimer-Default\nPERMITTED\
    \ VALUES \nISO10589-ISIS.ISISHelloTimer-Permitted\nGET-REPLACE,\nl1IntermediateSystemPriority\n\
    REPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.l1IntermediateSystemPriority-Defau\n\
    lt\nPERMITTED VALUES \nISO10589-ISIS.L1IntermediateSystemPriority-Perm\nitted\n\
    GET-REPLACE,\nl1CircuitID GET,\nl1DesignatedIntermediateSystem GET,\nlanL1DesignatedIntermediateSystemChanges\
    \ GET;\nATTRIBUTE GROUPS\ncounters\nlanL1DesignatedIntermediateSystemChanges;\n\
    NOTIFICATIONS\nlanL1DesignatedIntermediateSystemChange;\nREGISTERED AS {ISO10589-ISIS.poi\
    \ \nlevel1ISO10589BroadcastCircuitPackage (7)};\nlevel1ISO10589PtToPtCircuitPackage\
    \ PACKAGE\nBEHAVIOUR DEFINITIONS \nlevel1PtToPtCircuitPackage-B BEHAVIOUR\nDEFINED\
    \ AS Present when the Circuit is of type Pt\nToPt;;\nATTRIBUTES\nptPtCircuitID\
    \ GET;\nREGISTERED AS {ISO10589-ISIS.poi \nlevel1ISO10589PtToPtCircuitPackage\
    \ (8)};\ndACircuitCallEstablishmentMetricIncrementPackage \nPACKAGE\nBEHAVIOUR\
    \ DEFINITIONS \ndACircuitCallEstablishmentMetricIncrementPackag\ne-B BEHAVIOUR\n\
    DEFINED AS Present when values of call establish\nment metric increment greater\
    \ than zero are sup\nported and the parent iS MO has iSType Level2;;\nATTRIBUTES\n\
    callEstablishmentDefaultMetricIncrement\nREPLACE-WITH-DEFAULT\nDEFAULT VALUE \n\
    ISO10589-ISIS.callEstablishmentMetricIncrement-\nDefault\nPERMITTED VALUES \n\
    ISO10589-ISIS.CallEstablishmentMetricIncrement-\nPermitted\nGET-REPLACE,\ncallEstablishmentDelayMetricIncrement\n\
    REPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.callEstablishmentMetricIncrement-\n\
    Default\nPERMITTED VALUES \nISO10589-ISIS.CallEstablishmentMetricIncrement-\n\
    Permitted\nGET-REPLACE,\ncallEstablishmentExpenseMetricIncrement\nREPLACE-WITH-DEFAULT\n\
    DEFAULT VALUE \nISO10589-ISIS.callEstablishmentMetricIncrement-\nDefault\nPERMITTED\
    \ VALUES \nISO10589-ISIS.CallEstablishmentMetricIncrement-\nPermitted\nGET-REPLACE,\n\
    callEstablishmentErrorMetricIncrement\nREPLACE-WITH-DEFAULT\nDEFAULT VALUE \n\
    ISO10589-ISIS.callEstablishmentMetricIncrement-\nDefault\nPERMITTED VALUES \n\
    ISO10589-ISIS.CallEstablishmentMetricIncrement-\nPermitted\nGET-REPLACE;\nREGISTERED\
    \ AS {ISO10589-ISIS.poi \ndACircuitCallEstablishmentMetricIncrementPackag\ne (9)};\n\
    level2ISO10589DACircuitPackage PACKAGE\nBEHAVIOUR DEFINITIONS \nlevel2ISO10589DACircuitPackage-B\
    \ \nBEHAVIOUR\nDEFINED AS Present when the Circuit is of type DA, \nand the IS\
    \ is operating as a L2 IS;;\n-- Note: a DA Circuit is only permitted on an L2\
    \ IS\nATTRIBUTES\nrecallTimer\nREPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.recallTimer-Default\n\
    PERMITTED VALUES \nISO10589-ISIS.RecallTimer-Permitted\nGET-REPLACE,\nidleTimer\n\
    REPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.idleTimer-Default\nPERMITTED\
    \ VALUES \nISO10589-ISIS.IdleTimer-Permitted\nGET-REPLACE,\ninitialMinimumTimer\n\
    REPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.initialMinimumTimer-Default\n\
    PERMITTED VALUES \nISO10589-ISIS.InitialMinimumTimer-Permitted\nGET-REPLACE,\n\
    reserveTimer\nREPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.reserveTimer-Default\n\
    PERMITTED VALUES \nISO10589-ISIS.ReserveTimer-Permitted\nGET-REPLACE,\nmaximumSVCAdjacencies\n\
    REPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.maximumSVCAdjacencies-Default\n\
    PERMITTED VALUES \nISO10589-ISIS.MaximumSVCAdjacencies-Permitte\nd\nGET-REPLACE,\n\
    reservedAdjacency\nREPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.reservedAdjacency-Default\n\
    GET-REPLACE,\n-- Note: it is not clear that this attribute is required\ncallsPlaced\
    \ GET,\ncallsFailed GET,\ntimesExceededMaximumSVCAdjacencies GET;\nATTRIBUTE GROUPS\n\
    counters\ncallsPlaced\ncallsFailed\ntimesExceededMaximumSVCAdjacencies;\nNOTIFICATIONS\n\
    exceededMaximumSVCAdjacencies;\nREGISTERED AS {ISO10589-ISIS.poi \nlevel2ISO10589DACircuitPackage\
    \ (10)};\nlevel1ISO10589StaticCircuitPackage PACKAGE\nBEHAVIOUR DEFINITIONS \n\
    level1StaticCircuitPackage-B BEHAVIOUR\nDEFINED AS Present when the Circuit is\
    \ of type \nStatic;;\nATTRIBUTES\nneighbourSNPAAddress\nREPLACE-WITH-DEFAULT\n\
    DEFAULT VALUE \nISO10589-ISIS.neighbourSNPAAddress-Default\nGET-REPLACE,\n-- Note:\
    \ should this be handled by an X.25 IVMO?\nptPtCircuitID GET;\nREGISTERED AS {ISO10589-ISIS.poi\
    \ \nlevel1ISO10589StaticCircuitPackage (11)};\nlevel1ISO10589StaticOutCircuitPackage\
    \ PACKAGE\nBEHAVIOUR DEFINITIONS \nlevel1StsticOutCircuitPackage-B BEHAVIOUR\n\
    DEFINED AS Present when the Circuit is of type Static \nOut;;\nATTRIBUTES\nrecallTimer\n\
    REPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.recallTimer-Default\nPERMITTED\
    \ VALUES \nISO10589-ISIS.RecallTimer-Permitted\nGET-REPLACE,\nmaximumCallAttempts\n\
    REPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.maximumCallAttempts-Default\n\
    PERMITTED VALUES \nISO10589-ISIS.MaximumCallAttempts-Permitted\nGET-REPLACE,\n\
    callsPlaced GET,\ncallsFailed GET,\ntimesExceededMaximumCallAttempts GET;\nATTRIBUTE\
    \ GROUPS\ncounters\ncallsPlaced\ncallsFailed\ntimesExceededMaximumCallAttempts;\n\
    NOTIFICATIONS\nexceededMaximumCallAttempts ;\nREGISTERED AS {ISO10589-ISIS.poi\
    \ \nlevel1ISO10589StaticOutCircuitPackage (12)};\nlevel2ISO10589CircuitPackage\
    \ PACKAGE\nBEHAVIOUR DEFINITIONS level2CircuitPackage-B \nBEHAVIOUR\nDEFINED AS\
    \ Present when IS is an L2 IS;;\nATTRIBUTES\nl2DefaultMetric\nREPLACE-WITH-DEFAULT\n\
    DEFAULT VALUE \nISO10589-ISIS.defaultMetric-Default\nPERMITTED VALUES \nISO10589-ISIS.DefaultMetric-Permitted\n\
    GET-REPLACE,\nl2DelayMetric\nREPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.optionalMetric-Default\n\
    PERMITTED VALUES \nISO10589-ISIS.OptionalMetric-Permitted\nGET-REPLACE,\nl2ExpenseMetric\n\
    REPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.optionalMetric-Default\nPERMITTED\
    \ VALUES \nISO10589-ISIS.OptionalMetric-Permitted\nGET-REPLACE,\nl2ErrorMetric\n\
    REPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.optionalMetric-Default\nPERMITTED\
    \ VALUES \nISO10589-ISIS.OptionalMetric-Permitted\nGET-REPLACE,\nmanualL2OnlyMode\n\
    REPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.manualL2OnlyMode-Default\n\
    GET-REPLACE;\nREGISTERED AS {ISO10589-ISIS.poi \nlevel2ISO10589CircuitPackage\
    \ (13)};\nlevel2ISO10589BroadcastCircuitPackage PACKAGE\nBEHAVIOUR DEFINITIONS\
    \ \nlevel2BroadcastCircuitPackage-B BEHAVIOUR\nDEFINED AS Present when the Circuit\
    \ is of type \nBroadcast and the IS is an L2 IS;;\nATTRIBUTES\nl2IntermediateSystemPriority\n\
    REPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.l2IntermediateSystemPriority-Defau\n\
    lt\nPERMITTED VALUES \nISO10589-ISIS.L2IntermediateSystemPriority-Perm\nitted\n\
    GET-REPLACE,\nl2CircuitID GET,\nl2DesignatedIntermediateSystem GET,\nlanL2DesignatedIntermediateSystemChanges\
    \ GET;\nATTRIBUTE GROUPS\ncounters\nlanL2DesignatedIntermediateSystemChanges;\n\
    NOTIFICATIONS\nlanL2DesignatedIntermediateSystemChange;\nREGISTERED AS {ISO10589-ISIS.poi\
    \ \nlevel2ISO10589BroadcastCircuitPackage (14)};\ncircuitAuthenticationPackage\
    \ PACKAGE\nBEHAVIOUR DEFINITIONS \ncircuitAuthenticationPackage-B BEHAVIOUR\n\
    DEFINED AS Present when the authentication proce\ndures option is implemented;;\n\
    ATTRIBUTES\ncircuitTransmitPassword\nREPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.password-Default\n\
    GET-REPLACE,\ncircuitReceivePasswords\nREPLACE-WITH-DEFAULT\nDEFAULT VALUE \n\
    ISO10589-ISIS.passwords-Default\nGET-REPLACE\nADD-REMOVE,\nauthenticationFailures\
    \ GET;\nATTRIBUTE GROUPS\ncounters\nauthenticationFailures;\nNOTIFICATIONS\nauthenticationFailure;\n\
    REGISTERED AS {ISO10589-ISIS.poi \ncircuitAuthenticationPackage (15)};\n11.2.4\
    \ The Adjacency managed Object\nadjacency MANAGED OBJECT CLASS\nDERIVED FROM \"\
    ISO/IEC 10165-2\":top;\nCHARACTERIZED BY adjacencyPackage PACKAGE\nATTRIBUTES\n\
    adjacencyName GET,\nadjacencyState GET;\n-- Note: this is NOT operational state\n\
    ;;\nCONDITIONAL PACKAGES\nbroadcastAdjacencyPackage\nPRESENT IF the parent Circuit\
    \ is of type broadcast,\ndAAdjacencyPackage\nPRESENT IF the parent Circuit is\
    \ of type DA,\nptToPtAdjacencyPackage\nPRESENT IF the parent Circuit is of type\
    \ PtToPt or \nSTATIC,\niSAdjacencyPackage\nPRESENT IF the adjacency is to an IS\
    \ (i.e the \nneighbourSystemType is Intermediate System L1 \nIntermediate System\
    \ or L2 Intermediate System),\nbroadcastISAdjacencyPackage\nPRESENT IF the parent\
    \ Circuit is of type broadcast \nand is to an IS as above,\neSAdjacencyPackage\n\
    PRESENT IF the adjacency is to an ES (i.e. the \nneighbourSystemType is EndSystem;\n\
    REGISTERED AS {ISO10589-ISIS.moi adjacency (3)};\nbroadcastAdjacencyPackage PACKAGE\n\
    BEHAVIOUR DEFINITIONS \nbroadcastAdjacencyPackage-B BEHAVIOUR\nDEFINED AS present\
    \ if the parent Circuit is of type \nbroadcast;;\nATTRIBUTES\nneighbourLANAddress\
    \ GET,\nneighbourSystemType GET;\nREGISTERED AS {ISO10589-ISIS.poi \nbroadcastAdjacencyPackage\
    \ (16)};\ndAAdjacencyPackage PACKAGE\nBEHAVIOUR DEFINITIONS dAAdjacencyPackage-B\
    \ \nBEHAVIOUR\nDEFINED AS present if the parent Circuit is of type \nDA;;\nATTRIBUTES\n\
    sNPAAddress GET;\nREGISTERED AS {ISO10589-ISIS.poi \ndAAdjacencyPackage (17)};\n\
    ptToPtAdjacencyPackage PACKAGE\nBEHAVIOUR DEFINITIONS \nptToPtAdjacencyPackage-B\
    \ BEHAVIOUR\nDEFINED AS present if the parent Circuit is of type \nPtToPt;;\n\
    ATTRIBUTES\nneighbourSystemType GET;\nREGISTERED AS {ISO10589-ISIS.poi \nptToPtAdjacencyPackage\
    \ (18)};\niSAdjacencyPackage PACKAGE\nBEHAVIOUR DEFINITIONS iSAdjacencyPackage-B\
    \ \nBEHAVIOUR\nDEFINED AS present if the adjacency is to an IS;;\nATTRIBUTES\n\
    adjacencyUsageType GET,\nneighbourSystemID GET,\nneighbourAreas GET,\nholdingTimer\
    \ GET;\nREGISTERED AS {ISO10589-ISIS.poi \niSAdjacencyPackage (19)};\nbroadcastISAdjacencyPackage\
    \ PACKAGE\nBEHAVIOUR DEFINITIONS \nbroadcastISAdjacencyPackage-B BEHAVIOUR\nDEFINED\
    \ AS present if the parent Circuit is of type \nbroadcast and the adjacency is\
    \ to an IS;;\nATTRIBUTES\nlANPriority GET;\nREGISTERED AS {ISO10589-ISIS.poi \n\
    broadcastISAdjacencyPackage (20)};\neSAdjacencyPackage PACKAGE\nBEHAVIOUR DEFINITIONS\
    \ eSAdjacencyPackage-B \nBEHAVIOUR\nDEFINED AS present if the adjacency is to\
    \ an ES;;\nATTRIBUTES\nendSystemIDs GET;\nREGISTERED AS {ISO10589-ISIS.poi \n\
    eSAdjacencyPackage (21)};\n11.2.5 The Manual Adjacency Managed \nObject\nmanualAdjacency\
    \ MANAGED OBJECT CLASS\nDERIVED FROM \"ISO/IEC 10165-2\":top;\nCHARACTERIZED BY\
    \ manualAdjacencyPackage \nPACKAGE\nATTRIBUTES\nadjacencyName GET,\nneighbourLANAddress\
    \ GET,\nendSystemIDs GET;\n;;\nREGISTERED AS {ISO10589-ISIS.moi \nmanualAdjacency\
    \ (4)};\n11.2.6 The Virtual Adjacency managed Object\nvirtualAdjacency MANAGED\
    \ OBJECT CLASS\nDERIVED FROM \"ISO/IEC 10165-2\":top;\nCHARACTERIZED BY virtualAdjacencyPackage\
    \ \nPACKAGE\nATTRIBUTES\nnetworkEntityTitle GET,\nmetric GET;\n;;\nREGISTERED\
    \ AS {ISO10589-ISIS.moi virtualAdjacency \n(5)};\n11.2.7 The Destination Managed\
    \ Object\n-- The destination MO class is never instantiated. It exists \nonly\
    \ to allow the destinationSystem and \ndestinationArea MO classes to be derived\
    \ from it.\ndestination MANAGED OBJECT CLASS\nDERIVED FROM \"ISO/IEC 10165-2\"\
    :top;\nCHARACTERIZED BY destinationPackage \nPACKAGE\nATTRIBUTES\ndefaultMetricPathCost\
    \ GET,\ndefaultMetricOutputAdjacencies GET,\ndelayMetricPathCost GET,\ndelayMetricOutputAdjacencies\
    \ GET,\nexpenseMetricPathCost GET,\nexpenseMetricOutputAdjacencies GET,\nerrorMetricPathCost\
    \ GET,\nerrorMetricOutputAdjacencies GET;\n;; -- no need for an object ID since\
    \ it is never \ninstantiated, but GDMO  needs one\nREGISTERED AS {ISO10589-ISIS.moi\
    \ destination (6)};\n11.2.8 The Destination System Managed \nObject\ndestinationSystem\
    \ MANAGED OBJECT CLASS\nDERIVED FROM destination;\nCHARACTERIZED BY destinationSystemPackage\
    \ \nPACKAGE\nATTRIBUTES\nnetworkEntityTitle GET;\n;;\nREGISTERED AS {ISO10589-ISIS.moi\
    \ \ndestinationSystem (7)};\n11.2.9 The Destination Area Managed Object\ndestinationArea\
    \ MANAGED OBJECT CLASS\nDERIVED FROM destination;\nCHARACTERIZED BY destinationAreaPackage\
    \ \nPACKAGE\nATTRIBUTES\naddressPrefix GET;\n;;\nREGISTERED AS {ISO10589-ISIS.moi\
    \ destinationArea \n(8)};\n11.2.10 The Reachable Address Managed \nObject\nreachableAddress\
    \ MANAGED OBJECT CLASS\nDERIVED FROM \"ISO/IEC 10165-2\":top;\nCHARACTERIZED BY\
    \ reachableAddressPackage \nPACKAGE\nATTRIBUTES\naddressPrefix GET,\ndefaultMetric\n\
    REPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.defaultMetric-Default\nPERMITTED\
    \ VALUES \nISO10589-ISIS.DefaultMetric-Permitted\nGET-REPLACE,\ndelayMetric\n\
    REPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.optionalMetric-Default\nPERMITTED\
    \ VALUES \nISO10589-ISIS.OptionalMetric-Permitted\nGET-REPLACE,\nexpenseMetric\n\
    REPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.optionalMetric-Default\nPERMITTED\
    \ VALUES \nISO10589-ISIS.OptionalMetric-Permitted\nGET-REPLACE,\nerrorMetric\n\
    REPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.optionalMetric-Default\nPERMITTED\
    \ VALUES \nISO10589-ISIS.OptionalMetric-Permitted\nGET-REPLACE,\ndefaultMetricType\n\
    REPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.metricType-Default\nGET-REPLACE,\n\
    delayMetricType\nREPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.metricType-Default\n\
    GET-REPLACE,\nexpenseMetricType\nREPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.metricType-Default\n\
    GET-REPLACE,\nerrorMetricType\nREPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.metricType-Default\n\
    GET-REPLACE,\n\"ISO/IEC 10165-2\":operationalState GET;\nACTIONS\nactivate,\n\
    deactivate;\n;;\nCONDITIONAL PACKAGES\nmappingRAPackage\nPRESENT IF the parent\
    \ Circuit is of type broadcast \nor DA,\nbroadcastRAPackage\nPRESENT IF the parent\
    \ Circuit is of type broadcast \nand the value of mappingType is `manual',\ndARAPackage\n\
    PRESENT IF the parent Circuit is of type DA and \nthe value of mappingType is\
    \ `manual';\nREGISTERED AS {ISO10589-ISIS.moi \nreachableAddress (9)};\nmappingRAPackage\
    \ PACKAGE\nBEHAVIOUR DEFINITIONS mappingRAPackage-B \nBEHAVIOUR\nDEFINED AS When\
    \ present, the NSAP to Circuit \nmapping is controlled by the value of the map\n\
    pingType attribute;;\nATTRIBUTES\nmappingType GET;\nREGISTERED AS {ISO10589-ISIS.poi\
    \ \nmappingRAPackage (22)};\nbroadcastRAPackage PACKAGE\nBEHAVIOUR DEFINITIONS\
    \ broadcastRAPackage-B \nBEHAVIOUR\nDEFINED AS When present, the remote SNPA address\
    \ \nis determined by the value of the lANAddress attrib\nute;;\nATTRIBUTES\nlANAddress\n\
    REPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.lANAddress-Default\nGET-REPLACE;\n\
    REGISTERED AS {ISO10589-ISIS.poi \nbroadcastRAPackage (23)};\ndARAPackage PACKAGE\n\
    BEHAVIOUR DEFINITIONS dARAPackage-B \nBEHAVIOUR\nDEFINED AS When present, the\
    \ remote SNPA address \nis determined by the value of the sNPAAddresses at\ntribute;;\n\
    ATTRIBUTES\nsNPAAddresses\nREPLACE-WITH-DEFAULT\nDEFAULT VALUE \nISO10589-ISIS.sNPAAddresses-Default\n\
    GET-REPLACE;\nREGISTERED AS {ISO10589-ISIS.poi dARAPackage \n(24)};\n11.2.11 Attribute\
    \ Definitions\nversion ATTRIBUTE\nWITH ATTRIBUTE SYNTAX ISO10589-ISIS.Version;\n\
    MATCHES FOR Equality, Ordering;\nBEHAVIOUR version-B BEHAVIOUR\nDEFINED AS The\
    \ version number of this International \nStandard to which the implementation\
    \ conforms;;\nREGISTERED AS {ISO10589-ISIS.aoi version (1)};\niSType ATTRIBUTE\n\
    WITH ATTRIBUTE SYNTAX ISO10589-ISIS.ISType;\nMATCHES FOR Equality;\nBEHAVIOUR\
    \ iSType-B BEHAVIOUR\nDEFINED AS The type of this Intermediate System.  \nThe\
    \ value of this attribute is only settable via the \ncreate parameter;;\nREGISTERED\
    \ AS {ISO10589-ISIS.aoi iSType (2)};\nmaximumPathSplits ATTRIBUTE\nWITH ATTRIBUTE\
    \ SYNTAX \nISO10589-ISIS.MaximumPathSplits;\nMATCHES FOR Equality, Ordering;\n\
    BEHAVIOUR maximumPathSplits-B BEHAVIOUR\nDEFINED AS Maximum number of paths with\
    \ equal \nrouteing metric value which it is permitted to split \nbetween;,\nreplaceOnlyWhileDisabled-B;\n\
    PARAMETERS constraintViolation;\nREGISTERED AS {ISO10589-ISIS.aoi \nmaximumPathSplits\
    \ (3)};\nmaximumBuffers ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.MaximumBuffers;\n\
    MATCHES FOR Equality, Ordering;\nBEHAVIOUR maximumBuffers-B BEHAVIOUR\nDEFINED\
    \ AS Maximum guaranteed number of buffers \nfor forwarding. This is the number\
    \ of forwarding \nbuffers that is to be reserved, more may be used if \nthey are\
    \ available. (See clause D.1.1);,\nresourceLimiting-B;\nPARAMETERS constraintViolation;\n\
    REGISTERED AS {ISO10589-ISIS.aoi maximumBuffers \n(4)};\nminimumLSPTransmissionInterval\
    \ ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.MinimumLSPTransmissionInterval;\n\
    MATCHES FOR Equality, Ordering;\nBEHAVIOUR minimumLSPTransmissionInterval-B \n\
    BEHAVIOUR\nDEFINED AS Minimum interval, in seconds, between \nre- transmissions\
    \ of an LSP;,\nresettingTimer-B;\nREGISTERED AS {ISO10589-ISIS.aoi \nminimumLSPTransmissionInterval\
    \ (5)};\nmaximumLSPGenerationInterval ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.MaximumLSPGenerationInterval;\n\
    MATCHES FOR Equality, Ordering;\nBEHAVIOUR maximumLSPGenerationInterval-B \nBEHAVIOUR\n\
    DEFINED AS Maximum interval, in seconds, between \ngenerated LSPs by this system;,\n\
    resettingTimer-B;\nREGISTERED AS {ISO10589-ISIS.aoi \nmaximumLSPGenerationInterval\
    \ (6)};\nminimumBroadcastLSPTransmissionInterval ATTRIBUTE\nWITH ATTRIBUTE SYNTAX\
    \ \nISO10589-ISIS.MinimumBroadcastLSPTransmissio\nnInterval;\nMATCHES FOR Equality,\
    \ Ordering;\nBEHAVIOUR \nminimumBroadcastLSPTransmissionInterval-B \nBEHAVIOUR\n\
    DEFINED AS Minimum interval, in milliseconds, be\ntween transmission of LSPs on\
    \ a broadcast circuit \n(See clause 7.3.15.6);,\nresettingTimer-B;\nREGISTERED\
    \ AS {ISO10589-ISIS.aoi \nminimumBroadcastLSPTransmissionInterval (7)};\ncompleteSNPInterval\
    \ ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.CompleteSNPInterval;\nMATCHES\
    \ FOR Equality, Ordering;\nBEHAVIOUR completeSNPInterval-B BEHAVIOUR\nDEFINED\
    \ AS Interval, in seconds, between generation \nof Complete Sequence Numbers PDUs\
    \ by a Desig\nnated Intermediate System on a broadcast circuit;,\nresettingTimer-B;\n\
    REGISTERED AS {ISO10589-ISIS.aoi \ncompleteSNPInterval (8)};\noriginatingL1LSPBufferSize\
    \ ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.OriginatingLSPBufferSize;\n\
    MATCHES FOR Equality, Ordering;\nBEHAVIOUR originatingL1LSPBufferSize-B \nBEHAVIOUR\n\
    DEFINED AS The maximum size of Level 1 LSPs and \nSNPs originated by this system;,\n\
    replaceOnlyWhileDisabled-B;\nPARAMETERS constraintViolation;\nREGISTERED AS {ISO10589-ISIS.aoi\
    \ \noriginatingL1LSPBufferSize (9)};\nmanualAreaAddresses ATTRIBUTE\nWITH ATTRIBUTE\
    \ SYNTAX \nISO10589-ISIS.AreaAddresses;\nMATCHES FOR Equality, Set Comparison,\
    \ Set \nIntersection;\nBEHAVIOUR manualAreaAddresses-B BEHAVIOUR\nDEFINED AS Area\
    \ Addresses to be used for this Inter\nmediate System. At least one value must\
    \ be sup\nplied. The maximum number of Area Addresses \nwhich may exist in the\
    \ set is MaximumAreaAd\ndresses;;\nREGISTERED AS {ISO10589-ISIS.aoi \nmanualAreaAddresses\
    \ (10)};\nminimumLSPGenerationInterval ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.MinimumLSPGenerationInterval;\n\
    MATCHES FOR Equality, Ordering;\nBEHAVIOUR minimumLSPGenerationInterval-B \nBEHAVIOUR\n\
    DEFINED AS Maximum interval in seconds between \nsuccessive generation of LSPs\
    \ with the same LSPID \nby this IS;,\nresettingTimer-B;\nREGISTERED AS {ISO10589-ISIS.aoi\
    \ \nminimumLSPGenerationInterval (11)};\ndefaultESHelloTimer ATTRIBUTE\nWITH ATTRIBUTE\
    \ SYNTAX \nISO10589-ISIS.DefaultESHelloTimer;\nMATCHES FOR Equality, Ordering;\n\
    BEHAVIOUR defaultESHelloTimer-B BEHAVIOUR\nDEFINED AS The value to be used for\
    \ the suggested \nES configuration timer in ISH PDUs when not solic\niting the\
    \ ES configuration;;\nREGISTERED AS {ISO10589-ISIS.aoi \ndefaultESHelloTimer (12)};\n\
    pollESHelloRate ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.PollESHelloRate;\n\
    MATCHES FOR Equality, Ordering;\nBEHAVIOUR pollESHelloRate-B BEHAVIOUR\nDEFINED\
    \ AS The value to be used for the suggested \nES configuration timer in ISH PDUs\
    \ when soliciting \nthe ES configuration;;\nREGISTERED AS {ISO10589-ISIS.aoi pollESHelloRate\
    \ \n(13)};\npartialSNPInterval ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.PartialSNPInterval;\n\
    MATCHES FOR Equality, Ordering;\nBEHAVIOUR partialSNPInterval-B BEHAVIOUR\nDEFINED\
    \ AS Minimum interval between sending Par\ntial Sequence Number PDUs;,\nresettingTimer-B;\n\
    REGISTERED AS {ISO10589-ISIS.aoi \npartialSNPInterval (14)};\nwaitingTime ATTRIBUTE\n\
    WITH ATTRIBUTE SYNTAX \nISO10589-ISIS.WaitingTime;\nMATCHES FOR Equality, Ordering;\n\
    BEHAVIOUR waitingTime-B BEHAVIOUR\nDEFINED AS Number of seconds to delay in waiting\
    \ \nstate before entering On state;,\nresettingTimer-B;\nREGISTERED AS {ISO10589-ISIS.aoi\
    \ waitingTime \n(15)};\ndRISISHelloTimer ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.DRISISHelloTimer;\n\
    MATCHES FOR Equality, Ordering;\nBEHAVIOUR dRISISHelloTimer-B BEHAVIOUR\nDEFINED\
    \ AS The interval in seconds between the \ngeneration of IIH PDUs by the designated\
    \ IS on a \nLAN;,\nresettingTimer-B;\nREGISTERED AS {ISO10589-ISIS.aoi \ndRISISHelloTimer\
    \ (16)};\nl1State ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.DatabaseState;\n\
    MATCHES FOR Equality;\nBEHAVIOUR l1State-B BEHAVIOUR\nDEFINED AS The state of\
    \ the Level 1 database;;\nREGISTERED AS {ISO10589-ISIS.aoi l1State (17)};\nareaAddresses\
    \ ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.AreaAddresses;\nMATCHES FOR\
    \ Equality, Set Comparison, Set \nIntersection;\nBEHAVIOUR areaAddresses-B BEHAVIOUR\n\
    DEFINED AS The union of the sets of manualAreaAd\ndresses reported in all Level\
    \ 1 Link State PDUs re\nceived by this Intermediate System;;\nREGISTERED AS {ISO10589-ISIS.aoi\
    \ areaAddresses \n(18)};\ncorruptedLSPsDetected ATTRIBUTE\nDERIVED FROM nonWrappingCounter;\n\
    BEHAVIOUR corruptedLSPsDetected-B BEHAVIOUR\nDEFINED AS Number of Corrupted LSP\
    \ Detected \nevents generated;;\nREGISTERED AS {ISO10589-ISIS.aoi \ncorruptedLSPsDetected\
    \ (19)};\nlSPL1DatabaseOverloads ATTRIBUTE\nDERIVED FROM nonWrappingCounter;\n\
    BEHAVIOUR lSPL1DatabaseOverloads-B \nBEHAVIOUR\nDEFINED AS Number of times the\
    \ LSP L1 Database \nOverload event has been generated;;\nREGISTERED AS {ISO10589-ISIS.aoi\
    \ \nlSPL1DatabaseOverloads (20)};\nmanualAddressesDroppedFromArea ATTRIBUTE\n\
    DERIVED FROM nonWrappingCounter;\nBEHAVIOUR manualAddressesDroppedFromArea-B \n\
    BEHAVIOUR\nDEFINED AS Number of times the Manual Addresses \nDropped From Area\
    \ event has been generated;;\nREGISTERED AS {ISO10589-ISIS.aoi \nmanualAddressesDroppedFromArea\
    \ (21)};\nattemptsToExceedMaximumSequenceNumber \nATTRIBUTE\nDERIVED FROM nonWrappingCounter;\n\
    BEHAVIOUR \nattemptsToExceedMaximumSequenceNumber-B \nBEHAVIOUR\nDEFINED AS Number\
    \ of times the Attempt To Exceed \nMaximum Sequence Number event has been \ngenerated;;\n\
    REGISTERED AS {ISO10589-ISIS.aoi \nattemptsToExceedMaximumSequenceNumber \n(22)};\n\
    sequenceNumberSkips ATTRIBUTE\nDERIVED FROM nonWrappingCounter;\nBEHAVIOUR sequenceNumberSkips-B\
    \ BEHAVIOUR\nDEFINED AS Number of times the Sequence Number \nSkipped event has\
    \ been generated;;\nREGISTERED AS {ISO10589-ISIS.aoi \nsequenceNumberSkips (23)};\n\
    ownLSPPurges ATTRIBUTE\nDERIVED FROM nonWrappingCounter;\nBEHAVIOUR ownLSPPurges-B\
    \ BEHAVIOUR\nDEFINED AS Number of times the Own LSP Purged \nevent has been generated;;\n\
    REGISTERED AS {ISO10589-ISIS.aoi ownLSPPurges \n(24)};\niDFieldLengthMismatches\
    \ ATTRIBUTE\nDERIVED FROM nonWrappingCounter;\nBEHAVIOUR iDFieldLengthMismatches-B\
    \ \nBEHAVIOUR\nDEFINED AS Number of times the iDFieldLengthMis\nmatch event has\
    \ been generated;;\nREGISTERED AS {ISO10589-ISIS.aoi \niDFieldLengthMismatches\
    \ (25)};\noriginatingL2LSPBufferSize ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.OriginatingLSPBufferSize;\n\
    MATCHES FOR Equality, Ordering;\nBEHAVIOUR originatingL2LSPBufferSize-B \nBEHAVIOUR\n\
    DEFINED AS The maximum size of Level 2 LSPs and \nSNPs originated by this system;,\n\
    replaceOnlyWhileDisabled-B;\nPARAMETERS constraintViolation;\nREGISTERED AS {ISO10589-ISIS.aoi\
    \ \noriginatingL2LSPBufferSize (26)};\nmaximumVirtualAdjacencies ATTRIBUTE\nWITH\
    \ ATTRIBUTE SYNTAX \nISO10589-ISIS.MaximumVirtualAdjacencies;\nMATCHES FOR Equality,\
    \ Ordering;\nBEHAVIOUR maximumVirtualAdjacencies-B \nBEHAVIOUR\nDEFINED AS Maximum\
    \ number of Virtual Adjacen\ncies which may be created to repair partitioned \n\
    Level 1 domains;;\nREGISTERED AS {ISO10589-ISIS.aoi \nmaximumVirtualAdjacencies\
    \ (27)};\nl2State ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.DatabaseState;\n\
    MATCHES FOR Equality, Ordering;\nBEHAVIOUR l2State-B BEHAVIOUR\nDEFINED AS The\
    \ state of the Level 2 database;;\nREGISTERED AS {ISO10589-ISIS.aoi l2State (28)};\n\
    partitionAreaAddresses ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.AreaAddresses;\n\
    MATCHES FOR Equality, Set Comparison, Set \nIntersection;\nBEHAVIOUR partitionAreaAddresses-B\
    \ BEHAVIOUR\nDEFINED AS The set union of all manualAreaAd\ndresses of all Intermediate\
    \ systems in the partition \nreachable by non-virtual links (calculated from their\
    \ \nLevel 1 LSPs);;\nREGISTERED AS {ISO10589-ISIS.aoi \npartitionAreaAddresses\
    \ (29)};\npartitionDesignatedL2IntermediateSystem ATTRIBUTE\nWITH ATTRIBUTE SYNTAX\
    \ \nISO10589-ISIS.SystemID;\nMATCHES FOR Equality;\nBEHAVIOUR \npartitionDesignatedL2IntermediateSystem-B\
    \ \nBEHAVIOUR\nDEFINED AS The ID of the Partition Designated \nLevel 2 Intermediate\
    \ System for this system;;\nREGISTERED AS {ISO10589-ISIS.aoi \npartitionDesignatedL2IntermediateSystem\
    \ (30)};\npartitionVirtualLinkChanges ATTRIBUTE\nDERIVED FROM nonWrappingCounter;\n\
    BEHAVIOUR partitionVirtualLinkChanges-B \nBEHAVIOUR\nDEFINED AS Number of times\
    \ the Partition Virtual \nLink Change Notification has been generated;;\nREGISTERED\
    \ AS {ISO10589-ISIS.aoi \npartitionVirtualLinkChanges (31)};\nlSPL2DatabaseOverloads\
    \ ATTRIBUTE\nDERIVED FROM nonWrappingCounter;\nBEHAVIOUR lSPL2DatabaseOverloads-B\
    \ \nBEHAVIOUR\nDEFINED AS Number of times the LSP L2 Database \nOverload event\
    \ has been generated;;\nREGISTERED AS {ISO10589-ISIS.aoi \nlSPL2DatabaseOverloads\
    \ (32)};\ntype ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.CircuitType;\n\
    MATCHES FOR Equality;\nBEHAVIOUR type-B BEHAVIOUR\nDEFINED AS The type of the\
    \ circuit. This attribute \nmay only be set when the Circuit is created. Subse\n\
    quently it is read-only;;\nREGISTERED AS {ISO10589-ISIS.aoi type (33)};\nhelloTimer\
    \ ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.HelloTimer;\nMATCHES FOR Equality,\
    \ Ordering;\nBEHAVIOUR helloTimer-B BEHAVIOUR\nDEFINED AS The period, in seconds,\
    \ between ISH \nPDUs;,\nresettingTimer-B;\nREGISTERED AS {ISO10589-ISIS.aoi helloTimer\
    \ (34)};\nl1DefaultMetric ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.HopMetric;\n\
    MATCHES FOR Equality, Ordering;\nBEHAVIOUR l1defaultMetric-B BEHAVIOUR\nDEFINED\
    \ AS The default metric value of this circuit \nfor Level 1 traffic. The value\
    \ of zero is reserved to \nindicate that this metric is not supported;;\nREGISTERED\
    \ AS {ISO10589-ISIS.aoi l1DefaultMetric \n(35)};\nl1DelayMetric ATTRIBUTE\nWITH\
    \ ATTRIBUTE SYNTAX \nISO10589-ISIS.HopMetric;\nMATCHES FOR Equality, Ordering;\n\
    BEHAVIOUR l1DelayMetric-B BEHAVIOUR\nDEFINED AS The delay metric value of this\
    \ circuit for \nLevel 1 traffic. The value of zero is reserved to indi\ncate that\
    \ this metric is not supported;;\nREGISTERED AS {ISO10589-ISIS.aoi l1DelayMetric\
    \ \n(36)};\nl1ExpenseMetric ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.HopMetric;\n\
    MATCHES FOR Equality, Ordering;\nBEHAVIOUR l1ExpenseMetric-B BEHAVIOUR\nDEFINED\
    \ AS The expense metric value of this circuit \nfor Level 1 traffic. The value\
    \ of zero is reserved to \nindicate that this metric is not supported;;\nREGISTERED\
    \ AS {ISO10589-ISIS.aoi l1ExpenseMetric \n(37)};\nl1ErrorMetric ATTRIBUTE\nWITH\
    \ ATTRIBUTE SYNTAX \nISO10589-ISIS.HopMetric;\nMATCHES FOR Equality, Ordering;\n\
    BEHAVIOUR l1ErrorMetric-B BEHAVIOUR\nDEFINED AS The error metric value of this\
    \ circuit for \nLevel 1 traffic. The value of zero is reserved to indi\ncate that\
    \ this metric is not supported;;\nREGISTERED AS {ISO10589-ISIS.aoi l1ErrorMetric\
    \ \n(38)};\ncircuitChanges ATTRIBUTE\nDERIVED FROM nonWrappingCounter;\nBEHAVIOUR\
    \ circuitChanges-B BEHAVIOUR\nDEFINED AS Number of times this Circuit state \n\
    changed between On and Off and vice versa;;\nREGISTERED AS {ISO10589-ISIS.aoi\
    \ circuitChanges \n(39)};\nchangesInAdjacencyState ATTRIBUTE\nDERIVED FROM nonWrappingCounter;\n\
    BEHAVIOUR changesInAdjacencyState-B \nBEHAVIOUR\nDEFINED AS Number of Adjacency\
    \ State Change \nevents generated;;\nREGISTERED AS {ISO10589-ISIS.aoi \nchangesInAdjacencyState\
    \ (40)};\ninitializationFailures ATTRIBUTE\nDERIVED FROM nonWrappingCounter;\n\
    BEHAVIOUR initializationFailures-B BEHAVIOUR\nDEFINED AS Number of Initialization\
    \ Failure events \ngenerated;;\nREGISTERED AS {ISO10589-ISIS.aoi \ninitializationFailures\
    \ (41)};\nrejectedAdjacencies ATTRIBUTE\nDERIVED FROM nonWrappingCounter;\nBEHAVIOUR\
    \ rejectedAdjacencies-B BEHAVIOUR\nDEFINED AS Number of Rejected Adjacency events\
    \ \ngenerated;;\nREGISTERED AS {ISO10589-ISIS.aoi \nrejectedAdjacencies (42)};\n\
    controlPDUsSent ATTRIBUTE\nDERIVED FROM nonWrappingCounter;\nBEHAVIOUR controlPDUsSent-B\
    \ BEHAVIOUR\nDEFINED AS Number of control PDUs sent on this \ncircuit;;\nREGISTERED\
    \ AS {ISO10589-ISIS.aoi controlPDUsSent \n(43)};\ncontrolPDUsReceived ATTRIBUTE\n\
    DERIVED FROM nonWrappingCounter;\nBEHAVIOUR controlPDUsReceived-B BEHAVIOUR\n\
    DEFINED AS Number of control PDUs received on \nthis circuit;;\nREGISTERED AS\
    \ {ISO10589-ISIS.aoi \ncontrolPDUsReceived (44)};\niSISHelloTimer ATTRIBUTE\n\
    WITH ATTRIBUTE SYNTAX \nISO10589-ISIS.ISISHelloTimer;\nMATCHES FOR Equality, Ordering;\n\
    BEHAVIOUR iSISHelloTimer-B BEHAVIOUR\nDEFINED AS The period, in seconds, between\
    \ LAN \nLevel 1 and Level 2 IIH PDUs.  It is also used as the \nperiod between\
    \ ISH PDUs when polling the ES con\nfiguration;,\nresettingTimer-B;\nREGISTERED\
    \ AS {ISO10589-ISIS.aoi iSISHelloTimer \n(45)};\nexternalDomain ATTRIBUTE\nWITH\
    \ ATTRIBUTE SYNTAX ISO10589-ISIS.Boolean;\nMATCHES FOR Equality;\nBEHAVIOUR externalDomain-B\
    \ BEHAVIOUR\nDEFINED AS If TRUE, suppress notmal transmission \nof and interpretation\
    \ of Intra-domain ISIS PDUs on \nthis circuit.;;\nREGISTERED AS {ISO10589-ISIS.aoi\
    \ externalDomain \n(46)};\nl1IntermediateSystemPriority ATTRIBUTE\nWITH ATTRIBUTE\
    \ SYNTAX \nISO10589-ISIS.IntermediateSystemPriority;\nMATCHES FOR Equality, Ordering;\n\
    BEHAVIOUR l1IntermediateSystemPriority-B \nBEHAVIOUR\nDEFINED AS Priority for\
    \ becoming LAN Level 1 \nDesignated Intermediate System;;\nREGISTERED AS {ISO10589-ISIS.aoi\
    \ \nl1IntermediateSystemPriority (47)};\nl1CircuitID ATTRIBUTE\nWITH ATTRIBUTE\
    \ SYNTAX \nISO10589-ISIS.CircuitID;\nMATCHES FOR Equality;\nBEHAVIOUR l1CircuitID-B\
    \ BEHAVIOUR\nDEFINED AS The  LAN ID allocated by the LAN \nLevel 1 Designated\
    \ Intermediate System. Where this \nsystem is not aware of the value (because\
    \ it is not \nparticipating in the Level 1 Designated Intermediate \nSystem election),\
    \ this attribute has the value which \nwould be proposed for this circuit. (i.e.\
    \ the concate\nnation of the local system ID and the one octet local \nCircuit\
    \ ID for this circuit.;;\nREGISTERED AS {ISO10589-ISIS.aoi l1CircuitID \n(48)};\n\
    l1DesignatedIntermediateSystem ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.SystemID;\n\
    MATCHES FOR Equality;\nBEHAVIOUR l1DesignatedIntermediateSystem-B \nBEHAVIOUR\n\
    DEFINED AS The ID  of the LAN Level 1 Designated \nIntermediate System on this\
    \ circuit. If, for any rea\nson this system is not partaking in the relevant Des\n\
    ignated Intermediate System election process, then \nthe value returned is zero;;\n\
    REGISTERED AS {ISO10589-ISIS.aoi \nl1DesignatedIntermediateSystem (49)};\nlanL1DesignatedIntermediateSystemChanges\
    \ \nATTRIBUTE\nDERIVED FROM nonWrappingCounter;\nBEHAVIOUR \nlanL1DesignatedIntermediateSystemChanges-B\
    \ \nBEHAVIOUR\nDEFINED AS Number of LAN L1 Designated Inter\nmediate System Change\
    \ events generated;;\nREGISTERED AS {ISO10589-ISIS.aoi \nlanL1DesignatedIntermediateSystemChanges\
    \ (50)};\nptPtCircuitID ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.CircuitID;\n\
    MATCHES FOR Equality;\nBEHAVIOUR ptPtCircuitID-B BEHAVIOUR\nDEFINED AS The ID\
    \ of the circuit allocated during \ninitialization. If no value has been negotiated\
    \ (either \nbecause the adjacency is to an End system, or \nbecause initialization\
    \ has not yet successfully \ncompleted), this attribute has the value which would\
    \ \nbe proposed for this circuit. (i.e. the concatenation of \nthe local system\
    \ ID and the one octet local Circuit \nID for this circuit.;;\nREGISTERED AS {ISO10589-ISIS.aoi\
    \ ptPtCircuitID \n(51)};\ncallEstablishmentDefaultMetricIncrement ATTRIBUTE\n\
    WITH ATTRIBUTE SYNTAX \nISO10589-ISIS.MetricIncrement;\nMATCHES FOR Equality,\
    \ Ordering;\nBEHAVIOUR \ncallEstablishmentDefaultMetricIncrement-B \nBEHAVIOUR\n\
    DEFINED AS Additional value to be reported for the \ndefault metric value of unestablished\
    \ DA adjacen\ncies;;\nREGISTERED AS {ISO10589-ISIS.aoi \ncallEstablishmentDefaultMetricIncrement\
    \ (52)};\ncallEstablishmentDelayMetricIncrement ATTRIBUTE\nWITH ATTRIBUTE SYNTAX\
    \ \nISO10589-ISIS.MetricIncrement;\nMATCHES FOR Equality, Ordering;\nBEHAVIOUR\
    \ \ncallEstablishmentDelayMetricIncrement-B \nBEHAVIOUR\nDEFINED AS Additional\
    \ value to be reported for the \ndelay metric value of unestablished DA adjacen\n\
    cies;;\nREGISTERED AS {ISO10589-ISIS.aoi \ncallEstablishmentDelayMetricIncrement\
    \ (53)};\ncallEstablishmentExpenseMetricIncrement ATTRIBUTE\nWITH ATTRIBUTE SYNTAX\
    \ \nISO10589-ISIS.MetricIncrement;\nMATCHES FOR Equality, Ordering;\nBEHAVIOUR\
    \ \ncallEstablishmentExpenseMetricIncrement-B \nBEHAVIOUR\nDEFINED AS Additional\
    \ value to be reported for the \nExpense metric value of unestablished DA adjacen\n\
    cies;;\nREGISTERED AS {ISO10589-ISIS.aoi \ncallEstablishmentExpenseMetricIncrement\
    \ (54)};\ncallEstablishmentErrorMetricIncrement ATTRIBUTE\nWITH ATTRIBUTE SYNTAX\
    \ \nISO10589-ISIS.MetricIncrement;\nMATCHES FOR Equality, Ordering;\nBEHAVIOUR\
    \ callEstablishmentErrorMetricIncrement-B \nBEHAVIOUR\nDEFINED AS Additional value\
    \ to be reported for the \nError metric value of unestablished DA adjacencies;;\n\
    REGISTERED AS {ISO10589-ISIS.aoi \ncallEstablishmentErrorMetricIncrement (55)};\n\
    recallTimer ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.RecallTimer;\nMATCHES\
    \ FOR Equality, Ordering;\nBEHAVIOUR recallTimer-B BEHAVIOUR\nDEFINED AS Number\
    \ of seconds that must elapse be\ntween a call failure on a DED circuit and a\
    \ recall;,\nresettingTimer-B;\nREGISTERED AS {ISO10589-ISIS.aoi recallTimer \n\
    (56)};\nidleTimer ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.IdleTimer;\n\
    MATCHES FOR Equality, Ordering;\nBEHAVIOUR idleTimer-B BEHAVIOUR\nDEFINED AS Number\
    \ of seconds of idle time before \ncall is cleared;,\nresettingTimer-B;\nREGISTERED\
    \ AS {ISO10589-ISIS.aoi idleTimer (57)};\ninitialMinimumTimer ATTRIBUTE\nWITH\
    \ ATTRIBUTE SYNTAX \nISO10589-ISIS.InitialMinimumTimer;\nMATCHES FOR Equality,\
    \ Ordering;\nBEHAVIOUR initialMinimumTimer-B BEHAVIOUR\nDEFINED AS Number of seconds\
    \ that a call remains \nconnected after being established, irrespective of \n\
    traffic. (Note. This should be set small enough so \nthat the call is cleared\
    \ before the start of the next \ncharging interval.);,\nresettingTimer-B;\nREGISTERED\
    \ AS {ISO10589-ISIS.aoi \ninitialMinimumTimer (58)};\nreserveTimer ATTRIBUTE\n\
    WITH ATTRIBUTE SYNTAX \nISO10589-ISIS.ReserveTimer;\nMATCHES FOR Equality, Ordering;\n\
    BEHAVIOUR reserveTimer-B BEHAVIOUR\nDEFINED AS Number of seconds, after call is\
    \ cleared \ndue to lack of traffic, during which the SVC remains \nreserved for\
    \ the previous SNPA address;,\nresettingTimer-B;\nREGISTERED AS {ISO10589-ISIS.aoi\
    \ reserveTimer \n(59)};\nmaximumSVCAdjacencies ATTRIBUTE\nWITH ATTRIBUTE SYNTAX\
    \ \nISO10589-ISIS.MaximumSVCAdjacencies;\nMATCHES FOR Equality, Ordering;\nBEHAVIOUR\
    \ maximumSVCAdjacencies-B \nBEHAVIOUR\nDEFINED AS Number of Adjacencies to reserve\
    \ for \nSVCs for this circuit. This is the maximum number \nof simultaneous calls\
    \ which are possible on this cir\ncuit;,\nresourceLimiting-B;\nPARAMETERS constraintViolation;\n\
    REGISTERED AS {ISO10589-ISIS.aoi \nmaximumSVCAdjacencies (60)};\nreservedAdjacency\
    \ ATTRIBUTE\nWITH ATTRIBUTE SYNTAX ISO10589-ISIS.Boolean;\nMATCHES FOR Equality;\n\
    BEHAVIOUR reservedAdjacency-B BEHAVIOUR\nDEFINED AS When True, indicates that\
    \ one SVC \nmust be reserved for a connection to an Intermediate \nSystem;,\n\
    replaceOnlyWhileDisabled-B;\nPARAMETERS constraintViolation;\nREGISTERED AS {ISO10589-ISIS.aoi\
    \ \nreservedAdjacency (61)};\ncallsPlaced ATTRIBUTE\nDERIVED FROM nonWrappingCounter;\n\
    BEHAVIOUR callsPlaced-B BEHAVIOUR\nDEFINED AS Number of Call attempts (successful\
    \ or \nunsuccessful);;\nREGISTERED AS {ISO10589-ISIS.aoi callsPlaced (62)};\n\
    callsFailed ATTRIBUTE\nDERIVED FROM nonWrappingCounter;\nBEHAVIOUR callsFailed-B\
    \ BEHAVIOUR\nDEFINED AS Number of Unsuccessful Call attempts;;\nREGISTERED AS\
    \ {ISO10589-ISIS.aoi callsFailed (63)};\ntimesExceededMaximumSVCAdjacencies ATTRIBUTE\n\
    DERIVED FROM nonWrappingCounter;\nBEHAVIOUR \ntimesExceededMaximumSVCAdjacencies-B\
    \ \nBEHAVIOUR\nDEFINED AS Number of Exceeded Maximum SVC \nAdjacencies events\
    \ generated;;\nREGISTERED AS {ISO10589-ISIS.aoi \ntimesExceededMaximumSVCAdjacencies\
    \ (64)};\nneighbourSNPAAddress ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.SNPAAddress;\n\
    MATCHES FOR Equality;\nBEHAVIOUR neighbourSNPAAddress-B \nBEHAVIOUR\nDEFINED AS\
    \ SNPA Address to call, or SNPA Ad\ndress from which to accept call;;\nREGISTERED\
    \ AS {ISO10589-ISIS.aoi \nneighbourSNPAAddress (65)};\nmaximumCallAttempts ATTRIBUTE\n\
    WITH ATTRIBUTE SYNTAX \nISO10589-ISIS.MaximumCallAttempts;\nMATCHES FOR Equality,\
    \ Ordering;\nBEHAVIOUR maximumCallAttempts-B BEHAVIOUR\nDEFINED AS Maximum number\
    \ of successive call \nfailures before halting. (A value of zero means infi\n\
    nite retries.;;\nREGISTERED AS {ISO10589-ISIS.aoi \nmaximumCallAttempts (66)};\n\
    timesExceededMaximumCallAttempts ATTRIBUTE\nDERIVED FROM nonWrappingCounter;\n\
    BEHAVIOUR timesExceededMaximumCallAttempts-B \nBEHAVIOUR\nDEFINED AS Number of\
    \ Exceeded Maximum Call \nAttempts events generated;;\nREGISTERED AS {ISO10589-ISIS.aoi\
    \ \ntimesExceededMaximumCallAttempts (67)};\nl2DefaultMetric ATTRIBUTE\nWITH ATTRIBUTE\
    \ SYNTAX \nISO10589-ISIS.HopMetric;\nMATCHES FOR Equality, Ordering;\nBEHAVIOUR\
    \ l2defaultMetric-B BEHAVIOUR\nDEFINED AS The default metric value of this circuit\
    \ \nfor Level 2 traffic. The value of zero is reserved to \nindicate that this\
    \ metric is not supported;;\nREGISTERED AS {ISO10589-ISIS.aoi l2DefaultMetric\
    \ \n(68)};\nl2DelayMetric ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.HopMetric;\n\
    MATCHES FOR Equality, Ordering;\nBEHAVIOUR l2DelayMetric-B BEHAVIOUR\nDEFINED\
    \ AS The delay metric value of this circuit for \nLevel 2 traffic. The value of\
    \ zero is reserved to indi\ncate that this metric is not supported;;\nREGISTERED\
    \ AS {ISO10589-ISIS.aoi l2DelayMetric \n(69)};\nl2ExpenseMetric ATTRIBUTE\nWITH\
    \ ATTRIBUTE SYNTAX \nISO10589-ISIS.HopMetric;\nMATCHES FOR Equality, Ordering;\n\
    BEHAVIOUR l2ExpenseMetric-B BEHAVIOUR\nDEFINED AS The expense metric value of\
    \ this circuit \nfor Level 2 traffic. The value of zero is reserved to \nindicate\
    \ that this metric is not supported;;\nREGISTERED AS {ISO10589-ISIS.aoi l2ExpenseMetric\
    \ \n(70)};\nl2ErrorMetric ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.HopMetric;\n\
    MATCHES FOR Equality, Ordering;\nBEHAVIOUR l2ErrorMetric-B BEHAVIOUR\nDEFINED\
    \ AS The error metric value of this circuit for \nLevel 2 traffic. The value of\
    \ zero is reserved to indi\ncate that this metric is not supported;;\nREGISTERED\
    \ AS {ISO10589-ISIS.aoi l2ErrorMetric \n(71)};\nmanualL2OnlyMode ATTRIBUTE\nWITH\
    \ ATTRIBUTE SYNTAX ISO10589-ISIS.Boolean;\nMATCHES FOR Equality;\nBEHAVIOUR manualL2OnlyMode-B\
    \ BEHAVIOUR\nDEFINED AS When True, indicates that this Circuit is \nto be used\
    \ only for Level 2;,\nreplaceOnlyWhileDisabled-B;\nPARAMETERS constraintViolation;\n\
    REGISTERED AS {ISO10589-ISIS.aoi \nmanualL2OnlyMode (72)};\nl2IntermediateSystemPriority\
    \ ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.IntermediateSystemPriority;\n\
    MATCHES FOR Equality, Ordering;\nBEHAVIOUR l2IntermediateSystemPriority-B \nBEHAVIOUR\n\
    DEFINED AS Priority for becoming LAN Level 2 \nDesignated Intermediate System;;\n\
    REGISTERED AS {ISO10589-ISIS.aoi \nl2IntermediateSystemPriority (73)};\nl2CircuitID\
    \ ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.CircuitID;\nMATCHES FOR Equality;\n\
    BEHAVIOUR l2CircuitID-B BEHAVIOUR\nDEFINED AS The LAN ID allocated by the LAN\
    \ \nLevel 2 Designated Intermediate System. Where this \nsystem is not aware of\
    \ the value (because it is not \nparticipating in the Level 2 Designated Intermediate\
    \ \nSystem election), this attribute has the value which \nwould be proposed for\
    \ this circuit. (i.e. the concate\nnation of the local system ID and the one octet\
    \ local \nCircuit ID for this circuit.;;\nREGISTERED AS {ISO10589-ISIS.aoi l2CircuitID\
    \ \n(74)};\nl2DesignatedIntermediateSystem ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \n\
    ISO10589-ISIS.SystemID;\nMATCHES FOR Equality;\nBEHAVIOUR l2DesignatedIntermediateSystem-B\
    \ \nBEHAVIOUR\nDEFINED AS The ID  of the LAN Level 2 Designated \nIntermediate\
    \ System on this circuit. If, for any rea\nson this system is not partaking in\
    \ the relevant Des\nignated Intermediate System election process, then \nthe value\
    \ returned is ;;\nREGISTERED AS {ISO10589-ISIS.aoi \nl2DesignatedIntermediateSystem\
    \ (75)};\nlanL2DesignatedIntermediateSystemChanges \nATTRIBUTE\nDERIVED FROM nonWrappingCounter;\n\
    BEHAVIOUR \nlanL2DesignatedIntermediateSystemChanges-B \nBEHAVIOUR\nDEFINED AS\
    \ Number of LAN L2 Designated Inter\nmediate System Change events generated;;\n\
    REGISTERED AS {ISO10589-ISIS.aoi \nlanL2DesignatedIntermediateSystemChanges (76)};\n\
    adjacencyName ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.GraphicString;\n\
    MATCHES FOR Equality, Substrings;\nBEHAVIOUR adjacencyName-B BEHAVIOUR\nDEFINED\
    \ AS A string which is the Identifier for the \nAdjacency and which is unique\
    \ amongst the set of \nAdjacencies maintained for this Circuit. If this is a \n\
    manually created adjacency (i.e. the type is Manual) \nit is set by the System\
    \ Manager when the Adjacency \nis created, otherwise it is generated by the imple\n\
    mentation such that it is unique. The set of identifier \ncontaining the leading\
    \ string \"Auto\" are reserved for \nAutomatic Adjacencies. An attempt to create\
    \ a Man\nual Adjacency with such an identifier will cause an \nexception to be\
    \ raised;;\nREGISTERED AS {ISO10589-ISIS.aoi adjacencyName \n(77)};\nadjacencyState\
    \ ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.AdjacencyState;\nMATCHES FOR\
    \ Equality;\nBEHAVIOUR adjacencyState-B BEHAVIOUR\nDEFINED AS The state of the\
    \ adjacency;;\nREGISTERED AS {ISO10589-ISIS.aoi adjacencyState \n(78)};\nneighbourLANAddress\
    \ ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.LANAddress;\nMATCHES FOR Equality;\n\
    BEHAVIOUR neighbourLANAddress-B BEHAVIOUR\nDEFINED AS The MAC address of the neighbour\
    \ sys\ntem on a broadcast circuit;,\nreplaceOnlyWhileDisabled-B;\nPARAMETERS constraintViolation;\n\
    REGISTERED AS {ISO10589-ISIS.aoi \nneighbourLANAddress (79)};\nneighbourSystemType\
    \ ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.NeighbourSystemType;\nMATCHES\
    \ FOR Equality;\nBEHAVIOUR neighbourSystemType-B BEHAVIOUR\nDEFINED AS The type\
    \ of the neighbour system  one \nof: Unknown End system Intermediate system L1\
    \ \nIntermediate system L2 Intermediate system;;\nREGISTERED AS {ISO10589-ISIS.aoi\
    \ \nneighbourSystemType (80)};\nsNPAAddress ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \n\
    ISO10589-ISIS.SNPAAddress;\nMATCHES FOR Equality;\nBEHAVIOUR sNPAAddress-B BEHAVIOUR\n\
    DEFINED AS The SNPA Address of the neighbour \nsystem on an X.25 circuit;,\nreplaceOnlyWhileDisabled-B;\n\
    PARAMETERS constraintViolation;\nREGISTERED AS {ISO10589-ISIS.aoi sNPAAddress\
    \ \n(81)};\nadjacencyUsageType ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.AdjacencyUsageType;\n\
    MATCHES FOR Equality;\nBEHAVIOUR level-B BEHAVIOUR\nDEFINED AS The usage of the\
    \ Adjacency.  An \nAdjacency of type Level 1\" will be used for Level 1 \ntraffic\
    \ only.  An adjacency of type Level 2\" will be \nused for Level 2 traffic only.\
    \ An adjacency of type \nLevel 1 and 2\" will be used for both Level 1 and \n\
    Level 2 traffic. There may be two adjacencies (of \ntypes Level 1\" and Level\
    \ 2\" between the same pair \nof Intermediate Systems.;;\nREGISTERED AS {ISO10589-ISIS.aoi\
    \ \nadjacencyUsageType (82)};\nneighbourSystemID ATTRIBUTE\nWITH ATTRIBUTE SYNTAX\
    \ \nISO10589-ISIS.SystemID;\nMATCHES FOR Equality;\nBEHAVIOUR neighbourSystemID-B\
    \ BEHAVIOUR\nDEFINED AS The SystemID of the neighbouring In\ntermediate system\
    \ from the Source ID field of the \nneighbour's IIH PDU. The Intermediate System\
    \ ID \nfor this neighbour is derived by appending zero to \nthis value.;;\nREGISTERED\
    \ AS {ISO10589-ISIS.aoi \nneighbourSystemID (83)};\nneighbourAreas ATTRIBUTE\n\
    WITH ATTRIBUTE SYNTAX \nISO10589-ISIS.AreaAddresses;\nMATCHES FOR Equality, Set\
    \ Comparison, Set \nIntersection;\nBEHAVIOUR neighbourAreas-B BEHAVIOUR\nDEFINED\
    \ AS This contains the Area Addresses of a \nneighbour Intermediate System from\
    \ the IIH PDU.;;\nREGISTERED AS {ISO10589-ISIS.aoi neighbourAreas \n(84)};\nholdingTimer\
    \ ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.HoldingTimer;\nMATCHES FOR\
    \ Equality, Ordering;\nBEHAVIOUR holdingTimer-B BEHAVIOUR\nDEFINED AS Holding\
    \ time for this adjacency updated \nfrom the IIH PDUs;;\nREGISTERED AS {ISO10589-ISIS.aoi\
    \ holdingTimer \n(85)};\nlANPriority ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.IntermediateSystemPriority;\n\
    MATCHES FOR Equality, Ordering;\nBEHAVIOUR lANPriority-B BEHAVIOUR\nDEFINED AS\
    \ Priority of neighbour on this adjacency \nfor becoming LAN Level 1 Designated\
    \ Intermediate \nSystem if adjacencyType is L1 Intermediate System \nor LAN Level\
    \ 2 Designated Intermediate System if \nadjacencyType is L2 Intermediate System;;\n\
    REGISTERED AS {ISO10589-ISIS.aoi lANPriority \n(86)};\nendSystemIDs ATTRIBUTE\n\
    WITH ATTRIBUTE SYNTAX \nISO10589-ISIS.EndSystemIDs;\nMATCHES FOR Equality, Set\
    \ Comparison, Set \nIntersection;\nBEHAVIOUR endSystemIDs-B BEHAVIOUR\nDEFINED\
    \ AS This contains the system ID(s) of a \nneighbour End system. Where (in a Intermediate\
    \ \nSystem) an adjacency has been created manually, \nthese will be the set of\
    \ IDs given in the manualIDs \nparameter of the create directive.;;\nREGISTERED\
    \ AS {ISO10589-ISIS.aoi endSystemIDs \n(87)};\nnetworkEntityTitle ATTRIBUTE\n\
    WITH ATTRIBUTE SYNTAX \nISO10589-ISIS.NetworkEntityTitle;\nMATCHES FOR Equality,\
    \ Ordering;\nBEHAVIOUR networkEntityTitle-B BEHAVIOUR\nDEFINED AS The Network\
    \ entity Title which is the \ndestination of a Virtual link being used to repair\
    \ a \npartitioned Level 1 area (see clause 7.2.10);;\nREGISTERED AS {ISO10589-ISIS.aoi\
    \ \nnetworkEntityTitle (88)};\nmetric ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.PathMetric;\n\
    MATCHES FOR Equality, Ordering;\nBEHAVIOUR metric-B BEHAVIOUR\nDEFINED AS Cost\
    \ of least cost L2 path(s) to destina\ntion area based on the default metric;;\n\
    REGISTERED AS {ISO10589-ISIS.aoi metric (89)};\ndefaultMetricPathCost ATTRIBUTE\n\
    WITH ATTRIBUTE SYNTAX \nISO10589-ISIS.PathMetric;\nMATCHES FOR Equality, Ordering;\n\
    BEHAVIOUR defaultMetricPathCost-B BEHAVIOUR\nDEFINED AS Cost of least cost path(s)\
    \ using the de\nfault metric to destination;;\nREGISTERED AS {ISO10589-ISIS.aoi\
    \ \ndefaultMetricPathCost (90)};\ndefaultMetricOutputAdjacencies ATTRIBUTE\nWITH\
    \ ATTRIBUTE SYNTAX \nISO10589-ISIS.OutputAdjacencies;\nMATCHES FOR Equality, Set\
    \ Comparison, Set \nIntersection;\nBEHAVIOUR defaultMetricOutputAdjacencies-B\
    \ \nBEHAVIOUR\nDEFINED AS The set of Adjacency (or Reachable Ad\ndress) managed\
    \ object identifiers representing the \nforwarding decisions based upon the default\
    \ metric \nfor the destination;;\nREGISTERED AS {ISO10589-ISIS.aoi \ndefaultMetricOutputAdjacencies\
    \ (91)};\ndelayMetricPathCost ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.PathMetric;\n\
    MATCHES FOR Equality, Ordering;\nBEHAVIOUR delayMetricPathCost-B BEHAVIOUR\nDEFINED\
    \ AS Cost of least cost path(s) using the delay \nmetric to destination;;\nREGISTERED\
    \ AS {ISO10589-ISIS.aoi \ndelayMetricPathCost (92)};\ndelayMetricOutputAdjacencies\
    \ ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.OutputAdjacencies;\nMATCHES\
    \ FOR Equality, Set Comparison, Set \nIntersection;\nBEHAVIOUR delayMetricOutputAdjacencies-B\
    \ \nBEHAVIOUR\nDEFINED AS The set of Adjacency (or Reachable Ad\ndress) managed\
    \ object identifiers representing the \nforwarding decisions based upon the delay\
    \ metric \nfor the destination;;\nREGISTERED AS {ISO10589-ISIS.aoi \ndelayMetricOutputAdjacencies\
    \ (93)};\nexpenseMetricPathCost ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.PathMetric;\n\
    MATCHES FOR Equality, Ordering;\nBEHAVIOUR expenseMetricPathCost-B BEHAVIOUR\n\
    DEFINED AS Cost of least cost path(s) using the ex\npense metric to destination;;\n\
    REGISTERED AS {ISO10589-ISIS.aoi \nexpenseMetricPathCost (94)};\nexpenseMetricOutputAdjacencies\
    \ ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.OutputAdjacencies;\nMATCHES\
    \ FOR Equality, Set Comparison, Set \nIntersection;\nBEHAVIOUR expenseMetricOutputAdjacencies-B\
    \ \nBEHAVIOUR\nDEFINED AS The set of Adjacency (or Reachable Ad\ndress) managed\
    \ object identifiers representing the \nforwarding decisions based upon the expense\
    \ metric \nfor the destination;;\nREGISTERED AS {ISO10589-ISIS.aoi \nexpenseMetricOutputAdjacencies\
    \ (95)};\nerrorMetricPathCost ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.PathMetric;\n\
    MATCHES FOR Equality, Ordering;\nBEHAVIOUR errorMetricPathCost-B BEHAVIOUR\nDEFINED\
    \ AS Cost of least cost path(s) using the error \nmetric to destination;;\nREGISTERED\
    \ AS {ISO10589-ISIS.aoi \nerrorMetricPathCost (96)};\nerrorMetricOutputAdjacencies\
    \ ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.OutputAdjacencies;\nMATCHES\
    \ FOR Equality, Set Comparison, Set \nIntersection;\nBEHAVIOUR errorMetricOutputAdjacencies-B\
    \ \nBEHAVIOUR\nDEFINED AS The set of Adjacency (or Reachable Ad\ndress) managed\
    \ object identifiers representing the \nforwarding decisions based upon the error\
    \ metric for \nthe destination;;\nREGISTERED AS {ISO10589-ISIS.aoi \nerrorMetricOutputAdjacencies\
    \ (97)};\naddressPrefix ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.AddressPrefix;\n\
    MATCHES FOR Equality, Substrings;\nBEHAVIOUR addressPrefix-B BEHAVIOUR\nDEFINED\
    \ AS An Area Address (or prefix) of a desti\nnation area;;\nREGISTERED AS {ISO10589-ISIS.aoi\
    \ addressPrefix \n(98)};\ndefaultMetric ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.HopMetric;\n\
    MATCHES FOR Equality, Ordering;\nBEHAVIOUR defaultMetric-B BEHAVIOUR\nDEFINED\
    \ AS The default metric value for reaching \nthe specified prefix over this Circuit.\
    \ If this attribute \nis changed while both the Reachable Address and \nthe Circuit\
    \ are Enabled (i.e. state On), the actions \ndescribed in clause 8.3.5.4 must\
    \ be taken. The value \nof zero is reserved to indicate that this metric is not\
    \ \nsupported;;\nREGISTERED AS {ISO10589-ISIS.aoi defaultMetric \n(99)};\ndelayMetric\
    \ ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.HopMetric;\nMATCHES FOR Equality,\
    \ Ordering;\nBEHAVIOUR delayMetric-B BEHAVIOUR\nDEFINED AS The delay metric value\
    \ for reaching the \nspecified prefix over this Circuit.BEHAVIOURIf \nthis attribute\
    \ is changed while both the Reachable \nAddress and the Circuit are Enabled (i.e.\
    \ state On), \nthe actions described in clause 8.3.5.4 must be taken. \nThe value\
    \ of zero is reserved to indicate that this \nmetric is not supported;;\nREGISTERED\
    \ AS {ISO10589-ISIS.aoi delayMetric \n(100)};\nexpenseMetric ATTRIBUTE\nWITH ATTRIBUTE\
    \ SYNTAX \nISO10589-ISIS.HopMetric;\nMATCHES FOR Equality, Ordering;\nBEHAVIOUR\
    \ expenseMetric-B BEHAVIOUR\nDEFINED AS The expense metric value for reaching\
    \ \nthe specified prefix over this Circuit. If this attribute \nis changed while\
    \ both the Reachable Address and \nthe Circuit are Enabled (i.e. state On), the\
    \ actions \ndescribed in clause 8.3.5.4 must be taken. The value \nof zero is\
    \ reserved to indicate that this metric is not \nsupported;;\nREGISTERED AS {ISO10589-ISIS.aoi\
    \ expenseMetric \n(101)};\nerrorMetric ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.HopMetric;\n\
    MATCHES FOR Equality, Ordering;\nBEHAVIOUR errorMetric-B BEHAVIOUR\nDEFINED AS\
    \ The error metric value for reaching the \nspecified prefix over this Circuit.\
    \ If this attribute is \nchanged while both the Reachable Address and the \nCircuit\
    \ are Enabled (i.e. state On), the actions de\nscribed in clause 8.3.5.4 must\
    \ be taken. The value of \nzero is reserved to indicate that this metric is not\
    \ \nsupported;;\nREGISTERED AS {ISO10589-ISIS.aoi errorMetric \n(102)};\ndefaultMetricType\
    \ ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.MetricType;\nMATCHES FOR Equality;\n\
    BEHAVIOUR defaultMetricType-B BEHAVIOUR\nDEFINED AS Indicates whether the default\
    \ metric is \ninternal or external;;\nREGISTERED AS {ISO10589-ISIS.aoi \ndefaultMetricType\
    \ (103)};\ndelayMetricType ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.MetricType;\n\
    MATCHES FOR Equality;\nBEHAVIOUR delayMetricType-B BEHAVIOUR\nDEFINED AS Indicates\
    \ whether the delay metric is in\nternal or external;;\nREGISTERED AS {ISO10589-ISIS.aoi\
    \ delayMetricType \n(104)};\nexpenseMetricType ATTRIBUTE\nWITH ATTRIBUTE SYNTAX\
    \ \nISO10589-ISIS.MetricType;\nMATCHES FOR Equality;\nBEHAVIOUR expenseMetricType-B\
    \ BEHAVIOUR\nDEFINED AS Indicates whether the expense metric is \ninternal or\
    \ external;;\nREGISTERED AS {ISO10589-ISIS.aoi \nexpenseMetricType (105)};\nerrorMetricType\
    \ ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.MetricType;\nMATCHES FOR Equality;\n\
    BEHAVIOUR errorMetricType-B BEHAVIOUR\nDEFINED AS Indicates whether the error\
    \ metric is in\nternal or extternal;;\nREGISTERED AS {ISO10589-ISIS.aoi errorMetricType\
    \ \n(106)};\nmappingType ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.MappingType;\n\
    MATCHES FOR Equality;\nBEHAVIOUR mappingType-B BEHAVIOUR\nDEFINED AS The type\
    \ of mapping to be employed to \nascertain the SNPA Address to which a call should\
    \ \nbe placed for this prefix. X.121 indicates that the \nX.121 address extraction\
    \ algorithm is to be em\nployed. This will extract the SNPA address from the \n\
    IDI of an X.121 format IDP of the NSAP address to \nwhich the NPDU is to be forwarded.\
    \ Manual indi\ncates that the set of addresses in the sNPAAddresses \nor LANAddresses\
    \ characteristic are to be used. For \nBroadcast circuits, only the value Manual\
    \ is permit\nted;;\nREGISTERED AS {ISO10589-ISIS.aoi mappingType \n(107)};\nlANAddress\
    \ ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.LANAddress;\nMATCHES FOR Equality;\n\
    BEHAVIOUR lANAddress-B BEHAVIOUR\nDEFINED AS Asingle LAN addresses to which an\
    \ \nNPDU may be directed in order to reach an address \nwhich matches the address\
    \ prefix of the Reachable \nAddress. An exception is raised if an attempt is \n\
    made to enable the Reachable Address with the de\nfault value;;\nREGISTERED AS\
    \ {ISO10589-ISIS.aoi lANAddress \n(108)};\nsNPAAddresses ATTRIBUTE\nWITH ATTRIBUTE\
    \ SYNTAX \nISO10589-ISIS.SNPAAddresses;\nMATCHES FOR Equality;\nBEHAVIOUR sNPAAddresses-B\
    \ BEHAVIOUR\nDEFINED AS A set of SNPA addresses to which a call \nmay be directed\
    \ in order to reach an address which \nmatches the address prefix of the Reachable\
    \ Ad\ndress. Associated with each SNPA Address, but not \nvisible to System Management,\
    \ is a variable lastFail\nure of Type BinaryAbsoluteTime;;\nREGISTERED AS {ISO10589-ISIS.aoi\
    \ sNPAAddresses \n(109)};\nnonWrappingCounter ATTRIBUTE\nWITH ATTRIBUTE SYNTAX\
    \  \nISO10589-ISIS.NonWrappingCounter;\nMATCHES FOR Equality, Ordering;\nBEHAVIOUR\
    \ nonWrappingCounter-B BEHAVIOUR\nDEFINED AS Non-replaceable, non-wrapping \n\
    counter;;\n-- This attibute is only defined in order to allow other \ncounter\
    \ attributes to be derived from it.\nREGISTERED AS {ISO10589-ISIS.aoi \nnonWrappingCounter\
    \ (110)};\nareaTransmitPassword ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.Password;\n\
    MATCHES FOR Equality;\nBEHAVIOUR areaTransmitPassword-B BEHAVIOUR\nDEFINED AS\
    \ The value to be used as a transmit pass\nword in Level 1 LSP, and SNP PDUs transmitted\
    \ by \nthis Intermediate System;;\nREGISTERED AS {ISO10589-ISIS.aoi \nareaTransmitPassword\
    \ (111)};\nareaReceivePasswords ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.Passwords;\n\
    MATCHES FOR Equality;\nBEHAVIOUR areaReceivePasswords-B BEHAVIOUR\nDEFINED AS\
    \ The values to be used as receive pass\nwords to check the receipt of Level 1\
    \ LSP, and SNP \nPDUs;;\nREGISTERED AS {ISO10589-ISIS.aoi \nareaReceivePasswords\
    \ (112)};\ndomainTransmitPassword ATTRIBUTE\nWITH ATTRIBUTE SYNTAX \nISO10589-ISIS.Password;\n\
    MATCHES FOR Equality;\nBEHAVIOUR domainTransmitPassword-B \nBEHAVIOUR\nDEFINED\
    \ AS The value to be used as a transmit pass\nword in Level 2 LSP, and SNP PDUs\
    \ transmitted by \nthis Intermediate System;;\nREGISTERED AS {ISO10589-ISIS.aoi\
    \ \ndomainTransmitPassword (113)};\ndomainReceivePasswords ATTRIBUTE\nWITH ATTRIBUTE\
    \ SYNTAX \nISO10589-ISIS.Passwords;\nMATCHES FOR Equality;\nBEHAVIOUR domainReceivePasswords-B\
    \ \nBEHAVIOUR\nDEFINED AS The values to be used as receive pass\nwords to check\
    \ the receipt of Level 2 LSP, and SNP \nPDUs;;\nREGISTERED AS {ISO10589-ISIS.aoi\
    \ \ndomainReceivePasswords (114)};\ncircuitTransmitPassword ATTRIBUTE\nWITH ATTRIBUTE\
    \ SYNTAX \nISO10589-ISIS.Password;\nMATCHES FOR Equality;\nBEHAVIOUR circuitTransmitPassword-B\
    \ \nBEHAVIOUR\nDEFINED AS The value to be used as a transmit pass\nword in IIH\
    \ PDUs transmitted by this Intermediate \nSystem;;\nREGISTERED AS {ISO10589-ISIS.aoi\
    \ \ncircuitTransmitPassword (115)};\ncircuitReceivePasswords ATTRIBUTE\nWITH ATTRIBUTE\
    \ SYNTAX \nISO10589-ISIS.Passwords;\nMATCHES FOR Equality;\nBEHAVIOUR circuitReceivePasswords-B\
    \ \nBEHAVIOUR\nDEFINED AS The values to be used as receive pass\nwords to check\
    \ the receipt of IIH PDUs;;\nREGISTERED AS {ISO10589-ISIS.aoi \ncircuitReceivePasswords\
    \ (116)};\nauthenticationFailures ATTRIBUTE\nDERIVED FROM nonWrappingCounter;\n\
    BEHAVIOUR authenticationFailures-B BEHAVIOUR\nDEFINED AS Count of authentication\
    \ Failure notifica\ntions generated;;\nREGISTERED AS {ISO10589-ISIS.aoi \nauthenticationFailures\
    \ (117)};\n11.2.12 Notification Definitions\n-- Note pduFormatError notification\
    \ now included in \nNetwork layer definitions\ncorruptedLSPDetected NOTIFICATION\n\
    BEHAVIOUR corruptedLSPDetected-B BEHAVIOUR\nDEFINED AS The Corrupted LSP Detected\
    \ Notifica\ntion is generated when a corrupted Link State PDU \nis detected in\
    \ memory.  The occurance of this event \nis counted by the corruptedLSPsDetected\
    \ counter.;;\nMODE NON-CONFIRMED;\nWITH INFORMATION SYNTAX \nISO10589-ISIS.NotificationInfo;\n\
    REGISTERED AS {ISO10589-ISIS.noi \ncorruptedLSPDetected (1)};\nlSPL1DatabaseOverload\
    \ NOTIFICATION\nBEHAVIOUR lSPL1DatabaseOverload-B \nBEHAVIOUR\nDEFINED AS The\
    \ LSP L1 Database Overload Notifi\ncation is generated when the l1State of the\
    \ system \nchanges between On and Waiting or Waiting and \nOn. The stateChange\
    \ argument is set to indicate the \nresulting state, and in the case of Waiting\
    \ the sour\nceID is set to indicate the source of the LSP which \nprecipitated\
    \ the overload.  The occurance of this \nevent is counted by the lSPL1DatabaseOverloads\
    \ \ncounter.;;\nMODE NON-CONFIRMED;\nPARAMETERS\nnotificationOverloadStateChange,\n\
    notificationSourceID;\nWITH INFORMATION SYNTAX \nISO10589-ISIS.NotificationInfo;\n\
    REGISTERED AS {ISO10589-ISIS.noi \nlSPL1DatabaseOverload (2)};\nmanualAddressDroppedFromArea\
    \ NOTIFICATION\nBEHAVIOUR manualAddressDroppedFromArea-B \nBEHAVIOUR\nDEFINED\
    \ AS The Manual Address Dropped From \nArea Notification is generated when one\
    \ of the man\nualAreaAddresses (specified on this system) is ig\nnored when computing\
    \ partitionAreaAddresses or \nareaAddresses because there are more than Maximu\n\
    mAreaAddresses distinct Area Addresses. The \nareaAddress argument is set to the\
    \ ignored Area Ad\ndress. It is generated once for each Area Address in \nmanualAreaAddresses\
    \ which is dropped. It is not \nlogged again for that Area Address until after\
    \ it has \nbeen reinstated into areaAddresses (i.e. it is only the \naction of\
    \ dropping the Area Address and not the \nstate of being dropped, which causes\
    \ the event to be \ngenerated). The occurance of this event is counted \nby the\
    \ manualAddressDroppedFromAreas counter.;;\nMODE NON-CONFIRMED;\nPARAMETERS\n\
    notificationAreaAddress;\nWITH INFORMATION SYNTAX \nISO10589-ISIS.NotificationInfo;\n\
    REGISTERED AS {ISO10589-ISIS.noi \nmanualAddressDroppedFromArea (3)};\nattemptToExceedMaximumSequenceNumber\
    \ \nNOTIFICATION\nBEHAVIOUR \nattemptToExceedMaximumSequenceNumber-B \nBEHAVIOUR\n\
    DEFINED AS The Attempt To Exceed Maximum Se\nquence Number Notification is generated\
    \ when an \nattempt is made to increment the sequence number \nof an LSP beyond\
    \ the maximum sequence number. \nFollowing the generation of this event the operation\
    \ \nof the Routeing state machine shall be disabled for at \nleast (MaxAge + ZeroAgeLifetime)\
    \ seconds.  The \noccurance of this event is counted by the \nattemptsToExceedMaximumSequenceNumber\
    \ \ncounter.;;\nMODE NON-CONFIRMED;\nWITH INFORMATION SYNTAX \nISO10589-ISIS.NotificationInfo;\n\
    REGISTERED AS {ISO10589-ISIS.noi \nattemptToExceedMaximumSequenceNumber (4)};\n\
    sequenceNumberSkip NOTIFICATION\nBEHAVIOUR sequenceNumberSkip-B BEHAVIOUR\nDEFINED\
    \ AS The Sequence Number Skipped Notifi\ncation is generated when the sequence\
    \ number of an \nLSP is incremented by more than one.  The occur\nance of this\
    \ event is counted by the sequenceNum\nberSkips counter.;;\nMODE NON-CONFIRMED;\n\
    WITH INFORMATION SYNTAX \nISO10589-ISIS.NotificationInfo;\nREGISTERED AS {ISO10589-ISIS.noi\
    \ \nsequenceNumberSkip (5)};\nownLSPPurge NOTIFICATION\nBEHAVIOUR ownLSPPurge-B\
    \ BEHAVIOUR\nDEFINED AS The Own LSP Purged Notification is \ngenerated when a\
    \ zero aged copy of a system's own \nLSP is received from some other system. This\
    \ repre\nsents an erroneous attempt to purge the local sys\ntem's LSP.  The occurance\
    \ of this event is counted \nby the ownLSPPurges counter.;;\nMODE NON-CONFIRMED;\n\
    WITH INFORMATION SYNTAX \nISO10589-ISIS.NotificationInfo;\nREGISTERED AS {ISO10589-ISIS.noi\
    \ ownLSPPurge \n(6)};\npartitionVirtualLinkChange NOTIFICATION\nBEHAVIOUR partitionVirtualLinkChange-B\
    \ \nBEHAVIOUR\nDEFINED AS The Partition Virtual Link Change Noti\nfication is\
    \ generated when a virtual link (for the pur\nposes of Level 1 partition repair)\
    \ is either created or \ndeleted. The relative order of events relating to the\
    \ \nsame Virtual Link must be preserved.  The occur\nance of this event is counted\
    \ by the partitionVirtual\nLinkChanges counter.;;\nMODE NON-CONFIRMED;\nPARAMETERS\n\
    notificationVirtualLinkChange,\nnotificationVirtualLinkAddress;\nWITH INFORMATION\
    \ SYNTAX \nISO10589-ISIS.NotificationInfo;\nREGISTERED AS {ISO10589-ISIS.noi \n\
    partitionVirtualLinkChange (7)};\nlSPL2DatabaseOverload NOTIFICATION\nBEHAVIOUR\
    \ lSPL2DatabaseOverload-B \nBEHAVIOUR\nDEFINED AS The LSP L2 Database Overload\
    \ Notifi\ncation is generated when the l2State of the system \nchanges between\
    \ On and Waiting or Waiting and \nOn. The stateChange argument is set to indicate\
    \ the \nresulting state, and in the case of Waiting the sour\nceID is set to indicate\
    \ the source of the LSP which \nprecipitated the overload.  The occurance of this\
    \ \nevent is counted by the lSPL2DatabaseOverloads \ncounter.;;\nMODE NON-CONFIRMED;\n\
    PARAMETERS\nnotificationOverloadStateChange,\nnotificationSourceID;\nWITH INFORMATION\
    \ SYNTAX \nISO10589-ISIS.NotificationInfo;\nREGISTERED AS {ISO10589-ISIS.noi \n\
    lSPL2DatabaseOverload (8)};\niDFieldLengthMismatch NOTIFICATION\nBEHAVIOUR iDFieldLengthMismatch-B\
    \ \nBEHAVIOUR\nDEFINED AS The iDFieldLengthMismatch Notifica\ntion is generated\
    \ when a PDU is received with a dif\nferent value for ID field length to that\
    \ of the \nreceiving Intermediate system. The occurance of this \nevent is counted\
    \ by the iDFieldLengthMismatches \ncounter.;;\nMODE NON-CONFIRMED;\nPARAMETERS\n\
    notificationIDLength,\nnotificationSourceID;\nWITH INFORMATION SYNTAX \nISO10589-ISIS.NotificationInfo;\n\
    REGISTERED AS {ISO10589-ISIS.noi \niDFieldLengthMismatch (9)};\ncircuitChange\
    \ NOTIFICATION\nBEHAVIOUR circuitChange-B BEHAVIOUR\nDEFINED AS The Circuit Change\
    \ Notification is gen\nerated when the state of the Circuit changes from On \n\
    to Off or from Off to On. The relative order of \nevents relating to the same\
    \ Circuit must be pre\nserved.  The occurance of this event is counted by \nthe\
    \ circuitChanges counter.;;\nMODE NON-CONFIRMED;\nPARAMETERS\nnotificationNewCircuitState;\n\
    WITH INFORMATION SYNTAX \nISO10589-ISIS.NotificationInfo;\nREGISTERED AS {ISO10589-ISIS.noi\
    \ circuitChange \n(10)};\nadjacencyStateChange NOTIFICATION\nBEHAVIOUR adjacencyStateChange-B\
    \ BEHAVIOUR\nDEFINED AS The Adjacency State Change Notifica\ntion is generated\
    \ when the state of an Adjacency on \nthe Circuit changes from Up to Down or Down\
    \ to \nUp (in the latter case the Reason argument is omit\nted). For these purposes\
    \ the states Up and \nUp/dormant are considered to be Up, and any other \nstate\
    \ is considered to be Down. The relative order of \nevents relating to the same\
    \ Adjacency must be pre\nserved.  The occurance of this event is counted by \n\
    the adjacencyStateChanges counter.;;\nMODE NON-CONFIRMED;\nPARAMETERS\nnotificationAdjacentSystem,\n\
    notificationNewAdjacencyState,\nnotificationReason,\nnotificationPDUHeader,\n\
    notificationCalledAddress,\nnotificationVersion;\nWITH INFORMATION SYNTAX \nISO10589-ISIS.NotificationInfo;\n\
    REGISTERED AS {ISO10589-ISIS.noi \nadjacencyStateChange (11)};\ninitializationFailure\
    \ NOTIFICATION\nBEHAVIOUR initializationFailure-B BEHAVIOUR\nDEFINED AS The Initialisation\
    \ Failure Notification is \ngenerated when an attempt to initialise with an adja\n\
    cent system fails as a result of either Version Skew \nor Area Mismatch. In the\
    \ case of Version Skew, the \nAdjacent system argument is not present.   The oc\n\
    curance of this event is counted by the initialization\nFailures counter.;;\n\
    MODE NON-CONFIRMED;\nPARAMETERS\nnotificationAdjacentSystem,\nnotificationReason,\n\
    notificationPDUHeader,\nnotificationCalledAddress,\nnotificationVersion;\nWITH\
    \ INFORMATION SYNTAX \nISO10589-ISIS.NotificationInfo;\nREGISTERED AS {ISO10589-ISIS.noi\
    \ \ninitializationFailure (12)};\nrejectedAdjacency NOTIFICATION\nBEHAVIOUR rejectedAdjacency-B\
    \ BEHAVIOUR\nDEFINED AS The Rejected Adjacency Notification is \ngenerated when\
    \ an attempt to create a new adja\ncency is rejected, because of a lack of resources.\
    \  \nThe occurance of this event is counted by the reject\nedAdjacencies counter.;;\n\
    MODE NON-CONFIRMED;\nPARAMETERS\nnotificationAdjacentSystem,\nnotificationReason,\n\
    notificationPDUHeader,\nnotificationCalledAddress,\nnotificationVersion;\nWITH\
    \ INFORMATION SYNTAX \nISO10589-ISIS.NotificationInfo;\nREGISTERED AS {ISO10589-ISIS.noi\
    \ \nrejectedAdjacency (13)};\nlanL1DesignatedIntermediateSystemChange \nNOTIFICATION\n\
    BEHAVIOUR \nlanL1DesignatedIntermediateSystemChange-B \nBEHAVIOUR\nDEFINED AS\
    \ The LAN L1 Designated Intermediate \nSystem Change Notification is generated\
    \ when the \nlocal system either elects itself or resigns as being \nthe LAN L1\
    \ Designated Intermediate System on this \ncircuit. The relative order of these\
    \ events must be \npreserved. The occurance of this event is counted by \nthe\
    \ lanL1DesignatedIntermediateSystemChanges \ncounter.;;\nMODE NON-CONFIRMED;\n\
    PARAMETERS\nnotificationDesignatedIntermediateSystemChange;\nWITH INFORMATION\
    \ SYNTAX \nISO10589-ISIS.NotificationInfo;\nREGISTERED AS {ISO10589-ISIS.noi \n\
    lanL1DesignatedIntermediateSystemChange (14)};\nexceededMaximumSVCAdjacencies\
    \ NOTIFICATION\nBEHAVIOUR exceededMaximumSVCAdjacencies-B \nBEHAVIOUR\nDEFINED\
    \ AS The Exceeded Maximum SVC Adjacen\ncies Notification is generated when there\
    \ is no free \nadjacency on which to establish an SVC for a new \ndestination.(see\
    \ clause 8.3.2.3)  The occurance of \nthis event is counted by the \ntimesExceededMaximumSVCAdjacencies\
    \ counter.;;\nMODE NON-CONFIRMED;\nWITH INFORMATION SYNTAX \nISO10589-ISIS.NotificationInfo;\n\
    REGISTERED AS {ISO10589-ISIS.noi \nexceededMaximumSVCAdjacencies (15)};\nexceededMaximumCallAttempts\
    \ NOTIFICATION\nBEHAVIOUR exceededMaximumCallAttempts-B \nBEHAVIOUR\nDEFINED AS\
    \ The Exceeded Maximum Call Attempts \nNotification is generated when recallCount\
    \ becomes \nequal to maximumCallAttempts.  The occurance of \nthis event is counted\
    \ by the timesExceededMaxi\nmumCallAttempts counter.;;\nMODE NON-CONFIRMED;\n\
    WITH INFORMATION SYNTAX \nISO10589-ISIS.NotificationInfo;\nREGISTERED AS {ISO10589-ISIS.noi\
    \ \nexceededMaximumCallAttempts (16)};\nlanL2DesignatedIntermediateSystemChange\
    \ \nNOTIFICATION\nBEHAVIOUR \nlanL2DesignatedIntermediateSystemChange-B \nBEHAVIOUR\n\
    DEFINED AS The LAN L2 Designated Intermediate \nSystem Change Notification is\
    \ generated when the \nlocal system either elects itself or resigns as being \n\
    the LAN L2 Designated Intermediate System on this \ncircuit. The relative order\
    \ of these events must be \npreserved. The occurance of this event is counted\
    \ by \nthe lanL2DesignatedIntermediateSystemChanges \ncounter.;;\nMODE NON-CONFIRMED;\n\
    PARAMETERS\nnotificationDesignatedIntermediateSystemChange;\nWITH INFORMATION\
    \ SYNTAX \nISO10589-ISIS.NotificationInfo;\nREGISTERED AS {ISO10589-ISIS.noi \n\
    lanL2DesignatedIntermediateSystemChange (17)};\nauthenticationFailure NOTIFICATION\n\
    BEHAVIOUR authenticationFailure-B BEHAVIOUR\nDEFINED AS Generated when a PDU is\
    \ received with \nan incorrect Authentication information field;;\nMODE NON-CONFIRMED;\n\
    PARAMETERS\nnotificationAdjacentSystem;\nWITH INFORMATION SYNTAX \nISO10589-ISIS.NotificationInfo;\n\
    REGISTERED AS {ISO10589-ISIS.noi \nauthenticationFailure (18)};\n11.2.13 Action\
    \ Definitions\n-- Note:  The following actions have been proposed (in \nSC21 N4977)\
    \ for inclusion in  DMI.  Until such time \nas this is completed, the definitions\
    \ of these actions \nare given here.\n--\nactivate ACTION\nBEHAVIOUR activate-B\
    \ BEHAVIOUR\nDEFINED AS Sets OperationalState to `enabled' and \ncommences operation;;\n\
    MODE CONFIRMED;\nPARAMETERS successResponse, failureResponse, \nfailureReason;\n\
    WITH INFORMATION SYNTAX \nISO10589-ISIS.ActionInfo;\nWITH REPLY SYNTAX ISO10589-ISIS.ActionReply;\n\
    REGISTERED AS {ISO10589-ISIS.acoi activate (1)};\ndeactivate ACTION\nBEHAVIOUR\
    \ deactivate-B BEHAVIOUR\nDEFINED AS Sets OperationalState to `disabled' and \n\
    ceases operation;;\nMODE CONFIRMED;\nPARAMETERS successResponse, failureResponse,\
    \ \nfailureReason;\nWITH INFORMATION SYNTAX \nISO10589-ISIS.ActionInfo;\nWITH\
    \ REPLY SYNTAX ISO10589-ISIS.ActionReply;\nREGISTERED AS {ISO10589-ISIS.acoi deactivate\
    \ (2)};\n11.2.14 Parameter Definitions\niSO10589-NB-p1 PARAMETER\nCONTEXT CREATE-INFO;\n\
    WITH SYNTAX ISO10589-ISIS.ISType;\nBEHAVIOUR iSO10589-NB-p1-B BEHAVIOUR\nDEFINED\
    \ AS The value to be given to the iStype at\ntribute on MO creation. This parameter\
    \ is manda\ntory;;\nREGISTERED AS {ISO10589-ISIS.proi \niSO10589-NB-p1 (1)};\n\
    iSO10589Circuit-MO-p1 PARAMETER\nCONTEXT CREATE-INFO;\nWITH SYNTAX ISO10589-ISIS.CircuitType;\n\
    BEHAVIOUR iSO10589Circuit-MO-p1-B \nBEHAVIOUR\nDEFINED AS The value to be given\
    \ to the type attrib\nute on MO creation. This parameter is mandatory;;\nREGISTERED\
    \ AS {ISO10589-ISIS.proi \niSO10589Circuit-MO-p1 (2)};\nreachableAddressP1 PARAMETER\n\
    CONTEXT CREATE-INFO;\nWITH SYNTAX ISO10589-ISIS.AddressPrefix;\nBEHAVIOUR reachableAddressp1-B\
    \ BEHAVIOUR\nDEFINED AS The value to be given to the addressPre\nfix attribute\
    \ on MO creation. This parameter is man\ndatory;;\nREGISTERED AS {ISO10589-ISIS.proi\
    \ \nreachableAddressP1 (3)};\nreachableAddressP2 PARAMETER\nCONTEXT CREATE-INFO;\n\
    WITH SYNTAX ISO10589-ISIS.MappingType;\nBEHAVIOUR reachableAddressp2-B BEHAVIOUR\n\
    DEFINED AS The value to be given to the map\npingType attribute on MO creation.\
    \ This parameter \nis only permitted when the `type' of the parent cir\ncuit is\
    \ either `broadcast' or `DA'.  In those cases the \ndefault value is `manual';;\n\
    REGISTERED AS {ISO10589-ISIS.proi \nreachableAddressP2 (4)};\nmanualAdjacencyP1\
    \ PARAMETER\nCONTEXT CREATE-INFO;\nWITH SYNTAX ISO10589-ISIS.LANAddress;\nBEHAVIOUR\
    \ manualAdjacencyP1-B BEHAVIOUR\nDEFINED AS The value to be given to the lANAd\n\
    dress attribute on MO creation;;\nREGISTERED AS {ISO10589-ISIS.proi \nmanualAdjacencyP1\
    \ (5)};\nmanualAdjacencyP2 PARAMETER\nCONTEXT CREATE-INFO;\nWITH SYNTAX ISO10589-ISIS.EndSystemIDs;\n\
    BEHAVIOUR manualAdjacencyP2-B BEHAVIOUR\nDEFINED AS The value to be given to the\
    \ endSys\ntemIDs attribute on MO creation;;\nREGISTERED AS {ISO10589-ISIS.proi\
    \ \nmanualAdjacencyP2 (6)};\nsuccessResponse PARAMETER\nCONTEXT ACTION-REPLY;\n\
    WITH SYNTAX ISO10589-ISIS.ResponseCode;\nBEHAVIOUR successResponse-B BEHAVIOUR\n\
    DEFINED AS Returned in the responseCode field of \nan ActionReply when the action\
    \ has completed suc\ncessfully.;;\nREGISTERED AS {ISO10589-ISIS.proi successResponse\
    \ \n(7)};\nfailureResponse PARAMETER\nCONTEXT ACTION-REPLY;\nWITH SYNTAX ISO10589-ISIS.ResponseCode;\n\
    BEHAVIOUR failureResponse-B BEHAVIOUR\nDEFINED AS Returned in the responseCode\
    \ field of \nan ActionReply when the action failed to complete. \nThe failureReason\
    \ parameter is returned with this re\nsponseCode, giving additional information;;\n\
    REGISTERED AS {ISO10589-ISIS.proi failureResponse \n(8)};\nfailureReason PARAMETER\n\
    CONTEXT ACTION-REPLY;\nWITH SYNTAX ISO10589-ISIS.ActionFailureReason;\nBEHAVIOUR\
    \ failureReason-B BEHAVIOUR\nDEFINED AS Gives the reason why an entity failed\
    \ to \nactivate or deactivate.;;\nREGISTERED AS {ISO10589-ISIS.proi failureReason\
    \ \n(9)};\nconstraintViolation PARAMETER\nCONTEXT SPECIFIC-ERROR;\nWITH SYNTAX\
    \ \nISO10589-ISIS.ConstraintViolationReason;\nBEHAVIOUR constraintViolation-B\
    \ BEHAVIOUR\nDEFINED AS The specific error returned on failure of \na REPLACE\
    \ operation when the MO prohibits such \noperations under certain conditions,\
    \ for example \nwhile the MO is in the disabled operational state.;;\nREGISTERED\
    \ AS {ISO10589-ISIS.proi \nconstraintViolation (10)};\nnotificationReceivingAdjacency\
    \ PARAMETER\nCONTEXT EVENT-INFO;\nWITH SYNTAX  \nISO10589-ISIS.LocalDistinguishedName;\n\
    BEHAVIOUR notificationReceivingAdjacency-B \nBEHAVIOUR\nDEFINED AS The local managed\
    \ object name of the \nadjacency upon which the NPDU was received;;\nREGISTERED\
    \ AS {ISO10589-ISIS.proi \nnotificationReceivingAdjacency (11)};\nnotificationIDLength\
    \ PARAMETER\nCONTEXT EVENT-INFO;\nWITH SYNTAX  ISO10589-ISIS.IDLength;\nBEHAVIOUR\
    \ notificationIDLength-B BEHAVIOUR\nDEFINED AS The IDLength specified in the ignored\
    \ \nPDU;;\nREGISTERED AS {ISO10589-ISIS.proi \nnotificationIDLength (12)};\nnotificationAreaAddress\
    \ PARAMETER\nCONTEXT EVENT-INFO;\nWITH SYNTAX ISO10589-ISIS.AreaAddress;\nBEHAVIOUR\
    \ notificationAreaAddress-B BEHAVIOUR\nDEFINED AS The Area Address which caused\
    \ Maxi\nmumAreaAddresses to be exceeded;;\nREGISTERED AS {ISO10589-ISIS.proi \n\
    notificationAreaAddress (13)};\nnotificationSourceID PARAMETER\nCONTEXT EVENT-INFO;\n\
    WITH SYNTAX ISO10589-ISIS.SourceID;\nBEHAVIOUR notificationSourceID-B BEHAVIOUR\n\
    DEFINED AS The source ID of the LSP;;\nREGISTERED AS {ISO10589-ISIS.proi \nnotificationSourceID\
    \ (14)};\nnotificationVirtualLinkChange PARAMETER\nCONTEXT EVENT-INFO;\nWITH SYNTAX\
    \ ISO10589-ISIS.VirtualLinkChange;\nBEHAVIOUR notificationVirtualLinkChange-B\
    \ \nBEHAVIOUR\nDEFINED AS This indicates whether the event was \ngenrated as a\
    \ result of the creation or deletion of a \nVirtual Link between two Level 2 Intermediate\
    \ Sys\ntems.;;\nREGISTERED AS {ISO10589-ISIS.proi \nnotificationVirtualLinkChange\
    \ (15)};\nnotificationVirtualLinkAddress PARAMETER\nCONTEXT EVENT-INFO;\nWITH\
    \ SYNTAX ISO10589-ISIS.NetworkEntityTitle;\nBEHAVIOUR notificationVirtualLinkAddress-B\
    \ \nBEHAVIOUR\nDEFINED AS The Network Entity Title of the Level 2 \nIntermediate\
    \ System at the remote end of the virtual \nlink;;\nREGISTERED AS {ISO10589-ISIS.proi\
    \ \nnotificationVirtualLinkAddress (16)};\nnotificationNewCircuitState PARAMETER\n\
    CONTEXT EVENT-INFO;\nWITH SYNTAX ISO10589-ISIS.NewCircuitState;\nBEHAVIOUR notificationNewCircuitState-B\
    \ \nBEHAVIOUR\nDEFINED AS The direction of the Circuit state change \nspecified\
    \ as the resulting state. i.e. a change from On \nto Off is specified as Off;;\n\
    REGISTERED AS {ISO10589-ISIS.proi \nnotificationNewCircuitState (17)};\nnotificationNewAdjacencyState\
    \ PARAMETER\nCONTEXT EVENT-INFO;\nWITH SYNTAX ISO10589-ISIS.NewAdjacencyState;\n\
    BEHAVIOUR notificationNewAdjacencyState-B \nBEHAVIOUR\nDEFINED AS The direction\
    \ of the Adjacency state \nchange specified as the resulting state.  i.e. a change\
    \ \nfrom Up to Down is specified as Down.  Any state \nother than Up is considered\
    \ to be Down.;;\nREGISTERED AS {ISO10589-ISIS.proi \nnotificationNewAdjacencyState\
    \ (18)};\nnotificationAdjacentSystem PARAMETER\nCONTEXT EVENT-INFO;\nWITH SYNTAX\
    \ ISO10589-ISIS.SystemID;\nBEHAVIOUR notificationAdjacentSystem-B \nBEHAVIOUR\n\
    DEFINED AS The system ID of the adjacent system;;\nREGISTERED AS {ISO10589-ISIS.proi\
    \ \nnotificationAdjacentSystem (19)};\nnotificationReason PARAMETER\nCONTEXT EVENT-INFO;\n\
    WITH SYNTAX ISO10589-ISIS.Reason;\nBEHAVIOUR notificationReason-B BEHAVIOUR\n\
    DEFINED AS The associated Reason;;\nREGISTERED AS {ISO10589-ISIS.proi \nnotificationReason\
    \ (20)};\nnotificationPDUHeader PARAMETER\nCONTEXT EVENT-INFO;\nWITH SYNTAX ISO10589-ISIS.PDUHeader;\n\
    BEHAVIOUR notificationPDUHeader-B BEHAVIOUR\nDEFINED AS The header of the PDU\
    \ which caused \nthe notification;;\nREGISTERED AS {ISO10589-ISIS.proi \nnotificationPDUHeader\
    \ (21)};\nnotificationCalledAddress PARAMETER\nCONTEXT EVENT-INFO;\nWITH SYNTAX\
    \ ISO10589-ISIS.SNPAAddress;\nBEHAVIOUR notificationCalledAddres-B \nBEHAVIOUR\n\
    DEFINED AS The SNPA Address which was being \ncalled when the Adjacency was taken\
    \ down as a re\nsult of a call reject;;\nREGISTERED AS {ISO10589-ISIS.proi \n\
    notificationCalledAddress (22)};\nnotificationVersion PARAMETER\nCONTEXT EVENT-INFO;\n\
    WITH SYNTAX ISO10589-ISIS.Version;\nBEHAVIOUR notificationVersion-B BEHAVIOUR\n\
    DEFINED AS The version number reported by the \nother system;;\nREGISTERED AS\
    \ {ISO10589-ISIS.proi \nnotificationVersion (23)};\nnotificationDesignatedIntermediateSystemChange\
    \ \nPARAMETER\nCONTEXT EVENT-INFO;\nWITH SYNTAX ISO10589-ISIS.DesignatedISChange;\n\
    BEHAVIOUR \nnotificationDesignatedIntermediateSystemChange-B \nBEHAVIOUR\nDEFINED\
    \ AS The direction of the change in Desig\nnated Intermediate System status of\
    \ this system;;\nREGISTERED AS {ISO10589-ISIS.proi \nnotificationDesignatedIntermediateSystemChange\
    \ \n(24)};\nnotificationOverloadStateChange PARAMETER\nCONTEXT EVENT-INFO;\nWITH\
    \ SYNTAX ISO10589-ISIS.OverloadStateChange;\nBEHAVIOUR notificationOverloadStateChange-B\
    \ \nBEHAVIOUR\nDEFINED AS The direction of the change in Overload \nstatus;;\n\
    REGISTERED AS {ISO10589-ISIS.proi \nnotificationOverloadStateChange (25)};\n11.2.15\
    \ Attribute Groups\ncounters ATTRIBUTE GROUP\nDESCRIPTION  The group of all counters;\n\
    REGISTERED AS  {ISO10589-ISIS.agoi counters (1)};\n11.2.16 Behaviour Definitions\n\
    resettingTimer-B BEHAVIOUR\nDEFINED AS This attribute specifies the interval be\n\
    tween certain events in the operation of the protocol \nstate machine.  If the\
    \ value of this attribute is \nchanged to a new value t  while the protocol state\
    \ \nmachine is in operation, the implementation shall \ntake the necessary steps\
    \ to ensure that for any time \ninterval which was in progress when the correspond\n\
    ing attribute was changed, the next expiration of the \nthat interval takes place\
    \ t seconds from the original \nstart of that interval, or immediately, whichever\
    \ is \nlater. The precision with which this time shall be im\nplemented shall\
    \ be  the same as that associated with \nthe basic operation of the timer attribute;\n\
    replaceOnlyWhileDisabled-B BEHAVIOUR\nDEFINED AS This attribute shall only permit\
    \ the RE\nPLACE operation to be performed on it while the \nMO is in the Disabled\
    \ Operational State.  An at\ntempt to perform a REPLACE operation while the \n\
    MO is in the Enabled Operation State shall fail with \nthe generation of the constraintViolation\
    \ specific er\nror.;\nresourceLimiting-B BEHAVIOUR\nDEFINED AS This attribute\
    \ places limits on some re\nsource\".  In general implementations may allocate\
    \ \nreources up to this limit when the managed object is \nenabled and it may\
    \ be impossible to change the allo\ncation without first disabling and re-enabling\
    \ the \nmanaged object.  Therefore this International Stan\ndard only requires\
    \ that it shall be possible to perform \na REPLACE operation on this attribute\
    \ while the \nMO is disabled.  However some implementations \nmay be able to to\
    \ change the allocation of resources \nwithout first disabling the MO.  In this\
    \ case it is per\nmitted to increase the value of the atribute at any \ntime,\
    \ but it shall not be decreased below the cur\nrently used\" value of the resource.\
    \ Where an at\ntempt to perform a REPLACE operation fails either \nbecause the\
    \ MO is enabled, or because an attempt \nhas been made to decrease the value,\
    \ the REPLACE \noperation shall fail with the generation of the con\nstraintViolation\
    \ specific error.;\n11.2.17 ASN1 Modules\nISO10589-ISIS{tbd1}\nDEFINITIONS ::=\
    \ BEGIN\n-- object identifier definitions\nsc6 OBJECT IDENTIFIER ::= {joint-iso-ccitt\
    \ sc6(?)}\n-- value to be assigned by SC21 secretariat\nisisoi OBJECT IDENTIFIER\
    \ ::= {sc6 iSO10589(?)}\n-- value to be assigned by SC6 secretariat\nmoi OBJECT\
    \ IDENTIFIER ::= {isisoi objectClass (3)}\npoi OBJECT IDENTIFIER ::= {isisoi package\
    \ (4)}\nproi OBJECT IDENTIFIER ::= {isisoi parameter (5)}\nnboi OBJECT IDENTIFIER\
    \ ::= {isisoi nameBinding (6)}\naoi OBJECT IDENTIFIER ::= {isisoi attribute (7)}\n\
    agoi OBJECT IDENTIFIER ::= {isisoi attributeGroup \n(8)}\nacoi OBJECT IDENTIFIER\
    \ ::= {isisoi action (10)}\nnoi OBJECT IDENTIFIER ::= {isisoi notification (11)}\n\
    ActionFailureReason ::= ENUMERATED{\nreason1(0),\nreason2(1)}\n-- Note: actual\
    \ reasons TBS\nActionInfo ::= SET OF Parameter\nActionReply ::= SEQUENCE{\nresponseCode\
    \ OBJECT IDENTIFIER,\nresponseArgs SET OF Parameter OPTIONAL}\nAddressPrefix ::=\
    \  OCTETSTRING(SIZE(0..20))\nAdjacencyState ::= ENUMERATED{\ninitializing(0),\n\
    up(1),\nfailed(2)}-- was 4 in N5821 , is it required at all?\nAreaAddress ::=\
    \  OCTETSTRING(SIZE(1..20))\nAreaAddresses ::= SET OF AreaAddress\nBoolean ::=\
    \ BOOLEAN\nCircuitID ::=  OCTETSTRING(SIZE(1..10))\nCompleteSNPInterval ::= INTEGER(1..600)\n\
    ConstraintViolationReason ::= OBJECT IDENTIFIER;\nDRISISHelloTimer ::= INTEGER(1..65535)\n\
    DatabaseState ::= ENUMERATED{\noff(0),\non(1),\nwaiting(2)}\nDesignatedISChange\
    \ ::= ENUMERATED{\nresigned(0),\nelected(1)}\nDefaultESHelloTimer ::= INTEGER(1..65535)\n\
    EndSystemIDs ::= SET OF SystemID\nGraphicString ::=  GRAPHICSTRING\nHelloTimer\
    \ ::= INTEGER(1..65535)\nHoldingTimer ::= INTEGER(1..65535)\nHopMetric ::= INTEGER(0..63)\n\
    ISISHelloTimer ::= INTEGER(1..65535)\nIDLength ::= INTEGER(0..9)\nIdleTimer ::=\
    \ INTEGER(1..65535)\nInitialMinimumTimer ::= INTEGER(1..65535)\nIntermediateSystemPriority\
    \ ::= INTEGER(1..127)\nISType ::= ENUMERATED{\nlevel1IS(1),\nlevel2IS(2)}\nLANAddress\
    \ ::=  OCTETSTRING(SIZE(6))\nAdjacencyUsageType::= ENUMERATED{\nundefined(0),\n\
    level1(1),\nlevel2(2),\nlevel1and2(3)}\nLocalDistinguishedName ::= CMIP-1.ObjectInstance\n\
    -- A suitable free standing definition is requred\nLSPID ::=  OCTETSTRING(SIZE(2..11))\n\
    MappingType ::= ENUMERATED{\nmanual(0),\nx121(1)}\nMaximumBuffers ::= INTEGER(1..65535)\n\
    MaximumCallAttempts ::= INTEGER(1..65535)\nMaximumLSPGenerationInterval ::= INTEGER(1..65535)\n\
    MaximumPathSplits ::= INTEGER(1..32)\nMaximumSVCAdjacencies ::= INTEGER(1..65535)\n\
    MaximumVirtualAdjacencies ::= INTEGER(0..32)\nMetricIncrement ::= INTEGER(0..63)\n\
    MetricType ::= ENUMERATED{\ninternal(0),\nexternal(1)}\nMinimumBroadcastLSPTransmissionInterval\
    \ ::= \nINTEGER(1..65535)\nMinimumLSPGenerationInterval ::= INTEGER(1..65535)\n\
    MinimumLSPTransmissionInterval ::= \nINTEGER(1..65535)\nNeighbourSystemType ::=\
    \ ENUMERATED{\nunknown(0),\nendSystem(1),\nintermediateSystem(2),\nl1IntermediateSystem(3),\n\
    l2IntermediateSystem(4)}\nNetworkEntityTitle ::=  OCTETSTRING(SIZE(1..19))\nNewAdjacencyState\
    \ ::= ENUMERATED{\ndown(0),\nup(1)}\nNewCircuitState ::= ENUMERATED{\noff(0),\n\
    on(1)}\nNonWrappingCounter ::= INTEGER(0..264-1)\nNotificationInfo ::= SET OF\
    \ Parameter\nNSAPAddress ::=  OCTETSTRING(SIZE(1..20))\nOctetString ::=  OCTETSTRING\n\
    OriginatingLSPBufferSize ::= INTEGER(512..1492)\nOutputAdjacencies ::= SET OF\
    \ LocalDistinguishedName\nOverloadStateChange ::= ENUMERATED{\non(0),\nwaiting(1)}\n\
    Parameter ::= SEQUENCE{\nparamIdOBJECT IDENTIFIER,\nparamInfoANY DEFINED BY paramID}\n\
    PartialSNPInterval ::= INTEGER(1..65535)\nPassword ::=  OCTETSTRING(SIZE(0..254)\n\
    Passwords ::= SET OF Password\nPathMetric ::= INTEGER(0..1023)\nPDUHeader ::=\
    \  OCTETSTRING(SIZE(0..255))\nPollESHelloRate ::= INTEGER(1..65535)\nReason ::=\
    \ ENUMERATED{\nholdingTimerExpired(0),\nchecksumError(1),\noneWayConnectivity(2),\n\
    callRejected(3),\nreserveTimerExpired(4),\ncircuitDisabled(5),\nversionSkew(6),\n\
    areaMismatch(7),\nmaximumBroadcastIntermediateSystemsExceeded(8),\nmaximumBroadcastEndSystemsExceeded(9),\n\
    wrongSystemType(10)}\nResponseCode ::= OBJECT IDENTIFIER\nRecallTimer ::= INTEGER(1..65535)\n\
    ReserveTimer ::= INTEGER(1..65535)\nSNPAAddress ::=  \nNUMERICSTRING(FROM(\"0\"\
    |\"1\"|\"2\"|\"3\"|\"4\"|\"5\"|\n\"6\"|\"7\"|\"8\"|\"9\"))(SIZE(0..15))\n-- Up\
    \ to 15 Digits 0..9\nSNPAAddresses ::= SET OF SNPAAddress\nCircuitType ::= ENUMERATED{\n\
    broadcast(0),\nptToPt(1),\nstaticIN(2),\nstaticOut(3),\ndA(4)}\nSourceID ::= \
    \ OCTETSTRING(SIZE(1..10))\nSystemID ::=  OCTETSTRING(SIZE(0..9))\nVirtualLinkChange\
    \ ::= ENUMERATED{\ndeleted(0),\ncreated(1)}\nVersion ::=  GRAPHICSTRING\nWaitingTime\
    \ ::= INTEGER(1..65535)\nmaximumPathSplits-Default INTEGER ::= 2\nMaximumPathSplits-Permitted\
    \ ::= INTEGER(1..32)\nmaximumBuffers-Default INTEGER ::= ImpSpecific\nMaximumBuffers-Permitted\
    \ ::= INTEGER(1..ImpSpecific)\nminimumLSPTransmissionInterval-Default INTEGER\
    \ ::= \n5\nMinimumLSPTransmissionInterval-Permitted ::= \nINTEGER(5..30)\nmaximumLSPGenerationInterval-Default\
    \ INTEGER ::= \n900\nMaximumLSPGenerationInterval-Permitted ::= \nINTEGER(60..900)\n\
    minimumBroadcastLSPTransmissionInterval-Default \nINTEGER ::=33\nMinimumBroadcastLSPTransmissionInterval-Permitted\
    \ ::= \nINTEGER(1..65535)\ncompleteSNPInterval-Default INTEGER ::= 10\nCompleteSNPInterval-Permitted\
    \ ::= INTEGER(1..600)\noriginatingL1LSPBufferSize-Default INTEGER ::= \nreceiveLSPBufferSize\n\
    OriginatingL1LSPBufferSize-Permitted ::= \nINTEGER(512..receiveLSPBufferSize)\n\
    manualAreaAddresses-Default AreaAddresses ::= {}\nManualAreaAddresses-Permitted\
    \ ::= AreaAddresses \n(SIZE(0..MaximumAreaAddresses))\nminimumLSPGenerationInterval-Default\
    \ INTEGER ::= 30\nMinimumLSPGenerationInterval-Permitted ::= \nINTEGER(5..300)\n\
    defaultESHelloTime-Default INTEGER ::= 600\nDefaultESHelloTime-Permitted ::= INTEGER(1..65535)\n\
    pollESHelloRate-Default INTEGER ::= 50\nPollESHelloRate-Permitted ::= INTEGER(1..65535)\n\
    partialSNPInterval-Default INTEGER ::= 2\nPartialSNPInterval-Permitted ::= INTEGER(1..65535)\n\
    waitingTime-Default INTEGER ::= 60\nWaitingTime-Permitted ::= INTEGER(1..65535)\n\
    dRISISHelloTimer-Default INTEGER ::= 1\nDRISISHelloTimer-Permitted ::=  INTEGER(1..65535)\n\
    originatingL2LSPBufferSize-Default INTEGER ::= \nreceiveLSPBufferSize\nOriginatingL2LSPBufferSize-Permitted\
    \ ::= \nINTEGER(512..receiveLSPBufferSize)\nmaximumVirtualAdjacencies-Default\
    \ INTEGER ::= 2\nMaximumVirtualAdjacencies-Permitted ::= \nINTEGER(0..32)\nhelloTimer-Default\
    \ INTEGER ::= 10\nHelloTimer-Permitted ::= INTEGER(1..21845)\ndefaultMetric-Default\
    \ INTEGER ::= 20\nDefaultMetric-Permitted ::= INTEGER(1..MaxLinkMetric)\noptionalMetric-Default\
    \ INTEGER ::= 0\nOptionalMetric-Permitted ::= \nINTEGER(0..MaxLinkMetric)\nmetricType-Default\
    \ MetricType ::= Internal\niSISHelloTimer-Default INTEGER ::= 3\nISISHelloTimer-Permitted\
    \ ::= INTEGER(1..21845)\nexternalDomain-Default BOOLEAN ::= TRUE\nl1IntermediateSystemPriority-Default\
    \ INTEGER ::= 64\nL1IntermediateSystemPriority-Permitted ::= \nINTEGER(1..127)\n\
    callEstablishmentMetricIncrement-Default INTEGER ::= 0\nCallEstablishmentMetricIncrement-Permitted\
    \ ::= \nINTEGER(0..MaxLinkMetric)\nidleTimer-Default INTEGER ::= 30\nIdleTimer-Permitted\
    \ ::= INTEGER(0..65535)\ninitialMinimumTimer-Default INTEGER ::= 55\nInitialMinimumTimer-Permitted\
    \ ::= INTEGER(1..65535)\nreserveTimer-Default INTEGER ::= 600\nReserveTimer-Permitted\
    \ ::= INTEGER(1..65535)\nmaximumSVCAdjacencies-Default INTEGER ::= 1\nMaximumSVCAdjacencies-Permitted\
    \ ::= \nINTEGER(1..65535)\nreservedAdjacency-Default BOOLEAN ::= FALSE\nneighbourSNPAAddress-Default\
    \ INTEGER ::= 0\nrecallTimer-Default INTEGER ::= 60\nRecallTimer-Permitted ::=\
    \ INTEGER(0..65535)\nmaximumCallAttempts-Default INTEGER ::= 10\nMaximumCallAttempts-Permitted\
    \ ::= INTEGER(0..255)\nmanualL2OnlyMode-Default BOOLEAN ::= FALSE\nl2IntermediateSystemPriority-Default\
    \ INTEGER ::= 64\nL2IntermediateSystemPriority-Permitted ::= \nINTEGER(1..127)\n\
    lANAddress-Default LANAddress ::= 000000000000\nsNPAAddresses-Default SNPAAddresses::=\
    \ {}\n12.1.1 Protocol Implementation Conformance \nStatement\nA Protocol Implementation\
    \ Conformance Statement (PICS) \nshall be completed in respect of any claim for\
    \ conformance \nof an implementation to this International Standard: the \nPICS\
    \ shall be produced in accordance with the relevant \nPICS pro-forma in Annex\
    \ A. \n12.1.2 Static Conformance for all ISs\nA system claiming conformance to\
    \ this International Stan\ndard shall be capable of:\na)calculating a single minimum\
    \ cost route to each desti\nnation according to 7.2.6 for the default metric speci\n\
    fied in 7.2.2;\nb)utilising Link State information from a system only \nwhen an\
    \ LSP with LSP number 0 and remaining life\ntime>0 is present according to 7.2.5;\n\
    c)removing excess paths according to 7.2.7\nd)performing the robustness checks\
    \ according to 7.2.8;\ne)constructing a forwarding database according to 7.2.9;\n\
    f)if (and only if) Area Partition Repair is supported, \n1)performing the operations\
    \ according to 7.2.10;\n2)performing the encapsulation operations in the for\n\
    warding process according to 7.4.3.2; and\n3)performing the decapsulation operations\
    \ in the re\nceive process according to 7.4.4;\nTEMPORARY NOTE  may need to reor\n\
    ganise clause 7.4.4 in order to make it crystal \nclear what is required in the\
    \ receive process in \nthe presence/absence of partition repair\ng)computing area\
    \ addresses according to 7.2.11;\nh)generating local Link State information as\
    \ required by \n7.3.2;\ni)including information from Manual Adjacencies ac\ncording\
    \ to 7.3.3.1;\nj)if (and only if) Reachable Addresses are supported, in\ncluding\
    \ information from Reachable Addresses ac\ncording to 7.3.3.2;\nk)generating multiple\
    \ LSPs according to 7.3.4;\nl)generating LSPs periodically according to 7.3.5;\n\
    m)generating LSPs on the occurrence of events accord\ning to 7.3.6;\nn)generating\
    \ an LSP checksum according to 7.3.11;\no)operating the Update Process according\
    \ to 7.3.12\n7.3.17 including controlling the rate of LSP transmis\nsion only\
    \ for each broadcast circuit (if any) according \nto 7.3.15.6;\np)operating the\
    \ LSP database overload procedures ac\ncording to 7.3.19.1;\nq)selecting the appropriate\
    \ forwarding database accord\ning to 7.4.2;\nr)forwarding ISO 8473 PDUs according\
    \ to 7.4.3.1 and \n7.4.3.3;\ns)operating the receive process according to 7.4.4;\n\
    TEMPORARY NOTE  item 1 of the second bulleted \nlist is only required if you implement\
    \ partition repair. \nWe need to reorganise the structure so we can pull \nthis\
    \ out.\nt)performing on each supported Point-to-Point circuit (if \nany):\n1)forming\
    \ and maintaining adjacencies according to \n8.2;\nu)performing on each supported\
    \ ISO 8208 circuit (if \nany)\n1)SVC establishment according to 8.3.2.1 using\
    \ the \nnetwork layer protocols according to 8.3.1;\n8.3.5.3.\n4)If the Reverse\
    \ Path Cache is supported, the opera\ntions specified in 8.3.3\nv)performing on\
    \ each supported broadcast circuit (if \nany)\n1)the pseudonode operations according\
    \ to 7.2.3;\n2)controlling the rate of LSP transmission according \nto 7.3.15.6;\n\
    3)the operations specified in  8.4.18.4.4 and 8.4.6;\n4)the operations specified\
    \ in 8.4.5.\nw)constructing and correctly parsing all PDUs according \nto clause\
    \ 9;\nx)providing a system environment in accordance with \nclause 10;\ny)being\
    \ managed via the system management attributes \ndefined in clause 11. For all\
    \ attributes referenced inthe \nnormative text, the default value (if any) shall\
    \ be sup\nported. Other values shall be supported if referenced \nin a  REQUIRED\
    \ VALUES clause of the GDMO \ndefinition;\nz)If authentication procedures are\
    \ implemented:\n1)the authentication field processing functions of \nclauses 7.3.77.3.10,\
    \ 7.3.15.17.3.15.4, 8.2.3\n8.2.4, and 8.4.1.1;\n2)the Authentication Information\
    \ field of the \nPDU in clauses 9.59.13.\n12.1.3  Static Conformance Requirements\
    \ for \nlevel 1 ISs\nA system claiming conformance to this International Stan\n\
    dard as a level 1 IS shall conform to the requirements of \n12.1.2 and in addition\
    \ shall be capable of\na)identifying the nearest Level 2 IS according to 7.2.9.1;\n\
    b)generating Level 1 LSPs according to 7.3.7;\nc)generating Level 1 pseudonode\
    \ LSPs for each sup\nported broadcast circuit (if any) according to 7.3.8;\nd)performing\
    \ the actions in Level 1 Waiting State ac\ncording to 7.3.19.2\n12.1.4 Static\
    \ Conformance Requirements for \nlevel 2 ISs\nA system claiming conformance to\
    \ this International Stan\ndard as a level 2 IS shall conform to the requirements\
    \ of \n12.1.2 and in addition shall be capable of\na)setting the attached flag\
    \ according to 7.2.9.2;\nb)generating Level 2 LSPs according to 7.3.9;\nc)generating\
    \ Level 2 pseudonode LSPs for each sup\nported broadcast circuit (if any) according\
    \ to 7.3.10;\nd)performing the actions in Level 2 Waiting State ac\ncording to\
    \ 7.3.19.3.\n12.2 Dynamic Conformance\n12.2.1 Receive Process Conformance \nRequirements\n\
    Any protocol function supported shall be implemented in \naccordance with 7.4.4.\n\
    12.2.2 Update Process Conformance \nRequirements\nAny protocol function supported\
    \ shall be implemented in \naccordance with 7.3 and its subclauses.\nAny PDU transmitted\
    \ shall be constructed in accordance \nwith the appropriate subclauses of 9.\n\
    12.2.3 Decision Process Conformance \nRequirements\nAny protocol function supported\
    \ shall be implemented in \naccordance with 7.2 and its subclauses.\n12.2.4 Forwarding\
    \ Process Conformance \nRequirements\nAny protocol function supported shall be\
    \ implemented in \naccordance with 7.4  and its subclauses.\n12.2.5 Performance\
    \ Requirements\nThis International Standard requires that the following per\n\
    formance criteria be met. These requirements apply regard\nless of other demands\
    \ on the system; if an Intermediate sys\ntem has other tasks as well, those will\
    \ only get resources \nnot required to meet these criteria. \nEach Intermediate\
    \ system implementation shall specify (in \nits PICS):\na)the maximum number of\
    \ other Intermediate systems it \ncan handle. (For L1 Intermediate systems that\
    \ means \nIntermediate systems in the area; for L2 Intermediate \nsystems that\
    \ is the sum of Intermediate systems in the \narea and Intermediate systems in\
    \ the L2 subdomain.) \nCall this limit N.\nb)the maximum supported forwarding\
    \ rate in ISO 8473 \nPDUs per second.\n12.2.5.1 Performance requirements on the\
    \ Update \nprocess\nThe implementation shall guarantee the update process \nenough\
    \ resources to process N LSPs per 30 seconds. (Re\nsources = CPU, memory, buffers,\
    \ etc.)\nIn a stable topology the arrival of a single new LSP on a \ncircuit shall\
    \ result in the propagation of that new LSP over \nthe other circuits of the IS\
    \ within one second, irrespective \nof the forwarding load for ISO 8473 data PDUs.\
    \    \n12.2.5.2 Performance requirement on the Decision \nprocess   \nThe implementation\
    \ shall guarantee the decision process \nenough resources to complete (i.e. start\
    \ to finish) within 5 \nseconds, in a stable topology while forwarding at the\
    \ maxi\nmum rate. (For L2 Intermediate Systems, this applies to the \ntwo levels\
    \ together, not each level separately.)    \n12.2.5.3 Reception and Processing\
    \ of PDUs\nAn ideal Intermediate system would be able to correctly \nprocess all\
    \ PDUs, both control and data, with which it was \npresented, while simultaneously\
    \ running the decision proc\ness and responding to management requests. However,\
    \ in \nthe implementations of real Intermediate systems some \ncompromises must\
    \ be made. The way in which these com\npromises are made can dramatically affect\
    \ the correctness \nof operation of the Intermediate system. The following gen\n\
    eral principles apply.\na)A stable topology should result in stable routes when\
    \ \nforwarding at the maximum rated forwarding rate. \nb)Some forwarding progress\
    \ should always be made (al\nbeit over incorrect routes) even in the presence\
    \ of a \nmaximally unstable topology.\nIn order to further characterise the required\
    \ behaviour, it is \nnecessary to identify the following types of traffic. \n\
    a)IIH traffic. This traffic is important for maintaining In\ntermediate system\
    \ adjacencies and hence the Interme\ndiate system topology. In order to prevent\
    \ gratuitous \ntopology changes it is essential that Intermediate sys\ntem adjacencies\
    \ are not caused to go down errone\nously. In order to achieve this no more than\
    \ \nISISHoldingMultiplier - 1 IIH PDUs may be \ndropped between any pair of Intermediate\
    \ systems. A \ning the worst case that they are all Level 2 Intermedi\nate systems).\
    \ \nb)ESH PDU traffic. This traffic is important for main\ntaining End system\
    \ adjacencies, and has relatively low \nprocessing latency. As with IIH PDUs,\
    \ loss of End \nsystem adjacencies will cause gratuitous topology \nrate is approximately\
    \ n/DefaultESHelloTimer \nwhere n is the number of End systems on the LAN. \n\
    The maximum rate during polling is limited to ap\nproximately n/pollESHelloRate\
    \ averaged over a pe\nriod of about 2 minutes. (Note that the actual peak ar\n\
    rival rate over a small interval may be much higher \nthan this.) \nc)LSP (and\
    \ SNP) traffic. This traffic will be \nretransmitted indefinitely by the update\
    \ process if it is \ndropped, so there is no requirement to be able to proc\n\
    ess every received PDU. However, if a substantial \nproportion are lost, the rate\
    \ of convergence to correct \nroutes will be affected, and bandwidth and processing\
    \ \npower will be wasted.\nOn Point-to-Point links the peak rate of arrival is\
    \ lim\nited only by the speed of the data link and the other \ntraffic flowing\
    \ on that link. The maximum average \nis the number of Intermediate systems on\
    \ the LAN, for \nshort periods. A Intermediate system shall be able to \nreceive\
    \ and process at least the former rate without \nstable topology) is dependent\
    \ on the maximum sup\nported configuration size and the settings of \nmaximumLSPGenerationInterval.\
    \ For these pur\nposes the default value of 900 seconds can be as\nsumed. The\
    \ number of LSPs per second is then very \napproximately (n1 + n2 +ne/x)/900 where\
    \ n1 is the \nnumber of level 1 Intermediate systems, n2 the num\nber of level\
    \ 2 Intermediate systems, ne the number of \nEnd system IDs and x the number of\
    \ ID which can be \nfitted into a single LSP.\nNOTE  This gives a value around\
    \ 1 per second for \ntypical maximum configurations of:\n4000 IDs\n100 L1 Intermediate\
    \ systems per area\n400 L2 Intermediate systems.\nd)Data Traffic. This is theoretically\
    \ unlimited and can \narrive at the maximum data rate of the Pointto-Point \n\
    link or LAN (for ISO 8802.3 this is 14,000 PDUs per \nsecond). In practice it\
    \ will be limited by the operation \nof the congestion avoidance and control algorithms,\
    \ \nbut owing to the relatively slow response time of these \nalgorithms, substantial\
    \ peaks are likely to occur.\nAn Intermediate system shall state in its PICS its\
    \ \nmaximum forwarding rate. This shall be quoted under \nat least the following\
    \ conditions.\n1)A stable topology of maximum size. \n2)A maximally unstable topology.\
    \ This figure shall \nbe non-zero, but may reasonably be as low as 1 \nPDU per\
    \ second.\nThe following constraints must be met.\na)The implementation shall\
    \ be capable of receiving the \nmaximum rate of ISH PDUs without loss whenever\
    \ \nthe following conditions hold\n1)The data forwarding traffic rate averaged\
    \ over any \nperiod of one second does not exceed the rate \nwhich the implementation\
    \ claims to support\n2)The ESH and LSP rates do not exceed the back\nground (stable\
    \ topology) rate.\nb)If it is unavoidable that PDUs are dropped, it is a goal\
    \ \nthat the order of retaining PDUs shall be as follows \n(i.e. It is least desirable\
    \ for IIH PDUs to be dropped).\n1)IIH PDUs \n2)ESH PDUs \n3)LSPs and SNPs \n4)data\
    \ PDUs.\nHowever, no class of traffic shall be completely \nstarved. One way to\
    \ achieve this is to allocate a queue \nof suitable length to each class of traffic\
    \ and place the \nPDUs onto the appropriate queue as they arrive. If the \nqueue\
    \ is full the PDUs are discarded. Processor re\nsources shall be allocated to\
    \ the queues to ensure that \nthey all make progress with the same priorities\
    \ as \nabove. This model assumes that an implementation is \ncapable of receiving\
    \ PDUs and selecting their correct \nqueue at the maximum possible data rate (14,000\
    \ \nPDUs per second for a LAN). If this is not the case, \nreception of data traffic\
    \ at a rate greater than some \nlimit (which must be greater than the maximum\
    \ rated \nlimit) will cause loss of some IIH PDUs even in a sta\nble topology.\
    \ This limit shall be quoted in the PICS if \nit exists. \nNOTE - Starting from\
    \ the stable topology condition at maxi\nmum data forwarding rate, an increase\
    \ in the arrival rate of \ndata PDUs will initially only cause some data NPDUs\
    \ to be \nlost. As the rate of arrival of data NPDUs is further in\ncreased a\
    \ point may be reached at which random PDUs are \ndropped. This is the rate which\
    \ must be quoted in the PICS\n12.2.5.4 Transmission\nSufficient processor resources\
    \ shall be allocated to the \ntransmission process to enable it to keep pace with\
    \ recep\ntion for each PDU type. Where prioritisation is required, the \nsame\
    \ order as for reception of PDU types applies.\nAnnex A \nPICS Proforma\n(This\
    \ annex is normative) \nA.1 Introduction\nThe supplier of a protocol implementation\
    \ which is claimed \nto conform to International Standard ISO 10589, whether as\
    \ \na level 1 or level 2 Intermediate system implementation, \nshall complete\
    \ the applicable Protocol Implementation \nConformance Statement (PICS) proforma.\n\
    A completed PICS proforma is the PICS for the implemen\ntation in question. The\
    \ PICS is a statement of which capa\nbilities and options of the protocol have\
    \ been implemented. \nThe PICS can have a number of uses, including use:\n-by\
    \ the protocol implementor, as a check-list to reduce \nthe risk of failure to\
    \ conform to the standard through \noversight;\n-by the supplier and acquirer\
    \  or potential acquirer \n of the implementation, as a detailed indication of\
    \ \nthe capabilities of the implementation, stated relative \nto the common basis\
    \ for understanding provided by \nthe standard PICS proforma;\n-by the user  or\
    \ potential user  of the implementa\ntion, as a basis for initially checking the\
    \ possibility of \ninterworking with another implementation (note that, \nwhile\
    \ interworking can never be guaranteed, failure to \ninterwork can often be predicted\
    \ from incompatible \nPICS's);\n-by a protocol tester, as the basis for selecting\
    \ appropri\nate tests against which to assess the claim for \nconformance of the\
    \ implementation.\nA.2 Abbreviations and Special Symbols\nA.2.1 Status-related\
    \ symbols\nM\tmandatory\nO\toptional\nO.<n>\toptional, but support of at least\
    \ one of the \ngroup of options labelled by the same numeral \n<n> is required.\n\
    X\tprohibited\n\tnot applicable\nc.<p>\tconditional requirement, according to\
    \ condi\ntion <p>\nA.3 Instructions for Completing the \nPICS Proformas\nA.3.1\
    \ General structure of the PICS proforma\nThe first part of the PICS proforma\
    \  Implementation \nIdentification and Protocol Summary  is to be completed \n\
    as indicated with the information necessary to identify fully \nboth the supplier\
    \ and the implementation.\nThe main part of the PICS proforma is a fixed-format\
    \ ques\ntionnaire divided into subclauses each containing a group of \nindividual\
    \ items. Answers to the questionnaire items are to \nbe provided in the rightmost\
    \ column, either by simply \nmarking an answer to indicate a restricted choice\
    \ (usually \nYes or No), or by entering a value or a set or range of val\nues.\
    \ (Note that there are some items where two or more \nchoices from a set of possible\
    \ answers can apply: all rele\nvant choices are to be marked.)\nEach item is identified\
    \ by an item reference in the first col\numn; the second column contains the question\
    \ to be an\nswered; the third column contains the reference or refer\nences to\
    \ the material that specifies the item in the main \nbody of the standard. the\
    \ remaining columns record the \nstatus of the item  whether support is mandatory,\
    \ optional \nor conditional  and provide the space for the answers: see \nA.3.4\
    \  below.\nA supplier may also provide  or be required to provide  \nfurther information,\
    \ categorised as either Additional Infor\nmation or Exception Information. When\
    \ present, each kind \nof further information is to be provided in a further sub\n\
    clause of items labelled A<i> or X<i> respectively for \ncross-referencing purposes,\
    \ where <i> is any unambiguous \nidentification for the item (e.g. simply a number):\
    \ there are \nno other restrictions on its format and presentation.\nA completed\
    \ PICS proforma, including any Additional In\nformation and Exception Information,\
    \ is the Protocol Im\nplementation Conformance Statement for the implementa\n\
    tion in question.\nNOTE - Where an implementation is capable of being con\nfigured\
    \ in more than one way, a single PICS may be able to \ndescribe all such configurations.\
    \ However, the supplier has \nthe choice of providing more than one PICS, each\
    \ covering \nsome subset of the implementation's configuration capabili\nties,\
    \ in case this makes for easier and clearer presentation of \nthe information.\n\
    A.3.2 Additional Information\nItems of Additional Information allow a supplier\
    \ to provide \nfurther information intended to assist the interpretation of \n\
    the PICS. It is not intended or expected that a large quantity \nwill be supplied,\
    \ and a PICS can be considered complete \nwithout any such information. Examples\
    \ might be an out\nline of the ways in which a (single) implementation can be\
    \ \nset up to operate in a variety of environments and configu\nrations.\nReferences\
    \ to items of Additional information may be en\ntered next to any answer in the\
    \ questionnaire, and may be \nincluded in items of Exception Information.\nA.3.3\
    \ Exception Information\nIt may occasionally happen that a supplier will wish\
    \ to an\nswer an item with mandatory or prohibited status (after any \nconditions\
    \ have been applied) in a way that conflicts with \nthe indicated requirement.\
    \ No pre-printed answer will be \nfound in the Support column for this, but the\
    \ Supplier may \nwrite the desired answer into the Support column. If this is\
    \ \ndone, the supplier is required to provide an item of Excep\ntion Information\
    \ containing the appropriate rationale, and a \ncross-reference from the inserted\
    \ answer to the Exception \nitem.\nAn implementation for which an Exception item\
    \ is required \nin this way does not conform to ISO 10589.\nNOTE - A possible\
    \ reason for the situation described above \nis that a defect report is being\
    \ progressed, which is expected \nto change the requirement that is not met by\
    \ the implemen\ntation.\nA.3.4 Conditional Status\nA.3.4.1 Conditional items\n\
    The PICS proforma contains a number of conditional items. \nThese are items for\
    \ which the status  mandatory, optional \nor prohibited  that applies is dependent\
    \ upon whether or \nnot certain other items are supported, or upon the values\
    \ \nsupported for other items. In many cases, whether or not the \nitem applies\
    \ at all is conditional in this way, as well as the \nstatus when the item does\
    \ apply.\nIndividual conditional items are indicated by a conditional \nsymbol\
    \ in the Status column as described in A.3.4.2 below. \nWhere a group of items\
    \ are subject to the same condition \nfor applicability, a separate preliminary\
    \ question about the \ncondition appears at the head of the group, with an instruc\n\
    tion to skip to a later point in the questionnaire if the Not \nApplicable answer\
    \ is selected.\nA.3.4.2 Conditional symbols and conditions\nA conditional symbol\
    \ is of the form c.<n> or c.G<n> where \n<n> is a numeral. For the first form,\
    \ the numeral identifies \na condition appearing in a list at the end of the subclause\
    \ \ncontaining the item. For the second form, c.G<n>, the nu\nmeral identifies\
    \ a condition appearing in the list of global \nconditions at the end of the PICS.\n\
    A simple condition is of the form:if <p> then <s1> else <s2>\nwhere <p> is a predicate\
    \ (see A.3.4.3 below), and <s1> and \n<s2> are either basic status symbols (M,O,O.<n>,\
    \ or X) or \nthe symbol . An extended condition is of the formif <p1> then <s1>\
    \ else <s2>\nelse if <p2> then <s2>\n[else if <p3> ...]\nelse <sn>\nwhere <p1>\
    \ etc. are predicates and <s1> etc. are basic \nstatus symbols or .\nThe status\
    \ symbol applicable to an item governed by a sim\nple condition is <s1> if the\
    \ predicate of the condition is \ntrue, and <s2> otherwise; the status symbol\
    \ applicable to an \nitem governed by an extended condition is <si> where <pi>\
    \ \nis the first true predicate, if any, in the sequence <p1>, \n<p2>..., and\
    \ <sn> if no predicate is true.\nA.3.4.3 Predicates\nA simple predicate in a condition\
    \ is either\na)a single item reference; or\nb)a relation containing a comparison\
    \ operator (=, <, etc.) \nwith one (or both) of its operands being an item refer\n\
    ence for an item taking numerical values as its answer.\nIn case (a) the predicate\
    \ is true if the item referred to is \nmarked as supported, and false otherwise.\
    \ In case (b), the \npredicate is true if the relation holds when each item refer\n\
    ence is replaced by the value entered in the Support column \nas answer to the\
    \ item referred to.\nCompound predicates are boolean expressions constructed \n\
    by combining simple predicates using the boolean operators \nAND, OR and NOT,\
    \ and parentheses, in the usual way. A \ncompound predicate is true if and only\
    \ if the boolean ex\npression evaluates to true when the simple predicates are\
    \ in\nterpreted as described above.\nItems whose references are used in predicates\
    \ are indicated \nby an asterisk in the Item column.\nA.3.4.4 Answering conditional\
    \ items\nTo answer a conditional item, the predicate(s) of the condi\ntion is\
    \ (are) evaluated as described in A.3.4.3 above, and \nthe applicable status symbol\
    \ is determined as described in \nA.3.4.2. If the status symbol is  this indicates\
    \ that the \nitem is to be marked in this case; otherwise, the Support \ncolumn\
    \ is to be completed in the usual way.\nWhen two or more basic status symbols\
    \ appear in a condi\ntion for an item, the Support column for the item contains\
    \ \none line for each such symbol, labelled by the relevant sym\nbol. the answer\
    \ for the item is to be marked in the line la\nbelled by the symbol selected according\
    \ to the value of the \ncondition (unselected lines may be crossed out for added\
    \ \nclarity).\nFor example, in the item illustrated below, the N/A column \nwould\
    \ be marked if neither predicate were true; the answer \nline labelled M: would\
    \ be marked if item A4 was marked as supported,\nand the answer line labelled\
    \ O: would be marked if \nthe condition including items D1 and B52 applied.Item\n\
    References\nStatus\nN/A\nSupport\nH3\nIs ... supported?\n42.3(d)\nC.1\nM: Yes\
    \  \nO:  Yes    No \nC.1if A4 then M\nelse if D1 AND (B52 < 3) then O else \n\
    A.4 Identification\nA.4.1 Implementation IdentificationSupplierContact point for\n\
    queriesabout this PICSImplementation Name(s)and Version(s)Operating\nsystemName(s\
    \ and Version(s)Other Hardware and Operating\nSystemsClaimedSystem Name(s)(if\
    \ different)Notes:\na)Only the first three items are required for all implementations;\
    \ others may be \ncompleted as appropriate in meeting the requirements for full\
    \ identification.\nb)The terms Name and Version should be interpreted appropriately\
    \ to correspond \nwith a supplier's terminology (using, e.g., Type, Series, Model)\n\
    A.4.2 Protocol Summary: ISO 10589:19xxProtocol VersionAddenda\nImplemented(if\
    \ applicable)AmmendmentsImplementedDate of StatementHave\nany Exception items\
    \ been required (see A.3.3)?\tNo \tYes \n(The answer Yes means that the implementation\
    \ does not conform to ISO 10589)\nPICS Proforma: Item\nReferences\nStatus\nN/A\n\
    Support\nAllIS\nAre all basic ISIS routeing functions \nimplemented?\n12.1.2\n\
    M\nM: Yes  \nC.1if L2IS then O else \nC.2if 8208 then O else \nPartitionRe\npair\n\
    Is Level 1 Partition Repair imple\nmented?\n12.1.2.f\nC.1\nO:  Yes    No \nL1IS\n\
    Are Level 1 ISIS routeing functions \nimplemented?\n12.1.3\nM\nM: Yes  \nL2IS\n\
    Are Level 2 ISIS routeing functions \nimplemented?\n12.1.4\nO\nO:  Yes    No \n\
    PtPt\nAre point-to-point circuits imple\nmented?\n12.1.2.t\x01\nO.1\nO:  Yes \
    \   No \n8208\nAre ISO 8208  circuits implemented?\n12.1.2.u\nO.1\nO:  Yes   \
    \ No \nLAN\nAre broadcast  circuits implemented?\n12.1.2.v\nO.1\nO:  Yes    No\
    \ \nEqualCost\nPaths\nIs computation of equal minimum cost \npaths implemented?\n\
    7.2.6\nO\nO:  Yes    No \nDownstream\nIs computation of downstream routes \nimplemented?\n\
    7.2.6\nO\nO:  Yes    No \nDelayMetric\nIs path computation based on the delay\
    \ \nmetric implemented?\n7.2.2\nO\nO:  Yes    No \nExpenseMet\nric\nIs path computation\
    \ based on the Ex\npense metric implemented?\n7.2.2\nO\nO:  Yes    No \nPrefixes\n\
    Are Reachable Address Prefixes imple\nmented?\n12.1.2.j\x01\nC.1\nHow many ISO\
    \ 8473 PDUs can the im\nplementation forward per second?\n12.2.5.1.b\nM\n\t  \
    \         PDUs/sec            \nL2 ISCount\nHow many Level 2 ISs does the imple\n\
    mentation support?\n12.2.5.1.\x01\nC.1\nC.2\nO:  Yes    No \nL1 ISCount\nHow many\
    \ Level 1 ISs does the imple\nmentation support?\n12.2.5.1.\x01\nM\nN =      \
    \      \nReversePath\nCache\nIs the 8208 Reverse Path Cache sup\nported?\n\x01\
    12.1.2.u.4\nC.2\nO:  Yes    No \nErrorMetric\nIs path computation based on the\
    \ Error \nmetric implemented?\n7.2.2\nO\nO:  Yes    No \nISO 10589:19xx\nPICS\
    \ Proforma: Item\nReferences\nStatus\nN/A\nSupport\nC.1if L2IS then O else \n\
    C.2if 8208 then O else \n7.1.1\nM\nValues =            \nPDU Authen\ntication\n\
    Is PDU Authentication based on Pass\nwords implemented?\n12.1.2.z\nO\nO:  Yes\
    \    No \nISO 10589:19xx (continued)\nAnnex B \nSupporting Technical Material\n\
    (This annex is informative) \nB.1 Matching of Address Prefixes\nThe following\
    \ example shows how address prefixes may be \nmatched according to the rules defined\
    \ in 7.1.4.\nThe prefix \n\t37-123 \nmatches both the full NSAP addresses \n\t\
    37-1234::AF< and \n\t37-123::AF< \nwhich are encoded as\n\t3700000000001234AF<\
    \ and\n\t3700000000000123AF< \nrespectively.\nThis can be achieved by first converting\
    \ the address to be \ncompared to an internal decoded form (i.e. any padding,\
    \ as \nindicated by the particular AFI, is removed), which corre\nsponds to the\
    \ external representation of the address. The \nposition of the end of the IDP\
    \ must be marked, since it can \nno longer be deduced. This is done by inserting\
    \ the semi-\noctet F after the last semi-octet of the IDP. (There can be \nno\
    \ confusion, since the abstract syntax of the IDP is deci\nmal digits).\nThus\
    \ the examples above become in decoded form\n\t371234FAF< and \n\t37123FAF<\n\
    \ and the prefix 37-123 matches as a leading sub-string of \nboth of them.\nFor\
    \ comparison purposes the prefix is converted to the in\nternal decoded form as\
    \ above.\nB.2 Addressing and Routeing\nIn order to ensure the unambiguous identification\
    \ of Net\nwork and Transport entities across the entire OSIE, some \nform of address\
    \ administration is mandatory. ISO \n8348/Add.2 specifies a hierarchical structure\
    \ for network \naddresses, with a number of top-level domains responsible \nfor\
    \ administering addresses on a world-wide basis. These \naddress registration\
    \ authorities in turn delegate to sub-\nauthorities the task of administering\
    \ portions of the address \nspace. There is a natural tendency to repeat this\
    \ sub-\ndivision to a relatively fine level of granularity in order to \nease\
    \ the task of each sub-authority, and to assign responsi\nbility for addresses\
    \ to the most localised administrative \nbody feasible. This results in (at least\
    \ in theory) reduced \ncosts of address administration and reduced danger of mas\n\
    sive address duplication through administrative error. Fur\nthermore, political\
    \ factors come into play which require the \ncreation of sub-authorities in order\
    \ to give competing inter\nests the impression of hierarchical parity. For example\
    \ at \nthe top level of the ISO geographic address space, every \ncountry is assigned\
    \ an equally-sized portion of the address \nspace even though some countries are\
    \ small and might in \npractice never want to undertake administration of their\
    \ \nown addresses. Other examples abound at lower levels of \nthe hierarchy, where\
    \ divisions of a corporation each wish to \noperate as an independent address\
    \ assignment authority \neven though this is inefficient operationally and may\
    \ waste \nmonumental amounts of potential address space.\nIf network topologies\
    \ and traffic matrices aligned naturally \nwith the hierarchical organisation\
    \ of address administration \nauthorities, this profligate use of hierarchy would\
    \ pose little \nproblem, given the large size (20 octets) of the N-address \n\
    space. Unfortunately, this is not usually the case, especially \nat higher levels\
    \ of the hierarchy. Network topologies may \ncross address administration boundaries\
    \ in many cases, for \nexample:\n-Multi-national Corporations with a backbone\
    \ network \nthat spans several countries\n-Community-of-interest networks, such\
    \ as academic or \nresearch networks, which span organisations and ge\nographies\n\
    -Military networks, which follow treaty alignments \nrather than geographic or\
    \ national administrations\n-Corporate networks where divisions at times operate\
    \ \nas part of a contractor's network, such as with trade \nconsortia or government\
    \ procurements.\nThese kinds of networks also exhibit rich internal topolo\ngies\
    \ and large scale (105 systems), which require sophisti\ncated routeing technology\
    \ such as that provided by this In\nternational Standard. In order to deploy such\
    \ networks ef\nfectively, a considerable amount of address space must be \nleft\
    \ over for assignment in a way which produces efficient \nroutes without undue\
    \ consumption of memory and \nbandwidth for routeing overhead11This is just a\
    \ fancy way of saying\nthat hierarchical routing, with its natural effect on address\n\
    assignment, is a mandatory requirement for such net\nworks.\n.\nSimilarly important\
    \ is the inter-connection of these net\nworks via Inter-domain routeing technology.\
    \ If all of the as\nsignment flexibility of the addressing scheme is exhausted\
    \ \nin purely administrative hierarchy (at the high-order end of \nthe address)\
    \ and in Intra-Domain routeing assignment (at \nthe low end of the address) there\
    \ may be little or no address \nspace left to customise to the needs of inter-domain\
    \ routing. \nThe considerations for how addresses may be structured for \nthe\
    \ Intra- and Inter-domain cases are discussed in more de\ntail in the following\
    \ two clauses.\nB.2.1 Address Structure for Intra-domain \nRouteing\nThe IS-IS\
    \ Intra-domain routeing protocol uses a preferred \naddressing scheme. There are\
    \ a number of reasons the de\nsigners of this protocol chose to specify a single\
    \ address \nstructure, rather than leaving the matter entirely open to the \n\
    address assignment authorities and the routeing domain ad\nministrators:\na)If\
    \ one address structure is very common and known a \npriori, the forwarding functions\
    \ can be made much \nfaster;\nb)If part of the address is known to be assigned\
    \ locally \nto an end system, then the routeing can be simpler, use \nless memory,\
    \ and be potentially faster, by not having \nto discriminate based on that portion\
    \ of the address.\nc)If part of the address can be designated as globally \nunique\
    \ by itself (as opposed to only the entire address \nhaving this property) a number\
    \ of benefits accrue:\n1)Errors in address administration causing duplicate \n\
    addresses become much less likely\n2)Automatic and dynamic NSAP address assignment\
    \ \nbecomes feasible without global knowledge or \nsynchronisation\n3)Routeing\
    \ on this part of the address can be made \nsimple and fast, since no address\
    \ collisions will oc\ncur in the forwarding database.\nd)If a part of the address\
    \ can be reserved for assignment \npurely on the basis of topological efficiency\
    \ (as op\nposed to political or address administration ease), hier\narchical routeing\
    \ becomes much more memory and \nbandwidth efficient, since the addresses and\
    \ the topol\nogy are in close correspondence.\ne)If an upper bound can be placed\
    \ on the amount of ad\ndress space consumed by the Intra-domain routeing \nscheme,\
    \ then the use of address space by Inter-domain \nrouteing can be made correspondingly\
    \ more flexible.\nThe preferred address format of the Intra-domain ISIS \nprotocol\
    \ achieves these goals by being structured into two \nfixed-sized fields as follows\
    \ shown in figure 91#ID#81Used by level 1\nrouteingKey:Used by level 2 routeingID\n\
    SEL\nHO-DSP\nIDP\nIDP\tInitial Domain Part\nHO-DSP\tHigh Order Domain Specific\
    \ Part\nID\tSystem Identifier\nSEL\tNSAP Selector\nFigure 9 - Preferred Address\
    \ Format\n below:\nThe field marked IDP in the figure is precisely the IDP \n\
    specified in  ISO 8348/Add.2. The field marked HO-DSP \nis that portion of the\
    \ DSP from ISO 8348/Add.2 whose \nstructure, assignment, and meaning are not specified\
    \ or \nconstrained by the Intra-domain ISIS routeing protocol. \nHowever, the\
    \ design presumes that the routeing domain ad\nministrator has at least some flexibility\
    \ in assigning a por\ntion of the HO-DSP field. The purpose and usage of the \n\
    fields specified by the Intra-domain ISIS routeing protocol \nis explained in\
    \ the following paragraphs.\nB.2.1.1 The IDP + HO-DSP\nSince the Intra-domain\
    \ ISIS protocol is customised for op\neration with ISO 8473, all addresses are\
    \ specified to use the \npreferred binary encoding of ISO 8348/Add.2.\nB.2.1.2\
    \ The Selector (SEL) Field\nThe SEL field is intended for two purposes. Its main\
    \ use is \nto allow for multiple higher-layer entities in End systems \n(such\
    \ as multiple transport entities) for those systems which \nneed this capability.\
    \ This allows up to 256 NSAPs in a sin\ngle End system. The advantage of reserving\
    \ this field exclu\nsively for local system administration the Intra-domain \n\
    routing functions need not store routeing information about, \nnor even look at\
    \ this field. If each individual NSAP were \nrepresented explicitly in routing\
    \ tables, the size of these ta\nbles would grow with the number of NSAPs, rather\
    \ than \nwith the number of End systems. Since Intra-domain rout\ning routes to\
    \ systems, explicit recording of each NSAP \nbrings no efficiency benefit and\
    \ potentially consumes large \namounts of memory in the Intermediate systems.\n\
    A second use for the SEL field is in Intermediate systems. \nCertain ISIS functions\
    \ require that PDUs be encapsulated \nand sent to the Network Entity in an Intermediate\
    \ system \nrather than to an NSAP and upward to a Transport entity. \nAn example\
    \ of this is the Partition Repair function of this \nInternational Standard. In\
    \ order to use a level 2 path as if it \nwere a single subnetwork in a level 1\
    \ area, PDUs are encap\nsulated and addressed to an IS on the other side of the\
    \ parti\ntion11This is a gross oversimplification for the purpose of\nillustrating\
    \ the need for the SEL field. See 7.2.10.\n.  By reserving certain values of the\
    \ SEL field in Inter\nmediate systems for direct addressing of Intermediate sys\n\
    tem Network entities, the normal addressing and relaying \nfunctions of other\
    \ Intermediate systems can be transpar\nently used for such purposes.\nB.2.1.3\
    \ The Identifier (ID) Field\nThe ID field is a flat, large identifier space for\
    \ identifying \nOSI systems. The purpose of this field is to allow very fast,\
    \ \nsimple routeing to a large (but not unconstrained) number \nof End systems\
    \ in a routeing domain. The Intra-Domain IS\nIS protocol uses this field for routeing\
    \ within a area. While \nthis field is only required to be unambiguous within\
    \ a single \narea, if the values are chosen to be globally unambiguous \nthe Intra-domain\
    \ ISIS design can exploit this fact in the \nfollowing ways.\nFirst, a certain\
    \ amount of parallelism can be obtained dur\ning relaying. An IS can be simultaneously\
    \ processing the ID \nfield along with other fields (i.e. IDP, HO-DSP). If the\
    \ ID \nis found in the forwarding table, the IS can initiate forward\ning while\
    \ checking to make sure that the other fields have \nthe expected value. Conversely,\
    \ if the ID is not found the \nIS can assume that either the addressed NSAP is\
    \ unreach\nable or exists only in some other area or routeing domain. \nIn the\
    \ case where the ID is not globally unique, the for\nwarding table can indicate\
    \ this fact and relaying delayed \nuntil the entire address is analysed and the\
    \ route looked up.\nSecond, a considerable savings can be obtained in manual \n\
    address administration for all systems in the routeing do\nmain. If the ID is\
    \ chosen from the ISO 8802 48-bit address \nspace, the ID is known to be globally\
    \ unique. Furthermore, \nsince LAN systems conforming to ISO 8802 often have \n\
    their 48-bit MAC address stored in ROM locally, each sys\ntem can be guaranteed\
    \ to have a globally unambiguous \nNET and NSAP(s) without centralised address\
    \ administra\ntion at the area level.22Note, however, that the use of the ISO\
    \ 8802\naddresses does not avoid the necessity to run ISO 9542 or to maintain\n\
    tables mapping NSAP addresses to \nMAC (i.e. SNPA) addresses on the ISO 8802 subnetwork.\
    \ This is because\nthere is no guarantee that a particular MAC address is always\
    \ enabled (the LAN \ncontroller may be turned off) or that a system has only a\
    \ single MAC address.\n  This not only eliminates administra\ntive overhead, but\
    \ also drastically reduces the possibility of \nduplicate NSAP addresses, which\
    \ are illegal, difficult to di\nagnose, and often extremely difficult to isolate.\n\
    An alternative to a large, flat space for the lowest level of \nrouteing would\
    \ be to hierarchically subdivide this field to \nallow more levels of routeing\
    \ within a single routeing do\nmain. The designers of the Intra-domain ISIS protocol\
    \ \nconsidered that this would lead to an inferior routeing archi\ntecture, since:\n\
    a)The cost of memory in the ISs was sufficiently reason\nable that large (e.g.\
    \ 104 system) areas were quite fea\nsible, thus requiring at least 2 octets per\
    \ level to ad\ndress\nb)Two levels of routeing within a routeing domain were \n\
    sufficient (allowing domains of 106107 systems) be\ncause it was unlikely that\
    \ a single organisation would \nwish to operate and manage a routeing domain much\
    \ \nlarger than that.\nc)Administrative boundaries often become the dominant \n\
    concern once routeing domains reach a certain size.\nd)The additional burdens\
    \ and potential for error in man\nual address assignment were deemed serious enough\
    \ \nto permit the use of a large, flat space. \nB.3 Use of the HO-DSP field in\
    \ \nIntra-domain routeing\nUse of a portion of the HO-DSP field provides for hierar\n\
    chical routeing within a routeing domain. A value is as\nsigned to a set of ISs\
    \ in order to group the ISs into a single \narea for the usual benefits of hierarchical\
    \ routeing:\na)Limiting the size of routeing tables in the ISs;\nb)conserving\
    \ bandwidth by hierarchical summarisation \nof routeing information;\nc)designating\
    \ portions of the network which are to have \noptimal routeing within themselves;\
    \ and\nd)moderate firewalling of portions of the routeing do\nmain from failures\
    \ in other portions.\nIt is important to note that the assignment of HO-DSP val\n\
    ues is intended to provide the routeing domain administra\ntor with a mechanism\
    \ to optimise the routeing within a \nlarge routeing domain. The Intra-domain\
    \ ISIS designers \ndid not intend the HO-DSP to be entirely consumed by \nmany\
    \ levels of address registration authority. Reserving the \nassignment of a portion\
    \ of the HO-DSP field to the route\ning domain administrator also allows the administrator\
    \ to \nstart with a single assigned IDP+HO-DSP and run the \nrouting domain as\
    \ a single area. As the routeing domain \ngrows, the routeing domain administrator\
    \ can then add ar\neas without the need to go back to the address administra\n\
    tion authority for further assignments. Areas can be added \nand re-assigned within\
    \ the routeing domain without involv\ning the external address administration\
    \ authority.\nA useful field to reserve as part of the HO-DSP would be 2 \noctets,permitting\
    \ up to 65,536 areas in a routeing domain. \nThis is viewed as a reasonable compromise\
    \ between route\ning domain size and address space consumption. The field \nmay\
    \ be specified as flat for the same reasons that the ID \nfield may be flat.\n\
    B.3.1 Addressing considerations for \nInter-domain Routeing\nIt is in the Inter-domain\
    \ arena where the goals of routeing \nefficiency and administrative independence\
    \ collide most \nstrongly. Although the OSI Routeing Framework explicitly \ngives\
    \ priority in Inter-domain routeing to considerations of \nautonomy and firewalls\
    \ over efficiency, it must be feasible \nto construct an Inter-Domain topology\
    \ that both produces \nisolable domains and relays data at acceptable cost. Since\
    \ \nno routeing information is exchanged across domain \nboundaries with static\
    \ routeing, the practicality of a given \nInter-domain topology is essentially\
    \ determined by the size \nof the routeing tables that are present at the boundary\
    \ ISs. If \nthese tables become too large, the memory needed to store \nthem,\
    \ the processing needed to search them, and the \nbandwidth needed to transmit\
    \ them  within the routeing do\nmain all combine to disallow certain forms of\
    \ \ninterconnection.\nInter-domain routeing primarily computes routes to other\
    \ \nrouteing domains33This International Standard also uses static\nInter-domain\
    \ tables for routeing to individual End systems across\ndynamically assigned circuits,\
    \ and also to \nEnd systems whose addresses do not conform to the address construction\
    \ rules. \n. If there is no correspondence between \nthe address registration\
    \ hierarchy and the organisation of \nrouteing domains (and their interconnection)\
    \ then the task \nof static table maintenance quickly becomes a nightmare, \n\
    since each and every routeing domain in the OSIE would \nneed a table entry potentially\
    \ at every boundary IS of every \nother routeing domain. Luckily, there is some\
    \ reason to be\nlieve that a natural correspondence exists, since at least at\
    \ \nthe global level the address registration authorities fall \nwithin certain\
    \ topological regions. For example, most of the \nrouteing domains which obtained\
    \ their IDP+HO-DSP \nfrom a hierarchy of French authorities are likely to reside\
    \ in \nFrance and be more strongly connected with other routeing \ndomains in\
    \ France that with routeing domains in other \ncountries.\nThere are enough exceptions\
    \ to this rule, however, to be a \ncause for concern. The scenarios cited in B.2\
    \ all exist today \nand may be expected to remain common for the foreseeable \n\
    future. Consider as a practical case the High Energy Phys\nics Network (HEPnet),\
    \ which contains some 17000 End \nsystems, and an unknown number of intermediate\
    \ systems44The number of\nISs is hard to estimate since some ISs and links are\
    \ in fact shared\nwith other networks, such as the similarly organised NASA Space\
    \ \nPhysics network, or SPAN.\n. \nThis network operates as a single routeing\
    \ domain in order \nto provide a known set of services to a known community \n\
    of users, and is funded and cost-justified on this basis. This \nnetwork is international\
    \ in scope (at least 10 countries in \nNorth America, Europe, and the far east)\
    \ and yet its topol\nogy does not map well onto existing national boundaries.\
    \ \nConnectivity is richer between CERN and FERMIlab, for \nexample than between\
    \ many points within the U.S.\nMore importantly, this network has rich connectivity\
    \ with a \nnumber of other networks, including the PDNs of the vari\nous countries,\
    \ the NSFnet in the U.S., the international \nESnet (Energy Sciences Network),\
    \ the general research \nInternet, and military networks in the U.S. and elsewhere.\
    \ \nNone of these other networks shares a logical part of the \nNSAP address hierarchy\
    \ with HEPnet55It is conceivable that ISO would\nsanction such networks by assigning\
    \ a top-level IDI from the ISO\nnon-geographic AFI, but this is unlikely and would\
    \ \nonly exacerbate the problem if many such networks were assigned\ntop-level\
    \ registrations.\n .  If the only method \nof routing from the HEPnet to these\
    \ other networks was to \nplace each within one and only one of the existing registra\n\
    tion authorities, and to build static tables showing these re\nlationships, the\
    \ tables would clearly grow as O(n2). \nIt seems therefore, that some means must\
    \ be available to as\nsign addresses in a way that captures the Inter-Domain to\n\
    pology, and which co-exists cleanly with both the adminis\ntrative needs of the\
    \ registration authorities, and the algo\nrithms employed  by both the Intra-\
    \ and Inter-domain \nrouteing protocols. As alluded to in an earlier clause, it\
    \ \nseems prudent to leave some portion of the address space \n(most likely from\
    \ the HO-DSP part) sufficiently undefined \nand flexible that various Inter-domain\
    \ topologies may be \nefficiently constructed.\nAnnex C \nImplementation Guidelines\
    \ and Examples\n(This annex is informative) \nC.1  Routeing Databases\nEach database\
    \ contains records as defined in the following \nsub-clauses. The following datatypes\
    \ are defined.\nFROM CommonMgmt IMPORT NSAPAddress, \nAddressPrefix, BinaryAbsoluteTime;\
    \ \nPDU Type\nlspID = ARRAY [0..7] OF Octet; \nsystemID = ARRAY [0..5] OF Octet;\n\
    octetTimeStamp = BinaryAbsoluteTime;\nC.1.1 Level 1 Link State Database\nThis\
    \ database is kept by Level 1 and Level 2 Intermediate \nSystems, and consists\
    \ of the latest Level 1 Link State PDUs \nfrom each Intermediate System (or pseudonode)\
    \ in the area. \nThe Level 1 Link State PDU lists Level 1 links to the Inter\n\
    mediate System that originally generated the Link State \nPDU. \nRECORD \nadr:\
    \ lspID; \t(* 8 octet ID of LSP originator \n*)  \ntype: (Level1IntermediateSystem,\n\
    AttachedLevel2IntermediateSystem,\nUnattachedLevel2IntermediateSystem);  \nseqnum:\
    \ [0..SequenceModulus  1];  \nLSPage: [0..MaxAge]; \t(*Remaining Lifetime *) \
    \ \nexpirationTime: TimeStamp; \t\n(*Time at which LSP age \nbecame zero (see\
    \ 7.3.16.4). *)\nSRMflags: ARRAY[1..(maximumCircuits + \nmaximumVirtualAdjacencies)]\n\
    OF BOOLEAN;\n(*Indicates this LSP to be sent on this circuit. Note \nthat level\
    \ 2 Intermediate systems may send level 1 \nLSPs to other partitions (if any exist).\
    \ Only one level \n2 Intermediate system per partition does this. For \nlevel\
    \ 1 Intermediate Systems the array is just \nmaximumCircuits long. *)\nSSNflags:\
    \ ARRAY[1..maximumCircuits + \nmaximumVirtualAdjacencies] \nOF BOOLEAN; \n(*Indicates\
    \ that information about this LSP shall be \nincluded in the next partial sequence\
    \ number PDU \ntransmitted on this circuit. *) \nPOINTER TO LSP;\t(*The received\
    \ LSP *)\nEND;\nC.1.2 Level 2 Link State Database\nThis database is kept by Level\
    \ 2 Intermediate Systems, and \nconsists of the latest Level 2 Link State PDUs\
    \ from each \nLevel 2 Intermediate System (or pseudonode) in the do\nmain.  The\
    \ Level 2 Link State PDU lists Level 2 links to the \nIntermediate System that\
    \ originally generated the Link \nState PDU. \nRECORD  \nadr: lspID;  (* 8 octet\
    \ ID of LSP originator *)  \ntype: (AttachedLevel2IntermediateSystem,\nUnattachedLevel2IntermediateSystem);\
    \  \nseqnum: [0..SequenceModulus  1];  \nLSPage: [0..MaxAge];  (*Remaining Lifetime\
    \ *)  \nexpirationTime: TimeStamp;\t\n(*Time at which LSP age \nbecame zero (see\
    \ 7.3.16.4). *)\nSRMflags: ARRAY[1..(maximumCircuits)] OF \nBOOLEAN;\n(*Indicates\
    \ this LSP to be sent on this circuit. *)\nSSNflags: ARRAY[1..maximumCircuits]\
    \ OF \nBOOLEAN; \n(*Indicates that information about this LSP must be \nincluded\
    \ in the next partial sequence number PDU \ntransmitted on this circuit. *)\n\
    POINTER TO LSP; (*The received LSP *)\nEND;\nC.1.3 Adjacency Database\n This database\
    \ is kept by all systems. Its purpose is to keep \ntrack of neighbours.\nFor Intermediate\
    \ systems, the adjacency database comprises \na database with an entry for each:\n\
    -Adjacency on a Point to Point circuit. \n-Broadcast Intermediate System Adjacency.\
    \ (Note that \nboth a Level 1 and a Level 2 adjacency can exist be\n-Virtual Link\
    \ Adjacency.\nEach entry contains the parameters in Clause 11 for the Ad\njacency\
    \ managed object. It also contains the variable used \nto store the remaining\
    \ holding time for each Adjacency \nIDEntry and NETEntry entry, as defined below.\
    \ \nIDEntry =  RECORD\nID: systemID;\n(* The 6 octet System ID of a neighbour\
    \ End system \nextracted from the SOURCE ADDRESS field of its \nESH PDUs. *)\n\
    entryRemainingTime: Unsigned [1..65535]\n(* The remaining holding time in seconds\
    \ for this \nentry.  This value is not accessible to system \nmanagement. An implementation\
    \ may choose to \nimplement the timer rules without an explicit \nremainingTime\
    \ being maintained. For example by \nthe use of asynchronous timers. It is present\
    \ here in \norder to permit a consistent description of the timer \nrules. *)\n\
    END\nNETEntry =  RECORD\nNET: NetworkEntityTitle;\n(* The NET of a neighbour Intermediate\
    \ system \nas reported in its IIH PDUs. *)\nentryRemainingTime: Unsigned [1..65535]\n\
    \ (* The remaining holding time in seconds for this \nentry.  This value is not\
    \ accessible to system \nmanagement.  An implementation may choose to \nimplement\
    \ the timer rules without an explicit \nremainingTime being maintained.  For example\
    \ by \nthe use of asynchronous timers. It is present here in \norder to permit\
    \ a consistent description of the timer \nrules. *)\nEND;\nC.1.4 Circuit Database\n\
    This database is kept by all systems. Its purpose is to keep \ninformation about\
    \ a circuit. It comprises an AR\nRAY[1..maximumCircuits].\nEach entry contains\
    \ the parameters in Clause 11 for a Cir\ncuit managed object (see 11.3). It also\
    \ contains the remain\ningHelloTime (WordUnsigned [1..65535] seconds) vari\nable\
    \ for the Circuit. This variable not accessible to system \nmanagement. An implementation\
    \ may choose to implement \nthe timer rules without an explicit remainingHelloTime\
    \ \nbeing maintained. For example by the use of asynchronous \ntimers. It is present\
    \ here in order to permit a consistent de\nscription of the timer rules. Additionally,\
    \ for Circuits of \ntype  X.25 Static Outgoing or X.25 DA, it contains the \n\
    recallCount (Unsigned[0..255]) variable for the Circuit. \nThis variable is not\
    \ accessible to system management. It \nused to keep track of recall attempts.\
    \ \nC.1.5 Level 1 Shortest Paths Database \nThis database is kept by Level 1 and\
    \ Level 2 Intermediate \nSystems (unless each circuit is Level 2 Only).  It is\
    \ com\nputed by the Level 1 Decision Process, using the Level 1 \nLink State Database.\
    \ The Level 1 Forwarding Database is a \nsubset of this database. \nRECORD\nadr:\
    \ systemId; (*6 octet ID of destination system *)\n(*Pointer to adjacency for\
    \ forwarding to system adr \n*)\nEND;\nC.1.6 Level 2 Shortest Paths Database \n\
    This database is kept by Level 2 Intermediate Systems. It is \ncomputed by the\
    \ Level 2 Decision Process, using the \nLevel 2 Link State Database. The Level\
    \ 2 Forwarding Data\nbase is a subset of this database. \nRECORD \nadr: AddressPrefix;\t\
    (*destination prefix *)\n(*Pointer to adjacency for forwarding to prefix adr \n\
    *)\nEND;\nC.1.7 Level 1 Forwarding Database \nThis database is kept by Level 1\
    \ and Level 2 Intermediate \nSystems (unless each circuit is Level 2 Only).  It\
    \ is used \nto determine where to forward a data NPDU with destina\ntion within\
    \ this system's area. It is also used to determine \nhow to reach a Level 2 Intermediate\
    \ System within the area, \nfor data PDUs with destinations outside this system's\
    \ area.\nRECORD  \nadr:systemId;\n(*6 octet ID of destination system. Destination\
    \ \n(*Pointer to adjacency for forwarding to destination \nsystem *)\nEND;\nC.1.8\
    \ Level 2 Forwarding Database\nThis database is kept by Level 2 Intermediate systems.\
    \ It is \nused to determine where to forward a data NPDU with des\ntination outside\
    \ this system's area.\nRECORD  \n(*Pointer to adjacency for forwarding to destination\
    \ \narea. *)\nEND;\nC.2 SPF Algorithm for Computing \nEqual Cost Paths\nAn algorithm\
    \ invented by Dijkstra (see references) known \nas shortest path first (SPF),\
    \ is used as the basis for the \nroute calculation. It has a computational complexity\
    \ of the \nsquare of the number of nodes, which can be decreased to \nthe number\
    \ of links in the domain times the log of the num\nber of nodes for sparse networks\
    \ (networks which are not \nhighly connected). \nA number of additional optimisations\
    \ are possible: \na)If the routeing metric is defined over a small finite \nfield\
    \ (as in this International Standard), the factor of \nlog n may be removed by\
    \ using data structures which \nmaintain a separate list of systems for each value\
    \ of \nthe metric rather than sorting the systems by logical \ndistance. \nb)Updates\
    \ can be performed incrementally without re\nquiring a complete recalculation.\
    \ However, a full up\ndate must be done periodically to recover from data \ncorruption,\
    \ and studies suggest that with a very small \nnumber of link changes (perhaps\
    \ 2) the expected com\nputation complexity of the incremental update exceeds \n\
    the complete recalculation. Thus, this International \nStandard specifies the\
    \ algorithm only for the full up\ndate. \nc)If only End system LSP information\
    \ has changed, it is \nnot necessary to re-compute the entire Dijkstra tree for\
    \ \nthe IS. If the proper data structures exist, End Systems \nmay be attached\
    \ and detached as leaves of the tree and \ntheir forwarding information base entries\
    \ altered as \nappropriate\nThe original SPF algorithm does not support load splitting\
    \ \nover multiple paths. The algorithm in this International \nStandard does permit\
    \ load splitting by identifying a set of \nequal cost paths to each destination\
    \ rather than a single \nculation. It is stored as a set of triples of the form\
    \ \naN,d(N),{Adj(N)}q, where:\n\tN is a system Identifier. In the level 1 algorithm,\
    \ N is \na 7 octet ID. For a non-pseudonode it is the 6 octet \nsystem ID, with\
    \ a 0 appended octet.  For a \npseudonode it is a true 7 octet quantity, comprised\
    \ of \nthe 6 octet Designated Intermediate System ID and \nthe extra octet assigned\
    \ by the Designated Interme\ndiate System.  In the level 2 algorithm it is either\
    \ a \n7 octet Intermediate System or pseudonode ID (as in \nthe level 1 algorithm),\
    \ or it is a variable length ad\ndress prefix (which will always be a leaf, i.e.\
    \ End \nsystem, in PATHS).\n\td(N) is N's distance from S (i.e. the total metric\
    \ \nvalue from N to S). \n{Adj(N)} is a set of valid adjacencies that S may use\
    \ \nfor forwarding to N.\n\tWhen a system is placed on PATHS, the path(s) \ndesignated\
    \ by its position in the graph is guaranteed \nto be a shortest path.\nTENT  This\
    \ is a list of triples of the form \naN,d(N),{Adj(N)}q, where N, d(N) and {Adj(N)}\
    \ are \nas defined above for PATHS.\n\tTENT can intuitively be thought of as a\
    \ tentative \nplacement of a system in PATHS. In other words, \nthe triple aN,x,{A}q\
    \ in TENT means that if N were \nplaced in PATHS, d(N) would be x, but N cannot\
    \ be \nplaced on PATHS until it is guaranteed that no path \nshorter than x exists.\n\
    \tThe triple aN,x,{A,B}q in TENT means that if N \nwere placed in PATHS, d(N)\
    \ would be x via either \nadjacency A or B\nNOTE - As described above, (see 7.2.6),\
    \ it is suggested that \nthe implementation keep the database TENT as a set of\
    \ lists \nof triples of the form a*,Dist,*q, for each possible distance \nDist.\
    \  In addition it is necessary to be able to process those \nsystems which are\
    \ pseudonodes before any non-\npseudonodes at the same distance Dist.\nC.2.2 Use\
    \ of Metrics in the SPF Calculation\nInternal metrics are not comparable to external\
    \ metrics. \nTherefore, the cost of the path from N to S for external \nroutes\
    \ (routes to destinations outside of the routing domain) \nmay include both internal\
    \ and external metrics. The cost of \nthe path from N to S (called d(N) below\
    \ in database \nPATHS) may therefore be maintained as a two-\ndimensioned vector\
    \ quantity (specifying internal and exter\nnal metric values). In incrementing\
    \ d(N) by 1, if the internal \nmetric value is less than the maximum value \n\
    MaxPathMetric, then the internal metric value is incre\nmented by one and the\
    \ external metric value left un\nchanged; if the internal metric value is equal\
    \ to the maxi\nmum value MaxPathMetric, then the internal metric value \nis set\
    \ to 0 and the external metric value is incremented by 1. \nNote that this can\
    \ be implemented in a straightforward \nmanner by maintaining the external metric\
    \ as the high order \nbits of the distance.\nNOTE - In the code of the algorithm\
    \ below, the current path \nlength is held in a variable tentlength. This variable\
    \ is a \ntwo-dimensional quantity tentlength=(internal,external) \nand is used\
    \ for comparing the current path length with d(N) \nas described above.\nC.2.3\
    \ Overview of the Algorithm\nThe basic algorithm, which builds PATHS from scratch,\
    \ \nstarts out by putting the system doing the computation on \nPATHS (no shorter\
    \ path to SELF can possibly exist).  \nTENT is then pre-loaded from the local\
    \ adjacency data\nbase.\nNote that a system is not placed in PATHS unless no \n\
    shorter path to that system exists. When a system N is \nplaced in PATHS, the\
    \ path to each neighbour M of N, \nthrough N, is examined, as the path to N plus\
    \ the link from \nN to M. If aM,*,*q is in PATHS, this new path will be \nlonger,\
    \ and thus ignored.\nIf aM,*,*q is in TENT, and the new path is shorter, the old\
    \ \nentry is removed from TENT and the new path is placed in \nTENT. If the new\
    \ path is the same length as the one in \nTENT, then the set of potential adjacencies\
    \ {adj(M)}  is set \nto the union of the old set (in TENT) and the new set \n\
    {adj(N)}. If M is not in TENT, then the path is added to \nTENT.\nNext the algorithm\
    \ finds the triple aN,x,{Adj(N)}q in \nTENT, with minimal x. \nNOTE - This is\
    \ done efficiently because of the optimisation \ndescribed above. When the list\
    \ of triples for distance Dist is \nexhausted, the algorithm then increments Dist\
    \ until it finds a \nlist with a triple of the form a*,Dist,*q. \nN is placed\
    \ in PATHS. We know that no path to N can be \nshorter than x at this point because\
    \ all paths through sys\ntems already in PATHS have already been considered, and\
    \ \npaths through systems in TENT will have to be greater than \nx because x is\
    \ minimal in TENT.\nWhen TENT is empty, PATHS is complete.\nC.2.4 The Algorithm\n\
    The Decison Process Algorithm must be run once for each \nsupported routeing metric.\
    \  A Level 1 Intermediate System \nruns the algorithm using the Level 1 LSP database\
    \ to com\npute Level 1 paths.  In addition a Level 2 Intermediate Sys\ntem runs\
    \ the algorithm using the Level 2 LSP database to \ncompute Level 2 paths.\nIf\
    \ this system is a Level 2 Intermediate System which sup\nports the partition\
    \ repair optional function the Decision \nnated Level 2 Intermediate System for\
    \ the partition.  The \nPartition Designated Level 2 Intermediate System will\
    \ de\ntermine if the area is partitioned and will create virtual \nLevel 1 links\
    \ to the other Partition Designated Level 2 In\ntermediate Systems in the area\
    \ in order to repair the Level 1 \npartition.  This is further described in 7.2.10.\
    \ \nStep 0:  Initialise TENT and PATHS to empty.  Initialise \ntentlength to (0,0).\n\
    (tentlength is the pathlength of elements in TENT \nwe are examining.)\na)Add\
    \ aSELF, 0, Wq to PATHS, where W is a special \nvalue indicating traffic to SELF\
    \ is passed up to Trans\nport (rather than forwarded).\nb)Now pre-load TENT with\
    \ the local adjacency data\nbase. (Each entry made to TENT must be marked as \n\
    being either an End system or an Intermediate System \nto enable the check at\
    \ the end of Step 2 to be made \ncorrectly.) For each adjacency Adj(N), (including\
    \ \nManual Adjacencies, or for Level 2 enabled Reach\nable Addresses) on enabled\
    \ circuits, to system N of \nSELF in state Up, compute \nd(N) = cost of the parent\
    \ circuit of the adjacency \n(N), obtained from metrick, where k = one of de\n\
    fault metric, delay metric, monetary metric, er\nror metric.\nAdj(N) =  the adjacency\
    \ number of the adjacency \nto N\nc)If a triple aN,x,{Adj(M)}q is in TENT,  then:\n\
    e)If x < d(N), do nothing.\nf)If x > d(N),  remove aN,x,{Adj(M)}q from TENT and\
    \ \nadd  the triple aN,d(N),Adj(N)q.\ng)If no triple aN, x,{Adj(M)}q is in TENT,\
    \ then add aN, \nd(N),Adj(N)q to TENT. \nh)Now add any systems to which the local\
    \ Intermediate \nsystem does not have adjacencies, but which are men\ntioned in\
    \ neighbouring pseudonode LSPs. The adja\ncency for such systems is set to that\
    \ of the Designated \nIntermediate System.\ni)For all broadcast circuits in state\
    \ On, find the LSP \nwith LSP number zero and with the first  7 octets of \nLSPID\
    \ equal to the LnCircuitID for that circuit (i.e. \npseudonode LSP for that circuit).\
    \ If it is present, for \nall the neighbours N reported in all the LSPs of this\
    \ \npseudonode which do not exist in TENT add an entry \naN,d(N),Adj(N)q to TENT,\
    \ where\nd(N) = metrick of the circuit.\nAdj(N) = the adjacency number of the\
    \ adjacency to the \nDR.\nj)Go to Step 2.\nStep 1: Examine the zeroth Link State\
    \ PDU of P, the sys\ntem just placed on PATHS (i.e. the Link State PDU with \n\
    the same first 7 octets of LSPID as P, and LSP number \nzero). \na)If this LSP\
    \ is present, and the LSP Database Over\nload bit is clear, then for each LSP\
    \ of P (i.e. all the \nLink State PDUs with the same first 7 octets of LSPID \n\
    as P, irrespective of the value of LSP number) com\npute \ndist(P,N) = d(P) +\
    \ metrick(P,N).\nfor each neighbour N (both Intermediate System and \nEnd system)\
    \ of the system P. If the LSP Database \nOverload bit is set, only consider the\
    \ End system \nneighbours of the system P. d(P) is the second ele\nment of the\
    \ triple \naP,d(P),{Adj(P)q\nand metrick(P,N) is the cost of the link from P to\
    \ N as \nreported in P's Link State PDU\nb)If dist(P,N) > MaxPathMetric, then\
    \ do nothing.\nc)If aN,d(N),{Adj(N)}q is in  PATHS, then do nothing.\nNOTE  d(N)\
    \ must be less than dist(P,N), or else N \nwould not have been put into PATHS.\
    \ An additional san\nity check may be done here to ensure d(N) is in fact less\
    \ \nthan dist(P,N).\nd)If a triple aN,x,{Adj(N)}q is in TENT,  then:\n1)If x =\
    \ dist(P,N), then Adj(N) , {Adj(N)} H \n3)If x < dist(P,N), do nothing.\n4)If\
    \ x > dist(P,N),  remove aN,x,{Adj(N)}q from \nTENT and add  aN,dist(P,N),{Adj(P)}q.\n\
    e)If no triple aN, x,{Adj(N)}q is in TENT, then add aN, \ndist(P,N),{P}q to TENT.\n\
    Step 2: If TENT is empty, stop, else:\na)Find the element aP,x,{Adj(P)}q,  with\
    \ minimal x as \nfollows:\n1)If an element a*,tentlength,*q remains in TENT  \n\
    in the list for tentlength, choose that element. If \nthere are  more than one\
    \ elements in the list for \ntentlength, choose one of  the elements (if any)\
    \ \nfor a system which is a pseudonode in preference  \nto one for a non-pseudonode.\
    \ If there are no more \nelements in the list  for tentlength increment ten\n\
    tlength and repeat  Step 2. \n2)Remove aP,tentlength,{Adj(P)}q from TENT.\n3)Add\
    \ aP,d(P),{Adj(P)}q  to PATHS.\n4)If this is the Level 2 Decision Process running,\
    \ and \nthe system just added to PATHS listed itself as \nPartition Designated\
    \ Level 2 Intermediate system, \nthen additionally add aAREA.P, d(P), {adj(P)}q\
    \ to \nPATHS, where AREA.P is the Network Entity \nTitle of the other end of the\
    \ Virtual Link, obtained \nby taking the first AREA listed in P's Level 2 LSP\
    \ \nand appending P's ID.\n5)If the system just added to PATHS was an End \nsystem,\
    \ go to Step 2, Else go to Step 1.\nNOTE - In the Level 2 context, the End systems\
    \ are the \nset of Reachable Address Prefixes and the set of area ad\ndresses\
    \ with zero cost. \nC.3 Forwarding Process\nC.3.1 Example pseudo-code for the\
    \ forwarding \nprocedure described in 7.4.3\nThis procedure chooses, from the\
    \ Level 1 forwarding data\nbase  if level is level1, or from the Level 2 forwarding\
    \ \ndatabase  if level is level2, an adjacency on which to for\nward PDUs for\
    \ destination dest. A pointer to the adjacency \nis returned in adj, and the procedure\
    \ returns the value \nTrue. If no suitable adjacency exists the procedure returns\
    \ \nthe value False, in which case a call should be made to \nDrop(Destination\
    \ Address Unreachable, octetNumber).\nIf queue length values are available to\
    \ the forwarding proc\ness, the minimal queue length of all candidate circuits\
    \ is \nchosen, otherwise, they are used in round robin fashion.\nPROCEDURE Forward(\n\
    level: (level1, level2),  \ndest: NetworkLayerAddress, \nVAR adj: POINTER TO adjacency)\
    \ : \nBOOLEAN\nVAR  \nadjArray: ARRAY OF \nForwardingDatabaseRecords; \ntemp,\
    \ index, minQueue: CARDINAL; \nBEGIN \n(*Set adjArray to appropriate database}\
    \ *) \nIF level = level1 THEN \nadjArray := level1ForwardingDatabase \nELSE \n\
    adjArray := level2ForwardingDatabase \nEND;\n (*Perform appropriate hashing function\
    \ to obtain an \nindex into the database *)\n IF Hash(level, dest, index) THEN\
    \ \nIF adjArray[index].splits > 0 THEN\n(*Find minimum queue size for all equal\
    \ cost \npaths *)\nminQueue := MaxUnsigned;\ntemp := adjArray[index].lastChosen\
    \ + 1; \t\n(*start off after last time *)\nFOR i := 1 TO adjArray[index].splits\
    \ DO\n(*for all equal cost paths to dest *)\nIF temp > adjArray[index].splits\
    \ THEN\n(*after end of valid entries, wrap to first \n*)\ntemp := 1\nELSE\ntemp\
    \ := temp + 1\nEND;\nIF \nQueueSize(adjArray[index].nextHop[temp]) \n< minQueue\
    \ THEN\nminQueue := \nQueueSize(adjArray[index].nextHop[tem\np]);\nadj := adjArray[index].nextHop[temp];\n\
    adjArray[index].lastChosen := temp;\nEND;\nForward := true\nEND;\nELSE\nForward\
    \ := false (*There must be at least one \nvalid output adjacency *)\nEND\nELSE\
    \ \nForward := false (*Hash returned destination \nunknown *)\nEND \nEND forward;\
    \ \nAnnex D \nCongestion Control and Avoidance\n(This annex is informative) \n\
    D.1 Congestion Control\nThe transmit management subroutine handles congestion\
    \ \ncontrol. Transmit management consists of the following \ncomponents:\nSquare\
    \ root limiter. Reduces buffer occupancy \ntime per PDU by using a square root\
    \ limiter algo\nrithm. The square root limiter also queues PDUs for \nan output\
    \ circuit, and prevents buffer deadlock by \ndiscarding PDUs when the buffer pool\
    \ is exhausted. \nClause D.1.1 specifies the Square Root Limiter \nProcess. \n\
    Originating PDU limiter. Limits originating NPDU \ntraffic when necessary to ensure\
    \ that transit NPDUs \nare not rejected. An originating NPDU is an NPDU \nresulting\
    \ from an NSDU from the Transport at this \nES. A transit NPDU is an NPDU from\
    \ another sys\ntem to be relayed to another destination ES.\nFlusher. Flushes\
    \ PDUs queued for an adjacency that \nhas gone down.\nInformation for higher layer\
    \ (Transport) congestion control \nprocedures is provided by the setting of the\
    \ congestion ex\nperienced bit in the forwarded data NPDUs.\nD.1.1 Square Root\
    \ Limiter\nThe square root limiter discards a data NPDU by calling the \nISO 8473\
    \ discard PDU function with the reason  PDU \nDiscarded due to Congestion when\
    \ the number of data \nNPDUs on the circuit output queue exceeds the discard \n\
    threshold, Ud.  Ud is given as follows:=\nwhere:\nNb = Number of Routeing Layer\
    \ buffers \n(maximumBuffers) for all output circuits.\nNc = Number of active output\
    \ circuits (i.e. Circuits in state \nOn).\nThe output queue is a queue of buffers\
    \ containing data \nNPDUs which have been output to that circuit by the for\n\
    warding process, and which have not yet been transmitted \nby the circuit. It\
    \ does not include NPDUs which are held \nby the data link layer for the purpose\
    \ of retransmission.\nWhere a data NPDU is to be fragmented by this Intermedi\n\
    ate system over this circuit, each fragment shall occupy a \nseparate buffer and\
    \ shall be counted as such in the queue \nlength. If the addition of all the buffers\
    \ required for the \nfragmentation of a single input data NPDU would cause the\
    \ \ndiscard threshold for that queue to be exceeded, it is recom\nmended that\
    \ all those fragments (including those which \ncould be added without causing\
    \ the threshold to be ex\nceeded) be discarded. \nD.1.2 Originating PDU Limiter\n\
    TEMPORARY NOTE - Strictly this function is an End Sys\ntem function. However it\
    \ is closely coupled to the routeing \nfunction, particularly in the case of real\
    \ systems which are \nperforming the functions of both an Intermediate System\
    \ \nand an End System (i.e. systems which can both initiate and \nterminate data\
    \ NPDUs and perform relaying functions). \nTherefore, until a more appropriate\
    \ location for this infor\nmation can be determined, this function is described\
    \ here. \nThe originating PDU limiter first distinguishes between \noriginating\
    \ NPDUs and transit NPDUs. It then imposes a \nlimit on the number of buffers\
    \ that originating NPDUs can \noccupy on a per circuit basis. In times of heavy\
    \ load, origi\nnating NPDUs may be rejected while transit NPDUs con\ntinue to\
    \ be routed. This is done because originating NPDUs \nhave a relatively short\
    \ wait, whereas transit NPDUs, if re\njected, have a long wait  a transport retransmission\
    \ period. \nThe originating PDU limiter accepts as input:\n-An NSDU received from\
    \ Transport Layer \n-A transmit complete signal from the circuit for an ISO \n\
    8473 Data PDU.\nThe originating PDU limiter produces the following as out\nput:\n\
    -PDU accepted \n-PDU rejected \n-Modifications to originating PDU counter\nThere\
    \ is a counter, N, and an originating PDU limit, \noriginatingQueueLimit, for\
    \ each active output circuit. \nEach N is initialised to 0. The originatingQueueLimit\
    \ is \nset by management to the number of buffers necessary to \nprevent the circuit\
    \ from idling. \nD.1.3 Flusher\nThe flusher ensures that no NPDU is queued on\
    \ a circuit \nwhose state is not ON, or on a non-existent adjacency, or \none\
    \ whose state is not  Up. \nD.2 Congestion Avoidance\nD.2.1 Buffer Management\n\
    The Forwarding Process supplies and manages the buffers \nnecessary for relaying.\
    \ PDUs shall be discarded if buffer \nthresholds are exceeded. If the average\
    \ queue length on the \ninput circuit or the forwarding processor or the output\
    \ cir\ncuit exceeds QueueThreshold, the congestion experi\nenced bit shall be\
    \ set in the QoS maintenance option of the \nforwarded data PDU (provided the\
    \ QoS maintenance option \nis present). \nSecurity Considerations\n  Security\
    \ issues are not discussed in this memo.\nAuthor's Address\n   David R. Oran\n\
    \   Digital Equipment Corporation\n   LKG 1-2/a 19\n   550 King Street\n   Littleton,\
    \ MA 01460\n"
