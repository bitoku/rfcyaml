Abstract Domain Name Registries (DNRs) may operate in special modes for certain periods of time, enabling trademark holders to protect their rights during the introduction of a Top Level Domain (TLD).
One of those special modes of operation is the Sunrise Period.
The Sunrise Period allows trademark holders an advance opportunity to register domain names corresponding to their trademarks before names are generally available to the public.
This document describes the format of a mark and a digitally signed mark used by trademark holders for registering domain names during the Sunrise Period of generic Top Level Domains (gTLDs).
Three types of Mark objects are defined in this specification: registered trademarks, court validated marks, and marks protected by statue or treaty.
Introduction Domain Name Registries (DNRs) may operate in special modes for certain periods of time enabling trademark holders to protect their rights during the introduction of a Top Level Domain (TLD).
One of those special modes of operation is the Sunrise Period.
The Sunrise Period allows trademark holders an advance opportunity to register domain names corresponding to their trademarks before names are generally available to the public.
This specification was defined as part of the development of the ICANN Trademark Clearinghouse (TMCH).
The ICANN TMCH is a global repository for trademark data used by DNRs, registrars, and trademark holders during the registration process of domain names.
This document describes a mapping of the common elements found in trademark data.
A digitally signed mark format is defined in order to support digital signatures on the mark.
Finally, a mapping for encoding the signed mark document is defined.
Three types of Mark objects are defined in this specification: registered trademarks, court validated marks, and marks protected by statue or treaty.
This specification is intended to be used in the gTLD space, but nothing precludes the use of this format by other entities.
The detailed policy regarding the public key infrastructure (PKI), authorized validators, and other requirements must be defined based on the local policy of the entities using this specification.
In the case of gTLDs, the detailed policy regarding the use of this specification is defined in the Rights Protection Mechanism Requirements document (see [ICANN TMCH]), and the PKI is defined in [TMCH].
Implementations will need to implement such a PKI (or an equivalent) in order for the signatures defined in this document to have any useful semantics.
The objects specified in this document can be referenced by application protocols like the Extensible Provisioning Protocol (EPP), defined in [RFC5730].
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119
XML (EXtensible Markup Language) is case sensitive.
Unless stated otherwise, XML specifications and examples provided in this document MUST be interpreted in the character case presented in order to develop a conforming implementation. "
signedMark 1.0" is used as an abbreviation for "urn:ietf:params:xml:ns:
The XML namespace prefix "smd" is used, but implementations MUST NOT depend on it and instead employ a proper namespace aware XML parser and serializer to interpret and output the XML documents.
mark 1.0" is used as an abbreviation for "urn:ietf:params:xml:
The XML namespace prefix "mark" is used, but implementations MUST NOT depend on it and instead employ a proper namespace aware XML parser and serializer to interpret and output the XML documents.
This section defines the Mark and Signed Mark objects.
Empty complex element types and abstract elements are defined to support additional definitions using XML schema substitution groups.
Support for replacement through the XML schema substitution groups is included in the description of the objects.
This section defines some elements as OPTIONAL.
If an element is not defined as OPTIONAL, then it MUST be included in the object.
The following elements are defined as telephone numbers: <mark:voice>,
The representation of telephone numbers in this specification is derived from structures defined in [ITU.E164.2005].
An optional "x" attribute is provided to note telephone extension information.
The following elements are defined as email addresses: <mark:email> and <smd:email
Email address syntax is defined in [RFC5322].
Holder and Contact Objects Marks are linked to Holder objects and optionally linked to Contact objects.
This section defines the <mark:holder> and <mark:contact> objects.
> element that contains the name of the individual holder of the mark.
At least one of <mark:name> and <mark:org
> MUST be specified, and <mark:
name> is OPTIONAL if <mark:org> is specified.
> element that contains the name of the organization holder of the mark.
At least one of <mark:name> and <mark:org
> MUST be specified, and <mark:org> is OPTIONAL if <mark:name> is specified.
A <mark:addr> element that contains the address information of the holder of a mark.
A <mark:city> element that contains the holder's city.
> element that contains the holder's state or province.
> element that contains the holder's postal code.
> element that contains the holder's country code.
This is a two character code from [ISO3166 2].
An OPTIONAL <mark:voice> element that contains the holder's voice telephone number.
An OPTIONAL <mark:fax> element that contains the holder's facsimile telephone number.
An OPTIONAL <mark:email> element that contains the email address of the holder.
> element that contains the name of the responsible person.
> element that contains the name of the organization of the contact.
A <mark:addr> element that contains the address information of the contact.
A <mark:city> element that contains the contact's city.
> element that contains the contact's state or province.
> element that contains the contact's postal code.
> element that contains the contact's country code.
This is a two character code from [ISO3166 2].
A <mark:voice> element that contains the contact's voice telephone number.
An OPTIONAL <mark:fax> element that contains the contact's facsimile telephone number.
A <mark:email> element that contains the contact's email address.
> element that describes an applicant's prior right to a given domain name.
A <mark:mark> element substitutes for the <mark:
abstractMark> abstract element to define a concrete definition of a mark.
> element can be replaced by other mark definitions using the XML schema substitution groups feature.
The child elements of the <mark:mark
> element include: One or more <mark:trademark>, <mark:treatyOrStatute>, and <mark:court> elements that contain the detailed information of marks.
that uniquely identifies a mark in relation to a repository of marks potentially maintained by more than one issuer.
> element that contains the mark text string.
One or more <mark:holder> elements that contain the information of the holder of the mark.
An "entitlement" attribute is used to identify the entitlement of the holder; possible values are "owner", "assignee", and "licensee".
Zero or more OPTIONAL <mark:contact> elements that contain the information of the representative of the mark registration.
A "type" attribute is used to identify the type of contact; possible values are "owner", "agent", or "thirdparty".
A <mark:jurisdiction> element that contains the two character code of the jurisdiction where the trademark was registered.
This is a two character code from [WIPO.ST3].
OPTIONAL <mark:class> elements that contain the World Intellectual Property Organization (WIPO)
Nice Classification class numbers of the mark as defined in the WIPO
Zero or more OPTIONAL <mark:label> elements that contain the A label form (as defined in [RFC5890]) of the label that corresponds to the <mark:
> element that contains the full description of the goods and services from the document certifying the registration of the mark.
> element that contains the trademark application ID registered in the trademark office.
An OPTIONAL <mark:apDate> element that contains the date the trademark was applied for.
A <mark:regNum> element that contains the trademark registration number registered in the trademark office.
> element that contains the date the trademark was registered.
exDate> element that contains the expiration date of the trademark.
treatyOrStatute> element that contains the following child elements:
A <mark:id> element; see definition in the <mark:
A <mark:markName> element; see definition in the <mark:
holder> elements; see definition in the <mark:trademark> section above.
Zero or more OPTIONAL <mark:contact> elements; see definition in the <mark:
One or more <mark:protection> elements that contain the countries and region of the country where the mark is protected.
> element that contains the two character code of the country in which the mark is protected.
This is a two  character code from [ISO3166 2].
An OPTIONAL <mark:region> element that contains the name of a city, state, province, or other geographic region of <mark:country> in which the mark is protected.
Zero or more OPTIONAL <mark:
ruling> elements that contain the two character code of the national territory in which the statute or treaty is applicable.
This is a two  character code from [ISO3166 2].
Zero or more OPTIONAL <mark:label> elements; see definition in the <mark:trademark> section above.
; see definition in the <mark:trademark> section above.
A <mark:refNum> element that contains the serial number of the mark.
> element that contains the date of protection of the mark.
A <mark:title> element that contains the title of the treaty or statute.
> element that contains the execution date of the treaty or statute.
A <mark:markName> element; see definition in the <mark:
holder> elements; see definition in the <mark:trademark> section above.
Zero or more OPTIONAL <mark:contact> elements; see definition in the <mark:
Zero or more OPTIONAL <mark:label> elements; see definition in the <mark:trademark> section above.
; see definition in the <mark:trademark> section above.
A <mark:refNum> element that contains the reference number of the court's opinion.
> element that contains the date of protection of the mark.
> element that contains the two character code of the country where the court is located.
This is a two character code from [ISO3166 2].
OPTIONAL <mark:region> elements that contain the name of a city, state, province, or other geographic region of <mark:cc> in which the mark is protected.
In case <mark:region> is specified, a default deny approach MUST be assumed regarding the regions of a country.
> element that contains the name of the court.
> is a digitally signed XML document using an XML Signature [XMLDSIG].
signedMark> XML document (SMD) includes a required "id" attribute of type XML Schema Definition (XSD) ID for use with an IDREF URI from the Signature element.
The SMD might be transmitted as part of a protocol already based on XML; therefore, exclusive XML canonicalization as defined in [XMLC14N] MUST be used.
A <smd:signedMark> element substitutes for the <smd:abstractSignedMark> abstract element to define a concrete definition of a signed mark.
> element can be replaced by other signed mark definitions using the XML schema substitution groups feature.
The child elements of the <smd:signedMark
> element include:  The <smd:id> element that uniquely identifies an SMD in relation to a repository of SMDs potentially maintained by more than one issuer.
issuerInfo> element that contains the information of the issuer of the mark registration.
An "issuerID" attribute is used to specify the issuer identifier.
> element that contains the issuer customer support email address.
url> element that contains the HTTP or HTTPS URL of the issuer's site.
> element that contains the issuer's voice telephone number.
> element that contains the creation date and time of the SMD.
> element that contains the expiration date and time of the SMD.
> element that contains the mark information as defined in Section 2.2.
The following is an example of an SMD: <?
xml version "1.0" encoding "UTF 8"?
:smd "urn:ietf:params:xml:ns:signedMark 1.0" id "smd1"> <smd:id>0000001751376056503931
> <mark:holder entitlement "owner"> <mark:org>
holder> <mark:contact type "agent"> <mark:name>
> <mark:class>15</mark:class> <mark:label>testandvalidate</mark:label> <mark:label>test validate</mark:
<CanonicalizationMethod Algorithm "http://www.w3.org/2001/10/xml exc c14n#"/
> <SignatureMethod Algorithm "http://www.w3.org/2001/04/xmldsig more#rsa sha256"/
> <Transforms> <Transform Algorithm "
> <X509Data> <X509Certificate> MIIESTCCAzGgAwIBAgIBAjANBgkqhkiG9w0BAQsFADBiMQswCQYDVQQGEwJVUzEL MAkGA1UECBMCQ0ExFDASBgNVBAcTC0xvcyBBbmdlbGVzMRMwEQYDVQQKEwpJQ0FO TiBUTUNIMRswGQYDVQQDExJJQ0FOTiBUTUNIIFRFU1QgQ0EwHhcNMTMwMjA4MDAw MDAwWhcNMTgwMjA3MjM1OTU5WjBsMQswCQYDVQQGEwJVUzELMAkGA1UECBMCQ0Ex FDASBgNVBAcTC0xvcyBBbmdlbGVzMRcwFQYDVQQKEw5WYWxpZGF0b3IgVE1DSDEh MB8GA1UEAxMYVmFsaWRhdG9yIFRNQ0ggVEVTVCBDRVJUMIIBIjANBgkqhkiG9w0B AQEFAAOCAQ8AMIIBCgKCAQEAo/cwvXhbVYl0RDWWvoyeZpETVZVVcMCovUVNg
The example shown above includes white space for indentation purposes.
It is RECOMMENDED that SMDs do not include white space between the XML elements, in order to mitigate risks of invalidating the digital signature when transferring of SMDs between applications takes place.
> element contains an encoded form of an SMD (described in Section 2.3), with the encoding defined by the "encoding" attribute with the default "encoding" value of "base64" [RFC4648].
The following is an example of a <smd:
> element that uses the default "base64" for encoding a <smd:
Two schemas are presented here.
The first schema is the schema for the Signed Mark object.
The second schema is the schema for the Mark object.
The formal syntax presented here is a complete schema representation of the object mapping suitable for automated validation of EPP XML instances.
The BEGIN and END tags are not part of the schema; they are used to note the beginning and ending of the schema for URI registration purposes.
Signed Mark Schema BEGIN <?
xml version "1.0" encoding "UTF 8"?
:dsig "http://www.w3.org/2000/09/xmldsig#" xmlns "http://www.w3.org/2001/XMLSchema" elementFormDefault
"qualified"> <annotation> <documentation> Schema for representing a Signed Mark object.
Abstract Signed Mark object for replacement via substitution.
<element name "abstractSignedMark" type "smd:abstractSignedMarkType" abstract "
Empty type for use in extending for a Signed Mark object.
> <extension base "smd:abstractSignedMarkType"> <sequence>
> <element name "issuerInfo" type "smd:issuerInfoType"/
<element name "notBefore" type "dateTime"/
</sequence> <attribute name "id" type "ID" use "
<element name "org" type "token"/
> <element name "email" type "mark:minTokenType"/>
<element name "url" type "token" minOccurs "
> <element name "voice" type "mark:e164Type" minOccurs "
> </sequence> <attribute name "issuerID" type "token" use "required"/
> <complexType name "encodedSignedMarkType"> <simpleContent> <extension base "token"> <attribute name "encoding" type "token" default "
xml version "1.0" encoding "UTF 8"?
ns:mark 1.0" xmlns "http://www.w3.org/2001/XMLSchema" elementFormDefault "qualified"> <annotation> <documentation
> Schema for representing a Trademark, also referred to as Mark.
Abstract Mark object for replacement via substitution.
<element name "abstractMark" type "mark:abstractMarkType
<element name "mark" type "mark:markType" substitutionGroup "mark:
Empty type for use in extending for a Mark object.
"> <sequence> <element name "trademark" type "mark:trademarkType
" minOccurs "0" maxOccurs "
<element name "name" type "token" minOccurs "
> <element name "org" type "token" minOccurs "
> <element name "addr" type "mark:
> <element name "voice" type "mark:e164Type" minOccurs "
> <element name "fax" type "mark:e164Type" minOccurs "
> <element name "email" type "mark:minTokenType" minOccurs "
<sequence> <element name "name" type "token"/
<element name "org" type "token" minOccurs "
> <element name "addr" type "mark:
<element name "fax" type "mark:e164Type" minOccurs "
<complexType name "trademarkType"> <sequence> <element name
> <element name "markName" type "token"/
> <element name "holder" type "mark:holderType" maxOccurs "unbounded" /
> <element name "contact" type "mark:
" minOccurs "0" maxOccurs "
> <element name "apId" type "token" minOccurs "
> <element name "apDate" type "dateTime" minOccurs "
> <element name "regNum" type "token"/
> <element name "markName" type "token"/
> <element name "holder" type "mark:holderType" maxOccurs "unbounded" /
> <element name "contact" type "mark:
" minOccurs "0" maxOccurs "
> <element name "refNum" type "token"/
> <element name "holder" type "mark:holderType" maxOccurs "unbounded" /
> <element name "contact" type "mark:
" minOccurs "0" maxOccurs "
> <element name "refNum" type "token"/
<complexType name "addrType"> <sequence> <element name "street" type "token" minOccurs "1" maxOccurs "
> <element name "city" type "token"/
<element name "sp" type "token" minOccurs "
> <element name "pc" type "mark:pcType" minOccurs "
> <element name "ruling" type "mark:ccType" minOccurs "
<simpleType name "pcType"> <restriction base "token"> <maxLength value "16"/
<simpleType name "ccType"> <restriction base "token"
Phone number with extension definition
> <extension base "mark:e164StringType"> <attribute name "x" type "token"/
Phone number with extension definition   <simpleType name "e164StringType"
<simpleType name "idType"> <restriction base "token"> <pattern value "
DNS label type definition   <simpleType name "labelType"> <restriction base "token"> <minLength value "1"/>
Type used for email addresses   <simpleType name "minTokenType"
<restriction base "token"> <minLength value "
"> <restriction base "token"> <enumeration value "owner"/>
This document uses URNs to describe XML namespaces and XML schemas conforming to the registry mechanism described in [RFC3688].
IANA has registered two URI assignments: signed mark (signedMark 1.0) and mark (mark 1.0).
The signed mark namespace (signedMark 1.0) has been registered in the "ns" registry.
signedMark 1.0 Registrant Contact: IESG XML: None.
Namespace URIs do not represent an XML specification.
The signed mark schema (signedMark 1.0) has been registered in the "schema" registry.
: See the "Formal Syntax" section of this document.
The mark namespace (mark 1.0) has been registered in the "ns" registry.
mark 1.0 Registrant Contact: IESG XML: None.
Namespace URIs do not represent an XML specification.
The mark schema (mark 1.0) has been registered in the "schema" registry.
: See the "Formal Syntax" section of this document.
The security of a Signed Mark object depends on the security of the underlying XML Digital Signature (DSIG) algorithms.
As such, all the security considerations from [XMLDSIG] apply here as well.
The digital signature algorithm used in Signed Mark objects SHOULD be RSA SHA256 [RFC6931].
The size of the RSA key SHOULD be at least 2048 bits.
A valid reason for choosing something else would be if RSA SHA256 is deemed to not provide sufficient security.
In the case of the ICANN TMCH, Signed Mark objects use the algorithms for digesting and signing recommended in this document.
Signed Mark objects are used primarily for domain name registrations in gTLDs during the Sunrise Period, but other third parties might be using them.
A party using Signed Mark objects should verify that the digital signature is valid based on local policy.
In the case of gTLDs, the Rights Protection Mechanism Requirements document [ICANN TMCH] defines such policy, and the PKI is defined in [TMCH].
Implementations will need to implement such a PKI (or an equivalent) in order for the signatures defined in this document to have any useful semantics.
