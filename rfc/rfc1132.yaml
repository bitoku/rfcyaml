- title: __initial_text__
  contents:
  - '   A Standard for the Transmission of 802.2 Packets over IPX Networks

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies a standard method of encapsulating\
    \ 802.2 [1]\n   packets on networks supporting Novell's Internet Packet Exchange\n\
    \   Protocol [2] (IPX).  It obsoletes earlier documents detailing the\n   transmission\
    \ of Internet packets over IPX networks.  It differs from\n   these earlier documents\
    \ in that it allows for the transmission of\n   multiple network protocols over\
    \ IPX and for the transmission of\n   packets through IPX bridges.  Distribution\
    \ of this memo is unlimited.\n"
- title: Introduction
  contents:
  - "Introduction\n   The goal of this specification is to allow compatible and\n\
    \   interoperable implementations for transmitting Internet packets such\n   as\
    \ the Internet Protocol [3] (IP) and Address Resolution Protocol [4]\n   (ARP)\
    \ as well as the Connectionless-mode Network Protocol [5] (CLNP)\n   over IPX\
    \ networks.\n   IPX is a proprietary standard developed by Novell derived from\n\
    \   Xerox's Internet Datagram Protocol [6] (IDP). Defining the\n   encapsulation\
    \ of the IEEE 802.2 Data Link Layer Standard over IPX in\n   terms of yet another\
    \ 802.X Physical Layer standard allows for the\n   transmission of IP Datagrams\
    \ as described in RFC 1042 [7].  This\n   document will focus on the implementation\
    \ of that RFC over IPX\n   networks.\n"
- title: Description
  contents:
  - "Description\n   In general, this specification allows IPX networks to be used\
    \ to\n   support any network protocol which can use the IEEE 802.2 Data Link\n\
    \   Layer specification.\n   More specifically, IPX networks may be used to support\
    \ IP networks\n   and subnetworks of any class.  By encapsulating IP datagrams\
    \ within\n   IPX datagrams and assigning IP numbers to the hosts on a IPX network,\n\
    \   IP-based applications are supported on these hosts.  The addition of\n   an\
    \ IP Gateway capable of encapsulating IP packets within 802.IPX\n   datagrams\
    \ would allow those hosts on an IPX network to communicate\n   with the Internet.\n"
- title: Maximum Transmission Unit
  contents:
  - "Maximum Transmission Unit\n   The maximum data size of a IPX datagram is 546\
    \ bytes.  As the\n   combined size of the 802.2 LLC and SNAP headers is 8 bytes,\
    \ this\n   results in a Maximum Transmission Unit (MTU) of 538 bytes.\n"
- title: Address Mappings
  contents:
  - "Address Mappings\n   The mapping of Internet Protocol addresses to 802.IPX addresses\
    \ is\n   done using the Address Resolution Protocol in the same fashion as\n \
    \  with other IEEE 802.X physical addresses.  However, the length of an\n   802.IPX\
    \ physical address is 10 bytes rather than 2 or 6.  This 10\n   byte physical\
    \ address consists of the 4 bytes of the IPX network\n   address followed by the\
    \ 6 bytes of the IPX node address.\n"
- title: Byte Order
  contents:
  - "Byte Order\n   The byte transmission order is \"big-endian\" [8].\n"
- title: Broadcast Addresses
  contents:
  - "Broadcast Addresses\n   IPX packets may be broadcast by setting the IPX header\
    \ Packet Type\n   field to 0x14, the Destination Network field to the local network\n\
    \   number, the the Destination Node field to 0xffffff, and the Immediate\n  \
    \ Address field of the IPX Event Control Block to 0xffffff.\n"
- title: Unicast Addresses
  contents:
  - "Unicast Addresses\n   IPX packets may be unicast by setting the IPX header Packet\
    \ Type\n   field to 0x04, the Destination Network field and Destination Node\n\
    \   field to those values found by address resolution, and the Immediate\n   Address\
    \ field of the IPX Event Control Block to the physical address\n   of the destination\
    \ node or the appropriate IPX bridge.\n"
- title: Checksum
  contents:
  - "Checksum\n   Like most IPX applications, this specification does not use IPX\n\
    \   checksum.\n"
- title: Reserved values
  contents:
  - "Reserved values\n   The IPX socket 0x8060 has been reserved by Novell for the\n\
    \   implementation of this protocol.\n"
- title: Implementation
  contents:
  - "Implementation\n   The encapsulation of Internet packets within IPX networks\
    \ has proved\n   to be quite useful.  Because the IPX interface insulates knowledge\
    \ of\n   the physical layer from an application, 802.2 over IPX networks work\n\
    \   over any physical medium.  A typical IP over IPX packet is shown\n   below:\n\
    \                              --------------------\n                    N bytes\
    \   |  physical header |\n                              |------------------|\n\
    \                   30 bytes   |    IPX header    |\n                        \
    \      |------------------|\n                    8 bytes   |   802.2 header  \
    \ |\n                              |------------------|\n           usually 20\
    \ bytes   |     IP header    |\n                              |------------------|\n\
    \           usually 20 bytes   |    TCP header    |\n                        \
    \      |------------------|\n            up to 498 bytes   |    TCP data     \
    \ |\n                              --------------------\n   On workstations supporting\
    \ an IPX programming interface,\n   implementation of this specification has proved\
    \ fairly\n   straightforward.  The only change which was done was to modify the\n\
    \   existing address resolution protocol code to allow for cache entries\n   larger\
    \ than the hardware address length.  This was done to allow room\n   for the immediate\
    \ address of a possible intervening IPX bridge in\n   addition to the destination\
    \ node and network addresses to be\n   associated with a given IP address.\n \
    \  Thus far, no implementations have been attempted on systems which do\n   not\
    \ already support an IPX programming interface (e.g., a dedicated\n   router)\
    \ though a few implementation details can be noted.  First,\n   obviously any\
    \ such implementation will have to distinguish IPX\n   packets from other packets;\
    \ this process will be media dependent.\n   Second, note that no unicast packet\
    \ is ever sent from host1 to host2\n   without a prior broadcast packet from host2\
    \ to host1.  Thus, the\n   immediate address of a possible intervening IPX bridge\
    \ between host1\n   and host2 can be learned from the physical header of that\
    \ prior\n   broadcast packet.  Third, any such implementation will need to\n \
    \  discover the local IPX network number from a Novell bridge or file\n   server.\
    \  The mechanisms for doing this exist but documentation for\n   their use is\
    \ not commonly available.\n"
- title: References
  contents:
  - "References\n  [1]  IEEE, \"IEEE Standards for Local Area Networks: Logical Link\n\
    \       Control\", IEEE, New York, 1985.\n  [2]  Novell, Inc., \"Advanced NetWare\
    \ V2.1 Internetwork Packet Exchange\n       Protocol (IPX) with Asynchronous Event\
    \ Scheduler (AES)\", October\n       1986.\n  [3]  Postel, J., \"Internet Protocol\"\
    , RFC-791, USC/Information\n       Sciences Institute, September 1981.\n  [4]\
    \  Plummer, D., \"An Ethernet Address Resolution Protocol\", RFC-826,\n      \
    \ November 1982.\n  [5]  ISO DIS 8473: \"Information Processing Systems - Data\n\
    \       Communications - Protocol for Providing the Connectionless-mode\n    \
    \   Network Service\".\n  [6]  Xerox Corporation, \"Xerox Network Systems Architecture\"\
    , XNSG\n       068504, April 1985.\n  [7]  Postel, J., and J. Reynolds, \"A Standard\
    \ for the Transmission of\n       IP Datagrams over IEEE 802 Networks\", RFC-1042,\
    \ USC/Information\n       Sciences Institute, February 1988.\n  [8]  Cohen, D.,\
    \ \"On Holy Wars and a Plea for Peace\", Computer, IEEE,\n       October 1981.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not addressed in this memo.\n"
- title: 'Author''s Address:'
  contents:
  - "Author's Address:\n   Leo J. McLaughlin III\n   The Wollongong Group\n   1129\
    \ San Antonio Road\n   Palo Alto, CA 94303\n   Phone: (415) 962-7100\n   EMail:\
    \ ljm@TWG.COM\n"
