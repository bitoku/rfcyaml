Abstract This document specifies a Directional Airtime (DAT) link metric for usage in Optimized Link State Routing version 2 (OLSRv2).
Introduction One of the major shortcomings of Optimized Link State Routing (OLSR)
[RFC3626] is the lack of a granular link cost metric between OLSR routers.
Operational experience with OLSR networks gathered since its publication has revealed that wireless networks links can have highly variable and heterogeneous properties.
This makes a hop count metric insufficient for effective OLSR routing.
Based on this experience, OLSRv2 [RFC7181] integrates the concept of link metrics directly into the core specification of the routing protocol.
The OLSRv2 routing metric is an external process, and it can be any kind of dimensionless additive cost function that reports to the OLSRv2 protocol.
Since 2004, the OLSR.org [OLSR.org] implementation of OLSR has included an Estimated Transmission Count (ETX) metric [MOBICOM04] as a proprietary extension.
While this metric is not perfect, it proved to be sufficient for a long time for Community Mesh Networks (see Appendix B).
But the increasing maximum data rate of IEEE 802.11 made the ETX metric less efficient than in the past, which is one reason to move to a different metric.
This document describes a Directional Airtime routing metric for OLSRv2, a successor of the OLSR.org ETX derived routing metric for OLSR.
It takes both the loss rate and the link speed into account to provide a more accurate picture of the links within the network.
This specification allows OLSRv2 deployments with a metric defined by the IETF Mobile Ad
Hoc Networks (MANET) working group.
It enables easier interoperability testing between implementations and targets to deliver a useful baseline to compare with, for experiments with this metric as well as other metrics.
Appendix A contains a few possible steps to improve the Directional Airtime metric.
Future experiments should also determine whether the DAT metric can be useful for other IETF protocols, both inside and outside of the MANET working group.
This could lead to either moving this document to the Standards Track or replacing it with an improved document.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
The terminology introduced in [RFC5444], [RFC7181], and [RFC6130], including the terms "packet", "message" and "TLV", are to be interpreted as described therein.
Additionally, this document uses the following terminology and notational conventions: DAT  Directional Airtime (metric).
The link metric specified in this document, which is a directional variant of ETT.
It does not take reverse path loss into account.
A first in, first out queue of integers.
The most recent element in the queue.
Adds a new element to the TAIL of the queue.
Removes the HEAD element of the queue.
An operation that returns the sum of all elements in a QUEUE.
An operation that returns the positive distance between two elements of the circular sequence number space defined in Section 5.1 of [RFC5444].
Its value is either (new old) if this result is positive, or else its value is (new old   65536).
The maximum of a and b. MIN(a, b)
The minimum of a and b. UNDEFINED
A value not in the normal value range of a variable.
The time a transmitted packet blocks the link layer, e.g., a wireless link.
A link metric proportional to the number of transmissions to successfully send an IP packet over a link.
A link metric proportional to the amount of airtime needed to successfully transmit an IP packet over a link, not considering Layer 2 overhead created by preamble, backoff time, and queuing.
The Directional Airtime metric was designed and tested (see [COMNET15]) in wireless IEEE 802.11 OLSRv2 networks [RFC7181].
These networks employ link layer retransmission to increase the delivery probability.
A dynamic rate selection algorithm selects the unicast data rate independently for each neighbor.
As specified in OLSRv2, the metric calculates only the incoming link cost.
It neither calculates the outgoing metric, nor decides the link status (heard, symmetric, lost).
The metric works both for nodes that can send/receive [RFC5444] packet sequence numbers and those that do not have this capability.
In the absence of such sequence numbers, the metric calculates the packet loss based on HELLO message [RFC6130] timeouts.
The metric must learn about the unicast data rate towards each one  hop neighbor from an external process, either by configuration or by an external measurement process.
This measurement could be done via gathering cross layer data from the operating system, via an external daemon like Dynamic Link Exchange Protocol [DLEP], or via indirect Layer 3 measurements like packet pair (see [MOBICOM04]).
[RFC5444] multicast control traffic to determine the link packet loss.
The administrator should take care that link layer multicast transmission do not have a higher reception probability than the slowest unicast transmission without retransmission.
For example, with 802.11g, it might be necessary to increase the data  rate of the multicast transmissions, e.g., set the multicast data  rate to 6 Mbit/s.
The metric can only handle a certain range of packet loss and unicast data rate.
The maximum packet loss that can be encoded into the metric is a loss of 7 of 8 packets (87.5%), without link layer retransmissions.
The unicast data rate that can be encoded by this metric can be between 1 kbit/s and 2 Gbit
This metric has been designed for data rates of 1 Mbit/s and hundreds of Mbit/s.
The Directional Airtime metric has been inspired by the publications on the ETX [MOBICOM03] and ETT [MOBICOM04] metric, but differs from both of these in several ways.
Instead of measuring the combined loss probability of a bidirectional transmission of a packet over a link in both directions, the Directional Airtime metric measures the incoming loss rate and integrates the incoming link speed into the metric cost.
There are multiple reasons for this decision:  OLSRv2
[RFC7181] defines the link metric as directional costs between routers.
Not all link layer implementations use acknowledgement mechanisms.
Most link layer implementations that do use them use less airtime and a more robust modulation for the acknowledgement than the data transmission, which makes it more likely for the data transmission to be disrupted compared to the acknowledgement.
Incoming packet loss and link speed can be measured locally, while symmetric link loss would need an additional signaling TLV in the HELLO [RFC6130] and would delay metric calculation by up to one HELLO interval.
The Directional Airtime metric does not integrate the packet size into the link cost.
Doing so is not feasible in most link state routing protocol implementations.
The routing decision of most operation systems does not take packet size into account.
Multiplying all link costs of a topology with the size of a data  plane packet would never change the Dijkstra result in any way.
The queue based packet loss estimator specified in this document has been tested extensively in the OLSR.org ETX implementation; see Appendix B.
The output is the average of the packet loss over a configured time period.
The metric normally measures the loss of a link by tracking the incoming [RFC5444] packet sequence numbers.
Without these packet sequence numbers, the metric does calculate the loss of the link based on the received and lost [RFC6130] HELLO messages.
It uses the incoming HELLO interval time (or if not present, the validity time) to decide when a HELLO is lost.
When a neighbor router resets, its packet sequence number might jump to a random value.
The metric tries to detect jumps in the packet sequence number and removes them from the data set because the previously gathered link loss data should still be valid (see Section 9.3).
The link loss data is only removed from memory when a link times out completely and its Link Set Tuple is removed from the database.
The Directional Airtime metric is calculated for each Link Set entry, as defined in [RFC6130], Section 7.1.
The metric processes two kinds of data into the metric value, namely packet loss rate and link speed.
The link speed is taken from an external process not defined in this document.
The current packet  loss rate is defined in this document by keeping track of packet reception and packet loss events.
It could also be calculated by an external process with a compatible output.
Multiple incoming packet loss/reception events must be combined into a loss rate to get a smooth metric.
Experiments with exponential weighted moving average (EWMA) lead to a highly fluctuating or a slow converging metric (or both).
To get a smoother and more controllable metric result, this metric uses two fixed length queues to measure and average the incoming packet events, one queue for received packets and one for the estimated number of packets sent by the other side of the link.
Because the rate of incoming packets is not uniform over time, the queue contains a number of counters, each representing a fixed time interval.
Incoming packet loss and packet reception events are accumulated in the current queue element until a timer adds a new empty counter to both queues and removes the oldest counter from both.
In addition to the packet loss stored in the queue, this metric uses a timer to detect a total link loss.
For every [RFC6130] HELLO interval in which the metric received no packet from a neighbor, it scales the number of received packets in the queue based on the total time interval the queue represents compared to the total time of the lost HELLO intervals.
The average packet loss ratio is calculated as the sum of the 'total packets' counters divided by the sum of the 'packets received' counters.
This value is then divided through the current link speed and then scaled into the range of metrics allowed for OLSRv2.
The metric value is then used as L in metric of the Link Set (as defined in Section 8.1.
While this document does not add new [RFC5444] elements to HELLO
[RFC6130] or TC messages [RFC7181], it works best when both the INTERVAL TIME message TLV is present in the HELLO messages and when each [RFC5444] packet contains an interface specific sequence number.
It also adds a number of new data entries to be stored for each [RFC6130] link.
This specification defines the following constants, which define the range of metric values that can be encoded by the DAT metric (see Table 1).
They cannot be changed without making the metric outputs incomparable and should only be changed for a MANET with a very slow or a very fast link layer.
See Appendix E for example metric values.
DAT MAXIMUM LOSS  Fraction of the loss rate used in this routing metric.
Loss rate will be between 0/DAT MAXIMUM LOSS and (DAT MAXIMUM LOSS 1)/DAT
Minimal bitrate in Bit/s used by this routing metric.
Table 1: DAT Protocol Constants 7.
This specification defines the following parameters for this routing metric.
These parameters are: DAT MEMORY LENGTH  Queue length for averaging packet loss.
All received and lost packets within the queue length are used to calculate the cost of the link.
DAT REFRESH INTERVAL  Interval in seconds between two metric recalculations as described in Section 10.2.
This value SHOULD be smaller than a typical HELLO interval.
The interval can be a fraction of a second.
DAT HELLO TIMEOUT FACTOR  Multiplier relative to the HELLO INTERVAL
(see Section 5.3.1 of [RFC6130]) after which the DAT metric considers a HELLO as lost.
Threshold in the number of missing packets (based on received packet sequence numbers) at which point the router considers the neighbor has restarted.
This parameter is only used for loss estimation based on packet sequence numbers.
This number MUST be larger than DAT MAXIMUM LOSS.
The proposed values of the protocol parameters are for Community Mesh Networks, which mostly use routers that are not mobile.
Using this metric for mobile networks might require shorter DAT REFRESH INTERVAL and/or DAT MEMORY LENGTH.
This specification extends the Link Set of the Interface Information Base, as defined in Section 7.1 of [RFC6130], by the adding the following elements to each Link
L DAT received  A QUEUE with DAT MEMORY LENGTH integer elements.
Each entry contains the number of successfully received packets within an interval of DAT REFRESH INTERVAL.
A QUEUE with DAT MEMORY LENGTH integer elements.
Each entry contains the estimated number of packets transmitted by the neighbor, based on the received packet sequence numbers within an interval of DAT REFRESH INTERVAL.
The time when the next [RFC5444] packet should have arrived.
The interval between two HELLO messages of the links neighbor as signaled by the INTERVAL TIME TLV [RFC5497] of NHDP messages [RFC6130].
L DAT lost packet intervals
The estimated number of HELLO intervals from this neighbor from which the metric has not received a single packet.
L DAT rx bitrate  The current bitrate of incoming unicast traffic for this neighbor.
L DAT last pkt seqno
The last received packet sequence number received from this link.
Methods to obtain the value of L DAT rx bitrate are out of the scope of this specification.
Such methods may include static configuration via a configuration file or dynamic measurement through mechanisms described in a separate specification (e.g., [DLEP]).
Any Link Tuple with L status   HEARD or L status
SYMMETRIC MUST have a specified value of L DAT rx bitrate if it is to be used by this routing metric.
The incoming bitrate value should be stabilized by a hysteresis filter to improve the stability of this metric.
See Appendix D for an example.
This specification updates the L in metric field of the Link Set of the Interface Information Base, as defined in Section 8.1.
The queue always has DAT MEMORY LENGTH elements.
The queue always has DAT MEMORY LENGTH elements.
L DAT packet time :  EXPIRED (no earlier
L DAT hello interval :  UNDEFINED (no earlier NHDP HELLO received).
L DAT lost packet intervals :  0
(no HELLO interval without packets).
L DAT last pkt seqno :  UNDEFINED
(no earlier [RFC5444] packet with sequence number received).
This section describes the necessary changes of [RFC7181] implementations with DAT metric for the processing and modification of the incoming and outgoing [RFC5444] data.
Definitions For the purpose of this section, note the following definitions:  "pkt seqno" is defined as the [RFC5444] packet sequence number of the received packet.
"interval time" is the time encoded in the INTERVAL TIME message TLV of a received HELLO message [RFC6130].
"validity time" is the time encoded in the VALIDITY TIME message TLV of a received HELLO message [RFC6130].
Requirements for Using DAT Metric in OLSRv2
An implementation of OLSRv2 using the metric specified by this document SHOULD include the following parts into its [RFC5444] output:  An INTERVAL TIME message TLV in each HELLO message, as defined in [RFC6130], Section 4.3.2.
An interface specific packet sequence number as defined in [RFC5444]
, Section 5.1 that is incremented by 1 for each outgoing [RFC5444] packet on the interface.
An implementation of OLSRv2 using the metric specified by this document that inserts packet sequence numbers in some, but
not all, outgoing [RFC5444] packets will make this metric ignore all packets without the sequence number.
Putting the INTERVAL TIME TLV into some, but not all, HELLO messages will make the timeout based loss detection slower.
This will only matter in the absence of packet sequence numbers.
For each incoming [RFC5444] packet, additional processing SHOULD be carried out after the packet messages have been processed as specified in [RFC6130] and [RFC7181] as described in this section.
[RFC5444] packets without packet sequence numbers MUST NOT be processed in the way described in this section.
The router updates the Link Set Tuple corresponding to the originator of the packet: 1.
seqno, L DAT last pkt seqno).
If diff > DAT SEQNO RESTART DETECTION, then: diff :  1.
L DAT last pkt seqno :  pkt seqno.
If L DAT hello interval !
(L DAT hello interval   DAT HELLO TIMEOUT FACTOR).
L DAT lost packet intervals :  0.
HELLO Message Processing For each incoming HELLO Message, after it has been processed as defined in Section 12 of [RFC6130],
the Link Set Tuple corresponding to the incoming HELLO message MUST be updated.
If the HELLO message contains an INTERVAL TIME message TLV, then: L DAT hello interval :  interval time.
Otherwise: L DAT hello interval :  validity time.
L DAT packet time :  current time
(L DAT hello interval   DAT HELLO TIMEOUT FACTOR).
In addition to changes in the [RFC5444] processing/generation code, the DAT metric also uses two timer events.
When L DAT packet time has timed out, the following step MUST be done: 1.
Otherwise: L DAT lost packet intervals :  L DAT lost packet intervals   1.
L DAT packet time :  L DAT packet time   L DAT hello interval.
Once every DAT REFRESH INTERVAL, all L in metric values in all Link Set entries MUST be recalculated: 1.
sum received :  sum(L DAT received).
sum total :  sum(L DAT total).
If L DAT hello interval !
UNDEFINED and L DAT lost packet intervals > 0
sum received :  sum received   MAX(0, 1 lost time proportion); 4.
If sum received < 1, then: L in metric :  MAXIMUM METRIC, as defined in [RFC7181], Section 5.6.1. 5.
bitrate :  MAX(L DAT rx bitrate, DAT MINIMUM BITRATE).
loss / (bitrate / DAT MINIMUM BITRATE).
The calculated L in metric value should be stabilized by a hysteresis function.
See Appendix D for an example.
Security Considerations Artificial manipulation of metrics values can drastically alter network performance.
In particular, advertising a higher L in metric value may decrease the amount of incoming traffic, while advertising lower L in metric may increase the amount of incoming traffic.
For example, by artificially attracting mesh routes and then dropping the incoming traffic, an attacker may achieve a Denial of Service (DoS) against other mesh nodes.
Similarly, an attacker may achieve Man in the Middle (MITM) attacks or traffic analysis by concentrating traffic being routed over a node the attacker controls (and end to  end encryption is not used or somehow broken).
Protection mechanisms against such MITM or DoS attacks are nevertheless out of scope of this document.
Security threats also include potential attacks on the integrity of the control traffic passively monitored by DAT to measure link quality.
For example, an attacker might inject packets pretending to be somebody else and using incorrect sequence numbers.
This attack can be prevented by the true originator of the [RFC5444] packets by adding an ICV Packet TLV and TIMESTAMP Packet TLV [RFC7182] to each packet.
This allows the receiver to drop all incoming packets that have a forged packet source, both packets generated by the attacker, or replayed packets.
However, the security mechanism described in [RFC7183] does not protect the sequence number used by the DAT metric because it only signs the [RFC5444] messages, not the [RFC5444] packet header (which contains the [RFC5444] packet sequence number).
As the DAT metric proved to work reasonably well for non  or slow  moving ad hoc networks [COMNET15], it should be considered a solid first step on a way to better MANET metrics.
There are multiple parts of the DAT metric that need to be reviewed again in the context of real world deployments and can be subject to later improvements.
The easiest part of the DAT metric to change and test would be the timings parameters.
A 1 minute interval for packet loss statistics might be a good compromise for some MANETs, but could easily be too large or to small for others.
More data is needed to verify or improve the current parameter selection.
The DAT metric considers only the multicast [RFC5444] packet loss for estimating the link, but it would be good to integrate the unicast data loss into the loss estimation.
This information could be provided directly from the link layer.
This could increase the accuracy of the loss rate estimation in scenarios where the assumptions regarding the ratio of multicast vs. unicast loss do not hold.
The packet loss averaging algorithm could also be improved.
While the DAT metric provides a stable sliding time interval to average the incoming packet loss and does not give the recent input too much influence, first experiments suggest that the algorithm tends to be less agile in detecting major changes of link quality.
This makes it less suited for mobile networks.
A more agile algorithm is needed for detecting major changes while filtering out random fluctuations regarding frame loss.
However, the current "queue of counters" algorithm suggested for DAT outperforms the binary queue algorithm and the exponential aging algorithms used for the ETX metric in the OLSR [RFC3626] codebase of OLSR.org.
The Funkfeuer [FUNKFEUER] and Freifunk networks [FREIFUNK] are based on OLSR [RFC3626] or B.A.T.M.A.N. [BATMAN] wireless community networks with hundreds of routers in permanent operation.
The Vienna Funkfeuer network in Austria, for instance, consists of 400 routers covering the whole city of Vienna and beyond, spanning roughly 40 km in diameter.
It has been supplying its users with Internet access since 2003.
A particularity of the Vienna Funkfeuer network is that it manages to provide Internet access through a city wide, large  scale Wi Fi MANET, with just a single Internet uplink.
Operational experience of the OLSR project [OLSR.org] with these networks has revealed that the use of hop count as a routing metric leads to unsatisfactory network performance.
Experiments with the ETX metric [MOBICOM03] were therefore undertaken in parallel in the Berlin Freifunk network as well as in the Vienna Funkfeuer network in 2004, and found satisfactory, i.e., sufficiently easy to implement and providing sufficiently good performance.
This metric has now been in operational use in these networks for several years.
The ETX metric of a link is the estimated number of transmissions required to successfully send a packet (each packet equal to or smaller than MTU) over that link, until a link layer acknowledgement is received.
The ETX metric is additive, i.e., the ETX metric of a path is the sum of the ETX metrics for each link on this path.
While the ETX metric delivers a reasonable performance, it does not handle networks with heterogeneous links that have different bitrates well.
When using the ETX metric, since every wireless link is characterized only by its packet loss ratio, long ranged links with low bitrate (with low loss ratios) are preferred over short ranged links with high bitrate (with higher but reasonable loss ratios).
Such conditions, when they occur, can degrade the performance of a network considerably, by not taking advantage of higher capacity links.
Because of this, the OLSR.org project has implemented the Directional Airtime metric for OLSRv2, which has been inspired by the Estimated Travel Time (ETT) metric [MOBICOM04].
This metric uses a unidirectional packet loss, but also takes the bitrate into account to create a more accurate description of the relative costs or capabilities of OLSRv2 links.
The DAT metric specifies how to generate a reasonably stable packet  loss rate value based on incoming packet reception/loss events, but the source of the link speed used in this document is considered an external process.
In the presence of a Layer 2 technology with variable link speed, it is likely that the raw link speed will be fluctuating too fast to be useful for the DAT metric.
The amount of stabilization necessary for the link speed depends on the implementation of the MAC layer, especially the rate control algorithm.
Experiments with the Linux 802.11
Wi Fi stack have shown that a simple Median filter over a series of raw link speed measurements can smooth the calculated value without introducing intermediate link  speed values one would obtain by using averaging or an exponential weighted moving average.
Appendix D.  Packet Loss Hysteresis
While the DAT metric uses a sliding window to compute a reasonably stable frame loss, the implementation might choose to integrate an additional hysteresis to prevent undesirable oscillations between two values (i.e., metric flapping).
In Section 10.2, DAT calculates a fractional loss rate.
The fraction of "loss :  sum total / sum received" may result in minor fluctuations in the advertised L in metric due to minimal changes in sum total or sum received, which can cause undesirable protocol churn.
A hysteresis function applied to the fraction could reduce the amount of changes in the loss rate and help to further stabilize the metric output.
Appendix E.  Example DAT Values
The DAT metric value can be expressed in terms of link speed (bit/s) or used airtime (s).
When using the default protocol constants (see Section 6), DAT encodes link speeds between 119 bit/s and 2 Gbit
MAXIMUM METRIC (16776960)   119 bit
A path metric value could also be expressed as a link speed, but this would be less intuitive.
An easier way to transform a path metric value into a textual representation is to divide it by the hop count of the path and express the path cost as the average link speed together with the hop count (see Table 3).
