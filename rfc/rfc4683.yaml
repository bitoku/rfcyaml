- title: __initial_text__
  contents:
  - "                Internet X.509 Public Key Infrastructure\n                  Subject\
    \ Identification Method (SIM)\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines the Subject Identification Method (SIM) for\n\
    \   including a privacy-sensitive identifier in the subjectAltName\n   extension\
    \ of a certificate.\n   The SIM is an optional feature that may be used by relying\
    \ parties to\n   determine whether the subject of a particular certificate is\
    \ also the\n   person corresponding to a particular sensitive identifier.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \      1.1. Key Words ..................................................5\n  \
    \ 2. Symbols .........................................................6\n   3.\
    \ Requirements ....................................................6\n      3.1.\
    \ Security Requirements ......................................6\n      3.2. Usability\
    \ Requirements .....................................7\n      3.3. Solution ...................................................7\n\
    \   4. Procedures ......................................................8\n  \
    \    4.1. SII and SIItype ............................................8\n    \
    \  4.2. User Chosen Password .......................................9\n      4.3.\
    \ Random Number Generation ...................................9\n      4.4. Generation\
    \ of SIM ..........................................9\n      4.5. Encryption of\
    \ PEPSI .......................................10\n      4.6. Certification Request\
    \ .....................................10\n      4.7. Certification .............................................11\n\
    \   5. Definition .....................................................11\n  \
    \    5.1. SIM Syntax ................................................11\n    \
    \  5.2. PEPSI .....................................................12\n      5.3.\
    \ Encrypted PEPSI ...........................................12\n   6. Example\
    \ Usage of SIM ...........................................13\n   7. Name Constraints\
    \ ...............................................13\n   8. Security Considerations\
    \ ........................................14\n   9. Acknowledgements ...............................................15\n\
    \   10. IANA Considerations ...........................................15\n  \
    \ 11. References ....................................................15\n    \
    \  11.1. Normative References .....................................15\n      11.2.\
    \ Informative References ...................................15\n   Appendix A.\
    \  \"Compilable\" ASN.1 Module, 1988 Syntax ...............18\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   A Certification Authority (CA) issues X.509 public key certificates\n\
    \   to bind a public key to a subject.  The subject is specified through\n   one\
    \ or more subject names in the \"subject\" or \"subjectAltName\" fields\n   of\
    \ a certificate.  The \"subject\" field contains a hierarchically\n   structured\
    \ distinguished name.  The \"subjectAltName field\" may\n   contain an electronic\
    \ mail address, IP address, or other name forms\n   that correspond to the subject.\n\
    \   For each particular CA, a subject name corresponds to a unique\n   person,\
    \ device, group, or role.  The CA will not knowingly issue\n   certificates to\
    \ multiple entities under the same subject name.  That\n   is, for a particular\
    \ certificate issuer, all currently valid\n   certificates asserting the same\
    \ subject name(s) are bound to the same\n   entity.\n   Where the subject is a\
    \ person, the name that is specified in the\n   subject field of the certificate\
    \ may reflect the name of the\n   individual and affiliated entities (e.g., their\
    \ corporate\n   affiliation).  In reality, however, there are individuals or\n\
    \   corporations that have the same or similar names.  It may be\n   difficult\
    \ for a relying party (e.g., a person or application) to\n   associate the certificate\
    \ with a specific person or organization\n   based solely on the subject name.\
    \  This ambiguity presents a problem\n   for many applications.\n   In some cases,\
    \ applications or relying parties need to ensure that\n   the subject of certificates\
    \ issued by different CAs are in fact the\n   same entity.  This requirement may\
    \ be met by including a \"permanent\n   identifier\" in all certificates issued\
    \ to the same subject, which is\n   unique across multiple CAs.  By comparing\
    \ the \"permanent identifier\",\n   the relying party may identify certificates\
    \ from different CAs that\n   are bound to the same subject.  This solution is\
    \ defined in [RFC\n   4043].\n   In many cases, a person's or corporation's identifier\
    \ (e.g., a Social\n   Security Number) is regarded as sensitive, private, or personal\
    \ data.\n   Such an identifier cannot simply be included as part of the subject\n\
    \   field, since its disclosure may lead to misuse.  Therefore, privacy-\n   sensitive\
    \ identifiers of this sort should not be included in\n   certificates in plaintext\
    \ form.\n   On the other hand, such an identifier is not actually a secret.\n\
    \   People choose to disclose these identifiers for certain classes of\n   transactions.\
    \  For example, a person may disclose a Social Security\n   Number to open a bank\
    \ account or obtain a loan.  This is typically\n   corroborated by presenting\
    \ physical credentials (e.g., a driver's\n   license) that confirm the person's\
    \ name or address.\n   To support such applications in an online environment,\
    \ relying\n   parties need to determine whether the subject of a particular\n\
    \   certificate is also the person corresponding to a particular\n   sensitive\
    \ identifier.  Ideally, applications would leverage the\n   applicants' electronic\
    \ credential (e.g., the X.509 public key\n   certificate) to corroborate this\
    \ identifier, but the subject field of\n   a certificate often does not provide\
    \ sufficient information.\n   To fulfill these demands, this specification defines\
    \ the Subject\n   Identification Method (SIM) and the Privacy-Enhanced Protected\n\
    \   Subject Information (PEPSI) format for including a privacy sensitive\n   identifier\
    \ in a certificate.  Although other solutions for binding\n   privacy-sensitive\
    \ identifiers to a certificate could be developed,\n   the method specified in\
    \ this document has especially attractive\n   properties.  This specification\
    \ extends common PKI practices and\n   mechanisms to allow privacy-sensitive identifiers\
    \ to be included in\n   the certificate as well.  The SIM mechanism also permits\
    \ the subject\n   to control exposure of the sensitive identifier; when the subject\n\
    \   chooses to expose the sensitive identifier, relying parties can\n   verify\
    \ the binding.  Specifically:\n   (1) A Public Key Infrastructure (PKI) depends\
    \ upon a trusted third\n   party -- the CA -- to bind one or more identities to\
    \ a public key.\n   Traditional PKI implementations bind X.501 distinguished names\
    \ to the\n   public key, but identity may also be specified in terms of RFC 822\n\
    \   addresses or DNS names.  The SIM specification allows the same\n   trusted\
    \ third party -- the CA -- that binds a name to the public key\n   to include\
    \ a privacy-sensitive identifier in the certificate as well.\n   Since the relying\
    \ party (RP) already trusts the CA to issue\n   certificates, it is a simple extension\
    \ to cover verification and\n   binding of a sensitive identifier as well.  This\
    \ binding could be\n   established separately, by another trusted third party,\
    \ but this\n   would complicate the infrastructure.\n   (2) This specification\
    \ leverages standard PKI extensions to achieve\n   new functional goals with a\
    \ minimum of new code.  This specification\n   encodes the sensitive identifier\
    \ in the otherName field in the\n   alternative subject name extension.  Since\
    \ otherName field is widely\n   used, this solution leverages a certificate field\
    \ that is often\n   populated and processed.  (For example, smart card logon\n\
    \   implementations generally rely upon names encoded in this field.)\n   Whereas\
    \ implementations of this specification will require some SIM-\n   specific code,\
    \ an alternative format would increase cost without\n   enhancing security.  In\
    \ addition, that has no impact on\n   implementations that do not process sensitive\
    \ identifiers.\n   (3) By explicitly binding the public key to the identifier,\
    \ this\n   specification allows the relying party to confirm the claimant's\n\
    \   identifier and confirm that the claimant is the subject of that\n   identifier.\
    \  That is, proof of possession of the private key confirms\n   that the claimant\
    \ is the same person whose identity was confirmed by\n   the PKI (CA or RA, depending\
    \ upon the architecture).\n   To achieve the same goal in a separate message (e.g.,\
    \ a signed and\n   encrypted Secure MIME (S/MIME) object), the message would need\
    \ to be\n   bound to the certificate or an identity in the certificate (e.g.,\
    \ the\n   X.501 distinguished name).  The former solution is problematic, since\n\
    \   certificates expire.  The latter solution may cause problems if names\n  \
    \ are ever reused in the infrastructure.  An explicit binding in the\n   certificate\
    \ is a simpler solution, and more reliable.\n   (4) This specification allows\
    \ the subject of the privacy-sensitive\n   identifier to control the distribution\
    \ and level of security applied\n   to the identifier.  The identifier is only\
    \ disclosed when the subject\n   chooses to disclose it, even if the certificate\
    \ is posted in a public\n   directory.  By choosing a strong password, the subject\
    \ can ensure\n   that the identifier is protected against brute force attacks.\
    \  This\n   specification permits subjects to selectively disclose an identifier\n\
    \   where they deem it appropriate, which is consistent with common use\n   of\
    \ such identifiers.\n   (5) Certificates that contain a sensitive identifier may\
    \ still be\n   used to support other applications.  A party that obtains a\n \
    \  certificate containing a sensitive identifier, but to whom the\n   subject\
    \ does not choose to disclose the identifier, must perform a\n   brute force attack\
    \ to obtain the identifier.  By selecting a strong\n   hash algorithm, this attack\
    \ becomes computationally infeasible.\n   Moreover, when certificates include\
    \ privacy-sensitive identifiers as\n   described in this specification, each certificate\
    \ must be attacked\n   separately.  Finally, the subjects can use this mechanism\
    \ to prove\n   they possess a certificate containing a particular type of identifier\n\
    \   without actually disclosing it to the relying party.\n   This feature MUST\
    \ be used only in conjunction with protocols that\n   make use of digital signatures\
    \ generated using the subject's private\n   key.\n   In addition, this document\
    \ defines an Encrypted PEPSI (EPEPSI) so\n   that sensitive identifier information\
    \ can be exchanged during\n   certificate issuance processes without disclosing\
    \ the identifier to\n   an eavesdropper.\n   This document is organized as follows:\n\
    \   - Section 3 establishes security and usability requirements;\n   - Section\
    \ 4 provides an overview of the mechanism;\n   - Section 5 defines syntax and\
    \ generation rules; and\n   - Section 6 provides example use cases.\n"
- title: 1.1.  Key Words
  contents:
  - "1.1.  Key Words\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
- title: 2.  Symbols
  contents:
  - "2.  Symbols\n   The following cryptography symbols are defined in this document.\n\
    \       H()        Cryptographically secure hash algorithm.\n                \
    \  SHA-1 [FIPS 180-1] or a more secure hash function is\n                  required.\n\
    \       SII        Sensitive Identification Information\n                  (e.g.,\
    \ Social Security Number).\n       SIItype    Object Identifier that identifies\
    \ the type of SII.\n       P          A user-chosen password.\n       R      \
    \    The random number value generated by a Registration\n                  Authority\
    \ (RA).\n       PEPSI      Privacy-Enhanced Protected Subject Information.\n \
    \                 Calculated from the input value P, R, SIItype, SII\n       \
    \           using two iteration of H().\n       E()        The encryption algorithm\
    \ to encrypt the PEPSI value.\n       EPEPSI     Encrypted PEPSI.\n       D()\
    \        The decryption algorithm to decrypt the EPEPSI.\n"
- title: 3.  Requirements
  contents:
  - '3.  Requirements

    '
- title: 3.1.  Security Requirements
  contents:
  - "3.1.  Security Requirements\n   We make the following assumptions about the context\
    \ in which SIM and\n   PEPSI are to be employed:\n     - Alice, a certificate\
    \ holder, with a sensitive identifier SIIa\n       (such as her Social Security\
    \ Number)\n     - Bob, a relying party who will require knowledge of Alice's SIIa\n\
    \     - Eve, an attacker who acquires Alice's certificate\n     - An RA to whom\
    \ Alice must divulge her SIIa\n     - A CA who will issue Alice's certificate\n\
    \   We wish to design SIM and PEPSI, using a password that Alice chooses,\n  \
    \ that has the following properties:\n     - Alice can prove her SII, SIIa to\
    \ Bob.\n     - Eve has a large work factor to determine Alice's SIIa from\n  \
    \     Alice's certificate, even if Alice chooses a weak password, and a\n    \
    \   very large work factor if Alice chooses a good password.\n     - Even if Eve\
    \ can determine SIIa, she has an equally hard problem\n       to find any other\
    \ SII values from any other PEPSI; that is, there\n       is nothing she can pre-compute\
    \ that helps her attack PEPSIs in\n       other certificates, and nothing she\
    \ learns from a successful\n       attack that helps in any other attack.\n  \
    \   - The CA does not learn Alice's SIIa except in the case where the\n      \
    \ CA needs to validate the SII passed by the RA.\n     - The CA can treat the\
    \ SIM as an additional name form in the\n       \"subjectAltName\" extension with\
    \ no special processing.\n     - Alice cannot find another SII (SIIx), and a password\
    \ (P), that\n       will allow her to use her certificate to assert a false SII.\n"
- title: 3.2.  Usability Requirements
  contents:
  - "3.2.  Usability Requirements\n   In addition to the security properties stated\
    \ above, we have the\n   following usability requirements:\n     - When SIM and\
    \ PEPSI are used, any custom processing occurs at the\n       relying party. \
    \ Alice can use commercial off-the-shelf software\n       (e.g., a standard browser)\
    \ without modification in conjunction\n       with a certificate containing a\
    \ SIM value.\n"
- title: 3.3.  Solution
  contents:
  - "3.3.  Solution\n   We define SIM as: R || PEPSI\n             where PEPSI = H(H(\
    \ P || R || SIItype || SII))\n   The following steps describe construction and\
    \ use of SIM:\n   1.      Alice picks a password P, and gives P, SIItype, and\
    \ SII to\n           the RA (via a secure channel).\n   2.      The RA validates\
    \ SIItype and SII; i.e., it determines that\n           the SII value is correctly\
    \ associated with the subject and\n           the SIItype is correct.\n   3. \
    \     The RA generates a random value R.\n   4.      The RA generates the SIM\
    \ = (R || PEPSI) where PEPSI = H(H(P\n           || R || SIItype || SII)).\n \
    \  5.      The RA sends the SIM to Alice by some out-of-band means and\n     \
    \      also passes it to the CA.\n   6.      Alice sends a certRequest to CA.\
    \  The CA generates Alice's\n           certificate including the SIM as a form\
    \ of otherName from the\n           GeneralName structure in the subjectAltName\
    \ extension.\n   7.      Alice sends Bob her Cert, as well as P, SIItype, and\
    \ SII.\n           The latter values must be communicated via a secure\n     \
    \      communication channel, to preserve their confidentiality.\n   8.      Bob\
    \ can compute PEPSI' = H(H(P || R || SIItype || SII)) and\n           compare\
    \ SIM' = R || PEPSI' to the SIM value in Alice's\n           certificate, thereby\
    \ verifying SII.\n   If Alice's SII value is not required by Bob (Bob already\
    \ knows\n   Alice's SII and does not require it), then steps 7 and 8 are as\n\
    \   follows:\n   7.      Alice sends Bob her Cert and P.  P must be sent via a\
    \ secure\n           communication channel, to preserve its confidentiality.\n\
    \   8.      Bob can compute PEPSI' = H(H(P || R || SIItype || SII)) and\n    \
    \       compare SIM' = R || PEPSI' to the value in the SIM, thereby\n        \
    \   verifying SII.\n   If Alice wishes to prove she is the subject of an RA-validated\n\
    \   identifier, without disclosing her identifier to Bob, then steps 7\n   and\
    \ 8 are as follows:\n   7.      Alice sends the intermediate value H(P || R ||\
    \ SIItype ||\n           SII) and her certificate to Bob.\n   8.      Bob can\
    \ get R from the SIM in the certificate, then compute H\n           (intermediate\
    \ value) and compare it to the value in SIM,\n           thereby verifying Alice's\
    \ knowledge of P and SII.\n   Eve has to exhaustively search the H(P || R || SIItype\
    \ || SII) space\n   to find Alice's SII.  This is a fairly hard problem even if\
    \ Alice\n   uses a poor password, because of the size of R (as specified later),\n\
    \   and a really hard problem if Alice uses a fairly good password (see\n   Section\
    \ 8).\n   Even if Eve finds Alice's P and SII, or constructs a massive\n   dictionary\
    \ of P and SII values, it does not help find any other SII\n   values, because\
    \ a new R is used for each PEPSI and SIM.\n"
- title: 4.  Procedures
  contents:
  - '4.  Procedures

    '
- title: 4.1.  SII and SIItype
  contents:
  - "4.1.  SII and SIItype\n   The user presents evidence that a particular SII has\
    \ been assigned to\n   him/her.  The SIItype is an Object Identifier (OID) that\
    \ defines the\n   format and scope of the SII value.  For example, in Korea, one\n\
    \   SIItype is defined as follows:\n   -- KISA specific arc\n   id-KISA OBJECT\
    \ IDENTIFIER ::=\n     {iso(1) member-body(2) korea(410) kisa(200004)}\n   --\
    \ KISA specific OIDs\n   id-npki OBJECT IDENTIFIER ::= {id-KISA 10}\n   id-attribute\
    \ OBJECT IDENTIFIER ::= {id-npki 1}\n   id-kisa-identifyData OBJECT IDENTIFIER\
    \ ::= {id-attribute 1}\n   id-VID OBJECT IDENTIFIER ::= {id-kisa-identifyData\
    \ 10}\n   id-SII OBJECT IDENTIFIER ::= {id-VID 1}\n   For closed communities,\
    \ the SIItype value may be assigned by the CA\n   itself, but it is still recommended\
    \ that the OID be registered.\n"
- title: 4.2.  User Chosen Password
  contents:
  - "4.2.  User Chosen Password\n   The user selects a password as one of the input\
    \ values for computing\n   the SIM.  The strength of the password is critical\
    \ to protection of\n   the user's SII, in the following sense.  If an attacker\
    \ has a\n   candidate SII value, and wants to determine whether the SIM value\
    \ in\n   a specific subject certificate, P is the only protection for the SIM.\n\
    \   The user should be encouraged to select passwords that will be\n   difficult\
    \ to be guessed, and long enough to protect against brute\n   force attacks.\n\
    \   Implementations of this specification MUST permit a user to select\n   passwords\
    \ of up to 28 characters.  RAs SHOULD implement password\n   filter rules to prevent\
    \ user selection of trivial passwords.  See\n   [FIPS 112] and [FIPS 180-1] for\
    \ security criteria for passwords and\n   an automated password generator algorithm\
    \ that randomly creates\n   simple pronounceable syllables as passwords.\n"
- title: 4.3.  Random Number Generation
  contents:
  - "4.3.  Random Number Generation\n   The RA generates a random number, R.  A new\
    \ R MUST be generated for\n   each SIM.  The length of R MUST be the same as the\
    \ length of the\n   output of the hash algorithm H.  For example, if H is SHA-1,\
    \ the\n   random number MUST be 160 bits.\n   A Random Number Generator (RNG)\
    \ that meets the requirements defined\n   in [FIPS 140-2] and its use is strongly\
    \ recommended.\n"
- title: 4.4.  Generation of SIM
  contents:
  - "4.4.  Generation of SIM\n   The SIM in the subjectAltName extension within a\
    \ certificate\n   identifies an entity, even if multiple subjectAltNames appear\
    \ in a\n   certificate.  RAs MUST calculate the SIM value with the designated\n\
    \   inputs according to the following algorithm:\n   SIM = R || PEPSI\n      where\
    \ PEPSI = H(H(P || R || SIItype || SII))\n   The SII is made known to an RA at\
    \ user enrollment.  Both SHA-1 and\n   SHA-256 MUST be supported for generation\
    \ and verification of PEPSI\n   values.  This specification does not preclude\
    \ use of other one-way\n   hash functions, but SHA-1 or SHA-256 SHOULD be used\
    \ wherever\n   interoperability is a concern.\n   Note that a secure communication\
    \ channel MUST be used to pass P and\n   SII passing from the end entity to the\
    \ RA, to protect them from\n   disclosure or modification.\n   The syntax and\
    \ the associated OID for SIM are also provided in the\n   ASN.1 modules in Section\
    \ 5.1.  Also, Section 5.2 describes the syntax\n   for PEPSI in the ASN.1 modules.\n"
- title: 4.5.  Encryption of PEPSI
  contents:
  - "4.5.  Encryption of PEPSI\n   It may be required that the CA (not just the RA)\
    \ verifies SII before\n   issuing a certificate.  To meet this requirement, RA\
    \ SHOULD encrypt\n   the SIItype, SII, and SIM and send the result to the CA by\
    \ a secure\n   channel.  The user SHOULD also encrypt the same values and send\
    \ the\n   result to the CA in his or her certificate request message.  Then the\n\
    \   CA compares these two results for verifying the user's SII.\n   Where the\
    \ results from RA and the user are the EPEPSI.\n      EPEPSI = E(SIItype || SII\
    \ || SIM)\n   When the EPEPSI is used in a user certificate request, it is in\n\
    \   regInfo of [RFC4211] and [RFC2986].\n   Note: Specific encryption/decryption\
    \ methods are not defined in this\n         document.  For transmission of the\
    \ PEPSI value from a user to a\n         CA, the certificate request protocol\
    \ employed defines how\n         encryption is performed.  For transmission of\
    \ this data between\n         an RA and a CA, the details of how encryption is\
    \ performed is a\n         local matter.\n   The syntax and the associated OID\
    \ for EPEPSI is provided in the ASN.1\n   modules in Section 5.3.\n"
- title: 4.6.  Certification Request
  contents:
  - "4.6.  Certification Request\n   As described above, a certificate request message\
    \ MAY contain the\n   SIM.  [RFC2986] and [RFC4211] are widely used message syntaxes\
    \ for\n   certificate requests.\n   Basically, a PKCS#10 message consists of a\
    \ distinguished name, a\n   public key, and an optional set of attributes, collectively\
    \ signed by\n   the end entity.  The SIM alternative name MUST be placed in the\n\
    \   subjectAltName extension if this certificate request format is used.\n   If\
    \ a CA verifies SII before issuing the certificate, the value of SIM\n   in the\
    \ certification request MUST be conveyed in the EPEPSI form and\n   provided by\
    \ the subject.\n"
- title: 4.7.  Certification
  contents:
  - "4.7.  Certification\n   A CA that issues certificates containing the SIM includes\
    \ the SIM as\n   a form of otherName from the GeneralName structure in the\n \
    \  \"subjectAltName\" extension.\n   In an environment where a CA verifies SII\
    \ before issuing the\n   certificate, a CA decrypts the EPEPSI values it receives\
    \ from both\n   the user and the RA, and compares them.  It then validates that\
    \ the\n   SII value is correctly bound to the subject.\n      SIItype, SII, SIM\
    \ = D(EPEPSI)\n"
- title: 5.  Definition
  contents:
  - '5.  Definition

    '
- title: 5.1.  SIM Syntax
  contents:
  - "5.1.  SIM Syntax\n   This section specifies the syntax for the SIM name form\
    \ included in\n   the subjectAltName extension.  The SIM is composed of the three\n\
    \   fields:  the hash algorithm identifier, the authority-chosen random\n   value,\
    \ and the value of the PEPSI itself.\n      id-pkix     OBJECT IDENTIFIER  ::=\n\
    \            { iso(1) identified-organization(3) dod(6) internet(1)\n        \
    \      security(5) mechanisms(5) pkix(7) }\n      id-on       OBJECT IDENTIFIER\
    \ ::= { id-pkix 8 }\n      id-on-SIM   OBJECT IDENTIFIER ::= { id-on 6 }\n   \
    \     SIM ::= SEQUENCE {\n            hashAlg          AlgorithmIdentifier,\n\
    \            authorityRandom  OCTET STRING,   -- RA-chosen random number\n   \
    \                                          -- used in computation of\n       \
    \                                      -- pEPSI\n            pEPSI           \
    \ OCTET STRING    -- hash of HashContent\n                                   \
    \          -- with algorithm hashAlg\n        }\n"
- title: 5.2.  PEPSI
  contents:
  - "5.2.  PEPSI\n   This section specifies the syntax for the PEPSI.  The PEPSI is\n\
    \   generated by performing the same hash function twice.  The PEPSI is\n   generated\
    \ over the ASN.1 structure HashContent.  HashContent has four\n   values:  the\
    \ user-selected password, the authority-chosen random\n   number, the identifier\
    \ type, and the identifier itself.\n        HashContent ::= SEQUENCE {\n     \
    \      userPassword     UTF8String,\n                            -- user-supplied\
    \ password\n           authorityRandom  OCTET STRING,\n                      \
    \      -- RA-chosen random number\n           identifierType   OBJECT IDENTIFIER,\
    \  -- SIItype\n           identifier       UTF8String          -- SII\n      \
    \  }\n   Before calculating a PEPSI, conforming implementations MUST process\n\
    \   the userPassword with the six-step [LDAPBIS STRPREP] string\n   preparation\
    \ algorithm, with the following changes:\n      * In step 2, Map, the mapping\
    \ shall include processing of\n        characters commonly mapped to nothing,\
    \ as specified in Appendix\n        B.1 of [RFC3454].\n      * Omit step 6, Insignificant\
    \ Character Removal.\n"
- title: 5.3.  Encrypted PEPSI
  contents:
  - "5.3.  Encrypted PEPSI\n   This section describes the syntax for the Encrypted\
    \ PEPSI.  The\n   Encrypted PEPSI has three fields: identifierType, identifier,\
    \ and\n   SIM.\n        EncryptedPEPSI ::= SEQUENCE {\n           identifierType\
    \  OBJECT IDENTIFIER, -- SIItype\n           identifier      UTF8String,     \
    \   -- SII\n           sIM             SIM                -- Value of the SIM\n\
    \        }\n   When it is used in a certificate request, the OID in 'regInfo'\
    \ of\n   [RFC4211] and [RFC2986] is as follows:\n   id-regEPEPSI OBJECT IDENTIFIER\
    \ ::= { id-pkip 3 }\n"
- title: 6.  Example Usage of SIM
  contents:
  - "6.  Example Usage of SIM\n   Depending on different security environments, there\
    \ are three\n   possible use cases with SIM.\n     1.     When a relying party\
    \ does not have any information about the\n            certificate user.\n   \
    \  2.     When a relying party already knows the SII of the\n            certificate\
    \ user.\n     3.     When the certificate user does not want to disclose his SII.\n\
    \   For the use case 1, the SII and a user-chosen password P (which only\n   the\
    \ user knows) must be sent to a relying party via a secure\n   communication channel;\
    \ the certificate including the SIM also must be\n   transmitted.  The relying\
    \ party acquires R from the certificate.  The\n   relying party can verify that\
    \ the SII was validated by the CA (or RA)\n   and is associated with the entity\
    \ that presented the password and\n   certificate.  In this case, the RP learns\
    \ which SII is bound to the\n   subject as a result of the procedure.\n   In case\
    \ 2, a certificate user transmits only the password, P, and the\n   certificate.\
    \  The rest of the detailed procedure is the same as case\n   1, but here the\
    \ relying party supplies the SII value, based on its\n   external knowledge of\
    \ that value.  The purpose in this case is to\n   enable the RP to verify that\
    \ the subject is bound to the SII,\n   presumably because the RP identifies the\
    \ subject based on this SII.\n   In the last case, the certificate user does not\
    \ want to disclose his\n   or her SII because of privacy concerns.  Here the only\
    \ information\n   sent by a certificate subject is the intermediate value of the\
    \ PEPSI,\n   H(R || P || SIItype || SII).  This value MUST be transmitted via\
    \ a\n   secure channel, to preserve its confidentiality.  Upon receiving this\n\
    \   value, the relying party applies the hash function to the\n   intermediate\
    \ PEPSI value sent by the user, and matches it against the\n   SIM value in the\
    \ user's certificate.  The relying party does not\n   learn the user's SII value\
    \ as a result of this processing, but the\n   relying party can verify the fact\
    \ that the user knows the right SII\n   and password.  This gives the relying\
    \ party more confidence that the\n   user is the certificate subject.  Note that\
    \ this form of user\n   identity verification is NOT to be used in lieu of standard\n\
    \   certificate validation procedures, but rather in addition to such\n   procedures.\n"
- title: 7.  Name Constraints
  contents:
  - "7.  Name Constraints\n   The SIM value is stored as an otherName of a subject\
    \ alternative\n   name; however, there are no constraints that can be placed on\
    \ this\n   form of the name.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   Confidentiality for a SIM value is created by\
    \ the iterated hashing of\n   the R, P, and SII values.  A SIM value depends on\
    \ two properties of a\n   hash function: the fact that it cannot be inverted and\
    \ the fact that\n   collisions (especially with formatted data) are rare.  The\
    \ current\n   attacks by [WANG] are not applicable to SIM values since the end\n\
    \   entity supplying the SII and SIItype values does not supply all of\n   the\
    \ data being hashed; i.e., the RA provides the R value.\n   In addition, a fairly\
    \ good password is needed to protect against\n   guessing attacks on SIMs.  Due\
    \ to the short length of many SIIs, it\n   is possible that an attacker may be\
    \ able to guess it with partial\n   information about gender, age, and date of\
    \ birth.  SIItype values are\n   very limited.  Therefore, it is important for\
    \ users to select a\n   fairly good password to prevent an attacker from determining\
    \ whether\n   a guessed SII is accurate.\n   This protocol assumes that Bob is\
    \ a trustworthy relying party who\n   will not reuse the Alice's information.\
    \  Otherwise, Bob could\n   \"impersonate\" Alice if only knowledge of P and SII\
    \ were used to\n   verify a subject's claimed identity.  Thus, this protocol MUST\
    \ be\n   used only with the protocols that make use of digital signatures\n  \
    \ generated using the subject's private key.\n   Digital signatures are used by\
    \ a message sender to demonstrate\n   knowledge of the private key corresponding\
    \ to the public key in a\n   certificate, and thus to authenticate and bind his\
    \ or her identity to\n   a signed message.  However, managing a private key is\
    \ vulnerable\n   under certain circumstances.  It is not fully guaranteed that\
    \ the\n   claimed private key is bound to the subject of a certificate.  So,\n\
    \   the SIM can enhance verification of user identity.\n   Whenever a certificate\
    \ needs to be updated, a new R SHOULD be\n   generated and the SIM SHOULD be recomputed.\
    \  Repeating the value of\n   the SIM from a previous certificate permits an attacker\
    \ to identify\n   certificates associated with the same individual, which may\
    \ be\n   undesirable for personal privacy purposes.\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   Jim Schaad (Soaring Hawk Consulting), Seungjoo Kim,\
    \ Jaeho Yoon,\n   Baehyo Park (KISA), Bill Burr, Morrie Dworkin (NIST), and the\n\
    \   Internet Security Technology Forum (ISTF) have significantly\n   contributed\
    \ to work on the SIM and PEPSI concept and identified a\n   potential security\
    \ attack.  Also their comments on the set of\n   desirable properties for the\
    \ PEPSI and enhancements to the PEPSI were\n   most illumination.  Also, thanks\
    \ to Russell Housley, Stephen Kent,\n   and Denis Pinkas for their contributions\
    \ to this document.\n"
- title: 10.  IANA Considerations
  contents:
  - "10.  IANA Considerations\n   In the future, IANA may be asked to establish a\
    \ registry of object\n   identifiers to promote interoperability in the specification\
    \ of SII\n   types.\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [RFC2119]         Bradner, S., \"Key words for\
    \ use in RFCs to Indicate\n                     Requirement Levels\", BCP 14,\
    \ RFC 2119, March 1997.\n   [RFC2986]         Nystrom, M. and B. Kaliski, \"PKCS\
    \ #10:\n                     Certification Request Syntax Specification Version\n\
    \                     1.7\", RFC 2986, November 2000.\n   [RFC3454]         Hoffman,\
    \ P. and M. Blanchet, \"Preparation of\n                     Internationalized\
    \ Strings (\"stringprep\")\", RFC\n                     3454, December 2002.\n\
    \   [RFC4043]         Pinkas, D. and T. Gindin, \"Internet X.509 Public\n    \
    \                 Key Infrastructure Permanent Identifier\", RFC 4043,\n     \
    \                May 2005.\n   [RFC4211]         Schaad, J., \"Internet X.509\
    \ Public Key\n                     Infrastructure Certificate Request Message\
    \ Format\n                     (CRMF)\", RFC 4211, September 2005.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [LDAPBIS STRPREP] Zeilenga, K., \"LDAP: Internationalized\
    \ String\n                     Preparation\", Work in Progress.\n   [FIPS 112]\
    \        Fedreal Information Processing Standards\n                     Publication\
    \ (FIPS PUB) 112, \"Password Usage\", 30\n                     May 1985.\n   [FIPS\
    \ 180-1]      Federal Information Processing Standards\n                     Publication\
    \ (FIPS PUB) 180-1, \"Secure Hash\n                     Standard\", 17 April 1995.\n\
    \   [FIPS 140-2]      Federal Information Processing Standards\n             \
    \        Publication (FIPS PUB) 140-2, \"Security\n                     Requirements\
    \ for Cryptographic Modules\", 25 May\n                     2001.\n   [WANG] \
    \           Xiaoyun Wang, Yiqun Lisa Yin, and Hongbo Yu,\n                   \
    \  \"Finding Collisions in the Full SHA-1\", Crypto'05.\n                    \
    \ <http://www.infosec.sdu.edu.cn/paper/sha1-crypto-\n                     auth-new-2-yao.pdf>\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Jongwook Park\n   Korea Information Security Agency\n\
    \   78, Garak-Dong, Songpa-Gu, Seoul, 138-803\n   REPUBLIC OF KOREA\n   Phone:\
    \ 2-405-5432\n   EMail: khopri@kisa.or.kr\n   Jaeil Lee\n   78, Garak-Dong, Songpa-Gu,\
    \ Seoul, 138-803\n   REPUBLIC OF KOREA\n   Korea Information Security Agency\n\
    \   Phone: 2-405-5300\n   EMail: jilee@kisa.or.kr\n   Hongsub Lee\n   Korea Information\
    \ Security Agency\n   78, Garak-Dong, Songpa-Gu, Seoul, 138-803\n   REPUBLIC OF\
    \ KOREA\n   Phone: 2-405-5100\n   EMail: hslee@kisa.or.kr\n   Sangjoon Park\n\
    \   BCQRE Co.,Ltd\n   Yuil Bldg. Dogok-dong 411-14, Kangnam-ku, Seoul, 135-270\n\
    \   REPUBLIC OF KOREA\n   EMail: sjpark@bcqre.com\n   Tim Polk\n   National Institute\
    \ of Standards and Technology\n   100 Bureau Drive, MS 8930\n   Gaithersburg,\
    \ MD 20899\n   EMail: tim.polk@nist.gov\n"
- title: Appendix A.  "Compilable" ASN.1 Module, 1988 Syntax
  contents:
  - "Appendix A.  \"Compilable\" ASN.1 Module, 1988 Syntax\n   PKIXSIM {iso(1) identified-organization(3)\
    \ dod(6) internet(1)\n      security(5) mechanisms(5) pkix(7) id-mod(0) id-mod-sim2005(38)\
    \ }\n   DEFINITIONS EXPLICIT TAGS ::=\n   BEGIN\n   -- EXPORTS ALL\n    IMPORTS\n\
    \    AlgorithmIdentifier, AttributeTypeAndValue FROM PKIX1Explicit88\n      {iso(1)\
    \ identified-organization(3) dod(6) internet(1) security(5)\n       mechanisms(5)\
    \ pkix(7) id-mod(0) id-pkix1-explicit(18)}\n   -- SIM\n   -- SIM certificate OID\n\
    \       id-pkix    OBJECT IDENTIFIER  ::=\n            { iso(1) identified-organization(3)\
    \ dod(6) internet(1)\n              security(5) mechanisms(5) pkix(7) }\n    \
    \  id-on       OBJECT IDENTIFIER ::= { id-pkix 8 }\n       id-on-SIM  OBJECT IDENTIFIER\
    \ ::= { id-on 6 }\n   -- Certificate Syntax\n       SIM ::= SEQUENCE {\n     \
    \        hashAlg          AlgorithmIdentifier,\n             authorityRandom \
    \ OCTET STRING,   -- RA-chosen random number\n                               \
    \               -- used in computation of\n                                  \
    \            -- pEPSI\n             pEPSI            OCTET STRING    -- hash of\
    \ HashContent\n                                              -- with algorithm\
    \ hashAlg\n         }\n   -- PEPSI\n       UTF8String ::= [UNIVERSAL 12] IMPLICIT\
    \ OCTET STRING\n       -- The content of this type conforms to RFC 2279\n    \
    \   HashContent ::= SEQUENCE {\n            userPassword     UTF8String,\n   \
    \                          -- user-supplied password\n            authorityRandom\
    \  OCTET STRING,\n                             -- RA-chosen random number\n  \
    \          identifierType   OBJECT IDENTIFIER,  -- SIItype\n            identifier\
    \       UTF8String          -- SII\n         }\n   -- Encrypted PEPSI\n   -- OID\
    \ for encapsulated content type\n       id-regEPEPSI OBJECT IDENTIFIER ::= { id-pkip\
    \ 3 }\n         EncryptedPEPSI ::= SEQUENCE {\n            identifierType  OBJECT\
    \ IDENTIFIER, -- SIItype\n            identifier      UTF8String,        -- SII\n\
    \            sIM             SIM                -- Value of the SIM\n        \
    \ }\n   END\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
