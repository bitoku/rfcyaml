- contents:
  - '    Dynamic Subscription to YANG Events and Datastores over NETCONF

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This document provides a Network Configuration Protocol (NETCONF)\n
    \  binding to the dynamic subscription capability of both subscribed\n   notifications
    and YANG-Push.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8640.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n   This document may contain
    material from IETF Documents or IETF\n   Contributions published or made publicly
    available before November\n   10, 2008.  The person(s) controlling the copyright
    in some of this\n   material may not have granted the IETF Trust the right to
    allow\n   modifications of such material outside the IETF Standards Process.\n
    \  Without obtaining an adequate license from the person(s) controlling\n   the
    copyright in such materials, this document may not be modified\n   outside the
    IETF Standards Process, and derivative works of it may\n   not be created outside
    the IETF Standards Process, except to format\n   it for publication as an RFC
    or to translate it into languages other\n   than English.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \  2. Terminology .....................................................3\n   3.
    Compatibility with <create-subscription> as Defined in\n      RFC 5277 ........................................................4\n
    \  4. Mandatory XML, Event Stream, and Datastore Support ..............4\n   5.
    NETCONF Connectivity and Dynamic Subscriptions ..................4\n   6. Notification
    Messages ...........................................5\n   7. Dynamic Subscriptions
    and RPC Error Responses ...................5\n   8. Security Considerations .........................................7\n
    \  9. IANA Considerations .............................................7\n   10.
    References .....................................................7\n      10.1.
    Normative References ......................................7\n      10.2. Informative
    References ....................................8\n   Appendix A. Examples ...............................................9\n
    \    A.1. Event Stream Discovery ......................................9\n     A.2.
    Dynamic Subscriptions ......................................10\n     A.3. Subscription
    State Notifications ...........................15\n     A.4. Filter Examples ............................................17\n
    \  Acknowledgments ...................................................19\n   Authors'
    Addresses ................................................19\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This document specifies the binding of a stream of events
    that form\n   part of a dynamic subscription to the Network Configuration Protocol\n
    \  (NETCONF) [RFC6241].  Dynamic subscriptions are defined in [RFC8639].\n   In
    addition, as [RFC8641] is itself built upon [RFC8639], this\n   document enables
    a NETCONF client to request via a dynamic\n   subscription, and receive, updates
    from a YANG datastore located on a\n   NETCONF server.\n   This document assumes
    that the reader is familiar with the\n   terminology and concepts defined in [RFC8639].\n"
  title: 1.  Introduction
- contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\",
    \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described
    in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all\n   capitals,
    as shown here.\n   The following terms are defined in [RFC8639]: dynamic subscription,\n
    \  event stream, notification message, publisher, receiver, subscriber,\n   and
    subscription.  This document does not define any additional\n   terms.\n"
  title: 2.  Terminology
- contents:
  - "3.  Compatibility with <create-subscription> as Defined in RFC 5277\n   A publisher
    is allowed to concurrently support dynamic subscription\n   RPCs as defined in
    [RFC8639] at the same time as the\n   <create-subscription> RPC defined in [RFC5277].
    \ However, a single\n   NETCONF transport session MUST NOT support both this specification\n
    \  and a subscription established by the <create-subscription> RPC\n   defined
    in [RFC5277].  To protect against any attempts to use a\n   single NETCONF transport
    session in this way:\n   o  A solution MUST reply with the <rpc-error> element
    [RFC6241]\n      containing the \"error-tag\" value of \"operation-not-supported\"
    if a\n      <create-subscription> RPC is received on a NETCONF session where\n
    \     an established subscription per [RFC8639] exists.\n   o  A solution MUST
    reply with the <rpc-error> element [RFC6241]\n      containing the \"error-tag\"
    value of \"operation-not-supported\" if\n      an \"establish-subscription\" request
    has been received on a NETCONF\n      session where the <create-subscription>
    RPC [RFC5277] has\n      successfully created a subscription.\n   If a publisher
    supports this specification but not subscriptions via\n   [RFC5277], the publisher
    MUST NOT advertise\n   \"urn:ietf:params:netconf:capability:notification:1.0\".\n"
  title: 3.  Compatibility with <create-subscription> as Defined in RFC 5277
- contents:
  - "4.  Mandatory XML, Event Stream, and Datastore Support\n   The \"encode-xml\"
    feature of [RFC8639] MUST be supported.  This\n   indicates that XML is a valid
    encoding for RPCs, state change\n   notifications, and subscribed content.\n   A
    NETCONF publisher supporting event stream subscription via\n   [RFC8639] MUST
    support the \"NETCONF\" event stream identified in that\n   document.\n"
  title: 4.  Mandatory XML, Event Stream, and Datastore Support
- contents:
  - "5.  NETCONF Connectivity and Dynamic Subscriptions\n   Management of dynamic
    subscriptions occurs via RPCs as defined in\n   [RFC8641] and [RFC8639].  For
    a dynamic subscription, if the NETCONF\n   session involved with the \"establish-subscription\"
    terminates, the\n   subscription MUST be terminated.\n   For a dynamic subscription,
    any \"modify-subscription\",\n   \"delete-subscription\", or \"resync-subscription\"
    RPCs MUST be sent\n   using the same NETCONF session upon which the referenced
    subscription\n   was established.\n"
  title: 5.  NETCONF Connectivity and Dynamic Subscriptions
- contents:
  - "6.  Notification Messages\n   Notification messages transported over NETCONF
    MUST be encoded in a\n   <notification> message as defined in [RFC5277], Section
    4.  And per\n   the <eventTime> object definition provided in [RFC5277], <eventTime>\n
    \  is populated with the event occurrence time.\n   For dynamic subscriptions,
    all notification messages MUST use the\n   NETCONF transport session used by the
    \"establish-subscription\" RPC.\n"
  title: 6.  Notification Messages
- contents:
  - "7.  Dynamic Subscriptions and RPC Error Responses\n   When an RPC error occurs
    as defined in [RFC8639], Section 2.4.6 and\n   [RFC8641], Appendix A, the NETCONF
    RPC reply MUST include an\n   <rpc-error> element per [RFC6241] with the error
    information\n   populated as follows:\n   o  An \"error-type\" node of \"application\".\n
    \  o  An \"error-tag\" node, where the value is a string that corresponds\n      to
    an identity associated with the error.  For the mechanisms\n      specified in
    this document, this \"error-tag\" will correspond to\n      the error identities
    in either (1) [RFC8639], Section 2.4.6, for\n      general subscription errors:\n
    \        error identity          uses error-tag\n         ----------------------
    \ -----------------------\n         dscp-unavailable        invalid-value\n         encoding-unsupported
    \   invalid-value\n         filter-unsupported      invalid-value\n         insufficient-resources
    \ resource-denied\n         no-such-subscription    invalid-value\n         replay-unsupported
    \     operation-not-supported\n      or (2) [RFC8641], Appendix A.1, for subscription
    errors specific\n      to YANG datastores:\n         error identity               uses
    error-tag\n         ---------------------------  -----------------------\n         cant-exclude
    \                operation-not-supported\n         datastore-not-subscribable
    \  invalid-value\n         no-such-subscription-resync  invalid-value\n         on-change-unsupported
    \       operation-not-supported\n         on-change-sync-unsupported   operation-not-supported\n
    \        period-unsupported           invalid-value\n         update-too-big               too-big\n
    \        sync-too-big                 too-big\n         unchanging-selection         operation-failed\n
    \  o  An \"error-severity\" of \"error\" (this MAY be included).\n   o  An \"error-app-tag\"
    node, where the value is a string that\n      corresponds to an identity associated
    with the error, as defined\n      in [RFC8639], Section 2.4.6 for general subscriptions
    and\n      [RFC8641], Appendix A.1 for datastore subscriptions.  The specific\n
    \     identity to use depends on the RPC for which the error occurred.\n      Each
    error identity will be inserted as the \"error-app-tag\"\n      following the
    form <modulename>:<identityname>.  An example of\n      such a valid encoding
    would be\n      \"ietf-subscribed-notifications:no-such-subscription\".  Viable\n
    \     errors for different RPCs are as follows:\n         RPC                     has
    base identity\n         ----------------------  ----------------------------\n
    \        establish-subscription  establish-subscription-error\n         modify-subscription
    \    modify-subscription-error\n         delete-subscription     delete-subscription-error\n
    \        kill-subscription       delete-subscription-error\n         resync-subscription
    \    resync-subscription-error\n   o  In the case of error responses to an \"establish-subscription\"
    or\n      \"modify-subscription\" request, there is the option of including an\n
    \     \"error-info\" node.  This node may contain XML-encoded data with\n      hints
    for parameter settings that might lead to successful RPC\n      requests in the
    future.  The yang-data structures from [RFC8639]\n      and [RFC8641] that may
    be returned are as follows:\n      establish-subscription returns hints in yang-data
    structure\n      ---------------------- -------------------------------------------\n
    \     target: event stream   establish-subscription-stream-error-info\n      target:
    datastore      establish-subscription-datastore-error-info\n      modify-subscription
    \   returns hints in yang-data structure\n      ---------------------- ----------------------------------------\n
    \     target: event stream   modify-subscription-stream-error-info\n      target:
    datastore      modify-subscription-datastore-error-info\n      The yang-data included
    in \"error-info\" SHOULD NOT include the\n      optional leaf \"reason\", as such
    a leaf would be redundant with\n      information that is already placed in the
    \"error-app-tag\".\n   In the case of an RPC error resulting from a \"delete-subscription\",\n
    \  \"kill-subscription\", or \"resync-subscription\" request, no\n   \"error-info\"
    needs to be included, as the \"subscription-id\" is the\n   only RPC input parameter
    and no hints regarding this RPC input\n   parameter need to be provided.\n"
  title: 7.  Dynamic Subscriptions and RPC Error Responses
- contents:
  - "8.  Security Considerations\n   This document does not introduce additional security
    considerations\n   for dynamic subscriptions beyond those discussed in [RFC8639].
    \ But\n   there is one consideration worthy of more refinement based on the\n
    \  connection-oriented nature of NETCONF.  Specifically, if a buggy or\n   compromised
    NETCONF subscriber sends a number of \"establish-\n   subscription\" requests,
    then these subscriptions accumulate and may\n   use up system resources.  In such
    a situation, subscriptions MAY be\n   terminated by terminating the underlying
    NETCONF session.  The\n   publisher MAY also suspend or terminate a subset of
    the active\n   subscriptions on that NETCONF session in order to reclaim resources\n
    \  and preserve normal operation for the other subscriptions.\n"
  title: 8.  Security Considerations
- contents:
  - "9.  IANA Considerations\n   This document has no IANA actions.\n"
  title: 9.  IANA Considerations
- contents:
  - '10.  References

    '
  - contents:
    - "10.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC5277]  Chisholm, S. and H. Trevino, \"NETCONF Event\n              Notifications\",
      RFC 5277, DOI 10.17487/RFC5277, July 2008,\n              <https://www.rfc-editor.org/info/rfc5277>.\n
      \  [RFC6241]  Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,\n              and
      A. Bierman, Ed., \"Network Configuration Protocol\n              (NETCONF)\",
      RFC 6241, DOI 10.17487/RFC6241, June 2011,\n              <https://www.rfc-editor.org/info/rfc6241>.\n
      \  [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in\n              RFC
      2119 Key Words\", BCP 14, RFC 8174,\n              DOI 10.17487/RFC8174, May
      2017,\n              <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8639]
      \ Voit, E., Clemm, A., Gonzalez Prieto, A., Nilsen-Nygaard,\n              E.,
      and A. Tripathy, \"Subscription to YANG Notifications\",\n              RFC
      8639, DOI 10.17487/RFC8639, September 2019,\n              <https://www.rfc-editor.org/info/rfc8639>.\n
      \  [RFC8641]  Clemm, A. and E. Voit, \"Subscription to YANG Notifications\n
      \             for Datastore Updates\", RFC 8641, DOI 10.17487/RFC8641,\n              September
      2019, <https://www.rfc-editor.org/info/rfc8641>.\n   [W3C.REC-xml-20081126]\n
      \             Bray, T., Paoli, J., Sperberg-McQueen, M., Maler, E., and\n              F.
      Yergeau, \"Extensible Markup Language (XML) 1.0 (Fifth\n              Edition)\",
      World Wide Web Consortium Recommendation\n              REC-xml-20081126, November
      2008,\n              <https://www.w3.org/TR/2008/REC-xml-20081126>.\n"
    title: 10.1.  Normative References
  - contents:
    - "10.2.  Informative References\n   [RFC8347]  Liu, X., Ed., Kyparlis, A., Parikh,
      R., Lindem, A., and M.\n              Zhang, \"A YANG Data Model for the Virtual
      Router\n              Redundancy Protocol (VRRP)\", RFC 8347,\n              DOI
      10.17487/RFC8347, March 2018,\n              <https://www.rfc-editor.org/info/rfc8347>.\n
      \  [XPATH]    Clark, J. and S. DeRose, \"XML Path Language (XPath)\n              Version
      1.0\", November 1999,\n              <https://www.w3.org/TR/1999/REC-xpath-19991116>.\n"
    title: 10.2.  Informative References
  title: 10.  References
- contents:
  - "Appendix A.  Examples\n   This appendix is non-normative.  Additionally, the
    subscription \"id\"\n   values of 22, 23, 39, and 99 used below are just examples.
    \ In\n   production, the actual values of \"id\" might not be small integers.\n"
  - contents:
    - "A.1.  Event Stream Discovery\n   As defined in [RFC8639], an event stream exposes
      a continuous set of\n   events available for subscription.  A NETCONF client
      can retrieve the\n   list of available event streams from a NETCONF publisher
      using the\n   <get> operation against the top-level \"streams\" container defined
      in\n   [RFC8639], Section 3.1.\n   The following XML example [W3C.REC-xml-20081126]
      illustrates the\n   retrieval of the list of available event streams:\n"
    - "<rpc message-id=\"101\"\n  xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n
      \ <get>\n    <filter type=\"subtree\">\n      <streams\n     xmlns=\"urn:ietf:params:xml:ns:yang:ietf-subscribed-notifications\"/>\n
      \   </filter>\n  </get>\n"
    - "</rpc>\n          Figure 1: <get> Request for Retrieval of Event Streams\n
      \  After such a request, the NETCONF publisher returns a list of\n   available
      event streams as well as additional information that might\n   exist in the
      container.\n"
    title: A.1.  Event Stream Discovery
  - contents:
    - 'A.2.  Dynamic Subscriptions

      '
    - contents:
      - "A.2.1.  Establishing Dynamic Subscriptions\n   Figure 2 shows two successful
        \"establish-subscription\" RPC requests\n   as per [RFC8639].  The first request
        is given a subscription \"id\"\n   of 22, and the second is given an \"id\"
        of 23.\n              +------------+                 +-----------+\n              |
        Subscriber |                 | Publisher |\n              +------------+                 +-----------+\n
        \                   |                              |\n                    |
        \   Capability Exchange       |\n                    |<---------------------------->|\n
        \                   |                              |\n                    |
        \                             |\n                    |    establish-subscription
        \   |\n                    |----------------------------->|  (a)\n                    |
        RPC Reply: OK, id = 22       |\n                    |<-----------------------------|
        \ (b)\n                    |                              |\n                    |
        notification message (for 22)|\n                    |<-----------------------------|\n
        \                   |                              |\n                    |
        \                             |\n                    |    establish-subscription
        \   |\n                    |----------------------------->|\n                    |
        notification message (for 22)|\n                    |<-----------------------------|\n
        \                   | RPC Reply: OK, id = 23       |\n                    |<-----------------------------|\n
        \                   |                              |\n                    |
        \                             |\n                    | notification message
        (for 22)|\n                    |<-----------------------------|\n                    |
        notification message (for 23)|\n                    |<-----------------------------|\n
        \                   |                              |\n          Figure 2:
        Multiple Subscriptions over a NETCONF Session\n   To provide examples of the
        information being transported, example\n   messages for interactions (a) and
        (b) in Figure 2 are detailed below\n   (Figures 3 and 4):\n"
      - "<rpc message-id=\"102\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n
        \ <establish-subscription\n      xmlns=\"urn:ietf:params:xml:ns:yang:ietf-subscribed-notifications\">\n
        \   <stream-xpath-filter xmlns:ex=\"https://example.com/events\">\n      /ex:foo/\n
        \   </stream-xpath-filter>\n    <stream>NETCONF</stream>\n    <dscp>10</dscp>\n
        \ </establish-subscription>\n"
      - "</rpc>\n              Figure 3: \"establish-subscription\" Request (a)\n
        \  As the NETCONF publisher was able to fully satisfy the request (a),\n   the
        publisher sends the subscription \"id\" of the accepted\n   subscription in
        its reply message (b):\n  <rpc-reply message-id=\"102\"\n    xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n
        \   <id\n      xmlns=\"urn:ietf:params:xml:ns:yang:ietf-subscribed-notifications\">\n
        \     22\n    </id>\n  </rpc-reply>\n            Figure 4: A Successful \"establish-subscription\"
        (b)\n   If the NETCONF publisher had not been able to fully satisfy the\n
        \  request or the subscriber has no authorization to establish the\n   subscription,
        the publisher would have sent an RPC error response.\n   For instance, if
        the \"dscp\" value of 10 asserted by the subscriber in\n   Figure 3 proved
        unacceptable, the publisher may have returned:\n   <rpc-reply message-id=\"102\"\n
        \    xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n     <rpc-error>\n
        \     <error-type>application</error-type>\n      <error-tag>invalid-value</error-tag>\n
        \     <error-severity>error</error-severity>\n      <error-app-tag>\n        ietf-subscribed-notifications:dscp-unavailable\n
        \     </error-app-tag>\n     </rpc-error>\n   </rpc-reply>\n            Figure
        5: An Unsuccessful \"establish-subscription\"\n   The subscriber can use this
        information in future attempts to\n   establish a subscription.\n"
      title: A.2.1.  Establishing Dynamic Subscriptions
    - contents:
      - "A.2.2.  Modifying Dynamic Subscriptions\n   An existing subscription may
        be modified.  The following exchange\n   shows a negotiation of such a modification
        via several exchanges\n   between a subscriber and a publisher.  This negotiation
        consists of a\n   failed RPC modification request/response followed by a\n
        \  successful one.\n              +------------+                 +-----------+\n
        \             | Subscriber |                 | Publisher |\n              +------------+
        \                +-----------+\n                    |                              |\n
        \                   | notification message (for 23)|\n                    |<-----------------------------|\n
        \                   |                              |\n                    |
        modify-subscription (id = 23)|\n                    |----------------------------->|
        \ (c)\n                    | RPC error (with hint)        |\n                    |<-----------------------------|
        \ (d)\n                    |                              |\n                    |
        modify-subscription (id = 23)|\n                    |----------------------------->|\n
        \                   | RPC Reply: OK                |\n                    |<-----------------------------|\n
        \                   |                              |\n                    |
        notification message (for 23)|\n                    |<-----------------------------|\n
        \                   |                              |\n   Figure 6: Interaction
        Model for Successful Subscription Modification\n   If the subscription being
        modified in Figure 6 is a datastore\n   subscription as per [RFC8641], the
        modification request made in (c)\n   may look like that shown in Figure 7.
        \ As can be seen, the\n   modifications being attempted are the application
        of a new XPath\n   filter as well as the setting of a new periodic time interval.\n"
      - "<rpc message-id=\"303\"\n  xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n
        \ <modify-subscription\n       xmlns=\"urn:ietf:params:xml:ns:yang:ietf-subscribed-notifications\"\n
        \      xmlns:yp=\"urn:ietf:params:xml:ns:yang:ietf-yang-push\">\n    <id>23</id>\n
        \   <yp:datastore-xpath-filter xmlns:ex=\"https://example.com/datastore\">\n
        \       /ex:foo/ex:bar\n    </yp:datastore-xpath-filter>\n    <yp:periodic>\n
        \     <yp:period>500</yp:period>\n    </yp:periodic>\n  </modify-subscription>\n"
      - "</rpc>\n              Figure 7: Subscription Modification Request (c)\n   If
        the NETCONF publisher can satisfy both changes, the publisher\n   sends a
        positive result for the RPC.  If the NETCONF publisher cannot\n   satisfy
        either of the proposed changes, the publisher sends an RPC\n   error response
        (d).  Figure 8 shows an example RPC error response for\n   (d) that includes
        a hint.  This hint is an alternative time period\n   value that might have
        resulted in a successful modification:\n   <rpc-reply message-id=\"303\"\n
        \    xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n     <rpc-error>\n
        \      <error-type>application</error-type>\n       <error-tag>invalid-value</error-tag>\n
        \      <error-severity>error</error-severity>\n       <error-app-tag>\n           ietf-yang-push:period-unsupported\n
        \      </error-app-tag>\n       <error-info>\n         <modify-subscription-datastore-error-info\n
        \            xmlns=\"urn:ietf:params:xml:ns:yang:ietf-yang-push\">\n           <period-hint>\n
        \              3000\n           </period-hint>\n         </modify-subscription-datastore-error-info>\n
        \      </error-info>\n     </rpc-error>\n   </rpc-reply>\n           Figure
        8: \"modify-subscription\" Failure with Hint (d)\n"
      title: A.2.2.  Modifying Dynamic Subscriptions
    - contents:
      - "A.2.3.  Deleting Dynamic Subscriptions\n   Figure 9 demonstrates the deletion
        of a subscription.  This\n   subscription may have been to either a stream
        or a datastore.\n  <rpc message-id=\"103\"\n    xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n
        \   <delete-subscription\n      xmlns=\"urn:ietf:params:xml:ns:yang:ietf-subscribed-notifications\">\n
        \     <id>22</id>\n    </delete-subscription>\n  </rpc>\n                      Figure
        9: \"delete-subscription\"\n   If the NETCONF publisher can satisfy the request,
        the publisher\n   returns a reply indicating success.\n   If the NETCONF publisher
        cannot satisfy the request, the publisher\n   sends an <rpc-error> element
        indicating that the modification didn't\n   work.  Figure 10 shows a valid
        response for an existing valid\n   subscription \"id\", but that subscription
        \"id\" was created on a\n   different NETCONF transport session:\n   <rpc-reply
        message-id=\"103\"\n     xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n
        \    <rpc-error>\n       <error-type>application</error-type>\n       <error-tag>invalid-value</error-tag>\n
        \      <error-severity>error</error-severity>\n       <error-app-tag>\n           ietf-subscribed-notifications:no-such-subscription\n
        \      </error-app-tag>\n     </rpc-error>\n   </rpc-reply>\n             Figure
        10: An Unsuccessful \"delete-subscription\"\n"
      title: A.2.3.  Deleting Dynamic Subscriptions
    title: A.2.  Dynamic Subscriptions
  - contents:
    - "A.3.  Subscription State Notifications\n   A publisher will send subscription
      state notifications for dynamic\n   subscriptions according to the definitions
      in [RFC8639].\n"
    - contents:
      - "A.3.1.  \"subscription-modified\"\n   As per Section 2.7.2 of [RFC8639],
        a \"subscription-modified\" might be\n   sent over NETCONF if the definition
        of a configured filter changes.\n   A subscription state notification encoded
        in XML would look like:\n"
      - "<notification xmlns=\"urn:ietf:params:xml:ns:netconf:notification:1.0\">\n
        \ <eventTime>2007-09-01T10:00:00Z</eventTime>\n  <subscription-modified\n
        \     xmlns=\"urn:ietf:params:xml:ns:yang:ietf-subscribed-notifications\">\n
        \   <id>39</id>\n    <stream-xpath-filter xmlns:ex=\"https://example.com/events\">\n
        \     /ex:foo\n    </stream-xpath-filter>\n    <stream>NETCONF</stream>\n
        \ </subscription-modified>\n"
      - "</notification>\n    Figure 11: \"subscription-modified\" Subscription State
        Notification\n"
      title: A.3.1.  "subscription-modified"
    - contents:
      - "A.3.2.  \"subscription-resumed\" and \"replay-complete\"\n   A \"subscription-resumed\"
        would look like:\n  <notification\n    xmlns=\"urn:ietf:params:xml:ns:netconf:notification:1.0\">\n
        \   <eventTime>2007-09-01T10:00:00Z</eventTime>\n    <subscription-resumed\n
        \     xmlns=\"urn:ietf:params:xml:ns:yang:ietf-subscribed-notifications\">\n
        \     <id>39</id>\n    </subscription-resumed>\n  </notification>\n              Figure
        12: \"subscription-resumed\" Notification\n   The \"replay-complete\" is virtually
        identical, with \"subscription-\n   resumed\" simply being replaced by \"replay-complete\".\n"
      title: A.3.2.  "subscription-resumed" and "replay-complete"
    - contents:
      - "A.3.3.  \"subscription-terminated\" and \"subscription-suspended\"\n   A
        \"subscription-terminated\" would look like:\n  <notification\n    xmlns=\"urn:ietf:params:xml:ns:netconf:notification:1.0\">\n
        \   <eventTime>2007-09-01T10:00:00Z</eventTime>\n    <subscription-terminated\n
        \     xmlns=\"urn:ietf:params:xml:ns:yang:ietf-subscribed-notifications\">\n
        \     <id>39</id>\n      <reason>\n         suspension-timeout\n      </reason>\n
        \   </subscription-terminated>\n  </notification>\n   Figure 13: \"subscription-terminated\"
        Subscription State Notification\n   The \"subscription-suspended\" is virtually
        identical, with\n   \"subscription-terminated\" simply being replaced by \"subscription-\n
        \  suspended\".\n"
      title: A.3.3.  "subscription-terminated" and "subscription-suspended"
    title: A.3.  Subscription State Notifications
  - contents:
    - "A.4.  Filter Examples\n   This appendix provides examples that illustrate both
      XPath and\n   subtree methods of filtering event record contents.  The examples
      are\n   based on the YANG notification \"vrrp-protocol-error-event\" as defined\n
      \  per the ietf-vrrp YANG data model in [RFC8347].  Event records based\n   on
      this specification that are generated by the publisher might\n   appear as:\n
      \ <notification xmlns=\"urn:ietf:params:xml:ns:netconf:notification:1.0\">\n
      \   <eventTime>2018-09-14T08:22:33.44Z</eventTime>\n    <vrrp-protocol-error-event\n
      \        xmlns=\"urn:ietf:params:xml:ns:yang:ietf-vrrp\">\n       <protocol-error-reason>checksum-error</protocol-error-reason>\n
      \   </vrrp-protocol-error-event>\n  </notification>\n             Figure 14:
      Example VRRP Notification per RFC 8347\n   Suppose that a subscriber wanted
      to establish a subscription that\n   only passes instances of event records
      where there is a\n   \"checksum-error\" as part of a Virtual Router Redundancy
      Protocol\n   (VRRP) protocol event.  Also, assume that the publisher places
      such\n   event records into the NETCONF stream.  To get a continuous series
      of\n   matching event records, the subscriber might request the application\n
      \  of an XPath filter against the NETCONF stream.  An \"establish-\n   subscription\"
      RPC to meet this objective might be:\n <rpc message-id=\"601\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n
      \  <establish-subscription\n     xmlns=\"urn:ietf:params:xml:ns:yang:ietf-subscribed-notifications\">\n
      \    <stream>NETCONF</stream>\n     <stream-xpath-filter xmlns=\"urn:ietf:params:xml:ns:yang:ietf-vrrp\">\n
      \      /vrrp-protocol-error-event[\n          vrrp:protocol-error-reason=\"vrrp:checksum-error\"]\n
      \    </stream-xpath-filter>\n   </establish-subscription>\n </rpc>\n       Figure
      15: Establishing a Subscription Error Reason via XPath\n   For more examples
      of XPath filters, see [XPATH].\n   Suppose that the \"establish-subscription\"
      in Figure 15 was accepted.\n   And suppose that a subscriber decided later on
      that they wanted to\n   broaden this subscription to cover all VRRP protocol
      events (i.e.,\n   not just those with a \"checksum-error\").  The subscriber
      might\n   attempt to modify the subscription in a way that replaces the XPath\n
      \  filter with a subtree filter that sends all VRRP protocol events to a\n   subscriber.
      \ Such a \"modify-subscription\" RPC might look like:\n <rpc message-id=\"602\"
      xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n   <modify-subscription\n
      \     xmlns=\"urn:ietf:params:xml:ns:yang:ietf-subscribed-notifications\">\n
      \    <id>99</id>\n     <stream-subtree-filter>\n      <vrrp-protocol-error-event\n
      \            xmlns=\"urn:ietf:params:xml:ns:yang:ietf-vrrp\"/>\n     </stream-subtree-filter>\n
      \  </modify-subscription>\n </rpc>\n               Figure 16: Example \"modify-subscription\"
      RPC\n   For more examples of subtree filters, see [RFC6241], Section 6.4.\n"
    title: A.4.  Filter Examples
  title: Appendix A.  Examples
- contents:
  - "Acknowledgments\n   We wish to acknowledge the helpful contributions, comments,
    and\n   suggestions that were received from Andy Bierman, Yan Gang, Sharon\n   Chisholm,
    Hector Trevino, Peipei Guo, Susan Hares, Tim Jenkins,\n   Balazs Lengyel, Martin
    Bjorklund, Mahesh Jethanandani, Kent Watsen,\n   Qin Wu, and Guangying Zheng.\n"
  title: Acknowledgments
- contents:
  - "Authors' Addresses\n   Eric Voit\n   Cisco Systems\n   Email: evoit@cisco.com\n
    \  Alexander Clemm\n   Futurewei\n   Email: ludwig@clemm.org\n   Alberto Gonzalez
    Prieto\n   Microsoft\n   Email: alberto.gonzalez@microsoft.com\n   Einar Nilsen-Nygaard\n
    \  Cisco Systems\n   Email: einarnn@cisco.com\n   Ambika Prasad Tripathy\n   Cisco
    Systems\n   Email: ambtripa@cisco.com\n"
  title: Authors' Addresses
