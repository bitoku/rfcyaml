- title: __initial_text__
  contents:
  - '                  EBCDIC/ASCII MAPPING FOR NETWORK RJE

    '
- title: A. INTRODUCTION
  contents:
  - "A. INTRODUCTION\n   Under NETRJS [1], CCN's Network rje protocol [2], a virtual\
    \ remote\n   batch terminal may be either EBCDIC or ASCII.  CCN operates an IBM\n\
    \   360/91 which performs all of its normal processing in EBCDIC.  When a\n  \
    \ virtual ASCII terminal signs onto NETRJS, CCN translates the \"card\n   reader\"\
    \ stream to EBCDIC and translates the \"printer\" stream back to\n   ASCII [3].\n\
    \   In recent months, a number of ASCII hosts (RAND PDP-10, Utah PDP-10,\n   Illinois\
    \ PDP-11) have completed user processes for NETRJS.  Several\n   users at these\
    \ sites have noted deficiencies in the ASCII/EBCDIC\n   mapping rules originally\
    \ implemented in NETRJS.  Since their\n   objections were well founded, we have\
    \ altered the existing mapping\n   and added a new one.\n   This RFC has three\
    \ purposes:\n      (1) to make all users of NETRJS aware of the changed ASCII\
    \ mapping\n      (2) to call this problem to the attention of the Network RJE\n\
    \          Protocol Committee\n      (3) to knowledge and support Joel Winett's\
    \ pioneering work [4] in\n          this area.\n"
- title: THE EBCDIC CHIMERA
  contents:
  - "THE EBCDIC CHIMERA\n   A year ago, Joel Winett Published RFC #183, containing\
    \ the results of\n   his careful research into just what EBCDIC really means.\
    \  He sounded\n   a clarion call for all EBCDIC sites to join in defining a Network\n\
    \   standards mapping.  At this time, we at CCN were primarily absorbed\n   in\
    \ the timely implementation of the NETRJS protocol to serve an\n   EBCDIC (!)\
    \ user site, RAND, so we were not very supportive of his\n   efforts.\n   RFC\
    \ #183 is a valuable document; we hope a copy falls into the hands\n   of Armonk.\
    \  It is clear from RFC #183 that EBCDIC consists of a\n   standard (\"basic\"\
    ) set of characters, combined with a number of\n   overlapping ad-hoc character\
    \ happenings.  Fortunately, if we exclude\n   special-purpose text composition\
    \ programs, IBM 360 programs use only\n   the 89 \"basic\" EBCDIC graphics [5]\
    \ shown in RFC #183 as well as in\n   Figure 1.  An IBM 029 \"EBCDIC\" keypunch\
    \ can create 63 graphics: the\n   89 basic EBCDIC graphics less the 26 lower case\
    \ letters.  In fact,\n   OS/360 requires an even smaller subset of EBCDIC, 60\
    \ characters\n   commonly called the \"PL/1 character set\".  The PL/1 set consists\
    \ of\n   the 89 basic graphics, less the 26 lower case letters as well as the\n\
    \   three graphics <cent sign>!\" (cent sign, exclamation point, and\n   quotation).\n"
- title: C. CHARACTER MAPPING IN NETRJS
  contents:
  - "C. CHARACTER MAPPING IN NETRJS\n   We consider now the requirements of a ASCII/EBCDIC\
    \ mapping for NETRJS\n   or any rje protocol.  These requirements are as follows:\n\
    \      Efficiency:\n      The translation should be character-to-character, so\
    \ that the CPU\n      operation \"translate\" can be used and character scans\
    \ obviated.\n      This is important because a significant volume of character\
    \ data\n      may be moved during rje operations.\n      Usability:\n      (1)\
    \ All of the 89 EBCDIC graphics should be mapped into\n          corresponding\
    \ ASCII characters.\n      (2) The mapping should be as nearly transparent as\
    \ possible, i.e.,\n          whenever the same graphic appears in both sets, it\
    \ should map\n          onto itself.\n      (3) To minimize the adaptation required\
    \ of an EBCDIC-oriented\n          programmer, the ASCII graphics should evoke\
    \ the corresponding\n          EBCDIC graphic, when they are not identical.\n\
    \   Theses considerations led us to incorporate Winett's rules II (a) and\n  \
    \ III (b) (see page 4 of the RFC #183) into NETRJS:\n        ASCII           \
    \     EBCDIC\n        -----                ------\n          |               \
    \      |\n          ~                 <bent bar>\n          \\               \
    \  <cent sign>\n   This defines all 89 basic EBCDIC graphics in terms of ASCII.\n\
    \   However, there is still a question of how to map the 6 \"maverick\"\n   ASCII\
    \ characters ( []{}^` ) which are not in EBCDIC and not in the\n   list above.\n\
    \   We could (and did) take the view that all CCN users are concerned\n   only\
    \ with writing and executing normal 360 programs using EBCDIC and\n   that they\
    \ would enter one of the maverick ASCII graphics only in\n   error.  Our original\
    \ choice, therefore, was to map the mavericks in\n   the input into EBCDIC question\
    \ marks.  We also assumed that, if a\n   user needs to access a larger subset\
    \ of EBCDIC than the basic 89, he\n   should do so by doing his rje directly in\
    \ EBCDIC.\n   We now realize that there were two deficiencies in the original\n\
    \   mapping rules.\n      1. The 360 program may be intended to manipulate ASCII\
    \ text from\n          the Network.  In that case, the Network user needs to have\
    \ all\n          ASCII characters, including the mavericks, uniquely mapped\n\
    \          into EBCDIC in some (standard) manner.\n      2. The present mapping\
    \ is convenient only if a user at an AT&T\n          Model 33/35 Teletype (or\
    \ simulator thereof) needs a different\n          mapping for ease of use.\n \
    \  For the first case, we have changed the mapping of the 6 maverick\n   ASCII\
    \ characters from \"?\", using instead Winett's rules III (c) and\n   III (d):\n\
    \      ASCII             EBCDIC\n      -----             ------\n        [   \
    \             X'AD'\n        ]                X'BD'\n        {               \
    \ X'8B'\n        }                X'9B'\n        ^                X'71'\n    \
    \    `                X'79'\n   For the user with a Model 33/35 Teletype, we have\
    \ expanded the set of\n   virtual remote batch terminal types, adding \"TTY\"\
    \ to \"ASCII\" and\n   \"EBCDIC\".  A user establishes his virtual remote batch\
    \ terminal as\n   type TTY by either doing his initial ICP to socket 15 (vs. 11\
    \ for\n   EBCDIC, 13 for ASCII), or by doing an ICP to Socket 1 and entering\n\
    \   the command \"TTYRJS\" (vs. \"RJS\" for EBCDIC, \"ARJS\" for ASCII).  The\n\
    \   mapping used by NETRJS for a TTY remote is:\n   Model 33          Corresponding\n\
    \   Graphic               ASCII               EBCDIC\n   --------          -------------\
    \           ------\n      \\                   \\                   <bent bar>\n\
    \    <up arrow>            ^                     |\n    <left arrow>         \
    \ _                     _\n      [                   [                  <cent\
    \ sign>\n      ]                   ]                   X'BD'\n   This is ugly,\
    \ but it is probably the best we can do.\n"
- title: D. CONCLUSIONS
  contents:
  - "D. CONCLUSIONS\n   It is obvious that one pair of translation tables won't do\
    \ the job;\n   NETRJS needs (at least) two mappings for each direction.  How long\n\
    \   will it be before an important set of users appears with a different\n   terminal\
    \ character set, requiring yet a different mapping? [6] An rje\n   server site\
    \ needs to be prepared to provide a variety of translation\n   tables, and perhaps\
    \ to allow a user to specify his own table(s); this\n   mini-subset of \"Date\
    \ Reconfiguration Service\" might be necessary to\n   prevent translation-table-proliferation.\
    \  The tendency in Network\n   discussions has been to put the burden upon the\
    \ user sites to adapt\n   to different conventions.  In the real world of users\
    \ and servers,\n   the server will often have to do the adapting.\n"
- title: NOTES AND REFERENCES
  contents:
  - "NOTES AND REFERENCES\n      [1] R.T. Braden, Interim NETRJS Specifications, RFC\
    \ #189 (NIC\n          #7133), July 15, 1971.\n      [2] Please note that \"RJS\"\
    \ is the proper name of a particular rje\n          package written at CCN the\
    \ generic name for remote batch\n          service is \"rje\".\n      [3] Notice\
    \ that the mapping question discussed in this RFC is\n          significant only\
    \ for the virtual card reader and printer\n          connections in NETRJS.  The\
    \ punch connection is always\n          transparent, i.e., never translated. \
    \ The remote operator\n          connections use the extended EBCDIC/ASCII mapping\
    \ including\n          the maverick characters, but this is not important since\n\
    \          operator commands require only a limited character set.\n      [4]\
    \ Joel Winett, \"_The_ EBCDIC Codes and their Mapping to ASCII\",\n          RFC\
    \ #183 (NIC #7127), July 21, 1971.\n      [5] Winett lists only 88 basic EBCDIC\
    \ graphics, excluding the\n          space which he regards as a control character.\
    \  This is a\n          matter of taste, but we find it less confusing to include\
    \ the\n          space as a graphic.\n      [6] CCN recently received a new Teletype-replacement\
    \ terminal.\n          This machine has a bastardized graphic character set --\
    \ mostly\n          ASCII, with a sprinkling of both (!) EBCDIC and TTY.\n   \
    \           +-------------------------------------+\n              |         \
    \                 Full ASCII |\n              | a b ... z  | ` ^ { }  ~      \
    \       |\n              |                                     |\n        +-----+-------------------------------------+--------------+\n\
    \        |33/35|                                     |   AT&T TWX   |\n      \
    \  |     |          `   [   ]                  | (Mod 33/35   |\n        |   \
    \  |                                     |      tty)    |\n +------+-----+------+-----------------------+\
    \      |              |\n |Basic |     |      |                       |      |\
    \              |\n |EBCDIC|     |      |     <SP>              |      |      \
    \        |\n |      |     |   \"  |     A B ... Z         |      | <left arrow>\
    \ |\n |      |     |   !  |     0 1 ... 9         |      |              |\n |\
    \      |     |      |     + - * / ( )       |      |  <up arrow>  |\n |      |\
    \     |      |     . , ' =           |      |              |\n |      |     |\
    \      |     $ &               |      |              |\n |      |     |      |\
    \   < > : ? % # @       |      |              |\n |      |     |      |      \
    \                 |      |              |\n |      +-----+------+-----------------------+------+--------------+\n\
    \ |            |      |                       |      |\n |            |      |\
    \        _              |      |\n |            |      |                     \
    \  |      |\n |            +------+-----------------------+------+\n |       \
    \            |                       |\n |                   | PL/1   <bent bar>\
    \ |   |\n |                   |  Set                  |\n |                  \
    \ +-----------------------+\n |                           <cent sign>     |\n\
    \ |  Basic EBCDIC                             |\n +-------------------------------------------+\n\
    \               Figure 1.  Character Sets Commonly Abused\n"
- title: '[This RFC is also available in .PS and .PDF format.]'
  contents:
  - "[This RFC is also available in .PS and .PDF format.]\n        [This RFC was put\
    \ into machine readable form for entry]\n    [into the online RFC archives by\
    \ Helene Morin, Viagenie, 12/99]\n"
