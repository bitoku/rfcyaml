- title: __initial_text__
  contents:
  - ''
- title: Independent Submission                                          C. Chung
  contents:
  - "Independent Submission                                          C. Chung\n  \
    \              Comcast's Web Notification System Design\n"
- title: Abstract
  contents:
  - "Abstract\n   The objective of this document is to describe a method of providing\n\
    \   critical end-user notifications to web browsers, which has been\n   deployed\
    \ by Comcast, an Internet Service Provider (ISP).  Such a\n   notification system\
    \ is being used to provide near-immediate\n   notifications to customers, such\
    \ as to warn them that their traffic\n   exhibits patterns that are indicative\
    \ of malware or virus infection.\n   There are other proprietary systems that\
    \ can perform such\n   notifications, but those systems utilize Deep Packet Inspection\
    \ (DPI)\n   technology.  In contrast to DPI, this document describes a system\n\
    \   that does not rely upon DPI, and is instead based in open IETF\n   standards\
    \ and open source applications.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This is a contribution to\
    \ the RFC Series, independently of any other\n   RFC stream.  The RFC Editor has\
    \ chosen to publish this document at\n   its discretion and makes no statement\
    \ about its value for\n   implementation or deployment.  Documents approved for\
    \ publication by\n   the RFC Editor are not a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6108.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. High-Level Design of the System .................................3\n  \
    \ 3. Design Requirements .............................................3\n    \
    \  3.1. General Requirements .......................................4\n      3.2.\
    \ Web Proxy Requirements .....................................6\n      3.3. ICAP\
    \ Server Requirements ...................................7\n      3.4. Messaging\
    \ Service Requirements .............................8\n   4. Implementation Details\
    \ ..........................................8\n      4.1. Functional Components\
    \ Described, as Implemented ............9\n      4.2. Functional Diagram, as Implemented\
    \ ........................10\n   5. High-Level Communication Flow, as Implemented\
    \ ..................11\n   6. Communication between Web Proxy and ICAP Server,\
    \ as\n      Implemented ....................................................12\n\
    \   7. End-to-End Web Notification Flow, as Implemented ...............13\n  \
    \    7.1. Step-by-Step Description of the End-to-End Web\n           Notification\
    \ Flow .........................................14\n      7.2. Diagram of the\
    \ End-to-End Web Notification Flow ...........15\n   8. Example HTTP Headers and\
    \ JavaScript for a Web Notification .....16\n   9. Deployment Considerations ......................................18\n\
    \   10. Security Considerations .......................................19\n  \
    \ 11. Debating the Necessity of Such a Critical Notification\n       System ........................................................19\n\
    \   12. Suggesting a Walled Garden as an Alternative ..................20\n  \
    \ 13. Intended Next Steps ...........................................21\n   14.\
    \ Acknowledgements ..............................................21\n   15. References\
    \ ....................................................21\n      15.1. Normative\
    \ References .....................................21\n      15.2. Informative\
    \ References ...................................23\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Internet Service Providers (ISPs) have a need for a system\
    \ that is\n   capable of communicating with customers in a nearly immediate manner,\n\
    \   to convey critical service notices such as warnings concerning likely\n  \
    \ malware infection.  Given the prevalence of the web browser as the\n   predominant\
    \ client software in use by Internet users, the web browser\n   is an ideal vehicle\
    \ for providing these notifications.  This document\n   describes a system that\
    \ has been deployed by Comcast, a broadband\n   ISP, to provide near-immediate\
    \ notifications to web browsers.\n   In the course of evaluating potential solutions,\
    \ the authors\n   discovered that the large majority of commercially available\
    \ systems\n   utilized Deep Packet Inspection (DPI) technology.  While a DPI-based\n\
    \   system would certainly work, Comcast and other ISPs are trying to\n   avoid\
    \ widespread deployment and use of DPI, and are searching for\n   alternatives.\
    \  Thus, Comcast desired to use a system that is based on\n   open standards and\
    \ non-proprietary software, and that did not require\n   the use of DPI.  While\
    \ the system described herein is specific to the\n   Data-Over-Cable Service Interface\
    \ Specifications (DOCSIS,\n   [CableLabs_DOCSIS]) networks used by most cable-based\
    \ broadband ISPs,\n   concepts described in this document can generally be applied\
    \ to many\n   different types of networks should those ISPs be interested in\n\
    \   alternatives to DPI.\n"
- title: 2.  High-Level Design of the System
  contents:
  - "2.  High-Level Design of the System\n   The web notification system design is\
    \ based on the use of the\n   Internet Content Adaptation Protocol (ICAP) [RFC3507].\
    \  The design\n   uses open source applications, which are the Squid web proxy,\n\
    \   GreasySpoon ICAP server, and Apache Tomcat.  ICAP, an existing IETF\n   protocol,\
    \ allows for message transformation or adaptation.  An ICAP\n   client passes\
    \ a HyperText Transport Protocol (HTTP, [RFC2616])\n   response to an ICAP server\
    \ for content adaption.  The ICAP server in\n   turn responds back to the client\
    \ with the HTTP response containing\n   the notification message by using the\
    \ \"respmod\" method defined in\n   Section 3.2 of [RFC3507].\n"
- title: 3.  Design Requirements
  contents:
  - "3.  Design Requirements\n   This section describes all of the key requirements\
    \ taken into\n   consideration by Comcast for the design of this system.  This\n\
    \   information is provided in order to convey important design choices\n   that\
    \ were made in order to avoid the use of DPI, among other things.\n   An \"Additional\
    \ Background\" paragraph is included with each\n   requirement to provide additional\
    \ information, context, or other\n   useful explanation.\n"
- title: 3.1.  General Requirements
  contents:
  - "3.1.  General Requirements\n   R3.1.1.   Must Only Be Used for Critical Service\
    \ Notifications\n             Additional Background: The system must only provide\n\
    \             critical notifications, rather than trivial notifications.\n   \
    \          An example of a critical, non-trivial notification, which\n       \
    \      is also the primary motivation of this system, is to advise\n         \
    \    the user that their computer is infected with malware, that\n           \
    \  their security is at severe risk and/or has already been\n             compromised,\
    \ and that it is recommended that they take\n             immediate, corrective\
    \ action NOW.\n   R3.1.2.   Must Use TCP Port 80\n             Additional Background:\
    \ The system must provide\n             notifications via TCP port 80, the well-known\
    \ port for HTTP\n             traffic.  Since the large majority of customers\
    \ use a web\n             browser as their primary application, this was deemed\
    \ the\n             best method to provide them with an immediate, critical\n\
    \             notification.\n   R3.1.3.   Must Support Block Listing\n       \
    \      Additional Background: While unlikely, it is possible that\n          \
    \   the HyperText Markup Language (HTML, [RFC2854]) or\n             JavaScript\
    \ [RFC4329] used for notifications may cause\n             problems while accessing\
    \ a particular website.  Therefore,\n             such a system must be capable\
    \ of using a block list of\n             website Uniform Resource Identifiers\
    \ (URIs, [RFC3986]) or\n             Fully Qualified Domain Names (FQDNs, Section\
    \ 5.1 of\n             [RFC1035]) that conflict with the system, so that the\n\
    \             system does not provide notifications in these cases, in\n     \
    \        order to minimize any errors or unexpected results.  Also,\n        \
    \     while extensive development and testing has been performed\n           \
    \  to ensure that this system does not behave in unexpected\n             ways,\
    \ and standard ICAP (which has been in use for many\n             years) is utilized,\
    \ it is critical that if it does behave\n             in such a way, there must\
    \ be a method to rapidly exempt\n             specific URIs or FQDNs.\n   R3.1.4.\
    \   Must Not Cause Problems with Instant Messaging (IM) Clients\n            \
    \ Using TCP Port 80\n             Additional Background: Some IM clients use TCP\
    \ port 80 in\n             their communications, often as an alternate port when\n\
    \             standard, well-known ports do not work.  Other IM clients\n    \
    \         may in fact use TCP port 80 by default, in some cases even\n       \
    \      being based in a web browser.  Therefore, this system must\n          \
    \   not conflict with or cause unexpected results for IM\n             clients\
    \ (or any other client types) that use TCP port 80.\n   R3.1.5.   Must Handle\
    \ Pre-Existing Active TCP Sessions Gracefully\n             Additional Background:\
    \ Since the web notification system\n             may temporarily re-route TCP\
    \ port 80 traffic in order to\n             provide a critical notification, previously\
    \ established TCP\n             port 80 sessions must not be disrupted while being\
    \ routed\n             to the proxy layer.  Also, since the critical web\n   \
    \          notification occurs at a well-defined point in time, it is\n      \
    \       logical to conclude that an end user may well have an\n             active\
    \ TCP port 80 session in progress before the\n             notification is sent,\
    \ and which is still active at the time\n             of the notification.  It\
    \ is therefore important that any\n             such connections must not be reset,\
    \ and that they instead\n             must be handled gracefully.\n   R3.1.6.\
    \   Must Not Use TCP Resets\n             Additional Background: The use of TCP\
    \ resets has been\n             widely criticized, both in the Internet community\
    \ generally\n             and in [RFC3360].  In Comcast's recent history, for\n\
    \             example, the company was criticized for using TCP resets in\n  \
    \           the course of operating a DPI-based network management\n         \
    \    system.  As such, TCP resets as a function of the system\n             must\
    \ not be used.\n   R3.1.7.   Must Be Non-Disruptive\n             Additional Background:\
    \ The web notification system must not\n             disrupt the end-user experience,\
    \ for example by causing\n             significant client errors.\n   R3.1.8.\
    \   User Notification Acknowledgement Must Stop Further\n             Immediate\
    \ Notifications\n             Additional Background: Once a user acknowledges\
    \ a critical\n             notification, the notification should immediately stop.\n\
    \             Otherwise, the user may believe the system is stuck in an\n    \
    \         error state and may not believe that the critical\n             notification\
    \ is valid.  In addition, it is quite possible\n             that the user will\
    \ be annoyed that the system did not react\n             to his acknowledgement.\n\
    \   R3.1.9.   Non-Modification of Content Should Be Maintained\n             Additional\
    \ Background: The system should not significantly\n             alter the content\
    \ of the HTTP response from any website the\n             user is accessing.\n\
    \   R3.1.10.  Must Handle Unexpected Content Gracefully\n             Additional\
    \ Background: Sometimes, developers and/or\n             implementers of software\
    \ systems assume that a narrow range\n             of inputs to a system will\
    \ occur, all of which have been\n             thought of beforehand by the designers.\
    \  The authors\n             believe this is a poor assumption to make in the\
    \ design and\n             implementation of a system and, in contrast, that\n\
    \             unexpected or even malformed inputs should be assumed.  As\n   \
    \          a result, the system must gracefully and transparently\n          \
    \   handle traffic that is unexpected, even though there will\n             be\
    \ cases when the system cannot provide a critical web\n             notification\
    \ as a result of this.  Thus, widely varying\n             content should be expected,\
    \ and all such unexpected traffic\n             must be handled by the system\
    \ without generating user-\n             perceived errors or unexpected results.\n\
    \   R3.1.11.  Web Content Must Not Be Cached\n             Additional Background:\
    \ Maintaining the privacy of users is\n             important.  As such, content\
    \ flowing through or\n             incidentally observed by the system must not\
    \ be cached.\n   R3.1.12.  Advertising Replacement or Insertion Must Not Be Performed\n\
    \             Under ANY Circumstances\n             Additional Background: The\
    \ system must not be used to\n             replace any advertising provided by\
    \ a website, or to insert\n             advertising into websites.  This therefore\
    \ includes cases\n             where a web page already has space for advertising,\
    \ as well\n             as cases where a web page does not have any advertising.\n\
    \             This is a critical area of concern for end users, privacy\n    \
    \         advocates, and other members of the Internet community.\n          \
    \   Therefore, it must be made abundantly clear that this\n             system\
    \ will not be used for such purposes.\n"
- title: 3.2.  Web Proxy Requirements
  contents:
  - "3.2.  Web Proxy Requirements\n   R3.2.1.  Open Source Software Must Be Used\n\
    \            Additional Background: The system must use an open source\n     \
    \       web proxy server.  (As noted in Section 2 and Section 4.1,\n         \
    \   Squid has been chosen.)  While it is possible to use any web\n           \
    \ proxy, the use of open source enables others to easily\n            access openly\
    \ available documentation for the software,\n            among the other benefits\
    \ commonly attributed to the use of\n            open source software.\n   R3.2.2.\
    \  ICAP Client Should Be Integrated\n            Additional Background: The web\
    \ proxy server should have an\n            integrated ICAP client, which simplifies\
    \ the design and\n            implementation of the system.\n   R3.2.3.  Access\
    \ Control Must Be Implemented\n            Additional Background: Access to the\
    \ proxy must be limited\n            exclusively to the IP addresses of users\
    \ for which\n            notifications are intended, and only for limited periods\
    \ of\n            time.  Furthermore, since a Session Management Broker (SMB)\n\
    \            is utilized, as described in Section 4.1 below, then the\n      \
    \      proxy must restrict access only to the address of the SMB.\n"
- title: 3.3.  ICAP Server Requirements
  contents:
  - "3.3.  ICAP Server Requirements\n   R3.3.1.  Must Provide ICAP Response Support\n\
    \            Additional Background: The system must support response\n       \
    \     adaptation, in accordance with [RFC3507].  An ICAP client\n            passes\
    \ a HyperText Transport Protocol (HTTP, [RFC2616])\n            response to an\
    \ ICAP server for content adaption.  The ICAP\n            server in turn responds\
    \ back to the client with the HTTP\n            response containing the notification\
    \ message by using the\n            \"respmod\" method defined in Section 3.2\
    \ of [RFC3507].\n   R3.3.2.  Must Provide Consistency of Critical Notifications\n\
    \            Additional Background: The system must be able to\n            consistently\
    \ provide a specific notification.  For example,\n            if a critical alert\
    \ to notify a user that they are infected\n            with malware is desired,\
    \ then that notification should\n            consistently look the same for all\
    \ users and not vary.\n   R3.3.3.  Must Support Multiple Notification Types\n\
    \            Additional Background: While the initial and sole critical\n    \
    \        notification sent by the system is intended to alert users\n        \
    \    of a malware infection, malware is a rapidly and\n            continuously\
    \ evolving threat.  As a result of this reality,\n            the system must\
    \ be able to evolve to provide different types\n            of critical notifications.\
    \  For example, if malware begins\n            to diverge into several different\
    \ categories with\n            substantially different implications for end users,\
    \ then it\n            may become desirable to provide a notification that has\
    \ been\n            narrowly tailored to each category of malware.\n   R3.3.4.\
    \  Must Support Notification to Multiple Users Simultaneously\n            Additional\
    \ Background: The system must be able to\n            simultaneously serve notifications\
    \ to different users.  For\n            example, if 100 users have been infected\
    \ with malware and\n            critically need to be notified about this security\
    \ problem,\n            then the system must be capable of providing the\n   \
    \         notification to several users at a time, or all of the users\n     \
    \       at the same time, rather than to just one user at a time.\n"
- title: 3.4.  Messaging Service Requirements
  contents:
  - "3.4.  Messaging Service Requirements\n   R3.4.1.  A Messaging Service Must Be\
    \ Used\n            Additional Background: The Messaging Service, as described\n\
    \            in Section 4.1 below, caches the notifications for each\n       \
    \     specific user.  Thus, the notification messages are cached\n           \
    \ by the system and do not have to be retrieved each time a\n            notification\
    \ is needed.  As a result, the system can be more\n            easily scaled to\
    \ provide notification to multiple users\n            simultaneously, as noted\
    \ in an earlier requirement (\"Must\n            Support Notification to Multiple\
    \ Users Simultaneously\").\n   R3.4.2.  Must Process Acknowledgements on a Timely\
    \ Basis\n            Additional Background: The Messaging Service must quickly\n\
    \            process notification acknowledgements by end users, as noted\n  \
    \          in an earlier requirement (\"User Notification\n            Acknowledgement\
    \ Must Stop Further Immediate Notifications\").\n   R3.4.3.  Must Ensure Notification\
    \ Targeting Accuracy\n            Additional Background: The Messaging Service\
    \ must ensure\n            that notifications are presented to the intended users.\
    \  For\n            example, if the system intends to provide a critical\n   \
    \         notification to User A and User B, but not User C, then\n          \
    \  User C must not be sent a notification.\n   R3.4.4.  Should Keep Notification\
    \ Records for Customer Support\n            Purposes\n            Additional Background:\
    \ The Messaging Service should maintain\n            some type of record that\
    \ a notification has been sent to a\n            user, in case that user inquires\
    \ with customer support\n            personnel.  For example, when a user is presented\
    \ with the\n            critical notification advising them of a malware infection,\n\
    \            that user may choose to call Comcast's Customer Security\n      \
    \      Assurance team, in the customer service organization.  As a\n         \
    \   result, a Customer Security Assurance representative should\n            be\
    \ able to confirm that the user did in fact receive a\n            notification\
    \ concerning malware infection in the course of\n            providing assistance\
    \ to the end user in remediating the\n            malware infection.\n"
- title: 4.  Implementation Details
  contents:
  - "4.  Implementation Details\n   This section defines and documents the various\
    \ core functional\n   components of the system, as they are implemented.  These\
    \ components\n   are then shown in a diagram to describe how the various components\n\
    \   are linked and relate to one another.\n"
- title: 4.1.  Functional Components Described, as Implemented
  contents:
  - "4.1.  Functional Components Described, as Implemented\n   This section accurately\
    \ and transparently describes the software (S)\n   packages used by the system\
    \ described herein, as well as all of the\n   details of how the system functions.\
    \  The authors acknowledge that\n   there may be multiple alternative software\
    \ choices for each\n   component; the purpose of this section is to describe those\n\
    \   selections that have been made and deployed.\n   S4.1.1.  Web Proxy: The system\
    \ uses Squid Proxy, an open source web\n            proxy application in wide\
    \ use, which supports an integrated\n            ICAP client.\n   S4.1.2.  ICAP\
    \ Server: The system uses GreasySpoon, an open source\n            application.\
    \  The ICAP server retrieves the notifications\n            from the Messaging\
    \ Service cache when content adaption is\n            needed.\n   S4.1.3.  Customer\
    \ Database: The Customer Database holds the relevant\n            information\
    \ that the system needs to provide a critical\n            notification to a given\
    \ user.  The database may also hold\n            the status of which users were\
    \ notified and which users are\n            pending notification.\n   S4.1.4.\
    \  Messaging Service: The system uses Apache Tomcat, an open\n            source\
    \ application.  This is a process engine that retrieves\n            specific\
    \ web notification messages from a catalog of\n            possible notifications.\
    \  While only one notification is\n            currently used, concerning malware\
    \ infection, as noted in\n            Section 3.3 the system may eventually need\
    \ to provide\n            multiple notifications (the specific requirement is\
    \ \"Must\n            Support Multiple Notification Types\").  When a notification\n\
    \            for a specific user is not in the cache, the process\n          \
    \  retrieves this information from the Customer Database and\n            populates\
    \ the cache for a specific period of time.\n   S4.1.5.  Session Management Broker\
    \ (SMB): A Load Balancer (LB) with a\n            customized layer 7 inspection\
    \ policy is used to\n            differentiate between HTTP and non-HTTP traffic\
    \ on TCP\n            port 80, in order to meet the requirements documented in\n\
    \            Section 3 above.  The system uses a LB from A10 Networks.\n     \
    \       The SMB functions as a full stateful TCP proxy with the\n            ability\
    \ to forward packets from existing TCP sessions that\n            do not exist\
    \ in the internal session table (to meet the\n            specific requirement\
    \ \"Must Handle Pre-Existing Active TCP\n            Sessions Gracefully\"). \
    \ New HTTP sessions are load balanced\n            to the web proxy layer either\
    \ transparently or using source\n            Network Address Translation (NAT\
    \ [RFC3022]) from the SMB.\n            Non-HTTP traffic for established TCP sessions\
    \ not in the SMB\n            session table is simply forwarded to the destination\n\
    \            transparently via the TCP proxy layer (again, to meet the\n     \
    \       specific requirement \"Must Handle Pre-Existing Active TCP\n         \
    \   Sessions Gracefully\").\n"
- title: 4.2.  Functional Diagram, as Implemented
  contents:
  - "4.2.  Functional Diagram, as Implemented\n   +--------+        +------------+\
    \        +----------+\n   |  ICAP  | <----> | Messaging  | <----> | Customer |\n\
    \   | Server |        |  Service   |        | Database |\n   +--------+      \
    \  +------------+        +----------+\n     ^\n     |                +----------+\n\
    \     |                |          |\n     |      +-------> | Internet | <-------+\n\
    \     |      |         |          |         |\n     |      |         +----------+\
    \         |\n     |      |              ^               |\n     v      v     \
    \         |               |\n   +----------+            v               v\n  \
    \ |+--------+|        +-------+       +--------+\n   ||  ICAP  || <----> |  SMB\
    \  | <---> | Access |\n   || Client ||        +-------+       | Router |\n   |+--------+|\
    \                        +--------+\n   || SQUID  ||                         \
    \   ^\n   || Proxy  ||                            |\n   |+--------+|         \
    \                   v\n   +----------+                       +----------+\n  \
    \                                    |  CMTS*   |\n                          \
    \            +----------+\n                                          ^\n     \
    \                                     |\n                                    \
    \      v\n                                       +------+\n                  \
    \                     |  PC  |\n                                       +------+\n\
    \    * A Cable Modem Termination System (CMTS)\n      is an access network element.\n\
    \         Figure 1: Web Notification System - Functional Components\n"
- title: 5.  High-Level Communication Flow, as Implemented
  contents:
  - "5.  High-Level Communication Flow, as Implemented\n   In Section 4, the functional\
    \ components of the system were described,\n   and then shown in relation to one\
    \ another in Figure 1 above.  This\n   section describes the high-level communication\
    \ (C) flow of a\n   transaction in the system, in order to explain the general\
    \ way that\n   the functions work together in action.  This will be further\n\
    \   explained in much more detail in later sections of this document.\n   C5.1.\
    \   Setup of Differentiated Services (Diffserv): Using Diffserv\n           [RFC2474]\
    \ [RFC2475] [RFC2597] [RFC3140] [RFC3246] [RFC3260]\n           [RFC4594], set\
    \ a policy to direct TCP port 80 traffic to the\n           web notification system's\
    \ web proxy.\n   C5.2.   Session Management: TCP port 80 packets are routed to\
    \ a\n           Session Management Broker (SMB) that distinguishes between\n \
    \          HTTP or non-HTTP traffic and between new and existing\n           sessions.\
    \  HTTP packets are forwarded to the web proxy by the\n           SMB.  Non-HTTP\
    \ packets such as instant messaging (IM) traffic\n           are forwarded to\
    \ a TCP proxy layer for routing to their\n           destination, or the SMB operates\
    \ as a full TCP proxy and\n           forwards the non-HTTP packets to the destination.\n\
    \           Pre-established TCP sessions on port 80 are identified by the\n  \
    \         SMB and forwarded with no impact.\n   C5.3.   Web Proxy Forwards Request:\
    \ The web proxy forwards the HTTP\n           request on to the destination site,\
    \ a web server, as a web\n           proxy normally would do.\n   C5.4.   On Response,\
    \ Send Message to ICAP Server: When the HTTP\n           response is received\
    \ from the destination server, the web\n           proxy sends a message to the\
    \ ICAP server for the web\n           notification.\n   C5.5.   Messaging Service:\
    \ The Messaging Service should respond with\n           appropriate notification\
    \ content or null response if no\n           notification is cached.\n   C5.6.\
    \   ICAP Server Responds: The ICAP server responds and furnishes\n           the\
    \ appropriate content for the web notification to the web\n           proxy.\n\
    \   C5.7.   Web Proxy Sends Response: The web proxy then forwards the\n      \
    \     HTTP response containing the web notification to the client\n          \
    \ web browser.\n   C5.8.   User Response: The user observes the critical web\n\
    \           notification, and clicks an appropriate option, such as: OK/\n   \
    \        acknowledged, snooze/remind me later, etc.\n   C5.9.   More Information:\
    \ Depending upon the notification, the user\n           may be provided with more\
    \ information.  For example, as noted\n           previously, the system was designed\
    \ to provide critical\n           notifications concerning malware infection.\
    \  Thus, in the\n           case of malware infection, the user may be advised\
    \ to go to a\n           malware remediation web page that provides directions\
    \ on how\n           to attempt to remove the malware and attempt to secure hosts\n\
    \           against future malware infection.\n   C5.10.  Turn Down Diffserv:\
    \ Once the notification transaction has\n           completed, remove any special\
    \ Diffserv settings.\n"
- title: 6.  Communication between Web Proxy and ICAP Server, as Implemented
  contents:
  - "6.  Communication between Web Proxy and ICAP Server, as Implemented\n   The web\
    \ proxy and ICAP server are critical components of the system.\n   This section\
    \ shows the communication that occurs between these two\n   components.\n   +------------+\n\
    \   |  www URI   |\n   +------------+\n      ^      |\n   (2)|      |(3)\n   \
    \   |      v\n     +--------+     (4)     +--------+     (4)     +--------+\n\
    \     |        |------------>|        |------------>|        |\n     |       \
    \ |     (5)     |        |     (5)     |        |\n     | Proxy  |<------------|\
    \  ICAP  |<------------|  ICAP  |\n     | Module |     (6)     | Client |    \
    \ (6)     | Server |\n     |        |------------>|        |------------>|   \
    \     |\n     |        |     (7)     |        |     (7)     |        |\n     |\
    \        |<------------|        |<------------|        |\n     +--------+    \
    \         +--------+             +--------+\n      ^      |\n   (1)|      |(8)\n\
    \      |      v\n   +------------+              (9)             +------------+\n\
    \   |            |----------------------------->|            |\n   |  Browser\
    \   |              (10)            | Web Server |\n   |            |<-----------------------------|\
    \            |\n   +------------+                              +------------+\n\
    \   (1) - HTTP GET (TCP 80)\n   (2) - Proxy HTTP GET (TCP 80)\n   (3) - HTTP 200\
    \ OK w/ Response\n   (4) - ICAP RESPMOD\n   (5) - ICAP 200 OK\n   (6) - TCP Stream\
    \ - Encapsulate Header\n   (7) - ICAP 200 OK Insert Message\n   (8) - HTTP 200\
    \ OK w/ Response + Message Frame\n   (9) - HTTP GET for Message\n   (10) - HTTP\
    \ 200 w/ Message Content\n         Figure 2: Communication between Web Proxy and\
    \ ICAP Server\n"
- title: 7.  End-to-End Web Notification Flow, as Implemented
  contents:
  - "7.  End-to-End Web Notification Flow, as Implemented\n   This section describes\
    \ the exact flow of an end-to-end notification,\n   in order to show in detail\
    \ how the system functions.\n"
- title: 7.1.  Step-by-Step Description of the End-to-End Web Notification Flow
  contents:
  - "7.1.  Step-by-Step Description of the End-to-End Web Notification Flow\n   Policy-Based\
    \ Routing\n   1.  TCP port 80 packets from the user that needs to be notified\
    \ are\n       routed to the web proxy via policy-based routing.\n   2.  Packets\
    \ are forwarded to the Session Management Broker, which\n       establishes a\
    \ session with the web proxy and routes the packets\n       to the web proxy.\n\
    \   Web Proxy\n   1.   The user's HTTP request is directed to the web proxy.\n\
    \   2.   The web proxy receives HTTP traffic and retrieves content from\n    \
    \    the requested website.\n   3.   The web proxy receives the response and forwards\
    \ it to the ICAP\n        server for response adaptation.\n   4.   The ICAP server\
    \ checks the HTTP content in order to determine\n        whether the notification\
    \ message can be inserted.\n   5.   The ICAP server initiates a request to the\
    \ Messaging Service\n        cache process with the IP address of the user.\n\
    \   6.   If a notification message for the user exists, then the\n        appropriate\
    \ notification is cached on the Messaging Service.\n        The Messaging Service\
    \ then returns the appropriate notification\n        content to the ICAP server.\n\
    \   7.   Once the notification message is retrieved from the Messaging\n     \
    \   Service cache, the ICAP server may insert the notification\n        message\
    \ in the HTTP response body without altering or modifying\n        the original\
    \ content of the HTTP response.\n   8.   The ICAP server then sends the response\
    \ back to the web proxy,\n        which in turn forwards the HTTP response back\
    \ to the browser.\n   9.   If the user's IP address is not found or provisioned\
    \ for a\n        notification message, then the ICAP server should return a \"\
    204\n        No modifications needed\" response to the ICAP client as defined\n\
    \        in Section 4.3.3 of [RFC3507].  As a result, the user will not\n    \
    \    receive any web notification message.\n   10.  The user observes the web\
    \ notification, and clicks an\n        appropriate option, such as: OK/acknowledged,\
    \ snooze/remind me\n        later, etc.\n"
- title: 7.2.  Diagram of the End-to-End Web Notification Flow
  contents:
  - "7.2.  Diagram of the End-to-End Web Notification Flow\n   The two figures below\
    \ show the communications flow from the web\n   browser, through the web notification\
    \ system.\n   Figure 3 illustrates what occurs when a notification request cannot\n\
    \   be inserted because the notification type for the user's IP address\n   is\
    \ not cached in the Messaging Service.\n                            ICAP     ICAP\
    \    Message          Customer\n         Browser   Proxy   Client   Server   Service\
    \  Internet    DB\n           |  HTTP  |         |         |        |        |\
    \        |\n           |  GET   | Proxy   |         |        |        |      \
    \  |\n           +------->| Request |         |        |        |        |\n \
    \          |        +---------|---------|--------|------->|        |\n       \
    \    |        |         |         |        | 200 OK |        |\n           | \
    \       |<--------|---------|--------|--------+        |\n           |       \
    \ | ICAP    |         |        |        |        |\n           |        | RESPMOD\
    \ | ICAP    |        |        |        |\n           |        +-------->| RESPMOD\
    \ | Check  |        |        |\n           |        |         +-------->| Cache\
    \  |        |        |\n           |        |         |         | for IP |   \
    \     |        |\n           |        |         |         | Match  |        |\
    \        |\n           |        |         |         +------->|        |      \
    \  |\n           |        |         |         | Cache  |        |        |\n \
    \          |        |         |         | Miss   |        |        |\n       \
    \    |        |         |         |<-------+ Request|        |\n           | \
    \       |         | 204 No  |        | Type   |        |\n           |       \
    \ |         | Modif.  |        +--------|------->|\n           |        |    \
    \     | Needed  |        |        |        |\n           |        | No      |<--------+\
    \        |        | Type   |\n           |        | Insert  |         |      \
    \  |        |Returned|\n           | 200 OK |<--------+         |        |<-------|--------+\n\
    \           | w/o    |         |         |        |        |        |\n      \
    \     | Insert |         |         |        |        |        |\n           |<-------+\
    \         |         |        |        |        |\n           |        |      \
    \   |         |        |        |        |\n       Figure 3: End-to-End Web Notification\
    \ Flow - with Cache Miss\n   Figure 4 illustrates what occurs when a notification\
    \ request for the\n   user's IP address is cached in the Messaging Service.\n\
    \                            ICAP     ICAP    Message          Customer\n    \
    \     Browser   Proxy   Client   Server   Service  Internet    DB\n          \
    \ |  HTTP  |         |         |        |        |        |\n           |  GET\
    \   | Proxy   |         |        |        |        |\n           +------->| Request\
    \ |         |        |        |        |\n           |        +---------|---------|--------|------->|\
    \        |\n           |        |         |         |        | 200 OK |      \
    \  |\n           |        |<--------|---------|--------|--------+        |\n \
    \          |        | ICAP    |         |        |        |        |\n       \
    \    |        | RESPMOD | ICAP    |        |        |        |\n           | \
    \       +-------->| RESPMOD | Check  |        |        |\n           |       \
    \ |         +-------->| Cache  |        |        |\n           |        |    \
    \     |         | for IP |        |        |\n           |        |         |\
    \         | Match  |        |        |\n           |        |         |      \
    \   +------->|        |        |\n           |        |         |         | Cache\
    \  |        |        |\n           |        |         |         | Hit    |   \
    \     |        |\n           |        |         | Insert  |<-------+        |\
    \        |\n           |        | Return  | Type    |        |        |      \
    \  |\n           |        | 200 OK  |<--------+        |        |        |\n \
    \          |        | with    |         |        |        |        |\n       \
    \    |        | Insert  |         |        |        |        |\n           | 200\
    \ OK |<--------+         |        |        |        |\n           | w/     | \
    \        |         |        |        |        |\n           | Notify |       \
    \  |         |        |        |        |\n           |<-------+         |   \
    \      |        |        |        |\n           |        |         |         |\
    \        |        |        |\n        Figure 4: End-to-End Web Notification Flow\
    \ - with Cache Hit\n"
- title: 8.  Example HTTP Headers and JavaScript for a Web Notification
  contents:
  - "8.  Example HTTP Headers and JavaScript for a Web Notification\n   The figure\
    \ below shows an example of a normal HTTP GET request from\n   the user's web\
    \ browser to www.example.com, a web server on the\n   Internet.\n"
- title: '------------------------------------------------------------------------'
  contents:
  - '------------------------------------------------------------------------

    '
- title: 1.  HTTP GET Request to www.example.com
  contents:
  - '1.  HTTP GET Request to www.example.com

    '
- title: '------------------------------------------------------------------------'
  contents:
  - '------------------------------------------------------------------------

    '
- title: http://www.example.com/
  contents:
  - 'http://www.example.com/

    '
- title: GET / HTTP/1.1
  contents:
  - 'GET / HTTP/1.1

    '
- title: 'Host: www.example.com'
  contents:
  - 'Host: www.example.com

    '
- title: 'User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.14)'
  contents:
  - "User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.14)\n  \
    \      Gecko/20080404 Firefox/2.0.0.14\n"
- title: 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
  contents:
  - 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8

    '
- title: 'Accept-Language: en-us,en;q=0.5'
  contents:
  - 'Accept-Language: en-us,en;q=0.5

    '
- title: 'Accept-Encoding: gzip,deflate'
  contents:
  - 'Accept-Encoding: gzip,deflate

    '
- title: 'Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7'
  contents:
  - 'Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7

    '
- title: 'Keep-Alive: 300'
  contents:
  - 'Keep-Alive: 300

    '
- title: 'Connection: keep-alive'
  contents:
  - 'Connection: keep-alive

    '
- title: 'Pragma: no-cache'
  contents:
  - 'Pragma: no-cache

    '
- title: '------------------------------------------------------------------------'
  contents:
  - "------------------------------------------------------------------------\n  \
    \   Figure 5: Example HTTP Headers for a Web Notification - HTTP GET\n   In the\
    \ figure below, the traffic is routed via the web proxy, which\n   communicates\
    \ with the ICAP server and returns the response from\n   www.example.com.  In\
    \ this case, that response is a 200 OK, with the\n   desired notification message\
    \ inserted.\n"
- title: '------------------------------------------------------------------------'
  contents:
  - '------------------------------------------------------------------------

    '
- title: 2.  Response from www.example.com via PROXY
  contents:
  - '2.  Response from www.example.com via PROXY

    '
- title: '------------------------------------------------------------------------'
  contents:
  - '------------------------------------------------------------------------

    '
- title: HTTP/1.x 200 OK
  contents:
  - 'HTTP/1.x 200 OK

    '
- title: 'Date: Thu, 08 May 2008 16:26:29 GMT'
  contents:
  - 'Date: Thu, 08 May 2008 16:26:29 GMT

    '
- title: 'Server: Apache/2.2.3 (CentOS)'
  contents:
  - 'Server: Apache/2.2.3 (CentOS)

    '
- title: 'Last-Modified: Tue, 15 Nov 2005 13:24:10 GMT'
  contents:
  - 'Last-Modified: Tue, 15 Nov 2005 13:24:10 GMT

    '
- title: 'Etag: "b80f4-1b6-80bfd280"'
  contents:
  - 'Etag: "b80f4-1b6-80bfd280"

    '
- title: 'Accept-Ranges: bytes'
  contents:
  - 'Accept-Ranges: bytes

    '
- title: 'Content-Length: 438'
  contents:
  - 'Content-Length: 438

    '
- title: 'Connection: close'
  contents:
  - 'Connection: close

    '
- title: 'Content-Type: text/html; charset=UTF-8'
  contents:
  - 'Content-Type: text/html; charset=UTF-8

    '
- title: 'Age: 18'
  contents:
  - 'Age: 18

    '
- title: 'X-Cache: HIT from localhost.localdomain'
  contents:
  - 'X-Cache: HIT from localhost.localdomain

    '
- title: 'Via: 1.0 localhost.localdomain (squid/3.0.STABLE5)'
  contents:
  - 'Via: 1.0 localhost.localdomain (squid/3.0.STABLE5)

    '
- title: 'Proxy-Connection: keep-alive'
  contents:
  - 'Proxy-Connection: keep-alive

    '
- title: '------------------------------------------------------------------------'
  contents:
  - "------------------------------------------------------------------------\n  \
    \ Figure 6: Example HTTP Headers for a Web Notification - HTTP Response\n   The\
    \ figure below shows an example of the web notification content\n   inserted in\
    \ the 200 OK response, in this example JavaScript code.\n"
- title: '------------------------------------------------------------------------'
  contents:
  - '------------------------------------------------------------------------

    '
- title: 3.  Example of JavaScript containing Notification Insertion
  contents:
  - '3.  Example of JavaScript containing Notification Insertion

    '
- title: '------------------------------------------------------------------------'
  contents:
  - '------------------------------------------------------------------------

    '
- title: <!--all elements used in a notification should have cascading style
  contents:
  - '<!--all elements used in a notification should have cascading style

    '
- title: sheet (css) properties defined to avoid unwanted inheritance from
  contents:
  - 'sheet (css) properties defined to avoid unwanted inheritance from

    '
- title: parent page-->
  contents:
  - 'parent page-->

    '
- title: <style type="text/css">
  contents:
  - '<style type="text/css">

    '
- title: '#example {'
  contents:
  - "#example {\n  position: absolute; left: 100px; top: 50px;\n  z-index: 9999999;\
    \ height: auto; width: 550px;\n  padding: 10px;\n  border: solid 2px black;\n\
    \  background-color:#FDD017;\n  opacity: 0.8; filter: alpha(opacity = 80);\n"
- title: '}'
  contents:
  - '}

    '
- title: </style>
  contents:
  - '</style>

    '
- title: <script language="javascript" type="text/javascript">
  contents:
  - '<script language="javascript" type="text/javascript">

    '
- title: // ensure that content is not part of an iframe
  contents:
  - '// ensure that content is not part of an iframe

    '
- title: if (self.location == top.location) {
  contents:
  - "if (self.location == top.location) {\n  // this is a floating div with 80% transparency\n\
    \  document.write('<div id=\"example\" name=\"example\">');\n  document.write('<h2>IMPORTANT\
    \ MESSAGE</h2>');\n  document.write('<p>Lorem ipsum dolor sit amet, consecteteur\
    \ ');\n  document.write('adipisicing elit, sed do eiusmod tempor ');\n  document.write('incididunt\
    \ ut labore et dolore magna aliqua. ');\n  document.write('Ut enim ad minim veniam,\
    \ quis nostrud ');\n  document.write('exercitation ullamco laboris nisi ut aliquip\
    \ ex ');\n  document.write('ea commodo consequat.');\n  document.write('</div>');\n"
- title: '}</script>'
  contents:
  - '}</script>

    '
- title: '------------------------------------------------------------------------'
  contents:
  - "------------------------------------------------------------------------\n  \
    \        Figure 7: Example JavaScript Used in a Web Notification\n"
- title: 9.  Deployment Considerations
  contents:
  - "9.  Deployment Considerations\n   The components of the web notification system\
    \ should be distributed\n   throughout the network and close to end users.  This\
    \ ensures that the\n   routing performance and the user's web browsing experience\
    \ remain\n   excellent.  In addition, a HTTP-aware load balancer should be used\
    \ in\n   each datacenter where servers are located, so that traffic can be\n \
    \  spread across N+1 servers and the system can be easily scaled.\n"
- title: 10.  Security Considerations
  contents:
  - "10.  Security Considerations\n   This critical web notification system was conceived\
    \ in order to\n   provide an additional method of notifying end user customers\
    \ that\n   their computer has been infected with malware.  Depending upon the\n\
    \   specific text of the notification, users could fear that it is some\n   kind\
    \ of phishing attack.  As a result, care has been taken with the\n   text and\
    \ any links contained in the web notification itself.  For\n   example, should\
    \ the notification text change over time, it may be\n   best to provide a general\
    \ URI or a telephone number.  In contrast to\n   that, the notification must not\
    \ ask for login credentials, and must\n   not ask a user to follow a link in order\
    \ to change their password,\n   since these are common phishing techniques.  Finally,\
    \ care should be\n   taken to provide confidence that the web notification is\
    \ valid and\n   from a trusted party, and/or that the user has an alternate method\
    \ of\n   checking the validity of the web notification.  One alternate method\n\
    \   of validating the notification may be to call customer support (in\n   this\
    \ example, Comcast's Customer Security Assurance team); this\n   explains a key\
    \ requirement (specifically, \"Should Keep Notification\n   Records for Customer\
    \ Support Purposes\") in Section 3.4.\n"
- title: 11.  Debating the Necessity of Such a Critical Notification System
  contents:
  - "11.  Debating the Necessity of Such a Critical Notification System\n   Some members\
    \ of the community may question whether it is ever, under\n   any circumstances,\
    \ acceptable to modify Internet content in order to\n   provide critical service\
    \ notification concerning malware infection -\n   even in the smallest of ways,\
    \ even if openly and transparently\n   documented, even if thoroughly tested,\
    \ and even if for the best of\n   motivations.  It is important that anyone with\
    \ such concerns\n   recognize that this document is by no means the first to propose\n\
    \   this, particularly as a tactic to combat a security problem, and in\n   fact\
    \ simply leverages previous work in the IETF, such as [RFC3507].\n   Such concerned\
    \ parties should also study the many organizations using\n   ICAP and the many\
    \ software systems that have implemented ICAP.\n   In addition, concerned members\
    \ of the community should review\n   Section 1, which describes the fact that\
    \ this is a common feature of\n   DPI systems, made by DPI vendors and many, if\
    \ not most, major\n   networking equipment vendors.  As described herein, the\
    \ authors of\n   this document are motivated to AVOID the need for widespread,\n\
    \   ubiquitous deployment of DPI, via the use of both open source\n   software\
    \ and open protocols, and are further motivated to\n   transparently describe\
    \ the details of how such a system functions,\n   what it IS intended to do, what\
    \ it IS NOT intended to do, and\n   purposes for which it WILL NOT be used.\n\
    \   The authors also believe it is important for ISPs to transparently\n   disclose\
    \ network management techniques and systems, and to have a\n   venue to do so,\
    \ as has been done here.  In addition, the authors\n   believe it is important\
    \ for the IETF and other members of the\n   Internet community to encourage and\
    \ positively reinforce such\n   disclosures.  In the publishing of such a document\
    \ for reference and\n   comment by the Internet community, this may serve to motivate\
    \ other\n   ISPs to be similarly open and to engage the IETF and other\n   organizations\
    \ that are part of the Internet community.  Not\n   publishing such documents\
    \ could motivate less disclosure on the part\n   of ISPs and other members of\
    \ the Internet community, increase the use\n   of DPI, and decrease ISP participation\
    \ in the critical technical\n   bodies that make up parts of the Internet community.\n\
    \   In addition, it is critical that members of the community recognize\n   the\
    \ good motivations of ISPs like Comcast to combat the massive and\n   continuing\
    \ proliferation of malware, which is a huge threat to the\n   security of average\
    \ Internet users and now represents a multi-\n   billion-dollar underground economy\
    \ engaged in identity theft,\n   financial fraud, transmission of spam, and other\
    \ criminal activity.\n   Such a critical notification system in fact is only necessary\
    \ due to\n   the failure of host-based security at defending against and\n   preventing\
    \ malware infection.  As such, ISPs such as Comcast are\n   being urged by their\
    \ customers and by other parties such as security\n   and/or privacy organizations,\
    \ as well as governmental organizations,\n   to take action to help solve this\
    \ massive problem, since so many\n   other tactics have been unsuccessful.  For\
    \ example, as Howard\n   Schmidt, the Special Advisory for Cyber Security to President\
    \ Obama,\n   of the United States of America, said in 2005: \"As attacks on home-\n\
    \   based and unsecured networks become as prevalent as those against\n   large\
    \ organizations, the need for ISPs to do everything they can to\n   make security\
    \ easier for their subscribers is critical for the\n   preservation of our nation's\
    \ information backbone.  Additionally,\n   there is tremendous potential to grow\
    \ further the use of broadband\n   around the world; and making safety and security\
    \ part of an ISP's\n   core offering will enable the end user to fully experience\
    \ the rich\n   and robust benefits broadband provides\".\n"
- title: 12.  Suggesting a Walled Garden as an Alternative
  contents:
  - "12.  Suggesting a Walled Garden as an Alternative\n   A \"walled garden\" refers\
    \ to an environment that controls the\n   information and services that a subscriber\
    \ is allowed to utilize and\n   what network access permissions are granted. \
    \ Placing a user in a\n   walled garden is therefore another approach that ISPs\
    \ may take to\n   notify users, and this method is being explored as a possible\n\
    \   alternative in other documents and community efforts.  As such, web\n   notifications\
    \ should be considered one of many possible notification\n   methods that merit\
    \ documentation.\n   However, a walled-garden approach can pose challenges and\
    \ may in some\n   cases be considered disruptive to end users.  For example, a\
    \ user\n   could be playing a game online, via the use of a dedicated, Internet-\n\
    \   connected game console, which would likely stop working when the user\n  \
    \ was placed in the walled garden.  In another example, the user may be\n   in\
    \ the course of a telephone conversation, using a Voice Over IP\n   (VoIP) device\
    \ of some type, which would also likely stop working when\n   the user was placed\
    \ in the walled garden.  In both cases, the user is\n   not using a web browser\
    \ and would not have a way to determine the\n   reason why their service seemingly\
    \ stopped working.\n"
- title: 13.  Intended Next Steps
  contents:
  - "13.  Intended Next Steps\n   Unfortunately, at the time of this writing, no existing\
    \ working group\n   of the IETF is focused on issues of malware infection and\
    \ related\n   issues.  As a result, there was not a definite venue for this\n\
    \   document, so it was submitted to the Independent Submissions Editor\n   as\
    \ an independent submission.  While documentation and disclosure of\n   this system\
    \ are beneficial for the Internet community in and of\n   itself, there are other\
    \ benefits to having this document published.\n   One of those reasons is that\
    \ members of the community, including\n   members of the IETF, have a stable document\
    \ to refer to in the case\n   of any potential new work that the community may\
    \ undertake in the\n   area of malware, security, and critical notification to\
    \ end users.\n   It is also hoped that, in the tradition of a Request for Comment,\n\
    \   other members of the community may be motivated to propose\n   alternative\
    \ systems or other improvements.\n"
- title: 14.  Acknowledgements
  contents:
  - "14.  Acknowledgements\n   The authors wish to thank Alissa Cooper for her review\
    \ of and\n   comments on the document, and Nevil Brownlee for his excellent\n\
    \   feedback, as well as others who reviewed the document.\n"
- title: 15.  References
  contents:
  - '15.  References

    '
- title: 15.1.  Normative References
  contents:
  - "15.1.  Normative References\n   [RFC1035]  Mockapetris, P., \"Domain names -\
    \ implementation and\n              specification\", STD 13, RFC 1035, November\
    \ 1987.\n   [RFC2474]  Nichols, K., Blake, S., Baker, F., and D. Black,\n    \
    \          \"Definition of the Differentiated Services Field (DS\n           \
    \   Field) in the IPv4 and IPv6 Headers\", RFC 2474,\n              December 1998.\n\
    \   [RFC2475]  Blake, S., Black, D., Carlson, M., Davies, E., Wang, Z.,\n    \
    \          and W. Weiss, \"An Architecture for Differentiated\n              Services\"\
    , RFC 2475, December 1998.\n   [RFC2597]  Heinanen, J., Baker, F., Weiss, W.,\
    \ and J. Wroclawski,\n              \"Assured Forwarding PHB Group\", RFC 2597,\
    \ June 1999.\n   [RFC2616]  Fielding, R., Gettys, J., Mogul, J., Frystyk, H.,\n\
    \              Masinter, L., Leach, P., and T. Berners-Lee, \"Hypertext\n    \
    \          Transfer Protocol -- HTTP/1.1\", RFC 2616, June 1999.\n   [RFC2854]\
    \  Connolly, D. and L. Masinter, \"The 'text/html' Media\n              Type\"\
    , RFC 2854, June 2000.\n   [RFC3022]  Srisuresh, P. and K. Egevang, \"Traditional\
    \ IP Network\n              Address Translator (Traditional NAT)\", RFC 3022,\n\
    \              January 2001.\n   [RFC3140]  Black, D., Brim, S., Carpenter, B.,\
    \ and F. Le Faucheur,\n              \"Per Hop Behavior Identification Codes\"\
    , RFC 3140,\n              June 2001.\n   [RFC3246]  Davie, B., Charny, A., Bennet,\
    \ J., Benson, K., Le Boudec,\n              J., Courtney, W., Davari, S., Firoiu,\
    \ V., and D.\n              Stiliadis, \"An Expedited Forwarding PHB (Per-Hop\n\
    \              Behavior)\", RFC 3246, March 2002.\n   [RFC3260]  Grossman, D.,\
    \ \"New Terminology and Clarifications for\n              Diffserv\", RFC 3260,\
    \ April 2002.\n   [RFC3507]  Elson, J. and A. Cerpa, \"Internet Content Adaptation\n\
    \              Protocol (ICAP)\", RFC 3507, April 2003.\n   [RFC3986]  Berners-Lee,\
    \ T., Fielding, R., and L. Masinter, \"Uniform\n              Resource Identifier\
    \ (URI): Generic Syntax\", STD 66,\n              RFC 3986, January 2005.\n  \
    \ [RFC4329]  Hoehrmann, B., \"Scripting Media Types\", RFC 4329,\n           \
    \   April 2006.\n   [RFC4594]  Babiarz, J., Chan, K., and F. Baker, \"Configuration\n\
    \              Guidelines for DiffServ Service Classes\", RFC 4594,\n        \
    \      August 2006.\n"
- title: 15.2.  Informative References
  contents:
  - "15.2.  Informative References\n   [CableLabs_DOCSIS]\n              CableLabs,\
    \ \"Data-Over-Cable Service Interface\n              Specifications\", CableLabs\
    \ Specifications, Various DOCSIS\n              Reference Documents, <http://www.cablelabs.com/\n\
    \              specifications/archives/docsis.html>.\n   [RFC3360]  Floyd, S.,\
    \ \"Inappropriate TCP Resets Considered Harmful\",\n              BCP 60, RFC\
    \ 3360, August 2002.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Chae Chung\n   Comcast Cable Communications\n   One Comcast\
    \ Center\n   1701 John F. Kennedy Boulevard\n   Philadelphia, PA  19103\n   US\n\
    \   EMail: chae_chung@cable.comcast.com\n   URI:   http://www.comcast.com\n  \
    \ Alex Kasyanov\n   Comcast Cable Communications\n   One Comcast Center\n   1701\
    \ John F. Kennedy Boulevard\n   Philadelphia, PA  19103\n   US\n   EMail: alexander_kasyanov@cable.comcast.com\n\
    \   URI:   http://www.comcast.com\n   Jason Livingood\n   Comcast Cable Communications\n\
    \   One Comcast Center\n   1701 John F. Kennedy Boulevard\n   Philadelphia, PA\
    \  19103\n   US\n   EMail: jason_livingood@cable.comcast.com\n   URI:   http://www.comcast.com\n\
    \   Nirmal Mody\n   Comcast Cable Communications\n   One Comcast Center\n   1701\
    \ John F. Kennedy Boulevard\n   Philadelphia, PA  19103\n   US\n   EMail: nirmal_mody@cable.comcast.com\n\
    \   URI:   http://www.comcast.com\n   Brian Van Lieu\n   Unaffiliated\n   Bethlehem,\
    \ PA  18018\n   US\n   EMail: brian@vanlieu.net\n"
