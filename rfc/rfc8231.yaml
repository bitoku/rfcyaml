- contents:
  - "         Path Computation Element Communication Protocol (PCEP)\n                      Extensions
    for Stateful PCE\n"
  title: __initial_text__
- contents:
  - "Abstract\n   The Path Computation Element Communication Protocol (PCEP) provides\n
    \  mechanisms for Path Computation Elements (PCEs) to perform path\n   computations
    in response to Path Computation Client (PCC) requests.\n   Although PCEP explicitly
    makes no assumptions regarding the\n   information available to the PCE, it also
    makes no provisions for PCE\n   control of timing and sequence of path computations
    within and across\n   PCEP sessions.  This document describes a set of extensions
    to PCEP\n   to enable stateful control of MPLS-TE and GMPLS Label Switched Paths\n
    \  (LSPs) via PCEP.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8231.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................5\n
    \     1.1. Requirements Language ......................................5\n   2.
    Terminology .....................................................5\n   3. Motivation
    and Objectives for Stateful PCE ......................6\n      3.1. Motivation
    .................................................6\n           3.1.1. Background
    ..........................................6\n           3.1.2. Why a Stateful
    PCE? .................................7\n           3.1.3. Protocol vs. Configuration
    ..........................8\n      3.2. Objectives .................................................9\n
    \  4. New Functions to Support Stateful PCEs ..........................9\n   5.
    Overview of Protocol Extensions ................................10\n      5.1.
    LSP State Ownership .......................................10\n      5.2. New
    Messages ..............................................11\n      5.3. Error Reporting
    ...........................................11\n      5.4. Capability Advertisement
    ..................................11\n      5.5. IGP Extensions for Stateful PCE
    Capabilities\n           Advertisement .............................................12\n
    \     5.6. State Synchronization .....................................13\n      5.7.
    LSP Delegation ............................................16\n           5.7.1.
    Delegating an LSP ..................................16\n           5.7.2. Revoking
    a Delegation ..............................17\n           5.7.3. Returning a Delegation
    .............................19\n           5.7.4. Redundant Stateful PCEs ............................19\n
    \          5.7.5. Redelegation on PCE Failure ........................20\n      5.8.
    LSP Operations ............................................21\n           5.8.1.
    Passive Stateful PCE Path Computation\n                  Request/Response ...................................21\n
    \          5.8.2. Switching from Passive Stateful to Active\n                  Stateful
    ...........................................22\n           5.8.3. Active Stateful
    PCE LSP Update .....................23\n      5.9. LSP Protection ............................................24\n
    \     5.10. PCEP Sessions ............................................24\n   6.
    PCEP Messages ..................................................25\n      6.1.
    The PCRpt Message .........................................25\n      6.2. The
    PCUpd Message .........................................27\n      6.3. The PCErr
    Message .........................................30\n      6.4. The PCReq Message
    .........................................31\n      6.5. The PCRep Message .........................................31\n
    \  7. Object Formats .................................................32\n      7.1.
    OPEN Object ...............................................32\n           7.1.1.
    STATEFUL-PCE-CAPABILITY TLV ........................32\n      7.2. SRP Object
    ................................................33\n      7.3. LSP Object ................................................34\n
    \          7.3.1. LSP-IDENTIFIERS TLVs ...............................36\n           7.3.2.
    Symbolic Path Name TLV .............................39\n           7.3.3. LSP
    Error Code TLV .................................40\n           7.3.4. RSVP Error
    Spec TLV ................................41\n   8. IANA Considerations ............................................42\n
    \     8.1. PCE Capabilities in IGP Advertisements ....................42\n      8.2.
    PCEP Messages .............................................43\n      8.3. PCEP
    Objects ..............................................43\n      8.4. LSP Object
    ................................................44\n      8.5. PCEP-Error Object
    .........................................45\n      8.6. Notification Object .......................................46\n
    \     8.7. PCEP TLV Type Indicators ..................................46\n      8.8.
    STATEFUL-PCE-CAPABILITY TLV ...............................47\n      8.9. LSP-ERROR-CODE
    TLV ........................................47\n   9. Manageability Considerations
    ...................................48\n      9.1. Control Function and Policy
    ...............................48\n      9.2. Information and Data Models ...............................49\n
    \     9.3. Liveness Detection and Monitoring .........................49\n      9.4.
    Verifying Correct Operation ...............................49\n      9.5. Requirements
    on Other Protocols and Functional\n           Components ................................................50\n
    \     9.6. Impact on Network Operation ...............................50\n   10.
    Security Considerations .......................................50\n      10.1.
    Vulnerability ............................................50\n      10.2. LSP
    State Snooping .......................................51\n      10.3. Malicious
    PCE ............................................51\n      10.4. Malicious PCC
    ............................................52\n   11. References ....................................................52\n
    \     11.1. Normative References .....................................52\n      11.2.
    Informative References ...................................53\n   Acknowledgements
    ..................................................55\n   Contributors ......................................................56\n
    \  Authors' Addresses ................................................57\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   [RFC5440] describes the Path Computation Element Communication\n
    \  Protocol (PCEP).  PCEP defines the communication between a Path\n   Computation
    Client (PCC) and a Path Computation Element (PCE), or\n   between PCEs, enabling
    computation of Multiprotocol Label Switching\n   (MPLS) for Traffic Engineering
    Label Switched Path (TE LSP)\n   characteristics.  Extensions for support of Generalized
    MPLS (GMPLS)\n   in PCEP are defined in [PCEP-GMPLS].\n   This document specifies
    a set of extensions to PCEP to enable\n   stateful control of LSPs within and
    across PCEP sessions in\n   compliance with [RFC4657].  It includes mechanisms
    to effect Label\n   Switched Path (LSP) State Synchronization between PCCs and
    PCEs,\n   delegation of control over LSPs to PCEs, and PCE control of timing\n
    \  and sequence of path computations within and across PCEP sessions.\n   Extensions
    to permit the PCE to drive creation of an LSP are defined\n   in [PCE-Init-LSP],
    which specifies PCE-initiated LSP creation.\n"
  - contents:
    - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT
      RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted
      as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear
      in all\n   capitals, as shown here.\n"
    title: 1.1.  Requirements Language
  title: 1.  Introduction
- contents:
  - "2.  Terminology\n   This document uses the following terms defined in [RFC5440]:
    PCC,\n   PCE, PCEP Peer, and PCEP speaker.\n   This document uses the following
    terms defined in [RFC4655]: Traffic\n   Engineering Database (TED).\n   This document
    uses the following terms defined in [RFC3031]: LSP.\n   This document uses the
    following terms defined in [RFC8051]: Stateful\n   PCE, Passive Stateful PCE,
    Active Stateful PCE, Delegation, and LSP\n   State Database.\n   The following
    terms are defined in this document:\n   Revocation:  an operation performed by
    a PCC on a previously\n      delegated LSP.  Revocation revokes the rights granted
    to the PCE\n      in the delegation operation.\n   Redelegation Timeout Interval:
    \ the period of time a PCC waits for,\n      when a PCEP session is terminated,
    before revoking LSP delegation\n      to a PCE and attempting to redelegate LSPs
    associated with the\n      terminated PCEP session to an alternate PCE.  The Redelegation\n
    \     Timeout Interval is a PCC-local value that can be either operator\n      configured
    or dynamically computed by the PCC based on local\n      policy.\n   State Timeout
    Interval:  the period of time a PCC waits for, when a\n      PCEP session is terminated,
    before flushing LSP state associated\n      with that PCEP session and reverting
    to operator-defined default\n      parameters or behaviors.  The State Timeout
    Interval is a PCC-\n      local value that can be either operator configured or
    dynamically\n      computed by the PCC based on local policy.\n   LSP State Report:
    \ an operation to send LSP state (operational/\n      administrative status, LSP
    attributes configured at the PCC and\n      set by a PCE, etc.) from a PCC to
    a PCE.\n   LSP Update Request:  an operation where an Active Stateful PCE\n      requests
    a PCC to update one or more attributes of an LSP and to\n      re-signal the LSP
    with updated attributes.\n   SRP-ID-number:  a number used to correlate errors
    and LSP State\n      Reports to LSP Update Requests.  It is carried in the Stateful
    PCE\n      Request Parameter (SRP) object described in Section 7.2.\n   Within
    this document, PCEP communications are described through PCC-\n   PCE relationships.
    \ The PCE architecture also supports PCE-PCE\n   communication, by having the
    requesting PCE fill the role of a PCC,\n   as usual.\n   The message formats in
    this document are specified using Routing\n   Backus-Naur Format (RBNF) encoding
    as specified in [RFC5511].\n"
  title: 2.  Terminology
- contents:
  - '3.  Motivation and Objectives for Stateful PCE

    '
  - contents:
    - "3.1.  Motivation\n   [RFC8051] presents several use cases, demonstrating scenarios
      that\n   benefit from the deployment of a stateful PCE.  The scenarios apply\n
      \  equally to MPLS-TE and GMPLS deployments.\n"
    - contents:
      - "3.1.1.  Background\n   Traffic engineering has been a goal of the MPLS architecture
        since\n   its inception [RFC2702] [RFC3031] [RFC3346].  In the traffic\n   engineering
        system provided by [RFC3209], [RFC3630], and [RFC5305],\n   information about
        network resources utilization is only available as\n   total reserved capacity
        by the traffic class on a per-interface\n   basis; individual LSP state is
        available only locally on each Label\n   Edge Router (LER) for its own LSPs.
        \ In most cases, this makes good\n   sense, as distribution and retention
        of total LSP state for all LERs\n   within in the network would be prohibitively
        costly.\n   Unfortunately, this visibility in terms of global LSP state may\n
        \  result in a number of issues for some demand patterns, particularly\n   within
        a common setup and hold priority.  This issue affects online\n   traffic engineering
        systems.\n   A sufficiently over-provisioned system will by definition have
        no\n   issues routing its demand on the shortest path.  However, lowering\n
        \  the degree to which network over-provisioning is required in order to\n
        \  run a healthy, functioning network is a clear and explicit promise of\n
        \  MPLS architecture.  In particular, it has been a goal of MPLS to\n   provide
        mechanisms to alleviate congestion scenarios in which\n   \"traffic streams
        are inefficiently mapped onto available resources;\n   causing subsets of
        network resources to become over-utilized while\n   others remain underutilized\"
        [RFC2702].\n"
      title: 3.1.1.  Background
    - contents:
      - "3.1.2.  Why a Stateful PCE?\n   [RFC4655] defines a stateful PCE to be one
        in which the PCE maintains\n   \"strict synchronization between the PCE and
        not only the network\n   states (in term of topology and resource information),
        but also the\n   set of computed paths and reserved resources in use in the
        network.\"\n   [RFC4655] also expressed a number of concerns with regard to
        a\n   stateful PCE, specifically:\n   o  Any reliable synchronization mechanism
        would result in significant\n      control-plane overhead\n   o  Out-of-band
        TED synchronization would be complex and prone to race\n      conditions\n
        \  o  Path calculations incorporating total network state would be\n      highly
        complex\n   In general, stress on the control plane will be directly proportional\n
        \  to the size of the system being controlled and the tightness of the\n   control
        loop and indirectly proportional to the amount of over-\n   provisioning in
        terms of both network capacity and reservation\n   overhead.\n   Despite these
        concerns in terms of implementation complexity and\n   scalability, several
        TE algorithms exist today that have been\n   demonstrated to be extremely
        effective in large TE systems, providing\n   both rapid convergence and significant
        benefits in terms of\n   optimality of resource usage [MXMN-TE].  All of these
        systems share\n   at least two common characteristics: the requirement for
        both global\n   visibility of a flow (or in this case, a TE LSP) state and
        for\n   ordered control of path reservations across devices within the system\n
        \  being controlled.  While some approaches have been suggested in order\n
        \  to remove the requirements for ordered control (see [MPLS-PC]), these\n
        \  approaches are highly dependent on traffic distribution and do not\n   allow
        for multiple simultaneous LSP priorities representing Diffserv\n   classes.\n
        \  The use cases described in [RFC8051] demonstrate a need for\n   visibility
        into global inter-PCC LSP state in PCE path computations\n   and for PCE control
        of sequence and timing in altering LSP path\n   characteristics within and
        across PCEP sessions.\n"
      title: 3.1.2.  Why a Stateful PCE?
    - contents:
      - "3.1.3.  Protocol vs. Configuration\n   Note that existing configuration tools
        and protocols can be used to\n   set LSP state, such as a Command Line Interface
        (CLI) tool.  However,\n   this solution has several shortcomings:\n   o  Scale
        & Performance: configuration operations often have\n      transactional semantics
        that are typically heavyweight and often\n      require processing of additional
        configuration portions beyond the\n      state being directly acted upon,
        with corresponding cost in CPU\n      cycles, negatively impacting both PCC
        stability LSP Update rate\n      capacity.\n   o  Security: when a PCC opens
        a configuration channel allowing a PCE\n      to send configuration, a malicious
        PCE may take advantage of this\n      ability to take over the PCC.  In contrast,
        the PCEP extensions\n      described in this document only allow a PCE control
        over a very\n      limited set of LSP attributes.\n   o  Interoperability:
        each vendor has a proprietary information model\n      for configuring LSP
        state, which limits interoperability of a\n      stateful PCE with PCCs from
        different vendors.  The PCEP\n      extensions described in this document
        allow for a common\n      information model for LSP state for all vendors.\n
        \  o  Efficient State Synchronization: configuration channels may be\n      heavyweight
        and unidirectional; therefore, efficient State\n      Synchronization between
        a PCC and a PCE may be a problem.\n"
      title: 3.1.3.  Protocol vs. Configuration
    title: 3.1.  Motivation
  - contents:
    - "3.2.  Objectives\n   The objectives for the protocol extensions to support
      stateful PCE\n   described in this document are as follows:\n   o  Allow a single
      PCC to interact with a mix of stateless and\n      stateful PCEs simultaneously
      using the same protocol, i.e., PCEP.\n   o  Support efficient LSP State Synchronization
      between the PCC and\n      one or more active or passive stateful PCEs.\n   o
      \ Allow a PCC to delegate control of its LSPs to an active stateful\n      PCE
      such that a given LSP is under the control of a single PCE at\n      any given
      time.\n      *  A PCC may revoke this delegation at any time during the\n         lifetime
      of the LSP.  If LSP delegation is revoked while the\n         PCEP session is
      up, the PCC MUST notify the PCE about the\n         revocation.\n      *  A
      PCE may return an LSP delegation at any point during the\n         lifetime
      of the PCEP session.  If LSP delegation is returned by\n         the PCE while
      the PCEP session is up, the PCE MUST notify the\n         PCC about the returned
      delegation.\n   o  Allow a PCE to control computation timing and update timing
      across\n      all LSPs that have been delegated to it.\n   o  Enable uninterrupted
      operation of a PCC's LSPs in the event of a\n      PCE failure or while control
      of LSPs is being transferred between\n      PCEs.\n"
    title: 3.2.  Objectives
  title: 3.  Motivation and Objectives for Stateful PCE
- contents:
  - "4.  New Functions to Support Stateful PCEs\n   Several new functions are required
    in PCEP to support stateful PCEs.\n   A function can be initiated either from
    a PCC towards a PCE (C-E) or\n   from a PCE towards a PCC (E-C).  The new functions
    are:\n   Capability advertisement (E-C,C-E):  both the PCC and the PCE must\n
    \     announce during PCEP session establishment that they support PCEP\n      Stateful
    PCE extensions defined in this document.\n   LSP State Synchronization (C-E):
    \ after the session between the PCC\n      and a stateful PCE is initialized,
    the PCE must learn the state of\n      a PCC's LSPs before it can perform path
    computations or update LSP\n      attributes in a PCC.\n   LSP Update Request
    (E-C):  a PCE requests modification of attributes\n      on a PCC's LSP.\n   LSP
    State Report (C-E):  a PCC sends an LSP State Report to a PCE\n      whenever
    the state of an LSP changes.\n   LSP control delegation (C-E,E-C):  a PCC grants
    to a PCE the right to\n      update LSP attributes on one or more LSPs; the PCE
    becomes the\n      authoritative source of the LSP's attributes as long as the\n
    \     delegation is in effect (see Section 5.7); the PCC may withdraw\n      the
    delegation or the PCE may give up the delegation at any time.\n   Similarly to
    [RFC5440], no assumption is made about the discovery\n   method used by a PCC
    to discover a set of PCEs (e.g., via static\n   configuration or dynamic discovery)
    and on the algorithm used to\n   select a PCE.\n"
  title: 4.  New Functions to Support Stateful PCEs
- contents:
  - '5.  Overview of Protocol Extensions

    '
  - contents:
    - "5.1.  LSP State Ownership\n   In PCEP (defined in [RFC5440]), LSP state and
      operation are under the\n   control of a PCC (a PCC may be a Label Switching
      Router (LSR) or a\n   management station).  Attributes received from a PCE are
      subject to\n   PCC's local policy.  The PCEP extensions described in this document\n
      \  do not change this behavior.\n   An active stateful PCE may have control
      of a PCC's LSPs that were\n   delegated to it, but the LSP state ownership is
      retained by the PCC.\n   In particular, in addition to specifying values for
      LSP's attributes,\n   an active stateful PCE also decides when to make LSP modifications.\n
      \  Retaining LSP state ownership on the PCC allows for:\n   o  a PCC to interact
      with both stateless and stateful PCEs at the\n      same time\n   o  a stateful
      PCE to only modify a small subset of LSP parameters,\n      i.e., to set only
      a small subset of the overall LSP state; other\n      parameters may be set
      by the operator, for example, through CLI\n      commands\n   o  a PCC to revert
      delegated LSP to an operator-defined default or to\n      delegate the LSPs
      to a different PCE, if the PCC gets disconnected\n      from a PCE with currently
      delegated LSPs\n"
    title: 5.1.  LSP State Ownership
  - contents:
    - "5.2.  New Messages\n   In this document, we define the following new PCEP messages:\n
      \  Path Computation State Report (PCRpt):  a PCEP message sent by a PCC\n      to
      a PCE to report the status of one or more LSPs.  Each LSP State\n      Report
      in a PCRpt message MAY contain the actual LSP's path,\n      bandwidth, operational
      and administrative status, etc.  An LSP\n      Status Report carried on a PCRpt
      message is also used in\n      delegation or revocation of control of an LSP
      to/from a PCE.  The\n      PCRpt message is described in Section 6.1.\n   Path
      Computation Update Request (PCUpd):  a PCEP message sent by a\n      PCE to
      a PCC to update LSP parameters, on one or more LSPs.  Each\n      LSP Update
      Request on a PCUpd message MUST contain all LSP\n      parameters that a PCE
      wishes to be set for a given LSP.  An LSP\n      Update Request carried on a
      PCUpd message is also used to return\n      LSP delegations if at any point
      PCE no longer desires control of\n      an LSP.  The PCUpd message is described
      in Section 6.2.\n   The new functions defined in Section 4 are mapped onto the
      new\n   messages as shown in the following table.\n         +----------------------------------------+--------------+\n
      \        | Function                               | Message      |\n         +----------------------------------------+--------------+\n
      \        | Capability Advertisement (E-C,C-E)     | Open         |\n         |
      State Synchronization (C-E)            | PCRpt        |\n         | LSP State
      Report (C-E)                 | PCRpt        |\n         | LSP Control Delegation
      (C-E,E-C)       | PCRpt, PCUpd |\n         | LSP Update Request (E-C)               |
      PCUpd        |\n         +----------------------------------------+--------------+\n
      \                Table 1: New Function to Message Mapping\n"
    title: 5.2.  New Messages
  - contents:
    - "5.3.  Error Reporting\n   Error reporting is done using the procedures defined
      in [RFC5440] and\n   reusing the applicable error types and error values of
      [RFC5440]\n   wherever appropriate.  The current document defines new error
      values\n   for several error types to cover failures specific to stateful PCE.\n"
    title: 5.3.  Error Reporting
  - contents:
    - "5.4.  Capability Advertisement\n   During the PCEP initialization phase, PCEP
      speakers (PCE or PCC)\n   advertise their support of PCEP Stateful PCE extensions.
      \ A PCEP\n   speaker includes the \"STATEFUL-PCE-CAPABILITY TLV\", described
      in\n   Section 7.1.1, in the OPEN object to advertise its support for PCEP\n
      \  Stateful PCE extensions.  The STATEFUL-PCE-CAPABILITY TLV includes\n   the
      'LSP Update' flag that indicates whether the PCEP speaker\n   supports LSP parameter
      updates.\n   The presence of the STATEFUL-PCE-CAPABILITY TLV in PCC's OPEN object\n
      \  indicates that the PCC is willing to send LSP State Reports whenever\n   LSP
      parameters or operational status changes.\n   The presence of the STATEFUL-PCE-CAPABILITY
      TLV in PCE's OPEN message\n   indicates that the PCE is interested in receiving
      LSP State Reports\n   whenever LSP parameters or operational status changes.\n
      \  The PCEP extensions for stateful PCEs MUST NOT be used if one or both\n   PCEP
      speakers have not included the STATEFUL-PCE-CAPABILITY TLV in\n   their respective
      OPEN message.  If the PCEP speaker on the PCC\n   supports the extensions of
      this specification but did not advertise\n   this capability, then upon receipt
      of a PCUpd message from the PCE,\n   it MUST generate a PCEP Error (PCErr) with
      Error-type=19 (Invalid\n   Operation) and error-value 2 (Attempted LSP Update
      Request if the\n   stateful PCE capability was not advertised)(see Section 8.5),
      and it\n   SHOULD terminate the PCEP session.  If the PCEP Speaker on the PCE\n
      \  supports the extensions of this specification but did not advertise\n   this
      capability, then upon receipt of a PCRpt message from the PCC,\n   it MUST generate
      a PCErr with Error-type=19 (Invalid Operation) and\n   error-value 5 (Attempted
      LSP State Report if stateful PCE capability\n   was not advertised) (see Section
      8.5), and it SHOULD terminate the\n   PCEP session.\n   LSP delegation and LSP
      Update operations defined in this document may\n   only be used if both PCEP
      speakers set the LSP-UPDATE-CAPABILITY flag\n   in the STATEFUL-PCE-CAPABILITY
      TLV to 'Updates Allowed (U flag = 1)'.\n   If this is not the case and LSP delegation
      or LSP Update operations\n   are attempted, then a PCErr with Error-type=19
      (Invalid Operation)\n   and error-value 1 (Attempted LSP Update Request for
      a non-delegated\n   LSP) (see Section 8.5) MUST be generated.  Note that, even
      if one of\n   the PCEP speakers does not set the LSP-UPDATE-CAPABILITY flag
      in its\n   STATEFUL-PCE-CAPABILITY TLV, a PCE can still operate as a passive\n
      \  stateful PCE by accepting LSP State Reports from the PCC in order to\n   build
      and maintain an up-to-date view of the state of the PCC's LSPs.\n"
    title: 5.4.  Capability Advertisement
  - contents:
    - "5.5.  IGP Extensions for Stateful PCE Capabilities Advertisement\n   When PCCs
      are LSRs participating in the IGP (OSPF or IS-IS), and PCEs\n   are either LSRs
      or servers also participating in the IGP, an\n   effective mechanism for PCE
      discovery within an IGP routing domain\n   consists of utilizing IGP advertisements.
      \ Extensions for the\n   advertisement of PCE Discovery Information are defined
      for OSPF and\n   for IS-IS in [RFC5088] and [RFC5089], respectively.\n   The
      PCE-CAP-FLAGS sub-TLV, defined in [RFC5089], is an optional\n   sub-TLV used
      to advertise PCE capabilities.  It MAY be present within\n   the PCE Discovery
      (PCED) sub-TLV carried by OSPF or IS-IS.  [RFC5088]\n   and [RFC5089] provide
      the description and processing rules for this\n   sub-TLV when carried within
      OSPF and IS-IS, respectively.\n   The format of the PCE-CAP-FLAGS sub-TLV is
      included below for easy\n   reference:\n   Type:  5\n   Length:  Multiple of
      4.\n   Value:  This contains an array of units of 32-bit flags with the most\n
      \     significant bit as 0.  Each bit represents one PCE capability.\n   PCE
      capability bits are defined in [RFC5088].  This document defines\n   new capability
      bits for the stateful PCE as follows:\n                  Bit    Capability\n
      \                 ---    -------------------------------\n                  11
      \    Active stateful PCE capability\n                  12     Passive stateful
      PCE capability\n   Note that while active and passive stateful PCE capabilities
      may be\n   advertised during discovery, PCEP speakers that wish to use stateful\n
      \  PCEP MUST negotiate stateful PCEP capabilities during PCEP session\n   setup,
      as specified in the current document.  A PCC MAY initiate\n   stateful PCEP
      capability negotiation at PCEP session setup even if it\n   did not receive
      any IGP PCE capability advertisements.\n"
    title: 5.5.  IGP Extensions for Stateful PCE Capabilities Advertisement
  - contents:
    - "5.6.  State Synchronization\n   The purpose of State Synchronization is to
      provide a\n   checkpoint-in-time state replica of a PCC's LSP state in a PCE.\n
      \  State Synchronization is performed immediately after the\n   initialization
      phase [RFC5440].\n   During State Synchronization, a PCC first takes a snapshot
      of the\n   state of its LSPs, then it sends the snapshot to a PCE in a sequence\n
      \  of LSP State Reports.  Each LSP State Report sent during State\n   Synchronization
      has the SYNC flag in the LSP object set to 1.  The\n   set of LSPs for which
      state is synchronized with a PCE is determined\n   by the PCC's local configuration
      (see more details in Section 9.1)\n   and MAY also be determined by stateful
      PCEP capabilities defined in\n   other documents, such as [RFC8232].\n   The
      end of the synchronization marker is a PCRpt message with the\n   SYNC flag
      set to 0 for an LSP object with PLSP-ID equal to the\n   reserved value 0 (see
      Section 7.3).  In this case, the LSP object\n   SHOULD NOT include the SYMBOLIC-PATH-NAME
      TLV and SHOULD include the\n   LSP-IDENTIFIERS TLV with the special value of
      all zeroes.  The PCRpt\n   message MUST include an empty Explicit Route Object
      (ERO) as its\n   intended path and SHOULD NOT include the optional Record Route
      Object\n   (RRO) for its actual path.  If the PCC has no state to synchronize,\n
      \  it SHOULD only send the end of the synchronization marker.\n   A PCE SHOULD
      NOT send PCUpd messages to a PCC before State\n   Synchronization is complete.
      \ A PCC SHOULD NOT send PCReq messages to\n   a PCE before State Synchronization
      is complete.  This is to allow the\n   PCE to get the best possible view of
      the network before it starts\n   computing new paths.\n   Either the PCE or
      the PCC MAY terminate the session using the PCEP\n   session termination procedures
      during the synchronization phase.  If\n   the session is terminated, the PCE
      MUST clean up the state it\n   received from this PCC.  The session re-establishment
      MUST be\n   re-attempted per the procedures defined in [RFC5440], including
      use\n   of a backoff timer.\n   If the PCC encounters a problem that prevents
      it from completing the\n   LSP State Synchronization, it MUST send a PCErr message
      with\n   error-type 20 (LSP State Synchronization Error) and error-value 5\n
      \  (indicating an internal PCC error) to the PCE and terminate the\n   session.\n
      \  The PCE does not send positive acknowledgments for properly received\n   synchronization
      messages.  It MUST respond with a PCErr message with\n   Error-type=20 (LSP
      State Synchronization Error) and error-value 1\n   (indicating an error in processing
      the PCRpt) (see Section 8.5) if it\n   encounters a problem with the LSP State
      Report it received from the\n   PCC, and it MUST terminate the session.\n   A
      PCE implementing a limit on the resources a single PCC can occupy\n   MUST send
      a PCEP Notify (PCNtf) message with Notification Type 4\n   (Stateful PCE resource
      limit exceeded) and Notification Value 1\n   (Entering resource limit exceeded
      state) in response to the PCRpt\n   message triggering this condition in the
      synchronization phase and\n   MUST terminate the session.\n   The successful
      State Synchronization sequence is shown in Figure 1.\n                     +-+-+
      \                   +-+-+\n                     |PCC|                    |PCE|\n
      \                    +-+-+                    +-+-+\n                       |
      \                       |\n                       |-----PCRpt, SYNC=1----->|
      (Sync start)\n                       |                        |\n                       |-----PCRpt,
      SYNC=1----->|\n                       |            .           |\n                       |
      \           .           |\n                       |            .           |\n
      \                      |-----PCRpt, SYNC=1----->|\n                       |
      \           .           |\n                       |            .           |\n
      \                      |            .           |\n                       |
      \                       |\n                       |-----PCRpt, SYNC=0----->|
      (End of sync marker\n                       |                        |  LSP
      State Report\n                       |                        |  for PLSP-ID=0)\n
      \                      |                        | (Sync done)\n                Figure
      1: Successful State Synchronization\n   The sequence where the PCE fails during
      the State Synchronization\n   phase is shown in Figure 2.\n                     +-+-+
      \                   +-+-+\n                     |PCC|                    |PCE|\n
      \                    +-+-+                    +-+-+\n                       |
      \                       |\n                       |-----PCRpt, SYNC=1----->|\n
      \                      |                        |\n                       |-----PCRpt,
      SYNC=1----->|\n                       |            .           |\n                       |
      \           .           |\n                       |            .           |\n
      \                      |-----PCRpt, SYNC=1----->|\n                       |
      \                       |\n                       |-PCRpt, SYNC=1          |\n
      \                      |         \\    ,-PCErr   |\n                       |
      \         \\  /          |\n                       |           \\/           |\n
      \                      |           /\\           |\n                       |
      \         /   `-------->| (Ignored)\n                       |<--------`              |\n
      \          Figure 2: Failed State Synchronization (PCE Failure)\n   The sequence
      where the PCC fails during the State Synchronization\n   phase is shown in Figure
      3.\n                     +-+-+                    +-+-+\n                     |PCC|
      \                   |PCE|\n                     +-+-+                    +-+-+\n
      \                      |                        |\n                       |-----PCRpt,
      SYNC=1----->|\n                       |                        |\n                       |-----PCRpt,
      SYNC=1----->|\n                       |            .           |\n                       |
      \           .           |\n                       |            .           |\n
      \                      |-------- PCErr=? ------>|\n                       |
      \                       |\n           Figure 3: Failed State Synchronization
      (PCC Failure)\n   Optimizations to the synchronization procedures and alternate\n
      \  mechanisms of providing the synchronization function are outside the\n   scope
      of this document and are discussed elsewhere (see [RFC8232]).\n"
    title: 5.6.  State Synchronization
  - contents:
    - "5.7.  LSP Delegation\n   If during capability advertisement both the PCE and
      the PCC have\n   indicated that they support LSP Update, then the PCC may choose
      to\n   grant the PCE a temporary right to update (a subset of) LSP\n   attributes
      on one or more LSPs.  This is called \"LSP delegation\", and\n   it MAY be performed
      at any time after the initialization phase,\n   including during the State Synchronization
      phase.\n   A PCE MAY return an LSP delegation at any time if it no longer wishes\n
      \  to update the LSP's state.  A PCC MAY revoke an LSP delegation at any\n   time.
      \ Delegation, Revocation, and Return are done individually for\n   each LSP.\n
      \  In the event of a delegation being rejected or returned by a PCE, the\n   PCC
      SHOULD react based on local policy.  It can, for example, either\n   retry delegating
      to the same PCE using an exponentially increasing\n   timer or delegate to an
      alternate PCE.\n"
    - contents:
      - "5.7.1.  Delegating an LSP\n   A PCC delegates an LSP to a PCE by setting
        the Delegate flag in the\n   LSP State Report to 1.  If the PCE does not accept
        the LSP\n   delegation, it MUST immediately respond with an empty LSP Update\n
        \  Request that has the Delegate flag set to 0.  If the PCE accepts the\n
        \  LSP delegation, it MUST set the Delegate flag to 1 when it sends an\n   LSP
        Update Request for the delegated LSP (note that this may occur at\n   a later
        time).  The PCE MAY also immediately acknowledge a delegation\n   by sending
        an empty LSP Update Request that has the Delegate flag set\n   to 1.\n   The
        delegation sequence is shown in Figure 4.\n                     +-+-+                    +-+-+\n
        \                    |PCC|                    |PCE|\n                     +-+-+
        \                   +-+-+\n                       |                        |\n
        \                      |---PCRpt, Delegate=1--->| LSP delegated\n                       |
        \                       |\n                       |---PCRpt, Delegate=1--->|\n
        \                      |            .           |\n                       |
        \           .           |\n                       |            .           |\n
        \                      |<--(PCUpd,Delegate=1)---| Delegation confirmed\n                       |
        \                       |\n                       |---PCRpt, Delegate=1--->|\n
        \                      |                        |\n                        Figure
        4: Delegating an LSP\n   Note that for an LSP to remain delegated to a PCE,
        the PCC MUST set\n   the Delegate flag to 1 on each LSP State Report sent
        to the PCE.\n"
      title: 5.7.1.  Delegating an LSP
    - contents:
      - '5.7.2.  Revoking a Delegation

        '
      - contents:
        - "5.7.2.1.  Explicit Revocation\n   When a PCC decides that a PCE is no longer
          permitted to modify an\n   LSP, it revokes that LSP's delegation to the
          PCE.  A PCC may revoke\n   an LSP delegation at any time during the LSP's
          lifetime.  A PCC\n   revoking an LSP delegation MAY immediately remove the
          updated\n   parameters provided by the PCE and revert to the operator-defined\n
          \  parameters, but to avoid traffic loss, it SHOULD do so in a\n   make-before-break
          fashion.  If the PCC has received but not yet acted\n   on PCUpd messages
          from the PCE for the LSP whose delegation is being\n   revoked, then it
          SHOULD ignore these PCUpd messages when processing\n   the message queue.
          \ All effects of all messages for which processing\n   started before the
          revocation took place MUST be allowed to complete,\n   and the result MUST
          be given the same treatment as any LSP that had\n   been previously delegated
          to the PCE (e.g., the state MAY immediately\n   revert to the operator-defined
          parameters).\n   If a PCEP session with the PCE to which the LSP is delegated
          exists\n   in the UP state during the revocation, the PCC MUST notify that
          PCE\n   by sending an LSP State Report with the Delegate flag set to 0,
          as\n   shown in Figure 5.\n                     +-+-+                    +-+-+\n
          \                    |PCC|                    |PCE|\n                     +-+-+
          \                   +-+-+\n                       |                        |\n
          \                      |---PCRpt, Delegate=1--->|\n                       |
          \                       |\n                       |<--(PCUpd,Delegate=1)---|
          Delegation confirmed\n                       |            .           |\n
          \                      |            .           |\n                       |
          \           .           |\n                       |---PCRpt, Delegate=0--->|
          PCC revokes delegation\n                       |                        |\n
          \                     Figure 5: Revoking a Delegation\n   After an LSP delegation
          has been revoked, a PCE can no longer update\n   an LSP's parameters; an
          attempt to update parameters of a\n   non-delegated LSP will result in the
          PCC sending a PCErr message with\n   Error-type=19 (Invalid Operation) and
          error-value 1 (Attempted LSP\n   Update Request for a non-delegated LSP)
          (see Section 8.5).\n"
        title: 5.7.2.1.  Explicit Revocation
      - contents:
        - "5.7.2.2.  Revocation on Redelegation Timeout\n   When a PCC's PCEP session
          with a PCE terminates unexpectedly, the PCC\n   MUST wait the time interval
          specified in the Redelegation Timeout\n   Interval before revoking LSP delegations
          to that PCE and attempting\n   to redelegate LSPs to an alternate PCE.  If
          a PCEP session with the\n   original PCE can be re-established before the
          Redelegation Timeout\n   Interval timer expires, LSP delegations to the
          PCE remain intact.\n   Likewise, when a PCC's PCEP session with a PCE terminates\n
          \  unexpectedly, and the PCC does not succeed in redelegating its LSPs,\n
          \  the PCC MUST wait for the State Timeout Interval before flushing any\n
          \  LSP state associated with that PCE.  Note that the State Timeout\n   Interval
          timer may expire before the PCC has redelegated the LSPs to\n   another
          PCE, for example, if a PCC is not connected to any active\n   stateful PCE
          or if no connected active stateful PCE accepts the\n   delegation.  In this
          case, the PCC MUST flush any LSP state set by\n   the PCE upon expiration
          of the State Timeout Interval and revert to\n   operator-defined default
          parameters or behaviors.  This operation\n   SHOULD be done in a make-before-break
          fashion.\n   The State Timeout Interval MUST be greater than or equal to
          the\n   Redelegation Timeout Interval and MAY be set to infinity (meaning\n
          \  that until the PCC specifically takes action to change the parameters\n
          \  set by the PCE, they will remain intact).\n"
        title: 5.7.2.2.  Revocation on Redelegation Timeout
      title: 5.7.2.  Revoking a Delegation
    - contents:
      - "5.7.3.  Returning a Delegation\n   In order to keep a delegation, a PCE MUST
        set the Delegate flag to 1\n   on each LSP Update Request sent to the PCC.
        \ A PCE that no longer\n   wishes to update an LSP's parameters SHOULD return
        the LSP delegation\n   back to the PCC by sending an empty LSP Update Request
        that has the\n   Delegate flag set to 0.  If a PCC receives an LSP Update
        Request with\n   the Delegate flag set to 0 (whether the LSP Update Request
        is empty\n   or not), it MUST treat this as a delegation return.\n                     +-+-+
        \                   +-+-+\n                     |PCC|                    |PCE|\n
        \                    +-+-+                    +-+-+\n                       |
        \                       |\n                       |---PCRpt, Delegate=1--->|
        LSP delegated\n                       |            .           |\n                       |
        \           .           |\n                       |            .           |\n
        \                      |<--PCUpd, Delegate=0----| Delegation returned\n                       |
        \                       |\n                       |---PCRpt, Delegate=0--->|
        No delegation for LSP\n                       |                        |\n
        \                    Figure 6: Returning a Delegation\n   If a PCC cannot
        delegate an LSP to a PCE (for example, if a PCC is\n   not connected to any
        active stateful PCE or if no connected active\n   stateful PCE accepts the
        delegation), the LSP delegation on the PCC\n   will timeout within a configurable
        Redelegation Timeout Interval, and\n   the PCC MUST flush any LSP state set
        by a PCE at the expiration of\n   the State Timeout Interval and revert to
        operator-defined default\n   parameters or behaviors.\n"
      title: 5.7.3.  Returning a Delegation
    - contents:
      - "5.7.4.  Redundant Stateful PCEs\n   In a redundant configuration where one
        PCE is backing up another PCE,\n   the backup PCE may have only a subset of
        the LSPs in the network\n   delegated to it.  The backup PCE does not update
        any LSPs that are\n   not delegated to it.  In order to allow the backup to
        operate in a\n   hot-standby mode and avoid the need for State Synchronization
        in case\n   the primary fails, the backup receives all LSP State Reports from
        a\n   PCC.  When the primary PCE for a given LSP set fails, after expiry of\n
        \  the Redelegation Timeout Interval, the PCC SHOULD delegate to the\n   redundant
        PCE all LSPs that had been previously delegated to the\n   failed PCE.  Assuming
        that the State Timeout Interval had been\n   configured to be greater than
        the Redelegation Timeout Interval (as\n   MANDATORY), and assuming that the
        primary and redundant PCEs take\n   similar decisions, this delegation change
        will not cause any changes\n   to the LSP parameters.\n"
      title: 5.7.4.  Redundant Stateful PCEs
    - contents:
      - "5.7.5.  Redelegation on PCE Failure\n   On failure, the goal is to: 1) avoid
        any traffic loss on the LSPs\n   that were updated by the PCE that crashed,
        2) minimize the churn in\n   the network in terms of ownership of the LSPs,
        3) not leave any\n   \"orphan\" (undelegated) LSPs, and 4) be able to control
        when the state\n   that was set by the PCE can be changed or purged.  The
        values chosen\n   for the Redelegation Timeout and State Timeout values affect
        the\n   ability to accomplish these goals.\n   This section summarizes the
        behavior with regards to LSP delegation\n   and LSP state on a PCE failure.\n
        \  If the PCE crashes but recovers within the Redelegation Timeout, both\n
        \  the delegation state and the LSP state are kept intact.\n   If the PCE
        crashes but does not recover within the Redelegation\n   Timeout, the delegation
        state is returned to the PCC.  If the PCC can\n   redelegate the LSPs to another
        PCE, and that PCE accepts the\n   delegations, there will be no change in
        LSP state.  If the PCC cannot\n   redelegate the LSPs to another PCE, then
        upon expiration of the State\n   Timeout Interval, the state set by the PCE
        is removed and the LSP\n   reverts to operator-defined parameters, which may
        cause a change in\n   the LSP state.  Note that an operator may choose to
        use an infinite\n   State Timeout Interval if he wishes to maintain the PCE
        state\n   indefinitely.  Note also that flushing the state should be\n   implemented
        using make-before-break to avoid traffic loss.\n   If there is a standby PCE,
        the Redelegation Timeout may be set to 0\n   through policy on the PCC, causing
        the LSPs to be redelegated\n   immediately to the PCC, which can delegate
        them immediately to the\n   standby PCE.  Assuming that the PCC can redelegate
        the LSP to the\n   standby PCE within the State Timeout Interval, and assuming
        the\n   standby PCE takes similar decisions as the failed PCE, the LSP state\n
        \  will be kept intact.\n"
      title: 5.7.5.  Redelegation on PCE Failure
    title: 5.7.  LSP Delegation
  - contents:
    - '5.8.  LSP Operations

      '
    - contents:
      - "5.8.1.  Passive Stateful PCE Path Computation Request/Response\n                     +-+-+
        \                   +-+-+\n                     |PCC|                    |PCE|\n
        \                    +-+-+                    +-+-+\n                       |
        \                       |\n   1) Path computation |----- PCReq message --->|\n
        \     request sent to  |                        |2) Path computation\n      PCE
        \             |                        |   request received,\n                       |
        \                       |   path computed\n                       |                        |\n
        \                      |<---- PCRep message ----|3) Computed paths\n                       |
        \    (Positive reply)   |   sent to the PCC\n                       |     (Negative
        reply)   |\n   4) LSP state change |                        |\n      event
        \           |                        |\n                       |                        |\n
        \  5) LSP State Report |----- PCRpt message --->|\n      sent to all      |
        \           .           |\n      stateful PCEs    |            .           |\n
        \                      |            .           |\n   6) Repeat for each  |-----
        PCRpt message --->|\n      LSP state change |                        |\n                       |
        \                       |\n     Figure 7: Passive Stateful PCE Path Computation
        Request/Response\n   Once a PCC has successfully established a PCEP session
        with a passive\n   stateful PCE and the PCC's LSP state is synchronized with
        the PCE\n   (i.e., the PCE knows about all of the PCC's existing LSPs), if
        an\n   event is triggered that requires the computation of a set of paths,\n
        \  the PCC sends a path computation request to the PCE ([RFC5440],\n   Section
        4.2.3).  The PCReq message MAY contain the LSP object to\n   identify the
        LSP for which the path computation is requested.\n   Upon receiving a path
        computation request from a PCC, the PCE\n   triggers a path computation and
        returns either a positive or a\n   negative reply to the PCC ([RFC5440], Section
        4.2.4).\n   Upon receiving a positive path computation reply, the PCC receives
        a\n   set of computed paths and starts to set up the LSPs.  For each LSP,\n
        \  it MAY send an LSP State Report carried on a PCRpt message to the\n   PCE,
        indicating that the LSP's status is \"Going-up\".\n   Once an LSP is up or
        active, the PCC MUST send an LSP State Report\n   carried on a PCRpt message
        to the PCE, indicating that the LSP's\n   status is 'Up' or 'Active', respectively.
        \ If the LSP could not be\n   set up, the PCC MUST send an LSP State Report
        indicating that the LSP\n   is 'Down' and stating the cause of the failure.
        \ Note that due to\n   timing constraints, the LSP status may change from
        'Going-up' to 'Up'\n   (or 'Down') before the PCC has had a chance to send
        an LSP State\n   Report indicating that the status is 'Going-up'.  In such
        cases, the\n   PCC MAY choose to only send the PCRpt indicating the latest
        status\n   ('Active', 'Up', or 'Down').\n   Upon receiving a negative reply
        from a PCE, a PCC MAY resend a\n   modified request or take any other appropriate
        action.  For each\n   requested LSP, it SHOULD also send an LSP State Report
        carried on a\n   PCRpt message to the PCE, indicating that the LSP's status
        is 'Down'.\n   There is no direct correlation between PCRep and PCRpt messages.
        \ For\n   a given LSP, multiple LSP State Reports will follow a single PCRep\n
        \  message, as a PCC notifies a PCE of the LSP's state changes.\n   A PCC
        MUST send each LSP State Report to each stateful PCE that is\n   connected
        to the PCC.\n   Note that a single PCRpt message MAY contain multiple LSP
        State\n   Reports.\n   The passive stateful model for stateful PCEs is described
        in\n   [RFC4655], Section 6.8.\n"
      title: 5.8.1.  Passive Stateful PCE Path Computation Request/Response
    - contents:
      - "5.8.2.  Switching from Passive Stateful to Active Stateful\n   This section
        deals with the scenario of an LSP transitioning from a\n   passive stateful
        to an active stateful mode of operation.  When the\n   LSP has no working
        path, prior to delegating the LSP, the PCC MUST\n   first use the procedure
        defined in Section 5.8.1 to request the\n   initial path from the PCE.  This
        is required because the action of\n   delegating the LSP to a PCE using a
        PCRpt message is not an explicit\n   request to the PCE to compute a path
        for the LSP.  The only explicit\n   way for a PCC to request a path from the
        PCE is to send a PCReq\n   message.  The PCRpt message MUST NOT be used by
        the PCC to attempt to\n   request a path from the PCE.\n   When the LSP is
        delegated after its setup, it may be useful for the\n   PCC to communicate
        to the PCE the locally configured intended\n   configuration parameters, so
        that the PCE may reuse them in its\n   computations.  Such parameters MAY
        be acquired through an out-of-band\n   channel, or MAY be communicated in
        the PCRpt message delegating the\n   LSPs, by including them as part of the
        intended-attribute-list as\n   explained in Section 6.1.  An implementation
        MAY allow policies on\n   the PCC to determine the configuration parameters
        to be sent to the\n   PCE.\n"
      title: 5.8.2.  Switching from Passive Stateful to Active Stateful
    - contents:
      - "5.8.3.  Active Stateful PCE LSP Update\n                     +-+-+                    +-+-+\n
        \                    |PCC|                    |PCE|\n                     +-+-+
        \                   +-+-+\n                       |                        |\n
        \  1) LSP State        |-- PCRpt, Delegate=1 -->|\n      Synchronization  |
        \           .           |\n                       |            .           |2)
        PCE decides to\n                       |            .           |   update
        the LSP\n                       |                        |\n                       |<----
        PCUpd message ----|3) PCUpd message sent\n                       |                        |
        \  to the PCC\n                       |                        |\n                       |
        \                       |\n   4) LSP State Report |---- PCRpt message ---->|\n
        \     sent(->Going-up) |            .           |\n                       |
        \           .           |\n                       |            .           |\n
        \  5) LSP State Report |---- PCRpt message ---->|\n      sent (->Up|Down)
        |                        |\n                       |                        |\n
        \                      Figure 8: Active Stateful PCE\n   Once a PCC has successfully
        established a PCEP session with an active\n   stateful PCE, the PCC's LSP
        state is synchronized with the PCE (i.e.,\n   the PCE knows about all of the
        PCC's existing LSPs).  After LSPs have\n   been delegated to the PCE, the
        PCE can modify LSP parameters of\n   delegated LSPs.\n   To update an LSP,
        a PCE MUST send the PCC an LSP Update Request using\n   a PCUpd message.  The
        LSP Update Request contains a variety of\n   objects that specify the set
        of constraints and attributes for the\n   LSP's path.  Each LSP Update Request
        MUST have a unique identifier,\n   the SRP-ID-number, carried in the SRP object
        described in\n   Section 7.2.  The SRP-ID-number is used to correlate errors
        and state\n   reports to LSP Update Requests.  A single PCUpd message MAY
        contain\n   multiple LSP Update Requests.\n   Upon receiving a PCUpd message,
        the PCC starts to set up LSPs\n   specified in LSP Update Requests carried
        in the message.  For each\n   LSP, it MAY send an LSP State Report carried
        on a PCRpt message to\n   the PCE, indicating that the LSP's status is 'Going-up'.
        \ If the PCC\n   decides that the LSP parameters proposed in the PCUpd message
        are\n   unacceptable, it MUST report this error by including the\n   LSP-ERROR-CODE
        TLV (Section 7.3.3) with LSP error-value=\"Unacceptable\n   parameters\" in
        the LSP object in the PCRpt message to the PCE.  Based\n   on local policy,
        it MAY react further to this error by revoking the\n   delegation.  If the
        PCC receives a PCUpd message for an LSP object\n   identified with a PLSP-ID
        that does not exist on the PCC, it MUST\n   generate a PCErr with Error-type=19
        (Invalid Operation), error-value\n   3, (Attempted LSP Update Request for
        an LSP identified by an unknown\n   PSP-ID) (see Section 8.5).\n   Once an
        LSP is up, the PCC MUST send an LSP State Report (PCRpt\n   message) to the
        PCE, indicating that the LSP's status is 'Up'.  If\n   the LSP could not be
        set up, the PCC MUST send an LSP State Report\n   indicating that the LSP
        is 'Down' and stating the cause of the\n   failure.  A PCC MAY compress LSP
        State Reports to only reflect the\n   most up to date state, as discussed
        in the previous section.\n   A PCC MUST send each LSP State Report to each
        stateful PCE that is\n   connected to the PCC.\n   PCErr and PCRpt messages
        triggered as a result of a PCUpd message\n   MUST include the SRP-ID-number
        from the PCUpd.  This provides\n   correlation of requests and errors and
        acknowledgement of state\n   processing.  The PCC MAY compress the state when
        processing PCUpd.\n   In this case, receipt of a higher SRP-ID-number implicitly\n
        \  acknowledges processing all the updates with a lower SRP-ID-number\n   for
        the specific LSP (as per Section 7.2).\n   A PCC MUST NOT send to any PCE
        a path computation request for a\n   delegated LSP.  Should the PCC decide
        it wants to issue a Path\n   Computation Request on a delegated LSP, it MUST
        perform the\n   Delegation Revocation procedure first.\n"
      title: 5.8.3.  Active Stateful PCE LSP Update
    title: 5.8.  LSP Operations
  - contents:
    - "5.9.  LSP Protection\n   LSP protection and interaction with stateful PCE,
      as well as the\n   extensions necessary to implement this functionality, will
      be\n   discussed in a separate document.\n"
    title: 5.9.  LSP Protection
  - contents:
    - "5.10.  PCEP Sessions\n   A permanent PCEP session MUST be established between
      a stateful PCE\n   and the PCC.  In the case of session failure, session\n   re-establishment
      MUST be re-attempted per the procedures defined in\n   [RFC5440].\n"
    title: 5.10.  PCEP Sessions
  title: 5.  Overview of Protocol Extensions
- contents:
  - "6.  PCEP Messages\n   As defined in [RFC5440], a PCEP message consists of a common
    header\n   followed by a variable-length body made of a set of objects.  For\n
    \  each PCEP message type, a set of rules is defined that specifies the\n   set
    of objects that the message can carry.\n"
  - contents:
    - "6.1.  The PCRpt Message\n   A Path Computation LSP State Report message (also
      referred to as a\n   PCRpt message) is a PCEP message sent by a PCC to a PCE
      to report the\n   current state of an LSP.  A PCRpt message can carry more than
      one LSP\n   State Reports.  A PCC can send an LSP State Report either in response\n
      \  to an LSP Update Request from a PCE or asynchronously when the state\n   of
      an LSP changes.  The Message-Type field of the PCEP common header\n   for the
      PCRpt message is 10.\n   The format of the PCRpt message is as follows:\n      <PCRpt
      Message> ::= <Common Header>\n                          <state-report-list>\n
      \  Where:\n      <state-report-list> ::= <state-report>[<state-report-list>]\n
      \     <state-report> ::= [<SRP>]\n                         <LSP>\n                         <path>\n
      \   Where:\n      <path>::= <intended-path>\n                [<actual-attribute-list><actual-path>]\n
      \               <intended-attribute-list>\n      <actual-attribute-list>::=[<BANDWIDTH>]\n
      \                               [<metric-list>]\n   Where:\n      <intended-path>
      is represented by the ERO object defined in\n      Section 7.9 of [RFC5440].\n
      \     <actual-attribute-list> consists of the actual computed and\n      signaled
      values of the <BANDWIDTH> and <metric-lists> objects\n      defined in [RFC5440].\n
      \     <actual-path> is represented by the RRO object defined in\n      Section
      7.10 of [RFC5440].\n      <intended-attribute-list> is the attribute-list defined
      in\n      Section 6.5 of [RFC5440] and extended by PCEP extensions.\n   The
      SRP object (see Section 7.2) is OPTIONAL.  If the PCRpt message\n   is not in
      response to a PCupd message, the SRP object MAY be omitted.\n   When the PCC
      does not include the SRP object, the PCE MUST treat this\n   as an SRP object
      with an SRP-ID-number equal to the reserved value\n   0x00000000.  The reserved
      value 0x00000000 indicates that the state\n   reported is not a result of processing
      a PCUpd message.\n   If the PCRpt message is in response to a PCUpd message,
      the SRP\n   object MUST be included and the value of the SRP-ID-number in the
      SRP\n   object MUST be the same as that sent in the PCUpd message that\n   triggered
      the state that is reported.  If the PCC compressed several\n   PCUpd messages
      for the same LSP by only processing the one with the\n   highest number, then
      it should use the SRP-ID-number of that request.\n   No state compression is
      allowed for state reporting, e.g., PCRpt\n   messages MUST NOT be pruned from
      the PCC's egress queue even if\n   subsequent operations on the same LSP have
      been completed before the\n   PCRpt message has been sent to the TCP stack.
      \ The PCC MUST\n   explicitly report state changes (including removal) for paths
      it\n   manages.\n   The LSP object (see Section 7.3) is REQUIRED, and it MUST
      be included\n   in each LSP State Report on the PCRpt message.  If the LSP object
      is\n   missing, the receiving PCE MUST send a PCErr message with\n   Error-type=6
      (Mandatory Object missing) and Error-value 8 (LSP object\n   missing).\n   If
      the LSP transitioned to non-operational state, the PCC SHOULD\n   include the
      LSP-ERROR-TLV (Section 7.3.3) with the relevant LSP Error\n   Code to report
      the error to the PCE.\n   The intended path, represented by the ERO object,
      is REQUIRED.  If\n   the ERO object is missing, the receiving PCE MUST send
      a PCErr\n   message with Error-type=6 (Mandatory Object missing) and Error-value\n
      \  9 (ERO object missing).  The ERO may be empty if the PCE does not\n   have
      a path for a delegated LSP.\n   The actual path, represented by the RRO object,
      SHOULD be included in\n   a PCRpt by the PCC when the path is up or active,
      but it MAY be\n   omitted if the path is down due to a signaling error or another\n
      \  failure.\n   The intended-attribute-list maps to the attribute-list in Section
      6.5\n   of [RFC5440] and is used to convey the requested parameters of the\n
      \  LSP path.  This is needed in order to support the switch from passive\n   to
      active stateful PCE as described in Section 5.8.2.  When included\n   as part
      of the intended-attribute-list, the meaning of the BANDWIDTH\n   object is the
      requested bandwidth as intended by the operator.  In\n   this case, the BANDWIDTH
      Object-Type of 1 SHOULD be used.  Similarly,\n   to indicate a limiting constraint,
      the METRIC object SHOULD be\n   included as part of the intended-attribute-list
      with the B flag set\n   and with a specific metric value.  To indicate the optimization\n
      \  metric, the METRIC object SHOULD be included as part of the\n   intended-attribute-list
      with the B flag unset and the metric value\n   set to zero.  Note that the intended-attribute-list
      is optional and\n   thus may be omitted.  In this case, the PCE MAY use the
      values in the\n   actual-attribute-list as the requested parameters for the
      path.\n   The actual-attribute-list consists of the actual computed and\n   signaled
      values of the BANDWIDTH and METRIC objects defined in\n   [RFC5440].  When included
      as part of the actual-attribute-list,\n   Object-Type 2 [RFC5440] SHOULD be
      used for the BANDWIDTH object, and\n   the C flag SHOULD be set in the METRIC
      object [RFC5440].\n   Note that the ordering of intended-path, actual-attribute-list,\n
      \  actual-path, and intended-attribute-list is chosen to retain\n   compatibility
      with implementations of an earlier version of this\n   standard.\n   A PCE may
      choose to implement a limit on the resources a single PCC\n   can occupy.  If
      a PCRpt is received that causes the PCE to exceed\n   this limit, the PCE MUST
      notify the PCC using a PCNtf message with\n   Notification Type 4 (Stateful
      PCE resource limit exceeded) and\n   Notification Value 1 (Entering resource
      limit exceeded state), and it\n   MUST terminate the session.\n"
    title: 6.1.  The PCRpt Message
  - contents:
    - "6.2.  The PCUpd Message\n   A Path Computation LSP Update Request message (also
      referred to as\n   PCUpd message) is a PCEP message sent by a PCE to a PCC to
      update\n   attributes of an LSP.  A PCUpd message can carry more than one LSP\n
      \  Update Request.  The Message-Type field of the PCEP common header for\n   the
      PCUpd message is 11.\n   The format of a PCUpd message is as follows:\n      <PCUpd
      Message> ::= <Common Header>\n                          <update-request-list>\n
      \  Where:\n      <update-request-list> ::= <update-request>[<update-request-list>]\n
      \     <update-request> ::= <SRP>\n                           <LSP>\n                           <path>\n
      \  Where:\n      <path>::= <intended-path><intended-attribute-list>\n   Where:\n
      \     <intended-path> is represented by the ERO object defined in\n      Section
      7.9 of [RFC5440].\n      <intended-attribute-list> is the attribute-list defined
      in\n      [RFC5440] and extended by PCEP extensions.\n   There are three mandatory
      objects that MUST be included within each\n   LSP Update Request in the PCUpd
      message: the SRP object (see\n   Section 7.2), the LSP object (see Section 7.3)
      and the ERO object (as\n   defined in [RFC5440], which represents the intended
      path.  If the SRP\n   object is missing, the receiving PCC MUST send a PCErr
      message with\n   Error-type=6 (Mandatory Object missing) and Error-value=10
      (SRP\n   object missing).  If the LSP object is missing, the receiving PCC\n
      \  MUST send a PCErr message with Error-type=6 (Mandatory Object\n   missing)
      and Error-value=8 (LSP object missing).  If the ERO object\n   is missing, the
      receiving PCC MUST send a PCErr message with\n   Error-type=6 (Mandatory Object
      missing) and Error-value=9 (ERO object\n   missing).\n   The ERO in the PCUpd
      may be empty if the PCE cannot find a valid path\n   for a delegated LSP.  One
      typical situation resulting in this empty\n   ERO carried in the PCUpd message
      is that a PCE can no longer find a\n   strict SRLG-disjoint path for a delegated
      LSP after a link failure.\n   The PCC SHOULD implement a local policy to decide
      the appropriate\n   action to be taken: either tear down the LSP or revoke the
      delegation\n   and use a locally computed path, or keep the existing LSP.\n
      \  A PCC only acts on an LSP Update Request if permitted by the local\n   policy
      configured by the network manager.  Each LSP Update Request\n   that the PCC
      acts on results in an LSP setup operation.  An LSP\n   Update Request MUST contain
      all LSP parameters that a PCE wishes to\n   be set for the LSP.  A PCC MAY set
      missing parameters from locally\n   configured defaults.  If the LSP specified
      in the Update Request is\n   already up, it will be re-signaled.\n   The PCC
      SHOULD minimize the traffic interruption and MAY use the\n   make-before-break
      procedures described in [RFC3209] in order to\n   achieve this goal.  If the
      make-before-break procedures are used, two\n   paths will briefly coexist.  The
      PCC MUST send separate PCRpt\n   messages for each, identified by the LSP-IDENTIFIERS
      TLV.  When the\n   old path is torn down after the head end switches over the
      traffic,\n   this event MUST be reported by sending a PCRpt message with the\n
      \  LSP-IDENTIFIERS-TLV of the old path and the R bit set.  The\n   SRP-ID-number
      that the PCC associates with this PCRpt MUST be\n   0x00000000.  Thus, a make-before-break
      operation will typically\n   result in at least two PCRpt messages, one for
      the new path and one\n   for the removal of the old path (more messages may
      be possible if\n   intermediate states are reported).\n   If the path setup
      fails due to an RSVP signaling error, the error is\n   reported to the PCE.
      \ The PCC will not attempt to re-signal the path\n   until it is prompted again
      by the PCE with a subsequent PCUpd\n   message.\n   A PCC MUST respond with
      an LSP State Report to each LSP Update\n   Request it processed to indicate
      the resulting state of the LSP in\n   the network (even if this processing did
      not result in changing the\n   state of the LSP).  The SRP-ID-number included
      in the PCRpt MUST\n   match that in the PCUpd.  A PCC MAY respond with multiple
      LSP State\n   Reports to report LSP setup progress of a single LSP.  In that
      case,\n   the SRP-ID-number MUST be included for the first message; for\n   subsequent
      messages, the reserved value 0x00000000 SHOULD be used.\n   Note that a PCC
      MUST process all LSP Update Requests -- for example,\n   an LSP Update Request
      is sent when a PCE returns delegation or puts\n   an LSP into non-operational
      state.  The protocol relies on TCP for\n   message-level flow control.\n   If
      the rate of PCUpd messages sent to a PCC for the same target LSP\n   exceeds
      the rate at which the PCC can signal LSPs into the network,\n   the PCC MAY
      perform state compression on its ingress queue.  The\n   compression algorithm
      is based on the fact that each PCUpd request\n   contains the complete LSP state
      the PCE wishes to be set and works as\n   follows: when the PCC starts processing
      a PCUpd message at the head\n   of its ingress queue, it may search the queue
      forward for more recent\n   PCUpd messages pertaining to that particular LSP,
      prune all but the\n   latest one from the queue, and process only the last one
      as that\n   request contains the most up-to-date desired state for the LSP.
      \ The\n   PCC MUST NOT send PCRpt nor PCErr messages for requests that were\n
      \  pruned from the queue in this way.  This compression step may be\n   performed
      only while the LSP is not being signaled, e.g., if two\n   PCUpd arrive for
      the same LSP in quick succession and the PCC started\n   the signaling of the
      changes relevant to the first PCUpd, then it\n   MUST wait until the signaling
      finishes (and report the new state via\n   a PCRpt) before attempting to apply
      the changes indicated in the\n   second PCUpd.\n   Note also that it is up to
      the PCE to handle inter-LSP dependencies;\n   for example, if ordering of LSP
      setups is required, the PCE has to\n   wait for an LSP State Report for a previous
      LSP before starting the\n   update of the next LSP.\n   If the PCUpd cannot
      be satisfied (for example, due to an unsupported\n   object or a TLV), the PCC
      MUST respond with a PCErr message\n   indicating the failure (see Section 7.3.3).\n"
    title: 6.2.  The PCUpd Message
  - contents:
    - "6.3.  The PCErr Message\n   If the stateful PCE capability has been advertised
      on the PCEP\n   session, the PCErr message MAY include the SRP object.  If the
      error\n   reported is the result of an LSP Update Request, then the\n   SRP-ID-number
      MUST be the one from the PCUpd that triggered the\n   error.  If the error is
      unsolicited, the SRP object MAY be omitted.\n   This is equivalent to including
      an SRP object with the SRP-ID-number\n   equal to the reserved value 0x00000000.\n
      \  The format of a PCErr message from [RFC5440] is extended as follows:\n      <PCErr
      Message> ::= <Common Header>\n                        ( <error-obj-list> [<Open>]
      ) | <error>\n                        [<error-list>]\n      <error-obj-list>::=<PCEP-ERROR>[<error-obj-list>]\n
      \     <error>::=[<request-id-list> | <stateful-request-id-list>]\n                 <error-obj-list>\n
      \     <request-id-list>::=<RP>[<request-id-list>]\n      <stateful-request-id-list>::=<SRP>[<stateful-request-id-list>]\n
      \     <error-list>::=<error>[<error-list>]\n"
    title: 6.3.  The PCErr Message
  - contents:
    - "6.4.  The PCReq Message\n   A PCC MAY include the LSP object in the PCReq message
      (see\n   Section 7.3) if the stateful PCE capability has been negotiated on
      a\n   PCEP session between the PCC and a PCE.\n   The definition of the PCReq
      message from [RFC5440] is extended to\n   optionally include the LSP object
      after the END-POINTS object.  The\n   encoding from [RFC5440] will become:\n
      \     <PCReq Message>::= <Common Header>\n                         [<svec-list>]\n
      \                        <request-list>\n   Where:\n         <svec-list>::=<SVEC>[<svec-list>]\n
      \        <request-list>::=<request>[<request-list>]\n         <request>::= <RP>\n
      \                     <END-POINTS>\n                      [<LSP>]\n                      [<LSPA>]\n
      \                     [<BANDWIDTH>]\n                      [<metric-list>]\n
      \                     [<RRO>[<BANDWIDTH>]]\n                      [<IRO>]\n
      \                     [<LOAD-BALANCING>]\n"
    title: 6.4.  The PCReq Message
  - contents:
    - "6.5.  The PCRep Message\n   A PCE MAY include the LSP object in the PCRep message
      (see\n   Section 7.3) if the stateful PCE capability has been negotiated on
      a\n   PCEP session between the PCC, and the PCE and the LSP object were\n   included
      in the corresponding PCReq message from the PCC.\n   The definition of the PCRep
      message from [RFC5440] is extended to\n   optionally include the LSP object
      after the Request Parameter (RP)\n   object.  The encoding from [RFC5440] will
      become:\n      <PCRep Message> ::= <Common Header>\n                          <response-list>\n
      \  Where:\n         <response-list>::=<response>[<response-list>]\n         <response>::=<RP>\n
      \                    [<LSP>]\n                     [<NO-PATH>]\n                     [<attribute-list>]\n
      \                    [<path-list>]\n"
    title: 6.5.  The PCRep Message
  title: 6.  PCEP Messages
- contents:
  - "7.  Object Formats\n   The PCEP objects defined in this document are compliant
    with the PCEP\n   object format defined in [RFC5440].  The P and I flags of the
    PCEP\n   objects defined in the current document MUST be set to 0 on\n   transmission
    and SHOULD be ignored on receipt since they are\n   exclusively related to path
    computation requests.\n"
  - contents:
    - "7.1.  OPEN Object\n   This document defines one new optional TLV for use in
      the OPEN\n   object.\n"
    - contents:
      - "7.1.1.  STATEFUL-PCE-CAPABILITY TLV\n   The STATEFUL-PCE-CAPABILITY TLV is
        an optional TLV for use in the\n   OPEN object for stateful PCE capability
        advertisement.  Its format is\n   shown in the following figure:\n      0
        \                  1                   2                   3\n      0 1 2
        3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |               Type=16         |            Length=4           |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                             Flags                           |U|\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \              Figure 9: STATEFUL-PCE-CAPABILITY TLV Format\n   The type (16
        bits) of the TLV is 16.  The length field is 16 bits\n   long and has a fixed
        value of 4.\n   The value comprises a single field -- Flags (32 bits):\n   U
        (LSP-UPDATE-CAPABILITY - 1 bit):  if set to 1 by a PCC, the U flag\n      indicates
        that the PCC allows modification of LSP parameters; if\n      set to 1 by
        a PCE, the U flag indicates that the PCE is capable of\n      updating LSP
        parameters.  The LSP-UPDATE-CAPABILITY flag must be\n      advertised by both
        a PCC and a PCE for PCUpd messages to be\n      allowed on a PCEP session.\n
        \  Unassigned bits are considered reserved.  They MUST be set to 0 on\n   transmission
        and MUST be ignored on receipt.\n   A PCEP speaker operating in passive stateful
        PCE mode advertises the\n   stateful PCE capability with the U flag set to
        0.  A PCEP speaker\n   operating in active stateful PCE mode advertises the
        stateful PCE\n   capability with the U flag set to 1.\n   Advertisement of
        the stateful PCE capability implies support of LSPs\n   that are signaled
        via RSVP, as well as the objects, TLVs, and\n   procedures defined in this
        document.\n"
      title: 7.1.1.  STATEFUL-PCE-CAPABILITY TLV
    title: 7.1.  OPEN Object
  - contents:
    - "7.2.  SRP Object\n   The SRP (Stateful PCE Request Parameters) object MUST
      be carried\n   within PCUpd messages and MAY be carried within PCRpt and PCErr\n
      \  messages.  The SRP object is used to correlate between update\n   requests
      sent by the PCE and the error reports and state reports sent\n   by the PCC.\n
      \  SRP Object-Class is 33.\n   SRP Object-Type is 1.\n   The format of the SRP
      object body is shown in Figure 10:\n       0                   1                   2
      \                  3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3
      4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |                          Flags                                |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |                        SRP-ID-number                          |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |                                                               |\n      //
      \                     Optional TLVs                          //\n      |                                                               |\n
      \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                     Figure
      10: The SRP Object Format\n   The SRP object body has a variable length and
      may contain additional\n   TLVs.\n   Flags (32 bits): None defined yet.\n   SRP-ID-number
      (32 bits): The SRP-ID-number value in the scope of the\n   current PCEP session
      uniquely identifies the operation that the PCE\n   has requested the PCC to
      perform on a given LSP.  The SRP-ID-number\n   is incremented each time a new
      request is sent to the PCC, and it may\n   wrap around.\n   The values 0x00000000
      and 0xFFFFFFFF are reserved.\n   Optional TLVs MAY be included within the SRP
      object body.  The\n   specification of such TLVs is outside the scope of this
      document.\n   Every request to update an LSP receives a new SRP-ID-number.  This\n
      \  number is unique per PCEP session and is incremented each time an\n   operation
      is requested from the PCE.  Thus, for a given LSP, there\n   may be more than
      one SRP-ID-number unacknowledged at a given time.\n   The value of the SRP-ID-number
      is echoed back by the PCC in PCErr and\n   PCRpt messages to allow for correlation
      between requests made by the\n   PCE and errors or state reports generated by
      the PCC.  If the error\n   or report was not a result of a PCE operation (for
      example, in the\n   case of a link down event), the reserved value of 0x00000000
      is used\n   for the SRP-ID-number.  The absence of the SRP object is equivalent\n
      \  to an SRP object with the reserved value of 0x00000000.  An\n   SRP-ID-number
      is considered unacknowledged and cannot be reused until\n   a PCErr or PCRpt
      arrives with an SRP-ID-number equal or higher for\n   the same LSP.  In case
      of SRP-ID-number wrapping, the last\n   SRP-ID-number before the wrapping MUST
      be explicitly acknowledged, to\n   avoid a situation where SRP-ID-numbers remain
      unacknowledged after\n   the wrap.  This means that the PCC may need to issue
      two PCUpd\n   messages on detecting a wrap.\n"
    title: 7.2.  SRP Object
  - contents:
    - "7.3.  LSP Object\n   The LSP object MUST be present within PCRpt and PCUpd
      messages.  The\n   LSP object MAY be carried within PCReq and PCRep messages
      if the\n   stateful PCE capability has been negotiated on the session.  The
      LSP\n   object contains a set of fields used to specify the target LSP, the\n
      \  operation to be performed on the LSP, and LSP delegation.  It also\n   contains
      a flag indicating to a PCE that the LSP State\n   Synchronization is in progress.
      \ This document focuses on LSPs that\n   are signaled with RSVP; many of the
      TLVs used with the LSP object\n   mirror RSVP state.\n   LSP Object-Class is
      32.\n   LSP Object-Type is 1.\n   The format of the LSP object body is shown
      in Figure 11:\n      0                   1                   2                   3\n
      \     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    |                PLSP-ID                |    Flag |  O  |A|R|S|D|\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    //                        TLVs                                 //\n     |
      \                                                              |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \                    Figure 11: The LSP Object Format\n   PLSP-ID (20 bits):
      A PCEP-specific identifier for the LSP.  A PCC\n   creates a unique PLSP-ID
      for each LSP that is constant for the\n   lifetime of a PCEP session.  The PCC
      will advertise the same PLSP-ID\n   on all PCEP sessions it maintains at a given
      time.  The mapping of\n   the symbolic path name to PLSP-ID is communicated
      to the PCE by\n   sending a PCRpt message containing the SYMBOLIC-PATH-NAME
      TLV.  All\n   subsequent PCEP messages then address the LSP by the PLSP-ID.
      \ The\n   values of 0 and 0xFFFFF are reserved.  Note that the PLSP-ID is a\n
      \  value that is constant for the lifetime of the PCEP session, during\n   which
      time for an RSVP-signaled LSP there might be different RSVP\n   identifiers
      (LSP-id, tunnel-id) allocated to it.\n   Flags (12 bits), starting from the
      least significant bit:\n   D (Delegate - 1 bit):  On a PCRpt message, the D
      flag set to 1\n      indicates that the PCC is delegating the LSP to the PCE.
      \ On a\n      PCUpd message, the D flag set to 1 indicates that the PCE is\n
      \     confirming the LSP delegation.  To keep an LSP delegated to the\n      PCE,
      the PCC must set the D flag to 1 on each PCRpt message for\n      the duration
      of the delegation -- the first PCRpt with the D flag\n      set to 0 revokes
      the delegation.  To keep the delegation, the PCE\n      must set the D flag
      to 1 on each PCUpd message for the duration of\n      the delegation -- the
      first PCUpd with the D flag set to 0 returns\n      the delegation.\n   S (SYNC
      - 1 bit):  The S flag MUST be set to 1 on each PCRpt sent\n      from a PCC
      during State Synchronization.  The S flag MUST be set\n      to 0 in other messages
      sent from the PCC.  When sending a PCUpd\n      message, the PCE MUST set the
      S flag to 0.\n   R (Remove - 1 bit):  On PCRpt messages, the R flag indicates
      that the\n      LSP has been removed from the PCC and the PCE SHOULD remove
      all\n      state from its database.  Upon receiving an LSP State Report with\n
      \     the R flag set to 1 for an RSVP-signaled LSP, the PCE SHOULD\n      remove
      all state for the path identified by the LSP-IDENTIFIERS\n      TLV from its
      database.  When the all-zeros LSP-IDENTIFIERS TLV is\n      used, the PCE SHOULD
      remove all state for the PLSP-ID from its\n      database.  When sending a PCUpd
      message, the PCE MUST set the R\n      flag to 0.\n   A (Administrative - 1
      bit):  On PCRpt messages, the A flag indicates\n      the PCC's target operational
      status for this LSP.  On PCUpd\n      messages, the A flag indicates the LSP
      status that the PCE desires\n      for this LSP.  In both cases, a value of
      '1' means that the\n      desired operational state is active, and a value of
      '0' means that\n      the desired operational state is inactive.  A PCC ignores
      the A\n      flag on a PCUpd message unless the operator's policy allows the\n
      \     PCE to control the corresponding LSP's administrative state.\n   O (Operational
      - 3 bits):  On PCRpt messages, the O field represents\n      the operational
      status of the LSP.\n      The following values are defined:\n      0 - DOWN:
      \        not active.\n      1 - UP:           signaled.\n      2 - ACTIVE:       up
      and carrying traffic.\n      3 - GOING-DOWN:   LSP is being torn down, and resources
      are being\n                        released.\n      4 - GOING-UP:     LSP is
      being signaled.\n      5-7 - Reserved:   these values are reserved for future
      use.\n   Unassigned bits are reserved for future uses.  They MUST be set to
      0\n   on transmission and MUST be ignored on receipt.  When sending a PCUpd\n
      \  message, the PCE MUST set the O field to 0.\n   TLVs that may be included
      in the LSP object are described in the\n   following sections.  Other optional
      TLVs, that are not defined in\n   this document, MAY also be included within
      the LSP object body.\n"
    - contents:
      - "7.3.1.  LSP-IDENTIFIERS TLVs\n   The LSP-IDENTIFIERS TLV MUST be included
        in the LSP object in PCRpt\n   messages for RSVP-signaled LSPs.  If the TLV
        is missing, the PCE will\n   generate an error with Error-type=6 (Mandatory
        Object missing) and\n   error-value 11 (LSP-IDENTIFIERS TLV missing) and close
        the session.\n   The LSP-IDENTIFIERS TLV MAY be included in the LSP object
        in PCUpd\n   messages for RSVP-signaled LSPs.  The special value of all zeros
        for\n   this TLV is used to refer to all paths pertaining to a particular\n
        \  PLSP-ID.  There are two LSP-IDENTIFIERS TLVs, one for IPv4 and one\n   for
        IPv6.\n   It is the responsibility of the PCC to send to the PCE the\n   identifiers
        for each RSVP incarnation of the tunnel.  For example, in\n   a make-before-break
        scenario, the PCC MUST send a separate PCRpt for\n   the old and reoptimized
        paths and explicitly report removal of any of\n   these paths using the R
        bit in the LSP object.\n   The format of the IPV4-LSP-IDENTIFIERS TLV is shown
        in the following\n   figure:\n      0                   1                   2
        \                  3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2
        3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |           Type=18             |           Length=16           |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                   IPv4 Tunnel Sender Address                  |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |             LSP ID            |           Tunnel ID           |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                        Extended Tunnel ID                     |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                   IPv4 Tunnel Endpoint Address                |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \               Figure 12: IPV4-LSP-IDENTIFIERS TLV Format\n   The type (16
        bits) of the TLV is 18.  The length field is 16 bits\n   long and has a fixed
        value of 16.  The value contains the following\n   fields:\n   IPv4 Tunnel
        Sender Address:  contains the sender node's IPv4 address,\n      as defined
        in [RFC3209], Section 4.6.2.1, for the LSP_TUNNEL_IPv4\n      Sender Template
        Object.\n   LSP ID:  contains the 16-bit 'LSP ID' identifier defined in\n
        \     [RFC3209], Section 4.6.2.1 for the LSP_TUNNEL_IPv4 Sender Template\n
        \     Object.  A value of 0 MUST be used if the LSP is not yet signaled.\n
        \  Tunnel ID:  contains the 16-bit 'Tunnel ID' identifier defined in\n      [RFC3209],
        Section 4.6.1.1 for the LSP_TUNNEL_IPv4 Session Object.\n   Extended Tunnel
        ID:  contains the 32-bit 'Extended Tunnel ID'\n      identifier defined in
        [RFC3209], Section 4.6.1.1 for the\n      LSP_TUNNEL_IPv4 Session Object.\n
        \  IPv4 Tunnel Endpoint Address:  contains the egress node's IPv4\n      address,
        as defined in [RFC3209], Section 4.6.1.1, for the\n      LSP_TUNNEL_IPv4 Sender
        Template Object.\n   The format of the IPV6-LSP-IDENTIFIERS TLV is shown in
        the following\n   figure:\n      0                   1                   2
        \                  3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2
        3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |           Type=19             |           Length=52           |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                                                               |\n     +
        \                                                              +\n     |                  IPv6
        Tunnel Sender Address                   |\n     +                          (16
        octets)                          +\n     |                                                               |\n
        \    +                                                               +\n     |
        \                                                              |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |             LSP ID            |           Tunnel ID           |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                                                               |\n     +
        \                                                              +\n     |                       Extended
        Tunnel ID                      |\n     +                          (16 octets)
        \                         +\n     |                                                               |\n
        \    +                                                               +\n     |
        \                                                              |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                                                               |\n     +
        \                                                              +\n     |                  IPv6
        Tunnel Endpoint Address                 |\n     +                          (16
        octets)                          +\n     |                                                               |\n
        \    +                                                               +\n     |
        \                                                              |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \               Figure 13: IPV6-LSP-IDENTIFIERS TLV Format\n   The type (16
        bits) of the TLV is 19.  The length field is 16 bits\n   long and has a fixed
        value of 52.  The value contains the following\n   fields:\n   IPv6 Tunnel
        Sender Address:  contains the sender node's IPv6 address,\n      as defined
        in [RFC3209], Section 4.6.2.2, for the LSP_TUNNEL_IPv6\n      Sender Template
        Object.\n   LSP ID:  contains the 16-bit 'LSP ID' identifier defined in\n
        \     [RFC3209], Section 4.6.2.2 for the LSP_TUNNEL_IPv6 Sender Template\n
        \     Object.  A value of 0 MUST be used if the LSP is not yet signaled.\n
        \  Tunnel ID:  contains the 16-bit 'Tunnel ID' identifier defined in\n      [RFC3209],
        Section 4.6.1.2 for the LSP_TUNNEL_IPv6 Session Object.\n   Extended Tunnel
        ID:  contains the 128-bit 'Extended Tunnel ID'\n      identifier defined in
        [RFC3209], Section 4.6.1.2 for the\n      LSP_TUNNEL_IPv6 Session Object.\n
        \  IPv6 Tunnel Endpoint Address:  contains the egress node's IPv6\n      address,
        as defined in [RFC3209], Section 4.6.1.2, for the\n      LSP_TUNNEL_IPv6 Session
        Object.\n   The Tunnel ID remains constant over the lifetime of a tunnel.\n"
      title: 7.3.1.  LSP-IDENTIFIERS TLVs
    - contents:
      - "7.3.2.  Symbolic Path Name TLV\n   Each LSP MUST have a symbolic path name
        that is unique in the PCC.\n   The symbolic path name is a human-readable
        string that identifies an\n   LSP in the network.  The symbolic path name
        MUST remain constant\n   throughout an LSP's lifetime, which may span across
        multiple\n   consecutive PCEP sessions and/or PCC restarts.  The symbolic
        path\n   name MAY be specified by an operator in a PCC's configuration.  If\n
        \  the operator does not specify a unique symbolic name for an LSP, then\n
        \  the PCC MUST auto-generate one.\n   The PCE uses the symbolic path name
        as a stable identifier for the\n   LSP.  If the PCEP session restarts, or
        the PCC restarts, or the PCC\n   re-delegates the LSP to a different PCE,
        the symbolic path name for\n   the LSP remains constant and can be used to
        correlate across the PCEP\n   session instances.\n   The other protocol identifiers
        for the LSP cannot reliably be used to\n   identify the LSP across multiple
        PCEP sessions, for the following\n   reasons.\n   o  The PLSP-ID is unique
        only within the scope of a single PCEP\n      session.\n   o  The LSP-IDENTIFIERS
        TLV is only guaranteed to be present for LSPs\n      that are signaled with
        RSVP-TE, and it may change during the\n      lifetime of the LSP.\n   The
        SYMBOLIC-PATH-NAME TLV MUST be included in the LSP object in the\n   LSP State
        Report (PCRpt) message when during a given PCEP session an\n   LSP is first
        reported to a PCE.  A PCC sends to a PCE the first LSP\n   State Report either
        during State Synchronization or when a new LSP is\n   configured at the PCC.\n
        \  The initial PCRpt creates a binding between the symbolic path name\n   and
        the PLSP-ID for the LSP that lasts for the duration of the PCEP\n   session.
        \ The PCC MAY omit the symbolic path name from subsequent LSP\n   State Reports
        for that LSP on that PCEP session, and just use the\n   PLSP-ID.\n   The format
        of the SYMBOLIC-PATH-NAME TLV is shown in the following\n   figure:\n      0
        \                  1                   2                   3\n      0 1 2
        3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |           Type=17             |       Length (variable)       |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                                                               |\n     //
        \                     Symbolic Path Name                     //\n     |                                                               |\n
        \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                 Figure
        14: SYMBOLIC-PATH-NAME TLV Format\n   Type (16 bits): the type is 17.\n   Length
        (16 bits): indicates the total length of the TLV in octets and\n   MUST be
        greater than 0.  The TLV MUST be zero-padded so that the TLV\n   is 4-octet
        aligned.\n   Symbolic Path Name (variable): symbolic name for the LSP, unique
        in\n   the PCC.  It SHOULD be a string of printable ASCII characters,\n   without
        a NULL terminator.\n"
      title: 7.3.2.  Symbolic Path Name TLV
    - contents:
      - "7.3.3.  LSP Error Code TLV\n   The LSP Error Code TLV is an optional TLV
        for use in the LSP object\n   to convey error information.  When an LSP Update
        Request fails, an\n   LSP State Report MUST be sent to report the current
        state of the LSP,\n   and it SHOULD contain the LSP-ERROR-CODE TLV indicating
        the reason\n   for the failure.  Similarly, when a PCRpt is sent as a result
        of an\n   LSP transitioning to non-operational state, the LSP-ERROR-CODE TLV\n
        \  SHOULD be included to indicate the reason for the transition.\n   The format
        of the LSP-ERROR-CODE TLV is shown in the following\n   figure:\n      0                   1
        \                  2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2
        3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |           Type=20             |            Length=4           |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                          LSP Error Code                       |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \                  Figure 15: LSP-ERROR-CODE TLV Format\n   The type (16 bits)
        of the TLV is 20.  The length field is 16 bits\n   long and has a fixed value
        of 4.  The value contains an error code\n   that indicates the cause of the
        failure.\n   The following LSP Error Codes are currently defined:\n               Value
        \     Description\n               -----      -------------------------------------\n
        \                1        Unknown reason\n                 2        Limit
        reached for PCE-controlled LSPs\n                 3        Too many pending
        LSP Update Requests\n                 4        Unacceptable parameters\n                 5
        \       Internal error\n                 6        LSP administratively brought
        down\n                 7        LSP preempted\n                 8        RSVP
        signaling error\n"
      title: 7.3.3.  LSP Error Code TLV
    - contents:
      - "7.3.4.  RSVP Error Spec TLV\n   The RSVP-ERROR-SPEC TLV is an optional TLV
        for use in the LSP object\n   to carry RSVP error information.  It includes
        the RSVP ERROR_SPEC or\n   USER_ERROR_SPEC object ([RFC2205] and [RFC5284]),
        which were returned\n   to the PCC from a downstream node.  If the setup of
        an LSP fails at a\n   downstream node that returned an ERROR_SPEC to the PCC,
        the PCC\n   SHOULD include in the PCRpt for this LSP the LSP-ERROR-CODE TLV
        with\n   LSP Error Code = \"RSVP signaling error\" and the RSVP-ERROR-SPEC
        TLV\n   with the relevant RSVP ERROR-SPEC or USER_ERROR_SPEC object.\n   The
        format of the RSVP-ERROR-SPEC TLV is shown in the following\n   figure:\n
        \     0                   1                   2                   3\n      0
        1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |           Type=21             |            Length (variable)  |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                                                               |\n     +
        \               RSVP ERROR_SPEC or USER_ERROR_SPEC Object      +\n     |                                                               |\n
        \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                   Figure
        16: RSVP-ERROR-SPEC TLV Format\n   Type (16 bits): the type is 21.\n   Length
        (16 bits): indicates the total length of the TLV in octets.\n   The TLV MUST
        be zero-padded so that the TLV is 4-octet aligned.\n   Value (variable): contains
        the RSVP ERROR_SPEC or USER_ERROR_SPEC\n   object, as specified in [RFC2205]
        and [RFC5284], including the object\n   header.\n"
      title: 7.3.4.  RSVP Error Spec TLV
    title: 7.3.  LSP Object
  title: 7.  Object Formats
- contents:
  - "8.  IANA Considerations\n   The code points described below have been allocated
    for the protocol\n   elements defined in this document.\n"
  - contents:
    - "8.1.  PCE Capabilities in IGP Advertisements\n   The following bits have been
      registered in the \"Path Computation\n   Element (PCE) Capability Flags\" subregistry
      of the \"Open Shortest\n   Path First (OSPF) Parameters\" registry:\n           Bit
      \  Description                        Reference\n           ---   -------------------------------
      \   -------------\n            11   Active stateful PCE capability     This
      document\n            12   Passive stateful PCE capability    This document\n"
    title: 8.1.  PCE Capabilities in IGP Advertisements
  - contents:
    - "8.2.  PCEP Messages\n   The following message types have been allocated within
      the \"PCEP\n   Messages\" subregistry of the \"Path Computation Element Protocol\n
      \  (PCEP) Numbers\" registry:\n                    Value  Description    Reference\n
      \                   -----  ------------   -------------\n                      10
      \  Report         This document\n                      11   Update         This
      document\n"
    title: 8.2.  PCEP Messages
  - contents:
    - "8.3.  PCEP Objects\n   The following object-class values and object types have
      been\n   allocated within the \"PCEP Objects\" subregistry of the \"Path\n   Computation
      Element Protocol (PCEP) Numbers\" registry:\n          Object-Class Value  Name
      \                 Reference\n          ------------------  ----------------
      \     -------------\n                  32          LSP                   This
      document\n                              Object-Type\n                              0:
      Reserved\n                              1: LSP\n                  33          SRP
      \                  This document\n                              Object-Type\n
      \                             0: Reserved\n                              1:
      SRP\n"
    title: 8.3.  PCEP Objects
  - contents:
    - "8.4.  LSP Object\n   A new subregistry, named \"LSP Object Flag Field\", has
      been created\n   within the \"Path Computation Element Protocol (PCEP) Numbers\"\n
      \  registry to manage the Flag field of the LSP object.  New values are\n   assigned
      by Standards Action [RFC8126].  Each bit should be tracked\n   with the following
      qualities:\n   o  Bit number (counting from bit 0 as the most significant bit)\n
      \  o  Capability description\n   o  Defining RFC\n   The following values are
      defined in this document:\n                 Bit     Description           Reference\n
      \                ---     --------------------  -------------\n                 0-4
      \    Unassigned            This document\n                 5-7     Operational
      (3 bits)  This document\n                  8      Administrative        This
      document\n                  9      Remove                This document\n                  10
      \    SYNC                  This document\n                  11     Delegate
      \             This document\n"
    title: 8.4.  LSP Object
  - contents:
    - "8.5.  PCEP-Error Object\n   The following error types and error values have
      been registered\n   within the \"PCEP-ERROR Object Error Types and Values\"
      subregistry of\n   the \"Path Computation Element Protocol (PCEP) Numbers\"
      registry:\n   Error-Type  Meaning\n   ----------  -------------------------------------------------------\n
      \     6        Mandatory Object missing\n                Error-value\n                8:
      \  LSP object missing\n                9:   ERO object missing\n                10:
      \ SRP object missing\n                11:  LSP-IDENTIFIERS TLV missing\n      19
      \      Invalid Operation\n                Error-value\n                1:   Attempted
      LSP Update Request for a non-delegated\n                     LSP.  The PCEP-ERROR
      object is followed by the LSP\n                     object that identifies the
      LSP.\n                2:   Attempted LSP Update Request if the stateful PCE\n
      \                    capability was not advertised.\n                3:   Attempted
      LSP Update Request for an LSP identified\n                     by an unknown
      PLSP-ID.\n                5:   Attempted LSP State Report if stateful PCE\n
      \                    capability was not advertised.\n      20       LSP State
      Synchronization Error\n                Error-value\n                1:   A PCE
      indicates to a PCC that it cannot process (an\n                     otherwise
      valid) LSP State Report.  The PCEP-ERROR\n                     object is followed
      by the LSP object that\n                     identifies the LSP.\n                5:
      \  A PCC indicates to a PCE that it cannot complete\n                     the
      State Synchronization.\n"
    title: 8.5.  PCEP-Error Object
  - contents:
    - "8.6.  Notification Object\n   The following Notification Types and Notification
      Values have been\n   allocated within the \"Notification Object\" subregistry
      of the \"Path\n   Computation Element Protocol (PCEP) Numbers\" registry:\n
      \  Notification-Type  Name\n   4     Stateful PCE resource limit exceeded\n
      \            Notification-value\n             1:   Entering resource limit exceeded
      state\n             2:   Deprecated\n   Note that the early allocation included
      an additional Notification\n   Value 2 for \"Exiting resource limit exceeded
      state\".  This\n   Notification Value is no longer required and has been marked
      as\n   \"Deprecated\".\n"
    title: 8.6.  Notification Object
  - contents:
    - "8.7.  PCEP TLV Type Indicators\n   The following TLV Type Indicator values
      have been registered within\n   the \"PCEP TLV Type Indicators\" subregistry
      of the \"Path Computation\n   Element Protocol (PCEP) Numbers\" registry:\n
      \             Value     Description                 Reference\n              -----
      \    -----------------------     -------------\n                16      STATEFUL-PCE-CAPABILITY
      \    This document\n                17      SYMBOLIC-PATH-NAME          This
      document\n                18      IPV4-LSP-IDENTIFIERS        This document\n
      \               19      IPV6-LSP-IDENTIFIERS        This document\n                20
      \     LSP-ERROR-CODE              This document\n                21      RSVP-ERROR-SPEC
      \            This document\n"
    title: 8.7.  PCEP TLV Type Indicators
  - contents:
    - "8.8.  STATEFUL-PCE-CAPABILITY TLV\n   A new subregistry, named \"STATEFUL-PCE-CAPABILITY
      TLV Flag Field\",\n   has been created within the \"Path Computation Element
      Protocol (PCEP)\n   Numbers\" registry to manage the Flag field in the STATEFUL-PCE-\n
      \  CAPABILITY TLV of the PCEP OPEN object (class = 1).  New values are\n   assigned
      by Standards Action [RFC8126].  Each bit should be tracked\n   with the following
      qualities:\n   o  Bit number (counting from bit 0 as the most significant bit)\n
      \  o  Capability description\n   o  Defining RFC\n   The following values are
      defined in this document:\n               Value  Description              Reference\n
      \              -----  ---------------------    -------------\n                 31
      \  LSP-UPDATE-CAPABILITY    This document\n"
    title: 8.8.  STATEFUL-PCE-CAPABILITY TLV
  - contents:
    - "8.9.  LSP-ERROR-CODE TLV\n   A new subregistry, named \"LSP-ERROR-CODE TLV
      Error Code Field\", has\n   been created within the \"Path Computation Element
      Protocol (PCEP)\n   Numbers\" registry to manage the LSP Error Code field of
      the LSP-\n   ERROR-CODE TLV.  This field specifies the reason for failure to\n
      \  update the LSP.\n   New values are assigned by Standards Action [RFC8126].
      \ Each value\n   should be tracked with the following qualities: value, meaning,
      and\n   defining RFC.  The following values are defined in this document:\n
      \              Value      Meaning\n                ---       -------------------------------------\n
      \                0        Reserved\n                 1        Unknown reason\n
      \                2        Limit reached for PCE-controlled LSPs\n                 3
      \       Too many pending LSP Update Requests\n                 4        Unacceptable
      parameters\n                 5        Internal error\n                 6        LSP
      administratively brought down\n                 7        LSP preempted\n                 8
      \       RSVP signaling error\n"
    title: 8.9.  LSP-ERROR-CODE TLV
  title: 8.  IANA Considerations
- contents:
  - "9.  Manageability Considerations\n   All manageability requirements and considerations
    listed in [RFC5440]\n   apply to the PCEP extensions defined in this document.
    \ In addition,\n   requirements and considerations listed in this section apply.\n"
  - contents:
    - "9.1.  Control Function and Policy\n   In addition to configuring specific PCEP
      session parameters, as\n   specified in [RFC5440], Section 8.1, a PCE or PCC
      implementation MUST\n   allow configuring the stateful PCEP capability and the
      LSP Update\n   capability.  A PCC implementation SHOULD allow the operator to\n
      \  specify multiple candidate PCEs for and a delegation preference for\n   each
      candidate PCE.  A PCC SHOULD allow the operator to specify an\n   LSP delegation
      policy where LSPs are delegated to the most-preferred\n   online PCE.  A PCC
      MAY allow the operator to specify different LSP\n   delegation policies.\n   A
      PCC implementation that allows concurrent connections to multiple\n   PCEs SHOULD
      allow the operator to group the PCEs by administrative\n   domains, and it MUST
      NOT advertise LSP existence and state to a PCE\n   if the LSP is delegated to
      a PCE in a different group.\n   A PCC implementation SHOULD allow the operator
      to specify whether the\n   PCC will advertise LSP existence and state for LSPs
      that are not\n   controlled by any PCE (for example, LSPs that are statically\n
      \  configured at the PCC).\n   A PCC implementation SHOULD allow the operator
      to specify both the\n   Redelegation Timeout Interval and the State Timeout
      Interval.  The\n   default value of the Redelegation Timeout Interval SHOULD
      be set to\n   30 seconds.  An operator MAY also configure a policy that will\n
      \  dynamically adjust the Redelegation Timeout Interval, for example\n   setting
      it to zero when the PCC has an established session to a\n   backup PCE.  The
      default value for the State Timeout Interval SHOULD\n   be set to 60 seconds.\n
      \  After the expiration of the State Timeout Interval, the LSP reverts\n   to
      operator-defined default parameters.  A PCC implementation MUST\n   allow the
      operator to specify the default LSP parameters.  To achieve\n   a behavior where
      the LSP retains the parameters set by the PCE until\n   such time that the PCC
      makes a change to them, a State Timeout\n   Interval of infinity SHOULD be used.
      \ Any changes to LSP parameters\n   SHOULD be done in a make-before-break fashion.\n
      \  LSP delegation is controlled by operator-defined policies on a PCC.\n   LSPs
      are delegated individually -- different LSPs may be delegated to\n   different
      PCEs.  An LSP is delegated to at most one PCE at any given\n   point in time.
      \ A PCC implementation SHOULD support the delegation\n   policy, when all PCC's
      LSPs are delegated to a single PCE at any\n   given time.  Conversely, the policy
      revoking the delegation for all\n   PCC's LSPs SHOULD also be supported.\n   A
      PCC implementation SHOULD allow the operator to specify delegation\n   priority
      for PCEs.  This effectively defines the primary PCE and one\n   or more backup
      PCEs to which a primary PCE's LSPs can be delegated\n   when the primary PCE
      fails.\n   Policies defined for stateful PCEs and PCCs should eventually fit
      in\n   the policy-enabled path computation framework defined in [RFC5394],\n
      \  and the framework should be extended to support stateful PCEs.\n"
    title: 9.1.  Control Function and Policy
  - contents:
    - "9.2.  Information and Data Models\n   The PCEP YANG module [PCEP-YANG] should
      include:\n   o  advertised stateful capabilities and synchronization status
      per\n      PCEP session.\n   o  the delegation status of each configured LSP.\n
      \  The PCEP MIB [RFC7420] could also be updated to include this\n   information.\n"
    title: 9.2.  Information and Data Models
  - contents:
    - "9.3.  Liveness Detection and Monitoring\n   PCEP extensions defined in this
      document do not require any new\n   mechanisms beyond those already defined
      in [RFC5440], Section 8.3.\n"
    title: 9.3.  Liveness Detection and Monitoring
  - contents:
    - "9.4.  Verifying Correct Operation\n   Mechanisms defined in [RFC5440], Section
      8.4 also apply to PCEP\n   extensions defined in this document.  In addition
      to monitoring\n   parameters defined in [RFC5440], a stateful PCC-side PCEP\n
      \  implementation SHOULD provide the following parameters:\n   o  Total number
      of LSP Updates\n   o  Number of successful LSP Updates\n   o  Number of dropped
      LSP Updates\n   o  Number of LSP Updates where LSP setup failed\n   A PCC implementation
      SHOULD provide a command to show for each LSP\n   whether it is delegated, and
      if so, to which PCE.\n   A PCC implementation SHOULD allow the operator to manually
      revoke LSP\n   delegation.\n"
    title: 9.4.  Verifying Correct Operation
  - contents:
    - "9.5.  Requirements on Other Protocols and Functional Components\n   PCEP extensions
      defined in this document do not put new requirements\n   on other protocols.\n"
    title: 9.5.  Requirements on Other Protocols and Functional Components
  - contents:
    - "9.6.  Impact on Network Operation\n   Mechanisms defined in [RFC5440], Section
      8.6 also apply to PCEP\n   extensions defined in this document.\n   Additionally,
      a PCEP implementation SHOULD allow a limit to be placed\n   on the number of
      LSPs delegated to the PCE and on the rate of PCUpd\n   and PCRpt messages sent
      by a PCEP speaker and processed from a peer.\n   It SHOULD also allow sending
      a notification when a rate threshold is\n   reached.\n   A PCC implementation
      SHOULD allow a limit to be placed on the rate of\n   LSP Updates to the same
      LSP to avoid signaling overload discussed in\n   Section 10.3.\n"
    title: 9.6.  Impact on Network Operation
  title: 9.  Manageability Considerations
- contents:
  - '10.  Security Considerations

    '
  - contents:
    - "10.1.  Vulnerability\n   This document defines extensions to PCEP to enable
      stateful PCEs.\n   The nature of these extensions and the delegation of path
      control to\n   PCEs results in more information being available for a hypothetical\n
      \  adversary and a number of additional attack surfaces that must be\n   protected.\n
      \  The security provisions described in [RFC5440] remain applicable to\n   these
      extensions.  However, because the protocol modifications\n   outlined in this
      document allow the PCE to control path computation\n   timing and sequence,
      the PCE defense mechanisms described in\n   [RFC5440], Section 7.2 are also
      now applicable to PCC security.\n   As a general precaution, it is RECOMMENDED
      that these PCEP extensions\n   only be activated on authenticated and encrypted
      sessions across PCEs\n   and PCCs belonging to the same administrative authority,
      using\n   Transport Layer Security (TLS) [PCEPS], as per the recommendations\n
      \  and best current practices in [RFC7525].\n   The following sections identify
      specific security concerns that may\n   result from the PCEP extensions outlined
      in this document along with\n   recommended mechanisms to protect PCEP infrastructure
      against related\n   attacks.\n"
    title: 10.1.  Vulnerability
  - contents:
    - "10.2.  LSP State Snooping\n   The stateful nature of this extension explicitly
      requires LSP status\n   updates to be sent from PCC to PCE.  While this gives
      the PCE the\n   ability to provide more optimal computations to the PCC, it
      also\n   provides an adversary with the opportunity to eavesdrop on decisions\n
      \  made by network systems external to PCE.  This is especially true if\n   the
      PCC delegates LSPs to multiple PCEs simultaneously.\n   Adversaries may gain
      access to this information by eavesdropping on\n   unsecured PCEP sessions and
      might then use this information in\n   various ways to target or optimize attacks
      on network infrastructure,\n   for example, by flexibly countering anti-DDoS
      measures being taken to\n   protect the network or by determining choke points
      in the network\n   where the greatest harm might be caused.\n   PCC implementations
      that allow concurrent connections to multiple\n   PCEs SHOULD allow the operator
      to group the PCEs by administrative\n   domains, and they MUST NOT advertise
      LSP existence and state to a PCE\n   if the LSP is delegated to a PCE in a different
      group.\n"
    title: 10.2.  LSP State Snooping
  - contents:
    - "10.3.  Malicious PCE\n   The LSP delegation mechanism described in this document
      allows a PCC\n   to grant effective control of an LSP to the PCE for the duration
      of a\n   PCEP session.  While this enables PCE control of the timing and\n   sequence
      of path computations within and across PCEP sessions, it\n   also introduces
      a new attack vector: an attacker may flood the PCC\n   with PCUpd messages at
      a rate that exceeds either the PCC's ability\n   to process them or the network's
      ability to signal the changes, by\n   either spoofing messages or compromising
      the PCE itself.\n   A PCC is free to revoke an LSP delegation at any time without
      needing\n   any justification.  A defending PCC can do this by enqueueing the\n
      \  appropriate PCRpt message.  As soon as that message is enqueued in\n   the
      session, the PCC is free to drop any incoming PCUpd messages\n   without additional
      processing.\n"
    title: 10.3.  Malicious PCE
  - contents:
    - "10.4.  Malicious PCC\n   A stateful session also results in an increased attack
      surface by\n   placing a requirement for the PCE to keep an LSP state replica
      for\n   each PCC.  It is RECOMMENDED that PCE implementations provide a limit\n
      \  on resources a single PCC can occupy.  A PCE implementing such a\n   limit
      MUST send a PCNtf message with notification-type 4 (Stateful\n   PCE resource
      limit exceeded) and notification-value 1 (Entering\n   resource limit exceeded
      state) upon receiving an LSP State Report\n   causing it to exceed this threshold.\n
      \  Delegation of LSPs can create further strain on PCE resources and a\n   PCE
      implementation MAY preemptively give back delegations if it finds\n   itself
      lacking the resources needed to effectively manage the\n   delegation.  Since
      the delegation state is ultimately controlled by\n   the PCC, PCE implementations
      SHOULD provide throttling mechanisms to\n   prevent strain created by flaps
      of either a PCEP session or an LSP\n   delegation.\n"
    title: 10.4.  Malicious PCC
  title: 10.  Security Considerations
- contents:
  - '11.  References

    '
  - contents:
    - "11.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC2205]  Braden, R., Ed., Zhang, L., Berson, S., Herzog, S., and S.\n              Jamin,
      \"Resource ReSerVation Protocol (RSVP) -- Version 1\n              Functional
      Specification\", RFC 2205, DOI 10.17487/RFC2205,\n              September 1997,
      <https://www.rfc-editor.org/info/rfc2205>.\n   [RFC3209]  Awduche, D., Berger,
      L., Gan, D., Li, T., Srinivasan, V.,\n              and G. Swallow, \"RSVP-TE:
      Extensions to RSVP for LSP\n              Tunnels\", RFC 3209, DOI 10.17487/RFC3209,
      December 2001,\n              <https://www.rfc-editor.org/info/rfc3209>.\n   [RFC5088]
      \ Le Roux, JL., Ed., Vasseur, JP., Ed., Ikejiri, Y., and R.\n              Zhang,
      \"OSPF Protocol Extensions for Path Computation\n              Element (PCE)
      Discovery\", RFC 5088, DOI 10.17487/RFC5088,\n              January 2008, <https://www.rfc-editor.org/info/rfc5088>.\n
      \  [RFC5089]  Le Roux, JL., Ed., Vasseur, JP., Ed., Ikejiri, Y., and R.\n              Zhang,
      \"IS-IS Protocol Extensions for Path Computation\n              Element (PCE)
      Discovery\", RFC 5089, DOI 10.17487/RFC5089,\n              January 2008, <https://www.rfc-editor.org/info/rfc5089>.\n
      \  [RFC5284]  Swallow, G. and A. Farrel, \"User-Defined Errors for RSVP\",\n
      \             RFC 5284, DOI 10.17487/RFC5284, August 2008,\n              <https://www.rfc-editor.org/info/rfc5284>.\n
      \  [RFC5440]  Vasseur, JP., Ed. and JL. Le Roux, Ed., \"Path Computation\n              Element
      (PCE) Communication Protocol (PCEP)\", RFC 5440,\n              DOI 10.17487/RFC5440,
      March 2009,\n              <https://www.rfc-editor.org/info/rfc5440>.\n   [RFC5511]
      \ Farrel, A., \"Routing Backus-Naur Form (RBNF): A Syntax\n              Used
      to Form Encoding Rules in Various Routing Protocol\n              Specifications\",
      RFC 5511, DOI 10.17487/RFC5511, April\n              2009, <https://www.rfc-editor.org/info/rfc5511>.\n
      \  [RFC8051]  Zhang, X., Ed. and I. Minei, Ed., \"Applicability of a\n              Stateful
      Path Computation Element (PCE)\", RFC 8051,\n              DOI 10.17487/RFC8051,
      January 2017,\n              <https://www.rfc-editor.org/info/rfc8051>.\n   [RFC8174]
      \ Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n"
    title: 11.1.  Normative References
  - contents:
    - "11.2.  Informative References\n   [MPLS-PC]  Chaieb, I., Le Roux, JL., and
      B. Cousin, \"Improved MPLS-TE\n              LSP Path Computation using Preemption\",
      Global\n              Information Infrastructure Symposium,\n              DOI
      10.1109/GIIS.2007.4404195, July 2007.\n   [MXMN-TE]  Danna, E., Mandal, S.,
      and A. Singh, \"A practical\n              algorithm for balancing the max-min
      fairness and\n              throughput objectives in traffic engineering\",
      INFOCOM,\n              2012 Proceedings IEEE, pp. 846-854,\n              DOI
      10.1109/INFCOM.2012.6195833, March 2012.\n   [PCE-Init-LSP]\n              Crabbe,
      E., Minei, I., Sivabalan, S., and R. Varga, \"PCEP\n              Extensions
      for PCE-initiated LSP Setup in a Stateful PCE\n              Model\", Work in
      Progress,\n              draft-ietf-pce-pce-initiated-lsp-10, June 2017.\n   [PCEP-GMPLS]\n
      \             Margaria, C., de Dios, O., and F. Zhang, \"PCEP extensions\n              for
      GMPLS\", Work in Progress,\n              draft-ietf-pce-gmpls-pcep-extensions-11,
      October 2015.\n   [PCEP-YANG]\n              Dhody, D., Hardwick, J., Beeram,
      V., and j.\n              jefftant@gmail.com, \"A YANG Data Model for Path\n
      \             Computation Element Communications Protocol (PCEP)\", Work\n              in
      Progress, draft-ietf-pce-pcep-yang-05, June 2017.\n   [PCEPS]    Lopez, D.,
      de Dios, O., Wu, Q., and D. Dhody, \"Secure\n              Transport for PCEP\",
      Work in Progress,\n              draft-ietf-pce-pceps-18, September 2017.\n
      \  [RFC2702]  Awduche, D., Malcolm, J., Agogbua, J., O'Dell, M., and J.\n              McManus,
      \"Requirements for Traffic Engineering Over MPLS\",\n              RFC 2702,
      DOI 10.17487/RFC2702, September 1999,\n              <https://www.rfc-editor.org/info/rfc2702>.\n
      \  [RFC3031]  Rosen, E., Viswanathan, A., and R. Callon, \"Multiprotocol\n              Label
      Switching Architecture\", RFC 3031,\n              DOI 10.17487/RFC3031, January
      2001,\n              <https://www.rfc-editor.org/info/rfc3031>.\n   [RFC3346]
      \ Boyle, J., Gill, V., Hannan, A., Cooper, D., Awduche, D.,\n              Christian,
      B., and W. Lai, \"Applicability Statement for\n              Traffic Engineering
      with MPLS\", RFC 3346,\n              DOI 10.17487/RFC3346, August 2002,\n              <https://www.rfc-editor.org/info/rfc3346>.\n
      \  [RFC3630]  Katz, D., Kompella, K., and D. Yeung, \"Traffic Engineering\n
      \             (TE) Extensions to OSPF Version 2\", RFC 3630,\n              DOI
      10.17487/RFC3630, September 2003,\n              <https://www.rfc-editor.org/info/rfc3630>.\n
      \  [RFC4655]  Farrel, A., Vasseur, J., and J. Ash, \"A Path Computation\n              Element
      (PCE)-Based Architecture\", RFC 4655,\n              DOI 10.17487/RFC4655, August
      2006,\n              <https://www.rfc-editor.org/info/rfc4655>.\n   [RFC4657]
      \ Ash, J., Ed. and J. Le Roux, Ed., \"Path Computation\n              Element
      (PCE) Communication Protocol Generic\n              Requirements\", RFC 4657,
      DOI 10.17487/RFC4657, September\n              2006, <https://www.rfc-editor.org/info/rfc4657>.\n
      \  [RFC5305]  Li, T. and H. Smit, \"IS-IS Extensions for Traffic\n              Engineering\",
      RFC 5305, DOI 10.17487/RFC5305, October\n              2008, <https://www.rfc-editor.org/info/rfc5305>.\n
      \  [RFC5394]  Bryskin, I., Papadimitriou, D., Berger, L., and J. Ash,\n              \"Policy-Enabled
      Path Computation Framework\", RFC 5394,\n              DOI 10.17487/RFC5394,
      December 2008,\n              <https://www.rfc-editor.org/info/rfc5394>.\n   [RFC7420]
      \ Koushik, A., Stephan, E., Zhao, Q., King, D., and J.\n              Hardwick,
      \"Path Computation Element Communication Protocol\n              (PCEP) Management
      Information Base (MIB) Module\",\n              RFC 7420, DOI 10.17487/RFC7420,
      December 2014,\n              <https://www.rfc-editor.org/info/rfc7420>.\n   [RFC7525]
      \ Sheffer, Y., Holz, R., and P. Saint-Andre,\n              \"Recommendations
      for Secure Use of Transport Layer\n              Security (TLS) and Datagram
      Transport Layer Security\n              (DTLS)\", BCP 195, RFC 7525, DOI 10.17487/RFC7525,
      May\n              2015, <https://www.rfc-editor.org/info/rfc7525>.\n   [RFC8126]
      \ Cotton, M., Leiba, B., and T. Narten, \"Guidelines for\n              Writing
      an IANA Considerations Section in RFCs\", BCP 26,\n              RFC 8126, DOI
      10.17487/RFC8126, June 2017,\n              <https://www.rfc-editor.org/info/rfc8126>.\n
      \  [RFC8232]  Crabbe, E., Minei, I., Medved, J., Varga, R., Zhang, X.,\n              and
      D. Dhody, \"Optimizations of Label Switched Path State\n              Synchronization
      Procedures for a Stateful PCE\", RFC 8232,\n              DOI 10.17487/RFC8232,
      September 2017,\n              <http://www.rfc-editor.org/info/rfc8232>.\n"
    title: 11.2.  Informative References
  title: 11.  References
- contents:
  - "Acknowledgements\n   We would like to thank Adrian Farrel, Cyril Margaria, and
    Ramon\n   Casellas for their contributions to this document.\n   We would like
    to thank Shane Amante, Julien Meuric, Kohei Shiomoto,\n   Paul Schultz, and Raveendra
    Torvi for their comments and suggestions.\n   Thanks also to Jon Hardwick, Oscar
    Gonzales de Dios, Tomas Janciga,\n   Stefan Kobza, Kexin Tang, Matej Spanik, Jon
    Parker, Marek Zavodsky,\n   Ambrose Kwong, Ashwin Sampath, Calvin Ying, Mustapha
    Aissaoui,\n   Stephane Litkowski, and Olivier Dugeon for helpful comments and\n
    \  discussions.\n"
  title: Acknowledgements
- contents:
  - "Contributors\n   The following people contributed substantially to the content
    of this\n   document and should be considered coauthors:\n   Xian Zhang\n   Huawei
    Technology\n   F3-5-B R&D Center\n   Huawei Industrial Base, Bantian, Longgang
    District\n   Shenzhen, Guangdong 518129\n   China\n   Email: zhang.xian@huawei.com\n
    \  Dhruv Dhody\n   Huawei Technology\n   Leela Palace\n   Bangalore, Karnataka
    560008\n   INDIA\n   Email: dhruv.dhody@huawei.com\n   Siva Sivabalan\n   Cisco
    Systems, Inc.\n   2000 Innovation Drive\n   Kanata, Ontario K2K 3E8\n   Canada\n
    \  Email: msiva@cisco.com\n"
  title: Contributors
- contents:
  - "Authors' Addresses\n   Edward Crabbe\n   Oracle\n   1501 4th Ave, suite 1800\n
    \  Seattle, WA  98101\n   United States of America\n   Email: edward.crabbe@oracle.com\n
    \  Ina Minei\n   Google, Inc.\n   1600 Amphitheatre Parkway\n   Mountain View,
    CA  94043\n   United States of America\n   Email: inaminei@google.com\n   Jan
    Medved\n   Cisco Systems, Inc.\n   170 West Tasman Dr.\n   San Jose, CA  95134\n
    \  United States of America\n   Email: jmedved@cisco.com\n   Robert Varga\n   Pantheon
    Technologies SRO\n   Mlynske Nivy 56\n   Bratislava  821 05\n   Slovakia\n   Email:
    robert.varga@pantheon.tech\n"
  title: Authors' Addresses
