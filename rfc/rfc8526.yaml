- title: __initial_text__
  contents:
  - "                   NETCONF Extensions to Support the\n               Network\
    \ Management Datastore Architecture\n"
- title: Abstract
  contents:
  - "Abstract\n   This document extends the Network Configuration Protocol (NETCONF)\n\
    \   defined in RFC 6241 in order to support the Network Management\n   Datastore\
    \ Architecture (NMDA) defined in RFC 8342.\n   This document updates RFCs 6241\
    \ and 7950.  The update to RFC 6241\n   adds new <get-data> and <edit-data> operations\
    \ and augments existing\n   <lock>, <unlock>, and <validate> operations.  The\
    \ update to RFC 7950\n   requires the usage of the YANG library (described in\
    \ RFC 8525) by\n   NETCONF servers implementing the NMDA.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8526.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Terminology ................................................3\n  \
    \    1.2. Tree Diagrams ..............................................3\n   2.\
    \ Datastore and YANG Library Requirements .........................3\n   3. NETCONF\
    \ Extensions ..............................................4\n      3.1. New NETCONF\
    \ Operations .....................................4\n           3.1.1. The <get-data>\
    \ Operation ............................4\n           3.1.2. The <edit-data> Operation\
    \ ..........................10\n      3.2. Augmentations to NETCONF Operations\
    \ .......................11\n   4. NETCONF Datastores YANG Module .................................12\n\
    \   5. IANA Considerations ............................................20\n  \
    \ 6. Security Considerations ........................................21\n   7.\
    \ References .....................................................21\n      7.1.\
    \ Normative References ......................................21\n      7.2. Informative\
    \ References ....................................22\n   Authors' Addresses ................................................23\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document extends the NETCONF protocol defined in [RFC6241]\
    \ in\n   order to support the Network Management Datastore Architecture (NMDA)\n\
    \   defined in [RFC8342].\n   This document updates [RFC6241] in order to enable\
    \ NETCONF clients to\n   interact with all the datastores supported by a server\
    \ implementing\n   the NMDA.  The update both adds new <get-data> and <edit-data>\n\
    \   operations and augments existing <lock>, <unlock>, and <validate>\n   operations.\n\
    \   This document also updates [RFC7950] in order to enable NETCONF\n   clients\
    \ to both discover which datastores are supported by the\n   NETCONF server and\
    \ determine which modules are supported in each\n   datastore.  The update requires\
    \ NETCONF servers implementing the NMDA\n   to support the YANG library [RFC8525].\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   This document uses the terminology defined by the NMDA\
    \ [RFC8342].\n   The following term is defined in [RFC8525]:\n   o  YANG library\
    \ content identifier\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT\
    \ RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n"
- title: 1.2.  Tree Diagrams
  contents:
  - "1.2.  Tree Diagrams\n   Tree diagrams used in this document follow the notation\
    \ defined in\n   [RFC8340].\n"
- title: 2.  Datastore and YANG Library Requirements
  contents:
  - "2.  Datastore and YANG Library Requirements\n   An NMDA-compliant NETCONF server\
    \ MUST implement the\n   \"ietf-netconf-nmda\" module defined in this document,\
    \ MUST support the\n   operational state datastore, and MUST implement at least\
    \ revision\n   2019-01-04 of the \"ietf-yang-library\" module defined in [RFC8525].\n\
    \   A NETCONF client can discover which datastores and YANG modules the\n   server\
    \ supports by reading the YANG library information from the\n   operational state\
    \ datastore.\n   The server MUST advertise the following capability in the <hello>\n\
    \   message (line breaks and whitespace are used for formatting reasons\n   only):\n\
    \     urn:ietf:params:netconf:capability:yang-library:1.1?\n       revision=<date>&content-id=<content-id-value>\n\
    \   The parameter \"revision\" has the same value as the revision date of\n  \
    \ the \"ietf-yang-library\" module implemented by the server.  This\n   parameter\
    \ MUST be present.\n   The parameter \"content-id\" contains the YANG library\
    \ content\n   identifier [RFC8525].  This parameter MUST be present.\n   With\
    \ this mechanism, a client can cache the supported datastores and\n   YANG modules\
    \ for a server and only update the cache if the\n   \"content-id\" value in the\
    \ <hello> message changes.\n   This document updates Section 5.6.4 of [RFC7950]\
    \ to allow servers to\n   advertise the capability :yang-library:1.1 instead of\n\
    \   :yang-library:1.0 and to implement the subtree \"/yang-library\"\n   [RFC8525]\
    \ instead of \"/modules-state\".\n"
- title: 3.  NETCONF Extensions
  contents:
  - "3.  NETCONF Extensions\n   This section describes the NETCONF extensions needed\
    \ to support the\n   NMDA.  These changes are defined in the new \"ietf-netconf-nmda\"\
    \ YANG\n   [RFC7950] module.\n   These changes include the use of source and target\
    \ parameters based\n   on the \"datastore\" identity defined in the \"ietf-datastores\"\
    \ module\n   [RFC8342].  The use of identities allows future expansion in a way\n\
    \   that the choice-based strategy from the original operations (e.g.,\n   <get-config>\
    \ and <edit-config>) does not.\n"
- title: 3.1.  New NETCONF Operations
  contents:
  - "3.1.  New NETCONF Operations\n   Two new operations -- <get-data> and <edit-data>\
    \ -- are defined in\n   this document in order to support the NMDA.  These operations\
    \ are\n   similar to the <get-config> and <edit-config> operations, but they\n\
    \   can work on an extensible set of datastores.\n"
- title: 3.1.1.  The <get-data> Operation
  contents:
  - "3.1.1.  The <get-data> Operation\n   The <get-data> operation retrieves data\
    \ from a specific NMDA\n   datastore.  This operation is similar to NETCONF's\
    \ <get-config>\n   operation defined in [RFC6241], but it adds the flexibility\
    \ to select\n   the source datastore.\n   +---x get-data\n      +---w input\n\
    \      |  +---w datastore                      ds:datastore-ref\n      |  +---w\
    \ (filter-spec)?\n      |  |  +--:(subtree-filter)\n      |  |  |  +---w subtree-filter?\
    \          <anydata>\n      |  |  +--:(xpath-filter)\n      |  |     +---w xpath-filter?\
    \            yang:xpath1.0 {nc:xpath}?\n      |  +---w config-filter?        \
    \         boolean\n      |  +---w (origin-filters)? {origin}?\n      |  |  +--:(origin-filter)\n\
    \      |  |  |  +---w origin-filter*           or:origin-ref\n      |  |  +--:(negated-origin-filter)\n\
    \      |  |     +---w negated-origin-filter*   or:origin-ref\n      |  +---w max-depth?\
    \                     union\n      |  +---w with-origin?                   empty\
    \ {origin}?\n      |  +---w with-defaults?                 with-defaults-mode\n\
    \      +--ro output\n         +--ro data?   <anydata>\n   The \"datastore\" parameter\
    \ indicates the datastore that is the source\n   of the data to be retrieved.\
    \  This is a \"datastore\" identity.\n   The <get-data> operation accepts a content\
    \ filter parameter, similar\n   to the \"filter\" parameter of <get-config>, but\
    \ uses explicit nodes\n   for subtree filtering (\"subtree-filter\") and XPath\
    \ filtering\n   (\"xpath-filter\").\n   The \"config-filter\" parameter can be\
    \ used to retrieve only \"config\n   true\" or \"config false\" nodes.\n   The\
    \ \"origin-filter\" parameter, which can be present multiple times,\n   selects\
    \ nodes equal to or derived from any of the given values.  The\n   \"negated-origin-filter\"\
    , which can be present multiple times, selects\n   nodes that are not equal to\
    \ or derived from any of the given values.\n   The \"origin-filter\" and \"negated-origin-filter\"\
    \ parameters cannot be\n   used together.\n   The \"max-depth\" parameter can\
    \ be used by the client to limit the\n   number of subtree levels that are returned\
    \ in the reply.\n"
- title: 3.1.1.1.  "origin" Metadata Annotation
  contents:
  - "3.1.1.1.  \"origin\" Metadata Annotation\n   The <get-data> operation defines\
    \ a parameter named \"with-origin\",\n   which if present, requests that the server\
    \ includes \"origin\" metadata\n   annotations in its response, as detailed in\
    \ the NMDA.  This parameter\n   is only valid for the operational state datastore\
    \ and any datastores\n   with identities derived from the \"operational\" identity.\
    \  Otherwise,\n   if an invalid datastore is specified then an error is returned,\
    \ as\n   specified in the \"ietf-netconf-nmda\" module (see Section 4).  Note\n\
    \   that \"origin\" metadata annotations are not included in a response\n   unless\
    \ a client explicitly requests them.\n   Data in the operational state datastore\
    \ can come from multiple\n   sources.  The server should return the \"origin\"\
    \ metadata annotation\n   value that most accurately indicates the source of the\
    \ operational\n   value, as specified in Section 5.3.4 of [RFC8342].\n   When\
    \ encoding the \"origin\" metadata annotation for a hierarchy of\n   returned\
    \ nodes, the annotation may be omitted for a child node when\n   the value matches\
    \ that of the parent node, as described in the\n   \"ietf-origin\" YANG module\
    \ [RFC8342].\n   Support for the \"with-origin\" parameter is OPTIONAL.  It is\n\
    \   identified with the feature \"origin\".\n"
- title: 3.1.1.2.  "with-defaults" Interactions
  contents:
  - "3.1.1.2.  \"with-defaults\" Interactions\n   If the \"with-defaults\" capability\
    \ is supported by the server, then\n   the \"with-defaults\" parameter, defined\
    \ in [RFC6243], is supported for\n   <get-data> operations that target conventional\
    \ configuration\n   datastores.\n   Support for the \"with-defaults\" parameter\
    \ is OPTIONAL for <get-data>\n   operations that target <operational>.  The associated\
    \ capability to\n   indicate a server's support is identified with the URI:\n\
    \     urn:ietf:params:netconf:capability:with-operational-defaults:1.0\n   If\
    \ the \"with-defaults\" parameter is supported for <get-data>\n   operations on\
    \ <operational>, then all retrieval modes specified in\n   either the 'basic-mode'\
    \ or 'also-supported' parameter of the\n   \"with-defaults\" capability are permitted.\
    \  The behavior of the\n   \"with-defaults\" parameter for <operational> is defined\
    \ as below:\n   o  If no \"with-defaults\" parameter is specified, or if it is\
    \ set to\n      \"explicit\", \"report-all\", or \"report-all-tagged\", then the\
    \ \"in\n      use\" values, as defined in Section 5.3 of [RFC8342], are returned\n\
    \      from the operational state datastore, even if a node happens to\n     \
    \ have a default statement in the YANG module, and this default\n      value is\
    \ being used by the server.  If the \"with-defaults\"\n      parameter is set\
    \ to \"report-all-tagged\", any values that match the\n      schema default are\
    \ tagged with additional metadata, as described\n      in Section 3.4 of [RFC6243].\n\
    \   o  If the \"with-defaults\" parameter is set to \"trim\", all \"in use\"\n\
    \      values are returned, except that the output is filtered to exclude\n  \
    \    any values that match the default defined in the YANG schema.\n   Support\
    \ for \"with-defaults\" in <get-data> operations on any datastore\n   not defined\
    \ in [RFC8342] should be defined by the specification for\n   the datastore.\n"
- title: '3.1.1.3.  Example: Retrieving an Entire Subtree from <running>'
  contents:
  - "3.1.1.3.  Example: Retrieving an Entire Subtree from <running>\n   The following\
    \ example shows the <get-data> version of the\n   <get-config> example shown in\
    \ Section 7.1 of [RFC6241], which selects\n   the entire \"/users\" subtree:\n\
    \   <rpc message-id=\"101\"\n        xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\
    >\n     <get-data xmlns=\"urn:ietf:params:xml:ns:yang:ietf-netconf-nmda\"\n  \
    \             xmlns:ds=\"urn:ietf:params:xml:ns:yang:ietf-datastores\">\n    \
    \   <datastore>ds:running</datastore>\n       <subtree-filter>\n         <top\
    \ xmlns=\"http://example.com/schema/1.2/config\">\n           <users/>\n     \
    \    </top>\n       </subtree-filter>\n     </get-data>\n   </rpc>\n   <rpc-reply\
    \ message-id=\"101\"\n        xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\
    >\n     <data xmlns=\"urn:ietf:params:xml:ns:yang:ietf-netconf-nmda\">\n     \
    \  <top xmlns=\"http://example.com/schema/1.2/config\">\n         <users>\n  \
    \         <user>\n             <name>root</name>\n             <type>superuser</type>\n\
    \             <full-name>Charlie Root</full-name>\n             <company-info>\n\
    \               <dept>1</dept>\n               <id>1</id>\n             </company-info>\n\
    \           </user>\n           <!-- additional <user> elements appear here...\
    \ -->\n         </users>\n       </top>\n     </data>\n   </rpc-reply>\n"
- title: '3.1.1.4.  Example: Retrieving a Filtered Subtree from <operational>'
  contents:
  - "3.1.1.4.  Example: Retrieving a Filtered Subtree from <operational>\n   The following\
    \ example shows how the \"origin-filter\" can be used to\n   retrieve nodes from\
    \ <operational>.  The example uses the fictional\n   data model defined in Appendix\
    \ C of [RFC8342].\n   <rpc message-id=\"102\"\n        xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\
    >\n     <get-data xmlns=\"urn:ietf:params:xml:ns:yang:ietf-netconf-nmda\"\n  \
    \             xmlns:ds=\"urn:ietf:params:xml:ns:yang:ietf-datastores\"\n     \
    \          xmlns:or=\"urn:ietf:params:xml:ns:yang:ietf-origin\">\n       <datastore>ds:operational</datastore>\n\
    \       <subtree-filter>\n         <bgp xmlns=\"http://example.com/ns/bgp\"/>\n\
    \       </subtree-filter>\n       <origin-filter>or:intended</origin-filter>\n\
    \       <origin-filter>or:system</origin-filter>\n       <with-origin/>\n    \
    \ </get-data>\n   </rpc>\n   <rpc-reply message-id=\"102\"\n       xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\
    >\n     <data xmlns=\"urn:ietf:params:xml:ns:yang:ietf-netconf-nmda\">\n     \
    \  <bgp xmlns=\"http://example.com/ns/bgp\"\n            xmlns:or=\"urn:ietf:params:xml:ns:yang:ietf-origin\"\
    \n            or:origin=\"or:intended\">\n         <peer>\n           <name>2001:db8::2:3</name>\n\
    \           <local-port or:origin=\"or:system\">60794</local-port>\n         \
    \  <state>established</state>\n         </peer>\n       </bgp>\n     </data>\n\
    \   </rpc-reply>\n   In order to not retrieve any system state nodes, the \"config-filter\"\
    \n   can be used:\n   <rpc message-id=\"103\"\n        xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\
    >\n     <get-data xmlns=\"urn:ietf:params:xml:ns:yang:ietf-netconf-nmda\"\n  \
    \             xmlns:ds=\"urn:ietf:params:xml:ns:yang:ietf-datastores\"\n     \
    \          xmlns:or=\"urn:ietf:params:xml:ns:yang:ietf-origin\">\n       <datastore>ds:operational</datastore>\n\
    \       <subtree-filter>\n         <bgp xmlns=\"http://example.com/ns/bgp\"/>\n\
    \       </subtree-filter>\n       <config-filter>true</config-filter>\n      \
    \ <origin-filter>or:intended</origin-filter>\n       <origin-filter>or:system</origin-filter>\n\
    \       <with-origin/>\n     </get-data>\n   </rpc>\n   <rpc-reply message-id=\"\
    103\"\n              xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n    \
    \ <data xmlns=\"urn:ietf:params:xml:ns:yang:ietf-netconf-nmda\">\n       <bgp\
    \ xmlns=\"http://example.com/ns/bgp\"\n            xmlns:or=\"urn:ietf:params:xml:ns:yang:ietf-origin\"\
    \n            or:origin=\"or:intended\">\n         <peer>\n           <name>2001:db8::2:3</name>\n\
    \           <local-port or:origin=\"or:system\">60794</local-port>\n         </peer>\n\
    \       </bgp>\n     </data>\n   </rpc-reply>\n"
- title: 3.1.2.  The <edit-data> Operation
  contents:
  - "3.1.2.  The <edit-data> Operation\n   The <edit-data> operation changes the contents\
    \ of a writable\n   datastore, similar to the <edit-config> operation defined\
    \ in\n   [RFC6241] but with additional flexibility in naming the target\n   datastore.\
    \  If an <edit-data> operation is invoked on a non-writable\n   datastore, then\
    \ an error is returned, as specified in the\n   \"ietf-netconf-nmda\" module (see\
    \ Section 4).\n   +---x edit-data\n      +---w input\n         +---w datastore\
    \            ds:datastore-ref\n         +---w default-operation?   enumeration\n\
    \         +---w (edit-content)\n            +--:(config)\n            |  +---w\
    \ config?        <anydata>\n            +--:(url)\n               +---w url? \
    \          inet:uri {nc:url}?\n   The \"datastore\" parameter is a \"datastore\"\
    \ identity that indicates\n   the desired target datastore where changes should\
    \ be made.\n   The \"default-operation\" parameter selects the default operation\
    \ to\n   use.  It is a copy of the \"default-operation\" parameter of the\n  \
    \ <edit-config> operation.\n   The \"edit-content\" parameter specifies the content\
    \ for the edit\n   operation.  It mirrors the \"edit-content\" choice of the <edit-config>\n\
    \   operation.  Note, however, that the \"config\" element in the\n   \"edit-content\"\
    \ choice of <edit-data> uses \"anydata\" (introduced in\n   YANG 1.1 [RFC7950])\
    \ while the \"config\" element in the \"edit-content\"\n   choice of <edit-config>\
    \ used \"anyxml\".\n   The <edit-data> operation does not support the \"error-option\"\
    \ and the\n   \"test-option\" parameters that were part of the <edit-config>\n\
    \   operation.  The error behavior of <edit-data> corresponds to the\n   \"rollback-on-error\"\
    \ value in the \"error-option\" parameter.\n   If the \"with-defaults\" capability\
    \ is supported by the server, the\n   semantics of editing modes is the same as\
    \ for <edit-config>, as\n   described in Section 4.5.2 of [RFC6243].\n   Semantics\
    \ for \"with-defaults\" in <edit-data> operations on any non\n   conventional\
    \ configuration datastores should be defined by the\n   specification for the\
    \ datastore.\n"
- title: '3.1.2.1.  Example: Setting a Leaf of an Interface in <running>'
  contents:
  - "3.1.2.1.  Example: Setting a Leaf of an Interface in <running>\n   The following\
    \ example shows the <edit-data> version of the first\n   <edit-config> example\
    \ in Section 7.2 of [RFC6241].  In this example,\n   the MTU is set to 1500 on\
    \ an interface named \"Ethernet0/0\" in the\n   running configuration datastore.\n\
    \   <rpc message-id=\"103\"\n        xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\
    >\n     <edit-data xmlns=\"urn:ietf:params:xml:ns:yang:ietf-netconf-nmda\"\n \
    \               xmlns:ds=\"urn:ietf:params:xml:ns:yang:ietf-datastores\">\n  \
    \     <datastore>ds:running</datastore>\n       <config>\n         <top xmlns=\"\
    http://example.com/schema/1.2/config\">\n           <interface>\n            \
    \ <name>Ethernet0/0</name>\n             <mtu>1500</mtu>\n           </interface>\n\
    \         </top>\n       </config>\n     </edit-data>\n   </rpc>\n   <rpc-reply\
    \ message-id=\"103\"\n        xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\
    >\n     <ok/>\n   </rpc-reply>\n   The other <edit-config> examples shown in Section\
    \ 7.2 of [RFC6241]\n   can be translated to <edit-data> examples in a similar\
    \ way.\n"
- title: 3.2.  Augmentations to NETCONF Operations
  contents:
  - "3.2.  Augmentations to NETCONF Operations\n   Several of the operations defined\
    \ in the base NETCONF YANG module\n   \"ietf-netconf\" [RFC6241] may be used with\
    \ new datastores.  Hence, the\n   <lock>, <unlock>, and <validate> operations\
    \ are augmented with a new\n   \"datastore\" leaf that can select the desired\
    \ datastore.  If a <lock>,\n   <unlock>, or <validate> operation is not supported\
    \ on a particular\n   datastore, then an error is returned, as specified in the\n\
    \   \"ietf-netconf-nmda\" module (see Section 4).\n"
- title: 4.  NETCONF Datastores YANG Module
  contents:
  - "4.  NETCONF Datastores YANG Module\n   This module imports definitions from [RFC6991],\
    \ [RFC6241], [RFC6243],\n   and [RFC8342].\n   <CODE BEGINS> file \"ietf-netconf-nmda@2019-01-07.yang\"\
    \n   module ietf-netconf-nmda {\n     yang-version 1.1;\n     namespace \"urn:ietf:params:xml:ns:yang:ietf-netconf-nmda\"\
    ;\n     prefix ncds;\n     import ietf-yang-types {\n       prefix yang;\n   \
    \    reference\n         \"RFC 6991: Common YANG Data Types\";\n     }\n     import\
    \ ietf-inet-types {\n       prefix inet;\n       reference\n         \"RFC 6991:\
    \ Common YANG Data Types\";\n     }\n     import ietf-datastores {\n       prefix\
    \ ds;\n       reference\n         \"RFC 8342: Network Management Datastore Architecture\n\
    \                    (NMDA)\";\n     }\n     import ietf-origin {\n       prefix\
    \ or;\n       reference\n         \"RFC 8342: Network Management Datastore Architecture\n\
    \                    (NMDA)\";\n     }\n     import ietf-netconf {\n       prefix\
    \ nc;\n       reference\n         \"RFC 6241: Network Configuration Protocol (NETCONF)\"\
    ;\n     }\n     import ietf-netconf-with-defaults {\n       prefix ncwd;\n   \
    \    reference\n         \"RFC 6243: With-defaults Capability for NETCONF\";\n\
    \     }\n     organization\n       \"IETF NETCONF Working Group\";\n     contact\n\
    \       \"WG Web:   <https://datatracker.ietf.org/wg/netconf/>\n        WG List:\
    \  <mailto:netconf@ietf.org>\n        Author:   Martin Bjorklund\n           \
    \       <mailto:mbj@tail-f.com>\n        Author:   Juergen Schoenwaelder\n   \
    \               <mailto:j.schoenwaelder@jacobs-university.de>\n        Author:\
    \   Phil Shafer\n                  <mailto:phil@juniper.net>\n        Author:\
    \   Kent Watsen\n                  <mailto:kent+ietf@watsen.net>\n        Author:\
    \   Robert Wilton\n                  <mailto:rwilton@cisco.com>\";\n     description\n\
    \       \"This YANG module defines a set of NETCONF operations to support\n  \
    \      the Network Management Datastore Architecture (NMDA).\n        The key\
    \ words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL\n        NOT', 'SHOULD',\
    \ 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',\n        'MAY', and 'OPTIONAL'\
    \ in this document are to be interpreted as\n        described in BCP 14 (RFC\
    \ 2119) (RFC 8174) when, and only when,\n        they appear in all capitals,\
    \ as shown here.\n        Copyright (c) 2019 IETF Trust and the persons identified\
    \ as\n        authors of the code.  All rights reserved.\n        Redistribution\
    \ and use in source and binary forms, with or\n        without modification, is\
    \ permitted pursuant to, and subject to\n        the license terms contained in,\
    \ the Simplified BSD License set\n        forth in Section 4.c of the IETF Trust's\
    \ Legal Provisions\n        Relating to IETF Documents\n        (https://trustee.ietf.org/license-info).\n\
    \        This version of this YANG module is part of RFC 8526; see\n        the\
    \ RFC itself for full legal notices.\";\n     revision 2019-01-07 {\n       description\n\
    \         \"Initial revision.\";\n       reference\n         \"RFC 8526: NETCONF\
    \ Extensions to Support the Network Management\n                    Datastore\
    \ Architecture\";\n     }\n     feature origin {\n       description\n       \
    \  \"Indicates that the server supports the 'origin' annotation.\";\n       reference\n\
    \         \"RFC 8342: Network Management Datastore Architecture (NMDA)\";\n  \
    \   }\n     feature with-defaults {\n       description\n         \"NETCONF :with-defaults\
    \ capability.  If the server advertises\n          the :with-defaults capability\
    \ for a session, then this\n          feature must also be enabled for that session.\
    \  Otherwise,\n          this feature must not be enabled.\";\n       reference\n\
    \         \"RFC 6243: With-defaults Capability for NETCONF, Section 4; and\n \
    \         RFC 8526: NETCONF Extensions to Support the Network Management\n   \
    \                 Datastore Architecture, Section 3.1.1.2\";\n     }\n     rpc\
    \ get-data {\n       description\n         \"Retrieve data from an NMDA datastore.\
    \  The content returned\n          by get-data must satisfy all filters, i.e.,\
    \ the filter\n          criteria are logically ANDed.\n          Any ancestor\
    \ nodes (including list keys) of nodes selected by\n          the filters are\
    \ included in the response.\n          The 'with-origin' parameter is only valid\
    \ for an operational\n          datastore.  If 'with-origin' is used with an invalid\n\
    \          datastore, then the server MUST return an <rpc-error> element\n   \
    \       with an <error-tag> value of 'invalid-value'.\n          The 'with-defaults'\
    \ parameter only applies to the operational\n          datastore if the NETCONF\
    \ :with-defaults and\n          :with-operational-defaults capabilities are both\
    \ advertised.\n          If the 'with-defaults' parameter is present in a request\
    \ for\n          which it is not supported, then the server MUST return an\n \
    \         <rpc-error> element with an <error-tag> value of\n          'invalid-value'.\"\
    ;\n       input {\n         leaf datastore {\n           type ds:datastore-ref;\n\
    \           mandatory true;\n           description\n             \"Datastore\
    \ from which to retrieve data.\n              If the datastore is not supported\
    \ by the server, then the\n              server MUST return an <rpc-error> element\
    \ with an\n              <error-tag> value of 'invalid-value'.\";\n         }\n\
    \         choice filter-spec {\n           description\n             \"The content\
    \ filter specification for this request.\";\n           anydata subtree-filter\
    \ {\n             description\n               \"This parameter identifies the\
    \ portions of the\n                target datastore to retrieve.\";\n        \
    \     reference\n               \"RFC 6241: Network Configuration Protocol (NETCONF),\n\
    \                          Section 6\";\n           }\n           leaf xpath-filter\
    \ {\n             if-feature \"nc:xpath\";\n             type yang:xpath1.0;\n\
    \             description\n               \"This parameter contains an XPath expression\
    \ identifying\n                the portions of the target datastore to retrieve.\n\
    \                If the expression returns a node-set, all nodes in the\n    \
    \            node-set are selected by the filter.  Otherwise, if the\n       \
    \         expression does not return a node-set, then the\n                <get-data>\
    \ operation fails.\n                The expression is evaluated in the following\
    \ XPath\n                context:\n                  o  The set of namespace declarations\
    \ are those in\n                     scope on the 'xpath-filter' leaf element.\n\
    \                  o  The set of variable bindings is empty.\n               \
    \   o  The function library is the core function library,\n                  \
    \   and the XPath functions are defined in Section 10\n                     of\
    \ RFC 7950.\n                  o  The context node is the root node of the target\n\
    \                     datastore.\";\n           }\n         }\n         leaf config-filter\
    \ {\n           type boolean;\n           description\n             \"Filter for\
    \ nodes with the given value for their 'config'\n              property.  When\
    \ this leaf is set to 'true', only 'config\n              true' nodes are selected,\
    \ and when set to 'false', only\n              'config false' nodes are selected.\
    \  If this leaf is not\n              present, no nodes are filtered.\";\n   \
    \      }\n         choice origin-filters {\n           when 'derived-from-or-self(datastore,\
    \ \"ds:operational\")';\n           if-feature \"origin\";\n           description\n\
    \             \"Filters configuration nodes based on the 'origin'\n          \
    \    annotation.  Configuration nodes that do not have an\n              'origin'\
    \ annotation are treated as if they have the\n              'origin' annotation\
    \ 'or:unknown'.\n              System state nodes are not affected by origin-filters\
    \ and\n              thus not filtered.  Note that system state nodes can be\n\
    \              filtered with the 'config-filter' leaf.\";\n           leaf-list\
    \ origin-filter {\n             type or:origin-ref;\n             description\n\
    \               \"Filter based on the 'origin' annotation.  A\n              \
    \  configuration node matches the filter if its 'origin'\n                annotation\
    \ is derived from or equal to any of the given\n                filter values.\"\
    ;\n           }\n           leaf-list negated-origin-filter {\n             type\
    \ or:origin-ref;\n             description\n               \"Filter based on the\
    \ 'origin' annotation.  A\n                configuration node matches the filter\
    \ if its 'origin'\n                annotation is neither derived from nor equal\
    \ to any of\n                the given filter values.\";\n           }\n     \
    \    }\n         leaf max-depth {\n           type union {\n             type\
    \ uint16 {\n               range \"1..65535\";\n             }\n             type\
    \ enumeration {\n               enum unbounded {\n                 description\n\
    \                   \"All descendant nodes are included.\";\n               }\n\
    \             }\n           }\n           default \"unbounded\";\n           description\n\
    \             \"For each node selected by the filters, this parameter\n      \
    \        selects how many conceptual subtree levels should be\n              returned\
    \ in the reply.  If the depth is 1, the reply\n              includes just the\
    \ selected nodes but no children.  If the\n              depth is 'unbounded',\
    \ all descendant nodes are included.\";\n         }\n         leaf with-origin\
    \ {\n           when 'derived-from-or-self(../datastore, \"ds:operational\")';\n\
    \           if-feature \"origin\";\n           type empty;\n           description\n\
    \             \"If this parameter is present, the server will return\n       \
    \       the 'origin' annotation for the nodes that have one.\";\n         }\n\
    \         uses ncwd:with-defaults-parameters {\n           if-feature \"with-defaults\"\
    ;\n         }\n       }\n       output {\n         anydata data {\n          \
    \ description\n             \"Copy of the source datastore subset that matched\n\
    \              the filter criteria (if any).  An empty data\n              container\
    \ indicates that the request did not\n              produce any results.\";\n\
    \         }\n       }\n     }\n     rpc edit-data {\n       description\n    \
    \     \"Edit data in an NMDA datastore.\n          If an error condition occurs\
    \ such that an error severity\n          <rpc-error> element is generated, the\
    \ server will stop\n          processing the <edit-data> operation and restore\
    \ the\n          specified configuration to its complete state at\n          the\
    \ start of this <edit-data> operation.\";\n       input {\n         leaf datastore\
    \ {\n           type ds:datastore-ref;\n           mandatory true;\n         \
    \  description\n             \"Datastore that is the target of the <edit-data>\
    \ operation.\n              If the target datastore is not writable, or is not\n\
    \              supported by the server, then the server MUST return an\n     \
    \         <rpc-error> element with an <error-tag> value of\n              'invalid-value'.\"\
    ;\n         }\n         leaf default-operation {\n           type enumeration\
    \ {\n             enum merge {\n               description\n                 \"\
    The default operation is merge.\";\n             }\n             enum replace\
    \ {\n               description\n                 \"The default operation is replace.\"\
    ;\n             }\n             enum none {\n               description\n    \
    \             \"There is no default operation.\";\n             }\n          \
    \ }\n           default \"merge\";\n           description\n             \"The\
    \ default operation to use.\";\n         }\n         choice edit-content {\n \
    \          mandatory true;\n           description\n             \"The content\
    \ for the edit operation.\";\n           anydata config {\n             description\n\
    \               \"Inline config content.\";\n           }\n           leaf url\
    \ {\n             if-feature \"nc:url\";\n             type inet:uri;\n      \
    \       description\n               \"URL-based config content.\";\n         \
    \  }\n         }\n       }\n     }\n     /*\n      * Augment the <lock> and <unlock>\
    \ operations with a\n      * \"datastore\" parameter.\n      */\n     augment\
    \ \"/nc:lock/nc:input/nc:target/nc:config-target\" {\n       description\n   \
    \      \"Add NMDA datastore as target.\";\n       leaf datastore {\n         type\
    \ ds:datastore-ref;\n         description\n           \"Datastore to lock.\n \
    \           The <lock> operation is only supported on writable\n            datastores.\n\
    \            If the <lock> operation is not supported by the server on\n     \
    \       the specified target datastore, then the server MUST return\n        \
    \    an <rpc-error> element with an <error-tag> value of\n            'invalid-value'.\"\
    ;\n       }\n     }\n     augment \"/nc:unlock/nc:input/nc:target/nc:config-target\"\
    \ {\n       description\n         \"Add NMDA datastore as target.\";\n       leaf\
    \ datastore {\n         type ds:datastore-ref;\n         description\n       \
    \    \"Datastore to unlock.\n            The <unlock> operation is only supported\
    \ on writable\n            datastores.\n            If the <unlock> operation\
    \ is not supported by the server on\n            the specified target datastore,\
    \ then the server MUST return\n            an <rpc-error> element with an <error-tag>\
    \ value of\n            'invalid-value'.\";\n       }\n     }\n     /*\n     \
    \ * Augment the <validate> operation with a\n      * \"datastore\" parameter.\n\
    \      */\n     augment \"/nc:validate/nc:input/nc:source/nc:config-source\" {\n\
    \       description\n         \"Add NMDA datastore as source.\";\n       leaf\
    \ datastore {\n         type ds:datastore-ref;\n         description\n       \
    \    \"Datastore to validate.\n            The <validate> operation is supported\
    \ only on configuration\n            datastores.\n            If the <validate>\
    \ operation is not supported by the server\n            on the specified target\
    \ datastore, then the server MUST\n            return an <rpc-error> element with\
    \ an <error-tag> value of\n            'invalid-value'.\";\n       }\n     }\n\
    \   }\n   <CODE ENDS>\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This document registers two capability identifier\
    \ URNs in the\n   \"Network Configuration Protocol (NETCONF) Capability URNs\"\
    \ registry:\n     Index\n     Capability Identifier\n     ---------------------\n\
    \     :yang-library:1.1\n     urn:ietf:params:netconf:capability:yang-library:1.1\n\
    \     :with-operational-defaults\n     urn:ietf:params:netconf:capability:with-operational-defaults:1.0\n\
    \   This document registers a URI in the \"IETF XML Registry\" [RFC3688].\n  \
    \ Following the format in RFC 3688, the following registration has been\n   made.\n\
    \     URI: urn:ietf:params:xml:ns:yang:ietf-netconf-nmda\n     Registrant Contact:\
    \ The IESG.\n     XML: N/A, the requested URI is an XML namespace.\n   This document\
    \ registers a YANG module in the \"YANG Module Names\"\n   registry [RFC6020].\n\
    \     name:         ietf-netconf-nmda\n     namespace:    urn:ietf:params:xml:ns:yang:ietf-netconf-nmda\n\
    \     prefix:       ncds\n     reference:    RFC 8526\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   The YANG module defined in this document extends\
    \ the base operations\n   of the NETCONF [RFC6241] protocol.  The lowest NETCONF\
    \ layer is the\n   secure transport layer and the mandatory-to-implement secure\n\
    \   transport is Secure Shell (SSH) [RFC6242].\n   The Network Configuration Access\
    \ Control Model (NACM) [RFC8341]\n   provides the means to restrict access for\
    \ particular NETCONF users to\n   a preconfigured subset of all available NETCONF\
    \ protocol operations\n   and content.\n   The security considerations for the\
    \ base NETCONF protocol operations\n   (see Section 9 of [RFC6241]) apply to the\
    \ new NETCONF <get-data> and\n   <edit-data> operations defined in this document.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC3688]  Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688,\n  \
    \            DOI 10.17487/RFC3688, January 2004,\n              <https://www.rfc-editor.org/info/rfc3688>.\n\
    \   [RFC6020]  Bjorklund, M., Ed., \"YANG - A Data Modeling Language for\n   \
    \           the Network Configuration Protocol (NETCONF)\", RFC 6020,\n      \
    \        DOI 10.17487/RFC6020, October 2010,\n              <https://www.rfc-editor.org/info/rfc6020>.\n\
    \   [RFC6241]  Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,\n  \
    \            and A. Bierman, Ed., \"Network Configuration Protocol\n         \
    \     (NETCONF)\", RFC 6241, DOI 10.17487/RFC6241, June 2011,\n              <https://www.rfc-editor.org/info/rfc6241>.\n\
    \   [RFC6242]  Wasserman, M., \"Using the NETCONF Protocol over Secure\n     \
    \         Shell (SSH)\", RFC 6242, DOI 10.17487/RFC6242, June 2011,\n        \
    \      <https://www.rfc-editor.org/info/rfc6242>.\n   [RFC6243]  Bierman, A. and\
    \ B. Lengyel, \"With-defaults Capability for\n              NETCONF\", RFC 6243,\
    \ DOI 10.17487/RFC6243, June 2011,\n              <https://www.rfc-editor.org/info/rfc6243>.\n\
    \   [RFC6991]  Schoenwaelder, J., Ed., \"Common YANG Data Types\",\n         \
    \     RFC 6991, DOI 10.17487/RFC6991, July 2013,\n              <https://www.rfc-editor.org/info/rfc6991>.\n\
    \   [RFC7950]  Bjorklund, M., Ed., \"The YANG 1.1 Data Modeling Language\",\n\
    \              RFC 7950, DOI 10.17487/RFC7950, August 2016,\n              <https://www.rfc-editor.org/info/rfc7950>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n     \
    \         2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n        \
    \      May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8341]  Bierman,\
    \ A. and M. Bjorklund, \"Network Configuration\n              Access Control Model\"\
    , STD 91, RFC 8341,\n              DOI 10.17487/RFC8341, March 2018,\n       \
    \       <https://www.rfc-editor.org/info/rfc8341>.\n   [RFC8342]  Bjorklund, M.,\
    \ Schoenwaelder, J., Shafer, P., Watsen, K.,\n              and R. Wilton, \"\
    Network Management Datastore Architecture\n              (NMDA)\", RFC 8342, DOI\
    \ 10.17487/RFC8342, March 2018,\n              <https://www.rfc-editor.org/info/rfc8342>.\n\
    \   [RFC8525]  Bierman, A., Bjorklund, M., Schoenwaelder, J., Watsen, K.,\n  \
    \            and R. Wilton, \"YANG Library\", RFC 8525,\n              DOI 10.17487/RFC8525,\
    \ March 2019,\n              <https://www.rfc-editor.org/info/rfc8525>.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [RFC8340]  Bjorklund, M. and L. Berger, Ed.,\
    \ \"YANG Tree Diagrams\",\n              BCP 215, RFC 8340, DOI 10.17487/RFC8340,\
    \ March 2018,\n              <https://www.rfc-editor.org/info/rfc8340>.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Martin Bjorklund\n   Tail-f Systems\n   Email: mbj@tail-f.com\n\
    \   Juergen Schoenwaelder\n   Jacobs University\n   Email: j.schoenwaelder@jacobs-university.de\n\
    \   Phil Shafer\n   Juniper Networks\n   Email: phil@juniper.net\n   Kent Watsen\n\
    \   Watsen Networks\n   Email: kent+ietf@watsen.net\n   Robert Wilton\n   Cisco\
    \ Systems\n   Email: rwilton@cisco.com\n"
