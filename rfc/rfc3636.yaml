- title: __initial_text__
  contents:
  - "                   Definitions of Managed Objects for\n               IEEE 802.3\
    \ Medium Attachment Units (MAUs)\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n\
    \   for use with network management protocols in the Internet community.\n   In\
    \ particular, it defines objects for managing IEEE 802.3 Medium\n   Attachment\
    \ Units (MAUs).  This memo obsoletes RFC 2668.  This memo\n   extends that specification\
    \ by including management information useful\n   for the management of 10 gigabit\
    \ per second (Gb/s) MAUs.  This memo\n   also obsoletes RFC 1515.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction. . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n   2.  The Internet-Standard Management Framework. . . . . .\
    \ . . . .   3\n   3.  Overview. . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .   3\n       3.1.  Relationship to RFC 2668. . . . . . . . . . . . . .\
    \ . .   3\n       3.2.  Relationship to RFC 2239. . . . . . . . . . . . . . .\
    \ .   4\n       3.3.  Relationship to RFC 1515. . . . . . . . . . . . . . . .\
    \   4\n       3.4.  Relationship to Other MIBs. . . . . . . . . . . . . . .  \
    \ 4\n             3.4.1.  Relationship to the Interfaces MIB. . . . . . .   4\n\
    \             3.4.2.  Relationship to the 802.3 Repeater MIB. . . . .   5\n  \
    \     3.5.  Management of Internal MAUs . . . . . . . . . . . . . .   5\n    \
    \   3.6.  Mapping of IEEE 802.3 Managed Objects . . . . . . . . .   6\n   4. \
    \ Definitions . . . . . . . . . . . . . . . . . . . . . . . . .   7\n   5.  Intellectual\
    \ Property Statement . . . . . . . . . . . . . . .  55\n   6.  Acknowledgements.\
    \ . . . . . . . . . . . . . . . . . . . . . .  56\n   7.  Normative References.\
    \ . . . . . . . . . . . . . . . . . . . .  57\n   8.  Informative References.\
    \ . . . . . . . . . . . . . . . . . . .  57\n   9.  Security Considerations .\
    \ . . . . . . . . . . . . . . . . . .  58\n   A.  Change Log. . . . . . . . .\
    \ . . . . . . . . . . . . . . . . .  60\n       A.1.  Changes since RFC 2668.\
    \ . . . . . . . . . . . . . . . .  60\n       A.2.  Changes between RFC 2239 and\
    \ RFC 2668 . . . . . . . . .  60\n   Author's Address. . . . . . . . . . . . .\
    \ . . . . . . . . . . . .  61\n   Full Copyright Statement. . . . . . . . . .\
    \ . . . . . . . . . . .  62\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This memo defines a portion of the Management Information\
    \ Base (MIB)\n   for use with network management protocols in the Internet community.\n\
    \   In particular, it defines objects for managing IEEE 802.3 Medium\n   Attachment\
    \ Units (MAUs).\n   This memo also includes a MIB module.  This MIB module extends\
    \ the\n   list of managed objects specified in the earlier version of this MIB\n\
    \   module, RFC 2668 [RFC2668].\n   Ethernet technology, as defined by the 802.3\
    \ Working Group of the\n   IEEE, continues to evolve, with scalable increases\
    \ in speed, new\n   types of cabling and interfaces, and new features.  This evolution\n\
    \   may require changes in the managed objects in order to reflect this\n   new\
    \ functionality.  This document, as with other documents issued by\n   this working\
    \ group, reflects a certain stage in the evolution of\n   Ethernet technology.\
    \  In the future, this document might be revised,\n   or new documents might be\
    \ issued by the Ethernet Interfaces and Hub\n   MIB Working Group, in order to\
    \ reflect the evolution of Ethernet\n   technology.\n   The key words \"MUST\"\
    , \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD\
    \ NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document are to\
    \ be interpreted as described in [RFC2119].\n"
- title: 2.  The Internet-Standard Management Framework
  contents:
  - "2.  The Internet-Standard Management Framework\n   For a detailed overview of\
    \ the documents that describe the current\n   Internet-Standard Management Framework,\
    \ please refer to section 7 of\n   RFC 3410 [RFC3410].\n   Managed objects are\
    \ accessed via a virtual information store, termed\n   the Management Information\
    \ Base or MIB.  MIB objects are generally\n   accessed through the Simple Network\
    \ Management Protocol (SNMP).\n   Objects in the MIB are defined using the mechanisms\
    \ defined in the\n   Structure of Management Information (SMI).  This memo specifies\
    \ a MIB\n   module that is compliant to the SMIv2, which is described in STD 58,\n\
    \   RFC 2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580\n   [RFC2580].\n"
- title: 3.  Overview
  contents:
  - "3.  Overview\n   Instances of these object types represent attributes of an IEEE\
    \ 802.3\n   MAU.  Several types of MAUs are defined in the IEEE 802.3 CSMA/CD\n\
    \   standard [IEEE802.3].  These MAUs may be connected to IEEE 802.3\n   repeaters\
    \ or to 802.3 (Ethernet-like) interfaces.  For convenience\n   this document refers\
    \ to these devices as \"repeater MAUs\" and\n   \"interface MAUs.\"\n   The definitions\
    \ presented here are based on Section 30.5, \"Layer\n   Management for 10 Mb/s,\
    \ 100 Mb/s, 1000 Mb/s and 10 Gb/s Medium\n   Attachment Units (MAUs)\", Section\
    \ 30.6, \"Management for link Auto-\n   Negotiation\", and Annex 30A, \"GDMO Specifications\
    \ for 802.3 managed\n   object classes\" of IEEE Std. 802.3, 2002 edition [IEEE802.3],\
    \ as\n   amended by IEEE Std. 802.3ae-2002 [IEEE802.3ae].  That specification\n\
    \   includes definitions for 10 Mb/s, 100 Mb/s, 1000 Mb/s and 10 Gb/s\n   devices.\
    \  This specification is intended to serve the same purpose:\n   to provide for\
    \ management of all types of Ethernet/802.3 MAUs.\n"
- title: 3.1.  Relationship to RFC 2668
  contents:
  - "3.1.  Relationship to RFC 2668\n   This MIB is intended to be a superset of that\
    \ defined by RFC 2668\n   [RFC2668].  This MIB includes all of the objects contained\
    \ in that\n   MIB, with new and updated definitions which provide support for\n\
    \   additional capabilities.  Implementors are encouraged to support all\n   applicable\
    \ conformance groups in order to make the best use of the\n   new functionality\
    \ provided by this MIB.  The new and updated\n   definitions provide management\
    \ support for 10 Gb/s devices.\n"
- title: 3.2.  Relationship to RFC 2239
  contents:
  - "3.2.  Relationship to RFC 2239\n   RFC 2668 was a replacement for RFC 2239 [RFC2239].\
    \  RFC 2668 defined\n   a superset of that defined by RFC 2239, which contained\
    \ all of the\n   objects defined in RFC 2239, plus several new ones which provide\n\
    \   additional capabilities.  The new objects provided management support\n  \
    \ for:\n   o  management of 1000 Mb/s devices\n   o  management of PAUSE negotiation\n\
    \   o  management of remote fault status\n"
- title: 3.3.  Relationship to RFC 1515
  contents:
  - "3.3.  Relationship to RFC 1515\n   RFC 2239 was a replacement for RFC 1515 [RFC1515].\
    \  RFC 2239 defined\n   a superset of RFC 1515 which contained all of the objects\
    \ defined in\n   RFC 1515, plus several new ones which provided additional\n \
    \  capabilities.  The new objects in RFC 2239 provided management\n   support\
    \ for:\n   o  management of 100 Mb/s devices\n   o  auto-negotiation on interface\
    \ MAUs\n   o  jack management\n"
- title: 3.4.  Relationship to Other MIBs
  contents:
  - "3.4.  Relationship to Other MIBs\n   It is assumed that an agent implementing\
    \ this MIB will also implement\n   (at least) the 'system' group defined in the\
    \ SNMPv2 MIB [RFC3418].\n   The following sections identify other MIBs that such\
    \ an agent should\n   implement.\n"
- title: 3.4.1.  Relationship to the Interfaces MIB.
  contents:
  - "3.4.1.  Relationship to the Interfaces MIB.\n   The sections of this document\
    \ that define interface MAU-related\n   objects specify an extension to the Interfaces\
    \ MIB [RFC2863].  An\n   agent implementing these interface-MAU related objects\
    \ MUST also\n   implement the relevant groups of the ifCompliance3 MODULE-COMPLIANCE\n\
    \   statement of the Interface MIB.  The value of the object ifMauIfIndex\n  \
    \ is the same as the value of 'ifIndex' used to instantiate the\n   interface\
    \ to which the given MAU is connected.\n   It is REQUIRED that an agent implementing\
    \ the interface-MAU related\n   objects in this MIB will also fully comply with\
    \ the dot3Compliance2\n   MODULE-COMPLIANCE statement of the Ethernet-like Interfaces\
    \ MIB,\n   [RFC3635].  Furthermore, when the interface-MAU related objects are\n\
    \   used to manage a 10GBASE-W PHY -- i.e., when ifMauType is equal to\n   dot3MauType10GigBaseW\
    \ or any other 10GBASE-W variant -- then the\n   agent MUST also support the Ethernet\
    \ WAN Interface Sublayer (WIS) MIB\n   [RFC3637] and must follow the interface\
    \ layering model specified\n   therein.  In that case the value of the object\
    \ ifMauIfIndex is the\n   same as the value of 'ifIndex' for the layer at the\
    \ top of the stack,\n   i.e., for the ifTable entry that has 'ifType' equal to\n\
    \   ethernetCsmacd(6).  If the interface-MAU related objects are used to\n   manage\
    \ a PHY that allows the MAU type to be changed dynamically, then\n   the agent\
    \ SHALL create ifTable, ifStackTable, and ifInvStackTable\n   entries that pertain\
    \ to the WIS when ifMauDefaultType is changed to a\n   10GBASEW variant (i.e.,\
    \ one of dot3MauType10GigBaseW,\n   dot3MauType10GigBaseEW, dot3MauType10GigBaseLW,\
    \ or\n   dot3MauType10GigBaseSW) from any other type, and shall destroy the\n\
    \   WIS-related entries when ifMauDefaultType is changed to a non-\n   10GBASE-W\
    \ type.  The agent SHALL also change the values of\n   'ifConnectorPresent' and\
    \ 'ifHighSpeed' in the ifTable entry indexed\n   by ifMauIfIndex as specified\
    \ in [RFC3635] and [RFC3637] when\n   ifMauDefaultType is manipulated in this\
    \ way but SHALL NOT otherwise\n   alter that entry.\n   (Note that repeater ports\
    \ are not represented as interfaces in the\n   Interface MIB.)\n"
- title: 3.4.2.  Relationship to the 802.3 Repeater MIB
  contents:
  - "3.4.2.  Relationship to the 802.3 Repeater MIB\n   The section of this document\
    \ that defines repeater MAU-related\n   objects specifies an extension to the\
    \ 802.3 Repeater MIB defined in\n   [RFC2108].  An agent implementing these repeater-MAU\
    \ related objects\n   MUST also comply with the snmpRptrModCompl compliance statement\
    \ of\n   the 802.3 Repeater MIB.\n   The values of 'rpMauGroupIndex' and 'rpMauPortIndex'\
    \ used to\n   instantiate a repeater MAU variable SHALL be the same as the values\n\
    \   of 'rptrPortGroupIndex' and 'rptrPortIndex' used to instantiate the\n   port\
    \ to which the given MAU is connected.\n"
- title: 3.5.  Management of Internal MAUs
  contents:
  - "3.5.  Management of Internal MAUs\n   In some situations, a MAU can be \"internal\"\
    \ -- i.e., its\n   functionality is implemented entirely within a device.  For\
    \ example,\n   a managed repeater may contain an internal repeater-MAU and/or\
    \ an\n   internal interface-MAU through which management communications\n   originating\
    \ on one of the repeater's external ports pass in order to\n   reach the management\
    \ agent associated with the repeater.  Such\n   internal MAUs may or may not be\
    \ managed.  If they are managed,\n   objects describing their attributes should\
    \ appear in the appropriate\n   MIB subtree:  dot3RpMauBasicGroup for internal\
    \ repeater-MAUs and\n   dot3IfMauBasicGroup for internal interface-MAUs.\n"
- title: 3.6.  Mapping of IEEE 802.3 Managed Objects
  contents:
  - "3.6.  Mapping of IEEE 802.3 Managed Objects\n   IEEE 802.3 Managed Object   \
    \          Corresponding SNMP Object\n   oMAU\n    .aMAUID                   \
    \           rpMauIndex or\n                                         ifMauIndex\
    \ or\n                                         broadMauIndex\n    .aMAUType  \
    \                          rpMauType or\n                                    \
    \     ifMauType\n    .aMAUTypeList                        ifMauTypeListBits\n\
    \    .aMediaAvailable                     rpMauMediaAvailable or\n           \
    \                              ifMauMediaAvailable\n    .aLoseMediaCounter   \
    \                rpMauMediaAvailableStateExits\n                             \
    \            or\n                                         ifMauMediaAvailableStateExits\n\
    \    .aJabber                             rpMauJabberState and\n             \
    \                            rpMauJabberingStateEnters or\n                  \
    \                       ifMauJabberState and\n                               \
    \          ifMauJabberingStateEnters\n    .aMAUAdminState                    \
    \  rpMauStatus or\n                                         ifMauStatus\n    .aBbMAUXmitRcvSplitType\
    \              broadMauXmtRcvSplitType\n    .aBroadbandFrequencies           \
    \    broadMauXmtCarrierFreq and\n                                         broadMauTranslationFreq\n\
    \    .aFalseCarriers                      rpMauFalseCarriers or\n            \
    \                             ifMauFalseCarriers\n    .acResetMAU            \
    \              rpMauStatus or\n                                         ifMauStatus\n\
    \    .acMAUAdminControl                   rpMauStatus or\n                   \
    \                      ifMauStatus\n    .nJabber                             rpMauJabberTrap\
    \ or\n                                         ifMauJabberTrap\n   oAutoNegotiation\n\
    \    .aAutoNegID                          ifMauIndex\n    .aAutoNegAdminState\
    \                  ifMauAutoNegAdminStatus\n    .aAutoNegRemoteSignalling    \
    \        ifMauAutoNegRemoteSignalling\n    .aAutoNegAutoConfig               \
    \   ifMauAutoNegConfig\n    .aAutoNegLocalTechnologyAbility      ifMauAutoNegCapabilityBits\n\
    \    .aAutoNegAdvertisedTechnologyAbility ifMauAutoNegAdvertisedBits and\n   \
    \                                    ifMauAutoNegRemoteFaultAdvertised\n    .aAutoNegReceivedTechnologyAbility\
    \   ifMauAutoNegReceivedBits and\n                                         ifMauAutoNegRemoteFaultReceived\n\
    \    .acAutoNegRestartAutoConfig          ifMauAutoNegRestart\n    .acAutoNegAdminControl\
    \               ifMauAutoNegAdminStatus\n   The following IEEE 802.3 managed objects\
    \ have not been included in\n   this MIB for the following reasons.\n   IEEE 802.3\
    \ Managed Object             Corresponding SNMP Object\n   oMAU\n    .aIdleErrorCount\
    \                     Only useful for 100BaseT2,\n                           \
    \              which is not widely\n                                         implemented.\n\
    \   oAutoNegotiation\n    .aAutoNegLocalSelectorAbility        Only needed for\
    \ support of\n    .aAutoNegAdvertisedSelectorAbility   isoethernet (802.9a), which\
    \ is\n    .aAutoNegReceivedSelectorAbility     not supported by this MIB.\n"
- title: 4.  Definitions
  contents:
  - "4.  Definitions\n   MAU-MIB DEFINITIONS ::= BEGIN\n       IMPORTS\n         \
    \  Counter32, Integer32, Counter64,\n           OBJECT-TYPE, MODULE-IDENTITY,\
    \ NOTIFICATION-TYPE,\n           OBJECT-IDENTITY, mib-2\n               FROM SNMPv2-SMI\n\
    \           TruthValue, AutonomousType, TEXTUAL-CONVENTION\n               FROM\
    \ SNMPv2-TC\n           OBJECT-GROUP, MODULE-COMPLIANCE, NOTIFICATION-GROUP\n\
    \               FROM SNMPv2-CONF\n           InterfaceIndex\n               FROM\
    \ IF-MIB;\n       mauMod MODULE-IDENTITY\n           LAST-UPDATED \"200309190000Z\"\
    \  -- September 19, 2003\n           ORGANIZATION \"IETF Ethernet Interfaces and\
    \ Hub MIB\n                        Working Group\"\n           CONTACT-INFO\n\
    \               \"WG E-mail: hubmib@ietf.org\n             To subscribe: hubmib-request@ietf.org\n\
    \                    Chair: Dan Romascanu\n                   Postal: Avaya Inc.\n\
    \                           Atidim Technology Park, Bldg. 3\n                \
    \           Tel Aviv 61131\n                           Israel\n              \
    \        Tel: +972 3 645 8414\n                   E-mail: dromasca@avaya.com\n\
    \                   Editor: John Flick\n                   Postal: Hewlett-Packard\
    \ Company\n                           8000 Foothills Blvd. M/S 5557\n        \
    \                   Roseville, CA 95747-5557\n                           USA\n\
    \                      Tel: +1 916 785 4018\n                      Fax: +1 916\
    \ 785 1199\n                   E-mail: johnf@rose.hp.com\"\n           DESCRIPTION\
    \ \"Management information for 802.3 MAUs.\n                       The following\
    \ reference is used throughout\n                       this MIB module:\n    \
    \                   [IEEE 802.3 Std] refers to:\n                          IEEE\
    \ Std 802.3, 2002 Edition: 'IEEE Standard\n                          for Information\
    \ technology -\n                          Telecommunications and information exchange\n\
    \                          between systems - Local and metropolitan\n        \
    \                  area networks - Specific requirements -\n                 \
    \         Part 3: Carrier sense multiple access with\n                       \
    \   collision detection (CSMA/CD) access method\n                          and\
    \ physical layer specifications', as\n                          amended by IEEE\
    \ Std 802.3ae-2002:\n                          'Amendment: Media Access Control\
    \ (MAC)\n                          Parameters, Physical Layer, and Management\n\
    \                          Parameters for 10 Gb/s Operation', August,\n      \
    \                    2002.\n                       Of particular interest is Clause\
    \ 30, '10Mb/s,\n                       100Mb/s, 1000Mb/s and 10 Gb/s Management'.\n\
    \                       Copyright (C) The Internet Society (2003).  This\n   \
    \                    version of this MIB module is part of RFC 3636;\n       \
    \                see the RFC itself for full legal notices.\"\n           REVISION\
    \    \"200309190000Z\"  -- September 19, 2003\n           DESCRIPTION \"Updated\
    \ to include support for 10 Gb/s MAUs.\n                       This resulted in\
    \ the following revisions:\n                       - Added OBJECT-IDENTITY definitions\
    \ for\n                         10 gigabit MAU types\n                       -\
    \ Added fiberLC jack type to JackType TC\n                       - Extended ifMauTypeListBits\
    \ with bits for\n                         the 10 gigabit MAU types\n         \
    \              - Added enumerations to ifMauMediaAvailable,\n                \
    \         and updated its DESCRIPTION to reflect\n                         behaviour\
    \ at 10 Gb/s\n                       - Added 64-bit version of ifMauFalseCarriers\n\
    \                         and added mauIfGrpHCStats object group to\n        \
    \                 contain the new object\n                       - Deprecated\
    \ mauModIfCompl2 and replaced it\n                         with mauModIfCompl3,\
    \ which includes the new\n                         object group\n            \
    \            This version published as RFC 3636.\"\n           REVISION    \"\
    199908240400Z\" -- August 24, 1999\n           DESCRIPTION \"This version published\
    \ as RFC 2668.  Updated\n                       to include support for 1000 Mb/sec\n\
    \                       MAUs and flow control negotiation.\"\n           REVISION\
    \    \"199710310000Z\" -- October 31, 1997\n           DESCRIPTION \"Version published\
    \ as RFC 2239.\"\n           REVISION    \"199309300000Z\" -- September30, 1993\n\
    \           DESCRIPTION \"Initial version, published as RFC 1515.\"\n        \
    \   ::= { snmpDot3MauMgt 6 }\n       snmpDot3MauMgt OBJECT IDENTIFIER ::= { mib-2\
    \ 26 }\n       -- textual conventions\n       JackType ::= TEXTUAL-CONVENTION\n\
    \           STATUS      current\n           DESCRIPTION \"Common enumeration values\
    \ for repeater\n                       and interface MAU jack types.\"\n     \
    \      SYNTAX      INTEGER {\n                           other(1),\n         \
    \                  rj45(2),\n                           rj45S(3), -- rj45 shielded\n\
    \                           db9(4),\n                           bnc(5),\n    \
    \                       fAUI(6),  -- female aui\n                           mAUI(7),\
    \  -- male aui\n                           fiberSC(8),\n                     \
    \      fiberMIC(9),\n                           fiberST(10),\n               \
    \            telco(11),\n                           mtrj(12),  -- fiber MT-RJ\n\
    \                           hssdc(13), -- fiber channel style-2\n            \
    \               fiberLC(14)\n                       }\n       dot3RpMauBasicGroup\n\
    \           OBJECT IDENTIFIER ::= { snmpDot3MauMgt 1 }\n       dot3IfMauBasicGroup\n\
    \           OBJECT IDENTIFIER ::= { snmpDot3MauMgt 2 }\n       dot3BroadMauBasicGroup\n\
    \           OBJECT IDENTIFIER ::= { snmpDot3MauMgt 3 }\n       dot3IfMauAutoNegGroup\n\
    \           OBJECT IDENTIFIER ::= { snmpDot3MauMgt 5 }\n       -- object identities\
    \ for MAU types\n       --  (see rpMauType and ifMauType for usage)\n       dot3MauType\n\
    \           OBJECT IDENTIFIER ::= { snmpDot3MauMgt 4 }\n       dot3MauTypeAUI\
    \ OBJECT-IDENTITY\n           STATUS      current\n           DESCRIPTION \"no\
    \ internal MAU, view from AUI\"\n           REFERENCE   \"[IEEE 802.3 Std.], Section\
    \ 7\"\n           ::= { dot3MauType 1 }\n       dot3MauType10Base5 OBJECT-IDENTITY\n\
    \           STATUS      current\n           DESCRIPTION \"thick coax MAU\"\n \
    \          REFERENCE   \"[IEEE 802.3 Std.], Section 7\"\n           ::= { dot3MauType\
    \ 2 }\n       dot3MauTypeFoirl OBJECT-IDENTITY\n           STATUS      current\n\
    \           DESCRIPTION \"FOIRL MAU\"\n           REFERENCE   \"[IEEE 802.3 Std.],\
    \ Section 9.9\"\n           ::= { dot3MauType 3 }\n       dot3MauType10Base2 OBJECT-IDENTITY\n\
    \           STATUS      current\n           DESCRIPTION \"thin coax MAU\"\n  \
    \         REFERENCE   \"[IEEE 802.3 Std.], Section 10\"\n           ::= { dot3MauType\
    \ 4 }\n       dot3MauType10BaseT OBJECT-IDENTITY\n           STATUS      current\n\
    \           DESCRIPTION \"UTP MAU.\n                       Note that it is strongly\
    \ recommended that\n                       agents return either dot3MauType10BaseTHD\
    \ or\n                       dot3MauType10BaseTFD if the duplex mode is\n    \
    \                   known.  However, management applications should\n        \
    \               be prepared to receive this MAU type value from\n            \
    \           older agent implementations.\"\n           REFERENCE   \"[IEEE 802.3\
    \ Std.], Section 14\"\n           ::= { dot3MauType 5 }\n       dot3MauType10BaseFP\
    \ OBJECT-IDENTITY\n           STATUS      current\n           DESCRIPTION \"passive\
    \ fiber MAU\"\n           REFERENCE   \"[IEEE 802.3 Std.], Section 16\"\n    \
    \       ::= { dot3MauType 6 }\n       dot3MauType10BaseFB OBJECT-IDENTITY\n  \
    \         STATUS      current\n           DESCRIPTION \"sync fiber MAU\"\n   \
    \        REFERENCE   \"[IEEE 802.3 Std.], Section 17\"\n           ::= { dot3MauType\
    \ 7 }\n       dot3MauType10BaseFL OBJECT-IDENTITY\n           STATUS      current\n\
    \           DESCRIPTION \"async fiber MAU.\n                       Note that it\
    \ is strongly recommended that\n                       agents return either dot3MauType10BaseFLHD\
    \ or\n                       dot3MauType10BaseFLFD if the duplex mode is\n   \
    \                    known.  However, management applications should\n       \
    \                be prepared to receive this MAU type value from\n           \
    \            older agent implementations.\"\n           REFERENCE   \"[IEEE 802.3\
    \ Std.], Section 18\"\n           ::= { dot3MauType 8 }\n       dot3MauType10Broad36\
    \ OBJECT-IDENTITY\n           STATUS      current\n           DESCRIPTION \"broadband\
    \ DTE MAU.\n                       Note that 10BROAD36 MAUs can be attached to\n\
    \                       interfaces but not to repeaters.\"\n           REFERENCE\
    \   \"[IEEE 802.3 Std.], Section 11\"\n           ::= { dot3MauType 9 }\n    \
    \   ------ new since RFC 1515:\n       dot3MauType10BaseTHD OBJECT-IDENTITY\n\
    \           STATUS      current\n           DESCRIPTION \"UTP MAU, half duplex\
    \ mode\"\n           REFERENCE   \"[IEEE 802.3 Std.], Section 14\"\n         \
    \  ::= { dot3MauType 10 }\n       dot3MauType10BaseTFD OBJECT-IDENTITY\n     \
    \      STATUS      current\n           DESCRIPTION \"UTP MAU, full duplex mode\"\
    \n           REFERENCE   \"[IEEE 802.3 Std.], Section 14\"\n           ::= { dot3MauType\
    \ 11 }\n       dot3MauType10BaseFLHD OBJECT-IDENTITY\n           STATUS      current\n\
    \           DESCRIPTION \"async fiber MAU, half duplex mode\"\n           REFERENCE\
    \   \"[IEEE 802.3 Std.], Section 18\"\n           ::= { dot3MauType 12 }\n   \
    \    dot3MauType10BaseFLFD OBJECT-IDENTITY\n           STATUS      current\n \
    \          DESCRIPTION \"async fiber MAU, full duplex mode\"\n           REFERENCE\
    \   \"[IEEE 802.3 Std.], Section 18\"\n           ::= { dot3MauType 13 }\n   \
    \    dot3MauType100BaseT4 OBJECT-IDENTITY\n           STATUS      current\n  \
    \         DESCRIPTION \"4 pair category 3 UTP\"\n           REFERENCE   \"[IEEE\
    \ 802.3 Std.], Section 23\"\n           ::= { dot3MauType 14 }\n       dot3MauType100BaseTXHD\
    \ OBJECT-IDENTITY\n           STATUS      current\n           DESCRIPTION \"2\
    \ pair category 5 UTP, half duplex mode\"\n           REFERENCE   \"[IEEE 802.3\
    \ Std.], Section 25\"\n           ::= { dot3MauType 15 }\n       dot3MauType100BaseTXFD\
    \ OBJECT-IDENTITY\n           STATUS      current\n           DESCRIPTION \"2\
    \ pair category 5 UTP, full duplex mode\"\n           REFERENCE   \"[IEEE 802.3\
    \ Std.], Section 25\"\n           ::= { dot3MauType 16 }\n       dot3MauType100BaseFXHD\
    \ OBJECT-IDENTITY\n           STATUS      current\n           DESCRIPTION \"X\
    \ fiber over PMT, half duplex mode\"\n           REFERENCE   \"[IEEE 802.3 Std.],\
    \ Section 26\"\n           ::= { dot3MauType 17 }\n       dot3MauType100BaseFXFD\
    \ OBJECT-IDENTITY\n           STATUS      current\n           DESCRIPTION \"X\
    \ fiber over PMT, full duplex mode\"\n           REFERENCE   \"[IEEE 802.3 Std.],\
    \ Section 26\"\n           ::= { dot3MauType 18 }\n       dot3MauType100BaseT2HD\
    \ OBJECT-IDENTITY\n           STATUS      current\n           DESCRIPTION \"2\
    \ pair category 3 UTP, half duplex mode\"\n           REFERENCE   \"[IEEE 802.3\
    \ Std.], Section 32\"\n           ::= { dot3MauType 19 }\n       dot3MauType100BaseT2FD\
    \ OBJECT-IDENTITY\n           STATUS      current\n           DESCRIPTION \"2\
    \ pair category 3 UTP, full duplex mode\"\n           REFERENCE   \"[IEEE 802.3\
    \ Std.], Section 32\"\n           ::= { dot3MauType 20 }\n       ------ new since\
    \ RFC 2239:\n       dot3MauType1000BaseXHD OBJECT-IDENTITY\n           STATUS\
    \      current\n           DESCRIPTION \"PCS/PMA, unknown PMD, half duplex mode\"\
    \n           REFERENCE   \"[IEEE 802.3 Std.], Section 36\"\n           ::= { dot3MauType\
    \ 21 }\n       dot3MauType1000BaseXFD OBJECT-IDENTITY\n           STATUS     \
    \ current\n           DESCRIPTION \"PCS/PMA, unknown PMD, full duplex mode\"\n\
    \           REFERENCE   \"[IEEE 802.3 Std.], Section 36\"\n           ::= { dot3MauType\
    \ 22 }\n       dot3MauType1000BaseLXHD OBJECT-IDENTITY\n           STATUS    \
    \  current\n           DESCRIPTION \"Fiber over long-wavelength laser, half duplex\n\
    \                       mode\"\n           REFERENCE   \"[IEEE 802.3 Std.], Section\
    \ 38\"\n           ::= { dot3MauType 23 }\n       dot3MauType1000BaseLXFD OBJECT-IDENTITY\n\
    \           STATUS      current\n           DESCRIPTION \"Fiber over long-wavelength\
    \ laser, full duplex\n                       mode\"\n           REFERENCE   \"\
    [IEEE 802.3 Std.], Section 38\"\n           ::= { dot3MauType 24 }\n       dot3MauType1000BaseSXHD\
    \ OBJECT-IDENTITY\n           STATUS      current\n           DESCRIPTION \"Fiber\
    \ over short-wavelength laser, half\n                       duplex mode\"\n  \
    \         REFERENCE   \"[IEEE 802.3 Std.], Section 38\"\n           ::= { dot3MauType\
    \ 25 }\n       dot3MauType1000BaseSXFD OBJECT-IDENTITY\n           STATUS    \
    \  current\n           DESCRIPTION \"Fiber over short-wavelength laser, full\n\
    \                       duplex mode\"\n           REFERENCE   \"[IEEE 802.3 Std.],\
    \ Section 38\"\n           ::= { dot3MauType 26 }\n       dot3MauType1000BaseCXHD\
    \ OBJECT-IDENTITY\n           STATUS      current\n           DESCRIPTION \"Copper\
    \ over 150-Ohm balanced cable, half\n                       duplex mode\"\n  \
    \         REFERENCE   \"[IEEE 802.3 Std.], Section 39\"\n           ::= { dot3MauType\
    \ 27 }\n       dot3MauType1000BaseCXFD OBJECT-IDENTITY\n           STATUS    \
    \  current\n           DESCRIPTION \"Copper over 150-Ohm balanced cable, full\n\
    \                       duplex mode\"\n           REFERENCE   \"[IEEE 802.3 Std.],\
    \ Section 39\"\n           ::= { dot3MauType 28 }\n       dot3MauType1000BaseTHD\
    \ OBJECT-IDENTITY\n           STATUS      current\n           DESCRIPTION \"Four-pair\
    \ Category 5 UTP, half duplex mode\"\n           REFERENCE   \"[IEEE 802.3 Std.],\
    \ Section 40\"\n           ::= { dot3MauType 29 }\n       dot3MauType1000BaseTFD\
    \ OBJECT-IDENTITY\n           STATUS      current\n           DESCRIPTION \"Four-pair\
    \ Category 5 UTP, full duplex mode\"\n           REFERENCE   \"[IEEE 802.3 Std.],\
    \ Section 40\"\n           ::= { dot3MauType 30 }\n       ------ new since RFC\
    \ 2668:\n       dot3MauType10GigBaseX OBJECT-IDENTITY\n           STATUS     \
    \ current\n           DESCRIPTION \"X PCS/PMA, unknown PMD.\"\n           REFERENCE\
    \   \"[IEEE 802.3 Std.], Section 48\"\n           ::= { dot3MauType 31 }\n   \
    \    dot3MauType10GigBaseLX4 OBJECT-IDENTITY\n           STATUS      current\n\
    \           DESCRIPTION \"X fiber over WWDM optics\"\n           REFERENCE   \"\
    [IEEE 802.3 Std.], Section 53\"\n           ::= { dot3MauType 32 }\n       dot3MauType10GigBaseR\
    \ OBJECT-IDENTITY\n           STATUS      current\n           DESCRIPTION \"R\
    \ PCS/PMA, unknown PMD.\"\n           REFERENCE   \"[IEEE 802.3 Std.], Section\
    \ 49\"\n           ::= { dot3MauType 33 }\n       dot3MauType10GigBaseER OBJECT-IDENTITY\n\
    \           STATUS      current\n           DESCRIPTION \"R fiber over 1550 nm\
    \ optics\"\n           REFERENCE   \"[IEEE 802.3 Std.], Section 52\"\n       \
    \    ::= { dot3MauType 34 }\n       dot3MauType10GigBaseLR OBJECT-IDENTITY\n \
    \          STATUS      current\n           DESCRIPTION \"R fiber over 1310 nm\
    \ optics\"\n           REFERENCE   \"[IEEE 802.3 Std.], Section 52\"\n       \
    \    ::= { dot3MauType 35 }\n       dot3MauType10GigBaseSR OBJECT-IDENTITY\n \
    \          STATUS      current\n           DESCRIPTION \"R fiber over 850 nm optics\"\
    \n           REFERENCE   \"[IEEE 802.3 Std.], Section 52\"\n           ::= { dot3MauType\
    \ 36 }\n       dot3MauType10GigBaseW OBJECT-IDENTITY\n           STATUS      current\n\
    \           DESCRIPTION \"W PCS/PMA, unknown PMD.\"\n           REFERENCE   \"\
    [IEEE 802.3 Std.], Section 49 and 50\"\n           ::= { dot3MauType 37 }\n  \
    \     dot3MauType10GigBaseEW OBJECT-IDENTITY\n           STATUS      current\n\
    \           DESCRIPTION \"W fiber over 1550 nm optics\"\n           REFERENCE\
    \   \"[IEEE 802.3 Std.], Section 52\"\n           ::= { dot3MauType 38 }\n   \
    \    dot3MauType10GigBaseLW OBJECT-IDENTITY\n           STATUS      current\n\
    \           DESCRIPTION \"W fiber over 1310 nm optics\"\n           REFERENCE\
    \   \"[IEEE 802.3 Std.], Section 52\"\n           ::= { dot3MauType 39 }\n   \
    \    dot3MauType10GigBaseSW OBJECT-IDENTITY\n           STATUS      current\n\
    \           DESCRIPTION \"W fiber over 850 nm optics\"\n           REFERENCE \
    \  \"[IEEE 802.3 Std.], Section 52\"\n           ::= { dot3MauType 40 }\n    \
    \   --\n       -- The Basic Repeater MAU Table\n       --\n       rpMauTable OBJECT-TYPE\n\
    \           SYNTAX      SEQUENCE OF RpMauEntry\n           MAX-ACCESS  not-accessible\n\
    \           STATUS      current\n           DESCRIPTION \"Table of descriptive\
    \ and status information\n                       about the MAU(s) attached to\
    \ the ports of a\n                       repeater.\"\n           ::= { dot3RpMauBasicGroup\
    \ 1 }\n       rpMauEntry OBJECT-TYPE\n           SYNTAX      RpMauEntry\n    \
    \       MAX-ACCESS  not-accessible\n           STATUS      current\n         \
    \  DESCRIPTION \"An entry in the table, containing information\n             \
    \          about a single MAU.\"\n           INDEX       { rpMauGroupIndex,\n\
    \                         rpMauPortIndex,\n                         rpMauIndex\n\
    \                       }\n           ::= { rpMauTable 1 }\n       RpMauEntry\
    \ ::=\n           SEQUENCE {\n               rpMauGroupIndex                 \
    \    Integer32,\n               rpMauPortIndex                      Integer32,\n\
    \               rpMauIndex                          Integer32,\n             \
    \  rpMauType                           AutonomousType,\n               rpMauStatus\
    \                         INTEGER,\n               rpMauMediaAvailable       \
    \          INTEGER,\n               rpMauMediaAvailableStateExits       Counter32,\n\
    \               rpMauJabberState                    INTEGER,\n               rpMauJabberingStateEnters\
    \           Counter32,\n               rpMauFalseCarriers                  Counter32\n\
    \       }\n       rpMauGroupIndex OBJECT-TYPE\n           SYNTAX      Integer32\
    \ (1..2147483647)\n           MAX-ACCESS  read-only  -- read-only since originally\
    \ an\n                                  -- SMIv1 index\n           STATUS    \
    \  current\n           DESCRIPTION \"This variable uniquely identifies the group\n\
    \                       containing the port to which the MAU described\n     \
    \                  by this entry is connected.\n                       Note: \
    \ In practice, a group will generally be\n                       a field-replaceable\
    \ unit (i.e., module, card,\n                       or board) that can fit in\
    \ the physical system\n                       enclosure, and the group number\
    \ will correspond\n                       to a number marked on the physical enclosure.\n\
    \                       The group denoted by a particular value of this\n    \
    \                   object is the same as the group denoted by the\n         \
    \              same value of rptrGroupIndex.\"\n           REFERENCE   \"Reference\
    \ RFC 2108, rptrGroupIndex.\"\n           ::= { rpMauEntry 1 }\n       rpMauPortIndex\
    \ OBJECT-TYPE\n           SYNTAX      Integer32 (1..2147483647)\n           MAX-ACCESS\
    \  read-only  -- read-only since originally an\n                             \
    \     -- SMIv1 index\n           STATUS      current\n           DESCRIPTION \"\
    This variable uniquely identifies the repeater\n                       port within\
    \ group rpMauGroupIndex to which the\n                       MAU described by\
    \ this entry is connected.\"\n           REFERENCE   \"Reference RFC 2108, rptrPortIndex.\"\
    \n           ::= { rpMauEntry 2 }\n       rpMauIndex OBJECT-TYPE\n           SYNTAX\
    \      Integer32 (1..2147483647)\n           MAX-ACCESS  read-only  -- read-only\
    \ since originally an\n                                  -- SMIv1 index\n    \
    \       STATUS      current\n           DESCRIPTION \"This variable uniquely identifies\
    \ the MAU\n                       described by this entry from among other\n \
    \                      MAUs connected to the same port\n                     \
    \  (rpMauPortIndex).\"\n           REFERENCE   \"[IEEE 802.3 Std], 30.5.1.1.1,\
    \ aMAUID.\"\n           ::= { rpMauEntry 3 }\n       rpMauType OBJECT-TYPE\n \
    \          SYNTAX      AutonomousType\n           MAX-ACCESS  read-only\n    \
    \       STATUS      current\n           DESCRIPTION \"This object identifies the\
    \ MAU type.  Values for\n                       standard IEEE 802.3 MAU types\
    \ are defined above.\n                       If the MAU type is unknown, the object\
    \ identifier\n                       unknownMauType OBJECT IDENTIFIER ::= { 0\
    \ 0 }\n                       is returned.  Note that unknownMauType is a\n  \
    \                     syntactically valid object identifier, and any\n       \
    \                conformant implementation of ASN.1 and the BER\n            \
    \           must be able to generate and recognize this\n                    \
    \   value.\"\n           REFERENCE   \"[IEEE 802.3 Std], 30.5.1.1.2, aMAUType.\"\
    \n           ::= { rpMauEntry 4 }\n       rpMauStatus OBJECT-TYPE\n          \
    \ SYNTAX      INTEGER {\n                           other(1),\n              \
    \             unknown(2),\n                           operational(3),\n      \
    \                     standby(4),\n                           shutdown(5),\n \
    \                          reset(6)\n                       }\n           MAX-ACCESS\
    \  read-write\n           STATUS      current\n           DESCRIPTION \"The current\
    \ state of the MAU.  This object MAY\n                       be implemented as\
    \ a read-only object by those\n                       agents and MAUs that do\
    \ not implement software\n                       control of the MAU state.  Some\
    \ agents may not\n                       support setting the value of this object\
    \ to some\n                       of the enumerated values.\n                \
    \       The value other(1) is returned if the MAU is in\n                    \
    \   a state other than one of the states 2 through\n                       6.\n\
    \                       The value unknown(2) is returned when the MAU's\n    \
    \                   true state is unknown; for example, when it is\n         \
    \              being initialized.\n                       A MAU in the operational(3)\
    \ state is fully\n                       functional, operates, and passes signals\
    \ to its\n                       attached DTE or repeater port in accordance to\n\
    \                       its specification.\n                       A MAU in standby(4)\
    \ state forces DI and CI to\n                       idle and the media transmitter\
    \ to idle or fault,\n                       if supported.  Standby(4) mode only\
    \ applies to\n                       link type MAUs.  The state of\n         \
    \              rpMauMediaAvailable is unaffected.\n                       A MAU\
    \ in shutdown(5) state assumes the same\n                       condition on DI,\
    \ CI, and the media transmitter\n                       as though it were powered\
    \ down or not connected.\n                       The MAU MAY return other(1) value\
    \ for the\n                       rpMauJabberState and rpMauMediaAvailable objects\n\
    \                       when it is in this state.  For an AUI, this\n        \
    \               state will remove power from the AUI.\n                      \
    \ Setting this variable to the value reset(6)\n                       resets the\
    \ MAU in the same manner as a\n                       power-off, power-on cycle\
    \ of at least one-half\n                       second would.  The agent is not\
    \ required to\n                       return the value reset (6).\n          \
    \             Setting this variable to the value\n                       operational(3),\
    \ standby(4), or shutdown(5)\n                       causes the MAU to assume\
    \ the respective state\n                       except that setting a mixing-type\
    \ MAU or an AUI\n                       to standby(4) will cause the MAU to enter\
    \ the\n                       shutdown state.\"\n           REFERENCE   \"[IEEE\
    \ 802.3 Std], 30.5.1.1.7, aMAUAdminState,\n                       30.5.1.2.2,\
    \ acMAUAdminControl, and 30.5.1.2.1,\n                       acResetMAU.\"\n \
    \          ::= { rpMauEntry 5 }\n       rpMauMediaAvailable OBJECT-TYPE\n    \
    \       SYNTAX      INTEGER {\n                           other(1),\n        \
    \                   unknown(2),\n                           available(3),\n  \
    \                         notAvailable(4),\n                           remoteFault(5),\n\
    \                           invalidSignal(6),\n                           remoteJabber(7),\n\
    \                           remoteLinkLoss(8),\n                           remoteTest(9),\n\
    \                           offline(10),\n                           autoNegError(11)\n\
    \                       }\n           MAX-ACCESS  read-only\n           STATUS\
    \      current\n           DESCRIPTION \"If the MAU is a link or fiber type (FOIRL,\n\
    \                       10BASE-T, 10BASE-F) then this is equivalent to\n     \
    \                  the link test fail state/low light function.\n            \
    \           For an AUI or a coax (including broadband) MAU\n                 \
    \      this indicates whether or not loopback is\n                       detected\
    \ on the DI circuit.  The value of this\n                       attribute persists\
    \ between packets for MAU types\n                       AUI, 10BASE5, 10BASE2,\
    \ 10BROAD36, and 10BASE-FP.\n                       The value other(1) is returned\
    \ if the\n                       mediaAvailable state is not one of 2 through\
    \ 11.\n                       The value unknown(2) is returned when the MAU's\n\
    \                       true state is unknown; for example, when it is\n     \
    \                  being initialized.  At power-up or following a\n          \
    \             reset, the value of this attribute will be\n                   \
    \    unknown for AUI, coax, and 10BASE-FP MAUs.  For\n                       these\
    \ MAUs loopback will be tested on each\n                       transmission during\
    \ which no collision is\n                       detected.  If DI is receiving\
    \ input when DO\n                       returns to IDL after a transmission and\
    \ there\n                       has been no collision during the transmission\n\
    \                       then loopback will be detected.  The value of\n      \
    \                 this attribute will only change during\n                   \
    \    non-collided transmissions for AUI, coax, and\n                       10BASE-FP\
    \ MAUs.\n                       For 100Mbps and 1000Mbps MAUs, the enumerations\n\
    \                       match the states within the respective link\n        \
    \               integrity state diagrams, fig 32-16, 23-12 and\n             \
    \          24-15 of sections 32, 23 and 24 of [IEEE802.3].\n                 \
    \      Any MAU which implements management of\n                       auto-negotiation\
    \ will map remote fault\n                       indication to remote fault.\n\
    \                       The value available(3) indicates that the link,\n    \
    \                   light, or loopback is normal.  The value\n               \
    \        notAvailable(4) indicates link loss, low light,\n                   \
    \    or no loopback.\n                       The value remoteFault(5) indicates\
    \ that a fault\n                       has been detected at the remote end of\
    \ the link.\n                       This value applies to 10BASE-FB, 100BASE-T4\
    \ Far\n                       End Fault Indication and non-specified remote\n\
    \                       faults from a system running auto-negotiation.\n     \
    \                  The values remoteJabber(7), remoteLinkLoss(8),\n          \
    \             and remoteTest(9) SHOULD be used instead of\n                  \
    \     remoteFault(5) where the reason for remote fault\n                     \
    \  is identified in the remote signaling protocol.\n                       The\
    \ value invalidSignal(6) indicates that an\n                       invalid signal\
    \ has been received from the other\n                       end of the link.  invalidSignal(6)\
    \ applies only\n                       to MAUs of type 10BASE-FB.\n          \
    \             Where an IEEE Std 802.3-2002 clause 22 MII\n                   \
    \    is present, a logic one in the remote fault bit\n                       (reference\
    \ section 22.2.4.2.8 of that document)\n                       maps to the value\
    \ remoteFault(5), and a logic\n                       zero in the link status\
    \ bit (reference section\n                       22.2.4.2.10 of that document)\
    \ maps to the value\n                       notAvailable(4).  The value notAvailable(4)\n\
    \                       takes precedence over the value remoteFault(5).\n    \
    \                   Any MAU that implements management of clause 37\n        \
    \               Auto-Negotiation will map the received Remote\n              \
    \         Fault (RF1 and RF2) bit values for Offline to\n                    \
    \   offline(10), Link Failure to remoteFault(5) and\n                       Auto-Negotiation\
    \ Error to autoNegError(11).\"\n           REFERENCE   \"[IEEE 802.3 Std], 30.5.1.1.4,\
    \ aMediaAvailable.\"\n           ::= { rpMauEntry 6 }\n       rpMauMediaAvailableStateExits\
    \ OBJECT-TYPE\n           SYNTAX      Counter32\n           MAX-ACCESS  read-only\n\
    \           STATUS      current\n           DESCRIPTION \"A count of the number\
    \ of times that\n                       rpMauMediaAvailable for this MAU instance\
    \ leaves\n                       the state available(3).\n                   \
    \    Discontinuities in the value of this counter can\n                      \
    \ occur at re-initialization of the management\n                       system,\
    \ and at other times as indicated by the\n                       value of rptrMonitorPortLastChange.\"\
    \n           REFERENCE   \"[IEEE 802.3 Std], 30.5.1.1.5,\n                   \
    \    aLoseMediaCounter.\n                       RFC 2108, rptrMonitorPortLastChange\"\
    \n           ::= { rpMauEntry 7 }\n       rpMauJabberState OBJECT-TYPE\n     \
    \      SYNTAX      INTEGER {\n                           other(1),\n         \
    \                  unknown(2),\n                           noJabber(3),\n    \
    \                       jabbering(4)\n                       }\n           MAX-ACCESS\
    \  read-only\n           STATUS      current\n           DESCRIPTION \"The value\
    \ other(1) is returned if the jabber\n                       state is not 2, 3,\
    \ or 4.  The agent MUST always\n                       return other(1) for MAU\
    \ type dot3MauTypeAUI.\n                       The value unknown(2) is returned\
    \ when the MAU's\n                       true state is unknown; for example, when\
    \ it is\n                       being initialized.\n                       If\
    \ the MAU is not jabbering the agent returns\n                       noJabber(3).\
    \  This is the 'normal' state.\n                       If the MAU is in jabber\
    \ state the agent returns\n                       the jabbering(4) value.\"\n\
    \           REFERENCE \"[IEEE 802.3 Std], 30.5.1.1.6,\n                     aJabber.jabberFlag.\"\
    \n           ::= { rpMauEntry 8 }\n       rpMauJabberingStateEnters OBJECT-TYPE\n\
    \           SYNTAX      Counter32\n           MAX-ACCESS  read-only\n        \
    \   STATUS      current\n           DESCRIPTION \"A count of the number of times\
    \ that\n                       mauJabberState for this MAU instance enters the\n\
    \                       state jabbering(4).  For MAUs of type\n              \
    \         dot3MauTypeAUI, dot3MauType100BaseT4,\n                       dot3MauType100BaseTX,\
    \ dot3MauType100BaseFX and\n                       all 1000Mbps types, this counter\
    \ will always\n                       indicate zero.\n                       Discontinuities\
    \ in the value of this counter can\n                       occur at re-initialization\
    \ of the management\n                       system, and at other times as indicated\
    \ by the\n                       value of rptrMonitorPortLastChange.\"\n     \
    \      REFERENCE   \"[IEEE 802.3 Std], 30.5.1.1.6,\n                       aJabber.jabberCounter.\n\
    \                       RFC 2108, rptrMonitorPortLastChange\"\n           ::=\
    \ { rpMauEntry 9 }\n       rpMauFalseCarriers OBJECT-TYPE\n           SYNTAX \
    \     Counter32\n           MAX-ACCESS  read-only\n           STATUS      current\n\
    \           DESCRIPTION \"A count of the number of false carrier events\n    \
    \                   during IDLE in 100BASE-X links.  This counter\n          \
    \             does not increment at the symbol rate.  It can\n               \
    \        increment after a valid carrier completion at a\n                   \
    \    maximum rate of once per 100 ms until the next\n                       carrier\
    \ event.\n                       This counter increments only for MAUs of type\n\
    \                       dot3MauType100BaseT4, dot3MauType100BaseTX, and\n    \
    \                   dot3MauType100BaseFX and all 1000Mbps types.\n           \
    \            For all other MAU types, this counter will\n                    \
    \   always indicate zero.\n                       The approximate minimum time\
    \ for rollover of\n                       this counter is 7.4 hours.\n       \
    \                Discontinuities in the value of this counter can\n          \
    \             occur at re-initialization of the management\n                 \
    \      system, and at other times as indicated by the\n                      \
    \ value of rptrMonitorPortLastChange.\"\n           REFERENCE   \"[IEEE 802.3\
    \ Std], 30.5.1.1.10, aFalseCarriers.\n                       RFC 2108, rptrMonitorPortLastChange\"\
    \n           ::= { rpMauEntry 10 }\n       -- The rpJackTable applies to MAUs\
    \ attached to repeaters\n       -- which have one or more external jacks (connectors).\n\
    \       rpJackTable OBJECT-TYPE\n           SYNTAX      SEQUENCE OF RpJackEntry\n\
    \           MAX-ACCESS  not-accessible\n           STATUS      current\n     \
    \      DESCRIPTION \"Information about the external jacks attached\n         \
    \              to MAUs attached to the ports of a repeater.\"\n           ::=\
    \ { dot3RpMauBasicGroup 2 }\n       rpJackEntry OBJECT-TYPE\n           SYNTAX\
    \      RpJackEntry\n           MAX-ACCESS  not-accessible\n           STATUS \
    \     current\n           DESCRIPTION \"An entry in the table, containing information\n\
    \                       about a particular jack.\"\n           INDEX       { rpMauGroupIndex,\n\
    \                         rpMauPortIndex,\n                         rpMauIndex,\n\
    \                         rpJackIndex\n                       }\n           ::=\
    \ { rpJackTable 1 }\n       RpJackEntry ::=\n           SEQUENCE {\n         \
    \      rpJackIndex                         Integer32,\n               rpJackType\
    \                          JackType\n           }\n       rpJackIndex OBJECT-TYPE\n\
    \           SYNTAX      Integer32 (1..2147483647)\n           MAX-ACCESS  not-accessible\n\
    \           STATUS      current\n           DESCRIPTION \"This variable uniquely\
    \ identifies the jack\n                       described by this entry from among\
    \ other jacks\n                       attached to the same MAU (rpMauIndex).\"\
    \n           ::= { rpJackEntry 1 }\n       rpJackType OBJECT-TYPE\n          \
    \ SYNTAX      JackType\n           MAX-ACCESS  read-only\n           STATUS  \
    \    current\n           DESCRIPTION \"The jack connector type, as it appears\
    \ on the\n                       outside of the system.\"\n           ::= { rpJackEntry\
    \ 2 }\n       --\n       -- The Basic Interface MAU Table\n       --\n       ifMauTable\
    \ OBJECT-TYPE\n           SYNTAX      SEQUENCE OF IfMauEntry\n           MAX-ACCESS\
    \  not-accessible\n           STATUS      current\n           DESCRIPTION \"Table\
    \ of descriptive and status information\n                       about MAU(s) attached\
    \ to an interface.\"\n           ::= { dot3IfMauBasicGroup 1 }\n       ifMauEntry\
    \ OBJECT-TYPE\n           SYNTAX      IfMauEntry\n           MAX-ACCESS  not-accessible\n\
    \           STATUS      current\n           DESCRIPTION \"An entry in the table,\
    \ containing information\n                       about a single MAU.\"\n     \
    \      INDEX       { ifMauIfIndex,\n                         ifMauIndex\n    \
    \                   }\n           ::= { ifMauTable 1 }\n       IfMauEntry ::=\n\
    \           SEQUENCE {\n               ifMauIfIndex                        InterfaceIndex,\n\
    \               ifMauIndex                          Integer32,\n             \
    \  ifMauType                           AutonomousType,\n               ifMauStatus\
    \                         INTEGER,\n               ifMauMediaAvailable       \
    \          INTEGER,\n               ifMauMediaAvailableStateExits       Counter32,\n\
    \               ifMauJabberState                    INTEGER,\n               ifMauJabberingStateEnters\
    \           Counter32,\n               ifMauFalseCarriers                  Counter32,\n\
    \               ifMauTypeList                       Integer32,\n             \
    \  ifMauDefaultType                    AutonomousType,\n               ifMauAutoNegSupported\
    \               TruthValue,\n               ifMauTypeListBits                \
    \   BITS,\n               ifMauHCFalseCarriers                Counter64\n    \
    \       }\n       ifMauIfIndex OBJECT-TYPE\n           SYNTAX      InterfaceIndex\n\
    \           MAX-ACCESS  read-only  -- read-only since originally an\n        \
    \                          -- SMIv1 index\n           STATUS      current\n  \
    \         DESCRIPTION \"This variable uniquely identifies the interface\n    \
    \                   to which the MAU described by this entry is\n            \
    \           connected.\"\n           REFERENCE   \"RFC 2863, ifIndex\"\n     \
    \      ::= { ifMauEntry 1 }\n       ifMauIndex OBJECT-TYPE\n           SYNTAX\
    \      Integer32 (1..2147483647)\n           MAX-ACCESS  read-only  -- read-only\
    \ since originally an\n                                  -- SMIv1 index\n    \
    \       STATUS      current\n           DESCRIPTION \"This variable uniquely identifies\
    \ the MAU\n                       described by this entry from among other MAUs\n\
    \                       connected to the same interface (ifMauIfIndex).\"\n  \
    \         REFERENCE   \"[IEEE 802.3 Std], 30.5.1.1.1, aMAUID.\"\n           ::=\
    \ { ifMauEntry 2 }\n       ifMauType OBJECT-TYPE\n           SYNTAX      AutonomousType\n\
    \           MAX-ACCESS  read-only\n           STATUS      current\n          \
    \ DESCRIPTION \"This object identifies the MAU type.  Values for\n           \
    \            standard IEEE 802.3 MAU types are defined above.\n              \
    \         If the MAU type is unknown, the object identifier\n                \
    \       unknownMauType OBJECT IDENTIFIER ::= { 0 0 }\n                       is\
    \ returned.  Note that unknownMauType is a\n                       syntactically\
    \ valid object identifier, and any\n                       conformant implementation\
    \ of ASN.1 and the BER\n                       must be able to generate and recognize\
    \ this\n                       value.\n                       This object represents\
    \ the operational type of\n                       the MAU, as determined by either\
    \ (1) the result\n                       of the auto-negotiation function or (2)\
    \ if\n                       auto-negotiation is not enabled or is not\n     \
    \                  implemented for this MAU, by the value of the\n           \
    \            object ifMauDefaultType.  In case (2), a set to\n               \
    \        the object ifMauDefaultType will force the MAU\n                    \
    \   into the new operating mode.\"\n           REFERENCE   \"[IEEE 802.3 Std],\
    \ 30.5.1.1.2, aMAUType.\"\n           ::= { ifMauEntry 3 }\n       ifMauStatus\
    \ OBJECT-TYPE\n           SYNTAX      INTEGER {\n                           other(1),\n\
    \                           unknown(2),\n                           operational(3),\n\
    \                           standby(4),\n                           shutdown(5),\n\
    \                           reset(6)\n                       }\n           MAX-ACCESS\
    \  read-write\n           STATUS      current\n           DESCRIPTION \"The current\
    \ state of the MAU.  This object MAY\n                       be implemented as\
    \ a read-only object by those\n                       agents and MAUs that do\
    \ not implement software\n                       control of the MAU state.  Some\
    \ agents may not\n                       support setting the value of this object\
    \ to some\n                       of the enumerated values.\n                \
    \       The value other(1) is returned if the MAU is in\n                    \
    \   a state other than one of the states 2 through\n                       6.\n\
    \                       The value unknown(2) is returned when the MAU's\n    \
    \                   true state is unknown; for example, when it is\n         \
    \              being initialized.\n                       A MAU in the operational(3)\
    \ state is fully\n                       functional, operates, and passes signals\
    \ to its\n                       attached DTE or repeater port in accordance to\n\
    \                       its specification.\n                       A MAU in standby(4)\
    \ state forces DI and CI to\n                       idle and the media transmitter\
    \ to idle or fault,\n                       if supported.  Standby(4) mode only\
    \ applies to\n                       link type MAUs.  The state of\n         \
    \              ifMauMediaAvailable is unaffected.\n                       A MAU\
    \ in shutdown(5) state assumes the same\n                       condition on DI,\
    \ CI, and the media transmitter\n                       as though it were powered\
    \ down or not connected.\n                       The MAU MAY return other(1) value\
    \ for the\n                       ifMauJabberState and ifMauMediaAvailable objects\n\
    \                       when it is in this state.  For an AUI, this\n        \
    \               state will remove power from the AUI.\n                      \
    \ Setting this variable to the value reset(6)\n                       resets the\
    \ MAU in the same manner as a\n                       power-off, power-on cycle\
    \ of at least one-half\n                       second would.  The agent is not\
    \ required to\n                       return the value reset (6).\n          \
    \             Setting this variable to the value\n                       operational(3),\
    \ standby(4), or shutdown(5)\n                       causes the MAU to assume\
    \ the respective state\n                       except that setting a mixing-type\
    \ MAU or an AUI\n                       to standby(4) will cause the MAU to enter\
    \ the\n                       shutdown state.\"\n           REFERENCE   \"[IEEE\
    \ 802.3 Std], 30.5.1.1.7, aMAUAdminState,\n                       30.5.1.2.2,\
    \ acMAUAdminControl, and 30.5.1.2.1,\n                       acResetMAU.\"\n \
    \          ::= { ifMauEntry 4 }\n       ifMauMediaAvailable OBJECT-TYPE\n    \
    \       SYNTAX      INTEGER {\n                           other(1),\n        \
    \                   unknown(2),\n                           available(3),\n  \
    \                         notAvailable(4),\n                           remoteFault(5),\n\
    \                           invalidSignal(6),\n                           remoteJabber(7),\n\
    \                           remoteLinkLoss(8),\n                           remoteTest(9),\n\
    \                           offline(10),\n                           autoNegError(11),\n\
    \                           pmdLinkFault(12),\n                           wisFrameLoss(13),\n\
    \                           wisSignalLoss(14),\n                           pcsLinkFault(15),\n\
    \                           excessiveBER(16),\n                           dxsLinkFault(17),\n\
    \                           pxsLinkFault(18)\n                       }\n     \
    \      MAX-ACCESS  read-only\n           STATUS      current\n           DESCRIPTION\
    \ \"If the MAU is a link or fiber type (FOIRL,\n                       10BASE-T,\
    \ 10BASE-F) then this is equivalent to\n                       the link test fail\
    \ state/low light function.\n                       For an AUI or a coax (including\
    \ broadband) MAU\n                       this indicates whether or not loopback\
    \ is\n                       detected on the DI circuit.  The value of this\n\
    \                       attribute persists between packets for MAU types\n   \
    \                    AUI, 10BASE5, 10BASE2, 10BROAD36, and 10BASE-FP.\n      \
    \                 The value other(1) is returned if the\n                    \
    \   mediaAvailable state is not one of 2 through 18.\n                       The\
    \ value unknown(2) is returned when the MAU's\n                       true state\
    \ is unknown; for example, when it is\n                       being initialized.\
    \  At power-up or following a\n                       reset, the value of this\
    \ attribute will be\n                       unknown for AUI, coax, and 10BASE-FP\
    \ MAUs.  For\n                       these MAUs loopback will be tested on each\n\
    \                       transmission during which no collision is\n          \
    \             detected.  If DI is receiving input when DO\n                  \
    \     returns to IDL after a transmission and there\n                       has\
    \ been no collision during the transmission\n                       then loopback\
    \ will be detected.  The value of\n                       this attribute will\
    \ only change during\n                       non-collided transmissions for AUI,\
    \ coax, and\n                       10BASE-FP MAUs.\n                       For\
    \ 100Mbps and 1000Mbps MAUs, the enumerations\n                       match the\
    \ states within the respective link\n                       integrity state diagrams,\
    \ fig 32-16, 23-12 and\n                       24-15 of sections 32, 23 and 24\
    \ of [IEEE802.3].\n                       Any MAU which implements management\
    \ of\n                       auto-negotiation will map remote fault\n        \
    \               indication to remote fault.\n                       The value\
    \ available(3) indicates that the link,\n                       light, or loopback\
    \ is normal.  The value\n                       notAvailable(4) indicates link\
    \ loss, low light,\n                       or no loopback.\n                 \
    \      The value remoteFault(5) indicates that a fault\n                     \
    \  has been detected at the remote end of the link.\n                       This\
    \ value applies to 10BASE-FB, 100BASE-T4 Far\n                       End Fault\
    \ Indication and non-specified remote\n                       faults from a system\
    \ running auto-negotiation.\n                       The values remoteJabber(7),\
    \ remoteLinkLoss(8),\n                       and remoteTest(9) SHOULD be used\
    \ instead of\n                       remoteFault(5) where the reason for remote\
    \ fault\n                       is identified in the remote signaling protocol.\n\
    \                       The value invalidSignal(6) indicates that an\n       \
    \                invalid signal has been received from the other\n           \
    \            end of the link.  invalidSignal(6) applies only\n               \
    \        to MAUs of type 10BASE-FB.\n                       Where an IEEE Std\
    \ 802.3-2002 clause 22 MII\n                       is present, a logic one in\
    \ the remote fault bit\n                       (reference section 22.2.4.2.8 of\
    \ that document)\n                       maps to the value remoteFault(5), and\
    \ a logic\n                       zero in the link status bit (reference section\n\
    \                       22.2.4.2.10 of that document) maps to the value\n    \
    \                   notAvailable(4).  The value notAvailable(4)\n            \
    \           takes precedence over the value remoteFault(5).\n                \
    \       Any MAU that implements management of clause 37\n                    \
    \   Auto-Negotiation will map the received RF1 and\n                       RF2\
    \ bit values for Offline to offline(10), Link\n                       Failure\
    \ to remoteFault(5) and Auto-Negotiation\n                       Error to autoNegError(11).\n\
    \                       For 10 Gb/s, the enumerations map to the states\n    \
    \                   within the Reconciliation Sublayer state diagram\n       \
    \                as follows:\n                         NoFault maps to the enumeration\
    \ 'available(3)'\n                         LocalFault maps to the enumeration\n\
    \                           'notAvailable(4)'\n                         RemoteFault\
    \ maps to the enumeration\n                           'remoteFault(5)'\n     \
    \                  The enumerations 'pmdLinkFault(12)',\n                    \
    \   'wisFrameLoss(13)', 'wisSignalLoss(14)',\n                       'pcsLinkFault(15)',\
    \ 'excessiveBER(16)', and\n                       'dxsLinkFault(17)' and 'pxsLinkFault(18)'\
    \ should\n                       be used instead of the enumeration\n        \
    \               'notAvailable(4)' where the reason for the local\n           \
    \            fault can be identified through the use of the\n                \
    \       MDIO Interface.  Where multiple reasons for the\n                    \
    \   local fault state can be identified only the\n                       highest\
    \ precedence error should be reported.\n                       The precedence\
    \ in descending order is as\n                       follows:\n               \
    \            pxsLinkFault\n                           pmdLinkFault\n         \
    \                  wisFrameLoss\n                           wisSignalLoss\n  \
    \                         pcsLinkFault\n                           excessiveBER\n\
    \                           dxsLinkFault\"\n           REFERENCE   \"[IEEE 802.3\
    \ Std], 30.5.1.1.4, aMediaAvailable.\"\n           ::= { ifMauEntry 5 }\n    \
    \   ifMauMediaAvailableStateExits OBJECT-TYPE\n           SYNTAX      Counter32\n\
    \           MAX-ACCESS  read-only\n           STATUS      current\n          \
    \ DESCRIPTION \"A count of the number of times that\n                       ifMauMediaAvailable\
    \ for this MAU instance leaves\n                       the state available(3).\n\
    \                       Discontinuities in the value of this counter can\n   \
    \                    occur at re-initialization of the management\n          \
    \             system, and at other times as indicated by the\n               \
    \        value of ifCounterDiscontinuityTime.\"\n           REFERENCE   \"[IEEE\
    \ 802.3 Std], 30.5.1.1.5,\n                       aLoseMediaCounter.\n       \
    \                RFC 2863, ifCounterDiscontinuityTime.\"\n           ::= { ifMauEntry\
    \ 6 }\n       ifMauJabberState OBJECT-TYPE\n           SYNTAX      INTEGER {\n\
    \                           other(1),\n                           unknown(2),\n\
    \                           noJabber(3),\n                           jabbering(4)\n\
    \                       }\n           MAX-ACCESS  read-only\n           STATUS\
    \      current\n           DESCRIPTION \"The value other(1) is returned if the\
    \ jabber\n                       state is not 2, 3, or 4.  The agent MUST always\n\
    \                       return other(1) for MAU type dot3MauTypeAUI.\n       \
    \                The value unknown(2) is returned when the MAU's\n           \
    \            true state is unknown; for example, when it is\n                \
    \       being initialized.\n                       If the MAU is not jabbering\
    \ the agent returns\n                       noJabber(3).  This is the 'normal'\
    \ state.\n                       If the MAU is in jabber state the agent returns\n\
    \                       the jabbering(4) value.\"\n           REFERENCE   \"[IEEE\
    \ 802.3 Std], 30.5.1.1.6,\n                       aJabber.jabberFlag.\"\n    \
    \       ::= { ifMauEntry 7 }\n       ifMauJabberingStateEnters OBJECT-TYPE\n \
    \          SYNTAX      Counter32\n           MAX-ACCESS  read-only\n         \
    \  STATUS      current\n           DESCRIPTION \"A count of the number of times\
    \ that\n                       mauJabberState for this MAU instance enters the\n\
    \                       state jabbering(4). This counter will always\n       \
    \                indicate zero for MAUs of type dot3MauTypeAUI\n             \
    \          and those of speeds above 10Mbps.\n                       Discontinuities\
    \ in the value of this counter can\n                       occur at re-initialization\
    \ of the management\n                       system, and at other times as indicated\
    \ by the\n                       value of ifCounterDiscontinuityTime.\"\n    \
    \       REFERENCE   \"[IEEE 802.3 Std], 30.5.1.1.6,\n                       aJabber.jabberCounter.\n\
    \                       RFC 2863, ifCounterDiscontinuityTime.\"\n           ::=\
    \ { ifMauEntry 8 }\n       ifMauFalseCarriers OBJECT-TYPE\n           SYNTAX \
    \     Counter32\n           MAX-ACCESS  read-only\n           STATUS      current\n\
    \           DESCRIPTION \"A count of the number of false carrier events\n    \
    \                   during IDLE in 100BASE-X and 1000BASE-X links.\n         \
    \              For all other MAU types, this counter will\n                  \
    \     always indicate zero. This counter does not\n                       increment\
    \ at the symbol rate.\n                       It can increment after a valid carrier\n\
    \                       completion at a maximum rate of once per 100 ms\n    \
    \                   for 100BASE-X and once per 10us for 1000BASE-X\n         \
    \              until the next CarrierEvent.\n                       This counter\
    \ can roll over very quickly.  A\n                       management station is\
    \ advised to poll the\n                       ifMauHCFalseCarriers instead of\
    \ this counter in\n                       order to avoid loss of information.\n\
    \                       Discontinuities in the value of this counter can\n   \
    \                    occur at re-initialization of the management\n          \
    \             system, and at other times as indicated by the\n               \
    \        value of ifCounterDiscontinuityTime.\"\n           REFERENCE   \"[IEEE\
    \ 802.3 Std], 30.5.1.1.10, aFalseCarriers.\n                       RFC 2863, ifCounterDiscontinuityTime.\"\
    \n           ::= { ifMauEntry 9 }\n       ifMauTypeList OBJECT-TYPE\n        \
    \   SYNTAX      Integer32\n           MAX-ACCESS  read-only\n           STATUS\
    \      deprecated\n           DESCRIPTION \"********* THIS OBJECT IS DEPRECATED\
    \ **********\n                       This object has been deprecated in favour\
    \ of\n                       ifMauTypeListBits.\n                       A value\
    \ that uniquely identifies the set of\n                       possible IEEE 802.3\
    \ types that the MAU could be.\n                       The value is a sum which\
    \ initially takes the\n                       value zero.  Then, for each type\
    \ capability of\n                       this MAU, 2 raised to the power noted\
    \ below is\n                       added to the sum. For example, a MAU which\
    \ has\n                       the capability to be only 10BASE-T would have a\n\
    \                       value of 512 (2**9).  In contrast, a MAU which\n     \
    \                  supports both 10Base-T (full duplex) and\n                \
    \       100BASE-TX (full duplex) would have a value of\n                     \
    \  ((2**11) + (2**16)) or 67584.\n                       The powers of 2 assigned\
    \ to the capabilities are\n                       these:\n                   \
    \    Power  Capability\n                         0      other or unknown\n   \
    \                      1      AUI\n                         2      10BASE-5\n\
    \                         3      FOIRL\n                         4      10BASE-2\n\
    \                         5      10BASE-T duplex mode unknown\n              \
    \           6      10BASE-FP\n                         7      10BASE-FB\n    \
    \                     8      10BASE-FL duplex mode unknown\n                 \
    \        9      10BROAD36\n                        10      10BASE-T  half duplex\
    \ mode\n                        11      10BASE-T  full duplex mode\n         \
    \               12      10BASE-FL half duplex mode\n                        13\
    \      10BASE-FL full duplex mode\n                        14      100BASE-T4\n\
    \                        15      100BASE-TX half duplex mode\n               \
    \         16      100BASE-TX full duplex mode\n                        17    \
    \  100BASE-FX half duplex mode\n                        18      100BASE-FX full\
    \ duplex mode\n                        19      100BASE-T2 half duplex mode\n \
    \                       20      100BASE-T2 full duplex mode\n                \
    \       If auto-negotiation is present on this MAU, this\n                   \
    \    object will map to ifMauAutoNegCapability.\"\n           ::= { ifMauEntry\
    \ 10 }\n       ifMauDefaultType OBJECT-TYPE\n           SYNTAX      AutonomousType\n\
    \           MAX-ACCESS  read-write\n           STATUS      current\n         \
    \  DESCRIPTION \"This object identifies the default\n                       administrative\
    \ baseband MAU type, to be used in\n                       conjunction with the\
    \ operational MAU type\n                       denoted by ifMauType.\n       \
    \                The set of possible values for this object is\n             \
    \          the same as the set defined for the ifMauType\n                   \
    \    object.\n                       This object represents the\n            \
    \           administratively-configured type of the MAU.  If\n               \
    \        auto-negotiation is not enabled or is not\n                       implemented\
    \ for this MAU, the value of this\n                       object determines the\
    \ operational type of the\n                       MAU.  In this case, a set to\
    \ this object will\n                       force the MAU into the specified operating\
    \ mode.\n                       If auto-negotiation is implemented and enabled\n\
    \                       for this MAU, the operational type of the MAU\n      \
    \                 is determined by auto-negotiation, and the value\n         \
    \              of this object denotes the type to which the MAU\n            \
    \           will automatically revert if/when\n                       auto-negotiation\
    \ is later disabled.\n                       NOTE TO IMPLEMENTORS:  It may be\
    \ necessary to\n                       provide for underlying hardware implementations\n\
    \                       which do not follow the exact behavior specified\n   \
    \                    above.  In particular, when\n                       ifMauAutoNegAdminStatus\
    \ transitions from enabled\n                       to disabled, the agent implementation\
    \ MUST\n                       ensure that the operational type of the MAU (as\n\
    \                       reported by ifMauType) correctly transitions to\n    \
    \                   the value specified by this object, rather than\n        \
    \               continuing to operate at the value earlier\n                 \
    \      determined by the auto-negotiation function.\"\n           REFERENCE  \
    \ \"[IEEE 802.3 Std], 30.5.1.1.1, aMAUID, and\n                       22.2.4.1.4.\"\
    \n           ::= { ifMauEntry 11 }\n       ifMauAutoNegSupported OBJECT-TYPE\n\
    \           SYNTAX      TruthValue\n           MAX-ACCESS  read-only\n       \
    \    STATUS      current\n           DESCRIPTION \"This object indicates whether\
    \ or not\n                       auto-negotiation is supported on this MAU.\"\n\
    \           ::= { ifMauEntry 12 }\n       ifMauTypeListBits OBJECT-TYPE\n    \
    \       SYNTAX      BITS {\n               bOther(0),         -- other or unknown\n\
    \               bAUI(1),           -- AUI\n               b10base5(2),       --\
    \ 10BASE-5\n               bFoirl(3),         -- FOIRL\n               b10base2(4),\
    \       -- 10BASE-2\n               b10baseT(5),       -- 10BASE-T duplex mode\
    \ unknown\n               b10baseFP(6),      -- 10BASE-FP\n               b10baseFB(7),\
    \      -- 10BASE-FB\n               b10baseFL(8),      -- 10BASE-FL duplex mode\
    \ unknown\n               b10broad36(9),     -- 10BROAD36\n               b10baseTHD(10),\
    \    -- 10BASE-T  half duplex mode\n               b10baseTFD(11),    -- 10BASE-T\
    \  full duplex mode\n               b10baseFLHD(12),   -- 10BASE-FL half duplex\
    \ mode\n               b10baseFLFD(13),   -- 10BASE-FL full duplex mode\n    \
    \           b100baseT4(14),    -- 100BASE-T4\n               b100baseTXHD(15),\
    \  -- 100BASE-TX half duplex mode\n               b100baseTXFD(16),  -- 100BASE-TX\
    \ full duplex mode\n               b100baseFXHD(17),  -- 100BASE-FX half duplex\
    \ mode\n               b100baseFXFD(18),  -- 100BASE-FX full duplex mode\n   \
    \            b100baseT2HD(19),  -- 100BASE-T2 half duplex mode\n             \
    \  b100baseT2FD(20),  -- 100BASE-T2 full duplex mode\n               b1000baseXHD(21),\
    \  -- 1000BASE-X half duplex mode\n               b1000baseXFD(22),  -- 1000BASE-X\
    \ full duplex mode\n               b1000baseLXHD(23), -- 1000BASE-LX half duplex\
    \ mode\n               b1000baseLXFD(24), -- 1000BASE-LX full duplex mode\n  \
    \             b1000baseSXHD(25), -- 1000BASE-SX half duplex mode\n           \
    \    b1000baseSXFD(26), -- 1000BASE-SX full duplex mode\n               b1000baseCXHD(27),\
    \ -- 1000BASE-CX half duplex mode\n               b1000baseCXFD(28), -- 1000BASE-CX\
    \ full duplex mode\n               b1000baseTHD(29),  -- 1000BASE-T half duplex\
    \ mode\n               b1000baseTFD(30),  -- 1000BASE-T full duplex mode\n   \
    \            b10GbaseX(31),     -- 10GBASE-X\n               b10GbaseLX4(32),\
    \   -- 10GBASE-LX4\n               b10GbaseR(33),     -- 10GBASE-R\n         \
    \      b10GbaseER(34),    -- 10GBASE-ER\n               b10GbaseLR(35),    --\
    \ 10GBASE-LR\n               b10GbaseSR(36),    -- 10GBASE-SR\n              \
    \ b10GbaseW(37),     -- 10GBASE-W\n               b10GbaseEW(38),    -- 10GBASE-EW\n\
    \               b10GbaseLW(39),    -- 10GBASE-LW\n               b10GbaseSW(40)\
    \     -- 10GBASE-SW\n           }\n           MAX-ACCESS  read-only\n        \
    \   STATUS      current\n           DESCRIPTION \"A value that uniquely identifies\
    \ the set of\n                       possible IEEE 802.3 types that the MAU could\
    \ be.\n                       If auto-negotiation is present on this MAU, this\n\
    \                       object will map to ifMauAutoNegCapabilityBits.\n     \
    \                  Note that this MAU may be capable of operating\n          \
    \             as a MAU type that is beyond the scope of this\n               \
    \        MIB.  This is indicated by returning the\n                       bit\
    \ value bOther in addition to any bit values\n                       for capabilities\
    \ that are listed above.\"\n           ::= { ifMauEntry 13 }\n       ifMauHCFalseCarriers\
    \ OBJECT-TYPE\n           SYNTAX      Counter64\n           MAX-ACCESS  read-only\n\
    \           STATUS      current\n           DESCRIPTION \"A count of the number\
    \ of false carrier events\n                       during IDLE in 100BASE-X and\
    \ 1000BASE-X links.\n                       For all other MAU types, this counter\
    \ will\n                       always indicate zero. This counter does not\n \
    \                      increment at the symbol rate.\n                       This\
    \ counter is a 64 bit version of\n                       ifMauFalseCarriers. \
    \ Since the 32 bit version of\n                       this counter can roll over\
    \ very quickly,\n                       management stations are advised to poll\
    \ the\n                       64 bit version instead in order to avoid loss\n\
    \                       of information.\n                       Discontinuities\
    \ in the value of this counter can\n                       occur at re-initialization\
    \ of the management\n                       system, and at other times as indicated\
    \ by the\n                       value of ifCounterDiscontinuityTime.\"\n    \
    \       REFERENCE   \"[IEEE 802.3 Std], 30.5.1.1.10, aFalseCarriers.\n       \
    \                RFC 2863, ifCounterDiscontinuityTime.\"\n           ::= { ifMauEntry\
    \ 14 }\n       -- The ifJackTable applies to MAUs attached to interfaces\n   \
    \    -- which have one or more external jacks (connectors).\n       ifJackTable\
    \ OBJECT-TYPE\n           SYNTAX      SEQUENCE OF IfJackEntry\n           MAX-ACCESS\
    \  not-accessible\n           STATUS      current\n           DESCRIPTION \"Information\
    \ about the external jacks attached\n                       to MAUs attached to\
    \ an interface.\"\n           ::= { dot3IfMauBasicGroup 2 }\n       ifJackEntry\
    \ OBJECT-TYPE\n           SYNTAX      IfJackEntry\n           MAX-ACCESS  not-accessible\n\
    \           STATUS      current\n           DESCRIPTION \"An entry in the table,\
    \ containing information\n                       about a particular jack.\"\n\
    \           INDEX       { ifMauIfIndex,\n                         ifMauIndex,\n\
    \                         ifJackIndex\n                       }\n           ::=\
    \ { ifJackTable 1 }\n       IfJackEntry ::=\n           SEQUENCE {\n         \
    \      ifJackIndex                         Integer32,\n               ifJackType\
    \                          JackType\n           }\n       ifJackIndex OBJECT-TYPE\n\
    \           SYNTAX      Integer32 (1..2147483647)\n           MAX-ACCESS  not-accessible\n\
    \           STATUS      current\n           DESCRIPTION \"This variable uniquely\
    \ identifies the jack\n                       described by this entry from among\
    \ other jacks\n                       attached to the same MAU.\"\n          \
    \ ::= { ifJackEntry 1 }\n       ifJackType OBJECT-TYPE\n           SYNTAX    \
    \  JackType\n           MAX-ACCESS  read-only\n           STATUS      current\n\
    \           DESCRIPTION \"The jack connector type, as it appears on the\n    \
    \                   outside of the system.\"\n           ::= { ifJackEntry 2 }\n\
    \       --\n       -- The MAU Auto-Negotiation Table\n       --\n       ifMauAutoNegTable\
    \ OBJECT-TYPE\n           SYNTAX      SEQUENCE OF IfMauAutoNegEntry\n        \
    \   MAX-ACCESS  not-accessible\n           STATUS      current\n           DESCRIPTION\
    \ \"Configuration and status objects for the\n                       auto-negotiation\
    \ function of MAUs attached to\n                       interfaces.\n         \
    \              The ifMauAutoNegTable applies to systems in\n                 \
    \      which auto-negotiation is supported on one or\n                       more\
    \ MAUs attached to interfaces.  Note that if\n                       auto-negotiation\
    \ is present and enabled, the\n                       ifMauType object reflects\
    \ the result of the\n                       auto-negotiation function.\"\n   \
    \        ::= { dot3IfMauAutoNegGroup 1 }\n       ifMauAutoNegEntry OBJECT-TYPE\n\
    \           SYNTAX      IfMauAutoNegEntry\n           MAX-ACCESS  not-accessible\n\
    \           STATUS      current\n           DESCRIPTION \"An entry in the table,\
    \ containing configuration\n                       and status information for\
    \ the auto-negotiation\n                       function of a particular MAU.\"\
    \n           INDEX       { ifMauIfIndex,\n                         ifMauIndex\n\
    \                       }\n           ::= { ifMauAutoNegTable 1 }\n       IfMauAutoNegEntry\
    \ ::=\n           SEQUENCE {\n               ifMauAutoNegAdminStatus         \
    \    INTEGER,\n               ifMauAutoNegRemoteSignaling         INTEGER,\n \
    \              ifMauAutoNegConfig                  INTEGER,\n               ifMauAutoNegCapability\
    \              Integer32,\n               ifMauAutoNegCapAdvertised          \
    \ Integer32,\n               ifMauAutoNegCapReceived             Integer32,\n\
    \               ifMauAutoNegRestart                 INTEGER,\n               ifMauAutoNegCapabilityBits\
    \          BITS,\n               ifMauAutoNegCapAdvertisedBits       BITS,\n \
    \              ifMauAutoNegCapReceivedBits         BITS,\n               ifMauAutoNegRemoteFaultAdvertised\
    \   INTEGER,\n               ifMauAutoNegRemoteFaultReceived     INTEGER\n   \
    \        }\n       ifMauAutoNegAdminStatus OBJECT-TYPE\n           SYNTAX    \
    \  INTEGER {\n                           enabled(1),\n                       \
    \    disabled(2)\n                       }\n           MAX-ACCESS  read-write\n\
    \           STATUS      current\n           DESCRIPTION \"Setting this object\
    \ to enabled(1) will cause\n                       the interface which has the\
    \ auto-negotiation\n                       signaling ability to be enabled.\n\
    \                       If the value of this object is disabled(2) then\n    \
    \                   the interface will act as it would if it had no\n        \
    \               auto-negotiation signaling.  Under these\n                   \
    \    conditions, an IEEE 802.3 MAU will immediately\n                       be\
    \ forced to the state indicated by the value of\n                       the object\
    \ ifMauDefaultType.\n                       NOTE TO IMPLEMENTORS:  When\n    \
    \                   ifMauAutoNegAdminStatus transitions from enabled\n       \
    \                to disabled, the agent implementation MUST\n                \
    \       ensure that the operational type of the MAU (as\n                    \
    \   reported by ifMauType) correctly transitions to\n                       the\
    \ value specified by the ifMauDefaultType\n                       object, rather\
    \ than continuing to operate at the\n                       value earlier determined\
    \ by the auto-negotiation\n                       function.\"\n           REFERENCE\
    \   \"[IEEE 802.3 Std], 30.6.1.1.2,\n                       aAutoNegAdminState\
    \ and 30.6.1.2.2,\n                       acAutoNegAdminControl.\"\n         \
    \  ::= { ifMauAutoNegEntry 1 }\n       ifMauAutoNegRemoteSignaling OBJECT-TYPE\n\
    \           SYNTAX      INTEGER {\n                           detected(1),\n \
    \                          notdetected(2)\n                       }\n        \
    \   MAX-ACCESS  read-only\n           STATUS      current\n           DESCRIPTION\
    \ \"A value indicating whether the remote end of\n                       the link\
    \ is using auto-negotiation signaling. It\n                       takes the value\
    \ detected(1) if and only if,\n                       during the previous link\
    \ negotiation, FLP Bursts\n                       were received.\"\n         \
    \  REFERENCE   \"[IEEE 802.3 Std], 30.6.1.1.3,\n                       aAutoNegRemoteSignaling.\"\
    \n           ::= { ifMauAutoNegEntry 2 }\n       ifMauAutoNegConfig OBJECT-TYPE\n\
    \           SYNTAX      INTEGER {\n                           other(1),\n    \
    \                       configuring(2),\n                           complete(3),\n\
    \                           disabled(4),\n                           parallelDetectFail(5)\n\
    \                       }\n           MAX-ACCESS  read-only\n           STATUS\
    \      current\n           DESCRIPTION \"A value indicating the current status\
    \ of the\n                       auto-negotiation process.  The enumeration\n\
    \                       parallelDetectFail(5) maps to a failure in\n         \
    \              parallel detection as defined in 28.2.3.1 of\n                \
    \       [IEEE 802.3 Std].\"\n           REFERENCE   \"[IEEE 802.3 Std], 30.6.1.1.4,\n\
    \                       aAutoNegAutoConfig.\"\n           ::= { ifMauAutoNegEntry\
    \ 4 }\n       ifMauAutoNegCapability OBJECT-TYPE\n           SYNTAX      Integer32\n\
    \           MAX-ACCESS  read-only\n           STATUS      deprecated\n       \
    \    DESCRIPTION \"********* THIS OBJECT IS DEPRECATED **********\n          \
    \             This object has been deprecated in favour of\n                 \
    \      ifMauAutoNegCapabilityBits.\n                       A value that uniquely\
    \ identifies the set of\n                       capabilities of the local auto-negotiation\n\
    \                       entity.  The value is a sum which initially\n        \
    \               takes the value zero.  Then, for each capability\n           \
    \            of this interface, 2 raised to the power noted\n                \
    \       below is added to the sum. For example, an\n                       interface\
    \ which has the capability to support\n                       only 100Base-TX\
    \ half duplex would have a value\n                       of 32768 (2**15).  In\
    \ contrast, an interface\n                       which supports both 100Base-TX\
    \ half duplex and\n                       and 100Base-TX full duplex would have\
    \ a value of\n                       98304 ((2**15) + (2**16)).\n            \
    \           The powers of 2 assigned to the capabilities are\n               \
    \        these:\n                       Power   Capability\n                 \
    \        0       other or unknown\n                        (1-9)    (reserved)\n\
    \                        10       10BASE-T  half duplex mode\n               \
    \         11       10BASE-T  full duplex mode\n                        12    \
    \   (reserved)\n                        13       (reserved)\n                \
    \        14       100BASE-T4\n                        15       100BASE-TX half\
    \ duplex mode\n                        16       100BASE-TX full duplex mode\n\
    \                        17       (reserved)\n                        18     \
    \  (reserved)\n                        19      100BASE-T2 half duplex mode\n \
    \                       20      100BASE-T2 full duplex mode\n                \
    \       Note that interfaces that support this MIB may\n                     \
    \  have capabilities that extend beyond the scope\n                       of this\
    \ MIB.\"\n           REFERENCE   \"[IEEE 802.3 Std], 30.6.1.1.5,\n           \
    \            aAutoNegLocalTechnologyAbility.\"\n           ::= { ifMauAutoNegEntry\
    \ 5 }\n       ifMauAutoNegCapAdvertised OBJECT-TYPE\n           SYNTAX      Integer32\n\
    \           MAX-ACCESS  read-write\n           STATUS      deprecated\n      \
    \     DESCRIPTION \"********* THIS OBJECT IS DEPRECATED **********\n         \
    \              This object has been deprecated in favour of\n                \
    \       ifMauAutoNegCapAdvertisedBits.\n                       A value that uniquely\
    \ identifies the set of\n                       capabilities advertised by the\
    \ local\n                       auto-negotiation entity. Refer to\n          \
    \             ifMauAutoNegCapability for a description of the\n              \
    \         possible values of this object.\n                       Capabilities\
    \ in this object that are not\n                       available in ifMauAutoNegCapability\
    \ cannot be\n                       enabled.\"\n           REFERENCE   \"[IEEE\
    \ 802.3 Std], 30.6.1.1.6,\n                       aAutoNegAdvertisedTechnologyAbility.\"\
    \n           ::= { ifMauAutoNegEntry 6 }\n       ifMauAutoNegCapReceived OBJECT-TYPE\n\
    \           SYNTAX      Integer32\n           MAX-ACCESS  read-only\n        \
    \   STATUS      deprecated\n           DESCRIPTION \"********* THIS OBJECT IS\
    \ DEPRECATED **********\n                       This object has been deprecated\
    \ in favour of\n                       ifMauAutoNegCapReceivedBits.\n        \
    \               A value that uniquely identifies the set of\n                \
    \       capabilities received from the remote\n                       auto-negotiation\
    \ entity. Refer to\n                       ifMauAutoNegCapability for a description\
    \ of the\n                       possible values of this object.\n           \
    \            Note that interfaces that support this MIB may\n                \
    \       be attached to remote auto-negotiation entities\n                    \
    \   which have capabilities beyond the scope of this\n                       MIB.\"\
    \n           REFERENCE   \"[IEEE 802.3 Std], 30.6.1.1.7,\n                   \
    \    aAutoNegReceivedTechnologyAbility.\"\n           ::= { ifMauAutoNegEntry\
    \ 7 }\n       ifMauAutoNegRestart OBJECT-TYPE\n           SYNTAX      INTEGER\
    \ {\n                           restart(1),\n                           norestart(2)\n\
    \                       }\n           MAX-ACCESS  read-write\n           STATUS\
    \      current\n           DESCRIPTION \"If the value of this object is set to\n\
    \                       restart(1) then this will force auto-negotiation\n   \
    \                    to begin link renegotiation. If auto-negotiation\n      \
    \                 signaling is disabled, a write to this object\n            \
    \           has no effect.\n                       Setting the value of this object\
    \ to norestart(2)\n                       has no effect.\"\n           REFERENCE\
    \   \"[IEEE 802.3 Std], 30.6.1.2.1,\n                       acAutoNegRestartAutoConfig.\"\
    \n           ::= { ifMauAutoNegEntry 8 }\n       ifMauAutoNegCapabilityBits OBJECT-TYPE\n\
    \           SYNTAX      BITS {\n               bOther(0),        -- other or unknown\n\
    \               b10baseT(1),      -- 10BASE-T  half duplex mode\n            \
    \   b10baseTFD(2),    -- 10BASE-T  full duplex mode\n               b100baseT4(3),\
    \    -- 100BASE-T4\n               b100baseTX(4),    -- 100BASE-TX half duplex\
    \ mode\n               b100baseTXFD(5),  -- 100BASE-TX full duplex mode\n    \
    \           b100baseT2(6),    -- 100BASE-T2 half duplex mode\n               b100baseT2FD(7),\
    \  -- 100BASE-T2 full duplex mode\n               bfdxPause(8),     -- PAUSE for\
    \ full-duplex links\n               bfdxAPause(9),    -- Asymmetric PAUSE for\
    \ full-duplex\n                                 --     links\n               bfdxSPause(10),\
    \   -- Symmetric PAUSE for full-duplex\n                                 --  \
    \   links\n               bfdxBPause(11),   -- Asymmetric and Symmetric PAUSE\
    \ for\n                                 --     full-duplex links\n           \
    \    b1000baseX(12),   -- 1000BASE-X, -LX, -SX, -CX half\n                   \
    \              --     duplex mode\n               b1000baseXFD(13), -- 1000BASE-X,\
    \ -LX, -SX, -CX full\n                                 --     duplex mode\n  \
    \             b1000baseT(14),   -- 1000BASE-T half duplex mode\n             \
    \  b1000baseTFD(15)  -- 1000BASE-T full duplex mode\n           }\n          \
    \ MAX-ACCESS  read-only\n           STATUS      current\n           DESCRIPTION\
    \ \"A value that uniquely identifies the set of\n                       capabilities\
    \ of the local auto-negotiation\n                       entity.  Note that interfaces\
    \ that support this\n                       MIB may have capabilities that extend\
    \ beyond the\n                       scope of this MIB.\n                    \
    \   Note that the local auto-negotiation entity may\n                       support\
    \ some capabilities beyond the scope of\n                       this MIB.  This\
    \ is indicated by returning the\n                       bit value bOther in addition\
    \ to any bit values\n                       for capabilities that are listed above.\"\
    \n           REFERENCE   \"[IEEE 802.3 Std], 30.6.1.1.5,\n                   \
    \    aAutoNegLocalTechnologyAbility.\"\n           ::= { ifMauAutoNegEntry 9 }\n\
    \       ifMauAutoNegCapAdvertisedBits OBJECT-TYPE\n           SYNTAX      BITS\
    \ {\n               bOther(0),        -- other or unknown\n               b10baseT(1),\
    \      -- 10BASE-T  half duplex mode\n               b10baseTFD(2),    -- 10BASE-T\
    \  full duplex mode\n               b100baseT4(3),    -- 100BASE-T4\n        \
    \       b100baseTX(4),    -- 100BASE-TX half duplex mode\n               b100baseTXFD(5),\
    \  -- 100BASE-TX full duplex mode\n               b100baseT2(6),    -- 100BASE-T2\
    \ half duplex mode\n               b100baseT2FD(7),  -- 100BASE-T2 full duplex\
    \ mode\n               bFdxPause(8),     -- PAUSE for full-duplex links\n    \
    \           bFdxAPause(9),    -- Asymmetric PAUSE for full-duplex\n          \
    \                       --     links\n               bFdxSPause(10),   -- Symmetric\
    \ PAUSE for full-duplex\n                                 --     links\n     \
    \          bFdxBPause(11),   -- Asymmetric and Symmetric PAUSE for\n         \
    \                        --     full-duplex links\n               b1000baseX(12),\
    \   -- 1000BASE-X, -LX, -SX, -CX half\n                                 --   \
    \  duplex mode\n               b1000baseXFD(13), -- 1000BASE-X, -LX, -SX, -CX\
    \ full\n                                 --     duplex mode\n               b1000baseT(14),\
    \   -- 1000BASE-T half duplex mode\n               b1000baseTFD(15)  -- 1000BASE-T\
    \ full duplex mode\n           }\n           MAX-ACCESS  read-write\n        \
    \   STATUS      current\n           DESCRIPTION \"A value that uniquely identifies\
    \ the set of\n                       capabilities advertised by the local\n  \
    \                     auto-negotiation entity.\n                       Capabilities\
    \ in this object that are not\n                       available in ifMauAutoNegCapabilityBits\
    \ cannot\n                       be enabled.\n                       Note that\
    \ the local auto-negotiation entity may\n                       advertise some\
    \ capabilities beyond the scope of\n                       this MIB.  This is\
    \ indicated by returning the\n                       bit value bOther in addition\
    \ to any bit values\n                       for capabilities that are listed above.\"\
    \n           REFERENCE   \"[IEEE 802.3 Std], 30.6.1.1.6,\n                   \
    \    aAutoNegAdvertisedTechnologyAbility.\"\n           ::= { ifMauAutoNegEntry\
    \ 10 }\n       ifMauAutoNegCapReceivedBits OBJECT-TYPE\n           SYNTAX    \
    \  BITS {\n                bOther(0),        -- other or unknown\n           \
    \     b10baseT(1),      -- 10BASE-T  half duplex mode\n                b10baseTFD(2),\
    \    -- 10BASE-T  full duplex mode\n                b100baseT4(3),    -- 100BASE-T4\n\
    \                b100baseTX(4),    -- 100BASE-TX half duplex mode\n          \
    \      b100baseTXFD(5),  -- 100BASE-TX full duplex mode\n                b100baseT2(6),\
    \    -- 100BASE-T2 half duplex mode\n                b100baseT2FD(7),  -- 100BASE-T2\
    \ full duplex mode\n                bFdxPause(8),     -- PAUSE for full-duplex\
    \ links\n                bFdxAPause(9),    -- Asymmetric PAUSE for full-duplex\n\
    \                                  --     links\n                bFdxSPause(10),\
    \   -- Symmetric PAUSE for full-duplex\n                                  -- \
    \    links\n                bFdxBPause(11),   -- Asymmetric and Symmetric PAUSE\
    \ for\n                                  --     full-duplex links\n          \
    \      b1000baseX(12),   -- 1000BASE-X, -LX, -SX, -CX half\n                 \
    \                 --     duplex mode\n                b1000baseXFD(13), -- 1000BASE-X,\
    \ -LX, -SX, -CX full\n                                  --     duplex mode\n \
    \               b1000baseT(14),   -- 1000BASE-T half duplex mode\n           \
    \     b1000baseTFD(15)  -- 1000BASE-T full duplex mode\n           }\n       \
    \    MAX-ACCESS  read-only\n           STATUS      current\n           DESCRIPTION\
    \ \"A value that uniquely identifies the set of\n                       capabilities\
    \ received from the remote\n                       auto-negotiation entity.\n\
    \                       Note that interfaces that support this MIB may\n     \
    \                  be attached to remote auto-negotiation entities\n         \
    \              which have capabilities beyond the scope of this\n            \
    \           MIB.  This is indicated by returning the bit\n                   \
    \    value bOther in addition to any bit values for\n                       capabilities\
    \ that are listed above.\"\n           REFERENCE   \"[IEEE 802.3 Std], 30.6.1.1.7,\n\
    \                       aAutoNegReceivedTechnologyAbility.\"\n           ::= {\
    \ ifMauAutoNegEntry 11 }\n       ifMauAutoNegRemoteFaultAdvertised OBJECT-TYPE\n\
    \           SYNTAX      INTEGER {\n                           noError(1),\n  \
    \                         offline(2),\n                           linkFailure(3),\n\
    \                           autoNegError(4)\n                       }\n      \
    \     MAX-ACCESS  read-write\n           STATUS      current\n           DESCRIPTION\
    \ \"A value that identifies any local fault\n                       indications\
    \ that this MAU has detected and will\n                       advertise at the\
    \ next auto-negotiation\n                       interaction for 1000Mbps MAUs.\"\
    \n           REFERENCE   \"[IEEE 802.3 Std], 30.6.1.1.6,\n                   \
    \    aAutoNegAdvertisedTechnologyAbility.\"\n           ::= { ifMauAutoNegEntry\
    \ 12 }\n       ifMauAutoNegRemoteFaultReceived OBJECT-TYPE\n           SYNTAX\
    \      INTEGER {\n                           noError(1),\n                   \
    \        offline(2),\n                           linkFailure(3),\n           \
    \                autoNegError(4)\n                       }\n           MAX-ACCESS\
    \  read-only\n           STATUS      current\n           DESCRIPTION \"A value\
    \ that identifies any fault indications\n                       received from\
    \ the far end of a link by the\n                       local auto-negotiation\
    \ entity for 1000Mbps\n                       MAUs.\"\n           REFERENCE  \
    \ \"[IEEE 802.3 Std], 30.6.1.1.7,\n                       aAutoNegReceivedTechnologyAbility.\"\
    \n           ::= { ifMauAutoNegEntry 13 }\n       --\n       -- The Basic Broadband\
    \ MAU Table\n       --\n       broadMauBasicTable OBJECT-TYPE\n           SYNTAX\
    \      SEQUENCE OF BroadMauBasicEntry\n           MAX-ACCESS  not-accessible\n\
    \           STATUS      deprecated\n           DESCRIPTION \"********* THIS OBJECT\
    \ IS DEPRECATED **********\n                       This entire table has been\
    \ deprecated.  There\n                       have been no reported implementations\
    \ of this\n                       table, and it is unlikely that there ever will\n\
    \                       be.  IEEE recommends that broadband MAU types\n      \
    \                 should not be used for new installations.\n                \
    \       Table of descriptive and status information\n                       about\
    \ the broadband MAUs connected to\n                       interfaces.\"\n    \
    \       ::= { dot3BroadMauBasicGroup 1 }\n       broadMauBasicEntry OBJECT-TYPE\n\
    \           SYNTAX      BroadMauBasicEntry\n           MAX-ACCESS  not-accessible\n\
    \           STATUS      deprecated\n           DESCRIPTION \"********* THIS OBJECT\
    \ IS DEPRECATED **********\n                       An entry in the table, containing\
    \ information\n                       about a single broadband MAU.\"\n      \
    \     INDEX       { broadMauIfIndex,\n                         broadMauIndex\n\
    \                       }\n           ::= { broadMauBasicTable 1 }\n       BroadMauBasicEntry\
    \ ::=\n           SEQUENCE {\n               broadMauIfIndex                 \
    \    InterfaceIndex,\n               broadMauIndex                       Integer32,\n\
    \               broadMauXmtRcvSplitType             INTEGER,\n               broadMauXmtCarrierFreq\
    \              Integer32,\n               broadMauTranslationFreq            \
    \ Integer32\n           }\n       broadMauIfIndex OBJECT-TYPE\n           SYNTAX\
    \      InterfaceIndex\n           MAX-ACCESS  read-only  -- read-only since originally\
    \ an\n                                  -- SMIv1 index\n           STATUS    \
    \  deprecated\n           DESCRIPTION \"********* THIS OBJECT IS DEPRECATED **********\n\
    \                       This variable uniquely identifies the interface\n    \
    \                   to which the MAU described by this entry is\n            \
    \           connected.\"\n           REFERENCE   \"Reference RFC 2863, ifIndex.\"\
    \n           ::= { broadMauBasicEntry 1 }\n       broadMauIndex OBJECT-TYPE\n\
    \           SYNTAX      Integer32 (1..2147483647)\n           MAX-ACCESS  read-only\
    \  -- read-only since originally an\n                                  -- SMIv1\
    \ index\n           STATUS      deprecated\n           DESCRIPTION \"*********\
    \ THIS OBJECT IS DEPRECATED **********\n                       This variable uniquely\
    \ identifies the MAU\n                       connected to interface broadMauIfIndex\
    \ that is\n                       described by this entry.\"\n           REFERENCE\
    \   \"[IEEE 802.3 Std], 30.5.1.1.1, aMAUID.\"\n           ::= { broadMauBasicEntry\
    \ 2 }\n       broadMauXmtRcvSplitType OBJECT-TYPE\n           SYNTAX      INTEGER\
    \ {\n                           other(1),\n                           single(2),\n\
    \                           dual(3)\n                       }\n           MAX-ACCESS\
    \  read-only\n           STATUS      deprecated\n           DESCRIPTION \"*********\
    \ THIS OBJECT IS DEPRECATED **********\n                       This object indicates\
    \ the type of frequency\n                       multiplexing/cabling system used\
    \ to separate the\n                       transmit and receive paths for the 10BROAD36\n\
    \                       MAU.\n                       The value other(1) is returned\
    \ if the split type\n                       is not either single or dual.\n  \
    \                     The value single(2) indicates a single cable\n         \
    \              system.  The value dual(3) indicates a dual\n                 \
    \      cable system, offset normally zero.\"\n           REFERENCE   \"[IEEE 802.3\
    \ Std], 30.5.1.1.8,\n                       aBbMAUXmitRcvSplitType.\"\n      \
    \     ::= { broadMauBasicEntry 3 }\n       broadMauXmtCarrierFreq OBJECT-TYPE\n\
    \           SYNTAX      Integer32\n           MAX-ACCESS  read-only\n        \
    \   STATUS      deprecated\n           DESCRIPTION \"********* THIS OBJECT IS\
    \ DEPRECATED **********\n                       This variable indicates the transmit\
    \ carrier\n                       frequency of the 10BROAD36 MAU in MHz/4; that\n\
    \                       is, in units of 250 kHz.\"\n           REFERENCE   \"\
    [IEEE 802.3 Std], 30.5.1.1.9,\n                       aBroadbandFrequencies.xmitCarrierFrequency.\"\
    \n           ::= { broadMauBasicEntry 4 }\n       broadMauTranslationFreq OBJECT-TYPE\n\
    \           SYNTAX      Integer32\n           MAX-ACCESS  read-only\n        \
    \   STATUS      deprecated\n           DESCRIPTION \"********* THIS OBJECT IS\
    \ DEPRECATED **********\n                       This variable indicates the translation\
    \ offset\n                       frequency of the 10BROAD36 MAU in MHz/4; that\n\
    \                       is, in units of 250 kHz.\"\n           REFERENCE   \"\
    [IEEE 802.3 Std], 30.5.1.1.9,\n                       aBroadbandFrequencies.translationFrequency.\"\
    \n           ::= { broadMauBasicEntry 5 }\n       -- Notifications for use by\
    \ 802.3 MAUs\n       snmpDot3MauTraps OBJECT IDENTIFIER ::= { snmpDot3MauMgt 0\
    \ }\n       rpMauJabberTrap NOTIFICATION-TYPE\n           OBJECTS     { rpMauJabberState\
    \ }\n           STATUS      current\n           DESCRIPTION \"This trap is sent\
    \ whenever a managed repeater\n                       MAU enters the jabber state.\n\
    \                       The agent MUST throttle the generation of\n          \
    \             consecutive rpMauJabberTraps so that there is at\n             \
    \          least a five-second gap between them.\"\n           REFERENCE   \"\
    [IEEE 802.3 Mgt], 30.5.1.3.1, nJabber\n                       notification.\"\n\
    \           ::= { snmpDot3MauTraps 1 }\n       ifMauJabberTrap NOTIFICATION-TYPE\n\
    \           OBJECTS     { ifMauJabberState }\n           STATUS      current\n\
    \           DESCRIPTION \"This trap is sent whenever a managed interface\n   \
    \                    MAU enters the jabber state.\n                       The\
    \ agent MUST throttle the generation of\n                       consecutive ifMauJabberTraps\
    \ so that there is at\n                       least a five-second gap between\
    \ them.\"\n           REFERENCE   \"[IEEE 802.3 Mgt], 30.5.1.3.1, nJabber\n  \
    \                     notification.\"\n           ::= { snmpDot3MauTraps 2 }\n\
    \       -- Conformance information\n       mauModConf\n               OBJECT IDENTIFIER\
    \ ::= { mauMod 1 }\n         mauModCompls\n               OBJECT IDENTIFIER ::=\
    \ { mauModConf 1 }\n         mauModObjGrps\n               OBJECT IDENTIFIER ::=\
    \ { mauModConf 2 }\n         mauModNotGrps\n               OBJECT IDENTIFIER ::=\
    \ { mauModConf 3 }\n       -- Object groups\n       mauRpGrpBasic OBJECT-GROUP\n\
    \           OBJECTS     { rpMauGroupIndex,\n                         rpMauPortIndex,\n\
    \                         rpMauIndex,\n                         rpMauType,\n \
    \                        rpMauStatus,\n                         rpMauMediaAvailable,\n\
    \                         rpMauMediaAvailableStateExits,\n                   \
    \      rpMauJabberState,\n                         rpMauJabberingStateEnters\n\
    \                       }\n           STATUS      current\n           DESCRIPTION\
    \ \"Basic conformance group for MAUs attached to\n                       repeater\
    \ ports.  This group is also the\n                       conformance specification\
    \ for RFC 1515\n                       implementations.\"\n           ::= { mauModObjGrps\
    \ 1 }\n       mauRpGrp100Mbs OBJECT-GROUP\n           OBJECTS     { rpMauFalseCarriers\
    \ }\n           STATUS      current\n           DESCRIPTION \"Conformance group\
    \ for MAUs attached to\n                       repeater ports with 100 Mb/s or\
    \ greater\n                       capability.\"\n           ::= { mauModObjGrps\
    \ 2 }\n       mauRpGrpJack OBJECT-GROUP\n           OBJECTS     { rpJackType }\n\
    \           STATUS      current\n           DESCRIPTION \"Conformance group for\
    \ MAUs attached to\n                       repeater ports with managed jacks.\"\
    \n           ::= { mauModObjGrps 3 }\n       mauIfGrpBasic OBJECT-GROUP\n    \
    \       OBJECTS     { ifMauIfIndex,\n                         ifMauIndex,\n  \
    \                       ifMauType,\n                         ifMauStatus,\n  \
    \                       ifMauMediaAvailable,\n                         ifMauMediaAvailableStateExits,\n\
    \                         ifMauJabberState,\n                         ifMauJabberingStateEnters\n\
    \                       }\n           STATUS      current\n           DESCRIPTION\
    \ \"Basic conformance group for MAUs attached to\n                       interfaces.\
    \  This group also provides a\n                       conformance specification\
    \ for RFC 1515\n                       implementations.\"\n           ::= { mauModObjGrps\
    \ 4 }\n       mauIfGrp100Mbs OBJECT-GROUP\n           OBJECTS     { ifMauFalseCarriers,\n\
    \                         ifMauTypeList,\n                         ifMauDefaultType,\n\
    \                         ifMauAutoNegSupported\n                       }\n  \
    \         STATUS      deprecated\n           DESCRIPTION \"********* THIS GROUP\
    \ IS DEPRECATED **********\n                       Conformance group for MAUs\
    \ attached to\n                       interfaces with 100 Mb/s capability.\n \
    \                      This object group has been deprecated in favor\n      \
    \                 of mauIfGrpHighCapacity.\"\n           ::= { mauModObjGrps 5\
    \ }\n       mauIfGrpJack OBJECT-GROUP\n           OBJECTS     { ifJackType }\n\
    \           STATUS      current\n           DESCRIPTION \"Conformance group for\
    \ MAUs attached to\n                       interfaces with managed jacks.\"\n\
    \           ::= { mauModObjGrps 6 }\n       mauIfGrpAutoNeg OBJECT-GROUP\n   \
    \        OBJECTS     { ifMauAutoNegAdminStatus,\n                         ifMauAutoNegRemoteSignaling,\n\
    \                         ifMauAutoNegConfig,\n                         ifMauAutoNegCapability,\n\
    \                         ifMauAutoNegCapAdvertised,\n                       \
    \  ifMauAutoNegCapReceived,\n                         ifMauAutoNegRestart\n  \
    \                     }\n           STATUS      deprecated\n           DESCRIPTION\
    \ \"********* THIS GROUP IS DEPRECATED **********\n                       Conformance\
    \ group for MAUs attached to\n                       interfaces with managed auto-negotiation.\n\
    \                       This object group has been deprecated in favor\n     \
    \                  of mauIfGrpAutoNeg2.\"\n           ::= { mauModObjGrps 7 }\n\
    \       mauBroadBasic OBJECT-GROUP\n           OBJECTS     { broadMauIfIndex,\n\
    \                         broadMauIndex,\n                         broadMauXmtRcvSplitType,\n\
    \                         broadMauXmtCarrierFreq,\n                         broadMauTranslationFreq\n\
    \                       }\n           STATUS      deprecated\n           DESCRIPTION\
    \ \"********* THIS GROUP IS DEPRECATED **********\n                       Conformance\
    \ group for broadband MAUs attached\n                       to interfaces.\n \
    \                      This object group is deprecated.  There have\n        \
    \               been no reported implementations of this group,\n            \
    \           and it was felt to be unlikely that there will\n                 \
    \      be any future implementations.\"\n           ::= { mauModObjGrps 8 }\n\
    \       mauIfGrpHighCapacity OBJECT-GROUP\n           OBJECTS     { ifMauFalseCarriers,\n\
    \                         ifMauTypeListBits,\n                         ifMauDefaultType,\n\
    \                         ifMauAutoNegSupported\n                       }\n  \
    \         STATUS      current\n           DESCRIPTION \"Conformance group for\
    \ MAUs attached to\n                       interfaces with 100 Mb/s or greater\
    \ capability.\"\n           ::= { mauModObjGrps 9 }\n       mauIfGrpAutoNeg2 OBJECT-GROUP\n\
    \           OBJECTS     { ifMauAutoNegAdminStatus,\n                         ifMauAutoNegRemoteSignaling,\n\
    \                         ifMauAutoNegConfig,\n                         ifMauAutoNegCapabilityBits,\n\
    \                         ifMauAutoNegCapAdvertisedBits,\n                   \
    \      ifMauAutoNegCapReceivedBits,\n                         ifMauAutoNegRestart\n\
    \                       }\n           STATUS      current\n           DESCRIPTION\
    \ \"Conformance group for MAUs attached to\n                       interfaces\
    \ with managed auto-negotiation.\"\n           ::= { mauModObjGrps 10 }\n    \
    \   mauIfGrpAutoNeg1000Mbps OBJECT-GROUP\n           OBJECTS     { ifMauAutoNegRemoteFaultAdvertised,\n\
    \                         ifMauAutoNegRemoteFaultReceived\n                  \
    \     }\n           STATUS      current\n           DESCRIPTION \"Conformance\
    \ group for 1000Mbps MAUs attached to\n                       interfaces with\
    \ managed auto-negotiation.\"\n           ::= { mauModObjGrps 11 }\n       mauIfGrpHCStats\
    \ OBJECT-GROUP\n           OBJECTS     { ifMauHCFalseCarriers }\n           STATUS\
    \      current\n           DESCRIPTION \"Conformance for high capacity statistics\
    \ for\n                       MAUs attached to interfaces\"\n           ::= {\
    \ mauModObjGrps 12 }\n       -- Notification groups\n       rpMauNotifications\
    \ NOTIFICATION-GROUP\n           NOTIFICATIONS { rpMauJabberTrap }\n         \
    \  STATUS      current\n           DESCRIPTION \"Notifications for repeater MAUs.\"\
    \n           ::= { mauModNotGrps 1 }\n       ifMauNotifications NOTIFICATION-GROUP\n\
    \           NOTIFICATIONS { ifMauJabberTrap }\n           STATUS      current\n\
    \           DESCRIPTION \"Notifications for interface MAUs.\"\n           ::=\
    \ { mauModNotGrps 2 }\n       -- Compliances\n       mauModRpCompl MODULE-COMPLIANCE\n\
    \           STATUS      deprecated\n           DESCRIPTION \"******** THIS COMPLIANCE\
    \ IS DEPRECATED ********\n                       Compliance for MAUs attached\
    \ to repeater\n                       ports.\n                       This compliance\
    \ is deprecated and replaced by\n                       mauModRpCompl2, which\
    \ corrects an oversight by\n                       allowing rpMauStatus to be\
    \ implemented\n                       read-only.\"\n           MODULE -- this\
    \ module\n               MANDATORY-GROUPS { mauRpGrpBasic }\n               GROUP\
    \       mauRpGrp100Mbs\n               DESCRIPTION \"Implementation of this optional\
    \ group is\n                           recommended for MAUs which have 100Mb/s\
    \ or\n                           greater capability.\"\n               GROUP \
    \      mauRpGrpJack\n               DESCRIPTION \"Implementation of this optional\
    \ group is\n                           recommended for MAUs which have one or\
    \ more\n                           external jacks.\"\n               GROUP   \
    \    rpMauNotifications\n               DESCRIPTION \"Implementation of this group\
    \ is recommended\n                           for MAUs attached to repeater ports.\"\
    \n           ::= { mauModCompls 1 }\n       mauModIfCompl MODULE-COMPLIANCE\n\
    \           STATUS      deprecated\n           DESCRIPTION \"******** THIS COMPLIANCE\
    \ IS DEPRECATED ********\n                       Compliance for MAUs attached\
    \ to interfaces.\n                       This compliance is deprecated and replaced\
    \ by\n                       mauModIfCompl2.\"\n           MODULE -- this module\n\
    \               MANDATORY-GROUPS { mauIfGrpBasic }\n               GROUP     \
    \  mauIfGrp100Mbs\n               DESCRIPTION \"Implementation of this optional\
    \ group is\n                           recommended for MAUs which have 100Mb/s\n\
    \                           capability.\"\n               GROUP       mauIfGrpJack\n\
    \               DESCRIPTION \"Implementation of this optional group is\n     \
    \                      recommended for MAUs which have one or more\n         \
    \                  external jacks.\"\n               GROUP       mauIfGrpAutoNeg\n\
    \               DESCRIPTION \"Implementation of this group is mandatory\n    \
    \                       for MAUs which support managed\n                     \
    \      auto-negotiation.\"\n               GROUP       mauBroadBasic\n       \
    \        DESCRIPTION \"Implementation of this group is mandatory\n           \
    \                for broadband MAUs.\"\n               GROUP       ifMauNotifications\n\
    \               DESCRIPTION \"Implementation of this group is recommended\n  \
    \                         for MAUs attached to interfaces.\"\n           ::= {\
    \ mauModCompls 2 }\n       mauModIfCompl2 MODULE-COMPLIANCE\n           STATUS\
    \      deprecated\n           DESCRIPTION \"******** THIS COMPLIANCE IS DEPRECATED\
    \ ********\n                       Compliance for MAUs attached to interfaces.\n\
    \                       This compliance is deprecated and replaced by\n      \
    \                 mauModIfCompl3.\"\n           MODULE -- this module\n      \
    \         MANDATORY-GROUPS { mauIfGrpBasic }\n               GROUP       mauIfGrpHighCapacity\n\
    \               DESCRIPTION \"Implementation of this optional group is\n     \
    \                      recommended for MAUs which have 100Mb/s\n             \
    \              or greater capability.\"\n               GROUP       mauIfGrpJack\n\
    \               DESCRIPTION \"Implementation of this optional group is\n     \
    \                      recommended for MAUs which have one or more\n         \
    \                  external jacks.\"\n               GROUP       mauIfGrpAutoNeg2\n\
    \               DESCRIPTION \"Implementation of this group is mandatory\n    \
    \                       for MAUs which support managed\n                     \
    \      auto-negotiation.\"\n               GROUP       mauIfGrpAutoNeg1000Mbps\n\
    \               DESCRIPTION \"Implementation of this group is mandatory\n    \
    \                       for MAUs which have 1000Mb/s or greater\n            \
    \               capability and support managed\n                           auto-negotiation.\"\
    \n               GROUP       ifMauNotifications\n               DESCRIPTION \"\
    Implementation of this group is recommended\n                           for MAUs\
    \ attached to interfaces.\"\n               OBJECT      ifMauStatus\n        \
    \       MIN-ACCESS  read-only\n               DESCRIPTION \"Write access is not\
    \ required.\"\n           ::= { mauModCompls 3 }\n       mauModRpCompl2 MODULE-COMPLIANCE\n\
    \           STATUS      current\n           DESCRIPTION \"Compliance for MAUs\
    \ attached to repeater\n                       ports.\n                      \
    \ Note that compliance with this compliance\n                       statement\
    \ requires compliance with the\n                       snmpRptrModCompl MODULE-COMPLIANCE\
    \ statement of\n                       the SNMP-REPEATER-MIB (RFC 2108).\"\n \
    \          MODULE -- this module\n               MANDATORY-GROUPS { mauRpGrpBasic\
    \ }\n               GROUP       mauRpGrp100Mbs\n               DESCRIPTION \"\
    Implementation of this optional group is\n                           recommended\
    \ for MAUs which have 100Mb/s or\n                           greater capability.\"\
    \n               GROUP       mauRpGrpJack\n               DESCRIPTION \"Implementation\
    \ of this optional group is\n                           recommended for MAUs which\
    \ have one or more\n                           external jacks.\"\n           \
    \    GROUP       rpMauNotifications\n               DESCRIPTION \"Implementation\
    \ of this group is recommended\n                           for MAUs attached to\
    \ repeater ports.\"\n               OBJECT      rpMauStatus\n               MIN-ACCESS\
    \  read-only\n               DESCRIPTION \"Write access is not required.\"\n \
    \          ::= { mauModCompls 4 }\n       mauModIfCompl3 MODULE-COMPLIANCE\n \
    \          STATUS      current\n           DESCRIPTION \"Compliance for MAUs attached\
    \ to interfaces.\n                       Note that compliance with this compliance\n\
    \                       statement requires compliance with the\n             \
    \          ifCompliance3 MODULE-COMPLIANCE statement of the\n                \
    \       IF-MIB (RFC 2863) and the dot3Compliance2\n                       MODULE-COMPLIANCE\
    \ statement of the\n                       EtherLike-MIB (RFC3635).\"\n      \
    \     MODULE -- this module\n               MANDATORY-GROUPS { mauIfGrpBasic }\n\
    \               GROUP       mauIfGrpHighCapacity\n               DESCRIPTION \"\
    Implementation of this optional group is\n                           recommended\
    \ for MAUs which have 100Mb/s\n                           or greater capability.\"\
    \n               GROUP       mauIfGrpHCStats\n               DESCRIPTION \"Implementation\
    \ of this group is mandatory\n                           for MAUs which have 1000Mb/s\
    \ capacity, and\n                           is recommended for MAUs which have\
    \ 100Mb/s\n                           capacity.\"\n               GROUP      \
    \ mauIfGrpJack\n               DESCRIPTION \"Implementation of this optional group\
    \ is\n                           recommended for MAUs which have one or more\n\
    \                           external jacks.\"\n               GROUP       mauIfGrpAutoNeg2\n\
    \               DESCRIPTION \"Implementation of this group is mandatory\n    \
    \                       for MAUs which support managed\n                     \
    \      auto-negotiation.\"\n               GROUP       mauIfGrpAutoNeg1000Mbps\n\
    \               DESCRIPTION \"Implementation of this group is mandatory\n    \
    \                       for MAUs which have 1000Mb/s or greater\n            \
    \               capability and support managed\n                           auto-negotiation.\"\
    \n               GROUP       ifMauNotifications\n               DESCRIPTION \"\
    Implementation of this group is recommended\n                           for MAUs\
    \ attached to interfaces.\"\n               OBJECT      ifMauStatus\n        \
    \       MIN-ACCESS  read-only\n               DESCRIPTION \"Write access is not\
    \ required.\"\n           ::= { mauModCompls 5 }\n   END\n"
- title: 5.  Intellectual Property Statement
  contents:
  - "5.  Intellectual Property Statement\n   The IETF takes no position regarding\
    \ the validity or scope of any\n   intellectual property or other rights that\
    \ might be claimed to\n   pertain to the implementation or use of the technology\
    \ described in\n   this document or the extent to which any license under such\
    \ rights\n   might or might not be available; neither does it represent that it\n\
    \   has made any effort to identify any such rights.  Information on the\n   IETF's\
    \ procedures with respect to rights in standards-track and\n   standards-related\
    \ documentation can be found in BCP-11.  Copies of\n   claims of rights made available\
    \ for publication and any assurances of\n   licenses to be made available, or\
    \ the result of an attempt made to\n   obtain a general license or permission\
    \ for the use of such\n   proprietary rights by implementors or users of this\
    \ specification can\n   be obtained from the IETF Secretariat.\n   The IETF invites\
    \ any interested party to bring to its attention any\n   copyrights, patents or\
    \ patent applications, or other proprietary\n   rights which may cover technology\
    \ that may be required to practice\n   this standard.  Please address the information\
    \ to the IETF Executive\n   Director.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   This document was produced by the IETF Ethernet Interfaces\
    \ and Hub\n   MIB Working Group, whose efforts were greatly advanced by the\n\
    \   contributions of the following people:\n      Mike Ayers\n      Mike Heard\n\
    \      Chuck Black\n      John Flick\n      Jeff Johnson\n      Kam Lam\n    \
    \  Leon Leong\n      Mike Lui\n      Kerry McDonald\n      K.C. Norseth\n    \
    \  Dave Perkins\n      Dan Romascanu\n      Andrew Smith\n      Kaj Tesink\n \
    \     Geoff Thompson\n      Maurice Turcotte\n      Paul Woodruff\n   This document\
    \ is based on the Proposed Standard MAU MIB, RFC 2668\n   [RFC2668], edited by\
    \ John Flick of Hewlett-Packard and Andrew Smith,\n   then of Extreme Networks,\
    \ and produced by the Ethernet Interfaces and\n   Hub MIB Working Group.  It extends\
    \ that document by providing support\n   for 10 Gb/s MAUs as defined in [IEEE802.3ae].\n\
    \   RFC 2668, in turn, was based on the Proposed Standard MAU MIB, RFC\n   2239\
    \ [RFC2239], edited by Kathryn de Graaf, then of 3Com, and Dan\n   Romascanu,\
    \ then of Madge Networks, and produced by the Ethernet\n   Interfaces and Hub\
    \ MIB Working Group.  It extended that document by\n   providing support for 1000\
    \ Mb/sec MAUs as defined in [IEEE802.3].\n   RFC 2239, in turn, was based on the\
    \ Proposed Standard MAU MIB, RFC\n   1515 [RFC1515], edited by Donna McMaster,\
    \ then of SynOptics\n   Communications, Keith McCloghrie, then of Hughes LAN Systems,\
    \ and Sam\n   Roberts, then of Farallon Computing, and produced by the Hub MIB\n\
    \   Working Group.  It extends that document by providing support for 100\n  \
    \ Mb/sec MAUs, full duplex MAUs, and auto-negotiation, as defined in\n   [IEEE802.3].\n"
- title: 7.  Normative References
  contents:
  - "7.  Normative References\n   [RFC2119]     Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n                 Requirements Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   [RFC2578]     McCloghrie, K., Perkins, D. and J. Schoenwaelder,\n\
    \                 \"Structure of Management Information Version 2\n          \
    \       (SMIv2)\", STD 58, RFC 2578, April 1999.\n   [RFC2579]     McCloghrie,\
    \ K., Perkins, D. and J. Schoenwaelder,\n                 \"Textual Conventions\
    \ for SMIv2\", STD 58, RFC 2579,\n                 April 1999.\n   [RFC2580] \
    \    McCloghrie, K., Perkins, D. and J. Schoenwaelder,\n                 \"Conformance\
    \ Statements for SMIv2\", STD 58, RFC 2580,\n                 April 1999.\n  \
    \ [IEEE802.3]   IEEE, IEEE Std 802.3, 2002 Edition: \"Carrier Sense\n        \
    \         Multiple Access with Collision Detection (CSMA/CD)\n               \
    \  Access Method and Physical Layer Specifications\", March\n                \
    \ 2002.\n   [IEEE802.3ae] IEEE, IEEE Std 802.3ae-2002, \"Amendment: Media Access\n\
    \                 Control (MAC) Parameters, Physical Layers, and\n           \
    \      Management Parameters for 10 Gb/s Operation\", August,\n              \
    \   2002.\n   [RFC2863]     McCloghrie, K. and F. Kastenholz, \"The Interfaces\
    \ Group\n                 MIB using SMIv2\", RFC 2863, June 2000.\n   [RFC2108]\
    \     de Graaf, K., Romascanu, D., McMaster, D. and K.\n                 McCloghrie,\
    \ \"Definitions of Managed Objects for IEEE\n                 802.3 Repeater Devices\
    \ using SMIv2\", RFC 2108, February\n                 1997.\n   [RFC3635]    \
    \ Flick, J., \"Definitions of Managed Objects for the\n                 Ethernet-like\
    \ Interface Types\", RFC 3635, September\n                 2003.\n"
- title: 8.  Informative References
  contents:
  - "8.  Informative References\n   [RFC3410]     Case, J., Mundy, R., Partain, D.\
    \ and B. Stewart,\n                 \"Introduction and Applicability Statements\
    \ for\n                 Internet-Standard Network Management Framework\", RFC\n\
    \                 3410, December 2002.\n   [RFC3418]     Presuhn, R., Ed., \"\
    Management Information Base (MIB)\n                 for the Simple Network Management\
    \ Protocol (SNMP)\", STD\n                 62, RFC 3418, December 2002.\n   [RFC2668]\
    \     Smith, A., Flick, J., deGraaf, K., Romascanu, D.,\n                 McMaster,\
    \ D., McCloghrie, K. and S. Roberts,\n                 \"Definitions of Managed\
    \ Objects for IEEE 802.3 Medium\n                 Attachment Units (MAUs)\", RFC\
    \ 2668, August 1999.\n   [RFC2239]     de Graaf, K., Romascanu, D., McMaster,\
    \ D., McCloghrie,\n                 K. and S. Roberts, \"Definitions of Managed\
    \ Objects for\n                 IEEE 802.3 Medium Attachment Units (MAUs) using\
    \ SMIv2\",\n                 RFC 2239, November 1997.\n   [RFC1515]     McMaster,\
    \ D., McCloghrie, K. and  S. Roberts,\n                 \"Definitions of Managed\
    \ Objects for IEEE 802.3 Medium\n                 Attachment Units (MAUs)\", RFC\
    \ 1515, September 1993.\n   [RFC3637]     Heard, C. M., Ed., \"Definitions of\
    \ Managed Objects for\n                 the Ethernet WAN Interface Sublayer\"\
    , RFC 3637,\n                 September 2003.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   There are a number of management objects defined\
    \ in this MIB that\n   have a MAX-ACCESS clause of read-write.  Setting these\
    \ objects can\n   have a serious effect on the operation of the network, including:\n\
    \   o  enabling or disabling a MAU\n   o  changing a MAU's default type\n   o\
    \  enabling, disabling or restarting autonegotiation\n   o  modifying the capabilities\
    \ that a MAU advertizes during\n      autonegotiation.\n   Such objects may be\
    \ considered sensitive or vulnerable in some\n   network environments.  The support\
    \ for SET operations in a non-secure\n   environment without proper protection\
    \ can have a negative effect on\n   network operations.\n   Some of the readable\
    \ objects in this MIB module (i.e., objects with a\n   MAX-ACCESS other than not-accessible)\
    \ may be considered sensitive or\n   vulnerable in some network environments.\
    \  In some environments it may\n   be undesirable to allow unauthorized parties\
    \ to access statistics or\n   status information about individual links in a network.\
    \  It is thus\n   important to control even GET and/or NOTIFY access to these\
    \ objects\n   and possibly to even encrypt the values of these objects when sending\n\
    \   them over the network via SNMP.\n   SNMP versions prior to SNMPv3 did not\
    \ include adequate security.\n   Even if the network itself is secure (for example\
    \ by using IPSec),\n   even then, there is no control as to who on the secure\
    \ network is\n   allowed to access and GET/SET (read/change/create/delete) the\
    \ objects\n   in this MIB module.\n   It is recommended that the implementors\
    \ consider the security\n   features as provided by the SNMPv3 framework (see\
    \ [RFC3410], section\n   8), including full support for the SNMPv3 cryptographic\
    \ mechanisms\n   (for authentication and privacy).\n   Furthermore, deployment\
    \ of SNMP versions prior to SNMPv3 is NOT\n   RECOMMENDED.  Instead, it is RECOMMENDED\
    \ to deploy SNMPv3 and to\n   enable cryptographic security.  It is then a customer/operator\n\
    \   responsibility to ensure that the SNMP entity giving access to an\n   instance\
    \ of this MIB module is properly configured to give access to\n   the objects\
    \ only to those principals (users) that have legitimate\n   rights to indeed GET\
    \ or SET (change/create/delete) them.\n"
- title: A.  Change Log
  contents:
  - 'A.  Change Log

    '
- title: A.1.  Changes since RFC 2668
  contents:
  - "A.1.  Changes since RFC 2668\n   This section enumerates changes made to RFC\
    \ 2668 to produce this\n   document.\n   (1)   Updated references to the IEEE\
    \ 802.3 standard to refer to the\n         2002 edition.\n   (2)   Added reference\
    \ to 802.3ae.\n   (3)   Updated WG e-mail address.\n   (4)   The following DESCRIPTION\
    \ clauses have been updated to reflect\n         behavior on 10 Gb/s interfaces:\
    \ ifMauMediaAvailable.\n   (5)   OBJECT-IDENTITY definitions have been added for\
    \ 10 gigabit MAU\n         types.\n   (6)   Enumerations for 'pmdLinkFault', 'wisFrameLoss',\n\
    \         'wisSignalLoss', pcsLinkFault', excessiveBER', 'dxsLinkFault'\n    \
    \     and 'pxsLinkFault' have been added for the ifMauMediaAvailable\n       \
    \  object.\n   (7)   ifMauTypeListBits has been extended with bits for the 10\
    \ Gb/s\n         MAU types.\n   (8)   The MODULE-IDENTITY clause has been updated\
    \ to reflect the\n         changes in the MIB module.\n   (9)   MIB boilerplate\
    \ in section 2 has been updated to the latest\n         approved text.\n   (10)\
    \  Added 64-bit version of ifMauFalseCarriers, and updated\n         compliances\
    \ accordingly.\n   (11)  Added section on mapping of IEEE managed objects to the\
    \ objects\n         in this MIB module.\n"
- title: A.2.  Changes between RFC 2239 and RFC 2668
  contents:
  - "A.2.  Changes between RFC 2239 and RFC 2668\n   This section enumerates the changes\
    \ made to RFC 2239 to produce RFC\n   2668.\n   (1)   The MODULE-IDENTITY has\
    \ been updated to reflect the changes in\n         the MIB.\n   (2)   OBJECT-IDENTITY\
    \ definitions have been added for gigabit MAU\n         types.\n   (3)   The ifMauTypeList,\
    \ ifMauAutoNegCapability,\n         ifMauAutoNegCapAdvertised and ifMauAutoNegCapReceived\
    \ objects\n         have been deprecated and replaced by ifMauTypeListBits,\n\
    \         ifMauAutoNegCapabilityBits, ifMauAutoNegCapAdvertisedBits and\n    \
    \     ifMauAutoNegCapReceivedBits.\n   (4)   Two new objects, ifMauAutoNegRemoteFaultAdvertised\
    \ and\n         ifMauAutoNegRemoteFaultReceived have been added.\n   (5)   Enumerations\
    \ for 'offline' and 'autoNegError' have been added\n         for the rpMauMediaAvailable\
    \ and ifMauMediaAvailable objects.\n   (6)   The broadMauBasicTable and mauBroadBasic\
    \ object group have been\n         deprecated.\n   (7)   The mauIfGrp100Mbs and\
    \ mauIfGrpAutoNeg object groups have been\n         deprecated and replaced by\
    \ mauIfGrpHighCapacity and\n         mauIfGrpAutoNeg2.\n   (8)   A new object\
    \ group, mauIfGrpAutoNeg1000Mbps, has been added.\n   (9)   The mauModIfCompl\
    \ and mauModRpCompl compliances have been\n         deprecated and replaced by\
    \ mauModIfCompl2 and mauModRpCompl2.\n   (10)  Added section on relationship to\
    \ RFC 2239.\n   (11)  Updated the SNMP Network Management Framework boilerplate.\n\
    \   (12)  Refer to the Interfaces MIB, rather than the interfaces group\n    \
    \     of MIB-II.\n   (13)  Updated references to refer to latest edition of IEEE\
    \ 802.3.\n   (14)  An intellectual property notice was added, as required by RFC\n\
    \         2026.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   John Flick\n   Hewlett-Packard Company\n   8000 Foothills\
    \ Blvd. M/S 5557\n   Roseville, CA 95747-5557\n   Phone: +1 916 785 4018\n   EMail:\
    \ johnf@rose.hp.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2003).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assignees.\n\
    \   This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
