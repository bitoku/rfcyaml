- title: __initial_text__
  contents:
  - '              IAB Technical Comment on the Unique DNS Root

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Summary
  contents:
  - "Summary\n   To remain a global network, the Internet requires the existence of\
    \ a\n   globally unique public name space.  The DNS name space is a\n   hierarchical\
    \ name space derived from a single, globally unique root.\n   This is a technical\
    \ constraint inherent in the design of the DNS.\n   Therefore it is not technically\
    \ feasible for there to be more than\n   one root in the public DNS.  That one\
    \ root must be supported by a set\n   of coordinated root servers administered\
    \ by a unique naming\n   authority.\n   Put simply, deploying multiple public\
    \ DNS roots would raise a very\n   strong possibility that users of different\
    \ ISPs who click on the same\n   link on a web page could end up at different\
    \ destinations, against\n   the will of the web page designers.\n   This does\
    \ not preclude private networks from operating their own\n   private name spaces,\
    \ but if they wish to make use of names uniquely\n   defined for the global Internet,\
    \ they have to fetch that information\n   from the global DNS naming hierarchy,\
    \ and in particular from the\n   coordinated root servers of the global DNS naming\
    \ hierarchy.\n"
- title: 1.  Detailed Explanation
  contents:
  - "1.  Detailed Explanation\n   There are several distinct reasons why the DNS requires\
    \ a single root\n   in order to operate properly.\n"
- title: 1.1.  Maintenance of a Common Symbol Set
  contents:
  - "1.1.  Maintenance of a Common Symbol Set\n   Effective communications between\
    \ two parties requires two essential\n   preconditions:\n   -  The existence of\
    \ a common symbol set, and\n   -  The existence of a common semantic interpretation\
    \ of these\n      symbols.\n   Failure to meet the first condition implies a failure\
    \ to communicate\n   at all, while failure to meet the second implies that the\
    \ meaning of\n   the communication is lost.\n   In the case of a public communications\
    \ system this condition of a\n   common symbol set with a common semantic interpretation\
    \ must be\n   further strengthened to that of a unique symbol set with a unique\n\
    \   semantic interpretation.  This condition of uniqueness allows any\n   party\
    \ to initiate a communication that can be received and understood\n   by any other\
    \ party.  Such a condition rules out the ability to define\n   a symbol within\
    \ some bounded context.  In such a case, once the\n   communication moves out\
    \ of the context of interpretation in which it\n   was defined, the meaning of\
    \ the symbol becomes lost.\n   Within public digital communications networks such\
    \ as the Internet\n   this requirement for a uniquely defined symbol set with\
    \ a uniquely\n   defined meaning exists at many levels, commencing with the binary\n\
    \   encoding scheme, extending to packet headers and payload formats and\n   the\
    \ protocol that an application uses to interact.  In each case a\n   variation\
    \ of the symbol set or a difference of interpretation of the\n   symbols being\
    \ used within the interaction causes a protocol failure,\n   and the communication\
    \ fails.  The property of uniqueness allows a\n   symbol to be used unambiguously\
    \ in any context, allowing the symbol\n   to be passed on, referred to, and reused,\
    \ while still preserving the\n   meaning of the original use.\n   The DNS fulfills\
    \ an essential role within the Internet protocol\n   environment, allowing network\
    \ locations to be referred to using a\n   label other than a protocol address.\
    \  As with any other such symbol\n   set, DNS names are designed to be globally\
    \ unique, that is, for any\n   one DNS name at any one time there must be a single\
    \ set of DNS\n   records uniquely describing protocol addresses, network resources\
    \ and\n   services associated with that DNS name.  All of the applications\n \
    \  deployed on the Internet which use the DNS assume this, and Internet\n   users\
    \ expect such behavior from DNS names.  Names are then constant\n   symbols, whose\
    \ interpretation does not specifically require knowledge\n   of the context of\
    \ any individual party.  A DNS name can be passed\n   from one party to another\
    \ without altering the semantic intent of the\n   name.\n   Since the DNS is hierarchically\
    \ structured into domains, the\n   uniqueness requirement for DNS names in their\
    \ entirety implies that\n   each of the names (sub-domains) defined within a domain\
    \ has a unique\n   meaning (i.e., set of DNS records) within that domain.  This\
    \ is as\n   true for the root domain as for any other DNS domain.  The\n   requirement\
    \ for uniqueness within a domain further implies that there\n   be some mechanism\
    \ to prevent name conflicts within a domain.  In DNS\n   this is accomplished\
    \ by assigning a single owner or maintainer to\n   every domain, including the\
    \ root domain, who is responsible for\n   ensuring that each sub-domain of that\
    \ domain has the proper records\n   associated with it.  This is a technical requirement,\
    \ not a policy\n   choice.\n"
- title: 1.2.  Coordination of Updates
  contents:
  - "1.2.  Coordination of Updates\n   Both the design and implementations of the\
    \ DNS protocol are heavily\n   based on the assumption that there is a single\
    \ owner or maintainer\n   for every domain, and that any set of resources records\
    \ associated\n   with a domain is modified in a single-copy serializable fashion.\n\
    \   That is, even assuming that a single domain could somehow be \"shared\"\n\
    \   by uncooperating parties, there is no means within the DNS protocol\n   by\
    \ which a user or client could discover, and choose between,\n   conflicting definitions\
    \ of a DNS name made by different parties.  The\n   client will simply return\
    \ the first set of resource records that it\n   finds that matches the requested\
    \ domain, and assume that these are\n   valid.  This protocol is embedded in the\
    \ operating software of\n   hundreds of millions of computer systems, and is not\
    \ easily updated\n   to support a shared domain scenario.\n   Moreover, even supposing\
    \ that some other means of resolving\n   conflicting definitions could be provided\
    \ in the future, it would\n   have to be based on objective rules established\
    \ in advance.  For\n   example, zone A.B could declare that naming authority Y\
    \ had been\n   delegated all subdomains of A.B with an odd number of characters,\
    \ and\n   that naming authority Z had been delegated authority to define\n   subdomains\
    \ of A.B with an even number of characters.  Thus, a single\n   set of rules would\
    \ have to be agreed to prevent Y and Z from making\n   conflicting assignments,\
    \ and with this train of actions a single\n   unique space has been created in\
    \ any case.  Even this would not allow\n   multiple non-cooperating authorities\
    \ to assign arbitrary sub-domains\n   within a single domain.\n   It seems that\
    \ a degree of cooperation and agreed technical rules are\n   required in order\
    \ to guarantee the uniqueness of names.  In the DNS,\n   these rules are established\
    \ independently for each part of the naming\n   hierarchy, and the root domain\
    \ is no exception.  Thus, there must be\n   a generally agreed single set of rules\
    \ for the root.\n"
- title: 1.3.  Difficulty of Relocating the Root Zone
  contents:
  - "1.3.  Difficulty of Relocating the Root Zone\n   There is one specific technical\
    \ respect in which the root zone\n   differs from all other DNS zones: the addresses\
    \ of the name servers\n   for the root zone come primarily from out-of-band information.\
    \  This\n   out-of-band information is often poorly maintained and, unlike all\n\
    \   other data in the DNS, the out-of-band information has no automatic\n   timeout\
    \ mechanism.  It is not uncommon for this information to be\n   years out of date\
    \ at many sites.\n   Like any other zone, the root zone contains a set of \"name\
    \ server\"\n   resource records listing its servers, but a resolver with no valid\n\
    \   addresses for the current set of root servers will never be able to\n   obtain\
    \ these records.  More insidiously, a resolver that has a mixed\n   set of partially\
    \ valid and partially stale out-of-band configuration\n   information will not\
    \ be able to tell which are the \"real\" root\n   servers if it gets back conflicting\
    \ answers; thus, it is very\n   difficult to revoke the status of a malicious\
    \ root server, or even to\n   route around a buggy root server.\n   In effect,\
    \ every full-service resolver in the world \"delegates\" the\n   root of the public\
    \ tree to the public root server(s) of its choice.\n   As a direct consequence,\
    \ any change to the list of IP addresses that\n   specify the public root zone\
    \ is significantly more difficult than\n   changing any other aspect of the DNS\
    \ delegation chain.   Thus,\n   stability of the system calls for extremely conservative\
    \ and cautious\n   management of the public root zone: the frequency of updates\
    \ to the\n   root zone must be kept low, and the servers for the root zone must\
    \ be\n   closely coordinated.\n   These problems can be ameliorated to some extent\
    \ by the DNS Security\n   Extensions [DNSSEC], but a similar out-of-band configuration\
    \ problem\n   exists for the cryptographic signature key to the root zone, so\
    \ the\n   root zone still requires tight coupling and coordinated management\n\
    \   even in the presence of DNSSEC.\n"
- title: 2.  Conclusion
  contents:
  - "2.  Conclusion\n   The DNS type of unique naming and name-mapping system may\
    \ not be\n   ideal for a number of purposes for which it was never designed, such\n\
    \   a locating information when the user doesn't precisely know the\n   correct\
    \ names.  As the Internet continues to expand, we would expect\n   directory systems\
    \ to evolve which can assist the user in dealing with\n   vague or ambiguous references.\
    \  To preserve the many important\n   features of the DNS and its multiple record\
    \ types -- including the\n   Internet's equivalent of telephone number portability\
    \ -- we would\n   expect the result of directory lookups and identification of\
    \ the\n   correct names for a particular purpose to be unique DNS names that\n\
    \   are then resolved normally, rather than having directory systems\n   \"replace\"\
    \ the DNS.\n   There is no getting away from the unique root of the public DNS.\n"
- title: 3.  Security Considerations
  contents:
  - "3.  Security Considerations\n   This memo does not introduce any new security\
    \ issues, but it does\n   attempt to identify some of the problems inherent in\
    \ a family of\n   recurring technically naive proposals.\n"
- title: 4.  IANA Considerations
  contents:
  - "4.  IANA Considerations\n   This memo is not intended to create any new issues\
    \ for IANA.\n"
- title: 5.  References
  contents:
  - "5.  References\n   [DNS-CONCEPTS]        Mockapetris, P., \"Domain Names - Concepts\
    \ and\n                         Facilities\", STD 13, RFC 1034, November 1987.\n\
    \   [DNS-IMPLEMENTATION]  Mockapetris, P., \"Domain Names - Implementation\n \
    \                        and Specification\", STD 13, RFC 1035, November\n   \
    \                      1987.\n   [DNSSEC]              Eastlake, D., \"Domain\
    \ Name System Security\n                         Extensions\", RFC 2535, March\
    \ 1999.\n"
- title: 6.  Author's Address
  contents:
  - "6.  Author's Address\n   Internet Architecture Board\n   EMail: iab@iab.org\n"
- title: 7.  Full Copyright Statement
  contents:
  - "7.  Full Copyright Statement\n   Copyright (C) The Internet Society (2000). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
