- title: __initial_text__
  contents:
  - '                   IPv6 Site Renumbering Gap Analysis

    '
- title: Abstract
  contents:
  - "Abstract\n   This document briefly introduces the existing mechanisms that could\n\
    \   be utilized for IPv6 site renumbering and tries to cover most of the\n   explicit\
    \ issues and requirements associated with IPv6 renumbering.\n   The content is\
    \ mainly a gap analysis that provides a basis for future\n   works to identify\
    \ and develop solutions or to stimulate such\n   development as appropriate. \
    \ The gap analysis is organized by the\n   main steps of a renumbering process.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7010.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \   2. Overall Requirements for Renumbering ............................4\n  \
    \ 3. Existing Components for IPv6 Renumbering ........................5\n    \
    \  3.1. Relevant Protocols and Mechanisms ..........................5\n      3.2.\
    \ Management Tools ...........................................6\n      3.3. Procedures\
    \ and Policies ....................................7\n   4. Managing Prefixes\
    \ ...............................................7\n      4.1. Prefix Delegation\
    \ ..........................................7\n      4.2. Prefix Assignment ..........................................8\n\
    \   5. Address Configuration ...........................................8\n  \
    \    5.1. Host Address Configuration .................................8\n    \
    \  5.2. Router Address Configuration ...............................9\n   6. Updating\
    \ Address-Relevant Entries ..............................10\n      6.1. DNS Records\
    \ Update ........................................10\n      6.2. In-Host Server\
    \ Address Update .............................11\n      6.3. Address Update in\
    \ Scattered Configurations ................11\n   7. Renumbering Event Management\
    \ ...................................13\n      7.1. Renumbering Notification ..................................13\n\
    \      7.2. Synchronization Management ................................14\n  \
    \    7.3. Renumbering Monitoring ....................................15\n   8.\
    \ Miscellaneous ..................................................15\n      8.1.\
    \ Multicast .................................................15\n      8.2. Mobility\
    \ ..................................................17\n   9. Gap Summary ....................................................17\n\
    \      9.1. Managing Prefixes .........................................17\n  \
    \    9.2. Address Configuration .....................................17\n    \
    \  9.3. Address-Relevant Entries Update ...........................18\n      9.4.\
    \ Renumbering Event Management ..............................19\n      9.5. Miscellaneous\
    \ .............................................19\n   10. Gaps Considered Unsolvable\
    \ ....................................20\n      10.1. Address Configuration ....................................20\n\
    \      10.2. Address-Relevant Entries Update ..........................20\n  \
    \    10.3. Miscellaneous ............................................21\n   11.\
    \ Security Considerations .......................................21\n   12. Acknowledgments\
    \ ...............................................22\n   13. References ....................................................23\n\
    \      13.1. Normative References .....................................23\n  \
    \    13.2. Informative References ...................................23\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   As introduced in [RFC5887], renumbering, especially for\
    \ medium to\n   large sites and networks, is currently viewed as expensive and\n\
    \   painful.  This error-prone process is avoided by network managers as\n   much\
    \ as possible.  If IPv6 site renumbering continues to be\n   considered difficult,\
    \ network managers will turn to Provider\n   Independent (PI) addressing for IPv6\
    \ as an attempt to minimize the\n   need for future renumbering.  However, widespread\
    \ use of PI\n   addressing may create very serious BGP4 scaling problems [RFC4984].\n\
    \   It is thus desirable to develop tools and practices that make\n   renumbering\
    \ a simpler process and reduces demand for IPv6 PI space.\n   Building upon the\
    \ IPv6 enterprise renumbering scenarios described in\n   [RFC6879], this document\
    \ performs a gap analysis to provide a basis\n   for future work to identify and\
    \ develop solutions or to stimulate\n   such development as appropriate.  The\
    \ gap analysis is organized\n   according to the main steps of a renumbering process,\
    \ which includes\n   prefix management, node address (re)configuration, and updates\
    \ to\n   address-relevant entries in various devices such as firewalls,\n   routers\
    \ and servers, etc.  Renumbering event management is presented\n   independently\
    \ from the steps of a renumbering process in order to\n   identify some operational\
    \ and administrative gaps in renumbering.\n   This document starts from existing\
    \ work in [RFC5887] and [RFC4192].\n   It further analyzes and identifies the\
    \ valuable and solvable issues,\n   digs out of some undiscovered gaps, and gives\
    \ some solution\n   suggestions.  This document considers the make-before-break\
    \ approach\n   as a premise for the gap analysis, so readers should be familiar\
    \ with\n   [RFC4192].\n   Renumbering nodes with static addresses has a particular\
    \ set of\n   problems, thus discussion of that space has been covered in a related\n\
    \   document [RFC6866].\n   This document does not cover the unplanned emergency\
    \ renumbering\n   cases.\n"
- title: 2.  Overall Requirements for Renumbering
  contents:
  - "2.  Overall Requirements for Renumbering\n   This section introduces the overall\
    \ goals of a renumbering event.  In\n   general, we need to leverage renumbering\
    \ automation to avoid human\n   intervention as much as possible at a reasonable\
    \ cost.  Some existing\n   mechanisms already provide useful capabilities.\n \
    \  The automation can be divided into four aspects as follows.\n   (Detailed analysis\
    \ of the four aspects is presented respectively in\n   Sections 4 through 7.)\n\
    \   o  Prefix delegation and delivery should be automatic and accurate in\n  \
    \    aggregation and coordination.\n   o  Address reconfiguration should be automatically\
    \ achieved through\n      standard protocols with minimum human intervention.\n\
    \   o  Address-relevant entry updates should be performed together and\n     \
    \ without error.\n   o  Renumbering event management is needed to provide the\
    \ functions of\n      renumbering notification, synchronization, and monitoring.\n\
    \   Besides automation, session survivability is another important issue\n   during\
    \ renumbering since application outage is one of the most\n   obvious impacts\
    \ that make renumbering painful and expensive.  Session\n   survivability is a\
    \ fundamental issue that cannot be solved within a\n   renumbering context only.\
    \  However, the [RFC4192] make-before-break\n   approach, which uses the address\
    \ lifetime mechanisms in IPv6\n   Stateless Address Autoconfiguration (SLAAC)\
    \ and Dynamic Host\n   Configuration Protocol for IPv6 (DHCPv6), allows for a\
    \ smooth\n   transition mechanism from old to new prefixes.  In most cases, since\n\
    \   we can set the transition period to be long enough to cover the\n   ongoing\
    \ sessions, we consider this mechanism sufficient to avoid\n   broken sessions\
    \ in IPv6 site renumbering.  (Please note that if\n   multiple addresses are running\
    \ on hosts simultaneously, the address\n   selection [RFC6724] needs to be carefully\
    \ handled.)\n"
- title: 3.  Existing Components for IPv6 Renumbering
  contents:
  - "3.  Existing Components for IPv6 Renumbering\n   Since renumbering is not a new\
    \ issue, some protocols and mechanisms\n   have already been utilized for this\
    \ purpose.  There are also some\n   dedicated protocols and mechanisms that have\
    \ been developed for\n   renumbering.  This section briefly reviews these existing\
    \ protocols\n   and mechanisms to provide a basis for the gap analysis.\n"
- title: 3.1.  Relevant Protocols and Mechanisms
  contents:
  - "3.1.  Relevant Protocols and Mechanisms\n   o  Router Advertisement (RA) messages,\
    \ defined in [RFC4861], are used\n      to deprecate prefixes that are old or\
    \ announce prefixes that are\n      new, and to advertise the availability of\
    \ an upstream router.  In\n      renumbering, RA is one of the basic mechanisms\
    \ for host\n      configuration.\n   o  When renumbering a host, SLAAC [RFC4862]\
    \ may be used for address\n      configuration with the new prefix(es).  Hosts\
    \ receive RA messages\n      that contain a routable prefix(es) and the address(es)\
    \ of the\n      default router(s); then hosts can generate an IPv6 address(es)\
    \ by\n      themselves.\n   o  Hosts that are configured through DHCPv6 [RFC3315]\
    \ obtain new\n      addresses through the renewal process or when they receive\
    \ the\n      reconfiguration messages initiated by the DHCPv6 servers.\n   o \
    \ DHCPv6-PD (Prefix Delegation) [RFC3633] enables automated\n      delegation\
    \ of IPv6 prefixes using the DHCPv6.\n   o  [RFC2894] defines standard ICMPv6\
    \ messages for router renumbering.\n      This is a dedicated protocol for renumbering,\
    \ but we are not aware\n      of real network deployment.\n"
- title: 3.2.  Management Tools
  contents:
  - "3.2.  Management Tools\n   Some renumbering operations could be automatically\
    \ processed by\n   management tools in order to make the renumbering process more\n\
    \   efficient and accurate.  The tools may be designed specifically for\n   renumbering,\
    \ or common tools could be utilized for some of the\n   renumbering operations.\n\
    \   Following are examples of such tools:\n   o  IP address management (IPAM)\
    \ tools.  There are both commercial and\n      open-source solutions.  IPAM tools\
    \ are used to manage IP address\n      plans and usually integrate the DHCPv6\
    \ and DNS services together\n      as a whole solution.  Many mature commercial\
    \ tools can support\n      management operations, but normally they do not have\
    \ dedicated\n      renumbering functions.  However, the integrated DNS/DHCPv6\n\
    \      services and address management function can obviously facilitate\n   \
    \   the renumbering process.\n   o  Third-party tools.  Some organizations use\
    \ third-party tools to\n      push configuration to devices.  This is sometimes\
    \ used as a\n      supplement to vendor-specific solutions.  A representative\
    \ of such\n      a third-party tool is [CFENGINE].\n   o  Macros.  [LEROY] proposed\
    \ a mechanism of macros to automatically\n      update the address-relevant entries/configurations\
    \ inside the DNS,\n      firewall, etc.  The macros can be delivered through the\
    \ SOAP\n      protocol from a network management server to the managed devices.\n\
    \   o  Asset management tools/systems.  These tools may provide the\n      ability\
    \ to manage configuration files in devices so that it is\n      convenient to\
    \ update the address-relevant configuration in these\n      devices.\n"
- title: 3.3.  Procedures and Policies
  contents:
  - "3.3.  Procedures and Policies\n   o  [RFC4192] proposed a procedure for renumbering\
    \ an IPv6 network\n      without a flag day.  The document includes a set of operational\n\
    \      suggestions that can be followed step by step by network\n      administrators.\
    \  It should be noted that the administrators need\n      to carefully deal with\
    \ the address selection issue, while the old\n      and new prefixes are both\
    \ available during the overlapping period\n      as described in the procedures\
    \ in [RFC4192].  The address\n      selection policies might need to be updated\
    \ after renumbering, so\n      the administrator could leverage the address-selection-policy\n\
    \      distribution mechanism as described in [6MAN-ADDR-OPT].\n   o  [RFC6879]\
    \ analyzes the enterprise renumbering events and makes\n      recommendations\
    \ based on the existing renumbering mechanisms.\n      According to the different\
    \ stages, renumbering considerations are\n      described in three categories:\
    \ considerations and recommendations\n      during network design, for the preparation\
    \ of enterprise network\n      renumbering, and during the renumbering operation.\n"
- title: 4.  Managing Prefixes
  contents:
  - "4.  Managing Prefixes\n   When renumbering an IPv6 enterprise site, the key procedural\
    \ issue is\n   switching the old prefix(es) to a new one(s).  A new short prefix\
    \ may\n   be divided into longer ones for subnets, so we need to carefully\n \
    \  manage the prefixes to ensure they are synchronized and coordinated\n   within\
    \ the whole network.\n"
- title: 4.1.  Prefix Delegation
  contents:
  - "4.1.  Prefix Delegation\n   For big enterprises, the new short prefix(es) usually\
    \ comes down\n   through offline human communication.  But, for the SOHO-style\
    \ (Small\n   Office, Home Office) SMEs (Small & Medium Enterprises), the prefixes\n\
    \   might be dynamically received by DHCPv6 servers or routers inside the\n  \
    \ enterprise networks.  The short prefix(es) could be automatically\n   delegated\
    \ through DHCPv6-PD.  Then the downlink DHCPv6 servers or\n   routers could begin\
    \ advertising the longer prefixes to the subnets.\n   The delegation routers might\
    \ need to renumber themselves with the new\n   delegated prefixes.  So, there\
    \ should be a mechanism to inform the\n   routers to renumber themselves by delegated\
    \ prefixes; there should\n   also be a mechanism for the routers to derive addresses\
    \ automatically\n   based on the delegated prefixes.\n"
- title: 4.2.  Prefix Assignment
  contents:
  - "4.2.  Prefix Assignment\n   When subnet routers receive the longer prefixes,\
    \ they can advertise a\n   prefix on a link to which hosts are connected.  Host\
    \ address\n   configuration, rather than routers, is the primary concern for prefix\n\
    \   assignment, which is described in Section 5.1.\n"
- title: 5.  Address Configuration
  contents:
  - '5.  Address Configuration

    '
- title: 5.1.  Host Address Configuration
  contents:
  - "5.1.  Host Address Configuration\n   o  SLAAC and DHCPv6 Interaction Problems\n\
    \      Both DHCPv6 and Neighbor Discovery (ND) protocols have an IP\n      address\
    \ configuration function, which are suitable for different\n      scenarios. \
    \ During renumbering, the SLAAC-configured hosts can\n      reconfigure IP addresses\
    \ by receiving ND Router Advertisement (RA)\n      messages containing new prefix\
    \ information.  (It should be noted\n      that the prefix delivery could be achieved\
    \ through DHCPv6\n      according to [PREFIX-DHCPv6]).  The DHCPv6-configured\
    \ hosts can\n      reconfigure addresses by initiating RENEW sessions [RFC3315]\
    \ when\n      the current addresses' lease times are expired or when they\n  \
    \    receive reconfiguration messages initiated by the DHCPv6 servers.\n     \
    \ Sometimes the two address configuration modes may be available in\n      the\
    \ same network.  This would add additional complexity for both\n      the hosts\
    \ and network management.\n      With the flags defined in RA (ManagedFlag (M)\
    \ indicating the\n      DHCPv6 service available in the network; OtherConfigFlag\
    \ (O)\n      indicating other configurations such as DNS/routing), the two\n \
    \     separated address configuration modes are correlated.  However,\n      the\
    \ ND protocol does not define the flags as prescriptive but only\n      as advisory.\
    \  This has led to variation in the behavior of hosts\n      when interpreting\
    \ the flags; different operating systems have\n      followed different approaches.\
    \  (For more details, please refer to\n      [DHCPv6-SLAAC] and [6RENUM-SLAAC].)\n\
    \      The impact of ambiguous M/O flags includes the following aspects:\n   \
    \   -  DHCPv6-configured hosts might not be able to be renumbered by\n       \
    \  RA\n         It is unclear whether a DHCPv6-configured host will accept\n \
    \        address configuration though RA messages, especially when the M\n   \
    \      flag transitions from 1 to 0; this depends on the\n         implementation\
    \ of the operating system.  It might not be\n         possible for administrators\
    \ to only use RA messages for\n         renumbering, since renumbering might fail\
    \ on some already\n         DHCPv6-configured hosts.  This means administrators\
    \ have to use\n         DHCPv6 reconfiguration for some DHCPv6-configured hosts.\
    \  It is\n         not convenient, and DHCPv6 reconfiguration is not suitable\
    \ for\n         bulk usage as analyzed below.\n      -  DHCPv6-configured hosts\
    \ might not be able to learn new RA\n         prefixes\n         [RFC5887] mentions\
    \ that DHCPv6-configured hosts may want to\n         learn about the upstream\
    \ availability of new prefixes or loss\n         of prior prefixes dynamically\
    \ by deducing this from periodic RA\n         messages.  Relevant standards [RFC4862]\
    \ [RFC3315] are ambiguous\n         about what approach should be taken by a DHCPv6-configured\
    \ host\n         when it receives RA messages containing a new prefix.  Current\n\
    \         behavior depends on the operating system of the host and cannot\n  \
    \       be predicted or controlled by the network.\n      -  SLAAC-configured\
    \ hosts might not be able to add a DHCPv6\n         address(es)\n         The\
    \ behavior when the host receives RA messages with the M flag\n         set is\
    \ unspecified.\n         The host may start a DHCPv6 session and receive the DHCPv6\n\
    \         address configuration, or it may just ignore the messages.\n       \
    \  Whether the hosts start DHCPv6 configuration is outside the\n         control\
    \ of the network side.\n"
- title: 5.2.  Router Address Configuration
  contents:
  - "5.2.  Router Address Configuration\n   o  Learning New Prefixes\n      As described\
    \ in [RFC5887], \"if a site wanted to be multihomed\n      using multiple provider-aggregated\
    \ (PA) routing prefixes with one\n      prefix per upstream provider, then the\
    \ interior routers would need\n      a mechanism to learn which upstream providers\
    \ and prefixes were\n      currently reachable (and valid).  In this case, their\
    \ Router\n      Advertisement messages could be updated dynamically to only\n\
    \      advertise currently valid routing prefixes to hosts.  This would\n    \
    \  be significantly more complicated if the various provider prefixes\n      were\
    \ of different lengths or if the site had non-uniform subnet\n      prefix lengths.\"\
    \n   o  Restarting After Renumbering\n      As [RFC2072] mentions, some routers\
    \ cache IP addresses in some\n      situations, so routers might need to be restarted\
    \ as a result of\n      site renumbering.  While most modern systems support a\
    \ cache-clear\n      function that eliminates the need for restarts, there are\
    \ always\n      exceptions that must be taken into account.\n   o  Router Naming\n\
    \      [RFC4192] states that \"To better support renumbering, switches and\n \
    \     routers should use domain names for configuration wherever\n      appropriate,\
    \ and they should resolve those names using the DNS\n      when the lifetime on\
    \ the name expires\".  As [RFC5887] described,\n      this capability is not new,\
    \ and currently it is present in most\n      IPsec VPN implementations.  However,\
    \ many administrators may need\n      to be alerted to the fact that it can be\
    \ utilized to avoid manual\n      modification during renumbering.\n"
- title: 6.  Updating Address-Relevant Entries
  contents:
  - "6.  Updating Address-Relevant Entries\n   In conjunction with renumbering the\
    \ nodes, any configuration or data\n   store containing previous addresses must\
    \ be updated as well.  Some\n   examples include DNS records and filters in various\
    \ entities such as\n   Access Control Lists (ACLs) in firewalls/gateways.\n"
- title: 6.1.  DNS Records Update
  contents:
  - "6.1.  DNS Records Update\n   o  Secure Dynamic DNS (DDNS) Update\n      In real\
    \ network operations, a DNS update is normally achieved by\n      maintaining\
    \ a DNS zone file and loading this file into the site's\n      DNS server(s).\
    \  Synchronization between host renumbering and the\n      updating of its AAAA\
    \ record is hard.  [RFC5887] discusses an\n      alternative that uses the Secure\
    \ Dynamic DNS Update [RFC3007], in\n      which a host informs its own DNS server\
    \ when it receives a new\n      address.\n      The Secure Dynamic DNS Update\
    \ has been widely supported by the\n      major DNS implementations, but it hasn't\
    \ been widely deployed.\n      Normal hosts are not suitable to do the update,\
    \ mainly because of\n      the complex key-management issues inherited from secure\
    \ DNS\n      mechanisms, so current practices usually assign DHCP servers to\n\
    \      act as DNS clients to request that the DNS server update relevant\n   \
    \   records [RFC4704].  The key-management problem is tractable in the\n     \
    \ case of updates for a limited number of servers, so Dynamic DNS\n      updates\
    \ could serve as a suitable solution for keeping server DNS\n      records up\
    \ to date on a typical enterprise network.  However, this\n      solution is not\
    \ easily applicable to hosts in general.\n      To address the larger use case\
    \ of arbitrary non-server hosts being\n      renumbered, DHCP servers have to\
    \ learn that the relevant hosts\n      have changed their addresses and thus trigger\
    \ the DDNS update.  If\n      the hosts were numbered and also renumbered by DHCP,\
    \ it would be\n      easy for the DHCP servers to learn the address changes; however,\n\
    \      if the hosts were numbered by SLAAC, then there could be trouble.\n"
- title: 6.2.  In-Host Server Address Update
  contents:
  - "6.2.  In-Host Server Address Update\n   While DNS stores the addresses of hosts\
    \ in servers, hosts are also\n   configured with the addresses of servers, such\
    \ as DNS and RADIUS\n   servers [RFC2865].  While renumbering, the hosts must\
    \ update these\n   addresses if the server addresses change.\n   In principle,\
    \ the addresses of DHCPv6 servers do not need to be\n   updated since they could\
    \ be dynamically discovered through\n   DHCPv6-relevant multicast messages.  But\
    \ in practice, most relay\n   agents have the option of being configured with\
    \ a DHCPv6 server\n   address rather than sending to a multicast address.  Therefore,\
    \ the\n   DHCP server addresses update might be an issue in practice.\n"
- title: 6.3.  Address Update in Scattered Configurations
  contents:
  - "6.3.  Address Update in Scattered Configurations\n   Besides the DNS records\
    \ and the in-host server address entries, there\n   are also many places in which\
    \ IP addresses are configured, for\n   example, filters such as ACL and routing\
    \ policies.  There are even\n   more sophisticated cases where the IP addresses\
    \ are used for deriving\n   values, for example, using the unique portion of the\
    \ loopback address\n   to generate an ISIS net ID.\n   In renumbering, updating\
    \ the IP addresses in all the above mentioned\n   places is burdensome and error-prone.\
    \  We lack a \"one-stop\" mechanism\n   to trigger the updates for all the subsystems\
    \ on a host/server and\n   all the external databases that refer to the IP address\
    \ update.  We\n   break the general \"one-stop\" gap into the following two aspects.\n\
    \   o  Self-Contained Configuration in Individual Devices\n      Ideally, IP addresses\
    \ can be defined as a value once, and then the\n      administrators can use either\
    \ keywords or variables to call the\n      value in other places such as a sort\
    \ of internal inheritance in\n      CLI (command line interface) or other local\
    \ configurations.  This\n      makes it easier to manage a renumbering event by\
    \ reducing the\n      number of places where a device's configuration must be\
    \ updated.\n      However, it still means that every device needs to be individually\n\
    \      updated, but only once instead of having to inspect the whole\n      configuration\
    \ to ensure that none of the separate places that a\n      given IP address occurs\
    \ is missed.\n      Among current devices, some routers support defining multiple\n\
    \      loopback interfaces that can be called in other configurations.\n     \
    \ For example, when defining a tunnel, it can call the defined\n      loopback\
    \ interface to use its address as the local address of the\n      tunnel.  This\
    \ can be considered as a kind of parameterized self-\n      contained configuration.\
    \  However, this only applies to certain\n      use cases; it is impossible to\
    \ use the loopback interfaces to\n      represent external devices, and it is\
    \ not always possible to call\n      loopback interfaces in other configurations.\
    \  Parameterized self-\n      contained configuration is still a gap that needs\
    \ to be filled.\n   o  Unified Configuration Management among Devices\n      This\
    \ refers to a more formalized central configuration management\n      system,\
    \ where all changes are made in one place, and the system\n      manages how changes\
    \ are pushed to the individual devices.  This\n      issue contains two aspects,\
    \ as follows:\n      -  Configuration Aggregation\n         Configuration data\
    \ based on addresses or prefixes are usually\n         spread out in various devices.\
    \  As [RFC5887] describes, some\n         address configuration data might be\
    \ widely dispersed and much\n         harder to find.  Some will inevitably be\
    \ found only after the\n         renumbering event.  Because there's a big gap\
    \ in configuration\n         aggregation, it is hard to get all the relevant configuration\n\
    \         data together in one place.\n      -  Configuration Update Automation\n\
    \         As mentioned in Section 3.2, [LEROY] proposes a mechanism that\n   \
    \      can automatically update the configurations.  The mechanism\n         utilizes\
    \ macros suitable for various devices such as routers\n         and firewalls\
    \ to update configurations based on the new prefix.\n         Such an automation\
    \ tool is valuable for renumbering because it\n         can reduce manual operation,\
    \ which is error-prone and\n         inefficient.\n         Besides the macros,\
    \ [LEROY] also proposes the use of SOAP to\n         deliver the macros to the\
    \ devices.  Along with SOAP, we may\n         consider whether it is possible\
    \ and suitable to use other\n         standardized protocols, such as the Network\
    \ Configuration\n         Protocol (NETCONF) [RFC6241].\n         In current real\
    \ networks, most devices use vendor-private\n         protocols to update configurations,\
    \ so it is not necessarily\n         valid to assume that there is going to be\
    \ a formalized\n         configuration management system to leverage.  Although\
    \ there\n         are some vendor-independent tools as mentioned in Section 3.2,\n\
    \         a standard and comprehensive way to uniformly update\n         configurations\
    \ in multi-vendor devices is still missing.\n"
- title: 7.  Renumbering Event Management
  contents:
  - "7.  Renumbering Event Management\n   From the perspective of network management,\
    \ renumbering is an event\n   that may need additional processes to make it easier\
    \ and more\n   manageable.\n"
- title: 7.1.  Renumbering Notification
  contents:
  - "7.1.  Renumbering Notification\n   The process of renumbering could benefit from\
    \ hosts or servers being\n   made aware of an occurrence of a renumbering event.\
    \  Following are\n   several examples of additional processes that may ease renumbering.\n\
    \   o  A notification mechanism may be needed to indicate to hosts that a\n  \
    \    renumbering event has changed some DNS records in DNS servers\n      (normally,\
    \ in an enterprise, it is a local recursive DNS\n      server(s)), and then the\
    \ hosts might want to refresh the DNS\n      cache.  That mechanism may also need\
    \ to indicate that such a\n      change will happen at a specific time in the\
    \ future.\n   o  As suggested in [RFC4192], if the DNS service can be given prior\n\
    \      notice about a renumbering event, then delay in the transition to\n   \
    \   new IPv6 addresses could be reduced and thus improve the\n      efficiency\
    \ of renumbering.\n   o  Router awareness: In a site with multiple domains that\
    \ are\n      connected by border routers, all border routers should be aware of\n\
    \      renumbering in one domain or multiple domains and update the\n      internal\
    \ forwarding tables and the address-/prefix-based filters\n      accordingly to\
    \ correctly handle inbound packets.\n   o  Ingress filtering: ISPs normally enable\
    \ an ingress filter to drop\n      packets with source addresses from other ISPs\
    \ at the end-site\n      routers to prevent IP spoofing [RFC2827].  In a multihomed\
    \ site\n      with multiple PA prefixes, the ingress router of ISP A should be\n\
    \      notified if ISP B initiates a renumbering event in order to\n      properly\
    \ update its filters to permit the new legitimate\n      prefix(es).  For large\
    \ enterprises, it might be practical to\n      manage this new legitimate prefix\
    \ information through human\n      communication.  However, for the millions of\
    \ small enterprises, an\n      automated notification mechanism is needed.\n \
    \  o  Log collectors: In the NMS (network management system), log\n      collectors\
    \ that collect logs through syslog, SNMP notification,\n      IPFIX, etc. usually\
    \ treat the UDP message source IP addresses as\n      the host or router IDs.\
    \  When one source IP address is changed,\n      the log collectors will consider\
    \ that a new device appeared in the\n      network.  Therefore, a mechanism is\
    \ needed for the NMS\n      applications to learn the renumbering event including\
    \ the mappings\n      of old and new IP addresses for each host/router, so that\
    \ they\n      could update the address-relevant mappings as described in Section\n\
    \      7.2.\n"
- title: 7.2.  Synchronization Management
  contents:
  - "7.2.  Synchronization Management\n   o  DNS Update Synchronization\n      The\
    \ DNS changes must be coordinated with node address\n      configuration changes.\
    \  DNS has a latency issue of propagating\n      information from the server to\
    \ the resolver.  The latency is\n      mainly caused by the Time to Live (TTL)\
    \ assigned to individual DNS\n      records and the timing of updates from primary\
    \ to secondary\n      servers [RFC4192].\n      Ideally, during a renumbering\
    \ operation, the DNS TTLs should\n      always be shorter than any other lifetimes\
    \ associated with an\n      address.  If the TTLs were set correctly, then the\
    \ DNS latency\n      could be well controlled.  However, there might be some\n\
    \      exceptional situations in which the DNS TTLs were already set too\n   \
    \   long for the time available to plan and execute a renumbering\n      event.\
    \  In these situations, there are currently no mechanisms to\n      deal with\
    \ the already configured long DNS TTLs.\n   o  NMS Address-Relevant Mapping Synchronization\n\
    \      As described in Section 7.1, the NMS needs to learn the\n      renumbering\
    \ event and thus correlate the old and new address in\n      the logs.  If the\
    \ NMS applies unique IDs for the hosts or routers,\n      then the mappings between\
    \ the unique IDs and IP addresses also\n      need to be updated after renumbering.\n"
- title: 7.3.  Renumbering Monitoring
  contents:
  - "7.3.  Renumbering Monitoring\n   While treating renumbering as a network event,\
    \ mechanisms to monitor\n   the renumbering process might be needed to inform\
    \ the administrators\n   whether the renumbering has been successful.  Considering\
    \ that the\n   address configuration operation might be stateless (if ND is used\
    \ for\n   renumbering), it is difficult to monitor.\n"
- title: 8.  Miscellaneous
  contents:
  - "8.  Miscellaneous\n   Since multicast and mobility are special use cases that\
    \ might not be\n   included in routine or common renumbering operations, they\
    \ are\n   discussed separately in this miscellaneous section.\n"
- title: 8.1.  Multicast
  contents:
  - "8.1.  Multicast\n   From the perspective of interface renumbering operations,\
    \ renumbering\n   a multicast address is the same as renumbering a unicast address.\
    \  So\n   this section mainly discusses the issues from the perspective of the\n\
    \   impact to the multicast application systems caused by renumbering.\n   Renumbering\
    \ also has an impact on multicast.  Renumbering of unicast\n   addresses affects\
    \ multicast even if the multicast addresses are not\n   changed.  There may also\
    \ be cases where the multicast addresses need\n   to be renumbered.\n   o  Renumbering\
    \ of Multicast Sources\n      If a host that is a multicast source is renumbered,\
    \ the\n      application on the host may need to be restarted for it to\n    \
    \  successfully send packets with the new source address.\n      For ASM (Any-Source\
    \ Multicast), the impact on a receiver is that a\n      new source appears to\
    \ start sending and it no longer receives from\n      the previous source.  Whether\
    \ this is an issue depends on the\n      application, but we believe it is likely\
    \ not to be a major issue.\n      For SSM (Source-Specific Multicast) however,\
    \ there is one\n      significant problem.  The receiver needs to learn which\
    \ source\n      addresses it must join.  Some applications may provide their own\n\
    \      method for learning sources, where the source application may\n      somehow\
    \ signal the receiver.\n      Otherwise, the receiver may, for example, need to\
    \ get new SDP\n      (Session Description Protocol) information with the new source\n\
    \      address.  This is similar to the process for learning a new group\n   \
    \   address; see the \"Renumbering of Multicast Addresses\" topic below.\n   o\
    \  Renumbering of Rendezvous-Point\n      If the unicast addresses of routers\
    \ in a network are renumbered,\n      then the RP (Rendezvous-Point) address is\
    \ also likely to change\n      for at least some groups.  An RP address is needed\
    \ by PIM-SM\n      (Protocol Independent Multicast - Sparse Mode) to provide ASM\
    \ and\n      for Bidir PIM.  Changing the RP address is not a major issue,\n \
    \     except that the multicast service may be impacted while the new RP\n   \
    \   addresses are configured.  If dynamic protocols are used to\n      distribute\
    \ group-to-RP mappings, the change can be fairly quick\n      and any impact time\
    \ should be very brief.  However, if routers are\n      statically configured,\
    \ the time impacted depends on how long it\n      takes to update all the configurations.\n\
    \      For PIM-SM, one typically switches to SPT (Shortest-Path-Tree)\n      when\
    \ the first packet is received by the last-hop routers.\n      Forwarding on the\
    \ SPT should not be impacted by the change of IP\n      address.  A network operator\
    \ should be careful not to deprecate\n      the previous mapping before configuring\
    \ a new one, because\n      implementations may revert to Dense Mode if no RP\
    \ is configured.\n   o  Renumbering of Multicast Addresses\n      In general,\
    \ multicast addresses can be chosen independently of the\n      unicast addresses,\
    \ and the multicast addresses can remain fixed\n      even if the unicast addresses\
    \ are renumbered.  However, for IPv6,\n      there are useful ways of deriving\
    \ multicast addresses from unicast\n      addresses, such as described in \"Unicast-Prefix-based\
    \ IPv6\n      Multicast Addresses\" [RFC3306] and \"Embedded-RP IPv6 Multicast\n\
    \      Addresses\" [RFC3956].  In those cases, the multicast addresses\n     \
    \ used may have to be renumbered.\n      Renumbering group addresses may be complicated.\
    \  For multicast, it\n      is common to use literal addresses and not DNS.  When\
    \ multicast\n      addresses are changed, source applications need to be reconfigured\n\
    \      and restarted.\n      Multicast receivers need to learn the new group addresses\
    \ to join.\n      Note that for SSM, receivers need to learn which multicast\n\
    \      channels to join.  A channel is a source and group pair.  This\n      means\
    \ that for an SSM application, a change of source address is\n      likely to\
    \ have the same effect as a change of group address.\n      Some applications\
    \ may have dynamic methods of learning which\n      groups (and possibly sources)\
    \ to join.  If not, the application\n      may have to be reconfigured and restarted.\n\
    \      One common way for receivers to learn the necessary parameters is\n   \
    \   by use of SDP.  SDP information may be distributed via various\n      application\
    \ protocols or from a file.  An SDP file may be\n      distributed via HTTP, email,\
    \ etc.  If a user is using a web\n      browser and clicking on a link to launch\
    \ the application with the\n      necessary data, it may be a matter of closing\
    \ the current\n      application and re-clicking the link.\n      In summary,\
    \ currently, multicast renumbering issues are basically\n      handled by application-specific\
    \ methods.  There is no standard way\n      to guarantee that multicast service\
    \ could live across a\n      renumbering event.\n"
- title: 8.2.  Mobility
  contents:
  - "8.2.  Mobility\n   As described in [RFC5887], if a mobile node's home address\
    \ changes\n   unexpectedly, the node can be informed of the new global routing\n\
    \   prefix used at the home site through the Mobile Prefix Solicitation\n   and\
    \ Mobile Prefix Advertisement ICMPv6 messages [RFC6275].  However,\n   if the\
    \ mobile node is disconnected at the time of home address\n   renumbering, it\
    \ will no longer know a valid subnet anycast address\n   for its home agent, leaving\
    \ it to deduce a valid address on the basis\n   of DNS information.\n   So, for\
    \ Mobile IP, we need a better mechanism to handle the change of\n   home agent\
    \ address while the mobile address is disconnected.\n"
- title: 9.  Gap Summary
  contents:
  - "9.  Gap Summary\n   The following is a summary of the gaps identified previously\
    \ in this\n   document that are considered solvable, but may require process or\n\
    \   protocol changes to resolve.\n"
- title: 9.1.  Managing Prefixes
  contents:
  - "9.1.  Managing Prefixes\n   o  A mechanism informing the routers to renumber\
    \ themselves by\n      delegated prefixes.\n   o  A mechanism for the routers\
    \ to derive addresses automatically\n      based on the delegated prefixes.\n"
- title: 9.2.  Address Configuration
  contents:
  - "9.2.  Address Configuration\n   o  Host Address Configuration\n      -  DHCPv6-configured\
    \ hosts might not be able to be renumbered by\n         RA on some current implementations.\n\
    \      -  DHCPv6-configured hosts might not be able to learn new RA\n        \
    \ prefixes on some current implementations.\n      -  SLAAC-configured hosts might\
    \ not be able to add DHCPv6\n         address(es) on some current implementations.\n\
    \   o  Router Address Configuration\n      -  A mechanism for interior routers\
    \ in a multihomed site to learn\n         which upstream providers and prefixes\
    \ are currently reachable.\n      -  Cache-clear might need to restart (rarely\
    \ in modern routers).\n      -  Use of router domain names is not widely learned\
    \ or deployed by\n         administrators.\n"
- title: 9.3.  Address-Relevant Entries Update
  contents:
  - "9.3.  Address-Relevant Entries Update\n   o  DNS Records Update\n      -  For\
    \ key-management scalability issues, secure dynamic DNS\n         update is usually\
    \ done by DHCP servers on behalf of the hosts,\n         so it might not be practical\
    \ for SLAAC-configured hosts to do\n         secure DDNS.\n   o  In-Host Server\
    \ Address Update\n      -  DHCP relays might be configured with DHCP server addresses\n\
    \         rather than by sending multicast messages to discover the DHCP\n   \
    \      server dynamically, so updating the DHCP server addresses might\n     \
    \    be an issue in practice.\n   o  Address Update in Scattered Configurations\n\
    \      -  For devices that don't support parameterized configuration,\n      \
    \   administrators need to individually update all devices in which\n        \
    \ IP addresses were previously configured.\n      -  It is hard to get all the\
    \ address-relevant configurations\n         spread in various devices through\
    \ one place.\n      -  Uniformly updating configurations in multi-vendor devices\
    \ is\n         currently a big gap that needs to be filled.\n"
- title: 9.4.  Renumbering Event Management
  contents:
  - "9.4.  Renumbering Event Management\n   o  Renumbering Notification\n      - \
    \ A mechanism to indicate a host's local recursive DNS is going\n         to be\
    \ renumbered.\n      -  A prior notice about a renumbering event for DNS.\n  \
    \    -  A mechanism for border routers to know internal partial\n         renumbering.\n\
    \      -  For multihomed sites, a mechanism is needed to notify the\n        \
    \ egress router connecting to ISP A that the egress router\n         connecting\
    \ to ISP B has initiated renumbering.\n      -  A mechanism is needed for the\
    \ NMS applications to learn the\n         renumbering event, so that they could\
    \ correlate the old and new\n         addresses in the logs, and update the unique\
    \ ID of the device\n         and address mappings.\n   o  Synchronization Management\n\
    \      -  DNS information propagation latency issue.\n      -  Mechanisms are\
    \ needed for the NMS applications to correlate the\n         old and new addresses\
    \ in logs and to update the unique ID of\n         the device and address mappings.\n\
    \   o  Renumbering Monitoring\n      -  Mechanisms to monitor the process and\
    \ feedback of renumbering\n         might be needed.\n"
- title: 9.5.  Miscellaneous
  contents:
  - "9.5.  Miscellaneous\n   o  Multicast\n      -  A mechanism for SSM receivers\
    \ to learn the source addresses\n         when multicast sources are renumbered.\n\
    \   o  Mobility\n      -  A better mechanism to handle a change of home agent\
    \ address\n         while the mobile address is disconnected.\n"
- title: 10.  Gaps Considered Unsolvable
  contents:
  - "10.  Gaps Considered Unsolvable\n   This section lists gaps that have been identified\
    \ by other documents\n   but are considered unsolvable.\n"
- title: 10.1.  Address Configuration
  contents:
  - "10.1.  Address Configuration\n   o  RA Prefix Lifetime Limitation\n      Section\
    \ 5.5.3 of [RFC4862] states \"If the received Valid Lifetime\n      is greater\
    \ than 2 hours or greater than RemainingLifetime, set the\n      valid lifetime\
    \ of the corresponding address to the advertised\n      Valid Lifetime.\"  So\
    \ when renumbering, if the previous\n      RemainingLifetime is longer than two\
    \ hours, it is impossible to\n      reduce a prefix's lifetime to less than two\
    \ hours.  This\n      limitation is to prevent denial-of-service attacks.\n"
- title: 10.2.  Address-Relevant Entries Update
  contents:
  - "10.2.  Address-Relevant Entries Update\n   o  DNS Authority\n      In an enterprise\
    \ that hosts servers on behalf of collaborators and\n      customers, it is often\
    \ the case that DNS zones outside the\n      administrative control of the hosting\
    \ enterprise maintain resource\n      records concerning addresses for hosted\
    \ nodes within its address\n      space.  When the hosting enterprise renumbers,\
    \ it does not have\n      sufficient authority to change those records.\n    \
    \  This is an operational and policy issue.  It is out of scope for\n      this\
    \ document to consider a technical solution or to propose an\n      additional\
    \ protocol or mechanism to standardize the interaction\n      between DNS systems\
    \ for authority negotiations.\n   o  DNS Entries\n      DNS entries commonly have\
    \ matching reverse DNS entries that will\n      also need to be updated during\
    \ renumbering.  It might not be\n      possible to combine forward and reverse\
    \ DNS entry updates in one\n      procedure where addresses are not being managed\
    \ using DHCP.\n   o  DNS Data Structure Optimization\n      [RFC2874] proposed\
    \ an A6 record type for DNS recording of the IPv6\n      address and prefix. \
    \ Several extensions to DNS query and\n      processing were also proposed.  A6\
    \ was designed to be a\n      replacement for the AAAA record.  The changes were\
    \ designed to\n      facilitate network renumbering and multihoming.  With the\
    \ A6\n      record and the extensions, an IPv6 address could be defined by\n \
    \     using multiple DNS records.  This feature would increase the\n      complexity\
    \ of resolvers but reduce the cost of zone file\n      maintenance, so renumbering\
    \ could be easier than with the AAAA\n      record.\n      [RFC2874] has been\
    \ deprecated and moved to Historic status by\n      [RFC6563].  The A6 record\
    \ has not been widely used and has been\n      shown to have various problems\
    \ and disadvantages (see Section 2 in\n      [RFC6563]).  The idea of a structured\
    \ record to separate prefix\n      and suffix is still potentially valuable for\
    \ renumbering, but\n      avoiding the problems of the A6 record would require\
    \ a major\n      development effort.\n"
- title: 10.3.  Miscellaneous
  contents:
  - "10.3.  Miscellaneous\n   o  For the transport layer, [RFC5887] said that TCP\
    \ connections and\n      UDP flows are rigidly bound to a given pair of IP addresses.\n\
    \   o  For the application layer, in general, we can assert that any\n      implementation\
    \ is at risk from renumbering if it does not check\n      whether an address is\
    \ valid each time it starts session resumption\n      (e.g., a laptop wakes from\
    \ sleep state).  It is also more or less\n      risky when it opens a new communications\
    \ session by using cached\n      addresses.\n   We considered the above two points\
    \ (ID/Locator overloading in\n   transport layer and address caching in application\
    \ layer) fundamental\n   issues that might not be proper to deal with just in\
    \ terms of\n   renumbering.\n"
- title: 11.  Security Considerations
  contents:
  - "11.  Security Considerations\n   o  Prefix Validation\n      Prefixes from the\
    \ ISP may need authentication to prevent prefix\n      fraud.  Announcing changes\
    \ of site prefix to other sites (for\n      example, those that configure routers\
    \ or VPNs to point to the site\n      in question) also needs validation.\n  \
    \    In the LAN, Secure DHCPv6 [SECURE-DHCPv6] or Secure Neighbor\n      Discovery\
    \ (SEND) [RFC3971] deployment may be needed to validate\n      prefixes.\n   o\
    \  Influence on Security Controls\n      During renumbering, security controls\
    \ (e.g., ACLs) protecting\n      legitimate resources should not be interrupted.\
    \  For example, if\n      some addresses are in a blacklist, they should not escape\
    \ from the\n      blacklist due to renumbering.\n      Addresses in SEND certificates\
    \ will need to get updated when\n      renumbering.  During the overlap between\
    \ old and new addresses,\n      both certificates must remain valid.\n   o  Security\
    \ Protection for Renumbering Notification\n      Section 7.1 mentions possible\
    \ notification mechanisms to signal a\n      change in the DNS system or in the\
    \ border routers related to a\n      renumbering event.  Since the DNS system\
    \ and border routers are\n      key elements in any network, and they might take\
    \ action according\n      to the notification, a security authentication for the\
    \ renumbering\n      notification is needed.\n   o  Security Protection for Configuration\
    \ Update\n      Automated configuration update approaches like [LEROY] would\n\
    \      increase the risk since a bad actor with the right permission\n      could\
    \ cause havoc to the networks.\n"
- title: 12.  Acknowledgments
  contents:
  - "12.  Acknowledgments\n   This work adopts significant amounts of content from\
    \ [RFC5887].  In\n   addition, it draws largely from the \"DNS Authority\" topic\
    \ in Section\n   10.2 from [IPv6-RENUM-THINK].  Both documents offer such important\n\
    \   input for this work that some principles and considerations applied\n   in\
    \ this work are implicitly inherited from them.  So thanks go to\n   Randall Atkinson,\
    \ Hannu Flinck, Tim Chown, Mark Thompson, and Alan\n   Ford.  Some useful materials\
    \ were provided by Oliver Bonaventure and\n   his student, Damien Leroy.\n   Many\
    \ useful comments and contributions were made by Ted Lemon, Lee\n   Howard, Robert\
    \ Sparks, S. Moonesamy, Fred Baker, Sean Turner, Benoit\n   Claise, Stephen Farrell,\
    \ Brian Haberman, Joel Jaeggli, Eric Vyncke,\n   Phillips Matthew, Benedikt Stockebrand,\
    \ Gustav Reinsberger, Teco\n   Boot, and other members of the 6renum WG.\n"
- title: 13.  References
  contents:
  - '13.  References

    '
- title: 13.1.  Normative References
  contents:
  - "13.1.  Normative References\n   [RFC3007]   Wellington, B., \"Secure Domain Name\
    \ System (DNS) Dynamic\n               Update\", RFC 3007, November 2000.\n  \
    \ [RFC3315]   Droms, R., Ed., Bound, J., Volz, B., Lemon, T., Perkins,\n     \
    \          C., and M. Carney, \"Dynamic Host Configuration Protocol\n        \
    \       for IPv6 (DHCPv6)\", RFC 3315, July 2003.\n   [RFC3633]   Troan, O. and\
    \ R. Droms, \"IPv6 Prefix Options for Dynamic\n               Host Configuration\
    \ Protocol (DHCP) version 6\", RFC 3633,\n               December 2003.\n   [RFC3971]\
    \   Arkko, J., Ed., Kempf, J., Zill, B., and P. Nikander,\n               \"SEcure\
    \ Neighbor Discovery (SEND)\", RFC 3971, March 2005.\n   [RFC4861]   Narten, T.,\
    \ Nordmark, E., Simpson, W., and H. Soliman,\n               \"Neighbor Discovery\
    \ for IP version 6 (IPv6)\", RFC 4861,\n               September 2007.\n   [RFC4862]\
    \   Thomson, S., Narten, T., and T. Jinmei, \"IPv6 Stateless\n               Address\
    \ Autoconfiguration\", RFC 4862, September 2007.\n"
- title: 13.2.  Informative References
  contents:
  - "13.2.  Informative References\n   [RFC2072]   Berkowitz, H., \"Router Renumbering\
    \ Guide\", RFC 2072,\n               January 1997.\n   [RFC2827]   Ferguson, P.\
    \ and D. Senie, \"Network Ingress Filtering:\n               Defeating Denial\
    \ of Service Attacks which employ IP\n               Source Address Spoofing\"\
    , BCP 38, RFC 2827, May 2000.\n   [RFC2865]   Rigney, C., Willens, S., Rubens,\
    \ A., and W. Simpson,\n               \"Remote Authentication Dial In User Service\
    \ (RADIUS)\",\n               RFC 2865, June 2000.\n   [RFC2874]   Crawford, M.\
    \ and C. Huitema, \"DNS Extensions to Support\n               IPv6 Address Aggregation\
    \ and Renumbering\", RFC 2874, July\n               2000.\n   [RFC2894]   Crawford,\
    \ M., \"Router Renumbering for IPv6\", RFC 2894,\n               August 2000.\n\
    \   [RFC3306]   Haberman, B. and D. Thaler, \"Unicast-Prefix-based IPv6\n    \
    \           Multicast Addresses\", RFC 3306, August 2002.\n   [RFC3956]   Savola,\
    \ P. and B. Haberman, \"Embedding the Rendezvous\n               Point (RP) Address\
    \ in an IPv6 Multicast Address\", RFC\n               3956, November 2004.\n \
    \  [RFC4192]   Baker, F., Lear, E., and R. Droms, \"Procedures for\n         \
    \      Renumbering an IPv6 Network without a Flag Day\", RFC\n               4192,\
    \ September 2005.\n   [RFC4704]   Volz, B., \"The Dynamic Host Configuration Protocol\
    \ for\n               IPv6 (DHCPv6) Client Fully Qualified Domain Name (FQDN)\n\
    \               Option\", RFC 4704, October 2006.\n   [RFC6241]   Enns, R., Ed.,\
    \ Bjorklund, M., Ed., Schoenwaelder, J.,\n               Ed., and A. Bierman,\
    \ Ed., \"Network Configuration Protocol\n               (NETCONF)\", RFC 6241,\
    \ June 2011.\n   [RFC4984]   Meyer, D., Ed., Zhang, L., Ed., and K. Fall, Ed.,\
    \ \"Report\n               from the IAB Workshop on Routing and Addressing\",\
    \ RFC\n               4984, September 2007.\n   [RFC5887]   Carpenter, B., Atkinson,\
    \ R., and H. Flinck, \"Renumbering\n               Still Needs Work\", RFC 5887,\
    \ May 2010.\n   [RFC6275]   Perkins, C., Ed., Johnson, D., and J. Arkko, \"Mobility\n\
    \               Support in IPv6\", RFC 6275, July 2011.\n   [RFC6563]   Jiang,\
    \ S., Conrad, D., and B. Carpenter, \"Moving A6 to\n               Historic Status\"\
    , RFC 6563, March 2012.\n   [RFC6724]   Thaler, D., Ed., Draves, R., Matsumoto,\
    \ A., and T. Chown,\n               \"Default Address Selection for Internet Protocol\
    \ Version\n               6 (IPv6)\", RFC 6724, September 2012.\n   [RFC6866]\
    \   Carpenter, B. and S. Jiang, \"Problem Statement for\n               Renumbering\
    \ IPv6 Hosts with Static Addresses in\n               Enterprise Networks\", RFC\
    \ 6866, February 2013.\n   [RFC6879]   Jiang, S., Liu, B., and B. Carpenter, \"\
    IPv6 Enterprise\n               Network Renumbering Scenarios, Considerations,\
    \ and\n               Methods\", RFC 6879, February 2013.\n   [6MAN-ADDR-OPT]\n\
    \               Matsumoto, A., Fujisaki T., and T. Chown, \"Distributing\n   \
    \            Address Selection Policy using DHCPv6\", Work in Progress,\n    \
    \           August 2013.\n   [6RENUM-SLAAC]\n               Liu, B., \"DHCPv6/SLAAC\
    \ Address Configuration Switching\n               for Host Renumbering\", Work\
    \ in Progress, January 2013.\n   [CFENGINE]  CFEngine, <http://cfengine.com/what-is-cfengine>.\n\
    \   [DHCPv6-SLAAC]\n               Liu, B. and R. Bonica, \"DHCPv6/SLAAC Address\n\
    \               Configuration Interaction Problem Statement\", Work in\n     \
    \          Progress, February 2013.\n   [IPv6-RENUM-THINK]\n               Chown,\
    \ T., Thompson, M., Ford, A., and S. Venaas, \"Things\n               to think\
    \ about when Renumbering an IPv6 network\", Work in\n               Progress,\
    \ September 2006.\n   [LEROY]     Leroy, D. and O. Bonaventure, \"Preparing network\n\
    \               configurations for IPv6 renumbering\", International of\n    \
    \           Network Management, 2009, <http://inl.info.ucl.ac.be/\n          \
    \     system/files/dleroy-nem-2009.pdf>\n   [PREFIX-DHCPv6]\n               Jiang,\
    \ S., Xia, F., and B. Sarikaya, \"Prefix Assignment\n               in DHCPv6\"\
    , Work in Progress, February 2013.\n   [SECURE-DHCPv6]\n               Jiang,\
    \ S. and Shen S., \"Secure DHCPv6 Using CGAs\", Work\n               in Progress,\
    \ September 2012.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Bing Liu\n   Huawei Technologies Co., Ltd\n   Q14, Huawei\
    \ Campus\n   No. 156 Beiqing Rd.\n   Hai-Dian District, Beijing 100095\n   P.R.\
    \ China\n   EMail: leo.liubing@huawei.com\n   Sheng Jiang\n   Huawei Technologies\
    \ Co., Ltd\n   Q14, Huawei Campus\n   No. 156 Beiqing Rd.\n   Hai-Dian District,\
    \ Beijing 100095\n   P.R. China\n   EMail: jiangsheng@huawei.com\n   Brian Carpenter\n\
    \   Department of Computer Science\n   University of Auckland\n   PB 92019\n \
    \  Auckland, 1142\n   New Zealand\n   EMail: brian.e.carpenter@gmail.com\n   Stig\
    \ Venaas\n   Cisco Systems\n   Tasman Drive\n   San Jose, CA 95134\n   United\
    \ States\n   EMail: stig@cisco.com\n   Wesley George\n   Time Warner Cable\n \
    \  13820 Sunrise Valley Drive\n   Herndon, VA 20171\n   United States\n   Phone:\
    \ +1 703-561-2540\n   EMail: wesley.george@twcable.com\n"
