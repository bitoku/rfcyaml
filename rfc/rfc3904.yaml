- title: __initial_text__
  contents:
  - '    Evaluation of IPv6 Transition Mechanisms for Unmanaged Networks

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document analyzes issues involved in the transition of\n  \
    \ \"unmanaged networks\" from IPv4 to IPv6.  Unmanaged networks typically\n  \
    \ correspond to home networks or small office networks.  A companion\n   paper\
    \ analyzes out the requirements for mechanisms needed in various\n   transition\
    \ scenarios of these networks to IPv6.  Starting from this\n   analysis, we evaluate\
    \ the suitability of mechanisms that have already\n   been specified, proposed,\
    \ or deployed.\n"
- title: 'Table of Contents:'
  contents:
  - "Table of Contents:\n             2.1.3.  The Risk of Several Parallel IPv6 Internets\
    \ ....  5\n   3.  Meeting Case A Requirements ..................................\
    \  9\n       3.1.  Evaluation of Connectivity Mechanisms ..................  9\n\
    \       3.2.  Security Considerations in Case A ......................  9\n  \
    \ 4.  Meeting case B Requirements .................................. 10\n    \
    \   4.1.  Connectivity ........................................... 10\n      \
    \       4.1.1.  Extending a Subnet to Span Multiple Links ...... 10\n        \
    \     4.1.2.  Explicit Prefix Delegation ..................... 11\n          \
    \   4.1.3.  Recommendation ................................. 11\n       4.2. \
    \ Communication Between IPv4-only and IPv6-Capable Nodes . 11\n       4.3.  Resolution\
    \ of Names to IPv6 Addresses .................. 12\n             4.3.1.  Provisioning\
    \ the Address of a DNS Resolver ..... 12\n             4.3.2.  Publishing IPv6\
    \ Addresses to the Internet ...... 12\n             4.3.3.  Resolving the IPv6\
    \ Addresses of Local Hosts .... 13\n             4.3.4.  Recommendations for Name\
    \ Resolution ............ 13\n       4.4.  Security Considerations in Case B ......................\
    \ 14\n   5.  Meeting Case C Requirements .................................. 14\n\
    \       5.1.  Connectivity ........................................... 14\n  \
    \ 6.  Meeting the Case D Requirements .............................. 14\n    \
    \   6.1.  IPv6 Addressing Requirements ........................... 15\n      \
    \ 6.2.  IPv4  Connectivity Requirements ........................ 15\n       6.3.\
    \  Naming Requirements .................................... 15\n   7.  Recommendations\
    \ .............................................. 15\n   8.  Security Considerations\
    \ ...................................... 16\n   9.  Acknowledgements .............................................\
    \ 16\n   10. References ................................................... 16\n\
    \   11. Authors' Addresses ........................................... 18\n  \
    \ 12. Full Copyright Statement ..................................... 19\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document analyzes the issues involved in the transition\
    \ from\n   IPv4 to IPv6 [IPV6].  In a companion paper [UNMANREQ] we defined the\n\
    \   \"unmanaged networks\", which typically correspond to home networks or\n \
    \  small office networks, and the requirements for transition mechanisms\n   in\
    \ various scenarios of transition to IPv6.\n   The requirements for unmanaged\
    \ networks are expressed by analyzing\n   four classes of applications: local,\
    \ client, peer to peer, and\n   servers, and are considering four cases of deployment.\
    \  These are:\n      A) a gateway which does not provide IPv6 at all;\n      B)\
    \ a dual-stack gateway connected to a dual-stack ISP;\n      C) a dual-stack gateway\
    \ connected to an IPv4-only ISP; and\n      D) a gateway connected to an IPv6-only\
    \ ISP.\n   During the transition phase from IPv4 to IPv6 there will be IPv4-\n\
    \   only, dual-stack, or IPv6-only nodes.  In this document, we make the\n   hypothesis\
    \ that the IPv6-only nodes do not need to communicate with\n   IPv4-only nodes;\
    \ devices that want to communicate with both IPv4 and\n   IPv6 nodes are expected\
    \ to implement both IPv4 and IPv6, i.e., be\n   dual-stack.\n   The issues involved\
    \ are described in the next sections.  This\n   analysis outlines two types of\
    \ requirements: connectivity\n   requirements, i.e., how to ensure that nodes\
    \ can exchange IP packets,\n   and naming requirements, i.e., how to ensure that\
    \ nodes can resolve\n   each-other's names.  The connectivity requirements often\
    \ require\n   tunneling solutions.  We devote the first section of this memo to\
    \ an\n   evaluation of various tunneling solutions.\n"
- title: 2.  Evaluation of Tunneling Solutions
  contents:
  - "2.  Evaluation of Tunneling Solutions\n   In the case A and case C scenarios\
    \ described in [UNMANREQ], the\n   unmanaged network cannot obtain IPv6 service,\
    \ at least natively, from\n   its ISP.  In these cases, the IPv6 service will\
    \ have to be provided\n   through some form of tunnel.  There have been multiple\
    \ proposals on\n   different ways to tunnel IPv6 through an IPv4 service.  We\
    \ believe\n   that these proposals can be categorized according to two important\n\
    \   properties:\n   *  Is the deployment automatic, or does it require explicit\n\
    \      configuration or service provisioning?\n   *  Does the proposal allow for\
    \ the traversal of a NAT?\n   These two questions divide the solution space into\
    \ four broad\n   classes.  Each of these classes has specific advantages and risks,\n\
    \   which we will now develop.\n"
- title: 2.1.  Comparing Automatic and Configured Solutions
  contents:
  - "2.1.  Comparing Automatic and Configured Solutions\n   It is possible to broadly\
    \ classify tunneling solutions as either\n   \"automatic\" or \"configured\".\
    \  In an automatic solution, a host or a\n   router builds an IPv6 address or\
    \ an IPv6 prefix by combining a pre-\n   defined prefix with some local attribute,\
    \ such as a local IPv4\n   address [6TO4] or the combination of an address and\
    \ a port number\n   [TEREDO].  Another typical and very important characteristic\
    \ of an\n   automatic solution is they aim to work with a minimal amount of\n\
    \   support or infrastructure for IPv6 in the local or remote ISPs.\n   In a configured\
    \ solution, a host or a router identifies itself to a\n   tunneling service to\
    \ set up a \"configured tunnel\" with an explicitly\n   defined \"tunnel router\"\
    .  The amount of actual configuration may vary\n   from manually configured static\
    \ tunnels to dynamic tunnel services\n   requiring only the configuration of a\
    \ \"tunnel broker\", or even a\n   completely automatic discovery of the tunnel\
    \ router.\n   Configured tunnels have many advantages over automatic tunnels.\
    \  The\n   client is explicitly identified and can obtain a stable IPv6 address.\n\
    \   The service provider is also well identified and can be held\n   responsible\
    \ for the quality of the service.  It is possible to route\n   multicast packets\
    \ over the established tunnel.  There is a clear\n   address delegation path,\
    \ which enables easy support for reverse DNS\n   lookups.\n   Automatic tunnels\
    \ generally cannot provide the same level of service.\n   The IPv6 address is\
    \ only as stable as the underlying IPv4 address,\n   the quality of service depends\
    \ on relays operated by third parties,\n   there is typically no support for multicast,\
    \ and there is often no\n   easy way to support reverse DNS lookups (although\
    \ some workarounds\n   are probably possible).  However, automatic tunnels have\
    \ other\n   advantages.  They are obviously easier to configure, since there is\n\
    \   no need for an explicit relation with a tunnel service.  They may\n   also\
    \ be more efficient in some cases, as they allow for \"path\n   optimization\"\
    .\n"
- title: 2.1.1.  Path Optimization in Automatic Tunnels
  contents:
  - "2.1.1.  Path Optimization in Automatic Tunnels\n   In automatic tunnels like\
    \ [TEREDO] and [6TO4], the bulk of the\n   traffic between two nodes using the\
    \ same technology is exchanged on a\n   direct path between the endpoints, using\
    \ the IPv4 services to which\n   the endpoints already subscribe.  By contrast,\
    \ the configured tunnel\n   servers carry all the traffic exchanged by the tunnel\
    \ client.\n   Path optimization is not a big issue if the tunnel server is close\
    \ to\n   the client on the natural path between the client and its peers.\n  \
    \ However, if the tunnel server is operated by a third party, this\n   third party\
    \ will have to bear the cost of provisioning the bandwidth\n   used by the client.\
    \  The associated costs can be significant.\n   These costs are largely absent\
    \ when the tunnels are configured by the\n   same ISP that provides the IPv4 service.\
    \  The ISP can place the\n   tunnel end-points close to the client, i.e., mostly\
    \ on the direct\n   path between the client and its peers.\n"
- title: 2.1.2.  Automatic Tunnels and Relays
  contents:
  - "2.1.2.  Automatic Tunnels and Relays\n   The economics arguments related to path\
    \ optimization favor either\n   configured tunnels provided by the local ISP or\
    \ automatic tunneling\n   regardless of the co-operation of ISPs.  However, automatic\
    \ solutions\n   require that relays be configured throughout the Internet.  If\
    \ a host\n   that obtained connectivity through an automatic tunnel service wants\n\
    \   to communicate with a \"native\" host or with a host using a configured\n\
    \   tunnel, it will need to use a relay service, and someone will have to\n  \
    \ provide and pay for that service.  We cannot escape economic\n   considerations\
    \ for the deployment of these relays.\n   It is desirable to locate these relays\
    \ close to the \"native host\".\n   During the transition period, the native ISPs\
    \ have an interest in\n   providing a relay service for use by their native subscribers.\
    \  Their\n   subscribers will enjoy better connectivity, and will therefore be\n\
    \   happier.  Providing the service does not result in much extra\n   bandwidth\
    \ requirement: the packets are exchanged between the local\n   subscribers and\
    \ the Internet; they are simply using a v6-v4 path\n   instead of a v6-v6 path.\
    \  (The native ISPs do not have an incentive\n   to provide relays for general\
    \ use; they are expected to restrict\n   access to these relays to their customers.)\n\
    \   We should note however that different automatic tunneling techniques\n   have\
    \ different deployment conditions.\n"
- title: 2.1.3.  The Risk of Several Parallel IPv6 Internets
  contents:
  - "2.1.3.  The Risk of Several Parallel IPv6 Internets\n   In an early deployment\
    \ of the Teredo service by Microsoft, the relays\n   are provided by the native\
    \ (or 6to4) hosts themselves.  The native or\n   6to4 hosts are de-facto \"multi-homed\"\
    \ to native and Teredo hosts,\n   although they never publish a Teredo address\
    \ in the DNS or otherwise.\n   When a native host communicates with a Teredo host,\
    \ the first packets\n   are exchanged through the native interface and relayed\
    \ by the Teredo\n   server, while the subsequent packets are tunneled \"end-to-end\"\
    \ over\n   IPv4 and UDP.  This enables deployment of Teredo without having to\n\
    \   field an infrastructure of relays in the network.\n   This type of solution\
    \ carries the implicit risk of developing two\n   parallel IPv6 Internets, one\
    \ native and one using Teredo: in order to\n   communicate with a Teredo-only\
    \ host, a native IPv6 host has to\n   implement a Teredo interface.  The Teredo\
    \ implementations try to\n   mitigate this risk by always preferring native paths\
    \ when available,\n   but a true mitigation requires that native hosts do not\
    \ have to\n   implement the transition technology.  This requires cooperation\
    \ from\n   the IPv6 ISP, who will have to support the relays.  An IPv6 ISP that\n\
    \   really wants to isolate its customers from the Teredo technology can\n   do\
    \ that by providing native connectivity and a Teredo relay.  The\n   ISP's customers\
    \ will not need to implement their own relay.\n   Communication between 6to4 networks\
    \ and native networks uses a\n   different structure.  There are two relays, one\
    \ for each direction of\n   communication.  The native host sends its packets\
    \ through the nearest\n   6to4 router, i.e., the closest router advertising the\
    \ 2002::/16\n   prefix through the IPv6 routing tables; the 6to4 network sends\
    \ its\n   packet through a 6to4 relay that is either explicitly configured or\n\
    \   discovered through the 6to4 anycast address 192.88.99.1\n   [6TO4ANYCAST].\
    \  The experience so far is that simple 6to4 routers are\n   easy to deploy, but\
    \ 6to4 relays are scarce.  If there are too few\n   relays, these relays will\
    \ create a bottleneck.  The communications\n   between 6to4 and native networks\
    \ will be slower than the direct\n   communications between 6to4 hosts.  This\
    \ will create an incentive for\n   native hosts to somehow \"multi-home\" to 6to4,\
    \ de facto creating two\n   parallel Internets, 6to4 and native.  This risk will\
    \ only be\n   mitigated if there is a sufficient deployment of 6to4 relays.\n\
    \   The configured tunnel solutions do not carry this type of risk.\n"
- title: 2.1.4.  Lifespan of Transition Technologies
  contents:
  - "2.1.4.  Lifespan of Transition Technologies\n   A related issue is the lifespan\
    \ of the transition solutions.  Since\n   automatic tunneling technologies enable\
    \ an automatic deployment,\n   there is a risk that some hosts never migrate out\
    \ of the transition.\n   The risk is arguably less for explicit tunnels: the ISPs\
    \ who provide\n   the tunnels have an incentive to replace them with a native\
    \ solution\n   as soon as possible.\n   Many implementations of automatic transition\
    \ technologies incorporate\n   an \"implicit sunset\" mechanism: the hosts will\
    \ not configure a\n   transition technology address if they have native connectivity;\
    \ the\n   address selection mechanisms will prefer native addresses when\n   available.\
    \  The transition technologies will stop being used\n   eventually, when native\
    \ connectivity has been deployed everywhere.\n   However, the \"implicit sunset\"\
    \ mechanism does not provide any hard\n   guarantee that transition will be complete\
    \ at a certain date.\n   Yet, the support of transition technologies has a cost\
    \ for the entire\n   network: native IPv6 ISPS have to support relays in order\
    \ to provide\n   good performance and avoid the \"parallel Internet\" syndrome.\
    \  These\n   costs may be acceptable during an initial deployment phase, but they\n\
    \   can certainly not be supported for an indefinite period.  The\n   \"implicit\
    \ sunset\" mechanisms may not be sufficient to guarantee a\n   finite lifespan\
    \ of the transition.\n"
- title: 2.2.  Cost and Benefits of NAT Traversal
  contents:
  - "2.2.  Cost and Benefits of NAT Traversal\n   During the transition, some hosts\
    \ will be located behind IPv4 NATs.\n   In order to participate in the transition,\
    \ these hosts will have to\n   use a tunneling mechanism designed to traverse\
    \ NAT.\n   We may ask whether NAT traversal should be a generic property of any\n\
    \   transition technology, or whether it makes sense to develop two types\n  \
    \ of technologies, some \"NAT capable\" and some not.  An important\n   question\
    \ is also which kinds of NAT boxes one should be able to\n   traverse.  One should\
    \ probably also consider whether it is necessary\n   to build an IPv6 specific\
    \ NAT traversal mechanism, or whether it is\n   possible to combine an existing\
    \ IPv4 NAT traversal mechanism with\n   some form of IPv6 in IPv4 tunneling. \
    \ There are many IPv4 NAT\n   traversal mechanisms; thus one may ask whether these\
    \ need re-\n   invention, especially when they are already complex.\n   A related\
    \ question is whether the NAT traversal technology should use\n   automatic tunnels\
    \ or configured tunnels.  We saw in the previous\n   section that one can argue\
    \ both sides of this issue.  In fact, there\n   are already deployed automatic\
    \ and configured solutions, so the\n   reality is that we will probably see both.\n"
- title: 2.2.1.  Cost of NAT Traversal
  contents:
  - "2.2.1.  Cost of NAT Traversal\n   NAT traversal technologies generally involve\
    \ encapsulating IPv6\n   packets inside a transport protocol that is known to\
    \ traverse NAT,\n   such as UDP or TCP.  These transport technologies require\n\
    \   significantly more overhead than the simple tunneling over IPv4 used\n   in\
    \ 6to4 or in IPv6 in IPv4 tunnels.  For example, solutions based on\n   UDP require\
    \ the frequent transmission of \"keep alive\" packets to\n   maintain a \"mapping\"\
    \ in the NAT; solutions based on TCP may not\n   require such a mechanism, but\
    \ they incur the risk of \"head of queue\n   blocking\", which may translate in\
    \ poor performance.  Given the\n   difference in performance, it makes sense to\
    \ consider two types of\n   transition technologies, some capable of traversing\
    \ NAT and some\n   aiming at the best performance.\n"
- title: 2.2.2.  Types of NAT
  contents:
  - "2.2.2.  Types of NAT\n   There are many kinds of NAT on the market.  Different\
    \ models\n   implement different strategies for address and port allocations,\
    \ and\n   different types of timers.  It is desirable to find solutions that\n\
    \   cover \"almost all\" models of NAT.\n   A configured tunnel solution will\
    \ generally make fewer hypotheses on\n   the behavior of the NAT than an automatic\
    \ solution.  The configured\n   solutions only need to establish a connection\
    \ between an internal\n   node and a server; this communication pattern is supported\
    \ by pretty\n   much all NAT configurations.  The variability will come from the\
    \ type\n   of transport protocols that the NAT supports, especially when the NAT\n\
    \   also implements \"firewall\" functions.  Some models will allow\n   establishment\
    \ of a single \"protocol 41\" tunnel, while some may\n   prevent this type of\
    \ transmission.  Some models will allow UDP\n   transmission, while other may\
    \ only allow TCP, or possibly HTTP.\n   The automatic solutions have to rely on\
    \ a \"lowest common denominator\"\n   that is likely to be accepted by most models\
    \ of NAT.  In practice,\n   this common denominator is UDP.  UDP based NAT traversal\
    \ is required\n   by many applications, e.g., networked games or voice over IP.\
    \  The\n   experience shows that most recent \"home routers\" are designed to\n\
    \   support these applications.  In some edge cases, the automatic\n   solutions\
    \ will require explicit configuration of a port in the home\n   router, using\
    \ the so-called \"DMZ\" functions; however, these functions\n   are hard to use\
    \ in an \"unmanaged network\" scenario.\n"
- title: 2.2.3.  Reuse of Existing Mechanisms
  contents:
  - "2.2.3.  Reuse of Existing Mechanisms\n   NAT traversal is not a problem for IPv6\
    \ alone.  Many IPv4\n   applications have developed solutions, or kludges, to\
    \ enable\n   communication across a NAT.\n   Virtual Private Networks are established\
    \ by installing tunnels\n   between VPN clients and VPN servers.  These tunnels\
    \ are designed\n   today to carry IPv4, but in many cases could easily carry IPv6.\
    \  For\n   example, the proposed IETF standard, L2TP, includes a PPP layer that\n\
    \   can encapsulate IPv6 as well as IPv4.  Several NAT models are\n   explicitly\
    \ designed to pass VPN traffic, and several VPN solutions\n   have special provisions\
    \ to traverse NAT.  When we study the\n   establishment of configured tunnels\
    \ through NAT, it makes a lot of\n   sense to consider existing VPN solutions.\n\
    \   [STUN] is a protocol designed to facilitate the establishment of UDP\n   associations\
    \ through NAT, by letting nodes behind NAT discover their\n   \"external\" address.\
    \  The same function is required for automatic\n   tunneling through NAT, and\
    \ one could consider reusing the STUN\n   specification as part of an automatic\
    \ tunneling solution.  However,\n   the automatic solutions also require a mechanism\
    \ of bubbles to\n   establish the initial path through a NAT.  This mechanism\
    \ is not\n   present in STUN.  It is not clear that a combination of STUN and\
    \ a\n   bubble mechanism would have a technical advantage over a solution\n  \
    \ specifically designed for automatic tunneling through NAT.\n"
- title: 2.3.  Development of Transition Mechanisms
  contents:
  - "2.3.  Development of Transition Mechanisms\n   The previous sections make the\
    \ case for the development of four\n   transition mechanism, covering the following\
    \ 4 configurations:\n      -  Configured tunnel over IPv4 in the absence of NAT;\n\
    \      -  Automatic tunnel over IPv4 in the absence of NAT;\n      -  Configured\
    \ tunnel across a NAT;\n      -  Automatic tunnel across a NAT.\n   Teredo is\
    \ an example of an already designed solution for automatic\n   tunnels across\
    \ a NAT; 6to4 is an example of a solution for automatic\n   tunnels over IPv4\
    \ in the absence of NAT.\n   All solutions should be designed to meet generic\
    \ requirements such as\n   security, scalability, support for reverse name lookup,\
    \ or simple\n   management.  In particular, automatic tunneling solutions may\
    \ need to\n   be augmented with a special purpose reverse DNS lookup mechanism,\n\
    \   while configured tunnel solutions would benefit from an automatic\n   service\
    \ configuration mechanism.\n"
- title: 3.  Meeting Case A Requirements
  contents:
  - "3.  Meeting Case A Requirements\n   In case A, isolated hosts need to acquire\
    \ some form of connectivity.\n   In this section, we first evaluate how mechanisms\
    \ already defined or\n   being worked on in the IETF meet this requirement.  We\
    \ then consider\n   the \"remaining holes\" and recommend specific developments.\n"
- title: 3.1.  Evaluation of Connectivity Mechanisms
  contents:
  - "3.1.  Evaluation of Connectivity Mechanisms\n   In case A, IPv6 capable hosts\
    \ seek IPv6 connectivity in order to\n   communicate with applications in the\
    \ global IPv6 Internet.  The\n   connectivity requirement can be met using either\
    \ configured tunnels\n   or automatic tunnels.\n   If the host is located behind\
    \ a NAT, the tunneling technology should\n   be designed to traverse NAT; tunneling\
    \ technologies that do not\n   support NAT traversal can obviously be used if\
    \ the host is not\n   located behind a NAT.\n   When the local ISP is willing\
    \ to provide a configured tunnel\n   solution, we should make it easy for the\
    \ host in case A to use it.\n   The requirements for such a service will be presented\
    \ in another\n   document.\n   An automatic solution like Teredo appears to be\
    \ a good fit for\n   providing IPv6 connectivity to hosts behind NAT, in case\
    \ A of IPv6\n   deployment.  The service is designed for minimizing the cost of\n\
    \   deploying the server, which matches the requirement of minimizing the\n  \
    \ cost of the \"supporting infrastructure\".\n"
- title: 3.2.  Security Considerations in Case A
  contents:
  - "3.2.  Security Considerations in Case A\n   A characteristic of case A is that\
    \ an isolated host acquires global\n   IPv6 connectivity, using either Teredo\
    \ or an alternative tunneling\n   mechanism.  If no precaution is taken, there\
    \ is a risk of exposing to\n   the global Internet some applications and services\
    \ that are only\n   expected to serve local hosts, e.g., those located behind\
    \ the NAT\n   when a NAT is present.  Developers and administrators should make\n\
    \   sure that the global IPv6 connectivity is restricted to only those\n   applications\
    \ that are expressly designed for global Internet\n   connectivity.  The users\
    \ should be able to configure which\n   applications get IPv6 connectivity to\
    \ the Internet and which should\n   not.\n   Any solution to the NAT traversal\
    \ problem is likely to involve\n   relays.  There are concerns that improperly\
    \ designed protocols or\n   improperly managed relays could open new avenues for\
    \ attacks against\n   Internet services.  This issue should be addressed and mitigated\
    \ in\n   the design of the NAT traversal protocols and in the deployment\n   guides\
    \ for relays.\n"
- title: 4.  Meeting Case B Requirements
  contents:
  - "4.  Meeting Case B Requirements\n   In case B, we assume that the gateway and\
    \ the ISP are both dual-\n   stack.  The hosts on the local network may be IPv4-only,\
    \ dual-stack,\n   or IPv6-only.  The main requirements are: prefix delegation\
    \ and name\n   resolution.  We also study the potential need for communication\n\
    \   between IPv4 and IPv6 hosts, and conclude that a dual-stack approach\n   is\
    \ preferable.\n"
- title: 4.1.  Connectivity
  contents:
  - "4.1.  Connectivity\n   The gateway must be able to acquire an IPv6 prefix, delegated\
    \ by the\n   ISP.  This can be done through explicit prefix delegation (e.g.,\n\
    \   [DHCPV6, PREFIXDHCPV6]), or if the ISP is advertising a /64 prefix on\n  \
    \ the link, such a link can be extended by the use of an ND proxy or a\n   bridge.\n\
    \   An ND proxy can also be used to extend a /64 prefix to multiple\n   physical\
    \ links of different properties (e.g., an Ethernet and a PPP\n   link).\n"
- title: 4.1.1.  Extending a Subnet to Span Multiple Links
  contents:
  - "4.1.1.  Extending a Subnet to Span Multiple Links\n   A /64 subnet can be extended\
    \ to span multiple physical links using a\n   bridge or ND proxy.  Bridges can\
    \ be used when bridging multiple\n   similar media (mainly, Ethernet segments).\
    \  On the other hand, an ND\n   proxy must be used if a /64 prefix has to be shared\
    \ across media\n   (e.g., an upstream PPP link and a downstream Ethernet), or\
    \ if an\n   interface cannot be put into promiscuous mode (e.g., an upstream\n\
    \   wireless link).\n   Extending a single subnet to span from the ISP to all\
    \ of the\n   unmanaged network is not recommended, and prefix delegation should\
    \ be\n   used when available.  However, sometimes it is unavoidable.  In\n   addition,\
    \ sometimes it's necessary to extend a subnet in the\n   unmanaged network, at\
    \ the \"customer-side\" of the gateway, and\n   changing the topology using routing\
    \ might require too much expertise.\n   The ND proxy method results in the sharing\
    \ of the same prefix over\n   several links, a procedure generally known as \"\
    multi-link subnet\".\n   This sharing has effects on neighbor discovery protocols,\
    \ and\n   possibly also on other protocols such as LLMNR [LLMNR] that rely on\n\
    \   \"link local multicast\".  These effects need to be carefully studied.\n"
- title: 4.1.2.  Explicit Prefix Delegation
  contents:
  - "4.1.2.  Explicit Prefix Delegation\n   Several networks have already started\
    \ using an explicit prefix\n   delegation mechanism using DHCPv6.  In this mechanism,\
    \ the gateway\n   uses a DHCP request to obtain an adequate prefix from a DHCP\
    \ server\n   managed by the Internet Service Provider.  The DHCP request is\n\
    \   expected to carry proper identification of the gateway, which enables\n  \
    \ the ISP to implement prefix delegation policies.  It is expected that\n   the\
    \ ISP assigns a /48 to the customer.  The gateway should\n   automatically assign\
    \ /64s out of this /48 to its internal links.\n   DHCP is insecure unless authentication\
    \ is used.  This may be a\n   particular problem if the link between gateway and\
    \ ISP is shared by\n   multiple subscribers.  DHCP specification includes authentication\n\
    \   options, but the operational procedures for managing the keys and\n   methods\
    \ for sharing the required information between the customer and\n   the ISP are\
    \ unclear.  To be secure in such an environment in\n   practice, the practical\
    \ details of managing the DHCP authentication\n   need to be analyzed.\n"
- title: 4.1.3.  Recommendation
  contents:
  - "4.1.3.  Recommendation\n   The ND proxy and DHCP methods appear to have complementary\
    \ domains of\n   application.  ND proxy is a simple method that corresponds well\
    \ to\n   the \"informal sharing\" of a link, while explicit delegation provides\n\
    \   strong administrative control.  Both methods require development:\n   specify\
    \ the interaction with neighbor discovery for ND proxy; provide\n   security guidelines\
    \ for explicit delegation.\n"
- title: 4.2.  Communication Between IPv4-only and IPv6-capable Nodes
  contents:
  - "4.2.  Communication Between IPv4-only and IPv6-capable Nodes\n   During the transition\
    \ phase from IPv4 to IPv6, there will be IPv4-\n   only, dual-stack, and IPv6-only\
    \ nodes.  In theory, there may be a\n   need to provide some interconnection services\
    \ so that IPv4-only and\n   IPv6-only hosts can communicate.  However, it is hard\
    \ to develop a\n   translation service that does not have unwanted side effects\
    \ on the\n   efficiency or the security of communications.  As a consequence,\
    \ the\n   authors recommend that, if a device requires communication with\n  \
    \ IPv4-only hosts, this device implements an IPv4 stack.  The only\n   devices\
    \ that should have IPv6-only connectivity are those that are\n   intended to only\
    \ communicate with IPv6 hosts.\n"
- title: 4.3.  Resolution of Names to IPv6 Addresses
  contents:
  - "4.3.  Resolution of Names to IPv6 Addresses\n   There are three types of name\
    \ resolution services that should be\n   provided in case B: local IPv6 capable\
    \ hosts must be able to obtain\n   the IPv6 addresses of correspondent hosts on\
    \ the Internet, they\n   should be able to publish their address if they want\
    \ to be accessed\n   from the Internet, and they should be able to obtain the\
    \ IPv6 address\n   of other local IPv6 hosts.  These three problems are described\
    \ in the\n   next sections.  Operational considerations and issues with IPv6 DNS\n\
    \   are analyzed in [DNSOPV6].\n"
- title: 4.3.1.  Provisioning the Address of a DNS Resolver
  contents:
  - "4.3.1.  Provisioning the Address of a DNS Resolver\n   In an unmanaged environment,\
    \ IPv4 hosts usually obtain the address of\n   the local DNS resolver through\
    \ DHCPv4; the DHCPv4 service is\n   generally provided by the gateway.  The gateway\
    \ will also use DHCPv4\n   to obtain the address of a suitable resolver from the\
    \ local Internet\n   service provider.\n   The DHCPv4 solution will suffice in\
    \ practice for the gateway and also\n   for the dual-stack hosts.  There is evidence\
    \ that DNS servers\n   accessed over IPv4 can serve arbitrary DNS records, including\
    \ AAAA\n   records.\n   Just using DHCPv4 will not be an adequate solution for\
    \ IPv6-only\n   local hosts.  The DHCP working group has defined how to use\n\
    \   (stateless) DHCPv6 to obtain the address of the DNS server\n   [DNSDHCPV6].\
    \  DHCPv6 and several other possibilities are being looked\n   at in the DNSOP\
    \ Working Group.\n"
- title: 4.3.2.  Publishing IPv6 Addresses to the Internet
  contents:
  - "4.3.2.  Publishing IPv6 Addresses to the Internet\n   IPv6 capable hosts may\
    \ be willing to provide services accessible from\n   the global Internet.  They\
    \ will thus need to publish their address in\n   a server that is publicly available.\
    \  IPv4 hosts in unmanaged\n   networks have a similar problem today, which they\
    \ solve using one of\n   three possible solutions:\n      *  Manual configuration\
    \ of a stable address in a DNS server;\n      *  Dynamic configuration using the\
    \ standard dynamic DNS protocol;\n      *  Dynamic configuration using an ad hoc\
    \ protocol.\n   Manual configuration of stable addresses is not satisfactory in\
    \ an\n   unmanaged IPv6 network: the prefix allocated to the gateway may or\n\
    \   may not be stable, and in any case, copying long hexadecimal strings\n   through\
    \ a manual procedure is error prone.\n   Dynamic configuration using the same\
    \ type of ad hoc protocols that\n   are common today is indeed possible, but the\
    \ IETF should encourage\n   the use of standard solutions based on Dynamic DNS\
    \ (DDNS).\n"
- title: 4.3.3.  Resolving the IPv6 Addresses of Local Hosts
  contents:
  - "4.3.3.  Resolving the IPv6 Addresses of Local Hosts\n   There are two possible\
    \ ways of resolving the IPv6 addresses of local\n   hosts: one may either publish\
    \ the IPv6 addresses in a DNS server for\n   the local domain, or one may use\
    \ a peer-to-peer address resolution\n   protocol such as LLMNR.\n   When a DNS\
    \ server is used, this server could in theory be located\n   anywhere on the Internet.\
    \  There is however a very strong argument\n   for using a local server, which\
    \ will remain reachable even if the\n   network connectivity is down.\n   The\
    \ use of a local server requires that IPv6 capable hosts discover\n   this server,\
    \ as explained in 4.3.1, and then that they use a protocol\n   such as DDNS to\
    \ publish their IPv6 addresses to this server.  In\n   practice, the DNS address\
    \ discovered in 4.3.1 will often be the\n   address of the gateway itself, and\
    \ the local server will thus be the\n   gateway.\n   An alternative to using a\
    \ local server is LLMNR, which uses a\n   multicast mechanism to resolve DNS requests.\
    \  LLMNR does not require\n   any service from the gateway, and also does not\
    \ require that hosts\n   use DDNS.  An important problem is that some networks\
    \ only have\n   limited support for multicast transmission, for example, multicast\n\
    \   transmission on 802.11 network is error prone.  However, unmanaged\n   networks\
    \ also use multicast for neighbor discovery [NEIGHBOR]; the\n   requirements of\
    \ ND and LLMNR are similar; if a link technology\n   supports use of ND, it can\
    \ also enable use of LLMNR.\n"
- title: 4.3.4.  Recommendations for Name Resolution
  contents:
  - "4.3.4.  Recommendations for Name Resolution\n   The IETF should quickly provide\
    \ a recommended procedure for\n   provisioning the DNS resolver in IPv6-only hosts.\n\
    \   The most plausible candidate for local name resolution appears to be\n   LLMNR;\
    \ the IETF should quickly proceed to the standardization of that\n   protocol.\n"
- title: 4.4.  Security Considerations in Case B
  contents:
  - "4.4.  Security Considerations in Case B\n   The case B solutions provide global\
    \ IPv6 connectivity to the local\n   hosts.  Removing the limit to connectivity\
    \ imposed by NAT is both a\n   feature and a risk.  Implementations should carefully\
    \ limit global\n   IPv6 connectivity to only those applications that are specifically\n\
    \   designed to operate on the global Internet.  Local applications, for\n   example,\
    \ could be restricted to only use link-local addresses, or\n   addresses whose\
    \ most significant bits match the prefix of the local\n   subnet, e.g., a prefix\
    \ advertised as \"on link\" in a local router\n   advertisement.  There is a debate\
    \ as to whether such restrictions\n   should be \"per-site\" or \"per-link\",\
    \ but this is not a serious issue\n   when an unmanaged network is composed of\
    \ a single link.\n"
- title: 5.  Meeting Case C Requirements
  contents:
  - "5.  Meeting Case C Requirements\n   Case C is very similar to case B, the difference\
    \ being that the ISP\n   is not dual-stack.  The gateway must thus use some form\
    \ of tunneling\n   mechanism to obtain IPv6 connectivity, and an address prefix.\n\
    \   A simplified form of case B is a single host with a global IPv4\n   address,\
    \ i.e., with a direct connection to the IPv4 Internet.  This\n   host will be\
    \ able to use the same tunneling mechanisms as a gateway.\n"
- title: 5.1.  Connectivity
  contents:
  - "5.1.  Connectivity\n   Connectivity in case C requires some form of tunneling\
    \ of IPv6 over\n   IPv4.  The various tunneling solutions are discussed in section\
    \ 2.\n   The requirements of case C can be solved by an automatic tunneling\n\
    \   mechanism such as 6to4 [6TO4].  An alternative may be the use of a\n   configured\
    \ tunnels mechanism [TUNNELS], but as the local ISP is not\n   IPv6-enabled, this\
    \ may not be feasible.  The practical conclusion of\n   our analysis is that \"\
    upgraded gateways\" will probably support the\n   6to4 technology, and will have\
    \ an optional configuration option for\n   \"configured tunnels\".\n   The tunnel\
    \ broker technology should be augmented to include support\n   for some form of\
    \ automatic configuration.\n   Due to concerns with potential overload of public\
    \ 6to4 relays, the\n   6to4 implementations should include a configuration option\
    \ that\n   allows the user to take advantage of specific relays.\n"
- title: 6.  Meeting the Case D Requirements
  contents:
  - "6.  Meeting the Case D Requirements\n   In case D, the ISP only provides IPv6\
    \ services.\n"
- title: 6.1.  IPv6 Addressing Requirements
  contents:
  - "6.1.  IPv6 Addressing Requirements\n   We expect IPv6 addressing in case D to\
    \ proceed similarly to case B,\n   i.e., use either an ND proxy or explicit prefix\
    \ delegation through\n   DHCPv6 to provision an IPv6 prefix on the gateway.\n"
- title: 6.2.  IPv4 Connectivity Requirements
  contents:
  - "6.2.  IPv4 Connectivity Requirements\n   Local IPv4 capable hosts may still want\
    \ to access IPv4-only services.\n   The proper way to do this for dual-stack nodes\
    \ in the unmanaged\n   network is to develop a form of \"IPv4 over IPv6\" tunneling.\
    \  There\n   are no standardized solutions and the IETF has devoted very little\n\
    \   effort to this issue, although there is ongoing work with [DSTM] and\n   [TSP].\
    \  A solution needs to be standardized.  The standardization\n   will have to\
    \ cover configuration issues, i.e., how to provision the\n   IPv4 capable hosts\
    \ with the address of the local IPv4 tunnel servers.\n"
- title: 6.3.  Naming Requirements
  contents:
  - "6.3.  Naming Requirements\n   Naming requirements are similar to case B, with\
    \ one difference: the\n   gateway cannot expect to use DHCPv4 to obtain the address\
    \ of the DNS\n   resolver recommended by the ISP.\n"
- title: 7.  Recommendations
  contents:
  - "7.  Recommendations\n   After a careful analysis of the possible solutions, we\
    \ can list a set\n   of recommendations for the V6OPS working group:\n      1.\
    \ To meet case A and case C requirements, we need to develop, or\n         continue\
    \ to develop, four types of tunneling technologies:\n         automatic tunnels\
    \ without NAT traversal such as [6TO4],\n         automatic tunnels with NAT traversal\
    \ such as [TEREDO],\n         configured tunnels without NAT traversal such as\
    \ [TUNNELS,\n         TSP], and configured tunnels with NAT traversal.\n     \
    \ 2. To facilitate the use of configured tunnels, we need a\n         standardized\
    \ way for hosts or gateways to discover the tunnel\n         server or tunnel\
    \ broker that may have been configured by the\n         local ISP.\n      3. To\
    \ meet case B \"informal prefix sharing\" requirements, we would\n         need\
    \ a standardized way to perform \"ND proxy\", possibly as part\n         of a\
    \ \"multi-link subnet\" specification.  (The explicit prefix\n         delegation\
    \ can be accomplished through [PREFIXDHCPV6].)\n      4. To meet case B naming\
    \ requirements, we need to proceed with the\n         standardization of LLMNR.\
    \  (The provisioning of DNS parameters\n         can be accomplished through [DNSDHCPV6].)\n\
    \      5. To meet case D IPv4 connectivity requirement, we need to\n         standardize\
    \ an IPv4 over IPv6 tunneling mechanism, as well as\n         the associated configuration\
    \ services.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   This memo describes the general requirements\
    \ for transition\n   mechanisms.  Specific security issues should be studied and\
    \ addressed\n   during the development of the specific mechanisms.\n   When hosts\
    \ which have been behind a NAT are exposed to IPv6, the\n   security assumptions\
    \ may change radically.  This is mentioned in\n   sections 3.2 and 4.4.  One way\
    \ to cope with that is to have a default\n   firewall with a NAT-like access configuration;\
    \ however, any such\n   firewall configuration should allow for easy authorization\
    \ of those\n   applications that actually need global connectivity.  One might\
    \ also\n   restrict applications which can benefit from global IPv6 connectivity\n\
    \   on the nodes.\n   Security policies should be consistent between IPv4 and\
    \ IPv6.  A\n   policy which prevents use of v6 while allowing v4 will discourage\n\
    \   migration to v6 without significantly improving security.  Developers\n  \
    \ and administrators should make sure that global Internet connectivity\n   through\
    \ either IPv4 or IPv6 is restricted to only those applications\n   that are expressly\
    \ designed for global Internet connectivity.\n   Several transition technologies\
    \ require relays.  There are concerns\n   that improperly designed protocols or\
    \ improperly managed relays could\n   open new avenues for attacks against Internet\
    \ services.  This issue\n   should be addressed and mitigated in the design of\
    \ the transition\n   technologies and in the deployment guides for relays.\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   This memo has benefited from the comments of Margaret\
    \ Wasserman,\n   Pekka Savola, Chirayu Patel, Tony Hain, Marc Blanchet, Ralph\
    \ Droms,\n   Bill Sommerfeld, and Fred Templin.  Tim Chown provided a lot of the\n\
    \   analysis for the tunneling requirements work.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [UNMANREQ]     Huitema, C., Austein, R., Satapati,\
    \ S., and R. van der\n                  Pol, \"Unmanaged Networks IPv6 Transition\
    \ Scenarios\",\n                  RFC 3750, April 2004.\n   [IPV6]         Deering,\
    \ S. and R. Hinden, \"Internet Protocol, Version\n                  6 (IPv6) Specification\"\
    , RFC 2460, December 1998.\n   [NEIGHBOR]     Narten, T., Nordmark, E., and W.\
    \ Simpson, \"Neighbor\n                  Discovery for IP Version 6 (IPv6)\",\
    \ RFC 2461, December\n                  1998.\n   [6TO4]         Carpenter, B.\
    \ and K. Moore, \"Connection of IPv6\n                  Domains via IPv4 Clouds\"\
    , RFC 3056, February 2001.\n   [6TO4ANYCAST]  Huitema, C., \"An Anycast Prefix\
    \ for 6to4 Relay\n                  Routers\", RFC 3068, June 2001.\n   [TUNNELS]\
    \      Durand, A., Fasano, P., Guardini, I., and D. Lento,\n                 \
    \ \"IPv6 Tunnel Broker\", RFC 3053, January 2001.\n   [DHCPV6]       Droms, R.,\
    \ Bound, J., Volz, B., Lemon, T., Perkins,\n                  C., and M. Carney,\
    \ \"Dynamic Host Configuration\n                  Protocol for IPv6 (DHCPv6)\"\
    , RFC 3315, July 2003.\n   [DNSDHCPV6]    Droms, R., \"DNS Configuration options\
    \ for Dynamic Host\n                  Configuration Protocol for IPv6 (DHCPv6)\"\
    , RFC 3646,\n                  December 2003.\n   [PREFIXDHCPV6] Troan, O. and\
    \ R. Droms, \"IPv6 Prefix Options for\n                  Dynamic Host Configuration\
    \ Protocol (DHCP) version 6\",\n                  RFC 3633, December 2003.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [STUN]         Rosenberg, J., Weinberger, J.,\
    \ Huitema, C., and R.\n                  Mahy, \"STUN - Simple Traversal of User\
    \ Datagram\n                  Protocol (UDP) Through Network Address Translators\n\
    \                  (NATs)\", RFC 3489, March 2003.\n   [DNSOPV6]      Durand,\
    \ A., Ihren, J., and P. Savola. \"Operational\n                  Considerations\
    \ and Issues with IPv6 DNS\", Work in\n                  Progress.\n   [LLMNR]\
    \        Esibov, L., Aboba, B., and D. Thaler, \"Linklocal\n                 \
    \ Multicast Name Resolution (LLMNR)\", Work in Progress.\n   [TSP]          Blanchet,\
    \ M., \"IPv6 Tunnel Broker with the Tunnel\n                  Setup Protocol(TSP)\"\
    , Work in Progress.\n   [DSTM]         Bound, J., \"Dual Stack Transition Mechanism\"\
    , Work in\n                  Progress.\n   [TEREDO]       Huitema, C., \"Teredo:\
    \ Tunneling IPv6 over UDP through\n                  NATs\", Work in Progress.\n"
- title: 11.  Authors' Addresses
  contents:
  - "11.  Authors' Addresses\n   Christian Huitema\n   Microsoft Corporation\n   One\
    \ Microsoft Way\n   Redmond, WA 98052-6399\n   EMail: huitema@microsoft.com\n\
    \   Rob Austein\n   Internet Systems Consortium\n   950 Charter Street\n   Redwood\
    \ City, CA 94063\n   USA\n   EMail: sra@isc.org\n   Suresh Satapati\n   Cisco\
    \ Systems, Inc.\n   San Jose, CA 95134\n   USA\n   EMail: satapati@cisco.com\n\
    \   Ronald van der Pol\n   NLnet Labs\n   Kruislaan 419\n   1098 VA Amsterdam\n\
    \   NL\n   EMail: Ronald.vanderPol@nlnetlabs.nl\n"
- title: 12.  Full Copyright Statement
  contents:
  - "12.  Full Copyright Statement\n   Copyright (C) The Internet Society (2004).\n\
    \   This document is subject to the rights, licenses and restrictions\n   contained\
    \ in BCP 78, and except as set forth therein, the authors\n   retain all their\
    \ rights.\n   This document and the information contained herein are provided\
    \ on an\n   \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/S HE\n  \
    \ REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE\n   INTERNET\
    \ ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR\n   IMPLIED, INCLUDING\
    \ BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL\
    \ NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR\
    \ FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ IETF's procedures with respect to rights in IETF Documents can\n   be found\
    \ in BCP 78 and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat\
    \ and any\n   assurances of licenses to be made available, or the result of an\n\
    \   attempt made to obtain a general license or permission for the use of\n  \
    \ such proprietary rights by implementers or users of this\n   specification can\
    \ be obtained from the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n\
    \   The IETF invites any interested party to bring to its attention any\n   copyrights,\
    \ patents or patent applications, or other proprietary\n   rights that may cover\
    \ technology that may be required to implement\n   this standard.  Please address\
    \ the information to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
