- title: __initial_text__
  contents:
  - '                      User-Defined Errors for RSVP

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   The Resource ReserVation Protocol (RSVP) defines an ERROR_SPEC object\n\
    \   for communicating errors.  That object has a defined format that\n   permits\
    \ the definition of 256 error codes.  As RSVP has been\n   developed and extended,\
    \ the convention has been to be conservative in\n   defining new error codes.\
    \  Further, no provision for user-defined\n   errors exists in RSVP.\n   This\
    \ document defines a USER_ERROR_SPEC to be used in addition to the\n   ERROR_SPEC\
    \ to carry additional user information related to errors.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Resource ReserVation Protocol (RSVP) [RFC2205] defines\
    \ an\n   ERROR_SPEC object for communicating errors.  That object has a\n   defined\
    \ format that permits the definition of 256 error codes.  As\n   RSVP has been\
    \ developed and extended, the convention has been to be\n   conservative in communicating\
    \ errors.  Further, no provision for user\n   defined errors exists in RSVP.\n\
    \   When developing extensions to RSVP, it is often useful for those\n   implementing\
    \ to define error messages to aid both in the initial\n   debugging and in testing\
    \ against older versions or other\n   implementations.\n   This document defines\
    \ a new RSVP object to permit user-defined errors\n   to be communicated.  This\
    \ will enable organizations to define errors\n   that they can use for internal\
    \ development.  These error values could\n   also be shared with the community\
    \ at large to aid in promoting\n   interoperability between diverse implementations.\n\
    \   RSVP PathErr and ResvErr messages require the presence of an\n   ERROR_SPEC\
    \ object ([RFC2205]).  [RFC3473] defines the Notify message\n   that also requires\
    \ the presence of an ERROR_SPEC object.  In order to\n   not change the mandatory\
    \ contents of these messages, this document\n   defines a new error code value\
    \ that indicates that the new object is\n   present and carries a user-defined\
    \ error code.\n   Note that the ResvConf message defined in [RFC2205] also carries\
    \ an\n   ERROR_SPEC object.  But this usage of the object does not carry\n   meaningful\
    \ Error Codes or Error Values and so the extensions defined\n   in this document\
    \ are not applicable to that message.\n"
- title: 1.1.  Conventions
  contents:
  - "1.1.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ RFC 2119 [RFC2119].\n"
- title: 2.  User-Defined Error
  contents:
  - "2.  User-Defined Error\n   A new Error Code is defined for use in an ERROR_SPEC\
    \ object.\n      Error Code = 33: User Error Spec\n      This error code is used\
    \ to signal the presence of a\n      USER_ERROR_SPEC.  One Error Value is defined\
    \ as follows.\n        Error Value 0 = Further details in User Error Spec\n  \
    \      Further error values may be defined in future specifications.\n   When\
    \ sending this error code, a USER_ERROR_SPEC object MUST be\n   included in the\
    \ PathErr, ResvErr, or Notify message.\n"
- title: 3.  USER_ERROR_SPEC Class
  contents:
  - "3.  USER_ERROR_SPEC Class\n   A new RSVP object class called USER_ERROR_SPEC\
    \ is defined.  To\n   support backwards compatibility, its class number is in\
    \ the range\n   192-247.  As defined in [RFC2205], implementations that do not\n\
    \   understand such an object will forward it unmodified.\n   USER_ERROR_SPEC\
    \ object: Class = 194, C-Type = 1\n       0                   1              \
    \     2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1\n      +---------------+---------------+---------------+---------------+\n\
    \      |                       Enterprise Number                       |\n   \
    \   +---------------+---------------+---------------+---------------+\n      |\
    \    Sub Org    |  Err Desc Len |        User Error Value       |\n      +---------------+---------------+---------------+---------------+\n\
    \      |                                                               |\n   \
    \   ~                       Error Description                       ~\n      |\
    \                                                               |\n      +---------------+---------------+---------------+---------------+\n\
    \      |                                                               |\n   \
    \   ~                     User-Defined Subobjects                   ~\n      |\
    \                                                               |\n      +---------------+---------------+---------------+---------------+\n\
    \      Enterprise Number\n         A unique identifier of an organization encoded\
    \ as a 32-bit\n         integer.  Enterprise Numbers (sometimes known as Private\n\
    \         Enterprise Numbers) are assigned by IANA and managed on a first\n  \
    \       come first served basis through the IANA registry named\n         \"Enterprise\
    \ Numbers\" [RFC2578].\n      Sub Org\n         A unique identifier of an organization\
    \ encoded as an 8-bit\n         integer.  An organization MAY use this field to\
    \ create\n         independent Error Value spaces.  This is intended to facilitate\n\
    \         teams that are doing parallel development.  If independent\n       \
    \  spaces are not required, this field SHOULD be set to zero.\n      Err Desc\
    \ Len\n         The length of the error description in the Error Description\n\
    \         field in bytes excluding any padding.  Zero is a valid length\n    \
    \     if no error description is supplied.\n      User Error Value\n         A\
    \ 16-bit integer.  The meaning is specified by the\n         (sub-)organization\
    \ indicated by the Enterprise Number and Sub\n         Org fields.\n      Error\
    \ Description\n         A string of characters padded with nulls (0x00) to a multiple\n\
    \         of 4 bytes.  According to the guidance in [RFC2277], this\n        \
    \ string MUST use UTF-8/Net-Unicode encoding [RFC5198].\n         Furthermore,\
    \ it is RECOMMENDED that implementations limit the\n         strings that they\
    \ generate to single-line printable US-ASCII\n         [ASCII] whenever feasible\
    \ to improve the likelihood of easy use\n         by the recipient.\n        \
    \ If the Err Desc Len is zero, then no bytes are supplied.\n         Note that\
    \ the content of this field is implementation-specific.\n         It is typically\
    \ printable, but might not be shown to all users\n         in all implementations\
    \ (because of character set choice).\n         Therefore, the content of the field\
    \ SHOULD be limited to\n         supplementary information and SHOULD NOT contain\
    \ information\n         critical to operating the network.  Critical information\
    \ is\n         present in the User Error Value field.\n      User-Defined Subobjects\n\
    \         User-defined subobjects MAY be included.  The generic format of\n  \
    \       subobjects is specified in Section 3.1.  The semantics of a\n        \
    \ subobject is indicated by the Type field, but the semantics,\n         format,\
    \ and contents of the Value field are specified by the\n         (sub-)organization\
    \ indicated by the Enterprise Number and Sub\n         Org fields of this object.\n"
- title: 3.1.  Subobjects
  contents:
  - "3.1.  Subobjects\n   Each subobject is encoded as a TLV in the following format:\n\
    \       0                   1\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-------------//----------------+\n\
    \      |     Type      |     Length    | (Subobject contents)          |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-------------//----------------+\n      Type\n\
    \         An 8-bit number assigned by the (sub-)organization indicated by\n  \
    \       the Enterprise Number and Sub Org fields of the USER_ERROR_SPEC\n    \
    \     object.\n      Length\n         The Length contains the total length of\
    \ the subobject in bytes,\n         including the Type and Length fields.  The\
    \ Length MUST be at\n         least 4, and MUST be a multiple of 4.\n"
- title: 4.  Procedures for Using the User Error Spec
  contents:
  - '4.  Procedures for Using the User Error Spec

    '
- title: 4.1.  Procedures for Sending the User Error Spec
  contents:
  - "4.1.  Procedures for Sending the User Error Spec\n   A USER_ERROR_SPEC object\
    \ MAY be included in any PathErr, ResvErr, or\n   Notify message for any defined\
    \ error code.  The Enterprise Number\n   MUST be a valid value assigned by IANA\
    \ from the \"Enterprise Numbers\"\n   registry.\n   As specified in [RFC2205]\
    \ and [RFC3473], an ERROR_SPEC object with a\n   valid error code MUST be included\
    \ in all PathErr, ResvErr, and Notify\n   messages.  This rule is not changed\
    \ by these procedures even when a\n   USER_ERROR_SPEC object is included.  If\
    \ no other error code applies,\n   the Error Code in the ERROR_SPEC object MUST\
    \ be set to \"User Error\n   Spec\" as defined in Section 2 of this document.\
    \  When the Error Code\n   in the ERROR_SPEC object is set to \"User Error Spec\"\
    , the Error Value\n   sub-code SHOULD be set to \"Further details in User Error\
    \ Spec\" as\n   defined in Section 2, but further Error Value sub-codes may be\n\
    \   defined in future specifications.\n"
- title: 4.2.  Procedures for Receiving the User Error Spec
  contents:
  - "4.2.  Procedures for Receiving the User Error Spec\n   It is RECOMMENDED that\
    \ implementations that receive a PathErr,\n   ResvErr, or Notify message carrying\
    \ a USER_ERROR_SPEC object log (at\n   a minimum) the Enterprise Number, Sub-organization,\
    \ User Error Value,\n   and Error Description.  Note that the character set used\
    \ for the\n   Error Description may mean that it might not be suitable for display\n\
    \   of logging in all systems.  Implementations capable of interpreting\n   the\
    \ contents of the USER_ERROR_SPEC object SHOULD take further action\n   based\
    \ on the reported error.\n   Implementations that are not UTF-8 capable and that\
    \ receive a\n   USER_ERROR_SPEC object SHOULD handle the Error Description according\n\
    \   to the procedures set out in [RFC5137].\n   If a message is received containing\
    \ an ERROR_SPEC object using the\n   \"User Error Spec\" error code, but not containing\
    \ a USER_ERROR_SPEC\n   object, the message MUST be treated as malformed and handled\n\
    \   according to [RFC2205].\n   Implementations SHOULD ignore repeated occurrences\
    \ of USER_ERROR_SPEC\n   objects, and SHOULD forward them unchanged on any messages\
    \ that they\n   forward.  This provides for forward compatibility.\n   Implementations\
    \ receiving a USER_ERROR_SPEC object on some message\n   other than a PathErr,\
    \ ResvErr, or Notify message MUST treat the error\n   as a malformed message and\
    \ process according to [RFC2205].\n"
- title: 5.  IANA Considerations
  contents:
  - '5.  IANA Considerations

    '
- title: 5.1.  RSVP Error Codes
  contents:
  - "5.1.  RSVP Error Codes\n   This document makes the following assignments from\
    \ the RSVP Error\n   Codes and Globally-Defined Error Value Sub-Codes registry:\n\
    \        Error Code      Meaning\n           33           User Error Spec\n  \
    \ One Error Value sub-code is defined for use with this Error Code as\n   follows:\n\
    \         0 = Further details in User Error Spec\n"
- title: 5.2.  RSVP Objects
  contents:
  - "5.2.  RSVP Objects\n   This document makes the following assignments from the\
    \ RSVP Class\n   Names, Class Numbers, and Class Types registry:\n       Number\
    \ Space     Value       Name\n       Class Numbers     194        USER_ERROR_SPEC\n\
    \       Class Type         1         User-Defined Error\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   This document makes no changes to the basic message\
    \ exchanges of\n   [RFC2205] and [RFC3473].  It will result in a small increase\
    \ in the\n   number of error messages sent in cases where messages were previously\n\
    \   silently dropped due to the lack of an appropriate error code.\n   The mechanisms\
    \ defined in this document may be used by\n   implementations to report additional\
    \ error conditions and information\n   arising from security issues and attacks\
    \ on the RSVP network.\n   Note that the use of a character string that will be\
    \ displayed or\n   logged opens the potential for certain security attacks through\
    \ the\n   use of overruns or embedded control characters.  Implementations\n \
    \  SHOULD take precautions against overruns, and (especially where the\n   full\
    \ character set of [RFC5198] is not supported, SHOULD use the\n   procedures set\
    \ out in [RFC5137] to handle unexpected or unknown\n   control characters.\n"
- title: 7.  Acknowledgments
  contents:
  - "7.  Acknowledgments\n   The authors would like to thank Elisheva Halevy for motivating\
    \ this\n   document.  Thanks to Tom Nadeau, Magnus Westerlund, Hannes\n   Tschofenig,\
    \ Bruce Davie, Jukka Manner, Francois Le Faucheur, Lars\n   Eggert, and Tom Petch\
    \ for their review and comments.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2205]  Braden, R., Ed., Zhang, L., Berson, S., Herzog, S., and\
    \ S.\n              Jamin, \"Resource ReSerVation Protocol (RSVP) -- Version 1\n\
    \              Functional Specification\", RFC 2205, September 1997.\n   [RFC3473]\
    \  Berger, L., Ed., \"Generalized Multi-Protocol Label\n              Switching\
    \ (GMPLS) Signaling Resource ReserVation\n              Protocol-Traffic Engineering\
    \ (RSVP-TE) Extensions\", RFC\n              3473, January 2003.\n   [RFC5137]\
    \  Klensin, J., \"ASCII Escaping of Unicode Characters\", BCP\n              137,\
    \ RFC 5137, February 2008.\n   [RFC5198]  Klensin, J. and M. Padlipsky, \"Unicode\
    \ Format for Network\n              Interchange\", RFC 5198, March 2008.\n   [ASCII]\
    \    American National Standards Institute, \"USA Code for\n              Information\
    \ Interchange\", ANSI X3.4, 1968.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [RFC2277]  Alvestrand, H., \"IETF Policy on\
    \ Character Sets and\n              Languages\", BCP 18, RFC 2277, January 1998.\n\
    \   [RFC2578]  McCloghrie, K., Perkins, D., and J. Schoenwaelder,\n          \
    \    \"Structure of Management Information Version 2 (SMIv2)\",\n            \
    \  STD 58, RFC 2578, April 1999.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   George Swallow\n   Cisco Systems, Inc.\n   EMail: swallow@cisco.com\n\
    \   Adrian Farrel\n   Old Dog Consulting\n   EMail: adrian@olddog.co.uk\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
