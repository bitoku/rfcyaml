- title: __initial_text__
  contents:
  - "    Additional Cryptographic Algorithms for Use with GOST 28147-89,\n   GOST\
    \ R 34.10-94, GOST R 34.10-2001, and GOST R 34.11-94 Algorithms\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes the cryptographic algorithms and parameters\n\
    \   supplementary to the original GOST specifications, GOST 28147-89,\n   GOST\
    \ R 34.10-94, GOST R 34.10-2001, and GOST R 34.11-94, for use in\n   Internet\
    \ applications.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   7. Secret Key Diversification .....................................10\n\
    \   8. Algorithm Parameters ...........................................10\n  \
    \    8.1. Encryption Algorithm Parameters ...........................10\n    \
    \  8.2. Digest Algorithm Parameters ...............................11\n      8.3.\
    \ GOST R 34.10-94 Public Key Algorithm Parameters ...........12\n      8.4. GOST\
    \ R 34.10-2001 Public Key Algorithm Parameters .........13\n   9. Security Considerations\
    \ ........................................14\n   10. Appendix ASN.1 Modules ........................................15\n\
    \      10.1. Cryptographic-Gost-Useful-Definitions ....................15\n  \
    \    10.2. Gost28147-89-EncryptionSyntax ............................17\n    \
    \  10.3. Gost28147-89-ParamSetSyntax ..............................19\n      10.4.\
    \ GostR3411-94-DigestSyntax ................................21\n      10.5. GostR3411-94-ParamSetSyntax\
    \ ..............................22\n      10.6. GostR3410-94-PKISyntax ...................................23\n\
    \      10.7. GostR3410-94-ParamSetSyntax ..............................25\n  \
    \    10.8. GostR3410-2001-PKISyntax .................................27\n    \
    \  10.9. GostR3410-2001-ParamSetSyntax ............................29\n   11.\
    \ Appendix Parameters ...........................................30\n      11.1.\
    \ Encryption Algorithm Parameters ..........................30\n      11.2. Digest\
    \ Algorithm Parameters ..............................33\n      11.3. GOST R 34.10-94\
    \ Public Key Algorithm Parameters ..........34\n      11.4. GOST R 34.10-2001\
    \ Public Key Algorithm Parameters ........42\n   12. Acknowledgements ..............................................46\n\
    \   13. References ....................................................47\n  \
    \    13.1. Normative References .....................................47\n    \
    \  13.2. Informative References ...................................47\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Russian cryptographic standards that define the algorithms\
    \ GOST\n   28147-89 [GOST28147], GOST R 34.10-94 [GOSTR341094], GOST R\n   34.10-2001\
    \ [GOSTR341001], and GOST R34.11-94 [GOSTR341194] provide\n   basic information\
    \ about how the algorithms work, but supplemental\n   specifications are needed\
    \ to effectively use the algorithms (a brief\n   English technical description\
    \ of these algorithms can be found in\n   [Schneier95]).\n   This document is\
    \ a proposal put forward by the CRYPTO-PRO Company to\n   provide supplemental\
    \ information and specifications needed by the\n   \"Russian Cryptographic Software\
    \ Compatibility Agreement\" community.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   In this document, the key words MUST, MUST NOT, REQUIRED,\
    \ SHOULD,\n   SHOULD NOT, RECOMMENDED, and MAY are to be interpreted as described\n\
    \   in [RFC2119].\n   The following functions and operators are also used in this\
    \ document:\n   '|' stands for concatenation.\n   '~' stands for bitwise NOT operator.\n\
    \   '^' stands for the power operator.\n   encryptECB (K, D) is D, encrypted with\
    \ key K using GOST 28147-89 in\n   \"prostaya zamena\" (ECB) mode.\n   decryptECB\
    \ (K, D) is D, decrypted with key K using GOST 28147-89 in\n   ECB mode.\n   encryptCFB\
    \ (IV, K, D) is D, encrypted with key K using GOST 28147-89\n   in \"gammirovanie\
    \ s obratnoj svyaziyu\" (64-bit CFB) mode, and IV is\n   used as the initialization\
    \ vector.\n   encryptCNT (IV, K, D) is D, encrypted with key K using GOST 28147-89\n\
    \   in \"gammirovanie\" (counter) mode, and IV is used as the\n   initialization\
    \ vector.\n   gostR3411 (D) is the 256-bit result of the GOST R 34.11-94 hash\n\
    \   function, used with zero initialization vector, and S-Box parameter,\n   defined\
    \ by id-GostR3411-94-CryptoProParamSet (see Section 11.2).\n   gost28147IMIT (IV,\
    \ K, D) is the 32-bit result of the GOST 28147-89 in\n   \"imitovstavka\" (MAC)\
    \ mode, used with D as plaintext, K as key and IV\n   as initialization vector.\
    \  Note that the standard specifies its use\n   in this mode only with an initialization\
    \ vector of zero.\n   When keys and initialization vectors are converted to/from\
    \ byte\n   arrays, little-endian byte order is assumed.\n"
- title: 2.  Cipher Modes and Parameters
  contents:
  - "2.  Cipher Modes and Parameters\n   This document defines four cipher properties\
    \ that allow an\n   implementer to vary cipher operations.  The four parameters\
    \ are the\n   cipher mode, the key meshing algorithm, the padding mode, and the\n\
    \   S-box.\n   [GOST28147] defines only three cipher modes for GOST 28147-89:\
    \ ECB,\n   CFB, and counter mode.  This document defines an additional cipher\n\
    \   mode, CBC.\n   When GOST 28147-89 is used to process large amounts of data,\
    \ a\n   symmetric key should be protected by a key meshing algorithm.  Key\n \
    \  meshing transforms a symmetric key after some amount of data has been\n   processed.\
    \  This document defines the CryptoPro key meshing\n   algorithm.\n   The cipher\
    \ mode, key meshing algorithm, padding mode, and S-box are\n   specified by algorithm\
    \ parameters.\n"
- title: 2.1.  GOST 28147-89 CBC Mode
  contents:
  - "2.1.  GOST 28147-89 CBC Mode\n   This section provides the supplemental information\
    \ for GOST 28147-89\n   (a block-to-block primitive) needed to operate in CBC\
    \ mode.\n   Before each plaintext block is encrypted, it is combined with the\n\
    \   cipher text of the previous block via a bitwise XOR operation.  This\n   ensures\
    \ that even if the plaintext contains many identical blocks,\n   each block will\
    \ encrypt to a different cipher text block.  The\n   initialization vector is\
    \ combined with the first plaintext block by a\n   bitwise XOR operation before\
    \ the block is encrypted.\n"
- title: 2.2.  GOST 28147-89 Padding Modes
  contents:
  - "2.2.  GOST 28147-89 Padding Modes\n   This section provides the supplemental\
    \ information for GOST 28147-89,\n   needed to operate on plaintext where the\
    \ length is not divisible by\n   GOST 28147-89 block size (8 bytes).\n   Let x\
    \ (0 < x <= 8) be the number of bytes in the last, possibly\n   incomplete, block\
    \ of data.\n   There are three padding modes:\n    * Zero padding: 8-x remaining\
    \ bytes are filled with zero\n    * PKCS#5 padding: 8-x remaining bytes are filled\
    \ with the value of\n      8-x.  If there's no incomplete block, one extra block\
    \ filled with\n      value 8 is added.\n    * Random padding: 8-x remaining bytes\
    \ of the last block are set to\n      random.\n"
- title: 2.3.  Key Meshing Algorithms
  contents:
  - "2.3.  Key Meshing Algorithms\n   Key meshing algorithms transform the key after\
    \ processing a certain\n   amount of data.  In applications that must be strictly\
    \ robust to\n   attacks based on timing and EMI analysis, one symmetric key should\n\
    \   not be used for quantities of plaintext larger than 1024 octets.\n   A key\
    \ meshing algorithm affects internal cipher state; it is not a\n   protocol level\
    \ feature.  Its role is similar to that of a cipher\n   mode.  The choice of key\
    \ meshing algorithm is usually dictated by the\n   encryption algorithm parameters,\
    \ but some protocols explicitly\n   specify applicable key meshing algorithms.\n\
    \   All encryption parameter sets defined in this document specify the\n   use\
    \ of the CryptoPro key meshing algorithm, except for id-Gost28147-\n   89-TestParamSet,\
    \ which specifies use of null key meshing algorithm.\n"
- title: 2.3.1.  Null Key Meshing
  contents:
  - "2.3.1.  Null Key Meshing\n   The null key meshing algorithm never changes a key.\n\
    \   The identifier for this algorithm is:\n       id-Gost28147-89-None-KeyMeshing\
    \ OBJECT IDENTIFIER ::=\n           { iso(1) member-body(2) ru(643) rans(2) cryptopro(2)\n\
    \               keyMeshing(14) none(0) }\n   There are no meaningful parameters\
    \ to this algorithm.  If present,\n   AlgorithmIdentifier.parameters MUST contain\
    \ NULL.\n"
- title: 2.3.2.  CryptoPro Key Meshing
  contents:
  - "2.3.2.  CryptoPro Key Meshing\n   The CryptoPro key meshing algorithm transforms\
    \ the key and\n   initialization vector every 1024 octets (8192 bits, or 256 64-bit\n\
    \   blocks) of plaintext data.\n   This algorithm has the same drawback as OFB\
    \ cipher mode: it is\n   impossible to re-establish crypto synch while decrypting\
    \ a ciphertext\n   if parts of encrypted data are corrupted, lost, or processed\
    \ out of\n   order.  Furthermore, it is impossible to re-synch even if an IV for\n\
    \   each data packet is provided explicitly.  Use of this algorithm in\n   protocols\
    \ such as IPsec ESP requires special care.\n   The identifier for this algorithm\
    \ is:\n       id-Gost28147-89-CryptoPro-KeyMeshing  OBJECT IDENTIFIER ::=\n  \
    \         { iso(1) member-body(2) ru(643) rans(2) cryptopro(2)\n             \
    \  keyMeshing(14) cryptoPro(1) }\n   There are no meaningful parameters to this\
    \ algorithm.  If present,\n   AlgorithmIdentifier.parameters MUST contain NULL.\n\
    \   GOST 28147-89, in encrypt, decrypt, or MAC mode, starts with key K[0]\n  \
    \ =  K, IV0[0] = IV, i = 0.  Let IVn[0] be the value of the\n   initialization\
    \ vector after processing the first 1024 octets of data.\n   Processing of the\
    \ next 1024 octets will start with K[1] and IV0[1],\n   which are calculated using\
    \ the following formula:\n       K[i+1] = decryptECB (K[i], C);\n       IV0[i+1]\
    \ = encryptECB (K[i+1],IVn[i])\n   Where C = {0x69, 0x00, 0x72, 0x22,   0x64,\
    \ 0xC9, 0x04, 0x23,\n              0x8D, 0x3A, 0xDB, 0x96,   0x46, 0xE9, 0x2A,\
    \ 0xC4,\n              0x18, 0xFE, 0xAC, 0x94,   0x00, 0xED, 0x07, 0x12,\n   \
    \           0xC0, 0x86, 0xDC, 0xC2,   0xEF, 0x4C, 0xA9, 0x2B};\n   After processing\
    \ each 1024 octets of data:\n    * the resulting initialization vector is stored\
    \ as IVn[i];\n    * K[i+1] and IV0[i+1] are calculated;\n    * i is incremented;\n\
    \    * Encryption or decryption of next 1024 bytes starts, using\n      the new\
    \ key and IV;\n   The process is repeated until all the data has been processed.\n"
- title: 3.  HMAC_GOSTR3411
  contents:
  - "3.  HMAC_GOSTR3411\n   HMAC_GOSTR3411 (K,text) function is based on the hash\
    \ function GOST R\n   34.11-94, as defined in [HMAC], with the following parameter\
    \ values:\n   B = 32, L = 32.\n"
- title: 4.  PRF_GOSTR3411
  contents:
  - "4.  PRF_GOSTR3411\n   PRF_GOSTR3411 is a pseudorandom function, based on HMAC_GOSTR3411.\n\
    \   It is calculated as P_hash, defined in Section 5 of [TLS].\n   PRF_GOSTR3411(secret,label,seed)\
    \ = P_GOSTR3411 (secret,label|seed).\n"
- title: 5.  Key Derivation Algorithms
  contents:
  - "5.  Key Derivation Algorithms\n   Standards [GOSTR341094] and [GOSTR341001] do\
    \ not define any key\n   derivation algorithms.\n   Section 5.1 specifies algorithm\
    \ VKO GOST R 34.10-94, which generates\n   GOST KEK using two GOST R 34.10-94\
    \ keypairs.\n   Section 5.2 specifies algorithm VKO GOST R 34.10-2001, which\n\
    \   generates GOST KEK using two GOST R 34.10-2001 keypairs and UKM.\n   Keypairs\
    \ MUST have identical parameters.\n"
- title: 5.1.  VKO GOST R 34.10-94
  contents:
  - "5.1.  VKO GOST R 34.10-94\n   This algorithm creates a key encryption key (KEK)\
    \ using the sender's\n   private key and the recipient's public key (or vice versa).\n\
    \   Exchange key KEK is a 256-bit hash of the 1024-bit shared secret that\n  \
    \ is generated using Diffie-Hellman key agreement.\n   1) Let K(x,y) = a^(x*y)\
    \ (mod p), where\n      x - sender's private key, a^x - sender's public key\n\
    \      y - recipient's private key, a^y - recipient's public key\n      a, p -\
    \ parameters\n   2) Calculate a 256-bit hash of K(x,y):\n      KEK(x,y) = gostR3411\
    \ (K(x,y))\n   Keypairs (x,a^x) and (y,a^y) MUST comply with [GOSTR341094].\n\
    \   This algorithm MUST NOT be used when a^x = a (mod p) or a^y = a (mod\n   p).\n"
- title: 5.2.  VKO GOST R 34.10-2001
  contents:
  - "5.2.  VKO GOST R 34.10-2001\n   This algorithm creates a key encryption key (KEK)\
    \ using 64 bit UKM,\n   the sender's private key, and the recipient's public key\
    \ (or the\n   reverse of the latter pair).\n   1) Let K(x,y,UKM) = ((UKM*x)(mod\
    \ q)) . (y.P) (512 bit), where\n      x - sender's private key (256 bit)\n   \
    \   x.P - sender's public key (512 bit)\n      y - recipient's private key (256\
    \ bit)\n      y.P - recipient's public key (512 bit)\n      UKM - non-zero integer,\
    \ produced as in step 2 p. 6.1 [GOSTR341001]\n      P - base point on the elliptic\
    \ curve (two 256-bit coordinates)\n      UKM*x - x multiplied by UKM as integers\n\
    \      x.P - a multiple point\n   2) Calculate a 256-bit hash of K(x,y,UKM):\n\
    \      KEK(x,y,UKM) = gostR3411 (K(x,y,UKM))\n   Keypairs (x,x.P) and (y,y.P)\
    \ MUST comply with [GOSTR341001].\n   This algorithm MUST NOT be used when x.P\
    \ = P, y.P = P\n"
- title: 6.  Key Wrap Algorithms
  contents:
  - "6.  Key Wrap Algorithms\n   This document defines two key wrap algorithms: GOST\
    \ 28147-89 Key Wrap\n   and CryptoPro Key Wrap.  These are used to encrypt a Content\n\
    \   Encryption Key (CEK) with a Key Encryption Key (KEK).\n"
- title: 6.1.  GOST 28147-89 Key Wrap
  contents:
  - "6.1.  GOST 28147-89 Key Wrap\n   This algorithm encrypts GOST 28147-89 CEK with\
    \ a GOST 28147-89 KEK.\n   Note: This algorithm MUST NOT be used with a KEK produced\
    \ by VKO GOST\n   R 34.10-94, because such a KEK is constant for every sender-recipient\n\
    \   pair.  Encrypting many different content encryption keys on the same\n   constant\
    \ KEK may reveal that KEK.\n   The GOST 28147-89 key wrap algorithm is:\n    1)\
    \ For a unique symmetric KEK, generate 8 octets at random and call\n       the\
    \ result UKM.  For a KEK, produced by VKO GOST R 34.10-2001,\n       use the UKM\
    \ that was used for key derivation.\n    2) Compute a 4-byte checksum value, gost28147IMIT\
    \ (UKM, KEK, CEK).\n       Call the result CEK_MAC.\n    3) Encrypt the CEK in\
    \ ECB mode using the KEK.  Call the ciphertext\n       CEK_ENC.\n    4) The wrapped\
    \ content-encryption key is (UKM | CEK_ENC | CEK_MAC).\n"
- title: 6.2.  GOST 28147-89 Key Unwrap
  contents:
  - "6.2.  GOST 28147-89 Key Unwrap\n   This algorithm decrypts GOST 28147-89 CEK\
    \ with a GOST 28147-89 KEK.\n   The GOST 28147-89 key unwrap algorithm is:\n \
    \   1) If the wrapped content-encryption key is not 44 octets, then\n       error.\n\
    \    2) Decompose the wrapped content-encryption key into UKM, CEK_ENC,\n    \
    \   and CEK_MAC.  UKM is the most significant (first) 8 octets.\n       CEK_ENC\
    \ is next 32 octets, and CEK_MAC is the least significant\n       (last) 4 octets.\n\
    \    3) Decrypt CEK_ENC in ECB mode using the KEK.  Call the output CEK.\n   \
    \ 4) Compute a 4-byte checksum value, gost28147IMIT (UKM, KEK, CEK),\n       compare\
    \ the result with CEK_MAC.  If they are not equal, then\n       error.\n"
- title: 6.3.  CryptoPro Key Wrap
  contents:
  - "6.3.  CryptoPro Key Wrap\n   This algorithm encrypts GOST 28147-89 CEK with a\
    \ GOST 28147-89 KEK.\n   It can be used with any KEK (e.g., produced by VKO GOST\
    \ R 34.10-94 or\n   VKO GOST R 34.10-2001) because a unique UKM is used to diversify\
    \ the\n   KEK.\n   The CryptoPro key wrap algorithm is:\n    1) For a unique symmetric\
    \ KEK or a KEK produced by VKO GOST R\n       34.10-94, generate 8 octets at random.\
    \  Call the result UKM.  For\n       a KEK, produced by VKO GOST R 34.10-2001,\
    \ use the UKM that was\n       used for key derivation.\n    2) Diversify KEK,\
    \ using the CryptoPro KEK Diversification Algorithm,\n       described in Section\
    \ 6.5.  Call the result KEK(UKM).\n    3) Compute a 4-byte checksum value, gost28147IMIT\
    \ (UKM, KEK(UKM),\n       CEK).  Call the result CEK_MAC.\n    4) Encrypt CEK\
    \ in ECB mode using KEK(UKM).  Call the ciphertext\n       CEK_ENC.\n    5) The\
    \ wrapped content-encryption key is (UKM | CEK_ENC | CEK_MAC).\n"
- title: 6.4.  CryptoPro Key Unwrap
  contents:
  - "6.4.  CryptoPro Key Unwrap\n   This algorithm encrypts GOST 28147-89 CEK with\
    \ a GOST 28147-89 KEK.\n   The CryptoPro key unwrap algorithm is:\n    1) If the\
    \ wrapped content-encryption key is not 44 octets, then it\n       is an error.\n\
    \    2) Decompose the wrapped content-encryption key into UKM, CEK_ENC,\n    \
    \   and CEK_MAC.  UKM is the most significant (first) 8 octets.\n       CEK_ENC\
    \ is next 32 octets, and CEK_MAC is the least significant\n       (last) 4 octets.\n\
    \    3) Diversify KEK using the CryptoPro KEK Diversification Algorithm,\n   \
    \    described in section 6.5.  Call the result KEK(UKM).\n    4) Decrypt CEK_ENC\
    \ in ECB mode using KEK(UKM).  Call the output CEK.\n    5) Compute a 4-byte checksum\
    \ value, gost28147IMIT (UKM, KEK(UKM),\n       CEK), compare the result with CEK_MAC.\
    \  If they are not equal,\n       then it is an error.\n"
- title: 6.5.  CryptoPro KEK Diversification Algorithm
  contents:
  - "6.5.  CryptoPro KEK Diversification Algorithm\n   Given a random 64-bit UKM and\
    \ a GOST 28147-89 key K, this algorithm\n   creates a new GOST 28147-89 key K(UKM).\n\
    \    1) Let K[0] = K;\n    2) UKM is split into components a[i,j]:\n       UKM\
    \ = a[0]|..|a[7] (a[i] - byte, a[i,0]..a[i,7] - it's bits)\n    3) Let i be 0.\n\
    \    4) K[1]..K[8] are calculated by repeating the following algorithm\n     \
    \  eight times:\n     A) K[i] is split into components k[i,j]:\n        K[i] =\
    \ k[i,0]|k[i,1]|..|k[i,7] (k[i,j] - 32-bit integer)\n     B) Vector S[i] is calculated:\n\
    \        S[i] = ((a[i,0]*k[i,0] + ... + a[i,7]*k[i,7]) mod 2^32) |\n        (((~a[i,0])*k[i,0]\
    \ + ... + (~a[i,7])*k[i,7]) mod 2^32);\n     C) K[i+1] = encryptCFB (S[i], K[i],\
    \ K[i])\n     D) i = i + 1\n    5) Let K(UKM) be K[8].\n"
- title: 7.  Secret Key Diversification
  contents:
  - "7.  Secret Key Diversification\n   This algorithm creates a GOST 28147-89 key\
    \ Kd, given GOST R 34.10-94\n   or GOST R 34.10-2001 secret key K and diversification\
    \ data D of size\n   4..40 bytes.\n    1) 40-byte blob B is created from D by\
    \ cloning it enough times to\n       fill all 40 bytes.  For example, if D is\
    \ 40-bytes long, B = D; If\n       D is 6-bytes long, B = D|D|D|D|D|D|D[0..3].\n\
    \    2) B is split into 8-byte UKM and 32-byte SRCKEY (B = UKM|SRCKEY).\n    3)\
    \ The algorithm from Section 6.5 is used to create K(UKM) from key\n       K and\
    \ UKM, with two differences:\n         * Instead of S[i], vector (0,0,0,UKM[i],ff,ff,ff,ff\
    \ XOR UKM[i])\n           is used.\n         * During each encryption step, only\
    \ 8 out of 32 GOST 28147-89\n           rounds are done.\n    4) Kd is calculated:\n\
    \       Kd = encryptCFB (UKM, K(UKM), SRCKEY).\n"
- title: 8.  Algorithm Parameters
  contents:
  - "8.  Algorithm Parameters\n   Standards [GOST28147], [GOST341194], [GOSTR341094],\
    \ and [GOSTR341001]\n   do not define specific values for algorithm parameters.\n\
    \   This document introduces the use of ASN.1 object identifiers (OIDs)\n   to\
    \ specify algorithm parameters.\n   Identifiers for all of the proposed parameter\
    \ sets can be found in\n   Appendix ASN.1 modules.  Corresponding parameter values\
    \ for proposed\n   parameter sets can be found in Section 11.\n"
- title: 8.1.  Encryption Algorithm Parameters
  contents:
  - "8.1.  Encryption Algorithm Parameters\n   GOST 28147-89 can be used in several\
    \ modes; additional CBC mode is\n   defined in Section 2.1.  It also has an S-Box\
    \ parameter.  (See the\n   Algorithm Parameters part in [GOST28147] in Russian;\
    \ for a\n   description in English, see [Schneier95], ch. 14.1, p. 331.)\n   This\
    \ table contains the list of proposed parameter sets for GOST\n   28147-89:\n\
    \    Gost28147-89-ParamSetAlgorithms ALGORITHM-IDENTIFIER ::= {\n        { Gost28147-89-ParamSetParameters\
    \ IDENTIFIED BY\n            id-Gost28147-89-TestParamSet  } |\n        { Gost28147-89-ParamSetParameters\
    \ IDENTIFIED BY\n               id-Gost28147-89-CryptoPro-A-ParamSet  } |\n  \
    \      { Gost28147-89-ParamSetParameters IDENTIFIED BY\n               id-Gost28147-89-CryptoPro-B-ParamSet\
    \  } |\n        { Gost28147-89-ParamSetParameters IDENTIFIED BY\n            \
    \   id-Gost28147-89-CryptoPro-C-ParamSet  } |\n        { Gost28147-89-ParamSetParameters\
    \ IDENTIFIED BY\n               id-Gost28147-89-CryptoPro-D-ParamSet  }\n    }\n\
    \   Identifier values are in the Appendix ASN.1 modules, and\n   corresponding\
    \ parameters are in Section 11.1.\n   Parameters for GOST 28147-89 are presented\
    \ in the following form:\n    Gost28147-89-ParamSetParameters ::= SEQUENCE {\n\
    \        eUZ          Gost28147-89-UZ,\n        mode         INTEGER {\n     \
    \                    gost28147-89-CNT(0),\n                         gost28147-89-CFB(1),\n\
    \                         cryptoPro-CBC(2)\n                     },\n        shiftBits\
    \    INTEGER { gost28147-89-block(64) },\n        keyMeshing   AlgorithmIdentifier\n\
    \    }\n    Gost28147-89-UZ ::= OCTET STRING (SIZE (64))\n    Gost28147-89-KeyMeshingAlgorithms\
    \  ALGORITHM-IDENTIFIER ::= {\n        { NULL IDENTIFIED BY id-Gost28147-89-CryptoPro-KeyMeshing\
    \ } |\n        { NULL IDENTIFIED BY id-Gost28147-89-None-KeyMeshing }\n    }\n\
    \     where\n        eUZ        - S-box value;\n        mode       - cipher mode;\n\
    \        shiftBits  - cipher parameter;\n        keyMeshing - key meshing algorithm\
    \ identifier.\n"
- title: 8.2.  Digest Algorithm Parameters
  contents:
  - "8.2.  Digest Algorithm Parameters\n   This table contains the list of proposed\
    \ parameter sets for\n   [GOST341194]:\n    GostR3411-94-ParamSetAlgorithms ALGORITHM-IDENTIFIER\
    \ ::= {\n        { GostR3411-94-ParamSetParameters IDENTIFIED BY\n          id-GostR3411-94-TestParamSet\n\
    \        } |\n        { GostR3411-94-ParamSetParameters IDENTIFIED BY\n      \
    \    id-GostR3411-94-CryptoProParamSet\n        }\n    }\n   Identifier values\
    \ are in the Appendix ASN.1 modules, and\n   corresponding parameters are in Section\
    \ 11.2.\n   Parameters for [GOST341194] are presented in the following form:\n\
    \    GostR3411-94-ParamSetParameters ::=\n        SEQUENCE {\n            hUZ\
    \ Gost28147-89-UZ,    -- S-Box for digest\n            h0  GostR3411-94-Digest\
    \ -- start digest value\n        }\n    GostR3411-94-Digest ::= OCTET STRING (SIZE\
    \ (32))\n"
- title: 8.3.  GOST R 34.10-94 Public Key Algorithm Parameters
  contents:
  - "8.3.  GOST R 34.10-94 Public Key Algorithm Parameters\n   This table contains\
    \ the list of proposed parameter sets for GOST R\n   34.10-94:\n    GostR3410-94-ParamSetAlgorithm\
    \ ALGORITHM-IDENTIFIER ::= {\n        { GostR3410-94-ParamSetParameters IDENTIFIED\
    \ BY\n               id-GostR3410-94-TestParamSet } |\n        { GostR3410-94-ParamSetParameters\
    \ IDENTIFIED BY\n               id-GostR3410-94-CryptoPro-A-ParamSet  } |\n  \
    \      { GostR3410-94-ParamSetParameters IDENTIFIED BY\n               id-GostR3410-94-CryptoPro-B-ParamSet\
    \  } |\n        { GostR3410-94-ParamSetParameters IDENTIFIED BY\n            \
    \   id-GostR3410-94-CryptoPro-C-ParamSet  } |\n        { GostR3410-94-ParamSetParameters\
    \ IDENTIFIED BY\n               id-GostR3410-94-CryptoPro-D-ParamSet  } |\n  \
    \      { GostR3410-94-ParamSetParameters IDENTIFIED BY\n               id-GostR3410-94-CryptoPro-XchA-ParamSet\
    \  } |\n        { GostR3410-94-ParamSetParameters IDENTIFIED BY\n            \
    \   id-GostR3410-94-CryptoPro-XchB-ParamSet  } |\n        { GostR3410-94-ParamSetParameters\
    \ IDENTIFIED BY\n               id-GostR3410-94-CryptoPro-XchC-ParamSet  }\n \
    \   }\n   Identifier values are in the Appendix ASN.1 modules, and\n   corresponding\
    \ parameters are in Section 11.3.\n   Parameters for GOST R 34.10-94 are presented\
    \ in the following form:\n    GostR3410-94-ParamSetParameters ::=\n       SEQUENCE\
    \ {\n           t       INTEGER,\n           p       INTEGER,\n           q  \
    \     INTEGER,\n           a       INTEGER,\n           validationAlgorithm  \
    \ AlgorithmIdentifier {{\n             GostR3410-94-ValidationAlgorithms\n   \
    \          }} OPTIONAL\n       }\n    GostR3410-94-ValidationParameters ::=\n\
    \         SEQUENCE {\n             x0      INTEGER,\n             c       INTEGER,\n\
    \             d       INTEGER OPTIONAL\n         }\n   Where\n    t - bit length\
    \ of p (512 or 1024 bits);\n    p - modulus, prime number, 2^(t-1)<p<2^t;\n  \
    \  q - order of cyclic group, prime number, 2^254<q<2^256, q is a\n        factor\
    \ of p-1;\n    a - generator, integer, 1<a<p-1, at that aq (mod p) = 1;\n    \
    \    validationAlgorithm - constant p, q and a calculating algorithm.\n    x0\
    \ - seed;\n    c  - used for p and q generation;\n    d  - used for a generation.\n"
- title: 8.4.  GOST R 34.10-2001 Public Key Algorithm Parameters
  contents:
  - "8.4.  GOST R 34.10-2001 Public Key Algorithm Parameters\n   This table contains\
    \ the list of proposed parameter sets for GOST R\n   34.10-2001:\n    GostR3410-2001-ParamSetAlgorithm\
    \ ALGORITHM-IDENTIFIER ::= {\n        { GostR3410-2001-ParamSetParameters IDENTIFIED\
    \ BY\n               id-GostR3410-2001-TestParamSet } |\n        { GostR3410-2001-ParamSetParameters\
    \ IDENTIFIED BY\n               id-GostR3410-2001-CryptoPro-A-ParamSet  } |\n\
    \        { GostR3410-2001-ParamSetParameters IDENTIFIED BY\n               id-GostR3410-2001-CryptoPro-B-ParamSet\
    \  } |\n        { GostR3410-2001-ParamSetParameters IDENTIFIED BY\n          \
    \     id-GostR3410-2001-CryptoPro-C-ParamSet  } |\n        { GostR3410-2001-ParamSetParameters\
    \ IDENTIFIED BY\n               id-GostR3410-2001-CryptoPro-XchA-ParamSet  } |\n\
    \        { GostR3410-2001-ParamSetParameters IDENTIFIED BY\n               id-GostR3410-2001-CryptoPro-XchB-ParamSet\
    \  }\n    }\n   Identifier values are in the Appendix ASN.1 modules, and\n   corresponding\
    \ parameters are in Section 11.4.\n   Parameters for GOST R 34.10-2001 are presented\
    \ in the following form:\n    GostR3410-2001-ParamSetParameters ::=\n       SEQUENCE\
    \ {\n           a       INTEGER,\n           b       INTEGER,\n           p  \
    \     INTEGER,\n           q       INTEGER,\n           x       INTEGER,\n   \
    \        y       INTEGER\n       }\n    a, b - coefficients a and b of the elliptic\
    \ curve E;\n    p    - prime number - elliptic curve modulus;\n    q    - prime\
    \ number - order of cyclic group;\n    x, y - base point p coordinates.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   It is RECOMMENDED that software applications\
    \ verify signature values\n   and subject public keys and algorithm parameters\
    \ to conform to\n   [GOSTR341001] and [GOSTR341094] standards prior to their use.\n\
    \   Cryptographic algorithm parameters affect rigidity of algorithms.\n   The\
    \ algorithm parameters proposed and described herein, except for\n   the test\
    \ parameter sets (id-Gost28147-89-TestParamSet, id-GostR3411-\n   94-TestParamSet,\
    \ id-GostR3410-94-TestParamSet, id-GostR3410-2001-\n   TestParamSet), have been\
    \ analyzed by a special certification\n   laboratory of Scientific and Technical\
    \ Center, \"ATLAS\", and by the\n   Center of Certificational Investigations in\
    \ appropriate levels of\n   target_of_evaluation (TOE), according to [RFDSL],\
    \ [RFLLIC], and\n   [CRYPTOLIC].\n   Use of the test parameter sets or parameter\
    \ sets not described herein\n   is NOT RECOMMENDED.  When different parameters\
    \ are used, it is\n   RECOMMENDED that they be subjected to examination by an\
    \ authorized\n   agency with approved methods of cryptographic analysis.\n"
- title: 10.  Appendix ASN.1 Modules
  contents:
  - '10.  Appendix ASN.1 Modules

    '
- title: 10.1.  Cryptographic-Gost-Useful-Definitions
  contents:
  - "10.1.  Cryptographic-Gost-Useful-Definitions\n   Cryptographic-Gost-Useful-Definitions\n\
    \       { iso(1) member-body(2) ru(643) rans(2)\n         cryptopro(2) other(1)\
    \ modules(1)\n         cryptographic-Gost-Useful-Definitions(0) 1 }\n   DEFINITIONS\
    \ ::=\n   BEGIN\n   -- EXPORTS All --\n   -- The types and values defined in this\
    \ module are exported for\n   -- use in the other ASN.1 modules contained within\
    \ the Russian\n   -- Cryptography \"GOST\" & \"GOST R\" Specifications, and for\
    \ the use\n   -- of other applications that will use them to access Russian\n\
    \   -- Cryptography services.  Other applications may use them for\n   -- their\
    \ own purposes, but this will not constrain extensions and\n   -- modifications\
    \ needed to maintain or improve the Russian\n   -- Cryptography service.\n   \
    \  -- Crypto-Pro OID branch\n       id-CryptoPro OBJECT IDENTIFIER ::=\n     \
    \      { iso(1) member-body(2) ru(643) rans(2) cryptopro(2) }\n       id-CryptoPro-algorithms\
    \ OBJECT IDENTIFIER ::=\n           id-CryptoPro\n       id-CryptoPro-modules\
    \ OBJECT IDENTIFIER ::=\n           { id-CryptoPro other(1) modules(1) }\n   \
    \    id-CryptoPro-hashes OBJECT IDENTIFIER ::=\n           { id-CryptoPro-algorithms\
    \ hashes(30) }\n       id-CryptoPro-encrypts OBJECT IDENTIFIER ::=\n         \
    \  { id-CryptoPro-algorithms encrypts(31) }\n       id-CryptoPro-signs OBJECT\
    \ IDENTIFIER ::=\n           { id-CryptoPro-algorithms signs(32) }\n       id-CryptoPro-exchanges\
    \ OBJECT IDENTIFIER ::=\n           { id-CryptoPro-algorithms exchanges(33) }\n\
    \       id-CryptoPro-extensions OBJECT IDENTIFIER ::=\n           { id-CryptoPro\
    \ extensions(34) }\n       id-CryptoPro-ecc-signs OBJECT IDENTIFIER ::=\n    \
    \       { id-CryptoPro-algorithms ecc-signs(35) }\n       id-CryptoPro-ecc-exchanges\
    \ OBJECT IDENTIFIER ::=\n           { id-CryptoPro-algorithms ecc-exchanges(36)\
    \ }\n       id-CryptoPro-private-keys OBJECT IDENTIFIER ::=\n           { id-CryptoPro-algorithms\
    \ private-keys(37) }\n       id-CryptoPro-policyIds OBJECT IDENTIFIER ::=\n  \
    \       { id-CryptoPro policyIds(38) }\n       id-CryptoPro-policyQt OBJECT IDENTIFIER\
    \ ::=\n           { id-CryptoPro policyQt(39) }\n       id-CryptoPro-pkixcmp-infos\
    \ OBJECT IDENTIFIER ::=\n           { id-CryptoPro-algorithms pkixcmp-infos(41)\
    \ }\n       id-CryptoPro-audit-service-types OBJECT IDENTIFIER ::=\n         \
    \  { id-CryptoPro-algorithms audit-service-types(42) }\n       id-CryptoPro-audit-record-types\
    \ OBJECT IDENTIFIER ::=\n           { id-CryptoPro-algorithms audit-record-types(43)\
    \ }\n       id-CryptoPro-attributes OBJECT IDENTIFIER ::=\n           { id-CryptoPro-algorithms\
    \ attributes(44) }\n       id-CryptoPro-name-service-types OBJECT IDENTIFIER ::=\n\
    \           { id-CryptoPro-algorithms name-service-types(45) }\n     -- ASN.1\
    \ modules of Russian Cryptography \"GOST\" & \"GOST R\"\n     -- Specifications\n\
    \       cryptographic-Gost-Useful-Definitions OBJECT IDENTIFIER ::=\n        \
    \   { id-CryptoPro-modules\n             cryptographic-Gost-Useful-Definitions(0)\
    \ 1 }\n     -- GOST R 34.11-94\n       gostR3411-94-DigestSyntax OBJECT IDENTIFIER\
    \ ::=\n           { id-CryptoPro-modules gostR3411-94-DigestSyntax(1) 1 }\n  \
    \     gostR3411-94-ParamSetSyntax OBJECT IDENTIFIER ::=\n           { id-CryptoPro-modules\
    \ gostR3411-94-ParamSetSyntax(7) 1 }\n     -- GOST R 34.10-94\n       gostR3410-94-PKISyntax\
    \ OBJECT IDENTIFIER ::=\n           { id-CryptoPro-modules  gostR3410-94-PKISyntax(2)\
    \ 1 }\n       gostR3410-94-SignatureSyntax OBJECT IDENTIFIER ::=\n           {\
    \ id-CryptoPro-modules gostR3410-94-SignatureSyntax(3) 1 }\n       gostR3410-EncryptionSyntax\
    \ OBJECT IDENTIFIER ::=\n           { id-CryptoPro-modules gostR3410-EncryptionSyntax(5)\
    \ 2 }\n       gostR3410-94-ParamSetSyntax OBJECT IDENTIFIER ::=\n           {\
    \ id-CryptoPro-modules  gostR3410-94-ParamSetSyntax(8) 1 }\n     -- GOST R 34.10-2001\n\
    \       gostR3410-2001-PKISyntax OBJECT IDENTIFIER ::=\n           { id-CryptoPro-modules\
    \  gostR3410-2001-PKISyntax(9) 1 }\n       gostR3410-2001-SignatureSyntax OBJECT\
    \ IDENTIFIER ::=\n           { id-CryptoPro-modules\n             gostR3410-2001-SignatureSyntax(10)\
    \ 1 }\n       gostR3410-2001-ParamSetSyntax OBJECT IDENTIFIER ::=\n          \
    \ { id-CryptoPro-modules\n             gostR3410-2001-ParamSetSyntax(12) 1 }\n\
    \     -- GOST 28147-89\n       gost28147-89-EncryptionSyntax OBJECT IDENTIFIER\
    \ ::=\n           { id-CryptoPro-modules gost28147-89-EncryptionSyntax(4) 1 }\n\
    \       gost28147-89-ParamSetSyntax OBJECT IDENTIFIER ::=\n           { id-CryptoPro-modules\
    \ gost28147-89-ParamSetSyntax(6) 1 }\n     -- Extended Key Usage for Crypto-Pro\n\
    \       gost-CryptoPro-ExtendedKeyUsage OBJECT IDENTIFIER ::=\n           { id-CryptoPro-modules\n\
    \             gost-CryptoPro-ExtendedKeyUsage(13) 1 }\n     -- Crypto-Pro Private\
    \ keys\n       gost-CryptoPro-PrivateKey OBJECT IDENTIFIER ::=\n           { id-CryptoPro-modules\
    \ gost-CryptoPro-PrivateKey(14) 1 }\n     -- Crypto-Pro PKIXCMP structures\n \
    \      gost-CryptoPro-PKIXCMP OBJECT IDENTIFIER ::=\n           { id-CryptoPro-modules\
    \ gost-CryptoPro-PKIXCMP(15) 1 }\n     -- Crypto-Pro Transport Layer Security\
    \ structures\n       gost-CryptoPro-TLS OBJECT IDENTIFIER ::=\n           { id-CryptoPro-modules\
    \ gost-CryptoPro-TLS(16) 1 }\n     -- Crypto-Pro Policy\n       gost-CryptoPro-Policy\
    \ OBJECT IDENTIFIER ::=\n           { id-CryptoPro-modules gost-CryptoPro-Policy(17)\
    \ 1 }\n       gost-CryptoPro-Constants OBJECT IDENTIFIER ::=\n           { id-CryptoPro-modules\
    \ gost-CryptoPro-Constants(18) 1 }\n     -- Useful types\n       ALGORITHM-IDENTIFIER\
    \ ::= CLASS {\n           &id    OBJECT IDENTIFIER UNIQUE,\n           &Type \
    \ OPTIONAL\n       }\n       WITH SYNTAX { [&Type] IDENTIFIED BY &id }\n   END\
    \ -- Cryptographic-Gost-Useful-Definitions\n"
- title: 10.2.  Gost28147-89-EncryptionSyntax
  contents:
  - "10.2.  Gost28147-89-EncryptionSyntax\n   Gost28147-89-EncryptionSyntax\n    \
    \   { iso(1) member-body(2) ru(643) rans(2) cryptopro(2)\n         other(1) modules(1)\
    \ gost28147-89-EncryptionSyntax(4) 1 }\n   DEFINITIONS EXPLICIT TAGS ::=\n   BEGIN\n\
    \   -- EXPORTS All --\n   -- The types and values defined in this module are exported\
    \ for\n   -- use in the other ASN.1 modules contained within the Russian\n   --\
    \ Cryptography \"GOST\" & \"GOST R\" Specifications, and for the use\n   -- of\
    \ other applications that will use them to access Russian\n   -- Cryptography\
    \ services.  Other applications may use them for\n   -- their own purposes, but\
    \ this will not constrain extensions and\n   -- modifications needed to maintain\
    \ or improve the Russian\n   -- Cryptography service.\n       IMPORTS\n      \
    \     id-CryptoPro-algorithms, id-CryptoPro-encrypts,\n           ALGORITHM-IDENTIFIER,\n\
    \           cryptographic-Gost-Useful-Definitions\n           FROM Cryptographic-Gost-Useful-Definitions\n\
    \               { iso(1) member-body(2) ru(643) rans(2)\n                 cryptopro(2)\
    \ other(1) modules(1)\n                 cryptographic-Gost-Useful-Definitions(0)\
    \ 1 }\n       ;\n     -- GOST 28147-89 OID\n       id-Gost28147-89 OBJECT IDENTIFIER\
    \ ::=\n           { id-CryptoPro-algorithms gost28147-89(21) }\n       id-Gost28147-89-MAC\
    \ OBJECT IDENTIFIER ::=\n           { id-CryptoPro-algorithms gost28147-89-MAC(22)\
    \ }\n     -- GOST 28147-89 cryptographic parameter sets OIDs\n       id-Gost28147-89-TestParamSet\
    \ OBJECT IDENTIFIER ::=\n           { id-CryptoPro-encrypts test(0) }\n      \
    \ id-Gost28147-89-CryptoPro-A-ParamSet OBJECT IDENTIFIER ::=\n           { id-CryptoPro-encrypts\
    \ cryptopro-A(1) }\n       id-Gost28147-89-CryptoPro-B-ParamSet OBJECT IDENTIFIER\
    \ ::=\n           { id-CryptoPro-encrypts cryptopro-B(2) }\n       id-Gost28147-89-CryptoPro-C-ParamSet\
    \ OBJECT IDENTIFIER ::=\n           { id-CryptoPro-encrypts cryptopro-C(3) }\n\
    \       id-Gost28147-89-CryptoPro-D-ParamSet OBJECT IDENTIFIER ::=\n         \
    \  { id-CryptoPro-encrypts cryptopro-D(4) }\n       id-Gost28147-89-CryptoPro-Oscar-1-1-ParamSet\n\
    \         OBJECT IDENTIFIER ::=\n           { id-CryptoPro-encrypts cryptopro-Oscar-1-1(5)\
    \ }\n       id-Gost28147-89-CryptoPro-Oscar-1-0-ParamSet\n         OBJECT IDENTIFIER\
    \ ::=\n           { id-CryptoPro-encrypts cryptopro-Oscar-1-0(6) }\n       id-Gost28147-89-CryptoPro-RIC-1-ParamSet\n\
    \         OBJECT IDENTIFIER ::=\n           { id-CryptoPro-encrypts cryptopro-RIC-1(7)\
    \ }\n     -- GOST 28147-89 Types\n       Gost28147-89-UZ ::= OCTET STRING (SIZE\
    \ (64))\n       Gost28147-89-IV ::= OCTET STRING (SIZE (8))\n       Gost28147-89-Key\
    \ ::= OCTET STRING (SIZE (32))\n       Gost28147-89-MAC ::= OCTET STRING (SIZE\
    \ (1..4))\n       Gost28147-89-EncryptedKey ::=\n           SEQUENCE {\n     \
    \          encryptedKey Gost28147-89-Key,\n               maskKey      [0] IMPLICIT\
    \ Gost28147-89-Key OPTIONAL,\n               macKey       Gost28147-89-MAC (SIZE\
    \ (4))\n           }\n       Gost28147-89-ParamSet ::=\n           OBJECT IDENTIFIER\
    \ (\n               id-Gost28147-89-TestParamSet |\n                   -- Only\
    \ for testing purposes\n               id-Gost28147-89-CryptoPro-A-ParamSet |\n\
    \               id-Gost28147-89-CryptoPro-B-ParamSet |\n               id-Gost28147-89-CryptoPro-C-ParamSet\
    \ |\n               id-Gost28147-89-CryptoPro-D-ParamSet |\n               id-Gost28147-89-CryptoPro-Oscar-1-1-ParamSet\
    \ |\n               id-Gost28147-89-CryptoPro-Oscar-1-0-ParamSet |\n         \
    \      id-Gost28147-89-CryptoPro-RIC-1-ParamSet\n           )\n       Gost28147-89-BlobParameters\
    \ ::=\n           SEQUENCE {\n               encryptionParamSet Gost28147-89-ParamSet,\n\
    \               ...\n           }\n     -- GOST 28147-89 encryption algorithm\
    \ parameters\n       Gost28147-89-Parameters ::=\n           SEQUENCE {\n    \
    \           iv                   Gost28147-89-IV,\n               encryptionParamSet\
    \   Gost28147-89-ParamSet\n           }\n       Gost28147-89-Algorithms ALGORITHM-IDENTIFIER\
    \ ::= {\n           { Gost28147-89-Parameters IDENTIFIED BY\n                \
    \           id-Gost28147-89 }\n       }\n   END -- Gost28147-89-EncryptionSyntax\n"
- title: 10.3.  Gost28147-89-ParamSetSyntax
  contents:
  - "10.3.  Gost28147-89-ParamSetSyntax\n   Gost28147-89-ParamSetSyntax\n       {\
    \ iso(1) member-body(2) ru(643) rans(2) cryptopro(2)\n         other(1) modules(1)\
    \ gost28147-89-ParamSetSyntax(6) 1 }\n   DEFINITIONS EXPLICIT TAGS ::=\n   BEGIN\n\
    \   -- EXPORTS All --\n   -- The types and values defined in this module are exported\
    \ for\n   -- use in the other ASN.1 modules contained within the Russian\n   --\
    \ Cryptography \"GOST\" & \"GOST R\" Specifications, and for the use\n   -- of\
    \ other applications that will use them to access Russian\n   -- Cryptography\
    \ services.  Other applications may use them for\n   -- their own purposes, but\
    \ this will not constrain extensions and\n   -- modifications needed to maintain\
    \ or improve the Russian\n   -- Cryptography service.\n       IMPORTS\n      \
    \     id-CryptoPro-algorithms, id-CryptoPro-encrypts,\n           gost28147-89-EncryptionSyntax,\
    \ ALGORITHM-IDENTIFIER,\n           cryptographic-Gost-Useful-Definitions\n  \
    \         FROM Cryptographic-Gost-Useful-Definitions\n               { iso(1)\
    \ member-body(2) ru(643) rans(2)\n                 cryptopro(2) other(1) modules(1)\n\
    \                 cryptographic-Gost-Useful-Definitions(0) 1 }\n           Gost28147-89-UZ,\n\
    \           Gost28147-89-ParamSet,\n           id-Gost28147-89-TestParamSet,\n\
    \           id-Gost28147-89-CryptoPro-A-ParamSet,\n           id-Gost28147-89-CryptoPro-B-ParamSet,\n\
    \           id-Gost28147-89-CryptoPro-C-ParamSet,\n           id-Gost28147-89-CryptoPro-D-ParamSet\n\
    \           FROM Gost28147-89-EncryptionSyntax\n                gost28147-89-EncryptionSyntax\n\
    \           AlgorithmIdentifier\n           FROM PKIX1Explicit88 {iso(1) identified-organization(3)\n\
    \           dod(6) internet(1) security(5) mechanisms(5) pkix(7)\n           id-mod(0)\
    \ id-pkix1-explicit-88(1)}\n       ;\n     -- GOST 28147-89 cryptographic parameter\
    \ sets:\n     -- OIDs for parameter sets are imported from\n     -- Gost28147-89-EncryptionSyntax\n\
    \     Gost28147-89-ParamSetParameters ::=\n       SEQUENCE {\n           eUZ \
    \            Gost28147-89-UZ,\n           mode            INTEGER {\n        \
    \                       gost28147-89-CNT(0),\n                               gost28147-89-CFB(1),\n\
    \                               cryptoPro-CBC(2)\n                           },\n\
    \           shiftBits       INTEGER { gost28147-89-block(64) },\n           keyMeshing\
    \      AlgorithmIdentifier\n       }\n     Gost28147-89-ParamSetAlgorithms ALGORITHM-IDENTIFIER\
    \ ::= {\n       { Gost28147-89-ParamSetParameters IDENTIFIED BY\n            \
    \       id-Gost28147-89-TestParamSet  } |\n       { Gost28147-89-ParamSetParameters\
    \ IDENTIFIED BY\n                   id-Gost28147-89-CryptoPro-A-ParamSet  } |\n\
    \       { Gost28147-89-ParamSetParameters IDENTIFIED BY\n                   id-Gost28147-89-CryptoPro-B-ParamSet\
    \  } |\n       { Gost28147-89-ParamSetParameters IDENTIFIED BY\n             \
    \      id-Gost28147-89-CryptoPro-C-ParamSet  } |\n       { Gost28147-89-ParamSetParameters\
    \ IDENTIFIED BY\n                   id-Gost28147-89-CryptoPro-D-ParamSet  }\n\
    \     }\n     id-Gost28147-89-CryptoPro-KeyMeshing  OBJECT IDENTIFIER ::=\n  \
    \     { id-CryptoPro-algorithms keyMeshing(14) cryptoPro(1) }\n     id-Gost28147-89-None-KeyMeshing\
    \ OBJECT IDENTIFIER ::=\n       { id-CryptoPro-algorithms keyMeshing(14) none(0)\
    \ }\n     Gost28147-89-KeyMeshingAlgorithms  ALGORITHM-IDENTIFIER ::= {\n    \
    \   { NULL IDENTIFIED BY id-Gost28147-89-CryptoPro-KeyMeshing } |\n       { NULL\
    \ IDENTIFIED BY id-Gost28147-89-None-KeyMeshing }\n     }\n   END -- Gost28147-89-ParamSetSyntax\n"
- title: 10.4.  GostR3411-94-DigestSyntax
  contents:
  - "10.4.  GostR3411-94-DigestSyntax\n   GostR3411-94-DigestSyntax\n       { iso(1)\
    \ member-body(2) ru(643) rans(2) cryptopro(2)\n         other(1) modules(1) gostR3411-94-DigestSyntax(1)\
    \ 1 }\n   DEFINITIONS ::=\n   BEGIN\n   -- EXPORTS All --\n   -- The types and\
    \ values defined in this module are exported for\n   -- use in the other ASN.1\
    \ modules contained within the Russian\n   -- Cryptography \"GOST\" & \"GOST R\"\
    \ Specifications, and for the use\n   -- of other applications that will use them\
    \ to access Russian\n   -- Cryptography services.  Other applications may use\
    \ them for\n   -- their own purposes, but this will not constrain extensions and\n\
    \   -- modifications needed to maintain or improve the Russian\n   -- Cryptography\
    \ service.\n       IMPORTS\n           id-CryptoPro-algorithms, id-CryptoPro-hashes,\n\
    \           ALGORITHM-IDENTIFIER,\n           cryptographic-Gost-Useful-Definitions\n\
    \           FROM Cryptographic-Gost-Useful-Definitions\n               { iso(1)\
    \ member-body(2) ru(643) rans(2)\n                 cryptopro(2) other(1) modules(1)\n\
    \                 cryptographic-Gost-Useful-Definitions(0) 1 }\n       ;\n   \
    \  -- GOST R 34.11-94 OID\n       id-GostR3411-94 OBJECT IDENTIFIER ::=\n    \
    \       { id-CryptoPro-algorithms gostR3411-94(9) }\n     -- GOST R 34.11-94 cryptographic\
    \ parameter set OIDs\n       id-GostR3411-94-TestParamSet OBJECT IDENTIFIER ::=\n\
    \           { id-CryptoPro-hashes test(0) }\n       id-GostR3411-94-CryptoProParamSet\
    \ OBJECT IDENTIFIER ::=\n           { id-CryptoPro-hashes cryptopro(1) }\n   \
    \  -- GOST R 34.11-94 data types\n       GostR3411-94-Digest ::= OCTET STRING\
    \ (SIZE (32))\n     -- GOST R 34.11-94 digest algorithm & parameters\n       GostR3411-94-DigestParameters\
    \ ::=\n           OBJECT IDENTIFIER (\n                   id-GostR3411-94-TestParamSet\
    \ |\n                       -- Only for testing purposes\n                   id-GostR3411-94-CryptoProParamSet\n\
    \           )\n       GostR3411-94-DigestAlgorithms ALGORITHM-IDENTIFIER ::= {\n\
    \           { NULL IDENTIFIED BY id-GostR3411-94 } |\n                   -- Assume\
    \ id-GostR3411-94-CryptoProParamSet\n           { GostR3411-94-DigestParameters\n\
    \                   IDENTIFIED BY id-GostR3411-94 }\n       }\n   END -- GostR3411-94-DigestSyntax\n"
- title: 10.5.  GostR3411-94-ParamSetSyntax
  contents:
  - "10.5.  GostR3411-94-ParamSetSyntax\n   GostR3411-94-ParamSetSyntax\n       {\
    \ iso(1) member-body(2) ru(643) rans(2) cryptopro(2)\n         other(1) modules(1)\
    \ gostR3411-94-ParamSetSyntax(7) 1 }\n   DEFINITIONS ::=\n   BEGIN\n   -- EXPORTS\
    \ All --\n   -- The types and values defined in this module are exported for\n\
    \   -- use in the other ASN.1 modules contained within the Russian\n   -- Cryptography\
    \ \"GOST\" & \"GOST R\" Specifications, and for the use\n   -- of other applications\
    \ that will use them to access Russian\n   -- Cryptography services.  Other applications\
    \ may use them for\n   -- their own purposes, but this will not constrain extensions\
    \ and\n   -- modifications needed to maintain or improve the Russian\n   -- Cryptography\
    \ service.\n       IMPORTS\n           gost28147-89-EncryptionSyntax,\n      \
    \     gostR3411-94-DigestSyntax,\n           ALGORITHM-IDENTIFIER\n          \
    \ FROM Cryptographic-Gost-Useful-Definitions\n               { iso(1) member-body(2)\
    \ ru(643) rans(2)\n                 cryptopro(2) other(1) modules(1)\n       \
    \          cryptographic-Gost-Useful-Definitions(0) 1 }\n           Gost28147-89-UZ\n\
    \           FROM Gost28147-89-EncryptionSyntax\n                gost28147-89-EncryptionSyntax\n\
    \           id-GostR3411-94-TestParamSet,\n           id-GostR3411-94-CryptoProParamSet,\n\
    \           GostR3411-94-Digest\n           FROM GostR3411-94-DigestSyntax\n \
    \               gostR3411-94-DigestSyntax\n       ;\n     -- GOST R 34.11-94 cryptographic\
    \ parameter sets:\n     -- OIDs for parameter sets are imported from\n     --\
    \ GostR3411-94-DigestSyntax\n       GostR3411-94-ParamSetParameters ::=\n    \
    \       SEQUENCE {\n               hUZ Gost28147-89-UZ,    -- S-Box for digest\n\
    \               h0  GostR3411-94-Digest -- initial digest value\n           }\n\
    \       GostR3411-94-ParamSetAlgorithms ALGORITHM-IDENTIFIER ::= {\n         \
    \  { GostR3411-94-ParamSetParameters IDENTIFIED BY\n                   id-GostR3411-94-TestParamSet\n\
    \           } |\n           { GostR3411-94-ParamSetParameters IDENTIFIED BY\n\
    \                   id-GostR3411-94-CryptoProParamSet\n           }\n       }\n\
    \   END -- GostR3411-94-ParamSetSyntax\n"
- title: 10.6.  GostR3410-94-PKISyntax
  contents:
  - "10.6.  GostR3410-94-PKISyntax\n   GostR3410-94-PKISyntax\n       { iso(1) member-body(2)\
    \ ru(643) rans(2) cryptopro(2)\n         other(1) modules(1) gostR3410-94-PKISyntax(2)\
    \ 1 }\n   DEFINITIONS ::=\n   BEGIN\n   -- EXPORTS All --\n   -- The types and\
    \ values defined in this module are exported for\n   -- use in the other ASN.1\
    \ modules contained within the Russian\n   -- Cryptography \"GOST\" & \"GOST R\"\
    \ Specifications, and for the use\n   -- of other applications that will use them\
    \ to access Russian\n   -- Cryptography services.  Other applications may use\
    \ them for\n   -- their own purposes, but this will not constrain extensions and\n\
    \   -- modifications needed to maintain or improve the Russian\n   -- Cryptography\
    \ service.\n       IMPORTS\n           id-CryptoPro-algorithms,\n           id-CryptoPro-signs,\
    \ id-CryptoPro-exchanges,\n           gost28147-89-EncryptionSyntax,\n       \
    \    gostR3411-94-DigestSyntax, ALGORITHM-IDENTIFIER,\n           cryptographic-Gost-Useful-Definitions\n\
    \           FROM Cryptographic-Gost-Useful-Definitions\n               { iso(1)\
    \ member-body(2) ru(643) rans(2)\n                 cryptopro(2) other(1) modules(1)\n\
    \                 cryptographic-Gost-Useful-Definitions(0) 1 }\n           Gost28147-89-ParamSet\n\
    \           FROM Gost28147-89-EncryptionSyntax\n                gost28147-89-EncryptionSyntax\n\
    \           id-GostR3411-94-TestParamSet,\n           id-GostR3411-94-CryptoProParamSet\n\
    \           FROM GostR3411-94-DigestSyntax gostR3411-94-DigestSyntax\n       ;\n\
    \     -- GOST R 34.10-94 OIDs\n       id-GostR3410-94 OBJECT IDENTIFIER ::=\n\
    \           { id-CryptoPro-algorithms gostR3410-94(20) }\n       id-GostR3410-94DH\
    \ OBJECT IDENTIFIER ::=\n           { id-CryptoPro-algorithms gostR3410-94DH(99)\
    \ }\n       id-GostR3411-94-with-GostR3410-94 OBJECT IDENTIFIER ::=\n        \
    \   { id-CryptoPro-algorithms\n             gostR3411-94-with-gostR3410-94(4)\
    \ }\n     -- GOST R 34.10-94 public key parameter set OIDs\n       id-GostR3410-94-TestParamSet\
    \ OBJECT IDENTIFIER ::=\n           { id-CryptoPro-signs test(0) }\n       id-GostR3410-94-CryptoPro-A-ParamSet\
    \ OBJECT IDENTIFIER ::=\n           { id-CryptoPro-signs cryptopro-A(2) }\n  \
    \     id-GostR3410-94-CryptoPro-B-ParamSet OBJECT IDENTIFIER ::=\n           {\
    \ id-CryptoPro-signs cryptopro-B(3) }\n       id-GostR3410-94-CryptoPro-C-ParamSet\
    \ OBJECT IDENTIFIER ::=\n           { id-CryptoPro-signs cryptopro-C(4) }\n  \
    \     id-GostR3410-94-CryptoPro-D-ParamSet OBJECT IDENTIFIER ::=\n           {\
    \ id-CryptoPro-signs cryptopro-D(5) }\n       id-GostR3410-94-CryptoPro-XchA-ParamSet\
    \ OBJECT IDENTIFIER ::=\n           { id-CryptoPro-exchanges cryptopro-XchA(1)\
    \ }\n       id-GostR3410-94-CryptoPro-XchB-ParamSet OBJECT IDENTIFIER ::=\n  \
    \         { id-CryptoPro-exchanges cryptopro-XchB(2) }\n       id-GostR3410-94-CryptoPro-XchC-ParamSet\
    \ OBJECT IDENTIFIER ::=\n           { id-CryptoPro-exchanges cryptopro-XchC(3)\
    \ }\n     -- GOST R 34.10-94 data types\n       GostR3410-94-CertificateSignature\
    \ ::=\n           BIT STRING ( SIZE(256..512) )\n       GostR3410-94-PublicKey\
    \ ::=\n           OCTET STRING ( SIZE(\n                           64 |    --\
    \ Only for testing purposes\n                           128\n                \
    \           ) )\n       GostR3410-94-PublicKeyParameters ::=\n           SEQUENCE\
    \ {\n               publicKeyParamSet\n                   OBJECT IDENTIFIER (\n\
    \                       id-GostR3410-94-TestParamSet |\n                     \
    \      -- Only for testing purposes\n                       id-GostR3410-94-CryptoPro-A-ParamSet\
    \ |\n                       id-GostR3410-94-CryptoPro-B-ParamSet |\n         \
    \              id-GostR3410-94-CryptoPro-C-ParamSet |\n                      \
    \ id-GostR3410-94-CryptoPro-D-ParamSet |\n                       id-GostR3410-94-CryptoPro-XchA-ParamSet\
    \ |\n                       id-GostR3410-94-CryptoPro-XchB-ParamSet |\n      \
    \                 id-GostR3410-94-CryptoPro-XchC-ParamSet\n                  \
    \ ),\n               digestParamSet\n                   OBJECT IDENTIFIER (\n\
    \                       id-GostR3411-94-TestParamSet |\n                     \
    \      -- Only for testing purposes\n                       id-GostR3411-94-CryptoProParamSet\n\
    \                   ),\n               encryptionParamSet Gost28147-89-ParamSet\
    \ OPTIONAL\n           }\n       GostR3410-94-PublicKeyAlgorithms  ALGORITHM-IDENTIFIER\
    \ ::= {\n           { GostR3410-94-PublicKeyParameters IDENTIFIED BY\n       \
    \                    id-GostR3410-94 }\n       }\n   END -- GostR3410-94-PKISyntax\n"
- title: 10.7.  GostR3410-94-ParamSetSyntax
  contents:
  - "10.7.  GostR3410-94-ParamSetSyntax\n   GostR3410-94-ParamSetSyntax\n       {\
    \ iso(1) member-body(2) ru(643) rans(2) cryptopro(2)\n         other(1) modules(1)\
    \ gostR3410-94-ParamSetSyntax(8) 1 }\n   DEFINITIONS ::=\n   BEGIN\n   -- EXPORTS\
    \ All --\n   -- The types and values defined in this module are exported for\n\
    \   -- use in the other ASN.1 modules contained within the Russian\n   -- Cryptography\
    \ \"GOST\" & \"GOST R\" Specifications, and for the use\n   -- of other applications\
    \ that will use them to access Russian\n   -- Cryptography services.  Other applications\
    \ may use them for\n   -- their own purposes, but this will not constrain extensions\
    \ and\n   -- modifications needed to maintain or improve the Russian\n   -- Cryptography\
    \ service.\n       IMPORTS\n           id-CryptoPro-algorithms,\n           id-CryptoPro-signs,\
    \ id-CryptoPro-exchanges,\n           gostR3410-94-PKISyntax, ALGORITHM-IDENTIFIER,\n\
    \           cryptographic-Gost-Useful-Definitions\n           FROM Cryptographic-Gost-Useful-Definitions\n\
    \               { iso(1) member-body(2) ru(643) rans(2)\n                 cryptopro(2)\
    \ other(1) modules(1)\n                 cryptographic-Gost-Useful-Definitions(0)\
    \ 1 }\n           id-GostR3410-94,\n           id-GostR3410-94-TestParamSet,\n\
    \           id-GostR3410-94-CryptoPro-A-ParamSet,\n           id-GostR3410-94-CryptoPro-B-ParamSet,\n\
    \           id-GostR3410-94-CryptoPro-C-ParamSet,\n           id-GostR3410-94-CryptoPro-D-ParamSet,\n\
    \           id-GostR3410-94-CryptoPro-XchA-ParamSet,\n           id-GostR3410-94-CryptoPro-XchB-ParamSet,\n\
    \           id-GostR3410-94-CryptoPro-XchC-ParamSet\n           FROM GostR3410-94-PKISyntax\
    \ gostR3410-94-PKISyntax\n           AlgorithmIdentifier\n           FROM PKIX1Explicit88\
    \ {iso(1) identified-organization(3)\n           dod(6) internet(1) security(5)\
    \ mechanisms(5) pkix(7)\n           id-mod(0) id-pkix1-explicit-88(1)}\n     \
    \  ;\n     -- GOST R 34.10-94 public key parameter sets:\n     -- OIDs for parameter\
    \ sets are imported from\n     -- GostR3410-94-PKISyntax\n       GostR3410-94-ParamSetParameters-t\
    \ ::= INTEGER (512 | 1024)\n                   -- 512 - only for testing purposes\n\
    \       GostR3410-94-ParamSetParameters ::=\n           SEQUENCE {\n         \
    \      t GostR3410-94-ParamSetParameters-t,\n               p INTEGER,  -- 2^1020\
    \ < p < 2^1024 or 2^509 < p < 2^512\n               q INTEGER,  --  2^254 < q\
    \ < 2^256\n               a INTEGER,  --      1 < a < p-1 < 2^1024-1\n       \
    \        validationAlgorithm\n                   AlgorithmIdentifier OPTIONAL\n\
    \                   -- {{ GostR3410-94-ValidationAlgorithms }}\n           }\n\
    \       GostR3410-94-ParamSetAlgorithm ALGORITHM-IDENTIFIER ::= {\n          \
    \ { GostR3410-94-ParamSetParameters IDENTIFIED BY\n                   id-GostR3410-94-TestParamSet\
    \ } |\n           { GostR3410-94-ParamSetParameters IDENTIFIED BY\n          \
    \         id-GostR3410-94-CryptoPro-A-ParamSet  } |\n           { GostR3410-94-ParamSetParameters\
    \ IDENTIFIED BY\n                   id-GostR3410-94-CryptoPro-B-ParamSet  } |\n\
    \           { GostR3410-94-ParamSetParameters IDENTIFIED BY\n                \
    \   id-GostR3410-94-CryptoPro-C-ParamSet  } |\n           { GostR3410-94-ParamSetParameters\
    \ IDENTIFIED BY\n                   id-GostR3410-94-CryptoPro-D-ParamSet  } |\n\
    \           { GostR3410-94-ParamSetParameters IDENTIFIED BY\n                \
    \   id-GostR3410-94-CryptoPro-XchA-ParamSet  } |\n           { GostR3410-94-ParamSetParameters\
    \ IDENTIFIED BY\n                   id-GostR3410-94-CryptoPro-XchB-ParamSet  }\
    \ |\n           { GostR3410-94-ParamSetParameters IDENTIFIED BY\n            \
    \       id-GostR3410-94-CryptoPro-XchC-ParamSet  }\n       }\n     -- GOST R 34.10-94\
    \ validation/constructor\n       id-GostR3410-94-a           OBJECT IDENTIFIER\
    \ ::=\n           { id-GostR3410-94 a(1) }\n       id-GostR3410-94-aBis      \
    \  OBJECT IDENTIFIER ::=\n           { id-GostR3410-94 aBis(2) }\n       id-GostR3410-94-b\
    \           OBJECT IDENTIFIER ::=\n           { id-GostR3410-94 b(3) }\n     \
    \  id-GostR3410-94-bBis        OBJECT IDENTIFIER ::=\n           { id-GostR3410-94\
    \ bBis(4) }\n       GostR3410-94-ValidationParameters-c ::=\n           INTEGER\
    \ (0 ..  65535)\n       GostR3410-94-ValidationParameters ::=\n           SEQUENCE\
    \ {\n               x0   GostR3410-94-ValidationParameters-c,\n              \
    \ c    GostR3410-94-ValidationParameters-c,\n               d    INTEGER OPTIONAL\
    \ -- 1 < d < p-1 < 2^1024-1\n           }\n       GostR3410-94-ValidationBisParameters-c\
    \ ::=\n           INTEGER (0 ..  4294967295)\n       GostR3410-94-ValidationBisParameters\
    \ ::=\n           SEQUENCE {\n               x0   GostR3410-94-ValidationBisParameters-c,\n\
    \               c    GostR3410-94-ValidationBisParameters-c,\n               d\
    \    INTEGER OPTIONAL -- 1 < d < p-1 < 2^1024-1\n           }\n       GostR3410-94-ValidationAlgorithms\
    \  ALGORITHM-IDENTIFIER ::= {\n           { GostR3410-94-ValidationParameters\
    \ IDENTIFIED BY\n                 id-GostR3410-94-a } |\n           { GostR3410-94-ValidationBisParameters\
    \ IDENTIFIED BY\n                           id-GostR3410-94-aBis } |\n       \
    \    { GostR3410-94-ValidationParameters IDENTIFIED BY\n                     \
    \      id-GostR3410-94-b } |\n           { GostR3410-94-ValidationBisParameters\
    \ IDENTIFIED BY\n                           id-GostR3410-94-bBis }\n       }\n\
    \   END -- GostR3410-94-ParamSetSyntax\n"
- title: 10.8.  GostR3410-2001-PKISyntax
  contents:
  - "10.8.  GostR3410-2001-PKISyntax\n   GostR3410-2001-PKISyntax\n       { iso(1)\
    \ member-body(2) ru(643) rans(2) cryptopro(2)\n         other(1) modules(1) gostR3410-2001-PKISyntax(9)\
    \ 1 }\n   DEFINITIONS ::=\n   BEGIN\n   -- EXPORTS All --\n   -- The types and\
    \ values defined in this module are exported for\n   -- use in the other ASN.1\
    \ modules contained within the Russian\n   -- Cryptography \"GOST\" & \"GOST R\"\
    \ Specifications, and for the use\n   -- of other applications that will use them\
    \ to access Russian\n   -- Cryptography services.  Other applications may use\
    \ them for\n   -- their own purposes, but this will not constrain extensions and\n\
    \   -- modifications needed to maintain or improve the Russian\n   -- Cryptography\
    \ service.\n       IMPORTS\n           id-CryptoPro-algorithms,\n           id-CryptoPro-ecc-signs,\
    \ id-CryptoPro-ecc-exchanges,\n           gost28147-89-EncryptionSyntax,\n   \
    \        gostR3411-94-DigestSyntax, ALGORITHM-IDENTIFIER,\n           cryptographic-Gost-Useful-Definitions\n\
    \           FROM Cryptographic-Gost-Useful-Definitions\n               { iso(1)\
    \ member-body(2) ru(643) rans(2)\n                 cryptopro(2) other(1) modules(1)\n\
    \                 cryptographic-Gost-Useful-Definitions(0) 1 }\n           Gost28147-89-ParamSet\n\
    \           FROM Gost28147-89-EncryptionSyntax\n                gost28147-89-EncryptionSyntax\n\
    \           id-GostR3411-94-TestParamSet,\n           id-GostR3411-94-CryptoProParamSet\n\
    \           FROM GostR3411-94-DigestSyntax gostR3411-94-DigestSyntax\n       ;\n\
    \     -- GOST R 34.10-2001 OIDs\n       id-GostR3410-2001 OBJECT IDENTIFIER ::=\n\
    \           { id-CryptoPro-algorithms gostR3410-2001(19) }\n       id-GostR3410-2001DH\
    \ OBJECT IDENTIFIER ::=\n           { id-CryptoPro-algorithms gostR3410-2001DH(98)\
    \ }\n       id-GostR3411-94-with-GostR3410-2001 OBJECT IDENTIFIER ::=\n      \
    \     { id-CryptoPro-algorithms\n             gostR3411-94-with-gostR3410-2001(3)\
    \ }\n     -- GOST R 34.10-2001 public key parameter set OIDs\n       id-GostR3410-2001-TestParamSet\
    \ OBJECT IDENTIFIER ::=\n           { id-CryptoPro-ecc-signs test(0) }\n     \
    \  id-GostR3410-2001-CryptoPro-A-ParamSet OBJECT IDENTIFIER ::=\n           {\
    \ id-CryptoPro-ecc-signs cryptopro-A(1) }\n       id-GostR3410-2001-CryptoPro-B-ParamSet\
    \ OBJECT IDENTIFIER ::=\n           { id-CryptoPro-ecc-signs cryptopro-B(2) }\n\
    \       id-GostR3410-2001-CryptoPro-C-ParamSet OBJECT IDENTIFIER ::=\n       \
    \    { id-CryptoPro-ecc-signs cryptopro-C(3) }\n       id-GostR3410-2001-CryptoPro-XchA-ParamSet\n\
    \           OBJECT IDENTIFIER ::=\n                   { id-CryptoPro-ecc-exchanges\
    \ cryptopro-XchA(0) }\n       id-GostR3410-2001-CryptoPro-XchB-ParamSet\n    \
    \       OBJECT IDENTIFIER ::=\n                   { id-CryptoPro-ecc-exchanges\
    \ cryptopro-XchB(1) }\n     -- GOST R 34.10-2001 Data Types\n       GostR3410-2001-CertificateSignature\
    \ ::=\n           BIT STRING ( SIZE(256..512) )\n       GostR3410-2001-PublicKey\
    \ ::=\n           OCTET STRING ( SIZE(64) )\n       GostR3410-2001-PublicKeyParameters\
    \ ::=\n           SEQUENCE {\n               publicKeyParamSet\n             \
    \      OBJECT IDENTIFIER (\n                       id-GostR3410-2001-TestParamSet\
    \ |\n                           -- Only for testing purposes\n               \
    \        id-GostR3410-2001-CryptoPro-A-ParamSet |\n                       id-GostR3410-2001-CryptoPro-B-ParamSet\
    \ |\n                       id-GostR3410-2001-CryptoPro-C-ParamSet |\n       \
    \                id-GostR3410-2001-CryptoPro-XchA-ParamSet |\n               \
    \        id-GostR3410-2001-CryptoPro-XchB-ParamSet\n                   ),\n  \
    \             digestParamSet\n                   OBJECT IDENTIFIER (\n       \
    \                id-GostR3411-94-TestParamSet |\n                           --\
    \ Only for testing purposes\n                       id-GostR3411-94-CryptoProParamSet\n\
    \                   ),\n               encryptionParamSet Gost28147-89-ParamSet\
    \ OPTIONAL\n           }\n       GostR3410-2001-PublicKeyAlgorithms  ALGORITHM-IDENTIFIER\
    \ ::= {\n           { GostR3410-2001-PublicKeyParameters IDENTIFIED BY\n     \
    \                      id-GostR3410-2001 }\n       }\n   END -- GostR3410-2001-PKISyntax\n"
- title: 10.9.  GostR3410-2001-ParamSetSyntax
  contents:
  - "10.9.  GostR3410-2001-ParamSetSyntax\n   GostR3410-2001-ParamSetSyntax\n    \
    \   { iso(1) member-body(2) ru(643) rans(2) cryptopro(2)\n         other(1) modules(1)\
    \ gostR3410-2001-ParamSetSyntax(12) 1 }\n   DEFINITIONS ::=\n   BEGIN\n   -- EXPORTS\
    \ All --\n   -- The types and values defined in this module are exported for\n\
    \   -- use in the other ASN.1 modules contained within the Russian\n   -- Cryptography\
    \ \"GOST\" & \"GOST R\" Specifications, and for the use\n   -- of other applications\
    \ that will use them to access Russian\n   -- Cryptography services.  Other applications\
    \ may use them for\n   -- their own purposes, but this will not constrain extensions\
    \ and\n   -- modifications needed to maintain or improve the Russian\n   -- Cryptography\
    \ service.\n       IMPORTS\n           gostR3410-2001-PKISyntax, ALGORITHM-IDENTIFIER,\n\
    \           cryptographic-Gost-Useful-Definitions\n           FROM Cryptographic-Gost-Useful-Definitions\n\
    \               { iso(1) member-body(2) ru(643) rans(2)\n                 cryptopro(2)\
    \ other(1) modules(1)\n                 cryptographic-Gost-Useful-Definitions(0)\
    \ 1 }\n           id-GostR3410-2001,\n           id-GostR3410-2001-TestParamSet,\n\
    \           id-GostR3410-2001-CryptoPro-A-ParamSet,\n           id-GostR3410-2001-CryptoPro-B-ParamSet,\n\
    \           id-GostR3410-2001-CryptoPro-C-ParamSet,\n           id-GostR3410-2001-CryptoPro-XchA-ParamSet,\n\
    \           id-GostR3410-2001-CryptoPro-XchB-ParamSet\n           FROM GostR3410-2001-PKISyntax\
    \ gostR3410-2001-PKISyntax\n       ;\n       GostR3410-2001-ParamSetParameters\
    \ ::=\n           SEQUENCE {\n               a INTEGER,  -- 0 < a < p < 2^256\n\
    \               b INTEGER,  -- 0 < b < p < 2^256\n               p INTEGER,  --\
    \ 2^254 < p < 2^256\n               q INTEGER,  -- 2^254 < q < 2^256\n       \
    \        x INTEGER,  -- 0 < x < p < 2^256\n               y INTEGER   -- 0 < y\
    \ < p < 2^256\n           }\n     -- GOST R 34.10-2001 public key parameter set:\n\
    \     -- OIDs for parameter sets are imported from\n     -- GostR3410-2001-PKISyntax\n\
    \       GostR3410-2001-ParamSetAlgorithm ALGORITHM-IDENTIFIER ::= {\n        \
    \   { GostR3410-2001-ParamSetParameters IDENTIFIED BY\n                   id-GostR3410-2001-TestParamSet\
    \ } |\n           { GostR3410-2001-ParamSetParameters IDENTIFIED BY\n        \
    \           id-GostR3410-2001-CryptoPro-A-ParamSet  } |\n           { GostR3410-2001-ParamSetParameters\
    \ IDENTIFIED BY\n                   id-GostR3410-2001-CryptoPro-B-ParamSet  }\
    \ |\n           { GostR3410-2001-ParamSetParameters IDENTIFIED BY\n          \
    \         id-GostR3410-2001-CryptoPro-C-ParamSet  } |\n           { GostR3410-2001-ParamSetParameters\
    \ IDENTIFIED BY\n                   id-GostR3410-2001-CryptoPro-XchA-ParamSet\
    \  } |\n           { GostR3410-2001-ParamSetParameters IDENTIFIED BY\n       \
    \            id-GostR3410-2001-CryptoPro-XchB-ParamSet  }\n       }\n   END --\
    \ GostR3410-2001-ParamSetSyntax\n"
- title: 11.  Appendix Parameters
  contents:
  - "11.  Appendix Parameters\n   Parameters here are given as SEQUENCE OF AlgorithmIdentifier\
    \ in ASN.1\n   DER encoding [X.660], stored in the same format as the examples\
    \ in\n   [RFC4134], can be extracted using the same program.\n   If you want to\
    \ extract without the program, copy all the lines\n   between the \"|>\" and \"\
    |<\" markers, remove any page breaks, and remove\n   the \"|\" in the first column\
    \ of each line.  The result is a valid\n   Base64 blob that can be processed by\
    \ any Base64 decoder.\n"
- title: 11.1.  Encryption Algorithm Parameters
  contents:
  - "11.1.  Encryption Algorithm Parameters\n   For each AlgorithmIdentifier in this\
    \ sequence, the parameters field\n   contains Gost28147-89-ParamSetParameters.\n\
    \       0 30  480: SEQUENCE {\n       4 30   94:  SEQUENCE {\n       6 06    7:\
    \   OBJECT IDENTIFIER\n                :    id-Gost28147-89-TestParamSet\n   \
    \   15 30   83:   SEQUENCE {\n      17 04   64:    OCTET STRING\n            \
    \    :     4C DE 38 9C 29 89 EF B6 FF EB 56 C5 5E C2 9B 02\n                :\
    \     98 75 61 3B 11 3F 89 60 03 97 0C 79 8A A1 D5 5D\n                :     E2\
    \ 10 AD 43 37 5D B3 8E B4 2C 77 E7 CD 46 CA FA\n                :     D6 6A 20\
    \ 1F 70 F4 1E A4 AB 03 F2 21 65 B8 44 D8\n      83 02    1:    INTEGER 0\n   \
    \   86 02    1:    INTEGER 64\n      89 30    9:    SEQUENCE {\n      91 06  \
    \  7:     OBJECT IDENTIFIER\n                :      id-Gost28147-89-None-KeyMeshing\n\
    \                :     }\n                :    }\n                :   }\n    \
    \ 100 30   94:  SEQUENCE {\n     102 06    7:   OBJECT IDENTIFIER\n          \
    \      :    id-Gost28147-89-CryptoPro-A-ParamSet\n     111 30   83:   SEQUENCE\
    \ {\n     113 04   64:    OCTET STRING\n                      --  K1 K2 K3 K4\
    \ K5 K6 K7 K8\n                      --  9  3  E  E  B  3  1  B\n            \
    \          --  6  7  4  7  5  A  D  A\n                      --  3  E  6  A  1\
    \  D  2  F\n                      --  2  9  2  C  9  C  9  5\n               \
    \       --  8  8  B  D  8  1  7  0\n                      --  B  A  3  1  D  2\
    \  A  C\n                      --  1  F  D  3  F  0  6  E\n                  \
    \    --  7  0  8  9  0  B  0  8\n                      --  A  5  C  0  E  7  8\
    \  6\n                      --  4  2  F  2  4  5  C  2\n                     \
    \ --  E  6  5  B  2  9  4  3\n                      --  F  C  A  4  3  4  5  9\n\
    \                      --  C  B  0  F  C  8  F  1\n                      --  0\
    \  4  7  8  7  F  3  7\n                      --  D  D  1  5  A  E  B  D\n   \
    \                   --  5  1  9  6  6  6  E  4\n                :     93 EE B3\
    \ 1B 67 47 5A DA 3E 6A 1D 2F 29 2C 9C 95\n                :     88 BD 81 70 BA\
    \ 31 D2 AC 1F D3 F0 6E 70 89 0B 08\n                :     A5 C0 E7 86 42 F2 45\
    \ C2 E6 5B 29 43 FC A4 34 59\n                :     CB 0F C8 F1 04 78 7F 37 DD\
    \ 15 AE BD 51 96 66 E4\n     179 02    1:    INTEGER 1\n     182 02    1:    INTEGER\
    \ 64\n     185 30    9:    SEQUENCE {\n     187 06    7:     OBJECT IDENTIFIER\n\
    \                :      id-Gost28147-89-CryptoPro-KeyMeshing\n               \
    \ :     }\n                :    }\n                :   }\n     196 30   94:  SEQUENCE\
    \ {\n     198 06    7:   OBJECT IDENTIFIER\n                :    id-Gost28147-89-CryptoPro-B-ParamSet\n\
    \     207 30   83:   SEQUENCE {\n     209 04   64:    OCTET STRING\n         \
    \       :     80 E7 28 50 41 C5 73 24 B2 00 C2 AB 1A AD F6 BE\n              \
    \  :     34 9B 94 98 5D 26 5D 13 05 D1 AE C7 9C B2 BB 31\n                :  \
    \   29 73 1C 7A E7 5A 41 42 A3 8C 07 D9 CF FF DF 06\n                :     DB\
    \ 34 6A 6F 68 6E 80 FD 76 19 E9 85 FE 48 35 EC\n     275 02    1:    INTEGER 1\n\
    \     278 02    1:    INTEGER 64\n     281 30    9:    SEQUENCE {\n     283 06\
    \    7:     OBJECT IDENTIFIER\n                :      id-Gost28147-89-CryptoPro-KeyMeshing\n\
    \                :     }\n                :    }\n                :   }\n    \
    \ 292 30   94:  SEQUENCE {\n     294 06    7:   OBJECT IDENTIFIER\n          \
    \      :    id-Gost28147-89-CryptoPro-C-ParamSet\n     303 30   83:   SEQUENCE\
    \ {\n     305 04   64:    OCTET STRING\n                :     10 83 8C A7 B1 26\
    \ D9 94 C7 50 BB 60 2D 01 01 85\n                :     9B 45 48 DA D4 9D 5E E2\
    \ 05 FA 12 2F F2 A8 24 0E\n                :     48 3B 97 FC 5E 72 33 36 8F C9\
    \ C6 51 EC D7 E5 BB\n                :     A9 6E 6A 4D 7A EF F0 19 66 1C AF C3\
    \ 33 B4 7D 78\n     371 02    1:    INTEGER 1\n     374 02    1:    INTEGER 64\n\
    \     377 30    9:    SEQUENCE {\n     379 06    7:     OBJECT IDENTIFIER\n  \
    \              :      id-Gost28147-89-CryptoPro-KeyMeshing\n                :\
    \     }\n                :    }\n                :   }\n     388 30   94:  SEQUENCE\
    \ {\n     390 06    7:   OBJECT IDENTIFIER\n                :    id-Gost28147-89-CryptoPro-D-ParamSet\n\
    \     399 30   83:   SEQUENCE {\n     401 04   64:    OCTET STRING\n         \
    \       :     FB 11 08 31 C6 C5 C0 0A 23 BE 8F 66 A4 0C 93 F8\n              \
    \  :     6C FA D2 1F 4F E7 25 EB 5E 60 AE 90 02 5D BB 24\n                :  \
    \   77 A6 71 DC 9D D2 3A 83 E8 4B 64 C5 D0 84 57 49\n                :     15\
    \ 99 4C B7 BA 33 E9 AD 89 7F FD 52 31 28 16 7E\n     467 02    1:    INTEGER 1\n\
    \     470 02    1:    INTEGER 64\n     473 30    9:    SEQUENCE {\n     475 06\
    \    7:     OBJECT IDENTIFIER\n                :      id-Gost28147-89-CryptoPro-KeyMeshing\n\
    \                :     }\n                :    }\n                :   }\n    \
    \            :  }\n   |>Gost28147-89-ParamSetParameters.bin\n   |MIIB4DBeBgcqhQMCAh8AMFMEQEzeOJwpie+2/+tWxV7CmwKYdWE7ET+JYAOXDHmK\n\
    \   |odVd4hCtQzdds460LHfnzUbK+tZqIB9w9B6kqwPyIWW4RNgCAQACAUAwCQYHKoUD\n   |AgIOADBeBgcqhQMCAh8BMFMEQJPusxtnR1raPmodLyksnJWIvYFwujHSrB/T8G5w\n\
    \   |iQsIpcDnhkLyRcLmWylD/KQ0WcsPyPEEeH833RWuvVGWZuQCAQECAUAwCQYHKoUD\n   |AgIOATBeBgcqhQMCAh8CMFMEQIDnKFBBxXMksgDCqxqt9r40m5SYXSZdEwXRrsec\n\
    \   |srsxKXMceudaQUKjjAfZz//fBts0am9oboD9dhnphf5INewCAQECAUAwCQYHKoUD\n   |AgIOATBeBgcqhQMCAh8DMFMEQBCDjKexJtmUx1C7YC0BAYWbRUja1J1e4gX6Ei/y\n\
    \   |qCQOSDuX/F5yMzaPycZR7Nflu6luak167/AZZhyvwzO0fXgCAQECAUAwCQYHKoUD\n   |AgIOATBeBgcqhQMCAh8EMFMEQPsRCDHGxcAKI76PZqQMk/hs+tIfT+cl615grpAC\n\
    \   |Xbskd6Zx3J3SOoPoS2TF0IRXSRWZTLe6M+mtiX/9UjEoFn4CAQECAUAwCQYHKoUD\n   |AgIOAQ==\n\
    \   |<Gost28147-89-ParamSetParameters.bin\n"
- title: 11.2.  Digest Algorithm Parameters
  contents:
  - "11.2.  Digest Algorithm Parameters\n   For each AlgorithmIdentifier in this sequence,\
    \ the parameters field\n   contains GostR3411-94-ParamSetParameters.\n       0\
    \ 30  226: SEQUENCE {\n       3 30  111:  SEQUENCE {\n       5 06    7:   OBJECT\
    \ IDENTIFIER\n                :    id-GostR3411-94-TestParamSet\n      14 30 \
    \ 100:   SEQUENCE {\n      16 04   64:    OCTET STRING\n                     \
    \ --    pi1 pi2 pi3 pi4 pi5 pi6 pi7 pi8\n                      --     4   E  \
    \ 5   7   6   4   D   1\n                      --     A   B   8   D   C   B  \
    \ B   F\n                      --     9   4   1   A   7   A   4   D\n        \
    \              --     2   C   D   1   1   0   1   0\n                      --\
    \     D   6   A   0   5   7   3   5\n                      --     8   D   3  \
    \ 8   F   2   F   7\n                      --     0   F   4   9   D   1   5  \
    \ A\n                      --     E   A   2   F   8   D   9   4\n            \
    \          --     6   2   E   E   4   3   0   9\n                      --    \
    \ B   3   F   4   A   6   A   2\n                      --     1   8   C   6  \
    \ 9   8   E   3\n                      --     C   1   7   C   E   5   7   E\n\
    \                      --     7   0   6   B   0   9   6   6\n                \
    \      --     F   7   0   2   3   C   8   B\n                      --     5  \
    \ 5   9   5   B   F   2   8\n                      --     3   9   B   3   2  \
    \ E   C   C\n                :     4E 57 64 D1 AB 8D CB BF 94 1A 7A 4D 2C D1 10\
    \ 10\n                :     D6 A0 57 35 8D 38 F2 F7 0F 49 D1 5A EA 2F 8D 94\n\
    \                :     62 EE 43 09 B3 F4 A6 A2 18 C6 98 E3 C1 7C E5 7E\n     \
    \           :     70 6B 09 66 F7 02 3C 8B 55 95 BF 28 39 B3 2E CC\n      82 04\
    \   32:    OCTET STRING\n                :     00 00 00 00 00 00 00 00 00 00 00\
    \ 00 00 00 00 00\n                :     00 00 00 00 00 00 00 00 00 00 00 00 00\
    \ 00 00 00\n                :    }\n                :   }\n     116 30  111: \
    \ SEQUENCE {\n     118 06    7:   OBJECT IDENTIFIER\n                :    id-GostR3411-94-CryptoProParamSet\n\
    \     127 30  100:   SEQUENCE {\n     129 04   64:    OCTET STRING\n         \
    \       :     A5 74 77 D1 4F FA 66 E3 54 C7 42 4A 60 EC B4 19\n              \
    \  :     82 90 9D 75 1D 4F C9 0B 3B 12 2F 54 79 08 A0 AF\n                :  \
    \   D1 3E 1A 38 C7 B1 81 C6 E6 56 05 87 03 25 EB FE\n                :     9C\
    \ 6D F8 6D 2E AB DE 20 BA 89 3C 92 F8 D3 53 BC\n     195 04   32:    OCTET STRING\n\
    \                :     00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n     \
    \           :     00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n          \
    \      :    }\n                :   }\n                :  }\n   |>GostR3411-94-ParamSetParameters.bin\n\
    \   |MIHiMG8GByqFAwICHgAwZARATldk0auNy7+UGnpNLNEQENagVzWNOPL3D0nRWuov\n   |jZRi7kMJs/SmohjGmOPBfOV+cGsJZvcCPItVlb8oObMuzAQgAAAAAAAAAAAAAAAA\n\
    \   |AAAAAAAAAAAAAAAAAAAAAAAAAAAwbwYHKoUDAgIeATBkBECldHfRT/pm41THQkpg\n   |7LQZgpCddR1PyQs7Ei9UeQigr9E+GjjHsYHG5lYFhwMl6/6cbfhtLqveILqJPJL4\n\
    \   |01O8BCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\n   |<GostR3411-94-ParamSetParameters.bin\n"
- title: 11.3.  GOST R 34.10-94 Public Key Algorithm Parameters
  contents:
  - "11.3.  GOST R 34.10-94 Public Key Algorithm Parameters\n   For each AlgorithmIdentifier\
    \ in this sequence, the parameters field\n   contains GostR3410-94-ParamSetParameters.\n\
    \       0 30 2882: SEQUENCE {\n       4 30  209:  SEQUENCE {\n       7 06    7:\
    \   OBJECT IDENTIFIER\n                :    id-GostR3410-94-TestParamSet\n   \
    \   16 30  197:   SEQUENCE {\n      19 02    2:    INTEGER 512\n      23 02  \
    \ 65:    INTEGER\n                :     00 EE 81 72 AE 89 96 60 8F B6 93 59 B8\
    \ 9E B8 2A\n                :     69 85 45 10 E2 97 7A 4D 63 BC 97 32 2C E5 DC\
    \ 33\n                :     86 EA 0A 12 B3 43 E9 19 0F 23 17 75 39 84 58 39\n\
    \                :     78 6B B0 C3 45 D1 65 97 6E F2 19 5E C9 B1 C3 79\n     \
    \           :     E3\n      90 02   33:    INTEGER\n                :     00 98\
    \ 91 5E 7E C8 26 5E DF CD A3 1E 88 F2 48 09\n                :     DD B0 64 BD\
    \ C7 28 5D D5 0D 72 89 F0 AC 6F 49 DD\n                :     2D\n     125 02 \
    \  65:    INTEGER\n                :     00 9E 96 03 15 00 C8 77 4A 86 95 82 D4\
    \ AF DE 21\n                :     27 AF AD 25 38 B4 B6 27 0A 6F 7C 88 37 B5 0D\
    \ 50\n                :     F2 06 75 59 84 A4 9E 50 93 04 D6 48 BE 2A B5 AA\n\
    \                :     B1 8E BE 2C D4 6A C3 D8 49 5B 14 2A A6 CE 23 E2\n     \
    \           :     1C\n     192 30   22:    SEQUENCE {\n     194 06    7:     OBJECT\
    \ IDENTIFIER id-GostR3410-94-a\n     203 30   11:     SEQUENCE {\n     205 02\
    \    2:      INTEGER 24265\n     209 02    2:      INTEGER 29505\n     213 02\
    \    1:      INTEGER 2\n                :      }\n                :     }\n  \
    \              :    }\n                :   }\n     216 30  342:  SEQUENCE {\n\
    \     220 06    7:   OBJECT IDENTIFIER\n                :    id-GostR3410-94-CryptoPro-A-ParamSet\n\
    \     229 30  329:   SEQUENCE {\n     233 02    2:    INTEGER 1024\n     237 02\
    \  129:    INTEGER\n                :     00 B4 E2 5E FB 01 8E 3C 8B 87 50 5E\
    \ 2A 67 55 3C\n                :     5E DC 56 C2 91 4B 7E 4F 89 D2 3F 03 F0 33\
    \ 77 E7\n                :     0A 29 03 48 9D D6 0E 78 41 8D 3D 85 1E DB 53 17\n\
    \                :     C4 87 1E 40 B0 42 28 C3 B7 90 29 63 C4 B7 D8 5D\n     \
    \           :     52 B9 AA 88 F2 AF DB EB 28 DA 88 69 D6 DF 84 6A\n          \
    \      :     1D 98 92 4E 92 55 61 BD 69 30 0B 9D DD 05 D2 47\n               \
    \ :     B5 92 2D 96 7C BB 02 67 18 81 C5 7D 10 E5 EF 72\n                :   \
    \  D3 E6 DA D4 22 3D C8 2A A1 F7 D0 29 46 51 A4 80\n                :     DF\n\
    \     369 02   33:    INTEGER\n                :     00 97 24 32 A4 37 17 8B 30\
    \ BD 96 19 5B 77 37 89\n                :     AB 2F FF 15 59 4B 17 6D D1 75 B6\
    \ 32 56 EE 5A F2\n                :     CF\n     404 02  129:    INTEGER\n   \
    \             :     00 8F D3 67 31 23 76 54 BB E4 1F 5F 1F 84 53 E7\n        \
    \        :     1C A4 14 FF C2 2C 25 D9 15 30 9E 5D 2E 62 A2 A2\n             \
    \   :     6C 71 11 F3 FC 79 56 8D AF A0 28 04 2F E1 A5 2A\n                : \
    \    04 89 80 5C 0D E9 A1 A4 69 C8 44 C7 CA BB EE 62\n                :     5C\
    \ 30 78 88 8C 1D 85 EE A8 83 F1 AD 5B C4 E6 77\n                :     6E 8E 1A\
    \ 07 50 91 2D F6 4F 79 95 64 99 F1 E1 82\n                :     47 5B 0B 60 E2\
    \ 63 2A DC D8 CF 94 E9 C5 4F D1 F3\n                :     B1 09 D8 1F 00 BF 2A\
    \ B8 CB 86 2A DF 7D 40 B9 36\n                :     9A\n     536 30   24:    SEQUENCE\
    \ {\n     538 06    7:     OBJECT IDENTIFIER id-GostR3410-94-bBis\n     547 30\
    \   13:     SEQUENCE {\n     549 02    4:      INTEGER 1376285941\n     555 02\
    \    5:      INTEGER\n                :       00 EE 39 AD B3\n               \
    \ :      }\n                :     }\n                :    }\n                :\
    \   }\n     562 30  427:  SEQUENCE {\n     566 06    7:   OBJECT IDENTIFIER\n\
    \                :    id-GostR3410-94-CryptoPro-B-ParamSet\n     575 30  414:\
    \   SEQUENCE {\n     579 02    2:    INTEGER 1024\n     583 02  129:    INTEGER\n\
    \                :     00 C6 97 1F C5 75 24 B3 0C 90 18 C5 E6 21 DE 15\n     \
    \           :     49 97 36 85 4F 56 A6 F8 AE E6 5A 7A 40 46 32 B1\n          \
    \      :     BC F0 34 9F FC AF CB 0A 10 31 77 97 1F C1 61 2A\n               \
    \ :     DC DB 8C 8C C9 38 C7 02 25 C8 FD 12 AF F0 1B 1D\n                :   \
    \  06 4E 0A D6 FD E6 AB 91 59 16 6C B9 F2 FC 17 1D\n                :     92 F0\
    \ CC 7B 6A 6B 2C D7 FA 34 2A CB E2 C9 31 5A\n                :     42 D5 76 B1\
    \ EC CE 77 A9 63 15 7F 3D 0B D9 6A 8E\n                :     B0 B0 F3 50 2A D2\
    \ 38 10 1B 05 11 63 34 F1 E5 B7\n                :     AB\n     715 02   33: \
    \   INTEGER\n                :     00 B0 9D 63 4C 10 89 9C D7 D4 C3 A7 65 74 03\
    \ E0\n                :     58 10 B0 7C 61 A6 88 BA B2 C3 7F 47 5E 30 8B 06\n\
    \                :     07\n     750 02  128:    INTEGER\n                :   \
    \  3D 26 B4 67 D9 4A 3F FC 9D 71 BF 8D B8 93 40 84\n                :     13 72\
    \ 64 F3 C2 E9 EB 16 DC A2 14 B8 BC 7C 87 24\n                :     85 33 67 44\
    \ 93 4F D2 EF 59 43 F9 ED 0B 74 5B 90\n                :     AA 3E C8 D7 0C DC\
    \ 91 68 24 78 B6 64 A2 E1 F8 FB\n                :     56 CE F2 97 2F EE 7E DB\
    \ 08 4A F7 46 41 9B 85 4F\n                :     AD 02 CC 3E 36 46 FF 2E 1A 18\
    \ DD 4B EB 3C 44 F7\n                :     F2 74 55 88 02 96 49 67 45 46 CC 91\
    \ 87 C2 07 FB\n                :     8F 2C EC E8 E2 29 3F 68 39 5C 47 04 AF 04\
    \ BA B5\n     881 30  110:    SEQUENCE {\n     883 06    7:     OBJECT IDENTIFIER\
    \ id-GostR3410-94-bBis\n     892 30   99:     SEQUENCE {\n     894 02    4:  \
    \    INTEGER 1536654555\n     900 02    4:      INTEGER 1855361757\n     906 02\
    \   85:      INTEGER\n                :       00 BC 3C BB DB 7E 6F 84 82 86 E1\
    \ 9A D9 A2 7A 8E\n                :       29 7E 5B 71 C5 3D D9 74 CD F6 0F 93\
    \ 73 56 DF 69\n                :       CB C9 7A 30 0C CC 71 68 5C 55 30 46 14\
    \ 7F 11 56\n                :       8C 4F DD F3 63 D9 D8 86 43 83 45 A6 2C 3B\
    \ 75 96\n                :       3D 65 46 AD FA BF 31 B3 12 90 D1 2C AE 65 EC\
    \ B8\n                :       30 9E F6 67 82\n                :      }\n     \
    \           :     }\n                :    }\n                :   }\n     993 30\
    \  351:  SEQUENCE {\n     997 06    7:   OBJECT IDENTIFIER\n                :\
    \    id-GostR3410-94-CryptoPro-C-ParamSet\n    1006 30  338:   SEQUENCE {\n  \
    \  1010 02    2:    INTEGER 1024\n    1014 02  129:    INTEGER\n             \
    \   :     00 9D 88 E6 D7 FE 33 13 BD 2E 74 5C 7C DD 2A B9\n                : \
    \    EE 4A F3 C8 89 9E 84 7D E7 4A 33 78 3E A6 8B C3\n                :     05\
    \ 88 BA 1F 73 8C 6A AF 8A B3 50 53 1F 18 54 C3\n                :     83 7C C3\
    \ C8 60 FF D7 E2 E1 06 C3 F6 3B 3D 8A 4C\n                :     03 4C E7 39 42\
    \ A6 C3 D5 85 B5 99 CF 69 5E D7 A3\n                :     C4 A9 3B 2B 94 7B 71\
    \ 57 BB 1A 1C 04 3A B4 1E C8\n                :     56 6C 61 45 E9 38 A6 11 90\
    \ 6D E0 D3 2E 56 24 94\n                :     56 9D 7E 99 9A 0D DA 5C 87 9B DD\
    \ 91 FE 12 4D F1\n                :     E9\n    1146 02   33:    INTEGER\n   \
    \             :     00 FA DD 19 7A BD 19 A1 B4 65 3E EC F7 EC A4 D6\n        \
    \        :     A2 2B 1F 7F 89 3B 64 1F 90 16 41 FB B5 55 35 4F\n             \
    \   :     AF\n    1181 02  128:    INTEGER\n                :     74 47 ED 71\
    \ 56 31 05 99 07 0B 12 60 99 47 A5 C8\n                :     C8 A8 62 5C F1 CF\
    \ 25 2B 40 7B 33 1F 93 D6 39 DD\n                :     D1 BA 39 26 56 DE CA 99\
    \ 2D D0 35 35 43 29 A1 E9\n                :     5A 6E 32 D6 F4 78 82 D9 60 B8\
    \ F1 0A CA FF 79 6D\n                :     13 CD 96 11 F8 53 DA B6 D2 62 34 83\
    \ E4 67 88 70\n                :     84 93 93 7A 1A 29 44 25 98 AE C2 E0 74 20\
    \ 22 56\n                :     34 40 FE 9C 18 74 0E CE 67 65 AC 05 FA F0 24 A6\n\
    \                :     4B 02 6E 7E 40 88 40 81 9E 96 2E 7E 5F 40 1A E3\n    1312\
    \ 30   34:    SEQUENCE {\n    1314 06    7:     OBJECT IDENTIFIER id-GostR3410-94-bBis\n\
    \    1323 30   23:     SEQUENCE {\n    1325 02    4:      INTEGER 1132758852\n\
    \    1331 02    5:      INTEGER\n                :       00 B5 0A 82 6D\n    1338\
    \ 02    8:      INTEGER\n                :       7F 57 5E 81 94 BC 5B DF\n   \
    \             :      }\n                :     }\n                :    }\n    \
    \            :   }\n    1348 30  371:  SEQUENCE {\n    1352 06    7:   OBJECT\
    \ IDENTIFIER\n                :    id-GostR3410-94-CryptoPro-D-ParamSet\n    1361\
    \ 30  358:   SEQUENCE {\n    1365 02    2:    INTEGER 1024\n    1369 02  129:\
    \    INTEGER\n                :     00 80 F1 02 D3 2B 0F D1 67 D0 69 C2 7A 30\
    \ 7A DA\n                :     D2 C4 66 09 19 04 DB AA 55 D5 B8 CC 70 26 F2 F7\n\
    \                :     A1 91 9B 89 0C B6 52 C4 0E 05 4E 1E 93 06 73 5B\n     \
    \           :     43 D7 B2 79 ED DF 91 02 00 1C D9 E1 A8 31 FE 8A\n          \
    \      :     16 3E ED 89 AB 07 CF 2A BE 82 42 AC 9D ED DD BF\n               \
    \ :     98 D6 2C DD D1 EA 4F 5F 15 D3 A4 2A 66 77 BD D2\n                :   \
    \  93 B2 42 60 C0 F2 7C 0F 1D 15 94 86 14 D5 67 B6\n                :     6F A9\
    \ 02 BA A1 1A 69 AE 3B CE AD BB 83 E3 99 C9\n                :     B5\n    1501\
    \ 02   33:    INTEGER\n                :     00 F0 F5 44 C4 18 AA C2 34 F6 83\
    \ F0 33 51 1B 65\n                :     C2 16 51 A6 07 8B DA 2D 69 BB 9F 73 28\
    \ 67 50 21\n                :     49\n    1536 02  128:    INTEGER\n         \
    \       :     6B CC 0B 4F AD B3 88 9C 1E 06 AD D2 3C C0 9B 8A\n              \
    \  :     B6 EC DE DF 73 F0 46 32 59 5E E4 25 00 05 D6 AF\n                :  \
    \   5F 5A DE 44 CB 1E 26 E6 26 3C 67 23 47 CF A2 6F\n                :     9E\
    \ 93 93 68 1E 6B 75 97 33 78 4C DE 5D BD 9A 14\n                :     A3 93 69\
    \ DF D9 9F A8 5C C0 D1 02 41 C4 01 03 43\n                :     F3 4A 91 39 3A\
    \ 70 6C F1 26 77 CB FA 1F 57 8D 6B\n                :     6C FB E8 A1 24 2C FC\
    \ C9 4B 3B 65 3A 47 6E 14 5E\n                :     38 62 C1 8C C3 FE D8 25 7C\
    \ FE F7 4C DB 20 5B F1\n    1667 30   54:    SEQUENCE {\n    1669 06    7:   \
    \  OBJECT IDENTIFIER id-GostR3410-94-bBis\n    1678 30   43:     SEQUENCE {\n\
    \    1680 02    4:      INTEGER 333089693\n    1686 02    5:      INTEGER\n  \
    \              :       00 A0 E9 DE 4B\n    1693 02   28:      INTEGER\n      \
    \          :       41 AB 97 85 7F 42 61 43 55 D3 2D B0 B1 06 9F 10\n         \
    \       :       9A 4D A2 83 67 6C 7C 53 A6 81 85 B4\n                :      }\n\
    \                :     }\n                :    }\n                :   }\n    1723\
    \ 30  396:  SEQUENCE {\n    1727 06    7:   OBJECT IDENTIFIER\n              \
    \  :    id-GostR3410-94-CryptoPro-XchA-ParamSet\n    1736 30  383:   SEQUENCE\
    \ {\n    1740 02    2:    INTEGER 1024\n    1744 02  129:    INTEGER\n       \
    \         :     00 CA 3B 3F 2E EE 9F D4 63 17 D4 95 95 A9 E7 51\n            \
    \    :     8E 6C 63 D8 F4 EB 4D 22 D1 0D 28 AF 0B 88 39 F0\n                :\
    \     79 F8 28 9E 60 3B 03 53 07 84 B9 BB 5A 1E 76 85\n                :     9E\
    \ 48 50 C6 70 C7 B7 1C 0D F8 4C A3 E0 D6 C1 77\n                :     FE 9F 78\
    \ A9 D8 43 32 30 A8 83 CD 82 A2 B2 B5 C7\n                :     A3 30 69 80 27\
    \ 85 70 CD B7 9B F0 10 74 A6 9C 96\n                :     23 34 88 24 B0 C5 37\
    \ 91 D5 3C 6A 78 CA B6 9E 1C\n                :     FB 28 36 86 11 A3 97 F5 0F\
    \ 54 1E 16 DB 34 8D BE\n                :     5F\n    1876 02   33:    INTEGER\n\
    \                :     00 CA E4 D8 5F 80 C1 47 70 4B 0C A4 8E 85 FB 00\n     \
    \           :     A9 05 7A A4 AC C4 46 68 E1 7F 19 96 D7 15 26 90\n          \
    \      :     D9\n    1911 02  129:    INTEGER\n                :     00 BE 27\
    \ D6 52 F2 F1 E3 39 DA 73 42 11 B8 5B 06\n                :     AE 4D E2 36 AA\
    \ 8F BE EB 3F 1A DC C5 2C D4 38 53\n                :     77 7E 83 4A 6A 51 81\
    \ 38 67 8A 8A DB D3 A5 5C 70\n                :     A7 EA B1 BA 7A 07 19 54 86\
    \ 77 AA F4 E6 09 FF B4\n                :     7F 6B 9D 7E 45 B0 D0 6D 83 D7 AD\
    \ C5 33 10 AB D8\n                :     57 83 E7 31 7F 7E C7 32 68 B6 A9 C0 8D\
    \ 26 0B 85\n                :     D8 48 56 96 CA 39 C1 7B 17 F0 44 D1 E0 50 48\
    \ 90\n                :     36 AB D3 81 C5 E6 BF 82 BA 35 2A 1A FF 13 66 01\n\
    \                :     AF\n    2043 30   78:    SEQUENCE {\n    2045 06    7:\
    \     OBJECT IDENTIFIER id-GostR3410-94-bBis\n    2054 30   67:     SEQUENCE {\n\
    \    2056 02    5:      INTEGER\n                :       00 D0 5E 9F 14\n    2063\
    \ 02    4:      INTEGER 1177570399\n    2069 02   52:      INTEGER\n         \
    \       :       35 AB 87 53 99 CD A3 3C 14 6C A6 29 66 0E 5A 5E\n            \
    \    :       5C 07 71 4C A3 26 DB 03 2D D6 75 19 95 CD B9 0A\n               \
    \ :       61 2B 92 28 93 2D 83 02 70 4E C2 4A 5D EF 77 39\n                : \
    \      C5 81 3D 83\n                :      }\n                :     }\n      \
    \          :    }\n                :   }\n    2123 30  375:  SEQUENCE {\n    2127\
    \ 06    7:   OBJECT IDENTIFIER\n                :    id-GostR3410-94-CryptoPro-XchB-ParamSet\n\
    \    2136 30  362:   SEQUENCE {\n    2140 02    2:    INTEGER 1024\n    2144 02\
    \  129:    INTEGER\n                :     00 92 86 DB DA 91 EC CF C3 06 0A A5\
    \ 59 83 18 E2\n                :     A6 39 F5 BA 90 A4 CA 65 61 57 B2 67 3F B1\
    \ 91 CD\n                :     05 89 EE 05 F4 CE F1 BD 13 50 84 08 27 14 58 C3\n\
    \                :     08 51 CE 7A 4E F5 34 74 2B FB 11 F4 74 3C 8F 78\n     \
    \           :     7B 11 19 3B A3 04 C0 E6 BC A2 57 01 BF 88 AF 1C\n          \
    \      :     B9 B8 FD 47 11 D8 9F 88 E3 2B 37 D9 53 16 54 1B\n               \
    \ :     F1 E5 DB B4 98 9B 3D F1 36 59 B8 8C 0F 97 A3 C1\n                :   \
    \  08 7B 9F 2D 53 17 D5 57 DC D4 AF C6 D0 A7 54 E2\n                :     79\n\
    \    2276 02   33:    INTEGER\n                :     00 C9 66 E9 B3 B8 B7 CD D8\
    \ 2F F0 F8 3A F8 70 36\n                :     C3 8F 42 23 8E C5 0A 87 6C D3 90\
    \ E4 3D 67 B6 01\n                :     3F\n    2311 02  128:    INTEGER\n   \
    \             :     7E 9C 30 96 67 6F 51 E3 B2 F9 88 4C F0 AC 21 56\n        \
    \        :     77 94 96 F4 10 E0 49 CE D7 E5 3D 8B 7B 5B 36 6B\n             \
    \   :     1A 60 08 E5 19 66 05 A5 5E 89 C3 19 0D AB F8 0B\n                : \
    \    9F 11 63 C9 79 FC D1 83 28 DA E5 E9 04 88 11 B3\n                :     70\
    \ 10 7B B7 71 5F 82 09 1B B9 DE 0E 33 EE 2F ED\n                :     62 55 47\
    \ 4F 87 69 FC E5 EA FA EE F1 CB 5A 32 E0\n                :     D5 C6 C2 F0 FC\
    \ 0B 34 47 07 29 47 F5 B4 C3 87 66\n                :     69 93 A3 33 FC 06 56\
    \ 8E 53 4A D5 6D 23 38 D7 29\n    2442 30   58:    SEQUENCE {\n    2444 06   \
    \ 7:     OBJECT IDENTIFIER id-GostR3410-94-bBis\n    2453 30   47:     SEQUENCE\
    \ {\n    2455 02    4:      INTEGER 2046851076\n    2461 02    5:      INTEGER\n\
    \                :       00 D3 1A 4F F7\n    2468 02   32:      INTEGER\n    \
    \            :       7E C1 23 D1 61 47 77 62 83 8C 2B EA 9D BD F3 30\n       \
    \         :       74 AF 6D 41 D1 08 A0 66 A1 E7 A0 7A B3 04 8D E2\n          \
    \      :      }\n                :     }\n                :    }\n           \
    \     :   }\n    2502 30  380:  SEQUENCE {\n    2506 06    7:   OBJECT IDENTIFIER\n\
    \                :    id-GostR3410-94-CryptoPro-XchC-ParamSet\n    2515 30  367:\
    \   SEQUENCE {\n    2519 02    2:    INTEGER 1024\n    2523 02  129:    INTEGER\n\
    \                :     00 B1 94 03 6A CE 14 13 9D 36 D6 42 95 AE 6C 50\n     \
    \           :     FC 4B 7D 65 D8 B3 40 71 13 66 CA 93 F3 83 65 39\n          \
    \      :     08 EE 63 7B E4 28 05 1D 86 61 26 70 AD 7B 40 2C\n               \
    \ :     09 B8 20 FA 77 D9 DA 29 C8 11 1A 84 96 DA 6C 26\n                :   \
    \  1A 53 ED 25 2E 4D 8A 69 A2 03 76 E6 AD DB 3B DC\n                :     D3 31\
    \ 74 9A 49 1A 18 4B 8F DA 6D 84 C3 1C F0 5F\n                :     91 19 B5 ED\
    \ 35 24 6E A4 56 2D 85 92 8B A1 13 6A\n                :     8D 0E 5A 7E 5C 76\
    \ 4B A8 90 20 29 A1 33 6C 63 1A\n                :     1D\n    2655 02   33: \
    \   INTEGER\n                :     00 96 12 04 77 DF 0F 38 96 62 8E 6F 4A 88 D8\
    \ 3C\n                :     93 20 4C 21 0F F2 62 BC CB 7D AE 45 03 55 12 52\n\
    \                :     59\n    2690 02  128:    INTEGER\n                :   \
    \  3F 18 17 05 2B AA 75 98 FE 3E 4F 4F C5 C5 F6 16\n                :     E1 22\
    \ CF F9 EB D8 9E F8 1D C7 CE 8B F5 6C C6 4B\n                :     43 58 6C 80\
    \ F1 C4 F5 6D D5 71 8F DD 76 30 0B E3\n                :     36 78 42 59 CA 25\
    \ AA DE 5A 48 3F 64 C0 2A 20 CF\n                :     4A 10 F9 C1 89 C4 33 DE\
    \ FE 31 D2 63 E6 C9 76 46\n                :     60 A7 31 EC CA EC B7 4C 82 79\
    \ 30 37 31 E8 CF 69\n                :     20 5B C7 3E 5A 70 BD F9 3E 5B B6 81\
    \ DA B4 EE B9\n                :     C7 33 CA AB 2F 67 3C 47 5E 0E CA 92 1D 29\
    \ 78 2E\n    2821 30   63:    SEQUENCE {\n    2823 06    7:     OBJECT IDENTIFIER\
    \ id-GostR3410-94-bBis\n    2832 30   52:     SEQUENCE {\n    2834 02    4:  \
    \    INTEGER 371898640\n    2840 02    5:      INTEGER\n                :    \
    \   00 93 F8 28 D3\n    2847 02   37:      INTEGER\n                :       00\
    \ CA 82 CC E7 8A 73 8B C4 6F 10 3D 53 B9 BF 80\n                :       97 45\
    \ EC 84 5E 4F 6D A4 62 60 6C 51 F6 0E CF 30\n                :       2E 31 20\
    \ 4B 81\n                :      }\n                :     }\n                :\
    \    }\n                :   }\n                :  }\n   |>GostR3410-94-ParamSetParameters.bin\n\
    \   |MIILQjCB0QYHKoUDAgIgADCBxQICAgACQQDugXKuiZZgj7aTWbieuCpphUUQ4pd6\n   |TWO8lzIs5dwzhuoKErND6RkPIxd1OYRYOXhrsMNF0WWXbvIZXsmxw3njAiEAmJFe\n\
    \   |fsgmXt/Nox6I8kgJ3bBkvccoXdUNconwrG9J3S0CQQCelgMVAMh3SoaVgtSv3iEn\n   |r60lOLS2JwpvfIg3tQ1Q8gZ1WYSknlCTBNZIviq1qrGOvizUasPYSVsUKqbOI+Ic\n\
    \   |MBYGByqFAwICFAEwCwICXskCAnNBAgECMIIBVgYHKoUDAgIgAjCCAUkCAgQAAoGB\n   |ALTiXvsBjjyLh1BeKmdVPF7cVsKRS35PidI/A/Azd+cKKQNIndYOeEGNPYUe21MX\n\
    \   |xIceQLBCKMO3kCljxLfYXVK5qojyr9vrKNqIadbfhGodmJJOklVhvWkwC53dBdJH\n   |tZItlny7AmcYgcV9EOXvctPm2tQiPcgqoffQKUZRpIDfAiEAlyQypDcXizC9lhlb\n\
    \   |dzeJqy//FVlLF23RdbYyVu5a8s8CgYEAj9NnMSN2VLvkH18fhFPnHKQU/8IsJdkV\n   |MJ5dLmKiomxxEfP8eVaNr6AoBC/hpSoEiYBcDemhpGnIRMfKu+5iXDB4iIwdhe6o\n\
    \   |g/GtW8Tmd26OGgdQkS32T3mVZJnx4YJHWwtg4mMq3NjPlOnFT9HzsQnYHwC/KrjL\n   |hirffUC5NpowGAYHKoUDAgIUBDANAgRSCHT1AgUA7jmtszCCAasGByqFAwICIAMw\n\
    \   |ggGeAgIEAAKBgQDGlx/FdSSzDJAYxeYh3hVJlzaFT1am+K7mWnpARjKxvPA0n/yv\n   |ywoQMXeXH8FhKtzbjIzJOMcCJcj9Eq/wGx0GTgrW/earkVkWbLny/BcdkvDMe2pr\n\
    \   |LNf6NCrL4skxWkLVdrHsznepYxV/PQvZao6wsPNQKtI4EBsFEWM08eW3qwIhALCd\n   |Y0wQiZzX1MOnZXQD4FgQsHxhpoi6ssN/R14wiwYHAoGAPSa0Z9lKP/ydcb+NuJNA\n\
    \   |hBNyZPPC6esW3KIUuLx8hySFM2dEk0/S71lD+e0LdFuQqj7I1wzckWgkeLZkouH4\n   |+1bO8pcv7n7bCEr3RkGbhU+tAsw+Nkb/LhoY3UvrPET38nRViAKWSWdFRsyRh8IH\n\
    \   |+48s7OjiKT9oOVxHBK8EurUwbgYHKoUDAgIUBDBjAgRbl3zbAgRulpLdAlUAvDy7\n   |235vhIKG4ZrZonqOKX5bccU92XTN9g+Tc1bfacvJejAMzHFoXFUwRhR/EVaMT93z\n\
    \   |Y9nYhkODRaYsO3WWPWVGrfq/MbMSkNEsrmXsuDCe9meCMIIBXwYHKoUDAgIgBDCC\n   |AVICAgQAAoGBAJ2I5tf+MxO9LnRcfN0que5K88iJnoR950ozeD6mi8MFiLofc4xq\n\
    \   |r4qzUFMfGFTDg3zDyGD/1+LhBsP2Oz2KTANM5zlCpsPVhbWZz2le16PEqTsrlHtx\n   |V7saHAQ6tB7IVmxhRek4phGQbeDTLlYklFadfpmaDdpch5vdkf4STfHpAiEA+t0Z\n\
    \   |er0ZobRlPuz37KTWoisff4k7ZB+QFkH7tVU1T68CgYB0R+1xVjEFmQcLEmCZR6XI\n   |yKhiXPHPJStAezMfk9Y53dG6OSZW3sqZLdA1NUMpoelabjLW9HiC2WC48QrK/3lt\n\
    \   |E82WEfhT2rbSYjSD5GeIcISTk3oaKUQlmK7C4HQgIlY0QP6cGHQOzmdlrAX68CSm\n   |SwJufkCIQIGeli5+X0Aa4zAiBgcqhQMCAhQEMBcCBEOEh0QCBQC1CoJtAgh/V16B\n\
    \   |lLxb3zCCAXMGByqFAwICIAUwggFmAgIEAAKBgQCA8QLTKw/RZ9BpwnowetrSxGYJ\n   |GQTbqlXVuMxwJvL3oZGbiQy2UsQOBU4ekwZzW0PXsnnt35ECABzZ4agx/ooWPu2J\n\
    \   |qwfPKr6CQqyd7d2/mNYs3dHqT18V06QqZne90pOyQmDA8nwPHRWUhhTVZ7ZvqQK6\n   |oRpprjvOrbuD45nJtQIhAPD1RMQYqsI09oPwM1EbZcIWUaYHi9otabufcyhnUCFJ\n\
    \   |AoGAa8wLT62ziJweBq3SPMCbirbs3t9z8EYyWV7kJQAF1q9fWt5Eyx4m5iY8ZyNH\n   |z6JvnpOTaB5rdZczeEzeXb2aFKOTad/Zn6hcwNECQcQBA0PzSpE5OnBs8SZ3y/of\n\
    \   |V41rbPvooSQs/MlLO2U6R24UXjhiwYzD/tglfP73TNsgW/EwNgYHKoUDAgIUBDAr\n   |AgQT2oudAgUAoOneSwIcQauXhX9CYUNV0y2wsQafEJpNooNnbHxTpoGFtDCCAYwG\n\
    \   |ByqFAwICIQEwggF/AgIEAAKBgQDKOz8u7p/UYxfUlZWp51GObGPY9OtNItENKK8L\n   |iDnwefgonmA7A1MHhLm7Wh52hZ5IUMZwx7ccDfhMo+DWwXf+n3ip2EMyMKiDzYKi\n\
    \   |srXHozBpgCeFcM23m/AQdKacliM0iCSwxTeR1TxqeMq2nhz7KDaGEaOX9Q9UHhbb\n   |NI2+XwIhAMrk2F+AwUdwSwykjoX7AKkFeqSsxEZo4X8ZltcVJpDZAoGBAL4n1lLy\n\
    \   |8eM52nNCEbhbBq5N4jaqj77rPxrcxSzUOFN3foNKalGBOGeKitvTpVxwp+qxunoH\n   |GVSGd6r05gn/tH9rnX5FsNBtg9etxTMQq9hXg+cxf37HMmi2qcCNJguF2EhWlso5\n\
    \   |wXsX8ETR4FBIkDar04HF5r+CujUqGv8TZgGvME4GByqFAwICFAQwQwIFANBenxQC\n   |BEYwTF8CNDWrh1OZzaM8FGymKWYOWl5cB3FMoybbAy3WdRmVzbkKYSuSKJMtgwJw\n\
    \   |TsJKXe93OcWBPYMwggF3BgcqhQMCAiECMIIBagICBAACgYEAkobb2pHsz8MGCqVZ\n   |gxjipjn1upCkymVhV7JnP7GRzQWJ7gX0zvG9E1CECCcUWMMIUc56TvU0dCv7EfR0\n\
    \   |PI94exEZO6MEwOa8olcBv4ivHLm4/UcR2J+I4ys32VMWVBvx5du0mJs98TZZuIwP\n   |l6PBCHufLVMX1Vfc1K/G0KdU4nkCIQDJZumzuLfN2C/w+Dr4cDbDj0IjjsUKh2zT\n\
    \   |kOQ9Z7YBPwKBgH6cMJZnb1HjsvmITPCsIVZ3lJb0EOBJztflPYt7WzZrGmAI5Rlm\n   |BaVeicMZDav4C58RY8l5/NGDKNrl6QSIEbNwEHu3cV+CCRu53g4z7i/tYlVHT4dp\n\
    \   |/OXq+u7xy1oy4NXGwvD8CzRHBylH9bTDh2Zpk6Mz/AZWjlNK1W0jONcpMDoGByqF\n   |AwICFAQwLwIEegB4BAIFANMaT/cCIH7BI9FhR3dig4wr6p298zB0r21B0QigZqHn\n\
    \   |oHqzBI3iMIIBfAYHKoUDAgIhAzCCAW8CAgQAAoGBALGUA2rOFBOdNtZCla5sUPxL\n   |fWXYs0BxE2bKk/ODZTkI7mN75CgFHYZhJnCte0AsCbgg+nfZ2inIERqEltpsJhpT\n\
    \   |7SUuTYppogN25q3bO9zTMXSaSRoYS4/abYTDHPBfkRm17TUkbqRWLYWSi6ETao0O\n   |Wn5cdkuokCApoTNsYxodAiEAlhIEd98POJZijm9KiNg8kyBMIQ/yYrzLfa5FA1US\n\
    \   |UlkCgYA/GBcFK6p1mP4+T0/FxfYW4SLP+evYnvgdx86L9WzGS0NYbIDxxPVt1XGP\n   |3XYwC+M2eEJZyiWq3lpIP2TAKiDPShD5wYnEM97+MdJj5sl2RmCnMezK7LdMgnkw\n\
    \   |NzHoz2kgW8c+WnC9+T5btoHatO65xzPKqy9nPEdeDsqSHSl4LjA/BgcqhQMCAhQE\n   |MDQCBBYquRACBQCT+CjTAiUAyoLM54pzi8RvED1Tub+Al0XshF5PbaRiYGxR9g7P\n\
    \   |MC4xIEuB\n   |<GostR3410-94-ParamSetParameters.bin\n"
- title: 11.4.  GOST R 34.10-2001 Public Key Algorithm Parameters
  contents:
  - "11.4.  GOST R 34.10-2001 Public Key Algorithm Parameters\n   For each AlgorithmIdentifier\
    \ in this sequence, the parameters field\n   contains GostR3410-2001-ParamSetParameters.\n\
    \       0 30  998: SEQUENCE {\n       4 30  156:  SEQUENCE {\n       7 06    7:\
    \   OBJECT IDENTIFIER\n                :    id-GostR3410-2001-TestParamSet\n \
    \     16 30  144:   SEQUENCE {\n      19 02    1:    INTEGER 7\n      22 02  \
    \ 32:    INTEGER\n                :     5F BF F4 98 AA 93 8C E7 39 B8 E0 22 FB\
    \ AF EF 40\n                :     56 3F 6E 6A 34 72 FC 2A 51 4C 0C E9 DA E2 3B\
    \ 7E\n      56 02   33:    INTEGER\n                :     00 80 00 00 00 00 00\
    \ 00 00 00 00 00 00 00 00 00\n                :     00 00 00 00 00 00 00 00 00\
    \ 00 00 00 00 00 00 04\n                :     31\n      91 02   33:    INTEGER\n\
    \                :     00 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n     \
    \           :     01 50 FE 8A 18 92 97 61 54 C5 9C FC 19 3A CC F5\n          \
    \      :     B3\n     126 02    1:    INTEGER 2\n     129 02   32:    INTEGER\n\
    \                :     08 E2 A8 A0 E6 51 47 D4 BD 63 16 03 0E 16 D1 9C\n     \
    \           :     85 C9 7F 0A 9C A2 67 12 2B 96 AB BC EA 7E 8F C8\n          \
    \      :    }\n                :   }\n     163 30  159:  SEQUENCE {\n     166\
    \ 06    7:   OBJECT IDENTIFIER\n                :    id-GostR3410-2001-CryptoPro-A-ParamSet\n\
    \     175 30  147:   SEQUENCE {\n     178 02   33:    INTEGER\n              \
    \  :     00 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF\n                :  \
    \   FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FD\n                :     94\n\
    \     213 02    2:    INTEGER 166\n     217 02   33:    INTEGER\n            \
    \    :     00 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF\n                :\
    \     FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FD\n                :     97\n\
    \     252 02   33:    INTEGER\n                :     00 FF FF FF FF FF FF FF FF\
    \ FF FF FF FF FF FF FF\n                :     FF 6C 61 10 70 99 5A D1 00 45 84\
    \ 1B 09 B7 61 B8\n                :     93\n     287 02    1:    INTEGER 1\n \
    \    290 02   33:    INTEGER\n                :     00 8D 91 E4 71 E0 98 9C DA\
    \ 27 DF 50 5A 45 3F 2B\n                :     76 35 29 4F 2D DF 23 E3 B1 22 AC\
    \ C9 9C 9E 9F 1E\n                :     14\n                :    }\n         \
    \       :   }\n     325 30  188:  SEQUENCE {\n     328 06    7:   OBJECT IDENTIFIER\n\
    \                :    id-GostR3410-2001-CryptoPro-B-ParamSet\n     337 30  176:\
    \   SEQUENCE {\n     340 02   33:    INTEGER\n                :     00 80 00 00\
    \ 00 00 00 00 00 00 00 00 00 00 00 00\n                :     00 00 00 00 00 00\
    \ 00 00 00 00 00 00 00 00 00 0C\n                :     96\n     375 02   32: \
    \   INTEGER\n                :     3E 1A F4 19 A2 69 A5 F8 66 A7 D3 C2 5C 3D F8\
    \ 0A\n                :     E9 79 25 93 73 FF 2B 18 2F 49 D4 CE 7E 1B BC 8B\n\
    \     409 02   33:    INTEGER\n                :     00 80 00 00 00 00 00 00 00\
    \ 00 00 00 00 00 00 00\n                :     00 00 00 00 00 00 00 00 00 00 00\
    \ 00 00 00 00 0C\n                :     99\n     444 02   33:    INTEGER\n   \
    \             :     00 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n        \
    \        :     01 5F 70 0C FF F1 A6 24 E5 E4 97 16 1B CC 8A 19\n             \
    \   :     8F\n     479 02    1:    INTEGER 1\n     482 02   32:    INTEGER\n \
    \               :     3F A8 12 43 59 F9 66 80 B8 3D 1C 3E B2 C0 70 E5\n      \
    \          :     C5 45 C9 85 8D 03 EC FB 74 4B F8 D7 17 71 7E FC\n           \
    \     :    }\n                :   }\n     516 30  159:  SEQUENCE {\n     519 06\
    \    7:   OBJECT IDENTIFIER\n                :    id-GostR3410-2001-CryptoPro-C-ParamSet\n\
    \     528 30  147:   SEQUENCE {\n     531 02   33:    INTEGER\n              \
    \  :     00 9B 9F 60 5F 5A 85 81 07 AB 1E C8 5E 6B 41 C8\n                :  \
    \   AA CF 84 6E 86 78 90 51 D3 79 98 F7 B9 02 2D 75\n                :     98\n\
    \     566 02    3:    INTEGER 32858\n     571 02   33:    INTEGER\n          \
    \      :     00 9B 9F 60 5F 5A 85 81 07 AB 1E C8 5E 6B 41 C8\n               \
    \ :     AA CF 84 6E 86 78 90 51 D3 79 98 F7 B9 02 2D 75\n                :   \
    \  9B\n     606 02   33:    INTEGER\n                :     00 9B 9F 60 5F 5A 85\
    \ 81 07 AB 1E C8 5E 6B 41 C8\n                :     AA 58 2C A3 51 1E DD FB 74\
    \ F0 2F 3A 65 98 98 0B\n                :     B9\n     641 02    1:    INTEGER\
    \ 0\n     644 02   32:    INTEGER\n                :     41 EC E5 57 43 71 1A\
    \ 8C 3C BF 37 83 CD 08 C0 EE\n                :     4D 4D C4 40 D4 64 1A 8F 36\
    \ 6E 55 0D FD B3 BB 67\n                :    }\n                :   }\n     678\
    \ 30  159:  SEQUENCE {\n     681 06    7:   OBJECT IDENTIFIER\n              \
    \  :    id-GostR3410-2001-CryptoPro-XchA-ParamSet\n     690 30  147:   SEQUENCE\
    \ {\n     693 02   33:    INTEGER\n                :     00 FF FF FF FF FF FF\
    \ FF FF FF FF FF FF FF FF FF\n                :     FF FF FF FF FF FF FF FF FF\
    \ FF FF FF FF FF FF FD\n                :     94\n     728 02    2:    INTEGER\
    \ 166\n     732 02   33:    INTEGER\n                :     00 FF FF FF FF FF FF\
    \ FF FF FF FF FF FF FF FF FF\n                :     FF FF FF FF FF FF FF FF FF\
    \ FF FF FF FF FF FF FD\n                :     97\n     767 02   33:    INTEGER\n\
    \                :     00 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF\n     \
    \           :     FF 6C 61 10 70 99 5A D1 00 45 84 1B 09 B7 61 B8\n          \
    \      :     93\n     802 02    1:    INTEGER 1\n     805 02   33:    INTEGER\n\
    \                :     00 8D 91 E4 71 E0 98 9C DA 27 DF 50 5A 45 3F 2B\n     \
    \           :     76 35 29 4F 2D DF 23 E3 B1 22 AC C9 9C 9E 9F 1E\n          \
    \      :     14\n                :    }\n                :   }\n     840 30  159:\
    \  SEQUENCE {\n     843 06    7:   OBJECT IDENTIFIER\n                :    id-GostR3410-2001-CryptoPro-XchB-ParamSet\n\
    \     852 30  147:   SEQUENCE {\n     855 02   33:    INTEGER\n              \
    \  :     00 9B 9F 60 5F 5A 85 81 07 AB 1E C8 5E 6B 41 C8\n                :  \
    \   AA CF 84 6E 86 78 90 51 D3 79 98 F7 B9 02 2D 75\n                :     98\n\
    \     890 02    3:    INTEGER 32858\n     895 02   33:    INTEGER\n          \
    \      :     00 9B 9F 60 5F 5A 85 81 07 AB 1E C8 5E 6B 41 C8\n               \
    \ :     AA CF 84 6E 86 78 90 51 D3 79 98 F7 B9 02 2D 75\n                :   \
    \  9B\n     930 02   33:    INTEGER\n                :     00 9B 9F 60 5F 5A 85\
    \ 81 07 AB 1E C8 5E 6B 41 C8\n                :     AA 58 2C A3 51 1E DD FB 74\
    \ F0 2F 3A 65 98 98 0B\n                :     B9\n     965 02    1:    INTEGER\
    \ 0\n     968 02   32:    INTEGER\n                :     41 EC E5 57 43 71 1A\
    \ 8C 3C BF 37 83 CD 08 C0 EE\n                :     4D 4D C4 40 D4 64 1A 8F 36\
    \ 6E 55 0D FD B3 BB 67\n                :    }\n                :   }\n      \
    \          :  }\n   |>GostR3410-2001-ParamSetParameters.bin\n   |MIID5jCBnAYHKoUDAgIjADCBkAIBBwIgX7/0mKqTjOc5uOAi+6/vQFY/bmo0cvwq\n\
    \   |UUwM6driO34CIQCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEMQIhAIAA\n   |AAAAAAAAAAAAAAAAAAFQ/ooYkpdhVMWc/Bk6zPWzAgECAiAI4qig5lFH1L1jFgMO\n\
    \   |FtGchcl/CpyiZxIrlqu86n6PyDCBnwYHKoUDAgIjATCBkwIhAP//////////////\n   |//////////////////////////2UAgIApgIhAP//////////////////////////\n\
    \   |//////////////2XAiEA/////////////////////2xhEHCZWtEARYQbCbdhuJMC\n   |AQECIQCNkeRx4Jic2iffUFpFPyt2NSlPLd8j47EirMmcnp8eFDCBvAYHKoUDAgIj\n\
    \   |AjCBsAIhAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyWAiA+GvQZomml\n   |+Gan08JcPfgK6Xklk3P/KxgvSdTOfhu8iwIhAIAAAAAAAAAAAAAAAAAAAAAAAAAA\n\
    \   |AAAAAAAAAAAAAAyZAiEAgAAAAAAAAAAAAAAAAAAAAV9wDP/xpiTl5JcWG8yKGY8C\n   |AQECID+oEkNZ+WaAuD0cPrLAcOXFRcmFjQPs+3RL+NcXcX78MIGfBgcqhQMCAiMD\n\
    \   |MIGTAiEAm59gX1qFgQerHshea0HIqs+EboZ4kFHTeZj3uQItdZgCAwCAWgIhAJuf\n   |YF9ahYEHqx7IXmtByKrPhG6GeJBR03mY97kCLXWbAiEAm59gX1qFgQerHshea0HI\n\
    \   |qlgso1Ee3ft08C86ZZiYC7kCAQACIEHs5VdDcRqMPL83g80IwO5NTcRA1GQajzZu\n   |VQ39s7tnMIGfBgcqhQMCAiQAMIGTAiEA////////////////////////////////\n\
    \   |/////////ZQCAgCmAiEA/////////////////////////////////////////ZcC\n   |IQD/////////////////////bGEQcJla0QBFhBsJt2G4kwIBAQIhAI2R5HHgmJza\n\
    \   |J99QWkU/K3Y1KU8t3yPjsSKsyZyenx4UMIGfBgcqhQMCAiQBMIGTAiEAm59gX1qF\n   |gQerHshea0HIqs+EboZ4kFHTeZj3uQItdZgCAwCAWgIhAJufYF9ahYEHqx7IXmtB\n\
    \   |yKrPhG6GeJBR03mY97kCLXWbAiEAm59gX1qFgQerHshea0HIqlgso1Ee3ft08C86\n   |ZZiYC7kCAQACIEHs5VdDcRqMPL83g80IwO5NTcRA1GQajzZuVQ39s7tn\n\
    \   |<GostR3410-2001-ParamSetParameters.bin\n"
- title: 12.  Acknowledgements
  contents:
  - "12.  Acknowledgements\n   This document was created in accordance with \"Russian\
    \ Cryptographic\n   Software Compatibility Agreement\", signed by FGUE STC \"\
    Atlas\",\n   CRYPTO-PRO, Factor-TS, MD PREI, Infotecs GmbH, SPRCIS (SPbRCZI),\n\
    \   Cryptocom, R-Alpha.  The aim of this agreement is to achieve mutual\n   compatibility\
    \ of the products and solutions.\n   The authors wish to thank the following:\n\
    \      Microsoft Corporation Russia for providing information about\n      company\
    \ products and solutions, and also for technical consulting\n      in PKI.\n \
    \     RSA Security Russia and Demos Co Ltd for active collaboration and\n    \
    \  critical help in creation of this document.\n      Peter Gutmann for his helpful\
    \ \"dumpasn1\" program.\n      Russ Hously (Vigil Security, LLC, housley@vigilsec.com)\
    \ and\n      Vasilij Sakharov (DEMOS Co Ltd, svp@dol.ru) for encouraging the\n\
    \      authors to create this document.\n      Derek Atkins (IHTFP Consulting,\
    \ derek@ihtfp.com) and his wife,\n      Heather Anne Harrison, for making the\
    \ document readable.\n      Grigorij Chudov for navigating the IETF process for\
    \ this document.\n   This document is based on a contribution of CRYPTO-PRO Company.\
    \  Any\n   substantial use of the text from this document must acknowledge\n \
    \  CRYPTO-PRO.  CRYPTO-PRO requests that all material mentioning or\n   referencing\
    \ this document identify this as \"CRYPTO-PRO CPALGS\".\n"
- title: 13.  References
  contents:
  - '13.  References

    '
- title: 13.1.  Normative References
  contents:
  - "13.1.  Normative References\n   [GOST28147]   \"Cryptographic Protection for\
    \ Data Processing System\",\n                 GOST 28147-89, Gosudarstvennyi Standard\
    \ of USSR,\n                 Government Committee of the USSR for Standards, 1989.\n\
    \                 (In Russian)\n   [GOSTR341094] \"Information technology.  Cryptographic\
    \ Data Security.\n                 Produce and check procedures of Electronic\
    \ Digital\n                 Signatures based on Asymmetric Cryptographic\n   \
    \              Algorithm.\", GOST R 34.10-94, Gosudarstvennyi Standard\n     \
    \            of Russian Federation, Government Committee of the\n            \
    \     Russia for Standards, 1994.  (In Russian)\n   [GOSTR341001] \"Information\
    \ technology.  Cryptographic data security.\n                 Signature and verification\
    \ processes of [electronic]\n                 digital signature.\", GOST R 34.10-2001,\
    \ Gosudarstvennyi\n                 Standard of Russian Federation, Government\
    \ Committee of\n                 the Russia for Standards, 2001.  (In Russian)\n\
    \   [GOSTR341194] \"Information technology.  Cryptographic Data Security.\n  \
    \               Hashing function.\", GOST R 34.11-94, Gosudarstvennyi\n      \
    \           Standard of Russian Federation, Government Committee of\n        \
    \         the Russia for Standards, 1994.  (In Russian)\n   [RFC2119]     Bradner,\
    \ S., \"Key words for use in RFCs to Indicate\n                 Requirement Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [HMAC]        Krawczyk, H., Bellare, M., and\
    \ R. Canetti, \"HMAC:\n                 Keyed-Hashing for Message Authentication\"\
    , RFC 2104,\n                 February 1997.\n"
- title: 13.2.  Informative References
  contents:
  - "13.2.  Informative References\n   [Schneier95]  B. Schneier, Applied cryptography,\
    \ second edition, John\n                 Wiley & Sons, Inc., 1995.\n   [RFDSL]\
    \       \"Russian Federal Digital Signature Law\", 10 Jan 2002 N\n           \
    \      1-FZ\n   [RFLLIC]      \"Russian Federal Law on Licensing of Selected Activity\n\
    \                 Categories\", 08 Aug 2001 N 128-FZ\n   [CRYPTOLIC]   \"Russian\
    \ Federal Government Regulation on Licensing of\n                 Selected Activity\
    \ Categories in Cryptography Area\", 23\n                 Sep 2002 N 691\n   [X.660]\
    \       ITU-T Recommendation X.660 Information Technology -\n                \
    \ ASN.1 encoding rules: Specification of Basic Encoding\n                 Rules\
    \ (BER), Canonical Encoding Rules (CER) and\n                 Distinguished Encoding\
    \ Rules (DER), 1997.\n   [RFC4134]     Hoffman, P., \"Examples of S/MIME Messages\"\
    , RFC 4134,\n                 July 2005.\n   [TLS]         Dierks, T. and C. Allen,\
    \ \"The TLS Protocol Version\n                 1.0\", RFC 2246, January 1999.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Vladimir Popov\n   CRYPTO-PRO\n   38, Obraztsova,\n  \
    \ Moscow, 127018, Russian Federation\n   EMail: vpopov@cryptopro.ru\n   Igor Kurepkin\n\
    \   CRYPTO-PRO\n   38, Obraztsova,\n   Moscow, 127018, Russian Federation\n  \
    \ EMail: kure@cryptopro.ru\n   Serguei Leontiev\n   CRYPTO-PRO\n   38, Obraztsova,\n\
    \   Moscow, 127018, Russian Federation\n   EMail: lse@cryptopro.ru\n   Grigorij\
    \ Chudov\n   CRYPTO-PRO\n   38, Obraztsova,\n   Moscow, 127018, Russian Federation\n\
    \   EMail: chudov@cryptopro.ru\n   Alexandr Afanasiev\n   Factor-TS\n   office\
    \ 711, 14, Presnenskij val,\n   Moscow, 123557, Russian Federation\n   EMail:\
    \ afa1@factor-ts.ru\n   Nikolaj Nikishin\n   Infotecs GmbH\n   p/b 35, 80-5, Leningradskij\
    \ prospekt,\n   Moscow, 125315, Russian Federation\n   EMail: nikishin@infotecs.ru\n\
    \   Boleslav Izotov\n   FGUE STC \"Atlas\"\n   38, Obraztsova,\n   Moscow, 127018,\
    \ Russian Federation\n   EMail: izotov@nii.voskhod.ru\n   Elena Minaeva\n   MD\
    \ PREI\n   build 3, 6A, Vtoroj Troitskij per.,\n   Moscow, Russian Federation\n\
    \   EMail: evminaeva@mail.ru\n   Serguei Murugov\n   R-Alpha\n   4/1, Raspletina,\n\
    \   Moscow, 123060, Russian Federation\n   EMail: msm@top-cross.ru\n   Igor Ovcharenko\n\
    \   MD PREI\n   Office 600, 14, B.Novodmitrovskaya,\n   Moscow, Russian Federation\n\
    \   EMail: igori@mo.msk.ru\n   Igor Ustinov\n   Cryptocom\n   office 239, 51,\
    \ Leninskij prospekt,\n   Moscow, 119991, Russian Federation\n   EMail: igus@cryptocom.ru\n\
    \   Anatolij Erkin\n   SPRCIS (SPbRCZI)\n   1, Obrucheva,\n   St.Petersburg, 195220,\
    \ Russian Federation\n   EMail: erkin@nevsky.net\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
