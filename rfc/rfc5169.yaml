- title: __initial_text__
  contents:
  - '    Handover Key Management and Re-Authentication Problem Statement

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes the Handover Keying (HOKEY) re-authentication\n\
    \   problem statement.  The current Extensible Authentication Protocol\n   (EAP)\
    \ keying framework is not designed to support re-authentication\n   and handovers\
    \ without re-executing an EAP method.  This often causes\n   unacceptable latency\
    \ in various mobile wireless environments.  This\n   document details the problem\
    \ and defines design goals for a generic\n   mechanism to reuse derived EAP keying\
    \ material for handover.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n   2.  Terminology  . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  4\n   3.  Problem Statement  . . . . . . . . . . . . . . . . . .\
    \ . . . .  4\n   4.  Design Goals . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .  5\n   5.  Security Goals . . . . . . . . . . . . . . . . . . . . . .\
    \ . .  6\n     5.1.  Key Context and Domino Effect  . . . . . . . . . . . . .\
    \ .  7\n     5.2.  Key Freshness  . . . . . . . . . . . . . . . . . . . . . .\
    \  7\n     5.3.  Authentication . . . . . . . . . . . . . . . . . . . . . .  8\n\
    \     5.4.  Authorization  . . . . . . . . . . . . . . . . . . . . . .  8\n  \
    \   5.5.  Channel Binding  . . . . . . . . . . . . . . . . . . . . .  8\n    \
    \ 5.6.  Transport Aspects  . . . . . . . . . . . . . . . . . . . .  8\n   6. \
    \ Use Cases and Related Work . . . . . . . . . . . . . . . . . .  9\n     6.1.\
    \  Method-Specific EAP Re-Authentication  . . . . . . . . . .  9\n     6.2.  IEEE\
    \ 802.11r Applicability . . . . . . . . . . . . . . . . 10\n     6.3.  CAPWAP\
    \ Applicability . . . . . . . . . . . . . . . . . . . 10\n   7.  Security Considerations\
    \  . . . . . . . . . . . . . . . . . . . 11\n   8.  Contributors . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . 11\n   9.  Acknowledgements . . . . . .\
    \ . . . . . . . . . . . . . . . . . 11\n   10. References . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . 12\n     10.1. Normative References . . . .\
    \ . . . . . . . . . . . . . . . 12\n     10.2. Informative References . . . .\
    \ . . . . . . . . . . . . . . 12\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Extensible Authentication Protocol (EAP), specified\
    \ in RFC 3748\n   [RFC3748] is a generic framework supporting multiple authentication\n\
    \   methods.  The primary purpose of EAP is network access control.  It\n   also\
    \ supports exporting session keys derived during the\n   authentication.  The\
    \ EAP keying hierarchy defines two keys that are\n   derived at the top level,\
    \ the Master Session Key (MSK) and the\n   Extended Master Session Key (EMSK).\n\
    \   In many common deployment scenarios, an EAP peer and EAP server\n   authenticate\
    \ each other through a third party known as the pass-\n   through authenticator\
    \ (hereafter referred to as simply\n   \"authenticator\").  The authenticator\
    \ is responsible for encapsulating\n   EAP packets from a network-access technology\
    \ lower layer within the\n   Authentication, Authorization, and Accounting (AAA)\
    \ protocol.  The\n   authenticator does not directly participate in the EAP exchange,\
    \ and\n   simply acts as a gateway during the EAP method execution.\n   After\
    \ successful authentication, the EAP server transports the MSK to\n   the authenticator.\
    \  Note that this is performed using AAA protocols,\n   not EAP itself.  The underlying\
    \ L2 or L3 protocol uses the MSK to\n   derive additional keys, including the\
    \ transient session keys (TSKs)\n   used for per-packet encryption and authentication.\n\
    \   Note that while the authenticator is one logical device, there can be\n  \
    \ multiple physical devices involved.  For example, the CAPWAP model\n   [RFC3990]\
    \ splits authenticators into two logical devices: Wireless\n   Termination Points\
    \ (WTPs) and Access Controllers (ACs).  Depending on\n   the configuration, authenticator\
    \ features can be split in a variety\n   of ways between physical devices; however,\
    \ from the EAP perspective,\n   there is only one logical authenticator.\n   Wireless\
    \ handover between access points or base stations is typically\n   a complex process\
    \ that involves several layers of protocol execution.\n   Often times executing\
    \ these protocols results in unacceptable delays\n   for many real-time applications\
    \ such as voice [MSA03].  One part of\n   the handover process is EAP re-authentication,\
    \ which can contribute\n   significantly to the overall handover time [MSPCA04].\
    \  Thus, in many\n   environments we can lower overall handover time by lowering\
    \ EAP re-\n   authentication time.\n   In EAP existing implementations, when a\
    \ peer arrives at the new\n   authenticator, it runs an EAP method irrespective\
    \ of whether it has\n   been authenticated to the network recently and has unexpired\
    \ keying\n   material.  This typically involves an EAP-Response/Identity message\n\
    \   from the peer to the server, followed by one or more round trips\n   between\
    \ the EAP server and peer to perform the authentication,\n   followed by the EAP-Success\
    \ or EAP-Failure message from the EAP\n   server to the peer.  At a minimum, the\
    \ EAP exchange consists of 1.5\n   round trips.  However, given the way EAP interacts\
    \ with AAA, and\n   given that an EAP identity exchange is typically employed,\
    \ at least 2\n   round trips are required to the EAP server.  An even higher number\
    \ of\n   round trips is required by the most commonly used EAP methods.  For\n\
    \   instance, EAP-TLS (Extensible Authentication Protocol - Transport\n   Layer\
    \ Security) requires at least 3, but typically 4 or more, round\n   trips.\n \
    \  There have been attempts to solve the problem of efficient re-\n   authentication\
    \ in various ways.  However, those solutions are either\n   EAP-method specific\
    \ or EAP lower-layer specific.  Furthermore, these\n   solutions do not deal with\
    \ scenarios involving handovers to new\n   authenticators, or they do not conform\
    \ to the AAA keying requirements\n   specified in [RFC4962].\n   This document\
    \ provides a detailed description of efficient EAP-based\n   re-authentication\
    \ protocol design goals.  The scope of this protocol\n   is specifically re-authentication\
    \ and handover between authenticators\n   within a single administrative domain.\
    \  While the design goals\n   presented in this document may facilitate inter-technology\
    \ handover\n   and inter-administrative-domain handover, they are outside the\
    \ scope\n   of this protocol.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   In this document, several words are used to signify the requirements\n\
    \   of the specification.  These words are often capitalized.  The key\n   words\
    \ \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\",\n\
    \   \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document\n\
    \   are to be interpreted as described in [RFC2119], with the\n   qualification\
    \ that, unless otherwise stated, they apply to the design\n   of the re-authentication\
    \ protocol, not its implementation or\n   application.\n   With respect to EAP,\
    \ this document follows the terminology that has\n   been defined in [RFC3748]\
    \ and [EAP-KEYING].\n"
- title: 3.  Problem Statement
  contents:
  - "3.  Problem Statement\n   Under the existing model, any re-authentication requires\
    \ a full EAP\n   exchange with the EAP server to which the peer initially\n  \
    \ authenticated [RFC3748].  This introduces handover latency from both\n   network\
    \ transit time and processing delay.  In service provider\n   networks, the home\
    \ EAP server for a peer could be on the other side\n   of the world, and typical\
    \ intercontinental latencies across the\n   Internet are 100 to 300 milliseconds\
    \ per round trip [LGS07].\n   Processing delays average a couple of milliseconds\
    \ for symmetric-key\n   operations and hundreds of milliseconds for public-key\
    \ operations.\n   An EAP conversation with a full EAP method run can take two\
    \ or more\n   round trips to complete, causing delays in re-authentication and\n\
    \   handover times.  Some methods specify the use of keys and state from\n   the\
    \ initial authentication to finish subsequent authentications in\n   fewer round\
    \ trips and without using public-key operations (detailed\n   in Section 6.1).\
    \  However, even in those cases, multiple round trips\n   to the EAP server are\
    \ required, resulting in unacceptable handover\n   times.\n   In summary, it is\
    \ undesirable to run an EAP Identity and complete EAP\n   method exchange each\
    \ time a peer authenticates to a new authenticator\n   or needs to extend its\
    \ current authentication with the same\n   authenticator.  Furthermore, it is\
    \ desirable to specify a method-\n   independent, efficient, re-authentication\
    \ protocol.  Keying material\n   from the initial authentication can be used to\
    \ enable efficient re-\n   authentication.  It is also desirable to have a local\
    \ server with\n   low-latency connectivity to the peer that can facilitate re-\n\
    \   authentication.  Lastly, a re-authentication protocol should also be\n   capable\
    \ of supporting scenarios where an EAP server passes\n   authentication information\
    \ to a remote re-authentication server,\n   allowing a peer to re-authenticate\
    \ locally, without having to\n   communicate with its home re-authentication server.\n\
    \   These problems are the primary issues to be resolved.  In solving\n   them,\
    \ there are a number of constraints to conform to, and those\n   result in some\
    \ additional work to be done in the area of EAP keying.\n"
- title: 4.  Design Goals
  contents:
  - "4.  Design Goals\n   The following are the goals and constraints in designing\
    \ the EAP re-\n   authentication and key management protocol:\n   Lower-latency\
    \ operation:  The protocol MUST be responsive to handover\n      and re-authentication\
    \ latency performance objectives within a\n      mobile access network.  A solution\
    \ that reduces latency as\n      compared to a full EAP authentication will be\
    \ most favorable,\n      since in networks that rely on reactive re-authentication\
    \ this\n      will directly impact handover times.\n   EAP lower-layer independence:\
    \  Any keying hierarchy and protocol\n      defined MUST be lower-layer independent\
    \ in order to provide\n      capabilities over heterogeneous technologies.  The\
    \ defined\n      protocols MAY require some additional support from the lower\n\
    \      layers that use it, but should not require any particular lower\n     \
    \ layer.\n   EAP method independence:  Changes to existing EAP methods MUST NOT\
    \ be\n      required as a result of the re-authentication protocol.  There\n \
    \     MUST be no requirements imposed on future EAP methods, provided\n      they\
    \ satisfy [EAP-KEYING] and [RFC4017].  Note that the only EAP\n      methods for\
    \ which independence is required are those that\n      currently conform to the\
    \ specifications of [EAP-KEYING] and\n      [RFC4017].  In particular, methods\
    \ that do not generate the keys\n      required by [EAP-KEYING] need not be supported\
    \ by the re-\n      authentication protocol.\n   AAA protocol compatibility and\
    \ keying:  Any modifications to EAP and\n      EAP keying MUST be compatible with\
    \ RADIUS [RADEXT-DESIGN] and\n      Diameter [DIME-APP-DESIGN].  Extensions to\
    \ both RADIUS and\n      Diameter to support these EAP modifications are acceptable.\
    \  The\n      designs and protocols must be configurable to satisfy the AAA key\n\
    \      management requirements specified in RFC 4962 [RFC4962].\n   Compatibility:\
    \  Compatibility and coexistence with compliant\n      ([RFC3748] [EAP-KEYING])\
    \ EAP deployments MUST be provided.\n      Specifically, the protocol should be\
    \ designed such that a peer not\n      supporting fast re-reauthentication should\
    \ still function in a\n      network supporting fast re-authentication, and also\
    \ a peer\n      supporting fast re-authentication should still function in a\n\
    \      network not supporting fast re-authentication.\n   Cryptographic Agility:\
    \  Any re-authentication protocol MUST support\n      cryptographic algorithm\
    \ agility, to avoid hard-coded primitives\n      whose security may eventually\
    \ prove to be compromised.  The\n      protocol MAY support cryptographic algorithm\
    \ negotiation, provided\n      it does not adversely affect overall performance\
    \ (i.e., by\n      requiring additional round trips).\n   Impact to Existing Deployments:\
    \  Any re-authentication protocol MAY\n      make changes to the peer, authenticator,\
    \ and EAP server, as\n      necessary to meet the aforementioned design goals.\
    \  In order to\n      facilitate protocol deployment, protocols should seek to\
    \ minimize\n      the necessary changes, without sacrificing performance.\n"
- title: 5.  Security Goals
  contents:
  - "5.  Security Goals\n   This section draws from the guidance provided in [RFC4962]\
    \ to further\n   define the security goals to be achieved by a complete re-\n\
    \   authentication keying solution.\n"
- title: 5.1.  Key Context and Domino Effect
  contents:
  - "5.1.  Key Context and Domino Effect\n   Any key must have a well-defined scope\
    \ and must be used in a specific\n   context and for the intended use.  This specifically\
    \ means the\n   lifetime and scope of each key must be defined clearly so that\
    \ all\n   entities that are authorized to have access to the key have the same\n\
    \   context during the validity period.  In a hierarchical key structure,\n  \
    \ the lifetime of lower-level keys must not exceed the lifetime of\n   higher-level\
    \ keys.  This requirement may imply that the context and\n   the scope parameters\
    \ have to be exchanged.  Furthermore, the\n   semantics of these parameters must\
    \ be defined to provide proper\n   channel binding specifications.  The definition\
    \ of exact parameter\n   syntax definition is part of the design of the transport\
    \ protocol\n   used for the parameter exchange, and that may be outside scope\
    \ of\n   this protocol.\n   If a key hierarchy is deployed, compromising lower-level\
    \ keys must\n   not result in a compromise of higher-level keys that were used\
    \ to\n   derive the lower-level keys.  The compromise of keys at each level\n\
    \   must not result in compromise of other keys at the same level.  The\n   same\
    \ principle applies to entities that hold and manage a particular\n   key defined\
    \ in the key hierarchy.  Compromising keys on one\n   authenticator must not reveal\
    \ the keys of another authenticator.\n   Note that the compromise of higher-level\
    \ keys has security\n   implications on lower levels.\n   Guidance on parameters\
    \ required, caching, and storage and deletion\n   procedures to ensure adequate\
    \ security and authorization provisioning\n   for keying procedures must be defined\
    \ in a solution document.\n   All the keying material must be uniquely named so\
    \ that it can be\n   managed effectively.\n"
- title: 5.2.  Key Freshness
  contents:
  - "5.2.  Key Freshness\n   As [RFC4962] defines, a fresh key is one that is generated\
    \ for the\n   intended use.  This would mean the key hierarchy must provide for\n\
    \   creation of multiple cryptographically separate child keys from a\n   root\
    \ key at higher level.  Furthermore, the keying solution needs to\n   provide\
    \ mechanisms for refreshing each of the keys within the key\n   hierarchy.\n"
- title: 5.3.  Authentication
  contents:
  - "5.3.  Authentication\n   Each handover keying participant must be authenticated\
    \ to any other\n   party with whom it communicates to the extent it is necessary\
    \ to\n   ensure proper key scoping, and securely provide its identity to any\n\
    \   other entity that may require the identity for defining the key\n   scope.\n"
- title: 5.4.  Authorization
  contents:
  - "5.4.  Authorization\n   The EAP Key management document [EAP-KEYING] discusses\
    \ several\n   vulnerabilities that are common to handover mechanisms.  One\n \
    \  important issue arises from the way the authorization decisions might\n   be\
    \ handled at the AAA server during network access authentication.\n   Furthermore,\
    \ the reasons for making a particular authorization\n   decision are not communicated\
    \ to the authenticator.  In fact, the\n   authenticator only knows the final authorization\
    \ result.  The\n   proposed solution must make efforts to document and mitigate\n\
    \   authorization attacks.\n"
- title: 5.5.  Channel Binding
  contents:
  - "5.5.  Channel Binding\n   Channel Binding procedures are needed to avoid a compromised\n\
    \   intermediate authenticator providing unverified and conflicting\n   service\
    \ information to each of the peer and the EAP server.  To\n   support fast re-authentication,\
    \ there will be intermediate entities\n   between the peer and the back-end EAP\
    \ server.  Various keys need to\n   be established and scoped between these parties\
    \ and some of these\n   keys may be parents to other keys.  Hence, the channel\
    \ binding for\n   this architecture will need to consider layering intermediate\n\
    \   entities at each level to make sure that an entity with a higher\n   level\
    \ of trust can examine the truthfulness of the claims made by\n   intermediate\
    \ parties.\n"
- title: 5.6.  Transport Aspects
  contents:
  - "5.6.  Transport Aspects\n   Depending on the physical architecture and the functionality\
    \ of the\n   elements involved, there may be a need for multiple protocols to\n\
    \   perform the key transport between entities involved in the handover\n   keying\
    \ architecture.  Thus, a set of requirements for each of these\n   protocols,\
    \ and the parameters they will carry, must be developed.\n   The use of existing\
    \ AAA protocols for carrying EAP messages and\n   keying material between the\
    \ AAA server and AAA clients that have a\n   role within the architecture considered\
    \ for the keying problem will\n   be carefully examined.  Definition of specific\
    \ parameters, required\n   for keying procedures and for being transferred over\
    \ any of the links\n   in the architecture, are part of the scope.  The relation\
    \ between the\n   identities used by the transport protocol and the identities\
    \ used for\n   keying also needs to be explored.\n"
- title: 6.  Use Cases and Related Work
  contents:
  - "6.  Use Cases and Related Work\n   In order to further clarify the items listed\
    \ in scope of the proposed\n   work, this section provides some background on\
    \ related work and the\n   use cases envisioned for the proposed work.\n"
- title: 6.1.  Method-Specific EAP Re-Authentication
  contents:
  - "6.1.  Method-Specific EAP Re-Authentication\n   A number of EAP methods support\
    \ fast re-authentication.  In this\n   section, we examine their properties in\
    \ further detail.\n   EAP-SIM [RFC4186] and EAP-AKA [RFC4187] support fast re-\n\
    \   authentication, bootstrapped by the keys generated during an initial\n   full\
    \ authentication.  In response to the typical EAP-Request/\n   Identity, the peer\
    \ sends a specially formatted identity indicating a\n   desire to perform a fast\
    \ re-authentication.  A single round-trip\n   occurs to verify knowledge of the\
    \ existing keys and provide fresh\n   nonces for generating new keys.  This is\
    \ followed by an EAP success.\n   In the end, it requires a single local round\
    \ trip between the peer\n   and authenticator, followed by another round trip\
    \ between the peer\n   and EAP server.  AKA is based on symmetric-key cryptography,\
    \ so\n   processing latency is minimal.\n   EAP-TTLS [EAP-TTLS] and PEAP (Protected\
    \ EAP Protocol)\n   [JOSEFSSON-PPPEXT] support using TLS session resumption for\
    \ fast re-\n   authentication.  During the TLS handshake, the client includes\
    \ the\n   message ID of the previous session he wishes to resume, and the\n  \
    \ server can echo that ID back if it agrees to resume the session.\n   EAP-FAST\
    \ [RFC4851] also supports TLS session resumption, but\n   additionally allows\
    \ stateless session resumption as defined in\n   [RFC5077].  Overall, for all\
    \ three protocols, there are still two\n   round trips between the peer and EAP\
    \ server, in addition to the local\n   round trip for the Identity request and\
    \ response.\n   To improve performance, fast re-authentication needs to reduce\
    \ the\n   number of overall round trips.  Optimal performance could result from\n\
    \   eliminating the EAP-Request/Identity and EAP-Response/Identity\n   messages\
    \ observed in typical EAP method execution, and allowing a\n   single round trip\
    \ between the peer and a local re-authentication\n   server.\n"
- title: 6.2.  IEEE 802.11r Applicability
  contents:
  - "6.2.  IEEE 802.11r Applicability\n   One of the EAP lower layers, IEEE 802.11\
    \ [IEEE.802-11R-D9.0], is in\n   the process of specifying a fast handover mechanism.\
    \  Access Points\n   (APs) are grouped into mobility domains.  Initial authentication\
    \ to\n   any AP in a mobility domain requires execution of EAP, but handover\n\
    \   between APs within the mobility domain does not require the use of\n   EAP.\n\
    \   Internal to the mobility domain are sets of security associations to\n   support\
    \ key transfers between APs.  In one model, relatively few\n   devices, called\
    \ R0-KHs, act as authenticators.  All EAP traffic\n   traverses an R0-KH, and\
    \ it derives the initial IEEE 802.11 keys.  It\n   then distributes cryptographically\
    \ separate keys to APs in the\n   mobility domain, as necessary, to support the\
    \ client mobility.  For a\n   deployment with M designated R0-KHs and N APs, this\
    \ requires M*N\n   security associations.  For small M, this approach scales reasonably.\n\
    \   Another approach allows any AP to act as an R0-KH, necessitating a\n   full\
    \ mesh of N2 security associations, which scales poorly.\n   The model that utilizes\
    \ designated R0-KHs is architecturally similar\n   to the fast re-authentication\
    \ model proposed by HOKEY.  HOKEY,\n   however, allows for handover between authenticators.\
    \  This would\n   allow an IEEE 802.11r-enabled peer to handover from one mobility\n\
    \   domain to another without performing an EAP authentication.\n"
- title: 6.3.  CAPWAP Applicability
  contents:
  - "6.3.  CAPWAP Applicability\n   The CAPWAP (Control and Provisioning of Wireless\
    \ Access Points)\n   protocol [CAPWAP-PROTOCOL-SPEC] allows the functionality\
    \ of an IEEE\n   802.11 access point to be split into two physical devices in\n\
    \   enterprise deployments.  Wireless Termination Points (WTPs) implement\n  \
    \ the physical and low-level Media Access Control (MAC) layers, while a\n   centralized\
    \ Access Controller (AC) provides higher-level management\n   and protocol execution.\
    \  Client authentication is handled by the AC,\n   which acts as the AAA authenticator.\n\
    \   One of the many features provided by CAPWAP is the ability to roam\n   between\
    \ WTPs without executing an EAP authentication.  To accomplish\n   this, the AC\
    \ caches the MSK from an initial EAP authentication, and\n   uses it to execute\
    \ a separate four-way handshake with the station as\n   it moves between WTPs.\
    \  The keys resulting from the four-way\n   handshake are then distributed to\
    \ the WTP to which the station is\n   associated.  CAPWAP is transparent to the\
    \ station.\n   CAPWAP currently has no means to support roaming between ACs in\
    \ an\n   enterprise network.  The proposed work on EAP efficient re-\n   authentication\
    \ addresses is an inter-authenticator handover problem\n   from an EAP perspective,\
    \ which applies during handover between ACs.\n   Inter-AC handover is a topic\
    \ yet to be addressed in great detail and\n   the re-authentication work can potentially\
    \ address it in an effective\n   manner.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   This document details the HOKEY problem statement.\
    \  Since HOKEY is an\n   authentication protocol, there is a myriad of security-related\
    \ issues\n   surrounding its development and deployment.\n   In this document,\
    \ we have detailed a variety of security properties\n   inferred from [RFC4962]\
    \ to which HOKEY must conform, including the\n   management of key context, scope,\
    \ freshness, and transport;\n   resistance to attacks based on the domino effect;\
    \ and authentication\n   and authorization.  See Section 5 for further details.\n"
- title: 8.  Contributors
  contents:
  - "8.  Contributors\n   This document represents the synthesis of two problem statement\n\
    \   documents.  In this section, we acknowledge their contributions, and\n   involvement\
    \ in the early documents.\n      Mohan Parthasarathy\n      Nokia\n      EMail:\
    \ mohan.parthasarathy@nokia.com\n      Julien Bournelle\n      France Telecom\
    \ R&D\n      EMail: julien.bournelle@orange-ftgroup.com\n      Hannes Tschofenig\n\
    \      Siemens\n      EMail: Hannes.Tschofenig@siemens.com\n      Rafael Marin\
    \ Lopez\n      Universidad de Murcia\n      EMail: rafa@dif.um.es\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   The authors would like to thank the participants of\
    \ the HOKEY working\n   group for their review and comments including: Glen Zorn,\
    \ Dan\n   Harkins, Joe Salowey, and Yoshi Ohba.  The authors would also like to\n\
    \   thank those that provided last-call reviews including: Bernard Aboba,\n  \
    \ Alan DeKok, Jari Arkko, and Hannes Tschofenig.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC2119]               Bradner, S., \"Key words\
    \ for use in RFCs to\n                           Indicate Requirement Levels\"\
    , BCP 14,\n                           RFC 2119, March 1997.\n   [RFC3748]    \
    \           Aboba, B., Blunk, L., Vollbrecht, J.,\n                          \
    \ Carlson, J., and H. Levkowetz, \"Extensible\n                           Authentication\
    \ Protocol (EAP)\", RFC 3748,\n                           June 2004.\n   [RFC4017]\
    \               Stanley, D., Walker, J., and B. Aboba,\n                     \
    \      \"Extensible Authentication Protocol (EAP)\n                          \
    \ Method Requirements for Wireless LANs\",\n                           RFC 4017,\
    \ March 2005.\n   [RFC4962]               Housley, R. and B. Aboba, \"Guidance\
    \ for\n                           Authentication, Authorization, and Accounting\n\
    \                           (AAA) Key Management\", BCP 132, RFC 4962,\n     \
    \                      July 2007.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [CAPWAP-PROTOCOL-SPEC]  Calhoun, P., Montemurro,\
    \ M., and D. Stanely,\n                           \"CAPWAP Protocol Specification\"\
    , Work\n                           in Progress, March 2008.\n   [DIME-APP-DESIGN]\
    \       Fajardo, V., Asveren, T., Tschofenig, H.,\n                          \
    \ McGregor, G., and J. Loughney, \"Diameter\n                           Applications\
    \ Design Guidelines\", Work\n                           in Progress, January 2008.\n\
    \   [EAP-KEYING]            Aboba, B., Simon, D., and P. Eronen,\n           \
    \                \"Extensible Authentication Protocol (EAP) Key\n            \
    \               Management Framework\", Work in Progress,\n                  \
    \         November 2007.\n   [EAP-TTLS]              Funk, P. and S. Blake-Wilson,\
    \ \"EAP Tunneled\n                           TLS Authentication Protocol Version\
    \ 0 (EAP-\n                           TTLSv0)\", Work in Progress, March 2008.\n\
    \   [IEEE.802-11R-D9.0]     \"Information technology - Telecommunications\n  \
    \                         and information exchange between systems -\n       \
    \                    Local and metropolitan area networks -\n                \
    \           Specific requirements - Part 11: Wireless LAN\n                  \
    \         Medium Access Control (MAC) and Physical\n                         \
    \  Layer (PHY) specifications - Amendment 2:\n                           Fast\
    \ BSS Transition\", IEEE Standard 802.11r,\n                           January\
    \ 2008.\n   [JOSEFSSON-PPPEXT]      Josefsson, S., Palekar, A., Simon, D., and\
    \ G.\n                           Zorn, \"Protected EAP Protocol (PEAP) Version\n\
    \                           2\", Work in Progress, October 2004.\n   [LGS07] \
    \                Ledlie, J., Gardner, P., and M. Selter,\n                   \
    \        \"Network Coordinates in the Wild\",\n                           USENIX\
    \ Symposium on Networked System Design\n                           and Implementation,\
    \ April 2007.\n   [MSA03]                 Mishra, A., Shin, M., and W. Arbaugh,\
    \ \"An\n                           Empirical Analysis of the IEEE 802.11 MAC-\n\
    \                           Layer Handoff Process\", ACM SIGCOMM Computer\n  \
    \                         and Communications Review, April 2003.\n   [MSPCA04]\
    \               Mishra, A., Shin, M., Petroni, N., Clancy,\n                 \
    \          T., and W. Arbaugh, \"Proactive Key\n                           Distribution\
    \ using Neighbor Graphs\",\n                           IEEE Wireless Communications,\
    \ February 2004.\n   [RADEXT-DESIGN]         Weber, G. and A. DeKok, \"RADIUS\
    \ Design\n                           Guidelines\", Work in Progress, December\
    \ 2007.\n   [RFC3990]               O'Hara, B., Calhoun, P., and J. Kempf,\n \
    \                          \"Configuration and Provisioning for Wireless\n   \
    \                        Access Points (CAPWAP) Problem Statement\",\n       \
    \                    RFC 3990, February 2005.\n   [RFC4186]               Haverinen,\
    \ H. and J. Salowey, \"Extensible\n                           Authentication Protocol\
    \ Method for Global\n                           System for Mobile Communications\
    \ (GSM)\n                           Subscriber Identity Modules (EAP-SIM)\",\n\
    \                           RFC 4186, January 2006.\n   [RFC4187]            \
    \   Arkko, J. and H. Haverinen, \"Extensible\n                           Authentication\
    \ Protocol Method for 3rd\n                           Generation Authentication\
    \ and Key Agreement\n                           (EAP-AKA)\", RFC 4187, January\
    \ 2006.\n   [RFC4851]               Cam-Winget, N., McGrew, D., Salowey, J., and\n\
    \                           H. Zhou, \"The Flexible Authentication via\n     \
    \                      Secure Tunneling Extensible Authentication\n          \
    \                 Protocol Method (EAP-FAST)\", RFC 4851,\n                  \
    \         May 2007.\n   [RFC5077]               Salowey, J., Zhou, H., Eronen,\
    \ P., and H.\n                           Tschofenig, \"Transport Layer Security\
    \ (TLS)\n                           Session Resumption without Server-Side\n \
    \                          State\", RFC 5077, January 2008.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   T. Charles Clancy, Editor\n   Laboratory for Telecommunications\
    \ Sciences\n   US Department of Defense\n   College Park, MD\n   USA\n   EMail:\
    \ clancy@LTSnet.net\n   Madjid Nakhjiri\n   Motorola\n   EMail: madjid.nakhjiri@motorola.com\n\
    \   Vidya Narayanan\n   Qualcomm, Inc.\n   San Diego, CA\n   USA\n   EMail: vidyan@qualcomm.com\n\
    \   Lakshminath Dondeti\n   Qualcomm, Inc.\n   San Diego, CA\n   USA\n   EMail:\
    \ ldondeti@qualcomm.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
