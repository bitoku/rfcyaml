Abstract This document specifies a TRILL
(Transparent Interconnection of Lots of Links) IS IS application sub TLV that enables the reporting by a TRILL switch of sets of addresses.
Each set of addresses reports all of the addresses that designate the same interface (port) and also reports the TRILL switch by which that interface is reachable.
For example, a 48 bit MAC (Media Access Control) address, IPv4 address, and IPv6 address can be reported as all corresponding to the same interface reachable by a particular TRILL switch.
Such information could be used in some cases to synthesize responses to, or bypass the need for, the Address Resolution Protocol (ARP), the IPv6 Neighbor Discovery (ND) protocol, or the flooding of unknown MAC addresses.
This document specifies a TRILL (Transparent Interconnection of Lots of Links)
[RFC6325] IS IS application sub TLV (APPsub TLV)
that enables the convenient representation of sets of addresses where all of the addresses in each set designate the same interface (port).
For example, a 48 bit MAC (Media Access Control)
[RFC7042] address, IPv4 address, and IPv6 address can be reported as all three designating the same interface.
In addition, a Data Label (VLAN or Fine Grained Label (FGL)
[RFC7172]) is specified for the interface, along with the TRILL switch and, optionally, the TRILL switch port from which the interface is reachable.
Such information could be used in some cases to synthesize responses to, or bypass the need for, the Address Resolution Protocol (ARP)
[RFC826], the IPv6 Neighbor Discovery (ND) [RFC4861] protocol, the Reverse Address Resolution Protocol (RARP)
[RFC903], or the flooding of unknown destination
If the information reported is complete, it can also be used to detect and discard packets with forged source addresses.
This APPsub TLV appears inside the TRILL
GENINFO TLV specified in the End Station Address Distribution Information (ESADI)
RFC [RFC7357] but may also occur in other application contexts.
The "directory assistance" TRILL Edge services
[DirectoryScheme] are expected to make use of this APPsub TLV.
Although in some IETF protocols address field types are represented by an Ethertype [RFC7042] or a hardware address type [RFC5494], only the Address Family Number (AFN) is used in this APPsub TLV to represent the address field type.
Conventions Used in This Document
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "
SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
Capitalized IANA related terms such as "Expert Review" are to be interpreted as described in [RFC5226].
The terminology and acronyms of [RFC6325] are used herein, along with the following additional acronyms and terms:
AFN: Address Family Number (http://www.iana.org/assignments/address family numbers/)
] Data Label: VLAN or FGL FGL: Fine Grained
Label [RFC7172] IA: Interface Address(es)
A 16 bit TRILL switch identifier, as specified in Section 3.7 of [RFC6325] and as updated by Section 4 of [RFC7780] RBridge:
An alternative name for a TRILL switch TRILL switch: A device that implements the TRILL protocol 2.
Format of the Interface Addresses APPsub
APPsub TLV is used to advertise a set of addresses indicating the same interface (port) within a Data Label (VLAN or FGL).
It also associates that interface with the TRILL switch and, optionally, the TRILL switch port by which the interface is reachable.
These addresses can be in different address families.
APPsub TLV can be used to declare that a particular interface with specified IPv4, IPv6, and 48 bit MAC addresses in some particular Data Label is reachable from a particular TRILL switch.
While those three types of addresses are likely to be the only types of interest, any address type for which an AFN has been assigned by IANA can be represented.
The Template field in a particular IA
APPsub TLV indicates the format of each Address Set it carries.
Certain well known sets of addresses are represented by special values.
Other sets of addresses are specified by a list of AFNs.
The Template format that uses a list of AFNs provides an explicit pattern for the type and order of addresses in each Address Set in the IA
APPsub TLV that includes that Template.
A device or application making use of IA APPsub TLV data is not required to make use of all IA data.
For example, a device or application that was only interested in MAC and IPv6 addresses could ignore any IPv4 or other types of address information that was present.
Figure 1 shows an IA APPsub TLV as it would appear inside an IS IS Flooding Scope
Link State PDU (FS LSP) using an extended flooding scope [RFC7356]
TLV   for example, in ESADI [RFC7357].
Within an IS IS FS LSP using traditional [ISO 10589] TLVs, the Type and Length
would be 1 byte unsigned integers equal to or less than 255, but with an extended TLV, the Type and Length are 2 byte unsigned integers.
Interface Addresses TRILL APPsub TLV type; set to 10 (IA SUBTLV).
If Length is 6 or less or if the APPsub TLV extends beyond the size of an encompassing TRILL GENINFO TLV or other context, the APPsub TLV MUST be ignored.
For manageability, a counter reflecting the receipt of such malformed IA APPsub TLVs should be maintained.
The unsigned integer byte number, within the IA
APPsub TLV value part, of the last byte of the last Address Set, where the first byte is numbered 1.
This will be the number of the byte just before the first sub sub TLV
if any sub sub TLVs are present (see Section 3).
The processing is as follows:
If this field is greater than Length or points to before the end of the Template, the IA
APPsub TLV is corrupt and MUST be discarded.
If this field is equal to Length, there are no sub sub TLVs.
If this field is less than Length, sub sub TLVs are parsed as specified in Section 3.
Note: This field is always 2 bytes in size.
The nickname (see Section 1.1) of the TRILL switch by which the Address Sets are reachable.
If 0, the Address Sets are reachable from the TRILL switch originating the message containing the APPsub TLV (for example, an ESADI [RFC7357] message).
A byte of flags, as follows: 0 1 2 3 4 5 6 7
Directory flag: If D is 1, the APPsub TLV contains directory information [RFC7067].
Local flag: If L is 1, the APPsub TLV contains information learned locally by observing ingressed frames [RFC6325].
(Both D and L can be set to 1 in the same IA APPsub TLV if a TRILL switch had learned an address locally and also advertised it as a directory.)
Additional reserved flag bits that MUST be sent as zero and ignored on receipt.
Confidence: This 8 bit unsigned quantity in the range 0 to 254 indicates the confidence level in the addresses being transported (see Section 4.8.2 of [RFC6325]).
A value of 255 is treated as if it was 254.
Template: The initial byte of this field is the unsigned integer K.
If K has a value from 1 to 31, it indicates that this initial byte is followed by a list of K AFNs that specify the exact structure and order of each Address Set occurring later in the APPsub TLV.
K can be 1, which is the minimum valid value.
If K is 0, the IA APPsub TLV is ignored.
If K is 32 to 254, the length of the Template field is 1 byte, and its value is intended to correspond to a particular ordered set of AFNs, some of which are specified below.
The value of 255 for K is reserved for future definition and causes the IA APPsub TLV to be ignored.
For K in the range 32 to 39, values indicate a specific sequence, as specified below.
The values of K from 40 to 254 are reserved for future specification.
If the value of K is not understood by a receiver of the IA
APPsub TLV, any Address Sets present are ignored.
48 bit MAC 33  48 bit MAC, IPv4 34  48 bit MAC, IPv6 35  48 bit MAC, IPv4, IPv6 36  48 bit MAC, RBridge port 37  48 bit MAC, IPv4, RBridge port 38  48 bit MAC, IPv6, RBridge port 39  48 bit MAC, IPv4, IPv6, RBridge port For ease of decoding, note that for values of K between 32 and 39 inclusive, the 0x01 bit indicates that an IPv4 address is present, the 0x02 bit indicates that an IPv6 address is present, and the 0x04 bit indicates that an RBridge Port ID is present.
AFN: A 2 byte Address Family Number.
The number of AFNs present is given by K, except that there are no AFNs if K is greater than 31.
The AFN sequence specifies the structure of the Address Sets occurring later in the TLV.
For example, if the Template size is 2 and the two AFNs present are the AFNs for a 48 bit MAC and an IPv4 address, in that order, then each Address Set present will consist of a 6 byte MAC address followed by a 4 byte IPv4 address.
If any AFNs are present that are unknown to the receiving IS and the length of the corresponding address is not provided by a sub sub TLV as specified below, the receiving IS will be unable to parse the Address Sets and MUST ignore the IA APPsub TLV.
Each Address Set in the APPsub
TLV consists of exactly the same sequence of addresses and types as specified by the Template earlier in the APPsub TLV.
No alignment, other than to a byte boundary, is provided.
The addresses in each Address Set are contiguous with no unused bytes between them, and the Address Sets are contiguous with no unused bytes between successive Address Sets.
The Address Sets must fit within the TLV.
See Section 7 on interpreting certain Address Sets.
sub sub TLVs: If the Address Sets indicated by Addr Sets End do not completely fill the length of the APPsub TLV (as indicated by the Length field), then per Section 4 of [RFC5305]
the remaining bytes are parsed as sub sub TLVs.
Any such sub sub TLVs that are not known to the receiving TRILL switch are ignored.
Should this parsing not be possible   for example, there is only one remaining byte or an apparent sub
sub TLV extends beyond the end of the TLV
APPsub TLV is considered corrupt and is ignored.
TLV types are specified in Section 3.)
APPsub TLVs within the same or different LSPs or other data structures may have different Templates.
The same AFN may occur more than once in a Template, and the same address may occur in different Address Sets.
For example, a 48 bit MAC address interface might have three different IPv6 addresses.
This could be represented by an IA APPsub TLV whose Template specifically provided for one EUI 48 address and three IPv6 addresses; this might be an efficient format if there were multiple interfaces with that pattern.
Alternatively, a Template with one 48 bit MAC and one IPv6 address could be used in an IA APPsub TLV with three Address Sets each having the same MAC address but different IPv6 addresses; this might be the most efficient format if only one interface had multiple IPv6 addresses and other interfaces had only one IPv6 address.
In order to be able to parse the Address Sets, a receiving TRILL switch must know at least the size of the address for each AFN or address type the Template specifies; however, the presence of the Addr Sets End field means that the sub sub TLVs, if any, can always be located by a receiver.
A TRILL switch can be assumed to know the size of the AFNs mentioned in Section 5.
Should a TRILL switch wish to include an AFN that some receiving TRILL switch in the campus may not know, it SHOULD include an AFN Size sub sub TLV as described in Section 3.1.
APPsub TLV is received with one or more AFNs in its Template for which the receiving TRILL switch does not know the length and for which an AFN Size sub sub
TLV is not present, that IA APPsub TLV MUST be ignored.
For manageability, a counter of ill formed IA APPsub TLVs received and ignored due to unknown K, unknown AFN, and the like (as described above) should be maintained.
TLV Sub sub TLVs IA
APPsub TLVs can have sub sub TLVs
(sub TLVs of sub TLVs [RFC5305]) at the end, as specified below.
These sub sub TLVs occur after the Address Sets.
The amount of space available for sub sub TLVs is determined from the overall IA APPsub TLV length and the value of the Addr Sets End byte.
There is no ordering restriction on sub sub TLVs.
Unless otherwise specified, each sub sub TLV type can occur zero, one, or many times in an IA APPsub TLV.
Any sub sub TLVs for which the Type is unknown are ignored.
For manageability, a counter of sub sub TLVs received and ignored due to an unknown Type or other reasons, as described below, should be maintained.
The data structures of the sub sub TLVs shown below, with 2 byte Types and Lengths, assume that the enclosing IA APPsub TLV is in an extended LSP TLV [RFC7356] or some non LSP context.
If they were used in an IA APPsub TLV in a non extended LSP [ISO 10589], then only 1 byte Types and Lengths could be used.
As a result, any sub sub TLV types greater than 255 could not be used, and Length would be limited to 255.
AFN Size Sub sub TLV Using this sub
sub TLV, the originating TRILL switch can specify the size of an address type.
This is useful under the following two circumstances: 1.
One or more AFNs that are unknown to the receiving TRILL switch appear in the Template.
If an AFN Size sub sub TLV is present for each such AFN, then at least the IA APPsub TLV can be parsed, and possibly other addresses in each Address Set can still be used.
If an AFN occurs in the Template that represents a variable length address, this sub sub
TLV gives its size for all occurrences in that IA APPsub TLV.
AFN Size sub sub TLV type; set to 1 (AFNsz).
Length: 3 N, where N is the number of AFN Size Records present.
If Length is not a multiple of 3, the sub sub TLV MUST be ignored.
: Zero or more 3 byte records, each giving the size of an address type identified by an AFN.
The AFN whose length is being specified by the AFN Size Record.
The length, in bytes, of addresses specified by the AFN field as an unsigned integer.
An AFN Size sub sub TLV for any AFN known to the receiving TRILL switch
is compared with the size known to the TRILL switch.
If they differ, the IA
APPsub TLV is assumed to be corrupt and MUST be ignored.
Fixed Address Sub sub TLV
There may be cases where, in a particular IA APPsub TLV, the same address would appear in every Address Set across the IA
To avoid wasted space, this sub sub TLV can be used to indicate such a fixed address.
The address or addresses incorporated into the sets by this sub sub TLV are NOT mentioned in the IA APPsub TLV Template.
Data Label sub sub TLV type; set to 2 (FIXEDADR).
If Length is 0 or 1, the sub sub TLV MUST be ignored.
Address Family Number of the Fixed Address.
The address of the Type indicated by the preceding AFN field that is considered to be part of every Address Set in the IA
The Length field implies a size for the Fixed Address.
If that size differs from the size of the address type for the given AFN as known by the receiving TRILL switch,
the Fixed Address sub sub TLV is considered corrupt and MUST be ignored.
Data Label Sub sub TLV
indicates the Data Label within which the interfaces listed in the IA
It is useful if the IA APPsub TLV occurs outside of the context of a message specifying the Data Label or if it is desired and permitted to override that specification.
Multiple occurrences of this sub sub TLV
indicate that the interfaces are reachable in all of the Data Labels given.
Data Label sub TLV type; set to 3 (DATALEN).
If Length is some other value, the sub sub TLV MUST be ignored.
Data Label: If Length is 2, the bottom 12 bits of the Data Label are a VLAN ID and the top 4 bits are reserved (MUST be sent as zero and ignored on receipt).
If Length is 3, the three Data Label bytes contain an FGL [RFC7172].
The presence of this sub sub TLV
indicates that the interfaces given in the IA
APPsub TLV are reachable in the topology given.
It is useful if the IA APPsub TLV occurs outside of the context of a message indicating the topology or if it is desired and permitted to override that specification.
If it occurs multiple times, then the Address Sets are in all of the topologies given.
Topology Sub sub TLV  Type
: Topology sub TLV type; set to 4 (TOPOLOGY).
If Length is some other value, the sub sub TLV MUST be ignored.
MUST be sent as zero and ignored on receipt.
The 12 bit topology number [RFC5120].
The integrity of address mapping and reachability information as well as the correctness of Data Labels (VLANs or FGLs [RFC7172]) are very important.
Forged, altered, or incorrect address mapping or data labeling can lead to delivery of packets to the incorrect party, violating security policy.
However, this document merely describes a data format and does not provide any explicit mechanisms for securing that information, other than a few simple consistency checks that might detect some corrupted data.
Security on the wire, or in storage, for this data is to be provided by the transport or storage used.
For example, when transported with ESADI [RFC7357] or RBridge Channel [RFC7178], ESADI security or Channel Tunnel [ChannelTunnel] security mechanisms can be used, respectively.
The address mapping and reachability information, if known to be complete and correct, can be used to detect some cases of forged packet source addresses [RFC7067].
In particular, if native traffic from an end station is received by a TRILL switch that would otherwise accept it but authoritative data indicates that the source address should not be reachable from the receiving TRILL switch, that traffic should be discarded.
The data format specified in this document may optionally include a TRILL switch Port ID number so that this forged address filtering can be optionally applied with port granularity.
For manageability, a counter of frames so discarded should be maintained.
See [RFC6325] for general TRILL security considerations.
The following subsections specify IANA allocations.
IANA has allocated values in the "Address Family Numbers" registry that may be useful for IA APPsub TLVs.
The values are as follows:
RBridge Port ID  Section 6 of RFC 7961
Other AFNs can be found at <http://www.iana.org/assignments/ address family numbers
See Section 7 on interpreting Address Sets.
TLVs Sub registry IANA has established a new sub registry of the "Transparent Interconnection of Lots of Links (TRILL) Parameters" registry for sub sub TLVs of the Interface Addresses
APPsub TLV, with the following initial contents:
TLV Sub sub TLVs Procedure:
Types greater than 255 are not usable in some contexts.
A designated expert for this registry should decide whether to permit the assignment of a type based on clear documentation of the proposed type as provided by the requester, such as a complete Internet Draft.
New types should not duplicate existing types.
Requests should indicate whether a type less than 255 is desired; such types can be used in contexts where only 1 byte of a type (and usually only 1 byte of the length) is permitted.
Types greater than 255 can only be used where 2 byte types are allowed, such as in Extended Level 1 Flooding Scope (E L1FS) or Extended Level 1 Circuit Scope (E L1CS) extended FS LSPs [RFC7356]; in those contexts, lengths up to 65535 bytes can also be expressed, although they may not be usable if the resulting TLV would not fit into a larger context restricted by an MTU setting or the like.
Values within the region below 255 and the region above 255 should be allocated sequentially, unless there is an extraordinary reason for a special value.
TLV Number IANA has allocated type 10 as the IA
APPsub TLV in the "TRILL APPsub
TLV Types under IS IS TLV 251 Application Identifier 1" registry from the range under 256.
In the registry, the name is "IA" and the reference is this document.
This section provides additional information concerning AFNs that were allocated in connection with this document.
These AFNs are not restricted to use in the IA APPsub TLV and may be used in other protocols where they would be appropriate.
A 3 byte (24 bit)
Organizationally Unique Identifier used as the initial 3 bytes of a MAC address.
See Sections 2.1 and 2.2 of [RFC7042], and Section 7 below.
A 3 byte (24 bit) quantity used as the final 3 bytes of a 48 bit MAC address.
See Section 2.1 of [RFC7042] and Section 7 below.
MAC/40: A 5 byte (40 bit) quantity used as the final 5 bytes of a 64 bit MAC address.
See Section 2.2 of [RFC7042] and Section 7 below.
An 8 byte (64 bit) quantity used as the initial 8 bytes of an IPv6 address.
A 16 bit quantity that uniquely identifies a port on a TRILL switch (RBridge).
See Section 4.4.2 of [RFC6325].
The following processes should be followed in interpreting sets of AFN values in an IA APPsub TLV to synthesize addresses.
These apply whether the AFN values came from sub sub TLVs, appeared within an Address Set, or came from both sources.
In general, the processing is applied separately to each Address Set as supplemented by any Fixed Address sub sub TLVs that are present.
The OUI AFN value is provided so that MAC addresses can be abbreviated if they have the same upper 24 bits.
A MAC/24 is a 24 bit suffix intended to be prefixed by an OUI to create a 48 bit MAC address [RFC7042]; in the absence of an OUI, a MAC/24 entry cannot be used.
A MAC/40 is a 40 bit suffix intended to be prefixed by an OUI to create a 64 bit MAC address [RFC7042]; in the absence of an OUI, a MAC/40 entry cannot be used.
Typically, an OUI would be provided as a Fixed Address sub sub TLV (see Section 3.2) using the OUI AFN, but there is no prohibition against one or more OUIs appearing in an Address Set.
Each Address Set, after being supplemented by any Fixed Address sub sub TLVs, is processed by combining each OUI in the Address Set with each MAC/24 and each MAC/40 address in the Address Set.
Depending on how many of each of these address types are present, zero or more 48 bit and/or 64 bit MAC addresses may be synthesized that are subsequently processed as if they had been part of the Address Set.
If there are no MAC/24 or MAC/40 addresses present, any OUIs are ignored.
If there are no OUIs, any MAC/24s and/or MAC/40s are ignored.
If there are K1 OUIs, K2 MAC/24s, and K3 MAC/40s, K1 K2 48 bit MACs are synthesized and K1 K3
64 bit MACs are synthesized.
IPv6/64 is an 8 byte quantity that is the first 64 bits of an IPv6 address.
IPv6/64s are ignored unless, after the processing described above in this subsection, there are one or more 48 bit and/or 64 bit MAC addresses in the Address Set to provide the lower 64 bits of the IPv6 address.
For this purpose, a 48 bit MAC address is expanded to 64 bits as described in Section 2.2.1 of [RFC7042].
If there are K4 IPv6/64s present and K5 48 bit and 64 bit
MAC addresses present, K4 K5 128 bit IPv6 addresses are synthesized.
Synthesized addresses are treated as if they had been members of the Address Set.
Appendix A.  Examples Below are example IA APPsub TLVs.
"0x" indicates that the quantity is in hexadecimal.
"0b" indicates that the quantity is in binary.
Simple Example Below is an annotated IA
APPsub TLV carrying two simple pairs of EUI 48 MAC addresses and IPv4 addresses from a Push Directory (a directory conforming to the Push Model [RFC7067]).
No sub sub TLVs are included.
Length: 27 (  0x1B) 0x001B
Address Sets End: 27 (  0x1B)
RBridge Nickname from which reachable 0b10000000
48 bit MAC address 198.51.100.23
48 bit MAC address 203.0.113.201    IPv4 address
The size includes 7 for the fixed fields through and including the 1 byte Template, plus 2 times the Address Set size.
Each Address Set is 10 bytes: 6 for the 48 bit MAC address plus 4 for the IPv4 address.
Therefore, the total size is 7   2 10   27.
See Section 2 for more information on the Template.
Complex Example Below is an annotated IA
APPsub TLV carrying three sets of addresses, each consisting of an EUI 48 MAC address, an IPv4 address, an IPv6 address, and an RBridge Port ID, all from a Push Directory (a directory conforming to the Push Model [RFC7067]).
The IPv6 address for each Address Set is synthesized from the MAC address given in that set and the IPv6/64 64 bit prefix provided through a Fixed Address sub sub TLV.
In addition, a sub sub TLV is included that provides an FGL that overrides whatever Data Label may be provided by the envelope (for example, an ESADI LSP [RFC7357]) within which this IA APPsub TLV occurs.
Length: 64 (  0x40) 0x0021
Address Sets End: 43 (  0x2B) 0x4321
RBridge Nickname from which reachable 0b10000000
48 bit MAC address 198.51.100.105
RBridge Port ID Address Set
RBridge Port ID Address Set
48 bit MAC address 192.0.2.139
RBridge Port ID sub sub TLV One 0x0003
See Section 2 for more information on the Template.
The Fixed Address sub sub
TLV causes the IPv6/64 value given to be treated as if it occurred as a fourth entry inside each of the three Address Sets.
When there is an IPv6/64 entry and a 48 bit MAC entry, the MAC value is expanded by inserting 0xfffe
immediately after the OUI, and the local/global bit is inverted.
The resulting Modified EUI 64 bit value is used as the lower 64 bits of the resulting IPv6 address (Section 2.2.1 of [RFC7042]).
As a result, a receiving TRILL switch would treat the three Address Sets shown as if they had an IPv6 address in them, as follows:
Address Address Set Two 0x20010db80000000002005efffe0053e3  IPv6
Address Address Set Three 0x20010db80000000002005efffe0053d3
As an alternative to the compact "well known value" Template encoding used in the example above, the less compact explicit AFN encoding could have been used.
In that case, the IA
APPsub TLV would have started as follows:
Length: 60 (  0x3C) 0x0027
Address Sets End: 39 (  0x27) 0x4321
RBridge Nickname from which reachable 0b10000000
AFN: 48 bit MAC 0x0001
As a final point, since the 48 bit MAC addresses in these three Address Sets all have the same OUI (the IANA OUI [RFC7042]), it would have been possible to just have a MAC/24 value giving the lower 24 bits of the MAC in each Address Set.
The OUI would then be supplied by a second Fixed Address
sub sub TLV providing the OUI.
With N Address Sets, this would have saved 3 N or 9 bytes, at a cost of 9 bytes (2 each for the Type and Length of the sub sub TLV, 2 for the OUI AFN, and 3 for the OUI).
So, with just three Address Sets, there would be no net savings; however, with a larger number of Address Sets, there would be a net savings.
