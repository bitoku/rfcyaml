- title: __initial_text__
  contents:
  - '          A Method for Transmitting PPP Over Ethernet (PPPoE)

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   The Point-to-Point Protocol (PPP) [1] provides a standard method\
    \ for\n   transporting multi-protocol datagrams over point-to-point links.\n \
    \  This document describes how to build PPP sessions and encapsulate PPP\n   packets\
    \ over Ethernet.\n"
- title: Applicability
  contents:
  - "Applicability\n   This specification is intended to provide the facilities which\
    \ are\n   defined for PPP, such as the Link Control Protocol, Network-layer\n\
    \   Control Protocols, authentication, and more.  These capabilities\n   require\
    \ a point-to-point relationship between the peers, and are not\n   designed for\
    \ the multi-point relationships which are available in\n   Ethernet and other\
    \ multi-access environments.\n   This specification can be used by multiple hosts\
    \ on a shared,\n   Ethernet to open PPP sessions to multiple destinations via\
    \ one or\n   more bridging modems.  It is intended to be used with broadband\n\
    \   remote access technologies that provide a bridged Ethernet topology,\n   when\
    \ access providers wish to maintain the session abstraction\n   associated with\
    \ PPP.\n   This document describes the PPP Over Ethernet encapsulation that is\n\
    \   being deployed by RedBack Networks, RouterWare, UUNET and others.\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   Modern access technologies are faced with several conflicting\
    \ goals.\n   It is desirable to connect multiple hosts at a remote site through\n\
    \   the same customer premise access device.  It is also a goal to\n   provide\
    \ access control and billing functionality in a manner similar\n   to dial-up\
    \ services using PPP.  In many access technologies, the most\n   cost effective\
    \ method to attach multiple hosts to the customer\n   premise access device, is\
    \ via Ethernet.  In addition, it is desirable\n   to keep the cost of this device\
    \ as low as possible while requiring\n   little or no configuration.\n   PPP over\
    \ Ethernet (PPPoE) provides the ability to connect a network\n   of hosts over\
    \ a simple bridging access device to a remote Access\n   Concentrator.  With this\
    \ model, each host utilizes it's own PPP stack\n   and the user is presented with\
    \ a familiar user interface.  Access\n   control, billing and type of service\
    \ can be done on a per-user,\n   rather than a per-site, basis.\n   To provide\
    \ a point-to-point connection over Ethernet, each PPP\n   session must learn the\
    \ Ethernet address of the remote peer, as well\n   as establish a unique session\
    \ identifier.  PPPoE includes a discovery\n   protocol that provides this.\n"
- title: 2. Conventions
  contents:
  - "2. Conventions\n   The keywords MUST, MUST NOT, REQUIRED, SHALL, SHALL NOT, SHOULD,\n\
    \   SHOULD NOT, RECOMMENDED, MAY, and OPTIONAL, when they appear in this\n   document,\
    \ are to be interpreted as described in [2].\n"
- title: 3. Protocol Overview
  contents:
  - "3. Protocol Overview\n   PPPoE has two distinct stages.  There is a Discovery\
    \ stage and a PPP\n   Session stage.  When a Host wishes to initiate a PPPoE session,\
    \ it\n   must first perform Discovery to identify the Ethernet MAC address of\n\
    \   the peer and establish a PPPoE SESSION_ID.  While PPP defines a\n   peer-to-peer\
    \ relationship, Discovery is inherently a client-server\n   relationship.  In\
    \ the Discovery process, a Host (the client)\n   discovers an Access Concentrator\
    \ (the server).  Based on the network\n   topology, there may be more than one\
    \ Access Concentrator that the\n   Host can communicate with.  The Discovery stage\
    \ allows the Host to\n   discover all Access Concentrators and then select one.\
    \  When\n   Discovery completes successfully, both the Host and the selected\n\
    \   Access Concentrator have the information they will use to build their\n  \
    \ point-to-point connection over Ethernet.\n   The Discovery stage remains stateless\
    \ until a PPP session is\n   established.  Once a PPP session is established,\
    \ both the Host and\n   the Access Concentrator MUST allocate the resources for\
    \ a PPP virtual\n   interface.\n"
- title: 4. Payloads
  contents:
  - "4. Payloads\n   The following packet formats are defined here.  The payload contents\n\
    \   will be defined in the Discovery and PPP sections.\n   An Ethernet frame is\
    \ as follows:\n                                       1\n                   0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n                  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                  |       DESTINATION_ADDR        |\n                  |    \
    \      (6 octets)           |\n                  |                           \
    \    |\n                  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                \
    \  |         SOURCE_ADDR           |\n                  |          (6 octets)\
    \           |\n                  |                               |\n         \
    \         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                  |    ETHER_TYPE\
    \  (2 octets)     |\n                  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   \
    \               ~                               ~\n                  ~       \
    \    payload             ~\n                  ~                              \
    \ ~\n                  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                  |\
    \           CHECKSUM            |\n                  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The DESTINATION_ADDR field contains either a unicast Ethernet\n   destination\
    \ address, or the Ethernet broadcast address (0xffffffff).\n   For Discovery packets,\
    \ the value is either a unicast or broadcast\n   address as defined in the Discovery\
    \ section.  For PPP session\n   traffic, this field MUST contain the peer's unicast\
    \ address as\n   determined from the Discovery stage.\n   The SOURCE_ADDR field\
    \ MUST contains the Ethernet MAC address of the\n   source device.\n   The ETHER_TYPE\
    \ is set to either 0x8863 (Discovery Stage) or 0x8864\n   (PPP Session Stage).\n\
    \   The Ethernet payload for PPPoE is as follows:\n                        1 \
    \                  2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  VER  | TYPE  |      CODE     |          SESSION_ID           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |            LENGTH             |           payload             ~\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The VER field is four bits and MUST be set to 0x1 for this version of\n  \
    \ the PPPoE specification.\n   The TYPE field is four bits and MUST be set to\
    \ 0x1 for this version\n   of the PPPoE specification.\n   The CODE field is eight\
    \ bits and is defined below for the Discovery\n   and PPP Session stages.\n  \
    \ The SESSION_ID field is sixteen bits.  It is an unsigned value in\n   network\
    \ byte order.  It's value is defined below for Discovery\n   packets.  The value\
    \ is fixed for a given PPP session and, in fact,\n   defines a PPP session along\
    \ with the Ethernet SOURCE_ADDR and\n   DESTINATION_ADDR.  A value of 0xffff is\
    \ reserved for future use and\n   MUST NOT be used\n   The LENGTH field is sixteen\
    \ bits.  The value, in network byte order,\n   indicates the length of the PPPoE\
    \ payload.  It does not include the\n   length of the Ethernet or PPPoE headers.\n"
- title: 5. Discovery Stage
  contents:
  - "5. Discovery Stage\n   There are four steps to the Discovery stage.  When it\
    \ completes, both\n   peers know the PPPoE SESSION_ID and the peer's Ethernet\
    \ address,\n   which together define the PPPoE session uniquely.  The steps consist\n\
    \   of the Host broadcasting an Initiation packet, one or more Access\n   Concentrators\
    \ sending Offer packets, the Host sending a unicast\n   Session Request packet\
    \ and the selected Access Concentrator sending a\n   Confirmation packet.  When\
    \ the Host receives the Confirmation packet,\n   it may proceed to the PPP Session\
    \ Stage.  When the Access\n   Concentrator sends the Confirmation packet, it may\
    \ proceed to the PPP\n   Session Stage.\n   All Discovery Ethernet frames have\
    \ the ETHER_TYPE field set to the\n   value 0x8863.\n   The PPPoE payload contains\
    \ zero or more TAGs.  A TAG is a TLV (type-\n   length-value) construct and is\
    \ defined as follows:\n                        1                   2         \
    \          3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |          TAG_TYPE             |        TAG_LENGTH             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |          TAG_VALUE ...                                        ~\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   TAG_TYPE is a sixteen bit field in network byte order.  Appendix A\n   contains\
    \ a list of all TAG_TYPEs and their TAG_VALUEs.\n   TAG_LENGTH is a sixteen bit\
    \ field.  It is an unsigned number in\n   network byte order, indicating the length\
    \ in octets of the TAG_VALUE.\n   If a discovery packet is received with a TAG\
    \ of unknown TAG_TYPE, the\n   TAG MUST be ignored unless otherwise specified\
    \ in this document.\n   This provides for backwards compatibility if/when new\
    \ TAGs are added.\n   If new mandatory TAGs are added, the version number will\
    \ be\n   incremented.\n   Some example Discovery packets are shown in Appendix\
    \ B.\n"
- title: 5.1 The PPPoE Active Discovery Initiation (PADI) packet
  contents:
  - "5.1 The PPPoE Active Discovery Initiation (PADI) packet\n   The Host sends the\
    \ PADI packet with the DESTINATION_ADDR set to the\n   broadcast address.  The\
    \ CODE field is set to 0x09 and the SESSION_ID\n   MUST be set to 0x0000.\n  \
    \ The PADI packet MUST contain exactly one TAG of TAG_TYPE Service-\n   Name,\
    \ indicating the service the Host is requesting, and any number\n   of other TAG\
    \ types.  An entire PADI packet (including the PPPoE\n   header) MUST NOT exceed\
    \ 1484 octets so as to leave sufficient room\n   for a relay agent to add a Relay-Session-Id\
    \ TAG.\n"
- title: 5.2 The PPPoE Active Discovery Offer (PADO) packet
  contents:
  - "5.2 The PPPoE Active Discovery Offer (PADO) packet\n   When the Access Concentrator\
    \ receives a PADI that it can serve, it\n   replies by sending a PADO packet.\
    \  The DESTINATION_ADDR is the\n   unicast address of the Host that sent the PADI.\
    \  The CODE field is\n   set to 0x07 and the SESSION_ID MUST be set to 0x0000.\n\
    \   The PADO packet MUST contain one AC-Name TAG containing the Access\n   Concentrator's\
    \ name, a Service-Name TAG identical to the one in the\n   PADI, and any number\
    \ of other Service-Name TAGs indicating other\n   services that the Access Concentrator\
    \ offers.  If the Access\n   Concentrator can not serve the PADI it MUST NOT respond\
    \ with a PADO.\n"
- title: 5.3 The PPPoE Active Discovery Request (PADR) packet
  contents:
  - "5.3 The PPPoE Active Discovery Request (PADR) packet\n   Since the PADI was broadcast,\
    \ the Host may receive more than one\n   PADO.  The Host looks through the PADO\
    \ packets it receives and\n   chooses one.  The choice can be based on the AC-Name\
    \ or the Services\n   offered.  The Host then sends one PADR packet to the Access\n\
    \   Concentrator that it has chosen.  The DESTINATION_ADDR field is set\n   to\
    \ the unicast Ethernet address of the Access Concentrator that sent\n   the PADO.\
    \  The CODE field is set to 0x19 and the SESSION_ID MUST be\n   set to 0x0000.\n\
    \   The PADR packet MUST contain exactly one TAG of TAG_TYPE Service-\n   Name,\
    \ indicating the service the Host is requesting, and any number\n   of other TAG\
    \ types.\n"
- title: 5.4 The PPPoE Active Discovery Session-confirmation (PADS) packet
  contents:
  - "5.4 The PPPoE Active Discovery Session-confirmation (PADS) packet\n   When the\
    \ Access Concentrator receives a PADR packet, it prepares to\n   begin a PPP session.\
    \  It generates a unique SESSION_ID for the PPPoE\n   session and replies to the\
    \ Host with a PADS packet.  The\n   DESTINATION_ADDR field is the unicast Ethernet\
    \ address of the Host\n   that sent the PADR.  The CODE field is set to 0x65 and\
    \ the SESSION_ID\n   MUST be set to the unique value generated for this PPPoE\
    \ session.\n   The PADS packet contains exactly one TAG of TAG_TYPE Service-Name,\n\
    \   indicating the service under which Access Concentrator has accepted\n   the\
    \ PPPoE session, and any number of other TAG types.\n   If the Access Concentrator\
    \ does not like the Service-Name in the\n   PADR, then it MUST reply with a PADS\
    \ containing a TAG of TAG_TYPE\n   Service-Name-Error (and any number of other\
    \ TAG types).  In this case\n   the SESSION_ID MUST be set to 0x0000.\n"
- title: 5.5 The PPPoE Active Discovery Terminate (PADT) packet
  contents:
  - "5.5 The PPPoE Active Discovery Terminate (PADT) packet\n   This packet may be\
    \ sent anytime after a session is established to\n   indicate that a PPPoE session\
    \ has been terminated.  It may be sent by\n   either the Host or the Access Concentrator.\
    \  The DESTINATION_ADDR\n   field is a unicast Ethernet address, the CODE field\
    \ is set to 0xa7\n   and the SESSION_ID MUST be set to indicate which session\
    \ is to be\n   terminated.  No TAGs are required.\n   When a PADT is received,\
    \ no further PPP traffic is allowed to be sent\n   using that session.  Even normal\
    \ PPP termination packets MUST NOT be\n   sent after sending or receiving a PADT.\
    \  A PPP peer SHOULD use the\n   PPP protocol itself to bring down a PPPoE session,\
    \ but the PADT MAY\n   be used when PPP can not be used.\n"
- title: 6. PPP Session Stage
  contents:
  - "6. PPP Session Stage\n   Once the PPPoE session begins, PPP data is sent as in\
    \ any other PPP\n   encapsulation.  All Ethernet packets are unicast.  The ETHER_TYPE\n\
    \   field is set to 0x8864.  The PPPoE CODE MUST be set to 0x00.  The\n   SESSION_ID\
    \ MUST NOT change for that PPPoE session and MUST be the\n   value assigned in\
    \ the Discovery stage.  The PPPoE payload contains a\n   PPP frame.  The frame\
    \ begins with the PPP Protocol-ID.\n   An example packet is shown in Appendix\
    \ B.\n"
- title: 7. LCP Considerations
  contents:
  - "7. LCP Considerations\n   The Magic Number LCP configuration option is RECOMMENDED,\
    \ and the\n   Protocol Field Compression (PFC) option is NOT RECOMMENDED.  An\n\
    \   implementation MUST NOT request any of the following options, and\n   MUST\
    \ reject a request for such an option:\n      Field Check Sequence (FCS) Alternatives,\n\
    \      Address-and-Control-Field-Compression (ACFC),\n      Asynchronous-Control-Character-Map\
    \ (ACCM)\n   The Maximum-Receive-Unit (MRU) option MUST NOT be negotiated to a\n\
    \   larger size than 1492.  Since Ethernet has a maximum payload size of\n   1500\
    \ octets, the PPPoE header is 6 octets and the PPP Protocol ID is\n   2 octets,\
    \ the PPP MTU MUST NOT be greater than 1492.\n   It is RECOMMENDED that the Access\
    \ Concentrator ocassionally send\n   Echo-Request packets to the Host to determine\
    \ the state of the\n   session.  Otherwise, if the Host terminates a session without\
    \ sending\n   a Terminate-Request packet, the Access Concentrator will not be\
    \ able\n   to determine that the session has gone away.\n   When LCP terminates,\
    \ the Host and Access concentrator MUST stop using\n   that PPPoE session.  If\
    \ the Host wishes to start another PPP session,\n   it MUST return to the PPPoE\
    \ Discovery stage.\n"
- title: 8. Other Considerations
  contents:
  - "8. Other Considerations\n   When a host does not receive a PADO packet within\
    \ a specified amount\n   of time, it SHOULD resend it's PADI packet and double\
    \ the waiting\n   period. This is repeated as many times as desired.  If the Host\
    \ is\n   waiting to receive a PADS packet, a similar timeout mechanism SHOULD\n\
    \   be used, with the Host re-sending the PADR.  After a specified number\n  \
    \ of retries, the Host SHOULD then resend a PADI packet.\n   The ETHER_TYPEs used\
    \ in this document (0x8863 and 0x8864) have been\n   assigned by the IEEE for\
    \ use by PPP Over Ethernet (PPPoE).  Use of\n   these values and the PPPoE VER\
    \ (version) field uniquely identify this\n   protocol.\n   UTF-8 [5] is used throughout\
    \ this document instead of ASCII.  UTF-8\n   supports the entire ASCII character\
    \ set while allowing for\n   international character sets as well.  See [5] for\
    \ more details.\n"
- title: 9. Security Considerations
  contents:
  - "9. Security Considerations\n   To help protect against Denial of Service (DOS)\
    \ attacks, the Access\n   Concentrator can employ the AC-Cookie TAG.  The Access\
    \ Concentrator\n   SHOULD be able to uniquely regenerate the TAG_VALUE based on\
    \ the PADR\n   SOURCE_ADDR.  Using this, the Access Concentrator can ensure that\
    \ the\n   PADI SOURCE_ADDR is indeed reachable and can then limit concurrent\n\
    \   sessions for that address.  What algorithm to use is not defined and\n   left\
    \ as an implementation detail.  An example is HMAC [3] over the\n   Host MAC address\
    \ using a key known only to the Access > Concentrator.\n   While the AC-Cookie\
    \ is useful against some DOS attacks, it can not\n   protect against all DOS attacks\
    \ and an Access Concentrator MAY employ\n   other means to protect resources.\n\
    \   While the AC-Cookie is useful against some DOS attacks, it can not\n   protect\
    \ against all DOS attacks and an Access Concentrator MAY employ\n   other means\
    \ to protect resources.\n   Many Access Concentrators will not wish to offer information\n\
    \   regarding what services they offer to an unauthenticated entity.  In\n   that\
    \ case the Access Concentrator should employ one of two policies.\n   It SHOULD\
    \ never refuse a request based on the Service-Name TAG, and\n   always return\
    \ the TAG_VALUE that was sent to it.  Or it SHOULD only\n   accept requests with\
    \ a Service-Name TAG with a zero TAG_LENGTH\n   (indicating any service).  The\
    \ former solution is RECOMMENDED.\n"
- title: 10. Acknowledgments
  contents:
  - "10. Acknowledgments\n   This document is based on concepts discussed in several\
    \ forums,\n   including the ADSL forum.\n   Copious amounts of text have been\
    \ stolen from RFC 1661, RFC 1662 and\n   RFC 2364.\n"
- title: 11. References
  contents:
  - "11. References\n   [1] Simpson, W., Editor, \"The Point-to-Point Protocol (PPP)\"\
    , STD 51,\n       RFC 1661, July 1994\n   [2] Bradner, S., \"Key words for use\
    \ in RFCs to Indicate Requirement\n       Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [3] Krawczyk, H., Bellare, M. and R. Canetti, \"HMAC: Keyed-Hashing\n    \
    \   for Message Authentication\", RFC 2104, February 1998.\n   [4] Reynolds, J.\
    \ and J. Postel, \"Assigned Numbers\", STD 2, RFC 1700,\n       October 1994.\
    \  See also: http://www.iana.org/numbers.html\n   [5] Yergeau, F., \"UTF-8, a\
    \ transformation format of ISO 10646\", RFC\n       2279, January 1998.\n"
- title: Appendix A
  contents:
  - "Appendix A\n   TAG_TYPES and TAG_VALUES\n   0x0000 End-Of-List\n      This TAG\
    \ indicates that there are no further TAGs in the list. The\n      TAG_LENGTH\
    \ of this TAG MUST always be zero.  Use of this TAG is\n      not required, but\
    \ remains for backwards compatibility.\n   0x0101 Service-Name\n      This TAG\
    \ indicates that a service name follows.  The TAG_VALUE is\n      an UTF-8 string\
    \ that is NOT NULL terminated. When the TAG_LENGTH\n      is zero this TAG is\
    \ used to indicate that any service is\n      acceptable.  Examples of the use\
    \ of the Service-Name TAG are to\n      indicate an ISP name or a class or quality\
    \ of service.\n   0x0102 AC-Name\n      This TAG indicates that a string follows\
    \ which uniquely identifies\n      this particular Access Concentrator unit from\
    \ all others. It may\n      be a combination of trademark, model, and serial id\
    \ information,\n      or simply an UTF-8 rendition of the MAC address of the box.\
    \  It is\n      not NULL terminated.\n   0x0103 Host-Uniq\n      This TAG is used\
    \ by a Host to uniquely associate an Access\n      Concentrator response (PADO\
    \ or PADS) to a particular Host request\n      (PADI or PADR).  The TAG_VALUE\
    \ is binary data of any value and\n      length that the Host chooses.  It is\
    \ not interpreted by the Access\n      Concentrator.  The Host MAY include a Host-Uniq\
    \ TAG in a PADI or\n      PADR.  If the Access Concentrator receives this TAG,\
    \ it MUST\n      include the TAG unmodified in the associated PADO or PADS\n \
    \     response.\n   0x0104 AC-Cookie\n      This TAG is used by the Access Concentrator\
    \ to aid in protecting\n      against denial of service attacks (see the Security\
    \ Considerations\n      section for an explanation of how this works).  The Access\n\
    \      Concentrator MAY include this TAG in a PADO packet.  If a Host\n      receives\
    \ this TAG, it MUST return the TAG unmodified in the\n      following PADR.  The\
    \ TAG_VALUE is binary data of any value and\n      length and is not interpreted\
    \ by the Host.\n   0x0105 Vendor-Specific\n      This TAG is used to pass vendor\
    \ proprietary information.  The\n      first four octets of the TAG_VALUE contain\
    \ the vendor id and the\n      remainder is unspecified.  The high-order octet\
    \ of the vendor id\n      is 0 and the low-order 3 octets are the SMI Network\
    \ Management\n      Private Enterprise Code of the Vendor in network byte order,\
    \ as\n      defined in the Assigned Numbers RFC [4].\n      Use of this TAG is\
    \ NOT RECOMMENDED.  To ensure inter-operability,\n      an implementation MAY\
    \ silently ignore a Vendor-Specific TAG.\n   0x0110 Relay-Session-Id\n      This\
    \ TAG MAY be added to any discovery packet by an intermediate\n      agent that\
    \ is relaying traffic.  The TAG_VALUE is opaque to both\n      the Host and the\
    \ Access Concentrator.  If either the Host or\n      Access Concentrator receives\
    \ this TAG they MUST include it\n      unmodified in any discovery packet they\
    \ send as a response.  All\n      PADI packets MUST guarantee sufficient room\
    \ for the addition of a\n      Relay-Session-Id TAG with a TAG_VALUE length of\
    \ 12 octets.\n      A Relay-Session-Id TAG MUST NOT be added if the discovery\
    \ packet\n      already contains one.  In that case the intermediate agent SHOULD\n\
    \      use the existing Relay-Session-Id TAG.  If it can not use the\n      existing\
    \ TAG or there is insufficient room to add a Relay-\n      Session-Id TAG, then\
    \ it SHOULD return a Generic-Error TAG to the\n      sender.\n   0x0201 Service-Name-Error\n\
    \      This TAG (typically with a zero-length data section) indicates\n      that\
    \ for one reason or another, the requested Service-Name request\n      could not\
    \ be honored.\n      If there is data, and the first octet of the data is nonzero,\
    \ then\n      it MUST be a printable UTF-8 string which explains why the request\n\
    \      was denied.  This string MAY NOT be NULL terminated.\n   0x0202 AC-System-Error\n\
    \      This TAG indicates that the Access Concentrator experienced some\n    \
    \  error in performing the Host request.  (For example insufficient\n      resources\
    \ to create a virtual circuit.)  It MAY be included in\n      PADS packets.\n\
    \      If there is data, and the first octet of the data is nonzero, then\n  \
    \    it MUST be a printable UTF-8 string which explains the nature of\n      the\
    \ error.  This string MAY NOT be NULL terminated.\n   0x0203 Generic-Error\n \
    \     This TAG indicates an error.  It can be added to PADO, PADR or\n      PADS\
    \ packets when an unrecoverable error occurs and no other error\n      TAG is\
    \ appropriate.  If there is data then it MUST be an UTF-8\n      string which\
    \ explains the nature of the error.  This string MUST\n      NOT be NULL terminated.\n"
- title: Appendix B
  contents:
  - "Appendix B\n   The following are some example packets:\n   A PADI packet:\n \
    \                          1                   2                   3\n       0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                         0xffffffff                            |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \           0xffff              |        Host_mac_addr          |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                    Host_mac_addr (cont)                       |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \    ETHER_TYPE = 0x8863        | v = 1 | t = 1 |  CODE = 0x09  |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     SESSION_ID = 0x0000       |      LENGTH = 0x0004          |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \      TAG_TYPE = 0x0101        |    TAG_LENGTH = 0x0000        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   A PADO packet:\n                           1                   2         \
    \          3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                         Host_mac_addr                         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \      Host_mac_addr (cont)     | Access_Concentrator_mac_addr  |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |             Access_Concentrator_mac_addr (cont)               |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \    ETHER_TYPE = 0x8863        | v = 1 | t = 1 |  CODE = 0x07  |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     SESSION_ID = 0x0000       |      LENGTH = 0x0020          |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \      TAG_TYPE = 0x0101        |    TAG_LENGTH = 0x0000        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |      TAG_TYPE = 0x0102        |    TAG_LENGTH = 0x0018        |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \     0x47      |     0x6f      |     0x20      |     0x52      |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     0x65      |     0x64      |     0x42      |     0x61      |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \     0x63      |     0x6b      |     0x20      |     0x2d      |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     0x20      |     0x65      |     0x73      |     0x68      |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \     0x73      |     0x68      |     0x65      |     0x73      |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     0x68      |     0x6f      |     0x6f      |     0x74      |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   A PPP\
    \ LCP packet:  The PPP protocol value is shown (0xc021) but the\n   PPP payload\
    \ is left to the reader.  This is a packet from the Host to\n   the Access Concentrator.\n\
    \                           1                   2                   3\n      \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                  Access_Concentrator_mac_addr                 |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |Access_Concentrator_mac_addr(c)|\
    \        Host_mac_addr          |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                     Host_mac_addr (cont)                      |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \    ETHER_TYPE = 0x8864        | v = 1 | t = 1 |  CODE = 0x00  |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     SESSION_ID = 0x1234       |      LENGTH = 0x????          |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \    PPP PROTOCOL = 0xc021      |        PPP payload            ~\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: Authors'  Addresses
  contents:
  - "Authors'  Addresses\n   Louis Mamakos\n   UUNET Technologies, Inc.\n   3060 Williams\
    \ Drive\n   Fairfax, VA  22031-4648\n   United States of America\n   EMail: louie@uu.net\n\
    \   Kurt Lidl\n   UUNET Technologies, Inc.\n   3060 Williams Drive\n   Fairfax,\
    \ VA  22031-4648\n   United States of America\n   EMail: lidl@uu.net\n   Jeff\
    \ Evarts\n   UUNET Technologies, Inc.\n   3060 Williams Drive\n   Fairfax, VA\
    \  22031-4648\n   United States of America\n   EMail: jde@uu.net\n   David Carrel\n\
    \   RedBack Networks, Inc.\n   1389 Moffett Park Drive\n   Sunnyvale, CA  94089-1134\n\
    \   United States of America\n   EMail: carrel@RedBack.net\n   Dan Simone\n  \
    \ RedBack Networks, Inc.\n   1389 Moffett Park Drive\n   Sunnyvale, CA  94089-1134\n\
    \   United States of America\n   EMail:dan@RedBack.net\n   Ross Wheeler\n   RouterWare,\
    \ Inc.\n   3961 MacArthur Blvd., Suite 212\n   Newport Beach, CA  92660\n   United\
    \ States of America\n   EMail: ross@routerware.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (1999).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
