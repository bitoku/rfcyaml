- title: __initial_text__
  contents:
  - "                 The Authentication Suboption for the\n     Dynamic Host Configuration\
    \ Protocol (DHCP) Relay Agent Option\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   The Dynamic Host Configuration Protocol (DHCP) Relay Agent\n   Information\
    \ Option (RFC 3046) conveys information between a DHCP\n   Relay Agent and a DHCP\
    \ server.  This specification defines an\n   authentication suboption for that\
    \ option, containing a keyed hash in\n   its payload.  The suboption supports\
    \ data integrity and replay\n   protection for relayed DHCP messages.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n   2.  Requirements Terminology . . . . . . . . . . . . . . .\
    \ . . .   3\n   3.  DHCP Terminology . . . . . . . . . . . . . . . . . . . . .\
    \ .   4\n   4.  Suboption Format . . . . . . . . . . . . . . . . . . . . . . \
    \  4\n   5.  Replay Detection . . . . . . . . . . . . . . . . . . . . . .   5\n\
    \   6.  The Relay Identifier Field . . . . . . . . . . . . . . . . .   5\n   7.\
    \  Computing Authentication Information . . . . . . . . . . . .   6\n       7.1.\
    \  The HMAC-SHA1 Algorithm  . . . . . . . . . . . . . . .   6\n   8.  Procedures\
    \ for Sending Messages  . . . . . . . . . . . . . .   7\n       8.1.  Replay Detection\
    \ . . . . . . . . . . . . . . . . . . .   7\n       8.2.  Packet Preparation .\
    \ . . . . . . . . . . . . . . . . .   8\n       8.3.  Checksum Computation . .\
    \ . . . . . . . . . . . . . . .   8\n       8.4.  Sending the Message  . . . .\
    \ . . . . . . . . . . . . .   8\n   9.  Procedures for Processing Incoming Messages\
    \  . . . . . . . .   8\n       9.1.  Initial Examination  . . . . . . . . . .\
    \ . . . . . . .   8\n       9.2.  Replay Detection Check . . . . . . . . . . .\
    \ . . . . .   9\n       9.3.  Testing the Checksum . . . . . . . . . . . . . .\
    \ . . .   9\n   10. Relay Agent Behavior . . . . . . . . . . . . . . . . . . .\
    \ .   9\n       10.1. Receiving Messages from Other Relay Agents . . . . . . \
    \ 10\n       10.2. Sending Messages to Servers  . . . . . . . . . . . . .  10\n\
    \       10.3. Receiving Messages from Servers  . . . . . . . . . . .  10\n   11.\
    \ DHCP Server Behavior . . . . . . . . . . . . . . . . . . . .  10\n       11.1.\
    \ Receiving Messages from Relay Agents . . . . . . . . .  10\n       11.2. Sending\
    \ Reply Messages to Relay Agents . . . . . . . .  11\n   12. IANA Considerations\
    \  . . . . . . . . . . . . . . . . . . . .  11\n   13. Security Considerations\
    \  . . . . . . . . . . . . . . . . . .  11\n       13.1. The Key ID Field . .\
    \ . . . . . . . . . . . . . . . . .  12\n       13.2. Protocol Vulnerabilities\
    \ . . . . . . . . . . . . . . .  12\n   14. Acknowledgements . . . . . . . . .\
    \ . . . . . . . . . . . . .  13\n   15. References . . . . . . . . . . . . . .\
    \ . . . . . . . . . . .  13\n       15.1. Normative References . . . . . . . .\
    \ . . . . . . . . .  13\n       15.2. Informative References . . . . . . . . .\
    \ . . . . . . .  13\n   Authors' Addresses . . . . . . . . . . . . . . . . . .\
    \ . . . . .  14\n   Full Copyright Statement . . . . . . . . . . . . . . . . .\
    \ . . .  15\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   DHCP (RFC 2131 [6]) provides IP addresses and configuration\n\
    \   information for IPv4 clients.  It includes a relay-agent capability\n   (RFC\
    \ 951 [7], RFC 1542 [8]) in which processes within the network\n   infrastructure\
    \ receive broadcast messages from clients and forward\n   them to servers as unicast\
    \ messages.  In network environments such as\n   DOCSIS data-over-cable and xDSL,\
    \ for example, it has proven useful\n   for the relay agent to add information\
    \ to the DHCP message before\n   forwarding it, by using the relay-agent information\
    \ option (RFC 3046\n   [1]).  The kind of information that relays add is often\
    \ used in the\n   server's decision-making about the addresses and configuration\n\
    \   parameters that the client should receive.  The way that the\n   relay-agent\
    \ data is used in server decision-making tends to make that\n   data very important,\
    \ and it highlights the importance of the trust\n   relationship between the relay\
    \ agent and the server.\n   The existing DHCP Authentication specification (RFC\
    \ 3118) [9] only\n   covers communication between the DHCP client and server.\
    \  Because\n   relay-agent information is added after the client has sent its\n\
    \   message, the DHCP Authentication specification explicitly excludes\n   relay-agent\
    \ data from that authentication.\n   The goal of this specification is to define\
    \ methods that a relay\n   agent can use to\n      1.  protect the integrity of\
    \ relayed DHCP messages,\n      2.  provide replay protection for those messages,\
    \ and\n      3.  leverage existing mechanisms, such as DHCP Authentication.\n\
    \   In order to meet these goals, we specify a new relay-agent suboption,\n  \
    \ the Authentication suboption.  The format of this suboption is very\n   similar\
    \ to the format of the DHCP Authentication option, and the\n   specification of\
    \ its cryptographic methods and hash computation is\n   also similar.\n   The\
    \ Authentication suboption is included by relay agents that seek to\n   ensure\
    \ the integrity of the data they include in the Relay Agent\n   option.  These\
    \ relay agents are configured with the parameters\n   necessary for generating\
    \ cryptographic checksums of the data in the\n   DHCP messages that they forward\
    \ to DHCP servers.  A DHCP server\n   configured to process the Authentication\
    \ suboption uses the\n   information in the suboption to verify the checksum in\
    \ the suboption\n   and continues processing the relay agent information option\
    \ only if\n   the checksum is valid.  If the DHCP server sends a response, it\n\
    \   includes an Authentication suboption in its response message.  Relay\n   agents\
    \ test the checksums in DHCP server responses to decide whether\n   to forward\
    \ the responses.\n"
- title: 2.  Requirements Terminology
  contents:
  - "2.  Requirements Terminology\n   In this document, the key words \"MUST\", \"\
    MUST NOT\", \"REQUIRED\",\n   \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\"\
    , \"RECOMMENDED\", \"MAY\",\n   and \"OPTIONAL\" are to be interpreted as described\
    \ in RFC 2119 [2].\n"
- title: 3.  DHCP Terminology
  contents:
  - "3.  DHCP Terminology\n   This document uses the terms \"DHCP server\" (or \"\
    server\") and \"DHCP\n   client\" (or \"client\") as defined in RFC 2131 [6].\
    \  The term \"DHCP\n   relay agent\" refers to a \"BOOTP relay agent\" as defined\
    \ in RFC 2131.\n"
- title: 4.  Suboption Format
  contents:
  - "4.  Suboption Format\n       0                   1                   2      \
    \             3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     Code      |    Length     |   Algorithm   |  MBZ  |  RDM  |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \  Replay Detection (64 bits)                                   |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |  Replay Detection cont.                                       |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                    Relay Identifier                           |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                                                               |\n   \
    \   |                                                               |\n      |\
    \                Authentication Information                     |\n      |   \
    \                                                            |\n      |      \
    \                                                         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The code for the suboption is 8.  The length field includes the\n   lengths\
    \ of the algorithm, the RDM, and all subsequent suboption\n   fields in octets.\n\
    \   The Algorithm field defines the algorithm used to generate the\n   authentication\
    \ information.\n   Four bits are reserved for future use.  These bits SHOULD be\
    \ set to\n   zero and MUST NOT be used when the suboption is processed.\n   The\
    \ Replay Detection Method (RDM) field defines the method used to\n   generate\
    \ the Replay Detection Data.\n   The Replay Detection field contains a value used\
    \ to detect replayed\n   messages, which are interpreted according to the RDM.\n\
    \   The Relay Identifier field is used by relay agents that do not set\n   giaddr,\
    \ as described in RFC 3046 [1], section 2.1.\n   The Authentication Information\
    \ field contains the data required to\n   communicate algorithm-specific parameters,\
    \ as well as the checksum.\n   The checksum is usually a digest of the data in\
    \ the DHCP packet\n   computed by using the method specified by the Algorithm\
    \ field.\n"
- title: 5.  Replay Detection
  contents:
  - "5.  Replay Detection\n   The replay-detection mechanism is designed on the notion\
    \ that a\n   receiver can determine whether a message has a valid replay token\n\
    \   value.  The default RDM, with value 1, specifies that the Replay\n   Detection\
    \ field contains an increasing counter value.  The receiver\n   associates a replay\
    \ counter with each sender and rejects any message\n   containing an authentication\
    \ suboption with a Replay Detection\n   counter value less than or equal to the\
    \ last valid value.  DHCP\n   servers MAY identify relay agents by giaddr value\
    \ or by other data in\n   the message (e.g., data in other relay agent suboptions).\
    \  Relay\n   agents identify DHCP servers by source IP address.  If the message's\n\
    \   replay detection value, and the checksum are valid, the receiver\n   updates\
    \ its notion of the last valid replay counter value associated\n   with the sender.\n\
    \   All implementations MUST support the default RDM.  Additional methods\n  \
    \ may be defined in the future, following the process described in\n   section\
    \ 12.\n   Receivers SHOULD perform the replay-detection check before testing\n\
    \   the checksum.  The keyed hash calculation is likely to be much more\n   expensive\
    \ than the replay-detection value check.\n      DISCUSSION:\n         This places\
    \ a burden on the receiver to maintain some run-time\n         state (the most-recent\
    \ valid counter value) for each sender,\n         but the number of members in\
    \ a DHCP agent-server system is\n         unlikely to be unmanageably large.\n"
- title: 6.  The Relay Identifier Field
  contents:
  - "6.  The Relay Identifier Field\n   The Relay Agent Information Option [1] specification\
    \ permits a relay\n   agent to add a relay agent option to relayed messages without\
    \ setting\n   the giaddr field.  In this case, the eventual receiver of the message\n\
    \   needs a stable identifier to use in order to associate per-sender\n   state\
    \ such as Key ID and replay-detection counters.\n   A relay agent that adds a\
    \ relay agent information option and sets\n   giaddr MUST NOT set the Relay ID\
    \ field.  A relay agent that does not\n   set giaddr MAY be configured to place\
    \ a value in the Relay ID field.\n   If the relay agent is configured to use the\
    \ Relay ID field, it MAY be\n   configured with a value to use, or it MAY be configured\
    \ to generate a\n   value based on some other data, such as its MAC or IP addresses.\
    \  If\n   a relay generates a Relay ID value, it SHOULD select a value that it\n\
    \   can regenerate reliably; e.g., across reboots.\n   Servers that process an\
    \ Authentication Suboption SHOULD use the\n   giaddr value to identify the sender\
    \ if the giaddr field is set.\n   Servers MAY be configured to use some other\
    \ data in the message to\n   identify the sender.  If giaddr is not set, the server\
    \ SHOULD use the\n   Relay ID field if it is nonzero.  If neither the giaddr nor\
    \ the Relay\n   ID field is set, the server MAY be configured to use some other\
    \ data\n   in the message, or it MAY increment an error counter.\n"
- title: 7.  Computing Authentication Information
  contents:
  - "7.  Computing Authentication Information\n   The Authentication Information field\
    \ contains a keyed hash generated\n   by the sender.  All algorithms are defined\
    \ to process the data in the\n   DHCP messages in the same way.  The sender and\
    \ receiver compute a\n   hash across a buffer containing all of the bytes in the\
    \ DHCP message,\n   including the fixed DHCP message header, the DHCP options,\
    \ and the\n   relay agent suboptions, with the following exceptions.  The value\
    \ of\n   the 'hops' field MUST be set to zero for the computation because its\n\
    \   value may be changed in transmission.  The value of the 'giaddr'\n   field\
    \ MUST also be set to zero for the computation because it may be\n   modified\
    \ in networks where one relay agent adds the relay agent\n   option but another\
    \ relay agent sets 'giaddr' (see RFC 3046, section\n   2.1).  In addition, because\
    \ the relay agent option is itself included\n   in the computation, the 'authentication\
    \ information' field in the\n   Authentication suboption is set to all zeros.\
    \  The relay agent option\n   length, the Authentication suboption length and\
    \ other Authentication\n   suboption fields are all included in the computation.\n\
    \   All implementations MUST support Algorithm 1, the HMAC-SHA1\n   algorithm.\
    \  Additional algorithms may be defined in the future,\n   following the process\
    \ described in section 12.\n"
- title: 7.1.  The HMAC-SHA1 Algorithm
  contents:
  - "7.1.  The HMAC-SHA1 Algorithm\n   Algorithm 1 is assigned to the HMAC [3] protocol\
    \ by using the SHA-1\n   [4] hash function.  This algorithm requires that a shared\
    \ secret key\n   be configured at the relay agent and the DHCP server.  A 32-bit\
    \ Key\n   Identifier is associated with each shared key, and this identifier is\n\
    \   carried in the first 4 bytes of the Authentication Information field\n   of\
    \ the Authentication suboption.  The HMAC-SHA1 computation generates\n   a 20-byte\
    \ hash value, which is placed in the Authentication\n   Information field after\
    \ the Key ID.\n   When Algorithm 1 is used, the format of the Authentication suboption\n\
    \   is as follows:\n       0                   1                   2         \
    \          3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     Code      |       38      |0 0 0 0 0 0 0 1|  MBZ  |  RDM  |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \  Replay Detection (64 bits)                                   |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |  Replay Detection cont.                                       |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                    Relay Identifier                           |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                        Key ID (32 bits)                       |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                                                               |\n      |   \
    \                   HMAC-SHA1 (160 bits)                     |\n      |      \
    \                                                         |\n      |         \
    \                                                      |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The suboption length is 38.  The RDM and Replay Detection fields are\n   as\
    \ specified in section 5.  The Relay ID field is set as specified in\n   section\
    \ 6.  The Key ID is set by the sender to the ID of the key used\n   in computing\
    \ the checksum, as an integer value in network byte order.\n   The HMAC result\
    \ follows the Key ID.\n   The Key ID exists only to allow the sender and receiver\
    \ to specify a\n   shared secret in cases where more than one secret is in use\
    \ among a\n   network's relays and DHCP servers.  The Key ID values are entirely\
    \ a\n   matter of local configuration; they only have to be unique locally.\n\
    \   This specification does not define any semantics or impose any\n   requirements\
    \ on this algorithm's Key ID values.\n"
- title: 8.  Procedures for Sending Messages
  contents:
  - '8.  Procedures for Sending Messages

    '
- title: 8.1.  Replay Detection
  contents:
  - "8.1.  Replay Detection\n   The sender obtains a replay-detection counter value\
    \ to use based on\n   the RDM it is using.  If the sender is using RDM 1, the\
    \ default RDM,\n   the value MUST be greater than any previously sent value.\n"
- title: 8.2.  Packet Preparation
  contents:
  - "8.2.  Packet Preparation\n   The sender sets the 'giaddr' field and the 'hops'\
    \ field to all zeros.\n   The sender appends the relay agent information option\
    \ to the client's\n   packet, including the Authentication suboption.  The sender\
    \ selects\n   an appropriate Replay Detection value.  The sender places its\n\
    \   identifier into the Relay ID field, if necessary, or sets the field\n   to\
    \ all zeros.  The sender sets the suboption length, places the\n   Replay Detection\
    \ value into the Replay Detection field of the\n   suboption, and sets the algorithm\
    \ to the algorithm number that it is\n   using.  If the sender is using HMAC-SHA1,\
    \ it sets the Key ID field to\n   the appropriate value.  The sender sets the\
    \ field that will contain\n   the checksum to all zeros.  Other algorithms may\
    \ specify additional\n   preparation steps.\n"
- title: 8.3.  Checksum Computation
  contents:
  - "8.3.  Checksum Computation\n   The sender computes the checksum across the entire\
    \ DHCP message,\n   using the algorithm it has selected.  The sender places the\
    \ result of\n   the computation into the Authentication Information field of the\n\
    \   Authentication suboption.\n"
- title: 8.4.  Sending the Message
  contents:
  - "8.4.  Sending the Message\n   The sender restores the values of the 'hops' and\
    \ 'giaddr' fields and\n   sends the message.\n"
- title: 9.  Procedures for Processing Incoming Messages
  contents:
  - '9.  Procedures for Processing Incoming Messages

    '
- title: 9.1.  Initial Examination
  contents:
  - "9.1.  Initial Examination\n   The receiver examines the message for the value\
    \ of the giaddr field\n   and determines whether the packet includes the relay\
    \ agent\n   information option.  The receiver uses its configuration to determine\n\
    \   whether it should expect an Authentication suboption.  The receiver\n   MUST\
    \ support a configuration that allows it to drop incoming messages\n   that do\
    \ not contain a valid relay agent information option and\n   Authentication suboption.\n\
    \   If the receiver determines that the Authentication suboption is\n   present\
    \ and that it should process the suboption, it uses the data in\n   the message\
    \ to determine which algorithm, key, and RDM to use in\n   validating the message.\
    \  If the receiver cannot determine which\n   algorithm, key, and RDM to use,\
    \ or if it does not support the value\n   indicated in the message, it SHOULD\
    \ drop the message.  Because this\n   situation could indicate a misconfiguration\
    \ that could deny service\n   to clients, receivers MAY attempt to notify their\
    \ administrators or\n   to log an error message.\n"
- title: 9.2.  Replay Detection Check
  contents:
  - "9.2.  Replay Detection Check\n   The receiver examines the RDM field.  Receivers\
    \ MUST discard messages\n   containing RDM values that they do not support.  Because\
    \ this may\n   indicate a misconfiguration at the sender, an attempt SHOULD be\
    \ made\n   to indicate this condition to the administrator by incrementing an\n\
    \   error counter or writing a log message.  If the receiver supports the\n  \
    \ RDM, it examines the value in the Replay Detection field by using the\n   procedures\
    \ in the RDM and in section 5.  If the Replay value is not\n   valid, the receiver\
    \ MUST drop the message.\n   Note that at this point the receiver MUST NOT update\
    \ its notion of\n   the last valid Replay Detection value for the sender.  Until\
    \ the\n   checksum has been tested, the Replay Detection field cannot be\n   trusted.\
    \  If the receiver trusts the Replay Detection value without\n   testing the checksum,\
    \ a malicious host could send a replayed message\n   with a Replay Detection value\
    \ that was very high, tricking the\n   receiver into rejecting legitimate values\
    \ from the sender.\n"
- title: 9.3.  Testing the Checksum
  contents:
  - "9.3.  Testing the Checksum\n   The receiver prepares the packet in order to test\
    \ the checksum by\n   setting the 'giaddr' and 'hops' fields to zero, and by setting\
    \ the\n   Authentication Information field of the suboption to all zeros.\n  \
    \ Using the algorithm and key associated with the sender, the receiver\n   computes\
    \ a hash of the message.  The receiver compares the result of\n   its computation\
    \ with the value sent.  If the checksums do not match,\n   the receiver MUST drop\
    \ the message.  Otherwise, the receiver updates\n   its notion of the last valid\
    \ Replay Detection value associated with\n   the sender and processes the message.\n"
- title: 10.  Relay Agent Behavior
  contents:
  - "10.  Relay Agent Behavior\n   DHCP Relay agents are typically configured with\
    \ the addresses of one\n   or more DHCP servers.  A relay agent that implements\
    \ this suboption\n   requires an algorithm number for each server, as well as\
    \ appropriate\n   credentials (i.e., keys).  Relay implementations SHOULD support\
    \ a\n   configuration that indicates that all relayed messages should include\n\
    \   the authentication suboption.  Use of the authentication suboption\n   SHOULD\
    \ be disabled by default.  Relay agents MAY support\n   configuration that indicates\
    \ that certain destination servers support\n   the authentication suboption and\
    \ that other servers do not.  Relay\n   agents MAY support configuration of a\
    \ single algorithm number and key\n   to be used with all DHCP servers, or they\
    \ MAY support configuration\n   of different algorithms and keys for each server.\n"
- title: 10.1.  Receiving Messages from Other Relay Agents
  contents:
  - "10.1.  Receiving Messages from Other Relay Agents\n   There are network configurations\
    \ in which one relay agent adds the\n   relay agent option and then forwards the\
    \ DHCP message to another\n   relay agent.  For example, a layer-2 switch might\
    \ be directly\n   connected to a client, and it might forward messages to an\n\
    \   aggregating router, which sets giaddr and then forwards the message\n   to\
    \ a DHCP server.  When a DHCP relay that implements the\n   Authentication suboption\
    \ receives a message, it MAY use the\n   procedures in section 9 to verify the\
    \ source of the message before\n   forwarding it.\n"
- title: 10.2.  Sending Messages to Servers
  contents:
  - "10.2.  Sending Messages to Servers\n   When the relay agent receives a broadcast\
    \ packet from a client, it\n   determines which DHCP servers (or other relay agents)\
    \ should receive\n   copies of the message.  If the relay agent is configured\
    \ to include\n   the Authentication suboption, it determines which Algorithm and\
    \ RDM\n   to use, and then it performs the steps in section 8.\n"
- title: 10.3.  Receiving Messages from Servers
  contents:
  - "10.3.  Receiving Messages from Servers\n   When the relay agent receives a message,\
    \ it determines from its\n   configuration whether it expects the message to contain\
    \ a relay agent\n   information option and an Authentication suboption.  The relay\
    \ agent\n   MAY be configured to drop response messages that do not contain the\n\
    \   Authentication suboption.  The relay agent then follows the\n   procedures\
    \ in section 9.\n"
- title: 11.  DHCP Server Behavior
  contents:
  - "11.  DHCP Server Behavior\n   DHCP servers may interact with multiple relay agents.\
    \  Server\n   implementations MAY support a configuration that associates the\
    \ same\n   algorithm and key with all relay agents.  Servers MAY support a\n \
    \  configuration that specifies the algorithm and key to use with each\n   relay\
    \ agent individually.\n"
- title: 11.1.  Receiving Messages from Relay Agents
  contents:
  - "11.1.  Receiving Messages from Relay Agents\n   When a DHCP server that implements\
    \ the Authentication suboption\n   receives a message, it performs the steps in\
    \ section 9.\n"
- title: 11.2.  Sending Reply Messages to Relay Agents
  contents:
  - "11.2.  Sending Reply Messages to Relay Agents\n   When the server has prepared\
    \ a reply message, it uses the incoming\n   request message and its configuration\
    \ to determine whether it should\n   include a relay agent information option\
    \ and an Authentication\n   suboption.  If the server is configured to include\
    \ the Authentication\n   suboption, it determines which Algorithm and RDM to use\
    \ and then\n   performs the steps in section 8.\n      DISCUSSION:\n         This\
    \ server behavior represents a slight variance from RFC 3046\n         [1], section\
    \ 2.2.  The Authentication suboption is not echoed\n         back from the server\
    \ to the relay; the server generates its own\n         suboption.\n"
- title: 12.  IANA Considerations
  contents:
  - "12.  IANA Considerations\n   Section 4 defines a new suboption for the DHCP relay\
    \ agent option\n   called the Authentication Suboption.  IANA has allocated a\
    \ new\n   suboption code from the relay agent option suboption number space.\n\
    \   This specification introduces two new number spaces for the\n   Authentication\
    \ suboption's 'Algorithm' and 'Replay Detection Method'\n   fields.  These number\
    \ spaces have been created and will be maintained\n   by IANA.\n   The Algorithm\
    \ identifier is a one-byte value.  The Algorithm value 0\n   is reserved.  The\
    \ Algorithm value 1 is assigned to the HMAC-SHA1\n   keyed hash, as defined in\
    \ section 7.1.  Additional algorithm values\n   will be allocated and assigned\
    \ through IETF consensus, as defined in\n   RFC 2434 [5].\n   The RDM identifier\
    \ is a four-bit value.  The RDM value 0 is reserved.\n   The RDM value 1 is assigned\
    \ to the use of a monotonically increasing\n   counter value, as defined in section\
    \ 5.  Additional RDM values will\n   be allocated and assigned through IETF consensus,\
    \ as defined in RFC\n   2434 [5].\n"
- title: 13.  Security Considerations
  contents:
  - "13.  Security Considerations\n   This specification describes a protocol that\
    \ adds source\n   authentication and message integrity protection to the messages\n\
    \   between DHCP relay agents and DHCP servers.\n   The use of this protocol imposes\
    \ a new computational burden on relay\n   agents and servers, because they must\
    \ perform cryptographic hash\n   calculations when they send and receive messages.\
    \  This burden may\n   add latency to DHCP message exchanges.  Because relay agents\
    \ are\n   involved when clients reboot, periods of very high reboot activity\n\
    \   will result in the largest number of messages that have to be\n   processed.\
    \  During a cable MSO head-end reboot event, for example,\n   the time required\
    \ for all clients to be served may increase.\n"
- title: 13.1.  The Key ID Field
  contents:
  - "13.1.  The Key ID Field\n   The Authentication suboption contains a four-byte\
    \ Key ID, following\n   the example of the DHCP Authentication RFC.  Other authentication\n\
    \   protocols, such as DNS TSIG [10], use a key name.  A key name is more\n  \
    \ flexible and potentially more human readable than a key id.  DHCP\n   servers\
    \ may well be configured to use key names for DNS updates using\n   TSIG, so it\
    \ might simplify DHCP server configuration if some of the\n   key management for\
    \ both protocols could be shared.\n   On the other hand, it is crucial to minimize\
    \ the size expansion\n   caused by the introduction of the relay agent information\
    \ option.\n   Named keys would require more physical space and would entail more\n\
    \   complex suboption encoding and parsing implementations.  These\n   considerations\
    \ have led us to specify a fixed-length Key ID instead\n   of a variable-length\
    \ key name.\n"
- title: 13.2.  Protocol Vulnerabilities
  contents:
  - "13.2.  Protocol Vulnerabilities\n   Because DHCP is a UDP protocol, messages\
    \ between relays and servers\n   may be delivered in an order different from that\
    \ in which they were\n   generated.  The replay-detection mechanism will cause\
    \ receivers to\n   drop packets that are delivered 'late', leading to client retries.\n\
    \   The retry mechanisms that most clients implement should not cause\n   this\
    \ to be an enormous issue, but it will cause senders to do\n   computational work\
    \ which will be wasted if their messages are\n   re-ordered.\n   The DHC WG has\
    \ developed two documents describing authentication of\n   DHCP relay agent options\
    \ to accommodate the requirements of different\n   deployment scenarios: this\
    \ document and \"Authentication of Relay\n   Agent Options Using IPsec\" [11].\
    \  As we note in section 11, the\n   Authentication suboption can be used without\
    \ pairwise keys between\n   each relay and each DHCP server.  In deployments where\
    \ IPsec is\n   readily available and pairwise keys can be managed efficiently,\
    \ the\n   use of IPsec as described in that document may be appropriate.  If\n\
    \   IPsec is not available or there are multiple relay agents for which\n   multiple\
    \ keys must be managed, the protocol described in this\n   document may be appropriate.\
    \  As is the case whenever two\n   alternatives are available, local network administration\
    \ can choose\n   whichever is more appropriate.  Because the relay agents and\
    \ the DHCP\n   server are all in the same administrative domain, the appropriate\n\
    \   mechanism can be configured on all interoperating DHCP server\n   elements.\n"
- title: 14.  Acknowledgements
  contents:
  - "14.  Acknowledgements\n   The need for this specification was made clear by comments\
    \ made by\n   Thomas Narten and John Schnizlein, and the use of the DHCP\n   Authentication\
    \ option format was suggested by Josh Littlefield, at\n   IETF 53.\n"
- title: 15.  References
  contents:
  - '15.  References

    '
- title: 15.1.  Normative References
  contents:
  - "15.1.  Normative References\n   [1]  Patrick, M., \"DHCP Relay Agent Information\
    \ Option\", RFC 3046,\n        January 2001.\n   [2]  Bradner, S., \"Key words\
    \ for use in RFCs to Indicate Requirement\n        Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   [3]  Krawczyk, H., Bellare, M., and R. Canetti, \"HMAC: Keyed-Hashing\n\
    \        for Message Authentication\", RFC 2104, February 1997.\n   [4]  Eastlake\
    \ 3rd, D. and P. Jones, \"US Secure Hash Algorithm 1\n        (SHA1)\", RFC 3174,\
    \ September 2001.\n   [5]  Narten, T. and H. Alvestrand, \"Guidelines for Writing\
    \ an IANA\n        Considerations Section in RFCs\", BCP 26, RFC 2434, October\
    \ 1998.\n"
- title: 15.2.  Informative References
  contents:
  - "15.2.  Informative References\n   [6]  Droms, R., \"Dynamic Host Configuration\
    \ Protocol\", RFC 2131,\n        March 1997.\n   [7]  Croft, W. and J. Gilmore,\
    \ \"Bootstrap Protocol\", RFC 951,\n        September 1985.\n   [8]  Wimer, W.,\
    \ \"Clarifications and Extensions for the Bootstrap\n        Protocol\", RFC 1542,\
    \ October 1993.\n   [9]  Droms, R. and W. Arbaugh, \"Authentication for DHCP Messages\"\
    ,\n        RFC 3118, June 2001.\n   [10] Vixie, P., Gudmundsson, O., Eastlake\
    \ 3rd, D., and B. Wellington,\n        \"Secret Key Transaction Authentication\
    \ for DNS (TSIG)\", RFC\n        2845, May 2000.\n   [11] Droms, R., \"Authentication\
    \ of Relay Agent Options Using IPsec\",\n        Work in Progress, February 2004.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Mark Stapp\n   Cisco Systems, Inc.\n   1414 Massachusetts\
    \ Ave.\n   Boxborough, MA  01719\n   USA\n   Phone: 978.936.0000\n   EMail: mjs@cisco.com\n\
    \   Ted Lemon\n   Nominum, Inc.\n   950 Charter St.\n   Redwood City, CA  94063\n\
    \   USA\n   EMail: Ted.Lemon@nominum.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
