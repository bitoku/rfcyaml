- title: __initial_text__
  contents:
  - "       Use of the Advanced Encryption Standard (AES) Encryption\n           \
    \ Algorithm in Cryptographic Message Syntax (CMS)\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies the conventions for using the Advanced\n\
    \   Encryption Standard (AES) algorithm for encryption with the\n   Cryptographic\
    \ Message Syntax (CMS).\n"
- title: Conventions used in this document
  contents:
  - "Conventions used in this document\n   The key words \"MUST\", \"MUST NOT\", \"\
    REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in BCP 14, RFC 2119\n   [MUSTSHOULD].\n"
- title: 1.  Overview
  contents:
  - "1.  Overview\n   This document specifies the conventions for using Advanced Encryption\n\
    \   Standard (AES) content encryption algorithm with the Cryptographic\n   Message\
    \ Syntax [CMS] enveloped-data and encrypted-data content types.\n   CMS values\
    \ are generated using ASN.1 [X.208-88], using the Basic\n   Encoding Rules (BER)\
    \ [X.209-88] and the Distinguished Encoding Rules\n   (DER) [X.509-88].\n"
- title: 1.1.  AES
  contents:
  - "1.1.  AES\n   The Advanced Encryption Standard (AES) [AES] was developed to replace\n\
    \   DES [DES].  The AES Federal Information Processing Standard (FIPS)\n   Publication\
    \ specifies a cryptographic algorithm for use by U.S.\n   Government organizations.\
    \  However, the AES will also be widely used\n   by organizations, institutions,\
    \ and individuals outside of the U.S.\n   Government.\n   Two researchers who\
    \ developed and submitted the Rijndael algorithm\n   for consideration are both\
    \ cryptographers from Belgium: Dr. Joan\n   Daemen of Proton World International\
    \ and Dr. Vincent Rijmen, a\n   postdoctoral researcher in the Electrical Engineering\
    \ Department of\n   Katholieke Universiteit Leuven.\n   The National Institute\
    \ of Standards and technology (NIST) selected\n   the Rijndael algorithm for AES\
    \ because it offers a combination of\n   security, performance, efficiency, ease\
    \ of implementation, and\n   flexibility.  Specifically, Rijndael appears to be\
    \ consistently a\n   very good performer in both hardware and software across\
    \ a wide range\n   of computing environments regardless of its use in feedback\
    \ or\n   non-feedback modes.  Its key setup time is excellent, and its key\n \
    \  agility is good.  The very low memory requirements of the Rijndael\n   algorithm\
    \ make it very well suited for restricted-space environments,\n   in which it\
    \ also demonstrates excellent performance.  The Rijndael\n   algorithm operations\
    \ are among the easiest to defend against power\n   and timing attacks.  Additionally,\
    \ it appears that some defense can\n   be provided against such attacks without\
    \ significantly impacting the\n   algorithm's performance.  Finally, the algorithm's\
    \ internal round\n   structure appears to have good potential to benefit from\n\
    \   instruction-level parallelism.\n   The AES specifies three key sizes: 128,\
    \ 192 and 256 bits.\n"
- title: 2.  Enveloped-data Conventions
  contents:
  - "2.  Enveloped-data Conventions\n   The CMS enveloped-data content type consists\
    \ of encrypted content and\n   wrapped content-encryption keys for one or more\
    \ recipients.  The AES\n   algorithm is used to encrypt the content.\n   Compliant\
    \ software MUST meet the requirements for constructing an\n   enveloped-data content\
    \ type stated in [CMS] Section 6,\n   \"Enveloped-data Content Type\".\n   The\
    \ AES content-encryption key MUST be randomly generated for each\n   instance\
    \ of an enveloped-data content type.  The content-encryption\n   key (CEK) is\
    \ used to encrypt the content.\n   AES can be used with the enveloped-data content\
    \ type using any of the\n   following key management techniques defined in [CMS]\
    \ Section 6.\n   1) Key Transport: The AES CEK is uniquely wrapped for each recipient\n\
    \   using the recipient's public RSA key and other values.  Section 2.2\n   provides\
    \ additional details.\n   2) Key Agreement: The AES CEK is uniquely wrapped for\
    \ each recipient\n   using a pairwise symmetric key-encryption key (KEK) generated\
    \ using\n   an originator's randomly generated private key (ES-DH [DH]) or\n \
    \  previously generated private key (SS-DH [DH]), the recipient's public\n   DH\
    \ key, and other values.  Section 2.3 provides additional details.\n   3) Previously\
    \ Distributed Symmetric KEK:  The AES CEK is wrapped\n   using a previously distributed\
    \ symmetric KEK (such as a Mail List\n   Key).  The methods by which the symmetric\
    \ KEK is generated and\n   distributed are beyond the scope of this document.\
    \  Section 2.4\n   provides additional details.\n   4) Password Encryption:  The\
    \ AES CEK is wrapped using a KEK derived\n   from a password or other shared secret.\
    \  Section 2.5 provides\n   additional details.\n   Documents defining the use\
    \ of the Other Recipient Info structure will\n   need to define the proper use\
    \ for the AES algorithm if desired.\n"
- title: 2.1.  EnvelopedData Fields
  contents:
  - "2.1.  EnvelopedData Fields\n   The enveloped-data content type is ASN.1 encoded\
    \ using the\n   EnvelopedData syntax.  The fields of the EnvelopedData syntax\
    \ MUST be\n   populated as follows:\n   The EnvelopedData version is determined\
    \ based on a number of factors.\n   See [CMS] section 6.1 for the algorithm to\
    \ determine this value.\n   The EnvelopedData recipientInfos CHOICE is dependent\
    \ on the key\n   management technique used.  Section 2.2, 2.3, 2.4 and 2.5 provide\n\
    \   additional information.\n   The EnvelopedData encryptedContentInfo contentEncryptionAlgorithm\n\
    \   field MUST specify a symmetric encryption algorithm.  Implementations\n  \
    \ MUST support content encryption with AES, but implementations MAY\n   support\
    \ other algorithms as well.\n   The EnvelopedData unprotectedAttrs MAY be present.\n"
- title: 2.2.  KeyTransRecipientInfo Fields
  contents:
  - "2.2.  KeyTransRecipientInfo Fields\n   The enveloped-data content type is ASN.1\
    \ encoded using the\n   EnvelopedData syntax.  The fields of the EnvelopedData\
    \ syntax MUST be\n   populated as follows:\n   The KeyTransRecipientInfo version\
    \ MUST be either 0 or 2.  If the\n   RecipientIdentifier is the CHOICE issuerAndSerialNumber,\
    \ then the\n   version MUST be 0.  If the RecipientIdentifier is\n   subjectKeyIdentifier,\
    \ then the version MUST be 2.\n   The KeyTransRecipientInfo RecipientIdentifier\
    \ provides two\n   alternatives for specifying the recipient's certificate, and\
    \ thereby\n   the recipient's public key.  The recipient's certificate MUST contain\n\
    \   a RSA public key.  The CEK is encrypted with the recipient's RSA\n   public\
    \ key.  The issuerAndSerialNumber alternative identifies the\n   recipient's certificate\
    \ by the issuer's distinguished name and the\n   certificate serial number; the\
    \ subjectKeyIdentifier identifies the\n   recipient's certificate by the X.509\
    \ subjectKeyIdentifier extension\n   value.\n   The KeyTransRecipientInfo keyEncryptionAlgorithm\
    \ field specifies the\n   key transport algorithm (i.e., RSAES-OAEP [RSA-OAEP]),\
    \ and the\n   associated parameters used to encrypt the CEK for the recipient.\n\
    \   The KeyTransRecipientInfo encryptedKey is the result of encrypting\n   the\
    \ CEK with the recipient's RSA public key.\n"
- title: 2.3.  KeyAgreeRecipientInfo Fields
  contents:
  - "2.3.  KeyAgreeRecipientInfo Fields\n   This section describes the conventions\
    \ for using ES-DH or SS-DH and\n   AES with the CMS enveloped-data content type\
    \ to support key\n   agreement.  When key agreement is used, then the RecipientInfo\n\
    \   keyAgreeRecipientInfo CHOICE MUST be used.\n   The KeyAgreeRecipient version\
    \ MUST be 3.\n   The EnvelopedData originatorInfo field MUST be the originatorKey\n\
    \   alternative.  The originatorKey algorithm fields MUST contain the\n   dh-public-number\
    \ object identifier with absent parameters.  The\n   originatorKey publicKey MUST\
    \ contain the originator's ephemeral\n   public key.\n   The EnvelopedData ukm\
    \ MAY be present.\n   The EnvelopedData keyEncrytionAlgorithm MUST be the id-alg-ESDH\n\
    \   algorithm identifier [CMSALG].\n"
- title: 2.3.1.  ES-DH/AES Key Derivation
  contents:
  - "2.3.1.  ES-DH/AES Key Derivation\n   Generation of the AES KEK to be used with\
    \ the AES-key wrap algorithm\n   is done using the method described in [DH].\n"
- title: 2.3.1.1.  Example 1
  contents:
  - "2.3.1.1.  Example 1\n   ZZ is the 20 bytes 00 01 02 03 04 05 06 07 08 09\n  \
    \                    0a 0b 0c 0d 0e 0f 10 11 12 13\n   The key wrap algorithm\
    \ is AES-128 wrap, so we need 128 bits (16\n   bytes) of keying material.\n  \
    \ No partyAInfo is used.\n   Consequently, the input to SHA-1 is:\n   00 01 02\
    \ 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 ; ZZ\n   30 1b\n      30\
    \ 11\n         06 09 60 86 48 01 65 03 04 01 05           ; AES-128 wrap OID\n\
    \         04 04\n            00 00 00 01                             ; Counter\n\
    \      a2 06\n         04 04\n         00 00 00 80                           \
    \     ; key length\n   And the output is the 32 bytes:\n   d6 d6 b0 94 c1 02 7a\
    \ 7d e6 e3 11 72 94 a3 53 64 49 08 50 f9\n   Consequently,\n   K= d6 d6 b0 94\
    \ c1 02 7a 7d e6 e3 11 72 94 a3 53 64\n"
- title: 2.3.1.2.  Example 2
  contents:
  - "2.3.1.2.  Example 2\n   ZZ is the 20 bytes 00 01 02 03 04 05 06 07 08 09\n  \
    \                    0a 0b 0c 0d 0e 0f 10 11 12 13\n   The key wrap algorithm\
    \ is AES-256 key wrap, so we need 256 bits (32\n   bytes) of keying material.\n\
    \   The partyAInfo used is the 64 bytes\n   01 23 45 67 89 ab cd ef fe dc ba 98\
    \ 76 54 32 01\n   01 23 45 67 89 ab cd ef fe dc ba 98 76 54 32 01\n   01 23 45\
    \ 67 89 ab cd ef fe dc ba 98 76 54 32 01\n   01 23 45 67 89 ab cd ef fe dc ba\
    \ 98 76 54 32 01\n   Consequently, the input to first invocation of SHA-1 is:\n\
    \   00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 ; ZZ\n   30 5f\n\
    \      30 11\n         06 09 60 86 48 01 65 03 04 01 2d            ; AES-256 wrap\
    \ OID\n         04 04\n            00 00 00 01                              ;\
    \ Counter\n      a0 42\n         04 40\n            01 23 45 67 89 ab cd ef fe\
    \ dc ba 98 76 54 32 01 ; partyAInfo\n            01 23 45 67 89 ab cd ef fe dc\
    \ ba 98 76 54 32 01\n            01 23 45 67 89 ab cd ef fe dc ba 98 76 54 32\
    \ 01\n            01 23 45 67 89 ab cd ef fe dc ba 98 76 54 32 01\n      a2 06\n\
    \         04 04\n            00 00 01 00                              ; key length\n\
    \   And the output is the 20 bytes:\n   88 90 58 5C 4E 28 1A 5C 11 67 CA A5 30\
    \ BE D5 9B 32 30 D8 93\n   The input to second invocation of SHA-1 is:\n   00\
    \ 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 ; ZZ\n   30 5f\n  \
    \    30 11\n         06 09 60 86 48 01 65 03 04 01 2d            ; AES-256 wrap\
    \ OID\n         04 04\n            00 00 00 02                              ;\
    \ Counter\n      a0 42\n         04 40\n            01 23 45 67 89 ab cd ef fe\
    \ dc ba 98 76 54 32 01 ; partyAInfo\n            01 23 45 67 89 ab cd ef fe dc\
    \ ba 98 76 54 32 01\n            01 23 45 67 89 ab cd ef fe dc ba 98 76 54 32\
    \ 01\n            01 23 45 67 89 ab cd ef fe dc ba 98 76 54 32 01\n      a2 06\n\
    \         04 04\n            00 00 01 00                              ; key length\n\
    \   And the output is the 20 bytes:\n   CB A8 F9 22 BD 1B 56 A0 71 C9 6F 90 36\
    \ C6 04 2C AA 20 94 37\n   Consequently,\n   K = 88 90 58 5C 4E 28 1A 5C 11 67\
    \ CA A5 30 BE D5 9B\n       32 30 D8 93 CB A8 F9 22 BD 1B 56 A0\n"
- title: 2.3.2.  AES CEK Wrap Process
  contents:
  - "2.3.2.  AES CEK Wrap Process\n   The AES key wrap algorithm encrypts one AES\
    \ key in another AES key.\n   The algorithm produces an output 64-bits longer\
    \ than the input AES\n   CEK, the additional bits are a checksum.  The algorithm\
    \ uses 6*n AES\n   encryption/decryption operations where n is number of 64-bit\
    \ blocks\n   in the AES CEK.  Full details of the AES key wrap algorithm are\n\
    \   available at [AES-WRAP].\n   NIST has assigned the following OIDs to define\
    \ the AES key wrap\n   algorithm.\n        id-aes128-wrap OBJECT IDENTIFIER ::=\
    \ { aes 5 }\n        id-aes192-wrap OBJECT IDENTIFIER ::= { aes 25 }\n       \
    \ id-aes256-wrap OBJECT IDENTIFIER ::= { aes 45 }\n   In all cases the parameters\
    \ field MUST be absent.  The OID gives the\n   KEK key size, but does not make\
    \ any statements as to the size of the\n   wrapped AES CEK.  Implementations MAY\
    \ use different KEK and CEK\n   sizes.  Implements MUST support the CEK and the\
    \ KEK having the same\n   length.  If different lengths are supported, the KEK\
    \ MUST be of equal\n   or greater length than the CEK.\n"
- title: 2.4.  KEKRecipientInfo Fields
  contents:
  - "2.4.  KEKRecipientInfo Fields\n   This section describes the conventions for\
    \ using AES with the CMS\n   enveloped-data content type to support previously\
    \ distributed\n   symmetric KEKs.  When a previously distributed symmetric KEK\
    \ is used\n   to wrap the AES CEK, then the RecipientInfo KEKRecipientInfo CHOICE\n\
    \   MUST be used.  The methods used to generate and distribute the\n   symmetric\
    \ KEK are beyond the scope of this document.  One possible\n   method of distributing\
    \ keys is documented in [SYMKEYDIST].\n   The KEKRecipientInfo fields MUST be\
    \ populated as specified in [CMS]\n   Section 6.2.3, KEKRecipientInfo Type.\n\
    \   The KEKRecipientInfo keyEncryptionAlgorithm algorithm field MUST be\n   one\
    \ of the OIDs defined in section 2.3.2 indicating that the AES wrap\n   function\
    \ is used to wrap the AES CEK.  The KEKRecipientInfo\n   keyEncryptionAlgorithm\
    \ parameters field MUST be absent.\n   The KEKRecipientInfo encryptedKey field\
    \ MUST include the AES CEK\n   wrapped using the previously distributed symmetric\
    \ KEK as input to\n   the AES wrap function.\n"
- title: 2.5.  PasswordRecipientInfo Fields
  contents:
  - "2.5.  PasswordRecipientInfo Fields\n   This section describes the conventions\
    \ for using AES with the CMS\n   enveloped-data content type to support password-based\
    \ key management.\n   When a password derived KEK is used to wrap the AES CEK,\
    \ then the\n   RecipientInfo PasswordRecipientInfo CHOICE MUST be used.\n   The\
    \ keyEncryptionAlgorithm algorithm field MUST be one of the OIDs\n   defined in\
    \ section 2.3.2 indicating the AES wrap function is used to\n   wrap the AES CEK.\
    \  The keyEncryptionAlgorithm parameters field MUST\n   be absent.\n   The encryptedKey\
    \ field MUST be the result of the AES key wrap\n   algorithm applied to the AES\
    \ CEK value.\n"
- title: 3.  Encrypted-data Conventions
  contents:
  - "3.  Encrypted-data Conventions\n   The CMS encrypted-data content type consists\
    \ of encrypted content\n   with implicit key management.  The AES algorithm is\
    \ used to encrypt\n   the content.\n   Compliant software MUST meet the requirements\
    \ for constructing an\n   enveloped-data content type stated in [CMS] Section\
    \ 8,\n   \"Encrypted-data Content Type\".\n   The encrypted-data content type\
    \ is ASN.1 encoded using the\n   EncryptededData syntax.  The fields of the EncryptedData\
    \ syntax MUST\n   be populated as follows:\n   The EncryptedData version is determined\
    \ based on a number of factors.\n   See [CMS] section 9.1 for the algorithm to\
    \ determine this value.\n   The EncryptedData encryptedContentInfo contentEncryptionAlgorithm\n\
    \   field MUST specify a symmetric encryption algorithm.  Implementations\n  \
    \ MUST support encryption using AES, but implementations MAY support\n   other\
    \ algorithms as well.\n   The EncryptedData unprotectedAttrs MAY be present.\n"
- title: 4.  Algorithm Identifiers and Parameters
  contents:
  - "4.  Algorithm Identifiers and Parameters\n   This section specified algorithm\
    \ identifiers for the AES encryption\n   algorithm.\n"
- title: 4.1.  AES Algorithm Identifiers and Parameters
  contents:
  - "4.1.  AES Algorithm Identifiers and Parameters\n   The AES algorithm is defined\
    \ in [AES].  RSAES-OAEP [RSA-OAEP] MAY be\n   used to transport AES keys.\n  \
    \ AES is added to the set of symmetric content encryption algorithms\n   defined\
    \ in [CMSALG].  The AES content-encryption algorithm, in Cipher\n   Block Chaining\
    \ (CBC) mode, for the three different key sizes are\n   identified by the following\
    \ object identifiers:\n       id-aes128-CBC OBJECT IDENTIFIER ::= { aes 2 }\n\
    \       id-aes192-CBC OBJECT IDENTIFIER ::= { aes 22 }\n       id-aes256-CBC OBJECT\
    \ IDENTIFIER ::= { aes 42 }\n   The AlgorithmIdentifier parameters field MUST\
    \ be present, and the\n   parameters field MUST contain a AES-IV:\n       AES-IV\
    \ ::= OCTET STRING (SIZE(16))\n   Content encryption algorithm identifiers are\
    \ located in the\n   EnvelopedData EncryptedContentInfo contentEncryptionAlgorithm\
    \ and the\n   EncryptedData EncryptedContentInfo contentEncryptionAlgorithm fields.\n\
    \   Content encryption algorithms are used to encrypt the content located\n  \
    \ in the EnvelopedData EncryptedContentInfo encryptedContent and the\n   EncryptedData\
    \ EncryptedContentInfo encryptedContent fields.\n"
- title: 5.  SMIMECapabilities Attribute Conventions
  contents:
  - "5.  SMIMECapabilities Attribute Conventions\n   An S/MIME client SHOULD announce\
    \ the set of cryptographic functions\n   it supports by using the S/MIME capabilities\
    \ attribute.  This\n   attribute provides a partial list of object identifiers\
    \ of\n   cryptographic functions and MUST be signed by the client.  The\n   algorithm\
    \ OIDs SHOULD be logically separated in functional categories\n   and MUST be\
    \ ordered with respect to their preference.\n   RFC 2633 [MSG], Section 2.5.2\
    \ defines the SMIMECapabilities signed\n   attribute (defined as a SEQUENCE of\
    \ SMIMECapability SEQUENCEs) to be\n   used to specify a partial list of algorithms\
    \ that the software\n   announcing the SMIMECapabilities can support.\n"
- title: 5.1.  AES S/MIME Capability Attributes
  contents:
  - "5.1.  AES S/MIME Capability Attributes\n   If an S/MIME client is required to\
    \ support symmetric encryption with\n   AES, the capabilities attribute MUST contain\
    \ the AES object\n   identifier specified above in the category of symmetric algorithms.\n\
    \   The parameter with this encoding MUST be absent.\n   The encodings for the\
    \ mandatory key sizes are:\n         Key Size                   Capability\n \
    \         128          30 0B 06 09 60 86 48 01 65 03 04 01 02\n          196 \
    \         30 0B 06 09 60 86 48 01 65 03 04 01 16\n          256          30 0B\
    \ 06 09 60 86 48 01 65 03 04 01 2A\n   When a sending agent creates an encrypted\
    \ message, it has to decide\n   which type of encryption algorithm to use.  In\
    \ general the decision\n   process involves information obtained from the capabilities\
    \ lists\n   included in messages received from the recipient, as well as other\n\
    \   information such as private agreements, user preferences, legal\n   restrictions,\
    \ and so on.  If users require AES for symmetric\n   encryption, the S/MIME clients\
    \ on both the sending and receiving side\n   MUST support it, and it MUST be set\
    \ in the user preferences.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   If RSA-OAEP [PKCS#1v2.0] and RSA PKCS #1 v1.5\
    \ [PKCS#1v1.5] are both\n   used to transport the same CEK, then an attacker can\
    \ still use the\n   Bleichenbacher attack against the RSA PKCS #1 v1.5 encrypted\
    \ key.  It\n   is generally unadvisable to mix both RSA-OAEP and RSA PKCS#1 v1.5\
    \ in\n   the same set of recipients.\n   Implementations must protect the RSA\
    \ private key and the CEK.\n   Compromise of the RSA private key may result in\
    \ the disclosure of all\n   messages protected with that key.  Compromise of the\
    \ CEK may result\n   in disclosure of the associated encrypted content.\n   The\
    \ generation of AES CEKs relies on random numbers.  The use of\n   inadequate\
    \ pseudo-random number generators (PRNGs) to generate these\n   values can result\
    \ in little or no security.  An attacker may find it\n   much easier to reproduce\
    \ the PRNG environment that produced the keys,\n   searching the resulting small\
    \ set of possibilities, rather than brute\n   force searching the whole key space.\
    \  The generation of quality\n   random numbers is difficult.  RFC 1750 [RANDOM]\
    \ offers important\n   guidance in this area.\n   When wrapping a CEK with a KEK,\
    \ the KEK MUST always be at least the\n   same length as the CEK.  An attacker\
    \ will generally work at the\n   weakest point in an encryption system.  This\
    \ would be the smaller of\n   the two key sizes for a brute force attack.\n"
- title: Normative References
  contents:
  - "Normative References\n   [AES]         National Institute of Standards.  FIPS\
    \ Pub 197:\n                 Advanced Encryption Standard (AES).  26 November\
    \ 2001.\n   [CMS]         Housley, R., \"Cryptographic Message Syntax (CMS)\"\
    , RFC\n                 3369, August 2002.\n   [AES-WRAP]    Schaad, J. and R.\
    \ Housley, \"Advanced Encryption\n                 Standard (AES) Key Wrap Algorithm\"\
    , RFC 3394, September\n                 2002.\n   [CMSALG]      Housley, R., \"\
    Cryptographic Message Syntax (CMS)\n                 Algorithms, RFC 3370, August\
    \ 2002.\n   [DES]         National Institute of Standards and Technology. FIPS\n\
    \                 Pub 46: Data Encryption Standard.  15 January 1977.\n   [DH]\
    \          Rescorla, E., \"Diffie-Hellman Key Agreement Method\",\n          \
    \       RFC 2631, June 1999.\n   [MUSTSHOULD]  Bradner, S., \"Key Words for Use\
    \ in RFCs to Indicate\n                 Requirement Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   [RSA-OAEP]    Housley, R. \"Use of the RSAES-OAEP Key Transport\n\
    \                 Algorithm in the Cryptographic Message Syntax (CMS)\",\n   \
    \              RFC 3560, July 2003.\n   [X.208-88]    CCITT.  Recommendation X.208:\
    \ Specification of Abstract\n                 Syntax Notation One (ASN.1).  1988.\n\
    \   [X.209-88]    CCITT.  Recommendation X.209: Specification of Basic\n     \
    \            Encoding Rules for Abstract Syntax Notation One\n               \
    \  (ASN.1). 1988.\n   [X.509-88]    CCITT.  Recommendation X.509: The Directory\
    \ -\n                 Authentication Framework.  1988.\n"
- title: Informational References
  contents:
  - "Informational References\n   [MSG]         Ramsdell, B., Editor, \"S/MIME Version\
    \ 3 Message\n                 Specification\", RFC 2633, June 1999.\n   [PKCS#1v1.5]\
    \  Kaliski, B., \"PKCS #1: RSA Encryption, Version 1.5\",\n                 RFC\
    \ 2313, March 1998.\n   [PKCS#1v2.0]  Kaliski, B., \"PKCS #1: RSA Encryption,\
    \ Version 2.0\",\n                 RFC 2437, October 1998.\n   [RANDOM]      Eastlake,\
    \ D., Crocker, S. and J. Schiller, \"Randomness\n                 Recommendations\
    \ for Security\", RFC 1750, December 1994.\n   [SYMKEYDIST]  Turner, S., \"CMS\
    \ Symmetric Key Management and\n                 Distribution\", Work in Progress,\
    \ January 2003.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   This document is the result of contributions from many professionals.\n\
    \   We appreciate the hard work of all members of the IETF S/MIME Working\n  \
    \ Group.\n"
- title: Appendix A  ASN.1 Module
  contents:
  - 'Appendix A  ASN.1 Module

    '
- title: CMSAesRsaesOaep {iso(1) member-body(2) us(840) rsadsi(113549)
  contents:
  - "CMSAesRsaesOaep {iso(1) member-body(2) us(840) rsadsi(113549)\n      pkcs(1)\
    \ pkcs-9(9) smime(16) modules(0) id-mod-cms-aes(19) }\n"
- title: DEFINITIONS IMPLICIT TAGS ::=
  contents:
  - 'DEFINITIONS IMPLICIT TAGS ::=

    '
- title: BEGIN
  contents:
  - 'BEGIN

    '
- title: -- EXPORTS ALL --
  contents:
  - '-- EXPORTS ALL --

    '
- title: IMPORTS
  contents:
  - "IMPORTS\n    -- PKIX\n      AlgorithmIdentifier\n          FROM PKIXExplicit88\
    \ {iso(1) identified-organization(3) dod(6)\n              internet(1) security(5)\
    \ mechanisms(5) pkix(7) id-mod(0)\n              id-pkix1-explicit(18)};\n"
- title: -- AES information object identifiers --
  contents:
  - '-- AES information object identifiers --

    '
- title: aes OBJECT IDENTIFIER ::= { joint-iso-itu-t(2) country(16) us(840)
  contents:
  - "aes OBJECT IDENTIFIER ::= { joint-iso-itu-t(2) country(16) us(840)\n        \
    \       organization(1) gov(101) csor(3)_ nistAlgorithms(4)  1 }\n"
- title: -- AES using CBC-chaining mode for key sizes of 128, 192, 256
  contents:
  - '-- AES using CBC-chaining mode for key sizes of 128, 192, 256

    '
- title: id-aes128-CBC OBJECT IDENTIFIER ::= { aes 2 }
  contents:
  - 'id-aes128-CBC OBJECT IDENTIFIER ::= { aes 2 }

    '
- title: id-aes192-CBC OBJECT IDENTIFIER ::= { aes 22 }
  contents:
  - 'id-aes192-CBC OBJECT IDENTIFIER ::= { aes 22 }

    '
- title: id-aes256-CBC OBJECT IDENTIFIER ::= { aes 42 }
  contents:
  - 'id-aes256-CBC OBJECT IDENTIFIER ::= { aes 42 }

    '
- title: -- AES-IV is a the parameter for all the above object identifiers.
  contents:
  - '-- AES-IV is a the parameter for all the above object identifiers.

    '
- title: AES-IV ::= OCTET STRING (SIZE(16))
  contents:
  - 'AES-IV ::= OCTET STRING (SIZE(16))

    '
- title: -- AES Key Wrap Algorithm Identifiers  - Parameter is absent
  contents:
  - '-- AES Key Wrap Algorithm Identifiers  - Parameter is absent

    '
- title: id-aes128-wrap OBJECT IDENTIFIER ::= { aes 5 }
  contents:
  - 'id-aes128-wrap OBJECT IDENTIFIER ::= { aes 5 }

    '
- title: id-aes192-wrap OBJECT IDENTIFIER ::= { aes 25 }
  contents:
  - 'id-aes192-wrap OBJECT IDENTIFIER ::= { aes 25 }

    '
- title: id-aes256-wrap OBJECT IDENTIFIER ::= { aes 45 }
  contents:
  - 'id-aes256-wrap OBJECT IDENTIFIER ::= { aes 45 }

    '
- title: END
  contents:
  - 'END

    '
- title: Author's Address
  contents:
  - "Author's Address\n   Jim Schaad\n   Soaring Hawk Consulting\n   EMail: jimsch@exmsft.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2003).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assignees.\n\
    \   This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
