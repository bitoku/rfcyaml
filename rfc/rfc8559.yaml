- title: __initial_text__
  contents:
  - "                 Dynamic Authorization Proxying in the\n      Remote Authentication\
    \ Dial-In User Service (RADIUS) Protocol\n"
- title: Abstract
  contents:
  - "Abstract\n   RFC 5176 defines Change-of-Authorization (CoA) and Disconnect Message\n\
    \   (DM) behavior for RADIUS.  RFC 5176 also suggests that proxying these\n  \
    \ messages is possible, but it does not provide guidance as to how that\n   is\
    \ done.  This specification updates RFC 5176 to correct that\n   omission for\
    \ scenarios where networks use realm-based proxying as\n   defined in RFC 7542.\
    \  This specification also updates RFC 5580 to\n   allow the Operator-Name attribute\
    \ in CoA-Request and Disconnect-\n   Request packets.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8559.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Terminology ................................................4\n  \
    \    1.2. Requirements Language ......................................5\n   2.\
    \ Problem Statement ...............................................5\n      2.1.\
    \ Typical RADIUS Proxying ....................................5\n      2.2. CoA\
    \ Processing .............................................6\n      2.3. Failure\
    \ of CoA Proxying ....................................6\n   3. How to Perform\
    \ CoA Proxying .....................................7\n      3.1. Changes to Access-Request\
    \ and Accounting-Request Packets ...8\n      3.2. Proxying of CoA-Request and\
    \ Disconnect-Request Packets .....9\n      3.3. Reception of CoA-Request and Disconnect-Request\
    \ Packets ...10\n      3.4. Operator-NAS-Identifier ...................................11\n\
    \   4. Requirements ...................................................14\n  \
    \    4.1. Requirements on Home Servers ..............................14\n    \
    \  4.2. Requirements on Visited Networks ..........................14\n      4.3.\
    \ Requirements on Proxies ...................................14\n           4.3.1.\
    \ Security Requirements on Proxies ...................15\n           4.3.2. Filtering\
    \ Requirements on Proxies ..................16\n   5. Functionality ..................................................17\n\
    \      5.1. User Login ................................................17\n  \
    \    5.2. CoA Proxying ..............................................17\n   6.\
    \ Security Considerations ........................................18\n      6.1.\
    \ RADIUS Security and Proxies ...............................18\n      6.2. Security\
    \ of the Operator-NAS-Identifier Attribute .........19\n   7. IANA Considerations\
    \ ............................................20\n   8. References .....................................................20\n\
    \      8.1. Normative References ......................................20\n  \
    \    8.2. Informative References ....................................21\n   Authors'\
    \ Addresses ................................................21\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   RFC 5176 [RFC5176] defines Change-of-Authorization (CoA)\
    \ and\n   Disconnect Message (DM) behavior for RADIUS.  Section 3.1 of\n   [RFC5176]\
    \ suggests that proxying these messages is possible, but it\n   does not provide\
    \ guidance as to how that is done.  This omission\n   means that in practice,\
    \ proxying of CoA packets is impossible.\n   We partially correct that omission\
    \ here by explaining how proxying of\n   these packets can be done by leveraging\
    \ an existing RADIUS attribute,\n   Operator-Name (Section 4.1 of [RFC5580]).\
    \  We then explain how this\n   attribute can be used by proxies to route packets\
    \ \"backwards\" through\n   a RADIUS proxy chain from a home network to a visited\
    \ network.  We\n   then introduce a new attribute: Operator-NAS-Identifier.  This\n\
    \   attribute permits packets to be routed from the RADIUS server at the\n   visited\
    \ network to the Network Access Server (NAS).\n   This correction is limited to\
    \ the use case of realm-based proxying as\n   defined in [RFC7542].  Other forms\
    \ of proxying are possible but are\n   not discussed here.  We note that the recommendations\
    \ provided in\n   this document apply only to those systems that implement proxying\
    \ of\n   CoA packets, and then only to those that implement realm-based CoA\n\
    \   proxying.  This specification neither requires nor suggests changes\n   to\
    \ any implementation or deployment of any other RADIUS systems.\n   We also update\
    \ the behavior described in [RFC5580] to allow the\n   Operator-Name attribute\
    \ to be used in CoA-Request and Disconnect-\n   Request packets, as further described\
    \ in this document.\n   This document is a Standards Track document in order to\
    \ update the\n   behavior described in [RFC5580], as [RFC5580] is also a Standards\n\
    \   Track document.  This document relies heavily upon and also updates\n   some\
    \ of the behaviors described in RFC 5176, which is an\n   Informational document;\
    \ because the applicability statements in\n   Section 1.1 of [RFC5176] do not\
    \ apply to this document, this document\n   does not change the status of [RFC5176].\n\
    \   We finally conclude with a discussion of the security implications of\n  \
    \ this design and show that they do not decrease the security of the\n   network.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   This document frequently uses the following terms:\n  \
    \ CoA\n      Change of authorization, e.g., CoA-Request, CoA-ACK, or CoA-NAK,\n\
    \      as defined in [RFC5176].  [RFC5176] also defines Disconnect-\n      Request,\
    \ Disconnect-ACK, and Disconnect-NAK.  For simplicity,\n      where we use \"\
    CoA\" in this document, we mean a generic\n      \"CoA-Request or Disconnect-Request\"\
    \ packet.  We use \"CoA-Request\"\n      or \"Disconnect-Request\" to refer to\
    \ the specific packet types.\n   Network Access Identifier (NAI)\n      The user\
    \ identity submitted by the client during network access\n      authentication.\
    \  See [RFC7542].  The purpose of the NAI is to\n      identify the user as well\
    \ as assist in the routing of the\n      authentication request.  Please note\
    \ that the NAI may not\n      necessarily be the same as the user's email address\
    \ or the user\n      identity submitted in an application-layer authentication.\n\
    \   Network Access Server (NAS)\n      The device that clients connect to in order\
    \ to get access to the\n      network.  In Point-to-Point Tunneling Protocol (PPTP)\
    \ terminology,\n      this is referred to as the PPTP Access Concentrator (PAC),\
    \ and in\n      Layer 2 Tunneling Protocol (L2TP) terminology, it is referred\
    \ to\n      as the L2TP Access Concentrator (LAC).  In IEEE 802.11, it is\n  \
    \    referred to as an Access Point.\n   Home Network\n      The network that\
    \ holds the authentication credentials for a user.\n   Visited Network\n     \
    \ A network other than the home network, where the user attempts to\n      gain\
    \ network access.  The visited network typically has a\n      relationship with\
    \ the home network, possibly through one or more\n      intermediary proxies.\n"
- title: 1.2.  Requirements Language
  contents:
  - "1.2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n"
- title: 2.  Problem Statement
  contents:
  - "2.  Problem Statement\n   This section describes how RADIUS proxying works, how\
    \ CoA packets\n   work, and why CoA proxying as discussed in [RFC5176] is insufficient\n\
    \   to create a working system.\n"
- title: 2.1.  Typical RADIUS Proxying
  contents:
  - "2.1.  Typical RADIUS Proxying\n   When a RADIUS server proxies an Access-Request\
    \ packet, it typically\n   does so based on the contents of the User-Name attribute,\
    \ which\n   contains an NAI [RFC7542].  This specification describes how to use\n\
    \   the NAI in order to proxy CoA packets across multiple hops.  Other\n   methods\
    \ of proxying CoA packets are possible but are not discussed\n   here.\n   In\
    \ order to determine the \"next hop\" for a packet, the proxying\n   server looks\
    \ up the \"realm\" portion of the NAI in a logical\n   Authentication, Authorization,\
    \ and Accounting (AAA) routing table, as\n   described in Section 3 of [RFC7542].\
    \  The entry in that table\n   contains information about the next hop to which\
    \ the packet is sent.\n   This information can be IP address, shared secret, certificate,\
    \ etc.\n   The next hop may also be another proxy, or it may be the home server\n\
    \   for that realm.\n   If the next hop is a proxy, that proxy will perform the\
    \ same realm\n   lookup and then proxy the packet as above.  At some point, the\n\
    \   next hop will be the home server for that realm.\n   The home server validates\
    \ the NAI in the User-Name attribute against\n   the list of realms hosted by\
    \ the home network.  If there is no match,\n   then an Access-Reject is returned.\
    \  All other packets are processed\n   through local site rules, which result\
    \ in an appropriate response\n   packet being sent.  This response packet can\
    \ be Access-Accept,\n   Access-Challenge, or Access-Reject.\n   The RADIUS client\
    \ receiving that response packet will match it to an\n   outstanding request.\
    \  If the client is part of a proxy, the proxy\n   will then send that response\
    \ packet in turn to the system that\n   originated the Access-Request.  This process\
    \ continues until the\n   response packet arrives at the NAS.\n   The proxies\
    \ are typically stateful with respect to ongoing\n   request/response packets\
    \ but are stateless with respect to user\n   sessions.  That is, once a response\
    \ has been sent by the proxy, it\n   can discard all information about the request\
    \ packet, other than what\n   is needed for detecting retransmissions as per Section\
    \ 2.2.2 of\n   [RFC5080].\n   The same method is used to proxy Accounting-Request\
    \ packets.\n   Proxying both Access-Request and Accounting-Request packets allows\n\
    \   proxies to connect visited networks to home networks for all AAA\n   purposes.\n"
- title: 2.2.  CoA Processing
  contents:
  - "2.2.  CoA Processing\n   [RFC5176] describes how CoA clients send packets to\
    \ CoA servers.  We\n   note that a system comprising the CoA client is typically\
    \ co-located\n   with, or is the same as, the RADIUS server.  Similarly, the CoA\n\
    \   server is a system that is either co-located with or the same as the\n   RADIUS\
    \ client.\n   In the case of packets sent inside of one network, the source and\n\
    \   destination of CoA packets are locally determined.  There is thus no\n   need\
    \ for standardization of that process, as networks are free to\n   send CoA packets\
    \ whenever they want, for whatever reason they want.\n"
- title: 2.3.  Failure of CoA Proxying
  contents:
  - "2.3.  Failure of CoA Proxying\n   The situation is more complicated when proxies\
    \ are involved.\n   [RFC5176] suggests that CoA proxying is permitted, but [RFC5176]\
    \ does\n   not make any suggestions as to how that proxying should be done.\n\
    \   If proxies were to track user sessions, it would be possible for a\n   proxy\
    \ to match an incoming CoA packet to a user session and then to\n   proxy the\
    \ CoA packet to the RADIUS client that originated the\n   Access-Request for that\
    \ session.  There are many problems with such a\n   scenario.\n   The CoA server\
    \ might not, in fact, be co-located with the RADIUS\n   client, in which case\
    \ it might not have access to user session\n   information for performing the\
    \ reverse path forwarding.\n   The CoA server may be down, but there may be a\
    \ different CoA server\n   that could successfully process the packet.  The CoA\
    \ client should\n   then fail over to a different CoA server.  If the reverse\
    \ path is\n   restricted to be the same as the forward path, then such failover\
    \ is\n   not possible.\n   In a roaming consortium, the proxies may forward traffic\
    \ for tens of\n   millions of users.  Tracking each user session can be expensive\
    \ and\n   complicated, and doing so does not scale well.  For that reason, most\n\
    \   proxies do not record user sessions.\n   Even if the proxy recorded user sessions,\
    \ [RFC5176] is silent on the\n   topic of what attributes constitute \"session\
    \ identification\n   attributes\".  That silence means it is impossible for a\
    \ proxy to\n   determine if a CoA packet matches a particular user session.\n\
    \   The result of all of these issues is that CoA proxying is impossible\n   when\
    \ using the behavior defined in [RFC5176].\n"
- title: 3.  How to Perform CoA Proxying
  contents:
  - "3.  How to Perform CoA Proxying\n   The solution to the above problem is to use\
    \ realm-based proxying on\n   the reverse path, just as with the forward path.\
    \  In order for the\n   reverse path proxying to work, the proxy decision must\
    \ be based on an\n   attribute other than User-Name.\n   The reverse path proxying\
    \ can be done by using the Operator-Name\n   attribute defined in Section 4.1\
    \ of [RFC5580].  We repeat a portion\n   of that definition here for clarity:\n\
    \      This attribute carries the operator namespace identifier and the\n    \
    \  operator name.  The operator name is combined with the namespace\n      identifier\
    \ to uniquely identify the owner of an access network.\n   ...followed a few paragraphs\
    \ later by a description of the REALM\n   namespace:\n      REALM ('1' (0x31)):\n\
    \         The REALM operator namespace can be used to indicate operator\n    \
    \     names based on any registered domain name.  Such names are\n         required\
    \ to be unique, and the rights to use a given realm name\n         are obtained\
    \ coincident with acquiring the rights to use a\n         particular Fully Qualified\
    \ Domain Name (FQDN). ...\n   In short, the Operator-Name attribute contains an\
    \ ASCII \"1\", followed\n   by the realm of the visited network.  For example,\
    \ for the\n   \"example.com\" realm, the Operator-Name attribute contains the\
    \ text\n   \"1example.com\".  This information is precisely what is needed by\n\
    \   intermediate nodes in order to perform CoA proxying.\n   The remainder of\
    \ this document describes how CoA proxying can be\n   performed by using the Operator-Name\
    \ attribute.  We describe the\n   following:\n   o  how the forward path has to\
    \ change in order to allow reverse path\n      proxying\n   o  how reverse path\
    \ proxying works\n   o  how visited networks and home networks have to behave\
    \ in order for\n      CoA proxying to work\n   We note that as a proxied CoA packet\
    \ is sent to only one destination,\n   the Operator-Name attribute MUST NOT occur\
    \ more than once in a\n   packet.  If a packet contains more than one Operator-Name,\n\
    \   implementations MUST treat the second and subsequent attributes as\n   \"\
    invalid attributes\", as discussed in Section 2.8 of [RFC6929].\n"
- title: 3.1.  Changes to Access-Request and Accounting-Request Packets
  contents:
  - "3.1.  Changes to Access-Request and Accounting-Request Packets\n   When a visited\
    \ network proxies an Access-Request or Accounting-\n   Request packet outside\
    \ of its network, a visited network that wishes\n   to support realm-based CoA\
    \ proxying SHOULD include an Operator-Name\n   attribute in the packet, as discussed\
    \ in Section 4.1 of [RFC5580].\n   The contents of the Operator-Name attribute\
    \ should be \"1\", followed\n   by the realm name of the visited network.  Where\
    \ the visited network\n   has more than one realm name, a \"canonical\" name SHOULD\
    \ be chosen and\n   used for all packets.\n   Visited networks MUST use a consistent\
    \ value for Operator-Name for\n   any one user session.  That is, sending \"1example.com\"\
    \ in an\n   Access-Request packet and \"1example.org\" in an Accounting-Request\n\
    \   packet for that same session is forbidden.  Such behavior would make\n   it\
    \ look like a single user session was active simultaneously in two\n   different\
    \ visited networks, which is impossible.\n   Proxies that record user session\
    \ information SHOULD also record\n   Operator-Name.  Proxies that do not record\
    \ user session information\n   do not need to record Operator-Name.\n   Home networks\
    \ SHOULD record Operator-Name along with any other\n   information that they record\
    \ about user sessions.  Home networks that\n   expect to send CoA packets to visited\
    \ networks MUST record\n   Operator-Name for each user session that originates\
    \ from a visited\n   network.  Failure to record Operator-Name would mean that\
    \ the home\n   network would not know where to send any CoA packets.\n   Networks\
    \ that host both the RADIUS client and RADIUS server do not\n   need to create,\
    \ record, or track Operator-Name.  That is, if the\n   visited network and home\
    \ network are the same, there is no need to\n   use the Operator-Name attribute.\n"
- title: 3.2.  Proxying of CoA-Request and Disconnect-Request Packets
  contents:
  - "3.2.  Proxying of CoA-Request and Disconnect-Request Packets\n   When a home\
    \ network wishes to send a CoA-Request or Disconnect-\n   Request packet to a\
    \ visited network, it MUST include an Operator-Name\n   attribute in the CoA packet.\
    \  The value of the Operator-Name\n   attribute MUST be the value that was recorded\
    \ earlier for that user\n   session.\n   The home network MUST look up the realm\
    \ from the Operator-Name\n   attribute in a logical \"realm routing table\", as\
    \ discussed in\n   Section 3 of [RFC7542].  That logical realm table is defined\n\
    \   therein as:\n      ... a logical AAA routing table, where the \"utf8-realm\"\
    \ portion\n      acts as a key, and the values stored in the table are one or\
    \ more\n      \"next hop\" AAA servers.\n   In order to support proxying of CoA\
    \ packets, this table is extended\n   to include a mapping between \"utf8-realm\"\
    \ and one or more next-hop\n   CoA servers.\n   When proxying CoA-Request and\
    \ Disconnect-Request packets, the lookups\n   will return data from the \"CoA\
    \ server\" field instead of the \"AAA\n   server\" field.\n   In practice, this\
    \ process means that CoA proxying works exactly like\n   \"normal\" RADIUS proxying,\
    \ except that the proxy decision is made\n   using the realm from the Operator-Name\
    \ attribute instead of using the\n   realm from the User-Name attribute.\n   Proxies\
    \ that receive the CoA packet will look up the realm from the\n   Operator-Name\
    \ attribute in a logical \"realm routing table\", as with\n   home servers, above.\
    \  The packet is then sent to the proxy for the\n   realm that was found in that\
    \ table.  This process continues with any\n   subsequent proxies until the packet\
    \ reaches a public CoA server at\n   the visited network.\n   Where the realm\
    \ is unknown, the proxy MUST return a NAK packet that\n   contains an Error-Cause\
    \ Attribute having value 502 (\"Request Not\n   Routable\").\n   Proxies that\
    \ receive a CoA packet MUST NOT use the NAI from the\n   User-Name attribute in\
    \ order to make proxying decisions.  Doing so\n   would result in the CoA packet\
    \ being forwarded to the home network,\n   while the user's session is in the\
    \ visited network.\n   We also update Section 5 of [RFC5580] to permit CoA-Request\
    \ and\n   Disconnect-Request packets to contain zero or one instance of the\n\
    \   Operator-Name attribute.\n"
- title: 3.3.  Reception of CoA-Request and Disconnect-Request Packets
  contents:
  - "3.3.  Reception of CoA-Request and Disconnect-Request Packets\n   After some\
    \ proxying, the CoA packet will be received by the CoA\n   server in the visited\
    \ network.  That CoA server MUST validate the NAI\n   in the Operator-Name attribute\
    \ against the list of realms hosted by\n   the visited network.  If the realm\
    \ is not found, then the CoA server\n   MUST return a NAK packet that contains\
    \ an Error-Cause Attribute\n   having value 502 (\"Request Not Routable\").\n\
    \   Some home networks will not have permission to send CoA packets to\n   the\
    \ visited network.  The CoA server SHOULD therefore also validate\n   the NAI\
    \ contained in the User-Name attribute.  If the home network is\n   not permitted\
    \ to send CoA packets to this visited network, then the\n   CoA server MUST return\
    \ a NAK packet that contains an Error-Cause\n   Attribute having value 502 (\"\
    Request Not Routable\").\n   These checks make it more difficult for a malicious\
    \ home network to\n   scan roaming networks in order to determine which visited\
    \ network\n   hosts which realm.  That information should be known to all parties\n\
    \   in advance and exchanged via methods outside the scope of this\n   specification.\
    \  Those methods will typically be in the form of\n   contractual relationships\
    \ between parties or membership in a roaming\n   consortium.\n   The CoA server\
    \ in the visited network will also ensure that the\n   Operator-NAS-Identifier\
    \ attribute is known, as described below.  If\n   the attribute matches a known\
    \ NAS, then the packet will be sent to\n   that NAS.  Otherwise, the CoA server\
    \ MUST return a NAK packet that\n   contains an Error-Cause Attribute having value\
    \ 403 (\"NAS\n   Identification Mismatch\").\n   All other received packets are\
    \ processed as per local site rules and\n   will result in an appropriate response\
    \ packet being sent.  This\n   process mirrors the method used to process Access-Request\
    \ and\n   Accounting-Request packets (described above).\n   Processing done by\
    \ the visited network will normally include sending\n   the CoA packet to the\
    \ NAS, having the NAS process it, and then\n   returning any response packets\
    \ back up the proxy chain to the home\n   server.\n   The only missing piece here\
    \ is the procedure by which the visited\n   network gets the packet from its public\
    \ CoA server to the NAS.  The\n   visited network could use NAS-Identifier, NAS-IP-Address,\
    \ or\n   NAS-IPv6-Address, but these attributes may have been edited by an\n \
    \  intermediate proxy or the attributes may be missing entirely.\n   These attributes\
    \ may be incorrect because proxies forwarding\n   Access-Request packets often\
    \ rewrite them for internal policy\n   reasons.  These attributes may be missing,\
    \ because the visited\n   network may not want all upstream proxies and home servers\
    \ to have\n   detailed information about the internals of its private network\
    \ and\n   may remove them itself.\n   We therefore need a way to identify a NAS\
    \ in the visited network via\n   a method that affords privacy and does not use\
    \ any existing\n   attributes.  Our solution is to define an Operator-NAS-Identifier\n\
    \   attribute, which identifies an individual NAS in the visited network.\n"
- title: 3.4.  Operator-NAS-Identifier
  contents:
  - "3.4.  Operator-NAS-Identifier\n   The Operator-NAS-Identifier attribute is an\
    \ opaque token that\n   identifies an individual NAS in a visited network.  It\
    \ MAY appear in\n   the following packets: Access-Request, Accounting-Request,\n\
    \   CoA-Request, or Disconnect-Request.  Operator-NAS-Identifier MUST NOT\n  \
    \ appear in any other packets.\n   Operator-NAS-Identifier MAY occur in a packet\
    \ if the packet also\n   contains an Operator-Name attribute.  Operator-NAS-Identifier\n\
    \   MUST NOT appear in a packet if there is no Operator-Name in the\n   packet.\
    \  As each proxied CoA packet is sent to only one NAS, the\n   Operator-NAS-Identifier\
    \ attribute MUST NOT occur more than once in a\n   packet.  If a packet contains\
    \ more than one Operator-NAS-Identifier,\n   implementations MUST treat the second\
    \ and subsequent attributes as\n   \"invalid attributes\", as discussed in Section\
    \ 2.8 of [RFC6929].\n   An Operator-NAS-Identifier attribute SHOULD be added to\
    \ an\n   Access-Request or Accounting-Request packet by a visited network,\n \
    \  before proxying a packet to an external RADIUS server.  When the\n   Operator-NAS-Identifier\
    \ attribute is added to a packet, the following\n   attributes SHOULD be deleted\
    \ from the packet: NAS-IP-Address,\n   NAS-IPv6-Address, and NAS-Identifier. \
    \ If these attributes are\n   deleted, the proxy MUST then add a new NAS-Identifier\
    \ attribute,\n   in order to satisfy the requirements of Section 4.1 of [RFC2865]\
    \ and\n   Section 4.1 of [RFC2866].  The contents of the new NAS-Identifier\n\
    \   attribute SHOULD be the realm name of the visited network.\n   When a server\
    \ receives a packet that already contains an Operator-\n   NAS-Identifier attribute,\
    \ no such editing is performed.\n   The Operator-NAS-Identifier attribute MUST\
    \ NOT be added to any packet\n   by any other proxy or server in the network.\
    \  Only the visited\n   network (i.e., the operator) can name a NAS that is inside\
    \ of the\n   visited network.\n   The result of these requirements is that for\
    \ everyone outside of the\n   visited network there is only one NAS: the visited\
    \ network itself.\n   Also, the visited network is able to identify its own NASes\
    \ to its\n   own satisfaction.\n   This usage of the Operator-NAS-Identifier attribute\
    \ parallels the\n   Operator-Name attribute as defined in Section 4.1 of [RFC5580].\n\
    \   The Operator-NAS-Identifier attribute is defined as follows.\n   Description\n\
    \      An opaque token describing the NAS a user has logged into.\n   Type\n \
    \     241.8 (assigned by IANA from the \"short extended space\" [RFC6929]\n  \
    \    of the \"RADIUS Attribute Types\" registry).\n   Length\n      4 to 35.\n\
    \      Implementations supporting this attribute MUST be able to handle\n    \
    \  between one (1) and thirty-two (32) octets of data.\n      Implementations\
    \ creating an Operator-NAS-Identifier attribute\n      MUST NOT create attributes\
    \ with more than sixty-four (64) octets\n      of data.  A 32-octet string should\
    \ be more than sufficient for\n      future uses.\n   Data Type\n      The data\
    \ type of this field is \"string\".  See Section 3.5 of\n      [RFC8044] for a\
    \ definition.\n   Value\n      This attribute contains an opaque token that can\
    \ only be\n      interpreted by the visited network.\n      This token MUST allow\
    \ the visited network to direct the packet to\n      the NAS for the user's session.\
    \  In practice, this requirement\n      means that the visited network has two\
    \ practical methods for\n      creating the value.\n      The first method is\
    \ to create an opaque token per NAS and then to\n      store that information\
    \ in a database.  The database can be\n      configured to allow querying by NAS\
    \ IP address in order to find\n      the correct Operator-NAS-Identifier.  The\
    \ database can also be\n      configured to allow querying by Operator-NAS-Identifier\
    \ in order\n      to find the correct NAS IP address.\n      The second method\
    \ is to obfuscate the NAS IP address using\n      information known locally by\
    \ the visited network -- for example,\n      by XORing it with a locally known\
    \ secret key.  The output of that\n      obfuscation operation is data that can\
    \ be used as the value of\n      Operator-NAS-Identifier.  On reception of a CoA\
    \ packet, the\n      locally known information can be used to unobfuscate the\
    \ value of\n      Operator-NAS-Identifier, in order to determine the actual NAS\
    \ IP\n      address.\n      Note that there is no requirement that the value of\
    \ Operator-NAS-\n      Identifier be checked for integrity.  Modification of the\
    \ value\n      can only result in the erroneous transaction being rejected.\n\
    \      We note that the Access-Request and Accounting-Request packets\n      often\
    \ contain the Media Access Control (MAC) address of the NAS.\n      There is therefore\
    \ no requirement that Operator-NAS-Identifier\n      obfuscate or hide in any\
    \ way the total number of NASes in a\n      visited network.  That information\
    \ is already public knowledge.\n"
- title: 4.  Requirements
  contents:
  - '4.  Requirements

    '
- title: 4.1.  Requirements on Home Servers
  contents:
  - "4.1.  Requirements on Home Servers\n   The Operator-NAS-Identifier attribute\
    \ MUST be stored by a home server\n   along with any user session identification\
    \ attributes.  When sending\n   a CoA packet for a user session, the home server\
    \ MUST include\n   verbatim any Operator-NAS-Identifier it has recorded for that\n\
    \   session.\n   A home server MUST NOT send CoA packets for users of other networks.\n\
    \   The next few sections describe how other participants in the RADIUS\n   ecosystem\
    \ can help enforce this requirement.\n"
- title: 4.2.  Requirements on Visited Networks
  contents:
  - "4.2.  Requirements on Visited Networks\n   A visited network that receives a\
    \ CoA packet that will be proxied to\n   a NAS MUST perform all of the operations\
    \ required for proxies; see\n   Section 4.3.2.  We specify this requirement because\
    \ we assume that\n   the visited network has a proxy between the NAS and any external\n\
    \   (i.e., third-party) proxy.  Situations where a NAS sends packets\n   directly\
    \ to a third-party RADIUS server are outside the scope of this\n   specification.\n\
    \   The visited network uses the contents of the Operator-NAS-Identifier\n   attribute\
    \ to determine which NAS will receive the packet.\n   The visited network MUST\
    \ remove the Operator-Name and Operator-NAS-\n   Identifier attributes from a\
    \ given CoA packet prior to sending that\n   packet to the final CoA server (i.e.,\
    \ NAS).  This step is necessary\n   due to the limits specified in Section 2.3\
    \ of [RFC5176].\n   The visited network MUST also ensure that the CoA packet sent\
    \ to the\n   NAS contains one of the following attributes: NAS-IP-Address,\n \
    \  NAS-IPv6-Address, or NAS-Identifier.  This step is the inverse of the\n   removal\
    \ suggested above in Section 3.4.\n   In general, the NAS should only receive\
    \ attributes that identify or\n   modify a user's session.  It is not appropriate\
    \ to send to a NAS\n   attributes that are used only for inter-proxy signaling.\n"
- title: 4.3.  Requirements on Proxies
  contents:
  - "4.3.  Requirements on Proxies\n   There are a number of requirements on both\
    \ CoA proxies and RADIUS\n   proxies.  For the purpose of this section, we assume\
    \ that each RADIUS\n   proxy shares a common administration with a corresponding\
    \ CoA proxy\n   and that the two systems can communicate electronically.  There\
    \ is no\n   requirement that these systems be co-located.\n"
- title: 4.3.1.  Security Requirements on Proxies
  contents:
  - "4.3.1.  Security Requirements on Proxies\n   Section 6.1 of [RFC5176] has some\
    \ security requirements on proxies\n   that handle CoA-Request and Disconnect-Request\
    \ packets:\n      ... a proxy MAY perform a \"reverse path forwarding\" (RPF)\
    \ check to\n      verify that a Disconnect-Request or CoA-Request originates from\
    \ an\n      authorized Dynamic Authorization Client.\n   We strengthen that requirement\
    \ by saying that a proxy MUST perform a\n   reverse path forwarding check to verify\
    \ that a CoA packet originates\n   from an authorized Dynamic Authorization Client.\
    \  Without this check,\n   a proxy may forward packets from misconfigured or malicious\
    \ parties\n   and thus contribute to the problem instead of preventing it.  Where\n\
    \   the check fails, the proxy MUST return a NAK packet that contains an\n   Error-Cause\
    \ Attribute having value 502 (\"Request Not Routable\").\n   Proxies that record\
    \ user session information SHOULD verify the\n   contents of a received CoA packet\
    \ against the recorded data for that\n   user session.  If the proxy determines\
    \ that the information in the\n   packet does not match the recorded user session,\
    \ it SHOULD return a\n   NAK packet that contains an Error-Cause Attribute having\
    \ value 503\n   (\"Session Context Not Found\").  These checks cannot be mandated\
    \ due\n   to the fact that [RFC5176] offers no advice on which attributes are\n\
    \   used to identify a user's session.\n   Because a RADIUS proxy will see Access-Request\
    \ and Accounting-Request\n   packets, we recognize that it will have sufficient\
    \ information to\n   forge CoA packets.  The RADIUS proxy will thus have the ability\
    \ to\n   subsequently disconnect any user who was authenticated through\n   itself.\n\
    \   We suggest that the real-world effect of this security problem is\n   minimal.\
    \  RADIUS proxies can already return Access-Accept or\n   Access-Reject for Access-Request\
    \ packets and can change authorization\n   attributes contained in an Access-Accept.\
    \  Allowing a proxy to change\n   (or disconnect) a user session post-authentication\
    \ is not\n   substantially different from changing (or refusing to connect) a\
    \ user\n   session during the initial process of authentication.\n   The biggest\
    \ problem is that there are no provisions in RADIUS for\n   \"end-to-end\" security.\
    \  That is, the visited network and home network\n   cannot communicate privately\
    \ in the presence of proxies.  This\n   limitation originates from the design\
    \ of RADIUS for Access-Request\n   and Accounting-Request packets.  That limitation\
    \ is then carried over\n   to CoA-Request and Disconnect-Request packets.\n  \
    \ We therefore cannot prevent proxies or home servers from forging CoA\n   packets.\
    \  We can only create scenarios where that forgery is hard to\n   perform, is\
    \ likely to be detected, and/or has no effect.\n"
- title: 4.3.2.  Filtering Requirements on Proxies
  contents:
  - "4.3.2.  Filtering Requirements on Proxies\n   Section 2.3 of [RFC5176] makes\
    \ the following requirement for CoA\n   servers:\n      In CoA-Request and Disconnect-Request\
    \ packets, all attributes MUST\n      be treated as mandatory.\n   This requirement\
    \ is too stringent for a CoA proxy.  Only the final\n   CoA server (i.e., NAS)\
    \ can decide which attributes are mandatory and\n   which are not.\n   Instead,\
    \ in the case of a CoA proxy, we say that all attributes\n   MUST NOT be treated\
    \ as mandatory.  Proxies implementing this\n   specification MUST perform proxying\
    \ based on Operator-Name.  Other\n   schemes are possible but are not discussed\
    \ here.  Proxies SHOULD\n   forward all packets either \"as is\" or with minimal\
    \ changes.\n   We note that some NAS implementations currently treat signaling\n\
    \   attributes as mandatory.  For example, some NAS implementations will\n   NAK\
    \ any CoA packet that contains a Proxy-State attribute.  While this\n   behavior\
    \ is based on a straightforward reading of the above text, it\n   causes problems\
    \ in practice.\n   We update Section 2.3 of [RFC5176] as follows: in CoA-Request\
    \ and\n   Disconnect-Request packets, the NAS MUST NOT treat as mandatory any\n\
    \   attribute that is known to not affect the user's session -- for\n   example,\
    \ the Proxy-State attribute.  Proxy-State is an attribute used\n   for proxy-to-proxy\
    \ signaling.  It cannot affect the user's session,\n   and therefore Proxy-State\
    \ (and similar attributes) MUST be ignored by\n   the NAS.\n   When Operator-Name\
    \ and/or Operator-NAS-Identifier are received by a\n   proxy, the proxy MUST pass\
    \ those attributes through unchanged.  This\n   requirement applies to all proxies,\
    \ including proxies that forward\n   any or all of Access-Request, Accounting-Request,\
    \ CoA-Request, and\n   Disconnect-Request packets.\n   All attributes added by\
    \ a RADIUS proxy when sending packets from the\n   visited network to the home\
    \ network MUST be removed by the\n   corresponding CoA proxy from packets traversing\
    \ the reverse path.\n   That is, any editing of attributes that is done on the\
    \ \"forward\" path\n   MUST be undone on the \"reverse\" path.\n   The result\
    \ is that a NAS will only ever receive CoA packets that\n   either contain (1)\
    \ attributes sent by the NAS to its local RADIUS\n   server or (2) attributes\
    \ that are sent by the home server in order to\n   perform a change of authorization.\n\
    \   Finally, we extend the above requirement not only to Operator-Name\n   and\
    \ Operator-NAS-Identifier but also to any future attributes that\n   are added\
    \ for proxy-to-proxy signaling.\n"
- title: 5.  Functionality
  contents:
  - "5.  Functionality\n   This section describes how the two attributes work together\
    \ to permit\n   CoA proxying.\n"
- title: 5.1.  User Login
  contents:
  - "5.1.  User Login\n   In this scenario, we follow a roaming user who is attempting\
    \ to\n   log in to a visited network.  The login attempt is done via a NAS in\n\
    \   the visited network.  That NAS will send an Access-Request packet to\n   the\
    \ visited RADIUS server.  The visited RADIUS server will see that\n   the user\
    \ is roaming and will add an Operator-Name attribute, with\n   value \"1\" followed\
    \ by its own realm name, e.g., \"1example.com\".  The\n   visited RADIUS server\
    \ MAY also add an Operator-NAS-Identifier\n   attribute.  The NAS identification\
    \ attributes are also edited, as\n   required by Section 3.4, above.\n   The visited\
    \ server will then proxy the authentication request to an\n   upstream server.\
    \  That server may be the home server, or it may be a\n   proxy.  In the case\
    \ of a proxy, the proxy will forward the packet\n   until the packet reaches the\
    \ home server.\n   The home server will record the Operator-Name and Operator-NAS-\n\
    \   Identifier attributes, along with other information about the user's\n   session,\
    \ if those attributes are present in a packet.\n"
- title: 5.2.  CoA Proxying
  contents:
  - "5.2.  CoA Proxying\n   At some later point in time, the home server determines\
    \ that\n   (1) a user session should have its authorization changed or\n   (2)\
    \ the user should be disconnected.  The home server looks up the\n   Operator-Name\
    \ and Operator-NAS-Identifier attributes, along with\n   other user session identifiers\
    \ as described in [RFC5176].  The home\n   server then looks up the realm from\
    \ the Operator-Name attribute in\n   the logical AAA routing table, in order to\
    \ find the next-hop CoA\n   server for that realm (which may be a proxy).  The\
    \ CoA-Request is\n   then sent to that CoA server.\n   The CoA server receives\
    \ the request and, if it is a proxy, performs a\n   lookup similar to the lookup\
    \ done by the home server.  The packet is\n   then proxied repeatedly until it\
    \ reaches the visited network.\n   If the proxy cannot find a destination for\
    \ the request or if no\n   Operator-Name attribute exists in the request, the\
    \ proxy will return\n   a CoA-NAK with Error-Cause 502 (\"Request Not Routable\"\
    ).\n   The visited network will receive the CoA-Request packet and will use\n\
    \   the Operator-NAS-Identifier attribute (if available) to determine\n   which\
    \ local CoA server (i.e., NAS) the packet should be sent to.  If\n   there is\
    \ no Operator-NAS-Identifier attribute, the visited network\n   may use other\
    \ means to locate the NAS, such as consulting a local\n   database that tracks\
    \ user sessions.\n   The Operator-Name and Operator-NAS-Identifier attributes\
    \ are then\n   removed from the packet; one of NAS-IP-Address, NAS-IPv6-Address,\
    \ or\n   NAS-Identifier is added to the packet; and the packet is then sent to\n\
    \   the CoA server.\n   If no CoA server can be found, the visited network returns\
    \ a CoA-NAK\n   with Error-Cause 403 (\"NAS Identification Mismatch\").\n   Any\
    \ response from the CoA server (NAS) is returned to the home\n   network via the\
    \ normal method of returning responses to requests.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   This specification incorporates by reference\
    \ Section 11 of [RFC6929].\n   In short, RADIUS has many known issues; those issues\
    \ are discussed in\n   detail in [RFC6929] and do not need to be repeated here.\n\
    \   This specification adds one new attribute and defines new behavior\n   for\
    \ RADIUS proxying.  As this behavior mirrors existing RADIUS\n   proxying, we\
    \ do not believe that it introduces any new security\n   issues.  We note, however,\
    \ that RADIUS proxying has many inherent\n   security issues.\n"
- title: 6.1.  RADIUS Security and Proxies
  contents:
  - "6.1.  RADIUS Security and Proxies\n   The requirement that packets be signed\
    \ with a shared secret means\n   that a CoA packet can only be received from a\
    \ trusted party or,\n   transitively, received from a third party via a trusted\
    \ party.  This\n   security provision of the base RADIUS protocol makes it impossible\n\
    \   for untrusted parties to affect the user's session.\n   When RADIUS proxying\
    \ is performed, all packets are signed on a\n   hop-by-hop basis.  Any intermediate\
    \ proxy can therefore forge\n   packets, replay packets, or modify the contents\
    \ of any packet.  Any\n   system receiving correctly signed packets must accept\
    \ them at face\n   value and is unable to detect any forgery, replay, or modifications.\n\
    \   As a result, the secure operation of such a system depends largely on\n  \
    \ trust instead of on technical means.\n   CoA packet proxying has all of the\
    \ same issues as those noted above.\n   We note that the proxies that see and\
    \ can modify CoA packets are\n   generally the same proxies that can see or modify\
    \ Access-Request and\n   Accounting-Request packets.  As such, there are few additional\n\
    \   security implications in allowing CoA proxying.\n   The main security implication\
    \ that remains is that home networks now\n   have the ability to disconnect or\
    \ change the authorization of users\n   in a visited network.  As this capability\
    \ is only enabled when mutual\n   agreement is in place, and only for those parties\
    \ who can already\n   control user sessions, there are no new security issues\
    \ with this\n   specification.\n"
- title: 6.2.  Security of the Operator-NAS-Identifier Attribute
  contents:
  - "6.2.  Security of the Operator-NAS-Identifier Attribute\n   Nothing in this specification\
    \ depends on the security of the\n   Operator-NAS-Identifier attribute.  The entire\
    \ process would work\n   exactly the same if the Operator-NAS-Identifier attribute\
    \ simply\n   contained the NAS IP address that is hosting the user's session.\
    \  The\n   only real downside in that situation would be that external parties\n\
    \   would see some additional private information about the visited\n   network.\
    \  They would still, however, be unable to leverage that\n   information to do\
    \ anything malicious.\n   The main reason to use an opaque token for the Operator-NAS-\n\
    \   Identifier attribute is that there is no compelling reason to make\n   the\
    \ information public.  We therefore recommend that the value be\n   simply an\
    \ opaque token.  We also state that there is no requirement\n   for integrity\
    \ protection or replay detection of this attribute.  The\n   rest of the RADIUS\
    \ protocol ensures that modification or replay of\n   the Operator-NAS-Identifier\
    \ attribute will either have no effect or\n   have the same effect as if the value\
    \ had not been modified.\n   Trusted parties can modify a user's session on the\
    \ NAS only when they\n   have sufficient information to identify that session.\
    \  In practice,\n   this limitation means that those parties already have access\
    \ to the\n   user's session information.  In other words, those parties are the\n\
    \   proxies who are already forwarding Access-Request and Accounting-\n   Request\
    \ packets.\n   Since those parties already have the ability to see and modify\
    \ all of\n   the information about a user's session, there is no additional\n\
    \   security issue with allowing them to see and modify CoA packets.\n   In short,\
    \ any security issues with the contents of Operator-NAS-\n   Identifier are largely\
    \ limited by the security of the underlying\n   RADIUS protocol.  This limitation\
    \ means that it does not matter how\n   the values of Operator-NAS-Identifier\
    \ are created, stored, or used.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   Per Section 3.4 of this document, IANA has allocated\
    \ one new RADIUS\n   attribute (the Operator-NAS-Identifier attribute) from the\
    \ \"short\n   extended space\" of the \"RADIUS Attribute Types\" registry as follows:\n\
    \      Value: 241.8\n      Description: Operator-NAS-Identifier\n      Data Type:\
    \ string\n      Reference: RFC 8559\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC2865]  Rigney, C., Willens, S., Rubens, A., and W. Simpson,\n        \
    \      \"Remote Authentication Dial In User Service (RADIUS)\",\n            \
    \  RFC 2865, DOI 10.17487/RFC2865, June 2000,\n              <https://www.rfc-editor.org/info/rfc2865>.\n\
    \   [RFC5080]  Nelson, D. and A. DeKok, \"Common Remote Authentication\n     \
    \         Dial In User Service (RADIUS) Implementation Issues and\n          \
    \    Suggested Fixes\", RFC 5080, DOI 10.17487/RFC5080,\n              December\
    \ 2007, <https://www.rfc-editor.org/info/rfc5080>.\n   [RFC5176]  Chiba, M., Dommety,\
    \ G., Eklund, M., Mitton, D., and\n              B. Aboba, \"Dynamic Authorization\
    \ Extensions to Remote\n              Authentication Dial In User Service (RADIUS)\"\
    , RFC 5176,\n              DOI 10.17487/RFC5176, January 2008,\n             \
    \ <https://www.rfc-editor.org/info/rfc5176>.\n   [RFC5580]  Tschofenig, H., Ed.,\
    \ Adrangi, F., Jones, M., Lior, A., and\n              B. Aboba, \"Carrying Location\
    \ Objects in RADIUS and\n              Diameter\", RFC 5580, DOI 10.17487/RFC5580,\
    \ August 2009,\n              <https://www.rfc-editor.org/info/rfc5580>.\n   [RFC6929]\
    \  DeKok, A. and A. Lior, \"Remote Authentication Dial In User\n             \
    \ Service (RADIUS) Protocol Extensions\", RFC 6929,\n              DOI 10.17487/RFC6929,\
    \ April 2013,\n              <https://www.rfc-editor.org/info/rfc6929>.\n   [RFC7542]\
    \  DeKok, A., \"The Network Access Identifier\", RFC 7542,\n              DOI\
    \ 10.17487/RFC7542, May 2015,\n              <https://www.rfc-editor.org/info/rfc7542>.\n\
    \   [RFC8044]  DeKok, A., \"Data Types in RADIUS\", RFC 8044,\n              DOI\
    \ 10.17487/RFC8044, January 2017,\n              <https://www.rfc-editor.org/info/rfc8044>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in\n         \
    \     RFC 2119 Key Words\", BCP 14, RFC 8174,\n              DOI 10.17487/RFC8174,\
    \ May 2017,\n              <https://www.rfc-editor.org/info/rfc8174>.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [RFC2866]  Rigney, C., \"RADIUS Accounting\"\
    , RFC 2866,\n              DOI 10.17487/RFC2866, June 2000,\n              <https://www.rfc-editor.org/info/rfc2866>.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Alan DeKok\n   The FreeRADIUS Server Project\n   Email:\
    \ aland@freeradius.org\n   Jouni Korhonen\n   Email: jouni.nospam@gmail.com\n"
