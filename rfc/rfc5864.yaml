- contents:
  - '                    DNS SRV Resource Records for AFS

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This document specifies how to use DNS (Domain Name Service) SRV
    RRs\n   (Resource Records) to locate services for the AFS distributed file\n   system
    and how the priority and weight values of the SRV RR should be\n   interpreted
    in the server ranking system used by AFS.  It updates RFC\n   1183 to deprecate
    the use of the AFSDB RR to locate AFS cell database\n   servers and provides guidance
    for backward compatibility.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5864.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Overview and Rationale ..........................................2\n
    \  2. Scope ...........................................................3\n   3.
    Requirements Notation ...........................................3\n   4. DNS
    SRV RRs for AFS .............................................4\n      4.1. Interpretation
    as AFS Preference Ranks .....................5\n   5. Use of AFSDB RRs ................................................6\n
    \  6. Example .........................................................8\n   7.
    Security Considerations .........................................9\n   8. References
    ......................................................9\n      8.1. Normative
    References .......................................9\n      8.2. Informative References
    ....................................10\n"
  title: Table of Contents
- contents:
  - "1.  Overview and Rationale\n   AFS (a registered trademark of IBM Corporation)
    is a distributed file\n   system (see [AFS1] and [AFS2]).  Its most widely used
    implementations\n   are [OPENAFS] and [ARLA].\n   AFS is organized administratively
    into cells.  Each AFS cell consists\n   of one or more Volume Location Database
    (VLDB) servers, one or more\n   Protection Service (PTS) servers, and one or more
    file servers and\n   volume servers, plus possible additional services not relevant
    to\n   this document.  Data stored in AFS is divided into collections of\n   files
    called volumes.  An AFS protocol client, when accessing a file\n   within a specific
    AFS cell, first contacts a VLDB server for that\n   cell to determine the file
    server for the AFS volume in which that\n   file is located, and then contacts
    that file server directly to\n   access the file.  A client may also need to contact
    a PTS server for\n   that cell to register before accessing files in that cell
    or to query\n   protection database information.\n   An AFS client therefore needs
    to determine, for a given AFS cell, the\n   VLDB and possibly the PTS servers
    for that cell.  (Traditionally, the\n   VLDB and PTS servers are provided by the
    same host.)  Once the client\n   is in contact with the VLDB server, it locates
    file and volume\n   servers through AFS protocol queries to the VLDB server.  Originally,\n
    \  VLDB server information was configured separately on each client in a\n   file
    called the CellServDB file.  [RFC1183] specified the DNS RR\n   (Resource Record)
    AFSDB to locate VLDB servers for AFS.\n   Subsequent to [RFC1183], a general DNS
    RR was defined by [RFC2782]\n   for service location for any service.  This DNS
    SRV RR has several\n   advantages over the AFSDB RR:\n   o  AFSDB RRs do not support
    priority or ranking, leaving AFS cell\n      administrators without a way to indicate
    which VLDB servers\n      clients should prefer.\n   o  AFSDB RRs do not include
    protocol or port information, implicitly\n      assuming that all VLDB servers
    will be contacted over the standard\n      port and the UDP.  Future changes to
    the AFS protocol may require\n      separate VLDB server lists for UDP and TCP
    traffic, and some uses\n      of AFS, such as providing VLDB service for multiple
    cells from the\n      same systems, require use of different ports.\n   o  Clients
    using AFSDB RRs must assume that VLDB and PTS services are\n      provided by
    the same host, but it may be useful to separate VLDB\n      servers from PTS servers.\n
    \  o  DNS SRV RRs are in widespread use, whereas AFSDB RRs are a little-\n      known
    and little-supported corner of the DNS protocol.\n   For those reasons, it is
    desirable to move AFS service location from\n   the AFSDB RR to DNS SRV RRs.\n"
  title: 1.  Overview and Rationale
- contents:
  - "2.  Scope\n   This document describes the format and use of DNS SRV RRs for AFS\n
    \  service location and deprecates the AFSDB RR.  It also provides\n   guidance
    for transition from the AFSDB RR to DNS SRV RRs and\n   recommendations for backward
    compatibility.\n   Documentation of the AFS protocol, the exact purpose and use
    of the\n   VLDB and PTS services, and other information about AFS are outside\n
    \  the scope of this document.\n   AFSDB RRs may also be used for locating servers
    for the Open Software\n   Foundation's (OSF's) Distributed Computing Environment
    (DCE)\n   authenticated naming system, as described in [RFC1183].  Service\n   location
    for DCE servers is outside the scope of this document and is\n   not modified
    by this specification.\n"
  title: 2.  Scope
- contents:
  - "3.  Requirements Notation\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
    and \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
  title: 3.  Requirements Notation
- contents:
  - "4.  DNS SRV RRs for AFS\n   The label of a DNS SRV RR, as defined in [RFC2782],
    is:\n       _<service>._<proto>.<name>\n   The following values for <service>
    advertise servers providing AFS\n   services:\n   afs3-vlserver:  servers providing
    AFS VLDB services.\n   afs3-prserver:  servers providing AFS PTS services.\n   Other
    AFS services, such as file and volume management services, are\n   located through
    the VLDB service and therefore do not use DNS SRV\n   RRs.\n   <proto> MUST be
    \"udp\" for the current AFS protocol, which uses Rx\n   over UDP.  Other values
    may be used for future revisions of the AFS\n   protocol supporting other protocols,
    such as Rx over TCP.\n   <name> MUST be the AFS cell name for which the identified
    server\n   provides AFS services.  Clients MUST query DNS SRV RRs only for a\n
    \  <name> value exactly matching the AFS cell of interest.  They MUST\n   NOT
    remove leading components to search for more general DNS SRV RRs.\n   The AFS
    cell \"prod.example.com\" and the AFS cell \"example.com\" are\n   entirely different
    cells in the AFS protocol and VLDB servers for the\n   latter cannot provide information
    for the former.\n      NOTE: As with AFSDB RRs, this means that DNS SRV RRs can
    only be\n      used to locate AFS services for cells whose naming matches the\n
    \     structure of the DNS.  This is not a requirement of the AFS\n      protocol,
    but sites creating new AFS cells SHOULD use names that\n      follow the structure
    of the DNS and that result in DNS SRV RRs\n      under their administrative control.
    \ This both permits use of DNS\n      SRV RRs instead of client configuration
    and helps avoid naming\n      conflicts between separate AFS cells.\n   DNS SRV
    RRs include a priority and a weight.  As defined in the DNS\n   SRV RR specification
    [RFC2782], clients MUST attempt to contact the\n   target host with the lowest-numbered
    priority they can reach.  AFS\n   clients that use a ranked algorithm to determine
    which server to\n   contact MUST therefore assign a sufficiently distinct rank
    to targets\n   with different priorities such that targets with a higher-numbered\n
    \  priority are only contacted if all targets with a lower-numbered\n   priority
    are inaccessible.  See Section 4.1 for more information.\n   If there are multiple
    targets with an equal priority, the weight\n   value of the DNS SRV RR SHOULD
    be used as input to a weighted\n   algorithm for selecting servers.  As specified
    by [RFC2782], larger\n   weights SHOULD be given a proportionately higher probability
    of being\n   selected.  In the presence of records containing weights greater
    than\n   0, records with weight 0 should have a very small chance of being\n   selected.
    \ A weight of 0 SHOULD be used if all targets with that\n   priority are weighted
    equally.  AFS clients MAY take into account\n   network performance and other
    protocol metrics along with SRV RR\n   weights when selecting servers, thereby
    possibly selecting different\n   servers than a system based purely on the SRV
    RRs would indicate.\n   However, such information MUST NOT override the priority
    information\n   in the SRV RR.\n   DNS SRV RRs, like all DNS RRs, have a time-to-live
    (TTL), after which\n   the SRV record information is no longer valid (see [RFC1034]).
    \ DNS\n   RRs SHOULD be discarded after their TTL, and after the DNS query\n   repeated.
    \ This applies to DNS SRV RRs for AFS as it does for any\n   other DNS RR.  Any
    information derived from the DNS SRV RRs, such as\n   preference ranks, MUST be
    discarded when the DNS SRV RR is expired.\n   Implementations are not required
    to re-run the weighted server\n   selection algorithm for each call.  Instead,
    they MAY reuse the\n   results of the algorithm until the DNS SRV RRs expire.
    \ Clients could\n   therefore use a specific server for the lifetime of the DNS
    SRV\n   records, which may affect the load distribution properties that DNS\n
    \  SRV records provide.  Server operators should account for this effect\n   when
    setting the TTL of those records.\n   AFS clients MAY remember which targets are
    inaccessible by that\n   client and ignore those targets when determining which
    server to\n   contact first.  Clients that do this SHOULD have a mechanism to
    retry\n   targets that were previously inaccessible and reconsider them\n   according
    to their current priority and weight if they become\n   accessible again.\n"
  - contents:
    - "4.1.  Interpretation as AFS Preference Ranks\n   Several AFS implementations
      use a ranking algorithm that assigns\n   numbers representing a preference rank
      to each server when the client\n   first contacts that AFS cell and then prefers
      the server with the\n   lowest rank unless that server goes down.  Clients using
      this\n   algorithm SHOULD assign their ranks as follows:\n   1.  Sort targets
      by priority and assign a base rank value to each\n       target based on its
      priority.  Each base rank value MUST be\n       sufficiently different from
      the base rank assigned to any higher-\n       numbered priority so that higher-numbered
      targets will only be\n       attempted if lower-numbered targets cannot be reached.
      \ It MUST,\n       in other words, be farther from the base rank of any distinct\n
      \      priority than any possible automatic adjustment in the rank.\n       When
      calculating base ranks, observe that the numeric value of a\n       priority
      has no meaning.  Only the ordering of distinct priority\n       values between
      multiple SRV RR targets needs to be reflected in\n       the base ranks.\n   2.
      \ For each group of targets with the same priority, follow the\n       algorithm
      in [RFC2782] to order those targets.  Then, assign\n       those targets ranks
      formed by incrementing the base weight for\n       that priority such that the
      first selected target has the lowest\n       rank, the second selected target
      has the next-lowest rank, and so\n       on.\n   After assignment of ranks,
      the AFS client MAY then adjust the ranks\n   dynamically based on network performance
      and other protocol metrics,\n   provided that such adjustments are sufficiently
      small compared to the\n   difference between base ranks that they cannot cause
      servers with a\n   higher-numbered priority to be contacted instead of a server
      with a\n   lower-numbered priority.\n   The TTL of the DNS SRV RRs MUST be honored
      by invalidating and\n   regenerating the server preference ranks with new DNS
      information\n   once that TTL has expired.  However, accumulated network and
      protocol\n   metrics may be retained and reapplied to the new rankings.\n   AFS
      server preference ranks are conventionally numbers between 1 and\n   65535.
      \ DNS SRV RR priorities are numbers between 0 and 65535.\n   Implementations
      following this algorithm could therefore encounter\n   problems assigning sufficiently
      distinct base rank values in\n   exceptional cases of very large numbers of
      DNS SRV RR targets with\n   different priorities.  However, an AFS cell configuration
      with\n   thousands of DNS SRV RR targets for an AFS VLDB or PTS service with\n
      \  meaningfully distinct priorities is highly improbable.  AFS client\n   implementations
      encountering a DNS SRV RR containing targets with\n   more distinct priority
      values than can be correctly represented as\n   base ranks SHOULD fall back
      to generating ranks based solely on\n   priorities, ignoring other rank inputs,
      and disabling dynamic\n   adjustment of ranks.  Implementations MUST be able
      to assign distinct\n   base ranks as described above for at least ten distinct
      priority\n   values.\n"
    title: 4.1.  Interpretation as AFS Preference Ranks
  title: 4.  DNS SRV RRs for AFS
- contents:
  - "5.  Use of AFSDB RRs\n   Since many AFS client implementations currently support
    AFSDB RRs but\n   do not support DNS SRV RRs, AFS cells providing DNS SRV RRs
    SHOULD\n   also provide AFSDB RRs.  However, be aware that AFSDB RRs do not\n
    \  provide priority or weighting information; all servers listed in\n   ASFDB
    RRs are treated as equal.  AFSDB RRs also do not provide port\n   information.\n
    \  An AFS cell using DNS SRV RRs SHOULD therefore also provide an AFSDB\n   RR
    listing all AFS servers for which the following statements are all\n   true:\n
    \  o  The server provides both VLDB and PTS service on the standard\n      ports
    (7003 and 7002, respectively).\n   o  The server provides these services via Rx
    over UDP.\n   o  The server either has the lowest-numbered priority of those listed\n
    \     in the DNS SRV RRs or the AFS cell administrator believes it\n      reasonable
    for clients using AFSDB RRs to use this server by\n      preference.\n   The above
    is a default recommendation.  AFS cell administrators MAY\n   use different lists
    of servers in the AFSDB RRs and DNS SRV RRs if\n   desired for specific effects
    based on local knowledge of which\n   clients use AFSDB RRs and which clients
    use DNS SRV RRs.  However,\n   AFS servers SHOULD NOT be advertised with AFSDB
    RRs unless they\n   provide VLDB and PTS services via UDP on the standard ports.
    \ (This\n   falls shy of MUST NOT because it may be useful in some unusual\n   circumstances
    to advertise, via an AFSDB RR, a server that provides\n   only one of the two
    services, but be aware that such a configuration\n   may confuse legacy clients.)\n
    \  An AFS cell SHOULD have at least one VLDB and at least one PTS server\n   providing
    service on the standard ports of 7003 and 7002,\n   respectively, since clients
    without DNS SRV RR support cannot locate\n   servers on non-standard ports.\n
    \  Clients SHOULD query DNS SRV RRs by default but SHOULD then fall back\n   on
    AFSDB RRs if no DNS SRV RRs are found.  In the absence of DNS SRV\n   RRs, an
    AFSDB RR of <subtype> 1 SHOULD be treated as equivalent to\n   the following pair
    of DNS SRV RRs:\n       _afs3-vlserver._udp.<cell> <ttl> IN SRV 0 0 7003 <hostname>\n
    \      _afs3-prserver._udp.<cell> <ttl> IN SRV 0 0 7002 <hostname>\n   <cell>
    is the label of the AFSDB RR, <ttl> is its TTL and <hostname>\n   is the <hostname>
    value of the AFSDB RR as specified in [RFC1183].\n   This is the fully-qualified
    domain name of the server.\n"
  title: 5.  Use of AFSDB RRs
- contents:
  - "6.  Example\n   The following example includes TCP AFS services, separation of
    a PTS\n   server from a VLDB server, and use of non-standard ports, all\n   features
    that either assume future AFS protocol development or are\n   not widely supported
    by current clients.  This example is intended to\n   show the range of possibilities
    for AFS DNS SRV RRs, not as a\n   practical example for an existing cell.  This
    is a part of the zone\n   file for a fictional example.com domain with AFS services.\n
    \      $ORIGIN example.com.\n       @                    SOA   dns.example.com.
    root.example.com. (\n                                    2009100201 3600 3600
    604800 86400 )\n                            NS    dns.example.com.\n       _afs3-vlserver._udp
    \ SRV   0 2 7003 afsdb1.example.com.\n       _afs3-vlserver._udp  SRV   0 4 7003
    afsdb2.example.com.\n       _afs3-vlserver._udp  SRV   1 0 65500 afsdb3.example.com.\n
    \      _afs3-vlserver._tcp  SRV   0 0 7003 afsdb3.example.com.\n       _afs3-prserver._udp
    \ SRV   0 0 7002 afsdb1.example.com.\n       _afs3-prserver._tcp  SRV   0 0 7002
    afsdb3.example.com.\n       @                    AFSDB 1 afsdb1.example.com.\n
    \      dns                  A     192.0.2.9\n       afsdb1               A     192.0.2.10\n
    \      afsdb2               A     192.0.2.11\n       afsdb3               A     192.0.2.12\n
    \  In this example, the AFS cell name is example.com.\n   afsdb1, afsdb2, and
    afsdb3 all provide VLDB service via UDP.  The\n   first two have the same priority
    but have weights indicating that\n   afsdb1 should get about twice as many clients
    as afsdb2. afsdb3\n   should only be used for UDP VLDB service if afsdb1 and afsdb2
    are not\n   accessible and provides that service on a non-standard port (65500).\n
    \  Only one host, afsdb1, provides UDP PTS service.\n   afsdb3 provides a hypothetical
    TCP version of AFS VLDB and PTS\n   service on the standard ports and is the only
    server providing these\n   services over TCP for this cell.  Such a TCP-based
    AFS protocol did\n   not exist at the time this document was written.  This example
    only\n   shows what the record would look like in a hypothetical future if\n   such
    a protocol were developed.\n   An AFSDB RR is provided for backward compatibility
    with older\n   clients.  It lists only afsdb1, since only that host provides both\n
    \  VLDB and PTS service over UDP on the standard ports.\n"
  title: 6.  Example
- contents:
  - "7.  Security Considerations\n   Use of DNS SRV RRs for AFS service locations
    poses the same security\n   issues as the existing AFSDB RRs.  Specifically, unless
    the integrity\n   and authenticity of the DNS response are checked, an attacker
    may\n   forge DNS replies and thereby direct clients at a VLDB or PTS server\n
    \  under the control of the attacker.  From there, the attacker may\n   deceive
    an AFS client about the volumes and file servers in a cell\n   and about the contents
    of files and directories in that cell.  If the\n   client uses cell data in a
    trusted way, such as by executing programs\n   out of that AFS cell or using data
    from the cell as input to other\n   programs, the attacker may be able to further
    compromise the security\n   of the client and trick it into taking action under
    the attacker's\n   control.\n   This attack can be prevented if the server is
    authenticated, since\n   the client can then detect a failure to authenticate
    the attacker's\n   servers and thereby detect possible impersonation.  However,
    this\n   applies only to authenticated AFS access, and much AFS access is\n   unauthenticated.
    \ Furthermore, clients after failure to authenticate\n   may fall back to unauthenticated
    access, which the attacker's servers\n   may permit.\n   Using an integrity-protected
    DNS system such as DNS Security (DNSSEC)\n   [RFC4033] can prevent this attack
    via DNS.  However, the underlying\n   vulnerability is inherent in the current
    AFS protocol and may be\n   exploited in ways other than DNS forgery, such as
    by forging the\n   results of VLDB queries for an AFS cell.  Addressing it properly\n
    \  requires changes to the AFS protocol allowing clients to always\n   authenticate
    AFS services and discard unauthenticated data.  Even in\n   the absence of a DNS
    system with integrity protection, addition of\n   DNS SRV RRs does not make this
    vulnerability more severe, only opens\n   another equivalent point of attack.\n"
  title: 7.  Security Considerations
- contents:
  - '8.  References

    '
  - contents:
    - "8.1.  Normative References\n   [RFC1034]  Mockapetris, P., \"Domain names -
      concepts and facilities\",\n              STD 13, RFC 1034, November 1987.\n
      \  [RFC1183]  Everhart, C., Mamakos, L., Ullmann, R., and P.\n              Mockapetris,
      \"New DNS RR Definitions\", RFC 1183,\n              October 1990.\n   [RFC2119]
      \ Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement
      Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2782]  Gulbrandsen, A., Vixie,
      P., and L. Esibov, \"A DNS RR for\n              specifying the location of
      services (DNS SRV)\", RFC 2782,\n              February 2000.\n"
    title: 8.1.  Normative References
  - contents:
    - "8.2.  Informative References\n   [AFS1]     Howard, J., Kazar, M., Menees,
      S., Nichols, D.,\n              Satyanarayanan, M., Sidebotham, R., and M. West,
      \"Scale\n              and Performance in a Distributed File System\", ACM Trans.\n
      \             on Computer Systems 6(1), February 1988.\n   [AFS2]     Howard,
      J., \"An Overview of the Andrew File System\", CMU-\n              ITC 88-062,
      February 1988.\n   [ARLA]     Assar Westerlund, et al., \"Arla\", May 2001,\n
      \             <http://www.stacken.kth.se/project/arla/html/arla.html>.\n   [OPENAFS]
      \ IBM Corporation, et al., \"OpenAFS Documentation\",\n              April 2000,
      <http://docs.openafs.org/>.\n   [RFC4033]  Arends, R., Austein, R., Larson,
      M., Massey, D., and S.\n              Rose, \"DNS Security Introduction and
      Requirements\",\n              RFC 4033, March 2005.\n"
    title: 8.2.  Informative References
  title: 8.  References
- contents:
  - "Author's Address\n   Russ Allbery\n   Stanford University\n   P.O. Box 20066\n
    \  Stanford, CA  94309\n   US\n   EMail: rra@stanford.edu\n   URI:   http://www.eyrie.org/~eagle/\n"
  title: Author's Address
