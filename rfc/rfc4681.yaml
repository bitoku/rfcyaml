- title: __initial_text__
  contents:
  - '                       TLS User Mapping Extension

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies a TLS extension that enables clients to\
    \ send\n   generic user mapping hints in a supplemental data handshake message\n\
    \   defined in RFC 4680.  One such mapping hint is defined in an\n   informative\
    \ section, the UpnDomainHint, which may be used by a server\n   to locate a user\
    \ in a directory database.  Other mapping hints may be\n   defined in other documents\
    \ in the future.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \      1.1. Terminology ................................................2\n  \
    \    1.2. Design Considerations ......................................2\n   2.\
    \ User Mapping Extension ..........................................3\n   3. User\
    \ Mapping Handshake Exchange .................................3\n   4. Message\
    \ Flow ....................................................5\n   5. Security Considerations\
    \ .........................................6\n   6. UPN Domain Hint (Informative)\
    \ ...................................7\n   7. IANA Considerations .............................................8\n\
    \   8. Normative References ............................................9\n  \
    \ 9. Acknowledgements ................................................9\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document has a normative part and an informative part.\
    \  Sections\n   2-5 are normative.  Section 6 is informative.\n   This specification\
    \ defines a TLS extension and a payload for the\n   SupplementalData handshake\
    \ message, defined in RFC 4680 [N6], to\n   accommodate mapping of users to their\
    \ user accounts when using TLS\n   client authentication as the authentication\
    \ method.\n   The new TLS extension (user_mapping) is sent in the client hello\n\
    \   message.  Per convention defined in RFC 4366 [N4], the server places\n   the\
    \ same extension (user_mapping) in the server hello message, to\n   inform the\
    \ client that the server understands this extension.  If the\n   server does not\
    \ understand the extension, it will respond with a\n   server hello omitting this\
    \ extension, and the client will proceed as\n   normal, ignoring the extension,\
    \ and not include the\n   UserMappingDataList data in the TLS handshake.\n   If\
    \ the new extension is understood, the client will inject\n   UserMappingDataList\
    \ data in the SupplementalData handshake message\n   prior to the Client's Certificate\
    \ message.  The server will then\n   parse this message, extracting the client's\
    \ domain, and store it in\n   the context for use when mapping the certificate\
    \ to the user's\n   directory account.\n   No other modifications to the protocol\
    \ are required.  The messages\n   are detailed in the following sections.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ RFC 2119 [N1].\n   The syntax for the TLS User Mapping extension is defined\
    \ using the\n   TLS Presentation Language, which is specified in Section 4 of\
    \ [N2].\n"
- title: 1.2.  Design Considerations
  contents:
  - "1.2.  Design Considerations\n   The reason the mapping data itself is not placed\
    \ in the extension\n   portion of the client hello is to prevent broadcasting\
    \ this\n   information to servers that don't understand the extension.\n"
- title: 2.  User Mapping Extension
  contents:
  - "2.  User Mapping Extension\n   A new extension type (user_mapping(6)) is added\
    \ to the Extension used\n   in both the client hello and server hello messages.\
    \  The extension\n   type is specified as follows.\n      enum {\n           user_mapping(6),\
    \ (65535)\n      } ExtensionType;\n   The \"extension_data\" field of this extension\
    \ SHALL contain\n   \"UserMappingTypeList\" with a list of supported hint types\
    \ where:\n      struct {\n            UserMappingType user_mapping_types<1..2^8-1>;\n\
    \      } UserMappingTypeList;\n   Enumeration of hint types (user_mapping_types)\
    \ defined in this\n   document is provided in Section 3.\n   The list of user_mapping_types\
    \ included in a client hello SHALL\n   signal the hint types supported by the\
    \ client.  The list of\n   user_mapping_types included in the server hello SHALL\
    \ signal the hint\n   types preferred by the server.\n   If none of the hint types\
    \ listed by the client is supported by the\n   server, the server SHALL omit the\
    \ user_mapping extension in the\n   server hello.\n   When the user_mapping extension\
    \ is included in the server hello, the\n   list of hint types in \"UserMappingTypeList\"\
    \ SHALL be either equal to,\n   or a subset of, the list provided by the client.\n"
- title: 3.  User Mapping Handshake Exchange
  contents:
  - "3.  User Mapping Handshake Exchange\n   The underlying structure of the SupplementalData\
    \ handshake message,\n   used to carry information defined in this section, is\
    \ defined in RFC\n   4680 [N6].\n   A new SupplementalDataType [N6] is defined\
    \ to accommodate\n   communication of generic user mapping data.  See RFC 2246\
    \ (TLS 1.0)\n   [N2] and RFC 4346 (TLS 1.1) [N3] for other handshake types.\n\
    \   The information in this data type carries one or more unauthenticated\n  \
    \ hints, UserMappingDataList, inserted by the client side.  Upon\n   receipt and\
    \ successful completion of the TLS handshake, the server\n   MAY use this hint\
    \ to locate the user's account from which user\n   information and credentials\
    \ MAY be retrieved to support\n   authentication based on the client certificate.\n\
    \      struct {\n            SupplementalDataType supp_data_type;\n          \
    \  uint16 supp_data_length;\n            select(SupplementalDataType) {\n    \
    \           case user_mapping_data: UserMappingDataList;\n               }\n \
    \     } SupplementalDataEntry;\n      enum {\n            user_mapping_data(0),\
    \ (65535)\n      } SupplementalDataType;\n   The user_mapping_data(0) enumeration\
    \ results in a new supplemental\n   data type UserMappingDataList with the following\
    \ structure:\n      enum {\n            (255)\n      } UserMappingType;\n    \
    \  struct {\n             UserMappingType user_mapping_version;\n            \
    \ uint16 user_mapping_length;\n             select(UserMappingType) { }\n    \
    \  } UserMappingData;\n      struct{\n         UserMappingData user_mapping_data_list<1..2^16-1>;\n\
    \      }UserMappingDataList;\n   user_mapping_length\n      This field is the\
    \ length (in bytes) of the data selected by\n      UserMappingType.\n   The UserMappingData\
    \ structure contains a single mapping of type\n   UserMappingType.  This structure\
    \ can be leveraged to define new types\n   of user mapping hints in the future.\
    \  The UserMappingDataList MAY\n   carry multiple hints; it is defined as a vector\
    \ of UserMappingData\n   structures.\n   No preference is given to the order in\
    \ which hints are specified in\n   this vector.  If the client sends more than\
    \ one hint, then the Server\n   SHOULD use the applicable mapping supported by\
    \ the server.\n   Implementations MAY support the UPN domain hint as specified\
    \ in\n   Section 6 of this document.  Implementations MAY also support other\n\
    \   user mapping types as they are defined.  Definitions of standards-\n   track\
    \ user mapping types must include a discussion of\n   internationalization considerations.\n"
- title: 4.  Message Flow
  contents:
  - "4.  Message Flow\n   In order to negotiate sending user mapping data to a server\
    \ in\n   accordance with this specification, clients MUST include an extension\n\
    \   of type \"user_mapping\" in the (extended) client hello, which SHALL\n   contain\
    \ a list of supported hint types.\n   Servers that receive an extended client\
    \ hello containing a\n   \"user_mapping\" extension MAY indicate that they are\
    \ willing to accept\n   user mapping data by including an extension of type \"\
    user_mapping\" in\n   the (extended) server hello, which SHALL contain a list\
    \ of preferred\n   hint types.\n   After negotiation of the use of user mapping\
    \ has been successfully\n   completed (by exchanging hello messages including\
    \ \"user_mapping\"\n   extensions), clients MAY send a \"SupplementalData\" message\
    \ containing\n   the \"UserMappingDataList\" before the \"Certificate\" message.\
    \  The\n   message flow is illustrated in Figure 1 below.\n      Client      \
    \                                         Server\n      ClientHello\n       /*\
    \ with user_mapping ext */ -------->\n                                       \
    \               ServerHello\n                                      /* with user-mapping\
    \ ext */\n                                                     Certificate*\n\
    \                                               ServerKeyExchange*\n         \
    \                                     CertificateRequest*\n                  \
    \                 <--------      ServerHelloDone\n      SupplementalData\n   \
    \    /* with UserMappingDataList */\n      Certificate*\n      ClientKeyExchange\n\
    \      CertificateVerify*\n      [ChangeCipherSpec]\n      Finished          \
    \           -------->\n                                               [ChangeCipherSpec]\n\
    \                                   <--------             Finished\n      Application\
    \ Data             <------->     Application Data\n   * Indicates optional or\
    \ situation-dependent messages that are not\n     always sent according to RFC\
    \ 2246 [N2] and RFC 4346 [N3].\n              Figure 1.  Message Flow with User\
    \ Mapping Data\n   The server MUST expect and gracefully handle the case where\
    \ the\n   client chooses not to send any supplementalData handshake message\n\
    \   even after successful negotiation of extensions.  The client MAY at\n   its\
    \ own discretion decide that the user mapping hint it initially\n   intended to\
    \ send no longer is relevant for this session.  One such\n   reason could be that\
    \ the server certificate fails to meet certain\n   requirements.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   The user mapping hint sent in the UserMappingDataList\
    \ is\n   unauthenticated data that MUST NOT be treated as a trusted\n   identifier.\
    \  Authentication of the user represented by that user\n   mapping hint MUST rely\
    \ solely on validation of the client\n   certificate.  One way to do this is to\
    \ use the user mapping hint to\n   locate and extract a certificate of the claimed\
    \ user from the trusted\n   directory and subsequently match this certificate\
    \ against the\n   validated client certificate from the TLS handshake.\n   As\
    \ the client is the initiator of this TLS extension, it needs to\n   determine\
    \ when it is appropriate to send the User Mapping\n   Information.  It may not\
    \ be prudent to broadcast a user mapping hint\n   to just any server at any time.\n\
    \   To avoid superfluously sending user mapping hints, clients SHOULD\n   only\
    \ send this information if it recognizes the server as a\n   legitimate recipient.\
    \  Recognition of the server can be done in many\n   ways.  One way to do this\
    \ could be to recognize the name and address\n   of the server.\n   In some cases,\
    \ the user mapping hint may itself be regarded as\n   sensitive.  In such cases,\
    \ the double handshake technique described\n   in [N6] can be used to provide\
    \ protection for the user mapping hint\n   information.\n"
- title: 6.  UPN Domain Hint (Informative)
  contents:
  - "6.  UPN Domain Hint (Informative)\n   This specification provides an informative\
    \ description of one user\n   mapping hint type for Domain Name hints and User\
    \ Principal Name\n   hints.  Other hint types may be defined in other documents\
    \ in the\n   future.\n   The User Principal Name (UPN) in this hint type represents\
    \ a name\n   that specifies a user's entry in a directory in the form\n   userName@domainName.\
    \  Traditionally, Microsoft has relied on the\n   presence of such a name form\
    \ to be present in the client certificate\n   when logging on to a domain account.\
    \  However, this has several\n   drawbacks since it prevents the use of certificates\
    \ with an absent\n   UPN and also requires re-issuance of certificates or issuance\
    \ of\n   multiple certificates to reflect account changes or creation of new\n\
    \   accounts.  The TLS extension, in combination with the defined hint\n   type,\
    \ provides a significant improvement to this situation as it\n   allows a single\
    \ certificate to be mapped to one or more accounts of\n   the user and does not\
    \ require the certificate to contain a\n   proprietary UPN.\n   The domain_name\
    \ field MAY be used when only domain information is\n   needed, e.g., where a\
    \ user have accounts in multiple domains using\n   the same username name, where\
    \ that user name is known from another\n   source (e.g., from the client certificate).\
    \  When the user name is\n   also needed, the user_principal_name field MAY be\
    \ used to indicate\n   both username and domain name.  If both fields are present,\
    \ then the\n   server can make use of whichever one it chooses.\n      enum {\n\
    \             upn_domain_hint(64), (255)\n      } UserMappingType;\n      struct\
    \ {\n             opaque user_principal_name<0..2^16-1>;\n             opaque\
    \ domain_name<0..2^16-1>;\n      } UpnDomainHint;\n      struct {\n          \
    \   UserMappingType user_mapping_version;\n             uint16 user_mapping_length;\n\
    \             select(UserMappingType) {\n                   case upn_domain_hint:\
    \ UpnDomainHint;\n             }\n      } UserMappingData;\n   The user_principal_name\
    \ field, when specified, SHALL be of the form\n   \"user@domain\", where \"user\"\
    \ is a UTF-8 encoded Unicode string that\n   does not contain the \"@\" character,\
    \ and \"domain\" is a domain name\n   meeting the requirements in the following\
    \ paragraph.\n   The domain_name field, when specified, SHALL contain a domain\
    \ name\n   [N5] in the usual text form; in other words, a sequence of one or\n\
    \   more domain labels separated by \".\", each domain label starting and\n  \
    \ ending with an alphanumeric character and possibly also containing\n   \"-\"\
    \ characters.  This field is an \"IDN-unaware domain name slot\" as\n   defined\
    \ in RFC 3490 [N7], and therefore, domain names containing\n   non-ASCII characters\
    \ have to be processed as described in RFC 3490\n   before being stored in this\
    \ field.\n   The UpnDomainHint MUST at least contain a non-empty\n   user_principal_name\
    \ or a non-empty domain_name.  The UpnDomainHint\n   MAY contain both user_principal_name\
    \ and domain_name.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   IANA has taken the following actions:\n   1) Created\
    \ an entry, user_mapping(6), in the existing registry for\n      ExtensionType\
    \ (defined in RFC 4366 [N4]).\n   2) Created an entry, user_mapping_data(0), in\
    \ the new registry for\n      SupplementalDataType (defined in RFC 4680).\n  \
    \ 3) Established a registry for TLS UserMappingType values.  The first\n     \
    \ entry in the registry is upn_domain_hint(64).  TLS UserMappingType\n      values\
    \ in the inclusive range 0-63 (decimal) are assigned via RFC\n      2434 [N8]\
    \ Standards Action.  Values from the inclusive range\n      64-223 (decimal) are\
    \ assigned via RFC 2434 Specification Required.\n      Values from the inclusive\
    \ range 224-255 (decimal) are reserved for\n      RFC 2434 Private Use.\n"
- title: 8.  Normative References
  contents:
  - "8.  Normative References\n   [N1]   Bradner, S., \"Key words for use in RFCs\
    \ to Indicate\n          Requirement Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [N2]   Dierks, T. and C. Allen, \"The TLS Protocol Version 1.0\", RFC\n  \
    \        2246, January 1999.\n   [N3]   Dierks, T. and E. Rescorla, \"The Transport\
    \ Layer Security\n          (TLS) Protocol Version 1.1\", RFC 4346, April 2006.\n\
    \   [N4]   Blake-Wilson, S., Nystrom, M., Hopwood, D., Mikkelsen, J., and\n  \
    \        T. Wright, \"Transport Layer Security (TLS) Extensions\", RFC\n     \
    \     4366, April 2006.\n   [N5]   Mockapetris, P., \"Domain names - concepts\
    \ and facilities\", STD\n          13, RFC 1034, November 1987.\n   [N6]   Santesson,\
    \ S., \"TLS Handshake Message for Supplemental Data\",\n          RFC 4680, October\
    \ 2006.\n   [N7]   Faltstrom, P., Hoffman, P., and A. Costello,\n          \"\
    Internationalizing Domain Names in Applications (IDNA)\", RFC\n          3490,\
    \ March 2003.\n   [N8]   Narten, T. and H. Alvestrand, \"Guidelines for Writing\
    \ an IANA\n          Considerations Section in RFCs\", BCP 26, RFC 2434, October\n\
    \          1998.\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   The authors extend a special thanks to Russ Housley,\
    \ Eric Resocorla,\n   and Paul Leach for their substantial contributions.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Stefan Santesson\n   Microsoft\n   Finlandsgatan 30\n\
    \   164 93 KISTA\n   Sweden\n   EMail: stefans@microsoft.com\n   Ari Medvinsky\n\
    \   Microsoft\n   One Microsoft Way\n   Redmond, WA 98052-6399\n   USA\n   EMail:\
    \ arimed@microsoft.com\n   Joshua Ball\n   Microsoft\n   One Microsoft Way\n \
    \  Redmond, WA 98052-6399\n   USA\n   EMail: joshball@microsoft.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
