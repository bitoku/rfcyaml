- contents:
  - "       A Common Schema for Internet Registry Information Service\n                           Transfer
    Protocols\n"
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2007).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document describes an XML Schema for use by Internet Registry\n
    \  Information Service (IRIS) application transfer protocols that share\n   common
    characteristics.  It describes common information about the\n   transfer protocol,
    such as version, supported extensions, and\n   supported security mechanisms.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .
    . . . . . .  2\n   2.  Document Terminology . . . . . . . . . . . . . . . . .
    . . . .  2\n   3.  Formal XML Syntax  . . . . . . . . . . . . . . . . . . . .
    . .  3\n   4.  Version Information  . . . . . . . . . . . . . . . . . . . . .
    \ 6\n   5.  Size Information . . . . . . . . . . . . . . . . . . . . . . .  7\n
    \  6.  Authentication Success Information . . . . . . . . . . . . . .  8\n   7.
    \ Authentication Failure Information . . . . . . . . . . . . . .  8\n   8.  Other
    Information  . . . . . . . . . . . . . . . . . . . . . .  9\n   9.  Internationalization
    Considerations  . . . . . . . . . . . . .  9\n   10. IANA Considerations  . .
    . . . . . . . . . . . . . . . . . . . 10\n     10.1.  XML Namespace URN Registration
    \ . . . . . . . . . . . . . 10\n   11. Security Considerations  . . . . . . .
    . . . . . . . . . . . . 10\n   12. References . . . . . . . . . . . . . . . .
    . . . . . . . . . . 11\n     12.1.  Normative References  . . . . . . . . . .
    . . . . . . . . 11\n     12.2.  Informative References  . . . . . . . . . . .
    . . . . . . 11\n   Appendix A.  Contributors  . . . . . . . . . . . . . . . .
    . . . . 12\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   IRIS [8] has two transfer protocols, LWZ (lightweight using\n
    \  compression) [9] and XPC (XML pipelining with chunks) [10], that\n   share
    common negotiation mechanisms.  Both transfer protocols have a\n   need for the
    server to provide rich status information to clients\n   during protocol negotiation.
    \ In many cases, this status information\n   would be too complex to describe
    using simple bit fields and length-\n   specified octet sequences.  This document
    defines an XML Schema for\n   this rich status information and describes the usage
    of conformant\n   XML for conveying this status information.\n   This document
    defines five types of information used in the\n   negotiation of protocol capabilities:
    version, size, authentication\n   success, authentication failure, and other information.
    \ The version\n   information is used to negotiate the versions and extensions
    to the\n   transfer protocol, the application operations protocol, and data\n
    \  models used by the application operations.  Size information is used\n   to
    indicate request and response size capabilities and errors.\n   Authentication
    success and failure information is used to indicate\n   the outcome of an authentication
    action.  Other types of information\n   may also be conveyed that is generally
    a result of an error but\n   cannot be corrected through defined protocol behavior.\n
    \  As an example, upon initiation of a connection, a server may send\n   version
    information informing the client of the data models supported\n   by the server
    and the security mechanisms supported by the server.\n   The client may then respond
    appropriately.  For example, the client\n   may not recognize any of the data
    models supported by the server, and\n   therefore close the connection.  On the
    other hand, the client may\n   recognize the data models and the security mechanisms
    and begin the\n   procedure to initialize a security mechanism with the server
    before\n   proceeding to query data according to a recognized data model.\n   Both
    LWZ [9] and XPC [10] provide examples of the usage of the XML\n   Schema defined
    in this document.\n"
  title: 1.  Introduction
- contents:
  - "2.  Document Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
    and \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC
    2119 [6].\n"
  title: 2.  Document Terminology
- contents:
  - "3.  Formal XML Syntax\n   The following is the XML Schema used to define transfer
    protocol\n   status information.  See the following specifications: [2], [3],
    [4],\n   [5].  Updates or changes to this schema require a document that\n   UPDATES
    or OBSOLETES this document.\n   <?xml version=\"1.0\"?>\n   <schema xmlns=\"http://www.w3.org/2001/XMLSchema\"\n
    \          xmlns:iristrans=\"urn:ietf:params:xml:ns:iris-transport\"\n           targetNamespace=\"urn:ietf:params:xml:ns:iris-transport\"\n
    \          elementFormDefault=\"qualified\" >\n   <annotation>\n     <documentation>\n
    \      A schema for describing status information\n       for use by multiple
    transfer protocols.\n     </documentation>\n   </annotation>\n   <element name=\"versions\">\n
    \    <complexType>\n       <sequence>\n         <element name=\"transferProtocol\"
    maxOccurs=\"unbounded\">\n           <complexType>\n             <sequence>\n
    \              <element name=\"application\" minOccurs=\"0\"\n                 maxOccurs=\"unbounded\">\n
    \                <complexType>\n                   <sequence>\n                     <element
    name=\"dataModel\" minOccurs=\"0\"\n                       maxOccurs=\"unbounded\">\n
    \                      <complexType>\n                         <attribute name=\"protocolId\"
    type=\"token\"\n                           use=\"required\" />\n                         <attribute
    name=\"extensionIds\"\n                           type=\"normalizedString\" />\n
    \                      </complexType>\n                     </element>\n                   </sequence>\n
    \                  <attribute name=\"protocolId\" type=\"token\"\n                     use=\"required\"
    />\n                   <attribute name=\"extensionIds\"\n                     type=\"normalizedString\"
    />\n                 </complexType>\n               </element>\n             </sequence>\n
    \            <attribute name=\"protocolId\" type=\"token\" use=\"required\"\n
    \              />\n             <attribute name=\"extensionIds\" type=\"normalizedString\"
    />\n             <attribute name=\"authenticationIds\"\n               type=\"normalizedString\"
    />\n             <attribute name=\"responseSizeOctets\"\n               type=\"positiveInteger\"
    />\n             <attribute name=\"requestSizeOctets\"\n               type=\"positiveInteger\"
    />\n           </complexType>\n         </element>\n       </sequence>\n     </complexType>\n
    \  </element>\n   <element name=\"size\">\n     <complexType>\n       <sequence>\n
    \        <element name=\"request\"\n           minOccurs=\"0\"\n           type=\"iristrans:octetsType\"
    />\n         <element name=\"response\"\n           minOccurs=\"0\"\n           type=\"iristrans:octetsType\"
    />\n       </sequence>\n     </complexType>\n   </element>\n   <complexType name=\"octetsType\">\n
    \    <choice>\n       <element name=\"exceedsMaximum\">\n         <complexType/>\n
    \      </element>\n       <element name=\"octets\" type=\"positiveInteger\" />\n
    \    </choice>\n   </complexType>\n   <element name=\"authenticationSuccess\">\n
    \    <complexType>\n       <sequence>\n         <element name=\"description\"
    minOccurs=\"0\"\n           maxOccurs=\"unbounded\">\n           <complexType>\n
    \            <simpleContent>\n               <extension base=\"string\">\n                 <attribute
    name=\"language\" type=\"language\"\n                   use=\"required\"/>\n               </extension>\n
    \            </simpleContent>\n           </complexType>\n         </element>\n
    \        <element name=\"data\" minOccurs=\"0\" maxOccurs=\"1\"\n           type=\"base64Binary\"/>\n
    \      </sequence>\n     </complexType>\n   </element>\n   <element name=\"authenticationFailure\">\n
    \    <complexType>\n       <sequence>\n         <element name=\"description\"
    minOccurs=\"0\"\n           maxOccurs=\"unbounded\">\n           <complexType>\n
    \            <simpleContent>\n               <extension base=\"string\">\n                 <attribute
    name=\"language\" type=\"language\"\n                   use=\"required\"/>\n               </extension>\n
    \            </simpleContent>\n           </complexType>\n         </element>\n
    \      </sequence>\n     </complexType>\n   </element>\n   <element name=\"other\">\n
    \    <complexType>\n       <sequence>\n         <element name=\"description\"
    minOccurs=\"0\"\n           maxOccurs=\"unbounded\">\n           <complexType>\n
    \            <simpleContent>\n               <extension base=\"string\">\n                 <attribute
    name=\"language\" type=\"language\"\n                   use=\"required\"/>\n               </extension>\n
    \            </simpleContent>\n           </complexType>\n         </element>\n
    \      </sequence>\n       <attribute type=\"token\" name=\"type\" use=\"required\"/>\n
    \    </complexType>\n   </element>\n   </schema>\n"
  title: 3.  Formal XML Syntax
- contents:
  - "4.  Version Information\n   The <versions> element is used to describe version
    information about\n   the transfer protocol, the application protocol, and data
    models used\n   by the application protocol.\n   The <versions> element has one
    or more <transferProtocol> child\n   elements. <transferProtocol> elements have
    zero or more <application>\n   child elements.  And <application> elements have
    zero or more\n   <dataModel> elements.  Each of these element types has a 'protocolId'\n
    \  attribute identifying the protocol they represent and an optional\n   'extensionIds'
    attribute identifying the protocol extensions they\n   support.\n   During capabilities
    negotiation, it is expected that both sides of\n   the negotiation recognize the
    'protocolId' value of the\n   <transferProtocol> element and at least one of the
    <application> and\n   <dataModel> elements.  If the negotiation produces a situation
    where\n   this is not possible, an error SHOULD be given and communication\n   ended.
    \ It is not expected that each side must recognize the\n   'extensionIds' values,
    and unrecognized 'extensionIds' values MUST be\n   ignored.\n   Additionally,
    the <transferProtocol> element has optional\n   'authenticationIds', 'responseSizeOctets',
    and 'requestSizeOctets'\n   attributes.  The 'authenticationIds' attribute identifies\n
    \  authentication mechanisms supported by the associated transfer\n   protocol.
    \ The 'responseSizeOctets' attribute describes the maximum\n   response size in
    octets the server will give.  The\n   'requestSizeOctets' attribute describes
    the maximum request size in\n   octets the server will accept.\n   The protocol,
    extension, and authentication mechanism identifiers are\n   of no specific type,
    and this document defines none.  Specifications\n   using this XML Schema MUST
    define the identifiers for use with the\n   <versions> element and its children.\n
    \  The meaning of octets for the transfer of data is counted in\n   different
    ways for different transfer protocols.  Some transfer\n   protocols need only
    to specify the octets of the data being\n   transferred, while other transfer
    protocols need to account for\n   additional octets used to transfer the data.
    \ Specifications using\n   this XML Schema MUST describe how these octet counts
    are calculated.\n   The following is example XML describing version information.\n
    \  <versions xmlns=\"urn:ietf:params:xml:ns:iris-transport\">\n     <transferProtocol
    protocolId=\"iris.lwz\"\n       authenticationIds=\"PLAIN EXTERNAL\">\n       <application
    protocolId=\"urn:ietf:params:xml:ns:iris1\"\n         extensionIds=\"http://example.com/SIMPLEBAG\">\n
    \        <dataModel protocolId=\"urn:ietf:params:xml:ns:dchk1\"/>\n         <dataModel
    protocolId=\"urn:ietf:params:xml:ns:dreg1\"/>\n       </application>\n     </transferProtocol>\n
    \  </versions>\n                        Version Information Example\n"
  title: 4.  Version Information
- contents:
  - "5.  Size Information\n   The <size> element provides a means for a server to
    communicate to a\n   client that a given request has exceeded a negotiated size\n
    \  (<request>) or that a response to a given request will exceed a\n   negotiated
    size (<response>).\n   A server may indicate one of two size conditions by specifying
    the\n   following child elements:\n      <exceedsMaximum> - this child element
    simply indicates that the\n      size exceeded the negotiated size.\n      <octets>
    - this child element indicates that the size exceeded the\n      negotiated size
    and conveys the number of octets that is the\n      maximum for a request if the
    parent element is a <request> element\n      or the number of octets needed to
    provide the response if the\n      parent element is a <response> element.\n   The
    meaning of octets for the transfer of data is counted in\n   different ways for
    different transfer protocols.  Some transfer\n   protocols need only to specify
    the octets of the data being\n   transferred, while other transfer protocols need
    to account for\n   additional octets used to transfer the data.  Specifications
    using\n   this XML Schema MUST describe how these octet counts are calculated.\n
    \  The following is example XML describing size information.\n   <size xmlns=\"urn:ietf:params:xml:ns:iris-transport\">\n
    \    <response>\n       <octets>1211</octets>\n     </response>\n   </size>\n
    \                        Size Information Example\n"
  title: 5.  Size Information
- contents:
  - "6.  Authentication Success Information\n   The <authenticationSuccess> element
    indicates that a client has\n   successfully authenticated to a server.  Along
    with this indication,\n   it can provide text that may be presented to a user
    with regard to\n   this successful authentication using child <description> elements.\n
    \  Each <description> element MUST have a 'language' attribute\n   describing
    the language of the content of the <description> element.\n   Clients are not
    expected to concatenate multiple descriptions;\n   therefore, servers MUST NOT
    provide multiple <description> elements\n   with the same language descriptor.\n
    \  Finally, additional security data may be sent back with the\n   authentication
    success message using the <data> element.  The content\n   of this element is
    of the base64Binary simple type.\n   The following is example XML describing authentication
    success\n   information.\n   <authenticationSuccess\n     xmlns=\"urn:ietf:params:xml:ns:iris-transport\">\n
    \    <description language=\"en\">\n       user 'bob' authenticates via password\n
    \    </description>\n   </authenticationSuccess>\n                      Authentication
    Success Example\n"
  title: 6.  Authentication Success Information
- contents:
  - "7.  Authentication Failure Information\n   The <authenticationFailure> element
    indicates that a client has\n   failed to properly authenticate to a server.  Along
    with this\n   indication, it can provide text that may be presented to a user
    with\n   regard to this authentication failure using child <description>\n   elements.\n
    \  Each <description> element MUST have a 'language' attribute\n   describing
    the language of the content of the <description> element.\n   Clients are not
    expected to concatenate multiple descriptions;\n   therefore, servers MUST NOT
    provide multiple <description> elements\n   with the same language descriptor.\n
    \  The following is example XML describing authentication failure\n   information.\n
    \  <authenticationFailure\n     xmlns=\"urn:ietf:params:xml:ns:iris-transport\">\n
    \    <description language=\"en\">\n       please consult your admin if you have
    forgotten your password\n     </description>\n   </authenticationFailure>\n                      Authentication
    Failure Example\n"
  title: 7.  Authentication Failure Information
- contents:
  - "8.  Other Information\n   The <other> element conveys status information that
    may require\n   interpretation by a human to be meaningful.  This element has
    a\n   required 'type' attribute, which contains an identifier regarding the\n
    \  nature of the information.  This document does not define any\n   identifiers
    for use in this attribute, but the intent is that these\n   identifiers are well-known
    so that clients may take different classes\n   of action based on the content
    of this attribute.  Therefore,\n   specifications making use of this XML Schema
    MUST define these\n   identifiers.\n   The <other> element may have zero or more
    <description> elements.\n   Each <description> element MUST have a 'language'
    attribute\n   describing the language of the content of the <description> element.\n
    \  Servers may use these child elements to convey textual information to\n   clients
    regarding the class (or type) of status information being\n   specified by the
    <other> element.  Clients are not expected to\n   concatenate multiple descriptions;
    therefore, servers MUST NOT\n   provide multiple <description> elements with the
    same language\n   descriptor.\n   The following is example XML describing other
    information.\n   <other xmlns=\"urn:ietf:params:xml:ns:iris-transport\" type=\"system\">\n
    \    <description language=\"en\">unavailable, come back\n       later</description>\n
    \  </other>\n                         Other Information Example\n"
  title: 8.  Other Information
- contents:
  - "9.  Internationalization Considerations\n   XML processors are obliged to recognize
    both UTF-8 and UTF-16 [1]\n   encodings.  XML provides for mechanisms to identify
    and use other\n   character encodings.  Application transfer protocols MUST define\n
    \  which additional character encodings, if any, are to be allowed in\n   the
    use of the XML defined in this document.\n"
  title: 9.  Internationalization Considerations
- contents:
  - '10.  IANA Considerations

    '
  - contents:
    - "10.1.  XML Namespace URN Registration\n   This document makes use of the XML
      namespace and schema registry\n   specified in XML_URN [7].  Accordingly, the
      following registrations\n   have been made by IANA:\n   o  XML Namespace URN/URI:\n
      \     *  urn:ietf:params:xml:ns:iris-transport\n   o  Contact:\n      *  Andrew
      Newton <andy@hxr.us>\n   o  XML:\n      *  None\n   o  XML Schema URN/URI:\n
      \     *  urn:ietf:params:xml:schema:iris-transport\n   o  Contact:\n      *
      \ Andrew Newton <andy@hxr.us>\n   o  XML:\n      *  The XML Schema specified
      in Section 3\n"
    title: 10.1.  XML Namespace URN Registration
  title: 10.  IANA Considerations
- contents:
  - "11.  Security Considerations\n   Transfer protocols using XML conformant to the
    XML Schema in this\n   document and offering security properties such as authentication
    and\n   confidentiality SHOULD offer an initial message from the server to\n   the
    client using the <versions> element.  This <versions> element\n   SHOULD contain
    all relevant authentication identifiers in its\n   'authenticationId' attribute.
    \ The purpose of providing this initial\n   message is to help thwart downgrade
    attacks.\n"
  title: 11.  Security Considerations
- contents:
  - '12.  References

    '
  - contents:
    - "12.1.  Normative References\n   [1]   The Unicode Consortium, \"The Unicode
      Standard, Version 3\", ISBN\n         0-201-61633-5, 2000, <The Unicode Standard,
      Version 3>.\n   [2]   World Wide Web Consortium, \"Extensible Markup Language
      (XML)\n         1.0\", W3C XML, February 1998, <http://www.w3.org/TR/1998/REC-\n
      \        xml-19980210>.\n   [3]   World Wide Web Consortium, \"Namespaces in
      XML\", W3C XML\n         Namespaces, January 1999, <http://www.w3.org/TR/1999/REC-xml-\n
      \        names-19990114>.\n   [4]   World Wide Web Consortium, \"XML Schema
      Part 2: Datatypes\", W3C\n         XML Schema, October 2004, <http://www.w3.org/TR/xmlschema-2/>.\n
      \  [5]   World Wide Web Consortium, \"XML Schema Part 1: Structures\", W3C\n
      \        XML Schema, October 2004, <http://www.w3.org/TR/xmlschema-1/>.\n   [6]
      \  Bradner, S., \"Key words for use in RFCs to Indicate Requirement\n         Levels\",
      RFC 2119, BCP 14, March 1997.\n   [7]   Mealling, M., \"The IETF XML Registry\",
      BCP 81, RFC 3688,\n         January 2004.\n"
    title: 12.1.  Normative References
  - contents:
    - "12.2.  Informative References\n   [8]   Newton, A. and M. Sanz, \"IRIS: The
      Internet Registry\n         Information Service (IRIS) Core Protocol\", RFC
      3981, January\n         2005.\n   [9]   Newton, A., \"A Lightweight UDP Transfer
      Protocol for the\n         Internet Registry Information Service\", RFC 4993,
      August 2007.\n   [10]  Newton, A., \"XML Pipelining with Chunks for the Internet\n
      \        Registry Information Service\", RFC 4992, August 2007.\n"
    title: 12.2.  Informative References
  title: 12.  References
- contents:
  - "Appendix A.  Contributors\n   Substantive contributions to this document have
    been provided by the\n   members of the IETF's CRISP Working Group, especially
    Robert\n   Martin-Legene, Milena Caires, and David Blacka.\n"
  title: Appendix A.  Contributors
- contents:
  - "Author's Address\n   Andrew L. Newton\n   VeriSign, Inc.\n   21345 Ridgetop Circle\n
    \  Sterling, VA  20166\n   USA\n   Phone: +1 703 948 3382\n   EMail: andy@hxr.us\n
    \  URI:   http://www.verisignlabs.com/\n"
  title: Author's Address
- contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document
    is subject to the rights, licenses and restrictions\n   contained in BCP 78, and
    except as set forth therein, the authors\n   retain all their rights.\n   This
    document and the information contained herein are provided on an\n   \"AS IS\"
    basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE INTERNET ENGINEERING
    TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED, INCLUDING BUT NOT
    LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT INFRINGE
    ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
