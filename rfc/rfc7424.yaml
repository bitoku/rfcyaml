- title: __initial_text__
  contents:
  - "       Mechanisms for Optimizing Link Aggregation Group (LAG) and\n   Equal-Cost\
    \ Multipath (ECMP) Component Link Utilization in Networks\n"
- title: Abstract
  contents:
  - "Abstract\n   Demands on networking infrastructure are growing exponentially due\
    \ to\n   bandwidth-hungry applications such as rich media applications and\n \
    \  inter-data-center communications.  In this context, it is important\n   to\
    \ optimally use the bandwidth in wired networks that extensively use\n   link\
    \ aggregation groups and equal-cost multipaths as techniques for\n   bandwidth\
    \ scaling.  This document explores some of the mechanisms\n   useful for achieving\
    \ this.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7424.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \      1.1. Acronyms ...................................................4\n  \
    \    1.2. Terminology ................................................5\n   2.\
    \ Flow Categorization .............................................6\n   3. Hash-Based\
    \ Load Distribution in LAG/ECMP ........................6\n   4. Mechanisms for\
    \ Optimizing LAG/ECMP Component Link Utilization ...8\n      4.1. Differences\
    \ in LAG vs. ECMP ................................9\n      4.2. Operational Overview\
    \ ......................................10\n      4.3. Large Flow Recognition\
    \ ....................................11\n           4.3.1. Flow Identification\
    \ ................................11\n           4.3.2. Criteria and Techniques\
    \ for Large Flow\n                  Recognition ........................................12\n\
    \           4.3.3. Sampling Techniques ................................12\n  \
    \         4.3.4. Inline Data Path Measurement .......................14\n    \
    \       4.3.5. Use of Multiple Methods for Large Flow\n                  Recognition\
    \ ........................................15\n      4.4. Options for Load Rebalancing\
    \ ..............................15\n           4.4.1. Alternative Placement of\
    \ Large Flows ...............15\n           4.4.2. Redistributing Small Flows\
    \ .........................16\n           4.4.3. Component Link Protection Considerations\
    \ ...........16\n           4.4.4. Algorithms for Load Rebalancing ....................17\n\
    \           4.4.5. Example of Load Rebalancing ........................17\n  \
    \ 5. Information Model for Flow Rebalancing .........................18\n    \
    \  5.1. Configuration Parameters for Flow Rebalancing .............18\n      5.2.\
    \ System Configuration and Identification Parameters ........19\n      5.3. Information\
    \ for Alternative Placement of Large Flows ......20\n      5.4. Information for\
    \ Redistribution of Small Flows .............21\n      5.5. Export of Flow Information\
    \ ................................21\n      5.6. Monitoring Information ....................................21\n\
    \           5.6.1. Interface (Link) Utilization .......................21\n  \
    \         5.6.2. Other Monitoring Information .......................22\n   6.\
    \ Operational Considerations .....................................23\n      6.1.\
    \ Rebalancing Frequency .....................................23\n      6.2. Handling\
    \ Route Changes ....................................23\n      6.3. Forwarding\
    \ Resources ......................................23\n   7. Security Considerations\
    \ ........................................23\n   8. References .....................................................24\n\
    \      8.1. Normative References ......................................24\n  \
    \    8.2. Informative References ....................................25\n   Appendix\
    \ A.  Internet Traffic Analysis and Load-Balancing\n                Simulation\
    \ ...........................................28\n   Acknowledgements ..................................................28\n\
    \   Contributors ......................................................28\n  \
    \ Authors' Addresses ................................................29\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Networks extensively use link aggregation groups (LAGs)\
    \ [802.1AX] and\n   equal-cost multipaths (ECMPs) [RFC2991] as techniques for\
    \ capacity\n   scaling.  For the problems addressed by this document, network\n\
    \   traffic can be predominantly categorized into two traffic types:\n   long-lived\
    \ large flows and other flows.  These other flows, which\n   include long-lived\
    \ small flows, short-lived small flows, and short-\n   lived large flows, are\
    \ referred to as \"small flows\" in this document.\n   Long-lived large flows\
    \ are simply referred to as \"large flows\".\n   Stateless hash-based techniques\
    \ [ITCOM] [RFC2991] [RFC2992] [RFC6790]\n   are often used to distribute both\
    \ large flows and small flows over\n   the component links in a LAG/ECMP.  However,\
    \ the traffic may not be\n   evenly distributed over the component links due to\
    \ the traffic\n   pattern.\n   This document describes mechanisms for optimizing\
    \ LAG/ECMP component\n   link utilization when using hash-based techniques.  The\
    \ mechanisms\n   comprise the following steps: 1) recognizing large flows in a\
    \ router,\n   and 2) assigning the large flows to specific LAG/ECMP component\
    \ links\n   or redistributing the small flows when a component link on the router\n\
    \   is congested.\n   It is useful to keep in mind that in typical use cases for\
    \ these\n   mechanisms, the large flows consume a significant amount of bandwidth\n\
    \   on a link, e.g., greater than 5% of link bandwidth.  The number of\n   such\
    \ flows would necessarily be fairly small, e.g., on the order of\n   10s or 100s\
    \ per LAG/ECMP.  In other words, the number of large flows\n   is NOT expected\
    \ to be on the order of millions of flows.  Examples of\n   such large flows would\
    \ be IPsec tunnels in service provider backbone\n   networks or storage backup\
    \ traffic in data center networks.\n"
- title: 1.1.  Acronyms
  contents:
  - "1.1.  Acronyms\n   DoS:    Denial of Service\n   ECMP:   Equal-Cost Multipath\n\
    \   GRE:    Generic Routing Encapsulation\n   IPFIX:  IP Flow Information Export\n\
    \   LAG:    Link Aggregation Group\n   MPLS:   Multiprotocol Label Switching\n\
    \   NVGRE:  Network Virtualization using Generic Routing Encapsulation\n   PBR:\
    \    Policy-Based Routing\n   QoS:    Quality of Service\n   STT:    Stateless\
    \ Transport Tunneling\n   VXLAN:  Virtual eXtensible LAN\n"
- title: 1.2.  Terminology
  contents:
  - "1.2.  Terminology\n   Central management entity:\n      An entity that is capable\
    \ of monitoring information about link\n      utilization and flows in routers\
    \ across the network and may be\n      capable of making traffic-engineering decisions\
    \ for placement of\n      large flows.  It may include the functions of a collector\n\
    \      [RFC7011].\n   ECMP component link:\n      An individual next hop within\
    \ an ECMP group.  An ECMP component\n      link may itself comprise a LAG.\n \
    \  ECMP table:\n      A table that is used as the next hop of an ECMP route that\n\
    \      comprises the set of ECMP component links and the weights\n      associated\
    \ with each of those ECMP component links.  The input for\n      looking up the\
    \ table is the hash value for the packet, and the\n      weights are used to determine\
    \ which values of the hash function\n      map to a given ECMP component link.\n\
    \   Flow (large or small):\n      A sequence of packets for which ordered delivery\
    \ should be\n      maintained, e.g., packets belonging to the same TCP connection.\n\
    \   LAG component link:\n      An individual link within a LAG.  A LAG component\
    \ link is\n      typically a physical link.\n   LAG table:\n      A table that\
    \ is used as the output port, which is a LAG, that\n      comprises the set of\
    \ LAG component links and the weights\n      associated with each of those component\
    \ links.  The input for\n      looking up the table is the hash value for the\
    \ packet, and the\n      weights are used to determine which values of the hash\
    \ function\n      map to a given LAG component link.\n   Large flow(s):\n    \
    \  Refers to long-lived large flow(s).\n   Small flow(s):\n      Refers to any\
    \ of, or a combination of, long-lived small flow(s),\n      short-lived small\
    \ flows, and short-lived large flow(s).\n"
- title: 2.  Flow Categorization
  contents:
  - "2.  Flow Categorization\n   In general, based on the size and duration, a flow\
    \ can be categorized\n   into any one of the following four types, as shown in\
    \ Figure 1:\n   o  short-lived large flow (SLLF),\n   o  short-lived small flow\
    \ (SLSF),\n   o  long-lived large flow (LLLF), and\n   o  long-lived small flow\
    \ (LLSF).\n        Flow Bandwidth\n            ^\n            |--------------------|--------------------|\n\
    \            |                    |                    |\n      Large |      SLLF\
    \          |       LLLF         |\n      Flow  |                    |        \
    \            |\n            |--------------------|--------------------|\n    \
    \        |                    |                    |\n      Small |      SLSF\
    \          |       LLSF         |\n      Flow  |                    |        \
    \            |\n            +--------------------+--------------------+-->Flow\
    \ Duration\n                 Short-Lived            Long-Lived\n             \
    \    Flow                   Flow\n               Figure 1: Flow Categorization\n\
    \   In this document, as mentioned earlier, we categorize long-lived\n   large\
    \ flows as \"large flows\", and all of the others (long-lived small\n   flows,\
    \ short-lived small flows, and short-lived large flows) as\n   \"small flows\"\
    .\n"
- title: 3.  Hash-Based Load Distribution in LAG/ECMP
  contents:
  - "3.  Hash-Based Load Distribution in LAG/ECMP\n   Hash-based techniques are often\
    \ used for load balancing of traffic to\n   select among multiple available paths\
    \ within a LAG/ECMP group.  The\n   advantages of hash-based techniques for load\
    \ distribution are the\n   preservation of the packet sequence in a flow and the\
    \ real-time\n   distribution without maintaining per-flow state in the router.\
    \  Hash-\n   based techniques use a combination of fields in the packet's headers\n\
    \   to identify a flow, and the hash function computed using these fields\n  \
    \ is used to generate a unique number that identifies a link/path in a\n   LAG/ECMP\
    \ group.  The result of the hashing procedure is a many-to-one\n   mapping of\
    \ flows to component links.\n   Hash-based techniques produce good results with\
    \ respect to\n   utilization of the individual component links if:\n   o  the\
    \ traffic mix constitutes flows such that the result of the hash\n      function\
    \ across these flows is fairly uniform so that a similar\n      number of flows\
    \ is mapped to each component link,\n   o  the individual flow rates are much\
    \ smaller as compared to the link\n      capacity, and\n   o  the differences\
    \ in flow rates are not dramatic.\n   However, if one or more of these conditions\
    \ are not met, hash-based\n   techniques may result in imbalance in the loads\
    \ on individual\n   component links.\n   An example is illustrated in Figure 2.\
    \  As shown, there are two\n   routers, R1 and R2, and there is a LAG between\
    \ them that has three\n   component links (1), (2), and (3).  A total of ten flows\
    \ need to be\n   distributed across the links in this LAG.  The result of applying\
    \ the\n   hash-based technique is as follows:\n   o  Component link (1) has three\
    \ flows (two small flows and one large\n      flow), and the link utilization\
    \ is normal.\n   o  Component link (2) has three flows (three small flows and\
    \ no large\n      flows), and the link utilization is light.\n      -  The absence\
    \ of any large flow causes the component link to be\n         underutilized.\n\
    \   o  Component link (3) has four flows (two small flows and two large\n    \
    \  flows), and the link capacity is exceeded resulting in congestion.\n      -\
    \  The presence of two large flows causes congestion on this\n         component\
    \ link.\n                  +-----------+ ->     +-----------+\n              \
    \    |           | ->     |           |\n                  |           | ===>\
    \   |           |\n                  |        (1)|--------|(1)        |\n    \
    \              |           | ->     |           |\n                  |       \
    \    | ->     |           |\n                  |   (R1)    | ->     |     (R2)\
    \  |\n                  |        (2)|--------|(2)        |\n                 \
    \ |           | ->     |           |\n                  |           | ->     |\
    \           |\n                  |           | ===>   |           |\n        \
    \          |           | ===>   |           |\n                  |        (3)|--------|(3)\
    \        |\n                  |           |        |           |\n           \
    \       +-----------+        +-----------+\n            Where: ->   small flow\n\
    \                   ===> large flow\n                Figure 2: Unevenly Utilized\
    \ Component Links\n   This document presents mechanisms for addressing the imbalance\
    \ in\n   load distribution resulting from commonly used hash-based techniques\n\
    \   for LAG/ECMP that are shown in the above example.  The mechanisms use\n  \
    \ large flow awareness to compensate for the imbalance in load\n   distribution.\n"
- title: 4.  Mechanisms for Optimizing LAG/ECMP Component Link Utilization
  contents:
  - "4.  Mechanisms for Optimizing LAG/ECMP Component Link Utilization\n   The suggested\
    \ mechanisms in this document are local optimization\n   solutions; they are local\
    \ in the sense that both the identification\n   of large flows and rebalancing\
    \ of the load can be accomplished\n   completely within individual routers in\
    \ the network without the need\n   for interaction with other routers.\n   This\
    \ approach may not yield a global optimization of the placement of\n   large flows\
    \ across multiple routers in a network, which may be\n   desirable in some networks.\
    \  On the other hand, a local approach may\n   be adequate for some environments\
    \ for the following reasons:\n   1)  Different links within a network experience\
    \ different levels of\n       utilization; thus, a \"targeted\" solution is needed\
    \ for those hot\n       spots in the network.  An example is the utilization of\
    \ a LAG\n       between two routers that needs to be optimized.\n   2)  Some networks\
    \ may lack end-to-end visibility, e.g., when a\n       certain network, under\
    \ the control of a given operator, is a\n       transit network for traffic from\
    \ other networks that are not\n       under the control of the same operator.\n"
- title: 4.1.  Differences in LAG vs. ECMP
  contents:
  - "4.1.  Differences in LAG vs. ECMP\n   While the mechanisms explained herein are\
    \ applicable to both LAGs and\n   ECMP groups, it is useful to note that there\
    \ are some key differences\n   between the two that may impact how effective the\
    \ mechanisms are.\n   This relates, in part, to the localized information with\
    \ which the\n   mechanisms are intended to operate.\n   A LAG is usually established\
    \ across links that are between two\n   adjacent routers.  As a result, the scope\
    \ of the problem of\n   optimizing the bandwidth utilization on the component\
    \ links is fairly\n   narrow.  It simply involves rebalancing the load across\
    \ the component\n   links between these two routers, and there is no impact whatsoever\
    \ to\n   other parts of the network.  The scheme works equally well for\n   unicast\
    \ and multicast flows.\n   On the other hand, with ECMP, redistributing the load\
    \ across\n   component links that are part of the ECMP group may impact traffic\n\
    \   patterns at all of the routers that are downstream of the given\n   router\
    \ between itself and the destination.  The local optimization\n   may result in\
    \ congestion at a downstream node.  (In its simplest\n   form, an ECMP group may\
    \ be used to distribute traffic on component\n   links that are between two adjacent\
    \ routers, and in that case, the\n   ECMP group is no different than a LAG for\
    \ the purpose of this\n   discussion.  It should be noted that an ECMP component\
    \ link may\n   itself comprise a LAG, in which case the scheme may be further\n\
    \   applied to the component links within the LAG.)\n   To demonstrate the limitations\
    \ of local optimization, consider a two-\n   level Clos network topology as shown\
    \ in Figure 3 with three leaf\n   routers (L1, L2, and L3) and two spine routers\
    \ (S1 and S2).  Assume\n   all of the links are 10 Gbps.\n   Let L1 have two flows\
    \ of 4 Gbps each towards L3, and let L2 have one\n   flow of 7 Gbps also towards\
    \ L3.  If L1 balances the load optimally\n   between S1 and S2, and L2 sends the\
    \ flow via S1, then the downlink\n   from S1 to L3 would get congested, resulting\
    \ in packet discards.  On\n   the other hand, if L1 had sent both its flows towards\
    \ S1 and L2 had\n   sent its flow towards S2, there would have been no congestion\
    \ at\n   either S1 or S2.\n                    +-----+     +-----+\n         \
    \           | S1  |     | S2  |\n                    +-----+     +-----+\n   \
    \                  / \\ \\       / /\\\n                    / +---------+ /  \\\
    \n                   / /  \\  \\     /    \\\n                  / /    \\  +------+\
    \   \\\n                 / /      \\    /    \\   \\\n              +-----+  \
    \  +-----+   +-----+\n              | L1  |    | L2  |   | L3  |\n           \
    \   +-----+    +-----+   +-----+\n              Figure 3: Two-Level Clos Network\n\
    \   The other issue with applying this scheme to ECMP groups is that it\n   may\
    \ not apply equally to unicast and multicast traffic because of the\n   way multicast\
    \ trees are constructed.\n   Finally, it is possible for a single physical link\
    \ to participate as\n   a component link in multiple ECMP groups, whereas with\
    \ LAGs, a link\n   can participate as a component link of only one LAG.\n"
- title: 4.2.  Operational Overview
  contents:
  - "4.2.  Operational Overview\n   The various steps in optimizing LAG/ECMP component\
    \ link utilization\n   in networks are detailed below:\n   Step 1:\n      This\
    \ step involves recognizing large flows in routers and\n      maintaining the\
    \ mapping for each large flow to the component link\n      that it uses.  Recognition\
    \ of large flows is explained in Section\n      4.3.\n   Step 2:\n      The egress\
    \ component links are periodically scanned for link\n      utilization, and the\
    \ imbalance for the LAG/ECMP group is\n      monitored.  If the imbalance exceeds\
    \ a certain threshold, then\n      rebalancing is triggered.  Measurement of the\
    \ imbalance is\n      discussed further in Section 5.1.  In addition to the imbalance,\n\
    \      further criteria (such as the maximum utilization of any of the\n     \
    \ component links) may also be used to determine whether or not to\n      trigger\
    \ rebalancing.  The use of sampling techniques for the\n      measurement of egress\
    \ component link utilization, including the\n      issues of depending on ingress\
    \ sampling for these measurements,\n      are discussed in Section 4.3.3.\n  \
    \ Step 3:\n      As a part of rebalancing, the operator can choose to rebalance\
    \ the\n      large flows by placing them on lightly loaded component links of\n\
    \      the LAG/ECMP group, redistribute the small flows on the congested\n   \
    \   link to other component links of the group, or a combination of\n      both.\n\
    \   All of the steps identified above can be done locally within the\n   router\
    \ itself or could involve the use of a central management\n   entity.\n   Providing\
    \ large flow information to a central management entity\n   provides the capability\
    \ to globally optimize flow distribution as\n   described in Section 4.1.  Consider\
    \ the following example.  A router\n   may have three ECMP next hops that lead\
    \ down paths P1, P2, and P3.  A\n   couple of hops downstream on path P1, there\
    \ may be a congested link,\n   while paths P2 and P3 may be underutilized.  This\
    \ is something that\n   the local router does not have visibility into.  With\
    \ the help of a\n   central management entity, the operator could redistribute\
    \ some of\n   the flows from P1 to P2 and/or P3, resulting in a more optimized\
    \ flow\n   of traffic.\n   The steps described above are especially useful when\
    \ bundling links\n   of different bandwidths, e.g., 10 Gbps and 100 Gbps as described\
    \ in\n   [RFC7226].\n"
- title: 4.3.  Large Flow Recognition
  contents:
  - '4.3.  Large Flow Recognition

    '
- title: 4.3.1.  Flow Identification
  contents:
  - "4.3.1.  Flow Identification\n   Flows are typically identified using one or more\
    \ fields from the\n   packet header, for example:\n   o  Layer 2: Source Media\
    \ Access Control (MAC) address, destination\n      MAC address, VLAN ID.\n   o\
    \  IP header: IP protocol, IP source address, IP destination address,\n      flow\
    \ label (IPv6 only).\n   o  Transport protocol header: Source port number, destination\
    \ port\n      number.  These apply to protocols such as TCP, UDP, and the Stream\n\
    \      Control Transmission Protocol (SCTP).\n   o  MPLS labels.\n   For tunneling\
    \ protocols like Generic Routing Encapsulation (GRE)\n   [RFC2784], Virtual eXtensible\
    \ LAN (VXLAN) [RFC7348], Network\n   Virtualization using Generic Routing Encapsulation\
    \ (NVGRE) [NVGRE],\n   Stateless Transport Tunneling (STT) [STT], Layer 2 Tunneling\
    \ Protocol\n   (L2TP) [RFC3931], etc., flow identification is possible based on\n\
    \   inner and/or outer headers as well as fields introduced by the tunnel\n  \
    \ header, as any or all such fields may be used for load balancing\n   decisions\
    \ [RFC5640].\n   The above list is not exhaustive.\n   The mechanisms described\
    \ in this document are agnostic to the fields\n   that are used for flow identification.\n\
    \   This method of flow identification is consistent with that of IPFIX\n   [RFC7011].\n"
- title: 4.3.2.  Criteria and Techniques for Large Flow Recognition
  contents:
  - "4.3.2.  Criteria and Techniques for Large Flow Recognition\n   From the perspective\
    \ of bandwidth and time duration, in order to\n   recognize large flows, we define\
    \ an observation interval and measure\n   the bandwidth of the flow over that\
    \ interval.  A flow that exceeds a\n   certain minimum bandwidth threshold over\
    \ that observation interval\n   would be considered a large flow.\n   The two\
    \ parameters -- the observation interval and the minimum\n   bandwidth threshold\
    \ over that observation interval -- should be\n   programmable to facilitate handling\
    \ of different use cases and\n   traffic characteristics.  For example, a flow\
    \ that is at or above 10%\n   of link bandwidth for a time period of at least\
    \ one second could be\n   declared a large flow [DEVOFLOW].\n   In order to avoid\
    \ excessive churn in the rebalancing, once a flow has\n   been recognized as a\
    \ large flow, it should continue to be recognized\n   as a large flow for as long\
    \ as the traffic received during an\n   observation interval exceeds some fraction\
    \ of the bandwidth\n   threshold, for example, 80% of the bandwidth threshold.\n\
    \   Various techniques to recognize a large flow are described in\n   Sections\
    \ 4.3.3, 4.3.4, and 4.3.5.\n"
- title: 4.3.3.  Sampling Techniques
  contents:
  - "4.3.3.  Sampling Techniques\n   A number of routers support sampling techniques\
    \ such as sFlow\n   [sFlow-v5] [sFlow-LAG], Packet Sampling (PSAMP) [RFC5475],\
    \ and\n   NetFlow Sampling [RFC3954].  For the purpose of large flow\n   recognition,\
    \ sampling needs to be enabled on all of the egress ports\n   in the router where\
    \ such measurements are desired.\n   Using sFlow as an example, processing in\
    \ an sFlow collector can\n   provide an approximate indication of the mapping\
    \ of large flows to\n   each of the component links in each LAG/ECMP group.  Assuming\n\
    \   sufficient control plane resources are available, it is possible to\n   implement\
    \ this part of the collector function in the control plane of\n   the router to\
    \ reduce dependence on a central management entity.\n   If egress sampling is\
    \ not available, ingress sampling can suffice\n   since the central management\
    \ entity used by the sampling technique\n   typically has visibility across multiple\
    \ routers in a network and can\n   use the samples from an immediately downstream\
    \ router to make\n   measurements for egress traffic at the local router.\n  \
    \ The option of using ingress sampling for this purpose may not be\n   available\
    \ if the downstream router is under the control of a\n   different operator or\
    \ if the downstream device does not support\n   sampling.\n   Alternatively, since\
    \ sampling techniques require that the sample be\n   annotated with the packet's\
    \ egress port information, ingress sampling\n   may suffice.  However, this means\
    \ that sampling would have to be\n   enabled on all ports, rather than only on\
    \ those ports where such\n   monitoring is desired.  There is one situation in\
    \ which this approach\n   may not work.  If there are tunnels that originate from\
    \ the given\n   router and if the resulting tunnel comprises the large flow, then\n\
    \   this cannot be deduced from ingress sampling at the given router.\n   Instead,\
    \ for this scenario, if egress sampling is unavailable, then\n   ingress sampling\
    \ from the downstream router must be used.\n   To illustrate the use of ingress\
    \ versus egress sampling, we refer to\n   Figure 2.  Since we are looking at rebalancing\
    \ flows at R1, we would\n   need to enable egress sampling on ports (1), (2),\
    \ and (3) on R1.  If\n   egress sampling is not available and if R2 is also under\
    \ the control\n   of the same administrator, enabling ingress sampling on R2's\
    \ ports\n   (1), (2), and (3) would also work, but it would necessitate the\n\
    \   involvement of a central management entity in order for R1 to obtain\n   large\
    \ flow information for each of its links.  Finally, R1 can only\n   enable ingress\
    \ sampling on all of its ports (not just the ports that\n   are part of the LAG/ECMP\
    \ group being monitored), and that would\n   suffice if the sampling technique\
    \ annotates the samples with the\n   egress port information.\n   The advantages\
    \ and disadvantages of sampling techniques are as\n   follows.\n   Advantages:\n\
    \   o  Supported in most existing routers.\n   o  Requires minimal router resources.\n\
    \   Disadvantage:\n   o  In order to minimize the error inherent in sampling,\
    \ there is a\n      minimum delay for the recognition time of large flows, and\
    \ in the\n      time that it takes to react to this information.\n   With sampling,\
    \ the detection of large flows can be done on the order\n   of one second [DEVOFLOW].\
    \  A discussion on determining the\n   appropriate sampling frequency is available\
    \ in [SAMP-BASIC].\n"
- title: 4.3.4.  Inline Data Path Measurement
  contents:
  - "4.3.4.  Inline Data Path Measurement\n   Implementations may perform recognition\
    \ of large flows by performing\n   measurements on traffic in the data path of\
    \ a router.  Such an\n   approach would be expected to operate at the interface\
    \ speed on every\n   interface, accounting for all packets processed by the data\
    \ path of\n   the router.  An example of such an approach is described in IPFIX\n\
    \   [RFC5470].\n   Using inline data path measurement, a faster and more accurate\n\
    \   indication of large flows mapped to each of the component links in a\n   LAG/ECMP\
    \ group may be possible (as compared to the sampling-based\n   approach).\n  \
    \ The advantages and disadvantages of inline data path measurement are\n   as\
    \ follows:\n   Advantages:\n   o  As link speeds get higher, sampling rates are\
    \ typically reduced to\n      keep the number of samples manageable, which places\
    \ a lower bound\n      on the detection time.  With inline data path measurement,\
    \ large\n      flows can be recognized in shorter windows on higher link speeds\n\
    \      since every packet is accounted for [NDTM].\n   o  Inline data path measurement\
    \ eliminates the potential dependence\n      on a central management entity for\
    \ large flow recognition.\n   Disadvantage:\n   o  Inline data path measurement\
    \ is more resource intensive in terms\n      of the table sizes required for monitoring\
    \ all flows.\n   As mentioned earlier, the observation interval for determining\
    \ a\n   large flow and the bandwidth threshold for classifying a flow as a\n \
    \  large flow should be programmable parameters in a router.\n   The implementation\
    \ details of inline data path measurement of large\n   flows is vendor dependent\
    \ and beyond the scope of this document.\n"
- title: 4.3.5.  Use of Multiple Methods for Large Flow Recognition
  contents:
  - "4.3.5.  Use of Multiple Methods for Large Flow Recognition\n   It is possible\
    \ that a router may have line cards that support a\n   sampling technique while\
    \ other line cards support inline data path\n   measurement.  As long as there\
    \ is a way for the router to reliably\n   determine the mapping of large flows\
    \ to component links of a LAG/ECMP\n   group, it is acceptable for the router\
    \ to use more than one method\n   for large flow recognition.\n   If both methods\
    \ are supported, inline data path measurement may be\n   preferable because of\
    \ its speed of detection [FLOW-ACC].\n"
- title: 4.4.  Options for Load Rebalancing
  contents:
  - "4.4.  Options for Load Rebalancing\n   The following subsections describe suggested\
    \ techniques for load\n   balancing.  Equipment vendors may implement more than\
    \ one technique,\n   including those not described in this document, and allow\
    \ the\n   operator to choose between them.\n   Note that regardless of the method\
    \ used, perfect rebalancing of large\n   flows may not be possible since flows\
    \ arrive and depart at different\n   times.  Also, any flows that are moved from\
    \ one component link to\n   another may experience momentary packet reordering.\n"
- title: 4.4.1.  Alternative Placement of Large Flows
  contents:
  - "4.4.1.  Alternative Placement of Large Flows\n   Within a LAG/ECMP group, member\
    \ component links with the least\n   average link utilization are identified.\
    \  Some large flow(s) from the\n   heavily loaded component links are then moved\
    \ to those lightly loaded\n   member component links using a PBR rule in the ingress\
    \ processing\n   element(s) in the routers.\n   With this approach, only certain\
    \ large flows are subjected to\n   momentary flow reordering.\n   Moving a large\
    \ flow will increase the utilization of the link that it\n   is moved to, potentially\
    \ once again creating an imbalance in the\n   utilization across the component\
    \ links.  Therefore, when moving a\n   large flow, care must be taken to account\
    \ for the existing load and\n   the future load after the large flow has been\
    \ moved.  Further, the\n   appearance of new large flows may require a rearrangement\
    \ of the\n   placement of existing flows.\n   Consider a case where there is a\
    \ LAG compromising four 10 Gbps\n   component links and there are four large flows,\
    \ each of 1 Gbps.\n   These flows are each placed on one of the component links.\n\
    \   Subsequently, a fifth large flow of 2 Gbps is recognized, and to\n   maintain\
    \ equitable load distribution, it may require placement of one\n   of the existing\
    \ 1 Gbps flow to a different component link.  This\n   would still result in some\
    \ imbalance in the utilization across the\n   component links.\n"
- title: 4.4.2.  Redistributing Small Flows
  contents:
  - "4.4.2.  Redistributing Small Flows\n   Some large flows may consume the entire\
    \ bandwidth of the component\n   link(s).  In this case, it would be desirable\
    \ for the small flows to\n   not use the congested component link(s).\n   o  The\
    \ LAG/ECMP table is modified to include only non-congested\n      component link(s).\
    \  Small flows hash into this table to be mapped\n      to a destination component\
    \ link.  Alternatively, if certain\n      component links are heavily loaded but\
    \ not congested, the output\n      of the hash function can be adjusted to account\
    \ for large flow\n      loading on each of the component links.\n   o  The PBR\
    \ rules for large flows (refer to Section 4.4.1) must have\n      strict precedence\
    \ over the LAG/ECMP table lookup result.\n   This method works on some existing\
    \ router hardware.  The idea is to\n   prevent, or reduce the probability, that\
    \ a small flow hashes into the\n   congested component link(s).\n   With this\
    \ approach, the small flows that are moved would be subject\n   to reordering.\n"
- title: 4.4.3.  Component Link Protection Considerations
  contents:
  - "4.4.3.  Component Link Protection Considerations\n   If desired, certain component\
    \ links may be reserved for link\n   protection.  These reserved component links\
    \ are not used for any\n   flows in the absence of any failures.  When there is\
    \ a failure of one\n   or more component links, all the flows on the failed component\n\
    \   link(s) are moved to the reserved component link(s).  The mapping\n   table\
    \ of large flows to component links simply replaces the failed\n   component link\
    \ with the reserved component link.  Likewise, the\n   LAG/ECMP table replaces\
    \ the failed component link with the reserved\n   component link.\n"
- title: 4.4.4.  Algorithms for Load Rebalancing
  contents:
  - "4.4.4.  Algorithms for Load Rebalancing\n   Specific algorithms for placement\
    \ of large flows are out of the scope\n   of this document.  One possibility is\
    \ to formulate the problem for\n   large flow placement as the well-known bin-packing\
    \ problem and make\n   use of the various heuristics that are available for that\
    \ problem\n   [BIN-PACK].\n"
- title: 4.4.5.  Example of Load Rebalancing
  contents:
  - "4.4.5.  Example of Load Rebalancing\n   Optimizing LAG/ECMP component utilization\
    \ for the use case in Figure\n   2 is depicted below in Figure 4.  The large flow\
    \ rebalancing\n   explained in Section 4.4.1 is used.  The improved link utilization\
    \ is\n   as follows:\n   o  Component link (1) has three flows (two small flows\
    \ and one large\n      flow), and the link utilization is normal.\n   o  Component\
    \ link (2) has four flows (three small flows and one large\n      flow), and the\
    \ link utilization is normal now.\n   o  Component link (3) has three flows (two\
    \ small flows and one large\n      flow), and the link utilization is normal now.\n\
    \                +-----------+ ->     +-----------+\n                |       \
    \    | ->     |           |\n                |           | ===>   |          \
    \ |\n                |        (1)|--------|(1)        |\n                |   \
    \        |        |           |\n                |           | ===>   |      \
    \     |\n                |           | ->     |           |\n                |\
    \           | ->     |           |\n                |   (R1)    | ->     |   \
    \  (R2)  |\n                |        (2)|--------|(2)        |\n             \
    \   |           |        |           |\n                |           | ->     |\
    \           |\n                |           | ->     |           |\n          \
    \      |           | ===>   |           |\n                |        (3)|--------|(3)\
    \        |\n                |           |        |           |\n             \
    \   +-----------+        +-----------+\n          Where: ->   small flow\n   \
    \              ===> large flow\n              Figure 4: Evenly Utilized Composite\
    \ Links\n   Basically, the use of the mechanisms described in Section 4.4.1\n\
    \   resulted in a rebalancing of flows where one of the large flows on\n   component\
    \ link (3), which was previously congested, was moved to\n   component link (2),\
    \ which was previously underutilized.\n"
- title: 5.  Information Model for Flow Rebalancing
  contents:
  - "5.  Information Model for Flow Rebalancing\n   In order to support flow rebalancing\
    \ in a router from an external\n   system, the exchange of some information is\
    \ necessary between the\n   router and the external system.  This section provides\
    \ an exemplary\n   information model covering the various components needed for\
    \ this\n   purpose.  The model is intended to be informational and may be used\n\
    \   as a guide for the development of a data model.\n"
- title: 5.1.  Configuration Parameters for Flow Rebalancing
  contents:
  - "5.1.  Configuration Parameters for Flow Rebalancing\n   The following parameters\
    \ are required for configuration of this\n   feature:\n   o  Large flow recognition\
    \ parameters:\n      -  Observation interval: The observation interval is the\
    \ time\n         period in seconds over which packet arrivals are observed for\n\
    \         the purpose of large flow recognition.\n      -  Minimum bandwidth threshold:\
    \ The minimum bandwidth threshold\n         would be configured as a percentage\
    \ of link speed and\n         translated into a number of bytes over the observation\n\
    \         interval.  A flow for which the number of bytes received over a\n  \
    \       given observation interval exceeds this number would be\n         recognized\
    \ as a large flow.\n      -  Minimum bandwidth threshold for large flow maintenance:\
    \ The\n         minimum bandwidth threshold for large flow maintenance is used\n\
    \         to provide hysteresis for large flow recognition.  Once a flow\n   \
    \      is recognized as a large flow, it continues to be recognized as\n     \
    \    a large flow until it falls below this threshold.  This is also\n       \
    \  configured as a percentage of link speed and is typically lower\n         than\
    \ the minimum bandwidth threshold defined above.\n   o  Imbalance threshold: A\
    \ measure of the deviation of the component\n      link utilizations from the\
    \ utilization of the overall LAG/ECMP\n      group.  Since component links can\
    \ be different speeds, the\n      imbalance can be computed as follows.  Let the\
    \ utilization of each\n      component link in a LAG/ECMP group with n links of\
    \ speed b_1, b_2\n      .. b_n be u_1, u_2 .. u_n.  The mean utilization is computed\
    \ as\n      u_ave = [ (u_1 * b_1) + (u_2 * b_2) + .. + (u_n * b_n) ] /\n     \
    \         [b_1 + b_2 + .. + b_n].\n      The imbalance is then computed as\n \
    \     max_{i=1..n} | u_i - u_ave |.\n   o  Rebalancing interval: The minimum amount\
    \ of time between\n      rebalancing events.  This parameter ensures that rebalancing\
    \ is\n      not invoked too frequently as it impacts packet ordering.\n   These\
    \ parameters may be configured on a system-wide basis or may\n   apply to an individual\
    \ LAG/ECMP group.  They may be applied to an\n   ECMP group, provided that the\
    \ component links are not shared with any\n   other ECMP group.\n"
- title: 5.2.  System Configuration and Identification Parameters
  contents:
  - "5.2.  System Configuration and Identification Parameters\n   The following parameters\
    \ are useful for router configuration and\n   operation when using the mechanisms\
    \ in this document.\n   o  IP address: The IP address of a specific router that\
    \ the feature\n      is being configured on or that the large flow placement is\
    \ being\n      applied to.\n   o  LAG ID: Identifies the LAG on a given router.\
    \  The LAG ID may be\n      required when configuring this feature (to apply a\
    \ specific set of\n      large flow identification parameters to the LAG) and\
    \ will be\n      required when specifying flow placement to achieve the desired\n\
    \      rebalancing.\n   o  Component Link ID: Identifies the component link within\
    \ a LAG or\n      ECMP group.  This is required when specifying flow placement\
    \ to\n      achieve the desired rebalancing.\n   o  Component Link Weight: The\
    \ relative weight to be applied to\n      traffic for a given component link when\
    \ using hash-based\n      techniques for load distribution.\n   o  ECMP group:\
    \ Identifies a particular ECMP group.  The ECMP group\n      may be required when\
    \ configuring this feature (to apply a specific\n      set of large flow identification\
    \ parameters to the ECMP group) and\n      will be required when specifying flow\
    \ placement to achieve the\n      desired rebalancing.  We note that multiple\
    \ ECMP groups can share\n      an overlapping set (or non-overlapping subset)\
    \ of component links.\n      This document does not deal with the complexity of\
    \ addressing such\n      configurations.\n   The feature may be configured globally\
    \ for all LAGs and/or for all\n   ECMP groups, or it may be configured specifically\
    \ for a given LAG or\n   ECMP group.\n"
- title: 5.3.  Information for Alternative Placement of Large Flows
  contents:
  - "5.3.  Information for Alternative Placement of Large Flows\n   In cases where\
    \ large flow recognition is handled by a central\n   management entity (see Section\
    \ 4.3.3), an information model for flows\n   is required to allow the import of\
    \ large flow information to the\n   router.\n   Typical fields used for identifying\
    \ large flows were discussed in\n   Section 4.3.1.  The IPFIX information model\
    \ [RFC7012] can be\n   leveraged for large flow identification.\n   Large flow\
    \ placement is achieved by specifying the relevant flow\n   information along\
    \ with the following:\n   o  For LAG: router's IP address, LAG ID, LAG component\
    \ link ID.\n   o  For ECMP: router's IP address, ECMP group, ECMP component link\
    \ ID.\n   In the case where the ECMP component link itself comprises a LAG, we\n\
    \   would have to specify the parameters for both the ECMP group as well\n   as\
    \ the LAG to which the large flow is being directed.\n"
- title: 5.4.  Information for Redistribution of Small Flows
  contents:
  - "5.4.  Information for Redistribution of Small Flows\n   Redistribution of small\
    \ flows is done using the following:\n   o  For LAG: The LAG ID and the component\
    \ link IDs along with the\n      relative weight of traffic to be assigned to\
    \ each component link\n      ID are required.\n   o  For ECMP: The ECMP group\
    \ and the ECMP next hop along with the\n      relative weight of traffic to be\
    \ assigned to each ECMP next hop\n      are required.\n   It is possible to have\
    \ an ECMP next hop that itself comprises a LAG.\n   In that case, we would have\
    \ to specify the new weights for both the\n   ECMP component links and the LAG\
    \ component links.\n   In the case where an ECMP component link itself comprises\
    \ a LAG, we\n   would have to specify new weights for both the component links\
    \ within\n   the ECMP group as well as the component links within the LAG.\n"
- title: 5.5.  Export of Flow Information
  contents:
  - "5.5.  Export of Flow Information\n   Exporting large flow information is required\
    \ when large flow\n   recognition is being done on a router but the decision to\
    \ rebalance\n   is being made in a central management entity.  Large flow information\n\
    \   includes flow identification and the component link ID that the flow\n   is\
    \ currently assigned to.  Other information such as flow QoS and\n   bandwidth\
    \ may be exported too.\n   The IPFIX information model [RFC7012] can be leveraged\
    \ for large flow\n   identification.\n"
- title: 5.6.  Monitoring Information
  contents:
  - '5.6.  Monitoring Information

    '
- title: 5.6.1.  Interface (Link) Utilization
  contents:
  - "5.6.1.  Interface (Link) Utilization\n   The incoming bytes (ifInOctets), outgoing\
    \ bytes (ifOutOctets), and\n   interface speed (ifSpeed) can be obtained, for\
    \ example, from the\n   Interfaces table (ifTable) in the MIB module defined in\
    \ [RFC1213].\n   The link utilization can then be computed as follows:\n   Incoming\
    \ link utilization = (delta_ifInOctets * 8) / (ifSpeed * T)\n   Outgoing link\
    \ utilization = (delta_ifOutOctets * 8) / (ifSpeed * T)\n   Where T is the interval\
    \ over which the utilization is being measured,\n   delta_ifInOctets is the change\
    \ in ifInOctets over that interval, and\n   delta_ifOutOctets is the change in\
    \ ifOutOctets over that interval.\n   For high-speed Ethernet links, the etherStatsHighCapacityTable\
    \ in the\n   MIB module defined in [RFC3273] can be used.\n   Similar results\
    \ may be achieved using the corresponding objects of\n   other interface management\
    \ data models such as YANG [RFC7223] if\n   those are used instead of MIBs.\n\
    \   For scalability, it is recommended to use the counter push mechanism\n   in\
    \ [sFlow-v5] for the interface counters.  Doing so would help avoid\n   counter\
    \ polling through the MIB interface.\n   The outgoing link utilization of the\
    \ component links within a\n   LAG/ECMP group can be used to compute the imbalance\
    \ (see Section 5.1)\n   for the LAG/ECMP group.\n"
- title: 5.6.2.  Other Monitoring Information
  contents:
  - "5.6.2.  Other Monitoring Information\n   Additional monitoring information that\
    \ is useful includes:\n   o  Number of times rebalancing was done.\n   o  Time\
    \ since the last rebalancing event.\n   o  The number of large flows currently\
    \ rebalanced by the scheme.\n   o  A list of the large flows that have been rebalanced\
    \ including\n      -  the rate of each large flow at the time of the last rebalancing\n\
    \         for that flow,\n      -  the time that rebalancing was last performed\
    \ for the given\n         large flow, and\n      -  the interfaces that the large\
    \ flows was (re)directed to.\n   o  The settings for the weights of the interfaces\
    \ within a LAG/ECMP\n      group used by the small flows that depend on hashing.\n"
- title: 6.  Operational Considerations
  contents:
  - '6.  Operational Considerations

    '
- title: 6.1.  Rebalancing Frequency
  contents:
  - "6.1.  Rebalancing Frequency\n   Flows should be rebalanced only when the imbalance\
    \ in the utilization\n   across component links exceeds a certain threshold. \
    \ Frequent\n   rebalancing to achieve precise equitable utilization across component\n\
    \   links could be counterproductive as it may result in moving flows\n   back\
    \ and forth between the component links, impacting packet ordering\n   and system\
    \ stability.  This applies regardless of whether large flows\n   or small flows\
    \ are redistributed.  It should be noted that reordering\n   is a concern for\
    \ TCP flows with even a few packets because three out-\n   of-order packets would\
    \ trigger sufficient duplicate ACKs to the\n   sender, resulting in a retransmission\
    \ [RFC5681].\n   The operator would have to experiment with various values of\
    \ the\n   large flow recognition parameters (minimum bandwidth threshold,\n  \
    \ minimum bandwidth threshold for large flow maintenance, and\n   observation\
    \ interval) and the imbalance threshold across component\n   links to tune the\
    \ solution for their environment.\n"
- title: 6.2.  Handling Route Changes
  contents:
  - "6.2.  Handling Route Changes\n   Large flow rebalancing must be aware of any\
    \ changes to the Forwarding\n   Information Base (FIB).  In cases where the next\
    \ hop of a route no\n   longer to points to the LAG or to an ECMP group, any PBR\
    \ entries\n   added as described in Sections 4.4.1 and 4.4.2 must be withdrawn\
    \ in\n   order to avoid the creation of forwarding loops.\n"
- title: 6.3.  Forwarding Resources
  contents:
  - "6.3.  Forwarding Resources\n   Hash-based techniques used for load balancing\
    \ with LAG/ECMP are\n   usually stateless.  The mechanisms described in this document\
    \ require\n   additional resources in the forwarding plane of routers for creating\n\
    \   PBR rules that are capable of overriding the forwarding decision from\n  \
    \ the hash-based approach.  These resources may limit the number of\n   flows\
    \ that can be rebalanced and may also impact the latency\n   experienced by packets\
    \ due to the additional lookups that are\n   required.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   This document does not directly impact the security\
    \ of the Internet\n   infrastructure or its applications.  In fact, it could help\
    \ if there\n   is a DoS attack pattern that causes a hash imbalance resulting\
    \ in\n   heavy overloading of large flows to certain LAG/ECMP component links.\n\
    \   An attacker with knowledge of the large flow recognition algorithm\n   and\
    \ any stateless distribution method can generate flows that are\n   distributed\
    \ in a way that overloads a specific path.  This could be\n   used to cause the\
    \ creation of PBR rules that exhaust the available\n   PBR rule capacity on routers\
    \ in the network.  If PBR rules are\n   consequently discarded, this could result\
    \ in congestion on the\n   attacker-selected path.  Alternatively, tracking large\
    \ numbers of PBR\n   rules could result in performance degradation.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [802.1AX]    IEEE, \"IEEE Standard for Local and\
    \ metropolitan area\n                networks - Link Aggregation\", IEEE Std 802.1AX-2008,\n\
    \                2008.\n   [RFC2991]    Thaler, D. and C. Hopps, \"Multipath Issues\
    \ in Unicast\n                and Multicast Next-Hop Selection\", RFC 2991, November\n\
    \                2000, <http://www.rfc-editor.org/info/rfc2991>.\n   [RFC7011]\
    \    Claise, B., Ed., Trammell, B., Ed., and P. Aitken,\n                \"Specification\
    \ of the IP Flow Information Export (IPFIX)\n                Protocol for the\
    \ Exchange of Flow Information\", STD 77,\n                RFC 7011, September\
    \ 2013,\n                <http://www.rfc-editor.org/info/rfc7011>.\n   [RFC7012]\
    \    Claise, B., Ed., and B. Trammell, Ed., \"Information\n                Model\
    \ for IP Flow Information Export (IPFIX)\", RFC 7012,\n                September\
    \ 2013,\n                <http://www.rfc-editor.org/info/rfc7012>.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [BIN-PACK]   Coffman, Jr., E., Garey, M., and\
    \ D. Johnson.\n                \"Approximation Algorithms for Bin-Packing -- An\
    \ Updated\n                Survey\" (in \"Algorithm Design for Computer System\n\
    \                Design\"), Springer, 1984.\n   [CAIDA]      \"Caida Traffic Analysis\
    \ Research\",\n                <http://www.caida.org/research/traffic-analysis/>.\n\
    \   [DEVOFLOW]   Mogul, J., Tourrilhes, J., Yalagandula, P., Sharma, P.,\n   \
    \             Curtis, R., and S. Banerjee, \"DevoFlow: Cost-Effective\n      \
    \          Flow Management for High Performance Enterprise\n                Networks\"\
    , Proceedings of the ACM SIGCOMM, 2010.\n   [FLOW-ACC]   Zseby, T., Hirsch, T.,\
    \ and B. Claise, \"Packet Sampling\n                for Flow Accounting: Challenges\
    \ and Limitations\",\n                Proceedings of the 9th international Passive\
    \ and Active\n                Measurement Conference, 2008.\n   [ITCOM]      Jo,\
    \ J., Kim, Y., Chao, H., and F. Merat, \"Internet\n                traffic load\
    \ balancing using dynamic hashing with flow\n                volume\", SPIE ITCOM,\
    \ 2002.\n   [NDTM]       Estan, C. and G. Varghese, \"New Directions in Traffic\n\
    \                Measurement and Accounting\", Proceedings of ACM SIGCOMM,\n \
    \               August 2002.\n   [NVGRE]      Garg, P. and Y. Wang, \"NVGRE: Network\
    \ Virtualization\n                using Generic Routing Encapsulation\", Work\
    \ in Progress,\n                draft-sridharan-virtualization-nvgre-07, November\
    \ 2014.\n   [RFC2784]    Farinacci, D., Li, T., Hanks, S., Meyer, D., and P.\n\
    \                Traina, \"Generic Routing Encapsulation (GRE)\", RFC 2784,\n\
    \                March 2000, <http://www.rfc-editor.org/info/rfc2784>.\n   [RFC6790]\
    \    Kompella, K., Drake, J., Amante, S., Henderickx, W., and\n              \
    \  L. Yong, \"The Use of Entropy Labels in MPLS Forwarding\",\n              \
    \  RFC 6790, November 2012,\n                <http://www.rfc-editor.org/info/rfc6790>.\n\
    \   [RFC1213]    McCloghrie, K. and M. Rose, \"Management Information Base\n \
    \               for Network Management of TCP/IP-based internets:\n          \
    \      MIB-II\", STD 17, RFC 1213, March 1991,\n                <http://www.rfc-editor.org/info/rfc1213>.\n\
    \   [RFC2992]    Hopps, C., \"Analysis of an Equal-Cost Multi-Path\n         \
    \       Algorithm\", RFC 2992, November 2000,\n                <http://www.rfc-editor.org/info/rfc2992>.\n\
    \   [RFC3273]    Waldbusser, S., \"Remote Network Monitoring Management\n    \
    \            Information Base for High Capacity Networks\", RFC 3273,\n      \
    \          July 2002, <http://www.rfc-editor.org/info/rfc3273>.\n   [RFC3931]\
    \    Lau, J., Ed., Townsley, M., Ed., and I. Goyret, Ed.,\n                \"\
    Layer Two Tunneling Protocol - Version 3 (L2TPv3)\", RFC\n                3931,\
    \ March 2005,\n                <http://www.rfc-editor.org/info/rfc3931>.\n   [RFC3954]\
    \    Claise, B., Ed., \"Cisco Systems NetFlow Services Export\n              \
    \  Version 9\", RFC 3954, October 2004,\n                <http://www.rfc-editor.org/info/rfc3954>.\n\
    \   [RFC5470]    Sadasivan, G., Brownlee, N., Claise, B., and J. Quittek,\n  \
    \              \"Architecture for IP Flow Information Export\", RFC 5470,\n  \
    \              March 2009, <http://www.rfc-editor.org/info/rfc5470>.\n   [RFC5475]\
    \    Zseby, T., Molina, M., Duffield, N., Niccolini, S., and\n               \
    \ F. Raspall, \"Sampling and Filtering Techniques for IP\n                Packet\
    \ Selection\", RFC 5475, March 2009,\n                <http://www.rfc-editor.org/info/rfc5475>.\n\
    \   [RFC5640]    Filsfils, C., Mohapatra, P., and C. Pignataro, \"Load-\n    \
    \            Balancing for Mesh Softwires\", RFC 5640, August 2009,\n        \
    \        <http://www.rfc-editor.org/info/rfc5640>.\n   [RFC5681]    Allman, M.,\
    \ Paxson, V., and E. Blanton, \"TCP Congestion\n                Control\", RFC\
    \ 5681, September 2009,\n                <http://www.rfc-editor.org/info/rfc5681>.\n\
    \   [RFC7223]    Bjorklund, M., \"A YANG Data Model for Interface\n          \
    \      Management\", RFC 7223, May 2014,\n                <http://www.rfc-editor.org/info/rfc7223>.\n\
    \   [RFC7226]    Villamizar, C., Ed., McDysan, D., Ed., Ning, S., Malis,\n   \
    \             A., and L. Yong, \"Requirements for Advanced Multipath in\n    \
    \            MPLS Networks\", RFC 7226, May 2014,\n                <http://www.rfc-editor.org/info/rfc7226>.\n\
    \   [SAMP-BASIC] Phaal, P. and S. Panchen, \"Packet Sampling Basics\",\n     \
    \           <http://www.sflow.org/packetSamplingBasics/>.\n   [sFlow-v5]   Phaal,\
    \ P. and M. Lavine, \"sFlow version 5\", July 2004,\n                <http://www.sflow.org/sflow_version_5.txt>.\n\
    \   [sFlow-LAG]  Phaal, P. and A. Ghanwani, \"sFlow LAG Counters\n           \
    \     Structure\", September 2012,\n                <http://www.sflow.org/sflow_lag.txt>.\n\
    \   [STT]        Davie, B., Ed., and J. Gross, \"A Stateless Transport\n     \
    \           Tunneling Protocol for Network Virtualization (STT)\",\n         \
    \       Work in Progress, draft-davie-stt-06, April 2014.\n   [RFC7348]    Mahalingam,\
    \ M., Dutt, D., Duda, K., Agarwal, P.,\n                Kreeger, L., Sridhar,\
    \ T., Bursell, M., and C. Wright,\n                \"Virtual eXtensible Local\
    \ Area Network (VXLAN): A\n                Framework for Overlaying Virtualized\
    \ Layer 2 Networks\n                over Layer 3 Networks\", RFC 7348, August\
    \ 2014,\n                <http://www.rfc-editor.org/info/rfc7348>.\n   [YONG]\
    \       Yong, L. and P. Yang, \"Enhanced ECMP and Large Flow\n               \
    \ Aware Transport\", Work in Progress,\n                draft-yong-pwe3-enhance-ecmp-lfat-01,\
    \ March 2010.\n"
- title: Appendix A.  Internet Traffic Analysis and Load-Balancing Simulation
  contents:
  - "Appendix A.  Internet Traffic Analysis and Load-Balancing Simulation\n   Internet\
    \ traffic [CAIDA] has been analyzed to obtain flow statistics\n   such as the\
    \ number of packets in a flow and the flow duration.  The\n   5-tuple in the packet\
    \ header (IP source address, IP destination\n   address, transport protocol source\
    \ port number, transport protocol\n   destination port number, and IP protocol)\
    \ is used for flow\n   identification.  The analysis indicates that < ~2% of the\
    \ flows take\n   ~30% of total traffic volume while the rest of the flows (> ~98%)\n\
    \   contributes ~70% [YONG].\n   The simulation has shown that, given Internet\
    \ traffic patterns, the\n   hash-based technique does not evenly distribute flows\
    \ over ECMP\n   paths.  Some paths may be > 90% loaded while others are < 40%\
    \ loaded.\n   The greater the number of ECMP paths, the more severe is the\n \
    \  imbalance in the load distribution.  This implies that hash-based\n   distribution\
    \ can cause some paths to become congested while other\n   paths are underutilized\
    \ [YONG].\n   The simulation also shows substantial improvement by using the large\n\
    \   flow-aware, hash-based distribution technique described in this\n   document.\
    \  In using the same simulated traffic, the improved\n   rebalancing can achieve\
    \ < 10% load differences among the paths.  It\n   proves how large flow-aware,\
    \ hash-based distribution can effectively\n   compensate the uneven load balancing\
    \ caused by hashing and the\n   traffic characteristics [YONG].\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors would like to thank the following individuals\
    \ for their\n   review and valuable feedback on earlier versions of this document:\n\
    \   Shane Amante, Fred Baker, Michael Bugenhagen, Zhen Cao, Brian\n   Carpenter,\
    \ Benoit Claise, Michael Fargano, Wes George, Sriganesh\n   Kini, Roman Krzanowski,\
    \ Andrew Malis, Dave McDysan, Pete Moyer, Peter\n   Phaal, Dan Romascanu, Curtis\
    \ Villamizar, Jianrong Wong, George Yum,\n   and Weifeng Zhang.  As a part of\
    \ the IETF Last Call process, valuable\n   comments were received from Martin\
    \ Thomson and Carlos Pignataro.\n"
- title: Contributors
  contents:
  - "Contributors\n   Sanjay Khanna\n   Cisco Systems\n   EMail: sanjakha@gmail.com\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Ram Krishnan\n   Brocade Communications\n   San Jose,\
    \ CA 95134\n   United States\n   Phone: +1-408-406-7890\n   EMail: ramkri123@gmail.com\n\
    \   Lucy Yong\n   Huawei USA\n   5340 Legacy Drive\n   Plano, TX 75025\n   United\
    \ States\n   Phone: +1-469-277-5837\n   EMail: lucy.yong@huawei.com\n   Anoop\
    \ Ghanwani\n   Dell\n   5450 Great America Pkwy\n   Santa Clara, CA 95054\n  \
    \ United States\n   Phone: +1-408-571-3228\n   EMail: anoop@alumni.duke.edu\n\
    \   Ning So\n   Vinci Systems\n   2613 Fairbourne Cir\n   Plano, TX 75093\n  \
    \ United States\n   EMail: ningso@yahoo.com\n   Bhumip Khasnabish\n   ZTE Corporation\n\
    \   New Jersey 07960\n   United States\n   Phone: +1-781-752-8003\n   EMail: vumip1@gmail.com\n"
