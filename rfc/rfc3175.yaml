- title: __initial_text__
  contents:
  - '           Aggregation of RSVP for IPv4 and IPv6 Reservations

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2001).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes the use of a single RSVP (Resource\n   ReSerVation\
    \ Protocol) reservation to aggregate other RSVP\n   reservations across a transit\
    \ routing region, in a manner\n   conceptually similar to the use of Virtual Paths\
    \ in an ATM\n   (Asynchronous Transfer Mode) network.  It proposes a way to\n\
    \   dynamically create the aggregate reservation, classify the traffic\n   for\
    \ which the aggregate reservation applies, determine how much\n   bandwidth is\
    \ needed to achieve the requirement, and recover the\n   bandwidth when the sub-reservations\
    \ are no longer required.  It also\n   contains recommendations concerning algorithms\
    \ and policies for\n   predictive reservations.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   A key problem in the design of RSVP version 1 [RSVP] is,\
    \ as noted in\n   its applicability statement, that it lacks facilities for aggregation\n\
    \   of individual reserved sessions into a common class.  The use of such\n  \
    \ aggregation is recommended in [CSZ], and required for scalability.\n   The problem\
    \ of aggregation may be addressed in a variety of ways.\n   For example, it may\
    \ sometimes be sufficient simply to mark reserved\n   traffic with a suitable\
    \ DSCP (e.g., EF), thus enabling aggregation of\n   scheduling and classification\
    \ state.  It may also be desirable to\n   install one or more aggregate reservations\
    \ from ingress to egress of\n   an \"aggregation region\" (defined below) where\
    \ each aggregate\n   reservation carries similarly marked packets from a large\
    \ number of\n   flows.  This is to provide high levels of assurance that the end-to-\n\
    \   end requirements of reserved flows will be met, while at the same\n   time\
    \ enabling reservation state to be aggregated.\n   Throughout, we will talk about\
    \ \"Aggregator\" and \"Deaggregator\",\n   referring to the routers at the ingress\
    \ and egress edges of an\n   aggregation region.  Exactly how a router determines\
    \ whether it\n   should perform the role of aggregator or deaggregator is described\n\
    \   below.\n   We will refer to the individual reserved sessions (the sessions\
    \ we\n   are attempting to aggregate) as \"end-to-end\" reservations (\"E2E\"\
    \ for\n   short), and to their respective Path/Resv messages as E2E Path/Resv\n\
    \   messages.  We refer to the the larger reservation (that which\n   represents\
    \ many E2E reservations) as an \"aggregate\" reservation, and\n   its respective\
    \ Path/Resv messages as \"aggregate Path/Resv messages\".\n"
- title: '1.1.  Problem Statement: Aggregation Of E2E Reservations'
  contents:
  - "1.1.  Problem Statement: Aggregation Of E2E Reservations\n   The problem of many\
    \ small reservations has been extensively\n   discussed, and may be summarized\
    \ in the observation that each\n   reservation requires a non-trivial amount of\
    \ message exchange,\n   computation, and memory resources in each router along\
    \ the way.  It\n   would be nice to reduce this to a more manageable level where\
    \ the\n   load is heaviest and aggregation is possible.\n   Aggregation, however,\
    \ brings its own challenges.  In particular, it\n   reduces the level of isolation\
    \ between individual flows, implying\n   that one flow may suffer delay from the\
    \ bursts of another.\n   Synchronization of bursts from different flows may occur.\
    \  However,\n   there is evidence [CSZ] to suggest that aggregation of flows has\
    \ no\n   negative effect on the mean delay of the flows, and actually leads to\n\
    \   a reduction of delay in the \"tail\" of the delay distribution (e.g.,\n  \
    \ 99% percentile delay) for the flows.  These benefits of aggregation\n   to some\
    \ extent offset the loss of strict isolation.\n"
- title: 1.2.  Proposed Solution
  contents:
  - "1.2.  Proposed Solution\n   The solution we propose involves the aggregation\
    \ of several E2E\n   reservations that cross an \"aggregation region\" and share\
    \ common\n   ingress and egress routers into one larger reservation from ingress\n\
    \   to egress.  We define an \"aggregation region\" as a contiguous set of\n \
    \  systems capable of performing RSVP aggregation (as defined following)\n   along\
    \ any possible route through this contiguous set.\n   Communication interfaces\
    \ fall into two categories with respect to an\n   aggregation region; they are\
    \ \"exterior\" to an aggregation region, or\n   they are \"interior\" to it. \
    \ Routers that have at least one interface\n   in the region fall into one of\
    \ three categories with respect to a\n   given RSVP session; they aggregate, they\
    \ deaggregate, or they are\n   between an aggregator and a deaggregator.\n   Aggregation\
    \ depends on being able to hide E2E RSVP messages from\n   RSVP-capable routers\
    \ inside the aggregation region.  To achieve this\n   end, the IP Protocol Number\
    \ in the E2E reservation's Path, PathTear,\n   and ResvConf messages is changed\
    \ from RSVP (46) to RSVP-E2E-IGNORE\n   (134) upon entering the aggregation region,\
    \ and restored to RSVP at\n   the deaggregator point.  These messages are ignored\
    \ (no state is\n   stored and the message is forwarded as a normal IP datagram)\
    \ by each\n   router within the aggregation region whenever they are forwarded\
    \ to\n   an interior interface.  Since the deaggregating router perceives the\n\
    \   previous RSVP hop on such messages to be the aggregating router, Resv\n  \
    \ and other messages do not require this modification; they are unicast\n   from\
    \ RSVP hop to RSVP hop anyway.\n   The token buckets (SENDER_TSPECs and FLOWSPECS)\
    \ of E2E reservations\n   are summed into the corresponding information elements\
    \ in aggregate\n   Path and Resv messages.  Aggregate Path messages are sent from\
    \ the\n   aggregator to the deaggregator(s) using RSVP's normal IP Protocol\n\
    \   Number.  Aggregate Resv messages are sent back from the deaggregator\n   to\
    \ the aggregator, thus establishing an aggregate reservation on\n   behalf of\
    \ the set of E2E flows that use this aggregator and\n   deaggregator.\n   Such\
    \ establishment of a smaller number of aggregate reservations on\n   behalf of\
    \ a larger number of E2E reservations yields the\n   corresponding reduction in\
    \ the amount of state to be stored and\n   amount of signalling messages exchanged\
    \ in the aggregation region.\n   By using Differentiated Services mechanisms for\
    \ classification and\n   scheduling of traffic supported by aggregate reservations\
    \ (rather\n   than performing per aggregate reservation classification and\n \
    \  scheduling), the amount of classification and scheduling state in the\n   aggregation\
    \ region is even further reduced.  It is not only\n   independent of the number\
    \ of E2E reservations, it is also independent\n   of the number of aggregate reservations\
    \ in the aggregation region.\n   One or more Diff-Serv DSCPs are used to identify\
    \ traffic covered by\n   aggregate reservations and one or more Diff-Serv PHBs\
    \ are used to\n   offer the required forwarding treatment to this traffic.  There\
    \ may\n   be more than one aggregate reservation between the same pair of\n  \
    \ routers, each representing different classes of traffic and each\n   using a\
    \ different DSCP and a different PHB.\n"
- title: 1.3.  Definitions
  contents:
  - "1.3.  Definitions\n   We define an \"aggregation region\" as a set of RSVP-capable\
    \ routers\n   for which E2E RSVP messages arriving on an exterior interface of\
    \ one\n   router in the set would traverse one or more interior interfaces (of\n\
    \   this and possibly of other routers in the set) before finally\n   traversing\
    \ an exterior interface.\n   Such an E2E RSVP message is said to have crossed\
    \ the aggregation\n   region.\n   We define the \"aggregating\" router for this\
    \ E2E flow as the first\n   router that processes the E2E Path message as it enters\
    \ the\n   aggregation region (i.e., the one which forwards the message from an\n\
    \   exterior interface to an interior interface).\n   We define the \"deaggregating\"\
    \ router for this E2E flow as the last\n   router to process the E2E Path as it\
    \ leaves the aggregation region\n   (i.e., the one which forwards the message\
    \ from an interior interface\n   to an exterior interface).\n   We define an \"\
    interior\" router for this E2E flow as any router in the\n   aggregation region\
    \ which receives this message on an interior\n   interface and forwards it to\
    \ another interior interface.  Interior\n   routers perform neither aggregation\
    \ nor deaggregation for this flow.\n   Note that by these definitions a single\
    \ router with a mix of interior\n   and exterior interfaces may have the capability\
    \ to act as an\n   aggregator on some E2E flows, a deaggregator on other E2E flows,\
    \ and\n   an interior router on yet other flows.\n"
- title: 1.4.  Detailed Aspects of Proposed Solution
  contents:
  - "1.4.  Detailed Aspects of Proposed Solution\n   A number of issues jump to mind\
    \ in considering this model.\n"
- title: 1.4.1.  Traffic Classification Within The Aggregation Region
  contents:
  - "1.4.1.  Traffic Classification Within The Aggregation Region\n   One of the reasons\
    \ that RSVP Version 1 did not identify a way to\n   aggregate sessions was that\
    \ there was not a clear way to classify the\n   aggregate.  With the development\
    \ of the Differentiated Services\n   architecture, this is at least partially\
    \ resolved; traffic of a\n   particular class can be marked with a given DSCP\
    \ and so classified.\n   We presume this model.\n   We presume that on each link\
    \ en route, a queue, WDM color, or similar\n   management component is set aside\
    \ for all aggregated traffic of the\n   same class, and that sufficient bandwidth\
    \ is made available to carry\n   the traffic that has been assigned to it.  This\
    \ bandwidth may be\n   adjusted based on the total amount of aggregated reservation\
    \ traffic\n   assigned to the same class.\n   There are numerous options for exactly\
    \ which Diff-serv PHBs might be\n   used for different classes of traffic as it\
    \ crosses the aggregation\n   region.  This is the \"service mapping\" problem\
    \ described in\n   [RFC2998], and is applicable to situations broader than those\n\
    \   described in this document.  Arguments can be made for using either\n   EF\
    \ or one or more AF PHBs for aggregated traffic.  For example, since\n   controlled\
    \ load requires non-TSpec-conformant (policed) traffic to be\n   forwarded as\
    \ best effort traffic rather than dropped, it may be\n   appropriate to use an\
    \ AF class for controlled load, using the higher\n   drop preference for non-conformant\
    \ packets.\n   In conventional (unaggregated) RSVP operation, a session is\n \
    \  identified by a destination address and optionally a protocol port.\n   Since\
    \ data belonging to an aggregated reservation is identified by a\n   DSCP, the\
    \ session is defined by the destination address and DSCP.\n   For those cases\
    \ where two DSCPs are used (for conformant and non-\n   conformant packets, as\
    \ noted above), the session is identified by the\n   DSCP of conformant packets.\
    \  In general we will talk about mapping\n   aggregated traffic onto a DSCP (even\
    \ if a second DSCP may be used for\n   non-conformant traffic).\n   Whichever\
    \ PHB or PHBs are used to carry aggregated reservations, care\n   needs to be\
    \ take in an environment where provisioned Diff-Serv and\n   aggregated RSVP are\
    \ used in the same network, to ensure that the\n   total admitted load for a single\
    \ PHB does not exceed the link\n   capacity allocated to that PHB.  One solution\
    \ to this is to reserve\n   one PHB (or more) strictly for the aggregated reservation\
    \ traffic\n   (e.g., AF1 Class) while using other PHBs for provisioned Diff-Serv\n\
    \   (e.g., AF2, AF3 and AF4 Classes).\n   Inside the aggregation region, some\
    \ RSVP reservation state is\n   maintained per aggregate reservation, while classification\
    \ and\n   scheduling state (e.g., DSCPs used for classifying traffic) is\n   maintained\
    \ on a per aggregate reservation class basis (rather than\n   per aggregate reservation).\
    \  For example, if Guaranteed Service\n   reservations are mapped to the EF DSCP\
    \ throughout the aggregation\n   region, there may be a reservation for each aggregator/deaggregator\n\
    \   pair in each router, but only the EF DSCP needs to be inspected at\n   each\
    \ interior interface, and only a single queue is used for all EF\n   traffic.\n"
- title: 1.4.2.  Deaggregator Determination
  contents:
  - "1.4.2.  Deaggregator Determination\n   The first question is \"How do we determine\
    \ the\n   Aggregator/Deaggregator pair that are responsible for aggregating a\n\
    \   particular E2E flow through the aggregation region?\"\n   Determination of\
    \ the aggregator is trivial: we know that an E2E flow\n   has arrived at an aggregator\
    \ when its Path message arrives at a\n   router on an exterior interface and must\
    \ be forwarded on an interior\n   interface.\n   Determination of the deaggregator\
    \ is more involved.  If an SPF\n   routing protocol, such as OSPF or IS-IS, is\
    \ in use, and if it has\n   been extended to advertise information on Deaggregation\
    \ roles, it can\n   tell us the set of routers from which the deaggregator will\
    \ be\n   chosen.  In principle, if the aggregator and deaggregator are in the\n\
    \   same area, then the identity of the deaggregator could be determined\n   from\
    \ the link state database.  However, this approach would not work\n   in multi-area\
    \ environments or for distance vector protocols.\n   One method for Deaggregator\
    \ determination is manual configuration.\n   With this method the network operator\
    \ would configure the Aggregator\n   and the Deaggregator with the necessary information.\n\
    \   Another method allows automatic Deaggregator determination and\n   corresponding\
    \ Aggregator notification.  When the E2E RSVP Path\n   message transits from an\
    \ interior interface to an exterior interface,\n   the deaggregating router must\
    \ advise the aggregating router of the\n   correlation between itself and the\
    \ flow.  This has the nice attribute\n   of not being specific to the routing\
    \ protocol.  It also has the\n   property of automatically adjusting to route\
    \ changes.  For instance,\n   if because of a topology change, another Deaggregator\
    \ is now on the\n   shortest path, this method will automatically identify the\
    \ new\n   Deaggregator and swap to it.\n"
- title: 1.4.3.  Mapping E2E Reservations Onto Aggregate Reservations
  contents:
  - "1.4.3.  Mapping E2E Reservations Onto Aggregate Reservations\n   As discussed\
    \ above, there may be multiple Aggregate Reservations\n   between the same Aggregator/Deaggregator\
    \ pair.  The rules for mapping\n   E2E reservations onto aggregate reservations\
    \ are policy decisions\n   which depend on the network environment and network\
    \ administrator's\n   objectives.  Such a policy is outside the scope of this\
    \ specification\n   and we simply assume that such a policy is defined by the\
    \ network\n   administrator.  We also assume that such a policy is somehow\n \
    \  accessible to the Aggregators/Deaggregators but the details of how\n   this\
    \ policy is made accessible to Aggregators/Deaggregators (Local\n   Configuration,\
    \ COPS, LDAP, etc.) is outside the scope of this\n   specification.\n   An example\
    \ of very simple policy would be that all the E2E\n   reservations are mapped\
    \ onto a single Aggregate Reservation (i.e.,\n   single DSCP) between a given\
    \ pair of Aggregator/Deaggregator.\n   Another example of policy, which takes\
    \ into account the Int-Serv\n   service type requested by the receiver (and signalled\
    \ in the E2E\n   Resv), would be where Guaranteed Service E2E reservations are\
    \ mapped\n   onto one DSCP in the aggregation region and where Controlled Load\
    \ E2E\n   reservations are mapped onto another DSCP.\n   A third example of policy\
    \ would be one where the mapping of E2E\n   reservations onto Aggregate Reservations\
    \ take into account Policy\n   Objects (such as information authenticating the\
    \ end user) which may\n   be included by the sender in the E2E path and/or by\
    \ the receiver in\n   the E2E Resv.\n   Regardless of the actual policy, a range\
    \ of options are conceivable\n   for where the decision to map an E2E reservation\
    \ onto an aggregate\n   reservation is taken and how this decision is communicated\
    \ between\n   Aggregator and Deaggregator.  Both Aggregator and Deaggregator could\n\
    \   be assumed to make such a decision independently.  However, this\n   would\
    \ either require definition of additional procedures to solve\n   inconsistent\
    \ mapping decisions (i.e., Aggregator and Deaggregator\n   decide to map a given\
    \ E2E reservation onto different Aggregate\n   Reservations) or would result in\
    \ possible undetected misbehavior in\n   the case of inconsistent decisions.\n\
    \   For simplicity and reliability, we assign the responsibility of the\n   mapping\
    \ decision entirely to the Deaggregator.  The Aggregator is\n   notified of the\
    \ selected mapping by the Deaggregator and follows this\n   decision.  The Deaggregator\
    \ was chosen rather than the Aggregator\n   because the Deaggregator is the first\
    \ to have access to all the\n   information required to make such a decision (in\
    \ particular receipt\n   of the E2E Resv which indicates the requested Int-Serv\
    \ service type\n   and includes information signalled by the receiver).  This\
    \ allows\n   faster operations such as set-up or size adjustment of an Aggregate\n\
    \   Reservation in a number of situations resulting in faster E2E\n   reservation\
    \ establishment.\n"
- title: 1.4.4.  Size of Aggregate Reservations
  contents:
  - "1.4.4.  Size of Aggregate Reservations\n   A range of options exist for determining\
    \ the size of the aggregate\n   reservation, presenting a tradeoff between simplicity\
    \ and\n   scalability.  Simplistically, the size of the aggregate reservation\n\
    \   needs to be greater than or equal to the sum of the bandwidth of the\n   E2E\
    \ reservations it aggregates, and its burst capacity must be\n   greater than\
    \ or equal to the sum of their burst capacities.  However,\n   if followed religiously,\
    \ this leads us to change the bandwidth of the\n   aggregate reservation each\
    \ time an underlying E2E reservation\n   changes, which loses one of the key benefits\
    \ of aggregation, the\n   reduction of message processing cost in the aggregation\
    \ region.\n   We assume, therefore, that there is some policy, not defined in\
    \ this\n   specification (although sample policies are suggested which have the\n\
    \   necessary characteristics).  This policy maintains the amount of\n   bandwidth\
    \ required on a given aggregate reservation by taking account\n   of the sum of\
    \ the bandwidths of its underlying E2E reservations,\n   while endeavoring to\
    \ change it infrequently.  This may require some\n   level of trend analysis.\
    \  If there is a significant probability that\n   in the next interval of time\
    \ the current aggregate reservation will\n   be exhausted, the router must predict\
    \ the necessary bandwidth and\n   request it.  If the router has a significant\
    \ amount of bandwidth\n   reserved but has very little probability of using it,\
    \ the policy may\n   be to predict the amount of bandwidth required and release\
    \ the\n   excess.\n   This policy is likely to benefit from introduction of some\
    \ hysteresis\n   (i.e., ensure that the trigger condition for aggregate reservation\n\
    \   size increase is sufficiently different from the trigger condition\n   for\
    \ aggregate reservation size decrease) to avoid oscillation in\n   stable conditions.\n\
    \   Clearly, the definition and operation of such policies are as much\n   business\
    \ issues as they are technical, and are out of the scope of\n   this document.\n"
- title: 1.4.5.  E2E Path ADSPEC update
  contents:
  - "1.4.5.  E2E Path ADSPEC update\n   As described above, E2E RSVP messages are\
    \ hidden from the Interior\n   routers inside the aggregation region.  Consequently,\
    \ the ADSPECs of\n   E2E Path messages are not updated as they travel through\
    \ the\n   aggregation region.  Therefore, the Deaggregator for a flow is\n   responsible\
    \ for updating the ADSPEC in the corresponding E2E Path to\n   reflect the impact\
    \ of the aggregation region on the QoS that may be\n   achieved end-to-end.  The\
    \ Deaggregator should update the ADSPEC of\n   the E2E Path as accurately as possible.\n\
    \   Since Aggregate Path messages are processed inside the aggregation\n   region,\
    \ their ADSPEC is updated by Interior routers to reflect the\n   impact of the\
    \ aggregation region on the QoS that may be achieved\n   within the interior region.\
    \  Consequently, the Deaggregator should\n   make use of the information included\
    \ in the ADSPEC from an Aggregate\n   Path where available.  The Deaggregator\
    \ may elect to wait until such\n   information is available before forwarding\
    \ the E2E Path in order to\n   accurately update its ADSPEC.\n   To maximize the\
    \ information made available to the Deaggregator,\n   whenever the Aggregator\
    \ signals an Aggregate Path,  the Aggregator\n   should include an ADSPEC with\
    \ fragments for all service types\n   supported in the aggregation region (even\
    \ if the Aggregate Path\n   corresponds to an Aggregate Reservation that only\
    \ supports a subset\n   of those service types).  Providing this information to\
    \ the\n   Deaggregator for every possible service type facilitates accurate and\n\
    \   timely update of the E2E ADSPEC by the Deaggregator.\n   Depending on the\
    \ environment and on the policy for mapping E2E\n   reservations onto Aggregate\
    \ Reservations, to accurately update the\n   E2E Path ADSPEC, the Deaggregator\
    \ may for example:\n   -  update all the E2E Path ADSPEC segments (Default General\n\
    \      Parameters Fragment, Guaranteed Service Fragment, Controlled-Load\n   \
    \   Service Fragment) based on the ADSPEC of a single Aggregate Path,\n      or\n\
    \   -  update the E2E Path ADSPEC by taking into account the ADSPEC from\n   \
    \   multiple Aggregate Path messages (e.g.,.  update the Default\n      General\
    \ Parameters Fragment using the \"worst\" value for each\n      parameter across\
    \ all the Aggregate Paths' ADSPECs, update the\n      Guaranteed Service Fragment\
    \ using the Guaranteed Service Fragment\n      from the ADSPEC of the Aggregate\
    \ Path for the reservation used for\n      Guaranteed Services).\n   By taking\
    \ into account the information contained in the ADSPEC of\n   Aggregate Path(s)\
    \ as mentioned above, the Deaggregator should be able\n   to accurately update\
    \ the E2E Path ADSPEC in most situations.\n   However, we note that there may\
    \ be particular situations where the\n   E2E Path ADSPEC update cannot be made\
    \ entirely accurately by the\n   Deaggregator.  This is most likely to happen\
    \ when the path taken\n   across the aggregation region depends on the service\
    \ requested in the\n   E2E Resv, which is yet to arrive.  Such a situation could\
    \ arise if,\n   for example:\n   -  The service mapping policy for the aggregation\
    \ region is such that\n      E2E reservations requesting Guaranteed Service are\
    \ mapped to a\n      different PHB that those requesting Controlled Load service.\n\
    \   -  Diff-Serv aware routing is used in the aggregation region, so that\n  \
    \    packets with different DSCPs follow different paths (sending them\n     \
    \ over different MPLS label switched paths, for example).\n   As a result, the\
    \ ADSPEC for the aggregate reservation that supports\n   guaranteed service may\
    \ differ from the ADSPEC for the aggregate\n   reservation that supports controlled\
    \ load.\n   Assume that the sender sends an E2E Path with an ADSPEC containing\n\
    \   segments for both Guaranteed Services and Controlled Load.  Then, at\n   the\
    \ time of updating the E2E ADSPEC, the Deaggregator does not know\n   which service\
    \ type will actually be requested by the receiver and\n   therefore cannot know\
    \ which PHB will be used to transport this E2E\n   flow and, in turn, cannot pick\
    \ the right parameter values to factor\n   in when updating the Default General\
    \ Parameters Fragment.  As\n   mentioned above, in this particular case, a conservative\
    \ approach\n   would be to always take into account the worst value for every\n\
    \   parameter.  Regardless of whether this conservative approach is\n   followed\
    \ or some simpler approach such as taking into account one of\n   the two Aggregate\
    \ Path ADSPEC, the E2E Path ADSPEC will be inaccurate\n   (over-optimistic or\
    \ over-pessimistic) for at least one service type\n   actually requested by the\
    \ destination.\n   Recognizing that entirely accurate update of E2E Path ADSPEC\
    \ may not\n   be possible in all situations, we recommend that a conservative\n\
    \   approach be taken in such situations (over-pessimistic rather than\n   over-optimistic)\
    \ and that the E2E Path ADSPEC be corrected as soon as\n   possible.  In the example\
    \ described above, this would mean that as\n   soon as the Deaggregator receives\
    \ the E2E Resv from the receiver, the\n   Deaggregator should generate another\
    \ E2E Path with an accurately\n   updated ADSPEC based on the knowledge of which\
    \ aggregate reservation\n   will actually carry the E2E flow.\n"
- title: 1.4.6.  Intra-domain Routes
  contents:
  - "1.4.6.  Intra-domain Routes\n   RSVP directly handles route changes, in that\
    \ reservations follow the\n   routes that their data follow.  This follows from\
    \ the property that\n   Path messages contain the same IP source and destination\
    \ address as\n   the data flow for which a reservation is to be established. \
    \ However,\n   since we are now making aggregate reservations by sending a Path\n\
    \   message from an aggregating to a deaggregating router, the reserved\n   (E2E)\
    \ data packets no longer carry the same IP addresses as the\n   relevant (aggregate)\
    \ Path message.  The issue becomes one of making\n   sure that data packets for\
    \ reserved flows follow the same path as the\n   Path message that established\
    \ Path state for the aggregate\n   reservation.  Several approaches are viable.\n\
    \   First, the data may be tunneled from aggregator to deaggregator,\n   using\
    \ technologies such as IP-in-IP tunnels, GRE tunnels, MPLS\n   label-switched\
    \ paths, and so on.  These each have particular\n   advantages, especially MPLS,\
    \ which allows traffic engineering.  They\n   each also have some cost in link\
    \ overhead and configuration\n   complexity.\n   If data is not tunneled, then\
    \ we are depending on a characteristic of\n   IP best metric routing , which is\
    \ that if the route from A to Z\n   includes the path from H to L, and the best\
    \ metric route was chosen\n   all along the way, then the best metric route was\
    \ chosen from H to L.\n   Therefore, an aggregate path message which crosses a\
    \ given aggregator\n   and deaggregator will of necessity use the best path between\
    \ them.\n   If this is a single path, the problem is solved.  If it is a multi-\n\
    \   path route, and the paths are of equal cost, then we are forced to\n   determine,\
    \ perhaps by measurement, what proportion of the traffic for\n   a given E2E reservation\
    \ is passing along each of the paths, and\n   assure ourselves of sufficient bandwidth\
    \ for the present use.  A\n   simple, though wasteful, way of doing this is to\
    \ reserve the total\n   capacity of the aggregate route down each path.\n   For\
    \ this reason, we believe it is advantageous to use one of the\n   above-mentioned\
    \ tunneling mechanisms in cases where multiple equal-\n   cost paths may exist.\n"
- title: 1.4.7.  Inter-domain Routes
  contents:
  - "1.4.7.  Inter-domain Routes\n   The case of inter-domain routes differs somewhat\
    \ from the intra-\n   domain case just described.  Specifically, best-path considerations\n\
    \   do not apply, as routing is by a combination of routing policy and\n   shortest\
    \ AS path rather than simple best metric.\n   In the case of inter-domain routes,\
    \ data traffic belonging to\n   different E2E sessions (but the same aggregate\
    \ session) may not enter\n   an aggregation region via the same aggregator interface,\
    \ and/or may\n   not leave via the same deaggregator interface.  It is possible\
    \ that\n   we could identify this occurrence in some central system which sees\n\
    \   the reservation information for both of the apparent sessions, but it\n  \
    \ is not clear that we could determine a priori how much traffic went\n   one\
    \ way or the other apart from measurement.\n   We simply note that this problem\
    \ can occur and needs to be allowed\n   for in the implementation.  We recommend\
    \ that each such E2E\n   reservation be summed into its appropriate aggregate\
    \ reservation,\n   even though this involves over-reservation.\n"
- title: 1.4.8.  Reservations for Multicast Sessions
  contents:
  - "1.4.8.  Reservations for Multicast Sessions\n   Aggregating reservations for\
    \ multicast sessions is significantly more\n   complex than for unicast sessions.\
    \  The first challenge is to\n   construct a multicast tree for distribution of\
    \ the aggregate Path\n   messages which follows the same path as will be followed\
    \ by the data\n   packets for which the aggregate reservation is to be made. \
    \ This is\n   complicated by the fact that the path taken by a data packet may\n\
    \   depend on many factors such as its source address, the choice of\n   shared\
    \ trees or source-specific trees, and the location of a\n   rendezvous point for\
    \ the tree.\n   Once the problem of distributing aggregate Path messages is solved,\n\
    \   there are considerable problems in determining the correct amount of\n   resources\
    \ to reserve at each link along the multicast tree.  Because\n   of the amount\
    \ of heterogeneity that may exist in an aggregate\n   multicast reservation, it\
    \ appears that it would be necessary to\n   retain information about individual\
    \ E2E reservations within the\n   aggregation region to allocate resources correctly.\
    \  Thus, we may end\n   up with a complex set of procedures for forming aggregate\n\
    \   reservations that do not actually reduce the amount of stored state\n   significantly\
    \ for multicast sessions.\n   As noted above, there are several aspects to RSVP\
    \ state, and our\n   approach for unicast aggregates all forms of state:  classification,\n\
    \   scheduling, and reservation state.  One possible approach to\n   multicast\
    \ is to focus only on aggregation of classification and\n   scheduling state,\
    \ which are arguably the most important because of\n   their impact on the forwarding\
    \ path.  That approach is the one\n   described in the current draft.\n"
- title: 1.4.9.  Multi-level Aggregation
  contents:
  - "1.4.9.  Multi-level Aggregation\n   Ideally, an aggregation scheme should be\
    \ able to accommodate\n   recursive aggregation, with aggregate reservations being\
    \ themselves\n   aggregated.  Multi-level aggregation can be accomplished using\
    \ the\n   procedures described here and a simple extension to the protocol\n \
    \  number swapping process.\n   We can consider E2E RSVP reservations to be at\
    \ aggregation level 0.\n   When we aggregate these reservations, we produce reservations\
    \ at\n   aggregation level 1.  In general, level n reservations may be\n   aggregated\
    \ to form reservations at level n+1.\n   When an aggregating router receives an\
    \ E2E Path, it swaps the\n   protocol number from RSVP to RSVP-E2E-IGNORE.  In\
    \ addition, it should\n   write the aggregation level (1, in this case) in the\
    \ 2 byte field\n   that is present (and currently unused) in the router alert\
    \ option.\n   In general, a router which aggregates reservations at level n to\n\
    \   create reservations at level n+1 will write the number n+1 in the\n   router\
    \ alert field.  A router which deaggregates level n+1\n   reservations will examine\
    \ all messages with IP protocol number RSVP-\n   E2E-IGNORE but will process the\
    \ message and swap the protocol number\n   back to RSVP only in the case where\
    \ the router alert field carries\n   the number n+1.  For any other value, the\
    \ message is forwarded\n   unchanged.  Interior routers ignore all messages with\
    \ IP protocol\n   number RSVP-E2E-IGNORE.  Note that only a few bits of the 2\
    \ byte\n   field in the option would be needed, given the likely number of\n \
    \  levels of aggregation.\n   For IPv6, certain values of the router alert \"\
    value\" field are\n   reserved.  This specification requires IANA assignment of\
    \ a small\n   number of consecutive values for the purpose of recording the\n\
    \   aggregation level.\n"
- title: 1.4.10.  Reliability Issues
  contents:
  - "1.4.10.  Reliability Issues\n   There are a variety of issues that arise in the\
    \ context of\n   aggregation that would benefit from some form of explicit\n \
    \  acknowledgment mechanism for RSVP messages.  For example, it is\n   possible\
    \ to configure a set of routers such that an E2E Path of\n   protocol type RSVP-E2E-IGNORE\
    \ would be effectively \"black-holed\", if\n   it never reached a router which\
    \ was appropriately configured to act\n   as a deaggregator.  It could then travel\
    \ all the way to its\n   destination where it would probably be ignored due to\
    \ its non-\n   standard protocol number.  This situation is not easy to detect.\
    \  The\n   aggregator can be sure this problem has not occurred if an aggregate\n\
    \   PathErr message is received from the deaggregator (as described in\n   detail\
    \ below).  It can also be sure there is no problem if an E2E\n   Resv is received.\
    \  However, the fact that neither of these events has\n   happened may only mean\
    \ that no receiver wishes to reserve resources\n   for this session, or that an\
    \ RSVP message loss occurred, or it may\n   mean that the Path was black-holed.\
    \  However, if a neighbor-to-\n   neighbor acknowledgment mechanism existed, the\
    \ aggregator would\n   expect to receive an acknowledgment of the E2E Path from\
    \ the\n   deaggregator, and would interpret the lack of a response as an\n   indication\
    \ that a problem of configuration existed.  It could then\n   refrain from aggregating\
    \ this particular session.  We note that such\n   a reliability mechanism has\
    \ been proposed for RSVP in [RFC291] and\n   propose that it be used here.\n"
- title: 1.4.11.  Message Integrity and Node Authentication
  contents:
  - "1.4.11.  Message Integrity and Node Authentication\n   [RSVP] defines a hop-by-hop\
    \ authentication and integrity check.  The\n   present specification allows use\
    \ of this check on Aggregate RSVP\n   messages and also preserves this check on\
    \ E2E RSVP messages for E2E\n   RSVP messages.\n   Outside the Aggregation Region,\
    \ any E2E RSVP message may contain an\n   INTEGRITY object using a keyed cryptographic\
    \ digest technique which\n   assumes that RSVP neighbors share a secret.  Because\
    \ E2E RSVP\n   messages are not processed by routers in the Aggregation Region,\
    \ the\n   Aggregator and Deaggregator appear as logical RSVP neighbors of each\n\
    \   other.  The Deaggregator is the Aggregator's Next Hop for E2E RSVP\n   messages\
    \ while the Aggregator is the Deaggregator's Previous Hop.\n   Consequently, INTEGRITY\
    \ objects which may appear in E2E RSVP messages\n   traversing the Aggregation\
    \ Region are exchanged directly between the\n   Aggregator and Deaggregator in\
    \ a manner which is entirely transparent\n   to the Interior routers.  Thus, hop-by-hop\
    \ integrity checking for E2E\n   messages over the Aggregation Region requires\
    \ that the Aggregator and\n   Deaggregator share a secret.  Techniques for establishing\
    \ that secret\n   are described in [INTEGRITY].\n   Inside the Aggregation Region,\
    \ any Aggregate RSVP message may contain\n   an INTEGRITY object which assumes\
    \ that the corresponding RSVP\n   neighbors inside the Aggregation Region (e.g.,\
    \ Aggregator and\n   Interior Router, two Interior Routers, Interior Router and\n\
    \   Deaggregator) share a secret.\n"
- title: 1.4.12.  Aggregated reservations without E2E reservations
  contents:
  - "1.4.12.  Aggregated reservations without E2E reservations\n   Up to this point\
    \ we have assumed that the aggregate reservation is\n   established as a result\
    \ of the establishment of E2E reservations from\n   outside the aggregation region.\
    \  It should be clear that alternative\n   triggers are possible.  As discussed\
    \ in [RFC2998], an aggregate RSVP\n   reservation can be used to manage bandwidth\
    \ in a diff-serv cloud even\n   if RSVP is not used end-to-end.\n   The simplest\
    \ example of an alternative configuration is the static\n   configuration of an\
    \ aggregated reservation for a certain amount for\n   traffic from an ingress\
    \ (aggregator) router to an egress (de-\n   aggregator) router.  This would have\
    \ to be configured in at least the\n   system originating the aggregate PATH message\
    \ (the aggregator).  The\n   deaggregator could detect that the PATH message is\
    \ directed to it,\n   and could be configured to \"turn around\" such messages,\
    \ i.e., it\n   responds with a RESV back to the aggregator.  Alternatively,\n\
    \   configuration of the aggregate reservation could be performed at both\n  \
    \ the aggregator and the deaggregator.  As before, an aggregate\n   reservation\
    \ is associated with a DSCP for the traffic that will use\n   the reserved capacity.\n\
    \   In the absence of E2E microflow reservations, the aggregator can use\n   a\
    \ variety of policies to set the DSCP of packets passing into the\n   aggregation\
    \ region, thus determining whether they gain access to the\n   resources reserved\
    \ by the aggregate reservation.  These policies are\n   a matter of local configuration,\
    \ as usual for a device at the edge of\n   a diffserv cloud.\n   Note that the\
    \ \"aggregator\" could even be a device such as a PSTN\n   gateway which makes\
    \ an aggregate reservation for the set of calls to\n   another PSTN gateway (the\
    \ deaggregator) across an intervening diff-\n   serv region.  In this case the\
    \ reservation may be established in\n   response to call signalling.\n   From\
    \ the perspective of RSVP signalling and the handling of data\n   packets in the\
    \ aggregation region, these cases are equivalent to the\n   case of aggregating\
    \ E2E RSVP reservations.  The only difference is\n   that E2E RSVP signalling\
    \ does not take place and cannot therefore be\n   used as a trigger, so some additional\
    \ knowledge is required in\n   setting up the aggregate reservation.\n"
- title: 2.  Elements of Procedure
  contents:
  - "2.  Elements of Procedure\n   To implement aggregation, we define a number of\
    \ elements of\n   procedure.\n"
- title: 2.1.  Receipt of E2E Path Message By Aggregating Router
  contents:
  - "2.1.  Receipt of E2E Path Message By Aggregating Router\n   The very first event\
    \ is the arrival of the E2E Path message at an\n   exterior interface of an aggregator.\
    \  Standard RSVP procedures [RSVP]\n   are followed for this, including onto what\
    \ set of interfaces the\n   message should be forwarded.  These interfaces comprise\
    \ zero or more\n   exterior interfaces and zero or more interior interfaces. \
    \ (If the\n   number of interior interfaces is zero, the router is not acting\
    \ as an\n   aggregator for this E2E flow.)\n   Service on exterior interfaces\
    \ is handled as defined in [RSVP].\n   Service on interior interfaces is complicated\
    \ by the fact that the\n   message needs to be included in some aggregate reservation,\
    \ but at\n   this point it is not known which one, because the deaggregator is\
    \ not\n   known.  Therefore, the E2E Path message is forwarded on the interior\n\
    \   interface(s) using the IP Protocol number RSVP-E2E-IGNORE, but in\n   every\
    \ other respect identically to the way it would be sent by an\n   RSVP router\
    \ that was not performing aggregation.\n"
- title: 2.2.  Handling Of E2E Path Message By Interior Routers
  contents:
  - "2.2.  Handling Of E2E Path Message By Interior Routers\n   At this point, the\
    \ E2E Path message traverses zero or more interior\n   routers.  Interior routers\
    \ receive the E2E Path message on an\n   interior interface and forward it on\
    \ another interior interface.  The\n   Router Alert IP Option alerts interior\
    \ routers to check internally,\n   but they find that the IP Protocol is RSVP-E2E-IGNORE\
    \ and the next\n   hop interface is interior.  As such, they simply forward it\
    \ as a\n   normal IP datagram.\n"
- title: 2.3.  Receipt of E2E Path Message By Deaggregating Router
  contents:
  - "2.3.  Receipt of E2E Path Message By Deaggregating Router\n   The E2E Path message\
    \ finally arrives at a deaggregating router, which\n   receives it on an interior\
    \ interface and forwards it on an exterior\n   interface.  Again, the Router Alert\
    \ IP Option alerts it to intercept\n   the message, but this time the IP Protocol\
    \ is RSVP-E2E-IGNORE and the\n   next hop interface is an exterior interface.\n\
    \   Before forwarding the E2E Path towards the receiver, the Deaggregator\n  \
    \ should update its ADSPEC.  This update is to reflect the impact of\n   the aggregation\
    \ region onto the QoS to be achieved E2E by the flow.\n   Such information can\
    \ be collected by the ADSPEC of Aggregate Path\n   messages travelling from the\
    \ Aggregator to the Deaggregator.  Thus,\n   to enable correct updating of the\
    \ ADSPEC, a deaggregating router may\n   wait as described below for the arrival\
    \ of an aggregate Path before\n   forwarding the E2E Path.\n   When receiving\
    \ the E2E Path, depending on the policy for mapping E2E\n   reservation onto Aggregate\
    \ Reservations, the Deaggregator may or may\n   not be in a position to decide\
    \ which DSCP the E2E flow for the\n   processed E2E Path is going to be mapped\
    \ onto, as described above.\n   If the Deaggregator is in a position to know the\
    \ mapping at this\n   point, then the Deaggregator first checks that there is\
    \ an Aggregate\n   Path in place for the corresponding DSCP.  If so, then the\n\
    \   Deaggregator uses the ADSPEC of this Aggregate Path to update the\n   ADSPEC\
    \ of the E2E Path and then forwards the E2E Path towards the\n   receiver.  If\
    \ not, then the Deaggregator requests establishment of\n   the corresponding Aggregate\
    \ Path by sending an E2E PathErr message\n   with an error code of NEW-AGGREGATE-NEEDED\
    \ and the desired DSCP\n   encoded in the DCLASS Object.  The Deaggregator may\
    \ also at the same\n   time request establishment of an aggregate reservation\
    \ for other\n   DSCPs.  When receiving the Aggregate Path for the desired DSCP,\
    \ the\n   Deaggregator then uses the ADSPEC of this Aggregate Path to update\n\
    \   the ADSPEC of the E2E Path.\n   If the Deaggregator is not in a position to\
    \ know the mapping at this\n   point, then the Deaggregator uses the information\
    \ contained in the\n   ADSPEC of one Aggregate Path or of multiple Aggregate Paths\
    \ to update\n   the E2E Path ADSPEC.  Similarly, if one or more of the necessary\n\
    \   Aggregate Paths is not yet established, the Deaggregator requests\n   establishment\
    \ of the corresponding Aggregate Path by sending an E2E\n   PathErr message with\
    \ an error code of NEW-AGGREGATE-NEEDED and the\n   desired DSCP encoded in the\
    \ respective DCLASS Object.  When receiving\n   the Aggregate Path for the desired\
    \ DSCP, the Deaggregator then uses\n   the ADSPEC of this Aggregate Path to update\
    \ the ADSPEC of the E2E\n   Path.\n   Generating a E2E PathErr message with an\
    \ error code of NEW-\n   AGGREGATE-NEEDED should not result in any Path state\
    \ being removed,\n   but should result in the aggregating router initiating the\
    \ necessary\n   aggregate Path message, as described in the following section.\n\
    \   The deaggregating router changes the E2E Path message's IP Protocol\n   from\
    \ RSVP-E2E-IGNORE to RSVP and forwards the E2E Path message\n   towards its intended\
    \ destination.\n"
- title: 2.4.  Initiation of New Aggregate Path Message By Aggregating Router
  contents:
  - "2.4.  Initiation of New Aggregate Path Message By Aggregating Router\n   The\
    \ aggregating Router is responsible for generating a new Aggregate\n   Path for\
    \ a DSCP when receiving a E2E PathErr message with the error\n   code NEW-AGGREGATE-NEEDED\
    \ from the deaggregator.  The DSCP value to\n   include in the Aggregate Path\
    \ Session is found in the DCLASS Object\n   of the received E2E PathErr message.\
    \  The identity of the\n   deaggregator itself is found in the ERROR SPECIFICATION\
    \ of the E2E\n   PathErr message.  The destination address of the aggregate Path\n\
    \   message is the address of the deaggregating router, and the message\n   is\
    \ sent with IP protocol number RSVP.\n   Existing RSVP procedures specify that\
    \ the size of a reservation\n   established for a flow is set to the minimum of\
    \ the Path SENDER_TSPEC\n   and the Resv FLOW_SPEC.  Consequently, the size of\
    \ an Aggregate\n   Reservation cannot be larger than the SENDER_TSPEC included\
    \ in the\n   Aggregate Path by the Aggregator.  To ensure that Aggregate\n   Reservations\
    \ can be sized by the Deaggregator without undesired\n   limitations, the Aggregating\
    \ router should always attempt to include\n   in the Aggregate Path a SENDER_TSPEC\
    \ which is at least as large as\n   the size that would actually be required as\
    \ determined by the\n   Deaggregator.  One method to achieve this is to use a\
    \ SENDER_TSPEC\n   which is obviously larger than the highest load of E2E reservations\n\
    \   that may be supported onto this network.  Another method is for the\n   Aggregator\
    \ to keep track of which flows are mapped onto a DSCP and\n   always add their\
    \ E2E Path SENDER_TSPEC into the Aggregate Path\n   SENDER_TSPEC (and possibly\
    \ also add some additional bandwidth in\n   anticipation of future E2E reservations).\n\
    \   The aggregating router is notified of the mapping from an E2E flow to\n  \
    \ a DSCP in two ways.  First, when the aggregating router receives a\n   E2E PathErr\
    \ with error code NEW-AGGREGATE-NEEDED, the Aggregator is\n   notified that the\
    \ corresponding E2E flow is (at least temporarily)\n   mapped onto a given DSCP.\
    \  Secondly, when the aggregating router\n   receives an E2E Resv containing a\
    \ DCLASS Object (as described further\n   below), the Aggregating Router is notified\
    \ that the corresponding E2E\n   flow is mapped onto a given DSCP.\n"
- title: 2.5.  Handling of E2E Resv Message by Deaggregating Router
  contents:
  - "2.5.  Handling of E2E Resv Message by Deaggregating Router\n   Having sent the\
    \ E2E Path message on toward the destination, the\n   deaggregator must now expect\
    \ to receive an E2E Resv for the session.\n   On receipt, its responsibility is\
    \ to ensure that there is sufficient\n   bandwidth reserved within the aggregation\
    \ region to support the new\n   E2E reservation, and if there is, then to forward\
    \ the E2E Resv to the\n   aggregating router.\n   The Deaggregating router first\
    \ makes the final decision of which\n   Aggregate Reservation (and thus which\
    \ DSCP) this E2E reservation is\n   to be mapped onto.  This decision is made\
    \ according to the policy\n   selected by the network administrator as described\
    \ above.\n   If this final mapping decision is such that the Deaggregator can\
    \ now\n   make a more accurate update of the E2E Path ADSPEC than done when\n\
    \   forwarding the initial E2E Path, the Deaggregator should do so and\n   generate\
    \ a new E2E Path immediately in order to provide the accurate\n   ADSPEC information\
    \ to the receiver as soon as possible.  Otherwise,\n   normal Refresh procedures\
    \ should be followed for the E2E Path.\n   If no Aggregate Reservation currently\
    \ exists from the corresponding\n   aggregating router with the corresponding\
    \ DSCP, the Deaggregating\n   router will establish a new Aggregate Reservation\
    \ as described in the\n   next section.\n   If the corresponding Aggregate Reservation\
    \ exists but has\n   insufficient bandwidth reserved to accommodate the new E2E\n\
    \   reservation (in addition to all the existing E2E reservations\n   currently\
    \ mapped onto it), it should follow the normal RSVP\n   procedures [RSVP] for\
    \ a reservation being placed with insufficient\n   bandwidth to support the reservation.\
    \  It may also first attempt to\n   increase the aggregate reservation that is\
    \ supplying bandwidth by\n   increasing the size of the FLOW_SPEC that it includes\
    \ in the\n   aggregate Resv that it sends upstream.  As discussed in the previous\n\
    \   section, the Aggregating Router should ensure that the SENDER_TSPEC\n   it\
    \ includes in the Aggregate Path is always in excess of the\n   FLOW_SPEC that\
    \ may be requested in the Aggregate Resv by the\n   Deaggregator, so that the\
    \ Deaggregator is not unnecessarily prevented\n   from effectively increasing\
    \ the Aggregate Reservation bandwidth as\n   required.\n   When sufficient bandwidth\
    \ is available on the corresponding aggregate\n   reservation, the Deaggregating\
    \ Router may simply send the E2E Resv\n   message with IP Protocol RSVP to the\
    \ aggregating router.  This\n   message should include the DCLASS object to indicate\
    \ which DSCP the\n   aggregator must use for this E2E flow.  The deaggregator\
    \ will also\n   add the token bucket from the E2E Resv FLOWSPEC object into its\n\
    \   internal understanding of how much of the Aggregate reservation is in\n  \
    \ use.\n   As discussed above, in order to minimize the occurrence of situations\n\
    \   where insufficient bandwidth is reserved on the corresponding\n   Aggregate\
    \ Reservation at the time of processing an E2E Resv, and in\n   turn to avoid\
    \ the delay associated with the increase of this\n   aggregate bandwidth, the\
    \ Deaggregator MAY anticipate the current\n   demand and increase the Aggregate\
    \ Reservations size ahead of actual\n   requirements by E2E reservations.\n"
- title: 2.6.  Initiation of New Aggregate Resv Message By Deaggregating Router
  contents:
  - "2.6.  Initiation of New Aggregate Resv Message By Deaggregating Router\n   Upon\
    \ receiving an E2E Resv message on an exterior interface, and\n   having determined\
    \ the appropriate DSCP for the session according to\n   the mapping policy, the\
    \ Deaggregator looks for the corresponding path\n   state for a session with the\
    \ chosen DSCP.  If aggregate Path state\n   exists, but no aggregate Resv state\
    \ exists, the Deaggregator creates\n   a new aggregate Resv.\n   If no aggregate\
    \ Path state exists for the appropriate DSCP, this may\n   be because the Deaggregator\
    \ could not decide earlier the final\n   mapping for this E2E flow and elected\
    \ to not establish Aggregate Path\n   state for all DSCPs.  In that case, the\
    \ Deaggregator should request\n   establishment of the corresponding Aggregate\
    \ Path by sending a E2E\n   PathErr with error code of NEW-AGGREGATE-NEEDED and\
    \ with a DCLASS\n   containing the required DSCP.  This will trigger the Aggregator\
    \ to\n   establish the corresponding Aggregate Path.  Once the Deaggregator\n\
    \   has determined that the aggregate Path state is established, it\n   creates\
    \ a new Aggregate Resv.\n   The FLOW_SPEC of the new Aggregate Resv is set to\
    \ a value not smaller\n   than the requirement of the E2E reservation it is supporting.\
    \  The\n   Aggregate Resv is sent toward the aggregator (i.e., to the previous\n\
    \   hop), using the AGGREGATED-RSVP session and filter specifications\n   defined\
    \ below.  Since the DSCP is in the SESSION object, no DCLASS\n   object is necessary.\
    \  The message should be reliably delivered using\n   the mechanisms in [RFC2961]\
    \ or, alternatively, the CONFIRM object may\n   be used, to assure that the aggregate\
    \ Resv does indeed arrive and is\n   granted.  This enables the deaggregator to\
    \ determine that the\n   requested bandwidth is available to allocate to the E2E\
    \ flows it\n   supports.\n   In order to minimize the occurrence of situations\
    \ where no\n   corresponding Aggregate Reservation is established at the time\
    \ of\n   processing an E2E Resv, and in turn to avoid the delay associated\n \
    \  with the creation of this aggregate reservation, the Deaggregator MAY\n   anticipate\
    \ the current demand and create the Aggregate Reservation\n   before receiving\
    \ E2E Resv messages requiring bandwidth on those\n   aggregate reservations.\n"
- title: 2.7.  Handling of Aggregate Resv Message by Interior Routers
  contents:
  - "2.7.  Handling of Aggregate Resv Message by Interior Routers\n   The aggregate\
    \ Resv message is handled in essentially the same way as\n   defined in [RSVP].\
    \  The Session object contains the address of the\n   deaggregating router (or\
    \ the group address for the session in the\n   case of multicast) and the DSCP\
    \ that has been chosen for the session.\n   The Filterspec object identifies the\
    \ aggregating router.  These\n   routers perform admission control and resource\
    \ allocation as usual\n   and send the aggregate Resv on towards the aggregator.\n"
- title: 2.8.  Handling of E2E Resv Message by Aggregating Router
  contents:
  - "2.8.  Handling of E2E Resv Message by Aggregating Router\n   The receipt of the\
    \ E2E Resv message with a DCLASS Object is the final\n   confirmation to the aggregating\
    \ router of the mapping of the E2E\n   reservation onto an Aggregate Reservation.\
    \  Under normal\n   circumstances, this is the only way it will be informed of\
    \ this\n   association.  It should now forward the E2E Resv to its previous hop,\n\
    \   following normal RSVP processing rules [RSVP].\n"
- title: 2.9.  Removal of E2E Reservation
  contents:
  - "2.9.  Removal of E2E Reservation\n   E2E reservations are removed in the usual\
    \ way via PathTear, ResvTear,\n   timeout, or as the result of an error condition.\
    \  When they are\n   removed, their FLOWSPEC information must also be removed\
    \ from the\n   allocated portion of the aggregate reservation.  This same bandwidth\n\
    \   may be re-used for other traffic in the near future.  When E2E Path\n   messages\
    \ are removed, their SENDER_TSPEC information must also be\n   removed from the\
    \ aggregate Path.\n"
- title: 2.10.  Removal of Aggregate Reservation
  contents:
  - "2.10.  Removal of Aggregate Reservation\n   Should an aggregate reservation go\
    \ away (presumably due to a\n   configuration  change, route change, or policy\
    \ event), the E2E\n   reservations it supports are no longer active.  They must\
    \ be treated\n   accordingly.\n"
- title: 2.11.  Handling of Data On Reserved E2E Flow by Aggregating Router
  contents:
  - "2.11.  Handling of Data On Reserved E2E Flow by Aggregating Router\n   Prior\
    \ to establishment that a given E2E flow is part of a given\n   aggregate, the\
    \ flow's data should be treated as traffic without a\n   reservation by whatever\
    \ policies prevail for such.  Generally, this\n   will mean being given the same\
    \ forwarding behavior as best effort\n   traffic.  However, upon establishing\
    \ that the flow belongs to a given\n   aggregate, the aggregating router is responsible\
    \ for marking any\n   related traffic with the correct DSCP and forwarding it\
    \ in the manner\n   appropriate to traffic on that reservation.  This may imply\n\
    \   forwarding it to a given IP next hop, or piping it down a given link\n   layer\
    \ circuit, tunnel, or MPLS label switched path.\n   The aggregator is responsible\
    \ for performing per-reservation policing\n   on the E2E flows that it is aggregating.\
    \  The aggregator performs\n   metering of traffic belonging to each reservation\
    \ to assess\n   compliance to the token bucket for the corresponding E2E reservation.\n\
    \   Packets which are assessed in compliance are forwarded as mentioned\n   above.\
    \  Packets which are assessed out of compliance must be either\n   dropped, reshaped\
    \ or marked to a different DSCP.  The detailed\n   policing behavior is an aspect\
    \ of the service mapping described in\n   [RFC2998].\n"
- title: 2.12.  Procedures for Multicast Sessions
  contents:
  - "2.12.  Procedures for Multicast Sessions\n   Because of the difficulties of aggregating\
    \ multicast sessions\n   described above, we focus on the aggregation of scheduling\
    \ and\n   classification state in the multicast case.  The main difference\n \
    \  between the multicast and unicast cases is that rather than sending\n   an\
    \ aggregate Path message to the unicast address of a single\n   deaggregating\
    \ router, in the multicast case we send the \"aggregate\"\n   Path message to\
    \ the same group address as the E2E session.  This\n   ensures that the aggregate\
    \ Path message follows the same route as the\n   E2E Path.  This difference between\
    \ unicast and multicast is reflected\n   in the Session objects defined below.\
    \  A consequence of this approach\n   is that we continue to have reservation\
    \ state per multicast session\n   inside the aggregation region.\n   A further\
    \ challenge arises in multicast sessions with heterogeneous\n   receivers.  Consider\
    \ an interior router which must forward packets\n   for a multicast session on\
    \ two interfaces, but has only received a\n   reservation request on one of those\
    \ interfaces.  It receives packets\n   marked with the DSCP chosen for the aggregate\
    \ reservation.  When\n   sending them out the interface which has no installed\
    \ reservation, it\n   has the following options:\n   a) remark those packets to\
    \ best effort before sending them out the\n      interface;\n   b) send the packets\
    \ out the interface with the DSCP chosen for the\n      aggregate reservation.\n\
    \   The first approach suffers from the drawback that it requires nMF\n   classification\
    \ at an interior router in order to recognize the flows\n   whose packets must\
    \ be demoted.  The second approach requires over-\n   reservation of resources\
    \ on the interface on which no reservation was\n   received.  In the absence of\
    \ such over-reservation, the packets sent\n   with the \"wrong\" DSCP would be\
    \ able to degrade the service\n   experienced by packets using that DSCP legitimately.\n\
    \   To make MF classification acceptable in an interior router, it may be\n  \
    \ possible to treat the case of heterogeneous flows as an exception.\n   That\
    \ is, an interior router only needs to be able to recognize those\n   individual\
    \ microflows that have heterogeneous resource needs on the\n   outbound interfaces\
    \ of this router.\n"
- title: 3.  Protocol Elements
  contents:
  - '3.  Protocol Elements

    '
- title: 3.1.  IP Protocol RSVP-E2E-IGNORE
  contents:
  - "3.1.  IP Protocol RSVP-E2E-IGNORE\n   This specification requires the assignment\
    \ of a protocol type RSVP-\n   E2E-IGNORE, whose number is at this point 134.\
    \  This is used only on\n   E2E messages which require a router alert (Path, PathTear,\
    \ and\n   ResvConf), and signifies that the message must be treated one way\n\
    \   when destined to an interior interface, and another way when destined\n  \
    \ to an exterior interface.  The protocol type is swapped by the\n   Aggregator\
    \ from RSVP to RSVP-E2E-IGNORE in E2E Path, PathTear, and\n   ResvConf messages\
    \ when they enter the Aggregation Region.  The\n   protocol type is swapped back\
    \ by the Deaggregator from RSVP-E2E-\n   IGNORE to RSVP in such E2E messages when\
    \ they exit the Aggregation\n   Region.\n"
- title: 3.2.  Path Error Code
  contents:
  - "3.2.  Path Error Code\n   A PathErr code NEW-AGGREGATE-NEEDED is required.  This\
    \ value does not\n   signify that a fatal error has occurred, but that an action\
    \ is\n   required of the aggregating router to avoid an error condition in the\n\
    \   near future.\n"
- title: 3.3.  SESSION Object
  contents:
  - "3.3.  SESSION Object\n   The SESSION object contains two values: the IP Address\
    \ of the\n   aggregate session destination, and the DSCP that it will use on the\n\
    \   E2E data the reservation contains.  For unicast sessions, the session\n  \
    \ destination address is the address of the deaggregating router.  For\n   multicast\
    \ sessions, the session destination is the multicast address\n   of the E2E session\
    \ (or sessions) being aggregated.  The inclusion of\n   the DSCP in the session\
    \ allows for multiple sessions toward the same\n   address to be distinguished\
    \ by their DSCP and queued separately.  It\n   also provides the means for aggregating\
    \ scheduling and classification\n   state.  In the case where a session uses a\
    \ pair of PHBs (e.g., AF11\n   and AF12), the DSCP used should represent the numerically\
    \ smallest\n   PHB (e.g., AF11).  This follows the same naming convention described\n\
    \   in [BRIM].\n   Session types are defined for IPv4 and IPv6 addresses.\n  \
    \ o  IP4 SESSION object: Class = SESSION,\n      C-Type = RSVP-AGGREGATE-IP4\n\
    \        +-------------+-------------+-------------+-------------+\n        |\
    \              IPv4 Session Address (4 bytes)           |\n        +-------------+-------------+-------------+-------------+\n\
    \        | /////////// |    Flags    |  /////////  |     DSCP    |\n        +-------------+-------------+-------------+-------------+\n\
    \   o  IP6 SESSION object: Class = SESSION,\n      C-Type = RSVP-AGGREGATE-IP6\n\
    \        +-------------+-------------+-------------+-------------+\n        |\
    \                                                       |\n        +         \
    \                                              +\n        |                  \
    \                                     |\n        +              IPv6 Session Address\
    \ (16 bytes)          +\n        |                                           \
    \            |\n        +                                                    \
    \   +\n        |                                                       |\n   \
    \     +-------------+-------------+-------------+-------------+\n        | ///////////\
    \ |    Flags    |  /////////  |     DSCP    |\n        +-------------+-------------+-------------+-------------+\n"
- title: 3.4.  SENDER_TEMPLATE Object
  contents:
  - "3.4.  SENDER_TEMPLATE Object\n   The SENDER_TEMPLATE object identifies the aggregating\
    \ router for the\n   aggregate reservation.\n   o  IP4 SENDER_TEMPLATE object:\
    \ Class = SENDER_TEMPLATE,\n      C-Type = RSVP-AGGREGATE-IP4\n        +-------------+-------------+-------------+-------------+\n\
    \        |                IPv4 Aggregator Address (4 bytes)      |\n        +-------------+-------------+-------------+-------------+\n\
    \   o  IP6 SENDER_TEMPLATE object: Class = SENDER_TEMPLATE,\n      C-Type = RSVP-AGGREGATE-IP6\n\
    \        +-------------+-------------+-------------+-------------+\n        |\
    \                                                       |\n        +         \
    \                                              +\n        |                  \
    \                                     |\n        +           IPv6 Aggregator Address\
    \ (16 bytes)          +\n        |                                           \
    \            |\n        +                                                    \
    \   +\n        |                                                       |\n   \
    \     +-------------+-------------+-------------+-------------+\n"
- title: 3.5.  FILTER_SPEC Object
  contents:
  - "3.5.  FILTER_SPEC Object\n   The FILTER_SPEC object identifies the aggregating\
    \ router for the\n   aggregate reservation, and is syntactically identical to\
    \ the\n   SENDER_TEMPLATE object.\n"
- title: 4.  Policies and Algorithms For Predictive Management Of Blocks Of
  contents:
  - "4.  Policies and Algorithms For Predictive Management Of Blocks Of\n    Bandwidth\n\
    \   The exact policies used in determining how much bandwidth should be\n   allocated\
    \ to an aggregate reservation at any given time are beyond\n   the scope of this\
    \ document, and may be proprietary to the service\n   provider in question.  However,\
    \ here we explore some of the issues\n   and suggest approaches.\n   In short,\
    \ the ideal condition is that the aggregate reservation\n   always has enough\
    \ resources to allocate to any E2E reservation that\n   requires its support,\
    \ and never takes too much.  Simply stated, but\n   more difficult to achieve.\
    \  Factors that come into account include\n   significant times in the diurnal\
    \ cycle: one may find that a large\n   number of people start placing calls at\
    \ 8:00 AM, even though the hour\n   from 7:00 to 8:00 is dead calm.  They also\
    \ include recent history: if\n   more people have been  placing calls recently\
    \ than have been\n   finishing them, a prediction of the necessary bandwidth a\
    \ few moments\n   hence may call for more bandwidth than is currently allocated.\n\
    \   Likewise, at the end of a busy period, we may find that the trend\n   calls\
    \ for declining reservation amounts.\n   We recommend a policy something along\
    \ this line.  At any given time,\n   one should expect that the amount of bandwidth\
    \ required for the\n   aggregate reservation is the larger of the following:\n\
    \   (a) a requirement known a priori, such as from history of the diurnal\n  \
    \     cycle at a particular week day and time of day, and\n   (b) the trend line\
    \ over recent history, with 90 or 99% statistical\n       confidence.\n   We further\
    \ expect that changes to that aggregate reservation would be\n   made no more\
    \ often than every few minutes, and ideally perhaps on\n   larger granularity\
    \ such as fifteen minute intervals or hourly.  The\n   finer the granularity,\
    \ the greater the level of signaling required,\n   while the coarser the granularity,\
    \ the greater the chance for error,\n   and the need to recover from that error.\n\
    \   In general, we expect that the aggregate reservation will not ever\n   add\
    \ up to exactly the sum of the reservations it supports, but rather\n   will be\
    \ an integer multiple of some block reservation size, which\n   exceeds that value.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   Numerous security issues pertain to this document;\
    \ for example, the\n   loss of an aggregate reservation to an aggressor causes\
    \ many calls to\n   operate unreserved, and the reservation of a great excess\
    \ of\n   bandwidth may result in a denial of service.  However, these issues\n\
    \   are not confined to this extension: RSVP itself has them.  We believe\n  \
    \ that the security mechanisms in RSVP address these issues as well.\n   One security\
    \ issue specific to RSVP aggregation involves the\n   modification of the IP protocol\
    \ number in RSVP Path messages that\n   traverse an aggregation region.  If that\
    \ field were maliciously\n   modified in a Path message, it would cause the message\
    \ to be ignored\n   by all subsequent devices on its path, preventing reservations\
    \ from\n   being made.  It could even be possible to correct the value before\
    \ it\n   reached the receiver, making it difficult to detect the attack.  In\n\
    \   theory, it might also be possible for a node to modify the IP\n   protocol\
    \ number for non-RSVP messages as well, thus interfering with\n   the operation\
    \ of other protocols.\n   One way to mitigate the risks of malicious modification\
    \ of the IP\n   protocol number is to use an IPSEC authentication header, which\
    \ would\n   ensure that malicious modification of the IP header is detected.\n\
    \   This is a desirable approach but imposes some administrative burden\n   in\
    \ the form of key management for authentication purposes.\n   It is RECOMMENDED\
    \ that implementations of this specification only\n   support modification of\
    \ the IP protocol number for RSVP Path,\n   PathTear, and ResvConf messages. \
    \ That is, a general facility for\n   modification of the IP protocol number SHOULD\
    \ NOT be made available.\n   Network operators deploying routers with RSVP aggregation\
    \ capability\n   should be aware of the risks of inappropriate modification of\
    \ the IP\n   protocol number and should take appropriate steps (physical security,\n\
    \   password protection, etc.) to reduce the risk that a router could be\n   configured\
    \ by an attacker to perform malicious modification of the\n   protocol number.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   Section 1.2 proposes a new protocol type, RSVP-E2E-IGNORE,\
    \ which is\n   used to identify a message that routers in the network core will\
    \ see;\n   further processing of such messages may or may not be required,\n \
    \  depending on the egress interface type, as described in Section 1.2.\n   The\
    \ IANA assigned IP protocol number 134, in accordance with\n   [RFC2780], meeting\
    \ the Standards Track publication criterion.\n   Section 1.4.9 describes the manner\
    \ in which the Router Alert is used\n   in the context of this specification,\
    \ which is essentially a simple\n   counter of the depth of nesting of aggregation.\
    \  The IPv4 Router\n   Alert [RFC2113] has the option simply to ask the router\
    \ to look at\n   the protocol type of the intercepted datagram and decide what\
    \ to do\n   with it; the parameter is additional information to that decision.\n\
    \   The IPv6 Router Alert [RFC2711] turns the parameter into an option\n   sub-type.\
    \  As a result, the IPv6 router alert option may not be used\n   algorithmically\
    \ in the context of the protocol in question.  The IANA\n   assigned a block of\
    \ 32 values (3-35, \"Aggregated Reservation Nesting\n   Level\") which we may\
    \ map to nesting depths 0..31, hoping that 32\n   levels is enough.\n   Section\
    \ 3.2 discusses a new, required path error code.  The IANA has\n   assigned RSVP\
    \ Parameters Error Code 26 to NEW-AGGREGATE-NEEDED.\n   Sections 3.3, 3.4, and\
    \ 3.5 describe extensions to three object\n   classes: Session, Filter Specification,\
    \ and Sender Template.  The\n   IANA has assigned two new common C-Types to be\
    \ specified for the\n   aggregator's address.  RSVP-AGGREGATE-IP4 is C-Type 9\
    \ and RSVP-\n   AGGREGATE-IP6 is C-Type 10.  In adding these C-types to IANA RSVP\n\
    \   Class Names, Class Numbers and Class Types registry, the same\n   numbering\
    \ for them is used in all three Classes, as is done for IPv4\n   and IPv6 address\
    \ tuples in [RSVP].\n"
- title: 7.  Acknowledgments
  contents:
  - "7.  Acknowledgments\n   The authors acknowledge that published documents and\
    \ discussion with\n   several people, notably John Wroclawski, Steve Berson, and\
    \ Andreas\n   Terzis materially contributed to this document.  The design is\n\
    \   influenced by the RSVP tunnels document [TERZIS].\n"
- title: 'APPENDIX 1: Example Signalling Flow For First E2E Flow'
  contents:
  - "APPENDIX 1: Example Signalling Flow For First E2E Flow\n   This Appendix does\
    \ not provide additional specification.  It only\n   illustrates the specification\
    \ detailed above through a possible flow\n   of RSVP signalling messages involved\
    \ in the successful establishment\n   of a unicast E2E reservation which is the\
    \ first between a given pair\n   of Aggregator/Deaggregator.\n           Aggregator\
    \                              Deaggregator\n    E2E Path\n   ---------------->\n\
    \                (1)\n                           E2E Path\n                  \
    \   ------------------------------->\n                                       \
    \                 (2)\n                      E2E PathErr(New-agg-needed, DCLASS=x)\n\
    \                     <-------------------------------\n                     \
    \ E2E PathErr(New-agg-needed, DCLASS=y)\n                     <-------------------------------\n\
    \                (3)\n                           AggPath(DSCP=x)\n           \
    \          ------------------------------->\n                           AggPath(DSCP=y)\n\
    \                     ------------------------------->\n                     \
    \                                   (4)\n                                    \
    \                       E2E Path\n                                           \
    \                ----------->\n                                              \
    \          (5)\n                           AggResv (DSCP=x)\n                \
    \     <-------------------------------\n                           AggResv (DSCP=y)\n\
    \                     <-------------------------------\n               (6)\n \
    \                          AggResvConfirm (DSCP=x)\n                     ------------------------------>\n\
    \                           AggResvConfirm (DSCP=y)\n                     ------------------------------>\n\
    \                                                        (7)\n               \
    \                                            E2E Resv\n                      \
    \                                     <----------\n                          \
    \                              (8)\n                           E2E Resv (DCLASS=x)\n\
    \                     <-----------------------------\n               (9)\n   \
    \    E2E Resv\n   <---------------\n   (1)  Aggregator forwards E2E Path into\
    \ aggregation region after\n        modifying its IP Protocol Number to RSVP-E2E-IGNORE\n\
    \   (2)  Let's assume no Aggregate Path exists.  To be able to accurately\n  \
    \      update the ADSPEC of the E2E Path, the Deaggregator needs the\n       \
    \ ADSPEC of Aggregate PATH.  In this example the Deaggregator\n        elects\
    \ to instruct the Aggregator to set up Aggregate Path\n        states for the\
    \ two supported DSCPs by sending a New-Agg-Needed\n        PathErr code for each\
    \ DSCP.\n   (3)  The Aggregator follows the request from the Deaggregator and\n\
    \        signals an Aggregate Path for both DSCPs.\n   (4)  The Deaggregator takes\
    \ into account the information contained in\n        the ADSPEC from both Aggregate\
    \ Path and updates the E2E Path\n        ADSPEC accordingly.  The Deaggregator\
    \ also modifies the E2E Path\n        IP Protocol Number to RSVP before forwarding\
    \ it.\n   (5)  In this example, the Deaggregator elects to immediately proceed\n\
    \        with establishment of Aggregate Reservations for both DSCPs.  In\n  \
    \      effect, the Deaggregator can be seen as anticipating the actual\n     \
    \   demand of E2E reservations so that resources are available on\n        Aggregate\
    \ Reservations when the E2E Resv requests arrive in\n        order to speed up\
    \ establishment of E2E reservations.  Assume\n        also that the Deaggregator\
    \ includes the optional Resv Confirm\n        Request in these Aggregate Resv.\n\
    \   (6)  The Aggregator merely complies with the received ResvConfirm\n      \
    \  Request and returns the corresponding Aggregate ResvConfirm.\n   (7)  The Deaggregator\
    \ has explicit confirmation that both Aggregate\n        Resv are established.\n\
    \   (8)  On receipt of the E2E Resv, the Deaggregator applies the mapping\n  \
    \      policy defined by the network administrator to map the E2E Resv\n     \
    \   onto an Aggregate Reservation.  Let's assume that this policy is\n       \
    \ such that the E2E reservation is to be mapped onto the Aggregate\n        Reservation\
    \ with DSCP=x.  The Deaggregator knows that an\n        Aggregate Reservation\
    \ is in place for the corresponding DSCP\n        since (7).  The Deaggregator\
    \ performs admission control of the\n        E2E Resv onto the Aggregate Resv\
    \ for DSCP=x.  Assuming that the\n        Aggregate Resv for DSCP=x had been established\
    \ with sufficient\n        bandwidth to support the E2E Resv, the Deaggregator\
    \ adjusts its\n        counter tracking the unused bandwidth on the Aggregate\n\
    \        Reservation and forwards the E2E Resv to the Aggregator\n        including\
    \ a DCLASS object conveying the selected mapping onto\n        DSCP=x.\n   (9)\
    \  The Aggregator records the mapping of the E2E Resv onto DSCP=x.\n        The\
    \ Aggregator removes the DCLASS object and forwards the E2E\n        Resv towards\
    \ the sender.\n"
- title: 'APPENDIX 2: Example Signalling Flow For Subsequent E2E Flow Without'
  contents:
  - "APPENDIX 2: Example Signalling Flow For Subsequent E2E Flow Without\n       \
    \     Reservation Resizing\n   This Appendix does not provide additional specification.\
    \  It only\n   illustrates the specification detailed above through a possible\
    \ flow\n   of RSVP signalling messages involved in the successful establishment\n\
    \   of a unicast E2E reservation which follows other E2E reservations\n   between\
    \ a given pair of Aggregator/Deaggregator.  This flow could be\n   imagined as\
    \ following the flow of messages illustrated in Appendix 1.\n           Aggregator\
    \                              Deaggregator\n    E2E Path\n   ---------------->\n\
    \                (10)\n                           E2E Path\n                 \
    \      ------------------------------->\n                                    \
    \                  (11)\n                                                    \
    \     E2E Path\n                                                         ----------->\n\
    \                                                          E2E Resv\n        \
    \                                                 <-----------\n             \
    \                                         (12)\n                           E2E\
    \ Resv (DCLASS=x)\n                     <-----------------------------\n     \
    \            (13)\n       E2E Resv\n   <---------------\n   (10) Aggregator forwards\
    \ E2E Path into aggregation region after\n        modifying its IP Protocol Number\
    \ to RSVP-E2E-IGNORE\n   (11) Because previous E2E reservations have been established,\
    \ let's\n        assume that Aggregate Path exists for all supported DSCPs.  The\n\
    \        Deaggregator takes into account the information contained in the\n  \
    \      ADSPEC from the Aggregate Paths and updates the E2E Path ADSPEC\n     \
    \   accordingly.  The Deaggregator also modifies the E2E Path IP\n        Protocol\
    \ Number to RSVP before forwarding it.\n   (12) On receipt of the E2E Resv, the\
    \ Deaggregator applies the mapping\n        policy defined by the network administrator\
    \ to map the E2E Resv\n        onto an Aggregate Reservation.  Let's assume that\
    \ this policy is\n        such that the E2E reservation is to be mapped onto the\
    \ Aggregate\n        Reservation with DSCP=x.  Because previous E2E reservations\
    \ have\n        been established, let's assume that an Aggregate Reservation is\n\
    \        in place for DSCP=x.  The Deaggregator performs admission\n        control\
    \ of the E2E Resv onto the Aggregate Resv for DSCP=x.\n        Assuming that the\
    \ Aggregate Resv for DSCP=x has sufficient\n        unused bandwidth to support\
    \ the new E2E Resv, the Deaggregator\n        then adjusts its counter tracking\
    \ the unused bandwidth on the\n        Aggregate Reservation and forwards the\
    \ E2E Resv to the\n        Aggregator including a DCLASS object conveying the\
    \ selected\n        mapping onto DSCP=x.\n   (13) The Aggregator records the mapping\
    \ of the E2E Resv onto DSCP=x.\n        The Aggregator removes the DCLASS object\
    \ and forwards the E2E\n        Resv towards the sender.\n"
- title: 'APPENDIX 3: Example Signalling Flow For Subsequent E2E Flow With'
  contents:
  - "APPENDIX 3: Example Signalling Flow For Subsequent E2E Flow With\n          \
    \  Reservation Resizing\n   This Appendix does not provide additional specification.\
    \  It only\n   illustrates the specification detailed above through a possible\
    \ flow\n   of RSVP signalling messages involved in the successful establishment\n\
    \   of a unicast E2E reservation which follows other E2E reservations\n   between\
    \ a given pair of Aggregator/Deaggregator.  This flow could be\n   imagined as\
    \ following the flow of messages illustrated in Appendix 2.\n                \
    \ Aggregator                        Deaggregator\n    E2E Path\n   ---------------->\n\
    \                    (14)\n                           E2E Path\n             \
    \          ------------------------------->\n                                \
    \                       (15)\n                                               \
    \            E2E Path\n                                                      \
    \     ----------->\n                                                         \
    \  E2E Resv\n                                                           <-----------\n\
    \                                                       (16)\n               \
    \         AggResv (DSCP=x, increased Bw)\n                       <-------------------------------\n\
    \                   (17)\n                       AggResvConfirm (DSCP=x, increased\
    \ Bw)\n                       ------------------------------>\n              \
    \                                         (18)\n                          E2E\
    \ Resv (DCLASS=x)\n                       <-----------------------------\n   \
    \                (19)\n       E2E Resv\n   <---------------\n   (14) Aggregator\
    \ forwards E2E Path into aggregation region after\n        modifying its IP Protocol\
    \ Number to RSVP-E2E-IGNORE\n   (15) Because previous E2E reservations have been\
    \ established, let's\n        assume that Aggregate Path exists for all supported\
    \ DSCPs.  The\n        Deaggregator takes into account the information contained\
    \ in the\n        ADSPEC from the Aggregate Paths and updates the E2E Path ADSPEC\n\
    \        accordingly.  The Deaggregator also modifies the E2E Path IP\n      \
    \  Protocol Number to RSVP before forwarding it.\n   (16) On receipt of the E2E\
    \ Resv, the Deaggregator applies the mapping\n        policy defined by the network\
    \ administrator to map the E2E Resv\n        onto an Aggregate Reservation.  Let's\
    \ assume that this policy is\n        such that the E2E reservation is to be mapped\
    \ onto the Aggregate\n        Reservation with DSCP=x.  Because previous E2E reservations\
    \ have\n        been established, let's assume that an Aggregate Reservation is\n\
    \        in place for DSCP=x.  The Deaggregator performs admission\n        control\
    \ of the E2E Resv onto the Agg Resv for DSCP=x.  Let's\n        assume that the\
    \ Aggregate Resv for DSCP=x does NOT have\n        sufficient unused bandwidth\
    \ to support the new E2E Resv.  The\n        Deaggregator then attempts to increase\
    \ the Aggregate Reservation\n        bandwidth for DSCP=x by sending a new Aggregate\
    \ Resv with an\n        increased bandwidth sufficient to accommodate all the\
    \ E2E\n        reservations already mapped onto that Aggregate reservation plus\n\
    \        the new E2E reservation plus possibly some additional spare\n       \
    \ bandwidth in anticipation of additional E2E reservations to\n        come. \
    \ Assume also that the Deaggregator includes the optional\n        Resv Confirm\
    \ Request in these Aggregate Resv.\n   (17) The Aggregator merely complies with\
    \ the received ResvConfirm\n        Request and returns the corresponding Aggregate\
    \ ResvConfirm.\n   (18) The Deaggregator has explicit confirmation that the Aggregate\n\
    \        Resv has been successfully increased.  The Deaggregator performs\n  \
    \      again admission control of the E2E Resv onto the increased\n        Aggregate\
    \ Reservation for DSCP=x.  Assuming that the increased\n        Aggregate Reservation\
    \ for DSCP=x now has sufficient unused\n        bandwidth and resources to support\
    \ the new E2E Resv, the\n        Deaggregator then adjusts its counter tracking\
    \ the unused\n        bandwidth on the Aggregate Reservation and forwards the\
    \ E2E Resv\n        to the Aggregator including a DCLASS object conveying the\n\
    \        selected mapping onto DSCP=x.\n   (19) The Aggregator records the mapping\
    \ of the E2E Resv onto DSCP=x.\n        The Aggregator removes the DCLASS object\
    \ and forwards the E2E\n        Resv towards the sender.\n"
- title: References
  contents:
  - "References\n   [CSZ]        Clark, D., S. Shenker, and L. Zhang, \"Supporting\
    \ Real-\n                Time Applications in an Integrated Services Packet\n\
    \                Network:  Architecture and Mechanism,\" in Proc.\n          \
    \      SIGCOMM'92, September 1992.\n   [IP]         Postel, J., \"Internet Protocol\"\
    , STD 5, RFC 791,\n                September 1981.\n   [HOSTREQ]    Braden, R.,\
    \ \"Requirements for Internet hosts -\n                communication layers\"\
    , STD 3, RFC 1122, October 1989.\n   [DSFIELD]    Nichols, K., Blake, S., Baker,\
    \ F. and D. Black,\n                \"Definition of the Differentiated Services\
    \ Field (DS\n                Field) in the IPv4 and IPv6 Headers\", RFC 2474,\
    \ December\n                1998.\n   [PRINCIPLES] Carpenter, B., \"Architectural\
    \ Principles of the\n                Internet\", RFC 1958, June 1996.\n   [ASSURED]\
    \    Heinanen, J, Baker, F., Weiss, W. and J. Wroclawski,\n                \"\
    Assured Forwarding PHB Group\", RFC 2597, June 1999.\n   [BROKER]     Jacobson,\
    \ V., Nichols K. and L. Zhang, \"A Two-bit\n                Differentiated Services\
    \ Architecture for the Internet\",\n                RFC 2638, June 1999.\n   [BRIM]\
    \       Brim, S., Carpenter, B. and F. LeFaucheur, \"Per Hop\n               \
    \ Behavior Identification Codes\", RFC 2836, May 2000.\n   [RSVP]       Braden,\
    \ R., Zhang, L., Berson, S., Herzog, S. and S.\n                Jamin, \"Resource\
    \ Reservation Protocol (RSVP) Version 1\n                Functional Specification\"\
    , RFC 2205, September 1997.\n   [TERZIS]     Terzis, A., Krawczyk, J., Wroclawski,\
    \ J. and L. Zhang,\n                \"RSVP Operation Over IP Tunnels\", RFC 2746,\
    \ January\n                2000.\n   [DCLASS]     Bernet, Y., \"Format of the\
    \ RSVP DCLASS Object\", RFC\n                2996, November 2000.\n   [INTEGRITY]\
    \  Baker, F., Lindell, B. and M. Talwar, \"RSVP\n                Cryptographic\
    \ Authentication\", RFC 2747, January 2000.\n   [RFC2998]    Bernet Y., Ford,\
    \ P., Yavatkar, R., Baker, F., Zhang, L.,\n                Speer, M., Braden,\
    \ R., Davie, B., Wroclawski, J. and E.\n                Felstaine, \"Integrated\
    \ Services Operation Over Diffserv\n                Networks\", RFC 2998, November\
    \ 2000.\n   [RFC2961]    Berger, L., Gan, D., Swallow, G., Pan, P. and F.\n  \
    \              Tommasi, \"RSVP Refresh Reduction Extensions\", RFC 2961,\n   \
    \             April 2001.\n   [RFC2780]    Bradner, S. and V. Paxson, \"IANA Allocation\
    \ Guidelines\n                For Values In the Internet Protocol and Related\n\
    \                Headers\", RFC 2780, March 2000.\n   [RFC2711]    Partridge,\
    \ C. and A. Jackson, \"IPv6 Router Alert\n                Option\", RFC 2711,\
    \ October 1999.\n   [RFC2113]    Katz, D. \"IP Router Alert Option\", RFC 2113,\
    \ February\n                1997.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Fred Baker\n   Cisco Systems\n   1121 Via Del Rey\n  \
    \ Santa Barbara, CA, 93117  USA\n   Phone: (408) 526-4257\n   EMail: fred@cisco.com\n\
    \   Carol Iturralde\n   Cisco Systems\n   250 Apollo Drive\n   Chelmsford MA,\
    \ 01824 USA\n   Phone: 978-244-8532\n   EMail: cei@cisco.com\n   Francois Le Faucheur\n\
    \   Cisco Systems\n   Domaine Green Side\n   400, Avenue de Roumanille\n   06410\
    \ Biot - Sophia Antipolis\n   France\n   Phone: +33.4.97.23.26.19\n   EMail: flefauch@cisco.com\n\
    \   Bruce Davie\n   Cisco Systems\n   250 Apollo Drive\n   Chelmsford MA,01824\
    \ USA\n   Phone: 978-244-8921\n   EMail: bdavie@cisco.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2001).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
