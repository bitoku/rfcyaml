- title: __initial_text__
  contents:
  - '               GMPLS - Communication of Alarm Information

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes an extension to Generalized MPLS (Multi-\n\
    \   Protocol Label Switching) signaling to support communication of alarm\n  \
    \ information.  GMPLS signaling already supports the control of alarm\n   reporting,\
    \ but not the communication of alarm information.  This\n   document presents\
    \ both a functional description and GMPLS-RSVP\n   specifics of such an extension.\
    \  This document also proposes\n   modification of the RSVP ERROR_SPEC object.\n\
    \   This document updates RFC 3473, \"Generalized Multi-Protocol Label\n   Switching\
    \ (GMPLS) Signaling Resource ReserVation Protocol-Traffic\n   Engineering (RSVP-TE)\
    \ Extensions\", through the addition of new,\n   optional protocol elements. \
    \ It does not change, and is fully\n   backward compatible with, the procedures\
    \ specified in RFC 3473.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Background .................................................3\n  \
    \ 2. Alarm Information Communication .................................4\n   3.\
    \ GMPLS-RSVP Details ..............................................5\n      3.1.\
    \ ALARM_SPEC Objects .........................................5\n           3.1.1.\
    \ IF_ID ALARM_SPEC (and ERROR_SPEC) TLVs ..............5\n           3.1.2. Procedures\
    \ ..........................................9\n           3.1.3. Error Codes and\
    \ Values .............................10\n           3.1.4. Backwards Compatibility\
    \ ............................11\n      3.2. Controlling Alarm Communication ...........................11\n\
    \           3.2.1. Updated Admin_Status Object ........................11\n  \
    \         3.2.2. Procedures .........................................11\n    \
    \  3.3. Message Formats ...........................................12\n      3.4.\
    \ Relationship to GMPLS UNI .................................13\n      3.5. Relationship\
    \ to GMPLS E-NNI ...............................14\n   4. Security Considerations\
    \ ........................................14\n   5. IANA Considerations ............................................15\n\
    \      5.1. New RSVP Object ...........................................15\n  \
    \    5.2. New Interface ID Types ....................................16\n    \
    \  5.3. New Registry for Admin-Status Object Bit Fields ...........16\n      5.4.\
    \ New RSVP Error Code .......................................16\n   6. References\
    \ .....................................................17\n      6.1. Normative\
    \ References ......................................17\n      6.2. Informative\
    \ References ....................................17\n   7. Acknowledgments ................................................18\n\
    \   8. Contributors ...................................................18\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   GMPLS signaling provides mechanisms that can be used to\
    \ control the\n   reporting of alarms associated with a label switched path (LSP).\n\
    \   This support is provided via Administrative Status Information\n   [RFC3471]\
    \ and the Admin_Status object [RFC3473].  These mechanisms\n   only control if\
    \ alarm reporting is inhibited.  No provision is made\n   for communication of\
    \ alarm information within GMPLS.\n   The extension described in this document\
    \ defines how the alarm\n   information associated with a GMPLS LSP may be communicated\
    \ along the\n   path of the LSP.  Communication both upstream and downstream is\n\
    \   supported.  The value in communicating such alarm information is that\n  \
    \ this information is then available at every node along the LSP for\n   display\
    \ and diagnostic purposes.  Alarm information may also be\n   useful in certain\
    \ traffic protection scenarios, but such uses are out\n   of the scope of this\
    \ document.  Alarm communication is supported via\n   a new object, new error/alarm\
    \ information TLVs, and a new\n   Administrative Status Information bit.\n   The\
    \ communication of alarms, as described in this document, is\n   controllable\
    \ on a per-LSP basis.  Such communication may be useful\n   within network configurations\
    \ where not all nodes support\n   communication to a user for reporting of alarms\
    \ and/or communication\n   is needed to support specific applications.  The support\
    \ of this\n   functionality is optional.\n   The communication of alarms within\
    \ GMPLS does not imply any\n   modification in behavior of processing of alarms,\
    \ or for the\n   communication of alarms outside of GMPLS.  Additionally, the\n\
    \   extension described in this document is not intended to replace any\n   (existing)\
    \ data plane fault propagation techniques.\n   The key words \"MUST\", \"MUST\
    \ NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\"\
    , \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted\
    \ as described in [RFC2119].\n"
- title: 1.1.  Background
  contents:
  - "1.1.  Background\n   Problems with data plane state can often be detected by\
    \ associated\n   data plane hardware components.  Such data plane problems are\n\
    \   typically filtered based on elapsed time and local policy.  Problems\n   that\
    \ pass the filtering process are normally raised as alarms.  These\n   alarms\
    \ are available for display to operators.  They also may be\n   collected centrally\
    \ through means that are out of the scope of this\n   document.\n   Not all data\
    \ plane problems cause the LSP to be immediately torn\n   down.  Further, there\
    \ may be a desire, particularly in optical\n   transport networks, to retain an\
    \ LSP and communicate relevant alarm\n   information even when the data plane\
    \ state has failed completely.\n   Although error information can be reported\
    \ using PathErr, ResvErr,\n   and Notify messages, these messages typically indicate\
    \ a problem in\n   signaling state and can only report one problem at a time.\
    \  This\n   makes it hard to correlate all of the problems that may be associated\n\
    \   with a single LSP and to allow an operator examining the status of an\n  \
    \ LSP to view a full list of current problems.  This situation is\n   exacerbated\
    \ by the absence of any way to communicate that a problem\n   has been resolved\
    \ and a corresponding alarm cleared.\n   The extensions defined in this document\
    \ allow an operator or a\n   software component to obtain a full list of current\
    \ alarms associated\n   with all of the resources used to support an LSP.  The\
    \ extensions\n   also ensure that this list is kept up-to-date and synchronized\
    \ with\n   the real alarm status in the network.  Finally, the extensions make\n\
    \   the list available at every node traversed by an LSP.\n"
- title: 2.  Alarm Information Communication
  contents:
  - "2.  Alarm Information Communication\n   A new object is introduced to carry alarm\
    \ information details.  The\n   details of alarm information are much like the\
    \ error information\n   carried in the existing ERROR_SPEC objects.  For this\
    \ reason the\n   communication of alarm information uses a format that is based\
    \ on the\n   communication of error information.\n   The new object introduced\
    \ to carry alarm information details is\n   called an ALARM_SPEC object.  This\
    \ object has the same format as the\n   ERROR_SPEC object, but uses a new C-Num\
    \ to avoid the semantics of\n   error processing.  Also, additional TLVs are defined\
    \ for the IF_ID\n   ALARM_SPEC objects to support the communication of information\n\
    \   related to a specific alarm.  These TLVs may also be useful when\n   included\
    \ in ERROR_SPEC objects, e.g., when the ERROR_SPEC object is\n   carried within\
    \ a Notify message.\n   While the details of alarm information are like the details\
    \ of\n   existing error communication, the semantics of processing differ.\n \
    \  Alarm information will typically relate to changes in data plane\n   state,\
    \ without changes in control state.  Alarm information will\n   always be associated\
    \ with in-place LSPs.  Such information will also\n   typically be most useful\
    \ to operators and applications other than\n   control plane protocol processing.\
    \  Finally, while error information\n   is communicated within PathErr, ResvErr,\
    \ and Notify messages\n   [RFC3473], alarm information will be carried within\
    \ Path and Resv\n   messages.\n   Path messages are used to carry alarm information\
    \ to downstream\n   nodes, and Resv messages are used to carry alarm information\
    \ to\n   upstream nodes.  The intent of sending alarm information both\n   upstream\
    \ and downstream is to provide the same visibility to alarm\n   information at\
    \ any point along an LSP.  The communication of multiple\n   alarms associated\
    \ with an LSP is supported.  In this case, multiple\n   ALARM_SPEC objects will\
    \ be carried in the Path or Resv messages.\n   The addition of alarm information\
    \ to Path and Resv messages is\n   controlled via a new Administrative Status\
    \ Information bit.\n   Administrative Status Information is carried in the Admin_Status\n\
    \   object.\n"
- title: 3.  GMPLS-RSVP Details
  contents:
  - "3.  GMPLS-RSVP Details\n   This section provides the GMPLS-RSVP [RFC3473] specification\
    \ for\n   communication of alarm information.  The communication of alarm\n  \
    \ information is OPTIONAL.  This section applies to nodes that support\n   communication\
    \ of alarm information.\n"
- title: 3.1.  ALARM_SPEC Objects
  contents:
  - "3.1.  ALARM_SPEC Objects\n   The ALARM_SPEC objects use the same format as the\
    \ ERROR_SPEC object,\n   but with class number of 198 (assigned by IANA in the\
    \ form 11bbbbbb,\n   per Section 3.1.4).\n   o  Class = 198, C-Type = 1\n    \
    \  Reserved.  (C-Type value defined for ERROR_SPEC, but is not\n      defined\
    \ for use with ALARM_SPEC.)\n   o  Class = 198, C-Type = 2\n      Reserved.  (C-Type\
    \ value defined for ERROR_SPEC, but is not\n      defined for use with ALARM_SPEC.)\n\
    \   o  IPv4 IF_ID ALARM_SPEC object: Class = 198, C-Type = 3\n      Definition\
    \ same as IPv4 IF_ID ERROR_SPEC [RFC3473].\n   o  IPv6 IF_ID ALARM_SPEC object:\
    \ Class = 198, C-Type = 4\n      Definition same as IPv6 IF_ID ERROR_SPEC [RFC3473].\n"
- title: 3.1.1.  IF_ID ALARM_SPEC (and ERROR_SPEC) TLVs
  contents:
  - "3.1.1.  IF_ID ALARM_SPEC (and ERROR_SPEC) TLVs\n   The following new TLVs are\
    \ defined for use with the IPv4 and IPv6\n   IF_ID ALARM_SPEC objects.  They may\
    \ also be used with the IPv4 and\n   IPv6 IF_ID ERROR_SPEC objects.  See [RFC3471]\
    \ Section 9.1.1 for the\n   original definition of these values.  Note the length\
    \ provided below\n   is for the total TLV.  All TLVs defined in this section are\
    \ OPTIONAL.\n   The defined TLVs MUST follow any interface identifying TLVs. \
    \ No\n   rules apply to the relative ordering of the TLVs defined in this\n  \
    \ section.\n      Type    Length     Description\n      ----------------------------------\n\
    \      512       8        REFERENCE_COUNT\n      513       8        SEVERITY\n\
    \      514       8        GLOBAL_TIMESTAMP\n      515       8        LOCAL_TIMESTAMP\n\
    \      516    variable    ERROR_STRING\n   The Reference Count TLV has the following\
    \ format:\n       0                   1                   2                  \
    \ 3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   \
    \   |              Type             |             Length            |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                        Reference Count                        |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      Reference\
    \ Count: 32 bits\n         The number of times this alarm has been repeated as\
    \ determined\n         by the reporting node.  This field MUST NOT be set to zero,\
    \ and\n         TLVs received with this field set to zero MUST be ignored.\n \
    \     Only one Reference Count TLV may be included in an object.\n   The Severity\
    \ TLV has the following format:\n       0                   1                \
    \   2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |              Type             |             Length            |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \            Reserved                   |Impact |   Severity    |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Reserved: 20 bits\n         This field is reserved.  It MUST be set to\
    \ zero on generation,\n         MUST be ignored on receipt, and MUST be forwarded\
    \ unchanged and\n         unexamined by transit nodes.\n      Impact: 4 bits\n\
    \         Indicates the impact of the alarm indicated in the TLV.  See\n     \
    \    [M.20] for a general discussion on classification of failures.\n        \
    \ The following values are defined in this document.  The details\n         of\
    \ the semantics may be found in [M.20].\n          Value     Definition\n    \
    \      -----     ---------------------\n            0       Unspecified impact\n\
    \            1       Non-Service Affecting (Data traffic not interrupted)\n  \
    \          2       Service Affecting (Data traffic is interrupted)\n      Severity:\
    \ 8 bits\n         Indicates the impact of the alarm indicated in the TLV.  See\n\
    \         [RFC3877] and [M.3100] for more information on severity.  The\n    \
    \     following values are defined in this document.  The details of\n       \
    \  the semantics may be found in [RFC3877] and [M.3100]:\n          Value    \
    \ Definition\n          -----     ----------\n            0       Cleared\n  \
    \          1       Indeterminate\n            2       Critical\n            3\
    \       Major\n            4       Minor\n            5       Warning\n      Only\
    \ one Severity TLV may be included in an object.\n   The Global Timestamp TLV\
    \ has the following format:\n       0                   1                   2\
    \                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |              Type             |             Length            |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                        Global Timestamp                       |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Global Timestamp: 32 bits\n         An unsigned fixed-point integer that\
    \ indicates the number of\n         seconds since 00:00:00 UT on 1 January 1970\
    \ according to the\n         clock on the node that originates this TLV.  This\
    \ time MAY\n         include leap seconds if they are used by the local clock\
    \ and\n         SHOULD contain the same time value as used by the node when the\n\
    \         alarm is reported through other systems (such as within the\n      \
    \   Management Plane) if global time is used in those reports.\n      Only one\
    \ Global Timestamp TLV may be included in an object.\n   The Local Timestamp TLV\
    \ has the following format:\n       0                   1                   2\
    \                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |              Type             |             Length            |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                        Local Timestamp                        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Local Timestamp: 32 bits\n         Number of seconds reported by the local\
    \ system clock at the\n         time the associated alarm was detected on the\
    \ node that\n         originates this TLV.  This number is expected to be meaningful\n\
    \         in the context of the originating node.  For example, it may\n     \
    \    indicate the number of seconds since the node rebooted or may\n         be\
    \ a local representation of an unsynchronized real-time clock.\n      Only one\
    \ Local Timestamp TLV may be included in an object.\n   The Error String TLV has\
    \ the following format:\n       0                   1                   2    \
    \               3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |              Type             |             Length            |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                                                               |\n      //  \
    \        Error String      (NULL padded display string)      //\n      |     \
    \                                                          |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Error String: 32 bits minimum (variable)\n         A string of characters\
    \ in US-ASCII, representing the type of\n         error/alarm.  This string is\
    \ padded to the next largest 4-byte\n         boundary using null characters.\
    \  Null padding is not required\n         when the string is 32-bit aligned. \
    \ The contents of error\n         string are implementation dependent.  See the\
    \ condition types\n         listed in Appendices of [GR833] for a list of example\
    \ strings.\n         Note length includes padding.\n      Multiple Error String\
    \ TLVs may be included in an object.\n"
- title: 3.1.2.  Procedures
  contents:
  - "3.1.2.  Procedures\n   This section applies to nodes that support the communication\
    \ of alarm\n   information.  ALARM_SPEC objects are carried in Path and Resv\n\
    \   messages.  Multiple ALARM_SPEC objects MAY be present.\n   Nodes that support\
    \ the extensions defined in this document SHOULD\n   store any alarm information\
    \ from received ALARM_SPEC objects for\n   future use.  All ALARM_SPEC objects\
    \ received in Path messages SHOULD\n   be passed unmodified downstream in the\
    \ corresponding Path messages.\n   All ALARM_SPEC objects received in Resv messages\
    \ SHOULD be passed\n   unmodified upstream in the corresponding Resv messages.\
    \  ALARM_SPEC\n   objects are merged in transmitted Resv messages by including\
    \ a copy\n   of all ALARM_SPEC objects received in corresponding Resv Messages.\n\
    \   To advertise local alarm information, a node generates an ALARM_SPEC\n   object\
    \ for each alarm and adds it to both the Path and Resv messages\n   for the impacted\
    \ LSP.\n   In all cases, appropriate Error Node Address, Error Code, and Error\n\
    \   Values MUST be set (see below for a discussion on Error Code and\n   Error\
    \ Values).  As the InPlace and NotGuilty flags only have meaning\n   in ERROR_SPEC\
    \ objects, they SHOULD NOT be set.  TLVs SHOULD be\n   included in the ALARM_SPEC\
    \ object to identify the interface, if any,\n   associated with the alarm.  The\
    \ TLVs defined in [RFC3471] for\n   identifying interfaces in the IF_ID ERROR_SPEC\
    \ object [RFC3473]\n   SHOULD be used for this purpose, but note that TLVs type\
    \ 4 and 5\n   (component interfaces) are deprecated by [RFC4201] and SHOULD NOT\
    \ be\n   used.  TLVs SHOULD also be included to indicate the severity\n   (Severity\
    \ TLV), the time (Global Timestamp and/or Local Timestamp\n   TLVs), and a (brief)\
    \ string (Error String TLV) associated with the\n   alarm.  The reference count\
    \ TLV MAY also be included to indicate the\n   number of times an alarm has been\
    \ repeated at the reporting node.\n   ALARM_SPEC objects received from other nodes\
    \ are not impacted by the\n   addition of local ALARM_SPEC objects, i.e., they\
    \ continue to be\n   processed as described above.  The choice of which alarm\
    \ or alarms to\n   advertise and which to omit is a local policy matter, and may\
    \ be\n   configurable by the user.\n   There are two ways to indicate time.  A\
    \ global timestamp TLV is used\n   to provide an absolute time reference for the\
    \ occurrence of an alarm.\n   The local timestamp TLV is used to provide time\
    \ reference for the\n   occurrence of an alarm that is relative to other information\n\
    \   advertised by the node.  The global timestamp SHOULD be used on nodes\n  \
    \ that maintain an absolute time reference.  Both timestamp TLVs MAY be\n   used\
    \ simultaneously.\n   Note, ALARM_SPEC objects SHOULD NOT be added to the Path\
    \ and Resv\n   states of LSPs that are in \"alarm communication inhibited\" state.\n\
    \   ALARM_SPEC objects MAY be added to the state of LSPs that are in an\n   \"\
    administratively down\" state.  These states are indicated by the I\n   and A\
    \ bits of the Admin_Status object; see Section 3.2.\n   To remove local alarm\
    \ information, a node simply removes the matching\n   locally generated ALARM_SPEC\
    \ objects from the outgoing Path and Resv\n   messages.  A node MAY modify a locally\
    \ generated ALARM_SPEC object.\n   Normal refresh and trigger message processing\
    \ applies to Path or Resv\n   messages that contain ALARM_SPEC objects.  Note\
    \ that changes in\n   ALARM_SPEC objects from one message to the next may include\
    \ a\n   modification in the contents of a specific ALARM_SPEC object, or a\n \
    \  change in the number of ALARM_SPEC objects present.  All changes in\n   ALARM_SPEC\
    \ objects SHOULD be processed as trigger messages.\n   Failure to follow the above\
    \ directives, in particular the ones\n   labeled \"SHOULD\" and \"SHOULD NOT\"\
    , may result in the alarm\n   information not being properly or fully communicated.\n"
- title: 3.1.3.  Error Codes and Values
  contents:
  - "3.1.3.  Error Codes and Values\n   The Error Codes and Values used in ALARM_SPEC\
    \ objects are the same as\n   those used in ERROR_SPEC objects.  New Error Code\
    \ values for use with\n   both ERROR_SPEC and ALARM_SPEC objects may be assigned\
    \ to support\n   alarm types defined by other standards.\n   In this document\
    \ we define one new Error Code.  The Error Code uses\n   the value 31 and is referred\
    \ to as \"Alarms\".  The values used in the\n   Error Values field when the Error\
    \ Code is \"Alarms\" are the same as\n   the values defined in the IANAItuProbableCause\
    \ Textual Convention of\n   IANA-ITU-ALARM-TC-MIB in the Alarm MIB [RFC3877].\
    \  Note that these\n   values are managed by IANA; see http://www.iana.org.\n"
- title: 3.1.4.  Backwards Compatibility
  contents:
  - "3.1.4.  Backwards Compatibility\n   The support of ALARM_SPEC objects is OPTIONAL.\
    \  Non-supporting nodes\n   will (according to the rules defined in [RFC2205])\
    \ pass the objects\n   through the node unmodified, because the ALARM_SPEC object\
    \ has a\n   C-Num of the form 11bbbbbb.\n   This allows alarm information to be\
    \ collected and examined in a\n   network built from a collection of nodes some\
    \ of which support the\n   communication of alarm information, and some of which\
    \ do not.\n"
- title: 3.2.  Controlling Alarm Communication
  contents:
  - "3.2.  Controlling Alarm Communication\n   Alarm information communication is\
    \ controlled via Administrative\n   Status Information as carried in the Admin_Status\
    \ object.  A new bit\n   is defined, called the I bit, that indicates when alarm\
    \ communication\n   is to be inhibited.  The definition of this bit does not modify\
    \ the\n   procedures defined in Section 7 of [RFC3473].\n"
- title: 3.2.1.  Updated Admin_Status Object
  contents:
  - "3.2.1.  Updated Admin_Status Object\n   The format of the Admin_Status object\
    \ is updated to include the I\n   bit:\n       0                   1         \
    \          2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |            Length             | Class-Num(196)|   C-Type (1)  |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |R|\
    \                        Reserved                   |I| |T|A|D|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Inhibit Alarm Communication (I): 1 bit\n         When set, indicates that\
    \ alarm communication is disabled for\n         the LSP and that nodes SHOULD\
    \ NOT add local alarm information.\n      See Section 7.1 of [RFC3473] for the\
    \ definition of the remaining\n      bits.\n"
- title: 3.2.2.  Procedures
  contents:
  - "3.2.2.  Procedures\n   The I bit may be set and cleared using the procedures\
    \ defined in\n   Sections 7.2 and 7.3 of [RFC3473].  A node that receives (or\n\
    \   generates) an Admin_Status object with the A or I bits set (1),\n   SHOULD\
    \ remove all locally generated alarm information from the\n   matching LSP's outgoing\
    \ Path and Resv messages.  When a node receives\n   (or generates) an Admin_Status\
    \ object with the A and I bits clear (0)\n   and there is local alarm information\
    \ present, it SHOULD add the local\n   alarm information to the matching LSP's\
    \ outgoing Path and Resv\n   messages.\n   The processing of non-locally generated\
    \ ALARM_SPEC objects MUST NOT\n   be impacted by the contents of the Admin_Status\
    \ object; that is,\n   received ALARM_SPEC objects MUST be forwarded unchanged\
    \ regardless of\n   the received or transmitted settings of the I and A bits.\
    \  Note that,\n   per [RFC3473], the absence of the Admin_Status object is equivalent\n\
    \   to receiving an object containing values all set to zero (0).\n   I bit related\
    \ processing behavior MAY be overridden locally based on\n   configuration.\n\
    \   When generating Notify messages for LSPs with the I bit set, the TLVs\n  \
    \ described in this document MAY be added to the ERROR_SPEC object sent\n   in\
    \ the Notify message.\n"
- title: 3.3.  Message Formats
  contents:
  - "3.3.  Message Formats\n   This section presents the RSVP message-related formats\
    \ as modified by\n   this document.  The formats specified in [RFC3473] served\
    \ as the\n   basis of these formats.  The objects are listed in suggested\n  \
    \ ordering.\n   The format of a Path message is as follows:\n <Path Message> ::=\
    \       <Common Header> [ <INTEGRITY> ]\n                          [ [<MESSAGE_ID_ACK>\
    \ | <MESSAGE_ID_NACK>] ... ]\n                          [ <MESSAGE_ID> ]\n   \
    \                       <SESSION> <RSVP_HOP>\n                          <TIME_VALUES>\n\
    \                          [ <EXPLICIT_ROUTE> ]\n                          <LABEL_REQUEST>\n\
    \                          [ <PROTECTION> ]\n                          [ <LABEL_SET>\
    \ ... ]\n                          [ <SESSION_ATTRIBUTE> ]\n                 \
    \         [ <NOTIFY_REQUEST> ]\n                          [ <ADMIN_STATUS> ]\n\
    \                          [ <POLICY_DATA> ... ]\n                          [\
    \ <ALARM_SPEC> ... ]\n                          <sender descriptor>\n <sender\
    \ descriptor> is not modified by this document.\n The format of a Resv message\
    \ is as follows:\n <Resv Message> ::=       <Common Header> [ <INTEGRITY> ]\n\
    \                          [ [<MESSAGE_ID_ACK> | <MESSAGE_ID_NACK>] ... ]\n  \
    \                        [ <MESSAGE_ID> ]\n                          <SESSION>\
    \ <RSVP_HOP>\n                          <TIME_VALUES>\n                      \
    \    [ <RESV_CONFIRM> ]  [ <SCOPE> ]\n                          [ <NOTIFY_REQUEST>\
    \ ]\n                          [ <ADMIN_STATUS> ]\n                          [\
    \ <POLICY_DATA> ... ]\n                          [ <ALARM_SPEC> ... ]\n      \
    \                    <STYLE> <flow descriptor list>\n <flow descriptor list> is\
    \ not modified by this document.\n"
- title: 3.4.  Relationship to GMPLS UNI
  contents:
  - "3.4.  Relationship to GMPLS UNI\n   [RFC4208] defines how GMPLS may be used in\
    \ an overlay model to\n   provide a user-to-network interface (UNI).  In this\
    \ model,\n   restrictions may be applied to the information that is signaled\n\
    \   between an edge-node and a core-node.  This restriction allows the\n   core\
    \ network to limit the information that is visible outside of the\n   core.  This\
    \ restriction may be made for confidentiality, privacy, or\n   security reasons.\
    \  It may also be made for operational reasons, for\n   example, if the information\
    \ is only applicable within the core\n   network.\n   The extensions described\
    \ in this document are candidates for\n   filtering as described in [RFC4208].\
    \  In particular, the following\n   observations apply.\n   o  An ingress or egress\
    \ core-node MAY filter alarms from the GMPLS\n      core to a client-node UNI\
    \ LSP.  This may be to protect information\n      about the core network, or to\
    \ indicate that the core network is\n      performing or has completed recovery\
    \ actions for the GMPLS LSP.\n   o  An ingress or egress core-node MAY modify\
    \ alarms from the GMPLS\n      core when sending to a client-node UNI LSP.  This\
    \ may facilitate\n      the UNI client's ability to understand the failure and\
    \ its effect\n      on the data plane, and enable the UNI client to take corrective\n\
    \      actions in a more appropriate manner.\n   o  Similarly, an egress core-node\
    \ MAY choose not to request alarm\n      reporting on Path messages that it sends\
    \ downstream to the overlay\n      network.\n"
- title: 3.5.  Relationship to GMPLS E-NNI
  contents:
  - "3.5.  Relationship to GMPLS E-NNI\n   GMPLS may be used at the external network-to-network\
    \ interface\n   (E-NNI); see [ASON-APPL].  At this interface, restrictions may\
    \ be\n   applied to the information that is signaled between an egress and an\n\
    \   ingress core-node.\n   This restriction allows the ingress core network to\
    \ limit the\n   information that is visible outside of its core network.  This\n\
    \   restriction may be made for confidentiality, privacy, or security\n   reasons.\
    \  It may also be made for operational reasons, for example,\n   if the information\
    \ is only applicable within the core network.\n   The extensions described in\
    \ this document are candidates for\n   filtering as described in [ASON-APPL].\
    \  In particular, the following\n   observations apply.\n   o  An ingress or egress\
    \ core-node MAY filter internal core network\n      alarms.  This may be to protect\
    \ information about the internal\n      network or to indicate that the core network\
    \ is performing or has\n      completed recovery actions for this LSP.\n   o \
    \ An ingress or egress core-node MAY modify internal core network\n      alarms.\
    \  This may facilitate the peering E-NNI (i.e., the egress\n      core-node) to\
    \ understand the failure and its effect on the data\n      plane, and take corrective\
    \ actions in a more appropriate manner or\n      prolong the generated alarms\
    \ upstream/downstream as appropriated.\n   o  Similarly, an egress/ingress core-node\
    \ MAY choose not to request\n      alarm reporting on Path messages that it sends\
    \ downstream.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   Some operators may consider alarm information\
    \ as sensitive.  To\n   support environments where this is the case, implementations\
    \ SHOULD\n   allow the user to disable the generation of ALARM_SPEC objects, or\
    \ to\n   filter or correlate them at domain boundaries.\n   This document introduces\
    \ no additional security considerations.  See\n   [RFC3473] for relevant security\
    \ considerations.\n   It may be noted that if the security considerations of [RFC3473]\
    \ are\n   breached, alarm information may be spoofed.  Such spoofing would be\n\
    \   at most annoying and cause slight degradation of control plane\n   performance\
    \ since the details are provided for information only and\n   do not result in\
    \ protocol actions beyond the exchange of messages to\n   convey the information.\
    \  If the protocol security is able to be\n   breached sufficiently to allow spoofing\
    \ of alarm information then\n   considerably more interesting and exciting damage\
    \ can be caused by\n   spoofing other elements of the protocol messages.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   IANA administered assignment of new values for namespaces\
    \ defined in\n   this document and reviewed in this section.\n"
- title: 5.1.  New RSVP Object
  contents:
  - "5.1.  New RSVP Object\n   IANA made the following assignments in the \"Class\
    \ Names, Class\n   Numbers, and Class Types\" section of the \"RSVP PARAMETERS\"\
    \ registry\n   located at http://www.iana.org/assignments/rsvp-parameters.\n \
    \  A new class named ALARM_SPEC (198) was created in the 11bbbbbb range\n   with\
    \ following values\n   o  Class = 198, C-Type = 1\n      RFC 4783\n      Reserved.\
    \ (C-Type value defined for ERROR_SPEC, but is not\n      defined for use with\
    \ ALARM_SPEC.)\n   o  Class = 198, C-Type = 2\n      RFC 4783\n      Reserved.\
    \ (C-Type value defined for ERROR_SPEC, but is not\n      defined for use with\
    \ ALARM_SPEC.)\n   o  IPv4 IF_ID ALARM_SPEC object: Class = 198, C-Type = 3\n\
    \      RFC 4783\n      Definition same as IPv4 IF_ID ERROR_SPEC [RFC3473].\n \
    \  o  IPv6 IF_ID ALARM_SPEC object: Class = 198, C-Type = 4\n      RFC 4783\n\
    \      Definition same as IPv6 IF_ID ERROR_SPEC [RFC3473].\n   The ALARM_SPEC\
    \ object uses the Error Code and Error Values from the\n   ERROR_SPEC object.\n"
- title: 5.2.  New Interface ID Types
  contents:
  - "5.2.  New Interface ID Types\n   IANA made the following assignments in the \"\
    Interface_ID Types\"\n   section of the \"GMPLS Signaling Parameters\" registry\
    \ located at\n   http://www.iana.org/assignments/gmpls-sig-parameters.\n     \
    \ 512 8 REFERENCE_COUNT     RFC 4783\n      513 8 SEVERITY            RFC 4783\n\
    \      514 8 GLOBAL_TIMESTAMP    RFC 4783\n      515 8 LOCAL_TIMESTAMP     RFC\
    \ 4783\n      516 variable ERROR_STRING RFC 4783\n"
- title: 5.3.  New Registry for Admin-Status Object Bit Fields
  contents:
  - "5.3.  New Registry for Admin-Status Object Bit Fields\n   IANA created a new\
    \ section titled \"Administrative Status Information\n   Flags\" in the \"GMPLS\
    \ Signaling Parameters\" registry located at\n   http://www.iana.org/assignments/gmpls-sig-parameters\
    \ and made the\n   following assignments:\n   Value       Name               \
    \               Reference\n   ----------- -------------------------------- -----------------\n\
    \   0x80000000  Reflect (R)                      [RFC3473/RFC3471]\n   0x00000010\
    \  Inhibit Alarm Communication (I)  RFC 4783\n   0x00000004  Testing (T)     \
    \                 [RFC3473/RFC3471]\n   0x00000002  Administratively down (A)\
    \        [RFC3473/RFC3471]\n   0x00000001  Deletion in progress (D)         [RFC3473/RFC3471]\n"
- title: 5.4.  New RSVP Error Code
  contents:
  - "5.4.  New RSVP Error Code\n   IANA made the following assignments in the \"Error\
    \ Codes and Values\"\n   section of the \"RSVP PARAMETERS\" registry located at\n\
    \   http://www.iana.org/assignments/rsvp-parameters.\n   31  Alarms          \
    \                     RFC 4783\n       The Error Value sub-codes for this Error\
    \ Code have values and\n       meanings identical to the values and meanings defined\
    \ in the\n       IANAItuProbableCause Textual Convention of IANA-ITU-ALARM-TC-MIB\n\
    \       in the Alarm MIB [RFC3877].  Note that these values are already\n    \
    \   managed the IANA.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC2119]   Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n               Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2205]   Braden, R., Ed., Zhang, L., Berson, S., Herzog, S., and\n\
    \               S. Jamin, \"Resource ReSerVation Protocol (RSVP) --\n        \
    \       Version 1 Functional Specification\", RFC 2205, September\n          \
    \     1997.\n   [RFC3471]   Berger, L., Ed., \"Generalized Multi-Protocol Label\n\
    \               Switching (GMPLS) Signaling Functional Description\", RFC\n  \
    \             3471, January 2003.\n   [RFC3473]   Berger, L., Ed., \"Generalized\
    \ Multi-Protocol Label\n               Switching (GMPLS) Signaling Resource ReserVation\n\
    \               Protocol-Traffic Engineering (RSVP-TE) Extensions\", RFC\n   \
    \            3473, January 2003.\n   [RFC3877]   Chisholm, S. and D. Romascanu,\
    \ \"Alarm Management\n               Information Base (MIB)\", RFC 3877, September\
    \ 2004.\n   [M.3100]    ITU Recommendation M.3100, \"Generic Network Information\n\
    \               Model\", 1995.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [RFC4201]   Kompella, K., Rekhter, Y., and L.\
    \ Berger, \"Link Bundling\n               in MPLS Traffic Engineering (TE)\",\
    \ RFC 4201, October\n               2005.\n   [M.20]      ITU-T, \"MAINTENANCE\
    \  PHILOSOPHY  FOR TELECOMMUNICATION\n               NETWORKS\", Recommendation\
    \ M.20, October 1992.\n   [GR833]     Bellcore, \"Network Maintenance: Network\
    \ Element and\n               Transport Surveillance Messages\" (GR-833-CORE),\
    \ Issue 3,\n               February 1999.\n   [RFC4208]   Swallow, G., Drake,\
    \ J., Ishimatsu, H., and Y. Rekhter,\n               \"Generalized Multiprotocol\
    \ Label Switching (GMPLS) User-\n               Network Interface (UNI): Resource\
    \ ReserVation Protocol-\n               Traffic Engineering (RSVP-TE) Support\
    \ for the Overlay\n               Model\", RFC 4208, October 2005.\n   [ASON-APPL]\
    \ Papadimitriou, D., et al., \"Generalized MPLS (GMPLS)\n               RSVP-TE\
    \ signaling usage in support of Automatically\n               Switched Optical\
    \ Network (ASON)\", Work in Progress, July\n               2005.\n"
- title: 7.  Acknowledgments
  contents:
  - "7.  Acknowledgments\n   Valuable comments and input were received from a number\
    \ of people,\n   including Wes Doonan, Bert Wijnen for the DISMAN reference, and\
    \ Tom\n   Petch for getting the DISMAN WG interactions started.  We also thank\n\
    \   David Black, Lars Eggert, Russ Housley, Dan Romascanu, and Magnus\n   Westerlund\
    \ for their valuable comments.\n"
- title: 8.  Contributors
  contents:
  - "8.  Contributors\n   Contributors are listed in alphabetical order:\n   Deborah\
    \ Brungard\n   AT&T Labs, Room MT D1-3C22\n   200 Laurel Avenue\n   Middletown,\
    \ NJ 07748, USA\n   Phone:  (732) 420-1573\n   EMail:  dbrungard@att.com\n   Igor\
    \ Bryskin                               Adrian Farrel\n   Movaz Networks, Inc.\
    \                       Old Dog Consulting\n   7926 Jones Branch Drive\n   Suite\
    \ 615\n   McLean VA, 22102, USA                      Phone: +44 (0) 1978 860944\n\
    \   EMail:  ibryskin@movaz.com                 EMail: adrian@olddog.co.uk\n  \
    \ Dimitri Papadimitriou (Alcatel)            Arun Satyanarayana\n   Francis Wellesplein\
    \ 1                      Cisco Systems, Inc\n   B-2018 Antwerpen, Belgium    \
    \              170 West Tasman Dr.\n                                         \
    \     San Jose, CA  95134 USA\n   Phone:  +32 3 240-8491                     Phone:\
    \ +1 408 853-3206\n   EMail:  dimitri.papadimitriou@alcatel.be   EMail: asatyana@cisco.com\n"
- title: Editor's Address
  contents:
  - "Editor's Address\n   Lou Berger\n   LabN Consulting, L.L.C.\n   Phone:  +1 301-468-9228\n\
    \   EMail:  lberger@labn.net\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2006).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST,\n   AND THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES,\n   EXPRESS OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT\n   THE USE OF THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY\n   IMPLIED WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR\n   PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
